import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_12 = relay.const(-0.147225, dtype = "float32")#candidate|12|()|const|float32
var_13 = relay.var("var_13", dtype = "float32", shape = (3, 5, 5))#candidate|13|(3, 5, 5)|var|float32
bop_14 = relay.floor_divide(const_12.astype('float32'), var_13.astype('float32')) # shape=(3, 5, 5)
output = relay.Tuple([bop_14,])
output2 = relay.Tuple([bop_14,])
func_20 = relay.Function([var_13,], output)
mod['func_20'] = func_20
mod = relay.transform.InferType()(mod)
mutated_mod['func_20'] = func_20
mutated_mod = relay.transform.InferType()(mutated_mod)
var_21 = relay.var("var_21", dtype = "float32", shape = (3, 5, 5))#candidate|21|(3, 5, 5)|var|float32
func_20_call = mutated_mod.get_global_var('func_20')
call_22 = func_20_call(var_21)
output = call_22
func_23 = relay.Function([var_21], output)
mutated_mod['func_23'] = func_23
mutated_mod = relay.transform.InferType()(mutated_mod)
var_69 = relay.var("var_69", dtype = "uint32", shape = (5, 13, 8))#candidate|69|(5, 13, 8)|var|uint32
var_70 = relay.var("var_70", dtype = "uint32", shape = (5, 13, 8))#candidate|70|(5, 13, 8)|var|uint32
bop_71 = relay.bitwise_and(var_69.astype('uint32'), relay.reshape(var_70.astype('uint32'), relay.shape_of(var_69))) # shape=(5, 13, 8)
output = relay.Tuple([bop_71,])
output2 = relay.Tuple([bop_71,])
func_78 = relay.Function([var_69,var_70,], output)
mod['func_78'] = func_78
mod = relay.transform.InferType()(mod)
mutated_mod['func_78'] = func_78
mutated_mod = relay.transform.InferType()(mutated_mod)
func_78_call = mutated_mod.get_global_var('func_78')
var_80 = relay.var("var_80", dtype = "uint32", shape = (5, 13, 8))#candidate|80|(5, 13, 8)|var|uint32
var_81 = relay.var("var_81", dtype = "uint32", shape = (5, 13, 8))#candidate|81|(5, 13, 8)|var|uint32
call_79 = func_78_call(var_80,var_81,)
output = call_79
func_82 = relay.Function([var_80,var_81,], output)
mutated_mod['func_82'] = func_82
mutated_mod = relay.transform.InferType()(mutated_mod)
var_245 = relay.var("var_245", dtype = "float64", shape = (6, 11, 15))#candidate|245|(6, 11, 15)|var|float64
var_246 = relay.var("var_246", dtype = "float64", shape = (6, 11, 15))#candidate|246|(6, 11, 15)|var|float64
bop_247 = relay.equal(var_245.astype('bool'), relay.reshape(var_246.astype('bool'), relay.shape_of(var_245))) # shape=(6, 11, 15)
uop_252 = relay.acos(bop_247.astype('float64')) # shape=(6, 11, 15)
const_255 = relay.const([[[8.848089,-4.732922,-8.208662,-4.718643,-2.196998,-1.868473,-4.677644,-5.939392,-5.256384,-7.460432,8.452258,-8.123301,-4.478025,0.589560,9.619558],[1.886653,2.869621,-4.609666,0.302545,5.419517,3.549136,-3.480676,-5.104895,-2.557987,-1.905620,0.522948,9.064968,-2.912426,-7.767346,3.085990],[2.629847,4.717488,-0.663824,-2.916452,-1.420678,-6.571837,-8.288983,-6.188681,3.689536,0.365283,8.843801,0.357732,-2.962824,-8.274726,8.320125],[1.146704,-7.137233,6.775401,-0.986685,-0.603044,2.357743,-4.417577,3.635619,-2.997298,6.520590,-5.044515,-9.485213,5.490452,-5.570888,-3.888663],[3.901063,-9.464771,-9.974104,4.369343,4.228425,5.710304,-7.031751,-2.682702,-4.877469,-0.839527,5.494911,-2.828176,-3.927125,-8.771382,4.750691],[-9.953210,-0.577270,-3.507417,2.503954,5.668262,-5.197179,5.683859,-2.877990,-2.867082,3.078163,-9.470124,-5.428466,-0.429126,-2.716804,2.177106],[8.484558,9.314836,-5.749824,-0.432521,2.398027,-5.020158,2.172537,-8.432490,-0.666968,-7.875361,5.191099,-6.013461,-6.483855,-2.264236,1.703439],[-3.394581,7.953633,5.021882,-7.337944,0.728689,6.612457,2.037826,-7.180526,3.822979,-6.938346,-4.339975,-7.646227,3.526984,6.615482,-6.577257],[5.647321,-4.880864,-5.870871,-0.180745,9.154066,-3.912141,-6.983797,8.946586,3.641028,4.556456,3.247168,9.575917,-9.143525,-0.573404,-1.969828],[-8.604982,3.478807,-0.312347,-9.808884,-6.988387,2.060830,5.784475,-6.687354,-7.334489,9.488555,-2.572255,4.648325,-5.040748,-1.576871,7.909074],[7.379006,0.572026,-2.287271,-5.482312,-1.903928,7.909823,6.247927,2.185991,5.410098,2.523860,4.953169,5.372544,7.453285,-1.366117,-3.744374]],[[-7.695719,-8.493285,0.105399,-7.103130,1.156018,-8.123310,-0.177087,6.607974,-4.180742,5.975598,7.021118,1.898325,2.748489,4.810071,-8.198350],[3.233682,6.729695,-0.551685,5.394113,4.525849,-1.627013,3.519830,5.696654,-7.783457,5.750883,-5.365086,4.158251,-6.739865,-9.684348,-7.023882],[4.064568,-6.447821,9.730819,1.207776,0.675743,-2.392652,4.917377,-9.983051,-9.862146,-1.909885,-0.846246,3.286617,-4.713729,-1.616053,8.307494],[8.920639,-8.498860,1.515385,8.077800,-7.051434,3.808008,-2.072282,-8.915872,-9.772503,3.542755,2.242745,0.413742,5.465907,-7.042414,-2.486089],[9.307066,-7.546321,1.203045,9.388279,6.016537,4.509290,-8.865072,0.446937,-4.878834,-2.522668,-6.267459,6.767993,-3.063020,6.316791,-3.925748],[-3.545152,6.143504,-0.890983,-0.843466,3.301350,9.685699,5.017017,-9.147652,4.310016,-4.532410,7.011851,4.705936,-2.282545,4.096227,-4.963092],[9.526072,1.797122,2.603695,-9.839992,-0.324900,4.958047,-2.271086,3.858021,0.636203,-0.531635,-3.701790,-1.536216,-1.537441,3.612646,-1.121476],[-0.841567,-0.489056,5.089216,6.820956,-6.122386,6.671444,5.883427,-7.409670,3.961461,4.838365,9.784482,4.248822,3.409649,-5.757535,5.263060],[-6.507027,-6.549048,-0.286115,3.132417,7.110329,6.644570,3.462952,1.589869,8.618142,-4.819709,-8.664466,0.467390,0.051433,8.171984,3.094807],[4.484836,-1.532989,4.647328,1.037229,-7.113480,-9.838731,0.593349,8.391265,4.113843,8.463497,9.223793,5.381144,8.828269,-2.878322,-1.061339],[-3.531070,1.177879,1.889614,5.726516,1.011032,-0.470527,9.823782,-9.427461,-0.954338,2.452405,3.441325,2.596941,2.275330,9.432608,0.578377]],[[-3.646450,9.797571,4.579504,-1.671634,9.022262,-6.445144,4.222761,-9.708045,-0.911674,2.771432,-5.321440,7.944427,3.424865,3.838842,-5.794896],[-5.221537,-8.583817,-8.918837,-1.807323,-7.370191,4.450394,8.741478,-3.687404,-7.916056,-7.908507,-7.360988,-8.511671,-3.494042,1.892659,-5.980979],[5.633954,-0.004045,8.176595,0.239512,2.129134,0.082986,-8.548049,9.256425,-1.965002,-0.952312,8.999823,-1.727785,-1.399152,3.820399,-9.024385],[2.245921,-8.004085,5.116008,-5.944191,8.380989,-5.000228,-5.897975,-3.560641,0.757282,1.262365,4.486065,-6.071373,-3.794070,9.518125,-6.882198],[-7.023904,7.184024,1.602439,-0.174477,2.543537,4.458882,-3.312686,-1.440262,0.636856,-8.775101,2.512410,6.969792,6.224886,-9.199196,7.595437],[-5.669407,-6.081833,-9.033764,-9.649432,-8.048957,2.670903,7.442496,2.017616,-0.104466,7.720824,-3.622796,-9.056600,-0.172395,1.903689,-0.157946],[-6.009993,-7.084152,-0.240899,-4.169852,4.701429,-7.652309,8.085342,1.431902,-1.342312,5.141546,-0.753095,-4.067130,-9.360970,-7.210668,-0.398221],[-7.452994,3.969982,5.889537,-9.945018,-1.629451,-8.602174,-3.844130,-4.913802,2.034250,8.150697,-1.412860,-6.419111,-1.726831,3.330260,-2.713328],[-3.255120,-1.426804,-5.197826,9.661226,-4.085295,-8.315759,7.778988,-6.892641,-8.128387,-5.292593,-0.184757,2.852638,9.466001,7.614023,-8.168484],[-2.724467,7.122943,-3.860962,3.701854,-2.742466,0.143331,-7.055091,3.886767,-0.865628,-0.313108,8.712513,9.375884,3.115810,-6.251984,-7.982749],[4.966275,3.460755,1.799742,-0.142653,-7.173122,-1.392765,0.113880,-4.968790,4.779758,8.583203,4.621620,1.941766,9.045189,7.190500,0.009806]],[[4.349761,2.297812,9.558546,-1.900893,6.554275,-0.747596,9.716821,-6.509490,-2.072060,-3.282880,-8.914371,-1.785849,7.978232,-8.750287,-5.338015],[-5.650072,-7.864924,-6.406506,-7.639069,6.255613,6.668419,-3.060003,-7.747331,-0.537324,-5.878875,-9.170420,-4.920152,-2.550586,-2.824257,2.117087],[7.727787,-1.341063,0.134792,7.128803,-2.643739,8.266721,4.615197,-1.767066,-5.546474,-9.482257,2.423179,2.576882,-3.260415,1.748648,7.786361],[1.172877,-4.629223,-7.707595,-0.091234,-0.567734,2.062201,0.746601,6.666137,-0.431849,-0.862147,-5.288986,5.259248,-1.143337,-4.221165,-5.851442],[-4.479263,-7.359928,-4.726383,-6.482903,-6.508454,5.064470,-9.084599,-0.915208,-0.065185,3.986421,-3.706751,-5.232280,-7.773416,3.687083,9.196303],[-6.641242,9.736316,-0.985081,4.267718,-0.827502,0.646517,7.015273,-2.815896,8.947011,-3.523136,-8.572664,7.166613,-0.292701,3.445921,-0.665008],[-7.610447,-5.986780,9.856737,2.239059,4.122842,-8.188190,4.428625,-3.678805,-1.709819,-9.196971,-0.841373,2.654631,0.116585,1.680624,9.108533],[0.175330,-8.919220,0.591453,6.693555,1.031230,-0.502205,5.509979,6.946159,-8.811689,-4.375673,0.996854,2.364769,-7.750568,-7.145238,7.707948],[0.941403,3.833814,-4.246960,8.455423,0.313207,-7.855014,-5.600467,3.101334,3.293446,1.078312,-2.498612,-1.591886,2.240782,3.251043,4.032682],[5.079452,8.832079,-6.908478,3.879492,9.324343,-5.815282,4.259742,-5.472917,5.266139,-0.364834,0.857160,2.992738,-5.747589,-2.681125,-9.990696],[-9.272132,-1.288341,6.761278,1.741596,-1.862176,8.927863,-0.985499,5.070323,-0.679689,-3.169556,-4.252797,4.221181,2.117471,-5.385760,5.881060]],[[6.282147,9.754469,-4.824879,7.912965,1.323495,-3.219409,-1.514923,1.622601,7.216838,-4.257526,-2.733774,6.356359,-8.820589,9.861469,-3.325708],[-9.513430,-4.622070,5.355723,-0.071898,-7.451228,-7.573460,-9.015125,7.402920,0.395298,3.211949,-3.282808,-2.625081,-8.492271,0.287382,3.107279],[-8.464802,1.516659,6.394681,6.766598,0.839120,-8.750576,5.060117,0.726206,-6.421458,3.116883,-3.346907,-3.859295,-9.468183,-6.099619,-7.964097],[9.675102,4.244430,-4.433923,-7.910713,-4.755763,3.452416,5.563574,5.798955,-4.977191,7.620384,-4.182210,9.742047,-8.931433,3.371200,5.110247],[0.870162,-8.030834,-4.694640,8.058143,4.765849,-0.219049,-7.152398,6.988413,-9.846449,-5.642663,5.396059,-8.226649,9.234110,-5.793145,4.369382],[-6.684317,9.731241,5.171404,7.094022,-0.474467,-5.716138,-2.730456,-4.299899,-7.751097,5.510838,9.188693,4.016998,8.064979,-2.629246,5.602056],[-7.162333,-2.374619,8.316556,8.127124,4.445513,6.398174,-9.161900,-1.117659,9.378179,-2.873100,1.912996,6.385879,6.864245,9.268269,8.239250],[1.776652,9.325905,2.220742,1.535029,2.629965,-7.065360,-2.677076,-0.693109,7.455713,8.562201,-4.677396,6.161077,-5.982353,9.478456,8.868465],[-3.133648,-9.806269,-8.283345,-1.016071,-7.500375,-9.691455,-8.498238,7.351931,-5.755668,-8.197442,-5.874864,-7.368237,5.672531,-2.306285,7.593001],[3.054138,-2.479090,8.052832,5.663746,-7.977146,5.239254,-0.658719,1.150552,3.763439,-5.720547,-0.677401,-4.473946,8.280343,6.410339,-5.660837],[7.833506,-9.737393,7.365349,-7.687284,-9.446289,-1.934004,-9.760157,1.498463,5.931951,6.045954,7.964942,-5.575645,-0.352745,4.850826,-8.179107]],[[-9.570951,1.922208,9.602422,-7.864251,4.852814,0.850717,0.481449,-5.027715,7.468804,0.200893,2.202807,-0.690230,-2.984359,4.384531,-5.455885],[-7.539406,0.655981,-9.552956,-5.369618,4.154196,7.601592,-5.099386,-0.008445,6.939356,-6.562264,-5.777461,4.313752,8.840897,8.209314,8.439627],[-7.864266,3.454972,0.148259,5.456127,-6.248571,3.951172,5.291898,-3.443272,-3.697682,0.988985,-5.346086,0.847735,9.384830,-7.297852,8.219063],[-5.377122,2.701384,-0.033165,6.613985,-8.956901,-7.888294,3.544432,2.673961,8.898115,-4.204356,-7.299837,-6.532769,-5.605054,9.071240,-0.946401],[0.710428,-0.495520,-3.304271,2.996752,-9.022310,-5.858052,-9.747974,-1.978616,7.025991,1.107249,6.973165,4.218848,4.976362,5.616765,-8.211318],[-8.862292,-6.157762,-0.109018,2.720782,2.867670,8.894571,-0.392876,5.822325,-7.292102,-0.578922,-3.639433,2.191907,5.769884,-5.689930,0.902298],[-9.070778,-7.745499,6.201700,-4.500171,-3.931950,-3.004352,0.514437,0.229321,-8.484443,2.105947,-7.379308,-0.218517,4.042659,-2.711428,-1.480011],[-3.511636,0.765605,5.105062,9.935331,9.964874,7.423433,-1.396919,-6.098009,-6.514076,3.866599,3.424905,0.142165,6.942497,4.711875,-0.158336],[-1.055771,3.197736,7.138690,-4.132660,-2.979602,4.045694,5.459581,-7.052359,1.240754,-2.606411,-4.104975,-2.226638,5.299200,2.346360,-3.259410],[-2.614565,-3.991650,-7.548130,9.896871,9.178867,3.870045,9.605383,-9.755148,-3.872187,-0.326135,-2.355330,5.217960,8.807454,-2.829666,7.392622],[-4.162520,9.896418,8.714043,7.148407,-8.396102,-7.774273,2.612807,4.913295,1.050862,1.472607,-2.583899,6.250216,4.187805,2.813361,2.019847]]], dtype = "float64")#candidate|255|(6, 11, 15)|const|float64
bop_256 = relay.maximum(uop_252.astype('uint64'), relay.reshape(const_255.astype('uint64'), relay.shape_of(uop_252))) # shape=(6, 11, 15)
func_78_call = mod.get_global_var('func_78')
func_82_call = mutated_mod.get_global_var('func_82')
const_266 = relay.const([6,-10,-9,-1,-9,-9,-9,-4,1,-4,4,4,-4,2,-4,6,-6,-2,9,9,-6,2,-7,-6,2,-9,-2,6,10,5,-4,-3,5,-5,-9,-2,-5,2,-3,-10,-8,1,4,7,5,7,3,2,-5,2,-3,9,-9,2,1,6,5,-1,-5,4,-2,-3,-10,3,-2,-9,1,5,-1,3,10,-1,-7,5,-1,-5,-9,8,-1,-5,5,-10,-2,-8,3,-4,1,10,-8,-1,2,-1,-4,10,-9,-2,9,-3,-8,-5,-10,-6,4,8,-8,10,9,-3,-10,2,-10,-4,-6,-3,5,3,-6,-8,-4,-2,-7,6,-4,1,-4,1,-5,4,-9,-4,-4,2,8,10,-6,6,-5,-1,1,-10,5,8,6,1,-8,2,6,2,3,7,4,-5,8,-7,10,-4,1,-4,6,4,2,8,9,-1,-1,2,-4,6,6,10,3,2,-8,2,-4,9,-2,6,-6,4,7,-7,-6,4,-6,-10,2,2,-2,3,-1,-4,9,6,8,7,7,-10,-4,-5,-1,-9,8,-3,8,-8,10,1,3,9,7,-1,-9,-5,5,5,-6,-1,8,7,-1,4,-7,1,4,3,5,6,-5,6,3,-8,-8,5,4,-1,-9,4,-1,7,-6,-5,-6,-4,-3,3,-6,7,1,-9,6,-7,4,-10,-8,-8,-9,5,5,-6,-4,4,-9,3,5,-2,9,-5,-1,-9,1,-3,-2,6,2,8,1,5,5,10,7,8,-3,10,-7,7,6,-10,10,8,10,-5,7,2,7,1,-6,-9,-3,7,10,10,3,6,8,5,-9,-10,2,10,6,1,-4,2,-1,-9,-4,9,-1,-3,1,10,10,-8,-1,-10,-4,10,-3,-5,-5,9,3,9,3,4,1,3,5,-6,2,5,8,3,-8,-10,-3,2,-7,2,6,5,2,-1,-1,-3,-2,8,2,5,-10,-4,-4,-8,9,2,-6,3,4,2,10,8,-4,5,-10,7,-5,-2,7,-1,-10,2,-7,3,-10,5,-4,3,1,-5,8,10,5,4,4,10,6,9,8,7,10,-9,6,2,2,6,-1,5,8,8,5,-5,2,6,-9,10,-4,-4,3,-8,5,-4,10,-10,1,10,6,8,-1,-9,-9,2,10,-6,3,-7,-5,3,-10,-6,3,-6,-3,-8,-1,7,-8,3,-4,-10,-10,3,5,3,-1,8,-4,2,1,4,-6,1,-9,-1,-3,9,-5,-1,10,-10,10,4,6,-1,-5,8,5,7,-4,-6,9,-10,-10,9,-4,1,-8,-8,-3,1,4,-1,-1,-1,-7,1,2,2,-2,-2,-9,10,9,4,-7,-10,-4,-7,9,9,-5,-2,4,9,-7,4,-5,5,-2,-6], dtype = "uint32")#candidate|266|(520,)|const|uint32
call_265 = relay.TupleGetItem(func_78_call(relay.reshape(const_266.astype('uint32'), [5, 13, 8]), relay.reshape(const_266.astype('uint32'), [5, 13, 8]), ), 0)
call_267 = relay.TupleGetItem(func_82_call(relay.reshape(const_266.astype('uint32'), [5, 13, 8]), relay.reshape(const_266.astype('uint32'), [5, 13, 8]), ), 0)
var_272 = relay.var("var_272", dtype = "float64", shape = (6, 11, 15))#candidate|272|(6, 11, 15)|var|float64
bop_273 = relay.logical_or(const_255.astype('bool'), relay.reshape(var_272.astype('bool'), relay.shape_of(const_255))) # shape=(6, 11, 15)
bop_280 = relay.bitwise_or(uop_252.astype('uint64'), relay.reshape(bop_247.astype('uint64'), relay.shape_of(uop_252))) # shape=(6, 11, 15)
output = relay.Tuple([bop_256,call_265,const_266,bop_273,bop_280,])
output2 = relay.Tuple([bop_256,call_267,const_266,bop_273,bop_280,])
func_292 = relay.Function([var_245,var_246,var_272,], output)
mod['func_292'] = func_292
mod = relay.transform.InferType()(mod)
mutated_mod['func_292'] = func_292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_292_call = mutated_mod.get_global_var('func_292')
var_294 = relay.var("var_294", dtype = "float64", shape = (6, 11, 15))#candidate|294|(6, 11, 15)|var|float64
var_295 = relay.var("var_295", dtype = "float64", shape = (6, 11, 15))#candidate|295|(6, 11, 15)|var|float64
var_296 = relay.var("var_296", dtype = "float64", shape = (6, 11, 15))#candidate|296|(6, 11, 15)|var|float64
call_293 = func_292_call(var_294,var_295,var_296,)
output = call_293
func_297 = relay.Function([var_294,var_295,var_296,], output)
mutated_mod['func_297'] = func_297
mutated_mod = relay.transform.InferType()(mutated_mod)
var_307 = relay.var("var_307", dtype = "float64", shape = (3, 14, 11))#candidate|307|(3, 14, 11)|var|float64
var_308 = relay.var("var_308", dtype = "float64", shape = (3, 14, 11))#candidate|308|(3, 14, 11)|var|float64
bop_309 = relay.divide(var_307.astype('float64'), relay.reshape(var_308.astype('float64'), relay.shape_of(var_307))) # shape=(3, 14, 11)
output = bop_309
output2 = bop_309
func_315 = relay.Function([var_307,var_308,], output)
mod['func_315'] = func_315
mod = relay.transform.InferType()(mod)
var_316 = relay.var("var_316", dtype = "float64", shape = (3, 14, 11))#candidate|316|(3, 14, 11)|var|float64
var_317 = relay.var("var_317", dtype = "float64", shape = (3, 14, 11))#candidate|317|(3, 14, 11)|var|float64
output = func_315(var_316,var_317,)
func_318 = relay.Function([var_316,var_317,], output)
mutated_mod['func_318'] = func_318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_843 = relay.var("var_843", dtype = "float64", shape = (1, 14, 11))#candidate|843|(1, 14, 11)|var|float64
var_844 = relay.var("var_844", dtype = "float64", shape = (3, 14, 11))#candidate|844|(3, 14, 11)|var|float64
bop_845 = relay.subtract(var_843.astype('float64'), var_844.astype('float64')) # shape=(3, 14, 11)
uop_848 = relay.sin(var_844.astype('float64')) # shape=(3, 14, 11)
output = relay.Tuple([bop_845,uop_848,])
output2 = relay.Tuple([bop_845,uop_848,])
func_862 = relay.Function([var_843,var_844,], output)
mod['func_862'] = func_862
mod = relay.transform.InferType()(mod)
mutated_mod['func_862'] = func_862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_862_call = mutated_mod.get_global_var('func_862')
var_864 = relay.var("var_864", dtype = "float64", shape = (1, 14, 11))#candidate|864|(1, 14, 11)|var|float64
var_865 = relay.var("var_865", dtype = "float64", shape = (3, 14, 11))#candidate|865|(3, 14, 11)|var|float64
call_863 = func_862_call(var_864,var_865,)
output = call_863
func_866 = relay.Function([var_864,var_865,], output)
mutated_mod['func_866'] = func_866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_941 = relay.var("var_941", dtype = "uint16", shape = (6, 4, 9))#candidate|941|(6, 4, 9)|var|uint16
const_942 = relay.const([[[-4,9,7,-6,4,-5,8,-3,-3],[-4,5,8,10,2,9,-9,-4,9],[-2,6,7,-8,-9,3,-9,8,10],[5,-9,-8,-9,-1,7,-4,-9,6]],[[2,-2,-6,-2,1,1,7,1,-5],[4,6,-6,-7,4,1,-1,-4,3],[-7,-9,8,-10,-7,10,-10,5,4],[-8,2,-9,2,7,5,7,8,2]],[[5,-10,3,-4,6,8,3,-3,10],[9,1,9,9,-10,2,-2,4,-1],[1,1,-5,9,6,4,-3,-7,10],[-2,2,3,-4,2,6,-4,-9,6]],[[1,-3,-7,-3,9,-7,-8,5,1],[-5,-4,10,10,-6,-8,-6,-8,-7],[5,7,2,2,-3,9,8,8,2],[-9,1,-3,8,9,8,2,6,9]],[[3,7,10,-9,-1,-8,4,-5,-5],[-5,10,10,10,1,-3,-3,4,4],[5,2,-10,-6,10,-3,-4,9,-4],[1,-10,9,5,-2,9,10,-9,9]],[[5,-8,-1,-1,9,8,-8,7,-1],[3,-6,4,-1,1,-9,9,-10,-8],[-8,-5,-8,10,9,-5,-4,8,-5],[7,-9,6,-1,-1,-4,1,9,-8]]], dtype = "uint16")#candidate|942|(6, 4, 9)|const|uint16
bop_943 = relay.equal(var_941.astype('bool'), relay.reshape(const_942.astype('bool'), relay.shape_of(var_941))) # shape=(6, 4, 9)
uop_947 = relay.erf(var_941.astype('float64')) # shape=(6, 4, 9)
var_955 = relay.var("var_955", dtype = "float64", shape = (6, 4, 9))#candidate|955|(6, 4, 9)|var|float64
bop_956 = relay.divide(uop_947.astype('float64'), relay.reshape(var_955.astype('float64'), relay.shape_of(uop_947))) # shape=(6, 4, 9)
output = relay.Tuple([bop_943,bop_956,])
output2 = relay.Tuple([bop_943,bop_956,])
func_959 = relay.Function([var_941,var_955,], output)
mod['func_959'] = func_959
mod = relay.transform.InferType()(mod)
mutated_mod['func_959'] = func_959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_959_call = mutated_mod.get_global_var('func_959')
var_961 = relay.var("var_961", dtype = "uint16", shape = (6, 4, 9))#candidate|961|(6, 4, 9)|var|uint16
var_962 = relay.var("var_962", dtype = "float64", shape = (6, 4, 9))#candidate|962|(6, 4, 9)|var|float64
call_960 = func_959_call(var_961,var_962,)
output = call_960
func_963 = relay.Function([var_961,var_962,], output)
mutated_mod['func_963'] = func_963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1119 = relay.var("var_1119", dtype = "float64", shape = (13, 13, 11))#candidate|1119|(13, 13, 11)|var|float64
uop_1120 = relay.sqrt(var_1119.astype('float64')) # shape=(13, 13, 11)
func_292_call = mod.get_global_var('func_292')
func_297_call = mutated_mod.get_global_var('func_297')
var_1125 = relay.var("var_1125", dtype = "float64", shape = (990,))#candidate|1125|(990,)|var|float64
call_1124 = relay.TupleGetItem(func_292_call(relay.reshape(var_1125.astype('float64'), [6, 11, 15]), relay.reshape(var_1125.astype('float64'), [6, 11, 15]), relay.reshape(var_1125.astype('float64'), [6, 11, 15]), ), 3)
call_1126 = relay.TupleGetItem(func_297_call(relay.reshape(var_1125.astype('float64'), [6, 11, 15]), relay.reshape(var_1125.astype('float64'), [6, 11, 15]), relay.reshape(var_1125.astype('float64'), [6, 11, 15]), ), 3)
func_78_call = mod.get_global_var('func_78')
func_82_call = mutated_mod.get_global_var('func_82')
var_1136 = relay.var("var_1136", dtype = "uint32", shape = (520,))#candidate|1136|(520,)|var|uint32
call_1135 = relay.TupleGetItem(func_78_call(relay.reshape(var_1136.astype('uint32'), [5, 13, 8]), relay.reshape(var_1136.astype('uint32'), [5, 13, 8]), ), 0)
call_1137 = relay.TupleGetItem(func_82_call(relay.reshape(var_1136.astype('uint32'), [5, 13, 8]), relay.reshape(var_1136.astype('uint32'), [5, 13, 8]), ), 0)
func_959_call = mod.get_global_var('func_959')
func_963_call = mutated_mod.get_global_var('func_963')
var_1144 = relay.var("var_1144", dtype = "uint16", shape = (216,))#candidate|1144|(216,)|var|uint16
call_1143 = relay.TupleGetItem(func_959_call(relay.reshape(var_1144.astype('uint16'), [6, 4, 9]), relay.reshape(var_1144.astype('float64'), [6, 4, 9]), ), 1)
call_1145 = relay.TupleGetItem(func_963_call(relay.reshape(var_1144.astype('uint16'), [6, 4, 9]), relay.reshape(var_1144.astype('float64'), [6, 4, 9]), ), 1)
func_959_call = mod.get_global_var('func_959')
func_963_call = mutated_mod.get_global_var('func_963')
call_1158 = relay.TupleGetItem(func_959_call(relay.reshape(var_1144.astype('uint16'), [6, 4, 9]), relay.reshape(call_1143.astype('float64'), [6, 4, 9]), ), 0)
call_1159 = relay.TupleGetItem(func_963_call(relay.reshape(var_1144.astype('uint16'), [6, 4, 9]), relay.reshape(call_1143.astype('float64'), [6, 4, 9]), ), 0)
output = relay.Tuple([uop_1120,call_1124,var_1125,call_1135,var_1136,call_1143,var_1144,call_1158,])
output2 = relay.Tuple([uop_1120,call_1126,var_1125,call_1137,var_1136,call_1145,var_1144,call_1159,])
func_1160 = relay.Function([var_1119,var_1125,var_1136,var_1144,], output)
mod['func_1160'] = func_1160
mod = relay.transform.InferType()(mod)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1160_call = mutated_mod.get_global_var('func_1160')
var_1162 = relay.var("var_1162", dtype = "float64", shape = (13, 13, 11))#candidate|1162|(13, 13, 11)|var|float64
var_1163 = relay.var("var_1163", dtype = "float64", shape = (990,))#candidate|1163|(990,)|var|float64
var_1164 = relay.var("var_1164", dtype = "uint32", shape = (520,))#candidate|1164|(520,)|var|uint32
var_1165 = relay.var("var_1165", dtype = "uint16", shape = (216,))#candidate|1165|(216,)|var|uint16
call_1161 = func_1160_call(var_1162,var_1163,var_1164,var_1165,)
output = call_1161
func_1166 = relay.Function([var_1162,var_1163,var_1164,var_1165,], output)
mutated_mod['func_1166'] = func_1166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1353 = relay.var("var_1353", dtype = "float64", shape = (10, 15, 13))#candidate|1353|(10, 15, 13)|var|float64
uop_1354 = relay.acosh(var_1353.astype('float64')) # shape=(10, 15, 13)
output = relay.Tuple([uop_1354,])
output2 = relay.Tuple([uop_1354,])
func_1358 = relay.Function([var_1353,], output)
mod['func_1358'] = func_1358
mod = relay.transform.InferType()(mod)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1359 = relay.var("var_1359", dtype = "float64", shape = (10, 15, 13))#candidate|1359|(10, 15, 13)|var|float64
func_1358_call = mutated_mod.get_global_var('func_1358')
call_1360 = func_1358_call(var_1359)
output = call_1360
func_1361 = relay.Function([var_1359], output)
mutated_mod['func_1361'] = func_1361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1437 = relay.var("var_1437", dtype = "uint16", shape = (14, 4, 13))#candidate|1437|(14, 4, 13)|var|uint16
var_1438 = relay.var("var_1438", dtype = "uint16", shape = (14, 4, 13))#candidate|1438|(14, 4, 13)|var|uint16
bop_1439 = relay.greater(var_1437.astype('bool'), relay.reshape(var_1438.astype('bool'), relay.shape_of(var_1437))) # shape=(14, 4, 13)
bop_1444 = relay.floor_divide(var_1437.astype('float32'), relay.reshape(bop_1439.astype('float32'), relay.shape_of(var_1437))) # shape=(14, 4, 13)
output = relay.Tuple([bop_1444,])
output2 = relay.Tuple([bop_1444,])
func_1457 = relay.Function([var_1437,var_1438,], output)
mod['func_1457'] = func_1457
mod = relay.transform.InferType()(mod)
mutated_mod['func_1457'] = func_1457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mutated_mod.get_global_var('func_1457')
var_1459 = relay.var("var_1459", dtype = "uint16", shape = (14, 4, 13))#candidate|1459|(14, 4, 13)|var|uint16
var_1460 = relay.var("var_1460", dtype = "uint16", shape = (14, 4, 13))#candidate|1460|(14, 4, 13)|var|uint16
call_1458 = func_1457_call(var_1459,var_1460,)
output = call_1458
func_1461 = relay.Function([var_1459,var_1460,], output)
mutated_mod['func_1461'] = func_1461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1971 = relay.var("var_1971", dtype = "float32", shape = (7, 11, 8))#candidate|1971|(7, 11, 8)|var|float32
uop_1972 = relay.cosh(var_1971.astype('float32')) # shape=(7, 11, 8)
uop_1993 = relay.sigmoid(var_1971.astype('float32')) # shape=(7, 11, 8)
func_1160_call = mod.get_global_var('func_1160')
func_1166_call = mutated_mod.get_global_var('func_1166')
const_1997 = relay.const([1.842152,3.881458,2.115377,1.272247,6.545281,7.435324,9.171498,-8.001903,7.106078,3.639843,3.756338,7.135611,-1.359489,-1.998727,-5.952939,-0.702652,-0.171752,-5.131950,9.764307,-4.246243,-1.629086,5.135423,4.120215,-7.243979,8.631786,-7.539164,-1.085711,-2.576622,3.838002,-2.692729,4.997137,1.900136,-7.762681,4.127006,3.430630,-4.530770,2.146483,-8.910402,-5.431758,-1.745568,-8.385805,-4.795126,-3.712763,-8.796728,4.913125,0.337325,2.802085,-8.295774,8.799608,-7.654024,-5.782382,-4.831053,-0.811801,-4.555333,1.829086,-0.406776,3.363249,-8.583557,-5.132845,7.223828,-1.892781,-3.433377,-8.373384,2.185947,-6.805683,-4.307144,4.532483,8.993877,7.217265,-6.430567,-5.973417,1.824015,5.397386,8.092907,-5.687446,4.467360,1.557422,-6.745842,7.728393,4.256688,9.380610,-2.325552,1.255687,3.207832,9.908179,4.719381,-2.163378,-1.542891,9.377056,1.099485,-6.665573,-5.108278,-0.858963,7.224062,-8.691915,-4.936863,1.623146,-6.748203,-2.694356,1.599928,0.082371,1.924169,2.457994,5.429462,2.263296,-1.815764,-1.166574,9.444583,-2.515836,-2.705895,-1.289397,-1.795015,8.702635,-9.708299,-7.581469,3.677304,-4.200298,-1.677087,-1.692616,-0.683988,-3.306058,-3.848302,5.140752,-2.814987,-5.171007,7.330687,3.336204,-7.414594,-3.334572,-5.087298,5.994529,1.249668,-6.099234,2.416226,1.613169,-3.021122,5.935254,-1.576866,-1.571533,-3.016247,0.598243,9.613195,4.911571,5.116949,-4.578964,5.452290,-2.551036,-1.291650,-0.241375,1.704825,1.655155,3.443992,-8.328792,-5.842542,-8.236864,-8.958680,-5.971104,-1.037281,2.715997,8.242344,2.202759,4.302165,8.373674,-1.887295,-6.349395,-8.275495,1.206085,-9.284338,7.693993,8.045542,9.952291,-2.649716,4.520915,6.651991,-8.458387,2.951163,3.901490,6.593368,-9.864118,-7.663800,-6.197413,-1.358968,7.155514,0.215191,2.960309,-0.613440,-9.029799,-3.838478,-9.677482,9.546911,9.489628,-9.446245,0.729272,1.300512,-4.372174,-1.661332,-0.526254,-8.641508,9.584204,8.647343,-4.465083,7.662412,-0.200562,5.711933,-7.022434,6.538117,9.002150,-0.272923,-8.397039,-5.211864,-1.251816,9.255897,5.908182,-5.307860,8.487623,-5.258598,7.112357,3.556959,1.723340,-3.415167,4.530807,7.524718,-6.756869,9.026706,-4.049063,8.418940,0.199506,7.584634,-4.892375,3.109114,3.780351,-7.969316,-8.390377,-2.998262,-4.801956,9.234806,9.780128,-7.707007,-1.588931,-2.070810,7.097085,4.495131,-3.638008,9.702778,-3.404579,-0.405202,-2.787012,4.282889,-0.117554,8.287411,-5.374082,-1.322533,1.325406,0.937759,7.461170,-4.411783,0.556294,1.757191,6.920977,2.047261,9.253858,7.506069,-4.837670,-2.211919,2.235768,8.137169,-9.238637,3.299795,-7.446204,-4.756777,-5.291026,-0.998490,-2.432657,9.093341,-0.244440,-9.297883,-4.161452,-6.890928,-6.612438,-4.705957,-4.910498,1.119772,2.899440,-4.266744,-0.028838,6.271365,-3.537329,-4.463341,3.021970,-8.706104,-1.102860,-5.544804,-6.832272,0.211193,5.367164,-1.959754,2.628643,7.558526,-2.362012,-4.377219,-0.232124,9.317526,3.613733,6.099691,6.947528,3.614083,-5.510380,8.215321,-5.336028,3.917781,-7.382718,3.271747,-6.247848,-3.180760,-5.867094,2.481154,2.720649,9.850381,-3.991983,5.777498,-4.661502,-2.120799,-1.835126,-1.703445,-1.143503,8.648900,2.077367,8.519297,1.142569,1.756173,-7.433853,-7.631448,8.425324,0.109465,-3.765338,-1.543394,9.173253,-8.085842,-4.367497,-6.364180,-6.951501,9.228618,-8.383561,3.224361,-5.025366,5.762058,2.987074,-3.923422,-9.522205,9.734151,8.590634,0.465169,-3.418239,-3.374445,-4.499856,3.753297,-6.420766,3.198219,6.516938,-2.940248,4.517154,2.748659,7.257804,1.868365,2.070397,8.220726,-8.966904,5.464104,-5.264126,0.274475,-8.001949,1.837414,6.207777,9.913055,-6.447071,5.366304,4.600636,-4.468904,-8.534985,-4.394692,-9.817494,-1.333988,3.168273,8.667994,-3.556851,-8.167472,-0.683943,7.372737,-1.197861,-4.283052,6.217838,-0.090555,-8.973083,1.245411,9.115254,-5.886080,2.577560,-1.924928,-2.674781,-0.441223,2.955828,5.942380,3.665832,9.413331,7.142382,-6.677244,0.095289,-1.514171,6.293638,6.005126,1.935592,5.704465,-6.645831,5.587125,2.997380,7.498374,5.492329,-8.292549,-4.974739,-7.077670,-6.601672,-4.300738,-3.317226,4.832901,-9.520804,-4.658800,1.435948,4.681968,0.559007,-1.564729,-7.946533,2.198934,9.088803,-6.943198,-5.012729,2.506513,6.528909,-3.723637,-5.084670,-5.754619,-3.856647,3.428807,-0.543344,-3.950255,0.962619,-3.365116,-9.033623,0.199634,-2.514285,1.627185,4.335160,4.106324,-7.466774,-6.427154,6.729960,-6.666159,2.273431,7.630035,-2.805468,0.114067,3.049711,8.646342,-0.367632,6.829045,0.999903,9.206671,4.759678,1.232217,-1.720377,1.915806,-7.926485,-4.072861,3.641453,8.135365,8.520061,4.037398,6.847918,-3.881675,-0.806802,-4.282731,7.152615,-6.473066,-1.368671,-5.855013,9.035276,-1.937230,0.046367,2.162670,9.221968,-8.267176,4.921227,5.336740,0.594658,-7.278286,7.329269,0.844083,-2.659436,9.690508,7.481101,-9.835128,7.308979,6.494628,7.791286,5.061556,8.939778,8.125139,-6.787117,4.598476,-6.173301,4.671908,-2.742382,-6.004344,-6.090623,8.771391,-7.989736,-5.491384,3.324522,-0.672273,-6.101879,4.949879,-8.935541,-9.540895,3.282904,-6.553271,-0.407940,3.793114,-3.585160,3.090880,4.085763,-3.057849,-1.332405,-3.311986,-6.880376,-8.304587,-2.865293,8.788031,-6.220463,4.254756,4.704369,-1.375804,4.696624,5.496668,7.926439,-9.851004,1.600409,-3.608580,7.912980,5.637402,-7.892257,-5.220970,5.532293,6.854013,-5.655007,9.070472,-4.397723,6.043439,0.235179,4.189097,7.233168,-0.982365,-4.557094,3.503530,9.637494,-8.810292,-2.671208,-3.427094,-5.051005,-1.232390,4.025693,-3.907527,6.710315,1.012323,-8.973033,2.758604,4.074696,1.653342,0.853899,8.257678,1.921382,-8.827889,8.079089,-2.940591,-2.423154,-4.903667,-7.064155,6.698743,-0.521842,5.644572,6.913299,-6.235613,-2.835741,-3.158911,-0.764382,-6.183932,8.305825,-7.745370,2.044645,-0.688900,2.062492,7.154032,-3.714815,5.064294,-9.862298,4.505420,2.957504,-3.506115,0.276775,4.109278,-5.406997,-4.230881,-2.678686,-3.418414,5.501563,0.652182,1.158805,-4.251252,9.884341,-9.998760,-8.178578,6.510726,-5.198357,9.894142,8.430301,4.591902,-7.464614,2.166499,-5.091647,9.713285,4.746718,-4.442737,4.330224,-8.636140,-1.251164,-7.398173,-0.727071,8.029720,2.822785,2.488320,8.151937,3.360338,-1.255925,2.327078,-3.731707,-6.884512,6.037743,9.134248,5.311276,-4.561427,-8.077446,7.763459,-0.300673,9.845168,3.752514,-3.116548,-1.604817,5.266658,0.661072,8.909585,1.789785,7.215388,0.327886,5.692074,-2.009297,-2.732178,1.512978,7.129749,-4.240455,7.690812,5.809577,9.556807,2.089231,-4.593145,4.639338,9.739205,3.132926,5.440775,9.179669,-0.706167,-1.845961,-3.075497,-9.599782,-8.151514,3.739956,-5.379119,6.849440,-6.283396,-0.124016,3.756760,-5.981463,-1.893167,9.661096,-9.062414,5.621814,-6.906443,-3.254215,9.036680,1.785817,6.641064,6.171485,7.951273,3.304890,-6.767381,7.390642,6.196034,-5.862150,1.373610,-5.539200,-1.193843,-3.150293,1.192342,9.957430,3.687203,-3.124787,0.826754,8.523411,3.736806,-9.532961,-4.348416,9.211079,-7.588168,-2.239558,-4.189336,5.537352,-8.313777,5.474746,-6.110653,-7.237795,2.299042,5.086733,-4.218250,-9.165168,2.703573,2.536948,-9.784936,-1.476487,-5.100575,-7.981378,1.554604,8.986605,-6.293938,8.646907,-4.575582,-3.489823,5.819431,-8.667366,-4.061717,4.024895,-0.212938,-2.298015,6.159754,2.018671,2.774289,-2.441414,5.538555,-4.417158,5.364411,7.348901,6.223749,5.551013,3.237433,-6.467998,-6.214809,2.153014,6.455615,4.195622,-7.689978,-5.085863,3.123707,-6.120641,6.710379,-9.721190,4.417568,-7.005049,7.121072,1.657419,5.506005,5.683740,7.375340,-4.002828,-7.081287,7.960415,-8.413843,-4.822373,0.950992,6.700249,9.966757,7.864519,5.201807,3.727806,8.593000,5.477473,-3.577478,2.499923,9.245323,-7.292926,6.225689,1.024825,-8.410122,7.658927,-7.543587,-1.470773,-6.334809,-2.510022,4.085524,9.567286,-5.348282,5.980708,4.253949,-2.887353,0.078880,-4.485338,4.261773,-9.171630,4.573445,2.602993,-0.826730,5.610550,6.729134,-1.180300,5.988129,1.526869,-1.202336,-7.282759,9.680903,3.199251,-2.368913,-8.969756,6.250053,9.934660,-7.581116,-5.627256,-5.200554,-9.988504,-2.463348,-8.293202,-6.408520,2.756069,-7.935988,-0.081395,4.123285,-0.676911,7.743610,4.573309,-7.124239,4.982718,8.968743,4.137455,7.213451,3.844254,1.234436,2.849458,6.387808,-3.992177,-9.743800,-2.496610,-3.593895,7.496546,3.167458,-9.661885,4.952219,-1.506238,-3.663903,-5.343358,0.573626,8.826336,3.637194,-1.076729,4.835955,7.350951,9.280245,6.854897,-8.147180,6.359976,6.747319,4.165380,8.781855,7.661446,-2.161633,3.787142,5.793950,-2.723857,7.540487,-9.006386,7.769468,2.502509,4.126072,3.924401,4.091894,7.174575,-6.509594,-4.147858,-7.594812,4.719448,7.016540,7.271007,7.267441,-7.569606,-5.699633,-7.734937,-7.187046,7.029296,-3.673672,8.537795,8.558680,3.469476,-2.761834,-9.035470,2.308641,0.546078,-5.646892,-9.375719,-4.884321,8.775187,0.937844,-8.979945,1.113647,0.744190,-8.400434,7.339064,5.938387,-8.667774,-0.086172,-0.906202,-8.951362,4.498083,-0.651296,6.403410,-0.716844,-4.380879,-1.918796,9.367201,-5.375322,5.953244,2.685775,-9.138796,1.408383,-9.183011,5.892089,-1.719170,-4.303205,3.254354,5.451353,9.516033,4.019055,3.170965,2.980072,0.809757,3.008766,-4.831311,7.355730,2.640745,9.453137,2.752503,-7.267622,1.170861,0.196982,-4.715474,7.486506,-8.648981,1.556370,-2.350936,-0.066463,-3.530906,-0.530146,-4.461020,0.683644,9.092281,-1.996227,-9.657926,-2.927018,5.710427,-1.165655,-5.450779,-3.995918,-5.112119,-0.521504,-6.292418,-8.788505,-8.712042,1.675649,-6.500464,-2.306075,-5.223896,-7.191000,9.730860,-9.199234,-2.548162,-7.542395,-5.712078,1.730816,-3.961445,5.209573,-9.006117,2.919960,-7.169485,-9.242928,-3.209521,-3.239279,8.660645,7.305085,5.305993,5.670203,-9.151036,-3.252028,-1.420163,4.463199,6.157936,5.749176,-1.994357,-4.722939,-5.045404,1.141221,3.148143,1.736407,1.272160,-7.848686,-7.645946,-5.123878,1.146828,2.668169,6.707348,0.809912,3.168655,-8.919907,3.215371,-3.955175,1.775349,-0.738660,-2.808053,4.713201,-5.782334,-8.330278,-0.738171,8.425461,-1.436142,7.203620,3.316681,-2.560655,-8.446324,-0.835584,-0.020268,9.777706,2.328519,-8.643990,9.190576,8.453856,6.869464,-0.876684,-9.419204,-5.946473,-9.848430,-3.964162,-4.575313,-8.985744,-9.540320,-4.010200,0.989989,-5.162966,-2.521223,-3.889984,3.825703,2.727003,-2.904377,-0.009762,-1.091194,9.035428,-5.964326,-5.375535,-5.665142,9.074036,-7.664497,8.046207,6.662565,-9.238852,5.397680,1.673529,-1.423799,9.732637,-1.963387,0.719750,-3.647703,5.990100,5.116251,9.483252,-3.448766,-5.787010,0.406949,2.034219,6.057398,-2.023946,-2.105082,4.537369,-5.512289,9.652341,-6.654174,7.949745,2.171037,-2.075447,1.567909,2.172060,-8.981364,-7.288795,1.222434,1.197009,6.650596,7.857706,1.297426,-0.574851,-9.076582,8.365730,-7.659731,5.983483,5.344031,-4.721684,-2.432097,7.399616,8.108111,-4.070908,6.613564,-4.405584,1.385544,-7.631697,-8.420399,-5.833138,9.916128,-7.754823,7.563226,7.047392,4.167403,3.746076,4.912331,-3.152120,-8.559601,-2.870827,-5.405887,-0.036383,-8.005303,2.010403,0.951944,8.258626,4.303873,-5.651204,-8.406334,0.300938,-7.121691,0.588806,6.880656,-5.848952,-4.050565,3.653965,5.968925,-2.174807,6.166287,7.095945,0.984747,4.113365,-6.661501,4.386164,8.013166,-4.967642,9.970804,-1.694689,7.456184,-5.977698,9.999278,9.505599,9.420916,-9.012210,1.631731,6.129052,5.274696,9.903115,2.081346,-4.385639,7.147131,-7.781792,-9.052119,-8.756270,5.680041,3.505419,-6.569453,-0.932236,-2.484309,-6.843945,-2.253554,-1.304032,-5.009341,7.296559,1.363916,4.319395,-0.385362,8.742145,-6.365793,-3.485735,2.445019,-2.783950,-1.158622,0.347151,7.361776,-7.239114,-5.314426,9.986791,-0.436080,-8.411275,-1.118331,5.371727,6.327786,9.137638,-1.005443,4.828804,1.703800,0.148885,-0.918959,-5.900882,2.128216,5.540771,-0.109588,-3.057974,6.702344,-4.410122,-6.142833,-1.030720,-2.413246,3.281209,-1.804721,-2.709663,-4.079176,0.245006,7.567323,2.258719,0.682050,-6.665952,8.323042,-8.005718,7.638413,4.525638,-3.916968,0.044918,2.978605,1.323087,5.824409,-5.586797,-4.880495,9.447967,5.334438,-2.493703,7.173991,-3.986466,0.810377,-6.801384,4.279177,9.279140,5.747429,6.849463,2.513750,-8.057015,-5.163808,6.617957,9.058595,-1.663940,6.309143,0.279630,6.526352,4.960030,-4.311520,3.021117,0.280601,-5.478775,2.792198,-9.112293,-1.765197,-4.170750,5.574619,0.857453,-8.408471,4.515029,-3.083123,-0.651728,1.403989,3.483045,2.265275,3.332122,8.794429,-2.175040,0.337220,8.296225,4.566126,2.934447,3.970272,8.653388,-7.816083,6.456343,1.877210,0.465652,-9.744505,7.556584,8.418558,-0.529996,-5.482186,-3.214788,8.236683,6.331033,8.610003,9.405602,-7.418375,-2.623234,-5.446622,0.700181,7.344857,-4.557973,9.858110,-4.961860,-5.193841,5.690306,3.240100,1.161217,-4.449885,7.300025,4.591567,-3.464846,-3.537477,-6.179817,7.052330,-7.494021,-7.895173,-5.675797,-6.100216,2.598152,7.951890,4.064547,-9.013878,-2.515736,-5.681040,-8.782442,-1.935205,5.277178,1.375324,5.811135,4.782095,2.447754,-5.895309,-2.041285,-7.874894,-7.411660,-5.979079,-5.961618,-7.219751,4.277554,1.897966,-4.888949,3.789932,-5.347100,8.211298,4.507695,9.745404,3.256217,-4.747679,4.021694,1.955566,-3.094162,1.295372,-4.727983,8.467564,-7.630923,9.085093,5.879418,-6.378018,8.576522,0.381158,6.753056,8.107857,2.722197,-5.417092,0.924932,-8.254508,4.510580,-6.436610,0.909360,-5.918824,-2.819395,-8.078488,-9.479921,6.501992,-5.673963,-0.146603,-2.810609,-2.860206,0.291230,-8.308125,-4.062638,-1.006432,-2.099710,9.134758,3.852686,-3.565996,4.616560,6.744914,5.828607,9.036720,0.393860,1.265258,-6.948069,9.709672,-4.225509,-6.608654,-1.459286,8.642338,2.969950,-0.102961,-8.102631,6.043133,7.925066,7.156362,4.670113,2.018389,-7.622958,-7.955910,-2.666317,-5.021690,8.754676,-0.953067,8.150029,7.547991,-9.550978,0.128952,-8.997806,3.504547,0.153938,-3.123068,6.367746,-1.051925,1.408015,-2.980356,-5.022042,-9.405697,7.257628,-1.109216,-5.792743,-3.367878,3.989333,0.313369,-8.703799,-8.223943,5.217988,-2.888248,-2.207773,-9.499562,-0.792074,2.198648,4.580575,-4.571585,-9.019652,-7.550296,-6.348827,-2.392664,-5.797661,1.664087,-5.904748,6.346896,6.741120,-1.065123,-5.276641,3.136357,-5.776106,1.686841,-3.620088,-4.459050,-2.400383,-4.725742,2.654664,8.473920,-8.745047,-3.986734,-5.038822,2.988710,-8.085894,3.795048,-7.045182,7.573004,6.256135,7.271636,-3.618305,0.050479,-1.726073,-1.762278,-3.004880,1.926662,-5.991836,0.306002,3.692881,-1.872225,-7.682421,-3.880150,-0.988904,3.235466,2.810661,-9.574290,7.133567,-0.481915,7.782317,8.537803,-9.254199,-6.244804,4.550636,9.257374,-4.479400,-7.249321,9.532213,-2.536265,-3.776081,-2.982215,-4.225989,3.828779,-1.448540,9.943215,-0.647508,6.680073,5.980941,-7.284692,9.220703,-7.667781,4.904416,-5.579086,2.877107,7.157870,5.331278,6.512393,-5.095488,8.609556,0.314457,-2.679730,2.632370,-5.581382,7.161582,4.132296,6.973304,9.424571,-2.835447,5.360034,-5.918362,1.049353,-6.538013,3.469413,-3.616352,4.952542,5.188560,9.102558,8.229728,1.313629,-1.460263,0.167024,-9.001663,7.851541,8.414906,2.952550,2.548045,1.984685,8.074515,-1.629741,8.019483,5.052562,6.704936,9.632913,8.058009,1.856254,-9.587367,4.627895,7.324068,1.447465,9.135943,-3.092034,-5.714239,2.770265,-7.352815,5.987265,6.508277,-4.179344,4.590890,-5.469520,4.803017,3.470127,-6.800989,-1.715099,9.235535,-7.190508,-8.904843,1.998905,-9.690935,5.262362,-3.094264,-5.579237,5.143303,-2.622767,1.328585,2.162623,-8.561554,-1.022465,5.312322,8.998852,-0.817216,-1.598508,-0.957403,6.725399,-9.003759,-9.623875,3.315033,-3.879272,9.153720,-5.577952,5.508094,2.526073,-5.775225,7.459389,2.924617,-8.707866,-1.219387,-8.801399,-1.879664,-3.729811,-1.435814,7.926148,4.136678,9.716053,-6.102517,1.694305,6.385938,1.013936,-2.626177,-3.264737,7.286760,-4.768001,8.308455,2.109184,-6.096581,-9.777227,-7.254687,3.008062,3.815947,-8.022669,-3.956681,-5.995816,9.782083,9.381877,-0.817306,4.680753,-5.574904,1.152095,-8.307124,4.195590,-4.818619,-6.698680,3.425427,7.884831,-4.316481,-1.869445,6.097334,-5.834825,-1.195823,7.718599,3.498270,5.995291,-6.722362,5.952600,6.843672,6.169864,-7.061555,-3.427707,7.208450,1.470589,7.426435,-9.840073,-5.244813,8.527083,-3.092530,1.269207,1.719058,2.522034,2.041924,6.589278,3.301637,0.581726,-8.081721,7.704387,4.088559,9.153256,-1.790822,4.363398,-5.383178,-8.044065,3.466432,7.045523,-5.923360,-1.294324,0.332337,-3.444887,8.764617,1.786073,7.686503,4.957614,0.871805,0.349380,1.197129,-5.327519,-0.585761,-3.770008,-0.001200,-8.596361,9.032737,-1.711351,-3.707545,0.945195,-1.836693,9.414487,-2.224630,-8.230703,3.419787,9.501035,4.550044,0.250775,-9.430625,9.684080,4.989265,7.782913,7.966005,8.710638,-1.571700,6.258609,4.878996,-8.310507,5.716350,0.197161,6.560750,4.297616,-4.443905,-5.442960,6.233445,4.916535,4.962138,4.780603,2.129795,4.329994,6.897081,-9.942500,1.891764,-4.622110,-9.807741,-8.029610,2.895831,-9.149696,-0.389628,-0.012936,-6.397806,-5.372395,7.311382,-1.272823,-5.894301,-7.460160,-7.175040,1.723835,-4.691152,7.872391,5.929913,-9.517168,3.752719,3.748899,4.059035,5.602025,8.246678,9.371171,3.922528,3.144353,9.479375,-9.515346,6.758114,-5.567664,9.692203,-4.732949,0.194494,7.864647,2.104710,-0.316120,4.716879,-5.015094,7.520914,7.914866,-1.960599,-4.771116,-3.913166,8.726680,-1.548888,8.957838,7.071913,6.265419,-9.623378,-1.440968,9.066059,-0.632520,-9.253519,6.355561,2.063903,5.250155,-5.463812,2.980114,-8.067693,-3.154923,-0.947932,-4.275864,7.460024,-2.082284,1.087413,4.796446,5.370748,4.584010,-2.081970,7.063498,5.971922,5.986860,6.256651,-5.073268,-2.574604,-0.323680,9.978649,-2.729902,-0.922982,-5.448963,0.485425,-4.655743,-1.551312,2.091231,2.507272,-5.202462,2.758518,-0.770532,-0.161005,-1.323479,8.188455,-4.487082,6.758423,7.179566,2.208608,7.505987,1.335970,-3.458418,1.180347,-9.798359,-5.055799,4.398714,9.484105,-9.973873,4.949652,-7.653649,-1.807884,2.834335,2.697687,2.176144,-9.613195,-4.890295,5.212914,9.565607], dtype = "float64")#candidate|1997|(1859,)|const|float64
var_1998 = relay.var("var_1998", dtype = "float64", shape = (990,))#candidate|1998|(990,)|var|float64
var_1999 = relay.var("var_1999", dtype = "uint32", shape = (5, 104))#candidate|1999|(5, 104)|var|uint32
var_2000 = relay.var("var_2000", dtype = "uint16", shape = (216,))#candidate|2000|(216,)|var|uint16
call_1996 = relay.TupleGetItem(func_1160_call(relay.reshape(const_1997.astype('float64'), [13, 13, 11]), relay.reshape(var_1998.astype('float64'), [990,]), relay.reshape(var_1999.astype('uint32'), [520,]), relay.reshape(var_2000.astype('uint16'), [216,]), ), 5)
call_2001 = relay.TupleGetItem(func_1166_call(relay.reshape(const_1997.astype('float64'), [13, 13, 11]), relay.reshape(var_1998.astype('float64'), [990,]), relay.reshape(var_1999.astype('uint32'), [520,]), relay.reshape(var_2000.astype('uint16'), [216,]), ), 5)
output = relay.Tuple([uop_1972,uop_1993,call_1996,const_1997,var_1998,var_1999,var_2000,])
output2 = relay.Tuple([uop_1972,uop_1993,call_2001,const_1997,var_1998,var_1999,var_2000,])
func_2004 = relay.Function([var_1971,var_1998,var_1999,var_2000,], output)
mod['func_2004'] = func_2004
mod = relay.transform.InferType()(mod)
mutated_mod['func_2004'] = func_2004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2004_call = mutated_mod.get_global_var('func_2004')
var_2006 = relay.var("var_2006", dtype = "float32", shape = (7, 11, 8))#candidate|2006|(7, 11, 8)|var|float32
var_2007 = relay.var("var_2007", dtype = "float64", shape = (990,))#candidate|2007|(990,)|var|float64
var_2008 = relay.var("var_2008", dtype = "uint32", shape = (5, 104))#candidate|2008|(5, 104)|var|uint32
var_2009 = relay.var("var_2009", dtype = "uint16", shape = (216,))#candidate|2009|(216,)|var|uint16
call_2005 = func_2004_call(var_2006,var_2007,var_2008,var_2009,)
output = call_2005
func_2010 = relay.Function([var_2006,var_2007,var_2008,var_2009,], output)
mutated_mod['func_2010'] = func_2010
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2418 = relay.const([[[7.051738],[2.657406],[-3.215582],[7.806050],[-8.402378],[-3.672152],[0.569178],[8.219911],[-3.027327]],[[7.952765],[-0.620378],[-1.804803],[6.805488],[-5.795897],[9.069477],[-9.220499],[8.386506],[6.383245]],[[3.047634],[-7.641383],[9.845675],[3.444307],[1.132037],[9.587996],[5.629644],[-1.661116],[-9.811471]],[[-0.206073],[-0.577220],[2.984525],[-4.844604],[-4.157568],[0.488432],[4.532541],[-4.675943],[-5.703955]],[[-4.166706],[-6.977015],[-6.092875],[7.529962],[-8.439000],[-9.994408],[-5.604848],[3.242711],[9.319916]],[[-6.289523],[-6.566549],[-6.856253],[-8.519551],[-0.365675],[5.744145],[-1.368097],[-5.783656],[6.661019]]], dtype = "float32")#candidate|2418|(6, 9, 1)|const|float32
uop_2419 = relay.sinh(const_2418.astype('float32')) # shape=(6, 9, 1)
output = relay.Tuple([uop_2419,])
output2 = relay.Tuple([uop_2419,])
func_2422 = relay.Function([], output)
mod['func_2422'] = func_2422
mod = relay.transform.InferType()(mod)
output = func_2422()
func_2423 = relay.Function([], output)
mutated_mod['func_2423'] = func_2423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_2464 = relay.TupleGetItem(func_2422_call(), 0)
call_2465 = relay.TupleGetItem(func_2423_call(), 0)
output = call_2464
output2 = call_2465
func_2467 = relay.Function([], output)
mod['func_2467'] = func_2467
mod = relay.transform.InferType()(mod)
output = func_2467()
func_2468 = relay.Function([], output)
mutated_mod['func_2468'] = func_2468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_2469 = relay.TupleGetItem(func_2422_call(), 0)
call_2470 = relay.TupleGetItem(func_2423_call(), 0)
output = relay.Tuple([call_2469,])
output2 = relay.Tuple([call_2470,])
func_2479 = relay.Function([], output)
mod['func_2479'] = func_2479
mod = relay.transform.InferType()(mod)
output = func_2479()
func_2480 = relay.Function([], output)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2531 = relay.TupleGetItem(func_2479_call(), 0)
call_2532 = relay.TupleGetItem(func_2480_call(), 0)
func_862_call = mod.get_global_var('func_862')
func_866_call = mutated_mod.get_global_var('func_866')
const_2540 = relay.const([[-1.182616,-6.033093,3.693927,1.423206,-6.222763,-9.392351,-3.892309,-0.584331,-8.709506,6.953388,-8.400660,7.808890,8.232398,-1.090782],[-7.683113,2.163543,-2.214432,4.598507,-4.680726,4.002560,8.690979,5.619962,-5.709359,-5.404570,5.336795,6.792258,-5.062042,-8.393607],[0.818969,9.583320,9.325069,-1.330002,5.932300,-1.548306,-7.366171,-3.647721,1.160857,0.884605,9.591961,-6.378350,-9.572543,1.247333],[4.589207,-3.053179,-3.696083,-2.962193,-4.662881,-1.465281,-4.674709,-1.682455,-6.483066,0.613590,-7.183895,1.493245,-2.605343,0.200830],[0.615458,2.537010,-8.270669,8.361391,-6.226544,5.672195,-9.130403,-6.154810,-2.038179,-2.592775,7.649235,-7.289952,-0.634726,0.003067],[1.822037,8.887012,9.381773,8.544309,-4.717757,7.669578,1.614195,-5.825118,-4.996863,-5.379455,4.225102,6.706883,-6.543096,-2.807091],[1.998246,1.488262,-0.143697,-0.014642,-5.902186,-4.845270,-1.256012,5.049221,-3.988733,-4.376467,-7.289542,4.540297,5.748815,-2.322198],[-2.770499,-8.268310,-0.637491,-6.810878,5.967778,6.956073,1.749594,-6.900349,7.144265,9.797694,9.299771,-9.096654,-7.410377,2.834776],[-3.150149,-9.804096,3.938158,-1.976085,-0.278670,-8.561826,0.097035,6.055584,5.602050,6.498389,7.061330,-1.408013,-8.203431,-5.172045],[-2.721615,-2.795864,4.010925,3.613183,2.741949,8.760458,0.471443,5.825920,9.830754,2.104067,1.797524,9.223771,1.639521,7.391748],[-1.098853,-4.127206,-6.146541,9.306726,6.612277,-3.831819,-6.932794,5.770413,1.433203,7.286033,6.655873,-1.851472,9.502989,-9.353138]], dtype = "float64")#candidate|2540|(11, 14)|const|float64
const_2541 = relay.const([[2.380652,5.057942],[-2.930081,2.805809],[6.129557,-5.495220],[3.714667,-3.054879],[-8.570310,5.054751],[-9.166146,-8.902867],[0.982495,-8.363449],[1.892140,8.353531],[1.641366,4.997973],[1.965829,-5.749254],[-5.675401,5.272034],[3.844105,-7.036715],[-1.232625,-1.909604],[-4.906801,0.686331],[-9.482937,1.628340],[5.169034,-6.313197],[0.010282,-7.790545],[5.300826,-2.140674],[3.374873,5.951187],[1.757344,-3.689818],[-5.073156,-6.746385],[9.402321,-1.029068],[5.812318,6.612998],[-1.735867,-7.324697],[2.417312,3.786693],[2.634366,3.918982],[5.762826,5.037620],[-8.134568,-9.867712],[-4.424749,-8.370133],[-2.512036,-6.313991],[-2.264468,0.886531],[1.350308,4.843119],[-8.051669,5.434939],[-6.250648,3.229146],[-1.080082,-9.444049],[-9.937083,8.825322],[3.690680,9.747372],[-1.773484,4.156597],[2.595984,-2.188288],[-4.982057,-4.739411],[-5.487402,6.403006],[-0.473428,-3.177523],[1.933481,9.935890],[-4.808037,9.465652],[-6.918385,8.790686],[-5.937666,-2.075004],[5.061072,-9.354038],[-3.656634,8.807143],[7.242755,2.909143],[9.075976,-7.810195],[-2.120141,-1.868298],[-4.846840,-1.802854],[-2.656135,8.018781],[-8.958325,7.513762],[-8.689402,-6.971084],[-7.284730,0.619039],[-6.400142,7.958147],[0.560227,-9.167436],[3.980403,-9.392720],[-0.738943,8.480588],[-0.283631,8.379291],[-1.333954,8.805489],[7.201363,2.704981],[5.586483,0.780743],[4.899829,5.669664],[-1.218726,-9.910181],[-9.379398,3.644842],[5.902900,-7.647438],[6.335720,-2.603074],[-0.508691,4.529670],[0.717987,1.721780],[2.167530,-7.177507],[9.144690,2.189348],[-8.959446,4.626519],[-0.690736,3.440352],[8.380106,-5.164958],[-3.139746,-3.323798],[-8.235212,-0.453140],[-6.056170,-3.392027],[-7.491110,-7.146531],[-1.696090,7.616815],[6.629438,8.616201],[3.559214,5.262446],[-5.840712,1.576434],[2.810411,7.766956],[7.814391,9.980647],[4.960741,-9.515813],[7.559893,2.696741],[-6.178333,-8.429042],[-4.801192,-1.348990],[-0.870739,-7.381186],[1.590643,0.469936],[-5.147970,-3.534927],[-7.897854,9.235409],[9.948163,0.508281],[9.723549,-4.794747],[0.588855,2.173953],[-8.871603,2.809103],[-7.223043,-5.679111],[-2.777747,-8.998003],[-3.047724,-2.339636],[-0.625092,5.895668],[7.225933,-8.691995],[6.394904,3.842923],[7.886473,-6.824662],[-9.548839,7.325292],[-5.336403,-7.647244],[3.128232,2.821106],[4.809147,7.325782],[9.190321,4.786660],[3.559372,8.310837],[-9.822721,-2.460032],[-3.600115,6.974563],[-6.348642,6.551548],[-6.276909,7.380757],[-2.082527,-8.080198],[2.974000,1.191314],[-1.255338,0.895289],[7.967835,-7.339953],[7.281722,0.684045],[-7.950921,-9.393882],[8.918509,5.035735],[3.997193,-3.834581],[4.211325,1.989233],[-0.093199,2.940750],[0.004799,-6.886170],[-1.463907,-1.177478],[8.741883,2.999178],[6.596933,5.603405],[1.448501,-8.354333],[0.080449,-9.173218],[6.168381,6.769002],[-2.280930,-6.389599],[-7.768276,-0.518162],[-8.244478,-7.957878],[8.628078,1.434444],[-0.689711,9.766911],[4.306517,-1.136828],[-7.044035,8.032463],[4.565580,1.185637],[9.453617,0.620533],[2.848716,-5.595198],[1.510200,1.105503],[-8.897171,1.126267],[8.454576,-9.940306],[-5.766379,-4.935649],[4.556647,0.310088],[-9.718385,3.616866],[-1.241001,6.085575],[-4.131075,6.807252],[5.776659,-1.601221],[0.616242,-6.183113],[1.916869,6.281667],[3.969996,-7.729736],[9.801957,4.905221],[9.738931,-8.427127],[-4.202163,6.200910],[5.431998,-4.670596],[2.961917,3.633104],[-4.653513,-2.260266],[-7.255310,7.013876],[0.932959,7.382179],[3.090405,-6.941491],[2.323874,5.921092],[6.874771,-1.511037],[9.299495,8.468141],[-5.657799,-5.988970],[-4.623524,-3.549341],[-6.187763,-7.701640],[4.001470,8.784094],[2.788370,3.379249],[-0.889660,-4.411368],[6.135956,-2.811847],[4.122537,-7.336993],[-0.804079,-7.970502],[5.302859,-1.927218],[-4.988833,7.711516],[-9.386488,4.933831],[-7.029318,-7.633417],[8.068362,-6.402603],[9.061822,1.026345],[-2.554723,-3.168363],[-9.921780,5.301469],[0.395284,-2.362278],[0.406527,-0.221329],[-6.186543,2.277186],[-2.151903,8.877105],[-2.882916,0.785453],[-8.557433,-4.906136],[-8.162586,-8.653799],[5.787656,-8.539755],[0.317670,-1.315507],[-8.886493,-1.890822],[-7.432118,9.474013],[5.739623,-5.450428],[9.379645,6.820005],[8.786709,-4.535027],[9.703380,-2.798547],[9.544699,1.905839],[3.974965,0.743589],[-6.221172,-0.183411],[8.621838,-2.835920],[-9.914653,-1.066248],[-5.504018,-0.513727],[1.159356,5.981726],[5.402922,5.520178],[-1.900390,1.190159],[-5.304230,3.262973],[-3.590037,-0.014216],[5.498551,-8.261624],[1.634861,0.653831],[-6.625836,4.307627],[6.552036,-5.633499],[8.243062,8.982121],[6.962339,1.520185],[8.416371,-7.771964],[0.499123,9.584357],[0.722542,-0.869633],[-3.387423,-4.100729],[8.960936,-1.461977],[-2.751144,9.732874],[-2.459952,4.907224],[5.897989,9.033974],[3.653616,-3.175749],[-0.275668,-7.120534],[7.854949,8.888692],[-8.983029,7.423313],[8.181514,-6.011877],[-5.528807,6.299645],[-0.727084,-1.370753],[-0.060887,-7.020654]], dtype = "float64")#candidate|2541|(231, 2)|const|float64
call_2539 = relay.TupleGetItem(func_862_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(const_2541.astype('float64'), [3, 14, 11]), ), 1)
call_2542 = relay.TupleGetItem(func_866_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(const_2541.astype('float64'), [3, 14, 11]), ), 1)
uop_2547 = relay.cos(const_2541.astype('float64')) # shape=(231, 2)
func_862_call = mod.get_global_var('func_862')
func_866_call = mutated_mod.get_global_var('func_866')
call_2549 = relay.TupleGetItem(func_862_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(const_2541.astype('float64'), [3, 14, 11]), ), 1)
call_2550 = relay.TupleGetItem(func_866_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(const_2541.astype('float64'), [3, 14, 11]), ), 1)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_2552 = relay.TupleGetItem(func_2422_call(), 0)
call_2553 = relay.TupleGetItem(func_2423_call(), 0)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
call_2556 = func_315_call(relay.reshape(uop_2547.astype('float64'), [3, 14, 11]), relay.reshape(uop_2547.astype('float64'), [3, 14, 11]), )
call_2557 = func_315_call(relay.reshape(uop_2547.astype('float64'), [3, 14, 11]), relay.reshape(uop_2547.astype('float64'), [3, 14, 11]), )
uop_2562 = relay.log10(uop_2547.astype('float32')) # shape=(231, 2)
func_862_call = mod.get_global_var('func_862')
func_866_call = mutated_mod.get_global_var('func_866')
call_2564 = relay.TupleGetItem(func_862_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(uop_2562.astype('float64'), [3, 14, 11]), ), 1)
call_2565 = relay.TupleGetItem(func_866_call(relay.reshape(const_2540.astype('float64'), [1, 14, 11]), relay.reshape(uop_2562.astype('float64'), [3, 14, 11]), ), 1)
bop_2566 = relay.multiply(uop_2562.astype('uint8'), relay.reshape(call_2549.astype('uint8'), relay.shape_of(uop_2562))) # shape=(231, 2)
bop_2569 = relay.multiply(uop_2562.astype('uint8'), relay.reshape(call_2550.astype('uint8'), relay.shape_of(uop_2562))) # shape=(231, 2)
func_292_call = mod.get_global_var('func_292')
func_297_call = mutated_mod.get_global_var('func_297')
const_2574 = relay.const([8.423463,4.208750,0.894841,-3.994850,-4.999264,-1.738318,-2.759173,-3.187340,-3.275814,-4.621293,-7.429829,-2.123230,-1.937049,2.733910,-8.771588,8.138916,4.084682,-9.587952,2.844253,-9.788731,7.069540,-3.351778,-3.035458,-4.294482,5.888226,5.943446,9.792888,9.110361,-2.427553,7.423124,5.046214,3.675928,8.237453,6.797650,-9.610065,7.415682,-8.298616,-1.343864,-3.129105,9.140534,7.479255,1.464071,8.299520,-1.810804,-2.271341,-4.226246,8.690519,-9.888174,5.269201,2.353617,5.391168,-7.119595,-9.088547,-6.513395,5.774611,-3.503424,-5.094632,-8.361679,-6.582209,-1.799825,-4.668860,-5.639378,-6.727415,3.996923,-3.362540,1.116682,6.773232,-3.727988,-6.334217,-8.395476,-5.530905,-6.042798,-4.496478,-4.406595,-7.633984,7.261320,2.989905,-1.285379,-1.600801,-9.566363,-2.436591,-8.543546,8.947096,2.298109,-0.387722,3.164346,1.860042,0.280800,-2.032326,-9.686177,-3.236959,-1.776067,-7.360666,5.575799,-5.666808,3.715764,-2.924242,-9.168366,-3.610075,9.997506,6.234839,-1.909414,3.639018,-3.731095,1.997162,-4.790294,6.646792,-4.963365,8.150853,-8.741471,5.558590,-6.819382,-6.381718,3.978313,-8.165007,3.270220,4.081985,-1.588073,9.708321,5.328571,-3.507568,8.278345,-1.893704,6.389204,2.526530,4.053721,9.793040,-5.325124,-8.867824,5.925736,0.584065,-8.220906,-3.934637,4.465098,0.282153,-8.320169,-2.883424,3.265837,3.575144,-4.156490,8.481420,6.364609,6.733456,-3.027780,9.760077,-4.585646,-9.690014,-2.821880,-9.566757,-0.958841,-0.035950,4.455586,-5.925926,2.658229,4.017332,0.199541,7.955289,3.002070,-2.237442,-2.766213,3.082639,-3.625298,4.851957,-4.377312,-6.223065,9.521243,-1.632577,4.782630,-0.140181,-7.549019,-0.243129,-0.809642,7.745970,-1.862393,9.278948,4.941096,-9.267939,-3.925315,-8.657714,7.461706,4.069481,7.363402,9.328515,9.696762,3.115454,8.897333,0.602141,7.326391,1.870342,-3.561800,-6.702178,-1.207015,-7.703731,-3.585865,0.846487,4.161224,5.636901,-4.384293,-2.708472,-5.830709,-6.189929,9.258668,5.509906,-8.563737,8.671152,6.511763,-6.920991,-9.930047,-4.720942,-3.086194,-4.381583,-3.672916,-4.021519,-3.953900,-3.802469,4.403710,-9.382194,-9.409704,6.128206,-5.936444,-4.423169,0.998822,9.181702,8.105215,-2.467532,-1.621488,9.911571,-2.213090,6.344654,-1.145344,3.871487,-6.029845,9.781332,2.271830,8.326952,6.856116,4.436053,7.386301,-0.011555,-9.387659,-4.572721,3.225723,-6.093551,3.955734,-1.531054,4.848316,5.766896,2.776680,1.557291,-1.861880,-9.282621,-9.117609,-4.182624,6.405110,-8.465420,3.238054,-1.500707,-2.218544,0.555856,-2.992786,-5.772208,6.388582,-1.133684,-4.875702,-4.478472,-3.243492,-2.762423,-3.372066,-8.311565,6.278194,-7.760042,8.411895,2.708574,2.277798,-0.617851,-9.978828,6.935926,-6.148336,-7.304821,3.765128,4.243311,5.393764,-4.121154,-5.236171,0.529609,1.736537,0.385588,-2.771599,0.082788,8.624411,-8.420230,-5.734363,0.529631,9.902204,3.912967,-8.542533,-8.612290,-8.539969,-4.132195,-2.354543,-2.408154,6.459331,-0.703271,-1.666279,1.423320,6.801507,1.359341,0.023600,9.546015,-6.640130,-8.568098,1.921681,-9.428645,3.132825,0.369048,6.254186,-2.097117,0.076130,-8.224531,-3.637288,2.122387,7.179144,4.909462,3.596111,6.492167,9.681982,1.645285,0.265131,-6.780461,-8.456489,-1.815637,6.009323,-9.308999,2.512925,-4.501060,-5.611760,-3.296603,-9.038115,-0.322943,-0.799644,1.155197,1.355447,-0.234995,-7.633131,-6.763452,-3.949462,-2.055497,0.109520,-8.066794,-3.145128,-8.536853,-2.096096,-3.706200,-7.327184,3.877091,4.897442,-1.943932,4.125179,9.551163,6.314502,-5.220333,-3.552647,9.617230,1.717044,-9.187523,-5.320904,-5.737333,1.830244,7.232716,1.944710,-2.563643,7.604514,-7.123168,-8.447525,-7.692879,8.893871,2.479549,-5.138113,8.719741,5.132087,7.584131,-6.242533,-6.264817,-1.294385,1.778381,-3.243415,-1.131155,-5.725401,-2.912977,-4.166747,-5.389975,4.263786,4.437534,-6.728803,8.709939,1.407314,7.928138,-0.566327,5.569991,4.029676,2.968441,0.106958,6.831251,-8.225847,-7.728961,-8.154892,-3.038181,-3.381333,9.292365,-3.692040,-4.533353,3.327789,6.943472,-3.559507,7.062814,0.387300,5.938676,-9.433899,-8.926508,8.052146,-0.620689,9.763459,3.538218,-0.645363,-8.797911,-0.048680,-0.139496,-0.467989,1.944903,7.896544,-5.288734,3.636046,7.616336,-0.496506,-4.593653,-0.182971,3.396539,4.352581,6.574816,-5.942920,-8.013368,4.585081,-0.968831,-5.709953,-2.166851,-1.649869,-2.128629,-4.129964,-6.740433,8.995193,-3.850262,3.113488,5.713914,0.576357,-6.108073,-4.945094,-8.179383,-7.231647,2.185008,-7.900000,-3.852104,-0.352650,4.567982,-3.307755,4.346661,-8.848645,4.675509,-1.258151,0.077043,8.231325,7.293165,-5.622003,1.946038,-7.963046,-1.482634,-2.147450,-0.708105,6.425819,-3.285189,8.900103,-9.010010,3.261544,1.779195,-5.695777,6.053204,-1.291021,-1.193576,-5.574131,9.765233,-8.153189,-7.413578,-5.851865,-2.736654,-2.083534,0.469842,-4.795124,2.590333,8.979134,7.762001,8.945574,-5.296363,3.085752,2.119951,-3.857876,2.879106,-4.572448,-3.644505,-0.989725,-0.654172,4.746856,-7.820743,3.618257,5.097599,-7.137323,8.458910,-5.739145,4.405284,-6.467431,9.438048,-6.753210,3.895782,-6.450824,0.854679,-7.544267,4.698777,-0.851339,-7.893461,-3.097603,-9.548191,-0.648253,-1.483912,2.766785,0.086299,-1.512761,0.817455,1.670614,5.162215,-5.008596,-0.106039,8.147877,-4.700816,0.483454,0.983510,-5.163826,-0.279201,1.973941,5.444226,-1.317890,-6.801711,-3.744857,4.685395,6.117061,7.608054,-0.095284,-6.941507,-5.908801,4.044323,3.917674,7.017257,-7.761898,7.244252,-5.466038,1.842937,6.284568,-9.154857,1.076093,6.024652,-8.070004,-2.416131,-3.569438,-2.632930,7.876630,-8.697421,9.524512,-9.098018,8.509231,5.860889,8.163065,-0.265937,4.332060,-0.225422,3.358240,0.316620,-4.510242,-3.090953,-9.356611,5.626815,-1.235605,6.218668,4.578709,6.173160,4.482333,5.070942,0.975813,3.476528,-2.000212,0.748548,8.503203,9.490503,-7.025040,-2.335000,5.935199,-9.596110,0.940089,6.627829,-3.670113,6.458078,7.902406,-3.816929,-9.480607,4.162207,5.403367,-8.434915,0.113958,-3.268103,4.639001,5.124304,6.061629,-8.981717,1.456108,5.040414,4.433567,9.031727,1.987644,8.050391,0.398879,-5.327809,-1.338213,1.671597,9.013571,8.611274,-8.653297,6.846316,1.245084,-1.163489,0.159751,-4.938685,-2.163223,3.605723,2.046768,6.985029,-0.394310,5.249008,7.071246,-4.212573,-7.834901,4.719693,-5.204522,-6.084665,3.858047,-1.066316,4.329364,5.545976,-7.641493,7.708250,1.487786,-5.821406,4.133095,-0.680508,-5.171361,1.127259,3.549892,6.876775,7.194415,5.115951,-8.387723,0.104926,-7.677526,4.844442,9.521399,-4.253274,-2.292137,-1.317029,-5.258194,-6.201816,-2.977967,4.812976,-3.320224,0.775640,0.365764,-3.606773,9.426254,8.263337,-3.054127,-6.352203,1.774063,1.906789,-4.418861,4.201716,-5.733538,4.342339,0.198873,-9.755154,-9.831518,9.428433,-6.930185,0.523035,5.988630,4.013439,-3.264897,-2.891464,-6.175925,2.305603,0.827889,2.267099,-6.358399,-4.927225,-2.551745,4.486616,4.423647,-9.779521,0.095751,5.616533,-4.876989,-1.643526,-5.898323,-5.706820,-5.577735,0.811914,1.413089,-1.939297,-3.133702,3.606679,4.229320,8.645597,-8.485283,6.804036,5.096526,-6.106736,0.236990,-3.844630,4.901435,8.974722,-2.731659,-6.037890,1.285905,1.033875,7.609477,-9.456377,-7.512604,0.221150,8.621203,-6.900718,8.984538,-2.400430,4.842598,7.172008,-8.415007,9.515240,6.830821,-1.438124,-7.927094,-2.323207,-3.732277,-1.544063,-7.203951,9.335404,-6.440502,1.222760,7.542278,9.386162,-8.572393,5.374742,8.391500,-1.114038,-4.180737,5.154205,-8.857960,0.166439,4.369006,6.542558,8.072826,7.113856,-6.394841,-0.353747,5.220754,5.722537,-3.987484,-8.198225,3.729565,-0.552587,8.993654,-7.080215,-7.729715,-2.071543,5.464739,0.628035,6.868018,8.170741,7.773625,7.877588,1.847914,6.793157,1.391272,2.547538,-7.211445,1.507567,9.722881,3.622180,2.142763,1.601795,-8.619946,1.843983,-7.621435,2.101388,-8.201988,-6.840073,0.214813,9.312826,9.493388,4.235364,7.265977,3.470092,-5.475181,-2.890000,-8.953104,7.989963,-5.115375,-5.601961,5.500585,4.274273,-6.527544,4.839504,4.139662,6.113399,0.623959,-6.875514,4.063742,4.136730,-5.200713,6.374052,-4.989326,7.390287,4.847253,8.666903,-6.485638,7.800888,-8.744121,-3.439826,5.845789,-0.143591,6.579965,4.300031,-0.605150,-7.278553,-3.287815,9.862119,-9.288887,-4.070985,6.322158,-1.729914,-7.801295,-4.333131,-3.575798,-2.798915,-2.268627,-2.479655,0.716273,-6.918308,7.448116,-5.552728,-2.898511,-2.689653,9.424755,6.502360,-8.218699,-8.790102,4.933352,0.370304,3.190396,1.235540,-9.742886,0.979007,-9.970379,0.869673,1.749281,0.893075,7.950397,-6.768541,-0.913611,1.196347,-0.306967,4.372880,4.033418,1.219450,-8.320947,-6.543677,3.813887,-8.517958,-0.484607,0.475094,-9.383901,0.026319,-3.685307,-2.482371,8.581096,8.560782,0.563958,5.717393,7.306038,6.339555,-9.042960,-4.106411,-3.395308,1.834150,-1.220762,-6.341859,5.599846,-3.270383,3.822640,8.097965,2.149721,-0.368309,1.347856,8.727737,6.587976,7.332860,-1.187526,2.435855,-0.276906,0.912759,2.454874,1.076139,-2.118264,-6.132398,-9.491831,-9.761106,-3.815728,-9.613245,2.750891,-9.997001,8.748316,-1.025642,1.322994,-3.771903,-4.831224,-6.982651,0.120889,-4.398690,1.913426,0.995590,-3.479028,2.949703,2.289194,6.761729,2.480227,2.756726,3.915829,5.335758,1.912814,-1.506960,1.390307,1.361369,2.226635,-3.031278,-0.510643,-5.144969,-8.239538,6.846365,-9.802107,-6.244933,-7.522143,-0.355217,3.811615,-9.728605,4.364684,-0.273571,2.267587,6.468512,3.824550,0.621104,5.028073,2.833513,-0.488357,5.129811,2.955710,-6.989143,8.238860,7.792965,-2.409813,5.377142,-5.073310,7.517342,4.572887,-4.195402,-4.350517,-5.841626,-1.312891,9.814973,-2.330313], dtype = "float64")#candidate|2574|(990,)|const|float64
call_2573 = relay.TupleGetItem(func_292_call(relay.reshape(const_2574.astype('float64'), [6, 11, 15]), relay.reshape(const_2574.astype('float64'), [6, 11, 15]), relay.reshape(const_2574.astype('float64'), [6, 11, 15]), ), 0)
call_2575 = relay.TupleGetItem(func_297_call(relay.reshape(const_2574.astype('float64'), [6, 11, 15]), relay.reshape(const_2574.astype('float64'), [6, 11, 15]), relay.reshape(const_2574.astype('float64'), [6, 11, 15]), ), 0)
output = relay.Tuple([call_2531,call_2539,const_2540,call_2552,call_2556,call_2564,bop_2566,call_2573,const_2574,])
output2 = relay.Tuple([call_2532,call_2542,const_2540,call_2553,call_2557,call_2565,bop_2569,call_2575,const_2574,])
func_2583 = relay.Function([], output)
mod['func_2583'] = func_2583
mod = relay.transform.InferType()(mod)
output = func_2583()
func_2584 = relay.Function([], output)
mutated_mod['func_2584'] = func_2584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_2619 = relay.TupleGetItem(func_2422_call(), 0)
call_2620 = relay.TupleGetItem(func_2423_call(), 0)
const_2634 = relay.const([[[-3.259675,-6.235357,9.848902,-0.235034,-0.057726,1.352418,-8.853274,-2.325111,2.501766,2.303188,-6.777377,-6.983331,-0.337668,-5.101514,-6.648252],[5.597661,5.606701,-3.565622,1.407494,-5.227904,-7.998447,8.094893,-6.084021,-6.303346,8.021592,-8.845036,-2.121459,2.947920,-2.810101,8.024516],[1.127507,-3.752301,-6.130125,1.050423,6.718267,-5.515721,-4.457709,-3.305078,3.887241,-2.080522,7.621820,0.292461,3.518465,-9.261188,-8.634739],[7.850987,6.164192,0.150138,-7.962077,9.763979,-1.379603,9.755988,1.662253,8.518554,9.944287,0.979742,5.162989,-7.722133,1.600676,-5.740042],[-1.935208,7.325776,0.857764,-6.366119,-5.720452,-3.207703,6.836098,3.735162,3.285617,0.796126,-9.009897,1.557752,1.231002,-8.446007,1.907213],[7.364441,-8.167492,0.880273,5.225049,-0.642722,4.427249,-7.979503,-8.615941,6.879812,-2.674688,-5.533771,3.232643,-1.599167,-4.832632,-6.327127],[-5.040088,4.119582,-1.514526,-4.625134,-2.853202,8.315994,2.834220,-8.767869,3.193275,-9.485075,5.163650,-5.129107,-8.300531,7.929964,-1.944557],[-5.984782,5.364221,5.619795,-8.530125,7.927497,-8.589846,-7.965591,-5.389801,-2.183555,-8.756212,-0.134967,4.736820,7.872346,6.826629,-4.860369],[-2.881513,-9.175763,1.561842,8.513349,-6.941986,-8.593525,-2.783145,-6.850007,-7.599369,-8.444517,6.425278,-1.592099,-3.677432,2.367582,-3.133469]],[[0.672157,-8.041074,7.167860,9.149272,-4.075039,1.794762,6.777635,5.495525,5.618952,-4.040301,0.020201,-3.260022,-9.273712,8.264790,-4.891651],[-9.517225,-9.539943,-7.761950,-9.079232,-5.825158,4.932051,1.144440,6.189146,-7.199485,-5.974415,3.767462,2.918789,6.422127,-1.244005,1.638202],[0.059970,-4.674279,-6.713509,6.477104,-5.794385,4.989781,2.354327,-7.545668,-3.215513,1.400547,7.798533,-5.840050,-6.878555,6.130426,-4.727728],[-1.731830,-3.067571,9.700138,3.660636,4.082271,-8.301411,1.028587,2.041981,3.379416,-5.121007,4.833963,1.578177,-4.683436,7.828471,-2.166997],[-1.385578,4.724521,3.761530,-2.933230,7.149732,-8.848408,-9.740020,-9.815008,-9.755201,6.108659,-7.560868,-4.354576,-1.649189,-5.060865,-9.644634],[7.670343,9.631387,1.145204,2.888366,2.145742,3.325710,4.426370,5.780347,-7.168716,9.940045,-8.204620,-4.191965,0.232202,-1.688628,-2.976137],[-8.794639,3.329612,6.379748,-9.939767,-3.405259,9.507260,4.849857,-5.967394,-6.173673,-5.666009,-6.022717,-4.276475,-7.101402,-9.446637,8.128915],[1.240985,-2.353302,3.963297,-4.131018,1.731793,8.284243,-3.334817,1.598261,2.077138,6.294754,4.443922,-0.034166,-5.363034,5.694460,9.818840],[-0.664033,-5.816930,-9.088065,-2.627569,5.478165,5.502821,-6.097091,5.784035,-1.358378,-2.489179,1.682442,-5.104015,4.339479,-1.131130,2.014478]],[[7.193086,-9.916221,-8.602062,2.089928,9.733437,-4.386090,2.378103,3.085320,-3.307212,3.809020,5.473760,-8.658545,-7.954234,9.319940,-9.668113],[8.083111,-9.523995,6.662771,-7.906529,8.846733,8.955029,-3.385130,-6.605467,-3.071074,-8.475870,1.063360,-2.591519,3.171042,4.169178,8.958013],[0.379400,8.136018,-5.050776,-9.155942,7.565571,6.049352,-9.097337,2.455812,4.270851,8.248648,8.670350,7.861475,2.338130,6.224766,5.529481],[-2.243288,2.296115,-5.908556,3.875325,-9.135167,-1.060000,7.359015,3.191385,-5.368596,-9.002403,-4.781426,-6.101253,8.597435,-7.253880,3.538354],[8.329635,-7.010967,6.678785,7.364611,-2.265055,-2.100766,9.601087,9.970002,-5.852511,9.218039,3.943396,3.008387,5.265753,2.793568,1.316371],[-7.876810,6.909939,4.742432,6.366325,5.075740,-9.305750,2.335721,7.821924,-6.935321,-9.373576,4.256797,-8.158167,4.906655,9.815870,2.705849],[9.671812,-7.156152,1.677161,-8.457648,-5.621974,-2.380285,4.991171,-9.379638,-2.569525,-7.450128,-4.166383,-0.141237,-3.939525,-0.178559,3.160406],[-0.903869,9.746833,0.250632,-0.003578,-8.400250,8.780693,3.940329,-9.800955,1.908018,6.932350,4.587880,3.007821,-4.800622,5.259622,-7.190790],[-7.494319,-8.892117,2.471734,-8.278948,6.879594,-5.355062,5.289514,5.045631,4.804916,-2.661193,-0.719987,-4.901990,-3.171878,-5.577060,1.912858]],[[-4.959520,1.280772,-8.365048,-3.105092,1.972594,5.051049,-6.161102,6.760934,-9.348645,-4.878285,0.620895,-3.761615,4.928548,-1.874969,-4.644360],[-0.865051,-0.724937,7.338459,-7.374950,4.074368,7.835335,5.976074,-8.780938,6.202263,7.052532,5.761011,1.906603,-0.770655,-0.307400,-5.262266],[-9.086711,6.554191,-2.822032,2.280441,-3.361130,-9.685621,8.635904,7.200627,2.374178,-9.620642,1.452547,5.311323,9.072612,2.494016,9.783787],[7.430195,-8.187120,-4.407102,9.902161,6.591011,-6.344244,-4.598653,1.610557,6.982566,-8.044437,9.536652,-5.533851,-7.232422,-2.105948,7.189276],[6.250861,0.906644,-6.287663,9.205508,-2.898168,3.547583,-4.211437,-9.802505,-7.734807,-1.337250,-6.587538,-1.586196,1.776246,-8.210498,-6.036414],[4.060198,-2.376919,0.644708,-9.641845,8.700509,4.381451,1.405712,-8.724318,6.102353,-2.446924,4.401037,3.644169,7.778698,7.750040,-1.108205],[3.982936,1.092274,-4.896736,-6.138226,4.624353,5.447518,5.086970,3.854067,9.848311,-2.998802,-2.687998,-6.631059,1.827347,-9.767628,0.001054],[-1.290096,-2.413228,8.823342,-7.377204,6.134841,0.545142,-4.197945,-4.212522,-5.767177,-5.598763,3.122250,-8.730154,-5.789134,1.554783,-7.459357],[2.593058,0.313932,0.693676,-2.286313,9.067803,8.193539,7.745954,1.568790,6.146685,2.514695,-5.867118,6.289689,-5.706077,-2.553118,-8.756343]],[[-2.888202,1.554157,-7.402357,-7.805100,-7.817400,-8.304594,-3.906569,0.336458,0.678396,0.389505,-2.469164,4.830811,0.105689,4.126576,8.031869],[-1.374689,5.661559,-4.927354,-2.629963,-5.194786,-2.844402,0.423080,-1.338859,-2.485579,4.458589,-6.690185,2.836495,2.178331,0.126477,-5.205796],[8.559403,4.469186,-2.435050,-3.924215,-5.775119,4.588576,2.594369,-3.548346,7.502310,-3.226881,-2.944621,-1.878929,-9.911111,-3.750408,-4.376313],[5.882585,-2.936360,-1.972229,-6.318021,2.958926,9.503647,9.884504,7.556512,4.056580,-6.186231,-7.837071,-6.941056,-2.352949,-3.455662,3.605205],[2.832890,-0.806149,4.748862,-1.419285,5.391938,-1.824909,-2.170661,-3.665025,6.030220,-7.795358,2.518046,5.888354,1.763986,-1.497817,-5.651436],[-8.204052,-7.813347,8.840760,3.728265,0.981461,-1.615455,6.770649,5.999537,-8.373544,8.675207,-0.627986,0.877686,0.678393,3.539804,4.281136],[0.888444,2.411330,-1.669965,1.928616,-4.589906,3.090047,-6.417338,2.986925,-7.112793,5.993651,-0.667477,-8.724106,3.655190,-4.607299,1.145744],[-2.495412,8.195177,3.909189,5.572512,8.118496,2.227030,-3.079927,-5.912632,-1.817749,4.986499,-1.770107,7.820896,-1.990011,-2.634674,-7.118886],[-3.170041,-7.892909,-8.245248,6.445070,-9.848575,-9.293308,4.364612,-5.924092,-5.093314,-2.115312,-7.112392,-7.234729,9.135812,-6.993099,6.599352]],[[-5.494940,4.627005,-8.315237,-2.005261,2.565646,-7.606053,-4.711775,-5.884381,5.916954,5.439347,8.868220,8.090699,-5.177707,-8.741910,-3.572325],[9.886135,6.501698,-8.966771,-6.775569,5.217180,2.777111,5.364433,-0.459081,-7.180644,6.177063,3.442747,7.101551,-7.073722,-3.300377,-2.095037],[-0.669418,4.319527,8.719797,1.349161,-6.114787,2.109387,2.924595,6.065195,5.935055,4.097389,-4.039256,2.881366,5.564695,1.721569,-1.185626],[2.631199,6.886460,-1.685693,-1.972582,-7.246673,-3.227317,-8.402195,8.809219,2.286746,-8.985590,1.672471,-8.181979,-5.995753,-9.851958,6.744039],[-3.788134,7.590323,3.830545,-2.125175,-1.416225,-2.597191,-5.118880,-6.964194,-5.289782,-1.283713,-6.378021,7.413892,-2.556559,7.932751,8.976816],[6.250599,1.378964,8.114138,-1.384700,-5.646517,1.196152,-3.006856,3.112896,4.018698,-5.530424,-3.046393,6.044077,2.800244,-5.986825,-0.741683],[3.110154,6.302319,-2.393037,6.070335,-6.696100,6.799805,-5.189571,3.246905,-4.344889,-7.605240,4.718419,-3.505557,-2.383450,-6.754593,-3.132203],[7.288848,7.697304,-0.395071,1.132891,-1.240640,9.944187,4.644221,7.306853,3.931247,6.703677,3.535470,8.209464,2.187038,1.096524,-3.526415],[-2.737318,-0.219393,-2.530536,-9.241736,-1.767476,7.420146,-4.246659,-2.912466,6.024265,-5.874409,3.575689,8.309207,1.733971,-2.610020,3.460173]]], dtype = "float32")#candidate|2634|(6, 9, 15)|const|float32
bop_2635 = relay.divide(call_2619.astype('float64'), const_2634.astype('float64')) # shape=(6, 9, 15)
bop_2638 = relay.divide(call_2620.astype('float64'), const_2634.astype('float64')) # shape=(6, 9, 15)
output = relay.Tuple([bop_2635,])
output2 = relay.Tuple([bop_2638,])
func_2650 = relay.Function([], output)
mod['func_2650'] = func_2650
mod = relay.transform.InferType()(mod)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mutated_mod.get_global_var('func_2650')
call_2651 = func_2650_call()
output = call_2651
func_2652 = relay.Function([], output)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2681 = relay.TupleGetItem(func_2479_call(), 0)
call_2682 = relay.TupleGetItem(func_2480_call(), 0)
func_1358_call = mod.get_global_var('func_1358')
func_1361_call = mutated_mod.get_global_var('func_1361')
var_2688 = relay.var("var_2688", dtype = "float64", shape = (1950,))#candidate|2688|(1950,)|var|float64
call_2687 = relay.TupleGetItem(func_1358_call(relay.reshape(var_2688.astype('float64'), [10, 15, 13])), 0)
call_2689 = relay.TupleGetItem(func_1361_call(relay.reshape(var_2688.astype('float64'), [10, 15, 13])), 0)
output = relay.Tuple([call_2681,call_2687,var_2688,])
output2 = relay.Tuple([call_2682,call_2689,var_2688,])
func_2703 = relay.Function([var_2688,], output)
mod['func_2703'] = func_2703
mod = relay.transform.InferType()(mod)
var_2704 = relay.var("var_2704", dtype = "float64", shape = (1950,))#candidate|2704|(1950,)|var|float64
output = func_2703(var_2704)
func_2705 = relay.Function([var_2704], output)
mutated_mod['func_2705'] = func_2705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2721 = relay.TupleGetItem(func_2650_call(), 0)
call_2722 = relay.TupleGetItem(func_2652_call(), 0)
output = relay.Tuple([call_2721,])
output2 = relay.Tuple([call_2722,])
func_2723 = relay.Function([], output)
mod['func_2723'] = func_2723
mod = relay.transform.InferType()(mod)
mutated_mod['func_2723'] = func_2723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mutated_mod.get_global_var('func_2723')
call_2724 = func_2723_call()
output = call_2724
func_2725 = relay.Function([], output)
mutated_mod['func_2725'] = func_2725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_2762 = relay.TupleGetItem(func_2583_call(), 4)
call_2763 = relay.TupleGetItem(func_2584_call(), 4)
const_2764 = relay.const([[[-3.188873,8.091312,1.338675,3.328492,-7.531302,2.845966,-6.061348,3.687888,9.478741,5.577487,4.585963],[2.604393,-4.413759,-5.058199,-9.227754,-5.174557,1.820000,-9.414479,9.867031,6.725663,5.340712,-5.982594],[-2.390226,-9.079831,3.825742,4.803439,2.999041,-4.433159,-0.707288,6.210405,-7.103079,6.093002,7.543147],[5.309956,-7.456609,-8.029304,8.091397,2.237347,7.212211,9.624111,0.583254,5.454143,2.317094,-8.158205],[-4.192604,-4.446920,6.220328,-8.154144,0.752413,8.011284,-5.467808,6.397732,-0.837371,-6.443639,2.820980],[4.241616,-6.529532,1.173918,-4.183321,6.543413,9.416672,-2.710583,-4.708531,4.171564,-4.132090,9.917771],[7.611545,-6.328794,6.199510,4.030929,-1.809584,1.320948,1.084676,-2.140384,-8.511428,-3.619074,8.108358],[8.364660,2.008782,6.087124,8.166085,4.050552,6.372682,9.517632,-4.967961,4.963707,5.174941,1.433058],[-1.867406,-9.074152,-3.242775,-4.752783,9.486776,2.529606,5.733256,-6.395191,8.445999,7.559262,9.051086],[9.258746,5.037378,-6.493973,1.650258,0.681163,9.184694,-4.047603,-4.586862,7.223380,-3.999940,-3.301178],[7.228902,2.193896,-9.428136,-2.474784,6.234941,2.796016,-0.977544,9.710718,-8.994531,8.905420,-5.602185],[3.958619,7.270887,2.794317,9.546511,3.123608,-9.418002,5.688881,8.736290,1.496353,6.630287,9.763955],[-0.958063,0.038152,0.410183,1.174661,-6.642358,-8.955800,0.743572,-7.140467,9.300969,-8.369161,-8.387646],[2.397114,1.762741,-1.688830,4.355537,-9.104112,-3.568315,-2.861387,5.624297,5.728316,-7.024461,9.424469]],[[9.001557,-1.610458,9.616551,0.237113,-0.135782,5.775830,2.798920,-1.644493,6.314938,-5.564767,-0.892085],[6.787179,-8.295695,-5.756747,-1.806531,2.596408,1.785216,-2.078419,-8.948957,-2.845257,-8.792773,-6.155374],[2.849103,6.781728,5.886172,-5.786540,-7.682953,0.302688,-2.760186,-0.695032,6.336863,8.184845,1.180918],[8.218748,5.022524,2.401079,7.550485,0.548384,-7.030344,2.623663,-6.280291,-3.966966,5.310354,-7.481592],[7.544608,-3.287929,-4.362693,4.341464,-9.727011,1.245048,-1.317704,5.964434,-5.242095,-3.054384,7.263337],[-4.936558,7.261373,7.000940,7.422766,-3.393099,-7.681933,1.598862,-2.518720,-1.446472,-0.452329,-6.921806],[-5.996604,-7.682138,-3.419460,-1.380538,3.718116,-5.963503,3.632454,1.291898,1.991013,1.146607,9.782517],[-2.893057,8.392873,-5.421864,-3.798044,-8.862968,-6.958687,4.799682,5.667186,5.840017,-3.240652,7.067239],[3.856007,-8.614565,-3.804404,-7.844235,9.356796,-2.064149,0.853780,-5.113887,8.439417,5.650878,6.947017],[2.441605,-0.632041,1.350908,-8.245485,-7.411632,-8.873036,-4.660803,-0.563379,-7.580543,2.878046,-7.015124],[1.685779,-9.399994,9.156160,-5.199121,-0.361141,0.482126,-9.965337,1.186517,3.548907,-3.240281,5.426791],[-3.486261,4.394895,7.719421,5.357673,-8.593738,-6.876950,-2.980704,-9.946950,-8.678491,-8.496019,1.256633],[0.266013,2.584915,-0.005627,-7.100547,-5.087080,6.314466,2.000068,-2.304712,-7.837365,0.733527,4.636574],[-6.117604,-3.321889,-2.994370,-9.897371,-4.530037,-5.740476,-9.024005,7.572019,-0.940348,3.087535,-2.168511]],[[-3.059207,-3.908885,4.430479,7.207542,5.712472,-6.758807,0.441522,-1.525698,-9.071879,9.867926,-7.823434],[3.609479,-4.285560,6.257638,6.049810,-0.455456,-5.678159,-7.724766,-8.121254,-6.803699,7.161413,1.140770],[4.135233,-1.481392,-9.800159,-8.191260,9.823216,3.154545,-7.151201,4.334069,-6.540304,4.439047,-3.719991],[-4.749996,-6.533063,-6.453039,5.462553,-2.330993,0.482200,-0.354031,-1.552342,-8.153512,-0.842040,8.837126],[-4.950310,-8.125589,-0.458981,8.366745,7.420758,8.218448,-2.880441,0.870106,3.531921,-0.341906,-1.631962],[3.152090,-6.804327,-3.063757,2.879820,2.107731,-4.575164,-5.181795,8.019527,-8.689765,7.529048,-5.477441],[3.093095,0.050996,5.126509,-5.671235,-9.373619,-0.260236,6.927512,4.288882,-4.361182,2.265723,-9.589704],[9.332460,6.698864,-5.018780,5.053515,7.164900,-7.532477,-3.071854,-0.159131,8.886690,-6.895700,8.099822],[-7.064104,-6.214177,9.921931,1.163696,4.141791,-5.720885,-9.031532,4.510187,9.605549,5.846346,8.531115],[-9.333568,-0.086309,-5.432790,0.625157,-6.591716,-4.927073,5.620684,-6.246023,8.510955,1.386949,2.212144],[-3.095612,-0.619880,5.582606,3.620825,9.036476,-4.767395,0.260963,-1.379065,7.306069,-3.266732,6.740768],[2.224827,-0.850166,2.785902,-9.628290,-6.798082,0.865298,2.506475,-4.601374,0.147569,-4.361515,8.809119],[-4.307860,-6.429317,-4.870645,7.287155,-2.435684,-0.532991,5.787884,1.395182,-8.360536,-7.084514,-4.150132],[-8.147932,-5.393313,-7.804021,1.357095,-6.126884,2.306705,2.021978,3.884694,1.986208,-3.975884,-1.506880]]], dtype = "float64")#candidate|2764|(3, 14, 11)|const|float64
bop_2765 = relay.bitwise_and(call_2762.astype('uint32'), relay.reshape(const_2764.astype('uint32'), relay.shape_of(call_2762))) # shape=(3, 14, 11)
bop_2768 = relay.bitwise_and(call_2763.astype('uint32'), relay.reshape(const_2764.astype('uint32'), relay.shape_of(call_2763))) # shape=(3, 14, 11)
var_2780 = relay.var("var_2780", dtype = "uint32", shape = (3, 14, 11))#candidate|2780|(3, 14, 11)|var|uint32
bop_2781 = relay.logical_xor(bop_2765.astype('uint64'), relay.reshape(var_2780.astype('uint64'), relay.shape_of(bop_2765))) # shape=(3, 14, 11)
bop_2784 = relay.logical_xor(bop_2768.astype('uint64'), relay.reshape(var_2780.astype('uint64'), relay.shape_of(bop_2768))) # shape=(3, 14, 11)
output = bop_2781
output2 = bop_2784
func_2793 = relay.Function([var_2780,], output)
mod['func_2793'] = func_2793
mod = relay.transform.InferType()(mod)
var_2794 = relay.var("var_2794", dtype = "uint32", shape = (3, 14, 11))#candidate|2794|(3, 14, 11)|var|uint32
output = func_2793(var_2794)
func_2795 = relay.Function([var_2794], output)
mutated_mod['func_2795'] = func_2795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_2799 = relay.TupleGetItem(func_2723_call(), 0)
call_2800 = relay.TupleGetItem(func_2725_call(), 0)
const_2805 = relay.const([[[-9.902724,-2.278919,-8.977002,-5.759400,-3.375856,5.121872,0.514707,-0.068677,0.286331,-4.364949,-7.352618,0.189256,-8.062911,4.807687,-9.076202],[5.855038,-3.047320,-4.278286,2.062708,-1.872671,-5.664852,-5.891941,7.854451,-9.650549,-2.511393,8.378480,2.025049,4.558106,-9.147741,7.953218],[0.099023,4.482727,0.503917,-7.555702,5.721559,-7.564059,-9.408912,0.884692,6.017912,-3.624399,-5.394329,3.176180,-9.974411,-6.746708,7.335524],[-9.222237,-3.384507,9.849331,2.528293,7.134450,-9.146068,-2.817697,-5.016890,-9.510910,-8.876239,-4.169640,6.585105,-6.813740,-1.660104,-7.265872],[0.545590,5.320166,7.562503,3.474617,-3.301139,0.279504,-7.787565,-7.706852,2.395686,4.189905,2.698263,-0.080885,1.544154,2.894595,9.222025],[7.936952,-7.643545,6.415525,2.064135,-0.358706,2.691872,-9.529142,7.834602,-5.447328,-2.998731,-6.931873,5.087675,-1.577227,-9.278783,8.317235],[4.842416,-9.207112,8.635908,0.921948,-4.265440,-1.844996,8.794669,8.433432,0.272896,2.233044,0.183408,-5.334707,3.878317,0.893293,-2.597896],[1.755236,-7.407480,2.355177,4.753913,-7.861464,-4.705840,7.132021,-3.334519,-9.814033,6.702992,4.583188,-4.949863,1.376659,-4.121809,4.010943],[3.241378,-2.305585,-4.494072,3.106841,2.944775,5.354896,9.237150,5.156368,1.629685,6.221034,-9.842679,-8.304080,-4.115309,-2.740567,-6.938566]],[[1.806032,-8.746069,7.570561,6.014309,9.981751,8.230888,-3.453303,1.005224,-7.668229,-6.729711,9.516096,-0.894933,7.707397,-5.172183,0.290091],[0.992638,-1.400999,-1.490788,-2.888762,2.236176,-5.380099,-5.469549,0.612158,8.971957,-7.835091,1.209492,-4.723199,5.224515,8.123407,8.611415],[4.155824,2.811515,-8.648173,5.442350,-7.558790,-8.515265,9.897524,7.882030,4.789532,-1.297033,-0.127611,2.257059,4.081044,-0.385412,-4.776640],[7.083136,-3.288796,-4.508714,7.239974,4.017422,-7.537292,-7.870699,-5.107180,-3.684773,-1.833269,-4.770249,-2.365575,9.049571,-8.845126,-1.270617],[1.308092,-7.441248,6.413534,5.474611,2.509282,-0.592158,-5.307984,2.442645,-1.720555,-6.120790,4.429268,-6.854914,5.819434,9.979310,9.066892],[-4.977881,-0.949409,9.118505,9.158787,-4.320892,7.185067,-1.404420,4.549126,2.393730,3.674984,4.766039,-4.612336,7.589990,5.129389,8.589081],[-6.403084,-2.332869,7.061724,-7.689537,-2.891953,4.280777,2.870815,8.105757,3.059664,1.329675,2.509365,6.397121,-7.221694,8.640377,-5.217952],[-8.435709,-7.773592,9.903158,-4.798757,8.758680,-4.634621,9.244116,-2.415908,-5.181733,5.698136,8.278155,-9.252221,-1.255827,1.672022,0.901041],[-1.136517,-0.735755,-6.274622,-0.660485,-5.255006,4.281550,-7.733317,-6.268048,6.474834,3.308573,-5.287744,9.077318,5.040996,5.256332,0.551339]],[[-4.212399,4.313015,2.768081,-6.443123,-5.664549,9.362302,2.488351,-4.331831,-1.940590,6.403776,-7.572903,-4.416149,-3.381916,6.984499,-1.985317],[-5.416550,3.199690,-2.952054,6.843434,-1.679297,7.535990,0.888747,-4.120204,-5.776083,-4.693228,-4.664060,-4.813974,-7.674677,-6.887369,-4.928783],[2.807905,-2.169824,-0.733630,7.532106,7.325194,-4.620392,1.943072,-2.402162,1.859644,-3.430644,-9.605427,2.847062,-0.547621,5.825261,1.030359],[2.322109,1.107802,5.175613,-0.638934,8.287719,7.799709,-6.894435,-9.850262,-8.199865,-0.558377,5.560328,7.813054,6.319602,-6.304671,-2.466875],[-5.343995,-1.198388,8.912610,-1.667319,-3.176509,-2.060801,1.159738,-6.059937,3.497247,8.307790,-9.990479,-7.891901,3.175936,7.194284,-6.764489],[-1.295151,2.606820,-5.906828,-9.154804,5.996904,6.304313,-1.120117,-7.811933,-8.692886,7.794238,9.703413,-3.609690,8.763533,7.305383,2.448688],[5.047632,6.235881,4.245736,0.016562,-9.454633,-1.306005,-6.012365,-1.668964,-5.344851,-7.484936,-0.704908,9.510983,0.923938,6.260302,4.988176],[1.715054,-8.174100,8.921275,-1.633443,4.841541,4.751652,-9.568246,6.711294,8.758038,4.229832,1.624548,7.784657,-7.160269,-7.362229,-6.396411],[3.669243,-4.390740,-9.453351,2.785114,-2.855900,8.610173,-4.836345,-5.580886,-6.565813,4.395931,3.628534,4.586717,1.163892,-5.131645,9.832616]],[[4.450938,-8.057278,-2.307587,-6.063812,7.673266,8.585703,-0.721451,6.992257,8.577805,-1.223508,9.463196,6.557665,6.170227,0.461660,-1.890907],[-0.354638,8.796597,6.688892,7.880626,9.170528,2.535342,5.691199,-6.338752,-8.228212,-8.299566,3.022783,-2.548736,-9.044498,8.123730,8.723730],[2.746612,-1.479438,-0.795153,-0.271812,9.840719,6.070011,-8.033450,-7.427265,6.195306,-4.048716,-8.809931,1.227048,9.163239,-0.502245,7.097493],[-8.944779,3.701112,8.953429,6.101351,3.755465,6.203016,4.868584,7.705460,3.031726,-6.051486,-1.438712,7.540605,0.352543,9.482566,8.244507],[-8.880440,1.710342,-6.281342,6.210998,5.681776,-4.432771,4.626653,-4.684048,-7.347415,3.469780,-5.778475,5.906004,-3.823826,-5.161416,-5.190032],[-2.002389,7.691541,-2.526827,8.890711,3.215099,-0.783744,3.716887,7.149976,-1.538472,3.091550,-9.497883,9.307225,7.763978,4.632498,3.359309],[-5.971835,-1.723574,-3.487507,7.701527,-4.643666,-6.757329,2.600473,1.609851,1.888230,-7.439590,1.419233,-6.959088,-1.981836,-9.645448,9.588590],[3.707807,-8.997540,-7.648889,-1.257874,-4.223018,-3.118194,2.293835,-6.342345,4.107863,-3.163866,8.074005,-4.456606,-5.143239,1.070940,-3.740654],[-7.346369,-0.743131,7.598065,0.231348,6.067814,5.089750,-5.235854,5.631123,3.140497,6.236093,-4.306673,8.520434,-4.118028,2.548217,0.116152]],[[8.277321,7.361427,-1.462514,-2.281807,-9.754947,6.133759,5.617930,-8.710062,-1.635659,7.332792,4.211986,-4.526714,3.936538,-1.905491,7.021605],[-5.562581,4.145045,-2.509340,8.870910,-6.202425,-5.857931,4.251802,5.421189,-4.014576,0.677101,5.035688,4.643338,3.023920,6.622725,6.574065],[8.066982,6.499917,8.738630,-0.381734,-4.692977,-0.300790,-6.874410,-4.365724,2.182677,-2.269793,5.143185,3.129060,9.333154,6.257244,-3.302879],[3.669011,-8.912648,1.574632,6.143019,-0.381367,-5.054852,-1.686978,-2.314794,-5.877272,-8.513468,-0.243785,0.320048,-1.323126,7.349099,7.483443],[4.607069,7.452675,1.027947,8.318393,7.739821,-6.665599,7.124749,-6.603123,2.345906,1.200725,7.920273,5.522651,-8.881276,-6.166350,7.439076],[3.119838,-0.874963,8.383396,6.960830,-8.376474,-5.320638,-9.394797,-5.090171,-5.111818,-5.348215,7.995025,0.073972,-2.850713,-3.060513,8.424922],[-8.981683,-5.557696,-5.520325,-9.389543,0.705846,-7.186802,4.845128,0.751858,1.256872,8.807778,0.357649,-9.856410,-9.235174,-0.109542,2.599187],[-4.014679,0.291027,-0.163587,-8.006546,3.695188,-3.191569,-4.733014,3.256537,0.315443,4.517266,-3.436613,1.774254,1.788271,2.476420,-3.777293],[-3.626293,-9.326815,-1.260881,8.999880,1.761513,-1.032948,-1.768169,1.365940,-0.572695,-5.811552,3.779359,-9.536372,7.518429,-6.041312,-5.912531]],[[1.534651,-7.868591,-3.738991,9.838110,4.135209,-0.358797,-9.660038,-5.935007,-4.274220,-3.971954,-5.274201,2.240821,-2.437049,6.872050,5.721693],[8.369581,-5.393492,-9.668892,-3.716790,-5.666467,-9.366919,9.532281,7.225678,-6.597578,-0.506696,-6.577283,8.071356,-0.370613,3.432241,-8.728482],[7.410939,0.332536,8.438580,-7.604044,4.774440,-1.457059,2.310903,-9.293536,2.723500,4.139702,3.000292,8.902800,4.825623,-6.005597,6.203208],[-2.044524,5.233541,-7.293089,4.418039,-5.318818,0.548504,3.418076,6.512650,0.535723,-7.781311,-8.025039,-6.106273,-8.781208,5.286374,-6.089900],[-0.591217,9.232512,0.222190,-1.898756,-2.680637,7.324805,0.839208,2.971592,0.516729,-9.996666,9.495773,9.580946,-9.696739,9.081290,5.087404],[-6.632255,-0.599196,8.476436,0.915200,7.273519,-8.425081,3.756437,2.193268,-7.429424,0.969073,-1.666222,-7.951537,-7.401175,-2.950836,-0.644801],[-8.215620,8.400472,7.552036,-9.558088,-8.402538,-2.502251,-6.017777,7.655487,-8.327333,-2.662851,-7.504324,-7.425282,0.831242,1.395496,6.280604],[5.302773,-6.963859,-6.363345,8.942216,-5.998160,-6.375090,-7.084968,-3.987069,-7.932252,-8.328402,-0.842575,-3.623152,6.929956,8.433818,4.168642],[-3.854346,-4.165246,7.911226,-5.493941,9.103762,-4.898788,-2.856886,5.684199,-2.853452,3.322365,-7.360344,9.214542,9.925973,-3.429753,5.640493]]], dtype = "float64")#candidate|2805|(6, 9, 15)|const|float64
bop_2806 = relay.bitwise_xor(call_2799.astype('uint16'), relay.reshape(const_2805.astype('uint16'), relay.shape_of(call_2799))) # shape=(6, 9, 15)
bop_2809 = relay.bitwise_xor(call_2800.astype('uint16'), relay.reshape(const_2805.astype('uint16'), relay.shape_of(call_2800))) # shape=(6, 9, 15)
output = relay.Tuple([bop_2806,])
output2 = relay.Tuple([bop_2809,])
func_2810 = relay.Function([], output)
mod['func_2810'] = func_2810
mod = relay.transform.InferType()(mod)
output = func_2810()
func_2811 = relay.Function([], output)
mutated_mod['func_2811'] = func_2811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2823 = relay.TupleGetItem(func_2479_call(), 0)
call_2824 = relay.TupleGetItem(func_2480_call(), 0)
uop_2831 = relay.atanh(call_2823.astype('float32')) # shape=(6, 9, 1)
uop_2833 = relay.atanh(call_2824.astype('float32')) # shape=(6, 9, 1)
bop_2836 = relay.mod(uop_2831.astype('float32'), relay.reshape(call_2823.astype('float32'), relay.shape_of(uop_2831))) # shape=(6, 9, 1)
bop_2839 = relay.mod(uop_2833.astype('float32'), relay.reshape(call_2824.astype('float32'), relay.shape_of(uop_2833))) # shape=(6, 9, 1)
output = relay.Tuple([bop_2836,])
output2 = relay.Tuple([bop_2839,])
func_2843 = relay.Function([], output)
mod['func_2843'] = func_2843
mod = relay.transform.InferType()(mod)
mutated_mod['func_2843'] = func_2843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2843_call = mutated_mod.get_global_var('func_2843')
call_2844 = func_2843_call()
output = call_2844
func_2845 = relay.Function([], output)
mutated_mod['func_2845'] = func_2845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2900 = relay.TupleGetItem(func_2650_call(), 0)
call_2901 = relay.TupleGetItem(func_2652_call(), 0)
var_2939 = relay.var("var_2939", dtype = "float64", shape = (6, 9, 15))#candidate|2939|(6, 9, 15)|var|float64
bop_2940 = relay.bitwise_and(call_2900.astype('int8'), relay.reshape(var_2939.astype('int8'), relay.shape_of(call_2900))) # shape=(6, 9, 15)
bop_2943 = relay.bitwise_and(call_2901.astype('int8'), relay.reshape(var_2939.astype('int8'), relay.shape_of(call_2901))) # shape=(6, 9, 15)
uop_2946 = relay.log2(var_2939.astype('float64')) # shape=(6, 9, 15)
func_78_call = mod.get_global_var('func_78')
func_82_call = mutated_mod.get_global_var('func_82')
var_2959 = relay.var("var_2959", dtype = "uint32", shape = (520,))#candidate|2959|(520,)|var|uint32
call_2958 = relay.TupleGetItem(func_78_call(relay.reshape(var_2959.astype('uint32'), [5, 13, 8]), relay.reshape(var_2959.astype('uint32'), [5, 13, 8]), ), 0)
call_2960 = relay.TupleGetItem(func_82_call(relay.reshape(var_2959.astype('uint32'), [5, 13, 8]), relay.reshape(var_2959.astype('uint32'), [5, 13, 8]), ), 0)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_2973 = func_2467_call()
call_2974 = func_2467_call()
output = relay.Tuple([bop_2940,uop_2946,call_2958,var_2959,call_2973,])
output2 = relay.Tuple([bop_2943,uop_2946,call_2960,var_2959,call_2974,])
func_2980 = relay.Function([var_2939,var_2959,], output)
mod['func_2980'] = func_2980
mod = relay.transform.InferType()(mod)
var_2981 = relay.var("var_2981", dtype = "float64", shape = (6, 9, 15))#candidate|2981|(6, 9, 15)|var|float64
var_2982 = relay.var("var_2982", dtype = "uint32", shape = (520,))#candidate|2982|(520,)|var|uint32
output = func_2980(var_2981,var_2982,)
func_2983 = relay.Function([var_2981,var_2982,], output)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_3024 = relay.TupleGetItem(func_2422_call(), 0)
call_3025 = relay.TupleGetItem(func_2423_call(), 0)
output = call_3024
output2 = call_3025
func_3042 = relay.Function([], output)
mod['func_3042'] = func_3042
mod = relay.transform.InferType()(mod)
mutated_mod['func_3042'] = func_3042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3042_call = mutated_mod.get_global_var('func_3042')
call_3043 = func_3042_call()
output = call_3043
func_3044 = relay.Function([], output)
mutated_mod['func_3044'] = func_3044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3067 = relay.var("var_3067", dtype = "float64", shape = (10, 6, 8))#candidate|3067|(10, 6, 8)|var|float64
const_3068 = relay.const([[[-7.378598,1.458024,-7.516519,6.864732,-0.083607,-7.105863,2.329217,6.480834],[-8.431137,-3.141546,3.297872,5.217379,7.993090,-0.902184,-2.068975,-2.659120],[9.028440,9.815007,-7.516876,1.555868,-5.974709,-8.392172,7.229170,2.934203],[-6.407565,-1.530297,-2.771496,0.047064,8.620093,-5.875501,2.160261,-2.305476],[-1.914677,-9.153352,2.146360,2.171546,0.701951,3.552192,3.746829,-3.156603],[1.146474,4.640760,-0.732348,1.181815,-8.834925,1.698288,-9.566370,-5.514326]],[[3.359884,-5.996028,-0.744581,-9.420533,1.173767,-6.770235,2.046621,-6.848548],[8.038719,-1.279753,-0.581923,1.102526,9.109227,-1.778702,6.555004,-2.718332],[0.663446,5.335544,-0.847940,0.700732,6.155049,-1.145621,-2.521168,4.533499],[-3.606773,2.324933,-9.634274,1.477680,8.486131,1.623165,0.529954,-7.645298],[-8.635378,-6.951080,1.110921,-6.507858,-1.313967,1.998605,7.889284,-2.376219],[9.097465,-4.696497,9.787362,4.078012,2.173056,8.706446,0.821919,2.985101]],[[8.107919,-3.727552,4.873882,7.290106,-9.700925,-8.966164,-8.753084,2.450619],[-8.652018,5.272631,-9.623007,6.454606,0.571247,-1.383972,-3.037136,4.328275],[1.278647,-1.152539,-2.676557,-3.689263,8.207087,6.949886,-0.327151,7.196902],[-5.821067,-2.955605,4.925093,8.320817,-4.887121,8.335358,3.616470,-7.275541],[5.388743,-2.355129,-0.838612,-5.952553,5.961399,1.098194,-0.070666,9.977552],[1.806511,6.199389,9.297899,-8.751420,-3.853141,-7.186420,-4.180175,7.994126]],[[5.830710,5.836173,-0.591179,8.636465,0.168167,3.584358,6.162824,3.245911],[-3.963071,-6.729397,1.626922,3.128058,-7.860976,6.492311,-1.898980,-9.218666],[-4.317460,-6.060898,1.342498,3.839646,-3.379993,6.225153,9.829620,2.534695],[6.022908,9.693998,-6.722859,9.922860,-0.830367,3.354863,8.577170,-5.430168],[8.302995,-7.958563,8.472086,-8.827749,9.624601,8.145198,-0.188855,-8.761318],[-8.402721,-2.538060,7.274010,-4.136516,-9.881613,-4.331091,2.683408,-5.338599]],[[0.497473,-5.373900,-5.469298,6.523432,-1.353939,-2.829747,6.724949,-6.714196],[-3.694513,-2.125026,-3.422499,7.891570,-5.332448,-2.130415,-1.332742,-1.209020],[-0.173000,-6.250326,4.628173,-2.408256,1.760651,-8.260547,7.570917,-7.801649],[3.612438,1.075337,2.633935,5.538971,6.534323,-0.650138,-1.604947,6.336518],[6.632250,4.746640,5.554115,-0.153118,-3.371971,4.877986,8.696881,2.260360],[-4.389402,7.005146,0.344440,0.584011,-3.763719,-4.505648,9.415403,6.209585]],[[-5.206459,6.450480,-7.668207,-2.000630,6.298084,8.641657,3.256727,9.061667],[8.978826,-0.475881,5.145708,2.790052,4.464851,-2.056263,-2.144105,7.519393],[-9.310314,-4.116644,-0.492984,8.217300,5.759119,-0.158523,3.638011,-2.417713],[-0.990337,8.940942,9.274068,-5.406825,6.763937,9.913083,-6.939983,-8.211222],[0.124953,-2.120584,2.806429,2.950994,-2.686325,2.853696,-2.780014,-6.543906],[-3.958805,-8.440575,0.975801,-6.048003,-5.498732,-8.284557,-4.548659,7.453937]],[[8.516836,2.822940,-0.723618,2.974294,2.331892,-4.446114,9.407734,-9.900539],[7.363063,9.226282,8.675653,1.414980,5.089328,1.566816,-7.771601,9.985475],[-0.389007,-0.945538,-7.447202,3.874345,-2.213058,7.863566,-1.992984,-6.252081],[-9.481092,-5.142830,9.980293,2.199196,0.387705,5.956753,-3.961166,-1.421719],[8.930266,4.326899,-7.543053,8.673723,-3.132117,-6.806347,4.521328,-7.885008],[-1.199819,8.672407,-3.294054,-5.554626,3.659252,2.560524,1.179200,-2.425542]],[[-2.921324,-9.580990,-4.714658,-9.093378,-0.873865,-0.492185,0.268832,8.471176],[8.776468,8.753222,-9.910530,-9.159008,2.218268,7.343385,5.807995,-2.226530],[2.129984,-5.029638,-9.805551,-8.906649,-7.908300,-2.222545,-5.661330,1.719607],[3.186187,4.233588,3.682574,2.645451,-0.699263,6.297431,2.018153,7.997361],[-3.804529,-5.624881,-7.744132,1.254729,6.680234,-6.695814,1.109475,-0.534390],[1.321694,-7.990248,2.242099,3.186112,-9.177954,0.059656,-6.474788,-8.478187]],[[-7.345426,-0.494333,-3.987683,6.543839,1.771580,2.888988,-9.566475,6.294741],[3.258407,-9.635135,-7.999061,-7.157491,-6.021527,-3.974958,7.536263,2.245577],[5.871255,-4.162844,6.430970,-5.443735,-6.590042,3.660737,5.010474,-2.273980],[3.592439,2.583099,-3.711910,-6.294480,5.513350,-3.529178,-2.119603,-4.152181],[8.893674,2.225306,4.891068,8.462229,4.801222,-8.998602,-0.083677,1.808099],[4.570561,3.732313,6.380784,-9.728868,-1.841411,5.616372,-8.604812,-9.769534]],[[-8.594521,-4.503372,0.453660,3.277448,-8.658159,5.521146,-5.662935,-7.839525],[6.464722,-0.407627,-1.814308,7.100970,7.169002,8.797489,0.738022,9.145083],[9.079541,0.918739,4.541436,1.836281,-0.649167,-5.800298,8.333992,-7.594017],[-1.101142,7.850602,9.332373,6.426451,9.471242,-9.038254,9.996778,4.024088],[2.126593,9.709552,4.868190,-4.287659,-7.166750,2.615085,-0.334770,-4.267029],[-5.367973,6.376498,5.931246,-3.078819,6.618675,8.182302,-0.610876,1.452539]]], dtype = "float64")#candidate|3068|(10, 6, 8)|const|float64
bop_3069 = relay.mod(var_3067.astype('float64'), relay.reshape(const_3068.astype('float64'), relay.shape_of(var_3067))) # shape=(10, 6, 8)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_3083 = func_2467_call()
call_3084 = func_2467_call()
func_2980_call = mod.get_global_var('func_2980')
func_2983_call = mutated_mod.get_global_var('func_2983')
const_3092 = relay.const([2.909999,9.705215,-1.378873,-6.507381,4.693661,1.868620,-4.076684,3.854431,1.011424,2.634305,5.983354,-3.171712,-0.749429,-7.256419,-5.584400,0.630696,-9.644948,-7.462494,3.461891,7.193360,2.150934,-8.836593,-3.614420,-7.960937,-8.668640,-3.655308,-2.357722,4.021527,-3.075247,4.044854,8.771752,-3.738377,1.468409,4.084827,6.746244,-2.016426,8.903401,-0.780885,-3.357246,-9.911214,1.932622,9.192140,8.558366,-4.606744,-5.218921,-8.894081,3.511858,-9.895120,7.753648,4.362975,-7.211773,9.423643,-8.557574,-1.779431,-7.568410,-6.048477,1.011938,0.533144,-5.343269,-4.308811,5.629886,-8.179642,-3.076470,-9.899608,-4.928454,-4.306980,9.947414,1.612091,-2.627275,-2.024277,-4.367178,-5.242368,-0.550705,-4.910749,3.534977,-0.056649,6.455446,4.615577,2.770724,8.813857,-1.831355,-9.520446,2.803214,6.832299,0.809918,-8.954076,-2.857402,-2.904845,-5.029698,2.159613,9.891372,5.434155,0.842060,-6.549456,-8.354313,-1.119403,-0.417371,-3.422509,-6.747529,1.623516,2.456768,0.573577,-8.618989,4.014468,-5.270572,-6.223205,-3.720915,-5.738819,5.459298,-5.003354,-3.631258,-8.212259,3.824678,-8.281014,-2.341985,-0.071021,4.799285,-1.033514,5.012884,7.129723,-6.383545,7.840887,4.071565,-7.716612,3.146518,-6.487742,-5.867135,-9.045701,3.276698,6.165401,-1.051408,4.766352,-8.140483,9.103375,1.821900,8.741500,-0.475899,-7.244310,0.132933,-8.292467,5.640527,-6.004357,1.837517,-0.132256,-5.678961,0.383382,3.064551,-0.001408,-5.638008,7.304641,-1.577996,3.469791,9.222571,-2.854584,7.978439,5.886451,8.244319,-3.997820,-4.789622,4.143616,-1.651672,8.582530,-0.612552,7.640090,3.821497,-5.222947,-0.359760,8.048917,-9.499216,-5.383800,-8.669008,-2.852429,7.997852,0.426475,7.331647,-9.226289,6.690846,3.011507,-3.783717,-8.964014,0.720098,0.045772,-7.008674,-1.936361,4.080509,-1.196285,-7.948124,1.914071,3.236285,-4.209609,-6.599660,1.759920,-7.229526,6.341221,5.834806,3.581210,-5.325181,-8.241840,7.233998,2.893077,8.406056,-4.359323,2.911070,-1.140026,-5.617363,3.765412,1.528612,-0.824495,-6.968104,-4.149306,6.559431,-0.457968,6.226971,6.219688,9.902304,6.878320,-5.496352,6.135186,6.372577,5.791645,-5.329258,-7.180181,6.655278,7.982936,-5.761861,5.062263,2.587273,-1.533252,5.293577,9.307734,-2.867290,8.159603,2.133470,-6.661771,-4.901090,-7.615500,4.994680,1.080036,-3.818050,-2.645766,-0.876645,-4.461407,9.379359,-4.642121,-4.431015,-3.729498,-8.484805,-5.387411,-8.097359,5.474997,-1.049571,6.624646,-3.514412,-1.909063,0.452953,-8.081368,-4.513022,-4.973185,2.920487,-7.576637,-7.407653,-6.901537,1.637592,-1.602159,-5.645616,-4.283780,-6.994796,-6.683459,-3.728374,5.200498,7.197468,-8.497468,-4.672837,0.938549,0.637304,-7.122418,-0.656729,2.124400,7.436030,6.966635,0.141953,-6.016398,8.725535,-3.613098,8.632862,-0.217632,7.333170,-1.805588,7.274972,5.096955,-0.766384,-0.968398,8.976471,-9.116230,-4.346454,-5.233331,8.877750,4.427641,8.732736,3.764881,6.377121,6.249893,-6.762058,-4.887021,7.554637,-2.885150,4.100635,2.182983,-9.690546,3.670369,4.140558,-9.892222,-1.000435,-9.149621,-7.645793,-0.174764,2.785008,-7.786550,-5.124035,2.522947,3.114252,7.387902,-3.206988,4.862399,-7.637417,4.448626,-2.894909,-3.270480,4.353443,-0.006165,-9.632529,9.677164,-5.613708,6.492616,0.453423,-5.040176,9.903626,0.187357,-4.999840,-9.700621,-8.971024,3.437680,-9.148263,9.043407,-4.107096,2.054165,5.831324,-6.914102,-2.429950,-2.008333,-4.793831,-0.391576,-3.830997,8.345162,-3.471228,5.847702,-5.969676,0.854734,-6.161571,-0.310930,-4.852291,-7.273212,2.052209,1.977642,-6.184272,3.385191,2.474706,-8.088877,9.238677,-7.127071,-1.637755,-8.598803,-4.878026,2.623506,5.843891,5.361999,4.054193,1.679048,-0.417850,-3.706767,-6.474815,2.108187,-7.721944,1.479907,-3.059675,7.508760,8.835751,5.105737,-6.192618,-8.144860,-8.772491,5.171827,6.053143,-1.575267,-8.915220,7.001164,-3.013444,-6.417774,-4.865912,7.204824,9.688998,7.819365,-3.169400,0.223893,3.831719,-9.743544,6.443578,2.359385,-9.419124,5.762334,2.748241,0.472548,5.071610,-8.669001,3.792067,-6.585818,-2.557019,4.286054,-0.450384,4.003926,3.352301,-4.627137,-0.696082,6.355294,0.988161,9.792242,0.318953,5.632140,-5.403480,7.982667,9.504333,-8.410216,6.616201,-9.551250,-6.637179,-2.433429,-3.239675,0.180112,-7.041498,9.227016,4.660285,-3.594838,-0.134325,2.604249,5.694636,-1.920886,2.271779,7.805212,5.764408,-4.690506,4.011684,3.076585,2.313578,-9.822321,2.579739,-1.114501,-2.690813,-9.354252,-7.450869,4.258692,-6.635154,-4.695117,8.116077,-7.215122,9.376035,-0.950840,0.035088,-9.239594,-6.053169,1.064034,6.295417,-6.987016,-7.537437,-6.080654,4.544267,2.352088,9.091664,7.735796,3.589614,4.644804,-2.872391,9.567502,3.024776,7.672547,3.555878,-0.797052,-9.355293,-0.907503,0.011518,9.158805,1.672267,-2.237558,-6.293824,9.359646,9.283695,-7.182488,-3.799827,-3.252818,-9.179181,-9.432703,-4.562312,-0.153096,0.212024,2.491942,6.947631,1.237977,0.055810,7.166712,6.891092,0.644104,-2.729412,1.642719,-2.032134,-0.113684,6.256815,-3.840901,3.592492,-8.184482,8.665683,4.826737,-3.990862,1.555749,-6.267290,8.551936,6.823153,9.948601,-4.968814,1.879792,-3.610395,1.537420,-6.607634,2.672882,-3.125353,-9.077264,6.689473,-1.661902,3.015250,-9.818265,1.606528,8.052491,-2.650431,-0.945059,0.631599,7.490275,5.542902,0.290319,-2.301319,-4.337580,-9.097095,5.059453,-7.661381,1.376168,6.320961,-2.946023,4.993881,-2.725409,-9.585606,8.187896,-6.973079,0.957655,6.240925,5.540159,1.010243,5.228771,-4.974136,7.339803,-0.153643,-3.208893,-7.770798,-7.371741,8.085344,-4.209657,4.636208,6.182305,-9.773018,-9.120809,-0.418283,-2.979605,7.449351,2.349564,-9.747851,-9.675646,-4.346152,-3.544883,2.946410,-3.659129,5.366960,-0.202778,-9.407662,-1.915007,-7.344913,1.203414,-1.837633,-5.144421,7.913949,-9.768123,9.022479,-7.491569,4.548915,-8.644883,-8.030569,8.187558,4.240916,-1.144185,-8.441858,4.928408,7.865503,8.846366,-9.393206,7.013795,0.472827,7.993305,8.490012,-9.626508,-0.504775,2.154459,-2.212527,3.357708,1.149985,4.539386,-9.134940,-2.270732,8.043980,-4.984297,-3.368434,1.908096,7.145609,-3.707071,3.221486,2.251438,0.302869,-3.253098,-2.560433,-1.580821,5.946078,5.320409,-2.020185,-5.016283,7.884536,4.945239,-0.379087,4.128614,4.647333,-2.846438,8.879559,-9.198793,1.992815,-4.667021,-2.222457,1.651634,-6.836583,-4.172110,-9.896683,9.399776,8.079654,7.667874,6.278950,3.851088,-6.874102,7.356699,3.658915,4.216047,-8.401272,-6.577483,-1.922773,7.284411,-9.850980,9.785912,-8.183452,-3.973913,7.559724,6.622815,6.420195,3.861374,0.594050,4.467078,-6.226058,0.115180,-5.086130,-9.465170,9.463227,4.012261,5.345998,-5.119379,3.984785,0.365754,0.611512,-9.758814,0.060970,-4.847928,-2.162912,0.297783,-7.342113,-6.566585,2.903846,6.513149,-6.767311,-4.366701,4.400061,2.095182,-5.833302,2.768375,0.051495,-3.816572,2.336753,4.926428,-0.450938,6.089083,7.434513,4.105324,-2.551156,0.453761,6.843641,-8.426682,6.852963,-3.667509,-2.769602,5.341279,4.447428,-7.036020,-1.063546,-9.367449,-8.430429,-2.362973,1.466649,-0.200762,-4.675254,-0.990765,-1.510712,0.676751,-6.870448,2.932810,5.796044,9.964315,-5.389438,-4.185837,6.099442,5.556620,-8.194223,-4.727304,2.296835,6.198438,-0.320450,4.076104,-8.492671,-3.672203,-4.182542,3.851022,-3.496764,-6.033292,-5.757415,-2.407659,-8.396856,7.381259,9.286466,-2.528739,8.369912,-8.961728,-5.061429,-3.713716,-5.262794,2.667497,-4.361324,4.361010,1.745420,4.987805,-1.214852,-2.314203,0.499720,0.204874,4.435353,4.503712,6.806671,-3.064442,0.637643,-5.394836,-3.793585,8.058825,-2.217926,2.162430,-0.770108,3.890717,-5.012008,8.035236,7.819282,-6.739779,8.651559,8.441118,-8.012292,-1.764876,-6.541208,9.142579,-6.869632,4.948102,8.007914,8.214789,4.552975,-0.603091,-2.931837,5.110920,-0.343439,-3.620517,2.101016,-7.356687,2.807304,-8.698512,9.933097,-6.524072,-6.021208,-4.207725], dtype = "float64")#candidate|3092|(810,)|const|float64
const_3093 = relay.const([-2,10,-8,9,5,-9,-5,-2,7,6,10,2,8,10,-10,-3,-8,10,-7,3,8,7,-8,8,7,-7,-1,-4,-10,-10,1,-3,-10,8,-3,9,3,-5,-7,8,-10,4,-6,10,-3,8,-8,3,-5,-3,-2,-10,-8,-9,1,-10,-4,10,-3,8,5,-7,1,8,3,-4,6,1,10,-9,-7,2,3,3,-4,-9,-9,1,8,-5,5,-7,7,4,-10,-8,4,-10,2,3,6,-7,10,-6,1,1,-5,4,-8,9,3,-7,-7,-4,-2,-9,10,-7,5,-1,7,2,-2,-1,-7,2,-8,-7,-8,8,-7,-10,2,-9,3,5,6,1,4,-10,-2,10,-1,-7,-5,9,-1,-1,8,-1,-2,8,-6,5,1,-10,10,-3,5,10,-6,-4,-7,9,6,6,-8,5,-3,3,-10,7,3,8,3,-9,-6,3,9,1,-5,5,-1,-9,-5,-10,-5,2,8,-7,-10,7,9,-1,5,-6,-9,4,-5,6,-5,-4,5,10,8,4,2,-5,-5,-3,-10,-1,-2,-1,-7,-9,-5,-3,-9,-4,10,6,-1,-5,7,7,7,-8,-2,-7,8,-1,9,5,-9,-6,9,1,4,8,-3,1,-2,10,10,3,5,2,10,-1,-10,-7,2,-1,-5,-10,-4,10,-9,-10,-10,-6,-6,9,8,4,1,-9,9,-9,-8,3,-9,-2,5,-9,4,10,-6,8,10,-3,5,-4,-1,9,10,-5,-4,9,-8,6,6,4,6,-9,7,-9,-6,-5,6,8,5,-6,8,-10,-6,10,2,-3,7,-7,3,-5,1,-6,5,2,7,10,-3,-4,5,-10,-10,-9,4,1,4,-8,7,9,-10,-3,8,6,2,-2,-6,7,-5,2,2,9,-1,-10,-3,-2,1,9,7,-3,-5,-9,9,-6,-2,-4,-10,-10,-9,9,9,-4,7,2,-9,4,-1,-7,-8,-3,-9,-5,-1,2,-5,-2,4,-7,-9,4,3,6,-2,-4,-5,-1,5,5,-2,6,8,4,-5,-3,-9,6,7,-5,4,7,8,4,-5,9,-6,7,-4,5,3,4,5,5,10,10,1,3,-7,-3,6,10,-7,-5,9,8,8,-5,2,6,1,-7,-3,-2,-9,-3,-8,-6,-1,6,1,-3,8,3,-9,5,4,2,4,8,-2,-8,-5,5,-5,7,7,-4,-9,8,-7,7,4,-9,-5,4,7,8,-8,7,6,-1,1,9,-4,7,7,-3,3,-1,-6,-8,9,-4,-10,10,2,-8,-9,-4,-1,4,-4,1,6,8,9,8,3,-4,-2,1,-8,-8,6,-7,4,-7,8,-6,1,10,-9,7,8,-6,-8,6,-6,10,-8,-10,-10,-9,-8,3,-8,-1,-1,8], dtype = "uint32")#candidate|3093|(520,)|const|uint32
call_3091 = relay.TupleGetItem(func_2980_call(relay.reshape(const_3092.astype('float64'), [6, 9, 15]), relay.reshape(const_3093.astype('uint32'), [520,]), ), 4)
call_3094 = relay.TupleGetItem(func_2983_call(relay.reshape(const_3092.astype('float64'), [6, 9, 15]), relay.reshape(const_3093.astype('uint32'), [520,]), ), 4)
bop_3108 = relay.bitwise_xor(call_3091.astype('int8'), relay.reshape(call_3083.astype('int8'), relay.shape_of(call_3091))) # shape=(6, 9, 1)
bop_3111 = relay.bitwise_xor(call_3094.astype('int8'), relay.reshape(call_3084.astype('int8'), relay.shape_of(call_3094))) # shape=(6, 9, 1)
bop_3114 = relay.not_equal(const_3092.astype('bool'), call_3091.astype('bool')) # shape=(6, 9, 810)
bop_3117 = relay.not_equal(const_3092.astype('bool'), call_3094.astype('bool')) # shape=(6, 9, 810)
bop_3121 = relay.less_equal(bop_3069.astype('bool'), relay.reshape(var_3067.astype('bool'), relay.shape_of(bop_3069))) # shape=(10, 6, 8)
uop_3128 = relay.exp(bop_3069.astype('float32')) # shape=(10, 6, 8)
uop_3133 = relay.acosh(const_3068.astype('float64')) # shape=(10, 6, 8)
uop_3135 = relay.asin(uop_3128.astype('float32')) # shape=(10, 6, 8)
output = relay.Tuple([const_3093,bop_3108,bop_3114,bop_3121,uop_3133,uop_3135,])
output2 = relay.Tuple([const_3093,bop_3111,bop_3117,bop_3121,uop_3133,uop_3135,])
func_3142 = relay.Function([var_3067,], output)
mod['func_3142'] = func_3142
mod = relay.transform.InferType()(mod)
mutated_mod['func_3142'] = func_3142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3143 = relay.var("var_3143", dtype = "float64", shape = (10, 6, 8))#candidate|3143|(10, 6, 8)|var|float64
func_3142_call = mutated_mod.get_global_var('func_3142')
call_3144 = func_3142_call(var_3143)
output = call_3144
func_3145 = relay.Function([var_3143], output)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_3193 = func_2467_call()
call_3194 = func_2467_call()
output = call_3193
output2 = call_3194
func_3204 = relay.Function([], output)
mod['func_3204'] = func_3204
mod = relay.transform.InferType()(mod)
mutated_mod['func_3204'] = func_3204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mutated_mod.get_global_var('func_3204')
call_3205 = func_3204_call()
output = call_3205
func_3206 = relay.Function([], output)
mutated_mod['func_3206'] = func_3206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3291 = relay.var("var_3291", dtype = "uint32", shape = (13, 4, 5))#candidate|3291|(13, 4, 5)|var|uint32
var_3292 = relay.var("var_3292", dtype = "uint32", shape = (13, 4, 5))#candidate|3292|(13, 4, 5)|var|uint32
bop_3293 = relay.right_shift(var_3291.astype('uint32'), relay.reshape(var_3292.astype('uint32'), relay.shape_of(var_3291))) # shape=(13, 4, 5)
output = relay.Tuple([bop_3293,])
output2 = relay.Tuple([bop_3293,])
func_3300 = relay.Function([var_3291,var_3292,], output)
mod['func_3300'] = func_3300
mod = relay.transform.InferType()(mod)
var_3301 = relay.var("var_3301", dtype = "uint32", shape = (13, 4, 5))#candidate|3301|(13, 4, 5)|var|uint32
var_3302 = relay.var("var_3302", dtype = "uint32", shape = (13, 4, 5))#candidate|3302|(13, 4, 5)|var|uint32
output = func_3300(var_3301,var_3302,)
func_3303 = relay.Function([var_3301,var_3302,], output)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2811_call = mutated_mod.get_global_var('func_2811')
call_3305 = relay.TupleGetItem(func_2810_call(), 0)
call_3306 = relay.TupleGetItem(func_2811_call(), 0)
output = call_3305
output2 = call_3306
func_3332 = relay.Function([], output)
mod['func_3332'] = func_3332
mod = relay.transform.InferType()(mod)
output = func_3332()
func_3333 = relay.Function([], output)
mutated_mod['func_3333'] = func_3333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_3421 = func_2467_call()
call_3422 = func_2467_call()
output = relay.Tuple([call_3421,])
output2 = relay.Tuple([call_3422,])
func_3431 = relay.Function([], output)
mod['func_3431'] = func_3431
mod = relay.transform.InferType()(mod)
mutated_mod['func_3431'] = func_3431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3431_call = mutated_mod.get_global_var('func_3431')
call_3432 = func_3431_call()
output = call_3432
func_3433 = relay.Function([], output)
mutated_mod['func_3433'] = func_3433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_3437 = relay.TupleGetItem(func_2422_call(), 0)
call_3438 = relay.TupleGetItem(func_2423_call(), 0)
var_3444 = relay.var("var_3444", dtype = "float32", shape = (6, 9, 9))#candidate|3444|(6, 9, 9)|var|float32
bop_3445 = relay.add(call_3437.astype('uint16'), var_3444.astype('uint16')) # shape=(6, 9, 9)
bop_3448 = relay.add(call_3438.astype('uint16'), var_3444.astype('uint16')) # shape=(6, 9, 9)
uop_3457 = relay.sinh(var_3444.astype('float64')) # shape=(6, 9, 9)
func_20_call = mod.get_global_var('func_20')
func_23_call = mutated_mod.get_global_var('func_23')
const_3460 = relay.const([6.435813,-6.558469,5.182488,-0.094793,7.020170,-7.559185,5.131665,5.635178,2.503813,-7.126800,-4.282351,-8.860189,7.766978,-9.216329,-0.554683,4.298596,-6.456543,5.656614,3.940808,-0.572838,-4.725546,4.664244,-9.644540,-0.084952,7.226571,-6.196784,5.447924,8.221318,0.082309,2.727560,-5.307226,-7.749608,-0.631436,-0.734415,3.218211,-1.293128,-6.048238,7.606660,-6.610991,-5.454488,-9.193555,-9.815600,3.015047,8.038660,8.166947,5.570250,2.380631,-1.827907,5.996827,4.257811,6.738362,-6.121152,8.933605,-8.738542,5.736467,7.020914,-6.651881,9.284483,-6.545783,-7.848975,2.225553,9.053618,4.581382,-3.747875,-5.790226,-0.528911,-3.716114,4.147807,-9.620406,9.602032,9.667752,-6.312733,-0.026129,4.017574,-2.133106], dtype = "float32")#candidate|3460|(75,)|const|float32
call_3459 = relay.TupleGetItem(func_20_call(relay.reshape(const_3460.astype('float32'), [3, 5, 5])), 0)
call_3461 = relay.TupleGetItem(func_23_call(relay.reshape(const_3460.astype('float32'), [3, 5, 5])), 0)
func_2004_call = mod.get_global_var('func_2004')
func_2010_call = mutated_mod.get_global_var('func_2010')
var_3465 = relay.var("var_3465", dtype = "float32", shape = (154, 4))#candidate|3465|(154, 4)|var|float32
var_3466 = relay.var("var_3466", dtype = "float64", shape = (990,))#candidate|3466|(990,)|var|float64
const_3467 = relay.const([[6,2,-7,8,4,10,4,1,9,-1,6,8,8,4,7,-3,-5,-3,-7,4,3,-9,8,-7,10,5,-9,-3,-4,4,-7,6,-4,-4,8,-4,-2,7,3,-8,-3,8,-7,-8,7,4,-1,-8,9,-7,2,9],[-4,-3,-10,1,-5,5,1,-4,-7,6,9,4,8,5,3,-3,10,-8,-8,-4,-10,-6,4,1,8,-3,1,-5,1,10,-5,2,8,6,1,-10,2,-3,-6,2,-4,-1,2,-6,9,6,-9,-9,-10,-5,-8,-3],[-3,-7,-3,-4,-3,3,-2,-8,-5,3,5,-2,-9,-10,-6,-7,1,9,-2,2,8,3,-4,-9,5,4,-7,9,-5,-3,9,-9,6,6,-1,-5,4,6,-7,9,-10,6,-1,-3,1,9,-8,2,-8,-3,-7,-7],[4,-10,-10,-7,-4,-8,-5,3,-1,-7,5,-2,-8,-4,-1,7,-4,-10,-6,7,-7,6,7,7,-6,-6,4,5,-5,6,-10,3,1,-8,-8,8,-1,-7,-8,8,-1,-6,-4,-4,10,5,6,-3,3,4,8,7],[10,10,10,-1,-4,-5,-8,9,2,7,4,-3,-1,8,-2,-1,-1,-10,2,-4,-8,7,10,3,2,8,-10,-4,-1,-2,-7,5,7,3,-7,-6,-7,-1,8,7,-4,7,7,6,-2,-10,3,-1,9,10,10,-10],[-8,4,-7,-6,-5,6,4,9,-10,7,4,-6,1,-8,-1,-7,-3,6,1,4,5,-7,4,7,7,-9,-1,4,10,-2,-4,1,2,-9,9,9,3,-5,6,-1,3,3,-7,-7,-3,-8,-9,-4,6,4,-7,9],[8,7,3,6,9,1,8,-3,-8,8,1,8,5,3,4,-10,-4,-8,-6,-7,6,3,8,5,-10,-1,4,8,-3,9,-3,-10,7,-5,2,10,-10,2,-10,1,-9,-10,-4,-2,1,4,2,2,4,4,9,-4],[8,6,4,-7,4,5,8,-6,-1,-3,-6,2,-2,4,10,-2,-5,-6,8,1,1,-1,-5,7,9,9,-7,-3,-7,10,-6,-6,3,-9,3,4,-8,-4,3,-1,3,6,-2,7,-6,7,-1,5,4,4,6,3],[4,6,-9,8,4,-2,-2,6,-7,-2,-7,-2,-2,10,4,-9,3,4,10,-3,-7,-3,-3,-9,-5,9,-9,-4,-7,9,2,-10,3,6,-7,2,-6,-4,-5,1,3,3,-1,5,5,-1,-9,-9,-6,-8,6,8],[-4,-10,5,-10,-1,2,-3,-2,-8,5,-4,2,9,-3,-1,-6,-3,-5,-8,-5,-1,3,-4,2,7,-9,-2,-9,2,-6,2,9,8,2,-10,-5,5,-3,-2,-1,2,10,-3,-5,-2,10,-2,-9,-3,-4,-1,-2]], dtype = "uint32")#candidate|3467|(10, 52)|const|uint32
var_3468 = relay.var("var_3468", dtype = "uint16", shape = (1, 216))#candidate|3468|(1, 216)|var|uint16
call_3464 = relay.TupleGetItem(func_2004_call(relay.reshape(var_3465.astype('float32'), [7, 11, 8]), relay.reshape(var_3466.astype('float64'), [990,]), relay.reshape(const_3467.astype('uint32'), [5, 104]), relay.reshape(var_3468.astype('uint16'), [216,]), ), 5)
call_3469 = relay.TupleGetItem(func_2010_call(relay.reshape(var_3465.astype('float32'), [7, 11, 8]), relay.reshape(var_3466.astype('float64'), [990,]), relay.reshape(const_3467.astype('uint32'), [5, 104]), relay.reshape(var_3468.astype('uint16'), [216,]), ), 5)
func_1457_call = mod.get_global_var('func_1457')
func_1461_call = mutated_mod.get_global_var('func_1461')
const_3475 = relay.const([-2,6,-3,-10,-1,-10,-7,1,3,-8,9,-5,9,9,5,-7,-9,6,5,6,4,-6,-5,8,7,6,10,-4,-3,6,-4,-6,-5,-5,-6,-6,-9,3,1,3,-9,-3,-2,8,9,5,7,8,-4,10,-4,-2,1,8,-9,10,-1,7,-2,-3,10,-8,-1,-7,-9,-7,-7,7,-6,-2,7,-3,6,4,-6,1,-4,5,5,-10,-2,7,-6,9,-9,-5,2,-5,-9,-6,-5,-4,-8,-4,-10,-7,-9,-2,-9,7,2,2,-1,2,-3,6,9,-7,-7,-2,-5,-9,-3,9,2,8,7,5,7,7,-8,-8,-3,6,7,-8,6,7,10,1,-4,-3,-9,1,10,7,-3,6,1,-9,-7,1,6,-3,7,-8,3,4,-4,9,4,-1,-1,4,-9,2,-2,7,10,6,-4,-8,8,8,-8,-7,4,-9,6,-9,-8,9,4,10,8,3,10,8,5,3,6,4,-9,5,8,-10,-4,6,7,-2,-2,10,6,2,-5,-3,-7,10,-1,9,6,-6,8,-8,8,3,-5,-1,-10,-4,-2,-7,5,-2,2,-8,3,-9,-7,-10,-7,4,6,4,-2,5,5,-2,-1,9,-8,-2,-10,-3,-7,2,6,7,5,1,10,-1,2,-5,8,6,10,6,-10,9,-2,3,-8,3,2,1,2,6,5,-6,-7,8,4,-9,3,-6,-10,-4,-9,-2,-2,4,-4,9,2,-2,-10,6,2,-10,3,1,-5,2,3,9,-4,1,-1,-7,8,10,10,3,1,-9,1,8,7,4,-1,-9,-3,-6,3,-7,-5,-8,-3,8,-6,8,9,5,-5,7,-9,-2,-7,9,4,-10,5,3,-8,-1,10,-4,-5,-4,-8,-6,-7,1,9,-1,-8,-1,8,-10,-6,5,-10,4,7,-4,1,2,-10,-10,-5,-1,4,5,-7,10,-7,1,3,-3,-5,5,-8,-4,2,-7,-6,1,10,2,4,-3,9,8,-1,-2,1,2,6,10,-9,8,-7,5,-6,7,1,1,-3,-1,2,-1,-1,-4,3,7,-3,9,-4,9,3,2,-5,-5,-1,-5,10,-8,2,-1,8,-7,3,-10,10,8,5,-9,-2,1,1,-8,3,-5,10,8,-2,-8,10,-3,-7,-4,-1,-3,7,6,-1,10,-2,8,9,-1,-10,-7,9,3,-10,-8,-9,-2,6,-4,-2,-8,-9,8,2,-8,-10,-7,6,-7,-6,-7,-8,3,9,-1,-2,-7,7,9,-5,-4,-2,4,-10,6,7,-2,4,-1,3,-6,-2,7,6,-1,-3,-6,7,-4,-2,-4,4,6,-3,1,-8,4,9,9,7,10,4,-4,-7,-9,-9,-2,1,10,-4,2,1,-3,-7,-8,4,-4,-6,-1,-1,4,3,2,3,-10,7,10,-7,-8,7,1,-6,10,-5,4,1,-5,-3,10,1,4,1,-5,9,5,1,-9,-2,8,-10,-5,-10,7,9,3,7,-9,-3,9,2,-10,-1,-2,8,2,4,-10,8,-10,-5,9,10,10,-6,7,-4,-1,-6,8,2,-1,-9,-1,-8,-6,-3,5,-4,-9,6,8,-3,-5,-1,10,-4,10,-1,10,1,4,-2,-1,4,9,-6,-9,8,-7,-8,-10,9,6,10,-1,6,9,2,6,-10,7,-6,6,-2,-10,-9,3,-2,-7,-8,5,2,2,4,2,-7,-1,-9,4,7,2,-6,-3,7,-3,6,7,-4,4,8,-5,8,7,-2,-9,-7,-6,-7,3,8,-8,-6,2,5,9,3,10,9,-9,8,-1,-8,-8,-5,-10,9,-7,5,6,-7,-5,8,-2,-1,-9,6,4,6,-10,4,-3,-7,7,-10,-2,-7,-7,-10,-3,7,-2,9,-8,1,-7,-7,-8,-1,-8,10,-9,-7,-4,-5,-2,9,7,1,5,3,-6,2,-7,-1,-5], dtype = "uint16")#candidate|3475|(728,)|const|uint16
call_3474 = relay.TupleGetItem(func_1457_call(relay.reshape(const_3475.astype('uint16'), [14, 4, 13]), relay.reshape(const_3475.astype('uint16'), [14, 4, 13]), ), 0)
call_3476 = relay.TupleGetItem(func_1461_call(relay.reshape(const_3475.astype('uint16'), [14, 4, 13]), relay.reshape(const_3475.astype('uint16'), [14, 4, 13]), ), 0)
uop_3481 = relay.log10(var_3466.astype('float64')) # shape=(990,)
output = relay.Tuple([bop_3445,uop_3457,call_3459,const_3460,call_3464,var_3465,const_3467,var_3468,call_3474,const_3475,uop_3481,])
output2 = relay.Tuple([bop_3448,uop_3457,call_3461,const_3460,call_3469,var_3465,const_3467,var_3468,call_3476,const_3475,uop_3481,])
func_3486 = relay.Function([var_3444,var_3465,var_3466,var_3468,], output)
mod['func_3486'] = func_3486
mod = relay.transform.InferType()(mod)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3486_call = mutated_mod.get_global_var('func_3486')
var_3488 = relay.var("var_3488", dtype = "float32", shape = (6, 9, 9))#candidate|3488|(6, 9, 9)|var|float32
var_3489 = relay.var("var_3489", dtype = "float32", shape = (154, 4))#candidate|3489|(154, 4)|var|float32
var_3490 = relay.var("var_3490", dtype = "float64", shape = (990,))#candidate|3490|(990,)|var|float64
var_3491 = relay.var("var_3491", dtype = "uint16", shape = (1, 216))#candidate|3491|(1, 216)|var|uint16
call_3487 = func_3486_call(var_3488,var_3489,var_3490,var_3491,)
output = call_3487
func_3492 = relay.Function([var_3488,var_3489,var_3490,var_3491,], output)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_3527 = relay.TupleGetItem(func_2479_call(), 0)
call_3528 = relay.TupleGetItem(func_2480_call(), 0)
uop_3529 = relay.cos(call_3527.astype('float64')) # shape=(6, 9, 1)
uop_3531 = relay.cos(call_3528.astype('float64')) # shape=(6, 9, 1)
uop_3537 = relay.sigmoid(uop_3529.astype('float64')) # shape=(6, 9, 1)
uop_3539 = relay.sigmoid(uop_3531.astype('float64')) # shape=(6, 9, 1)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_3547 = relay.TupleGetItem(func_2650_call(), 0)
call_3548 = relay.TupleGetItem(func_2652_call(), 0)
bop_3549 = relay.floor_divide(uop_3537.astype('float64'), relay.reshape(uop_3529.astype('float64'), relay.shape_of(uop_3537))) # shape=(6, 9, 1)
bop_3552 = relay.floor_divide(uop_3539.astype('float64'), relay.reshape(uop_3531.astype('float64'), relay.shape_of(uop_3539))) # shape=(6, 9, 1)
func_2004_call = mod.get_global_var('func_2004')
func_2010_call = mutated_mod.get_global_var('func_2010')
const_3563 = relay.const([-8.698048,-6.484665,-6.418688,5.930271,-2.944181,1.446983,-2.092801,-2.284703,4.125991,-8.833817,-8.769183,-2.729274,9.333459,-3.920194,7.424751,3.152341,-5.058858,5.490711,5.565018,9.689479,5.264935,-9.605562,5.579862,-0.129581,-8.511336,-5.839689,-5.616136,-1.546331,-9.174912,-6.541298,3.350386,4.924865,-2.073633,3.948271,4.805573,9.529975,6.047193,-9.653413,0.362153,6.265014,5.790942,-7.833458,-7.629625,-0.856082,2.863666,6.107068,-6.686556,-3.898601,2.163374,-9.570603,1.258270,6.578137,5.220286,6.199845,-4.749427,6.091979,-7.159701,8.050810,-9.416147,-5.254737,9.487313,-1.351385,-3.132187,-1.446771,-2.487861,4.100858,-5.205132,5.557866,-1.254127,-9.199698,7.207772,8.116828,5.118629,1.156863,-6.303930,-1.483458,4.157093,4.347435,4.080124,7.296325,4.720520,5.991959,2.458900,9.746840,9.703478,5.532986,1.267264,3.961698,3.980797,-9.277255,-9.373929,3.650555,-2.043594,6.233965,-6.468240,3.678544,9.158911,-2.509394,5.771681,5.706631,0.493578,-7.080157,6.434481,-5.788201,-5.317716,-9.530869,3.329676,-0.128564,-2.052046,3.734586,-5.643268,-6.324519,-4.836273,-4.562561,9.004304,-9.046578,-2.895600,6.040922,-5.651405,9.472994,7.174467,6.400066,0.706329,-7.614180,-2.950925,2.366418,-2.471693,-7.263182,-3.421571,4.681213,-2.320340,-6.384622,-2.018160,-5.586488,7.652316,4.785286,9.419675,7.980706,-2.810285,3.386900,-4.283548,5.135787,-7.850418,7.909003,-4.771040,-1.916772,-3.188340,-0.201371,7.440307,-6.764215,-5.320288,4.754662,-9.356131,-8.381632,-1.493828,5.957057,-8.096523,1.788601,6.911622,2.370225,9.017334,-9.624908,3.661414,-3.260887,-6.119410,8.225262,-1.856097,-0.626713,-9.040587,7.419263,-4.141150,6.926245,6.796590,-0.744650,1.526006,3.021924,2.792285,-8.798485,-5.521545,3.607297,1.885040,6.827250,6.961032,0.514872,-4.179045,-2.518986,3.234187,-3.657663,4.249970,0.518615,-2.852455,3.598057,3.610839,-2.915168,9.633784,-2.996169,3.944546,-7.748684,4.028893,-3.582303,0.928206,7.901453,-5.221003,6.010901,-8.817891,-8.939244,5.634151,-3.426938,7.424401,-8.932869,9.888142,-4.558195,-0.297786,7.390160,-1.896989,-7.878193,7.247200,-2.564203,0.487136,1.933101,7.787658,-3.568425,4.939822,0.716804,-7.248804,8.250077,-5.131851,-3.917494,8.065357,-1.859140,8.921023,1.409073,-8.732099,-7.710276,9.693878,7.993013,6.573885,-6.770830,0.985868,1.618955,7.776966,7.191003,-4.841487,4.137497,8.122456,0.115857,-8.251598,9.849625,9.289408,-2.751603,3.072977,5.667643,5.222023,-4.058419,4.340588,-5.985667,-0.033213,-1.957659,8.019955,-0.391974,6.456394,8.652464,-8.922894,0.073743,-3.086601,6.626736,1.546703,-5.297937,-9.845643,8.548941,1.278999,-2.693847,7.371211,-5.687701,-1.316751,-7.255425,3.586331,5.885807,-1.400966,0.519933,-3.011973,8.094639,4.199471,3.614763,-9.134459,0.930160,-3.076875,1.668339,-4.457709,7.316748,1.399234,-1.393526,4.073488,-7.684398,-8.307456,3.432218,-3.247237,7.080853,-0.383946,1.096494,8.626685,-3.333012,2.089210,-6.425416,-2.099985,-4.197794,9.441358,-7.524546,6.965987,-0.312511,-4.680895,-1.545259,-8.068277,-3.436247,-1.119934,8.767585,-4.060110,-9.821217,-4.074164,5.799124,-8.374056,-7.353026,-1.057144,-5.796690,1.242548,-3.518148,-5.182537,3.685574,-3.819611,-9.522756,0.821458,-3.784589,5.501891,4.806195,1.258636,-1.689310,6.713426,3.715277,9.638743,7.031711,5.947164,-9.844559,-3.055409,-8.992917,9.346274,-5.505629,3.995633,-2.169111,6.798265,-7.373069,-9.297728,-7.593955,5.333714,-9.944044,9.925121,6.801391,8.101865,9.000713,6.284764,-3.244904,-5.071470,-4.794804,6.777404,-2.594141,-0.732924,-3.703814,-0.822109,-9.599889,-3.126538,-0.662822,-1.974762,-0.588858,-9.223413,-1.195565,-7.617930,-7.828607,5.066487,-5.105934,-4.834484,1.006857,8.285493,9.932550,-5.769003,5.674601,-3.330980,-2.090567,5.538509,-1.553969,-2.653564,-8.268462,0.303817,3.299847,1.484198,-5.909399,4.015020,-5.077464,4.376505,-0.458812,-5.675981,-8.591607,2.753200,1.878275,-5.297188,-2.387618,-7.961358,7.543376,-9.197426,-3.256944,-7.671622,9.431543,-5.534052,-3.103255,2.918855,7.658448,-9.451666,6.884996,7.661000,-1.253738,-9.237993,-7.512515,1.258131,9.908286,2.613293,0.893385,-0.826440,5.889904,6.319059,-2.328703,-2.504309,-3.848647,1.871939,-1.787689,-5.131259,-8.002617,-4.224703,-0.791615,-1.377221,7.997976,9.241882,5.127447,9.122982,0.966270,-9.661585,8.239450,3.291302,8.884526,9.870216,8.820674,5.331548,4.101093,8.825291,6.204802,6.434208,5.746471,-3.265075,-2.355235,0.331162,-5.329380,0.059635,-8.304962,2.324909,1.779626,3.421959,-1.170300,7.981085,-6.019571,9.860925,-6.333870,-6.748955,-3.450916,4.492632,-2.924348,-6.949520,-0.005961,3.535392,-0.149381,1.512257,4.723413,6.200303,4.091105,2.710011,7.534206,5.508148,3.675510,6.480346,-4.316759,-7.563456,5.099689,5.742303,-2.497225,-6.482537,2.308260,5.225961,-0.031679,9.575704,8.374736,-6.767488,5.035666,-7.998440,9.337114,-4.094994,-3.679156,6.591895,3.946348,-0.822112,8.478266,3.917642,-5.694067,3.078001,1.906232,-4.886299,-8.611120,9.534057,-3.242206,-5.757279,8.266978,-2.971160,-1.350317,4.291203,-6.477853,2.519310,-3.377175,7.724070,1.325030,2.639033,6.968643,7.188219,-3.610596,0.848913,8.980119,6.460232,9.706842,-1.250570,3.926803,7.105886,7.906671,3.749513,9.512592,-5.056191,6.717298,9.559943,2.912853,-0.412046,1.516364,6.464594,-1.266474,2.829046,-1.418421,0.801978,3.063310,5.861012,3.388622,-5.150556,9.915202,-3.816887,0.513189,8.213278,-7.878283,-2.363168,-4.992442,-4.154733,-9.608226,-8.092696,-0.642555,-9.745149,-0.931990,-2.604478,-4.606978,1.336886,-5.118247,9.909263,3.795749,-5.245496,-5.120333,-0.490726,-4.644294,7.908799,-5.233559,1.186589,3.969479,5.394480,-7.910150,-1.611521,-8.855331,-1.672449,8.809040,-0.133839,8.882969,-4.369237,-0.772839,-0.236034,-7.871610,0.021694,8.716666,4.169481,6.453521,-1.819359,-2.573604,-9.101892,-1.402176,2.368920,-2.273752,6.400297,5.299653,-3.180227,-9.560443,-7.946995,-4.219514,1.980665,6.689717,4.621571,6.192510,-6.890342,-9.573179,9.672735,6.873131], dtype = "float32")#candidate|3563|(616,)|const|float32
var_3564 = relay.var("var_3564", dtype = "float64", shape = (330, 3))#candidate|3564|(330, 3)|var|float64
const_3565 = relay.const([-4,-8,-4,-8,3,10,-3,-8,2,-3,5,-1,9,9,-4,7,-9,7,-9,-6,10,6,7,-2,-1,-1,1,3,-5,-1,-7,9,3,-9,-10,9,-1,3,8,-6,-8,-7,-8,-1,5,4,-10,7,-8,10,-1,9,-1,-9,-6,9,-1,-5,1,2,9,7,10,5,-10,7,3,1,-8,4,-7,-10,-1,9,-2,-7,8,2,-10,5,3,1,-10,9,-5,2,8,-10,6,9,2,-8,-2,8,7,-1,-7,-6,5,3,-10,1,6,7,3,-1,-3,-7,9,-6,9,9,-10,-3,2,-6,-2,2,-2,-1,6,2,-8,4,-4,-8,-8,9,3,4,9,-10,8,-10,-3,-5,-10,8,-6,9,-5,-3,3,-4,5,4,7,-6,7,3,-6,9,-5,-5,-3,1,9,-4,7,9,-3,9,-6,-3,10,5,6,3,2,2,-10,5,8,-4,-5,-8,-7,-8,-1,-9,9,-8,-7,6,-9,-7,1,10,9,-4,-10,-5,-7,-1,-4,-9,4,9,8,-3,4,-8,3,-4,-4,9,1,1,4,6,2,-4,5,-8,-9,-10,2,-7,5,-7,2,-5,9,10,-9,3,4,-10,1,1,-10,2,-10,8,2,6,-3,-6,-6,8,-3,-9,-10,-5,8,10,9,-9,-3,-4,-4,9,-1,10,9,5,8,-10,-4,1,1,7,5,8,-4,-3,3,6,4,1,3,-7,1,-9,-4,-4,-2,-6,-10,-5,5,3,-9,-1,-6,-6,8,9,-3,-4,-9,-4,9,9,2,-4,-3,6,9,-5,-10,1,6,-9,8,-8,2,-9,-1,2,4,2,-6,-9,6,9,5,-5,-10,2,10,7,3,6,-6,-7,8,-10,-6,9,-3,9,8,8,10,6,-1,5,10,-6,-2,7,-10,4,5,9,2,5,4,6,5,-6,-6,10,4,2,-9,-8,7,-7,7,-2,6,9,-1,3,-8,4,-4,1,8,-6,4,6,-9,-4,10,5,3,5,-8,2,9,-1,-8,-1,-6,5,-4,-1,-5,9,-3,3,-6,-2,9,4,9,1,10,8,-2,7,-6,-10,5,10,2,4,4,-6,-9,10,-8,9,-6,5,2,7,8,2,-5,-1,-6,6,-10,-2,5,-1,7,-10,-9,-3,4,-10,7,8,-4,8,-4,1,-9,5,7,6,7,8,-10,6,1,8,8,10,5,-4,-4,-4,-10,-6,6,2,7,-9,1,1,-1,-1,-5,3,-9,-10,3,-6,5,-1,-6,-4,3,8,-7,7,7,9,1,1,-10,-4,7,6,-6,2,-10,-2,8,-8,-10,4,-4,-9,-6,8,-3,1,-4,9,5,-9,6,7,-3,8,1,9,5,-2,-8,7,3,-1], dtype = "uint32")#candidate|3565|(520,)|const|uint32
var_3566 = relay.var("var_3566", dtype = "uint16", shape = (216,))#candidate|3566|(216,)|var|uint16
call_3562 = relay.TupleGetItem(func_2004_call(relay.reshape(const_3563.astype('float32'), [7, 11, 8]), relay.reshape(var_3564.astype('float64'), [990,]), relay.reshape(const_3565.astype('uint32'), [5, 104]), relay.reshape(var_3566.astype('uint16'), [216,]), ), 5)
call_3567 = relay.TupleGetItem(func_2010_call(relay.reshape(const_3563.astype('float32'), [7, 11, 8]), relay.reshape(var_3564.astype('float64'), [990,]), relay.reshape(const_3565.astype('uint32'), [5, 104]), relay.reshape(var_3566.astype('uint16'), [216,]), ), 5)
output = relay.Tuple([call_3547,bop_3549,call_3562,const_3563,var_3564,const_3565,var_3566,])
output2 = relay.Tuple([call_3548,bop_3552,call_3567,const_3563,var_3564,const_3565,var_3566,])
func_3573 = relay.Function([var_3564,var_3566,], output)
mod['func_3573'] = func_3573
mod = relay.transform.InferType()(mod)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3573_call = mutated_mod.get_global_var('func_3573')
var_3575 = relay.var("var_3575", dtype = "float64", shape = (330, 3))#candidate|3575|(330, 3)|var|float64
var_3576 = relay.var("var_3576", dtype = "uint16", shape = (216,))#candidate|3576|(216,)|var|uint16
call_3574 = func_3573_call(var_3575,var_3576,)
output = call_3574
func_3577 = relay.Function([var_3575,var_3576,], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2811_call = mutated_mod.get_global_var('func_2811')
call_3691 = relay.TupleGetItem(func_2810_call(), 0)
call_3692 = relay.TupleGetItem(func_2811_call(), 0)
output = relay.Tuple([call_3691,])
output2 = relay.Tuple([call_3692,])
func_3695 = relay.Function([], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mutated_mod.get_global_var('func_3695')
call_3696 = func_3695_call()
output = call_3696
func_3697 = relay.Function([], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2650_call = mod.get_global_var('func_2650')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_3722 = relay.TupleGetItem(func_2650_call(), 0)
call_3723 = relay.TupleGetItem(func_2652_call(), 0)
output = relay.Tuple([call_3722,])
output2 = relay.Tuple([call_3723,])
func_3732 = relay.Function([], output)
mod['func_3732'] = func_3732
mod = relay.transform.InferType()(mod)
output = func_3732()
func_3733 = relay.Function([], output)
mutated_mod['func_3733'] = func_3733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_3754 = relay.TupleGetItem(func_2583_call(), 7)
call_3755 = relay.TupleGetItem(func_2584_call(), 7)
output = relay.Tuple([call_3754,])
output2 = relay.Tuple([call_3755,])
func_3765 = relay.Function([], output)
mod['func_3765'] = func_3765
mod = relay.transform.InferType()(mod)
output = func_3765()
func_3766 = relay.Function([], output)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_3786 = relay.TupleGetItem(func_2723_call(), 0)
call_3787 = relay.TupleGetItem(func_2725_call(), 0)
output = relay.Tuple([call_3786,])
output2 = relay.Tuple([call_3787,])
func_3794 = relay.Function([], output)
mod['func_3794'] = func_3794
mod = relay.transform.InferType()(mod)
mutated_mod['func_3794'] = func_3794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mutated_mod.get_global_var('func_3794')
call_3795 = func_3794_call()
output = call_3795
func_3796 = relay.Function([], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_3823 = func_2467_call()
call_3824 = func_2467_call()
output = call_3823
output2 = call_3824
func_3834 = relay.Function([], output)
mod['func_3834'] = func_3834
mod = relay.transform.InferType()(mod)
output = func_3834()
func_3835 = relay.Function([], output)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3906 = relay.TupleGetItem(func_3765_call(), 0)
call_3907 = relay.TupleGetItem(func_3766_call(), 0)
uop_3909 = relay.tan(call_3906.astype('float64')) # shape=(6, 11, 15)
uop_3911 = relay.tan(call_3907.astype('float64')) # shape=(6, 11, 15)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_3921 = relay.TupleGetItem(func_2583_call(), 1)
call_3922 = relay.TupleGetItem(func_2584_call(), 1)
output = relay.Tuple([uop_3909,call_3921,])
output2 = relay.Tuple([uop_3911,call_3922,])
func_3927 = relay.Function([], output)
mod['func_3927'] = func_3927
mod = relay.transform.InferType()(mod)
mutated_mod['func_3927'] = func_3927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3927_call = mutated_mod.get_global_var('func_3927')
call_3928 = func_3927_call()
output = call_3928
func_3929 = relay.Function([], output)
mutated_mod['func_3929'] = func_3929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_4040 = relay.TupleGetItem(func_3927_call(), 0)
call_4041 = relay.TupleGetItem(func_3929_call(), 0)
output = relay.Tuple([call_4040,])
output2 = relay.Tuple([call_4041,])
func_4092 = relay.Function([], output)
mod['func_4092'] = func_4092
mod = relay.transform.InferType()(mod)
mutated_mod['func_4092'] = func_4092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mutated_mod.get_global_var('func_4092')
call_4093 = func_4092_call()
output = call_4093
func_4094 = relay.Function([], output)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2422_call = mod.get_global_var('func_2422')
func_2423_call = mutated_mod.get_global_var('func_2423')
call_4121 = relay.TupleGetItem(func_2422_call(), 0)
call_4122 = relay.TupleGetItem(func_2423_call(), 0)
output = relay.Tuple([call_4121,])
output2 = relay.Tuple([call_4122,])
func_4136 = relay.Function([], output)
mod['func_4136'] = func_4136
mod = relay.transform.InferType()(mod)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4136_call = mutated_mod.get_global_var('func_4136')
call_4137 = func_4136_call()
output = call_4137
func_4138 = relay.Function([], output)
mutated_mod['func_4138'] = func_4138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4156 = relay.TupleGetItem(func_3765_call(), 0)
call_4157 = relay.TupleGetItem(func_3766_call(), 0)
func_3732_call = mod.get_global_var('func_3732')
func_3733_call = mutated_mod.get_global_var('func_3733')
call_4158 = relay.TupleGetItem(func_3732_call(), 0)
call_4159 = relay.TupleGetItem(func_3733_call(), 0)
output = relay.Tuple([call_4156,call_4158,])
output2 = relay.Tuple([call_4157,call_4159,])
func_4160 = relay.Function([], output)
mod['func_4160'] = func_4160
mod = relay.transform.InferType()(mod)
output = func_4160()
func_4161 = relay.Function([], output)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_4245 = relay.TupleGetItem(func_2479_call(), 0)
call_4246 = relay.TupleGetItem(func_2480_call(), 0)
uop_4259 = relay.log10(call_4245.astype('float32')) # shape=(6, 9, 1)
uop_4261 = relay.log10(call_4246.astype('float32')) # shape=(6, 9, 1)
uop_4262 = relay.log(call_4245.astype('float64')) # shape=(6, 9, 1)
uop_4264 = relay.log(call_4246.astype('float64')) # shape=(6, 9, 1)
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
call_4272 = relay.TupleGetItem(func_3695_call(), 0)
call_4273 = relay.TupleGetItem(func_3697_call(), 0)
var_4279 = relay.var("var_4279", dtype = "float32", shape = (6, 9, 14))#candidate|4279|(6, 9, 14)|var|float32
bop_4280 = relay.subtract(uop_4259.astype('uint64'), var_4279.astype('uint64')) # shape=(6, 9, 14)
bop_4283 = relay.subtract(uop_4261.astype('uint64'), var_4279.astype('uint64')) # shape=(6, 9, 14)
uop_4294 = relay.sin(call_4272.astype('float64')) # shape=(6, 9, 15)
uop_4296 = relay.sin(call_4273.astype('float64')) # shape=(6, 9, 15)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4297 = relay.TupleGetItem(func_4160_call(), 1)
call_4298 = relay.TupleGetItem(func_4161_call(), 1)
uop_4306 = relay.acos(call_4245.astype('float32')) # shape=(6, 9, 1)
uop_4308 = relay.acos(call_4246.astype('float32')) # shape=(6, 9, 1)
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_4309 = relay.TupleGetItem(func_3927_call(), 0)
call_4310 = relay.TupleGetItem(func_3929_call(), 0)
output = relay.Tuple([uop_4262,bop_4280,uop_4294,call_4297,uop_4306,call_4309,])
output2 = relay.Tuple([uop_4264,bop_4283,uop_4296,call_4298,uop_4308,call_4310,])
func_4318 = relay.Function([var_4279,], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
var_4319 = relay.var("var_4319", dtype = "float32", shape = (6, 9, 14))#candidate|4319|(6, 9, 14)|var|float32
output = func_4318(var_4319)
func_4320 = relay.Function([var_4319], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2811_call = mutated_mod.get_global_var('func_2811')
call_4329 = relay.TupleGetItem(func_2810_call(), 0)
call_4330 = relay.TupleGetItem(func_2811_call(), 0)
output = call_4329
output2 = call_4330
func_4342 = relay.Function([], output)
mod['func_4342'] = func_4342
mod = relay.transform.InferType()(mod)
output = func_4342()
func_4343 = relay.Function([], output)
mutated_mod['func_4343'] = func_4343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4352 = relay.var("var_4352", dtype = "float32", shape = (8, 9, 13))#candidate|4352|(8, 9, 13)|var|float32
uop_4353 = relay.erf(var_4352.astype('float32')) # shape=(8, 9, 13)
output = relay.Tuple([uop_4353,])
output2 = relay.Tuple([uop_4353,])
func_4360 = relay.Function([var_4352,], output)
mod['func_4360'] = func_4360
mod = relay.transform.InferType()(mod)
mutated_mod['func_4360'] = func_4360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4361 = relay.var("var_4361", dtype = "float32", shape = (8, 9, 13))#candidate|4361|(8, 9, 13)|var|float32
func_4360_call = mutated_mod.get_global_var('func_4360')
call_4362 = func_4360_call(var_4361)
output = call_4362
func_4363 = relay.Function([var_4361], output)
mutated_mod['func_4363'] = func_4363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4381 = relay.TupleGetItem(func_3765_call(), 0)
call_4382 = relay.TupleGetItem(func_3766_call(), 0)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
var_4398 = relay.var("var_4398", dtype = "float32", shape = (756,))#candidate|4398|(756,)|var|float32
call_4397 = relay.TupleGetItem(func_4318_call(relay.reshape(var_4398.astype('float32'), [6, 9, 14])), 1)
call_4399 = relay.TupleGetItem(func_4320_call(relay.reshape(var_4398.astype('float32'), [6, 9, 14])), 1)
output = relay.Tuple([call_4381,call_4397,var_4398,])
output2 = relay.Tuple([call_4382,call_4399,var_4398,])
func_4403 = relay.Function([var_4398,], output)
mod['func_4403'] = func_4403
mod = relay.transform.InferType()(mod)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4404 = relay.var("var_4404", dtype = "float32", shape = (756,))#candidate|4404|(756,)|var|float32
func_4403_call = mutated_mod.get_global_var('func_4403')
call_4405 = func_4403_call(var_4404)
output = call_4405
func_4406 = relay.Function([var_4404], output)
mutated_mod['func_4406'] = func_4406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_4432 = relay.TupleGetItem(func_4092_call(), 0)
call_4433 = relay.TupleGetItem(func_4094_call(), 0)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4442 = func_4342_call()
call_4443 = func_4342_call()
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
const_4449 = relay.const([-0.462272,3.572143,4.276701,9.340426,-8.691071,-1.694692,0.890119,6.520379,-3.582350,5.436753,3.196169,0.206708,-0.092386,0.723303,6.457912,9.000722,5.912074,0.325668,-8.765244,-9.401118,-9.847883,-5.302179,8.385859,-2.496016,-6.457013,8.335971,0.978432,2.395007,-7.198658,9.411148,7.487624,5.249896,9.397903,-5.811269,-1.245573,-7.840975,3.861251,-5.766938,5.139258,-6.461126,-9.437783,2.849238,-4.033504,2.747060,-8.212118,-2.114590,5.827949,-2.661271,0.939674,-9.985998,9.777831,-3.389277,4.886748,3.388826,5.918732,0.659275,3.576915,-8.324962,9.750365,0.524983,-1.966523,4.032092,7.990875,1.479523,-5.310773,-5.905589,-7.586739,-5.544704,7.620596,-9.865876,1.881341,-9.491374,7.032530,-7.689451,-8.126061,-4.042758,-0.558669,5.351305,1.345431,-3.347252,-5.107048,0.917271,0.420769,8.787811,-9.843081,-6.253015,3.160130,-7.390139,8.478799,3.974204,-6.218285,-9.305126,3.525705,0.281431,-8.688845,4.596456,-5.887801,-9.233211,-8.939061,8.039908,9.153158,4.098062,-5.488524,0.507209,-8.529407,-5.765942,-7.982173,9.163978,-9.447641,-2.710980,-3.011449,0.562011,8.550302,4.863717,1.404437,-0.706352,-4.325997,3.475322,9.680600,-3.802956,6.412810,0.618672,0.222810,-4.922238,1.754238,4.407156,-9.114783,-3.304080,-2.254060,6.257991,-1.930331,-7.732192,4.403557,-0.014664,3.443130,7.042805,0.884671,-3.840890,1.964922,-2.469685,-7.493110,6.702740,-7.532137,-7.318957,1.100775,7.279327,3.247309,-1.465129,3.850210,5.452226,0.402795,-9.123283,8.318728,7.932057,0.851500,8.201707,6.003644,-8.166874,2.702459,-2.061898,-7.850989,-6.976808,-8.768014,8.044104,0.431979,-6.910256,9.330521,5.852606,2.767469,7.960382,-2.422235,-1.107221,2.971396,-8.606865,3.803795,6.751658,-8.274783,5.591763,-2.345382,-4.163893,-8.997042,-5.553389,5.922658,-5.736961,6.738474,3.974723,9.271345,1.966671,-9.479075,5.212088,2.778609,-3.600585,-5.271848,-2.454151,-5.999528,8.996846,8.614988,-6.008624,2.851403,6.593627,-2.758857,8.252540,6.784327,0.786700,-2.947509,0.976841,1.901251,9.689523,-4.933543,7.010648,-8.935961,4.531038,-1.773771,2.674624,-5.950536,-0.830555,0.943766,-2.194476,4.523116,2.473926,-5.848563,0.350549,-0.102880,-1.288002,-0.324522,5.506959,-4.026232,-1.138424,-0.288364,-3.058175,-1.491799,6.969668,-5.471235,-0.551394,7.895559,9.213909,0.075175,-6.844952,2.118275,-7.027833,-6.808280,1.519679,-3.287148,0.564685,9.533589,6.012627,6.644069,7.892637,5.290358,0.887095,5.957808,-2.292594,5.008166,-5.054654,6.614945,-5.397383,-4.742861,-2.236395,7.184889,2.085531,-2.366511,-9.597950,-8.105164,9.915954,-4.775576,-2.056650,-7.467800,-4.517252,1.138800,-4.436245,6.917380,-2.589900,-2.938279,-0.029154,4.342737,-0.563799,-2.975280,4.187132,3.602935,-5.671903,6.836205,5.833945,-2.355467,5.270269,6.944414,-5.703789,-5.810552,-0.947363,-8.041022,-7.364987,2.770750,4.948444,1.715609,-3.547080,1.161680,-2.445873,2.191679,-2.566532,6.557230,-2.475943,-4.064133,6.907238,4.500291,7.618187,-6.539183,0.743028,9.985388,-4.872354,6.684116,7.899632,6.540017,4.525766,4.542653,-2.382297,8.362637,9.023791,-5.493418,-7.827618,0.405313,4.278596,5.624551,3.689272,6.899179,-2.406948,-1.166948,7.514101,5.572625,-4.242463,5.433331,-9.924385,0.322145,-9.266841,-9.622800,-3.757393,-5.093860,-7.372394,-6.537156,-5.122872,1.585570,3.713264,-9.646994,5.912869,1.679413,7.006638,7.543231,-4.016528,9.750711,-1.564986,1.132966,4.477488,-5.511329,-3.857341,7.642725,-2.724656,0.129269,-4.050730,-4.332361,3.956550,-9.536269,-0.701718,-1.789002,-0.232668,1.806116,-2.371530,1.259722,2.355884,8.686090,8.119116,-6.483212,4.627862,8.334621,-5.917932,0.811520,2.067171,-6.780101,5.747805,-7.436253,-4.014032,-9.575267,3.884799,0.197701,9.753673,-6.578797,7.810934,-3.036730,-4.741511,0.107972,-0.900725,-0.908837,-5.751648,0.013945,-8.721966,0.154030,-3.385761,1.319884,-4.016001,-0.912850,6.070019,-6.637832,2.090192,5.029178,-0.976093,-7.657977,5.969164,-0.397595,6.666035,-0.752308,-8.310571,6.808752,0.453468,-5.066968,3.930315,-7.181793,7.473892,7.678898,1.177556,-7.375599,0.605546,-3.759266,2.872503,-6.726306,6.400750,-4.222669,8.743724,-6.934891,-9.155598,-2.109903,9.305683,-6.427030,2.032666,8.250826,-3.318784,-0.014236,7.714947,8.412175,4.146751,0.468675,-6.624668,-9.541692,9.596812,-7.353733,7.698660,3.868010,0.235645,6.699493,-9.232369,-9.119895,-0.885834,-7.835059,9.718931,1.184168,-9.483917,4.483441,-3.640884,-0.772865,-3.066568,-5.891105,6.257023,-2.521685,4.178950,2.208985,0.538092], dtype = "float64")#candidate|4449|(462,)|const|float64
call_4448 = func_315_call(relay.reshape(const_4449.astype('float64'), [3, 14, 11]), relay.reshape(const_4449.astype('float64'), [3, 14, 11]), )
call_4450 = func_315_call(relay.reshape(const_4449.astype('float64'), [3, 14, 11]), relay.reshape(const_4449.astype('float64'), [3, 14, 11]), )
uop_4451 = relay.log(call_4442.astype('float64')) # shape=(6, 9, 15)
uop_4453 = relay.log(call_4443.astype('float64')) # shape=(6, 9, 15)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_4458 = relay.TupleGetItem(func_2479_call(), 0)
call_4459 = relay.TupleGetItem(func_2480_call(), 0)
uop_4462 = relay.sigmoid(call_4448.astype('float32')) # shape=(3, 14, 11)
uop_4464 = relay.sigmoid(call_4450.astype('float32')) # shape=(3, 14, 11)
output = relay.Tuple([call_4432,const_4449,uop_4451,call_4458,uop_4462,])
output2 = relay.Tuple([call_4433,const_4449,uop_4453,call_4459,uop_4464,])
func_4466 = relay.Function([], output)
mod['func_4466'] = func_4466
mod = relay.transform.InferType()(mod)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4466_call = mutated_mod.get_global_var('func_4466')
call_4467 = func_4466_call()
output = call_4467
func_4468 = relay.Function([], output)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_4549 = relay.TupleGetItem(func_2583_call(), 2)
call_4550 = relay.TupleGetItem(func_2584_call(), 2)
func_862_call = mod.get_global_var('func_862')
func_866_call = mutated_mod.get_global_var('func_866')
var_4558 = relay.var("var_4558", dtype = "float64", shape = (462,))#candidate|4558|(462,)|var|float64
call_4557 = relay.TupleGetItem(func_862_call(relay.reshape(call_4549.astype('float64'), [1, 14, 11]), relay.reshape(var_4558.astype('float64'), [3, 14, 11]), ), 1)
call_4559 = relay.TupleGetItem(func_866_call(relay.reshape(call_4549.astype('float64'), [1, 14, 11]), relay.reshape(var_4558.astype('float64'), [3, 14, 11]), ), 1)
func_4403_call = mod.get_global_var('func_4403')
func_4406_call = mutated_mod.get_global_var('func_4406')
const_4565 = relay.const([-9.302756,3.213339,7.086907,-3.910717,-3.086850,8.441396,9.423333,1.199855,9.644579,-0.821180,-0.280419,-4.308691,3.195687,-3.224841,2.270782,6.180312,-8.040682,3.965197,0.917367,6.659905,6.555623,-7.106274,0.861929,3.626416,-1.245085,-2.161790,-1.078146,-2.340015,-0.170706,-8.858302,3.791227,6.744550,-0.103236,6.017062,7.783497,-3.910452,4.317897,5.639746,-2.269603,-6.326802,-5.227009,-7.410094,0.909055,-9.216713,8.991081,9.237915,-4.241982,-1.321237,3.644090,6.222873,3.890219,0.938778,-8.485398,2.690836,-7.258050,9.591639,-5.293524,9.772998,-5.711726,-2.080625,7.907485,-6.495645,-8.397806,-6.146921,6.121735,-0.375492,3.543498,0.708092,-0.538439,3.966854,-7.264227,7.217573,-1.806053,-3.957432,2.250203,-2.059337,-5.388633,-0.068018,-4.097037,0.935571,-0.858419,-1.837244,5.513118,-1.402096,-4.681825,-4.669387,-6.092830,6.461090,4.647308,-9.086447,-7.109329,8.251074,5.344251,-6.659629,-5.005740,6.394548,6.013531,9.182407,-9.807608,6.128982,1.010306,1.677658,4.934937,-6.243034,2.315362,1.819075,7.155105,-0.648567,4.665583,-7.244150,-3.718319,-5.175174,2.695477,5.144231,3.605295,-6.226958,-8.616505,8.189899,0.184105,-4.803296,-4.390683,-4.225580,-2.148753,-2.187976,0.666062,-0.786307,9.677904,-4.881926,-1.676712,-5.541372,-2.732405,-2.589884,-4.685378,-4.395983,3.040682,-8.835521,1.627290,5.935822,-8.668726,5.669522,1.615835,0.404873,-6.510451,2.250348,7.155622,8.983934,9.708092,8.729018,8.885603,1.254909,-2.208257,-0.404737,-6.147740,-5.010744,1.140301,1.491534,5.938046,3.478534,-6.410384,-5.671011,-9.259578,8.426289,3.844036,-8.611071,-0.296970,5.620026,6.502020,-2.560430,0.802820,-9.170192,-0.474033,6.077737,0.650395,-3.791582,-4.894978,5.248517,-3.504843,-1.276541,8.391472,-6.698390,-0.311832,1.499412,8.425004,9.023110,-8.671871,7.528681,9.395557,-4.604625,-1.651015,-0.957247,3.851008,4.638572,-8.451227,5.937534,-1.678488,-7.321342,9.871214,2.144413,8.281299,2.031137,-2.438174,0.780646,-3.743721,-3.752428,-2.898071,3.211000,6.811809,8.318803,-2.248739,9.025821,-7.620280,7.266433,5.136829,-5.035586,1.373483,-5.389855,-9.167515,-4.006442,2.653506,9.855113,2.640992,5.609447,-1.350649,8.759662,5.774841,7.734685,-0.378527,1.168356,7.784962,-9.473161,-8.416726,0.237393,-6.590160,9.240400,-2.682825,6.363542,1.553946,-7.460659,8.154751,-0.864605,5.770040,-6.782028,-4.508282,9.198745,0.147344,-9.852213,5.378018,0.761545,6.020888,3.192413,7.691066,-8.620715,-2.450982,-5.028232,-2.266246,-9.832896,1.184383,3.083298,4.274285,3.387285,-2.959106,-0.978036,6.714018,-8.141827,-2.677723,8.539805,-1.152682,-9.663069,-6.259174,4.948649,9.575657,-9.516430,-6.094647,-9.582702,7.987906,5.815664,0.675358,0.239591,8.896405,-0.678486,3.487844,7.749306,0.821563,-3.735670,8.278843,-5.391127,-4.224956,5.251692,-1.467288,-7.120508,7.550535,1.060364,9.052365,-5.405909,-1.900724,-3.741369,-1.203559,-2.572015,3.294136,9.877530,-6.348596,4.523578,2.053011,3.065488,-0.178999,3.055903,8.848670,-8.166437,4.407270,3.288267,4.713601,1.510997,-1.214893,4.095599,3.593449,-7.343948,-6.431677,-5.575747,-4.140018,4.820485,3.625821,-4.209512,-5.133533,9.536297,5.791586,4.296134,-5.486830,-9.388203,-0.012812,-8.856849,9.102665,4.038804,-4.497571,9.054838,-4.000275,2.324978,8.450850,-8.644526,-0.209559,5.089488,3.879343,6.328273,5.075515,-9.488742,6.225951,1.082047,3.394843,9.872420,-9.594773,-9.436510,4.325580,-8.050715,2.936305,-3.211373,-5.785483,-3.774337,2.867858,0.734118,3.328684,-9.864564,-1.699830,7.381900,1.340028,5.447444,6.560743,-3.460727,3.533046,3.848555,8.673240,5.964174,9.322356,0.840396,1.575648,-2.633842,-9.425849,3.644321,-5.760153,-4.568364,3.963980,-7.766284,8.162200,-5.112489,6.198352,-8.212536,8.589796,8.272576,7.533031,5.521005,2.199900,9.897688,8.015162,2.905216,-4.976134,0.725488,0.084221,-4.562076,-3.525274,-2.459384,1.910156,-6.305217,-5.484957,9.914006,0.320278,-2.261702,-7.406969,-7.791822,-4.119815,-5.223847,-5.459618,4.775655,4.712613,-3.778053,-7.045459,5.079677,4.415698,-8.245675,2.078316,7.685488,9.309823,-4.792821,-4.430724,9.872329,-9.509399,5.361035,2.737063,-9.206982,-7.837661,-7.072924,2.607849,-8.668202,7.052184,-1.637494,4.776473,1.682785,2.468411,-7.767956,9.261366,7.577505,2.948042,-0.936380,6.142539,7.072928,6.820088,-0.300035,-5.985996,-9.160456,7.631287,-8.944686,-1.119183,7.000004,9.115094,0.478824,1.735312,-4.772988,3.703016,7.381543,-7.571928,4.390974,-0.490624,-8.646644,-5.518511,0.506390,-8.524442,-0.491999,8.038165,-5.912418,-6.885162,1.907465,-1.099900,-8.136230,-9.204118,-6.825780,1.913110,1.211740,6.420908,-9.379327,-0.184734,-9.236463,6.675225,2.457111,-4.318622,-9.839876,-6.190095,7.838262,3.564798,-6.099239,4.078146,-0.957495,-7.069433,5.355142,-9.907204,-5.824963,4.304464,0.359921,0.243364,0.263834,-7.747360,-1.009257,-4.051887,-5.946300,-0.619958,7.964641,2.136818,-8.124317,4.450428,-1.743351,9.494933,-2.414193,4.230252,5.581694,8.848547,-0.276912,-7.855298,-7.026086,-1.041111,9.513623,9.643597,3.243433,-8.106623,9.298979,6.488510,4.363919,-9.061812,0.801006,5.353811,-6.300552,7.225705,8.283236,-0.255789,-5.576070,-3.124195,1.654192,6.911442,-9.972777,-5.596855,3.144644,5.235232,-2.047173,3.394229,1.152289,-5.136209,8.854020,5.434279,-1.672433,-1.599044,-6.925535,-7.825672,-9.692748,-2.671432,7.096708,-0.174022,-5.786406,-7.222180,8.738637,-1.828839,-4.319182,2.460576,2.846838,-4.073138,-0.319362,-9.850899,5.907716,-5.728444,-2.772263,1.837891,8.114375,1.385447,5.330261,-4.705936,3.106295,-8.866207,4.999714,1.977118,-6.169190,-3.810359,-0.862434,4.164698,5.688621,8.439955,2.158324,-8.904508,4.197958,-5.489370,7.882800,6.371139,-6.185626,-6.786540,6.324948,-2.364944,-6.026205,-1.636211,2.419939,-8.284889,0.310427,1.604357,-7.068777,5.140792,3.292862,0.512305,-4.311990,4.978904,-7.399493,3.010329,4.099579,0.415894,-5.778616,-2.460470,1.120069,0.530417,-1.082634,2.807328,-6.192130,-8.278387,2.479613,-3.102500,8.486871,-6.114171,1.389351,9.390921,4.412640,-1.445601,2.881295,9.685460,-8.133746,4.699367,4.524399,8.067696,-2.265736,3.697979,4.782057,2.061497,4.315108,-3.207095,3.359553,0.867987,-5.844555,8.762364,-8.565513,2.714906,6.461331,-2.699852,1.347782,-7.834352,6.472555,2.828181,1.704730,9.923808,-7.575486,6.356245,-3.603580,-9.844318,3.738014,-8.774936,4.915028,-2.682555,-3.214985,0.819961,-0.934548,2.767966,-4.551218,8.591129,-9.548388,-6.439896,-1.049160,-2.008073,3.811271,-0.412376,-3.567547,-4.929566,-4.674400,-0.819219,0.814986,-2.855393,7.529188,-5.202439,2.485178,3.712126,-9.026201,-0.572683,-9.972874,3.483455,-6.319099,-5.290710,-9.437516,-2.879166,1.791191,-5.678203,-7.417503,-2.696959,-9.571180,9.073120,-4.928127,3.987978,0.604606,-9.697071,9.491624,5.924586,3.413138,-7.307918,-5.736528,-6.266320,-2.174910,5.852695,5.339976,-4.406284,-4.593458,2.598195,3.299224,2.941220,2.763304,-6.528012,-4.723354,-0.398119,0.201625,9.809929,8.608453,9.784854,-0.279408,-9.474103,-7.145757,-9.323607,9.118466,-3.487079,-9.643083,9.709511,5.433369,-7.487286,4.865387,4.193120,-6.975948,-5.075752,-0.244201,0.784270,-9.976712,-4.590982,-8.316071,9.872083,8.259543,-1.415874,-8.655644,8.484304,2.661976,0.981047,-0.857890,0.367192,6.575283,-2.144346,0.526484,5.158438,9.846425,9.315328,-6.861778,8.108224,-8.707953,8.541791,1.196044], dtype = "float32")#candidate|4565|(756,)|const|float32
call_4564 = relay.TupleGetItem(func_4403_call(relay.reshape(const_4565.astype('float32'), [756,])), 2)
call_4566 = relay.TupleGetItem(func_4406_call(relay.reshape(const_4565.astype('float32'), [756,])), 2)
uop_4569 = relay.asinh(call_4564.astype('float64')) # shape=(756,)
uop_4571 = relay.asinh(call_4566.astype('float64')) # shape=(756,)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_4573 = func_2467_call()
call_4574 = func_2467_call()
output = relay.Tuple([call_4549,call_4557,var_4558,const_4565,uop_4569,call_4573,])
output2 = relay.Tuple([call_4550,call_4559,var_4558,const_4565,uop_4571,call_4574,])
func_4584 = relay.Function([var_4558,], output)
mod['func_4584'] = func_4584
mod = relay.transform.InferType()(mod)
var_4585 = relay.var("var_4585", dtype = "float64", shape = (462,))#candidate|4585|(462,)|var|float64
output = func_4584(var_4585)
func_4586 = relay.Function([var_4585], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_4609 = relay.TupleGetItem(func_2583_call(), 0)
call_4610 = relay.TupleGetItem(func_2584_call(), 0)
var_4627 = relay.var("var_4627", dtype = "float32", shape = (6, 9, 8))#candidate|4627|(6, 9, 8)|var|float32
bop_4628 = relay.logical_xor(call_4609.astype('int8'), var_4627.astype('int8')) # shape=(6, 9, 8)
bop_4631 = relay.logical_xor(call_4610.astype('int8'), var_4627.astype('int8')) # shape=(6, 9, 8)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_4652 = func_4342_call()
call_4653 = func_4342_call()
func_292_call = mod.get_global_var('func_292')
func_297_call = mutated_mod.get_global_var('func_297')
var_4667 = relay.var("var_4667", dtype = "float64", shape = (990,))#candidate|4667|(990,)|var|float64
call_4666 = relay.TupleGetItem(func_292_call(relay.reshape(var_4667.astype('float64'), [6, 11, 15]), relay.reshape(var_4667.astype('float64'), [6, 11, 15]), relay.reshape(var_4667.astype('float64'), [6, 11, 15]), ), 0)
call_4668 = relay.TupleGetItem(func_297_call(relay.reshape(var_4667.astype('float64'), [6, 11, 15]), relay.reshape(var_4667.astype('float64'), [6, 11, 15]), relay.reshape(var_4667.astype('float64'), [6, 11, 15]), ), 0)
output = relay.Tuple([bop_4628,call_4652,call_4666,var_4667,])
output2 = relay.Tuple([bop_4631,call_4653,call_4668,var_4667,])
func_4677 = relay.Function([var_4627,var_4667,], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
var_4678 = relay.var("var_4678", dtype = "float32", shape = (6, 9, 8))#candidate|4678|(6, 9, 8)|var|float32
var_4679 = relay.var("var_4679", dtype = "float64", shape = (990,))#candidate|4679|(990,)|var|float64
output = func_4677(var_4678,var_4679,)
func_4680 = relay.Function([var_4678,var_4679,], output)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_4720 = func_3204_call()
call_4721 = func_3204_call()
output = relay.Tuple([call_4720,])
output2 = relay.Tuple([call_4721,])
func_4727 = relay.Function([], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
output = func_4727()
func_4728 = relay.Function([], output)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_4734 = func_3204_call()
call_4735 = func_3204_call()
output = relay.Tuple([call_4734,])
output2 = relay.Tuple([call_4735,])
func_4736 = relay.Function([], output)
mod['func_4736'] = func_4736
mod = relay.transform.InferType()(mod)
output = func_4736()
func_4737 = relay.Function([], output)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4736_call = mod.get_global_var('func_4736')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_4818 = relay.TupleGetItem(func_4736_call(), 0)
call_4819 = relay.TupleGetItem(func_4737_call(), 0)
uop_4823 = relay.asin(call_4818.astype('float32')) # shape=(6, 9, 1)
uop_4825 = relay.asin(call_4819.astype('float32')) # shape=(6, 9, 1)
func_4677_call = mod.get_global_var('func_4677')
func_4680_call = mutated_mod.get_global_var('func_4680')
var_4830 = relay.var("var_4830", dtype = "float32", shape = (432,))#candidate|4830|(432,)|var|float32
var_4831 = relay.var("var_4831", dtype = "float64", shape = (990,))#candidate|4831|(990,)|var|float64
call_4829 = relay.TupleGetItem(func_4677_call(relay.reshape(var_4830.astype('float32'), [6, 9, 8]), relay.reshape(var_4831.astype('float64'), [990,]), ), 2)
call_4832 = relay.TupleGetItem(func_4680_call(relay.reshape(var_4830.astype('float32'), [6, 9, 8]), relay.reshape(var_4831.astype('float64'), [990,]), ), 2)
const_4847 = relay.const([9.766953,-4.710772,8.005456,-1.665840,-6.313892,6.346439,-1.570860,1.311435,5.904357,-1.770214,0.466986,-5.947691,-8.993594,-6.344086,4.916182,6.154120,6.919152,-7.823586,-6.707275,4.947750,9.664492,8.227466,-0.403676,-0.818324,1.013551,8.161635,6.403699,-7.734980,4.938437,6.363569,-9.498582,7.194906,-6.771487,-9.790000,1.108927,-1.120059,7.528369,-4.924098,-8.255452,6.863075,-3.342550,8.449702,-9.307800,0.358025,-9.247399,7.491792,5.375861,-4.989350,-7.160880,3.577450,-5.635065,-0.371132,2.338432,8.457355,8.195696,1.520737,8.233990,-6.522687,-2.130228,-3.022421,-7.083056,-2.769614,-7.540524,-4.571952,9.049270,-8.978903,1.043728,1.932059,-8.534276,-7.280413,0.436289,2.864062,-6.818059,7.603204,8.162450,-3.773389,2.840171,5.621051,6.229236,-8.102942,1.851378,4.624233,7.767806,-8.810428,9.453802,9.107371,-9.428506,-0.279352,-8.633219,-0.871857,4.696380,-2.290113,4.180687,-9.962925,9.946602,7.303363,-0.611462,4.021453,-2.254355,0.771999,-5.624909,-0.758022,3.426226,-2.188800,-6.411938,2.051172,7.734914,-9.991029,6.565374,0.699718,3.923893,-3.502170,1.474699,0.129152,0.867186,-1.424686,-6.726082,-0.616947,1.132836,5.137398,3.735347,7.227403,-7.865586,3.796876,-8.055024,-1.588050,-3.266089,6.226766,-6.659636,8.978428,5.755000,-2.040305,-4.540600,2.490864,9.115174,-1.735073,9.997712,2.005686,5.188211,-8.421330,7.667033,-5.491100,1.594799,-2.136790,-5.273576,6.701493,4.612310,5.189075,-4.968177,9.577355,-5.879806,9.909310,0.784169,0.847885,1.698460,-0.290318,9.691039,-7.177387,6.282203,-6.847267,-5.566445,7.124728,0.411929,-6.870208,-2.736446,3.140987,6.571534,-1.555073,7.004625,6.005035,9.389227,-5.248749,-1.153881,1.094186,1.146590,-0.707533,7.585426,8.480726,-5.018497,5.908886,8.272296,8.856256,2.581578,8.309491,-3.826405,5.001215,-2.617179,-3.754422,5.458748,-9.359867,4.868892,-5.943409,0.646681,-9.657664,4.263573,-6.922655,-8.933456,8.091288,4.743629,0.424251,-9.022274,-8.309873,-4.198248,3.159564,-0.306828,-8.417209,-8.870733,1.815519,-4.823889,-1.479275,6.492932,-2.486654,-9.020179,1.293345,-1.531901,6.007064,5.812200,5.818441,-8.178755,4.298874,7.825162,4.681333,0.636041,0.539820,-1.235569,5.873641,-9.022283,3.992605,-4.503823,-5.021755,4.261741,9.368911,7.276996,-5.196381,1.284656,8.765352,4.921165,9.357153,5.712048,-2.021061,-6.439664,9.708340,1.761174,3.319867,8.605690,-3.236992,-0.855942,2.652541,6.904997,5.961720,-5.341405,3.947584,8.031050,-8.130531,5.178336,-2.429279,-4.868160,-6.098495,6.685179,2.084792,2.878446,0.421414,5.419142,-3.348577,3.730125,-0.987625,-2.960899,3.679906,-0.843030,-1.762040,4.017735,2.850590,-0.653867,4.661002,0.220135,-0.771626,7.098622,-5.645404,-0.133034,3.386341,5.212037,2.132329,2.961035,1.790016,-5.580156,2.380844,8.503188,-6.305595,-7.433606,9.738032,-2.555447,-3.882149,2.455160,9.430652,8.688278,1.490830,-1.718361,-8.199817,-9.633856,4.818368,2.146032,-5.262035,5.610723,-7.917765,-8.170240,0.931909,0.549665,-9.707242,4.403422,9.547040,-8.487508,4.865766,0.612641,-0.183738,9.168728,9.906568,-2.990986,2.864723,-8.142450,5.973151,3.420592,5.391588,7.576648,-4.700122,3.517792,2.594794,-8.450321,-8.100945,8.023994,5.604471,-0.554599,3.132390,-4.585892,-5.072667,0.925173,-4.312567,5.855416,5.375495,8.398441,8.589708,5.170267,8.487788,0.763958,-3.715228,-0.292364,0.791787,-7.509085,-6.995002,-4.851399,2.103783,-9.340827,-7.377740,1.182639,-0.727129,9.932688,-0.216113,6.354407,4.159935,0.499643,9.038084,7.349630,5.791384,8.692353,1.628741,-5.451596,2.146779,-3.273281,-5.643888,-7.912148,-6.887595,-8.474513,-0.034769,-4.041884,-5.102507,6.795460,-8.548855,1.411578,-0.663405,5.004210,-2.200697,-9.976455,-5.411584,0.560891,5.747149,-4.965429,-1.347159,-6.277233,-6.476356,-3.760038,-0.538954,-2.591408,-8.650904,-4.615483,-0.841442,-7.937576,-8.632069,5.448338,4.466213,9.953004,-8.566720,5.925961,9.468159,1.854487,-4.899368,-3.452811,-9.819495,3.420247,-0.193720,1.269989,6.873718,2.923759,1.680266,1.294469,-2.583747,4.289464,-0.728448,0.731228,-6.990969,0.884727,-0.371802,8.295589,-7.846003,5.731251,7.547069,7.589539,0.909236,-8.583484,4.085919,0.996876,-8.305021,-4.705698,1.590537,-4.114430,5.473973,9.408245,-2.858587,-3.029693,3.888958,5.341525,-9.167302,-6.034454,-6.928229,-6.437643,-4.563829,3.925936,-3.973425,0.268418,2.204718,0.341097,7.856557,-1.324561,-2.579748,-4.911138,-3.478495,-6.336493,-9.713889,-8.109002,2.529511,0.239706,8.616454,-0.887156,-2.988663,6.837572,-0.693621,-1.088399,8.018706,4.000941,5.168462,-7.831958,6.578476,3.717394,7.189914,-7.708953,-5.165103,-3.652873,-9.543836,-3.480268,-2.224252,-7.284435,-1.193104,-4.628209,8.800277,3.878839,1.575245,9.704118,-4.394497,-6.238042,-6.054237,-3.412246,-1.140662,-4.147926,-8.116548,-1.905940,2.023392,4.704568,4.382631,4.846987,5.953406,-0.621114,-5.946027,5.611294,-2.819961,-2.222544,8.437292,9.611993,0.513425,-6.130939,-2.783201,-1.730484,-4.285218,-5.467814,5.946075,-0.677660,-7.840222,2.294268,-3.351500,-3.087303,3.892995,-9.685084,5.930567,-8.629937,3.971726,-6.826088,2.862586,8.281830,-8.778586,-2.034096,-4.681772,-0.362464,0.676795,9.646754,7.518798,-9.223926,7.498736,9.364084,-3.273653,9.195654,-9.348227,-9.503562,6.479634,5.744393,1.554923,3.227173,6.813096,-8.435025,-4.535017,-1.456278,8.269191,-1.463979,1.390370,-1.815938,0.437749,-8.988062,1.326159,-2.892806,-8.286136,4.351090,5.055238,3.942732,-8.816249,6.465888,-9.361520,-5.769782,-5.656601,-9.172760,-4.316710,2.271811,-8.504769,-9.955491,-5.306685,-3.526058,-0.781307,-6.007914,3.582546,-7.903345,-7.407714,-7.970250,-1.254420,-4.284707,8.592725,-9.665920,7.004251,8.649423,5.298765,-1.712132,-1.687143,7.835256,-3.847761,-0.666295,1.806189,1.491500,-9.046386,-8.597308,4.954701,0.422221,0.499372,-9.497660,-1.825009,4.216267,9.386565,8.967490,-6.464374,1.664424,2.824615,-0.864323,-1.289877,-2.515432,4.217711,4.246788,3.120294,8.636418,3.740949,-4.402933,-1.625378,8.586063,3.744338,9.188546,4.774586,-1.556669,4.257761,-2.848097,-5.973307,-0.808130,1.226196,-2.412878,1.954892,-7.220043,-9.554498,-2.695093,-7.940526,-6.222198,-8.917195,5.511809,-1.343606,-9.396177,9.997538,-1.447827,3.418188,3.623418,-9.125947,-2.262232,-0.422620,-2.278279,3.391090,7.535700,7.491555,7.461457,8.411984,7.127776,-9.174983,3.435336,-7.538696,6.453398,6.717347,3.709717,9.800657,1.178138,-0.535862,-4.221453,-1.351041,2.023272,2.423463,4.125849,2.724443,5.558040,1.431220,7.970533,-9.983067,8.063276,-4.616618,6.293071,-4.633883,5.666579,1.635788,-0.130210,1.697954,4.003529,-2.131293,3.592149,6.168009,0.306445,-5.545106,7.104155,-9.927342,-2.188714,7.611966,-0.477927,-2.820715,-9.570842,8.112386,4.521164,-9.412472,2.764858,5.997614,-5.996337,6.326397,7.603776,3.421002,-5.415181,-4.573526,-2.882310,5.814881,6.320612,-4.895467,5.881290,1.687099,-8.761343,2.762732,-8.122319,-6.750272,8.883816,4.685623,5.202424,9.436140,-2.207223,-6.334147,3.740131,5.171089,0.391106,-4.368894,4.132307,0.921040,2.956177,7.427556,-4.543778,2.031219,-4.135707,-6.429321,5.359588,8.250115,2.264588,-3.636202,2.074941,-5.352672,2.832828,2.062363,-2.437655,-7.881835,9.037561,0.692732,6.420858,-9.170313,6.167036,-5.740110,-0.900019,-2.993476,0.583112,6.170631,-0.161742,-5.344398,-1.226099,-3.649767,-4.899587,0.145265,2.137297,4.815302,1.019471,-7.301101,7.582256,2.947887,-7.911134,8.155231,-9.612137,3.841663,-2.153088,-6.463036,6.121636,0.207591,4.973436,-2.782338,-5.649670,5.559780,1.510110,-0.766568,-4.437704,-2.163003,-5.601923,6.790729,-1.934421,7.183888,-4.006498,-6.358100,0.645823,5.905597,-6.970010,5.421513,-3.892416,-1.255673,-6.597581,-1.478872,-6.656329,8.586240,-3.417178,1.531693,1.982248,-4.620424,-7.331223,-3.856310,-9.242488,-9.973973,5.024302,2.516245,-6.577799,0.360035,7.567652,-1.566686,-9.045785,-7.156503,-0.046204,-5.871108,-7.192891,9.599997,2.370033,-2.210049,6.540772,-8.921478,-2.191021,-4.516994,9.453849,8.670394,3.471828,-3.389467,-7.283977,6.685483,-7.327430,-6.763613,-5.456175,9.029813,2.950792,4.310637,-8.789971,7.906791,-8.764197,9.855742,1.431354,-3.469629,-8.397165,6.691191,1.355452,1.985756,-6.678250,-1.215908,4.393474,-9.397474,-8.771757,-2.810050,9.753581,5.713128,7.364712,1.704394,-7.690447,-9.670131,-6.414013,1.466829,-2.944623,6.629128,-1.066751,7.879130,9.628254,7.375009,4.564756,-1.349000,5.136992,-6.664110,-2.390000,-6.686046,1.638763,-1.056666,-4.495184,3.708098,-2.367246,7.068128,4.513930,6.901101,-1.171667,-7.406989,-2.759852,-5.711823,-5.811174,-4.648872,-0.127855,4.651362,1.550022,1.432573,6.173846,-3.147536,7.179279,0.655449,-1.026241,7.139009,3.814652,8.031481,-4.905813,5.117495,-4.663683,3.893098,-5.417490,2.406902,-3.583014,1.937964,7.917015,-9.310718,0.567936,1.373735,-4.436089,-2.441741,-7.032667,6.032684,6.009404,-4.289726,-0.754034,-8.198877,-0.511491,2.238197,-2.801753,0.208170,-3.214909,-5.222336,1.398940,-1.863361,-9.981043,1.664686,-6.084282,3.981083,4.888141,1.094653,-9.958477,0.386537,0.847011,5.208878,4.430259,-0.255488,-5.534579,-6.874076,-7.830949,0.291709,1.828147,-8.570423,1.170369,-2.986277,9.524934,8.837696,6.473465,-2.730386,0.480534,5.161772,-8.060624,-7.527458,-5.711513,-3.881613,7.354594,-3.602947,-7.697742,-6.873142,-3.674351,5.260185,2.724394,5.122014,7.635598,4.320135,-0.194058,5.266103,-1.173265,2.611830,-0.006453,-8.272411,-9.687458,2.174985,9.592796,-8.666899,-7.192094,6.910539,-7.749533,-4.304425,-8.627858,-3.255532,-0.759851,-3.013700,-9.412883,-1.174544,3.023186,-0.714016,2.347706,0.197140,-6.421622,-4.993830,2.930770,-7.056953,4.040630,4.469971], dtype = "float64")#candidate|4847|(990,)|const|float64
bop_4848 = relay.logical_xor(var_4831.astype('uint16'), relay.reshape(const_4847.astype('uint16'), relay.shape_of(var_4831))) # shape=(990,)
func_78_call = mod.get_global_var('func_78')
func_82_call = mutated_mod.get_global_var('func_82')
const_4860 = relay.const([[6,6,9,-4,2,-1,-2,9,-5,8,-7,7,1,-2,5,7,-9,1,-2,5,2,4,-6,3,-2,-1,-7,-2,-6,1,4,3,10,3,8,7,-5,3,8,3,8,6,-4,-6,-5,-2,-4,4,8,7,5,-7,6,4,-7,-1,2,-2,8,-7,-4,3,3,-3,5,8,-3,2,4,-3,-4,-7,6,3,7,8,-8,-1,-8,-3,-4,5,-5,-1,5,-1,10,5,9,-1,-1,-10,-2,1,5,5,2,-1,6,-5,7,10,-6,-5],[-7,9,-7,-9,2,-9,2,10,-3,-3,2,10,4,9,8,-4,2,5,4,8,-3,-3,-10,-1,4,2,1,-7,3,-6,-10,8,-4,1,6,-2,-8,-4,-9,-1,-8,-9,6,-6,4,2,10,7,-4,2,10,10,10,-6,10,2,-2,-9,-8,1,-6,-7,-4,2,3,-9,9,-10,-5,10,4,5,6,6,8,-8,-2,-5,-9,6,3,4,-5,5,-1,-7,-8,2,-6,-7,-8,3,10,-6,-2,-1,-8,-9,1,4,8,6,-4,9],[1,-6,-1,-10,-4,-9,1,-5,7,3,-5,-8,10,10,-6,-6,7,7,1,-10,-6,-5,-9,5,2,3,-8,-4,-7,-4,3,10,-4,-7,-4,1,-6,-6,-7,-2,-10,-10,-6,-9,-7,5,-5,-10,-2,3,4,4,2,-6,1,-10,2,1,2,-10,5,1,-10,6,-9,-6,4,-4,1,5,-7,5,5,-7,8,-8,-3,-10,9,3,-8,3,-10,-8,9,5,2,-7,-7,-4,2,-7,-2,-5,6,10,-8,6,2,-1,9,10,5,8],[4,7,5,-10,-1,-9,7,-1,-4,5,10,8,-1,1,-6,7,1,5,-8,-5,3,7,3,5,4,-3,5,2,-10,1,3,7,4,2,-8,-4,-2,3,1,-3,9,7,-9,-1,5,-6,-1,-2,4,8,2,-5,5,10,-7,10,10,1,10,10,-3,2,9,9,-10,5,1,6,9,9,-10,-3,8,-2,7,4,8,6,-1,-9,5,5,-6,-9,9,-3,9,-1,-2,-7,-5,-3,-8,10,-5,2,-5,-6,-8,-7,5,5,-8,2],[7,10,-10,-5,-1,10,4,-8,9,-3,8,-1,10,6,-10,7,-8,1,10,-6,1,-1,-8,-7,2,3,7,-3,-9,4,-7,-1,8,3,-8,-10,-7,-5,9,-1,9,1,7,5,-2,9,2,6,-10,7,-2,-8,-8,-3,4,-8,-9,2,-4,3,-6,7,2,7,2,3,-4,2,-3,-1,-2,-1,9,-8,10,8,6,5,9,-2,-7,7,-6,-3,6,8,-2,-1,-2,-3,10,2,7,6,9,-8,-4,10,-6,9,-7,-3,5,2]], dtype = "uint32")#candidate|4860|(5, 104)|const|uint32
call_4859 = relay.TupleGetItem(func_78_call(relay.reshape(const_4860.astype('uint32'), [5, 13, 8]), relay.reshape(const_4860.astype('uint32'), [5, 13, 8]), ), 0)
call_4861 = relay.TupleGetItem(func_82_call(relay.reshape(const_4860.astype('uint32'), [5, 13, 8]), relay.reshape(const_4860.astype('uint32'), [5, 13, 8]), ), 0)
func_4360_call = mod.get_global_var('func_4360')
func_4363_call = mutated_mod.get_global_var('func_4363')
const_4869 = relay.const([-8.819203,2.575387,1.744664,7.140490,5.591524,-8.969769,9.665635,-9.545594,-0.165580,-9.472419,7.143636,7.823004,-9.267913,1.766940,9.009364,9.955798,-7.499183,6.766547,-8.716491,2.418418,-3.196034,-6.042012,3.939453,-3.288500,-5.686225,-9.823080,4.115555,2.070654,-4.494906,9.734641,-9.039403,-3.326627,1.509232,-7.432523,-7.977163,2.075860,3.926071,-9.080883,-4.930425,-5.859857,-8.551664,-3.704430,-4.009978,4.493248,8.275473,4.253125,-7.038667,-2.767387,7.194712,3.891195,8.522620,-5.633627,-7.969610,1.732433,-5.806141,-0.062392,-1.228152,-9.222719,-9.752225,-2.186715,-2.422294,3.824882,8.912996,0.169034,-1.188176,-7.223399,1.027201,5.801165,3.117148,6.821142,-5.311399,-9.048825,-9.076823,-6.036174,8.219106,-1.291002,-9.220294,-5.839131,-4.396909,-5.078573,-7.687069,-0.537590,1.008125,4.494654,-6.920275,-3.967738,-7.591116,-5.097002,5.404665,-4.740692,0.688635,7.718338,-6.561552,0.619942,7.582071,-9.180730,-0.409754,8.284456,-6.009345,-9.640357,3.448179,9.276394,-6.993461,2.198684,-9.981277,-0.252469,-1.812524,7.412839,1.219509,4.023504,-2.515857,-9.239655,-6.821361,9.515359,-8.161088,-0.603152,-9.848037,-3.562072,7.428440,6.238050,3.093037,8.315952,9.431439,-9.809924,0.188943,4.871307,6.279952,-3.523592,0.327994,-2.809770,7.721604,-2.887190,4.061029,-2.669478,-5.113442,-3.243888,2.570207,7.423342,5.690882,5.471119,-7.168735,-4.554907,-2.280259,2.677509,-4.475381,-7.340627,-4.718320,-2.197768,4.325464,-9.581077,-9.768931,5.923282,-6.265285,-3.296106,-1.844695,-8.814368,-9.144927,1.411399,3.707940,-5.327579,-0.778435,-4.172332,2.512563,-2.347189,9.863505,-8.008808,-5.282253,-6.372374,7.843489,-6.776771,-2.505492,-7.782274,9.581757,-0.870694,-5.167330,4.063886,3.791718,-5.430263,-5.193807,6.262154,8.060894,0.389032,1.870906,6.835365,-3.513439,-8.661732,-0.253412,9.437280,-1.536680,6.709034,-9.113956,-0.774879,-8.728012,4.113924,1.379369,-5.396652,-3.817723,-9.995725,9.829413,-7.012935,7.937493,6.719549,9.438060,-1.711974,-4.145248,1.990918,-9.285240,-5.016889,-4.607403,8.885054,-2.914103,-4.577830,0.092708,-0.867147,-5.349651,-7.419055,7.815830,-4.944401,-3.982872,8.288791,-6.462758,5.165257,-0.399330,2.578232,2.613119,-6.547128,-4.565356,7.525294,-5.454948,6.481686,-2.538458,-2.179066,0.398747,9.508797,2.495877,-6.821086,0.694062,-1.897416,3.716406,-1.383604,-3.531411,-2.870443,9.628099,-9.221750,0.744686,9.763215,0.463766,2.697205,-1.103261,-8.803199,9.165624,0.818771,8.097443,-8.116207,4.108321,8.152974,-9.857517,-5.224663,4.558269,5.186020,-9.901630,7.295342,-3.147505,-8.521657,7.583456,3.972273,9.137633,9.566802,-6.552970,9.207562,-7.949053,-9.189457,-2.131470,-2.814382,0.724846,-9.501747,-8.799551,-7.455365,9.700792,7.248046,5.042000,1.611186,2.802844,3.326423,5.453957,0.131531,-2.183715,-3.649273,1.651634,-1.705492,-8.538195,-3.667952,-3.279269,9.689992,-7.667708,-5.208548,3.145664,-6.301642,-9.816506,7.222330,5.692690,1.121185,-1.065536,-4.056760,0.732426,-6.835639,-4.531077,-6.051219,9.131917,-6.906315,9.917766,-3.742493,-4.129332,2.802976,-8.901539,-1.434739,-0.662906,0.091280,6.568719,-3.150705,2.608312,-3.172009,8.725484,-5.881205,6.428751,-3.384846,-1.171895,6.719138,-1.915641,2.647805,0.263051,-0.016177,-1.804285,-9.570412,8.327200,-2.785293,-2.426153,-5.558831,4.758820,-8.700680,7.567669,1.848456,8.343285,5.231414,-3.571319,5.940388,-0.874305,5.241832,5.683381,3.339653,-2.029125,2.712612,-0.524978,-8.487644,5.466138,-7.357306,-7.776463,-3.092428,2.290930,1.193375,-6.870506,0.580824,-8.395678,8.595348,9.463752,-2.613059,-1.808255,-0.539557,-6.344751,5.871325,8.289552,-0.859477,0.754412,-9.747329,-9.733293,-0.999896,-8.265226,-9.293620,-3.630686,-6.553598,-5.679448,8.635779,9.589442,2.552510,7.623673,2.852397,6.204683,-3.148620,-8.392653,6.582031,-4.117651,1.782107,7.185679,7.835940,-6.372651,2.206921,-5.553428,8.958047,-1.198246,9.129330,5.154726,9.560553,2.886018,-8.059377,-5.899515,-1.495207,2.728813,8.169286,3.317177,9.839158,-2.085317,-6.709505,1.587556,-4.362084,6.297306,0.278708,-9.952578,9.829540,-2.811850,3.507160,5.061156,9.266196,-0.863527,7.303018,1.340798,7.935929,-7.471839,9.008210,4.016538,5.807672,0.346320,-6.417960,3.181650,7.431829,9.919810,-4.397440,9.520997,7.242916,-9.473002,5.368299,6.492882,-7.074795,6.402227,-8.950404,1.909505,9.637657,-1.654419,6.157087,9.268757,-2.142676,2.284715,5.859275,-2.565669,-8.737172,9.112722,4.486144,-4.970856,-6.135189,1.270713,1.812939,1.963999,5.257541,-5.947780,5.836492,-0.858203,-3.216932,9.154593,-5.837681,-3.310305,-0.771704,-0.726784,5.718811,3.327813,-7.167995,-0.909226,-4.847756,-0.346491,4.453808,-4.236070,-2.560361,-7.730180,-9.509725,-4.247190,-4.186064,-9.908383,4.188592,-1.767850,2.590065,-7.045257,-8.770778,0.193136,-6.129501,-0.480935,-9.038168,1.531399,5.191528,8.437228,1.838775,-3.449279,9.970923,-0.458932,-1.534460,6.323696,6.733214,8.504365,-3.125192,-1.831938,1.940531,-5.609827,1.868568,-0.763842,-4.617700,-2.710026,-8.737395,0.008416,3.279116,-7.778718,-0.568628,-3.795792,6.439734,5.106880,-4.556087,7.294984,-6.433355,-0.801720,2.980406,7.183993,-8.238979,2.000883,-5.397258,-5.007717,-1.939799,8.679395,-4.789035,-2.681904,-0.040867,1.916904,1.893094,-7.425313,6.128857,2.958372,1.791354,-6.182246,2.827982,-8.945019,-7.946051,8.010027,4.241891,0.718677,-7.008885,-7.350797,7.124368,-3.478671,-2.061806,-1.755476,4.099036,-9.409882,-5.348536,-9.224127,-8.845286,-7.236191,-9.559799,4.846207,-4.732450,9.238730,3.046026,0.965855,-8.516868,7.097932,-9.600497,-7.154635,-2.002192,3.726554,5.264052,-1.681716,-7.458594,-9.997354,-1.334209,4.757761,-2.541996,-6.775071,-9.453938,-9.310160,8.686120,2.611974,3.045211,1.101360,-2.420569,6.908196,-4.179641,4.530200,-8.515747,5.249059,8.343141,4.709771,-8.421976,3.899855,-9.093497,1.683856,-2.996232,9.214903,-7.696159,5.835346,4.206758,-3.828848,-7.998678,8.988264,2.305791,0.299692,9.587166,-8.392410,-5.704374,-5.034675,8.038044,-7.510446,-2.359184,7.427373,-2.248967,5.737941,1.967093,-8.165508,2.252056,-5.042151,-0.232848,3.138947,5.116446,9.026377,-1.828235,-8.464594,7.263513,6.136184,-1.420565,-3.274936,6.751672,8.554776,8.144034,-2.847459,0.014454,2.980238,-8.243701,9.007453,-6.647078,-6.072312,-4.525486,-9.822141,5.562343,8.122958,9.836918,7.568855,6.700529,7.020368,-3.890584,5.780725,3.116601,3.564822,9.776544,2.262817,-9.167048,-5.175925,-7.242814,-8.921662,-8.488649,8.279830,-0.300864,-2.848223,3.331074,-9.184134,5.040880,9.170638,9.463472,7.804634,1.248393,-1.038872,-6.424164,-7.819199,-0.037966,-4.577291,-0.111857,-9.649354,-3.447450,-1.457094,-5.601343,9.731733,-7.987955,-0.581496,-4.079757,4.308228,-9.712724,5.099745,-5.891551,2.913543,-9.570483,-3.376310,-2.252331,1.951042,2.746558,-5.983809,8.250195,-0.272522,3.967368,5.714278,-9.292004,5.937970,-9.802361,3.326370,1.520266,2.534130,-1.559235,-7.327030,-2.637552,-6.408506,-2.769634,-5.943851,-5.078837,9.885486,8.530801,0.749551,7.378317,6.034797,3.155301,6.847905,3.785224,5.091372,-5.040653,-1.354653,7.569889,-1.075104,-1.931988,0.667222,0.922183,-3.907850,9.900707,-1.007719,-4.712842,2.292626,-9.467971,-5.480874,9.587929,-3.342140,-0.788205,8.672025,6.642437,1.718029,-4.846365,-7.289371,5.209432,-2.854329,0.525674,-9.659850,-2.946221,4.968933,-1.113059,5.891934,3.058365,3.175696,-9.778834,-8.894308,-6.684384,8.954986,-7.214838,3.096292,-6.870424,7.450085,-6.124377,-6.814497,3.900429,-9.911006,7.156507,2.150824,1.930583,-0.312715,4.653174,0.737521,-6.563774,-6.337500,-5.121582,0.017308,-3.910219,-5.813840,-3.550430,8.589523,4.534236,7.089913,6.571998,9.581639,2.243126,9.163771,-2.470489,-3.815971,7.930939,-7.107042,-5.621812,0.871192,-5.084535,-1.102337,-2.499791,-6.583728,6.828512,-0.854473,-3.045210,9.469185,-4.180995,2.388615,2.208817,2.921973,-6.705790,-6.738306,8.685165,1.422424,-3.002751,-6.806890,-4.696363,-2.710915,-9.899671,-3.843011,-1.071511,-1.844691,-6.659224,-2.967067,-7.944780,9.681701,0.155399,9.548848,1.211683,-5.765410,-9.235081,-6.074743,0.302818,-5.791697,0.391289,-3.497366,-3.697738,-3.722187,-8.311256,-2.737998,4.087043,-4.614547,-7.321773,9.877828,-6.364085,7.808779,1.342616,8.072830,-9.311467,-2.813351,2.660487,6.529000,-7.147343,-9.701799,-9.583220,9.275004,-9.182405,-6.876255,2.521118,-0.339463,8.065845,8.941526,5.228274,4.999794,-2.067629,-6.472668,4.980421,-2.756126,0.938933,-3.999965,7.999509,4.128454,5.715846,-0.684541,-4.119661,0.402535,-9.829024,-1.452471,3.855741,8.721531,4.362633,5.272015,-5.597715,-6.609356,4.393300,3.698394,-2.491522,-9.747507,8.831024,1.455297,-8.096029,5.776979,8.786314,-7.874557,-5.209148,-9.924035,1.783317,-8.702646,5.947104,-4.327960,3.092326,-8.103044,-4.983860,-7.299143,9.709455,6.052317,-5.950568,0.992338,-5.376406,-5.691232,2.335148,2.112129,9.686436,-8.676877,-4.051696,7.592581,5.256941,-8.021514,-3.411803,3.579768,-0.593461,4.947200,9.634202,-8.658093,0.555899,-6.279954,8.765125,8.542851,4.449686,-6.689919,-9.609470,-3.368634,7.514128,-2.599488,3.033396,3.129341,-5.881237,-1.729353,9.373937,-2.777230,6.519666], dtype = "float32")#candidate|4869|(936,)|const|float32
call_4868 = relay.TupleGetItem(func_4360_call(relay.reshape(const_4869.astype('float32'), [8, 9, 13])), 0)
call_4870 = relay.TupleGetItem(func_4363_call(relay.reshape(const_4869.astype('float32'), [8, 9, 13])), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4872 = relay.TupleGetItem(func_4160_call(), 1)
call_4873 = relay.TupleGetItem(func_4161_call(), 1)
func_315_call = mod.get_global_var('func_315')
func_318_call = mutated_mod.get_global_var('func_318')
var_4877 = relay.var("var_4877", dtype = "float64", shape = (462,))#candidate|4877|(462,)|var|float64
call_4876 = func_315_call(relay.reshape(var_4877.astype('float64'), [3, 14, 11]), relay.reshape(var_4877.astype('float64'), [3, 14, 11]), )
call_4878 = func_315_call(relay.reshape(var_4877.astype('float64'), [3, 14, 11]), relay.reshape(var_4877.astype('float64'), [3, 14, 11]), )
bop_4885 = relay.right_shift(uop_4823.astype('int32'), var_4877.astype('int32')) # shape=(6, 9, 462)
bop_4888 = relay.right_shift(uop_4825.astype('int32'), var_4877.astype('int32')) # shape=(6, 9, 462)
bop_4891 = relay.bitwise_xor(uop_4823.astype('uint8'), const_4847.astype('uint8')) # shape=(6, 9, 990)
bop_4894 = relay.bitwise_xor(uop_4825.astype('uint8'), const_4847.astype('uint8')) # shape=(6, 9, 990)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_4899 = func_3204_call()
call_4900 = func_3204_call()
bop_4901 = relay.floor_divide(bop_4891.astype('float32'), uop_4823.astype('float32')) # shape=(6, 9, 990)
bop_4904 = relay.floor_divide(bop_4894.astype('float32'), uop_4825.astype('float32')) # shape=(6, 9, 990)
func_4584_call = mod.get_global_var('func_4584')
func_4586_call = mutated_mod.get_global_var('func_4586')
call_4905 = relay.TupleGetItem(func_4584_call(relay.reshape(var_4877.astype('float64'), [462,])), 0)
call_4906 = relay.TupleGetItem(func_4586_call(relay.reshape(var_4877.astype('float64'), [462,])), 0)
func_862_call = mod.get_global_var('func_862')
func_866_call = mutated_mod.get_global_var('func_866')
call_4907 = relay.TupleGetItem(func_862_call(relay.reshape(call_4905.astype('float64'), [1, 14, 11]), relay.reshape(var_4877.astype('float64'), [3, 14, 11]), ), 1)
call_4908 = relay.TupleGetItem(func_866_call(relay.reshape(call_4905.astype('float64'), [1, 14, 11]), relay.reshape(var_4877.astype('float64'), [3, 14, 11]), ), 1)
output = relay.Tuple([call_4829,var_4830,bop_4848,call_4859,const_4860,call_4868,const_4869,call_4872,call_4876,bop_4885,call_4899,bop_4901,call_4905,call_4907,])
output2 = relay.Tuple([call_4832,var_4830,bop_4848,call_4861,const_4860,call_4870,const_4869,call_4873,call_4878,bop_4888,call_4900,bop_4904,call_4906,call_4908,])
func_4910 = relay.Function([var_4830,var_4831,var_4877,], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4910_call = mutated_mod.get_global_var('func_4910')
var_4912 = relay.var("var_4912", dtype = "float32", shape = (432,))#candidate|4912|(432,)|var|float32
var_4913 = relay.var("var_4913", dtype = "float64", shape = (990,))#candidate|4913|(990,)|var|float64
var_4914 = relay.var("var_4914", dtype = "float64", shape = (462,))#candidate|4914|(462,)|var|float64
call_4911 = func_4910_call(var_4912,var_4913,var_4914,)
output = call_4911
func_4915 = relay.Function([var_4912,var_4913,var_4914,], output)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4936 = relay.var("var_4936", dtype = "float32", shape = (4, 16, 7))#candidate|4936|(4, 16, 7)|var|float32
uop_4937 = relay.sigmoid(var_4936.astype('float32')) # shape=(4, 16, 7)
func_3732_call = mod.get_global_var('func_3732')
func_3733_call = mutated_mod.get_global_var('func_3733')
call_4941 = relay.TupleGetItem(func_3732_call(), 0)
call_4942 = relay.TupleGetItem(func_3733_call(), 0)
uop_4944 = relay.log(uop_4937.astype('float32')) # shape=(4, 16, 7)
func_3431_call = mod.get_global_var('func_3431')
func_3433_call = mutated_mod.get_global_var('func_3433')
call_4956 = relay.TupleGetItem(func_3431_call(), 0)
call_4957 = relay.TupleGetItem(func_3433_call(), 0)
output = relay.Tuple([call_4941,uop_4944,call_4956,])
output2 = relay.Tuple([call_4942,uop_4944,call_4957,])
func_4961 = relay.Function([var_4936,], output)
mod['func_4961'] = func_4961
mod = relay.transform.InferType()(mod)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4962 = relay.var("var_4962", dtype = "float32", shape = (4, 16, 7))#candidate|4962|(4, 16, 7)|var|float32
func_4961_call = mutated_mod.get_global_var('func_4961')
call_4963 = func_4961_call(var_4962)
output = call_4963
func_4964 = relay.Function([var_4962], output)
mutated_mod['func_4964'] = func_4964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4972 = relay.TupleGetItem(func_3765_call(), 0)
call_4973 = relay.TupleGetItem(func_3766_call(), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4998 = relay.TupleGetItem(func_4160_call(), 0)
call_4999 = relay.TupleGetItem(func_4161_call(), 0)
func_1160_call = mod.get_global_var('func_1160')
func_1166_call = mutated_mod.get_global_var('func_1166')
const_5012 = relay.const([[2.102071],[-9.268994],[3.038064],[-4.337406],[3.816853],[-0.026005],[7.195814],[-3.789173],[-2.779425],[3.708516],[-6.190601],[-3.610402],[-1.434374],[-4.066805],[-9.676206],[2.985860],[-9.583461],[2.522057],[9.197654],[-6.676160],[-2.989992],[6.577219],[9.876171],[0.824457],[2.053774],[2.613304],[-0.501905],[-9.051942],[1.634351],[3.923232],[2.282876],[-1.720153],[-3.713654],[3.162028],[0.270842],[5.434688],[-8.032197],[-0.811629],[-3.955860],[8.509406],[-8.368560],[5.120202],[-2.551682],[-1.342201],[6.223346],[1.696173],[-7.409934],[-9.783808],[2.839187],[-5.358807],[7.212697],[-8.690554],[9.379702],[6.713885],[1.894167],[0.846229],[6.803199],[-7.708895],[-3.982558],[2.254577],[9.660338],[-3.981363],[-7.103935],[-3.372353],[-8.182574],[9.327790],[-2.979554],[7.454112],[-1.335015],[-9.628822],[5.981749],[6.066749],[-7.304364],[-4.683028],[-3.798057],[-0.590400],[-3.804655],[-1.048348],[0.223381],[-6.100034],[5.038908],[6.916609],[-4.949101],[4.421744],[0.384523],[-8.859913],[-7.613760],[8.485133],[7.105058],[7.397816],[-6.188836],[1.379375],[6.924220],[9.383915],[4.107839],[-0.618115],[4.596009],[-8.368860],[8.899284],[-1.301025],[8.148504],[1.998106],[3.619461],[5.522611],[6.730331],[-2.249049],[-1.179861],[-8.765180],[4.290420],[6.991061],[-4.385029],[-9.581091],[3.191590],[3.895161],[-7.186092],[-2.767704],[-2.019960],[7.478590],[-5.623565],[-1.010208],[-5.382462],[3.827031],[7.587116],[-0.682536],[-3.875002],[7.626411],[3.487207],[-7.844074],[-6.328163],[0.287886],[-1.977131],[8.644417],[-4.753387],[-3.629725],[6.891271],[-2.541720],[5.301557],[-9.461334],[6.447733],[-9.993258],[-9.579418],[-9.714588],[7.728265],[1.375776],[-7.025614],[-5.425086],[-4.955339],[1.463431],[1.093413],[8.933447],[4.856675],[-5.847365],[-0.639677],[5.945152],[5.406426],[9.503910],[3.918682],[9.430468],[-9.420312],[-6.685412],[-3.299119],[6.570137],[-8.808010],[3.701222],[-7.292891],[-5.744296],[-0.915002],[8.976208],[-9.906529],[-1.452299],[-3.983211],[9.787284],[-6.416737],[-4.358761],[5.419102],[7.124289],[0.265467],[-4.001979],[-8.766646],[6.839939],[9.383260],[-2.915985],[-8.631471],[-2.579173],[-6.788187],[-3.199407],[-4.425785],[-2.820341],[6.463829],[3.317274],[1.582649],[-5.031021],[-9.972662],[8.592561],[-1.887583],[5.491564],[-1.134475],[7.257684],[9.785192],[2.114445],[-2.220042],[-9.370537],[-6.089049],[5.978853],[5.656842],[-8.338778],[-1.073313],[-7.138772],[-2.183638],[9.299503],[-6.132271],[-4.251533],[-2.225021],[-6.228458],[5.683081],[5.151237],[2.803994],[-3.820356],[-0.736897],[7.780998],[-4.357648],[-5.680880],[-0.889515],[8.068488],[-7.540324],[7.707883],[-9.881088],[-4.329432],[2.867622],[-9.221371],[-7.479608],[7.396909],[-9.840984],[6.427844],[3.403595],[-9.248105],[1.378157],[-5.054152],[0.399415],[-0.264637],[-0.311127],[0.766168],[7.802567],[3.281770],[-0.229067],[6.003227],[3.836828],[-9.657860],[-5.840787],[-1.264250],[6.249445],[1.460304],[-6.009936],[-6.501896],[-8.357563],[1.945255],[0.214167],[6.102258],[-1.733252],[0.515602],[-4.874807],[-7.957149],[3.284753],[3.529165],[-2.748492],[-0.092736],[8.618247],[-3.075538],[4.260463],[3.582101],[3.820858],[1.872741],[9.438844],[3.486920],[4.999911],[-5.128561],[2.712999],[-7.396476],[-6.762365],[-8.564863],[9.746468],[-5.396592],[4.316703],[-0.681852],[3.913891],[-0.775395],[0.193119],[9.910645],[-3.935847],[-9.277811],[-0.277503],[0.058527],[6.550740],[-7.707296],[-3.427478],[7.684475],[7.045273],[-1.992465],[-1.883428],[-2.193693],[-5.475507],[9.793770],[-7.659751],[1.490874],[2.517941],[-8.237952],[-7.389462],[-1.464099],[9.574187],[1.942149],[1.049964],[-4.416733],[-8.684952],[7.037766],[3.509638],[9.318605],[-5.219761],[3.581940],[4.736719],[8.714839],[2.522748],[-6.319979],[-2.136234],[0.048439],[-3.334249],[8.277810],[3.195086],[-6.126740],[-8.365538],[7.615041],[3.151808],[1.162337],[1.015728],[-7.350864],[2.778410],[3.662703],[-5.085599],[8.427702],[-0.733847],[-7.023991],[8.301285],[7.168047],[1.141026],[6.964424],[5.401614],[-6.148425],[0.243497],[9.070075],[-7.664074],[0.469542],[6.620383],[-0.310864],[4.686046],[-9.102743],[1.766021],[-1.543026],[-6.615171],[5.130150],[7.440694],[7.855422],[5.983864],[-5.787096],[-6.490095],[4.627538],[6.428121],[-8.678971],[-8.407489],[-9.232144],[-2.576410],[6.629554],[-7.441049],[0.146320],[7.672627],[-5.693353],[6.126889],[-3.506653],[3.067265],[7.622944],[-9.700315],[4.505333],[2.682359],[-8.120497],[-8.999649],[6.472410],[-0.972993],[-3.031154],[-5.139877],[9.362299],[8.138189],[2.393494],[-0.156560],[5.418814],[-8.854661],[2.851758],[-0.971764],[-0.272295],[-1.579988],[0.423328],[-6.220620],[-8.286589],[4.301032],[7.179559],[-5.988666],[-7.228054],[-3.919798],[-6.941490],[5.072357],[6.740241],[-4.821033],[-6.137649],[7.203685],[-2.811520],[2.216245],[-9.056312],[6.871911],[-8.735413],[-6.038325],[-6.873161],[0.528177],[-2.728653],[-3.081512],[-2.843833],[-2.239569],[3.955878],[-7.646997],[0.408171],[1.666803],[6.285826],[2.592231],[-6.039428],[-7.892183],[-5.948314],[-7.361212],[1.527141],[0.753817],[6.340757],[-7.862648],[2.466870],[7.183255],[8.553807],[-6.266882],[4.290898],[2.633729],[-5.496951],[9.469895],[0.531035],[-2.905427],[-2.626516],[-5.663669],[-1.292738],[3.687347],[-8.991456],[9.465895],[-2.858309],[-1.421156],[-2.776908],[5.522026],[-7.960623],[-2.520608],[0.347549],[4.210158],[-8.681351],[-8.100629],[-5.155440],[-6.986438],[-2.030074],[9.773679],[-4.696981],[-1.037752],[9.915874],[-8.531982],[9.144795],[-2.030156],[-4.834479],[4.707948],[-5.108306],[-8.053262],[-6.800847],[9.577832],[-1.623473],[0.857528],[7.784679],[5.332467],[7.025171],[-5.902962],[-3.297041],[-5.909431],[-5.280292],[-0.525738],[0.731995],[0.627718],[-9.125092],[-7.469365],[-1.198353],[-0.134385],[-2.761373],[-4.591426],[-7.612086],[8.351471],[9.734499],[-2.450841],[-1.486904],[-9.785456],[6.315565],[-3.897404],[-4.198113],[-3.845181],[5.108058],[3.331230],[-0.602128],[-5.452857],[6.545960],[-4.825297],[-9.131318],[8.317224],[-7.853462],[-3.185609],[-4.962809],[0.345081],[0.324169],[-5.687029],[6.244097],[-4.100368],[-8.956170],[7.501886],[9.583810],[4.564275],[-3.730469],[-8.732905],[7.400282],[-3.640257],[-5.513046],[-1.338699],[0.881163],[-2.581276],[3.969429],[-6.430741],[-2.231853],[-6.181221],[-9.343643],[7.717649],[1.469631],[-9.858458],[1.752063],[1.797851],[-6.531055],[-2.701748],[-7.274757],[8.541431],[-1.769491],[-6.417405],[9.138695],[3.319370],[6.364462],[-1.981440],[2.025947],[-9.648346],[-0.089487],[-7.159563],[1.393938],[-9.360596],[9.984604],[-4.178917],[5.607002],[-2.911692],[-1.799763],[-1.287649],[0.736011],[8.988785],[9.715130],[0.740399],[0.387876],[4.576633],[-2.109915],[1.552549],[6.382098],[-0.813154],[-2.214354],[-5.820024],[-2.989920],[-2.339914],[7.337996],[-9.167311],[-2.659213],[-4.463075],[2.443391],[-2.292945],[0.234347],[-9.027901],[0.939463],[1.643270],[3.324139],[6.570680],[7.615418],[-0.640286],[-6.690370],[-1.532611],[8.306551],[6.290939],[-8.151112],[1.383409],[2.108429],[-7.353573],[8.821988],[-9.511317],[7.801629],[-0.270879],[6.878568],[-9.943892],[9.716976],[7.906274],[3.827545],[-6.332538],[-5.364995],[-4.535719],[1.505488],[3.833427],[5.236037],[1.754618],[-5.031093],[6.690826],[0.389801],[5.527863],[-2.901695],[7.465600],[-7.338697],[2.754931],[-5.536592],[-6.691426],[3.687033],[3.682610],[-5.717361],[3.043065],[2.146977],[-5.516095],[7.968154],[3.519775],[2.804834],[0.656884],[-0.730142],[-7.178642],[0.805522],[1.810087],[0.802706],[5.310138],[-4.729999],[3.080689],[9.486953],[8.162185],[0.358042],[-5.319982],[8.991140],[7.459271],[-5.610627],[-8.529755],[-2.636323],[4.136282],[3.083996],[4.051341],[-8.081700],[3.943655],[-9.975417],[9.235071],[-0.494317],[-5.033271],[2.166352],[-1.675104],[-7.661012],[3.109469],[-1.147528],[2.654020],[-9.267334],[9.570678],[4.246512],[-7.868481],[2.075259],[6.010619],[-9.182782],[5.434942],[1.695696],[-1.210289],[-8.350276],[9.792186],[8.093019],[-2.998825],[6.581661],[-4.959444],[-8.213223],[3.560036],[-4.528835],[-1.779854],[5.006389],[1.384759],[-8.539844],[-3.833688],[-6.199926],[-8.905712],[3.630248],[2.532972],[5.047445],[1.904330],[-9.426482],[-8.622131],[5.463485],[-1.445060],[-0.771755],[9.951596],[-6.797068],[9.655998],[1.206902],[-9.307945],[2.511334],[-3.632775],[6.741988],[4.594608],[9.349261],[2.345812],[-3.345115],[7.443258],[4.264178],[4.049791],[-0.435352],[6.491325],[-1.282337],[0.686057],[3.612987],[1.343335],[7.915793],[5.828833],[-7.014979],[1.863976],[9.361422],[6.159751],[-7.719958],[0.682040],[-5.074502],[1.124320],[8.740297],[-1.041935],[-7.816111],[0.968065],[4.766772],[-2.687456],[0.449096],[4.814953],[-2.014219],[0.414320],[9.460265],[5.015907],[9.783069],[1.795578],[8.901101],[-4.384023],[-3.236948],[-7.084556],[9.088333],[-3.147000],[1.533304],[1.870665],[-6.594769],[-7.058613],[2.644038],[2.558497],[-5.475999],[-7.827478],[0.288590],[5.153431],[6.412288],[-4.015438],[-2.776282],[-4.453987],[-4.226108],[5.575045],[0.334867],[-1.455051],[2.247951],[-4.488963],[4.421575],[-6.841627],[-7.965226],[9.166178],[-9.549263],[-4.684551],[0.531736],[8.109781],[-7.672288],[1.786994],[-4.879876],[-4.537077],[0.553018],[-7.172340],[4.192403],[9.125427],[-7.412818],[-5.108661],[-9.272129],[-7.784959],[-6.287891],[-3.279941],[3.383078],[-2.436164],[4.740169],[3.569994],[-1.576389],[6.590793],[-9.689548],[-4.439680],[-3.731874],[-0.246122],[6.854857],[6.545255],[5.151530],[6.929559],[1.519897],[5.139538],[7.150853],[-5.196765],[8.580216],[2.185385],[8.144859],[5.623912],[-4.986856],[3.768944],[1.894012],[1.923765],[-6.517781],[-4.015685],[-8.770183],[8.986991],[-5.150356],[6.065072],[-2.415684],[-3.074937],[7.600729],[0.879473],[5.764303],[-9.019308],[3.467060],[-8.188061],[-8.582687],[8.144385],[1.451838],[-8.691065],[3.490746],[6.368842],[-5.502937],[-8.208819],[-7.001951],[-5.348774],[-4.766879],[-2.915340],[-6.869600],[0.797233],[-2.298899],[-7.852261],[5.883533],[1.645659],[5.614828],[-9.290612],[4.700511],[-8.419045],[-0.336332],[0.849874],[-6.896097],[-2.402735],[2.393136],[-5.471054],[-6.967951],[3.439456],[0.863629],[7.174321],[-0.865101],[3.906372],[-7.822402],[-0.103008],[4.878019],[9.666796],[0.426044],[-3.962645],[-9.338560],[-9.116742],[7.497670],[7.055855],[-1.277902],[-9.871182],[-1.322397],[-1.179895],[-8.629574],[-6.699329],[-6.113123],[6.364115],[-1.043236],[4.326517],[2.372269],[9.044505],[1.963596],[4.433290],[-4.950579],[-0.900719],[-3.386397],[-4.369851],[-4.277835],[1.878834],[5.879558],[4.394378],[-8.223911],[5.379762],[8.579774],[4.793843],[7.094812],[-5.336935],[-3.027074],[4.144804],[-6.194490],[-5.097449],[8.087158],[4.814530],[0.176186],[-0.285458],[-9.976306],[-3.763183],[-0.764933],[7.458271],[9.455542],[-1.423668],[6.453724],[7.189699],[7.032454],[-0.150615],[-7.839530],[-5.427606],[-9.009650],[9.198896],[-2.194952],[-4.305894],[9.332316],[2.458584],[-5.962631],[5.349218],[3.420851],[-5.245486],[-3.073875],[5.934318],[8.357841],[5.028591],[-8.549515],[1.834888],[7.152325],[-6.109536],[-6.387537],[-7.298351],[-8.090125],[-9.695663],[3.026024],[-5.378184],[6.572799],[3.975920],[-2.585805],[4.606975],[7.199316],[7.841124],[-3.650090],[-0.984530],[9.159214],[2.180961],[9.149704],[5.405104],[-8.109523],[-7.195360],[9.739477],[-4.770020],[-7.074323],[-8.345063],[-3.316896],[-2.157161],[-0.036482],[9.309488],[-4.699964],[-2.559605],[0.339653],[2.100313],[6.800122],[-9.966084],[-4.027814],[4.680591],[2.805262],[8.909498],[-8.314890],[-9.198881],[4.130271],[-5.361315],[-6.445702],[7.920849],[0.820549],[-8.404682],[4.606270],[1.089028],[-7.388336],[-2.299676],[-3.834040],[-4.297125],[-4.389389],[8.899596],[1.535843],[9.483107],[-3.752670],[-9.592688],[-8.444914],[1.788785],[7.482081],[-2.967593],[-2.847413],[7.883219],[3.540639],[9.461153],[-2.039100],[3.464349],[9.550319],[8.588315],[-9.683829],[-0.218202],[-5.593926],[3.027862],[-6.646063],[-6.140718],[-8.694612],[-5.537858],[-4.776701],[2.075249],[-3.507421],[7.664791],[-3.971797],[4.748861],[-7.411148],[-0.441020],[3.838380],[7.664906],[7.515538],[-5.541606],[-0.439192],[8.506006],[8.070215],[6.268033],[6.195848],[0.843149],[2.017489],[-3.105146],[8.092820],[-0.663362],[-3.500678],[-8.055394],[5.564975],[1.295144],[-2.280183],[-1.780105],[-0.995170],[5.668803],[1.075267],[9.975834],[2.732710],[-5.445373],[-5.077881],[-3.354518],[-9.122361],[8.436862],[8.208587],[2.281662],[1.523131],[3.281675],[-2.994865],[-5.054613],[1.128826],[6.631837],[-3.471352],[-7.208813],[1.111897],[2.729153],[9.983752],[-1.571228],[-9.813201],[5.805391],[4.745014],[-1.677167],[7.804477],[3.934041],[4.571237],[7.124137],[6.545129],[2.557190],[4.791074],[-3.674241],[0.647253],[-3.526924],[6.752331],[-3.076443],[-0.760691],[-5.724820],[-4.613487],[9.247663],[-1.931917],[-1.733832],[-9.083382],[1.890135],[-9.636961],[-4.943015],[-5.545989],[-9.406305],[-3.262827],[-8.918760],[1.081922],[8.983619],[-7.098642],[-1.772807],[-5.629552],[0.733667],[-1.343413],[-2.490811],[9.248768],[-0.841149],[-6.660877],[2.500116],[5.689561],[-1.806436],[2.924323],[-6.965031],[-0.154321],[-8.040845],[7.113347],[7.911340],[-2.718050],[-3.353966],[-8.247568],[-0.206066],[-3.590733],[9.873045],[5.527676],[4.362282],[1.685823],[-4.718185],[3.040539],[3.873716],[-8.805679],[-4.254007],[-6.190787],[9.824911],[-6.974115],[7.097687],[-3.092365],[-7.678605],[0.819605],[5.717040],[0.805485],[6.673084],[9.895691],[3.962551],[-4.379755],[-4.058411],[-8.079810],[-2.051669],[-4.772205],[-1.480549],[-8.365604],[-1.798643],[9.233256],[4.450711],[-7.346984],[8.189969],[-4.251032],[-2.122048],[-9.265597],[-5.642629],[0.219926],[3.355225],[3.147506],[-0.548015],[7.968870],[0.911259],[6.225558],[-1.557189],[-5.890356],[4.562614],[-5.508465],[-8.827041],[7.502223],[-5.484761],[-4.975903],[3.197951],[6.120334],[-5.797785],[-4.445542],[6.044226],[0.041876],[8.956869],[-3.239711],[2.061100],[-3.592744],[2.700315],[8.126080],[4.249462],[5.061254],[-8.445127],[-4.880592],[0.193534],[-9.300290],[-5.325779],[-9.917724],[-9.758887],[-0.314531],[-7.854773],[7.415514],[-5.287998],[-6.221104],[-2.306738],[1.665280],[2.858764],[-5.020580],[9.794803],[0.915291],[-9.470943],[-1.941792],[-6.341727],[-9.390343],[-9.339620],[1.293366],[3.724666],[-5.107904],[-8.823286],[-3.759999],[-3.653585],[-8.827074],[-1.088669],[7.227454],[5.182279],[-4.947580],[-1.442708],[-5.086271],[0.077342],[2.110916],[-8.459426],[7.225901],[6.017129],[2.523614],[-2.686960],[-9.874682],[2.494941],[-0.371204],[5.464848],[3.555696],[-1.567834],[9.677688],[-3.818476],[-7.168123],[-1.850998],[9.771785],[-1.276894],[5.144531],[-1.835610],[6.625005],[-9.438028],[2.597651],[-1.883499],[1.033268],[4.257116],[-9.468816],[-1.501322],[-8.187078],[9.257321],[-7.115928],[-4.044898],[-3.586199],[-7.549912],[-6.337381],[-4.191422],[-0.762464],[-2.928964],[5.824757],[6.313177],[-0.789079],[6.523977],[7.747661],[-6.303278],[8.654381],[-8.578526],[-6.602694],[6.761869],[7.717922],[-2.928548],[7.460330],[4.861052],[5.633282],[2.198924],[-2.346180],[9.451379],[-9.576151],[0.677822],[-9.126925],[8.641726],[3.972692],[1.376966],[1.874348],[6.107158],[7.612380],[-6.573204],[-6.271764],[-2.606587],[7.581701],[-5.966565],[-5.913503],[4.257872],[6.238267],[-9.776603],[-8.643740],[1.156363],[9.202043],[5.578820],[0.510134],[1.515982],[-7.087875],[7.995515],[7.899270],[-5.500015],[-8.753901],[-2.539606],[-6.451310],[6.591164],[-6.672214],[2.799800],[0.360028],[2.310707],[-8.958807],[8.129057],[9.895713],[-7.493959],[7.139767],[-3.333768],[2.439314],[7.999017],[-5.298840],[-6.839671],[2.177907],[-0.068804],[-9.413512],[5.949350],[-3.411559],[-8.738030],[6.370794],[-5.492732],[9.201382],[6.856085],[3.350830],[6.982409],[-3.667584],[-8.478841],[1.753441],[-5.313658],[-8.462716],[-4.421935],[-2.129832],[-2.614150],[-7.315821],[4.921274],[7.341580],[-2.246017],[-0.464708],[7.709054],[-9.946846],[-2.569238],[4.099486],[8.020260],[-5.310466],[-9.507975],[-6.095281],[6.271899],[-4.884644],[9.532424],[-5.829012],[-9.432601],[-4.351253],[-7.774129],[-4.980979],[-3.360580],[6.453956],[-6.773127],[9.988831],[0.452392],[6.426427],[-7.438513],[-4.629947],[-1.032525],[-8.138380],[-5.433670],[3.438132],[-0.027229],[4.359628],[-4.219550],[-4.405672],[-3.809970],[-1.788907],[-6.805275],[-4.755856],[5.390047],[3.903359],[8.929829],[3.959979],[-4.111733],[8.917341],[-4.794793],[-9.775599],[1.785981],[-7.204544],[6.707025],[-9.794119],[-2.397793],[-7.858289],[9.343883],[-9.164905],[-4.069253],[-0.808778],[9.530669],[-0.217454],[0.434207],[-5.496036],[-1.389137],[-4.687395],[2.682290],[0.862312],[6.881989],[-8.251775],[-4.376494],[7.896161],[-7.994522],[-3.502127],[9.123332],[-4.252601],[-7.418141],[2.145922],[6.531747],[-6.238154],[-1.856942],[2.028905],[3.787597],[-6.456920],[-7.081206],[-4.903121],[-1.570768],[-8.492644],[9.811809],[0.897261],[-3.245994],[3.220147],[-1.516510],[-9.332676],[1.075646],[2.097336],[-8.353462],[9.912773],[-1.883869],[-6.509310],[-3.662628],[5.915754],[-4.214105],[4.895325],[7.349964],[6.058496],[2.420410],[-8.813325],[9.006507],[2.924950],[6.214670],[-2.666615],[5.912970],[0.499268],[7.498445],[-9.081171],[-4.825847],[-3.554183],[-8.945677],[-9.528616],[3.450410],[3.875169],[7.326126],[-8.323683],[-5.820990],[9.077821],[3.962553],[7.620470],[2.623991],[-9.665300],[6.548956],[-8.649287],[-6.844546],[-6.561279],[8.077688],[-5.522538],[-8.196131],[3.942982],[-6.153362],[-3.622399],[5.632874],[-7.672585],[8.747467],[5.134239],[7.129598],[-7.503912],[-2.024746],[-0.775460],[4.935690],[9.818033],[-6.582756],[5.507720],[0.510066],[-1.595711],[6.528642],[4.049247],[-4.917884],[4.258060],[0.416148],[-7.892457],[-7.109395],[9.772798],[6.458763],[9.065635],[4.086447],[4.676325],[9.378067],[-9.142942],[3.226041],[-0.405229],[-6.743802],[2.087698],[3.988885],[-5.834897],[4.642235],[1.960445],[9.078575],[7.694188],[7.689767],[-5.583731],[4.712618],[-4.806187],[-1.841853],[-4.503933],[1.721844],[-3.993222],[-3.900585],[-6.394133],[-6.804677],[-1.002853],[0.786371],[8.594782],[1.142483],[0.478573],[-1.995067],[6.751074],[-2.583170],[-5.309946],[-5.446476],[-9.712545],[9.318872],[8.224258],[1.709461],[0.504820],[8.418855],[4.953696],[-0.806503],[4.900672],[2.629216],[-6.324848],[-8.745052],[-7.207708],[8.851694],[-3.364502],[4.413341],[6.217268],[4.184757],[-3.824409],[-1.712313],[2.410532],[0.799934],[-8.960806],[0.246949],[7.462400],[-8.010693],[-3.290403],[1.856128],[0.737117],[2.834936],[0.972748],[6.007554],[9.435303],[6.222814],[1.206723],[-1.581457],[6.402684],[9.930592],[8.845592],[-1.786975],[-4.856523],[-4.993734],[2.795319],[9.263529],[-0.429642],[-8.920316],[6.493450],[-9.079420],[4.842107],[-9.588060],[4.221523],[5.321041],[-1.333748],[-0.126831],[0.574252],[1.035125],[4.211161],[9.142443],[0.993388],[-8.532962],[6.439578],[8.416139],[-1.267102],[-5.189412],[-4.393522],[-4.302063],[6.028256],[-5.254350],[-0.768571],[8.998389],[6.677406],[9.839080],[-0.905067],[-7.331445],[7.887232],[6.252845],[3.288499],[2.702680],[-2.205793],[0.286393],[-7.415748],[-3.549382],[5.807219],[-4.573086],[0.274373],[-3.414836],[-0.101369],[8.497214],[-1.855278],[-9.858068],[-7.761423],[-8.241546],[8.960459],[5.212893],[3.586428],[-0.222351],[-0.439041],[1.716953],[9.756393],[-1.984381],[9.102399],[-0.275635],[-9.194625],[-0.898856],[9.604691],[9.136552],[-2.706453],[4.733221],[4.793538],[7.988650],[-5.859421],[6.812008],[-4.931515],[-9.572194],[-0.987202],[-3.605700],[6.672068],[5.133445],[8.431970],[-8.309825],[-8.079016],[-8.179854],[-5.544889],[-5.157708],[2.044324],[-3.461378],[7.872137],[-4.159390],[7.182902],[-1.819990],[0.232701],[9.854394],[0.086908],[2.541178],[7.576160],[2.245082],[4.861144],[-5.078360],[2.922707],[3.378085],[9.511425],[-8.312447],[7.716310],[-5.365229],[-4.203608],[-5.288073],[-8.147952],[-2.981878],[-2.839981],[-3.362352],[-5.708279],[-5.907829],[8.124614],[7.659719],[8.218053],[7.234517],[-6.606283],[-5.930008],[0.237982],[-4.248617],[8.708053],[8.318552],[0.807908],[2.815496],[5.449175],[8.229688],[6.877927],[2.079892],[-7.119130],[4.507066],[-3.889613],[-7.376238],[4.265255],[-7.019760],[-0.243208],[-1.466250],[-3.173221],[8.754163],[9.993720],[7.790219],[-7.917339],[-7.081302],[-9.498670],[-9.614167],[-1.633886],[4.357846],[3.020062],[-1.321596],[-5.687286],[3.334824],[0.560515],[-1.889397],[4.316219],[2.690405],[-4.108972],[-2.750921],[5.495382],[-0.392523],[-8.379598],[1.459536],[-7.456937],[8.626057],[-2.199511],[-5.610705],[8.946154],[9.557446],[7.712399],[-2.452877],[4.624871],[-9.147422],[-3.052447],[-4.451292],[1.182888],[-5.766040],[-4.135379],[8.156175],[-7.613975],[-5.699391],[-6.379074],[7.911401],[-2.639464],[-5.152480],[-8.598746],[-3.562851],[8.269439],[6.587461],[1.129339],[9.739824],[-7.182551],[7.013304],[3.230376],[7.725799],[7.696839],[9.552813],[5.182755],[8.818183],[9.621338],[0.519799],[-0.123864],[-1.445091],[-4.399281],[-6.759186],[3.956871],[1.505624],[8.611839],[-0.541841],[3.193101],[-7.683901],[1.573968],[-0.974497],[-0.613567],[-6.307494],[2.366404],[2.128723],[-6.872887],[4.370948],[2.723960],[-9.243358],[-3.433357],[-1.549365],[-9.874247],[-5.405674],[-3.753878],[1.616421],[-6.639447],[-8.582750],[6.617386],[3.360086],[3.540226],[1.828493],[-4.452308],[-9.428117],[-5.468707],[-0.289100],[-8.930023],[-0.801926],[-9.794256],[-5.772502],[2.234051],[-2.299260],[8.695363],[-2.768906],[-5.026754],[-4.338675],[-2.660128],[8.038740],[-5.916869],[-3.269456],[-6.142011],[8.838312],[2.735132],[-8.002485],[2.187797],[-0.859685],[-7.067584],[-3.972278],[-5.004463],[-8.132997],[-3.696596],[-8.220999],[-2.466520],[1.701064]], dtype = "float64")#candidate|5012|(1859, 1)|const|float64
const_5013 = relay.const([-1,-6,4,3,-8,-2,7,-2,7,10,10,2,3,3,5,5,-3,-7,3,-7,-8,-6,9,1,-1,-7,-9,8,-10,7,-7,3,5,8,-1,-9,-4,-6,-4,-10,10,-7,-8,-10,-8,-4,-9,-6,7,2,-9,-1,-9,-7,-5,-7,4,-3,-1,-3,-8,-3,-3,1,4,-10,-6,5,7,8,9,-7,1,9,3,-10,-8,9,-5,1,-4,2,3,5,1,4,-1,7,2,-6,6,9,-3,5,-9,-7,1,-4,7,6,5,10,-2,-9,-4,3,-5,4,-9,5,-7,-2,10,-3,-7,8,1,-9,-6,-1,-5,10,5,7,-5,3,-5,-2,-10,3,-8,-1,-9,-3,-1,5,1,8,-9,1,7,10,10,6,-9,-9,-10,-7,3,5,-6,-9,-4,-4,-2,-1,-10,3,-2,-2,-8,9,5,8,-6,9,-3,-9,-7,-2,-8,2,-3,-10,1,-6,-6,8,1,-7,-1,8,-9,1,-10,7,-7,9,-1,4,4,-3,-7,2,-9,2,7,3,7,-4,-6,-8,-9,2,-6,5,8,-10,1,10,3,1,2,-8,8,7,-2,-9,-1,-4,-9,9,-7,10,-3,9,4,5,-3,-4,-4,7,9,-8,8,9,3,3,-1,9,5,9,9,5,7,-5,2,7,-7,-4,-1,2,-3,3,10,-7,3,2,9,5,7,-5,1,2,8,-3,-9,2,-10,7,10,-4,-9,4,6,-4,-9,-5,10,10,-3,7,-8,7,6,9,-7,9,-1,-6,2,1,-8,4,4,-7,7,-1,5,-6,-2,-6,-9,-7,-8,7,-2,5,-5,-9,3,5,10,-6,6,5,-8,-8,-8,7,-9,-7,-5,2,-9,8,-5,-3,-1,-1,2,4,8,5,7,1,-8,-9,-9,2,2,-2,-3,3,6,10,1,-8,-3,7,6,-8,-6,-7,7,-5,-9,5,3,-5,-1,9,-6,3,1,-1,-7,1,-5,-8,-6,-1,-1,-7,4,5,7,-9,2,-6,9,-10,-8,10,9,-6,-1,2,-3,8,2,-5,9,4,6,-6,9,3,-7,1,-1,3,-5,-3,5,-8,-7,6,8,9,9,-1,3,6,-5,8,-5,7,7,8,5,8,8,-10,-5,-10,-6,5,-5,9,-7,7,9,9,5,-9,3,2,3,-6,3,-5,9,10,10,-3,8,8,-5,5,-4,10,-4,-9,-6,-7,2,-10,1,-4,-1,7,-8,-9,2,1,-10,5,7,3,8,-4,2,-1,6,-6,-2,-8,-8,1,3,-7,-7,9,4,-7,1,-5,5,-8,1,10,4,4,-5,3,-9,2,-5,-9,-4,3,8,-8,2,-6,7,6,3,7,-5,7,3,9,2,-8,6,2,9,-7], dtype = "uint32")#candidate|5013|(520,)|const|uint32
var_5014 = relay.var("var_5014", dtype = "uint16", shape = (216,))#candidate|5014|(216,)|var|uint16
call_5011 = relay.TupleGetItem(func_1160_call(relay.reshape(const_5012.astype('float64'), [13, 13, 11]), relay.reshape(call_4972.astype('float64'), [990,]), relay.reshape(const_5013.astype('uint32'), [520,]), relay.reshape(var_5014.astype('uint16'), [216,]), ), 2)
call_5015 = relay.TupleGetItem(func_1166_call(relay.reshape(const_5012.astype('float64'), [13, 13, 11]), relay.reshape(call_4972.astype('float64'), [990,]), relay.reshape(const_5013.astype('uint32'), [520,]), relay.reshape(var_5014.astype('uint16'), [216,]), ), 2)
func_4910_call = mod.get_global_var('func_4910')
func_4915_call = mutated_mod.get_global_var('func_4915')
const_5017 = relay.const([-2.938357,-9.404942,7.768355,3.444809,-9.585756,-6.148158,4.399303,-0.979612,-6.843402,5.052772,-0.410011,-7.893197,1.816305,-4.196254,5.289308,-2.895995,-6.096492,3.991362,6.412772,-6.554941,-9.045925,8.904279,-4.070167,8.769785,-8.571789,2.309455,-7.386636,-2.957467,-1.320204,5.702651,7.847374,-5.463283,-0.956527,3.184217,-1.660079,3.008086,-8.771363,-7.982270,-8.819299,8.189107,1.357971,7.334129,-2.075657,5.836696,-0.966234,9.066820,-0.382608,8.512110,6.944257,-1.785057,6.174059,-3.024503,-4.828230,-3.998127,0.947810,-0.535114,6.678095,-5.462925,1.908286,-9.447713,-9.610972,4.475603,9.740959,2.943150,-6.482751,-7.100170,5.474089,3.466066,-1.770722,-9.360697,-1.863723,-2.533663,-8.014437,5.373245,-2.484444,-8.441632,3.390601,3.113779,-3.222396,-0.987673,-5.518371,-8.784108,4.859848,1.514515,-6.983027,0.372655,-9.419224,-7.588106,8.488352,-6.005017,0.210523,-7.730125,3.140573,-1.350337,6.344150,-8.930540,8.575448,0.401392,-1.279580,-5.228281,3.692272,5.578347,4.017410,-6.573855,-8.400095,-5.930012,7.403913,-2.586795,-2.902386,1.353719,6.201185,5.889693,-9.384623,-1.835878,-0.922345,2.954925,-0.176446,4.800306,-2.407457,-7.864237,9.939950,2.253239,-2.954604,7.506525,-4.986778,-6.381486,-9.289977,-0.155863,-1.671917,7.441055,-9.834083,-4.248997,-6.206970,-4.753921,-0.117864,3.134868,-0.755768,-7.331676,-3.404852,9.056813,-2.250813,9.012583,-2.964259,-9.176952,-3.153037,8.284172,-0.495523,8.441739,2.801235,-0.970432,5.376363,8.554107,-8.924255,-4.064022,1.955533,7.747841,7.108106,-3.800072,-9.149866,-0.538679,2.609979,8.289045,-7.996867,-1.796112,8.799249,7.357659,-2.985162,-6.283889,-2.941597,3.125170,-7.776331,-2.531903,4.306137,9.943981,3.209163,-5.150215,9.897207,-9.100289,0.038901,-7.747225,1.429017,3.228285,-6.187766,-5.594965,-1.025461,5.045779,-9.889242,-0.806647,-0.573457,-2.632317,1.995549,-0.573064,-1.490668,-6.399459,8.371819,-8.655105,-4.740379,-1.957689,8.419624,-8.535495,0.751328,5.454009,2.078022,2.854733,6.295705,3.258150,6.573032,-4.651320,-1.986539,4.290139,1.972437,9.989715,7.565632,-7.833939,-8.065183,-5.562105,-8.388732,-0.639371,8.323024,-5.394847,1.303985,9.306942,0.181011,-4.752011,9.410511,-1.715123,-9.101541,-6.095533,1.432276,-2.353556,0.420672,0.194200,-1.227529,2.578280,-3.578632,7.638462,5.021739,-9.022013,-6.253199,6.218199,-5.778766,-5.130041,2.479616,-2.586737,4.067293,-9.604354,0.094503,5.428021,3.606631,3.283533,-4.366151,0.111439,2.900546,-7.906724,0.604478,6.664973,0.169246,-0.136792,0.872350,-6.389929,5.936248,8.746319,-5.052401,4.609937,-1.758872,7.188613,7.088798,-0.608979,-2.344631,-5.190662,-7.846422,0.455764,9.115420,-1.866943,-7.715291,5.245757,-4.630578,-3.894905,1.472304,-3.464911,-5.207757,-8.402537,0.289284,5.381365,-6.147056,3.568230,9.626458,-0.417157,-1.854040,7.633562,0.180988,-5.634377,-0.015277,8.565671,-7.709805,3.626784,5.352814,-5.607352,-4.144432,7.778331,4.611375,-4.772876,8.011297,6.454020,4.270444,0.681148,-0.495323,-5.605426,-6.676248,-2.019415,-3.996648,-0.219674,-1.979572,-7.096157,-5.789673,9.734475,-7.913738,-8.981066,-8.895560,7.078813,4.111675,0.086183,-6.243642,-7.553053,5.395267,-8.837856,-6.360710,1.859937,6.595752,6.263999,6.699465,-1.355508,-5.979138,-8.276561,-1.907485,7.773431,-6.264427,9.025344,-1.956960,3.057470,3.000957,7.228105,-3.489070,-1.386824,-0.851518,0.525508,-4.973193,8.666066,7.762325,0.231959,3.597894,1.100614,7.235612,5.015667,-3.541128,1.835100,-2.512992,4.264057,-5.124975,-5.712135,1.609226,-0.238844,7.006788,6.944727,3.909820,8.624164,8.757965,-7.325380,7.102344,-2.625109,8.438117,6.782859,0.401683,-7.075785,-8.985792,-0.811531,6.894661,1.813197,9.990100,8.077963,-8.399221,4.056472,2.122918,-2.479699,4.074749,-8.021766,0.223899,-3.383547,-0.673629,-4.804972,-0.949917,-7.663117,2.874581,-4.275832,-7.992715,-3.778194,-2.230827,-6.156010,6.180105,0.282633,-2.203661,0.399002,8.056546,-5.659723,5.576462,4.459961,0.937256,0.919675,7.255450,4.253801,8.901085,-7.752263,-8.521450,1.227740,-6.227945,-0.104099,-4.384514,-2.484051,-3.008342,1.845358,1.399483,6.149350,-4.345505,0.277708,-2.735837,-1.254311,-5.481029,-1.452703,2.645336,8.216871,-7.874379,-6.150893], dtype = "float32")#candidate|5017|(432,)|const|float32
var_5018 = relay.var("var_5018", dtype = "float64", shape = (462,))#candidate|5018|(462,)|var|float64
call_5016 = relay.TupleGetItem(func_4910_call(relay.reshape(const_5017.astype('float32'), [432,]), relay.reshape(call_4998.astype('float64'), [990,]), relay.reshape(var_5018.astype('float64'), [462,]), ), 9)
call_5019 = relay.TupleGetItem(func_4915_call(relay.reshape(const_5017.astype('float32'), [432,]), relay.reshape(call_4998.astype('float64'), [990,]), relay.reshape(var_5018.astype('float64'), [462,]), ), 9)
func_292_call = mod.get_global_var('func_292')
func_297_call = mutated_mod.get_global_var('func_297')
call_5027 = relay.TupleGetItem(func_292_call(relay.reshape(call_5011.astype('float64'), [6, 11, 15]), relay.reshape(call_5011.astype('float64'), [6, 11, 15]), relay.reshape(call_5011.astype('float64'), [6, 11, 15]), ), 3)
call_5028 = relay.TupleGetItem(func_297_call(relay.reshape(call_5011.astype('float64'), [6, 11, 15]), relay.reshape(call_5011.astype('float64'), [6, 11, 15]), relay.reshape(call_5011.astype('float64'), [6, 11, 15]), ), 3)
output = relay.Tuple([call_4972,call_4998,call_5011,const_5012,const_5013,var_5014,call_5016,const_5017,var_5018,call_5027,])
output2 = relay.Tuple([call_4973,call_4999,call_5015,const_5012,const_5013,var_5014,call_5019,const_5017,var_5018,call_5028,])
func_5037 = relay.Function([var_5014,var_5018,], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
var_5038 = relay.var("var_5038", dtype = "uint16", shape = (216,))#candidate|5038|(216,)|var|uint16
var_5039 = relay.var("var_5039", dtype = "float64", shape = (462,))#candidate|5039|(462,)|var|float64
output = func_5037(var_5038,var_5039,)
func_5040 = relay.Function([var_5038,var_5039,], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_5053 = func_3834_call()
call_5054 = func_3834_call()
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_5058 = relay.TupleGetItem(func_3765_call(), 0)
call_5059 = relay.TupleGetItem(func_3766_call(), 0)
func_4584_call = mod.get_global_var('func_4584')
func_4586_call = mutated_mod.get_global_var('func_4586')
const_5065 = relay.const([9.366280,-0.376010,1.049597,5.884054,0.416553,2.082310,-9.422366,-3.793530,7.687087,4.228660,-9.446694,3.600324,5.206318,-4.161698,-5.342923,0.161426,-3.796163,4.159116,-5.707684,3.558379,-3.564947,9.677728,0.535210,1.073276,-7.789690,-7.312600,0.023799,0.550122,-5.233827,4.750798,-8.601367,9.789790,0.153029,-7.835039,3.285445,6.673411,-5.029786,-6.824266,9.950673,8.855066,-3.773435,-8.532110,2.048555,-5.518669,4.429214,-3.184536,-4.790370,0.329542,-2.070099,6.343183,1.535903,8.048975,0.531788,9.498910,7.784125,-3.884134,0.569178,-0.790690,4.763714,-8.246352,-2.182225,-0.715777,-4.594862,-0.863140,8.499024,-3.654353,1.819772,-6.531217,9.012122,8.276873,-9.340197,-7.397843,-5.986763,-5.467744,4.527675,8.720053,-4.915929,8.079954,0.072050,7.245362,5.628318,1.911866,-8.412806,-5.861771,7.628106,-9.439734,4.532576,1.315123,8.241493,4.514115,7.543435,6.739950,-1.534772,-5.459264,-9.975527,-9.438327,-1.240421,-5.431279,-5.348923,-3.111606,-7.655870,8.153952,-0.844957,-7.690622,4.190062,-2.418923,-5.159075,-7.061304,-1.987730,-4.425322,-3.930341,5.107509,-4.067522,0.978194,-6.077120,-0.179560,1.417344,-3.061340,6.221961,0.981702,9.042137,7.996922,0.033632,-2.463526,-0.031932,2.146293,-6.715850,7.868812,-0.568297,9.942294,3.165986,-5.707442,6.454298,-3.904972,4.301878,7.279735,9.473545,-3.116442,-4.380135,3.422514,4.061133,-0.780569,9.615312,-6.961546,-2.761971,-9.720758,8.890865,-3.479127,9.827121,1.053559,3.602896,2.064032,2.035419,6.731840,6.717228,8.452503,4.157172,-4.515506,7.103001,1.485136,-3.306850,1.567095,-3.051768,-3.507525,-9.713422,-8.773685,9.668218,5.780526,2.240372,-2.370737,5.122158,9.674195,6.404066,1.762711,-6.141751,7.689714,-8.153467,-6.403503,-6.120167,-6.820967,5.543425,-6.227796,9.660838,9.113882,7.565198,4.921485,4.514943,8.845932,-6.494753,-9.273264,8.877270,0.824853,-1.341403,-1.489686,-5.631668,-4.150180,8.500206,-1.565230,-9.468887,1.853349,-0.657495,-1.879086,8.485463,-2.099028,-8.665461,-5.822914,-8.996980,8.618538,-9.860110,-0.677792,-4.950193,-6.795998,7.134437,-1.596774,-1.658369,8.142357,-5.619364,8.618356,-6.926743,6.802721,-1.078866,-0.703029,4.444389,1.600753,-3.421340,0.722893,-8.536236,-8.348889,-8.394444,8.906192,2.967619,7.449296,-6.487026,4.839348,1.096979,2.404211,1.430700,-7.152533,3.865102,-7.145499,5.821412,6.242743,0.195753,-7.344993,-1.816118,-4.334843,-7.497351,-1.834271,-9.345113,9.130571,-3.430470,5.390615,8.883305,1.197097,-0.471422,-2.378033,2.255227,4.092428,2.964436,-1.853745,-0.419568,9.217900,4.046530,3.624623,-5.957262,4.566363,-5.141866,-9.816612,-0.360089,-7.247978,2.292679,1.215006,-4.328121,5.518807,-7.575950,-6.487484,-5.905284,7.350268,3.923266,-4.045520,-9.329297,-2.541985,-4.086723,-5.734741,-1.209415,1.956554,8.337481,-1.302620,-8.677584,4.751832,-3.797128,3.923549,-3.048042,-0.950994,8.423631,9.763699,-7.853940,-2.673064,-2.434749,4.729246,-4.641995,-0.688977,7.695867,5.963733,-2.772153,-3.879301,-1.677865,9.011536,3.423181,-4.841682,-6.276097,-1.377162,-2.039608,-4.176120,5.142777,8.507395,-6.507077,1.992282,6.020632,7.603395,9.362210,-1.104717,8.598465,-9.880737,9.641882,-9.040795,-7.104993,-7.268765,1.963428,5.124520,-0.128607,-5.442715,-7.442555,3.457299,6.613531,2.922584,-8.838645,-1.966609,-7.461639,-8.862896,-4.100221,8.467275,0.104214,5.761894,-3.167067,1.900856,7.116696,-7.183159,7.937531,4.214640,-6.859617,-3.917237,-7.731430,4.034288,1.905491,-3.178329,-9.694806,6.572939,4.102154,-5.261833,4.166610,5.997388,-9.858983,0.397337,0.927724,-8.710654,5.920632,-6.226477,9.872694,-3.563597,-4.524468,-1.229570,9.238534,-8.328080,-3.004641,-6.984952,8.362538,8.294575,3.143678,7.691958,2.126003,2.950739,-4.066912,0.280732,1.877258,2.305645,-1.663147,-3.477158,4.833597,3.762397,2.163953,2.824820,4.402041,-2.634281,3.771124,7.260048,3.734634,-1.499748,-2.511969,-8.291354,7.825627,0.873534,5.264425,4.799011,9.109503,5.155766,0.574944,1.284934,6.086074,1.141092,6.140033,3.466315,4.701569,9.814043,6.398031,5.775772,2.438289,3.453963,-0.128888,5.024608,2.378430,0.084587,9.466206,5.424717,-3.339443,-5.278777,4.792231,2.661169,4.628405,-4.917188,-7.316389,2.319406,1.060746,-2.646557,-0.437910,7.470839,-0.260323,-7.751651,3.259948,-4.776224,-8.925149,2.263640,9.220853,0.462527,5.572766,0.976948,1.823483,8.454843,7.477760,2.447357,4.550070,7.105548,0.260804,-7.412651,2.570756,-6.937269,8.189860,5.205869,-1.819936,1.845954,3.351304,1.303618], dtype = "float64")#candidate|5065|(462,)|const|float64
call_5064 = relay.TupleGetItem(func_4584_call(relay.reshape(const_5065.astype('float64'), [462,])), 2)
call_5066 = relay.TupleGetItem(func_4586_call(relay.reshape(const_5065.astype('float64'), [462,])), 2)
output = relay.Tuple([call_5053,call_5058,call_5064,const_5065,])
output2 = relay.Tuple([call_5054,call_5059,call_5066,const_5065,])
func_5071 = relay.Function([], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
output = func_5071()
func_5072 = relay.Function([], output)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_5128 = func_3834_call()
call_5129 = func_3834_call()
func_1358_call = mod.get_global_var('func_1358')
func_1361_call = mutated_mod.get_global_var('func_1361')
const_5141 = relay.constdtype = "float64")#candidate|5141|(130, 15)|const|float64
call_5140 = relay.TupleGetItem(func_1358_call(relay.reshape(const_5141.astype('float64'), [10, 15, 13])), 0)
call_5142 = relay.TupleGetItem(func_1361_call(relay.reshape(const_5141.astype('float64'), [10, 15, 13])), 0)
output = relay.Tuple([call_5128,call_5140,const_5141,])
output2 = relay.Tuple([call_5129,call_5142,const_5141,])
func_5143 = relay.Function([], output)
mod['func_5143'] = func_5143
mod = relay.transform.InferType()(mod)
output = func_5143()
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5148 = relay.var("var_5148", dtype = "float64", shape = (16, 5, 9))#candidate|5148|(16, 5, 9)|var|float64
uop_5149 = relay.log(var_5148.astype('float64')) # shape=(16, 5, 9)
var_5151 = relay.var("var_5151", dtype = "float64", shape = (16, 5, 9))#candidate|5151|(16, 5, 9)|var|float64
bop_5152 = relay.floor_divide(uop_5149.astype('float32'), relay.reshape(var_5151.astype('float32'), relay.shape_of(uop_5149))) # shape=(16, 5, 9)
func_5143_call = mod.get_global_var('func_5143')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_5158 = relay.TupleGetItem(func_5143_call(), 1)
call_5159 = relay.TupleGetItem(func_5144_call(), 1)
output = relay.Tuple([bop_5152,call_5158,])
output2 = relay.Tuple([bop_5152,call_5159,])
func_5170 = relay.Function([var_5148,var_5151,], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
var_5171 = relay.var("var_5171", dtype = "float64", shape = (16, 5, 9))#candidate|5171|(16, 5, 9)|var|float64
var_5172 = relay.var("var_5172", dtype = "float64", shape = (16, 5, 9))#candidate|5172|(16, 5, 9)|var|float64
output = func_5170(var_5171,var_5172,)
func_5173 = relay.Function([var_5171,var_5172,], output)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5178 = relay.var("var_5178", dtype = "uint8", shape = (3, 16, 15))#candidate|5178|(3, 16, 15)|var|uint8
var_5179 = relay.var("var_5179", dtype = "uint8", shape = (3, 16, 15))#candidate|5179|(3, 16, 15)|var|uint8
bop_5180 = relay.right_shift(var_5178.astype('uint8'), relay.reshape(var_5179.astype('uint8'), relay.shape_of(var_5178))) # shape=(3, 16, 15)
bop_5194 = relay.floor_mod(var_5179.astype('float32'), relay.reshape(var_5178.astype('float32'), relay.shape_of(var_5179))) # shape=(3, 16, 15)
func_4466_call = mod.get_global_var('func_4466')
func_4468_call = mutated_mod.get_global_var('func_4468')
call_5197 = relay.TupleGetItem(func_4466_call(), 0)
call_5198 = relay.TupleGetItem(func_4468_call(), 0)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_5205 = func_4342_call()
call_5206 = func_4342_call()
output = relay.Tuple([bop_5180,bop_5194,call_5197,call_5205,])
output2 = relay.Tuple([bop_5180,bop_5194,call_5198,call_5206,])
func_5207 = relay.Function([var_5178,var_5179,], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mutated_mod.get_global_var('func_5207')
var_5209 = relay.var("var_5209", dtype = "uint8", shape = (3, 16, 15))#candidate|5209|(3, 16, 15)|var|uint8
var_5210 = relay.var("var_5210", dtype = "uint8", shape = (3, 16, 15))#candidate|5210|(3, 16, 15)|var|uint8
call_5208 = func_5207_call(var_5209,var_5210,)
output = call_5208
func_5211 = relay.Function([var_5209,var_5210,], output)
mutated_mod['func_5211'] = func_5211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_5223 = func_3204_call()
call_5224 = func_3204_call()
uop_5225 = relay.log2(call_5223.astype('float64')) # shape=(6, 9, 1)
uop_5227 = relay.log2(call_5224.astype('float64')) # shape=(6, 9, 1)
output = uop_5225
output2 = uop_5227
func_5228 = relay.Function([], output)
mod['func_5228'] = func_5228
mod = relay.transform.InferType()(mod)
output = func_5228()
func_5229 = relay.Function([], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_5267 = relay.TupleGetItem(func_4160_call(), 0)
call_5268 = relay.TupleGetItem(func_4161_call(), 0)
func_2723_call = mod.get_global_var('func_2723')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_5282 = relay.TupleGetItem(func_2723_call(), 0)
call_5283 = relay.TupleGetItem(func_2725_call(), 0)
output = relay.Tuple([call_5267,call_5282,])
output2 = relay.Tuple([call_5268,call_5283,])
func_5284 = relay.Function([], output)
mod['func_5284'] = func_5284
mod = relay.transform.InferType()(mod)
output = func_5284()
func_5285 = relay.Function([], output)
mutated_mod['func_5285'] = func_5285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_5377 = func_4342_call()
call_5378 = func_4342_call()
var_5382 = relay.var("var_5382", dtype = "uint16", shape = (6, 9, 15))#candidate|5382|(6, 9, 15)|var|uint16
bop_5383 = relay.multiply(call_5377.astype('float64'), relay.reshape(var_5382.astype('float64'), relay.shape_of(call_5377))) # shape=(6, 9, 15)
bop_5386 = relay.multiply(call_5378.astype('float64'), relay.reshape(var_5382.astype('float64'), relay.shape_of(call_5378))) # shape=(6, 9, 15)
const_5390 = relay.const([[[-6,-1,5,-4,-1,-3,10,3,-4,-5,4,-4,-5,3,-9],[-5,3,9,-8,-8,-7,-4,-5,-10,9,-10,9,3,2,-5],[2,-7,6,1,-10,-4,2,-3,4,-7,-3,3,2,-6,-2],[7,-1,-7,10,-10,8,7,-4,8,8,-9,4,-2,8,1],[9,1,2,-8,7,5,5,-7,4,5,1,-2,-7,-1,10],[-4,10,2,5,-4,-9,-8,-1,-1,10,-7,-1,-6,-3,3],[9,-4,-5,10,-6,2,3,8,-5,-9,9,6,6,10,10],[-5,-3,7,5,7,2,-5,-1,1,5,3,-7,-4,4,4],[-7,3,8,-7,-9,-2,-6,-8,-3,-5,8,-2,8,1,2]],[[-3,4,9,8,-5,-4,8,6,-9,4,7,3,-10,-7,-2],[-8,-10,-3,-4,-6,-7,-6,2,-2,10,6,-1,-9,9,-4],[7,-6,-4,-5,-9,7,-5,1,-6,-10,-1,2,-3,-3,-8],[-3,-8,-1,7,1,9,2,-5,-1,7,5,-6,-10,-9,5],[-9,-10,7,-9,7,10,2,-10,-8,5,-2,3,-9,-1,7],[4,2,5,7,-4,6,2,10,4,-3,-1,-9,-5,9,-7],[-9,6,-8,1,-7,-2,2,2,6,-10,-4,5,7,-4,-3],[-7,-3,-6,-4,-8,3,-3,-4,9,-8,2,-9,-7,-7,7],[1,4,6,5,-6,-8,-3,-6,-5,-10,3,7,8,-2,-3]],[[5,-2,-8,-1,-8,-7,8,9,-10,10,-7,9,8,-8,-2],[-9,4,8,-2,6,5,-8,7,10,2,-5,-4,-5,-4,3],[3,-5,-5,-1,-3,7,-2,3,-2,7,3,-5,6,9,10],[-8,-4,-9,7,6,-7,-7,9,10,-5,5,7,-8,9,-5],[-1,-1,-5,6,10,-1,6,-8,2,-6,3,8,3,-4,-3],[-1,-3,9,-5,-1,8,2,2,1,-7,2,2,9,3,-8],[-6,1,3,1,-7,-3,-6,1,4,-3,-10,-1,4,8,5],[4,-8,3,6,-1,6,-2,-8,2,6,3,2,-8,3,-4],[3,2,-4,3,8,-7,-8,9,-3,-8,-8,-4,-4,-7,-10]],[[7,-8,5,1,3,1,-6,-8,-5,-7,9,5,-8,-10,5],[-3,-5,1,-2,-9,-4,5,-1,4,-6,-10,-8,2,3,-8],[-2,-3,1,-7,6,8,-8,7,-7,-5,4,10,10,10,2],[2,-1,2,-6,-5,-7,-2,7,4,4,7,-5,-2,8,6],[1,5,4,-2,-10,-5,-3,4,8,-3,5,10,8,-3,-5],[-8,1,-8,3,-5,8,-2,7,-10,1,-7,7,6,-3,-4],[2,-7,-7,7,-5,-5,-2,-4,2,-6,-1,-1,4,6,10],[8,-3,-4,7,2,-6,7,-5,-9,-8,2,-1,8,10,-3],[-5,4,-5,8,-2,6,-9,-5,5,-1,-10,2,4,9,3]],[[6,-4,-6,9,-2,6,8,-4,-10,-7,-2,2,2,-4,-3],[2,3,-2,-6,-2,-3,-8,-4,1,1,-4,9,-7,-5,-10],[7,10,10,8,-2,-4,-1,-5,5,10,8,-1,10,-7,-8],[-3,-1,-7,-4,6,-7,2,-3,4,3,-3,8,7,1,-4],[3,6,-2,-6,7,-4,-2,-4,-3,2,2,8,-9,-9,1],[1,-1,-1,-7,-9,8,-9,-2,-5,1,3,-5,3,-8,-6],[6,-6,-2,7,-1,-6,-2,1,-7,-8,-8,-4,-4,6,-1],[-4,8,3,-4,-3,-9,-7,-3,-4,9,-3,-5,-7,-5,-2],[3,-3,-5,-3,7,5,5,8,2,-2,-3,5,1,-6,7]],[[3,3,3,4,-6,-1,8,5,-6,7,-8,-1,8,-9,8],[-2,5,9,-3,3,-6,2,-10,2,-6,2,-1,10,-6,-4],[2,7,1,-5,-1,-6,3,-2,7,-9,-5,8,7,-5,-7],[-7,-5,8,10,-4,2,-7,10,-9,5,1,-2,-4,-8,-10],[-8,-4,1,10,-5,-4,4,3,-3,4,-2,-8,5,3,-2],[8,2,-4,-6,-6,-1,-10,-4,-3,-7,6,2,-6,-7,10],[-2,1,2,8,-4,-9,-7,-1,3,-7,-1,-4,7,9,8],[3,-8,5,2,8,-10,-10,-7,7,7,2,6,-10,-5,7],[8,5,-6,8,4,5,-2,-10,-6,-8,-10,10,8,1,8]]], dtype = "uint16")#candidate|5390|(6, 9, 15)|const|uint16
bop_5391 = relay.logical_xor(var_5382.astype('uint8'), relay.reshape(const_5390.astype('uint8'), relay.shape_of(var_5382))) # shape=(6, 9, 15)
output = relay.Tuple([bop_5383,bop_5391,])
output2 = relay.Tuple([bop_5386,bop_5391,])
func_5421 = relay.Function([var_5382,], output)
mod['func_5421'] = func_5421
mod = relay.transform.InferType()(mod)
var_5422 = relay.var("var_5422", dtype = "uint16", shape = (6, 9, 15))#candidate|5422|(6, 9, 15)|var|uint16
output = func_5421(var_5422)
func_5423 = relay.Function([var_5422], output)
mutated_mod['func_5423'] = func_5423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5440 = relay.var("var_5440", dtype = "float64", shape = (7, 9, 4))#candidate|5440|(7, 9, 4)|var|float64
uop_5441 = relay.sinh(var_5440.astype('float64')) # shape=(7, 9, 4)
var_5444 = relay.var("var_5444", dtype = "float64", shape = (7, 9, 4))#candidate|5444|(7, 9, 4)|var|float64
bop_5445 = relay.logical_xor(var_5440.astype('int16'), relay.reshape(var_5444.astype('int16'), relay.shape_of(var_5440))) # shape=(7, 9, 4)
bop_5448 = relay.maximum(uop_5441.astype('float64'), relay.reshape(var_5440.astype('float64'), relay.shape_of(uop_5441))) # shape=(7, 9, 4)
output = relay.Tuple([bop_5445,bop_5448,])
output2 = relay.Tuple([bop_5445,bop_5448,])
func_5459 = relay.Function([var_5440,var_5444,], output)
mod['func_5459'] = func_5459
mod = relay.transform.InferType()(mod)
var_5460 = relay.var("var_5460", dtype = "float64", shape = (7, 9, 4))#candidate|5460|(7, 9, 4)|var|float64
var_5461 = relay.var("var_5461", dtype = "float64", shape = (7, 9, 4))#candidate|5461|(7, 9, 4)|var|float64
output = func_5459(var_5460,var_5461,)
func_5462 = relay.Function([var_5460,var_5461,], output)
mutated_mod['func_5462'] = func_5462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5477 = relay.var("var_5477", dtype = "int8", shape = (6, 9, 12))#candidate|5477|(6, 9, 12)|var|int8
var_5478 = relay.var("var_5478", dtype = "int8", shape = (6, 9, 12))#candidate|5478|(6, 9, 12)|var|int8
bop_5479 = relay.less_equal(var_5477.astype('bool'), relay.reshape(var_5478.astype('bool'), relay.shape_of(var_5477))) # shape=(6, 9, 12)
uop_5484 = relay.sqrt(bop_5479.astype('float32')) # shape=(6, 9, 12)
output = relay.Tuple([uop_5484,])
output2 = relay.Tuple([uop_5484,])
func_5487 = relay.Function([var_5477,var_5478,], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5487_call = mutated_mod.get_global_var('func_5487')
var_5489 = relay.var("var_5489", dtype = "int8", shape = (6, 9, 12))#candidate|5489|(6, 9, 12)|var|int8
var_5490 = relay.var("var_5490", dtype = "int8", shape = (6, 9, 12))#candidate|5490|(6, 9, 12)|var|int8
call_5488 = func_5487_call(var_5489,var_5490,)
output = call_5488
func_5491 = relay.Function([var_5489,var_5490,], output)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2583_call = mod.get_global_var('func_2583')
func_2584_call = mutated_mod.get_global_var('func_2584')
call_5500 = relay.TupleGetItem(func_2583_call(), 8)
call_5501 = relay.TupleGetItem(func_2584_call(), 8)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
const_5508 = relay.const([-9.495322,8.046036,-0.713330,5.723555,-5.676935,-8.568755,-5.189857,-8.594959,2.773949,5.490734,-1.718479,-8.242220,-0.505765,2.345948,1.235350,-8.625354,-0.267617,0.172273,-0.810096,-8.812918,3.808907,4.926377,4.697319,8.328732,-5.151814,5.300175,3.221357,0.880374,1.486094,-7.153167,5.486356,-2.001241,-8.233161,6.138265,-3.743614,4.412668,-7.722250,4.509595,8.051237,4.516418,7.812890,-1.173831,-7.749735,7.970795,-7.735609,7.616746,-9.311546,9.940641,8.288411,-1.084512,0.988464,8.323465,-1.756619,6.390398,-8.525644,4.117332,3.366193,-0.920263,4.201659,1.420523,7.815195,3.838449,-3.057347,-3.493728,1.677104,0.005826,5.280025,6.692794,5.082232,6.325817,1.951913,2.782578,-7.996778,-0.053792,5.145076,2.269518,-6.456762,4.907494,-9.082114,-6.988782,-8.563111,-1.989898,1.889732,4.233502,-1.719471,-7.493341,4.581313,-1.202121,6.490579,6.098873,-1.678051,-6.428576,8.573565,9.537010,1.457514,-4.012902,1.654340,0.150362,-1.973785,3.306541,1.469252,-0.374894,8.678141,-8.208601,4.688695,-5.334644,3.484535,8.701624,-8.139007,-8.777896,-1.117425,9.679579,9.534181,-1.672405,1.114715,-5.395716,3.251420,8.453382,2.354854,-3.318888,8.009665,-4.693733,8.969959,4.905057,-0.870547,6.506860,-4.871394,-6.668738,-4.039681,8.037899,-3.976126,-9.669044,-6.479146,-6.694706,-1.115429,6.239654,2.279581,-8.355961,4.693874,-0.042079,6.309628,-6.737829,-6.313254,9.306683,-4.598412,-4.236878,-7.941402,-9.673422,-6.005078,-3.341533,5.021578,-1.348753,1.472213,7.133170,7.204885,-5.784690,-1.861660,-6.076268,7.703266,2.088770,3.104594,-1.153901,-3.636165,-3.388419,5.932990,0.644213,-8.651671,-5.198863,-4.052679,-0.083632,6.456125,-9.483931,-4.112584,1.740982,-4.030603,3.827663,-3.839252,1.282596,-2.400086,-1.487132,-8.334965,2.327809,6.082048,-8.508992,7.352806,3.660310,0.992615,-9.212422,6.679106,4.974053,-7.295232,0.873318,-6.419654,-9.390908,-1.100929,8.596596,-3.543573,-2.372004,-3.836124,-1.062890,1.269356,-6.909115,8.276344,-1.187124,-7.878337,9.285572,-3.109774,-2.079341,4.674146,-6.805764,0.247721,9.164891,-8.831770,3.285230,-8.272775,-0.774356,-6.929878,8.130428,-1.183653,-9.528516,7.797052,5.946963,-5.577768,6.304356,-4.278224,4.962272,7.163074,-2.804049,-1.258516,-4.438516,1.643985,2.434295,7.114434,4.764897,-0.291081,2.802111,6.190424,-3.483734,-0.094700,-9.301465,7.274839,-0.854396,-9.903641,-1.031663,-4.532159,0.246118,5.040653,5.557810,7.390859,-1.319832,-2.764852,-2.843662,4.681469,2.573915,-2.280322,-4.704372,-1.439297,-7.069731,7.167795,8.663851,8.056042,6.062472,7.420363,3.967694,-9.149430,5.413690,0.795908,-7.690463,-6.407318,-7.635356,9.796828,-3.045265,6.584976,-7.281056,3.562048,6.750219,3.235978,6.295403,8.959144,2.599747,0.261556,6.198566,-8.577740,9.640465,8.759094,9.456019,-8.215574,-5.168495,-3.381745,5.930396,3.837345,-0.760838,3.640042,9.017847,1.397762,-6.901719,5.894118,1.207277,-5.634569,-7.170466,4.593573,-2.412788,8.271675,7.059544,-0.260620,9.116852,0.614612,-6.720956,-3.991455,-1.571441,-4.186389,-3.932633,-6.574068,-5.807318,-0.066418,-1.573596,-3.636677,2.400937,-6.338367,-8.893991,1.701415,-5.863622,7.710304,-4.497407,-7.585743,3.819306,2.682027,4.825218,-0.575964,-4.050270,-9.370326,-9.621623,-7.216651,8.475059,-8.588296,3.431386,7.222321,4.784488,-9.383110,-0.234392,-0.822198,9.290774,9.509370,8.979170,-7.029825,-5.107318,-1.643183,-6.220017,8.015352,6.458494,2.767924,8.342797,-8.242665,3.391651,-8.361792,-2.820054,-5.193516,6.741475,-2.088505,1.962436,-6.990038,0.843903,-8.961085,4.524903,7.448126,7.658958,5.279116,-1.085499,1.459695,-2.322855,3.611247,-3.428454,9.237674,-8.461318,-4.242530,-3.135078,3.367510,-1.602208,0.217031,5.071598,-7.879828,9.635637,-6.074671,-9.607707,-4.667045,1.054121,4.707843,6.933883,5.255138,-1.613708,9.412600,3.148125,-5.248310,-8.103081,9.417153,2.686505,-2.356720,-6.780849,-0.779780,2.238189,1.794435,-2.007069,-5.342735,0.632074,7.941433,-0.688681,1.444942,-1.957310,2.551060,9.165511,-1.709001,-5.268484,-2.166320,4.039322,1.165264,9.045277,-1.069681,3.054068,9.303640,-3.761998,-2.439218,9.734699,-3.347776,-9.574263,-0.012375,6.267710,-1.000999,7.108348,-4.712664,2.446683,3.561390,-1.969300,-1.652890,6.277142,4.064877,9.968753,-7.049992,3.872327,-6.316691,-0.411657,1.388499,8.805612,9.567895,-6.215464,-2.580404,-2.750442,-3.953373,1.582566,-1.266189,-9.012387,-9.923062,-1.770041,-6.261262,-0.627857,7.446911,5.097614,-2.976182,-7.968779,-2.798338,3.541359,-7.650433,-6.878845,-1.874507,8.574922,-4.704932,-1.214187,4.513755,8.631629,-4.282004,-2.572793,-8.715498,8.605735,4.430307,0.851483,-9.998833,-5.856249,-5.570555,-8.214046,-5.510925,4.562240], dtype = "float64")#candidate|5508|(480,)|const|float64
call_5507 = relay.TupleGetItem(func_3142_call(relay.reshape(const_5508.astype('float64'), [10, 6, 8])), 2)
call_5509 = relay.TupleGetItem(func_3145_call(relay.reshape(const_5508.astype('float64'), [10, 6, 8])), 2)
output = relay.Tuple([call_5500,call_5507,const_5508,])
output2 = relay.Tuple([call_5501,call_5509,const_5508,])
func_5510 = relay.Function([], output)
mod['func_5510'] = func_5510
mod = relay.transform.InferType()(mod)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5510_call = mutated_mod.get_global_var('func_5510')
call_5511 = func_5510_call()
output = call_5511
func_5512 = relay.Function([], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3042_call = mod.get_global_var('func_3042')
func_3044_call = mutated_mod.get_global_var('func_3044')
call_5513 = func_3042_call()
call_5514 = func_3042_call()
output = call_5513
output2 = call_5514
func_5523 = relay.Function([], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mutated_mod.get_global_var('func_5523')
call_5524 = func_5523_call()
output = call_5524
func_5525 = relay.Function([], output)
mutated_mod['func_5525'] = func_5525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_5551 = relay.TupleGetItem(func_4092_call(), 0)
call_5552 = relay.TupleGetItem(func_4094_call(), 0)
output = relay.Tuple([call_5551,])
output2 = relay.Tuple([call_5552,])
func_5559 = relay.Function([], output)
mod['func_5559'] = func_5559
mod = relay.transform.InferType()(mod)
mutated_mod['func_5559'] = func_5559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mutated_mod.get_global_var('func_5559')
call_5560 = func_5559_call()
output = call_5560
func_5561 = relay.Function([], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3834_call = mod.get_global_var('func_3834')
func_3835_call = mutated_mod.get_global_var('func_3835')
call_5603 = func_3834_call()
call_5604 = func_3834_call()
uop_5610 = relay.exp(call_5603.astype('float64')) # shape=(6, 9, 1)
uop_5612 = relay.exp(call_5604.astype('float64')) # shape=(6, 9, 1)
uop_5613 = relay.cosh(uop_5610.astype('float32')) # shape=(6, 9, 1)
uop_5615 = relay.cosh(uop_5612.astype('float32')) # shape=(6, 9, 1)
output = relay.Tuple([uop_5613,])
output2 = relay.Tuple([uop_5615,])
func_5621 = relay.Function([], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mutated_mod.get_global_var('func_5621')
call_5622 = func_5621_call()
output = call_5622
func_5623 = relay.Function([], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5626 = relay.const([[[7.052009,-8.453532,-1.555075,7.373328,-9.261979,-9.172552,8.401933,-1.883255,-7.068384,-6.598322,-7.291574,-0.282217],[-7.986470,-0.428178,-9.974531,-0.918296,-3.268122,7.814964,4.947206,4.813821,2.867547,-7.773077,9.958300,7.048049],[7.167157,-2.707472,-1.238709,-4.724988,-6.162163,6.610934,-0.296709,-6.271052,4.037489,-7.723959,-6.397904,-0.152692],[0.579613,-9.251122,-2.372256,-9.202091,3.587979,4.108837,2.050646,3.828071,-2.408225,-8.513516,-2.027817,1.444326],[-0.899057,-9.394232,-0.707823,-4.775851,6.175253,-9.296480,-0.862382,3.275716,0.520526,8.112795,-7.924237,-9.581536],[-9.796598,-3.503642,-7.229615,-5.630201,8.630103,5.077823,4.996738,0.145375,4.336430,-3.639588,-0.161401,7.128049],[8.625277,-8.628618,7.795061,-5.926654,0.687703,-5.867450,6.531560,7.784549,1.707561,-9.511332,-4.823830,-2.533623],[7.108082,-2.815754,-9.172007,0.285159,-9.080274,-9.182812,-0.324583,0.762797,1.378580,2.488955,-5.511321,8.457066],[-8.576287,9.226040,7.530746,-7.795290,-8.833414,-4.755987,-7.673563,-1.120120,9.147794,9.957514,-3.270008,1.741727],[-3.609384,-5.332345,7.085720,2.918265,3.894863,3.661579,-9.306777,3.745288,-3.636167,1.653425,1.833934,7.602898],[-4.583444,-5.024185,-5.609534,-1.530132,8.856008,7.578291,-7.985809,-7.273169,2.879234,-2.278141,3.331879,1.840555]],[[5.943510,-9.797194,-0.311028,2.752685,-9.488216,8.762377,-9.383114,-0.143015,-9.957626,-4.918560,-8.433239,-6.768545],[-0.918041,1.732044,-9.447206,3.656933,9.874234,-6.408172,-8.314384,8.699084,-3.958459,7.018089,-3.612485,-4.298202],[9.334576,-2.461926,9.259518,-6.633153,8.147624,7.214000,-8.067563,-4.069728,-3.258585,9.684176,-5.824259,-2.714956],[-3.770306,7.970905,6.065723,1.630430,8.570203,-1.169077,0.474036,-7.521106,-2.284655,-8.675198,6.941103,-6.689487],[-1.745839,-3.536872,-6.872773,7.271595,-1.639390,-0.536614,-4.469454,-8.277461,0.416433,-1.251828,3.155149,0.980837],[-5.397823,-2.550295,-4.815483,9.796284,2.810194,-7.716267,-3.968984,-2.931788,-9.753689,-0.831699,-7.297571,-3.522500],[7.546203,-7.366527,-1.196777,-6.999900,-0.013808,-9.886803,-4.450520,0.950995,5.149829,6.111477,9.559556,-7.815772],[-3.393083,-9.823253,2.551815,-5.316397,5.287205,-5.267241,9.393327,-6.763435,5.552163,-4.593936,-4.261651,6.707637],[7.253010,-2.939336,-8.306186,5.879099,7.980250,-7.999751,-8.895576,-3.731303,3.283386,3.877993,5.752519,-7.993313],[-0.905605,-8.873631,-9.220294,-3.770047,2.442074,-9.016278,4.487422,-7.165057,4.643222,-4.704556,-3.381097,8.644038],[2.839185,-2.769967,-9.884584,1.183119,4.866903,-1.208423,-0.936522,-2.623588,7.613246,4.851976,-8.150289,5.603205]],[[-1.771575,0.463536,-8.904070,9.415438,-6.982137,9.602547,-8.895263,4.648977,-2.230903,-1.445824,2.061836,-3.613815],[8.974166,4.710129,-8.599494,-1.884665,-3.804462,3.826608,-4.609991,-1.966118,-2.181365,-6.597472,1.254102,-1.733549],[2.666954,-4.068360,2.780061,7.542160,-0.834254,-9.183258,8.641734,-1.550798,1.094047,2.171015,-8.438687,-8.197623],[6.951277,8.202739,-1.378722,-7.371709,-2.707071,-4.974985,-5.108293,5.928203,7.860777,4.907071,-4.729974,-9.847737],[5.334042,3.110322,-8.091954,-4.578623,-1.503477,-6.040136,0.760979,-0.235894,4.928918,-4.348880,-0.207592,-0.815798],[2.806028,9.796919,3.039311,7.832841,5.177602,-5.521179,-3.258672,6.696389,4.098559,-0.433722,-1.779568,-8.672173],[5.971610,1.690372,-6.966700,5.885088,9.684732,7.589711,1.681439,0.100521,-2.135313,-7.084431,-2.563400,3.028481],[5.839979,4.740032,1.909931,4.218980,-4.778372,-5.247025,-9.872907,-9.505740,-2.016790,1.996384,4.888635,-7.348962],[-2.427890,-8.957510,-5.628889,-0.119596,1.642370,-2.253869,-0.746789,-7.882677,-0.834312,3.261575,-0.480585,7.698937],[-9.540454,-7.643429,1.557424,5.983332,4.539622,6.663324,0.433581,7.552510,8.351800,6.949470,7.466779,-2.993190],[7.530757,6.414496,4.185061,-3.395036,7.564532,3.782653,-3.587266,-4.123848,1.600906,2.589856,-6.759781,0.756588]],[[-1.173516,6.617204,-2.511716,-7.770012,6.550745,-4.990895,-2.222951,-1.561326,2.653674,-1.498391,-9.557038,-6.084092],[-8.754799,7.354693,-2.717722,-4.836456,5.357391,0.720247,2.189881,9.849735,9.722282,-5.188363,1.044849,4.288184],[-8.460675,-2.446033,-5.735805,-3.357720,-0.811780,3.637792,1.665363,-7.420668,8.210057,-2.407429,6.418978,-6.204796],[7.929809,-1.758229,6.054796,-3.332823,5.990197,3.300282,0.876325,7.879760,2.295170,-6.368031,-6.862629,7.450290],[-2.526407,2.387725,-5.525103,-6.984845,-1.508754,-2.977862,-9.156696,8.307920,3.683210,-6.618930,6.149066,-3.042842],[-7.901323,8.607610,7.973069,8.015728,-1.271019,5.774518,-4.452400,3.556872,-4.743389,-0.349802,-0.124175,2.995109],[-9.534413,-3.722104,2.550235,-4.823463,7.535917,-7.677052,7.490772,0.078246,-0.850617,-5.516953,-1.953451,0.022001],[7.020382,-4.713529,-3.329664,4.836207,8.134786,-5.149257,-3.447223,-3.759968,-6.601436,7.857989,-7.556179,6.149737],[9.741335,6.072141,5.501940,4.047618,7.433194,-2.973973,8.404995,-7.394208,1.785070,1.224074,-4.169601,-5.039423],[-2.824058,-8.155639,-9.404925,-2.050077,5.675876,1.883235,-4.775864,0.344253,-9.569412,7.713795,8.446997,-6.795910],[-4.914087,-6.901786,-0.476832,5.300386,-7.581619,6.117908,-8.718514,4.650282,-1.425896,-7.541981,3.721285,-4.318049]]], dtype = "float32")#candidate|5626|(4, 11, 12)|const|float32
var_5627 = relay.var("var_5627", dtype = "float32", shape = (4, 11, 12))#candidate|5627|(4, 11, 12)|var|float32
bop_5628 = relay.mod(const_5626.astype('float32'), relay.reshape(var_5627.astype('float32'), relay.shape_of(const_5626))) # shape=(4, 11, 12)
func_2980_call = mod.get_global_var('func_2980')
func_2983_call = mutated_mod.get_global_var('func_2983')
const_5648 = relay.const([-9.385318,0.824897,3.287010,-2.090772,3.064350,9.299938,-9.361260,-2.218912,7.149040,-9.142055,-8.530224,-5.187816,9.646960,-4.855441,9.788275,1.640455,-3.967380,-2.154284,1.330033,-4.004718,-8.725776,-8.795587,8.706666,-3.568397,4.651380,1.938574,-5.301406,1.181548,-2.379458,-3.433701,3.401378,5.017911,5.893143,9.670801,-6.630013,4.004074,2.904045,-6.330474,-0.168817,-5.265267,7.330358,0.481847,7.211386,1.673103,3.515083,-6.895584,5.156407,-7.618594,1.373343,-0.828564,8.096158,-0.474857,7.922687,2.001305,-9.185517,0.148244,8.159832,8.757239,9.015232,-0.268045,-1.965344,7.619688,-1.322091,-4.424613,5.166264,-6.690414,8.800492,-4.128485,9.883733,-0.313025,2.351075,3.985907,0.702395,2.094476,9.510232,9.615066,-9.615965,6.929055,-5.878253,-8.401805,-3.656234,-6.470463,-8.115193,4.996661,-1.640290,6.248088,0.327597,-6.934970,0.565549,-4.347394,-8.852031,-2.355757,-7.522954,6.629940,-8.221550,1.912140,-3.954079,-1.166817,-2.213419,-3.971865,0.031100,-9.041865,-8.321465,1.863719,-9.096235,-4.193410,4.158767,-4.936436,2.748776,-0.092116,9.236865,-0.105779,7.568976,-1.154015,-8.346254,-5.016078,-6.605124,7.653471,-6.570435,-0.497347,-5.509846,7.994507,-7.512444,8.200653,6.800036,7.788904,8.154400,0.378426,-8.772490,-5.326680,-4.726158,-5.702487,9.621873,-2.330179,4.130335,0.023069,4.508534,4.851808,-5.220577,1.400864,4.375902,-4.644140,2.134282,0.895515,-8.880404,-2.334854,3.780237,6.525245,-5.550066,-9.764929,8.552245,0.484115,-1.817812,-7.083213,-9.335020,-2.438533,-1.644831,-3.770582,-1.989992,3.293666,-7.154838,-7.052572,-8.550666,-2.647211,3.418497,-4.803212,-3.368998,7.543694,4.501951,9.382525,-8.249523,7.096718,0.027035,-2.901403,9.784677,-1.017740,2.686377,4.912408,-2.034639,4.623734,-2.048256,-9.793590,2.973122,1.780439,3.223596,-2.292622,6.517028,-2.589854,-5.845072,-3.427591,-0.267896,6.794794,4.216336,-4.918964,-4.612647,2.807520,8.109550,-2.986112,-3.628144,3.560837,-9.070824,7.542559,1.153222,-2.415401,-3.837310,-9.135470,5.562803,-9.892773,-1.682006,5.759043,-2.026489,-0.636710,-4.002855,0.382201,-4.573226,5.997112,-4.215585,-0.899733,-7.122190,3.045482,-6.422065,-2.193018,4.245847,-5.141312,3.619175,8.085649,1.556180,4.397475,-9.459602,-3.201072,-1.322760,0.989012,-8.069537,-6.326721,1.117947,6.046661,5.626777,7.415294,-4.368736,4.510181,5.243178,-3.376627,-6.342229,0.241617,-7.220927,4.343755,8.984164,1.173777,6.617717,-5.960563,-3.834577,-3.845839,5.680428,-5.675681,3.541819,8.118639,-1.585100,2.341751,-8.474803,6.782784,-3.240453,2.698239,-4.203932,6.214952,-0.694256,-8.696291,4.816189,7.945477,-5.969771,7.609681,2.028690,4.089877,-1.689129,-5.254484,6.323523,9.836517,-4.664355,2.645658,1.521989,-8.258517,-8.567956,-3.783159,9.537211,5.784690,-4.353439,-4.958898,3.679238,5.919402,-9.730588,-5.533896,-6.575208,-7.576231,-9.730370,7.054603,-6.502348,-2.832712,-0.417678,0.358860,-8.868304,2.456509,4.369880,-8.094342,0.651176,-8.296779,1.219682,3.437648,-1.169823,-1.698726,1.832714,-6.746894,-5.777982,9.011168,-5.810927,-4.018044,9.257167,3.305418,6.514842,5.811782,7.927801,2.600144,5.922971,-0.666895,-2.759520,-8.424981,-0.146926,2.519324,2.268077,5.970047,6.655669,-1.556234,-5.307055,4.953379,3.405553,-1.300874,-7.441775,4.498288,8.928127,9.497383,7.080396,0.351600,2.500552,-5.494475,3.649971,-4.004373,8.472954,3.558238,-9.957339,-5.704489,-1.701403,-6.316105,-8.877879,-7.242880,-6.795370,6.410398,1.231816,1.666683,4.948707,-9.908987,-0.459900,-3.467687,4.944405,9.123213,-4.734908,-5.277377,-3.276810,-5.620935,-2.631183,-1.835918,-3.970784,-5.936815,2.440645,-8.841972,9.688983,4.261318,4.874215,-7.215286,-3.987911,-2.096503,6.032406,4.479145,-5.417335,-9.233807,-1.829060,5.200078,-5.673193,-9.379565,3.597846,-4.567163,8.419310,-7.231740,4.067569,-1.643947,-6.129149,9.992071,2.557715,-4.460256,-8.106938,-4.464679,0.867014,7.208096,-9.956740,0.622417,6.213100,-6.077227,-7.936739,2.064201,7.505802,8.080322,0.102153,6.955404,7.657827,-3.263285,-4.863682,-0.413430,-1.665000,8.031975,0.908414,-9.908224,1.604741,-0.379665,-6.928753,1.537261,0.419478,6.361544,8.084246,5.242345,-2.410212,-0.295933,-8.234422,8.756572,6.892356,2.310579,3.974439,7.896161,8.884061,-9.010685,5.724719,2.815428,-1.900972,7.190995,-8.216622,-4.505969,-7.075936,4.732606,1.705121,8.292979,-8.177832,-0.538524,3.111059,-6.985089,2.973765,-4.251992,-6.955084,6.959946,-9.116498,8.385140,7.005636,-1.990480,-5.516772,-2.647196,-9.163800,-4.523080,5.983870,-2.683541,-4.693370,3.168120,-2.664537,7.225765,0.011644,6.834730,5.709680,-1.442806,1.078429,4.907999,4.450177,8.882663,1.461215,-8.809777,-0.869848,4.637656,7.939065,-7.955768,-3.460832,-3.111487,-2.372829,-5.522763,-3.529664,-5.999450,9.183226,-2.515894,-4.530183,-4.023470,6.421091,-8.683677,0.494800,4.263191,-6.159066,-7.114143,0.183826,-1.310628,3.739952,9.718556,-9.602866,6.553270,8.414578,-1.187376,7.328268,-7.260314,0.553508,0.686914,-7.003846,9.579282,-6.118486,-3.021964,-8.576180,-6.159388,9.280702,-4.853601,6.680248,4.128746,3.243916,-7.833336,-7.244161,5.737487,1.700783,-4.157687,1.274617,-1.711188,-8.604894,4.794205,-2.321060,-1.766820,-4.681144,8.034827,-3.310835,-8.185547,-6.798912,-2.234554,9.984317,-0.726867,-4.837128,1.249249,-2.385576,-2.278580,-1.562043,4.079636,6.074653,-3.496962,-9.107244,8.520923,-3.017483,-2.474566,2.000329,2.103155,7.762170,4.481414,-2.455912,2.106325,6.937751,3.050972,-9.216787,-5.940941,-1.839209,6.259630,-3.075339,1.529319,-7.941154,1.949089,2.496901,4.631357,-7.428442,-9.071550,6.287759,3.740947,9.619392,-8.701768,7.288149,2.526989,3.144906,3.850142,-1.788200,-6.580435,-9.263948,-5.926797,-7.571547,-5.256639,-4.187353,6.907391,5.124605,-1.496778,-2.617683,-0.221641,5.833513,3.735749,-5.426647,-1.125123,-8.069197,8.203057,-5.045188,-9.960004,0.520770,6.432348,1.583984,0.602685,6.791954,-6.042647,-0.678161,-1.945845,-8.086234,-9.271588,-8.401513,0.506958,0.142829,2.068684,-6.564283,-2.171093,6.278043,-2.118468,5.357211,3.185991,3.208557,-8.195318,-5.335031,-4.001771,-9.474843,0.947701,3.219461,6.879079,0.849024,9.128563,-0.036517,-8.849715,9.269651,2.006205,-4.134545,-8.203160,-1.398759,-5.451081,1.952280,9.916338,9.890167,-2.038586,-3.543024,-6.536799,-3.931705,2.177046,3.807604,-6.301023,-0.881614,4.913259,-5.482981,8.003644,-2.585254,1.086203,-4.370213,-6.481965,0.520725,-1.520906,-7.516781,-8.227130,-3.923174,-0.236080,6.570429,4.153493,-6.679231,-0.987229,-3.803971,8.904389,1.779715,-1.866453,7.797706,-2.275078,7.129426,-5.652556,0.357061,-4.260576,3.982611,0.212681,-2.922279,-1.669020,-0.530486,3.959950,-8.174216,1.665669,-1.195297,3.780391,-2.599168,-3.149345,7.029013,-8.926337,6.393044,-5.631203,4.774350,2.353448,-5.189152,-0.491169,7.568940,9.084468,-9.014980,2.770603,-2.050110,-2.476771,-5.510457,-1.882384,-6.800121,-4.226610,-8.472525,-7.659068,0.727066,3.492330,5.498440,-5.604480,9.743973,3.631924,-2.100115,-0.375123,8.511393,-0.400290,-8.754721,5.894566,9.201831,-2.755050,6.335200,1.322787,9.465914,-6.305386,-1.132354,3.078029,8.977653,2.661310,3.207725,-0.166139,-6.630581,6.192658,-7.432743,4.353220,-1.923606,2.758641,-0.977548,-9.921119,4.852420,2.044181,7.329679,0.240969,8.512410,3.749866,6.146312,4.897415,-9.303619,-7.948385,-0.808664,-4.157836,2.841296,-4.454156,-7.212944,4.588681,0.678058,3.912103,8.306041,5.482827,4.806056,-2.150463,1.875083,-3.803749,-8.604845,-2.605509,1.071518,8.460506,-7.266963,-6.260186,8.210215,-6.283645,-5.525826,1.684999,-5.761278,-7.514682,4.282120,-4.057133,4.270543,-5.115194,3.593351,-3.582096,3.268315,-3.024988,5.848170,-2.673127,-5.206531,2.606640,-0.652701,7.444551,-2.144426,-7.608500,-0.986192,-1.226498,-6.750420,4.867946,2.359124,-3.626872,5.972782,-2.385672,1.568072,2.318995,2.413445,0.750815,-8.164219,-6.638925,-3.477261,-1.594706,-8.084568,-3.540140], dtype = "float64")#candidate|5648|(810,)|const|float64
var_5649 = relay.var("var_5649", dtype = "uint32", shape = (260, 2))#candidate|5649|(260, 2)|var|uint32
call_5647 = relay.TupleGetItem(func_2980_call(relay.reshape(const_5648.astype('float64'), [6, 9, 15]), relay.reshape(var_5649.astype('uint32'), [520,]), ), 4)
call_5650 = relay.TupleGetItem(func_2983_call(relay.reshape(const_5648.astype('float64'), [6, 9, 15]), relay.reshape(var_5649.astype('uint32'), [520,]), ), 4)
output = relay.Tuple([bop_5628,call_5647,const_5648,var_5649,])
output2 = relay.Tuple([bop_5628,call_5650,const_5648,var_5649,])
func_5651 = relay.Function([var_5627,var_5649,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5651_call = mutated_mod.get_global_var('func_5651')
var_5653 = relay.var("var_5653", dtype = "float32", shape = (4, 11, 12))#candidate|5653|(4, 11, 12)|var|float32
var_5654 = relay.var("var_5654", dtype = "uint32", shape = (260, 2))#candidate|5654|(260, 2)|var|uint32
call_5652 = func_5651_call(var_5653,var_5654,)
output = call_5652
func_5655 = relay.Function([var_5653,var_5654,], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2811_call = mutated_mod.get_global_var('func_2811')
call_5674 = relay.TupleGetItem(func_2810_call(), 0)
call_5675 = relay.TupleGetItem(func_2811_call(), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4161_call = mutated_mod.get_global_var('func_4161')
call_5678 = relay.TupleGetItem(func_4160_call(), 1)
call_5679 = relay.TupleGetItem(func_4161_call(), 1)
uop_5681 = relay.sqrt(call_5678.astype('float64')) # shape=(6, 9, 15)
uop_5683 = relay.sqrt(call_5679.astype('float64')) # shape=(6, 9, 15)
func_3765_call = mod.get_global_var('func_3765')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_5693 = relay.TupleGetItem(func_3765_call(), 0)
call_5694 = relay.TupleGetItem(func_3766_call(), 0)
output = relay.Tuple([call_5674,uop_5681,call_5693,])
output2 = relay.Tuple([call_5675,uop_5683,call_5694,])
func_5697 = relay.Function([], output)
mod['func_5697'] = func_5697
mod = relay.transform.InferType()(mod)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5697_call = mutated_mod.get_global_var('func_5697')
call_5698 = func_5697_call()
output = call_5698
func_5699 = relay.Function([], output)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mod.get_global_var('func_5559')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_5700 = relay.TupleGetItem(func_5559_call(), 0)
call_5701 = relay.TupleGetItem(func_5561_call(), 0)
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_5709 = relay.TupleGetItem(func_3927_call(), 0)
call_5710 = relay.TupleGetItem(func_3929_call(), 0)
output = relay.Tuple([call_5700,call_5709,])
output2 = relay.Tuple([call_5701,call_5710,])
func_5714 = relay.Function([], output)
mod['func_5714'] = func_5714
mod = relay.transform.InferType()(mod)
output = func_5714()
func_5715 = relay.Function([], output)
mutated_mod['func_5715'] = func_5715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5731 = relay.TupleGetItem(func_4727_call(), 0)
call_5732 = relay.TupleGetItem(func_4728_call(), 0)
output = relay.Tuple([call_5731,])
output2 = relay.Tuple([call_5732,])
func_5734 = relay.Function([], output)
mod['func_5734'] = func_5734
mod = relay.transform.InferType()(mod)
output = func_5734()
func_5735 = relay.Function([], output)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5816 = relay.var("var_5816", dtype = "bool", shape = (15, 9, 16))#candidate|5816|(15, 9, 16)|var|bool
const_5817 = relay.const([[[False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False],[True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False],[True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False],[False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,True],[False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,True],[False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False],[False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True],[True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True],[True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False]],[[False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True],[True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False],[False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False],[False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False],[True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True],[False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True],[False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False],[False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True],[False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True]],[[True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False],[True,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True],[True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False],[True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False],[False,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True],[True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True],[False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False],[True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,True],[False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False]],[[True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True],[True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False],[True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False],[False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False],[True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True],[False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False],[True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True],[False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True],[False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False]],[[True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True],[True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False],[True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False],[True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True],[False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False],[True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True],[False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True],[False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False],[True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False]],[[False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False],[False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False],[True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False],[True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False],[True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True],[False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True],[False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False],[True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False],[True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False]],[[False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False],[False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True],[True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True],[True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False],[True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False],[False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False],[False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True],[False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True],[True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False]],[[False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False],[False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False],[True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True],[False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True],[False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True],[False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True],[False,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False],[False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False],[False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True]],[[True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True],[False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True],[True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False],[True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,True],[False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False],[True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False],[False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True],[False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False],[False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True]],[[True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False],[False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False],[False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False],[True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False],[False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True],[False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True],[False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True],[True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False],[False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,True]],[[False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True],[False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True],[True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True],[False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False],[True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True],[False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False],[False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False],[True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False],[True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False]],[[True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False],[False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False],[False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True],[True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True],[False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True],[True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True],[False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False],[True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True],[False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False]],[[False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True],[False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False],[True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False],[False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False],[False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True],[True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True],[False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True],[False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True],[False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True]],[[True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True],[False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True],[True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False],[True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True],[True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True],[True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True],[True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False],[False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True],[False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True]],[[False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True],[False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False],[True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True],[False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True],[True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False],[False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False],[True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True],[True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False],[False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True]]], dtype = "bool")#candidate|5817|(15, 9, 16)|const|bool
bop_5818 = relay.logical_and(var_5816.astype('bool'), relay.reshape(const_5817.astype('bool'), relay.shape_of(var_5816))) # shape=(15, 9, 16)
func_5559_call = mod.get_global_var('func_5559')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_5826 = relay.TupleGetItem(func_5559_call(), 0)
call_5827 = relay.TupleGetItem(func_5561_call(), 0)
uop_5828 = relay.cos(call_5826.astype('float32')) # shape=(6, 11, 15)
uop_5830 = relay.cos(call_5827.astype('float32')) # shape=(6, 11, 15)
output = relay.Tuple([bop_5818,uop_5828,])
output2 = relay.Tuple([bop_5818,uop_5830,])
func_5833 = relay.Function([var_5816,], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
mutated_mod['func_5833'] = func_5833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5834 = relay.var("var_5834", dtype = "bool", shape = (15, 9, 16))#candidate|5834|(15, 9, 16)|var|bool
func_5833_call = mutated_mod.get_global_var('func_5833')
call_5835 = func_5833_call(var_5834)
output = call_5835
func_5836 = relay.Function([var_5834], output)
mutated_mod['func_5836'] = func_5836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_5865 = relay.TupleGetItem(func_4727_call(), 0)
call_5866 = relay.TupleGetItem(func_4728_call(), 0)
func_5697_call = mod.get_global_var('func_5697')
func_5699_call = mutated_mod.get_global_var('func_5699')
call_5867 = relay.TupleGetItem(func_5697_call(), 0)
call_5868 = relay.TupleGetItem(func_5699_call(), 0)
uop_5875 = relay.sqrt(call_5865.astype('float32')) # shape=(6, 9, 1)
uop_5877 = relay.sqrt(call_5866.astype('float32')) # shape=(6, 9, 1)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
var_5896 = relay.var("var_5896", dtype = "float32", shape = (9, 84))#candidate|5896|(9, 84)|var|float32
call_5895 = relay.TupleGetItem(func_4318_call(relay.reshape(var_5896.astype('float32'), [6, 9, 14])), 0)
call_5897 = relay.TupleGetItem(func_4320_call(relay.reshape(var_5896.astype('float32'), [6, 9, 14])), 0)
bop_5901 = relay.right_shift(call_5895.astype('int8'), relay.reshape(call_5865.astype('int8'), relay.shape_of(call_5895))) # shape=(6, 9, 1)
bop_5904 = relay.right_shift(call_5897.astype('int8'), relay.reshape(call_5866.astype('int8'), relay.shape_of(call_5897))) # shape=(6, 9, 1)
uop_5916 = relay.rsqrt(uop_5875.astype('float32')) # shape=(6, 9, 1)
uop_5918 = relay.rsqrt(uop_5877.astype('float32')) # shape=(6, 9, 1)
func_3142_call = mod.get_global_var('func_3142')
func_3145_call = mutated_mod.get_global_var('func_3145')
const_5921 = relay.const([1.333867,-4.873017,5.527930,9.976150,8.822227,-6.590347,4.026891,5.149868,8.705851,7.880350,-3.753830,5.905160,8.321434,-6.073401,4.935117,-8.673695,3.927556,-2.894479,-4.056293,1.793708,2.209770,-5.703327,-5.014840,6.512670,6.954894,8.897828,-6.878978,0.426318,-6.666109,1.746368,3.227093,-5.920658,-7.648544,3.409192,-2.025947,-2.549491,3.203921,0.398123,-9.582884,5.149846,3.643820,-2.787307,7.423599,0.020507,8.316434,4.953192,4.833636,5.926085,3.358256,-7.249617,8.022941,6.073506,5.960478,0.736069,3.756765,8.874920,3.036310,6.011129,-9.002296,-9.157069,8.633835,-9.863431,0.779313,-8.873205,1.782682,-7.660254,2.788367,1.678015,-5.253411,1.635996,9.200491,-0.047172,-1.437614,8.609231,2.951446,-7.032113,-3.022910,6.577517,5.137366,-9.236224,-2.854354,7.765980,-4.916681,-2.011487,7.595252,-0.873998,8.457242,0.125901,-0.466909,-3.856859,-5.827611,-7.517143,8.833486,-2.610949,2.112204,9.561320,-9.221829,-2.727681,6.100345,2.859808,-1.565036,7.332508,3.911500,8.375487,-9.975555,1.276707,-5.089697,3.013496,1.709030,-1.226114,-5.166796,-2.537288,0.157242,1.148631,3.342438,7.372706,-8.358656,1.667517,-4.445670,-1.189378,-5.056668,6.212261,1.441784,8.427610,9.914536,-8.621098,0.004228,-7.360139,0.166438,-9.572057,-3.873174,-0.443540,-8.709916,-3.726611,-9.273000,2.505376,-8.385715,4.318891,6.828869,-9.940888,5.930661,-4.834166,6.210070,3.834591,-4.001285,-4.804121,4.819460,-5.291874,-4.480456,-9.546639,5.803823,-8.089381,3.730334,1.837567,-7.042740,2.795691,-4.085193,-8.430500,-4.248482,-8.638188,3.561542,0.645441,3.014974,1.043710,6.708290,-7.837820,8.185998,-0.904070,7.790499,-0.017386,-9.137688,8.158559,3.158116,-6.192094,8.706569,0.235415,8.120948,2.766067,-9.573473,8.298058,6.230036,-8.728840,-7.259906,7.959811,-8.634984,1.323114,8.753699,-2.606531,-1.525368,-8.047965,9.161911,7.263228,-1.227399,-9.215550,6.558554,-2.813304,1.987564,1.269298,-5.658852,7.792245,-1.395470,4.710613,8.989518,7.046797,-7.179826,7.100357,8.449372,0.372723,-7.194029,-2.052004,3.472265,-6.993250,4.619786,-7.354409,-6.321035,-1.595182,-5.777247,-2.724242,0.754070,0.966672,7.068643,-1.988387,9.404725,-0.110470,5.684801,4.222155,-5.199149,3.396403,-5.916070,8.472515,-9.747552,6.012349,2.347577,-9.709135,3.417603,-3.187753,0.161123,9.423542,-8.744519,-6.902501,-7.520945,-8.159953,4.051898,-4.668883,1.369743,-6.252398,-0.103188,-7.194035,9.668223,-8.429678,3.778680,5.678225,0.034552,2.804996,-0.263265,1.717628,-6.792711,7.116973,-3.038615,1.161978,6.350729,3.831175,0.727397,1.609820,-5.278072,-0.429975,5.765107,-9.397758,-4.238939,-0.523567,6.879179,-6.342338,-8.515532,0.369541,4.904760,-1.165661,-2.559556,-2.820504,-6.518569,-7.861925,-7.137491,-1.336288,-9.569402,-1.280535,-4.184784,-0.421954,4.748556,0.016056,-8.682771,-6.671183,1.431752,6.230784,-9.369988,-7.519098,4.854143,7.542423,2.968944,7.612138,7.297774,-1.548746,8.574517,8.356004,5.169076,-7.624111,-3.114625,-4.223441,4.559481,8.811427,1.021650,-7.930308,8.963870,-6.826395,3.973386,-1.580949,-3.932856,8.813468,7.099880,-3.781458,8.819350,7.879809,6.847838,-9.454971,5.885645,-2.179007,1.930627,3.618179,-3.944028,6.931520,-4.359676,-5.918062,-6.079980,-9.121326,7.933333,7.003983,0.949008,-2.232557,-2.220172,2.807804,-5.615666,-8.365971,3.407638,-6.931037,-2.965254,6.948490,-6.392446,4.271765,2.077421,-1.537307,-3.426803,-4.360053,-5.048890,-2.585372,2.979905,-8.963804,9.357389,2.170570,5.214816,-5.835140,7.693463,-5.723424,-5.175966,-4.133408,7.862654,-6.618826,-3.259910,0.389388,4.982850,7.704430,2.056924,-5.626583,8.774591,7.259491,-7.699701,-7.191131,-7.778448,0.387953,-0.692493,-0.717861,-8.188203,3.467043,6.839978,-1.885018,-9.027740,9.879136,4.943673,-7.355603,5.464926,5.688951,8.176943,0.732274,-7.215420,-7.305298,4.881490,-2.986369,1.770647,-9.723309,-4.183619,1.397352,3.133744,7.361447,9.036427,2.476662,4.252552,-8.944486,-8.601975,-7.313141,-7.068375,5.911028,-8.924013,6.627221,3.861679,-0.874001,-5.001245,-0.163399,7.354240,4.769960,5.317829,2.636702,0.236992,9.941854,-8.569683,3.823000,9.988663,-6.123837,-1.120104,3.123361,7.727230,-8.123406,-8.366199,2.520120,-9.313027,-3.956014,7.926945,-8.647016,1.133487,-7.737642,-2.512991,-4.674795,-8.825024,2.428197,-0.374703,-9.955819,-7.975519,-8.061411,2.787235,-8.531219,-7.285037,0.521596,5.027451,-9.981251,-2.463167,-1.231449,-5.352266,-4.576436,2.971659,-6.153525,-8.128528,3.156916,0.503772,8.797828,-4.461307,-2.573047,-7.389817,-8.530098,5.583336,-6.369904,-4.171912,-9.378112,4.567482,3.850178,-6.246058,1.200338,6.229640,-7.933262,-9.340981,0.942435,6.529221,4.453387,-2.712807,6.726183], dtype = "float64")#candidate|5921|(480,)|const|float64
call_5920 = relay.TupleGetItem(func_3142_call(relay.reshape(const_5921.astype('float64'), [10, 6, 8])), 3)
call_5922 = relay.TupleGetItem(func_3145_call(relay.reshape(const_5921.astype('float64'), [10, 6, 8])), 3)
bop_5929 = relay.floor_mod(uop_5916.astype('float32'), relay.reshape(call_5895.astype('float32'), relay.shape_of(uop_5916))) # shape=(6, 9, 1)
bop_5932 = relay.floor_mod(uop_5918.astype('float32'), relay.reshape(call_5897.astype('float32'), relay.shape_of(uop_5918))) # shape=(6, 9, 1)
output = relay.Tuple([call_5867,var_5896,bop_5901,call_5920,const_5921,bop_5929,])
output2 = relay.Tuple([call_5868,var_5896,bop_5904,call_5922,const_5921,bop_5932,])
func_5936 = relay.Function([var_5896,], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5937 = relay.var("var_5937", dtype = "float32", shape = (9, 84))#candidate|5937|(9, 84)|var|float32
func_5936_call = mutated_mod.get_global_var('func_5936')
call_5938 = func_5936_call(var_5937)
output = call_5938
func_5939 = relay.Function([var_5937], output)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5697_call = mod.get_global_var('func_5697')
func_5699_call = mutated_mod.get_global_var('func_5699')
call_5968 = relay.TupleGetItem(func_5697_call(), 0)
call_5969 = relay.TupleGetItem(func_5699_call(), 0)
output = call_5968
output2 = call_5969
func_6005 = relay.Function([], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
output = func_6005()
func_6006 = relay.Function([], output)
mutated_mod['func_6006'] = func_6006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2810_call = mod.get_global_var('func_2810')
func_2811_call = mutated_mod.get_global_var('func_2811')
call_6023 = relay.TupleGetItem(func_2810_call(), 0)
call_6024 = relay.TupleGetItem(func_2811_call(), 0)
func_5459_call = mod.get_global_var('func_5459')
func_5462_call = mutated_mod.get_global_var('func_5462')
const_6034 = relay.const([5.513555,9.116479,9.538612,4.510830,-1.620184,0.887533,3.698347,5.133408,-9.555636,-2.177714,-4.429846,0.788940,8.336052,9.529388,-5.817798,4.935572,-0.172666,-7.529356,-4.321613,-3.414779,9.681424,8.524082,-9.747764,-9.944329,6.357046,-4.827122,-0.464465,-7.089897,-7.571760,-7.849809,5.066621,1.190582,-8.737404,8.833715,9.545012,-7.590971,-1.151099,-7.354721,-6.970909,1.846059,2.234691,2.400126,-7.890512,9.556001,7.144527,9.542327,-8.673763,-2.461200,-6.288727,2.716040,-7.897744,-8.125475,-8.847461,4.526031,8.372743,-5.823605,-4.635339,3.803790,2.649785,9.723352,-9.972140,-0.143919,7.715919,-8.825313,-2.135275,-1.142144,5.406480,6.843447,4.508934,-1.390207,-0.292450,3.655681,-1.949708,7.024706,7.254644,-4.880587,9.880165,-8.721586,4.850759,-1.635309,7.493724,-6.029711,2.391110,-4.588348,-4.595587,8.827177,4.215943,5.925192,4.971941,8.127571,-5.525863,8.975671,-6.615680,-5.054053,-7.447574,-9.274877,7.668355,-7.531803,-0.789580,0.868193,1.826212,2.340485,2.620764,-7.534682,5.306012,-6.653422,7.622871,1.498790,5.226757,1.493129,-6.771696,9.102134,9.572372,-7.047114,-6.887553,-3.845819,1.090176,-0.949078,3.838083,2.876346,5.989940,-0.166574,2.324251,-0.723744,3.069068,-0.413779,4.109750,-7.067174,1.832464,2.262358,-8.030094,3.508274,8.577536,4.308205,-6.043690,-8.447712,-8.778014,-4.059287,-5.396677,-6.632487,6.925656,-1.358532,0.505071,4.351197,6.717480,-7.589562,-4.527888,8.980414,-3.246361,-4.235285,-8.117825,-5.651585,0.219399,-0.081603,6.261411,-8.266468,-8.377102,-8.312487,2.548164,-2.334887,-2.946282,-8.214512,0.918376,-3.113585,-3.471186,-8.095899,1.021005,8.406206,-2.971372,9.204622,4.701815,-3.244295,-8.944770,4.108947,-2.155522,-2.711600,-2.508522,0.623390,0.765755,6.937282,6.636537,-7.117590,-9.757164,5.955719,1.818511,0.003571,-4.177876,-9.561825,-4.786273,-8.988733,-9.362905,2.193382,-3.416102,-8.653186,-9.406157,2.596365,7.403787,4.318308,-9.432262,-0.827874,0.955768,-0.956484,0.328666,-3.143030,-2.900873,-2.087645,0.074082,2.934546,9.186779,4.841118,-5.395247,0.311464,-4.785295,2.036169,3.943406,3.105979,8.772407,7.423784,-7.295195,-5.635158,-9.211837,1.145708,-4.769693,4.457894,-8.254083,-9.592858,-8.365056,8.254605,-7.708054,6.278257,-8.754922,-1.877035,-5.487314,3.581438,8.582300,1.500224,-2.913058,5.729808,5.626703,-0.688865,-8.216736,-1.474878,-5.885138,3.444906,2.943471,1.492915,3.525160,0.400518,6.176451,4.111146,7.834475,-3.263119], dtype = "float64")#candidate|6034|(252,)|const|float64
call_6033 = relay.TupleGetItem(func_5459_call(relay.reshape(const_6034.astype('float64'), [7, 9, 4]), relay.reshape(const_6034.astype('float64'), [7, 9, 4]), ), 0)
call_6035 = relay.TupleGetItem(func_5462_call(relay.reshape(const_6034.astype('float64'), [7, 9, 4]), relay.reshape(const_6034.astype('float64'), [7, 9, 4]), ), 0)
func_3332_call = mod.get_global_var('func_3332')
func_3333_call = mutated_mod.get_global_var('func_3333')
call_6038 = func_3332_call()
call_6039 = func_3332_call()
func_5459_call = mod.get_global_var('func_5459')
func_5462_call = mutated_mod.get_global_var('func_5462')
call_6044 = relay.TupleGetItem(func_5459_call(relay.reshape(call_6033.astype('float64'), [7, 9, 4]), relay.reshape(call_6033.astype('float64'), [7, 9, 4]), ), 0)
call_6045 = relay.TupleGetItem(func_5462_call(relay.reshape(call_6033.astype('float64'), [7, 9, 4]), relay.reshape(call_6033.astype('float64'), [7, 9, 4]), ), 0)
func_4136_call = mod.get_global_var('func_4136')
func_4138_call = mutated_mod.get_global_var('func_4138')
call_6046 = relay.TupleGetItem(func_4136_call(), 0)
call_6047 = relay.TupleGetItem(func_4138_call(), 0)
output = relay.Tuple([call_6023,call_6033,const_6034,call_6038,call_6044,call_6046,])
output2 = relay.Tuple([call_6024,call_6035,const_6034,call_6039,call_6045,call_6047,])
func_6050 = relay.Function([], output)
mod['func_6050'] = func_6050
mod = relay.transform.InferType()(mod)
output = func_6050()
func_6051 = relay.Function([], output)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4466_call = mod.get_global_var('func_4466')
func_4468_call = mutated_mod.get_global_var('func_4468')
call_6081 = relay.TupleGetItem(func_4466_call(), 3)
call_6082 = relay.TupleGetItem(func_4468_call(), 3)
output = call_6081
output2 = call_6082
func_6105 = relay.Function([], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
output = func_6105()
func_6106 = relay.Function([], output)
mutated_mod['func_6106'] = func_6106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6210 = relay.var("var_6210", dtype = "int16", shape = (3, 4, 16))#candidate|6210|(3, 4, 16)|var|int16
var_6211 = relay.var("var_6211", dtype = "int16", shape = (3, 4, 16))#candidate|6211|(3, 4, 16)|var|int16
bop_6212 = relay.not_equal(var_6210.astype('bool'), relay.reshape(var_6211.astype('bool'), relay.shape_of(var_6210))) # shape=(3, 4, 16)
output = bop_6212
output2 = bop_6212
func_6218 = relay.Function([var_6210,var_6211,], output)
mod['func_6218'] = func_6218
mod = relay.transform.InferType()(mod)
mutated_mod['func_6218'] = func_6218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6218_call = mutated_mod.get_global_var('func_6218')
var_6220 = relay.var("var_6220", dtype = "int16", shape = (3, 4, 16))#candidate|6220|(3, 4, 16)|var|int16
var_6221 = relay.var("var_6221", dtype = "int16", shape = (3, 4, 16))#candidate|6221|(3, 4, 16)|var|int16
call_6219 = func_6218_call(var_6220,var_6221,)
output = call_6219
func_6222 = relay.Function([var_6220,var_6221,], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mod.get_global_var('func_5559')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_6286 = relay.TupleGetItem(func_5559_call(), 0)
call_6287 = relay.TupleGetItem(func_5561_call(), 0)
func_3732_call = mod.get_global_var('func_3732')
func_3733_call = mutated_mod.get_global_var('func_3733')
call_6288 = relay.TupleGetItem(func_3732_call(), 0)
call_6289 = relay.TupleGetItem(func_3733_call(), 0)
var_6293 = relay.var("var_6293", dtype = "float64", shape = (6, 11, 15))#candidate|6293|(6, 11, 15)|var|float64
bop_6294 = relay.left_shift(call_6286.astype('uint32'), relay.reshape(var_6293.astype('uint32'), relay.shape_of(call_6286))) # shape=(6, 11, 15)
bop_6297 = relay.left_shift(call_6287.astype('uint32'), relay.reshape(var_6293.astype('uint32'), relay.shape_of(call_6287))) # shape=(6, 11, 15)
uop_6298 = relay.sqrt(call_6286.astype('float32')) # shape=(6, 11, 15)
uop_6300 = relay.sqrt(call_6287.astype('float32')) # shape=(6, 11, 15)
output = relay.Tuple([call_6288,bop_6294,uop_6298,])
output2 = relay.Tuple([call_6289,bop_6297,uop_6300,])
func_6303 = relay.Function([var_6293,], output)
mod['func_6303'] = func_6303
mod = relay.transform.InferType()(mod)
mutated_mod['func_6303'] = func_6303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6304 = relay.var("var_6304", dtype = "float64", shape = (6, 11, 15))#candidate|6304|(6, 11, 15)|var|float64
func_6303_call = mutated_mod.get_global_var('func_6303')
call_6305 = func_6303_call(var_6304)
output = call_6305
func_6306 = relay.Function([var_6304], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_6318 = relay.TupleGetItem(func_2479_call(), 0)
call_6319 = relay.TupleGetItem(func_2480_call(), 0)
func_4727_call = mod.get_global_var('func_4727')
func_4728_call = mutated_mod.get_global_var('func_4728')
call_6322 = relay.TupleGetItem(func_4727_call(), 0)
call_6323 = relay.TupleGetItem(func_4728_call(), 0)
func_2723_call = mod.get_global_var('func_2723')
func_2725_call = mutated_mod.get_global_var('func_2725')
call_6324 = relay.TupleGetItem(func_2723_call(), 0)
call_6325 = relay.TupleGetItem(func_2725_call(), 0)
func_5170_call = mod.get_global_var('func_5170')
func_5173_call = mutated_mod.get_global_var('func_5173')
const_6331 = relay.const([[1.057549,1.248352,3.025784,-1.456257,1.952867,-4.181592,8.884270,-7.407858,-1.098392,-0.876890,-8.628718,3.269484,-2.567820,3.373116,2.873321,4.770149,1.512133,9.448289,-0.180163,-0.539815,5.284092,-5.510060,-9.518199,5.759989,-3.894275,-0.001088,7.862352,-8.168730,-0.998269,-8.736623,-0.906928,-0.408570,-2.054483,-4.869495,-3.943229,-5.235321,7.689480,-1.183091,9.965587,9.328634,6.905771,7.224895,3.332780,1.476793,2.712711,7.998149,0.660325,6.642643,0.090028,-6.080261,-9.664696,-2.177263,-6.118507,8.711605,-5.887454,2.895787,-9.865540,-7.617018,-0.161613,-8.536334,2.158366,-5.085787,2.746332,-6.599304,5.609214,-1.111399,-5.600943,-5.056200,0.672416,-0.742280,-4.998791,-9.280155,-9.404334,-4.834459,-0.484297,-2.944231,-2.043108,-4.039313,-4.306210,3.267253,4.434540,6.036463,-4.374400,-6.759521,4.111025,8.718740,-4.888163,6.990758,-2.920348,-4.559646,-2.889268,-6.197368,2.343060,-8.139130,6.938936,7.965503,-2.624674,-6.723832,-5.454698,-6.390024,-9.582111,0.004079,3.784691,3.529062,-8.207839,-4.069789,2.485204,-7.843161,4.421080,-5.920914,-7.384217,-5.618473,4.406273,6.601486,3.007626,0.250685,4.097121,8.188218,4.897132,-3.669134,-6.938502,-4.571129,5.969011,-6.397931,-1.010571,7.102963,-3.848876,1.109193,6.219583,-0.471269,-4.660546,-6.350556,-6.426027,4.220168,-4.563206,-1.923881,-9.558973,-4.159717,0.991201,0.549294,-6.792225,-7.154380,-8.130583,-1.499364,-9.607866,-0.158956,-3.499562,-0.472215,-6.607902,2.535241,3.752821,8.273553,-1.766166,8.083602,-9.852143,5.989717,0.890537,-4.765565,5.317969,3.480063,5.843639,2.080553,-8.030637,-2.378537,3.981366,-8.956010,8.103099,-9.711140,1.779421,9.709259,-7.098101,-3.452917,-2.468258,1.236841,5.061024,0.850800,7.983734,7.521346,-7.618073,-8.057364],[6.439469,-3.637991,5.846941,-9.676582,-0.650638,-0.041025,4.142894,7.167104,7.896190,2.268208,3.946273,4.041802,7.696655,9.614010,1.748660,2.909097,-3.147178,6.910058,8.626399,-3.490398,-5.086027,-0.131353,-3.100956,9.420674,3.159196,-1.124897,-7.362136,1.658181,-5.332535,9.638133,-7.724421,-4.039396,6.159521,-6.591600,-0.068504,-6.891403,-9.376714,-9.426948,-0.270928,-1.609564,-8.813308,2.037638,1.177595,2.042932,1.940642,1.078054,8.782138,-3.015796,0.730169,7.524406,4.715063,-4.695105,6.027541,-6.854598,5.701672,6.538218,-8.627368,-2.007447,1.099486,7.232236,-1.450952,-8.364912,7.007849,-9.514072,-0.634521,-7.207606,-1.193517,9.324284,0.540610,5.090295,-9.411128,-9.672702,0.280846,-4.933255,-9.005260,5.525230,-6.301630,1.722033,-2.736317,9.620378,4.907293,7.676074,-1.217771,4.181229,-1.103801,-5.881114,1.071669,5.332123,7.569784,0.851274,-3.346683,8.577145,9.433657,-4.361678,-0.745916,-9.801010,8.973761,0.347681,-2.919163,4.646379,-8.248389,3.836766,-3.646624,-3.719480,5.961686,-9.305776,8.522704,-2.708728,-4.042089,-3.783658,-8.953283,-5.746141,-6.459613,-8.852632,9.509840,-7.163637,7.828060,4.495926,-3.378013,-0.610568,-4.713528,2.794162,-6.541630,-6.891928,-4.644573,0.912527,0.988764,-3.946733,-6.071005,-2.870308,-7.942714,6.207017,-9.100744,-3.611707,-4.271554,-9.800951,5.116258,-1.506713,-1.069155,-2.601146,-5.869237,7.275282,2.019009,4.969787,-5.601331,8.402816,-5.488896,9.828059,-5.328696,-6.091725,-1.960866,9.597844,-4.465716,8.235827,-9.020074,-0.891780,2.951824,-4.771211,0.845868,-4.129908,6.424606,0.466598,-2.461223,-4.127737,-6.735992,-2.043156,-2.157859,-6.215811,6.859131,2.503062,8.515859,-1.512873,6.394600,5.540093,1.821684,5.852100,-5.252594,-7.453811,3.808564,8.210400],[1.521573,-4.732423,1.120973,1.512052,-9.290849,-3.369062,-0.650435,-0.739986,1.834584,-5.917288,-6.339351,0.126044,-5.176155,2.424548,-3.932899,0.647892,-0.003769,5.553632,-5.291881,8.956277,0.211983,-8.453938,-5.295330,-4.611070,0.233070,-6.811093,-3.927424,-1.125140,-6.110127,-2.080393,-9.993469,-1.684350,5.307593,-7.857376,-8.231135,-5.285646,9.236202,5.978200,2.725009,5.369273,5.632856,-3.853403,8.293103,-9.902515,6.809301,-9.749405,3.509852,-9.753656,1.353307,-8.057233,-8.894485,8.859832,-3.366547,-6.380942,-6.574510,-0.756967,6.349454,8.210283,6.818217,-0.207431,-5.858897,-8.803928,-0.486862,-6.123683,9.863737,4.635425,5.048341,7.114613,-0.997173,-8.487953,6.328315,-4.672880,2.395935,9.043684,7.135902,7.066995,-6.862417,5.275049,1.074297,-3.255308,9.195710,-0.576432,4.998773,-1.513701,5.379278,-4.155868,6.994053,-2.501748,9.677791,4.144403,2.764306,-5.986814,-7.934865,-6.949057,-5.096330,-5.050416,8.013388,-2.287714,-1.068834,-9.015635,1.747932,-4.248526,6.038665,-2.422372,-1.797715,7.232813,-7.550508,9.496037,-3.268367,-9.926973,9.875903,-8.999978,-4.394135,3.837614,5.942125,-2.120413,-3.700583,7.817649,6.037595,-4.802377,8.687734,-2.931971,-0.568938,-4.507056,9.559132,4.048397,3.585078,0.688948,-3.504862,-6.431351,-0.185335,6.733330,6.016158,-1.076543,-2.160030,-8.785433,1.437323,4.162078,-4.416346,-8.075140,3.289995,-0.599526,4.911612,-3.502082,-2.105312,3.560545,7.937477,-1.082940,3.228831,-2.169570,7.734884,3.404182,8.551605,-0.989546,-9.648371,3.533511,-2.582868,-3.896727,-2.784208,-8.697792,0.393798,8.303328,-8.297057,8.657456,7.558363,0.150352,-6.841673,8.100272,9.672518,8.635176,-6.043022,3.186833,1.752049,-7.252811,-1.530239,-3.140096,-3.157309,0.237742,4.357121,-0.661608],[-0.556910,-8.029729,-6.836107,-5.658704,3.126584,1.579973,-3.967064,2.430618,-3.812780,9.334893,-2.514463,-5.680891,-2.831235,0.662728,-1.441703,-9.348833,3.868551,7.053334,-0.990975,8.848347,0.169863,8.941427,-9.154554,2.175625,-2.884077,8.409210,3.168214,5.319347,3.267528,9.615254,-5.432653,-5.413485,-3.177471,3.793740,2.761688,3.582698,4.617330,0.691944,1.245746,-6.377552,0.770332,-5.535226,9.646325,-5.270655,-7.443903,-1.118318,3.600278,-8.943570,-3.246602,-6.690326,-1.655748,-0.589985,-6.714230,2.326590,9.701872,6.780715,-0.667607,2.635091,0.131307,-0.192355,1.871897,-3.161391,-0.612636,3.105801,-5.355644,-1.964231,9.434516,-2.983927,-7.939019,5.326728,4.075689,8.883302,-1.190325,6.549234,-8.833033,5.539814,-9.981961,2.063581,-4.660572,4.027606,-9.536770,4.785504,1.587937,-3.199358,-7.469512,7.687253,-6.953035,6.615534,5.342974,7.014086,-4.142587,9.443518,-4.579488,1.896089,4.596220,-1.241141,4.531819,6.652034,2.277403,-4.637698,8.495237,-5.944777,-6.609541,-0.386831,-9.851785,-7.472582,-4.376249,-0.669873,-8.292830,8.012972,-3.954817,1.729444,-2.140425,-4.697367,-3.447863,4.466873,-6.446020,-8.249128,3.578798,-8.796341,-9.911694,-5.673473,2.804530,3.876610,7.656880,7.029100,-2.938984,2.131623,-8.569852,0.280588,-7.711279,-0.470010,-5.200116,-1.135647,-2.779391,6.568331,1.736206,2.359449,-6.972470,-1.815804,-4.307651,-5.005412,-2.507390,9.126983,6.848101,-6.689270,9.004587,0.462364,0.824023,1.546099,-5.249643,-3.050015,-7.838720,-8.852337,-2.587971,-6.248732,6.457782,-5.958341,-3.773660,-9.092840,-8.469497,-7.597654,9.285314,3.279852,0.966931,-2.869991,0.912627,3.260861,7.455953,9.213601,-4.269343,-2.111832,-7.388481,2.078841,-0.982818,-8.431778,-0.542792,-1.283378,-8.876613,-3.877487]], dtype = "float64")#candidate|6331|(4, 180)|const|float64
call_6330 = relay.TupleGetItem(func_5170_call(relay.reshape(const_6331.astype('float64'), [16, 5, 9]), relay.reshape(const_6331.astype('float64'), [16, 5, 9]), ), 0)
call_6332 = relay.TupleGetItem(func_5173_call(relay.reshape(const_6331.astype('float64'), [16, 5, 9]), relay.reshape(const_6331.astype('float64'), [16, 5, 9]), ), 0)
bop_6333 = relay.multiply(call_6322.astype('int16'), relay.reshape(call_6318.astype('int16'), relay.shape_of(call_6322))) # shape=(6, 9, 1)
bop_6336 = relay.multiply(call_6323.astype('int16'), relay.reshape(call_6319.astype('int16'), relay.shape_of(call_6323))) # shape=(6, 9, 1)
func_4342_call = mod.get_global_var('func_4342')
func_4343_call = mutated_mod.get_global_var('func_4343')
call_6339 = func_4342_call()
call_6340 = func_4342_call()
output = relay.Tuple([call_6324,call_6330,const_6331,bop_6333,call_6339,])
output2 = relay.Tuple([call_6325,call_6332,const_6331,bop_6336,call_6340,])
func_6344 = relay.Function([], output)
mod['func_6344'] = func_6344
mod = relay.transform.InferType()(mod)
output = func_6344()
func_6345 = relay.Function([], output)
mutated_mod['func_6345'] = func_6345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3732_call = mod.get_global_var('func_3732')
func_3733_call = mutated_mod.get_global_var('func_3733')
call_6357 = relay.TupleGetItem(func_3732_call(), 0)
call_6358 = relay.TupleGetItem(func_3733_call(), 0)
func_3573_call = mod.get_global_var('func_3573')
func_3577_call = mutated_mod.get_global_var('func_3577')
const_6364 = relay.const([-8.293096,3.875375,-7.563652,9.424541,-3.358835,-4.187312,-0.020013,6.494725,-5.779081,0.462660,-6.965157,5.128199,-2.162086,-4.710825,-2.606249,9.765659,8.022620,1.423968,6.903915,0.383190,3.713374,9.572919,-9.886171,-1.961392,1.069159,6.409832,4.045111,5.886618,-4.877475,3.930624,3.739973,8.564230,-3.564757,-9.316555,-6.053784,9.150035,6.062153,9.894238,-4.275157,-8.229923,4.759277,8.091435,6.421350,8.414629,-0.756924,-1.606604,0.495288,-8.548696,8.324209,9.934031,-3.888812,1.926075,0.778594,1.309159,4.358079,-3.928293,5.005120,6.641050,-9.037361,2.811629,3.552615,-4.336366,9.817077,-3.112602,9.580735,-6.330733,2.028150,0.348561,-9.779914,-6.469828,4.622837,4.328385,-6.011577,6.639485,7.667236,9.088309,-0.078931,3.977843,-1.103082,-3.424655,3.006905,1.078563,6.068548,-0.795982,0.544510,9.990303,2.112000,6.939692,0.584107,-3.712641,1.541789,4.034221,-6.063068,-8.519101,6.323861,-4.600676,1.967633,0.620540,2.037783,0.218675,-8.451571,0.160798,4.987277,2.014839,5.690566,7.854475,3.684009,-3.704347,2.595617,-1.627204,-0.264007,7.003701,-8.763201,-6.682247,-6.596323,-9.186317,-7.197524,-3.135528,-9.425682,-2.493970,-3.189779,6.395228,-4.698050,9.766371,-8.364519,-1.400610,-9.171983,-7.733160,-2.128489,-9.526917,-7.883684,7.797102,-3.864430,-3.278229,2.303214,-9.477375,-3.482132,6.412840,-8.361653,-9.860921,-8.644193,1.198770,4.342469,6.389215,-3.447516,-5.903016,-8.891218,3.060957,-4.356031,-3.550976,-2.234295,9.562432,-1.445614,7.126372,1.043755,1.816102,6.854968,-4.072343,-9.670320,-7.972612,-8.988655,-4.148579,9.373527,1.424200,3.223652,8.161507,1.821149,8.896939,-5.593988,-7.287805,-5.649419,2.386866,-6.039897,-6.833039,-7.044092,5.723800,-1.555544,4.189662,2.526194,0.895465,-7.148123,-4.911906,1.162022,5.993529,-7.287995,4.006482,1.205447,-4.401615,-2.413017,5.971096,-2.561970,5.324878,-9.131889,-9.468384,-4.073063,-9.588510,-4.074807,-4.207265,-0.275545,9.791971,2.340083,-6.735961,-1.500553,-5.165725,5.683070,6.659840,-9.181546,-1.530206,0.170356,-2.568934,-2.217418,5.871827,0.109452,-6.803248,6.659827,-2.139528,-6.084882,-5.732425,-9.345443,-1.263600,-8.574346,1.004755,-4.775830,0.754977,-7.676517,9.534260,-6.465597,6.933848,-7.074752,-5.893471,-5.250268,-3.575163,2.572151,5.725240,6.674390,6.336984,9.129273,-5.497906,7.059320,0.266278,3.615904,-3.782614,8.804953,4.047274,-0.826146,-1.049558,5.204663,4.469994,3.544127,-6.399770,-8.242743,-1.610511,-9.734387,-3.939811,-6.643167,4.965624,-3.738728,6.177434,4.683478,-5.093149,-6.625188,-6.655588,0.238455,-7.806894,-7.385894,-4.176138,2.042640,-7.774693,5.616348,8.970639,6.061847,-9.441687,-1.747463,6.351857,-2.368810,8.282761,-4.872577,-3.126409,-2.058982,-6.877661,5.650922,7.519764,7.741096,-4.422142,-0.235047,-3.503621,-0.357352,-7.317715,9.857620,0.918206,2.518259,-8.174513,-5.156448,7.372039,-8.274282,-9.078683,-3.671940,-5.214691,7.349965,9.709998,-1.145506,9.257169,-7.595364,9.146763,-2.070917,7.539710,-0.132705,3.172676,5.084595,9.639943,7.142836,1.786266,8.244488,0.928521,2.087783,3.178598,9.547308,-7.370645,-0.979027,1.616525,-4.563148,-9.157458,-8.042170,-2.942405,-2.938662,1.849094,7.347815,-5.674385,-1.544882,9.526445,-7.157983,7.862250,-2.708067,1.467597,-8.336473,5.074201,8.527318,5.052912,4.866216,2.901301,7.306127,9.582776,-1.866025,5.898580,-8.150632,-1.108784,1.713998,-0.533510,0.976799,-5.734402,-8.982437,1.651092,0.111310,2.032362,-1.544620,7.972737,-2.784044,-2.664185,-6.407827,0.764684,-8.014060,5.127436,-3.383697,0.364553,2.295908,0.611395,8.009140,0.436400,5.279180,-4.841040,-9.318025,7.445668,-6.255705,3.605319,8.819252,0.140991,-5.196110,-6.771749,-5.941736,-9.966877,4.701649,6.719195,-2.346577,-4.649090,-0.161289,4.319828,-6.666173,1.622011,-2.756994,7.069176,9.677310,-3.992609,3.284480,-3.109924,-7.749289,5.920283,-9.458676,8.980174,2.524201,-2.620392,-1.718783,-9.819851,-8.559806,4.295775,-8.292041,3.784647,-9.184636,8.737839,-9.906678,8.158109,0.141029,-8.824519,-9.598559,-6.282129,6.215920,7.314570,9.155062,-9.033631,2.269945,-4.764387,-1.129311,6.744450,1.064890,-9.631140,3.688494,2.973222,-6.672030,-4.769075,5.898210,5.491965,-1.731100,-7.590016,-6.080613,1.587682,-7.045326,-8.879032,0.028217,9.745814,-1.303425,-9.784766,-8.425136,-1.221822,-9.373065,1.907364,-4.174631,-5.878011,2.464842,-2.080533,-6.128988,7.286886,7.663711,2.125610,9.058295,-6.933060,1.757516,4.774381,-0.029768,-5.902162,9.462563,-4.742357,-2.708284,-1.225252,3.024896,-4.898301,-5.260665,-0.291731,4.561488,6.568564,1.510415,-9.461199,-4.423455,-7.449479,-9.985348,7.297316,-2.168979,4.272789,8.637917,-5.111765,-3.757693,-9.329532,-7.829035,-0.428523,-8.807159,-6.024700,1.978816,-0.066809,5.100705,-5.882268,-4.125850,6.111319,1.437104,1.518827,-0.539986,6.978512,-0.502914,6.246724,2.084837,-3.087281,6.263851,6.515981,-3.000526,4.005114,-0.267134,8.100170,2.646376,1.421957,2.425620,1.494296,-3.683419,-8.454641,-5.837323,1.362769,9.847353,-9.201041,-1.032159,-7.865376,3.517036,-0.060108,3.338223,-4.129419,-5.115553,-7.671335,4.795170,4.401720,-8.610309,-7.766586,-7.365879,-9.695414,-4.051074,-6.214033,-0.690530,1.513341,-6.248212,0.040164,5.272979,7.887671,2.906688,8.153246,0.887677,-4.881411,-0.068247,0.349949,-1.060373,-6.432935,-1.344949,-6.476605,8.816394,-1.164414,2.376075,-2.866609,-5.353502,7.657501,9.149221,-9.987341,1.119789,-6.252992,8.548466,-0.377993,-7.522521,-0.062010,-9.463928,9.697905,-0.168136,4.756233,-5.271310,-3.466846,1.769500,-9.680349,-1.256997,-8.719520,-3.199839,6.801684,-7.952933,5.172671,2.906432,4.514953,-5.699827,2.326518,-0.245245,1.077010,-1.696341,4.066357,9.779120,-5.970214,-2.714394,5.143707,-8.416686,7.755142,8.452787,6.856954,-1.662774,-8.016909,4.675333,-7.445313,-1.606609,-8.119564,0.677898,2.115088,-0.330837,7.330088,-7.645264,3.803475,3.245491,6.960443,4.366853,4.317557,6.461911,8.182572,-0.127308,-8.527371,0.518837,3.175317,3.598234,9.029787,2.200402,-2.902070,1.567374,-9.997855,-3.439221,9.293336,-7.965244,-5.921778,-7.702319,-8.155122,9.441906,-9.794747,-0.507439,1.756903,-4.777446,2.220159,7.493646,9.706615,8.018924,-0.583174,2.739940,3.226736,-8.192749,7.286191,5.522531,8.885083,-3.715000,6.315257,-9.229589,-9.175989,5.917175,-1.782466,-6.923234,-8.580995,2.287790,8.459248,-7.095632,-6.712015,-4.144293,-6.275914,2.895718,-3.094020,4.449605,-4.267097,4.875418,-8.691867,-8.026603,2.515629,-6.036538,-6.759440,-9.758877,-1.337251,2.101503,-2.048363,-2.007762,4.286847,-7.109671,5.436844,-0.060030,9.372680,3.960112,-4.880853,-9.140932,-4.028896,4.469836,-0.473920,-1.719806,2.997227,7.747288,-3.523445,-4.498841,-7.545434,1.892395,-7.661198,7.893334,2.956582,6.599666,8.757535,-6.098159,-7.274747,-9.089596,8.055913,9.836414,-9.624686,-6.278624,-8.266997,4.932175,-9.891066,-6.892185,-9.171355,-8.109829,-5.464494,6.044014,-5.749204,9.226678,-5.235793,1.462402,9.134128,-8.978252,-4.229789,-7.744381,9.298285,2.206918,-4.968250,-2.007697,0.178390,9.334532,-2.850293,8.639809,-0.652504,4.588478,6.834086,-4.662011,0.466452,-6.626050,-8.555143,-3.849012,-6.383187,6.420188,1.242817,7.814626,-0.189346,0.372709,-0.959298,1.079472,2.026300,9.388126,-5.438762,6.902030,-5.243547,0.204442,-1.844477,-6.705027,9.222344,-7.469314,9.374978,1.099089,-0.748418,-0.937343,-1.995082,5.573145,-3.474672,-7.299275,-2.479454,-1.819289,4.010716,5.421268,2.799391,0.013198,4.101529,0.963422,7.676425,4.036965,3.661276,-2.496233,1.086895,-6.856476,-7.331537,-1.100666,-5.983649,4.734497,-3.217601,-4.988521,-6.698039,-9.374352,7.068414,-5.823838,5.856369,-0.967437,3.757600,-1.668062,-1.928977,-6.709872,3.221647,2.482178,9.739337,2.825252,-4.663542,0.141418,2.957716,-9.155242,-3.982989,-6.995306,-2.236336,-5.899881,5.888859,9.308028,8.185273,7.595266,-5.695143,4.740384,3.846708,-6.007523,-9.033532,8.400416,9.425965,-8.533914,-3.966854,4.471267,5.159825,0.987755,-5.038020,-2.029798,-5.936506,-3.074557,-4.741276,8.962361,2.549243,3.816220,9.477742,8.908190,3.150192,-7.773768,-6.800042,-0.927987,-6.609688,2.288991,-0.643446,-7.221257,9.499859,-4.066548,-6.693424,4.192736,5.667856,3.431972,4.731843,4.106973,-8.477228,5.306261,-9.173285,-5.070806,0.807802,3.300673,8.801784,-4.916995,3.967665,3.632116,-5.552994,5.892616,6.550323,9.523719,5.886917,3.404782,-4.498500,5.985357,7.930455,9.613806,4.841623,-8.364247,2.685293,6.325731,6.651395,-2.748394,9.585684,4.320677,8.907979,-2.523518,-2.789988,-3.039597,-6.600516,6.779048,-4.833539,-6.472478,4.356547,-5.132578,2.955180,0.060325,-5.725463,7.316917,3.826715,4.724876,6.462852,-8.115299,8.316351,-1.928167,-5.813518,8.435161,9.548988,-9.344196,1.791709,2.328959,-4.427463,0.801794,-2.230534,-8.748978,-8.290779,-8.105774,8.245311,9.514280,-7.081453,-1.224707,9.532742,9.704016,3.902552,0.123365,-8.643976,-9.531384,-8.893374,-6.095246,-1.979964,-5.275418,-4.100095,-9.004194,1.862695,-9.460329,4.735248,-6.614845,3.232533,0.190112,8.265564,5.448162,0.876087,-7.927847,1.298892,1.491615,-7.499843,-7.421758,-4.662004,-9.118209,-8.524601,8.192460,-4.114066,-7.490412,2.546622,-4.321954,9.591234,3.795069,9.304360,-4.400295,-1.092095,-6.659401,4.417184,1.371528,5.067755,-1.503559,-5.322339,-6.481483,5.017778,-5.339619,-4.554039,-8.452320,-5.330472,1.833565,3.001868,4.055609,0.926925,-5.399743,-2.245765,-9.451435,-6.878479,-5.502911,7.379947,5.121403,6.957930,0.970712,-2.053196,1.781673,2.706301,5.764491,-7.699999,-8.543956,-9.312022,6.688588,-2.064055,9.501374,-1.940115,-1.911635,-0.546967,-5.436426,8.518415,9.327159,1.541197,6.282511,2.139271,-6.929532,1.345124], dtype = "float64")#candidate|6364|(990,)|const|float64
const_6365 = relay.const([8,2,-5,8,-2,-10,2,-1,7,-7,-8,6,-7,-9,-10,-10,-2,-6,9,-6,7,-5,-2,-5,8,-5,-10,-2,-10,5,5,-6,-8,-5,6,-8,-7,-3,1,7,9,8,5,-8,10,2,-1,-4,3,-7,-9,2,-10,-7,5,2,6,-7,9,5,-3,7,-7,2,-8,-9,-4,7,9,4,-7,-10,-4,7,4,-3,9,10,10,-8,-1,-7,7,6,7,-10,6,-9,-10,-6,-8,-3,10,5,-3,8,9,8,9,-3,-6,3,6,-4,8,-1,2,5,5,-2,4,-4,-7,-2,8,7,2,-8,1,5,4,8,-9,-8,5,-5,-1,-6,3,9,5,5,-3,6,-5,-3,-6,-4,4,-1,1,-1,-7,3,5,1,-5,5,-9,3,-1,-2,-9,-2,-10,3,-9,6,-1,5,-10,-4,-5,4,-2,-8,5,-2,8,-7,-6,-10,7,2,4,2,6,-10,6,4,2,5,-4,2,-10,10,1,3,-7,-6,4,4,3,-2,-9,1,10,1,-10,8,5,-7,10,-4,9,-6,7,5,-6,-3,7,10,-7,-3,-7,-10], dtype = "uint16")#candidate|6365|(216,)|const|uint16
call_6363 = relay.TupleGetItem(func_3573_call(relay.reshape(const_6364.astype('float64'), [330, 3]), relay.reshape(const_6365.astype('uint16'), [216,]), ), 0)
call_6366 = relay.TupleGetItem(func_3577_call(relay.reshape(const_6364.astype('float64'), [330, 3]), relay.reshape(const_6365.astype('uint16'), [216,]), ), 0)
const_6370 = relay.const([-2.032930,-3.607216,4.573011,-1.114990,-7.515269,-1.544569,5.593727,9.904703,6.787539,-6.473614,-7.627108,-5.492412,-9.820815,8.879893,-6.242301,1.630477,2.302203,1.969984,-4.080023,1.680558,9.677623,4.239642,7.983984,-8.036665,2.805429,-7.414211,7.918271,-0.906214,4.724967,-7.525978,4.744904,6.083878,5.884824,8.743482,-4.047715,-8.316124,-7.575093,-1.247745,-4.668876,-9.780240,-9.234540,5.997276,3.698070,6.425710,5.035935,-7.792146,-3.809069,-8.766209,1.744614,0.869393,-6.391199,8.740497,4.278950,-8.941877,-8.732135,-5.053436,-5.895897,-5.056590,8.528440,-8.227654,8.828448,9.198284,-9.076193,2.356637,5.934528,-5.590527,-8.649858,1.542062,7.778713,9.588786,-1.479118,-1.541336,6.849431,0.284120,7.229113,-5.076181,-6.693568,-6.906561,6.155901,-2.308222,-9.104055,-6.476162,5.542820,-7.026461,-0.642664,-3.823577,1.351732,0.445933,-6.823883,-0.155529,-4.896235,-1.931281,-1.191379,-2.384667,9.941545,5.207540,7.276188,-5.494875,1.434512,3.038010,4.306288,-2.208799,3.753369,3.131814,-2.957160,8.750934,-0.879668,-8.366664,-8.066260,-3.701142,8.313076,7.046039,-7.466286,4.125486,-3.494797,2.701420,7.125920,8.894203,6.841789,-9.993772,-6.275536,-8.571845,0.145692,3.130670,8.627474,6.896489,9.567255,5.644848,8.622756,6.698659,-4.294013,2.387084,8.880955,-2.048995,9.651814,-8.021331,-2.180310,8.557256,6.296179,1.910425,-2.959876,-1.350617,6.132873,4.706944,-6.639458,-1.164431,8.427414,-9.570801,-9.084461,5.547712,2.812678,0.944779,5.008773,-6.333108,-8.772849,2.157576,-9.683758,-5.424648,-5.989264,-9.002705,8.968938,5.143106,-5.715492,2.441208,-6.033063,2.146111,-1.090551,5.670753,6.768986,6.637735,1.358758,-3.051858,-3.104588,0.249139,7.094545,7.554955,-1.959145,2.266459,3.535425,-0.616805,-7.202381,8.951529,-2.864078,-2.838878,-9.108021,1.389112,-6.025215,-0.815049,0.244140,2.973210,2.448628,1.160107,9.225513,1.154267,3.348784,-1.607951,0.622979,-1.869274,-4.532363,8.251938,-4.552055,-2.543818,-7.786302,3.088580,-0.864433,-4.129483,-5.357580,-4.698863,9.754774,-2.816268,9.079438,-6.068375,-0.485915,-2.083497,5.863546,-3.070574,8.480987,-3.237801,4.370483,6.372371,6.100880,8.581116,6.107189,0.065402,9.449879,2.519151,2.991127,6.570847,-6.008882,-6.765409,0.095656,-2.951394,-9.868692,5.185827,-8.142003,0.945042,-1.705204,7.857807,-5.697521,-0.391162,-9.945988,-8.922872,3.837445,-6.731299,-3.224456,1.163420,8.235466,-9.260823,5.568770,5.968042,-4.341593,1.244045,2.288850,-4.100535,9.831467,-8.975632,-7.058811,9.691526,-3.156633,2.434944,0.619428,6.473272,-5.868274,-8.817458,3.675185,-8.653765,-2.919100,-7.461601,-9.717861,-9.336657,-4.547362,-5.500281,3.350140,-9.746711,7.851965,-6.352416,7.432871,0.171078,6.548031,1.643652,7.354720,-7.200930,9.377310,2.416545,8.501249,2.773344,-1.266453,-2.901634,-7.754477,-5.401428,2.327878,-6.814338,-9.911079,-6.250428,3.478384,-9.176353,5.953868,-0.040192,4.026998,1.729822,1.567893,-1.763477,-3.401100,-5.646445,-5.604731,-4.775869,0.770894,-8.627984,-5.354344,-6.501349,-0.288728,-0.570705,4.203703,-5.048573,-7.255502,-6.466670,-3.125788,-2.906165,8.036288,6.416701,8.876930,3.206404,-3.215402,-3.869508,3.950435,-3.265429,6.716106,1.267323,-6.842063,5.908129,6.180432,-2.722381,4.163667,-2.092838,1.789718,-8.551393,7.589278,-5.496109,4.185486,-7.391308,9.110753,-2.905661,7.801957,3.912881,7.242496,8.072456,-4.932977,-0.172512,-4.533175,7.016030,7.962685,-9.239382,8.935787,-6.959986,2.494529,0.637023,-5.122768,1.264900,-2.017723,2.475501,3.818786,-4.695138,-5.550601,1.228155,-3.438103,7.265528,-5.094380,-2.860225,-9.683296,-8.038585,-8.584416,-4.024502,9.392244,-5.915367,-0.914936,0.952945,-9.225832,-4.094624,6.976393,3.285741,-1.372626,3.963568,-5.630326,-2.923609,-4.489958,-2.748005,4.519816,7.842361,-8.582686,-5.519939,6.915476,9.285847,5.139781,3.278643,0.751325,-3.203126,7.378674,6.147152,-6.619346,-5.934885,-1.486383,1.173524,8.295824,5.944377,-1.678943,-3.699676,5.804385,-4.450151,8.178678,2.977185,-9.893462,-2.298448,7.529559,-0.530174,-3.353302,8.065621,9.447636,-9.117896,1.633299,4.683400,0.935806,-4.699439,4.973856,5.421876,-1.938465,8.266989,9.856695,-7.026978,7.219076,-4.305320,5.691516,8.173071,-5.265589,1.792171,5.574707,0.353256,-2.890226,1.449597,-2.534221,6.963964,-0.131074,-9.107978,-7.246823,-5.111488,9.253316,8.587010,-6.411318,9.473953,-4.549349,8.417462,3.013032,-5.342168,-6.010330,1.597869,7.541076,0.894417,-7.895897,0.637174,-1.321498,-8.081883,-7.399523,-9.286385,-5.338135,3.242594,-0.586572,-1.890545,1.892834,9.972707,8.612578,3.449955,4.073392,-1.529791,-7.384099,5.656867,6.501293,-2.540204,1.769006,9.528580,-8.797798,7.228093,2.825357,6.710379,-4.180033,-9.195793,8.853201,-4.494901,-7.778090,-5.900569,-7.254794,6.819920,-5.948052,9.570791,-7.530292,4.729149,9.447133,1.414967,4.223630,-6.116226,1.142796,5.580819,-6.923625,-0.096320,-9.780585,8.165864,-4.469008,-9.167661,-4.983910,-9.605408,-9.971692,7.891816,-1.554391,-9.357795,4.877905,-8.379549,9.988378,-9.700866,0.361125,-1.331967,2.136695,6.744442,-2.167443,-2.854316,4.387549,0.127222,4.264158,-5.831298,2.177772,8.664513,0.548927,-2.402514,2.796021,-3.897684,2.264561,-0.318515,-8.118568,-2.865733,9.430321,4.597606,9.385376,6.618166,2.848949,3.283439,-1.328710,-0.317232,-8.954657,1.454876,8.078461,-0.606079,-5.765729,9.781098,-3.108475,-2.692200,7.043221,2.856916,-9.613776,0.340002,-0.435719,2.087490,5.481088,-2.607210,-9.917702,6.647759,7.153500,-3.275391,-8.119702,-7.811487,0.539154,-4.647926,-3.105538,7.356549,-5.588271,-6.724709,2.496671,-3.808233,6.405996,-4.904755,-3.087600,0.077266,-0.832514,7.521962,-3.628426,8.464609,-6.370189,-6.588545,5.740914,-9.919207,-4.825128,-6.307711,-8.186718,-4.315748,1.900072,7.783558,-2.602419,6.830506,-4.865821,8.422740,-5.954938,-2.247149,-9.837116,2.864323,-6.324762,-4.114964,3.188452,7.743658,1.875139,5.997229,-0.437712,-6.937294,-5.230607,6.704310,-7.492070,4.000865,-6.515311,-8.245884,-8.746354,-2.548294,3.618134,9.875231,-4.961246,-5.914627,-7.966192,-4.264763,-4.953809,1.343713,2.520407,7.123306,0.167447,-7.920114,-7.811744,-7.257884,3.279783,8.890723,7.909344,1.374364,8.551964,0.001229,5.013302,6.489176,-7.263094,-1.848168,6.140861,-8.409905,-0.847048,-3.873781,4.241240,0.395444,-9.106481,9.632372,1.594734,8.214215,-2.279183,-1.448413,-5.932966,3.817649,-3.735249,-1.422707,9.260467,-5.907030,-9.303696,-3.810765,-9.665861,-1.005026,-3.578954,-8.487392,-1.670861,6.470510,8.742769,-5.597590,1.702800,-1.965160,-8.137451,3.138177,9.443197,3.233170,2.323779,0.222141,-7.588780,-7.680647,9.992239,-3.070786,-6.739090,-2.759435,-8.950030,5.084933,-6.801160,6.674338,9.149922,-1.965834,5.445105,-5.908900,5.598976,-4.346056,8.867809,7.462442,4.983513,-7.830263,3.483689,8.050466,3.260923,0.516702,1.564456,-5.390979,5.129881,7.406920,9.835697,6.037033,-2.730457,-7.848864,-4.748147,-2.976235,3.156896,3.658652,-0.601817,-1.452270,-3.575512,7.380233,0.203452,-5.751184,5.868111,9.560034,7.961412,5.902723,-8.232158,3.624824,9.946027,-2.106725,-4.950818,6.036136,3.990212,-0.171316,7.414034,6.670676,-3.920051,-1.779158,4.457296,-3.562935,-8.836716,-4.250725,9.285637,-5.255721,-8.183743,6.004096,-1.584013,9.255978,7.297373,8.052447,6.959247,3.262755,-2.082066,3.898964,8.445350,-5.930001,-8.324187,-8.468837,-6.509407,-9.970228,0.194301,9.507082,6.562056,4.781131,0.351264,9.132521,0.049779,-4.379755,-2.661472,-1.547683,2.155402,-0.825788,4.860687,6.515916,7.892621,-9.527944,2.763162,-5.457707,-7.917271,4.312282,2.853318,9.809708,3.853906,-9.896903,3.668223,0.637545,-3.542180,-9.373710,-7.225506,9.989964,-7.005047,5.154269,-5.991413,-4.862492,4.968876,-2.146455,-6.245139,-1.914841,9.382756,-4.165721,3.683460,9.835463,0.237070,0.841810,2.490424,1.055250,9.622320,2.650711,-6.022106,-1.952280,-7.565821,-5.037040,-5.506272,-9.076418,-1.265818,0.429445,2.005066,8.668763,-0.943459,-4.299095,1.194273,1.598271,-1.699965,-0.626162,-7.525478,4.180362,8.175468,-8.015020,-0.521623,6.878678,1.082855,-3.417863,5.550446,4.750302,-8.810018,9.705451,5.824441,-6.330108,-4.821652,-1.814868,-3.050644,1.391179,-4.061088,1.230571,-2.851545,9.003122,4.030888,-9.168819,7.897682,7.955199,-4.683610,8.898306,5.340171,2.450366,3.460399,5.196357,6.689191,7.787808,-7.388028,-1.878156,-9.688326,-6.810037,6.293464,-6.490153,-1.651688,3.152295,3.958887,-7.861010,-4.240457,-1.860527,4.075756,3.392990,-8.605774,-1.779844,-8.284294,4.684800,-2.307222,-3.523212,8.046503,-4.805455,-4.862282,-7.325435,2.749338,1.273883,-4.821013,1.235020,6.195607,6.268301,6.361401,-3.989110,-4.980218,-4.188116,6.080325,6.677118,-9.543485,-7.232893,8.266830,-1.890254,8.133785,-3.573329,5.909429,4.940557,6.735948,-0.603044,4.355083,-2.481773,-5.938819,-9.680447,3.619745,-0.064381,-6.178790,9.860667,6.599562,-3.657939,2.293330,5.525117,-3.465218,4.943327,2.985890,-1.038871,-2.868035,-3.069257,-7.497689,-6.777374,-6.495996,7.466369,1.919564,-6.875788,-1.230222,8.704315,-6.011309,-1.744830,2.157435,-5.852020,7.763461,1.330382,9.912244,-6.745205,2.772007,7.393144,-7.613116,-5.332066,9.740549,-7.905897,7.566086,0.245260,-8.967897,-3.821574,3.976754,-0.307684,6.982285,-4.717647,-5.495197,-2.241207,0.161809,8.430926,-6.763142,6.508576,6.616004,4.221747,7.774314,-5.915345,-8.324763,-7.377953,8.821257,-3.698363,-2.344312,7.218636,-6.651151,-5.987770,3.389704,7.867902,4.371855,-8.873531,-8.196273,2.666737,-6.981029,-2.377840,-2.422751,5.202969,5.422335,2.974201,-5.830707,-8.645764,-4.137335,2.544669,1.393527,-0.864081,6.651223,3.675846,-7.689809,-3.818601,-0.382535,-1.555867], dtype = "float64")#candidate|6370|(990,)|const|float64
bop_6371 = relay.bitwise_or(const_6364.astype('uint64'), relay.reshape(const_6370.astype('uint64'), relay.shape_of(const_6364))) # shape=(990,)
func_5459_call = mod.get_global_var('func_5459')
func_5462_call = mutated_mod.get_global_var('func_5462')
var_6375 = relay.var("var_6375", dtype = "float64", shape = (252,))#candidate|6375|(252,)|var|float64
call_6374 = relay.TupleGetItem(func_5459_call(relay.reshape(var_6375.astype('float64'), [7, 9, 4]), relay.reshape(var_6375.astype('float64'), [7, 9, 4]), ), 1)
call_6376 = relay.TupleGetItem(func_5462_call(relay.reshape(var_6375.astype('float64'), [7, 9, 4]), relay.reshape(var_6375.astype('float64'), [7, 9, 4]), ), 1)
func_3042_call = mod.get_global_var('func_3042')
func_3044_call = mutated_mod.get_global_var('func_3044')
call_6382 = func_3042_call()
call_6383 = func_3042_call()
func_6005_call = mod.get_global_var('func_6005')
func_6006_call = mutated_mod.get_global_var('func_6006')
call_6407 = func_6005_call()
call_6408 = func_6005_call()
func_3927_call = mod.get_global_var('func_3927')
func_3929_call = mutated_mod.get_global_var('func_3929')
call_6409 = relay.TupleGetItem(func_3927_call(), 1)
call_6410 = relay.TupleGetItem(func_3929_call(), 1)
func_5523_call = mod.get_global_var('func_5523')
func_5525_call = mutated_mod.get_global_var('func_5525')
call_6434 = func_5523_call()
call_6435 = func_5523_call()
func_5421_call = mod.get_global_var('func_5421')
func_5423_call = mutated_mod.get_global_var('func_5423')
call_6437 = relay.TupleGetItem(func_5421_call(relay.reshape(call_6363.astype('uint16'), [6, 9, 15])), 0)
call_6438 = relay.TupleGetItem(func_5423_call(relay.reshape(call_6363.astype('uint16'), [6, 9, 15])), 0)
output = relay.Tuple([call_6357,call_6363,const_6365,bop_6371,call_6374,var_6375,call_6382,call_6407,call_6409,call_6434,call_6437,])
output2 = relay.Tuple([call_6358,call_6366,const_6365,bop_6371,call_6376,var_6375,call_6383,call_6408,call_6410,call_6435,call_6438,])
func_6444 = relay.Function([var_6375,], output)
mod['func_6444'] = func_6444
mod = relay.transform.InferType()(mod)
var_6445 = relay.var("var_6445", dtype = "float64", shape = (252,))#candidate|6445|(252,)|var|float64
output = func_6444(var_6445)
func_6446 = relay.Function([var_6445], output)
mutated_mod['func_6446'] = func_6446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_6476 = func_3204_call()
call_6477 = func_3204_call()
func_292_call = mod.get_global_var('func_292')
func_297_call = mutated_mod.get_global_var('func_297')
const_6479 = relay.const([3.769289,8.389756,-0.503578,-5.612409,4.687761,-8.295308,5.712011,0.173544,9.891700,7.825522,1.668612,-7.865862,6.399834,2.347460,-8.104802,1.119471,9.017021,-1.543726,-1.683404,6.075074,-5.641907,-2.543216,3.660970,-1.412973,1.434812,-3.233934,-5.834296,5.025607,-8.990871,-0.735630,6.798200,8.097876,4.378148,-5.426949,-4.928351,5.970997,8.337037,6.024396,0.242758,-2.918413,4.464802,8.342044,3.606817,1.162382,7.354983,-2.130585,5.379762,-7.351346,-8.122691,-7.807262,-7.073961,4.889670,-9.119644,-0.995727,-7.950932,-9.717209,4.639069,-4.521691,-2.594696,-9.997514,1.862664,-9.211756,-3.619913,0.430352,9.982264,-7.386685,0.492047,-6.308761,-2.067521,-0.047015,9.217949,-2.433312,-6.953056,6.666785,-7.311972,2.615156,-0.449734,1.463824,-6.348335,6.658245,-6.915928,6.808767,4.922380,1.363945,-4.389665,7.696338,-8.130766,-2.015978,-2.447533,5.138308,7.118481,-1.057536,-3.482521,6.539838,6.615643,0.475936,-4.986517,7.481451,-8.414509,2.366258,-4.010003,-2.756507,-1.434386,-0.809269,-7.311360,4.060164,-4.284435,5.656298,5.082283,7.876799,-2.362446,2.289329,0.617136,-1.723219,3.737716,-4.782292,-5.289252,5.045870,3.049744,4.970422,0.921339,8.150443,7.278397,7.881125,0.866982,8.251534,0.249714,-0.326882,5.648007,-4.816515,-0.432472,1.076214,9.133151,0.076517,-7.168642,-7.868625,-6.259246,7.556038,-6.536898,-2.312417,2.119626,1.511679,-7.542068,2.698655,4.548258,9.871382,-7.912483,-7.156313,8.024323,-2.069952,6.580776,0.047640,-5.968612,4.420425,1.984518,3.930583,1.304200,9.906013,-1.909108,4.669902,-6.550636,-0.941060,6.571386,-8.934025,-9.935091,-0.061943,3.151218,1.104977,-3.457403,1.730860,7.791504,-6.960879,9.629794,-1.655893,-5.030434,7.140874,-6.614009,7.111788,8.606001,-3.407559,-6.370650,0.250975,8.558698,-8.910188,5.741426,9.009848,-7.645559,2.631909,-5.111036,9.850141,0.760913,2.234859,-5.214788,-7.221986,2.869026,-3.337271,8.902691,0.116764,-7.795425,4.562232,2.915338,-5.910143,-9.792812,-0.351129,-8.240988,-4.977438,-5.403762,3.809606,-2.729672,-3.835991,9.211372,-9.686739,-7.064308,5.425212,1.475313,-7.057015,7.707637,-6.381843,-8.703480,-5.503502,-5.079598,8.463514,1.995666,-4.657205,-2.304483,3.899976,9.048339,-5.139235,9.402431,-5.563228,-3.666374,-6.498408,-0.864100,-1.096610,6.778613,6.610655,5.110064,-5.725119,7.855446,-5.100904,-5.738812,6.332009,5.431137,6.408113,4.121666,1.245804,9.676969,-7.925637,-5.094891,-5.796932,0.993148,-4.788886,-0.678555,8.008180,3.572618,7.457578,8.092118,7.838719,1.693653,-7.233511,-8.656489,-4.232666,4.827977,6.372506,4.780363,7.689221,2.256388,6.914417,-5.329289,-4.171763,9.462576,4.799875,-0.771647,4.622132,-7.599154,5.816359,-4.766889,-9.952356,-5.847909,6.671788,2.058769,-8.069179,-5.569638,0.879942,7.089348,-2.328589,3.553495,9.312481,-7.844965,7.681022,-7.673465,-4.745752,6.649221,-9.302391,-8.944343,3.271627,-7.203808,5.055746,-0.766499,-5.426233,-8.038567,-0.791553,-7.373319,6.188658,-2.363138,0.040696,9.981812,0.482470,-7.245100,-8.898738,-5.585730,2.578567,-5.093982,7.391981,2.113280,-9.278933,1.157944,7.000256,-8.653281,-5.562752,-5.731489,-4.049839,3.956513,-7.981500,7.130769,7.310606,-4.197261,5.672841,0.215225,3.719633,-3.592120,-0.381337,-7.606119,7.921321,-1.354891,-9.025452,-9.162653,1.377643,-3.026477,7.901393,-6.676814,4.289181,2.900491,0.481966,-8.301708,1.936220,-4.196671,-4.727237,-6.381988,-5.557312,3.922573,4.601904,0.696408,-9.471912,-1.006912,1.288029,-6.761425,9.550008,7.898257,-9.782565,-9.228289,-3.199797,7.167504,5.982761,2.446643,-7.496133,-0.613393,-8.325012,-4.208135,-5.003629,-7.311617,-2.172610,-3.646251,0.521868,-5.434114,6.486331,9.797438,-3.358990,-9.925634,-1.892721,9.947613,6.213097,-9.058292,7.678765,-8.209305,9.597799,2.146473,6.146709,-8.648705,-2.744911,-9.680721,2.746457,3.114273,-3.438044,7.584745,4.741295,4.311078,0.283964,-7.399529,4.451826,-4.074815,-2.172549,-3.298642,5.549034,-2.345619,9.372729,-0.287286,-5.175625,-6.290529,3.110212,-2.692738,-1.659862,9.276278,8.684043,-2.914670,-2.323892,-2.661410,1.275768,-7.152952,3.009727,-9.318905,7.279704,1.634225,-2.261489,-8.676769,9.019659,5.543237,5.027550,8.358287,-0.648387,9.608767,-9.170373,7.634786,-3.989820,7.142257,-6.797381,-6.811666,-8.898583,-1.167016,-9.460197,-1.356556,8.300687,0.988440,0.515388,9.543202,8.679781,-0.600306,-0.848816,3.720594,-9.280684,-3.726148,-7.663283,-0.175209,-8.221297,8.923729,-4.777919,0.942551,0.990995,-7.201212,0.021267,0.560846,-2.320697,3.312423,6.169516,0.206114,5.817115,4.988987,-0.632652,-1.076667,-3.247104,5.308642,8.018778,-2.269099,-8.584661,5.849017,-9.628280,-6.685399,4.224410,-8.190732,-4.656426,-9.202654,6.943580,3.467791,2.617737,8.268628,1.192097,-6.274230,7.793632,-8.178185,9.269445,9.338999,-9.842416,-5.296954,3.598394,-5.318984,-7.357692,1.163102,-8.311853,-4.289170,-0.117748,6.253240,-3.913851,7.041706,-7.300498,9.589281,5.905599,-8.989508,-2.716267,1.616384,4.002014,9.727352,-5.908506,3.722543,6.279389,6.276257,8.243226,-7.096850,-2.960395,0.872664,1.150711,1.344731,-5.930536,-6.496631,-6.431615,-7.322778,1.218134,-5.638241,0.609700,9.675518,2.188905,-4.063904,7.802835,-3.832467,-0.463078,2.552409,7.870728,6.205184,-3.811605,-7.058852,8.149481,-4.318346,5.268164,6.153604,-8.768443,6.842604,6.931648,0.742678,-1.501449,-8.494294,0.193866,-9.888487,-0.477882,-3.117035,2.700908,-5.159532,-8.179769,-9.793060,2.425996,-7.901946,-8.430310,2.690053,1.212521,-4.801959,-7.378841,8.788927,-2.866234,-9.211294,6.652429,3.403014,-3.996551,4.866199,-8.291276,-0.417844,3.957301,-9.178756,-6.003623,4.008938,-2.745404,-8.654324,0.580092,-9.152344,4.591866,-3.207591,-3.096226,-3.163915,5.228410,9.015154,1.018090,8.386673,-8.291128,-3.485477,1.098519,-2.560114,2.940922,4.498483,-6.141737,0.327036,-6.450905,-9.918586,1.314363,2.715487,5.389970,5.833704,-3.654116,1.724927,-0.646654,-4.829394,-6.829692,3.187099,0.054489,-6.967059,-7.983172,6.394657,1.927350,0.364125,-3.907458,-5.493430,2.749557,-5.902954,-6.864146,-5.355363,0.726928,2.463684,-7.240238,-2.130696,1.678645,1.444009,-3.680976,-4.471966,6.896489,-0.068230,0.464604,1.765367,-1.519611,-0.867464,3.461286,7.943464,2.440727,-7.891826,7.252463,2.344806,7.231689,1.314596,-9.568312,-4.699043,4.167084,7.130603,1.927331,-3.069570,6.116352,-1.921048,2.703228,1.716613,-0.800859,-2.229111,-3.203199,-8.967483,1.955967,8.299038,-9.618742,8.927531,9.774005,-7.978382,3.007475,-9.129468,8.745577,5.719372,0.493976,-8.142567,5.172171,9.948764,-6.608387,0.934605,1.130700,3.223777,-6.021077,-0.585394,-6.898246,-1.229197,8.018397,-6.247080,-0.194932,5.491534,-8.267116,1.281337,0.697753,-6.977933,1.781245,4.956437,-9.567551,-0.592911,5.435200,-2.752319,7.838491,6.720792,-8.145808,3.698924,3.979558,-2.977636,-2.235348,4.067992,-2.196921,-8.304013,-8.909374,6.030924,-4.516304,0.503217,-5.889248,2.609858,1.183137,-8.993117,-5.091246,-9.698931,-9.153819,-1.887059,-1.404845,-4.182183,9.632800,-9.881551,-6.951878,-5.664621,8.645046,-7.374917,-7.238057,2.864780,-6.039144,9.632791,-6.941985,2.483893,-1.885294,9.692662,1.612231,5.330257,-0.377506,-0.089926,6.260048,-0.407346,5.024351,-2.564500,-3.457262,6.957810,8.627047,-2.381497,-9.677158,4.108694,4.674096,0.006012,-8.776696,9.589768,9.908301,-2.976085,-4.245287,5.296849,7.239679,8.547787,-1.805164,8.867569,6.345588,3.663453,5.325834,-9.324762,6.519660,8.408749,2.166342,4.183999,5.517505,4.506347,-5.012850,7.218346,2.013321,5.768035,7.099678,2.933933,-6.672515,-0.801448,7.783132,-0.344219,-5.064509,8.392598,-5.492504,-2.263684,-9.375626,-6.566838,0.518221,-0.464023,-5.299626,-4.683764,-5.656469,4.040965,-2.020996,-9.254090,-6.007673,-2.798524,8.961563,-6.157847,-8.920758,4.912696,5.693304,3.451005,6.101899,9.909079,-6.903936,3.889923,1.201276,5.078864,-1.026112,-1.978988,5.742280,6.253300,-6.608431,-8.019230,1.815508,3.071317,0.050417,2.392839,-9.034660,4.056301,-0.558503,-7.313429,6.040520,3.006069,8.855169,-6.217401,-7.356341,6.578795,-0.724173,-4.041393,4.151108,-5.096191,-3.581218,5.113512,-8.893515,2.123235,2.688957,-3.075778,-6.265681,-2.568581,8.351354,-5.367546,4.790044,-6.724885,7.372976,9.988168,-6.297079,-7.904576,0.022660,-2.619962,-4.176257,-9.108025,1.394906,-9.839793,-1.961523,0.300083,3.452133,8.003687,-8.036368,-9.851372,-5.523316,-5.731794,5.833736,-3.157408,9.912610,-0.366274,-1.518220,9.000251,-0.384461,1.307975,6.927632,-3.167429,-7.774107,9.541155,-1.902811,9.432825,1.182799,3.530635,-7.682670,9.414871,-6.498237,3.189791,-9.243443,-2.661223,-5.624433,7.102419,7.099822,-7.599743,0.048364,-2.625621,-8.076869,8.743099,1.259311,-9.911707,-2.855572,0.466260,-5.108469,0.357952,-6.559697,0.877602,-0.449264,-1.116301,-3.706824,5.958142,-3.923014,6.840764,3.421370,-7.551492,-3.782303,-5.428131,-2.748914,7.624420,-4.411748,5.052586,9.071781,0.518656,8.642516,2.915399,4.687507,2.267701,-9.199910,-2.196702,0.599060,-4.408671,7.264818,-3.986193,2.983904,-1.057820,2.182699,-2.125285,-6.893834,-9.501670,5.025955,-7.098058,-3.257807,-9.501089,-5.005969,9.562071,1.572826,5.194615,-5.017708,-7.610956,-3.306412,-3.729655,-2.225792,-9.023141,-8.987068,-4.510930,-3.595603,-1.265530,-1.714844,0.187519,9.751760,1.430832,-4.273201,-2.428422,-4.452858,-8.048343,7.828225,-9.603836,8.442365,6.942146,9.866917,1.673427,-7.160151,8.974235,-9.940086,2.765259,9.104627,-5.651885,-9.414639,-2.556357,1.126507,9.687185,8.348072,-4.952413,-1.898409,8.101299,9.264320,8.241295,-8.637000,2.990701,6.307239,8.099334,1.583858,-3.384254,-8.994403,-9.898368,-4.600987,-7.125815,-5.764274,-1.109549,-1.924317], dtype = "float64")#candidate|6479|(990,)|const|float64
call_6478 = relay.TupleGetItem(func_292_call(relay.reshape(const_6479.astype('float64'), [6, 11, 15]), relay.reshape(const_6479.astype('float64'), [6, 11, 15]), relay.reshape(const_6479.astype('float64'), [6, 11, 15]), ), 0)
call_6480 = relay.TupleGetItem(func_297_call(relay.reshape(const_6479.astype('float64'), [6, 11, 15]), relay.reshape(const_6479.astype('float64'), [6, 11, 15]), relay.reshape(const_6479.astype('float64'), [6, 11, 15]), ), 0)
func_4677_call = mod.get_global_var('func_4677')
func_4680_call = mutated_mod.get_global_var('func_4680')
var_6487 = relay.var("var_6487", dtype = "float32", shape = (12, 36))#candidate|6487|(12, 36)|var|float32
call_6486 = relay.TupleGetItem(func_4677_call(relay.reshape(var_6487.astype('float32'), [6, 9, 8]), relay.reshape(const_6479.astype('float64'), [990,]), ), 0)
call_6488 = relay.TupleGetItem(func_4680_call(relay.reshape(var_6487.astype('float32'), [6, 9, 8]), relay.reshape(const_6479.astype('float64'), [990,]), ), 0)
func_5523_call = mod.get_global_var('func_5523')
func_5525_call = mutated_mod.get_global_var('func_5525')
call_6500 = func_5523_call()
call_6501 = func_5523_call()
uop_6505 = relay.rsqrt(call_6478.astype('float32')) # shape=(6, 11, 15)
uop_6507 = relay.rsqrt(call_6480.astype('float32')) # shape=(6, 11, 15)
func_3204_call = mod.get_global_var('func_3204')
func_3206_call = mutated_mod.get_global_var('func_3206')
call_6508 = func_3204_call()
call_6509 = func_3204_call()
func_5459_call = mod.get_global_var('func_5459')
func_5462_call = mutated_mod.get_global_var('func_5462')
var_6512 = relay.var("var_6512", dtype = "float64", shape = (252,))#candidate|6512|(252,)|var|float64
call_6511 = relay.TupleGetItem(func_5459_call(relay.reshape(var_6512.astype('float64'), [7, 9, 4]), relay.reshape(var_6512.astype('float64'), [7, 9, 4]), ), 1)
call_6513 = relay.TupleGetItem(func_5462_call(relay.reshape(var_6512.astype('float64'), [7, 9, 4]), relay.reshape(var_6512.astype('float64'), [7, 9, 4]), ), 1)
func_5459_call = mod.get_global_var('func_5459')
func_5462_call = mutated_mod.get_global_var('func_5462')
call_6520 = relay.TupleGetItem(func_5459_call(relay.reshape(call_6511.astype('float64'), [7, 9, 4]), relay.reshape(call_6511.astype('float64'), [7, 9, 4]), ), 0)
call_6521 = relay.TupleGetItem(func_5462_call(relay.reshape(call_6511.astype('float64'), [7, 9, 4]), relay.reshape(call_6511.astype('float64'), [7, 9, 4]), ), 0)
uop_6522 = relay.tan(call_6486.astype('float64')) # shape=(6, 9, 8)
uop_6524 = relay.tan(call_6488.astype('float64')) # shape=(6, 9, 8)
output = relay.Tuple([call_6476,const_6479,var_6487,call_6500,uop_6505,call_6508,call_6511,var_6512,call_6520,uop_6522,])
output2 = relay.Tuple([call_6477,const_6479,var_6487,call_6501,uop_6507,call_6509,call_6513,var_6512,call_6521,uop_6524,])
func_6525 = relay.Function([var_6487,var_6512,], output)
mod['func_6525'] = func_6525
mod = relay.transform.InferType()(mod)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6525_call = mutated_mod.get_global_var('func_6525')
var_6527 = relay.var("var_6527", dtype = "float32", shape = (12, 36))#candidate|6527|(12, 36)|var|float32
var_6528 = relay.var("var_6528", dtype = "float64", shape = (252,))#candidate|6528|(252,)|var|float64
call_6526 = func_6525_call(var_6527,var_6528,)
output = call_6526
func_6529 = relay.Function([var_6527,var_6528,], output)
mutated_mod['func_6529'] = func_6529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6551 = relay.var("var_6551", dtype = "bool", shape = (11, 7, 1))#candidate|6551|(11, 7, 1)|var|bool
var_6552 = relay.var("var_6552", dtype = "bool", shape = (11, 7, 8))#candidate|6552|(11, 7, 8)|var|bool
bop_6553 = relay.logical_and(var_6551.astype('bool'), var_6552.astype('bool')) # shape=(11, 7, 8)
output = bop_6553
output2 = bop_6553
func_6556 = relay.Function([var_6551,var_6552,], output)
mod['func_6556'] = func_6556
mod = relay.transform.InferType()(mod)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mutated_mod.get_global_var('func_6556')
var_6558 = relay.var("var_6558", dtype = "bool", shape = (11, 7, 1))#candidate|6558|(11, 7, 1)|var|bool
var_6559 = relay.var("var_6559", dtype = "bool", shape = (11, 7, 8))#candidate|6559|(11, 7, 8)|var|bool
call_6557 = func_6556_call(var_6558,var_6559,)
output = call_6557
func_6560 = relay.Function([var_6558,var_6559,], output)
mutated_mod['func_6560'] = func_6560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3333_call = mutated_mod.get_global_var('func_3333')
call_6565 = func_3332_call()
call_6566 = func_3332_call()
func_1457_call = mod.get_global_var('func_1457')
func_1461_call = mutated_mod.get_global_var('func_1461')
const_6591 = relay.const([2,-2,-8,-9,3,-8,2,1,6,8,1,9,-8,10,-6,9,10,8,-8,-3,-7,-9,10,-6,3,-6,8,2,10,3,-2,3,-4,10,-6,-4,-3,3,4,-4,3,-3,5,-5,7,10,-2,3,-4,1,-5,-4,-9,-6,6,2,-1,-8,-10,1,5,-1,4,7,7,9,-3,4,10,9,-1,-5,5,9,10,-5,3,4,-9,7,-8,-10,7,-7,6,-5,6,-9,5,6,-10,-10,6,10,6,-1,-2,-9,7,-10,-3,-1,-4,10,8,5,-1,-9,-3,-2,6,5,-4,-1,-4,5,-5,-6,7,-10,-6,-3,2,-1,2,-5,-7,-10,-7,-6,-1,8,-9,9,-2,1,6,2,7,-4,-9,9,9,10,10,9,-9,1,3,4,-9,-3,10,-4,3,7,-6,9,-4,3,7,7,-9,3,-8,-7,-3,-3,-8,-1,-6,-2,-3,-10,-1,2,5,3,-10,7,-3,-5,7,-9,-7,-7,-9,7,-9,10,8,-10,-5,-8,-9,-3,9,7,7,2,-6,-9,7,6,1,-10,2,-3,-2,10,-5,-2,-10,-2,-6,-3,5,-7,5,10,1,-8,-9,8,1,-3,-2,1,-7,-10,-1,-5,-2,1,-8,-7,1,2,4,3,1,-2,-2,-6,7,-10,-9,-3,9,-10,4,-6,3,-9,9,4,6,4,8,7,-5,2,-3,-5,-10,7,-4,-1,2,-6,1,-2,4,7,5,-7,-10,-4,-3,-3,-6,9,5,7,-1,10,-2,9,2,8,-9,-8,4,-3,-3,-2,-9,6,-2,-3,5,4,-10,3,-2,-9,-8,1,-1,10,1,2,4,5,-3,10,-4,5,-1,5,-1,-4,3,2,-10,-9,-6,-2,-9,6,-3,-9,-3,2,5,5,2,-7,-5,-9,3,7,-9,2,5,-9,4,-7,2,-1,5,-5,5,1,2,6,-10,-7,-3,-4,-6,-7,10,-9,3,1,6,-6,9,3,-9,-9,4,-5,-4,5,1,10,8,-6,-1,-9,-5,8,-2,5,9,-10,9,-10,-6,3,-9,-1,-4,7,5,2,1,-4,-8,6,-5,10,2,7,7,5,4,-4,-2,6,9,7,-6,2,-10,-3,5,-8,-5,6,6,-9,-7,1,-8,-7,2,6,5,-6,-8,-1,-2,3,4,1,-3,10,-5,-1,7,9,-4,-1,-5,-5,6,8,-4,7,-2,-10,9,5,1,9,6,9,-5,10,-7,-2,10,5,3,-4,10,-10,-3,5,2,4,-3,9,-5,-7,3,-7,3,9,-4,3,-6,-5,9,-3,-5,9,9,-8,-7,9,4,5,10,3,6,1,10,-8,-7,10,-7,-2,6,-3,4,-3,1,-8,-1,-8,9,-8,3,-8,7,4,6,2,-5,7,10,10,7,2,-8,-4,10,-6,7,5,1,-10,5,-8,-9,-2,4,-10,-7,-8,5,-4,3,-7,-5,8,2,-2,2,-7,-5,-1,8,-2,6,-4,2,-5,9,9,4,9,-5,-1,10,-9,-7,-6,4,4,7,-2,-3,6,-10,-5,4,10,-4,8,1,1,-10,6,4,-7,-5,2,5,-1,6,-9,9,-10,10,-9,7,-10,-8,2,-6,4,7,1,-5,9,8,2,7,4,-9,-2,-2,3,1,-1,2,8,3,-3,2,2,10,-1,3,8,-8,-8,3,10,5,-8,-1,8,6,2,1,-9,-7,10,6,2,6,-4,-9,2,-10,-3,-7,-2,-2,2,-10,6,1,-7,-2,1,-9,9,-3,-4,-1,1,1,2,2,9,-3,9,-9,-3,5,2,-2,2,2,-6,6,-1,-5,-10,-7,8,4,-5,2,-7,-3,1,-10,9,-2,4,-6,-4,-8,-7,5,-6,-1,-1,9,1,7,-7,6,8,5,-5,7,-4,-6,-1,-4,-10,-7,1,-9,10,-4,-10,5,8], dtype = "uint16")#candidate|6591|(728,)|const|uint16
call_6590 = relay.TupleGetItem(func_1457_call(relay.reshape(const_6591.astype('uint16'), [14, 4, 13]), relay.reshape(const_6591.astype('uint16'), [14, 4, 13]), ), 0)
call_6592 = relay.TupleGetItem(func_1461_call(relay.reshape(const_6591.astype('uint16'), [14, 4, 13]), relay.reshape(const_6591.astype('uint16'), [14, 4, 13]), ), 0)
func_5523_call = mod.get_global_var('func_5523')
func_5525_call = mutated_mod.get_global_var('func_5525')
call_6596 = func_5523_call()
call_6597 = func_5523_call()
bop_6598 = relay.greater_equal(call_6596.astype('bool'), const_6591.astype('bool')) # shape=(6, 9, 728)
bop_6601 = relay.greater_equal(call_6597.astype('bool'), const_6591.astype('bool')) # shape=(6, 9, 728)
const_6612 = relay.const([[[-3.703241,-1.535749,4.336111,7.701183,9.982328,0.843906,7.697867,4.396348,3.853618,-9.318549,-3.788917,-4.800114,-5.223036],[-5.399854,-3.360455,-5.274504,-1.083491,8.696101,-7.072788,1.455354,2.627408,-0.584404,-8.114686,-5.028483,-4.016236,-1.063712],[4.659138,-1.891626,5.007814,5.068926,-1.072652,-9.436601,-4.956915,4.873000,-9.159087,8.383318,4.959384,7.836447,7.768094],[0.647685,-3.748377,-2.056558,-9.255953,5.640535,1.998613,6.807619,0.601205,-3.181929,-9.420764,-5.357122,-2.432181,-6.967139]],[[1.264522,2.581511,7.466691,-0.010519,-1.411975,4.012099,-4.708465,-6.588160,5.792645,5.585654,-3.881111,9.555640,1.671473],[2.701686,7.639861,-4.710556,7.822859,2.191815,-1.580507,-1.880792,-7.176109,-3.362994,0.404169,-5.126210,-5.468569,2.761510],[2.376102,3.947891,-9.220186,-3.341028,-8.489030,7.129472,-0.261159,-7.712825,-7.762108,-0.114363,-7.335975,0.955719,1.413616],[1.705639,-5.455176,-4.087126,5.901265,-8.499950,0.462805,0.677759,8.978652,0.281102,4.871441,0.878502,0.372229,-7.478676]],[[-5.659127,8.625653,8.864674,2.061212,8.160102,6.830979,-5.713967,-0.111899,-5.575644,4.080347,-1.794756,1.298944,2.860874],[-0.911751,-3.831753,-9.740314,-7.503271,6.172405,-2.075600,1.434555,-5.322885,-9.477498,0.180989,-7.808278,-6.809967,9.756616],[6.518284,-0.921315,0.374607,5.976520,6.282732,-6.911225,7.090738,6.547365,5.289496,1.179688,1.829782,-1.111660,-1.573504],[-0.292447,-0.641040,-2.002153,0.257535,-3.297779,7.495740,-6.180632,-0.947483,-7.716856,-1.601255,5.045157,6.548677,-1.317386]],[[9.143171,8.265392,7.465016,-1.534250,2.129627,8.427107,-5.700094,-7.453971,8.593316,-0.695940,4.211373,7.081833,8.897142],[0.213068,7.069270,5.811591,-0.722846,7.963894,5.099858,-9.669922,-1.105901,9.499378,6.315567,-2.681764,-3.020151,-9.185604],[8.974962,-6.635947,7.071798,8.041334,0.398736,2.713288,9.047565,5.753993,-0.267240,-3.812809,-6.548944,2.324942,6.618323],[-9.317877,3.681149,8.558378,5.797990,0.542154,-3.782245,6.572798,8.367394,4.648770,5.630181,0.018816,-2.525385,-3.491146]],[[4.523543,4.075365,5.192863,3.939455,-3.625215,-8.268607,-9.049402,-5.607227,-7.853725,-5.715193,-9.379768,1.679265,-4.519315],[-1.020766,-5.590656,7.934223,-4.380298,-3.868844,6.135331,-4.169077,-2.481774,7.584316,-2.041161,5.039593,5.176502,9.185222],[-6.600678,-0.534707,1.245451,8.203122,1.819527,-3.469910,9.614145,-7.957398,-1.679482,3.412251,6.409223,7.736298,-6.935413],[-2.318586,-3.123698,-1.997200,-4.308490,5.103529,6.801416,0.724090,-4.282919,-6.651807,-5.836218,-4.305166,-3.114166,-1.121096]],[[-8.534735,7.694944,-0.946102,-4.265971,3.391012,6.716195,1.306926,-7.866800,-7.075286,-3.363566,9.265559,-8.809099,8.040848],[-0.449099,-9.707704,0.579065,-1.771042,-2.069178,-1.816781,1.533906,3.390063,-0.763684,7.904687,9.800148,-3.258669,-2.884561],[-6.053001,-0.817248,4.796577,5.893642,0.551274,-9.735792,-2.374704,-7.238083,-8.455396,-0.856918,4.867930,-0.539356,4.502566],[-5.480085,0.276379,2.310736,7.247657,1.323462,-8.477927,9.814140,0.164115,8.283969,-5.866986,5.641695,2.355757,-1.306415]],[[-1.843558,-8.789668,-4.332662,0.376004,9.815721,4.549561,-7.974576,-3.887862,-1.749860,-1.310459,6.683201,7.697214,-1.761474],[-9.200188,-8.511504,-6.986192,-4.468384,4.396776,2.759629,-2.047924,1.796516,1.655766,8.397868,6.200433,8.809688,8.436330],[9.467422,-4.019143,3.659381,-3.755195,0.267260,-0.886284,2.638822,-5.514031,6.955504,2.947477,6.814740,-9.748650,-4.481901],[-8.444740,-9.021359,7.595435,-6.659201,2.861051,-7.357287,2.910707,-9.691740,4.918685,1.870522,-6.152677,2.141353,-9.825350]],[[-5.062943,8.444520,-9.958570,7.273162,2.298290,-9.763132,-4.496175,-8.683405,2.336533,5.916608,9.323279,1.053411,-7.235469],[8.673200,-1.133700,-8.588641,5.123243,2.827529,6.002532,-1.910465,0.853845,-8.858508,-7.999321,0.952703,4.560072,7.119033],[0.503327,6.180288,-6.010355,1.772631,-1.081563,6.471631,5.336020,5.944656,7.687083,-5.168658,2.633987,0.295154,2.911548],[2.646670,8.058313,4.199770,-7.652386,-4.995414,-5.842890,1.412958,-5.281699,-5.325115,4.869257,-7.589683,8.250065,-1.956168]],[[-4.796987,-4.842706,-5.250410,-8.696597,-9.043684,-6.681371,-5.430790,9.019658,6.143143,-9.585151,8.122740,6.497244,-4.475652],[-5.902621,-4.399117,-4.942910,-6.868628,-4.684141,9.358804,-5.700362,0.282120,-3.458385,9.567733,-8.992891,-6.399738,-4.785744],[8.495749,-2.779563,-2.370950,8.132516,6.374379,2.838123,-7.989602,-5.890299,-2.365746,0.155021,-4.276515,2.551590,9.766994],[-8.270283,-6.021537,0.589129,-1.855265,-1.960057,-5.501559,-9.149803,1.585785,2.276796,4.844058,5.672259,-8.873501,2.959772]],[[-6.281859,5.273321,-8.989355,1.846552,-3.913164,-8.547643,1.885563,5.181788,-4.920745,6.554063,1.236386,4.163723,1.762737],[-7.944375,3.547157,-0.249466,2.960636,5.220915,6.896109,-3.783655,-9.457275,-8.224442,1.932534,6.545989,8.839435,-3.247634],[-8.116529,-1.119185,-1.661336,1.165366,-8.657602,-1.374292,9.779515,-0.347493,-8.068479,8.054637,8.924481,-3.289784,3.691397],[3.694865,2.668852,-0.695055,1.434589,6.102671,9.485359,-3.364550,-1.763245,3.757440,-8.411563,-4.673374,8.731021,2.136246]],[[8.000590,9.009970,-9.490879,-8.648595,-2.976381,9.397446,1.826185,-7.697845,2.848151,-1.490038,4.186573,-8.238716,0.429074],[-8.840639,-5.695897,-1.528877,-3.730334,-1.578104,-6.284658,-8.089197,7.270247,-5.548722,-1.307263,-2.415242,4.233391,6.308106],[-8.752492,9.293515,-0.350727,-4.084096,5.446786,-1.254135,3.496126,-9.817590,9.652371,-1.934099,-0.240010,9.824983,5.263092],[7.431364,1.386205,0.067819,-8.412507,1.860457,1.921188,7.687420,-2.314096,-8.504930,-9.301203,9.675528,9.613980,2.942337]],[[9.878150,-4.437174,-2.543645,7.849966,-3.937013,3.792786,2.217527,4.717228,4.490416,-0.863011,-9.112210,7.092777,1.023370],[6.913480,-7.388385,2.048207,8.526479,4.188688,4.289257,8.098537,1.384937,-8.375566,-1.821389,2.924049,-2.685274,7.889341],[-4.934604,0.160827,-1.736410,-7.245156,8.172352,-3.616438,3.894157,-8.908194,-4.687774,-7.114130,4.553346,4.222249,-1.050139],[0.487564,-3.936628,-5.421198,0.032788,-3.221002,-8.814735,-7.777368,-5.376681,-7.721586,-4.835237,-4.982237,2.094234,1.588269]],[[4.096689,-1.931953,8.563443,-9.593821,-4.943471,3.845967,3.960843,8.956826,-6.764827,0.927317,-3.645983,0.892800,6.142319],[-0.262144,-8.070770,2.407699,-9.490474,-2.096547,4.468225,0.010187,1.707158,1.098318,-2.100077,-0.068828,-2.947443,-7.496483],[5.654858,-4.251344,5.645561,2.875494,-0.849400,-9.662699,-1.007034,-1.698111,2.363939,-9.082581,-3.389875,6.943797,-7.620736],[-5.680825,-0.820606,-2.083734,-9.401349,-1.441547,5.003975,6.452874,-2.901989,-1.074689,-2.035976,-4.350103,-5.739381,-4.733919]],[[-8.746149,1.027086,8.670263,8.061223,-6.449471,-1.137520,-5.381399,9.853289,-3.531197,2.959410,-3.181039,-3.381852,3.143235],[-5.980699,2.390895,-5.902360,3.689056,-4.474008,5.011217,-7.744981,0.755467,-3.524484,7.802294,6.527653,4.685452,-4.311362],[-4.673847,-7.769982,3.645523,0.238846,-4.160530,-7.189886,-1.536056,-7.887555,-3.671305,6.104671,3.773732,-4.051314,5.087825],[1.336954,-3.856960,-3.703622,-3.560321,-6.966323,-3.090335,-4.504470,-3.016892,-6.376184,2.833167,-9.364112,4.165848,-2.100720]]], dtype = "float32")#candidate|6612|(14, 4, 13)|const|float32
bop_6613 = relay.less_equal(call_6590.astype('bool'), relay.reshape(const_6612.astype('bool'), relay.shape_of(call_6590))) # shape=(14, 4, 13)
bop_6616 = relay.less_equal(call_6592.astype('bool'), relay.reshape(const_6612.astype('bool'), relay.shape_of(call_6592))) # shape=(14, 4, 13)
uop_6630 = relay.asinh(bop_6598.astype('float64')) # shape=(6, 9, 728)
uop_6632 = relay.asinh(bop_6601.astype('float64')) # shape=(6, 9, 728)
var_6635 = relay.var("var_6635", dtype = "float64", shape = (6, 9, 728))#candidate|6635|(6, 9, 728)|var|float64
bop_6636 = relay.left_shift(uop_6630.astype('int16'), relay.reshape(var_6635.astype('int16'), relay.shape_of(uop_6630))) # shape=(6, 9, 728)
bop_6639 = relay.left_shift(uop_6632.astype('int16'), relay.reshape(var_6635.astype('int16'), relay.shape_of(uop_6632))) # shape=(6, 9, 728)
func_5487_call = mod.get_global_var('func_5487')
func_5491_call = mutated_mod.get_global_var('func_5491')
const_6668 = relay.const([9,-5,7,3,10,-4,3,7,-3,-1,-8,3,2,-5,9,2,-7,6,3,-3,-9,-7,3,10,-10,-4,-5,8,-6,-4,6,-4,-7,8,-10,-2,2,-3,-3,2,-7,-2,5,8,3,-8,-2,-4,3,-10,5,-3,-1,-1,-1,-10,1,-1,-3,10,2,9,-2,-4,4,-9,-6,-7,3,5,-3,2,-8,2,1,9,2,1,10,-1,1,-5,-6,-8,-2,-3,-6,1,-8,-5,-7,-6,2,-4,-7,9,9,-7,-8,-2,-5,-7,9,-7,3,10,8,-10,5,3,1,10,-5,2,9,6,-8,7,1,6,3,3,-2,-2,-8,-1,-8,-6,-7,8,4,-1,7,10,9,-3,2,6,10,2,-6,7,-5,10,-3,9,-4,-8,10,10,-3,-4,8,8,-1,-6,-7,-4,5,-6,2,-6,8,7,1,7,-10,-1,-4,-8,1,-5,-8,3,-3,-4,2,3,-3,8,-10,9,8,10,-9,9,4,-10,-3,8,10,10,9,4,4,5,8,3,4,-2,-2,4,-6,-8,7,-4,-7,3,-10,9,10,7,8,8,3,-6,10,3,-4,5,-9,8,-7,-4,-7,-10,-7,-7,-9,8,4,9,1,9,2,-7,-7,7,-8,-9,-1,4,-8,-2,5,-10,-3,-2,-10,-10,-7,3,1,-5,10,6,5,-9,10,-1,-1,-3,-2,9,-5,6,7,5,-1,7,-6,-3,2,5,3,-6,-9,-1,7,2,-10,-4,-10,-4,-9,2,-5,-8,7,8,3,6,-4,-2,-8,3,-5,-4,-7,-5,1,-6,2,-3,9,-1,-5,4,-6,2,-3,4,5,-4,-10,3,-6,-10,-4,1,4,6,1,-3,-8,-4,4,-10,8,5,3,-1,-6,-9,-4,4,4,-9,3,3,9,-4,-7,-3,-10,-5,6,-4,-5,-3,-3,6,10,-2,7,6,-5,10,7,-7,2,10,5,10,-6,8,-3,-9,-10,-6,8,-7,-2,-5,10,6,3,10,9,-10,3,6,-2,9,-8,3,6,-1,6,-9,-7,8,10,-9,-8,-6,5,-8,-7,-3,3,2,-7,-8,-8,-7,2,6,3,-3,-2,-3,10,-8,-8,3,8,-1,-8,-5,-7,-3,2,-1,7,-6,-2,8,10,-9,8,8,-9,10,-7,6,-1,-3,10,-8,9,-6,4,-2,-9,-3,-5,2,9,1,-8,1,8,4,9,5,-7,6,-4,-6,-9,1,-9,8,-8,5,10,7,2,-3,3,-9,-8,10,5,-6,-4,-8,3,-2,-9,-7,6,4,-5,-9,9,-7,-4,1,-6,4,6,-4,2,-8,-4,9,-8,8,-3,2,-6,9,9,-1,-6,4,7,-1,-3,-1,5,-6,6,-8,2,1,10,-10,-9,-5,-4,-9,6,-3,8,-7,3,-5,9,7,3,9,-9,4,8,7,8,-6,-5,-7,-2,-5,10,-3,5,-10,10,-4,10,1,9,1,-1,4,-5,-8,-5,-1,4,4,6,8,7,8,-1,-5,-6,-10,5,-2,4,7,-6,-6,4,10,6,-9,1,10,6,-4,2,-9,7,7,-3,3,-7,-10,9,-3,1,9,7,5,5,-6,-3,-3,-6,2,-7,9,-3,4,-2,-10,9,6,-1,1,-10,2,-10,2,7,7,10,-9,6,7,-10,-2,8,-7,9,-4,5,-10,3,2,5,-6,-5,8,-8,-1,3,7,1,10,-10,-7,-2,-9], dtype = "int8")#candidate|6668|(648,)|const|int8
call_6667 = relay.TupleGetItem(func_5487_call(relay.reshape(const_6668.astype('int8'), [6, 9, 12]), relay.reshape(const_6668.astype('int8'), [6, 9, 12]), ), 0)
call_6669 = relay.TupleGetItem(func_5491_call(relay.reshape(const_6668.astype('int8'), [6, 9, 12]), relay.reshape(const_6668.astype('int8'), [6, 9, 12]), ), 0)
output = relay.Tuple([call_6565,bop_6613,bop_6636,call_6667,const_6668,])
output2 = relay.Tuple([call_6566,bop_6616,bop_6639,call_6669,const_6668,])
func_6671 = relay.Function([var_6635,], output)
mod['func_6671'] = func_6671
mod = relay.transform.InferType()(mod)
mutated_mod['func_6671'] = func_6671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6672 = relay.var("var_6672", dtype = "float64", shape = (6, 9, 728))#candidate|6672|(6, 9, 728)|var|float64
func_6671_call = mutated_mod.get_global_var('func_6671')
call_6673 = func_6671_call(var_6672)
output = call_6673
func_6674 = relay.Function([var_6672], output)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6720 = relay.var("var_6720", dtype = "float64", shape = ())#candidate|6720|()|var|float64
const_6721 = relay.const([[[-9.829940,-5.680351],[5.376360,-3.661570],[-7.065488,-4.815146],[4.306956,-5.603469],[3.600856,9.808915],[-9.929877,-2.458103],[7.120313,8.152309],[8.933485,9.919499],[2.922994,4.857368],[8.497119,-8.766892],[2.172548,-7.128980],[-4.826394,5.594427]],[[-2.821041,3.582336],[-2.943873,-4.459167],[-8.524269,9.181364],[-8.398633,0.435572],[-5.651036,9.324407],[3.088588,-2.685355],[-3.642951,3.491854],[7.723155,-6.813741],[7.927379,-3.593092],[1.928998,-7.492173],[-7.399727,-4.795308],[-9.044779,-6.101681]],[[-3.464217,1.297883],[-4.225069,-4.149232],[-5.405568,1.892353],[-4.983786,1.403686],[-4.093582,6.990080],[9.027474,0.920152],[-6.499862,-2.695182],[-9.239563,5.801726],[-0.164109,-6.787388],[-1.732605,-2.590165],[-1.225698,2.505055],[9.595350,6.147354]],[[-5.654067,-0.861004],[-9.437048,-6.005469],[2.609243,3.223215],[2.966869,-6.922050],[7.094434,-8.955867],[2.915827,-5.766740],[3.300722,-8.611554],[4.474385,-9.155538],[-5.646878,7.301003],[-4.586816,7.029421],[-4.674068,2.167337],[-5.066369,-5.614730]],[[-9.035351,7.809240],[9.347621,-4.396295],[0.822238,8.177430],[-3.917798,7.499320],[-7.251288,0.237623],[-8.633302,-6.323911],[7.284112,-6.830074],[1.198126,-2.059574],[-0.214692,1.409570],[6.980724,-4.727764],[-7.201749,8.632516],[9.722129,-4.923803]],[[9.547772,-3.838360],[-2.846725,2.287532],[3.523490,9.564695],[-6.210704,-1.542689],[-8.128442,-7.933743],[6.273946,-0.548280],[-6.211542,-7.254515],[-6.577879,-9.842147],[-9.029382,0.697232],[8.826124,3.540091],[8.705944,-2.792982],[-8.655750,-6.551425]],[[-7.439084,-8.837767],[4.762689,-9.808373],[0.264925,3.700643],[0.412462,6.808124],[-1.091539,-5.001998],[6.177612,-4.248065],[7.445766,-6.441210],[-7.329541,-1.503705],[1.611312,-3.970095],[8.395223,6.790728],[-4.074528,4.276114],[-5.504308,8.149247]],[[6.947817,-7.623659],[6.524323,8.012369],[8.121400,-8.921130],[-7.486333,1.325123],[-0.913273,-2.239888],[-8.816705,-9.857567],[-8.822120,-1.933440],[-8.905657,-5.044673],[3.133066,2.120160],[6.367506,1.108837],[-8.541780,-3.592344],[-8.473338,4.031693]],[[-3.496984,0.815279],[1.549344,7.972489],[0.217109,-5.439627],[8.184273,9.863924],[8.845925,-5.861263],[-8.739462,-1.414874],[8.088363,0.356593],[-6.085949,-1.460182],[4.331755,9.674184],[0.635485,-1.835804],[-9.809161,3.531363],[1.953058,-7.110573]]], dtype = "float64")#candidate|6721|(9, 12, 2)|const|float64
bop_6722 = relay.floor_divide(var_6720.astype('float64'), const_6721.astype('float64')) # shape=(9, 12, 2)
output = relay.Tuple([bop_6722,])
output2 = relay.Tuple([bop_6722,])
func_6748 = relay.Function([var_6720,], output)
mod['func_6748'] = func_6748
mod = relay.transform.InferType()(mod)
var_6749 = relay.var("var_6749", dtype = "float64", shape = ())#candidate|6749|()|var|float64
output = func_6748(var_6749)
func_6750 = relay.Function([var_6749], output)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mod.get_global_var('func_5621')
func_5623_call = mutated_mod.get_global_var('func_5623')
call_6781 = relay.TupleGetItem(func_5621_call(), 0)
call_6782 = relay.TupleGetItem(func_5623_call(), 0)
output = call_6781
output2 = call_6782
func_6783 = relay.Function([], output)
mod['func_6783'] = func_6783
mod = relay.transform.InferType()(mod)
output = func_6783()
func_6784 = relay.Function([], output)
mutated_mod['func_6784'] = func_6784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2467_call = mod.get_global_var('func_2467')
func_2468_call = mutated_mod.get_global_var('func_2468')
call_6825 = func_2467_call()
call_6826 = func_2467_call()
output = relay.Tuple([call_6825,])
output2 = relay.Tuple([call_6826,])
func_6836 = relay.Function([], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
mutated_mod['func_6836'] = func_6836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6836_call = mutated_mod.get_global_var('func_6836')
call_6837 = func_6836_call()
output = call_6837
func_6838 = relay.Function([], output)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6924 = relay.const([[[6.682053,-4.409018,7.671025,-2.559564,-2.715410,-2.103802,6.136498,-2.288695,2.134776,-9.041288,-0.064509,9.378893,-9.333660,-7.346321,0.111143],[-8.355410,0.870415,3.986259,2.797571,-7.256097,4.820724,-5.308163,-5.250805,-0.613423,5.708751,0.895774,3.988842,-2.275194,9.046619,-3.873912]],[[2.809164,0.857812,7.872021,7.967097,-4.038806,-4.364539,-1.323338,-8.631195,6.332928,-1.112259,9.556074,3.419807,-3.287788,6.643944,-5.856265],[1.231438,-2.887877,-0.812604,7.417306,6.866791,2.553493,-2.972323,-2.250886,-5.017688,7.515751,2.286304,-3.836956,-4.957541,-7.473673,-3.891140]],[[5.584366,-8.396273,-6.314134,6.178375,-1.334776,-4.669482,-4.321089,7.240830,4.039686,9.607439,6.372633,-5.441739,3.134055,-0.073093,-4.699305],[-7.864782,-7.806598,8.450183,8.126745,8.374643,8.709059,7.171943,-8.881473,7.311431,-9.749298,-0.501421,2.130562,3.246784,0.945660,-2.167019]],[[4.066149,0.375364,-1.579869,-8.618274,5.246486,0.326927,9.461949,8.732190,-8.897093,-6.004886,8.440291,-0.901319,5.759060,1.936828,0.313681],[-2.511350,-5.994654,1.253145,-2.792130,-8.539954,5.501643,5.723897,-4.383288,-2.882568,5.569813,0.320860,3.020478,8.774067,1.455439,-8.485318]],[[-5.600242,3.699864,-9.250458,7.766953,0.554794,6.050062,-6.097340,4.878041,0.568921,6.152325,-2.317179,6.263983,-5.986261,-0.875854,4.903364],[-1.489434,7.343308,-2.190672,-6.491837,7.522514,1.171834,-2.483655,2.369245,-7.500625,1.232722,0.440073,-3.099632,-9.627076,9.323190,-1.847486]],[[4.830765,-7.620420,8.964856,-6.226477,8.054309,1.744964,-0.867072,-9.611095,3.877782,-0.898736,-7.230596,1.959127,-1.851742,5.310910,-7.376187],[-3.739562,-1.586988,8.455654,8.595013,-8.397360,5.247501,3.803127,5.801815,0.520158,-0.046297,-3.232503,6.337539,3.223464,6.278612,5.278013]],[[3.315986,1.964997,-5.397625,9.329595,-5.029339,-5.199525,8.377565,-5.582721,2.772393,0.194153,1.475277,-1.794069,6.111018,6.397608,-8.468094],[2.990875,-5.166940,-4.201328,7.522941,9.964030,2.327624,5.318366,4.825369,1.568457,4.167737,6.263476,-7.487456,8.291629,5.578442,-2.254946]],[[8.226180,8.280492,-3.679465,-2.749934,5.670716,-4.953491,-6.664381,2.985141,1.467892,-5.506074,-8.582762,0.465875,-7.734525,-1.271265,4.933094],[8.092866,-5.824882,6.348927,-6.684225,-5.364535,9.164452,-5.079717,-2.143790,1.983070,1.086686,-6.186688,8.097008,-7.299493,-7.573066,-6.484717]],[[-9.535609,-5.724373,-9.483281,0.172907,-1.166675,6.262294,-7.451434,6.428121,8.735956,-1.432865,-8.860920,-6.491288,1.782398,4.507585,-3.386550],[1.944189,-0.472082,8.765527,1.928068,6.319336,2.177298,2.092096,8.895483,-4.976352,-2.377951,6.401348,-6.817247,-4.267914,-8.414827,9.996241]],[[9.625500,7.845606,9.783801,7.274902,-7.850691,-9.934212,2.170489,2.151663,-7.109239,8.047682,1.761482,2.716646,4.805267,6.962177,-2.006171],[-9.144437,5.917279,7.364512,-6.714896,-0.817761,5.036552,-8.620175,-8.484807,3.551422,-7.186539,7.213836,9.874611,3.549252,5.949698,3.853935]],[[6.011997,8.919159,3.076237,9.832538,3.447052,-0.348500,-9.419726,0.938962,8.793055,3.114057,-6.566981,5.703889,-2.696649,-3.376264,6.510410],[2.839498,7.031229,8.404641,1.437083,-3.861610,-1.366612,4.406381,-7.174501,-9.172214,-4.144363,9.090719,-8.347843,-7.166332,0.217714,-8.788987]],[[-6.473983,4.898817,7.885512,4.080806,-6.296485,4.811749,-9.272360,7.540245,-8.727644,-8.403557,-7.892364,7.185519,-6.762658,8.734156,-3.664246],[-4.846915,5.713765,-2.342041,3.430015,2.605064,4.739884,-4.652318,7.534236,-0.461953,0.449979,-0.854310,-1.254923,5.081241,-7.662390,-5.162415]]], dtype = "float32")#candidate|6924|(12, 2, 15)|const|float32
uop_6925 = relay.rsqrt(const_6924.astype('float32')) # shape=(12, 2, 15)
output = relay.Tuple([uop_6925,])
output2 = relay.Tuple([uop_6925,])
func_6932 = relay.Function([], output)
mod['func_6932'] = func_6932
mod = relay.transform.InferType()(mod)
mutated_mod['func_6932'] = func_6932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6932_call = mutated_mod.get_global_var('func_6932')
call_6933 = func_6932_call()
output = call_6933
func_6934 = relay.Function([], output)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6943 = relay.var("var_6943", dtype = "float32", shape = (5, 3, 14))#candidate|6943|(5, 3, 14)|var|float32
var_6944 = relay.var("var_6944", dtype = "float32", shape = (5, 3, 14))#candidate|6944|(5, 3, 14)|var|float32
bop_6945 = relay.add(var_6943.astype('float32'), relay.reshape(var_6944.astype('float32'), relay.shape_of(var_6943))) # shape=(5, 3, 14)
output = relay.Tuple([bop_6945,])
output2 = relay.Tuple([bop_6945,])
F = relay.Function([var_6943,var_6944,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6943,var_6944,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

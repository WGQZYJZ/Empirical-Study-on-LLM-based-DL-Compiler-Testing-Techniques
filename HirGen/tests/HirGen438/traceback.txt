==========mod==========
#[version = "0.0.5"]
def @func_5207(%var_5178: Tensor[(3, 16, 15), uint8], %var_5179: Tensor[(3, 16, 15), uint8]) -> (Tensor[(3, 16, 15), uint8], Tensor[(3, 16, 15), float32], Tensor[(6, 11, 15), float64], Tensor[(6, 9, 15), uint16]) {
  %0 = cast(%var_5179, dtype="uint8") /* ty=Tensor[(3, 16, 15), uint8] */;
  %1 = shape_of(%var_5178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5178, dtype="uint8") /* ty=Tensor[(3, 16, 15), uint8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %4 = cast(%var_5178, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %5 = shape_of(%var_5179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_5179, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %8 = @func_4466() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) */;
  %9 = right_shift(%2, %3) /* ty=Tensor[(3, 16, 15), uint8] */;
  %10 = floor_mod(%6, %7) /* ty=Tensor[(3, 16, 15), float32] */;
  %11 = %8.0;
  %12 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  (%9, %10, %11, %12)
}

def @func_2479() -> (Tensor[(6, 9, 1), float32],) {
  %13 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %14 = %13.0;
  (%14,)
}

def @func_1160(%var_1119: Tensor[(13, 13, 11), float64], %var_1125: Tensor[(990), float64], %var_1136: Tensor[(520), uint32], %var_1144: Tensor[(216), uint16]) -> (Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) {
  %15 = cast(%var_1119, dtype="float64") /* ty=Tensor[(13, 13, 11), float64] */;
  %16 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %17 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %18 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %19 = reshape(%16, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %20 = reshape(%17, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %21 = reshape(%18, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %22 = @func_292(%19, %20, %21) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %23 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %24 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %25 = reshape(%23, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %26 = reshape(%24, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %27 = @func_78(%25, %26) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %28 = cast(%var_1144, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %29 = cast(%var_1144, dtype="float64") /* ty=Tensor[(216), float64] */;
  %30 = reshape(%28, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), uint16] */;
  %31 = reshape(%29, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float64] */;
  %32 = @func_959(%30, %31) /* ty=(Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) */;
  %33 = cast(%var_1144, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %34 = %32.1;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %36 = reshape(%33, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), uint16] */;
  %37 = reshape(%35, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float64] */;
  %38 = @func_959(%36, %37) /* ty=(Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) */;
  %39 = sqrt(%15) /* ty=Tensor[(13, 13, 11), float64] */;
  %40 = %22.3;
  %41 = %27.0;
  %42 = %38.0;
  (%39, %40, %var_1125, %41, %var_1136, %34, %var_1144, %42)
}

def @func_3486(%var_3444: Tensor[(6, 9, 9), float32], %var_3465: Tensor[(154, 4), float32], %var_3466: Tensor[(990), float64], %var_3468: Tensor[(1, 216), uint16]) -> (Tensor[(6, 9, 9), uint16], Tensor[(6, 9, 9), float64], Tensor[(3, 5, 5), float32], Tensor[(75), float32], Tensor[(5, 104), uint32], Tensor[(154, 4), float32], Tensor[(10, 52), uint32], Tensor[(1, 216), uint16], Tensor[(14, 4, 13), float32], Tensor[(728), uint16], Tensor[(990), float64]) {
  %43 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %44 = %43.0;
  %45 = cast(%44, dtype="uint16") /* ty=Tensor[(6, 9, 1), uint16] */;
  %46 = cast(%var_3444, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
  %47 = cast(%var_3444, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
  %48 = cast(meta[relay.Constant][0] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %49 = reshape(%48, newshape=[3, 5, 5]) /* ty=Tensor[(3, 5, 5), float32] */;
  %50 = @func_20(%49) /* ty=(Tensor[(3, 5, 5), float32],) */;
  %51 = cast(%var_3465, dtype="float32") /* ty=Tensor[(154, 4), float32] */;
  %52 = cast(%var_3466, dtype="float64") /* ty=Tensor[(990), float64] */;
  %53 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 52), uint32] */, dtype="uint32") /* ty=Tensor[(10, 52), uint32] */;
  %54 = cast(%var_3468, dtype="uint16") /* ty=Tensor[(1, 216), uint16] */;
  %55 = reshape(%51, newshape=[7, 11, 8]) /* ty=Tensor[(7, 11, 8), float32] */;
  %56 = reshape(%52, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %57 = reshape(%53, newshape=[5, 104]) /* ty=Tensor[(5, 104), uint32] */;
  %58 = reshape(%54, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %59 = @func_2004(%55, %56, %57, %58) /* ty=(Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) */;
  %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %62 = reshape(%60, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %63 = reshape(%61, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %64 = @func_1457(%62, %63) /* ty=(Tensor[(14, 4, 13), float32],) */;
  %65 = cast(%var_3466, dtype="float64") /* ty=Tensor[(990), float64] */;
  %66 = add(%45, %46) /* ty=Tensor[(6, 9, 9), uint16] */;
  %67 = sinh(%47) /* ty=Tensor[(6, 9, 9), float64] */;
  %68 = %50.0;
  %69 = %59.5;
  %70 = %64.0;
  %71 = log10(%65) /* ty=Tensor[(990), float64] */;
  (%66, %67, %68, meta[relay.Constant][0] /* ty=Tensor[(75), float32] */, %69, %var_3465, meta[relay.Constant][1] /* ty=Tensor[(10, 52), uint32] */, %var_3468, %70, meta[relay.Constant][2] /* ty=Tensor[(728), uint16] */, %71)
}

def @func_3834() -> Tensor[(6, 9, 1), float32] {
  @func_2467() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_6050() -> (Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(252), float64], Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 1), float32]) {
  %72 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %75 = reshape(%73, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %76 = reshape(%74, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %77 = @func_5459(%75, %76) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %78 = %77.0;
  %79 = cast(%78, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %80 = cast(%78, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %81 = reshape(%79, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %82 = reshape(%80, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %83 = @func_5459(%81, %82) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %84 = @func_4136() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %85 = %72.0;
  %86 = @func_3332() /* ty=Tensor[(6, 9, 15), uint16] */;
  %87 = %83.0;
  %88 = %84.0;
  (%85, %78, meta[relay.Constant][3] /* ty=Tensor[(252), float64] */, %86, %87, %88)
}

def @func_6556(%var_6551: Tensor[(11, 7, 1), bool], %var_6552: Tensor[(11, 7, 8), bool]) -> Tensor[(11, 7, 8), bool] {
  %89 = cast(%var_6551, dtype="bool") /* ty=Tensor[(11, 7, 1), bool] */;
  %90 = cast(%var_6552, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  logical_and(%89, %90) /* ty=Tensor[(11, 7, 8), bool] */
}

def @func_5143() -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) {
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(130, 15), float64] */, dtype="float64") /* ty=Tensor[(130, 15), float64] */;
  %92 = reshape(%91, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float64] */;
  %93 = @func_1358(%92) /* ty=(Tensor[(10, 15, 13), float64],) */;
  %94 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
  %95 = %93.0;
  (%94, %95, meta[relay.Constant][4] /* ty=Tensor[(130, 15), float64] */)
}

def @func_5170(%var_5148: Tensor[(16, 5, 9), float64], %var_5151: Tensor[(16, 5, 9), float64]) -> (Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) {
  %96 = cast(%var_5148, dtype="float64") /* ty=Tensor[(16, 5, 9), float64] */;
  %97 = log(%96) /* ty=Tensor[(16, 5, 9), float64] */;
  %98 = cast(%var_5151, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %102 = @func_5143() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) */;
  %103 = floor_divide(%100, %101) /* ty=Tensor[(16, 5, 9), float32] */;
  %104 = %102.1;
  (%103, %104)
}

def @func_78(%var_69: Tensor[(5, 13, 8), uint32], %var_70: Tensor[(5, 13, 8), uint32]) -> (Tensor[(5, 13, 8), uint32],) {
  %105 = cast(%var_70, dtype="uint32") /* ty=Tensor[(5, 13, 8), uint32] */;
  %106 = shape_of(%var_69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_69, dtype="uint32") /* ty=Tensor[(5, 13, 8), uint32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %109 = bitwise_and(%107, %108) /* ty=Tensor[(5, 13, 8), uint32] */;
  (%109,)
}

def @func_3431() -> (Tensor[(6, 9, 1), float32],) {
  %110 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%110,)
}

def @func_5833(%var_5816: Tensor[(15, 9, 16), bool]) -> (Tensor[(15, 9, 16), bool], Tensor[(6, 11, 15), float32]) {
  %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 9, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %112 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_5816, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %115 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %116 = %115.0;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %118 = logical_and(%113, %114) /* ty=Tensor[(15, 9, 16), bool] */;
  %119 = cos(%117) /* ty=Tensor[(6, 11, 15), float32] */;
  (%118, %119)
}

def @func_3794() -> (Tensor[(6, 9, 15), float64],) {
  %120 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %121 = %120.0;
  (%121,)
}

def @func_4961(%var_4936: Tensor[(4, 16, 7), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 16, 7), float32], Tensor[(6, 9, 1), float32]) {
  %122 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %123 = cast(%var_4936, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %124 = sigmoid(%123) /* ty=Tensor[(4, 16, 7), float32] */;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %126 = @func_3431() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %127 = %122.0;
  %128 = log(%125) /* ty=Tensor[(4, 16, 7), float32] */;
  %129 = %126.0;
  (%127, %128, %129)
}

def @func_5559() -> (Tensor[(6, 11, 15), float64],) {
  %130 = @func_4092() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %131 = %130.0;
  (%131,)
}

def @func_6303(%var_6293: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint32], Tensor[(6, 11, 15), float32]) {
  %132 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %133 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %134 = %133.0;
  %135 = cast(%var_6293, dtype="uint32") /* ty=Tensor[(6, 11, 15), uint32] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%134, dtype="uint32") /* ty=Tensor[(6, 11, 15), uint32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %139 = cast(%134, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %140 = %132.0;
  %141 = left_shift(%137, %138) /* ty=Tensor[(6, 11, 15), uint32] */;
  %142 = sqrt(%139) /* ty=Tensor[(6, 11, 15), float32] */;
  (%140, %141, %142)
}

def @func_6836() -> (Tensor[(6, 9, 1), float32],) {
  %143 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%143,)
}

def @func_2650() -> (Tensor[(6, 9, 15), float64],) {
  %144 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %145 = %144.0;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 9, 15), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %148 = divide(%146, %147) /* ty=Tensor[(6, 9, 15), float64] */;
  (%148,)
}

def @func_5284() -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
  %149 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %150 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %151 = %149.0;
  %152 = %150.0;
  (%151, %152)
}

def @func_3765() -> (Tensor[(6, 11, 15), uint64],) {
  %153 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %154 = %153.7;
  (%154,)
}

def @func_5714() -> (Tensor[(6, 11, 15), float64], Tensor[(6, 11, 15), float64]) {
  %155 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %156 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
  %157 = %155.0;
  %158 = %156.0;
  (%157, %158)
}

def @func_4360(%var_4352: Tensor[(8, 9, 13), float32]) -> (Tensor[(8, 9, 13), float32],) {
  %159 = cast(%var_4352, dtype="float32") /* ty=Tensor[(8, 9, 13), float32] */;
  %160 = erf(%159) /* ty=Tensor[(8, 9, 13), float32] */;
  (%160,)
}

def @func_6444(%var_6375: Tensor[(252), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(216), uint16], Tensor[(990), uint64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), uint16], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), float64]) {
  %161 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %164 = reshape(%162, newshape=[330, 3]) /* ty=Tensor[(330, 3), float64] */;
  %165 = reshape(%163, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %166 = @func_3573(%164, %165) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) */;
  %167 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, dtype="uint64") /* ty=Tensor[(990), uint64] */;
  %168 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(990), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(990), float64] */, dtype="uint64") /* ty=Tensor[(990), uint64] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %171 = cast(%var_6375, dtype="float64") /* ty=Tensor[(252), float64] */;
  %172 = cast(%var_6375, dtype="float64") /* ty=Tensor[(252), float64] */;
  %173 = reshape(%171, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %174 = reshape(%172, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %175 = @func_5459(%173, %174) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %176 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
  %177 = %166.0;
  %178 = cast(%177, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
  %179 = reshape(%178, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), uint16] */;
  %180 = @func_5421(%179) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) */;
  %181 = %161.0;
  %182 = bitwise_or(%169, %170) /* ty=Tensor[(990), uint64] */;
  %183 = %175.1;
  %184 = @func_3042() /* ty=Tensor[(6, 9, 1), float32] */;
  %185 = @func_6005() /* ty=Tensor[(6, 9, 15), uint16] */;
  %186 = %176.1;
  %187 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
  %188 = %180.0;
  (%181, %177, meta[relay.Constant][8] /* ty=Tensor[(216), uint16] */, %182, %183, %var_6375, %184, %185, %186, %187, %188)
}

def @func_6525(%var_6487: Tensor[(12, 36), float32], %var_6512: Tensor[(252), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(990), float64], Tensor[(12, 36), float32], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float32], Tensor[(6, 9, 1), float32], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 8), float64]) {
  %189 = cast(meta[relay.Constant][10] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %190 = cast(meta[relay.Constant][10] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %191 = cast(meta[relay.Constant][10] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %192 = reshape(%189, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %193 = reshape(%190, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %194 = reshape(%191, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %195 = @func_292(%192, %193, %194) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %198 = cast(%var_6512, dtype="float64") /* ty=Tensor[(252), float64] */;
  %199 = cast(%var_6512, dtype="float64") /* ty=Tensor[(252), float64] */;
  %200 = reshape(%198, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %201 = reshape(%199, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %202 = @func_5459(%200, %201) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %205 = cast(%203, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %206 = reshape(%204, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %207 = reshape(%205, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %208 = @func_5459(%206, %207) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %209 = cast(%var_6487, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %210 = cast(meta[relay.Constant][10] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %211 = reshape(%209, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %212 = reshape(%210, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %213 = @func_4677(%211, %212) /* ty=(Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %214 = %213.0;
  %215 = cast(%214, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %216 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %217 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
  %218 = rsqrt(%197) /* ty=Tensor[(6, 11, 15), float32] */;
  %219 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %220 = %208.0;
  %221 = tan(%215) /* ty=Tensor[(6, 9, 8), float64] */;
  (%216, meta[relay.Constant][10] /* ty=Tensor[(990), float64] */, %var_6487, %217, %218, %219, %203, %var_6512, %220, %221)
}

def @func_3927() -> (Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) {
  %222 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %223 = %222.0;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %225 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %226 = tan(%224) /* ty=Tensor[(6, 11, 15), float64] */;
  %227 = %225.1;
  (%226, %227)
}

def @func_4136() -> (Tensor[(6, 9, 1), float32],) {
  %228 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %229 = %228.0;
  (%229,)
}

def @func_5697() -> (Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) {
  %230 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %231 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %232 = %231.1;
  %233 = cast(%232, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %234 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %235 = %230.0;
  %236 = sqrt(%233) /* ty=Tensor[(6, 9, 15), float64] */;
  %237 = %234.0;
  (%235, %236, %237)
}

def @func_3332() -> Tensor[(6, 9, 15), uint16] {
  %238 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %238.0
}

def @func_5459(%var_5440: Tensor[(7, 9, 4), float64], %var_5444: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) {
  %239 = cast(%var_5444, dtype="int16") /* ty=Tensor[(7, 9, 4), int16] */;
  %240 = shape_of(%var_5440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_5440, dtype="int16") /* ty=Tensor[(7, 9, 4), int16] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %243 = cast(%var_5440, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %244 = sinh(%243) /* ty=Tensor[(7, 9, 4), float64] */;
  %245 = cast(%var_5440, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %249 = logical_xor(%241, %242) /* ty=Tensor[(7, 9, 4), int16] */;
  %250 = maximum(%247, %248) /* ty=Tensor[(7, 9, 4), float64] */;
  (%249, %250)
}

def @func_292(%var_245: Tensor[(6, 11, 15), float64], %var_246: Tensor[(6, 11, 15), float64], %var_272: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) {
  %251 = cast(%var_246, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %252 = shape_of(%var_245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_245, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %255 = equal(%253, %254) /* ty=Tensor[(6, 11, 15), bool] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %257 = acos(%256) /* ty=Tensor[(6, 11, 15), float64] */;
  %258 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 11, 15), float64] */, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %262 = cast(meta[relay.Constant][12] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %263 = cast(meta[relay.Constant][12] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %264 = reshape(%262, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %265 = reshape(%263, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %266 = @func_78(%264, %265) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %267 = cast(%var_272, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %268 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(6, 11, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = cast(%255, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %272 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%257, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %275 = maximum(%260, %261) /* ty=Tensor[(6, 11, 15), uint64] */;
  %276 = %266.0;
  %277 = logical_or(%269, %270) /* ty=Tensor[(6, 11, 15), bool] */;
  %278 = bitwise_or(%273, %274) /* ty=Tensor[(6, 11, 15), uint64] */;
  (%275, %276, meta[relay.Constant][12] /* ty=Tensor[(520), uint32] */, %277, %278)
}

def @func_3732() -> (Tensor[(6, 9, 15), float64],) {
  %279 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %280 = %279.0;
  (%280,)
}

def @func_5037(%var_5014: Tensor[(216), uint16], %var_5018: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 11, 15), uint64], Tensor[(990), float64], Tensor[(1859, 1), float64], Tensor[(520), uint32], Tensor[(216), uint16], Tensor[(6, 9, 462), int32], Tensor[(432), float32], Tensor[(462), float64], Tensor[(6, 11, 15), bool]) {
  %281 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %282 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %283 = cast(meta[relay.Constant][13] /* ty=Tensor[(1859, 1), float64] */, dtype="float64") /* ty=Tensor[(1859, 1), float64] */;
  %284 = %281.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %286 = cast(meta[relay.Constant][14] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %287 = cast(%var_5014, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %288 = reshape(%283, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float64] */;
  %289 = reshape(%285, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %290 = reshape(%286, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %291 = reshape(%287, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %292 = @func_1160(%288, %289, %290, %291) /* ty=(Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) */;
  %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %294 = %282.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %296 = cast(%var_5018, dtype="float64") /* ty=Tensor[(462), float64] */;
  %297 = reshape(%293, newshape=[432]) /* ty=Tensor[(432), float32] */;
  %298 = reshape(%295, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %299 = reshape(%296, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %300 = @func_4910(%297, %298, %299) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) */;
  %301 = %292.2;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(990), float64] */;
  %303 = cast(%301, dtype="float64") /* ty=Tensor[(990), float64] */;
  %304 = cast(%301, dtype="float64") /* ty=Tensor[(990), float64] */;
  %305 = reshape(%302, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %306 = reshape(%303, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %307 = reshape(%304, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %308 = @func_292(%305, %306, %307) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %309 = %300.9;
  %310 = %308.3;
  (%284, %294, %301, meta[relay.Constant][13] /* ty=Tensor[(1859, 1), float64] */, meta[relay.Constant][14] /* ty=Tensor[(520), uint32] */, %var_5014, %309, meta[relay.Constant][15] /* ty=Tensor[(432), float32] */, %var_5018, %310)
}

def @func_5228() -> Tensor[(6, 9, 1), float64] {
  %311 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  log2(%312) /* ty=Tensor[(6, 9, 1), float64] */
}

def @func_5071() -> (Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), uint64], Tensor[(462), float64], Tensor[(462), float64]) {
  %313 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %315 = reshape(%314, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %316 = @func_4584(%315) /* ty=(Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) */;
  %317 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
  %318 = %313.0;
  %319 = %316.2;
  (%317, %318, %319, meta[relay.Constant][16] /* ty=Tensor[(462), float64] */)
}

def @func_5621() -> (Tensor[(6, 9, 1), float32],) {
  %320 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %322 = exp(%321) /* ty=Tensor[(6, 9, 1), float64] */;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %324 = cosh(%323) /* ty=Tensor[(6, 9, 1), float32] */;
  (%324,)
}

def @func_5487(%var_5477: Tensor[(6, 9, 12), int8], %var_5478: Tensor[(6, 9, 12), int8]) -> (Tensor[(6, 9, 12), float32],) {
  %325 = cast(%var_5478, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %326 = shape_of(%var_5477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%var_5477, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = less_equal(%327, %328) /* ty=Tensor[(6, 9, 12), bool] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %331 = sqrt(%330) /* ty=Tensor[(6, 9, 12), float32] */;
  (%331,)
}

def @func_1358(%var_1353: Tensor[(10, 15, 13), float64]) -> (Tensor[(10, 15, 13), float64],) {
  %332 = cast(%var_1353, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
  %333 = acosh(%332) /* ty=Tensor[(10, 15, 13), float64] */;
  (%333,)
}

def @func_6344() -> (Tensor[(6, 9, 15), float64], Tensor[(16, 5, 9), float32], Tensor[(4, 180), float64], Tensor[(6, 9, ?), int16], Tensor[(6, 9, 15), uint16]) {
  %334 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %335 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %336 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %337 = reshape(%335, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), float64] */;
  %338 = reshape(%336, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), float64] */;
  %339 = @func_5170(%337, %338) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) */;
  %340 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %341 = %340.0;
  %342 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %343 = %342.0;
  %344 = cast(%343, dtype="int16") /* ty=Tensor[(6, 9, 1), int16] */;
  %345 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%341, dtype="int16") /* ty=Tensor[(6, 9, 1), int16] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %348 = %334.0;
  %349 = %339.0;
  %350 = multiply(%346, %347) /* ty=Tensor[(6, 9, ?), int16] */;
  %351 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  (%348, %349, meta[relay.Constant][17] /* ty=Tensor[(4, 180), float64] */, %350, %351)
}

def @func_3142(%var_3067: Tensor[(10, 6, 8), float64]) -> (Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) {
  %352 = cast(meta[relay.Constant][19] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %353 = cast(meta[relay.Constant][18] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %354 = reshape(%352, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %355 = reshape(%353, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %356 = @func_2980(%354, %355) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) */;
  %357 = %356.4;
  %358 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  %359 = cast(%358, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %360 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%357, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %363 = cast(meta[relay.Constant][19] /* ty=Tensor[(810), float64] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %364 = cast(%357, dtype="bool") /* ty=Tensor[(6, 9, 1), bool] */;
  %365 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %366 = shape_of(%var_3067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_3067, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %369 = mod(%367, %368) /* ty=Tensor[(10, 6, 8), float64] */;
  %370 = cast(%var_3067, dtype="bool") /* ty=Tensor[(10, 6, 8), bool] */;
  %371 = shape_of(%369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%369, dtype="bool") /* ty=Tensor[(10, 6, 8), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %375 = cast(%369, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %376 = exp(%375) /* ty=Tensor[(10, 6, 8), float32] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %378 = bitwise_xor(%361, %362) /* ty=Tensor[(6, 9, ?), int8] */;
  %379 = not_equal(%363, %364) /* ty=Tensor[(6, 9, 810), bool] */;
  %380 = less_equal(%372, %373) /* ty=Tensor[(10, 6, 8), bool] */;
  %381 = acosh(%374) /* ty=Tensor[(10, 6, 8), float64] */;
  %382 = asin(%377) /* ty=Tensor[(10, 6, 8), float32] */;
  (meta[relay.Constant][18] /* ty=Tensor[(520), uint32] */, %378, %379, %380, %381, %382)
}

def @func_3695() -> (Tensor[(6, 9, 15), uint16],) {
  %383 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %384 = %383.0;
  (%384,)
}

def @func_2583() -> (Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
  %385 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %386 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %387 = cast(meta[relay.Constant][22] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %388 = reshape(%386, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %389 = reshape(%387, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %390 = @func_862(%388, %389) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %391 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %392 = cast(meta[relay.Constant][22] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %393 = cos(%392) /* ty=Tensor[(231, 2), float64] */;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %395 = cast(%393, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %396 = reshape(%394, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %397 = reshape(%395, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %398 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %399 = cast(%393, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
  %400 = log10(%399) /* ty=Tensor[(231, 2), float32] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %402 = reshape(%398, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %403 = reshape(%401, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %404 = @func_862(%402, %403) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %405 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %406 = cast(meta[relay.Constant][22] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
  %407 = reshape(%405, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %408 = reshape(%406, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %409 = @func_862(%407, %408) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %410 = %409.1;
  %411 = cast(%410, dtype="uint8") /* ty=Tensor[(3, 14, 11), uint8] */;
  %412 = shape_of(%400, dtype="int32") /* ty=Tensor[(2), int32] */;
  %413 = cast(%400, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %415 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %416 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %417 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %418 = reshape(%415, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %419 = reshape(%416, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %420 = reshape(%417, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %421 = @func_292(%418, %419, %420) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %422 = %385.0;
  %423 = %390.1;
  %424 = %391.0;
  %425 = @func_315(%396, %397) /* ty=Tensor[(3, 14, 11), float64] */;
  %426 = %404.1;
  %427 = multiply(%413, %414) /* ty=Tensor[(231, 2), uint8] */;
  %428 = %421.0;
  (%422, %423, meta[relay.Constant][21] /* ty=Tensor[(11, 14), float64] */, %424, %425, %426, %427, %428, meta[relay.Constant][23] /* ty=Tensor[(990), float64] */)
}

def @func_6218(%var_6210: Tensor[(3, 4, 16), int16], %var_6211: Tensor[(3, 4, 16), int16]) -> Tensor[(3, 4, 16), bool] {
  %429 = cast(%var_6211, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %430 = shape_of(%var_6210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_6210, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%431, %432) /* ty=Tensor[(3, 4, 16), bool] */
}

def @func_2793(%var_2780: Tensor[(3, 14, 11), uint32]) -> Tensor[(3, 14, 11), uint64] {
  %433 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %434 = %433.4;
  %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 14, 11), float64] */, dtype="uint32") /* ty=Tensor[(3, 14, 11), uint32] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="uint32") /* ty=Tensor[(3, 14, 11), uint32] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %439 = bitwise_and(%437, %438) /* ty=Tensor[(3, 14, 11), uint32] */;
  %440 = cast(%var_2780, dtype="uint64") /* ty=Tensor[(3, 14, 11), uint64] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="uint64") /* ty=Tensor[(3, 14, 11), uint64] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  logical_xor(%442, %443) /* ty=Tensor[(3, 14, 11), uint64] */
}

def @func_4677(%var_4627: Tensor[(6, 9, 8), float32], %var_4667: Tensor[(990), float64]) -> (Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
  %444 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %445 = %444.0;
  %446 = cast(%445, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %447 = cast(%var_4627, dtype="int8") /* ty=Tensor[(6, 9, 8), int8] */;
  %448 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
  %449 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
  %450 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
  %451 = reshape(%448, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %452 = reshape(%449, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %453 = reshape(%450, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %454 = @func_292(%451, %452, %453) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %455 = logical_xor(%446, %447) /* ty=Tensor[(6, 9, 8), int8] */;
  %456 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  %457 = %454.0;
  (%455, %456, %457, %var_4667)
}

def @func_6748(%var_6720: float64) -> (Tensor[(9, 12, 2), float64],) {
  %458 = cast(%var_6720, dtype="float64") /* ty=float64 */;
  %459 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 2), float64] */;
  %460 = floor_divide(%458, %459) /* ty=Tensor[(9, 12, 2), float64] */;
  (%460,)
}

def @func_20(%var_13: Tensor[(3, 5, 5), float32]) -> (Tensor[(3, 5, 5), float32],) {
  %461 = cast(-0.147225f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %462 = cast(%var_13, dtype="float32") /* ty=Tensor[(3, 5, 5), float32] */;
  %463 = floor_divide(%461, %462) /* ty=Tensor[(3, 5, 5), float32] */;
  (%463,)
}

def @func_3573(%var_3564: Tensor[(330, 3), float64], %var_3566: Tensor[(216), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) {
  %464 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %465 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %468 = cos(%467) /* ty=Tensor[(6, 9, 1), float64] */;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %470 = sigmoid(%469) /* ty=Tensor[(6, 9, 1), float64] */;
  %471 = cast(%468, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %475 = cast(meta[relay.Constant][26] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %476 = cast(%var_3564, dtype="float64") /* ty=Tensor[(330, 3), float64] */;
  %477 = cast(meta[relay.Constant][27] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %478 = cast(%var_3566, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %479 = reshape(%475, newshape=[7, 11, 8]) /* ty=Tensor[(7, 11, 8), float32] */;
  %480 = reshape(%476, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %481 = reshape(%477, newshape=[5, 104]) /* ty=Tensor[(5, 104), uint32] */;
  %482 = reshape(%478, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %483 = @func_2004(%479, %480, %481, %482) /* ty=(Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) */;
  %484 = %464.0;
  %485 = floor_divide(%473, %474) /* ty=Tensor[(6, 9, ?), float64] */;
  %486 = %483.5;
  (%484, %485, %486, meta[relay.Constant][26] /* ty=Tensor[(616), float32] */, %var_3564, meta[relay.Constant][27] /* ty=Tensor[(520), uint32] */, %var_3566)
}

def @main(%var_6943: Tensor[(5, 3, 14), float32], %var_6944: Tensor[(5, 3, 14), float32]) -> (Tensor[(5, 3, 14), float32],) {
  %487 = cast(%var_6944, dtype="float32") /* ty=Tensor[(5, 3, 14), float32] */;
  %488 = shape_of(%var_6943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_6943, dtype="float32") /* ty=Tensor[(5, 3, 14), float32] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %491 = add(%489, %490) /* ty=Tensor[(5, 3, 14), float32] */;
  (%491,)
}

def @func_4727() -> (Tensor[(6, 9, 1), float32],) {
  %492 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  (%492,)
}

def @func_2810() -> (Tensor[(6, 9, 15), uint16],) {
  %493 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %494 = %493.0;
  %495 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 9, 15), float64] */, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %499 = bitwise_xor(%497, %498) /* ty=Tensor[(6, 9, 15), uint16] */;
  (%499,)
}

def @func_3300(%var_3291: Tensor[(13, 4, 5), uint32], %var_3292: Tensor[(13, 4, 5), uint32]) -> (Tensor[(13, 4, 5), uint32],) {
  %500 = cast(%var_3292, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %501 = shape_of(%var_3291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%var_3291, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %504 = right_shift(%502, %503) /* ty=Tensor[(13, 4, 5), uint32] */;
  (%504,)
}

def @func_5734() -> (Tensor[(6, 9, 1), float32],) {
  %505 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %506 = %505.0;
  (%506,)
}

def @func_4092() -> (Tensor[(6, 11, 15), float64],) {
  %507 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
  %508 = %507.0;
  (%508,)
}

def @func_2980(%var_2939: Tensor[(6, 9, 15), float64], %var_2959: Tensor[(520), uint32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) {
  %509 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %510 = %509.0;
  %511 = cast(%var_2939, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%510, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %515 = cast(%var_2939, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %516 = cast(%var_2959, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %517 = cast(%var_2959, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %518 = reshape(%516, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %519 = reshape(%517, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %520 = @func_78(%518, %519) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %521 = bitwise_and(%513, %514) /* ty=Tensor[(6, 9, 15), int8] */;
  %522 = log2(%515) /* ty=Tensor[(6, 9, 15), float64] */;
  %523 = %520.0;
  %524 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%521, %522, %523, %var_2959, %524)
}

def @func_6783() -> Tensor[(6, 9, 1), float32] {
  %525 = @func_5621() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %525.0
}

def @func_6105() -> Tensor[(6, 9, 1), float32] {
  %526 = @func_4466() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) */;
  %526.3
}

def @func_6932() -> (Tensor[(12, 2, 15), float32],) {
  %527 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %528 = rsqrt(%527) /* ty=Tensor[(12, 2, 15), float32] */;
  (%528,)
}

def @func_2703(%var_2688: Tensor[(1950), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(1950), float64]) {
  %529 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %530 = cast(%var_2688, dtype="float64") /* ty=Tensor[(1950), float64] */;
  %531 = reshape(%530, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float64] */;
  %532 = @func_1358(%531) /* ty=(Tensor[(10, 15, 13), float64],) */;
  %533 = %529.0;
  %534 = %532.0;
  (%533, %534, %var_2688)
}

def @func_315(%var_307: Tensor[(3, 14, 11), float64], %var_308: Tensor[(3, 14, 11), float64]) -> Tensor[(3, 14, 11), float64] {
  %535 = cast(%var_308, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %536 = shape_of(%var_307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_307, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%537, %538) /* ty=Tensor[(3, 14, 11), float64] */
}

def @func_4318(%var_4279: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) {
  %539 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %540 = %539.0;
  %541 = cast(%540, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %542 = cast(%540, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %543 = log10(%542) /* ty=Tensor[(6, 9, 1), float32] */;
  %544 = cast(%543, dtype="uint64") /* ty=Tensor[(6, 9, 1), uint64] */;
  %545 = cast(%var_4279, dtype="uint64") /* ty=Tensor[(6, 9, 14), uint64] */;
  %546 = @func_3695() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %547 = %546.0;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %549 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %550 = cast(%540, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %551 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
  %552 = log(%541) /* ty=Tensor[(6, 9, 1), float64] */;
  %553 = subtract(%544, %545) /* ty=Tensor[(6, 9, 14), uint64] */;
  %554 = sin(%548) /* ty=Tensor[(6, 9, 15), float64] */;
  %555 = %549.1;
  %556 = acos(%550) /* ty=Tensor[(6, 9, 1), float32] */;
  %557 = %551.0;
  (%552, %553, %554, %555, %556, %557)
}

def @func_5523() -> Tensor[(6, 9, 1), float32] {
  @func_3042() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_2723() -> (Tensor[(6, 9, 15), float64],) {
  %558 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %559 = %558.0;
  (%559,)
}

def @func_862(%var_843: Tensor[(1, 14, 11), float64], %var_844: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) {
  %560 = cast(%var_843, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %561 = cast(%var_844, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %562 = cast(%var_844, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %563 = subtract(%560, %561) /* ty=Tensor[(3, 14, 11), float64] */;
  %564 = sin(%562) /* ty=Tensor[(3, 14, 11), float64] */;
  (%563, %564)
}

def @func_2467() -> Tensor[(6, 9, 1), float32] {
  %565 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %565.0
}

def @func_5936(%var_5896: Tensor[(9, 84), float32]) -> (Tensor[(6, 9, 15), uint16], Tensor[(9, 84), float32], Tensor[(6, 9, ?), int8], Tensor[(10, 6, 8), bool], Tensor[(480), float64], Tensor[(6, 9, ?), float32]) {
  %566 = @func_5697() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) */;
  %567 = cast(%var_5896, dtype="float32") /* ty=Tensor[(9, 84), float32] */;
  %568 = reshape(%567, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %569 = @func_4318(%568) /* ty=(Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) */;
  %570 = %569.0;
  %571 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %574 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %575 = cast(%570, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %577 = cast(meta[relay.Constant][30] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %578 = reshape(%577, newshape=[10, 6, 8]) /* ty=Tensor[(10, 6, 8), float64] */;
  %579 = @func_3142(%578) /* ty=(Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) */;
  %580 = cast(%572, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %581 = sqrt(%580) /* ty=Tensor[(6, 9, 1), float32] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %583 = rsqrt(%582) /* ty=Tensor[(6, 9, 1), float32] */;
  %584 = cast(%570, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %588 = %566.0;
  %589 = right_shift(%575, %576) /* ty=Tensor[(6, 9, ?), int8] */;
  %590 = %579.3;
  %591 = floor_mod(%586, %587) /* ty=Tensor[(6, 9, ?), float32] */;
  (%588, %var_5896, %589, %590, meta[relay.Constant][30] /* ty=Tensor[(480), float64] */, %591)
}

def @func_6671(%var_6635: Tensor[(6, 9, 728), float64]) -> (Tensor[(6, 9, 15), uint16], Tensor[(14, 4, 13), bool], Tensor[(6, 9, 728), int16], Tensor[(6, 9, 12), float32], Tensor[(648), int8]) {
  %592 = cast(meta[relay.Constant][31] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %593 = cast(meta[relay.Constant][31] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %594 = reshape(%592, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %595 = reshape(%593, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %596 = @func_1457(%594, %595) /* ty=(Tensor[(14, 4, 13), float32],) */;
  %597 = %596.0;
  %598 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 4, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %599 = shape_of(%597, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%597, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %602 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
  %603 = cast(%602, dtype="bool") /* ty=Tensor[(6, 9, 1), bool] */;
  %604 = cast(meta[relay.Constant][31] /* ty=Tensor[(728), uint16] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %605 = greater_equal(%603, %604) /* ty=Tensor[(6, 9, 728), bool] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(6, 9, 728), float64] */;
  %607 = asinh(%606) /* ty=Tensor[(6, 9, 728), float64] */;
  %608 = cast(%var_6635, dtype="int16") /* ty=Tensor[(6, 9, 728), int16] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="int16") /* ty=Tensor[(6, 9, 728), int16] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %612 = cast(meta[relay.Constant][33] /* ty=Tensor[(648), int8] */, dtype="int8") /* ty=Tensor[(648), int8] */;
  %613 = cast(meta[relay.Constant][33] /* ty=Tensor[(648), int8] */, dtype="int8") /* ty=Tensor[(648), int8] */;
  %614 = reshape(%612, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int8] */;
  %615 = reshape(%613, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int8] */;
  %616 = @func_5487(%614, %615) /* ty=(Tensor[(6, 9, 12), float32],) */;
  %617 = @func_3332() /* ty=Tensor[(6, 9, 15), uint16] */;
  %618 = less_equal(%600, %601) /* ty=Tensor[(14, 4, 13), bool] */;
  %619 = left_shift(%610, %611) /* ty=Tensor[(6, 9, 728), int16] */;
  %620 = %616.0;
  (%617, %618, %619, %620, meta[relay.Constant][33] /* ty=Tensor[(648), int8] */)
}

def @func_4736() -> (Tensor[(6, 9, 1), float32],) {
  %621 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  (%621,)
}

def @func_4342() -> Tensor[(6, 9, 15), uint16] {
  %622 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %622.0
}

def @func_1457(%var_1437: Tensor[(14, 4, 13), uint16], %var_1438: Tensor[(14, 4, 13), uint16]) -> (Tensor[(14, 4, 13), float32],) {
  %623 = cast(%var_1438, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %624 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%var_1437, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = greater(%625, %626) /* ty=Tensor[(14, 4, 13), bool] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  %629 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_1437, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %632 = floor_divide(%630, %631) /* ty=Tensor[(14, 4, 13), float32] */;
  (%632,)
}

def @func_4466() -> (Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) {
  %633 = @func_4092() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %634 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %636 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %637 = cast(meta[relay.Constant][34] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %638 = cast(meta[relay.Constant][34] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %639 = reshape(%637, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %640 = reshape(%638, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %641 = @func_315(%639, %640) /* ty=Tensor[(3, 14, 11), float64] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %643 = %633.0;
  %644 = log(%635) /* ty=Tensor[(6, 9, 15), float64] */;
  %645 = %636.0;
  %646 = sigmoid(%642) /* ty=Tensor[(3, 14, 11), float32] */;
  (%643, meta[relay.Constant][34] /* ty=Tensor[(462), float64] */, %644, %645, %646)
}

def @func_2004(%var_1971: Tensor[(7, 11, 8), float32], %var_1998: Tensor[(990), float64], %var_1999: Tensor[(5, 104), uint32], %var_2000: Tensor[(216), uint16]) -> (Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) {
  %647 = cast(%var_1971, dtype="float32") /* ty=Tensor[(7, 11, 8), float32] */;
  %648 = cast(%var_1971, dtype="float32") /* ty=Tensor[(7, 11, 8), float32] */;
  %649 = cast(meta[relay.Constant][35] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %650 = cast(%var_1998, dtype="float64") /* ty=Tensor[(990), float64] */;
  %651 = cast(%var_1999, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %652 = cast(%var_2000, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %653 = reshape(%649, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float64] */;
  %654 = reshape(%650, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %655 = reshape(%651, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %656 = reshape(%652, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %657 = @func_1160(%653, %654, %655, %656) /* ty=(Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) */;
  %658 = cosh(%647) /* ty=Tensor[(7, 11, 8), float32] */;
  %659 = sigmoid(%648) /* ty=Tensor[(7, 11, 8), float32] */;
  %660 = %657.5;
  (%658, %659, %660, meta[relay.Constant][35] /* ty=Tensor[(1859), float64] */, %var_1998, %var_1999, %var_2000)
}

def @func_959(%var_941: Tensor[(6, 4, 9), uint16], %var_955: Tensor[(6, 4, 9), float64]) -> (Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) {
  %661 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 4, 9), uint16] */, dtype="bool") /* ty=Tensor[(6, 4, 9), bool] */;
  %662 = shape_of(%var_941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_941, dtype="bool") /* ty=Tensor[(6, 4, 9), bool] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %665 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %666 = erf(%665) /* ty=Tensor[(6, 4, 9), float64] */;
  %667 = cast(%var_955, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %668 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%666, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %671 = equal(%663, %664) /* ty=Tensor[(6, 4, 9), bool] */;
  %672 = divide(%669, %670) /* ty=Tensor[(6, 4, 9), float64] */;
  (%671, %672)
}

def @func_6005() -> Tensor[(6, 9, 15), uint16] {
  %673 = @func_5697() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) */;
  %673.0
}

def @func_2422() -> (Tensor[(6, 9, 1), float32],) {
  %674 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %675 = sinh(%674) /* ty=Tensor[(6, 9, 1), float32] */;
  (%675,)
}

def @func_5651(%var_5627: Tensor[(4, 11, 12), float32], %var_5649: Tensor[(260, 2), uint32]) -> (Tensor[(4, 11, 12), float32], Tensor[(6, 9, 1), float32], Tensor[(810), float64], Tensor[(260, 2), uint32]) {
  %676 = cast(%var_5627, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %677 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(4, 11, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %680 = cast(meta[relay.Constant][39] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %681 = cast(%var_5649, dtype="uint32") /* ty=Tensor[(260, 2), uint32] */;
  %682 = reshape(%680, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %683 = reshape(%681, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %684 = @func_2980(%682, %683) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) */;
  %685 = mod(%678, %679) /* ty=Tensor[(4, 11, 12), float32] */;
  %686 = %684.4;
  (%685, %686, meta[relay.Constant][39] /* ty=Tensor[(810), float64] */, %var_5649)
}

def @func_5510() -> (Tensor[(990), float64], Tensor[(6, 9, 810), bool], Tensor[(480), float64]) {
  %687 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %688 = cast(meta[relay.Constant][40] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %689 = reshape(%688, newshape=[10, 6, 8]) /* ty=Tensor[(10, 6, 8), float64] */;
  %690 = @func_3142(%689) /* ty=(Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) */;
  %691 = %687.8;
  %692 = %690.2;
  (%691, %692, meta[relay.Constant][40] /* ty=Tensor[(480), float64] */)
}

def @func_2843() -> (Tensor[(6, 9, ?), float32],) {
  %693 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %694 = %693.0;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %696 = atanh(%695) /* ty=Tensor[(6, 9, 1), float32] */;
  %697 = cast(%694, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(%696, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %701 = mod(%699, %700) /* ty=Tensor[(6, 9, ?), float32] */;
  (%701,)
}

def @func_3204() -> Tensor[(6, 9, 1), float32] {
  @func_2467() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_4910(%var_4830: Tensor[(432), float32], %var_4831: Tensor[(990), float64], %var_4877: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) {
  %702 = cast(%var_4830, dtype="float32") /* ty=Tensor[(432), float32] */;
  %703 = cast(%var_4831, dtype="float64") /* ty=Tensor[(990), float64] */;
  %704 = reshape(%702, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %705 = reshape(%703, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %706 = @func_4677(%704, %705) /* ty=(Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %707 = cast(meta[relay.Constant][41] /* ty=Tensor[(990), float64] */, dtype="uint16") /* ty=Tensor[(990), uint16] */;
  %708 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(1), int32] */;
  %709 = cast(%var_4831, dtype="uint16") /* ty=Tensor[(990), uint16] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %711 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 104), uint32] */, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %712 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 104), uint32] */, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %713 = reshape(%711, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %714 = reshape(%712, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %715 = @func_78(%713, %714) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %716 = cast(meta[relay.Constant][43] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %717 = reshape(%716, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), float32] */;
  %718 = @func_4360(%717) /* ty=(Tensor[(8, 9, 13), float32],) */;
  %719 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %720 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %721 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %722 = reshape(%720, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %723 = reshape(%721, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %724 = @func_4736() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %725 = %724.0;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %727 = asin(%726) /* ty=Tensor[(6, 9, 1), float32] */;
  %728 = cast(%727, dtype="int32") /* ty=Tensor[(6, 9, 1), int32] */;
  %729 = cast(%var_4877, dtype="int32") /* ty=Tensor[(462), int32] */;
  %730 = cast(%727, dtype="uint8") /* ty=Tensor[(6, 9, 1), uint8] */;
  %731 = cast(meta[relay.Constant][41] /* ty=Tensor[(990), float64] */, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %732 = bitwise_xor(%730, %731) /* ty=Tensor[(6, 9, 990), uint8] */;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(6, 9, 990), float32] */;
  %734 = cast(%727, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %735 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %736 = reshape(%735, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %737 = @func_4584(%736) /* ty=(Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %740 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %741 = reshape(%739, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %742 = reshape(%740, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %743 = @func_862(%741, %742) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %744 = %706.2;
  %745 = logical_xor(%709, %710) /* ty=Tensor[(990), uint16] */;
  %746 = %715.0;
  %747 = %718.0;
  %748 = %719.1;
  %749 = @func_315(%722, %723) /* ty=Tensor[(3, 14, 11), float64] */;
  %750 = right_shift(%728, %729) /* ty=Tensor[(6, 9, 462), int32] */;
  %751 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %752 = floor_divide(%733, %734) /* ty=Tensor[(6, 9, 990), float32] */;
  %753 = %743.1;
  (%744, %var_4830, %745, %746, meta[relay.Constant][42] /* ty=Tensor[(5, 104), uint32] */, %747, meta[relay.Constant][43] /* ty=Tensor[(936), float32] */, %748, %749, %750, %751, %752, %738, %753)
}

def @func_3042() -> Tensor[(6, 9, 1), float32] {
  %754 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %754.0
}

def @func_4160() -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
  %755 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %756 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %757 = %755.0;
  %758 = %756.0;
  (%757, %758)
}

def @func_4584(%var_4558: Tensor[(462), float64]) -> (Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) {
  %759 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %760 = %759.2;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %762 = cast(%var_4558, dtype="float64") /* ty=Tensor[(462), float64] */;
  %763 = reshape(%761, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %764 = reshape(%762, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %765 = @func_862(%763, %764) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %766 = cast(meta[relay.Constant][44] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %767 = reshape(%766, newshape=[756]) /* ty=Tensor[(756), float32] */;
  %768 = @func_4403(%767) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) */;
  %769 = %768.2;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(756), float64] */;
  %771 = %765.1;
  %772 = asinh(%770) /* ty=Tensor[(756), float64] */;
  %773 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%760, %771, %var_4558, meta[relay.Constant][44] /* ty=Tensor[(756), float32] */, %772, %773)
}

def @func_5421(%var_5382: Tensor[(6, 9, 15), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) {
  %774 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  %775 = cast(%var_5382, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%774, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %779 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 9, 15), uint16] */, dtype="uint8") /* ty=Tensor[(6, 9, 15), uint8] */;
  %780 = shape_of(%var_5382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_5382, dtype="uint8") /* ty=Tensor[(6, 9, 15), uint8] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %783 = multiply(%777, %778) /* ty=Tensor[(6, 9, 15), float64] */;
  %784 = logical_xor(%781, %782) /* ty=Tensor[(6, 9, 15), uint8] */;
  (%783, %784)
}

def @func_4403(%var_4398: Tensor[(756), float32]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) {
  %785 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %786 = cast(%var_4398, dtype="float32") /* ty=Tensor[(756), float32] */;
  %787 = reshape(%786, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %788 = @func_4318(%787) /* ty=(Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) */;
  %789 = %785.0;
  %790 = %788.1;
  (%789, %790, %var_4398)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5621() -> (Tensor[(6, 9, 1), float32],) {
  %0 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
  %1 = cast(%0, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %2 = exp(%1) /* ty=Tensor[(6, 9, 1), float64] */;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %4 = cosh(%3) /* ty=Tensor[(6, 9, 1), float32] */;
  (%4,)
}

def @func_5833(%var_5816: Tensor[(15, 9, 16), bool]) -> (Tensor[(15, 9, 16), bool], Tensor[(6, 11, 15), float32]) {
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 9, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %6 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%var_5816, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %9 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %12 = logical_and(%7, %8) /* ty=Tensor[(15, 9, 16), bool] */;
  %13 = cos(%11) /* ty=Tensor[(6, 11, 15), float32] */;
  (%12, %13)
}

def @func_6560(%var_6558: Tensor[(11, 7, 1), bool], %var_6559: Tensor[(11, 7, 8), bool]) -> Tensor[(11, 7, 8), bool] {
  @func_6556(%var_6558, %var_6559) /* ty=Tensor[(11, 7, 8), bool] */
}

def @func_2795(%var_2794: Tensor[(3, 14, 11), uint32]) -> Tensor[(3, 14, 11), uint64] {
  %25 = fn (%var_2780: Tensor[(3, 14, 11), uint32]) -> Tensor[(3, 14, 11), uint64] {
    %14 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
    %15 = %14.4;
    %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 14, 11), float64] */, dtype="uint32") /* ty=Tensor[(3, 14, 11), uint32] */;
    %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%15, dtype="uint32") /* ty=Tensor[(3, 14, 11), uint32] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %20 = bitwise_and(%18, %19) /* ty=Tensor[(3, 14, 11), uint32] */;
    %21 = cast(%var_2780, dtype="uint64") /* ty=Tensor[(3, 14, 11), uint64] */;
    %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
    %23 = cast(%20, dtype="uint64") /* ty=Tensor[(3, 14, 11), uint64] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    logical_xor(%23, %24) /* ty=Tensor[(3, 14, 11), uint64] */
  };
  %25(%var_2794) /* ty=Tensor[(3, 14, 11), uint64] */
}

def @func_963(%var_961: Tensor[(6, 4, 9), uint16], %var_962: Tensor[(6, 4, 9), float64]) -> (Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) {
  @func_959(%var_961, %var_962) /* ty=(Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) */
}

def @func_2725() -> (Tensor[(6, 9, 15), float64],) {
  @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_3044() -> Tensor[(6, 9, 1), float32] {
  @func_3042() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_5561() -> (Tensor[(6, 11, 15), float64],) {
  @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */
}

def @func_4466() -> (Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) {
  %26 = @func_4092() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %27 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  %28 = cast(%27, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %29 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %32 = reshape(%30, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %33 = reshape(%31, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %34 = @func_315(%32, %33) /* ty=Tensor[(3, 14, 11), float64] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(3, 14, 11), float32] */;
  %36 = %26.0;
  %37 = log(%28) /* ty=Tensor[(6, 9, 15), float64] */;
  %38 = %29.0;
  %39 = sigmoid(%35) /* ty=Tensor[(3, 14, 11), float32] */;
  (%36, meta[relay.Constant][2] /* ty=Tensor[(462), float64] */, %37, %38, %39)
}

def @func_2811() -> (Tensor[(6, 9, 15), uint16],) {
  %47 = fn () -> (Tensor[(6, 9, 15), uint16],) {
    %40 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %41 = %40.0;
    %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 9, 15), float64] */, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
    %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
    %44 = cast(%41, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %46 = bitwise_xor(%44, %45) /* ty=Tensor[(6, 9, 15), uint16] */;
    (%46,)
  };
  %47() /* ty=(Tensor[(6, 9, 15), uint16],) */
}

def @func_3433() -> (Tensor[(6, 9, 1), float32],) {
  @func_3431() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_3577(%var_3575: Tensor[(330, 3), float64], %var_3576: Tensor[(216), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) {
  @func_3573(%var_3575, %var_3576) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) */
}

def @func_4403(%var_4398: Tensor[(756), float32]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) {
  %48 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %49 = cast(%var_4398, dtype="float32") /* ty=Tensor[(756), float32] */;
  %50 = reshape(%49, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %51 = @func_4318(%50) /* ty=(Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) */;
  %52 = %48.0;
  %53 = %51.1;
  (%52, %53, %var_4398)
}

def @func_3796() -> (Tensor[(6, 9, 15), float64],) {
  @func_3794() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_6051() -> (Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(252), float64], Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 1), float32]) {
  %71 = fn () -> (Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(252), float64], Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 1), float32]) {
    %54 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
    %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %57 = reshape(%55, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %58 = reshape(%56, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %59 = @func_5459(%57, %58) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
    %60 = %59.0;
    %61 = cast(%60, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    %62 = cast(%60, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    %63 = reshape(%61, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %64 = reshape(%62, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %65 = @func_5459(%63, %64) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
    %66 = @func_4136() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %67 = %54.0;
    %68 = @func_3332() /* ty=Tensor[(6, 9, 15), uint16] */;
    %69 = %65.0;
    %70 = %66.0;
    (%67, %60, meta[relay.Constant][4] /* ty=Tensor[(252), float64] */, %68, %69, %70)
  };
  %71() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(252), float64], Tensor[(6, 9, 15), uint16], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 1), float32]) */
}

def @func_4360(%var_4352: Tensor[(8, 9, 13), float32]) -> (Tensor[(8, 9, 13), float32],) {
  %72 = cast(%var_4352, dtype="float32") /* ty=Tensor[(8, 9, 13), float32] */;
  %73 = erf(%72) /* ty=Tensor[(8, 9, 13), float32] */;
  (%73,)
}

def @func_3206() -> Tensor[(6, 9, 1), float32] {
  @func_3204() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_862(%var_843: Tensor[(1, 14, 11), float64], %var_844: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) {
  %74 = cast(%var_843, dtype="float64") /* ty=Tensor[(1, 14, 11), float64] */;
  %75 = cast(%var_844, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %76 = cast(%var_844, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
  %77 = subtract(%74, %75) /* ty=Tensor[(3, 14, 11), float64] */;
  %78 = sin(%76) /* ty=Tensor[(3, 14, 11), float64] */;
  (%77, %78)
}

def @func_2010(%var_2006: Tensor[(7, 11, 8), float32], %var_2007: Tensor[(990), float64], %var_2008: Tensor[(5, 104), uint32], %var_2009: Tensor[(216), uint16]) -> (Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) {
  @func_2004(%var_2006, %var_2007, %var_2008, %var_2009) /* ty=(Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) */
}

def @func_4964(%var_4962: Tensor[(4, 16, 7), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 16, 7), float32], Tensor[(6, 9, 1), float32]) {
  @func_4961(%var_4962) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(4, 16, 7), float32], Tensor[(6, 9, 1), float32]) */
}

def @func_3695() -> (Tensor[(6, 9, 15), uint16],) {
  %79 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %80 = %79.0;
  (%80,)
}

def @func_6218(%var_6210: Tensor[(3, 4, 16), int16], %var_6211: Tensor[(3, 4, 16), int16]) -> Tensor[(3, 4, 16), bool] {
  %81 = cast(%var_6211, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %82 = shape_of(%var_6210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_6210, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%83, %84) /* ty=Tensor[(3, 4, 16), bool] */
}

def @func_3929() -> (Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) {
  @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */
}

def @func_2423() -> (Tensor[(6, 9, 1), float32],) {
  %87 = fn () -> (Tensor[(6, 9, 1), float32],) {
    %85 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
    %86 = sinh(%85) /* ty=Tensor[(6, 9, 1), float32] */;
    (%86,)
  };
  %87() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_6934() -> (Tensor[(12, 2, 15), float32],) {
  @func_6932() /* ty=(Tensor[(12, 2, 15), float32],) */
}

def @func_6006() -> Tensor[(6, 9, 15), uint16] {
  %89 = fn () -> Tensor[(6, 9, 15), uint16] {
    %88 = @func_5697() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) */;
    %88.0
  };
  %89() /* ty=Tensor[(6, 9, 15), uint16] */
}

def @func_3142(%var_3067: Tensor[(10, 6, 8), float64]) -> (Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) {
  %90 = cast(meta[relay.Constant][7] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %92 = reshape(%90, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %93 = reshape(%91, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %94 = @func_2980(%92, %93) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) */;
  %95 = %94.4;
  %96 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  %97 = cast(%96, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %98 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%95, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(810), float64] */, dtype="bool") /* ty=Tensor[(810), bool] */;
  %102 = cast(%95, dtype="bool") /* ty=Tensor[(6, 9, 1), bool] */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %104 = shape_of(%var_3067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_3067, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %107 = mod(%105, %106) /* ty=Tensor[(10, 6, 8), float64] */;
  %108 = cast(%var_3067, dtype="bool") /* ty=Tensor[(10, 6, 8), bool] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="bool") /* ty=Tensor[(10, 6, 8), bool] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %112 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 6, 8), float64] */;
  %113 = cast(%107, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %114 = exp(%113) /* ty=Tensor[(10, 6, 8), float32] */;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(10, 6, 8), float32] */;
  %116 = bitwise_xor(%99, %100) /* ty=Tensor[(6, 9, ?), int8] */;
  %117 = not_equal(%101, %102) /* ty=Tensor[(6, 9, 810), bool] */;
  %118 = less_equal(%110, %111) /* ty=Tensor[(10, 6, 8), bool] */;
  %119 = acosh(%112) /* ty=Tensor[(10, 6, 8), float64] */;
  %120 = asin(%115) /* ty=Tensor[(10, 6, 8), float32] */;
  (meta[relay.Constant][6] /* ty=Tensor[(520), uint32] */, %116, %117, %118, %119, %120)
}

def @func_2480() -> (Tensor[(6, 9, 1), float32],) {
  %123 = fn () -> (Tensor[(6, 9, 1), float32],) {
    %121 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %122 = %121.0;
    (%122,)
  };
  %123() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_3333() -> Tensor[(6, 9, 15), uint16] {
  %125 = fn () -> Tensor[(6, 9, 15), uint16] {
    %124 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
    %124.0
  };
  %125() /* ty=Tensor[(6, 9, 15), uint16] */
}

def @func_5939(%var_5937: Tensor[(9, 84), float32]) -> (Tensor[(6, 9, 15), uint16], Tensor[(9, 84), float32], Tensor[(6, 9, ?), int8], Tensor[(10, 6, 8), bool], Tensor[(480), float64], Tensor[(6, 9, ?), float32]) {
  @func_5936(%var_5937) /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(9, 84), float32], Tensor[(6, 9, ?), int8], Tensor[(10, 6, 8), bool], Tensor[(480), float64], Tensor[(6, 9, ?), float32]) */
}

def @func_5173(%var_5171: Tensor[(16, 5, 9), float64], %var_5172: Tensor[(16, 5, 9), float64]) -> (Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) {
  %135 = fn (%var_5148: Tensor[(16, 5, 9), float64], %var_5151: Tensor[(16, 5, 9), float64]) -> (Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) {
    %126 = cast(%var_5148, dtype="float64") /* ty=Tensor[(16, 5, 9), float64] */;
    %127 = log(%126) /* ty=Tensor[(16, 5, 9), float64] */;
    %128 = cast(%var_5151, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
    %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %130 = cast(%127, dtype="float32") /* ty=Tensor[(16, 5, 9), float32] */;
    %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %132 = @func_5143() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) */;
    %133 = floor_divide(%130, %131) /* ty=Tensor[(16, 5, 9), float32] */;
    %134 = %132.1;
    (%133, %134)
  };
  %135(%var_5171, %var_5172) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) */
}

def @func_4092() -> (Tensor[(6, 11, 15), float64],) {
  %136 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
  %137 = %136.0;
  (%137,)
}

def @func_6556(%var_6551: Tensor[(11, 7, 1), bool], %var_6552: Tensor[(11, 7, 8), bool]) -> Tensor[(11, 7, 8), bool] {
  %138 = cast(%var_6551, dtype="bool") /* ty=Tensor[(11, 7, 1), bool] */;
  %139 = cast(%var_6552, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  logical_and(%138, %139) /* ty=Tensor[(11, 7, 8), bool] */
}

def @func_4161() -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
  %144 = fn () -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
    %140 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
    %141 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %142 = %140.0;
    %143 = %141.0;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */
}

def @func_6446(%var_6445: Tensor[(252), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(216), uint16], Tensor[(990), uint64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), uint16], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), float64]) {
  %173 = fn (%var_6375: Tensor[(252), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(216), uint16], Tensor[(990), uint64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), uint16], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), float64]) {
    %145 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(216), uint16] */, dtype="uint16") /* ty=Tensor[(216), uint16] */;
    %148 = reshape(%146, newshape=[330, 3]) /* ty=Tensor[(330, 3), float64] */;
    %149 = reshape(%147, newshape=[216]) /* ty=Tensor[(216), uint16] */;
    %150 = @func_3573(%148, %149) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) */;
    %151 = cast(meta[relay.Constant][11] /* ty=Tensor[(990), float64] */, dtype="uint64") /* ty=Tensor[(990), uint64] */;
    %152 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %153 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, dtype="uint64") /* ty=Tensor[(990), uint64] */;
    %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %155 = cast(%var_6375, dtype="float64") /* ty=Tensor[(252), float64] */;
    %156 = cast(%var_6375, dtype="float64") /* ty=Tensor[(252), float64] */;
    %157 = reshape(%155, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %158 = reshape(%156, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %159 = @func_5459(%157, %158) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
    %160 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
    %161 = %150.0;
    %162 = cast(%161, dtype="uint16") /* ty=Tensor[(6, 9, 15), uint16] */;
    %163 = reshape(%162, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), uint16] */;
    %164 = @func_5421(%163) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) */;
    %165 = %145.0;
    %166 = bitwise_or(%153, %154) /* ty=Tensor[(990), uint64] */;
    %167 = %159.1;
    %168 = @func_3042() /* ty=Tensor[(6, 9, 1), float32] */;
    %169 = @func_6005() /* ty=Tensor[(6, 9, 15), uint16] */;
    %170 = %160.1;
    %171 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
    %172 = %164.0;
    (%165, %161, meta[relay.Constant][10] /* ty=Tensor[(216), uint16] */, %166, %167, %var_6375, %168, %169, %170, %171, %172)
  };
  %173(%var_6445) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(216), uint16], Tensor[(990), uint64], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), uint16], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 15), float64]) */
}

def @func_5559() -> (Tensor[(6, 11, 15), float64],) {
  %174 = @func_4092() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %175 = %174.0;
  (%175,)
}

def @func_5462(%var_5460: Tensor[(7, 9, 4), float64], %var_5461: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) {
  %188 = fn (%var_5440: Tensor[(7, 9, 4), float64], %var_5444: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) {
    %176 = cast(%var_5444, dtype="int16") /* ty=Tensor[(7, 9, 4), int16] */;
    %177 = shape_of(%var_5440, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%var_5440, dtype="int16") /* ty=Tensor[(7, 9, 4), int16] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %180 = cast(%var_5440, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    %181 = sinh(%180) /* ty=Tensor[(7, 9, 4), float64] */;
    %182 = cast(%var_5440, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
    %184 = cast(%181, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
    %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %186 = logical_xor(%178, %179) /* ty=Tensor[(7, 9, 4), int16] */;
    %187 = maximum(%184, %185) /* ty=Tensor[(7, 9, 4), float64] */;
    (%186, %187)
  };
  %188(%var_5460, %var_5461) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */
}

def @func_5699() -> (Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) {
  @func_5697() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) */
}

def @func_6932() -> (Tensor[(12, 2, 15), float32],) {
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 15), float32] */;
  %190 = rsqrt(%189) /* ty=Tensor[(12, 2, 15), float32] */;
  (%190,)
}

def @func_6750(%var_6749: float64) -> (Tensor[(9, 12, 2), float64],) {
  %194 = fn (%var_6720: float64) -> (Tensor[(9, 12, 2), float64],) {
    %191 = cast(%var_6720, dtype="float64") /* ty=float64 */;
    %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 2), float64] */;
    %193 = floor_divide(%191, %192) /* ty=Tensor[(9, 12, 2), float64] */;
    (%193,)
  };
  %194(%var_6749) /* ty=(Tensor[(9, 12, 2), float64],) */
}

def @func_1461(%var_1459: Tensor[(14, 4, 13), uint16], %var_1460: Tensor[(14, 4, 13), uint16]) -> (Tensor[(14, 4, 13), float32],) {
  @func_1457(%var_1459, %var_1460) /* ty=(Tensor[(14, 4, 13), float32],) */
}

def @func_2584() -> (Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
  %239 = fn () -> (Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
    %195 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %196 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %198 = reshape(%196, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %199 = reshape(%197, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %200 = @func_862(%198, %199) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
    %201 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %202 = cast(meta[relay.Constant][15] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %203 = cos(%202) /* ty=Tensor[(231, 2), float64] */;
    %204 = cast(%203, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %205 = cast(%203, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %206 = reshape(%204, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %207 = reshape(%205, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %208 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %209 = cast(%203, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
    %210 = log10(%209) /* ty=Tensor[(231, 2), float32] */;
    %211 = cast(%210, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %212 = reshape(%208, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %213 = reshape(%211, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %214 = @func_862(%212, %213) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
    %215 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %216 = cast(meta[relay.Constant][15] /* ty=Tensor[(231, 2), float64] */, dtype="float64") /* ty=Tensor[(231, 2), float64] */;
    %217 = reshape(%215, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %218 = reshape(%216, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %219 = @func_862(%217, %218) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
    %220 = %219.1;
    %221 = cast(%220, dtype="uint8") /* ty=Tensor[(3, 14, 11), uint8] */;
    %222 = shape_of(%210, dtype="int32") /* ty=Tensor[(2), int32] */;
    %223 = cast(%210, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %226 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %227 = cast(meta[relay.Constant][16] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %228 = reshape(%225, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %229 = reshape(%226, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %230 = reshape(%227, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %231 = @func_292(%228, %229, %230) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
    %232 = %195.0;
    %233 = %200.1;
    %234 = %201.0;
    %235 = @func_315(%206, %207) /* ty=Tensor[(3, 14, 11), float64] */;
    %236 = %214.1;
    %237 = multiply(%223, %224) /* ty=Tensor[(231, 2), uint8] */;
    %238 = %231.0;
    (%232, %233, meta[relay.Constant][14] /* ty=Tensor[(11, 14), float64] */, %234, %235, %236, %237, %238, meta[relay.Constant][16] /* ty=Tensor[(990), float64] */)
  };
  %239() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */
}

def @func_4910(%var_4830: Tensor[(432), float32], %var_4831: Tensor[(990), float64], %var_4877: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) {
  %240 = cast(%var_4830, dtype="float32") /* ty=Tensor[(432), float32] */;
  %241 = cast(%var_4831, dtype="float64") /* ty=Tensor[(990), float64] */;
  %242 = reshape(%240, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %243 = reshape(%241, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %244 = @func_4677(%242, %243) /* ty=(Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %245 = cast(meta[relay.Constant][17] /* ty=Tensor[(990), float64] */, dtype="uint16") /* ty=Tensor[(990), uint16] */;
  %246 = shape_of(%var_4831, dtype="int32") /* ty=Tensor[(1), int32] */;
  %247 = cast(%var_4831, dtype="uint16") /* ty=Tensor[(990), uint16] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %249 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint32] */, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %250 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint32] */, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %251 = reshape(%249, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %252 = reshape(%250, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %253 = @func_78(%251, %252) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %255 = reshape(%254, newshape=[8, 9, 13]) /* ty=Tensor[(8, 9, 13), float32] */;
  %256 = @func_4360(%255) /* ty=(Tensor[(8, 9, 13), float32],) */;
  %257 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %258 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %259 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %260 = reshape(%258, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %261 = reshape(%259, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %262 = @func_4736() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %263 = %262.0;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %265 = asin(%264) /* ty=Tensor[(6, 9, 1), float32] */;
  %266 = cast(%265, dtype="int32") /* ty=Tensor[(6, 9, 1), int32] */;
  %267 = cast(%var_4877, dtype="int32") /* ty=Tensor[(462), int32] */;
  %268 = cast(%265, dtype="uint8") /* ty=Tensor[(6, 9, 1), uint8] */;
  %269 = cast(meta[relay.Constant][17] /* ty=Tensor[(990), float64] */, dtype="uint8") /* ty=Tensor[(990), uint8] */;
  %270 = bitwise_xor(%268, %269) /* ty=Tensor[(6, 9, 990), uint8] */;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(6, 9, 990), float32] */;
  %272 = cast(%265, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %273 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %274 = reshape(%273, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %275 = @func_4584(%274) /* ty=(Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) */;
  %276 = %275.0;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %278 = cast(%var_4877, dtype="float64") /* ty=Tensor[(462), float64] */;
  %279 = reshape(%277, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
  %280 = reshape(%278, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
  %281 = @func_862(%279, %280) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
  %282 = %244.2;
  %283 = logical_xor(%247, %248) /* ty=Tensor[(990), uint16] */;
  %284 = %253.0;
  %285 = %256.0;
  %286 = %257.1;
  %287 = @func_315(%260, %261) /* ty=Tensor[(3, 14, 11), float64] */;
  %288 = right_shift(%266, %267) /* ty=Tensor[(6, 9, 462), int32] */;
  %289 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %290 = floor_divide(%271, %272) /* ty=Tensor[(6, 9, 990), float32] */;
  %291 = %281.1;
  (%282, %var_4830, %283, %284, meta[relay.Constant][18] /* ty=Tensor[(5, 104), uint32] */, %285, meta[relay.Constant][19] /* ty=Tensor[(936), float32] */, %286, %287, %288, %289, %290, %276, %291)
}

def @func_3697() -> (Tensor[(6, 9, 15), uint16],) {
  @func_3695() /* ty=(Tensor[(6, 9, 15), uint16],) */
}

def @func_3492(%var_3488: Tensor[(6, 9, 9), float32], %var_3489: Tensor[(154, 4), float32], %var_3490: Tensor[(990), float64], %var_3491: Tensor[(1, 216), uint16]) -> (Tensor[(6, 9, 9), uint16], Tensor[(6, 9, 9), float64], Tensor[(3, 5, 5), float32], Tensor[(75), float32], Tensor[(5, 104), uint32], Tensor[(154, 4), float32], Tensor[(10, 52), uint32], Tensor[(1, 216), uint16], Tensor[(14, 4, 13), float32], Tensor[(728), uint16], Tensor[(990), float64]) {
  @func_3486(%var_3488, %var_3489, %var_3490, %var_3491) /* ty=(Tensor[(6, 9, 9), uint16], Tensor[(6, 9, 9), float64], Tensor[(3, 5, 5), float32], Tensor[(75), float32], Tensor[(5, 104), uint32], Tensor[(154, 4), float32], Tensor[(10, 52), uint32], Tensor[(1, 216), uint16], Tensor[(14, 4, 13), float32], Tensor[(728), uint16], Tensor[(990), float64]) */
}

def @func_5207(%var_5178: Tensor[(3, 16, 15), uint8], %var_5179: Tensor[(3, 16, 15), uint8]) -> (Tensor[(3, 16, 15), uint8], Tensor[(3, 16, 15), float32], Tensor[(6, 11, 15), float64], Tensor[(6, 9, 15), uint16]) {
  %292 = cast(%var_5179, dtype="uint8") /* ty=Tensor[(3, 16, 15), uint8] */;
  %293 = shape_of(%var_5178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_5178, dtype="uint8") /* ty=Tensor[(3, 16, 15), uint8] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %296 = cast(%var_5178, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %297 = shape_of(%var_5179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_5179, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %300 = @func_4466() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) */;
  %301 = right_shift(%294, %295) /* ty=Tensor[(3, 16, 15), uint8] */;
  %302 = floor_mod(%298, %299) /* ty=Tensor[(3, 16, 15), float32] */;
  %303 = %300.0;
  %304 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
  (%301, %302, %303, %304)
}

def @func_4363(%var_4361: Tensor[(8, 9, 13), float32]) -> (Tensor[(8, 9, 13), float32],) {
  @func_4360(%var_4361) /* ty=(Tensor[(8, 9, 13), float32],) */
}

def @func_20(%var_13: Tensor[(3, 5, 5), float32]) -> (Tensor[(3, 5, 5), float32],) {
  %305 = cast(-0.147225f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %306 = cast(%var_13, dtype="float32") /* ty=Tensor[(3, 5, 5), float32] */;
  %307 = floor_divide(%305, %306) /* ty=Tensor[(3, 5, 5), float32] */;
  (%307,)
}

def @func_292(%var_245: Tensor[(6, 11, 15), float64], %var_246: Tensor[(6, 11, 15), float64], %var_272: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) {
  %308 = cast(%var_246, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %309 = shape_of(%var_245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%var_245, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %312 = equal(%310, %311) /* ty=Tensor[(6, 11, 15), bool] */;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %314 = acos(%313) /* ty=Tensor[(6, 11, 15), float64] */;
  %315 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 15), float64] */, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %319 = cast(meta[relay.Constant][21] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %320 = cast(meta[relay.Constant][21] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %321 = reshape(%319, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %322 = reshape(%320, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %323 = @func_78(%321, %322) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %324 = cast(%var_272, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %325 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(6, 11, 15), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = cast(%312, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %329 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%314, dtype="uint64") /* ty=Tensor[(6, 11, 15), uint64] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %332 = maximum(%317, %318) /* ty=Tensor[(6, 11, 15), uint64] */;
  %333 = %323.0;
  %334 = logical_or(%326, %327) /* ty=Tensor[(6, 11, 15), bool] */;
  %335 = bitwise_or(%330, %331) /* ty=Tensor[(6, 11, 15), uint64] */;
  (%332, %333, meta[relay.Constant][21] /* ty=Tensor[(520), uint32] */, %334, %335)
}

def @func_6838() -> (Tensor[(6, 9, 1), float32],) {
  @func_6836() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_5623() -> (Tensor[(6, 9, 1), float32],) {
  @func_5621() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_3794() -> (Tensor[(6, 9, 15), float64],) {
  %336 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_2845() -> (Tensor[(6, 9, ?), float32],) {
  @func_2843() /* ty=(Tensor[(6, 9, ?), float32],) */
}

def @func_5715() -> (Tensor[(6, 11, 15), float64], Tensor[(6, 11, 15), float64]) {
  %342 = fn () -> (Tensor[(6, 11, 15), float64], Tensor[(6, 11, 15), float64]) {
    %338 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
    %339 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
    %340 = %338.0;
    %341 = %339.0;
    (%340, %341)
  };
  %342() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(6, 11, 15), float64]) */
}

def @func_6671(%var_6635: Tensor[(6, 9, 728), float64]) -> (Tensor[(6, 9, 15), uint16], Tensor[(14, 4, 13), bool], Tensor[(6, 9, 728), int16], Tensor[(6, 9, 12), float32], Tensor[(648), int8]) {
  %343 = cast(meta[relay.Constant][22] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %344 = cast(meta[relay.Constant][22] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %345 = reshape(%343, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %346 = reshape(%344, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %347 = @func_1457(%345, %346) /* ty=(Tensor[(14, 4, 13), float32],) */;
  %348 = %347.0;
  %349 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 4, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %353 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
  %354 = cast(%353, dtype="bool") /* ty=Tensor[(6, 9, 1), bool] */;
  %355 = cast(meta[relay.Constant][22] /* ty=Tensor[(728), uint16] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %356 = greater_equal(%354, %355) /* ty=Tensor[(6, 9, 728), bool] */;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(6, 9, 728), float64] */;
  %358 = asinh(%357) /* ty=Tensor[(6, 9, 728), float64] */;
  %359 = cast(%var_6635, dtype="int16") /* ty=Tensor[(6, 9, 728), int16] */;
  %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%358, dtype="int16") /* ty=Tensor[(6, 9, 728), int16] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %363 = cast(meta[relay.Constant][24] /* ty=Tensor[(648), int8] */, dtype="int8") /* ty=Tensor[(648), int8] */;
  %364 = cast(meta[relay.Constant][24] /* ty=Tensor[(648), int8] */, dtype="int8") /* ty=Tensor[(648), int8] */;
  %365 = reshape(%363, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int8] */;
  %366 = reshape(%364, newshape=[6, 9, 12]) /* ty=Tensor[(6, 9, 12), int8] */;
  %367 = @func_5487(%365, %366) /* ty=(Tensor[(6, 9, 12), float32],) */;
  %368 = @func_3332() /* ty=Tensor[(6, 9, 15), uint16] */;
  %369 = less_equal(%351, %352) /* ty=Tensor[(14, 4, 13), bool] */;
  %370 = left_shift(%361, %362) /* ty=Tensor[(6, 9, 728), int16] */;
  %371 = %367.0;
  (%368, %369, %370, %371, meta[relay.Constant][24] /* ty=Tensor[(648), int8] */)
}

def @func_4915(%var_4912: Tensor[(432), float32], %var_4913: Tensor[(990), float64], %var_4914: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) {
  @func_4910(%var_4912, %var_4913, %var_4914) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) */
}

def @func_2650() -> (Tensor[(6, 9, 15), float64],) {
  %372 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %373 = %372.0;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %375 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 9, 15), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %376 = divide(%374, %375) /* ty=Tensor[(6, 9, 15), float64] */;
  (%376,)
}

def @func_3042() -> Tensor[(6, 9, 1), float32] {
  %377 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %377.0
}

def @func_3927() -> (Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) {
  %378 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %379 = %378.0;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %381 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %382 = tan(%380) /* ty=Tensor[(6, 11, 15), float64] */;
  %383 = %381.1;
  (%382, %383)
}

def @func_4406(%var_4404: Tensor[(756), float32]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) {
  @func_4403(%var_4404) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) */
}

def @func_5211(%var_5209: Tensor[(3, 16, 15), uint8], %var_5210: Tensor[(3, 16, 15), uint8]) -> (Tensor[(3, 16, 15), uint8], Tensor[(3, 16, 15), float32], Tensor[(6, 11, 15), float64], Tensor[(6, 9, 15), uint16]) {
  @func_5207(%var_5209, %var_5210) /* ty=(Tensor[(3, 16, 15), uint8], Tensor[(3, 16, 15), float32], Tensor[(6, 11, 15), float64], Tensor[(6, 9, 15), uint16]) */
}

def @func_5040(%var_5038: Tensor[(216), uint16], %var_5039: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 11, 15), uint64], Tensor[(990), float64], Tensor[(1859, 1), float64], Tensor[(520), uint32], Tensor[(216), uint16], Tensor[(6, 9, 462), int32], Tensor[(432), float32], Tensor[(462), float64], Tensor[(6, 11, 15), bool]) {
  %414 = fn (%var_5014: Tensor[(216), uint16], %var_5018: Tensor[(462), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 11, 15), uint64], Tensor[(990), float64], Tensor[(1859, 1), float64], Tensor[(520), uint32], Tensor[(216), uint16], Tensor[(6, 9, 462), int32], Tensor[(432), float32], Tensor[(462), float64], Tensor[(6, 11, 15), bool]) {
    %384 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
    %385 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
    %386 = cast(meta[relay.Constant][26] /* ty=Tensor[(1859, 1), float64] */, dtype="float64") /* ty=Tensor[(1859, 1), float64] */;
    %387 = %384.0;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
    %389 = cast(meta[relay.Constant][27] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
    %390 = cast(%var_5014, dtype="uint16") /* ty=Tensor[(216), uint16] */;
    %391 = reshape(%386, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float64] */;
    %392 = reshape(%388, newshape=[990]) /* ty=Tensor[(990), float64] */;
    %393 = reshape(%389, newshape=[520]) /* ty=Tensor[(520), uint32] */;
    %394 = reshape(%390, newshape=[216]) /* ty=Tensor[(216), uint16] */;
    %395 = @func_1160(%391, %392, %393, %394) /* ty=(Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) */;
    %396 = cast(meta[relay.Constant][28] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %397 = %385.0;
    %398 = cast(%397, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
    %399 = cast(%var_5018, dtype="float64") /* ty=Tensor[(462), float64] */;
    %400 = reshape(%396, newshape=[432]) /* ty=Tensor[(432), float32] */;
    %401 = reshape(%398, newshape=[990]) /* ty=Tensor[(990), float64] */;
    %402 = reshape(%399, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %403 = @func_4910(%400, %401, %402) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(432), float32], Tensor[(990), uint16], Tensor[(5, 13, 8), uint32], Tensor[(5, 104), uint32], Tensor[(8, 9, 13), float32], Tensor[(936), float32], Tensor[(6, 9, 15), float64], Tensor[(3, 14, 11), float64], Tensor[(6, 9, 462), int32], Tensor[(6, 9, 1), float32], Tensor[(6, 9, 990), float32], Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64]) */;
    %404 = %395.2;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(990), float64] */;
    %406 = cast(%404, dtype="float64") /* ty=Tensor[(990), float64] */;
    %407 = cast(%404, dtype="float64") /* ty=Tensor[(990), float64] */;
    %408 = reshape(%405, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %409 = reshape(%406, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %410 = reshape(%407, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %411 = @func_292(%408, %409, %410) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
    %412 = %403.9;
    %413 = %411.3;
    (%387, %397, %404, meta[relay.Constant][26] /* ty=Tensor[(1859, 1), float64] */, meta[relay.Constant][27] /* ty=Tensor[(520), uint32] */, %var_5014, %412, meta[relay.Constant][28] /* ty=Tensor[(432), float32] */, %var_5018, %413)
  };
  %414(%var_5038, %var_5039) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 11, 15), uint64], Tensor[(990), float64], Tensor[(1859, 1), float64], Tensor[(520), uint32], Tensor[(216), uint16], Tensor[(6, 9, 462), int32], Tensor[(432), float32], Tensor[(462), float64], Tensor[(6, 11, 15), bool]) */
}

def @func_1457(%var_1437: Tensor[(14, 4, 13), uint16], %var_1438: Tensor[(14, 4, 13), uint16]) -> (Tensor[(14, 4, 13), float32],) {
  %415 = cast(%var_1438, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %416 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%var_1437, dtype="bool") /* ty=Tensor[(14, 4, 13), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = greater(%417, %418) /* ty=Tensor[(14, 4, 13), bool] */;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  %421 = shape_of(%var_1437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%var_1437, dtype="float32") /* ty=Tensor[(14, 4, 13), float32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %424 = floor_divide(%422, %423) /* ty=Tensor[(14, 4, 13), float32] */;
  (%424,)
}

def @func_3431() -> (Tensor[(6, 9, 1), float32],) {
  %425 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%425,)
}

def @func_5144() -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) {
  %431 = fn () -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) {
    %426 = cast(meta[relay.Constant][29] /* ty=Tensor[(130, 15), float64] */, dtype="float64") /* ty=Tensor[(130, 15), float64] */;
    %427 = reshape(%426, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float64] */;
    %428 = @func_1358(%427) /* ty=(Tensor[(10, 15, 13), float64],) */;
    %429 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
    %430 = %428.0;
    (%429, %430, meta[relay.Constant][29] /* ty=Tensor[(130, 15), float64] */)
  };
  %431() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(130, 15), float64]) */
}

def @func_5229() -> Tensor[(6, 9, 1), float64] {
  %434 = fn () -> Tensor[(6, 9, 1), float64] {
    %432 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
    %433 = cast(%432, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
    log2(%433) /* ty=Tensor[(6, 9, 1), float64] */
  };
  %434() /* ty=Tensor[(6, 9, 1), float64] */
}

def @func_3733() -> (Tensor[(6, 9, 15), float64],) {
  %437 = fn () -> (Tensor[(6, 9, 15), float64],) {
    %435 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %436 = %435.0;
    (%436,)
  };
  %437() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_3486(%var_3444: Tensor[(6, 9, 9), float32], %var_3465: Tensor[(154, 4), float32], %var_3466: Tensor[(990), float64], %var_3468: Tensor[(1, 216), uint16]) -> (Tensor[(6, 9, 9), uint16], Tensor[(6, 9, 9), float64], Tensor[(3, 5, 5), float32], Tensor[(75), float32], Tensor[(5, 104), uint32], Tensor[(154, 4), float32], Tensor[(10, 52), uint32], Tensor[(1, 216), uint16], Tensor[(14, 4, 13), float32], Tensor[(728), uint16], Tensor[(990), float64]) {
  %438 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %439 = %438.0;
  %440 = cast(%439, dtype="uint16") /* ty=Tensor[(6, 9, 1), uint16] */;
  %441 = cast(%var_3444, dtype="uint16") /* ty=Tensor[(6, 9, 9), uint16] */;
  %442 = cast(%var_3444, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
  %443 = cast(meta[relay.Constant][30] /* ty=Tensor[(75), float32] */, dtype="float32") /* ty=Tensor[(75), float32] */;
  %444 = reshape(%443, newshape=[3, 5, 5]) /* ty=Tensor[(3, 5, 5), float32] */;
  %445 = @func_20(%444) /* ty=(Tensor[(3, 5, 5), float32],) */;
  %446 = cast(%var_3465, dtype="float32") /* ty=Tensor[(154, 4), float32] */;
  %447 = cast(%var_3466, dtype="float64") /* ty=Tensor[(990), float64] */;
  %448 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 52), uint32] */, dtype="uint32") /* ty=Tensor[(10, 52), uint32] */;
  %449 = cast(%var_3468, dtype="uint16") /* ty=Tensor[(1, 216), uint16] */;
  %450 = reshape(%446, newshape=[7, 11, 8]) /* ty=Tensor[(7, 11, 8), float32] */;
  %451 = reshape(%447, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %452 = reshape(%448, newshape=[5, 104]) /* ty=Tensor[(5, 104), uint32] */;
  %453 = reshape(%449, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %454 = @func_2004(%450, %451, %452, %453) /* ty=(Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) */;
  %455 = cast(meta[relay.Constant][32] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %456 = cast(meta[relay.Constant][32] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %457 = reshape(%455, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %458 = reshape(%456, newshape=[14, 4, 13]) /* ty=Tensor[(14, 4, 13), uint16] */;
  %459 = @func_1457(%457, %458) /* ty=(Tensor[(14, 4, 13), float32],) */;
  %460 = cast(%var_3466, dtype="float64") /* ty=Tensor[(990), float64] */;
  %461 = add(%440, %441) /* ty=Tensor[(6, 9, 9), uint16] */;
  %462 = sinh(%442) /* ty=Tensor[(6, 9, 9), float64] */;
  %463 = %445.0;
  %464 = %454.5;
  %465 = %459.0;
  %466 = log10(%460) /* ty=Tensor[(990), float64] */;
  (%461, %462, %463, meta[relay.Constant][30] /* ty=Tensor[(75), float32] */, %464, %var_3465, meta[relay.Constant][31] /* ty=Tensor[(10, 52), uint32] */, %var_3468, %465, meta[relay.Constant][32] /* ty=Tensor[(728), uint16] */, %466)
}

def @func_5655(%var_5653: Tensor[(4, 11, 12), float32], %var_5654: Tensor[(260, 2), uint32]) -> (Tensor[(4, 11, 12), float32], Tensor[(6, 9, 1), float32], Tensor[(810), float64], Tensor[(260, 2), uint32]) {
  @func_5651(%var_5653, %var_5654) /* ty=(Tensor[(4, 11, 12), float32], Tensor[(6, 9, 1), float32], Tensor[(810), float64], Tensor[(260, 2), uint32]) */
}

def @func_82(%var_80: Tensor[(5, 13, 8), uint32], %var_81: Tensor[(5, 13, 8), uint32]) -> (Tensor[(5, 13, 8), uint32],) {
  @func_78(%var_80, %var_81) /* ty=(Tensor[(5, 13, 8), uint32],) */
}

def @func_4343() -> Tensor[(6, 9, 15), uint16] {
  %468 = fn () -> Tensor[(6, 9, 15), uint16] {
    %467 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
    %467.0
  };
  %468() /* ty=Tensor[(6, 9, 15), uint16] */
}

def @func_78(%var_69: Tensor[(5, 13, 8), uint32], %var_70: Tensor[(5, 13, 8), uint32]) -> (Tensor[(5, 13, 8), uint32],) {
  %469 = cast(%var_70, dtype="uint32") /* ty=Tensor[(5, 13, 8), uint32] */;
  %470 = shape_of(%var_69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_69, dtype="uint32") /* ty=Tensor[(5, 13, 8), uint32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %473 = bitwise_and(%471, %472) /* ty=Tensor[(5, 13, 8), uint32] */;
  (%473,)
}

def @func_2004(%var_1971: Tensor[(7, 11, 8), float32], %var_1998: Tensor[(990), float64], %var_1999: Tensor[(5, 104), uint32], %var_2000: Tensor[(216), uint16]) -> (Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) {
  %474 = cast(%var_1971, dtype="float32") /* ty=Tensor[(7, 11, 8), float32] */;
  %475 = cast(%var_1971, dtype="float32") /* ty=Tensor[(7, 11, 8), float32] */;
  %476 = cast(meta[relay.Constant][33] /* ty=Tensor[(1859), float64] */, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %477 = cast(%var_1998, dtype="float64") /* ty=Tensor[(990), float64] */;
  %478 = cast(%var_1999, dtype="uint32") /* ty=Tensor[(5, 104), uint32] */;
  %479 = cast(%var_2000, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %480 = reshape(%476, newshape=[13, 13, 11]) /* ty=Tensor[(13, 13, 11), float64] */;
  %481 = reshape(%477, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %482 = reshape(%478, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %483 = reshape(%479, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %484 = @func_1160(%480, %481, %482, %483) /* ty=(Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) */;
  %485 = cosh(%474) /* ty=Tensor[(7, 11, 8), float32] */;
  %486 = sigmoid(%475) /* ty=Tensor[(7, 11, 8), float32] */;
  %487 = %484.5;
  (%485, %486, %487, meta[relay.Constant][33] /* ty=Tensor[(1859), float64] */, %var_1998, %var_1999, %var_2000)
}

def @func_2983(%var_2981: Tensor[(6, 9, 15), float64], %var_2982: Tensor[(520), uint32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) {
  %504 = fn (%var_2939: Tensor[(6, 9, 15), float64], %var_2959: Tensor[(520), uint32]) -> (Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) {
    %488 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %489 = %488.0;
    %490 = cast(%var_2939, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
    %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(%489, dtype="int8") /* ty=Tensor[(6, 9, 15), int8] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %494 = cast(%var_2939, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %495 = cast(%var_2959, dtype="uint32") /* ty=Tensor[(520), uint32] */;
    %496 = cast(%var_2959, dtype="uint32") /* ty=Tensor[(520), uint32] */;
    %497 = reshape(%495, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
    %498 = reshape(%496, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
    %499 = @func_78(%497, %498) /* ty=(Tensor[(5, 13, 8), uint32],) */;
    %500 = bitwise_and(%492, %493) /* ty=Tensor[(6, 9, 15), int8] */;
    %501 = log2(%494) /* ty=Tensor[(6, 9, 15), float64] */;
    %502 = %499.0;
    %503 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
    (%500, %501, %502, %var_2959, %503)
  };
  %504(%var_2981, %var_2982) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) */
}

def @func_3303(%var_3301: Tensor[(13, 4, 5), uint32], %var_3302: Tensor[(13, 4, 5), uint32]) -> (Tensor[(13, 4, 5), uint32],) {
  %510 = fn (%var_3291: Tensor[(13, 4, 5), uint32], %var_3292: Tensor[(13, 4, 5), uint32]) -> (Tensor[(13, 4, 5), uint32],) {
    %505 = cast(%var_3292, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
    %506 = shape_of(%var_3291, dtype="int32") /* ty=Tensor[(3), int32] */;
    %507 = cast(%var_3291, dtype="uint32") /* ty=Tensor[(13, 4, 5), uint32] */;
    %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %509 = right_shift(%507, %508) /* ty=Tensor[(13, 4, 5), uint32] */;
    (%509,)
  };
  %510(%var_3301, %var_3302) /* ty=(Tensor[(13, 4, 5), uint32],) */
}

def @func_2652() -> (Tensor[(6, 9, 15), float64],) {
  @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */
}

def @func_4468() -> (Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) {
  @func_4466() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) */
}

def @func_6222(%var_6220: Tensor[(3, 4, 16), int16], %var_6221: Tensor[(3, 4, 16), int16]) -> Tensor[(3, 4, 16), bool] {
  @func_6218(%var_6220, %var_6221) /* ty=Tensor[(3, 4, 16), bool] */
}

def @func_3835() -> Tensor[(6, 9, 1), float32] {
  %511 = fn () -> Tensor[(6, 9, 1), float32] {
    @func_2467() /* ty=Tensor[(6, 9, 1), float32] */
  };
  %511() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_3145(%var_3143: Tensor[(10, 6, 8), float64]) -> (Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) {
  @func_3142(%var_3143) /* ty=(Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) */
}

def @func_2468() -> Tensor[(6, 9, 1), float32] {
  %513 = fn () -> Tensor[(6, 9, 1), float32] {
    %512 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %512.0
  };
  %513() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_3204() -> Tensor[(6, 9, 1), float32] {
  @func_2467() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_297(%var_294: Tensor[(6, 11, 15), float64], %var_295: Tensor[(6, 11, 15), float64], %var_296: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) {
  @func_292(%var_294, %var_295, %var_296) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */
}

def @func_5836(%var_5834: Tensor[(15, 9, 16), bool]) -> (Tensor[(15, 9, 16), bool], Tensor[(6, 11, 15), float32]) {
  @func_5833(%var_5834) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(6, 11, 15), float32]) */
}

def @func_3766() -> (Tensor[(6, 11, 15), uint64],) {
  %516 = fn () -> (Tensor[(6, 11, 15), uint64],) {
    %514 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
    %515 = %514.7;
    (%515,)
  };
  %516() /* ty=(Tensor[(6, 11, 15), uint64],) */
}

def @func_6306(%var_6304: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint32], Tensor[(6, 11, 15), float32]) {
  @func_6303(%var_6304) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint32], Tensor[(6, 11, 15), float32]) */
}

def @func_959(%var_941: Tensor[(6, 4, 9), uint16], %var_955: Tensor[(6, 4, 9), float64]) -> (Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) {
  %517 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 4, 9), uint16] */, dtype="bool") /* ty=Tensor[(6, 4, 9), bool] */;
  %518 = shape_of(%var_941, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_941, dtype="bool") /* ty=Tensor[(6, 4, 9), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = cast(%var_941, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %522 = erf(%521) /* ty=Tensor[(6, 4, 9), float64] */;
  %523 = cast(%var_955, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %527 = equal(%519, %520) /* ty=Tensor[(6, 4, 9), bool] */;
  %528 = divide(%525, %526) /* ty=Tensor[(6, 4, 9), float64] */;
  (%527, %528)
}

def @func_6529(%var_6527: Tensor[(12, 36), float32], %var_6528: Tensor[(252), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(990), float64], Tensor[(12, 36), float32], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float32], Tensor[(6, 9, 1), float32], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 8), float64]) {
  @func_6525(%var_6527, %var_6528) /* ty=(Tensor[(6, 9, 1), float32], Tensor[(990), float64], Tensor[(12, 36), float32], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float32], Tensor[(6, 9, 1), float32], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 8), float64]) */
}

def @func_6525(%var_6487: Tensor[(12, 36), float32], %var_6512: Tensor[(252), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(990), float64], Tensor[(12, 36), float32], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float32], Tensor[(6, 9, 1), float32], Tensor[(7, 9, 4), float64], Tensor[(252), float64], Tensor[(7, 9, 4), int16], Tensor[(6, 9, 8), float64]) {
  %529 = cast(meta[relay.Constant][35] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %530 = cast(meta[relay.Constant][35] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %531 = cast(meta[relay.Constant][35] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %532 = reshape(%529, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %533 = reshape(%530, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %534 = reshape(%531, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %535 = @func_292(%532, %533, %534) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %538 = cast(%var_6512, dtype="float64") /* ty=Tensor[(252), float64] */;
  %539 = cast(%var_6512, dtype="float64") /* ty=Tensor[(252), float64] */;
  %540 = reshape(%538, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %541 = reshape(%539, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %542 = @func_5459(%540, %541) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %543 = %542.1;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %545 = cast(%543, dtype="float64") /* ty=Tensor[(7, 9, 4), float64] */;
  %546 = reshape(%544, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %547 = reshape(%545, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %548 = @func_5459(%546, %547) /* ty=(Tensor[(7, 9, 4), int16], Tensor[(7, 9, 4), float64]) */;
  %549 = cast(%var_6487, dtype="float32") /* ty=Tensor[(12, 36), float32] */;
  %550 = cast(meta[relay.Constant][35] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %551 = reshape(%549, newshape=[6, 9, 8]) /* ty=Tensor[(6, 9, 8), float32] */;
  %552 = reshape(%550, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %553 = @func_4677(%551, %552) /* ty=(Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %554 = %553.0;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %556 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %557 = @func_5523() /* ty=Tensor[(6, 9, 1), float32] */;
  %558 = rsqrt(%537) /* ty=Tensor[(6, 11, 15), float32] */;
  %559 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
  %560 = %548.0;
  %561 = tan(%555) /* ty=Tensor[(6, 9, 8), float64] */;
  (%556, meta[relay.Constant][35] /* ty=Tensor[(990), float64] */, %var_6487, %557, %558, %559, %543, %var_6512, %560, %561)
}

def @func_5651(%var_5627: Tensor[(4, 11, 12), float32], %var_5649: Tensor[(260, 2), uint32]) -> (Tensor[(4, 11, 12), float32], Tensor[(6, 9, 1), float32], Tensor[(810), float64], Tensor[(260, 2), uint32]) {
  %562 = cast(%var_5627, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %563 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(4, 11, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 12), float32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %566 = cast(meta[relay.Constant][37] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %567 = cast(%var_5649, dtype="uint32") /* ty=Tensor[(260, 2), uint32] */;
  %568 = reshape(%566, newshape=[6, 9, 15]) /* ty=Tensor[(6, 9, 15), float64] */;
  %569 = reshape(%567, newshape=[520]) /* ty=Tensor[(520), uint32] */;
  %570 = @func_2980(%568, %569) /* ty=(Tensor[(6, 9, 15), int8], Tensor[(6, 9, 15), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 9, 1), float32]) */;
  %571 = mod(%564, %565) /* ty=Tensor[(4, 11, 12), float32] */;
  %572 = %570.4;
  (%571, %572, meta[relay.Constant][37] /* ty=Tensor[(810), float64] */, %var_5649)
}

def @func_4586(%var_4585: Tensor[(462), float64]) -> (Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) {
  %588 = fn (%var_4558: Tensor[(462), float64]) -> (Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) {
    %573 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
    %574 = %573.2;
    %575 = cast(%574, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %576 = cast(%var_4558, dtype="float64") /* ty=Tensor[(462), float64] */;
    %577 = reshape(%575, newshape=[1, 14, 11]) /* ty=Tensor[(1, 14, 11), float64] */;
    %578 = reshape(%576, newshape=[3, 14, 11]) /* ty=Tensor[(3, 14, 11), float64] */;
    %579 = @func_862(%577, %578) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */;
    %580 = cast(meta[relay.Constant][38] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
    %581 = reshape(%580, newshape=[756]) /* ty=Tensor[(756), float32] */;
    %582 = @func_4403(%581) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 14), uint64], Tensor[(756), float32]) */;
    %583 = %582.2;
    %584 = cast(%583, dtype="float64") /* ty=Tensor[(756), float64] */;
    %585 = %579.1;
    %586 = asinh(%584) /* ty=Tensor[(756), float64] */;
    %587 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
    (%574, %585, %var_4558, meta[relay.Constant][38] /* ty=Tensor[(756), float32] */, %586, %587)
  };
  %588(%var_4585) /* ty=(Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) */
}

def @func_3573(%var_3564: Tensor[(330, 3), float64], %var_3566: Tensor[(216), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, ?), float64], Tensor[(5, 104), uint32], Tensor[(616), float32], Tensor[(330, 3), float64], Tensor[(520), uint32], Tensor[(216), uint16]) {
  %589 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %590 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %593 = cos(%592) /* ty=Tensor[(6, 9, 1), float64] */;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %595 = sigmoid(%594) /* ty=Tensor[(6, 9, 1), float64] */;
  %596 = cast(%593, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %600 = cast(meta[relay.Constant][39] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %601 = cast(%var_3564, dtype="float64") /* ty=Tensor[(330, 3), float64] */;
  %602 = cast(meta[relay.Constant][40] /* ty=Tensor[(520), uint32] */, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %603 = cast(%var_3566, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %604 = reshape(%600, newshape=[7, 11, 8]) /* ty=Tensor[(7, 11, 8), float32] */;
  %605 = reshape(%601, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %606 = reshape(%602, newshape=[5, 104]) /* ty=Tensor[(5, 104), uint32] */;
  %607 = reshape(%603, newshape=[216]) /* ty=Tensor[(216), uint16] */;
  %608 = @func_2004(%604, %605, %606, %607) /* ty=(Tensor[(7, 11, 8), float32], Tensor[(7, 11, 8), float32], Tensor[(6, 4, 9), float64], Tensor[(1859), float64], Tensor[(990), float64], Tensor[(5, 104), uint32], Tensor[(216), uint16]) */;
  %609 = %589.0;
  %610 = floor_divide(%598, %599) /* ty=Tensor[(6, 9, ?), float64] */;
  %611 = %608.5;
  (%609, %610, %611, meta[relay.Constant][39] /* ty=Tensor[(616), float32] */, %var_3564, meta[relay.Constant][40] /* ty=Tensor[(520), uint32] */, %var_3566)
}

def @func_4136() -> (Tensor[(6, 9, 1), float32],) {
  %612 = @func_2422() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %613 = %612.0;
  (%613,)
}

def @func_4961(%var_4936: Tensor[(4, 16, 7), float32]) -> (Tensor[(6, 9, 15), float64], Tensor[(4, 16, 7), float32], Tensor[(6, 9, 1), float32]) {
  %614 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %615 = cast(%var_4936, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %616 = sigmoid(%615) /* ty=Tensor[(4, 16, 7), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(4, 16, 7), float32] */;
  %618 = @func_3431() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %619 = %614.0;
  %620 = log(%617) /* ty=Tensor[(4, 16, 7), float32] */;
  %621 = %618.0;
  (%619, %620, %621)
}

def @main(%var_6943: Tensor[(5, 3, 14), float32], %var_6944: Tensor[(5, 3, 14), float32]) -> (Tensor[(5, 3, 14), float32],) {
  %622 = cast(%var_6944, dtype="float32") /* ty=Tensor[(5, 3, 14), float32] */;
  %623 = shape_of(%var_6943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_6943, dtype="float32") /* ty=Tensor[(5, 3, 14), float32] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %626 = add(%624, %625) /* ty=Tensor[(5, 3, 14), float32] */;
  (%626,)
}

def @func_5285() -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
  %631 = fn () -> (Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) {
    %627 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
    %628 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %629 = %627.0;
    %630 = %628.0;
    (%629, %630)
  };
  %631() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */
}

def @func_4728() -> (Tensor[(6, 9, 1), float32],) {
  %633 = fn () -> (Tensor[(6, 9, 1), float32],) {
    %632 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
    (%632,)
  };
  %633() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_6674(%var_6672: Tensor[(6, 9, 728), float64]) -> (Tensor[(6, 9, 15), uint16], Tensor[(14, 4, 13), bool], Tensor[(6, 9, 728), int16], Tensor[(6, 9, 12), float32], Tensor[(648), int8]) {
  @func_6671(%var_6672) /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(14, 4, 13), bool], Tensor[(6, 9, 728), int16], Tensor[(6, 9, 12), float32], Tensor[(648), int8]) */
}

def @func_6784() -> Tensor[(6, 9, 1), float32] {
  %635 = fn () -> Tensor[(6, 9, 1), float32] {
    %634 = @func_5621() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %634.0
  };
  %635() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_6303(%var_6293: Tensor[(6, 11, 15), float64]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint32], Tensor[(6, 11, 15), float32]) {
  %636 = @func_3732() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %637 = @func_5559() /* ty=(Tensor[(6, 11, 15), float64],) */;
  %638 = %637.0;
  %639 = cast(%var_6293, dtype="uint32") /* ty=Tensor[(6, 11, 15), uint32] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%638, dtype="uint32") /* ty=Tensor[(6, 11, 15), uint32] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %643 = cast(%638, dtype="float32") /* ty=Tensor[(6, 11, 15), float32] */;
  %644 = %636.0;
  %645 = left_shift(%641, %642) /* ty=Tensor[(6, 11, 15), uint32] */;
  %646 = sqrt(%643) /* ty=Tensor[(6, 11, 15), float32] */;
  (%644, %645, %646)
}

def @func_2723() -> (Tensor[(6, 9, 15), float64],) {
  %647 = @func_2650() /* ty=(Tensor[(6, 9, 15), float64],) */;
  %648 = %647.0;
  (%648,)
}

def @func_5487(%var_5477: Tensor[(6, 9, 12), int8], %var_5478: Tensor[(6, 9, 12), int8]) -> (Tensor[(6, 9, 12), float32],) {
  %649 = cast(%var_5478, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %650 = shape_of(%var_5477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%var_5477, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = less_equal(%651, %652) /* ty=Tensor[(6, 9, 12), bool] */;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(6, 9, 12), float32] */;
  %655 = sqrt(%654) /* ty=Tensor[(6, 9, 12), float32] */;
  (%655,)
}

def @func_23(%var_21: Tensor[(3, 5, 5), float32]) -> (Tensor[(3, 5, 5), float32],) {
  @func_20(%var_21) /* ty=(Tensor[(3, 5, 5), float32],) */
}

def @func_1160(%var_1119: Tensor[(13, 13, 11), float64], %var_1125: Tensor[(990), float64], %var_1136: Tensor[(520), uint32], %var_1144: Tensor[(216), uint16]) -> (Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) {
  %656 = cast(%var_1119, dtype="float64") /* ty=Tensor[(13, 13, 11), float64] */;
  %657 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %658 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %659 = cast(%var_1125, dtype="float64") /* ty=Tensor[(990), float64] */;
  %660 = reshape(%657, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %661 = reshape(%658, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %662 = reshape(%659, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
  %663 = @func_292(%660, %661, %662) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
  %664 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %665 = cast(%var_1136, dtype="uint32") /* ty=Tensor[(520), uint32] */;
  %666 = reshape(%664, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %667 = reshape(%665, newshape=[5, 13, 8]) /* ty=Tensor[(5, 13, 8), uint32] */;
  %668 = @func_78(%666, %667) /* ty=(Tensor[(5, 13, 8), uint32],) */;
  %669 = cast(%var_1144, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %670 = cast(%var_1144, dtype="float64") /* ty=Tensor[(216), float64] */;
  %671 = reshape(%669, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), uint16] */;
  %672 = reshape(%670, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float64] */;
  %673 = @func_959(%671, %672) /* ty=(Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) */;
  %674 = cast(%var_1144, dtype="uint16") /* ty=Tensor[(216), uint16] */;
  %675 = %673.1;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(6, 4, 9), float64] */;
  %677 = reshape(%674, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), uint16] */;
  %678 = reshape(%676, newshape=[6, 4, 9]) /* ty=Tensor[(6, 4, 9), float64] */;
  %679 = @func_959(%677, %678) /* ty=(Tensor[(6, 4, 9), bool], Tensor[(6, 4, 9), float64]) */;
  %680 = sqrt(%656) /* ty=Tensor[(13, 13, 11), float64] */;
  %681 = %663.3;
  %682 = %668.0;
  %683 = %679.0;
  (%680, %681, %var_1125, %682, %var_1136, %675, %var_1144, %683)
}

def @func_4320(%var_4319: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) {
  %703 = fn (%var_4279: Tensor[(6, 9, 14), float32]) -> (Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) {
    %684 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %685 = %684.0;
    %686 = cast(%685, dtype="float64") /* ty=Tensor[(6, 9, 1), float64] */;
    %687 = cast(%685, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
    %688 = log10(%687) /* ty=Tensor[(6, 9, 1), float32] */;
    %689 = cast(%688, dtype="uint64") /* ty=Tensor[(6, 9, 1), uint64] */;
    %690 = cast(%var_4279, dtype="uint64") /* ty=Tensor[(6, 9, 14), uint64] */;
    %691 = @func_3695() /* ty=(Tensor[(6, 9, 15), uint16],) */;
    %692 = %691.0;
    %693 = cast(%692, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %694 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
    %695 = cast(%685, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
    %696 = @func_3927() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 14, 11), float64]) */;
    %697 = log(%686) /* ty=Tensor[(6, 9, 1), float64] */;
    %698 = subtract(%689, %690) /* ty=Tensor[(6, 9, 14), uint64] */;
    %699 = sin(%693) /* ty=Tensor[(6, 9, 15), float64] */;
    %700 = %694.1;
    %701 = acos(%695) /* ty=Tensor[(6, 9, 1), float32] */;
    %702 = %696.0;
    (%697, %698, %699, %700, %701, %702)
  };
  %703(%var_4319) /* ty=(Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) */
}

def @func_1166(%var_1162: Tensor[(13, 13, 11), float64], %var_1163: Tensor[(990), float64], %var_1164: Tensor[(520), uint32], %var_1165: Tensor[(216), uint16]) -> (Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) {
  @func_1160(%var_1162, %var_1163, %var_1164, %var_1165) /* ty=(Tensor[(13, 13, 11), float64], Tensor[(6, 11, 15), bool], Tensor[(990), float64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 4, 9), float64], Tensor[(216), uint16], Tensor[(6, 4, 9), bool]) */
}

def @func_5525() -> Tensor[(6, 9, 1), float32] {
  @func_5523() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_1358(%var_1353: Tensor[(10, 15, 13), float64]) -> (Tensor[(10, 15, 13), float64],) {
  %704 = cast(%var_1353, dtype="float64") /* ty=Tensor[(10, 15, 13), float64] */;
  %705 = acosh(%704) /* ty=Tensor[(10, 15, 13), float64] */;
  (%705,)
}

def @func_318(%var_316: Tensor[(3, 14, 11), float64], %var_317: Tensor[(3, 14, 11), float64]) -> Tensor[(3, 14, 11), float64] {
  %710 = fn (%var_307: Tensor[(3, 14, 11), float64], %var_308: Tensor[(3, 14, 11), float64]) -> Tensor[(3, 14, 11), float64] {
    %706 = cast(%var_308, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
    %707 = shape_of(%var_307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %708 = cast(%var_307, dtype="float64") /* ty=Tensor[(3, 14, 11), float64] */;
    %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%708, %709) /* ty=Tensor[(3, 14, 11), float64] */
  };
  %710(%var_316, %var_317) /* ty=Tensor[(3, 14, 11), float64] */
}

def @func_5510() -> (Tensor[(990), float64], Tensor[(6, 9, 810), bool], Tensor[(480), float64]) {
  %711 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
  %712 = cast(meta[relay.Constant][41] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %713 = reshape(%712, newshape=[10, 6, 8]) /* ty=Tensor[(10, 6, 8), float64] */;
  %714 = @func_3142(%713) /* ty=(Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) */;
  %715 = %711.8;
  %716 = %714.2;
  (%715, %716, meta[relay.Constant][41] /* ty=Tensor[(480), float64] */)
}

def @func_5423(%var_5422: Tensor[(6, 9, 15), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) {
  %728 = fn (%var_5382: Tensor[(6, 9, 15), uint16]) -> (Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) {
    %717 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
    %718 = cast(%var_5382, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%717, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %722 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 9, 15), uint16] */, dtype="uint8") /* ty=Tensor[(6, 9, 15), uint8] */;
    %723 = shape_of(%var_5382, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%var_5382, dtype="uint8") /* ty=Tensor[(6, 9, 15), uint8] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %726 = multiply(%720, %721) /* ty=Tensor[(6, 9, 15), float64] */;
    %727 = logical_xor(%724, %725) /* ty=Tensor[(6, 9, 15), uint8] */;
    (%726, %727)
  };
  %728(%var_5422) /* ty=(Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), uint8]) */
}

def @func_5697() -> (Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) {
  %729 = @func_2810() /* ty=(Tensor[(6, 9, 15), uint16],) */;
  %730 = @func_4160() /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(6, 9, 15), float64]) */;
  %731 = %730.1;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(6, 9, 15), float64] */;
  %733 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
  %734 = %729.0;
  %735 = sqrt(%732) /* ty=Tensor[(6, 9, 15), float64] */;
  %736 = %733.0;
  (%734, %735, %736)
}

def @func_5072() -> (Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), uint64], Tensor[(462), float64], Tensor[(462), float64]) {
  %744 = fn () -> (Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), uint64], Tensor[(462), float64], Tensor[(462), float64]) {
    %737 = @func_3765() /* ty=(Tensor[(6, 11, 15), uint64],) */;
    %738 = cast(meta[relay.Constant][43] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
    %739 = reshape(%738, newshape=[462]) /* ty=Tensor[(462), float64] */;
    %740 = @func_4584(%739) /* ty=(Tensor[(11, 14), float64], Tensor[(3, 14, 11), float64], Tensor[(462), float64], Tensor[(756), float32], Tensor[(756), float64], Tensor[(6, 9, 1), float32]) */;
    %741 = @func_3834() /* ty=Tensor[(6, 9, 1), float32] */;
    %742 = %737.0;
    %743 = %740.2;
    (%741, %742, %743, meta[relay.Constant][43] /* ty=Tensor[(462), float64] */)
  };
  %744() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), uint64], Tensor[(462), float64], Tensor[(462), float64]) */
}

def @func_866(%var_864: Tensor[(1, 14, 11), float64], %var_865: Tensor[(3, 14, 11), float64]) -> (Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) {
  @func_862(%var_864, %var_865) /* ty=(Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64]) */
}

def @func_5491(%var_5489: Tensor[(6, 9, 12), int8], %var_5490: Tensor[(6, 9, 12), int8]) -> (Tensor[(6, 9, 12), float32],) {
  @func_5487(%var_5489, %var_5490) /* ty=(Tensor[(6, 9, 12), float32],) */
}

def @func_5512() -> (Tensor[(990), float64], Tensor[(6, 9, 810), bool], Tensor[(480), float64]) {
  @func_5510() /* ty=(Tensor[(990), float64], Tensor[(6, 9, 810), bool], Tensor[(480), float64]) */
}

def @func_4737() -> (Tensor[(6, 9, 1), float32],) {
  %746 = fn () -> (Tensor[(6, 9, 1), float32],) {
    %745 = @func_3204() /* ty=Tensor[(6, 9, 1), float32] */;
    (%745,)
  };
  %746() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_5936(%var_5896: Tensor[(9, 84), float32]) -> (Tensor[(6, 9, 15), uint16], Tensor[(9, 84), float32], Tensor[(6, 9, ?), int8], Tensor[(10, 6, 8), bool], Tensor[(480), float64], Tensor[(6, 9, ?), float32]) {
  %747 = @func_5697() /* ty=(Tensor[(6, 9, 15), uint16], Tensor[(6, 9, 15), float64], Tensor[(6, 11, 15), uint64]) */;
  %748 = cast(%var_5896, dtype="float32") /* ty=Tensor[(9, 84), float32] */;
  %749 = reshape(%748, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %750 = @func_4318(%749) /* ty=(Tensor[(6, 9, 1), float64], Tensor[(6, 9, 14), uint64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(6, 11, 15), float64]) */;
  %751 = %750.0;
  %752 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %755 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%751, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %758 = cast(meta[relay.Constant][44] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %759 = reshape(%758, newshape=[10, 6, 8]) /* ty=Tensor[(10, 6, 8), float64] */;
  %760 = @func_3142(%759) /* ty=(Tensor[(520), uint32], Tensor[(6, 9, ?), int8], Tensor[(6, 9, 810), bool], Tensor[(10, 6, 8), bool], Tensor[(10, 6, 8), float64], Tensor[(10, 6, 8), float32]) */;
  %761 = cast(%753, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %762 = sqrt(%761) /* ty=Tensor[(6, 9, 1), float32] */;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %764 = rsqrt(%763) /* ty=Tensor[(6, 9, 1), float32] */;
  %765 = cast(%751, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %769 = %747.0;
  %770 = right_shift(%756, %757) /* ty=Tensor[(6, 9, ?), int8] */;
  %771 = %760.3;
  %772 = floor_mod(%767, %768) /* ty=Tensor[(6, 9, ?), float32] */;
  (%769, %var_5896, %770, %771, meta[relay.Constant][44] /* ty=Tensor[(480), float64] */, %772)
}

def @func_5735() -> (Tensor[(6, 9, 1), float32],) {
  %775 = fn () -> (Tensor[(6, 9, 1), float32],) {
    %773 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %774 = %773.0;
    (%774,)
  };
  %775() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_6836() -> (Tensor[(6, 9, 1), float32],) {
  %776 = @func_2467() /* ty=Tensor[(6, 9, 1), float32] */;
  (%776,)
}

def @func_2705(%var_2704: Tensor[(1950), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(1950), float64]) {
  %783 = fn (%var_2688: Tensor[(1950), float64]) -> (Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(1950), float64]) {
    %777 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %778 = cast(%var_2688, dtype="float64") /* ty=Tensor[(1950), float64] */;
    %779 = reshape(%778, newshape=[10, 15, 13]) /* ty=Tensor[(10, 15, 13), float64] */;
    %780 = @func_1358(%779) /* ty=(Tensor[(10, 15, 13), float64],) */;
    %781 = %777.0;
    %782 = %780.0;
    (%781, %782, %var_2688)
  };
  %783(%var_2704) /* ty=(Tensor[(6, 9, 1), float32], Tensor[(10, 15, 13), float64], Tensor[(1950), float64]) */
}

def @func_4094() -> (Tensor[(6, 11, 15), float64],) {
  @func_4092() /* ty=(Tensor[(6, 11, 15), float64],) */
}

def @func_6106() -> Tensor[(6, 9, 1), float32] {
  %785 = fn () -> Tensor[(6, 9, 1), float32] {
    %784 = @func_4466() /* ty=(Tensor[(6, 11, 15), float64], Tensor[(462), float64], Tensor[(6, 9, 15), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float32]) */;
    %784.3
  };
  %785() /* ty=Tensor[(6, 9, 1), float32] */
}

def @func_2843() -> (Tensor[(6, 9, ?), float32],) {
  %786 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %789 = atanh(%788) /* ty=Tensor[(6, 9, 1), float32] */;
  %790 = cast(%787, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="float32") /* ty=Tensor[(6, 9, 1), float32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %794 = mod(%792, %793) /* ty=Tensor[(6, 9, ?), float32] */;
  (%794,)
}

def @func_4138() -> (Tensor[(6, 9, 1), float32],) {
  @func_4136() /* ty=(Tensor[(6, 9, 1), float32],) */
}

def @func_1361(%var_1359: Tensor[(10, 15, 13), float64]) -> (Tensor[(10, 15, 13), float64],) {
  @func_1358(%var_1359) /* ty=(Tensor[(10, 15, 13), float64],) */
}

def @func_6345() -> (Tensor[(6, 9, 15), float64], Tensor[(16, 5, 9), float32], Tensor[(4, 180), float64], Tensor[(6, 9, ?), int16], Tensor[(6, 9, 15), uint16]) {
  %813 = fn () -> (Tensor[(6, 9, 15), float64], Tensor[(16, 5, 9), float32], Tensor[(4, 180), float64], Tensor[(6, 9, ?), int16], Tensor[(6, 9, 15), uint16]) {
    %795 = @func_2723() /* ty=(Tensor[(6, 9, 15), float64],) */;
    %796 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %797 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 180), float64] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
    %798 = reshape(%796, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), float64] */;
    %799 = reshape(%797, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), float64] */;
    %800 = @func_5170(%798, %799) /* ty=(Tensor[(16, 5, 9), float32], Tensor[(10, 15, 13), float64]) */;
    %801 = @func_4727() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %802 = %801.0;
    %803 = @func_2479() /* ty=(Tensor[(6, 9, 1), float32],) */;
    %804 = %803.0;
    %805 = cast(%804, dtype="int16") /* ty=Tensor[(6, 9, 1), int16] */;
    %806 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
    %807 = cast(%802, dtype="int16") /* ty=Tensor[(6, 9, 1), int16] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %809 = %795.0;
    %810 = %800.0;
    %811 = multiply(%807, %808) /* ty=Tensor[(6, 9, ?), int16] */;
    %812 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
    (%809, %810, meta[relay.Constant][45] /* ty=Tensor[(4, 180), float64] */, %811, %812)
  };
  %813() /* ty=(Tensor[(6, 9, 15), float64], Tensor[(16, 5, 9), float32], Tensor[(4, 180), float64], Tensor[(6, 9, ?), int16], Tensor[(6, 9, 15), uint16]) */
}

def @func_4680(%var_4678: Tensor[(6, 9, 8), float32], %var_4679: Tensor[(990), float64]) -> (Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
  %828 = fn (%var_4627: Tensor[(6, 9, 8), float32], %var_4667: Tensor[(990), float64]) -> (Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) {
    %814 = @func_2583() /* ty=(Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(11, 14), float64], Tensor[(6, 9, 1), float32], Tensor[(3, 14, 11), float64], Tensor[(3, 14, 11), float64], Tensor[(231, 2), uint8], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */;
    %815 = %814.0;
    %816 = cast(%815, dtype="int8") /* ty=Tensor[(6, 9, 1), int8] */;
    %817 = cast(%var_4627, dtype="int8") /* ty=Tensor[(6, 9, 8), int8] */;
    %818 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
    %819 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
    %820 = cast(%var_4667, dtype="float64") /* ty=Tensor[(990), float64] */;
    %821 = reshape(%818, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %822 = reshape(%819, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %823 = reshape(%820, newshape=[6, 11, 15]) /* ty=Tensor[(6, 11, 15), float64] */;
    %824 = @func_292(%821, %822, %823) /* ty=(Tensor[(6, 11, 15), uint64], Tensor[(5, 13, 8), uint32], Tensor[(520), uint32], Tensor[(6, 11, 15), bool], Tensor[(6, 11, 15), uint64]) */;
    %825 = logical_xor(%816, %817) /* ty=Tensor[(6, 9, 8), int8] */;
    %826 = @func_4342() /* ty=Tensor[(6, 9, 15), uint16] */;
    %827 = %824.0;
    (%825, %826, %827, %var_4667)
  };
  %828(%var_4678, %var_4679) /* ty=(Tensor[(6, 9, 8), int8], Tensor[(6, 9, 15), uint16], Tensor[(6, 11, 15), uint64], Tensor[(990), float64]) */
}

def @func_5523() -> Tensor[(6, 9, 1), float32] {
  @func_3042() /* ty=Tensor[(6, 9, 1), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen438/build/output.py:1883: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen438/build/output.py", line 1888, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(210) tvmgen_default_fused_reshape_add_kernel0(float* __restrict__ T_add, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


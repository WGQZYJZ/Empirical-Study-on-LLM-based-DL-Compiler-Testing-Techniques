import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_91 = relay.var("var_91", dtype = "uint32", shape = ())#candidate|91|()|var|uint32
var_92 = relay.var("var_92", dtype = "uint32", shape = (7, 5, 2))#candidate|92|(7, 5, 2)|var|uint32
bop_93 = relay.minimum(var_91.astype('uint32'), var_92.astype('uint32')) # shape=(7, 5, 2)
uop_101 = relay.sin(var_92.astype('float64')) # shape=(7, 5, 2)
output = relay.Tuple([bop_93,uop_101,])
output2 = relay.Tuple([bop_93,uop_101,])
func_125 = relay.Function([var_91,var_92,], output)
mod['func_125'] = func_125
mod = relay.transform.InferType()(mod)
var_126 = relay.var("var_126", dtype = "uint32", shape = ())#candidate|126|()|var|uint32
var_127 = relay.var("var_127", dtype = "uint32", shape = (7, 5, 2))#candidate|127|(7, 5, 2)|var|uint32
output = func_125(var_126,var_127,)
func_128 = relay.Function([var_126,var_127,], output)
mutated_mod['func_128'] = func_128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_194 = relay.var("var_194", dtype = "uint16", shape = ())#candidate|194|()|var|uint16
var_195 = relay.var("var_195", dtype = "uint16", shape = (1, 2, 4))#candidate|195|(1, 2, 4)|var|uint16
bop_196 = relay.multiply(var_194.astype('uint16'), var_195.astype('uint16')) # shape=(1, 2, 4)
output = bop_196
output2 = bop_196
func_211 = relay.Function([var_194,var_195,], output)
mod['func_211'] = func_211
mod = relay.transform.InferType()(mod)
mutated_mod['func_211'] = func_211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_211_call = mutated_mod.get_global_var('func_211')
var_213 = relay.var("var_213", dtype = "uint16", shape = ())#candidate|213|()|var|uint16
var_214 = relay.var("var_214", dtype = "uint16", shape = (1, 2, 4))#candidate|214|(1, 2, 4)|var|uint16
call_212 = func_211_call(var_213,var_214,)
output = call_212
func_215 = relay.Function([var_213,var_214,], output)
mutated_mod['func_215'] = func_215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_389 = relay.var("var_389", dtype = "float32", shape = (5, 1, 13))#candidate|389|(5, 1, 13)|var|float32
uop_390 = relay.log10(var_389.astype('float32')) # shape=(5, 1, 13)
output = uop_390
output2 = uop_390
func_398 = relay.Function([var_389,], output)
mod['func_398'] = func_398
mod = relay.transform.InferType()(mod)
var_399 = relay.var("var_399", dtype = "float32", shape = (5, 1, 13))#candidate|399|(5, 1, 13)|var|float32
output = func_398(var_399)
func_400 = relay.Function([var_399], output)
mutated_mod['func_400'] = func_400
mutated_mod = relay.transform.InferType()(mutated_mod)
var_438 = relay.var("var_438", dtype = "uint32", shape = (7, 11, 2))#candidate|438|(7, 11, 2)|var|uint32
var_439 = relay.var("var_439", dtype = "uint32", shape = (7, 11, 2))#candidate|439|(7, 11, 2)|var|uint32
bop_440 = relay.greater(var_438.astype('bool'), relay.reshape(var_439.astype('bool'), relay.shape_of(var_438))) # shape=(7, 11, 2)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
const_452 = relay.const(-10, dtype = "uint32")#candidate|452|()|const|uint32
var_453 = relay.var("var_453", dtype = "uint32", shape = (14, 5))#candidate|453|(14, 5)|var|uint32
call_451 = relay.TupleGetItem(func_125_call(relay.reshape(const_452.astype('uint32'), []), relay.reshape(var_453.astype('uint32'), [7, 5, 2]), ), 1)
call_454 = relay.TupleGetItem(func_128_call(relay.reshape(const_452.astype('uint32'), []), relay.reshape(var_453.astype('uint32'), [7, 5, 2]), ), 1)
output = relay.Tuple([bop_440,call_451,const_452,var_453,])
output2 = relay.Tuple([bop_440,call_454,const_452,var_453,])
func_490 = relay.Function([var_438,var_439,var_453,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
mutated_mod['func_490'] = func_490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_490_call = mutated_mod.get_global_var('func_490')
var_492 = relay.var("var_492", dtype = "uint32", shape = (7, 11, 2))#candidate|492|(7, 11, 2)|var|uint32
var_493 = relay.var("var_493", dtype = "uint32", shape = (7, 11, 2))#candidate|493|(7, 11, 2)|var|uint32
var_494 = relay.var("var_494", dtype = "uint32", shape = (14, 5))#candidate|494|(14, 5)|var|uint32
call_491 = func_490_call(var_492,var_493,var_494,)
output = call_491
func_495 = relay.Function([var_492,var_493,var_494,], output)
mutated_mod['func_495'] = func_495
mutated_mod = relay.transform.InferType()(mutated_mod)
const_687 = relay.const([[[-6.358483,2.559916,-4.746927,-7.475546],[-7.717732,5.564017,5.297230,9.405231],[4.558107,-8.972276,8.012408,-0.550389],[5.860942,-1.485434,-8.789292,8.970914],[-9.000050,0.669569,0.691800,-6.456825],[-7.195887,5.467126,5.715471,4.846079],[-3.720340,0.391173,-3.182978,3.012867],[-5.467176,8.784188,6.925237,-5.118675],[6.678448,-6.616366,6.386989,-0.104848],[7.273727,-5.219949,-5.755611,5.888243],[5.217628,-4.007292,-0.437919,1.755645],[2.435800,8.491849,8.666450,-8.675759],[-2.858761,0.830711,-3.760393,0.758510],[4.004676,-9.742768,2.485868,-4.892638],[-0.549902,3.109609,-8.204155,-0.822914],[8.397021,2.853912,0.896543,-4.299864]],[[-9.941699,2.890250,3.569608,-3.849503],[-5.664022,7.635609,5.075238,-4.479493],[-4.383897,-4.769542,-2.816024,0.508154],[5.206466,-3.789649,-0.128261,-9.651117],[-2.745590,3.014970,-4.634162,4.419265],[-5.811821,-0.135193,-6.041109,-0.994204],[-3.446165,-4.755073,1.411512,7.059929],[-1.555393,9.710466,-9.899657,6.063977],[4.763055,-0.220770,0.823860,0.344941],[-1.993284,6.485113,-0.775852,-6.233969],[-3.105994,-9.080754,-4.699792,-7.478749],[4.242357,5.562108,2.005289,5.297616],[-2.769826,-8.572682,8.660015,9.218846],[-6.769388,-2.809347,-9.625788,7.873142],[9.664479,-0.580345,3.598423,-2.410329],[-1.146137,-4.078018,3.694686,1.061787]],[[-1.506014,3.184963,2.726272,9.747376],[5.710993,-2.468988,-3.825412,-7.265626],[9.344027,3.012878,-3.580692,-6.289784],[-1.094189,-2.663593,-1.276768,5.847946],[-0.624639,-7.061997,4.284646,7.386477],[3.738073,8.522317,0.865918,-2.226843],[-2.544360,-1.362214,0.990408,-5.370803],[7.473511,3.071362,-9.977904,-3.204296],[3.574281,-6.650420,3.841946,1.961405],[6.975141,-0.763695,9.957678,-4.281751],[8.537468,-0.334371,9.303050,-9.348582],[4.885826,-1.639654,-4.018177,-6.885930],[3.663563,-3.200322,-3.576009,7.907337],[-1.716945,5.027322,-4.769244,-4.225422],[-9.761557,7.020159,9.887120,-5.421109],[2.086018,-3.552075,-9.261940,-2.057602]],[[5.887171,-2.105222,-4.712342,7.994061],[8.200312,-2.424650,-3.944831,4.705266],[0.332157,-1.184745,-9.204562,-6.498527],[3.459552,1.472651,0.497919,4.800353],[2.424004,9.721798,-0.672260,-0.490760],[3.527443,6.549204,5.299774,-8.517063],[6.915095,9.418363,1.003828,-7.052592],[-8.001284,-0.628374,5.779238,-5.090973],[8.283004,-3.011621,1.590790,-9.380094],[-9.217815,-4.461172,-9.564809,-7.956839],[-9.389945,-2.107391,8.950497,-0.247192],[-9.553849,-8.300733,5.422053,-7.526762],[-7.356209,-2.096927,-9.743139,-1.099503],[-8.679841,-5.127287,0.303216,7.318427],[8.733726,1.809560,-7.335020,-9.211186],[2.619628,-7.498892,-8.563217,0.828824]]], dtype = "float64")#candidate|687|(4, 16, 4)|const|float64
uop_688 = relay.rsqrt(const_687.astype('float64')) # shape=(4, 16, 4)
var_702 = relay.var("var_702", dtype = "float64", shape = (4, 16, 4))#candidate|702|(4, 16, 4)|var|float64
bop_703 = relay.logical_xor(uop_688.astype('int64'), relay.reshape(var_702.astype('int64'), relay.shape_of(uop_688))) # shape=(4, 16, 4)
output = bop_703
output2 = bop_703
func_720 = relay.Function([var_702,], output)
mod['func_720'] = func_720
mod = relay.transform.InferType()(mod)
mutated_mod['func_720'] = func_720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_721 = relay.var("var_721", dtype = "float64", shape = (4, 16, 4))#candidate|721|(4, 16, 4)|var|float64
func_720_call = mutated_mod.get_global_var('func_720')
call_722 = func_720_call(var_721)
output = call_722
func_723 = relay.Function([var_721], output)
mutated_mod['func_723'] = func_723
mutated_mod = relay.transform.InferType()(mutated_mod)
const_810 = relay.const([[[-4.535550,0.567584,-2.048732,-3.224593,3.216519,-2.707689,-2.146173,-6.618194,3.053152,7.731426],[5.199331,8.877624,-9.511594,0.259391,6.069642,-9.710641,3.366373,9.116582,-2.866118,-4.119483],[-1.767239,-0.378744,1.113318,-0.997516,5.694768,6.829098,5.095906,-1.537294,4.457527,-0.494480],[-5.122958,7.865567,-7.014651,-1.395380,-6.825580,-6.326110,7.154545,-1.815975,-9.212585,7.493242],[-2.154509,-2.180613,-0.268955,9.060030,-5.202238,-1.269560,-9.626039,2.109809,-4.256752,5.834778],[-1.060664,3.880909,-4.227765,-5.805384,0.537648,-1.366990,-3.404289,5.076094,2.710823,-3.392590],[4.940812,-4.331380,-7.959282,-8.966289,1.332404,-5.132783,-2.419445,-8.827639,9.751300,3.532141],[-8.133693,-7.805007,-0.026685,8.754515,-4.744794,3.766672,-4.381378,9.112178,3.409554,-7.770853],[7.170128,-2.427150,-0.098461,-7.909576,9.372595,-4.488941,1.370375,-3.861239,1.808795,4.551342],[-4.979560,8.782448,-8.906002,7.630128,-4.596745,2.010244,-2.192116,2.945145,-8.003524,-2.426366],[2.727115,3.982923,5.662510,-3.422848,-8.502078,-6.554046,1.588363,3.275228,-6.571254,4.305116],[-7.864779,-1.667098,0.265315,-4.451573,5.073041,3.640888,1.686976,0.590888,9.265377,0.579645],[9.170555,-7.315649,7.463584,0.903056,-7.821395,6.660818,2.659461,-8.537147,6.120171,-8.807353]],[[1.445128,-3.192993,-5.430252,-1.972954,1.617835,7.926126,8.104488,5.030799,-7.605802,4.508321],[-1.684126,6.890187,-7.961357,-4.830229,-3.445580,2.510289,-1.852007,6.264794,0.213927,-7.018630],[7.385562,-0.550400,8.346640,-1.689875,-4.239508,3.672593,-9.970834,-5.281617,-0.333688,-9.914128],[5.069981,-4.476630,5.295799,-9.526805,1.795208,-5.932096,0.802162,-5.747490,-3.935630,-5.039148],[-9.899223,8.523563,-5.496285,0.401257,-1.779324,-7.942364,9.066568,-0.024005,-0.247096,-5.116994],[3.123639,-2.993009,0.714473,-7.159512,0.061785,-7.046801,-5.647962,-3.582192,9.883311,3.267928],[-8.336652,9.019405,-6.734274,-4.829184,-6.398561,7.492069,9.707978,-5.966406,-2.384892,5.337107],[2.105798,4.532665,4.392421,6.929946,1.821890,0.070259,-7.001561,-2.503786,-1.792016,0.987050],[3.511916,-2.819781,-7.447963,4.743916,2.588764,0.024308,-9.416618,-8.353971,-7.061748,-8.129569],[-7.872673,3.498610,-2.706983,-3.706405,8.141367,8.889906,-8.360161,0.346731,7.671192,7.105009],[5.350955,9.054073,7.800465,-0.899153,2.273418,7.508277,-7.391995,-8.799090,-9.071702,5.277172],[-0.332028,-1.848655,-9.067344,-1.362546,-2.373572,2.644127,-3.308657,6.991493,-3.755286,2.741208],[-8.981738,-2.277370,-5.671595,6.606781,6.337668,-1.968473,-3.060436,-6.612063,-2.339656,-2.964015]],[[-3.438326,7.237054,-0.059362,-4.660055,-6.529349,3.089826,-7.356729,6.274636,-7.058145,-2.189878],[1.009189,-1.531291,2.181630,-0.016805,6.497972,4.356242,-7.667878,-3.927794,5.495108,-7.875320],[-7.534445,8.148570,8.891475,8.403323,0.808044,1.711442,-0.762632,-3.689100,-1.370470,-8.383599],[1.606755,3.128730,-8.103774,0.332528,-4.806635,6.919814,7.137637,5.780606,5.023252,-4.015411],[-9.640461,4.238516,4.823671,2.974132,-4.342336,8.063307,2.366747,-2.938602,-2.254423,4.161500],[9.518857,-9.627879,6.358420,9.877881,-5.443799,-1.154015,1.160344,-0.683665,6.048226,-4.990513],[7.221652,-7.237943,-3.930793,-5.652046,-3.245026,7.194152,-6.960076,-2.582258,4.791477,-9.208523],[0.087322,3.907332,-0.658128,-8.637019,1.059015,9.516906,-6.845868,4.393131,-5.838005,-5.745743],[8.235205,-0.479446,6.620459,-1.929352,-2.240291,-0.146910,2.638889,-4.937420,4.129110,2.319412],[6.020033,2.592640,-4.565665,-2.731101,-6.709935,2.715976,-9.854103,4.372645,-1.026577,5.153730],[-6.856263,0.882156,0.596091,6.501872,-6.005014,4.926509,-4.780874,8.725200,0.741018,8.894683],[-3.421200,5.622437,4.180051,-9.756428,-1.207291,-9.753337,-3.624135,-2.368380,-4.512240,-8.180672],[1.901293,-1.317353,6.259250,-5.324419,-8.764358,-5.566635,5.583825,8.105026,3.819982,-7.164742]],[[0.796749,-1.017616,-8.822637,0.528268,0.984387,4.780736,9.425286,-4.140713,-7.454322,0.374840],[-4.893843,0.619980,-1.406571,-5.637865,2.269629,2.737343,-4.379007,-1.740958,7.772439,5.973847],[6.191382,1.986591,-2.564804,2.785297,-8.819260,1.016145,7.582997,-7.584038,-6.371294,2.365813],[-6.261370,-5.415498,-3.069573,7.145003,4.330527,-1.247379,-9.463796,7.182406,1.414566,8.630447],[-4.794105,0.818499,9.081546,7.609946,-3.908484,4.115337,8.709116,4.089683,-1.118724,6.936871],[1.161522,4.687489,2.200988,6.870601,5.049080,2.631708,2.488074,5.450197,-8.523216,-6.786501],[6.038604,8.157489,-6.652315,3.936947,-0.971496,-6.430769,-0.256931,5.640924,-8.170099,0.852556],[7.205403,1.214961,2.476341,4.314589,7.516823,-1.703371,-5.634686,-7.609904,4.379103,7.896240],[-7.372842,6.791780,1.326057,5.466197,5.925926,-1.784441,9.525520,-0.009526,-9.342536,-5.723546],[6.929459,9.777130,7.669799,-4.165855,3.264612,-8.922621,8.203778,-9.794550,-8.724315,1.552048],[-7.707480,-3.957090,8.801716,-9.911233,-1.478635,-3.201369,-0.393892,6.255739,4.316104,-8.108393],[-8.236018,-1.399654,-0.599915,-3.371135,-7.601881,9.355533,5.042401,-4.488041,-0.962167,4.303914],[-3.199751,-5.867094,3.930850,-0.574376,-4.716302,0.836860,9.539795,-3.980953,-9.325016,-8.375803]],[[-8.261094,-0.698052,0.810065,5.702873,2.799922,-3.336589,-4.427676,-5.486547,6.572817,-2.665155],[9.168695,-8.605780,9.520985,3.382928,1.312969,8.869158,8.376617,-5.356207,-1.034368,-5.283451],[-4.557604,1.353891,6.949220,-7.503609,-4.079830,-4.667992,-2.268812,-1.368634,-5.831991,7.908822],[4.701955,9.550843,-9.918861,0.159517,7.115063,8.291566,1.334187,-4.272129,-9.619804,2.876090],[5.792137,0.123397,-5.334175,-0.974229,2.283427,-3.164336,-4.444752,7.517268,3.363805,2.107905],[-0.306506,-5.039177,-2.309010,-3.645176,6.223723,0.605718,-9.522336,-5.511853,6.126131,6.372934],[4.334191,6.403693,2.565312,-3.350366,-0.546123,-5.038101,-9.861127,-8.422144,4.114395,-0.796520],[-1.734871,-1.807185,-6.047517,5.005534,5.642853,-2.588614,-0.732882,-7.447178,-7.285602,9.614190],[-7.285152,5.610802,-1.214260,0.796784,-8.603909,8.759103,-7.594190,6.383112,-3.037141,-7.008992],[1.862274,-2.104140,-4.035395,-8.106021,-1.147174,6.588232,4.723592,8.184182,-4.276921,0.701776],[-3.853148,9.540152,-2.821880,2.403950,3.832262,-4.196478,-5.734653,9.809632,0.927588,2.123634],[0.157362,5.212141,4.663125,-5.239822,0.605296,7.301803,-0.463572,-3.472761,4.640606,-8.775963],[9.648503,-0.931977,8.483853,2.585528,3.838098,-4.474287,4.424178,9.411840,7.755730,6.550685]],[[2.906922,-0.812566,1.100955,4.896940,0.488922,-0.204280,-3.375966,-9.138576,-8.603326,9.488046],[7.702210,-9.329278,1.697443,8.097425,7.703320,6.555262,7.595471,1.339560,3.542291,-0.800748],[-4.836193,3.421549,2.584176,-6.773926,9.882365,4.469417,-1.412380,-6.667944,2.107607,-3.899361],[-1.241385,3.994115,8.432802,-8.627296,7.007970,0.321452,0.950348,6.189920,0.809192,-1.129819],[2.313437,7.095471,0.064244,3.355172,5.420306,-6.491916,5.490648,-2.076196,-6.190947,1.215912],[6.258554,8.432367,-3.772885,5.579812,-1.706154,-3.368246,3.648375,9.835942,1.356114,6.663591],[-9.016145,-9.963673,8.755774,1.405869,-7.717317,-2.555233,8.227736,-6.119786,-0.329815,7.820759],[-6.377292,-9.171442,5.750828,-5.071802,-6.270239,-0.888660,4.103716,-5.655319,7.177821,-0.353913],[3.964891,5.589245,-3.378583,-2.901357,8.622927,-9.485696,9.837297,3.067172,-7.628816,-6.448971],[0.418916,-4.883991,7.634648,0.083603,-5.759364,-0.511258,-6.915793,-9.925746,-6.659381,4.613285],[2.950011,9.086787,-9.600050,7.532479,-6.263290,4.272418,-9.477151,3.392597,2.532046,-5.713139],[-2.714091,0.539692,-4.312842,-0.353342,-0.682183,-9.246466,3.003961,-9.806939,-5.210799,-2.195991],[2.480397,-4.595441,3.882807,-9.850411,1.277526,-0.145037,1.445668,-3.348140,-7.755857,-7.691341]],[[9.169148,-9.085314,-2.590505,-2.743128,-8.739091,-8.021992,9.639432,-5.782811,-9.843478,5.102949],[7.115870,7.133102,5.434098,8.370640,-7.332892,-9.375885,-6.778616,-8.322843,7.489074,-5.433477],[-7.889551,-5.887005,2.060043,-4.219486,2.797755,5.316044,-3.411711,8.799611,1.152994,3.460661],[4.434759,9.894025,-4.957470,-2.130197,-7.165313,1.559697,5.493995,-0.503215,-3.022005,-6.438890],[-7.807782,8.271915,1.471057,-8.254540,7.701624,-5.898310,6.945061,-8.928035,-3.252851,-2.324750],[6.577287,6.153023,8.785177,-9.069175,-2.131678,1.345803,-6.290546,1.369541,2.092937,-4.636511],[2.182475,6.753018,-3.812453,-7.083288,0.959646,-4.213465,8.802520,1.514995,2.677448,-4.113232],[4.791748,8.990919,-5.241161,0.741991,-9.380094,-7.108229,-5.237751,6.581812,-8.167348,0.236890],[-3.237043,-2.594619,8.360732,-9.828335,0.750736,5.327701,-5.070510,4.843558,1.175542,-3.493844],[-9.538332,-5.136361,1.885727,-7.100159,6.599756,2.907528,3.951708,5.086692,5.593920,8.651168],[5.906612,8.984980,5.242925,-2.492456,1.253825,2.714078,-2.365047,0.650594,0.155767,6.096510],[8.173203,-7.990560,-2.148892,-0.371534,5.175448,4.812019,-6.948499,-1.065019,2.801601,-3.876439],[2.622004,-3.140752,1.282326,4.295853,0.950886,-7.958837,9.268518,4.529772,-5.120258,-4.245363]],[[-9.489262,-2.335995,-3.601450,-4.899222,-4.289533,3.170555,-7.875050,8.506076,1.356709,-9.581806],[3.361276,7.159947,8.362106,-3.946602,-4.779427,4.054353,-1.380320,4.772306,-5.013763,-5.069282],[5.098698,8.975744,-0.810008,8.602951,5.109389,-6.042513,-0.995340,-0.133345,8.875221,-4.645632],[7.238176,-1.039863,4.747440,-5.366748,9.973217,-7.669049,-0.337430,0.674659,-0.374379,-7.569302],[-0.421741,-6.946792,7.202164,6.467318,-5.357061,-5.222749,9.762119,5.273952,6.419634,7.577266],[8.233158,5.237492,8.035752,-6.958411,6.088995,3.989722,6.587864,1.892978,-4.802507,9.597215],[-5.495277,-5.939023,-8.821173,-8.406737,-7.783360,2.182950,-2.478947,5.667105,6.625469,6.319672],[9.513268,-9.993999,6.033453,7.130068,-6.447555,-2.653246,-9.200223,4.182222,-4.131815,-1.946974],[3.012116,-2.026501,-1.307956,6.876197,9.928595,1.951261,3.139243,-4.189243,9.454817,0.873567],[-9.283493,-0.832428,-2.444372,-3.144687,4.921315,1.245414,-5.024184,-4.411904,-1.653001,-8.703813],[6.900661,-1.117037,2.647001,9.216585,-9.333099,3.329791,-6.744344,4.765547,6.943754,7.388364],[2.725240,2.102147,1.635181,-2.328451,3.502590,8.041408,-8.277813,4.271214,-6.259023,-7.577629],[0.964847,-1.485672,9.434013,7.167236,4.330480,-6.046801,7.167961,-7.747130,0.275550,-0.009198]],[[5.467245,5.230690,1.336500,2.503162,4.181679,-6.856515,6.745064,-4.637232,1.883417,0.880069],[2.782325,3.679004,1.448184,1.362599,-1.805148,2.300198,3.285151,-4.831531,-5.694278,1.519355],[7.199030,-2.344192,-9.154444,-1.586601,-3.008618,-5.597879,5.174181,2.256191,7.950707,5.342755],[-9.611692,8.359663,-4.543687,2.784710,8.316210,-2.538739,-9.800706,-3.965237,-0.688218,-6.969899],[-3.247706,-8.024200,-4.745156,0.846962,-9.249149,-0.334719,1.301057,-4.644180,5.252025,-3.688263],[-1.545220,2.028213,-4.407988,8.417240,-4.856982,8.052819,-3.492109,-7.915294,8.295478,-1.885323],[8.513608,7.774335,-6.010052,-3.143681,2.825705,4.407387,0.905299,-1.247119,-5.744224,-4.330518],[-4.979885,4.691024,1.092912,0.586127,0.840625,-1.412822,-4.106397,-7.862176,-8.412451,-7.428236],[0.668552,2.067531,9.030566,-3.785829,-6.958922,-9.651431,9.858387,0.172470,-3.836482,0.348464],[6.716663,-9.412335,3.157239,-2.683201,2.067476,6.872372,-1.976192,9.512028,6.926468,4.496320],[9.192382,-4.114352,-0.524392,2.954685,-4.749450,-5.728164,7.962748,-6.299094,6.554997,-7.771156],[0.498688,-9.197605,-0.197439,0.275604,0.989555,8.300705,3.956550,7.991722,-8.107280,-6.753502],[-5.382063,-1.222153,3.965641,-0.681691,8.451229,4.096951,3.151602,5.149372,7.138368,2.167414]],[[3.678126,7.211802,-2.151201,-1.286179,-2.815625,6.955685,-7.150993,-7.572489,-3.574509,-3.244812],[5.112193,2.700456,8.728239,-0.558481,6.945611,-0.851692,5.125994,5.065918,-5.964964,-2.874107],[-6.720348,8.886816,9.058439,-8.201908,2.826450,2.317969,-1.741060,1.711533,7.775405,4.795645],[2.434241,-0.732817,2.775182,-3.878543,4.565183,-2.596609,-8.087329,-4.501487,4.643553,-0.211985],[-0.632663,2.723509,-4.345641,-1.002995,9.317251,-2.042048,5.120839,7.199840,6.080842,2.568817],[-0.892634,-2.973222,6.435226,-1.700844,-2.077511,1.330820,-3.755673,7.881123,8.161084,6.594607],[8.598460,4.881539,-8.749742,-0.615375,-7.919253,-7.948513,1.919946,-2.732124,-3.665482,-9.772660],[0.286490,3.787428,-9.243032,-5.272918,-1.761891,-1.104388,4.874292,8.503395,-3.850501,4.786244],[0.770709,5.882753,1.613211,1.189164,-0.480171,-2.760907,-0.937186,-1.044588,-0.579430,-5.043624],[-3.146206,1.817414,5.587780,7.566398,-3.384309,-8.913228,-9.186555,-1.578293,4.848546,8.248732],[3.657957,8.579674,3.357925,5.630074,-5.134504,9.648666,-4.066645,7.438306,5.673890,-1.780952],[5.007626,7.128568,-8.797697,9.861147,7.433912,-0.803012,-1.492029,-5.426965,7.329957,-0.233670],[-7.847068,-0.642347,-5.429596,-1.226289,-6.179642,4.043462,4.560790,0.504162,-3.671228,-6.958989]],[[-7.720970,0.122759,-3.504190,-5.391504,0.520306,-5.213260,-6.095108,-3.033875,-3.809467,-4.755554],[3.472817,-3.728269,-2.397043,2.665898,8.804170,4.863524,-4.777177,-1.540091,-7.792625,-7.742875],[2.129839,9.418225,4.918471,-4.313540,-4.202607,-7.716640,-7.303736,9.515575,-3.339526,-5.433773],[-2.923501,6.134662,-1.380181,1.677547,8.109826,-9.474753,-6.504808,-0.248263,8.396318,9.466637],[-2.614445,-2.102223,4.542030,3.268834,-1.454470,5.101316,4.644055,8.917312,-4.798432,8.418899],[-1.136774,3.241289,4.192636,-9.238823,-1.377309,4.923771,0.479939,-5.701243,7.172626,-6.415208],[2.759227,-6.753700,3.806211,-7.989692,-9.547172,3.145459,2.492073,-6.171706,-0.289450,1.853862],[-2.394680,1.643949,-8.800796,-7.700299,-4.515639,8.947599,-0.362168,-9.362802,1.484510,-1.171644],[-6.414787,-2.778536,-2.792573,4.737142,9.823991,3.111964,3.145983,3.921632,-0.372617,1.849856],[2.288911,-9.290549,-8.730408,9.429124,8.702554,6.022851,8.779276,5.961675,-5.187450,-6.191918],[-1.771438,-4.348508,8.671415,9.483166,1.140236,-9.930856,-4.030386,4.720965,0.443335,-3.735343],[-5.516874,3.251788,-6.023066,2.400320,5.164587,-5.101972,6.527463,5.133316,4.340090,9.161527],[6.928780,1.554914,-3.843369,-4.190391,3.739880,1.571697,-9.556276,4.175674,5.169223,-9.470577]],[[-1.556636,-1.144233,8.495787,-2.723440,8.752421,5.880619,3.561744,-9.918267,4.074521,-1.868457],[3.104385,-2.460620,-6.944822,-1.917483,-9.207090,-9.746821,-6.829953,1.626178,-9.279225,-0.166189],[3.246987,-7.776839,-7.411835,-5.705168,6.167102,-7.322049,-6.247643,-5.901124,-5.531804,6.198359],[9.963060,5.156327,-7.575248,2.707838,9.343210,-7.029764,-3.354089,8.310077,8.037024,-8.490964],[-3.858672,-8.740100,-2.979395,7.801164,4.662565,0.610472,-9.918527,-4.492845,8.513216,9.455779],[6.834699,4.029089,-2.348579,-4.590546,8.324575,-5.590706,3.757543,-7.676149,-6.561816,-0.065718],[-9.523414,-4.728961,2.525687,-3.120541,3.595476,4.605915,6.455841,-0.871413,2.814064,-3.016082],[6.132057,5.214703,6.652777,-0.694864,7.476306,0.266920,3.173110,7.623288,7.083586,0.048273],[2.389653,9.845760,-0.203148,9.481377,4.059161,-1.534575,-9.797208,8.674451,6.755861,8.636432],[0.620420,0.467434,3.367909,2.937639,-0.822862,7.611894,4.344733,-0.738209,-0.338666,3.366989],[3.904552,-6.254542,0.432789,4.666692,-5.304502,-4.525213,-2.222024,-7.248740,-5.364000,-2.535056],[-7.334054,-5.935058,-8.335701,6.747246,-9.518377,-3.575375,-3.138527,-1.553877,7.669377,2.952168],[-0.787706,3.280009,0.664044,-4.596106,1.066327,-1.257326,-8.638009,7.989792,6.674852,0.494091]],[[8.526068,-5.427270,9.373145,-7.262040,-0.241002,-4.209990,3.476946,6.944213,5.076868,-9.432083],[-7.252476,-3.933513,6.993023,-3.249506,6.918984,7.593398,6.513510,-6.950350,-6.957060,9.423502],[-7.141859,0.942413,8.626210,-6.070998,4.412919,9.868594,2.880812,-6.443730,8.507141,-8.676621],[0.325954,-3.046580,0.744331,4.237579,8.328075,-6.644480,-5.519047,9.345928,2.350579,-6.733452],[-4.125970,-9.341723,9.049510,-4.884552,5.452886,9.968707,-1.617215,-1.321432,8.961234,8.230637],[-5.746134,-3.315407,-3.450459,3.221124,-1.647469,-6.526217,2.240541,-0.447084,3.026013,-2.374602],[4.407910,2.595083,1.157957,7.048213,5.657926,7.842646,1.919516,-1.165741,4.053326,4.258821],[5.579103,-8.764457,-1.765437,-7.752369,8.547363,4.675950,-3.908490,9.720229,-1.282170,-2.352316],[2.832013,6.164159,-7.036224,-6.072891,8.380172,7.405714,2.027178,-3.972713,-5.335037,-1.400530],[1.048013,7.744228,-4.453622,8.824326,3.515320,1.171683,2.121379,8.603234,-8.112448,4.872863],[2.155279,2.713106,-2.650394,1.961395,-7.262079,-8.263339,0.403378,1.446379,-2.720515,-6.443024],[0.153925,3.720169,-6.530772,-9.993017,-4.405367,2.080969,-8.777530,4.171979,-6.354129,1.149310],[-1.265183,-6.073523,2.240903,0.696255,-9.476536,-8.387770,8.523580,-6.780643,-0.769446,2.629491]],[[-9.361224,6.703500,5.534939,2.844232,2.641232,-0.163030,-4.926516,1.611416,-0.724373,-3.115918],[-2.778435,-6.214415,-2.738000,3.496335,9.174886,9.100387,5.130105,-3.217958,6.560772,-3.213238],[8.768760,-8.340412,8.079253,1.582370,0.691503,-3.834415,-0.712510,5.604502,9.901149,-8.990246],[7.116558,-0.940872,-5.469322,8.220423,-5.195295,-6.163900,-5.940776,-4.869666,-6.776968,-6.272872],[0.159482,9.815021,9.164700,-3.650497,3.384015,-9.735122,-4.741572,-2.182819,0.750401,5.381341],[1.776058,1.094545,-9.822581,-8.265817,-3.085680,-5.274618,2.501049,4.862055,9.596666,-2.264598],[-9.235078,6.279827,5.170523,5.334852,-3.051383,2.101090,-9.117622,9.437106,-8.410222,6.828729],[-3.882184,-0.751811,3.366798,5.122972,8.652973,-3.083815,-6.375291,-9.497148,6.016670,-1.789140],[-3.020580,3.108139,4.070797,-7.719804,-1.400223,-4.125644,8.940889,1.057050,-1.751722,8.885778],[-6.644629,-8.139212,-2.640312,-7.215283,-8.698534,5.718351,-0.881372,-0.421023,8.330979,0.854629],[-8.358164,7.820696,-7.482331,4.873477,5.566945,-8.080318,-6.002308,-4.593258,-1.961563,-5.570556],[1.113957,3.834464,-5.076442,4.452031,-4.940374,-2.885244,-4.276060,6.163845,-0.330433,-8.856467],[8.943905,2.515743,2.150740,-7.720291,-2.846549,-6.563601,-3.946825,-3.839615,1.342958,3.176418]],[[-4.617338,6.782091,8.324912,-7.267847,1.106068,5.798702,1.443876,-3.143245,-0.782444,-2.810714],[6.255413,-0.248752,7.408223,-9.436440,9.273049,-2.853912,7.109666,-8.700112,-9.949462,-0.563789],[7.745056,0.746266,-7.587143,1.057422,-0.006558,-9.055740,2.412936,-0.436243,5.577938,7.458462],[-8.243524,-2.335326,6.484986,-5.784948,5.504017,2.226558,-5.076158,-6.011881,-3.978760,5.478143],[7.686521,-7.422600,-6.363186,0.201927,-3.059427,-5.582653,3.214963,-7.318352,-1.247088,-7.573991],[-3.156860,-7.030251,-9.996779,7.613895,6.742329,-8.813697,-2.920505,1.687097,7.341393,-3.938195],[6.277056,-2.996899,-4.464076,-7.314665,2.705390,-8.296456,-4.889635,-8.524435,4.628772,-2.113042],[-8.486051,-7.569728,7.011311,5.685191,-1.434218,-3.802058,5.623195,-2.303649,-7.782229,-9.253326],[-3.273357,8.092187,0.457626,2.178858,8.356415,1.522076,-9.986225,3.223366,7.610965,-0.546760],[-8.712921,-9.998859,8.510383,2.185756,0.510647,9.098698,5.539159,-3.023337,-7.002928,1.518134],[5.784957,0.861252,-2.194182,-4.388930,-2.958196,-0.692015,7.335600,-8.173670,8.915185,-1.755022],[5.162730,-3.531316,-2.876199,4.558290,6.185038,9.054238,-6.431022,-1.548636,3.104569,-6.533452],[-3.904473,-2.624770,8.772465,-7.374478,7.734835,6.684426,9.956979,4.450274,7.622692,-2.825041]],[[7.797327,8.326997,1.466055,9.097491,-9.602125,-5.198640,-7.963724,7.955017,1.550689,-6.347807],[-7.479250,2.554283,-9.109689,-4.256872,4.655881,-2.734667,-2.921350,-2.304926,9.827464,-7.838735],[-3.717693,-8.469163,0.057838,-8.879828,-1.253809,9.549966,5.522704,-8.873296,9.944026,8.722981],[6.601935,-2.375645,8.561206,7.699333,-4.721208,6.916233,-2.202343,1.041877,8.497858,-2.987656],[-7.646619,-0.219251,-1.408538,2.676857,8.311014,3.416646,-6.387517,-9.788109,-9.121638,2.963962],[0.732477,7.172339,-3.147984,-6.052459,8.325906,5.725041,-1.053360,0.325477,-0.106480,4.924962],[2.225046,8.908632,-1.736889,8.444408,0.926537,7.458803,1.664334,0.449740,6.501566,6.561558],[-4.694791,-5.341239,1.805711,-8.864568,2.174809,6.132218,-2.536063,-7.933884,2.073189,5.518741],[-9.483404,3.479799,-3.805446,-2.460190,-1.999172,-9.645864,-4.292678,-1.123338,-9.482358,-6.782356],[-7.143109,-9.353976,-3.374747,7.447940,-9.213420,-0.912383,7.745151,1.793696,-2.629396,0.168925],[6.208985,-0.524358,-7.072083,5.364919,9.147485,-9.584111,-0.031018,-8.245544,-1.152452,-0.137682],[-3.526531,6.858983,-8.742486,0.621299,-0.938939,-4.317584,-3.530021,-6.340229,7.471888,8.352790],[8.159725,-8.158523,-0.618277,-8.680636,-5.114249,-8.446138,2.681497,-2.830668,-0.868088,1.236920]]], dtype = "float64")#candidate|810|(16, 13, 10)|const|float64
uop_811 = relay.asinh(const_810.astype('float64')) # shape=(16, 13, 10)
func_490_call = mod.get_global_var('func_490')
func_495_call = mutated_mod.get_global_var('func_495')
const_815 = relay.const([[4],[4],[10],[3],[-7],[-2],[7],[-2],[-2],[-9],[-5],[-8],[10],[10],[-7],[-6],[6],[9],[5],[5],[5],[6],[-5],[7],[9],[-4],[8],[5],[3],[1],[6],[10],[-9],[-1],[-1],[6],[-4],[-9],[3],[8],[4],[6],[5],[2],[-9],[-7],[10],[10],[-8],[-4],[5],[-8],[4],[-10],[5],[-9],[-2],[-1],[-8],[-7],[5],[5],[-5],[7],[-6],[-2],[-4],[-2],[10],[-5],[9],[-4],[-9],[-10],[-9],[6],[-4],[3],[6],[1],[-2],[-4],[5],[-5],[7],[-10],[2],[-9],[-10],[-7],[-7],[2],[4],[9],[7],[1],[-4],[6],[-1],[4],[10],[4],[7],[-2],[2],[5],[4],[1],[5],[9],[1],[-1],[-7],[4],[-9],[5],[2],[3],[3],[-8],[7],[-6],[-1],[1],[8],[-7],[-2],[-2],[9],[-6],[-4],[-10],[-10],[-8],[10],[-10],[9],[2],[-5],[-7],[-2],[2],[5],[2],[1],[4],[7],[-4],[9],[-2],[7],[-8],[1],[8]], dtype = "uint32")#candidate|815|(154, 1)|const|uint32
const_816 = relay.const([-5,-4,-6,-1,-8,-4,-6,7,8,-6,-8,7,3,2,-8,-1,-7,-3,-1,4,1,-2,6,-10,-9,-3,9,10,-5,-2,-9,-7,-8,-9,-5,8,-10,-4,2,-3,4,6,5,3,-10,6,-8,8,-5,4,-10,7,-3,-10,-7,-5,-8,-4,9,-6,2,10,5,5,7,-2,-2,-8,-2,-1], dtype = "uint32")#candidate|816|(70,)|const|uint32
call_814 = relay.TupleGetItem(func_490_call(relay.reshape(const_815.astype('uint32'), [7, 11, 2]), relay.reshape(const_815.astype('uint32'), [7, 11, 2]), relay.reshape(const_816.astype('uint32'), [14, 5]), ), 3)
call_817 = relay.TupleGetItem(func_495_call(relay.reshape(const_815.astype('uint32'), [7, 11, 2]), relay.reshape(const_815.astype('uint32'), [7, 11, 2]), relay.reshape(const_816.astype('uint32'), [14, 5]), ), 3)
bop_821 = relay.maximum(const_816.astype('uint64'), relay.reshape(call_814.astype('uint64'), relay.shape_of(const_816))) # shape=(70,)
bop_824 = relay.maximum(const_816.astype('uint64'), relay.reshape(call_817.astype('uint64'), relay.shape_of(const_816))) # shape=(70,)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
const_827 = relay.const(5, dtype = "uint16")#candidate|827|()|const|uint16
var_828 = relay.var("var_828", dtype = "uint16", shape = (8,))#candidate|828|(8,)|var|uint16
call_826 = func_211_call(relay.reshape(const_827.astype('uint16'), []), relay.reshape(var_828.astype('uint16'), [1, 2, 4]), )
call_829 = func_211_call(relay.reshape(const_827.astype('uint16'), []), relay.reshape(var_828.astype('uint16'), [1, 2, 4]), )
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
call_843 = func_211_call(relay.reshape(const_827.astype('uint16'), []), relay.reshape(var_828.astype('uint16'), [1, 2, 4]), )
call_844 = func_211_call(relay.reshape(const_827.astype('uint16'), []), relay.reshape(var_828.astype('uint16'), [1, 2, 4]), )
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
var_848 = relay.var("var_848", dtype = "float64", shape = (256,))#candidate|848|(256,)|var|float64
call_847 = func_720_call(relay.reshape(var_848.astype('float64'), [4, 16, 4]))
call_849 = func_720_call(relay.reshape(var_848.astype('float64'), [4, 16, 4]))
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_853 = relay.TupleGetItem(func_125_call(relay.reshape(const_827.astype('uint32'), []), relay.reshape(call_814.astype('uint32'), [7, 5, 2]), ), 0)
call_854 = relay.TupleGetItem(func_128_call(relay.reshape(const_827.astype('uint32'), []), relay.reshape(call_814.astype('uint32'), [7, 5, 2]), ), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
call_861 = relay.TupleGetItem(func_125_call(relay.reshape(const_827.astype('uint32'), []), relay.reshape(call_853.astype('uint32'), [7, 5, 2]), ), 1)
call_862 = relay.TupleGetItem(func_128_call(relay.reshape(const_827.astype('uint32'), []), relay.reshape(call_853.astype('uint32'), [7, 5, 2]), ), 1)
bop_877 = relay.minimum(uop_811.astype('uint32'), const_827.astype('uint32')) # shape=(16, 13, 10)
uop_883 = relay.log2(uop_811.astype('float64')) # shape=(16, 13, 10)
output = relay.Tuple([const_815,bop_821,call_826,var_828,call_843,call_847,var_848,call_853,call_861,bop_877,uop_883,])
output2 = relay.Tuple([const_815,bop_824,call_829,var_828,call_844,call_849,var_848,call_854,call_862,bop_877,uop_883,])
func_891 = relay.Function([var_828,var_848,], output)
mod['func_891'] = func_891
mod = relay.transform.InferType()(mod)
mutated_mod['func_891'] = func_891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_891_call = mutated_mod.get_global_var('func_891')
var_893 = relay.var("var_893", dtype = "uint16", shape = (8,))#candidate|893|(8,)|var|uint16
var_894 = relay.var("var_894", dtype = "float64", shape = (256,))#candidate|894|(256,)|var|float64
call_892 = func_891_call(var_893,var_894,)
output = call_892
func_895 = relay.Function([var_893,var_894,], output)
mutated_mod['func_895'] = func_895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1190 = relay.var("var_1190", dtype = "float64", shape = (8, 9, 7))#candidate|1190|(8, 9, 7)|var|float64
var_1191 = relay.var("var_1191", dtype = "float64", shape = (8, 9, 7))#candidate|1191|(8, 9, 7)|var|float64
bop_1192 = relay.less(var_1190.astype('bool'), relay.reshape(var_1191.astype('bool'), relay.shape_of(var_1190))) # shape=(8, 9, 7)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_1196 = relay.var("var_1196", dtype = "uint16", shape = ())#candidate|1196|()|var|uint16
var_1197 = relay.var("var_1197", dtype = "uint16", shape = (8,))#candidate|1197|(8,)|var|uint16
call_1195 = func_211_call(relay.reshape(var_1196.astype('uint16'), []), relay.reshape(var_1197.astype('uint16'), [1, 2, 4]), )
call_1198 = func_211_call(relay.reshape(var_1196.astype('uint16'), []), relay.reshape(var_1197.astype('uint16'), [1, 2, 4]), )
output = relay.Tuple([bop_1192,call_1195,var_1196,var_1197,])
output2 = relay.Tuple([bop_1192,call_1198,var_1196,var_1197,])
func_1202 = relay.Function([var_1190,var_1191,var_1196,var_1197,], output)
mod['func_1202'] = func_1202
mod = relay.transform.InferType()(mod)
var_1203 = relay.var("var_1203", dtype = "float64", shape = (8, 9, 7))#candidate|1203|(8, 9, 7)|var|float64
var_1204 = relay.var("var_1204", dtype = "float64", shape = (8, 9, 7))#candidate|1204|(8, 9, 7)|var|float64
var_1205 = relay.var("var_1205", dtype = "uint16", shape = ())#candidate|1205|()|var|uint16
var_1206 = relay.var("var_1206", dtype = "uint16", shape = (8,))#candidate|1206|(8,)|var|uint16
output = func_1202(var_1203,var_1204,var_1205,var_1206,)
func_1207 = relay.Function([var_1203,var_1204,var_1205,var_1206,], output)
mutated_mod['func_1207'] = func_1207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1673 = relay.var("var_1673", dtype = "float64", shape = (13, 7, 9))#candidate|1673|(13, 7, 9)|var|float64
uop_1674 = relay.atan(var_1673.astype('float64')) # shape=(13, 7, 9)
output = uop_1674
output2 = uop_1674
func_1679 = relay.Function([var_1673,], output)
mod['func_1679'] = func_1679
mod = relay.transform.InferType()(mod)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1680 = relay.var("var_1680", dtype = "float64", shape = (13, 7, 9))#candidate|1680|(13, 7, 9)|var|float64
func_1679_call = mutated_mod.get_global_var('func_1679')
call_1681 = func_1679_call(var_1680)
output = call_1681
func_1682 = relay.Function([var_1680], output)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2238 = relay.var("var_2238", dtype = "uint64", shape = (4, 7, 7))#candidate|2238|(4, 7, 7)|var|uint64
var_2239 = relay.var("var_2239", dtype = "uint64", shape = (4, 7, 7))#candidate|2239|(4, 7, 7)|var|uint64
bop_2240 = relay.bitwise_and(var_2238.astype('uint64'), relay.reshape(var_2239.astype('uint64'), relay.shape_of(var_2238))) # shape=(4, 7, 7)
func_490_call = mod.get_global_var('func_490')
func_495_call = mutated_mod.get_global_var('func_495')
var_2250 = relay.var("var_2250", dtype = "uint32", shape = (154,))#candidate|2250|(154,)|var|uint32
const_2251 = relay.const([-5,7,-4,5,-10,-4,6,8,10,4,-2,4,-7,6,-6,-5,9,8,-6,-5,-4,7,-5,-6,1,-3,-2,-2,3,-6,-7,10,4,-1,-3,-7,5,6,9,7,3,-4,6,-3,5,9,-10,-8,-9,5,5,-10,3,10,-10,-1,-6,8,-2,2,2,-7,-2,-9,6,-2,5,9,8,2], dtype = "uint32")#candidate|2251|(70,)|const|uint32
call_2249 = relay.TupleGetItem(func_490_call(relay.reshape(var_2250.astype('uint32'), [7, 11, 2]), relay.reshape(var_2250.astype('uint32'), [7, 11, 2]), relay.reshape(const_2251.astype('uint32'), [14, 5]), ), 0)
call_2252 = relay.TupleGetItem(func_495_call(relay.reshape(var_2250.astype('uint32'), [7, 11, 2]), relay.reshape(var_2250.astype('uint32'), [7, 11, 2]), relay.reshape(const_2251.astype('uint32'), [14, 5]), ), 0)
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
const_2279 = relay.const([[-1.561256,-9.170816,-6.176973,9.451221,-5.594514,-4.974517,-0.820848,8.472508,-4.560620,6.913013,-5.967502,1.113579,-4.563974,-7.097273,-8.814700,4.271466,-8.159612,0.011464,9.043639,-0.523866,-5.971326,9.773470,1.137195,1.239366,1.020763,-4.283634,-1.202375,7.218657,-4.867641,6.084731,-3.883910,5.411235,0.977419,3.796018,0.804161,-6.434600,2.291846,6.968051,-4.203045,-9.121277,2.772566,-1.202014,-8.012101,7.921347,0.917656,2.487780,4.817038,-1.234739,6.829041,7.572141,-4.054989,0.386570,2.838523,-9.015527,8.427818,-3.856603,9.652543,-9.020430,-5.152142,-5.161375,2.990819,-6.405994,-6.493036,6.429925,-5.123022,2.186790,-6.297855,-4.591578,1.843017,-1.396627,6.215810,2.407250,0.118684,-7.076015,2.854041,2.616657,-1.585933,3.948101,6.877833,0.602072,3.164594,-8.612937,3.647094,-5.301319,9.472795,5.955852,3.131010,-9.139709,-1.257593,-3.944713,3.069682,-7.154376,1.397127,1.209942,-8.911097,3.151568,5.948938,-2.369389,-8.577306,0.147882,1.964717,2.509373,3.486315,0.023508,-6.571836,-8.054069,5.147939,-4.761027,-3.933606,9.751079,-7.154790,9.118674,-5.466190,-7.869977,-5.593733,8.570287,-5.362723,-6.531552,-8.450112,0.654126,4.243244,-0.891068,3.067428,-9.586988,-3.722805,-7.635053,-3.629972,-0.377449,3.586488,3.550282,-2.281761,9.964783,5.929135,2.622931,8.305846,6.522820,-9.216346,-1.293380,-1.541055,5.650949,-5.140487,9.685044,8.585862,-2.429942,-9.757160,-4.677136,-4.693598,6.096275,3.687071,7.272021,3.178640,-5.507151,-4.330534,0.110655,0.903068,-7.144342,9.694045,-6.001509,0.699880,7.698602,-9.018866,5.925600,-1.941488,7.714091,7.592364,-7.001701,2.284855,-4.077096,6.043911,-8.387639,-5.544141,1.686747,-4.772987,0.789705,-8.447629,6.499932,-6.357292,4.792175,3.598894,0.141129,1.332870,7.480848,-4.898103,-0.645216,-6.410652,-5.055941,2.716039,-8.798745,6.333822,-7.487729,-5.153351,-8.602425,-5.035435,0.696184,-8.488050,-0.451755,6.077650,-7.777210,3.328118,7.385981,6.920954,-2.820358,5.493020,-1.153649,-6.414223,-3.207545,-4.726120,-1.902560,-6.998045,-1.087037,-3.483113,-5.057515,3.721383,9.155887,-6.293970,-8.327793,-7.560505,-3.519638,3.542960,-1.258215,5.607626,-8.643578,6.676346,-4.835792,8.738838,5.044920,5.679546,3.078334,-8.549119,0.487203,3.564964,6.139733,3.630390,-9.441708,-7.953017,-3.080672,1.424606,-8.457937,8.152522,9.457879,5.588991,-8.008388,-1.406143,4.697345,-2.939920,7.715934,-2.269370,5.744682,2.950447,-7.816907,-6.885712,7.614911,-6.691627,3.874961,2.617794,-5.351469]], dtype = "float64")#candidate|2279|(1, 256)|const|float64
call_2278 = func_720_call(relay.reshape(const_2279.astype('float64'), [4, 16, 4]))
call_2280 = func_720_call(relay.reshape(const_2279.astype('float64'), [4, 16, 4]))
output = relay.Tuple([bop_2240,call_2249,var_2250,const_2251,call_2278,const_2279,])
output2 = relay.Tuple([bop_2240,call_2252,var_2250,const_2251,call_2280,const_2279,])
func_2290 = relay.Function([var_2238,var_2239,var_2250,], output)
mod['func_2290'] = func_2290
mod = relay.transform.InferType()(mod)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2290_call = mutated_mod.get_global_var('func_2290')
var_2292 = relay.var("var_2292", dtype = "uint64", shape = (4, 7, 7))#candidate|2292|(4, 7, 7)|var|uint64
var_2293 = relay.var("var_2293", dtype = "uint64", shape = (4, 7, 7))#candidate|2293|(4, 7, 7)|var|uint64
var_2294 = relay.var("var_2294", dtype = "uint32", shape = (154,))#candidate|2294|(154,)|var|uint32
call_2291 = func_2290_call(var_2292,var_2293,var_2294,)
output = call_2291
func_2295 = relay.Function([var_2292,var_2293,var_2294,], output)
mutated_mod['func_2295'] = func_2295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2490 = relay.var("var_2490", dtype = "float32", shape = (16, 16))#candidate|2490|(16, 16)|var|float32
uop_2491 = relay.log(var_2490.astype('float32')) # shape=(16, 16)
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
call_2498 = func_720_call(relay.reshape(uop_2491.astype('float64'), [4, 16, 4]))
call_2499 = func_720_call(relay.reshape(uop_2491.astype('float64'), [4, 16, 4]))
const_2504 = relay.const([[[4,7,2,3],[-10,-5,10,8],[6,-8,-9,-2],[4,3,-8,3],[9,-3,-5,10],[-7,-6,3,-4],[-3,-9,-7,-3],[10,-6,5,10],[7,-6,10,-10],[1,3,2,-6],[-10,-7,5,9],[-6,-6,4,8],[1,-6,1,7],[-1,-7,-10,10],[-7,-6,-7,-10],[9,5,-3,-7]],[[-6,-5,-8,-9],[5,-4,9,2],[8,-8,4,-7],[3,-8,-6,1],[9,-1,10,-6],[5,9,-1,-10],[10,4,-6,-7],[-7,-5,10,-7],[2,6,9,7],[1,10,9,-10],[9,-3,7,4],[-6,6,-7,-5],[-2,-10,-4,-9],[-5,4,10,-2],[-8,-4,6,-8],[8,-8,-9,-3]],[[7,-4,-4,-3],[-3,-2,-1,-3],[-3,3,-4,-2],[4,-7,-7,6],[6,3,4,-9],[-1,1,9,-2],[-9,-4,5,-7],[-7,4,5,-8],[-9,-2,-4,-1],[6,-10,3,7],[-4,-7,8,2],[8,-9,-5,7],[7,8,-10,8],[-10,-1,8,-7],[1,-5,-7,4],[2,-10,10,2]],[[7,-9,-10,5],[5,3,5,10],[-3,5,-10,7],[2,-9,-7,10],[-1,-2,-5,-1],[2,8,5,5],[2,9,-9,-4],[-6,-5,-5,6],[5,-9,5,-3],[-5,6,8,7],[1,2,2,5],[2,-10,5,5],[4,-10,-3,9],[5,-7,9,5],[-7,2,-4,5],[6,-4,-1,-3]]], dtype = "int64")#candidate|2504|(4, 16, 4)|const|int64
bop_2505 = relay.logical_and(call_2498.astype('bool'), relay.reshape(const_2504.astype('bool'), relay.shape_of(call_2498))) # shape=(4, 16, 4)
bop_2508 = relay.logical_and(call_2499.astype('bool'), relay.reshape(const_2504.astype('bool'), relay.shape_of(call_2499))) # shape=(4, 16, 4)
output = relay.Tuple([uop_2491,bop_2505,])
output2 = relay.Tuple([uop_2491,bop_2508,])
func_2511 = relay.Function([var_2490,], output)
mod['func_2511'] = func_2511
mod = relay.transform.InferType()(mod)
var_2512 = relay.var("var_2512", dtype = "float32", shape = (16, 16))#candidate|2512|(16, 16)|var|float32
output = func_2511(var_2512)
func_2513 = relay.Function([var_2512], output)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2662 = relay.var("var_2662", dtype = "bool", shape = (1, 12, 3))#candidate|2662|(1, 12, 3)|var|bool
var_2663 = relay.var("var_2663", dtype = "bool", shape = (13, 12, 3))#candidate|2663|(13, 12, 3)|var|bool
bop_2664 = relay.logical_or(var_2662.astype('bool'), var_2663.astype('bool')) # shape=(13, 12, 3)
uop_2670 = relay.asin(var_2663.astype('float32')) # shape=(13, 12, 3)
func_398_call = mod.get_global_var('func_398')
func_400_call = mutated_mod.get_global_var('func_400')
const_2678 = relay.const([-1.043099,6.234322,-8.672267,-0.975527,6.114975,2.136371,6.036256,-4.991423,0.136793,-9.567939,-2.272404,-0.887230,3.696984,-8.616769,1.432809,2.770153,6.306903,-8.258793,7.494117,9.982377,-2.602548,1.402630,5.885686,2.074185,-7.653058,0.479957,7.775756,8.187741,6.407887,2.124436,3.809053,-2.234745,2.259173,-1.243201,8.567563,-0.889256,-7.418057,2.532388,0.842312,-1.280281,-9.776880,9.924879,-9.817913,8.459254,-7.147286,-2.346072,2.968072,-0.734479,-1.953862,2.436381,7.606742,5.064025,9.241637,3.282824,5.333428,4.122846,5.851497,5.463092,6.335628,1.673143,-8.758413,8.362584,-5.349436,-5.658223,-2.842884], dtype = "float32")#candidate|2678|(65,)|const|float32
call_2677 = func_398_call(relay.reshape(const_2678.astype('float32'), [5, 1, 13]))
call_2679 = func_398_call(relay.reshape(const_2678.astype('float32'), [5, 1, 13]))
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
const_2687 = relay.const([-2.943164,1.021681,5.251839,0.845810,6.339193,-0.961862,2.041334,5.152118,7.865147,1.088316,-5.135323,-3.535717,-8.857100,8.488619,-4.485946,-2.545649,-6.651605,1.492169,7.343543,-0.032418,4.219956,-3.478730,-4.894476,-0.647875,-8.219978,-9.395952,0.006320,-9.135766,0.128430,3.996025,-8.419253,-0.240513,0.170369,-4.194845,0.007595,-5.420214,-1.239359,2.317442,-4.790401,-5.266580,3.858363,-7.947318,-2.981703,1.615835,-5.134995,8.381988,-1.420728,-7.962766,4.364418,-4.831288,4.948314,6.285712,4.997099,-5.339751,1.975522,7.825461,-3.928705,2.441927,-0.165536,-7.213794,1.958663,2.538970,9.148785,-0.366649,0.065979,9.298937,2.973214,-2.866465,-8.387851,-1.136686,9.465105,-1.666514,1.818915,-6.475150,-3.799897,3.504583,-9.626975,-9.590632,-8.791650,7.276291,2.001262,-8.829882,1.499714,-4.730732,5.203747,4.374834,-8.577523,-8.590832,2.695028,7.098907,8.861364,-0.360210,-8.822139,-3.606354,8.208029,-5.203320,-5.422693,4.254882,6.834830,5.986770,-2.735843,5.398631,5.611826,5.894242,6.202422,-7.777028,1.546162,-6.796330,0.314127,-3.128940,-7.500573,-6.977667,3.288933,9.932573,5.005474,2.025083,2.233707,-3.585084,4.157367,-3.922561,-8.340796,3.458084,9.748561,8.338958,-1.978863,9.752313,-8.099404,-6.100804,5.886119,-4.776238,-3.595471,-3.898035,3.200458,-8.674864,-0.286363,9.389740,-4.867060,-3.865171,-0.281951,-0.758824,1.385522,-1.234416,0.409905,5.267990,-5.135832,2.051669,-4.733817,-0.428854,-0.323908,-0.682502,5.813026,-6.073927,-9.889014,6.440708,-0.453967,-5.816683,1.668325,-7.060488,5.190550,2.884984,1.746659,-5.640991,0.922911,6.216819,-7.976755,-1.882753,4.331764,6.378227,-8.308091,2.933130,-5.102650,-2.320143,-5.700823,6.836734,2.860822,8.344362,8.900184,-5.322853,-6.097498,7.466362,3.871768,5.692888,-8.966308,-7.878932,8.006213,0.286816,8.017306,-7.655699,-9.939633,1.157808,-4.477550,7.983121,1.216165,-7.790558,0.781839,-8.260632,-0.180174,-9.216705,-6.120265,6.688051,-3.994978,1.714358,-4.353619,8.707564,2.812975,-8.797124,6.890018,-8.497155,4.167051,-1.956260,-8.310052,7.029828,-3.713966,6.850358,5.221154,7.438618,4.727896,9.163632,-3.629135,1.729515,-2.584034,3.053942,5.779541,-1.155616,8.498348,5.544113,3.960966,-4.662918,-2.969328,-9.400147,-1.061026,0.732750,-0.598402,5.994504,1.502675,7.608247,2.929172,7.896554,-8.985411,6.322282,0.772969,4.698685,-9.565897,-3.832711,7.885047,-1.469473,-9.287628,8.074676,-9.765518,2.123124,9.048862,9.215213,-0.198590,2.596845,-8.655717,-9.136102], dtype = "float64")#candidate|2687|(256,)|const|float64
call_2686 = func_720_call(relay.reshape(const_2687.astype('float64'), [4, 16, 4]))
call_2688 = func_720_call(relay.reshape(const_2687.astype('float64'), [4, 16, 4]))
func_2511_call = mod.get_global_var('func_2511')
func_2513_call = mutated_mod.get_global_var('func_2513')
call_2696 = relay.TupleGetItem(func_2511_call(relay.reshape(call_2686.astype('float32'), [16, 16])), 0)
call_2697 = relay.TupleGetItem(func_2513_call(relay.reshape(call_2686.astype('float32'), [16, 16])), 0)
var_2698 = relay.var("var_2698", dtype = "float32", shape = (13, 12, 3))#candidate|2698|(13, 12, 3)|var|float32
bop_2699 = relay.bitwise_or(uop_2670.astype('uint8'), relay.reshape(var_2698.astype('uint8'), relay.shape_of(uop_2670))) # shape=(13, 12, 3)
uop_2703 = relay.cos(bop_2664.astype('float64')) # shape=(13, 12, 3)
func_891_call = mod.get_global_var('func_891')
func_895_call = mutated_mod.get_global_var('func_895')
const_2710 = relay.const([9,-6,-9,2,-10,-3,8,9], dtype = "uint16")#candidate|2710|(8,)|const|uint16
call_2709 = relay.TupleGetItem(func_891_call(relay.reshape(const_2710.astype('uint16'), [8,]), relay.reshape(call_2686.astype('float64'), [256,]), ), 8)
call_2711 = relay.TupleGetItem(func_895_call(relay.reshape(const_2710.astype('uint16'), [8,]), relay.reshape(call_2686.astype('float64'), [256,]), ), 8)
output = relay.Tuple([call_2677,const_2678,call_2686,const_2687,call_2696,bop_2699,uop_2703,call_2709,const_2710,])
output2 = relay.Tuple([call_2679,const_2678,call_2688,const_2687,call_2697,bop_2699,uop_2703,call_2711,const_2710,])
func_2728 = relay.Function([var_2662,var_2663,var_2698,], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
var_2729 = relay.var("var_2729", dtype = "bool", shape = (1, 12, 3))#candidate|2729|(1, 12, 3)|var|bool
var_2730 = relay.var("var_2730", dtype = "bool", shape = (13, 12, 3))#candidate|2730|(13, 12, 3)|var|bool
var_2731 = relay.var("var_2731", dtype = "float32", shape = (13, 12, 3))#candidate|2731|(13, 12, 3)|var|float32
output = func_2728(var_2729,var_2730,var_2731,)
func_2732 = relay.Function([var_2729,var_2730,var_2731,], output)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3095 = relay.var("var_3095", dtype = "float32", shape = (16, 15, 10))#candidate|3095|(16, 15, 10)|var|float32
uop_3096 = relay.acosh(var_3095.astype('float32')) # shape=(16, 15, 10)
output = relay.Tuple([uop_3096,])
output2 = relay.Tuple([uop_3096,])
func_3101 = relay.Function([var_3095,], output)
mod['func_3101'] = func_3101
mod = relay.transform.InferType()(mod)
var_3102 = relay.var("var_3102", dtype = "float32", shape = (16, 15, 10))#candidate|3102|(16, 15, 10)|var|float32
output = func_3101(var_3102)
func_3103 = relay.Function([var_3102], output)
mutated_mod['func_3103'] = func_3103
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3165 = relay.const([[[-8.405423,9.006179,-5.369700,-1.541374,6.991514,-9.490383,-1.845108,2.760444,-9.806939,-6.401828],[-4.120723,5.962766,-5.440868,-5.145916,6.159617,-1.848630,-3.224027,1.453721,3.084994,-8.840514],[8.347305,-6.467271,1.427583,-4.246319,2.410959,-3.708127,9.113957,1.056980,-7.257132,-0.774746],[2.494685,8.615522,-0.873069,-6.908821,-2.179244,7.842003,7.539472,2.514783,3.026430,4.067171],[-1.151098,-2.060566,0.940225,-5.974461,-7.678219,9.823275,3.262626,7.740490,-3.525613,8.862003],[-6.990353,-4.849161,1.675787,-8.565958,9.948733,8.580800,-7.872637,9.771496,6.117213,5.473494],[-0.596877,1.011610,0.195057,-3.145465,0.770642,-0.888864,-6.403469,9.362324,-6.923344,-8.819987],[7.662570,-9.607496,1.163164,0.813836,7.445086,-7.766590,-2.019801,3.715176,-2.534055,5.385294],[9.790425,-6.413887,-7.617197,5.856084,9.216292,-2.037385,2.355688,-4.111319,-3.971627,5.478857],[-7.173131,9.738264,-8.637584,-4.808567,-1.639935,-2.783471,0.275637,7.670766,-9.070510,8.263297],[-7.581858,5.831780,-6.412129,2.210966,4.758781,-6.517465,-4.403208,-4.200171,-3.967708,-2.304273],[-4.858004,-3.224580,1.198219,4.795928,9.493450,9.908911,-7.578450,9.505864,6.557546,1.633583],[-1.388431,-3.685765,-2.721738,4.855231,-2.767255,6.935498,-3.750184,-1.224963,-0.090652,9.679214],[-3.516706,0.939046,6.628516,1.560249,5.777621,-6.545630,-1.480185,0.574993,2.354575,5.847681]],[[-3.090451,5.335860,3.994449,-0.391370,7.911787,1.556919,-1.930147,7.646453,7.208658,-4.338633],[0.351966,-8.463492,-8.367430,-7.598308,-6.191317,4.937509,2.797373,1.425128,-9.597378,-7.123537],[-4.023659,-6.215329,-5.947768,-5.625694,-0.644294,8.220415,2.384288,-0.695075,9.595538,-1.999672],[-0.769456,-2.891994,-5.954019,-3.209147,7.393197,-8.440212,-4.045718,-9.253396,-5.146534,1.916899],[-0.140462,2.117479,-9.262509,4.308101,-3.354086,-1.742954,9.895339,-3.655820,-8.392112,-3.820056],[4.667527,9.608791,4.989125,9.296147,5.076197,4.351115,9.805393,2.839262,-4.394183,4.920024],[-4.172562,4.908095,-5.335628,5.983030,7.944300,-6.439703,8.639927,-0.562540,9.888928,-5.747812],[-4.047022,-8.421195,-6.803869,-7.786136,-9.884816,-9.670130,1.354668,-9.823752,7.986324,-8.683400],[-1.671050,-0.671769,4.399459,-9.324541,-2.248117,0.453278,-7.765486,-6.257101,8.779599,3.001628],[-6.150957,5.661673,-1.156022,2.380260,5.948927,-2.711872,-6.022380,3.807264,1.212877,-2.009056],[8.137014,1.291399,-7.632359,-9.535567,-2.364851,4.176226,7.234110,-0.137301,0.401110,-2.494098],[6.049798,-1.710403,9.425894,1.738323,7.621104,-1.170221,6.964385,8.852709,0.225100,-2.473064],[3.837240,-6.748252,-4.523799,-0.459962,-8.243669,-7.187976,9.649207,9.858647,3.152913,-0.008899],[-5.194005,4.116465,-9.472368,0.110530,-4.409978,5.587429,-1.832810,9.582981,-8.111077,-3.763634]],[[-8.066474,-3.831858,7.944873,-7.866076,7.739616,1.206261,3.690579,0.477456,0.870364,9.880030],[-3.180618,-0.748467,-4.831118,8.740259,7.331888,4.311171,7.024135,-4.073980,2.784248,9.902740],[6.291485,-7.489465,1.462358,-8.492329,7.712865,-9.358108,-9.186560,-2.317594,-3.892830,3.609845],[8.081866,0.562193,-2.439299,8.823161,-2.360820,-4.504690,3.550549,-2.989166,7.850105,-8.633782],[-7.861727,-3.967943,1.632896,7.431139,2.785458,8.142632,3.993675,4.322342,-7.417978,9.117566],[9.388957,-4.741846,7.567235,6.220803,0.870147,5.095711,-1.102366,-6.960205,-2.648103,-3.603469],[-8.282691,-9.392949,-9.902222,-6.980252,-5.128204,-8.806691,1.554421,-3.506815,8.702250,9.430878],[0.738638,3.985796,5.221927,3.474657,5.910148,9.891509,-0.960404,-7.516191,7.710003,0.457679],[-2.829463,9.476508,8.915091,-0.598275,9.418738,6.711861,-4.922950,-7.139114,3.237457,3.635378],[6.809756,-8.057290,-7.208579,2.555776,1.655199,1.951521,-2.858317,-1.016830,9.733731,-8.261928],[-3.544339,1.135200,-0.436664,-8.509834,-3.454542,5.901240,-1.687350,7.778376,-1.164291,-5.675974],[3.028453,6.225991,-5.201946,4.027880,0.207231,-1.006169,-2.664828,-6.357775,-5.835234,-3.225541],[7.024137,-9.534940,5.352016,-9.635402,-4.628675,-7.324948,6.796619,8.037014,3.171885,7.408566],[2.621442,-9.935621,7.503942,-4.747253,-3.412290,-2.238431,-5.256934,9.299203,-8.558743,6.418064]],[[9.453058,3.961482,-8.954477,-7.143655,1.728623,-3.747550,-6.209453,-7.552217,5.820439,6.489916],[0.049312,1.294381,-7.545123,-6.048153,7.785944,-2.714066,1.065331,4.062233,-4.602752,6.577203],[3.381221,-6.973447,-9.769262,4.343099,-7.014110,6.982541,2.160199,9.278247,-2.715403,-8.825525],[-6.049768,-2.256116,-9.434047,7.974766,9.700996,5.984201,-9.129998,-7.551213,-9.507518,-7.684730],[-7.251899,5.607809,5.858689,-4.218983,-2.266391,9.554749,6.298771,-8.822136,9.295709,-9.992084],[-7.375553,1.074909,-1.237415,9.197535,3.587314,9.991797,-0.922831,8.485960,3.303004,1.888997],[9.645033,-3.896192,-8.699913,-7.383846,-2.980491,-2.002026,-1.828027,9.493815,-1.651687,-8.063718],[9.194613,8.618046,-9.968125,3.466441,-9.191950,5.281511,3.781376,-0.562362,-0.317119,2.448421],[-3.743525,1.340834,0.299811,8.613591,9.313191,6.957568,2.323404,-2.139181,-7.496087,5.962985],[-6.279435,-0.944486,4.282993,4.064151,5.966520,-7.697853,7.503387,5.935705,7.158202,-1.182343],[-5.213059,2.594664,-9.264417,1.888019,2.656244,-0.124262,2.528057,9.395466,6.042777,-7.968035],[2.181349,-1.257883,-8.538189,3.286659,-7.733840,-3.658253,7.866073,-5.022465,-1.994756,-4.172334],[2.788078,3.780195,4.276999,4.267862,-7.573551,-6.661973,-4.553984,-7.169351,-2.321498,-6.228936],[1.783522,7.992350,-0.257657,-3.781374,0.908198,-0.938024,5.038267,0.714728,-7.880965,-9.640782]],[[-1.093859,-9.856131,7.352251,7.432925,-4.778734,7.326269,-1.134463,9.330839,-0.156325,0.678515],[-0.288892,-5.998996,-9.580940,4.419665,-8.652078,5.208991,-3.459542,-9.251068,-2.723773,5.436195],[9.761119,-2.274964,7.301030,8.253325,5.956069,0.293731,-6.156232,-5.379540,4.484440,-9.244784],[8.185070,-0.419360,4.016899,8.907235,-0.686243,9.834514,3.221291,7.426618,9.980695,4.339115],[-4.672703,-1.261384,-1.990036,2.558072,-0.321607,-3.924046,0.758613,2.421848,5.523457,-0.207665],[4.440513,6.466098,3.400556,0.231617,6.399960,0.900145,9.482750,3.637789,-1.005048,3.898192],[-4.493322,-2.271601,-6.353276,-7.202261,1.156898,0.994109,-2.991411,6.899826,-7.379688,-1.946614],[1.763115,8.823197,-3.792010,4.136620,0.038360,1.855877,-3.767440,7.235954,-2.811721,-2.761036],[-3.072811,-9.110020,-5.220777,-8.565655,9.887280,7.512097,-5.942511,1.668386,2.465234,-7.136912],[-6.037287,-8.667855,8.094189,3.723724,9.598223,2.735407,-0.177199,4.340110,-0.686251,7.505194],[-9.710354,-4.299185,3.815564,3.287481,-5.441084,5.754195,-1.409750,5.986098,7.806948,6.211657],[-9.656463,-0.262952,-3.946010,-4.611007,6.317538,-9.471145,-1.700041,-0.181492,2.919437,-7.043393],[5.441526,-7.945846,5.135421,-6.418898,-0.218305,9.505609,-8.530332,6.119293,5.355664,4.803242],[6.952024,1.759382,3.363941,5.023500,7.467770,-4.982383,1.630645,-8.513443,0.375812,3.060573]],[[-1.827002,-7.084391,-0.268265,-2.552400,5.125802,-3.265830,4.816543,-0.425294,-5.959367,1.018464],[1.984438,-8.485054,-9.885742,2.142294,4.223648,-3.993263,-4.526475,6.761825,-9.944301,-9.811937],[1.096040,4.631365,-0.854281,1.125508,4.185109,6.102295,3.464137,-0.186239,-1.326580,3.635385],[-1.297834,-9.062355,-2.638732,-2.738695,8.978772,9.593840,6.703468,9.841201,-8.774400,-3.937284],[-1.226358,9.116771,-6.673822,3.342116,7.079371,-9.241674,-7.702495,-4.269481,-3.406937,-5.451809],[-2.054895,3.816497,-3.116973,6.422860,9.337490,-7.678229,6.136608,8.583361,3.596175,2.172876],[0.548088,4.491650,-3.329962,2.657138,-7.248447,-0.470316,3.453608,-1.790821,-3.460283,-6.095352],[-6.684661,8.107600,-4.126703,0.866198,-5.175189,3.634145,-5.728583,3.629857,-5.295841,-0.118998],[-1.545081,7.228300,-7.969000,8.827607,-3.112645,-9.429731,5.601307,-5.694832,4.667181,9.651162],[-0.389985,2.793735,2.893001,2.189979,4.963995,-9.786401,-7.661397,4.327180,-1.381286,-1.674916],[6.982761,7.627981,-5.962164,-2.350885,1.258187,5.040297,-3.179821,-8.931312,-5.542988,-5.060227],[0.968148,1.261787,-8.634805,-6.783040,-7.762017,4.342635,-5.622625,-4.367592,3.165712,-0.904871],[-4.731281,-4.166911,-6.525271,9.493847,3.552821,1.322541,-5.734717,-6.372594,7.665544,7.298468],[8.481627,4.932987,9.146119,0.522300,7.251348,2.115989,8.181764,-8.294912,6.317258,-2.451809]],[[4.101317,4.111501,1.372954,0.160314,0.186637,-0.915086,1.298740,-9.240504,1.202128,5.011274],[3.816720,-4.705002,5.311810,-1.762979,-6.125493,8.029752,-4.532639,-0.059682,-5.056193,0.332834],[-3.121847,5.616976,1.931158,0.686067,7.108240,4.455069,1.632735,2.050116,0.948279,7.662927],[5.802975,6.093571,-3.861407,4.160988,2.948522,-6.702044,-5.095770,-4.439432,6.131249,-2.228896],[-3.800034,8.164340,5.919718,-8.320222,-0.474197,4.186360,-6.508948,-0.340242,-0.671776,-8.653002],[-1.863949,4.909245,-8.003393,-8.262843,6.916980,-7.290868,5.571463,-7.167789,-9.272500,4.702290],[-4.809841,-1.900239,5.565383,5.573237,-4.277963,-1.194649,-6.435539,3.218463,1.474258,-3.026878],[-2.750632,-0.566278,-9.005248,5.865910,-1.996710,-0.187402,7.513050,2.953980,5.140543,-0.398972],[-7.579218,-5.383130,-9.598327,1.427801,5.576398,5.649229,-8.043503,4.350006,-5.684235,-7.609972],[7.985446,8.732693,4.398463,-5.836766,-1.839941,4.918521,5.620084,5.367513,5.984657,6.314296],[8.675451,7.187147,-8.906740,-8.617529,4.206651,8.966187,4.462042,4.598239,-6.589795,4.820923],[-4.986592,1.079792,-2.845305,4.508589,-3.156069,0.223072,4.249281,7.397735,3.699738,-3.457813],[-6.389945,-4.252899,3.646082,8.838987,6.137025,-2.942203,7.058045,9.195019,-7.753349,5.726269],[7.388027,-9.761461,9.969866,-3.389743,-3.618992,8.371541,2.373651,-8.307806,4.369641,-6.129070]],[[8.139791,-0.838236,-5.958157,-6.077643,3.368056,4.858654,-6.793184,9.267257,-9.512638,5.471448],[3.787001,8.147620,-0.266136,9.054016,8.718989,-1.292399,-3.061896,0.663770,-2.435098,9.378362],[-0.588456,-1.875927,6.497064,-3.376850,2.891055,-3.455458,5.480768,1.647241,5.959349,8.153120],[-4.191372,6.314445,7.213872,-5.027157,7.844821,9.996966,-5.162007,-6.584520,0.275487,0.455660],[-2.012022,4.193547,-2.377396,2.442478,9.723716,-5.463237,-3.109032,-3.721501,8.438622,0.036419],[5.964623,-1.055994,-7.294278,2.010404,7.779832,4.883416,-3.013013,6.644884,5.424388,-1.465246],[-3.519679,4.321393,5.597221,-9.520849,-8.130964,0.826560,-8.801922,3.944954,-7.194414,-0.847861],[-2.208559,-5.454735,8.523869,8.446088,-5.662533,3.958069,-5.399722,-8.527785,1.563140,-1.999320],[-2.415522,6.946886,0.562880,-6.672860,2.056031,-3.182648,-3.463083,-5.676838,-6.359722,-0.995887],[3.817927,5.036363,-2.155514,1.586900,-9.309858,0.538434,9.583305,6.738383,-7.163840,1.054260],[4.346113,7.017529,-1.678777,3.205805,8.020779,5.198224,9.639506,-1.908971,-7.653319,2.118116],[-3.874537,-4.017179,2.124147,-0.759315,2.514353,8.264391,3.190293,-8.541861,-7.432521,3.735177],[1.133055,0.319763,5.355992,9.094134,5.174926,2.319221,4.329374,-3.332088,6.688496,-6.061174],[-4.395585,6.070866,-5.340936,4.571887,8.081176,-2.457427,0.120477,-0.176871,-2.293480,2.713823]],[[-4.160318,6.299971,-4.028712,2.748351,-2.516710,-8.481271,7.270956,2.048953,9.631540,1.834559],[4.594407,6.269170,5.387787,0.999677,3.994185,5.518136,3.927318,-0.348928,-4.815560,-9.639888],[6.506921,2.574485,-9.354650,2.689494,1.235836,7.012434,-1.968132,-0.709543,-1.654523,7.075452],[-3.199200,0.442622,7.761594,3.152223,9.858577,6.646062,-1.407270,-4.193865,5.091477,-6.701598],[-0.770892,3.893717,-2.034474,-6.920458,3.864503,5.362571,-4.091837,-5.440503,-9.146782,-0.644602],[6.458155,-3.948560,-6.376817,-6.847308,-8.357828,6.160024,-3.658110,-7.816647,-7.317469,1.136784],[-4.319025,7.660734,-2.896520,2.574650,3.390414,-4.650316,2.936245,-8.996606,3.044498,9.853749],[4.533582,-6.227199,7.824591,-3.658488,3.983399,5.315490,-1.360111,4.466676,-3.872496,3.293843],[-5.774939,-3.057325,2.044228,9.358738,-1.919324,-9.342874,3.110339,3.947488,4.092145,-9.602472],[-2.448211,9.375368,-4.585340,8.361259,0.806368,-7.267935,-1.327044,3.496428,1.735151,8.984103],[9.098246,1.606882,-6.341507,9.489338,9.048695,9.472602,6.333274,-8.142846,8.860583,5.850539],[2.237152,-2.750493,-2.020547,5.289632,-3.024241,5.034044,-0.016890,1.466913,-1.824619,1.878902],[-4.566659,2.515626,6.436050,-3.236796,3.087504,6.125138,7.824763,-5.491351,5.201928,-9.193088],[-8.812590,9.362026,-1.315451,-2.889648,3.563015,-0.508195,-4.902872,7.741685,-3.771155,-4.420480]],[[2.756726,-3.893988,9.289537,6.673694,-3.128271,-2.417661,6.687997,1.742455,-8.648328,-4.967702],[2.653833,-3.507104,-1.513550,1.866740,9.381856,-6.047862,9.182831,6.730171,-9.861619,1.005294],[-4.753186,1.270286,6.857651,-8.201735,-9.694143,8.312865,8.371570,4.644907,-6.442918,-4.635617],[-8.154871,-9.937684,6.598653,-5.750151,-1.767115,-4.260089,-1.484049,4.639448,8.398632,7.342176],[-8.768748,0.960842,-5.962371,-3.853771,-0.942322,-2.029330,2.174598,-3.438340,5.104274,-1.263593],[1.640480,-2.675699,6.208497,0.462296,1.597657,-8.607550,-0.667711,-1.192858,0.632875,1.979814],[1.221462,-1.593506,-3.933707,-3.146564,-9.715751,-9.126904,1.126587,7.041610,-5.106838,8.224634],[6.608506,7.451842,-1.317002,4.038906,-4.426135,8.137140,-8.920514,4.847319,-4.404754,-2.008755],[-5.714046,-6.218924,-3.055847,-2.498635,4.647689,-1.152366,-8.017795,-3.572853,1.446847,-4.028072],[-5.106818,-1.467437,6.074249,5.275383,8.545409,-3.733848,-9.634981,0.990547,-4.169344,1.146550],[-4.075239,6.572412,-3.567438,4.882250,2.823919,4.680182,1.149173,-8.054786,2.906786,-9.285107],[-3.026931,9.180018,-6.621061,3.336148,-3.298721,-3.408455,-9.872823,0.604855,7.969499,3.376123],[-1.338430,-1.411901,-7.202320,1.729084,-6.494082,-2.280918,-3.049160,-0.582821,-9.663167,-3.603251],[-8.644694,7.290513,-4.360036,7.949878,7.053668,-6.582990,-1.937254,4.180940,4.316767,-4.066948]],[[0.709939,-9.893709,-0.898831,-1.934816,-6.299026,-4.127288,4.923265,-2.740972,-5.868820,2.861084],[-0.857921,-0.524026,-0.326497,5.630323,-3.120413,3.263818,-6.040016,2.468814,-0.425317,9.028149],[-3.369841,-1.354250,-8.327621,2.632019,-2.868266,-7.874099,-3.569510,4.216566,3.192552,2.271869],[9.078742,7.538527,-4.446195,-0.592829,-7.093427,-1.152124,6.454859,-8.665268,5.491819,7.887209],[-0.996369,-2.533721,-3.407006,0.159187,-8.417310,0.854977,7.774855,4.093615,7.960022,1.601580],[1.557771,6.251110,-2.913463,-5.152424,5.823593,1.610262,-1.694352,1.143730,-7.355484,-7.611402],[1.405200,-7.469732,-2.344350,-6.251349,7.283806,9.912505,7.996280,-0.894203,-3.393209,2.940199],[-8.746989,0.386460,-8.196671,3.253739,3.359184,2.577440,0.008924,5.217148,0.353585,3.278574],[1.498837,-8.127793,9.551617,-0.960121,7.481092,-5.089751,2.981795,-7.433292,-3.722367,-6.649132],[0.040624,-9.651844,2.375181,-1.833307,3.797980,3.151850,-0.671359,-6.870244,-3.773886,0.400501],[-4.467802,6.501018,6.781377,-1.783759,8.083611,1.454624,-8.883365,5.679901,-8.357116,2.562128],[-6.814131,-3.859285,-3.825569,-4.280668,-9.945247,-2.303393,5.317001,-2.345002,-7.089684,-4.908909],[5.222663,-5.227192,4.019414,3.707916,-5.665940,-3.241739,3.004010,9.176818,5.936739,3.166547],[-6.438199,-1.205940,5.545997,-8.534109,8.037843,-5.430172,9.537580,9.403635,-9.057485,-8.558374]],[[2.858852,3.137679,3.079438,-2.719103,3.875510,-2.521540,1.081923,3.352112,9.657591,-7.803185],[4.190375,3.135363,-1.318631,3.478729,8.780258,4.684093,-9.729518,-7.573905,4.216291,-8.869360],[-1.341571,-7.701147,-1.670725,-9.455399,-2.061763,-0.617603,5.418509,-6.235251,-6.858615,3.192294],[0.507517,-8.836117,4.043889,9.624824,9.103971,6.130693,5.135468,-1.661339,-9.964650,8.908525],[6.336199,-2.345421,-2.600474,-6.978825,-4.573205,-6.779930,-0.802371,-8.869832,6.190785,1.223169],[2.393471,-9.961619,-2.285034,-9.306475,-0.971969,0.397873,-1.253708,-9.710552,-5.519579,6.363310],[-4.339709,-2.389472,6.175046,1.518135,3.323311,3.674007,7.536834,6.021034,-4.139382,-5.189922],[9.483883,7.039452,0.309564,-9.915012,-7.512690,5.971963,-0.148097,-7.121660,-2.066621,-9.687056],[-8.832223,-6.046982,-2.555319,2.406025,-5.516699,1.547799,-5.638090,2.717908,-9.130908,6.770992],[5.798573,-8.542887,6.180006,5.157274,-9.790042,7.730119,-7.920939,-0.048963,7.773423,0.371835],[-8.248521,6.473193,1.878899,-5.730486,2.612028,6.557657,-3.797243,-1.004111,-8.002621,7.242005],[0.136905,9.939674,3.967830,-9.364365,2.458025,-2.543908,-2.536315,-8.832642,-2.435858,-5.448610],[4.809170,-3.068676,7.379474,5.356364,6.204281,-3.498051,0.835016,-4.214949,9.026295,2.780789],[-8.527866,-2.805814,1.466264,9.795679,-5.176580,6.769264,8.996217,3.120534,-4.500050,-0.820732]],[[-7.252014,1.889043,-6.041910,-6.755846,-2.676100,-6.950733,1.040919,-2.430132,-6.541428,-4.850031],[0.765212,-3.289105,6.493912,4.346865,-6.459154,0.640981,-3.042045,-5.584083,-5.577362,-4.818565],[-7.921080,-8.804875,-4.753379,-0.218708,-4.242734,7.769324,6.690359,-9.516679,2.960641,-4.511500],[6.792633,-5.060006,-8.209035,-2.122559,9.311343,-4.103411,1.254573,8.823764,8.672333,-9.776845],[-8.473850,8.276622,4.150142,7.339428,4.914360,-6.105138,1.972386,-6.866893,9.605440,0.986534],[7.227912,-0.705338,-6.870576,-7.598751,-4.130699,2.407629,-1.143531,-0.603445,-7.559962,1.834056],[2.247802,-5.241349,-3.667182,4.973185,7.856675,9.479148,-6.544788,1.919380,9.945233,-7.949956],[2.698125,0.483804,-5.947109,7.951237,6.405321,-5.644992,8.203114,0.706142,4.596498,0.019802],[0.934950,1.456440,6.326735,-7.097451,9.048897,-8.000808,-7.275555,-6.301597,5.667996,8.655150],[-5.861807,7.243276,-6.209614,-1.772376,6.674437,-5.616338,-2.821638,-1.716873,4.598425,-0.776708],[7.631892,8.559312,-8.726454,-6.097475,1.378904,-0.582640,2.614611,2.334891,2.853561,9.322910],[-4.884224,5.590920,-7.162850,-7.676806,5.733486,-9.635289,4.512742,-5.926469,9.709482,3.109817],[4.648252,3.384742,5.489005,-5.262741,-0.401150,-0.648765,-1.439709,1.736329,5.903664,-4.615388],[-6.475773,-6.924647,-4.332324,-5.509391,4.156706,-5.052055,6.084114,-1.446237,7.609039,2.330380]],[[-5.122286,-3.993865,-6.186377,2.721198,7.661437,-2.477285,-4.084813,3.165545,2.636487,7.747984],[3.841339,6.209569,4.253023,8.593506,3.545242,-0.834679,-4.675163,-2.755277,-8.689061,0.422837],[7.589058,7.881633,-1.768087,-7.281972,-6.007216,-0.484631,7.834588,1.040993,7.990885,3.385871],[5.985429,8.640450,-0.655212,-6.717311,4.889002,-8.666994,3.434630,6.697917,-9.957198,-4.324519],[0.498768,-6.910795,-8.009657,0.649044,8.739105,-6.629471,-0.763705,-4.082143,1.775284,0.630678],[-6.950714,7.197601,1.911094,0.489069,-3.552851,9.473619,5.915509,6.935634,4.783987,0.543224],[3.316023,6.652322,9.629720,4.714524,8.119995,-7.593753,-8.327954,5.193847,-4.057517,-2.159916],[-3.765816,-1.858114,4.519226,-7.305161,-9.880749,9.708125,6.864047,5.444604,2.799217,-6.271100],[8.271245,-4.279079,-3.621793,9.618499,6.965708,-0.027412,1.079310,9.931036,-4.171638,2.832774],[8.513696,-5.383076,-8.253808,-1.787353,-9.253873,-5.828267,6.970506,-2.985762,-4.430353,-8.347768],[0.405374,-0.447947,8.919057,6.106877,0.375132,-3.212000,-6.316630,9.984888,-3.276751,-1.914759],[-5.163301,-4.933707,3.135732,-8.906402,-3.842318,3.267426,0.204296,1.191090,3.462672,-3.292983],[1.831566,-4.956811,3.316688,-3.376950,8.194939,7.084589,7.335786,2.353412,-1.082163,4.680731],[-1.255927,-3.155451,-4.481318,-8.021851,-5.996005,-1.578083,3.355731,9.985524,-9.800193,-7.122002]],[[-2.497808,-5.417565,5.574261,7.201132,3.569974,-4.413396,2.981784,3.875106,-4.931631,-3.418263],[-8.745627,8.992878,6.120828,-4.447995,-9.964610,8.055895,-9.672107,4.919513,7.604923,0.603350],[3.489611,-5.955736,-6.763819,-4.204851,4.575088,-9.939005,8.938713,8.648144,-5.238289,-9.156787],[-4.246799,-4.855952,5.573212,-8.687831,-6.550863,5.461251,1.935165,-9.743165,1.085101,8.368069],[4.655112,-0.587787,3.617352,0.084930,-4.895722,-5.440193,5.374905,9.511369,-0.690445,8.143587],[-7.029784,-3.736373,-6.170072,2.992640,0.095000,-2.549536,-8.960582,9.165171,-6.252863,-2.814496],[6.178959,1.935874,3.723951,0.836143,-3.423660,-0.138554,-9.327153,8.864094,5.487475,-6.094315],[3.903300,-4.276490,-0.905242,2.263860,-4.411358,5.840638,-4.828982,6.891057,9.146888,-7.208352],[1.360381,-1.443343,9.470564,3.186132,8.918224,-6.206637,-7.649170,-4.744562,-2.798530,-5.093019],[5.364481,-9.446501,-7.216648,3.079617,7.526405,-2.753681,-2.751307,-0.358091,-8.930321,1.532385],[5.272260,-8.077187,-2.744812,-3.494410,-8.228095,7.252615,-5.004211,2.108258,8.950399,4.263268],[-1.229604,-5.208800,-6.919270,3.991702,-5.859553,-5.732304,-5.476101,2.819536,-1.801372,3.058935],[-0.483763,-9.807658,2.480631,-3.590806,0.977379,7.687897,3.603332,-6.691823,-9.357868,-5.842569],[-8.865124,-3.915583,0.017671,4.811225,-7.376734,-4.583281,-1.931541,2.016373,-9.331439,-1.755826]]], dtype = "float32")#candidate|3165|(15, 14, 10)|const|float32
uop_3166 = relay.atanh(const_3165.astype('float32')) # shape=(15, 14, 10)
func_1679_call = mod.get_global_var('func_1679')
func_1682_call = mutated_mod.get_global_var('func_1682')
var_3173 = relay.var("var_3173", dtype = "float64", shape = (7, 117))#candidate|3173|(7, 117)|var|float64
call_3172 = func_1679_call(relay.reshape(var_3173.astype('float64'), [13, 7, 9]))
call_3174 = func_1679_call(relay.reshape(var_3173.astype('float64'), [13, 7, 9]))
func_398_call = mod.get_global_var('func_398')
func_400_call = mutated_mod.get_global_var('func_400')
const_3183 = relay.const([-8.118146,-5.988640,1.278808,7.399670,-1.871161,9.603422,-4.181045,-3.102441,7.189718,7.801046,-7.358819,-5.597465,-3.178396,8.636409,-6.608398,7.123531,4.399677,7.403061,3.325976,-3.799441,3.139973,4.599919,-5.789605,-2.176177,-1.674477,-2.642079,-1.824791,4.340424,-3.968385,-1.371456,5.531994,-7.172608,3.661703,1.754942,-3.964003,-5.143668,6.749292,8.617539,6.388247,1.222608,4.761056,0.904466,-3.256333,-1.820602,1.746989,-9.912676,-2.440243,8.835458,-7.180491,0.252169,-9.166830,-1.847483,8.421863,1.891619,5.051876,-0.570139,-9.804541,3.077482,-7.670581,-7.647743,-0.365464,-5.947467,9.960209,4.114284,-4.867305], dtype = "float32")#candidate|3183|(65,)|const|float32
call_3182 = func_398_call(relay.reshape(const_3183.astype('float32'), [5, 1, 13]))
call_3184 = func_398_call(relay.reshape(const_3183.astype('float32'), [5, 1, 13]))
func_490_call = mod.get_global_var('func_490')
func_495_call = mutated_mod.get_global_var('func_495')
const_3188 = relay.const([[7,1,-9,-5,2,-8,6,-8,-3,-2,2,-10,2,-9],[3,3,-3,8,-7,3,-2,4,4,-7,-10,-3,-2,9],[6,-7,7,-3,-4,10,-3,-1,-3,2,-8,4,8,10],[-2,-6,-5,1,2,-2,-4,-8,-5,-1,7,-8,2,4],[-1,4,1,4,-4,10,9,-4,2,10,-2,-10,4,-3],[1,-8,2,-8,3,-3,-6,-3,-2,-6,9,-6,4,-10],[-5,7,-2,10,9,9,9,7,2,8,4,-10,9,4],[1,4,-6,-4,7,2,-4,-6,-10,10,-4,8,4,3],[-4,-9,-10,1,-5,6,-10,8,1,1,-10,5,-9,3],[1,-7,2,7,2,-2,4,-10,10,2,-3,-3,2,-8],[3,4,-7,6,-10,3,-3,-10,-7,-3,8,8,-8,8]], dtype = "uint32")#candidate|3188|(11, 14)|const|uint32
var_3189 = relay.var("var_3189", dtype = "uint32", shape = (70,))#candidate|3189|(70,)|var|uint32
call_3187 = relay.TupleGetItem(func_490_call(relay.reshape(const_3188.astype('uint32'), [7, 11, 2]), relay.reshape(const_3188.astype('uint32'), [7, 11, 2]), relay.reshape(var_3189.astype('uint32'), [14, 5]), ), 2)
call_3190 = relay.TupleGetItem(func_495_call(relay.reshape(const_3188.astype('uint32'), [7, 11, 2]), relay.reshape(const_3188.astype('uint32'), [7, 11, 2]), relay.reshape(var_3189.astype('uint32'), [14, 5]), ), 2)
output = relay.Tuple([uop_3166,call_3172,var_3173,call_3182,const_3183,call_3187,const_3188,var_3189,])
output2 = relay.Tuple([uop_3166,call_3174,var_3173,call_3184,const_3183,call_3190,const_3188,var_3189,])
func_3193 = relay.Function([var_3173,var_3189,], output)
mod['func_3193'] = func_3193
mod = relay.transform.InferType()(mod)
var_3194 = relay.var("var_3194", dtype = "float64", shape = (7, 117))#candidate|3194|(7, 117)|var|float64
var_3195 = relay.var("var_3195", dtype = "uint32", shape = (70,))#candidate|3195|(70,)|var|uint32
output = func_3193(var_3194,var_3195,)
func_3196 = relay.Function([var_3194,var_3195,], output)
mutated_mod['func_3196'] = func_3196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3207 = relay.var("var_3207", dtype = "float64", shape = (6, 12, 14))#candidate|3207|(6, 12, 14)|var|float64
var_3208 = relay.var("var_3208", dtype = "float64", shape = (6, 12, 14))#candidate|3208|(6, 12, 14)|var|float64
bop_3209 = relay.mod(var_3207.astype('float64'), relay.reshape(var_3208.astype('float64'), relay.shape_of(var_3207))) # shape=(6, 12, 14)
output = bop_3209
output2 = bop_3209
func_3212 = relay.Function([var_3207,var_3208,], output)
mod['func_3212'] = func_3212
mod = relay.transform.InferType()(mod)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3212_call = mutated_mod.get_global_var('func_3212')
var_3214 = relay.var("var_3214", dtype = "float64", shape = (6, 12, 14))#candidate|3214|(6, 12, 14)|var|float64
var_3215 = relay.var("var_3215", dtype = "float64", shape = (6, 12, 14))#candidate|3215|(6, 12, 14)|var|float64
call_3213 = func_3212_call(var_3214,var_3215,)
output = call_3213
func_3216 = relay.Function([var_3214,var_3215,], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3218 = relay.const([[[8.985448,3.574660,-6.267222,-1.094746,3.788054,1.705990,6.439973,-5.652326,-7.596313,2.239231],[-1.776783,-7.082264,0.200219,-4.763406,9.254214,-6.440715,0.772144,1.378688,8.983893,-1.168600],[-1.006274,9.557329,-2.981037,-3.315171,-7.278479,-7.647769,5.316666,-4.350893,6.879167,5.021594],[0.560921,8.219674,5.887997,-2.159474,-1.181292,3.701890,-8.010798,-4.191595,-2.099665,2.185703]],[[-1.391770,5.287319,-7.986636,8.979200,-3.582021,0.563603,-2.144249,-9.414558,1.599612,-9.443168],[9.561132,-0.723877,0.674898,-7.838009,6.988165,-0.230778,1.750942,-9.498865,-1.573244,3.999025],[-2.829220,-6.643961,8.885559,-4.291298,2.317098,5.958472,8.750036,-5.737183,-6.179623,-8.975199],[9.279358,-8.700355,0.903977,-9.264145,-2.287738,-8.911278,-5.249194,3.225935,-1.398011,-0.776913]],[[4.503945,-0.966579,7.648907,8.235890,-9.305364,-7.066523,-5.292058,-8.598385,2.825537,6.425139],[7.483608,-9.833201,-6.535702,3.120095,8.401500,-4.175176,3.646505,5.968389,-1.028082,7.010788],[7.830816,-1.216080,-6.781176,4.285943,4.048099,6.017252,-9.107175,4.861946,1.902524,4.867195],[-5.696046,9.625696,6.753697,7.114247,3.400795,-3.194963,-0.730645,5.497927,7.622683,-8.803757]],[[2.982911,8.272732,0.836356,8.688244,-9.486815,9.922563,-8.206728,-2.460835,-2.449211,9.392376],[-7.646641,-7.454244,-6.342269,9.952848,-1.729497,3.784269,8.629815,5.107150,9.880246,-2.431262],[-3.240527,-4.841592,-6.465485,-7.599527,-7.949219,1.640802,6.931710,7.037365,4.654857,1.803183],[-3.467661,7.178371,-1.615863,-3.706879,9.585299,7.192943,5.941118,1.609256,-8.009514,-7.167290]],[[9.880215,-7.395914,1.667584,2.845604,-4.647572,-3.909000,7.635182,7.874637,-4.460379,4.612313],[-5.969723,7.235591,-2.645948,6.203004,-2.616481,-6.745287,0.136882,-4.305955,-8.549507,0.085581],[1.540751,-9.721005,-0.866699,-3.515393,3.846716,-5.549020,-2.776788,4.993512,-8.884698,0.249176],[-5.017950,6.756016,-9.905603,-4.845631,6.662666,-9.936759,7.375668,9.909049,-7.290744,2.563139]],[[2.865749,8.009533,8.751608,-5.683907,2.820104,4.522635,2.300826,-4.389292,-1.185923,1.169010],[-0.622238,-1.798847,-7.106866,6.089700,4.412373,-9.536255,5.158817,-6.217812,7.673365,-9.427757],[4.181327,-4.232539,-3.879535,-4.138510,-7.856637,-7.099580,6.111188,-6.460834,-0.771793,-1.059767],[-8.256741,-8.618453,-4.012959,3.116094,-0.231628,7.091858,5.363016,-7.926655,-2.748836,-1.586589]],[[-3.714677,8.046250,-6.703910,3.850197,-5.053502,-2.653620,5.612843,-6.414735,-3.009583,8.966255],[4.868451,-1.045435,-4.133211,6.331449,9.625914,3.214750,-2.483882,-2.314826,4.636991,-9.073320],[7.042614,-6.009564,8.873860,3.969396,-5.448355,-8.382275,3.925360,-2.596571,-9.907724,-5.028376],[-0.717256,4.703555,-0.931133,5.282557,-6.659537,5.886540,-1.757741,-3.105247,-3.776046,3.386055]],[[-1.572801,1.732364,-1.708954,2.963826,6.727972,4.518966,-6.380120,-9.530156,-6.588545,-5.124283],[1.194237,-1.465567,8.645998,-8.938011,-7.882346,3.226188,6.782200,-5.833405,-0.731845,-7.234824],[8.766109,0.461541,9.588876,2.802540,6.957431,-5.397672,7.960668,9.046057,3.250392,9.748286],[9.008787,-2.731040,9.713981,4.419199,-6.992425,2.380395,1.957080,5.159801,-2.985802,-7.691283]],[[-2.393971,5.976772,4.656012,6.416899,-5.457616,2.775890,4.523098,-6.054136,-2.789658,-8.538711],[-1.672662,5.660484,0.943330,-1.574506,7.575063,7.709615,8.669725,2.734950,8.118328,1.553267],[2.566813,-6.261687,-0.818481,9.507957,-7.486276,0.754973,9.153845,-9.842443,-0.992740,5.996447],[5.170046,4.855295,4.677943,1.294030,4.361200,-9.754228,7.576620,6.337216,6.313526,0.265941]],[[6.109991,-7.076290,3.685236,6.377965,6.967367,5.623038,2.039042,7.474038,6.387424,-4.547714],[0.247672,-2.722628,2.940822,-4.358160,-2.026395,-6.879913,5.580865,1.859009,0.707196,-0.695792],[3.956151,5.094163,-0.994162,6.018137,5.780715,9.125218,-6.300572,-4.078873,5.099542,-6.518869],[-0.633023,2.319650,-6.373707,-7.152545,0.194500,-3.163738,-2.301813,-9.046655,5.904505,-9.844427]],[[5.120438,8.480607,1.304597,1.708646,3.656520,7.685389,-9.724300,9.691081,8.298596,-7.143537],[-7.835272,7.445876,-3.575581,2.137814,0.010536,-6.414201,4.327311,-7.411327,5.318653,-9.826898],[4.884906,-7.831183,-0.535889,-3.167470,9.557510,1.823284,-8.597188,-9.516126,-2.938754,-2.138596],[-8.664190,-9.922847,-1.836237,-1.943071,-5.948120,-8.594904,-4.615263,4.480950,-5.858115,-1.177353]]], dtype = "float64")#candidate|3218|(11, 4, 10)|const|float64
uop_3219 = relay.sqrt(const_3218.astype('float64')) # shape=(11, 4, 10)
bop_3240 = relay.add(const_3218.astype('int32'), relay.reshape(uop_3219.astype('int32'), relay.shape_of(const_3218))) # shape=(11, 4, 10)
output = relay.Tuple([bop_3240,])
output2 = relay.Tuple([bop_3240,])
func_3244 = relay.Function([], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
output = func_3244()
func_3245 = relay.Function([], output)
mutated_mod['func_3245'] = func_3245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_3253 = relay.TupleGetItem(func_3244_call(), 0)
call_3254 = relay.TupleGetItem(func_3245_call(), 0)
uop_3255 = relay.log2(call_3253.astype('float32')) # shape=(11, 4, 10)
uop_3257 = relay.log2(call_3254.astype('float32')) # shape=(11, 4, 10)
output = relay.Tuple([uop_3255,])
output2 = relay.Tuple([uop_3257,])
func_3299 = relay.Function([], output)
mod['func_3299'] = func_3299
mod = relay.transform.InferType()(mod)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mutated_mod.get_global_var('func_3299')
call_3300 = func_3299_call()
output = call_3300
func_3301 = relay.Function([], output)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_3371 = relay.TupleGetItem(func_3244_call(), 0)
call_3372 = relay.TupleGetItem(func_3245_call(), 0)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_3387 = relay.TupleGetItem(func_3244_call(), 0)
call_3388 = relay.TupleGetItem(func_3245_call(), 0)
output = relay.Tuple([call_3371,call_3387,])
output2 = relay.Tuple([call_3372,call_3388,])
func_3394 = relay.Function([], output)
mod['func_3394'] = func_3394
mod = relay.transform.InferType()(mod)
output = func_3394()
func_3395 = relay.Function([], output)
mutated_mod['func_3395'] = func_3395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3408 = relay.TupleGetItem(func_3299_call(), 0)
call_3409 = relay.TupleGetItem(func_3301_call(), 0)
func_891_call = mod.get_global_var('func_891')
func_895_call = mutated_mod.get_global_var('func_895')
const_3418 = relay.const([-2,-2,2,5,7,4,-10,-1], dtype = "uint16")#candidate|3418|(8,)|const|uint16
var_3419 = relay.var("var_3419", dtype = "float64", shape = (256,))#candidate|3419|(256,)|var|float64
call_3417 = relay.TupleGetItem(func_891_call(relay.reshape(const_3418.astype('uint16'), [8,]), relay.reshape(var_3419.astype('float64'), [256,]), ), 2)
call_3420 = relay.TupleGetItem(func_895_call(relay.reshape(const_3418.astype('uint16'), [8,]), relay.reshape(var_3419.astype('float64'), [256,]), ), 2)
output = relay.Tuple([call_3408,call_3417,const_3418,var_3419,])
output2 = relay.Tuple([call_3409,call_3420,const_3418,var_3419,])
func_3430 = relay.Function([var_3419,], output)
mod['func_3430'] = func_3430
mod = relay.transform.InferType()(mod)
var_3431 = relay.var("var_3431", dtype = "float64", shape = (256,))#candidate|3431|(256,)|var|float64
output = func_3430(var_3431)
func_3432 = relay.Function([var_3431], output)
mutated_mod['func_3432'] = func_3432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3461 = relay.TupleGetItem(func_3299_call(), 0)
call_3462 = relay.TupleGetItem(func_3301_call(), 0)
func_3101_call = mod.get_global_var('func_3101')
func_3103_call = mutated_mod.get_global_var('func_3103')
var_3478 = relay.var("var_3478", dtype = "float32", shape = (2400,))#candidate|3478|(2400,)|var|float32
call_3477 = relay.TupleGetItem(func_3101_call(relay.reshape(var_3478.astype('float32'), [16, 15, 10])), 0)
call_3479 = relay.TupleGetItem(func_3103_call(relay.reshape(var_3478.astype('float32'), [16, 15, 10])), 0)
var_3480 = relay.var("var_3480", dtype = "float32", shape = (11, 4, 10))#candidate|3480|(11, 4, 10)|var|float32
bop_3481 = relay.less_equal(call_3461.astype('bool'), relay.reshape(var_3480.astype('bool'), relay.shape_of(call_3461))) # shape=(11, 4, 10)
bop_3484 = relay.less_equal(call_3462.astype('bool'), relay.reshape(var_3480.astype('bool'), relay.shape_of(call_3462))) # shape=(11, 4, 10)
output = relay.Tuple([call_3477,var_3478,bop_3481,])
output2 = relay.Tuple([call_3479,var_3478,bop_3484,])
func_3486 = relay.Function([var_3478,var_3480,], output)
mod['func_3486'] = func_3486
mod = relay.transform.InferType()(mod)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3486_call = mutated_mod.get_global_var('func_3486')
var_3488 = relay.var("var_3488", dtype = "float32", shape = (2400,))#candidate|3488|(2400,)|var|float32
var_3489 = relay.var("var_3489", dtype = "float32", shape = (11, 4, 10))#candidate|3489|(11, 4, 10)|var|float32
call_3487 = func_3486_call(var_3488,var_3489,)
output = call_3487
func_3490 = relay.Function([var_3488,var_3489,], output)
mutated_mod['func_3490'] = func_3490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3516 = relay.var("var_3516", dtype = "float32", shape = (3, 13, 11))#candidate|3516|(3, 13, 11)|var|float32
var_3517 = relay.var("var_3517", dtype = "float32", shape = (3, 13, 11))#candidate|3517|(3, 13, 11)|var|float32
bop_3518 = relay.power(var_3516.astype('float32'), relay.reshape(var_3517.astype('float32'), relay.shape_of(var_3516))) # shape=(3, 13, 11)
var_3526 = relay.var("var_3526", dtype = "float32", shape = (3, 13, 11))#candidate|3526|(3, 13, 11)|var|float32
bop_3527 = relay.greater(bop_3518.astype('bool'), relay.reshape(var_3526.astype('bool'), relay.shape_of(bop_3518))) # shape=(3, 13, 11)
func_3486_call = mod.get_global_var('func_3486')
func_3490_call = mutated_mod.get_global_var('func_3490')
const_3532 = relay.const([-0.372009,4.161944,-3.680551,-8.772331,-4.769401,-1.072232,9.936941,-1.620899,-7.694322,-8.510585,-4.674062,-3.806981,-2.635186,5.623492,2.603644,1.071952,-7.324234,2.876891,-1.581686,7.686413,1.864560,-4.669122,3.548363,-3.050358,8.938241,-5.976574,1.147752,-8.883852,-5.013140,3.884455,-2.848547,1.044346,6.007242,5.350449,-9.770057,6.330392,-3.095869,-8.536726,-2.360219,-0.751104,-0.265876,6.306589,3.578245,1.013952,5.257925,5.304753,7.462543,-7.304240,9.282450,4.086336,1.965288,7.739308,-6.606617,5.220246,-1.195371,1.737945,-4.300559,-4.132820,-7.895238,5.137322,-1.088936,8.513935,7.351778,5.915116,-3.603275,2.585806,7.780480,7.902867,-9.001966,-7.367485,-5.872675,1.633104,-3.349880,-9.552167,-7.207344,-8.059088,8.469878,-1.980213,-2.093756,4.823058,-6.047140,-6.537055,-1.909843,-4.925891,-5.779176,0.271216,-1.798510,7.574068,9.244093,4.434346,-7.071738,-8.622633,9.823007,-9.558010,-9.646721,-8.805298,-2.771427,-3.960461,8.947349,-3.452451,2.803964,-8.226275,-3.502442,-5.266987,-0.874189,0.706399,-5.815573,-3.191242,5.055038,3.825863,-3.499719,-2.522327,-8.153187,3.957988,3.267463,9.459022,-6.234806,-0.265948,7.456640,-0.586159,-6.486668,-6.673235,5.761415,3.182759,-4.468140,0.525044,-5.349084,4.423226,-5.112051,-5.256115,-2.707181,7.818196,-7.286172,-1.107216,-3.517968,2.626366,-9.563247,9.742282,-3.989156,-9.289961,4.259924,7.015414,-7.972790,-8.726043,-6.094604,-7.025117,-2.423666,4.684001,-3.451948,1.573879,-9.781115,0.655626,-2.538187,-3.515548,4.215009,3.419927,-0.691049,7.694457,-5.193267,-2.295225,-4.166178,4.666805,-3.099427,2.728968,-3.534310,9.080951,8.457719,-8.686931,-6.808821,-8.065905,6.880886,-5.997034,3.325381,-6.496332,-8.824799,-7.129948,-5.425709,1.812806,-8.779264,8.145565,5.188071,6.098787,8.785331,0.014311,-2.334636,-4.930759,0.306397,-0.049728,-6.469634,-3.146631,5.057412,1.008999,2.483334,-5.286923,-3.196907,-9.836804,-9.159207,-8.432882,3.538015,5.043720,-9.959964,-0.801975,7.165529,-3.495667,8.525694,-6.326935,5.697310,-4.988289,-3.638226,-7.924020,-5.571432,6.365381,-2.134231,6.672305,3.507460,1.704862,-3.937966,0.761373,-3.163271,3.374725,9.290803,-9.690101,9.570105,6.872557,7.782697,-0.436487,-5.750684,9.974329,-7.707049,7.146750,1.216146,9.069450,-2.314567,6.145809,-3.821017,-2.891923,-2.908629,-1.493244,-2.577432,-4.625226,8.299336,2.156136,-9.683161,-8.057955,0.659310,-5.061998,-0.809686,-8.095888,-4.830027,-3.185896,-4.548050,-5.558752,0.154999,2.864718,-6.428920,-5.906971,-6.995117,-8.298367,-3.624217,1.008533,-7.662027,-7.922405,1.333729,8.807486,8.984477,-4.622090,-8.794486,-5.846760,6.348479,5.084943,5.795095,6.414552,-8.967165,-6.336091,-3.599134,-0.643874,6.716601,-1.922344,-7.672106,1.787724,5.149951,0.496104,-8.859779,3.914668,8.098158,-5.661309,-1.302367,5.759394,7.556861,8.347030,2.494491,-4.773627,5.300517,-1.915852,-0.263287,7.017245,3.091823,4.829218,-6.676819,-3.991001,-5.254486,4.141497,-4.570693,0.235409,-0.798173,-9.042568,-9.115732,2.749358,7.805116,4.763254,2.483165,0.591768,-5.697395,-5.686277,0.809329,-6.949363,7.870794,4.078344,-3.985050,4.569411,3.384502,0.044412,-3.975071,3.896807,-0.756313,5.327359,9.858711,-2.530777,-4.654709,1.612430,3.157532,3.845150,5.356024,7.964457,9.481968,-9.961679,-5.724622,-4.344033,-5.632590,-8.201189,9.213035,-6.981967,-3.766829,-8.170515,-4.621307,-1.507354,6.484062,-8.293055,-7.289038,1.056020,6.440288,9.292698,0.982329,-0.352273,4.729800,-4.136949,4.284838,-4.440798,5.884909,-6.284175,-4.581608,-2.124072,-7.866322,-2.350399,-7.553800,-4.506861,2.805945,9.314316,3.062073,1.924306,-4.518238,0.246882,-8.527121,0.480003,-1.322969,4.529581,-6.497590,8.902664,7.650613,-8.330481,1.369783,1.287839,-4.463839,5.125325,-0.483280,-6.753704,-6.051794,-6.743063,7.705628,-1.987984,8.218599,-2.135258,4.066974,-5.301624,7.326792,-8.314765,4.332664,-3.799345,-5.724088,-8.684383,-3.755255,2.722764,-0.148526,9.393973,2.715385,-5.517513,-0.112557,3.779464,-8.974388,-9.784421,-5.952494,-6.396955,-1.045547,2.241685,-8.032904,6.264382,-1.042520,5.160461,2.014175,4.101390,-1.681807,1.435280,-3.357403,8.852189,0.823395,6.952037,-2.074951,5.078920,-3.831600,-2.999274,-9.281979,9.925185,-9.737506,-8.758599,3.072115,6.560134,9.751493,-9.709621,3.776996,-2.593081,3.714481,-1.728021,6.792907,-4.839357,-4.077656,-7.745777,8.490995,4.585855,-9.667742,0.717689,8.403233,4.852784,9.108457,4.017371,9.845040,3.093305,8.412773,2.914748,-3.787271,-7.062653,-5.313240,7.019683,-8.058296,6.433718,-2.514210,-0.028346,5.295777,-4.499785,-2.385951,8.704582,3.139563,-6.542475,-0.900724,6.388716,-4.051441,2.422945,-9.496727,-3.762972,-7.272736,5.319016,-5.948174,-2.517504,-6.653070,-8.592001,-0.501315,-5.959568,0.650317,-0.464604,-4.793932,-6.970105,9.545059,8.573947,-4.371840,-7.026207,-8.265197,-7.623678,-9.200823,-9.142660,2.737657,0.014885,4.413645,-4.558933,-7.037138,-0.770486,-4.369721,0.909430,7.205591,-0.947790,-6.046169,-6.881951,-3.102588,5.019298,1.644174,2.479052,7.801857,2.808022,8.603136,8.363931,-6.936299,-7.222513,-7.387064,7.860989,7.586517,5.432430,-3.379525,-4.544156,-5.138587,9.666681,9.220953,7.395130,8.295022,9.398308,-8.176412,8.861534,8.061214,4.421394,1.872771,1.729425,-4.431167,7.968340,-1.267908,-1.422462,3.376566,-7.691522,-3.078991,6.023795,-9.799487,-8.280742,6.883371,-1.151253,-5.172552,-3.664278,-2.400909,-7.685789,8.492747,4.478086,2.716845,-8.251265,-6.445677,9.177343,-4.903815,-4.314655,-4.717737,1.374447,-8.675337,-5.176700,-6.136646,1.946736,-9.228750,9.709567,2.072718,0.400883,-3.241840,4.746967,-3.264855,-4.717123,-8.258666,-4.643992,9.165613,-5.196194,5.877810,-0.477145,-8.196669,-9.132393,1.008799,-6.363948,-6.764797,6.430882,5.774698,3.429709,-0.771208,9.608556,5.487182,1.335160,8.833352,-5.155326,-2.027335,-9.196962,-9.391522,0.262477,4.388485,-2.911885,7.794313,-4.114428,3.094354,-7.595335,5.412282,-4.189952,5.689541,-5.154593,1.753604,9.440394,1.616231,-8.048498,-7.036334,-3.767341,6.796375,-9.127493,-9.593033,-8.425656,-3.170341,6.017599,-6.283710,-7.091668,7.102029,-1.706041,-0.059820,-5.579764,-4.545663,3.348323,-2.712049,-1.212771,5.034280,-0.613814,6.516300,8.345870,-4.747371,-8.187963,-5.323543,-0.291686,3.929839,-7.583916,1.697336,3.495147,-6.718042,-2.415938,-9.520610,-5.228930,4.498871,-8.966524,6.129778,6.238742,-3.956999,-6.973053,-3.715390,4.293531,-1.806795,1.729784,-0.648811,7.134203,-3.221547,-9.259559,-0.711881,-1.754068,7.891523,-2.085546,-4.473090,-3.250265,0.648706,3.365117,-5.041118,4.695057,-7.961687,-1.889108,-4.907551,6.954074,2.949565,5.887880,8.128986,-4.128831,-8.413702,9.870967,-0.100838,-8.172483,0.303481,0.013320,-8.092921,-2.363402,-3.374012,3.999774,-1.410643,6.995281,-7.792564,6.862273,-5.487609,6.526445,-5.101973,8.700586,-7.058446,3.326198,8.993267,1.489655,5.647621,-3.148106,-7.773136,-7.865342,6.582743,5.371241,4.455279,2.021539,-2.685987,-1.575505,3.201651,2.982842,8.831645,6.526337,2.147374,-3.231671,-4.451193,-2.816192,4.128185,5.662275,-4.643626,-5.660219,1.372953,3.906411,-8.813445,9.741018,1.535670,-7.161775,9.575464,8.843784,-0.454117,8.618396,0.577973,-1.559278,5.717386,3.050690,-1.953595,9.015086,9.569190,1.641221,-9.620610,9.673175,5.713869,5.042069,-3.076237,9.644171,-7.578472,8.828997,2.848810,-8.764700,-7.811186,-8.092728,-8.413565,-4.345950,7.860875,7.704129,-2.693142,9.628134,-3.735931,-5.819049,-7.363879,-0.445495,0.036347,-1.123470,0.695206,9.459342,-4.590784,-2.404269,6.469647,-1.888946,-0.328958,-2.515983,-2.561558,-0.646513,-3.314992,1.746951,-5.189591,-2.704578,-7.075775,-3.857507,2.874810,4.221249,-7.533115,-9.612354,-2.651969,-4.354969,6.440662,-3.365460,-0.293539,-3.684610,8.771591,9.583483,6.711099,2.246976,-2.257447,6.256912,2.431654,5.280012,-5.237480,1.984105,-0.012303,2.700230,2.792885,-2.814091,-0.164347,-1.300415,-1.259997,-2.963534,3.755112,4.467516,0.892265,-8.003646,5.828896,-0.867151,0.601349,6.091581,8.499811,2.768648,-2.786462,2.581533,3.657042,-7.622682,9.184999,4.924381,7.042456,6.460010,-2.671909,5.621801,6.090900,3.949027,-8.074984,4.804168,-0.564206,-8.146519,-8.608591,7.006778,9.140270,6.086967,-9.321266,-1.394282,-7.727817,8.084138,2.682934,-4.578761,-5.650492,1.233899,-4.967197,7.957021,-3.372017,6.094537,6.711875,-6.052070,7.403689,5.862179,-8.049038,1.565680,7.445022,0.859137,0.228173,-7.568565,-9.139846,-5.671824,-2.845891,8.586944,4.601300,6.523075,9.713897,-2.365816,4.152714,4.605620,1.544179,-2.922815,8.290090,0.228460,-1.736905,-6.758123,4.976672,1.351281,-1.808810,-7.980994,-4.833020,-7.497585,6.288756,-7.897675,7.380087,5.813624,-2.972938,1.607085,7.024223,-9.739980,-8.946525,-8.558074,-0.058801,0.439650,-5.477552,-0.915679,6.513203,6.764694,1.699662,-1.391424,1.819302,8.816823,5.248786,9.690792,5.888312,-8.509031,-0.689346,-2.741166,7.007068,-1.085568,5.983199,-3.095052,7.954241,-9.776811,7.480750,5.776505,-0.222578,-7.670631,-3.382253,-0.462315,9.010660,2.809275,-4.386680,-0.601563,-1.327298,5.519043,-7.302620,-2.831891,1.529979,-2.623869,0.183357,1.417168,1.441077,-9.083624,7.572638,5.415689,1.580419,0.392385,-2.793533,6.014321,-6.029193,8.871707,-0.959777,-5.566568,-8.391008,-8.849353,8.216386,0.620864,0.028885,-6.742189,-3.756489,-8.664531,-1.373903,2.724209,1.703406,4.506730,-2.780835,-4.482308,5.122214,-4.699733,-7.947728,7.452931,1.380454,-4.651147,-8.922711,4.649646,-8.616952,1.184505,9.336973,-9.044930,3.303572,-1.018045,-2.657793,1.272723,-3.807247,0.093387,-8.821547,-2.101917,7.185796,2.986847,1.518833,-7.978769,-4.123409,-1.722684,6.429322,-3.543966,7.024333,-1.359498,-6.611072,9.523542,6.574195,7.478466,7.097499,0.737845,-2.533148,4.508205,-3.624963,6.404044,7.743224,-2.460057,-2.438163,4.286426,-0.718137,1.968559,5.219909,1.386003,2.031207,8.928404,-6.446370,4.735360,6.395189,-3.796381,5.672976,-9.449430,6.418867,6.202986,5.889917,5.885166,-7.641560,-8.845346,2.024932,-5.471844,-8.110702,-1.583228,0.457089,9.697921,-8.779183,-3.653654,-2.303614,-8.432120,5.403974,8.762768,-0.430431,-0.896492,-6.433068,1.636346,-5.965387,-0.253453,6.894473,0.749647,8.591533,4.648047,-0.474231,4.208057,-9.989630,3.086891,4.871931,-8.058111,1.734239,-5.599636,-3.290353,-4.315395,9.955876,5.574952,7.343827,8.260866,-1.925319,-9.376516,-1.767021,6.204319,4.430696,8.414056,4.032097,-1.843066,-8.002050,-0.112528,-1.460254,-1.685943,-6.924573,-1.530901,-0.072260,-9.314116,-6.270544,-3.539547,-0.523512,6.464719,-2.437188,-1.304405,2.401110,-6.337298,9.424930,-1.870090,8.777219,8.870954,-2.067400,9.572582,-9.932245,3.070473,-1.896183,9.908294,0.205720,-5.640838,7.973142,-1.012443,-5.543973,7.829367,2.829493,7.643321,-6.692172,-7.935166,6.231984,1.721379,2.940245,-3.071241,-2.341629,-7.209876,7.995926,0.781031,2.038334,5.250625,6.480658,1.616369,-0.330838,5.542082,-0.060282,0.402104,-8.475195,8.971831,-3.964073,7.808750,4.840764,-7.617091,0.613308,-1.031622,0.765741,-8.820691,-9.685989,-9.352478,-2.803589,9.817320,6.777633,-1.318516,0.265521,-2.018555,-7.991349,7.373370,4.052005,-5.693005,1.993097,-0.702583,-3.129207,3.619488,-1.492309,6.306581,-5.613517,0.517358,5.172070,2.721536,0.174413,-0.144385,1.266960,-2.892699,-6.786891,7.930694,8.349426,-1.634142,-5.118299,-8.032587,4.760767,-3.228850,-7.234925,-8.679870,0.201223,-6.535554,3.638154,-1.999076,-0.267238,4.381825,7.141332,0.309114,-9.239531,-8.072319,0.582811,-0.102458,-9.416008,-7.633870,-4.211236,9.443776,-4.225301,5.298356,-5.763198,4.126131,-7.101675,7.656675,6.815939,-3.473102,9.026800,4.723817,3.488886,7.818511,-1.347510,-5.688585,-4.698670,-2.651239,6.078723,-4.297602,-1.266275,4.788211,5.745120,-3.392869,0.882175,-1.127885,-6.247379,8.108670,1.279935,1.334144,2.224476,0.718650,0.409568,-4.017681,7.466293,6.144018,-0.686351,-9.075031,3.168609,5.654893,1.493558,2.162340,4.828258,5.841741,-5.033314,-2.458910,-4.872521,8.041171,5.529764,-8.688237,4.453665,-7.218972,-8.048368,1.898663,-0.634988,-5.099616,-5.299206,0.856346,9.790960,3.297205,7.001133,9.004799,8.056391,-2.517093,-1.646368,4.371720,-6.862672,-2.203257,-2.303287,-6.861815,-6.189464,-9.891517,4.501329,-4.705035,-2.532623,-5.370998,8.638740,6.145364,-4.442803,1.211897,-5.967284,-9.931570,0.554908,-7.585458,-8.423310,-4.854793,7.839284,-8.973162,-0.385903,5.335243,-5.748496,-2.652279,2.582041,-7.669995,9.746105,3.832045,-4.089164,-2.346086,-6.781284,8.679780,-7.730218,0.946330,-4.978394,-5.319278,-1.960158,9.696631,2.296849,-4.699730,6.794525,-5.518036,-1.458143,-7.466201,-5.356197,-6.343478,2.432429,0.530622,1.707068,-5.195398,-5.628189,-8.707023,-8.180164,3.918954,-2.463523,0.414047,-4.433205,-0.018184,8.548080,8.523090,-8.444151,-1.782312,6.715816,5.896554,-4.480668,-8.923860,-7.227137,8.890683,-5.790849,-4.187860,-0.596773,-6.790716,1.346657,7.761894,-2.548869,-0.374710,9.804904,-4.609084,4.561898,7.567190,5.854293,-1.671042,4.853196,5.129333,6.793475,-6.047605,8.996339,-1.173297,0.516862,4.152324,8.848198,-3.073573,-5.003527,3.193953,-5.195453,8.048758,6.343783,7.772099,4.723838,-8.161251,-6.911133,-9.181841,-5.760406,2.068357,-5.152360,2.175155,-2.169873,-1.401018,-5.833659,-5.564837,3.974193,9.102980,-9.093499,5.745283,0.050601,-4.693811,-2.938275,4.569252,6.385163,-3.777627,3.667978,0.433383,-2.157251,-3.337738,-0.341395,5.972133,-6.997281,-5.821250,-4.092377,-3.293603,6.960949,4.053212,9.473642,-7.320425,4.666265,-9.820297,-7.996083,1.187201,-0.065825,-0.089993,-3.568529,-7.019866,-2.020967,4.962073,-4.354905,-4.489630,-8.232755,7.397938,-4.631973,4.775338,-8.156941,-1.188408,6.395594,8.837884,9.762069,-9.893514,-5.029477,-6.065742,2.962286,8.740474,3.809005,-0.204927,3.921411,9.062977,4.081705,-8.688939,-5.149628,5.688283,-1.852864,1.001188,-5.376535,7.691712,-5.605246,4.226277,-0.433568,8.423371,-4.479708,7.410018,3.044416,8.547042,0.324153,9.864849,-6.905722,-0.765310,3.849129,-9.392252,7.658953,-1.742678,7.596729,-7.077297,-7.712653,3.659239,2.298376,7.994797,8.715327,0.691768,-5.896535,-6.320671,1.940625,1.971571,4.182871,-7.510649,0.429567,-7.575569,-8.373044,-1.046015,9.849433,6.348704,5.659775,6.428940,1.201111,1.917883,1.786161,-8.465309,-9.761736,-3.902721,0.578079,7.086792,7.761453,3.888462,-8.303253,1.038224,2.104546,-3.432772,2.179562,0.868803,-0.733434,-3.406037,0.904878,8.879037,-6.757548,0.884294,-4.676208,-6.591013,-4.258674,-5.297738,-7.005451,-5.457979,-5.348077,-5.399464,7.417574,6.823434,-9.816957,2.920989,-0.805412,-0.669404,-7.174597,3.956855,-0.993944,2.865466,6.915971,0.014924,1.996867,-4.894499,-6.832649,0.677545,-6.949363,2.001347,-7.038834,-6.391979,7.706517,9.081623,-7.303654,0.944016,-4.338726,-3.130928,-1.772682,2.060564,6.833445,4.244087,-9.046453,8.337350,3.338081,-8.571149,-9.450145,8.630945,8.903589,4.643948,2.434867,-6.942944,9.688670,5.868893,-1.287595,2.938866,-9.227508,7.621895,5.328013,-6.474325,8.136199,-5.531173,7.374680,-0.756316,-1.599891,5.565722,-9.583024,-2.665554,-6.444422,2.160633,-0.095264,-0.186953,1.941074,-5.620123,3.181415,-6.211225,0.841037,-3.256411,-3.263335,1.181693,-1.972323,-2.894584,-6.911213,4.672667,-1.932592,1.171951,9.033717,-4.188545,2.105519,-3.887462,9.208829,6.583712,0.903255,8.031386,-9.028945,6.946949,6.933449,8.932194,-8.997917,-9.226063,2.268707,3.814707,-4.687840,-0.605286,-0.048998,-9.976235,2.586134,-8.928782,0.892478,-3.771931,-4.834008,-2.344718,4.418205,2.629904,-3.768853,-9.188936,9.075261,8.076946,8.330710,2.418580,-4.492732,1.930199,-9.569315,-4.362588,-8.561092,9.583952,-5.375293,-5.662925,-5.623054,5.854454,-4.789639,-8.351502,-5.896206,5.334295,1.114611,1.190318,-1.063376,7.263459,8.081387,-8.645285,-9.325602,-7.930105,3.658284,-1.473946,3.543809,5.701487,-9.565063,4.742078,6.052540,-7.151690,-5.254114,-7.260417,0.581848,8.593908,3.844244,-2.183546,4.416979,7.896473,4.231522,-8.001816,4.220064,-9.294309,-2.783961,-6.879584,-7.972892,-9.040988,4.321937,7.013514,1.086146,0.971136,-8.635282,-4.169329,-0.193558,1.327174,-3.044555,-4.115287,4.312327,9.838423,9.095289,6.827245,-7.161925,-0.332302,-2.715479,-0.662804,-7.064425,-4.002368,0.901924,-8.304366,-7.231564,-0.091309,-2.609526,2.135681,6.767774,0.674875,-4.770123,9.025384,-2.283350,-9.017760,8.677126,-5.859899,-4.175723,2.561078,-3.046537,-6.702979,3.682744,1.712685,7.818996,4.335404,0.713536,1.116171,7.270753,-2.882821,-7.816292,-0.002818,-6.385744,4.286487,6.683959,-1.484842,1.152941,5.194004,4.507452,-9.469354,1.623939,-3.601066,-7.980786,-3.899816,-1.526725,1.703605,-7.560699,-8.544619,8.327574,6.783309,-6.747062,-1.754581,-2.950808,-5.504357,-7.341064,7.409401,-6.902192,-5.113212,3.410386,-8.711164,1.928010,8.298664,2.464931,-0.991501,3.404861,-4.890263,-9.212399,2.389241,-2.909178,-2.160290,-2.216838,-3.426340,3.589282,0.861299,6.474314,-4.221773,-0.742491,-5.399066,-0.825112,-6.408966,5.277823,8.814117,9.534893,-6.922634,1.783039,-3.894609,-2.061478,-3.965924,1.565639,5.371120,-8.990402,6.688702,4.544848,-8.773768,5.743871,4.652059,9.465254,-9.651245,-5.145064,-9.191151,2.673825,2.711373,8.298063,-2.087008,-8.638932,-6.689386,0.840107,8.160245,2.976491,-2.210772,-5.673190,6.796389,3.039751,-6.529166,9.376193,7.720704,0.031089,-8.201543,-1.859177,6.772428,-2.114120,7.433398,2.916659,-8.429439,7.977330,2.688858,0.214859,3.274662,-4.762800,-2.826037,0.151110,4.499090,-0.662802,0.444924,-8.300022,6.750530,-2.234632,-0.965081,1.263209,1.130614,-6.828850,-1.817731,0.202479,-4.836244,0.154103,0.084764,-8.524925,5.524169,9.490637,8.475377,2.181938,-9.871206,-5.050949,-7.816106,-0.613665,-1.712397,-7.631297,-1.160401,-4.524031,-8.904654,4.101350,-3.798629,-5.307938,-5.570105,9.780837,0.190259,1.587561,-4.996543,-0.868903,9.585699,-7.406614,4.883324,6.658875,9.745976,-2.214590,9.535242,6.753666,6.922872,-5.959167,9.373200,-1.320167,-6.298575,2.351410,5.180968,4.397994,-6.585053,-9.491586,2.497426,6.927761,9.884824,-0.755315,2.348861,1.976767,8.499949,-8.940098,1.488490,8.108464,-8.515156,-2.240943,-7.612387,2.054101,-6.158191,4.416574,0.330118,-1.526484,-6.238842,3.566130,-1.994337,3.472705,-3.601218,8.906158,-8.589315,-0.490225,1.834267,-7.258792,-3.833737,-5.420713,7.636486,-9.508855,-2.389273,6.046418,0.224087,-6.393555,5.055529,1.315524,2.650443,5.498812,5.760053,2.877766,0.563412,3.739313,4.604782,-2.482622,0.725917,5.888749,6.667702,-6.419268,8.095175,-0.832123,-7.400102,1.548994,-6.816177,6.732015,-0.498020,-7.554408,-1.017000,4.391363,8.775656,-6.146425,6.807222,-6.925216,2.908936,4.080919,5.601400,0.979976,-5.143555,-1.574052,-6.310392,-0.289156,-0.910072,-9.140694,-4.217216,-7.489335,0.914421,-9.320964,-1.175184,6.388014,-0.728712,-4.781186,-1.573279,0.859574,-2.601600,-3.882473,-1.953948,3.642088,3.382457,8.261368,-0.908213,-9.064812,6.670566,-4.736391,8.382569,4.556315,-0.758934,-2.617928,9.989604,0.329923,9.620430,-0.910553,3.719463,-3.060333,9.090194,-2.828803,6.610058,2.137996,-4.257187,-9.814606,5.612229,9.146326,5.430465,1.059179,1.760031,8.844221,-8.794579,-0.343050,0.324546,-0.299127,3.412750,-9.431596,3.101171,9.335529,7.242759,-0.989089,1.530489,9.078849,8.284750,1.519030,1.076826,9.282421,4.608410,8.893060,-1.931793,4.339782,1.600047,-5.013398,-3.475776,-1.096486,8.601917,-0.502707,-7.486580,3.542050,-6.093436,-4.982654,3.229094,6.245507,-0.917917,-6.934296,0.281370,-8.459371,5.761882,3.332404,-6.581846,-1.150729,-0.137582,-4.935634,-4.451279,-2.769224,-0.173122,-5.985345,-0.582142,-1.520073,0.225277,7.859210,8.808944,7.815602,-5.238402,-5.898444,-4.781522,-0.845828,7.402270,6.443707,1.099384,6.172312,-1.913226,8.611068,6.043725,8.367879,-9.719028,3.091848,-0.454587,2.045805,-1.472757,8.845618,-0.065785,6.253990,-3.647904,2.257198,2.921026,-3.148181,-9.658586,-7.060547,7.393791,-0.180308,2.554489,5.657371,-8.392093,-7.503674,-7.450199,4.748059,-6.104616,6.931571,4.442097,-8.076324,4.124774,0.751919,-6.385259,7.540984,3.777016,-0.585949,-6.833458,1.989013,-4.226965,5.041077,9.510397,7.646189,2.979065,8.965916,0.631947,1.248774,-6.443994,-4.506551,6.200166,-7.271806,-3.273728,4.721361,7.176020,6.151713,-5.960586,-0.962653,-9.615647,6.942061,-4.010219,-9.195072,-8.332739,-2.775963,-4.523128,-6.066795,3.264767,7.687899,5.593845,-4.527248,3.553256,-6.720487,-9.125853,8.781886,-5.198162,-6.837839,0.332297,-0.260935,9.298222,-1.532380,2.356022,0.134381,-5.402080,-7.121980,8.280987,-6.377845,1.779142,-7.590578,5.254721,-2.205382,3.125156,1.435133,7.260071,-9.558812,-3.999240,9.813585,2.517922,-7.792035,4.723386,9.986607,5.608635,6.759236,-8.326111,-5.055313,0.785214,8.392521,-0.564054,-4.396847,-9.013347,-4.946474,5.276585,1.126006,-5.540761,-0.601600,-1.696898,-9.987164,7.374208,-3.618099,3.493943,-8.273489,8.966693,7.289762,-7.627871,-3.833074,8.093724,4.916861,-1.862417,9.500641,0.742013,-5.939969,-9.924807,9.393433,-3.186751,8.326937,6.134765,-6.177751,-8.631791,-1.874339,4.754970,9.547669,0.496962,-2.208867,4.422932,-2.002974,0.996681,5.364751,6.995888,-8.887875,-7.695967,9.590925,3.132980,3.172723,-7.760247,-8.514860,-8.635630,-9.972556,-6.881208,2.503619,-7.901295,-9.268857,-5.427515,7.194060,8.373999,7.293459,-4.129246,8.300010,-3.383953,2.727172,-0.393024,5.163777,8.952753,-2.599550,-5.344003,-7.622969,7.682734,-4.786838,-7.581310,1.303551,1.245871,8.438847,7.627486,3.126263,8.087153,-9.839444,-3.221359,-1.775041,6.919842,-2.694652,-7.213534,5.033443,1.565813,9.318850,6.711083,2.364436,3.632327,-2.172816,8.949268,0.158049,-4.775595,-7.620870,0.254405,4.798639,6.536283,-0.315929,-0.938777,8.959116,7.132108,6.133586,9.802070,-1.704059,0.154289,-1.263526,-6.374264,-5.263052,8.556768,-3.044654,0.737298,-2.540351,7.139478,7.589539,-1.251460,2.226555,7.940381,-9.991443,-4.006307,-2.411160,-8.512266,-6.923321,-3.441948,3.609089,-0.748949,-3.071204,5.818229,-4.339190,0.301744,-9.206867,8.415250,8.315368,-1.005799,4.430017,-4.959160,5.657713,-0.684802,-0.117388,-5.929033,6.018388,3.711217,-2.348405,-9.170166,7.650746,-2.441229,0.298194,4.422334,2.611970,-1.990736,-3.278862,-9.258508,5.214354,-7.478838,6.899375,-2.726401,9.776679,-0.123529,-7.097465,-2.756959,-2.929094,-4.872809,-7.013521,-4.040606,7.756594,5.873685,-9.898237,4.969215,-8.228015,3.433674,-9.491126,-5.019541,7.915207,-0.524088,5.362258,8.655582,9.784696,0.796954,5.505529,3.893378,3.825252,5.032579,-2.816910,1.279077,-1.543909,-8.913543,-5.323077,-4.899136,0.886898,-4.285298,7.396320,-3.845286,8.647090,8.542661,-0.487033,4.810857,5.894286,0.608048,-5.018944,-0.772047,8.883764,1.415827,-2.335023,3.085891,-9.574116,-4.345027,7.741403,0.662525,6.375684,7.776108,0.260786,3.970972,8.528023,6.503319,0.743319,-7.038774,-4.455329,9.956285,5.673026,9.282076,-5.004322,-0.127678,-2.132425,-7.669266,-9.659784,6.207497,-1.566853,-5.001397,3.860946,1.820469,3.962241,5.421254,-5.750226,-4.310500,2.652287,9.110679,-8.077428,6.987777,9.443087,-0.326404,-6.046649,-8.156826,-9.243779,-4.663241,-1.899050,-3.305281,-3.241240,9.302575,-9.666521,-1.605217,4.755190,5.471671,2.489423,1.073786,-9.540176,-1.540063,8.380715,-8.555181,9.798441,-5.417436,-7.041301,-5.639187,-3.503992,1.279327,4.829851,9.791677,-3.767180,-9.076877,4.996616,-1.596940,5.379043,-4.204802,7.230320,-2.169426,-1.616896,-1.823379,-1.116341,4.275925], dtype = "float32")#candidate|3532|(2400,)|const|float32
const_3533 = relay.const([-0.723741,5.532054,-5.017714,8.881750,8.809823,8.574123,-2.855638,-4.582719,-0.316468,7.156372,6.177021,-3.408808,-3.558003,-5.379845,-9.943876,-0.929351,-0.971560,9.792553,-2.013474,6.233547,7.739676,-9.254858,-4.848185,7.525507,-6.122928,7.494677,7.696668,9.023954,9.260565,2.801753,8.346607,6.214202,2.400268,-0.729654,3.511911,-5.943136,3.074424,-9.848095,2.110099,-7.796505,-1.986858,0.505537,6.169210,1.557876,-7.575883,3.857132,9.092079,-0.965385,4.465138,-1.062624,-0.030551,6.859037,9.813551,8.946709,-8.455955,-8.756047,-1.313949,-8.274810,-9.689316,-1.304241,-9.090980,6.346512,-9.730132,-8.143437,-5.234690,-6.117967,4.883032,-9.068319,-2.806603,2.793983,-8.183506,4.429080,8.216661,-2.724559,-3.549137,7.294722,-2.589561,-5.043133,-2.042778,7.713341,2.754462,2.545403,0.214530,1.855027,1.990110,-8.991381,2.853481,-2.246236,5.961210,-6.865237,-7.785308,-7.090508,-4.793635,6.562146,-5.173738,-5.794898,1.314029,-4.850431,2.420183,-1.063012,6.663459,-8.595540,-6.476408,1.143750,-4.233295,1.631601,4.482375,9.291689,-8.275260,-6.134558,8.624591,-2.704581,-8.119095,-1.818658,4.495667,7.735425,6.126892,0.855628,-6.128789,-7.684349,-9.917826,5.894175,2.658093,-7.724704,-5.338677,-2.864598,1.347109,-7.789361,-8.270015,0.447648,0.503404,-9.234873,0.897539,-6.627737,-0.678223,-2.068932,6.627577,0.064886,-1.475605,-6.362851,-6.439035,8.041011,-2.823072,-2.475587,-9.185722,-6.937387,-1.565433,-6.769591,-2.049385,2.007628,0.788892,3.243158,-1.187089,-9.713394,-4.059406,1.239750,5.215679,-7.044323,-0.124423,-8.680229,2.090601,-5.438763,0.918028,5.694077,5.468880,0.135174,-3.903395,7.769184,9.240541,6.084966,8.230232,-5.652658,2.998802,-1.549307,1.288568,-9.943535,6.465311,-6.145834,-0.450717,-4.677567,1.773555,-1.972998,-6.267836,-5.520585,6.864621,-0.383927,-8.974327,-4.056975,9.294823,1.412733,7.468227,3.968078,-1.236765,-0.318634,9.977855,-6.529814,-9.002734,-8.532093,4.476299,-8.925413,5.077847,9.415179,3.489673,4.629459,-8.482373,-2.912332,9.344479,-4.524175,5.723580,-8.127646,0.922973,5.821943,1.625679,-9.562525,-1.367102,-2.821028,0.391980,4.183481,8.459424,-8.032115,9.653535,6.076511,-1.976693,-9.915057,-5.830380,6.301863,-6.594084,8.495225,-1.371529,-4.422278,-7.808860,-5.665878,-3.303839,5.914949,9.974920,5.576908,-7.704713,3.133546,-9.676310,-9.969266,-4.148455,-0.437682,3.815752,-5.964839,7.305419,-9.584883,9.013925,-9.761457,3.264591,9.571888,4.028378,1.356688,-5.336021,-6.456848,8.614443,3.748532,-1.495932,-8.902030,-2.046664,-0.325984,2.949032,0.350392,1.680275,-7.144409,4.149391,2.328475,-0.357209,-9.997453,9.945141,4.425053,-4.250392,-5.078200,-7.114779,-9.888794,-9.849052,-9.174863,2.504749,-2.839392,0.608055,6.780687,8.915852,0.231613,-9.280280,-4.426093,9.792517,-0.667998,-3.082495,-9.054683,4.504487,7.173764,5.837577,7.275008,-4.916513,-4.448911,-9.117277,-6.571836,-1.156354,4.373503,-1.040736,1.767687,9.991513,6.349948,-7.921006,-5.081738,-0.582690,6.932352,4.269667,-7.322767,2.462025,-2.162969,4.601757,9.448616,-7.307973,-9.198151,-4.760556,-7.819841,6.760071,8.839935,-9.837101,5.087875,-9.018744,-7.286586,1.346327,3.216047,8.076803,-5.684723,-3.649233,0.624921,-9.036555,4.473060,6.448903,-5.212120,9.111685,-0.901846,0.559102,-4.678157,6.503764,5.346288,-8.767422,5.534327,-5.987377,-7.945375,4.550379,-7.304698,6.737322,-0.802150,2.122098,2.736421,-4.576664,-9.595520,3.486457,8.484442,-5.376191,1.747324,6.136409,-1.898156,-3.435246,8.198572,-4.285204,6.205161,4.680106,-7.325884,-7.980554,-1.560488,-6.189068,-2.456238,1.009585,-9.556461,-0.654521,-2.302843,-8.656864,-8.767294,5.534851,-6.095767,3.297858,8.573659,7.298172,4.513001,0.353033,-5.651415,9.133625,1.011135,6.615545,-5.763811,0.256230,6.473006,1.361994,-3.909278,3.681275,9.813132,-6.702009,-0.818290,-7.628112,3.700863,5.742445,0.226438,-5.160409,5.899687,-9.154910,-4.333588,4.827415,4.156369,8.094548,1.591973,-1.737728,0.967878,-1.399626,-6.519241,7.298574,-7.723529,-4.620825,8.362499,9.584170,-8.474651,-5.478438,6.328961,-3.663087,6.864329,3.115841,4.011599,7.862035,-3.893661,-0.248141,-1.404205,8.838165,-2.945836,7.334226,-8.271976,-3.880863,-7.657915,7.421820,-1.451544,2.491748,6.911757,2.102827,-9.160690,9.170588,-4.820070,-4.368593,-8.170183], dtype = "float32")#candidate|3533|(440,)|const|float32
call_3531 = relay.TupleGetItem(func_3486_call(relay.reshape(const_3532.astype('float32'), [2400,]), relay.reshape(const_3533.astype('float32'), [11, 4, 10]), ), 2)
call_3534 = relay.TupleGetItem(func_3490_call(relay.reshape(const_3532.astype('float32'), [2400,]), relay.reshape(const_3533.astype('float32'), [11, 4, 10]), ), 2)
func_3486_call = mod.get_global_var('func_3486')
func_3490_call = mutated_mod.get_global_var('func_3490')
call_3543 = relay.TupleGetItem(func_3486_call(relay.reshape(const_3532.astype('float32'), [2400,]), relay.reshape(const_3533.astype('float32'), [11, 4, 10]), ), 0)
call_3544 = relay.TupleGetItem(func_3490_call(relay.reshape(const_3532.astype('float32'), [2400,]), relay.reshape(const_3533.astype('float32'), [11, 4, 10]), ), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2732_call = mutated_mod.get_global_var('func_2732')
const_3546 = relay.const([True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True], dtype = "bool")#candidate|3546|(36,)|const|bool
var_3547 = relay.var("var_3547", dtype = "bool", shape = (468,))#candidate|3547|(468,)|var|bool
call_3545 = relay.TupleGetItem(func_2728_call(relay.reshape(const_3546.astype('bool'), [1, 12, 3]), relay.reshape(var_3547.astype('bool'), [13, 12, 3]), relay.reshape(var_3547.astype('float32'), [13, 12, 3]), ), 5)
call_3548 = relay.TupleGetItem(func_2732_call(relay.reshape(const_3546.astype('bool'), [1, 12, 3]), relay.reshape(var_3547.astype('bool'), [13, 12, 3]), relay.reshape(var_3547.astype('float32'), [13, 12, 3]), ), 5)
output = relay.Tuple([bop_3527,call_3531,const_3532,const_3533,call_3543,call_3545,const_3546,var_3547,])
output2 = relay.Tuple([bop_3527,call_3534,const_3532,const_3533,call_3544,call_3548,const_3546,var_3547,])
func_3549 = relay.Function([var_3516,var_3517,var_3526,var_3547,], output)
mod['func_3549'] = func_3549
mod = relay.transform.InferType()(mod)
var_3550 = relay.var("var_3550", dtype = "float32", shape = (3, 13, 11))#candidate|3550|(3, 13, 11)|var|float32
var_3551 = relay.var("var_3551", dtype = "float32", shape = (3, 13, 11))#candidate|3551|(3, 13, 11)|var|float32
var_3552 = relay.var("var_3552", dtype = "float32", shape = (3, 13, 11))#candidate|3552|(3, 13, 11)|var|float32
var_3553 = relay.var("var_3553", dtype = "bool", shape = (468,))#candidate|3553|(468,)|var|bool
output = func_3549(var_3550,var_3551,var_3552,var_3553,)
func_3554 = relay.Function([var_3550,var_3551,var_3552,var_3553,], output)
mutated_mod['func_3554'] = func_3554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mod.get_global_var('func_3394')
func_3395_call = mutated_mod.get_global_var('func_3395')
call_3556 = relay.TupleGetItem(func_3394_call(), 1)
call_3557 = relay.TupleGetItem(func_3395_call(), 1)
output = call_3556
output2 = call_3557
func_3566 = relay.Function([], output)
mod['func_3566'] = func_3566
mod = relay.transform.InferType()(mod)
mutated_mod['func_3566'] = func_3566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mutated_mod.get_global_var('func_3566')
call_3567 = func_3566_call()
output = call_3567
func_3568 = relay.Function([], output)
mutated_mod['func_3568'] = func_3568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3618 = func_3566_call()
call_3619 = func_3566_call()
output = relay.Tuple([call_3618,])
output2 = relay.Tuple([call_3619,])
func_3621 = relay.Function([], output)
mod['func_3621'] = func_3621
mod = relay.transform.InferType()(mod)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3622 = func_3621_call()
output = call_3622
func_3623 = relay.Function([], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3636 = func_3566_call()
call_3637 = func_3566_call()
func_3621_call = mod.get_global_var('func_3621')
func_3623_call = mutated_mod.get_global_var('func_3623')
call_3638 = relay.TupleGetItem(func_3621_call(), 0)
call_3639 = relay.TupleGetItem(func_3623_call(), 0)
func_3549_call = mod.get_global_var('func_3549')
func_3554_call = mutated_mod.get_global_var('func_3554')
var_3645 = relay.var("var_3645", dtype = "float32", shape = (429,))#candidate|3645|(429,)|var|float32
var_3646 = relay.var("var_3646", dtype = "bool", shape = (468,))#candidate|3646|(468,)|var|bool
call_3644 = relay.TupleGetItem(func_3549_call(relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3646.astype('bool'), [468,]), ), 2)
call_3647 = relay.TupleGetItem(func_3554_call(relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3645.astype('float32'), [3, 13, 11]), relay.reshape(var_3646.astype('bool'), [468,]), ), 2)
output = relay.Tuple([call_3636,call_3638,call_3644,var_3645,var_3646,])
output2 = relay.Tuple([call_3637,call_3639,call_3647,var_3645,var_3646,])
func_3649 = relay.Function([var_3645,var_3646,], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
var_3650 = relay.var("var_3650", dtype = "float32", shape = (429,))#candidate|3650|(429,)|var|float32
var_3651 = relay.var("var_3651", dtype = "bool", shape = (468,))#candidate|3651|(468,)|var|bool
output = func_3649(var_3650,var_3651,)
func_3652 = relay.Function([var_3650,var_3651,], output)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3659 = relay.var("var_3659", dtype = "float64", shape = (11, 1, 9))#candidate|3659|(11, 1, 9)|var|float64
uop_3660 = relay.sinh(var_3659.astype('float64')) # shape=(11, 1, 9)
func_3486_call = mod.get_global_var('func_3486')
func_3490_call = mutated_mod.get_global_var('func_3490')
var_3665 = relay.var("var_3665", dtype = "float32", shape = (2400,))#candidate|3665|(2400,)|var|float32
const_3666 = relay.const([[2.912148,-2.894807,-6.274566,-3.878151,-1.671323,-5.621757,9.690989,-5.633248,-8.307946,9.600091,-3.029812,-6.267418,3.012736,4.143979,-6.370829,7.634277,-1.985919,3.962778,0.883777,5.829252,9.865630,-3.361756,6.929197,6.511711,-6.569783,0.934340,-4.134773,-3.826346,1.741479,-9.648198,5.985397,-2.382645,4.298575,-2.992271,9.538695,4.338591,-4.309076,-7.876067,-3.435172,8.594304,-1.948191,9.680414,7.341785,2.122576,0.557261,-1.660061,7.914237,6.295833,-2.788639,6.550299,9.637284,-0.107966,9.973417,9.886018,-4.573146,-6.471830,0.855257,-0.771559,8.873109,-0.793455,5.062947,4.360847,3.098923,4.634586,0.896420,3.180384,3.223939,-1.821100,-9.222599,3.305849,-8.208354,-5.321614,6.636486,-8.472371,-2.417868,-4.670703,9.366067,-8.205862,-6.307438,-8.181309,-7.345588,-3.111228,9.708450,-9.310846,-4.801110,0.562581,3.012492,8.947035,-6.227951,-5.827498,-1.699582,-4.028157,-2.649996,-8.992138,-9.287414,-4.111558,-3.210204,1.499089,0.313461,-5.462692,1.145718,0.391899,0.669095,6.362970,-4.684501,-9.145294,-8.715102,3.009825,8.116543,3.982241,-1.976200,-2.274138,-9.543059,5.120467,-6.932238,-2.294885,8.466233,-7.964432,-3.912091,-9.156434,9.143399,2.181777,3.848149,3.984723,-6.159183,-3.285222,-7.585614,2.976142,-5.669997,0.150873,-6.712564,-1.976422,2.409779,-7.153927,7.459607,-9.796752,9.613318,-0.577124,-3.055957,2.149739,8.334396,-1.667625,6.980506,-9.597361,-8.705382,-4.145760,7.960151,-0.265257,1.362580,-7.455892,1.365307,-8.918859,-6.517450,4.700960,-4.488405,6.868289,-7.764063,4.817440,-0.793523,-1.116943,0.055554,4.445570,7.917674,1.690135,7.741213,8.992700,6.576338,8.810423,3.313379,-8.654043,-3.452198,7.686294,0.973988,-0.747101,-0.454432,-3.908127,7.017293,9.991612,7.887209,4.689550,-0.038530,6.642356,-7.912368,-1.234725,7.084651,4.570726,-8.253036,8.088214,-9.770278,1.684145,-1.797859,-9.552791,-0.895822,-5.156180,8.214205,-2.190045,2.174772,2.538522,-1.042029,8.246144,-7.694010,7.981474,9.063798,2.555920,-3.505933,-2.235638,-4.308194,-8.707502,-0.890526,9.237473,7.097703,-0.899637,4.526822,-1.934338,7.131508,-7.464771,1.769142,-7.426033,-3.229173,-8.101401,1.433308,6.593846,4.515473,-5.714774,-7.395994,8.243017,9.252570,-6.120005,5.028070,-5.269398,-2.682488,6.284513,4.310335,-0.777843,8.173279,-3.792672,-8.441064,-4.236005,-0.790625,8.308076,-1.295267,-4.708618,-1.847343,0.394340,7.025536,-0.622072,-1.392982,5.765916,-4.756551,1.822230,-9.971928,-3.183749,9.497481,0.974483,7.198976,-6.973716,2.258914,4.669178,-7.329725,-5.380530,-7.086947,3.753768,-4.490122,-4.006417,3.777906,-3.825200,-1.036499,-6.932654,4.369320,4.715377,-2.537591,8.245489,-6.431842,-1.128293,8.833369,-9.586420,2.448117,-8.650651,8.775126,-9.062662,-7.566086,-7.438408,6.180953,-7.652919,-6.977648,6.467702,6.925126,6.685217,8.620809,-4.761131,-3.422355,1.517677,3.898583,3.290985,-7.348139,2.288645,-6.323647,2.409702,-4.278105,-3.068428,0.278002,8.371044,-3.001991,-5.549401,-8.189845,-1.448238,-9.933932,9.313442,1.581280,-0.433665,-3.828711,-4.931509,7.159601,1.942919,6.833681,2.573147,7.236017,-5.725545,6.327501,-7.388129,3.355664,-9.462216,-0.281374,0.911224,-9.276925,0.942912,7.827904,5.666771,-2.423541,-4.955842,-8.041943,-1.372725,3.423920,-5.637443,-5.501151,-9.889143,1.035077,7.860173,-6.501812,-3.493102,-4.411300,-8.573085,0.322765,-1.926379,-1.913142,-3.629832,-0.393807,-5.313395,6.207265,-9.394989,1.030184,9.086091,6.353598,-2.533644,-8.896653,-4.773444,1.918628,-2.329660,-2.486689,-6.642206,-9.060717,-2.630059,6.343731,-8.654446,3.647859,-7.301054,3.222482,7.179507,-2.572886,3.637520,-3.511395,5.726218,-2.934875,7.301036,1.638653,7.075601,-1.427463,-1.697893,-6.653782,-5.195011,-7.166899,1.776651,-8.850458,-8.396565,-7.783714,6.926833,-7.651764,-7.527302,2.462608,7.678944,4.738803,-4.130736,-7.265163,-0.263683,2.724213,-7.324911,0.539380,8.638625,6.546233,6.777464,6.191096,-9.333224,9.432899,-4.126897,-6.946555,2.051221,-1.357449,6.187791,9.368437,-7.515953,-6.270874,-5.011932,-7.321219,-8.783249,1.857722,0.557574,-5.429861,-4.152257,9.855237,-4.021194,0.393597,2.858135,5.810183,-3.140044,-5.547568,0.283729,-3.013814,0.652210,-1.027390,-1.627253,0.198524,-4.322941,5.665898,3.377159,-6.158075,4.182818,-5.211165,7.071268,6.050448,-1.740900]], dtype = "float32")#candidate|3666|(1, 440)|const|float32
call_3664 = relay.TupleGetItem(func_3486_call(relay.reshape(var_3665.astype('float32'), [2400,]), relay.reshape(const_3666.astype('float32'), [11, 4, 10]), ), 1)
call_3667 = relay.TupleGetItem(func_3490_call(relay.reshape(var_3665.astype('float32'), [2400,]), relay.reshape(const_3666.astype('float32'), [11, 4, 10]), ), 1)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_3671 = relay.var("var_3671", dtype = "uint16", shape = ())#candidate|3671|()|var|uint16
const_3672 = relay.const([[-8,6,2,5,4,4,-3,-8]], dtype = "uint16")#candidate|3672|(1, 8)|const|uint16
call_3670 = func_211_call(relay.reshape(var_3671.astype('uint16'), []), relay.reshape(const_3672.astype('uint16'), [1, 2, 4]), )
call_3673 = func_211_call(relay.reshape(var_3671.astype('uint16'), []), relay.reshape(const_3672.astype('uint16'), [1, 2, 4]), )
bop_3678 = relay.add(uop_3660.astype('uint32'), var_3671.astype('uint32')) # shape=(11, 1, 9)
output = relay.Tuple([call_3664,var_3665,const_3666,call_3670,const_3672,bop_3678,])
output2 = relay.Tuple([call_3667,var_3665,const_3666,call_3673,const_3672,bop_3678,])
func_3681 = relay.Function([var_3659,var_3665,var_3671,], output)
mod['func_3681'] = func_3681
mod = relay.transform.InferType()(mod)
var_3682 = relay.var("var_3682", dtype = "float64", shape = (11, 1, 9))#candidate|3682|(11, 1, 9)|var|float64
var_3683 = relay.var("var_3683", dtype = "float32", shape = (2400,))#candidate|3683|(2400,)|var|float32
var_3684 = relay.var("var_3684", dtype = "uint16", shape = ())#candidate|3684|()|var|uint16
output = func_3681(var_3682,var_3683,var_3684,)
func_3685 = relay.Function([var_3682,var_3683,var_3684,], output)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3702 = relay.const(4, dtype = "int32")#candidate|3702|()|const|int32
var_3703 = relay.var("var_3703", dtype = "int32", shape = (5, 9, 11))#candidate|3703|(5, 9, 11)|var|int32
bop_3704 = relay.right_shift(const_3702.astype('int32'), var_3703.astype('int32')) # shape=(5, 9, 11)
func_2290_call = mod.get_global_var('func_2290')
func_2295_call = mutated_mod.get_global_var('func_2295')
const_3710 = relay.const([8,-10,-10,-6,-4,7,4,5,4,7,-8,-3,4,7,4,7,-7,1,-9,4,-9,-7,-1,-8,-2,8,-4,9,3,-9,-3,7,5,-7,8,8,-10,-2,-9,5,-7,-9,4,-7,1,3,6,4,-9,8,4,-5,-2,5,-7,-1,5,-5,10,-7,-10,7,-10,9,-3,7,2,-2,-10,6,-9,-2,-8,5,-1,-9,3,-6,6,-2,-2,-6,4,-9,-7,2,1,-2,10,-7,2,-1,1,-7,5,-5,10,-1,1,9,-2,-6,4,2,-7,-7,4,-1,-9,1,8,1,9,-4,-2,10,5,-9,-6,-5,1,-2,-3,-9,3,-6,-7,-3,-9,-9,-2,-6,-5,-6,-7,3,-6,-10,-2,-3,8,10,-8,-4,-9,-9,9,8,10,4,6,3,6,10,2,-3,-5,-10,5,10,-4,-7,-2,-9,-8,10,-4,-5,-6,-8,-10,-3,-5,6,4,4,-4,-2,-5,-1,-8,4,-1,2,-5,8,-1,-10,3,-4,3,6,10,-6,-3,-5], dtype = "uint64")#candidate|3710|(196,)|const|uint64
var_3711 = relay.var("var_3711", dtype = "uint32", shape = (22, 7))#candidate|3711|(22, 7)|var|uint32
call_3709 = relay.TupleGetItem(func_2290_call(relay.reshape(const_3710.astype('uint64'), [4, 7, 7]), relay.reshape(const_3710.astype('uint64'), [4, 7, 7]), relay.reshape(var_3711.astype('uint32'), [154,]), ), 5)
call_3712 = relay.TupleGetItem(func_2295_call(relay.reshape(const_3710.astype('uint64'), [4, 7, 7]), relay.reshape(const_3710.astype('uint64'), [4, 7, 7]), relay.reshape(var_3711.astype('uint32'), [154,]), ), 5)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_3714 = relay.var("var_3714", dtype = "uint16", shape = (8,))#candidate|3714|(8,)|var|uint16
call_3713 = func_211_call(relay.reshape(const_3702.astype('uint16'), []), relay.reshape(var_3714.astype('uint16'), [1, 2, 4]), )
call_3715 = func_211_call(relay.reshape(const_3702.astype('uint16'), []), relay.reshape(var_3714.astype('uint16'), [1, 2, 4]), )
bop_3732 = relay.less_equal(const_3702.astype('bool'), var_3711.astype('bool')) # shape=(22, 7)
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
call_3735 = func_720_call(relay.reshape(call_3709.astype('float64'), [4, 16, 4]))
call_3736 = func_720_call(relay.reshape(call_3709.astype('float64'), [4, 16, 4]))
output = relay.Tuple([bop_3704,call_3709,const_3710,call_3713,var_3714,bop_3732,call_3735,])
output2 = relay.Tuple([bop_3704,call_3712,const_3710,call_3715,var_3714,bop_3732,call_3736,])
func_3737 = relay.Function([var_3703,var_3711,var_3714,], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mutated_mod.get_global_var('func_3737')
var_3739 = relay.var("var_3739", dtype = "int32", shape = (5, 9, 11))#candidate|3739|(5, 9, 11)|var|int32
var_3740 = relay.var("var_3740", dtype = "uint32", shape = (22, 7))#candidate|3740|(22, 7)|var|uint32
var_3741 = relay.var("var_3741", dtype = "uint16", shape = (8,))#candidate|3741|(8,)|var|uint16
call_3738 = func_3737_call(var_3739,var_3740,var_3741,)
output = call_3738
func_3742 = relay.Function([var_3739,var_3740,var_3741,], output)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3790 = relay.var("var_3790", dtype = "float64", shape = (13, 12, 8))#candidate|3790|(13, 12, 8)|var|float64
uop_3791 = relay.sigmoid(var_3790.astype('float64')) # shape=(13, 12, 8)
output = relay.Tuple([uop_3791,])
output2 = relay.Tuple([uop_3791,])
func_3803 = relay.Function([var_3790,], output)
mod['func_3803'] = func_3803
mod = relay.transform.InferType()(mod)
var_3804 = relay.var("var_3804", dtype = "float64", shape = (13, 12, 8))#candidate|3804|(13, 12, 8)|var|float64
output = func_3803(var_3804)
func_3805 = relay.Function([var_3804], output)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3807 = func_3566_call()
call_3808 = func_3566_call()
output = relay.Tuple([call_3807,])
output2 = relay.Tuple([call_3808,])
func_3821 = relay.Function([], output)
mod['func_3821'] = func_3821
mod = relay.transform.InferType()(mod)
output = func_3821()
func_3822 = relay.Function([], output)
mutated_mod['func_3822'] = func_3822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_3848 = func_3566_call()
call_3849 = func_3566_call()
uop_3857 = relay.asinh(call_3848.astype('float64')) # shape=(11, 4, 10)
uop_3859 = relay.asinh(call_3849.astype('float64')) # shape=(11, 4, 10)
bop_3864 = relay.right_shift(uop_3857.astype('int32'), relay.reshape(call_3848.astype('int32'), relay.shape_of(uop_3857))) # shape=(11, 4, 10)
bop_3867 = relay.right_shift(uop_3859.astype('int32'), relay.reshape(call_3849.astype('int32'), relay.shape_of(uop_3859))) # shape=(11, 4, 10)
output = bop_3864
output2 = bop_3867
func_3868 = relay.Function([], output)
mod['func_3868'] = func_3868
mod = relay.transform.InferType()(mod)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mutated_mod.get_global_var('func_3868')
call_3869 = func_3868_call()
output = call_3869
func_3870 = relay.Function([], output)
mutated_mod['func_3870'] = func_3870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_3881 = func_3868_call()
call_3882 = func_3868_call()
var_3898 = relay.var("var_3898", dtype = "int32", shape = (11, 4, 10))#candidate|3898|(11, 4, 10)|var|int32
bop_3899 = relay.equal(call_3881.astype('bool'), relay.reshape(var_3898.astype('bool'), relay.shape_of(call_3881))) # shape=(11, 4, 10)
bop_3902 = relay.equal(call_3882.astype('bool'), relay.reshape(var_3898.astype('bool'), relay.shape_of(call_3882))) # shape=(11, 4, 10)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
var_3930 = relay.var("var_3930", dtype = "float64", shape = (1, 1248))#candidate|3930|(1, 1248)|var|float64
call_3929 = relay.TupleGetItem(func_3803_call(relay.reshape(var_3930.astype('float64'), [13, 12, 8])), 0)
call_3931 = relay.TupleGetItem(func_3805_call(relay.reshape(var_3930.astype('float64'), [13, 12, 8])), 0)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_3935 = relay.var("var_3935", dtype = "uint16", shape = ())#candidate|3935|()|var|uint16
const_3936 = relay.const([[-6],[-2],[-7],[10],[-1],[8],[-7],[-5]], dtype = "uint16")#candidate|3936|(8, 1)|const|uint16
call_3934 = func_211_call(relay.reshape(var_3935.astype('uint16'), []), relay.reshape(const_3936.astype('uint16'), [1, 2, 4]), )
call_3937 = func_211_call(relay.reshape(var_3935.astype('uint16'), []), relay.reshape(const_3936.astype('uint16'), [1, 2, 4]), )
output = relay.Tuple([bop_3899,call_3929,var_3930,call_3934,var_3935,const_3936,])
output2 = relay.Tuple([bop_3902,call_3931,var_3930,call_3937,var_3935,const_3936,])
func_3941 = relay.Function([var_3898,var_3930,var_3935,], output)
mod['func_3941'] = func_3941
mod = relay.transform.InferType()(mod)
var_3942 = relay.var("var_3942", dtype = "int32", shape = (11, 4, 10))#candidate|3942|(11, 4, 10)|var|int32
var_3943 = relay.var("var_3943", dtype = "float64", shape = (1, 1248))#candidate|3943|(1, 1248)|var|float64
var_3944 = relay.var("var_3944", dtype = "uint16", shape = ())#candidate|3944|()|var|uint16
output = func_3941(var_3942,var_3943,var_3944,)
func_3945 = relay.Function([var_3942,var_3943,var_3944,], output)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3821_call = mod.get_global_var('func_3821')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_3974 = relay.TupleGetItem(func_3821_call(), 0)
call_3975 = relay.TupleGetItem(func_3822_call(), 0)
output = call_3974
output2 = call_3975
func_3976 = relay.Function([], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
output = func_3976()
func_3977 = relay.Function([], output)
mutated_mod['func_3977'] = func_3977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4011 = func_3976_call()
call_4012 = func_3976_call()
uop_4024 = relay.atanh(call_4011.astype('float32')) # shape=(11, 4, 10)
uop_4026 = relay.atanh(call_4012.astype('float32')) # shape=(11, 4, 10)
func_3193_call = mod.get_global_var('func_3193')
func_3196_call = mutated_mod.get_global_var('func_3196')
var_4031 = relay.var("var_4031", dtype = "float64", shape = (7, 117))#candidate|4031|(7, 117)|var|float64
var_4032 = relay.var("var_4032", dtype = "uint32", shape = (1, 70))#candidate|4032|(1, 70)|var|uint32
call_4030 = relay.TupleGetItem(func_3193_call(relay.reshape(var_4031.astype('float64'), [7, 117]), relay.reshape(var_4032.astype('uint32'), [70,]), ), 4)
call_4033 = relay.TupleGetItem(func_3196_call(relay.reshape(var_4031.astype('float64'), [7, 117]), relay.reshape(var_4032.astype('uint32'), [70,]), ), 4)
func_3681_call = mod.get_global_var('func_3681')
func_3685_call = mutated_mod.get_global_var('func_3685')
const_4046 = relay.const([[-0.790945,-4.790332,-6.025426,9.653258,-2.008880,6.032525,1.187934,-3.889368,-8.195246,-0.001018,-6.235022,7.984196,9.436011,-7.906421,-1.283441,-4.292897,1.205300,2.726910,1.222782,-5.439035,4.793654,8.163305,-8.880609,-6.689061,7.326215,3.072869,2.885095,4.824122,0.170820,-8.494125,-0.080409,1.764606,9.941509,4.465573,5.334911,-8.828685,6.339794,7.657775,7.631526,-6.415415,-0.396781,7.313510,8.026796,-2.901751,-5.536526,-4.947127,-0.740625,-4.574828,-0.921533,-7.372841,7.167147,-6.822467,0.442941,0.805811,1.183031,4.956721,1.172987,1.464233,-8.280339,6.671005,-7.171852,3.161333,8.607806,-9.517372,7.467203,9.822164,-2.111665,1.415972,8.653928,-5.072862,8.508974,-1.702457,-5.595412,4.716575,-1.306115,3.631869,-6.416595,2.477316,2.304651,7.890028,-0.553870,3.584185,3.918229,-7.453238,2.396652,8.928734,2.330851,2.487082,-4.700355,-2.704636,-0.572529,9.339972,-6.657148,-3.313221,9.210173,-6.007862,8.589890,-0.802846,-7.763467]], dtype = "float64")#candidate|4046|(1, 99)|const|float64
const_4047 = relay.const([-5.204534,0.842599,4.858499,-5.739018,-2.145981,7.248122,6.786213,-4.434586,5.496999,-5.994835,7.185218,-3.006513,-9.629219,9.644610,-3.023960,-5.773319,8.841379,1.445268,0.119213,-5.063612,-6.345373,-0.933595,2.764575,1.968683,-6.563651,-4.888789,9.381641,5.941254,0.387478,-4.752949,6.521990,3.642768,-8.872729,6.018095,-5.436012,4.448158,-2.433903,8.024903,-3.243646,-8.129864,-9.940381,-6.839200,7.713122,5.792418,-4.924539,3.879300,-1.823195,-7.508404,9.986973,6.022138,4.885878,-2.759794,-6.599782,6.939959,-0.963355,4.136488,-2.883809,0.754211,0.787097,6.956999,-6.452508,4.925797,4.688416,1.556047,-5.862785,-8.213023,4.926694,7.420398,-8.241510,-0.903722,-5.614976,4.737441,1.012895,7.259220,2.551504,4.087096,3.742490,5.709868,-3.218741,5.257935,4.472178,0.928484,-0.900699,-0.330064,6.726927,2.092798,-8.869987,4.563228,9.224001,-6.885928,2.895769,-4.055479,-4.051544,8.686062,-6.857653,9.756040,-0.755046,-1.746903,6.965773,-1.496965,7.892555,5.631265,-7.832547,-1.390966,9.610876,6.340194,-7.940009,6.547292,6.622358,6.548051,1.334908,2.137679,1.084928,-8.730390,-8.219548,-0.941359,-5.465992,6.725333,-4.103983,7.368063,-7.240222,-2.470045,-7.924455,4.585178,-4.715272,-1.500189,-0.007238,5.063562,2.673358,-2.430999,-4.768548,-9.736277,-3.321961,-3.106272,1.553300,-9.502079,-9.206125,-8.505168,-8.317502,-0.368790,-4.743647,-2.112776,-7.714782,0.287759,1.782930,4.842043,-0.595231,5.916506,6.855236,2.673553,2.289789,-4.085684,-7.311374,-5.199783,-3.910736,1.875524,8.529687,6.957223,6.885570,-2.284103,9.735496,3.750470,4.458123,-3.897839,-0.848349,2.011539,-1.680437,7.624904,-7.031622,0.854612,-2.563237,5.961125,0.408239,2.679735,8.934603,9.115156,7.522622,-4.281310,1.605042,5.104553,-2.120227,7.549914,-8.045229,6.485302,9.994018,1.090471,6.066789,6.624995,-7.179638,-8.675221,-7.882652,-8.161594,-3.136205,-2.855144,1.042299,8.464234,-3.821205,-4.104133,9.259930,7.734693,1.322759,-6.268250,-7.880391,1.879523,-0.791182,-7.763543,5.893396,-0.160269,-6.857580,-9.273432,-9.370780,6.836655,-7.214005,8.356187,-6.049101,-0.476937,6.215039,-0.797216,0.441135,-7.684807,9.791465,-3.661544,8.453363,-9.399258,-0.371201,-5.258596,-6.667070,6.219876,8.621128,-6.533560,-4.905222,7.411714,5.209400,8.373550,9.982357,-6.026855,-5.915393,-1.610901,3.056003,9.138227,1.532254,-1.436027,-7.271686,-7.888643,-5.487571,4.697498,-3.315762,0.982315,-9.733831,-3.966910,-2.916787,3.509520,5.634291,8.780814,-7.495802,-4.135057,-4.436984,-8.418964,7.817448,-9.381992,6.509943,-3.256724,4.982808,-0.260327,-5.615377,2.568172,4.572761,7.508508,-5.431615,-0.346942,-8.342786,-8.447485,6.938583,1.390936,-8.397192,4.639872,0.314256,7.336686,8.557641,-8.190829,-4.127266,-5.612903,-2.791513,-3.549483,-1.326867,-1.845171,-6.529017,0.286606,1.262000,-4.310633,7.327102,5.284503,0.251095,3.455471,-3.931875,-4.071333,8.569389,6.452034,-6.493452,2.904848,-4.484699,5.744691,-2.073248,-8.064340,4.330222,9.498653,-7.479589,8.515215,3.014164,-7.086721,2.148438,-5.421584,-5.840407,-3.067634,-9.201314,1.267631,9.577401,6.144898,-5.612830,7.715381,-9.281917,-0.879591,-3.333289,-9.091426,-0.592145,0.722169,7.094539,-5.576046,9.186242,-4.683815,-3.965984,-1.051017,2.725425,-6.071496,-5.698450,3.520165,-9.202691,5.641818,-8.044121,0.574949,7.225232,-8.323935,-0.188498,-6.950081,9.235275,7.403695,-0.022760,-9.969355,4.045326,5.735143,-7.945957,-7.993727,-2.468685,2.985707,8.114311,2.772709,-2.047423,4.243853,9.744525,-9.463939,0.722255,-0.886195,-1.060704,5.825992,6.426268,8.240661,5.032554,3.694691,5.384913,-0.981612,3.340179,7.700019,0.824002,-5.797299,-7.645826,-1.449834,4.645210,-2.479106,7.350141,5.451174,-2.914234,-4.856415,4.756105,-2.572388,3.633921,8.334417,-5.086717,-1.844378,-3.829876,-5.088618,8.257543,-9.506472,-9.912167,-5.438626,-5.605122,-1.142445,-9.926919,-8.629644,-9.808552,7.463583,-1.538699,-1.223152,1.737735,-8.662961,-5.867831,1.769292,8.962956,-6.085423,-1.320320,7.025025,-7.725218,8.725207,5.619113,-3.356359,-6.951810,2.135247,5.828309,-4.765860,-9.029551,-1.706435,0.265587,-5.661478,8.734533,-7.787046,-9.010172,-3.672923,-3.293403,6.683817,4.834811,2.234869,6.039356,-5.241349,1.060538,-8.494437,-6.946042,-2.960207,-0.876390,-9.350655,8.732944,9.451384,6.288564,-7.173420,8.181120,1.267328,-5.890753,2.422729,5.512286,-4.095609,-2.951898,-2.382987,1.551235,-1.197108,7.913785,3.236151,-3.295140,-7.701479,-4.052319,6.158090,6.327845,-0.373294,2.653809,0.738182,-3.608758,3.279846,-9.470518,7.662557,-8.271666,4.017546,-5.184175,-6.849812,4.850925,-7.290553,-7.571313,-8.025840,-4.343752,9.949159,-1.296169,-7.460762,-0.973538,8.697787,1.631276,-1.570120,-1.685214,-7.051307,-1.965635,8.425376,5.103992,8.070418,0.774767,7.110008,-7.493254,-3.128296,-0.677055,6.950011,-8.954335,9.326682,7.125565,-5.796524,-0.350894,7.455082,3.557532,-2.009037,-9.959985,-8.782640,7.770981,-1.652711,-1.429475,-5.719550,0.535433,9.293993,-6.055057,-5.567668,-1.388941,-5.725376,0.571819,4.463780,-3.608955,0.874803,6.982250,4.305190,-9.269371,6.176080,-0.807461,8.546666,0.515330,8.016523,0.197196,-0.212523,-1.834155,-5.076054,-7.679767,8.835210,-8.308510,9.371878,-3.434143,-0.868705,-9.143415,-3.293974,-9.236864,1.934400,-4.318335,1.609712,-7.182022,-5.494650,-6.258511,-6.450229,-9.836384,-5.878202,-4.828677,0.080669,-1.724252,5.822494,0.045441,9.902538,5.515651,8.749908,9.690285,-2.730885,-7.778767,0.784228,6.876912,6.494024,9.566608,-4.823689,-7.942261,-6.947364,-6.283080,3.682271,4.861660,7.619125,9.442424,1.765668,5.921548,-8.020664,-7.891764,4.758073,8.656971,2.897869,-7.683886,7.703390,5.903823,1.494274,3.961725,2.294708,8.896326,-5.936751,-5.420712,2.190113,4.157233,2.851291,3.256928,7.788336,-5.285774,3.243399,1.386461,5.290443,9.557415,-2.817394,4.895875,8.695345,-3.673232,-0.295184,9.854907,-5.646263,2.206745,-9.818195,-4.418594,-3.100880,2.981741,6.412401,-0.787087,0.556252,0.204037,-8.249719,-2.119081,7.677771,2.821300,4.532706,-9.571383,8.953347,3.490868,-8.284389,-0.615031,-5.044065,1.911182,-7.116964,-6.349025,2.877213,8.544393,8.748238,7.282967,-3.063612,-8.889133,-8.475204,7.754529,-0.779387,9.887322,2.860848,3.684608,5.805724,0.763660,-0.425491,-3.642403,-5.968489,-1.710551,4.444628,-0.971915,-8.361523,2.853733,8.860702,7.898856,0.088451,3.413916,-9.594471,4.086580,6.469731,1.485514,-2.853340,0.369341,9.641402,-1.139823,4.834374,-7.207686,1.132358,-3.031462,-9.056855,5.016854,3.414399,-1.896758,3.517581,7.653869,5.293650,7.944501,-7.697974,-8.107701,-2.016280,-0.202775,9.512096,0.794847,-2.830233,-8.246720,1.943226,0.749875,-3.122011,-4.669553,0.899552,-1.534777,-1.459275,-2.102510,-1.334349,-1.149471,-3.618494,-8.937636,4.678537,-4.956063,-9.735854,7.747565,-1.848456,-6.977006,-1.603064,9.716329,-6.428323,-0.350934,8.586211,-7.993772,7.976286,-9.930715,9.880000,-1.790496,-4.555275,0.032986,0.847322,5.737329,6.567956,-0.799786,-1.000629,6.336985,8.721900,-7.809135,-6.052716,-4.725528,5.640020,3.112648,7.513725,-3.221427,1.758638,-0.649936,-6.978583,-6.180076,2.106237,8.878544,-6.070369,6.517644,2.206955,-9.168514,-8.709924,3.211490,6.997529,-4.003316,-1.141644,3.558218,-6.032329,-1.428410,0.530670,-8.661130,8.025151,-4.581107,-0.686824,2.659256,4.271886,-3.295549,-9.126857,-0.567848,-4.523138,4.299539,5.330052,-3.536799,-8.676060,-3.082937,-0.623334,9.368667,-2.158839,9.513074,9.180747,-8.858799,4.246634,-3.151515,7.509128,8.331490,9.312654,-2.996899,0.197731,1.869713,-1.718486,6.494327,-1.317079,-6.401490,5.307415,-1.387654,1.102855,3.362119,5.638288,-9.887065,-2.597254,-7.169088,-8.369135,-5.971711,-6.281933,-4.128313,0.837986,8.337170,-1.969805,1.749284,9.533021,-5.255683,-7.492367,2.206307,4.819466,-8.578841,-8.237174,6.212542,-2.711952,-8.956493,4.153194,3.064798,4.256011,9.409302,-2.333979,6.937501,-0.190885,-3.174084,1.830927,-8.326158,-2.296096,0.910690,1.460808,0.427224,-1.557487,-1.969990,-4.792087,3.801660,-9.053582,0.165181,5.772752,3.993727,-0.742475,-5.270953,1.619536,-8.474515,-9.294894,-0.067744,5.948630,0.070762,-3.615003,2.037916,1.151047,-6.869156,8.241612,-7.289585,-5.311467,-5.342188,-5.974581,-2.630486,4.692790,9.096332,-0.997264,-4.181929,3.640875,-0.247580,5.552501,0.592308,-5.026076,3.096342,1.826902,-8.925017,0.511587,4.461535,5.864393,9.658928,-2.097107,-0.204506,2.266297,-8.315153,-0.900223,-6.379002,6.069867,-6.847182,8.261761,7.413765,-7.657525,-0.755233,9.756598,4.476981,2.955637,4.957138,2.336094,6.215683,-9.517681,0.349016,-8.479284,5.930504,6.278785,9.664449,3.965225,-7.180554,-6.882961,2.234574,-7.458804,-1.144662,4.725129,2.340130,-3.950336,1.962440,2.148370,1.497710,-6.258728,3.177818,6.235093,-1.398277,6.423904,-2.267261,5.032583,4.120450,-6.221669,-5.409952,-6.958538,-6.115599,-2.186691,8.443370,-1.810540,1.001068,7.573697,4.193856,5.409953,8.618686,-0.503208,-7.937860,3.329938,3.854664,7.107490,-7.472965,4.720527,-8.742919,-6.328894,6.239971,4.876727,-7.896562,4.891999,5.437827,6.154353,-4.256396,-7.474290,-2.358671,-5.812892,0.644506,8.447342,6.736650,-5.437916,-4.477399,-9.284778,7.322228,-9.821229,-5.704883,7.595104,-5.162214,8.025597,-6.654439,0.554671,5.264423,-3.947682,0.107864,-7.503495,5.057513,3.160654,-4.367220,5.244268,2.952912,9.630822,-6.853765,9.642028,9.655182,7.699816,-4.846670,-1.572441,-6.268761,-6.372598,-7.795133,9.059973,2.659378,8.805858,-1.652052,6.834297,-3.491656,0.363366,-0.061932,4.617650,7.537004,2.356058,1.823645,-8.458999,2.406536,-6.076855,8.865894,2.109987,-8.685493,-3.087678,1.192385,-2.678405,-4.446098,-5.233833,-0.863857,8.906982,-6.210813,9.673126,-2.539264,-2.066422,-9.917914,-1.431683,-3.244555,-0.980053,-3.465817,6.659074,-9.481467,-8.895569,6.405425,1.549169,-3.257328,-8.722749,-1.719336,0.133281,5.905373,-6.664340,-3.055083,9.086734,-9.268256,4.076010,9.120780,-3.376532,-5.386154,-0.304336,-1.458894,6.740875,-9.621072,0.249336,5.916550,-4.077169,-8.829944,-0.091789,0.531653,3.691828,8.930626,-5.623149,0.961436,-5.920829,3.143125,-8.076245,1.190429,1.767023,6.001445,-6.045147,8.796734,0.533082,6.100592,-2.931741,0.116726,-2.762788,-2.154696,9.234760,0.867368,6.013813,8.672515,-4.931608,4.123704,-9.361786,4.491836,0.576051,2.814986,-6.311303,-2.270109,8.987665,5.060384,-8.619039,2.634545,3.321081,9.270139,4.390576,-8.270639,4.953492,7.714422,-0.251114,-1.375047,7.463406,-3.926670,-9.842634,-5.872691,5.423234,5.869533,5.911880,2.205677,-4.701079,9.032385,8.296276,4.885848,5.466548,8.346614,9.552603,8.254872,1.652108,5.246650,-8.327428,-4.537561,5.314417,9.592581,-2.942701,3.642508,-7.732022,-5.625713,4.487169,-8.016576,8.182545,-4.002044,-2.466311,2.609835,-5.191284,7.264206,2.152672,-5.270803,-2.647692,8.546017,-8.824875,6.771781,-5.204028,4.511267,6.444735,-9.042531,1.877619,-9.559022,1.804357,5.018848,-1.089741,-3.434677,-9.953361,-6.812807,6.455310,7.805576,-6.703650,-3.753766,4.409924,-4.377611,1.859114,1.324440,-4.132296,-8.157695,3.841245,8.662978,3.290878,3.577023,-7.086647,-4.030773,-9.864484,8.721234,-4.179929,5.872673,6.082838,-7.429871,-4.211023,4.260639,7.222720,-2.492876,-4.655318,-8.117729,-0.550750,4.869925,3.497063,-7.636523,-4.834011,4.027660,6.154209,-8.433867,-5.312658,8.682820,-6.886904,0.916885,3.523640,-5.660205,2.474437,6.963650,4.974969,-7.117386,-7.857298,-0.643262,6.951356,4.352904,-1.781890,6.235897,-6.947787,7.977848,-6.008231,3.000210,5.322662,8.214753,-8.800919,-8.959892,3.618432,6.093462,2.449155,-4.629476,4.868287,4.149095,9.221803,-4.523536,1.388190,-7.646723,3.531762,9.939524,-2.157133,4.860587,6.917003,-2.314045,8.645420,-8.026009,3.423581,4.955482,-9.250495,-5.344029,9.664921,-2.915492,-5.129783,-6.225320,-5.197237,-7.449313,-8.534168,8.332832,9.224989,6.929707,2.218216,5.392075,-0.205940,6.914436,6.829253,4.010423,8.187348,-8.526932,-4.300232,1.103102,-8.275827,6.929315,8.546369,5.055319,-2.172330,8.416089,-5.194470,-8.403976,9.835337,-8.396029,4.442434,-5.246474,1.403673,9.948812,3.012938,-7.035675,-2.525207,4.987193,-7.945458,1.157006,0.411740,4.038561,5.983377,-0.075730,7.464615,-0.422702,-5.744260,7.434252,1.073188,-8.241011,7.213995,-4.633121,-4.040850,-9.518691,-5.027147,-4.502124,-3.180362,-9.995864,3.229531,4.396258,1.022097,-8.704284,-7.460151,0.640692,-4.624104,-1.912198,-0.227072,5.059505,-0.820516,2.096055,0.890674,-9.224671,1.896678,-7.788525,-3.942551,-2.742203,2.200422,6.010740,-2.514077,6.605751,-7.282677,7.094749,-6.403549,-8.341073,-9.028279,-6.944340,2.603063,5.628157,9.810573,4.455312,4.916505,8.957620,-5.969409,-0.046623,5.045452,9.048297,-9.057424,-6.165605,-2.231436,7.945003,-4.842992,-5.692249,3.007646,6.855467,8.940820,-6.593673,-8.935181,0.560629,-7.307285,6.718264,4.861756,-5.755099,4.591191,6.389146,7.220558,-3.014492,-0.108480,6.292281,9.327966,-1.315784,6.186171,7.328435,-7.812316,4.933527,2.314724,-6.218183,0.162958,-9.055121,5.742903,-9.293190,-4.904505,-2.176023,-7.904747,-9.822901,-5.639051,-2.437259,9.005637,3.918389,4.124155,4.502785,-0.607634,8.773883,-4.150769,-4.121609,0.112299,-5.295124,-4.165120,-0.878209,-9.849956,-2.602302,7.822813,-6.105638,-9.322766,-9.750172,-0.793237,-0.607332,8.022299,2.981239,5.213519,8.267175,-5.599587,8.107665,6.512806,7.382307,-0.603897,-2.634222,8.697593,7.439415,2.078645,9.083435,2.869193,-0.035591,0.257379,-0.773544,6.185337,-7.193920,8.913750,-7.051800,9.935228,-9.639724,9.890989,-5.560103,2.627352,3.848137,6.743979,4.958989,-9.674229,-1.029453,4.146754,6.570028,-4.291544,-6.415375,9.455519,-5.591169,4.784055,-0.338773,-8.633164,0.813679,-4.114191,-0.797837,1.086170,-0.259424,6.290562,7.850273,0.046956,6.388521,-8.877993,6.652954,9.176385,4.029540,-4.241785,6.976193,-2.822972,1.438948,1.077511,-4.734427,9.710686,6.528431,2.433555,5.343390,6.620804,7.638412,-8.470569,2.256820,-7.346720,-6.691955,-4.958053,2.531350,-9.322957,-0.975099,-6.148497,-0.871299,9.391156,-2.578580,4.130619,-0.801849,2.995054,-0.476703,-6.035066,7.299998,-5.637084,-2.522126,1.631005,2.767534,-5.301796,-8.085766,2.003192,-9.789051,-0.524472,4.253071,-1.977127,-0.631832,7.897322,3.673343,-7.327118,2.874110,4.034888,9.294355,0.216893,-1.232064,-8.101547,9.674614,-4.264003,9.875674,-5.577088,-2.005505,-4.004968,-7.086413,2.119685,9.313097,-4.186235,7.265503,-5.641773,5.625298,7.434390,8.240400,-4.515939,1.174095,-0.294399,6.745984,-0.496530,5.258817,-2.058326,-3.211176,-6.634736,8.103840,-3.951604,-6.654477,0.549342,3.207858,7.601609,4.019548,9.562888,-6.550498,2.756550,-9.106075,2.097495,-5.481474,-3.436607,-0.323733,-3.725949,4.201121,-6.202200,-9.122786,4.601795,-2.735746,-1.186780,-4.125341,6.353458,-2.890451,-6.822300,-7.234072,-2.178889,2.380615,9.386101,5.961834,2.533452,2.989150,-6.771803,-9.016325,4.108965,3.083677,-3.482294,0.572924,-9.699272,-0.803172,-0.865611,1.885871,0.935471,6.828654,-9.117996,-2.674008,-5.396421,4.844427,3.988779,-5.070510,-7.264793,7.073759,-0.109595,-2.758936,-2.066876,2.408623,1.289728,9.191676,-8.129747,-8.778228,-5.664173,-5.083376,-3.136245,0.593816,6.414838,-5.419527,3.415236,-1.196647,-4.691383,0.353044,8.706047,7.693313,2.463751,5.906373,-6.523449,-2.078854,2.517954,7.856824,-5.645460,8.850843,-1.943891,4.745583,8.583273,4.825694,9.311363,-5.316717,-5.028678,2.912545,0.468170,5.251963,-6.175974,-2.149026,-8.278225,1.340182,-3.264615,0.875968,-1.549205,9.487308,-4.074517,6.931222,9.752788,8.527901,-4.521564,3.951994,6.737876,3.654287,-6.142088,6.876509,7.325261,8.560125,-5.847471,-2.674974,5.513494,-1.897020,1.760806,7.967065,-5.572271,-4.743913,-0.326622,-7.194320,-9.109549,2.450167,7.153798,9.378940,-3.282197,-7.751654,3.564510,1.153555,-9.934469,5.416181,-2.952253,-2.930769,8.103618,6.502644,-0.712871,8.106656,7.389225,3.122348,-1.142485,4.629051,1.619503,8.250095,-0.628909,-6.100504,-0.968491,-2.373410,-4.949616,4.652932,1.318447,8.236817,-7.639251,-5.712427,-1.408256,-3.162618,0.901500,7.004240,-9.824940,8.065312,1.912579,8.926473,0.113387,-9.330119,0.373061,5.183917,-5.877585,-0.592107,-2.500745,-0.596955,6.842044,0.239431,-4.449068,5.395755,2.926198,-2.346857,-3.759899,-1.879000,9.868861,-7.248289,4.562488,-4.901449,-6.692761,-5.082693,5.792458,8.888394,-5.341694,1.479876,8.086957,7.634040,-2.594863,-9.392880,5.234694,-1.364338,7.096408,4.167782,0.575179,9.012867,0.412735,-3.756730,-4.282148,7.054886,-3.928198,-7.885715,7.181946,-7.439839,3.137991,0.680306,3.904058,5.003735,-1.288250,3.059327,-2.965252,4.299440,2.079484,1.318527,-8.557348,-5.320568,1.864261,-8.654346,-1.537632,-0.932949,2.759019,-4.538674,-1.330129,-1.084539,2.316546,-2.397688,-3.306942,7.523289,5.429665,6.394754,3.020608,-6.422450,-2.883100,8.655392,1.200130,-2.255747,7.690232,4.151060,6.496533,-0.965184,-6.913575,-6.809164,6.914735,-7.135556,-1.440208,-3.398289,7.780466,9.386826,5.817460,-7.234824,-8.140509,-6.607043,2.092449,2.008848,7.610660,6.765390,-2.470934,-7.660420,2.284759,-6.995862,-4.168945,7.022760,9.706856,-0.627021,-8.318161,1.636712,6.928317,-9.878959,-0.215556,9.696717,-5.394967,1.788277,1.953913,-1.331687,-1.815923,-0.697388,0.441617,-8.916237,-2.116496,5.690459,8.577810,-9.542139,-2.305125,2.045769,-5.191076,-4.996438,-8.061141,-9.400677,6.406620,-9.428583,1.513557,4.712559,7.109776,-1.035724,-6.037698,-0.760878,-1.522252,-0.633909,2.865515,4.805262,4.217572,-5.326223,7.849634,6.273447,5.956480,-5.260030,-4.005841,9.897536,4.157597,-4.817250,-9.525207,7.447886,3.837795,7.006924,-1.393717,-5.152365,2.726060,0.145904,9.502444,5.114433,-3.722229,-4.808122,9.136790,-3.059578,3.933936,-8.055174,1.907556,-9.689172,-9.683263,-4.373744,8.514607,-7.955077,7.592475,6.411194,-5.588241,-5.894886,6.716200,1.325051,-5.091683,7.694130,-3.771783,2.389217,-5.854621,-8.403797,-1.679490,4.590969,-3.243069,-9.950672,4.883763,-8.187964,-4.646626,-5.686429,7.857888,1.282796,-4.474748,7.968566,-1.128675,-0.876502,6.930659,6.137340,0.445769,3.830901,-8.415737,-8.584306,5.135411,3.434372,4.161109,7.780953,-6.084832,-4.483783,-9.858063,7.832571,2.922397,2.410069,6.659088,-3.338835,4.428915,-7.723566,7.408141,4.153672,7.962084,-3.367033,-0.420944,-4.346818,-8.895130,6.323171,-8.950807,-8.134656,7.391125,-4.797886,-0.820039,2.569624,-0.027492,-8.059344,-3.725807,4.399024,-3.180210,-6.740508,8.800349,1.600616,-3.674463,-7.145659,-9.993998,-3.525895,-3.125580,-2.575785,1.275010,-4.275276,7.585421,4.781632,-4.725330,4.156556,-4.313068,-7.527537,-2.522917,-5.754307,-3.079951,-5.406702,5.771190,-7.936662,8.443448,-2.572338,4.733671,0.597505,2.715227,-2.465997,6.356371,9.213411,-5.484180,2.822617,3.698712,8.303359,2.411692,-0.539730,-7.345397,-6.629207,2.003040,-7.412369,-3.363428,9.373162,-1.979122,0.737296,-7.661053,8.375423,-9.379632,8.029546,-7.417370,-6.800493,-7.283169,-7.932527,4.526485,0.852843,-3.325902,4.500478,9.959412,-9.086696,4.577466,9.392455,-3.329271,-9.461700,7.879958,1.652418,-6.314160,0.346303,-7.119600,2.116777,3.876475,7.003162,-5.166234,-5.672539,6.483253,3.023294,-0.609793,-2.327129,4.885278,-6.844008,6.341424,4.640169,4.382934,-6.796478,-1.985636,4.207816,-8.136915,7.372738,-5.069131,-3.573898,2.639503,-1.286004,-2.285639,-7.658574,0.799564,9.228548,-2.486011,-9.739070,3.735819,-2.258452,-7.857785,5.686313,-4.403233,0.141415,-0.111257,-8.956101,3.041665,-4.719377,-3.028504,7.803143,7.815553,-0.008743,0.853084,7.432671,9.038688,6.843087,5.818462,1.764068,5.160716,-4.716371,-3.782565,1.182479,5.716608,-7.381281,3.958332,5.518265,-7.816866,-6.897141,-3.964478,-3.873276,3.967319,3.142151,7.853458,-4.481530,4.022603,-2.194331,-0.615282,5.443475,6.619971,5.184379,-0.889431,9.508419,-9.983666,-6.459615,3.232311,-8.546021,-8.612077,-1.640475,-9.745062,4.106115,0.881206,-4.508015,3.586272,-3.878837,1.772720,9.168076,-9.568705,-7.281510,8.171500,-6.247789,7.871856,9.337073,-3.528186,6.751054,5.005625,6.267535,0.830167,-1.794532,7.963886,1.896520,-6.409600,-5.215312,-6.135063,3.763035,-6.348972,-6.301260,-1.151510,7.061389,0.674169,-1.029333,9.864762,-4.068097,9.489130,-7.279029,8.803549,0.174342,-3.489449,-6.424484,-6.212061,-0.888560,3.224319,-7.559467,1.143683,5.826929,5.337741,4.951938,0.130997,8.273145,-1.832276,3.780156,4.160964,3.309501,1.541551,-6.049019,8.788932,-5.139629,-8.406186,-5.375370,-5.629749,-1.670938,1.718414,6.373295,7.069069,7.844331,-1.571849,6.951829,1.329389,2.072734,1.143549,-4.800159,7.710765,3.032151,-2.075619,2.035650,2.064593,-5.261578,7.382001,4.543675,-2.905681,-9.591476,-8.573240,-9.030018,-0.334117,-3.490814,-5.308954,-0.563968,0.986279,0.201290,2.353371,-3.958620,-5.150704,-4.423789,-7.331933,0.704128,-4.434845,4.463441,3.595155,1.365872,-5.518451,2.586334,-7.405079,-2.149554,-1.421752,4.009495,-1.508358,-0.065427,-9.418004,-3.266968,0.602769,7.771911,5.335213,-0.020541,8.346413,-6.984255,2.874540,-6.962061,0.449509,8.630854,-6.933709,3.903554,-5.622966,8.699207,-4.212736,-9.823526,5.905530,-3.056893,-2.530349,-4.156451,-3.195361,2.436126,-1.470952,3.643245,-5.413755,3.759676,-2.372806,0.157163,4.056548,5.710977,-0.048107,6.510457,-0.227748,-2.817359,-8.943303,-6.345848,4.876403,-7.040257,9.997210,6.650563,-7.531963,-7.468094,-7.792596,6.482484,-1.263698,9.723492,-1.948555,3.978724,-9.910063,-7.200411,-6.408043,7.428041,-8.453140,6.273373,-4.154906,-1.122140,-2.376886,2.838286,-7.312221,-0.364149,4.200920,-4.498925,-0.146525,-6.161829,6.880184,8.208523,5.089527,-2.626843,-6.903645,5.416253,-9.313994,6.967009,-9.958699,2.030312,6.736194,-3.248425,-8.005352,8.249347,-2.218672,7.432339,-5.460271,3.952342,-1.202140,1.263211,3.774623,5.253593,-7.932638,-2.402901,6.256156,-9.808741,3.885093,4.861031,3.305397,-4.730239,2.933167,0.250970,-2.938995,6.832270,-5.239881,5.289289,-8.878198,-7.639388,6.569431,7.459352,-0.576413,-7.879130,-6.863999,8.065775,-8.496362,8.657139,-9.829095,9.390447,7.650872,5.735415,7.750221,-1.119591,6.464540,9.640924,8.570639,6.143909,-0.536828,-0.208194,6.877387,-4.338070,5.939955,2.359368,-5.868045,7.351510,-3.925069,-2.674194,9.505446,8.329847,5.698812,-1.832237,5.096987,-4.338995,7.585254,0.607071,7.577623,-0.565341,0.713136,-1.221441,-4.148818,-7.813455,-9.883711,-1.666325,8.824772,-2.540545,-0.989606,4.885657,-3.199489,6.851274,-8.278503,-4.484810,-4.286361,4.580026,1.578491,-3.306543,4.239118,-5.058222,1.570758,5.699681,-4.146283,9.347000,-9.337475,-9.367063,-5.563895,-8.766914,-1.657960,-0.239800,9.416466,3.565747,7.483287,-6.837801,-9.277601,-1.560891,-5.952944,-2.496799,9.827296,6.569876,-5.276240,-3.026920,-1.153893,-9.441164,-3.762478,9.252493,-1.484548,-8.797707,-9.431518,-0.964344,2.931940,-3.382310,-3.903837,-8.852992,-3.646238,-9.379334,2.270514,-2.863356,4.062119,5.162217,4.505937,-7.625151,1.359399,-8.728690,0.110114,-6.892103,0.233354,-3.627494,9.507065,-1.910439,3.738109,-6.602707,8.653604,-1.799500,7.029783,-0.344219,-7.417310,-3.538669,5.100615,-6.344424,5.251206,0.711901,3.241458,3.388918,-8.870769,8.559672,-8.899196,0.105733,-2.877337,-4.194240,7.110315,-6.695379,2.849100,9.431095,5.649087,-1.752945,-0.738103,-2.188285,9.407239,-8.556673,8.051088,0.926514,8.024780,6.065091,-8.812841,-1.439512,8.313484,-7.207301,3.354531,5.778806,2.472843,-5.983683,-5.675475,0.259801,-4.032338], dtype = "float32")#candidate|4047|(2400,)|const|float32
const_4048 = relay.const(7, dtype = "uint16")#candidate|4048|()|const|uint16
call_4045 = relay.TupleGetItem(func_3681_call(relay.reshape(const_4046.astype('float64'), [11, 1, 9]), relay.reshape(const_4047.astype('float32'), [2400,]), relay.reshape(const_4048.astype('uint16'), []), ), 4)
call_4049 = relay.TupleGetItem(func_3685_call(relay.reshape(const_4046.astype('float64'), [11, 1, 9]), relay.reshape(const_4047.astype('float32'), [2400,]), relay.reshape(const_4048.astype('uint16'), []), ), 4)
func_3101_call = mod.get_global_var('func_3101')
func_3103_call = mutated_mod.get_global_var('func_3103')
call_4051 = relay.TupleGetItem(func_3101_call(relay.reshape(const_4047.astype('float32'), [16, 15, 10])), 0)
call_4052 = relay.TupleGetItem(func_3103_call(relay.reshape(const_4047.astype('float32'), [16, 15, 10])), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4054 = func_3976_call()
call_4055 = func_3976_call()
output = relay.Tuple([uop_4024,call_4030,var_4031,var_4032,call_4045,const_4046,const_4047,const_4048,call_4051,call_4054,])
output2 = relay.Tuple([uop_4026,call_4033,var_4031,var_4032,call_4049,const_4046,const_4047,const_4048,call_4052,call_4055,])
func_4056 = relay.Function([var_4031,var_4032,], output)
mod['func_4056'] = func_4056
mod = relay.transform.InferType()(mod)
var_4057 = relay.var("var_4057", dtype = "float64", shape = (7, 117))#candidate|4057|(7, 117)|var|float64
var_4058 = relay.var("var_4058", dtype = "uint32", shape = (1, 70))#candidate|4058|(1, 70)|var|uint32
output = func_4056(var_4057,var_4058,)
func_4059 = relay.Function([var_4057,var_4058,], output)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_4081 = func_3868_call()
call_4082 = func_3868_call()
uop_4083 = relay.cosh(call_4081.astype('float64')) # shape=(11, 4, 10)
uop_4085 = relay.cosh(call_4082.astype('float64')) # shape=(11, 4, 10)
output = uop_4083
output2 = uop_4085
func_4086 = relay.Function([], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mutated_mod.get_global_var('func_4086')
call_4087 = func_4086_call()
output = call_4087
func_4088 = relay.Function([], output)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4093 = relay.var("var_4093", dtype = "uint32", shape = (7, 11, 1))#candidate|4093|(7, 11, 1)|var|uint32
var_4094 = relay.var("var_4094", dtype = "uint32", shape = (7, 11, 7))#candidate|4094|(7, 11, 7)|var|uint32
bop_4095 = relay.minimum(var_4093.astype('uint32'), var_4094.astype('uint32')) # shape=(7, 11, 7)
output = relay.Tuple([bop_4095,])
output2 = relay.Tuple([bop_4095,])
func_4113 = relay.Function([var_4093,var_4094,], output)
mod['func_4113'] = func_4113
mod = relay.transform.InferType()(mod)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4113_call = mutated_mod.get_global_var('func_4113')
var_4115 = relay.var("var_4115", dtype = "uint32", shape = (7, 11, 1))#candidate|4115|(7, 11, 1)|var|uint32
var_4116 = relay.var("var_4116", dtype = "uint32", shape = (7, 11, 7))#candidate|4116|(7, 11, 7)|var|uint32
call_4114 = func_4113_call(var_4115,var_4116,)
output = call_4114
func_4117 = relay.Function([var_4115,var_4116,], output)
mutated_mod['func_4117'] = func_4117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4124 = relay.var("var_4124", dtype = "float32", shape = (11, 7, 5))#candidate|4124|(11, 7, 5)|var|float32
uop_4125 = relay.cos(var_4124.astype('float32')) # shape=(11, 7, 5)
func_490_call = mod.get_global_var('func_490')
func_495_call = mutated_mod.get_global_var('func_495')
const_4129 = relay.const([-5,-3,6,7,-2,-5,-7,8,-9,9,-5,5,-1,-1,2,10,-6,-8,3,-6,-10,-5,-9,2,3,-5,-2,-8,5,3,-5,5,-3,2,10,10,-8,7,-9,-7,-2,1,-5,8,-6,7,1,-3,-5,-2,-4,5,9,-3,-2,-1,3,8,-10,-7,-7,-10,-4,-5,-9,-4,-1,-8,10,9,10,-6,-9,-10,-1,7,-9,6,-9,2,10,-2,-4,3,10,6,1,2,6,-1,6,3,-3,9,-2,10,7,-4,10,5,-1,-9,-4,-4,-2,-7,3,4,-9,-7,-5,4,9,-5,5,-3,2,1,-5,-6,8,-5,-3,6,-3,-2,2,-2,-4,-3,6,7,8,-4,3,-9,-3,-1,-5,-8,-9,-7,-8,3,-6,3,10,8,10,-2,1,-3,6,-9], dtype = "uint32")#candidate|4129|(154,)|const|uint32
var_4130 = relay.var("var_4130", dtype = "uint32", shape = (70,))#candidate|4130|(70,)|var|uint32
call_4128 = relay.TupleGetItem(func_490_call(relay.reshape(const_4129.astype('uint32'), [7, 11, 2]), relay.reshape(const_4129.astype('uint32'), [7, 11, 2]), relay.reshape(var_4130.astype('uint32'), [14, 5]), ), 0)
call_4131 = relay.TupleGetItem(func_495_call(relay.reshape(const_4129.astype('uint32'), [7, 11, 2]), relay.reshape(const_4129.astype('uint32'), [7, 11, 2]), relay.reshape(var_4130.astype('uint32'), [14, 5]), ), 0)
output = relay.Tuple([uop_4125,call_4128,const_4129,var_4130,])
output2 = relay.Tuple([uop_4125,call_4131,const_4129,var_4130,])
func_4153 = relay.Function([var_4124,var_4130,], output)
mod['func_4153'] = func_4153
mod = relay.transform.InferType()(mod)
var_4154 = relay.var("var_4154", dtype = "float32", shape = (11, 7, 5))#candidate|4154|(11, 7, 5)|var|float32
var_4155 = relay.var("var_4155", dtype = "uint32", shape = (70,))#candidate|4155|(70,)|var|uint32
output = func_4153(var_4154,var_4155,)
func_4156 = relay.Function([var_4154,var_4155,], output)
mutated_mod['func_4156'] = func_4156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3621_call = mod.get_global_var('func_3621')
func_3623_call = mutated_mod.get_global_var('func_3623')
call_4158 = relay.TupleGetItem(func_3621_call(), 0)
call_4159 = relay.TupleGetItem(func_3623_call(), 0)
output = call_4158
output2 = call_4159
func_4168 = relay.Function([], output)
mod['func_4168'] = func_4168
mod = relay.transform.InferType()(mod)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mutated_mod.get_global_var('func_4168')
call_4169 = func_4168_call()
output = call_4169
func_4170 = relay.Function([], output)
mutated_mod['func_4170'] = func_4170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_4171 = func_4086_call()
call_4172 = func_4086_call()
var_4173 = relay.var("var_4173", dtype = "float64", shape = (11, 4, 10))#candidate|4173|(11, 4, 10)|var|float64
bop_4174 = relay.mod(call_4171.astype('float32'), relay.reshape(var_4173.astype('float32'), relay.shape_of(call_4171))) # shape=(11, 4, 10)
bop_4177 = relay.mod(call_4172.astype('float32'), relay.reshape(var_4173.astype('float32'), relay.shape_of(call_4172))) # shape=(11, 4, 10)
output = bop_4174
output2 = bop_4177
func_4205 = relay.Function([var_4173,], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4206 = relay.var("var_4206", dtype = "float64", shape = (11, 4, 10))#candidate|4206|(11, 4, 10)|var|float64
func_4205_call = mutated_mod.get_global_var('func_4205')
call_4207 = func_4205_call(var_4206)
output = call_4207
func_4208 = relay.Function([var_4206], output)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_4248 = func_4168_call()
call_4249 = func_4168_call()
output = relay.Tuple([call_4248,])
output2 = relay.Tuple([call_4249,])
func_4250 = relay.Function([], output)
mod['func_4250'] = func_4250
mod = relay.transform.InferType()(mod)
output = func_4250()
func_4251 = relay.Function([], output)
mutated_mod['func_4251'] = func_4251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_4274 = func_3566_call()
call_4275 = func_3566_call()
const_4295 = relay.const([[[-9,-10,1,5,-5,9,7,4,6,3],[8,-10,-10,7,-9,-3,-5,5,-5,9],[-1,1,-2,4,-7,-3,-1,-6,-10,-5],[9,-5,-3,2,3,9,2,3,-7,3]],[[4,-10,1,-5,1,7,-10,-8,-7,2],[-4,5,10,-9,5,-10,-9,5,6,-10],[2,7,-4,-4,7,-2,-6,4,-4,-3],[-6,1,1,5,8,4,-3,-1,-8,-7]],[[-4,6,5,-7,3,-10,-3,4,7,-3],[3,6,-10,6,-5,-3,-1,8,-10,-6],[3,2,7,1,-5,10,10,7,-4,-8],[-3,7,-1,-1,7,4,5,5,-3,-7]],[[-9,-6,4,10,6,8,-2,-5,-7,-6],[6,-4,7,3,8,-8,-9,-7,-10,3],[-9,-5,-6,-6,9,-9,1,7,3,-9],[2,-9,4,3,4,-9,-9,-4,9,9]],[[-9,4,-10,-9,5,-5,5,-7,9,-2],[8,-8,10,-1,1,6,6,1,2,-10],[-7,-3,10,-9,2,4,7,-6,-5,3],[-4,-7,8,8,-7,9,7,4,4,8]],[[7,5,-5,10,-5,-5,1,-3,1,2],[-2,-2,5,-6,-3,6,-6,3,-1,3],[-5,8,2,6,-3,-1,-1,3,3,6],[6,6,-2,-5,-4,-10,-9,-7,-10,-4]],[[3,-7,2,-10,-3,-9,-8,-3,5,-5],[6,-8,-4,8,9,-8,-9,5,-8,4],[-1,10,-7,-10,-1,-1,-2,4,3,-1],[-3,-5,5,2,6,3,-1,9,-8,-2]],[[5,5,-4,5,-10,2,-5,-6,8,2],[-5,3,1,-8,10,5,-3,5,1,7],[-4,7,-5,-10,10,-8,10,-5,-3,8],[-10,1,7,-3,3,2,-8,-9,-9,-5]],[[-2,7,4,2,2,-3,5,10,-7,10],[4,9,8,-4,-8,7,-3,3,6,-7],[5,3,-1,2,7,-1,-4,2,10,-9],[6,-10,2,-8,-9,7,4,-6,4,-4]],[[1,-9,-6,7,8,6,-3,2,-10,-6],[-7,4,4,4,-9,-8,-6,5,9,-9],[9,-10,2,10,4,10,10,1,-6,-1],[-7,-7,-7,6,6,4,1,-8,5,4]],[[3,-3,7,-6,-2,8,-7,2,-9,1],[-4,-1,-6,-9,-8,-4,-4,-3,-2,-4],[9,2,8,9,2,3,4,2,-2,2],[-1,-10,-3,10,5,8,5,-7,5,10]]], dtype = "int32")#candidate|4295|(11, 4, 10)|const|int32
bop_4296 = relay.logical_xor(call_4274.astype('uint16'), relay.reshape(const_4295.astype('uint16'), relay.shape_of(call_4274))) # shape=(11, 4, 10)
bop_4299 = relay.logical_xor(call_4275.astype('uint16'), relay.reshape(const_4295.astype('uint16'), relay.shape_of(call_4275))) # shape=(11, 4, 10)
output = bop_4296
output2 = bop_4299
func_4313 = relay.Function([], output)
mod['func_4313'] = func_4313
mod = relay.transform.InferType()(mod)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mutated_mod.get_global_var('func_4313')
call_4314 = func_4313_call()
output = call_4314
func_4315 = relay.Function([], output)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4322 = relay.var("var_4322", dtype = "float64", shape = (1, 13, 12))#candidate|4322|(1, 13, 12)|var|float64
uop_4323 = relay.sin(var_4322.astype('float64')) # shape=(1, 13, 12)
output = uop_4323
output2 = uop_4323
func_4328 = relay.Function([var_4322,], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4329 = relay.var("var_4329", dtype = "float64", shape = (1, 13, 12))#candidate|4329|(1, 13, 12)|var|float64
func_4328_call = mutated_mod.get_global_var('func_4328')
call_4330 = func_4328_call(var_4329)
output = call_4330
func_4331 = relay.Function([var_4329], output)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_4374 = func_3566_call()
call_4375 = func_3566_call()
uop_4387 = relay.log10(call_4374.astype('float32')) # shape=(11, 4, 10)
uop_4389 = relay.log10(call_4375.astype('float32')) # shape=(11, 4, 10)
output = uop_4387
output2 = uop_4389
func_4392 = relay.Function([], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
mutated_mod['func_4392'] = func_4392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mutated_mod.get_global_var('func_4392')
call_4393 = func_4392_call()
output = call_4393
func_4394 = relay.Function([], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4427 = func_3976_call()
call_4428 = func_3976_call()
func_2511_call = mod.get_global_var('func_2511')
func_2513_call = mutated_mod.get_global_var('func_2513')
const_4446 = relay.const([4.727843,4.619162,0.335065,8.591453,-3.722621,6.662476,8.297290,6.423584,-8.169937,-6.574134,7.201708,-1.456773,-9.970124,-9.095281,7.190514,-4.251925,8.587975,3.271693,7.314976,-0.456907,-3.138074,-8.298106,-5.402592,5.830040,4.038472,0.647024,-2.366657,1.004599,3.407541,-4.057459,-2.607210,-5.760785,6.071221,4.953880,-3.242388,-5.286729,1.343229,-2.905900,-2.498752,-3.547769,-7.540520,-0.751376,6.019572,9.489002,7.015275,-1.720454,-0.281965,3.322194,-8.071914,-5.020239,-9.210027,9.074254,-6.874128,6.199667,0.343302,-1.915643,-3.927429,-4.255499,-8.493213,-0.269237,-6.212408,-6.725028,6.654015,-5.235487,-6.250425,-6.364648,7.559862,-8.353861,-1.300040,4.621062,-9.018490,8.438967,-6.269766,-0.656022,7.598976,4.799031,6.954238,-5.889717,0.615595,-2.450018,2.681058,4.539845,5.191777,-5.819313,4.662146,8.468861,-0.328410,-2.011453,1.148131,2.128697,-2.820893,-8.540240,-0.097291,-3.420473,8.282653,6.505862,-4.270528,4.459145,9.833777,4.949984,6.373776,-0.423318,4.059922,8.405614,7.390276,1.516736,9.060690,-2.107693,-1.413043,1.863129,6.170004,-5.332270,3.087592,1.306815,-2.667070,-3.299965,-6.015080,0.950844,5.522521,-8.558880,3.368133,-3.425700,8.283780,9.076562,-0.747038,1.346394,5.721707,5.883658,0.724448,4.141831,3.200736,-2.924725,-4.924906,6.698842,-7.775063,7.889210,6.404951,-7.245651,-1.126076,-4.517452,-8.789754,-5.018179,4.103251,0.407927,7.982075,-4.801376,-9.167782,-6.274298,-9.255397,-8.063435,8.837705,8.419920,-2.655941,8.096004,4.815780,3.252205,9.835234,7.075811,5.898415,8.490629,-6.353877,1.572163,-1.429450,8.969705,2.018266,8.860070,1.584730,4.123309,-7.752999,-5.101297,-8.807833,-9.966756,-9.768935,-4.402311,-5.756310,-5.204448,-6.563749,5.750869,3.996064,6.311145,-8.436480,3.921998,1.352296,9.650637,9.446292,4.644768,8.804981,3.100306,-0.751529,9.424300,0.410082,3.620549,7.910852,4.851164,0.904119,5.971668,4.682895,-3.771117,8.441662,3.573627,5.001896,-6.090422,-8.488838,-0.962532,-9.032215,3.109194,8.551573,9.525257,5.519736,9.781287,0.491693,-0.641016,9.105915,-1.854718,8.151536,1.112632,-1.482743,3.005618,1.472363,6.159242,-5.262008,-6.390367,6.932865,-7.502996,-3.794277,-0.367702,6.447821,-3.827011,5.710003,8.833485,-0.380320,8.828596,2.225123,2.030606,8.368712,-2.426728,9.908192,2.567895,-5.766096,2.967491,-3.971893,-7.916955,4.093229,-0.042412,3.831000,6.585402,9.117316,8.366918,0.693423,2.169915,9.523570,-8.806641,-2.027422,-9.594714,-9.654704,3.037759], dtype = "float32")#candidate|4446|(256,)|const|float32
call_4445 = relay.TupleGetItem(func_2511_call(relay.reshape(const_4446.astype('float32'), [16, 16])), 0)
call_4447 = relay.TupleGetItem(func_2513_call(relay.reshape(const_4446.astype('float32'), [16, 16])), 0)
func_3737_call = mod.get_global_var('func_3737')
func_3742_call = mutated_mod.get_global_var('func_3742')
var_4458 = relay.var("var_4458", dtype = "int32", shape = (495,))#candidate|4458|(495,)|var|int32
var_4459 = relay.var("var_4459", dtype = "uint32", shape = (154,))#candidate|4459|(154,)|var|uint32
const_4460 = relay.const([10,-4,2,1,6,9,1,-10], dtype = "uint16")#candidate|4460|(8,)|const|uint16
call_4457 = relay.TupleGetItem(func_3737_call(relay.reshape(var_4458.astype('int32'), [5, 9, 11]), relay.reshape(var_4459.astype('uint32'), [22, 7]), relay.reshape(const_4460.astype('uint16'), [8,]), ), 6)
call_4461 = relay.TupleGetItem(func_3742_call(relay.reshape(var_4458.astype('int32'), [5, 9, 11]), relay.reshape(var_4459.astype('uint32'), [22, 7]), relay.reshape(const_4460.astype('uint16'), [8,]), ), 6)
output = relay.Tuple([call_4427,call_4445,const_4446,call_4457,var_4458,var_4459,const_4460,])
output2 = relay.Tuple([call_4428,call_4447,const_4446,call_4461,var_4458,var_4459,const_4460,])
func_4466 = relay.Function([var_4458,var_4459,], output)
mod['func_4466'] = func_4466
mod = relay.transform.InferType()(mod)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4466_call = mutated_mod.get_global_var('func_4466')
var_4468 = relay.var("var_4468", dtype = "int32", shape = (495,))#candidate|4468|(495,)|var|int32
var_4469 = relay.var("var_4469", dtype = "uint32", shape = (154,))#candidate|4469|(154,)|var|uint32
call_4467 = func_4466_call(var_4468,var_4469,)
output = call_4467
func_4470 = relay.Function([var_4468,var_4469,], output)
mutated_mod['func_4470'] = func_4470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4531 = relay.var("var_4531", dtype = "float64", shape = (5, 13, 7))#candidate|4531|(5, 13, 7)|var|float64
uop_4532 = relay.sin(var_4531.astype('float64')) # shape=(5, 13, 7)
func_3212_call = mod.get_global_var('func_3212')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_4535 = relay.var("var_4535", dtype = "float64", shape = (1008,))#candidate|4535|(1008,)|var|float64
call_4534 = func_3212_call(relay.reshape(var_4535.astype('float64'), [6, 12, 14]), relay.reshape(var_4535.astype('float64'), [6, 12, 14]), )
call_4536 = func_3212_call(relay.reshape(var_4535.astype('float64'), [6, 12, 14]), relay.reshape(var_4535.astype('float64'), [6, 12, 14]), )
func_1202_call = mod.get_global_var('func_1202')
func_1207_call = mutated_mod.get_global_var('func_1207')
var_4545 = relay.var("var_4545", dtype = "float64", shape = (36, 14))#candidate|4545|(36, 14)|var|float64
const_4546 = relay.const(4, dtype = "uint16")#candidate|4546|()|const|uint16
const_4547 = relay.const([4,5,-3,-3,-4,-4,2,4], dtype = "uint16")#candidate|4547|(8,)|const|uint16
call_4544 = relay.TupleGetItem(func_1202_call(relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(const_4546.astype('uint16'), []), relay.reshape(const_4547.astype('uint16'), [8,]), ), 2)
call_4548 = relay.TupleGetItem(func_1207_call(relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(const_4546.astype('uint16'), []), relay.reshape(const_4547.astype('uint16'), [8,]), ), 2)
func_3486_call = mod.get_global_var('func_3486')
func_3490_call = mutated_mod.get_global_var('func_3490')
const_4556 = relay.const([-5.415310,1.203971,-4.627258,-5.898874,7.155509,4.548719,-8.099536,1.812501,-7.324119,8.149623,-2.569014,0.373234,4.510712,-9.940238,-4.655173,-3.474397,-3.673671,7.250778,8.535537,9.072421,-2.230148,-3.087383,-5.938798,-2.882144,4.660108,1.761476,4.143785,0.024827,-4.350214,4.091906,8.739043,6.411676,7.352893,-9.640239,4.894209,1.036546,-4.612308,-8.457486,6.977006,8.022919,-6.411816,8.499928,-9.196707,-9.733768,-9.368829,0.490531,-2.792945,0.529009,2.179360,-8.900697,1.995130,-8.622129,5.993158,6.101307,-8.395393,-6.812019,6.956775,-6.140872,-4.066162,-6.774247,-7.956102,-6.294168,3.994234,-9.776669,-5.481733,0.290802,-4.879491,0.585060,-5.856424,1.050657,-5.326510,-8.403238,8.442361,0.696770,4.448005,-8.592075,1.357374,-0.871141,7.353644,-7.586233,-6.249485,2.200743,0.305925,-4.826629,5.040623,-1.720061,5.360701,-8.699713,7.870228,4.416371,6.481510,-9.852903,-3.754803,5.567075,0.357453,7.524103,6.091958,6.250783,-3.483054,4.089781,6.178648,2.679333,-8.850378,4.338353,4.574714,-8.078329,-4.488979,4.790969,-7.864359,-6.250537,-9.745247,5.011470,7.377225,3.727144,-9.628262,9.354872,-3.402752,9.056903,-2.900482,9.582625,2.265492,5.900732,-3.265850,-0.031070,4.854103,0.051995,3.645747,-3.192317,1.832446,-4.416927,-8.200497,6.817786,-9.386040,4.475480,3.861378,-1.073336,-6.722632,-1.100536,-0.833845,3.066910,-1.412980,-0.484869,6.289882,-8.076625,-7.435680,9.076279,-3.164766,9.847209,4.612985,-3.644744,1.830426,6.802077,-9.621319,7.533742,-9.973418,-6.227637,5.747883,-3.050060,6.161462,0.723855,7.686736,-7.047719,8.609963,-9.356317,-0.508176,0.290460,0.362720,-9.584443,-9.841864,9.038356,-3.606943,1.357466,-1.271700,9.207601,-2.806021,0.114450,7.838782,-9.566016,4.452183,7.784310,2.821229,-0.167618,2.490494,-7.360736,-0.085962,-8.063404,7.299367,-1.663207,-5.575743,-1.908996,-4.298235,-9.423309,1.590893,-5.110409,-0.642454,4.329742,-2.238790,-2.739257,-0.564052,9.162770,-7.221535,3.694654,-4.020219,3.443106,4.596904,0.473741,0.460888,3.477493,-3.482415,-5.434310,5.130779,-7.205623,8.250982,9.495648,2.568879,-2.425774,5.116971,-0.174978,7.642778,-7.920806,7.178607,-4.253928,6.735822,9.851856,6.798530,-8.823569,7.689329,-6.893015,-4.343932,-7.417434,-1.082658,1.807678,9.189624,8.943927,-0.017266,3.192939,-4.982068,-8.873112,-0.483923,1.924025,3.532031,-0.778767,7.138489,0.341972,5.786593,6.205054,-2.806232,7.433761,-2.637226,-5.872803,-8.261770,-7.611721,4.528810,-0.146811,5.222172,3.270127,-0.487995,2.643508,-7.085131,9.797078,1.333371,-1.013648,1.186236,0.448249,-0.474633,-2.239232,9.987770,8.201513,-8.043739,-1.444716,-2.312600,-1.153762,-8.846646,-9.819187,2.266909,-1.293836,-7.536149,-4.856612,-3.923033,-5.450798,-4.006258,4.541686,8.025975,-7.631306,-8.964321,3.364852,1.834738,7.850685,-0.637116,-3.605190,4.459895,-0.313653,2.880034,-1.468401,-3.594763,6.183359,6.539754,-4.890660,3.180298,-5.854168,-1.629579,-9.514647,-8.114618,0.940489,1.121571,-0.826421,-5.615215,7.769246,8.568656,0.088255,-7.951111,-7.593177,6.082532,-5.299582,-6.281803,-2.723787,3.924477,-2.117878,1.964796,-4.635385,9.262262,4.137794,8.416896,-9.838361,-4.823258,-6.588695,-7.114914,3.146884,5.988797,-2.040181,-8.507612,-2.847518,-3.784288,8.926147,-0.130611,-6.336904,-1.052305,6.545098,-4.470823,5.722077,0.156456,8.869812,-2.901851,8.608815,6.726632,6.381567,1.896055,1.368305,-5.820075,0.518750,-9.807387,6.457097,1.660495,-7.961523,-5.224163,0.976516,2.445400,4.311963,7.886178,4.010632,-0.950193,-8.144812,3.426060,9.358001,6.821713,-9.337539,2.761775,-2.723201,1.049544,-8.186146,-0.241944,8.280278,9.753700,-3.415273,-1.009583,6.912487,-0.285667,-6.726984,4.598485,-8.781164,-3.793712,-9.995136,-6.873718,-1.207272,8.847060,2.777902,-7.396719,8.280304,6.947169,-2.014455,3.155639,-2.277243,-5.297734,6.404083,6.644821,-5.531285,7.041182,7.436332,0.296774,5.534050,-4.137474,9.946963,3.780541,-2.180745,-5.094094,-7.966469,-6.451177,0.324109,5.058865,-6.566461,-0.798881,-9.506857,5.003639,4.793197,-9.869211,4.484047,4.639037,9.243514,7.853901,6.010528,6.555854,-1.491156,5.989898,-0.727774,-9.521082,8.669701,3.466623,-9.845926,6.271891,9.554761,-5.570130,-1.655838,5.905272,8.857756,-5.740411,-8.378162,-8.527085,3.999724,0.682670,1.302033,9.193914,-5.118324,-0.710235,1.551197,9.965762,6.269957,-4.117703,1.987070,-7.759470,-2.518498,-9.122738,-0.803423,4.465551,-5.951408,2.913225,3.856203,-3.087248,7.799336,-9.055461,-2.915287,7.628920,-6.451889,6.094839,-0.983707,-2.729548,-8.980139,5.422634,8.366243,1.191169,5.692864,1.125458,3.156613,5.681881,8.178741,4.225396,1.693877,5.890920,-6.473270,6.829263,-1.146440,-1.034254,-8.309550,6.581364,-7.132734,1.179859,0.793322,-4.730262,-1.264215,0.620929,-7.561301,2.713989,-0.529249,1.536905,-1.642634,2.890676,-7.615263,6.311841,2.026695,-9.799143,8.634865,-2.162404,4.436083,4.789995,-5.457802,1.938489,-6.512971,-5.341920,9.008998,7.469025,-1.457599,9.053936,-3.413633,-2.805215,2.706544,-7.962264,-2.646738,-2.026596,3.592760,-1.536940,-5.263252,-6.040522,-9.686774,5.790276,-5.229903,6.019230,5.842014,5.564920,-1.971922,-0.864989,0.142749,-3.039063,3.638960,7.011006,3.979029,-5.195105,3.725366,-6.806486,1.420967,3.029970,-1.708912,-3.237858,6.422458,-0.744628,6.074316,-6.155883,9.274162,0.905833,5.501748,5.775275,-8.632805,-9.340998,2.535739,5.609958,7.231236,-0.205473,-9.436777,1.172853,4.216099,9.557810,-1.163956,8.253356,-2.415986,-9.969297,5.519955,-4.195798,5.780024,8.469561,8.848625,2.210651,5.169693,9.023832,3.213960,-5.062191,-6.174378,2.617938,3.733843,-8.531906,2.976753,2.727264,-0.447245,-3.011645,-2.179977,-7.472058,1.838626,-1.571618,-7.024348,-3.678955,6.968313,-1.755937,-5.834507,-5.347473,-0.372974,9.530276,-5.458491,-4.466986,9.366631,-7.778354,-5.769946,0.630678,9.939551,-7.667084,4.141874,3.931128,0.808700,-4.069780,2.654752,0.935750,4.247762,-3.578238,5.246840,6.281539,6.004648,8.438551,-0.195566,9.586127,-5.622323,3.223249,-5.376899,-5.216971,-3.251484,8.693200,-3.008517,6.297602,-3.367775,7.236705,-0.011116,-9.086197,-4.744603,8.400195,-3.463284,-3.112498,9.181932,0.184220,-5.056476,8.391061,-3.041273,0.242036,-6.639228,8.557954,-7.416684,-2.992641,4.403854,-0.372938,-4.094656,-9.358772,8.895692,-5.945488,8.100274,-6.511543,9.930880,-0.272961,2.938153,-4.374094,6.009594,-3.996086,-2.540210,-4.581523,5.975485,-3.803417,4.933600,-0.919295,2.832876,2.810603,-2.704467,2.792572,7.337544,-3.575099,0.880970,-6.711029,-0.481217,-1.542501,-8.159017,-2.805379,5.059343,1.492606,3.176091,0.985978,-8.014234,1.458006,4.123620,8.224110,4.951750,4.984635,-5.801736,3.250134,-7.561851,-8.492265,-7.272474,-9.608598,4.865764,-8.003559,6.091832,3.281163,-8.570976,3.275451,5.150837,4.688181,-7.835779,9.107569,-0.608161,7.204531,-9.754513,3.957596,-7.399344,2.626243,-7.356815,-5.885512,8.844626,5.686980,3.535860,2.771252,9.387394,3.918973,4.227553,7.539652,2.118860,-9.470433,-6.631292,-9.471056,0.346922,-1.839952,-0.606026,-8.342352,-6.938104,7.009911,-1.304624,9.411461,2.035063,3.028882,0.067345,9.935351,0.593824,8.821087,7.456137,-2.724801,8.578764,-1.787368,9.788013,1.524778,2.169557,8.861286,-7.421749,2.485549,5.740830,-8.485034,4.039461,2.103027,-4.143056,-7.532238,0.843833,-0.034111,0.901338,-9.455026,4.142502,4.382031,-6.239442,-1.977378,2.435405,6.504593,-8.405740,3.860679,5.348056,-9.394311,6.307928,0.359110,7.771264,2.098302,4.350515,-4.463744,-4.573789,4.245941,-5.635780,4.780613,4.314789,1.882904,-3.509203,-6.799860,4.920580,2.006132,1.619630,9.660079,1.904260,-2.898063,-0.602077,8.021972,-9.312277,-9.872865,3.003448,-3.635074,-2.118160,-4.278541,-9.190571,-8.784514,-0.083876,9.694714,-1.886973,-1.016314,3.405307,-5.888980,8.872220,-1.530546,-3.358403,1.105775,-6.084134,3.825165,1.983258,-3.438533,-6.575276,1.570407,-2.931334,-9.840773,-9.288647,-1.165951,2.082717,7.599254,3.680717,-3.747980,-4.013705,2.188094,9.492950,8.116434,-8.117771,5.078555,-4.338058,3.624026,9.703580,-6.020145,1.071548,1.444677,4.497107,1.625502,2.762351,5.343040,9.339815,-4.958955,9.594310,9.284345,0.170313,-1.018819,-4.492800,2.621284,8.403398,8.919975,-1.315060,-3.294839,4.323028,-6.586637,9.818057,4.819416,-8.775234,-2.622183,4.135435,-1.899460,-5.848800,8.930859,-0.143451,-2.922600,-7.809183,-8.077372,-1.117564,-1.414033,1.234069,-1.354937,-3.068631,5.771965,-4.680831,-0.900903,-9.718886,-6.096648,1.480663,7.625047,-4.133669,-6.125175,7.790186,-0.865377,9.844508,1.518742,2.349540,8.049543,3.795665,5.928261,-6.765056,-3.340823,-7.112438,6.142877,-2.552666,9.110795,-4.479576,3.704919,8.873158,-5.494191,-4.333423,5.032179,0.479464,-4.620025,4.249670,-7.824032,3.836077,-4.099464,-5.490130,-4.883791,-2.828555,0.850570,3.150363,-6.265677,-9.510298,5.497352,6.213314,2.840676,7.702573,7.597842,8.762625,2.121123,-7.093551,-6.342590,8.962916,0.647117,-9.996873,8.981079,6.649116,-8.210668,-5.348525,8.694099,-9.219813,-4.027457,-6.366265,7.674475,-0.261643,-1.315602,-0.194597,7.001012,7.616413,-6.679704,0.248194,1.840059,8.098999,6.067511,6.566124,6.587093,8.285037,-8.490160,-5.998168,9.871806,-1.134899,1.373570,-7.615253,-0.924761,-7.063653,1.225981,-6.922079,-0.358343,9.700309,1.429053,-8.522859,-7.100857,7.343983,3.114047,-2.057022,-9.601525,8.376815,-4.578017,-8.234227,3.935697,5.220303,-8.377994,-0.176832,1.387856,-3.214595,-1.550664,-0.176847,-4.914836,6.207675,0.252728,-3.813099,-8.088097,8.133418,3.174870,-1.669991,-2.629220,-3.806775,7.908952,-3.272648,-2.672042,-1.458027,1.635901,4.039933,-0.256535,-4.081047,5.826489,3.904502,-3.868419,-9.656724,-6.982111,-7.270734,-6.191546,8.721617,3.714644,-8.815465,3.722724,2.177869,3.822481,-1.368040,5.476664,8.579957,-4.179278,1.547712,-9.116959,-7.597109,-2.826497,3.423704,0.415274,-1.801319,-8.153032,-9.542535,9.565823,7.425044,2.425378,-3.083055,-0.095342,3.869155,-0.150498,5.976873,-0.841717,6.527117,-1.025566,7.904107,-9.276460,4.254241,-9.104865,-6.773078,7.424422,8.704032,0.364999,1.248714,9.833226,-0.300204,1.522224,-4.019205,-5.424760,-3.799617,4.373159,-0.152360,-8.630061,-6.342590,-5.185867,-2.547935,-5.454162,-2.171063,-4.605824,0.350164,-9.836921,5.907873,1.458146,1.291510,-4.026337,0.519584,9.394603,1.220663,2.743303,-4.652104,-4.723733,6.712732,-3.741329,-1.154072,1.728531,1.505722,-7.254371,-4.669943,-5.639286,4.212487,2.173172,-0.196291,-6.745136,-4.512838,-9.979644,5.543686,-7.799413,3.697993,-3.951448,7.827652,-7.961974,2.193651,5.712403,-0.658289,2.539868,-5.190533,-9.264005,1.055374,-1.063745,-4.423259,1.942866,0.687329,-3.961250,-9.628492,1.013939,6.779622,-2.622422,-2.958725,-7.706772,-0.579642,-6.272589,-0.202784,8.455951,9.373364,-9.509329,-2.412694,-0.874346,3.880634,2.442400,8.277138,7.254701,-5.117382,-4.891332,3.687783,9.620557,-3.585864,1.276239,1.390675,5.049362,-4.610551,-3.884932,0.287563,0.490993,-7.683719,-2.245856,8.799876,-5.427867,-0.651144,-7.364284,2.369016,8.858484,7.736004,-8.901906,6.714705,3.979401,5.242932,0.186013,-2.046861,0.192535,6.079480,6.850681,1.951346,-7.351618,-6.783571,-9.127549,-3.563182,9.674099,-0.265208,-4.722860,7.453995,4.126840,-9.789362,5.566023,1.704374,3.799990,8.894628,2.593141,-5.805284,-1.921845,-5.976840,-4.706364,-0.729339,-7.202914,5.945178,-8.268569,4.361665,-4.802896,-1.335038,-6.359053,-5.961797,-6.396137,-9.983579,3.637702,2.017962,3.721177,-5.715519,1.208839,-3.053218,3.907159,-0.364357,-5.697630,2.820077,3.368473,6.969219,-5.607582,6.149933,8.998348,-9.588535,-9.207970,-6.638360,-1.008137,0.713717,1.618085,3.113224,-7.465160,-6.221804,5.720996,8.886121,-3.928571,6.882858,-7.415149,3.071901,-1.699852,-7.726792,-0.109783,8.523925,6.521567,-5.610663,-7.759412,3.289640,7.171923,2.014898,-4.994465,-3.097784,7.468413,8.887684,-2.551761,2.049814,-5.616384,-9.356003,-4.564452,6.557616,-7.063326,-0.684837,-6.972116,2.431870,-8.155434,-3.396152,0.415981,7.130382,-3.892749,3.672031,5.372522,-7.738935,-3.679472,-2.614968,-4.739906,7.990103,0.347050,5.990726,6.686123,-1.904238,1.328914,-6.782223,5.730426,-6.015337,-1.772845,-3.747590,-8.429970,-4.964844,6.746182,-6.778595,-8.650155,5.166008,8.491609,1.472584,7.679070,-7.399732,0.250517,-9.365464,-6.441805,-7.655785,-4.322429,7.188004,3.104374,8.308090,-2.853314,-9.488839,4.389643,9.279192,-0.872080,-0.831035,-1.412661,2.244236,7.572827,-0.927816,-7.771592,1.950030,8.568539,3.319783,-1.566242,-6.156391,-3.794258,2.852107,-9.312958,5.430263,-9.643922,-6.704390,-5.296772,-5.809425,9.047453,-2.661037,3.773969,-3.136933,-5.380235,-8.806568,4.541936,8.140191,6.567222,0.044760,2.417698,6.667180,-9.098921,-4.375628,8.115312,1.474882,6.337710,-5.219967,6.145520,-2.542344,-0.654674,-5.277065,3.844001,-6.843039,-3.102848,-7.823723,-0.210410,6.610167,0.182979,3.758885,-2.817707,-4.383884,-5.215785,6.722478,3.811466,5.001991,-2.536083,6.281930,-8.846139,-5.049482,-0.663520,-3.449846,-7.252519,3.852826,-3.101091,-7.781069,4.065529,-7.575273,6.857077,1.761682,8.373227,0.235533,-7.133390,5.922949,-4.058490,-6.072721,-6.683244,0.236205,-0.050973,5.819674,2.611699,-5.735529,-8.343083,5.342491,-4.892034,-0.127002,9.659583,9.381968,2.022843,-0.371376,-4.071619,-1.736344,-2.170064,-4.354254,-8.306569,8.399527,8.235635,4.105163,-7.411759,-6.059546,0.259914,8.812834,-4.082683,7.789573,7.281395,4.231656,-1.231950,3.951655,5.129540,7.083731,6.128786,5.189435,-0.429540,-0.019869,0.638763,4.576226,3.113936,-2.879292,5.985710,5.703359,5.193399,5.108608,-5.807920,-8.492960,-7.922572,-6.259504,-3.887817,-7.868841,-7.696775,-6.115438,2.400733,-0.424218,-1.512933,-6.300119,-5.984205,-7.906055,-4.484474,1.773095,-8.859007,-0.222701,-3.453605,-6.993644,9.488487,0.151799,7.476933,0.360196,-5.102361,-0.893404,-7.075809,-9.857081,-8.470367,8.737247,-3.682131,-1.515830,-8.053041,1.384877,1.930285,-1.443634,0.175421,-4.959636,8.537436,7.183703,2.910143,-3.700811,4.989594,5.717852,4.455345,-0.190532,5.061254,6.041924,-2.005044,-1.716509,-4.094283,-2.851512,1.930191,8.163860,-0.467032,-9.277374,-6.626768,-0.757746,3.566307,2.905666,-0.860012,3.057755,-8.305208,8.411356,2.357899,-8.545020,-5.451467,9.568273,9.649132,-8.646905,-5.111043,-2.305601,0.041666,-4.837117,-6.295686,-5.417334,7.165719,-5.503911,-8.650208,-4.721736,-3.863420,1.705483,6.141351,-3.269675,2.832894,2.532801,7.693626,-6.224001,-0.056120,0.858655,3.893949,0.823125,3.691500,-3.969620,2.870384,-8.657491,-0.312334,9.938952,-7.996797,-8.369538,-5.072904,2.075839,3.891981,5.159077,-9.810126,-5.690945,-9.809080,5.841884,-6.175747,0.596403,-0.912441,4.147182,4.100048,1.666565,-8.036516,-4.746394,8.193793,-7.447689,5.066475,-9.899448,-4.200402,7.384375,-6.442874,5.550948,5.923921,-1.687176,-5.067648,-6.466727,-4.504594,5.369660,3.793010,-9.872235,-3.217555,-7.425418,-7.884742,6.669674,4.563518,4.825484,5.602517,-3.888649,7.331812,4.153405,-8.934672,6.503704,7.816880,7.332266,-2.936655,8.817237,-4.021359,3.844611,-4.859558,-7.430014,2.960395,9.570418,-1.069204,9.473651,-8.364578,7.292835,-3.761165,-3.907735,7.207138,6.856469,0.722609,-8.747035,-2.164445,-6.950662,8.683295,-2.866477,-4.614480,2.017366,-9.131756,-7.929488,7.820141,8.835459,-9.805241,2.186840,-2.548952,-3.256401,2.410169,8.548114,-2.587635,-8.286393,-6.527720,-9.681018,-0.604990,8.321084,7.732413,-0.696405,3.238438,-2.455671,4.778478,-9.759620,-4.642970,6.979808,0.526638,9.497345,-7.857968,9.624545,8.897074,7.957747,-7.375633,-0.884987,-6.468732,-4.859855,-4.432815,4.242449,3.838093,5.920301,-0.245977,0.827527,-8.222557,2.775598,3.529714,5.036325,9.518066,-6.922848,-9.837371,4.454752,6.293618,-3.180784,-3.175841,0.276582,4.165446,-0.362464,7.114881,-5.674392,-0.757597,-5.664778,-5.898502,-0.022964,-0.854910,4.899109,5.226194,3.287346,5.527645,5.693752,-5.352324,5.678906,4.011111,5.714943,4.678578,-1.440875,-4.508748,7.306304,3.694833,-3.296426,9.955693,-6.448989,-1.006777,4.546771,0.038740,1.965594,-9.765451,-5.595177,-9.267753,-5.466132,9.774938,-3.121810,-9.294681,-6.733585,5.384533,2.187577,5.754771,-8.282340,-8.913435,2.267533,-6.268406,4.665336,0.173817,-4.024875,3.288259,0.073888,-7.040719,-0.178504,-6.547679,-4.540750,0.874912,-9.184744,3.540410,-2.433886,-0.546076,8.877035,1.608591,4.912765,-9.052713,-8.857944,4.039859,-2.350730,6.701166,-0.134589,-6.131722,-5.281037,-1.834721,-8.496744,1.351392,4.007299,-7.598944,-3.493832,7.687983,-2.711667,4.645479,-4.825914,-7.885326,-3.058039,9.948842,8.516479,4.260887,-2.813308,-4.743892,6.520328,8.843980,-4.817382,-0.843566,0.535770,-3.065375,8.330486,9.902200,-5.675820,0.999115,8.407328,7.824671,-3.062938,-0.661018,7.868684,7.917121,-1.885097,9.722497,-8.580927,2.022961,-6.139257,4.227655,-6.933873,1.293173,-3.282469,9.208826,8.026574,3.261127,-2.402130,-5.770347,-6.062471,-0.610056,5.004409,9.581539,7.483209,6.432856,2.163946,-0.651984,8.786117,-8.517877,-8.356462,-8.970659,5.648463,1.211499,5.537785,8.045689,9.408713,4.398494,3.866840,-4.330549,4.525267,-2.950132,-7.080439,-2.591801,-8.044894,9.943766,1.040355,4.172524,1.129905,-3.177866,-9.544833,8.401047,2.464894,-6.790556,8.842071,-6.732071,0.808272,0.834538,9.317865,9.208156,6.874814,-1.326059,-6.413163,4.595270,-3.396090,3.913665,0.963914,-6.043390,3.426813,7.128598,0.129332,8.122557,0.594859,-9.367530,6.872838,-5.101889,-1.699908,3.184131,-6.779673,1.787733,-2.014487,-8.976665,6.067991,-5.389224,6.297320,4.876765,2.669909,4.936175,-6.088794,3.930085,-2.374486,-5.609893,-5.379111,5.867494,-5.168141,6.541232,7.524195,-5.378919,-6.364670,1.098520,-9.306743,-3.033138,-3.398664,-3.454659,9.567533,-2.473474,-1.106882,6.202492,-7.397334,4.689677,5.876101,8.094935,-8.117220,0.481269,-4.622688,5.470839,0.275334,9.215426,3.663841,-8.318348,5.845517,-5.008206,0.483225,7.853055,1.126908,-1.936046,3.976008,9.036816,2.885642,6.940554,-4.470528,6.749732,-0.489786,5.453192,-6.571323,9.204652,-4.783498,4.189663,8.136850,5.143129,-6.118737,4.120594,9.265741,5.548782,8.825122,-5.626498,1.798354,0.849629,-3.341566,-6.432846,0.081767,3.331958,5.085785,0.378578,9.494487,8.474887,6.233410,1.828936,-7.413732,8.503389,8.715923,5.755450,5.804938,7.816632,0.954891,1.838208,6.286128,-6.508069,6.699639,3.713618,-8.666024,-7.143312,3.591007,-9.820344,1.091232,6.840260,0.804738,8.186522,2.167838,8.309412,-3.013310,2.212640,9.383137,6.346056,-8.579926,8.756190,1.362110,-3.030643,8.807592,-6.045384,-1.707926,-7.269405,-9.418574,1.635509,-1.817923,-5.296705,7.392127,-5.937501,0.270697,5.223102,-0.550735,-0.237766,3.707730,-2.859903,2.302516,1.407637,-3.172751,-1.388145,1.043452,-4.356111,-6.301803,4.915692,0.851730,-1.325752,5.337009,-1.299934,-2.876811,3.327015,4.407172,-7.458697,8.827404,-2.935258,8.312573,-4.892670,-2.049212,-7.824282,-8.117780,-3.820117,8.181657,-8.129946,4.795102,-1.175944,-5.518926,6.945904,9.665969,-4.639124,8.298072,-7.124678,8.049300,6.621170,-6.720082,-0.347231,9.536023,-1.246913,0.590805,9.824617,3.713811,-2.886883,-4.640576,5.411996,-8.655324,-0.772731,-0.200662,-4.774804,5.909820,-4.927850,-9.275276,-5.949082,6.664561,-5.191990,-1.185435,0.927603,-2.995736,7.287605,9.709157,-9.518675,-8.503356,6.923487,-1.074496,6.423105,-9.176943,3.729498,-7.596433,-4.167114,-6.387835,4.894499,1.090242,-6.871046,-8.580979,-8.800832,-6.131175,2.603499,6.587384,1.248323,9.049161,3.281917,-6.506265,-3.318001,6.435176,4.648069,5.210250,-4.602752,4.292391,-6.966373,-1.378610,-0.423133,-9.213829,2.967222,-7.215124,0.488812,7.396037,5.209828,8.054499,1.630710,0.004568,-8.754263,9.628456,1.016387,9.273328,-5.025874,-9.782764,-7.806682,9.576210,-7.840322,-2.656733,5.694209,-6.371546,-7.895301,-5.258391,-5.787052,-7.449720,-4.307584,5.091497,-2.952091,-7.920926,-4.472530,6.252042,3.177837,2.269514,2.258345,3.061122,5.620883,2.578658,7.417808,9.047494,6.440733,-6.965165,2.323504,4.338197,-1.767486,1.521188,-4.264422,3.060382,2.899592,7.310527,-7.403951,9.454492,9.528558,6.271801,-1.023984,-2.046899,-6.282648,3.676505,4.793501,-4.588021,-1.393187,-5.510644,-5.442773,-5.810130,-2.438110,-0.972054,-1.731387,7.498560,6.711715,-1.278904,2.533586,3.033540,8.488058,-3.824306,-5.850428,-8.001872,-1.076270,7.890434,-5.012351,-6.122172,-9.228565,-8.339662,-1.574306,-0.160289,-7.668797,9.622609,4.084771,-4.765732,8.847434,6.341606,5.680481,9.136755,4.189303,-2.445341,-0.994145,-2.630957,-0.401248,-8.339485,-1.214747,-0.607970,5.987168,4.011510,-1.383717,-8.787420,-3.122283,5.226585,8.644687,1.342124,-4.919141,8.719602,-9.304766,6.980141,-2.667627,4.819819,-7.821581,5.784756,7.981589,-7.394614,-2.808551,9.662176,5.285797,-5.907617,2.733709,3.365142,-7.960360,5.627527,-2.978090,8.472851,-7.848995,-3.674748,-5.090532,-4.525227,-1.118899,5.245869,2.402679,3.269812,-3.721022,-6.282304,5.473300,8.378835,-0.641797,-6.913466,4.925060,2.812694,-8.716381,-6.317699,7.030397,-5.921688,3.560146,6.076231,-8.174287,7.621882,-7.993908,9.655132,0.469832,8.007673,0.709012,1.759217,5.453928,-4.255196,-6.817913,-4.247888,3.842472,3.817808,6.941303,-1.471543,1.986217,-8.034622,7.617524,3.509724,-3.251391,-1.410889,-2.200662,-5.466685,-9.493216,7.001936,8.559646,-6.254486,-8.124819,6.406961,-3.526282,3.240894,-5.045846,-8.718023,2.818093,-7.983296,-3.315618,4.266690,-6.490703,8.916061,-6.210914,1.547198,-9.789586,0.299578,1.003562,-0.755691,-5.509261,9.235743,0.877456,-5.870478,3.219117,-0.274688,7.802233,-2.080474,5.994597,-8.063369,-3.620605,2.130184,3.587364,2.446403,-6.546689,6.335508,-7.312618,9.168719,-2.177484,-9.970851,-8.746501,1.767291,4.286114,-4.914496,8.797829,-4.905941,-7.000043,1.137723,-7.881890,0.675362,-7.167306,7.708915,5.729482,7.173672,-4.368302,-7.243350,-9.275380,-0.767437,2.317208,1.455438,6.042632,8.653460,2.695090,-7.752320,1.478648,-6.773125,-4.434267,-3.703487,-7.259850,4.009483,-6.995266,-6.870734,4.974838,-7.605682,0.137276,-4.331507,3.254033,-9.519901,-1.469858,2.442952,-7.525313,8.016272,8.157900,4.082261,6.604079,3.675931,-7.040962,5.202581,-5.951695,-0.715380,2.239249,6.990167,-4.567803,5.485293,-5.792709,3.790078,6.773073,2.137737,-4.367393,-3.337609,6.051837,3.689628,6.227565,7.181716,-8.393535,3.452972,-6.256998,1.274802,4.419850,5.197700,7.035620,-8.992640,-9.775229,1.241104,-7.872581,-6.167524,0.632329,7.677966,-2.362667,4.116567,4.878305,-2.108992,2.344334,-0.122932,3.053692,-5.383939,-0.821391,8.635528,-3.830758,-2.449918,-5.634207,-2.820043,-5.664205,6.840234,-6.004069,-5.043388,0.846319,-7.884147,-0.335406,6.301642,-2.583455,-7.865679,6.990634,5.932764,-5.646702,-8.273539,6.194890,9.491641,1.617778,-9.196758,0.743873,7.488081,-2.741944,0.336598,-5.716155,-4.642822,-6.491027,-2.177447,-9.488023,7.153160,0.076971,2.165536,-3.268069,-2.631489,4.138706,5.564786,9.827068,-6.153566,-2.382034,-7.481150,-8.621386,-5.879209,6.606183,-5.059321,-5.613538,2.091045,-9.038213,-2.275893,7.398164,-4.344091,-9.331722,4.642862,-4.376658,9.212253,9.895526,0.814020,-5.212571,-0.019138,-4.185823,4.374850,-9.130333,-5.116807,5.165566,9.182098,-7.227443,-1.305401,1.497888,-6.220377,7.422436,9.429233,-9.161877,-3.261925,-9.155944,-8.818149,-6.952814,7.182022,-7.961560,0.655139,0.189968,-7.423954,-9.933687,-7.490802,-6.627223,0.384492,-5.299166,-1.100393,2.452536,4.863857], dtype = "float32")#candidate|4556|(2400,)|const|float32
const_4557 = relay.const([4.268560,-9.994989,-8.207328,2.351068,-3.042075,3.091996,-2.763532,9.407576,7.374011,-8.021725,6.525524,-2.868987,-2.602122,-1.179143,3.577044,5.998164,-7.314956,0.120741,6.420509,-5.281736,-2.116808,-9.490026,1.696450,-4.502935,-7.145107,-6.494760,2.359708,-8.312260,-4.304445,-3.752074,-5.040988,-7.465158,1.834932,-5.724365,9.906056,2.915409,-0.930424,-3.960128,2.721744,-0.910915,-0.231092,1.822710,1.931974,2.102965,-5.105482,-1.500098,6.715552,7.335050,-5.365047,5.573959,0.800700,2.694495,-4.723627,7.038110,-0.017976,6.189072,2.357383,2.899434,-0.195794,-0.907315,-7.602533,-2.911668,-0.083870,-5.046701,2.805657,-8.061545,-3.240575,-9.420775,8.437096,-2.439449,-6.591086,-1.096477,-9.387976,-6.967635,-5.134264,0.412088,9.861068,-0.703212,-3.206757,-3.183794,-1.177780,-7.609260,3.492927,9.810197,-1.061837,-0.913344,4.131856,-1.508641,-2.014500,8.410105,-7.134496,8.909603,-8.406155,5.553041,9.466909,-5.919555,-7.710139,-2.184776,4.633565,-0.269339,-2.626435,-0.201998,-1.127475,3.646479,-3.129608,9.151981,-7.428969,-3.283854,7.789516,3.662690,-9.295975,-8.546513,-1.242623,-7.516311,1.825130,9.100413,2.035325,7.668039,5.832839,7.034966,9.098216,-5.065473,6.404752,-6.546051,-4.926956,2.163471,0.257968,4.207783,0.195108,-9.271139,-6.661007,-2.041145,7.025383,9.145819,-2.371464,-9.711180,-7.165841,1.220223,-9.397922,-0.054878,4.811752,1.097435,2.693799,-4.582461,-4.253374,0.046917,2.488543,-7.406751,-3.365024,9.335200,-7.732018,-8.305745,-5.237802,0.784452,-3.415931,5.830843,2.375070,-1.859836,7.632582,1.287100,5.690196,-4.238159,-1.476621,-0.781978,2.565670,-9.017466,8.334161,-5.102710,-5.634488,-8.702847,1.600866,4.272523,-4.101518,1.371206,-7.630925,7.019260,-1.201755,-7.848203,4.792417,4.961248,-7.183476,-7.531539,-1.375885,3.256336,-6.390415,8.082847,7.474881,8.702326,8.214875,8.909624,1.619260,9.668689,0.756948,3.949087,-5.679561,3.321124,-3.651579,9.123969,-2.587796,9.702180,-3.612754,-8.218851,9.166919,-1.785176,-3.478139,7.899670,-9.067746,2.609897,-8.101671,-9.281279,3.116460,-5.554787,-7.727327,1.995620,-1.103711,5.914508,3.739689,8.850908,7.465472,3.934737,2.724158,-2.354968,-4.260309,6.743402,-6.619252,7.069875,7.274587,6.749949,7.815191,-0.121903,3.286517,6.136427,4.639489,-1.470809,-0.995762,7.492813,-0.353161,2.974265,5.268504,2.114269,0.477156,-5.113007,-9.011647,-6.231307,-4.756294,-0.291017,-2.197423,-8.989739,-5.936846,8.427049,2.121604,-5.139290,-7.678335,-6.289078,5.751401,7.276190,-9.227101,7.292826,1.152479,0.192618,6.613387,8.225861,6.588562,6.745993,-0.988043,-2.721632,6.762401,6.407517,-4.791699,-4.991934,-9.687419,-6.208883,7.319092,2.695585,5.982117,-3.515661,-7.560940,3.525072,9.384316,5.390130,6.129452,4.304787,0.302082,-3.536256,-6.262866,5.764362,-7.138396,-3.144730,8.478426,-3.141126,-7.373306,2.810969,-1.556513,-8.529922,-2.520252,-9.185955,6.172780,-9.870159,-0.679005,-0.269721,2.968283,2.518320,-0.124608,6.207026,-4.674779,-8.768009,-5.114246,6.358679,-1.790100,4.676024,-4.914116,-6.609686,0.294628,-6.137508,2.695470,0.354506,-2.121878,-0.598688,-6.951565,-0.854928,5.565450,1.680354,8.492985,2.743360,-9.603422,-4.267440,-2.111576,-7.863403,6.115832,2.178985,5.088170,-2.772216,-7.653515,-8.904589,-5.137857,6.943686,-6.030089,-6.226637,6.060125,7.511895,-0.276882,-6.881089,8.614670,-8.968771,7.837839,6.634293,-2.393465,-7.673884,8.847318,3.305857,-1.746762,9.083486,4.711923,-9.682241,2.375700,-5.013568,8.010178,-7.154981,2.012839,3.452948,9.037792,-6.091038,-6.530662,-6.118624,8.163487,-9.250813,-0.953541,-3.968364,9.840013,-4.861942,9.581615,-6.403476,-0.602451,4.752007,4.514858,-5.396051,4.984635,4.449680,-4.431062,4.872805,8.618120,9.982561,-0.961285,-9.130871,-9.525007,-1.134803,2.580583,-7.464633,-6.533229,-4.736023,-5.917606,-9.897857,0.594258,-6.844294,4.180951,6.923965,8.069184,-5.555477,0.331260,6.288862,9.073127,8.060627,-7.393502,-3.134696,1.062623,-6.354206,-6.363353,3.651325,-6.655730,9.321776,-6.998371,3.202408,7.793256,6.026747,-2.640831,-8.243418,-6.538060,-8.948936,2.303444,7.446509,0.099919,-8.345477,-6.306833,6.688784,6.524586,-5.178515,-0.646132,5.719457,5.849609,-0.264766,7.677151,-1.494823,-1.126317,-6.596419,8.290403,-4.327159,-2.679973,-7.272647,-8.820637,6.852277], dtype = "float32")#candidate|4557|(440,)|const|float32
call_4555 = relay.TupleGetItem(func_3486_call(relay.reshape(const_4556.astype('float32'), [2400,]), relay.reshape(const_4557.astype('float32'), [11, 4, 10]), ), 2)
call_4558 = relay.TupleGetItem(func_3490_call(relay.reshape(const_4556.astype('float32'), [2400,]), relay.reshape(const_4557.astype('float32'), [11, 4, 10]), ), 2)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_4560 = func_4392_call()
call_4561 = func_4392_call()
func_1202_call = mod.get_global_var('func_1202')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_4573 = relay.TupleGetItem(func_1202_call(relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(call_4544.astype('uint16'), []), relay.reshape(const_4547.astype('uint16'), [8,]), ), 1)
call_4574 = relay.TupleGetItem(func_1207_call(relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(var_4545.astype('float64'), [8, 9, 7]), relay.reshape(call_4544.astype('uint16'), []), relay.reshape(const_4547.astype('uint16'), [8,]), ), 1)
output = relay.Tuple([uop_4532,call_4534,var_4535,call_4544,var_4545,const_4546,const_4547,call_4555,const_4556,const_4557,call_4560,call_4573,])
output2 = relay.Tuple([uop_4532,call_4536,var_4535,call_4548,var_4545,const_4546,const_4547,call_4558,const_4556,const_4557,call_4561,call_4574,])
func_4575 = relay.Function([var_4531,var_4535,var_4545,], output)
mod['func_4575'] = func_4575
mod = relay.transform.InferType()(mod)
var_4576 = relay.var("var_4576", dtype = "float64", shape = (5, 13, 7))#candidate|4576|(5, 13, 7)|var|float64
var_4577 = relay.var("var_4577", dtype = "float64", shape = (1008,))#candidate|4577|(1008,)|var|float64
var_4578 = relay.var("var_4578", dtype = "float64", shape = (36, 14))#candidate|4578|(36, 14)|var|float64
output = func_4575(var_4576,var_4577,var_4578,)
func_4579 = relay.Function([var_4576,var_4577,var_4578,], output)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_4589 = relay.TupleGetItem(func_4250_call(), 0)
call_4590 = relay.TupleGetItem(func_4251_call(), 0)
func_2290_call = mod.get_global_var('func_2290')
func_2295_call = mutated_mod.get_global_var('func_2295')
var_4616 = relay.var("var_4616", dtype = "uint64", shape = (196,))#candidate|4616|(196,)|var|uint64
var_4617 = relay.var("var_4617", dtype = "uint32", shape = (154, 1))#candidate|4617|(154, 1)|var|uint32
call_4615 = relay.TupleGetItem(func_2290_call(relay.reshape(var_4616.astype('uint64'), [4, 7, 7]), relay.reshape(var_4616.astype('uint64'), [4, 7, 7]), relay.reshape(var_4617.astype('uint32'), [154,]), ), 5)
call_4618 = relay.TupleGetItem(func_2295_call(relay.reshape(var_4616.astype('uint64'), [4, 7, 7]), relay.reshape(var_4616.astype('uint64'), [4, 7, 7]), relay.reshape(var_4617.astype('uint32'), [154,]), ), 5)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4620 = func_3976_call()
call_4621 = func_3976_call()
uop_4629 = relay.atan(call_4589.astype('float32')) # shape=(11, 4, 10)
uop_4631 = relay.atan(call_4590.astype('float32')) # shape=(11, 4, 10)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_4632 = func_3976_call()
call_4633 = func_3976_call()
func_4575_call = mod.get_global_var('func_4575')
func_4579_call = mutated_mod.get_global_var('func_4579')
var_4638 = relay.var("var_4638", dtype = "float64", shape = (455,))#candidate|4638|(455,)|var|float64
var_4639 = relay.var("var_4639", dtype = "float64", shape = (1008,))#candidate|4639|(1008,)|var|float64
const_4640 = relay.const([1.271893,1.049378,-0.890750,-7.764280,-8.113966,-8.974570,9.105813,-1.080276,0.304878,-0.808108,9.303499,3.671557,-6.215774,-8.385871,8.620695,-7.593776,-5.101415,-3.927109,-1.047651,4.959473,2.716732,-9.127947,4.298764,-1.402704,0.293555,-4.174998,9.995281,3.928080,6.928655,0.673415,7.554078,-6.441315,5.433674,4.090713,5.637001,2.382941,-2.596956,-5.441734,-5.122294,-2.484065,8.473078,-1.656046,-7.616053,1.301396,-2.134726,-1.749349,-9.975270,0.953578,-4.580937,0.914959,8.581483,-9.738633,4.871616,8.296070,2.292144,8.845178,8.197174,1.246891,9.974221,5.136243,-5.367643,-6.756371,-4.975721,-0.692874,-9.572214,1.540835,-1.529332,2.582426,-4.051124,7.457359,-6.042394,-9.363507,9.916724,-3.940919,-0.853600,-1.964746,8.696731,9.359150,-5.123252,-0.148271,-1.404161,-0.906736,6.703896,-3.187085,-3.915279,-0.778739,-8.912499,-2.201264,-3.861457,3.294037,2.728541,9.121048,-5.968902,-4.386794,7.274951,3.842109,-6.230336,-3.801726,6.343564,6.285950,4.155976,-8.830320,2.077712,2.433875,4.989272,-0.303126,-4.079432,-3.846780,5.147376,2.063361,4.822986,-1.729789,-9.140556,-1.432235,0.630374,4.025220,4.163137,-3.209087,0.200559,-0.481462,-2.814630,3.820363,3.735608,6.153305,-5.458306,8.920814,7.219777,-7.211617,-0.380040,2.798980,-7.262936,-9.481388,6.544639,-0.940093,-0.366139,9.869072,-7.113348,5.482125,-6.374614,-2.829529,0.385175,5.146293,4.391381,-7.814004,-9.688179,9.024271,6.175593,-2.507922,-4.637824,8.165582,4.210462,-9.518140,8.976964,0.752813,-5.755031,-6.238870,2.310031,6.337197,4.593704,4.877285,9.862586,8.864527,-5.604319,6.443952,-5.163573,-2.405067,-5.593888,4.065846,-6.949977,9.218747,-5.581811,2.495651,0.595639,-4.910696,-5.652623,-8.370970,-2.863664,-3.152597,0.065636,-3.701060,-1.730774,-5.373550,5.238677,-5.702455,-9.222173,-7.872870,-9.386356,4.200983,-9.486595,-1.310128,8.393784,1.858258,-6.753693,-4.608129,8.914237,-8.485478,5.615491,-8.836392,-6.559698,6.708637,4.817543,-8.857119,1.183502,4.781501,5.628156,-1.199723,2.002203,5.062566,-5.998626,2.046809,-5.882320,6.934662,-3.713744,-3.851279,9.215106,-2.080583,8.774500,-8.076485,-7.139013,9.576085,6.265314,-2.985369,1.404204,2.861943,9.094907,6.008040,-9.114870,-1.578913,8.119266,6.374509,-4.611691,4.194544,-9.424281,-4.894534,9.732641,3.576599,2.507819,4.466069,0.371409,-3.950999,-1.070852,-6.144970,3.975088,6.929800,7.340183,5.250914,-3.810804,7.678267,-5.058363,3.209750,2.145647,-7.903957,-1.973354,2.152425,-3.055442,1.260019,-4.370714,7.037971,-7.250109,-8.995029,-7.961182,7.170053,-8.888438,2.261244,-3.258938,-4.981671,8.473848,-3.436188,8.761216,4.917962,-7.082948,-4.558351,-1.498043,-9.870999,-0.743069,-8.515265,-4.040776,-8.540787,3.287025,0.921521,-8.403394,7.644623,-4.796417,-8.055111,-2.791356,-7.050644,-5.580398,2.164951,-8.131771,1.115605,-0.288681,9.845004,6.709594,5.143270,-8.338601,-1.744979,-0.484305,-4.177350,8.746298,-2.075410,6.905302,-2.409663,3.031262,-5.606048,3.103013,0.934775,-4.479182,-0.371009,-4.086443,-8.443042,-7.225202,7.503501,-6.907645,-5.802781,-1.990267,3.506252,7.722165,4.262302,4.333706,-5.392404,4.986085,-2.107018,8.331069,2.065158,-6.586682,-4.986919,-2.889793,-7.293494,3.033063,7.847720,8.356884,6.357729,-4.339218,-0.709275,0.021127,7.674991,-5.234208,-1.493494,-8.542658,9.561064,9.110472,-8.362317,1.154869,-0.141883,7.474613,1.719184,5.762227,8.300080,3.637694,4.565637,-2.065453,-5.433653,5.029344,-6.244816,-6.198511,-2.152638,2.505185,-1.800925,8.801938,-9.602435,-7.945928,-2.915126,-7.936979,7.976259,6.719568,-5.483717,6.615132,-0.002009,4.944057,7.189219,-9.209732,3.003864,-2.594745,-7.724209,8.836247,-5.425997,-5.997816,6.745945,-1.156334,0.194464,5.187426,2.271105,-0.480268,4.710553,4.058460,2.984924,7.710932,5.058749,-6.005528,1.597632,-3.570464,1.037964,-3.065098,-1.220764,-9.739490,-4.548217,7.593050,-2.420045,4.040217,-6.941327,-0.320566,-0.531447,-8.166058,8.477254,-1.948290,-1.745407,-2.890942,7.183193,-1.159568,4.192763,4.378325,6.714899,-1.798884,-3.846367,8.294010,-2.003442,4.106040,5.228283,-6.068557,-8.552352,-0.306489,-8.470381,3.159878,6.917464,7.415614,-8.342622,7.074463,0.471550,3.701055,6.405061,-4.896381,7.172308,5.663820,-9.340429,3.632088,-0.596333,7.126415,1.546119,-2.227709,9.579781,3.226916,0.930469,4.068102,-3.932140,-1.711774,0.478872,8.180072,-3.515726,-7.647571,0.435115,-1.417099,8.747357,-0.450861,-1.073232,9.179960,-4.412522,3.378971,6.845235,-8.108310,4.673966,-7.388144,-3.133784,6.930394,-9.649761,1.741909,-0.601539,3.776810,3.832378,-9.530010,-6.643685,4.286501,-7.116585,-8.304113,0.680898,-3.570205,-6.363404,-9.235958,-9.204697,2.739197,1.578056,-9.758732,-1.541606,1.374520,2.651882,1.518071,1.003387,-3.158880,8.388001,-0.798656,-5.908072,-1.939784,4.999187,9.291137,-0.371713,-3.517157,1.798477,5.259124,-9.731686,0.974323,-5.806545,3.715170,-5.638693,-8.496893,3.609776], dtype = "float64")#candidate|4640|(504,)|const|float64
call_4637 = relay.TupleGetItem(func_4575_call(relay.reshape(var_4638.astype('float64'), [5, 13, 7]), relay.reshape(var_4639.astype('float64'), [1008,]), relay.reshape(const_4640.astype('float64'), [36, 14]), ), 3)
call_4641 = relay.TupleGetItem(func_4579_call(relay.reshape(var_4638.astype('float64'), [5, 13, 7]), relay.reshape(var_4639.astype('float64'), [1008,]), relay.reshape(const_4640.astype('float64'), [36, 14]), ), 3)
func_3212_call = mod.get_global_var('func_3212')
func_3216_call = mutated_mod.get_global_var('func_3216')
call_4648 = func_3212_call(relay.reshape(var_4639.astype('float64'), [6, 12, 14]), relay.reshape(var_4639.astype('float64'), [6, 12, 14]), )
call_4649 = func_3212_call(relay.reshape(var_4639.astype('float64'), [6, 12, 14]), relay.reshape(var_4639.astype('float64'), [6, 12, 14]), )
uop_4651 = relay.exp(call_4589.astype('float32')) # shape=(11, 4, 10)
uop_4653 = relay.exp(call_4590.astype('float32')) # shape=(11, 4, 10)
output = relay.Tuple([call_4615,var_4616,var_4617,call_4620,uop_4629,call_4632,call_4637,var_4638,var_4639,const_4640,call_4648,uop_4651,])
output2 = relay.Tuple([call_4618,var_4616,var_4617,call_4621,uop_4631,call_4633,call_4641,var_4638,var_4639,const_4640,call_4649,uop_4653,])
func_4654 = relay.Function([var_4616,var_4617,var_4638,var_4639,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "uint64", shape = (196,))#candidate|4655|(196,)|var|uint64
var_4656 = relay.var("var_4656", dtype = "uint32", shape = (154, 1))#candidate|4656|(154, 1)|var|uint32
var_4657 = relay.var("var_4657", dtype = "float64", shape = (455,))#candidate|4657|(455,)|var|float64
var_4658 = relay.var("var_4658", dtype = "float64", shape = (1008,))#candidate|4658|(1008,)|var|float64
output = func_4654(var_4655,var_4656,var_4657,var_4658,)
func_4659 = relay.Function([var_4655,var_4656,var_4657,var_4658,], output)
mutated_mod['func_4659'] = func_4659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_4734 = relay.TupleGetItem(func_3244_call(), 0)
call_4735 = relay.TupleGetItem(func_3245_call(), 0)
func_4056_call = mod.get_global_var('func_4056')
func_4059_call = mutated_mod.get_global_var('func_4059')
const_4737 = relay.const([[7.442071,6.063473,9.130298,7.263882,-3.409063,-8.000800,7.032382,-3.026533,1.093818],[3.781080,3.469782,-9.350244,8.832020,-6.733660,-1.747478,-4.233591,7.645833,3.486292],[7.880167,6.256965,3.751298,-3.718694,8.518621,3.993228,-9.021257,-9.342930,-7.613270],[6.341124,-3.661262,8.924405,3.312648,-5.739094,7.689191,0.978091,1.388822,-1.726990],[-7.411330,0.566612,9.967344,-2.158116,-6.013335,9.177310,-2.891031,-9.375774,-2.220122],[1.071008,4.814487,-3.438931,-6.553565,9.265787,5.688148,-1.120694,-5.578942,0.822634],[-5.721990,-6.797915,-2.717635,0.353648,-7.803373,5.342293,7.951629,-8.347507,9.684994],[8.957449,3.392133,7.749112,-1.378635,-6.791119,3.224397,-7.337958,-3.324639,-7.610874],[-4.873616,7.510836,0.644917,3.028680,0.701328,-3.510851,1.607543,-2.828264,-5.291237],[3.509222,-5.429720,-1.650135,1.273573,5.236391,0.709070,3.862592,-0.356566,-4.881631],[6.204907,-8.022337,-7.017557,8.601557,3.992161,-3.494048,4.308246,-4.206730,6.658049],[-5.102423,-9.725848,-9.438341,6.905899,9.204174,-1.139775,-5.601257,-6.336067,1.677518],[7.771898,-7.738438,-1.758753,-3.477410,-4.218852,5.576832,2.927740,-6.971979,-2.016971],[7.973810,-7.568129,6.700781,9.151665,0.067778,-1.610316,-0.742792,5.182725,-3.096897],[5.510070,-8.705173,-7.511687,1.430027,2.353927,2.888009,6.032809,2.810188,1.423120],[-6.372637,-7.259704,-1.713567,-7.979808,-9.997277,0.533975,-2.425757,-7.009028,-4.079435],[-0.459429,-1.498114,-5.968312,8.651615,2.449313,0.531629,2.207068,9.522998,8.220231],[6.278717,-3.492121,-8.095579,-5.359408,-1.946878,2.099612,7.571699,-5.014242,9.108118],[0.565850,-5.509237,5.782011,-2.233904,-8.385587,3.122713,7.690180,5.261389,-4.536016],[-3.615684,-4.426887,6.046999,0.421202,-4.265324,6.967434,-3.245766,-4.756733,0.303611],[1.973898,8.847136,7.919814,6.240243,4.011973,-2.266853,-8.697231,-3.920240,2.880380],[-2.346384,2.972565,-6.231056,-4.345199,5.644885,-6.288161,6.616786,-0.827417,8.158756],[0.726268,8.548293,2.466677,-0.617786,-0.421133,1.706252,1.759276,-4.238244,-2.347540],[8.379095,-3.026368,8.817111,4.377413,-3.460262,7.725853,2.070978,-8.937247,8.894054],[-3.090061,-3.415691,8.961392,-1.051938,2.074068,3.663950,9.996575,0.917333,0.438200],[-8.275131,3.772864,5.912400,-5.874372,8.937707,5.728859,2.331012,-0.109838,-4.302218],[2.922396,-5.594479,6.834939,-7.433116,-0.706066,-6.279628,-9.923272,-4.463068,9.826780],[0.550781,-6.351805,8.747991,7.680339,2.004514,-8.305351,6.126924,-3.116992,-2.185413],[3.367608,9.248392,-9.461761,-6.503149,-9.006710,-1.051514,-0.570062,-2.331828,-0.961770],[-5.920928,-4.916465,-7.571439,9.595621,-7.203685,6.561716,6.854860,6.565604,4.194877],[1.547876,-5.192141,-2.303010,6.190844,-5.537903,-3.172284,5.931229,8.281486,-7.541138],[-5.616653,6.580786,-9.537513,-5.490877,-1.586041,-0.405564,1.375804,9.553642,6.195391],[1.337098,-4.636179,-2.166291,-5.172737,7.054732,9.719385,4.819019,3.790406,-9.063500],[-3.031061,0.426691,-6.433290,-7.351308,6.934286,-1.936979,3.767741,-0.594321,3.499615],[-0.415748,-9.524779,7.196551,-0.462071,-4.034103,-6.710115,8.959839,3.778636,8.612604],[-4.015455,9.639085,6.519374,-8.924996,1.297090,-8.138541,-1.185853,0.319930,-2.710172],[-2.271955,2.024043,-0.664313,-3.649313,-1.047157,-1.523482,7.164950,0.021746,7.755204],[-7.341372,-9.817124,-6.102964,4.833469,1.659489,4.118519,4.875367,-1.541072,-4.557703],[-5.067651,-1.868426,-0.263592,-2.950274,8.115118,7.721058,-5.930265,5.596226,6.870820],[8.044682,-0.229721,3.991100,-1.993804,4.886661,-1.662432,9.820214,-9.576320,8.519729],[0.760300,3.315132,-4.189584,2.423804,-8.280419,9.710987,-2.637662,-5.172588,7.967215],[-6.251807,4.924916,7.395857,-4.156565,-4.172819,-5.353452,2.550209,-0.742471,4.671420],[8.476960,1.738746,5.250669,-4.493386,-7.990236,-4.115479,-5.436092,6.981359,-6.764383],[2.728740,-8.505837,-7.027055,-8.854693,-5.235357,-4.277905,7.957184,-4.478011,3.208917],[5.270781,2.358948,1.549219,4.796394,-0.147543,9.242638,4.775141,5.949240,-6.880903],[2.687272,-1.179111,5.711251,4.468979,-0.643234,-2.136466,9.819585,4.702583,5.938047],[-5.545715,2.922815,1.743938,0.900620,2.224724,-4.987533,-5.206458,-2.903924,0.304249],[7.724916,-8.665984,-0.121856,-2.370503,-5.278699,-7.294172,-9.583291,4.804289,-1.404696],[-3.634714,0.758737,-1.060750,3.434723,4.995530,1.758274,-0.196843,8.709581,5.095218],[4.357904,8.321378,7.750273,7.224461,-8.250856,1.606315,4.354730,6.050537,-5.220398],[3.775965,-3.234717,6.407297,0.236235,3.480473,4.420992,3.587663,-0.125487,-6.735005],[-2.121945,1.618425,-8.126936,3.848901,-9.982112,6.202382,4.592478,-8.261098,4.575078],[8.549347,1.520753,-9.833830,0.223745,5.841695,-6.940374,-1.237866,0.930304,-9.321918],[-7.854562,-6.099524,-6.769973,4.948504,-6.712302,0.863173,-5.372016,-7.338419,0.003376],[-6.724522,-8.221861,-9.933039,3.855380,-2.746491,-2.026113,2.571588,-4.346759,6.174808],[3.598656,-8.305733,4.402177,6.090380,7.996928,5.742475,-2.090207,6.166775,-1.402242],[-8.248451,-7.437089,-8.062237,3.055172,-0.367809,7.143106,-5.501247,-2.723431,-4.875258],[-5.466200,8.662705,-3.516919,2.074050,-1.700385,4.551560,-9.189820,7.887675,-6.072392],[-1.117752,1.979011,-7.999105,-7.938799,6.254598,7.500867,-4.149504,5.200076,9.599995],[1.773398,7.231250,-3.256629,-0.778470,-3.585839,2.032213,1.367191,-4.133917,-2.383084],[-1.351078,5.916780,-2.886410,6.322167,-5.332602,-2.698051,-5.259841,-3.093729,-3.708016],[4.832270,-6.449768,-2.299140,-7.025716,7.749986,-7.986209,4.877808,-6.299483,-9.782848],[-2.896206,-9.017051,-4.560665,-8.054168,-9.897710,-9.183333,4.590916,4.149168,4.683308],[-4.465277,2.754888,-8.780755,3.314489,-3.148648,-6.584400,-3.329155,2.610312,-6.043296],[-1.661657,-7.469294,9.532957,2.993561,-6.287291,-0.181686,-2.733183,-4.929757,-9.224483],[5.128252,-2.531716,-9.016119,-0.897230,3.400600,3.086380,1.420983,7.753771,-0.322318],[0.196713,2.261428,-3.774249,9.178348,-9.273657,-7.444671,5.625324,7.094083,-1.742915],[-0.724848,-1.146308,-5.223193,3.092246,4.743493,6.112097,-7.936009,0.664898,6.819991],[7.003312,-8.512778,-5.554575,0.316574,-7.509824,2.162423,-4.630930,3.495037,-9.566796],[-2.470913,-3.140719,-3.238960,8.654763,-5.880293,-6.325618,-6.731187,-2.406662,-2.261515],[4.898678,-8.591271,-8.058251,-3.702797,-8.208567,4.262181,1.819619,-8.563940,-9.615791],[-8.695015,6.558451,-6.423894,-3.462427,-9.849731,-8.594357,1.994152,-0.090788,7.109979],[5.588017,3.420196,-4.759059,-6.871530,-1.775944,9.019985,0.691835,-8.424028,-3.531170],[9.305255,2.574661,8.845872,-9.285304,9.206352,4.249052,7.404766,5.943482,-5.328174],[4.962164,8.660837,4.771967,-3.085071,-1.772994,-9.249563,-4.769330,2.193005,5.971983],[9.848023,3.600758,-9.696499,0.897019,-2.823368,-3.173147,-1.029827,3.550237,2.524076],[-2.370002,-2.505727,-2.486328,3.613441,-5.104882,-8.508931,-2.265461,0.067556,-0.920201],[-6.638702,3.741645,-4.622358,2.589236,8.315084,4.306295,5.259315,4.882971,-9.752920],[-7.145728,-4.285834,1.384091,-6.340652,-1.206934,6.868149,9.115090,-9.241331,-1.971054],[-8.609177,-4.480940,5.607151,-8.627945,1.682772,-3.585924,2.926658,-6.677361,7.979851],[-1.448396,5.120528,5.563784,-3.167415,-4.330060,0.932029,1.445977,-8.699545,4.198961],[8.176311,-1.066649,9.020631,3.921134,-2.106962,-9.961063,9.607150,2.107208,5.167638],[7.408028,-0.681460,4.218965,0.543317,7.896173,-6.008230,4.278931,4.567643,-4.854477],[-7.300712,7.413904,3.197001,-7.293778,5.735393,9.284524,-8.634491,-4.292102,-8.135288],[-0.190339,-5.361826,9.594536,-8.952640,9.509100,5.593504,2.074538,5.033370,-3.964865],[-4.013496,6.323276,-9.772811,1.734552,4.287117,7.008114,6.257034,0.637647,-6.419598],[-7.375188,5.375963,-3.261494,3.543468,-2.407403,-3.499787,-4.703841,1.530764,-7.181326],[-8.808095,-4.959213,3.412574,-8.394399,8.867492,4.545786,-2.334013,6.594489,1.896655],[-8.988272,5.070813,8.079109,7.765320,-6.444195,9.321471,2.931683,-9.801803,5.252451],[0.952412,-6.119245,-2.477054,-0.174430,7.852934,-0.299521,6.399242,-0.868733,-5.734633],[2.455622,2.855951,-6.401223,-5.397727,-9.987616,-9.698614,9.129199,5.535197,-9.271208]], dtype = "float64")#candidate|4737|(91, 9)|const|float64
const_4738 = relay.const([6,-6,9,4,9,9,-3,1,10,4,-7,2,10,-3,9,-10,-7,2,10,-9,9,6,-9,-2,1,4,9,-9,2,-9,9,9,-6,3,8,6,10,-1,-1,9,-1,9,-2,8,-10,6,6,7,-6,-7,-2,2,-9,2,-6,-1,7,6,8,-3,10,-10,-5,-6,5,5,-10,-1,10,10], dtype = "uint32")#candidate|4738|(70,)|const|uint32
call_4736 = relay.TupleGetItem(func_4056_call(relay.reshape(const_4737.astype('float64'), [7, 117]), relay.reshape(const_4738.astype('uint32'), [1, 70]), ), 1)
call_4739 = relay.TupleGetItem(func_4059_call(relay.reshape(const_4737.astype('float64'), [7, 117]), relay.reshape(const_4738.astype('uint32'), [1, 70]), ), 1)
func_4466_call = mod.get_global_var('func_4466')
func_4470_call = mutated_mod.get_global_var('func_4470')
const_4745 = relay.const([1,-2,9,-10,7,-4,1,4,-5,4,9,10,6,8,-3,7,-6,-2,2,-3,-4,-2,2,-8,1,6,-7,9,-4,-5,1,8,3,-4,6,6,6,-6,3,7,5,-1,-8,6,-7,-8,5,10,5,-4,3,10,7,-8,-9,-4,8,9,-6,-9,-5,5,-10,7,9,8,-3,-1,-6,3,-4,2,-2,10,-5,5,4,8,-5,1,6,7,-10,2,-5,-3,-9,3,-5,1,9,-10,6,-9,2,-6,-1,-10,9,-9,4,-7,7,8,2,4,7,-4,-1,-3,-3,1,-2,-5,2,7,-7,1,-2,-8,8,6,5,8,5,8,2,3,2,-5,3,-10,-4,-4,10,3,-5,3,10,-7,5,-4,9,-1,5,-7,5,9,-10,10,-7,10,-9,-4,-8,-4,8,-2,-5,-10,-8,-9,6,-4,2,-8,4,-5,-3,-4,1,6,7,-8,8,3,5,-8,-1,-5,6,-6,-3,7,-9,9,-2,9,10,4,-3,5,-10,-9,7,5,-9,-6,-3,10,-8,10,-3,-9,-6,2,-9,-9,2,-9,-4,-2,9,-7,3,-2,6,10,3,-2,-2,10,3,-2,1,-2,10,-10,-4,-1,2,-9,-7,8,8,-1,-6,4,2,4,9,-8,2,8,-5,-4,-2,7,-1,9,7,-10,3,-2,-3,-10,-6,3,-6,-5,-2,10,-1,-5,-4,-2,6,-3,9,6,6,6,4,-10,-2,3,-6,-10,-4,1,-1,8,-6,-8,8,9,-8,6,4,-4,2,4,4,5,1,5,-9,-1,4,2,-1,-8,7,3,-9,-10,6,-7,10,-8,9,2,6,5,-3,4,1,3,3,9,-4,-2,-3,-1,-4,3,-4,-1,8,-10,6,-5,5,3,3,-3,1,7,6,-6,-9,-4,-3,3,3,-2,-9,-6,-4,-6,2,-6,-5,-8,3,1,-4,4,2,-1,-1,5,-10,6,-1,5,-2,-8,-3,7,-4,-7,5,-8,-9,3,-1,-3,9,-7,4,6,2,-4,-2,-3,1,-7,-3,7,-3,5,-7,5,10,6,5,-1,-6,3,5,-6,-8,-7,7,5,2,-2,-10,3,-2,-3,1,-3,6,6,-4,10,-7,-2,-8,-4,9,-9,4,1,3,4,-8,4,5,-7,-4,8,3,8,9,4,-8,8,-9,10,3,-7,-1,4,2,-2,8,10,1,5,-9,-9,5,9,-8,-5,2,-3,4,-8,9,-5,-3,-2,-2,-6,7,-8,-5,-6,5,-8,-3,10,8,-6,-2,-8,5,-9,7,9,-3,8,-3,4,6,-5,-1,-8,6,8,4], dtype = "int32")#candidate|4745|(495,)|const|int32
const_4746 = relay.const([3,7,-1,6,5,-1,8,6,-7,5,-9,7,-7,-3,8,-2,-2,-3,-9,-5,2,-3,-3,-4,-2,-10,-2,-6,1,-1,-9,-2,-4,-2,-3,-7,6,5,9,-2,10,3,9,2,1,3,-8,9,-1,7,9,-10,4,-6,7,-3,10,-1,-5,10,-8,-6,-9,10,-7,3,9,-2,-9,5,6,4,-3,-4,-10,6,7,-4,-8,-6,1,2,-3,4,-3,-9,-6,7,-10,2,5,-7,2,1,-8,-7,-4,-9,-3,10,-2,9,2,9,-4,1,1,-4,-1,-2,-1,6,-8,-4,-7,-9,1,-7,1,-4,-9,8,5,2,8,3,-5,-7,-3,3,5,-1,9,1,5,9,-2,-5,-1,-3,3,8,-6,-8,-6,-10,-5,7,-8,6,-6,7,-3,5], dtype = "uint32")#candidate|4746|(154,)|const|uint32
call_4744 = relay.TupleGetItem(func_4466_call(relay.reshape(const_4745.astype('int32'), [495,]), relay.reshape(const_4746.astype('uint32'), [154,]), ), 3)
call_4747 = relay.TupleGetItem(func_4470_call(relay.reshape(const_4745.astype('int32'), [495,]), relay.reshape(const_4746.astype('uint32'), [154,]), ), 3)
func_4205_call = mod.get_global_var('func_4205')
func_4208_call = mutated_mod.get_global_var('func_4208')
call_4809 = func_4205_call(relay.reshape(call_4734.astype('float64'), [11, 4, 10]))
call_4810 = func_4205_call(relay.reshape(call_4734.astype('float64'), [11, 4, 10]))
output = relay.Tuple([call_4734,call_4736,const_4737,const_4738,call_4744,const_4745,const_4746,call_4809,])
output2 = relay.Tuple([call_4735,call_4739,const_4737,const_4738,call_4747,const_4745,const_4746,call_4810,])
func_4835 = relay.Function([], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
output = func_4835()
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_4880 = func_4313_call()
call_4881 = func_4313_call()
output = call_4880
output2 = call_4881
func_4889 = relay.Function([], output)
mod['func_4889'] = func_4889
mod = relay.transform.InferType()(mod)
mutated_mod['func_4889'] = func_4889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mutated_mod.get_global_var('func_4889')
call_4890 = func_4889_call()
output = call_4890
func_4891 = relay.Function([], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_4894 = func_4168_call()
call_4895 = func_4168_call()
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_4905 = relay.var("var_4905", dtype = "uint16", shape = ())#candidate|4905|()|var|uint16
const_4906 = relay.const([-7,-5,-1,7,-5,4,9,-6], dtype = "uint16")#candidate|4906|(8,)|const|uint16
call_4904 = func_211_call(relay.reshape(var_4905.astype('uint16'), []), relay.reshape(const_4906.astype('uint16'), [1, 2, 4]), )
call_4907 = func_211_call(relay.reshape(var_4905.astype('uint16'), []), relay.reshape(const_4906.astype('uint16'), [1, 2, 4]), )
output = relay.Tuple([call_4894,call_4904,var_4905,const_4906,])
output2 = relay.Tuple([call_4895,call_4907,var_4905,const_4906,])
func_4914 = relay.Function([var_4905,], output)
mod['func_4914'] = func_4914
mod = relay.transform.InferType()(mod)
var_4915 = relay.var("var_4915", dtype = "uint16", shape = ())#candidate|4915|()|var|uint16
output = func_4914(var_4915)
func_4916 = relay.Function([var_4915], output)
mutated_mod['func_4916'] = func_4916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_4978 = func_4168_call()
call_4979 = func_4168_call()
var_4985 = relay.var("var_4985", dtype = "int32", shape = (11, 4, 10))#candidate|4985|(11, 4, 10)|var|int32
bop_4986 = relay.greater(call_4978.astype('bool'), relay.reshape(var_4985.astype('bool'), relay.shape_of(call_4978))) # shape=(11, 4, 10)
bop_4989 = relay.greater(call_4979.astype('bool'), relay.reshape(var_4985.astype('bool'), relay.shape_of(call_4979))) # shape=(11, 4, 10)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
const_4996 = relay.const([2.231735,-9.581104,-2.326241,-9.031648,-3.435710,3.611767,5.854795,3.514760,2.237792,-3.016948,1.876812,8.894605,-0.237796,-8.924243,-7.773786,-3.572407,4.433916,-4.347844,-7.881386,0.599291,6.749777,-2.734609,9.936971,-6.455522,-2.605990,-2.665886,6.442388,1.716543,1.835678,-4.546305,7.447409,8.463657,1.326613,-2.409785,-0.972721,4.071972,-9.418862,-0.346994,1.084787,-4.667041,2.470906,3.833300,8.686895,4.837137,-1.651001,-0.811433,-1.009847,-0.181514,0.817058,-8.186623,7.618579,-4.716752,4.522650,9.366521,8.154802,-9.264749,-3.735568,9.801392,-3.312196,-7.470831,-7.103013,-7.176351,2.176827,5.160886,8.572489,-8.086602,1.445548,-3.104298,-0.520923,5.764793,-3.221304,-8.688344,-9.247809,-0.768358,-9.239052,1.228614,9.387943,-5.044644,2.352904,-4.689748,9.965305,3.547459,5.571627,2.565472,8.612847,0.364206,-2.376227,-3.976814,8.922252,3.640795,-7.531043,8.310107,-1.264749,-4.434003,6.399318,-6.475592,6.977984,8.318667,4.203899,-9.326333,9.154590,-6.150137,-2.924320,-7.909835,3.895064,3.420915,1.248929,-9.026494,-4.946453,2.400173,9.120673,-3.298063,2.798183,7.803528,-3.405466,0.351828,9.090460,3.761239,-1.765850,8.815905,1.383352,6.245626,1.014922,-4.077883,-1.826503,3.676193,5.629812,9.759517,3.569610,-5.387807,-5.756911,-5.586311,2.589247,8.654022,7.008744,-7.872231,-6.614971,7.928268,1.506366,9.104885,8.542055,7.633121,6.921775,1.738036,0.359110,-2.894970,9.386158,7.992394,3.890396,2.387800,2.185379,8.759364,9.268937,-4.753627,5.484700,0.616907,-2.403865,0.147328,3.210324,6.297026,-3.501784,-3.480533,-7.469302,5.104750,2.857398,-8.711259,-8.577848,-8.702263,6.013557,-7.282457,-8.579562,3.985507,-4.137690,-6.094837,-1.275732,-1.163665,-6.109035,-4.763374,-7.106357,-1.639980,-5.171721,-6.892876,-3.203693,2.256708,9.071543,-9.866294,7.390165,6.101639,9.039868,1.711194,0.026744,-1.146625,-3.894386,-2.339899,-5.083492,-6.969986,2.852292,7.436356,4.423158,5.231263,-3.821975,1.032098,-3.543852,3.018130,-4.161785,5.420607,-3.580109,9.531109,-9.686399,0.669594,-4.009607,-0.417596,4.152353,-0.929705,-4.606814,8.051103,9.273479,-8.305674,1.884014,8.064999,-1.462339,0.831256,5.126190,7.674956,-0.192382,-9.623945,2.539724,5.520082,1.668592,3.570939,7.131518,-5.221712,5.633963,-8.616240,2.005422,4.215909,-0.947932,-0.671145,6.998252,-9.375739,6.961084,8.826516,0.655646,5.491731,-7.785556,-7.177680,6.849802,-2.589065,4.843188,-0.250688,6.937122,-2.239872,-1.790777,4.921410,-7.572479,-5.707962,-4.346149,-1.628390,-0.843863,-3.260940,3.391825,-3.644950,-5.538021,7.444357,-5.310217,-3.572377,6.053982,9.538161,5.122176,-7.853618,-6.232737,2.050679,-9.744891,-1.012721,6.743106,5.054037,0.954626,-7.403921,-0.091365,5.254333,5.475470,-6.832123,-8.022684,-1.253289,-7.361531,-7.995879,0.920154,-7.952146,5.115839,-5.746607,5.327048,4.992507,-0.646863,-5.467291,-3.004439,9.087035,3.295447,-1.556835,9.875774,-3.854424,3.377144,3.187567,-1.067034,-1.024216,-7.607636,7.049039,-5.873312,5.861780,-7.282316,-8.912164,1.133863,-4.747962,9.609722,4.707163,5.751526,2.861208,-4.582038,-7.192221,-5.304515,-2.757718,8.600308,-3.480292,4.457056,-8.699777,-1.757082,-0.642593,-5.901316,-6.077182,6.775414,7.611247,1.329520,-7.088987,8.450703,7.331004,1.951092,-0.700707,9.648288,2.248369,-8.853140,-1.930580,-1.545986,2.790467,5.793190,-4.045459,6.302519,8.928044,-7.411691,-5.803354,-5.534759,3.115794,9.454377,5.358514,2.972029,6.208326,-3.208504,-7.019388,-6.493152,-6.572088,6.558504,6.728474,-7.994614,-1.309510,-3.564382,-2.001955,-9.160228,-1.690624,0.863606,-0.812062,-8.977371,1.304594,1.777214,5.003845,7.521803,2.104048,5.223887,3.520451,3.330338,-2.340891,-3.648673,7.420658,2.211096,-5.847160,6.161147,8.522100,7.734663,-6.981262,-3.934153,-2.095332,6.365266,-4.165393,-2.803566,-9.206510,5.290443,9.525363,6.826830,-0.565541,9.895112,-0.062710,8.616707,-4.745289,-0.786143,4.167608,7.670012,-2.619620,6.982691,4.171439,-0.871320,-5.739440,-4.768784,9.182987,-7.831504,-0.015653,-9.505705,-1.098764,-2.749224,-8.410025,4.678623,4.606071,-9.239194,-9.645613,2.598652,5.357808,3.423498,0.173787,-2.059651,-1.370253,6.419599,-3.350408,8.591310,2.610660,0.722523,-6.522349,-2.137725,0.795538,6.368509,-8.814788,4.818475,-1.785729,6.256742,4.730944,-3.036628,-5.992542,-8.701013,2.935369,0.665238,-6.168040,5.611265,-6.087100,-6.300817,-8.274419,7.879836,-5.838174,-0.111554,3.491636,7.625412,4.633121,-0.473434,3.615470,-5.767745,-9.619836,8.314319,7.712701,6.272420,-9.742680,6.962947,2.111576,-1.111856,-6.558865,-9.676258,-0.446416,-0.564347,4.432557,-8.722792,3.441490,-7.293726,-5.107220,-5.691477,-8.825544,0.377615,-7.881143,8.759898,5.513887,5.000062,-6.315058,-5.738861,5.612342,3.957081,3.552195,1.203305,-2.822854,8.734628,-8.703161,-4.060106,1.963937,8.148465,0.964999,-1.572049,-0.827373,-7.117647,8.968445,-1.904128,2.179607,-5.133525,9.780015,1.760412,7.246674,-8.891135,2.797641,-5.093369,9.737369,-2.910962,-7.791427,9.234752,-8.995397,5.808845,-6.361011,7.435611,9.101980,6.116846,1.252117,0.246576,6.370151,-1.140220,-9.098413,9.041193,7.791060,-0.412657,-4.502866,-6.215924,1.031801,3.148022,7.236209,3.203255,-3.287902,2.814144,-8.178274,-3.593705,5.042330,-1.705441,2.383130,7.792138,9.485863,-8.505207,0.378532,-6.866348,-9.322573,4.131867,-7.430702,1.681799,8.232385,8.467152,8.116247,0.561336,-7.420479,-6.060398,1.673878,-6.222571,-0.976488,1.337002,-4.709141,-1.636834,0.414081,-5.577356,0.328586,-6.478987,5.904694,-8.693178,7.109432,8.440117,9.613597,1.843126,7.413368,1.947500,-4.525679,6.216598,-6.960634,4.530578,3.229296,-2.525862,2.705740,6.698678,-0.808626,2.907504,5.217606,7.042415,6.161918,-0.065084,2.912972,-1.204935,-5.529864,-1.630853,4.658402,-5.954615,5.354303,4.636830,4.254824,3.995618,-2.573093,9.447178,6.258961,-4.924758,9.510890,6.462242,-9.808257,-5.450451,-6.163541,-4.464326,-4.417566,-1.684137,0.980013,5.786365,6.557745,-2.419189,7.010067,1.121500,-6.536185,5.878468,-4.824157,-8.097307,-9.445629,6.350380,2.435565,1.456795,-0.884583,-3.430778,5.008193,-4.258422,-3.975675,7.395871,-6.943550,3.853758,-4.072513,-4.933048,9.962233,-0.314316,0.451960,-5.410752,6.840614,7.757754,-4.595422,8.660248,3.878491,-3.981236,-1.410314,5.098219,-9.032294,4.170783,-2.927525,-4.592287,8.921832,0.471414,-6.397075,9.791424,3.908569,-6.017644,-0.315278,-7.962519,9.722360,-6.645319,-4.146614,6.971363,-0.106998,2.288890,-2.725802,-6.367293,-3.785035,4.318561,-9.692555,-2.917817,9.392144,4.453879,-2.330558,2.269487,-3.343862,4.081162,3.611409,5.617966,-0.123107,-8.475115,-1.895709,-0.697757,1.164293,-1.159192,-6.879068,6.866270,7.781099,-5.890221,-4.016840,9.745813,0.619522,7.104968,6.147273,-9.420831,-7.460612,6.515974,6.771826,1.438546,7.066815,-8.096671,1.362235,8.586301,-1.629576,-2.174373,7.365958,1.293369,8.306418,7.948317,-2.436726,-2.037714,9.879146,5.610220,4.482793,7.078086,-7.478322,-0.840467,5.609253,-8.563510,6.307254,7.684685,6.548058,5.460076,7.058727,7.242991,-1.700095,-2.013399,5.377574,3.112410,5.060769,9.929931,-5.340833,0.857945,8.046995,-2.758266,-6.583288,6.589524,-8.185599,-1.744059,-0.027058,5.637055,8.431427,-7.152371,-9.566847,0.425366,-6.815199,8.484428,7.730684,-1.339286,7.375098,3.595361,-0.311704,3.612637,-6.010206,6.830302,4.372443,1.630642,-7.103955,-6.307377,3.798004,-7.507690,-2.370421,7.277078,-8.825150,3.349384,-3.862349,-6.387526,3.321863,5.796799,2.213795,-5.581357,-7.921589,-4.362133,9.294976,3.264068,-2.952928,-0.209431,3.992839,-7.983293,-1.328518,5.667710,5.760523,4.686223,1.639801,-9.885839,3.742178,-2.926170,-8.821436,1.369851,8.397433,2.589199,-0.623317,-2.707977,7.277570,-0.180365,-6.903067,-5.488680,0.291239,4.590742,-8.605611,4.095378,-2.150150,9.896484,-1.994292,1.635732,1.225944,-9.100605,-5.168784,-4.199094,3.410735,9.458169,-4.188003,1.683749,-1.242127,1.083898,-8.333187,-5.930328,-1.410314,-7.169947,-0.832302,-9.073833,-9.607790,-0.102001,2.876883,-8.571431,7.170276,4.599362,9.947691,2.856699,0.798533,-6.699635,9.294355,-4.596243,1.291762,0.408125,-1.244953,8.658147,-6.142775,-2.917945,-5.146249,-0.330643,-4.064150,-9.028698,2.638066,5.258854,-1.702459,-9.123692,9.689945,6.231418,6.234246,-9.147282,-9.019760,-7.254924,3.875820,-8.807560,4.650737,4.293889,-0.080726,4.568317,4.704138,-7.359055,0.015251,-1.235754,-6.976465,3.204249,-2.710095,5.996431,3.071142,5.805267,-8.739630,2.390291,-7.357131,-5.489036,-5.039168,-6.919575,-4.979306,4.633143,-5.047455,-7.984976,1.950274,-7.069694,-5.791297,-9.280874,-6.063582,-3.163980,5.275714,-5.024095,2.780195,1.277480,5.339926,8.622981,-1.056006,3.192918,-3.063341,6.950180,9.579356,4.084247,-2.434698,3.667804,6.173615,7.938276,2.180481,1.718823,-9.410546,-1.755758,-4.922802,-9.203504,-3.770854,1.835071,7.562408,-7.012191,0.621987,-7.614015,9.534909,-4.878181,-5.064716,-2.986740,6.703315,-7.810402,-7.385771,8.208663,-4.208838,7.936937,2.692732,-2.553886,-5.425690,8.135962,-2.197565,3.087864,-8.640776,1.819514,7.822286,-2.943191,5.240104,3.554029,-7.562573,-0.994538,-3.345021,0.420230,4.161077,-7.036138,1.178732,8.825596,-6.124986,6.637203,-3.361651,8.525385,-9.177384,-4.481908,-4.020720,8.812984,1.967491,5.985329,-3.985279,8.473281,-5.838407,8.723080,-5.927708,-3.980967,5.646802,3.796684,-1.502476,3.676379,-9.310109,-7.411243,3.711669,6.773844,4.043040,-2.246515,-6.978863,8.295822,-2.014057,-3.984329,8.634239,5.641382,-4.139317,-9.159503,0.230824,-4.380619,-6.844259,-8.763980,-7.076602,-6.296249,-0.464621,1.443500,-7.675232,-3.260524,2.183601,5.203804,4.654447,0.017473,4.592712,-6.896092,-1.174494,6.203720,2.239539,-5.647632,5.065246,3.834581,-2.040433,-0.727355,-9.796581,2.070330,1.065222,-3.501666,7.126871,6.800209,-6.372046,3.475458,-4.238620,7.622158,-8.399847,3.890866,-0.855618,7.993179,-4.006794,8.698296,-3.512528,-3.521213,-9.477419,-2.685413,0.968168,-4.885879,7.721987,-1.317173,-8.811082,9.720594,9.803215,1.349407,-1.300411,-7.305626,-2.851576,2.554220,-9.031456,0.239657,-8.970119,-5.860584,8.734297,7.096072,-3.444598,-8.892783,0.308026,4.687059,-7.204512,-7.811270,-1.999045,7.305834,4.439017,3.536223,3.333815,-9.002274,4.615712,4.336769,1.516265,0.556698,-1.361330,9.602445,-8.392932,-3.911299,7.883857,4.640095,-7.494533,-5.276595,8.123510,2.595885,-9.113985,-2.165690,1.797087,-6.512122,5.409309,-1.164997,8.128548,7.141121,1.456282,8.798754,0.411009,-5.580074,9.515863,0.143941,-8.790427,4.412014,-6.241808,-6.485184,6.530810,-7.582649,6.452566,-4.886804,-9.292308,-0.453493,-4.245016,-3.060263,-4.784564,7.963604,-0.929916,-2.711244,5.228623,8.963456,2.844842,5.757000,4.339956,2.800083,9.625900,9.634470,-6.071449,8.611613,7.673266,-7.352993,-0.805667,-8.066461,-0.780942,2.801100,-6.172195,3.194018,1.331349,1.957323,-7.650783,3.352783,-5.802680,-8.376743,-7.899100,2.628385,5.517706,9.864387,0.138633,-4.550090,-3.950559,-1.242273,8.987390,-0.860848,-4.748171,1.274292,9.882336,-8.818126,1.229795,-5.883986,-3.327497,-3.526060,0.132341,9.609935,0.777379,-4.595116,-4.272983,-0.191000,-9.434571,-8.363763,-7.100285,9.652229,-8.864414,-2.111836,-4.849921,4.438553,-9.744538,1.451195,6.755880,1.389422,-5.108593,-4.019054,-1.083557,-1.012731,1.310259,3.417141,-5.454656,0.406410,3.092169,9.807422,-0.398356,-8.633665,-1.868651,-2.089022,2.969822,-8.343982,1.314630,-5.530178,3.256456,-0.395598,4.603793,8.391190,5.818959,-2.188904,-0.646940,-0.406418,-9.682190,6.241451,-4.497092,-8.025237,5.059685,-0.201001,9.368274,-3.629722,2.952904,1.912261,3.010322,4.362691,-6.962251,5.917674,2.305569,0.531526,-6.129685,-4.212300,9.153992,-8.309560,9.569053,2.736093,8.944646,6.563865,0.802331,4.463323,1.461677,2.792758,-6.047043,-1.836755,-9.002391,4.106214,0.131094,-2.372618,-7.383518,3.623382,2.830366,-7.833384,7.923939,3.703539,8.340034,3.139661,1.827342,-7.311369,4.963468,2.365148,-4.591414,-9.498129,-1.709928,-3.585407,-1.658607,-0.543591,3.384670,-5.959141,1.394195,3.914069,1.892744,1.520158,6.959082,-5.483345,7.602423,-0.257612,1.695397,3.796758,1.811289,-2.305957,0.882473,9.366337,-1.184711], dtype = "float64")#candidate|4996|(1248,)|const|float64
call_4995 = relay.TupleGetItem(func_3803_call(relay.reshape(const_4996.astype('float64'), [13, 12, 8])), 0)
call_4997 = relay.TupleGetItem(func_3805_call(relay.reshape(const_4996.astype('float64'), [13, 12, 8])), 0)
uop_5000 = relay.asin(call_4995.astype('float64')) # shape=(13, 12, 8)
uop_5002 = relay.asin(call_4997.astype('float64')) # shape=(13, 12, 8)
output = relay.Tuple([bop_4986,const_4996,uop_5000,])
output2 = relay.Tuple([bop_4989,const_4996,uop_5002,])
func_5017 = relay.Function([var_4985,], output)
mod['func_5017'] = func_5017
mod = relay.transform.InferType()(mod)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5018 = relay.var("var_5018", dtype = "int32", shape = (11, 4, 10))#candidate|5018|(11, 4, 10)|var|int32
func_5017_call = mutated_mod.get_global_var('func_5017')
call_5019 = func_5017_call(var_5018)
output = call_5019
func_5020 = relay.Function([var_5018], output)
mutated_mod['func_5020'] = func_5020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5046 = relay.var("var_5046", dtype = "uint8", shape = (14, 4, 10))#candidate|5046|(14, 4, 10)|var|uint8
var_5047 = relay.var("var_5047", dtype = "uint8", shape = (14, 4, 10))#candidate|5047|(14, 4, 10)|var|uint8
bop_5048 = relay.right_shift(var_5046.astype('uint8'), relay.reshape(var_5047.astype('uint8'), relay.shape_of(var_5046))) # shape=(14, 4, 10)
uop_5051 = relay.cos(bop_5048.astype('float32')) # shape=(14, 4, 10)
uop_5059 = relay.log10(uop_5051.astype('float64')) # shape=(14, 4, 10)
bop_5066 = relay.left_shift(uop_5059.astype('int8'), relay.reshape(uop_5051.astype('int8'), relay.shape_of(uop_5059))) # shape=(14, 4, 10)
bop_5083 = relay.equal(bop_5066.astype('bool'), relay.reshape(uop_5059.astype('bool'), relay.shape_of(bop_5066))) # shape=(14, 4, 10)
output = bop_5083
output2 = bop_5083
func_5087 = relay.Function([var_5046,var_5047,], output)
mod['func_5087'] = func_5087
mod = relay.transform.InferType()(mod)
var_5088 = relay.var("var_5088", dtype = "uint8", shape = (14, 4, 10))#candidate|5088|(14, 4, 10)|var|uint8
var_5089 = relay.var("var_5089", dtype = "uint8", shape = (14, 4, 10))#candidate|5089|(14, 4, 10)|var|uint8
output = func_5087(var_5088,var_5089,)
func_5090 = relay.Function([var_5088,var_5089,], output)
mutated_mod['func_5090'] = func_5090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_5123 = func_3976_call()
call_5124 = func_3976_call()
func_3101_call = mod.get_global_var('func_3101')
func_3103_call = mutated_mod.get_global_var('func_3103')
var_5146 = relay.var("var_5146", dtype = "float32", shape = (2, 1200))#candidate|5146|(2, 1200)|var|float32
call_5145 = relay.TupleGetItem(func_3101_call(relay.reshape(var_5146.astype('float32'), [16, 15, 10])), 0)
call_5147 = relay.TupleGetItem(func_3103_call(relay.reshape(var_5146.astype('float32'), [16, 15, 10])), 0)
uop_5186 = relay.sinh(var_5146.astype('float64')) # shape=(2, 1200)
output = relay.Tuple([call_5123,call_5145,uop_5186,])
output2 = relay.Tuple([call_5124,call_5147,uop_5186,])
func_5189 = relay.Function([var_5146,], output)
mod['func_5189'] = func_5189
mod = relay.transform.InferType()(mod)
mutated_mod['func_5189'] = func_5189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5190 = relay.var("var_5190", dtype = "float32", shape = (2, 1200))#candidate|5190|(2, 1200)|var|float32
func_5189_call = mutated_mod.get_global_var('func_5189')
call_5191 = func_5189_call(var_5190)
output = call_5191
func_5192 = relay.Function([var_5190], output)
mutated_mod['func_5192'] = func_5192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_5214 = relay.TupleGetItem(func_3299_call(), 0)
call_5215 = relay.TupleGetItem(func_3301_call(), 0)
uop_5221 = relay.sin(call_5214.astype('float64')) # shape=(11, 4, 10)
uop_5223 = relay.sin(call_5215.astype('float64')) # shape=(11, 4, 10)
func_2290_call = mod.get_global_var('func_2290')
func_2295_call = mutated_mod.get_global_var('func_2295')
const_5228 = relay.const([[1,-9,-1,6,-5,-9,-10,-6,8,1,8,6,5,-10,5,7,-7,5,-1,10,-1,-2,-4,3,-10,-3,-10,-6],[-4,2,-6,7,5,3,-4,-5,4,10,-6,9,-7,-6,-3,6,7,-9,6,8,10,1,-6,3,-4,9,-5,-5],[3,1,-4,-3,4,-3,10,6,-5,-5,3,-5,10,4,2,-10,-3,-1,10,7,8,6,3,5,9,3,10,7],[-9,9,-4,-6,-2,3,1,-7,2,-4,-5,7,2,6,-7,4,-5,7,2,6,10,-7,9,-9,-5,-10,-5,6],[6,-9,-4,8,8,9,-1,-5,4,4,-3,-8,8,-1,-2,10,9,-10,-6,4,-6,-3,8,7,-9,-9,6,3],[3,8,-2,-5,10,4,6,10,-1,-8,-5,2,10,8,-9,9,-6,-9,-5,-7,-2,5,-1,1,-9,10,7,-8],[5,10,-7,-6,-6,-9,-1,-10,-1,2,-9,1,-3,-4,7,7,7,4,8,9,6,7,-8,4,-1,9,-1,-9]], dtype = "uint64")#candidate|5228|(7, 28)|const|uint64
var_5229 = relay.var("var_5229", dtype = "uint32", shape = (154,))#candidate|5229|(154,)|var|uint32
call_5227 = relay.TupleGetItem(func_2290_call(relay.reshape(const_5228.astype('uint64'), [4, 7, 7]), relay.reshape(const_5228.astype('uint64'), [4, 7, 7]), relay.reshape(var_5229.astype('uint32'), [154,]), ), 1)
call_5230 = relay.TupleGetItem(func_2295_call(relay.reshape(const_5228.astype('uint64'), [4, 7, 7]), relay.reshape(const_5228.astype('uint64'), [4, 7, 7]), relay.reshape(var_5229.astype('uint32'), [154,]), ), 1)
func_398_call = mod.get_global_var('func_398')
func_400_call = mutated_mod.get_global_var('func_400')
const_5234 = relay.const([6.848792,-6.304611,-2.874974,8.220119,-5.610013,4.054502,-1.532700,-2.209547,6.287451,-2.652129,0.278434,-9.624035,-8.342982,3.565703,2.359046,3.050917,-3.496281,3.275376,-7.586865,-1.240734,-3.877676,-5.857967,5.500400,1.952763,-7.346567,7.142957,1.034183,-4.843958,8.468909,5.478188,0.450203,-1.336553,-8.243043,-8.504314,-5.160476,-7.200019,-7.383464,-7.016321,0.494308,4.665352,7.833242,1.022241,-4.280490,1.314677,8.357321,-4.757200,9.024505,1.879285,-5.894019,-9.267153,-3.516905,9.070609,2.303283,-0.232230,7.450399,-6.188844,9.812733,8.960917,-5.196831,1.306887,0.858372,-5.314359,-3.237549,0.672317,5.240774], dtype = "float32")#candidate|5234|(65,)|const|float32
call_5233 = func_398_call(relay.reshape(const_5234.astype('float32'), [5, 1, 13]))
call_5235 = func_398_call(relay.reshape(const_5234.astype('float32'), [5, 1, 13]))
output = relay.Tuple([uop_5221,call_5227,const_5228,var_5229,call_5233,const_5234,])
output2 = relay.Tuple([uop_5223,call_5230,const_5228,var_5229,call_5235,const_5234,])
func_5236 = relay.Function([var_5229,], output)
mod['func_5236'] = func_5236
mod = relay.transform.InferType()(mod)
var_5237 = relay.var("var_5237", dtype = "uint32", shape = (154,))#candidate|5237|(154,)|var|uint32
output = func_5236(var_5237)
func_5238 = relay.Function([var_5237], output)
mutated_mod['func_5238'] = func_5238
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5240 = relay.const([[[8.353095,-1.989815,-6.915932,6.858999,-8.135134,-6.182400,1.023014,-3.427598,-6.332339,9.635911,4.599790,5.526685,0.792552,2.552015],[9.474344,-9.663421,-3.794389,-8.495537,5.635478,9.866078,-4.504589,4.122505,-8.939342,7.133633,-3.585451,-9.127367,-2.949219,-7.885371],[7.302602,4.511316,-6.254461,2.679801,-3.966758,-1.285280,-0.557848,-6.360162,9.816318,-2.585773,3.401071,-6.687187,-5.495203,9.993887]],[[-2.762113,-3.226630,-1.246721,8.266666,7.448799,8.012120,-8.525954,4.496888,1.198880,3.348977,4.040606,0.427701,1.282095,5.820151],[-5.112751,-7.550191,-2.792084,-7.223242,-1.942187,9.646868,6.592252,4.731526,-3.882796,-1.606958,-4.095479,-7.712795,2.532786,-3.758297],[-5.097517,-6.135340,9.791755,3.515970,-9.491591,-0.788944,4.655720,-7.857799,-7.199149,-4.244198,1.148602,-9.290841,-2.364789,5.797098]],[[-0.438382,-8.020085,1.813415,-0.599235,3.919925,-3.684022,7.002046,-8.348566,8.995227,8.340923,6.254327,-9.064127,-9.995908,-3.376703],[-8.063741,-7.781118,-9.375020,4.106647,-6.288622,-0.248925,5.614867,0.367255,0.472750,-9.116475,-9.414564,-8.636570,5.873624,-6.915150],[8.141025,4.955792,1.173226,4.521329,-9.993521,0.137437,-6.236983,9.111542,7.668517,-1.142627,-8.416845,7.977659,0.507129,-0.335370]],[[-6.499959,-7.641075,-0.933681,4.923184,-1.265252,4.485134,5.922737,8.817894,-8.753836,-6.988061,7.805435,-8.611146,1.084755,-4.979466],[9.417998,3.597743,-7.924362,3.457246,7.490767,-6.473687,9.220419,4.990506,-2.611517,-9.204930,3.207038,-5.096943,-6.396353,-2.430665],[-6.217720,-6.644535,-7.731831,-5.676270,4.952066,0.625059,-6.286175,-3.930931,0.426042,6.053720,-3.790264,-4.956225,-6.449050,-4.761523]],[[0.266807,-2.298054,-7.767682,5.213851,-5.011313,0.526613,4.739170,9.284933,-5.576887,-3.262277,6.039554,1.527063,4.893835,4.071989],[1.665395,-5.339315,-4.901978,-4.919366,3.044420,0.767249,2.306244,-9.309756,4.960266,0.500630,6.650445,1.171676,6.629892,2.122401],[-7.163408,-5.664320,-1.982578,-8.118673,9.098966,8.909599,-1.532591,-9.885350,7.486047,7.257148,-9.340574,-4.922725,-4.922968,-5.179866]],[[1.223911,-7.326393,-6.432087,0.405434,-6.718361,-0.275350,-2.139532,-3.523652,-8.611818,3.370579,4.552839,6.062772,2.100385,-9.978088],[9.525663,6.882532,-6.887984,1.054943,-3.650712,3.653306,-0.734103,-6.408068,-6.549139,-6.281725,2.653835,-9.575735,-2.081523,7.068251],[-7.564888,1.561071,-9.073900,-2.452677,-4.011452,-3.709446,-2.045113,6.179913,0.217708,8.708774,7.948931,-9.848760,5.762097,7.740519]],[[-3.281053,1.618259,-4.558837,3.304898,4.058116,0.669698,2.528985,-8.744545,-7.356510,-0.673817,9.738108,1.153995,9.670964,-9.737106],[-1.663290,-0.681677,-2.252966,3.996180,-9.626683,2.034429,-8.963850,-6.289921,-9.896953,5.958816,-2.470490,-0.853121,-9.762603,-7.072191],[-3.164047,-6.645712,1.812923,5.799679,3.045719,-0.312128,1.828424,0.099773,4.948214,0.735020,3.615732,-2.673031,0.961563,8.180135]],[[-9.664957,2.083915,-5.508730,5.546174,1.340826,8.014911,-1.558548,-2.553851,-5.646172,9.879520,1.841794,3.043930,-8.639668,2.014862],[9.432966,3.361784,-9.185878,-9.843209,-7.749220,-6.546754,-1.860894,-8.497101,-7.212436,5.099786,3.471967,-9.599082,5.659894,0.581734],[8.778326,6.945506,4.154614,-5.545780,-7.718795,6.815504,-3.061069,-8.024125,6.790341,3.340581,3.940757,-9.054078,-6.660282,-4.573624]],[[1.754762,1.556573,-0.715061,0.511089,8.361716,5.133819,-7.746251,-5.202317,2.336050,6.813780,-6.713614,-1.740608,8.556192,-2.903258],[3.605699,-2.566866,-7.456722,9.037352,-9.772383,-8.062983,-6.732704,8.463799,-2.151604,8.528608,-1.697183,6.091720,-6.051984,2.519859],[-6.871446,0.709408,-3.522255,-8.498938,3.857377,6.472707,-5.219079,9.434830,9.435395,4.342696,-4.367230,0.840494,-2.382202,3.149140]],[[-0.311911,-2.429002,-9.581449,-3.261779,6.484889,0.154382,-6.822617,1.952597,7.244690,4.073505,0.401843,-8.111084,-2.171629,7.959962],[-7.886826,1.798188,2.047150,-4.889669,7.822018,-4.458606,6.521894,7.359611,-0.453881,9.285597,8.626423,-4.034029,2.846537,-6.045559],[2.893482,-6.350235,9.197595,-1.287755,-1.235278,-1.469743,-3.564203,-0.563523,4.654561,5.708689,-0.866017,1.177525,-2.282682,2.308385]],[[-1.909219,3.122944,8.593293,-8.868567,8.385145,3.971484,6.050454,3.848773,-0.163284,7.199180,1.421717,1.710105,2.398360,0.852679],[-7.056464,-8.898094,-0.620970,-8.170319,9.706251,-6.585677,-5.058015,-3.191411,-4.837009,4.442926,-1.799077,-2.632251,5.231960,2.861753],[-0.449998,-4.159721,6.850807,6.879765,-3.270576,0.651478,-4.964748,-4.152255,8.182466,-0.014505,-0.856468,-2.494971,4.059931,-3.863767]],[[-6.609053,5.158578,-3.279702,-3.982923,-9.989271,-4.616456,4.499898,2.983994,6.417543,-0.002995,-4.931265,-5.657803,-2.930465,0.646309],[1.098320,5.107039,-1.969471,-5.142640,-3.789383,-4.820871,7.795569,-5.502583,4.940320,-1.804273,3.355440,7.603065,-5.717648,6.857398],[8.936667,-9.482614,-6.404346,-5.097988,-9.748375,-1.547442,7.562079,-0.056304,4.924920,-9.505376,-3.092725,7.743703,6.116025,6.680194]],[[6.779184,9.290675,-5.833015,1.213761,0.124631,2.375212,2.794780,-8.792817,-8.589925,9.036174,0.456751,-5.860583,-2.437072,-5.473758],[6.872738,3.072133,-1.314124,6.920606,-8.879672,6.102784,-5.826130,-7.264216,-2.209486,1.896989,2.079785,-2.213651,-6.807942,-1.882923],[6.060683,-8.194195,-5.202318,5.063519,-7.993410,1.749302,1.868049,-2.321976,6.192171,6.264936,-1.464809,0.152169,3.467072,-1.286893]],[[-0.491262,9.436294,3.034817,-9.239169,3.523135,-8.243686,-1.347972,3.509734,9.592750,-7.868356,-0.590215,-8.616971,-8.850129,-9.218824],[-6.100167,8.106246,1.804383,-7.332327,-0.363659,-1.494597,-5.674506,-2.318749,5.026641,-9.862931,9.527347,7.180883,2.732335,-6.336180],[5.578134,3.169248,-3.587492,4.750332,2.753782,-8.632860,-0.237187,-0.510899,-6.132078,-6.788710,-4.577601,-5.557396,6.003088,9.923038]],[[5.355956,-0.427165,-0.940771,-6.842730,-6.083716,-0.390267,9.531316,2.671407,7.696993,-7.769956,-0.629962,4.151831,-3.011402,1.794517],[-1.289422,-6.387204,-0.768424,-5.081517,-9.163102,6.978411,-5.055766,0.669279,7.955857,-0.618609,-3.953140,-2.327586,9.015415,8.775146],[3.063600,2.012558,9.285260,1.726135,-4.612735,-5.505271,7.605278,8.060955,3.695812,6.229932,8.772858,2.483072,2.617221,5.142646]],[[-9.551635,-5.713920,2.517709,9.482592,0.318143,-3.778624,-7.516037,-9.447538,4.984897,-3.797727,-8.368430,4.873865,1.574195,2.948404],[-1.058947,2.174564,4.182156,-1.731208,8.775930,3.926810,-8.991234,-7.580318,-2.440700,-2.902600,-4.709690,-6.200018,8.640291,-1.622267],[3.339969,2.066279,-5.548929,-9.966236,-9.208438,-4.156211,-2.685474,-5.875703,-5.010719,3.069345,8.974410,-3.410309,-4.902813,1.045623]]], dtype = "float64")#candidate|5240|(16, 3, 14)|const|float64
uop_5241 = relay.atanh(const_5240.astype('float64')) # shape=(16, 3, 14)
output = uop_5241
output2 = uop_5241
func_5243 = relay.Function([], output)
mod['func_5243'] = func_5243
mod = relay.transform.InferType()(mod)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mutated_mod.get_global_var('func_5243')
call_5244 = func_5243_call()
output = call_5244
func_5245 = relay.Function([], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5246 = func_5243_call()
call_5247 = func_5243_call()
output = relay.Tuple([call_5246,])
output2 = relay.Tuple([call_5247,])
func_5254 = relay.Function([], output)
mod['func_5254'] = func_5254
mod = relay.transform.InferType()(mod)
output = func_5254()
func_5255 = relay.Function([], output)
mutated_mod['func_5255'] = func_5255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3394_call = mod.get_global_var('func_3394')
func_3395_call = mutated_mod.get_global_var('func_3395')
call_5256 = relay.TupleGetItem(func_3394_call(), 0)
call_5257 = relay.TupleGetItem(func_3395_call(), 0)
func_125_call = mod.get_global_var('func_125')
func_128_call = mutated_mod.get_global_var('func_128')
const_5263 = relay.const(-10, dtype = "uint32")#candidate|5263|()|const|uint32
const_5264 = relay.const([-9,10,-9,9,-9,-7,-2,1,-10,10,-6,-7,-4,2,7,7,10,-6,-8,10,-9,-6,6,3,-6,5,-9,-9,-7,6,4,2,3,-4,-6,-10,-9,-5,6,3,10,-5,2,-3,7,-5,-5,7,-8,10,-5,-8,-9,-1,1,-8,-6,2,-9,7,6,-8,-10,8,-8,-1,-9,7,-3,4], dtype = "uint32")#candidate|5264|(70,)|const|uint32
call_5262 = relay.TupleGetItem(func_125_call(relay.reshape(const_5263.astype('uint32'), []), relay.reshape(const_5264.astype('uint32'), [7, 5, 2]), ), 0)
call_5265 = relay.TupleGetItem(func_128_call(relay.reshape(const_5263.astype('uint32'), []), relay.reshape(const_5264.astype('uint32'), [7, 5, 2]), ), 0)
func_891_call = mod.get_global_var('func_891')
func_895_call = mutated_mod.get_global_var('func_895')
var_5271 = relay.var("var_5271", dtype = "uint16", shape = (8,))#candidate|5271|(8,)|var|uint16
var_5272 = relay.var("var_5272", dtype = "float64", shape = (256,))#candidate|5272|(256,)|var|float64
call_5270 = relay.TupleGetItem(func_891_call(relay.reshape(var_5271.astype('uint16'), [8,]), relay.reshape(var_5272.astype('float64'), [256,]), ), 5)
call_5273 = relay.TupleGetItem(func_895_call(relay.reshape(var_5271.astype('uint16'), [8,]), relay.reshape(var_5272.astype('float64'), [256,]), ), 5)
var_5274 = relay.var("var_5274", dtype = "int64", shape = (4, 16, 4))#candidate|5274|(4, 16, 4)|var|int64
bop_5275 = relay.mod(call_5270.astype('float32'), relay.reshape(var_5274.astype('float32'), relay.shape_of(call_5270))) # shape=(4, 16, 4)
bop_5278 = relay.mod(call_5273.astype('float32'), relay.reshape(var_5274.astype('float32'), relay.shape_of(call_5273))) # shape=(4, 16, 4)
bop_5285 = relay.equal(call_5270.astype('bool'), relay.reshape(var_5274.astype('bool'), relay.shape_of(call_5270))) # shape=(4, 16, 4)
bop_5288 = relay.equal(call_5273.astype('bool'), relay.reshape(var_5274.astype('bool'), relay.shape_of(call_5273))) # shape=(4, 16, 4)
func_720_call = mod.get_global_var('func_720')
func_723_call = mutated_mod.get_global_var('func_723')
call_5292 = func_720_call(relay.reshape(bop_5275.astype('float64'), [4, 16, 4]))
call_5293 = func_720_call(relay.reshape(bop_5275.astype('float64'), [4, 16, 4]))
output = relay.Tuple([call_5256,call_5262,const_5263,const_5264,var_5271,var_5272,bop_5275,bop_5285,call_5292,])
output2 = relay.Tuple([call_5257,call_5265,const_5263,const_5264,var_5271,var_5272,bop_5278,bop_5288,call_5293,])
func_5298 = relay.Function([var_5271,var_5272,var_5274,], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
var_5299 = relay.var("var_5299", dtype = "uint16", shape = (8,))#candidate|5299|(8,)|var|uint16
var_5300 = relay.var("var_5300", dtype = "float64", shape = (256,))#candidate|5300|(256,)|var|float64
var_5301 = relay.var("var_5301", dtype = "int64", shape = (4, 16, 4))#candidate|5301|(4, 16, 4)|var|int64
output = func_5298(var_5299,var_5300,var_5301,)
func_5302 = relay.Function([var_5299,var_5300,var_5301,], output)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_5335 = relay.TupleGetItem(func_4250_call(), 0)
call_5336 = relay.TupleGetItem(func_4251_call(), 0)
output = call_5335
output2 = call_5336
func_5337 = relay.Function([], output)
mod['func_5337'] = func_5337
mod = relay.transform.InferType()(mod)
mutated_mod['func_5337'] = func_5337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mutated_mod.get_global_var('func_5337')
call_5338 = func_5337_call()
output = call_5338
func_5339 = relay.Function([], output)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_5376 = func_4168_call()
call_5377 = func_4168_call()
output = call_5376
output2 = call_5377
func_5382 = relay.Function([], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
output = func_5382()
func_5383 = relay.Function([], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_5427 = func_3976_call()
call_5428 = func_3976_call()
output = call_5427
output2 = call_5428
func_5434 = relay.Function([], output)
mod['func_5434'] = func_5434
mod = relay.transform.InferType()(mod)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5434_call = mutated_mod.get_global_var('func_5434')
call_5435 = func_5434_call()
output = call_5435
func_5436 = relay.Function([], output)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5440 = func_5243_call()
call_5441 = func_5243_call()
var_5450 = relay.var("var_5450", dtype = "float64", shape = (16, 3, 14))#candidate|5450|(16, 3, 14)|var|float64
bop_5451 = relay.logical_and(call_5440.astype('bool'), relay.reshape(var_5450.astype('bool'), relay.shape_of(call_5440))) # shape=(16, 3, 14)
bop_5454 = relay.logical_and(call_5441.astype('bool'), relay.reshape(var_5450.astype('bool'), relay.shape_of(call_5441))) # shape=(16, 3, 14)
output = bop_5451
output2 = bop_5454
func_5458 = relay.Function([var_5450,], output)
mod['func_5458'] = func_5458
mod = relay.transform.InferType()(mod)
mutated_mod['func_5458'] = func_5458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5459 = relay.var("var_5459", dtype = "float64", shape = (16, 3, 14))#candidate|5459|(16, 3, 14)|var|float64
func_5458_call = mutated_mod.get_global_var('func_5458')
call_5460 = func_5458_call(var_5459)
output = call_5460
func_5461 = relay.Function([var_5459], output)
mutated_mod['func_5461'] = func_5461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_5569 = func_5243_call()
call_5570 = func_5243_call()
output = relay.Tuple([call_5569,])
output2 = relay.Tuple([call_5570,])
func_5585 = relay.Function([], output)
mod['func_5585'] = func_5585
mod = relay.transform.InferType()(mod)
output = func_5585()
func_5586 = relay.Function([], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_5604 = func_3868_call()
call_5605 = func_3868_call()
func_3737_call = mod.get_global_var('func_3737')
func_3742_call = mutated_mod.get_global_var('func_3742')
var_5622 = relay.var("var_5622", dtype = "int32", shape = (495,))#candidate|5622|(495,)|var|int32
var_5623 = relay.var("var_5623", dtype = "uint32", shape = (154,))#candidate|5623|(154,)|var|uint32
const_5624 = relay.const([10,-2,-6,2,5,-3,-9,-9], dtype = "uint16")#candidate|5624|(8,)|const|uint16
call_5621 = relay.TupleGetItem(func_3737_call(relay.reshape(var_5622.astype('int32'), [5, 9, 11]), relay.reshape(var_5623.astype('uint32'), [22, 7]), relay.reshape(const_5624.astype('uint16'), [8,]), ), 2)
call_5625 = relay.TupleGetItem(func_3742_call(relay.reshape(var_5622.astype('int32'), [5, 9, 11]), relay.reshape(var_5623.astype('uint32'), [22, 7]), relay.reshape(const_5624.astype('uint16'), [8,]), ), 2)
output = relay.Tuple([call_5604,call_5621,var_5622,var_5623,const_5624,])
output2 = relay.Tuple([call_5605,call_5625,var_5622,var_5623,const_5624,])
func_5658 = relay.Function([var_5622,var_5623,], output)
mod['func_5658'] = func_5658
mod = relay.transform.InferType()(mod)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5658_call = mutated_mod.get_global_var('func_5658')
var_5660 = relay.var("var_5660", dtype = "int32", shape = (495,))#candidate|5660|(495,)|var|int32
var_5661 = relay.var("var_5661", dtype = "uint32", shape = (154,))#candidate|5661|(154,)|var|uint32
call_5659 = func_5658_call(var_5660,var_5661,)
output = call_5659
func_5662 = relay.Function([var_5660,var_5661,], output)
mutated_mod['func_5662'] = func_5662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_5667 = relay.TupleGetItem(func_3299_call(), 0)
call_5668 = relay.TupleGetItem(func_3301_call(), 0)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
const_5672 = relay.const(3, dtype = "uint16")#candidate|5672|()|const|uint16
const_5673 = relay.const([-4,6,1,-10,-1,-10,-4,5], dtype = "uint16")#candidate|5673|(8,)|const|uint16
call_5671 = func_211_call(relay.reshape(const_5672.astype('uint16'), []), relay.reshape(const_5673.astype('uint16'), [1, 2, 4]), )
call_5674 = func_211_call(relay.reshape(const_5672.astype('uint16'), []), relay.reshape(const_5673.astype('uint16'), [1, 2, 4]), )
func_5434_call = mod.get_global_var('func_5434')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5706 = func_5434_call()
call_5707 = func_5434_call()
output = relay.Tuple([call_5667,call_5671,const_5672,const_5673,call_5706,])
output2 = relay.Tuple([call_5668,call_5674,const_5672,const_5673,call_5707,])
func_5709 = relay.Function([], output)
mod['func_5709'] = func_5709
mod = relay.transform.InferType()(mod)
output = func_5709()
func_5710 = relay.Function([], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_5729 = relay.TupleGetItem(func_3299_call(), 0)
call_5730 = relay.TupleGetItem(func_3301_call(), 0)
func_5189_call = mod.get_global_var('func_5189')
func_5192_call = mutated_mod.get_global_var('func_5192')
const_5742 = relay.const([-2.799898,2.614452,-2.096186,6.324951,-3.964761,-3.055004,-8.039754,-0.837690,-2.777268,4.951790,2.504359,-4.453132,1.885687,2.530783,9.663095,-7.869379,-7.774267,-8.569866,-0.106332,-6.944065,6.395842,-8.462624,-3.101783,-3.266718,-4.453526,-5.329256,5.347489,-3.198214,-7.690523,8.355735,-1.737224,-5.087707,6.470763,8.693729,-1.726036,-9.058421,-5.865783,7.849278,5.634506,9.553531,5.813322,7.622347,8.006342,8.347685,1.722404,0.411561,-2.581472,-9.530366,2.193158,3.526618,4.968751,7.116412,6.093569,-1.794734,-3.790347,-3.424015,-3.174760,-2.197980,3.795330,2.159760,-2.538937,-4.118782,-0.221848,-2.654372,-8.270397,-8.725330,7.598227,1.701119,-9.509231,2.789218,-4.225531,7.286982,9.742575,-8.166153,3.212961,3.702260,-0.431783,9.173235,-5.854504,-8.717978,7.158177,0.956881,-8.223691,3.020303,-9.818198,3.132086,-0.151943,2.899703,-7.783909,-2.256370,-2.441338,6.176208,2.912056,9.186640,-9.338860,-3.459025,-7.240917,-8.388299,1.468920,-0.333850,-1.837719,-2.420608,-6.621661,-4.306964,1.363269,-6.850306,-8.409924,-6.037841,-7.614989,-2.240251,-0.927542,6.784429,-8.273983,8.784107,1.318164,3.087164,-9.594388,5.920714,-3.967992,1.125505,-1.757124,3.863433,-2.689309,5.309426,0.171943,0.222313,-5.838082,1.147319,8.451083,-4.956845,-8.267013,-6.319663,9.935248,7.503465,-8.207352,3.181743,-9.657114,7.420381,6.143250,-6.066735,-7.952914,-1.733117,-8.228354,1.859556,-7.036282,-1.379141,-5.766913,4.579061,-3.296574,6.092779,-8.521859,-1.660670,5.250015,4.235727,-1.900502,1.572097,4.659436,6.462390,5.194660,9.353207,2.420605,-0.348321,4.171239,5.779604,-4.930739,-3.243329,-5.588145,-4.764181,-2.156170,-3.029365,7.727560,-7.147388,1.768869,-1.121429,-1.182275,-8.028800,4.788744,8.324433,8.708370,4.805645,6.831276,-2.455645,-3.321819,5.391506,-4.859333,4.768055,-7.883648,-4.285633,2.082774,-8.303530,4.835738,1.479195,-3.203321,3.912801,-7.330223,6.216760,-9.186834,4.912701,-2.544975,9.875149,-6.200766,-2.311726,-1.168834,-4.408677,2.796284,-6.230753,0.383953,-0.912955,-6.440850,0.131280,-9.800245,8.158446,-0.935337,7.534880,5.603275,0.035221,9.233358,-1.754851,3.677364,5.915248,-9.631488,2.647203,-8.432721,2.595342,5.120576,5.746281,5.551855,-6.768507,2.491439,1.374701,-5.828650,-2.482852,-4.997683,-2.576263,8.179389,1.193832,8.296758,9.913936,-9.885841,-4.903927,-7.455868,7.562218,-1.075896,2.506918,4.492376,0.005265,-7.233876,5.116488,-7.216941,-9.573424,4.179692,5.651588,-1.101294,-5.176804,3.589432,-5.630591,-1.691592,-1.152083,9.265701,-6.310283,-9.006289,-8.072908,5.458102,0.664601,7.224961,5.252351,3.224011,2.351657,-7.966498,-7.095368,8.258865,3.265870,-4.487249,-4.862731,4.924132,-8.876833,-3.308625,-4.440889,-7.286574,-6.725970,7.483475,6.923899,-4.921624,-4.970808,-9.026110,9.966656,5.743110,-6.636265,-7.830908,1.557131,4.595131,8.007413,4.929611,-3.692479,0.568556,3.613862,-6.191779,-2.668487,-6.936885,6.879486,6.203266,-3.094500,1.898027,4.580125,1.782287,-6.674242,-9.242468,9.167105,0.242629,-3.769368,-1.044283,-7.512623,-5.840888,1.374547,7.524291,0.032317,3.732456,-6.052247,-8.183101,-0.738484,-6.519820,5.759980,-8.743726,-9.194440,-4.111539,4.094243,3.170864,4.112870,-4.659286,-4.872273,-0.590040,-8.940694,1.878194,-7.264037,-2.480501,4.824834,3.022298,-3.574241,8.211207,-0.035581,1.116742,-4.087762,2.217529,-5.109039,1.938789,7.061601,-5.550841,7.889382,-2.398985,-3.476706,0.674091,-3.104541,-5.449698,-7.276708,7.431901,0.597586,-0.170884,9.678019,3.966713,2.347906,-2.840179,-7.682973,5.346840,-0.465242,-5.752395,-0.541055,2.099610,-9.986182,6.187074,7.139081,2.927049,7.295042,2.071667,0.480881,-1.481532,7.788644,-2.021443,-8.633975,8.366145,6.058390,6.217957,9.686121,-2.953299,-6.563547,5.867719,4.205140,-1.435117,-7.878559,5.238656,-3.461364,1.111931,5.716576,-9.141858,8.856530,-1.628701,5.905811,-1.554441,-8.918931,-9.131915,2.445308,1.030544,6.846907,6.665420,7.439058,8.800761,0.331925,6.747032,-9.510875,-7.625314,8.278785,3.018509,-4.410863,-4.617656,-9.838611,1.946912,-0.657015,-7.849127,-4.438029,8.465819,7.294834,3.405600,1.414496,2.233670,-3.656695,8.938634,-5.937278,-1.843975,8.115487,-9.848516,-0.217726,6.109904,-3.766220,-4.138695,6.116825,-6.829416,-9.428787,2.437115,-3.401412,-6.675958,-1.266746,-5.230639,-4.361049,3.183714,8.731551,6.035358,6.244339,-2.597902,2.445603,-0.365784,9.550654,3.878023,3.528763,5.278346,6.931676,-7.652824,-2.869038,-3.672402,-8.947133,-4.908706,8.159540,0.885653,-2.164875,-8.227319,-9.831159,-2.750615,3.236707,5.332623,0.649553,-0.630125,-5.029672,-3.102384,-5.237644,1.152544,3.276668,-4.009491,-6.911920,3.807967,-5.822173,-8.945105,9.736600,-1.088417,-0.182010,9.004687,-8.721375,-4.557108,-1.633433,8.750174,5.687908,9.059817,-7.234978,-8.793538,9.182240,0.411736,5.553085,-0.631923,6.635233,-5.310172,2.473392,0.726146,6.377306,-5.479395,-4.174498,-5.409811,4.335525,-8.574301,-6.285718,-0.101695,4.474143,2.190668,5.175178,0.714646,-3.626435,-3.629731,7.687810,8.864718,5.622503,-5.010823,-7.263187,9.793807,0.419620,1.934947,-6.888526,8.366887,-7.244628,8.427555,5.688978,-4.937783,-5.195094,5.658691,-2.620469,-5.552895,-4.901940,1.229102,-7.962062,-6.179220,4.766431,2.725056,4.889374,0.373938,0.572080,0.175937,8.856938,-6.332887,-7.187688,3.033261,-3.709935,-3.956043,-7.456806,8.213154,5.662183,-4.190449,-5.671955,-8.000588,5.143313,8.310948,-1.416819,0.084958,-1.159584,0.011596,4.008316,1.418339,7.025859,-6.521750,6.661395,-9.756448,-8.393995,4.226034,-7.377467,-6.933631,6.794406,-3.310422,1.752215,9.867649,4.368631,-4.540777,8.939180,-0.572658,-5.359010,2.044305,8.466545,-0.187397,-6.113439,-3.665935,6.769563,-7.534795,-5.912477,0.646352,-6.812186,3.270055,6.775994,-1.489239,0.015332,4.751825,-3.307378,4.738025,-3.458881,0.692787,-1.683883,5.120882,-7.499329,-2.414641,-1.047648,-5.218257,5.285633,-2.313425,-6.219131,3.633885,-0.696372,5.420138,9.083841,-9.383708,-8.002518,2.443289,8.140040,-7.309977,-8.884958,-6.151891,-9.403027,-5.437574,-1.479315,7.822878,4.172878,-5.518708,8.629924,-8.289365,-6.380645,3.388021,-2.202506,2.088625,1.303712,-6.787504,5.807996,7.233748,7.592402,2.240317,-6.723672,-5.110017,6.303761,6.386992,-1.002440,-6.368850,-7.895005,1.283244,-4.324714,-3.087875,5.126338,3.405635,8.484710,-4.093581,-3.948354,-4.489961,-4.335194,0.889239,7.105912,6.295209,-4.802665,9.451855,5.651663,-4.154182,5.986188,8.204103,2.532388,4.159920,5.462437,3.130504,8.319841,3.439209,6.733076,-4.441333,5.702683,-6.962418,5.342296,1.524953,8.356756,-8.256792,-7.138265,3.796662,-5.089084,2.584975,-3.889208,-7.474136,-2.380457,-8.945948,-3.426333,0.676144,-5.179393,5.765649,3.146946,-5.013431,-4.381640,2.339729,-7.474413,-2.576916,-7.740807,0.518736,9.635252,-3.568487,9.662316,2.315606,6.761343,5.448402,-5.005186,7.367372,8.596584,-6.567673,-9.970048,8.576027,-1.441416,-9.812450,4.287359,-6.406945,5.005152,-5.580661,8.697761,-8.469906,-2.724082,-9.951570,-3.671379,-2.955623,2.962779,-4.818486,0.090090,-3.349879,4.426637,-1.012862,-4.227878,1.598719,8.228877,-8.853293,3.326740,-4.512690,8.775408,4.850903,-3.896124,7.927068,-6.435586,-4.404558,7.467661,-9.927546,1.904144,7.725227,5.772058,4.474522,9.072570,5.570830,-3.446117,-2.225887,-0.905844,6.114718,-1.958488,-6.354588,-6.834557,-7.777628,4.496619,7.488803,1.689438,7.937072,7.417953,4.501985,-7.527243,-1.346640,-4.748756,-7.922511,-5.823032,-4.296859,6.757264,6.952410,1.540513,1.180638,-6.648372,4.523010,-0.628134,-8.677247,8.617032,-7.528365,-1.778866,-3.288513,6.995837,5.381264,-0.679560,-1.425501,-7.243183,-2.027369,5.880543,3.873315,-1.364894,9.020095,0.797885,-9.275458,-2.599657,-7.793317,5.768146,9.439088,-2.899324,-7.620000,-7.414820,-5.873082,7.344526,-1.104516,-1.093376,-2.420490,-0.856735,8.735341,-4.006877,-2.168703,-1.997094,6.234087,4.137331,6.110188,-5.236154,0.892299,-7.600912,5.432183,-7.981626,7.231602,7.420956,3.960039,7.860780,3.023609,-6.525484,-2.292799,2.219786,1.458179,8.715935,-2.749012,-3.301568,-8.970987,5.169405,-1.569669,-6.322518,-6.851170,-3.476606,2.549805,1.636586,1.349924,0.498750,-4.741402,8.362619,2.571782,-2.620642,-7.169783,0.309958,-8.586148,8.249090,-3.886038,-9.726009,9.633597,-5.258302,-0.417242,-5.942192,-3.809825,-3.975511,-4.575013,-3.578134,-1.644125,5.910641,5.769496,7.446841,3.362169,3.489208,-4.967119,-9.731026,-0.119232,8.429439,-0.267743,-5.950715,3.709733,-2.193178,-1.771324,6.507112,9.368268,-7.803720,-6.967647,-3.622266,-1.297841,1.712965,8.467026,-5.520959,1.491262,6.607678,5.784174,-8.675968,-8.357469,-5.968246,4.161204,6.083527,-7.463785,2.240301,1.447681,-7.913762,8.077801,5.324565,-8.110568,-9.406434,6.429047,4.084062,4.037510,0.551208,-0.880693,6.439775,0.069268,6.202361,-5.532159,-0.009632,-4.576383,0.766508,7.083867,9.183337,-1.510778,5.596690,9.609153,1.647106,-0.267050,-7.881196,-0.730521,-7.182586,-1.841603,-9.236034,-5.413056,-8.213953,8.687389,8.504717,-3.627589,-4.572074,-9.564939,-1.842690,7.666470,5.564499,-4.852994,-2.968815,6.310911,2.649777,-9.124201,-4.552651,-6.696313,-1.216049,-5.347120,-8.128889,-8.669964,6.617365,-6.820312,-1.260565,6.947513,4.966790,3.501666,5.479112,-0.700859,-9.268468,-7.025933,-7.419692,6.351757,-5.859938,-9.626054,6.307055,-3.948473,1.656253,-1.952749,-8.503337,9.083470,-7.380494,9.327496,2.280668,-1.583868,3.317357,-7.519744,0.282681,-9.749339,7.199377,0.085364,5.151798,-4.650831,-3.446897,-1.287582,-0.345583,5.646033,-0.800049,-8.709128,-0.462925,5.564362,9.515754,1.893703,8.768358,4.447503,-3.219277,4.641675,-9.990837,1.049029,4.359562,4.456718,5.639467,-5.407273,0.414536,-3.413455,5.135920,4.548306,6.175562,7.897880,-8.866602,-5.367460,6.040301,-5.793288,8.342357,3.149313,8.231744,-9.320630,9.162857,-9.022255,-0.295148,-9.641769,-9.911415,-6.145693,5.659949,0.563020,-2.297499,-1.007946,1.442148,9.118177,-7.035167,3.107799,2.244543,3.321568,-3.750611,-1.974730,-0.235502,-9.732990,-0.102473,-6.758625,6.636949,-2.157439,5.750797,3.197710,7.637925,4.754936,4.065601,-7.456747,0.638928,6.877996,1.315356,-8.378180,0.180655,1.247009,7.914087,8.849745,3.149461,0.141420,-9.359040,6.143498,1.703921,-6.847202,-5.068573,-1.543576,-2.451578,6.255925,0.456289,2.050304,2.745786,-8.914983,-9.504687,6.074507,7.069849,8.615558,9.277970,-3.727732,4.452621,-9.362268,7.781765,2.694157,-2.900707,1.408667,-6.382937,-8.799297,2.322844,3.504026,-4.543324,7.171665,7.349428,-3.869467,-0.069436,2.499791,6.329042,0.108667,-9.691178,-5.819173,5.316386,-5.064729,-9.400323,1.323043,-6.246204,2.836612,8.025793,-4.409170,9.141012,-1.234768,5.190614,-2.197899,2.388073,7.324371,-8.653327,-1.639834,-9.982854,-7.098455,-7.397010,-8.418100,-3.242455,2.782346,1.011206,-8.426190,-4.044234,-2.323179,-9.523156,-0.801117,-8.861276,-3.810822,0.189937,-9.524025,4.650377,-6.927554,5.899953,-0.399091,8.177552,8.609935,-6.746492,9.490424,-7.052405,-3.528179,-5.207661,-5.935890,4.642741,-7.980774,-7.877641,-7.369792,1.787931,6.497022,4.157148,-8.637260,1.612654,3.004330,9.906117,6.344406,-0.825272,-2.577712,-5.451295,4.808357,7.462475,3.753071,3.064460,-1.559068,-9.493230,5.650082,2.994388,-6.903591,1.912811,-9.281017,1.204669,7.356565,-1.220480,-3.592905,-9.844588,-6.893835,0.744464,9.073876,0.892192,3.446464,4.944962,8.710023,-9.096079,-3.215137,-8.745286,-8.644990,-1.358491,1.320607,-5.430686,1.423020,-0.480730,-3.707863,9.889435,-6.036859,4.595400,9.528108,-2.828567,-2.942620,-1.356439,-7.342652,7.429518,-3.464740,-8.208630,-5.445109,-0.451509,-3.929993,8.507004,-3.938176,-1.374306,9.155912,3.706557,8.052683,-6.791395,-7.378525,-8.112811,2.562573,-1.906040,8.851698,7.347847,3.212310,0.110505,-7.410808,-0.058069,-2.614115,5.359807,2.220026,-1.492790,-7.115166,-2.676355,8.351754,-4.381058,-5.577524,4.262290,4.919977,-3.510734,-4.320498,-3.431424,-5.279969,0.506857,-0.377802,9.018667,3.656807,-8.029229,-9.810722,1.452420,6.867655,-3.657681,-1.353746,5.829764,-5.877822,-6.212152,8.325660,-5.487618,9.491874,-3.263927,-6.779590,3.726152,0.517019,-0.903846,-5.884399,-7.312661,5.399829,-7.035981,-3.090076,5.854720,7.859131,6.537297,4.804611,-9.228182,7.866923,-4.654775,-6.206172,-6.417805,2.825192,8.859217,-5.815129,2.080533,-8.336158,9.540324,6.202793,-6.377177,-9.312139,5.704579,7.620816,-9.030417,6.535219,-5.067591,2.696632,3.531116,4.577968,-1.155152,-5.298867,3.488704,9.864294,0.052773,-8.628393,9.582368,1.828403,-2.492007,8.738537,-0.799066,0.869864,-6.703162,7.747102,5.911805,7.483368,-8.486327,8.704318,-7.003839,-2.514872,9.887608,2.528363,0.838578,2.021410,1.460933,-2.204318,4.925542,5.148446,-2.575104,-5.297238,2.776461,-9.742313,0.314887,-1.265513,-7.855977,-2.655900,8.903518,1.794304,-1.515005,-3.804183,1.411734,4.501792,-6.859825,-6.446550,1.155585,-4.160751,-0.245323,-3.753476,-6.500805,-7.142530,5.622664,-1.537317,-6.005236,0.393599,-2.526943,8.097708,8.165055,5.453290,6.014900,-4.155603,-5.651668,0.584621,7.490846,-6.532522,-7.011627,5.372657,2.220990,-6.965953,8.977647,2.213584,5.864167,9.612297,5.310363,-7.916997,-9.963861,-2.549308,8.619682,-6.994828,9.806769,-9.286920,7.466404,-2.054023,8.713600,-5.298558,-0.496808,0.089603,-2.818411,-4.292458,5.892511,-6.224554,-3.553978,-6.776828,0.373977,-1.210269,2.127663,-1.467078,-3.067711,-5.826285,-2.425327,-1.563797,-1.694700,-1.099673,-1.350888,-8.889539,-9.596264,-0.318293,7.002745,-1.307683,7.865164,-5.374412,-5.665195,3.206621,1.470051,-3.744851,-2.116141,-5.774537,-7.890454,-6.858464,-1.396305,-6.506653,8.309449,5.108839,1.725023,8.446526,-0.252508,-7.960686,9.807803,-7.634166,3.656249,-9.060687,1.932372,-1.864597,0.155380,7.653771,2.441438,-2.749514,-8.167516,-3.437410,-7.990113,-9.234973,0.957729,0.751204,-0.057036,9.872471,-4.693435,5.993447,-4.983432,-4.652146,-1.633689,4.835937,7.723875,6.698268,3.371843,-4.957180,3.080387,8.392421,2.618736,6.980229,-5.501073,0.983956,-6.913224,-3.596031,-2.195113,4.094854,-1.229854,-2.092364,-4.986949,8.990240,7.362380,4.793867,-3.606754,0.908411,9.836697,0.685442,0.557491,2.364948,-6.432856,9.039847,-6.518203,0.137348,4.330203,-2.137833,0.634131,-8.848952,9.560502,-2.832668,-6.389310,4.572604,-2.363866,1.661074,4.472258,-6.537247,-4.061391,-5.520625,-6.419261,-5.453614,-4.745831,5.652892,-4.904261,-8.547274,-9.720934,-5.710374,8.415839,-0.746183,-4.661659,2.251011,-6.645680,1.726757,2.723900,7.950793,-3.270114,-2.044189,1.617975,-8.375013,1.143946,5.710789,6.403155,-8.232024,-5.519666,7.978873,-5.127501,-5.950872,-7.842743,5.982166,-5.395615,9.117381,-6.271542,6.074767,7.504481,-1.689861,-4.358254,-6.911928,5.307032,-4.385928,-1.799062,-6.591358,6.002796,6.299389,1.618053,9.885354,-5.960232,-4.876953,-8.667746,-5.691288,4.580614,-9.920354,-7.756214,-7.304417,0.061227,6.615854,-8.674016,-8.918800,6.412031,9.422350,1.044603,-5.118118,1.345533,-8.309938,-2.034836,6.750321,2.612371,2.668634,9.202639,1.013716,6.952432,-2.103408,5.256555,8.971115,-4.223276,5.687677,7.448272,8.514866,-1.001587,1.571906,-8.402185,-5.854660,-5.381030,-5.807088,1.475481,3.838127,-0.943376,-0.550530,-6.463179,-4.325776,-7.194503,-4.250617,3.147908,-7.653145,-7.285558,-8.731288,4.940302,-7.887460,5.464221,7.766427,1.872875,2.504961,-0.736116,4.504045,2.651629,2.416680,2.497319,7.105407,-6.048302,-9.228756,8.210269,3.532991,3.675791,5.416493,-6.781807,-9.864414,8.511379,-2.686845,2.963340,-0.847583,6.267408,4.600672,-2.571023,-4.661981,-7.239101,0.594099,2.368541,-0.594679,-1.329962,2.754282,-4.742426,-1.225322,6.310699,2.002649,-4.826328,9.207058,-2.222329,-5.559208,-9.038965,7.428242,7.505534,-3.883429,2.366257,-2.575384,-9.802460,9.923319,4.379734,-2.699411,-6.353396,0.919961,-5.258977,-4.374621,1.143972,2.508183,8.219094,3.622881,2.563024,-2.223172,-0.876158,-8.401392,-0.725578,-0.510825,-8.124297,1.599773,-5.187151,9.661994,8.308302,8.523047,0.877035,-4.442600,7.182583,9.859594,-7.598255,-7.047395,-6.697522,5.257751,-6.272873,-2.663135,0.178688,8.101486,9.044143,-6.132004,-5.454405,2.488141,-0.069109,9.588371,7.785073,-3.609406,-3.080101,3.740270,2.150652,1.444489,-7.234738,-3.393776,8.711137,3.821446,8.188884,-9.049356,-6.125463,4.494932,0.617885,-1.400697,4.138245,-4.798636,1.164780,6.085512,7.070879,-9.666412,-8.804404,7.770316,-6.407732,-5.128647,-7.611854,-8.410017,9.853293,6.116469,-8.124865,7.565650,-8.396004,0.504493,0.436222,-6.586277,7.176945,-1.391688,-1.409558,-6.100209,1.013564,-8.374434,7.729393,-0.742457,-4.476286,1.306583,7.026749,-9.327894,3.465616,-0.809137,-4.378550,6.155483,0.709706,-3.722017,3.839865,5.081085,0.689651,-7.471911,-7.483174,7.552479,-9.597903,8.553214,-0.010150,3.906934,7.815449,-0.911889,-9.240606,8.390028,-0.712898,4.531210,-4.447719,-0.478088,-0.398850,-5.401201,0.899329,7.636977,2.054423,1.817909,1.550253,6.059442,-4.681030,-3.365931,2.107438,6.912257,1.601292,7.316894,5.094183,-5.091155,-7.408113,-9.250499,-0.992633,5.058244,-6.332537,2.309922,1.165492,-6.894234,7.933676,-1.600926,-9.076817,-7.233671,1.799040,-1.647894,6.046929,-0.772915,3.551013,9.483350,7.728630,5.747259,2.169131,2.507563,1.832598,3.604616,-4.582937,8.529921,0.493358,6.582432,1.313262,2.608709,-3.323591,-2.323766,-5.147005,1.333465,-1.092578,1.424091,-7.062878,-7.808128,-6.198040,-2.183498,-5.190279,9.713252,0.270869,-9.804260,-3.860862,3.515344,3.341164,2.030778,7.242008,4.833883,7.907749,7.549129,9.638831,-1.171693,8.915855,5.256699,-9.588479,4.612593,6.804355,6.051085,9.744448,-8.559053,-6.719701,-3.968437,-6.651354,-7.976086,-2.580271,5.922028,4.580199,6.886502,-0.298383,-0.828134,-1.875795,-1.963098,8.291274,0.576777,-0.129076,-3.206306,7.130426,-9.104978,-6.288564,-3.015836,5.976978,0.186185,4.235415,8.982288,3.463962,-9.040188,-9.521497,4.781386,-7.533206,-3.557404,-6.526081,-7.517419,-8.000316,5.269184,9.111736,0.911622,-0.988168,2.315631,-5.612589,7.307918,5.057851,5.475226,7.487043,1.263216,5.964870,-8.045400,-3.253484,-2.133778,-9.301892,-5.356878,8.076616,-7.379106,-8.013000,8.623806,-9.468816,-4.727635,-4.057233,5.611645,-3.126750,-2.905443,9.248390,0.719407,7.855590,-0.969247,6.357890,7.714031,-9.460729,-5.387481,8.308057,7.855780,0.056801,6.846870,8.105702,1.357544,-1.601504,-1.457746,-5.314988,9.699775,9.656568,3.507948,-1.696570,8.292727,-5.404718,3.178732,6.042124,-2.412187,-6.243372,-2.804551,-3.237228,1.497097,4.987097,-6.048073,2.670984,7.623115,4.041038,-0.427516,9.457178,6.158099,5.171610,-3.371155,9.904101,1.822950,-9.367745,-3.456096,5.527711,4.341429,1.681575,1.361596,-8.486945,2.931288,0.615651,7.560927,6.563247,9.747990,-5.762427,6.060222,-8.342501,6.501467,-1.256997,9.972451,-7.770320,3.094659,9.047483,-6.054625,9.384098,2.396980,9.284934,-3.881162,1.613178,-6.668622,4.622497,-1.459976,-1.458986,-8.682232,5.013971,4.654935,4.273316,4.874652,1.021488,-4.676259,5.074674,3.109179,-7.232375,6.765719,2.503064,1.845381,9.626207,-4.781672,-5.546589,-6.281000,2.026829,8.836421,-3.564283,9.971354,-6.558627,2.694632,7.108585,2.403055,-4.907978,-7.982388,-5.808343,-7.460161,8.228422,3.776767,2.462429,5.531743,2.168522,8.458263,2.557111,7.707805,-3.790809,6.467302,-5.139245,-7.081260,6.005200,-9.060026,-5.118585,1.377566,-4.624183,7.001312,-5.316410,-2.508492,5.704020,-2.723729,-8.958600,2.889597,-4.093625,-2.333631,4.521319,2.502134,2.244004,-0.759054,-2.617788,2.323881,-3.749697,-2.618985,2.470087,4.844230,3.106549,2.231317,5.433081,-9.289276,9.403151,-1.185352,5.944686,2.545587,-6.325751,5.611591,4.989882,5.890142,1.117063,1.819539,-2.159026,-8.698076,-3.269889,8.603721,-7.307160,6.507837,-2.245316,-6.928738,0.894528,1.854617,6.525958,-6.940393,3.025200,-4.719454,8.267945,-5.071451,-8.038037,2.732011,-0.375499,5.920105,0.864841,9.578206,-3.703895,3.001037,2.339340,9.479587,3.176384,-9.168297,3.764818,-0.827926,-4.130308,-7.102247,8.451995,2.392845,-8.273173,-5.553210,3.416048,-4.698085,1.265273,2.879063,-3.756541,2.385224,-5.329929,-6.738052,-3.933462,-3.085493,5.036655,-0.262975,8.497873,9.463031,-5.961562,7.134767,2.702753,2.777701,1.138097,9.773962,-7.833042,-7.333001,-9.779666,-3.190512,8.323844,6.768347,-6.289461,3.860257,9.429676,3.454595,-8.687131,3.483601,-1.086074,-9.838912,7.393335,5.673096,-4.400634,-6.959358,1.580089,1.026560,-5.007483,0.559524,-5.154979,-2.264051,1.874003,3.731215,-8.154492,8.642429,-1.724102,-9.071637,-2.747654,3.039235,7.403804,5.895317,-7.813836,0.306132,-0.711724,9.009997,3.621013,-9.533917,-7.069419,-7.333390,0.168546,2.511879,3.557757,5.160185,-6.769613,-3.990459,8.947056,-8.100493,7.907451,-3.203202,-9.275368,-1.564547,3.751620,0.487978,9.739343,-3.947528,7.722751,-0.936113,2.908929,-1.606902,-5.714630,-9.208632,1.190185,9.239723,-5.874519,-3.292430,-3.455387,8.203058,4.358566,9.045691,-5.275685,6.524727,7.702555,3.340014,-0.787824,-3.209989,-0.233659,-3.594464,2.326006,-8.795576,8.474504,9.574764,-5.131797,6.366524,3.613691,-0.419681,-5.890164,3.560432,8.622190,-9.260604,3.657569,-2.066081,7.242186,6.705155,-0.981494,6.784076,-4.750190,7.279500,4.798913,-6.874057,4.047473,-4.229859,9.879853,-5.028076,-3.334262,-0.505630,6.444413,-4.562829,5.990645,-4.898633,6.219662,6.561681,-6.826820,-8.782651,2.606770,-8.139356,1.575452,-2.889657,-1.729491,3.029438,7.712558,-8.276271,-4.304757,-0.915133,-4.217087,-5.496818,-8.281192,6.933202,-8.047184,-2.881174,8.799078,3.095116,8.717420,7.519384,-8.099741,9.013806,-5.785540,-4.324684,-3.620244,-1.440490,4.430996,-5.603924,-8.296472,-3.786414,-2.282649,-3.935436,9.664092,-7.413551,1.585426,0.374207,9.633287,9.501470,-7.819347,-0.509318,-8.362140,-1.880537,9.608068,7.428759,-7.779430,4.352755,-4.642921,-1.715612,2.308920,2.474419,-2.837207,-1.596009,6.107757,7.150594,4.322489,-2.135831,-1.948064,-1.043701,6.100044,4.215629,7.272338,-5.079968,-3.477442,-1.664813,-4.010623,-8.653251,-4.393581,-6.904862,3.454450,9.413039,7.203845,-8.666019,-5.159320,-4.723224,2.749032,-5.706229,-2.160650,-6.971535,8.160996,-8.895974,-9.380538,6.623628,0.315319,-0.624830,7.141517,0.743871,7.448434,2.784425,-4.725770,-9.290811,9.508521,3.007703,1.979049,3.663440,-7.785761,-4.531059,-2.796710,9.601941,3.928662,-9.490433,7.870802,-8.356612,-2.930796,2.768149,7.757531,-2.667367,-3.564185,-2.909538,4.115638,-4.901343,5.741385,4.200623,-6.624501,7.686463,-9.209791,3.845788,9.405954,9.529494,7.803955,1.470214,-4.144934,2.006726,2.050572,-0.318882,8.994003,-0.543564,-7.034517,5.759766,-3.153140,-3.456486,-2.251290,-3.964000,8.496334,1.950720,-3.497734,2.978709,-9.343172,8.240551,-8.086990,2.949170,5.367538,-9.470686,6.894330,-9.451384,-8.407761,-2.549204,-1.623863,9.058569,-1.194007,-8.906566,5.486440,8.996043,9.618593,3.662010,9.878647,2.962191,-6.335028,-0.318076,1.600076,4.795369,8.392464,0.380731,-3.563491,-2.533404,8.038848,-4.795475,-0.860351,8.398009,-1.862212,-3.609080,5.553239,-7.415658,4.496064,5.098516,-8.258248,3.251252,-3.613444,0.011859,7.040940,-3.717796,1.159199,6.711479,-1.350284,7.799555,7.977499,-2.620841,1.398403,-0.851918,1.360122,-7.951049,-0.420531,-6.220691,-3.326374,2.730819,3.005413,-6.819751,-7.829991,-6.080867,-1.022209,-1.083670,5.996824,-3.642306,8.416332,-9.647105,-0.406431,-8.291766,-3.342643,-8.456877,3.244990,-9.575274,0.298685,4.026513,-0.822691], dtype = "float32")#candidate|5742|(2400,)|const|float32
call_5741 = relay.TupleGetItem(func_5189_call(relay.reshape(const_5742.astype('float32'), [2, 1200])), 2)
call_5743 = relay.TupleGetItem(func_5192_call(relay.reshape(const_5742.astype('float32'), [2, 1200])), 2)
bop_5758 = relay.less(call_5741.astype('bool'), relay.reshape(const_5742.astype('bool'), relay.shape_of(call_5741))) # shape=(2, 1200)
bop_5761 = relay.less(call_5743.astype('bool'), relay.reshape(const_5742.astype('bool'), relay.shape_of(call_5743))) # shape=(2, 1200)
output = relay.Tuple([call_5729,bop_5758,])
output2 = relay.Tuple([call_5730,bop_5761,])
func_5762 = relay.Function([], output)
mod['func_5762'] = func_5762
mod = relay.transform.InferType()(mod)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5763 = func_5762_call()
output = call_5763
func_5764 = relay.Function([], output)
mutated_mod['func_5764'] = func_5764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_5791 = relay.TupleGetItem(func_4250_call(), 0)
call_5792 = relay.TupleGetItem(func_4251_call(), 0)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_5829 = func_4086_call()
call_5830 = func_4086_call()
output = relay.Tuple([call_5791,call_5829,])
output2 = relay.Tuple([call_5792,call_5830,])
func_5858 = relay.Function([], output)
mod['func_5858'] = func_5858
mod = relay.transform.InferType()(mod)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5858_call = mutated_mod.get_global_var('func_5858')
call_5859 = func_5858_call()
output = call_5859
func_5860 = relay.Function([], output)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_5874 = relay.TupleGetItem(func_3244_call(), 0)
call_5875 = relay.TupleGetItem(func_3245_call(), 0)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_5876 = func_5382_call()
call_5877 = func_5382_call()
func_5087_call = mod.get_global_var('func_5087')
func_5090_call = mutated_mod.get_global_var('func_5090')
var_5881 = relay.var("var_5881", dtype = "uint8", shape = (560, 1))#candidate|5881|(560, 1)|var|uint8
call_5880 = func_5087_call(relay.reshape(var_5881.astype('uint8'), [14, 4, 10]), relay.reshape(var_5881.astype('uint8'), [14, 4, 10]), )
call_5882 = func_5087_call(relay.reshape(var_5881.astype('uint8'), [14, 4, 10]), relay.reshape(var_5881.astype('uint8'), [14, 4, 10]), )
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
const_5891 = relay.const([10,10,2,-8,8,-5,5,10,5,-2,-8,9,-2,5,5,5,-1,9,-10,-2,-1,5,6,-4,1,-6,-10,9,1,7,9,-3,7,-4,9,7,-4,7,-10,-1,-8,-4,-1,2,6,-9,-1,5,-4,-5,6,6,4,10,-4,-7,-9,1,-3,-3,2,3,-6,-1,9,7,8,5,-7,-8,-9,5,5,9,9,-6,-8,6,7,-4,3,-2,-5,3,-6,-4,7,5,3,9,-10,5,-1,-9,8,7,-7,2,-7,-5,-7,10,-6,5,10,5,6,5,-1,-8,-2,-10,-3,2,-7,-5,-5,8,9,-3,7,9,8,-3,-2,9,5,2,4,-7,2,7,6,-9,9,6,-9,-1,10,-7,-2,-8,-6,4,6,-10,5,6,-5,6,6,-1,-8,-2], dtype = "uint32")#candidate|5891|(154,)|const|uint32
call_5890 = relay.TupleGetItem(func_5236_call(relay.reshape(const_5891.astype('uint32'), [154,])), 5)
call_5892 = relay.TupleGetItem(func_5238_call(relay.reshape(const_5891.astype('uint32'), [154,])), 5)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
call_5894 = relay.TupleGetItem(func_5236_call(relay.reshape(const_5891.astype('uint32'), [154,])), 4)
call_5895 = relay.TupleGetItem(func_5238_call(relay.reshape(const_5891.astype('uint32'), [154,])), 4)
output = relay.Tuple([call_5874,call_5876,call_5880,var_5881,call_5890,const_5891,call_5894,])
output2 = relay.Tuple([call_5875,call_5877,call_5882,var_5881,call_5892,const_5891,call_5895,])
func_5907 = relay.Function([var_5881,], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
var_5908 = relay.var("var_5908", dtype = "uint8", shape = (560, 1))#candidate|5908|(560, 1)|var|uint8
output = func_5907(var_5908)
func_5909 = relay.Function([var_5908], output)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_5993 = func_4313_call()
call_5994 = func_4313_call()
output = relay.Tuple([call_5993,])
output2 = relay.Tuple([call_5994,])
func_6023 = relay.Function([], output)
mod['func_6023'] = func_6023
mod = relay.transform.InferType()(mod)
output = func_6023()
func_6024 = relay.Function([], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_6039 = relay.TupleGetItem(func_5709_call(), 3)
call_6040 = relay.TupleGetItem(func_5710_call(), 3)
output = relay.Tuple([call_6039,])
output2 = relay.Tuple([call_6040,])
func_6044 = relay.Function([], output)
mod['func_6044'] = func_6044
mod = relay.transform.InferType()(mod)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6044_call = mutated_mod.get_global_var('func_6044')
call_6045 = func_6044_call()
output = call_6045
func_6046 = relay.Function([], output)
mutated_mod['func_6046'] = func_6046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_6070 = relay.TupleGetItem(func_4250_call(), 0)
call_6071 = relay.TupleGetItem(func_4251_call(), 0)
func_3821_call = mod.get_global_var('func_3821')
func_3822_call = mutated_mod.get_global_var('func_3822')
call_6074 = relay.TupleGetItem(func_3821_call(), 0)
call_6075 = relay.TupleGetItem(func_3822_call(), 0)
func_4914_call = mod.get_global_var('func_4914')
func_4916_call = mutated_mod.get_global_var('func_4916')
var_6086 = relay.var("var_6086", dtype = "uint16", shape = ())#candidate|6086|()|var|uint16
call_6085 = relay.TupleGetItem(func_4914_call(relay.reshape(var_6086.astype('uint16'), [])), 0)
call_6087 = relay.TupleGetItem(func_4916_call(relay.reshape(var_6086.astype('uint16'), [])), 0)
func_5762_call = mod.get_global_var('func_5762')
func_5764_call = mutated_mod.get_global_var('func_5764')
call_6094 = relay.TupleGetItem(func_5762_call(), 1)
call_6095 = relay.TupleGetItem(func_5764_call(), 1)
func_3681_call = mod.get_global_var('func_3681')
func_3685_call = mutated_mod.get_global_var('func_3685')
const_6097 = relay.const([[-4.217806,-7.168134,3.738778,-1.364243,4.190696,-7.677276,-5.714076,7.798366,-3.033649,3.770095,9.265561,-4.676789,3.125666,2.657576,-3.156664,9.361571,3.082930,7.457175,-8.414874,-6.033315,-2.959637,7.906656,-9.406487,6.090675,-5.801138,8.564687,-3.706331,1.965320,9.797286,8.678439,-8.273965,-7.002476,-8.653149,-8.025184,0.931969,-2.483794,1.094498,-5.418777,0.379742,-7.195893,-0.510317,1.287281,1.862333,4.520206,5.827226,8.853287,6.687337,-7.682705,5.723141,-8.673005,4.463435,-0.115911,4.851741,-3.441110,-2.721374,-8.118005,-6.287154,6.644663,9.431022,-3.210091,-9.898858,-6.343643,9.136165,7.672849,6.966128,7.735435,2.377739,-8.460378,-1.402868,8.795618,4.704899,-4.605065,3.466405,-2.245834,-4.885300,-8.989276,-9.539397,-0.047763,0.658983,-6.316272,7.223866,9.420211,5.292434,8.873357,0.360291,-1.749138,7.139473,-0.359707,-2.979735,3.838554,-3.755371,1.650525,-2.207675,-1.600182,-1.886719,-3.604611,4.199425,-5.592455,7.126638]], dtype = "float64")#candidate|6097|(1, 99)|const|float64
call_6096 = relay.TupleGetItem(func_3681_call(relay.reshape(const_6097.astype('float64'), [11, 1, 9]), relay.reshape(call_6094.astype('float32'), [2400,]), relay.reshape(var_6086.astype('uint16'), []), ), 3)
call_6098 = relay.TupleGetItem(func_3685_call(relay.reshape(const_6097.astype('float64'), [11, 1, 9]), relay.reshape(call_6094.astype('float32'), [2400,]), relay.reshape(var_6086.astype('uint16'), []), ), 3)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
call_6110 = func_211_call(relay.reshape(var_6086.astype('uint16'), []), relay.reshape(call_6096.astype('uint16'), [1, 2, 4]), )
call_6111 = func_211_call(relay.reshape(var_6086.astype('uint16'), []), relay.reshape(call_6096.astype('uint16'), [1, 2, 4]), )
func_3681_call = mod.get_global_var('func_3681')
func_3685_call = mutated_mod.get_global_var('func_3685')
call_6115 = relay.TupleGetItem(func_3681_call(relay.reshape(const_6097.astype('float64'), [11, 1, 9]), relay.reshape(call_6094.astype('float32'), [2400,]), relay.reshape(var_6086.astype('uint16'), []), ), 5)
call_6116 = relay.TupleGetItem(func_3685_call(relay.reshape(const_6097.astype('float64'), [11, 1, 9]), relay.reshape(call_6094.astype('float32'), [2400,]), relay.reshape(var_6086.astype('uint16'), []), ), 5)
func_5087_call = mod.get_global_var('func_5087')
func_5090_call = mutated_mod.get_global_var('func_5090')
var_6121 = relay.var("var_6121", dtype = "uint8", shape = (560,))#candidate|6121|(560,)|var|uint8
call_6120 = func_5087_call(relay.reshape(var_6121.astype('uint8'), [14, 4, 10]), relay.reshape(var_6121.astype('uint8'), [14, 4, 10]), )
call_6122 = func_5087_call(relay.reshape(var_6121.astype('uint8'), [14, 4, 10]), relay.reshape(var_6121.astype('uint8'), [14, 4, 10]), )
output = relay.Tuple([call_6070,call_6074,call_6085,var_6086,call_6094,call_6096,const_6097,call_6110,call_6115,call_6120,var_6121,])
output2 = relay.Tuple([call_6071,call_6075,call_6087,var_6086,call_6095,call_6098,const_6097,call_6111,call_6116,call_6122,var_6121,])
func_6124 = relay.Function([var_6086,var_6121,], output)
mod['func_6124'] = func_6124
mod = relay.transform.InferType()(mod)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6124_call = mutated_mod.get_global_var('func_6124')
var_6126 = relay.var("var_6126", dtype = "uint16", shape = ())#candidate|6126|()|var|uint16
var_6127 = relay.var("var_6127", dtype = "uint8", shape = (560,))#candidate|6127|(560,)|var|uint8
call_6125 = func_6124_call(var_6126,var_6127,)
output = call_6125
func_6128 = relay.Function([var_6126,var_6127,], output)
mutated_mod['func_6128'] = func_6128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_6130 = relay.TupleGetItem(func_5585_call(), 0)
call_6131 = relay.TupleGetItem(func_5586_call(), 0)
uop_6133 = relay.sqrt(call_6130.astype('float64')) # shape=(16, 3, 14)
uop_6135 = relay.sqrt(call_6131.astype('float64')) # shape=(16, 3, 14)
output = uop_6133
output2 = uop_6135
func_6146 = relay.Function([], output)
mod['func_6146'] = func_6146
mod = relay.transform.InferType()(mod)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6146_call = mutated_mod.get_global_var('func_6146')
call_6147 = func_6146_call()
output = call_6147
func_6148 = relay.Function([], output)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6195 = relay.const([[[-4],[4],[1]],[[7],[9],[-6]],[[-7],[4],[-8]],[[-6],[-8],[-1]],[[3],[2],[-6]],[[6],[10],[-6]],[[-7],[10],[9]],[[8],[-5],[-9]],[[-9],[-7],[9]],[[4],[4],[2]],[[10],[1],[-9]]], dtype = "int32")#candidate|6195|(11, 3, 1)|const|int32
const_6196 = relay.const([[[-2,-1,-10,-8,-5,5],[3,1,-10,4,10,5],[5,2,3,-9,8,-5]],[[-10,1,-9,9,10,3],[-4,3,4,-6,4,-2],[-3,3,10,-10,-10,-6]],[[-9,2,-5,-9,-6,3],[-2,1,-10,-4,-2,6],[6,2,9,6,3,9]],[[-7,-8,-3,-4,-1,-3],[-6,6,6,1,6,-10],[3,4,6,-7,2,-5]],[[-6,1,2,10,5,-9],[8,4,5,-10,10,8],[7,-8,-9,-7,-1,-4]],[[-4,-4,-2,3,5,3],[-1,-10,-7,6,2,-7],[8,7,2,-6,-10,9]],[[-3,2,-8,-10,8,-2],[8,2,-4,2,3,-3],[5,-3,-10,-6,3,-1]],[[-3,-1,-10,-7,-1,-8],[-8,-6,2,-5,-9,-1],[-1,1,3,4,-4,-6]],[[-8,-3,-1,-3,-1,-7],[-10,-1,1,7,-7,3],[-2,-5,-5,-1,5,1]],[[4,3,5,-10,2,-6],[-3,4,-3,9,5,-4],[-6,-3,-8,7,2,-9]],[[1,4,1,8,-4,6],[-9,-7,-1,-5,7,-10],[-6,-6,8,-5,-7,2]]], dtype = "int32")#candidate|6196|(11, 3, 6)|const|int32
bop_6197 = relay.left_shift(const_6195.astype('int32'), const_6196.astype('int32')) # shape=(11, 3, 6)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_6206 = relay.TupleGetItem(func_3244_call(), 0)
call_6207 = relay.TupleGetItem(func_3245_call(), 0)
func_3101_call = mod.get_global_var('func_3101')
func_3103_call = mutated_mod.get_global_var('func_3103')
const_6212 = relay.const([-9.664019,0.656687,-7.813899,5.395912,-4.356209,8.745595,-8.961469,-1.608107,3.583013,0.822709,1.089788,8.788354,-1.735133,-8.929550,-0.122433,-2.484789,-9.109049,-2.241032,-4.719206,-2.302736,4.122628,7.901217,-2.700946,-7.723896,-9.063890,9.696305,4.288695,8.720007,-5.063813,9.935994,-2.577532,5.762866,-6.196530,0.879580,6.423102,6.481432,0.234625,0.661543,-9.781958,3.837151,6.814866,-8.647476,-4.186643,-7.143776,3.185003,7.659476,7.394504,2.675172,7.543153,-3.831885,-6.777056,4.882675,9.942993,6.266612,3.090078,-7.702035,-4.653161,2.980208,0.881618,6.323125,-6.402557,-6.376061,1.645598,2.938701,-0.765258,5.871399,3.583560,-2.428574,2.917704,-0.558661,-4.263557,0.501255,-7.055819,7.996848,9.169117,-1.513088,-0.206832,5.792770,-0.880740,-0.458886,0.542852,0.020729,-1.191742,3.942324,-9.128190,-7.619337,-8.279840,1.653053,6.627050,-2.782237,5.653077,-7.171477,9.992468,8.256380,-2.426521,-6.791548,5.952831,-8.592397,3.132743,-7.780663,3.053260,3.088343,-5.480963,-0.305307,6.261964,-6.667656,-1.737190,-6.047780,2.871709,4.380905,3.657227,6.102136,-0.968215,4.231873,0.323564,2.747489,-7.646674,-7.935370,8.047737,-4.284397,-1.392236,9.138460,6.244582,-7.989696,6.549503,-2.845003,-8.857447,0.835014,7.107755,-5.897172,-0.124353,-0.598442,-0.916990,-1.486433,5.470101,1.494318,4.308022,-4.108113,-5.390314,5.659868,4.867976,6.753118,2.270818,-3.403309,3.538638,8.800429,-4.501322,-9.488980,0.640582,-1.949584,-6.271347,-1.897898,-7.193035,-8.767387,9.681627,-0.464021,-4.555269,-6.194856,-3.255826,-2.197288,-6.337438,-9.116100,2.806410,2.567365,6.417872,-5.941796,5.510890,8.455925,0.327965,9.381655,-1.811665,1.160996,9.985701,-0.222811,-2.156778,1.626273,0.565620,9.012037,-9.609697,3.400346,-4.434856,0.629517,-3.518761,2.347376,7.929476,-8.125387,-6.286469,-4.897759,-9.034838,-1.847522,3.961811,0.787630,0.883270,-8.055102,0.845673,2.985165,6.071243,-4.571871,7.341252,4.383332,-9.306106,-3.681160,-6.422048,-0.904315,-2.061693,3.853660,-4.284818,-0.866691,-3.688431,2.936165,-2.741390,0.711638,-4.766048,3.082445,-2.934938,-2.383628,-5.890186,5.602036,3.915640,9.626093,-8.293442,0.052861,6.534850,-0.898159,-0.290717,-9.847743,-7.960808,-7.785373,2.124442,0.682225,2.818526,-2.939740,-5.738748,-6.890158,7.459283,9.778575,-9.696451,-1.185690,-0.886376,6.028671,-1.127415,1.489017,-1.854593,5.032505,7.925562,0.728988,-7.716752,0.958727,9.055773,-7.372190,4.904875,0.899760,8.173497,-1.659431,-2.216024,-5.843351,2.728543,-3.923129,-2.753865,8.271017,-0.838048,-2.843868,-9.452162,9.345625,1.769132,-7.205282,-5.768339,-7.205870,8.529851,2.712222,0.841832,-9.857376,-1.185843,-4.141863,2.528214,-0.976668,-7.008925,-3.013343,-3.508929,-1.806978,-1.768139,1.214365,-4.655167,-9.316676,-0.367153,-9.290380,9.952691,-6.948392,9.953440,-5.205711,-4.078129,-1.128856,9.681556,3.318529,-8.462823,5.112574,-8.895035,5.475356,9.204282,-8.822807,-0.035270,1.976495,9.042293,1.372228,-1.421975,7.999691,-9.104110,6.333699,2.929954,-3.851442,-5.374382,-0.101896,-0.181848,-4.477878,3.116094,9.342419,8.062686,9.251911,-2.660854,6.698748,1.032142,1.807299,-9.827219,9.004701,7.382355,2.801360,-3.714367,-4.394156,-2.006887,-1.127533,6.738011,4.846698,-4.544475,9.280904,4.447254,9.937247,-5.436868,-4.969043,5.085090,-4.460994,9.859620,-4.256245,4.867561,-4.469265,8.851924,1.342869,-4.680959,9.859591,3.310081,7.688376,0.833490,0.198762,2.869615,-1.078038,-2.909827,1.906330,7.277112,5.423687,-6.197406,-8.796470,-1.442573,-3.848215,-8.135773,6.701807,8.064844,-2.107311,4.993471,-3.662945,9.522903,1.548389,2.093681,-6.096130,-3.608610,1.735901,5.398701,2.924268,3.034241,9.601180,5.002182,3.963397,2.786909,-8.118834,-1.171485,-3.607995,5.379413,4.586450,-4.239435,7.655747,8.952293,-7.630924,-2.512811,-2.274413,4.142492,1.791726,-3.331201,2.102863,-4.212423,-6.228825,-3.580521,8.220659,-9.122172,-8.666257,-8.168051,8.182176,-7.286147,-7.340914,6.716778,-6.458642,-5.630574,-8.084018,8.239999,8.041271,7.504852,-3.614924,-2.737599,2.267826,-6.616899,0.839943,-7.683503,-8.164931,-3.027820,5.298196,2.906635,3.193082,-1.560845,-6.664993,0.952928,1.430853,8.707069,9.840255,9.942066,-1.426444,-5.242145,-6.150900,-3.637920,-5.420027,-5.859193,0.022767,4.240653,7.520545,-7.077374,8.980162,5.348523,-5.727899,-9.229756,-9.074228,-8.600812,6.107731,4.572280,5.641676,-0.534466,-4.863032,-2.942355,-2.388041,-4.719505,8.312822,3.546975,9.589068,5.125251,6.605501,4.082321,-0.902806,-5.381938,-1.637582,9.331683,-5.385385,6.644092,-1.699655,-3.813079,-0.109286,8.566052,2.168230,-1.745265,4.141096,-9.144277,-1.203821,0.241085,1.981043,-2.121543,8.625434,-9.705264,-5.086589,-9.889065,9.404883,9.315957,-4.307855,2.273843,-7.442248,-1.666665,1.433442,-4.936358,-4.943506,-8.895237,-0.278102,6.080860,8.255114,2.212310,-2.962947,-5.870424,-5.904075,2.708168,-4.379775,-5.335625,-3.576719,6.834923,6.550903,9.348527,7.931537,3.037965,6.150709,1.053717,-4.902120,-3.125823,-8.031073,-7.095774,-8.553407,5.474654,-0.245235,9.542578,-8.682217,2.766124,5.953891,3.661303,-4.898643,-0.256772,-3.763557,-2.704686,-5.247845,9.503595,-5.843830,8.562506,8.039330,0.756276,-2.064024,-0.857886,4.652036,-2.825854,7.274493,8.823125,-8.364368,4.752791,9.146886,-6.731957,-0.076925,3.208393,8.495847,0.753453,7.950636,3.960679,-0.633201,6.210956,8.921954,-2.495222,6.895902,-1.607040,2.452708,-1.331893,-0.546283,-7.986537,-1.483829,4.603963,-8.194447,-2.400602,4.398288,7.968247,-5.718558,-5.655461,-7.142050,-6.762768,-0.272285,0.887606,-0.932972,4.443451,-1.981842,0.950457,7.631935,1.324190,7.809734,0.278119,6.471982,-8.969052,9.061580,4.473796,6.733273,-7.221155,-4.877540,4.866888,2.544757,4.934082,-5.136976,1.756492,7.228268,0.542962,-7.371947,-8.153551,4.168716,3.326345,7.745774,-3.944749,-4.652096,-3.818097,0.070646,4.106981,-9.912357,-5.321126,3.672773,-9.993536,-5.810236,-9.205603,2.785306,-0.819905,8.474140,7.441038,-7.599783,-7.636402,-4.799539,-6.547411,-1.036591,0.767610,-2.835428,-4.189437,6.355462,2.671247,-0.911627,-6.492155,-4.547817,9.863802,8.798926,-1.900309,-5.615026,-1.976619,3.237591,-8.391456,0.162561,0.858343,-6.999193,6.676741,-3.634731,6.844936,-9.403732,-3.166535,3.464133,1.230351,6.284161,-0.357006,-1.378641,-9.083939,2.179060,6.395082,-6.586764,3.787579,-6.108098,-4.939108,7.703134,-0.039139,-4.986268,-1.044224,-5.160046,-9.810844,7.494078,4.240152,0.567282,3.979464,7.401360,8.564495,8.039389,-5.655978,-8.818974,6.334517,-1.479971,0.865337,-1.848529,-5.868387,9.970722,-4.792316,-5.080580,-3.525204,-1.193707,-8.865645,9.945828,4.530242,-7.301092,-2.800285,8.426080,-3.010236,3.741839,-2.056847,5.531764,-1.880231,0.101999,6.501065,5.520529,4.716374,-0.969457,3.680621,-0.434445,-5.674680,-8.951657,2.339147,-3.753484,9.983245,2.615963,-1.162121,5.287711,-6.973044,0.797349,-9.710582,5.892937,-0.975188,7.992372,5.775588,9.426684,4.441080,9.389621,1.433381,-4.950169,6.177036,-9.735854,2.953138,3.636413,-4.065817,6.241426,1.596695,-4.451340,-7.765295,3.759730,6.571755,-7.090195,-6.271206,3.356438,8.672445,-3.250236,-4.662396,-4.279051,-2.391339,1.367747,3.283538,3.584984,8.266154,-4.742616,-0.201920,-0.918053,-4.335388,-3.704302,-4.688027,-5.582262,7.107653,-5.356165,3.281438,1.742186,-4.466250,-6.650099,-4.147641,-0.128300,-8.857428,3.423719,-0.099380,-6.817684,-6.773075,3.965742,5.441260,5.470176,4.945270,-1.829979,-8.916922,-3.100912,-8.121903,-0.288594,2.215322,-0.045311,-8.018572,-3.704420,5.326000,9.389821,1.640443,-4.041442,6.936582,8.546295,-3.207541,7.130187,-3.658149,6.492113,4.930808,2.401024,0.558379,-4.690328,7.473033,-6.674636,5.820875,7.819670,0.545130,3.581136,2.267896,6.222690,-3.663664,-4.456333,-6.628374,8.281701,-0.386847,-7.583691,8.625530,7.457508,8.789196,9.981153,6.535501,0.693524,0.013261,7.256650,-7.774915,-2.459620,-5.065683,4.411424,-0.566860,-2.151446,5.503991,-8.834571,7.257070,5.031864,-8.426797,8.652052,4.600660,-2.351139,-6.901511,0.224546,-2.968403,2.902084,9.552238,4.395200,-0.868555,-8.247469,0.203923,-3.842503,-3.735398,8.939105,-1.898233,-9.170814,-4.541682,-3.498727,9.090502,3.066930,6.010116,-4.418469,7.542258,4.823902,9.306394,4.991394,-0.411047,1.276645,4.449200,2.342692,1.177613,-9.560090,-6.606850,-1.191835,-6.605228,9.361219,1.239682,-5.065915,-4.209556,-3.404854,2.469325,-2.614981,2.264178,-5.268423,-3.806646,-7.419257,-0.480224,3.589087,-3.726811,-5.678130,7.494490,-6.369575,7.380598,3.911280,-1.107484,1.655747,5.785494,-4.174373,4.924328,-1.733182,-5.808170,9.615365,2.650735,-0.391112,6.927630,-7.266242,-4.664258,1.072766,-2.532536,5.753651,-6.465378,-5.952988,-3.765570,-2.321607,-0.739110,-5.223409,2.083601,8.031016,-0.269548,-5.306556,-6.347107,8.582609,-1.926111,-2.908399,6.165120,1.071447,-0.733471,-7.552837,-9.353999,-7.927222,9.163424,-8.319097,-6.915171,3.047930,8.014349,-7.387415,-5.618033,-2.137227,-5.076041,4.228245,6.986481,1.771289,7.666639,-4.327850,-2.172717,-5.354289,1.530297,8.892877,-8.110673,9.891459,-4.394703,4.747855,4.956528,2.059798,-7.079208,8.879682,-7.488162,1.359881,-0.571556,1.484408,-1.372936,-6.661548,-0.907826,1.934572,-2.670254,-5.800270,9.375088,-2.219839,-2.333300,-4.707165,-2.678666,-7.218626,7.560070,-1.121740,9.285633,-2.820125,8.260384,-8.944474,-3.362861,-8.096547,-9.695751,-7.295838,-1.865508,-1.260666,-6.961190,8.307341,-7.497438,2.851306,6.039601,-8.164320,-1.344471,-5.391669,9.532052,9.376576,4.200377,2.676400,3.947164,0.269295,-0.551390,-1.493306,-7.157732,0.274029,9.348020,-7.204426,2.335376,5.554341,-4.614128,6.687191,-7.998042,5.920967,6.390803,2.430077,-2.531037,-2.092118,-8.254498,-7.596923,2.039409,-1.515136,-5.440794,2.403136,0.791669,9.149086,3.022434,0.811687,-3.763867,5.939578,7.820582,-9.432105,3.285109,-4.009947,0.295043,-0.262902,1.782884,3.780741,-6.255355,5.339772,3.619375,0.458388,3.901124,7.175956,3.495368,0.078777,9.889054,1.632165,9.440149,2.195411,-7.577355,3.104824,-5.735507,7.705541,2.382661,-5.950436,-2.016515,0.598859,-8.249403,5.183503,2.940444,6.810479,-0.822065,4.398612,-9.573142,-6.601825,4.170328,-3.408277,-3.342784,-4.728727,-0.158609,-9.557311,-3.345719,5.264179,-3.788518,-1.938355,2.851215,1.508370,-0.674101,6.545328,3.152209,7.333920,4.754506,-7.103967,-7.192279,-4.840242,4.366452,1.736863,-3.710934,-5.305550,5.756131,2.377898,-2.930717,-8.142830,7.982237,-9.802916,3.668309,7.376037,0.278035,-8.865792,-4.780317,8.733791,5.228668,8.049954,6.878210,6.066179,4.126742,2.142572,7.465000,-1.880591,-1.528324,6.289749,8.531700,-3.167726,-6.487398,-1.727173,1.729560,-7.802216,-7.821124,4.389586,4.212288,-3.336872,1.140494,6.145501,4.991725,8.663962,-5.220801,7.832378,-2.059499,-4.806239,-0.201230,6.399396,-3.989305,-1.223191,-2.301613,-6.879671,-3.859189,-4.667376,9.607870,-2.918390,8.635792,-9.801557,-1.474796,1.029939,6.825318,1.539321,-1.907645,-2.506077,-8.184884,4.950949,-2.226027,3.906204,-8.652815,-8.269046,8.046770,-4.906648,-7.814149,-1.181468,-4.656992,1.991076,5.325313,0.184498,-9.130431,8.825267,9.073270,9.881762,-4.635793,-9.566242,-7.430982,-0.565543,-7.617321,-2.510390,4.693984,0.639229,0.511832,-6.206201,-8.336876,-8.240103,4.856628,0.639167,9.790083,-2.438590,3.271763,-5.463106,9.272755,4.909383,-7.374136,-3.494582,-6.503634,8.309309,3.938112,7.990943,-0.915040,-6.919722,6.239131,-5.819052,-6.607928,-5.200411,9.491270,4.783326,-2.413867,-5.799670,-5.828145,-8.695177,6.211713,-6.847470,4.399034,-5.693714,-5.613917,5.580713,-6.683410,-8.207617,-7.461294,1.455020,4.328614,-1.434007,6.725793,-4.290607,-1.796041,6.590948,3.384552,-5.257216,3.946598,-0.182394,8.344573,5.211580,6.677933,-5.870975,-6.359199,0.269889,-3.300132,0.484230,0.608095,2.987185,3.759229,3.260841,2.472444,6.651254,-1.586232,-5.473952,-5.346441,2.035034,5.348681,6.244445,7.137599,4.551955,4.267313,-1.362676,7.020396,-6.614768,-1.991934,3.367976,4.232304,-2.248898,-9.658581,4.303744,-5.295934,-0.300737,-5.476326,6.632743,-6.898196,7.018682,-2.068015,-3.527888,7.619702,-6.021418,-6.729813,4.941255,-5.477675,1.503361,-9.644210,8.022323,-0.456452,-1.051824,-0.162529,-5.727863,2.098721,-9.248092,5.966991,6.153877,4.920138,-8.043025,5.286464,9.491714,8.042003,-6.275001,0.205198,-5.493003,1.940444,-6.815757,7.695482,-1.063797,-5.189862,-7.581261,-2.214543,-7.488458,4.079836,2.304854,5.786284,-9.213361,-2.271462,-8.599781,2.788524,9.536200,-4.906163,-4.668358,-8.958963,-6.972275,4.156210,6.229812,-2.046950,7.716153,-7.194940,-9.556016,5.902271,1.254072,2.514586,8.682116,-6.437625,1.447452,-5.435051,-2.543308,-8.306133,1.037753,6.524367,2.784460,-6.742353,7.151649,-6.281966,-8.085581,3.847574,6.546040,-2.820113,8.251073,4.683515,6.880632,-4.283964,-2.190143,-7.199766,-0.893102,-0.348350,6.091234,-6.588629,-9.739361,-7.984666,-7.493318,-9.924136,-2.650324,-9.761334,8.014168,-6.799635,3.027530,0.072981,1.396598,9.168513,9.745274,-6.075623,-6.793117,-4.115862,5.053048,-0.230770,-8.433720,5.325811,7.366327,-5.885217,8.114558,9.102978,1.311036,-8.522774,-8.390889,-2.823352,-4.583790,-4.273485,9.188634,1.624464,7.978185,-7.764571,-7.421666,-7.776565,5.554258,-4.369801,5.825358,2.002263,-4.697146,5.703642,2.982652,2.774636,-4.198483,-0.940464,-6.934150,-3.097649,0.282644,5.680024,-2.997354,7.512578,-0.202765,-5.431549,5.608555,-9.338319,-6.166972,-4.003080,8.171175,7.188332,4.474031,8.548047,9.671280,4.096543,-5.207963,-1.276372,-0.423385,-2.539505,5.976117,-5.076561,-2.765405,0.458135,9.480403,-4.848758,1.990382,-0.214646,1.098779,-1.262150,-7.801054,-2.606600,-4.298453,4.025068,-2.915584,3.741810,4.476276,3.738704,-9.445584,-6.079143,-6.614228,-1.367117,-0.205075,3.639852,-9.580589,-7.180753,0.995160,9.535120,2.161059,0.944387,-5.745054,8.212702,-6.616382,4.468500,6.578519,-7.555946,-8.806075,0.346208,-6.313443,-4.804294,-8.256163,4.735664,5.557924,8.593789,7.567355,9.635754,9.358040,0.222386,7.441878,-9.517035,-0.219116,-4.760173,4.316211,7.616558,-3.244183,-6.613593,-4.555428,6.837924,-1.317445,-9.292911,5.456359,7.781025,2.220108,-1.358396,6.999898,7.635639,-7.831824,-3.445493,-9.622214,4.724950,-1.486070,8.473843,0.463223,-7.025757,-2.256757,1.078509,-3.324321,-5.532640,-9.754774,-5.119870,-6.843188,8.680982,-4.577968,-1.942219,-3.921381,9.402125,-5.974127,9.268381,7.567307,8.749233,0.325909,0.599335,-6.909159,2.848561,7.971263,-1.828881,3.608061,-5.639208,-2.053031,-0.400264,-5.909867,4.353913,6.361115,-0.512580,-4.586043,-5.669441,-7.419292,-6.635671,1.846048,8.849399,7.651862,-3.061035,-7.911205,-1.035383,-0.720470,8.365457,1.462472,5.584127,9.779525,9.114898,1.658360,0.893256,-6.874779,-0.648937,9.431496,-9.710637,-2.679537,-7.217765,2.154592,5.809722,2.304142,-7.063048,1.752731,4.503907,5.538278,-8.972996,-9.910473,-6.193155,2.868792,6.488038,3.428660,-2.979385,-6.949714,-7.848780,8.372488,5.397071,-3.890775,2.027314,7.467423,-4.224949,-2.765900,-2.963562,9.718398,8.175336,2.760990,0.136586,-6.971329,-2.081398,-5.200665,-6.317117,-3.851013,8.739253,9.891336,-1.412424,4.741930,5.147036,-0.869882,2.993696,-8.595966,-8.077298,1.736906,-2.366161,5.695840,-5.729211,6.995008,-4.603674,1.459508,-3.537458,-9.973475,6.440296,-9.715869,1.505615,-0.683577,-2.233631,9.284138,9.258092,-3.315810,-8.353326,-8.538713,-7.265967,1.086452,-3.655097,-8.723979,8.183257,4.532468,-7.738132,6.865416,-1.249014,-5.291143,3.142683,-7.127310,-7.836681,-9.196019,-0.125738,-9.060165,3.758605,3.983156,-6.225083,-9.763401,2.909430,-4.163287,1.058039,2.427134,-8.828426,-3.882809,-9.736033,-2.851874,-6.467610,1.006178,2.066516,7.698580,-7.293908,-7.708270,-6.110565,-1.837961,1.691139,1.525909,7.132676,-7.568240,8.454241,5.585347,4.249010,-3.161603,-2.498840,7.808911,2.931577,-7.187984,3.433993,-4.388288,-3.557002,7.839248,-6.875576,-0.072793,-3.856000,8.309444,-0.162391,3.545395,-0.471022,1.185321,8.141344,-5.862680,3.707215,-3.566556,-6.036794,-8.732589,-2.451934,-3.522549,-6.422058,-8.702306,7.468813,-2.317095,-6.975443,-1.784873,-1.222746,9.323312,-5.498730,-8.712351,9.702961,-7.508132,-7.665529,-7.932542,5.053888,0.761727,6.452754,-1.803186,2.139864,-6.460920,-3.050321,-1.521526,-4.506327,-8.538239,6.187765,-6.427819,-9.398253,-6.389395,3.584815,9.681904,7.345360,7.677141,-2.259517,-8.040911,-2.475874,7.233972,1.411506,5.535138,0.826334,-1.896263,6.120646,7.236400,5.057586,-9.927740,-2.226429,0.354592,-3.367615,8.061230,-3.893043,-0.490212,-5.190481,1.350777,4.560574,-7.662222,7.253077,1.570003,3.375696,-7.094926,7.535233,-0.841058,-9.761434,8.981461,-1.726397,3.766412,-9.933345,0.712954,2.475792,-7.471313,-8.640502,0.737329,5.224401,-9.687615,-6.103313,-5.854129,2.960635,5.447104,-7.132149,-8.724344,2.518801,-9.765992,0.368572,2.535290,-6.806721,6.171562,-9.815143,-9.314714,0.516708,-4.819220,9.096808,4.847796,8.764274,-9.186720,-9.774066,-0.238295,-4.126341,0.645569,8.129332,-0.058852,7.295102,-0.404754,4.624907,3.977182,3.512661,-5.081969,-9.755132,0.204231,-9.195085,-1.250654,-6.441481,6.015502,2.853543,-1.729567,5.156742,-5.948971,-6.164542,-6.574298,-0.969441,-7.841719,4.644212,-9.109571,8.784540,-8.286776,-0.310562,-8.803917,2.687020,5.393654,-5.604577,8.130789,6.729681,-8.909417,-0.126719,4.795968,9.761333,-8.377507,-9.375496,-7.885626,-3.771569,3.578703,7.022585,5.696286,8.141893,1.568639,-9.508434,9.496950,8.731087,4.474569,-5.627220,-1.081617,5.962362,7.866707,3.123219,5.367601,-8.004930,-2.148943,-3.286150,-2.883913,9.096676,4.169764,3.141345,6.129622,8.190340,-2.816828,7.860300,5.590132,-2.042482,-1.603798,-0.224410,4.799374,-1.198832,7.954560,-7.994118,2.265567,2.121644,9.152832,6.308003,9.888890,-8.551369,2.598436,-6.867842,-6.090340,2.137515,7.219349,-4.354688,-6.337469,-0.321788,5.597814,7.842871,-2.403306,5.378927,8.041017,-2.934253,9.965581,8.210729,-1.815616,3.800346,-7.293475,6.330905,8.435795,-8.548638,4.339531,1.007640,0.284210,2.334859,3.942144,-3.903625,7.814316,-5.717195,8.100827,0.561100,7.809547,-7.161679,7.275933,7.400376,7.414123,-3.923080,0.696312,3.527735,0.013762,-7.002312,6.347199,1.753641,-7.674958,-7.663514,2.505726,5.501359,-9.595002,-8.058142,-4.950519,-5.302614,-9.430464,-7.788710,-6.405052,-7.192677,-1.545538,0.156293,2.501880,-7.250876,-7.620853,6.489783,8.670110,-4.803926,-0.573130,7.443130,0.847089,-4.269395,1.174558,9.042873,-1.334356,1.548650,-7.913107,6.587901,0.490202,0.088412,-0.991488,-0.733107,-5.276575,3.726291,8.236829,6.363378,1.274852,-3.308649,-8.233222,-5.249422,-4.377921,5.807766,-8.204683,-6.037550,-6.816074,6.054034,4.465953,-7.965872,9.904575,-0.313427,6.282219,7.261979,-5.653694,3.999205,7.255998,4.544004,1.836412,-3.877866,2.391902,7.098954,4.620794,-8.639663,-3.255707,-5.785251,0.970265,3.455337,-9.188855,2.809285,-7.780772,7.491522,-6.641384,1.307379,0.549040,-6.042045,9.822134,-3.425644,-9.863597,4.969275,-6.589742,-3.382518,-5.826896,-0.148366,-7.912364,3.693244,-7.038609,-2.840406,-0.152692,-3.451990,-0.548667,-6.125082,-2.807908,-3.161159,-8.028694,-4.567039,5.530192,-2.665923,-5.998390,-2.799391,-2.530999,3.063996,-1.283836,3.274538,-2.442759,-3.667437,-4.462957,-1.654455,9.224137,-7.219399,-0.172359,-4.772034,6.959189,7.691416,5.796709,3.732509,-1.331735,-6.523830,-0.432029,7.454367,0.719149,3.727801,-4.805768,7.076501,-1.388000,9.602620,-3.450740,-2.416057,-3.743690,8.551772,5.720095,7.185531,0.375584,-0.324188,-7.647060,-4.968616,5.080905,3.464529,9.208436,-2.120897,-7.051195,-7.013379,0.161045,3.743661,4.338564,-8.522638,5.006295,-0.770117,3.945158,-8.661777,-7.160329,-6.819833,6.060620,6.484051,-1.153326,-6.892964,-5.906162,8.948189,-2.448101,1.296264,5.779759,-7.945740,-6.334130,6.460605,-6.985995,9.725166,9.376070,-6.880318,3.885679,2.014006,2.915190,2.070849,3.185416,-0.282887,8.207830,8.672856,4.720738,9.277702,-6.031258,9.252270,-4.510700,8.007896,-0.180508,-9.720996,8.899448,8.498666,-0.033175,-9.213139,1.979842,4.591477,1.962505,0.997634,-5.359253,-4.160416,-9.017083,9.679122,-6.001349,-6.749186,8.953090,-4.853679,-6.690962,3.814297,-9.084859,-4.478997,-1.992535,-4.458639,-6.494092,-5.613564,-0.633710,9.860337,6.360839,-9.830531,0.044118,-0.883200,9.717526,-5.733750,0.324799,-0.845966,1.415183,7.334531,-3.812947,0.505425,-2.956782,-5.565384,-6.443088,1.388707,-2.340197,1.916282,-2.084605,-2.594004,9.361763,5.524043,4.291440,-4.771655,5.872563,-8.991166,-1.188958,-0.575119,-7.227852,7.193022,6.977508,-9.533147,-4.572597,0.219149,4.181052,9.015808,-2.363955,6.519105,-5.755659,8.886285,-4.308694,-7.368664,1.042440,1.542086,4.137821,2.530562,3.357860,-6.129112,3.671195,-9.649557,-1.699809,9.753274,-7.395223,-0.847386,3.899651,-0.603760,7.263593,-6.366482,-4.276419,-3.151837,-4.449930,-5.291537,2.959216,-8.347353,-0.538273,-4.284405,-7.232538,-7.308111,-4.927644,1.172440,-4.891459,8.433906,-4.005519,-1.508967,7.570000,-3.183727,-1.907950,2.659668,-5.595320,9.270587,-9.829875,6.650323,7.179854,-4.288819,-6.418231,6.155999,5.956010,-8.725812,-2.597196,-6.389424,-6.837485,-6.112909,7.261135,-8.896686,3.542365,9.190818,1.629281,-1.644773,-5.530275,4.320880,-7.759821,9.555380,1.736818,-3.063555,-4.710265,-1.173094,4.425028,-7.069013,-4.364782,-2.631245,-6.008922,-9.460630,-6.418253,-6.521361,1.459030,8.191278,2.615070,1.882853,8.538155,-3.587096,2.707517,-4.086258,2.825290,4.730724,7.573157,4.105308,6.331116,-1.548915,-4.507564,-9.382779,-8.908046,-5.936632,-2.256821,-9.243984,9.383725,-1.463891,5.174048,5.444884,7.327230,9.554318,8.995409,-4.277234,-3.206481,-3.809862,8.255452,-8.102689,0.822757,0.325499,-3.235133,6.445280,7.966003,-8.952881,-2.454667,1.816768,2.632058,-7.429162,-9.337807,2.160539,6.808179,3.779979,5.404773,-6.344560,-2.193861,-4.894711,-6.114101,-0.042478,7.281998,-9.493420,5.238906,9.540536,-9.898928,2.517567,-2.033279,1.941505,-1.588372,5.095974,-4.288803,-3.833548,7.772908,-8.604630,-9.646725,3.177556,0.774166,6.690271,-3.601639,7.011844,7.999748,5.192000,-4.936770,7.255774,9.785927,-2.927107,2.966086,9.721416,8.855012,-1.301151,-2.643653,-1.087931,5.883491,-2.665992,-8.322134,5.510388,-2.158021,-0.665729,4.259680,-3.657628,-7.805361,0.822457,7.443854,-5.705212,-6.430470,7.717986,7.939745,-9.184990,1.268086,-5.614036,1.026406,6.654234,-7.078361,-2.115931,-9.700505,-2.206766,0.814985,-2.328255,-3.147915,8.033572,8.204012,-6.857820,-7.001639,5.124725,7.919038,-1.587253,8.061763,4.691748,2.812379,-6.738224,-5.065787,-6.128699,-9.646754,-3.401699,5.093804,4.860286,-4.240710,4.873996,-4.887538,5.675991,-9.406468,-1.934077,8.693686,7.451972,7.789103,-6.572512,5.757406,4.311896,5.836093,-9.447061,-6.428524,8.981822,4.909032,6.385329,-7.946358,-2.937745,-3.616920,-4.120623,-0.895006,-1.142435,5.985822,1.516244,1.344061,-5.506103,-3.203564,-4.336224,-9.947943,-6.480106,-0.665723,-8.665716,-6.599080,-3.551381,6.407460,-6.172360,-8.473473,-5.666981,-1.044327,-3.862450,-6.125843,-3.931224,-7.434575,1.970704,6.422491,-9.526057,-5.378443,-6.757791,5.716647,8.195385,3.131584,-7.528290,3.517548,-2.095169,-4.132496,8.010688,1.563356,-4.738163,-7.639451,7.797675,3.748100,-3.659596,-9.525253,-6.241358,5.311964,-8.756045,7.682855,-9.510108,0.871755,-8.335862,-5.695946,7.317342,-9.437507,9.203211,6.458241,-8.024055,-7.744103,-8.850362,2.142868,8.775181,9.373230], dtype = "float32")#candidate|6212|(2400,)|const|float32
call_6211 = relay.TupleGetItem(func_3101_call(relay.reshape(const_6212.astype('float32'), [16, 15, 10])), 0)
call_6213 = relay.TupleGetItem(func_3103_call(relay.reshape(const_6212.astype('float32'), [16, 15, 10])), 0)
bop_6216 = relay.mod(const_6212.astype('float32'), const_6195.astype('float32')) # shape=(11, 3, 2400)
uop_6223 = relay.rsqrt(const_6212.astype('float32')) # shape=(2400,)
uop_6237 = relay.asinh(call_6211.astype('float64')) # shape=(16, 15, 10)
uop_6239 = relay.asinh(call_6213.astype('float64')) # shape=(16, 15, 10)
output = relay.Tuple([bop_6197,call_6206,bop_6216,uop_6223,uop_6237,])
output2 = relay.Tuple([bop_6197,call_6207,bop_6216,uop_6223,uop_6239,])
func_6244 = relay.Function([], output)
mod['func_6244'] = func_6244
mod = relay.transform.InferType()(mod)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mutated_mod.get_global_var('func_6244')
call_6245 = func_6244_call()
output = call_6245
func_6246 = relay.Function([], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_6263 = func_4086_call()
call_6264 = func_4086_call()
func_2290_call = mod.get_global_var('func_2290')
func_2295_call = mutated_mod.get_global_var('func_2295')
var_6271 = relay.var("var_6271", dtype = "uint64", shape = (196,))#candidate|6271|(196,)|var|uint64
var_6272 = relay.var("var_6272", dtype = "uint32", shape = (154,))#candidate|6272|(154,)|var|uint32
call_6270 = relay.TupleGetItem(func_2290_call(relay.reshape(var_6271.astype('uint64'), [4, 7, 7]), relay.reshape(var_6271.astype('uint64'), [4, 7, 7]), relay.reshape(var_6272.astype('uint32'), [154,]), ), 4)
call_6273 = relay.TupleGetItem(func_2295_call(relay.reshape(var_6271.astype('uint64'), [4, 7, 7]), relay.reshape(var_6271.astype('uint64'), [4, 7, 7]), relay.reshape(var_6272.astype('uint32'), [154,]), ), 4)
output = relay.Tuple([call_6263,call_6270,var_6271,var_6272,])
output2 = relay.Tuple([call_6264,call_6273,var_6271,var_6272,])
func_6287 = relay.Function([var_6271,var_6272,], output)
mod['func_6287'] = func_6287
mod = relay.transform.InferType()(mod)
mutated_mod['func_6287'] = func_6287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6287_call = mutated_mod.get_global_var('func_6287')
var_6289 = relay.var("var_6289", dtype = "uint64", shape = (196,))#candidate|6289|(196,)|var|uint64
var_6290 = relay.var("var_6290", dtype = "uint32", shape = (154,))#candidate|6290|(154,)|var|uint32
call_6288 = func_6287_call(var_6289,var_6290,)
output = call_6288
func_6291 = relay.Function([var_6289,var_6290,], output)
mutated_mod['func_6291'] = func_6291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_6368 = func_5243_call()
call_6369 = func_5243_call()
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_6371 = relay.TupleGetItem(func_5709_call(), 2)
call_6372 = relay.TupleGetItem(func_5710_call(), 2)
func_490_call = mod.get_global_var('func_490')
func_495_call = mutated_mod.get_global_var('func_495')
var_6375 = relay.var("var_6375", dtype = "uint32", shape = (154,))#candidate|6375|(154,)|var|uint32
var_6376 = relay.var("var_6376", dtype = "uint32", shape = (70,))#candidate|6376|(70,)|var|uint32
call_6374 = relay.TupleGetItem(func_490_call(relay.reshape(var_6375.astype('uint32'), [7, 11, 2]), relay.reshape(var_6375.astype('uint32'), [7, 11, 2]), relay.reshape(var_6376.astype('uint32'), [14, 5]), ), 2)
call_6377 = relay.TupleGetItem(func_495_call(relay.reshape(var_6375.astype('uint32'), [7, 11, 2]), relay.reshape(var_6375.astype('uint32'), [7, 11, 2]), relay.reshape(var_6376.astype('uint32'), [14, 5]), ), 2)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_6381 = func_4313_call()
call_6382 = func_4313_call()
output = relay.Tuple([call_6368,call_6371,call_6374,var_6375,var_6376,call_6381,])
output2 = relay.Tuple([call_6369,call_6372,call_6377,var_6375,var_6376,call_6382,])
func_6391 = relay.Function([var_6375,var_6376,], output)
mod['func_6391'] = func_6391
mod = relay.transform.InferType()(mod)
var_6392 = relay.var("var_6392", dtype = "uint32", shape = (154,))#candidate|6392|(154,)|var|uint32
var_6393 = relay.var("var_6393", dtype = "uint32", shape = (70,))#candidate|6393|(70,)|var|uint32
output = func_6391(var_6392,var_6393,)
func_6394 = relay.Function([var_6392,var_6393,], output)
mutated_mod['func_6394'] = func_6394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5858_call = mod.get_global_var('func_5858')
func_5860_call = mutated_mod.get_global_var('func_5860')
call_6454 = relay.TupleGetItem(func_5858_call(), 0)
call_6455 = relay.TupleGetItem(func_5860_call(), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_6472 = func_3976_call()
call_6473 = func_3976_call()
func_5189_call = mod.get_global_var('func_5189')
func_5192_call = mutated_mod.get_global_var('func_5192')
var_6482 = relay.var("var_6482", dtype = "float32", shape = (2400,))#candidate|6482|(2400,)|var|float32
call_6481 = relay.TupleGetItem(func_5189_call(relay.reshape(var_6482.astype('float32'), [2, 1200])), 0)
call_6483 = relay.TupleGetItem(func_5192_call(relay.reshape(var_6482.astype('float32'), [2, 1200])), 0)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_6488 = func_4086_call()
call_6489 = func_4086_call()
output = relay.Tuple([call_6454,call_6472,call_6481,var_6482,call_6488,])
output2 = relay.Tuple([call_6455,call_6473,call_6483,var_6482,call_6489,])
func_6493 = relay.Function([var_6482,], output)
mod['func_6493'] = func_6493
mod = relay.transform.InferType()(mod)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6494 = relay.var("var_6494", dtype = "float32", shape = (2400,))#candidate|6494|(2400,)|var|float32
func_6493_call = mutated_mod.get_global_var('func_6493')
call_6495 = func_6493_call(var_6494)
output = call_6495
func_6496 = relay.Function([var_6494], output)
mutated_mod['func_6496'] = func_6496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6044_call = mod.get_global_var('func_6044')
func_6046_call = mutated_mod.get_global_var('func_6046')
call_6551 = relay.TupleGetItem(func_6044_call(), 0)
call_6552 = relay.TupleGetItem(func_6046_call(), 0)
output = relay.Tuple([call_6551,])
output2 = relay.Tuple([call_6552,])
func_6565 = relay.Function([], output)
mod['func_6565'] = func_6565
mod = relay.transform.InferType()(mod)
mutated_mod['func_6565'] = func_6565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6565_call = mutated_mod.get_global_var('func_6565')
call_6566 = func_6565_call()
output = call_6566
func_6567 = relay.Function([], output)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6146_call = mod.get_global_var('func_6146')
func_6148_call = mutated_mod.get_global_var('func_6148')
call_6651 = func_6146_call()
call_6652 = func_6146_call()
output = relay.Tuple([call_6651,])
output2 = relay.Tuple([call_6652,])
func_6674 = relay.Function([], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mutated_mod.get_global_var('func_6674')
call_6675 = func_6674_call()
output = call_6675
func_6676 = relay.Function([], output)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_6711 = relay.TupleGetItem(func_5585_call(), 0)
call_6712 = relay.TupleGetItem(func_5586_call(), 0)
uop_6714 = relay.exp(call_6711.astype('float64')) # shape=(16, 3, 14)
uop_6716 = relay.exp(call_6712.astype('float64')) # shape=(16, 3, 14)
output = uop_6714
output2 = uop_6716
func_6717 = relay.Function([], output)
mod['func_6717'] = func_6717
mod = relay.transform.InferType()(mod)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mutated_mod.get_global_var('func_6717')
call_6718 = func_6717_call()
output = call_6718
func_6719 = relay.Function([], output)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_6742 = func_5382_call()
call_6743 = func_5382_call()
output = relay.Tuple([call_6742,])
output2 = relay.Tuple([call_6743,])
func_6767 = relay.Function([], output)
mod['func_6767'] = func_6767
mod = relay.transform.InferType()(mod)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6767_call = mutated_mod.get_global_var('func_6767')
call_6768 = func_6767_call()
output = call_6768
func_6769 = relay.Function([], output)
mutated_mod['func_6769'] = func_6769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mod.get_global_var('func_3299')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_6824 = relay.TupleGetItem(func_3299_call(), 0)
call_6825 = relay.TupleGetItem(func_3301_call(), 0)
output = call_6824
output2 = call_6825
func_6857 = relay.Function([], output)
mod['func_6857'] = func_6857
mod = relay.transform.InferType()(mod)
output = func_6857()
func_6858 = relay.Function([], output)
mutated_mod['func_6858'] = func_6858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_6871 = func_5382_call()
call_6872 = func_5382_call()
func_3737_call = mod.get_global_var('func_3737')
func_3742_call = mutated_mod.get_global_var('func_3742')
const_6884 = relay.const([-10,2,7,-6,-5,-6,-3,-5,4,4,4,5,6,-9,5,-8,10,-6,1,2,2,-7,1,-5,-4,8,-9,-8,-7,1,-7,-6,8,-8,7,-4,-7,5,3,-2,1,6,5,6,-3,3,-5,-10,2,-3,-7,-9,10,-4,-3,1,-8,-5,-3,6,-7,9,-9,-8,-7,1,10,10,-1,-2,-1,-8,1,4,4,3,9,7,3,9,6,5,8,-3,-2,-5,9,-3,-7,-8,5,4,5,9,5,-7,-6,5,8,4,5,2,-3,8,-2,-2,-8,-10,-8,-1,9,-5,10,10,10,-7,-5,10,-6,9,5,-4,8,7,4,-10,-8,9,-5,-8,-5,1,-6,10,-9,9,-10,8,6,5,-3,-5,10,-9,-3,1,3,-1,-4,2,-10,9,3,-8,-3,3,8,7,1,2,-4,-5,-4,8,5,-1,-1,5,-8,-7,7,-8,-7,10,2,4,-4,5,-3,-6,-4,-3,9,-1,2,1,9,4,-4,-5,-8,-6,-6,-10,5,7,-5,4,-10,-3,4,-4,1,10,4,-4,2,3,-1,7,9,5,6,-7,6,-9,-4,-5,2,-2,3,-9,6,-5,6,-2,5,8,7,-8,-7,-5,-1,-6,6,-9,4,3,3,8,9,-6,-9,8,2,-1,2,-10,4,7,-3,-10,6,10,3,-9,-8,-9,-9,-5,2,10,9,8,-3,5,3,7,-1,9,3,-6,-2,9,1,-2,9,-8,9,2,-3,10,-4,-5,3,9,-3,10,2,-7,-5,-8,1,1,-6,-2,3,4,10,-4,-7,-1,-10,6,-2,6,1,10,-2,2,7,6,9,-7,3,-3,4,1,-7,-7,1,4,7,-6,6,-6,3,1,2,-10,-9,5,7,9,-4,-2,-8,-9,-10,-4,2,-9,2,4,10,-10,4,-4,3,4,-10,2,-3,-4,3,-9,-10,9,-10,7,-4,-9,-2,1,8,3,-2,-7,6,-9,-1,-6,-9,-2,-6,9,6,10,2,-3,7,-10,1,-7,9,5,-6,-3,-6,6,-4,1,2,9,-3,4,-8,-10,-2,-3,-2,-2,-1,-5,-8,6,3,-3,3,9,-4,-5,-7,-1,-1,-9,5,3,-4,1,-7,-7,8,-5,2,4,-9,8,7,3,4,-3,3,2,-2,1,-2,2,-8,9,-3,8,6,-7,5,-1,2,-7,9,4,4,3,-6,6,-3,6,9,-9,-9,-10,-6,3,-4,-7,-2,8,-6,2,7,-6,4,-10,5,2,6,6,10,4,-2,10,-9,7,-9,-9,-10,1,-6,-9,-10,5,-10,2,2,7,-6], dtype = "int32")#candidate|6884|(495,)|const|int32
const_6885 = relay.const([-7,-2,5,5,8,-9,8,-7,8,6,5,-1,3,-1,7,4,2,10,-1,3,2,-6,-2,9,-5,10,-5,8,-9,9,-9,-9,2,8,-4,-1,-5,-7,9,6,2,-7,7,7,6,-1,10,6,9,5,7,2,-4,8,4,1,-10,-3,4,2,-5,-5,-2,6,4,-7,-7,2,7,-7,4,6,-4,8,8,-10,-2,7,5,-9,7,10,4,-7,4,3,2,9,-6,-6,8,7,-8,-7,-10,-1,-2,-2,5,-9,-3,-6,-2,1,-5,-2,2,4,-6,4,-7,4,8,-8,-5,-3,-1,-3,7,3,-4,4,6,7,-10,9,-6,9,-9,10,-7,-2,3,1,3,1,-9,-3,-4,9,1,-3,3,4,8,5,4,-4,-5,6,-1,5,-3,-6], dtype = "uint32")#candidate|6885|(154,)|const|uint32
const_6886 = relay.const([1,5,9,-6,9,7,-1,-9], dtype = "uint16")#candidate|6886|(8,)|const|uint16
call_6883 = relay.TupleGetItem(func_3737_call(relay.reshape(const_6884.astype('int32'), [5, 9, 11]), relay.reshape(const_6885.astype('uint32'), [22, 7]), relay.reshape(const_6886.astype('uint16'), [8,]), ), 0)
call_6887 = relay.TupleGetItem(func_3742_call(relay.reshape(const_6884.astype('int32'), [5, 9, 11]), relay.reshape(const_6885.astype('uint32'), [22, 7]), relay.reshape(const_6886.astype('uint16'), [8,]), ), 0)
uop_6933 = relay.cos(call_6871.astype('float32')) # shape=(11, 4, 10)
uop_6935 = relay.cos(call_6872.astype('float32')) # shape=(11, 4, 10)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_6950 = func_4168_call()
call_6951 = func_4168_call()
func_6565_call = mod.get_global_var('func_6565')
func_6567_call = mutated_mod.get_global_var('func_6567')
call_6966 = relay.TupleGetItem(func_6565_call(), 0)
call_6967 = relay.TupleGetItem(func_6567_call(), 0)
output = relay.Tuple([call_6883,const_6884,const_6885,const_6886,uop_6933,call_6950,call_6966,])
output2 = relay.Tuple([call_6887,const_6884,const_6885,const_6886,uop_6935,call_6951,call_6967,])
func_6973 = relay.Function([], output)
mod['func_6973'] = func_6973
mod = relay.transform.InferType()(mod)
output = func_6973()
func_6974 = relay.Function([], output)
mutated_mod['func_6974'] = func_6974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6973_call = mod.get_global_var('func_6973')
func_6974_call = mutated_mod.get_global_var('func_6974')
call_7021 = relay.TupleGetItem(func_6973_call(), 0)
call_7022 = relay.TupleGetItem(func_6974_call(), 0)
output = relay.Tuple([call_7021,])
output2 = relay.Tuple([call_7022,])
func_7029 = relay.Function([], output)
mod['func_7029'] = func_7029
mod = relay.transform.InferType()(mod)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7029_call = mutated_mod.get_global_var('func_7029')
call_7030 = func_7029_call()
output = call_7030
func_7031 = relay.Function([], output)
mutated_mod['func_7031'] = func_7031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_7040 = relay.TupleGetItem(func_4250_call(), 0)
call_7041 = relay.TupleGetItem(func_4251_call(), 0)
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
var_7058 = relay.var("var_7058", dtype = "uint16", shape = ())#candidate|7058|()|var|uint16
const_7059 = relay.const([7,3,5,-7,-5,2,-4,9], dtype = "uint16")#candidate|7059|(8,)|const|uint16
call_7057 = func_211_call(relay.reshape(var_7058.astype('uint16'), []), relay.reshape(const_7059.astype('uint16'), [1, 2, 4]), )
call_7060 = func_211_call(relay.reshape(var_7058.astype('uint16'), []), relay.reshape(const_7059.astype('uint16'), [1, 2, 4]), )
output = relay.Tuple([call_7040,call_7057,var_7058,const_7059,])
output2 = relay.Tuple([call_7041,call_7060,var_7058,const_7059,])
func_7071 = relay.Function([var_7058,], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7072 = relay.var("var_7072", dtype = "uint16", shape = ())#candidate|7072|()|var|uint16
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7073 = func_7071_call(var_7072)
output = call_7073
func_7074 = relay.Function([var_7072], output)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mod.get_global_var('func_5243')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_7123 = func_5243_call()
call_7124 = func_5243_call()
var_7146 = relay.var("var_7146", dtype = "float64", shape = (16, 3, 14))#candidate|7146|(16, 3, 14)|var|float64
bop_7147 = relay.add(call_7123.astype('uint16'), relay.reshape(var_7146.astype('uint16'), relay.shape_of(call_7123))) # shape=(16, 3, 14)
bop_7150 = relay.add(call_7124.astype('uint16'), relay.reshape(var_7146.astype('uint16'), relay.shape_of(call_7124))) # shape=(16, 3, 14)
uop_7151 = relay.asinh(bop_7147.astype('float64')) # shape=(16, 3, 14)
uop_7153 = relay.asinh(bop_7150.astype('float64')) # shape=(16, 3, 14)
output = relay.Tuple([uop_7151,])
output2 = relay.Tuple([uop_7153,])
func_7158 = relay.Function([var_7146,], output)
mod['func_7158'] = func_7158
mod = relay.transform.InferType()(mod)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7159 = relay.var("var_7159", dtype = "float64", shape = (16, 3, 14))#candidate|7159|(16, 3, 14)|var|float64
func_7158_call = mutated_mod.get_global_var('func_7158')
call_7160 = func_7158_call(var_7159)
output = call_7160
func_7161 = relay.Function([var_7159], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_7268 = func_4392_call()
call_7269 = func_4392_call()
func_6146_call = mod.get_global_var('func_6146')
func_6148_call = mutated_mod.get_global_var('func_6148')
call_7270 = func_6146_call()
call_7271 = func_6146_call()
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_7279 = func_3868_call()
call_7280 = func_3868_call()
output = relay.Tuple([call_7268,call_7270,call_7279,])
output2 = relay.Tuple([call_7269,call_7271,call_7280,])
func_7299 = relay.Function([], output)
mod['func_7299'] = func_7299
mod = relay.transform.InferType()(mod)
mutated_mod['func_7299'] = func_7299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7299_call = mutated_mod.get_global_var('func_7299')
call_7300 = func_7299_call()
output = call_7300
func_7301 = relay.Function([], output)
mutated_mod['func_7301'] = func_7301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mod.get_global_var('func_6717')
func_6719_call = mutated_mod.get_global_var('func_6719')
call_7383 = func_6717_call()
call_7384 = func_6717_call()
func_4113_call = mod.get_global_var('func_4113')
func_4117_call = mutated_mod.get_global_var('func_4117')
var_7395 = relay.var("var_7395", dtype = "uint32", shape = (77, 1))#candidate|7395|(77, 1)|var|uint32
const_7396 = relay.const([2,-3,5,7,8,-8,-10,5,8,-4,-4,3,-9,5,8,7,7,-3,2,2,-5,4,-9,-5,-1,-7,1,3,10,9,7,8,-6,6,-2,9,9,3,6,-4,-8,-2,-10,10,6,-8,5,-8,-6,8,3,5,3,-9,-7,-6,3,-3,6,2,5,4,5,-9,-6,-9,6,-2,-4,-6,3,6,-9,-10,-4,-6,10,9,1,6,-6,-10,-1,-9,-3,-5,-6,-6,-10,9,-7,-5,6,4,-3,-7,-5,1,-9,-10,5,1,-4,8,3,2,-4,-9,-2,-8,-3,-1,-1,-4,-5,3,8,3,2,10,1,-5,10,7,-7,4,-9,-8,-9,1,7,-4,-9,-8,10,-6,1,-8,-7,10,2,-2,1,3,2,-6,9,5,8,-1,-5,-1,-10,5,6,9,-1,8,3,-6,7,-6,-1,-4,-8,9,-4,8,-9,-9,-2,4,-3,7,-6,-3,-2,-7,3,4,-8,3,-1,-6,-5,7,5,-1,4,6,-1,-2,9,-10,5,-4,-4,5,-7,10,-7,-1,8,3,-2,-5,8,-7,-9,1,-10,-6,-9,2,3,-10,-8,-5,5,-2,8,9,5,5,5,-7,-9,9,-8,-6,2,-3,8,-9,-7,9,8,-1,6,-8,-2,-5,-10,10,7,10,3,2,-3,-6,3,8,-5,-6,-7,-1,-9,-9,-3,8,-7,9,-6,-3,1,-1,-7,8,10,-3,6,5,2,-6,-4,-5,7,-1,5,1,-5,10,3,-6,-10,7,4,-3,5,3,8,-10,-4,-5,9,4,-2,8,2,8,4,2,-7,-6,6,4,1,-8,-7,3,1,-9,-2,8,-2,8,2,-2,4,-3,-9,-4,-3,5,-5,5,6,1,-3,-9,-7,-9,-6,-8,-10,1,-10,-2,-5,-2,-5,-8,-2,-6,10,-8,-4,-6,9,-1,6,8,4,10,7,2,10,-3,-1,-7,-8,-7,-1,3,6,-9,-5,-10,-9,10,4,-9,4,-9,5,-7,1,5,7,-4,-3,9,1,7,-2,7,-9,-4,-2,-9,9,8,-1,5,-5,5,1,-6,-3,-2,1,3,-8,4,-10,-7,-8,2,-9,9,6,-4,8,-9,4,-6,-3,-5,-7,-2,-2,9,-3,-1,-8,8,6,10,1,-5,-3,10,-3,8,5,-9,9,7,1,-6,-10,-4,6,10,-5,4,9,5,-10,4,-3,2,-2,-3,7,-3,-4,5,1,9,2,6,-7,3,-4,-5,-1,6,-6,-6,10,1,-6,-4,-2,5,-6,5,-1,-5,9,-1,-6,2,8,4,7,2,10,10,-8,-5,-5,-10,-3,3,-4,10,1,-2,2,-7,-9,-2,-4,2,9,-8,10,-3,2,4,-10,6,8,10,-1,-9,-5,-1,5,-1,-3,-1,7,-5,-1,5,-3,5,-6,-9,2,-9,-9,8,-6,-2,-7], dtype = "uint32")#candidate|7396|(539,)|const|uint32
call_7394 = relay.TupleGetItem(func_4113_call(relay.reshape(var_7395.astype('uint32'), [7, 11, 1]), relay.reshape(const_7396.astype('uint32'), [7, 11, 7]), ), 0)
call_7397 = relay.TupleGetItem(func_4117_call(relay.reshape(var_7395.astype('uint32'), [7, 11, 1]), relay.reshape(const_7396.astype('uint32'), [7, 11, 7]), ), 0)
output = relay.Tuple([call_7383,call_7394,var_7395,const_7396,])
output2 = relay.Tuple([call_7384,call_7397,var_7395,const_7396,])
func_7399 = relay.Function([var_7395,], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
var_7400 = relay.var("var_7400", dtype = "uint32", shape = (77, 1))#candidate|7400|(77, 1)|var|uint32
output = func_7399(var_7400)
func_7401 = relay.Function([var_7400], output)
mutated_mod['func_7401'] = func_7401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_7417 = relay.TupleGetItem(func_5585_call(), 0)
call_7418 = relay.TupleGetItem(func_5586_call(), 0)
var_7426 = relay.var("var_7426", dtype = "float64", shape = (16, 3, 14))#candidate|7426|(16, 3, 14)|var|float64
bop_7427 = relay.greater(call_7417.astype('bool'), relay.reshape(var_7426.astype('bool'), relay.shape_of(call_7417))) # shape=(16, 3, 14)
bop_7430 = relay.greater(call_7418.astype('bool'), relay.reshape(var_7426.astype('bool'), relay.shape_of(call_7418))) # shape=(16, 3, 14)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
const_7442 = relay.const([6,9,10,-10,-10,1,9,-10,5,-1,-10,-9,-9,7,8,9,7,-3,-5,5,5,5,-1,-10,-3,-9,10,-4,-4,6,-2,-7,4,5,3,9,5,-4,7,3,3,-4,9,3,8,9,-6,-8,-8,-4,-2,1,-4,-2,-6,-2,-6,-3,-6,-2,6,6,-8,4,7,7,10,-7,-2,7,5,-9,8,9,6,8,-3,-6,1,6,-8,9,2,4,8,-2,-3,-5,-2,-6,-6,-2,1,7,-8,9,-8,7,6,-2,7,9,-6,2,9,-10,-2,-1,2,4,2,7,-4,8,8,-6,7,-4,10,-4,-3,3,9,-10,-3,-1,10,5,-4,5,6,-8,9,-7,-9,-7,5,10,3,5,4,8,-5,9,-7,-3,8,-5,5,-5,5,9,-1,4], dtype = "uint32")#candidate|7442|(154,)|const|uint32
call_7441 = relay.TupleGetItem(func_5236_call(relay.reshape(const_7442.astype('uint32'), [154,])), 4)
call_7443 = relay.TupleGetItem(func_5238_call(relay.reshape(const_7442.astype('uint32'), [154,])), 4)
func_7299_call = mod.get_global_var('func_7299')
func_7301_call = mutated_mod.get_global_var('func_7301')
call_7451 = relay.TupleGetItem(func_7299_call(), 1)
call_7452 = relay.TupleGetItem(func_7301_call(), 1)
output = relay.Tuple([bop_7427,call_7441,const_7442,call_7451,])
output2 = relay.Tuple([bop_7430,call_7443,const_7442,call_7452,])
func_7460 = relay.Function([var_7426,], output)
mod['func_7460'] = func_7460
mod = relay.transform.InferType()(mod)
var_7461 = relay.var("var_7461", dtype = "float64", shape = (16, 3, 14))#candidate|7461|(16, 3, 14)|var|float64
output = func_7460(var_7461)
func_7462 = relay.Function([var_7461], output)
mutated_mod['func_7462'] = func_7462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7481 = relay.var("var_7481", dtype = "float64", shape = (4, 6, 1))#candidate|7481|(4, 6, 1)|var|float64
uop_7482 = relay.sigmoid(var_7481.astype('float64')) # shape=(4, 6, 1)
func_4153_call = mod.get_global_var('func_4153')
func_4156_call = mutated_mod.get_global_var('func_4156')
const_7488 = relay.const([9.483960,0.541767,9.519635,-1.891598,-4.005431,3.855278,8.890023,0.716273,-4.477470,-7.498192,2.837472,4.311020,9.284865,-6.805744,6.475888,9.514762,9.840841,-7.705561,-8.439638,6.062322,0.145018,2.698328,-3.904285,0.532820,2.732100,0.512496,2.695694,-9.790116,-6.673618,-9.924596,-8.936318,-1.370770,-9.812254,-1.363930,-2.291609,7.777371,2.558073,-5.595522,8.894044,-0.340568,6.438090,4.585188,6.956239,-3.076556,-2.923856,0.565706,-9.618291,-3.701952,-8.684469,9.636834,9.836009,-5.030698,-4.813509,-1.057140,7.293119,-5.940888,-3.009364,6.060662,4.080928,0.258919,-2.885065,-2.859685,8.363879,9.068029,-9.088756,-9.968210,2.231933,-3.594566,0.176277,-7.828668,3.999968,-8.216827,-1.778243,8.217521,9.618667,-6.597322,-6.916857,-7.196391,0.863272,1.282906,-6.770298,6.024589,3.905340,1.874047,-0.770069,8.187613,-7.735984,3.687606,2.332571,-9.470021,-6.839135,7.209832,-5.326136,-3.582353,5.809103,1.833697,9.170898,-7.195883,-6.898169,7.625253,6.705236,-4.020772,-2.940664,-8.978428,9.846554,-1.288728,6.673403,-1.586207,2.961624,-8.592482,-2.818797,7.323177,-6.528331,-3.513080,5.386007,-1.601898,-3.030296,4.726780,-4.072158,1.504555,-1.041434,3.509615,5.003193,9.262429,-1.511102,2.496834,4.352622,-9.113459,-5.372052,-4.356266,8.159891,-6.264021,-4.111666,-2.744646,-8.809540,-5.029711,-1.873796,-1.677175,7.143714,-6.972880,5.258541,-8.647729,-0.080008,9.453123,-9.941824,4.009995,-0.342872,5.214184,0.593802,3.871046,2.644781,-5.351219,-5.997666,3.187191,3.942569,8.970034,-8.159946,7.325925,6.096544,3.075469,5.356208,1.593193,6.728021,-3.163428,-2.895517,-4.222252,9.205489,8.664939,2.430434,9.680758,1.576386,-9.216702,-9.667920,-8.550805,-7.210993,7.447753,-9.238153,1.812187,-0.354537,-1.780629,1.080874,-9.249428,-2.335947,-4.982711,0.833822,-1.368340,5.883767,-1.217409,-4.561713,3.900040,-9.709767,-4.843935,2.359276,-3.709088,5.117452,-2.651281,7.522870,6.748953,9.931340,-0.912744,6.650522,8.586782,5.180926,7.347499,-6.439389,-6.310022,8.522000,-6.518254,-1.680140,-9.343058,8.621364,-8.084204,-6.065014,-3.102234,-4.196029,-8.892374,2.138336,-9.083153,7.095500,2.265701,-2.193611,-5.012327,-1.362376,-4.542675,-8.963045,5.720326,9.555848,-7.386612,0.669854,8.997674,2.940727,-2.076791,9.339262,3.906588,-5.479820,4.468720,-1.119298,-7.627104,-7.880434,1.312592,-6.297600,-9.182432,6.267443,0.091647,-7.338192,-7.035338,-0.356172,-6.984199,0.807579,-2.061243,-9.333695,-5.583200,7.981001,-1.702006,2.812698,-9.216851,-8.237671,3.567449,-8.973191,-7.229363,-2.968947,-1.276237,4.069655,-7.465682,6.425083,-5.959778,-6.082845,-5.539922,-4.392435,6.122104,9.766677,1.354484,7.941854,5.151716,6.831671,-7.286375,-3.240967,-7.915036,6.075870,-8.078334,9.659721,0.446631,8.702545,4.269631,-0.022735,6.216955,9.403151,6.305941,2.184303,-5.440589,-1.609488,-8.898139,6.256534,8.306127,-2.218073,1.485548,-6.928030,7.402579,5.309975,1.446208,-6.374652,5.645403,4.414779,-1.512097,3.710639,3.763621,6.627008,-6.280472,-2.196219,1.367275,1.791067,-8.563642,4.010199,3.394220,1.714588,-4.440543,6.986430,0.807084,-0.233707,2.291388,-3.104689,-7.843311,9.770801,-2.954003,-4.123738,-9.916975,3.474364,0.363438,-3.254738,7.709726,-6.387106,0.889474,1.890566,-9.536283,-3.750352,7.543989,7.805288,-5.384354,-5.006292,-1.687086,8.995533,-5.113369,-0.978643,2.111518,-0.030556,-4.386614,8.847600,-9.773949,-0.203220,-3.836988,-3.700771,5.089832,3.338103,-6.448879,-7.971595,-5.934310,7.095139,-3.639957,2.521085,4.939728,-2.558581,-8.500431,7.474312,-9.930831,3.134169,7.628450,-4.453484,9.642100,-4.440370,0.590164,4.051754,-6.979937,-8.037159,-5.670509,6.469003,1.723947,6.774240,8.423367,-0.544964,-7.333884,-1.511135,-7.680981,-8.204981,4.327176,7.220176], dtype = "float32")#candidate|7488|(385,)|const|float32
const_7489 = relay.const([[-5,-10,-5,-4,4,-6,-8,5,7,2],[7,4,6,5,-4,-4,2,-1,-10,-5],[1,-1,8,8,8,-5,10,10,-9,-5],[-10,3,-2,-10,1,9,1,-10,-3,-4],[8,6,1,6,-3,-5,10,8,4,6],[-7,7,4,5,-6,2,8,-4,6,-9],[2,5,-1,6,10,1,1,-3,3,-6]], dtype = "uint32")#candidate|7489|(7, 10)|const|uint32
call_7487 = relay.TupleGetItem(func_4153_call(relay.reshape(const_7488.astype('float32'), [11, 7, 5]), relay.reshape(const_7489.astype('uint32'), [70,]), ), 3)
call_7490 = relay.TupleGetItem(func_4156_call(relay.reshape(const_7488.astype('float32'), [11, 7, 5]), relay.reshape(const_7489.astype('uint32'), [70,]), ), 3)
uop_7492 = relay.sqrt(uop_7482.astype('float32')) # shape=(4, 6, 1)
output = relay.Tuple([call_7487,const_7488,const_7489,uop_7492,])
output2 = relay.Tuple([call_7490,const_7488,const_7489,uop_7492,])
func_7495 = relay.Function([var_7481,], output)
mod['func_7495'] = func_7495
mod = relay.transform.InferType()(mod)
mutated_mod['func_7495'] = func_7495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7496 = relay.var("var_7496", dtype = "float64", shape = (4, 6, 1))#candidate|7496|(4, 6, 1)|var|float64
func_7495_call = mutated_mod.get_global_var('func_7495')
call_7497 = func_7495_call(var_7496)
output = call_7497
func_7498 = relay.Function([var_7496], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6023_call = mod.get_global_var('func_6023')
func_6024_call = mutated_mod.get_global_var('func_6024')
call_7574 = relay.TupleGetItem(func_6023_call(), 0)
call_7575 = relay.TupleGetItem(func_6024_call(), 0)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_7581 = func_4392_call()
call_7582 = func_4392_call()
uop_7586 = relay.rsqrt(call_7581.astype('float64')) # shape=(11, 4, 10)
uop_7588 = relay.rsqrt(call_7582.astype('float64')) # shape=(11, 4, 10)
output = relay.Tuple([call_7574,uop_7586,])
output2 = relay.Tuple([call_7575,uop_7588,])
func_7606 = relay.Function([], output)
mod['func_7606'] = func_7606
mod = relay.transform.InferType()(mod)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7606_call = mutated_mod.get_global_var('func_7606')
call_7607 = func_7606_call()
output = call_7607
func_7608 = relay.Function([], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7635 = relay.var("var_7635", dtype = "uint32", shape = (4, 5, 13))#candidate|7635|(4, 5, 13)|var|uint32
const_7636 = relay.const([[[9,-10,8,9,-9,-4,10,10,-8,2,-5,-3,-7],[5,6,5,5,8,-3,7,5,10,3,7,-6,-5],[10,-7,-9,-6,8,-8,7,4,3,1,-5,1,-3],[-3,-7,-2,-10,-3,5,-2,1,6,8,-7,5,6],[10,-2,-8,-4,5,2,-6,2,6,-6,6,4,-4]],[[-2,2,-1,-7,-5,-7,-10,4,-6,6,-4,4,9],[4,1,-8,-8,-2,1,1,-2,5,-1,-3,1,-8],[2,-7,-1,6,-10,6,-5,9,6,3,10,-2,-9],[1,6,7,1,-1,-6,4,-1,5,7,-3,-6,2],[4,-9,1,-3,9,-7,5,-3,-4,10,-7,3,-9]],[[-6,-3,-2,-6,-2,-3,6,-6,-4,-8,5,-4,-9],[-9,5,-1,4,-1,2,7,6,8,4,4,6,-5],[-6,-3,-1,9,2,-9,5,3,9,1,2,7,3],[3,5,-10,10,8,-8,7,9,6,-8,-1,-1,-2],[2,-8,-1,4,-1,-7,-10,2,1,9,5,-4,-6]],[[-10,9,-9,-1,6,10,-8,-6,1,9,5,-1,2],[2,1,-2,5,2,2,1,-7,-8,1,1,10,-3],[4,1,-2,-3,-1,5,-6,-9,2,4,10,-8,6],[1,1,-2,8,10,-8,-4,-8,6,5,4,-5,1],[-10,4,-8,1,7,-4,-7,-6,9,-6,8,-3,-5]]], dtype = "uint32")#candidate|7636|(4, 5, 13)|const|uint32
bop_7637 = relay.greater_equal(var_7635.astype('bool'), relay.reshape(const_7636.astype('bool'), relay.shape_of(var_7635))) # shape=(4, 5, 13)
output = bop_7637
output2 = bop_7637
func_7641 = relay.Function([var_7635,], output)
mod['func_7641'] = func_7641
mod = relay.transform.InferType()(mod)
mutated_mod['func_7641'] = func_7641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7642 = relay.var("var_7642", dtype = "uint32", shape = (4, 5, 13))#candidate|7642|(4, 5, 13)|var|uint32
func_7641_call = mutated_mod.get_global_var('func_7641')
call_7643 = func_7641_call(var_7642)
output = call_7643
func_7644 = relay.Function([var_7642], output)
mutated_mod['func_7644'] = func_7644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_7726 = relay.TupleGetItem(func_4835_call(), 6)
call_7727 = relay.TupleGetItem(func_4836_call(), 6)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_7729 = relay.TupleGetItem(func_6244_call(), 0)
call_7730 = relay.TupleGetItem(func_6246_call(), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2732_call = mutated_mod.get_global_var('func_2732')
var_7732 = relay.var("var_7732", dtype = "bool", shape = (1, 36))#candidate|7732|(1, 36)|var|bool
const_7733 = relay.const([True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False], dtype = "bool")#candidate|7733|(468,)|const|bool
call_7731 = relay.TupleGetItem(func_2728_call(relay.reshape(var_7732.astype('bool'), [1, 12, 3]), relay.reshape(const_7733.astype('bool'), [13, 12, 3]), relay.reshape(const_7733.astype('float32'), [13, 12, 3]), ), 4)
call_7734 = relay.TupleGetItem(func_2732_call(relay.reshape(var_7732.astype('bool'), [1, 12, 3]), relay.reshape(const_7733.astype('bool'), [13, 12, 3]), relay.reshape(const_7733.astype('float32'), [13, 12, 3]), ), 4)
output = relay.Tuple([call_7726,call_7729,call_7731,var_7732,const_7733,])
output2 = relay.Tuple([call_7727,call_7730,call_7734,var_7732,const_7733,])
func_7746 = relay.Function([var_7732,], output)
mod['func_7746'] = func_7746
mod = relay.transform.InferType()(mod)
var_7747 = relay.var("var_7747", dtype = "bool", shape = (1, 36))#candidate|7747|(1, 36)|var|bool
output = func_7746(var_7747)
func_7748 = relay.Function([var_7747], output)
mutated_mod['func_7748'] = func_7748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mod.get_global_var('func_6717')
func_6719_call = mutated_mod.get_global_var('func_6719')
call_7763 = func_6717_call()
call_7764 = func_6717_call()
func_6767_call = mod.get_global_var('func_6767')
func_6769_call = mutated_mod.get_global_var('func_6769')
call_7769 = relay.TupleGetItem(func_6767_call(), 0)
call_7770 = relay.TupleGetItem(func_6769_call(), 0)
func_6767_call = mod.get_global_var('func_6767')
func_6769_call = mutated_mod.get_global_var('func_6769')
call_7799 = relay.TupleGetItem(func_6767_call(), 0)
call_7800 = relay.TupleGetItem(func_6769_call(), 0)
func_2728_call = mod.get_global_var('func_2728')
func_2732_call = mutated_mod.get_global_var('func_2732')
const_7802 = relay.const([False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,True], dtype = "bool")#candidate|7802|(36,)|const|bool
const_7803 = relay.const([True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False], dtype = "bool")#candidate|7803|(468,)|const|bool
call_7801 = relay.TupleGetItem(func_2728_call(relay.reshape(const_7802.astype('bool'), [1, 12, 3]), relay.reshape(const_7803.astype('bool'), [13, 12, 3]), relay.reshape(const_7803.astype('float32'), [13, 12, 3]), ), 3)
call_7804 = relay.TupleGetItem(func_2732_call(relay.reshape(const_7802.astype('bool'), [1, 12, 3]), relay.reshape(const_7803.astype('bool'), [13, 12, 3]), relay.reshape(const_7803.astype('float32'), [13, 12, 3]), ), 3)
output = relay.Tuple([call_7763,call_7769,call_7799,call_7801,const_7802,const_7803,])
output2 = relay.Tuple([call_7764,call_7770,call_7800,call_7804,const_7802,const_7803,])
func_7815 = relay.Function([], output)
mod['func_7815'] = func_7815
mod = relay.transform.InferType()(mod)
output = func_7815()
func_7816 = relay.Function([], output)
mutated_mod['func_7816'] = func_7816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_7850 = relay.TupleGetItem(func_5585_call(), 0)
call_7851 = relay.TupleGetItem(func_5586_call(), 0)
func_7071_call = mod.get_global_var('func_7071')
func_7074_call = mutated_mod.get_global_var('func_7074')
var_7877 = relay.var("var_7877", dtype = "uint16", shape = ())#candidate|7877|()|var|uint16
call_7876 = relay.TupleGetItem(func_7071_call(relay.reshape(var_7877.astype('uint16'), [])), 0)
call_7878 = relay.TupleGetItem(func_7074_call(relay.reshape(var_7877.astype('uint16'), [])), 0)
output = relay.Tuple([call_7850,call_7876,var_7877,])
output2 = relay.Tuple([call_7851,call_7878,var_7877,])
func_7879 = relay.Function([var_7877,], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
var_7880 = relay.var("var_7880", dtype = "uint16", shape = ())#candidate|7880|()|var|uint16
output = func_7879(var_7880)
func_7881 = relay.Function([var_7880], output)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5434_call = mod.get_global_var('func_5434')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_7892 = func_5434_call()
call_7893 = func_5434_call()
output = relay.Tuple([call_7892,])
output2 = relay.Tuple([call_7893,])
func_7899 = relay.Function([], output)
mod['func_7899'] = func_7899
mod = relay.transform.InferType()(mod)
output = func_7899()
func_7900 = relay.Function([], output)
mutated_mod['func_7900'] = func_7900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_7916 = func_3976_call()
call_7917 = func_3976_call()
func_3394_call = mod.get_global_var('func_3394')
func_3395_call = mutated_mod.get_global_var('func_3395')
call_7969 = relay.TupleGetItem(func_3394_call(), 1)
call_7970 = relay.TupleGetItem(func_3395_call(), 1)
func_7899_call = mod.get_global_var('func_7899')
func_7900_call = mutated_mod.get_global_var('func_7900')
call_7979 = relay.TupleGetItem(func_7899_call(), 0)
call_7980 = relay.TupleGetItem(func_7900_call(), 0)
func_5858_call = mod.get_global_var('func_5858')
func_5860_call = mutated_mod.get_global_var('func_5860')
call_7991 = relay.TupleGetItem(func_5858_call(), 0)
call_7992 = relay.TupleGetItem(func_5860_call(), 0)
func_5189_call = mod.get_global_var('func_5189')
func_5192_call = mutated_mod.get_global_var('func_5192')
var_8006 = relay.var("var_8006", dtype = "float32", shape = (2400,))#candidate|8006|(2400,)|var|float32
call_8005 = relay.TupleGetItem(func_5189_call(relay.reshape(var_8006.astype('float32'), [2, 1200])), 2)
call_8007 = relay.TupleGetItem(func_5192_call(relay.reshape(var_8006.astype('float32'), [2, 1200])), 2)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_8019 = relay.TupleGetItem(func_5585_call(), 0)
call_8020 = relay.TupleGetItem(func_5586_call(), 0)
uop_8023 = relay.asinh(call_8005.astype('float32')) # shape=(2, 1200)
uop_8025 = relay.asinh(call_8007.astype('float32')) # shape=(2, 1200)
func_5236_call = mod.get_global_var('func_5236')
func_5238_call = mutated_mod.get_global_var('func_5238')
const_8027 = relay.const([4,-8,-4,3,2,-5,-6,9,-9,9,-6,-10,4,8,-1,-3,-7,-10,-6,8,-10,6,-5,-1,-2,10,1,-5,-1,1,9,7,-6,7,-9,-1,-10,-4,4,9,-10,-3,1,5,4,6,-1,7,1,9,-3,-10,7,-9,-1,-6,9,1,-1,4,4,7,6,-1,2,-8,10,7,3,-10,-6,5,-8,-5,-5,-2,-2,2,-7,-4,3,-3,1,-2,-7,7,9,-9,10,-3,5,-4,6,-5,-9,9,3,4,-3,-6,-9,2,-9,-2,-4,-4,10,-8,-3,9,-3,5,2,10,8,-4,3,4,8,10,10,-3,-3,-9,5,10,6,-6,7,-2,3,1,-5,-5,2,2,-1,-4,-7,1,-1,-10,8,-5,-1,7,6,-8,-4,1,10,8,10,4], dtype = "uint32")#candidate|8027|(154,)|const|uint32
call_8026 = relay.TupleGetItem(func_5236_call(relay.reshape(const_8027.astype('uint32'), [154,])), 0)
call_8028 = relay.TupleGetItem(func_5238_call(relay.reshape(const_8027.astype('uint32'), [154,])), 0)
output = relay.Tuple([call_7916,call_7969,call_7979,call_7991,var_8006,call_8019,uop_8023,call_8026,const_8027,])
output2 = relay.Tuple([call_7917,call_7970,call_7980,call_7992,var_8006,call_8020,uop_8025,call_8028,const_8027,])
func_8029 = relay.Function([var_8006,], output)
mod['func_8029'] = func_8029
mod = relay.transform.InferType()(mod)
var_8030 = relay.var("var_8030", dtype = "float32", shape = (2400,))#candidate|8030|(2400,)|var|float32
output = func_8029(var_8030)
func_8031 = relay.Function([var_8030], output)
mutated_mod['func_8031'] = func_8031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_8033 = relay.TupleGetItem(func_4250_call(), 0)
call_8034 = relay.TupleGetItem(func_4251_call(), 0)
func_3976_call = mod.get_global_var('func_3976')
func_3977_call = mutated_mod.get_global_var('func_3977')
call_8035 = func_3976_call()
call_8036 = func_3976_call()
output = relay.Tuple([call_8033,call_8035,])
output2 = relay.Tuple([call_8034,call_8036,])
func_8045 = relay.Function([], output)
mod['func_8045'] = func_8045
mod = relay.transform.InferType()(mod)
output = func_8045()
func_8046 = relay.Function([], output)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7029_call = mod.get_global_var('func_7029')
func_7031_call = mutated_mod.get_global_var('func_7031')
call_8061 = relay.TupleGetItem(func_7029_call(), 0)
call_8062 = relay.TupleGetItem(func_7031_call(), 0)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_8063 = relay.TupleGetItem(func_4250_call(), 0)
call_8064 = relay.TupleGetItem(func_4251_call(), 0)
output = relay.Tuple([call_8061,call_8063,])
output2 = relay.Tuple([call_8062,call_8064,])
func_8065 = relay.Function([], output)
mod['func_8065'] = func_8065
mod = relay.transform.InferType()(mod)
mutated_mod['func_8065'] = func_8065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8065_call = mutated_mod.get_global_var('func_8065')
call_8066 = func_8065_call()
output = call_8066
func_8067 = relay.Function([], output)
mutated_mod['func_8067'] = func_8067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4170_call = mutated_mod.get_global_var('func_4170')
call_8090 = func_4168_call()
call_8091 = func_4168_call()
func_211_call = mod.get_global_var('func_211')
func_215_call = mutated_mod.get_global_var('func_215')
const_8102 = relay.const(6, dtype = "uint16")#candidate|8102|()|const|uint16
const_8103 = relay.const([-8,-8,-10,-1,-4,-10,1,5], dtype = "uint16")#candidate|8103|(8,)|const|uint16
call_8101 = func_211_call(relay.reshape(const_8102.astype('uint16'), []), relay.reshape(const_8103.astype('uint16'), [1, 2, 4]), )
call_8104 = func_211_call(relay.reshape(const_8102.astype('uint16'), []), relay.reshape(const_8103.astype('uint16'), [1, 2, 4]), )
output = relay.Tuple([call_8090,call_8101,const_8102,const_8103,])
output2 = relay.Tuple([call_8091,call_8104,const_8102,const_8103,])
func_8109 = relay.Function([], output)
mod['func_8109'] = func_8109
mod = relay.transform.InferType()(mod)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8109_call = mutated_mod.get_global_var('func_8109')
call_8110 = func_8109_call()
output = call_8110
func_8111 = relay.Function([], output)
mutated_mod['func_8111'] = func_8111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4889_call = mod.get_global_var('func_4889')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_8122 = func_4889_call()
call_8123 = func_4889_call()
func_891_call = mod.get_global_var('func_891')
func_895_call = mutated_mod.get_global_var('func_895')
var_8127 = relay.var("var_8127", dtype = "uint16", shape = (8,))#candidate|8127|(8,)|var|uint16
var_8128 = relay.var("var_8128", dtype = "float64", shape = (256,))#candidate|8128|(256,)|var|float64
call_8126 = relay.TupleGetItem(func_891_call(relay.reshape(var_8127.astype('uint16'), [8,]), relay.reshape(var_8128.astype('float64'), [256,]), ), 6)
call_8129 = relay.TupleGetItem(func_895_call(relay.reshape(var_8127.astype('uint16'), [8,]), relay.reshape(var_8128.astype('float64'), [256,]), ), 6)
func_6767_call = mod.get_global_var('func_6767')
func_6769_call = mutated_mod.get_global_var('func_6769')
call_8132 = relay.TupleGetItem(func_6767_call(), 0)
call_8133 = relay.TupleGetItem(func_6769_call(), 0)
output = relay.Tuple([call_8122,call_8126,var_8127,var_8128,call_8132,])
output2 = relay.Tuple([call_8123,call_8129,var_8127,var_8128,call_8133,])
func_8143 = relay.Function([var_8127,var_8128,], output)
mod['func_8143'] = func_8143
mod = relay.transform.InferType()(mod)
mutated_mod['func_8143'] = func_8143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mutated_mod.get_global_var('func_8143')
var_8145 = relay.var("var_8145", dtype = "uint16", shape = (8,))#candidate|8145|(8,)|var|uint16
var_8146 = relay.var("var_8146", dtype = "float64", shape = (256,))#candidate|8146|(256,)|var|float64
call_8144 = func_8143_call(var_8145,var_8146,)
output = call_8144
func_8147 = relay.Function([var_8145,var_8146,], output)
mutated_mod['func_8147'] = func_8147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_8149 = func_3566_call()
call_8150 = func_3566_call()
func_398_call = mod.get_global_var('func_398')
func_400_call = mutated_mod.get_global_var('func_400')
var_8153 = relay.var("var_8153", dtype = "float32", shape = (1, 65))#candidate|8153|(1, 65)|var|float32
call_8152 = func_398_call(relay.reshape(var_8153.astype('float32'), [5, 1, 13]))
call_8154 = func_398_call(relay.reshape(var_8153.astype('float32'), [5, 1, 13]))
output = relay.Tuple([call_8149,call_8152,var_8153,])
output2 = relay.Tuple([call_8150,call_8154,var_8153,])
func_8155 = relay.Function([var_8153,], output)
mod['func_8155'] = func_8155
mod = relay.transform.InferType()(mod)
var_8156 = relay.var("var_8156", dtype = "float32", shape = (1, 65))#candidate|8156|(1, 65)|var|float32
output = func_8155(var_8156)
func_8157 = relay.Function([var_8156], output)
mutated_mod['func_8157'] = func_8157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_8189 = relay.TupleGetItem(func_3244_call(), 0)
call_8190 = relay.TupleGetItem(func_3245_call(), 0)
output = call_8189
output2 = call_8190
func_8191 = relay.Function([], output)
mod['func_8191'] = func_8191
mod = relay.transform.InferType()(mod)
output = func_8191()
func_8192 = relay.Function([], output)
mutated_mod['func_8192'] = func_8192
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8208 = relay.const([[[-1,-7,6,6,-10,-3,3],[10,9,4,7,-10,-1,-4],[-4,-6,-3,-8,10,-10,3],[9,1,3,-3,6,7,7],[-4,6,3,2,9,-4,-4],[-9,-8,-2,10,-6,4,-2],[-7,-1,-1,6,-9,7,8],[6,6,10,-6,2,8,6],[2,-5,9,8,2,-2,-4],[-10,-10,6,-2,9,-9,-3],[-9,-10,-8,-9,-10,-5,-5]],[[-5,5,3,10,1,-8,-1],[9,5,-2,2,2,7,10],[-6,10,-6,-5,-2,8,8],[-2,-4,-2,3,-8,3,6],[-3,3,-3,-9,10,6,8],[5,-4,6,10,-1,-1,5],[8,-8,-8,-10,-6,8,2],[5,-1,-7,-7,-5,2,-9],[-4,1,-6,2,-9,-4,1],[8,9,-3,-6,-5,7,2],[-5,-2,-3,-10,-1,-4,-7]],[[5,10,9,-9,-10,-7,9],[-7,1,10,-3,-8,4,7],[10,-6,-2,-10,-8,5,5],[-4,-6,-5,-7,4,-2,4],[4,3,7,-10,-8,2,-9],[-3,-1,-1,10,-5,3,-6],[2,2,-3,-1,-6,9,-1],[-9,10,-7,9,-7,5,5],[-9,-4,2,8,-3,-6,-2],[-3,8,5,6,-6,-1,-5],[4,8,-2,6,-8,-9,-5]],[[-10,-2,10,-6,7,-1,6],[-7,-10,-10,6,-1,-4,-9],[10,10,3,-2,1,1,10],[2,-4,5,-1,2,-7,-10],[-2,5,-4,-1,-4,-3,-2],[4,6,8,-8,4,7,5],[-9,-4,5,-2,-4,-8,-7],[-5,7,1,-9,3,-3,7],[5,6,6,-6,9,9,-10],[-2,-10,-7,10,2,8,-7],[4,-3,-5,-4,8,3,9]],[[-3,-3,-7,-5,1,4,-5],[1,-5,7,6,8,-4,-2],[-6,-10,-2,-5,7,-3,3],[2,-2,-1,7,-7,-9,-5],[-1,-1,9,-5,6,10,-8],[-2,2,1,8,-3,8,-8],[-4,2,-1,10,4,-9,-3],[-2,1,4,-7,-7,4,9],[-9,1,-1,7,-3,2,-4],[8,9,10,3,5,-8,-4],[-4,6,-2,-7,1,-5,-4]],[[-4,9,8,1,1,-2,3],[-1,-2,-9,-10,-7,-4,-4],[-5,-9,7,-10,-7,4,2],[-4,-6,1,10,8,1,-7],[-6,-5,9,9,-1,2,-7],[-5,10,5,2,6,5,2],[-9,-2,-9,-5,10,-4,-10],[-8,1,-7,3,-9,-7,-9],[-8,10,-9,4,1,6,-5],[4,-5,4,8,-8,-5,-5],[3,7,-4,-3,-3,-1,-8]],[[8,7,9,-4,9,6,2],[4,6,-3,1,1,-2,-10],[-9,-2,-2,-8,-1,3,6],[-5,1,-10,-9,1,4,-1],[-8,-1,-9,-5,2,-3,-8],[2,8,-4,1,7,9,-9],[1,9,-2,6,3,-4,5],[-9,6,6,-1,2,-6,-9],[8,-8,-7,-8,-7,-10,-8],[-7,-4,5,-8,-1,-3,10],[-5,-4,6,-1,7,3,4]]], dtype = "int16")#candidate|8208|(7, 11, 7)|const|int16
var_8209 = relay.var("var_8209", dtype = "int16", shape = (7, 11, 7))#candidate|8209|(7, 11, 7)|var|int16
bop_8210 = relay.bitwise_and(const_8208.astype('int16'), relay.reshape(var_8209.astype('int16'), relay.shape_of(const_8208))) # shape=(7, 11, 7)
uop_8220 = relay.sigmoid(bop_8210.astype('float64')) # shape=(7, 11, 7)
func_6124_call = mod.get_global_var('func_6124')
func_6128_call = mutated_mod.get_global_var('func_6128')
const_8223 = relay.const(-6, dtype = "uint16")#candidate|8223|()|const|uint16
var_8224 = relay.var("var_8224", dtype = "uint8", shape = (1, 560))#candidate|8224|(1, 560)|var|uint8
call_8222 = relay.TupleGetItem(func_6124_call(relay.reshape(const_8223.astype('uint16'), []), relay.reshape(var_8224.astype('uint8'), [560,]), ), 8)
call_8225 = relay.TupleGetItem(func_6128_call(relay.reshape(const_8223.astype('uint16'), []), relay.reshape(var_8224.astype('uint8'), [560,]), ), 8)
output = relay.Tuple([uop_8220,call_8222,const_8223,var_8224,])
output2 = relay.Tuple([uop_8220,call_8225,const_8223,var_8224,])
func_8237 = relay.Function([var_8209,var_8224,], output)
mod['func_8237'] = func_8237
mod = relay.transform.InferType()(mod)
mutated_mod['func_8237'] = func_8237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8237_call = mutated_mod.get_global_var('func_8237')
var_8239 = relay.var("var_8239", dtype = "int16", shape = (7, 11, 7))#candidate|8239|(7, 11, 7)|var|int16
var_8240 = relay.var("var_8240", dtype = "uint8", shape = (1, 560))#candidate|8240|(1, 560)|var|uint8
call_8238 = func_8237_call(var_8239,var_8240,)
output = call_8238
func_8241 = relay.Function([var_8239,var_8240,], output)
mutated_mod['func_8241'] = func_8241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_8251 = relay.TupleGetItem(func_4835_call(), 0)
call_8252 = relay.TupleGetItem(func_4836_call(), 0)
func_5458_call = mod.get_global_var('func_5458')
func_5461_call = mutated_mod.get_global_var('func_5461')
const_8264 = relay.const([-0.913939,-1.146486,4.286760,6.182215,-7.228656,2.873571,-1.576463,-0.588635,-1.105103,2.538274,0.288465,-6.217019,-4.841058,2.299537,-2.445859,2.159517,-8.584304,-5.154787,3.537531,-3.321732,-1.174442,2.271074,-2.398802,-9.032822,9.278116,1.495919,-0.995627,9.273249,-9.213242,-4.257762,6.601757,3.275461,1.942106,7.468792,-0.327596,-9.548328,3.350665,6.344793,2.493288,2.047853,1.994978,-6.827482,-2.251811,-9.444102,-6.472488,5.634161,4.626858,7.337695,-6.464389,6.328987,8.651352,3.356653,-1.741957,-3.501823,9.451111,-3.875141,-8.252724,-3.862398,-7.552946,7.117145,6.712719,-4.389252,-5.519903,-7.499636,-2.749296,4.935240,1.321440,2.899322,3.919720,-0.464782,2.799319,4.242392,6.964672,-1.756182,-5.441276,-6.434528,0.003562,-8.091810,2.844018,-2.170397,4.027341,3.232870,8.820670,-6.172168,-6.942300,6.714641,3.651404,9.165654,-7.854144,7.889529,-6.156543,-1.594638,-2.892124,9.672132,6.656825,-3.039839,3.938732,-4.290938,-1.360436,8.742315,6.891217,-9.075996,8.659916,0.152770,1.153005,-8.437348,-4.532549,2.835011,-3.379168,-3.182485,1.920605,-6.627285,-3.470152,2.433420,8.250433,3.255230,0.193368,2.526273,-8.000459,-5.313181,4.780905,5.925186,2.599045,5.973752,5.265391,-8.545579,-0.032236,5.334452,0.659057,6.963997,8.283099,6.808726,-4.257990,3.850222,5.041713,-3.618391,-5.020435,-6.909922,8.269252,9.649130,-5.109858,0.891076,-4.158838,2.900324,5.662064,-0.301521,-1.500098,3.436438,6.236873,3.400341,-2.790074,5.405065,1.552042,-1.610756,6.576030,1.736272,7.624174,-2.916756,7.038378,0.596955,-0.511143,1.742296,9.839812,9.334588,0.351959,0.434774,3.288016,-8.497479,2.960661,7.204690,5.739568,-7.938782,7.438743,-1.164171,-4.755300,8.271296,-3.832487,7.755158,9.262857,-3.218672,9.073791,-4.281573,-6.623912,8.533830,6.486343,2.027665,9.740683,-6.277234,-0.463554,8.185149,-1.272766,-5.354137,4.275394,7.908580,-2.966099,1.097765,2.976560,-4.162914,4.104723,6.663808,-9.865780,5.483120,-4.081562,-4.292429,-4.432420,-0.143270,-9.802863,7.545072,-3.754557,-7.639825,-5.241594,1.858899,5.785168,-9.379782,6.920256,-3.096058,-2.000488,-9.022475,5.881272,0.878826,-1.905386,-4.614892,-0.209439,0.566811,-7.504853,-5.134970,9.738609,2.377762,1.113098,1.201671,2.433620,5.994136,0.542960,8.341917,-2.856122,2.504644,-7.971550,-0.676239,4.218000,2.234404,0.042945,2.620274,7.821476,-8.352450,-8.951777,-6.894712,5.190707,4.317848,6.026415,7.644567,2.368384,-0.413882,-7.496827,3.597364,-1.101951,-6.983999,-6.618084,8.155894,-6.166273,-6.046917,4.467189,-4.409116,-2.075497,-8.498211,-6.025317,-0.433526,-4.829100,8.849096,6.270211,-2.313990,-4.617739,4.583460,-8.398284,-0.644698,-1.361795,6.791501,4.344632,-1.827238,5.710279,8.049126,-7.180921,-6.676684,5.476252,-0.196834,-1.288613,-8.696037,6.578046,8.765254,-9.258622,-5.459917,-6.453156,8.905535,5.289624,-3.492256,-3.512817,4.151354,6.808567,0.240922,3.708788,4.182971,-1.383193,-5.983826,6.067102,-4.908717,-0.395618,0.796396,-4.272398,-6.177539,-7.010247,7.996509,9.494004,-9.463476,-1.205777,4.840095,6.657418,0.439241,-1.935641,6.268409,5.515558,-3.727175,-7.911245,-0.442172,-8.057439,-7.991400,7.458589,6.203115,-5.636928,8.018157,9.941870,5.918139,7.294281,-5.324001,-1.114547,-3.661596,0.989769,8.292442,-2.030562,5.007375,6.632973,1.063405,5.608414,3.763551,-0.980395,-7.897729,3.638512,-4.303814,-3.055781,-9.571691,-6.250743,-2.437361,5.419576,1.926453,9.357935,-6.442429,0.821328,-4.324097,-2.280184,-9.073089,-8.139399,-6.384504,-9.135800,4.138642,-8.311472,-0.165619,-1.452291,-3.258736,-6.142193,8.434588,-2.335131,-7.195500,1.783285,-1.468810,-3.483472,7.062857,4.050336,-2.047435,-6.209219,-0.568979,-3.560649,-6.886290,7.249242,-5.626845,-3.932971,-1.777717,-7.736959,-9.604404,4.519639,7.850666,-0.399202,-3.380460,8.814394,8.122030,-4.525812,-6.953401,-4.641440,3.486467,0.668337,-3.835226,5.827727,5.271335,8.734028,-4.725396,-7.214267,2.667053,-7.888693,2.486493,-1.218057,9.117805,-7.006366,1.132413,-0.137196,7.952445,9.674921,-5.369475,-7.118330,-6.657960,1.171121,-9.849371,-2.980581,-5.662788,3.099844,-0.852878,5.458748,0.745881,3.304519,-2.772864,0.657553,-6.587371,7.617160,-1.214979,-0.568242,-0.317440,0.980279,6.656364,-6.981129,-4.340089,6.445071,3.605917,-8.686936,7.015906,-1.496343,-5.241948,5.414019,-0.984912,7.377451,-5.789110,8.893583,7.141978,1.904985,-9.085123,5.282348,5.046124,-5.441299,5.657455,9.506339,-9.105089,-8.178213,-5.603575,4.594573,3.526787,1.955183,-6.988876,-8.330662,3.690486,5.470566,1.472225,-4.293629,3.382857,3.070207,1.525916,7.303311,-1.404838,-4.106372,6.763244,5.459194,-9.794915,-0.322682,9.603046,8.874115,-4.258732,7.557904,6.851609,3.956525,-9.347286,2.278282,8.055424,7.505158,-9.178100,-4.652753,-3.946843,-7.392032,-0.538282,8.549210,9.747670,-1.952345,5.693976,1.018103,2.913100,-4.623752,-9.717561,-7.975463,-2.323236,6.315597,9.956835,5.266561,-6.920468,0.891809,-2.346799,-4.310110,7.101415,-0.032568,-9.800819,4.887994,-6.778624,8.270736,7.960457,-8.295664,-3.489957,-8.265161,-6.699423,8.416093,-6.741890,6.694954,5.871022,-0.278649,7.667098,-7.527151,8.263067,6.229190,4.450815,-9.288691,-7.080802,-7.728140,-8.077071,8.353469,-9.102119,1.197299,4.815893,-0.618172,7.884536,9.786450,3.711071,-3.390557,5.284659,-5.217050,1.183166,8.525170,2.750439,-7.910326,-1.813532,-3.195686,-3.994332,3.236388,2.731945,-9.791497,4.878050,5.780407,9.688898,1.754088,1.861358,9.698572,-0.931368,7.354991,8.046871,2.674043,7.385342,-8.346309,-7.066788,8.567038,2.853727,-5.352256,6.793514,1.445139,8.646554,4.189527,-6.929916,1.741460,9.174903,6.648017,-0.302943,-9.288538,-5.128587,8.199095,0.940784,-6.200943,3.658436,4.802107,-7.132097,6.574260,8.046219,8.575422,-8.469943,-9.485573,9.932023,-7.353314,-2.655200,9.914627,4.012930,9.478244,9.918033,-9.178360,-6.555760,5.259076,-3.601857,9.258144,6.813716,-8.015560,1.385226,2.946930,-4.693447,8.447221,-9.178598,0.199583,1.539792,-9.761801,2.159468,7.652884,-8.951823,-5.132464,-5.048777,-1.909481,-4.996198,4.944704,0.034709,-2.082775,-5.422915,4.797800,-7.346340,-4.553842,0.039491,-9.285097,5.653193,3.205823,-5.375461,7.421722,8.359026,-2.335475,-4.179519,8.417786,-9.634300,6.161349,2.477300,-6.418380,0.570707,-4.218692,6.023305,0.324198,-5.061874,4.409985,1.139324,3.708738,-8.462464,-9.978081,4.533457,7.323734,-4.765036,-3.846019,8.435047,6.049772,-3.039533,0.009201,3.297403,-8.926395,4.113531,-4.320471,-7.638290,8.369873,-3.372945,5.884902,-1.303869,6.820171,5.906739], dtype = "float64")#candidate|8264|(672,)|const|float64
call_8263 = func_5458_call(relay.reshape(const_8264.astype('float64'), [16, 3, 14]))
call_8265 = func_5458_call(relay.reshape(const_8264.astype('float64'), [16, 3, 14]))
func_5298_call = mod.get_global_var('func_5298')
func_5302_call = mutated_mod.get_global_var('func_5302')
var_8281 = relay.var("var_8281", dtype = "uint16", shape = (8,))#candidate|8281|(8,)|var|uint16
const_8282 = relay.const([-4.641167,2.218857,-7.160514,8.686935,-5.283902,8.532851,7.759005,0.678344,1.652171,4.537044,-5.694767,-7.950908,-2.765904,-8.965528,8.939770,2.348270,-8.178712,8.472519,3.732545,-2.037753,-0.305966,3.899821,7.297655,-6.950913,4.158413,8.503391,5.799374,-5.597389,-1.657985,-9.610825,-6.282627,3.446732,-3.667070,-8.745000,-6.165989,8.492932,-8.785288,-4.096523,4.398313,-8.073811,7.511038,-9.414570,9.987628,-5.920735,9.380766,9.240344,-9.609395,4.441573,-1.777108,1.942942,-9.807010,3.218294,5.736527,-3.875805,-2.007006,9.782845,6.231006,3.912328,4.333766,-9.202611,-4.759910,-8.139075,6.350644,9.083299,1.813612,-5.840795,5.574469,-1.401450,5.646889,6.979327,5.955581,3.819384,-8.347753,-4.185887,-4.539625,-2.050234,-0.940637,-4.592141,-1.967265,4.288416,-5.540905,1.734629,-9.689571,-2.851009,8.275381,5.641295,-0.326942,2.006428,0.915203,-1.050578,-2.550994,-9.742155,-2.287079,-9.065016,-5.359847,-1.080203,4.830298,-3.137971,-9.241307,-6.663214,-0.388215,-9.329357,-7.673962,0.544982,3.811878,-1.470128,3.222413,8.805185,6.606274,-2.887313,0.942287,-2.224553,5.805270,-1.539881,8.211373,3.851074,1.687902,-1.087686,8.135994,3.242846,-4.445577,-5.287335,6.778154,0.657369,-2.899896,-6.669854,-9.846291,-9.592161,-9.048797,1.684864,5.738050,2.076832,7.252482,6.387146,-5.812789,3.794752,-3.863096,-7.313341,6.261299,-0.940336,9.653055,-2.278081,8.254376,4.635467,1.957151,9.367027,0.719285,3.107724,-2.534688,2.538394,-3.397957,2.434150,4.800852,-0.303171,1.671065,-1.162273,9.681101,4.688673,8.410027,-0.312132,2.073597,-5.600539,5.688049,3.103337,-7.391009,-5.660293,-0.962751,0.738264,4.025196,-4.646190,-7.821793,0.976931,0.443466,-7.534647,-0.836632,-3.099585,-2.828813,-1.884161,-6.047757,0.876768,3.742158,0.940135,-4.678522,6.956693,-9.520436,-7.884115,-3.151070,6.312451,-2.597101,-6.624812,-0.658301,6.052530,7.659459,-9.235298,5.469687,-1.659249,3.873182,-4.983669,-2.763177,6.500216,-5.065649,0.085713,-0.508761,-1.671360,-2.934028,9.951862,1.007195,1.436759,-0.904390,7.862492,-2.328704,-8.469428,9.274348,7.416976,-1.859048,0.505671,-7.811921,4.280598,5.497596,-4.762654,0.152657,-9.660455,-0.849201,6.858400,-4.626522,-6.142451,2.421449,-3.750103,-6.864165,-8.058343,6.716840,0.749791,8.693562,-5.130287,-3.616127,-9.472470,-6.261696,7.264272,2.341883,0.969757,0.623071,-4.582014,9.942925,0.242467,-8.486408,-8.372980,1.596899,3.631817,8.284521,9.389229,-2.645054,6.186877,3.168850,6.517453,5.145521,-4.123235], dtype = "float64")#candidate|8282|(256,)|const|float64
call_8280 = relay.TupleGetItem(func_5298_call(relay.reshape(var_8281.astype('uint16'), [8,]), relay.reshape(const_8282.astype('float64'), [256,]), relay.reshape(const_8282.astype('int64'), [4, 16, 4]), ), 2)
call_8283 = relay.TupleGetItem(func_5302_call(relay.reshape(var_8281.astype('uint16'), [8,]), relay.reshape(const_8282.astype('float64'), [256,]), relay.reshape(const_8282.astype('int64'), [4, 16, 4]), ), 2)
func_5087_call = mod.get_global_var('func_5087')
func_5090_call = mutated_mod.get_global_var('func_5090')
const_8292 = relay.const([-6,-1,-7,-7,-6,9,7,7,2,-7,1,-3,9,-1,8,-10,-1,1,5,6,-8,1,8,9,5,1,1,6,5,8,1,8,-1,7,-6,-7,-7,2,-6,5,7,7,10,-8,3,8,6,-6,-4,-2,6,-5,-8,8,9,5,-1,-4,10,-8,1,-8,2,5,7,-6,-9,-9,7,-10,3,2,10,5,-1,-4,10,1,-6,-8,4,-7,3,9,-3,8,-6,2,-10,7,-9,-6,-1,-1,-3,-1,2,-9,3,-7,-7,-6,7,1,4,-1,-7,4,-5,-6,-3,-5,-4,-2,-4,-7,5,-6,-9,2,-2,-6,1,10,4,-4,2,4,6,5,8,-5,-3,-9,-7,-6,5,10,4,2,6,7,-7,-6,-10,5,10,10,10,-8,10,5,-9,-3,-5,-1,1,10,10,3,6,-5,-9,-2,6,-3,7,2,-5,7,10,-2,5,-10,-10,2,-10,-4,3,7,7,6,10,-8,-4,4,4,-4,-1,-3,-7,9,-3,6,9,7,-3,-10,2,-7,-4,10,-8,6,-1,2,-5,5,4,-5,-5,10,5,3,7,-2,3,-8,8,-2,-2,-5,5,-6,1,3,4,-6,-3,-6,8,-3,2,2,5,7,8,6,-3,-2,4,2,9,8,-4,-4,4,3,-9,6,-7,-3,6,-8,-4,1,6,-7,-1,8,-1,10,-10,-5,-6,-4,3,-9,7,-6,-8,8,-2,8,1,-9,-8,2,-1,-6,-8,-1,-8,-10,8,7,-4,-9,-1,10,-2,-8,7,8,-7,-5,7,-5,-6,1,2,-9,4,-3,-6,-6,-1,1,-4,-7,5,7,-10,6,-9,4,-6,8,-3,-2,-5,9,5,-7,9,4,-8,4,5,-7,-9,-6,4,-5,-6,-7,-7,8,-4,-5,-8,5,-9,-5,-2,-1,-3,-6,-2,5,-9,-10,9,-10,-10,6,-5,-4,-3,-1,1,-6,8,3,-2,-7,-3,7,4,6,4,9,-4,-6,-2,-2,6,9,-9,-3,1,1,-6,5,-8,3,3,-1,-7,-6,3,-1,-5,2,-3,4,-6,7,5,-3,4,-5,10,-4,5,5,9,5,-8,-7,-4,4,-7,-4,-4,-5,3,-5,-8,-7,10,-8,-9,2,-4,6,-1,-9,-1,3,10,-6,-2,5,10,2,5,9,-7,-9,10,-8,-8,-1,2,6,6,4,-3,-7,-4,-2,-10,-2,2,7,-9,-4,4,7,3,-7,-7,8,-1,-2,-5,1,-5,-2,6,-8,-6,3,-10,-3,6,-4,10,-1,-7,5,7,-7,1,-9,1,-4,-2,7,9,-4,2,6,-10,-5,1,-6,6,-3,7,3,-1,-6,-6,-4,-5,-10,8,10,-4,-4,-3,-5,6,-5,2,-2,9,-6,3,9,-2,-4,4,8,-9,5,5,-10,-8,5,-4,-2,6,-7,-10,6,7,2,-6,-9,5,4,4,10,-8,3,-1,-7,3,-6,2,4,-4,1,7,4,6,9], dtype = "uint8")#candidate|8292|(560,)|const|uint8
call_8291 = func_5087_call(relay.reshape(const_8292.astype('uint8'), [14, 4, 10]), relay.reshape(const_8292.astype('uint8'), [14, 4, 10]), )
call_8293 = func_5087_call(relay.reshape(const_8292.astype('uint8'), [14, 4, 10]), relay.reshape(const_8292.astype('uint8'), [14, 4, 10]), )
var_8294 = relay.var("var_8294", dtype = "bool", shape = (16, 3, 14))#candidate|8294|(16, 3, 14)|var|bool
bop_8295 = relay.floor_mod(call_8263.astype('float64'), relay.reshape(var_8294.astype('float64'), relay.shape_of(call_8263))) # shape=(16, 3, 14)
bop_8298 = relay.floor_mod(call_8265.astype('float64'), relay.reshape(var_8294.astype('float64'), relay.shape_of(call_8265))) # shape=(16, 3, 14)
uop_8306 = relay.atan(const_8264.astype('float64')) # shape=(672,)
func_7815_call = mod.get_global_var('func_7815')
func_7816_call = mutated_mod.get_global_var('func_7816')
call_8314 = relay.TupleGetItem(func_7815_call(), 2)
call_8315 = relay.TupleGetItem(func_7816_call(), 2)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_8321 = func_4313_call()
call_8322 = func_4313_call()
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_8330 = func_4392_call()
call_8331 = func_4392_call()
func_4466_call = mod.get_global_var('func_4466')
func_4470_call = mutated_mod.get_global_var('func_4470')
var_8335 = relay.var("var_8335", dtype = "int32", shape = (495,))#candidate|8335|(495,)|var|int32
var_8336 = relay.var("var_8336", dtype = "uint32", shape = (154, 1))#candidate|8336|(154, 1)|var|uint32
call_8334 = relay.TupleGetItem(func_4466_call(relay.reshape(var_8335.astype('int32'), [495,]), relay.reshape(var_8336.astype('uint32'), [154,]), ), 0)
call_8337 = relay.TupleGetItem(func_4470_call(relay.reshape(var_8335.astype('int32'), [495,]), relay.reshape(var_8336.astype('uint32'), [154,]), ), 0)
bop_8358 = relay.subtract(bop_8295.astype('uint16'), relay.reshape(const_8264.astype('uint16'), relay.shape_of(bop_8295))) # shape=(16, 3, 14)
bop_8361 = relay.subtract(bop_8298.astype('uint16'), relay.reshape(const_8264.astype('uint16'), relay.shape_of(bop_8298))) # shape=(16, 3, 14)
func_1679_call = mod.get_global_var('func_1679')
func_1682_call = mutated_mod.get_global_var('func_1682')
var_8364 = relay.var("var_8364", dtype = "float64", shape = (819,))#candidate|8364|(819,)|var|float64
call_8363 = func_1679_call(relay.reshape(var_8364.astype('float64'), [13, 7, 9]))
call_8365 = func_1679_call(relay.reshape(var_8364.astype('float64'), [13, 7, 9]))
uop_8369 = relay.sin(var_8336.astype('float32')) # shape=(154, 1)
bop_8375 = relay.greater(uop_8369.astype('bool'), var_8364.astype('bool')) # shape=(154, 819)
output = relay.Tuple([call_8251,call_8280,var_8281,const_8282,call_8291,const_8292,uop_8306,call_8314,call_8321,call_8330,call_8334,var_8335,bop_8358,call_8363,bop_8375,])
output2 = relay.Tuple([call_8252,call_8283,var_8281,const_8282,call_8293,const_8292,uop_8306,call_8315,call_8322,call_8331,call_8337,var_8335,bop_8361,call_8365,bop_8375,])
func_8393 = relay.Function([var_8281,var_8294,var_8335,var_8336,var_8364,], output)
mod['func_8393'] = func_8393
mod = relay.transform.InferType()(mod)
var_8394 = relay.var("var_8394", dtype = "uint16", shape = (8,))#candidate|8394|(8,)|var|uint16
var_8395 = relay.var("var_8395", dtype = "bool", shape = (16, 3, 14))#candidate|8395|(16, 3, 14)|var|bool
var_8396 = relay.var("var_8396", dtype = "int32", shape = (495,))#candidate|8396|(495,)|var|int32
var_8397 = relay.var("var_8397", dtype = "uint32", shape = (154, 1))#candidate|8397|(154, 1)|var|uint32
var_8398 = relay.var("var_8398", dtype = "float64", shape = (819,))#candidate|8398|(819,)|var|float64
output = func_8393(var_8394,var_8395,var_8396,var_8397,var_8398,)
func_8399 = relay.Function([var_8394,var_8395,var_8396,var_8397,var_8398,], output)
mutated_mod['func_8399'] = func_8399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7299_call = mod.get_global_var('func_7299')
func_7301_call = mutated_mod.get_global_var('func_7301')
call_8431 = relay.TupleGetItem(func_7299_call(), 1)
call_8432 = relay.TupleGetItem(func_7301_call(), 1)
var_8450 = relay.var("var_8450", dtype = "float64", shape = (16, 3, 14))#candidate|8450|(16, 3, 14)|var|float64
bop_8451 = relay.mod(call_8431.astype('float64'), relay.reshape(var_8450.astype('float64'), relay.shape_of(call_8431))) # shape=(16, 3, 14)
bop_8454 = relay.mod(call_8432.astype('float64'), relay.reshape(var_8450.astype('float64'), relay.shape_of(call_8432))) # shape=(16, 3, 14)
output = relay.Tuple([bop_8451,])
output2 = relay.Tuple([bop_8454,])
func_8456 = relay.Function([var_8450,], output)
mod['func_8456'] = func_8456
mod = relay.transform.InferType()(mod)
var_8457 = relay.var("var_8457", dtype = "float64", shape = (16, 3, 14))#candidate|8457|(16, 3, 14)|var|float64
output = func_8456(var_8457)
func_8458 = relay.Function([var_8457], output)
mutated_mod['func_8458'] = func_8458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_8481 = relay.TupleGetItem(func_6674_call(), 0)
call_8482 = relay.TupleGetItem(func_6676_call(), 0)
func_3681_call = mod.get_global_var('func_3681')
func_3685_call = mutated_mod.get_global_var('func_3685')
const_8490 = relay.const([-6.924529,-9.889611,5.507697,2.614557,8.305326,-1.886767,-6.058551,-3.235278,9.753680,0.452784,3.651940,4.549259,-9.561518,-0.060183,-9.369711,-3.124735,3.259241,4.692888,3.328344,-7.182165,1.916918,7.876191,0.736221,9.595253,-4.521320,9.131719,-5.783227,1.394940,-9.116523,-5.746409,8.971926,2.459832,-5.397688,9.813120,2.281808,-9.773760,2.144739,-5.194294,1.314042,8.365164,6.767294,0.956641,1.795917,-1.218635,-0.568942,1.218859,3.021236,3.575151,0.229510,-0.155596,-9.402190,-4.034584,-7.765914,9.946717,-3.625914,-3.843168,7.974871,-6.016635,-3.036367,-6.329181,4.402443,-5.182800,-0.373004,-3.968968,3.561893,-0.930493,1.010539,9.586479,4.460591,8.609641,7.671378,8.691763,4.364069,8.286015,-5.450357,7.887207,2.468471,2.961449,2.923564,-9.593984,-3.858195,-7.196556,3.165758,7.138008,-8.644332,-5.587064,-7.969737,-0.318878,0.824940,-2.528363,1.521318,-4.731729,0.719336,-9.262560,5.868481,9.162538,1.728678,-8.910129,8.166046], dtype = "float64")#candidate|8490|(99,)|const|float64
var_8491 = relay.var("var_8491", dtype = "float32", shape = (2400,))#candidate|8491|(2400,)|var|float32
const_8492 = relay.const(6, dtype = "uint16")#candidate|8492|()|const|uint16
call_8489 = relay.TupleGetItem(func_3681_call(relay.reshape(const_8490.astype('float64'), [11, 1, 9]), relay.reshape(var_8491.astype('float32'), [2400,]), relay.reshape(const_8492.astype('uint16'), []), ), 1)
call_8493 = relay.TupleGetItem(func_3685_call(relay.reshape(const_8490.astype('float64'), [11, 1, 9]), relay.reshape(var_8491.astype('float32'), [2400,]), relay.reshape(const_8492.astype('uint16'), []), ), 1)
output = relay.Tuple([call_8481,call_8489,const_8490,var_8491,const_8492,])
output2 = relay.Tuple([call_8482,call_8493,const_8490,var_8491,const_8492,])
func_8501 = relay.Function([var_8491,], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
mutated_mod['func_8501'] = func_8501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8502 = relay.var("var_8502", dtype = "float32", shape = (2400,))#candidate|8502|(2400,)|var|float32
func_8501_call = mutated_mod.get_global_var('func_8501')
call_8503 = func_8501_call(var_8502)
output = call_8503
func_8504 = relay.Function([var_8502], output)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8509 = relay.var("var_8509", dtype = "float64", shape = (10, 16, 12))#candidate|8509|(10, 16, 12)|var|float64
uop_8510 = relay.acosh(var_8509.astype('float64')) # shape=(10, 16, 12)
bop_8525 = relay.logical_and(uop_8510.astype('bool'), relay.reshape(var_8509.astype('bool'), relay.shape_of(uop_8510))) # shape=(10, 16, 12)
uop_8532 = relay.log2(bop_8525.astype('float64')) # shape=(10, 16, 12)
bop_8534 = relay.not_equal(uop_8532.astype('bool'), relay.reshape(bop_8525.astype('bool'), relay.shape_of(uop_8532))) # shape=(10, 16, 12)
output = relay.Tuple([bop_8534,])
output2 = relay.Tuple([bop_8534,])
func_8537 = relay.Function([var_8509,], output)
mod['func_8537'] = func_8537
mod = relay.transform.InferType()(mod)
var_8538 = relay.var("var_8538", dtype = "float64", shape = (10, 16, 12))#candidate|8538|(10, 16, 12)|var|float64
output = func_8537(var_8538)
func_8539 = relay.Function([var_8538], output)
mutated_mod['func_8539'] = func_8539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5337_call = mod.get_global_var('func_5337')
func_5339_call = mutated_mod.get_global_var('func_5339')
call_8541 = func_5337_call()
call_8542 = func_5337_call()
output = relay.Tuple([call_8541,])
output2 = relay.Tuple([call_8542,])
func_8544 = relay.Function([], output)
mod['func_8544'] = func_8544
mod = relay.transform.InferType()(mod)
output = func_8544()
func_8545 = relay.Function([], output)
mutated_mod['func_8545'] = func_8545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mod.get_global_var('func_6717')
func_6719_call = mutated_mod.get_global_var('func_6719')
call_8685 = func_6717_call()
call_8686 = func_6717_call()
uop_8707 = relay.log2(call_8685.astype('float64')) # shape=(16, 3, 14)
uop_8709 = relay.log2(call_8686.astype('float64')) # shape=(16, 3, 14)
output = uop_8707
output2 = uop_8709
func_8711 = relay.Function([], output)
mod['func_8711'] = func_8711
mod = relay.transform.InferType()(mod)
output = func_8711()
func_8712 = relay.Function([], output)
mutated_mod['func_8712'] = func_8712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_8748 = relay.TupleGetItem(func_6674_call(), 0)
call_8749 = relay.TupleGetItem(func_6676_call(), 0)
uop_8750 = relay.acos(call_8748.astype('float32')) # shape=(16, 3, 14)
uop_8752 = relay.acos(call_8749.astype('float32')) # shape=(16, 3, 14)
func_3212_call = mod.get_global_var('func_3212')
func_3216_call = mutated_mod.get_global_var('func_3216')
var_8758 = relay.var("var_8758", dtype = "float64", shape = (1008,))#candidate|8758|(1008,)|var|float64
call_8757 = func_3212_call(relay.reshape(var_8758.astype('float64'), [6, 12, 14]), relay.reshape(var_8758.astype('float64'), [6, 12, 14]), )
call_8759 = func_3212_call(relay.reshape(var_8758.astype('float64'), [6, 12, 14]), relay.reshape(var_8758.astype('float64'), [6, 12, 14]), )
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_8782 = relay.TupleGetItem(func_4250_call(), 0)
call_8783 = relay.TupleGetItem(func_4251_call(), 0)
bop_8795 = relay.less_equal(call_8757.astype('bool'), relay.reshape(var_8758.astype('bool'), relay.shape_of(call_8757))) # shape=(6, 12, 14)
bop_8798 = relay.less_equal(call_8759.astype('bool'), relay.reshape(var_8758.astype('bool'), relay.shape_of(call_8759))) # shape=(6, 12, 14)
uop_8801 = relay.cos(bop_8795.astype('float32')) # shape=(6, 12, 14)
uop_8803 = relay.cos(bop_8798.astype('float32')) # shape=(6, 12, 14)
func_5298_call = mod.get_global_var('func_5298')
func_5302_call = mutated_mod.get_global_var('func_5302')
var_8805 = relay.var("var_8805", dtype = "uint16", shape = (8,))#candidate|8805|(8,)|var|uint16
const_8806 = relay.const([2.877727,-9.618484,1.760315,8.443637,-1.943726,-7.329594,9.650749,0.266375,-4.566579,0.659701,0.348978,-1.033156,-0.503044,-6.563053,-9.502555,-9.331514,9.121283,-0.769054,1.997314,8.667213,-1.488219,-4.148764,8.390310,-6.815506,-3.172161,6.321943,3.742979,-5.028578,-7.757252,5.995265,5.244143,-3.211952,-2.870571,5.472100,-0.891901,3.364990,8.698676,-9.563522,-9.968874,-8.340034,-0.281358,-0.075219,9.597482,3.867703,6.594530,-2.778022,-4.256757,5.142423,-4.838486,-3.156085,8.050061,9.803680,-9.579434,-9.429149,-1.776259,3.821630,-0.276599,-4.107741,-8.396056,4.695108,0.126610,1.757640,-7.238547,-5.376909,2.402524,3.651599,4.506340,5.569992,-1.594864,-4.072259,9.622658,1.282968,9.324304,5.287811,7.038672,9.467090,3.098736,2.005816,-0.809345,-0.044274,-7.335119,-1.385639,-0.936566,2.388785,9.090955,6.542656,-3.501768,2.878734,-5.359651,5.286499,1.593375,-2.012818,0.281428,3.883805,-0.430006,-4.300401,0.208652,-5.556214,-2.226285,1.014665,0.248672,-1.698441,6.646841,2.053613,1.992362,-7.311648,0.740947,4.140035,-8.862084,-0.710226,-0.310029,8.857520,-1.301228,1.806836,-9.920496,-4.048672,0.101397,9.981485,-0.588051,-5.913295,1.693376,1.733344,-2.742087,-6.166000,6.391107,9.403070,5.777141,9.424863,-5.659447,-9.346964,1.572938,-5.370762,-4.092870,-4.918520,-0.929449,-7.496630,4.323133,-1.894584,-0.944991,-1.998166,-5.972833,7.552953,-3.650436,8.321412,8.735617,9.540562,-7.541451,3.652029,2.222745,-6.198606,-4.239418,-8.150463,-0.450373,0.335661,4.160953,-2.001200,2.146371,7.066493,-9.097906,-8.848146,-1.850036,9.725753,7.545658,4.531134,-9.492621,-3.539085,-4.695320,-6.759314,-7.877582,1.377976,5.138940,6.713468,9.549715,-5.719074,7.536694,8.259808,1.460715,-9.104607,5.053378,6.289359,3.067737,4.996254,-7.468688,-2.773303,7.938902,-8.574325,3.968338,-2.032700,-2.099813,4.897805,2.578227,-1.604129,9.771395,-5.019965,-5.550585,-4.885516,0.471759,-5.880932,4.611141,-6.157655,-7.961598,7.655969,-3.581679,4.645770,-9.669856,-4.684194,8.352496,-9.468366,-5.460968,-3.897340,8.969165,-8.577646,-8.785698,-5.716013,-1.480525,-4.511514,-5.761620,-5.670530,8.202323,8.347667,-8.991072,-6.236178,-6.857535,-6.758996,0.219926,-0.971327,1.388024,4.817897,7.760195,8.050236,5.063837,-8.322580,9.598333,-3.180115,-4.622024,8.694269,-4.852914,3.736277,-6.908707,8.561315,-7.061247,-4.705470,-2.704260,8.330503,-5.592125,0.948539,-4.109602,1.534618,2.468638,8.443981,4.687490,-8.939047,-5.217178,4.507864,-8.232565,-6.843657], dtype = "float64")#candidate|8806|(256,)|const|float64
call_8804 = relay.TupleGetItem(func_5298_call(relay.reshape(var_8805.astype('uint16'), [8,]), relay.reshape(const_8806.astype('float64'), [256,]), relay.reshape(const_8806.astype('int64'), [4, 16, 4]), ), 6)
call_8807 = relay.TupleGetItem(func_5302_call(relay.reshape(var_8805.astype('uint16'), [8,]), relay.reshape(const_8806.astype('float64'), [256,]), relay.reshape(const_8806.astype('int64'), [4, 16, 4]), ), 6)
func_4835_call = mod.get_global_var('func_4835')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_8808 = relay.TupleGetItem(func_4835_call(), 1)
call_8809 = relay.TupleGetItem(func_4836_call(), 1)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_8812 = func_4313_call()
call_8813 = func_4313_call()
const_8816 = relay.const([[[2.228173,-5.138198,2.003422,-4.167727,-2.954478,7.704015,6.085696,-2.475893,-4.432605,9.868806,-9.684898,-4.963202,8.994815,4.816816],[4.032369,5.230414,-0.534090,-1.119770,2.890421,1.491066,-8.427406,0.650505,1.010963,4.230405,-4.855326,6.765918,-5.753457,8.885106],[7.467901,-0.044472,0.267077,7.175636,3.370222,0.491117,4.810041,1.501714,6.924264,4.014096,-9.140680,-2.743140,-6.809873,-4.221320]],[[6.611155,-7.349342,-1.849088,-9.140190,-8.892041,-1.723885,1.067610,-4.189083,-8.497995,-6.678962,-3.939019,-8.329389,1.568445,-3.766795],[-4.881747,-8.476578,-5.028386,3.675172,-5.640969,-9.268228,7.543949,-9.472968,-2.974745,2.291016,-2.659229,-4.274422,-3.847443,-0.965056],[-2.673260,9.258258,4.059104,-9.022945,-8.371554,-0.857880,2.278488,-7.733943,8.061162,2.971430,1.020759,-7.941391,8.998306,7.325421]],[[-8.661343,3.795219,-4.810189,5.538335,-2.046615,4.006348,3.680656,0.165603,-8.756695,-6.763521,5.086875,2.192060,-3.440580,-8.606553],[-6.404272,2.917661,0.548314,7.121689,7.584745,7.598182,4.783611,0.729447,3.049047,3.458157,-1.474397,9.595900,-1.936125,-9.144136],[8.252037,-4.501451,-6.837882,-3.016992,-7.425482,6.607226,-0.608541,3.512905,4.817016,5.953329,-5.402542,-7.440584,-8.223098,-5.832973]],[[-6.198254,4.450386,9.617500,-8.397398,-1.753444,-9.022513,-3.459067,-8.061221,-9.243037,-8.395050,-1.983499,-7.006958,2.309052,1.367073],[6.734815,-0.160953,2.832147,9.930704,7.011400,-0.349361,-9.833695,-1.508058,6.204770,2.155211,-1.518373,2.016931,9.496334,2.389278],[8.885116,-7.356362,-4.721392,-8.698104,1.641177,8.454431,9.944986,-3.451357,-3.286530,8.924089,7.799643,2.452027,-3.095950,7.800248]],[[3.716983,-1.002591,6.629749,9.522556,8.068882,9.993720,1.886685,7.493346,2.637475,-5.393649,-8.006449,0.918511,-7.883160,-4.611586],[6.862088,3.014421,-2.862575,4.271767,-7.165258,-5.217092,2.595229,-4.357165,-8.524225,6.748964,6.201237,4.494879,4.924181,-6.014949],[7.610199,5.393354,-1.726402,0.139170,-0.706129,-7.396381,9.423327,0.856047,8.723974,7.839728,8.011337,7.671368,-5.662376,3.839113]],[[1.288246,-2.616991,-9.776762,9.458226,-7.280389,0.724944,-0.818923,1.448286,-3.809482,-4.370812,7.704120,5.001400,-8.552805,4.525288],[3.730764,6.884127,-4.792672,-3.123548,1.757983,1.526077,-0.727799,-2.465125,8.253900,3.139435,-9.336760,3.770919,4.104375,3.519313],[6.624183,1.760762,7.432851,4.138342,-0.766650,-2.892812,6.365187,5.385849,-5.390205,-5.255245,7.606522,-6.366693,8.280235,1.385028]],[[-7.199363,3.998053,-4.911698,7.310685,1.206685,2.562771,-3.015189,9.134940,-5.801725,0.248977,-5.002547,-8.030069,6.351693,-9.602271],[-6.509442,-1.048171,-4.658501,-5.898566,-7.375897,-7.847874,-5.607145,8.960404,6.015976,-5.316748,5.272135,-8.702706,-4.321175,9.285518],[0.268827,-0.855433,-2.024022,1.446555,-2.565977,0.951177,8.800122,-8.342251,0.059481,-7.043593,-6.951871,-3.503471,-5.042717,-0.582012]],[[1.133946,7.465663,7.218670,-3.323415,-6.217861,-7.196713,8.668564,5.824105,8.203169,-2.590290,4.397173,6.119329,-0.047232,9.739823],[-7.387136,3.469012,8.261777,7.326449,-1.838161,-9.554470,9.686213,-3.672353,-3.890010,8.076225,5.388210,2.472896,-4.839897,0.012259],[-8.246909,8.074746,-9.824814,6.648309,6.178421,-2.282143,-9.799009,-8.689463,5.472613,3.997783,-4.534114,2.144664,-0.262253,-0.708992]],[[6.033895,0.040186,-9.891426,-0.383748,8.611498,5.093749,-4.779261,9.323564,-7.033404,-0.167302,-9.750553,-7.398966,-2.900802,-8.840008],[-9.557852,6.124841,-6.776309,3.507435,-5.460960,0.618367,1.230689,-0.883058,-8.247609,1.127303,-7.398892,-3.069220,6.043580,8.919599],[-2.029532,-7.332906,4.347752,-1.247524,6.292589,-0.377329,-6.235890,9.082621,-3.108717,2.518531,3.067317,-1.261800,2.391324,-2.148742]],[[7.123688,-7.502717,-0.846926,-2.102130,0.623723,8.203450,-4.390780,-6.417097,-7.205955,2.560252,9.636070,2.628799,1.895371,-5.517322],[0.630274,6.986341,3.103941,-8.372868,-9.422045,1.580351,-8.219617,-6.613443,-4.843418,0.163450,1.961513,-8.622882,4.344772,8.884404],[8.522367,6.239571,6.902670,3.298305,6.432222,-8.597483,-6.503837,5.061306,-3.467428,0.702330,-8.684771,0.753807,9.926767,-0.643526]],[[-7.732515,7.004325,-9.095565,-1.249326,5.390080,-9.417389,7.440553,6.699240,-5.824332,-3.311689,-9.781731,8.255600,-3.795035,-6.494118],[-7.315703,5.666338,2.018535,-1.883805,7.239284,1.856461,-0.365223,7.706779,-2.685954,2.440708,8.208761,9.120337,-9.372274,-2.667002],[-1.707609,-4.370062,-4.877304,8.596895,1.058352,5.205507,-9.335529,9.013124,-7.231557,-6.321547,0.315851,9.218263,-9.607273,6.447887]],[[4.300276,0.227706,-7.772122,7.456769,0.655697,-6.720202,-8.657836,-5.896450,-8.146974,-5.155266,-3.910856,4.918434,-5.522528,6.307666],[-2.533021,8.857007,-4.429357,7.414997,7.537213,5.961814,6.091263,7.864868,8.989300,-7.146169,5.095501,-0.586119,0.082935,-4.068906],[-9.430483,-5.594231,-4.070043,9.545330,0.105900,2.849378,6.119069,9.753147,2.728877,-9.138429,-6.099931,-4.872043,4.129379,-5.020878]],[[3.226990,3.066090,-1.579752,-8.196704,9.640949,9.143445,-5.572419,1.745544,-0.717502,-3.862170,9.535634,-5.669377,8.445352,-4.039192],[-3.914505,5.160679,0.372592,6.638902,5.001696,-1.640324,2.717151,7.976479,-0.857833,2.572197,0.669852,-8.002024,1.784437,7.173273],[-3.096051,9.310286,-6.182057,-5.200518,5.692094,1.657898,3.660035,-5.056892,8.304049,-9.334871,-9.364293,-5.307361,0.547305,5.455135]],[[-8.286915,2.825513,-5.293105,4.730712,1.358714,-4.364037,0.620480,2.333468,8.591945,-7.104717,3.821183,-9.542350,-8.152729,-1.125406],[-6.220515,-5.354630,-6.640761,8.765809,7.780537,6.342493,-4.027100,7.932748,8.111427,-3.922360,-3.519208,1.205089,4.850078,-8.242592],[1.092994,0.580022,-7.917675,-5.054342,9.488668,3.700446,-9.846951,3.162211,-7.217213,-6.471783,-3.947480,-8.634023,7.131819,-8.451922]],[[2.747763,7.511258,7.443871,-1.598513,-1.406354,-9.011467,-5.354074,-7.260590,-4.737691,7.607099,4.226802,-3.800224,-0.326235,-5.514923],[1.662339,-1.953545,2.718055,5.128175,-8.561477,-4.818118,-3.746751,-0.635837,-6.024818,4.501627,5.580544,3.129593,-5.741804,-9.743387],[-0.139591,2.511239,6.088598,2.992617,2.762860,-2.441085,-5.814248,-9.399522,0.676459,-9.774406,-8.760741,2.637294,-5.305947,-3.010104]],[[-4.910077,-1.222467,2.553956,-3.403544,2.849313,-1.096439,-4.091694,2.233422,0.153049,6.103262,-8.830793,7.907753,4.439347,-6.726573],[7.417501,1.538006,1.812726,8.201862,2.020144,-3.194338,4.155777,3.175939,3.898574,-4.061665,-4.042184,4.245627,2.246527,7.468213],[2.726945,3.762653,-1.799620,0.908311,-9.858214,0.762869,-9.157929,-1.984033,-3.984989,-5.446461,-1.230138,-8.682000,-1.855173,-8.622391]]], dtype = "float32")#candidate|8816|(16, 3, 14)|const|float32
bop_8817 = relay.less(uop_8750.astype('bool'), relay.reshape(const_8816.astype('bool'), relay.shape_of(uop_8750))) # shape=(16, 3, 14)
bop_8820 = relay.less(uop_8752.astype('bool'), relay.reshape(const_8816.astype('bool'), relay.shape_of(uop_8752))) # shape=(16, 3, 14)
output = relay.Tuple([call_8782,uop_8801,call_8804,var_8805,const_8806,call_8808,call_8812,bop_8817,])
output2 = relay.Tuple([call_8783,uop_8803,call_8807,var_8805,const_8806,call_8809,call_8813,bop_8820,])
func_8824 = relay.Function([var_8758,var_8805,], output)
mod['func_8824'] = func_8824
mod = relay.transform.InferType()(mod)
var_8825 = relay.var("var_8825", dtype = "float64", shape = (1008,))#candidate|8825|(1008,)|var|float64
var_8826 = relay.var("var_8826", dtype = "uint16", shape = (8,))#candidate|8826|(8,)|var|uint16
output = func_8824(var_8825,var_8826,)
func_8827 = relay.Function([var_8825,var_8826,], output)
mutated_mod['func_8827'] = func_8827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5254_call = mod.get_global_var('func_5254')
func_5255_call = mutated_mod.get_global_var('func_5255')
call_8848 = relay.TupleGetItem(func_5254_call(), 0)
call_8849 = relay.TupleGetItem(func_5255_call(), 0)
output = relay.Tuple([call_8848,])
output2 = relay.Tuple([call_8849,])
func_8856 = relay.Function([], output)
mod['func_8856'] = func_8856
mod = relay.transform.InferType()(mod)
output = func_8856()
func_8857 = relay.Function([], output)
mutated_mod['func_8857'] = func_8857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3566_call = mod.get_global_var('func_3566')
func_3568_call = mutated_mod.get_global_var('func_3568')
call_8874 = func_3566_call()
call_8875 = func_3566_call()
func_4575_call = mod.get_global_var('func_4575')
func_4579_call = mutated_mod.get_global_var('func_4579')
const_8887 = relay.const([[-6.249245],[-3.518927],[1.803711],[1.313705],[4.329874],[4.247370],[-3.818445],[-1.441840],[5.469686],[8.080824],[6.430624],[1.937253],[1.996978],[-2.020448],[3.860510],[-6.126933],[1.371782],[6.522232],[3.482896],[2.376041],[8.181212],[-8.214454],[-2.824150],[1.188276],[7.311036],[-5.594094],[-7.705264],[-1.853652],[-3.925080],[0.127650],[-9.474625],[-1.471374],[-7.773004],[-5.058583],[-9.615646],[-5.815104],[0.561543],[-8.314336],[2.353787],[6.649625],[-0.570573],[-7.581608],[9.820221],[-4.464740],[7.643408],[4.306323],[-6.516924],[6.865895],[-4.407278],[-9.700590],[-0.855150],[-3.699551],[-9.247918],[6.117617],[-5.891393],[-1.851814],[-9.426689],[4.286281],[-5.533403],[-7.599932],[9.805541],[1.094701],[6.181111],[-2.558925],[-3.348165],[-4.226413],[5.255861],[-9.920227],[4.221822],[2.801690],[4.720971],[4.878295],[-5.255729],[6.298706],[-0.631541],[-9.349554],[-0.520723],[4.994068],[2.149377],[1.625780],[9.812212],[-6.257584],[-3.741935],[-9.962558],[-2.605585],[6.239512],[0.247260],[-7.889510],[8.974337],[-6.906612],[3.746572],[4.786909],[-0.975824],[9.192003],[-3.351639],[-5.696522],[-8.414611],[-7.935906],[5.207841],[4.264235],[-7.866068],[2.959420],[5.620886],[-7.611268],[-7.175382],[-5.102394],[7.381479],[6.704787],[4.008220],[8.352027],[2.934247],[6.149329],[-6.121581],[-4.306579],[-4.371316],[-6.671950],[-9.699343],[-4.584076],[7.459087],[-1.464188],[-7.770863],[5.432981],[-9.613825],[9.754774],[4.538749],[1.249776],[-8.577245],[-3.757728],[-6.090159],[2.440321],[-9.755158],[8.955542],[5.186818],[-2.209332],[-9.235642],[-2.223187],[-3.384050],[9.655696],[-8.945534],[-0.986566],[4.320057],[-1.451518],[-8.095493],[5.173229],[2.402826],[7.213979],[-9.319598],[-4.233668],[-2.654384],[-2.232587],[3.565844],[3.038724],[-0.366740],[-1.612900],[-7.923431],[-9.400186],[-5.851262],[8.859922],[3.886923],[4.707079],[5.758926],[7.245089],[-0.807513],[-7.361038],[-0.189291],[4.287579],[3.569909],[7.332417],[7.519359],[5.053404],[-1.589640],[-0.873710],[-9.574781],[8.965113],[-1.916842],[0.560000],[9.117578],[0.580266],[-2.698395],[2.513591],[-2.385191],[7.887649],[9.931282],[2.024215],[-3.301871],[-8.600058],[-5.641610],[-0.189443],[1.527523],[-8.672667],[-7.241332],[4.607188],[-4.605542],[2.253421],[-3.312215],[-4.010371],[-4.523956],[6.757131],[-3.346521],[-0.046667],[8.204909],[-9.436355],[6.820456],[-4.981724],[-0.942181],[-6.750734],[-5.439600],[5.090466],[-8.457780],[-3.860563],[5.275765],[0.783498],[-3.973369],[3.947589],[3.921179],[5.888762],[7.396353],[-7.432033],[-8.587646],[8.479383],[-3.992105],[-6.844793],[4.534333],[5.081084],[-5.491815],[8.351177],[-6.320747],[4.850175],[2.358569],[-4.705549],[7.302262],[3.523952],[6.007259],[8.002545],[-6.563350],[-0.080574],[7.000697],[-5.560370],[-6.037513],[-9.666346],[9.484600],[-2.723804],[9.817047],[-6.844425],[0.350874],[5.288554],[-1.406948],[1.194513],[7.075590],[-9.983463],[5.359197],[-3.417323],[4.968903],[2.358083],[-2.266404],[-4.399894],[9.969725],[-8.440699],[6.250335],[7.220788],[4.274385],[1.103024],[2.917653],[8.680604],[2.673286],[0.188840],[-9.640871],[7.427958],[-9.981195],[-2.615973],[6.895340],[-4.238163],[1.765516],[5.808837],[6.209496],[3.407135],[2.960227],[-6.339689],[0.353368],[8.183890],[6.439840],[4.019813],[-5.017965],[1.995052],[-8.329599],[-1.867451],[4.924442],[-6.549956],[5.788859],[4.240966],[0.407450],[7.240990],[3.007516],[3.717333],[5.276560],[7.329551],[3.830439],[-6.954960],[-6.523131],[-2.740681],[3.076923],[-4.884288],[3.528203],[-3.885042],[-4.395441],[9.780297],[-7.816801],[-2.107559],[3.716604],[5.541111],[2.369159],[3.196353],[6.816724],[-9.480903],[-9.393312],[-0.642206],[7.927294],[-9.853522],[-5.402832],[7.306728],[-8.312420],[-2.159765],[6.357062],[-8.241372],[-7.058303],[2.691188],[-1.800071],[2.587351],[9.977907],[7.493397],[-4.565530],[7.089392],[-3.298310],[1.243238],[-3.654965],[6.446470],[7.261636],[-4.423828],[2.330186],[6.179709],[-3.827309],[4.585941],[-1.398340],[-4.795390],[-1.768862],[1.492033],[-6.490652],[3.431289],[-9.987979],[8.969193],[3.265282],[3.145857],[-0.035801],[-8.938367],[-2.831494],[1.853555],[-6.514284],[9.504848],[5.753348],[-4.769973],[-1.801437],[4.061866],[0.019819],[1.033130],[3.231580],[-1.709284],[-1.726837],[0.312115],[7.813249],[-7.942081],[-5.419883],[-6.093438],[-7.829455],[4.029941],[-9.562172],[6.136393],[9.183044],[3.349860],[4.729774],[-0.722026],[0.322522],[-3.058452],[-5.114846],[-8.563395],[6.364765],[6.378326],[-4.386095],[-3.821989],[1.267136],[7.572829],[-4.684981],[-7.078473],[2.324905],[-9.928351],[6.974500],[4.184236],[0.032517],[-1.959994],[4.938709],[-9.737932],[2.678728],[-1.653768],[5.304852],[-2.784690],[-4.092951],[-0.561024],[-9.762449],[-7.582042],[-9.250709],[6.476121],[9.591601],[-2.515188],[-3.655996],[-7.211662],[9.692781],[-8.896403],[-7.407852],[6.014440],[0.772864],[0.296966],[3.639527],[-9.799549],[-4.718907],[5.246084],[3.404682],[-4.774212],[0.833579],[-9.133760],[7.220803],[0.881880],[0.887084],[6.638145],[2.452868],[8.076582],[-4.837772],[-4.331444],[3.722357],[-2.829280],[-4.555017],[-5.391260],[-6.083888],[-8.444746],[-6.285546],[4.098808],[-6.927908],[-1.533798],[-5.773949],[2.364185],[-3.940346],[-5.895386],[1.768634],[-4.143012],[-5.203105],[2.759830],[-0.280161]], dtype = "float64")#candidate|8887|(455, 1)|const|float64
var_8888 = relay.var("var_8888", dtype = "float64", shape = (2, 504))#candidate|8888|(2, 504)|var|float64
const_8889 = relay.const([2.027352,1.453913,8.526044,7.477667,-8.308519,1.529760,-4.862772,-2.484543,-4.034142,9.839014,9.683767,2.211813,7.125302,-7.194594,3.238747,-5.229125,-7.256376,-7.932628,-1.083619,6.967569,3.161413,9.039428,6.375662,-2.938821,3.276693,-3.321048,-7.166786,-6.547481,-3.602724,-9.213619,-7.223025,-9.382108,8.370957,4.365943,-7.985922,-9.210285,3.967065,6.666464,2.357509,-7.426976,-8.699911,1.856878,-3.334640,-0.725531,7.492567,-0.989259,0.366942,-8.581132,3.943080,-2.459150,-0.973965,6.718452,-8.695052,-5.771579,3.296942,-0.535158,-8.470666,-9.397205,-3.480724,3.504501,0.985506,7.187315,-2.756782,4.475215,8.062319,9.780625,-3.367707,0.033544,4.526533,-6.445959,-6.076072,-6.497483,9.980616,9.395790,8.895117,4.807923,-6.149816,5.425753,-5.972850,-7.353288,3.013762,1.788215,2.734764,-8.450103,6.625110,2.625436,-8.091072,-1.599766,-0.359569,6.003292,-1.090113,-0.067660,5.788321,9.498161,2.008925,-5.641885,4.748802,-6.993107,-8.359910,4.787924,-8.583834,-3.595109,4.052031,-9.727999,-8.603718,4.494110,-5.496768,-4.262105,-7.305652,8.590896,6.604704,-1.509284,1.245356,1.341323,0.031769,1.828131,9.214738,-4.295499,-8.837214,-0.396248,-6.613147,2.277822,-9.047474,5.503871,2.182683,-9.302412,-3.374680,6.596183,6.292289,5.775325,-2.994649,-5.106643,-7.396026,-2.771734,8.889483,-9.973473,-5.063583,-3.951043,2.381035,6.295301,-0.898350,6.347918,-2.450491,4.498711,-2.700122,3.514216,6.355013,-7.515808,-7.183445,0.784290,-1.631953,-7.560182,7.350983,9.061569,-9.622827,-2.002738,-8.302223,5.031966,-3.599695,-5.701408,4.709683,6.588439,-2.757003,4.753582,-3.994391,-3.804309,-0.934674,-7.960158,-2.303975,-7.461426,-3.341059,8.133558,-7.034448,-6.322959,7.436086,4.522369,-6.376901,-8.419332,4.298973,5.699792,-4.229631,-7.344951,-8.058546,-6.863210,-3.806667,3.486381,4.145115,1.517891,7.056172,4.614784,-1.801232,-6.635483,0.123486,7.647367,-8.406500,6.827317,8.279561,1.774730,-3.160581,-7.347254,-6.594133,6.478870,-7.109049,7.046570,-9.701245,5.619412,-7.269582,9.920966,-5.752745,-6.760622,-6.296510,1.903035,9.410690,9.511664,-7.563678,-1.792999,-3.837669,8.379183,-7.775432,-4.776857,8.679705,3.945525,7.618151,4.518432,-3.349390,-7.468110,2.783846,-6.245548,-1.578495,-0.225878,6.857237,5.754999,9.555484,-4.990895,-9.174029,-3.684872,-6.882919,7.716996,5.785080,2.048936,-3.454704,-9.740614,2.784332,-4.506339,-4.003332,7.305852,8.635385,6.850696,6.419333,-3.251418,9.598330,0.822512,-7.354088,4.150957,1.630221,2.582763,5.963869,-4.742008,-6.588503,-8.802658,3.496515,-3.306794,8.441500,8.624957,-8.343380,-8.209858,1.892864,2.977852,-1.396793,8.940363,-7.680142,7.806641,-6.754200,-1.629358,-6.365905,2.406457,-7.185720,-5.780305,-4.041749,-7.163407,1.728457,-6.467728,-5.994874,-9.222510,-0.486535,4.968190,7.803337,-4.250824,-6.322949,-2.743935,-7.059937,-8.052960,-0.334665,-8.960961,5.919708,9.648370,5.065794,9.001634,3.381582,-8.595693,1.933902,-6.582447,-6.621269,-4.488512,-2.709378,7.988284,-4.436995,5.965818,-0.364494,9.666681,4.901898,-5.338489,-1.873596,-1.853909,5.835448,-5.461243,-9.867503,5.296307,5.979618,3.525402,7.883671,-5.323620,4.806453,-5.693543,6.905291,7.148158,-3.659466,5.264162,2.322273,-4.654943,-0.357057,4.524101,-1.321843,4.003380,-8.508925,7.130899,9.184230,4.876476,0.452580,-9.854603,-3.152176,2.972905,4.321144,1.636368,6.320926,-5.166853,-7.044941,-4.683623,-3.254807,1.984326,6.157125,-6.444988,-2.447942,2.574262,8.578005,5.374575,8.668369,-7.344221,7.911881,5.302824,-0.150735,5.117103,0.455267,9.508173,2.744208,-9.861500,2.582951,-0.084624,-8.314939,2.644273,0.874711,1.188207,-5.787781,-6.014050,-2.265062,-6.014592,1.589345,8.362882,8.862449,-4.256381,0.674341,3.109429,-8.214654,1.979980,5.285460,-9.824050,1.032537,7.580018,-8.223524,1.019526,3.964986,0.524524,3.327600,7.012876,0.341442,-0.979566,-0.911966,8.016231,0.989895,-0.548753,5.369097,1.912443,-9.333160,-5.336674,-9.682547,1.363710,9.538042,-1.340322,-8.433360,-2.273545,-0.935863,-9.725583,-0.675698,0.465866,-0.237304,7.264551,-4.190687,-1.659872,7.614434,4.688238,7.856531,-9.289391,1.218270,2.591369,-4.407339,3.716800,-4.955029,-4.770770,9.005635,-6.845770,7.400330,-0.429635,4.718046,-7.399081,2.508914,-6.103458,4.822084,-0.890553,-1.325601,-8.621875,8.529454,9.359503,4.295950,-0.131466,3.618931,2.250818,-5.987195,-1.490266,-0.829513,4.886995,5.074231,-2.183410,-1.210003,8.334241,0.351845,0.077731,-7.477682,-9.507185,-8.928110,-6.776589,-3.271397,-5.538719,0.663504,-1.245348,-4.515973,-7.645073,6.924270,-0.099998,7.886953,-9.975590,2.027156,9.075620,-7.690796,2.690349,-3.307445,-1.104794,8.295724,-1.400451,-7.413060,8.220375,-3.147042,-6.820563,-1.506957,1.262456,-0.676406,-9.673345,4.308657,0.165014,-1.895623,2.552759,4.615521,4.802119,-3.955304,6.843212,-0.877490,9.000485,-6.228624,-7.452856,-8.167801,-2.846800,-3.204763,-4.947000,-1.584931,7.387917], dtype = "float64")#candidate|8889|(504,)|const|float64
call_8886 = relay.TupleGetItem(func_4575_call(relay.reshape(const_8887.astype('float64'), [5, 13, 7]), relay.reshape(var_8888.astype('float64'), [1008,]), relay.reshape(const_8889.astype('float64'), [36, 14]), ), 1)
call_8890 = relay.TupleGetItem(func_4579_call(relay.reshape(const_8887.astype('float64'), [5, 13, 7]), relay.reshape(var_8888.astype('float64'), [1008,]), relay.reshape(const_8889.astype('float64'), [36, 14]), ), 1)
func_8155_call = mod.get_global_var('func_8155')
func_8157_call = mutated_mod.get_global_var('func_8157')
const_8895 = relay.const([-1.842896,7.405896,3.026518,-6.956599,8.494317,-5.941104,-0.231468,1.965235,-7.805290,-2.849523,-3.500853,8.383382,0.108490,-8.403538,5.862096,7.605277,4.288116,3.336896,-1.445957,3.349151,-4.966031,-8.609755,-1.619887,-2.450116,-7.603239,6.866895,-2.964841,-0.757031,-7.076971,-4.815972,-1.531585,-7.864372,-1.877873,9.347595,1.566239,-7.475278,-6.332691,-4.114310,-2.449627,8.664614,8.457485,-0.542618,2.526646,-0.834657,7.299580,-4.289352,-7.196521,3.156695,-2.331205,0.879183,8.065427,-2.987382,8.880831,-1.047699,3.431698,-9.806005,-7.111013,-0.564984,8.388216,9.290667,3.908736,4.834872,-5.920004,-7.730021,4.581906], dtype = "float32")#candidate|8895|(65,)|const|float32
call_8894 = relay.TupleGetItem(func_8155_call(relay.reshape(const_8895.astype('float32'), [1, 65])), 2)
call_8896 = relay.TupleGetItem(func_8157_call(relay.reshape(const_8895.astype('float32'), [1, 65])), 2)
bop_8907 = relay.mod(var_8888.astype('float32'), relay.reshape(call_8886.astype('float32'), relay.shape_of(var_8888))) # shape=(2, 504)
bop_8910 = relay.mod(var_8888.astype('float32'), relay.reshape(call_8890.astype('float32'), relay.shape_of(var_8888))) # shape=(2, 504)
func_3941_call = mod.get_global_var('func_3941')
func_3945_call = mutated_mod.get_global_var('func_3945')
const_8915 = relay.const([7.928929,9.124362,-6.300438,-2.024606,-8.836725,-8.707725,2.016013,5.794356,-8.684224,-4.194497,6.793786,5.607286,3.492334,8.768540,2.799410,8.645289,7.432785,-9.912848,-8.508059,1.449088,-2.672515,1.183791,3.816827,2.933110,-2.750386,6.476162,0.732464,4.714940,-0.057627,6.063806,9.683037,-8.110267,-2.340325,-3.484806,-9.278485,2.038987,9.363811,-6.763238,1.968551,6.618537,7.707680,-8.148339,2.739411,7.057829,-7.439990,3.995041,-0.029382,-2.686126,-8.762414,1.453858,-2.654365,5.247425,6.795068,7.172861,1.396294,-8.378606,0.032871,-7.866583,-7.809640,-4.787578,-9.672761,-7.804657,-1.289353,2.704458,-7.935429,5.964423,-6.944661,-1.344895,-4.438782,-8.407812,-1.568100,-9.040736,3.476326,-3.977294,-1.809291,0.104338,-9.882327,4.461205,-9.554720,3.962749,3.111391,-9.704825,0.165128,-1.516778,-5.057827,-9.945595,5.809139,-3.720119,7.014176,6.979827,-8.597773,-0.112645,-1.054346,5.280285,9.782454,6.647450,5.643348,-0.447489,5.782797,-9.344683,7.686908,-8.957222,2.292677,-4.002227,-7.030034,-8.696204,-2.149441,3.551022,3.799230,6.739393,-4.326158,4.789555,-3.232731,-6.116411,-3.083960,6.646419,5.348920,7.443804,0.656285,7.406338,3.583351,-1.037677,0.201199,-4.136060,-4.609764,2.928894,1.949155,-4.178028,-9.588857,3.178084,5.482468,-4.551661,-1.001664,7.533912,7.967173,9.869241,-9.725145,-4.793977,-7.526595,-9.849159,9.202844,5.846665,7.418229,-7.319002,-1.819343,-1.318162,3.187543,1.643040,-1.280669,9.710926,0.874092,-6.400938,-3.761039,1.957935,-5.823618,4.185814,1.404647,-9.233599,-4.765087,-9.813314,-6.260093,-6.671496,-4.210462,9.951321,-1.709407,-4.730996,-0.269343,0.419425,-6.781035,5.097972,6.400932,-3.537474,3.721050,3.521309,4.110718,-2.516945,-1.235552,2.837562,-0.937436,-0.067111,2.975059,9.922549,8.271974,-0.198657,7.163080,-0.903051,-7.203211,-0.216938,9.035007,1.927426,0.188396,-9.494486,-8.086724,-7.190654,1.764920,5.490069,-6.472263,-4.638850,-3.232393,3.082591,-6.804159,-3.064444,-1.805794,-9.987623,-9.501467,-5.981917,0.364700,2.371061,9.159348,8.152878,-2.755632,0.843534,7.042644,2.114354,2.334736,4.250557,-4.891299,-0.452737,-6.310733,8.254557,8.680978,6.123485,-9.791579,-0.961186,-1.532078,-1.852974,7.013756,5.861558,0.050328,-6.550875,1.486093,-3.167033,9.389071,-4.679229,4.141398,-8.663746,-1.622775,-2.651261,-1.650800,-5.904815,-5.050191,-1.124924,-3.241550,-7.916652,-1.778647,-4.212347,-8.307275,5.605890,-8.892747,-3.654984,0.651708,-4.121933,-7.053896,4.751845,7.462832,9.610329,-6.177240,7.843073,-9.673326,8.631922,-4.931892,-0.522884,-2.110001,-0.613978,-2.050848,9.982717,0.510695,6.961994,-4.685971,1.685205,-3.186522,1.413813,-2.050202,4.097995,-0.925490,3.067215,1.487104,5.056278,6.172963,-4.276606,-3.984276,-2.893264,8.455884,9.326145,-8.548835,1.181330,-4.940369,6.829352,-8.510595,3.906915,4.338748,1.735059,-1.417638,0.589002,5.163048,2.715040,6.054315,0.279941,6.516691,-7.718412,2.656176,-9.670516,-3.923769,-8.523630,8.868332,5.656121,-0.575755,8.102409,6.919924,7.506721,-2.004978,9.395266,-3.324007,-1.323147,9.096499,1.291537,-5.785154,-0.725637,2.346236,4.956624,-7.900990,-2.167468,-4.166077,-3.787305,-5.302407,-4.640859,-1.350933,-8.308257,-2.371174,2.297159,8.309602,5.524922,-0.376674,-6.307109,-9.010688,-2.892642,-3.602088,-0.671253,-8.637592,-2.707619,-1.629613,8.826738,-0.973393,1.506282,-9.528235,2.360673,8.565220,-3.998643,-3.186380,4.697084,-8.393918,-3.930989,-0.279561,6.419447,5.986294,0.709279,-8.307012,-8.757418,-7.097827,-9.259359,-9.379685,-4.271886,-4.936587,-6.152956,5.118662,0.814590,6.574032,-5.871714,-7.421794,2.561290,-1.598206,4.741179,7.287923,8.629137,6.721282,3.307840,9.428496,8.635741,-1.000598,7.188450,-6.017422,4.592322,-0.880862,7.385103,-1.636464,-4.539706,-6.676622,3.019112,7.615579,6.005967,-5.275994,8.902819,2.265677,3.655203,-9.369033,6.136185,-0.905277,-4.762001,3.644587,8.948576,-3.614954,-4.762884,-9.314754,1.984275,-6.817090,-7.986548,8.384809,5.093352,7.868963,-9.733191,4.223174,-4.516596,-0.002163,-6.901517,-2.476975,7.761442,4.898912,4.627200,-3.672395,6.064615,-6.574458,7.186341,7.334783,-4.057132,-9.555290,-9.927315,-6.539995,5.087038,-0.955553,-8.639491,1.326487,0.458096,1.956163,-0.038262,2.383753,4.863539,-9.661434,2.454454,9.453073,-7.779455,-0.287574,8.005641,6.436033,-1.590990,-7.662817,-7.064559,-0.221248,-3.374377,7.309499,6.181600,-3.531123,-2.242065,-0.180776,2.558045,5.751990,1.164222,-9.550085,-7.797014,5.053061,5.760201,-5.432647,9.440424,-0.505830,-7.333961,9.323208,-2.656663,-4.992290,-3.439940,8.110296,-2.642267,5.010677,-3.139567,-8.008729,3.228623,3.286967,3.161922,-7.977894,0.277664,-0.465519,-9.088509,7.277213,-4.135972,9.538916,-1.790058,-1.296393,7.556662,-7.598821,0.130827,4.530237,-4.776835,-5.833753,-5.290426,5.911991,2.952348,6.535776,6.998531,-2.314873,2.789078,-3.673513,-4.424382,-9.972574,-7.818912,-1.042590,-2.320035,-6.447535,-0.208875,-9.004796,5.657325,-2.085538,-6.546971,5.108782,7.724985,7.073582,0.430644,-5.672230,-0.674143,-0.411051,-6.350208,-4.137514,-1.601052,3.598913,6.659196,7.595484,5.063802,5.319537,0.617643,7.783495,1.105604,8.440948,-2.173262,-5.370160,0.963517,9.777722,7.045708,-3.106418,-6.097504,7.511330,4.597291,0.669902,-1.603957,-3.959643,1.576833,-3.168701,-2.369181,4.872195,-2.099120,0.232125,-8.397727,3.012103,0.455290,6.029073,4.424144,1.727032,3.796410,-3.824192,-2.935131,-1.755139,-8.724570,-6.162361,-4.381552,-5.481914,2.400401,-1.405925,-3.414621,-9.419527,0.197160,-8.378696,-8.650398,-2.362328,-7.812401,1.004475,7.742264,-5.304093,6.165240,3.825010,-0.027126,-5.894563,2.738858,-2.447097,-3.420320,4.194622,-7.404521,-4.307231,-9.954766,7.451630,3.336086,6.258522,-4.017403,7.769453,-7.396407,2.388049,-3.370860,-3.249703,8.165624,8.643789,7.856136,1.433015,-3.547059,-5.948635,-1.352739,8.463704,5.387154,5.037717,-8.314251,1.849813,0.931390,-5.035367,-7.191775,1.457777,5.343326,5.911288,-6.491917,-9.321872,-1.796047,2.963852,-1.141798,4.669732,9.230605,5.590014,4.826251,-6.537579,-7.005500,-6.948620,8.947677,-7.363479,-7.762825,-8.908873,-2.699315,-9.774177,9.364651,-8.703658,-0.559785,9.960745,-2.247570,-2.060729,4.703380,-3.462863,3.191567,-7.512562,-7.229303,4.380941,-9.985698,6.180337,-6.763702,-9.492970,1.422360,-8.905202,-5.839062,7.401210,-0.830955,-3.185456,-3.911271,9.112500,8.744625,7.204992,-3.139616,-4.761738,-5.565151,-0.103366,9.172217,-4.669286,5.334886,5.916308,4.621599,-2.817584,-7.558914,0.649583,4.366413,-4.731970,7.315026,-6.329425,-5.754399,-8.311840,6.259222,7.244124,3.885543,8.846574,-7.619886,-2.537079,-6.158748,-0.042549,1.970145,9.491160,-7.567956,0.527975,9.208280,-3.142422,4.816651,-7.283517,1.949639,7.876238,-0.058484,2.932011,7.094028,-9.531950,-9.320082,-5.719920,-4.897020,-4.661601,1.865175,-9.604442,3.613593,-3.686565,-9.129818,2.536207,6.955844,-9.311707,-4.882005,-3.402001,-4.974687,0.375676,6.788056,-3.696287,4.179891,6.690413,6.969976,-4.402969,-9.420005,8.666878,9.229741,-8.983205,8.438326,-6.289101,-6.418308,-7.738557,6.388907,5.840778,5.559221,5.133593,-5.867064,-8.853662,-4.441930,-9.960974,3.289975,7.783075,5.240363,4.164487,8.792217,-7.695873,1.561527,-7.892845,-2.491950,0.588760,2.719136,-8.934077,3.023707,0.713198,4.903311,-3.216086,4.729811,-3.397277,2.593565,-5.063726,6.336654,-6.440468,1.801648,-5.930540,-3.004281,2.507963,-7.457921,4.560590,-5.993436,5.622832,7.826328,0.782980,-9.634961,3.695763,4.247000,-8.331605,-0.426365,4.766974,4.054887,3.250950,-0.450819,4.175854,-5.974265,-4.395008,-2.565580,1.216480,-7.830178,-2.153487,-5.088514,-3.986550,0.244225,-1.642004,-9.093687,4.205860,9.249785,4.650935,-4.609351,-3.618767,-0.992148,9.242918,9.447683,-6.656373,0.135170,-2.181800,-5.950124,-8.876940,4.928573,9.963003,-2.569417,3.877703,3.224389,1.610682,4.615714,-5.812013,8.933440,-8.108930,-1.592680,-0.562248,-6.673061,2.310694,2.911304,-2.747277,2.160233,-8.084662,8.549298,9.606439,4.364360,-3.732541,1.697080,-1.915524,-8.200514,5.399706,9.326181,6.839108,-3.192712,-8.903312,-7.219489,-5.345458,-6.123012,8.457354,-8.278943,-4.253779,-6.783057,-5.948508,9.165984,-2.835022,-3.740476,8.984768,2.028980,9.367704,8.640440,3.867537,-9.040692,3.353839,3.073700,-7.967695,-4.236624,7.708131,0.257532,-2.846610,-5.479473,7.295493,-7.753057,-8.954963,8.018974,6.685553,5.850071,-9.835023,-0.791114,-6.283284,-0.362631,7.207394,0.417997,7.548509,-4.508969,6.019855,-1.941074,9.161463,8.855846,-3.476649,1.087320,-8.754184,9.042752,9.539278,-8.402903,1.278148,-9.009243,2.169626,7.453563,8.316094,-0.072427,-4.112681,9.736408,9.901115,5.722829,7.512485,4.519497,8.732170,-9.678687,-4.822188,-8.866100,3.818493,-1.517225,-1.699428,-8.101236,-3.626325,-9.677545,7.753816,-4.448353,0.232874,2.657498,8.864249,-7.913471,1.345678,8.869029,9.093286,1.988139,-2.101772,-9.605217,1.821695,-6.834523,7.564342,-2.683596,-7.161181,-4.067508,-3.980707,-6.820332,-7.878407,-1.830693,7.727890,-1.068697,1.670632,-9.629636,9.742695,-7.377606,4.984918,-2.509957,5.310674,9.387266,-9.364615,3.756339,5.018272,-5.305058,-1.513163,2.753772,-7.772808,2.076775,1.398620,9.088951,-6.328378,5.404217,0.678045,-2.588347,-7.117831,-7.809530,0.925827,2.415378,-7.123328,4.247842,-3.081121,-7.951722,-8.336338,-4.838424,9.687543,-0.330749,3.807778,4.299486,-6.388473,-9.551136,-7.303784,2.432091,-7.678282,-2.218985,-1.007630,-1.353649,5.541699,6.108976,-3.310077,4.329744,4.152384,0.593279,-7.761935,5.305126,-0.574746,4.346097,1.355970,0.850603,-5.190642,-0.612998,9.999015,9.181193,0.917295,-6.525086,5.135724,-9.505809,5.442573,7.475855,-0.944791,-1.768192,-9.772653,9.152270,-9.178429,-7.634128,9.944438,4.487672,2.334946,6.994952,9.127268,-6.640465,7.803287,-2.300986,-7.409040,-5.672264,-6.313042,7.822773,4.488949,-4.769226,5.227894,-0.123192,0.392300,8.878391,-1.215226,-8.960366,-2.278291,-1.558232,7.407289,0.534755,9.462869,-9.389014,-5.397391,-4.263018,7.767412,-5.070723,2.553200,2.164093,-1.024965,2.211951,4.180715,9.191246,-3.427567,0.557602,-3.201545,0.751278,3.593304,8.054123,-5.294769,5.084196,5.251051,-7.240402,-8.682292,5.123775,1.148301,6.560596,-6.168568,-9.326743,8.441936,-2.213877,-5.270058,6.102494,-9.938576,-7.772905,-8.347534,-7.980862,6.991432,1.814704,-9.280500,-0.227709,9.407359,-9.617996,-3.370254,5.906252,-9.689770,8.445762,2.768067,-4.365105,-4.148910,-5.780340,-4.661647,-1.502852,-8.753988,1.903623,-0.637337,-1.632861,-8.207602,-6.548118,8.784141,-2.566234,0.307052,2.319164,-4.973914,-5.012238,-5.874767,2.260761,1.698567,-5.949052,2.120811,-4.072159,3.126191,-3.203726,3.231133,2.873207,-1.271568,8.653645,6.686160,-6.957623,-1.763375,-1.388611,-7.525709,-1.706807,0.408174,4.974308,-7.403185,4.445698,-7.904180,6.851322,-6.643417,-0.033832,-4.209831,-1.746026,-6.048998,1.997505,-7.552113,8.588462,-8.405656,-1.300433,-2.394447,-2.966625,-6.396824,3.000944,1.987814,-8.656811,0.384721,-2.145141,-7.646670,8.691640,-8.098084,-8.043625,6.802296,7.898051,1.244579,1.210592,3.611444,-1.523485,7.429591,-9.923095,2.382697,-4.087988,7.019582,-5.347136,-1.052932,6.581374,1.068298,5.979497,1.211714,-8.377390,-4.567727,7.803144,1.987037,5.471850,6.949631,-6.599363,1.062919,5.956309,2.367037,-2.563959,2.382761,-1.687250,2.881911,5.341326,-0.954143,4.083300,-1.510600,-6.047381,4.798001,-2.600791,8.972815,3.243975,-2.630323,-1.502023,-9.602625,8.490428,-3.833535,-2.236472,1.828293,-5.127619,5.884915,-5.673201,-0.648481,-8.129371,6.891623,-7.021434,1.483849,0.365261,-3.501999,3.080217,-5.669404,3.576364,8.505603,9.477204,6.083570,-5.606648,4.050347,-6.620762,-3.515012,7.569098,-6.611218,-3.340717,5.387712,2.762204,5.286963,4.593083,9.083422,-5.220581,-8.861532,5.818850,-9.944872,8.745521,-2.593690,0.753714,-3.821285,-2.795517,0.670433,-4.412007,-9.038430,-3.456161,-9.615606,-1.174004,-7.058295,-3.862527,-7.184388,6.200008,-2.472768,-1.155762,-3.702466,5.092287,6.284007,3.882778,-4.277157,5.817786,5.181398,2.352589,8.878686,1.417229,-8.862986,2.940058,5.408126,5.937471,3.591388,1.187151,-5.373496,-0.939277,-5.214588,-1.267177,2.789465,-2.170172], dtype = "float64")#candidate|8915|(1248,)|const|float64
const_8916 = relay.const(4, dtype = "uint16")#candidate|8916|()|const|uint16
call_8914 = relay.TupleGetItem(func_3941_call(relay.reshape(call_8874.astype('int32'), [11, 4, 10]), relay.reshape(const_8915.astype('float64'), [1, 1248]), relay.reshape(const_8916.astype('uint16'), []), ), 5)
call_8917 = relay.TupleGetItem(func_3945_call(relay.reshape(call_8874.astype('int32'), [11, 4, 10]), relay.reshape(const_8915.astype('float64'), [1, 1248]), relay.reshape(const_8916.astype('uint16'), []), ), 5)
bop_8928 = relay.less(const_8887.astype('bool'), const_8889.astype('bool')) # shape=(455, 504)
func_3941_call = mod.get_global_var('func_3941')
func_3945_call = mutated_mod.get_global_var('func_3945')
call_8949 = relay.TupleGetItem(func_3941_call(relay.reshape(call_8874.astype('int32'), [11, 4, 10]), relay.reshape(const_8915.astype('float64'), [1, 1248]), relay.reshape(const_8916.astype('uint16'), []), ), 2)
call_8950 = relay.TupleGetItem(func_3945_call(relay.reshape(call_8874.astype('int32'), [11, 4, 10]), relay.reshape(const_8915.astype('float64'), [1, 1248]), relay.reshape(const_8916.astype('uint16'), []), ), 2)
bop_8958 = relay.not_equal(var_8888.astype('bool'), relay.reshape(call_8886.astype('bool'), relay.shape_of(var_8888))) # shape=(2, 504)
bop_8961 = relay.not_equal(var_8888.astype('bool'), relay.reshape(call_8890.astype('bool'), relay.shape_of(var_8888))) # shape=(2, 504)
bop_8962 = relay.multiply(var_8888.astype('float64'), relay.reshape(bop_8907.astype('float64'), relay.shape_of(var_8888))) # shape=(2, 504)
bop_8965 = relay.multiply(var_8888.astype('float64'), relay.reshape(bop_8910.astype('float64'), relay.shape_of(var_8888))) # shape=(2, 504)
bop_8968 = relay.floor_divide(const_8887.astype('float64'), const_8889.astype('float64')) # shape=(455, 504)
output = relay.Tuple([call_8874,call_8894,const_8895,call_8914,const_8915,const_8916,bop_8928,call_8949,bop_8958,bop_8962,bop_8968,])
output2 = relay.Tuple([call_8875,call_8896,const_8895,call_8917,const_8915,const_8916,bop_8928,call_8950,bop_8961,bop_8965,bop_8968,])
func_8979 = relay.Function([var_8888,], output)
mod['func_8979'] = func_8979
mod = relay.transform.InferType()(mod)
mutated_mod['func_8979'] = func_8979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8980 = relay.var("var_8980", dtype = "float64", shape = (2, 504))#candidate|8980|(2, 504)|var|float64
func_8979_call = mutated_mod.get_global_var('func_8979')
call_8981 = func_8979_call(var_8980)
output = call_8981
func_8982 = relay.Function([var_8980], output)
mutated_mod['func_8982'] = func_8982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mod.get_global_var('func_4086')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_9008 = func_4086_call()
call_9009 = func_4086_call()
output = call_9008
output2 = call_9009
func_9013 = relay.Function([], output)
mod['func_9013'] = func_9013
mod = relay.transform.InferType()(mod)
mutated_mod['func_9013'] = func_9013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mutated_mod.get_global_var('func_9013')
call_9014 = func_9013_call()
output = call_9014
func_9015 = relay.Function([], output)
mutated_mod['func_9015'] = func_9015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8856_call = mod.get_global_var('func_8856')
func_8857_call = mutated_mod.get_global_var('func_8857')
call_9034 = relay.TupleGetItem(func_8856_call(), 0)
call_9035 = relay.TupleGetItem(func_8857_call(), 0)
func_6287_call = mod.get_global_var('func_6287')
func_6291_call = mutated_mod.get_global_var('func_6291')
var_9041 = relay.var("var_9041", dtype = "uint64", shape = (196,))#candidate|9041|(196,)|var|uint64
var_9042 = relay.var("var_9042", dtype = "uint32", shape = (1, 154))#candidate|9042|(1, 154)|var|uint32
call_9040 = relay.TupleGetItem(func_6287_call(relay.reshape(var_9041.astype('uint64'), [196,]), relay.reshape(var_9042.astype('uint32'), [154,]), ), 2)
call_9043 = relay.TupleGetItem(func_6291_call(relay.reshape(var_9041.astype('uint64'), [196,]), relay.reshape(var_9042.astype('uint32'), [154,]), ), 2)
output = relay.Tuple([call_9034,call_9040,var_9041,var_9042,])
output2 = relay.Tuple([call_9035,call_9043,var_9041,var_9042,])
func_9044 = relay.Function([var_9041,var_9042,], output)
mod['func_9044'] = func_9044
mod = relay.transform.InferType()(mod)
var_9045 = relay.var("var_9045", dtype = "uint64", shape = (196,))#candidate|9045|(196,)|var|uint64
var_9046 = relay.var("var_9046", dtype = "uint32", shape = (1, 154))#candidate|9046|(1, 154)|var|uint32
output = func_9044(var_9045,var_9046,)
func_9047 = relay.Function([var_9045,var_9046,], output)
mutated_mod['func_9047'] = func_9047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7029_call = mod.get_global_var('func_7029')
func_7031_call = mutated_mod.get_global_var('func_7031')
call_9150 = relay.TupleGetItem(func_7029_call(), 0)
call_9151 = relay.TupleGetItem(func_7031_call(), 0)
uop_9152 = relay.asinh(call_9150.astype('float32')) # shape=(5, 9, 11)
uop_9154 = relay.asinh(call_9151.astype('float32')) # shape=(5, 9, 11)
output = uop_9152
output2 = uop_9154
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

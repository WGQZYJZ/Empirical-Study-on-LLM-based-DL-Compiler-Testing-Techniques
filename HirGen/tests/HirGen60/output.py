import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_90 = relay.var("var_90", dtype = "uint16", shape = ())#candidate|90|()|var|uint16
var_91 = relay.var("var_91", dtype = "uint16", shape = (14, 7, 4))#candidate|91|(14, 7, 4)|var|uint16
bop_92 = relay.less_equal(var_90.astype('bool'), var_91.astype('bool')) # shape=(14, 7, 4)
output = relay.Tuple([bop_92,])
output2 = relay.Tuple([bop_92,])
func_104 = relay.Function([var_90,var_91,], output)
mod['func_104'] = func_104
mod = relay.transform.InferType()(mod)
var_105 = relay.var("var_105", dtype = "uint16", shape = ())#candidate|105|()|var|uint16
var_106 = relay.var("var_106", dtype = "uint16", shape = (14, 7, 4))#candidate|106|(14, 7, 4)|var|uint16
output = func_104(var_105,var_106,)
func_107 = relay.Function([var_105,var_106,], output)
mutated_mod['func_107'] = func_107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_150 = relay.var("var_150", dtype = "float64", shape = (16, 14, 8))#candidate|150|(16, 14, 8)|var|float64
uop_151 = relay.tan(var_150.astype('float64')) # shape=(16, 14, 8)
var_157 = relay.var("var_157", dtype = "float64", shape = (16, 14, 8))#candidate|157|(16, 14, 8)|var|float64
bop_158 = relay.less(uop_151.astype('bool'), relay.reshape(var_157.astype('bool'), relay.shape_of(uop_151))) # shape=(16, 14, 8)
uop_167 = relay.rsqrt(bop_158.astype('float32')) # shape=(16, 14, 8)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
var_172 = relay.var("var_172", dtype = "uint16", shape = ())#candidate|172|()|var|uint16
const_173 = relay.const([2,1,8,8,-10,-1,-7,-6,-8,5,-4,-1,6,8,-4,-3,8,4,9,5,10,-6,3,-8,-10,8,-4,2,-10,-1,9,1,-10,-5,-10,-8,4,-9,-7,-9,10,1,-6,-7,-5,-1,4,4,-10,3,-9,2,7,10,10,1,9,-7,-4,3,1,-4,7,-9,8,9,-4,-9,-2,-5,2,-6,7,-8,-6,-2,5,3,5,1,5,9,8,-10,-10,-7,-2,-3,-4,2,10,-8,10,-6,-3,-8,-4,-8,8,-7,7,-1,6,-6,3,-2,-1,-9,-2,-8,2,5,-5,-10,-5,1,2,-10,6,-1,-3,-3,3,-7,-6,4,-3,6,6,-2,5,-2,7,-5,8,-1,9,7,-7,9,-1,3,-1,-5,5,7,-3,6,1,-1,5,1,-8,-6,-3,10,5,10,-2,-5,2,-6,-1,5,4,-10,-9,-3,-9,4,3,8,9,5,10,-10,-2,-7,1,-4,9,-3,4,7,-4,-5,-7,6,10,-1,1,-5,10,-3,-6,-5,10,-3,-4,10,-3,7,-10,10,-4,10,-2,8,9,-2,-8,-9,-5,-7,-5,8,-3,-10,8,1,-10,-7,8,-4,-7,-1,1,7,2,-6,-2,7,-9,-6,-8,1,10,10,-3,6,-1,9,4,-10,10,5,10,7,8,10,-2,4,9,1,-10,-4,-3,5,-8,6,-10,-2,-3,-4,2,-7,-3,6,6,-5,-4,7,1,5,-6,-9,-3,9,-2,5,4,-6,-4,10,2,6,4,3,5,9,10,10,-1,-9,1,-4,-7,-6,7,-1,-1,4,10,3,9,9,-1,5,7,4,-10,-6,1,8,-8,-6,5,6,-9,-1,2,10,-8,-3,8,6,6,-5,-4,6,3,2,-3,-3,9,5,-7,-5,9,-1,-5,-5,1,-1,-6,-8,2,6,8,10,-7,-9,9,9,-1,-4,-1,1,-2,8,1,6,-8,9,-6,-3,5,9,-3,-1,-1,1,8,6,4,8,2,9,10,3,-8,-1,8,4,-8,-6,-1,-3,-8,-9,-4,10], dtype = "uint16")#candidate|173|(392,)|const|uint16
call_171 = relay.TupleGetItem(func_104_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(const_173.astype('uint16'), [14, 7, 4]), ), 0)
call_174 = relay.TupleGetItem(func_107_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(const_173.astype('uint16'), [14, 7, 4]), ), 0)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
call_179 = relay.TupleGetItem(func_104_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(call_171.astype('uint16'), [14, 7, 4]), ), 0)
call_180 = relay.TupleGetItem(func_107_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(call_171.astype('uint16'), [14, 7, 4]), ), 0)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
call_181 = relay.TupleGetItem(func_104_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(call_179.astype('uint16'), [14, 7, 4]), ), 0)
call_182 = relay.TupleGetItem(func_107_call(relay.reshape(var_172.astype('uint16'), []), relay.reshape(call_179.astype('uint16'), [14, 7, 4]), ), 0)
output = relay.Tuple([uop_167,call_171,var_172,const_173,call_179,call_181,])
output2 = relay.Tuple([uop_167,call_174,var_172,const_173,call_180,call_182,])
func_183 = relay.Function([var_150,var_157,var_172,], output)
mod['func_183'] = func_183
mod = relay.transform.InferType()(mod)
mutated_mod['func_183'] = func_183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_183_call = mutated_mod.get_global_var('func_183')
var_185 = relay.var("var_185", dtype = "float64", shape = (16, 14, 8))#candidate|185|(16, 14, 8)|var|float64
var_186 = relay.var("var_186", dtype = "float64", shape = (16, 14, 8))#candidate|186|(16, 14, 8)|var|float64
var_187 = relay.var("var_187", dtype = "uint16", shape = ())#candidate|187|()|var|uint16
call_184 = func_183_call(var_185,var_186,var_187,)
output = call_184
func_188 = relay.Function([var_185,var_186,var_187,], output)
mutated_mod['func_188'] = func_188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_216 = relay.var("var_216", dtype = "float64", shape = (10, 1, 9))#candidate|216|(10, 1, 9)|var|float64
uop_217 = relay.acos(var_216.astype('float64')) # shape=(10, 1, 9)
func_183_call = mod.get_global_var('func_183')
func_188_call = mutated_mod.get_global_var('func_188')
const_221 = relay.const([4.404398,-5.444867,2.476163,-3.838357,-2.855749,5.244858,-2.931599,-3.855624,0.235916,5.626883,-5.094516,-7.613310,7.892053,-5.472164,-6.213718,-6.276525,8.086770,-9.507358,-4.173527,-4.114690,8.287289,3.411760,-3.321066,-4.375832,-3.351762,7.491083,8.877741,8.945033,-1.742843,4.608943,0.340810,-5.632490,6.285996,-4.254161,8.325340,-2.546963,-0.777273,1.942813,8.913331,-9.040776,4.805515,6.642772,-9.276101,8.495243,-7.273256,5.064379,-8.607195,-3.622156,7.334849,-3.876828,6.211878,0.679574,-8.384199,0.598009,-4.221073,2.296567,2.518631,-9.544490,6.931333,-4.154436,-9.406598,8.532130,4.832606,-2.667645,-9.815800,-7.282226,-7.499799,-5.265502,-7.326241,-7.381970,9.362407,-5.361483,-6.535608,-8.616050,-0.046064,2.689072,7.738322,3.865607,4.172671,4.567644,-0.392933,8.017699,4.480376,9.424045,2.429457,-1.650873,1.606871,-0.893441,8.704353,2.090658,2.611559,-2.192880,-2.898983,-7.030474,-4.267296,6.285487,8.931480,2.779232,-7.074952,-6.235141,-5.511838,9.045901,6.631430,-2.215536,-2.320468,-8.690361,-0.161196,-5.788013,-0.983237,-9.755755,-9.028246,-0.032573,4.007037,-8.385560,-1.882043,2.743393,9.452129,1.746519,-4.502971,4.437830,0.374159,2.557538,2.143049,-6.321583,-5.609686,-3.143558,2.408940,-9.942025,-1.333646,-4.781930,2.137669,3.223246,-1.152859,0.062995,-6.212679,-7.499911,-2.814070,-0.851593,9.932622,7.726902,7.113946,3.577734,-4.712746,5.142482,-1.179564,-9.535336,-4.271392,6.167302,-2.484850,7.454207,7.217472,-0.628207,8.624564,2.751249,-8.263350,-1.379682,-4.275319,-9.136479,9.245830,0.432990,0.647627,9.605813,-8.354841,4.679072,1.555709,3.781407,-4.319397,-7.631702,-2.658719,-2.389853,7.093145,6.937182,-0.548215,-3.129247,1.252882,-4.577533,7.389455,-2.383086,-0.059249,-4.448915,7.994089,-9.254365,-9.094396,0.748826,4.469406,6.907540,8.335233,-5.427201,-8.224194,4.516066,0.364855,-0.902494,-1.987283,-9.790753,-9.265811,-8.859812,-6.200928,5.320279,-0.917349,-1.525972,5.363361,-9.762545,-0.319931,-9.710293,8.869514,-6.086585,2.075391,-4.853591,-5.716284,-4.946868,8.276457,-5.137096,-7.695129,-8.002355,-2.965624,-8.838456,-3.197463,-0.373669,0.359126,3.960019,8.617828,7.476100,7.637005,-7.095252,-2.624931,-9.103769,3.372459,-7.221247,1.764992,-1.162601,2.585876,5.663544,4.503679,-9.674963,-0.836407,-5.266177,8.456852,2.734396,3.901374,-5.206113,-7.128102,3.071746,2.319381,7.185100,7.803541,0.891016,-4.604953,-1.274108,-5.641142,8.560477,9.104592,-8.831665,7.296930,8.568691,3.945547,4.698906,-8.597215,-7.205525,-3.617673,-9.495986,7.454233,-0.126922,-6.903295,-8.768911,4.362408,-0.984902,0.730501,7.635705,-3.206143,2.647207,1.795420,7.569730,2.653160,6.470781,-7.373459,9.602255,2.813361,3.236328,0.039989,3.458618,7.816767,1.024469,-4.072636,-1.513921,0.020503,2.601205,-5.452335,-5.016385,-2.859116,0.061223,-2.066525,-8.195443,-3.772187,7.481013,0.638963,-4.340952,-7.928997,2.910203,-5.413557,3.568508,5.523852,-4.489200,-4.437096,-4.774789,3.044327,2.516746,-0.208367,6.350416,6.420525,-1.104283,0.387349,-8.142210,-2.364881,9.191020,1.177165,-1.311772,4.568131,-8.584068,-0.699741,-8.144857,-8.751882,0.054321,6.132533,5.841565,1.210549,-1.246249,-4.943125,8.318656,-3.616186,7.328124,0.213104,2.937813,9.418392,-7.512918,-3.631552,2.969600,-4.588522,3.907674,5.695873,4.913381,8.739306,-8.985725,-3.081710,-9.969781,-7.480365,-0.539950,-7.895876,-5.491282,2.254358,9.132407,6.863033,-7.531957,5.257035,8.922687,-0.568502,9.974216,-7.514387,9.429673,0.225834,-6.057676,4.606369,-5.663413,-7.531410,3.917447,5.595697,0.455010,1.350033,3.242571,2.167066,-1.778155,8.627085,1.256672,1.108483,-0.327447,5.690407,-6.020511,5.268029,-8.099309,8.520260,9.192220,-5.060626,1.756765,-9.082438,-3.077200,6.820692,0.742083,-1.838289,2.936814,9.284299,5.368606,-2.171663,1.736405,-1.599262,3.576139,-1.906707,-7.246099,3.288566,-8.093184,-9.315283,7.979786,1.771316,-4.557883,-8.095045,2.724287,9.790989,-0.194436,-0.856593,5.140457,4.665692,-8.344271,8.485111,-8.205999,-6.195178,-6.972737,9.746857,4.197536,-2.922851,-6.577714,5.471462,-6.513759,-4.576086,-0.158285,3.111322,9.307545,-2.660282,-1.640087,7.526012,-7.709697,6.480028,-0.770228,-9.967805,-0.021221,-1.795593,7.019272,-6.591237,-5.240336,-7.637869,-3.004368,9.271243,-8.184412,2.675324,9.069562,2.277019,3.750069,9.379613,8.651540,9.085896,-9.346209,1.377550,2.714676,-2.257913,-3.857058,-9.536628,-5.868967,3.031092,6.814233,9.681120,5.033413,-2.382741,6.434502,-3.894765,3.176007,-5.466644,1.574459,-0.113460,-2.284162,0.526106,1.541171,2.636383,9.462148,4.315523,8.238306,9.712947,2.411161,4.512347,8.105471,-1.843657,2.833955,3.306084,-5.479139,8.778361,-4.308481,0.209485,-7.465856,8.068638,7.707727,-8.331150,3.180497,2.758233,3.384803,1.620609,5.101043,-5.569086,2.586364,2.155554,4.700246,-8.171174,5.082570,8.268424,-4.783734,6.478771,7.244349,-3.304350,-3.941953,-8.157584,1.039720,-2.655544,2.261808,8.496390,-0.582000,-9.212527,-0.407269,3.992640,-3.800474,8.145012,9.778376,8.852420,8.780299,4.523837,6.342250,6.360194,-4.969900,6.722550,-0.071845,-8.246448,-1.510018,-7.393199,5.971172,-9.061820,5.660608,-5.327172,7.549877,6.135362,4.618406,-5.846041,-8.028761,8.505633,4.025569,-4.772937,-7.030084,5.195142,3.585194,9.993961,7.422690,2.483164,3.295832,-9.504842,2.261902,5.952267,-1.573619,0.753730,-8.949627,3.949406,-5.134090,4.746859,-5.310664,4.649676,2.722923,-9.126933,-6.108476,0.159295,2.131334,-4.640843,2.184413,-9.935214,6.130573,5.215481,-4.692199,-2.353542,-9.474155,4.282190,-4.662129,0.187731,6.469929,-5.588416,2.658568,-4.455139,0.381175,3.547503,-2.302774,2.346262,1.705007,1.340658,1.198514,-0.333020,-8.265197,2.330823,-7.984205,-9.241215,-4.271180,-8.326455,-2.875229,2.382993,5.771331,-5.361865,-3.332416,-3.039569,-0.900182,7.282097,3.356911,-2.723326,-1.328521,-0.282955,-1.655907,-5.546612,9.507465,-1.514203,0.190150,-3.954335,-2.832971,5.502796,-1.450610,-7.557723,3.116608,-2.896310,-8.387490,-5.820619,-3.577072,6.785983,0.106205,-1.876366,-5.361729,-3.012450,-2.024181,5.657563,-0.700360,6.036770,-1.715449,8.054517,0.553022,-0.612831,-6.092642,-6.719840,1.066522,6.542558,-5.740428,6.359307,-1.635011,-1.841702,-8.621858,0.854351,-2.552529,6.041680,9.937917,7.459492,9.803665,-9.538924,-3.024078,-6.324570,-0.629853,5.844106,3.245450,-9.097772,-7.418152,-4.984175,-6.107386,6.586001,-1.468886,7.192946,-5.979242,3.436019,-3.352618,2.651911,-3.368132,-1.141868,-0.669882,7.590431,-7.558461,7.020216,5.208391,-4.300021,-8.996719,-1.146214,-1.966343,-7.145393,-1.521609,-3.806288,5.109427,-4.537367,-2.887164,-3.647698,-1.227686,-8.166944,2.122589,0.876996,-9.261313,-7.674641,-1.624959,6.578691,-4.761354,6.348766,7.228998,9.517810,6.864672,2.719720,-7.609136,-9.292348,0.897449,-0.345157,9.077107,6.953497,3.412498,-0.953550,3.793515,-1.202280,0.037186,-3.095972,-0.813282,0.044945,3.601763,3.564691,-1.897432,-1.176572,-0.054670,7.819595,5.121498,0.910443,-2.303550,-6.925189,-0.702937,-7.757528,-0.906399,-4.332174,-1.586310,-7.679883,-6.214110,-1.323477,-2.349154,9.201954,8.362120,-2.676323,3.326858,9.647019,6.348526,7.281909,-1.426339,2.094851,0.420810,3.849224,9.640446,0.075109,3.501174,-4.471126,4.029558,6.424183,-5.557464,5.015142,7.956917,-0.312742,-1.032852,-9.186004,9.665652,8.323269,-2.536398,-3.979487,-6.357567,5.583671,1.242432,3.598400,7.458751,0.102852,-7.625513,-5.779367,5.767495,-8.073404,-2.937299,8.985356,-3.103293,-6.647898,5.134193,-6.499325,5.767402,-0.967897,-1.372790,6.911794,-1.230051,0.964223,2.039242,-5.818876,-7.298935,-7.801811,-5.186183,-1.275483,-5.787442,8.554562,-5.916272,3.493280,1.809451,-1.750875,-2.811527,-7.128568,0.131171,6.811121,6.587993,0.656183,9.812142,-2.892940,2.698601,-3.991541,-7.395440,-0.614394,-8.113545,-1.878437,8.788052,3.143271,-6.168221,-7.435855,7.368142,-8.948941,8.754436,9.945059,7.253791,-9.656963,-5.716273,-6.011010,-7.362644,7.943779,-0.310494,3.259263,8.711225,3.261362,-9.316437,3.840285,-3.356130,-1.527149,5.351435,-0.278424,0.720142,-0.154650,2.743479,-3.847995,8.613761,-3.408807,6.866689,7.643620,-8.161809,-1.516514,-4.449451,2.332093,1.195723,-9.264606,4.249176,8.187679,-1.493375,-6.712859,-5.348847,9.558952,7.222962,-9.940505,1.863723,2.597582,-5.189587,-8.555162,2.379840,6.262950,7.280554,6.255904,-0.242978,-3.626959,-6.159199,3.758318,2.380902,-5.257655,-9.554125,-7.729591,-0.785453,-3.624771,8.924975,9.407224,-1.154133,-3.425776,3.220264,-0.754470,-3.105608,-6.004992,5.979116,-5.349959,-5.468239,3.038635,8.767375,2.869878,2.668851,-1.428572,-4.399302,5.312184,8.614536,6.129278,-4.330393,-4.823309,-8.345349,0.113313,-6.125646,-6.874162,7.975693,-2.133185,3.365624,-4.805778,7.525300,-7.794344,1.021237,-5.735916,5.550598,8.608318,0.946728,-5.693743,-9.684408,5.118861,6.895090,0.276004,-5.162715,5.378792,1.806569,-7.029501,6.070676,4.307373,9.113653,6.476094,2.779718,-3.307771,-3.828893,-0.599562,-9.788498,-0.865930,5.987428,-2.323770,0.612152,-0.188007,-7.918921,6.367500,1.348362,-6.778849,-7.612561,9.419295,-4.393785,-1.758372,-8.488012,8.710648,-8.447330,0.086474,2.808631,1.790013,3.406613,-9.918141,7.691313,1.696763,-1.742919,7.759357,1.057199,-8.567079,-7.802997,2.352798,0.696093,0.966055,-1.169747,4.010632,1.493350,-6.878080,-3.818662,-7.025286,-2.811331,-2.094066,2.646699,7.826784,-7.582949,-0.207182,-6.186691,-5.412714,-6.728541,3.427143,-7.811874,-5.891068,-6.812764,-2.004093,2.025312,-7.909909,9.688546,-4.566622,-9.111671,9.222865,0.943198,2.172322,4.138804,2.496703,6.457933,-8.035506,-6.788606,4.386827,0.438455,9.423407,-4.894334,-0.363450,4.855943,-9.279271,-4.935838,-0.043040,5.536150,9.155433,1.593190,-5.333885,-5.781701,-4.257514,-0.819302,5.414360,-5.043841,-1.623097,-0.181204,-1.773848,-2.247187,6.256662,-9.203123,-5.445675,3.392531,9.835184,6.034806,7.009380,-4.249898,-4.327678,-0.778686,8.818216,-8.603769,9.894906,-4.883604,-8.886189,3.328369,-9.956676,-8.665222,7.085551,-9.602084,-3.586898,6.701511,1.828967,-4.212006,-8.333621,3.286889,5.870649,8.149517,-1.729002,-2.910700,-3.308510,-4.415756,4.572234,-3.060635,-4.014019,8.649803,-2.289398,6.787739,9.249709,4.857273,-5.657329,9.458171,-4.453068,-4.612317,-8.277252,-3.054878,-6.665974,1.150400,0.422370,4.074266,3.237623,-9.279857,6.600323,2.827689,6.809439,-8.546588,-4.128996,9.547184,-9.403298,2.682380,-9.379379,-2.139826,4.575677,6.131810,5.405903,-0.640293,8.362752,-3.827323,-5.032575,6.217847,-6.807257,9.225135,1.996717,4.748517,0.383851,4.259034,-2.426217,-1.057648,6.705187,-3.063720,-7.626739,6.982775,-5.823575,-5.404709,-8.803654,-0.435135,6.127482,6.517076,1.359041,9.275216,7.748387,-6.210914,-3.755783,9.406607,-3.561160,-6.082238,8.321143,4.178761,1.150166,-2.151943,2.592356,-5.536759,4.270196,-9.046295,-3.384195,6.602523,-2.148092,-9.471669,-2.832020,-9.368460,7.675118,-6.651109,6.279638,-4.298454,4.646129,-7.373901,-5.508530,-9.435828,-6.563199,-7.367403,-1.538767,-5.025515,6.945962,2.960130,8.313495,4.128269,-3.826128,9.752821,1.414255,-6.323002,-3.278915,1.386461,0.655303,-9.761935,-0.896935,-2.137888,-2.911431,0.524899,7.656012,-0.392154,3.125194,-3.088884,3.461604,0.544561,0.358628,4.424100,-0.432387,-0.064219,-8.435917,5.927965,5.424637,0.763522,-3.410161,-6.715400,9.570275,-4.017016,-0.920421,-7.497671,-1.306207,-3.211479,6.706419,-8.836570,-7.939896,4.338904,6.851912,-0.486329,9.356300,6.633646,-0.678801,4.123080,-5.726216,-4.836654,-8.890812,-2.187196,-7.296628,9.892749,-5.131398,9.399253,-2.356209,-6.699458,8.224779,5.046460,-9.734786,4.148716,-9.548873,0.950683,-2.698961,3.701264,-8.501818,-0.651387,-7.568237,3.182643,0.835709,8.782064,0.421561,5.600395,-9.063550,0.624449,1.967821,-7.227593,-7.761998,-1.437392,3.696117,4.840818,0.245664,6.133844,3.732701,0.420918,2.438460,0.623277,-0.743846,-9.119787,5.278979,2.241484,-6.708261,-3.652249,9.514570,6.779838,-0.815107,3.844487,-2.231693,2.653476,1.224681,-7.413648,4.768566,0.773581,6.853582,2.680754,-0.688363,2.147847,-2.767018,6.047462,6.127263,-5.427165,6.859727,8.694429,-7.129772,-7.667294,5.092850,8.401506,-2.196471,-5.025665,-6.791302,-9.982623,0.115565,7.987876,0.464719,6.315976,2.865196,-6.385561,6.015462,1.040508,-8.447487,9.066384,-7.464170,-1.958687,-1.981054,-9.289004,-8.655418,9.535966,1.396702,3.490591,9.804848,7.703785,2.945271,7.673281,6.872044,-5.010723,-4.502208,-6.149500,-3.157461,1.072034,2.875061,4.266595,-7.943229,2.160389,1.754762,-6.633110,-6.420659,-9.125099,0.663287,-6.362406,-2.014743,-8.762557,3.967293,5.643307,-1.137195,-5.309118,9.071828,8.931248,-2.886764,2.208063,-0.092304,-7.777819,3.071809,-2.093328,-9.463470,7.081858,9.949876,-0.891852,-2.581411,6.908154,-3.584688,0.934964,9.543837,-0.531520,6.347593,-5.151764,0.748192,-4.309973,5.515563,-5.643885,-5.625315,-2.702877,7.824928,-3.223052,-1.441341,-7.502796,4.634175,-1.805962,2.852495,-8.164154,-9.162530,-1.730791,7.800004,-5.747364,1.957285,-7.041911,4.521819,4.802735,4.015488,-6.379490,4.780228,9.387813,-4.537754,-3.310287,-0.831308,6.166416,8.566459,-8.041019,-5.012799,7.100006,4.390082,5.182350,-3.544273,-0.663025,-6.257135,8.195904,6.028670,-9.646512,9.247582,1.507668,4.362173,-4.541681,-9.030942,7.698161,-1.921641,-0.464337,2.665248,-5.394226,3.593673,4.137890,6.648953,3.039439,8.389641,9.660799,-0.160345,-6.615617,2.062840,-8.394050,-6.129488,-2.676070,-1.713581,-7.037116,5.670426,6.549072,9.063693,-1.840055,-4.256550,-2.263919,-6.994462,-7.599209,-1.041883,-8.631932,7.532517,-1.038579,0.175874,-0.461580,9.485591,4.042219,6.069498,7.550182,6.813687,-6.415397,-8.911805,-3.569237,-6.485701,7.289344,2.966196,-3.677539,1.047962,-0.938084,3.363345,-4.484723,-4.850205,7.359209,3.956294,-3.454150,4.650834,-3.620605,9.985756,-4.445592,1.614816,9.238869,8.922332,4.077094,-6.600874,0.457909,1.151801,-2.320527,6.640222,3.510163,4.191657,-5.429755,-4.748701,-0.699416,0.709818,7.843488,-6.271471,2.020171,-7.200191,-7.082154,6.141949,7.882488,-7.284190,-6.680683,7.659021,-0.221019,9.802564,3.144009,8.642386,-3.885469,-7.702496,3.678815,-7.412867,6.480598,3.975220,7.416111,6.402848,6.913044,-7.098550,-5.344992,-8.895069,-6.491503,1.782359,7.373914,1.825338,8.253995,-6.495600,9.525042,3.496643,1.044563,-4.392955,6.489805,4.401305,2.036575,-5.231342,-1.282860,-1.438232,7.993364,-1.144501,-7.852325,-5.064511,-1.174581,-6.928424,2.850806,-8.615272,3.706724,2.642319,-8.730036,5.261726,-0.374671,3.587552,-1.010157,-9.885424,6.971197,1.218718,-7.243326,5.818355,-9.913351,-1.134845,-5.693755,-9.705420,-2.060465,-4.112581,8.445356,-7.691787,-2.226315,-1.266973,-3.942996,-0.155701,7.154557,8.738794,6.968710,-0.172860,5.375865,2.635843,5.016728,0.111809,2.788913,8.170155,3.793860,-7.656933,6.697562,5.209380,0.191238,-1.072061,4.280939,2.540279,-9.022764,-8.805151,-2.659628,1.697847,1.028449,2.610042,2.824610,6.658702,3.923858,-2.290697,-1.670303,-8.953444,1.549629,0.014074,-9.223471,7.331158,-1.424644,-0.574867,5.933759,9.668640,-2.662629,8.194436,3.635647,0.357455,-1.595918,8.583443,7.968449,1.724994,-5.683740,9.408808,3.666421,-4.440307,-9.661103,-8.241142,-1.149070,-1.498748,9.125969,-1.786633,2.111603,5.271021,0.441081,-6.285645,-9.452880,0.993140,-8.748232,7.971301,9.484925,-9.626621,3.244977,5.772802,-0.977181,-5.935521,4.623815,-2.265255,-9.394460,8.587005,-9.895274,-9.556734,9.082783,-0.210258,-0.869250,8.373709,6.425137,9.982537,-8.390804,-6.637315,5.075411,-1.523685,-9.164548,5.469609,-4.445950,-3.612057,-1.732383,5.550874,6.565645,-1.316675,-9.261012,9.813625,2.593277,-1.258576,-1.660739,-2.151012,5.912107,-3.992107,8.819893,9.487252,-2.165952,-8.268052,-6.115774,-3.181643,8.706017,-1.988964,-5.147711,1.096762,-4.555325,-3.744467,6.563398,-6.551868,5.260503,-7.615323,-8.006710,6.048514,5.910430,-7.219796,2.038790,1.534249,7.059018,-5.388017,-0.356084,7.601218,7.562824,9.522984,-5.518117,-2.650231,-7.052027,-1.403336,-4.700439,-4.767644,5.804330,2.497629,1.633168,-6.222700,-7.513109,6.466375,-8.946709,-2.211712,-9.412068,-1.565405,0.739518,-4.740398,5.768654,0.628358,-9.368636,-8.682021,-4.084640,5.543418,-9.080252,-5.334687,-7.382332,8.099973,-8.458872,8.721314,8.327873,8.354154,-5.821086,1.256324,-7.222828,3.323670,-7.573104,-7.540075,2.093290,-4.631992,1.484790,1.076225,-4.243720,3.866750,-1.711963,9.135257,-4.347708,-6.615710,9.827756,7.422481,-8.303911,-8.283728,-6.355069,9.800670,-3.888161,5.145901,-3.045149,-7.904084,-2.905093,9.467488,-8.366661,-2.689340,9.473910,5.396938,-6.543578,-2.824258,2.596840,7.836059,-5.498513,6.209879,1.142248,-8.381102,6.829052,-3.945929,-5.462616,-7.148034,1.541544,-0.503393,-2.999489,3.384016,-0.001105,6.342829,-2.006935,0.988516,-7.394787,-8.154562,9.243232,2.566375,2.562770,-1.061025,-6.254856,-8.131298,-0.003782,-1.334293,-7.669316,3.422517,-2.421436,-8.541868,-8.440478,6.649125,-4.794753,-3.184683,-0.455145,7.646101,3.268472,-9.919414,-8.650949,7.372667,6.825456,5.849317,1.553353,-3.933626,-6.337150,3.159848,-7.783129,3.049530,-1.769643,-4.414338,7.882538,-4.222081,-7.489204,-8.360459,3.074691,8.726276,-9.959893,-7.267617,7.178254,2.248161,3.741837,-5.493476,0.719008,-7.435310,8.172645,-7.152171,-0.384325,-4.540070,5.492988,-3.088533,-6.285168,3.653834,-1.434004,4.800997,-0.898230,2.035015,9.972901,2.034289,0.673159,-7.345784,9.981917,-1.242152,8.437621,-3.436062,3.948654], dtype = "float64")#candidate|221|(1792,)|const|float64
var_222 = relay.var("var_222", dtype = "uint16", shape = ())#candidate|222|()|var|uint16
call_220 = relay.TupleGetItem(func_183_call(relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(var_222.astype('uint16'), []), ), 2)
call_223 = relay.TupleGetItem(func_188_call(relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(var_222.astype('uint16'), []), ), 2)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
var_245 = relay.var("var_245", dtype = "uint16", shape = (392,))#candidate|245|(392,)|var|uint16
call_244 = relay.TupleGetItem(func_104_call(relay.reshape(call_220.astype('uint16'), []), relay.reshape(var_245.astype('uint16'), [14, 7, 4]), ), 0)
call_246 = relay.TupleGetItem(func_107_call(relay.reshape(call_220.astype('uint16'), []), relay.reshape(var_245.astype('uint16'), [14, 7, 4]), ), 0)
func_183_call = mod.get_global_var('func_183')
func_188_call = mutated_mod.get_global_var('func_188')
call_268 = relay.TupleGetItem(func_183_call(relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(var_222.astype('uint16'), []), ), 4)
call_269 = relay.TupleGetItem(func_188_call(relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(const_221.astype('float64'), [16, 14, 8]), relay.reshape(var_222.astype('uint16'), []), ), 4)
bop_274 = relay.divide(var_245.astype('float64'), call_220.astype('float64')) # shape=(392,)
bop_277 = relay.divide(var_245.astype('float64'), call_223.astype('float64')) # shape=(392,)
output = relay.Tuple([uop_217,const_221,var_222,call_244,call_268,bop_274,])
output2 = relay.Tuple([uop_217,const_221,var_222,call_246,call_269,bop_277,])
func_285 = relay.Function([var_216,var_222,var_245,], output)
mod['func_285'] = func_285
mod = relay.transform.InferType()(mod)
mutated_mod['func_285'] = func_285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_285_call = mutated_mod.get_global_var('func_285')
var_287 = relay.var("var_287", dtype = "float64", shape = (10, 1, 9))#candidate|287|(10, 1, 9)|var|float64
var_288 = relay.var("var_288", dtype = "uint16", shape = ())#candidate|288|()|var|uint16
var_289 = relay.var("var_289", dtype = "uint16", shape = (392,))#candidate|289|(392,)|var|uint16
call_286 = func_285_call(var_287,var_288,var_289,)
output = call_286
func_290 = relay.Function([var_287,var_288,var_289,], output)
mutated_mod['func_290'] = func_290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_397 = relay.var("var_397", dtype = "float64", shape = (15, 15, 8))#candidate|397|(15, 15, 8)|var|float64
var_398 = relay.var("var_398", dtype = "float64", shape = (15, 15, 8))#candidate|398|(15, 15, 8)|var|float64
bop_399 = relay.add(var_397.astype('float64'), relay.reshape(var_398.astype('float64'), relay.shape_of(var_397))) # shape=(15, 15, 8)
uop_402 = relay.exp(var_398.astype('float64')) # shape=(15, 15, 8)
uop_416 = relay.log10(uop_402.astype('float32')) # shape=(15, 15, 8)
bop_418 = relay.mod(uop_416.astype('float32'), relay.reshape(bop_399.astype('float32'), relay.shape_of(uop_416))) # shape=(15, 15, 8)
var_421 = relay.var("var_421", dtype = "float32", shape = (15, 15, 8))#candidate|421|(15, 15, 8)|var|float32
bop_422 = relay.logical_xor(uop_416.astype('uint64'), relay.reshape(var_421.astype('uint64'), relay.shape_of(uop_416))) # shape=(15, 15, 8)
func_183_call = mod.get_global_var('func_183')
func_188_call = mutated_mod.get_global_var('func_188')
var_439 = relay.var("var_439", dtype = "float64", shape = (1792,))#candidate|439|(1792,)|var|float64
var_440 = relay.var("var_440", dtype = "uint16", shape = ())#candidate|440|()|var|uint16
call_438 = relay.TupleGetItem(func_183_call(relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_440.astype('uint16'), []), ), 1)
call_441 = relay.TupleGetItem(func_188_call(relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_440.astype('uint16'), []), ), 1)
func_183_call = mod.get_global_var('func_183')
func_188_call = mutated_mod.get_global_var('func_188')
call_442 = relay.TupleGetItem(func_183_call(relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_440.astype('uint16'), []), ), 1)
call_443 = relay.TupleGetItem(func_188_call(relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_439.astype('float64'), [16, 14, 8]), relay.reshape(var_440.astype('uint16'), []), ), 1)
uop_445 = relay.rsqrt(bop_422.astype('float32')) # shape=(15, 15, 8)
output = relay.Tuple([bop_418,call_438,var_439,var_440,call_442,uop_445,])
output2 = relay.Tuple([bop_418,call_441,var_439,var_440,call_443,uop_445,])
func_449 = relay.Function([var_397,var_398,var_421,var_439,var_440,], output)
mod['func_449'] = func_449
mod = relay.transform.InferType()(mod)
var_450 = relay.var("var_450", dtype = "float64", shape = (15, 15, 8))#candidate|450|(15, 15, 8)|var|float64
var_451 = relay.var("var_451", dtype = "float64", shape = (15, 15, 8))#candidate|451|(15, 15, 8)|var|float64
var_452 = relay.var("var_452", dtype = "float32", shape = (15, 15, 8))#candidate|452|(15, 15, 8)|var|float32
var_453 = relay.var("var_453", dtype = "float64", shape = (1792,))#candidate|453|(1792,)|var|float64
var_454 = relay.var("var_454", dtype = "uint16", shape = ())#candidate|454|()|var|uint16
output = func_449(var_450,var_451,var_452,var_453,var_454,)
func_455 = relay.Function([var_450,var_451,var_452,var_453,var_454,], output)
mutated_mod['func_455'] = func_455
mutated_mod = relay.transform.InferType()(mutated_mod)
const_462 = relay.const(-8, dtype = "int8")#candidate|462|()|const|int8
var_463 = relay.var("var_463", dtype = "int8", shape = (16, 10, 6))#candidate|463|(16, 10, 6)|var|int8
bop_464 = relay.bitwise_or(const_462.astype('int8'), var_463.astype('int8')) # shape=(16, 10, 6)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
const_469 = relay.const([[3],[-8],[6],[2],[-7],[7],[-7],[-8],[4],[-8],[6],[-1],[-2],[-7],[-4],[-5],[-4],[5],[-10],[-6],[-8],[-6],[-4],[10],[8],[4],[-5],[4],[-5],[-10],[1],[6],[-8],[-5],[-10],[7],[6],[10],[10],[5],[-7],[-4],[5],[-8],[1],[1],[-3],[7],[-8],[10],[-3],[-5],[-2],[6],[-5],[2],[3],[-4],[5],[1],[10],[-8],[-1],[-2],[7],[-6],[-1],[-9],[7],[7],[-8],[4],[4],[-10],[-10],[5],[-4],[-2],[-7],[-3],[-8],[-5],[1],[-2],[-7],[10],[9],[-7],[-2],[1],[9],[-3],[-8],[8],[-9],[8],[-2],[-6],[6],[9],[8],[-1],[3],[-9],[-4],[-8],[-8],[-5],[-6],[-2],[6],[2],[-4],[10],[8],[-3],[9],[5],[-1],[-9],[-7],[-9],[-10],[1],[-9],[-10],[-2],[4],[-3],[-4],[-4],[-9],[-1],[6],[-9],[9],[4],[10],[2],[9],[-4],[-6],[-3],[10],[5],[-7],[3],[3],[-2],[-5],[6],[8],[-10],[3],[2],[3],[2],[10],[-2],[-3],[6],[-5],[8],[2],[4],[1],[-1],[-9],[9],[-5],[7],[7],[-9],[-7],[9],[7],[10],[4],[-7],[9],[6],[-3],[-1],[10],[-8],[3],[4],[5],[8],[4],[1],[-5],[-3],[-10],[7],[-6],[-9],[8],[3],[10],[-4],[7],[2],[1],[1],[7],[7],[5],[-3],[2],[2],[1],[-7],[1],[-8],[1],[5],[-1],[-7],[7],[8],[-2],[-8],[-6],[-1],[8],[-4],[-7],[9],[-1],[3],[10],[8],[-5],[4],[5],[-5],[-6],[5],[1],[8],[-9],[10],[3],[6],[-8],[-6],[4],[-10],[10],[-8],[5],[-5],[6],[2],[-4],[-1],[-5],[9],[-10],[-4],[3],[-9],[-5],[-6],[2],[-4],[-9],[7],[-7],[-7],[9],[5],[8],[-2],[8],[-9],[7],[8],[6],[8],[9],[-4],[-9],[6],[-9],[-8],[-10],[2],[7],[-6],[-1],[8],[2],[9],[1],[3],[-9],[8],[7],[-5],[-4],[3],[-8],[-2],[1],[1],[-5],[-10],[-6],[-3],[8],[7],[-5],[7],[-9],[-8],[-9],[-9],[-8],[-1],[-8],[-10],[5],[10],[-1],[-10],[-10],[-8],[4],[-7],[-10],[-5],[6],[6],[-4],[-2],[1],[-7],[-2],[-10],[9],[3],[9],[-4],[-9],[-5],[6],[5],[-2],[5],[-8],[-8],[6],[9],[-2],[4],[1],[3],[-1],[4],[-10],[8],[-8],[7],[6],[6],[6],[4],[1],[4],[2],[-7],[7],[4],[6],[7],[-4],[-1],[10],[2],[9],[-9],[-4],[-9],[-6],[-8],[-2],[1],[4],[-7],[-3]], dtype = "uint16")#candidate|469|(392, 1)|const|uint16
call_468 = relay.TupleGetItem(func_104_call(relay.reshape(const_462.astype('uint16'), []), relay.reshape(const_469.astype('uint16'), [14, 7, 4]), ), 0)
call_470 = relay.TupleGetItem(func_107_call(relay.reshape(const_462.astype('uint16'), []), relay.reshape(const_469.astype('uint16'), [14, 7, 4]), ), 0)
output = relay.Tuple([bop_464,call_468,const_469,])
output2 = relay.Tuple([bop_464,call_470,const_469,])
func_476 = relay.Function([var_463,], output)
mod['func_476'] = func_476
mod = relay.transform.InferType()(mod)
var_477 = relay.var("var_477", dtype = "int8", shape = (16, 10, 6))#candidate|477|(16, 10, 6)|var|int8
output = func_476(var_477)
func_478 = relay.Function([var_477], output)
mutated_mod['func_478'] = func_478
mutated_mod = relay.transform.InferType()(mutated_mod)
const_745 = relay.const([[[4,10,9,8,-9,-9,-6,-5,-6,5,-10],[-9,6,-3,-3,7,-8,-9,3,10,8,6],[10,5,10,7,-4,10,10,-3,2,10,6],[-4,-1,-10,-4,2,-8,1,8,9,4,4],[-7,-9,-8,6,10,-5,-4,7,3,-3,8],[-10,2,8,3,2,-10,6,1,2,-1,2],[3,-3,-9,-7,10,3,9,10,3,1,-4],[-1,-8,-4,-1,-4,8,-9,6,5,-5,10],[10,-7,1,-8,4,9,6,1,-2,2,-2],[8,-8,4,9,-9,-3,2,4,-10,-1,10],[-6,5,-8,9,-7,-8,8,-8,7,6,4],[5,-9,-6,-5,8,-1,-9,-9,9,-3,-10],[-10,-10,6,6,-5,9,5,6,6,-1,-6],[-4,-7,10,-1,-3,-9,-7,-8,-8,-5,8],[-4,9,-8,-7,-1,9,3,1,10,-4,-8]],[[5,-7,10,-1,3,3,-5,4,-5,-2,-4],[6,10,1,6,-6,-7,5,6,-6,-1,-1],[-9,-8,-10,1,-7,1,-4,1,10,-2,-10],[-4,2,5,10,2,1,-4,-10,6,1,-5],[10,4,3,6,-2,10,-2,-9,-3,4,1],[-6,4,-8,-1,-9,-9,10,-8,5,-9,-5],[-2,-7,-5,8,8,7,-5,-6,-10,-7,7],[-10,4,-6,2,5,-8,-8,1,1,9,-3],[6,3,4,6,-7,-10,-4,3,-10,10,1],[2,-4,-5,-10,-1,8,2,-6,-5,5,-4],[-2,4,5,9,-2,2,-4,2,3,-10,-7],[-3,1,6,3,-6,6,8,-4,9,-10,3],[-6,-7,8,2,-2,-10,2,2,5,4,-7],[-3,1,-8,-3,-2,8,1,-9,-3,5,5],[-9,-7,-4,-4,-3,-4,10,-5,5,-5,-9]],[[10,7,-10,-5,4,-3,-8,1,-9,-10,-1],[9,5,-3,8,7,1,-1,6,9,10,10],[2,10,10,-6,-2,6,10,10,-3,-8,-10],[-9,-3,-8,-4,-10,2,8,2,2,1,-5],[-9,-1,-3,1,5,2,10,-2,-8,1,-4],[1,-4,-2,-3,8,-4,-8,-7,10,1,-2],[2,5,6,-2,-6,-6,6,-7,-5,-4,-3],[5,1,4,9,-1,9,3,-6,6,5,-2],[10,-3,4,3,10,-7,-3,-1,8,3,1],[-5,-10,9,-4,8,10,-10,-1,-10,-1,9],[2,8,1,-7,9,9,2,-7,-7,-10,-8],[-9,-3,9,-10,2,6,1,-3,-2,-10,-4],[-7,9,-5,2,1,-4,4,10,10,5,-2],[-7,-3,-9,-10,-5,3,-2,5,4,7,10],[-1,-3,-2,9,5,9,5,-10,1,1,-1]],[[4,8,4,6,-7,4,-8,-10,-10,-2,-2],[-7,1,2,-1,8,-1,-3,-2,-8,-8,10],[-9,-4,5,8,-5,4,2,-10,8,-8,4],[5,2,4,-6,-7,-5,5,-1,9,-7,-3],[-6,-2,3,-7,-1,5,-6,5,-5,8,-5],[10,-6,-1,-10,4,9,4,5,-1,6,2],[-6,3,-9,-1,-3,-10,10,4,8,-9,5],[3,7,-8,9,-4,-5,4,7,6,-6,1],[-2,9,-4,-8,-2,-10,-4,-1,-6,-8,1],[3,-9,7,9,-5,-4,10,-1,-6,-1,3],[5,-10,8,-10,-2,-4,-5,-8,1,-3,8],[-3,-2,-3,5,8,-9,-1,-6,5,-5,9],[-1,2,2,5,9,-10,-8,3,8,-3,2],[3,6,-6,-6,1,-5,9,10,-9,3,9],[-2,-5,8,7,-4,7,-6,-9,9,-10,-2]],[[-4,-5,1,-2,-7,7,-5,2,6,-10,-3],[6,-9,-3,1,-9,10,-8,10,-3,4,-1],[-6,9,-6,-5,-7,3,7,-6,3,-5,-9],[-6,-3,-8,-3,-6,-1,-1,7,-7,8,-2],[-8,-5,-4,-6,3,4,4,-3,-8,-6,-7],[5,2,6,-2,4,7,-2,10,-7,-3,9],[10,2,2,-8,-6,2,-7,-9,9,2,3],[-10,-4,-5,6,2,-5,-8,4,-7,1,10],[8,-10,3,4,5,-10,-8,4,9,4,4],[-1,7,1,-7,-9,-10,-3,-8,10,10,-2],[5,6,4,5,1,-6,-8,-8,8,2,-4],[-1,-6,8,9,6,-6,7,2,7,2,2],[10,4,7,6,-5,-6,5,6,-3,-9,3],[-10,2,8,3,-3,-8,-1,-5,8,3,10],[7,-4,-6,-1,1,-6,9,6,-4,4,-5]],[[8,-3,9,-10,6,5,-2,-2,-4,4,-7],[-5,-4,-9,-2,-5,-4,9,-4,2,-8,9],[10,3,-8,3,2,6,7,-4,2,9,8],[1,9,-2,-2,7,4,-5,10,6,6,-8],[1,-3,-1,-1,2,-1,-7,8,-5,3,-6],[2,8,8,3,-8,9,-9,4,9,4,-7],[-6,10,9,-1,-2,10,4,-6,5,-1,-5],[-5,10,7,6,5,-6,-3,10,9,-8,4],[9,7,3,-6,-8,-7,5,-4,-5,-2,6],[7,9,8,5,7,1,7,4,2,6,-4],[-3,-3,7,-1,-9,9,-4,-5,-2,-6,10],[6,-9,-10,10,-8,-2,1,-4,-4,-3,-3],[1,-10,4,-5,9,10,2,3,-2,4,1],[3,2,-10,-10,3,-5,-6,1,1,7,-8],[-1,-10,3,7,1,-9,7,7,-4,-3,-7]],[[6,-2,-8,10,5,-10,-4,-1,4,1,5],[5,-7,6,8,9,-1,-2,-8,-6,4,2],[-8,-1,4,-8,-9,-3,-1,-8,-2,2,-8],[2,-9,-10,6,-2,-4,-7,-4,9,7,2],[3,-5,-7,-8,-3,8,1,-6,-10,9,1],[4,10,-1,-7,3,2,-3,-6,1,-1,1],[9,-9,6,-4,-6,4,-4,-3,7,1,7],[-6,6,4,8,-1,5,-7,8,9,2,9],[10,6,-1,7,-10,-1,-2,-4,-2,-7,-5],[-7,-8,8,-2,5,-3,9,8,2,-9,-4],[7,1,-5,6,5,-6,2,2,-2,-7,-7],[-7,-10,-5,-1,2,-1,9,1,7,-1,-8],[6,8,-8,1,1,2,-8,-2,6,-8,5],[2,-3,4,3,-8,6,6,-10,9,6,3],[-8,4,-9,10,10,-1,-2,-8,9,-3,1]],[[-8,6,-2,-9,-10,-10,-1,-7,-2,-5,-1],[-8,-4,-6,-3,-8,-9,6,-1,-6,2,-3],[6,5,6,-1,-1,-7,-7,5,9,-8,-10],[-10,1,-1,-4,7,-4,-8,-6,-9,-9,3],[-7,-7,-2,5,-1,-2,-10,7,-7,4,9],[-4,-2,-10,-7,-8,-1,-3,9,-6,2,3],[3,8,4,-1,-7,-6,8,-9,-2,1,9],[8,-1,-10,-4,-7,-5,-7,10,-2,5,-5],[7,-7,-10,-2,-2,8,-7,-8,-1,6,-3],[-5,-2,-9,6,-7,-7,-1,5,-7,6,-2],[-4,-1,-7,-3,1,3,-6,8,8,6,-2],[-2,10,5,7,-6,10,-7,6,9,-1,-1],[-7,-10,6,8,-3,-6,2,-9,-7,-9,6],[-3,-10,-2,-5,8,5,4,-2,-1,7,-7],[7,7,5,-2,-5,-3,-9,6,7,-5,9]],[[-4,-6,-7,-2,-1,2,-4,7,6,-3,5],[-4,-6,-4,-5,-4,6,-6,2,-7,9,-2],[-8,1,1,3,-7,-8,9,-6,4,3,-2],[3,9,9,-1,10,-10,-3,4,8,2,4],[7,-6,-4,9,10,-9,1,-6,1,-2,-7],[-3,-1,-2,-6,-6,10,1,1,-9,-3,-9],[-6,-9,-10,-7,7,8,10,3,-10,-8,9],[4,1,-4,-2,9,9,-7,10,-6,6,5],[5,4,4,-6,3,-6,5,-9,2,-5,7],[-10,7,-3,7,9,-7,7,-6,6,-5,4],[-2,-7,10,-7,-5,5,10,-5,10,-1,8],[8,-3,3,-9,-7,9,-7,-5,7,1,2],[-2,8,-10,8,-9,1,-1,9,1,-10,10],[-9,-4,-7,-10,4,-3,-5,3,10,-8,-3],[9,-8,10,3,7,-6,-10,-6,1,2,4]],[[8,1,-1,-1,9,-8,10,-6,1,7,-6],[10,7,2,5,9,3,-3,8,-9,-4,5],[-7,9,6,-5,2,4,9,1,10,-9,-7],[-7,6,3,5,6,-8,-1,-2,7,-4,-5],[5,-6,3,9,-8,6,-4,-4,4,-2,6],[7,10,5,-2,-6,6,1,-9,-1,7,-9],[-6,-2,2,5,7,-9,3,-10,6,-4,-10],[-4,-7,6,-4,-7,-7,-5,10,10,-9,4],[-4,-10,4,5,-9,5,-5,10,-5,2,-5],[-4,6,-2,-2,10,5,-6,-4,-5,9,-8],[2,-6,4,-10,6,4,7,-8,6,-4,-5],[-2,-3,-1,6,9,-7,4,4,2,7,3],[-4,2,8,-1,-10,2,-9,-8,-4,4,3],[-7,-3,8,-5,-5,-1,-8,-4,-1,-1,10],[8,6,4,-5,9,5,-9,3,3,4,6]],[[-2,-1,7,-8,4,4,9,-2,-6,-4,-5],[5,10,8,3,-4,-6,-7,-8,9,-2,2],[2,4,6,-10,-5,-3,-10,-7,-6,-7,-7],[-5,-3,9,-7,5,-6,7,10,-5,10,-10],[-8,5,-1,4,1,4,-4,-9,3,-8,6],[-3,3,-3,-5,-5,-1,6,-7,1,10,1],[-8,4,-4,-2,-10,-7,2,-5,-3,9,5],[8,-6,7,4,-1,-8,-8,7,-3,7,-9],[-1,8,-9,10,4,5,6,-7,1,7,-5],[4,-4,-1,8,-2,6,-3,-6,-8,-10,2],[4,8,-9,7,-9,6,-7,-6,8,-3,7],[9,6,4,10,-2,5,-2,-3,8,9,7],[2,-10,-9,-5,7,-10,1,1,-1,-10,2],[-3,-2,-9,9,-4,7,-3,6,-3,-2,-8],[-8,-6,1,-9,9,-8,-5,1,-10,6,10]],[[-4,-5,-9,-1,-10,5,9,-4,-9,-10,-6],[-3,-8,-2,10,4,-8,10,-6,6,9,-3],[-9,7,-2,6,-4,4,10,8,8,4,1],[-5,7,2,-5,4,-4,4,10,3,-7,-5],[5,-8,5,10,10,-10,9,2,-9,-1,-9],[-8,-5,2,1,2,1,8,-6,2,6,-10],[6,-2,-10,7,-8,-8,-9,6,10,-6,9],[-8,4,10,2,8,2,4,-3,-1,7,3],[-2,5,-8,-4,5,-2,2,1,-2,3,-7],[7,-7,10,-10,1,5,-5,-9,1,-2,2],[-5,-1,2,-4,-2,-10,1,-4,-4,-6,-1],[1,1,3,-5,9,-10,8,4,-10,2,5],[9,-6,-2,-1,3,-2,-5,10,-2,9,-9],[3,-10,-10,-4,-6,4,-7,6,1,1,4],[8,6,-2,1,6,5,-8,8,9,4,-8]],[[10,-8,-3,-4,-7,-2,-2,9,-6,-9,1],[-5,1,3,-7,-6,-4,8,5,6,-4,-6],[3,-4,-2,-1,2,2,-1,-9,-7,-7,-9],[-10,-9,-8,-7,3,-10,8,-10,7,-4,-5],[5,5,-9,4,-9,4,-5,5,7,-9,-3],[-2,-7,-4,7,5,-5,3,5,4,6,-4],[-2,-10,-6,-7,9,1,8,6,-7,5,-3],[6,8,4,9,2,8,10,4,-3,9,-8],[1,10,4,2,4,7,-9,5,-2,7,2],[4,-7,8,2,2,-9,-3,-8,2,4,-5],[4,-1,10,6,9,7,-8,-1,8,-2,-6],[1,10,7,5,-9,5,-3,9,-4,-1,4],[5,-8,9,-1,6,10,-5,10,-10,-7,8],[-9,-1,-7,5,2,7,2,-1,-2,4,1],[-8,7,1,-2,-8,-7,-5,3,-6,-9,-6]]], dtype = "uint8")#candidate|745|(13, 15, 11)|const|uint8
var_746 = relay.var("var_746", dtype = "uint8", shape = (13, 15, 11))#candidate|746|(13, 15, 11)|var|uint8
bop_747 = relay.bitwise_xor(const_745.astype('uint8'), relay.reshape(var_746.astype('uint8'), relay.shape_of(const_745))) # shape=(13, 15, 11)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
var_751 = relay.var("var_751", dtype = "float64", shape = (90,))#candidate|751|(90,)|var|float64
var_752 = relay.var("var_752", dtype = "uint16", shape = ())#candidate|752|()|var|uint16
var_753 = relay.var("var_753", dtype = "uint16", shape = (196, 2))#candidate|753|(196, 2)|var|uint16
call_750 = relay.TupleGetItem(func_285_call(relay.reshape(var_751.astype('float64'), [10, 1, 9]), relay.reshape(var_752.astype('uint16'), []), relay.reshape(var_753.astype('uint16'), [392,]), ), 5)
call_754 = relay.TupleGetItem(func_290_call(relay.reshape(var_751.astype('float64'), [10, 1, 9]), relay.reshape(var_752.astype('uint16'), []), relay.reshape(var_753.astype('uint16'), [392,]), ), 5)
bop_765 = relay.floor_mod(call_750.astype('float64'), var_752.astype('float64')) # shape=(392,)
bop_768 = relay.floor_mod(call_754.astype('float64'), var_752.astype('float64')) # shape=(392,)
bop_783 = relay.subtract(const_745.astype('int16'), var_752.astype('int16')) # shape=(13, 15, 11)
output = relay.Tuple([bop_747,var_751,var_753,bop_765,bop_783,])
output2 = relay.Tuple([bop_747,var_751,var_753,bop_768,bop_783,])
func_795 = relay.Function([var_746,var_751,var_752,var_753,], output)
mod['func_795'] = func_795
mod = relay.transform.InferType()(mod)
mutated_mod['func_795'] = func_795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_795_call = mutated_mod.get_global_var('func_795')
var_797 = relay.var("var_797", dtype = "uint8", shape = (13, 15, 11))#candidate|797|(13, 15, 11)|var|uint8
var_798 = relay.var("var_798", dtype = "float64", shape = (90,))#candidate|798|(90,)|var|float64
var_799 = relay.var("var_799", dtype = "uint16", shape = ())#candidate|799|()|var|uint16
var_800 = relay.var("var_800", dtype = "uint16", shape = (196, 2))#candidate|800|(196, 2)|var|uint16
call_796 = func_795_call(var_797,var_798,var_799,var_800,)
output = call_796
func_801 = relay.Function([var_797,var_798,var_799,var_800,], output)
mutated_mod['func_801'] = func_801
mutated_mod = relay.transform.InferType()(mutated_mod)
const_945 = relay.const([[[8.434864,6.354775,5.034816,9.292021,-5.368201,8.407829,-8.408787,7.720060,8.464855],[2.446515,1.759550,-9.089034,-5.287980,1.508525,-4.702900,8.335494,-0.086093,8.509752],[2.849387,-8.609839,-4.704420,-5.017239,-1.087812,7.007681,-9.796845,9.907053,1.114641],[-5.918172,-7.280585,6.675420,-3.307955,-6.608604,0.001984,-4.030274,-1.674872,-4.364588],[-2.271468,-1.931480,-8.013472,2.873862,-6.594882,5.050870,-2.019170,-1.107953,5.642981],[-5.571822,-9.986180,-8.132867,-8.606906,1.264018,0.970987,9.204973,-4.573015,4.714847],[-5.873660,5.522372,3.716359,-1.116051,-6.938420,-0.094736,-1.955790,-1.351154,0.227798],[-2.419923,5.071052,8.247229,8.949290,2.737259,-4.445260,1.853081,4.893025,8.554082]],[[4.388164,-7.435079,-9.148547,5.255271,4.677166,-8.646727,-6.087041,0.922131,-6.238622],[5.274657,8.429716,9.091117,3.377630,-3.887815,7.190464,7.029198,0.041702,0.010849],[-3.377642,-4.685496,-1.279427,-5.956046,1.470804,-1.007001,-5.022496,-0.959430,-6.279556],[0.330350,-3.611427,-5.736545,-3.928972,-7.708809,-0.343957,6.927131,-2.333578,-1.736001],[-6.666255,4.343042,-1.840836,4.227512,8.051116,5.377422,3.931981,4.805516,-3.878157],[-0.098143,2.779413,4.953610,-1.603377,-6.571340,-3.257537,7.131750,-3.189992,1.119176],[-1.405828,6.431647,-9.121398,-1.896561,-9.057856,7.949994,5.950556,4.548038,-9.925465],[-7.940552,6.486617,2.363318,-3.515367,2.664501,4.258028,2.820020,2.253532,-3.106925]],[[2.503239,-7.225108,-0.926043,9.962093,3.608370,0.685060,0.162208,-1.148078,-8.994553],[-1.798752,-9.274153,7.735525,-8.215015,1.137082,-3.598787,3.309300,-6.703624,6.999923],[4.935105,4.660583,1.621732,-3.592184,-4.184008,1.489683,-5.085797,4.993458,9.992519],[9.469924,-4.056195,-3.038742,-6.029516,-5.641517,2.895165,2.255234,-3.679858,5.586895],[0.509586,-8.297176,-0.225090,3.711975,-3.581099,0.307990,0.002196,4.653660,4.425468],[-6.722476,-3.725537,2.965829,-8.824712,-7.204408,5.859701,-2.306207,-4.665261,-1.933236],[8.221641,3.920220,9.322583,6.445172,7.099935,-5.354820,-6.831133,-1.481668,6.736203],[-7.049780,6.870626,9.380252,-5.011313,2.403004,-3.710816,2.018265,1.769879,5.046172]],[[6.191083,-8.521816,-7.061251,-3.182078,4.534022,1.911105,-0.072452,3.780735,-7.609290],[-6.749264,-1.520593,9.096987,9.185048,-0.395556,-8.951897,1.207799,9.595211,-2.288235],[-8.900326,-3.258602,-2.304691,7.757927,-0.270406,-3.068258,6.263399,8.851873,-1.531841],[-7.161734,-1.894454,5.137718,4.810845,-4.463256,-9.654990,-0.550497,9.565909,-6.001030],[-4.920190,-6.725051,-7.002804,8.154833,4.952377,-9.553076,-7.077105,-2.079897,8.193596],[8.818877,-4.368152,8.432099,-9.931733,-4.138544,6.727460,6.862903,-2.328055,-8.953087],[-2.623274,-7.495697,-3.042335,-2.036316,6.625331,2.681227,-0.222402,9.279251,9.100555],[1.256417,-7.733553,2.701783,-2.985773,9.078136,4.035004,-4.598146,-3.076149,3.130377]],[[9.817268,0.504774,-6.249645,5.210045,0.688518,-5.650377,-0.387178,-7.303816,4.238503],[-8.925420,0.663021,-0.988856,4.193989,-3.746845,3.360275,-0.798037,0.410862,4.942085],[5.706623,-8.722617,-6.430611,7.829111,-2.062453,1.903884,2.684423,-6.488143,-6.071606],[4.788359,0.168219,6.387852,-0.712985,7.988494,1.775387,1.136075,2.941545,4.872078],[-5.849916,-5.400381,-7.127066,-5.866681,2.455235,-8.023006,8.749530,7.408521,-0.417664],[9.923697,2.123112,-4.958198,-2.112110,7.179156,-8.494479,9.938638,7.439531,2.960009],[8.792009,5.172495,-2.758330,-7.784681,-9.784583,-7.508502,-7.565558,1.492707,-2.112372],[-7.404154,8.360801,5.302405,-9.178683,0.473230,-8.973455,-5.727883,-1.179001,4.954494]],[[3.676524,3.195741,8.866287,-1.820790,9.594399,0.824025,-2.687874,-5.360600,9.229726],[8.888660,-8.108431,6.559406,9.453666,9.046836,-6.858515,2.500701,-6.037205,2.933198],[-8.893697,-5.573578,8.714336,-1.126715,0.969097,3.905032,-8.175733,7.719464,0.524771],[8.988899,-4.079122,7.224286,2.165072,-2.207448,1.166635,-2.583021,-8.464363,5.253318],[-9.146133,3.290088,6.492316,9.635656,9.924091,-7.303295,8.372700,2.841000,-8.250079],[-7.395831,1.533449,-1.263057,-8.120540,7.935270,4.377107,-8.028584,-0.096322,1.713663],[9.108567,6.555885,7.787506,5.844136,9.006174,-2.694959,2.013764,-2.405703,-0.026346],[5.936305,1.943618,2.086146,-8.365265,-6.328050,4.332960,-9.441286,-7.202720,3.750935]],[[1.373678,0.284901,2.178699,9.427069,-6.877255,-3.257984,-8.879039,-3.376762,-7.298470],[-7.796936,5.618498,2.152607,-8.475852,3.980675,1.761477,9.455074,-1.309353,5.679424],[-2.971902,-2.913246,-3.023671,6.864548,7.846644,-5.705439,2.701662,-3.725539,-1.849356],[3.121300,6.718101,0.830518,2.089220,1.378025,1.121332,-3.683855,6.126073,4.324509],[0.132296,-9.924362,-8.958277,-3.417545,4.277372,-7.139827,-2.950615,2.769240,2.246828],[-5.698620,6.873168,-4.232460,-9.053484,-6.525260,6.882158,-6.013963,9.492918,5.024448],[2.174443,7.204658,-6.871302,-4.085530,-9.077902,-1.133939,8.330975,-6.806626,6.080352],[2.693555,2.934805,2.166649,5.851994,2.232765,0.424514,-8.823202,-8.895970,2.440370]],[[-6.196942,6.652372,8.615917,-6.472084,-1.135027,4.711932,1.631820,-9.969718,1.651272],[7.218076,5.840704,6.752720,-1.506505,1.425787,0.663720,2.111679,0.171375,-6.233492],[9.559352,2.646467,-5.644686,9.478908,6.216715,-6.651525,9.150605,-8.815780,4.809825],[1.508812,2.491477,-2.224115,-5.525331,-7.440309,5.319961,-1.180026,8.489927,-8.850298],[3.072309,9.429025,2.384887,3.440290,-9.024516,0.240747,3.425567,3.697958,-6.398686],[0.918052,5.087791,-0.368425,7.336674,2.016134,-7.437531,-3.043351,8.345129,-0.074828],[6.605841,-0.167516,3.080102,4.461762,-2.651218,-8.270953,3.952149,2.331036,9.874604],[2.894443,4.084191,-4.942718,-6.143144,8.887011,-0.575574,7.767810,9.986217,8.796930]]], dtype = "float64")#candidate|945|(8, 8, 9)|const|float64
uop_946 = relay.rsqrt(const_945.astype('float64')) # shape=(8, 8, 9)
output = uop_946
output2 = uop_946
func_954 = relay.Function([], output)
mod['func_954'] = func_954
mod = relay.transform.InferType()(mod)
mutated_mod['func_954'] = func_954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mutated_mod.get_global_var('func_954')
call_955 = func_954_call()
output = call_955
func_956 = relay.Function([], output)
mutated_mod['func_956'] = func_956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_959 = relay.var("var_959", dtype = "float32", shape = (13, 8, 3))#candidate|959|(13, 8, 3)|var|float32
uop_960 = relay.asinh(var_959.astype('float32')) # shape=(13, 8, 3)
output = uop_960
output2 = uop_960
func_963 = relay.Function([var_959,], output)
mod['func_963'] = func_963
mod = relay.transform.InferType()(mod)
var_964 = relay.var("var_964", dtype = "float32", shape = (13, 8, 3))#candidate|964|(13, 8, 3)|var|float32
output = func_963(var_964)
func_965 = relay.Function([var_964], output)
mutated_mod['func_965'] = func_965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1019 = func_954_call()
call_1020 = func_954_call()
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
const_1032 = relay.const(1, dtype = "uint16")#candidate|1032|()|const|uint16
var_1033 = relay.var("var_1033", dtype = "uint16", shape = (14, 28))#candidate|1033|(14, 28)|var|uint16
call_1031 = relay.TupleGetItem(func_104_call(relay.reshape(const_1032.astype('uint16'), []), relay.reshape(var_1033.astype('uint16'), [14, 7, 4]), ), 0)
call_1034 = relay.TupleGetItem(func_107_call(relay.reshape(const_1032.astype('uint16'), []), relay.reshape(var_1033.astype('uint16'), [14, 7, 4]), ), 0)
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
const_1039 = relay.const([5,6,-7,-4,-5,-3,7,5,4,7,-8,-8,-2,-6,-2,-7,-10,-2,9,-9,6,5,6,1,3,-3,-9,-10,1,-5,7,-3,4,4,-1,10,-5,-3,8,2,-4,-2,7,-3,10,-3,-2,3,-2,-1,-10,-4,-9,5,-3,-9,-3,9,5,-2,1,-3,4,9,3,-10,-3,7,1,9,10,-10,-1,6,-2,10,-4,4,-8,-3,-5,5,5,-1,-7,-10,-8,-3,9,4,8,5,-8,-9,4,-9,-4,8,-10,8,9,4,10,8,-7,-3,8,-6,-8,3,8,2,10,-3,-9,8,1,-7,1,2,-8,2,4,-10,-4,6,-9,-4,-8,-9,-10,-5,9,1,7,-8,8,-9,-8,5,-4,-4,9,1,-4,6,-7,2,5,6,9,-7,3,-7,6,3,-3,4,2,1,8,-10,10,-1,-7,7,2,-3,1,-6,-4,-9,-3,-8,10,2,9,-1,6,-2,-10,1,4,-6,3,-1,8,-3,3,-7,3,1,3,-10,5,-2,-2,8,6,-10,4,6,-9,5,2,-7,3,-8,-1,5,-2,-2,1,-4,-3,-8,4,-9,4,-9,7,-5,3,5,4,9,-9,4,-10,-7,-1,-2,-8,1,6,-10,5,1,9,-9,8,-8,-10,4,-1,3,-5,-8,-7,-5,-9,3,-8,-2,-2,9,1,-4,-2,-1,9,-4,10,-7,10,-7,5,-5,-6,-2,-7,8,-8,9,1,10,5,-6,5,1,3,8,-9,3,-7,-6,5,6,-6,-1,6,-1,-7,-5,10,10,5,-3,1,4,2,6,-3,9,7,10,-3,-6,8,3,-9,-3,-2,-3,-4,-3,-4,-4,-1,-8,-4,6,9,-8,-5,-5,7,-1,6,-4,-8,7,-7,-10,-3,-9,-9,4,4,7,4,-4,-1,2,10,6,-2,-1,-5,7,1,4,-10,-10,-2,-4,8,-7,-6,6,4,3,6,-7,4,8,-10,9,-3,-4,7,-1,-9,-4,9,10,-2,1,6,-9,-2,8,-9,3,6,-7,9,-8,8,3,3,-3,8,-5,2,3,-10,9,7,-9,9,-6,4,7,7,1,7,7,8,8,-5,-7,3,4,7,-3,-1,-7,4,-9,5,-10,-4,8,10,-3,6,-10,5,6,-9,-8,-9,-7,8,3,6,8,2,-1,9,-5,-5,3,-1,3,10,-2,6,-2,-3,-10,8,-8,-1,3,6,-6,-5,2,7,-9,7,-8,9,1,-6,-3,-10,-7,4,2,7,1,-6,9,-10,-2,10,-2,-3,4,-6,6,-10,7,-2,-3,7,-3,9,-6,-2,6,2,2,-4,5,-3,-6,-5,-8,3,7,7,3,-4,5,-1,8,2,7,6,6,4,-2,-4,-7,2,-7,6,5,10,5,-2,3,3,-9,-5,-8,-6,9,3,-9,1,-3,5,-4,7,-8,-2,-4,2,-6,10,-7,6,-8,-1,-5,-2,-9,6,6,5,-4,-5,-4,2,4,-5,8,-7,2,3,2,6,6,5,5,4,-6,8,5,-9,-9,2,-6,4,-8,-5,-4,-10,-3,10,6,9,-4,2,-6,10,3,-3,-2,-7,5,9,-3,8,5,-5,-6,10,1,1,3,5,5,7,6,-6,-7,8,3,5,-8,8,7,3,-2,-7,6,-2,-9,-6,2,4,6,-9,-10,8,7,1,8,3,-8,4,2,5,-5,-4,5,-8,2,2,2,-9,8,6,-5,5,-9,7,6,-3,-3,10,7,-10,5,-10,-6,7,-10,-9,4,-8,6,6,-7,3,-8,-9,10,3,-3,-2,3,-2,-4,7,8,1,-1,4,-6,8,-1,-6,-6,6,-3,10,-10,8,-5,2,-2,-7,-9,-1,-9,8,5,1,-4,-5,-7,-2,7,-9,-5,-6,-5,2,-4,-9,-1,3,3,-9,2,4,9,4,-6,-8,5,9,-5,-4,-1,1,1,10,-9,1,-5,9,-10,7,8,-8,9,5,-6,2,3,1,-7,-6,-10,-8,-3,-8,-1,-1,-2,4,-6,-5,9,2,-1,5,-6,4,9,2,8,7,4,-10,8,-8,-4,-9,-10,-6,5,-1,-2,8,7,-3,9,6,-9,2,10,-2,-4,-9,3,7,5,-1,-3,8,9,6,-5,-1,-9,-2,2,-5,-6,-1,10,-6,-6,-1,6,-10,5,10,10,-4,4,-8,-1,-3,7,-5,1,-1,-8,7,-6,-8,-5,-10,-2,6,10,10,-6,8,6,2,7,-4,8,1,-8,-6,9,-10,10,-7,-9,-10,10,2,-3,3,8,5,1,-3,-6,4,4,-8,-9,3,-2,4,-2,9,-1,-5,2,-6,-7,3,-7,-9,-10,-3,2,8,-10,-9,9,10,-2,8,7,8,4,-5,8,-9,-3,-9,10,-2,-10,-5,-10,-10,9,8,-3,-10,-8,5,3,8,8,-2,7,-1,6,7,-10,-8,-4,-7,-3,-1,1,8,-1,1,-4,-8,-8,7,4,2,10,2,-4,-8,-3,-7,6,-10,10,4,6,-4,-2,10,4,7,10,7,-8,3,5,-10,7,-7,3,2,5], dtype = "int8")#candidate|1039|(960,)|const|int8
call_1038 = relay.TupleGetItem(func_476_call(relay.reshape(const_1039.astype('int8'), [16, 10, 6])), 1)
call_1040 = relay.TupleGetItem(func_478_call(relay.reshape(const_1039.astype('int8'), [16, 10, 6])), 1)
func_183_call = mod.get_global_var('func_183')
func_188_call = mutated_mod.get_global_var('func_188')
const_1043 = relay.const([-9.193307,2.982948,4.575309,5.029315,-8.095524,3.202706,5.828347,-3.409016,-6.529522,-5.769485,7.136190,-9.373251,6.170772,-8.537967,-7.057251,4.997682,-2.307618,6.137623,2.873634,-7.992859,-7.122903,-3.261100,-8.772037,4.036680,4.576644,7.040655,-5.457166,-3.882381,-8.959203,-7.103231,-1.859483,4.072458,6.944703,-5.862016,1.321449,-8.557496,5.392992,-9.293949,-3.240086,-7.319442,9.449956,-8.546830,3.233004,4.075840,6.499038,-1.196606,-5.518187,-9.452075,9.652841,-2.476457,-8.719994,-0.689533,-2.506160,5.287858,-0.043869,-4.193261,8.700928,8.593916,3.954915,-4.564251,6.590355,-6.117142,-0.527671,8.075082,2.226382,2.895177,-6.505922,6.805416,-7.003290,1.515779,-6.706880,-1.713878,0.867825,7.020355,9.757166,4.120099,-1.365887,-7.784298,4.238442,-7.290737,9.397714,-7.705073,8.766508,-0.612015,-4.921318,9.284407,0.114997,3.269294,8.652100,6.564528,-0.587260,6.570515,-9.468223,-5.854098,4.343599,6.726586,-1.753082,3.539869,8.461671,9.479417,7.502644,8.694605,-4.302469,1.506429,8.458194,-6.773805,-5.011767,-4.169687,1.020436,-9.163770,-2.394077,-3.662384,0.044801,-0.322884,3.356424,-4.799885,-7.951232,-5.930073,-8.867960,5.397763,-5.979831,-8.358350,3.411256,-4.161564,7.123696,-3.375510,-1.228506,-4.515872,-4.262862,-6.741887,-4.568063,-5.640053,-9.739070,1.430888,6.618337,-3.865268,4.911344,-4.053454,-2.305750,9.520014,0.479206,0.098051,-2.294323,1.779482,-3.841885,7.563630,-5.176973,-8.176627,-7.657036,-3.456804,-0.463127,5.660046,5.930518,-2.033385,-7.623491,0.518428,4.487157,9.972057,-2.943248,-7.321531,5.012564,2.010205,-9.366423,-4.552681,3.502656,-8.492497,-1.633630,1.464810,2.220614,7.365881,-0.233394,5.156297,1.395820,9.088648,5.585090,-7.061775,1.802318,-9.618089,8.449664,-9.718452,5.170998,-7.159439,7.000520,8.896817,-0.696782,-2.420100,7.070335,-7.803220,2.851338,-5.832850,-5.167195,0.758391,-9.676125,5.075834,-2.734500,7.108998,-4.882988,1.669249,0.971244,-8.907438,1.864942,-9.012153,-8.520967,2.979117,9.718603,-0.026467,3.484302,0.105976,5.617682,2.617765,2.861790,-5.708252,0.990676,2.737342,-0.908895,-3.074106,-4.588755,9.789334,7.131708,-7.903608,-5.974407,-1.006625,-1.321983,-7.049509,-8.329659,-2.532924,-9.103565,5.714197,-5.105533,-5.063908,-5.914106,9.379157,-2.597731,0.942942,0.706497,-6.611719,-7.350046,0.495936,-7.295705,6.004917,-4.972709,-1.486801,-1.262047,-7.968051,-0.932403,8.056059,0.688276,-6.733252,9.025985,1.071419,4.120908,2.809204,7.573748,8.384002,-0.629346,-4.247869,-4.896142,3.278251,7.764331,7.517930,-2.153027,-1.235488,7.613667,9.105140,8.330108,-6.468832,-2.545900,-3.256666,-2.510938,-0.527510,-4.657298,9.776423,0.698015,1.004089,-0.522314,9.180343,-2.013702,-0.674439,-1.761730,-0.476809,2.139614,-3.941857,-5.526083,2.388984,-2.127172,7.345934,-4.594987,1.811018,1.842456,-9.671700,-0.104276,6.870382,-1.386405,-8.913665,5.884644,-2.782664,0.117139,9.332553,9.425983,0.136184,-1.730861,4.532232,0.379260,-5.544183,7.720370,4.716349,-0.722999,-3.963726,-1.390472,2.404111,-1.511864,-0.478219,5.854007,0.825796,-7.381217,-9.010750,-0.525880,-6.086000,2.699351,-3.374406,3.636584,-7.638409,-0.694199,-0.437074,0.201361,9.868477,3.038754,-9.988296,6.096416,-9.757595,-1.492216,-3.012564,-2.391901,-8.518535,8.196356,-5.324002,-4.040120,0.694772,-1.358908,-5.551070,2.416850,1.016328,4.853183,8.684239,8.130359,9.418383,7.527386,-9.504279,-2.145370,1.758999,-6.850141,-5.030276,-2.534660,3.293900,-6.057065,-8.028037,2.308680,-7.285574,0.720287,1.047709,6.841411,-0.207201,-3.431526,-6.417518,-9.248913,4.700236,-7.221849,4.626382,7.116654,8.187774,-0.937959,8.459934,2.361272,4.448966,-0.951859,3.242532,1.330880,-6.059469,0.232555,-8.953924,-5.078454,-0.478453,4.588670,8.694155,-1.997782,-1.375510,-2.532281,8.398403,-5.813727,5.124170,5.443731,-8.989422,-7.893821,7.887657,-0.424337,8.793077,1.830233,6.863181,-1.852725,2.362524,2.820905,4.150240,5.725799,2.076064,0.103072,-1.676127,5.783324,4.311967,7.519543,3.532265,-0.926180,-8.964563,-0.749486,2.945745,-0.125758,-3.692827,-6.098254,-4.176459,-0.713770,2.231310,-4.575413,-7.098500,4.071179,6.284364,-9.825320,-5.983368,-1.903557,-3.284543,-4.837909,5.666303,-4.300414,-2.071012,7.415340,1.400290,-8.744496,-8.188108,-2.452568,-1.369576,-9.532437,3.532075,9.791298,-6.530779,-8.339748,-4.717011,-0.902468,-1.384454,6.386419,7.604608,5.003596,-1.592793,-6.611745,-1.278636,-4.013830,-1.045981,-8.703102,6.290324,4.663302,2.421258,9.149514,-2.204892,5.918700,-4.692291,2.744247,-3.433476,-1.738049,-5.425838,7.087920,-7.388633,6.600628,-0.144250,-8.880302,1.272741,4.841321,3.082385,9.631961,-9.132857,-4.833712,2.493759,3.461454,-2.598169,6.357423,-5.632198,5.478922,-7.939015,8.340004,4.880155,-8.729985,9.524877,7.063352,-4.476921,-7.039114,-7.256829,-2.316188,-6.818899,6.616812,1.027059,9.620196,4.104268,-0.921839,6.249112,-5.136500,6.873698,-6.566999,9.562871,-1.723865,-4.687317,-6.365122,9.565813,-5.848616,-7.380924,0.186585,-2.102073,6.722999,7.185326,2.168256,9.135265,3.372204,1.458341,4.381250,-7.933008,-3.744925,-7.086373,7.455404,6.218007,1.800493,1.279692,-5.258339,9.275721,2.354368,8.957674,-5.556856,-0.795725,-7.100493,8.523085,-7.496568,2.428883,-1.573662,-9.403271,1.771217,4.104289,8.799383,4.836878,1.527864,-1.399928,-1.020053,8.408573,-4.525062,-0.546195,6.949465,8.520427,2.207129,0.455346,-2.336890,4.109838,3.178754,0.158580,0.650963,-8.486221,0.287773,5.524690,8.104210,-5.570617,2.825424,-9.804334,-9.751539,-2.279125,-9.874023,8.883685,7.981191,-2.159857,-0.786778,-8.782362,4.791663,-2.796549,3.112345,-7.533757,-1.740771,-9.457496,0.802679,5.668126,-7.605730,-0.058778,3.085962,-4.988922,-5.735853,1.924444,-5.865559,7.926796,9.879497,-6.811611,3.429992,1.746432,-2.716119,7.598164,-2.485109,5.357603,2.557894,0.154240,-2.871631,6.354248,-3.624380,9.198897,-0.625810,-3.405060,-8.082974,-6.651261,7.026203,6.243301,-4.639874,-1.448962,6.408427,6.712459,8.658709,2.095231,-9.728060,-5.878287,-3.858377,3.200786,-8.726852,-7.476086,2.070692,6.891420,-5.085968,-7.396651,7.609155,8.088058,-3.152349,2.940502,6.506399,3.684756,-7.165506,-6.726256,0.677676,9.975786,-6.020516,-0.282047,4.278306,-9.691469,0.381796,-3.033033,5.804813,5.509815,-2.366137,2.660433,-9.814839,-2.217148,6.011501,2.537944,-0.873167,-3.313916,-6.968467,-7.437621,-3.920951,2.341667,8.580162,2.174444,7.535856,4.513288,6.175935,7.449197,1.730964,-3.266497,-7.422376,-9.134550,6.532512,7.068638,1.823112,7.623895,2.889972,1.547204,-0.838539,0.678703,-2.201490,7.554382,-7.582115,1.395045,-2.524622,-9.325471,7.246643,-1.970029,5.453838,-6.120885,0.151386,1.070240,-5.064669,-4.428863,8.868540,-7.922398,-6.167443,9.211720,-3.292741,-2.590782,0.779760,6.671238,0.110068,4.251206,-6.103224,-3.769794,4.890397,-4.429164,-1.258968,-1.344707,-5.927303,6.111138,-3.618877,3.260787,8.672326,-5.481154,-4.920245,7.051678,5.257996,6.397073,-5.544242,4.934719,4.707918,0.890291,-5.198177,9.150259,-8.511567,6.617894,0.134132,2.761285,4.446037,0.480945,-8.331236,8.182168,4.509928,4.186699,-9.642001,9.571813,-0.341256,-7.493567,-8.977707,0.504200,-7.732832,-4.778380,-1.794808,8.606470,9.031792,2.941088,7.437027,7.165822,3.424746,8.723475,3.031349,4.669255,5.633507,4.853369,5.521321,1.247971,3.364737,-8.450142,6.206854,8.492359,-0.804757,-5.196825,-1.927860,2.210227,-1.601840,6.510326,7.154121,2.174421,-7.951444,8.654914,-2.869726,-9.616007,-7.789586,3.963911,-5.198914,-1.467519,0.565036,-8.627616,-0.349333,-1.726336,-7.940579,-4.638710,-4.032107,1.995406,-5.719871,7.788469,6.990797,3.425771,-0.380913,1.197887,7.635966,0.418172,1.854628,-4.895854,7.972348,-8.401769,5.895545,-2.276376,5.616865,-0.677936,-8.168900,-0.532324,8.790588,2.833315,-5.545492,-2.995618,-7.030139,-1.732668,-3.029022,3.000516,2.030162,3.914533,-2.295842,6.089228,7.550341,-8.611683,4.050300,7.119795,-9.380926,-9.576348,-5.841734,-2.235170,-0.115288,-8.019656,-5.450892,2.500792,1.400202,-3.548260,-3.401078,5.006954,2.287249,9.026375,-6.889906,-0.776086,5.530728,7.559359,1.538708,-9.816413,7.117255,-4.626795,-2.616826,6.442633,9.271639,0.506868,9.735490,7.263246,-4.639766,3.037893,-1.730717,5.031426,-2.786269,8.983961,9.926147,-5.035909,-8.781167,-0.345644,-9.344432,-6.821942,7.959422,6.993740,1.664318,5.601985,9.658897,-1.876027,-4.392579,1.704341,0.262073,8.388528,-3.422959,6.853912,-1.740174,5.288240,9.158377,-6.615300,7.943647,-2.308283,3.515803,8.917512,-0.195846,-4.427354,5.769311,-5.715273,-7.667539,8.042728,3.291517,5.210737,-1.315017,-2.777532,-5.124916,-9.203746,-7.170694,-0.227026,4.947473,-4.780077,-6.021105,-5.904863,-2.383534,-7.395306,-2.368811,3.048696,-0.380688,-3.498814,0.841750,-1.575050,8.953574,1.272938,9.956513,7.149665,9.840855,6.929443,-1.036797,-5.558252,-0.531996,9.748251,-7.919599,-1.889775,8.404236,-8.532524,2.657843,1.206167,2.328002,-9.083589,-3.234369,1.513911,9.669852,9.448776,9.918530,-7.280843,-4.499831,-7.335411,-8.854316,3.359195,5.898926,-5.447611,9.550944,-9.037041,-2.100684,2.652271,-5.699849,5.113745,4.411933,-3.785427,-6.229090,-2.184472,-2.461335,6.995865,7.626790,2.609451,-7.969112,1.788201,2.750916,6.303418,-9.087120,-1.721082,3.888559,-9.013832,0.427144,2.373276,5.676912,-6.625173,9.202241,-0.929980,8.328770,3.827274,1.791056,8.402122,-9.749393,6.500819,5.802052,-2.256953,4.271105,-8.034923,4.997657,-0.729664,2.288257,-7.466315,-8.704959,-4.758086,-8.083600,-8.257544,-3.091407,-6.374524,-4.697542,-7.002518,-5.079628,-1.029153,6.052998,-5.196056,2.323487,-1.457893,6.316608,0.982922,5.420555,7.837100,5.951645,-3.371313,2.819002,1.450162,-3.301830,-1.781780,-9.018241,-1.970337,3.590253,-2.775803,5.941208,6.552647,0.249593,-7.008394,-3.387915,9.178857,8.758050,-0.112457,-6.826747,-8.548914,1.662189,1.791140,-9.002650,9.106093,-7.533315,-8.577923,-1.933521,6.693422,-5.685268,6.852156,6.309353,-0.827722,-8.687749,-8.002981,-7.833105,6.148295,9.605634,6.303080,-1.723037,6.541630,-6.696268,-9.524045,3.661850,7.225362,5.150662,3.368378,5.276889,-0.384948,-4.229671,-8.901158,0.844846,-5.081082,1.224895,-8.174391,-6.914769,-2.245439,9.433807,-9.462109,-5.288663,-0.426718,-5.624700,5.088770,-3.610921,7.959441,-1.335028,7.508263,1.137222,-5.214074,-8.589063,-4.223850,-0.844072,4.460685,3.909445,-5.082480,4.304601,1.960835,-6.449423,9.811990,-6.744828,3.149625,8.638191,7.992850,-2.931500,6.703085,-9.312082,-8.640944,-7.802407,7.707347,4.675744,-8.452207,-8.423951,-3.768307,-1.730682,7.220227,-6.520239,9.351214,-1.676222,-6.999431,-0.740353,1.378496,2.195166,7.689725,5.733875,3.430585,-2.565960,-9.613246,5.843681,-9.234167,-5.344250,3.091922,-3.533291,-4.389118,0.392933,-2.849503,-5.385192,-4.080311,8.318182,-4.579267,-2.469147,0.527902,8.814752,-0.892070,-4.638636,-2.084938,-3.840225,5.025456,-6.842445,9.137101,-5.179672,6.834148,4.868287,-8.077440,6.515071,-0.422997,-0.482347,-5.723858,7.223891,-8.802756,5.644017,-8.368846,-4.921878,8.442150,-4.081033,-2.106057,-2.902130,2.794167,-8.059513,-8.408606,-9.954874,9.069405,-9.649264,-2.414187,-3.046665,8.043425,1.584704,-2.140796,1.548689,-4.552838,-4.570159,-2.609385,-1.732774,5.444910,5.028093,-3.208483,-9.919266,-5.862280,-7.579729,-8.753632,3.151544,-6.215165,1.619982,2.820809,-4.535756,-3.047439,-7.695722,5.589585,7.401309,3.552498,-0.151121,-8.800180,-5.449045,6.554828,-7.615101,4.107651,5.140689,-1.952953,-2.197545,4.918438,-2.676427,-0.733040,-9.397315,5.408868,-4.823469,-3.597946,4.157229,1.289459,6.867514,-3.791763,-2.180517,-6.811922,0.568920,-3.967922,-8.501394,9.692267,-4.817974,6.768400,5.558684,-2.861687,-7.538775,5.811165,0.617191,8.037823,0.177961,-9.591354,4.762707,-4.934334,-0.675738,9.077384,-2.303533,1.192470,-0.540162,-3.993263,3.957745,1.221710,8.925317,1.032126,9.211624,-3.288372,-8.310552,-5.802259,7.912658,2.503871,4.539285,-0.095639,1.504384,-0.877560,-4.591649,9.236613,7.011448,1.276467,5.627139,-5.411327,5.041708,-1.020277,8.674835,-9.083301,0.933538,-7.403646,-2.137010,-8.319988,-4.208278,1.392863,7.522833,2.059944,6.627581,-5.210358,3.003766,6.968098,7.153675,0.562077,-8.785524,8.783468,5.628546,-2.141102,-1.239478,6.752813,-5.039484,5.129778,1.602378,-8.034024,-7.139334,-6.956124,5.270643,-9.002108,1.832263,-4.802379,4.533029,6.930511,1.702967,-2.280911,-2.477364,2.391867,-0.068939,3.401635,0.656628,-8.399242,-6.708196,6.593711,-9.703798,-2.021091,2.074062,7.856975,-6.811565,1.009094,8.447625,2.958589,6.030703,-9.959553,1.008228,-1.613815,3.175474,-7.211716,8.584817,-0.111838,-4.287260,6.142732,4.776198,-7.059603,6.546113,2.689419,-9.025879,-5.765263,1.959812,2.767292,-8.063193,3.600910,9.657552,7.588433,-8.811088,-9.602174,-7.983536,-4.617441,6.883558,6.208033,9.392836,2.759746,1.422618,9.186271,-6.632576,-6.106130,-5.872293,-6.644635,0.717756,-5.091391,9.762051,-1.047443,-4.974647,0.043573,-3.266118,-5.763452,-2.878182,4.607778,-5.478687,-5.887331,5.836306,0.577574,5.835139,4.157308,-0.917010,-5.235753,9.099238,2.934297,4.232114,4.726575,-2.301007,0.845118,0.796540,-2.213507,-7.069887,-6.444358,0.183621,1.526016,4.581653,-6.519476,9.466494,-2.305076,8.630474,-8.761333,-6.117441,-3.914154,-3.400609,3.674902,-0.425198,6.645749,0.021526,0.908735,4.345957,2.386982,7.003210,-7.091949,-0.132172,8.438576,1.794889,-3.860739,1.452345,-4.187845,1.310474,7.220898,8.517998,-2.501728,-7.901028,-9.006601,-8.076635,7.526035,5.875056,-0.836264,-9.013660,5.100664,-6.881901,6.133020,4.929540,6.751860,-4.233616,-6.689871,0.030226,-8.180135,-6.195211,8.925665,-5.193699,7.579630,9.149933,6.488285,7.856369,3.262807,-4.171006,-5.527328,-8.817358,-1.447146,-2.914751,-0.519523,7.505424,-4.572017,9.585584,9.714396,-2.806041,6.776015,-0.522810,8.677178,-2.744062,3.577373,6.621584,-3.501789,9.942311,-6.524753,3.706203,3.270671,5.729034,0.324324,-6.883584,-3.119637,1.558476,-3.353198,-4.247776,0.454445,-2.957151,-0.358665,-8.974239,9.644540,4.629923,-1.303738,-6.359484,-7.247616,0.991383,7.772115,-9.325618,-7.325155,8.103028,4.342105,-3.861472,-5.168116,-6.935840,-2.514655,9.163743,-5.732249,-8.877023,-1.150156,2.756176,-2.722046,-4.449520,-1.651426,-1.577463,-9.275125,9.815579,7.119546,-9.232755,-8.508988,-2.479894,-4.227821,-3.251374,2.890249,2.298976,6.060617,-6.330824,5.388763,8.726956,5.032070,-4.477548,-4.792115,3.102223,1.453890,7.844756,-8.764676,-6.900152,-5.849870,-3.309302,7.386151,3.870145,-9.578567,7.803636,-2.370308,8.375626,-7.083164,2.929881,6.790484,-9.930602,-4.950003,-0.142192,-5.503777,2.273273,0.568535,-2.112972,0.044993,3.808784,1.891124,7.027944,-1.349471,3.976073,-9.341199,9.598748,6.858803,-1.306337,1.242446,4.627986,-2.039855,-5.648011,-2.289152,-1.234618,-9.649476,2.869910,-7.170989,0.053691,2.566857,3.778725,2.412312,1.406787,2.702596,3.001822,-8.324395,-4.316284,2.798092,-0.027523,2.328569,-2.585595,-2.086845,7.064378,-9.291337,9.522316,5.308462,-3.871794,7.209780,7.191634,4.468875,-6.945048,2.063493,-6.802185,2.594175,-2.397325,-4.826523,6.471360,-3.494655,2.348859,9.366644,-5.353501,-6.687009,-0.456119,-1.023007,-0.947021,-1.834940,9.398640,8.148077,-9.153328,-9.293850,7.498241,7.176267,-5.675720,7.381824,1.626315,-9.766341,7.266472,-5.835056,6.698485,1.302277,-7.022405,-7.168601,-7.030598,-8.342044,-5.312449,6.456491,0.973799,-9.781098,8.140965,8.675150,2.408742,-3.401053,-7.902546,-8.513159,-5.742409,2.970202,1.282306,-9.670493,7.640611,-5.705139,-5.580409,3.274424,8.219951,4.532297,2.818140,7.157002,-1.712822,4.237540,-1.702482,-6.049685,-1.547216,1.583968,0.603098,7.764869,-8.986582,7.659929,6.080766,-7.246331,-4.765135,3.881779,2.932754,-4.649452,2.856122,-2.656847,1.546180,-3.995440,1.023139,5.683672,3.291216,1.421160,2.369278,-1.857797,-9.898357,9.244738,-7.481300,-8.767815,6.509508,-9.827472,2.385307,-9.184153,0.414590,-4.067466,-1.868474,-4.648352,-8.456236,-5.995115,-0.538867,-6.713234,9.656205,5.141165,0.783140,1.801210,4.126787,3.749135,1.258839,2.053222,-5.005889,9.005285,-6.964164,-9.194387,1.814493,-6.586497,-3.903639,-9.404186,-9.174363,1.413782,-6.915691,-7.317260,-7.973267,-4.486859,7.022167,7.022721,2.160932,-1.705072,-3.013579,-8.891232,8.398720,8.501213,9.905329,-4.629222,5.938884,8.941954,-4.894828,4.726511,8.307399,-4.770828,-1.832189,-8.210200,-2.324036,3.445642,-0.042405,7.150504,-5.386022,0.809715,-0.851557,3.540872,5.394372,0.458219,-9.104303,7.663740,-5.064069,-6.883325,1.486390,-1.993523,8.045360,-4.108959,4.656413,-0.029757,-3.345191,-7.044817,8.548271,-3.448668,-5.166614,-7.641657,5.692883,3.236453,-6.102041,-7.349342,-7.394231,2.053074,-0.596141,1.866826,9.672830,4.217994,5.923744,9.811184,8.633511,-3.838259,4.779744,-8.842238,-2.447451,5.705785,9.492207,-1.585032,-1.686679,1.839374,2.891040,6.793010,-0.505465,-5.050069,-5.513255,-4.001193,2.683183,8.728979,-3.050899,6.217122,0.179080,8.368897,-5.059188,6.304798,7.969767,8.024411,1.481390,-1.176750,5.162560,-6.702707,-9.067259,4.345577,1.673673,-5.886256,-5.599184,-9.860165,-4.513644,-9.891904,3.169684,-9.632906,5.028971,9.247095,-3.854722,-6.854969,-0.480219,0.826040,-3.988357,-3.057469,2.346230,9.850454,8.223334,-0.112312,0.640524,-0.059125,-7.554856,0.086247,2.333213,-2.629577,-3.120974,9.482467,0.855977,9.297602,-9.659798,0.122570,6.279023,7.353353,-2.065708,-2.839195,0.740395,-4.889825,0.915426,7.821920,-6.345252,-3.988060,-7.100257,9.858122], dtype = "float64")#candidate|1043|(1792,)|const|float64
call_1042 = relay.TupleGetItem(func_183_call(relay.reshape(const_1043.astype('float64'), [16, 14, 8]), relay.reshape(const_1043.astype('float64'), [16, 14, 8]), relay.reshape(const_1032.astype('uint16'), []), ), 1)
call_1044 = relay.TupleGetItem(func_188_call(relay.reshape(const_1043.astype('float64'), [16, 14, 8]), relay.reshape(const_1043.astype('float64'), [16, 14, 8]), relay.reshape(const_1032.astype('uint16'), []), ), 1)
uop_1058 = relay.log2(var_1033.astype('float64')) # shape=(14, 28)
var_1061 = relay.var("var_1061", dtype = "float64", shape = (14, 28))#candidate|1061|(14, 28)|var|float64
bop_1062 = relay.left_shift(uop_1058.astype('uint8'), relay.reshape(var_1061.astype('uint8'), relay.shape_of(uop_1058))) # shape=(14, 28)
const_1065 = relay.const([[2,10,-4,-2,-10,5,2,-3,6,9,4,-1,-6,2,5,7,-8,3,-7,-2,-10,2,6,5,3,7,-4,2],[5,5,3,-9,8,-4,7,-2,4,-2,-9,-2,1,-2,8,-6,-9,6,2,5,-9,6,7,-6,-4,-1,3,7],[-1,-8,4,-5,-6,5,8,9,2,-5,5,-10,-8,-2,-4,-7,-8,5,1,-5,3,-5,1,-10,9,-10,7,-5],[-2,-9,6,3,-1,5,10,-8,-9,6,7,1,-1,2,2,4,4,2,7,5,-4,1,10,7,-2,-9,8,7],[-2,7,8,-10,3,2,7,-2,-8,5,4,-9,-6,5,2,-3,-3,-10,4,-3,4,-10,3,-2,-5,-8,8,5],[-8,7,-4,-6,-5,-10,-8,5,-8,-5,-7,1,1,-10,9,-2,-6,8,-1,9,-1,-4,-3,3,6,-2,4,-4],[3,5,-9,-10,5,-7,2,-4,-6,-2,-9,-8,-2,7,-6,-10,-5,2,9,1,1,4,-3,-6,7,7,4,9],[8,9,-9,2,1,9,7,8,7,3,10,-8,9,3,1,-9,-9,2,7,-3,-1,10,4,7,-2,1,4,-1],[5,8,7,6,4,-6,-3,1,5,3,1,-9,2,7,1,9,-3,1,-2,7,-6,-9,4,-2,-1,-8,-5,-7],[9,1,3,4,-6,-7,-4,6,-7,-9,-5,2,8,-8,7,9,1,-5,-1,2,6,8,4,-1,1,6,3,-3],[7,3,9,1,-2,-6,-5,-4,8,2,8,-4,3,6,-7,-4,-10,-10,9,-9,-6,-5,3,-4,1,-4,-9,-7],[-8,8,-2,2,9,1,3,-10,6,2,7,2,-1,-7,5,-3,-9,-2,3,-2,-8,-10,-4,-10,8,-10,7,2],[-10,-8,-5,10,2,-4,8,7,1,-6,8,5,-9,10,9,-4,1,4,5,-1,-7,-1,-2,-8,-6,8,-2,1],[-10,-5,-4,-7,-5,2,-4,6,-9,6,-5,-6,1,-6,-9,-4,9,9,10,-8,-7,-4,3,-4,-9,4,7,5]], dtype = "uint8")#candidate|1065|(14, 28)|const|uint8
bop_1066 = relay.divide(bop_1062.astype('float64'), relay.reshape(const_1065.astype('float64'), relay.shape_of(bop_1062))) # shape=(14, 28)
bop_1069 = relay.power(call_1042.astype('float32'), relay.reshape(var_1033.astype('float32'), relay.shape_of(call_1042))) # shape=(14, 7, 4)
bop_1072 = relay.power(call_1044.astype('float32'), relay.reshape(var_1033.astype('float32'), relay.shape_of(call_1044))) # shape=(14, 7, 4)
uop_1075 = relay.sin(bop_1062.astype('float32')) # shape=(14, 28)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
var_1078 = relay.var("var_1078", dtype = "float64", shape = (90,))#candidate|1078|(90,)|var|float64
call_1077 = relay.TupleGetItem(func_285_call(relay.reshape(var_1078.astype('float64'), [10, 1, 9]), relay.reshape(const_1032.astype('uint16'), []), relay.reshape(uop_1058.astype('uint16'), [392,]), ), 2)
call_1079 = relay.TupleGetItem(func_290_call(relay.reshape(var_1078.astype('float64'), [10, 1, 9]), relay.reshape(const_1032.astype('uint16'), []), relay.reshape(uop_1058.astype('uint16'), [392,]), ), 2)
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
call_1089 = relay.TupleGetItem(func_104_call(relay.reshape(const_1032.astype('uint16'), []), relay.reshape(call_1042.astype('uint16'), [14, 7, 4]), ), 0)
call_1090 = relay.TupleGetItem(func_107_call(relay.reshape(const_1032.astype('uint16'), []), relay.reshape(call_1042.astype('uint16'), [14, 7, 4]), ), 0)
uop_1099 = relay.atanh(uop_1075.astype('float64')) # shape=(14, 28)
output = relay.Tuple([call_1019,call_1031,const_1032,call_1038,const_1039,const_1043,bop_1066,bop_1069,call_1077,var_1078,call_1089,uop_1099,])
output2 = relay.Tuple([call_1020,call_1034,const_1032,call_1040,const_1039,const_1043,bop_1066,bop_1072,call_1079,var_1078,call_1090,uop_1099,])
func_1102 = relay.Function([var_1033,var_1061,var_1078,], output)
mod['func_1102'] = func_1102
mod = relay.transform.InferType()(mod)
mutated_mod['func_1102'] = func_1102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1102_call = mutated_mod.get_global_var('func_1102')
var_1104 = relay.var("var_1104", dtype = "uint16", shape = (14, 28))#candidate|1104|(14, 28)|var|uint16
var_1105 = relay.var("var_1105", dtype = "float64", shape = (14, 28))#candidate|1105|(14, 28)|var|float64
var_1106 = relay.var("var_1106", dtype = "float64", shape = (90,))#candidate|1106|(90,)|var|float64
call_1103 = func_1102_call(var_1104,var_1105,var_1106,)
output = call_1103
func_1107 = relay.Function([var_1104,var_1105,var_1106,], output)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1122 = func_954_call()
call_1123 = func_954_call()
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
var_1125 = relay.var("var_1125", dtype = "int8", shape = (960,))#candidate|1125|(960,)|var|int8
call_1124 = relay.TupleGetItem(func_476_call(relay.reshape(var_1125.astype('int8'), [16, 10, 6])), 1)
call_1126 = relay.TupleGetItem(func_478_call(relay.reshape(var_1125.astype('int8'), [16, 10, 6])), 1)
output = relay.Tuple([call_1122,call_1124,var_1125,])
output2 = relay.Tuple([call_1123,call_1126,var_1125,])
func_1129 = relay.Function([var_1125,], output)
mod['func_1129'] = func_1129
mod = relay.transform.InferType()(mod)
mutated_mod['func_1129'] = func_1129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1130 = relay.var("var_1130", dtype = "int8", shape = (960,))#candidate|1130|(960,)|var|int8
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1131 = func_1129_call(var_1130)
output = call_1131
func_1132 = relay.Function([var_1130], output)
mutated_mod['func_1132'] = func_1132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1142 = func_954_call()
call_1143 = func_954_call()
output = call_1142
output2 = call_1143
func_1156 = relay.Function([], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
output = func_1156()
func_1157 = relay.Function([], output)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1167 = func_1156_call()
call_1168 = func_1156_call()
output = call_1167
output2 = call_1168
func_1170 = relay.Function([], output)
mod['func_1170'] = func_1170
mod = relay.transform.InferType()(mod)
output = func_1170()
func_1171 = relay.Function([], output)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1196 = func_954_call()
call_1197 = func_954_call()
output = call_1196
output2 = call_1197
func_1202 = relay.Function([], output)
mod['func_1202'] = func_1202
mod = relay.transform.InferType()(mod)
output = func_1202()
func_1203 = relay.Function([], output)
mutated_mod['func_1203'] = func_1203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1210 = func_1202_call()
call_1211 = func_1202_call()
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
const_1242 = relay.const([9.413064,3.612057,-4.685563,6.545382,7.457870,-4.502935,-0.244078,-8.849911,-1.077681,-3.399512,7.312570,-2.286888,-8.419081,3.649606,-8.969013,-0.031078,0.887439,6.735355,3.772076,0.299756,6.170849,-6.199188,-0.849332,-8.538927,7.136126,6.184962,-1.838476,2.939710,-5.060045,-7.922088,0.919486,-3.787168,-6.827431,-7.939645,-1.406826,7.833767,6.912159,-7.532582,-6.307057,-9.898018,3.540347,-3.662689,1.324968,-1.637866,8.000554,5.068073,8.775462,1.449173,5.429091,6.308455,-7.293616,3.646201,-7.058854,2.255427,0.929648,-0.708917,4.388100,-0.332286,7.791314,-0.959037,9.751084,6.168551,-7.060210,7.825083,-8.919156,1.818882,3.147664,-6.754208,-8.370303,-7.909442,6.638865,-0.677602,-2.918056,5.461471,1.286030,-8.211455,2.393456,9.640468,-3.358890,7.753079,-5.017754,5.939184,-4.824400,9.971292,0.589560,-1.058949,0.054522,0.019031,3.183590,6.580466,0.045598,5.701460,3.601960,-0.471724,2.478088,-6.195831,-3.162884,9.296976,4.312117,-9.011974,3.325525,0.871200,1.955683,-9.476112,2.565238,-7.770932,0.985538,-8.332220,-3.222345,-7.438792,-0.452170,3.185846,1.662906,3.427487,-5.450564,3.391020,-2.674792,-9.342298,-2.375316,-2.323975,-8.005282,-9.583140,5.713128,-1.873224,1.935626,6.376257,8.475094,-4.026878,-2.179909,2.266075,4.773613,-9.673881,8.489713,-6.318945,5.493197,4.072846,4.853621,2.934480,-1.558861,-9.185562,-1.768641,-5.153143,9.210056,-6.020998,-7.348085,-5.407821,3.404760,-2.075013,7.386568,-0.180255,7.589772,-6.814528,0.450578,5.873941,8.382420,6.556076,-1.964411,8.182391,-0.975465,2.578900,5.873125,0.430962,-9.969096,9.438816,-8.733364,-9.965832,2.869483,-6.311931,-2.102159,3.951787,0.981741,0.568931,-7.405644,3.243838,0.705700,8.373945,-7.817083,1.061783,-4.071287,-8.035900,-8.028957,5.619925,7.126647,-0.068241,2.931910,8.540063,-3.644473,-4.135470,2.981828,9.529453,-6.324831,2.299420,5.500654,4.818896,4.000530,-3.888733,-8.546431,-5.922120,8.208974,5.256687,-6.250953,-1.138718,-3.847952,1.994026,-9.142518,-1.173592,4.995270,-6.577020,-6.358632,4.793533,5.234925,1.229333,7.147605,-4.303700,-1.611515,3.804925,-7.149430,8.361027,9.760647,3.275193,5.311985,-2.459286,4.905597,-8.401155,9.848747,-5.757418,0.353224,-2.349215,0.619240,-1.251709,1.035787,-3.766612,0.467713,-0.051232,-1.619963,-5.096905,9.614693,-9.893053,3.878167,-8.094719,-7.558074,-4.154233,-9.986143,-8.798330,5.646417,4.752042,5.899705,-6.867346,3.488420,1.477202,-3.046776,8.618026,-7.688576,9.766192,-7.438226,-5.972931,-9.838059,6.694852,-6.029591,-3.291496,-8.314164,-8.180501,3.713228,-3.406392,5.024123,-8.172096,9.786140,8.071477,9.937059,-9.903815,-6.668917,1.332971,6.200583,5.449143,-5.253127,1.651461,9.858736,-4.321938,-4.560760,9.569056,-5.287964,-7.998883,2.953232,-3.588163,-7.497414,6.291070,9.478813,6.657638,9.881399,-0.525457,-4.642744,-2.804578,8.465376,-0.351747,7.356366,9.458994,1.735410,5.332193,3.050793,6.170006,-4.197604,-9.649217,1.222148,-8.004651,-1.932637,0.431981,-5.522178,-8.934878,-9.330177,-8.513122,-2.145696,-8.962569], dtype = "float32")#candidate|1242|(312,)|const|float32
call_1241 = func_963_call(relay.reshape(const_1242.astype('float32'), [13, 8, 3]))
call_1243 = func_963_call(relay.reshape(const_1242.astype('float32'), [13, 8, 3]))
func_795_call = mod.get_global_var('func_795')
func_801_call = mutated_mod.get_global_var('func_801')
const_1252 = relay.const([[4,-10,1,-3,7,6,-9,-7,4,7,10,1,-2,8,5],[-9,-2,-3,7,5,-2,-6,-2,6,-6,1,7,-5,-1,7],[9,-4,7,7,5,-7,-2,2,5,1,-10,-9,-4,-8,-7],[10,-4,-8,-2,-4,6,-6,6,4,5,-5,10,2,8,9],[-8,1,3,-3,-4,-4,10,-9,-5,8,-10,4,6,-4,-7],[-10,-5,-5,8,-5,-6,-5,6,-3,-8,-2,-5,-8,2,7],[-6,2,-6,10,-6,-10,-4,9,8,-3,-6,-5,-9,3,-5],[-1,-7,-4,10,1,-1,-8,-6,4,-10,2,-10,-6,2,-2],[-2,-9,6,2,-9,3,3,-4,-8,-3,-3,-6,-2,4,4],[10,-9,-2,4,10,-8,5,4,-8,-8,-3,-6,6,1,-1],[-3,10,-9,6,8,-9,1,-6,5,-7,7,-6,7,10,-9],[3,-1,6,5,5,10,-10,10,-5,-3,10,2,-10,7,9],[10,-9,-4,1,7,-5,-2,7,4,-8,4,-7,-3,7,9],[-5,-7,10,-9,5,6,2,-8,1,9,-8,-9,-9,-4,-2],[2,1,-4,-5,1,9,-1,-7,-10,-2,8,-1,-7,-1,9],[-3,3,-4,-5,9,10,-3,-9,-1,-7,-7,3,5,-10,-2],[-2,-2,10,-1,7,-1,10,-8,-2,-9,2,-7,-5,8,9],[-6,6,5,6,-1,7,-9,-5,7,8,8,1,-8,10,-2],[5,-9,8,6,-1,6,-8,9,4,1,-2,-3,-6,1,-8],[-6,-1,-5,-10,-2,8,3,2,9,7,-5,1,-4,-10,5],[-8,-2,-8,9,-8,1,8,3,-5,4,-4,-3,-9,-4,-3],[-9,-9,-1,8,5,2,1,1,10,8,-9,4,-1,-10,4],[-3,-4,5,-9,7,6,-1,9,-3,-9,-2,-7,-2,-1,-3],[-6,9,-1,5,-5,6,-4,-10,-3,4,6,-2,-2,1,-7],[-10,3,10,6,-5,-2,4,-2,-8,9,-6,-8,10,-3,7],[7,2,7,-5,-9,-3,3,-6,-4,-7,8,10,2,-10,-10],[4,2,-9,-9,-3,-3,1,6,1,4,2,3,-10,1,1],[-6,-1,2,1,-2,-2,-1,-3,2,6,3,-8,2,-3,-9],[-8,-1,5,-9,-7,-9,10,-1,8,6,-9,-3,-5,-6,-2],[3,2,-9,7,3,10,2,5,-2,7,6,7,5,-6,10],[-8,6,-5,8,4,6,5,-6,1,3,6,-6,-9,-6,-1],[-3,-7,10,-5,-6,10,-2,1,-7,-6,4,10,-6,8,5],[8,8,-6,-9,-5,-1,10,3,-3,-6,3,-2,8,3,10],[5,8,3,-10,-7,9,3,1,-1,-8,-3,6,5,3,-2],[-8,1,10,1,8,8,-8,-5,7,-5,-2,6,-6,-2,9],[-4,-10,-4,-2,-2,-5,-6,-1,3,-6,3,-7,-5,-1,1],[-2,-8,3,5,-9,4,5,-8,-10,4,-7,3,9,-6,5],[-2,-6,1,4,-5,-3,8,8,6,-7,3,9,-10,3,1],[-5,5,5,1,2,-6,-4,4,-2,-9,1,3,-7,10,-8],[10,-6,-5,2,2,-3,-8,-3,-6,-3,4,-8,-3,9,-6],[6,2,-10,-1,-4,-6,-1,1,-9,9,-3,-5,9,5,5],[6,-5,1,5,8,7,8,2,-4,-8,2,-5,2,9,1],[-9,3,-7,-1,-10,-4,5,-9,-1,8,3,3,-1,1,4],[-1,-10,9,3,-2,3,2,-7,-4,3,10,-6,-3,9,4],[-7,-8,-3,6,9,1,-3,-9,-3,1,-9,-1,5,9,-9],[7,1,-4,-2,-10,-8,4,-3,4,-10,-3,5,3,9,3],[-6,-5,6,1,2,1,-2,3,-8,5,-1,6,-4,7,-10],[3,-3,-4,8,6,-7,-1,-2,6,1,-7,-2,10,1,-9],[-10,-8,1,-1,-7,10,-4,3,-5,-5,2,1,-4,-8,-10],[7,-1,2,-6,2,8,5,5,7,9,-8,-3,-5,-2,3],[3,-10,4,6,-5,-1,-2,-6,-6,-9,-6,-8,-8,7,9],[9,-9,-6,-3,2,3,-2,2,4,-4,7,-1,-10,-9,6],[8,-9,8,-1,-8,-10,8,5,-3,-2,-3,-6,3,1,4],[9,5,-8,-3,-6,2,3,-2,-2,9,-2,2,-5,8,6],[-5,2,6,3,-1,-2,6,4,4,-3,-1,-5,6,7,-8],[-6,1,3,9,7,-6,2,-4,2,-2,3,1,-6,10,3],[-10,10,-6,-9,8,3,-4,-8,1,6,-4,-7,-9,-5,8],[-6,4,10,-9,-5,4,1,-4,6,-8,1,1,10,-2,-8],[3,-1,-10,-9,9,-5,3,-10,-6,2,-7,7,-2,-10,2],[-7,4,3,10,-2,-5,1,-5,-7,-7,5,2,4,9,-10],[-3,-7,4,10,2,-2,-3,9,6,-8,-2,7,-7,10,6],[-6,-7,-6,2,9,-2,-5,6,2,7,-2,-5,7,-9,-7],[-8,-4,5,-10,-7,-3,9,-3,-1,4,-7,8,-5,-3,1],[9,-2,-4,4,7,10,10,9,4,-10,-7,5,8,-8,4],[2,9,-8,-4,7,-4,1,-8,-9,10,1,6,-3,-5,7],[2,-3,-5,6,-1,-1,3,1,2,-4,-9,10,-10,-10,-3],[2,-6,6,6,-1,4,4,-3,9,-6,8,7,-1,-8,-1],[9,6,-8,9,4,-1,-3,8,-1,-1,-1,2,-6,6,-5],[-5,-10,-2,-5,2,-2,-2,1,10,8,-9,-10,-6,6,-10],[-8,-7,-8,-7,-9,-6,4,-5,7,-7,7,-3,-8,3,2],[-5,8,9,9,1,-4,1,5,5,1,7,9,-5,9,-1],[9,1,7,3,5,6,-1,9,2,7,7,1,4,-5,4],[-5,-1,10,6,6,9,1,10,7,-6,-7,-8,1,4,6],[1,1,-10,3,-6,7,2,7,-10,6,-7,-10,-1,9,-8],[-3,8,2,5,-4,-6,-8,1,-2,8,-6,1,3,9,-7],[-9,-6,4,-7,-5,2,3,2,5,-6,4,-9,-10,-8,6],[-3,-6,4,-9,1,-5,7,-4,4,5,-2,2,7,-6,10],[-10,7,-4,-8,-5,6,3,-7,-4,-6,-1,-9,2,4,1],[-9,8,9,-10,-4,-7,2,6,6,-10,-9,3,-5,-6,-2],[-4,-1,9,-4,-8,-2,9,-6,-5,4,-7,10,5,-4,6],[-9,8,-3,-2,6,7,7,-5,-10,-7,8,9,3,-1,4],[-2,-8,-5,-7,-1,-6,-2,2,-6,-8,9,5,1,-10,5],[-2,9,7,-4,-10,7,1,7,-9,-8,-3,10,-2,10,-5],[-10,-1,-8,4,5,5,7,3,1,-8,6,5,3,-1,3],[-7,-5,-1,-9,5,8,5,-7,-3,8,-9,-5,2,-4,-1],[9,10,-6,-6,-8,8,10,3,-10,8,-10,-2,-1,-2,-7],[4,9,-1,8,2,8,-4,-3,-8,5,-1,-2,9,1,-2],[2,-6,1,8,5,-7,-9,-1,-2,-5,4,-2,-3,2,2],[-2,-10,-5,-6,-4,4,3,-4,6,-3,5,-9,4,7,5],[9,-4,-8,4,6,4,-9,3,-1,-1,2,-2,2,2,-5],[1,-6,5,-7,-9,-4,3,10,-9,5,-7,-4,7,-8,-7],[7,7,4,9,-8,2,-1,-5,3,6,-4,4,-4,5,-1],[3,10,-1,-9,-6,9,10,5,5,-1,-5,-3,-2,1,7],[2,9,-9,8,3,6,2,-5,1,-4,-8,7,9,6,-9],[-9,2,-4,-10,-10,6,6,2,-6,9,5,-8,-1,-4,-6],[-2,5,-5,-7,-3,8,3,-7,5,-7,-5,4,-7,-10,-1],[-5,3,9,10,3,-2,-3,6,9,-5,-8,1,4,8,-10],[-2,4,-4,3,6,5,8,-3,8,-6,8,-3,-7,-6,3],[-5,-10,2,1,-6,-1,7,9,-4,1,1,-5,10,-1,10],[-2,-9,-6,-6,6,6,-5,9,-4,-2,-6,-6,-7,-4,3],[-2,-8,9,4,1,-9,1,1,-7,-6,1,4,-2,4,-1],[1,5,-6,5,2,-4,-4,-5,7,-9,-3,-3,-8,9,-3],[10,-4,3,-9,-2,4,-2,-2,-3,-2,-2,-5,-3,-3,6],[1,-10,-8,4,1,10,5,4,-2,-8,3,9,-8,2,3],[7,-3,10,8,-1,-2,-4,5,-4,-7,9,-2,-8,1,2],[-8,-9,-6,2,-2,4,-4,-3,-6,-5,-9,3,-5,4,2],[1,4,9,-10,5,4,8,-6,8,-7,-7,9,10,4,9],[9,-4,-1,-5,3,-3,-9,-6,3,9,9,4,9,-10,-7],[6,1,1,4,3,7,-6,-8,-3,8,-10,-9,3,-8,2],[-5,3,10,-8,-1,-2,8,7,2,-8,2,-7,2,-1,-4],[8,-3,7,-5,6,7,-6,-5,2,3,-8,-8,5,5,-2],[1,10,1,7,-4,3,10,6,-2,-3,-10,7,-5,10,2],[-1,-4,-7,10,-10,-7,-6,2,-2,-10,-9,-9,-8,1,-4],[-2,6,-6,10,8,-10,2,-2,8,9,3,8,-6,-6,-6],[10,5,-3,-2,1,-2,-5,-7,-1,4,-4,-9,9,-1,-2],[5,-7,1,-5,3,-3,7,1,8,2,3,-9,8,-6,2],[6,-2,-2,-2,-6,-5,2,-8,9,-7,7,4,-10,1,9],[-8,5,-7,4,5,6,10,1,3,5,-10,-9,6,5,7],[-5,1,4,-6,-1,8,-1,7,8,4,1,-4,6,-10,-9],[7,2,1,-7,-4,-8,-8,-1,-2,7,2,8,8,6,-7],[7,-9,3,6,-9,-10,5,7,-3,4,-3,-7,2,6,-7],[3,8,-4,-1,5,-1,8,-3,1,-4,-7,3,9,-3,-3],[8,4,-7,-9,9,8,-8,-7,1,-8,-6,1,1,7,5],[-2,-6,-8,-7,3,10,-9,10,-9,5,-6,-4,-10,-7,1],[-7,-4,1,7,-1,-7,2,9,-1,2,10,7,-5,1,2],[-3,-4,1,2,-5,-8,6,-8,3,5,-5,3,9,7,-9],[1,-7,2,-4,7,9,-2,7,-10,-9,-4,-10,-6,-5,10],[-3,6,7,9,-2,3,-4,-6,4,1,-1,-10,2,-9,-9],[10,1,2,-6,1,9,-1,8,-6,-3,8,2,4,-3,2],[3,4,10,2,-10,7,-5,-4,6,-5,-7,-5,-2,4,4],[-7,-7,-1,-10,-4,5,2,10,3,8,-6,-3,-3,-2,10],[2,-4,-10,-6,7,-3,-1,-2,-2,8,-5,6,-5,-4,-7],[-4,-2,8,3,-4,-5,-3,-1,9,2,-5,2,-6,10,6],[4,4,10,10,5,-4,-1,7,3,-7,-1,-3,-2,2,9],[-9,9,9,-5,-3,-2,-1,5,7,3,-3,4,9,-5,10],[-10,6,-2,1,3,8,-10,-8,-6,-10,-7,-5,-9,1,-5],[7,-7,7,6,-7,-1,-4,-5,-5,-7,1,-8,-7,1,2],[-8,-3,9,-6,-9,6,1,10,-4,6,8,5,4,-6,1],[-10,4,-6,5,-2,7,2,-9,4,7,-3,9,-2,2,-9],[5,-4,5,6,3,4,-5,10,9,7,5,-1,-10,1,-5],[8,2,-1,-1,-6,-4,-6,7,4,1,-3,5,-3,1,8],[-4,5,8,2,-2,8,1,8,-10,-5,8,-9,2,-8,6],[8,-4,-8,9,-4,2,-1,-5,-10,-3,-8,-1,-2,9,-9]], dtype = "uint8")#candidate|1252|(143, 15)|const|uint8
const_1253 = relay.const([[6.861660,3.000421,9.525403,-5.753042,8.248605,-2.165272,1.646523,7.102372,1.392823,1.879469,9.907327,4.974681,1.573465,-2.264706,-4.405995,0.671454,3.681147,-1.146548,-3.643860,-0.432537,-6.802555,9.140064,7.068335,6.305682,5.556342,1.191666,3.244810,-5.659116,-0.452523,-7.382379,-2.926140,-6.237598,-1.398814,-3.740792,8.181568,8.571148,0.937310,6.453936,5.381471,-4.194708,7.636140,4.133286,-1.642824,9.665740,-7.091400,1.594896,2.862370,-6.896295,-2.325041,-0.622888,-8.903183,2.422880,4.098995,-5.260801,9.405371,0.522673,3.644904,2.892193,5.852247,-0.781035,-7.840967,-7.059816,7.234080,-6.104326,5.667387,5.001346,-6.449627,-2.316606,8.974816,-4.661388,1.040150,2.856200,-9.792660,-2.138453,9.659322,5.621083,-0.840632,-0.714117,0.931406,-1.481185,9.639292,-6.531718,-1.796984,0.268122,5.623735,9.673093,-0.812404,7.340760,9.183792,-8.857387]], dtype = "float64")#candidate|1253|(1, 90)|const|float64
var_1254 = relay.var("var_1254", dtype = "uint16", shape = ())#candidate|1254|()|var|uint16
const_1255 = relay.const([-6,-5,-5,-10,-4,9,9,-9,-7,-2,3,3,4,8,-5,-3,9,10,7,-2,-9,9,10,10,6,-2,-1,-9,-9,2,-7,6,3,9,-6,-2,-1,-2,10,8,-3,-7,9,1,4,-1,8,-4,-3,-4,-3,5,-9,4,-8,5,7,8,-7,-4,-4,-1,-4,7,7,10,8,-3,2,-4,2,-6,1,-4,4,-7,-7,-3,5,-2,-1,-4,8,6,7,-4,9,-7,-1,9,3,6,-6,10,-10,4,5,-10,5,4,-8,-10,-6,7,10,-5,-2,2,1,-9,-6,-2,-9,5,2,4,8,7,1,-3,10,5,-2,-1,-10,-4,1,9,-2,-4,4,2,-1,7,-5,-4,-2,-8,-5,7,-9,-4,-9,-10,5,-5,1,-2,8,-6,-10,7,-1,-6,2,-4,6,-1,10,6,-7,-6,-10,-5,-8,1,-3,-1,1,-3,-1,-6,-6,2,10,3,10,-8,-8,1,3,-5,8,3,1,4,6,9,-7,-9,-8,6,2,10,-6,7,3,-8,-5,-4,-8,10,-8,-5,9,-6,6,9,-6,9,2,-1,-5,-7,9,-9,-10,2,-8,-7,-1,-6,-4,7,3,-2,-10,-1,-2,-7,2,10,5,-1,9,9,-10,-10,-1,-4,3,-9,-9,-9,-1,-5,-2,-4,-9,9,-5,-9,-5,-9,6,-1,9,3,2,-2,10,-5,-2,-1,-6,-8,-1,7,-6,2,-2,-2,-5,-1,-6,-10,-10,-3,6,5,6,-4,-10,5,-7,-9,-2,-2,-5,3,-7,10,-10,2,-6,-7,-10,-1,1,-6,3,-9,-6,3,5,-3,-1,-4,7,-6,-2,-7,-5,3,-4,-4,6,-3,6,6,-4,-8,3,5,-7,-4,5,1,10,5,7,-3,5,-9,-4,4,3,10,-1,7,7,9,3,-3,6,-8,-7,7,-7,-1,-1,-6,7,2,2,-8,-3,2,-8,8,10,8,7,7,4,-2,5,1,5,-3,-3,5,-9,1,-1,-3,4,-8,1,-4,7,9,-5,5,-4,-8,-1,-4,-1,10,-5,-5], dtype = "uint16")#candidate|1255|(392,)|const|uint16
call_1251 = relay.TupleGetItem(func_795_call(relay.reshape(const_1252.astype('uint8'), [13, 15, 11]), relay.reshape(const_1253.astype('float64'), [90,]), relay.reshape(var_1254.astype('uint16'), []), relay.reshape(const_1255.astype('uint16'), [196, 2]), ), 3)
call_1256 = relay.TupleGetItem(func_801_call(relay.reshape(const_1252.astype('uint8'), [13, 15, 11]), relay.reshape(const_1253.astype('float64'), [90,]), relay.reshape(var_1254.astype('uint16'), []), relay.reshape(const_1255.astype('uint16'), [196, 2]), ), 3)
output = relay.Tuple([call_1210,call_1241,const_1242,call_1251,const_1252,const_1253,var_1254,const_1255,])
output2 = relay.Tuple([call_1211,call_1243,const_1242,call_1256,const_1252,const_1253,var_1254,const_1255,])
func_1257 = relay.Function([var_1254,], output)
mod['func_1257'] = func_1257
mod = relay.transform.InferType()(mod)
var_1258 = relay.var("var_1258", dtype = "uint16", shape = ())#candidate|1258|()|var|uint16
output = func_1257(var_1258)
func_1259 = relay.Function([var_1258], output)
mutated_mod['func_1259'] = func_1259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1509 = func_1170_call()
call_1510 = func_1170_call()
output = call_1509
output2 = call_1510
func_1513 = relay.Function([], output)
mod['func_1513'] = func_1513
mod = relay.transform.InferType()(mod)
output = func_1513()
func_1514 = relay.Function([], output)
mutated_mod['func_1514'] = func_1514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1594 = func_954_call()
call_1595 = func_954_call()
output = relay.Tuple([call_1594,])
output2 = relay.Tuple([call_1595,])
func_1600 = relay.Function([], output)
mod['func_1600'] = func_1600
mod = relay.transform.InferType()(mod)
output = func_1600()
func_1601 = relay.Function([], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1608 = func_1156_call()
call_1609 = func_1156_call()
uop_1621 = relay.erf(call_1608.astype('float32')) # shape=(8, 8, 9)
uop_1623 = relay.erf(call_1609.astype('float32')) # shape=(8, 8, 9)
bop_1633 = relay.less(uop_1621.astype('bool'), relay.reshape(call_1608.astype('bool'), relay.shape_of(uop_1621))) # shape=(8, 8, 9)
bop_1636 = relay.less(uop_1623.astype('bool'), relay.reshape(call_1609.astype('bool'), relay.shape_of(uop_1623))) # shape=(8, 8, 9)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
const_1639 = relay.const([3.459962,9.284374,-2.590053,7.065725,4.352217,-8.417125,-7.947071,-8.829664,-2.942627,-0.035157,-7.007765,2.195417,3.980524,6.833849,7.918917,3.350358,4.854338,-3.972563,0.783347,-1.982408,-1.562437,3.863655,-4.857277,9.435729,-4.980387,8.850915,9.847963,-5.622657,-5.331754,-1.386511,4.420022,3.690282,-4.078685,-3.223333,7.664150,-6.553168,-2.034211,-0.560625,8.843238,2.154638,9.805476,-3.438068,0.797864,2.395214,6.609293,0.532306,3.524403,7.404978,8.027516,3.750135,4.835927,-7.509686,8.514385,-7.862129,3.372051,-6.592649,-3.059982,7.695546,-7.223161,-8.540783,-9.793976,-4.227271,-5.938878,-8.207466,0.645126,-5.107522,2.367195,-0.371411,8.174508,-1.011436,-7.723212,1.816573,9.939379,-3.800486,5.827792,1.486789,8.834580,1.955822,-4.897649,0.751073,-6.705711,-0.301116,-8.734960,-6.888426,0.260372,-9.855446,-3.304100,2.063970,1.173074,1.904794], dtype = "float64")#candidate|1639|(90,)|const|float64
var_1640 = relay.var("var_1640", dtype = "uint16", shape = ())#candidate|1640|()|var|uint16
var_1641 = relay.var("var_1641", dtype = "uint16", shape = (392,))#candidate|1641|(392,)|var|uint16
call_1638 = relay.TupleGetItem(func_285_call(relay.reshape(const_1639.astype('float64'), [10, 1, 9]), relay.reshape(var_1640.astype('uint16'), []), relay.reshape(var_1641.astype('uint16'), [392,]), ), 3)
call_1642 = relay.TupleGetItem(func_290_call(relay.reshape(const_1639.astype('float64'), [10, 1, 9]), relay.reshape(var_1640.astype('uint16'), []), relay.reshape(var_1641.astype('uint16'), [392,]), ), 3)
var_1661 = relay.var("var_1661", dtype = "bool", shape = (8, 8, 9))#candidate|1661|(8, 8, 9)|var|bool
bop_1662 = relay.minimum(bop_1633.astype('uint16'), relay.reshape(var_1661.astype('uint16'), relay.shape_of(bop_1633))) # shape=(8, 8, 9)
bop_1665 = relay.minimum(bop_1636.astype('uint16'), relay.reshape(var_1661.astype('uint16'), relay.shape_of(bop_1636))) # shape=(8, 8, 9)
uop_1669 = relay.log2(var_1661.astype('float64')) # shape=(8, 8, 9)
const_1680 = relay.const([[[False,True,False,False,True,True,False,False,True],[False,False,False,False,False,True,False,True,True],[True,False,False,False,True,True,True,False,False],[False,True,True,False,False,False,False,False,True],[True,False,False,False,False,False,True,False,False],[False,False,False,False,True,False,False,True,True],[True,True,True,True,True,True,False,True,True],[True,True,True,False,False,True,False,False,True]],[[True,True,True,True,False,True,True,False,False],[True,False,False,True,True,True,False,False,False],[True,True,True,False,False,False,True,False,False],[False,True,False,True,False,False,False,True,False],[True,True,False,False,False,False,False,True,True],[True,False,True,True,True,False,False,False,False],[False,True,True,False,False,False,False,True,False],[False,False,True,False,True,False,False,True,True]],[[False,True,False,True,False,False,True,True,False],[True,True,False,False,True,True,True,True,True],[True,False,True,True,False,True,False,True,False],[True,True,False,False,False,True,False,True,False],[True,False,True,True,False,True,True,False,False],[False,True,False,False,False,False,True,True,False],[False,True,True,False,False,True,False,False,True],[False,True,False,False,False,True,True,True,True]],[[False,False,True,True,False,False,True,False,False],[True,True,True,True,True,False,True,False,True],[False,False,True,True,False,False,True,False,False],[False,False,True,True,False,True,False,True,False],[False,False,False,False,True,False,True,True,True],[False,False,True,True,False,False,False,True,False],[True,False,True,True,True,True,True,False,True],[False,True,True,False,True,True,True,False,True]],[[True,True,False,False,True,False,False,False,False],[False,True,True,False,False,True,True,True,False],[False,False,True,False,True,False,True,True,True],[False,False,True,True,True,True,True,False,False],[True,False,True,True,False,False,False,False,False],[False,False,True,False,False,False,True,False,True],[True,True,False,True,False,True,False,True,False],[True,True,False,False,False,False,True,False,False]],[[True,False,True,True,False,True,False,True,True],[False,False,False,True,False,True,False,True,True],[True,True,True,True,True,False,False,True,False],[False,False,False,True,True,True,False,False,True],[True,False,False,False,True,True,False,False,True],[False,False,False,True,True,True,False,True,False],[False,True,True,True,True,True,True,False,False],[False,False,False,False,True,True,False,False,False]],[[True,False,False,False,False,True,False,False,False],[False,False,True,False,True,False,False,False,False],[True,True,False,False,False,True,False,False,False],[True,False,False,True,False,True,False,False,True],[True,True,True,True,True,False,True,True,True],[True,True,True,True,True,False,False,True,False],[True,True,False,True,True,True,False,False,True],[True,False,True,False,True,False,False,True,True]],[[False,False,True,True,True,False,False,True,True],[False,True,False,True,False,False,True,True,True],[False,True,True,True,False,False,True,True,True],[True,True,False,True,True,False,False,False,False],[False,False,True,False,False,False,False,True,False],[False,True,True,True,True,True,True,True,True],[True,False,False,False,True,True,True,False,False],[True,False,False,True,True,False,False,True,True]]], dtype = "bool")#candidate|1680|(8, 8, 9)|const|bool
bop_1681 = relay.bitwise_and(bop_1633.astype('uint32'), relay.reshape(const_1680.astype('uint32'), relay.shape_of(bop_1633))) # shape=(8, 8, 9)
bop_1684 = relay.bitwise_and(bop_1636.astype('uint32'), relay.reshape(const_1680.astype('uint32'), relay.shape_of(bop_1636))) # shape=(8, 8, 9)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_1688 = func_954_call()
call_1689 = func_954_call()
bop_1691 = relay.bitwise_or(uop_1669.astype('int32'), relay.reshape(bop_1662.astype('int32'), relay.shape_of(uop_1669))) # shape=(8, 8, 9)
bop_1694 = relay.bitwise_or(uop_1669.astype('int32'), relay.reshape(bop_1665.astype('int32'), relay.shape_of(uop_1669))) # shape=(8, 8, 9)
output = relay.Tuple([call_1638,const_1639,var_1640,var_1641,bop_1681,call_1688,bop_1691,])
output2 = relay.Tuple([call_1642,const_1639,var_1640,var_1641,bop_1684,call_1689,bop_1694,])
func_1702 = relay.Function([var_1640,var_1641,var_1661,], output)
mod['func_1702'] = func_1702
mod = relay.transform.InferType()(mod)
var_1703 = relay.var("var_1703", dtype = "uint16", shape = ())#candidate|1703|()|var|uint16
var_1704 = relay.var("var_1704", dtype = "uint16", shape = (392,))#candidate|1704|(392,)|var|uint16
var_1705 = relay.var("var_1705", dtype = "bool", shape = (8, 8, 9))#candidate|1705|(8, 8, 9)|var|bool
output = func_1702(var_1703,var_1704,var_1705,)
func_1706 = relay.Function([var_1703,var_1704,var_1705,], output)
mutated_mod['func_1706'] = func_1706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1708 = func_1170_call()
call_1709 = func_1170_call()
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_1720 = func_1202_call()
call_1721 = func_1202_call()
output = relay.Tuple([call_1708,call_1720,])
output2 = relay.Tuple([call_1709,call_1721,])
func_1722 = relay.Function([], output)
mod['func_1722'] = func_1722
mod = relay.transform.InferType()(mod)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1722_call = mutated_mod.get_global_var('func_1722')
call_1723 = func_1722_call()
output = call_1723
func_1724 = relay.Function([], output)
mutated_mod['func_1724'] = func_1724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1741 = func_1170_call()
call_1742 = func_1170_call()
output = relay.Tuple([call_1741,])
output2 = relay.Tuple([call_1742,])
func_1751 = relay.Function([], output)
mod['func_1751'] = func_1751
mod = relay.transform.InferType()(mod)
mutated_mod['func_1751'] = func_1751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mutated_mod.get_global_var('func_1751')
call_1752 = func_1751_call()
output = call_1752
func_1753 = relay.Function([], output)
mutated_mod['func_1753'] = func_1753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_1770 = func_1513_call()
call_1771 = func_1513_call()
func_104_call = mod.get_global_var('func_104')
func_107_call = mutated_mod.get_global_var('func_107')
const_1814 = relay.const(8, dtype = "uint16")#candidate|1814|()|const|uint16
var_1815 = relay.var("var_1815", dtype = "uint16", shape = (7, 56))#candidate|1815|(7, 56)|var|uint16
call_1813 = relay.TupleGetItem(func_104_call(relay.reshape(const_1814.astype('uint16'), []), relay.reshape(var_1815.astype('uint16'), [14, 7, 4]), ), 0)
call_1816 = relay.TupleGetItem(func_107_call(relay.reshape(const_1814.astype('uint16'), []), relay.reshape(var_1815.astype('uint16'), [14, 7, 4]), ), 0)
output = relay.Tuple([call_1770,call_1813,const_1814,var_1815,])
output2 = relay.Tuple([call_1771,call_1816,const_1814,var_1815,])
func_1821 = relay.Function([var_1815,], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
mutated_mod['func_1821'] = func_1821
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1822 = relay.var("var_1822", dtype = "uint16", shape = (7, 56))#candidate|1822|(7, 56)|var|uint16
func_1821_call = mutated_mod.get_global_var('func_1821')
call_1823 = func_1821_call(var_1822)
output = call_1823
func_1824 = relay.Function([var_1822], output)
mutated_mod['func_1824'] = func_1824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1841 = relay.var("var_1841", dtype = "int16", shape = (8, 7, 16))#candidate|1841|(8, 7, 16)|var|int16
var_1842 = relay.var("var_1842", dtype = "int16", shape = (8, 7, 16))#candidate|1842|(8, 7, 16)|var|int16
bop_1843 = relay.subtract(var_1841.astype('int16'), relay.reshape(var_1842.astype('int16'), relay.shape_of(var_1841))) # shape=(8, 7, 16)
var_1847 = relay.var("var_1847", dtype = "int16", shape = (8, 7, 16))#candidate|1847|(8, 7, 16)|var|int16
bop_1848 = relay.greater_equal(bop_1843.astype('bool'), relay.reshape(var_1847.astype('bool'), relay.shape_of(bop_1843))) # shape=(8, 7, 16)
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
var_1852 = relay.var("var_1852", dtype = "int8", shape = (960,))#candidate|1852|(960,)|var|int8
call_1851 = relay.TupleGetItem(func_476_call(relay.reshape(var_1852.astype('int8'), [16, 10, 6])), 0)
call_1853 = relay.TupleGetItem(func_478_call(relay.reshape(var_1852.astype('int8'), [16, 10, 6])), 0)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
var_1876 = relay.var("var_1876", dtype = "float64", shape = (90,))#candidate|1876|(90,)|var|float64
const_1877 = relay.const(-3, dtype = "uint16")#candidate|1877|()|const|uint16
const_1878 = relay.const([8,-3,-5,10,10,5,1,-6,10,5,3,6,-7,5,8,9,8,-2,5,-8,-5,9,-2,-4,-4,6,7,9,5,-3,4,6,6,-6,1,-5,1,-4,-9,-7,7,4,-3,9,7,-10,4,2,5,-2,-3,3,-1,9,5,-6,-7,-8,1,10,-9,-8,8,4,9,-2,-3,8,-1,-5,-1,1,-1,-10,-4,2,-3,-6,-2,4,6,-8,10,2,-5,10,-8,-5,9,5,8,-9,-10,1,7,5,-3,2,-1,9,-9,-1,1,10,-1,-5,2,1,-3,4,-10,-5,4,-8,-10,-10,-5,10,6,6,-4,-8,9,8,2,3,-3,-6,-4,1,-9,-4,1,-10,3,4,-1,4,2,3,6,-9,-2,7,9,-9,10,-5,-9,-5,3,2,4,5,9,-3,3,7,4,3,-3,-2,-8,-3,-3,1,-10,1,8,1,5,-6,3,-6,-7,-2,1,-5,-2,8,-7,-1,-10,2,-10,7,6,-6,7,9,2,6,7,4,8,-5,9,-5,-8,-8,1,-6,9,9,5,-9,9,-10,-7,-8,-4,-1,8,-3,4,-5,-9,3,4,-5,7,-5,1,7,-10,2,-7,-9,10,1,7,10,-8,5,2,10,8,-10,-1,-9,-1,4,-6,4,7,2,3,10,-3,-3,9,-6,9,7,2,-8,7,-2,-7,8,4,-7,-2,-8,4,-9,5,1,1,3,-4,-8,-4,-5,-9,-4,5,-7,8,1,7,4,-5,-5,3,-10,10,9,8,-5,-6,-9,-8,-7,4,-8,-8,-4,-7,9,-8,6,-7,-1,8,-4,-3,-5,-9,-7,2,5,-8,-1,1,-5,-9,6,6,2,3,8,7,9,8,3,1,-8,-9,6,-10,-1,-3,-4,-6,5,-2,-7,8,7,2,-6,9,6,6,10,-4,-5,-9,8,-7,9,7,10,-2,3,-8,8,4,7,-5,-6,-9,-6,3,-6,-8,-2,10,2,1,-7,4,-6,1,-10,10,5,-8,10,6,4,2,9,-9,6,-6,-9,-10,9,-8,-8], dtype = "uint16")#candidate|1878|(392,)|const|uint16
call_1875 = relay.TupleGetItem(func_285_call(relay.reshape(var_1876.astype('float64'), [10, 1, 9]), relay.reshape(const_1877.astype('uint16'), []), relay.reshape(const_1878.astype('uint16'), [392,]), ), 3)
call_1879 = relay.TupleGetItem(func_290_call(relay.reshape(var_1876.astype('float64'), [10, 1, 9]), relay.reshape(const_1877.astype('uint16'), []), relay.reshape(const_1878.astype('uint16'), [392,]), ), 3)
output = relay.Tuple([bop_1848,call_1851,var_1852,call_1875,var_1876,const_1877,const_1878,])
output2 = relay.Tuple([bop_1848,call_1853,var_1852,call_1879,var_1876,const_1877,const_1878,])
func_1884 = relay.Function([var_1841,var_1842,var_1847,var_1852,var_1876,], output)
mod['func_1884'] = func_1884
mod = relay.transform.InferType()(mod)
var_1885 = relay.var("var_1885", dtype = "int16", shape = (8, 7, 16))#candidate|1885|(8, 7, 16)|var|int16
var_1886 = relay.var("var_1886", dtype = "int16", shape = (8, 7, 16))#candidate|1886|(8, 7, 16)|var|int16
var_1887 = relay.var("var_1887", dtype = "int16", shape = (8, 7, 16))#candidate|1887|(8, 7, 16)|var|int16
var_1888 = relay.var("var_1888", dtype = "int8", shape = (960,))#candidate|1888|(960,)|var|int8
var_1889 = relay.var("var_1889", dtype = "float64", shape = (90,))#candidate|1889|(90,)|var|float64
output = func_1884(var_1885,var_1886,var_1887,var_1888,var_1889,)
func_1890 = relay.Function([var_1885,var_1886,var_1887,var_1888,var_1889,], output)
mutated_mod['func_1890'] = func_1890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_1920 = func_1170_call()
call_1921 = func_1170_call()
output = call_1920
output2 = call_1921
func_1958 = relay.Function([], output)
mod['func_1958'] = func_1958
mod = relay.transform.InferType()(mod)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mutated_mod.get_global_var('func_1958')
call_1959 = func_1958_call()
output = call_1959
func_1960 = relay.Function([], output)
mutated_mod['func_1960'] = func_1960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
call_1985 = func_1958_call()
call_1986 = func_1958_call()
func_1129_call = mod.get_global_var('func_1129')
func_1132_call = mutated_mod.get_global_var('func_1132')
const_1998 = relay.const([-4,8,2,-4,1,8,9,9,7,-3,-6,7,4,6,-10,7,-7,2,2,-8,9,3,7,7,5,10,8,-7,-3,-10,2,-7,-4,-8,4,-7,1,2,-3,-1,1,-4,-3,1,2,10,-1,-4,-5,-1,-8,3,-2,9,-6,-6,2,-5,-10,2,10,-7,9,7,-4,3,7,-3,-1,-4,1,-3,1,9,-4,5,-2,-4,4,5,10,-9,-5,7,5,2,-3,-10,-3,-8,-9,-9,-3,-2,-6,4,4,-2,6,-5,-3,6,4,-2,6,-3,3,5,-7,-3,-3,-9,-10,6,-2,-6,9,-3,-9,-9,-9,9,-6,-7,1,-6,-9,-1,-7,7,-7,-6,-7,9,-8,-1,1,-8,-6,10,7,4,-2,-4,-2,-10,-4,-7,-9,-8,-5,5,-3,-2,8,-6,9,-10,5,-2,5,-7,-2,3,-3,2,2,-5,-10,3,3,2,9,5,-6,-2,2,-1,4,-8,4,6,-9,10,1,7,5,8,-3,-8,1,-1,9,-7,-5,1,-7,7,1,-5,-3,8,4,-3,-8,-6,-3,10,-9,7,6,-5,-9,10,4,-2,-8,6,-6,-10,10,-1,-5,4,-2,7,-9,10,9,-7,5,-9,-2,6,-3,-2,4,-5,6,10,8,-5,-4,-4,5,5,3,-3,-8,-2,-5,4,-8,8,-8,-4,-8,5,6,-4,-3,10,-2,10,4,-2,6,10,-7,-2,7,-1,-6,8,8,-4,-2,6,9,-5,-5,2,5,7,-10,-6,6,-1,-4,4,-2,2,3,7,1,5,-1,9,-10,-7,-7,7,-10,6,9,5,-8,-7,-2,-3,8,-1,6,4,-8,8,4,9,-8,-8,-4,-10,2,3,2,9,7,-9,-1,1,-4,7,8,1,-10,3,-6,8,2,3,1,-6,-3,-1,7,-8,-3,-10,2,7,2,7,4,-5,-7,10,10,6,10,10,1,10,-2,7,2,5,5,-2,-9,3,5,6,9,3,-1,-9,-2,8,-7,-7,10,-3,-7,-4,-1,-2,2,6,-10,-3,1,-3,8,8,-10,-4,-10,-7,-1,-1,8,1,-3,-1,5,4,-5,8,2,-1,-10,5,2,-6,1,-5,3,8,2,-7,-3,-2,9,4,-7,-6,-9,-6,-10,-6,-2,-9,9,-8,-7,10,7,-10,2,-2,8,6,6,10,6,7,1,2,-5,2,7,-2,4,5,-4,6,2,1,8,1,9,4,6,-9,6,3,-5,-10,-4,6,-9,-2,-6,6,-4,10,7,-5,-9,5,8,-9,-2,-2,3,6,8,-10,1,-8,4,-2,1,-7,-4,6,-10,-4,5,1,-2,7,-5,6,-4,4,-4,9,6,6,8,-9,-8,-3,9,-10,-10,-2,-3,-4,-5,-4,-7,-6,1,-2,-5,-9,3,5,-7,2,-1,4,-5,10,-1,8,-7,10,6,7,4,-4,10,-1,-4,4,-9,9,1,1,4,-9,-6,1,2,3,5,-4,-9,-2,8,-8,8,-1,7,-10,-3,-3,9,-3,1,-8,-3,1,-7,-5,-1,-4,-2,-8,6,1,-9,10,-10,1,-9,8,-3,-6,-4,-5,-3,3,-3,6,1,3,-4,7,6,-5,-7,8,6,10,4,4,-6,5,-10,-1,8,10,-6,4,-3,6,-4,1,8,-9,-9,-2,-1,-6,-7,3,-8,-5,-8,-6,-10,2,-9,-5,6,-9,-6,-2,7,-10,-5,-10,-6,9,6,6,10,-1,2,-5,-7,-5,-7,-1,-5,9,-8,4,5,-9,-9,-6,-2,5,2,-2,6,3,-4,-8,-9,-2,-7,10,-10,-3,-1,-5,8,7,-3,1,6,-3,-2,3,9,6,-10,9,3,-8,-3,-9,6,-2,-5,-8,-9,-5,-1,2,-2,9,-3,3,-10,-2,7,-5,7,9,2,-5,8,4,8,3,-2,-5,9,-5,-10,-4,-8,9,-8,-7,8,3,-4,9,-1,-4,-5,10,-7,-4,1,6,-7,-5,5,-5,-6,1,5,9,-2,-1,-2,-2,-7,7,-4,-7,10,-8,-6,10,-3,-1,2,-2,-5,-3,3,5,2,8,-7,-9,-1,-1,-9,-8,-5,9,-10,-4,-6,-9,2,1,-8,-10,-7,1,5,4,5,6,-2,-7,-10,7,-8,6,-4,8,7,-6,-6,-2,-9,6,-2,-5,-9,-9,3,-6,-6,-5,-3,-2,-10,7,-3,8,9,7,-8,6,-5,8,-4,-3,9,1,-10,2,-9,-7,-10,-6,10,-10,8,-6,2,-2,-8,-7,2,1,-8,3,4,2,4,-2,-3,-1,-8,-3,10,-7,10,-7,9,-4,3,-8,7,10,10,-6,-4,-2,-3,-3,10,-3,-1,1,-10,-10,-4,7,-8,1,-9,-1,-3,5,9,10,7,8,-6,9,5,7,8,9,3,6,-8,-4,1,8,9,-9,-3,-6,5,-3,7,-10,-5,2,2,1,6,-2,7,7,9,-4,-3,1,8,-10,5,-9,-2,10,1,-5,-7,6,-6,1,10,-10,-8,3,-5,10,-5,-2,-1,1,4,-1,-3,-6,-3,-6,2,6,-7,5,-3,1], dtype = "int8")#candidate|1998|(960,)|const|int8
call_1997 = relay.TupleGetItem(func_1129_call(relay.reshape(const_1998.astype('int8'), [960,])), 2)
call_1999 = relay.TupleGetItem(func_1132_call(relay.reshape(const_1998.astype('int8'), [960,])), 2)
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
call_2009 = relay.TupleGetItem(func_476_call(relay.reshape(const_1998.astype('int8'), [16, 10, 6])), 0)
call_2010 = relay.TupleGetItem(func_478_call(relay.reshape(const_1998.astype('int8'), [16, 10, 6])), 0)
output = relay.Tuple([call_1985,call_1997,const_1998,call_2009,])
output2 = relay.Tuple([call_1986,call_1999,const_1998,call_2010,])
func_2018 = relay.Function([], output)
mod['func_2018'] = func_2018
mod = relay.transform.InferType()(mod)
output = func_2018()
func_2019 = relay.Function([], output)
mutated_mod['func_2019'] = func_2019
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2020 = relay.const([[[-7.068843,2.308703,8.627334,0.451687,-0.681417,-3.107545,0.795476,-5.493259],[-2.918403,8.419509,-1.781973,2.803289,-8.452322,9.728311,5.005840,6.791496],[2.698606,-8.655227,-2.610640,9.876096,-4.610711,-6.989460,-1.734477,0.478605],[9.349898,-6.818125,1.480826,0.156716,-3.085921,-9.473327,9.328825,-9.917833],[-4.164355,8.963270,-7.639795,1.347959,-8.535675,-1.675836,-6.305425,-0.348043],[2.986713,-7.245981,-9.803252,-4.166377,-1.708053,-7.700019,2.496966,-3.429730],[-9.621579,-5.399260,-4.736616,0.849737,-1.118558,5.543541,-7.803440,-7.270224]],[[-2.886450,-8.234658,-5.166281,-0.450607,0.175485,8.972722,4.486316,3.107052],[4.022467,-7.858045,0.321097,7.415951,2.575017,0.186574,-6.988229,3.950265],[-8.944729,0.195700,7.467481,5.865613,-2.709736,0.511878,-2.117126,4.306781],[-7.503226,4.389786,-8.360076,7.656258,-1.567155,8.845850,-7.167998,3.900155],[-7.335082,-4.541789,-1.648307,-4.995874,-4.449104,-1.243011,-8.534122,-6.553985],[8.943421,6.708868,-2.778768,-5.729323,3.585804,6.983443,-5.503566,-5.050443],[5.561391,-5.759134,-5.318190,6.871491,-0.618590,5.911048,6.434578,-8.481772]],[[9.147958,-5.175665,-0.915531,-1.284988,-6.817247,-6.366599,7.338185,3.413260],[5.764155,-3.916461,6.120492,-1.198028,-4.937327,-8.685564,1.711195,-6.798161],[-5.249662,5.076113,1.352734,-0.796075,5.914599,4.256765,2.712089,-0.755542],[-3.372551,-8.597772,-0.349146,-6.895708,-5.189218,-6.215901,6.074281,4.981241],[-8.381704,-7.389378,-0.199577,3.924598,5.009245,-1.998137,-4.823696,9.063156],[-6.920075,-1.634408,-9.613749,0.204143,5.282678,7.330750,-2.808652,4.323109],[2.411167,2.031303,-4.117860,0.946900,9.657046,0.364135,-9.809660,-4.754880]],[[-8.184721,7.699257,8.729893,-6.788971,5.297850,9.713181,-3.277903,-7.962307],[7.928703,5.604613,-3.129116,5.856561,7.783589,8.148762,-3.083324,-9.912937],[-5.029645,8.104965,-2.254140,9.702207,3.675581,3.305955,6.801340,1.134574],[2.294280,-2.455392,-5.615195,5.358293,-1.267046,3.466740,5.907904,-9.970705],[-9.290708,1.683662,8.636377,-4.489282,-9.772191,-6.241651,3.840034,-5.132718],[-7.835006,-6.787209,-1.192995,-9.611397,7.052856,3.660566,4.182345,-4.059610],[-0.065146,-6.416196,-8.176550,-1.009361,5.874717,-8.736923,3.320603,2.111580]],[[-6.649919,-8.129449,-8.891493,8.576741,-1.809755,-0.272143,-7.191536,7.393665],[-0.415066,-5.049914,-9.616575,3.345517,0.023531,-2.937355,-2.160508,8.876538],[-2.943861,-6.702221,-4.233701,-2.051435,-7.343389,2.348480,4.231982,2.074076],[-8.764972,2.156813,4.961163,-2.338370,-1.554626,5.250949,9.296386,4.030339],[-5.126776,-8.391743,-7.789471,6.501239,9.221604,5.437124,-6.486610,-0.195950],[7.124368,4.784721,9.353472,4.356954,5.310247,-9.547538,7.692901,-4.593614],[4.517451,4.682686,3.139138,0.632401,7.915477,6.845681,3.761331,-4.449832]],[[1.390373,9.210216,-9.046234,9.953241,0.991525,-3.448030,9.149269,-7.096652],[3.092724,-3.624815,4.511188,1.681630,7.752127,-2.236852,-6.020076,9.245671],[-8.179773,-0.888749,5.927747,-5.988770,-4.925441,-4.289880,0.502647,-8.199755],[-9.118185,9.243149,-4.451558,-6.903670,-9.103063,5.477823,2.117131,-6.443095],[3.515303,-8.651203,-6.423007,-0.355214,0.378206,8.684820,2.983218,0.760866],[-7.625453,1.555378,0.698946,-9.220179,-8.756598,8.810857,-7.288289,-6.042939],[-8.969482,4.934314,8.377576,5.717676,-5.218623,-5.333811,8.214135,6.505405]],[[-9.456327,-5.320018,-7.263833,0.894432,-5.535391,-6.033391,3.224519,6.208392],[-1.418490,-5.120884,-5.806484,-1.620149,-1.684993,-7.951434,7.022624,-5.445922],[0.178634,2.498142,1.273003,-8.882837,6.335585,0.681940,4.908009,2.133021],[4.912648,-1.640862,9.614582,-1.594363,7.387616,0.281424,-4.599650,-8.426039],[3.007009,5.146404,1.259285,-4.141902,-3.456954,8.399225,-6.969500,6.831576],[-8.580459,8.479246,5.935277,-4.005129,4.285275,7.391946,5.455242,5.430864],[2.465129,7.638376,-8.659309,-7.514378,9.586451,4.185832,-8.202759,8.179657]]], dtype = "float64")#candidate|2020|(7, 7, 8)|const|float64
uop_2021 = relay.cosh(const_2020.astype('float64')) # shape=(7, 7, 8)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
var_2028 = relay.var("var_2028", dtype = "float64", shape = (90,))#candidate|2028|(90,)|var|float64
var_2029 = relay.var("var_2029", dtype = "uint16", shape = ())#candidate|2029|()|var|uint16
call_2027 = relay.TupleGetItem(func_285_call(relay.reshape(var_2028.astype('float64'), [10, 1, 9]), relay.reshape(var_2029.astype('uint16'), []), relay.reshape(uop_2021.astype('uint16'), [392,]), ), 1)
call_2030 = relay.TupleGetItem(func_290_call(relay.reshape(var_2028.astype('float64'), [10, 1, 9]), relay.reshape(var_2029.astype('uint16'), []), relay.reshape(uop_2021.astype('uint16'), [392,]), ), 1)
bop_2035 = relay.power(uop_2021.astype('float64'), relay.reshape(const_2020.astype('float64'), relay.shape_of(uop_2021))) # shape=(7, 7, 8)
func_449_call = mod.get_global_var('func_449')
func_455_call = mutated_mod.get_global_var('func_455')
var_2049 = relay.var("var_2049", dtype = "float64", shape = (1800,))#candidate|2049|(1800,)|var|float64
call_2048 = relay.TupleGetItem(func_449_call(relay.reshape(var_2049.astype('float64'), [15, 15, 8]), relay.reshape(var_2049.astype('float64'), [15, 15, 8]), relay.reshape(var_2049.astype('float32'), [15, 15, 8]), relay.reshape(call_2027.astype('float64'), [1792,]), relay.reshape(var_2029.astype('uint16'), []), ), 4)
call_2050 = relay.TupleGetItem(func_455_call(relay.reshape(var_2049.astype('float64'), [15, 15, 8]), relay.reshape(var_2049.astype('float64'), [15, 15, 8]), relay.reshape(var_2049.astype('float32'), [15, 15, 8]), relay.reshape(call_2027.astype('float64'), [1792,]), relay.reshape(var_2029.astype('uint16'), []), ), 4)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_2054 = func_1170_call()
call_2055 = func_1170_call()
output = relay.Tuple([call_2027,var_2028,var_2029,bop_2035,call_2048,var_2049,call_2054,])
output2 = relay.Tuple([call_2030,var_2028,var_2029,bop_2035,call_2050,var_2049,call_2055,])
func_2074 = relay.Function([var_2028,var_2029,var_2049,], output)
mod['func_2074'] = func_2074
mod = relay.transform.InferType()(mod)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2074_call = mutated_mod.get_global_var('func_2074')
var_2076 = relay.var("var_2076", dtype = "float64", shape = (90,))#candidate|2076|(90,)|var|float64
var_2077 = relay.var("var_2077", dtype = "uint16", shape = ())#candidate|2077|()|var|uint16
var_2078 = relay.var("var_2078", dtype = "float64", shape = (1800,))#candidate|2078|(1800,)|var|float64
call_2075 = func_2074_call(var_2076,var_2077,var_2078,)
output = call_2075
func_2079 = relay.Function([var_2076,var_2077,var_2078,], output)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_2083 = func_1156_call()
call_2084 = func_1156_call()
output = call_2083
output2 = call_2084
func_2085 = relay.Function([], output)
mod['func_2085'] = func_2085
mod = relay.transform.InferType()(mod)
mutated_mod['func_2085'] = func_2085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mutated_mod.get_global_var('func_2085')
call_2086 = func_2085_call()
output = call_2086
func_2087 = relay.Function([], output)
mutated_mod['func_2087'] = func_2087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_2146 = func_1513_call()
call_2147 = func_1513_call()
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
const_2159 = relay.const([-8.899996,8.420874,9.079255,1.914381,3.269995,1.903506,-9.903202,8.696917,9.140806,5.056634,5.689766,-2.267999,3.452486,-1.175855,1.817293,5.101053,7.260343,8.227999,0.436077,-5.991764,3.081046,7.867090,-0.718192,4.276719,9.293167,5.813928,-8.545192,4.409330,0.025288,-1.532012,7.506011,-0.445548,-2.626142,0.868288,3.459820,-5.253239,6.187330,-5.249326,1.593177,9.438722,5.655065,5.622265,6.077714,3.282280,3.991563,7.147067,-2.892769,9.352468,5.936464,-1.744749,6.571163,3.049137,-2.960354,-6.357977,4.396209,8.826666,-3.443294,-3.168482,1.928261,9.474109,0.992848,4.940474,-7.952910,-1.255354,4.256856,-4.867292,-4.322446,6.265285,-8.788667,-3.528711,-2.384887,-0.229262,-1.598010,-9.050549,-5.242094,-4.645939,-3.708141,6.082049,4.376233,-1.513755,7.185556,8.160581,-1.031093,-4.416720,-9.954910,1.520234,-3.076801,-3.950299,-4.429909,-0.798770,-2.744315,7.298933,-9.618187,8.088885,-0.296655,-8.235755,1.245574,8.649493,7.076779,-5.242671,-4.927814,-1.168290,4.147497,-7.565693,3.530779,-7.271087,9.716168,-3.398213,1.005483,2.524878,1.835124,8.927353,5.796497,-1.341149,-0.972123,7.220473,-4.519453,-3.052330,-3.344027,-6.909511,6.572019,6.324554,-3.654369,0.445270,1.540890,9.166288,-9.794115,0.911441,-2.129358,-8.662002,-1.385111,5.637701,4.218232,-6.829321,-4.460189,3.251319,-3.011333,7.436236,-1.382080,-3.239051,3.731001,-5.870548,-9.799686,-5.898306,-0.280442,7.382361,-7.063875,5.366857,-6.377989,8.357981,-9.704354,3.568478,4.900927,1.149324,2.983524,3.030008,-1.420668,-8.816327,-1.883694,0.323116,-4.180608,9.517903,2.126375,-7.311157,2.582382,2.997529,8.793090,-2.213678,0.256905,-9.481324,6.598781,4.192406,-9.262667,-8.899262,-3.344053,5.742158,-9.346856,7.063113,7.681319,-9.933988,5.927174,7.596314,-0.882055,8.447661,8.991603,-6.900124,-7.610540,-2.211251,8.704714,5.184121,-6.510894,-8.170573,9.340127,6.902394,-2.399910,6.305724,9.250318,-0.344598,-4.926299,0.969688,8.110738,-5.859917,9.884315,-3.377118,7.694678,9.093092,-8.856760,0.864666,7.921047,2.173710,-7.415389,-5.666247,1.722531,0.197323,-5.371771,3.659216,-0.215283,5.429932,7.549917,-7.706357,6.760292,-8.117621,-5.544220,-5.945125,-9.558992,6.354606,-0.435052,-3.288080,-0.720265,-7.795292,-4.674761,-0.787090,4.642235,3.121775,-0.807617,-7.297343,0.704955,5.598171,-7.491972,0.572530,9.595339,0.079287,-7.420072,3.989760,7.328536,-5.066957,-6.479067,-9.156288,-1.824232,-1.737152,8.387007,7.870947,4.729980,-4.074101,-0.038189,7.533771,-8.817381,7.693865,-2.024667,9.594722,-2.567123,-5.916745,1.173347,7.777182,-0.227309,-3.078204,-0.743902,-8.653117,-4.769753,0.843108,-8.693882,4.283237,1.870748,-5.962611,9.370556,8.523928,8.236408,-0.599387,-6.194527,-7.743878,5.371900,-0.812962,-9.005471,-0.570541,-3.198545,7.943789,-9.509271,5.175999,-9.422332,0.828996,-2.431493,1.113037,-0.441509,-2.500846,8.206294,7.220915,4.403487,-3.815147,-5.410640,-6.775386,-5.058419,-2.571409,-9.389269,-1.491192,1.204186,5.381741,-0.308407,0.279286,-0.431436,4.104352,-8.270490,1.496351], dtype = "float32")#candidate|2159|(312,)|const|float32
call_2158 = func_963_call(relay.reshape(const_2159.astype('float32'), [13, 8, 3]))
call_2160 = func_963_call(relay.reshape(const_2159.astype('float32'), [13, 8, 3]))
output = relay.Tuple([call_2146,call_2158,const_2159,])
output2 = relay.Tuple([call_2147,call_2160,const_2159,])
func_2161 = relay.Function([], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
output = func_2161()
func_2162 = relay.Function([], output)
mutated_mod['func_2162'] = func_2162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_2236 = func_1156_call()
call_2237 = func_1156_call()
func_2018_call = mod.get_global_var('func_2018')
func_2019_call = mutated_mod.get_global_var('func_2019')
call_2260 = relay.TupleGetItem(func_2018_call(), 2)
call_2261 = relay.TupleGetItem(func_2019_call(), 2)
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
call_2264 = relay.TupleGetItem(func_476_call(relay.reshape(call_2260.astype('int8'), [16, 10, 6])), 0)
call_2265 = relay.TupleGetItem(func_478_call(relay.reshape(call_2260.astype('int8'), [16, 10, 6])), 0)
output = relay.Tuple([call_2236,call_2260,call_2264,])
output2 = relay.Tuple([call_2237,call_2261,call_2265,])
func_2266 = relay.Function([], output)
mod['func_2266'] = func_2266
mod = relay.transform.InferType()(mod)
mutated_mod['func_2266'] = func_2266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2266_call = mutated_mod.get_global_var('func_2266')
call_2267 = func_2266_call()
output = call_2267
func_2268 = relay.Function([], output)
mutated_mod['func_2268'] = func_2268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2332 = relay.TupleGetItem(func_2161_call(), 1)
call_2333 = relay.TupleGetItem(func_2162_call(), 1)
uop_2334 = relay.sin(call_2332.astype('float64')) # shape=(13, 8, 3)
uop_2336 = relay.sin(call_2333.astype('float64')) # shape=(13, 8, 3)
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
call_2338 = func_963_call(relay.reshape(call_2332.astype('float32'), [13, 8, 3]))
call_2339 = func_963_call(relay.reshape(call_2332.astype('float32'), [13, 8, 3]))
func_2074_call = mod.get_global_var('func_2074')
func_2079_call = mutated_mod.get_global_var('func_2079')
const_2345 = relay.const([[9.269407,-9.653586,5.830546,-8.041456,4.288653,2.355148,2.040728,-1.971208,5.290827,-4.355347,7.740210,8.676454,9.339115,5.196175,2.917659,-0.246425,2.344340,-3.081239,-2.213533,4.098858,9.811104,-5.089092,-8.909176,1.038933,-3.103261,-5.302820,-7.454995,3.807032,2.891933,-3.019160],[9.793709,6.412774,1.755918,8.391278,-5.771770,-8.239854,-8.865187,-3.361265,1.908994,-0.829980,6.950361,6.064647,-1.034583,-9.712367,-7.272413,-8.566564,0.171781,-3.078465,2.585431,6.157537,-3.061000,2.819436,-1.635261,0.191221,6.573250,6.699875,6.222180,3.878928,9.223759,5.548498],[-7.674110,-9.155545,4.944632,-8.869235,-8.649638,-8.715962,1.639729,7.265330,-3.158196,-2.150026,-2.689463,-0.068558,-2.154280,2.145032,3.442893,8.975112,6.979494,-8.211552,-7.354387,8.087060,-8.579724,-1.204247,-0.221073,6.480541,-6.344136,-9.350602,1.255946,-5.216842,-3.216995,-7.833425]], dtype = "float64")#candidate|2345|(3, 30)|const|float64
var_2346 = relay.var("var_2346", dtype = "uint16", shape = ())#candidate|2346|()|var|uint16
const_2347 = relay.const([-6.213351,6.130376,-8.438936,-9.043897,5.714266,8.265853,9.322486,-3.895521,-5.975937,-0.924760,-8.528131,1.182522,2.880814,-0.406985,0.198938,-7.596861,-7.678330,4.056870,0.125378,8.813118,-7.267768,7.372795,-0.161087,-8.178548,4.952289,-5.051094,3.964506,-7.796593,0.834871,-7.782639,-0.390586,0.757124,-8.468331,-0.908230,-2.700846,-4.436941,-2.350867,-9.333593,-9.502805,7.893566,4.274972,1.843650,6.123638,7.829351,-0.460784,3.685245,-0.751390,9.030870,-7.491426,-0.460089,9.453074,1.726863,-8.366843,9.568558,-2.900681,8.065331,-3.663674,5.836072,-4.806962,-8.436196,-7.844812,-0.098983,-7.936195,2.358513,8.990792,8.718660,-2.293416,-1.671431,-3.230764,9.317331,-5.166691,4.896550,1.221086,9.099589,9.399531,2.620457,1.118651,0.960555,9.503942,-4.396669,-4.255458,-8.971230,1.352568,-6.273963,-6.641906,-9.894647,-8.224507,2.129893,-9.418008,2.453844,-7.648797,9.790126,-0.384536,-6.633289,0.597573,-6.643080,-9.515882,1.962417,7.640006,-2.060764,5.539357,2.841267,-1.335232,-9.155298,0.047818,-7.560335,-4.640706,8.429258,-5.071828,-2.810371,2.520233,-1.426008,6.308888,1.514071,6.272275,-4.210654,-6.746796,-0.930419,-7.896092,-9.779041,-3.068962,-0.842092,-6.506944,-1.412786,5.487720,3.111512,7.928947,-5.894986,2.343505,-0.198553,5.297463,8.762475,-2.692964,-8.172956,-1.535238,-5.648714,-8.640366,1.902040,-0.323225,4.201338,2.754684,-8.701657,-9.935424,9.091725,-7.018006,-1.247638,7.116709,-5.893086,0.193387,-0.767412,6.337445,0.275208,0.349817,-1.615463,-0.194254,3.935556,-1.888319,-7.791900,3.512307,-8.554816,7.760594,6.024739,4.366434,-5.105428,3.515865,-8.930211,5.729749,-4.985656,6.174513,3.983415,-1.117471,0.720139,-7.134696,-2.642681,1.495202,-2.322743,8.864011,7.201108,6.711274,-0.965504,9.769703,1.640310,-7.139411,6.524072,-0.123822,5.147420,-6.819978,-7.659808,-0.635445,-3.138041,4.371846,2.915365,-5.685951,5.442029,-6.526620,-2.506036,5.490868,3.983182,9.272531,9.232706,0.525093,5.988080,8.391340,-3.122100,-2.261931,6.010906,4.161136,-9.475085,-6.628385,9.825302,1.471785,-8.134846,1.277647,-3.528510,-5.081406,2.733870,-7.429816,2.082301,-3.778171,-5.435693,-9.154810,-3.344886,-9.952009,-2.928869,9.889101,0.791273,7.354956,5.845939,8.251962,-3.485483,1.959497,7.589833,-2.395052,2.416197,2.075779,1.062746,4.237970,9.864424,-1.620924,-7.758683,-3.704575,9.891728,8.055248,-9.589412,-2.095503,9.452026,-9.844062,-5.706932,5.622064,3.848937,7.309729,1.928057,6.446497,-9.897412,-9.298417,4.329025,-4.196512,-6.336719,5.826280,1.471396,7.327269,4.702403,1.585446,-3.432104,0.058417,0.443106,-4.857817,6.609590,-5.713577,-1.626465,6.973529,6.549515,-6.677857,7.177452,-3.763985,9.654749,2.566327,-4.430718,-4.625171,-1.497338,-6.206498,-6.019858,-8.178948,-4.597162,5.440556,7.905092,-6.298592,5.293827,-9.498640,-7.680737,1.946559,7.598280,-2.927249,6.915949,-0.441853,-0.292752,-8.065119,-1.314755,7.361025,0.360009,0.505692,3.055594,4.532456,-8.705362,9.457324,-5.509088,-9.673988,-8.971498,2.845423,-4.906614,7.721365,3.254233,2.828120,-5.378049,-5.264906,-6.519136,-3.576531,-3.193771,-5.301378,9.567357,6.198572,-6.255853,4.816936,9.348209,-2.704487,2.964042,-6.005371,6.367870,-8.172578,-9.699201,1.372467,-9.160451,-9.159252,9.245098,9.760184,4.887698,2.530702,-6.879959,-6.253887,3.845468,1.459294,-1.025224,7.446591,-5.067514,8.944886,2.097663,8.100257,-2.185356,-1.718120,-8.402822,-0.072804,-4.487470,2.865110,8.875771,-0.384034,-0.499522,3.270404,-0.483325,8.805209,-6.711462,8.035810,8.762730,3.815067,3.138637,-7.686181,3.378090,3.478694,-5.831490,-7.722242,-3.332316,-5.883510,5.585399,6.382912,1.219281,-9.242651,9.592716,3.162879,-6.043871,-7.955373,-5.300050,8.992712,9.757444,1.472493,6.730205,3.400323,8.816266,-9.813155,6.110921,-0.477699,-0.132127,-7.270573,-5.967935,3.035984,-6.843526,-7.803533,-1.385472,-6.860510,-7.858555,1.813647,-3.135878,5.191853,-8.369145,-3.093573,2.711301,-7.820764,0.112422,8.971329,-6.954478,-5.195933,-4.606936,6.419517,-0.343981,9.738158,-4.846795,-3.001680,3.360981,-0.360322,2.577253,-6.355314,5.271816,3.975226,2.169676,-0.035753,8.110046,9.404365,-2.521659,-1.464853,-9.642482,7.266131,-6.464027,2.619139,-4.055724,7.201883,-1.804295,-3.102813,5.632989,-5.389256,5.532822,-9.559075,1.243684,-4.423341,6.944849,-4.648847,-7.057901,-7.750835,8.054676,5.710845,6.606108,-3.105524,-2.169494,0.759331,-4.085765,-7.986565,-2.772312,-8.965264,-9.834775,5.018149,3.936631,-6.906197,-6.070321,-7.684809,-8.312924,2.820988,-6.971711,-5.831318,-7.108688,-9.388857,5.161712,-1.852390,-1.922358,-4.450956,-3.771008,-5.842072,7.671871,2.142240,2.471792,-6.758390,9.791397,0.095093,7.414180,-7.064922,1.200457,-0.824934,-1.074228,-0.189404,2.990922,6.867769,0.848989,9.983349,-4.517751,-5.555520,-3.223144,-2.769027,-6.557887,8.257120,8.267293,7.083427,2.499474,5.861858,8.996802,-7.640232,-5.607794,-7.727119,5.551492,7.150841,-2.154947,4.222804,-0.617759,7.978289,8.134336,-3.327655,-0.463866,1.848454,5.619698,2.645153,-4.811853,7.053394,-9.920017,-1.324797,2.892394,2.904382,3.896697,-2.752345,-3.285832,-2.858751,-1.437391,-5.433866,3.583389,-9.747239,0.857905,9.411644,3.612925,-1.318880,-9.196347,4.364768,-9.025615,4.935603,8.400377,0.267597,1.958183,5.171222,-4.353647,5.989357,9.923319,-0.445893,0.554442,3.726916,-7.021566,-2.736098,-9.526499,-4.963024,9.627679,5.185666,7.916461,-4.049942,-8.853164,2.977491,-1.134988,-2.650020,-5.168207,-5.379732,-7.571225,9.446697,2.151634,5.676715,0.115899,5.413145,-2.008605,-4.594853,4.488611,-5.654510,-3.828117,3.293742,-1.632816,8.183686,-8.547962,4.140720,3.219313,-7.096976,-1.984445,-4.035907,3.251011,-4.468320,-8.793058,-3.718457,-9.172126,-6.419807,-9.043344,9.702446,9.151960,6.589546,-4.624695,7.944134,0.478555,-2.752421,3.557570,-7.981109,-4.048447,-2.826894,1.254003,4.524802,-5.959399,-2.599688,0.348130,1.656962,-2.672896,-2.067466,6.949075,-4.849653,3.683493,5.831248,-9.721622,-9.565305,-3.678694,3.106381,2.533959,4.165206,-3.577618,-0.073166,3.005933,1.210677,-7.931965,-6.227968,4.785695,0.998126,-1.381838,9.225467,-8.805677,9.891909,3.567201,-8.271831,7.890139,-3.022677,6.831808,7.661658,-1.023750,0.118018,5.680977,1.803059,-7.773895,3.876602,0.121533,8.688481,-9.907974,-2.253338,-5.449400,-5.883926,6.427324,7.836698,2.398250,1.799220,4.909988,0.288193,7.059979,3.189276,8.789061,-1.374286,-6.564095,-3.265305,-5.621433,-7.032883,2.669234,8.810832,0.177195,0.854578,3.951373,-4.929222,3.292643,8.480728,-8.812528,7.104390,-0.158435,-9.034446,1.686365,6.038317,-4.480823,-8.738103,1.462306,-8.482495,9.521171,1.549469,-7.594709,8.631401,3.431212,-4.706110,-0.918208,4.938371,4.809271,7.929396,-6.874097,8.857028,-2.643459,-8.639275,0.996644,-6.385957,9.592172,8.132452,5.753038,9.990215,-3.215807,5.228016,1.922560,7.285705,-8.467955,-9.448559,4.393125,5.154113,1.629075,7.871821,-5.117429,3.859206,-7.712398,-8.380377,-6.419269,-7.037185,4.240857,4.409589,0.247689,-8.718535,0.598250,-1.597079,-1.624227,-5.546638,-1.047382,-3.030273,1.867748,-9.455717,-4.729649,6.917444,-3.791569,9.769263,7.792504,8.495176,8.137768,3.469157,-4.652722,-5.234906,1.244624,-0.287493,-3.219894,6.773974,7.471014,8.394397,-4.191078,-9.658736,0.785793,-3.890382,-4.852121,8.553176,3.954742,-3.978087,-2.108635,-7.886279,1.605014,0.797519,8.740376,0.842099,-7.494926,8.681152,9.598557,-9.620897,3.718498,-6.523085,-6.333664,-2.292749,-7.530298,6.799414,0.103080,-1.367283,-7.515727,-7.042446,-2.499633,-8.760458,8.306255,1.768919,4.976057,3.661183,6.449149,-1.157757,2.635568,2.958481,6.036364,-8.529646,4.491136,6.198557,3.333986,5.882564,5.872906,-8.452514,9.952872,-9.324749,2.516547,-9.782616,1.894656,-8.718900,4.610373,-9.006043,-9.598072,9.381695,6.246384,-0.578356,-5.857098,7.419631,0.773783,-6.881089,6.777040,-2.131275,-8.132728,0.603275,2.897630,-2.339711,-1.377568,-8.198426,-8.477734,-6.289268,-7.305045,-5.535749,-6.866109,9.776081,0.340357,9.023460,-6.243026,-4.729790,-9.625922,-8.065941,3.280647,-9.023930,5.963054,3.848980,-5.673509,5.487082,-0.630401,8.474924,9.245666,-9.221682,0.257098,-6.267834,5.005966,-3.513890,-2.576431,-8.284502,-8.021691,5.682025,7.647431,7.099757,-9.076053,-5.144669,-3.597464,-6.467457,-5.747742,-9.992101,-8.568969,3.824578,4.222607,2.174094,-9.466328,-8.327565,-0.957209,-1.258005,-0.193228,1.790007,2.239168,2.223120,6.981406,9.860686,-0.922343,3.821333,-3.522998,7.368251,5.821950,-9.062551,-9.679086,-0.802871,-3.714728,-3.102149,-7.873664,-4.238625,0.179890,6.719855,5.551922,9.474635,-4.721312,-2.804583,3.071254,3.369585,-2.944580,3.019769,-6.461000,3.612070,-1.660802,5.261675,0.934970,-6.214767,7.472785,6.309164,6.080253,-4.909078,-5.694096,-9.183741,-0.370961,-4.859527,3.186860,9.004917,6.477991,0.806127,-9.881090,-9.756640,-1.720687,5.649752,-9.602709,-4.878344,5.607127,7.754881,6.610156,8.997630,4.261794,-1.956955,1.595304,-3.421984,-0.996478,1.693652,-5.303524,-4.088080,-2.828408,-8.948141,-4.539218,-1.600340,-8.600842,6.941772,-3.131976,4.481767,-2.203050,-6.402967,-6.134563,-0.275176,-7.166189,6.676331,0.199117,8.345189,6.088111,-7.638426,-5.516618,5.815438,1.406762,-3.411000,-8.924922,0.960217,6.281368,-9.499596,4.504981,-7.036284,-2.003686,-9.621473,2.604213,-2.283849,-0.544287,9.972180,7.746196,0.136177,4.159043,-9.827920,9.522803,9.312837,-9.832224,-3.010988,-8.171480,0.768972,8.178967,3.975824,-0.393994,6.009852,-9.399595,8.541458,-0.033723,-9.539261,0.765449,7.246035,2.153119,5.487483,-8.700641,8.736289,9.377159,-4.151593,-4.030663,4.977543,0.897083,4.946922,1.837065,3.325628,2.117945,-8.608606,5.638354,-0.113381,-5.869952,-0.272546,1.321874,5.976743,-1.459251,7.245118,7.978026,5.278044,-8.109088,8.646716,-3.204427,6.505630,-5.927682,-0.798242,4.436474,-4.024150,-3.284101,-7.512413,-2.686225,-3.501841,9.851485,-8.628178,5.338548,0.771590,-0.553923,9.279458,-0.659047,1.725827,-3.764117,-2.533138,-2.298648,9.931321,8.971774,-6.054574,-5.493414,-3.121038,7.209072,-9.277532,1.881815,-6.226379,-5.634758,-4.253378,-5.179599,-8.272247,8.699328,-6.458257,5.068645,-0.251537,8.043054,8.884398,-5.201965,-6.223566,-9.959092,-7.482456,-6.814617,6.576444,-5.255165,2.109753,3.719698,-2.272534,-0.037782,-3.263379,-4.562906,-9.048168,-5.519317,2.011698,-4.280760,-7.053870,4.484967,-2.608883,6.791861,-8.150202,4.574469,-9.910967,2.005678,0.341037,3.898583,-6.127363,-6.857064,0.471155,-0.355313,9.979764,-4.506067,7.373291,-2.401932,-8.127071,0.759706,-9.954963,-3.294112,-1.932455,8.268383,-2.834070,6.925031,-6.511026,8.014957,-3.368935,9.785279,-0.176911,5.470623,8.535568,2.279600,5.817290,-6.540529,6.196128,-9.814209,4.850249,1.826652,-5.182310,-7.384910,5.717864,2.292537,9.680570,2.664182,-8.983671,7.697662,8.646658,6.488831,7.672592,-2.861994,2.147167,-1.519821,-3.814313,-9.495348,8.733836,3.599955,-8.792375,-5.235840,9.806144,-3.583199,8.214714,9.011221,-2.662079,6.814099,4.677386,6.501507,7.448820,5.399920,2.897342,-4.549591,-5.529623,3.034150,-9.998125,-9.775543,-2.758877,-3.553849,-6.292894,-0.592921,-1.038001,-1.164829,8.346991,-1.203935,-0.021891,-5.791334,2.389044,-5.165567,-8.812158,7.982954,2.711841,0.906536,-6.054884,2.875555,2.962350,1.987042,-3.237755,4.306633,1.503075,-4.281953,1.160465,-1.468566,7.103082,-3.128014,-5.650451,8.235400,1.187244,5.403230,-7.111274,-9.623789,-3.089465,6.409237,-2.669480,-9.999110,1.814925,1.211289,0.140282,0.517658,-7.864575,3.655712,2.388859,-4.734962,1.664451,-2.809033,1.486282,1.197661,0.361240,-3.030915,-3.620648,3.275638,0.770762,-4.499748,-1.120931,3.761481,-1.873727,-6.044128,3.211116,-1.451476,-3.650808,-6.208146,-9.784199,-1.883676,9.263711,0.104012,8.409841,7.184195,0.573525,-6.394493,1.028794,-9.659630,-9.272639,-2.997233,6.779678,-3.153738,6.806901,8.393511,-8.625730,1.478514,-7.767564,7.071434,-4.782985,-5.637423,4.646707,0.035607,7.071606,-8.380149,-4.492832,1.963331,6.584509,-1.476061,0.308204,-8.655421,8.941894,0.877720,-0.302591,3.071838,7.888076,-1.419028,-3.296250,2.436363,4.785554,3.065094,-0.665170,-3.295759,-9.574591,6.212585,-5.712162,-3.705026,4.400856,-2.114241,-2.507266,-3.659127,7.263505,-8.477267,0.575369,4.913044,0.931060,-2.377193,-0.580003,-7.169394,2.858373,-8.965803,2.287611,2.920745,-3.951154,8.241099,-8.236764,-8.692302,-2.782199,2.428093,-4.863283,0.471175,-0.647850,-3.960023,-7.250476,4.089453,-2.494281,8.742357,-4.688618,-6.193920,-2.559037,-2.355711,-7.539356,6.471935,4.696331,-0.759955,5.933380,-9.332510,4.497549,-3.049823,4.102686,-2.972956,4.791618,0.171893,-2.473251,-3.837288,5.879176,8.588549,5.149161,2.653619,-0.272851,8.598880,4.349678,9.040726,-4.665586,-7.733744,3.461207,5.887142,-5.028791,1.268746,-8.162568,-2.890206,-9.205130,7.995466,-3.184153,-2.202371,-4.803101,-1.355665,3.902706,7.015033,-9.038077,8.397217,-9.046236,-9.130857,-9.474501,0.486514,-8.406733,-4.954435,-9.898545,-1.101813,-8.200257,9.133975,-5.716832,-3.521930,8.678768,0.180296,6.936983,3.249676,2.163812,4.819780,3.128241,1.151225,-0.169134,-9.066359,3.738421,3.774576,-2.897130,7.289400,-4.415141,-0.219558,9.632855,5.599904,2.081694,-4.059128,9.945913,-0.379161,-0.349790,-9.325437,9.788938,7.602743,9.780117,1.073309,6.887234,7.488858,-3.951429,3.547995,0.806399,0.276221,-2.607585,-6.702492,0.080101,-7.356341,-7.521187,-1.410610,-8.994553,-5.672297,-3.939427,4.331940,-2.491138,4.151651,-9.823061,-6.890015,-1.152500,-0.783723,6.931088,-5.198678,7.042694,1.673234,9.558934,-6.150920,9.316116,5.515802,-5.459329,-8.867442,6.968185,9.828869,-0.879572,-2.878630,5.395117,5.978658,7.135622,6.578633,4.951421,-8.109220,-2.809119,-4.937611,5.020104,2.984236,-0.775197,5.521964,-9.959933,6.720256,-5.904033,8.581755,9.098859,4.352295,-8.139665,6.554210,1.214672,-6.230924,-4.197215,3.862151,-7.074223,3.508596,-2.847220,5.131001,-3.944800,-5.103704,-7.861276,-1.955834,-8.769316,-1.521651,7.836271,-5.134258,9.762887,-8.995871,1.766393,6.162220,3.559921,-5.282677,5.667592,-8.139506,0.090079,2.376868,-1.067976,9.869471,9.249288,1.821522,7.419906,1.889015,-7.331085,7.610846,6.561714,5.538835,7.491920,9.450941,5.578279,-1.299840,-0.477916,-8.131493,-5.369515,4.019999,5.748537,-8.558942,4.299701,4.193843,9.811001,7.891845,-0.976235,3.458277,2.610057,-6.275220,-3.661714,0.775735,-0.360995,6.484827,3.492178,-7.066316,2.943225,2.284012,-7.460315,-5.281152,5.010125,3.657614,6.896906,-8.472432,6.936473,2.889883,2.863733,-1.553953,2.650839,-2.632631,-1.753615,2.755251,4.732789,-1.267054,-6.368039,-9.379283,5.634613,4.873912,-6.726374,9.697918,-3.827872,-3.094033,9.047338,-9.641497,-3.983758,2.293838,9.447869,6.215306,2.153713,8.286370,-5.461448,-0.352136,1.058795,-0.458018,6.916609,9.343207,5.330075,8.602234,-3.575232,9.268306,0.331800,8.613221,4.655205,7.893171,1.661862,-1.783369,-0.104155,2.796381,-7.723414,-6.335458,0.688718,-2.251813,1.932186,5.133774,7.916115,-4.786974,5.429122,0.542208,-7.896904,1.970906,8.214597,-2.137243,-5.313663,2.760962,7.358819,-6.629755,4.502032,1.650636,7.558724,-9.719807,2.925230,0.115899,7.889576,-9.702687,7.368660,1.564795,0.792609,2.932008,7.873254,0.368381,-3.849754,9.236794,-2.276499,-6.443765,1.817392,-6.732313,0.542124,6.932487,-1.091733,6.504546,9.954848,6.469265,-2.505459,4.753436,0.007593,-7.648526,-7.746290,-7.019711,6.672457,-6.870513,9.564639,7.345964,-2.841801,2.466882,-1.832672,3.974396,2.625479,6.258690,8.201116,2.923333,5.202354,-7.906282,0.247173,-2.916940,7.727157,0.984206,9.660570,6.531621,5.630378,-4.488263,0.297190,-9.993614,-6.638974,-8.553432,-7.520375,4.521708,-1.259366,1.848645,-7.848829,-4.214636,9.426185,-8.588751,-2.903427,-8.565673,0.373860,-2.968571,-0.279581,5.446705,-2.623999,-8.894686,-9.496159,-9.407495,7.700219,-0.914305,0.051473,9.661064,4.733916,6.504615,-3.000188,5.462857,-6.965296,-2.273193,-8.936757,-1.685648,-2.777479,8.516920,-0.816878,5.708202,-6.836605,8.856964,-1.369896,-7.497868,-1.131137,9.622561,2.187914,-6.629325,-6.393759,5.160765,7.027529,9.645069,-0.815675,-4.690859,-2.930998,5.284375,8.250408,-9.254020,9.587572,4.077269,-5.173513,-1.134911,-1.359278,-1.306919,-9.763732,8.077575,9.154173,5.340592,-9.785605,-6.657967,5.783167,2.883977,-4.476854,-2.326780,-7.564766,8.692250,-0.955273,-7.921661,0.476927,-6.108681,-9.899618,4.811404,-6.744420,-4.234755,-1.116058,-2.145824,-0.278972,-3.461640,5.415158,-3.741672,1.961766,7.046583,-6.432086,-5.618538,-3.517002,5.278354,-7.947859,-9.946341,6.049738,5.210010,8.457200,1.740432,4.480461,-7.649994,-6.918816,-6.486050,-0.041912,2.327825,-7.106458,-8.648154,-5.393174,8.289642,-0.021706,-3.702045,-0.260792,5.804608,8.002297,5.222101,2.295673,0.968200,0.936269,2.417614,1.525827,-4.118725,-8.342714,-9.291784,-9.524854,7.415057,3.142749,-0.151253,-5.087251,7.519956,-3.129858,-2.582382,-9.712744,7.015032,-8.821397,-3.322278,1.797240,8.903398,7.855444,6.788731,2.246881,4.953592,-6.214483,1.095951,5.948108,-9.284436,0.959435,3.020328,-9.629377,6.435590,7.756671,3.171166,-2.291121,-4.602395,-2.675506,0.394362,2.472747,9.925879,-9.884281,-0.864840,6.156696,5.779292,1.553572,4.387074,1.350877,-3.275984,-6.188271,-2.535667,-3.780532,-9.282360,-0.379734,4.761939,-3.874936,2.949023,2.999598,7.137168,-9.696324,3.720878,1.904572,3.775388,-8.237232,-2.322398,9.703776,4.628126,0.909615,7.810755,-8.109966,5.364861,9.289964,6.895082,-5.562425,6.281558,-5.818596,7.845568,4.880612,-4.274230,-4.597482,-5.978874], dtype = "float64")#candidate|2347|(1800,)|const|float64
call_2344 = relay.TupleGetItem(func_2074_call(relay.reshape(const_2345.astype('float64'), [90,]), relay.reshape(var_2346.astype('uint16'), []), relay.reshape(const_2347.astype('float64'), [1800,]), ), 4)
call_2348 = relay.TupleGetItem(func_2079_call(relay.reshape(const_2345.astype('float64'), [90,]), relay.reshape(var_2346.astype('uint16'), []), relay.reshape(const_2347.astype('float64'), [1800,]), ), 4)
output = relay.Tuple([uop_2334,call_2338,call_2344,const_2345,var_2346,const_2347,])
output2 = relay.Tuple([uop_2336,call_2339,call_2348,const_2345,var_2346,const_2347,])
func_2357 = relay.Function([var_2346,], output)
mod['func_2357'] = func_2357
mod = relay.transform.InferType()(mod)
var_2358 = relay.var("var_2358", dtype = "uint16", shape = ())#candidate|2358|()|var|uint16
output = func_2357(var_2358)
func_2359 = relay.Function([var_2358], output)
mutated_mod['func_2359'] = func_2359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2380 = relay.TupleGetItem(func_2161_call(), 1)
call_2381 = relay.TupleGetItem(func_2162_call(), 1)
output = relay.Tuple([call_2380,])
output2 = relay.Tuple([call_2381,])
func_2382 = relay.Function([], output)
mod['func_2382'] = func_2382
mod = relay.transform.InferType()(mod)
output = func_2382()
func_2383 = relay.Function([], output)
mutated_mod['func_2383'] = func_2383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2391 = func_1202_call()
call_2392 = func_1202_call()
output = relay.Tuple([call_2391,])
output2 = relay.Tuple([call_2392,])
func_2394 = relay.Function([], output)
mod['func_2394'] = func_2394
mod = relay.transform.InferType()(mod)
output = func_2394()
func_2395 = relay.Function([], output)
mutated_mod['func_2395'] = func_2395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2087_call = mutated_mod.get_global_var('func_2087')
call_2413 = func_2085_call()
call_2414 = func_2085_call()
func_1129_call = mod.get_global_var('func_1129')
func_1132_call = mutated_mod.get_global_var('func_1132')
const_2439 = relay.const([9,6,-8,9,10,-5,6,10,-9,-6,4,9,-5,-5,-2,1,-6,9,9,-9,8,3,-7,7,7,4,-1,-1,6,3,10,1,2,-1,10,2,-4,-1,8,-1,-3,-10,-10,3,9,-5,-10,5,10,5,-8,9,1,-6,-10,-6,2,9,9,9,10,6,-2,-3,9,-2,2,10,3,-2,3,-6,-6,-8,-9,-2,2,-8,-9,9,-7,-6,4,4,-1,8,6,8,1,6,2,-8,4,-1,6,-10,10,-4,3,2,4,-10,6,-2,-6,6,6,4,-9,-2,4,-10,9,9,-1,8,10,6,7,-2,6,-1,-3,2,-10,9,-8,10,-4,-1,-9,2,8,9,6,6,-1,-4,-4,8,-1,-9,7,-8,8,6,10,-9,6,2,9,-5,7,-7,-4,-4,-4,-3,10,-2,1,-6,-7,-9,-4,6,1,8,-9,-6,9,-7,10,-4,1,1,-3,5,3,-5,-7,4,10,-3,-6,3,10,8,10,-2,-9,5,9,4,-3,1,-7,5,7,-8,8,8,-1,-10,10,4,-5,1,-8,-6,-3,-9,1,10,4,1,-9,-2,5,3,-3,7,5,-10,5,4,-4,-10,8,3,8,-6,2,9,-9,5,9,-10,1,7,-7,-4,3,5,4,3,-3,10,6,-5,2,-7,-3,5,-6,-10,5,-3,9,-2,-10,-8,-4,10,-10,5,8,-2,8,5,-2,-6,-10,-7,-8,6,4,3,-4,7,10,3,3,-9,5,-6,8,5,-2,-10,1,-10,-10,4,8,8,-3,-5,8,-9,7,-9,-7,6,-9,2,2,7,-9,-8,2,4,-8,-2,-5,1,-6,1,-7,5,-3,9,2,-1,-9,-5,-6,-4,2,-5,9,-10,-8,-8,-10,-2,1,10,7,2,2,-7,-8,5,9,8,-5,10,-1,-10,-1,-6,4,-6,7,7,5,8,-6,-3,2,-2,-2,-2,-3,6,3,-8,7,-9,10,-4,1,10,6,4,-7,-6,-9,1,-1,7,8,2,-9,-10,9,6,7,-9,9,2,8,-4,6,-10,-2,-10,4,6,3,4,9,1,-8,-10,2,5,-9,8,6,-2,-6,-1,-4,-6,10,-10,2,8,2,6,-9,5,-10,5,2,4,-2,10,9,-5,-6,1,-6,5,-6,-3,10,7,2,3,9,-4,2,9,8,2,8,-9,2,-2,4,7,5,5,-6,-3,-8,8,-1,-1,10,2,-7,-10,-8,9,-10,-8,-10,4,1,-1,-4,-7,3,-3,-1,10,-7,-9,5,-7,-6,-1,7,-2,-1,-5,1,10,-2,-6,-8,-3,9,10,-1,10,-1,6,6,-6,1,4,5,-6,4,10,-10,-7,-6,-10,5,6,1,-5,10,-6,3,2,1,-3,-2,9,7,-9,-4,-1,1,4,-1,-10,10,-3,7,9,5,-5,8,-9,9,-9,8,-1,-9,-2,-5,1,-10,6,-2,-5,8,4,-3,10,-10,6,-9,7,-3,-8,1,2,4,7,3,-2,2,-7,-8,7,-8,-8,-10,-4,-1,-1,-2,2,-1,1,-10,4,-1,-7,10,9,-10,4,1,5,10,4,7,7,6,-1,-3,10,-6,2,-4,-1,-9,4,-2,-2,5,6,4,9,3,10,-4,9,1,5,4,2,10,-3,-7,7,-3,-3,6,10,-1,-7,-3,5,10,1,-6,7,-9,8,-9,7,8,10,-1,5,-3,6,-7,-9,-1,-10,3,4,-2,-7,9,-3,-3,1,5,5,8,-3,-4,-1,3,3,1,-8,-10,-3,1,6,-9,8,-4,-2,-6,-7,-5,7,-2,-4,10,5,8,-10,2,-3,-4,-6,3,1,1,2,-8,6,3,-2,-3,-6,-5,-8,-4,-9,-1,9,1,5,-9,9,-10,-5,6,-8,4,-10,2,-7,8,-5,1,2,3,7,8,9,-3,-3,-2,10,6,-7,7,-5,10,-3,-3,6,-4,-7,-8,-2,-1,-2,7,10,-3,4,-1,-4,-8,-5,-1,6,-1,-10,1,2,9,6,-7,1,-5,9,-3,-10,-9,1,-3,9,-2,-5,-1,5,-10,-5,-1,-6,-3,-4,-7,9,-1,-9,-9,-10,-7,2,-3,-9,-1,-9,-3,9,-1,2,9,-5,-4,-5,-3,2,2,-10,-2,-10,-3,5,6,-2,7,5,7,-8,-4,-4,10,7,-1,-10,5,-5,-9,-6,4,-1,4,-9,-6,4,2,9,3,7,-4,-6,-5,7,1,8,-3,-8,-7,-10,6,4,-1,1,10,7,-4,-3,5,-4,5,-4,3,5,-1,-2,8,-6,-1,-4,-6,5,5,-1,-9,-9,-7,3,4,-9,-3,-1,-8,-4,5,-10,-1,5,4,-8,-10,-9,9,8,-2,-8,1,7,-10,8,9,8,-6,7,8,-5,2,7,8,5,-4,4,-4,-5,-2,-2,3,-10,-3,-9,4,-1,-7,-8,-4,2,7,3,9,-6,1,1,-7,2,-9,5,2,10,2,4,-10,-4,-2,-10,5,1,3,-1,-4,4,-2,7,-3,-5,6,3,-6,4,-5,9,10,7,2,8], dtype = "int8")#candidate|2439|(960,)|const|int8
call_2438 = relay.TupleGetItem(func_1129_call(relay.reshape(const_2439.astype('int8'), [960,])), 2)
call_2440 = relay.TupleGetItem(func_1132_call(relay.reshape(const_2439.astype('int8'), [960,])), 2)
output = relay.Tuple([call_2413,call_2438,const_2439,])
output2 = relay.Tuple([call_2414,call_2440,const_2439,])
func_2451 = relay.Function([], output)
mod['func_2451'] = func_2451
mod = relay.transform.InferType()(mod)
output = func_2451()
func_2452 = relay.Function([], output)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2459 = relay.const([[[True,True,True,False,True,True,True,True,False,True,False,True]],[[True,False,True,False,False,False,False,True,False,False,True,False]],[[False,True,True,False,True,False,False,True,True,True,True,False]],[[True,False,True,True,False,True,False,True,False,False,False,False]],[[False,False,True,False,False,True,False,False,False,False,False,True]],[[False,False,False,False,False,True,False,True,False,False,False,False]],[[True,True,True,True,True,True,False,True,False,True,True,False]],[[False,True,True,False,True,True,False,False,False,False,False,False]],[[False,False,True,False,False,True,False,False,False,True,True,True]],[[True,True,False,True,True,True,True,True,True,False,False,False]],[[False,False,False,False,False,False,False,False,True,True,False,True]],[[False,False,True,True,False,True,False,True,False,True,False,True]],[[False,True,True,True,False,True,False,False,True,False,False,True]]], dtype = "bool")#candidate|2459|(13, 1, 12)|const|bool
var_2460 = relay.var("var_2460", dtype = "bool", shape = (13, 10, 12))#candidate|2460|(13, 10, 12)|var|bool
bop_2461 = relay.logical_and(const_2459.astype('bool'), var_2460.astype('bool')) # shape=(13, 10, 12)
output = relay.Tuple([bop_2461,])
output2 = relay.Tuple([bop_2461,])
func_2464 = relay.Function([var_2460,], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2465 = relay.var("var_2465", dtype = "bool", shape = (13, 10, 12))#candidate|2465|(13, 10, 12)|var|bool
func_2464_call = mutated_mod.get_global_var('func_2464')
call_2466 = func_2464_call(var_2465)
output = call_2466
func_2467 = relay.Function([var_2465], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
call_2569 = func_1958_call()
call_2570 = func_1958_call()
func_449_call = mod.get_global_var('func_449')
func_455_call = mutated_mod.get_global_var('func_455')
const_2573 = relay.const([4.912924,7.264602,-4.328742,1.424691,-6.326625,1.665089,7.143659,9.429169,1.018558,1.266138,7.716075,2.686867,2.596812,4.822997,0.065221,-3.980900,-4.910993,-6.081888,-4.780261,8.336787,3.185763,8.315325,9.287277,-1.460127,9.338152,6.189803,-1.602691,2.377690,8.971147,-9.543898,0.044516,0.489786,-6.393339,-3.024791,8.237313,-1.229423,6.353058,-9.494264,-0.644499,9.095128,-1.126564,-5.889032,6.508400,-9.823640,-1.551756,-6.752564,5.412195,-8.529120,4.409538,5.168981,-9.924122,2.734229,7.926383,-4.381752,9.962743,5.942606,-6.288009,-5.574164,2.255850,-2.651177,0.133567,9.226793,-3.524779,3.637657,0.928683,-2.868843,-1.053403,7.595048,5.045969,6.101742,6.366228,-0.636004,-9.654101,7.067866,8.416013,-0.793689,-9.773177,-1.423770,5.420181,0.585323,-9.812503,-3.506726,2.816661,-9.074781,1.503926,4.153890,-4.249667,-1.616490,-5.241791,9.128305,7.272365,4.426930,1.898527,-8.555218,1.199776,8.120377,8.944372,-8.796845,6.855550,-7.360215,-6.374273,7.792764,2.714989,4.061508,-8.021306,-7.741593,-2.434391,3.967221,9.570132,-4.389998,2.953469,-8.212600,0.978067,-9.953078,4.998447,3.063444,-5.541244,-4.674434,-4.861281,-0.687558,-4.597059,-3.638336,-6.161962,5.527747,3.822195,-1.007234,8.282335,-1.789471,8.247943,-1.757427,1.691241,-0.332330,-2.959049,2.299318,-0.833863,3.332716,-6.904051,-3.591095,-2.981851,-7.432470,3.119763,-6.818340,9.438273,-7.920676,4.508578,4.674955,-9.343970,9.815162,7.199061,-4.407419,-9.435829,-6.664993,5.215162,7.811878,-1.928244,-6.773383,-0.890938,4.304809,2.289939,-2.200571,-1.452936,9.755527,1.872653,1.915177,0.835275,-1.566923,-6.592617,6.972273,1.476337,9.091801,-2.798230,-5.990395,-4.505152,3.871748,3.521177,6.755410,3.737349,-1.937146,6.541157,4.600473,6.547525,-3.697603,9.241906,-9.705545,-8.120367,-0.980451,7.915858,7.431647,-5.780464,5.061340,-5.528874,0.748513,6.260511,-8.565465,-0.723397,1.191183,2.210085,1.246444,6.705026,-3.749348,9.292624,2.032018,4.476261,-6.781336,3.550838,5.275861,-2.099291,7.957881,-0.630563,-4.689059,-5.200612,6.631695,0.905065,-6.147725,-7.185614,-4.462067,5.894850,-7.827495,-0.715428,9.104478,-5.777482,1.729862,8.822829,-3.705453,-7.241055,-4.561505,-8.197280,3.139651,-1.384646,0.042296,-1.837159,-8.627177,1.686051,-0.123781,-3.399959,9.072935,-1.163027,8.007487,0.771988,9.101072,1.356713,-4.801306,5.695886,0.866138,2.372851,-6.106805,8.369591,-3.708385,7.048681,-2.750198,-0.883234,-4.609737,5.716283,-5.833795,9.016314,-1.236663,-1.992128,0.563178,-0.386720,2.092319,9.161514,0.442401,5.799690,8.995392,-6.227061,-3.914256,5.345803,6.071039,-5.206774,9.208188,-2.234487,-2.279891,8.816005,-8.176695,8.506477,8.425587,-2.028091,9.542823,-2.501133,-5.208431,-0.200102,4.795580,-2.583190,-2.736312,9.970573,-9.479577,-7.937899,-0.155580,-4.903162,1.141911,-5.246845,-3.463499,-3.974776,-3.649901,-5.400652,7.152622,8.839836,-2.086745,-8.380246,4.638333,3.899951,8.674803,-2.469918,0.482631,-2.663852,-6.498472,8.744410,7.397107,-8.376626,5.713782,6.038739,-3.579869,6.400881,-7.802407,8.688679,1.736116,3.364608,-2.209016,-2.897937,1.504573,3.117769,-9.438059,-2.426415,-1.635091,1.770214,-2.427510,-7.339877,-5.130901,5.315112,2.152202,-4.643068,6.528753,1.890328,7.386388,8.278645,3.739867,3.249434,-3.144448,5.994282,-2.164072,-4.426713,5.014317,7.029043,-8.391791,-5.618508,-8.079485,9.347446,6.690965,2.194123,-3.285218,1.576738,7.330785,6.365131,-7.400373,-1.765425,-8.598850,7.790780,-5.777902,6.716464,-4.461322,-4.308539,-5.754797,-2.325326,8.013773,-3.824624,9.955234,9.292930,-3.866633,-0.966746,8.456651,-6.826561,8.317780,-7.773298,-3.230085,-7.982786,1.463249,4.844767,-9.673038,8.079347,-0.626809,-5.435055,4.856390,-1.779290,-4.932263,0.292710,-9.310244,5.806600,0.629517,8.713951,1.869228,-7.227612,-6.883463,-5.258060,-1.951949,-9.948207,-2.639495,-1.870376,-9.319454,9.045128,3.766544,7.180701,-7.487622,7.381333,-3.796667,-1.037802,-7.043333,-3.049098,-3.117015,-4.333390,0.243431,1.349640,1.509595,7.057275,9.672767,-4.154010,8.300771,-6.490636,0.146820,-5.456503,-3.703388,3.989601,5.559039,4.866985,7.682363,-5.511306,5.031538,-0.086431,7.112308,-0.655936,-6.078532,2.689389,-2.410647,-8.639609,9.946299,8.033496,7.782098,6.849056,6.713083,-2.680420,-5.035247,6.193953,3.276914,-5.261358,6.981708,0.884781,5.223086,-4.155836,-5.534996,0.100402,9.193144,2.646314,-2.358669,2.931331,1.014759,-1.433280,6.362049,1.742325,6.327294,3.591312,2.590027,-8.905701,-5.178012,-0.701859,7.368902,-9.788834,6.161940,1.584712,-0.150872,1.041684,6.490893,8.797991,3.519532,2.240872,-7.799083,9.842946,6.234823,1.000274,-8.568388,-5.715353,4.141265,-0.966396,-2.426356,-1.659331,5.637709,-1.137097,7.650559,5.108390,7.587276,9.492517,0.722319,7.667723,6.797710,-4.363310,-9.466442,3.446075,-1.660308,-5.940772,-8.179053,0.596235,-8.590077,-7.606202,-6.892440,-5.506390,-4.991109,0.980462,5.650101,-7.223368,0.247720,-8.821023,8.251334,-6.867658,-7.013081,-6.904832,9.599068,-3.617577,2.287391,-8.337084,-6.395062,0.260448,-1.157069,-9.203371,3.199516,-3.701696,-7.913133,2.100776,0.546968,2.400552,-8.357461,-1.099716,9.646318,-0.217621,3.634488,-5.377106,9.435510,-9.701373,3.432671,7.286900,8.751443,2.987430,0.405814,2.868647,-0.924215,-0.514715,-1.015248,7.588693,7.939257,-0.460689,-1.523269,-1.544644,6.812313,7.450901,3.289573,1.468831,4.733294,-0.834594,2.089762,0.454437,-6.558987,6.057383,-8.715830,3.789638,-3.124339,-5.273144,-5.397585,-6.927921,8.534990,-9.336266,0.765935,6.480527,4.286028,7.219241,3.211950,-5.257416,-2.496363,-6.318210,-3.115209,-0.649037,4.496809,6.036240,2.339863,3.502201,-8.255572,6.206448,-7.971241,-7.928991,9.210343,-4.783812,-1.449614,-5.604437,-4.689090,0.787996,-8.669359,1.543122,-2.805954,-2.432680,7.945339,-9.595065,0.952621,2.758461,-0.684300,0.014986,3.736366,-6.685652,8.322356,-8.193740,9.587288,-6.198067,1.790734,5.547340,6.181317,1.386488,-0.177754,-6.475633,9.093926,2.451359,5.543900,5.247990,-1.327129,-2.993861,0.231317,-1.061116,-3.178499,-6.337553,-2.722733,1.444389,2.179765,-8.421666,-6.847884,-1.260039,-0.311444,6.337289,-3.539208,-4.508551,-1.869093,-3.693934,8.457062,-0.426839,-6.411234,1.125947,-1.490019,-6.442347,8.717835,5.604313,0.233835,-8.135887,2.957163,0.482116,-6.525647,2.734241,-4.179260,-1.665059,-7.992403,8.406366,-9.915987,5.635339,0.150974,-3.172810,2.562687,-8.483183,6.664727,-3.746946,-5.059077,5.658762,-4.637786,2.768590,-9.246454,-5.912216,-5.860237,3.933815,5.578684,6.230593,-6.611845,6.792358,-5.904537,-3.383421,-0.039427,-9.657236,-6.585098,-7.738667,-7.151547,4.440559,8.205602,1.970085,0.851501,-0.925511,-1.569096,1.667364,-3.595554,-8.998662,-9.700194,-7.522302,3.230574,5.844457,-5.530951,-9.873483,5.035841,-0.918225,-7.238038,-5.492216,-2.156717,-8.664998,9.885307,-0.678432,-2.921328,-6.241214,3.597031,-9.576971,8.784750,9.343972,9.571992,6.366756,6.519707,8.982270,9.814748,-0.615478,4.774262,-6.994799,-7.297144,-9.126273,5.190570,-3.655952,3.751017,-7.929938,-3.414309,2.099778,7.902545,6.830104,-5.010913,-2.521203,-3.535525,4.961808,2.343521,-3.038111,-3.379107,1.297690,4.518820,3.000266,-4.576098,-4.645489,4.279613,-3.069363,-7.462952,5.019097,-1.373903,-2.810923,-7.282740,-7.585909,-5.649429,-6.768221,6.079487,-6.003097,4.034407,-4.090970,9.418053,-5.795512,-2.786182,-6.410876,-8.552354,8.060398,4.572959,-2.702168,8.870861,-5.197357,2.329763,8.989107,-6.796642,-4.964590,1.171535,3.806550,6.955893,4.028916,-8.248559,-3.397544,7.931899,1.436398,8.569781,2.893263,2.918397,-4.366762,-0.075090,9.904921,-4.147163,-5.304048,-2.074377,-4.846064,7.916507,7.584045,5.629508,3.470575,2.052611,-5.838566,-5.642995,-8.980405,5.539462,-9.983548,-8.789490,-9.153738,2.877800,-8.156970,-1.033265,3.789863,-2.236768,9.417144,-6.705619,-6.151439,7.677890,9.665702,-8.293651,7.352729,-0.692308,5.438758,-6.618783,2.555838,-5.130828,3.134353,1.142234,6.407437,-0.548500,1.942157,5.973868,-3.570429,-9.149456,-0.189673,7.650958,-3.512177,3.727051,-6.980196,1.783747,-0.156351,0.344386,-9.444540,-2.013388,-5.911301,-6.372366,-1.895380,-9.430928,8.412981,-7.754262,3.443869,9.154302,3.332499,-9.272995,-9.078796,-0.367315,0.690532,7.012929,-7.335327,8.315587,-4.676495,-8.849455,3.382687,1.109924,-0.817520,-5.851061,-7.802224,9.566967,2.093625,1.694601,-9.815852,-3.207845,-1.040877,1.522053,0.261278,3.148756,8.195247,-9.673781,-3.032991,5.962903,8.694883,8.355437,6.631430,-0.011834,-2.811279,0.975875,4.785313,-6.989452,8.111338,-3.227699,0.543847,-3.290397,3.088768,0.310296,-2.191309,-0.926615,4.463442,2.996726,5.305974,7.920825,-4.135174,-8.791871,-8.047859,2.991330,-3.492569,-2.432891,0.344372,-2.211497,-6.259296,0.826165,-4.641239,-6.296257,3.036362,7.839578,4.229475,-9.811546,3.004256,6.357073,8.576447,7.128345,-5.587936,8.565849,-5.784375,9.724308,-1.879917,0.757227,-9.513078,-0.839407,-4.179671,-0.420890,-0.608239,5.587667,7.034335,2.277058,3.287898,5.070260,-0.796887,6.400745,-2.766271,2.871886,1.381113,-8.956113,1.900641,7.341873,-7.149798,9.214239,-4.812026,-6.160650,-3.069719,5.224510,-6.815252,7.227132,9.966455,1.684682,9.111253,-1.741426,5.037446,5.983087,5.939575,-6.546715,-0.144403,-6.106070,-8.878876,4.852357,-9.916888,-8.310805,0.302576,-4.829206,4.701412,-6.407704,-6.485957,2.155338,8.224884,-7.725098,-3.376786,-7.587851,9.198758,2.360328,1.393007,-1.416709,3.627882,-3.186611,-9.958444,-1.967699,-2.586003,2.233052,0.859268,7.956693,4.605759,-5.820001,-8.362707,-4.689499,9.299242,-9.945930,-6.673564,9.361111,8.122242,-4.430539,-9.421911,6.983867,-5.892102,3.396348,-9.804536,-3.782541,5.506511,5.965477,-7.313150,6.524143,3.440548,-8.444444,-9.756305,-0.466699,-8.584476,8.839945,8.184863,3.349481,1.615517,2.321967,2.576965,1.335161,-4.867262,8.085649,5.829440,9.786887,-7.556476,-4.430729,6.288274,-6.321792,-8.940156,-2.924249,9.561627,6.447847,-1.428473,-1.944938,-2.140616,-9.969569,-9.865194,1.686485,-8.517889,-3.299257,3.638129,1.018264,1.980462,-2.900050,-4.999474,2.277315,-5.168533,-7.834518,-0.346474,2.056464,2.482035,1.347069,3.543670,9.721999,2.551992,-4.452058,-5.554802,0.270886,9.532718,4.073316,-9.581728,5.342434,7.002059,-7.960303,-9.510212,9.508044,0.064642,6.789284,8.652366,3.656807,3.790658,5.154775,2.437432,3.628986,-8.810427,-6.974568,-4.567542,-4.379419,-9.951713,1.998056,-3.741314,-3.252278,0.006557,-7.652001,-7.127104,-8.196940,9.427870,0.402046,-9.029268,0.770121,-5.955290,-4.404964,-8.308816,-6.254249,5.519137,2.259390,-6.210828,6.511036,-3.651306,0.501841,9.043128,-4.595691,2.876103,-8.647632,-5.780311,9.351840,1.142916,4.118018,-5.287250,-4.515706,4.234292,3.183887,8.500277,-3.012061,-6.339092,-0.271520,8.546453,-2.178343,9.601897,-1.250512,-2.705621,-4.863281,7.079300,4.264248,8.990241,2.914712,-7.948303,9.921378,-3.756190,5.419911,7.402439,-3.428275,-9.418036,0.219618,3.156002,8.393373,1.220207,-4.928557,-5.080661,-3.638652,2.336469,-4.129085,-2.203772,-7.306054,3.718160,3.130689,3.739906,7.270840,-8.671818,2.139055,8.502216,-0.732225,-1.646883,0.034216,-6.855683,3.018942,-0.918935,9.856312,7.599913,3.935357,0.814275,6.442958,-4.448820,-7.111492,9.985623,3.179107,6.643156,-3.597009,-4.208166,-5.243323,9.489483,-5.397631,4.102483,5.431445,5.933850,-4.117364,2.693121,-9.430032,-3.654021,0.946527,-3.566059,-6.584452,-4.746884,-5.853708,0.689016,5.919765,-8.036756,-1.510228,-3.088495,-6.194522,-7.204027,-3.046240,-2.478421,1.088888,-2.987235,-3.603493,3.475142,-3.095924,7.172765,-5.906462,9.332044,-6.436818,-2.809986,9.551194,-5.488006,-8.476430,-4.523651,-9.044345,3.315636,-4.126808,-2.759723,2.080017,6.375060,1.619850,-9.564480,8.986251,-1.806051,9.560493,-0.176516,4.364340,-9.523034,1.436035,-0.746644,0.970311,-5.928190,3.125071,-0.617365,-0.502425,-0.046873,0.214939,-2.732566,-3.827343,-3.040674,4.044819,4.233794,2.504077,-3.883306,-1.102750,-8.050697,9.490237,7.745090,-0.582712,6.038571,-9.159089,-7.552514,-1.096410,-8.150603,8.395016,-2.602954,-8.469791,8.237345,4.754770,-1.239404,7.266617,7.942198,0.277131,3.508891,-0.810213,4.364647,1.064630,-7.541317,-4.949399,-0.441261,9.397526,-9.433106,-0.247209,6.096202,2.209633,-8.520166,6.425650,7.803187,-1.588300,-5.013406,2.169217,6.658544,4.708439,-9.588497,9.704295,-0.768953,5.527670,-7.215622,-3.341141,4.823039,7.835203,-5.230991,1.958189,-5.582666,6.511402,0.602324,-9.734849,4.683317,-1.516110,0.905507,-1.185633,0.588898,-2.764969,-3.843156,6.171771,-3.555170,3.955303,1.351093,3.895482,-6.657974,-9.098071,0.863424,7.668552,8.882157,2.783445,7.437449,-5.370902,8.670509,-1.593211,5.909222,-4.976698,-4.999672,4.873906,-6.958737,0.258091,1.941842,-6.543905,-3.740512,1.204217,-7.557810,-1.270667,-0.345383,-0.401611,9.834448,3.611584,-9.048481,9.324077,7.356867,3.293311,1.095869,7.211472,-3.285009,7.815854,8.646291,-6.102574,9.222619,9.941930,9.842650,-2.720103,-3.710160,-9.620944,9.394299,2.007225,-6.102708,-9.301635,-5.839316,-1.553410,-3.044482,3.203857,-5.497129,1.288301,1.908880,9.331639,-0.761921,3.929422,-0.128683,0.373518,3.472412,-8.509944,2.457836,5.322725,-5.674494,2.814988,-6.130894,-6.516407,-3.791969,-4.756375,-3.727718,9.266008,5.562796,3.155050,-0.614047,0.459795,-9.614829,9.941716,3.195953,9.612228,-8.324028,-2.273000,6.786734,0.507263,-2.249605,9.551406,3.406508,4.052257,-3.652378,-6.817447,0.031129,-6.536459,-7.060808,-7.975384,4.296927,1.599497,-1.470568,-7.739287,5.853450,9.206301,4.951371,-8.194291,4.336563,-4.341217,9.936682,-3.510312,-4.457260,-7.648443,-4.145423,-8.718158,-6.563224,1.816559,4.264199,-7.026665,1.395809,-8.801342,3.321827,-5.288682,-9.202448,-9.093143,3.750357,7.244609,2.818478,-4.735242,-4.306479,9.579506,6.439768,7.130331,-0.903113,7.786857,6.251567,9.563015,-4.687245,-4.301025,-7.435398,-7.914382,3.874962,0.860347,7.977218,7.934258,1.320661,-9.007525,1.936795,4.119346,-4.791723,-1.384274,0.563880,-0.475763,1.362463,-1.631494,5.178163,5.183459,-8.032889,9.244904,1.979038,8.597846,-7.248938,4.880921,7.642910,5.726318,3.817199,-2.212228,5.811589,-8.288067,0.215916,-6.100040,-3.528231,7.581432,4.557523,-1.278792,9.494114,9.102350,-8.923589,-3.024801,0.871423,5.683073,9.136594,7.318667,-0.296111,3.688258,4.594824,-8.107881,3.282276,-6.919206,-1.168465,7.554382,2.632911,2.452446,1.550888,8.269841,-7.362960,4.004674,-9.975010,-3.015565,4.873132,-9.340554,-7.601074,-1.258306,6.530644,-0.313243,6.098970,6.950777,-5.185019,-6.829025,-4.167012,-7.399200,-4.653109,-2.322565,6.113684,6.630239,-5.063383,0.605335,-1.609914,1.905777,-8.880093,-1.792749,4.570836,-6.036063,-9.985890,-3.573121,1.794913,4.682172,-3.795295,-9.307902,6.889321,-0.799750,-3.775750,-6.022688,2.946705,-0.528715,0.218234,-6.131803,-8.232303,-0.147213,2.320347,-7.023023,9.702298,9.923988,2.886675,1.067247,3.729068,7.017064,9.777053,0.258862,2.261435,1.636553,-6.859661,2.442272,-3.515891,9.783183,-2.879635,-3.838715,-8.167824,-2.976117,-6.476864,-9.805299,2.974678,1.081519,0.300151,-0.636293,-9.971165,8.188941,2.872271,3.518556,-2.398798,9.690076,-3.672987,-7.722704,8.224602,1.901268,2.414228,-6.869539,0.806320,5.374930,-2.369125,2.713927,4.558319,3.987483,5.131479,2.217691,5.891631,8.510838,-2.782980,-9.561666,-2.097078,4.183342,8.667264,-8.351121,6.754256,2.406718,1.776274,-6.620921,0.667974,8.936975,7.551219,-7.768918,-2.519247,-6.817907,-2.029276,-1.392712,-1.820298,-8.984346,2.668961,-1.269114,-0.607181,-2.933075,-4.297689,9.542013,-2.707430,7.005107,4.465048,7.811613,6.192166,-9.603231,-2.778205,-5.995296,0.987278,7.914287,1.625492,5.789983,5.196455,-5.736042,6.260927,-7.996891,-1.511814,2.164447,6.429522,3.132660,-7.322600,-4.726348,1.250855,-0.016277,9.285920,2.255924,9.567435,8.337502,0.468919,7.910291,5.759160,-6.204097,8.178406,8.920384,-1.236239,9.769222,-1.659787,-0.801874,-2.844125,-6.892132,-6.701853,-7.476420,6.891462,-0.015497,3.110044,0.672948,5.855699,1.769791,7.386570,-7.400559,4.235840,-7.965486,2.156243,9.868529,9.564131,-6.161366,-9.781733,-7.715048,-0.583420,-4.568936,-4.117733,-9.950564,1.923474,-7.849518,-9.897244,1.005315,-7.000332,8.227125,-9.036863,0.259066,9.720094,7.887076,-7.496706,0.596693,-1.176062,0.114667,8.748814,9.168678,4.821983,4.099411,-9.470137,3.221716,-1.972142,-4.637598,-2.462787,6.460262,3.828090,9.328324,-1.303006,-1.667576,-9.692315,7.062396,3.515527,-1.081756,-7.460087,-5.028692,-2.662487,4.325574,7.110818,4.916145,3.920400,6.708201,4.754160,-8.614063,2.226954,5.023810,-7.784211,8.043235,3.475158,-8.737535,3.800711,-5.080674,1.715167,-0.385874,4.611342,-5.395689,-5.574947,-7.683650,-1.690382,2.067199,0.068825,3.914864,6.586765,-9.603971,-0.674768,-1.284374,0.892772,-0.158767,-4.107834,3.637855,-5.394927,-8.148294,0.406816,8.809627,-6.896888,0.388226,9.693827,3.560626,8.431705,2.463200,6.095573,0.687161,-1.765510,4.867486,9.567528,-1.102751,-4.213322,-2.143624,3.218796,5.522284,3.658755,-0.176913,6.560596,5.213631,1.705426,-9.737231,1.851269,0.776931,2.903507,-0.466247,-8.139396,5.490805,-9.097333,-7.569162,6.997439,8.422349,6.955863,2.462228,9.904944,7.981017,5.558792,1.174627,-5.429028,-0.692709,0.477054,-9.223389,3.208357,-4.157120,5.601988,-4.486835,-2.694002,8.964354,6.893465,-9.645498,-2.758642,6.098215,-2.888614,-9.945960,2.453457,-3.095357,3.810766,-0.394314,-3.338286,-4.132633,-8.287006,-2.443796,-7.876562,-4.482697,-5.952791,8.587303,-4.824626,-0.812254,1.123954,1.954502], dtype = "float64")#candidate|2573|(1800,)|const|float64
var_2574 = relay.var("var_2574", dtype = "float64", shape = (4, 448))#candidate|2574|(4, 448)|var|float64
const_2575 = relay.const(7, dtype = "uint16")#candidate|2575|()|const|uint16
call_2572 = relay.TupleGetItem(func_449_call(relay.reshape(const_2573.astype('float64'), [15, 15, 8]), relay.reshape(const_2573.astype('float64'), [15, 15, 8]), relay.reshape(const_2573.astype('float32'), [15, 15, 8]), relay.reshape(var_2574.astype('float64'), [1792,]), relay.reshape(const_2575.astype('uint16'), []), ), 2)
call_2576 = relay.TupleGetItem(func_455_call(relay.reshape(const_2573.astype('float64'), [15, 15, 8]), relay.reshape(const_2573.astype('float64'), [15, 15, 8]), relay.reshape(const_2573.astype('float32'), [15, 15, 8]), relay.reshape(var_2574.astype('float64'), [1792,]), relay.reshape(const_2575.astype('uint16'), []), ), 2)
bop_2584 = relay.minimum(const_2573.astype('float64'), const_2575.astype('float64')) # shape=(1800,)
func_1129_call = mod.get_global_var('func_1129')
func_1132_call = mutated_mod.get_global_var('func_1132')
var_2592 = relay.var("var_2592", dtype = "int8", shape = (960,))#candidate|2592|(960,)|var|int8
call_2591 = relay.TupleGetItem(func_1129_call(relay.reshape(var_2592.astype('int8'), [960,])), 1)
call_2593 = relay.TupleGetItem(func_1132_call(relay.reshape(var_2592.astype('int8'), [960,])), 1)
uop_2596 = relay.atan(call_2569.astype('float64')) # shape=(8, 8, 9)
uop_2598 = relay.atan(call_2570.astype('float64')) # shape=(8, 8, 9)
bop_2605 = relay.maximum(uop_2596.astype('float32'), const_2575.astype('float32')) # shape=(8, 8, 9)
bop_2608 = relay.maximum(uop_2598.astype('float32'), const_2575.astype('float32')) # shape=(8, 8, 9)
bop_2618 = relay.mod(bop_2605.astype('float64'), relay.reshape(uop_2596.astype('float64'), relay.shape_of(bop_2605))) # shape=(8, 8, 9)
bop_2621 = relay.mod(bop_2608.astype('float64'), relay.reshape(uop_2598.astype('float64'), relay.shape_of(bop_2608))) # shape=(8, 8, 9)
output = relay.Tuple([call_2572,var_2574,bop_2584,call_2591,var_2592,bop_2618,])
output2 = relay.Tuple([call_2576,var_2574,bop_2584,call_2593,var_2592,bop_2621,])
func_2626 = relay.Function([var_2574,var_2592,], output)
mod['func_2626'] = func_2626
mod = relay.transform.InferType()(mod)
var_2627 = relay.var("var_2627", dtype = "float64", shape = (4, 448))#candidate|2627|(4, 448)|var|float64
var_2628 = relay.var("var_2628", dtype = "int8", shape = (960,))#candidate|2628|(960,)|var|int8
output = func_2626(var_2627,var_2628,)
func_2629 = relay.Function([var_2627,var_2628,], output)
mutated_mod['func_2629'] = func_2629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2018_call = mod.get_global_var('func_2018')
func_2019_call = mutated_mod.get_global_var('func_2019')
call_2631 = relay.TupleGetItem(func_2018_call(), 0)
call_2632 = relay.TupleGetItem(func_2019_call(), 0)
output = call_2631
output2 = call_2632
func_2652 = relay.Function([], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2653 = func_2652_call()
output = call_2653
func_2654 = relay.Function([], output)
mutated_mod['func_2654'] = func_2654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_2686 = relay.TupleGetItem(func_2382_call(), 0)
call_2687 = relay.TupleGetItem(func_2383_call(), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1824_call = mutated_mod.get_global_var('func_1824')
const_2689 = relay.const([[10],[7],[8],[-10],[-7],[-9],[5],[8],[-8],[-7],[-3],[-3],[5],[7],[-7],[-8],[2],[-6],[7],[-7],[-2],[-5],[6],[2],[-6],[10],[-7],[2],[-2],[-9],[10],[7],[-3],[2],[10],[4],[8],[1],[-3],[-1],[-2],[-10],[1],[1],[3],[-2],[7],[2],[-2],[-10],[8],[8],[-5],[1],[4],[9],[-2],[-2],[-1],[6],[-3],[6],[10],[10],[4],[6],[-3],[-9],[5],[-6],[-1],[-2],[-4],[-4],[9],[10],[10],[4],[3],[4],[3],[1],[-6],[6],[-10],[8],[-9],[-4],[7],[9],[-10],[2],[6],[2],[9],[9],[7],[1],[10],[-5],[-10],[-2],[5],[2],[-4],[10],[4],[5],[-5],[9],[4],[9],[8],[7],[7],[-10],[4],[6],[8],[1],[-2],[7],[10],[-4],[-3],[-2],[-1],[-10],[-9],[10],[-10],[-5],[-4],[4],[-10],[5],[6],[10],[8],[-5],[-8],[-7],[8],[-9],[6],[-4],[-2],[1],[-9],[-8],[-1],[-3],[-7],[-7],[6],[5],[8],[3],[1],[2],[-5],[-6],[-5],[-1],[-5],[3],[3],[7],[8],[6],[-5],[-10],[-5],[9],[-8],[7],[-9],[-8],[-3],[9],[1],[-4],[-10],[6],[-6],[-4],[5],[5],[8],[10],[-7],[9],[2],[-2],[-10],[1],[-3],[-6],[9],[-10],[4],[3],[9],[-1],[-4],[-5],[8],[8],[-3],[4],[-9],[3],[-1],[4],[-10],[-4],[-8],[6],[-7],[-6],[-8],[9],[-5],[7],[-7],[-1],[6],[-8],[-4],[-9],[-5],[-9],[-10],[-2],[-3],[-7],[1],[8],[-4],[4],[-4],[6],[3],[-8],[-6],[-1],[10],[6],[6],[8],[-8],[10],[-2],[5],[-3],[-5],[-6],[-8],[-9],[-5],[-5],[-6],[10],[-8],[3],[6],[10],[1],[6],[8],[-7],[-6],[-8],[-3],[3],[1],[-8],[-5],[-2],[5],[-9],[-7],[8],[-3],[-5],[4],[5],[-6],[-6],[-1],[-9],[-9],[9],[3],[6],[-7],[8],[-6],[-1],[3],[-9],[8],[10],[-9],[3],[7],[10],[8],[1],[3],[9],[2],[3],[8],[-6],[-9],[-1],[-9],[1],[9],[-5],[5],[-4],[9],[6],[3],[-1],[5],[-3],[-9],[7],[4],[-5],[8],[10],[-9],[6],[4],[-6],[-7],[4],[-8],[-7],[10],[-9],[10],[5],[3],[-6],[5],[8],[5],[-9],[-6],[-2],[7],[-5],[1],[-1],[1],[-8],[-3],[7],[-6],[-7],[-1],[6],[-3],[-6],[7],[-3],[4],[-3],[-9],[5],[-2],[3],[9],[-3],[2],[-5],[-9],[10],[-3],[-2],[-4],[7],[3],[10],[4],[-4],[-10]], dtype = "uint16")#candidate|2689|(392, 1)|const|uint16
call_2688 = relay.TupleGetItem(func_1821_call(relay.reshape(const_2689.astype('uint16'), [7, 56])), 2)
call_2690 = relay.TupleGetItem(func_1824_call(relay.reshape(const_2689.astype('uint16'), [7, 56])), 2)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_2704 = func_954_call()
call_2705 = func_954_call()
bop_2707 = relay.greater(const_2689.astype('bool'), call_2688.astype('bool')) # shape=(392, 1)
bop_2710 = relay.greater(const_2689.astype('bool'), call_2690.astype('bool')) # shape=(392, 1)
func_795_call = mod.get_global_var('func_795')
func_801_call = mutated_mod.get_global_var('func_801')
const_2713 = relay.const([[4],[-2],[6],[-6],[3],[-10],[8],[10],[-1],[3],[7],[-10],[-3],[1],[-10],[7],[6],[6],[-7],[8],[2],[2],[4],[-3],[6],[4],[5],[-6],[-2],[10],[-5],[-6],[6],[-10],[6],[4],[5],[-5],[-7],[5],[-4],[9],[-3],[-2],[1],[9],[-10],[-4],[8],[-9],[1],[2],[1],[-7],[10],[4],[-1],[5],[-9],[10],[-10],[-5],[-5],[5],[2],[-2],[9],[-8],[-3],[-9],[-7],[7],[9],[3],[-1],[-7],[4],[-9],[8],[6],[10],[-2],[2],[-1],[5],[8],[-4],[-1],[8],[-10],[-8],[8],[-6],[3],[-3],[-3],[-7],[-3],[-5],[3],[-6],[-3],[5],[5],[9],[-10],[2],[-1],[7],[4],[2],[-2],[-2],[-7],[-9],[8],[-9],[-8],[-6],[-8],[8],[-4],[-8],[-9],[-8],[4],[10],[-9],[8],[1],[6],[5],[-10],[-10],[3],[1],[-9],[-2],[-1],[-3],[-5],[9],[10],[-10],[-5],[8],[-10],[-7],[-3],[7],[6],[-1],[-7],[4],[-5],[-5],[4],[6],[5],[2],[6],[-1],[2],[-9],[4],[5],[5],[7],[-9],[10],[-9],[-2],[10],[-7],[-3],[4],[1],[-6],[-1],[10],[-10],[-7],[8],[-9],[-6],[1],[-5],[-10],[-1],[9],[-10],[-3],[-6],[5],[-3],[-3],[9],[2],[-6],[6],[-1],[9],[10],[-10],[-10],[4],[9],[4],[8],[3],[6],[6],[5],[-5],[-10],[-3],[10],[6],[5],[2],[2],[7],[5],[7],[1],[-7],[-5],[4],[-1],[-3],[2],[2],[9],[-3],[-4],[2],[-10],[7],[2],[-1],[5],[2],[10],[-2],[-5],[-4],[10],[-10],[-5],[-5],[-5],[-5],[8],[2],[-8],[-7],[-10],[-3],[-4],[-3],[-9],[-7],[-2],[9],[-7],[6],[-3],[-9],[-5],[-5],[6],[5],[10],[6],[4],[-5],[6],[-3],[-9],[8],[1],[10],[-7],[7],[1],[-4],[-3],[-5],[-9],[-8],[-2],[-6],[-5],[9],[-3],[3],[-4],[-8],[-3],[-4],[6],[-3],[7],[1],[-1],[-8],[2],[-1],[5],[4],[-8],[-4],[10],[-3],[6],[7],[-5],[2],[-10],[-9],[3],[-2],[-3],[3],[-5],[-8],[2],[7],[-3],[-4],[10],[-2],[4],[9],[8],[-3],[-7],[-8],[-9],[2],[10],[7],[3],[3],[-4],[6],[10],[9],[3],[-8],[-7],[-4],[7],[9],[-4],[10],[-3],[5],[2],[-2],[7],[-2],[-6],[-3],[-10],[2],[1],[4],[-1],[-5],[-5],[9],[5],[2],[6],[-6],[3],[-1],[1],[-10],[4],[-10],[9],[4],[8],[4],[-6],[1],[-9],[-9],[-8],[7],[4],[-10],[2],[8],[1],[1],[-6],[1],[6],[-7],[-10],[-4],[-1],[5],[9],[-1],[-2],[10],[1],[1],[9],[-4],[-7],[-9],[4],[-5],[-4],[5],[-1],[7],[4],[5],[-8],[-1],[-6],[-1],[-4],[-8],[-3],[6],[-2],[-2],[-10],[-2],[-1],[3],[6],[3],[-4],[1],[9],[-2],[8],[-6],[8],[-8],[4],[7],[-1],[5],[7],[-7],[-7],[-4],[-7],[10],[8],[8],[4],[9],[-7],[2],[-1],[5],[7],[1],[-9],[6],[-7],[6],[7],[9],[-8],[3],[5],[5],[1],[3],[-6],[3],[10],[7],[10],[-3],[6],[-2],[-5],[-8],[2],[-4],[3],[8],[7],[-7],[2],[6],[4],[1],[-9],[-5],[-6],[-5],[10],[4],[5],[8],[9],[6],[-7],[-9],[-3],[-3],[8],[-2],[-2],[1],[-4],[9],[-2],[-7],[-2],[8],[10],[7],[7],[8],[-1],[-6],[7],[-10],[-5],[-7],[9],[-4],[-2],[1],[5],[-7],[-5],[2],[-2],[-1],[-3],[6],[7],[1],[6],[2],[7],[-10],[6],[-4],[1],[5],[8],[8],[-10],[-5],[-10],[-7],[6],[10],[7],[9],[7],[-4],[1],[3],[1],[-7],[-5],[-9],[6],[8],[-6],[2],[2],[-5],[-3],[6],[4],[-2],[-9],[-8],[-10],[7],[4],[10],[1],[-5],[-2],[8],[10],[-4],[8],[4],[1],[-8],[2],[9],[2],[9],[4],[-5],[7],[2],[10],[5],[1],[-4],[1],[-2],[7],[-3],[9],[1],[9],[-9],[-9],[-10],[6],[-8],[-1],[-6],[-2],[3],[2],[6],[-9],[-8],[-2],[-2],[-1],[6],[5],[8],[9],[8],[7],[-4],[8],[-4],[7],[2],[10],[4],[1],[3],[-7],[1],[6],[-5],[-5],[4],[-1],[-3],[-6],[-9],[-1],[-8],[-3],[3],[10],[-7],[8],[1],[9],[-8],[3],[8],[-8],[2],[10],[-6],[-4],[-1],[7],[-2],[-3],[-6],[-7],[4],[6],[-8],[-2],[2],[-9],[-4],[6],[9],[-4],[-9],[-6],[10],[8],[-10],[-6],[10],[-6],[1],[-7],[8],[7],[-3],[1],[5],[4],[-8],[2],[2],[7],[-6],[-8],[-7],[5],[2],[2],[5],[1],[-2],[-2],[10],[10],[-8],[8],[-4],[-4],[10],[-7],[6],[-6],[1],[6],[7],[6],[2],[8],[-3],[9],[-5],[-1],[-4],[1],[5],[-10],[9],[9],[5],[-8],[5],[-4],[3],[8],[-4],[-7],[-6],[8],[-1],[3],[-9],[9],[10],[-8],[3],[9],[-3],[4],[7],[-1],[-9],[-10],[7],[4],[-10],[-8],[-1],[-5],[-4],[9],[-2],[-7],[1],[10],[-7],[1],[-9],[2],[2],[6],[2],[-9],[10],[7],[-10],[3],[-3],[6],[6],[-4],[-6],[9],[-5],[-5],[-7],[-6],[-6],[6],[-10],[2],[-9],[1],[-9],[-8],[4],[-8],[-6],[-8],[-7],[7],[-4],[5],[-2],[8],[3],[-2],[-6],[6],[2],[10],[5],[-6],[4],[3],[9],[-9],[5],[-4],[4],[8],[1],[2],[3],[-1],[-2],[-10],[-9],[-10],[-10],[-8],[3],[1],[1],[4],[7],[-3],[-2],[-4],[-2],[9],[-5],[5],[-5],[9],[-7],[6],[4],[1],[-5],[9],[7],[-10],[8],[5],[8],[6],[-2],[9],[5],[5],[-7],[-4],[-10],[-4],[-10],[-7],[-6],[5],[1],[-4],[5],[-6],[8],[-6],[-5],[6],[4],[1],[-5],[-9],[10],[3],[4],[-2],[9],[6],[7],[-10],[-9],[-9],[-9],[-6],[-5],[7],[4],[6],[-3],[-3],[-8],[-4],[2],[-10],[3],[-5],[6],[9],[-7],[8],[-4],[3],[-2],[-3],[7],[-6],[3],[-1],[-9],[4],[-8],[-6],[-3],[2],[10],[3],[5],[-3],[4],[-6],[3],[5],[1],[1],[-6],[3],[5],[10],[6],[9],[2],[-9],[7],[-7],[-7],[-1],[4],[-6],[-1],[-4],[5],[-3],[-9],[-8],[5],[-1],[9],[-5],[2],[-7],[-5],[-3],[2],[4],[8],[2],[-5],[4],[8],[-9],[1],[-9],[9],[-9],[5],[4],[-2],[-1],[-6],[-2],[2],[10],[7],[-3],[7],[-7],[1],[-3],[9],[3],[-5],[6],[-4],[6],[1],[-4],[1],[2],[9],[-2],[-9],[-7],[4],[-3],[9],[1],[-3],[-5],[-3],[6],[-10],[6],[-4],[1],[6],[-10],[-4],[-7],[6],[-3],[6],[-10],[10],[-5],[-8],[-6],[-1],[2],[-3],[-1],[-6],[-5],[-7],[-9],[4],[9],[-8],[10],[-6],[-1],[-6],[-5],[-9],[4],[-9],[10],[5],[4],[-10],[6],[-6],[4],[4],[10],[-9],[-6],[-9],[-1],[1],[-10],[-10],[6],[8],[7],[4],[9],[-8],[2],[7],[4],[4],[-10],[-3],[1],[8],[-4],[2],[2],[-9],[-7],[4],[-1],[-1],[4],[6],[3],[-8],[-4],[5],[6],[-7],[-2],[10],[10],[-4],[-2],[-2],[-1],[-7],[-10],[-3],[-4],[-7],[-3],[-6],[-8],[1],[5],[-5],[-1],[-9],[-9],[6],[-6],[5],[8],[1],[8],[-2],[2],[1],[-2],[-1],[4],[-9],[7],[7],[-3],[-6],[-8],[4],[-10],[7],[3],[-10],[-7],[9],[1],[-4],[6],[-9],[-3],[10],[1],[-4],[-8],[4],[3],[7],[-9],[3],[6],[-5],[9],[-2],[-3],[1],[7],[-4],[7],[7],[6],[5],[-3],[3],[9],[-9],[-7],[-4],[2],[-5],[-6],[2],[6],[-2],[-4],[10],[2],[-9],[-2],[-6],[10],[6],[10],[4],[-5],[-8],[3],[-4],[8],[4],[9],[-1],[-3],[-4],[3],[-6],[7],[-10],[1],[8],[5],[6],[-8],[9],[-10],[-7],[8],[10],[10],[-6],[5],[-8],[3],[9],[2],[-9],[5],[-6],[-10],[8],[-9],[9],[-5],[-1],[-2],[-10],[1],[9],[-3],[-10],[-10],[-3],[8],[8],[6],[6],[-3],[5],[3],[-4],[6],[-9],[-9],[-3],[-1],[-9],[-5],[3],[-4],[1],[-9],[5],[3],[1],[-5],[8],[9],[8],[-8],[-2],[7],[-9],[6],[6],[-5],[7],[-6],[-9],[2],[3],[-4],[-1],[-8],[3],[-2],[-6],[-6],[3],[-9],[9],[-8],[1],[1],[-2],[-9],[-2],[-6],[8],[-4],[4],[5],[6],[7],[1],[-8],[1],[1],[9],[3],[6],[-6],[6],[3],[-8],[4],[4],[-3],[1],[10],[7],[6],[-4],[-1],[8],[-4],[-5],[7],[4],[5],[9],[-3],[-1],[3],[-8],[5],[3],[-3],[-8],[-1],[8],[5],[8],[5],[1],[4],[-3],[1],[5],[7],[-1],[9],[6],[2],[-10],[-4],[-10],[4],[-10],[2],[2],[9],[4],[9],[-8],[-3],[1],[-2],[7],[2],[-8],[-8],[5],[8],[10],[5],[5],[7],[-8],[9],[3],[2],[7],[2],[7],[-1],[-10],[3],[10],[1],[3],[-4],[-3],[-10],[-7],[4],[4],[-3],[-1],[6],[9],[-3],[8],[-6],[-9],[-8],[4],[5],[-3],[8],[-5],[-10],[-10],[1],[-8],[-9],[4],[-5],[8],[-9],[-8],[-1],[1],[2],[2],[-5],[-2],[-7],[8],[4],[-3],[-4],[-3],[-7],[10],[-9],[-5],[3],[-8],[-1],[4],[-9],[-3],[-9],[-2],[-8],[3],[10],[-10],[-8],[3],[1],[2],[5],[8],[2],[5],[10],[-6],[6],[1],[-1],[-5],[4],[-9],[8],[-2],[1],[2],[3],[5],[-1],[5],[-6],[-10],[8],[-8],[10],[1],[-3],[-6],[4],[9],[-1],[-5],[-10],[-8],[-1],[-4],[-3],[-3],[10],[2],[-7],[3],[5],[10],[-7],[-7],[7],[-3],[-2],[-9],[5],[2],[-10],[10],[6],[-7],[5],[2],[9],[-9],[10],[-7],[8],[3],[-2],[-3],[-8],[6],[9],[7],[8],[-8],[-5],[-4],[4],[-3],[9],[-9],[-9],[-7],[9],[-7],[-6],[-4],[-10],[10],[-6],[-2],[-1],[-5],[2],[-7],[-7],[10],[-3],[8],[-6],[10],[1],[6],[-6],[9],[5],[10],[2],[2],[3],[-4],[10],[-8],[-10],[6],[5],[-7],[9],[-8],[-10],[-4],[10],[4],[9],[-5],[5],[-5],[-3],[7],[-1],[-1],[-8],[-5],[-4],[3],[-9],[10],[3],[1],[-9],[-4],[-6],[-9],[-4],[-4],[1],[3],[6],[8],[10],[3],[-8],[-9],[6],[-3],[-4],[9],[-8],[1],[-7],[8],[10],[9],[9],[5],[9],[-9],[10],[8],[-7],[9],[9],[-1],[6],[-10],[-7],[-1],[10],[-5],[7],[10],[-8],[5],[-6],[2],[-3],[3],[10],[-1],[-8],[-9],[9],[-3],[10],[-8],[8],[5],[5],[-3],[-2],[-4],[-9],[8],[-3],[-6],[-2],[-5],[5],[-8],[8],[3],[1],[3],[7],[-9],[-5],[5],[2],[-1],[-4],[7],[2],[-7],[-3],[-1],[10],[-6],[-2],[-9],[7],[8],[-4],[5],[-6],[-4],[-5],[-6],[-4],[3],[7],[-8],[-8],[10],[-5],[8],[8],[5],[-7],[-10],[9],[5],[5],[-1],[4],[8],[-6],[10],[3],[5],[-8],[2],[-7],[10],[9],[8],[5],[2],[-5],[-1],[-6],[2],[-5],[7],[4],[-6],[5],[10],[4],[7],[-1],[-1],[-8],[-6],[-7],[4],[6],[-7],[-10],[-9],[-6],[-7],[-4],[4],[-9],[3],[-6],[6],[-9],[-9],[-1],[-2],[-8],[-10],[-3],[5],[5],[-2],[-10],[-8],[7],[-9],[-6],[-9],[9],[-3],[-10],[9],[-4],[-10],[-7],[8],[-8],[-2],[-9],[5],[2],[3],[9],[4],[1],[-10],[2],[10],[-8],[5],[-7],[9],[5],[4],[-2],[2],[-3],[1],[-6],[-1],[2],[-7],[-3],[-2],[-9],[-8],[10],[-2],[9],[-9],[-4],[-4],[-5],[-8],[9],[9],[3],[8],[4],[8],[-7],[-10],[6],[-3],[9],[-9],[-2],[-8],[9],[1],[5],[1],[-5],[5],[1],[3],[-2],[6],[-8],[-6],[-1],[-7],[-7],[4],[-1],[5],[-3],[6],[-7],[9],[4],[7],[-6],[5],[-4],[-2],[5],[9],[-6],[-9],[-8],[-5],[-1],[2],[9],[8],[-3],[9],[-10],[5],[5],[-10],[-7],[-2],[4],[10],[-8],[-6],[7],[8],[7],[-1],[-3],[-2],[-5],[8],[4],[-10],[-6],[6],[8],[3],[-2],[-4],[5],[4],[10],[-2],[6],[-7],[-1],[-2],[-10],[8],[9],[-6],[-9],[-2],[8],[-9],[-7],[-4],[-8],[1],[10],[-8],[-2],[6],[5],[10],[5],[2],[6],[4],[-7],[6],[-5],[3],[7],[-9],[2],[8],[8],[-8],[7],[8],[5],[-5],[-1],[3],[-1],[5],[9],[1],[-2],[1],[-8],[9],[-2],[-10],[2],[-2],[-7],[8],[-5],[9],[1],[-1],[-2],[4],[-3],[-9],[5],[-8],[5],[-9],[-7],[4],[7],[3],[4],[-9],[-5],[-3],[5],[2],[-6],[10],[9],[2],[5],[10],[10],[7],[7],[-1],[-1],[4],[-1],[5],[-8],[-1],[-6],[-6],[8],[-10],[9],[8],[-4],[-9],[4],[-2],[8],[-10],[-4],[-4],[-2],[7],[-7],[-4],[10],[9],[-3],[-1],[1],[-10],[1],[9],[9],[-10],[-4],[7],[9],[-5],[-8],[-1],[-2],[10],[-7],[-4],[4],[-3],[-7],[4],[-2],[3],[7],[4],[-4],[2],[8],[2],[4],[-7],[4],[1],[-7],[-3],[-7],[-2],[-1],[6],[5],[-6],[1],[-2],[-3],[-10],[8],[-10],[-3],[10],[-7],[6],[-10],[-4],[-5],[1],[-4],[-2],[-8],[3],[9],[-6],[5],[9],[9],[7],[4],[2],[6],[-7],[10],[-3],[-6],[9],[-9],[5],[8],[-7],[9],[2],[-7],[6],[4],[5],[5],[3],[9],[-10],[-8],[1],[3],[-7],[7],[-5],[-10],[-4],[6],[8],[7],[-2],[-5],[-8],[8],[1],[8],[5],[-8],[-2],[6],[1],[4],[5],[-5],[-2],[8],[7],[-8],[10],[-4],[3],[-5],[-3],[3],[-5],[-5],[-9],[2],[-1],[-8]], dtype = "uint8")#candidate|2713|(2145, 1)|const|uint8
const_2714 = relay.const([[3.859022,-2.690619,1.355534,-8.761094,7.020987,6.526186],[8.053196,-9.078337,5.073967,-0.194578,-0.564728,-4.249255],[-7.129812,8.071539,-8.049794,-2.162387,-4.400220,-9.404255],[-5.748146,3.364720,-1.952915,-3.621119,-1.936707,-2.487093],[-0.673253,4.656127,9.007621,0.543272,-0.301517,-7.886102],[-1.987909,-4.583659,5.101040,-6.526590,-0.151727,2.119431],[-7.891734,-6.120368,9.984159,-3.545996,5.304663,-4.945981],[-7.628075,8.033885,9.689859,0.299472,-3.014494,-8.350153],[-3.238667,-4.194181,-6.225473,2.725351,3.613806,1.500230],[-6.681711,-9.127074,2.508921,8.774849,-0.078917,-1.353988],[-7.437164,3.794314,-2.127332,6.549397,-7.405006,6.083122],[3.463091,1.453905,-6.079142,8.591357,-9.122735,6.622432],[5.150554,7.342673,2.595693,3.319918,-6.299617,-3.295208],[-1.009562,4.777318,9.099337,5.871973,-6.314876,5.886091],[8.937849,3.001609,-9.757290,1.683609,8.915122,2.490471]], dtype = "float64")#candidate|2714|(15, 6)|const|float64
call_2712 = relay.TupleGetItem(func_795_call(relay.reshape(const_2713.astype('uint8'), [13, 15, 11]), relay.reshape(const_2714.astype('float64'), [90,]), relay.reshape(call_2688.astype('uint16'), []), relay.reshape(const_2689.astype('uint16'), [196, 2]), ), 2)
call_2715 = relay.TupleGetItem(func_801_call(relay.reshape(const_2713.astype('uint8'), [13, 15, 11]), relay.reshape(const_2714.astype('float64'), [90,]), relay.reshape(call_2688.astype('uint16'), []), relay.reshape(const_2689.astype('uint16'), [196, 2]), ), 2)
output = relay.Tuple([call_2686,call_2704,bop_2707,call_2712,const_2713,const_2714,])
output2 = relay.Tuple([call_2687,call_2705,bop_2710,call_2715,const_2713,const_2714,])
func_2716 = relay.Function([], output)
mod['func_2716'] = func_2716
mod = relay.transform.InferType()(mod)
output = func_2716()
func_2717 = relay.Function([], output)
mutated_mod['func_2717'] = func_2717
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2732 = relay.const([[[-4.521605,-5.115517,1.465599,2.660042],[-5.264947,-3.588355,2.210789,4.651817],[2.389967,-8.831953,-2.926911,-9.389206],[0.605363,7.476476,-2.506750,0.779326],[-9.146823,-8.658688,-1.088028,3.954379],[-4.801164,5.275464,-4.297644,8.250245],[8.057981,8.801275,-2.150580,9.038911],[6.061849,0.245310,-3.081851,-9.253665]],[[4.469485,-9.118511,8.916388,-7.080172],[-1.829947,6.582274,0.050398,-5.854494],[-8.582324,-8.212494,7.588130,-9.434270],[-4.353924,6.381244,-1.901192,7.670866],[-6.662753,-1.051772,3.076085,-6.431222],[-4.735402,-6.824234,-4.262692,-6.442082],[-3.258508,7.567156,8.895398,-4.941472],[-1.760617,-9.616855,-8.072662,-4.551723]],[[4.944134,-4.471943,7.720237,-5.608566],[-3.982087,4.876863,-7.953458,4.263056],[-2.672316,-3.968428,-4.122955,9.894828],[-9.673979,2.803614,0.907068,-6.889354],[-5.655455,1.783177,8.370455,-9.811724],[-2.987153,-9.128862,0.133734,-5.733855],[-5.384024,0.006462,7.402221,6.646312],[-7.406147,-8.241014,-8.513930,8.605880]],[[9.724205,7.181025,-6.367471,-3.647898],[7.710126,5.348480,-8.790950,8.210929],[7.095648,4.298209,2.702778,-4.064717],[-4.317821,-9.429833,3.607219,9.510299],[-5.881322,4.236933,-7.540088,-3.330878],[-6.693732,6.396490,5.824320,-7.332396],[0.656745,7.674824,-6.181937,1.142332],[3.695216,-6.374757,0.883429,7.774937]],[[-4.486315,-5.099552,6.473505,-3.013878],[8.335625,-4.397286,-1.721570,0.959898],[9.988817,3.328143,-2.713129,-0.049249],[-0.434550,1.053349,-5.030048,7.346374],[8.778346,-0.486265,-9.131083,8.623854],[-9.825947,-0.017923,-1.985012,-5.795759],[5.324638,2.161565,-1.097518,0.078463],[-9.510848,-3.291850,8.927026,7.662349]],[[-3.310628,6.351024,7.149679,-1.748527],[1.640068,-4.171569,-1.895316,1.864536],[-8.260286,5.972964,-3.711116,7.073249],[3.678720,4.012494,-9.102571,-6.760609],[-2.684568,1.099618,-6.843270,2.164474],[3.920704,7.411322,2.350570,9.387695],[9.437658,-2.403293,7.212375,7.658972],[-6.511485,2.107901,6.025430,4.907459]],[[-6.811224,0.024622,-1.412511,-8.884510],[5.949135,1.690394,-3.472586,-9.708931],[1.557460,3.497973,6.012120,-1.458791],[0.503948,-2.206721,1.218663,5.503646],[-2.924662,-2.858560,7.531221,-0.953725],[-0.838483,1.668591,-3.903488,-3.324065],[6.211920,-5.196010,-8.490529,-2.654075],[8.242930,3.599228,-2.639451,-3.195851]],[[1.783239,6.767650,4.278002,6.449904],[1.072265,-8.519947,7.201298,3.090449],[-8.963085,7.078553,-7.665821,-2.185234],[-9.546381,-4.827358,-8.209596,4.847146],[4.159515,7.165679,9.399117,-3.818903],[7.478264,-2.744274,-9.821619,9.580391],[-1.920523,4.663897,-1.389182,-6.604866],[8.278643,1.543844,8.735294,-2.643546]],[[3.742983,9.028935,-1.163358,2.871061],[-3.071978,-4.292051,-6.730973,0.684266],[-0.159719,7.728489,-7.199323,4.274058],[8.729179,-6.265901,-7.655953,1.841244],[-5.372681,-8.664851,4.329720,-2.607543],[5.374138,-6.644691,9.111724,-3.434091],[-5.906228,-5.803824,3.614143,9.761539],[1.698913,5.531228,-6.467451,8.823671]],[[3.369602,8.399738,-4.500387,-6.747192],[1.596405,1.793370,-1.013541,-6.187898],[8.155396,-6.744766,1.722362,8.755617],[1.366338,-6.881570,-8.839438,-0.820677],[0.068911,-2.388870,4.924222,6.149732],[4.214711,0.826927,2.125794,-9.187560],[0.029490,4.275217,-7.065581,9.641686],[-0.091774,4.793840,9.303764,-2.888312]],[[-0.516555,-7.415128,-0.668067,-3.160113],[-5.020300,9.339405,0.766407,5.170015],[-1.136668,1.031105,0.096742,-1.424824],[-2.476147,-8.478311,9.520203,-1.167238],[2.154457,-9.113776,7.631859,1.997940],[-2.682973,1.816841,1.295781,-1.390861],[6.161400,-2.987059,-0.847441,-5.017261],[8.214495,7.073447,-6.608069,-1.588560]]], dtype = "float32")#candidate|2732|(11, 8, 4)|const|float32
var_2733 = relay.var("var_2733", dtype = "float32", shape = (11, 8, 4))#candidate|2733|(11, 8, 4)|var|float32
bop_2734 = relay.floor_mod(const_2732.astype('float32'), relay.reshape(var_2733.astype('float32'), relay.shape_of(const_2732))) # shape=(11, 8, 4)
output = relay.Tuple([bop_2734,])
output2 = relay.Tuple([bop_2734,])
func_2742 = relay.Function([var_2733,], output)
mod['func_2742'] = func_2742
mod = relay.transform.InferType()(mod)
var_2743 = relay.var("var_2743", dtype = "float32", shape = (11, 8, 4))#candidate|2743|(11, 8, 4)|var|float32
output = func_2742(var_2743)
func_2744 = relay.Function([var_2743], output)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2841 = relay.var("var_2841", dtype = "float64", shape = ())#candidate|2841|()|var|float64
var_2842 = relay.var("var_2842", dtype = "float64", shape = (1, 10, 6))#candidate|2842|(1, 10, 6)|var|float64
bop_2843 = relay.power(var_2841.astype('float64'), var_2842.astype('float64')) # shape=(1, 10, 6)
output = bop_2843
output2 = bop_2843
func_2846 = relay.Function([var_2841,var_2842,], output)
mod['func_2846'] = func_2846
mod = relay.transform.InferType()(mod)
mutated_mod['func_2846'] = func_2846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2846_call = mutated_mod.get_global_var('func_2846')
var_2848 = relay.var("var_2848", dtype = "float64", shape = ())#candidate|2848|()|var|float64
var_2849 = relay.var("var_2849", dtype = "float64", shape = (1, 10, 6))#candidate|2849|(1, 10, 6)|var|float64
call_2847 = func_2846_call(var_2848,var_2849,)
output = call_2847
func_2850 = relay.Function([var_2848,var_2849,], output)
mutated_mod['func_2850'] = func_2850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_2916 = func_2652_call()
call_2917 = func_2652_call()
output = call_2916
output2 = call_2917
func_2927 = relay.Function([], output)
mod['func_2927'] = func_2927
mod = relay.transform.InferType()(mod)
output = func_2927()
func_2928 = relay.Function([], output)
mutated_mod['func_2928'] = func_2928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2266_call = mod.get_global_var('func_2266')
func_2268_call = mutated_mod.get_global_var('func_2268')
call_2959 = relay.TupleGetItem(func_2266_call(), 2)
call_2960 = relay.TupleGetItem(func_2268_call(), 2)
func_963_call = mod.get_global_var('func_963')
func_965_call = mutated_mod.get_global_var('func_965')
const_2971 = relay.const([-6.611029,-5.700333,-0.067257,-7.506076,6.976231,-2.006128,-2.556194,1.079472,0.299920,-6.592300,3.516796,6.256487,-2.206392,2.099930,-7.073845,8.572756,2.446510,-5.346470,-2.457739,-6.445812,9.947828,-2.101996,9.946350,8.878222,2.487354,-2.197801,3.776062,-6.159272,-1.367381,9.165586,-8.075826,1.789896,4.811912,7.709580,-4.482440,8.134407,-8.593382,7.566748,4.679478,-4.765490,-0.721675,-1.589084,-4.459494,7.324169,-8.197803,-6.634192,7.925918,-6.506756,5.593669,4.978137,9.717426,4.070292,-3.005994,1.231989,-2.325692,-5.422034,0.181538,-2.306546,0.819889,-3.048292,-4.815049,-1.280377,-3.654830,-7.085587,-0.701079,8.968289,-7.439561,4.233833,8.610407,6.311664,0.572104,-6.921745,-3.125991,-8.934564,-8.755846,5.576225,3.725153,4.573549,-2.174025,1.675413,3.330670,-4.582618,-0.419448,-2.065470,4.662703,7.487719,2.974046,5.137544,-4.377314,-5.335364,-0.587136,6.863785,8.879404,0.002994,2.283221,2.627137,7.262476,-3.139066,1.606275,7.305883,-8.584787,4.260776,-6.627194,3.309308,7.523704,1.232186,7.909295,3.838350,5.023715,-9.239301,-0.955821,4.062480,-6.325283,2.069727,-0.814162,-2.764104,4.340334,4.988294,-9.775751,-9.646065,-1.947920,6.939726,-3.959072,-8.579007,5.035555,-9.222263,-4.983544,3.002361,-4.149411,8.088558,1.136292,5.358331,3.277049,-2.619143,-1.326104,4.256772,-6.424707,-8.898726,-1.040531,7.971847,-6.887778,5.483930,0.108774,6.181089,8.912835,9.782019,-7.983992,8.068117,5.454213,1.687826,-3.959408,-7.135262,6.874652,8.052732,3.605488,5.883975,3.121015,5.643573,1.520416,-2.243085,1.189656,7.587790,-2.362083,5.505705,-4.655962,6.418488,-6.113222,6.327585,4.023710,1.038542,8.028665,-2.722238,7.976675,-9.820578,-8.864514,1.720405,-6.763607,6.512861,6.741228,-8.721984,4.309817,-4.951414,8.285344,9.585523,-3.801659,2.653726,7.969430,-1.844654,0.199699,1.379195,7.633228,8.171143,1.411540,4.462241,-5.392178,-2.986938,4.982865,2.296329,-8.217330,4.939082,5.630031,1.104029,-0.549604,3.945567,-8.132405,6.054367,7.180199,0.120002,6.860180,2.066314,-9.028161,1.109436,-3.233137,-3.267433,8.468472,7.735718,-3.084684,1.253279,3.554440,6.699503,0.475776,8.774032,4.995872,2.710655,0.995345,-6.256326,-6.802696,-0.715340,-8.565652,-0.677992,-8.792377,-2.348671,-6.247839,-8.209631,-6.269881,5.152417,-3.891792,-5.611405,7.014431,7.222597,-9.193679,-0.599814,3.878817,6.738879,6.254249,-4.491925,-2.884713,-3.756693,-8.497193,-0.738921,-5.150549,6.488991,-8.666252,9.713354,1.014640,6.049065,-2.181199,0.174971,-8.756380,-5.820157,-4.765429,9.942193,0.429116,3.463652,-1.379909,5.584510,7.450697,-6.975064,-1.243256,8.421279,-5.032567,-6.022800,-2.573400,-5.927419,-9.958138,-1.084384,2.766802,1.663100,1.145428,2.869064,-3.349644,7.818748,8.455948,-8.408828,0.921287,9.420005,-1.453543,-7.318749,7.691519,1.791077,2.868216,-4.190860,6.105954,-7.951491,-8.728086,2.471566,-2.949106,-4.909409,-3.036350,9.009631,-1.058559,8.773339,-4.621148,8.781475,-5.821946,-7.808639,-2.241690,3.787275,-7.429874,7.478254,5.370900,-9.051229], dtype = "float32")#candidate|2971|(312,)|const|float32
call_2970 = func_963_call(relay.reshape(const_2971.astype('float32'), [13, 8, 3]))
call_2972 = func_963_call(relay.reshape(const_2971.astype('float32'), [13, 8, 3]))
output = relay.Tuple([call_2959,call_2970,const_2971,])
output2 = relay.Tuple([call_2960,call_2972,const_2971,])
func_2986 = relay.Function([], output)
mod['func_2986'] = func_2986
mod = relay.transform.InferType()(mod)
output = func_2986()
func_2987 = relay.Function([], output)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2018_call = mod.get_global_var('func_2018')
func_2019_call = mutated_mod.get_global_var('func_2019')
call_3161 = relay.TupleGetItem(func_2018_call(), 1)
call_3162 = relay.TupleGetItem(func_2019_call(), 1)
output = call_3161
output2 = call_3162
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
output = func_3163()
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_3183 = relay.TupleGetItem(func_2986_call(), 1)
call_3184 = relay.TupleGetItem(func_2987_call(), 1)
const_3190 = relay.const([[[4.843986,-7.778703,2.353280],[-6.977275,9.850897,-3.472362],[-9.658911,-2.906769,3.893890],[2.643105,-7.493897,-9.520771],[-8.519667,1.063097,-5.641062],[8.045911,8.214229,1.265754],[7.179702,-5.117644,7.562740],[2.984730,8.903146,-8.132725]],[[3.440030,3.043623,-0.773370],[0.739049,4.322104,5.577367],[2.218070,-2.831329,-4.954079],[8.092257,0.218178,7.605639],[0.816808,-0.290094,-5.044599],[4.276587,-2.310377,-0.251550],[-3.830383,-5.655737,-4.016296],[3.443497,-2.458341,-3.630891]],[[4.659632,3.979353,-5.861294],[7.049973,5.281381,-2.467123],[-4.009100,-7.608522,-4.538027],[0.605305,-3.340541,3.067053],[-5.986078,-2.987528,-0.320301],[3.306012,-3.561430,-0.227963],[7.270459,-9.109939,-3.061334],[0.450292,-0.515653,7.540910]],[[-9.797385,3.961988,-5.503571],[5.881873,3.208169,-0.294354],[9.029599,0.112485,-8.562511],[-4.781500,3.524367,-4.898090],[4.103423,0.416668,5.266731],[-9.602802,8.454798,-7.436803],[-1.222163,-4.024545,7.013792],[5.496482,7.437459,1.842137]],[[2.695984,0.315191,-3.286996],[-8.778475,8.939058,-3.097120],[-9.603522,-3.299374,-6.513010],[-0.496602,9.730733,6.434230],[4.380474,4.194297,9.334438],[-6.776562,-8.858542,-2.583977],[3.857292,-9.504688,-9.447648],[-1.600529,2.882194,-3.047134]],[[1.138715,8.697444,-4.430384],[-6.129961,0.432616,-2.942465],[-2.231659,3.852020,-1.130633],[4.582345,-2.564139,8.078866],[-6.438041,-5.883934,-9.959664],[-7.269729,4.588996,-3.900307],[-6.351554,1.754566,-2.118793],[-2.369338,-1.969442,4.737006]],[[7.076560,-6.060702,-8.270058],[-2.269837,9.846823,2.780440],[-0.637597,-0.574305,1.321620],[9.602106,5.947911,2.393968],[-0.676569,-7.767068,-6.880732],[3.896894,-6.330369,6.779813],[3.465777,-7.736968,-5.538989],[1.649685,4.157573,-7.916845]],[[-6.121728,-1.242199,-4.678174],[-2.454747,0.226198,8.455137],[-3.959260,-6.249537,3.476900],[-3.436762,5.473922,5.847127],[-5.375129,-6.550572,-5.269540],[-5.073505,-3.343399,-2.456674],[-1.411315,6.428971,4.680457],[0.502125,-0.651952,1.672814]],[[-6.579544,-0.731480,-8.538134],[4.523871,-4.982860,-1.973335],[3.321210,-2.728071,1.810768],[-7.082745,4.786495,2.172597],[8.785454,-6.871707,-9.106639],[3.333466,1.136851,2.610399],[5.869121,-1.186103,-8.716191],[5.945409,9.214080,-3.973569]],[[-3.723645,5.335668,-9.273530],[4.742935,1.605175,6.985107],[7.723788,-9.527138,3.342392],[-8.214302,2.930036,-5.487969],[0.717360,3.495163,4.077590],[8.079616,-3.899520,4.764010],[3.352980,-2.920194,1.174709],[5.307097,-1.320945,2.529358]],[[6.194965,5.741920,6.838554],[-6.776622,1.425168,0.046695],[1.680964,-2.253720,9.933462],[9.788931,-6.279162,-5.070461],[3.204775,-9.397497,0.646877],[1.888362,3.999974,3.900413],[3.434629,4.410611,0.589998],[2.392100,4.593280,3.884005]],[[-1.027039,-2.598140,-0.618634],[-6.504442,-2.454461,-2.755155],[-4.440238,-8.633380,-4.418631],[-3.729468,7.635123,-3.752151],[0.056436,-1.775876,0.835318],[0.488415,-0.300685,7.633494],[-3.354881,-1.241513,-0.715638],[7.495101,1.333092,9.061775]],[[0.135421,0.793796,6.050749],[-0.397659,1.242500,-3.254732],[-1.091971,-3.403403,4.562223],[0.433218,7.875620,-3.175470],[-4.704058,1.020967,9.282216],[6.486949,-2.990905,1.037218],[-7.280644,-5.565032,-2.160596],[4.113200,5.325915,8.912373]]], dtype = "float32")#candidate|3190|(13, 8, 3)|const|float32
bop_3191 = relay.greater_equal(call_3183.astype('bool'), relay.reshape(const_3190.astype('bool'), relay.shape_of(call_3183))) # shape=(13, 8, 3)
bop_3194 = relay.greater_equal(call_3184.astype('bool'), relay.reshape(const_3190.astype('bool'), relay.shape_of(call_3184))) # shape=(13, 8, 3)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_3198 = relay.TupleGetItem(func_2451_call(), 0)
call_3199 = relay.TupleGetItem(func_2452_call(), 0)
func_2626_call = mod.get_global_var('func_2626')
func_2629_call = mutated_mod.get_global_var('func_2629')
const_3204 = relay.const([-4.951376,-9.817969,-6.505775,6.564899,-7.717813,-8.874615,-1.855918,6.436064,-8.920530,-1.453266,4.988764,2.432038,-3.303292,3.601643,1.314871,-4.981618,6.068711,-8.918440,-2.923673,5.828448,-6.843892,7.474525,7.216054,5.037889,3.961498,1.289935,9.573968,-5.326015,-5.648169,-3.216680,-2.918302,0.297968,8.260675,9.024322,3.659391,3.433170,-1.062403,-8.705753,7.961388,-1.748771,3.476920,3.788152,-1.704692,-3.881993,6.820842,-3.013970,6.276887,-6.162727,3.083239,6.411894,-7.812999,-4.563167,4.370932,4.878101,-5.150147,8.703255,8.177153,0.986889,-1.372325,-8.294758,-5.144036,-6.759775,-3.820275,-5.104051,-3.910891,-4.547113,-1.521481,-6.839001,8.518751,-4.058821,5.581097,1.146231,-2.465323,-0.436701,-3.238547,3.541587,6.570935,-6.400506,-2.009013,6.504285,-5.906364,1.782602,2.703226,-2.554789,1.407165,-2.313185,3.892997,2.237717,-9.943893,-3.943437,-7.822103,0.315680,0.096300,2.081607,2.749882,9.754028,-8.686445,-4.971872,-7.847007,-4.341953,-9.961235,-2.154494,-1.331888,2.598898,4.135593,1.377910,9.377424,7.679513,7.730564,-0.675922,7.204472,-3.972124,0.990686,3.886682,-8.517618,8.239686,0.353472,-6.841234,-0.577846,-0.486666,5.612731,2.132541,2.848165,-1.045827,-3.404501,5.169732,-9.207024,2.327617,-0.880169,5.685123,4.574466,6.152648,-0.495336,-7.768611,-2.920172,-0.060978,1.917373,-2.307331,-0.652618,2.621407,-5.656593,-9.856693,-2.105303,-0.630786,4.035808,5.497671,-9.082716,7.580703,-8.684520,9.702153,-2.241794,2.914998,-6.375936,-7.928501,-6.588899,0.564767,-5.595470,0.962809,5.584348,-8.501728,2.801866,5.907361,-5.031410,-1.824559,1.229744,8.602750,8.841384,6.239630,8.417687,-5.807078,8.303462,-8.952794,5.210114,-2.174037,0.495378,2.670048,9.886848,-2.668268,4.772987,-2.383898,5.334570,0.753392,-8.491045,-9.151877,-0.342483,1.256858,-7.380562,-1.138451,5.260908,-8.983508,3.783386,2.187233,8.768965,-6.218708,-3.365251,5.973817,3.644500,-2.562041,8.112749,1.715398,1.713092,7.052249,-6.113521,-5.220107,-5.094026,-0.071904,-6.058127,-9.294107,5.406339,6.010357,-4.722362,0.393738,7.357125,8.404789,-7.008522,-8.639627,-3.458801,0.594769,6.383058,-8.345812,7.424605,0.379770,1.233566,9.530079,2.754320,-4.916536,2.232217,1.398846,-3.598303,1.314611,9.633852,-5.564530,9.375657,-8.470940,1.403141,-5.071423,5.200653,0.436822,-9.117156,8.668191,4.822587,1.621153,-8.051844,6.692062,0.378941,6.624451,-2.884016,-9.894016,-5.334591,7.129904,-1.798600,-0.054357,9.629146,-6.362164,-5.957219,2.783510,2.584486,-0.721493,6.295247,-7.012597,-6.261748,8.395826,-2.406214,-3.631121,-4.033810,-7.289591,2.730930,-5.281585,-6.397458,-3.612099,3.728916,-0.294868,-4.161988,-0.185117,-6.673908,0.789617,-3.066884,-8.532285,-3.727690,5.594005,-3.865434,1.289122,-2.006479,-5.237386,-0.280176,9.390325,0.613567,9.396526,-3.242586,8.806416,-1.592883,0.446704,-4.769481,7.117237,-3.219313,7.365361,9.004066,0.796553,1.461783,-0.460417,-3.827415,8.189493,-3.248706,-3.968545,-1.492281,6.822567,-0.873680,4.334250,-3.718101,6.875843,-6.136029,5.915683,-0.477520,7.878433,9.906730,8.025489,-2.890358,1.670156,7.748593,1.274658,7.410479,6.061089,-9.729244,-2.153168,5.604949,7.089833,9.645732,1.899681,8.559225,5.130087,8.630923,9.215245,7.955914,-1.456419,-6.970992,-2.359622,-7.422078,5.385097,-2.787194,-8.693178,5.422286,8.389299,-0.439424,-0.211961,-8.715998,-6.877046,6.961660,6.812772,-4.751231,3.774204,2.151544,6.310047,5.085814,-3.508008,-6.606556,-3.816213,8.564186,-3.859614,-7.521489,3.902652,-5.218890,-2.122609,6.460106,-5.024436,9.273948,-5.726891,4.558467,6.692311,-8.829350,1.830904,-7.106702,7.000964,3.948005,4.817523,-1.463419,-5.305860,3.745672,-4.451891,-5.028046,-8.673461,6.658318,6.672193,-4.589449,9.184522,-3.148172,-5.915972,-9.118229,-6.334225,9.634527,-0.853244,8.402418,6.579742,4.968387,9.864263,-5.324785,-1.398082,7.620233,1.881066,-9.542496,-5.418792,1.736678,8.388801,-6.403322,6.141933,2.304852,-7.755652,4.376674,6.254604,1.232239,-2.458191,3.216080,9.747978,-3.832183,-9.140897,-9.056930,-0.365021,7.276457,4.836829,9.640172,-4.650394,-9.533582,9.112675,-5.089029,2.391551,-8.963760,8.301709,-9.458262,-0.333852,0.517533,0.460540,0.086303,6.793248,2.145370,3.752315,-5.524686,4.041439,-1.912257,-3.651108,-2.267860,-7.813390,8.266066,-1.147432,2.942849,7.406354,0.204236,-3.825035,-4.911187,-2.230724,-5.585610,-7.324313,4.523908,-3.651683,0.470663,-7.122503,-1.779747,-9.773560,-1.711951,2.766411,3.037069,5.232439,8.373718,5.402701,2.026025,2.642663,3.181158,-0.352991,7.879041,-6.090529,4.161650,-6.017828,-5.898337,-5.260044,3.773856,-6.125157,-4.595453,-4.705088,1.192163,1.366153,4.134791,-7.796431,-9.142535,8.660814,1.982414,-0.589242,-7.820497,-5.688144,6.208019,3.102882,-4.178154,2.396870,0.173684,-0.135957,-3.425774,-1.689187,-6.848680,-7.428335,5.821833,3.141788,-4.699726,-4.518919,-9.124150,6.962240,2.518369,4.097813,-3.561114,-3.175533,-8.173486,-7.664404,-2.468956,-4.748037,7.144129,0.372580,-2.078656,-3.121639,8.450570,1.223567,8.087659,6.505223,8.084415,1.053458,-8.686129,-0.871218,-7.381262,3.346683,8.870115,-5.437485,-2.572246,5.602902,-0.996182,3.639359,-9.870400,8.611154,5.345439,-7.213954,8.230726,-3.431979,3.057030,-5.113410,1.424896,-4.930110,3.273993,-8.035237,4.490124,-5.551874,5.563305,2.385876,-6.071239,8.287392,7.282790,1.092503,4.393036,-4.329114,-8.355387,7.170594,-1.983104,-6.826370,-4.473355,-0.092864,-2.636206,0.986927,-4.984672,-1.787539,0.010194,5.811772,5.259846,-6.759188,-0.498305,-8.044604,4.240824,1.339197,6.025469,-2.040193,-4.736025,2.403999,7.033294,-9.115470,8.088076,0.186377,-9.226554,-7.326079,1.381169,8.525577,4.668266,-4.826864,3.051772,7.967555,5.935844,-1.552495,-3.320899,-6.953535,-3.166716,5.085224,3.752687,-3.322926,3.636179,-0.280801,6.297476,6.428966,2.105272,-8.007883,8.364369,9.770661,1.833932,-3.268296,-9.711845,3.606732,1.952144,-0.616747,3.555935,-1.263463,3.129034,4.322624,-7.536527,-1.742325,-7.322751,-0.455093,-2.223373,-0.829694,8.324851,7.296196,-2.445792,-2.801817,1.503152,-5.928506,-9.536305,-1.147840,6.202377,-7.033592,-4.916687,8.289419,3.624192,-9.071132,-4.492358,7.001140,7.704705,0.527023,-1.052440,6.838422,-4.673938,-1.878709,-0.188520,9.149110,4.272509,-3.587161,-6.038870,-4.976171,9.767932,8.294095,-9.971601,-7.370455,2.464607,7.088338,1.775576,8.613615,-5.768841,-3.046192,-2.460352,6.762495,-3.228863,3.835268,9.977854,-2.963687,-3.404960,-3.916491,7.777973,-8.615520,-8.860192,-0.114298,-6.308395,-7.395977,7.366827,-0.967857,-3.598856,2.756610,1.043913,5.401417,8.774379,8.632805,1.202607,-0.271467,-4.853964,2.477830,-8.686739,7.357335,4.472281,2.451092,-6.160627,5.614068,9.175966,4.045943,7.188246,-3.008126,8.201552,7.305055,2.556721,4.360795,-9.962190,6.731710,-8.303511,-1.107036,-7.396983,-3.548054,0.450486,9.854249,3.214149,7.788317,3.729608,1.645728,4.151605,4.379661,-4.819603,2.602067,6.036383,6.375469,4.165778,2.615614,2.758739,-1.372162,3.623551,-1.841208,2.040292,-9.171724,3.593419,3.143259,-5.254958,1.409388,3.340778,1.414368,6.609183,-2.847162,-4.036228,-1.276969,7.031120,-8.525353,-4.980180,7.265780,-4.403863,-1.811785,8.338291,6.201572,-0.540337,-9.665576,3.765589,-4.675241,-4.035861,1.017835,2.256031,8.616965,-1.241201,9.562572,-7.785763,-5.714739,-6.740824,-1.524259,-3.646942,2.207300,-4.328807,-7.266831,-2.309500,4.222037,0.048689,2.765409,-2.053222,-2.965914,6.816254,-0.921093,-4.074041,-5.479126,2.538935,9.805337,-3.557118,9.353037,-5.554336,-9.683766,-1.119609,-7.336920,-7.674656,-2.111361,-6.233706,-1.852431,1.304210,1.285440,8.477497,-3.277404,-5.689455,7.104665,8.076009,6.244605,-2.079728,-8.900574,7.463042,4.482743,-7.196125,1.459916,-6.663077,-5.965458,-8.717925,5.988539,-6.430627,-4.647204,3.102005,1.572394,-2.479368,4.316976,8.735052,-1.097196,-0.579984,-9.733292,5.328666,2.201029,1.763227,8.680913,1.349746,-9.901938,1.116206,-6.010758,-8.196665,8.801879,-1.945376,3.412034,-0.450168,2.833184,4.654096,6.931043,0.923891,-9.312401,8.253986,-8.694047,9.524413,-3.159452,3.042336,7.383618,-6.991549,9.816627,0.220509,-4.981264,-5.613460,-7.490282,-0.529343,-2.852388,-2.480172,-5.755378,3.625725,-4.798034,6.867286,7.387175,7.135570,-9.662647,8.973770,2.649719,8.740103,-3.827631,2.707553,0.884082,-6.187787,0.529004,9.956585,-1.846726,-3.897969,6.349104,0.419075,-8.660128,2.613635,8.982884,-4.565414,-2.953776,-8.821996,0.113095,1.373286,9.311612,8.307884,6.421669,2.929209,2.926326,-0.710755,3.622609,7.142646,2.890949,9.469910,9.818466,7.780298,3.900049,-2.436452,2.341412,2.678162,0.818141,6.389654,8.102991,1.195369,-6.381137,2.215119,9.770889,3.176086,-2.941668,5.312574,8.960076,4.922689,8.112406,4.308950,4.800466,9.406399,0.265542,8.981041,6.259860,2.309661,8.521333,-3.132313,5.840811,1.626017,-2.960473,4.449394,0.158324,-4.046358,-1.029560,5.398371,-1.833679,5.218758,5.064281,0.819216,4.281942,-2.355211,0.470164,8.850771,-8.469283,-0.288994,-6.074529,-5.316401,-6.011790,-6.925774,4.157688,3.582375,-3.767299,1.812938,3.630934,8.304958,-8.351312,6.057170,-6.135871,-2.853659,4.471545,9.503328,5.418152,4.497505,-1.355752,-4.018962,2.459978,9.928008,-9.053993,6.537069,7.433164,-0.308863,-2.494533,-7.010113,4.733320,-6.465961,0.636542,-9.535199,9.155825,6.846082,1.342254,3.030564,7.385851,-0.453171,-6.268044,6.918441,-1.101080,2.848349,-7.128118,3.203030,-5.499775,-6.303781,8.545726,-7.674349,7.867240,-0.124188,-1.582261,5.113940,4.727790,3.268201,-5.477078,5.672497,8.051723,0.482838,-9.674719,6.768050,-4.369399,1.275576,-2.795059,3.497647,1.604907,-9.974582,9.252727,9.686226,0.016402,-6.876604,2.127644,2.162910,-3.243058,-0.962855,9.798308,-8.947766,-4.082210,-1.752240,8.947479,-6.933356,4.884958,-4.519487,-4.071901,7.451624,4.542005,1.616948,-5.074746,1.149648,-5.630825,3.973658,5.832142,6.204049,9.719835,-7.207127,4.877390,0.831590,3.254027,-8.262341,6.759694,8.649717,8.480578,-4.814232,5.871547,2.219191,3.315232,-3.332553,-6.746896,-5.325400,3.451421,-4.234867,3.686383,1.915340,-8.339898,1.217588,-6.186523,-7.514045,5.216386,1.332720,-8.771628,-3.503981,3.934902,-0.202999,1.498310,-6.209354,6.203757,3.811433,-0.514535,3.154502,-9.825820,8.438340,1.511016,8.601511,-6.875107,-9.661242,9.265380,-2.762435,9.524112,-7.949644,-0.352757,2.749005,0.412962,-0.472667,9.906536,-7.648751,-0.236230,-7.052980,3.195015,0.280626,-1.094088,-3.871265,-9.854458,0.918175,9.441021,-4.250612,-2.758056,2.940382,2.392752,2.257244,4.628795,-7.947694,2.214049,-7.589283,-5.021056,-8.379528,7.579403,-7.331855,-0.252751,7.054524,8.188964,4.069033,8.952654,-6.532303,-2.971412,8.006017,0.654079,-1.482593,9.975959,-6.259339,-8.857673,-2.596042,8.563645,3.593130,-5.189358,-1.479041,5.272491,7.452475,-4.505868,9.853284,-2.247296,7.521594,-7.187445,-7.368677,-2.609766,-8.715523,-2.118538,-9.367641,8.011874,3.325046,-2.219632,-5.332138,1.514922,-1.638338,4.041908,-1.952868,-9.263040,7.865940,5.337177,-5.926847,-8.917721,-3.928227,-1.744839,8.036636,2.127377,7.090938,-0.776368,4.366810,-5.257218,7.268616,3.363365,7.946879,6.445304,-7.314521,-0.559053,-8.627226,5.462448,5.427143,6.426322,-9.787779,7.504684,-6.393620,9.734989,1.655679,6.149594,3.533757,2.666065,1.423024,1.257877,6.355720,-5.628400,8.557200,0.448332,0.592029,7.502959,1.321028,-8.699316,-3.175780,5.686576,6.480608,-7.458586,0.218127,1.606762,6.793336,-4.499810,-3.993777,-8.117744,9.034406,1.977728,6.071696,-3.823212,3.329586,-1.362142,-9.782292,-4.947076,1.447540,-3.546871,-1.849195,6.473332,-7.658799,-9.458360,-6.704405,-2.763350,-5.025243,0.364685,-3.658508,-0.952734,-5.509104,8.125098,-4.229182,-4.875189,9.250396,-0.489252,-8.452811,9.625609,-8.446852,7.076059,-2.607745,-3.241929,5.914372,-9.037186,4.251044,-3.296544,-0.379721,-0.570803,1.075665,-6.406390,4.056074,-0.249396,-7.294232,-3.747650,9.785509,5.554838,-8.710780,1.923088,4.284546,6.756585,-2.790393,-5.005312,-8.135577,-4.018064,5.630217,-8.296437,7.527857,-8.327293,-4.856389,-4.705623,5.608700,2.291607,7.281095,6.226134,4.679911,7.742750,-8.435462,-7.373845,-5.069065,-8.790262,5.611038,-9.290187,1.611064,-3.729760,-3.424864,-4.860848,-2.905324,1.295590,-3.282456,1.905721,3.432692,9.937923,-6.993223,-7.679891,-9.501916,0.323006,3.780736,1.235116,-4.260701,-1.484745,-6.235504,-4.390715,7.265938,3.220777,3.424687,9.882960,0.318563,-4.710195,-6.669943,2.351467,-4.597279,-6.958574,-3.832854,-2.590330,6.687622,3.007753,4.946518,-6.600112,2.330985,-1.075203,-3.444189,-9.275186,6.980193,-5.729234,2.645438,-6.742601,-4.043353,-8.348729,-6.523047,1.145752,4.226068,-8.798363,4.731942,5.310422,-7.454774,9.562457,0.579368,-3.575977,-2.927386,-3.779966,-7.786070,8.513083,3.000197,-0.666129,5.602876,2.130275,-3.093370,7.003778,8.777189,9.421874,6.153705,-3.027121,-7.544440,2.414590,0.598116,-4.924601,-9.372248,-1.285095,5.346754,-1.060148,1.167909,-4.427649,3.865315,1.116774,-7.192114,-3.104930,0.172696,7.106778,8.629533,-5.861757,-5.783089,9.789330,6.735621,1.585030,-2.427416,5.542826,4.078879,3.808026,7.807988,3.671582,3.428003,6.460252,8.166951,-9.849036,2.840072,4.665560,-6.187155,1.093096,6.277901,-3.224748,-9.298311,1.793579,7.037174,-4.987280,7.235371,3.787131,7.701240,2.408445,8.071466,8.191052,-4.484452,-0.287341,3.119099,-9.717310,-4.883104,-0.110145,-7.952653,9.959457,4.080744,4.904606,0.007940,0.788138,9.842993,0.457502,6.902065,-6.039325,-1.100234,-4.449175,-0.094171,-9.826014,2.621442,5.201001,-6.742473,-3.612831,-1.922112,-0.949669,-4.867096,-2.739222,-1.899535,-4.918780,-6.906776,8.105782,6.202176,9.908302,1.636981,2.096608,-0.093297,-7.424548,2.332746,-1.859606,-2.204575,6.947944,2.454196,8.039067,-3.840989,9.377024,-9.377591,4.086037,-2.821842,1.409123,-6.469446,-1.502495,5.733356,5.992470,2.393544,-2.591779,-3.166752,-0.215155,4.154141,9.447468,3.670403,-9.211741,1.874346,-3.368075,-0.437457,7.381166,-0.380194,-6.509536,4.681144,-0.073468,1.454891,-6.339860,-2.046279,5.658791,-0.639633,3.790492,9.468474,0.544246,6.278104,-5.972515,1.118061,-6.025294,-3.827640,5.942320,-6.395936,-9.019774,-2.909393,0.142828,-6.975720,-5.782964,1.843445,-4.503080,-8.503725,-0.853825,7.214824,4.348455,-8.629903,-7.526368,-8.220683,-0.420011,8.523391,8.458433,-7.273047,8.775087,8.058876,9.255412,2.856148,-4.911024,-4.439351,-3.817000,3.280155,-1.346850,5.182854,-9.609951,1.057075,2.993179,-3.212155,-9.678827,5.795930,6.334290,-1.271789,-8.053112,-5.108886,7.933979,3.814384,4.243824,9.990680,-9.448449,-3.501071,2.863639,-9.826755,5.535664,0.774137,7.284671,6.856581,3.190065,4.689655,5.585278,-9.798107,-0.747482,-1.956374,9.974933,-2.289485,1.994680,-7.950115,-5.399018,0.990108,4.159082,1.389201,4.378920,9.603737,-1.418518,-3.362937,9.223333,-2.900735,-9.881092,2.997027,1.731447,-8.645658,-3.791374,0.522960,6.183918,-0.373040,3.940571,0.534909,-0.686865,7.987819,1.190483,5.017323,1.018521,0.930096,-2.036497,3.502811,-3.592430,-9.180219,-4.660203,2.141048,-8.807499,0.209307,0.682363,7.915491,3.344318,6.308795,-7.152101,3.567790,-1.193759,-4.347673,3.646721,-8.209050,9.131617,6.061454,-5.473268,6.196006,-6.504530,-2.969671,8.527722,-1.649934,7.397395,5.138323,-3.143674,0.603356,1.466205,5.734622,5.573216,-4.787600,1.996184,-8.672331,-2.236245,-0.329204,-2.389010,9.055379,-9.064651,2.026799,8.999802,-7.040958,2.889310,-5.267808,3.251183,-0.260814,-0.151934,7.038802,-2.550790,8.559303,0.882018,9.950073,8.752021,7.215907,-7.610360,1.646094,7.131753,8.070869,3.138730,-9.814378,-0.768366,7.628186,0.840876,-4.474702,-1.200803,3.693417,3.766037,-3.268872,3.306324,1.615741,-0.777393,5.663737,-6.587539,-0.981995,-4.222935,-9.923972,7.927064,5.603105,-3.794727,-6.740983,-1.180852,-5.932052,6.100392,-9.972205,-5.593823,-6.025481,-5.608621,-1.415985,3.773909,-6.811837,3.617991,-5.606231,-0.785104,-4.949701,3.725370,5.933586,-1.989720,5.871868,-3.506570,-6.766259,6.163400,6.176926,-9.668421,-6.038739,6.621167,9.091968,2.654633,6.956380,-4.025817,-4.957827,4.641271,5.805654,4.680387,3.807844,-0.350442,-0.423665,-7.429398,0.789291,-7.595534,-8.397335,-7.857313,-5.528050,6.344400,5.408934,8.609862,5.187318,0.155869,-8.692770,-4.312385,3.646569,5.651781,-8.256251,9.779627,-4.674595,-7.954937,6.060215,6.201327,-1.004651,-5.077178,-2.067350,-8.125113,-1.500019,-2.671451,-4.533499,-6.981226,1.805667,-9.761675,0.976885,0.388038,6.506008,7.095754,-8.843853,-7.935707,1.503309,-9.515123,2.595565,-1.637595,-2.733492,-2.158430,3.352499,-5.512939,1.678509,-3.581339,7.766416,-7.210165,1.696545,0.852950,-2.148058,8.239669,-0.819372,7.606206,-5.275785,4.211179,-5.918903,6.438211,-7.623116,-0.312587,-0.785748,8.331201,-7.602815,-8.926127,1.113388,2.456423,-2.863537,8.692996,-4.264286,-4.593405,-3.825996,-1.904348,9.016116,-5.872168,4.806309,6.158468,-0.475952,8.716650,8.558765,-3.513881,-1.040331,-4.435719,-9.069294,8.702237,0.538802,7.731526,-9.272270,-7.943854,-1.653812,2.749220,-3.615982,6.531241,3.240155,8.200391,4.416589,1.890147,-2.089886,-0.690655,-8.830817,1.058513,9.154112,6.236340,-6.302081,6.065702,0.549882,4.792498,-5.368868,-9.384784,5.054092,-8.928072,9.008961,-5.343600,9.956626,8.748491,8.490398,9.154644,5.264100,-3.189510,9.192203,-9.395188,-2.418383,-4.550419,5.880888,7.880533,-1.108630,0.459023,4.511212,0.334769,-2.160768,-7.863263,-5.176059,-2.027846], dtype = "float64")#candidate|3204|(1792,)|const|float64
const_3205 = relay.const([10,1,-4,-10,3,8,7,6,-2,-4,-10,-6,4,2,-2,-10,-6,10,-9,-2,-6,-10,-8,3,-5,-1,-9,3,-5,-7,-7,-3,6,-2,-4,9,5,-2,-4,-2,-2,-3,10,-4,1,3,-8,1,-10,1,9,5,-9,-8,-4,3,3,-6,-2,-7,-2,2,-9,-4,-8,-2,-6,3,-5,-10,1,-4,-9,-5,-1,-3,7,4,10,4,4,-7,2,-6,10,6,9,-4,-10,-9,-5,5,8,5,-7,6,-4,2,2,5,-5,-3,-8,-3,8,-1,-4,3,6,-10,9,-6,8,9,7,-3,-4,7,1,-2,3,2,-10,1,-6,-8,-8,8,-2,7,-2,2,-5,9,2,-7,-7,-4,7,-10,6,-8,2,-2,2,4,8,-9,6,10,-1,2,-9,2,2,7,-2,2,-10,6,4,3,5,-6,1,-8,-5,2,-7,-10,-8,6,-3,-4,3,-2,-2,-8,8,-10,1,5,10,-10,2,5,6,-2,2,-9,-7,-3,-7,-8,4,-5,-5,1,-6,2,10,9,-1,-2,-6,7,3,2,10,4,-7,-10,-9,-10,1,-4,9,4,4,-2,-10,-6,10,2,10,-3,7,1,-4,3,-3,6,-10,-4,10,-7,-7,-5,2,5,5,1,3,8,-3,7,-7,7,-5,4,-9,8,-5,-10,-10,3,7,7,-7,1,7,-5,-1,4,5,3,-10,-9,6,3,6,-1,-1,-5,5,-8,4,-7,-8,-2,6,9,8,10,-7,10,-1,8,-9,-10,-1,-7,2,1,-2,4,-10,-5,-1,2,1,3,5,4,8,-10,-2,5,10,5,1,-1,4,-9,2,3,5,7,-9,4,7,-8,1,-5,1,5,1,1,4,10,-3,-1,-1,8,9,9,6,-5,1,9,9,-2,-10,6,4,9,-9,8,9,1,-8,4,-6,-2,-8,-8,5,-9,-2,-8,-3,8,7,3,1,-6,4,4,8,6,-9,2,4,-8,8,-7,-2,4,-10,-7,-1,-10,2,7,-2,-5,7,6,1,-10,-1,-10,1,-2,1,1,-4,-8,-7,-6,8,-1,-9,10,2,-8,8,-5,4,-9,-9,-10,3,7,3,-8,-5,9,7,-3,-9,1,-1,-8,6,-1,-10,-5,-8,-1,-8,-3,-8,-6,-2,-4,-1,10,-1,-10,-6,1,-1,6,-1,-4,6,9,-2,8,5,4,-7,10,3,-7,1,2,4,-5,7,-3,7,-6,8,-2,6,-9,-2,-2,-10,-1,-9,-3,3,10,-7,2,5,-4,9,-8,-2,7,7,-9,10,-8,-5,2,10,7,-4,-1,6,-4,1,-10,-10,-9,8,-5,-9,5,-5,3,10,-3,10,3,-1,-9,-10,7,7,8,5,-2,-8,10,8,9,3,2,5,-7,4,-1,6,4,-6,-9,-8,7,9,-9,1,5,-9,-5,-2,-3,10,-1,-3,-2,-9,-4,-1,5,8,-1,4,-3,2,-9,2,-1,7,-3,-8,1,-5,8,-8,7,9,-5,3,7,-7,2,-8,6,-8,8,-3,5,6,3,8,-9,10,-1,-3,-2,5,-4,8,10,6,-2,-7,-6,-2,-6,-2,7,-9,7,-9,4,3,-8,-7,-9,-6,-3,-9,5,-9,10,-6,-5,9,6,-1,3,10,8,-10,10,7,-7,2,8,5,-3,8,3,-10,-5,-3,8,10,9,-3,5,2,-8,6,-6,-3,9,6,9,4,10,4,1,4,-5,-8,-8,-4,5,-10,10,-9,-7,4,-3,-9,8,-1,-9,-8,3,-7,-6,-5,1,-1,1,4,5,3,8,10,-7,-2,7,3,6,9,10,-3,1,6,2,-9,7,6,4,-9,9,7,9,-6,-1,7,10,6,1,-3,-9,-3,-4,2,-5,9,2,1,-10,-8,-1,4,-4,3,2,2,10,-10,2,-4,-2,-4,3,-8,2,3,1,-5,8,2,-7,1,-8,4,2,-1,-3,1,-10,-8,-4,-4,-6,10,10,-4,-4,4,6,4,-6,-4,-9,6,3,10,2,-2,6,4,2,10,-3,-8,2,8,-6,-8,1,-4,7,2,1,-2,4,2,-2,-3,-9,-5,-4,9,-9,-7,-3,5,-9,3,-10,9,-9,-1,-5,7,7,5,6,1,2,-6,-3,9,7,-1,5,1,1,6,-8,10,-6,7,8,1,-8,-9,7,2,-7,1,3,9,-5,9,-9,-1,3,-1,5,-5,7,5,-9,8,-10,-2,-2,-6,-6,-2,-6,-2,-10,2,-2,-10,10,-5,-2,6,3,-4,9,-1,7,-9,-8,-3,-3,6,3,-6,-3,9,7,7,3,4,3,6,3,-2,6,1,-2,5,-5,6,6,-5,-3,1,-4,-2,2,-7,-5,6,-6,-1,4,-6,10,8,9,7,6,2,4,-6,-1,-3,-6,8,-6,2,8,8,2,-4,-9,-5,-10,4,-10,-2,7,-5,-6,5,-3,-1,-5,-7,-5,7,1,-9,-10,6,-5,-1,6,3,9,4,-5,3,4,-8,-2,-4,-9,-5,-8,-9,1,-7,-5,9,-10,-8,-7,-6,10], dtype = "int8")#candidate|3205|(960,)|const|int8
call_3203 = relay.TupleGetItem(func_2626_call(relay.reshape(const_3204.astype('float64'), [4, 448]), relay.reshape(const_3205.astype('int8'), [960,]), ), 5)
call_3206 = relay.TupleGetItem(func_2629_call(relay.reshape(const_3204.astype('float64'), [4, 448]), relay.reshape(const_3205.astype('int8'), [960,]), ), 5)
output = relay.Tuple([bop_3191,call_3198,call_3203,const_3204,const_3205,])
output2 = relay.Tuple([bop_3194,call_3199,call_3206,const_3204,const_3205,])
func_3209 = relay.Function([], output)
mod['func_3209'] = func_3209
mod = relay.transform.InferType()(mod)
mutated_mod['func_3209'] = func_3209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mutated_mod.get_global_var('func_3209')
call_3210 = func_3209_call()
output = call_3210
func_3211 = relay.Function([], output)
mutated_mod['func_3211'] = func_3211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3221 = relay.var("var_3221", dtype = "float32", shape = (10, 8, 12))#candidate|3221|(10, 8, 12)|var|float32
uop_3222 = relay.exp(var_3221.astype('float32')) # shape=(10, 8, 12)
uop_3225 = relay.atanh(uop_3222.astype('float64')) # shape=(10, 8, 12)
bop_3234 = relay.greater(uop_3222.astype('bool'), relay.reshape(uop_3225.astype('bool'), relay.shape_of(uop_3222))) # shape=(10, 8, 12)
output = relay.Tuple([bop_3234,])
output2 = relay.Tuple([bop_3234,])
func_3238 = relay.Function([var_3221,], output)
mod['func_3238'] = func_3238
mod = relay.transform.InferType()(mod)
mutated_mod['func_3238'] = func_3238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3239 = relay.var("var_3239", dtype = "float32", shape = (10, 8, 12))#candidate|3239|(10, 8, 12)|var|float32
func_3238_call = mutated_mod.get_global_var('func_3238')
call_3240 = func_3238_call(var_3239)
output = call_3240
func_3241 = relay.Function([var_3239], output)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_3263 = func_1202_call()
call_3264 = func_1202_call()
func_449_call = mod.get_global_var('func_449')
func_455_call = mutated_mod.get_global_var('func_455')
const_3291 = relay.const([-3.148391,-1.635392,-6.713185,-1.430293,1.900549,0.986665,7.861763,3.506869,-7.663077,-4.118918,4.361556,-6.203080,4.557881,5.453561,-0.412672,-1.972943,5.395914,-6.452157,4.348252,2.695775,5.068554,-6.264739,7.703770,-4.395399,9.853946,2.603386,5.890351,-0.744721,-0.330774,7.198331,-3.622803,-8.383582,-7.326888,7.630829,0.064891,-1.393144,0.254043,1.788440,-2.241046,-3.129534,9.416463,-9.530307,-8.889600,2.753920,4.204699,1.413812,7.843971,7.894955,-3.487552,8.212867,5.959901,0.099155,-1.257708,1.427202,-3.630789,-6.865307,4.063503,-2.667716,6.986362,1.455606,-6.878687,-1.957502,-1.490655,7.755463,-0.454130,-2.574450,-6.036106,2.198587,1.464364,1.815263,-4.035394,6.357386,3.820387,2.362228,3.143865,3.497171,8.572839,7.196792,1.171542,9.203532,7.879905,2.573422,8.061360,-3.313717,8.373179,-4.151740,9.079052,-4.771749,-7.474421,-9.707769,-6.735828,2.448148,9.126637,2.792759,-8.967224,3.589513,-5.746030,3.190051,8.285813,-9.654914,-5.091614,-4.524718,-7.278910,-4.222337,4.331183,7.736784,-5.232487,6.936626,9.855266,-9.702515,6.582825,-8.886457,-3.907656,0.771326,2.613168,-1.738519,9.037028,-3.984011,2.152213,-8.623490,1.371911,-8.509160,-8.194985,3.188290,-6.080760,4.222603,1.447272,-2.403724,-2.718358,6.763454,7.487049,0.968815,8.053657,5.134592,-1.622041,8.210470,9.984514,2.873787,8.486914,4.477725,-4.341142,-7.435884,-0.549298,2.327778,-8.268564,9.610343,-3.161757,-3.951605,-4.614549,2.447626,7.695176,-8.158894,-2.399272,3.149579,-4.869724,-5.944878,9.532252,5.625304,9.367694,-7.795648,7.472496,6.566973,-5.056819,5.083272,0.285705,8.716260,6.011557,9.719475,8.056110,-8.488038,-0.539008,-5.522834,6.785568,4.820701,-3.201727,-2.427508,1.240031,-7.942977,-6.914547,-3.956655,-0.032010,-5.586462,8.297416,8.554715,-9.153422,6.264724,-4.739407,2.945993,0.960979,-3.484691,-3.592124,0.041544,5.152972,-2.951101,-4.961358,7.217053,-4.095339,-2.690652,-3.541755,7.427180,5.418468,0.981995,-4.769362,3.443495,4.421836,-0.711742,5.764892,-8.409008,4.046302,-2.820337,0.695863,-5.921207,6.696222,-1.518543,-9.413733,5.967592,-8.431786,-0.120383,4.249855,-1.273285,3.726563,-2.751860,-9.825968,2.158414,3.398222,1.003929,-9.000209,2.400614,8.941512,7.496112,3.111396,7.867554,5.628031,-1.970018,-7.389906,3.645921,1.972321,-8.639635,-5.697231,4.676277,8.043656,3.632428,-7.695130,2.610265,-1.353341,-0.013944,8.425966,3.594613,3.044192,7.529824,-2.088273,2.091982,8.797612,1.842177,-6.697243,9.431549,-1.723861,3.640649,3.537553,-3.452573,7.833821,1.689935,-0.221454,0.292171,6.391886,8.003906,8.660603,9.083256,-1.509076,8.765446,-3.977275,-8.422482,1.054522,4.634381,4.499270,-7.263004,-3.251094,2.293845,-9.472634,-2.356021,-2.163756,9.643469,7.052132,-7.177805,6.156472,-5.745255,-0.389450,-5.170553,-7.562629,3.882659,1.569772,-6.409626,4.851360,8.773391,-0.954073,2.109890,9.361974,-6.209990,-7.069942,9.576482,-3.628851,9.351804,-1.772063,-7.459978,9.135280,-0.943229,0.575408,4.220931,7.216433,-5.967147,-1.995567,-6.485338,-8.866497,-0.581995,2.410771,5.584968,1.658152,-4.086103,-2.285937,-2.683791,-7.158026,2.762626,9.600766,0.374056,0.911095,-8.436955,4.534536,8.899818,-7.030096,-7.232197,2.974525,5.051859,-3.247422,2.964648,2.406154,0.794289,-0.877210,5.619117,6.857295,-0.717781,5.674458,-3.702364,5.841950,-4.287858,-3.316742,9.618103,-6.836439,-7.929000,6.787711,-5.171725,-2.773704,-5.048811,-9.840843,-3.710504,-0.781155,-7.945485,-5.721033,5.429498,-2.167037,1.084345,-8.012433,0.142160,2.771748,-3.009896,7.616744,1.285654,-0.506438,-9.217550,-4.481730,-1.433727,-8.013378,-8.049555,7.049313,-6.486209,1.407310,-9.449225,3.361996,3.968404,-9.597317,8.376933,-0.730580,6.065476,-2.763096,3.167226,-6.128283,-8.190614,-0.120524,6.728303,-7.687766,3.621200,2.853574,9.838988,4.890595,-9.769922,-9.067129,2.438652,-9.486152,6.346134,3.050137,2.314629,-4.024250,-9.413591,-1.641602,8.945479,8.970511,5.731094,-8.025596,7.537625,6.370894,0.146118,4.396392,-4.001963,2.598067,4.122983,-7.839603,6.745535,-5.527247,2.444562,6.672869,1.690430,0.840287,-3.289042,8.251303,-6.117867,5.853104,8.796362,-1.607073,-3.879291,9.597845,-0.091173,1.761100,1.370056,8.833790,-9.127452,6.541660,-3.293028,-8.974570,-6.114411,-0.063450,-9.822333,9.134788,2.514452,3.631743,7.917628,3.269631,-6.464187,7.814251,-5.817508,-2.117178,-3.108020,-4.230999,3.914397,0.129503,-9.314332,-6.249474,9.837627,-9.551668,7.512735,-9.583879,5.224310,0.343184,-8.259186,3.314467,4.289716,-7.119750,7.403647,-4.085845,8.568593,-7.972166,-9.555379,0.400598,-0.840682,-0.820304,5.978124,2.286129,-7.151423,3.216855,8.521053,5.790267,-3.302524,-1.641992,-4.535841,-4.558952,-7.304364,0.813159,2.010985,-2.113332,5.877526,-9.364344,-7.230195,0.927562,-1.203852,4.662672,4.130805,-1.894690,-6.365753,6.622080,-6.938335,7.291540,-9.653477,8.659656,0.950293,-6.210839,-2.272201,8.368794,-6.170806,2.481986,7.469020,-3.244380,9.689916,2.427515,-2.086143,-4.448070,-0.561961,1.534715,-3.570910,7.085238,3.773105,-7.804534,-7.123128,-3.779713,-4.492740,1.053883,-8.935207,-3.290086,-1.083889,-8.784677,-5.758734,7.066484,-5.191183,-3.063168,1.040153,-5.099003,3.074380,-2.389369,-4.849876,-4.792925,-9.279281,0.476071,8.918489,-5.369216,6.102985,-7.307337,5.469825,-6.717919,7.592977,4.944941,-0.580070,7.327883,-2.126044,8.419784,-2.744677,-8.199715,8.549950,9.651494,8.599655,7.643568,-5.369387,0.177838,8.446996,8.656401,-1.288382,-7.592019,-2.913876,-8.877504,0.559726,-4.557820,5.871366,8.113771,-3.506611,6.743683,-0.024280,-0.785702,0.779704,8.021348,2.228141,2.452951,0.286557,2.655948,6.707773,-5.606738,7.627607,-6.211354,1.207205,-9.043123,-3.286392,-4.006741,-8.350716,-0.495608,-7.180632,-4.260624,-3.322338,8.140458,5.431962,-7.555104,-1.080610,-2.513973,3.618518,-2.006142,-4.883231,-6.988810,-1.883017,7.400667,2.638150,-9.343865,5.343363,1.847789,-2.606704,4.220555,6.630024,-3.045707,2.921733,-3.655026,1.764532,9.686152,3.488349,4.983679,-4.277176,-4.497680,-3.083126,4.921619,6.052241,3.824731,9.609694,-6.802543,-8.918370,-7.785745,2.332394,-3.609198,4.509804,-5.775408,0.806950,2.153240,-1.708461,3.000477,-5.570589,2.275758,-1.576152,-5.336904,2.138255,-2.295645,7.582531,5.301725,2.358835,-2.175153,-1.779350,8.486184,-2.237485,7.971149,-9.214416,3.498799,-7.968935,8.774564,3.640955,-8.520716,-0.536603,2.655432,-3.409398,-4.402570,-6.671510,-8.572714,2.298337,8.722305,-4.963350,-5.388417,6.500417,-9.801188,-2.311573,-1.120145,6.113394,4.389114,-1.517279,5.596081,1.002198,-8.806162,-1.866607,-0.203359,9.281336,9.067843,2.479520,-1.160252,7.716646,-0.627088,-4.577698,-7.035440,4.703852,9.174870,-9.418817,-1.165491,-8.596374,7.174428,-8.835656,-2.095858,7.488174,4.566650,-1.147036,-7.528435,-2.653433,4.327449,4.257796,-8.119906,7.653818,-4.511926,7.256530,-2.956036,-4.978574,-9.611242,7.845444,-4.957524,9.527875,1.175751,2.251580,2.902346,-8.159670,6.149249,-5.595766,9.179364,1.988431,2.681776,-6.076984,0.869470,-0.763972,6.508959,-6.133365,-7.495563,-9.845082,9.641881,8.047469,7.239213,-4.410915,-1.397215,4.275681,-6.414488,6.795963,8.798444,9.543203,-7.616473,-1.700722,-5.783127,9.070856,-8.368326,-4.858660,-8.697145,0.001323,-9.175243,-3.038506,-7.841759,-3.508373,-3.416477,5.442223,9.512811,-6.853354,-7.706165,-2.445222,-2.398803,3.796655,9.591432,-2.504793,-9.500845,8.298137,5.190189,8.505072,6.204336,6.963486,6.338337,0.985012,4.701237,4.847778,6.130716,-0.357939,7.432670,-5.965898,-0.336979,-3.697649,-1.308118,8.222488,0.125888,-6.630631,-5.605919,1.165074,-8.819711,-2.424534,-7.857141,7.315474,3.911733,6.140204,6.394146,7.180520,7.321394,-6.940193,-3.214940,0.039707,-5.574231,-7.309441,2.332743,0.040872,3.517645,-5.174152,7.666365,6.457607,2.981512,3.740823,-8.545584,-5.028931,2.652173,-8.903718,-4.206759,4.119830,9.240132,1.195146,3.233622,-3.335488,4.526838,5.896268,-3.711425,0.594324,2.595491,-9.929684,-0.977258,5.857041,-3.480377,9.677041,-3.368897,7.767428,-8.834732,-8.052597,5.432990,-5.957623,7.472264,6.503766,-9.311344,-0.481440,-1.127665,-8.009075,1.731232,-9.217127,8.144038,3.454484,-0.733470,0.907239,1.154126,8.494449,-9.476468,4.772038,7.484873,2.886676,-0.182842,2.433741,-0.196270,5.267948,-2.815210,2.872250,8.467941,7.805336,-5.341279,-7.144941,-1.416162,-3.419930,-2.460388,5.917361,1.800668,5.070072,-4.165384,-4.702140,-3.638337,-5.917969,1.927821,-5.746245,-2.573255,-9.200295,-5.483538,3.280323,-9.732558,3.075475,5.002130,-5.102763,3.707575,-7.609886,4.944128,6.869977,-9.506943,-2.846719,1.317430,-3.336193,-5.417766,-2.212370,-4.933920,6.150284,-5.871890,9.529057,4.958271,-9.548018,5.830840,-3.066280,4.490957,3.785511,-2.893783,8.047781,-0.376927,4.608798,-2.342141,-6.954030,1.093570,-1.311632,-5.224868,-6.829558,4.885016,6.269094,0.118961,2.479759,5.130231,5.015527,-9.163154,6.102564,-4.384996,2.433911,2.572212,3.498158,-2.049095,-9.771181,7.318753,-3.842603,8.886630,-8.525544,-3.302496,5.386827,-9.733515,2.639767,2.099962,2.015471,4.860325,-4.164931,-1.042615,-5.185803,6.836182,-5.354505,3.543615,-1.627886,-5.712695,4.076411,-3.600793,-1.867258,7.374419,-8.101006,-8.230758,6.878880,-7.618474,-6.719883,5.790448,4.747559,4.842845,-4.105030,6.782332,2.043380,1.829394,-9.829030,2.022957,-8.645322,-1.597200,0.631008,-6.448999,-1.614936,4.858585,-7.377687,8.309854,5.773532,7.867244,6.792856,-0.277060,-9.228990,-1.277869,-1.660119,4.046648,-3.958599,1.961170,-9.375049,-4.722872,-2.969033,-9.790294,0.479929,9.264339,-7.014110,-2.987956,8.330713,5.593921,-4.754239,-2.278761,9.670331,0.720139,3.485784,-1.163872,-9.155014,-0.105747,-1.446528,1.898237,7.784247,-6.342943,6.791226,3.484967,-5.806913,-6.314465,-1.067141,3.263092,-0.903335,-8.916123,3.897362,-3.976885,7.278227,-1.194350,8.303898,7.016117,-1.733624,-0.733240,-0.592882,-7.746267,-1.425987,5.166279,8.339751,8.314824,2.610504,0.607791,-5.398080,9.886357,7.333632,1.180981,3.900565,6.674128,-2.618219,-8.198496,8.284302,9.246797,4.334135,9.936020,8.483700,6.473378,-8.406466,4.830889,-2.139716,-0.973453,1.567251,-7.747101,6.416210,-9.988757,2.501283,-6.856762,-0.543847,5.049754,5.030078,-4.645087,4.754846,2.398087,6.977944,-4.708114,2.083327,5.752128,-1.068366,-7.686392,4.273707,3.230284,1.743293,0.912513,-2.710561,1.553792,7.723633,-8.353737,0.912918,-3.174833,3.291594,-6.121535,-5.949651,7.959242,0.146429,-9.457847,-7.463886,-5.715811,5.078233,5.768345,-7.653727,3.830675,7.538045,-8.946186,-2.447687,9.279648,3.597063,-4.687943,3.132826,-5.783171,9.199112,5.721654,-5.585442,0.905787,7.538621,1.168584,-1.240567,-5.664033,3.745155,-8.295300,4.013598,3.827912,-7.794862,-0.029087,7.748814,-5.613052,5.997337,-0.041789,9.876473,-8.829166,4.215256,-1.306659,-7.316274,4.603408,4.857433,5.120479,7.103880,0.429822,0.717322,3.975517,-4.330541,9.977374,6.362337,-1.706983,-5.883320,8.030314,-4.951152,9.327408,-1.649847,-8.571250,-7.381231,8.547565,-8.265492,8.954278,-9.775303,-3.967472,9.634065,7.724047,-4.514533,4.239317,-4.771118,-0.835690,5.161948,9.414029,-0.224124,6.544610,-2.667572,-6.595859,-3.973948,-7.680684,-3.114443,1.893644,-7.356795,-6.002980,-8.186386,4.143333,-5.556913,-9.800314,4.636116,-5.449385,9.476977,4.228869,-0.553452,1.190814,4.878429,0.160027,-7.080747,3.471038,0.698942,6.770651,-2.235695,-0.301495,-3.186730,-1.939648,9.198740,5.025819,-2.526861,-2.907955,-8.937580,1.084064,5.399011,7.639309,-2.551549,-5.505223,-7.787150,7.578638,4.586645,-6.733739,-3.755871,0.264228,5.979834,9.285728,6.590972,-1.091844,3.336042,-1.222708,-3.200245,-4.169588,-2.080924,7.715800,6.933721,3.615002,-5.202575,-5.171020,-7.308469,-8.469701,6.217385,-2.173312,1.239366,-7.893599,-4.135606,0.784330,7.122323,4.502466,1.533252,-8.232172,-6.950029,4.749587,0.844201,4.973467,9.608382,0.779102,2.285519,-2.433948,-0.527022,7.868454,9.301497,-5.411297,6.179621,-7.463812,-6.745001,4.183990,7.076139,3.654427,-9.025432,-6.248140,3.935199,-4.925650,6.944822,0.944818,-9.825678,0.783889,-1.206022,-2.540976,9.807339,-2.993307,2.985015,-8.787746,-8.083081,-8.013724,4.670566,-4.911984,-5.414260,3.877361,2.727330,-3.284040,-3.191787,7.931242,2.911937,-3.072131,5.080257,-0.531317,-0.065771,0.296704,-1.844521,8.890121,-2.888961,-3.894555,3.304694,3.635922,2.225004,-5.298478,0.761146,-8.435042,3.504552,1.940048,6.711032,1.383375,9.610976,-8.911500,-5.422994,3.224081,8.017955,-6.377082,2.246328,-8.131869,9.212189,-9.719894,-4.035599,7.669288,1.181642,-8.648847,-5.373125,-0.119399,-0.973758,6.843939,2.410586,-4.435305,0.415092,4.916335,-7.159270,6.247004,-5.801673,-5.809145,-4.763874,-7.710354,-7.840388,-8.498508,-4.284650,-0.780029,5.609226,-1.399622,-1.329513,7.532510,1.620656,4.725430,-0.345892,2.679200,-8.294975,-8.918446,4.670619,7.742864,4.733898,-8.641347,-0.294465,0.100720,-9.188394,-9.013755,-6.346107,-6.840972,-4.644934,8.555287,-3.565498,0.880994,-1.153735,1.633554,-9.447497,1.258874,-7.000835,-4.369249,9.520730,-7.245187,3.876487,-5.161497,9.010962,0.584493,-3.162800,-6.013211,2.368632,-6.235930,6.812587,2.536446,-3.300936,-1.956838,-1.664506,4.974227,-9.094757,4.891963,0.767940,3.871449,8.698550,-6.211240,3.324117,-3.304166,1.902000,-9.438007,4.554431,-9.315115,-5.219749,-0.806140,9.413586,-5.028133,-9.672471,3.189020,-9.884590,-7.404931,4.927035,5.886522,5.139977,8.792401,-1.776476,-2.806162,7.500488,9.397868,3.449052,-8.574594,-5.708054,-9.942654,4.857051,-8.916910,-3.603690,9.543687,2.720815,-0.827293,-0.449761,7.489496,1.812196,-1.617774,3.371165,-0.083203,-8.204738,9.041542,-6.809750,0.691528,-3.113120,5.387682,-0.466745,-5.295922,5.372172,-2.566482,9.853999,6.479054,1.718202,0.480472,3.052214,4.957602,4.878016,-1.944678,-8.674060,5.590056,5.358739,4.827423,2.971523,-9.997142,-0.957599,-7.246948,-7.510112,-1.664005,-7.381938,-1.421309,-0.201450,9.023320,1.576761,5.055682,4.125898,-2.001819,8.066941,-7.659298,9.113920,9.277872,6.708936,1.377560,6.714187,-8.223064,-4.887363,-2.017493,-4.037503,-6.249680,8.611039,-9.615436,-1.149456,-3.755498,-5.899347,-2.641105,6.559788,-0.500241,3.927845,-0.649241,7.198282,-6.605668,-5.507326,-8.833863,-8.351820,-5.459959,-4.411638,-7.123990,4.143529,-2.955432,2.430175,3.351247,5.330176,-5.228125,-9.860347,5.929166,2.037500,7.928577,-3.512802,-7.253644,-2.528912,4.495301,8.868268,2.341707,-4.852027,3.611233,-0.062849,-1.594693,-5.066146,-9.484464,9.231073,-0.921327,-1.214758,-5.295833,-0.119071,8.833020,6.920682,5.721134,3.163062,0.272422,5.705643,4.240239,-0.317576,3.264814,-1.273644,9.330890,4.880116,-6.750155,2.417453,3.877328,-8.031168,-0.241399,0.115308,-8.545591,-7.290141,-1.087516,-5.294399,3.396530,9.833450,2.693005,-2.067810,1.015004,7.299519,4.009261,3.340115,-1.746993,-7.924370,3.116025,-2.492642,-0.466767,-5.137964,-2.447361,-9.719241,6.516784,-1.148285,-2.742140,7.071250,6.927917,3.572227,1.908783,3.355549,-3.024649,-0.750976,9.676285,-0.679433,7.690303,-3.094426,1.827790,0.396987,-3.109900,-3.086343,-7.547233,-1.609582,-2.792717,2.465949,-8.420417,9.502497,-1.355825,2.037749,-3.092444,9.635518,-4.357627,-3.213218,-3.319595,-7.776218,4.506801,1.551697,-6.759986,0.042670,-0.944067,-1.551962,4.357202,9.199329,1.988364,7.742948,-8.920754,9.221723,-4.009730,0.687426,8.760589,8.303505,-9.911482,-1.009308,4.609691,3.744982,-5.312916,-2.631871,2.705648,0.308171,-2.507654,-1.562753,8.163792,8.103777,7.969398,2.735352,-9.567393,-5.110363,5.113553,9.128871,-6.679679,-9.932600,-3.383030,5.395477,9.635285,-0.631697,6.178806,-5.641456,-1.818239,7.885684,-5.863333,-1.816750,8.274446,9.321220,-2.111920,3.918924,1.340768,6.389349,8.532434,7.533015,-8.740235,-1.280481,6.036369,-1.849174,7.920108,1.971842,-6.934534,-6.401094,-6.080442,0.743913,6.498788,-1.227867,-9.332801,-4.192024,-9.929340,-9.055850,-4.976527,-1.232243,-8.899193,5.512279,-1.306985,6.210794,3.273906,7.240151,-9.943130,-9.827278,2.271897,-4.994635,-6.389557,5.528729,1.478037,6.582144,4.866233,5.467521,9.048864,8.279143,4.128517,-8.656057,-7.241227,7.091276,-6.915456,-8.339842,-5.133508,-6.203119,-3.879971,3.636228,3.566990,4.731946,-0.170233,-6.004277,7.312501,-4.962288,9.507214,5.840861,-2.086144,-6.492767,-7.443296,-6.747204,0.490687,-8.224954,4.149780,0.172762,-6.560063,4.805153,6.989593,-7.698152,7.845566,-1.973647,-9.939206,-4.369156,-4.160213,0.753049,-4.210857,1.385139,-4.749383,1.380876,7.546744,4.809156,4.902268,-2.155315,-5.694631,1.368833,2.760493,-9.416910,-3.575414,-9.872706,8.736071,8.627943,-8.009644,-5.463087,-0.129639,-7.267655,-2.811224,-5.226807,-6.404223,6.295765,6.173762,-8.071560,-6.144795,-2.536888,5.393831,6.871775,9.294085,-4.737842,8.974815,-5.259264,-1.333701,5.068529,-3.467895,-1.556346,-3.562044,-0.313327,4.915458,7.062032,2.891333,-1.299308,-3.059168,-1.457248,-6.875143,9.771028,9.229147,-8.760062,-6.324191,-0.502400,4.205109,5.882238,-1.434060,2.223555,-5.558512,0.540465,8.600315,5.018807,9.371501,3.198006,-8.050024,4.160573,-4.681639,-6.953308,5.048142,-7.405324,7.047805,5.508989,3.760067,9.516723,8.440576,1.393821,-5.321249,-6.977884,-1.918580,-6.739127,7.072792,-1.063955,1.259171,-7.865235,-6.931140,8.838756,2.808688,7.677417,8.522927,-3.894882,-9.867373,6.254945,-1.097651,-2.260707,0.303389,-7.757092,2.564429,1.914616,0.684919,3.857328,-6.426602,4.975890,9.471355,-5.760269,-4.402010,1.535408,-5.974777,8.706779,6.207265,-7.249140,-5.538019,2.410446,5.208459,-4.955703,-6.412742,-6.510600], dtype = "float64")#candidate|3291|(1800,)|const|float64
const_3292 = relay.const([-8.826652,-4.329018,4.231848,8.534580,6.851613,-6.756550,-1.139843,4.105350,-1.620408,-9.383888,-6.404390,1.270358,7.217723,-1.018794,-2.818949,-9.743235,1.874308,8.845949,-0.894549,4.363205,-1.175188,-7.200268,6.945136,8.903193,4.161011,-3.320947,-7.479072,3.028366,-6.522284,-2.148699,5.865413,8.958072,1.357465,9.692476,4.341927,-8.115245,-9.426456,4.971265,-5.138434,6.968737,-5.956029,6.101672,6.505592,-0.665532,3.822655,-6.128922,7.593196,5.907157,5.377706,0.465681,2.875218,-7.502232,-8.611297,9.457713,-9.415548,-7.832636,-4.693547,-8.050453,-8.880097,6.495909,9.168486,-4.383916,2.227857,-1.781697,0.705576,-1.646614,8.967201,-6.913784,-6.386813,-2.820053,5.766775,0.937703,0.312152,7.016803,4.397551,0.707843,8.808086,3.303758,0.390388,0.285318,4.229303,3.424127,-6.822011,-6.472922,1.620824,-8.035657,-5.606713,-5.624568,3.396897,4.797920,6.492230,3.822619,8.311276,0.325599,-0.830433,3.988268,-6.603869,-2.284262,-6.899397,3.268514,-8.517029,-0.995752,-6.022876,-0.779190,3.330506,-9.519689,-9.273393,1.995323,-8.636708,-8.512430,9.413940,1.122409,-3.374307,-3.321318,-3.402918,-6.706046,9.471573,7.178491,5.430303,3.167389,-7.780038,0.565977,-1.032616,-1.709012,-6.900567,8.310893,-7.895778,2.287576,9.072816,2.720350,-7.044812,-8.174683,7.788327,7.272586,9.299350,1.489297,-4.736481,-5.396455,0.763599,5.329998,1.048516,6.310939,3.353830,-2.192885,-5.677108,2.317612,8.736614,8.701159,5.212410,3.270822,1.400526,-3.529751,-0.207400,-3.130769,8.926759,7.275911,7.997110,-1.569613,0.541677,0.083291,9.951583,-7.702823,-6.041639,0.328602,-2.402325,-5.766770,1.865035,7.000028,2.334287,6.875097,-1.442585,6.138643,6.321216,-0.021573,-4.380106,-8.975150,-7.656682,-3.464044,-1.736609,8.666780,-7.725114,5.330851,-0.450541,0.534760,-5.045560,9.024389,6.157943,-8.073196,-1.277858,-9.655267,-9.442135,-3.979787,8.531017,3.981302,-7.325078,6.899626,-5.097138,-2.520867,3.016576,-8.030960,-5.040264,-4.147904,-7.588893,-2.136949,-7.497677,0.136804,-9.170439,9.486501,-4.331483,5.563471,3.557761,-3.218630,6.928504,7.722819,-6.175222,2.388641,7.891450,7.919019,-6.845999,-1.525484,-5.798185,-1.001991,-9.693860,-4.845850,-0.093245,0.698667,-4.604016,-9.937726,1.094899,8.027420,1.904477,-9.375797,-4.676189,2.780263,-9.867853,5.870044,9.444650,9.513568,-2.395762,8.912704,2.106799,-9.600480,-0.762709,-1.640856,-7.405102,0.816414,-9.824360,-9.911619,7.794810,7.815167,-9.272777,-9.007115,-3.218770,6.797009,-6.320997,-3.200298,0.171629,0.569550,4.087924,2.487349,1.601209,4.015787,8.532534,6.023050,7.524211,-5.746094,7.512909,-2.679133,-5.884296,-3.506303,-0.627515,-7.156592,-9.561912,4.309865,1.752954,6.357262,9.218862,-8.486280,4.176607,-1.325508,0.798017,-0.597818,2.471042,-4.476023,-3.974484,-6.787061,7.539406,-8.126500,8.974392,1.424766,8.980438,4.732590,-9.690344,5.234706,2.583313,-0.348939,-2.230407,-9.156544,6.974346,0.943738,5.400740,-8.683673,-2.666329,-6.952661,-4.839850,3.963181,7.718681,7.050683,-2.865313,4.312570,-7.633990,-2.142488,-1.985446,-4.881299,-8.554313,6.994095,-5.980829,-4.610264,-8.062874,-1.793253,2.607742,-8.732669,-2.896009,-1.116549,-0.907105,7.907642,7.758011,1.451404,-6.343436,-4.722616,1.529870,-9.550692,3.238831,7.867150,-8.884050,9.347464,9.475153,-7.345324,6.369217,-0.612258,-6.411066,-3.934760,-0.039849,8.982018,0.796574,0.421480,9.112595,-8.912522,-9.382316,-4.652750,7.204717,-6.626434,-4.173037,4.755873,8.763216,7.464150,1.575492,-5.391104,-5.740740,-5.757999,1.875451,-5.068248,1.865239,2.457472,-5.992663,-4.466906,4.692308,-8.905276,0.519497,4.377189,-9.998413,-6.810707,-6.149686,9.086537,-6.186205,7.228846,3.353497,-9.965476,-1.537867,-5.390424,-9.487418,9.386317,-4.134925,9.402514,4.825562,-9.458494,8.384435,4.664555,3.499323,-7.079876,-8.459242,9.050243,-5.979483,-5.839558,-2.090736,3.945969,-3.649765,-6.113028,5.311540,-0.279860,1.306812,-8.250325,-6.612695,-2.294720,-0.592389,6.591445,-4.597797,-6.789218,6.014743,-8.945478,2.069543,-7.536162,-0.499598,-9.851856,-4.007165,-5.965547,-7.524044,-4.746416,-8.231628,-3.368289,-4.375878,6.145533,9.966479,1.389915,-8.189795,-5.416661,5.902253,5.226116,7.437298,1.885105,1.482782,3.988054,-1.857288,-6.387485,2.890700,6.919994,-5.572016,-0.510738,-3.186181,-0.765383,0.502391,6.944602,1.394242,-0.707727,-6.429876,-4.319315,8.502649,4.916644,-0.957996,-5.152385,3.589048,2.685046,-2.358706,4.833948,2.781062,-5.116303,-5.611823,8.983271,-3.649545,-6.819369,-0.952103,-3.927464,4.730473,3.874887,1.144591,2.047836,-0.929846,7.300960,-3.069451,9.965557,-6.537624,2.245789,0.847873,4.476507,-6.074014,5.565019,-2.033588,2.833883,2.886884,5.992162,-6.032969,5.002965,5.501808,-6.852267,0.663737,7.511648,2.841260,-4.766435,-3.576248,-6.807812,-4.711389,5.905668,-1.386053,-0.526514,8.938929,-2.975202,-1.304060,-6.106056,-8.616859,3.345086,4.856852,-9.157048,0.752072,9.267973,-0.311826,0.180013,2.853487,1.433993,6.434810,-2.612148,-4.362277,-3.491539,-8.563392,-5.499079,3.228115,2.208711,0.104046,3.251966,-5.319423,-4.426927,1.884686,4.981279,-6.945243,-9.068912,-4.032914,-1.243325,9.688749,9.955922,-8.211814,1.530926,-4.993861,-9.113314,-6.237394,-8.308076,-3.114516,5.202020,-2.258945,6.379734,6.152230,-0.229778,-8.300588,-9.553192,-1.159767,7.904303,-2.946580,-7.874596,4.471634,-2.408654,0.880577,5.933920,6.190892,6.872103,9.013696,-5.318916,-2.722890,8.438394,0.650871,-1.441257,5.618281,-0.502498,-1.926790,-3.101155,7.002216,2.001006,-1.288355,1.089545,8.699663,0.969945,2.895516,-9.252554,7.608518,-0.386940,2.240524,-7.784993,-2.069683,-2.777571,1.514075,0.248203,3.160444,2.081713,3.204319,6.360025,5.503079,6.859849,-8.422121,-7.323721,2.257670,0.408678,-8.301207,-9.834172,-2.953952,6.006342,0.239865,4.276324,-3.143714,-9.922563,4.939661,-7.159487,5.700836,8.716843,9.410493,9.662006,-7.372445,-0.655238,-0.859961,9.139258,9.663939,-2.315444,3.712402,-0.603968,2.109573,1.794151,-9.677768,9.739953,-5.918631,-5.981942,2.676868,-4.528585,-5.399987,-4.683526,8.986007,1.727637,-6.464694,-8.228938,8.331183,7.962933,8.473560,0.742988,0.501744,1.751828,0.022491,4.371142,4.333007,-8.093567,-6.786759,-7.415712,6.243231,2.506000,-4.215967,9.247814,-2.608997,-5.061662,-6.541595,1.055209,-1.634884,8.257001,-2.764615,-7.692107,-9.015823,1.205833,5.662160,2.065932,-6.661272,8.778144,-7.000981,-3.261591,4.828764,-8.764132,8.579861,3.612831,9.046243,2.271838,-2.613251,2.330167,6.203524,0.255131,7.404835,4.402613,5.368002,-7.923344,6.533485,-4.568572,7.607804,-1.945495,0.885087,-5.608303,-0.758344,-7.435598,-0.988239,-8.404685,2.233916,-9.893928,-5.929365,-9.550807,-8.564638,1.871795,2.156245,1.428620,-7.687832,6.303657,9.963575,-6.626370,-2.463622,-6.307681,1.121982,-0.015337,8.990079,4.903014,-5.619274,3.270115,-5.919912,-0.211370,6.668710,-9.573380,-3.793336,1.052090,4.193672,5.041388,-7.450956,-0.467761,-8.482109,-3.123748,-9.625935,6.036135,1.705000,9.647510,1.568493,-4.082554,4.399448,5.689245,-5.950670,-8.940806,-3.542667,7.348335,3.427304,-2.602152,-1.653273,0.069754,-0.420582,9.796725,-2.159339,3.652126,2.043171,-2.096019,-6.869880,-7.150000,-5.897267,5.494661,-4.094748,4.924792,-4.772386,-6.443346,1.605067,2.476434,-8.882939,9.371986,-7.325602,1.430832,-8.815348,-9.406869,6.766055,-6.554858,0.819228,-3.754930,-5.553138,-9.126986,-2.128086,-7.440249,-2.679822,8.987740,-1.447657,2.078496,-9.592839,-0.833030,-2.644974,4.097068,0.926900,1.365981,8.608651,5.715982,-4.819131,6.574762,-1.894433,-0.571502,0.258973,3.067406,-3.698355,-8.475155,0.741405,-3.687010,-9.611503,6.415945,4.358584,-8.196184,7.040900,-7.209488,2.752243,-5.626724,8.361266,3.497152,-0.067669,3.160101,7.050085,9.146108,-0.169610,8.057970,-5.179802,9.904285,3.811088,-0.660437,4.681317,-7.834857,-0.245203,-2.666213,5.153748,9.776012,-5.556825,8.887369,-9.983696,6.500144,-8.516009,0.609526,8.294044,-6.337068,6.375796,1.083251,7.721308,4.906474,-2.812622,-5.872198,7.975709,-6.705978,-4.471233,-9.456125,-7.296616,5.600021,-2.253557,9.335547,8.605921,-4.044210,4.360452,9.900533,-8.317097,-8.275547,-2.007482,-5.537658,-7.054985,-3.955109,-9.533263,-2.871423,-7.932174,2.897381,-8.491942,-2.707137,-9.206102,-7.199563,0.363362,7.778257,1.966070,-1.519012,-6.501007,3.146267,4.161719,0.477289,-1.223491,3.716605,7.544777,8.634287,1.292943,-2.534596,8.987299,5.965726,-4.434048,-4.620745,9.091880,-2.330445,2.463590,-0.149125,0.553350,0.611362,2.985164,-2.929477,5.925345,2.689638,1.083780,7.062976,-1.536255,7.179213,9.619984,-9.415958,2.934822,-6.757294,7.494146,6.659471,-0.599426,-8.747079,8.791053,-8.938595,5.172264,-0.061386,9.991170,8.317966,-1.480877,7.536108,-3.299147,-7.676156,-3.251606,-0.626226,-6.139718,-6.666404,-6.591166,-0.341368,9.767032,3.331760,-9.697509,0.741717,0.868396,-1.390767,-8.675478,5.045264,2.532429,-7.319160,-7.536489,1.950899,-1.808632,1.663331,2.207225,8.779092,-5.102039,1.021011,-7.943902,0.689953,6.358588,1.115137,3.344749,-1.580220,4.382877,-2.107481,9.492877,-9.504499,7.905714,0.726489,5.822321,9.105042,9.352055,7.502480,1.018373,3.579597,-6.256172,-9.936588,5.017832,-4.348595,4.720126,-5.160561,6.540017,7.859878,-5.618946,1.770439,7.957599,5.523778,3.363964,-8.982817,9.545504,6.897604,-9.302830,6.006817,-6.753222,-6.921568,-0.702125,-5.049454,8.178477,-3.124424,-0.026380,-1.658391,-0.074264,-7.727698,-7.492037,1.983770,-2.718621,0.530436,-4.997732,-7.343337,-4.239805,0.422419,8.318583,-0.312796,7.706015,-1.398178,-2.782052,2.326895,8.808370,-2.229041,-1.470411,4.301049,-8.153053,8.149538,-9.982815,4.196103,0.763625,6.568602,7.590077,4.015895,7.494544,-1.645635,-3.794815,-8.532854,-3.207388,3.559926,-2.541068,4.490109,0.788772,-7.710864,0.755848,9.785791,-1.443384,7.503522,-2.319052,-9.586421,4.659906,-9.307339,-5.590291,6.943345,0.975282,7.311666,8.457153,9.400044,7.608377,-1.043502,1.660727,1.770833,5.334049,8.979360,-7.608157,2.130264,5.211940,4.343645,-6.565533,-2.105793,-8.430271,-9.878969,-0.903415,-8.711316,2.151436,-4.812995,-6.503722,-4.288834,7.427911,-8.631425,7.514452,3.640824,9.821210,-6.724347,8.551367,3.438866,-3.329123,6.896978,0.062681,-5.203100,4.869571,-3.105429,0.981583,1.206574,-9.936427,-9.401890,0.816789,-6.563013,-9.593574,-0.279156,3.367848,9.646073,6.712999,9.169416,2.246606,6.991942,-6.571303,-5.257557,-3.890245,-7.385809,0.794122,-5.442585,-3.904745,4.231756,9.403506,-0.829020,-1.099610,-7.256983,7.531567,-6.058110,-6.378827,8.985746,0.013704,-0.923698,0.072729,0.759647,4.823450,4.254433,-8.438590,-3.357103,-6.606918,7.483459,9.905366,9.559554,5.695603,3.501885,1.614022,-7.171625,-7.846477,3.386236,-5.156429,7.479719,-6.157571,0.391831,3.584238,5.395768,4.038777,-6.301061,-8.067444,2.376773,-4.116196,1.730925,1.313026,-4.751845,-2.492283,9.932692,-1.421970,-6.860614,2.546999,-2.221775,-0.432236,-4.422988,-3.035756,-3.823684,-4.540950,-2.698421,-3.439371,8.058138,2.447165,3.701948,8.580819,-6.618867,6.358609,-8.177700,3.143222,-6.955555,-6.066169,2.509899,0.248533,-9.701689,9.275920,-6.622978,-4.533169,0.569742,-3.131292,-5.231182,9.839097,5.046907,2.748386,2.197268,-0.622630,-8.519730,-1.839017,2.965695,6.899684,-9.793552,-8.368522,-1.017051,-2.930689,5.152933,9.884934,-4.122465,-7.154731,5.061909,4.567534,-0.831058,-3.486676,0.115076,-7.682533,5.551299,-9.943029,-8.888658,-1.769219,9.025810,-9.316710,5.648184,-0.847148,-5.670213,-9.201335,3.356770,-6.046882,0.942974,-0.888294,-1.425889,-1.684246,2.002234,4.885292,8.426086,-7.338363,-7.812198,2.619386,-6.643483,4.293842,2.023759,3.105139,3.580540,-4.773665,-0.361619,9.676160,-2.245843,-0.723574,-1.759473,5.760059,-8.325875,6.205353,4.203784,-5.737345,-4.711475,-9.092633,2.175441,-7.813100,-4.220817,-3.426875,-9.797007,4.704717,3.613140,-1.597302,0.676133,3.934622,7.934439,-7.823162,-6.904570,1.053558,-3.974020,-6.141925,3.537042,-3.502497,0.140833,-7.860800,1.414721,-6.429735,-4.928455,-4.666901,3.228257,0.057605,-2.600268,8.974769,-2.745164,-8.617920,-1.492061,7.227843,8.785489,6.886218,-9.440638,-3.534333,7.786237,-0.812288,4.658151,1.284921,-1.669380,-4.894958,-2.878837,2.158918,-6.042960,5.422250,-9.811883,-8.768207,6.571190,7.099028,0.764925,0.771347,-0.805418,-6.839328,-6.881075,-5.056086,-1.598717,-3.231639,-5.347113,-3.834981,0.511931,-4.000472,-3.791675,3.559613,-6.216345,7.586541,6.910491,0.820351,-1.243384,0.624508,9.615605,7.412731,-4.983944,8.833893,-8.099920,2.249489,5.343709,0.315813,-1.751926,6.732262,6.963309,2.729372,5.163676,4.864973,-5.371248,8.373207,-8.098885,-4.689197,-8.384597,-0.247096,8.476924,-3.502525,5.261757,-2.820318,-6.870699,-8.099629,-5.032598,-3.647043,-5.352971,6.662553,2.055459,1.322083,5.063085,-9.156943,0.122548,-5.266395,5.792190,4.156961,9.401682,-6.464753,-2.029599,2.241083,-0.169316,-1.612725,7.852237,-4.937699,-7.102569,8.704294,4.125789,8.538625,-5.423304,0.992417,-9.177514,-1.964114,-0.579767,-4.950679,5.024899,8.598993,4.349469,7.018802,6.750268,2.389921,6.311821,9.850951,3.135313,7.655421,0.018916,3.005347,3.261806,0.710991,-2.942421,-5.264894,6.553159,-5.164299,-4.886830,-5.247030,3.746603,0.430287,-8.010758,1.345793,-4.222034,0.415930,5.340392,4.952576,-8.406011,-4.259799,-2.535533,-1.092122,-7.050475,6.669613,-9.072454,-3.419781,0.751381,-0.711161,-9.696968,9.118917,-4.726878,-0.749026,5.645569,8.675192,-9.194327,2.252658,-2.684226,3.114741,-1.525716,3.888846,-2.589612,-0.213478,-1.515303,8.305566,-5.486121,8.961834,7.298289,-6.071963,1.139150,-2.030119,9.718740,8.198320,6.337897,-1.598774,1.092439,2.303122,2.492272,3.159954,-2.864451,-6.336434,-6.983153,-5.743074,-9.841878,-8.119714,-8.561102,1.151670,-8.600745,6.889275,0.610247,7.438157,-7.897731,-7.802573,-0.504958,4.817358,-5.364894,0.427166,5.788166,-3.898014,-6.641538,1.246668,7.327931,-6.747484,0.770038,-9.295120,8.402307,1.044752,-9.232590,9.762609,-1.795504,8.867964,1.555205,3.327637,-7.877730,-7.043659,-0.860313,5.516241,-8.581665,-0.897820,-8.841663,3.054127,-8.147816,8.648725,-0.913800,-5.253104,0.092680,-3.334876,-7.038603,7.828842,6.770309,-9.087433,4.813523,-5.844175,5.417172,-2.036963,1.995641,-1.062383,-5.138603,-8.528487,-7.824805,8.969040,-6.693758,-6.292883,3.936583,-0.141409,0.373013,8.058613,-7.541999,0.526771,-8.294319,9.294928,9.046545,8.604298,5.246053,-0.942216,-3.982279,6.525521,5.199764,-7.055500,4.176272,-7.247593,3.354450,-6.538073,9.504931,6.959907,9.985362,7.377042,-0.836235,-8.090534,-7.351776,-0.752447,4.031921,4.280505,6.964405,4.796485,-8.174959,-4.182569,1.325133,-2.871637,-1.456366,-2.743200,-8.449798,-1.817081,8.682299,4.730707,5.689376,-2.261795,4.373801,-0.256239,9.627093,-6.367259,1.116281,5.911188,4.419197,3.907558,-9.667890,0.934222,5.602409,8.505058,-7.936033,-1.744861,-9.775463,-9.120134,-6.618620,0.515893,6.014761,-9.463870,-1.205281,5.418501,4.119670,6.114914,0.568489,-0.292888,-8.514154,8.532236,-3.967621,-9.893196,-8.805882,3.950632,3.314233,4.293816,-3.178775,6.056373,7.365739,-1.086227,2.888100,-1.996474,-4.037335,0.283504,3.062955,4.938136,-1.207910,-9.929631,6.562385,-8.321888,-7.997077,6.275942,5.333737,2.050420,1.491028,6.053149,5.259131,8.388998,-4.534461,-8.488183,4.219363,-5.913071,-6.712998,6.399329,-3.162677,-4.574800,3.559788,7.477687,8.670412,0.257335,-5.297396,2.012489,4.451733,6.103692,-9.529769,9.357369,4.409102,9.045583,-3.548465,0.537168,-1.809939,-0.815998,7.248911,-3.904496,-6.335350,-6.014662,-9.883306,3.291570,-0.346815,-5.233259,-2.023639,8.394348,7.107787,7.215708,6.935145,-5.771878,4.692260,0.593859,-4.311926,8.853654,4.310883,7.180703,0.200766,6.771316,1.532440,-5.862017,6.696417,1.559388,2.296950,5.750242,-6.580376,-8.481474,-2.322665,-6.730541,-7.425397,1.175364,7.919785,3.322573,7.709059,9.258295,-8.472885,6.816841,7.572575,-0.492323,9.766731,7.319375,1.209143,9.766030,4.759343,-8.649662,0.148788,3.110266,-3.556362,-4.723824,-1.484993,-5.460378,3.263623,-8.614149,4.445823,9.622719,-5.457308,-9.256785,6.728931,4.098395,4.465423,-6.390498,-8.717431,-7.321133,-4.762738,-9.847794,-1.462933,-7.432298,-0.214209,-7.546840,7.692052,8.581241,-1.094980,-7.439465,7.055376,-4.133968,3.486515,-5.243997,-3.991035,1.659577,5.717395,5.373804,-5.116706,4.419865,9.444954,-0.868408,-9.196656,-7.538345,2.192772,-2.609938,5.752545,-1.037746,6.960097,-2.243476,6.849968,-7.623213,7.909284,-2.965159,0.763971,8.212495,3.315941,-9.691414,5.327221,-7.160005,9.423308,4.343039,2.021507,1.392072,-6.401065,-4.745247,2.898728,-4.979352,8.777504,6.935659,9.014399,9.583381,-1.103046,-4.928992,-9.869127,1.097247,1.367541,-9.938271,-4.354426,2.002746,9.129518,-8.361766,-5.773601,-4.665620,8.843705,0.396208,-8.455081,6.492535,-1.823534,-9.804587,-2.498984,-3.267461,-4.893902,-6.328463,-0.719017,-2.176013,1.121889,3.497779,6.250886,1.128697,0.633384,6.359999,0.330302,-1.206255,-3.471728,2.848970,-0.109354,-6.341464,-4.597135,8.251066,-9.821813,0.574480,-8.855957,-0.138849,-6.318749,-5.765597,-3.608601,3.547274,-4.057185,6.093532,-8.066280,8.213434,-3.754472,9.931414,-1.354641,6.939284,-0.030138,5.135382,3.530866,9.100463,5.382549,6.877577,2.523782,-3.604669,8.314364,8.593140,-7.017708,-6.334806,-0.483935,1.555221,8.345672,-9.062925,4.756420,-7.470691,5.682323,-0.857695,-2.908992,-1.916679,-6.404305,7.683955,-0.805850,9.503407,-7.653495,2.722497,-5.978284,2.547035,8.838462], dtype = "float64")#candidate|3292|(1792,)|const|float64
const_3293 = relay.const(-5, dtype = "uint16")#candidate|3293|()|const|uint16
call_3290 = relay.TupleGetItem(func_449_call(relay.reshape(const_3291.astype('float64'), [15, 15, 8]), relay.reshape(const_3291.astype('float64'), [15, 15, 8]), relay.reshape(const_3291.astype('float32'), [15, 15, 8]), relay.reshape(const_3292.astype('float64'), [1792,]), relay.reshape(const_3293.astype('uint16'), []), ), 3)
call_3294 = relay.TupleGetItem(func_455_call(relay.reshape(const_3291.astype('float64'), [15, 15, 8]), relay.reshape(const_3291.astype('float64'), [15, 15, 8]), relay.reshape(const_3291.astype('float32'), [15, 15, 8]), relay.reshape(const_3292.astype('float64'), [1792,]), relay.reshape(const_3293.astype('uint16'), []), ), 3)
output = relay.Tuple([call_3263,call_3290,const_3291,const_3292,const_3293,])
output2 = relay.Tuple([call_3264,call_3294,const_3291,const_3292,const_3293,])
func_3303 = relay.Function([], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
output = func_3303()
func_3304 = relay.Function([], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_3305 = relay.TupleGetItem(func_1600_call(), 0)
call_3306 = relay.TupleGetItem(func_1601_call(), 0)
output = call_3305
output2 = call_3306
func_3311 = relay.Function([], output)
mod['func_3311'] = func_3311
mod = relay.transform.InferType()(mod)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mutated_mod.get_global_var('func_3311')
call_3312 = func_3311_call()
output = call_3312
func_3313 = relay.Function([], output)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_3330 = relay.TupleGetItem(func_2161_call(), 0)
call_3331 = relay.TupleGetItem(func_2162_call(), 0)
const_3353 = relay.const([[[-4.233456,-2.894826,-5.165821,2.024107,4.017888,-5.928736,4.868556,-0.646926,-2.842860],[-4.275821,3.552009,4.609875,-0.682184,7.729921,-9.516304,-3.116099,3.372441,3.950871],[-2.403383,-0.627572,-6.292806,7.990423,6.570311,1.641098,-5.015615,-7.915368,-6.518553],[2.024273,-3.440002,3.739871,-1.465253,3.903812,-3.944571,0.017054,1.716468,2.801709],[-8.397200,-0.770902,-3.684400,9.335817,9.892099,8.996556,-7.749982,-7.118487,6.915835],[7.054504,-2.203593,8.327546,5.538813,5.155927,-2.347616,-2.579577,-8.371257,-4.621279],[1.613215,6.926575,2.081373,-1.523203,3.714103,0.846633,7.054068,-6.071054,4.469346],[-8.781774,-5.829652,-7.390849,-4.312169,-6.436454,6.430443,-1.615418,-1.973635,8.888976]],[[-7.466912,2.066449,-8.224550,-1.245436,8.380037,0.641502,-8.179836,-0.038995,-1.300014],[7.943100,1.040326,8.627430,9.491073,9.007225,6.209639,7.978320,0.051638,3.678677],[3.199527,9.618563,8.804944,-6.637778,-5.757926,-2.372035,0.740028,-3.357191,2.579535],[9.222448,1.603317,4.547771,8.567519,-4.737302,1.716994,-0.403820,6.245751,-2.412700],[8.526902,-3.585497,1.519857,-9.743890,-7.780932,8.932693,-6.164045,-0.911313,-9.596878],[-7.643451,2.309871,-1.160515,-0.644769,4.819909,-5.876009,-7.325049,-1.630742,2.376776],[-6.817015,-8.891255,-6.829376,-0.086790,-7.571753,-2.490184,-2.722740,-3.866293,1.746255],[4.605287,-1.651530,1.994647,-4.580953,-8.182393,-1.186290,-9.585760,4.783670,-7.783366]],[[-5.319690,-5.816153,1.123563,8.445363,5.912203,9.624874,-8.369813,-5.030761,-9.779802],[5.891513,-6.107221,5.174775,-5.818665,4.273294,2.550407,7.415075,-5.753680,-9.509921],[5.675856,-8.754430,-7.089540,8.443083,-7.842403,8.388040,-8.274751,7.747925,-3.826281],[5.019540,-1.914932,-4.501346,-9.590565,0.031166,6.634792,6.661194,-7.262354,4.108311],[1.354405,0.655036,-4.480489,-6.836424,-7.737121,4.049460,1.790103,0.549163,4.862578],[9.979552,5.040890,3.004646,-3.672452,3.048369,-6.739197,1.138613,-2.968735,9.544186],[3.641766,6.808620,0.771769,-3.229619,5.259393,-7.316360,7.322974,6.464143,-6.771899],[1.617455,5.272417,0.790192,3.923728,1.015235,-3.244603,7.736856,7.810399,9.461692]],[[8.735296,3.223919,3.265687,-0.542944,5.766683,3.088088,-8.160041,-0.632687,-1.137959],[2.553846,5.111520,3.794717,3.382849,0.791194,3.698229,9.591195,1.207158,2.003353],[-2.591433,2.999047,4.647239,3.592275,-0.078907,4.592031,-1.980180,-6.817274,-8.040630],[2.832039,-6.458223,-9.996867,9.065896,5.669944,-9.921775,7.046890,-9.151996,-3.376202],[6.909804,5.751199,2.107075,-7.153030,2.415754,8.171323,-7.093678,8.576123,-7.522159],[-3.293839,3.541081,-2.582778,4.844853,-6.225994,-7.961704,9.241577,-6.576848,1.590764],[-8.798408,4.147262,0.092736,1.934990,9.375729,-2.345416,-1.764501,9.812096,-1.985963],[1.388929,1.329805,9.284938,-1.487171,-6.511028,7.032976,-0.781585,0.173887,7.539293]],[[2.195564,3.164409,1.350323,-8.429576,-8.366202,0.853971,9.927810,-9.232534,-8.569235],[-9.398752,8.970812,-8.514400,3.244167,-8.753352,-3.156485,0.557334,-8.808061,7.257602],[-4.624177,0.605861,4.570636,-8.346650,7.914684,-3.670912,-0.508146,-2.298611,7.620870],[3.130567,8.021647,0.537408,4.302252,1.184877,8.034139,-6.107248,-1.884435,6.874312],[-3.821509,-7.683094,-1.580066,-1.974874,-6.119950,-3.692680,2.881988,-6.187038,9.185102],[-4.165913,-7.626538,-6.731764,-6.928156,5.565017,-9.688142,7.869874,-6.559286,-7.220214],[-6.529306,-2.175945,8.719600,-2.648217,-0.323288,-6.041563,-1.362664,-5.709448,-5.979080],[4.633902,0.717293,-6.391409,1.247369,6.225322,2.123936,-2.118273,-1.632637,-6.798591]],[[-0.115181,-6.292440,0.687050,-6.593432,3.185096,-1.783909,-9.714697,2.511878,2.100801],[7.759487,4.928469,-8.007676,3.914843,-3.575525,2.586097,3.515562,0.906529,-7.799028],[-2.713253,-6.427210,-3.698174,-3.991683,-7.729218,-4.883763,9.771729,-3.678881,-4.470099],[2.417162,-3.533458,4.826749,9.648876,0.918638,-3.304171,1.309187,-0.096574,5.375475],[5.201606,6.841548,4.972209,2.148146,-3.437046,2.979673,-1.262867,-7.794248,-0.561103],[8.298567,-0.073338,-1.667158,-8.274100,-0.297889,1.592819,4.816732,9.505683,1.231861],[5.250497,1.758937,-4.190344,-9.887823,1.069930,7.768707,9.978869,3.705230,9.836052],[-7.052321,-3.588947,4.088868,-1.250230,-1.613215,3.632711,-2.823475,-2.913144,-5.602199]],[[-1.205544,7.906821,1.770452,4.196826,3.886905,0.875608,-2.095227,4.950846,-3.135999],[9.262287,7.138469,-9.120183,2.048970,5.262956,-8.109096,-0.921672,7.673951,-9.507714],[0.107923,4.592806,7.540298,5.494556,-3.747867,-1.907326,7.092551,-1.576621,4.458992],[-5.643792,1.116853,-8.902164,8.403716,0.396807,-0.666437,-1.663888,1.610982,7.764503],[-5.496548,1.394489,8.540387,6.004681,0.995951,3.273332,-6.400931,3.045255,-5.366768],[4.392867,-5.752442,-0.004078,-5.236592,-9.889449,-2.896436,-7.328229,9.567613,7.720944],[7.833494,8.192941,-3.966798,6.565975,-0.887068,6.708513,-2.130407,6.110647,2.053734],[-5.252226,-7.041931,6.248563,-5.220968,3.952610,7.308636,-4.673547,9.102032,5.049097]],[[-4.241191,-8.033959,0.939992,9.529378,-4.751299,9.210273,-9.752834,4.384558,-8.582275],[9.782401,6.384627,-7.217213,-3.476831,0.054676,7.035270,0.122730,-0.708544,-9.466621],[4.288125,6.999076,-7.931984,8.105888,-8.310106,8.001884,-9.669367,4.475510,3.212646],[-1.229605,-3.608625,3.859144,8.225162,-7.775729,-9.122355,2.556385,-6.541476,8.411567],[8.718797,-2.155926,-6.816538,5.117463,-9.206331,-6.726553,-7.229848,0.639948,-5.788653],[-5.318540,-2.944421,0.292707,-4.260217,-2.924816,-9.638555,8.090039,9.994417,2.798307],[-9.482394,-7.996886,-7.607745,-5.420099,4.603054,2.126287,5.375871,6.182657,-6.713615],[-8.200931,-9.136258,-6.674190,4.977084,-2.427885,7.064349,-5.133087,-9.954309,-2.009681]]], dtype = "float64")#candidate|3353|(8, 8, 9)|const|float64
bop_3354 = relay.add(call_3330.astype('uint64'), relay.reshape(const_3353.astype('uint64'), relay.shape_of(call_3330))) # shape=(8, 8, 9)
bop_3357 = relay.add(call_3331.astype('uint64'), relay.reshape(const_3353.astype('uint64'), relay.shape_of(call_3331))) # shape=(8, 8, 9)
output = bop_3354
output2 = bop_3357
func_3363 = relay.Function([], output)
mod['func_3363'] = func_3363
mod = relay.transform.InferType()(mod)
output = func_3363()
func_3364 = relay.Function([], output)
mutated_mod['func_3364'] = func_3364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2087_call = mutated_mod.get_global_var('func_2087')
call_3371 = func_2085_call()
call_3372 = func_2085_call()
func_1702_call = mod.get_global_var('func_1702')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_3374 = relay.const(3, dtype = "uint16")#candidate|3374|()|const|uint16
const_3375 = relay.const([-10,-9,5,-5,-9,-10,-3,6,-1,-8,-5,-9,-7,10,4,8,-10,-4,7,10,2,-7,-4,5,-4,-4,-5,5,5,-1,1,-5,-8,-8,8,1,9,7,4,9,-4,-6,8,-2,-9,4,-4,-2,9,9,9,-9,9,2,-9,-3,5,-3,-1,8,10,9,-2,-8,1,10,9,-8,7,-4,-2,1,-6,-10,1,-6,-9,-5,-8,-4,2,10,-3,-10,8,-9,10,-8,6,3,8,-8,-6,10,10,4,-7,-1,-1,-3,4,-1,-3,1,1,-9,-3,7,-4,3,10,3,-10,-6,-3,3,-10,-2,-5,4,-4,4,10,9,8,-7,9,-4,2,3,-10,5,-3,4,-7,-4,1,-2,-9,6,-3,6,3,-3,3,-2,-2,-4,1,3,-8,3,-6,2,-4,-5,-3,8,-4,-1,-7,-9,-8,-4,-10,-1,5,-8,8,8,-2,10,-7,-1,1,5,7,-7,-6,-5,9,5,-9,6,-6,-1,9,-6,-2,-5,-1,9,6,-2,-8,-9,5,2,10,3,-2,4,6,6,-7,8,-3,5,-6,4,-5,4,8,6,-4,5,3,-5,-1,6,-6,-7,5,10,10,7,6,7,-5,-3,-10,-5,8,-2,3,-9,4,7,8,9,1,3,-7,-5,-3,-1,7,-6,6,-5,5,9,8,9,5,-5,-5,-6,-1,5,9,7,-2,2,10,-8,-1,-6,-2,8,2,6,2,-8,-4,6,-10,1,5,-1,-3,2,7,5,-1,-9,-4,10,8,8,-2,-5,-7,-4,10,-9,-6,6,-9,5,4,2,-8,4,10,-7,-10,3,-1,-2,-2,-3,-2,-2,-2,10,8,3,-6,-3,1,-9,4,-8,10,-5,3,-1,-1,-7,-9,-6,-10,-4,-8,-3,8,-1,5,-9,-1,7,6,-10,-10,-7,-3,7,-4,8,-9,2,-4,-4,-2,1,-7,9,8,-8,6,9,-2,1,-9,-9,-1,-8,4,3,4,1,-2,-5,-2,9,10,-5,4,10,8,-2,8,5,1,-10,-2,6,-3,-6,-6,3], dtype = "uint16")#candidate|3375|(392,)|const|uint16
call_3373 = relay.TupleGetItem(func_1702_call(relay.reshape(const_3374.astype('uint16'), []), relay.reshape(const_3375.astype('uint16'), [392,]), relay.reshape(call_3371.astype('bool'), [8, 8, 9]), ), 4)
call_3376 = relay.TupleGetItem(func_1706_call(relay.reshape(const_3374.astype('uint16'), []), relay.reshape(const_3375.astype('uint16'), [392,]), relay.reshape(call_3371.astype('bool'), [8, 8, 9]), ), 4)
output = relay.Tuple([call_3371,call_3373,const_3374,const_3375,])
output2 = relay.Tuple([call_3372,call_3376,const_3374,const_3375,])
func_3377 = relay.Function([], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
output = func_3377()
func_3378 = relay.Function([], output)
mutated_mod['func_3378'] = func_3378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_3410 = func_1156_call()
call_3411 = func_1156_call()
var_3431 = relay.var("var_3431", dtype = "float64", shape = (8, 8, 9))#candidate|3431|(8, 8, 9)|var|float64
bop_3432 = relay.floor_mod(call_3410.astype('float32'), relay.reshape(var_3431.astype('float32'), relay.shape_of(call_3410))) # shape=(8, 8, 9)
bop_3435 = relay.floor_mod(call_3411.astype('float32'), relay.reshape(var_3431.astype('float32'), relay.shape_of(call_3411))) # shape=(8, 8, 9)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_3458 = relay.TupleGetItem(func_2986_call(), 2)
call_3459 = relay.TupleGetItem(func_2987_call(), 2)
uop_3467 = relay.sin(call_3410.astype('float64')) # shape=(8, 8, 9)
uop_3469 = relay.sin(call_3411.astype('float64')) # shape=(8, 8, 9)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3485 = relay.TupleGetItem(func_2716_call(), 5)
call_3486 = relay.TupleGetItem(func_2717_call(), 5)
func_1170_call = mod.get_global_var('func_1170')
func_1171_call = mutated_mod.get_global_var('func_1171')
call_3494 = func_1170_call()
call_3495 = func_1170_call()
func_3238_call = mod.get_global_var('func_3238')
func_3241_call = mutated_mod.get_global_var('func_3241')
const_3497 = relay.const([0.782228,6.882698,1.039102,8.587440,9.040123,0.297024,-1.715283,-1.952868,-8.689559,-5.011447,-2.305787,-2.346311,-7.110677,-9.825646,-9.519135,9.735299,-5.988911,5.519642,2.247640,5.785917,7.840063,0.109191,-2.505691,-3.385756,-6.292798,6.659517,-7.203705,-2.150911,-3.540074,-9.832465,9.390198,-5.976244,-1.904334,2.550966,-0.151131,-8.983609,-2.293461,6.128334,4.560741,1.214990,-0.284451,-6.602377,-8.074059,-8.363987,6.204509,7.153128,-9.995165,-0.591898,4.222915,-7.755675,-3.828176,0.809258,-3.506240,-9.086639,-5.444755,-4.248168,-8.413474,9.195661,8.171457,2.971931,-8.734252,4.337497,6.733026,8.725631,-5.930856,-0.652827,-0.590287,8.883028,7.520420,-4.269269,7.573252,-7.948344,0.288831,-9.918257,1.608493,-6.720522,-6.165223,-6.054301,7.985149,-6.504228,0.782593,2.802396,-9.419518,3.181311,-6.504551,7.707508,-0.741874,7.266061,4.179739,-7.952761,-6.441748,-5.826346,-7.012982,-8.497122,-1.389341,7.968315,5.952623,2.987861,6.822281,6.479460,-7.031718,6.357562,0.599380,-2.262229,-6.604924,3.226411,9.008104,7.714541,6.702606,-5.870234,-8.303763,0.129435,-9.620794,8.300026,3.944938,6.179593,2.378109,-3.287048,3.275369,7.581041,1.131089,-9.192992,-3.266709,4.307150,7.698754,6.259095,0.840994,-0.594217,2.779834,-7.714317,-5.161839,-1.631704,-0.454757,-0.372598,-5.591049,-4.715439,2.185559,-7.297923,-2.411956,8.418136,1.550609,-2.411408,5.432168,-4.025972,-0.874425,-6.289511,-7.513852,2.157813,1.195630,4.684903,6.953932,-4.993009,-2.071514,4.621163,-1.098300,0.995753,6.887181,-7.291341,-9.365141,-5.096630,2.905243,9.679033,2.582443,8.079037,6.042089,-9.074804,-4.387989,0.400130,-1.024755,8.144049,3.911352,-8.275213,-6.620831,1.580328,-6.202571,-1.541571,-3.363445,3.890151,-0.309278,1.782682,3.694339,-0.405416,-6.131319,3.566048,-2.753786,7.362241,5.668578,8.393224,-5.099006,-8.907354,-7.001205,2.543767,-7.810578,-1.460153,3.914173,-6.948375,-1.042056,-8.419764,-9.913534,7.996807,-4.961367,-5.709964,-7.739720,-8.408575,6.853043,5.128769,0.227833,-6.941773,-2.065979,-0.499388,-1.662956,-4.514973,3.330819,7.199097,-0.851633,2.155997,5.088614,-2.765838,7.380956,4.790937,4.167240,-3.756602,6.314759,5.350182,2.880385,7.122945,-4.047711,-6.945485,-6.525251,-1.153729,-9.785621,7.419605,9.011942,-3.460172,-9.040525,4.734942,-1.241674,-3.432798,8.969194,2.767623,1.747997,-3.017297,8.390248,-3.257156,3.597475,-4.124863,-0.069749,9.884035,-4.918388,-9.264290,4.252879,-9.183794,3.602397,8.525521,-0.472912,0.118803,2.183042,-4.961946,9.830267,-3.914870,3.311336,-2.632438,8.336317,9.458543,0.773466,-3.477271,-6.053721,1.944609,-4.492729,-9.068854,8.366770,-2.643976,8.848957,7.868197,0.570072,2.121140,3.785073,-5.726637,-2.255700,-2.915358,3.184155,-2.377356,9.220363,6.259488,0.708026,1.570038,-5.249297,1.978615,-0.171022,-1.287168,0.443503,-3.532220,7.930711,2.244536,-4.408104,-6.008366,-7.249333,8.414158,-3.748685,6.827619,-1.225767,-9.548323,7.540109,3.002163,3.740006,4.002573,0.912756,6.283324,8.508455,-8.136839,-9.921858,1.742486,-5.788815,-1.771102,-4.570859,-3.359843,-0.873391,1.221019,-4.006559,0.994448,-0.429724,-8.159920,-8.961939,-7.939574,-1.594543,-8.358435,8.597259,-0.064333,-2.708502,-3.191859,-7.326830,-4.515291,-7.849488,-6.300232,-3.059554,-0.244819,2.435391,-4.050747,-9.951744,4.187139,-4.939424,2.171584,4.560099,1.614067,-4.852415,-6.535569,-6.958671,-6.190586,-9.252792,4.747272,-9.802236,6.930738,1.128597,-1.208723,5.874212,-9.738879,7.160094,1.695819,5.328545,-6.829350,4.089073,2.680388,9.377127,-2.634591,-4.782135,-5.744184,6.850366,-5.622173,-5.515087,-7.272535,-7.198399,2.087534,-8.034743,6.385883,1.066086,3.473747,-9.274349,-5.242130,-2.452926,-3.606416,-5.329158,-4.460504,-6.646079,-5.209441,8.299841,-6.246470,-8.623217,9.657930,4.781195,-0.276743,-1.537757,5.947685,-5.065316,5.057811,-8.818391,-3.970087,-6.707363,-3.272416,4.081770,4.372624,5.326232,5.546151,9.844854,-8.039240,4.624893,3.208539,-1.395444,-6.171523,-2.877854,-6.322257,0.218685,-2.435502,2.851550,8.322505,0.634909,4.775803,-4.032232,-1.642009,7.179974,-0.462092,-1.297366,-0.040885,-8.064767,0.575556,-1.143597,8.606911,-2.036216,-5.774449,-8.514058,2.351215,-4.747793,-9.107838,1.156743,0.152644,8.012205,1.274664,4.480491,4.651251,-3.880925,4.043499,-6.662099,8.704667,-8.574606,-6.370441,7.021715,-5.480229,-2.923063,-7.927498,-7.151062,-5.118909,-9.680504,3.615555,4.919069,5.380745,1.200761,5.781719,-4.539263,3.200298,-7.466743,6.543325,9.689193,3.874051,5.137345,8.503869,9.152266,6.444695,2.122343,-1.361924,3.764407,-8.660293,-5.055020,-1.410831,-6.356740,8.522592,6.717007,-1.849484,-0.741859,-3.742531,-7.276481,4.365454,1.757813,0.481897,0.842911,-0.604250,1.568853,-2.469846,-3.500103,-7.382020,-9.332444,4.822526,9.082285,-2.158810,8.992251,1.785920,-6.325818,-4.076390,2.700692,-3.610601,0.477611,-2.711468,3.628905,-4.312408,4.378912,4.839698,-9.059488,-5.221396,-9.763314,5.516775,1.560754,3.443312,-3.511844,-9.353531,7.883689,-6.382950,4.472793,-4.549455,1.793319,-4.742301,1.535173,-2.361657,-5.991020,6.644546,7.343411,-7.093786,9.701211,-2.849084,7.738653,-4.219054,2.339835,6.557441,2.848256,-1.324729,-3.489322,8.431886,-5.269591,7.203691,-2.775448,0.756987,-8.280169,8.258072,-0.615366,2.517161,-5.429998,-2.173045,-5.524589,-7.614727,5.880652,5.923156,5.034701,-8.976979,-6.529797,-6.397657,-0.801217,2.279778,8.530127,7.692279,-1.668484,-4.090239,-5.390982,3.383487,-4.344379,-0.377181,-1.289489,-0.093923,-3.624229,1.325090,-7.266945,-5.150081,7.973733,2.235733,-5.797657,-0.505125,4.289789,4.575744,-6.880343,0.576036,-2.327142,-3.711134,9.484469,-2.673387,7.365006,-2.825514,0.005164,4.749089,-1.890227,3.445736,8.584591,-1.707198,-9.005603,-4.978593,-8.623706,-2.192106,2.726300,0.602541,7.341624,-9.327282,1.192246,-3.968531,0.142977,0.388866,0.626374,-0.825904,0.980995,7.900252,-2.336944,-5.367070,6.355234,5.079386,5.254627,1.461493,-3.126881,-0.197818,1.766921,-4.999000,-2.658920,-9.954569,8.652399,-2.485483,3.477453,-5.100095,4.136005,-8.526371,2.671374,3.314298,-0.635032,1.512217,-0.949115,-1.052766,9.047515,3.523001,4.226447,5.474807,-8.939931,5.840332,8.343158,-3.976273,-0.592186,-9.120385,-0.496750,-7.466108,-1.753221,-3.768141,0.805221,-9.106332,5.272983,-3.468769,-9.783989,6.832118,1.229428,-4.035041,4.905172,2.753083,-3.429388,1.603572,5.020447,3.680434,-4.906940,6.242407,9.429606,-7.505253,9.500442,5.290753,-9.138755,-2.600174,2.939904,-2.052421,4.059812,-6.936445,7.284051,5.194702,3.569947,3.345064,-0.049798,-0.683590,-1.678939,-8.355629,8.098833,8.657379,6.487286,-6.819015,0.552976,1.358714,-2.184819,-7.700124,1.575384,6.918770,-8.153744,-1.208755,7.351501,-4.417915,1.883641,9.461413,-1.799962,-5.321458,-4.949194,-9.617480,-7.412744,9.655787,4.336829,-1.162952,9.693127,-8.713638,-2.094329,-0.534195,6.460604,-9.190388,0.981366,2.643572,-1.868906,5.949373,-9.924102,-2.501016,3.745896,-5.559494,8.070694,-4.684636,-5.718365,6.092124,5.566823,-5.592210,-5.414966,-6.106561,-8.906471,-3.865927,7.927088,1.524015,5.982591,-0.997058,9.219666,-0.098166,-0.521825,5.078985,6.621439,8.138615,-7.786402,8.614841,-1.165372,5.835933,6.897212,-1.767189,8.839278,6.868748,3.197624,-2.263168,-4.758429,-9.708970,6.943474,2.779026,-6.638231,7.000783,-5.687797,4.467996,-7.457968,1.775644,-5.750141,8.989062,8.297711,4.879960,-7.250731,-0.331181,-3.890890,5.041415,-6.374615,-8.158412,-6.778892,-6.996902,-7.180718,8.414185,-0.841911,-3.420906,-5.287999,-4.688956,-3.801265,0.171665,5.123278,4.415980,-7.570681,4.129706,5.395010,4.320246,-8.802101,-4.167104,6.722330,1.233504,-8.396245,6.825556,4.673668,3.766807,4.185835,8.232784,-6.377705,-6.837142,5.351757,2.006838,3.599378,-6.683441,-1.464873,-4.106967,2.404363,2.432185,5.008818,-0.521278,8.907349,9.918597,-0.456555,4.996345,8.926947,4.780908,-2.908557,-1.419158,7.832758,3.078155,0.347875,-4.198107,0.684683,5.469076,-7.714325,-4.945977,1.271250,-4.456655,-8.451260,-6.486307,7.235832,-5.085297,-2.749864,3.755070,-1.918639,-5.827678,-9.796677,-9.144803,-3.226361,-8.789941,1.312802,-5.621057,-9.309814,2.854653,3.528510,5.906851,0.416008,-5.072828,-6.622845,-0.950126,-3.311043,-8.918214,7.523790,-9.594839,-2.586438,-6.768544,5.591980,-7.872546,6.662855,-6.399709,7.455403,3.310926,-3.851586,1.473347,3.265769,4.709901,-7.891878,-6.503596,-5.434527,6.581681,8.729419,-9.577468,9.550291,5.468215,-8.685797,9.866520,1.285241,5.731191,-9.015166,-0.906656,-0.093078,1.576522,2.413296,-2.082356,-2.878229,6.440890,5.570834,9.728824,-4.713954,7.944225,-6.533097,7.356642,3.308387,4.723108,7.974932,2.140547,5.391855,-3.035091,-3.202662,-7.329117,-2.467608,-0.728929,-6.747238,-8.759789,-0.656530,8.499335,-8.577745,-1.767829,7.411517,7.177919,8.588504,-2.482842,8.067410,-3.033927,9.330564,3.558230,-4.133949,5.493972,7.694314,0.614749,8.529569,-9.554334,7.707725,6.741823,1.541175,0.298369,4.851964,6.200616,-1.958666,-7.664417,6.894718,-7.406071,-7.286867,-9.908631,9.454985,7.658686,-5.041233,9.532768,0.584484,4.208873,7.807132,7.893576,-0.648379,-3.917812,-3.684985,5.227646,-1.881574,6.188265,4.354650,-6.237172,-6.441254,-3.229741,8.517375,-7.353510,-8.066881,5.786082,3.791664,6.043755,-0.672649,-1.510125,-6.439869,-2.139290,5.211972,0.895315,3.257992,-8.752349,-3.627189,-6.282147], dtype = "float32")#candidate|3497|(960,)|const|float32
call_3496 = relay.TupleGetItem(func_3238_call(relay.reshape(const_3497.astype('float32'), [10, 8, 12])), 0)
call_3498 = relay.TupleGetItem(func_3241_call(relay.reshape(const_3497.astype('float32'), [10, 8, 12])), 0)
output = relay.Tuple([bop_3432,call_3458,uop_3467,call_3485,call_3494,call_3496,const_3497,])
output2 = relay.Tuple([bop_3435,call_3459,uop_3469,call_3486,call_3495,call_3498,const_3497,])
func_3499 = relay.Function([var_3431,], output)
mod['func_3499'] = func_3499
mod = relay.transform.InferType()(mod)
var_3500 = relay.var("var_3500", dtype = "float64", shape = (8, 8, 9))#candidate|3500|(8, 8, 9)|var|float64
output = func_3499(var_3500)
func_3501 = relay.Function([var_3500], output)
mutated_mod['func_3501'] = func_3501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mod.get_global_var('func_1156')
func_1157_call = mutated_mod.get_global_var('func_1157')
call_3557 = func_1156_call()
call_3558 = func_1156_call()
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
const_3568 = relay.const([-3,3,-10,-4,5,-5,-2,4,-1,5,5,-4,-5,-10,-1,5,1,9,-5,2,-4,-9,-3,8,-1,5,-2,-4,-2,-5,-9,-6,-8,-4,1,-7,4,-3,-10,-10,-5,6,-6,8,7,2,4,8,4,-9,9,-1,-1,-1,-7,-1,-10,2,9,5,-3,-4,4,1,6,-4,-3,10,-9,-6,-4,1,-7,-1,4,4,2,4,-2,7,-2,-2,5,-10,5,-5,4,2,-10,8,8,9,2,7,8,-1,-4,-7,7,5,5,10,5,-1,-4,9,4,9,3,9,1,-4,-7,3,-8,7,-10,3,8,2,-4,3,1,4,-9,7,-5,4,-2,7,9,3,10,7,-9,-1,4,-3,-5,8,1,3,-6,9,5,-8,-9,-4,-7,8,-1,-1,10,-9,4,-8,-5,-1,7,-9,-6,-5,-5,2,9,8,-9,-7,6,4,3,2,-3,9,5,-2,-2,-3,-7,9,-7,8,-7,-2,10,10,10,-1,9,2,-7,-2,-3,-8,-2,-6,3,2,8,-10,4,2,-5,4,5,5,-2,3,-4,6,7,4,8,9,-3,-4,10,-8,3,9,10,9,3,-9,-2,-2,9,-8,-3,2,-5,-3,-6,-2,-5,-4,4,-8,7,3,-2,-8,-10,-5,1,-9,6,3,-2,-1,-5,1,10,6,7,-7,-4,-10,-9,-9,4,9,9,4,-9,8,9,3,9,7,9,-4,8,9,-7,-2,-6,3,-4,-9,-1,7,6,-1,9,8,-1,1,6,-1,-8,-6,-3,-2,-5,2,-7,7,-6,6,-4,3,9,-9,4,8,2,-6,4,-3,-10,4,-1,9,-9,5,3,1,2,7,-1,-7,10,7,3,2,5,1,8,7,6,1,10,1,3,9,2,6,-9,-5,-4,-6,-2,-7,8,8,-6,1,-10,-9,10,-6,3,-4,4,5,-8,-9,9,-3,-9,-8,9,-10,-4,1,-8,6,-6,2,-4,9,9,2,-3,-4,5,7,5,-2,-8,-3,-7,-6,3,-6,6,-9,-5,-4,8,-3,1,-7,-9,5,2,-4,1,6,9,-1,9,-1,-2,5,2,-3,9,-1,-10,6,6,-3,-9,1,2,2,-1,-8,-7,-3,2,-5,-5,-9,-5,-9,4,-8,-2,10,10,-5,-6,-5,5,-5,-3,10,-9,5,4,4,7,-1,-10,2,5,-2,10,8,-5,-4,3,6,-3,-5,4,-4,-9,9,8,-1,9,-5,-3,4,-6,-4,-2,-1,3,3,3,-10,2,6,-3,2,2,-2,-10,3,-7,-5,9,-6,-1,-10,6,-1,-9,8,-3,5,8,8,-4,-4,-8,-1,-4,-9,-6,1,7,10,-8,10,-9,-5,-2,6,6,8,8,2,8,7,10,-6,2,3,-4,-9,7,3,9,-5,1,10,5,-1,3,5,-10,10,-6,-9,-7,-5,-4,-6,-8,-9,-6,-8,1,2,-9,-7,9,-10,10,5,-2,2,7,-1,8,-3,9,5,-1,3,-7,1,-6,1,4,5,-8,-2,-4,-1,-2,-9,6,-10,5,8,-4,6,-2,7,-4,-4,9,9,-10,8,-3,-5,-2,-5,-8,9,-4,3,-3,-3,-3,1,-2,5,-9,6,-3,2,-5,4,-9,-7,-5,8,3,7,8,-7,-6,-4,7,-10,2,8,8,5,3,2,-4,-8,-4,10,2,-4,-2,-7,10,-1,-7,4,-9,5,-10,-1,-9,-9,3,5,-1,-6,-7,3,-8,4,3,5,4,5,-8,8,5,-8,-1,6,2,-4,-4,-10,1,-10,-1,-8,4,9,-2,-9,6,-7,-10,6,6,-3,-7,5,-7,2,-9,-3,6,6,10,-6,3,-3,8,-7,1,7,4,-6,6,-9,10,9,-5,-3,10,-1,-3,-8,-6,-7,8,5,-5,-3,6,-7,5,2,3,-6,7,8,4,2,2,6,-3,-1,9,9,-7,4,4,-3,5,10,9,-1,5,-2,3,6,-1,6,3,9,-4,4,-1,3,-8,-8,-10,-1,-10,-3,-3,9,-7,3,-10,10,7,2,-2,-6,7,-9,-10,-3,3,3,6,-9,-9,-3,-7,5,-6,4,1,2,1,-8,-2,-3,-8,1,10,-4,-4,-2,-9,-7,-3,7,-8,-5,-10,1,-5,-7,1,-6,9,4,9,6,-2,-5,3,-10,-10,-1,-9,2,-9,10,8,4,9,3,-1,-8,-2,-9,-6,6,-5,8,-3,1,-1,1,6,9,3,-3,-2,9,-3,-9,-7,-7,-3,-8,5,-6,10,-8,-5,2,-10,4,8,-4,-10,-2,-9,1,3,-8,-9,-5,-4,-5,-9,-8,-6,10,6,4,8,-4,4,9,-5,6,-1,-2,3,7,6,10,10,3,6,5,-5,1,6,-7,-6,4,-3,4,2,5,-9,-10,-6,6,-2,8,-1,7,10,8,-6,-5,7,-4,-3,8,5,-2,1,-5,-10,-8,-3,-8,-10,8,7,6,3,4,8,-7,-10,-6,-6,3,5,6,-8,-10,9,6,-1,3,-10,-1,10,3,-6,10,1,7,5,-3,-8,-1,3,6], dtype = "int8")#candidate|3568|(960,)|const|int8
call_3567 = relay.TupleGetItem(func_476_call(relay.reshape(const_3568.astype('int8'), [16, 10, 6])), 0)
call_3569 = relay.TupleGetItem(func_478_call(relay.reshape(const_3568.astype('int8'), [16, 10, 6])), 0)
uop_3571 = relay.exp(call_3557.astype('float32')) # shape=(8, 8, 9)
uop_3573 = relay.exp(call_3558.astype('float32')) # shape=(8, 8, 9)
const_3584 = relay.const([[[3.041784,-6.370125,-2.451008,-1.074761,9.176274,8.165414,2.314151,2.737587,-5.311125],[-6.991417,-4.452170,4.992451,-2.922608,4.800430,0.905518,1.803615,8.307191,8.233820],[-5.879454,-4.946156,5.999974,-9.937742,9.515266,0.327865,-2.660172,-3.683450,1.718456],[-1.810177,6.599682,6.567961,7.153156,4.084062,-5.017116,-2.157337,-8.237347,0.241464],[3.340762,-6.531622,0.621259,-5.578377,2.745241,-3.787235,-8.236220,-5.207067,-7.489813],[3.243113,-3.417133,8.684390,1.011384,-8.495849,-4.651525,-3.357154,5.362195,-4.513837],[-9.995308,-7.426066,-1.692147,1.250214,1.278522,-8.516349,7.750059,6.996008,-5.407539],[1.717254,8.801427,7.729863,0.916427,7.866393,-3.293720,2.328929,-7.079380,1.151067]],[[-5.783243,9.256114,-8.373616,-8.157282,6.018432,-3.333340,-2.390974,-5.677221,9.284273],[7.652301,4.057786,8.737264,-8.221843,-6.494336,-8.463446,4.463298,-1.223936,-6.455961],[-2.074668,2.497695,2.766664,0.303099,7.503434,0.841566,8.039042,8.748327,1.690053],[8.093469,7.942865,-7.106716,9.163502,-8.910124,-9.407953,-3.113008,6.898643,0.818405],[6.929374,-2.686266,-3.261599,6.146361,-3.430439,-1.476695,4.933663,-0.273392,9.843375],[-6.064349,-8.300404,5.667978,-7.078270,-6.506020,6.267689,-5.929890,-6.851586,7.699198],[-1.407843,8.726845,9.979212,-8.367522,0.436953,9.582821,4.733393,1.977979,-2.364162],[-2.814222,-6.198842,6.458765,-7.273053,2.215969,-5.754854,1.940478,0.715733,-1.098234]],[[-9.545624,-8.045442,6.530953,1.091724,1.509388,-2.136426,2.491589,-3.469774,9.747393],[5.526942,0.521311,5.688674,9.127451,-8.587152,9.028356,1.148642,4.948949,4.419335],[1.715572,8.670164,7.872797,-5.948575,4.216884,-8.433323,-1.185183,-9.628844,-8.170750],[-0.421513,2.140594,2.636210,5.327246,-8.694576,-9.313694,0.323006,-8.665871,-2.921034],[-9.435102,-1.828519,-6.948887,8.197689,-2.469897,-6.705688,6.692436,-2.207990,-3.606852],[3.703443,-6.796471,-0.598038,3.366664,-7.209861,1.873436,7.092996,-7.999476,8.823025],[-2.257490,9.458179,-3.679066,-8.614927,-0.041848,-5.622649,-1.136612,-0.933658,-1.727079],[1.002622,-3.704898,7.046766,-8.660247,-3.993674,5.821083,0.678703,-7.736801,-0.502327]],[[3.023508,-3.322517,-5.522138,-7.133659,-0.462393,5.332747,3.753063,-9.927585,7.701678],[1.455696,-9.195289,-6.660666,6.479919,9.404046,-1.447808,6.355538,-4.027096,-7.498900],[-9.263973,7.798380,7.421256,4.532986,0.066126,2.116745,-3.122146,3.996855,-1.179658],[-6.836555,4.457138,8.923563,8.750418,6.007730,-7.188794,-4.622335,-6.202898,5.110467],[8.219827,0.150396,-0.939259,4.498090,7.946065,1.055263,-6.081626,-3.469695,1.065110],[5.228957,-5.689457,0.899242,-6.428346,9.141726,7.484236,1.774253,-8.926760,-5.701220],[5.837544,4.527312,-5.937635,-1.576546,-2.382571,-5.826880,-5.192230,-7.520367,4.401128],[4.927478,-8.515379,-4.478627,4.219777,-5.287366,-6.494113,-4.496739,-4.966679,2.590974]],[[-8.305002,5.666607,-0.080896,-8.426072,0.887435,6.409313,-0.093936,3.123473,0.116458],[2.002260,2.475433,-1.871242,-0.892669,1.873642,-2.955988,2.443460,-3.245503,6.208511],[-5.891251,5.225832,9.530170,-2.539002,7.484207,-8.303011,-0.675043,7.567593,0.970176],[8.440400,-4.348081,-1.041748,7.498786,6.716287,-1.271993,-1.409738,-0.477616,-8.644927],[-1.676870,-2.192033,-4.594702,8.299621,-9.723209,-8.188979,-8.202071,6.513473,-8.319433],[-8.781557,8.428477,0.809354,-2.196862,-0.494893,9.753966,-9.252742,-4.788945,4.376388],[7.920048,8.839463,7.418631,9.982351,7.872874,-9.072881,-1.178605,-4.111567,-4.027499],[0.834602,0.509911,-6.906375,8.537455,8.302772,8.906604,-3.971637,3.314731,-7.763544]],[[-6.615968,-9.083414,-2.384045,1.387268,4.918744,-2.589416,-0.515092,5.850476,1.795710],[-7.116726,-6.470626,-2.048526,4.152778,6.893211,-2.156310,9.572996,2.725090,6.565392],[0.170164,9.955219,-6.792152,-0.286897,5.876003,-6.200374,1.740987,4.053617,-2.311093],[1.504769,5.293877,-5.397797,-8.368841,-1.200798,-6.895019,7.292389,-1.544365,-4.594892],[-6.575186,9.561248,-7.779825,1.272484,4.418659,-6.519253,-2.381552,5.578464,-6.606465],[-0.399582,5.920094,-7.161550,-5.593522,5.177822,-3.124160,3.816483,5.621268,2.227445],[-5.849630,3.520789,8.485253,-1.031499,-3.414582,1.152501,9.398104,2.742398,-9.035634],[-6.261651,-8.552742,-4.428192,-5.548218,7.854224,-5.224147,3.355095,9.592135,-1.671309]],[[-6.473773,8.309916,-7.203628,1.978773,-5.259465,2.946480,3.021730,6.668155,6.624485],[-9.187995,3.015116,2.247030,-7.051513,-3.176779,-9.667394,5.703119,8.563972,5.950463],[3.617565,-3.535804,3.301458,8.299951,6.301115,-8.344459,-1.371463,-0.819494,1.872910],[4.900648,0.090130,7.514173,7.352121,-1.408911,6.099512,-9.724497,8.076107,-1.949808],[-3.927969,8.677654,-8.571654,5.154447,-6.719759,-6.511844,4.341308,-3.917320,-9.692550],[-9.861618,-4.855033,-5.952487,-4.055442,-7.114180,3.650649,7.534167,-5.248079,-7.966483],[-1.882377,7.931095,1.539216,-3.996364,-9.428283,2.757326,0.286928,-6.204808,7.395799],[5.183876,4.290479,8.123942,7.136267,8.676316,3.059077,-2.319522,0.167060,-5.502616]],[[-7.142297,0.167388,3.661229,0.752722,3.230194,-9.153696,-7.546590,-0.720644,-5.909469],[0.840612,-8.383305,6.130091,-4.805774,-3.405662,-6.697049,-4.819566,6.531173,9.035063],[7.364187,0.253131,-1.938935,0.800032,-0.744897,-6.491895,3.511157,-6.744977,-3.973312],[5.852828,8.463104,-7.501273,-6.122783,-9.229877,7.502781,6.147139,-2.890691,1.115331],[-0.081596,-3.019587,-5.167749,8.839240,-6.990635,-9.281054,-8.726828,9.642320,2.095707],[1.547076,-2.015000,3.494118,5.453527,-9.984661,-1.963432,-2.380409,-0.982217,1.907679],[6.320133,-0.923754,-5.392368,3.906810,-5.573096,-2.673171,-5.559835,-8.433415,-3.424673],[-1.091004,-5.084320,4.640844,-5.227016,3.058934,-2.088806,-6.812513,-0.046065,7.791914]]], dtype = "float32")#candidate|3584|(8, 8, 9)|const|float32
bop_3585 = relay.logical_xor(uop_3571.astype('int16'), relay.reshape(const_3584.astype('int16'), relay.shape_of(uop_3571))) # shape=(8, 8, 9)
bop_3588 = relay.logical_xor(uop_3573.astype('int16'), relay.reshape(const_3584.astype('int16'), relay.shape_of(uop_3573))) # shape=(8, 8, 9)
uop_3607 = relay.log10(uop_3571.astype('float32')) # shape=(8, 8, 9)
uop_3609 = relay.log10(uop_3573.astype('float32')) # shape=(8, 8, 9)
output = relay.Tuple([call_3567,const_3568,bop_3585,uop_3607,])
output2 = relay.Tuple([call_3569,const_3568,bop_3588,uop_3609,])
func_3614 = relay.Function([], output)
mod['func_3614'] = func_3614
mod = relay.transform.InferType()(mod)
mutated_mod['func_3614'] = func_3614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3614_call = mutated_mod.get_global_var('func_3614')
call_3615 = func_3614_call()
output = call_3615
func_3616 = relay.Function([], output)
mutated_mod['func_3616'] = func_3616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_3627 = func_1513_call()
call_3628 = func_1513_call()
output = relay.Tuple([call_3627,])
output2 = relay.Tuple([call_3628,])
func_3631 = relay.Function([], output)
mod['func_3631'] = func_3631
mod = relay.transform.InferType()(mod)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mutated_mod.get_global_var('func_3631')
call_3632 = func_3631_call()
output = call_3632
func_3633 = relay.Function([], output)
mutated_mod['func_3633'] = func_3633
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3666 = relay.var("var_3666", dtype = "float64", shape = (10, 4, 6))#candidate|3666|(10, 4, 6)|var|float64
const_3667 = relay.const([[[-6.809425,0.834770,4.020206,-9.895777,0.604229,-5.176346],[-3.168179,-7.275607,1.492921,7.599372,9.215749,-3.907799],[-7.210769,1.623934,0.726356,-3.220539,7.968710,-3.456621],[1.715712,1.423347,5.472184,-4.610532,-7.032341,-6.554468]],[[-7.618105,6.780511,9.924163,1.588475,3.348765,-5.033192],[9.129076,-9.523178,-4.277202,5.196676,3.972752,-9.513038],[-3.055804,3.698361,4.498486,-2.163174,4.548832,6.058292],[8.216614,-7.764961,-0.530682,7.600834,-5.718662,-8.010285]],[[-5.199298,-9.715256,7.261890,-5.617314,4.505499,-5.761832],[-7.927153,-1.578454,4.102558,-5.573877,-0.883201,9.847235],[9.750992,-7.364131,-9.668647,-4.220684,-6.458328,-9.917340],[9.098008,8.055744,-5.201341,1.023586,-5.283247,4.292718]],[[-6.850942,-8.069189,-5.607227,1.145556,1.487556,3.830254],[-3.070302,-2.707471,2.174309,-8.243571,-0.484319,1.769328],[-6.750102,0.372762,3.232713,-8.320151,-1.325945,-5.957964],[-5.927385,4.222484,-6.072763,8.512997,-1.096072,9.324054]],[[-0.852804,3.285015,-7.663011,-6.578047,5.579042,8.412166],[-5.505827,-2.216022,5.804489,2.285364,-1.182209,5.745349],[-5.277236,-3.616762,-3.227885,-4.946415,2.516618,5.505540],[-6.557878,-4.029217,6.030389,-9.339768,8.647416,7.552701]],[[-3.507671,-0.489931,2.091533,6.805804,-2.211148,-3.347948],[9.887046,-8.592261,-5.572887,-2.662180,1.595297,6.016582],[7.162132,-2.080956,-7.671987,8.399783,-8.598332,-4.661239],[1.235440,9.675402,2.733250,-5.903916,-7.560760,0.981815]],[[6.361796,-3.422040,7.160362,4.780041,1.379713,4.234489],[6.295682,-8.304080,2.413833,8.789544,-5.226551,-1.175545],[6.042081,4.914707,9.438020,-6.242199,-1.872367,9.092738],[-1.229009,-7.055206,-2.799066,-1.680534,-3.715442,-4.086014]],[[5.549361,-5.856397,-6.585779,5.334174,-9.237573,-6.293600],[4.171182,-1.559263,2.771217,1.008996,-7.562552,4.072889],[-6.559402,8.759499,3.784235,-0.659593,1.112572,-5.604179],[2.834553,1.567704,-3.196472,-4.042626,2.187194,-1.409207]],[[-8.283998,-3.947519,4.067901,-5.668757,2.345788,0.202125],[7.704673,4.444850,-9.154931,-5.535528,4.196581,5.856302],[4.264877,-3.434269,-9.173825,4.865645,-1.893560,-7.695554],[-9.936624,4.189422,-4.357732,-1.372939,-2.179790,-5.193329]],[[2.335564,2.980733,3.849674,1.558935,-6.016691,4.233011],[-4.491281,4.546040,-5.699459,-1.161561,-3.353631,8.092390],[-4.631244,-6.982870,0.686284,-1.659386,-8.525084,-5.074585],[-3.347837,-1.158764,6.150285,-5.130804,5.247536,-7.820719]]], dtype = "float64")#candidate|3667|(10, 4, 6)|const|float64
bop_3668 = relay.floor_divide(var_3666.astype('float64'), relay.reshape(const_3667.astype('float64'), relay.shape_of(var_3666))) # shape=(10, 4, 6)
uop_3686 = relay.log2(const_3667.astype('float64')) # shape=(10, 4, 6)
output = relay.Tuple([bop_3668,uop_3686,])
output2 = relay.Tuple([bop_3668,uop_3686,])
func_3692 = relay.Function([var_3666,], output)
mod['func_3692'] = func_3692
mod = relay.transform.InferType()(mod)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3693 = relay.var("var_3693", dtype = "float64", shape = (10, 4, 6))#candidate|3693|(10, 4, 6)|var|float64
func_3692_call = mutated_mod.get_global_var('func_3692')
call_3694 = func_3692_call(var_3693)
output = call_3694
func_3695 = relay.Function([var_3693], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_3767 = relay.TupleGetItem(func_2451_call(), 0)
call_3768 = relay.TupleGetItem(func_2452_call(), 0)
var_3770 = relay.var("var_3770", dtype = "float64", shape = (8, 8, 9))#candidate|3770|(8, 8, 9)|var|float64
bop_3771 = relay.divide(call_3767.astype('float64'), relay.reshape(var_3770.astype('float64'), relay.shape_of(call_3767))) # shape=(8, 8, 9)
bop_3774 = relay.divide(call_3768.astype('float64'), relay.reshape(var_3770.astype('float64'), relay.shape_of(call_3768))) # shape=(8, 8, 9)
output = relay.Tuple([bop_3771,])
output2 = relay.Tuple([bop_3774,])
func_3776 = relay.Function([var_3770,], output)
mod['func_3776'] = func_3776
mod = relay.transform.InferType()(mod)
var_3777 = relay.var("var_3777", dtype = "float64", shape = (8, 8, 9))#candidate|3777|(8, 8, 9)|var|float64
output = func_3776(var_3777)
func_3778 = relay.Function([var_3777], output)
mutated_mod['func_3778'] = func_3778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1722_call = mod.get_global_var('func_1722')
func_1724_call = mutated_mod.get_global_var('func_1724')
call_3788 = relay.TupleGetItem(func_1722_call(), 0)
call_3789 = relay.TupleGetItem(func_1724_call(), 0)
func_3238_call = mod.get_global_var('func_3238')
func_3241_call = mutated_mod.get_global_var('func_3241')
const_3793 = relay.const([-5.565951,4.213738,-4.159463,7.798826,-9.546308,4.527099,-3.248331,-7.356609,-7.890037,2.770312,2.530693,-9.126137,-0.067603,9.632501,-8.563997,3.867919,7.561994,4.828444,7.227513,8.914302,-5.894830,3.946668,6.045849,-3.226300,-8.639626,3.701726,9.856840,6.328198,-0.499828,5.527075,-5.165438,0.523218,-7.403165,6.522361,9.003076,6.848499,-2.844978,-9.678573,-1.195312,2.855024,-2.158605,-2.030025,-1.708965,4.303584,-6.815847,7.142988,0.686860,-1.263035,4.735925,-0.958789,5.750101,-6.198579,-0.383491,5.886289,7.038826,3.445377,5.223498,8.461711,-9.450297,-5.462749,-2.127976,5.082530,-7.997448,6.054584,-6.663493,-0.212303,7.689490,0.278493,-4.694170,-7.732643,7.967810,5.326669,6.040865,-2.019742,-6.046517,-5.550755,-0.236672,-3.033215,-4.774156,4.055548,4.297799,-9.520261,-4.057721,8.437866,-2.902893,5.270656,2.367265,6.996386,1.192631,-1.180395,-6.861985,-4.051022,2.640436,-3.915472,-0.404283,-4.470014,5.919156,-6.513856,-9.410861,-5.007821,2.973654,-0.068467,3.566766,6.890869,6.574099,-4.970578,2.866350,-2.591740,3.725735,-4.744205,-2.589623,-7.115914,3.473756,-9.269927,-5.602895,-0.081213,-2.353817,-5.113205,-8.545121,-0.673983,-4.725861,-8.727544,-5.766297,-1.725980,6.294846,7.921733,2.573753,2.997198,8.527702,-3.206139,8.457865,1.931838,9.022268,9.151832,-4.724392,8.087953,-0.427762,-8.759603,-4.765619,-5.772357,4.873505,-6.442275,6.149177,3.294035,3.375808,-2.685786,-9.199152,-1.375544,-6.142640,-4.573007,0.766129,9.849792,9.823669,-2.067586,-5.430531,7.493084,3.930282,-1.919253,0.674345,6.456399,0.537252,0.756307,0.040969,6.216417,3.322273,-8.356301,7.491928,-0.793214,5.077204,-3.488512,-2.161667,0.081817,3.448685,-4.596349,1.833352,8.694156,-0.124254,0.424061,-5.589193,9.354130,-9.773950,2.100406,4.242063,-8.116527,-4.767572,-1.428161,-0.589018,-3.001440,3.861320,-0.121590,-8.339084,8.600308,2.973275,5.483146,5.129938,5.983013,-1.249374,4.872496,6.231001,0.449711,-9.297191,-9.068813,9.973480,8.448996,3.805643,-2.356220,2.348935,-4.676514,-5.215145,5.669009,-2.697841,7.247273,3.465006,-8.098038,-4.120962,-4.438696,9.086233,0.622030,-2.654684,2.252625,-2.783927,9.534622,7.697846,-5.837781,1.396237,2.529528,5.890385,5.629303,3.717123,0.622093,8.789684,6.076070,-6.917559,9.196618,1.691411,-5.934511,-9.102933,4.185369,-0.197122,0.525317,2.601884,7.667296,3.384423,1.964403,3.488939,-5.730924,5.993217,1.556243,-8.179583,-5.542972,-2.190969,-2.484633,-3.603225,-8.061993,6.730425,8.822757,7.067779,6.092285,3.415887,0.421111,1.535545,3.237653,8.091669,-9.646828,7.789904,6.352054,-8.780631,4.396751,-5.248037,9.942261,1.059633,-8.281021,3.574818,-8.486338,9.606373,7.109437,1.931599,4.264152,-4.615516,8.860224,-4.024508,6.875886,-1.064395,6.793297,-5.007733,-2.201356,0.706321,-7.088640,2.575019,5.817183,8.379363,1.238066,1.810396,5.873260,7.822134,-2.891485,-0.986766,-5.415184,-6.590617,6.384752,-7.809081,-0.446493,-5.699566,-8.996177,7.596130,-3.165515,6.707581,-4.554409,-0.621639,-3.195674,-7.294144,5.450605,-1.039367,9.001314,-0.986645,8.516809,-0.072308,-8.302706,1.314458,-9.249524,2.927569,8.438563,3.103915,1.456759,4.051602,9.601717,-9.813002,-3.672078,-6.837250,8.249227,-2.887420,5.568527,5.637924,-1.963536,-3.884404,4.693688,3.145557,-1.601552,-6.818717,2.723040,6.095846,2.480997,3.722064,-2.515251,7.852393,-4.796417,1.060644,5.792701,-8.851958,2.960687,-7.324637,-0.617420,2.528299,-9.039343,-3.596775,7.107906,-9.388737,-9.355038,7.296402,7.043235,-7.033621,-3.200422,7.743622,-0.453013,0.735090,9.662903,0.906209,-5.267778,-2.509510,-6.042443,-1.474495,7.920092,8.874329,-9.831400,-5.049024,3.460960,-9.965730,-8.062098,7.718496,0.131962,-2.918560,7.358352,-2.565825,-4.203638,-2.734515,7.098056,6.121720,-9.939788,-0.413446,8.897885,-5.437617,-8.143220,-4.338614,1.731616,2.240317,6.822713,3.302884,9.800103,-4.509851,-8.105685,9.311157,9.470267,-2.983177,0.997002,-1.881037,-7.876216,7.863126,0.369894,1.011587,-2.277201,8.551930,3.146471,-1.368789,-9.621904,-8.168690,5.213822,7.783025,-6.204304,-0.124513,-2.789498,-0.381277,-3.605247,8.684630,-0.980759,-1.824923,-8.010944,-4.368482,-1.625985,-3.599315,1.440352,1.911707,-0.613476,9.249713,6.730858,-8.165798,-2.538049,-0.360856,5.935356,2.329244,-9.596545,-0.819269,2.384610,-4.005786,5.733876,5.649744,-6.843803,9.586737,0.722692,3.534780,1.743932,-3.125375,8.230570,-8.739534,1.775690,-2.748735,8.789409,-5.421433,0.289238,-6.497737,9.635229,9.093300,-3.057504,2.429445,2.198901,-3.913692,-6.134801,-2.175122,7.315011,-4.180791,-7.788437,0.100257,1.281728,8.257604,-3.526205,5.602896,7.665342,9.387920,-7.632904,5.932566,-1.831113,-4.119662,-5.607385,-7.892959,8.233768,-4.412932,7.986057,7.953485,0.578593,5.036300,-6.035610,-8.275674,6.256899,9.324124,-4.553826,5.579133,2.711472,5.163359,-5.512570,1.102712,1.113130,-8.959312,7.512285,9.957966,-8.261664,9.452332,-0.583013,-2.934955,0.619822,5.117282,-3.391196,-9.303968,-1.955298,4.185526,7.783943,-8.325576,5.614764,1.229085,-8.564576,3.645993,4.447832,7.842523,-8.925245,1.622119,4.765128,3.015735,2.057430,3.796018,-6.563019,8.974041,-6.027521,-5.071428,-5.154793,-7.277762,-6.071434,8.804384,-2.324496,1.378138,-3.250911,9.418492,3.521552,3.208491,-4.869757,-6.573318,5.649635,5.222710,7.913411,9.732602,5.958356,-3.730460,-2.261050,-5.021044,-5.673687,1.988585,-4.489990,3.261928,-5.722089,8.508553,2.675852,5.460590,8.129454,-7.998154,-0.605682,-5.149123,-5.408584,7.268742,-0.152497,2.697304,-5.635429,4.425570,9.194841,-6.792140,5.580755,2.717391,-0.389013,4.509272,5.112294,-4.730501,-3.903692,0.432988,-8.711383,0.032417,-7.659928,6.577875,2.818780,-5.765644,6.635420,-8.607481,-4.726871,-1.742454,-8.713017,-4.199534,7.867607,2.063996,5.296533,-2.187305,-7.959340,-2.648060,1.101676,2.746593,-3.125713,8.979437,-7.786204,-4.522830,6.930256,6.739157,-9.940919,3.302852,7.888116,9.080434,-7.510252,-2.387251,2.837612,8.753161,-7.177470,-4.000595,-4.653324,1.961412,8.859453,1.915142,-7.912753,4.946360,-7.011479,-1.806775,3.293489,-6.644577,-5.990599,-6.767554,4.349722,-7.168501,-1.880515,-4.442014,-1.018950,-6.030194,3.657913,0.870995,-7.069460,2.591777,2.423281,-7.103602,9.725642,-8.299555,3.965169,-1.823282,8.784193,9.532987,8.969567,-2.612604,3.244628,8.921785,7.081193,-3.887064,6.179603,-6.175949,8.751219,-4.175520,-9.254722,-0.241396,0.808919,-3.591223,9.227506,5.347430,-4.112548,6.676280,-8.703671,-4.371676,6.572739,5.597445,-5.127362,3.585948,5.871689,9.984193,4.199000,1.327993,-1.157926,0.706564,5.910211,-2.266459,-5.096771,4.841595,-6.855678,-7.314389,-3.077770,6.282071,-8.285256,4.013786,-5.275467,5.033146,-2.654164,-7.044452,-0.881273,9.883448,-4.470873,1.626456,8.707068,4.368111,9.745278,6.921641,-1.118465,-0.480019,5.629371,-9.318605,-0.631614,2.861892,-8.151160,8.284164,6.215038,3.427041,-0.083712,8.942937,1.718835,-7.246601,-9.663923,7.442569,-0.308902,6.036338,9.604010,4.190223,3.512153,-9.461763,-2.230198,8.182272,-6.603770,-5.569567,4.089067,-3.298118,-1.846072,4.663366,-3.736074,5.086936,6.547606,6.452282,-3.537964,-6.755871,0.215266,-2.376083,2.012031,-3.779606,-2.594944,-6.641840,-5.444119,-2.339233,3.729902,0.594962,-0.847039,-1.669400,-7.393731,-5.575074,-7.116255,-2.522086,-2.199047,-5.779225,-7.364951,3.277995,3.260869,2.995384,5.206187,-3.196203,6.604613,-1.942622,2.614977,6.039789,-6.119769,-8.012595,0.049388,0.901847,8.104859,2.081207,-9.230833,-5.675257,-4.806533,0.525191,-6.065184,9.938938,4.328845,4.326620,-9.087629,-5.312632,4.964107,-3.411592,-0.554149,-4.904814,3.337609,4.631794,-2.723284,8.149350,0.328454,-5.612819,-0.484654,-6.634141,-1.719192,-3.091999,-8.584066,7.136897,-2.735731,-7.170125,4.755098,-7.850424,-9.973914,-2.180007,-0.923713,-2.492804,-3.926868,3.056805,-0.697255,0.835081,7.382998,6.327355,-5.565950,1.256019,-5.125698,9.992595,-1.296014,-4.731547,-3.126750,-5.097326,-3.272842,-6.201747,9.493137,-3.916884,8.840055,-0.124591,4.241205,9.842349,8.615317,-9.536701,-1.385210,9.882869,-2.031064,-8.579543,9.792577,4.367437,9.332620,-7.097436,4.445779,-8.946467,-3.752387,7.114554,-0.691733,-3.769059,-7.286327,-7.847566,-4.267886,1.632815,2.751861,8.833131,-4.727194,0.670072,6.030065,5.867862,-0.203026,3.668464,-2.836160,-4.835931,8.531221,-7.334240,-3.799182,9.850946,2.373688,4.639086,-1.402550,6.041115,6.879980,-4.720433,-2.836043,0.429298,5.207894,-6.609233,1.232488,-1.075673,2.988525,-9.591975,2.473690,-0.685096,1.800964,-6.376759,1.229328,-4.107014,-0.589936,4.844732,-7.039685,8.332523,2.403987,-3.414658,-4.913116,-4.165046,3.757038,5.168532,-0.703106,7.035292,5.101695,6.412986,6.087332,7.740419,-4.028329,4.673852,5.628051,-2.917017,-8.193156,-7.648015,3.476135,-1.764561,8.129627,-6.214818,3.210209,0.640693,2.565761,5.795912,2.943617,-0.338321,2.255365,-0.133305,-8.013019,-9.227490,3.338579,4.777395,5.985671,-9.756186,-2.810759,-3.017040,-2.359259,-0.639641,-2.531628,6.868620,1.592065,9.242415,7.596246,1.598145,-4.796251,-9.981509,-4.418926,-4.735070,7.787177,0.817162,2.138351,6.132928,4.228468,8.594516,-0.892277,7.215329,-0.667514,-9.505128,3.133036,0.549037,2.151758,5.593363,-4.607521,7.167851,-6.415511,0.671905,-6.532187,-9.434383,-6.419653,0.976379,-5.407001,-5.549625,7.077484,-1.096515,6.465098,-8.007476,3.898839], dtype = "float32")#candidate|3793|(960,)|const|float32
call_3792 = relay.TupleGetItem(func_3238_call(relay.reshape(const_3793.astype('float32'), [10, 8, 12])), 0)
call_3794 = relay.TupleGetItem(func_3241_call(relay.reshape(const_3793.astype('float32'), [10, 8, 12])), 0)
func_1722_call = mod.get_global_var('func_1722')
func_1724_call = mutated_mod.get_global_var('func_1724')
call_3795 = relay.TupleGetItem(func_1722_call(), 0)
call_3796 = relay.TupleGetItem(func_1724_call(), 0)
output = relay.Tuple([call_3788,call_3792,const_3793,call_3795,])
output2 = relay.Tuple([call_3789,call_3794,const_3793,call_3796,])
func_3815 = relay.Function([], output)
mod['func_3815'] = func_3815
mod = relay.transform.InferType()(mod)
output = func_3815()
func_3816 = relay.Function([], output)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3821 = relay.var("var_3821", dtype = "float32", shape = (9, 2, 8))#candidate|3821|(9, 2, 8)|var|float32
uop_3822 = relay.acosh(var_3821.astype('float32')) # shape=(9, 2, 8)
output = uop_3822
output2 = uop_3822
func_3829 = relay.Function([var_3821,], output)
mod['func_3829'] = func_3829
mod = relay.transform.InferType()(mod)
var_3830 = relay.var("var_3830", dtype = "float32", shape = (9, 2, 8))#candidate|3830|(9, 2, 8)|var|float32
output = func_3829(var_3830)
func_3831 = relay.Function([var_3830], output)
mutated_mod['func_3831'] = func_3831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2266_call = mod.get_global_var('func_2266')
func_2268_call = mutated_mod.get_global_var('func_2268')
call_3862 = relay.TupleGetItem(func_2266_call(), 2)
call_3863 = relay.TupleGetItem(func_2268_call(), 2)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_3864 = relay.TupleGetItem(func_2382_call(), 0)
call_3865 = relay.TupleGetItem(func_2383_call(), 0)
output = relay.Tuple([call_3862,call_3864,])
output2 = relay.Tuple([call_3863,call_3865,])
func_3866 = relay.Function([], output)
mod['func_3866'] = func_3866
mod = relay.transform.InferType()(mod)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3866_call = mutated_mod.get_global_var('func_3866')
call_3867 = func_3866_call()
output = call_3867
func_3868 = relay.Function([], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_3921 = relay.TupleGetItem(func_2986_call(), 2)
call_3922 = relay.TupleGetItem(func_2987_call(), 2)
func_3692_call = mod.get_global_var('func_3692')
func_3695_call = mutated_mod.get_global_var('func_3695')
var_3926 = relay.var("var_3926", dtype = "float64", shape = (240,))#candidate|3926|(240,)|var|float64
call_3925 = relay.TupleGetItem(func_3692_call(relay.reshape(var_3926.astype('float64'), [10, 4, 6])), 0)
call_3927 = relay.TupleGetItem(func_3695_call(relay.reshape(var_3926.astype('float64'), [10, 4, 6])), 0)
uop_3928 = relay.cosh(call_3921.astype('float64')) # shape=(312,)
uop_3930 = relay.cosh(call_3922.astype('float64')) # shape=(312,)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_3937 = relay.TupleGetItem(func_2451_call(), 1)
call_3938 = relay.TupleGetItem(func_2452_call(), 1)
output = relay.Tuple([call_3925,var_3926,uop_3928,call_3937,])
output2 = relay.Tuple([call_3927,var_3926,uop_3930,call_3938,])
func_3951 = relay.Function([var_3926,], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
var_3952 = relay.var("var_3952", dtype = "float64", shape = (240,))#candidate|3952|(240,)|var|float64
output = func_3951(var_3952)
func_3953 = relay.Function([var_3952], output)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2717_call = mutated_mod.get_global_var('func_2717')
call_3974 = relay.TupleGetItem(func_2716_call(), 4)
call_3975 = relay.TupleGetItem(func_2717_call(), 4)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_3993 = func_954_call()
call_3994 = func_954_call()
output = relay.Tuple([call_3974,call_3993,])
output2 = relay.Tuple([call_3975,call_3994,])
func_4004 = relay.Function([], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
mutated_mod['func_4004'] = func_4004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mutated_mod.get_global_var('func_4004')
call_4005 = func_4004_call()
output = call_4005
func_4006 = relay.Function([], output)
mutated_mod['func_4006'] = func_4006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4026 = func_1202_call()
call_4027 = func_1202_call()
func_3631_call = mod.get_global_var('func_3631')
func_3633_call = mutated_mod.get_global_var('func_3633')
call_4032 = relay.TupleGetItem(func_3631_call(), 0)
call_4033 = relay.TupleGetItem(func_3633_call(), 0)
output = relay.Tuple([call_4026,call_4032,])
output2 = relay.Tuple([call_4027,call_4033,])
func_4054 = relay.Function([], output)
mod['func_4054'] = func_4054
mod = relay.transform.InferType()(mod)
output = func_4054()
func_4055 = relay.Function([], output)
mutated_mod['func_4055'] = func_4055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_4129 = relay.TupleGetItem(func_3209_call(), 2)
call_4130 = relay.TupleGetItem(func_3211_call(), 2)
output = call_4129
output2 = call_4130
func_4178 = relay.Function([], output)
mod['func_4178'] = func_4178
mod = relay.transform.InferType()(mod)
output = func_4178()
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1722_call = mod.get_global_var('func_1722')
func_1724_call = mutated_mod.get_global_var('func_1724')
call_4229 = relay.TupleGetItem(func_1722_call(), 1)
call_4230 = relay.TupleGetItem(func_1724_call(), 1)
output = relay.Tuple([call_4229,])
output2 = relay.Tuple([call_4230,])
func_4238 = relay.Function([], output)
mod['func_4238'] = func_4238
mod = relay.transform.InferType()(mod)
output = func_4238()
func_4239 = relay.Function([], output)
mutated_mod['func_4239'] = func_4239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mod.get_global_var('func_4054')
func_4055_call = mutated_mod.get_global_var('func_4055')
call_4281 = relay.TupleGetItem(func_4054_call(), 1)
call_4282 = relay.TupleGetItem(func_4055_call(), 1)
func_1702_call = mod.get_global_var('func_1702')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_4285 = relay.const(5, dtype = "uint16")#candidate|4285|()|const|uint16
const_4286 = relay.const([6,2,-5,-5,3,-3,10,7,7,7,-1,6,-10,-5,2,3,-10,-6,-1,3,-8,8,8,-10,-3,4,-7,-7,3,-3,10,2,3,2,10,10,4,6,5,9,-4,-6,-3,10,-5,-10,-1,2,2,-9,-9,-10,9,7,3,-4,8,10,2,-9,2,-9,-2,8,5,6,-6,-9,6,9,-3,-6,2,4,5,9,3,-2,-1,10,-6,3,7,-7,7,2,-8,3,-6,3,10,-9,-2,-9,9,-2,-8,-7,5,7,9,-6,-10,6,-7,7,3,-2,7,9,-3,-5,3,5,5,4,3,-10,8,-7,6,-2,-2,-1,6,-6,-10,9,2,-3,-9,-4,6,3,1,7,-6,4,3,-6,7,9,3,-3,5,-6,3,-5,4,-3,10,10,-10,1,-2,-2,10,-8,-1,-10,7,9,5,-8,-3,-4,10,-8,-10,4,7,1,-9,-10,8,-7,7,-6,9,1,-7,-5,-1,-9,-4,-3,1,8,-2,2,-8,6,4,-8,-8,-7,8,-3,-4,9,5,9,-7,10,5,1,3,-9,-3,-2,-7,-5,-10,3,-1,4,-8,4,1,-5,7,2,-5,-7,-9,9,-7,-3,5,4,10,-3,-2,4,-2,2,6,9,4,-10,-6,-10,-7,1,9,-1,-3,7,-3,1,-9,7,8,7,-4,6,9,-5,9,8,1,-8,4,-2,-6,6,-7,-1,1,-8,4,-6,-9,9,7,7,9,-4,1,-3,8,-10,-2,-1,-8,9,2,7,6,-1,-5,3,-4,-8,1,-9,1,-8,-2,-6,-10,6,-8,-3,-1,9,3,-2,7,9,3,10,9,7,-9,-4,7,8,3,2,-8,-9,-3,9,5,9,-7,-4,-9,8,3,4,1,7,-5,-5,-2,-5,7,6,-1,-10,5,3,-4,-9,-2,-8,5,5,4,5,6,10,2,-7,-10,9,10,9,-4,4,-3,9,8,10,-7,10,2,9,8,7,3,-3,-8,1,-1,8,-7,-2,4,-1,-6,4,-2,2,-9,8,-4,6,-3,4], dtype = "uint16")#candidate|4286|(392,)|const|uint16
call_4284 = relay.TupleGetItem(func_1702_call(relay.reshape(const_4285.astype('uint16'), []), relay.reshape(const_4286.astype('uint16'), [392,]), relay.reshape(call_4281.astype('bool'), [8, 8, 9]), ), 0)
call_4287 = relay.TupleGetItem(func_1706_call(relay.reshape(const_4285.astype('uint16'), []), relay.reshape(const_4286.astype('uint16'), [392,]), relay.reshape(call_4281.astype('bool'), [8, 8, 9]), ), 0)
uop_4303 = relay.sigmoid(call_4284.astype('float32')) # shape=(14, 7, 4)
uop_4305 = relay.sigmoid(call_4287.astype('float32')) # shape=(14, 7, 4)
output = relay.Tuple([call_4281,const_4285,const_4286,uop_4303,])
output2 = relay.Tuple([call_4282,const_4285,const_4286,uop_4305,])
func_4322 = relay.Function([], output)
mod['func_4322'] = func_4322
mod = relay.transform.InferType()(mod)
output = func_4322()
func_4323 = relay.Function([], output)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_4324 = func_3311_call()
call_4325 = func_3311_call()
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_4373 = relay.TupleGetItem(func_1600_call(), 0)
call_4374 = relay.TupleGetItem(func_1601_call(), 0)
bop_4380 = relay.not_equal(call_4373.astype('bool'), relay.reshape(call_4324.astype('bool'), relay.shape_of(call_4373))) # shape=(8, 8, 9)
bop_4383 = relay.not_equal(call_4374.astype('bool'), relay.reshape(call_4325.astype('bool'), relay.shape_of(call_4374))) # shape=(8, 8, 9)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_4384 = relay.TupleGetItem(func_3209_call(), 4)
call_4385 = relay.TupleGetItem(func_3211_call(), 4)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_4393 = func_1513_call()
call_4394 = func_1513_call()
output = relay.Tuple([bop_4380,call_4384,call_4393,])
output2 = relay.Tuple([bop_4383,call_4385,call_4394,])
func_4398 = relay.Function([], output)
mod['func_4398'] = func_4398
mod = relay.transform.InferType()(mod)
output = func_4398()
func_4399 = relay.Function([], output)
mutated_mod['func_4399'] = func_4399
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4400 = relay.var("var_4400", dtype = "float64", shape = (10, 9, 2))#candidate|4400|(10, 9, 2)|var|float64
uop_4401 = relay.exp(var_4400.astype('float64')) # shape=(10, 9, 2)
func_3614_call = mod.get_global_var('func_3614')
func_3616_call = mutated_mod.get_global_var('func_3616')
call_4403 = relay.TupleGetItem(func_3614_call(), 0)
call_4404 = relay.TupleGetItem(func_3616_call(), 0)
output = relay.Tuple([uop_4401,call_4403,])
output2 = relay.Tuple([uop_4401,call_4404,])
func_4407 = relay.Function([var_4400,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
var_4408 = relay.var("var_4408", dtype = "float64", shape = (10, 9, 2))#candidate|4408|(10, 9, 2)|var|float64
output = func_4407(var_4408)
func_4409 = relay.Function([var_4408], output)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2085_call = mod.get_global_var('func_2085')
func_2087_call = mutated_mod.get_global_var('func_2087')
call_4411 = func_2085_call()
call_4412 = func_2085_call()
var_4417 = relay.var("var_4417", dtype = "float64", shape = (8, 8, 9))#candidate|4417|(8, 8, 9)|var|float64
bop_4418 = relay.equal(call_4411.astype('bool'), relay.reshape(var_4417.astype('bool'), relay.shape_of(call_4411))) # shape=(8, 8, 9)
bop_4421 = relay.equal(call_4412.astype('bool'), relay.reshape(var_4417.astype('bool'), relay.shape_of(call_4412))) # shape=(8, 8, 9)
output = bop_4418
output2 = bop_4421
func_4433 = relay.Function([var_4417,], output)
mod['func_4433'] = func_4433
mod = relay.transform.InferType()(mod)
var_4434 = relay.var("var_4434", dtype = "float64", shape = (8, 8, 9))#candidate|4434|(8, 8, 9)|var|float64
output = func_4433(var_4434)
func_4435 = relay.Function([var_4434], output)
mutated_mod['func_4435'] = func_4435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1753_call = mutated_mod.get_global_var('func_1753')
call_4463 = relay.TupleGetItem(func_1751_call(), 0)
call_4464 = relay.TupleGetItem(func_1753_call(), 0)
output = relay.Tuple([call_4463,])
output2 = relay.Tuple([call_4464,])
func_4468 = relay.Function([], output)
mod['func_4468'] = func_4468
mod = relay.transform.InferType()(mod)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mutated_mod.get_global_var('func_4468')
call_4469 = func_4468_call()
output = call_4469
func_4470 = relay.Function([], output)
mutated_mod['func_4470'] = func_4470
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4488 = relay.const([[[-6,-10,2,1,3,3,6,1,-5,-8,-7,-9,-3],[-5,-1,-10,-1,7,8,-1,5,2,7,5,-4,7],[10,-10,8,-10,2,-7,-10,6,6,9,-1,-5,4],[-2,-2,2,6,-7,-7,-5,-6,-2,1,-4,-5,-8],[-6,9,-10,-8,2,4,-4,-2,7,10,2,-10,1]],[[-9,7,-5,8,-2,-4,1,-4,2,8,-9,-3,-8],[2,-9,-4,-9,4,3,-5,2,-7,5,-10,9,3],[2,-8,3,10,5,10,4,-8,-8,4,-2,3,-2],[4,-10,9,5,4,-1,7,10,-8,3,-3,-8,-1],[8,10,6,3,-3,7,2,-5,6,7,-1,-10,2]],[[3,10,2,7,-10,-8,-8,5,-10,-7,-10,-6,8],[-3,-2,-4,6,-1,2,10,3,-4,10,8,-6,4],[-7,4,-2,6,3,10,-3,-8,1,8,-8,6,-2],[2,9,-6,8,4,9,3,9,3,-6,-9,-1,-10],[-9,-10,1,1,-8,4,8,-8,-9,1,6,-2,-7]],[[9,9,-8,8,-3,10,6,-2,-3,-10,7,4,9],[-4,-4,5,-8,7,-7,3,-1,-4,10,9,6,6],[1,5,-4,5,9,-3,6,-4,4,-3,-10,-4,-2],[-6,4,-6,-4,9,10,-5,-3,6,10,-2,-7,9],[-3,10,8,6,7,-9,2,6,9,1,-2,3,6]],[[4,2,3,-10,3,-8,-10,-2,6,6,-4,-5,-10],[1,-7,-1,-2,-8,-10,-1,-4,3,-4,4,9,-3],[-8,-7,3,2,-8,-3,-7,7,-7,4,9,-7,2],[-4,3,3,6,-10,1,1,4,-10,-4,2,-7,-5],[4,1,5,-7,3,-2,2,-7,1,-2,1,7,1]],[[7,6,6,3,-5,3,9,-4,2,-10,-10,-7,7],[4,-3,7,-7,-9,-2,8,-1,1,-6,10,10,-9],[10,-3,-3,-4,4,-4,4,-3,8,-6,-4,-10,2],[8,-7,-2,-2,7,-4,4,2,-10,-3,-5,-4,-1],[-7,-9,-8,-3,-4,5,2,3,-3,-3,-5,3,5]],[[1,8,10,-1,-6,-3,-4,-8,3,1,5,1,10],[2,-5,1,10,6,-5,-8,5,-4,10,-10,-1,9],[6,5,-7,9,-7,10,10,-7,2,-7,-7,-8,10],[-10,-10,8,-10,-1,-1,-2,3,-6,-5,-7,8,-6],[5,-2,5,-8,2,10,-1,10,3,2,2,-10,-1]],[[-8,3,4,1,6,9,-10,2,-4,2,6,-7,-3],[6,-8,2,-6,1,6,-7,7,-6,8,6,10,-7],[3,-5,-3,-10,8,8,-1,-5,10,-7,1,-3,-1],[10,-6,10,-10,-6,5,-3,-1,6,-9,-7,4,-7],[7,-3,-8,-2,3,4,6,-6,9,4,2,10,-3]],[[-4,10,4,-1,8,4,-4,1,-10,-1,5,-8,7],[-9,3,5,2,9,5,-5,-9,-2,-5,2,-7,2],[2,1,1,-8,5,-2,-9,3,10,6,6,-2,-8],[-6,9,8,-9,-1,-10,-5,-2,-2,-9,-6,2,8],[-1,-8,-7,5,4,7,2,-4,-7,-9,-9,10,7]],[[-4,-10,-6,-3,10,-9,-5,-6,-8,2,-3,2,-8],[3,8,-7,-1,-5,8,1,7,2,-5,-6,-9,7],[-7,-3,10,6,8,-10,-10,5,-4,-3,8,-5,-4],[-8,-1,-4,-5,-5,3,-5,-5,-9,2,3,8,-7],[1,-1,-4,9,-3,-4,-10,-5,4,-3,5,-6,-5]],[[10,-2,2,-8,-2,2,-10,4,5,-4,-8,-8,-9],[-4,9,1,5,-6,-9,-7,-1,-2,-6,-4,4,-9],[8,5,10,10,1,9,-5,10,-3,4,-8,2,5],[-4,4,1,-1,-9,8,-2,-1,4,10,-3,-4,7],[-5,7,5,-9,3,2,8,6,-3,6,1,-1,7]],[[4,-10,5,-9,7,4,-4,-8,2,10,-6,8,6],[-6,-10,2,6,6,7,-6,9,10,6,4,8,7],[8,5,-7,-2,4,3,-5,-3,-2,7,-8,9,-7],[-5,-8,8,-8,-9,-4,1,4,-9,-3,-3,1,10],[-7,5,-1,-10,3,-4,-10,5,5,-1,-2,-10,-3]]], dtype = "int32")#candidate|4488|(12, 5, 13)|const|int32
const_4489 = relay.const([[[3,9,-1,2,1,-6,-5,-4,3,-2,-4,10,9],[-6,-3,-3,2,-2,2,-10,5,2,2,-8,5,-3],[7,5,-3,-9,1,-7,-5,-9,-3,8,6,2,7],[3,10,-3,9,-2,-10,1,4,-8,8,-6,6,-1],[-5,10,-4,3,9,8,-3,2,-3,7,-2,-4,10]],[[-1,5,1,-6,-1,-4,-4,-10,2,-5,9,9,3],[10,-2,-9,-9,7,-4,10,5,2,8,-4,-9,7],[4,3,9,-7,4,-4,-10,-10,5,-4,4,10,9],[-4,-10,6,9,3,1,-1,-8,5,-7,4,4,2],[3,-10,5,-3,-7,3,8,-5,8,3,2,-3,2]],[[-3,-5,-4,7,5,10,-9,6,-2,-9,-3,-5,-10],[4,-10,-3,5,-7,8,-5,-8,-10,-1,-10,-1,3],[6,2,-7,-1,5,9,4,10,-10,5,-1,8,3],[6,6,10,7,10,-8,-2,-7,-10,-5,-10,-5,-4],[2,-10,-9,-9,-6,-9,-10,-1,-9,1,2,-6,-4]],[[-3,-3,-7,8,-10,-4,1,9,-4,-10,9,-6,7],[2,6,-8,-4,3,-6,9,-7,6,-2,10,3,-1],[-1,-3,-6,10,10,10,-10,7,5,3,-6,9,-1],[-2,-1,7,1,-10,4,10,1,9,-2,-9,-10,-8],[-1,-2,10,-9,8,-4,-7,-7,-6,6,-4,9,1]],[[2,2,8,9,-8,-8,9,-6,-7,7,5,-1,-1],[7,-1,-1,10,7,7,-9,-4,-3,-5,3,-1,5],[6,-8,-1,8,-3,-6,-2,-10,8,5,8,-2,8],[-6,10,6,7,2,9,9,10,-5,-10,-1,-6,-10],[-8,-1,2,7,7,7,-9,2,-10,10,-6,-2,9]],[[7,-2,4,-1,-6,10,-4,-9,3,-9,-4,5,9],[-8,-10,-6,4,3,-10,3,-7,9,4,-10,6,1],[10,-5,-9,-10,9,7,-6,3,5,1,-3,-3,10],[3,5,-5,1,-4,2,1,-1,-7,9,2,8,-7],[-6,7,6,-10,-3,5,-3,-4,2,6,-4,-2,-3]],[[-8,-8,1,5,-7,-7,3,-2,-5,7,9,7,-5],[-10,-3,-9,-5,5,-10,5,3,-4,3,-5,10,8],[-1,7,-5,3,2,-8,-9,-5,5,-6,-4,-5,6],[-5,-3,-6,-7,2,-1,-9,-7,10,-10,-6,-6,3],[3,-5,9,-5,-3,7,-3,-4,-4,-7,-2,6,3]],[[6,4,-7,7,-6,-4,-9,2,-8,4,1,-7,-8],[5,-10,6,8,-7,-9,-7,-3,7,-7,-9,-6,-1],[3,-5,-6,5,-1,-3,-2,-1,7,5,-8,-1,9],[-4,-4,-2,-2,8,-9,5,5,-8,10,-6,-9,6],[-3,-6,8,-9,-2,9,-10,-1,1,9,-6,3,-8]],[[3,-9,-5,-8,7,1,-6,7,-7,4,5,6,1],[3,-7,2,8,-1,-6,-6,-4,-6,-9,8,7,-6],[5,-8,-5,10,-4,6,-4,7,-5,-10,9,1,-9],[8,1,10,-7,4,-1,-5,-5,-7,7,10,6,-3],[7,6,3,2,7,9,2,7,-6,-6,-1,-3,-6]],[[10,-2,-10,-7,5,-10,3,10,-3,-5,-6,3,3],[5,-2,-10,7,-9,3,5,5,6,7,10,-10,10],[-8,-8,-7,-9,-7,5,-3,3,10,3,-3,5,-8],[-10,2,6,5,2,-10,4,10,-1,4,8,-2,-9],[-3,-7,-1,-9,8,-2,-1,8,-5,-9,2,9,-4]],[[9,-9,2,-3,1,5,7,-9,-10,-3,-2,-1,-5],[-2,10,-1,-3,7,10,-4,6,-3,7,-3,-2,5],[7,8,-2,6,8,1,6,1,-10,9,6,-10,-3],[10,-1,1,3,-2,10,7,5,-3,7,-9,9,-2],[9,8,7,9,-4,-6,10,2,-7,-9,-6,-3,6]],[[-10,1,10,6,-2,-7,-10,1,-8,5,-10,6,5],[4,4,2,-5,-6,3,-4,-4,5,-1,-10,-5,6],[7,7,-5,10,2,-1,-4,-3,-8,1,-7,-4,1],[7,10,5,7,-9,-4,-10,-10,-3,-8,1,-3,-8],[7,1,5,-5,-1,-2,4,-1,-10,-5,3,-7,4]]], dtype = "int32")#candidate|4489|(12, 5, 13)|const|int32
bop_4490 = relay.maximum(const_4488.astype('int32'), relay.reshape(const_4489.astype('int32'), relay.shape_of(const_4488))) # shape=(12, 5, 13)
func_3951_call = mod.get_global_var('func_3951')
func_3953_call = mutated_mod.get_global_var('func_3953')
const_4496 = relay.const([[6.467027,-7.875373,-9.862088,-3.156218,0.246722,-6.962199,4.423025,2.462360,9.742341,3.522810,5.403353,-7.985007,-6.251000,6.679480,-8.018830,5.239209,-7.350385,7.901446,4.133114,5.760652,-7.610169,-2.169861,-7.449000,-3.002067,-2.224319,-3.266783,-7.059078,2.108495,-2.558154,9.644416],[-5.875111,-5.296541,-6.158849,9.687528,-2.977740,-5.645519,8.151903,-4.592112,-6.581907,6.810958,7.273354,-7.966333,-8.653435,-4.552551,-7.143751,-5.591709,-0.378398,7.406005,-3.289453,-2.310099,8.668643,-0.385982,-6.730176,-4.288853,3.037822,2.087842,-6.906423,-1.829131,-7.538838,5.711892],[-8.064681,7.473918,5.802138,8.158673,9.961173,-6.080952,-5.217957,9.721431,2.067581,2.652026,1.484857,6.931336,6.558724,3.895582,-4.185769,-6.754860,-9.909381,-9.921995,1.262042,9.607437,4.370391,0.607400,-8.211089,-7.150104,7.745396,-5.070289,2.691746,-9.287436,4.839930,-5.796591],[-7.344121,-9.944815,-8.090687,-6.758678,-8.259535,-6.958780,4.545855,7.562373,2.338782,-9.016338,-8.975463,6.364575,-0.424059,-4.079873,9.957222,-9.325681,5.728305,-2.545346,0.221582,3.165363,8.066602,4.426536,-7.539552,-2.246341,5.362657,-3.493949,-3.585997,3.695194,0.222647,-2.529305],[-4.650144,-7.492365,-4.234925,1.692158,-5.792903,8.750409,-5.261226,-8.848725,-8.697444,-9.962566,1.701667,4.158477,2.546004,6.229569,-0.454708,5.388264,-4.480070,-9.956578,1.761336,-1.446873,1.696429,2.508500,-7.207609,-9.420040,-8.689051,-3.156774,2.576364,3.818574,-9.112239,4.583103],[3.810530,3.291252,-9.016988,-6.730273,2.654337,9.961578,-3.187610,4.701531,5.007015,7.554262,-1.039860,7.052570,1.661097,-1.567656,5.500494,-1.329335,2.339168,-2.255991,-8.513309,9.962018,4.312211,-2.138993,2.662383,7.327680,7.631539,-0.308145,-7.015409,2.939813,6.119343,-2.797542],[5.791690,1.065549,-2.679702,-8.140306,-9.846584,9.286578,5.630366,1.661521,2.072583,2.469994,-2.314150,-7.829157,4.833622,-1.856571,-7.929863,-8.681844,-1.609920,-3.476939,2.884266,2.602424,-7.496761,-8.175378,-5.111447,-9.880118,-0.104830,-4.225203,9.161600,0.520917,-4.011043,9.251632],[-1.179505,-1.075943,5.697393,-3.275171,9.083242,-8.518837,-6.840890,2.544881,5.708431,-7.152081,2.229342,-3.566648,3.613321,-7.597572,9.975432,-6.260674,9.192477,-9.679123,1.456989,0.582959,-8.473951,-8.917853,-7.127610,5.485055,1.999438,2.607888,-5.511160,-7.694418,-7.238138,5.527768]], dtype = "float64")#candidate|4496|(8, 30)|const|float64
call_4495 = relay.TupleGetItem(func_3951_call(relay.reshape(const_4496.astype('float64'), [240,])), 3)
call_4497 = relay.TupleGetItem(func_3953_call(relay.reshape(const_4496.astype('float64'), [240,])), 3)
uop_4509 = relay.sqrt(bop_4490.astype('float32')) # shape=(12, 5, 13)
uop_4515 = relay.acosh(bop_4490.astype('float64')) # shape=(12, 5, 13)
output = relay.Tuple([call_4495,const_4496,uop_4509,uop_4515,])
output2 = relay.Tuple([call_4497,const_4496,uop_4509,uop_4515,])
func_4538 = relay.Function([], output)
mod['func_4538'] = func_4538
mod = relay.transform.InferType()(mod)
output = func_4538()
func_4539 = relay.Function([], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_4565 = func_1513_call()
call_4566 = func_1513_call()
output = call_4565
output2 = call_4566
func_4570 = relay.Function([], output)
mod['func_4570'] = func_4570
mod = relay.transform.InferType()(mod)
output = func_4570()
func_4571 = relay.Function([], output)
mutated_mod['func_4571'] = func_4571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4587 = func_1202_call()
call_4588 = func_1202_call()
output = relay.Tuple([call_4587,])
output2 = relay.Tuple([call_4588,])
func_4592 = relay.Function([], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
output = func_4592()
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3815_call = mod.get_global_var('func_3815')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4608 = relay.TupleGetItem(func_3815_call(), 3)
call_4609 = relay.TupleGetItem(func_3816_call(), 3)
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_4613 = relay.const([[0.386219],[-6.180211],[4.002238],[6.287548],[9.579180],[-5.860163],[6.105089],[0.161138],[-4.471279],[6.146946],[-8.455191],[-1.041526],[-9.310872],[0.231543],[-0.135886],[-8.530998],[-2.551067],[1.710457],[5.557499],[-3.035641],[-8.422494],[-3.919728],[0.415132],[-2.928350],[6.026005],[-3.893649],[-0.366571],[-6.468876],[-9.198645],[3.258501],[2.215047],[4.687173],[-7.533664],[1.032026],[5.071335],[-1.202933],[3.957903],[9.183466],[-2.751676],[-7.579922],[1.585127],[-8.990048],[0.294983],[-2.546622],[-0.948857],[-6.157379],[5.588996],[9.772221],[1.839190],[-6.569850],[-6.336418],[-3.993888],[8.020643],[-3.654275],[-9.321743],[-9.371755],[5.661798],[9.094129],[1.347775],[9.114213],[9.253578],[9.653522],[6.675122],[-2.930159],[9.043521],[5.013858],[-7.648862],[2.756946],[-3.518955],[2.153072],[-0.489231],[-1.437970],[-7.459388],[-1.378613],[-5.130081],[6.812252],[-1.229576],[-9.625004],[2.403389],[-3.276702],[6.269652],[4.055708],[3.892390],[-5.054919],[-8.837306],[-0.534765],[2.698411],[3.292681],[-2.694725],[5.183120],[3.491478],[-6.691076],[5.913632],[2.989287],[-9.522635],[2.816116],[3.288576],[2.836694],[-1.777373],[-4.037689],[5.426510],[0.353357],[-9.982689],[5.280046],[1.651492],[3.239372],[6.609217],[-0.320637],[-7.055448],[-0.524256],[5.237003],[3.182811],[-5.334419],[7.103959],[-2.321480],[6.592805],[1.068199],[-2.016432],[9.689650],[-2.340061],[-5.048207],[6.138787],[-1.108100],[-3.872531],[5.006813],[0.425574],[-8.449757],[-3.379762],[6.408513],[8.134090],[5.896598],[1.526257],[-9.679488],[-5.140478],[6.779101],[-1.510588],[-6.441519],[-6.238628],[4.373577],[-0.565464],[8.567854],[1.630897],[-2.945129],[-5.252077],[2.253232],[5.033581],[-4.130526],[3.213129],[-6.315522],[5.752980],[7.026339],[0.158817],[3.009834],[-5.156521],[-2.223522],[-2.210316],[-3.387041],[2.389488],[7.613134],[-3.001846],[-6.807825],[7.131590],[-3.336778],[5.400153],[2.297533],[3.804702],[-6.608517],[-7.685901],[-7.106791],[-9.350302],[2.623880],[-1.931172],[-6.942821],[-6.991471],[6.374761],[-3.932729],[-6.805011],[-0.402404],[6.255328],[2.893980]], dtype = "float64")#candidate|4613|(180, 1)|const|float64
call_4612 = relay.TupleGetItem(func_4407_call(relay.reshape(const_4613.astype('float64'), [10, 9, 2])), 0)
call_4614 = relay.TupleGetItem(func_4409_call(relay.reshape(const_4613.astype('float64'), [10, 9, 2])), 0)
output = relay.Tuple([call_4608,call_4612,const_4613,])
output2 = relay.Tuple([call_4609,call_4614,const_4613,])
func_4625 = relay.Function([], output)
mod['func_4625'] = func_4625
mod = relay.transform.InferType()(mod)
mutated_mod['func_4625'] = func_4625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4625_call = mutated_mod.get_global_var('func_4625')
call_4626 = func_4625_call()
output = call_4626
func_4627 = relay.Function([], output)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_4632 = func_954_call()
call_4633 = func_954_call()
var_4638 = relay.var("var_4638", dtype = "float64", shape = (8, 8, 9))#candidate|4638|(8, 8, 9)|var|float64
bop_4639 = relay.bitwise_xor(call_4632.astype('uint16'), relay.reshape(var_4638.astype('uint16'), relay.shape_of(call_4632))) # shape=(8, 8, 9)
bop_4642 = relay.bitwise_xor(call_4633.astype('uint16'), relay.reshape(var_4638.astype('uint16'), relay.shape_of(call_4633))) # shape=(8, 8, 9)
bop_4643 = relay.greater_equal(bop_4639.astype('bool'), relay.reshape(var_4638.astype('bool'), relay.shape_of(bop_4639))) # shape=(8, 8, 9)
bop_4646 = relay.greater_equal(bop_4642.astype('bool'), relay.reshape(var_4638.astype('bool'), relay.shape_of(bop_4642))) # shape=(8, 8, 9)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4647 = func_1202_call()
call_4648 = func_1202_call()
output = relay.Tuple([bop_4643,call_4647,])
output2 = relay.Tuple([bop_4646,call_4648,])
func_4649 = relay.Function([var_4638,], output)
mod['func_4649'] = func_4649
mod = relay.transform.InferType()(mod)
var_4650 = relay.var("var_4650", dtype = "float64", shape = (8, 8, 9))#candidate|4650|(8, 8, 9)|var|float64
output = func_4649(var_4650)
func_4651 = relay.Function([var_4650], output)
mutated_mod['func_4651'] = func_4651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
call_4728 = func_954_call()
call_4729 = func_954_call()
output = relay.Tuple([call_4728,])
output2 = relay.Tuple([call_4729,])
func_4765 = relay.Function([], output)
mod['func_4765'] = func_4765
mod = relay.transform.InferType()(mod)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mutated_mod.get_global_var('func_4765')
call_4766 = func_4765_call()
output = call_4766
func_4767 = relay.Function([], output)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3815_call = mod.get_global_var('func_3815')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4776 = relay.TupleGetItem(func_3815_call(), 2)
call_4777 = relay.TupleGetItem(func_3816_call(), 2)
output = call_4776
output2 = call_4777
func_4787 = relay.Function([], output)
mod['func_4787'] = func_4787
mod = relay.transform.InferType()(mod)
output = func_4787()
func_4788 = relay.Function([], output)
mutated_mod['func_4788'] = func_4788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_4813 = relay.TupleGetItem(func_1600_call(), 0)
call_4814 = relay.TupleGetItem(func_1601_call(), 0)
func_285_call = mod.get_global_var('func_285')
func_290_call = mutated_mod.get_global_var('func_290')
var_4823 = relay.var("var_4823", dtype = "float64", shape = (90,))#candidate|4823|(90,)|var|float64
const_4824 = relay.const(-5, dtype = "uint16")#candidate|4824|()|const|uint16
const_4825 = relay.const([-6,-3,-7,5,-1,6,-4,-6,-10,-3,8,4,9,4,-10,-1,-5,1,1,3,10,5,2,5,8,6,1,1,-7,-4,-7,5,1,6,-3,-5,-8,7,2,3,-3,5,10,-4,3,6,-6,4,9,1,-8,-7,7,-8,9,8,-10,-5,-10,-7,-8,-7,-6,-2,-10,6,-1,6,-8,-8,4,8,10,-4,2,-5,4,7,-10,4,-1,-10,5,10,-10,2,-4,-8,4,5,3,8,-10,9,3,-4,6,-9,-1,8,-7,7,-1,-8,-9,2,-2,3,-7,-4,8,7,1,6,-4,5,-3,3,-9,8,5,-4,-10,9,-9,-8,-2,-10,-8,6,1,3,6,-9,-8,-5,-6,-10,-5,-4,3,-1,4,9,-2,-5,-8,8,-6,-1,3,-9,-4,-5,-7,3,-8,6,-8,7,-4,2,1,-8,-6,-3,-4,7,-9,-6,9,10,-4,1,-5,-1,-1,1,-4,10,5,-8,-6,-8,7,-5,3,-6,-2,-8,-7,6,-3,-1,3,4,5,-8,9,7,-9,-4,6,7,9,6,6,6,-6,-4,-10,-8,2,-5,-1,-7,-5,-1,3,10,5,9,-8,1,-4,5,-3,9,9,6,-8,-10,-6,-3,-3,2,-9,-9,8,2,-5,5,10,-5,8,8,-6,9,1,2,5,2,-5,-2,1,4,-1,-3,-3,-9,-10,8,-5,-2,9,10,10,-7,-5,9,-2,-3,1,3,6,6,-9,6,9,10,-1,-1,6,-7,8,-10,-8,5,-1,-3,10,-5,-4,-3,-8,-1,5,2,-4,4,-5,-4,7,2,8,5,5,-7,2,1,2,2,8,1,-3,3,7,-10,-7,-2,-6,-4,-10,9,10,-3,4,2,-1,3,7,-3,3,9,-4,6,-10,4,-1,2,-4,8,2,1,4,-9,-10,-5,6,3,-7,-1,-9,-6,9,-4,5,-3,3,-2,8,5,-6,10,-6,-1,4,-9,8,-5,-5,9,2,-9,-6,9,-4,9,-7,-1,4,6,-5,-10,2,9,-4,-7,10,9,-7,-7], dtype = "uint16")#candidate|4825|(392,)|const|uint16
call_4822 = relay.TupleGetItem(func_285_call(relay.reshape(var_4823.astype('float64'), [10, 1, 9]), relay.reshape(const_4824.astype('uint16'), []), relay.reshape(const_4825.astype('uint16'), [392,]), ), 1)
call_4826 = relay.TupleGetItem(func_290_call(relay.reshape(var_4823.astype('float64'), [10, 1, 9]), relay.reshape(const_4824.astype('uint16'), []), relay.reshape(const_4825.astype('uint16'), [392,]), ), 1)
func_4538_call = mod.get_global_var('func_4538')
func_4539_call = mutated_mod.get_global_var('func_4539')
call_4831 = relay.TupleGetItem(func_4538_call(), 2)
call_4832 = relay.TupleGetItem(func_4539_call(), 2)
output = relay.Tuple([call_4813,call_4822,var_4823,const_4824,const_4825,call_4831,])
output2 = relay.Tuple([call_4814,call_4826,var_4823,const_4824,const_4825,call_4832,])
func_4843 = relay.Function([var_4823,], output)
mod['func_4843'] = func_4843
mod = relay.transform.InferType()(mod)
mutated_mod['func_4843'] = func_4843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4844 = relay.var("var_4844", dtype = "float64", shape = (90,))#candidate|4844|(90,)|var|float64
func_4843_call = mutated_mod.get_global_var('func_4843')
call_4845 = func_4843_call(var_4844)
output = call_4845
func_4846 = relay.Function([var_4844], output)
mutated_mod['func_4846'] = func_4846
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4848 = relay.const([[2,8],[-4,-5],[-4,-10],[-4,-9],[2,-9],[-8,-8],[10,9],[-7,-7],[-8,-1],[6,7],[-2,-4],[5,-7],[7,-2]], dtype = "int16")#candidate|4848|(13, 2)|const|int16
var_4849 = relay.var("var_4849", dtype = "int16", shape = (13, 2))#candidate|4849|(13, 2)|var|int16
bop_4850 = relay.bitwise_and(const_4848.astype('int16'), relay.reshape(var_4849.astype('int16'), relay.shape_of(const_4848))) # shape=(13, 2)
func_4765_call = mod.get_global_var('func_4765')
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4874 = relay.TupleGetItem(func_4765_call(), 0)
call_4875 = relay.TupleGetItem(func_4767_call(), 0)
output = relay.Tuple([bop_4850,call_4874,])
output2 = relay.Tuple([bop_4850,call_4875,])
func_4888 = relay.Function([var_4849,], output)
mod['func_4888'] = func_4888
mod = relay.transform.InferType()(mod)
mutated_mod['func_4888'] = func_4888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4889 = relay.var("var_4889", dtype = "int16", shape = (13, 2))#candidate|4889|(13, 2)|var|int16
func_4888_call = mutated_mod.get_global_var('func_4888')
call_4890 = func_4888_call(var_4889)
output = call_4890
func_4891 = relay.Function([var_4889], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4399_call = mutated_mod.get_global_var('func_4399')
call_4914 = relay.TupleGetItem(func_4398_call(), 2)
call_4915 = relay.TupleGetItem(func_4399_call(), 2)
func_3163_call = mod.get_global_var('func_3163')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_4929 = func_3163_call()
call_4930 = func_3163_call()
func_2742_call = mod.get_global_var('func_2742')
func_2744_call = mutated_mod.get_global_var('func_2744')
var_4938 = relay.var("var_4938", dtype = "float32", shape = (352,))#candidate|4938|(352,)|var|float32
call_4937 = relay.TupleGetItem(func_2742_call(relay.reshape(var_4938.astype('float32'), [11, 8, 4])), 0)
call_4939 = relay.TupleGetItem(func_2744_call(relay.reshape(var_4938.astype('float32'), [11, 8, 4])), 0)
func_2927_call = mod.get_global_var('func_2927')
func_2928_call = mutated_mod.get_global_var('func_2928')
call_4945 = func_2927_call()
call_4946 = func_2927_call()
func_2085_call = mod.get_global_var('func_2085')
func_2087_call = mutated_mod.get_global_var('func_2087')
call_4950 = func_2085_call()
call_4951 = func_2085_call()
uop_4955 = relay.log2(var_4938.astype('float32')) # shape=(352,)
bop_4969 = relay.bitwise_or(uop_4955.astype('int8'), relay.reshape(var_4938.astype('int8'), relay.shape_of(uop_4955))) # shape=(352,)
output = relay.Tuple([call_4914,call_4929,call_4937,call_4945,call_4950,bop_4969,])
output2 = relay.Tuple([call_4915,call_4930,call_4939,call_4946,call_4951,bop_4969,])
func_4979 = relay.Function([var_4938,], output)
mod['func_4979'] = func_4979
mod = relay.transform.InferType()(mod)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4980 = relay.var("var_4980", dtype = "float32", shape = (352,))#candidate|4980|(352,)|var|float32
func_4979_call = mutated_mod.get_global_var('func_4979')
call_4981 = func_4979_call(var_4980)
output = call_4981
func_4982 = relay.Function([var_4980], output)
mutated_mod['func_4982'] = func_4982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mod.get_global_var('func_4765')
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4992 = relay.TupleGetItem(func_4765_call(), 0)
call_4993 = relay.TupleGetItem(func_4767_call(), 0)
output = relay.Tuple([call_4992,])
output2 = relay.Tuple([call_4993,])
func_4998 = relay.Function([], output)
mod['func_4998'] = func_4998
mod = relay.transform.InferType()(mod)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4998_call = mutated_mod.get_global_var('func_4998')
call_4999 = func_4998_call()
output = call_4999
func_5000 = relay.Function([], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_5001 = func_3311_call()
call_5002 = func_3311_call()
var_5004 = relay.var("var_5004", dtype = "float64", shape = (8, 8, 9))#candidate|5004|(8, 8, 9)|var|float64
bop_5005 = relay.floor_divide(call_5001.astype('float64'), relay.reshape(var_5004.astype('float64'), relay.shape_of(call_5001))) # shape=(8, 8, 9)
bop_5008 = relay.floor_divide(call_5002.astype('float64'), relay.reshape(var_5004.astype('float64'), relay.shape_of(call_5002))) # shape=(8, 8, 9)
output = relay.Tuple([bop_5005,])
output2 = relay.Tuple([bop_5008,])
func_5011 = relay.Function([var_5004,], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
var_5012 = relay.var("var_5012", dtype = "float64", shape = (8, 8, 9))#candidate|5012|(8, 8, 9)|var|float64
output = func_5011(var_5012)
func_5013 = relay.Function([var_5012], output)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_5045 = relay.TupleGetItem(func_2382_call(), 0)
call_5046 = relay.TupleGetItem(func_2383_call(), 0)
output = call_5045
output2 = call_5046
func_5054 = relay.Function([], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
output = func_5054()
func_5055 = relay.Function([], output)
mutated_mod['func_5055'] = func_5055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mod.get_global_var('func_4787')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_5056 = func_4787_call()
call_5057 = func_4787_call()
output = call_5056
output2 = call_5057
func_5059 = relay.Function([], output)
mod['func_5059'] = func_5059
mod = relay.transform.InferType()(mod)
mutated_mod['func_5059'] = func_5059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mutated_mod.get_global_var('func_5059')
call_5060 = func_5059_call()
output = call_5060
func_5061 = relay.Function([], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_5074 = func_1202_call()
call_5075 = func_1202_call()
output = relay.Tuple([call_5074,])
output2 = relay.Tuple([call_5075,])
func_5084 = relay.Function([], output)
mod['func_5084'] = func_5084
mod = relay.transform.InferType()(mod)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5085 = func_5084_call()
output = call_5085
func_5086 = relay.Function([], output)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5090 = relay.var("var_5090", dtype = "float32", shape = (16, 5, 5))#candidate|5090|(16, 5, 5)|var|float32
var_5091 = relay.var("var_5091", dtype = "float32", shape = (16, 5, 5))#candidate|5091|(16, 5, 5)|var|float32
bop_5092 = relay.floor_mod(var_5090.astype('float32'), relay.reshape(var_5091.astype('float32'), relay.shape_of(var_5090))) # shape=(16, 5, 5)
uop_5097 = relay.acosh(bop_5092.astype('float64')) # shape=(16, 5, 5)
uop_5111 = relay.cos(var_5091.astype('float64')) # shape=(16, 5, 5)
func_476_call = mod.get_global_var('func_476')
func_478_call = mutated_mod.get_global_var('func_478')
var_5119 = relay.var("var_5119", dtype = "int8", shape = (960,))#candidate|5119|(960,)|var|int8
call_5118 = relay.TupleGetItem(func_476_call(relay.reshape(var_5119.astype('int8'), [16, 10, 6])), 2)
call_5120 = relay.TupleGetItem(func_478_call(relay.reshape(var_5119.astype('int8'), [16, 10, 6])), 2)
bop_5128 = relay.add(uop_5111.astype('uint32'), relay.reshape(uop_5097.astype('uint32'), relay.shape_of(uop_5111))) # shape=(16, 5, 5)
output = relay.Tuple([call_5118,var_5119,bop_5128,])
output2 = relay.Tuple([call_5120,var_5119,bop_5128,])
func_5146 = relay.Function([var_5090,var_5091,var_5119,], output)
mod['func_5146'] = func_5146
mod = relay.transform.InferType()(mod)
mutated_mod['func_5146'] = func_5146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5146_call = mutated_mod.get_global_var('func_5146')
var_5148 = relay.var("var_5148", dtype = "float32", shape = (16, 5, 5))#candidate|5148|(16, 5, 5)|var|float32
var_5149 = relay.var("var_5149", dtype = "float32", shape = (16, 5, 5))#candidate|5149|(16, 5, 5)|var|float32
var_5150 = relay.var("var_5150", dtype = "int8", shape = (960,))#candidate|5150|(960,)|var|int8
call_5147 = func_5146_call(var_5148,var_5149,var_5150,)
output = call_5147
func_5151 = relay.Function([var_5148,var_5149,var_5150,], output)
mutated_mod['func_5151'] = func_5151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5194 = relay.var("var_5194", dtype = "float64", shape = (5, 7, 9))#candidate|5194|(5, 7, 9)|var|float64
uop_5195 = relay.asinh(var_5194.astype('float64')) # shape=(5, 7, 9)
output = relay.Tuple([uop_5195,])
output2 = relay.Tuple([uop_5195,])
func_5207 = relay.Function([var_5194,], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
mutated_mod['func_5207'] = func_5207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5208 = relay.var("var_5208", dtype = "float64", shape = (5, 7, 9))#candidate|5208|(5, 7, 9)|var|float64
func_5207_call = mutated_mod.get_global_var('func_5207')
call_5209 = func_5207_call(var_5208)
output = call_5209
func_5210 = relay.Function([var_5208], output)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5254 = relay.const([[[-1,-7,-3],[-6,2,8],[6,-5,1],[1,8,-5],[1,5,9],[6,-10,-2],[8,10,1],[5,7,6],[-7,10,-10],[4,-10,-9],[-8,-6,8],[1,-5,-5],[2,-4,9],[7,-9,-1],[-3,-2,5],[2,6,2]],[[-8,-9,8],[1,-3,9],[5,8,-2],[-2,-4,-7],[-6,4,7],[-8,-1,-7],[-1,6,-3],[6,10,1],[2,8,8],[7,-4,-7],[-7,7,-10],[-6,5,4],[9,-6,-3],[5,-10,1],[8,-3,-1],[5,-5,-5]],[[-9,7,4],[-9,-3,-4],[-2,2,-1],[2,-3,4],[-5,-1,5],[7,-8,5],[-8,-5,-1],[-7,-7,5],[-4,-9,-1],[-2,-6,-9],[10,5,10],[1,4,7],[6,-8,-3],[-3,9,-5],[-9,-9,9],[-5,3,8]],[[-10,9,5],[-1,2,-4],[-2,3,10],[-4,-4,-3],[-10,-5,-10],[6,1,6],[-5,-9,-6],[-5,1,-4],[7,-2,-10],[5,5,4],[-2,5,-10],[-3,8,4],[-4,-6,7],[8,7,-5],[6,8,-10],[9,7,-7]],[[-5,-3,-2],[-10,-6,-3],[-6,6,-2],[-10,-1,-2],[-5,4,4],[-10,-4,3],[10,4,10],[8,10,-9],[5,3,-2],[-8,7,-8],[3,-10,-10],[5,-8,5],[-4,-6,-9],[9,8,1],[-8,-6,8],[5,-3,2]]], dtype = "int64")#candidate|5254|(5, 16, 3)|const|int64
var_5255 = relay.var("var_5255", dtype = "int64", shape = (5, 16, 3))#candidate|5255|(5, 16, 3)|var|int64
bop_5256 = relay.less(const_5254.astype('bool'), relay.reshape(var_5255.astype('bool'), relay.shape_of(const_5254))) # shape=(5, 16, 3)
func_449_call = mod.get_global_var('func_449')
func_455_call = mutated_mod.get_global_var('func_455')
const_5267 = relay.const([-8.661346,-4.177857,3.131657,7.679240,-8.312162,-4.243745,7.224952,-4.415259,8.413284,-7.315103,2.831515,-7.345129,-8.670353,-8.066455,-7.564820,8.835536,-5.735802,-7.149221,8.807410,9.893118,-5.979538,1.190255,-7.235893,-1.804837,-4.509793,-7.569420,-0.129628,7.672453,-8.122107,-7.468346,-5.058110,9.874313,9.395625,-3.058857,9.406173,-5.374497,3.630467,-6.755611,6.515822,-9.118559,8.890717,7.378341,4.205452,2.374430,-3.905905,-7.854970,2.778400,7.106516,-2.694836,8.618154,-5.523855,6.452626,-1.323352,0.912410,-7.279023,7.127880,-6.480473,1.841384,1.805496,-8.971209,-5.790926,-5.341676,-5.227573,2.073018,8.125306,8.441008,-5.545260,-5.258909,-4.880932,0.930885,2.728392,-8.243902,6.963018,1.308412,-7.552579,8.016217,-0.663733,-1.383037,9.945489,3.733259,1.354689,-8.709244,0.213120,-1.333088,-3.630167,-5.815399,-2.040092,-6.813838,-4.043011,-6.290624,9.550362,-1.895172,-5.063453,-1.861314,-3.367465,-6.362139,-8.690882,7.547360,5.548081,6.550799,1.518634,8.070709,7.492128,-0.274824,1.531697,-9.237799,-5.245081,6.306360,-0.173444,-8.879423,7.938845,-8.945182,-5.359934,-6.815512,4.873287,3.116707,5.368433,-5.032263,-3.776364,5.119121,1.517146,-9.100660,-4.528970,-5.433185,-6.995799,8.891869,-8.719418,3.370946,7.273775,-2.178661,-6.908257,-0.549587,0.170474,-2.116298,2.988251,2.908800,1.173647,-4.530346,8.738753,-4.056648,8.088755,-1.017044,8.181829,-3.104698,3.102523,9.032820,1.199314,9.859174,-2.292619,-1.193469,0.951806,2.333694,-4.183903,-2.252142,-0.819503,2.544184,-3.782522,8.108663,8.542169,8.065856,0.091125,-5.561747,-7.363690,0.439050,8.375292,-6.952356,1.666852,-7.309958,0.206429,-2.376469,7.955098,4.553191,6.630497,-6.045466,3.094823,1.416686,-0.525598,4.211426,6.850674,-8.297577,-4.060701,-1.722543,-5.420133,6.824540,2.723695,8.252599,1.120464,6.520515,-6.330309,-0.456901,3.800997,-0.838763,8.057500,-4.091240,-8.041708,-4.972879,9.677551,-5.083889,2.893667,0.441099,8.904615,8.585646,7.348568,8.418113,-9.018821,2.462418,0.919875,-4.189296,5.960460,-8.662629,4.185277,0.756114,9.252039,-9.008222,6.298605,3.104256,-9.945111,-8.246510,5.207489,9.792324,8.322802,3.428656,-0.834192,3.532839,-4.489589,9.020461,-2.501658,-6.456548,1.368286,-4.242640,-0.874857,1.096987,8.183042,7.765494,-2.220018,-5.156161,9.888563,-1.901928,0.574642,-0.301272,7.988825,5.494028,-7.059188,9.280701,-1.423483,-4.756108,-2.767014,-2.633756,4.047346,-0.970537,-7.499984,3.705581,0.057850,-6.622942,-5.378290,-8.880296,-0.124646,9.895501,-8.280996,-2.660071,0.197452,7.077605,4.171719,5.928747,9.652926,-2.842421,-1.776386,-7.786254,7.456502,1.358902,4.731853,-0.739755,1.797765,-0.536091,-2.945528,6.494484,2.139261,9.889898,-7.806339,-2.959168,9.516117,8.205168,-5.832643,6.187234,-1.068000,3.479288,-5.139518,-6.060977,-7.374848,7.930997,9.521617,-2.546138,-1.142971,6.882150,-5.358258,-9.484217,-3.650985,8.315186,9.475702,3.937968,6.191331,3.509864,-3.463352,-2.778334,-7.698372,2.235265,-3.205584,8.257353,-7.256973,4.155851,-0.572128,-9.453253,5.885758,0.728727,-8.657071,4.513151,-8.706659,1.211938,-6.987195,5.304002,-0.662398,-5.546473,-7.484470,8.487458,3.600242,6.111036,-1.071477,-4.342682,9.245122,5.031803,-2.906204,-4.317954,6.587202,8.502606,3.121210,0.101911,-5.673519,-4.173821,3.215315,7.047508,-3.536805,-8.288304,-2.850328,-4.146793,-3.950581,7.459749,-8.501729,8.743688,1.764399,8.491885,5.908315,-8.184242,8.848924,-4.248795,-9.449806,8.892935,-9.835245,-9.341546,-7.367559,4.659139,-5.008809,-7.118485,-6.956628,-5.672391,-1.397780,-4.700793,-1.046434,8.138281,5.232227,-8.220288,4.249989,-8.883869,9.438794,-9.124389,3.027067,5.378831,-2.512157,1.195353,4.316687,0.254436,7.951047,-6.994884,-2.013947,9.174717,4.910266,-6.476566,7.224033,6.139939,7.983903,3.718272,1.027591,-4.737417,-2.242005,-3.827414,2.201890,7.922899,1.726201,2.709137,-4.083593,8.731991,-3.378402,-8.716686,-2.852492,3.316209,-2.089114,-1.272908,9.838831,2.568900,-4.157753,4.264283,0.498630,7.333132,-9.420634,5.153943,3.596930,3.662845,-1.190697,-7.076152,6.999877,-0.350548,-8.135364,8.359317,1.935023,6.607985,-1.288271,1.225404,0.677128,-7.952432,2.888372,-9.882668,-6.447226,3.082098,-6.923494,1.683777,3.400495,0.618498,-6.525332,6.326195,5.171769,-6.475002,7.317733,-4.698917,-2.731624,4.935039,-5.797476,-2.359384,7.057634,8.683819,6.215464,3.157576,-0.531345,-7.008392,1.340834,-2.444619,-3.776314,-0.232932,-1.990708,7.608982,1.630902,2.606173,-7.305428,-5.070331,6.291197,2.560870,-0.566256,4.585927,1.389272,9.115981,8.717526,-8.189144,-7.119291,9.677479,4.494499,2.666347,3.313002,-1.057983,2.412770,6.837272,-1.014475,0.444631,4.377960,9.155819,3.419924,2.889058,-5.440055,-9.077003,-5.954478,5.167156,-3.894540,-1.175480,8.715789,-9.753383,5.789980,0.983795,-2.402406,-1.713141,9.160799,2.063694,4.797419,2.604212,-8.571477,-2.028513,-9.340361,-3.032491,2.344275,-9.365498,4.883504,4.394061,4.945909,-7.143073,6.078458,7.707922,-4.982809,1.153290,-8.229982,0.366766,2.815748,5.784196,8.992777,-7.388403,4.607686,-1.982926,4.155463,5.251275,-1.157022,0.116222,3.474339,6.044648,4.268271,2.628189,7.936555,-6.622710,-7.497478,-1.577171,3.611903,-1.067883,-1.988984,7.760315,-1.794024,-9.577213,-9.055061,5.625440,-9.927995,3.504447,4.543905,6.920014,2.189648,6.720706,-0.306819,7.811586,8.979750,-7.836699,-7.394777,3.298294,-1.572812,-4.684331,4.466573,-4.906176,-1.392244,4.689736,-5.184675,-0.594079,-4.573486,-3.381316,-0.235589,-4.813733,5.593302,8.206863,-6.631974,8.892289,-0.678928,1.585792,7.762050,1.697147,8.414324,8.595800,-8.070875,3.266265,-0.347973,2.906229,-3.369001,-3.005831,-7.801316,5.803393,-8.966710,3.147940,-2.453786,0.190842,7.290501,4.080292,3.379600,-4.892297,3.362832,6.265981,7.823161,-1.031811,-9.786544,-9.658721,-9.909416,-9.652148,-1.641408,7.568035,-7.234669,-5.213877,4.634536,6.206624,-1.158953,-5.625647,7.034350,0.289096,-8.151481,-7.038182,-0.747140,5.256025,6.263172,-8.041838,-5.367165,-0.571913,-8.689322,-3.530786,0.592934,-2.144329,2.585272,2.622171,-5.827906,-4.295285,-3.281233,-7.589386,4.222960,5.298527,3.478294,-2.327178,5.804520,-1.467950,9.173602,4.370330,-4.914121,-9.765050,3.629081,3.234769,1.618418,-3.064175,-7.459856,-3.399506,0.843495,-2.787340,2.772648,-7.259990,-3.028873,-6.397636,4.664436,-7.988541,-1.777409,4.735140,-2.641567,5.753444,-2.692055,8.266299,-5.780988,-8.894789,1.525847,-2.178261,4.738656,6.768886,-5.139037,4.051867,2.240894,4.452991,4.303710,6.957737,4.624340,7.876567,6.876930,2.386439,-4.760525,7.632676,-6.196482,4.596781,-4.539593,9.421580,-2.848674,-8.247355,-0.199404,6.612192,-0.471699,4.495773,-0.072123,-8.116520,6.553036,5.710071,4.097799,0.137300,4.943953,-7.440165,9.662582,-0.353373,-0.130231,-6.607523,-5.063965,-3.971400,-4.884161,2.031551,-2.073962,-4.502798,4.301949,-4.324089,-8.622713,-7.513585,-3.818201,0.825047,7.252989,6.624427,-5.842850,-1.960709,-5.170654,-9.228380,8.734783,3.358435,4.939454,9.342272,0.079505,0.928330,-4.770451,9.587771,-6.583143,-6.739931,-6.298236,-4.078132,0.922864,-6.501965,0.367080,5.038202,-2.875937,5.728499,-7.554312,-8.285393,-5.916292,-5.762035,7.663771,9.732292,-1.405368,4.573198,3.897917,-7.173638,1.683693,-1.881298,2.674236,2.110569,-0.124666,2.079988,8.931514,6.270066,1.807028,-6.612968,6.623283,5.511422,-3.428591,2.842988,-5.291673,-2.078046,-7.520110,-9.847984,-0.869525,4.437174,-9.668545,-9.190508,-6.178058,3.609843,6.026672,-9.847653,7.040388,-6.808425,5.204862,-2.724643,0.519424,3.727693,1.363667,5.709422,4.354408,7.977689,8.130195,5.006197,2.893803,-7.760939,9.620675,9.128527,-7.852863,-4.366432,6.841651,2.889331,8.703720,-8.904077,-3.942038,1.848158,-8.782678,-7.423277,-7.042260,9.492355,-0.786727,-8.378559,4.710649,9.619718,1.718401,1.702788,-3.161277,-8.097550,3.495911,-1.357545,-4.148967,9.445190,-2.924620,7.339996,9.373743,-3.105058,-7.739740,0.147395,3.935763,4.675902,-4.925031,8.453456,1.656718,5.744940,8.975031,-4.098422,1.393189,-2.913298,9.340866,-9.133600,3.265861,3.976074,0.435261,1.338913,9.404167,7.325025,7.102474,-9.039465,-1.736803,2.100361,6.002211,-6.518948,3.371071,7.534276,-0.509735,6.125603,-1.535664,8.184303,-0.706404,-2.048078,8.986878,6.548971,6.368221,7.877369,8.747288,9.353675,-3.420846,0.908169,-2.553359,2.814123,-5.061460,-5.335765,1.141752,-7.614156,-1.211077,4.999856,4.979537,-8.433806,-6.262844,-4.782842,-5.589551,-5.931412,6.898225,-2.071576,-1.687503,-5.878342,3.690017,-1.317646,-0.931322,-8.741852,7.224951,-8.886249,-0.938861,0.958105,-1.565304,6.450587,5.265191,-6.187331,5.699502,5.781172,-8.503979,2.202749,-6.500407,-4.303282,-4.743626,-2.483264,-0.801162,-9.976387,2.521471,3.484453,-0.105697,9.323599,-8.570938,-7.824001,-8.178174,-1.316229,-0.494575,-2.549096,1.962690,1.176936,0.438645,8.435798,0.384050,2.407826,-6.049078,-5.144068,5.825514,-7.682896,7.949955,8.005659,-9.106068,-2.509083,4.235282,-0.200427,4.384502,5.285673,4.053376,-1.664154,-5.089465,3.153346,-1.060521,6.003364,3.982675,-6.551617,8.832851,0.294235,0.492551,-8.467895,-3.989714,6.837102,-9.044975,0.516410,1.342209,-9.402952,2.347462,-1.077231,-5.732145,8.837987,-4.662024,-4.029499,1.370810,3.058496,-7.868492,-0.392461,-2.431163,-2.913595,-3.378376,-7.748538,-1.502597,3.875242,0.915080,9.949193,-3.268181,9.064463,-6.881360,-9.533210,8.416513,-2.906551,7.221256,6.379497,-4.472904,-9.116281,2.517040,1.305352,-6.541701,4.731191,-6.550244,4.655400,6.723068,9.498541,-5.741404,4.834229,-1.710980,9.882952,-1.782360,3.250615,2.022293,1.628976,5.427680,-5.125339,-1.064401,6.470418,-0.330367,6.745304,5.963516,-4.016722,-4.390302,-2.226573,3.763348,-7.338194,-6.000202,6.165410,2.893964,-6.956802,7.809326,-3.976754,-4.327002,-8.106706,-1.198705,-2.027309,8.430752,-6.428337,-9.041533,-1.052158,-9.058033,-9.400714,-9.724487,-0.057323,-7.026397,-7.427903,9.373620,2.548452,-7.846557,5.136592,1.069887,7.116965,-6.260882,-1.856294,-1.829621,-6.302939,5.680850,8.684252,-5.306602,-5.387105,-8.742005,-3.225754,0.323803,2.385294,-3.719859,0.523524,-3.488263,-7.052449,-2.817782,0.644852,6.947142,4.909206,-5.250321,-2.463733,1.541935,-6.296058,-1.839189,1.918971,-3.016744,3.599869,0.045687,6.742550,6.788261,-0.070821,-3.530541,-6.525059,-2.214290,7.183912,-4.717914,1.028130,-8.713656,2.309663,2.756705,-3.658129,6.599381,-3.963452,-6.291475,-5.719315,2.902081,7.383707,2.605757,3.058733,-4.891179,-1.988442,-0.643855,-2.463620,1.694118,4.759639,-1.129698,4.486202,-6.743399,2.569867,6.658363,-6.980113,-5.843362,-1.062889,-7.484106,5.519992,-6.471696,3.174031,-2.882861,6.195005,-4.207822,-5.006015,3.350347,-4.806479,0.299043,-0.490360,-0.770530,1.085540,5.179313,-2.797024,3.052233,-1.942816,8.638918,-6.152396,9.450651,-8.761033,4.651425,-3.062782,-0.824230,-2.463592,-8.945232,-4.648151,0.109799,-3.572407,2.074274,-0.903257,-4.467016,6.126552,4.471542,1.758470,0.295624,-4.949773,-7.625284,6.682060,1.008807,-0.505948,1.080301,-1.933386,-0.681421,7.696074,6.577281,-8.310403,-4.303602,-6.426972,-0.858255,-4.827297,9.746506,-6.284300,9.158377,-2.170916,8.972832,3.353749,5.301348,8.429992,-4.447859,1.063334,2.636912,6.630534,8.707536,1.217471,-9.849334,-3.067645,-3.094554,9.534806,-6.069614,-2.704764,7.307974,-3.126709,-6.343143,-5.673570,-8.317986,-7.758089,-8.715854,7.905022,9.151515,4.393769,-3.911673,6.015000,-1.927814,9.390221,-8.037272,-2.015543,5.164352,-1.404424,-8.033481,-8.830549,9.339663,-0.127729,-6.429372,2.512797,-6.132620,0.298603,-1.426393,1.975793,-2.733365,-3.523086,6.439766,-0.647659,8.655084,-1.460643,0.948072,7.055546,0.894066,-6.937812,6.690026,-5.741854,-6.842957,0.925988,-9.145234,9.501858,8.232001,-2.812415,-6.378939,9.669288,2.101339,-4.302795,-3.405842,4.397214,3.849644,3.505326,-1.833998,2.193450,-9.607823,3.530564,7.952346,1.859286,-7.085923,4.719080,-4.238896,2.215281,-1.149259,-0.834859,7.383321,5.673473,-6.824782,4.052802,-8.552129,2.940272,6.871258,9.048084,-2.857912,6.167590,-9.467695,5.814313,9.425470,8.856309,-7.724304,-3.972875,0.710179,2.254755,2.543949,-5.842579,5.693813,-2.544843,6.585839,1.526392,-4.614972,-1.641185,-5.850355,2.663510,-6.176267,7.348364,-0.306661,-2.797684,1.868256,1.812650,1.673645,-7.917280,-1.036550,5.601833,4.363455,1.641794,-8.937452,-3.571875,3.064187,-1.698651,-2.831987,4.498699,-4.386983,2.978340,4.326416,-9.450543,-6.968794,0.142312,5.218587,-9.757547,4.557941,-8.309868,-9.982799,-0.604688,-8.041926,4.366456,6.716543,7.006460,5.886575,3.736523,-5.000738,8.808110,9.865832,8.889918,0.984578,4.261850,4.365239,-3.449399,-6.264187,1.249376,-4.549581,-2.498111,5.432000,7.150805,-2.689844,6.290221,-8.228727,5.161195,7.478708,-6.528128,0.365631,-1.540274,8.867361,-5.599899,1.678812,-5.710987,-6.205393,5.533116,-9.098415,-5.116491,-0.389585,2.598123,-9.241665,-6.386559,4.059081,6.427588,-8.970188,9.464477,-2.214489,5.527387,-4.650413,9.950513,-3.773515,-9.719414,5.836055,6.456309,5.706296,-6.868821,-4.119785,1.905420,5.954546,-1.592273,-3.282970,6.830235,9.203906,1.175822,-6.952284,-5.227947,6.826240,-9.506768,-3.172220,-8.631258,-2.531460,8.585466,1.284231,1.581605,2.520551,-5.273011,1.829102,1.710747,8.977806,-4.593486,0.133017,-8.932082,-2.508945,-4.048579,4.869773,-0.108637,7.144465,-0.082538,-0.358362,-8.698694,3.208638,-0.292390,-6.784644,7.669676,-7.669162,-3.622477,-3.929986,-5.063949,4.428338,7.237372,-8.542717,-2.949912,-7.979675,-4.435820,-9.636375,-3.094808,-7.679639,3.543402,-8.377800,-4.076376,-8.280126,3.613742,8.017231,4.604132,-7.243480,1.910191,-0.566135,-3.559586,-8.513480,-0.904330,9.716774,-4.772987,1.130410,0.634815,-1.249338,-7.311152,-4.480874,-3.489190,6.442407,-8.750229,-1.915918,-1.330350,0.347993,4.964880,-9.661021,6.668736,5.518711,6.465887,6.509349,-2.837590,-4.160393,-5.510085,-8.735508,-9.947947,3.447728,1.990762,2.541351,-8.716819,2.122638,-4.665413,5.653463,6.344550,-8.824639,6.938807,9.925717,3.407751,-1.084773,-0.736882,-1.143206,2.737417,2.058139,-7.539804,-9.825268,-0.831542,-7.939696,9.317426,-6.111198,-6.741250,4.635903,-3.738452,-5.986014,-1.375306,8.514389,2.837123,-4.823175,4.018439,-0.052402,-7.571768,9.275728,-1.078077,5.297733,0.980262,-9.932533,-4.271727,-0.797461,9.990136,7.345770,2.293716,-5.527317,-8.142796,8.018728,5.020979,3.334727,7.686706,-6.483336,7.317968,2.005762,1.986324,-2.337157,-3.212213,-6.369785,5.175617,6.616621,-3.305249,-7.228920,-3.686075,3.170009,0.280269,7.737266,8.243830,-8.930149,-9.909240,9.597956,4.965745,9.935969,-1.319134,2.254826,8.013599,7.364965,7.443818,5.407839,1.739824,5.371641,2.175963,4.452644,-4.529798,3.817899,-5.434878,-3.088544,8.297192,7.686668,3.937491,4.347638,4.673183,-9.942491,-8.998744,7.843342,-6.210258,-1.421931,7.826109,-5.041620,1.063963,-1.793513,9.658814,-6.864203,6.851814,-6.586040,-4.894523,0.317131,-2.763646,-7.396734,9.309292,1.531616,-2.823416,-3.683201,2.881403,4.368100,-1.814072,-7.325341,-6.274232,-2.429073,-6.668034,-0.477569,5.750644,1.359947,-3.742341,-9.252092,6.156639,2.399643,-2.249195,0.621938,0.427916,-1.925347,2.311459,3.737067,1.189556,0.609325,-4.147304,1.225969,4.602199,-4.970616,-0.430906,-4.405925,-5.497340,-1.821816,9.533734,-4.271303,-2.301373,-5.632849,-9.754375,-9.733293,-2.226064,7.073381,9.277016,-4.829710,3.941669,-5.115336,2.601598,6.614992,3.153682,-5.599807,-7.269785,4.874984,-4.674084,-2.727017,9.567784,-9.975995,-2.459807,-4.637289,-9.189062,-2.215562,9.579265,-1.880846,2.737668,-5.108053,2.396523,2.577533,-4.439135,-5.172175,4.466351,4.816385,1.602547,-9.793588,0.885420,-6.184459,0.437498,-1.098473,5.975811,6.549173,-4.015712,3.914461,1.955635,6.917831,0.489364,-0.344516,-2.126622,0.583287,1.352917,9.757675,8.568771,3.541842,5.970058,4.611653,-5.208510,1.933328,8.822312,-7.069126,-4.234407,-6.948254,6.736639,-0.398754,-7.156109,-0.818574,1.067916,-6.415354,1.117834,4.052366,3.581834,7.020255,3.374352,8.192496,-1.826211,6.303182,4.276660,-6.631526,-8.198222,6.450002,6.234268,1.340349,5.561117,8.556644,7.678291,8.842892,8.141883,-7.194788,-6.201593,7.282400,2.370873,9.488793,-0.424137,5.528361,-5.268187,1.334617,-3.478382,-6.074215,8.284454,-4.875024,-4.391420,4.375935,9.979452,-2.015651,5.693098,-5.526827,3.072385,-2.967520,1.734279,-9.505234,-6.543382,0.061388,-2.954831,-8.143433,6.353154,-5.809259,0.175395,-2.366819,3.418759,-7.148477,-6.359730,0.316926,-9.177079,-2.047405,-0.470383,6.503292,-2.626503,6.010312,-2.559893,-4.312323,3.471141,0.239055,0.440660,5.730639,-4.589756,4.671772,-8.174506,-9.298613,-4.978759,-6.754965,-3.081396,9.495839,3.709404,0.531884,1.730697,0.177158,6.062272,4.428194,-5.338647,2.952297,-7.225509,-3.711200,-8.433969,2.324207,1.296994,9.646937,9.853429,-9.145956,5.116173,-5.705819,-5.340898,1.087447,-5.301186,-7.232572,5.179055,0.331626,-3.003638,-7.592162,3.950394,-2.674483,-2.330101,-2.977832,-2.396352,-4.419899,-7.913283,-6.806534,-3.517041,-9.960323,-8.819578,-7.100538,0.135565,4.070954,6.462766,-6.844369,0.835616,5.687667,-2.323449,8.963893,-8.409367,-7.379917,-7.048747,8.207511,8.082958,9.151427,-9.685008,3.094046,-2.884426,-6.397884,8.918609,-4.379253,9.827544,-8.431872,1.271634,-5.300003,0.649382,-4.858388,-6.883522,-9.482510,-5.393259,9.335208,4.891404,-9.568995,-0.958704,5.651815,2.388778,-4.774805,1.377069,-9.620300,4.122710,8.568534,5.204943,-5.264365,4.780642,2.744358,9.176100,6.527361,-9.636329,-3.652899,-7.166452,-0.392243,8.606034], dtype = "float64")#candidate|5267|(1800,)|const|float64
const_5268 = relay.const([9.852381,-2.140251,-6.498379,-3.020119,8.377450,7.513539,5.129289,-3.758280,-9.664284,8.450244,-5.858017,9.881212,-4.293561,5.285189,1.343715,-1.116319,-8.532929,1.581695,-9.249843,-9.910299,2.084039,-9.388262,0.234530,-9.929894,2.658633,-8.936483,-3.642426,-4.058354,-9.671273,-4.799615,4.455642,-3.715604,8.298176,-2.279521,-2.033069,-6.187390,-5.649194,-6.710692,1.224021,7.342712,-4.778485,4.912877,-5.307277,3.282843,8.718150,-5.258251,-7.134739,-5.322805,-6.798617,-8.074321,-7.840329,-5.176187,0.864862,-9.578889,7.538746,-6.711002,-1.393817,-9.172535,6.946911,4.937409,2.018384,2.164981,7.134728,-3.039451,5.650418,-4.413570,4.007488,-5.376457,0.349565,0.857604,5.247609,-6.925272,4.929754,-2.261971,5.493462,-3.605944,6.237302,-5.542193,9.149634,8.725416,7.287478,-7.098780,-0.063079,-9.221910,-8.348495,8.543689,6.713822,7.499273,-4.191869,5.439282,2.570741,3.377685,-1.997322,4.033044,-2.648279,-6.790281,-8.903422,-2.265440,2.963724,-1.353980,-0.668056,3.190277,-1.182665,4.834486,-8.303883,-2.206612,-1.053981,6.342782,0.545929,-3.154748,8.815750,-8.835149,-2.038774,-2.348006,9.060346,6.397593,-5.065300,7.164778,3.177519,-9.288363,2.514793,1.791893,-3.498296,-5.231150,-4.409585,7.994628,4.845027,8.558772,-8.473805,-3.536839,7.087743,8.629657,-1.969694,-9.871955,4.884097,-8.021557,6.175169,-7.233352,-8.411150,4.195605,-0.865078,-6.929923,-3.267593,9.576571,7.612949,-7.560808,4.321861,9.711567,-6.877779,5.272614,-0.052399,3.759813,6.314603,8.058197,-5.572805,-0.930585,6.572989,7.769282,3.365079,-7.343261,-0.375299,3.095551,-8.503322,5.797671,-1.975349,6.610687,-5.248701,-7.977681,-7.887374,1.713308,-5.584114,6.518890,-7.493619,-3.569589,1.658347,5.290865,1.824797,2.790909,3.652358,3.655331,7.994117,-8.456266,2.495734,-1.232019,-2.144591,-3.653494,3.892797,-2.413545,-0.240419,7.874274,7.303297,2.094456,9.996221,-7.902750,-5.048763,-4.367863,-7.672689,9.777976,8.822393,-2.314577,-4.745353,1.011788,-5.596664,3.956661,-6.647446,7.938628,4.004145,-2.936528,3.713989,5.279221,-8.068363,-4.099810,-4.356951,-0.666312,0.493216,0.593214,-9.242160,3.669827,-5.612939,7.422599,-9.626349,-1.565257,-3.397623,-0.670143,-7.997481,5.235332,-6.882462,5.428763,1.096892,-9.725730,-6.634166,-1.171148,-8.111881,-2.295446,4.814035,4.932126,-8.068961,8.913403,7.019075,-2.745543,-6.446752,-2.439950,9.917035,3.870438,-8.731480,6.183281,-1.542187,7.061368,-3.550983,4.706726,1.852054,9.721462,2.535325,-1.003949,-2.129984,-0.300837,-5.731795,3.932221,-0.696946,9.946846,8.264611,-6.746272,-5.505321,-7.299181,5.411855,-1.260471,5.271464,-8.813465,4.248441,5.113920,8.338582,-2.387556,-7.934386,-9.371926,-2.431003,8.721562,-0.437620,8.691224,9.534346,1.462222,-0.585598,-6.063933,8.358541,-7.401319,6.019353,8.865043,9.951989,7.630659,5.925664,-1.893885,9.526967,8.806844,4.705495,-5.292206,8.043671,2.582656,-9.162245,7.954742,-9.917852,-6.353747,4.987944,7.144012,1.893020,-6.943520,-5.399328,-0.364913,6.196176,8.757727,9.900409,1.637552,-9.589525,-6.614600,-4.523365,-4.116726,4.823398,2.451458,-2.967014,3.514554,9.758081,3.765781,-9.728910,2.213891,9.364835,6.424047,-9.963552,3.097844,7.063012,5.766195,9.755364,7.319583,-9.462408,4.435184,4.132621,-8.643224,0.936798,-7.250346,-1.929672,9.558211,-6.874246,-0.814223,6.457355,2.907935,2.942559,0.736442,4.913089,8.706973,9.648260,-8.957958,1.658815,1.593160,-5.990714,-8.559977,3.346075,7.663402,-1.705695,-9.670481,0.661790,5.679505,4.626954,-5.027203,7.765154,-0.567850,-7.709404,7.060597,-7.327763,-3.988816,-3.050782,2.630531,-2.855468,1.471557,-7.667361,3.794103,-3.831050,-6.661795,6.217616,-7.575562,-7.501883,2.369039,7.519917,-9.405014,7.003046,5.603269,1.007071,4.920305,7.922691,8.879496,-2.889455,8.785974,2.098045,-2.058797,-6.506461,5.695173,-2.298460,-5.918136,6.483096,2.455913,7.796644,-2.934944,2.445306,1.315235,-5.021108,-2.872821,3.868803,1.801200,5.553465,0.843758,-5.489757,-9.241303,8.310083,1.243931,1.470507,2.113089,5.373788,4.859609,3.174088,1.251320,7.303122,-0.310532,5.986799,9.639614,-0.931260,9.972319,5.416199,7.487707,-6.028457,7.280617,7.027955,-7.952766,-6.292975,6.160965,-1.963637,-3.721582,-3.513386,-2.232273,-9.723090,-5.449430,-2.336961,-4.153706,1.377556,-1.801772,-5.279780,7.262195,-8.801491,-7.189918,7.363314,-4.977634,-3.581595,-9.302901,-6.528866,-7.124709,-5.522548,9.419198,-2.485815,5.256729,1.518261,2.021860,2.927924,3.509759,3.628084,5.809778,1.236811,-2.684372,-4.670488,-4.610279,-4.761356,9.734858,5.559960,0.197694,-3.614789,2.218973,8.973626,9.823381,7.778538,-7.637812,-2.983928,5.741550,-3.341905,6.423732,-1.657511,7.340918,0.096846,-4.525833,1.270411,-3.281037,-3.408469,0.287481,7.870903,-5.852856,9.696969,7.859035,-4.190219,0.264319,-9.893290,9.581380,-8.888476,4.168607,-9.849544,-6.736788,-3.723521,8.229253,-3.309878,-9.417314,-5.823058,-1.102636,1.507902,5.790817,-0.531160,-8.567266,-0.125328,-3.526300,-7.393729,-0.071039,2.534788,-5.984918,1.418532,-2.353322,-0.973333,5.487801,8.355684,-0.837729,3.567396,5.026391,-1.900708,8.449638,4.616215,4.757964,7.196247,-9.858672,-5.663183,-0.736961,6.096492,6.853124,2.049424,-4.811740,-4.317969,-0.173193,-6.141001,-2.397585,5.142442,6.428417,6.405732,4.234608,-6.416627,4.372488,-0.761855,4.011647,-8.955718,-3.031936,5.486812,-5.791824,5.680716,-4.952614,-3.810612,1.878897,-5.210142,0.859583,0.528521,-4.214884,-8.929999,1.595413,-5.419269,-9.634125,7.463650,-6.911447,2.567538,4.619118,8.282308,4.205209,-6.691913,-5.783023,9.241165,-9.122533,-3.269544,2.069420,-0.859143,0.240340,0.307912,3.886981,-8.219696,7.853405,-1.026197,0.071943,-3.423658,-0.841616,9.708862,7.579247,-5.641646,8.361010,3.460582,8.540976,8.890764,-3.902352,0.787427,-6.751511,8.769401,9.639112,-7.263327,-6.055569,3.448221,1.639541,2.248260,-7.145723,-8.391886,-6.380264,-8.634162,3.928087,-7.674779,-2.358940,1.991694,-6.663788,-1.290004,-1.287220,-1.544026,-2.918762,4.891466,-7.670845,-9.469408,-3.973267,-9.325407,-2.775478,5.909407,2.960564,1.875723,5.109454,-9.146477,-9.186190,8.459013,3.621744,2.675472,-1.494409,0.685727,5.507035,5.346551,-6.003117,-0.418953,-3.246274,-3.500366,8.826185,3.552264,-1.428976,-8.147424,-5.338260,1.937824,0.406630,8.274289,-9.130354,-0.613463,0.809605,4.721670,-3.259832,-6.595683,4.883792,-6.513610,9.745543,3.822024,9.164767,-0.429183,-1.612800,4.051602,-2.287014,8.820136,4.293862,-4.984283,4.671706,-7.998124,4.941702,-8.274719,8.901694,6.157777,-6.484609,-7.439911,7.352240,4.040237,-6.772052,2.976711,-6.916876,0.132617,7.011212,-4.593008,-3.230749,-2.442748,7.523699,-0.910784,2.525454,0.790413,6.983984,1.117542,-1.224670,-2.506781,9.678558,2.929830,-3.772647,3.237284,-3.730656,-2.628422,-3.970492,-0.756754,6.227444,-3.868423,0.471260,-9.320056,3.766058,3.377403,-8.190346,-6.099925,5.139604,0.157431,6.477933,1.675547,-4.470899,-0.643628,-3.881900,7.105407,8.498201,-4.138974,7.037017,8.871757,-8.718674,7.201875,-0.166880,-0.112226,9.155288,9.419572,-9.775942,8.355431,-2.314478,2.146627,-1.704600,-5.058309,-3.357673,-5.289383,0.530920,-2.126471,-7.116636,6.392376,-9.409451,6.152624,1.687064,-3.604866,6.793843,2.742201,3.914531,5.515778,4.654930,9.952032,-6.381259,8.713787,-1.305442,-2.264356,0.771118,6.404923,2.333364,-8.936597,-1.576938,4.721758,-6.009728,4.119151,5.983252,0.624276,6.332344,6.838094,8.161878,9.953585,-3.994815,-2.069567,2.015706,0.825561,-3.331638,-1.184575,-0.497833,2.710706,-4.896828,-3.395499,1.423086,-6.878533,7.828219,-9.750031,-5.582401,-0.286512,5.207196,9.321564,-4.657411,-1.740614,-2.841064,2.313401,-0.352800,4.911557,-4.385621,-2.789210,1.985546,-5.089283,-6.966104,9.128375,-7.014065,-1.194285,0.303333,1.582133,-1.874059,-0.495395,-9.200168,-7.676588,-7.999751,1.321425,2.365641,-6.471806,-7.194366,6.968751,-4.914368,9.000497,-3.318854,-7.335687,2.787736,-7.625826,3.477908,-8.027553,-5.109197,-7.079837,-7.943239,2.283015,-5.753884,6.598785,-0.108234,1.008316,5.825881,-9.713539,-4.775819,7.663288,-3.343943,-7.681256,4.977990,2.756872,9.703609,-8.463132,6.333904,2.923952,-4.130706,-6.459005,-1.136502,2.750733,-6.742362,8.912483,-7.155129,6.372354,-1.954444,4.075250,-0.753331,-5.786605,-0.970153,-3.876499,-6.981048,3.495709,-4.160852,-8.787183,-0.894178,-1.681979,0.784986,5.765168,5.820696,-2.750025,-5.118889,7.916519,-4.048744,-1.561465,-5.688390,-2.888711,2.299519,8.090838,6.079626,-5.517855,5.982904,-9.638860,-5.596852,7.239188,-3.216392,-9.721314,3.744934,-1.172267,2.746980,-6.535434,2.854599,-0.415432,6.957571,-2.439433,4.785217,-9.052713,8.951247,9.487223,-5.006667,9.261931,-1.044761,-6.440129,2.034844,0.102147,4.222614,1.496362,-4.784522,1.099261,8.557126,-8.017231,-6.363547,-3.260395,-3.854076,-3.552293,-4.161980,0.064668,1.794274,-3.745011,-0.395998,3.855779,5.474095,-2.273039,-4.823036,7.273498,0.408392,7.807268,-1.318790,-5.537201,6.038560,-6.939283,-1.193243,3.875743,4.273768,7.338734,2.906678,6.823181,9.072208,8.468866,-9.774406,7.515935,-6.788872,0.597640,-7.689493,0.381455,-7.564075,6.415507,-5.926457,-5.608881,-2.512739,9.224178,-2.581050,2.108180,6.344150,-9.933449,7.760158,1.514125,-0.989723,3.310084,-0.468354,-4.177467,-1.965768,-9.401387,-4.513223,-6.952717,-4.175102,5.115825,-2.813116,-1.064862,5.897188,6.446035,-1.631487,-7.754469,-2.492898,-5.748702,9.075885,2.336184,-4.178791,-4.800267,1.401471,-0.551385,-8.509116,-3.035036,-9.181237,-2.714156,8.522552,-3.350191,1.133029,-8.687560,-7.911761,-9.862497,-3.075246,3.451742,7.968612,4.161594,-8.630131,-0.929201,3.416147,-9.678044,2.452200,3.419419,-1.611472,0.153104,9.793158,9.905573,-4.160057,8.872917,-5.514791,3.086799,-6.550575,-6.287590,-1.200315,1.552569,3.923587,5.534567,8.442365,-4.453078,3.308479,5.512391,1.592905,-6.454758,-1.890407,-1.262313,3.095642,7.791223,2.374018,-9.307319,-0.094069,5.535128,2.471428,4.486056,-4.315731,6.405891,7.739816,-5.132370,9.332924,-6.157740,-2.576356,-4.978826,-1.116373,3.024301,4.112895,-8.046496,8.871948,-7.884380,-5.728300,0.388067,3.853854,-9.893275,3.679013,9.709251,-7.669837,8.987424,2.122324,-4.504478,5.217198,8.346526,3.549342,-3.944693,8.248809,-7.216076,-0.157194,-1.057970,-0.679533,-3.123757,3.069540,-4.850385,8.598618,-5.946217,-1.507751,2.949179,-9.537697,-2.244553,-9.637747,1.320960,4.940800,4.935080,8.387216,1.635146,1.318326,-8.772188,-2.209672,-9.282765,-0.984345,-1.358121,8.209341,-0.751023,-3.612601,1.077057,1.676917,-7.404431,-1.452301,0.946429,-1.132311,8.011157,-0.855455,-5.223978,7.447471,7.464615,-5.364098,-9.733829,0.528310,0.820660,7.639559,-2.763205,9.166945,-0.349056,-5.648151,-9.250617,-1.157148,-9.804882,6.165070,4.005198,1.640611,-5.974324,-9.090772,8.262454,1.186577,1.091753,-9.198411,6.759133,9.752689,5.788973,8.201841,-2.162647,-0.759456,8.460961,2.522270,-0.187322,4.145129,-1.597181,8.503434,0.991597,7.904921,0.703353,-2.620396,8.495840,-5.137751,0.409308,-5.685275,-7.414673,3.698546,-0.933487,-0.829302,5.855684,4.601921,-7.799298,-3.740276,4.988453,-8.932682,8.301475,-4.290151,-7.620423,6.154776,-7.012003,2.667069,-9.963918,-3.549848,-6.606950,7.893308,-4.455162,8.897861,6.595900,-1.210266,9.135717,-9.168929,8.564870,-2.531959,4.559363,-1.045615,5.069898,-2.251479,-9.712029,9.293948,-8.645333,-0.689252,2.631005,6.951565,6.341072,-7.592090,-4.202343,2.146974,9.265958,-6.875058,-2.118301,-1.038710,-6.934525,1.411049,-2.561277,0.265625,-2.342561,1.914240,-8.575636,-4.717914,0.895626,-7.040280,6.894165,0.554568,0.882334,-7.581528,-9.492655,-2.690321,6.330843,4.475055,-1.696151,-8.107848,4.314262,-9.698732,-4.628925,3.177160,2.832679,-7.283496,-0.729095,2.072315,3.053812,7.565427,2.799611,-3.967863,9.573492,-0.088185,6.321470,-1.528531,-9.192950,-2.806513,-5.046007,-3.233650,2.664718,-0.854596,9.765227,-7.747466,0.854918,-6.042477,3.566541,-0.745230,8.432097,-7.523624,1.044027,2.456908,4.628332,7.402104,6.973549,-2.315362,-6.745692,-6.140323,-6.431510,-7.566202,-6.878624,-5.997468,7.498420,6.570774,0.276146,4.644155,-0.302256,1.120196,-4.616138,6.380019,-3.321585,2.091708,1.790222,-6.891618,-3.943555,4.798086,-7.098248,-1.676406,-4.730340,-8.126433,2.457769,1.259220,-3.993653,1.699865,2.211917,-2.833530,-1.218505,-2.691885,-4.898729,-7.667668,7.401574,6.834515,3.308799,7.554579,4.994237,-2.776036,-5.083204,7.601998,-0.713072,0.649093,4.717905,8.940239,3.863527,3.509741,4.520202,-3.188469,-3.174132,-7.754042,9.019526,6.500375,4.944508,7.566610,1.093349,-4.578108,-5.287999,4.437269,7.219009,7.432188,-3.786011,-5.990806,-6.593210,-9.161747,5.396056,4.683858,6.804150,7.643470,-2.071037,-2.849159,9.831869,3.879788,-5.013972,-0.788706,7.935399,1.651874,-6.133735,7.919399,-9.800353,7.497714,-8.091654,9.347849,-1.602316,-7.223273,4.472558,-2.984798,7.302449,-2.797031,5.916101,-1.468055,8.031359,-5.953065,5.678314,-0.007519,-5.988126,4.314184,-0.701557,-2.723421,-7.928493,2.260632,5.985570,-6.700922,2.121518,-9.156374,4.560760,-5.503376,-4.025572,1.475293,-7.377511,-1.860252,8.801640,-9.845044,-2.911165,-1.386947,6.233088,-6.703872,-1.826602,-3.415831,-7.978822,-1.390131,6.683896,-5.223676,7.334226,8.858057,7.766921,-6.181333,-0.223933,8.921850,5.949643,1.222653,1.672828,9.239028,-5.543574,-3.345768,2.095173,9.511803,7.571291,-6.461158,6.110388,-6.168366,7.728972,9.774786,6.351634,-7.554760,5.704348,-1.844772,-0.909559,-8.625175,7.253974,3.078894,9.345669,9.927022,-1.963773,5.819138,6.352325,-3.003727,1.167210,-6.057873,-0.869266,4.131771,-4.170820,6.214757,-6.791040,-1.911175,-2.956639,-7.659132,-3.391435,-9.057886,8.281754,-2.540953,7.920285,-0.690146,-9.155586,-1.026476,7.227492,-7.568450,6.844332,-7.475818,4.679062,4.764430,-7.994704,6.049911,4.241370,1.071156,-9.054839,1.141141,5.075117,-0.749583,4.247837,-1.707320,-3.905961,-9.982788,-2.149753,2.314845,6.834345,4.937893,-0.273004,-9.430616,-2.350911,6.765559,0.789211,5.399067,-5.583082,4.172330,-4.685789,-3.970032,-1.231310,-0.781672,-7.603720,2.735970,-7.124868,6.174938,2.393121,-1.243773,-4.577355,-6.450424,-8.205103,-9.535464,0.223977,-2.594137,0.186077,7.990648,-9.796652,9.233466,1.668013,-3.979098,7.940866,9.870940,-3.468510,1.655858,6.738946,-5.118525,1.149824,-3.077135,-0.358852,-7.089032,5.608648,-5.185058,1.024940,-1.500283,-6.136864,-4.642789,2.494299,-5.181996,6.231712,-9.752278,-8.917150,-0.062877,3.125997,-8.146011,-6.140368,0.024411,-6.315148,3.728359,9.152475,2.517341,-3.755685,-3.393239,3.909119,2.807715,-0.030931,7.970152,7.635433,-0.629389,-2.405410,-4.443801,5.221312,-3.546616,0.412162,9.015170,-5.023046,-7.647348,-4.098835,-0.074170,-6.302150,-8.421107,6.908220,1.909856,1.252512,5.847317,-1.171235,-8.189834,0.233739,-6.084823,-0.879676,-5.746674,-7.029570,-5.792611,0.544446,-5.445899,-3.318096,-6.046574,-9.156844,-3.192059,6.948234,9.516426,-3.935602,8.351136,-6.276143,-4.799982,4.490241,5.968661,-0.447141,-5.912260,-2.598111,2.360227,4.293392,-1.485860,5.973278,6.216951,-7.166648,-6.176149,3.716183,7.450072,1.112185,-7.855687,-0.513202,-8.663715,5.682275,-5.541131,1.190224,8.290505,2.353626,-9.843400,-3.420845,0.916742,-9.549361,6.954194,7.046965,-4.329354,0.670241,0.020548,-9.702279,-4.681408,-6.859075,-3.942362,-3.304606,-2.236653,2.770535,-4.553825,-2.096594,5.341091,3.852003,-9.660138,1.376291,-0.202163,-3.741752,-9.832581,8.159141,-4.267943,2.191640,-3.849962,-9.008271,8.901300,8.844588,-0.404639,3.402225,2.701116,-6.342195,5.033858,-5.402207,-1.608687,3.680460,1.044819,9.113058,-7.047194,-3.566005,-6.032923,0.890801,1.845811,1.254783,-9.852398,1.683418,-7.395270,-2.626540,2.086534,7.406857,5.318126,-3.897991,5.477860,-8.424289,-3.710087,-0.905429,-9.396266,-2.543948,3.958531,9.750082,-7.230945,0.114934,-4.551508,-5.642455,-7.414567,-8.677002,-4.903256,-7.207843,-7.687321,3.236866,-5.245739,-6.452947,6.740999,-7.416045,-5.287570,-2.920793,-1.534284,3.361082,2.691219,-6.776839,8.726613,5.344957,2.753906,-0.039707,5.566638,-9.090279,0.854625,-8.252099,2.602422,4.427599,-3.078745,-6.817955,3.109616,8.155296,9.270520,-9.381117,-6.737657,-3.871282,-6.572070,-5.617821,-1.940229,3.475838,3.880488,-3.088952,-3.314756,-3.076940,6.904988,3.108775,8.983468,-3.092440,-1.602160,4.215261,-6.719499,-8.394809,-9.880346,-6.387111,0.837047,1.495103,2.181491,1.283569,3.635035,-1.549087,-2.139040,-5.232293,0.252995,-9.076142,9.322149,-9.632492,9.124078,-2.301592,1.888688,-8.608076,-6.791462,3.671228,7.376486,9.467320,4.343258,6.755454,2.023454,5.376130,-0.814923,-9.395483,0.712211,-7.736658,0.675651,2.554295,8.221132,1.495986,4.441092,-5.717020,6.805897,9.508033,2.681694,-8.445728,-3.514383,5.349176,5.361335,7.608442,9.072923,2.134367,-2.411380,3.283421,-4.624662,-3.519729,-7.154676,-4.140317,-4.423510,-5.885902,8.366914,0.631944,-7.868031,-2.376947,-0.930027,-8.559300,8.601047,4.023105,-2.999548,-0.389588,1.857348,-4.694027,6.293567,-6.579130,8.881512,1.316571,8.718063,-7.580726,-1.655901,-4.745351,-7.073209,-5.459047,-2.117808,-5.453284,-1.603901,-5.297650,4.206079,0.401929,7.024690,-0.512687,-2.596292,6.143274,-0.107237,6.240114,2.739569,-3.379948,9.178675,2.486738,-4.338495,-3.150464,-8.376654,-1.519359,-0.919541,-1.645620,8.585940,-3.978434,0.180622,-1.483794,1.301052,-8.525969,1.768356,6.901184,5.767647,-3.275575,-0.482623,-5.333254,8.661265,-7.813549,5.325193,-8.576645,1.605377,-3.716187,-6.896164,4.311350,0.060828], dtype = "float64")#candidate|5268|(1792,)|const|float64
var_5269 = relay.var("var_5269", dtype = "uint16", shape = ())#candidate|5269|()|var|uint16
call_5266 = relay.TupleGetItem(func_449_call(relay.reshape(const_5267.astype('float64'), [15, 15, 8]), relay.reshape(const_5267.astype('float64'), [15, 15, 8]), relay.reshape(const_5267.astype('float32'), [15, 15, 8]), relay.reshape(const_5268.astype('float64'), [1792,]), relay.reshape(var_5269.astype('uint16'), []), ), 0)
call_5270 = relay.TupleGetItem(func_455_call(relay.reshape(const_5267.astype('float64'), [15, 15, 8]), relay.reshape(const_5267.astype('float64'), [15, 15, 8]), relay.reshape(const_5267.astype('float32'), [15, 15, 8]), relay.reshape(const_5268.astype('float64'), [1792,]), relay.reshape(var_5269.astype('uint16'), []), ), 0)
output = relay.Tuple([bop_5256,call_5266,const_5267,const_5268,var_5269,])
output2 = relay.Tuple([bop_5256,call_5270,const_5267,const_5268,var_5269,])
func_5290 = relay.Function([var_5255,var_5269,], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
var_5291 = relay.var("var_5291", dtype = "int64", shape = (5, 16, 3))#candidate|5291|(5, 16, 3)|var|int64
var_5292 = relay.var("var_5292", dtype = "uint16", shape = ())#candidate|5292|()|var|uint16
output = func_5290(var_5291,var_5292,)
func_5293 = relay.Function([var_5291,var_5292,], output)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_5355 = relay.TupleGetItem(func_2382_call(), 0)
call_5356 = relay.TupleGetItem(func_2383_call(), 0)
output = relay.Tuple([call_5355,])
output2 = relay.Tuple([call_5356,])
func_5377 = relay.Function([], output)
mod['func_5377'] = func_5377
mod = relay.transform.InferType()(mod)
output = func_5377()
func_5378 = relay.Function([], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mod.get_global_var('func_4238')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_5382 = relay.TupleGetItem(func_4238_call(), 0)
call_5383 = relay.TupleGetItem(func_4239_call(), 0)
output = call_5382
output2 = call_5383
func_5385 = relay.Function([], output)
mod['func_5385'] = func_5385
mod = relay.transform.InferType()(mod)
output = func_5385()
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_5484 = relay.TupleGetItem(func_4592_call(), 0)
call_5485 = relay.TupleGetItem(func_4593_call(), 0)
output = relay.Tuple([call_5484,])
output2 = relay.Tuple([call_5485,])
func_5504 = relay.Function([], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5505 = func_5504_call()
output = call_5505
func_5506 = relay.Function([], output)
mutated_mod['func_5506'] = func_5506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2266_call = mod.get_global_var('func_2266')
func_2268_call = mutated_mod.get_global_var('func_2268')
call_5515 = relay.TupleGetItem(func_2266_call(), 1)
call_5516 = relay.TupleGetItem(func_2268_call(), 1)
func_1257_call = mod.get_global_var('func_1257')
func_1259_call = mutated_mod.get_global_var('func_1259')
var_5538 = relay.var("var_5538", dtype = "uint16", shape = ())#candidate|5538|()|var|uint16
call_5537 = relay.TupleGetItem(func_1257_call(relay.reshape(var_5538.astype('uint16'), [])), 2)
call_5539 = relay.TupleGetItem(func_1259_call(relay.reshape(var_5538.astype('uint16'), [])), 2)
output = relay.Tuple([call_5515,call_5537,var_5538,])
output2 = relay.Tuple([call_5516,call_5539,var_5538,])
func_5545 = relay.Function([var_5538,], output)
mod['func_5545'] = func_5545
mod = relay.transform.InferType()(mod)
var_5546 = relay.var("var_5546", dtype = "uint16", shape = ())#candidate|5546|()|var|uint16
output = func_5545(var_5546)
func_5547 = relay.Function([var_5546], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4470_call = mutated_mod.get_global_var('func_4470')
call_5604 = relay.TupleGetItem(func_4468_call(), 0)
call_5605 = relay.TupleGetItem(func_4470_call(), 0)
output = relay.Tuple([call_5604,])
output2 = relay.Tuple([call_5605,])
func_5618 = relay.Function([], output)
mod['func_5618'] = func_5618
mod = relay.transform.InferType()(mod)
mutated_mod['func_5618'] = func_5618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5618_call = mutated_mod.get_global_var('func_5618')
call_5619 = func_5618_call()
output = call_5619
func_5620 = relay.Function([], output)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_5646 = relay.TupleGetItem(func_1600_call(), 0)
call_5647 = relay.TupleGetItem(func_1601_call(), 0)
const_5655 = relay.const([[[-7.513976,9.750107,3.564143,1.228249,4.602144,-4.269848,-5.523340,-5.720069,4.515852],[9.570309,-1.837650,0.934412,2.277365,-4.720166,-7.578494,-9.760221,-2.281228,3.085585],[8.128447,-6.844808,-6.060583,6.945757,5.578736,-9.900169,-2.981306,-6.757053,7.426498],[1.533307,5.130075,-6.260950,-5.143443,-4.295600,-4.308947,-5.907833,-5.758804,5.121001],[-6.080077,-7.474717,-1.130279,-7.490524,-5.572548,1.531248,0.392228,-0.901551,-8.508732],[-1.334333,2.045771,4.882510,8.066685,7.347083,-5.908126,-9.376293,3.584600,8.141979],[-4.300197,2.146722,-6.447478,-6.180772,9.443511,-4.711458,6.817730,-9.243853,0.607840],[0.022543,-4.495345,6.311186,1.683343,3.838931,-4.736681,-5.225241,-2.115924,4.013448]],[[-5.329835,-4.933899,1.828317,0.882383,-1.984918,4.341227,-1.012433,-4.298774,-9.981752],[2.016343,0.305807,-2.124106,4.543908,-8.156087,-5.372266,-4.201858,6.405219,5.206507],[2.050146,-0.279404,-8.265706,-1.460187,-3.024989,8.740230,-1.356144,-0.684970,2.027194],[7.017453,7.947797,6.163705,0.054589,-1.078893,-4.285835,4.619192,-4.481556,9.332051],[-9.354936,0.550753,-5.289915,9.250597,-7.096493,4.286158,-7.895929,-3.091463,-5.745339],[-9.315311,-4.523402,8.503601,-7.099541,-7.912451,-6.913070,4.461417,0.480904,1.044411],[-5.872462,-4.091439,-0.234222,-1.024819,-7.565882,-3.288993,-4.803843,6.793702,8.739234],[-9.926457,6.746718,-7.535091,-7.594982,-5.368808,7.827121,-7.933718,-8.257005,-1.688122]],[[-3.225411,-3.966401,8.736883,6.842642,1.820278,-8.711630,8.495918,-0.391918,-0.680291],[-0.658679,-2.520921,-8.783751,-4.828845,8.207116,-7.971415,7.865108,7.102413,2.792613],[-6.301273,-8.170182,5.437691,-7.183212,3.881113,-5.239052,-2.008170,8.922101,6.375575],[-9.760407,-5.494020,9.773448,0.030085,5.626630,-2.935665,2.206568,9.304503,-8.061933],[2.136101,-1.097703,9.749464,-3.107802,9.426593,-8.812777,9.437945,1.172613,5.439358],[-9.205234,9.137572,5.375347,9.297467,6.877514,-4.581637,5.005597,-3.888874,2.673193],[-3.316415,3.581866,1.721210,3.624306,-9.789485,-0.988327,4.981261,-2.351011,-5.065541],[-0.057356,7.226555,-9.089129,9.718890,6.882668,7.041062,8.940595,-4.282386,-5.449375]],[[-8.982307,-5.256180,-4.934008,-3.500807,-3.119092,-0.526808,-8.465855,-0.403344,-9.569319],[-6.173732,-7.246709,-1.646237,-1.693165,-2.330276,-9.787933,-8.880586,-9.632107,-5.980173],[0.159681,-5.852212,2.965368,-7.737765,8.325052,3.274419,3.959898,7.078626,8.614520],[-3.045023,8.693356,-9.629596,0.255366,-2.353049,-3.855646,-9.313425,-3.143642,3.305978],[8.383536,0.493215,-0.840181,0.256045,-0.652561,4.343089,-5.455781,1.051747,-0.384380],[7.313732,-8.984471,0.882347,-0.917805,-0.685039,-9.800665,0.409697,9.843214,-8.990095],[4.342279,-2.634604,-4.491876,-8.155414,0.477217,-5.081989,3.027982,7.989763,-8.387372],[-6.076046,-1.655999,9.971559,-0.006317,-2.254071,4.025049,0.426331,-4.336446,2.425964]],[[-5.455886,8.518809,8.501165,8.396747,-4.611782,3.857351,-1.508628,0.576599,-0.443328],[8.323034,1.661358,6.686479,0.843949,-4.786662,-9.844475,-6.431700,5.768152,-6.479096],[-4.895685,9.033380,-8.512142,7.243323,8.175728,1.460574,5.677681,-3.673880,-6.421752],[2.543747,4.623952,-1.656248,7.599308,-9.165064,-6.195832,-9.464945,-1.043451,5.744238],[-2.739882,4.028096,-8.833932,4.748994,-5.038056,-7.079229,7.381102,-0.997548,0.880538],[-3.822015,9.530758,4.178573,7.083358,-3.986174,-2.346450,-7.057830,-2.711494,-2.393002],[-8.048449,-7.742401,4.307373,-5.180722,8.345367,2.070791,5.910047,2.173200,-2.915651],[-0.378412,-0.709889,-1.947059,7.877731,4.963750,-8.161571,-1.713416,-0.124249,8.185252]],[[0.352078,-2.231702,-5.410557,-2.618982,-0.856572,8.562889,-9.008946,-9.423743,-4.509716],[6.760420,-3.893409,-8.611474,-4.380259,7.531038,5.389232,7.264646,-8.893650,2.445081],[1.363864,-3.278862,-0.865795,7.179973,-7.669547,4.878290,-5.353961,-7.249227,-6.982431],[6.927115,5.468836,1.191148,-7.867923,0.700802,-8.323316,0.991186,-6.493247,7.420520],[4.378427,-8.098571,1.522023,9.522879,-9.227397,-1.030596,-8.564052,-9.536306,-8.225906],[-0.910852,-8.848347,-5.704036,2.965089,-5.962659,9.858796,-0.233161,-3.326481,-0.254357],[-5.944797,4.398409,2.995834,1.165353,-5.917413,1.929789,0.212583,1.275154,-2.332191],[2.226337,4.584210,6.751979,1.471507,-9.736799,-2.268975,6.470024,-4.279598,-7.295405]],[[-5.492266,7.167067,8.873693,-2.339562,-8.997726,-5.076884,1.602757,-8.483875,0.070783],[3.965011,1.955352,2.266332,0.048762,5.409964,6.649052,3.949271,1.187899,-5.391541],[-1.933044,-3.056431,-4.553413,6.956218,-3.472583,8.240978,7.243910,-5.182211,-9.821310],[1.723196,4.862654,2.960495,-3.109757,-7.436010,2.755461,-5.094673,5.267225,-8.249691],[4.016574,7.548015,-1.696851,3.476182,-3.533811,-1.789975,0.910051,-3.188814,-6.765913],[-2.956059,-3.756639,7.006232,7.633572,0.937516,-5.438889,9.811940,6.783074,5.694331],[8.770047,-1.031237,-6.231142,-6.087010,-2.733768,-6.367805,-4.761172,4.585660,-4.655459],[-7.131224,-8.786445,-8.673776,0.888409,-3.107405,9.507968,-9.232865,-7.819781,-6.997204]],[[-8.613287,5.668548,6.463448,7.326910,-0.434763,-6.370020,2.650265,-5.408576,7.122156],[-1.050189,-2.912595,3.185524,-6.976929,-0.134543,-4.761707,-4.471765,2.754300,6.772976],[8.263916,-1.880676,2.906860,-1.152538,9.661599,-5.394467,-2.241169,-9.152664,2.753485],[-1.325717,8.930661,8.627250,7.395648,-6.167010,0.375616,1.366069,4.395287,-3.939758],[-4.143008,4.908356,1.338682,-4.403658,6.508156,8.656778,6.350512,-7.104054,-7.089968],[-5.167123,5.186677,1.276060,5.736157,-8.407466,-1.601332,4.961439,6.224959,2.655132],[8.068482,-0.586523,-8.391064,1.163693,2.732565,-6.786103,3.625457,6.778821,-8.133699],[9.575615,7.926593,-8.169460,-1.817738,4.987289,-4.054236,5.530803,-5.797857,-3.844411]]], dtype = "float64")#candidate|5655|(8, 8, 9)|const|float64
bop_5656 = relay.less_equal(call_5646.astype('bool'), relay.reshape(const_5655.astype('bool'), relay.shape_of(call_5646))) # shape=(8, 8, 9)
bop_5659 = relay.less_equal(call_5647.astype('bool'), relay.reshape(const_5655.astype('bool'), relay.shape_of(call_5647))) # shape=(8, 8, 9)
func_795_call = mod.get_global_var('func_795')
func_801_call = mutated_mod.get_global_var('func_801')
var_5665 = relay.var("var_5665", dtype = "uint8", shape = (2145,))#candidate|5665|(2145,)|var|uint8
var_5666 = relay.var("var_5666", dtype = "float64", shape = (90,))#candidate|5666|(90,)|var|float64
const_5667 = relay.const(10, dtype = "uint16")#candidate|5667|()|const|uint16
var_5668 = relay.var("var_5668", dtype = "uint16", shape = (392,))#candidate|5668|(392,)|var|uint16
call_5664 = relay.TupleGetItem(func_795_call(relay.reshape(var_5665.astype('uint8'), [13, 15, 11]), relay.reshape(var_5666.astype('float64'), [90,]), relay.reshape(const_5667.astype('uint16'), []), relay.reshape(var_5668.astype('uint16'), [196, 2]), ), 3)
call_5669 = relay.TupleGetItem(func_801_call(relay.reshape(var_5665.astype('uint8'), [13, 15, 11]), relay.reshape(var_5666.astype('float64'), [90,]), relay.reshape(const_5667.astype('uint16'), []), relay.reshape(var_5668.astype('uint16'), [196, 2]), ), 3)
output = relay.Tuple([bop_5656,call_5664,var_5665,var_5666,const_5667,var_5668,])
output2 = relay.Tuple([bop_5659,call_5669,var_5665,var_5666,const_5667,var_5668,])
func_5670 = relay.Function([var_5665,var_5666,var_5668,], output)
mod['func_5670'] = func_5670
mod = relay.transform.InferType()(mod)
var_5671 = relay.var("var_5671", dtype = "uint8", shape = (2145,))#candidate|5671|(2145,)|var|uint8
var_5672 = relay.var("var_5672", dtype = "float64", shape = (90,))#candidate|5672|(90,)|var|float64
var_5673 = relay.var("var_5673", dtype = "uint16", shape = (392,))#candidate|5673|(392,)|var|uint16
output = func_5670(var_5671,var_5672,var_5673,)
func_5674 = relay.Function([var_5671,var_5672,var_5673,], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5695 = func_5385_call()
call_5696 = func_5385_call()
output = call_5695
output2 = call_5696
func_5697 = relay.Function([], output)
mod['func_5697'] = func_5697
mod = relay.transform.InferType()(mod)
output = func_5697()
func_5698 = relay.Function([], output)
mutated_mod['func_5698'] = func_5698
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5715 = relay.const([[[5.504366,-3.994181,-1.785222,0.055360,6.838003,4.125831,5.658294,-7.586729,-9.919638,-4.770411],[9.794032,-1.901176,-7.085064,3.566442,-1.181034,-3.177614,-2.200343,-7.213080,9.320593,4.784590],[-0.044499,-7.222708,-5.822984,3.174942,-4.591959,2.204288,-1.838055,-9.101115,-4.346557,-9.573594],[-2.178569,-9.065401,7.575667,2.959443,-2.370703,5.719995,7.997110,2.767917,-4.205913,-9.715034],[-1.872924,-6.094107,5.058860,9.267929,5.735739,3.883507,1.464847,-5.262064,-6.335786,7.110043],[8.376993,5.459134,-5.389478,-9.800314,0.581832,-2.658796,-9.910694,2.882447,4.981070,5.907696],[-1.135680,-0.212701,0.665628,-9.416235,-6.886017,-7.360143,6.099194,-8.072344,-2.234827,-9.055181],[0.031215,-7.485792,-1.609929,8.269181,-9.361487,-4.108273,6.109347,-2.496852,1.934719,-2.766918],[2.006468,3.823883,-6.397449,-7.483232,-3.327026,4.576837,1.478313,-9.882534,7.849978,0.729052],[-2.567178,-5.035100,-9.919273,-7.196489,4.701245,4.040721,-7.997453,4.266569,-9.122026,2.838272],[7.957546,-1.794416,-3.921002,-1.167674,4.962044,-3.496659,6.152642,5.979668,8.752863,4.100361],[4.256575,7.750895,-0.948122,-6.166413,4.141925,7.928884,-8.330562,8.673867,-3.915591,-8.559853],[-8.432364,-2.960033,8.882012,4.765305,2.904583,-3.460947,-6.452079,-1.359864,-4.103906,2.758743],[9.005723,-1.884470,2.454555,-5.679910,3.329503,3.178716,0.688140,2.761686,9.088795,-4.873137],[-6.394880,4.675563,-6.141784,9.325574,1.669138,-8.620988,6.249111,-4.290984,0.689085,8.324982]],[[-1.378531,-5.928985,-9.262891,-6.848262,-6.829725,-6.787343,5.990690,4.972894,-5.863155,2.351352],[-1.981345,-3.427069,-3.514807,-5.504940,9.902544,7.990086,-7.876058,-6.758383,0.177049,-1.895249],[2.523048,-6.468253,4.733460,-4.117819,-0.752313,1.861700,-1.287465,7.364364,-2.825493,-1.879284],[4.322569,9.360345,7.570881,-7.676610,5.619326,-0.131551,6.977983,9.864731,8.726104,-7.728814],[2.206313,-2.353714,0.520447,4.647206,4.717050,-4.565987,1.108463,-5.599861,7.140796,0.785035],[6.817937,1.821983,8.058106,3.133279,-2.568314,-3.363385,5.441858,4.090194,-6.168979,4.966384],[-6.937367,-9.762383,5.490010,-8.016335,9.513961,7.339885,-7.069986,-7.882599,-6.109032,-0.098891],[1.925857,-9.683933,2.073280,-9.065282,-7.326923,8.718748,5.893932,-5.529597,-9.104815,5.969300],[1.493540,-1.182589,5.735436,3.553301,5.797795,-5.690212,-7.504941,1.214104,0.966202,-4.531011],[4.927897,-7.088291,3.589522,-2.732438,-1.107042,-8.968308,-2.636181,0.784568,7.196423,2.619471],[-1.631488,0.178138,7.007653,-0.821302,-9.362507,-3.342895,-7.764807,-9.766215,-2.220939,9.853874],[-8.270474,-8.920758,-9.526216,-3.576688,-0.509089,-0.528486,-9.446844,1.091273,4.460713,-7.251963],[-6.865466,7.164771,8.966060,3.617707,-2.221113,-5.263885,-2.437223,-9.932460,-0.894759,-4.737697],[-0.198695,8.717950,-4.660007,-3.707931,-5.651957,-1.989521,-3.296977,6.093447,8.655538,1.107489],[2.153177,1.731845,-2.491268,7.343853,-7.661155,5.097417,-1.808224,7.737282,1.267737,-4.328658]],[[-6.972852,7.645613,4.002748,4.789353,7.343751,-2.217920,-4.475313,-0.149836,7.687550,-8.336049],[5.964609,0.957472,-1.375732,-1.558039,-0.262960,-5.006070,3.113487,7.203965,-5.912906,-6.571719],[9.026470,9.420278,-9.658574,-0.183123,0.256592,9.743937,-9.078647,-5.760788,-1.729725,6.625776],[-1.526953,9.791005,4.939304,-7.391649,3.440074,6.986703,3.431583,5.683930,-3.271636,-6.356941],[-0.908526,-9.633836,-7.184075,3.873497,5.808028,3.355238,-5.855718,-6.157505,-1.706798,-5.972565],[3.624632,-3.104273,-8.141640,-8.030290,-8.333996,-4.583636,-3.800113,3.185284,1.061125,1.437424],[0.868772,-2.687626,-0.883725,9.734817,9.438621,-0.678752,9.102111,-0.055028,-8.870778,-7.874807],[6.062295,9.603641,1.416798,-4.067762,-9.144313,-6.747829,-3.707395,6.167560,6.024558,3.278944],[-4.975566,3.858266,6.625159,6.284138,-2.815645,-4.877206,-9.378770,3.795164,-4.747069,2.426731],[-8.263176,2.472404,-2.500428,3.672882,2.011073,2.464015,-6.840206,-1.100976,-5.024709,-7.763901],[6.218606,-5.846172,-7.097479,-2.826812,0.424856,4.764080,7.950511,-9.713794,-6.761824,4.054417],[7.053089,9.804985,7.881800,8.168354,-1.787867,-3.414020,-6.657773,7.585285,-0.179097,5.983468],[4.648820,8.581264,9.887662,8.696249,2.188003,-9.657069,9.067528,3.029079,5.510723,-9.793067],[-1.421458,9.018039,2.669429,3.863707,-9.652765,5.504286,-3.208047,-9.426942,-4.404458,3.709469],[-3.563463,-9.531668,8.953565,-2.788333,-8.056256,-3.229560,0.556163,1.519307,0.451977,3.916961]],[[-6.253431,7.726485,8.432889,-2.980734,2.574912,-6.175105,5.857484,9.874627,-3.121181,0.276090],[-7.967987,5.711169,-7.661850,-8.147158,5.795551,3.153594,-4.634597,-7.138411,8.693078,-6.095279],[-9.892667,-8.561659,2.305893,4.895738,-0.115960,4.119797,-7.321204,-6.015859,8.369151,-0.154372],[-5.046820,-4.719380,0.191442,3.193176,-6.690801,2.930012,-3.641159,-3.562445,-5.776898,1.411771],[1.072819,4.479283,6.427191,-0.056461,1.156203,7.718290,-6.018100,-0.938222,3.827512,-4.269574],[7.734867,-5.610980,-0.738950,-7.813513,-7.502913,3.614924,-6.171729,-3.859355,-5.748557,-2.973359],[7.577841,-1.534572,-5.035455,0.577296,-4.411317,0.631893,-8.847302,8.363558,-9.518795,0.049073],[9.402787,-4.450966,1.496148,0.281327,7.365333,5.053739,2.396161,0.375023,9.141037,0.279091],[-0.631331,2.849712,8.782911,6.534650,-1.520459,-2.794447,0.262849,5.356938,6.983225,4.454712],[3.935332,-5.458266,-9.146424,-6.093230,-5.833933,7.907067,-7.063147,8.758375,6.908916,5.153352],[0.711238,2.473154,3.660192,-8.189438,1.410609,9.548150,-2.659310,5.819177,4.518521,-8.098568],[-9.411751,9.319745,5.685028,-6.105793,2.528885,-6.574158,7.445585,-8.330184,1.498000,-3.446296],[-1.176188,2.923063,8.518301,1.477890,-8.890475,-2.055905,9.571824,7.618540,9.598111,5.409901],[2.748087,7.201327,4.523334,0.956556,-8.050828,7.515422,-1.313031,-1.369039,4.578707,-6.888742],[0.345542,-7.329991,-5.972488,9.855142,9.643225,8.914202,8.840627,-5.315917,-8.189407,1.958181]]], dtype = "float32")#candidate|5715|(4, 15, 10)|const|float32
var_5716 = relay.var("var_5716", dtype = "float32", shape = (4, 15, 10))#candidate|5716|(4, 15, 10)|var|float32
bop_5717 = relay.add(const_5715.astype('float32'), relay.reshape(var_5716.astype('float32'), relay.shape_of(const_5715))) # shape=(4, 15, 10)
output = bop_5717
output2 = bop_5717
func_5723 = relay.Function([var_5716,], output)
mod['func_5723'] = func_5723
mod = relay.transform.InferType()(mod)
var_5724 = relay.var("var_5724", dtype = "float32", shape = (4, 15, 10))#candidate|5724|(4, 15, 10)|var|float32
output = func_5723(var_5724)
func_5725 = relay.Function([var_5724], output)
mutated_mod['func_5725'] = func_5725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3631_call = mod.get_global_var('func_3631')
func_3633_call = mutated_mod.get_global_var('func_3633')
call_5754 = relay.TupleGetItem(func_3631_call(), 0)
call_5755 = relay.TupleGetItem(func_3633_call(), 0)
func_1600_call = mod.get_global_var('func_1600')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_5760 = relay.TupleGetItem(func_1600_call(), 0)
call_5761 = relay.TupleGetItem(func_1601_call(), 0)
output = relay.Tuple([call_5754,call_5760,])
output2 = relay.Tuple([call_5755,call_5761,])
func_5782 = relay.Function([], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
output = func_5782()
func_5783 = relay.Function([], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5832 = func_5385_call()
call_5833 = func_5385_call()
func_2846_call = mod.get_global_var('func_2846')
func_2850_call = mutated_mod.get_global_var('func_2850')
const_5840 = relay.const(-3.420040, dtype = "float64")#candidate|5840|()|const|float64
var_5841 = relay.var("var_5841", dtype = "float64", shape = (60,))#candidate|5841|(60,)|var|float64
call_5839 = func_2846_call(relay.reshape(const_5840.astype('float64'), []), relay.reshape(var_5841.astype('float64'), [1, 10, 6]), )
call_5842 = func_2846_call(relay.reshape(const_5840.astype('float64'), []), relay.reshape(var_5841.astype('float64'), [1, 10, 6]), )
output = relay.Tuple([call_5832,call_5839,const_5840,var_5841,])
output2 = relay.Tuple([call_5833,call_5842,const_5840,var_5841,])
func_5852 = relay.Function([var_5841,], output)
mod['func_5852'] = func_5852
mod = relay.transform.InferType()(mod)
mutated_mod['func_5852'] = func_5852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5853 = relay.var("var_5853", dtype = "float64", shape = (60,))#candidate|5853|(60,)|var|float64
func_5852_call = mutated_mod.get_global_var('func_5852')
call_5854 = func_5852_call(var_5853)
output = call_5854
func_5855 = relay.Function([var_5853], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_5876 = relay.TupleGetItem(func_2451_call(), 0)
call_5877 = relay.TupleGetItem(func_2452_call(), 0)
func_4468_call = mod.get_global_var('func_4468')
func_4470_call = mutated_mod.get_global_var('func_4470')
call_5890 = relay.TupleGetItem(func_4468_call(), 0)
call_5891 = relay.TupleGetItem(func_4470_call(), 0)
func_4004_call = mod.get_global_var('func_4004')
func_4006_call = mutated_mod.get_global_var('func_4006')
call_5895 = relay.TupleGetItem(func_4004_call(), 0)
call_5896 = relay.TupleGetItem(func_4006_call(), 0)
func_3499_call = mod.get_global_var('func_3499')
func_3501_call = mutated_mod.get_global_var('func_3501')
call_5915 = relay.TupleGetItem(func_3499_call(relay.reshape(call_5890.astype('float64'), [8, 8, 9])), 3)
call_5916 = relay.TupleGetItem(func_3501_call(relay.reshape(call_5890.astype('float64'), [8, 8, 9])), 3)
output = relay.Tuple([call_5876,call_5890,call_5895,call_5915,])
output2 = relay.Tuple([call_5877,call_5891,call_5896,call_5916,])
func_5936 = relay.Function([], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
output = func_5936()
func_5937 = relay.Function([], output)
mutated_mod['func_5937'] = func_5937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_5965 = func_1202_call()
call_5966 = func_1202_call()
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5972 = func_5385_call()
call_5973 = func_5385_call()
output = relay.Tuple([call_5965,call_5972,])
output2 = relay.Tuple([call_5966,call_5973,])
func_5975 = relay.Function([], output)
mod['func_5975'] = func_5975
mod = relay.transform.InferType()(mod)
output = func_5975()
func_5976 = relay.Function([], output)
mutated_mod['func_5976'] = func_5976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_6021 = relay.TupleGetItem(func_5782_call(), 1)
call_6022 = relay.TupleGetItem(func_5783_call(), 1)
func_4322_call = mod.get_global_var('func_4322')
func_4323_call = mutated_mod.get_global_var('func_4323')
call_6030 = relay.TupleGetItem(func_4322_call(), 3)
call_6031 = relay.TupleGetItem(func_4323_call(), 3)
output = relay.Tuple([call_6021,call_6030,])
output2 = relay.Tuple([call_6022,call_6031,])
func_6051 = relay.Function([], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
output = func_6051()
func_6052 = relay.Function([], output)
mutated_mod['func_6052'] = func_6052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_6058 = relay.TupleGetItem(func_5782_call(), 0)
call_6059 = relay.TupleGetItem(func_5783_call(), 0)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_6067 = func_1202_call()
call_6068 = func_1202_call()
output = relay.Tuple([call_6058,call_6067,])
output2 = relay.Tuple([call_6059,call_6068,])
func_6069 = relay.Function([], output)
mod['func_6069'] = func_6069
mod = relay.transform.InferType()(mod)
output = func_6069()
func_6070 = relay.Function([], output)
mutated_mod['func_6070'] = func_6070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mod.get_global_var('func_4238')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_6086 = relay.TupleGetItem(func_4238_call(), 0)
call_6087 = relay.TupleGetItem(func_4239_call(), 0)
output = relay.Tuple([call_6086,])
output2 = relay.Tuple([call_6087,])
func_6088 = relay.Function([], output)
mod['func_6088'] = func_6088
mod = relay.transform.InferType()(mod)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6088_call = mutated_mod.get_global_var('func_6088')
call_6089 = func_6088_call()
output = call_6089
func_6090 = relay.Function([], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5054_call = mod.get_global_var('func_5054')
func_5055_call = mutated_mod.get_global_var('func_5055')
call_6094 = func_5054_call()
call_6095 = func_5054_call()
uop_6097 = relay.acos(call_6094.astype('float32')) # shape=(13, 8, 3)
uop_6099 = relay.acos(call_6095.astype('float32')) # shape=(13, 8, 3)
output = uop_6097
output2 = uop_6099
func_6102 = relay.Function([], output)
mod['func_6102'] = func_6102
mod = relay.transform.InferType()(mod)
output = func_6102()
func_6103 = relay.Function([], output)
mutated_mod['func_6103'] = func_6103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6112 = relay.var("var_6112", dtype = "float32", shape = (10, 13, 1))#candidate|6112|(10, 13, 1)|var|float32
var_6113 = relay.var("var_6113", dtype = "float32", shape = (10, 13, 11))#candidate|6113|(10, 13, 11)|var|float32
bop_6114 = relay.divide(var_6112.astype('float32'), var_6113.astype('float32')) # shape=(10, 13, 11)
output = bop_6114
output2 = bop_6114
func_6120 = relay.Function([var_6112,var_6113,], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6120_call = mutated_mod.get_global_var('func_6120')
var_6122 = relay.var("var_6122", dtype = "float32", shape = (10, 13, 1))#candidate|6122|(10, 13, 1)|var|float32
var_6123 = relay.var("var_6123", dtype = "float32", shape = (10, 13, 11))#candidate|6123|(10, 13, 11)|var|float32
call_6121 = func_6120_call(var_6122,var_6123,)
output = call_6121
func_6124 = relay.Function([var_6122,var_6123,], output)
mutated_mod['func_6124'] = func_6124
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6142 = relay.const([[[6.842967,-6.724824,9.247745,6.916915,-8.397898],[-7.226795,-3.165198,-1.607492,-0.793883,1.535919],[-9.393850,-8.484489,-8.475124,-5.661538,9.186373],[-7.443311,-9.387073,-0.988421,-6.985460,7.267173],[3.488071,-7.750342,-0.536676,-2.753862,7.980589],[2.593202,-5.485505,-8.696257,-1.876041,-5.159067],[-4.555160,1.457506,-6.203091,1.657076,4.454920],[9.938425,-0.540631,-9.122418,-4.981081,8.195307],[-5.647000,1.118101,2.909781,-7.050818,-0.422998],[9.587816,1.003319,-7.868762,-4.164168,-2.080112],[-9.670032,-1.592253,4.542203,5.614757,-1.141499],[-7.386867,0.135913,8.829608,5.546191,4.343628]],[[-2.610642,-0.897249,7.734528,1.608321,-7.613871],[5.008938,8.908697,-1.868821,6.514540,-2.254722],[-7.443140,-5.777900,0.434917,-1.365809,6.469373],[-3.705652,-6.998747,6.872513,2.206383,2.053720],[-0.731566,9.331375,9.013354,0.126757,6.754914],[-1.164531,-3.213586,-7.136154,-8.910229,-1.956170],[-3.953821,6.344690,2.680423,-0.373229,-5.240415],[2.274413,-7.199191,-8.522211,-2.154429,-1.748685],[-0.032529,5.921111,-5.873542,-2.065623,4.367206],[-8.037402,8.156811,-2.101104,7.096930,-8.875310],[4.859211,-7.159224,-4.750331,0.014276,-7.636075],[-7.342081,-1.241444,8.214466,2.237137,8.827176]],[[-2.687899,-6.834204,6.158855,5.450824,3.425320],[-3.058735,2.837328,7.127200,-2.888856,-0.186163],[-1.128574,2.355211,-0.302925,8.628834,-5.004419],[-6.338095,8.027539,-4.611300,-6.830501,4.466030],[3.277925,-4.974145,-8.764462,-6.071105,-6.478654],[-8.049614,-9.478372,4.265184,-7.728955,-8.690823],[6.541756,-3.871723,-4.628159,3.058277,-8.571077],[-7.857939,5.418253,-2.279984,-2.703661,-2.530337],[5.006523,-8.394193,-2.889167,-6.672648,-7.960717],[5.418641,-4.470874,-4.066821,-0.032006,1.084407],[-4.113900,0.845576,-1.302770,-0.606113,-3.390631],[8.619155,8.702324,4.625300,7.933472,-0.897871]],[[4.960055,7.501280,8.274726,-4.738421,5.025945],[-8.951933,3.916684,8.118002,3.757291,8.205516],[-1.647924,0.700775,-1.668580,9.776053,4.084715],[4.723824,9.356056,-7.236044,5.293288,0.695162],[-8.906839,-5.151724,2.302660,8.663094,0.133619],[-0.749955,3.456821,5.671163,9.508180,6.171946],[2.187040,7.379236,5.313484,9.809435,-4.458029],[8.311955,6.412139,-6.974481,-9.927916,9.425058],[-1.071076,0.505029,-0.434012,6.921336,-5.392102],[-9.740946,-9.136060,-9.058724,5.789948,-9.335923],[-1.802794,-8.976700,0.037035,-1.911997,-6.676825],[-0.236753,-2.597257,-0.806177,-3.561825,-9.376747]],[[-1.945863,-4.050900,-3.781821,-4.787732,1.856917],[5.694347,-1.668387,6.275378,-5.464912,2.762809],[5.323393,-4.341134,-6.346084,-9.737892,-7.343428],[2.614728,3.679596,6.635205,-4.040231,1.684310],[-1.044300,-7.322176,-1.871409,2.542882,4.166160],[3.204545,-3.755882,-6.811732,-2.758840,7.560191],[9.765670,2.920714,4.208641,-1.837072,-0.881561],[6.678525,-0.929053,-6.005698,5.126294,-0.571131],[-2.926161,2.920920,8.627417,6.430693,2.729909],[-3.093112,4.241090,5.367413,5.785221,6.502785],[-4.128044,-6.089608,-2.662988,6.240309,-8.318503],[-5.852313,-1.241539,0.271354,-4.629927,9.741311]],[[-2.896045,-8.797634,-0.645171,-6.781588,-5.951088],[6.793098,-4.881935,6.744886,-2.273960,-5.608166],[-5.332661,-0.916572,-9.486469,-5.589320,-2.498957],[-9.516200,-1.523990,7.387200,3.198348,-0.145464],[6.373686,-4.998513,4.719974,-0.190828,-2.328576],[4.497986,3.386792,1.531142,6.440440,-8.412242],[-1.397212,-7.906972,-0.897691,9.103609,7.616950],[7.287501,2.788918,-3.946496,4.026931,1.514554],[5.832876,0.556291,-6.273812,6.397213,-8.889023],[3.672420,-8.358399,8.086202,7.276658,-7.939245],[-5.480796,7.515262,2.217779,2.080208,-7.766323],[8.833539,8.895096,3.491306,5.795315,1.537836]],[[-1.974244,-8.436476,0.941070,0.701382,-6.330629],[9.021036,9.914441,5.298034,8.347921,-5.240149],[3.164646,0.590708,-0.114364,-4.317787,5.662705],[8.347612,-9.275120,0.886822,-9.541994,4.546766],[-2.773857,0.488897,0.131324,1.873935,1.653393],[2.808739,4.424588,1.486863,7.401669,6.654780],[-5.560343,-5.910165,3.712692,-7.202342,4.967465],[-8.644743,-1.824278,0.957225,-3.680971,-5.085669],[-2.159538,-8.212942,9.691928,7.707305,3.026595],[1.265247,-6.243200,9.838341,0.508488,7.208425],[6.243849,0.929176,5.056546,2.060645,3.155450],[-0.288102,2.829432,9.007457,-6.294753,2.055988]],[[9.178528,2.112177,8.025057,0.019644,-8.164661],[5.166629,7.228896,-4.235927,4.678313,-2.217593],[8.350037,5.685173,-8.577867,4.952119,6.171512],[-2.568157,-8.533306,-6.554779,-7.992934,-1.945474],[-8.056733,-2.812751,-2.276951,7.614604,2.476138],[-4.558420,-2.445760,4.458974,-1.187565,7.560511],[-7.248867,4.496295,-9.261275,-6.599479,5.602396],[3.884655,-0.133056,4.855738,-8.944578,-2.773831],[7.993615,8.874588,-8.513493,-2.535265,6.326237],[3.598142,4.035968,-9.368118,-7.603417,2.415691],[-4.090147,-4.087823,-2.237170,1.549820,-5.968804],[-5.023551,3.049899,4.589367,3.433261,-7.855803]],[[7.010738,-1.122108,-6.258164,-7.257797,5.789581],[3.413699,8.917355,-1.761758,9.181324,-6.431488],[9.157236,8.874632,-5.146690,3.539873,-1.812144],[2.404837,5.822608,6.103881,-4.878538,-6.661020],[9.199522,7.958945,9.446466,-8.309588,-6.063620],[-4.156161,-4.250317,-6.107115,-9.788213,-6.040268],[0.406470,4.108072,0.973334,4.677948,-7.464635],[8.686505,1.525639,-7.371452,-9.269741,2.726395],[-2.101298,-8.682942,-3.269047,3.721004,-4.738597],[2.919094,5.427058,-8.709128,2.281567,5.256649],[-7.943065,7.275526,8.166974,-2.996329,6.107560],[-0.813682,-3.045173,-2.705749,3.294379,4.544152]],[[2.849401,-3.006301,0.058536,6.817014,-4.761068],[3.026536,6.404247,-9.667064,-2.300299,-2.484120],[-4.853525,0.230414,9.585301,6.232661,-4.392072],[3.548471,-6.860635,-2.780644,-0.592723,-9.482186],[-0.852970,2.018593,0.504808,0.017647,7.637113],[7.504098,-1.061010,-0.003704,-9.843459,4.668759],[-8.839745,-0.119212,-3.905208,0.985474,-3.271521],[0.399120,3.477508,-3.355983,-5.047223,-2.556752],[1.326920,7.167675,6.025219,1.687532,-7.904791],[-9.083620,3.068642,8.124961,9.177809,1.239619],[-9.448772,2.071933,4.589591,-6.100833,7.442808],[4.425269,-4.482973,-2.059660,-8.986681,1.229111]],[[-1.578797,-6.295925,-9.878043,1.102176,-6.422162],[2.813010,1.773814,-0.671910,-4.012139,-9.459110],[2.274734,-7.249807,4.624016,0.381261,8.593001],[-0.439795,-5.710793,9.610511,-6.556121,3.446976],[9.546752,9.249131,6.514317,-5.479340,6.901159],[8.248787,-9.569090,-6.517859,-9.848881,-6.984724],[4.335320,-4.315752,0.964060,-7.778108,-0.878838],[-7.618752,0.247320,4.648704,1.157517,-2.192139],[-9.347277,5.719044,-7.627437,-4.485942,-7.170554],[-8.881094,6.746393,7.655569,-7.878475,-9.302669],[9.235266,4.538276,6.235560,1.923489,-8.588236],[5.794368,8.688941,5.976465,-7.334706,1.572464]]], dtype = "float32")#candidate|6142|(11, 12, 5)|const|float32
uop_6143 = relay.cosh(const_6142.astype('float32')) # shape=(11, 12, 5)
func_4238_call = mod.get_global_var('func_4238')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_6157 = relay.TupleGetItem(func_4238_call(), 0)
call_6158 = relay.TupleGetItem(func_4239_call(), 0)
uop_6159 = relay.tan(uop_6143.astype('float64')) # shape=(11, 12, 5)
uop_6163 = relay.exp(uop_6143.astype('float64')) # shape=(11, 12, 5)
output = relay.Tuple([call_6157,uop_6159,uop_6163,])
output2 = relay.Tuple([call_6158,uop_6159,uop_6163,])
func_6165 = relay.Function([], output)
mod['func_6165'] = func_6165
mod = relay.transform.InferType()(mod)
mutated_mod['func_6165'] = func_6165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6165_call = mutated_mod.get_global_var('func_6165')
call_6166 = func_6165_call()
output = call_6166
func_6167 = relay.Function([], output)
mutated_mod['func_6167'] = func_6167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6171 = relay.var("var_6171", dtype = "uint16", shape = (10, 16, 1))#candidate|6171|(10, 16, 1)|var|uint16
var_6172 = relay.var("var_6172", dtype = "uint16", shape = (10, 16, 6))#candidate|6172|(10, 16, 6)|var|uint16
bop_6173 = relay.minimum(var_6171.astype('uint16'), var_6172.astype('uint16')) # shape=(10, 16, 6)
func_4787_call = mod.get_global_var('func_4787')
func_4788_call = mutated_mod.get_global_var('func_4788')
call_6176 = func_4787_call()
call_6177 = func_4787_call()
output = relay.Tuple([bop_6173,call_6176,])
output2 = relay.Tuple([bop_6173,call_6177,])
func_6180 = relay.Function([var_6171,var_6172,], output)
mod['func_6180'] = func_6180
mod = relay.transform.InferType()(mod)
mutated_mod['func_6180'] = func_6180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6180_call = mutated_mod.get_global_var('func_6180')
var_6182 = relay.var("var_6182", dtype = "uint16", shape = (10, 16, 1))#candidate|6182|(10, 16, 1)|var|uint16
var_6183 = relay.var("var_6183", dtype = "uint16", shape = (10, 16, 6))#candidate|6183|(10, 16, 6)|var|uint16
call_6181 = func_6180_call(var_6182,var_6183,)
output = call_6181
func_6184 = relay.Function([var_6182,var_6183,], output)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4238_call = mod.get_global_var('func_4238')
func_4239_call = mutated_mod.get_global_var('func_4239')
call_6210 = relay.TupleGetItem(func_4238_call(), 0)
call_6211 = relay.TupleGetItem(func_4239_call(), 0)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_6224 = relay.TupleGetItem(func_2382_call(), 0)
call_6225 = relay.TupleGetItem(func_2383_call(), 0)
func_3692_call = mod.get_global_var('func_3692')
func_3695_call = mutated_mod.get_global_var('func_3695')
const_6233 = relay.const([-8.319791,9.146617,-0.885881,6.707478,-8.457194,-1.418374,7.894873,-9.405851,-7.660183,-4.576818,-2.494039,-6.765661,2.262810,5.666936,-3.696885,2.319647,-1.436085,4.637250,-3.838154,2.203976,-2.066135,5.117269,7.254024,9.307700,4.300569,0.988050,-2.693526,-0.065358,-0.015966,-9.769705,-0.815462,0.286723,8.254789,8.933291,-2.583715,-5.773759,-9.361188,-7.804294,0.379027,-9.634617,0.518311,-8.701383,7.145154,1.920820,-8.732269,3.907124,-3.735388,7.850292,8.662598,6.374525,-2.844083,9.795474,5.390853,-1.354815,5.711775,8.847642,-3.337765,-8.706625,-9.314895,-9.332088,-0.832585,9.866024,-9.466862,-0.195515,6.401620,7.213044,6.817841,3.062925,-7.180701,-9.863210,-4.998462,2.057302,6.433190,-6.868738,1.140620,5.809165,-6.287129,-3.509691,9.598891,9.233718,-7.432740,-7.236354,3.342618,8.542940,0.676466,3.495907,2.915000,2.054619,5.410393,9.475970,-2.645373,-6.317625,5.375420,4.330564,9.569242,-7.375274,-4.036953,8.636840,-7.714809,9.036324,-4.919463,8.058379,8.971350,8.951851,-3.171870,-1.985044,3.523184,-6.014418,9.704472,7.860292,-9.749846,8.648046,1.432600,-1.544860,8.313983,0.573924,-2.682764,0.963415,1.612461,-0.409421,1.931657,-4.668408,9.598983,-2.443029,9.523404,0.828752,0.455693,-2.155738,-1.618712,-1.624982,-6.719879,0.606470,-7.819469,5.513403,0.451995,9.754019,-4.582558,1.670629,-6.794100,-4.379275,-8.746957,7.328418,-7.412962,-8.331866,-2.621396,-3.099236,-9.042944,-7.805558,2.953735,0.858609,3.933174,2.070547,-2.338637,-9.000005,-5.648237,-0.101185,-9.962172,-6.522573,1.727781,0.736556,2.096061,4.615439,-6.707012,-3.172867,3.385434,-6.074923,7.701724,-4.634755,1.651848,-5.068874,5.127353,-2.918350,4.990900,5.865214,0.834530,-2.393897,-4.517632,-2.708602,1.138824,-2.716692,-4.709755,-2.952416,4.338651,-6.578893,8.073802,-2.346069,2.331183,-4.381291,-1.126209,-0.839770,4.623821,-2.351859,-5.690748,-1.158804,-9.142656,-2.871200,6.744410,-9.565197,4.402345,0.931919,7.771211,2.259086,-8.822549,2.196907,1.542942,-1.946365,2.893073,6.954453,-9.393145,3.654255,-4.013312,1.159118,-8.602381,-8.504398,-5.861821,-1.895887,-3.883902,0.901149,-1.230459,8.979611,-5.410571,-2.598046,-8.595920,8.036461,9.710771,2.756851,-5.385150,1.162008,-3.486930,-6.474982,-9.563850,3.736535,-2.071588,6.939913,1.166898,2.813038,5.378625,7.957480,5.628759,-8.918775], dtype = "float64")#candidate|6233|(240,)|const|float64
call_6232 = relay.TupleGetItem(func_3692_call(relay.reshape(const_6233.astype('float64'), [10, 4, 6])), 1)
call_6234 = relay.TupleGetItem(func_3695_call(relay.reshape(const_6233.astype('float64'), [10, 4, 6])), 1)
bop_6238 = relay.logical_and(call_6232.astype('bool'), relay.reshape(const_6233.astype('bool'), relay.shape_of(call_6232))) # shape=(10, 4, 6)
bop_6241 = relay.logical_and(call_6234.astype('bool'), relay.reshape(const_6233.astype('bool'), relay.shape_of(call_6234))) # shape=(10, 4, 6)
func_3829_call = mod.get_global_var('func_3829')
func_3831_call = mutated_mod.get_global_var('func_3831')
var_6255 = relay.var("var_6255", dtype = "float32", shape = (2, 72))#candidate|6255|(2, 72)|var|float32
call_6254 = func_3829_call(relay.reshape(var_6255.astype('float32'), [9, 2, 8]))
call_6256 = func_3829_call(relay.reshape(var_6255.astype('float32'), [9, 2, 8]))
func_5290_call = mod.get_global_var('func_5290')
func_5293_call = mutated_mod.get_global_var('func_5293')
var_6264 = relay.var("var_6264", dtype = "uint16", shape = ())#candidate|6264|()|var|uint16
call_6263 = relay.TupleGetItem(func_5290_call(relay.reshape(bop_6238.astype('int64'), [5, 16, 3]), relay.reshape(var_6264.astype('uint16'), []), ), 2)
call_6265 = relay.TupleGetItem(func_5293_call(relay.reshape(bop_6238.astype('int64'), [5, 16, 3]), relay.reshape(var_6264.astype('uint16'), []), ), 2)
output = relay.Tuple([call_6210,call_6224,bop_6238,call_6254,var_6255,call_6263,var_6264,])
output2 = relay.Tuple([call_6211,call_6225,bop_6241,call_6256,var_6255,call_6265,var_6264,])
func_6266 = relay.Function([var_6255,var_6264,], output)
mod['func_6266'] = func_6266
mod = relay.transform.InferType()(mod)
mutated_mod['func_6266'] = func_6266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6266_call = mutated_mod.get_global_var('func_6266')
var_6268 = relay.var("var_6268", dtype = "float32", shape = (2, 72))#candidate|6268|(2, 72)|var|float32
var_6269 = relay.var("var_6269", dtype = "uint16", shape = ())#candidate|6269|()|var|uint16
call_6267 = func_6266_call(var_6268,var_6269,)
output = call_6267
func_6270 = relay.Function([var_6268,var_6269,], output)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mod.get_global_var('func_5504')
func_5506_call = mutated_mod.get_global_var('func_5506')
call_6277 = relay.TupleGetItem(func_5504_call(), 0)
call_6278 = relay.TupleGetItem(func_5506_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
const_6287 = relay.const([[-4.662685,0.040181,4.520035,-7.459378,-9.596905,9.866881,4.445243,5.220344,7.845670,3.052614,2.571296,-7.863945,-6.378824,6.660444,-2.306943,-7.143443,2.555335,-1.107364,-2.304282,-6.150983,6.725012,7.827732,-8.380785,-1.194333,-2.735479,0.204194,3.648127,-1.790803,-2.331041,1.806831,-3.447785,8.903379,1.332109,2.562956,-4.507746,-9.002110,4.375627,-5.127941,7.775250,0.628771,-3.638142,2.254727,-1.462022,9.141955,9.423188,1.910787,9.261498,6.539479,7.287835,-7.115498,-8.111804,9.394187,-2.265500,3.227712,-5.089641,2.426482,-2.305604,1.889928,-4.401382,6.330785,8.804599,-1.968110,9.080183,7.201432,-5.427847,-4.471690,-9.860971,-4.369443,6.075076,-9.290041,-8.669927,-5.134881,-8.164619,-9.659769,2.722983,0.793743,-6.192246,9.608187,1.562681,-2.479272,-6.889578,0.430350,0.450523,8.435842,2.537485,-7.832866,9.284352,-8.373316,-0.336819,4.315660,-1.459656,-4.340092,-4.465468,-8.475493,-2.813275,3.944696,8.868070,-2.399821,-0.163421,7.383870,2.067189,2.464247,1.633526,8.773033,-8.171721,8.291384,6.225950,-0.575794,0.511175,5.352767,7.915100,-2.130492,6.126174,0.920395,-8.665477,-9.058419,3.583210,-2.830833,9.255993,-6.678671,-5.137057,6.227156,-7.161245,5.762407,-9.582626,6.263332,6.951709,0.265713,-2.748151,-6.644121,0.902790,1.391232,8.243725,2.663700,4.648161,-8.833606,2.954163,8.419862,1.498097,4.115757,5.621213,-4.573856,-7.438228,-4.572464,-7.527049,1.487051,3.328146,-8.787368,7.275633,6.738316,-5.299735,-0.602591,0.070524,4.837285,6.158183,0.540239,7.912847,2.214251,7.716757,5.735359,1.839397,2.033145,5.692906,4.831443,-5.191394,3.919938,-4.541686,-4.139572,7.179040,4.022502,3.043081,9.122669,-8.147302,-8.539136,-0.354490,8.005960,4.218403,-3.559631,4.287507,6.359998]], dtype = "float64")#candidate|6287|(1, 180)|const|float64
call_6286 = relay.TupleGetItem(func_4407_call(relay.reshape(const_6287.astype('float64'), [10, 9, 2])), 1)
call_6288 = relay.TupleGetItem(func_4409_call(relay.reshape(const_6287.astype('float64'), [10, 9, 2])), 1)
func_5011_call = mod.get_global_var('func_5011')
func_5013_call = mutated_mod.get_global_var('func_5013')
call_6290 = relay.TupleGetItem(func_5011_call(relay.reshape(call_6277.astype('float64'), [8, 8, 9])), 0)
call_6291 = relay.TupleGetItem(func_5013_call(relay.reshape(call_6277.astype('float64'), [8, 8, 9])), 0)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_6299 = relay.TupleGetItem(func_2382_call(), 0)
call_6300 = relay.TupleGetItem(func_2383_call(), 0)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_6305 = relay.TupleGetItem(func_5084_call(), 0)
call_6306 = relay.TupleGetItem(func_5086_call(), 0)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_6321 = relay.TupleGetItem(func_5084_call(), 0)
call_6322 = relay.TupleGetItem(func_5086_call(), 0)
output = relay.Tuple([call_6277,call_6286,const_6287,call_6290,call_6299,call_6305,call_6321,])
output2 = relay.Tuple([call_6278,call_6288,const_6287,call_6291,call_6300,call_6306,call_6322,])
func_6324 = relay.Function([], output)
mod['func_6324'] = func_6324
mod = relay.transform.InferType()(mod)
output = func_6324()
func_6325 = relay.Function([], output)
mutated_mod['func_6325'] = func_6325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_6376 = relay.TupleGetItem(func_2451_call(), 1)
call_6377 = relay.TupleGetItem(func_2452_call(), 1)
output = relay.Tuple([call_6376,])
output2 = relay.Tuple([call_6377,])
func_6379 = relay.Function([], output)
mod['func_6379'] = func_6379
mod = relay.transform.InferType()(mod)
output = func_6379()
func_6380 = relay.Function([], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6069_call = mod.get_global_var('func_6069')
func_6070_call = mutated_mod.get_global_var('func_6070')
call_6383 = relay.TupleGetItem(func_6069_call(), 1)
call_6384 = relay.TupleGetItem(func_6070_call(), 1)
output = call_6383
output2 = call_6384
func_6386 = relay.Function([], output)
mod['func_6386'] = func_6386
mod = relay.transform.InferType()(mod)
mutated_mod['func_6386'] = func_6386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6386_call = mutated_mod.get_global_var('func_6386')
call_6387 = func_6386_call()
output = call_6387
func_6388 = relay.Function([], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1202_call = mod.get_global_var('func_1202')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_6460 = func_1202_call()
call_6461 = func_1202_call()
output = relay.Tuple([call_6460,])
output2 = relay.Tuple([call_6461,])
func_6462 = relay.Function([], output)
mod['func_6462'] = func_6462
mod = relay.transform.InferType()(mod)
mutated_mod['func_6462'] = func_6462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6462_call = mutated_mod.get_global_var('func_6462')
call_6463 = func_6462_call()
output = call_6463
func_6464 = relay.Function([], output)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6379_call = mod.get_global_var('func_6379')
func_6380_call = mutated_mod.get_global_var('func_6380')
call_6470 = relay.TupleGetItem(func_6379_call(), 0)
call_6471 = relay.TupleGetItem(func_6380_call(), 0)
output = relay.Tuple([call_6470,])
output2 = relay.Tuple([call_6471,])
func_6481 = relay.Function([], output)
mod['func_6481'] = func_6481
mod = relay.transform.InferType()(mod)
output = func_6481()
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_6490 = func_4178_call()
call_6491 = func_4178_call()
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_6494 = relay.TupleGetItem(func_2382_call(), 0)
call_6495 = relay.TupleGetItem(func_2383_call(), 0)
output = relay.Tuple([call_6490,call_6494,])
output2 = relay.Tuple([call_6491,call_6495,])
func_6502 = relay.Function([], output)
mod['func_6502'] = func_6502
mod = relay.transform.InferType()(mod)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mutated_mod.get_global_var('func_6502')
call_6503 = func_6502_call()
output = call_6503
func_6504 = relay.Function([], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mod.get_global_var('func_5936')
func_5937_call = mutated_mod.get_global_var('func_5937')
call_6505 = relay.TupleGetItem(func_5936_call(), 0)
call_6506 = relay.TupleGetItem(func_5937_call(), 0)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_6511 = func_3311_call()
call_6512 = func_3311_call()
func_6165_call = mod.get_global_var('func_6165')
func_6167_call = mutated_mod.get_global_var('func_6167')
call_6520 = relay.TupleGetItem(func_6165_call(), 1)
call_6521 = relay.TupleGetItem(func_6167_call(), 1)
output = relay.Tuple([call_6505,call_6511,call_6520,])
output2 = relay.Tuple([call_6506,call_6512,call_6521,])
func_6524 = relay.Function([], output)
mod['func_6524'] = func_6524
mod = relay.transform.InferType()(mod)
output = func_6524()
func_6525 = relay.Function([], output)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3209_call = mod.get_global_var('func_3209')
func_3211_call = mutated_mod.get_global_var('func_3211')
call_6543 = relay.TupleGetItem(func_3209_call(), 4)
call_6544 = relay.TupleGetItem(func_3211_call(), 4)
func_4998_call = mod.get_global_var('func_4998')
func_5000_call = mutated_mod.get_global_var('func_5000')
call_6546 = relay.TupleGetItem(func_4998_call(), 0)
call_6547 = relay.TupleGetItem(func_5000_call(), 0)
output = relay.Tuple([call_6543,call_6546,])
output2 = relay.Tuple([call_6544,call_6547,])
func_6553 = relay.Function([], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
output = func_6553()
func_6554 = relay.Function([], output)
mutated_mod['func_6554'] = func_6554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1751_call = mod.get_global_var('func_1751')
func_1753_call = mutated_mod.get_global_var('func_1753')
call_6598 = relay.TupleGetItem(func_1751_call(), 0)
call_6599 = relay.TupleGetItem(func_1753_call(), 0)
func_5377_call = mod.get_global_var('func_5377')
func_5378_call = mutated_mod.get_global_var('func_5378')
call_6601 = relay.TupleGetItem(func_5377_call(), 0)
call_6602 = relay.TupleGetItem(func_5378_call(), 0)
func_2626_call = mod.get_global_var('func_2626')
func_2629_call = mutated_mod.get_global_var('func_2629')
var_6630 = relay.var("var_6630", dtype = "float64", shape = (1, 1792))#candidate|6630|(1, 1792)|var|float64
const_6631 = relay.const([8,-3,-1,-9,-10,-6,2,-1,-1,-3,8,3,6,2,-3,-3,3,3,2,-7,-9,-9,10,5,10,8,10,6,7,5,1,3,5,-7,10,-1,10,-1,4,10,4,4,1,9,9,8,-3,5,-10,6,10,-10,-9,-9,-9,-7,-6,4,-2,-3,-10,-3,5,10,2,-5,3,-1,8,-5,8,7,-2,9,-7,-5,7,-9,-5,8,-5,8,-8,-10,10,3,-7,1,-3,-3,7,7,-3,-8,5,6,9,-8,6,5,-5,-5,9,2,-8,-2,3,1,-8,-6,5,3,-7,-10,2,8,-4,-10,9,-4,-6,-4,-8,7,-3,6,-5,9,1,3,-7,-1,-4,-3,-4,1,-3,-3,7,-4,-10,-6,1,-7,9,8,-2,6,-3,-8,3,-8,-4,7,10,-2,2,-7,7,9,-5,1,-7,3,5,-6,-1,-5,7,8,3,-10,-10,-2,-1,5,8,-3,-3,5,-8,-6,-9,-5,5,6,3,-5,-10,-4,-7,-7,2,-10,-6,3,-9,-4,10,-5,-5,2,-6,3,-3,-9,5,-5,-7,4,-1,-9,5,-9,7,1,6,9,2,9,10,-8,-5,-4,8,-8,-2,-1,4,-4,-3,-2,10,-10,5,8,7,-10,8,7,-1,-7,3,2,8,-8,-10,-2,2,-3,-3,-2,-6,3,8,10,-6,-2,6,8,-9,7,-7,-2,-2,5,5,-4,-4,4,8,1,2,-2,-7,-2,-7,8,7,4,-4,-5,-10,9,-7,-6,-7,-8,2,7,2,-8,8,4,7,-5,9,-1,8,-1,-4,-9,-5,10,-8,-7,-6,-1,10,-8,-5,7,2,3,7,-4,-2,-2,9,-6,-8,-9,-5,-9,-6,-1,1,-7,5,2,5,-3,-10,-5,8,7,-4,2,-5,-6,7,3,7,-2,9,4,-1,-10,1,-1,-7,-5,-3,10,-8,-10,-6,-5,-3,3,5,6,4,9,1,6,-6,-1,-8,8,9,-4,-3,6,-8,-7,-8,-8,-9,2,7,-10,-9,-4,3,-6,10,-7,-9,-8,-4,9,-8,-6,4,-8,6,-3,-8,3,-7,-4,-6,-1,-6,1,5,-3,7,-1,9,-1,7,9,1,9,-10,-6,-5,-9,-9,10,10,-9,5,7,1,-9,4,-6,-10,2,9,4,8,-3,-6,10,-8,-5,3,9,2,4,5,-8,6,-5,-9,-9,6,1,-6,-10,-2,-1,8,8,-9,-5,-2,-1,4,-5,9,-9,5,9,-3,-10,-3,-1,-1,1,1,6,9,-4,-7,8,-1,9,9,9,-6,-8,-10,-1,5,-2,-10,-10,8,-3,-10,-1,8,-9,7,-8,7,-5,4,-7,-10,5,-9,-10,-10,-4,-4,3,4,-6,10,-7,1,-3,7,-3,-10,8,5,8,3,-8,-6,8,5,-4,-9,1,10,4,-3,-8,-5,-4,-8,-10,4,-7,-8,-2,-10,-7,7,8,3,7,-9,1,-3,6,5,2,3,2,4,-6,2,5,3,-7,7,2,-10,10,8,-7,-4,-6,8,-10,-4,7,2,-5,7,-1,5,8,8,9,8,3,-4,-8,-7,-5,7,-6,3,-1,-3,-5,-10,4,-3,-6,-8,2,7,4,-8,-4,-10,3,-4,-6,-9,-5,-3,8,1,-6,2,3,-8,3,6,3,2,1,-10,-2,9,-9,4,10,-9,6,-4,3,6,10,-5,-1,-8,-2,-1,-9,-2,3,-4,-3,7,8,-8,7,-9,9,-1,3,-3,10,-1,-2,-7,-1,8,-6,3,8,5,7,-2,9,7,3,-9,1,3,-5,10,1,-9,-3,-1,6,-6,-1,1,4,-4,-5,-1,4,-4,4,2,2,-2,-6,5,10,-4,4,3,-3,-6,-1,-7,-10,-2,4,10,7,-10,3,-4,-1,-6,-6,-2,7,7,4,2,6,-8,8,-8,-8,-10,6,-5,-4,1,-9,9,8,3,2,5,9,-10,-1,-4,9,-3,-7,1,9,-3,4,6,10,3,5,1,1,-3,-2,-5,-10,-5,5,10,7,-6,-5,-2,-4,-8,2,2,-5,-10,-1,-7,1,8,9,2,3,-8,2,5,4,2,-7,1,-1,-8,-6,-5,-6,-5,-3,2,6,-4,9,-2,-5,10,3,1,-4,8,3,-7,8,-5,-8,7,-8,-2,-10,-9,-1,6,-10,-9,7,4,-3,-2,-10,2,-5,-4,7,7,10,-4,-5,-6,1,-7,3,10,-2,-6,9,-2,4,9,-2,3,-2,-5,-9,-2,-6,-9,-10,-8,-1,-5,-2,-7,5,-2,-2,-10,-9,-3,-8,9,6,7,-6,8,-9,10,-4,-2,2,-5,-6,-3,4,5,3,-7,1,6,-1,5,-1,-3,-1,-3,6,1,5,-9,2,-10,-6,-5,-3,4,-7,-3,-5,1,-1,1,2,-1,8,7,-2,6,-6,-6,-3,-2,-3,-7,3,-4,-2,-4,-1,-5,-5,-8,9,-6,6,-5,-6,7,2,-6,4,9,-9,2,8,-8,8,-1,-1,-4,-2,-5,-6,6,8,2,3,8,4,1,-5,-6,-6,-4,5,3,-6,4,3,-1,1], dtype = "int8")#candidate|6631|(960,)|const|int8
call_6629 = relay.TupleGetItem(func_2626_call(relay.reshape(var_6630.astype('float64'), [4, 448]), relay.reshape(const_6631.astype('int8'), [960,]), ), 5)
call_6632 = relay.TupleGetItem(func_2629_call(relay.reshape(var_6630.astype('float64'), [4, 448]), relay.reshape(const_6631.astype('int8'), [960,]), ), 5)
func_6386_call = mod.get_global_var('func_6386')
func_6388_call = mutated_mod.get_global_var('func_6388')
call_6633 = func_6386_call()
call_6634 = func_6386_call()
output = relay.Tuple([call_6598,call_6601,call_6629,var_6630,const_6631,call_6633,])
output2 = relay.Tuple([call_6599,call_6602,call_6632,var_6630,const_6631,call_6634,])
func_6636 = relay.Function([var_6630,], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
var_6637 = relay.var("var_6637", dtype = "float64", shape = (1, 1792))#candidate|6637|(1, 1792)|var|float64
output = func_6636(var_6637)
func_6638 = relay.Function([var_6637], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6662 = relay.var("var_6662", dtype = "float32", shape = (4, 8, 13))#candidate|6662|(4, 8, 13)|var|float32
uop_6663 = relay.acosh(var_6662.astype('float32')) # shape=(4, 8, 13)
func_1702_call = mod.get_global_var('func_1702')
func_1706_call = mutated_mod.get_global_var('func_1706')
var_6673 = relay.var("var_6673", dtype = "uint16", shape = ())#candidate|6673|()|var|uint16
var_6674 = relay.var("var_6674", dtype = "uint16", shape = (392,))#candidate|6674|(392,)|var|uint16
var_6675 = relay.var("var_6675", dtype = "bool", shape = (576,))#candidate|6675|(576,)|var|bool
call_6672 = relay.TupleGetItem(func_1702_call(relay.reshape(var_6673.astype('uint16'), []), relay.reshape(var_6674.astype('uint16'), [392,]), relay.reshape(var_6675.astype('bool'), [8, 8, 9]), ), 1)
call_6676 = relay.TupleGetItem(func_1706_call(relay.reshape(var_6673.astype('uint16'), []), relay.reshape(var_6674.astype('uint16'), [392,]), relay.reshape(var_6675.astype('bool'), [8, 8, 9]), ), 1)
output = relay.Tuple([uop_6663,call_6672,var_6673,var_6674,var_6675,])
output2 = relay.Tuple([uop_6663,call_6676,var_6673,var_6674,var_6675,])
func_6678 = relay.Function([var_6662,var_6673,var_6674,var_6675,], output)
mod['func_6678'] = func_6678
mod = relay.transform.InferType()(mod)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6678_call = mutated_mod.get_global_var('func_6678')
var_6680 = relay.var("var_6680", dtype = "float32", shape = (4, 8, 13))#candidate|6680|(4, 8, 13)|var|float32
var_6681 = relay.var("var_6681", dtype = "uint16", shape = ())#candidate|6681|()|var|uint16
var_6682 = relay.var("var_6682", dtype = "uint16", shape = (392,))#candidate|6682|(392,)|var|uint16
var_6683 = relay.var("var_6683", dtype = "bool", shape = (576,))#candidate|6683|(576,)|var|bool
call_6679 = func_6678_call(var_6680,var_6681,var_6682,var_6683,)
output = call_6679
func_6684 = relay.Function([var_6680,var_6681,var_6682,var_6683,], output)
mutated_mod['func_6684'] = func_6684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2451_call = mod.get_global_var('func_2451')
func_2452_call = mutated_mod.get_global_var('func_2452')
call_6709 = relay.TupleGetItem(func_2451_call(), 0)
call_6710 = relay.TupleGetItem(func_2452_call(), 0)
output = call_6709
output2 = call_6710
func_6726 = relay.Function([], output)
mod['func_6726'] = func_6726
mod = relay.transform.InferType()(mod)
output = func_6726()
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4398_call = mod.get_global_var('func_4398')
func_4399_call = mutated_mod.get_global_var('func_4399')
call_6760 = relay.TupleGetItem(func_4398_call(), 1)
call_6761 = relay.TupleGetItem(func_4399_call(), 1)
func_4649_call = mod.get_global_var('func_4649')
func_4651_call = mutated_mod.get_global_var('func_4651')
const_6778 = relay.const([0.607506,-5.008718,-2.940616,3.798539,0.836725,-4.333336,3.437707,1.552446,-0.130011,3.857193,-8.490065,-9.762262,-7.885653,-4.597485,4.101896,-0.323633,-2.864094,-4.527970,-2.746604,-6.879816,6.647248,3.011202,9.832645,6.598671,8.436594,-7.216528,6.951144,2.801926,6.148005,3.738651,7.338011,3.251144,6.195738,-4.217171,6.407042,5.277442,9.546096,-1.273116,-7.800747,-7.272644,-1.487529,4.981937,-8.893347,-6.721085,-8.031118,-5.338474,7.193695,6.925989,-6.042471,-7.552941,-3.330321,-7.494570,-0.346848,-7.892428,-0.946535,3.293142,7.681104,-3.990819,3.494661,3.517749,1.966648,6.803323,7.852847,8.021447,-0.312172,2.012638,6.819881,-0.397738,-0.813378,-7.517657,1.343337,-8.905316,-0.830687,-0.849639,3.906247,0.121629,-3.342809,1.632519,8.466287,4.104867,-3.444999,-4.227687,-5.167962,-5.539754,6.667453,8.299827,-2.879880,8.607051,3.133029,-8.777886,3.989689,7.104439,-9.086312,2.498837,7.680786,0.404046,-9.722758,6.726855,-9.221387,8.829802,0.176568,-6.978034,-8.194949,-1.921217,-8.641542,-7.322171,1.558098,5.640408,-8.520148,8.906953,0.757377,-4.162786,1.783347,-6.008709,7.392923,0.381259,-1.172545,-2.838360,-4.854800,-0.750670,6.552507,-5.370459,-6.398736,-7.025976,4.627777,-3.499441,-0.577948,-8.096364,7.514769,7.056288,-4.487555,9.937967,-5.631342,-4.064960,-9.589079,3.619095,0.794316,-1.820632,5.754804,7.320744,3.023551,6.753514,-5.259461,9.237042,-8.680075,-4.346447,8.891449,-8.254150,6.099647,-4.688302,4.558597,0.206626,-5.623635,3.582595,-1.583581,-9.304988,-2.734734,6.205317,5.311596,-2.092818,3.976058,-3.041171,-4.197508,-3.147548,6.867859,-3.819793,8.166764,-6.679770,0.717732,0.520028,-3.378889,0.057879,-5.703728,0.160346,1.435879,7.623416,-3.278630,-3.555789,-4.545753,-9.256354,7.255465,7.960065,-4.320616,-0.006000,6.660273,9.701473,6.794637,-3.940042,9.705783,1.634330,-3.618249,3.614049,1.084464,5.079844,-5.888967,8.225330,-5.077523,-3.559323,-6.015228,1.585860,3.318371,5.893564,9.412576,-3.582633,2.955003,-6.894847,-0.746948,-6.386946,1.132309,-8.284539,7.282032,2.656509,-3.730225,-5.164983,2.134192,-1.113475,-2.437282,4.481881,2.841662,-3.387099,-0.138634,-4.739399,-6.912950,-0.275060,5.618958,-1.044620,-6.339047,-2.172900,8.025896,-1.179692,-9.155173,4.168005,-1.019423,6.969491,-1.813964,4.119745,-2.213581,-9.801161,-8.736625,-1.829554,6.572299,4.352884,-6.152761,-7.598726,-5.023721,-7.477099,0.309905,-1.151725,2.275585,5.606149,8.669903,-2.195744,8.493360,5.079147,4.927957,0.339963,-7.415748,-0.942929,-3.739644,-6.900750,4.999797,-6.808722,1.435464,4.805233,-4.538169,-8.847621,4.996720,0.776897,7.776991,-2.110341,-3.624007,9.969497,-8.117272,8.699773,-1.319833,-5.781652,8.507103,-6.498767,3.733080,0.166189,5.514099,4.761417,-2.112893,4.001111,4.450409,-8.812005,9.709646,-7.304730,6.086661,-8.401627,-4.313243,-6.855587,3.376851,-1.047949,-7.343969,-2.016807,9.630885,-5.166454,-5.355224,-2.190091,2.818193,3.074411,-9.148694,2.144226,-1.399773,-4.214823,-5.734526,-5.327502,6.576212,-9.340839,-8.830673,8.177807,-6.110723,1.871872,2.284530,0.435081,-1.691831,0.405590,-6.537526,-7.125989,7.514025,1.109513,6.766176,2.598784,-6.955439,-0.330053,2.032409,9.842986,3.949880,-6.297016,-1.952905,-1.068812,2.471202,0.294138,-9.992280,-3.737073,-1.758205,0.248262,5.573899,2.651989,-9.326001,-0.700272,1.916585,2.253036,-0.676791,-5.779961,0.960702,6.114271,-0.861410,1.561468,-2.363293,-2.151211,6.253344,1.266497,9.701334,7.121209,-2.499252,8.303564,3.394192,7.350850,-3.475334,-2.501884,-0.347525,-4.014563,-0.519424,6.751234,4.521892,-3.411526,0.983777,6.794745,-8.774166,-4.332874,-9.720687,-0.387840,-4.250059,8.620810,6.857624,9.361453,0.212371,9.418292,3.479455,9.686729,-3.648368,9.304054,3.109938,-5.411106,3.148983,-6.130981,-5.595841,3.820142,-7.342145,-3.332875,-0.686010,7.530350,2.205026,-9.943976,5.552819,-7.586914,6.198669,0.680596,-3.166737,-5.685081,-7.004412,-9.434942,0.764727,-6.308121,-5.831628,-3.313479,-5.706862,5.651464,-2.401298,-0.867861,7.861741,3.543987,-2.166188,5.963009,0.301068,2.218251,-1.361154,-3.398799,6.996774,-5.314902,8.026794,2.796866,-3.785058,-1.741572,-6.707905,8.397664,2.677351,-8.642042,4.230791,-4.271306,4.339460,6.172936,6.832363,1.627919,-5.174057,3.184489,-1.131846,0.086140,6.968748,3.920796,-2.457913,5.600771,-2.107151,7.810279,4.108064,-5.693856,6.935573,-9.741962,1.138898,-7.807220,7.468197,-4.828298,-4.247477,2.112752,2.469603,3.605429,8.560471,1.744327,-4.481328,5.618260,-9.240602,-2.362363,3.030302,2.992195,-1.839021,-0.856258,0.525915,-0.443919,-5.694704,8.626003,-3.410813,3.527391,1.499449,6.924668,-3.708175,0.687979,-2.313914,-4.509462,-7.017641,6.979388,7.843932,3.449949,-1.734460,-3.959498,2.767654,-7.089582,-8.434074,9.200610,-6.905688,9.174185,5.815666,6.676756,-1.112169,-9.452472,9.232308,-6.555109,2.289347,5.787910,6.469741,8.951153,4.126042,-5.806456,1.618521,4.691186,9.837916,-1.732677,3.888170,-7.904288,-0.957887,1.857815,-0.608959,-7.603045,1.730513,1.935080,-3.559995,3.896303,-9.068647,9.517748,3.568216,3.521512,-2.121955,9.654063,-2.736833,2.053752,-8.013601,-1.485887,-5.169463,2.317668,0.234141,-9.592982,1.338139,8.129071,-1.267778,2.623421,-5.121783,-5.579243,2.669326,-0.961891,8.206224,-7.169057,-3.446167,5.519971,7.150674,-3.939168,3.228681,-6.793827,-5.594524,1.561892,8.658496,-7.152004,0.747740,-7.121760,1.032330,-2.933948,-1.720251,-7.430580,-3.488038,-3.202862,-0.216586,-0.364608,9.933407,-4.799847,-1.244294,-4.000941,8.653016,1.076950,8.223854,0.938614,6.859131,-8.080007,-3.638161,-4.738537,-3.383068,-4.114522], dtype = "float64")#candidate|6778|(576,)|const|float64
call_6777 = relay.TupleGetItem(func_4649_call(relay.reshape(const_6778.astype('float64'), [8, 8, 9])), 1)
call_6779 = relay.TupleGetItem(func_4651_call(relay.reshape(const_6778.astype('float64'), [8, 8, 9])), 1)
func_5975_call = mod.get_global_var('func_5975')
func_5976_call = mutated_mod.get_global_var('func_5976')
call_6821 = relay.TupleGetItem(func_5975_call(), 0)
call_6822 = relay.TupleGetItem(func_5976_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4409_call = mutated_mod.get_global_var('func_4409')
var_6837 = relay.var("var_6837", dtype = "float64", shape = (180,))#candidate|6837|(180,)|var|float64
call_6836 = relay.TupleGetItem(func_4407_call(relay.reshape(var_6837.astype('float64'), [10, 9, 2])), 0)
call_6838 = relay.TupleGetItem(func_4409_call(relay.reshape(var_6837.astype('float64'), [10, 9, 2])), 0)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_6839 = func_3311_call()
call_6840 = func_3311_call()
output = relay.Tuple([call_6760,call_6777,const_6778,call_6821,call_6836,var_6837,call_6839,])
output2 = relay.Tuple([call_6761,call_6779,const_6778,call_6822,call_6838,var_6837,call_6840,])
func_6854 = relay.Function([var_6837,], output)
mod['func_6854'] = func_6854
mod = relay.transform.InferType()(mod)
var_6855 = relay.var("var_6855", dtype = "float64", shape = (180,))#candidate|6855|(180,)|var|float64
output = func_6854(var_6855)
func_6856 = relay.Function([var_6855], output)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2927_call = mod.get_global_var('func_2927')
func_2928_call = mutated_mod.get_global_var('func_2928')
call_6864 = func_2927_call()
call_6865 = func_2927_call()
func_6102_call = mod.get_global_var('func_6102')
func_6103_call = mutated_mod.get_global_var('func_6103')
call_6888 = func_6102_call()
call_6889 = func_6102_call()
func_6854_call = mod.get_global_var('func_6854')
func_6856_call = mutated_mod.get_global_var('func_6856')
var_6899 = relay.var("var_6899", dtype = "float64", shape = (30, 6))#candidate|6899|(30, 6)|var|float64
call_6898 = relay.TupleGetItem(func_6854_call(relay.reshape(var_6899.astype('float64'), [180,])), 3)
call_6900 = relay.TupleGetItem(func_6856_call(relay.reshape(var_6899.astype('float64'), [180,])), 3)
output = relay.Tuple([call_6864,call_6888,call_6898,var_6899,])
output2 = relay.Tuple([call_6865,call_6889,call_6900,var_6899,])
func_6902 = relay.Function([var_6899,], output)
mod['func_6902'] = func_6902
mod = relay.transform.InferType()(mod)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6903 = relay.var("var_6903", dtype = "float64", shape = (30, 6))#candidate|6903|(30, 6)|var|float64
func_6902_call = mutated_mod.get_global_var('func_6902')
call_6904 = func_6902_call(var_6903)
output = call_6904
func_6905 = relay.Function([var_6903], output)
mutated_mod['func_6905'] = func_6905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6923 = relay.var("var_6923", dtype = "int64", shape = ())#candidate|6923|()|var|int64
var_6924 = relay.var("var_6924", dtype = "int64", shape = (15, 15, 14))#candidate|6924|(15, 15, 14)|var|int64
bop_6925 = relay.multiply(var_6923.astype('int64'), var_6924.astype('int64')) # shape=(15, 15, 14)
func_6102_call = mod.get_global_var('func_6102')
func_6103_call = mutated_mod.get_global_var('func_6103')
call_6930 = func_6102_call()
call_6931 = func_6102_call()
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6945 = relay.TupleGetItem(func_4592_call(), 0)
call_6946 = relay.TupleGetItem(func_4593_call(), 0)
bop_6948 = relay.left_shift(var_6924.astype('uint16'), var_6923.astype('uint16')) # shape=(15, 15, 14)
output = relay.Tuple([bop_6925,call_6930,call_6945,bop_6948,])
output2 = relay.Tuple([bop_6925,call_6931,call_6946,bop_6948,])
func_6953 = relay.Function([var_6923,var_6924,], output)
mod['func_6953'] = func_6953
mod = relay.transform.InferType()(mod)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6953_call = mutated_mod.get_global_var('func_6953')
var_6955 = relay.var("var_6955", dtype = "int64", shape = ())#candidate|6955|()|var|int64
var_6956 = relay.var("var_6956", dtype = "int64", shape = (15, 15, 14))#candidate|6956|(15, 15, 14)|var|int64
call_6954 = func_6953_call(var_6955,var_6956,)
output = call_6954
func_6957 = relay.Function([var_6955,var_6956,], output)
mutated_mod['func_6957'] = func_6957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6999 = relay.TupleGetItem(func_4592_call(), 0)
call_7000 = relay.TupleGetItem(func_4593_call(), 0)
uop_7005 = relay.sigmoid(call_6999.astype('float32')) # shape=(8, 8, 9)
uop_7007 = relay.sigmoid(call_7000.astype('float32')) # shape=(8, 8, 9)
output = relay.Tuple([uop_7005,])
output2 = relay.Tuple([uop_7007,])
func_7008 = relay.Function([], output)
mod['func_7008'] = func_7008
mod = relay.transform.InferType()(mod)
mutated_mod['func_7008'] = func_7008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mutated_mod.get_global_var('func_7008')
call_7009 = func_7008_call()
output = call_7009
func_7010 = relay.Function([], output)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7021 = relay.const([[[4.824240,5.702695,-1.519295,-1.410058,1.948018,8.042614]],[[2.773146,9.697289,6.499323,2.014636,-0.653718,-6.681451]],[[5.253845,-8.322584,6.971556,9.493537,4.059877,2.624895]]], dtype = "float64")#candidate|7021|(3, 1, 6)|const|float64
uop_7022 = relay.sqrt(const_7021.astype('float64')) # shape=(3, 1, 6)
uop_7029 = relay.asinh(uop_7022.astype('float32')) # shape=(3, 1, 6)
func_4843_call = mod.get_global_var('func_4843')
func_4846_call = mutated_mod.get_global_var('func_4846')
var_7032 = relay.var("var_7032", dtype = "float64", shape = (90,))#candidate|7032|(90,)|var|float64
call_7031 = relay.TupleGetItem(func_4843_call(relay.reshape(var_7032.astype('float64'), [90,])), 4)
call_7033 = relay.TupleGetItem(func_4846_call(relay.reshape(var_7032.astype('float64'), [90,])), 4)
func_3692_call = mod.get_global_var('func_3692')
func_3695_call = mutated_mod.get_global_var('func_3695')
const_7035 = relay.const([[-1.915982,5.267375,3.095025,3.489193,4.234805,-7.089204,0.430378,-2.126617,-4.226864,-1.708481,-7.643586,3.328239,7.749033,-7.879005,-8.333506,9.448642,2.661870,6.124540,1.281612,5.429072,-7.391014,-7.905489,6.373422,-5.679559,-9.383995,6.353099,-4.824395,8.106661,2.785842,1.502231,9.337791,-4.859496,-6.528125,-2.948934,-3.044329,-9.706816,2.284287,9.272909,9.404430,-0.416298,-3.184980,7.000028,6.428309,4.083152,-0.648956,-6.057029,0.815663,1.725298,-0.831671,0.842675,0.722699,6.607053,-5.596285,2.781541,-0.015532,0.150781,7.901744,-1.609129,1.591815,2.495582],[-5.132238,9.367036,4.314162,6.012439,-9.881918,-3.085096,4.238367,3.642278,-8.330829,5.990564,-7.049928,-9.642696,8.583703,-4.372682,-3.395398,4.921052,5.731498,-4.980888,1.963003,-1.023002,-5.147065,8.997591,1.482204,6.699994,9.944960,-8.285586,5.353072,7.338440,6.501907,7.963157,0.419590,3.328194,7.983713,5.966873,3.689846,7.511735,9.056506,6.668249,0.960447,-5.181272,-0.528072,-6.071183,3.555689,-8.695202,-3.510071,-0.424153,-5.605588,-2.035605,8.462414,-4.619009,-4.666870,-5.674892,-4.362561,-0.001214,-2.451215,-6.292222,9.829878,-2.410530,-2.929782,-7.115467],[-8.141011,5.720798,-6.856596,8.227661,4.189941,-0.989779,1.237268,9.254896,1.952412,9.664027,1.040124,-3.361996,-9.211873,5.907038,0.501816,4.495440,2.383553,0.884284,7.996456,6.657479,-2.137057,-7.573126,3.147639,-1.926660,4.165290,-4.469052,5.692034,2.854251,-6.334737,2.824051,-1.441960,4.512727,7.538500,7.732389,9.854308,2.877056,8.516948,6.307791,-9.169880,3.583620,7.412450,-7.087078,-5.796914,0.557942,-7.435501,-8.251389,2.836330,-4.970002,-0.359190,6.194040,2.493123,-1.484534,-8.540684,3.028105,6.007970,-0.055226,-8.496004,3.592673,9.402120,4.461394],[2.133116,-4.471961,-9.570529,0.810300,2.812292,-7.912276,-8.940882,7.661094,5.165317,8.758918,8.850460,8.245338,-0.400990,-8.612646,6.256378,9.680952,3.405405,-6.140134,8.899010,0.201890,-9.282443,2.420135,-4.352281,-2.726731,6.478951,-0.659251,2.649732,-5.746913,-2.209891,0.849974,2.357261,1.239799,3.805826,-6.312612,0.537142,5.399320,2.082747,-2.488895,9.472435,6.547050,-2.441492,8.255798,-2.778145,0.009354,-4.102087,-4.819853,-2.853174,-5.973859,7.435434,-7.560141,-3.363852,7.065152,-3.783174,3.263815,-8.490208,-8.404091,-4.487719,-1.754539,6.479700,-2.806891]], dtype = "float64")#candidate|7035|(4, 60)|const|float64
call_7034 = relay.TupleGetItem(func_3692_call(relay.reshape(const_7035.astype('float64'), [10, 4, 6])), 1)
call_7036 = relay.TupleGetItem(func_3695_call(relay.reshape(const_7035.astype('float64'), [10, 4, 6])), 1)
bop_7037 = relay.add(uop_7029.astype('int8'), relay.reshape(uop_7022.astype('int8'), relay.shape_of(uop_7029))) # shape=(3, 1, 6)
output = relay.Tuple([call_7031,var_7032,call_7034,const_7035,bop_7037,])
output2 = relay.Tuple([call_7033,var_7032,call_7036,const_7035,bop_7037,])
func_7040 = relay.Function([var_7032,], output)
mod['func_7040'] = func_7040
mod = relay.transform.InferType()(mod)
var_7041 = relay.var("var_7041", dtype = "float64", shape = (90,))#candidate|7041|(90,)|var|float64
output = func_7040(var_7041)
func_7042 = relay.Function([var_7041], output)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2266_call = mod.get_global_var('func_2266')
func_2268_call = mutated_mod.get_global_var('func_2268')
call_7054 = relay.TupleGetItem(func_2266_call(), 1)
call_7055 = relay.TupleGetItem(func_2268_call(), 1)
func_4592_call = mod.get_global_var('func_4592')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_7066 = relay.TupleGetItem(func_4592_call(), 0)
call_7067 = relay.TupleGetItem(func_4593_call(), 0)
output = relay.Tuple([call_7054,call_7066,])
output2 = relay.Tuple([call_7055,call_7067,])
func_7070 = relay.Function([], output)
mod['func_7070'] = func_7070
mod = relay.transform.InferType()(mod)
mutated_mod['func_7070'] = func_7070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7070_call = mutated_mod.get_global_var('func_7070')
call_7071 = func_7070_call()
output = call_7071
func_7072 = relay.Function([], output)
mutated_mod['func_7072'] = func_7072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5504_call = mod.get_global_var('func_5504')
func_5506_call = mutated_mod.get_global_var('func_5506')
call_7090 = relay.TupleGetItem(func_5504_call(), 0)
call_7091 = relay.TupleGetItem(func_5506_call(), 0)
output = call_7090
output2 = call_7091
func_7108 = relay.Function([], output)
mod['func_7108'] = func_7108
mod = relay.transform.InferType()(mod)
mutated_mod['func_7108'] = func_7108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7108_call = mutated_mod.get_global_var('func_7108')
call_7109 = func_7108_call()
output = call_7109
func_7110 = relay.Function([], output)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6379_call = mod.get_global_var('func_6379')
func_6380_call = mutated_mod.get_global_var('func_6380')
call_7111 = relay.TupleGetItem(func_6379_call(), 0)
call_7112 = relay.TupleGetItem(func_6380_call(), 0)
output = relay.Tuple([call_7111,])
output2 = relay.Tuple([call_7112,])
func_7125 = relay.Function([], output)
mod['func_7125'] = func_7125
mod = relay.transform.InferType()(mod)
mutated_mod['func_7125'] = func_7125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7125_call = mutated_mod.get_global_var('func_7125')
call_7126 = func_7125_call()
output = call_7126
func_7127 = relay.Function([], output)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7172 = relay.var("var_7172", dtype = "int64", shape = (12, 15, 12))#candidate|7172|(12, 15, 12)|var|int64
var_7173 = relay.var("var_7173", dtype = "int64", shape = (12, 15, 12))#candidate|7173|(12, 15, 12)|var|int64
bop_7174 = relay.bitwise_xor(var_7172.astype('int64'), relay.reshape(var_7173.astype('int64'), relay.shape_of(var_7172))) # shape=(12, 15, 12)
uop_7178 = relay.atanh(var_7172.astype('float32')) # shape=(12, 15, 12)
output = relay.Tuple([bop_7174,uop_7178,])
output2 = relay.Tuple([bop_7174,uop_7178,])
func_7187 = relay.Function([var_7172,var_7173,], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
var_7188 = relay.var("var_7188", dtype = "int64", shape = (12, 15, 12))#candidate|7188|(12, 15, 12)|var|int64
var_7189 = relay.var("var_7189", dtype = "int64", shape = (12, 15, 12))#candidate|7189|(12, 15, 12)|var|int64
output = func_7187(var_7188,var_7189,)
func_7190 = relay.Function([var_7188,var_7189,], output)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_7192 = relay.TupleGetItem(func_6502_call(), 0)
call_7193 = relay.TupleGetItem(func_6504_call(), 0)
output = relay.Tuple([call_7192,])
output2 = relay.Tuple([call_7193,])
func_7219 = relay.Function([], output)
mod['func_7219'] = func_7219
mod = relay.transform.InferType()(mod)
mutated_mod['func_7219'] = func_7219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7219_call = mutated_mod.get_global_var('func_7219')
call_7220 = func_7219_call()
output = call_7220
func_7221 = relay.Function([], output)
mutated_mod['func_7221'] = func_7221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_7222 = func_3311_call()
call_7223 = func_3311_call()
output = call_7222
output2 = call_7223
func_7228 = relay.Function([], output)
mod['func_7228'] = func_7228
mod = relay.transform.InferType()(mod)
output = func_7228()
func_7229 = relay.Function([], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7280 = relay.const([[[-8.536306,7.493930,-2.071180,3.504574,-6.749433,6.719230,5.170207,-9.538434,-9.818223,-6.310442,-5.064036,-6.180808,9.522333,-9.520080,1.051388],[8.736017,3.237885,3.541679,8.902828,-6.831690,-6.773240,6.020573,-9.734046,-5.726834,-1.202579,1.040349,-1.438612,-7.898654,-9.154990,-3.448346],[9.384690,5.625886,4.369263,-4.451723,3.524002,-7.481782,0.125178,-1.785784,9.725253,-4.706565,7.555428,-8.972694,2.398370,5.592852,-5.018480],[3.557298,6.383107,-8.819589,-5.989778,-9.040210,-2.150069,8.896408,-1.004375,2.451483,-6.390934,1.942067,5.621775,0.155501,0.160312,-1.967412],[3.964608,1.798068,-5.159588,1.678402,-3.330374,-7.386084,-6.142051,-8.686751,3.835073,-9.470033,6.579601,8.048979,7.950582,-0.870799,4.056106],[-1.394209,-1.542753,-0.179339,-4.606597,3.333587,8.178833,9.641310,2.069179,-1.091882,8.920580,8.938409,-6.292935,0.800506,9.841763,-5.831328],[-0.250150,1.781595,-6.488737,5.377482,1.423424,-0.017445,-4.230363,-5.447928,5.733939,4.478190,7.686933,-4.963647,1.845126,-6.203626,0.320022],[-0.310305,5.010853,-2.195425,8.342070,-1.260861,2.149917,7.609474,-0.632179,9.025346,-9.077855,-2.932154,9.541081,6.686617,-2.970777,-3.596128],[5.987632,8.403569,-6.465237,-9.039109,7.250820,8.782183,1.208538,7.920486,-8.634306,-2.380616,6.800191,3.947014,5.814681,4.181817,-2.176143],[1.048944,-7.584654,-6.212016,-2.721607,-1.622729,-1.484329,-5.097328,-9.616545,1.093627,6.569766,2.466040,8.385433,0.373003,-8.161472,-5.758973]],[[-9.336187,-2.780115,1.930105,-8.158276,5.233783,7.394542,-3.586935,-4.781754,9.881517,5.921213,3.984632,0.155848,6.304502,3.879794,-7.496984],[-9.488677,0.554158,7.483322,-3.354069,-1.367909,8.870459,4.320899,-7.795128,-3.437857,1.767466,-0.727383,4.080868,9.807227,-3.341841,-7.911262],[7.484592,-1.290193,7.242495,3.363822,3.319690,3.874483,2.096649,-5.429477,-4.681855,-5.681287,-0.277417,-1.189194,-4.521445,0.580313,-7.648973],[0.835306,-7.937099,-4.161521,-3.594044,6.483272,-9.635007,-1.884639,4.484352,0.469597,4.315150,-9.919076,-5.531636,6.019141,-4.085283,0.219702],[-3.733808,-2.889617,-4.860207,-8.302345,-6.154202,-3.513142,5.371781,4.492227,8.348670,-2.856213,-3.950840,6.003414,-7.472618,1.551357,6.374278],[8.780529,-7.310506,-6.012712,4.446563,1.847456,7.115936,-3.789233,-1.630482,6.949537,-8.978755,-6.725606,-1.383533,9.185644,4.940437,-0.800648],[3.464126,-2.523438,9.049739,5.743903,-5.380330,9.950162,-1.244220,-4.881429,4.778361,6.300622,6.452105,-4.228514,4.078281,-4.859634,-3.260922],[4.458731,5.163634,4.672155,-0.980656,7.927736,0.734885,-7.822828,-3.131312,-7.736360,1.047984,9.906693,-7.646463,-6.192378,4.398253,-6.774031],[1.509516,1.632899,4.042014,-6.024650,9.946627,-0.934015,-6.217960,8.597133,9.525280,-8.518635,7.723451,-9.888935,5.720761,9.679504,3.064266],[-4.227489,3.480273,5.681765,0.676100,-4.521585,4.049222,0.411827,-8.236069,-8.568935,2.593473,-7.029701,-0.894698,-8.235849,7.031686,-3.773189]],[[4.559428,-0.098077,3.573442,3.399077,0.571415,2.353597,8.665142,-7.772365,7.840375,1.779697,9.140597,8.233537,-0.375364,3.920012,0.505613],[1.919018,-5.895911,5.306172,0.175985,-3.302521,9.805197,-0.066567,9.894548,-4.047844,7.505070,2.958197,2.601795,5.899848,-6.769603,0.546130],[-7.032823,-5.085836,-0.573778,-8.632029,-0.431696,-4.967736,5.563069,-5.230863,2.874929,3.015391,6.959634,5.447463,-7.033995,-8.346971,7.371406],[-3.028135,-7.301875,9.470220,6.455165,1.083375,-5.037057,6.708323,-1.877212,-1.813615,-7.370099,-7.347960,-2.120473,-6.778755,-1.475508,6.673506],[-3.707781,-7.351507,-1.862076,-9.337023,5.546440,-3.571972,5.193065,2.678817,6.924979,-0.613390,-9.834368,4.352380,-4.489137,8.599445,8.967247],[0.935188,-0.246628,-1.540925,0.641426,-0.110359,-5.156422,-6.485680,-6.763368,7.463149,-7.170683,0.762804,2.604438,7.506359,-7.543665,-1.569862],[-2.030116,-1.241665,6.243802,8.728898,5.464362,-4.793241,-5.105328,4.363438,-5.221257,0.318288,-7.403632,5.380078,9.523288,-3.593834,5.476703],[1.413979,-6.719043,3.351377,9.493639,-5.363834,-2.836804,-4.144978,0.619437,-2.679920,6.084242,-5.047755,-1.640849,8.339841,8.165424,-3.516297],[-6.963211,-4.712948,2.570511,9.216081,-6.378974,5.057552,-5.267429,-8.958076,9.555611,3.648455,-7.500370,5.879142,-7.214185,-7.366934,-8.169126],[-3.341190,4.433179,7.071021,-6.839874,5.336703,-3.478497,-9.022275,-5.381533,-8.916406,5.666373,-6.591446,-9.555589,-7.912278,-3.520506,-9.485383]]], dtype = "float32")#candidate|7280|(3, 10, 15)|const|float32
const_7281 = relay.const([[[-3.763114,8.904010,8.297591,-3.615448,-7.095519,8.033248,5.725223,2.075293,-4.467542,4.205617,-6.217211,-6.605672,-3.676693,-2.331064,6.613018],[-0.563998,-5.029448,8.105094,5.103371,-4.298104,-3.454837,-8.480259,7.616652,4.339589,-9.969885,1.791701,-5.022744,-3.288554,-9.439006,1.638729],[-1.050843,7.066079,5.348613,6.103487,-9.093362,0.558941,1.768691,-8.246760,8.204445,-4.712486,6.592460,8.094517,1.823927,-7.324473,-3.999908],[2.785014,7.326532,0.503566,9.457973,-8.310128,-5.512405,-7.739794,5.616885,-3.139482,8.570207,1.808139,-6.379301,-9.571486,-3.283794,-2.510309],[3.966815,4.826120,-2.672223,7.662746,0.261683,-7.292557,6.249916,-8.323645,8.362111,-3.480524,9.880895,8.094777,-1.869555,-1.832891,7.645214],[7.525547,-7.570877,3.523456,1.417760,2.008002,-8.434748,-9.767379,-5.355161,0.309805,3.812804,-3.510334,7.651725,5.913621,-7.331321,-6.230972],[-3.254416,-1.969147,-3.949911,0.224765,-2.105063,6.157303,-8.516993,7.463342,-9.933169,0.421862,-7.010992,-4.990179,9.425454,4.435415,2.168582],[8.245353,3.181247,4.491188,-6.312563,2.282313,0.289996,1.267546,-5.072753,-3.494260,0.263965,-4.204513,-9.786066,7.009860,-8.123719,0.162814],[-7.731231,2.985768,-0.344767,-4.161533,-5.660081,1.779028,-1.330430,0.638123,9.038514,8.772402,1.740567,-9.924831,-0.778695,-4.468536,-8.057039],[4.092026,-6.914307,-9.642019,3.293702,4.291417,-1.920811,9.615597,-1.548979,6.710585,-7.299993,-8.904705,8.999986,3.194211,7.623342,-5.946738]],[[5.313370,-8.784058,7.994369,-4.133038,7.752541,-1.826107,5.781998,-9.796007,-7.576633,5.421857,-5.486078,2.304964,3.094133,-9.200253,-3.396740],[-7.239522,-2.141800,8.109888,-0.964940,-7.532030,-0.473257,7.078102,-1.654327,3.199982,-1.821408,8.664594,-5.696061,-2.047266,-4.338294,-3.724282],[4.380455,-7.772436,-4.476978,1.372351,-2.754841,-2.580188,-5.511538,-9.234291,-4.792613,-6.330209,-5.131174,9.712975,-2.485305,-6.520125,-5.261919],[9.887085,-2.573450,8.394693,6.308902,2.240334,-1.395650,-0.149080,1.675192,5.254640,-9.358963,-3.873775,-5.018109,-6.146515,4.422352,0.263677],[3.020261,-1.830770,-6.701537,-6.628698,-0.510613,7.844163,-8.381790,-5.615744,-0.948960,5.924945,9.415426,-5.839654,2.891547,-1.324648,9.066095],[8.718165,-3.196988,-6.328557,2.868355,-6.689146,-8.242508,7.015735,-4.668934,0.382405,1.831525,2.544367,-9.829523,-7.506592,-6.160476,1.321597],[-9.051526,1.864361,-1.524146,-3.747303,-5.263939,7.217161,-5.077000,2.575241,-4.769963,-6.129348,0.267746,-5.010957,5.596793,-3.319392,0.617968],[8.843838,-8.359378,-4.469808,5.865926,-7.075275,-6.726050,-8.969374,-6.011814,2.201702,-5.554342,2.054172,7.102161,-5.530097,-4.899447,7.928854],[-8.304338,-0.073896,5.180662,3.436235,8.833272,-8.905431,2.272934,-7.871629,4.645196,2.995298,1.665624,0.080946,-5.670220,6.150305,-7.547816],[1.099270,-6.234407,2.502667,-6.645519,-2.377651,6.875794,7.424249,8.936875,-6.944456,5.192023,3.201956,-3.333283,-7.447152,-8.692546,-0.119523]],[[-7.737282,2.461990,1.878969,-7.769196,1.332213,4.939456,5.283796,3.165074,-2.494652,0.563296,7.715607,6.721574,-1.857387,2.548968,2.350365],[4.830286,1.973286,-6.965029,-2.739601,-6.730035,2.163719,-0.712703,7.502072,-2.598485,5.403822,0.556394,-9.916695,4.883389,-0.161614,0.492958],[-2.740426,3.968390,6.421549,-1.899863,-8.287936,8.528092,-4.576073,3.833383,8.655835,7.024145,8.246957,-8.941145,6.333964,-0.341992,-5.390509],[-3.785744,8.258709,-6.149904,2.113879,-8.129481,8.589458,-8.277519,5.318530,2.322119,5.866654,4.039767,-4.287379,-5.750296,2.076211,7.058972],[-3.638391,-7.184409,-1.072460,-0.429768,8.215871,6.434078,-3.546778,-4.544170,0.482887,-9.329495,3.361599,-3.221022,3.495464,1.565966,0.359245],[-6.864968,-2.506926,5.465584,0.577441,6.209725,-3.034435,-6.686926,-5.782938,-2.401596,-5.305576,-9.334649,1.505205,8.057725,1.280803,9.267660],[-3.064410,-6.586678,0.646001,9.508812,9.103650,9.826897,3.743661,-3.454225,9.968111,-0.648190,4.265793,9.632824,5.834954,-4.188241,9.868250],[9.407912,7.838711,4.068036,-5.863176,-7.024492,9.405227,1.220685,3.241616,-7.428342,0.479480,-9.767245,5.158653,7.575399,9.146222,5.737532],[4.725122,-7.506820,-1.704655,3.994007,-5.001563,-9.974707,-3.111404,-0.216720,4.083200,-7.348876,6.433998,6.027303,-9.135523,1.822461,-3.979162],[-9.964374,-0.655331,0.271186,-9.634491,6.448747,-7.847205,-8.808157,6.152578,-3.979228,3.174410,6.549538,4.845864,3.559712,3.169235,8.044537]]], dtype = "float32")#candidate|7281|(3, 10, 15)|const|float32
bop_7282 = relay.equal(const_7280.astype('bool'), relay.reshape(const_7281.astype('bool'), relay.shape_of(const_7280))) # shape=(3, 10, 15)
output = relay.Tuple([bop_7282,])
output2 = relay.Tuple([bop_7282,])
func_7287 = relay.Function([], output)
mod['func_7287'] = func_7287
mod = relay.transform.InferType()(mod)
mutated_mod['func_7287'] = func_7287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7287_call = mutated_mod.get_global_var('func_7287')
call_7288 = func_7287_call()
output = call_7288
func_7289 = relay.Function([], output)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_7292 = func_2652_call()
call_7293 = func_2652_call()
output = relay.Tuple([call_7292,])
output2 = relay.Tuple([call_7293,])
func_7302 = relay.Function([], output)
mod['func_7302'] = func_7302
mod = relay.transform.InferType()(mod)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7302_call = mutated_mod.get_global_var('func_7302')
call_7303 = func_7302_call()
output = call_7303
func_7304 = relay.Function([], output)
mutated_mod['func_7304'] = func_7304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4054_call = mod.get_global_var('func_4054')
func_4055_call = mutated_mod.get_global_var('func_4055')
call_7308 = relay.TupleGetItem(func_4054_call(), 0)
call_7309 = relay.TupleGetItem(func_4055_call(), 0)
output = relay.Tuple([call_7308,])
output2 = relay.Tuple([call_7309,])
func_7338 = relay.Function([], output)
mod['func_7338'] = func_7338
mod = relay.transform.InferType()(mod)
mutated_mod['func_7338'] = func_7338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7338_call = mutated_mod.get_global_var('func_7338')
call_7339 = func_7338_call()
output = call_7339
func_7340 = relay.Function([], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7125_call = mod.get_global_var('func_7125')
func_7127_call = mutated_mod.get_global_var('func_7127')
call_7350 = relay.TupleGetItem(func_7125_call(), 0)
call_7351 = relay.TupleGetItem(func_7127_call(), 0)
func_2394_call = mod.get_global_var('func_2394')
func_2395_call = mutated_mod.get_global_var('func_2395')
call_7374 = relay.TupleGetItem(func_2394_call(), 0)
call_7375 = relay.TupleGetItem(func_2395_call(), 0)
output = relay.Tuple([call_7350,call_7374,])
output2 = relay.Tuple([call_7351,call_7375,])
func_7402 = relay.Function([], output)
mod['func_7402'] = func_7402
mod = relay.transform.InferType()(mod)
mutated_mod['func_7402'] = func_7402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7402_call = mutated_mod.get_global_var('func_7402')
call_7403 = func_7402_call()
output = call_7403
func_7404 = relay.Function([], output)
mutated_mod['func_7404'] = func_7404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7408 = relay.var("var_7408", dtype = "uint32", shape = ())#candidate|7408|()|var|uint32
const_7409 = relay.const([[[-1,-4,1,6,-1,-6,1,10,8],[5,-5,8,-4,-9,5,-1,-2,-9],[-2,2,7,10,9,5,10,-9,-8],[-5,3,-3,5,-5,1,-9,-8,-8],[1,4,-8,9,-10,6,-5,-8,6],[-7,7,9,3,-3,-1,7,-1,-5],[-1,-8,3,6,-5,-6,-6,-2,-4],[-3,1,1,8,-5,8,-7,-2,-9],[1,3,-10,6,4,10,-1,7,10],[-3,8,9,-9,7,3,8,-9,-9],[2,4,-7,3,1,9,10,2,-3],[-3,7,-4,6,-4,3,-4,3,10],[-4,8,-5,-7,-3,4,-9,-8,9],[-9,-4,-7,-8,-1,-9,-1,-3,8]],[[-7,6,3,-6,7,9,8,10,-10],[-8,-10,-3,9,3,2,2,4,1],[-8,-10,-3,-2,6,2,10,8,8],[-8,5,10,1,-9,2,2,9,6],[10,2,9,-6,3,-9,-5,-7,-8],[-8,-1,-6,8,-4,10,8,7,10],[1,6,-9,-4,-2,5,-2,-9,-1],[-7,-10,6,8,-4,2,-2,1,9],[-1,-4,-8,10,-3,2,-1,3,-7],[-5,-10,1,-4,-7,10,-5,-10,3],[10,-7,-2,5,7,7,6,10,-5],[-10,-5,4,-2,4,9,-8,-1,-10],[-4,-6,-4,7,-9,7,-10,-2,1],[-8,-8,5,-10,-4,9,-3,2,6]],[[-6,-7,-9,-10,-1,-2,10,-7,4],[6,6,4,8,8,9,-6,-6,2],[7,-6,4,-3,10,5,-4,6,2],[5,9,8,9,3,-6,5,-6,-4],[-9,-7,10,10,4,4,-8,-6,4],[5,9,-3,2,10,6,-10,-2,-3],[10,4,3,-10,9,-8,-1,6,-10],[4,-4,-3,8,-7,-2,-3,-8,-6],[7,2,5,6,-4,5,3,7,6],[10,-3,6,-1,-8,8,-8,4,-10],[1,-7,10,10,-3,-1,-6,5,-1],[-7,-2,9,-10,4,10,-5,9,5],[-3,-3,1,7,8,-1,5,-9,-2],[6,9,10,-1,10,6,-1,2,5]],[[-9,-3,8,-4,-1,-1,-5,-6,6],[-4,10,9,1,3,4,-9,4,-8],[5,5,-6,10,3,6,2,8,-3],[-6,-7,-10,-8,-3,-10,-5,2,-2],[6,10,7,-9,-3,9,-4,-2,5],[-1,10,5,5,-6,2,7,-9,-9],[2,-5,5,-3,-10,-9,9,-8,-5],[9,-5,-9,5,6,3,-10,3,2],[-9,6,-1,4,6,9,5,3,4],[-8,8,-5,-9,-5,-10,10,-3,-1],[-1,6,-7,1,4,-1,-6,9,2],[4,-9,-4,10,-10,-10,7,6,-1],[8,-4,-7,-3,5,-8,6,-8,5],[-5,6,7,-6,7,10,6,3,-2]],[[-4,-5,9,-6,7,1,10,6,1],[1,-10,3,10,7,9,4,-4,-4],[2,7,6,3,4,-1,5,-4,2],[-2,-7,6,8,-9,10,-7,-3,-4],[-4,6,-8,-3,-9,-5,-6,-7,-10],[9,4,-2,3,-7,-4,7,7,6],[-10,-8,7,2,-2,6,-2,2,3],[8,-3,-2,5,-5,-5,-10,1,2],[1,1,2,7,-2,-10,3,3,-5],[3,6,-4,10,-4,4,-6,1,-10],[7,-1,-6,-4,-10,-5,1,7,-7],[-8,7,-5,-1,5,10,-9,3,-6],[10,8,-8,-5,10,-10,-2,-1,2],[9,-8,-7,10,-7,-3,-9,-4,3]],[[9,-5,-7,-5,5,10,-3,3,5],[-10,-4,-5,-10,10,-3,-10,-8,-1],[-1,-7,-4,4,-8,-9,-4,6,-7],[-5,-7,-3,-5,-3,9,9,2,-4],[1,-4,-4,-1,-3,6,-10,-7,5],[9,4,-2,-8,2,-5,6,8,-6],[-2,-3,-6,3,2,-2,9,-7,-5],[-7,-8,-3,-9,2,7,-8,-6,4],[-1,-7,6,-10,-3,9,3,-1,6],[5,-10,-1,-4,-8,1,10,8,5],[-7,8,-9,7,2,3,1,3,7],[-10,2,-1,1,-5,1,10,4,-9],[4,4,-4,-6,-9,8,-1,-6,8],[8,-1,8,-4,1,6,-10,7,-8]],[[3,8,1,7,-4,-6,10,-4,6],[6,-10,-9,-8,9,-3,8,3,7],[4,7,-6,-2,7,-1,8,5,4],[-4,-3,10,2,-3,6,8,-5,-9],[5,9,-9,-7,6,3,-5,4,10],[3,2,4,7,7,6,-3,7,-5],[2,3,3,10,5,-6,-8,6,7],[7,3,-8,-7,-1,2,-5,7,4],[4,-8,10,3,-4,-7,8,-5,-5],[9,3,-10,-6,-9,3,-5,-9,-7],[6,6,-8,1,6,-6,-10,-7,-6],[7,-2,-7,4,-3,4,2,9,-1],[1,-2,9,-10,-4,1,-3,-4,-7],[-1,10,3,-3,5,3,8,8,-10]],[[9,-6,-6,5,-7,4,7,-6,9],[-10,-4,-4,-10,10,-2,5,-10,-4],[-9,-6,7,2,-5,-10,10,7,-6],[-3,-3,4,-3,9,-3,-2,4,-1],[-5,-5,-5,-5,7,-1,2,9,4],[3,6,3,-6,4,-10,-1,1,-7],[2,-1,1,2,-5,9,8,-7,5],[-6,6,3,6,-2,1,-5,-1,-4],[10,6,-8,-3,8,-3,-3,-3,10],[4,1,4,7,-7,-6,9,-6,1],[9,-4,-7,9,7,-8,10,-4,-10],[-5,8,5,2,1,-10,-3,6,7],[6,3,2,10,-3,-4,-3,-2,-10],[4,-3,-1,-7,2,-4,9,7,-5]],[[3,-10,2,-3,-5,-5,-4,-9,5],[-9,-4,8,-2,-10,-10,9,-10,2],[-4,-6,-2,4,-1,-2,-10,-1,-2],[4,7,-4,-9,-2,3,-3,-1,-6],[2,-8,2,1,10,8,-2,-7,-8],[-8,5,10,-4,-3,-3,-7,-8,10],[-4,1,5,-6,-4,8,6,-1,-5],[-9,3,3,2,1,-4,9,1,10],[1,-3,-10,9,8,-7,10,-2,-9],[-8,-5,-10,-1,-7,-10,10,-2,8],[-5,-8,-6,6,10,-6,-2,-1,-3],[-6,-1,-9,-9,-2,-2,-4,7,10],[6,7,3,-6,-10,-4,9,9,4],[-9,-5,-5,-3,-3,-1,-2,-8,-3]],[[-4,8,8,-9,3,-5,4,-1,6],[7,4,-10,3,-2,-2,-2,5,-10],[-3,10,-7,-6,-10,1,4,7,-7],[3,-8,-1,-1,7,-4,-9,-8,-4],[5,-7,6,2,7,7,8,-4,-8],[-9,9,-5,4,1,-2,-6,-6,3],[-2,-3,6,-3,-4,1,1,1,5],[-4,-9,-1,-3,-7,4,4,-6,-3],[8,5,2,-4,-5,4,10,-10,-6],[-9,10,9,-7,-9,9,-5,7,-9],[-7,3,-9,-3,8,5,4,4,-9],[7,-7,8,8,3,3,-6,8,-2],[6,-3,9,-8,-1,7,5,-5,-10],[-8,-6,6,6,10,9,8,-9,2]],[[8,-1,10,8,-1,8,8,4,7],[-3,-1,-7,-7,8,6,6,-9,3],[-2,-5,-6,8,8,-7,-1,-10,-7],[5,-9,-2,4,-9,2,2,-4,10],[-1,5,-10,6,5,6,-2,6,7],[-6,-5,-5,8,-10,6,2,8,-9],[-2,-2,1,-8,10,-4,-3,7,7],[4,9,10,6,3,1,-4,6,-9],[3,-8,3,-9,4,6,-8,-7,-6],[2,-10,6,8,-4,6,-1,-1,4],[-3,-4,-9,-6,-1,-5,3,7,-4],[-5,-2,9,10,-7,-9,7,-3,6],[-1,10,9,-7,3,-6,-8,3,7],[10,-2,-10,-7,2,8,-4,4,1]],[[9,6,5,-3,2,-4,8,6,-10],[-8,3,-9,-9,10,-6,9,-10,-9],[8,7,-8,8,-5,-5,-3,2,-4],[-7,-3,-8,-9,-6,1,-3,9,-8],[-2,-4,-1,10,1,-9,2,-10,4],[-3,3,3,7,3,-9,5,-5,6],[8,-1,-9,-6,10,-7,-1,9,-2],[-8,-10,4,-1,-1,-6,6,5,2],[10,5,3,-6,2,10,8,2,-8],[7,3,-8,5,4,-1,-1,6,3],[-8,4,2,6,2,8,-2,3,-5],[6,-5,7,9,-9,8,4,8,-7],[-2,2,9,-7,-9,8,-1,1,5],[10,-9,-8,-10,2,10,10,-10,-9]],[[-6,-10,7,6,-2,-2,6,2,-2],[2,-3,-9,4,9,4,5,-4,-3],[-4,-9,-8,5,6,3,10,-9,2],[5,9,-1,2,3,10,-9,8,3],[2,2,-7,-5,2,9,-3,-9,-10],[5,6,-2,-5,3,10,9,-7,-1],[10,1,-9,6,-7,-4,7,1,-7],[-4,-3,-8,-6,-8,-10,7,-4,-1],[-9,4,-6,-4,-8,-10,7,9,-2],[4,4,9,10,5,4,-6,-7,-10],[-1,-5,9,-5,-9,8,-1,-9,6],[-8,-6,10,-3,5,-9,2,-9,-8],[-4,9,-7,-7,1,3,6,6,6],[-1,2,-8,1,8,7,-2,-1,4]]], dtype = "uint32")#candidate|7409|(13, 14, 9)|const|uint32
bop_7410 = relay.greater(var_7408.astype('bool'), const_7409.astype('bool')) # shape=(13, 14, 9)
uop_7413 = relay.exp(bop_7410.astype('float32')) # shape=(13, 14, 9)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_7429 = func_1513_call()
call_7430 = func_1513_call()
output = relay.Tuple([uop_7413,call_7429,])
output2 = relay.Tuple([uop_7413,call_7430,])
func_7439 = relay.Function([var_7408,], output)
mod['func_7439'] = func_7439
mod = relay.transform.InferType()(mod)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7440 = relay.var("var_7440", dtype = "uint32", shape = ())#candidate|7440|()|var|uint32
func_7439_call = mutated_mod.get_global_var('func_7439')
call_7441 = func_7439_call(var_7440)
output = call_7441
func_7442 = relay.Function([var_7440], output)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_7465 = relay.TupleGetItem(func_5084_call(), 0)
call_7466 = relay.TupleGetItem(func_5086_call(), 0)
output = call_7465
output2 = call_7466
func_7469 = relay.Function([], output)
mod['func_7469'] = func_7469
mod = relay.transform.InferType()(mod)
output = func_7469()
func_7470 = relay.Function([], output)
mutated_mod['func_7470'] = func_7470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1960_call = mutated_mod.get_global_var('func_1960')
call_7490 = func_1958_call()
call_7491 = func_1958_call()
func_7302_call = mod.get_global_var('func_7302')
func_7304_call = mutated_mod.get_global_var('func_7304')
call_7496 = relay.TupleGetItem(func_7302_call(), 0)
call_7497 = relay.TupleGetItem(func_7304_call(), 0)
uop_7501 = relay.sqrt(call_7496.astype('float32')) # shape=(8, 8, 9)
uop_7503 = relay.sqrt(call_7497.astype('float32')) # shape=(8, 8, 9)
output = relay.Tuple([call_7490,uop_7501,])
output2 = relay.Tuple([call_7491,uop_7503,])
func_7504 = relay.Function([], output)
mod['func_7504'] = func_7504
mod = relay.transform.InferType()(mod)
output = func_7504()
func_7505 = relay.Function([], output)
mutated_mod['func_7505'] = func_7505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7538 = relay.var("var_7538", dtype = "float32", shape = (6, 10, 11))#candidate|7538|(6, 10, 11)|var|float32
uop_7539 = relay.acos(var_7538.astype('float32')) # shape=(6, 10, 11)
output = relay.Tuple([uop_7539,])
output2 = relay.Tuple([uop_7539,])
F = relay.Function([var_7538,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7538,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

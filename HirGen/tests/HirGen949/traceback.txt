==========mod==========
#[version = "0.0.5"]
def @func_15032() -> (Tensor[(13, ?, 11), bool],) {
  %0 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  (%0,)
}

def @func_15362() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %1 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %4 = reshape(%2, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %5 = reshape(%3, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %6 = %1.0;
  %7 = @func_12200(%4, %5) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(330), uint8] */)
}

def @func_11441(%var_11417: Tensor[(15, 3, 14), float32]) -> (Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) {
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %10 = reshape(%8, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %11 = reshape(%9, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %12 = cast(%var_11417, dtype="float32") /* ty=Tensor[(15, 3, 14), float32] */;
  %13 = atan(%12) /* ty=Tensor[(15, 3, 14), float32] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %15 = @func_717(%10, %11) /* ty=Tensor[(7, 16, 16), bool] */;
  %16 = tan(%14) /* ty=Tensor[(15, 3, 14), float64] */;
  (%15, meta[relay.Constant][1] /* ty=Tensor[(1792), uint64] */, %16)
}

def @func_15652() -> (Tensor[(13, 1, 11), float64],) {
  %17 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%17,)
}

def @func_6725(%var_6681: Tensor[(8, 8, 3), bool], %var_6682: Tensor[(8, 8, 3), bool], %var_6693: Tensor[(448), float64], %var_6721: Tensor[(1792), uint64]) -> (Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
  %18 = cast(%var_6682, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %19 = shape_of(%var_6681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_6681, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %23 = cast(%var_6693, dtype="float64") /* ty=Tensor[(448), float64] */;
  %24 = reshape(%22, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
  %25 = reshape(%23, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %26 = @func_3430(%24, %25) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %27 = cast(%var_6721, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %28 = cast(%var_6721, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %29 = reshape(%27, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %30 = reshape(%28, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %31 = logical_and(%20, %21) /* ty=Tensor[(8, 8, 3), bool] */;
  %32 = %26.3;
  %33 = @func_717(%29, %30) /* ty=Tensor[(7, 16, 16), bool] */;
  (%31, %32, meta[relay.Constant][2] /* ty=Tensor[(21), uint64] */, %var_6693, %33, %var_6721)
}

def @func_15331() -> (Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
  %34 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %36 = reshape(%35, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float64] */;
  %37 = %34.0;
  %38 = @func_13099(%36) /* ty=Tensor[(6, 9, 10), float64] */;
  (%37, %38, meta[relay.Constant][3] /* ty=Tensor[(540), float64] */)
}

def @func_5495(%var_5468: Tensor[(1890), float64], %var_5469: Tensor[(80), uint32]) -> (Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) {
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 7), float64] */;
  %40 = cast(%var_5468, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %41 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %42 = reshape(%40, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %43 = reshape(%41, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %44 = @func_936(%42, %43) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %45 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %46 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %47 = reshape(%45, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %48 = reshape(%46, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %49 = @func_349(%47, %48) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %50 = sin(%39) /* ty=Tensor[(8, 4, 7), float64] */;
  %51 = %44.2;
  %52 = %49.2;
  (%50, %51, %var_5468, %var_5469, %52)
}

def @func_20186() -> (Tensor[(13, 1, 11), float64],) {
  %53 = @func_17507() /* ty=Tensor[(13, 1, 11), float64] */;
  (%53,)
}

def @func_20447() -> (Tensor[(15, 11, 2), uint8],) {
  %54 = @func_18590() /* ty=Tensor[(15, 11, 2), uint8] */;
  (%54,)
}

def @func_18558() -> Tensor[(330), uint8] {
  %55 = @func_16497() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) */;
  %55.0
}

def @func_14166() -> Tensor[(13, ?, 11), bool] {
  %56 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %58 = acosh(%57) /* ty=Tensor[(13, 1, 11), float32] */;
  %59 = cast(%56, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%61, %62) /* ty=Tensor[(13, ?, 11), bool] */
}

def @func_15381() -> Tensor[(1, 9, 6), bool] {
  %63 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %63.1
}

def @func_15286(%var_15234: Tensor[(504), uint16], %var_15269: Tensor[(1573), float64]) -> (Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) {
  %64 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %65 = cast(%var_15234, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %66 = reshape(%65, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %67 = @func_6107(%66) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %69 = reshape(%68, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %70 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %71 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %72 = cast(%var_15269, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %73 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1573), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(1573), float64] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?), float32] */;
  %76 = %64.2;
  %77 = %67.2;
  %78 = @func_14308(%69) /* ty=Tensor[(13, 11, 11), uint32] */;
  %79 = %70.0;
  %80 = %71.0;
  %81 = subtract(%74, %75) /* ty=Tensor[(1573), float32] */;
  (%76, %77, %var_15234, %78, %79, %80, %81)
}

def @func_14746(%var_14728: Tensor[(468), float64], %var_14729: Tensor[(1890), float64], %var_14730: Tensor[(80), uint32], %var_14732: Tensor[(7, 84), float32]) -> (Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) {
  %82 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %83 = cast(%var_14728, dtype="float64") /* ty=Tensor[(468), float64] */;
  %84 = cast(%var_14728, dtype="float64") /* ty=Tensor[(468), float64] */;
  %85 = cast(%var_14729, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %86 = cast(%var_14730, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %87 = cast(%var_14730, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %89 = cast(%var_14732, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
  %90 = reshape(%83, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %91 = reshape(%84, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %92 = reshape(%85, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %93 = reshape(%86, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %94 = reshape(%87, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %95 = reshape(%88, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %96 = reshape(%89, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %97 = @func_11514(%90, %91, %92, %93, %94, %95, %96) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) */;
  %98 = %82.0;
  %99 = %97.6;
  (%98, %99, %var_14728, %var_14729, %var_14730, meta[relay.Constant][6] /* ty=Tensor[(210), float32] */, %var_14732)
}

def @func_17488() -> (Tensor[(330), uint8], Tensor[(13, ?, 11), bool]) {
  %100 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
  %101 = %100.0;
  %102 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  (%101, %102)
}

def @func_9585(%var_9567: Tensor[(1, 9, 6), bool]) -> (Tensor[(1, 9, 6), bool],) {
  %103 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %104 = cast(%var_9567, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
  %105 = logical_and(%103, %104) /* ty=Tensor[(1, 9, 6), bool] */;
  (%105,)
}

def @func_20216() -> Tensor[(13, 6, 11), uint16] {
  %106 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %106.0
}

def @func_14033(%var_14017: Tensor[(630), int64], %var_14025: Tensor[(21), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) {
  %107 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %108 = cast(%var_14017, dtype="int64") /* ty=Tensor[(630), int64] */;
  %109 = cast(%var_14017, dtype="int64") /* ty=Tensor[(630), int64] */;
  %110 = reshape(%108, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %111 = reshape(%109, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %112 = @func_12965(%110, %111) /* ty=(Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) */;
  %113 = cast(%var_14025, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %115 = %112.2;
  %116 = cast(%115, dtype="float64") /* ty=Tensor[(448), float64] */;
  %117 = reshape(%113, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %118 = reshape(%114, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %119 = reshape(%116, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %120 = @func_2914(%117, %118, %119) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %121 = %107.0;
  %122 = %120.6;
  (%121, %115, %var_14017, %122, %var_14025, meta[relay.Constant][7] /* ty=Tensor[(132), float32] */)
}

def @func_18094() -> (Tensor[(13, 6, 11), uint16],) {
  %123 = @func_17873() /* ty=(Tensor[(13, 1, 11), float32],) */;
  %124 = %123.0;
  %125 = cast(%124, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %126 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 11), float32] */;
  %127 = power(%125, %126) /* ty=Tensor[(13, 6, 11), float32] */;
  %128 = cast(%127, dtype="uint16") /* ty=Tensor[(13, 6, 11), uint16] */;
  %129 = cast(%124, dtype="uint16") /* ty=Tensor[(13, 1, 11), uint16] */;
  %130 = multiply(%128, %129) /* ty=Tensor[(13, 6, 11), uint16] */;
  (%130,)
}

def @main(%var_20509: Tensor[(21), uint64], %var_20510: Tensor[(448), float64], %var_20536: Tensor[(504), uint16], %var_20537: Tensor[(192), bool]) -> (Tensor[(13, 1, 11), float64], Tensor[(15, 2, 2), float64], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(630), float32], Tensor[(504), uint16], Tensor[(192), bool], Tensor[(13, 11, 11), float32]) {
  %131 = @func_14705() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %132 = cast(%var_20509, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %133 = cast(%var_20510, dtype="float64") /* ty=Tensor[(448), float64] */;
  %134 = reshape(%132, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
  %135 = reshape(%133, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %136 = @func_3430(%134, %135) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %138 = cast(%var_20536, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %139 = cast(%var_20537, dtype="bool") /* ty=Tensor[(192), bool] */;
  %140 = reshape(%137, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %141 = reshape(%138, newshape=[12, 42]) /* ty=Tensor[(12, 42), uint16] */;
  %142 = reshape(%139, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %143 = @func_14540(%140, %141, %142) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) */;
  %144 = %143.10;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
  %146 = %131.0;
  %147 = %136.0;
  %148 = rsqrt(%145) /* ty=Tensor[(13, 11, 11), float32] */;
  (%146, %147, %var_20509, %var_20510, meta[relay.Constant][9] /* ty=Tensor[(630), float32] */, %var_20536, %var_20537, %148)
}

def @func_16719() -> Tensor[(54), bool] {
  %149 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %149.2
}

def @func_11061(%var_10957: float64, %var_10958: Tensor[(7, 1, 8), float64], %var_11001: Tensor[(210), float32], %var_11002: Tensor[(588), float32], %var_11003: Tensor[(448), float64], %var_11051: Tensor[(20, 4), uint32]) -> (Tensor[(54), bool], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(1, 9, 6), float32], Tensor[(7, ?, 8), int64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(20, 4), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
  %150 = cast(%var_11001, dtype="float32") /* ty=Tensor[(210), float32] */;
  %151 = cast(%var_11002, dtype="float32") /* ty=Tensor[(588), float32] */;
  %152 = cast(%var_11003, dtype="float64") /* ty=Tensor[(448), float64] */;
  %153 = reshape(%150, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %154 = reshape(%151, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %155 = reshape(%152, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %156 = @func_6196(%153, %154, %155) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %157 = cast(meta[relay.Constant][10] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %158 = reshape(%157, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %159 = @func_9585(%158) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %160 = %159.0;
  %161 = cast(%160, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %162 = cast(%var_10957, dtype="bool") /* ty=bool */;
  %163 = cast(%var_10958, dtype="bool") /* ty=Tensor[(7, 1, 8), bool] */;
  %164 = greater(%162, %163) /* ty=Tensor[(7, 1, 8), bool] */;
  %165 = cast(%var_10958, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  %166 = cast(%var_10957, dtype="float32") /* ty=float32 */;
  %167 = power(%165, %166) /* ty=Tensor[(7, 1, 8), float32] */;
  %168 = cast(%167, dtype="int64") /* ty=Tensor[(7, 1, 8), int64] */;
  %169 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%164, dtype="int64") /* ty=Tensor[(7, 1, 8), int64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %172 = cast(meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %173 = cast(%var_11051, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %174 = reshape(%172, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %175 = reshape(%173, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %176 = @func_936(%174, %175) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %177 = cast(meta[relay.Constant][12] /* ty=Tensor[(2048), uint64] */, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(2048), uint64] */, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %179 = reshape(%177, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %180 = reshape(%178, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %181 = @func_6394(%179, %180) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
  %182 = %156.4;
  %183 = rsqrt(%161) /* ty=Tensor[(1, 9, 6), float32] */;
  %184 = maximum(%170, %171) /* ty=Tensor[(7, ?, 8), int64] */;
  %185 = %176.2;
  %186 = %181.0;
  (meta[relay.Constant][10] /* ty=Tensor[(54), bool] */, %182, %var_11001, %var_11002, %var_11003, %183, %184, %185, meta[relay.Constant][11] /* ty=Tensor[(1890), float64] */, %var_11051, %186, meta[relay.Constant][12] /* ty=Tensor[(2048), uint64] */)
}

def @func_17652() -> Tensor[(13, 1, 11), float64] {
  @func_17507() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_18466() -> (Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8]) {
  %187 = @func_15787() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %188 = @func_17652() /* ty=Tensor[(13, 1, 11), float64] */;
  %189 = %187.0;
  (%188, %189)
}

def @func_16805() -> Tensor[(15, 11, 2), uint8] {
  %190 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %190.0
}

def @func_18306(%var_18296: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), int32],) {
  %191 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %192 = cast(%191, dtype="int32") /* ty=Tensor[(13, 1, 11), int32] */;
  %193 = cast(%var_18296, dtype="int32") /* ty=Tensor[(13, 9, 11), int32] */;
  %194 = add(%192, %193) /* ty=Tensor[(13, 9, 11), int32] */;
  (%194,)
}

def @func_18957() -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8]) {
  %195 = @func_17843() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %196 = @func_16497() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) */;
  %197 = %195.0;
  %198 = %196.0;
  (%197, %198)
}

def @func_14685(%var_14663: Tensor[(4, 6, 4), float64]) -> Tensor[(4, 6, 4), float64] {
  %199 = cast(%var_14663, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  acos(%199) /* ty=Tensor[(4, 6, 4), float64] */
}

def @func_14126() -> (Tensor[(13, 1, 11), float64],) {
  %200 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  (%200,)
}

def @func_15196(%var_15186: Tensor[(40, 2), uint32], %var_15192: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
  %201 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %203 = cast(meta[relay.Constant][13] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %204 = reshape(%202, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %205 = reshape(%203, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %206 = cast(meta[relay.Constant][14] /* ty=Tensor[(1890, 1), float64] */, dtype="float64") /* ty=Tensor[(1890, 1), float64] */;
  %207 = cast(%var_15186, dtype="uint32") /* ty=Tensor[(40, 2), uint32] */;
  %208 = reshape(%206, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %209 = reshape(%207, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %210 = @func_5495(%208, %209) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
  %211 = cast(%var_15192, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %212 = cast(%var_15192, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %213 = reshape(%211, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %214 = reshape(%212, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %215 = @func_6394(%213, %214) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
  %216 = %201.0;
  %217 = @func_12200(%204, %205) /* ty=Tensor[(15, 11, 2), uint8] */;
  %218 = %210.3;
  %219 = %215.0;
  (%216, %217, meta[relay.Constant][13] /* ty=Tensor[(330), uint8] */, %218, meta[relay.Constant][14] /* ty=Tensor[(1890, 1), float64] */, %var_15186, %219, %var_15192)
}

def @func_17578(%var_17568: Tensor[(588), float32], %var_17569: Tensor[(448), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(54), bool], Tensor[(13, ?, 11), bool], Tensor[(1120), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %220 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %221 = cast(meta[relay.Constant][15] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %222 = cast(%var_17568, dtype="float32") /* ty=Tensor[(588), float32] */;
  %223 = cast(%var_17569, dtype="float64") /* ty=Tensor[(448), float64] */;
  %224 = reshape(%221, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %225 = reshape(%222, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %226 = reshape(%223, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %227 = @func_14967(%224, %225, %226) /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) */;
  %228 = @func_16116() /* ty=Tensor[(13, 1, 11), float64] */;
  %229 = %220.2;
  %230 = %227.1;
  (%228, %229, %230, meta[relay.Constant][15] /* ty=Tensor[(1120), float32] */, %var_17568, %var_17569)
}

def @func_16874() -> (Tensor[(15, 11, 2), uint8],) {
  %231 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %232 = %231.0;
  (%232,)
}

def @func_14860(%var_14857: Tensor[(1, 4, 13), float64]) -> (Tensor[(1, 4, 13), float64],) {
  %233 = cast(%var_14857, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
  %234 = asinh(%233) /* ty=Tensor[(1, 4, 13), float64] */;
  (%234,)
}

def @func_19575() -> (Tensor[(15, 11, 2), uint8],) {
  %235 = @func_19119() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */;
  %236 = %235.1;
  (%236,)
}

def @func_9123(%var_9100: Tensor[(4, 10, 13), int16], %var_9101: Tensor[(4, 10, 13), int16], %var_9108: Tensor[(21), uint64]) -> (Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) {
  %237 = cast(%var_9101, dtype="int16") /* ty=Tensor[(4, 10, 13), int16] */;
  %238 = shape_of(%var_9100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%var_9100, dtype="int16") /* ty=Tensor[(4, 10, 13), int16] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %241 = cast(%var_9108, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %243 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 56), float64] */, dtype="float64") /* ty=Tensor[(8, 56), float64] */;
  %244 = reshape(%241, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %245 = reshape(%242, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %246 = reshape(%243, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %247 = @func_2914(%244, %245, %246) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %248 = multiply(%239, %240) /* ty=Tensor[(4, 10, 13), int16] */;
  %249 = %247.7;
  (%248, %249, %var_9108, meta[relay.Constant][16] /* ty=Tensor[(132), float32] */, meta[relay.Constant][17] /* ty=Tensor[(8, 56), float64] */)
}

def @func_17103() -> (Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) {
  %250 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %251 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %252 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %253 = %250.0;
  (%251, %252, %253)
}

def @func_13438(%var_13279: Tensor[(1260), uint8], %var_13288: float64, %var_13335: Tensor[(80), uint32]) -> (Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) {
  %254 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %255 = cast(%var_13279, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %256 = reshape(%254, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %257 = reshape(%255, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
  %258 = @func_7254(%256, %257) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
  %259 = cast(%var_13288, dtype="float64") /* ty=float64 */;
  %260 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 7), float64] */;
  %261 = cast(meta[relay.Constant][20] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %262 = %258.0;
  %263 = cast(%262, dtype="int8") /* ty=Tensor[(4, 7, 9), int8] */;
  %264 = reshape(%259, newshape=[]) /* ty=float64 */;
  %265 = reshape(%260, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float64] */;
  %266 = reshape(%261, newshape=[21]) /* ty=Tensor[(21), uint64] */;
  %267 = reshape(%263, newshape=[252]) /* ty=Tensor[(252), int8] */;
  %268 = @func_6844(%264, %265, %266, %267) /* ty=(Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) */;
  %269 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 7, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 14), float64] */;
  %270 = log10(%269) /* ty=Tensor[(3, 7, 14), float64] */;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(3, 7, 14), float32] */;
  %272 = log(%271) /* ty=Tensor[(3, 7, 14), float32] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(3, 7, 14), float64] */;
  %274 = cast(meta[relay.Constant][22] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %275 = reshape(%274, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %276 = @func_6107(%275) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
  %277 = cast(meta[relay.Constant][23] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %278 = reshape(%277, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %279 = @func_9585(%278) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %280 = cast(%var_13335, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %281 = cast(%var_13335, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %282 = reshape(%280, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %283 = reshape(%281, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %284 = @func_349(%282, %283) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %285 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %286 = cast(%var_13279, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %287 = reshape(%285, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %288 = reshape(%286, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
  %289 = @func_7254(%287, %288) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
  %290 = cast(meta[relay.Constant][20] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %291 = cast(meta[relay.Constant][24] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %292 = cast(meta[relay.Constant][25] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %293 = reshape(%290, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %294 = reshape(%291, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %295 = reshape(%292, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %296 = @func_2914(%293, %294, %295) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %297 = %268.7;
  %298 = sinh(%273) /* ty=Tensor[(3, 7, 14), float64] */;
  %299 = %276.0;
  %300 = %279.0;
  %301 = %284.4;
  %302 = %289.1;
  %303 = %296.2;
  (%262, meta[relay.Constant][18] /* ty=Tensor[(60), float64] */, %var_13279, %297, %var_13288, meta[relay.Constant][19] /* ty=Tensor[(1, 7), float64] */, meta[relay.Constant][20] /* ty=Tensor[(21), uint64] */, %298, %299, meta[relay.Constant][22] /* ty=Tensor[(504), uint16] */, %300, meta[relay.Constant][23] /* ty=Tensor[(54), bool] */, %301, %var_13335, %302, %303, meta[relay.Constant][24] /* ty=Tensor[(132), float32] */, meta[relay.Constant][25] /* ty=Tensor[(448), float64] */)
}

def @func_20271() -> Tensor[(330), uint8] {
  %304 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
  %304.0
}

def @func_13519(%var_13489: Tensor[(1890), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) {
  %305 = cast(%var_13489, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %306 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 40), uint32] */, dtype="uint32") /* ty=Tensor[(2, 40), uint32] */;
  %307 = reshape(%305, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %308 = reshape(%306, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %309 = @func_5495(%307, %308) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
  %310 = cast(meta[relay.Constant][27] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %311 = cast(meta[relay.Constant][28] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %312 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %313 = reshape(%310, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %314 = reshape(%311, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %315 = reshape(%312, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %316 = @func_2914(%313, %314, %315) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %317 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  %318 = %309.0;
  %319 = %316.6;
  (%317, %318, %var_13489, meta[relay.Constant][26] /* ty=Tensor[(2, 40), uint32] */, %319, meta[relay.Constant][27] /* ty=Tensor[(21), uint64] */, meta[relay.Constant][28] /* ty=Tensor[(132, 1), float32] */, meta[relay.Constant][29] /* ty=Tensor[(448), float64] */)
}

def @func_13865() -> (Tensor[(15, 11, 2), uint8],) {
  %320 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %321 = %320.1;
  (%321,)
}

def @func_14705() -> (Tensor[(13, 1, 11), float64],) {
  %322 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%322,)
}

def @func_19390() -> Tensor[(13, 6, 11), uint16] {
  %323 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %323.0
}

def @func_6196(%var_6192: Tensor[(210), float32], %var_6193: Tensor[(588), float32], %var_6194: Tensor[(448), float64]) -> (Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %324 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 5), float32] */;
  %325 = cast(%var_6192, dtype="float32") /* ty=Tensor[(210), float32] */;
  %326 = cast(%var_6193, dtype="float32") /* ty=Tensor[(588), float32] */;
  %327 = cast(%var_6194, dtype="float64") /* ty=Tensor[(448), float64] */;
  %328 = reshape(%325, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
  %329 = reshape(%326, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %330 = reshape(%327, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %331 = @func_3294(%328, %329, %330) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */;
  %332 = acosh(%324) /* ty=Tensor[(13, 12, 5), float32] */;
  %333 = %331.4;
  (%332, %333, %var_6192, %var_6193, %var_6194)
}

def @func_18728() -> Tensor[(13, 1, 11), float64] {
  @func_17734() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_16838() -> (Tensor[(13, 1, 11), float64],) {
  %334 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  (%334,)
}

def @func_14250() -> (Tensor[(13, ?, 11), bool],) {
  %335 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  (%335,)
}

def @func_17985() -> (Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
  %336 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %337 = cast(meta[relay.Constant][31] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %338 = reshape(%337, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float64] */;
  %339 = %336.0;
  %340 = @func_13099(%338) /* ty=Tensor[(6, 9, 10), float64] */;
  (%339, %340, meta[relay.Constant][31] /* ty=Tensor[(540), float64] */)
}

def @func_13099(%var_13095: Tensor[(6, 9, 10), float64]) -> Tensor[(6, 9, 10), float64] {
  %341 = cast(%var_13095, dtype="float64") /* ty=Tensor[(6, 9, 10), float64] */;
  erf(%341) /* ty=Tensor[(6, 9, 10), float64] */
}

def @func_17293() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %342 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %343 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %344 = %342.0;
  (%343, %344)
}

def @func_17873() -> (Tensor[(13, 1, 11), float32],) {
  %345 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  (%345,)
}

def @func_13831(%var_13687: Tensor[(2, 8, 13), float64], %var_13691: Tensor[(630, 2), uint8], %var_13692: float64, %var_13693: Tensor[(40, 2), uint32], %var_13716: Tensor[(210), float32], %var_13717: Tensor[(7, 84), float32]) -> (Tensor[(60), float64], Tensor[(630, 2), uint8], float64, Tensor[(40, 2), uint32], Tensor[(16, 11, 12), float64], Tensor[(264, 8), float32], Tensor[(210), float32], Tensor[(7, 84), float32], Tensor[(448), float64], Tensor[(1, 4, 16), int64], Tensor[(2, 32), int64], Tensor[(132, 1), float32], Tensor[(1890), float64], Tensor[(2, 8, 13), float64]) {
  %346 = cast(%var_13691, dtype="uint8") /* ty=Tensor[(630, 2), uint8] */;
  %347 = cast(%var_13692, dtype="float64") /* ty=float64 */;
  %348 = cast(%var_13693, dtype="uint32") /* ty=Tensor[(40, 2), uint32] */;
  %349 = reshape(%346, newshape=[1260]) /* ty=Tensor[(1260), uint8] */;
  %350 = reshape(%347, newshape=[]) /* ty=float64 */;
  %351 = reshape(%348, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %352 = @func_13438(%349, %350, %351) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %353 = cast(meta[relay.Constant][32] /* ty=Tensor[(264, 8), float32] */, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
  %354 = cast(meta[relay.Constant][32] /* ty=Tensor[(264, 8), float32] */, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
  %355 = cast(%var_13716, dtype="float32") /* ty=Tensor[(210), float32] */;
  %356 = cast(%var_13717, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
  %357 = cast(meta[relay.Constant][33] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %358 = reshape(%353, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %359 = reshape(%354, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %360 = reshape(%355, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
  %361 = reshape(%356, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %362 = reshape(%357, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
  %363 = @func_10853(%358, %359, %360, %361, %362) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
  %364 = cast(%var_13692, dtype="int64") /* ty=int64 */;
  %365 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 32), int64] */, dtype="int64") /* ty=Tensor[(2, 32), int64] */;
  %366 = reshape(%364, newshape=[]) /* ty=int64 */;
  %367 = reshape(%365, newshape=[1, 4, 16]) /* ty=Tensor[(1, 4, 16), int64] */;
  %368 = @func_8045(%366, %367) /* ty=(Tensor[(1, 4, 16), int64],) */;
  %369 = cast(meta[relay.Constant][35] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %370 = reshape(%369, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %371 = @func_13519(%370) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) */;
  %372 = cast(%var_13687, dtype="float64") /* ty=Tensor[(2, 8, 13), float64] */;
  %373 = sigmoid(%372) /* ty=Tensor[(2, 8, 13), float64] */;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(2, 8, 13), float64] */;
  %375 = %352.1;
  %376 = %363.0;
  %377 = %368.0;
  %378 = %371.6;
  %379 = sinh(%374) /* ty=Tensor[(2, 8, 13), float64] */;
  (%375, %var_13691, %var_13692, %var_13693, %376, meta[relay.Constant][32] /* ty=Tensor[(264, 8), float32] */, %var_13716, %var_13717, meta[relay.Constant][33] /* ty=Tensor[(448), float64] */, %377, meta[relay.Constant][34] /* ty=Tensor[(2, 32), int64] */, %378, meta[relay.Constant][35] /* ty=Tensor[(1890), float64] */, %379)
}

def @func_17398(%var_17357: Tensor[(448, 1), float64]) -> (Tensor[(1260), uint8], Tensor[(3, 18), bool], Tensor[(13, 1, 11), float64], Tensor[(448, 6), bool], Tensor[(13, 60, 11), bool]) {
  %380 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %381 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 18), bool] */, dtype="bool") /* ty=Tensor[(3, 18), bool] */;
  %382 = cast(%var_17357, dtype="float64") /* ty=Tensor[(448, 1), float64] */;
  %383 = reshape(%380, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %384 = reshape(%381, newshape=[54]) /* ty=Tensor[(54), bool] */;
  %385 = reshape(%382, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %386 = @func_17188(%383, %384, %385) /* ty=(Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) */;
  %387 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %388 = cast(%var_17357, dtype="bool") /* ty=Tensor[(448, 1), bool] */;
  %389 = cast(meta[relay.Constant][38] /* ty=Tensor[(448, 6), float64] */, dtype="bool") /* ty=Tensor[(448, 6), bool] */;
  %390 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %391 = cast(%390, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %392 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 1), float64] */, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %393 = %386.2;
  %394 = %387.0;
  %395 = greater(%388, %389) /* ty=Tensor[(448, 6), bool] */;
  %396 = logical_and(%391, %392) /* ty=Tensor[(13, 60, 11), bool] */;
  (%393, meta[relay.Constant][37] /* ty=Tensor[(3, 18), bool] */, %394, %395, %396)
}

def @func_17507() -> Tensor[(13, 1, 11), float64] {
  @func_16116() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_18160(%var_18146: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(540), float64], Tensor[(8, 16, 16), int32], Tensor[(2048), uint64]) {
  %397 = @func_17985() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
  %398 = @func_17985() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
  %399 = cast(%var_18146, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %400 = cast(%var_18146, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %401 = reshape(%399, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %402 = reshape(%400, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %403 = @func_6394(%401, %402) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
  %404 = %397.0;
  %405 = %398.2;
  %406 = %403.1;
  (%404, %405, %406, %var_18146)
}

def @func_16497() -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) {
  %407 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
  %408 = %407.0;
  %409 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  (%408, %409)
}

def @func_17843() -> (Tensor[(13, 1, 11), float64],) {
  %410 = @func_14705() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %411 = %410.0;
  (%411,)
}

def @func_15768(%var_15741: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(13, ?, 11), bool]) {
  %412 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %413 = cast(%var_15741, dtype="float64") /* ty=Tensor[(448), float64] */;
  %414 = cast(%var_15741, dtype="float64") /* ty=Tensor[(448), float64] */;
  %415 = reshape(%413, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %416 = reshape(%414, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %417 = @func_86(%415, %416) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %418 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %419 = %412.0;
  %420 = %417.0;
  %421 = %418.0;
  (%419, %420, %var_15741, %421)
}

def @func_16134() -> (Tensor[(330), uint8],) {
  %422 = @func_15362() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %423 = %422.2;
  (%423,)
}

def @func_14115() -> Tensor[(13, 1, 11), float64] {
  %424 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %424.0
}

def @func_6844(%var_6815: float64, %var_6816: Tensor[(1, 1, 7), float64], %var_6824: Tensor[(21), uint64], %var_6838: Tensor[(252), int8]) -> (Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) {
  %425 = cast(%var_6815, dtype="bool") /* ty=bool */;
  %426 = cast(%var_6816, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
  %427 = cast(%var_6824, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %428 = cast(meta[relay.Constant][39] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %429 = reshape(%427, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
  %430 = reshape(%428, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %431 = @func_3430(%429, %430) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %432 = cast(%var_6838, dtype="int8") /* ty=Tensor[(252), int8] */;
  %433 = cast(%var_6838, dtype="int8") /* ty=Tensor[(252), int8] */;
  %434 = reshape(%432, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
  %435 = reshape(%433, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
  %436 = @func_1325(%434, %435) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) */;
  %437 = cast(meta[relay.Constant][40] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %438 = cast(meta[relay.Constant][39] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %439 = reshape(%437, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %440 = reshape(%438, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %441 = @func_627(%439, %440) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %442 = less_equal(%425, %426) /* ty=Tensor[(1, 1, 7), bool] */;
  %443 = %431.3;
  %444 = %436.0;
  %445 = %441.2;
  (%442, %443, %var_6824, meta[relay.Constant][39] /* ty=Tensor[(448), float64] */, %444, %var_6838, %445, meta[relay.Constant][40] /* ty=Tensor[(588), float32] */)
}

def @func_15984() -> Tensor[(13, 1, 11), float64] {
  %446 = @func_15652() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %446.0
}

def @func_16221() -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) {
  %447 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %448 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %449 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %450 = %449.0;
  %451 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 11, 2), uint8] */, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %455 = %447.0;
  %456 = cast(%455, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %457 = cast(%455, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %458 = reshape(%456, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %459 = reshape(%457, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %460 = %448.0;
  %461 = minimum(%453, %454) /* ty=Tensor[(15, 11, 2), int64] */;
  %462 = @func_12200(%458, %459) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%455, %460, %461, %462)
}

def @func_10853(%var_10812: Tensor[(16, 11, 12), float32], %var_10813: Tensor[(16, 11, 12), float32], %var_10846: Tensor[(35, 6), float32], %var_10847: Tensor[(588), float32], %var_10848: Tensor[(8, 56), float64]) -> (Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) {
  %463 = cast(%var_10813, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
  %464 = cast(%var_10813, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %465 = shape_of(%var_10812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%var_10812, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %468 = less_equal(%466, %467) /* ty=Tensor[(16, 11, 12), bool] */;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
  %470 = cast(%var_10846, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %471 = cast(%var_10847, dtype="float32") /* ty=Tensor[(588), float32] */;
  %472 = cast(%var_10848, dtype="float64") /* ty=Tensor[(8, 56), float64] */;
  %473 = reshape(%470, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %474 = reshape(%471, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %475 = reshape(%472, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %476 = @func_6196(%473, %474, %475) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %477 = log2(%463) /* ty=Tensor[(16, 11, 12), float64] */;
  %478 = sin(%469) /* ty=Tensor[(16, 11, 12), float64] */;
  %479 = %476.4;
  (%477, %478, %479, %var_10846, %var_10847, %var_10848)
}

def @func_13650(%var_13644: Tensor[(16, 7, 10), float32]) -> (Tensor[(16, 7, 10), float32],) {
  %480 = cast(%var_13644, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
  %481 = sqrt(%480) /* ty=Tensor[(16, 7, 10), float32] */;
  (%481,)
}

def @func_12200(%var_12168: Tensor[(15, 11, 2), uint8], %var_12169: Tensor[(15, 11, 2), uint8]) -> Tensor[(15, 11, 2), uint8] {
  %482 = cast(%var_12169, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %483 = shape_of(%var_12168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_12168, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%484, %485) /* ty=Tensor[(15, 11, 2), uint8] */
}

def @func_19705(%var_19685: Tensor[(448), float64], %var_19694: Tensor[(64), int64]) -> (Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) {
  %486 = cast(%var_19685, dtype="float64") /* ty=Tensor[(448), float64] */;
  %487 = cast(%var_19685, dtype="float64") /* ty=Tensor[(448), float64] */;
  %488 = reshape(%486, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %489 = reshape(%487, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %490 = @func_86(%488, %489) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %491 = cast(%var_19694, dtype="int64") /* ty=Tensor[(64), int64] */;
  %492 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 126), float32] */, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %493 = reshape(%491, newshape=[8, 8]) /* ty=Tensor[(8, 8), int64] */;
  %494 = reshape(%492, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %495 = @func_16312(%493, %494) /* ty=(Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) */;
  %496 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %497 = %496.0;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(13, 6, 11), float64] */;
  %499 = %490.0;
  %500 = %495.1;
  %501 = sqrt(%498) /* ty=Tensor[(13, 6, 11), float64] */;
  (%499, %var_19685, %500, %var_19694, meta[relay.Constant][42] /* ty=Tensor[(5, 126), float32] */, %501)
}

def @func_15672() -> Tensor[(13, 1, 11), float64] {
  %502 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %502.0
}

def @func_11514(%var_11458: Tensor[(13, 3, 12), float64], %var_11459: Tensor[(13, 3, 12), float64], %var_11464: Tensor[(1890), float64], %var_11465: Tensor[(80, 1), uint32], %var_11482: Tensor[(80, 1), uint32], %var_11491: Tensor[(210), float32], %var_11492: Tensor[(588), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) {
  %503 = cast(%var_11459, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %504 = shape_of(%var_11458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_11458, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = cast(%var_11464, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %508 = cast(%var_11465, dtype="uint32") /* ty=Tensor[(80, 1), uint32] */;
  %509 = reshape(%507, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %510 = reshape(%508, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %511 = @func_936(%509, %510) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %512 = cast(%var_11482, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %513 = shape_of(%var_11465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%var_11465, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %516 = cast(%var_11491, dtype="float32") /* ty=Tensor[(210), float32] */;
  %517 = cast(%var_11492, dtype="float32") /* ty=Tensor[(588), float32] */;
  %518 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %519 = reshape(%516, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %520 = reshape(%517, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %521 = reshape(%518, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %522 = @func_6196(%519, %520, %521) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %523 = cast(%var_11482, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %524 = erf(%523) /* ty=Tensor[(80, 1), float32] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %526 = cos(%525) /* ty=Tensor[(80, 1), float32] */;
  %527 = cast(%526, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %528 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %529 = greater_equal(%505, %506) /* ty=Tensor[(13, 3, 12), bool] */;
  %530 = %511.3;
  %531 = logical_and(%514, %515) /* ty=Tensor[(80, ?), bool] */;
  %532 = %522.3;
  %533 = not_equal(%527, %528) /* ty=Tensor[(80, 448), bool] */;
  (%529, %530, %var_11464, %531, %532, %var_11491, %var_11492, %533)
}

def @func_19435() -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
  %534 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %535 = %534.0;
  %536 = @func_15672() /* ty=Tensor[(13, 1, 11), float64] */;
  (%535, %536)
}

def @func_19562() -> (Tensor[(13, 1, 11), float64],) {
  %537 = @func_15984() /* ty=Tensor[(13, 1, 11), float64] */;
  (%537,)
}

def @func_18358() -> (Tensor[(13, ?, 11), bool],) {
  %538 = @func_14250() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %539 = %538.0;
  (%539,)
}

def @func_16348() -> (Tensor[(13, ?, 11), bool],) {
  %540 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  (%540,)
}

def @func_13963(%var_13958: Tensor[(90, 1), uint8], %var_13959: Tensor[(1, 1260), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) {
  %541 = cast(%var_13958, dtype="uint8") /* ty=Tensor[(90, 1), uint8] */;
  %542 = cast(%var_13959, dtype="uint8") /* ty=Tensor[(1, 1260), uint8] */;
  %543 = reshape(%541, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint8] */;
  %544 = reshape(%542, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), uint8] */;
  %545 = @func_6554(%543, %544) /* ty=(Tensor[(14, 9, 10), bool],) */;
  %546 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  %547 = %545.0;
  (%546, %547, %var_13958, %var_13959)
}

def @func_15631() -> (Tensor[(13, 1, 11), float64],) {
  %548 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %549 = %548.0;
  %550 = cast(%549, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
  %551 = acos(%550) /* ty=Tensor[(13, 1, 11), float64] */;
  (%551,)
}

def @func_1758(%var_1744: Tensor[(11, 2, 6), float32]) -> Tensor[(11, 2, 6), float32] {
  %552 = cast(%var_1744, dtype="float32") /* ty=Tensor[(11, 2, 6), float32] */;
  asinh(%552) /* ty=Tensor[(11, 2, 6), float32] */
}

def @func_6534(%var_6486: Tensor[(15, 10, 5), float32], %var_6502: Tensor[(15, 10, 5), float32], %var_6530: Tensor[(588), float32], %var_6531: Tensor[(448), float64]) -> (Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %553 = cast(%var_6486, dtype="float32") /* ty=Tensor[(15, 10, 5), float32] */;
  %554 = acosh(%553) /* ty=Tensor[(15, 10, 5), float32] */;
  %555 = cast(%var_6502, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %559 = cast(meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %560 = cast(%var_6530, dtype="float32") /* ty=Tensor[(588), float32] */;
  %561 = cast(%var_6531, dtype="float64") /* ty=Tensor[(448), float64] */;
  %562 = reshape(%559, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
  %563 = reshape(%560, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %564 = reshape(%561, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %565 = @func_3294(%562, %563, %564) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */;
  %566 = floor_mod(%557, %558) /* ty=Tensor[(15, 10, 5), float64] */;
  %567 = %565.3;
  (%566, %567, meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, %var_6530, %var_6531)
}

def @func_17024() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %568 = @func_16874() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %569 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %570 = %568.0;
  (%569, %570)
}

def @func_17420() -> (Tensor[(15, 11, 2), uint8],) {
  %571 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %572 = %571.0;
  (%572,)
}

def @func_6554(%var_6544: Tensor[(1, 9, 10), uint8], %var_6545: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), bool],) {
  %573 = cast(%var_6544, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
  %574 = cast(%var_6545, dtype="bool") /* ty=Tensor[(14, 9, 10), bool] */;
  %575 = equal(%573, %574) /* ty=Tensor[(14, 9, 10), bool] */;
  (%575,)
}

def @func_14610() -> (Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) {
  %576 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %578 = cos(%577) /* ty=Tensor[(13, 1, 11), float32] */;
  %579 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %580 = %579.0;
  %581 = cast(%580, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %582 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%576, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %585 = less_equal(%583, %584) /* ty=Tensor[(13, ?, 11), bool] */;
  %586 = cast(%585, dtype="uint8") /* ty=Tensor[(13, ?, 11), uint8] */;
  %587 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%578, dtype="uint8") /* ty=Tensor[(13, 1, 11), uint8] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %590 = cast(meta[relay.Constant][45] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %591 = reshape(%590, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %592 = @func_9585(%591) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %593 = multiply(%588, %589) /* ty=Tensor[(13, ?, 11), uint8] */;
  %594 = %592.0;
  (%593, %594, meta[relay.Constant][45] /* ty=Tensor[(54), bool] */)
}

def @func_20064(%var_20039: Tensor[(448), float64], %var_20040: Tensor[(64), int64]) -> (Tensor[(13, 1, 11), float32], Tensor[(2112), float32], Tensor[(448), float64], Tensor[(64), int64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %595 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
  %596 = cast(%var_20039, dtype="float64") /* ty=Tensor[(448), float64] */;
  %597 = cast(%var_20040, dtype="int64") /* ty=Tensor[(64), int64] */;
  %598 = reshape(%596, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %599 = reshape(%597, newshape=[64]) /* ty=Tensor[(64), int64] */;
  %600 = @func_19705(%598, %599) /* ty=(Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) */;
  %601 = cast(meta[relay.Constant][46] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %602 = cast(meta[relay.Constant][46] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %603 = reshape(%601, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %604 = reshape(%602, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %605 = %595.2;
  %606 = %600.2;
  %607 = @func_12200(%603, %604) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%605, %606, %var_20039, %var_20040, %607, meta[relay.Constant][46] /* ty=Tensor[(330), uint8] */)
}

def @func_18007() -> (Tensor[(15, 11, 2), uint8],) {
  %608 = @func_17756() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %609 = %608.0;
  (%609,)
}

def @func_1325(%var_1292: Tensor[(4, 7, 9), int8], %var_1293: Tensor[(4, 7, 9), int8]) -> (Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) {
  %610 = cast(%var_1293, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %611 = shape_of(%var_1292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_1292, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %614 = cast(%var_1293, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %615 = greater_equal(%612, %613) /* ty=Tensor[(4, 7, 9), bool] */;
  %616 = sigmoid(%614) /* ty=Tensor[(4, 7, 9), float32] */;
  (%615, %616)
}

def @func_18648() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %617 = @func_17420() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %618 = @func_15984() /* ty=Tensor[(13, 1, 11), float64] */;
  %619 = %617.0;
  (%618, %619)
}

def @func_19856() -> Tensor[(13, 1, 11), float64] {
  @func_14838() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17756() -> (Tensor[(15, 11, 2), uint8],) {
  %620 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %621 = %620.0;
  (%621,)
}

def @func_2914(%var_2844: Tensor[(1, 3, 7), uint64], %var_2865: Tensor[(132), float32], %var_2871: Tensor[(448), float64]) -> (Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) {
  %622 = cast(%var_2865, dtype="float32") /* ty=Tensor[(132), float32] */;
  %623 = reshape(%622, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %624 = cast(meta[relay.Constant][47] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %625 = cast(%var_2871, dtype="float64") /* ty=Tensor[(448), float64] */;
  %626 = reshape(%624, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %627 = reshape(%625, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %628 = @func_627(%626, %627) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %629 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %630 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %631 = reshape(%629, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %632 = reshape(%630, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %633 = @func_349(%631, %632) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %634 = cast(%var_2865, dtype="float32") /* ty=Tensor[(132), float32] */;
  %635 = reshape(%634, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %636 = cast(%var_2844, dtype="uint64") /* ty=Tensor[(1, 3, 7), uint64] */;
  %637 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 3, 7), uint64] */, dtype="uint64") /* ty=Tensor[(15, 3, 7), uint64] */;
  %638 = right_shift(%636, %637) /* ty=Tensor[(15, 3, 7), uint64] */;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %640 = @func_1758(%623) /* ty=Tensor[(11, 2, 6), float32] */;
  %641 = %628.2;
  %642 = %633.4;
  %643 = @func_1758(%635) /* ty=Tensor[(11, 2, 6), float32] */;
  %644 = sigmoid(%639) /* ty=Tensor[(15, 3, 7), float32] */;
  (%640, %var_2865, %641, meta[relay.Constant][47] /* ty=Tensor[(588), float32] */, %var_2871, %642, meta[relay.Constant][48] /* ty=Tensor[(80), uint32] */, %643, %644)
}

def @func_17903(%var_17889: int16, %var_17890: Tensor[(2, 1, 15), int16], %var_17898: Tensor[(21), uint64]) -> (Tensor[(2, 1, 15), int16], Tensor[(13, 1, 11), float32], Tensor[(8, 5, 2), uint16], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
  %645 = cast(%var_17889, dtype="int16") /* ty=int16 */;
  %646 = cast(%var_17890, dtype="int16") /* ty=Tensor[(2, 1, 15), int16] */;
  %647 = @func_17103() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) */;
  %648 = cast(%var_17898, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %649 = cast(meta[relay.Constant][50] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %650 = cast(meta[relay.Constant][51] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %651 = reshape(%648, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %652 = reshape(%649, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %653 = reshape(%650, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %654 = @func_2914(%651, %652, %653) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %655 = bitwise_and(%645, %646) /* ty=Tensor[(2, 1, 15), int16] */;
  %656 = %647.0;
  %657 = %654.5;
  (%655, %656, %657, %var_17898, meta[relay.Constant][50] /* ty=Tensor[(132), float32] */, meta[relay.Constant][51] /* ty=Tensor[(448), float64] */)
}

def @func_12965(%var_12934: Tensor[(3, 14, 15), int64], %var_12935: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) {
  %658 = cast(%var_12935, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %659 = shape_of(%var_12934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_12934, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %662 = cast(meta[relay.Constant][52] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %663 = cast(meta[relay.Constant][53] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %664 = cast(meta[relay.Constant][54] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %665 = reshape(%662, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %666 = reshape(%663, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %667 = reshape(%664, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %668 = @func_2914(%665, %666, %667) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %669 = cast(meta[relay.Constant][52] /* ty=Tensor[(21), uint64] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %670 = cast(meta[relay.Constant][53] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %671 = bitwise_and(%660, %661) /* ty=Tensor[(3, 14, 15), int64] */;
  %672 = %668.8;
  %673 = subtract(%669, %670) /* ty=Tensor[(132, 21), float32] */;
  (%671, %672, meta[relay.Constant][54] /* ty=Tensor[(448), float64] */, %673)
}

def @func_6394(%var_6359: Tensor[(8, 16, 16), uint64], %var_6360: Tensor[(8, 16, 16), uint64]) -> (Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) {
  %674 = cast(%var_6360, dtype="uint64") /* ty=Tensor[(8, 16, 16), uint64] */;
  %675 = shape_of(%var_6359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_6359, dtype="uint64") /* ty=Tensor[(8, 16, 16), uint64] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %678 = cast(%var_6360, dtype="int32") /* ty=Tensor[(8, 16, 16), int32] */;
  %679 = shape_of(%var_6359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_6359, dtype="int32") /* ty=Tensor[(8, 16, 16), int32] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %682 = add(%676, %677) /* ty=Tensor[(8, 16, 16), uint64] */;
  %683 = bitwise_or(%680, %681) /* ty=Tensor[(8, 16, 16), int32] */;
  (%682, %683)
}

def @func_627(%var_615: Tensor[(7, 7, 12), float32], %var_622: Tensor[(448), float64]) -> (Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) {
  %684 = cast(%var_615, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
  %685 = cast(%var_622, dtype="float64") /* ty=Tensor[(448), float64] */;
  %686 = cast(%var_622, dtype="float64") /* ty=Tensor[(448), float64] */;
  %687 = reshape(%685, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %688 = reshape(%686, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %689 = @func_86(%687, %688) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %690 = log10(%684) /* ty=Tensor[(7, 7, 12), float32] */;
  %691 = %689.0;
  (%690, %691, %var_622)
}

def @func_14811() -> (Tensor[(13, 1, 11), float64],) {
  %692 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%692,)
}

def @func_15902(%var_15885: Tensor[(143, 11), float64]) -> (Tensor[(132), float32], Tensor[(520), int16], Tensor[(21), uint64], Tensor[(13, ?, 11), int64], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(13, 11, 11), uint32], Tensor[(143, 11), float64], Tensor[(448), float64]) {
  %693 = cast(meta[relay.Constant][55] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %694 = cast(meta[relay.Constant][55] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %695 = cast(meta[relay.Constant][56] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %696 = reshape(%693, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int16] */;
  %697 = reshape(%694, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int16] */;
  %698 = reshape(%695, newshape=[21]) /* ty=Tensor[(21), uint64] */;
  %699 = @func_9123(%696, %697, %698) /* ty=(Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) */;
  %700 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %701 = %700.0;
  %702 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="int64") /* ty=Tensor[(13, 1, 11), int64] */;
  %705 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%701, dtype="int64") /* ty=Tensor[(13, 1, 11), int64] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %708 = cast(meta[relay.Constant][57] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %709 = cast(meta[relay.Constant][57] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %710 = reshape(%708, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %711 = reshape(%709, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %712 = @func_349(%710, %711) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %713 = cast(%var_15885, dtype="float64") /* ty=Tensor[(143, 11), float64] */;
  %714 = reshape(%713, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %715 = cast(meta[relay.Constant][57] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %716 = cast(meta[relay.Constant][57] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %717 = reshape(%715, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %718 = reshape(%716, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %719 = @func_349(%717, %718) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %720 = %699.3;
  %721 = bitwise_xor(%706, %707) /* ty=Tensor[(13, ?, 11), int64] */;
  %722 = %712.1;
  %723 = @func_14308(%714) /* ty=Tensor[(13, 11, 11), uint32] */;
  %724 = %719.2;
  (%720, meta[relay.Constant][55] /* ty=Tensor[(520), int16] */, meta[relay.Constant][56] /* ty=Tensor[(21), uint64] */, %721, %722, meta[relay.Constant][57] /* ty=Tensor[(80), uint32] */, %723, %var_15885, %724)
}

def @func_18993() -> (Tensor[(13, 4, 11), float32],) {
  %725 = @func_16116() /* ty=Tensor[(13, 1, 11), float64] */;
  %726 = cast(%725, dtype="uint8") /* ty=Tensor[(13, 1, 11), uint8] */;
  %727 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(13, 4, 11), uint8] */;
  %728 = minimum(%726, %727) /* ty=Tensor[(13, 4, 11), uint8] */;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %730 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 4, 11), float64] */, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %733 = floor_mod(%731, %732) /* ty=Tensor[(13, 4, 11), float32] */;
  (%733,)
}

def @func_15002(%var_14982: Tensor[(468), float64], %var_14983: Tensor[(1890), float64], %var_14992: Tensor[(1573), float64]) -> (Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) {
  %734 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %735 = cast(%var_14982, dtype="float64") /* ty=Tensor[(468), float64] */;
  %736 = cast(%var_14983, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %737 = cast(meta[relay.Constant][59] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %738 = cast(meta[relay.Constant][60] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %739 = reshape(%735, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %740 = reshape(%736, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %741 = reshape(%737, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %742 = reshape(%738, newshape=[7, 84]) /* ty=Tensor[(7, 84), float32] */;
  %743 = @func_14746(%739, %740, %741, %742) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) */;
  %744 = cast(%var_14992, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %745 = reshape(%744, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %746 = %734.2;
  %747 = %743.6;
  %748 = @func_14308(%745) /* ty=Tensor[(13, 11, 11), uint32] */;
  (%746, %747, %var_14982, %var_14983, meta[relay.Constant][59] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][60] /* ty=Tensor[(588), float32] */, %748, %var_14992)
}

def @func_15841() -> Tensor[(13, ?, 11), uint8] {
  %749 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %749.0
}

def @func_16624() -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) {
  %750 = @func_16013() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %751 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
  %752 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 630), float64] */, dtype="float64") /* ty=Tensor[(3, 630), float64] */;
  %753 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 20), uint32] */, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
  %754 = reshape(%752, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %755 = reshape(%753, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %756 = @func_936(%754, %755) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %757 = %750.0;
  %758 = %751.0;
  %759 = %756.3;
  (%757, %758, %759, meta[relay.Constant][61] /* ty=Tensor[(3, 630), float64] */, meta[relay.Constant][62] /* ty=Tensor[(4, 20), uint32] */)
}

def @func_16312(%var_16290: Tensor[(8, 8), int64], %var_16303: Tensor[(630), float32]) -> (Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) {
  %760 = cast(meta[relay.Constant][63] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %761 = cast(meta[relay.Constant][63] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %762 = cast(meta[relay.Constant][64] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %763 = cast(meta[relay.Constant][65] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %764 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
  %765 = reshape(%760, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %766 = reshape(%761, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %767 = reshape(%762, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
  %768 = reshape(%763, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %769 = reshape(%764, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
  %770 = @func_10853(%765, %766, %767, %768, %769) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
  %771 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
  %773 = sigmoid(%772) /* ty=Tensor[(13, 1, 11), float64] */;
  %774 = cast(%771, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %779 = cast(%var_16290, dtype="int64") /* ty=Tensor[(8, 8), int64] */;
  %780 = reshape(%778, newshape=[]) /* ty=int64 */;
  %781 = reshape(%779, newshape=[1, 4, 16]) /* ty=Tensor[(1, 4, 16), int64] */;
  %782 = @func_8045(%780, %781) /* ty=(Tensor[(1, 4, 16), int64],) */;
  %783 = cast(%var_16303, dtype="float32") /* ty=Tensor[(630), float32] */;
  %784 = reshape(%783, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %785 = @func_11441(%784) /* ty=(Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) */;
  %786 = %770.2;
  %787 = logical_and(%776, %777) /* ty=Tensor[(13, ?, 11), bool] */;
  %788 = %782.0;
  %789 = %785.2;
  (%786, meta[relay.Constant][63] /* ty=Tensor[(2112), float32] */, meta[relay.Constant][64] /* ty=Tensor[(210), float32] */, meta[relay.Constant][65] /* ty=Tensor[(588), float32] */, meta[relay.Constant][66] /* ty=Tensor[(2, 224), float64] */, %787, %788, -4 /* ty=int64 */, %var_16290, %789, %var_16303)
}

def @func_9827(%var_9813: Tensor[(15, 13, 2), int8], %var_9814: Tensor[(15, 13, 2), int8]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(21), uint64], Tensor[(192), bool], Tensor[(1792), uint64]) {
  %790 = cast(%var_9814, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %791 = shape_of(%var_9813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_9813, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %794 = cast(meta[relay.Constant][67] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %795 = cast(meta[relay.Constant][67] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %796 = reshape(%794, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %797 = reshape(%795, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %798 = @func_86(%796, %797) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %799 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %800 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %801 = cast(meta[relay.Constant][67] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %802 = cast(meta[relay.Constant][69] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %803 = reshape(%799, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %804 = reshape(%800, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %805 = reshape(%801, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %806 = reshape(%802, newshape=[1792]) /* ty=Tensor[(1792), uint64] */;
  %807 = @func_6725(%803, %804, %805, %806) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */;
  %808 = less(%792, %793) /* ty=Tensor[(15, 13, 2), bool] */;
  %809 = %798.0;
  %810 = %807.2;
  (%808, %809, meta[relay.Constant][67] /* ty=Tensor[(448), float64] */, %810, meta[relay.Constant][68] /* ty=Tensor[(192), bool] */, meta[relay.Constant][69] /* ty=Tensor[(1792), uint64] */)
}

def @func_16577() -> (Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) {
  %811 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %812 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %813 = cast(%812, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %814 = @func_15787() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %815 = %811.2;
  %816 = exp(%813) /* ty=Tensor[(13, 1, 11), float32] */;
  %817 = @func_14838() /* ty=Tensor[(13, 1, 11), float64] */;
  %818 = %814.0;
  %819 = @func_15381() /* ty=Tensor[(1, 9, 6), bool] */;
  (%815, %816, %817, %818, %819)
}

def @func_17188(%var_17156: Tensor[(60), float64], %var_17161: Tensor[(54), bool], %var_17171: Tensor[(448), float64]) -> (Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) {
  %820 = cast(%var_17156, dtype="float64") /* ty=Tensor[(60), float64] */;
  %821 = cast(meta[relay.Constant][70] /* ty=Tensor[(1260), uint8] */, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %822 = reshape(%820, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %823 = reshape(%821, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
  %824 = @func_7254(%822, %823) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
  %825 = @func_16719() /* ty=Tensor[(54), bool] */;
  %826 = cast(%var_17161, dtype="int32") /* ty=Tensor[(54), int32] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(1), int32] */;
  %828 = cast(%825, dtype="int32") /* ty=Tensor[(54), int32] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?), int32] */;
  %830 = cast(meta[relay.Constant][71] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %831 = cast(meta[relay.Constant][71] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %832 = cast(meta[relay.Constant][72] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %833 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 588), float32] */, dtype="float32") /* ty=Tensor[(1, 588), float32] */;
  %834 = cast(%var_17171, dtype="float64") /* ty=Tensor[(448), float64] */;
  %835 = reshape(%830, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %836 = reshape(%831, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
  %837 = reshape(%832, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
  %838 = reshape(%833, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %839 = reshape(%834, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
  %840 = @func_10853(%835, %836, %837, %838, %839) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
  %841 = %824.2;
  %842 = subtract(%828, %829) /* ty=Tensor[(54), int32] */;
  %843 = %840.1;
  (%841, %var_17156, meta[relay.Constant][70] /* ty=Tensor[(1260), uint8] */, %842, %843, meta[relay.Constant][71] /* ty=Tensor[(2112), float32] */, meta[relay.Constant][72] /* ty=Tensor[(210), float32] */, meta[relay.Constant][73] /* ty=Tensor[(1, 588), float32] */, %var_17171)
}

def @func_7254(%var_7237: Tensor[(10, 1, 6), float64], %var_7252: Tensor[(1260, 1), uint8]) -> (Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) {
  %844 = cast(meta[relay.Constant][74] /* ty=Tensor[(252), int8] */, dtype="int8") /* ty=Tensor[(252), int8] */;
  %845 = cast(meta[relay.Constant][74] /* ty=Tensor[(252), int8] */, dtype="int8") /* ty=Tensor[(252), int8] */;
  %846 = reshape(%844, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
  %847 = reshape(%845, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
  %848 = @func_1325(%846, %847) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) */;
  %849 = cast(%var_7237, dtype="float64") /* ty=Tensor[(10, 1, 6), float64] */;
  %850 = atanh(%849) /* ty=Tensor[(10, 1, 6), float64] */;
  %851 = cast(%var_7237, dtype="uint64") /* ty=Tensor[(10, 1, 6), uint64] */;
  %852 = shape_of(%850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %853 = cast(%850, dtype="uint64") /* ty=Tensor[(10, 1, 6), uint64] */;
  %854 = dyn.reshape(%851, %852, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %855 = cast(meta[relay.Constant][75] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %856 = cast(%var_7252, dtype="uint8") /* ty=Tensor[(1260, 1), uint8] */;
  %857 = reshape(%855, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint8] */;
  %858 = reshape(%856, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), uint8] */;
  %859 = @func_6554(%857, %858) /* ty=(Tensor[(14, 9, 10), bool],) */;
  %860 = %848.0;
  %861 = bitwise_or(%853, %854) /* ty=Tensor[(10, ?, 6), uint64] */;
  %862 = %859.0;
  (%860, meta[relay.Constant][74] /* ty=Tensor[(252), int8] */, %861, %862, meta[relay.Constant][75] /* ty=Tensor[(90), uint8] */, %var_7252)
}

def @func_17734() -> Tensor[(13, 1, 11), float64] {
  %863 = @func_16838() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %863.0
}

def @func_19987() -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
  %864 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %865 = @func_19345() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %866 = %864.0;
  %867 = %865.0;
  %868 = @func_17734() /* ty=Tensor[(13, 1, 11), float64] */;
  (%866, %867, %868)
}

def @func_19549(%var_19510: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float32], Tensor[(54), bool], Tensor[(36, 14), uint16], Tensor[(1573), float64]) {
  %869 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
  %870 = cast(meta[relay.Constant][76] /* ty=Tensor[(36, 14), uint16] */, dtype="uint16") /* ty=Tensor[(36, 14), uint16] */;
  %871 = cast(%var_19510, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %872 = reshape(%870, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %873 = reshape(%871, newshape=[1573]) /* ty=Tensor[(1573), float64] */;
  %874 = @func_15286(%872, %873) /* ty=(Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) */;
  %875 = %869.2;
  %876 = %874.0;
  (%875, %876, meta[relay.Constant][76] /* ty=Tensor[(36, 14), uint16] */, %var_19510)
}

def @func_13614() -> (Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %877 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  %878 = cast(%877, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %879 = cast(meta[relay.Constant][77] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %880 = cast(meta[relay.Constant][77] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %881 = reshape(%879, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %882 = reshape(%880, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %883 = cosh(%878) /* ty=Tensor[(13, 1, 11), float32] */;
  %884 = @func_12200(%881, %882) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%883, %884, meta[relay.Constant][77] /* ty=Tensor[(330), uint8] */)
}

def @func_19761(%var_19732: Tensor[(9, 8, 6), uint8]) -> (Tensor[(9, 8, 6), uint8], Tensor[(9, 8, 6), float32]) {
  %885 = cast(meta[relay.Constant][78] /* ty=Tensor[(9, 8, 6), uint8] */, dtype="uint8") /* ty=Tensor[(9, 8, 6), uint8] */;
  %886 = shape_of(%var_19732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%var_19732, dtype="uint8") /* ty=Tensor[(9, 8, 6), uint8] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %889 = cast(meta[relay.Constant][78] /* ty=Tensor[(9, 8, 6), uint8] */, dtype="float32") /* ty=Tensor[(9, 8, 6), float32] */;
  %890 = logical_xor(%887, %888) /* ty=Tensor[(9, 8, 6), uint8] */;
  %891 = atan(%889) /* ty=Tensor[(9, 8, 6), float32] */;
  (%890, %891)
}

def @func_15593(%var_15581: Tensor[(945, 2), float64], %var_15582: Tensor[(20, 4), uint32], %var_15584: Tensor[(588), float32], %var_15587: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(80), uint32], Tensor[(468), float64], Tensor[(945, 2), float64], Tensor[(20, 4), uint32], Tensor[(105, 2), float32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(13, ?, 11), bool]) {
  %892 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %893 = cast(meta[relay.Constant][79] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %894 = reshape(%893, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %895 = @func_9585(%894) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %896 = cast(meta[relay.Constant][80] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %897 = cast(meta[relay.Constant][80] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %898 = cast(%var_15581, dtype="float64") /* ty=Tensor[(945, 2), float64] */;
  %899 = cast(%var_15582, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %900 = cast(%var_15582, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %901 = cast(meta[relay.Constant][81] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %902 = cast(%var_15584, dtype="float32") /* ty=Tensor[(588), float32] */;
  %903 = reshape(%896, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %904 = reshape(%897, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %905 = reshape(%898, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %906 = reshape(%899, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %907 = reshape(%900, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %908 = reshape(%901, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %909 = reshape(%902, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %910 = @func_11514(%903, %904, %905, %906, %907, %908, %909) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) */;
  %911 = cast(meta[relay.Constant][80] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %912 = cast(%var_15581, dtype="float64") /* ty=Tensor[(945, 2), float64] */;
  %913 = cast(%var_15587, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %914 = reshape(%911, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %915 = reshape(%912, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %916 = reshape(%913, newshape=[1573]) /* ty=Tensor[(1573), float64] */;
  %917 = @func_15002(%914, %915, %916) /* ty=(Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) */;
  %918 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %919 = %892.0;
  %920 = %895.0;
  %921 = %910.1;
  %922 = %917.6;
  %923 = %918.0;
  (%919, %920, meta[relay.Constant][79] /* ty=Tensor[(54), bool] */, %921, meta[relay.Constant][80] /* ty=Tensor[(468), float64] */, %var_15581, %var_15582, meta[relay.Constant][81] /* ty=Tensor[(105, 2), float32] */, %var_15584, %922, %var_15587, %923)
}

def @func_13925() -> Tensor[(13, 1, 11), float64] {
  @func_13253() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_16664() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %924 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %925 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %926 = %924.0;
  %927 = %925.0;
  (%926, %927)
}

def @func_3294(%var_3276: Tensor[(3, 10, 7), float32], %var_3282: Tensor[(588), float32], %var_3283: Tensor[(448), float64]) -> (Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %928 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 10, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %929 = shape_of(%var_3276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%var_3276, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = cast(%var_3282, dtype="float32") /* ty=Tensor[(588), float32] */;
  %933 = cast(%var_3283, dtype="float64") /* ty=Tensor[(448), float64] */;
  %934 = reshape(%932, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %935 = reshape(%933, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %936 = @func_627(%934, %935) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %937 = cast(meta[relay.Constant][83] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %938 = reshape(%937, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %939 = floor_divide(%930, %931) /* ty=Tensor[(3, 10, 7), float32] */;
  %940 = %936.1;
  %941 = @func_1758(%938) /* ty=Tensor[(11, 2, 6), float32] */;
  (%939, %940, %var_3282, %var_3283, %941, meta[relay.Constant][83] /* ty=Tensor[(132), float32] */)
}

def @func_14967(%var_14907: Tensor[(1120), float32], %var_14920: Tensor[(588), float32], %var_14921: Tensor[(448), float64]) -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) {
  %942 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %943 = cast(%var_14907, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %944 = reshape(%943, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %945 = @func_13650(%944) /* ty=(Tensor[(16, 7, 10), float32],) */;
  %946 = cast(%var_14920, dtype="float32") /* ty=Tensor[(588), float32] */;
  %947 = cast(%var_14921, dtype="float64") /* ty=Tensor[(448), float64] */;
  %948 = reshape(%946, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %949 = reshape(%947, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %950 = @func_627(%948, %949) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %951 = %942.0;
  %952 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  %953 = %945.0;
  %954 = %950.2;
  (%951, %952, %953, %var_14907, %954, %var_14920, %var_14921)
}

def @func_14308(%var_14291: Tensor[(13, 11, 11), float64]) -> Tensor[(13, 11, 11), uint32] {
  %955 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
  %958 = cast(%var_14291, dtype="uint32") /* ty=Tensor[(13, 11, 11), uint32] */;
  multiply(%957, %958) /* ty=Tensor[(13, 11, 11), uint32] */
}

def @func_15787() -> (Tensor[(13, ?, 11), uint8],) {
  %959 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %960 = %959.0;
  (%960,)
}

def @func_20121(%var_20104: Tensor[(80), uint32]) -> (Tensor[(13, 6, 11), uint16], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(80), uint32]) {
  %961 = cast(meta[relay.Constant][84] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %962 = cast(%var_20104, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %963 = reshape(%961, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %964 = reshape(%962, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %965 = @func_5495(%963, %964) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
  %966 = @func_19390() /* ty=Tensor[(13, 6, 11), uint16] */;
  %967 = %965.0;
  (%966, %967, meta[relay.Constant][84] /* ty=Tensor[(1890), float64] */, %var_20104)
}

def @func_16116() -> Tensor[(13, 1, 11), float64] {
  %968 = @func_15631() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %968.0
}

def @func_3430(%var_3408: Tensor[(7, 3), uint64], %var_3410: Tensor[(448), float64]) -> (Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
  %969 = cast(meta[relay.Constant][85] /* ty=Tensor[(15, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
  %970 = cast(%var_3408, dtype="uint64") /* ty=Tensor[(7, 3), uint64] */;
  %971 = cast(meta[relay.Constant][86] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %972 = cast(%var_3410, dtype="float64") /* ty=Tensor[(448), float64] */;
  %973 = reshape(%970, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %974 = reshape(%971, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %975 = reshape(%972, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %976 = @func_2914(%973, %974, %975) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %977 = acos(%969) /* ty=Tensor[(15, 2, 2), float64] */;
  %978 = %976.7;
  (%977, %978, %var_3408, meta[relay.Constant][86] /* ty=Tensor[(132), float32] */, %var_3410)
}

def @func_18024() -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), uint8]) {
  %979 = @func_17534() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %980 = @func_17534() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %981 = %979.0;
  %982 = %980.0;
  (%981, %982)
}

def @func_19119() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %983 = @func_18648() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */;
  %984 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %985 = %983.1;
  (%984, %985)
}

def @func_17534() -> (Tensor[(13, ?, 11), uint8],) {
  %986 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %987 = %986.1;
  (%987,)
}

def @func_349(%var_316: Tensor[(8, 5, 2), uint32], %var_340: Tensor[(8, 5, 2), uint32]) -> (Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) {
  %988 = cast(meta[relay.Constant][87] /* ty=Tensor[(8, 5, 2), uint32] */, dtype="uint32") /* ty=Tensor[(8, 5, 2), uint32] */;
  %989 = shape_of(%var_316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_316, dtype="uint32") /* ty=Tensor[(8, 5, 2), uint32] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %992 = cast(meta[relay.Constant][88] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %993 = cast(meta[relay.Constant][88] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %994 = reshape(%992, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %995 = reshape(%993, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %996 = @func_86(%994, %995) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %997 = %996.0;
  %998 = cast(%997, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %999 = cast(%997, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %1000 = reshape(%998, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %1001 = reshape(%999, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %1002 = @func_86(%1000, %1001) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %1003 = cast(%var_340, dtype="uint16") /* ty=Tensor[(8, 5, 2), uint16] */;
  %1004 = shape_of(%var_316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%var_316, dtype="uint16") /* ty=Tensor[(8, 5, 2), uint16] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1007 = left_shift(%990, %991) /* ty=Tensor[(8, 5, 2), uint32] */;
  %1008 = %1002.0;
  %1009 = logical_xor(%1005, %1006) /* ty=Tensor[(8, 5, 2), uint16] */;
  (%1007, %997, meta[relay.Constant][88] /* ty=Tensor[(448), float64] */, %1008, %1009)
}

def @func_86(%var_77: Tensor[(2, 14, 16), float64], %var_78: Tensor[(2, 14, 16), float64]) -> (Tensor[(2, 14, 16), float64],) {
  %1010 = cast(%var_78, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %1011 = shape_of(%var_77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%var_77, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1014 = mod(%1012, %1013) /* ty=Tensor[(2, 14, 16), float64] */;
  (%1014,)
}

def @func_511(%var_483: Tensor[(7, 8, 9), uint16], %var_484: Tensor[(7, 8, 9), uint16]) -> (Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) {
  %1015 = cast(%var_484, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1016 = shape_of(%var_483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%var_483, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1019 = cast(%var_483, dtype="float32") /* ty=Tensor[(7, 8, 9), float32] */;
  %1020 = maximum(%1017, %1018) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1021 = tan(%1019) /* ty=Tensor[(7, 8, 9), float32] */;
  (%1020, %1021)
}

def @func_3508(%var_3482: float64) -> (Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) {
  %1022 = cast(%var_3482, dtype="float64") /* ty=float64 */;
  %1023 = cast(meta[relay.Constant][89] /* ty=Tensor[(13, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 13), float64] */;
  %1024 = cast(meta[relay.Constant][89] /* ty=Tensor[(13, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 13), float64] */;
  %1025 = cast(%var_3482, dtype="float64") /* ty=float64 */;
  %1026 = mod(%1022, %1023) /* ty=Tensor[(13, 1, 13), float64] */;
  %1027 = floor_mod(%1024, %1025) /* ty=Tensor[(13, 1, 13), float64] */;
  (%1026, %1027)
}

def @func_13635() -> (Tensor[(13, 1, 11), float64],) {
  %1028 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1028,)
}

def @func_13253() -> Tensor[(13, 1, 11), float64] {
  %1029 = cast(meta[relay.Constant][90] /* ty=Tensor[(13, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
  rsqrt(%1029) /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_16061(%var_16046: Tensor[(1792), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
  %1030 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1031 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1032 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1033 = reshape(%1031, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %1034 = reshape(%1032, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %1035 = %1030.0;
  %1036 = @func_717(%1033, %1034) /* ty=Tensor[(7, 16, 16), bool] */;
  (%1035, %1036, %var_16046)
}

def @func_6107(%var_6099: Tensor[(504), uint16]) -> (Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) {
  %1037 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
  %1038 = cast(%var_6099, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %1039 = cast(%var_6099, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %1040 = reshape(%1038, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1041 = reshape(%1039, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1042 = @func_511(%1040, %1041) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
  %1043 = exp(%1037) /* ty=Tensor[(9, 4, 8), float32] */;
  %1044 = %1042.1;
  (%1043, %1044, %var_6099)
}

def @func_15505(%var_15482: Tensor[(6, 1, 1), float32], %var_15500: Tensor[(132), float32]) -> (Tensor[(6, 1, 1), float32], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %1045 = cast(%var_15482, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %1046 = cast(%var_15500, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1047 = reshape(%1046, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %1048 = asin(%1045) /* ty=Tensor[(6, 1, 1), float32] */;
  %1049 = @func_1758(%1047) /* ty=Tensor[(11, 2, 6), float32] */;
  (%1048, %1049, %var_15500)
}

def @func_17068() -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) {
  %1050 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
  %1051 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1052 = @func_16577() /* ty=(Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) */;
  %1053 = %1050.0;
  %1054 = %1051.0;
  %1055 = %1052.1;
  (%1053, %1054, %1055)
}

def @func_19345() -> (Tensor[(13, 1, 11), float64],) {
  %1056 = @func_15652() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_8045(%var_8038: int64, %var_8039: Tensor[(1, 4, 16), int64]) -> (Tensor[(1, 4, 16), int64],) {
  %1058 = cast(%var_8038, dtype="int64") /* ty=int64 */;
  %1059 = cast(%var_8039, dtype="int64") /* ty=Tensor[(1, 4, 16), int64] */;
  %1060 = maximum(%1058, %1059) /* ty=Tensor[(1, 4, 16), int64] */;
  (%1060,)
}

def @func_18544(%var_18525: Tensor[(60), float64], %var_18532: Tensor[(18, 70), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(18, 70), bool]) {
  %1061 = @func_16013() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1062 = cast(%var_18525, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1063 = cast(meta[relay.Constant][92] /* ty=Tensor[(18, 70), uint8] */, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
  %1064 = reshape(%1062, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %1065 = reshape(%1063, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
  %1066 = @func_7254(%1064, %1065) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
  %1067 = cast(%var_18532, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
  %1068 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(18, 70), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1069 = cast(meta[relay.Constant][92] /* ty=Tensor[(18, 70), uint8] */, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1071 = %1061.0;
  %1072 = %1066.2;
  %1073 = logical_and(%1069, %1070) /* ty=Tensor[(18, 70), bool] */;
  (%1071, %1072, %var_18525, %1073)
}

def @func_16449(%var_16390: Tensor[(90), uint8], %var_16391: Tensor[(1260), uint8], %var_16424: Tensor[(630), int64], %var_16430: Tensor[(2048), uint64]) -> (Tensor[(90), uint8], Tensor[(1260), uint8], Tensor[(13, 90, 11), bool], Tensor[(13, 90, 11), uint64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(13, ?, 11), bool], Tensor[(80), uint32], Tensor[(2048), uint64]) {
  %1074 = @func_15841() /* ty=Tensor[(13, ?, 11), uint8] */;
  %1075 = cast(%var_16390, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %1076 = cast(%var_16391, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %1077 = reshape(%1075, newshape=[90, 1]) /* ty=Tensor[(90, 1), uint8] */;
  %1078 = reshape(%1076, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), uint8] */;
  %1079 = @func_13963(%1077, %1078) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) */;
  %1080 = %1079.2;
  %1081 = cast(%1074, dtype="bool") /* ty=Tensor[(13, ?, 11), bool] */;
  %1082 = cast(%1080, dtype="bool") /* ty=Tensor[(90, 1), bool] */;
  %1083 = cast(%1074, dtype="uint64") /* ty=Tensor[(13, ?, 11), uint64] */;
  %1084 = cast(%1080, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
  %1085 = cast(%var_16424, dtype="int64") /* ty=Tensor[(630), int64] */;
  %1086 = cast(%var_16424, dtype="int64") /* ty=Tensor[(630), int64] */;
  %1087 = reshape(%1085, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %1088 = reshape(%1086, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %1089 = @func_12965(%1087, %1088) /* ty=(Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) */;
  %1090 = cast(meta[relay.Constant][93] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1091 = cast(%var_16430, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %1092 = reshape(%1090, newshape=[40, 2]) /* ty=Tensor[(40, 2), uint32] */;
  %1093 = reshape(%1091, newshape=[2048]) /* ty=Tensor[(2048), uint64] */;
  %1094 = @func_15196(%1092, %1093) /* ty=(Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) */;
  %1095 = logical_and(%1081, %1082) /* ty=Tensor[(13, 90, 11), bool] */;
  %1096 = minimum(%1083, %1084) /* ty=Tensor[(13, 90, 11), uint64] */;
  %1097 = %1089.0;
  %1098 = %1094.0;
  (%var_16390, %var_16391, %1095, %1096, %1097, %var_16424, %1098, meta[relay.Constant][93] /* ty=Tensor[(80), uint32] */, %var_16430)
}

def @func_18590() -> Tensor[(15, 11, 2), uint8] {
  %1099 = @func_16874() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %1099.0
}

def @func_19295(%var_19236: Tensor[(4, 20), uint32], %var_19251: Tensor[(210), float32], %var_19252: Tensor[(588), float32], %var_19253: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint32], Tensor[(4, 20), bool], Tensor[(13, 1, 11), float32], Tensor[(13, 12, 5), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(4, 20), float32]) {
  %1100 = @func_16838() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1101 = %1100.0;
  %1102 = @func_17507() /* ty=Tensor[(13, 1, 11), float64] */;
  %1103 = cast(%1102, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
  %1104 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%1101, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1107 = @func_16624() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) */;
  %1108 = %1107.4;
  %1109 = cast(%var_19236, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %1110 = shape_of(%1108, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1111 = cast(%1108, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1113 = cast(%var_19251, dtype="float32") /* ty=Tensor[(210), float32] */;
  %1114 = cast(%var_19252, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1115 = cast(%var_19253, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1116 = reshape(%1113, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %1117 = reshape(%1114, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %1118 = reshape(%1115, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1119 = @func_6196(%1116, %1117, %1118) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %1120 = cast(%1108, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %1121 = shape_of(%var_19236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1122 = cast(%var_19236, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1124 = logical_xor(%1105, %1106) /* ty=Tensor[(13, ?, 11), uint32] */;
  %1125 = logical_and(%1111, %1112) /* ty=Tensor[(4, 20), bool] */;
  %1126 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %1127 = %1119.0;
  %1128 = mod(%1122, %1123) /* ty=Tensor[(4, 20), float32] */;
  (%1124, %1125, %1126, %1127, %var_19251, %var_19252, %var_19253, %1128)
}

def @func_14784() -> (Tensor[(13, ?, 11), uint8],) {
  %1129 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %1130 = %1129.0;
  (%1130,)
}

def @func_14854() -> Tensor[(13, 1, 11), float32] {
  %1131 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %1131.0
}

def @func_717(%var_705: Tensor[(7, 16, 16), uint64], %var_706: Tensor[(7, 16, 16), uint64]) -> Tensor[(7, 16, 16), bool] {
  %1132 = cast(%var_706, dtype="bool") /* ty=Tensor[(7, 16, 16), bool] */;
  %1133 = shape_of(%var_705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%var_705, dtype="bool") /* ty=Tensor[(7, 16, 16), bool] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1134, %1135) /* ty=Tensor[(7, 16, 16), bool] */
}

def @func_18886(%var_18872: Tensor[(13, 13, 11), float64], %var_18878: Tensor[(132), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %1136 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %1137 = cast(%1136, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %1138 = cast(%var_18872, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %1139 = cast(%var_18878, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1140 = reshape(%1139, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %1141 = greater(%1137, %1138) /* ty=Tensor[(13, 13, 11), bool] */;
  %1142 = @func_1758(%1140) /* ty=Tensor[(11, 2, 6), float32] */;
  (%1141, %1142, %var_18878)
}

def @func_14540(%var_14478: Tensor[(630), float32], %var_14497: Tensor[(12, 42), uint16], %var_14538: Tensor[(192), bool]) -> (Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) {
  %1143 = cast(%var_14478, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1144 = reshape(%1143, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %1145 = @func_11441(%1144) /* ty=(Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) */;
  %1146 = cast(%var_14497, dtype="uint16") /* ty=Tensor[(12, 42), uint16] */;
  %1147 = reshape(%1146, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %1148 = @func_6107(%1147) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
  %1149 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1150 = cast(meta[relay.Constant][94] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %1151 = cast(meta[relay.Constant][94] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %1152 = cast(meta[relay.Constant][95] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1153 = cast(meta[relay.Constant][96] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %1154 = reshape(%1150, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), float32] */;
  %1155 = reshape(%1151, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), float32] */;
  %1156 = reshape(%1152, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %1157 = reshape(%1153, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1158 = @func_6534(%1154, %1155, %1156, %1157) /* ty=(Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %1159 = cast(%var_14497, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %1160 = atan(%1159) /* ty=Tensor[(12, 42), float64] */;
  %1161 = cast(%1160, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %1162 = cast(meta[relay.Constant][97] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %1163 = reshape(%1162, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %1164 = cast(%var_14538, dtype="bool") /* ty=Tensor[(192), bool] */;
  %1165 = cast(%var_14538, dtype="bool") /* ty=Tensor[(192), bool] */;
  %1166 = cast(meta[relay.Constant][96] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %1167 = %1145.1;
  %1168 = cast(%1167, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %1169 = reshape(%1164, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %1170 = reshape(%1165, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %1171 = reshape(%1166, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1172 = reshape(%1168, newshape=[1792]) /* ty=Tensor[(1792), uint64] */;
  %1173 = @func_6725(%1169, %1170, %1171, %1172) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */;
  %1174 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %1175 = %1148.1;
  %1176 = %1149.0;
  %1177 = %1158.3;
  %1178 = sinh(%1161) /* ty=Tensor[(12, 42), float64] */;
  %1179 = @func_14308(%1163) /* ty=Tensor[(13, 11, 11), uint32] */;
  %1180 = %1173.2;
  (%1174, %1167, %var_14478, %1175, %1176, %1177, meta[relay.Constant][94] /* ty=Tensor[(750), float32] */, meta[relay.Constant][95] /* ty=Tensor[(588), float32] */, meta[relay.Constant][96] /* ty=Tensor[(224, 2), float64] */, %1178, %1179, meta[relay.Constant][97] /* ty=Tensor[(1573), float64] */, %1180, %var_14538)
}

def @func_17715(%var_17707: Tensor[(98, 6), float32], %var_17708: Tensor[(1, 448), float64]) -> (Tensor[(540), float64], Tensor[(98, 6), float32], Tensor[(?, 448), float64]) {
  %1181 = @func_15331() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
  %1182 = cast(%var_17707, dtype="float32") /* ty=Tensor[(98, 6), float32] */;
  %1183 = cast(%var_17708, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
  %1184 = reshape(%1182, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %1185 = reshape(%1183, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1186 = @func_627(%1184, %1185) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %1187 = %1186.1;
  %1188 = cast(%1187, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %1189 = shape_of(%var_17708, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1190 = cast(%var_17708, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1192 = %1181.2;
  %1193 = divide(%1190, %1191) /* ty=Tensor[(?, 448), float64] */;
  (%1192, %var_17707, %1193)
}

def @func_936(%var_879: Tensor[(9, 15, 14), float64], %var_908: Tensor[(80), uint32]) -> (Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) {
  %1194 = cast(meta[relay.Constant][98] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %1195 = cast(meta[relay.Constant][98] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %1196 = reshape(%1194, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1197 = reshape(%1195, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1198 = @func_511(%1196, %1197) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
  %1199 = cast(%var_908, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1200 = cast(%var_908, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1201 = reshape(%1199, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %1202 = reshape(%1200, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %1203 = @func_349(%1201, %1202) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %1204 = %1198.0;
  %1205 = cast(%1204, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1206 = cast(%1204, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1207 = reshape(%1205, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1208 = reshape(%1206, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1209 = @func_511(%1207, %1208) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
  %1210 = cast(%var_879, dtype="float64") /* ty=Tensor[(9, 15, 14), float64] */;
  %1211 = asinh(%1210) /* ty=Tensor[(9, 15, 14), float64] */;
  %1212 = cast(%1211, dtype="float64") /* ty=Tensor[(9, 15, 14), float64] */;
  %1213 = %1203.3;
  %1214 = %1209.0;
  %1215 = sigmoid(%1212) /* ty=Tensor[(9, 15, 14), float64] */;
  (%1204, meta[relay.Constant][98] /* ty=Tensor[(504), uint16] */, %1213, %var_908, %1214, %1215)
}

def @func_15443() -> (Tensor[(13, ?, 11), uint8],) {
  %1216 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %1217 = %1216.0;
  (%1217,)
}

def @func_17330(%var_17315: float64) -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 13), float64], float64, Tensor[(630), int64], Tensor[(630, 1), int64], Tensor[(21), uint64]) {
  %1218 = cast(%var_17315, dtype="float64") /* ty=float64 */;
  %1219 = reshape(%1218, newshape=[]) /* ty=float64 */;
  %1220 = @func_3508(%1219) /* ty=(Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) */;
  %1221 = cast(meta[relay.Constant][99] /* ty=Tensor[(630, 1), int64] */, dtype="int64") /* ty=Tensor[(630, 1), int64] */;
  %1222 = cast(meta[relay.Constant][100] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %1223 = reshape(%1221, newshape=[630]) /* ty=Tensor[(630), int64] */;
  %1224 = reshape(%1222, newshape=[21]) /* ty=Tensor[(21), uint64] */;
  %1225 = @func_14033(%1223, %1224) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) */;
  %1226 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %1227 = %1220.0;
  %1228 = %1225.2;
  (%1226, %1227, %var_17315, %1228, meta[relay.Constant][99] /* ty=Tensor[(630, 1), int64] */, meta[relay.Constant][100] /* ty=Tensor[(21), uint64] */)
}

def @func_15977(%var_15965: Tensor[(9, 140), uint8]) -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(90), uint8], Tensor[(9, 140), uint8]) {
  %1229 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %1230 = %1229.0;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(13, ?, 11), float32] */;
  %1232 = cast(meta[relay.Constant][101] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %1233 = cast(%var_15965, dtype="uint8") /* ty=Tensor[(9, 140), uint8] */;
  %1234 = reshape(%1232, newshape=[90, 1]) /* ty=Tensor[(90, 1), uint8] */;
  %1235 = reshape(%1233, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), uint8] */;
  %1236 = @func_13963(%1234, %1235) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) */;
  %1237 = @func_15841() /* ty=Tensor[(13, ?, 11), uint8] */;
  %1238 = log2(%1231) /* ty=Tensor[(13, ?, 11), float32] */;
  %1239 = %1236.0;
  (%1237, %1238, %1239, meta[relay.Constant][101] /* ty=Tensor[(90), uint8] */, %var_15965)
}

def @func_14838() -> Tensor[(13, 1, 11), float64] {
  %1240 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1240.0
}

def @func_19330(%var_19324: Tensor[(1890), float64]) -> (Tensor[(15, 11, 2), int64], Tensor[(2, 40), uint32], Tensor[(1890), float64]) {
  %1241 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %1242 = cast(%var_19324, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1243 = reshape(%1242, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %1244 = @func_13519(%1243) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) */;
  %1245 = %1241.2;
  %1246 = %1244.3;
  (%1245, %1246, %var_19324)
}

def @func_16013() -> (Tensor[(13, 1, 11), float64],) {
  %1247 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1247,)
}

def @func_18684() -> Tensor[(13, ?, 11), uint8] {
  %1248 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %1248.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_15654() -> (Tensor[(13, 1, 11), float64],) {
  @func_15652() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_11069(%var_11063: float64, %var_11064: Tensor[(7, 1, 8), float64], %var_11065: Tensor[(210), float32], %var_11066: Tensor[(588), float32], %var_11067: Tensor[(448), float64], %var_11068: Tensor[(20, 4), uint32]) -> (Tensor[(54), bool], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(1, 9, 6), float32], Tensor[(7, ?, 8), int64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(20, 4), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
  @func_11061(%var_11063, %var_11064, %var_11065, %var_11066, %var_11067, %var_11068) /* ty=(Tensor[(54), bool], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(1, 9, 6), float32], Tensor[(7, ?, 8), int64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(20, 4), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) */
}

def @func_15841() -> Tensor[(13, ?, 11), uint8] {
  %0 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %0.0
}

def @func_14688(%var_14686: Tensor[(4, 6, 4), float64]) -> Tensor[(4, 6, 4), float64] {
  @func_14685(%var_14686) /* ty=Tensor[(4, 6, 4), float64] */
}

def @func_15771(%var_15769: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(13, ?, 11), bool]) {
  @func_15768(%var_15769) /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(13, ?, 11), bool]) */
}

def @func_15505(%var_15482: Tensor[(6, 1, 1), float32], %var_15500: Tensor[(132), float32]) -> (Tensor[(6, 1, 1), float32], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %1 = cast(%var_15482, dtype="float32") /* ty=Tensor[(6, 1, 1), float32] */;
  %2 = cast(%var_15500, dtype="float32") /* ty=Tensor[(132), float32] */;
  %3 = reshape(%2, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %4 = asin(%1) /* ty=Tensor[(6, 1, 1), float32] */;
  %5 = @func_1758(%3) /* ty=Tensor[(11, 2, 6), float32] */;
  (%4, %5, %var_15500)
}

def @func_18890(%var_18888: Tensor[(13, 13, 11), float64], %var_18889: Tensor[(132), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  @func_18886(%var_18888, %var_18889) /* ty=(Tensor[(13, 13, 11), bool], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */
}

def @func_17068() -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) {
  %6 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
  %7 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %8 = @func_16577() /* ty=(Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) */;
  %9 = %6.0;
  %10 = %7.0;
  %11 = %8.1;
  (%9, %10, %11)
}

def @func_9127(%var_9124: Tensor[(4, 10, 13), int16], %var_9125: Tensor[(4, 10, 13), int16], %var_9126: Tensor[(21), uint64]) -> (Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) {
  %25 = fn (%var_9100: Tensor[(4, 10, 13), int16], %var_9101: Tensor[(4, 10, 13), int16], %var_9108: Tensor[(21), uint64]) -> (Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) {
    %12 = cast(%var_9101, dtype="int16") /* ty=Tensor[(4, 10, 13), int16] */;
    %13 = shape_of(%var_9100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(%var_9100, dtype="int16") /* ty=Tensor[(4, 10, 13), int16] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %16 = cast(%var_9108, dtype="uint64") /* ty=Tensor[(21), uint64] */;
    %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 56), float64] */, dtype="float64") /* ty=Tensor[(8, 56), float64] */;
    %19 = reshape(%16, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
    %20 = reshape(%17, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %21 = reshape(%18, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %22 = @func_2914(%19, %20, %21) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
    %23 = multiply(%14, %15) /* ty=Tensor[(4, 10, 13), int16] */;
    %24 = %22.7;
    (%23, %24, %var_9108, meta[relay.Constant][0] /* ty=Tensor[(132), float32] */, meta[relay.Constant][1] /* ty=Tensor[(8, 56), float64] */)
  };
  %25(%var_9124, %var_9125, %var_9126) /* ty=(Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) */
}

def @func_20447() -> (Tensor[(15, 11, 2), uint8],) {
  %26 = @func_18590() /* ty=Tensor[(15, 11, 2), uint8] */;
  (%26,)
}

def @func_13519(%var_13489: Tensor[(1890), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) {
  %27 = cast(%var_13489, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 40), uint32] */, dtype="uint32") /* ty=Tensor[(2, 40), uint32] */;
  %29 = reshape(%27, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %30 = reshape(%28, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %31 = @func_5495(%29, %30) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %33 = cast(meta[relay.Constant][4] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %34 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %35 = reshape(%32, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %36 = reshape(%33, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %37 = reshape(%34, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %38 = @func_2914(%35, %36, %37) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %39 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  %40 = %31.0;
  %41 = %38.6;
  (%39, %40, %var_13489, meta[relay.Constant][2] /* ty=Tensor[(2, 40), uint32] */, %41, meta[relay.Constant][3] /* ty=Tensor[(21), uint64] */, meta[relay.Constant][4] /* ty=Tensor[(132, 1), float32] */, meta[relay.Constant][5] /* ty=Tensor[(448), float64] */)
}

def @func_16118() -> Tensor[(13, 1, 11), float64] {
  @func_16116() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17420() -> (Tensor[(15, 11, 2), uint8],) {
  %42 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %43 = %42.0;
  (%43,)
}

def @func_14685(%var_14663: Tensor[(4, 6, 4), float64]) -> Tensor[(4, 6, 4), float64] {
  %44 = cast(%var_14663, dtype="float64") /* ty=Tensor[(4, 6, 4), float64] */;
  acos(%44) /* ty=Tensor[(4, 6, 4), float64] */
}

def @func_16063(%var_16062: Tensor[(1792), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
  %52 = fn (%var_16046: Tensor[(1792), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
    %45 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %46 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
    %47 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
    %48 = reshape(%46, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
    %49 = reshape(%47, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
    %50 = %45.0;
    %51 = @func_717(%48, %49) /* ty=Tensor[(7, 16, 16), bool] */;
    (%50, %51, %var_16046)
  };
  %52(%var_16062) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */
}

def @func_14117() -> Tensor[(13, 1, 11), float64] {
  @func_14115() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_14540(%var_14478: Tensor[(630), float32], %var_14497: Tensor[(12, 42), uint16], %var_14538: Tensor[(192), bool]) -> (Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) {
  %53 = cast(%var_14478, dtype="float32") /* ty=Tensor[(630), float32] */;
  %54 = reshape(%53, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %55 = @func_11441(%54) /* ty=(Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) */;
  %56 = cast(%var_14497, dtype="uint16") /* ty=Tensor[(12, 42), uint16] */;
  %57 = reshape(%56, newshape=[504]) /* ty=Tensor[(504), uint16] */;
  %58 = @func_6107(%57) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
  %59 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(750), float32] */, dtype="float32") /* ty=Tensor[(750), float32] */;
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %63 = cast(meta[relay.Constant][8] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %64 = reshape(%60, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), float32] */;
  %65 = reshape(%61, newshape=[15, 10, 5]) /* ty=Tensor[(15, 10, 5), float32] */;
  %66 = reshape(%62, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %67 = reshape(%63, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %68 = @func_6534(%64, %65, %66, %67) /* ty=(Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %69 = cast(%var_14497, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %70 = atan(%69) /* ty=Tensor[(12, 42), float64] */;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(12, 42), float64] */;
  %72 = cast(meta[relay.Constant][9] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %73 = reshape(%72, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %74 = cast(%var_14538, dtype="bool") /* ty=Tensor[(192), bool] */;
  %75 = cast(%var_14538, dtype="bool") /* ty=Tensor[(192), bool] */;
  %76 = cast(meta[relay.Constant][8] /* ty=Tensor[(224, 2), float64] */, dtype="float64") /* ty=Tensor[(224, 2), float64] */;
  %77 = %55.1;
  %78 = cast(%77, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %79 = reshape(%74, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %80 = reshape(%75, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %81 = reshape(%76, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %82 = reshape(%78, newshape=[1792]) /* ty=Tensor[(1792), uint64] */;
  %83 = @func_6725(%79, %80, %81, %82) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */;
  %84 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %85 = %58.1;
  %86 = %59.0;
  %87 = %68.3;
  %88 = sinh(%71) /* ty=Tensor[(12, 42), float64] */;
  %89 = @func_14308(%73) /* ty=Tensor[(13, 11, 11), uint32] */;
  %90 = %83.2;
  (%84, %77, %var_14478, %85, %86, %87, meta[relay.Constant][6] /* ty=Tensor[(750), float32] */, meta[relay.Constant][7] /* ty=Tensor[(588), float32] */, meta[relay.Constant][8] /* ty=Tensor[(224, 2), float64] */, %88, %89, meta[relay.Constant][9] /* ty=Tensor[(1573), float64] */, %90, %var_14538)
}

def @func_14251() -> (Tensor[(13, ?, 11), bool],) {
  %92 = fn () -> (Tensor[(13, ?, 11), bool],) {
    %91 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
    (%91,)
  };
  %92() /* ty=(Tensor[(13, ?, 11), bool],) */
}

def @func_1329(%var_1327: Tensor[(4, 7, 9), int8], %var_1328: Tensor[(4, 7, 9), int8]) -> (Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) {
  @func_1325(%var_1327, %var_1328) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) */
}

def @func_17192(%var_17189: Tensor[(60), float64], %var_17190: Tensor[(54), bool], %var_17191: Tensor[(448), float64]) -> (Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) {
  %117 = fn (%var_17156: Tensor[(60), float64], %var_17161: Tensor[(54), bool], %var_17171: Tensor[(448), float64]) -> (Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) {
    %93 = cast(%var_17156, dtype="float64") /* ty=Tensor[(60), float64] */;
    %94 = cast(meta[relay.Constant][10] /* ty=Tensor[(1260), uint8] */, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
    %95 = reshape(%93, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
    %96 = reshape(%94, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
    %97 = @func_7254(%95, %96) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
    %98 = @func_16719() /* ty=Tensor[(54), bool] */;
    %99 = cast(%var_17161, dtype="int32") /* ty=Tensor[(54), int32] */;
    %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(1), int32] */;
    %101 = cast(%98, dtype="int32") /* ty=Tensor[(54), int32] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?), int32] */;
    %103 = cast(meta[relay.Constant][11] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %104 = cast(meta[relay.Constant][11] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %105 = cast(meta[relay.Constant][12] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %106 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 588), float32] */, dtype="float32") /* ty=Tensor[(1, 588), float32] */;
    %107 = cast(%var_17171, dtype="float64") /* ty=Tensor[(448), float64] */;
    %108 = reshape(%103, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %109 = reshape(%104, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %110 = reshape(%105, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
    %111 = reshape(%106, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %112 = reshape(%107, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
    %113 = @func_10853(%108, %109, %110, %111, %112) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
    %114 = %97.2;
    %115 = subtract(%101, %102) /* ty=Tensor[(54), int32] */;
    %116 = %113.1;
    (%114, %var_17156, meta[relay.Constant][10] /* ty=Tensor[(1260), uint8] */, %115, %116, meta[relay.Constant][11] /* ty=Tensor[(2112), float32] */, meta[relay.Constant][12] /* ty=Tensor[(210), float32] */, meta[relay.Constant][13] /* ty=Tensor[(1, 588), float32] */, %var_17171)
  };
  %117(%var_17189, %var_17190, %var_17191) /* ty=(Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) */
}

def @func_20218() -> Tensor[(13, 6, 11), uint16] {
  @func_20216() /* ty=Tensor[(13, 6, 11), uint16] */
}

def @func_13254() -> Tensor[(13, 1, 11), float64] {
  %119 = fn () -> Tensor[(13, 1, 11), float64] {
    %118 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 1, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
    rsqrt(%118) /* ty=Tensor[(13, 1, 11), float64] */
  };
  %119() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17875() -> (Tensor[(13, 1, 11), float32],) {
  @func_17873() /* ty=(Tensor[(13, 1, 11), float32],) */
}

def @func_19764(%var_19762: Tensor[(9, 8, 6), uint8]) -> (Tensor[(9, 8, 6), uint8], Tensor[(9, 8, 6), float32]) {
  @func_19761(%var_19762) /* ty=(Tensor[(9, 8, 6), uint8], Tensor[(9, 8, 6), float32]) */
}

def @func_15007(%var_15004: Tensor[(468), float64], %var_15005: Tensor[(1890), float64], %var_15006: Tensor[(1573), float64]) -> (Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) {
  @func_15002(%var_15004, %var_15005, %var_15006) /* ty=(Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) */
}

def @func_18728() -> Tensor[(13, 1, 11), float64] {
  @func_17734() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17489() -> (Tensor[(330), uint8], Tensor[(13, ?, 11), bool]) {
  %123 = fn () -> (Tensor[(330), uint8], Tensor[(13, ?, 11), bool]) {
    %120 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
    %121 = %120.0;
    %122 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
    (%121, %122)
  };
  %123() /* ty=(Tensor[(330), uint8], Tensor[(13, ?, 11), bool]) */
}

def @func_17734() -> Tensor[(13, 1, 11), float64] {
  %124 = @func_16838() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %124.0
}

def @func_14812() -> (Tensor[(13, 1, 11), float64],) {
  %126 = fn () -> (Tensor[(13, 1, 11), float64],) {
    %125 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
    (%125,)
  };
  %126() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_18730() -> Tensor[(13, 1, 11), float64] {
  @func_18728() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_14310(%var_14309: Tensor[(13, 11, 11), float64]) -> Tensor[(13, 11, 11), uint32] {
  %131 = fn (%var_14291: Tensor[(13, 11, 11), float64]) -> Tensor[(13, 11, 11), uint32] {
    %127 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %128 = %127.0;
    %129 = cast(%128, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
    %130 = cast(%var_14291, dtype="uint32") /* ty=Tensor[(13, 11, 11), uint32] */;
    multiply(%129, %130) /* ty=Tensor[(13, 11, 11), uint32] */
  };
  %131(%var_14309) /* ty=Tensor[(13, 11, 11), uint32] */
}

def @func_6725(%var_6681: Tensor[(8, 8, 3), bool], %var_6682: Tensor[(8, 8, 3), bool], %var_6693: Tensor[(448), float64], %var_6721: Tensor[(1792), uint64]) -> (Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
  %132 = cast(%var_6682, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %133 = shape_of(%var_6681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%var_6681, dtype="bool") /* ty=Tensor[(8, 8, 3), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = cast(meta[relay.Constant][15] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %137 = cast(%var_6693, dtype="float64") /* ty=Tensor[(448), float64] */;
  %138 = reshape(%136, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
  %139 = reshape(%137, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %140 = @func_3430(%138, %139) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %141 = cast(%var_6721, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %142 = cast(%var_6721, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %143 = reshape(%141, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %144 = reshape(%142, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
  %145 = logical_and(%134, %135) /* ty=Tensor[(8, 8, 3), bool] */;
  %146 = %140.3;
  %147 = @func_717(%143, %144) /* ty=Tensor[(7, 16, 16), bool] */;
  (%145, %146, meta[relay.Constant][15] /* ty=Tensor[(21), uint64] */, %var_6693, %147, %var_6721)
}

def @func_12965(%var_12934: Tensor[(3, 14, 15), int64], %var_12935: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) {
  %148 = cast(%var_12935, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %149 = shape_of(%var_12934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_12934, dtype="int64") /* ty=Tensor[(3, 14, 15), int64] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %152 = cast(meta[relay.Constant][16] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %153 = cast(meta[relay.Constant][17] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %154 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %155 = reshape(%152, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %156 = reshape(%153, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %157 = reshape(%154, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %158 = @func_2914(%155, %156, %157) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %159 = cast(meta[relay.Constant][16] /* ty=Tensor[(21), uint64] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %160 = cast(meta[relay.Constant][17] /* ty=Tensor[(132, 1), float32] */, dtype="float32") /* ty=Tensor[(132, 1), float32] */;
  %161 = bitwise_and(%150, %151) /* ty=Tensor[(3, 14, 15), int64] */;
  %162 = %158.8;
  %163 = subtract(%159, %160) /* ty=Tensor[(132, 21), float32] */;
  (%161, %162, meta[relay.Constant][18] /* ty=Tensor[(448), float64] */, %163)
}

def @func_16498() -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) {
  %167 = fn () -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) {
    %164 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
    %165 = %164.0;
    %166 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
    (%165, %166)
  };
  %167() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) */
}

def @func_15985() -> Tensor[(13, 1, 11), float64] {
  %169 = fn () -> Tensor[(13, 1, 11), float64] {
    %168 = @func_15652() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %168.0
  };
  %169() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_6200(%var_6197: Tensor[(210), float32], %var_6198: Tensor[(588), float32], %var_6199: Tensor[(448), float64]) -> (Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %180 = fn (%var_6192: Tensor[(210), float32], %var_6193: Tensor[(588), float32], %var_6194: Tensor[(448), float64]) -> (Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
    %170 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 5), float32] */;
    %171 = cast(%var_6192, dtype="float32") /* ty=Tensor[(210), float32] */;
    %172 = cast(%var_6193, dtype="float32") /* ty=Tensor[(588), float32] */;
    %173 = cast(%var_6194, dtype="float64") /* ty=Tensor[(448), float64] */;
    %174 = reshape(%171, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
    %175 = reshape(%172, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %176 = reshape(%173, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %177 = @func_3294(%174, %175, %176) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */;
    %178 = acosh(%170) /* ty=Tensor[(13, 12, 5), float32] */;
    %179 = %177.4;
    (%178, %179, %var_6192, %var_6193, %var_6194)
  };
  %180(%var_6197, %var_6198, %var_6199) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */
}

def @func_3298(%var_3295: Tensor[(3, 10, 7), float32], %var_3296: Tensor[(588), float32], %var_3297: Tensor[(448), float64]) -> (Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %195 = fn (%var_3276: Tensor[(3, 10, 7), float32], %var_3282: Tensor[(588), float32], %var_3283: Tensor[(448), float64]) -> (Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
    %181 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 10, 7), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
    %182 = shape_of(%var_3276, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%var_3276, dtype="float32") /* ty=Tensor[(3, 10, 7), float32] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %185 = cast(%var_3282, dtype="float32") /* ty=Tensor[(588), float32] */;
    %186 = cast(%var_3283, dtype="float64") /* ty=Tensor[(448), float64] */;
    %187 = reshape(%185, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
    %188 = reshape(%186, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %189 = @func_627(%187, %188) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
    %190 = cast(meta[relay.Constant][21] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %191 = reshape(%190, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
    %192 = floor_divide(%183, %184) /* ty=Tensor[(3, 10, 7), float32] */;
    %193 = %189.1;
    %194 = @func_1758(%191) /* ty=Tensor[(11, 2, 6), float32] */;
    (%192, %193, %var_3282, %var_3283, %194, meta[relay.Constant][21] /* ty=Tensor[(132), float32] */)
  };
  %195(%var_3295, %var_3296, %var_3297) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */
}

def @func_13522(%var_13520: Tensor[(1890), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) {
  @func_13519(%var_13520) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) */
}

def @func_2914(%var_2844: Tensor[(1, 3, 7), uint64], %var_2865: Tensor[(132), float32], %var_2871: Tensor[(448), float64]) -> (Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) {
  %196 = cast(%var_2865, dtype="float32") /* ty=Tensor[(132), float32] */;
  %197 = reshape(%196, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %198 = cast(meta[relay.Constant][22] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %199 = cast(%var_2871, dtype="float64") /* ty=Tensor[(448), float64] */;
  %200 = reshape(%198, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %201 = reshape(%199, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %202 = @func_627(%200, %201) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %203 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %204 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %205 = reshape(%203, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %206 = reshape(%204, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %207 = @func_349(%205, %206) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %208 = cast(%var_2865, dtype="float32") /* ty=Tensor[(132), float32] */;
  %209 = reshape(%208, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %210 = cast(%var_2844, dtype="uint64") /* ty=Tensor[(1, 3, 7), uint64] */;
  %211 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 3, 7), uint64] */, dtype="uint64") /* ty=Tensor[(15, 3, 7), uint64] */;
  %212 = right_shift(%210, %211) /* ty=Tensor[(15, 3, 7), uint64] */;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(15, 3, 7), float32] */;
  %214 = @func_1758(%197) /* ty=Tensor[(11, 2, 6), float32] */;
  %215 = %202.2;
  %216 = %207.4;
  %217 = @func_1758(%209) /* ty=Tensor[(11, 2, 6), float32] */;
  %218 = sigmoid(%213) /* ty=Tensor[(15, 3, 7), float32] */;
  (%214, %var_2865, %215, meta[relay.Constant][22] /* ty=Tensor[(588), float32] */, %var_2871, %216, meta[relay.Constant][23] /* ty=Tensor[(80), uint32] */, %217, %218)
}

def @func_6557(%var_6555: Tensor[(1, 9, 10), uint8], %var_6556: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), bool],) {
  %222 = fn (%var_6544: Tensor[(1, 9, 10), uint8], %var_6545: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), bool],) {
    %219 = cast(%var_6544, dtype="bool") /* ty=Tensor[(1, 9, 10), bool] */;
    %220 = cast(%var_6545, dtype="bool") /* ty=Tensor[(14, 9, 10), bool] */;
    %221 = equal(%219, %220) /* ty=Tensor[(14, 9, 10), bool] */;
    (%221,)
  };
  %222(%var_6555, %var_6556) /* ty=(Tensor[(14, 9, 10), bool],) */
}

def @func_19345() -> (Tensor[(13, 1, 11), float64],) {
  %223 = @func_15652() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %224 = %223.0;
  (%224,)
}

def @func_13615() -> (Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %233 = fn () -> (Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
    %225 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
    %226 = cast(%225, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
    %227 = cast(meta[relay.Constant][25] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %228 = cast(meta[relay.Constant][25] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %229 = reshape(%227, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %230 = reshape(%228, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %231 = cosh(%226) /* ty=Tensor[(13, 1, 11), float32] */;
    %232 = @func_12200(%229, %230) /* ty=Tensor[(15, 11, 2), uint8] */;
    (%231, %232, meta[relay.Constant][25] /* ty=Tensor[(330), uint8] */)
  };
  %233() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */
}

def @func_18359() -> (Tensor[(13, ?, 11), bool],) {
  %236 = fn () -> (Tensor[(13, ?, 11), bool],) {
    %234 = @func_14250() /* ty=(Tensor[(13, ?, 11), bool],) */;
    %235 = %234.0;
    (%235,)
  };
  %236() /* ty=(Tensor[(13, ?, 11), bool],) */
}

def @func_9827(%var_9813: Tensor[(15, 13, 2), int8], %var_9814: Tensor[(15, 13, 2), int8]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(21), uint64], Tensor[(192), bool], Tensor[(1792), uint64]) {
  %237 = cast(%var_9814, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %238 = shape_of(%var_9813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%var_9813, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %241 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %242 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %243 = reshape(%241, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %244 = reshape(%242, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %245 = @func_86(%243, %244) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %246 = cast(meta[relay.Constant][27] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %247 = cast(meta[relay.Constant][27] /* ty=Tensor[(192), bool] */, dtype="bool") /* ty=Tensor[(192), bool] */;
  %248 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %249 = cast(meta[relay.Constant][28] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
  %250 = reshape(%246, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %251 = reshape(%247, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), bool] */;
  %252 = reshape(%248, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %253 = reshape(%249, newshape=[1792]) /* ty=Tensor[(1792), uint64] */;
  %254 = @func_6725(%250, %251, %252, %253) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */;
  %255 = less(%239, %240) /* ty=Tensor[(15, 13, 2), bool] */;
  %256 = %245.0;
  %257 = %254.2;
  (%255, %256, meta[relay.Constant][26] /* ty=Tensor[(448), float64] */, %257, meta[relay.Constant][27] /* ty=Tensor[(192), bool] */, meta[relay.Constant][28] /* ty=Tensor[(1792), uint64] */)
}

def @func_18162(%var_18161: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(540), float64], Tensor[(8, 16, 16), int32], Tensor[(2048), uint64]) {
  %268 = fn (%var_18146: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(540), float64], Tensor[(8, 16, 16), int32], Tensor[(2048), uint64]) {
    %258 = @func_17985() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
    %259 = @func_17985() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
    %260 = cast(%var_18146, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
    %261 = cast(%var_18146, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
    %262 = reshape(%260, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
    %263 = reshape(%261, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
    %264 = @func_6394(%262, %263) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
    %265 = %258.0;
    %266 = %259.2;
    %267 = %264.1;
    (%265, %266, %267, %var_18146)
  };
  %268(%var_18161) /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(540), float64], Tensor[(8, 16, 16), int32], Tensor[(2048), uint64]) */
}

def @func_18590() -> Tensor[(15, 11, 2), uint8] {
  %269 = @func_16874() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %269.0
}

def @func_17908(%var_17905: int16, %var_17906: Tensor[(2, 1, 15), int16], %var_17907: Tensor[(21), uint64]) -> (Tensor[(2, 1, 15), int16], Tensor[(13, 1, 11), float32], Tensor[(8, 5, 2), uint16], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
  @func_17903(%var_17905, %var_17906, %var_17907) /* ty=(Tensor[(2, 1, 15), int16], Tensor[(13, 1, 11), float32], Tensor[(8, 5, 2), uint16], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(448), float64]) */
}

def @func_6731(%var_6727: Tensor[(8, 8, 3), bool], %var_6728: Tensor[(8, 8, 3), bool], %var_6729: Tensor[(448), float64], %var_6730: Tensor[(1792), uint64]) -> (Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) {
  @func_6725(%var_6727, %var_6728, %var_6729, %var_6730) /* ty=(Tensor[(8, 8, 3), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(7, 16, 16), bool], Tensor[(1792), uint64]) */
}

def @func_18993() -> (Tensor[(13, 4, 11), float32],) {
  %270 = @func_16116() /* ty=Tensor[(13, 1, 11), float64] */;
  %271 = cast(%270, dtype="uint8") /* ty=Tensor[(13, 1, 11), uint8] */;
  %272 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 4, 11), float64] */, dtype="uint8") /* ty=Tensor[(13, 4, 11), uint8] */;
  %273 = minimum(%271, %272) /* ty=Tensor[(13, 4, 11), uint8] */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %275 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 4, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 4, 11), float64] */, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %278 = floor_mod(%276, %277) /* ty=Tensor[(13, 4, 11), float32] */;
  (%278,)
}

def @func_19295(%var_19236: Tensor[(4, 20), uint32], %var_19251: Tensor[(210), float32], %var_19252: Tensor[(588), float32], %var_19253: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint32], Tensor[(4, 20), bool], Tensor[(13, 1, 11), float32], Tensor[(13, 12, 5), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(4, 20), float32]) {
  %279 = @func_16838() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %280 = %279.0;
  %281 = @func_17507() /* ty=Tensor[(13, 1, 11), float64] */;
  %282 = cast(%281, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
  %283 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%280, dtype="uint32") /* ty=Tensor[(13, 1, 11), uint32] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %286 = @func_16624() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) */;
  %287 = %286.4;
  %288 = cast(%var_19236, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(2), int32] */;
  %290 = cast(%287, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %292 = cast(%var_19251, dtype="float32") /* ty=Tensor[(210), float32] */;
  %293 = cast(%var_19252, dtype="float32") /* ty=Tensor[(588), float32] */;
  %294 = cast(%var_19253, dtype="float64") /* ty=Tensor[(448), float64] */;
  %295 = reshape(%292, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %296 = reshape(%293, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %297 = reshape(%294, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %298 = @func_6196(%295, %296, %297) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %299 = cast(%287, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %300 = shape_of(%var_19236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %301 = cast(%var_19236, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %303 = logical_xor(%284, %285) /* ty=Tensor[(13, ?, 11), uint32] */;
  %304 = logical_and(%290, %291) /* ty=Tensor[(4, 20), bool] */;
  %305 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  %306 = %298.0;
  %307 = mod(%301, %302) /* ty=Tensor[(4, 20), float32] */;
  (%303, %304, %305, %306, %var_19251, %var_19252, %var_19253, %307)
}

def @func_16223() -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) {
  @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */
}

def @func_6397(%var_6395: Tensor[(8, 16, 16), uint64], %var_6396: Tensor[(8, 16, 16), uint64]) -> (Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) {
  %318 = fn (%var_6359: Tensor[(8, 16, 16), uint64], %var_6360: Tensor[(8, 16, 16), uint64]) -> (Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) {
    %308 = cast(%var_6360, dtype="uint64") /* ty=Tensor[(8, 16, 16), uint64] */;
    %309 = shape_of(%var_6359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%var_6359, dtype="uint64") /* ty=Tensor[(8, 16, 16), uint64] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %312 = cast(%var_6360, dtype="int32") /* ty=Tensor[(8, 16, 16), int32] */;
    %313 = shape_of(%var_6359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %314 = cast(%var_6359, dtype="int32") /* ty=Tensor[(8, 16, 16), int32] */;
    %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %316 = add(%310, %311) /* ty=Tensor[(8, 16, 16), uint64] */;
    %317 = bitwise_or(%314, %315) /* ty=Tensor[(8, 16, 16), int32] */;
    (%316, %317)
  };
  %318(%var_6395, %var_6396) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */
}

def @func_14854() -> Tensor[(13, 1, 11), float32] {
  %319 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %319.0
}

def @func_13963(%var_13958: Tensor[(90, 1), uint8], %var_13959: Tensor[(1, 1260), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) {
  %320 = cast(%var_13958, dtype="uint8") /* ty=Tensor[(90, 1), uint8] */;
  %321 = cast(%var_13959, dtype="uint8") /* ty=Tensor[(1, 1260), uint8] */;
  %322 = reshape(%320, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint8] */;
  %323 = reshape(%321, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), uint8] */;
  %324 = @func_6554(%322, %323) /* ty=(Tensor[(14, 9, 10), bool],) */;
  %325 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  %326 = %324.0;
  (%325, %326, %var_13958, %var_13959)
}

def @func_15673() -> Tensor[(13, 1, 11), float64] {
  %328 = fn () -> Tensor[(13, 1, 11), float64] {
    %327 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %327.0
  };
  %328() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_13635() -> (Tensor[(13, 1, 11), float64],) {
  %329 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%329,)
}

def @func_15980(%var_15978: Tensor[(9, 140), uint8]) -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(90), uint8], Tensor[(9, 140), uint8]) {
  @func_15977(%var_15978) /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(90), uint8], Tensor[(9, 140), uint8]) */
}

def @func_19347() -> (Tensor[(13, 1, 11), float64],) {
  @func_19345() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_15768(%var_15741: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint8], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(13, ?, 11), bool]) {
  %330 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %331 = cast(%var_15741, dtype="float64") /* ty=Tensor[(448), float64] */;
  %332 = cast(%var_15741, dtype="float64") /* ty=Tensor[(448), float64] */;
  %333 = reshape(%331, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %334 = reshape(%332, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %335 = @func_86(%333, %334) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %336 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %337 = %330.0;
  %338 = %335.0;
  %339 = %336.0;
  (%337, %338, %var_15741, %339)
}

def @func_19436() -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
  %343 = fn () -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
    %340 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %341 = %340.0;
    %342 = @func_15672() /* ty=Tensor[(13, 1, 11), float64] */;
    (%341, %342)
  };
  %343() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) */
}

def @func_16721() -> Tensor[(54), bool] {
  @func_16719() /* ty=Tensor[(54), bool] */
}

def @func_939(%var_937: Tensor[(9, 15, 14), float64], %var_938: Tensor[(80), uint32]) -> (Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) {
  %366 = fn (%var_879: Tensor[(9, 15, 14), float64], %var_908: Tensor[(80), uint32]) -> (Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) {
    %344 = cast(meta[relay.Constant][30] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %345 = cast(meta[relay.Constant][30] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %346 = reshape(%344, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %347 = reshape(%345, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %348 = @func_511(%346, %347) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
    %349 = cast(%var_908, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %350 = cast(%var_908, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %351 = reshape(%349, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
    %352 = reshape(%350, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
    %353 = @func_349(%351, %352) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
    %354 = %348.0;
    %355 = cast(%354, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
    %356 = cast(%354, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
    %357 = reshape(%355, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %358 = reshape(%356, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %359 = @func_511(%357, %358) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
    %360 = cast(%var_879, dtype="float64") /* ty=Tensor[(9, 15, 14), float64] */;
    %361 = asinh(%360) /* ty=Tensor[(9, 15, 14), float64] */;
    %362 = cast(%361, dtype="float64") /* ty=Tensor[(9, 15, 14), float64] */;
    %363 = %353.3;
    %364 = %359.0;
    %365 = sigmoid(%362) /* ty=Tensor[(9, 15, 14), float64] */;
    (%354, meta[relay.Constant][30] /* ty=Tensor[(504), uint16] */, %363, %var_908, %364, %365)
  };
  %366(%var_937, %var_938) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */
}

def @func_7257(%var_7255: Tensor[(10, 1, 6), float64], %var_7256: Tensor[(1260, 1), uint8]) -> (Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) {
  %386 = fn (%var_7237: Tensor[(10, 1, 6), float64], %var_7252: Tensor[(1260, 1), uint8]) -> (Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) {
    %367 = cast(meta[relay.Constant][31] /* ty=Tensor[(252), int8] */, dtype="int8") /* ty=Tensor[(252), int8] */;
    %368 = cast(meta[relay.Constant][31] /* ty=Tensor[(252), int8] */, dtype="int8") /* ty=Tensor[(252), int8] */;
    %369 = reshape(%367, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
    %370 = reshape(%368, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
    %371 = @func_1325(%369, %370) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) */;
    %372 = cast(%var_7237, dtype="float64") /* ty=Tensor[(10, 1, 6), float64] */;
    %373 = atanh(%372) /* ty=Tensor[(10, 1, 6), float64] */;
    %374 = cast(%var_7237, dtype="uint64") /* ty=Tensor[(10, 1, 6), uint64] */;
    %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
    %376 = cast(%373, dtype="uint64") /* ty=Tensor[(10, 1, 6), uint64] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %378 = cast(meta[relay.Constant][32] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
    %379 = cast(%var_7252, dtype="uint8") /* ty=Tensor[(1260, 1), uint8] */;
    %380 = reshape(%378, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint8] */;
    %381 = reshape(%379, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), uint8] */;
    %382 = @func_6554(%380, %381) /* ty=(Tensor[(14, 9, 10), bool],) */;
    %383 = %371.0;
    %384 = bitwise_or(%376, %377) /* ty=Tensor[(10, ?, 6), uint64] */;
    %385 = %382.0;
    (%383, meta[relay.Constant][31] /* ty=Tensor[(252), int8] */, %384, %385, meta[relay.Constant][32] /* ty=Tensor[(90), uint8] */, %var_7252)
  };
  %386(%var_7255, %var_7256) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */
}

def @func_5499(%var_5497: Tensor[(1890), float64], %var_5498: Tensor[(80), uint32]) -> (Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) {
  @func_5495(%var_5497, %var_5498) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */
}

def @func_515(%var_513: Tensor[(7, 8, 9), uint16], %var_514: Tensor[(7, 8, 9), uint16]) -> (Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) {
  @func_511(%var_513, %var_514) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */
}

def @func_630(%var_628: Tensor[(7, 7, 12), float32], %var_629: Tensor[(448), float64]) -> (Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) {
  %395 = fn (%var_615: Tensor[(7, 7, 12), float32], %var_622: Tensor[(448), float64]) -> (Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) {
    %387 = cast(%var_615, dtype="float32") /* ty=Tensor[(7, 7, 12), float32] */;
    %388 = cast(%var_622, dtype="float64") /* ty=Tensor[(448), float64] */;
    %389 = cast(%var_622, dtype="float64") /* ty=Tensor[(448), float64] */;
    %390 = reshape(%388, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %391 = reshape(%389, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %392 = @func_86(%390, %391) /* ty=(Tensor[(2, 14, 16), float64],) */;
    %393 = log10(%387) /* ty=Tensor[(7, 7, 12), float32] */;
    %394 = %392.0;
    (%393, %394, %var_622)
  };
  %395(%var_628, %var_629) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */
}

def @func_11523(%var_11516: Tensor[(13, 3, 12), float64], %var_11517: Tensor[(13, 3, 12), float64], %var_11518: Tensor[(1890), float64], %var_11519: Tensor[(80, 1), uint32], %var_11520: Tensor[(80, 1), uint32], %var_11521: Tensor[(210), float32], %var_11522: Tensor[(588), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) {
  @func_11514(%var_11516, %var_11517, %var_11518, %var_11519, %var_11520, %var_11521, %var_11522) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) */
}

def @func_18649() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %399 = fn () -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
    %396 = @func_17420() /* ty=(Tensor[(15, 11, 2), uint8],) */;
    %397 = @func_15984() /* ty=Tensor[(13, 1, 11), float64] */;
    %398 = %396.0;
    (%397, %398)
  };
  %399() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */
}

def @func_15443() -> (Tensor[(13, ?, 11), uint8],) {
  %400 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %401 = %400.0;
  (%401,)
}

def @func_13099(%var_13095: Tensor[(6, 9, 10), float64]) -> Tensor[(6, 9, 10), float64] {
  %402 = cast(%var_13095, dtype="float64") /* ty=Tensor[(6, 9, 10), float64] */;
  erf(%402) /* ty=Tensor[(6, 9, 10), float64] */
}

def @func_15445() -> (Tensor[(13, ?, 11), uint8],) {
  @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */
}

def @func_16875() -> (Tensor[(15, 11, 2), uint8],) {
  %405 = fn () -> (Tensor[(15, 11, 2), uint8],) {
    %403 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
    %404 = %403.0;
    (%404,)
  };
  %405() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_15599(%var_15595: Tensor[(945, 2), float64], %var_15596: Tensor[(20, 4), uint32], %var_15597: Tensor[(588), float32], %var_15598: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(80), uint32], Tensor[(468), float64], Tensor[(945, 2), float64], Tensor[(20, 4), uint32], Tensor[(105, 2), float32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(13, ?, 11), bool]) {
  @func_15593(%var_15595, %var_15596, %var_15597, %var_15598) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(80), uint32], Tensor[(468), float64], Tensor[(945, 2), float64], Tensor[(20, 4), uint32], Tensor[(105, 2), float32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(13, ?, 11), bool]) */
}

def @func_13866() -> (Tensor[(15, 11, 2), uint8],) {
  %408 = fn () -> (Tensor[(15, 11, 2), uint8],) {
    %406 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
    %407 = %406.1;
    (%407,)
  };
  %408() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_20449() -> (Tensor[(15, 11, 2), uint8],) {
  @func_20447() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_14784() -> (Tensor[(13, ?, 11), uint8],) {
  %409 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %410 = %409.0;
  (%410,)
}

def @func_10860(%var_10855: Tensor[(16, 11, 12), float32], %var_10856: Tensor[(16, 11, 12), float32], %var_10857: Tensor[(35, 6), float32], %var_10858: Tensor[(588), float32], %var_10859: Tensor[(8, 56), float64]) -> (Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) {
  @func_10853(%var_10855, %var_10856, %var_10857, %var_10858, %var_10859) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */
}

def @func_18685() -> Tensor[(13, ?, 11), uint8] {
  %412 = fn () -> Tensor[(13, ?, 11), uint8] {
    %411 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
    %411.0
  };
  %412() /* ty=Tensor[(13, ?, 11), uint8] */
}

def @func_19330(%var_19324: Tensor[(1890), float64]) -> (Tensor[(15, 11, 2), int64], Tensor[(2, 40), uint32], Tensor[(1890), float64]) {
  %413 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
  %414 = cast(%var_19324, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %415 = reshape(%414, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %416 = @func_13519(%415) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) */;
  %417 = %413.2;
  %418 = %416.3;
  (%417, %418, %var_19324)
}

def @func_3433(%var_3431: Tensor[(7, 3), uint64], %var_3432: Tensor[(448), float64]) -> (Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
  %429 = fn (%var_3408: Tensor[(7, 3), uint64], %var_3410: Tensor[(448), float64]) -> (Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
    %419 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
    %420 = cast(%var_3408, dtype="uint64") /* ty=Tensor[(7, 3), uint64] */;
    %421 = cast(meta[relay.Constant][34] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %422 = cast(%var_3410, dtype="float64") /* ty=Tensor[(448), float64] */;
    %423 = reshape(%420, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
    %424 = reshape(%421, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %425 = reshape(%422, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %426 = @func_2914(%423, %424, %425) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
    %427 = acos(%419) /* ty=Tensor[(15, 2, 2), float64] */;
    %428 = %426.7;
    (%427, %428, %var_3408, meta[relay.Constant][34] /* ty=Tensor[(132), float32] */, %var_3410)
  };
  %429(%var_3431, %var_3432) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */
}

def @func_352(%var_350: Tensor[(8, 5, 2), uint32], %var_351: Tensor[(8, 5, 2), uint32]) -> (Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) {
  %452 = fn (%var_316: Tensor[(8, 5, 2), uint32], %var_340: Tensor[(8, 5, 2), uint32]) -> (Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) {
    %430 = cast(meta[relay.Constant][35] /* ty=Tensor[(8, 5, 2), uint32] */, dtype="uint32") /* ty=Tensor[(8, 5, 2), uint32] */;
    %431 = shape_of(%var_316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %432 = cast(%var_316, dtype="uint32") /* ty=Tensor[(8, 5, 2), uint32] */;
    %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %434 = cast(meta[relay.Constant][36] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %435 = cast(meta[relay.Constant][36] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %436 = reshape(%434, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %437 = reshape(%435, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %438 = @func_86(%436, %437) /* ty=(Tensor[(2, 14, 16), float64],) */;
    %439 = %438.0;
    %440 = cast(%439, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %441 = cast(%439, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %442 = reshape(%440, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %443 = reshape(%441, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
    %444 = @func_86(%442, %443) /* ty=(Tensor[(2, 14, 16), float64],) */;
    %445 = cast(%var_340, dtype="uint16") /* ty=Tensor[(8, 5, 2), uint16] */;
    %446 = shape_of(%var_316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(%var_316, dtype="uint16") /* ty=Tensor[(8, 5, 2), uint16] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %449 = left_shift(%432, %433) /* ty=Tensor[(8, 5, 2), uint32] */;
    %450 = %444.0;
    %451 = logical_xor(%447, %448) /* ty=Tensor[(8, 5, 2), uint16] */;
    (%449, %439, meta[relay.Constant][36] /* ty=Tensor[(448), float64] */, %450, %451)
  };
  %452(%var_350, %var_351) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */
}

def @func_15902(%var_15885: Tensor[(143, 11), float64]) -> (Tensor[(132), float32], Tensor[(520), int16], Tensor[(21), uint64], Tensor[(13, ?, 11), int64], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(13, 11, 11), uint32], Tensor[(143, 11), float64], Tensor[(448), float64]) {
  %453 = cast(meta[relay.Constant][37] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %454 = cast(meta[relay.Constant][37] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %455 = cast(meta[relay.Constant][38] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %456 = reshape(%453, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int16] */;
  %457 = reshape(%454, newshape=[4, 10, 13]) /* ty=Tensor[(4, 10, 13), int16] */;
  %458 = reshape(%455, newshape=[21]) /* ty=Tensor[(21), uint64] */;
  %459 = @func_9123(%456, %457, %458) /* ty=(Tensor[(4, 10, 13), int16], Tensor[(11, 2, 6), float32], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(8, 56), float64]) */;
  %460 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %461 = %460.0;
  %462 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %463 = %462.0;
  %464 = cast(%463, dtype="int64") /* ty=Tensor[(13, 1, 11), int64] */;
  %465 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%461, dtype="int64") /* ty=Tensor[(13, 1, 11), int64] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %468 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %469 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %470 = reshape(%468, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %471 = reshape(%469, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %472 = @func_349(%470, %471) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %473 = cast(%var_15885, dtype="float64") /* ty=Tensor[(143, 11), float64] */;
  %474 = reshape(%473, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %475 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %476 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %477 = reshape(%475, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %478 = reshape(%476, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %479 = @func_349(%477, %478) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %480 = %459.3;
  %481 = bitwise_xor(%466, %467) /* ty=Tensor[(13, ?, 11), int64] */;
  %482 = %472.1;
  %483 = @func_14308(%474) /* ty=Tensor[(13, 11, 11), uint32] */;
  %484 = %479.2;
  (%480, meta[relay.Constant][37] /* ty=Tensor[(520), int16] */, meta[relay.Constant][38] /* ty=Tensor[(21), uint64] */, %481, %482, meta[relay.Constant][39] /* ty=Tensor[(80), uint32] */, %483, %var_15885, %484)
}

def @func_18468() -> (Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8]) {
  @func_18466() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8]) */
}

def @func_19577() -> (Tensor[(15, 11, 2), uint8],) {
  @func_19575() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_20067(%var_20065: Tensor[(448), float64], %var_20066: Tensor[(64), int64]) -> (Tensor[(13, 1, 11), float32], Tensor[(2112), float32], Tensor[(448), float64], Tensor[(64), int64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %498 = fn (%var_20039: Tensor[(448), float64], %var_20040: Tensor[(64), int64]) -> (Tensor[(13, 1, 11), float32], Tensor[(2112), float32], Tensor[(448), float64], Tensor[(64), int64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
    %485 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
    %486 = cast(%var_20039, dtype="float64") /* ty=Tensor[(448), float64] */;
    %487 = cast(%var_20040, dtype="int64") /* ty=Tensor[(64), int64] */;
    %488 = reshape(%486, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %489 = reshape(%487, newshape=[64]) /* ty=Tensor[(64), int64] */;
    %490 = @func_19705(%488, %489) /* ty=(Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) */;
    %491 = cast(meta[relay.Constant][40] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %492 = cast(meta[relay.Constant][40] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %493 = reshape(%491, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %494 = reshape(%492, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %495 = %485.2;
    %496 = %490.2;
    %497 = @func_12200(%493, %494) /* ty=Tensor[(15, 11, 2), uint8] */;
    (%495, %496, %var_20039, %var_20040, %497, meta[relay.Constant][40] /* ty=Tensor[(330), uint8] */)
  };
  %498(%var_20065, %var_20066) /* ty=(Tensor[(13, 1, 11), float32], Tensor[(2112), float32], Tensor[(448), float64], Tensor[(64), int64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */
}

def @func_20124(%var_20122: Tensor[(80), uint32]) -> (Tensor[(13, 6, 11), uint16], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(80), uint32]) {
  @func_20121(%var_20122) /* ty=(Tensor[(13, 6, 11), uint16], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(80), uint32]) */
}

def @func_19121() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  @func_19119() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */
}

def @func_9831(%var_9829: Tensor[(15, 13, 2), int8], %var_9830: Tensor[(15, 13, 2), int8]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(21), uint64], Tensor[(192), bool], Tensor[(1792), uint64]) {
  @func_9827(%var_9829, %var_9830) /* ty=(Tensor[(15, 13, 2), bool], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(21), uint64], Tensor[(192), bool], Tensor[(1792), uint64]) */
}

def @func_19705(%var_19685: Tensor[(448), float64], %var_19694: Tensor[(64), int64]) -> (Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) {
  %499 = cast(%var_19685, dtype="float64") /* ty=Tensor[(448), float64] */;
  %500 = cast(%var_19685, dtype="float64") /* ty=Tensor[(448), float64] */;
  %501 = reshape(%499, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %502 = reshape(%500, newshape=[2, 14, 16]) /* ty=Tensor[(2, 14, 16), float64] */;
  %503 = @func_86(%501, %502) /* ty=(Tensor[(2, 14, 16), float64],) */;
  %504 = cast(%var_19694, dtype="int64") /* ty=Tensor[(64), int64] */;
  %505 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 126), float32] */, dtype="float32") /* ty=Tensor[(5, 126), float32] */;
  %506 = reshape(%504, newshape=[8, 8]) /* ty=Tensor[(8, 8), int64] */;
  %507 = reshape(%505, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %508 = @func_16312(%506, %507) /* ty=(Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) */;
  %509 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %510 = %509.0;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(13, 6, 11), float64] */;
  %512 = %503.0;
  %513 = %508.1;
  %514 = sqrt(%511) /* ty=Tensor[(13, 6, 11), float64] */;
  (%512, %var_19685, %513, %var_19694, meta[relay.Constant][41] /* ty=Tensor[(5, 126), float32] */, %514)
}

def @func_19856() -> Tensor[(13, 1, 11), float64] {
  @func_14838() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17581(%var_17579: Tensor[(588), float32], %var_17580: Tensor[(448), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(54), bool], Tensor[(13, ?, 11), bool], Tensor[(1120), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %526 = fn (%var_17568: Tensor[(588), float32], %var_17569: Tensor[(448), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(54), bool], Tensor[(13, ?, 11), bool], Tensor[(1120), float32], Tensor[(588), float32], Tensor[(448), float64]) {
    %515 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
    %516 = cast(meta[relay.Constant][42] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %517 = cast(%var_17568, dtype="float32") /* ty=Tensor[(588), float32] */;
    %518 = cast(%var_17569, dtype="float64") /* ty=Tensor[(448), float64] */;
    %519 = reshape(%516, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
    %520 = reshape(%517, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %521 = reshape(%518, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %522 = @func_14967(%519, %520, %521) /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) */;
    %523 = @func_16116() /* ty=Tensor[(13, 1, 11), float64] */;
    %524 = %515.2;
    %525 = %522.1;
    (%523, %524, %525, meta[relay.Constant][42] /* ty=Tensor[(1120), float32] */, %var_17568, %var_17569)
  };
  %526(%var_17579, %var_17580) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(54), bool], Tensor[(13, ?, 11), bool], Tensor[(1120), float32], Tensor[(588), float32], Tensor[(448), float64]) */
}

def @func_17873() -> (Tensor[(13, 1, 11), float32],) {
  %527 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
  (%527,)
}

def @func_15905(%var_15903: Tensor[(143, 11), float64]) -> (Tensor[(132), float32], Tensor[(520), int16], Tensor[(21), uint64], Tensor[(13, ?, 11), int64], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(13, 11, 11), uint32], Tensor[(143, 11), float64], Tensor[(448), float64]) {
  @func_15902(%var_15903) /* ty=(Tensor[(132), float32], Tensor[(520), int16], Tensor[(21), uint64], Tensor[(13, ?, 11), int64], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(13, 11, 11), uint32], Tensor[(143, 11), float64], Tensor[(448), float64]) */
}

def @func_16221() -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) {
  %528 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %529 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %530 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %531 = %530.0;
  %532 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 11, 2), uint8] */, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="int64") /* ty=Tensor[(15, 11, 2), int64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %536 = %528.0;
  %537 = cast(%536, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %538 = cast(%536, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
  %539 = reshape(%537, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %540 = reshape(%538, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %541 = %529.0;
  %542 = minimum(%534, %535) /* ty=Tensor[(15, 11, 2), int64] */;
  %543 = @func_12200(%539, %540) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%536, %541, %542, %543)
}

def @func_19551(%var_19550: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float32], Tensor[(54), bool], Tensor[(36, 14), uint16], Tensor[(1573), float64]) {
  %552 = fn (%var_19510: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float32], Tensor[(54), bool], Tensor[(36, 14), uint16], Tensor[(1573), float64]) {
    %544 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
    %545 = cast(meta[relay.Constant][44] /* ty=Tensor[(36, 14), uint16] */, dtype="uint16") /* ty=Tensor[(36, 14), uint16] */;
    %546 = cast(%var_19510, dtype="float64") /* ty=Tensor[(1573), float64] */;
    %547 = reshape(%545, newshape=[504]) /* ty=Tensor[(504), uint16] */;
    %548 = reshape(%546, newshape=[1573]) /* ty=Tensor[(1573), float64] */;
    %549 = @func_15286(%547, %548) /* ty=(Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) */;
    %550 = %544.2;
    %551 = %549.0;
    (%550, %551, meta[relay.Constant][44] /* ty=Tensor[(36, 14), uint16] */, %var_19510)
  };
  %552(%var_19550) /* ty=(Tensor[(13, 1, 11), float32], Tensor[(54), bool], Tensor[(36, 14), uint16], Tensor[(1573), float64]) */
}

def @func_15332() -> (Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
  %558 = fn () -> (Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
    %553 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
    %554 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %555 = reshape(%554, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float64] */;
    %556 = %553.0;
    %557 = @func_13099(%555) /* ty=Tensor[(6, 9, 10), float64] */;
    (%556, %557, meta[relay.Constant][45] /* ty=Tensor[(540), float64] */)
  };
  %558() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */
}

def @func_20121(%var_20104: Tensor[(80), uint32]) -> (Tensor[(13, 6, 11), uint16], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(80), uint32]) {
  %559 = cast(meta[relay.Constant][46] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %560 = cast(%var_20104, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %561 = reshape(%559, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %562 = reshape(%560, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %563 = @func_5495(%561, %562) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
  %564 = @func_19390() /* ty=Tensor[(13, 6, 11), uint16] */;
  %565 = %563.0;
  (%564, %565, meta[relay.Constant][46] /* ty=Tensor[(1890), float64] */, %var_20104)
}

def @func_16666() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  @func_16664() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */
}

def @func_17757() -> (Tensor[(15, 11, 2), uint8],) {
  %568 = fn () -> (Tensor[(15, 11, 2), uint8],) {
    %566 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
    %567 = %566.0;
    (%567,)
  };
  %568() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_9587(%var_9586: Tensor[(1, 9, 6), bool]) -> (Tensor[(1, 9, 6), bool],) {
  %572 = fn (%var_9567: Tensor[(1, 9, 6), bool]) -> (Tensor[(1, 9, 6), bool],) {
    %569 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %570 = cast(%var_9567, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
    %571 = logical_and(%569, %570) /* ty=Tensor[(1, 9, 6), bool] */;
    (%571,)
  };
  %572(%var_9586) /* ty=(Tensor[(1, 9, 6), bool],) */
}

def @func_19858() -> Tensor[(13, 1, 11), float64] {
  @func_19856() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_721(%var_719: Tensor[(7, 16, 16), uint64], %var_720: Tensor[(7, 16, 16), uint64]) -> Tensor[(7, 16, 16), bool] {
  @func_717(%var_719, %var_720) /* ty=Tensor[(7, 16, 16), bool] */
}

def @func_18547(%var_18545: Tensor[(60), float64], %var_18546: Tensor[(18, 70), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(18, 70), bool]) {
  %586 = fn (%var_18525: Tensor[(60), float64], %var_18532: Tensor[(18, 70), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(18, 70), bool]) {
    %573 = @func_16013() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %574 = cast(%var_18525, dtype="float64") /* ty=Tensor[(60), float64] */;
    %575 = cast(meta[relay.Constant][47] /* ty=Tensor[(18, 70), uint8] */, dtype="uint8") /* ty=Tensor[(18, 70), uint8] */;
    %576 = reshape(%574, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
    %577 = reshape(%575, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
    %578 = @func_7254(%576, %577) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
    %579 = cast(%var_18532, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
    %580 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(18, 70), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %581 = cast(meta[relay.Constant][47] /* ty=Tensor[(18, 70), uint8] */, dtype="bool") /* ty=Tensor[(18, 70), bool] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %583 = %573.0;
    %584 = %578.2;
    %585 = logical_and(%581, %582) /* ty=Tensor[(18, 70), bool] */;
    (%583, %584, %var_18525, %585)
  };
  %586(%var_18545, %var_18546) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(18, 70), bool]) */
}

def @func_5495(%var_5468: Tensor[(1890), float64], %var_5469: Tensor[(80), uint32]) -> (Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) {
  %587 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 4, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 7), float64] */;
  %588 = cast(%var_5468, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %589 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %590 = reshape(%588, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %591 = reshape(%589, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %592 = @func_936(%590, %591) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %593 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %594 = cast(%var_5469, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %595 = reshape(%593, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %596 = reshape(%594, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
  %597 = @func_349(%595, %596) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
  %598 = sin(%587) /* ty=Tensor[(8, 4, 7), float64] */;
  %599 = %592.2;
  %600 = %597.2;
  (%598, %599, %var_5468, %var_5469, %600)
}

def @func_15033() -> (Tensor[(13, ?, 11), bool],) {
  %602 = fn () -> (Tensor[(13, ?, 11), bool],) {
    %601 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
    (%601,)
  };
  %602() /* ty=(Tensor[(13, ?, 11), bool],) */
}

def @func_13637() -> (Tensor[(13, 1, 11), float64],) {
  @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_16840() -> (Tensor[(13, 1, 11), float64],) {
  @func_16838() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_14786() -> (Tensor[(13, ?, 11), uint8],) {
  @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */
}

def @func_19564() -> (Tensor[(13, 1, 11), float64],) {
  @func_19562() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_19301(%var_19297: Tensor[(4, 20), uint32], %var_19298: Tensor[(210), float32], %var_19299: Tensor[(588), float32], %var_19300: Tensor[(448), float64]) -> (Tensor[(13, ?, 11), uint32], Tensor[(4, 20), bool], Tensor[(13, 1, 11), float32], Tensor[(13, 12, 5), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(4, 20), float32]) {
  @func_19295(%var_19297, %var_19298, %var_19299, %var_19300) /* ty=(Tensor[(13, ?, 11), uint32], Tensor[(4, 20), bool], Tensor[(13, 1, 11), float32], Tensor[(13, 12, 5), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(4, 20), float32]) */
}

def @func_14706() -> (Tensor[(13, 1, 11), float64],) {
  %604 = fn () -> (Tensor[(13, 1, 11), float64],) {
    %603 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
    (%603,)
  };
  %604() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_14752(%var_14748: Tensor[(468), float64], %var_14749: Tensor[(1890), float64], %var_14750: Tensor[(80), uint32], %var_14751: Tensor[(7, 84), float32]) -> (Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) {
  @func_14746(%var_14748, %var_14749, %var_14750, %var_14751) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) */
}

def @func_14856() -> Tensor[(13, 1, 11), float32] {
  @func_14854() /* ty=Tensor[(13, 1, 11), float32] */
}

def @func_15977(%var_15965: Tensor[(9, 140), uint8]) -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(90), uint8], Tensor[(9, 140), uint8]) {
  %605 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %606 = %605.0;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(13, ?, 11), float32] */;
  %608 = cast(meta[relay.Constant][49] /* ty=Tensor[(90), uint8] */, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %609 = cast(%var_15965, dtype="uint8") /* ty=Tensor[(9, 140), uint8] */;
  %610 = reshape(%608, newshape=[90, 1]) /* ty=Tensor[(90, 1), uint8] */;
  %611 = reshape(%609, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), uint8] */;
  %612 = @func_13963(%610, %611) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) */;
  %613 = @func_15841() /* ty=Tensor[(13, ?, 11), uint8] */;
  %614 = log2(%607) /* ty=Tensor[(13, ?, 11), float32] */;
  %615 = %612.0;
  (%613, %614, %615, meta[relay.Constant][49] /* ty=Tensor[(90), uint8] */, %var_15965)
}

def @func_19390() -> Tensor[(13, 6, 11), uint16] {
  %616 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %616.0
}

def @func_17652() -> Tensor[(13, 1, 11), float64] {
  @func_17507() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_10853(%var_10812: Tensor[(16, 11, 12), float32], %var_10813: Tensor[(16, 11, 12), float32], %var_10846: Tensor[(35, 6), float32], %var_10847: Tensor[(588), float32], %var_10848: Tensor[(8, 56), float64]) -> (Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) {
  %617 = cast(%var_10813, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
  %618 = cast(%var_10813, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %619 = shape_of(%var_10812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_10812, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = less_equal(%620, %621) /* ty=Tensor[(16, 11, 12), bool] */;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(16, 11, 12), float64] */;
  %624 = cast(%var_10846, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %625 = cast(%var_10847, dtype="float32") /* ty=Tensor[(588), float32] */;
  %626 = cast(%var_10848, dtype="float64") /* ty=Tensor[(8, 56), float64] */;
  %627 = reshape(%624, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %628 = reshape(%625, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %629 = reshape(%626, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %630 = @func_6196(%627, %628, %629) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %631 = log2(%617) /* ty=Tensor[(16, 11, 12), float64] */;
  %632 = sin(%623) /* ty=Tensor[(16, 11, 12), float64] */;
  %633 = %630.4;
  (%631, %632, %633, %var_10846, %var_10847, %var_10848)
}

def @func_15788() -> (Tensor[(13, ?, 11), uint8],) {
  %636 = fn () -> (Tensor[(13, ?, 11), uint8],) {
    %634 = @func_15443() /* ty=(Tensor[(13, ?, 11), uint8],) */;
    %635 = %634.0;
    (%635,)
  };
  %636() /* ty=(Tensor[(13, ?, 11), uint8],) */
}

def @func_17295() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  @func_17293() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */
}

def @func_13442(%var_13439: Tensor[(1260), uint8], %var_13440: float64, %var_13441: Tensor[(80), uint32]) -> (Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) {
  %687 = fn (%var_13279: Tensor[(1260), uint8], %var_13288: float64, %var_13335: Tensor[(80), uint32]) -> (Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) {
    %637 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %638 = cast(%var_13279, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
    %639 = reshape(%637, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
    %640 = reshape(%638, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
    %641 = @func_7254(%639, %640) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
    %642 = cast(%var_13288, dtype="float64") /* ty=float64 */;
    %643 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 7), float64] */;
    %644 = cast(meta[relay.Constant][52] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
    %645 = %641.0;
    %646 = cast(%645, dtype="int8") /* ty=Tensor[(4, 7, 9), int8] */;
    %647 = reshape(%642, newshape=[]) /* ty=float64 */;
    %648 = reshape(%643, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float64] */;
    %649 = reshape(%644, newshape=[21]) /* ty=Tensor[(21), uint64] */;
    %650 = reshape(%646, newshape=[252]) /* ty=Tensor[(252), int8] */;
    %651 = @func_6844(%647, %648, %649, %650) /* ty=(Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) */;
    %652 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 7, 14), float64] */, dtype="float64") /* ty=Tensor[(3, 7, 14), float64] */;
    %653 = log10(%652) /* ty=Tensor[(3, 7, 14), float64] */;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(3, 7, 14), float32] */;
    %655 = log(%654) /* ty=Tensor[(3, 7, 14), float32] */;
    %656 = cast(%655, dtype="float64") /* ty=Tensor[(3, 7, 14), float64] */;
    %657 = cast(meta[relay.Constant][54] /* ty=Tensor[(504), uint16] */, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %658 = reshape(%657, newshape=[504]) /* ty=Tensor[(504), uint16] */;
    %659 = @func_6107(%658) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
    %660 = cast(meta[relay.Constant][55] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
    %661 = reshape(%660, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
    %662 = @func_9585(%661) /* ty=(Tensor[(1, 9, 6), bool],) */;
    %663 = cast(%var_13335, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %664 = cast(%var_13335, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %665 = reshape(%663, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
    %666 = reshape(%664, newshape=[8, 5, 2]) /* ty=Tensor[(8, 5, 2), uint32] */;
    %667 = @func_349(%665, %666) /* ty=(Tensor[(8, 5, 2), uint32], Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2, 14, 16), float64], Tensor[(8, 5, 2), uint16]) */;
    %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %669 = cast(%var_13279, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
    %670 = reshape(%668, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
    %671 = reshape(%669, newshape=[1260, 1]) /* ty=Tensor[(1260, 1), uint8] */;
    %672 = @func_7254(%670, %671) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(10, ?, 6), uint64], Tensor[(14, 9, 10), bool], Tensor[(90), uint8], Tensor[(1260, 1), uint8]) */;
    %673 = cast(meta[relay.Constant][52] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
    %674 = cast(meta[relay.Constant][56] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %675 = cast(meta[relay.Constant][57] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %676 = reshape(%673, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
    %677 = reshape(%674, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %678 = reshape(%675, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %679 = @func_2914(%676, %677, %678) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
    %680 = %651.7;
    %681 = sinh(%656) /* ty=Tensor[(3, 7, 14), float64] */;
    %682 = %659.0;
    %683 = %662.0;
    %684 = %667.4;
    %685 = %672.1;
    %686 = %679.2;
    (%645, meta[relay.Constant][50] /* ty=Tensor[(60), float64] */, %var_13279, %680, %var_13288, meta[relay.Constant][51] /* ty=Tensor[(1, 7), float64] */, meta[relay.Constant][52] /* ty=Tensor[(21), uint64] */, %681, %682, meta[relay.Constant][54] /* ty=Tensor[(504), uint16] */, %683, meta[relay.Constant][55] /* ty=Tensor[(54), bool] */, %684, %var_13335, %685, %686, meta[relay.Constant][56] /* ty=Tensor[(132), float32] */, meta[relay.Constant][57] /* ty=Tensor[(448), float64] */)
  };
  %687(%var_13439, %var_13440, %var_13441) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) */
}

def @func_17330(%var_17315: float64) -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 13), float64], float64, Tensor[(630), int64], Tensor[(630, 1), int64], Tensor[(21), uint64]) {
  %688 = cast(%var_17315, dtype="float64") /* ty=float64 */;
  %689 = reshape(%688, newshape=[]) /* ty=float64 */;
  %690 = @func_3508(%689) /* ty=(Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) */;
  %691 = cast(meta[relay.Constant][58] /* ty=Tensor[(630, 1), int64] */, dtype="int64") /* ty=Tensor[(630, 1), int64] */;
  %692 = cast(meta[relay.Constant][59] /* ty=Tensor[(21), uint64] */, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %693 = reshape(%691, newshape=[630]) /* ty=Tensor[(630), int64] */;
  %694 = reshape(%692, newshape=[21]) /* ty=Tensor[(21), uint64] */;
  %695 = @func_14033(%693, %694) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) */;
  %696 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %697 = %690.0;
  %698 = %695.2;
  (%696, %697, %var_17315, %698, meta[relay.Constant][58] /* ty=Tensor[(630, 1), int64] */, meta[relay.Constant][59] /* ty=Tensor[(21), uint64] */)
}

def @func_16014() -> (Tensor[(13, 1, 11), float64],) {
  %700 = fn () -> (Tensor[(13, 1, 11), float64],) {
    %699 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
    (%699,)
  };
  %700() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_17104() -> (Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) {
  %705 = fn () -> (Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) {
    %701 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
    %702 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
    %703 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
    %704 = %701.0;
    (%702, %703, %704)
  };
  %705() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) */
}

def @func_19709(%var_19707: Tensor[(448), float64], %var_19708: Tensor[(64), int64]) -> (Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) {
  @func_19705(%var_19707, %var_19708) /* ty=(Tensor[(2, 14, 16), float64], Tensor[(448), float64], Tensor[(2112), float32], Tensor[(64), int64], Tensor[(5, 126), float32], Tensor[(13, 6, 11), float64]) */
}

def @func_19119() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %706 = @func_18648() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */;
  %707 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %708 = %706.1;
  (%707, %708)
}

def @func_18308(%var_18307: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), int32],) {
  %713 = fn (%var_18296: Tensor[(13, 9, 11), float32]) -> (Tensor[(13, 9, 11), int32],) {
    %709 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
    %710 = cast(%709, dtype="int32") /* ty=Tensor[(13, 1, 11), int32] */;
    %711 = cast(%var_18296, dtype="int32") /* ty=Tensor[(13, 9, 11), int32] */;
    %712 = add(%710, %711) /* ty=Tensor[(13, 9, 11), int32] */;
    (%712,)
  };
  %713(%var_18307) /* ty=(Tensor[(13, 9, 11), int32],) */
}

def @func_13652(%var_13651: Tensor[(16, 7, 10), float32]) -> (Tensor[(16, 7, 10), float32],) {
  %716 = fn (%var_13644: Tensor[(16, 7, 10), float32]) -> (Tensor[(16, 7, 10), float32],) {
    %714 = cast(%var_13644, dtype="float32") /* ty=Tensor[(16, 7, 10), float32] */;
    %715 = sqrt(%714) /* ty=Tensor[(16, 7, 10), float32] */;
    (%715,)
  };
  %716(%var_13651) /* ty=(Tensor[(16, 7, 10), float32],) */
}

def @func_14611() -> (Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) {
  %736 = fn () -> (Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) {
    %717 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
    %718 = cast(%717, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
    %719 = cos(%718) /* ty=Tensor[(13, 1, 11), float32] */;
    %720 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %721 = %720.0;
    %722 = cast(%721, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
    %723 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%717, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %726 = less_equal(%724, %725) /* ty=Tensor[(13, ?, 11), bool] */;
    %727 = cast(%726, dtype="uint8") /* ty=Tensor[(13, ?, 11), uint8] */;
    %728 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %729 = cast(%719, dtype="uint8") /* ty=Tensor[(13, 1, 11), uint8] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %731 = cast(meta[relay.Constant][60] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
    %732 = reshape(%731, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
    %733 = @func_9585(%732) /* ty=(Tensor[(1, 9, 6), bool],) */;
    %734 = multiply(%729, %730) /* ty=Tensor[(13, ?, 11), uint8] */;
    %735 = %733.0;
    (%734, %735, meta[relay.Constant][60] /* ty=Tensor[(54), bool] */)
  };
  %736() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */
}

def @func_16719() -> Tensor[(54), bool] {
  %737 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %737.2
}

def @func_16664() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %738 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %739 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %740 = %738.0;
  %741 = %739.0;
  (%740, %741)
}

def @func_18095() -> (Tensor[(13, 6, 11), uint16],) {
  %750 = fn () -> (Tensor[(13, 6, 11), uint16],) {
    %742 = @func_17873() /* ty=(Tensor[(13, 1, 11), float32],) */;
    %743 = %742.0;
    %744 = cast(%743, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
    %745 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 11), float32] */;
    %746 = power(%744, %745) /* ty=Tensor[(13, 6, 11), float32] */;
    %747 = cast(%746, dtype="uint16") /* ty=Tensor[(13, 6, 11), uint16] */;
    %748 = cast(%743, dtype="uint16") /* ty=Tensor[(13, 1, 11), uint16] */;
    %749 = multiply(%747, %748) /* ty=Tensor[(13, 6, 11), uint16] */;
    (%749,)
  };
  %750() /* ty=(Tensor[(13, 6, 11), uint16],) */
}

def @func_14862(%var_14861: Tensor[(1, 4, 13), float64]) -> (Tensor[(1, 4, 13), float64],) {
  %753 = fn (%var_14857: Tensor[(1, 4, 13), float64]) -> (Tensor[(1, 4, 13), float64],) {
    %751 = cast(%var_14857, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
    %752 = asinh(%751) /* ty=Tensor[(1, 4, 13), float64] */;
    (%752,)
  };
  %753(%var_14861) /* ty=(Tensor[(1, 4, 13), float64],) */
}

def @func_15593(%var_15581: Tensor[(945, 2), float64], %var_15582: Tensor[(20, 4), uint32], %var_15584: Tensor[(588), float32], %var_15587: Tensor[(1573), float64]) -> (Tensor[(13, 1, 11), float64], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(80), uint32], Tensor[(468), float64], Tensor[(945, 2), float64], Tensor[(20, 4), uint32], Tensor[(105, 2), float32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(13, ?, 11), bool]) {
  %754 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %755 = cast(meta[relay.Constant][62] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %756 = reshape(%755, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %757 = @func_9585(%756) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %758 = cast(meta[relay.Constant][63] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %759 = cast(meta[relay.Constant][63] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %760 = cast(%var_15581, dtype="float64") /* ty=Tensor[(945, 2), float64] */;
  %761 = cast(%var_15582, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %762 = cast(%var_15582, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %763 = cast(meta[relay.Constant][64] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %764 = cast(%var_15584, dtype="float32") /* ty=Tensor[(588), float32] */;
  %765 = reshape(%758, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %766 = reshape(%759, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %767 = reshape(%760, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %768 = reshape(%761, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %769 = reshape(%762, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %770 = reshape(%763, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %771 = reshape(%764, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %772 = @func_11514(%765, %766, %767, %768, %769, %770, %771) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) */;
  %773 = cast(meta[relay.Constant][63] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %774 = cast(%var_15581, dtype="float64") /* ty=Tensor[(945, 2), float64] */;
  %775 = cast(%var_15587, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %776 = reshape(%773, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %777 = reshape(%774, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %778 = reshape(%775, newshape=[1573]) /* ty=Tensor[(1573), float64] */;
  %779 = @func_15002(%776, %777, %778) /* ty=(Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) */;
  %780 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
  %781 = %754.0;
  %782 = %757.0;
  %783 = %772.1;
  %784 = %779.6;
  %785 = %780.0;
  (%781, %782, meta[relay.Constant][62] /* ty=Tensor[(54), bool] */, %783, meta[relay.Constant][63] /* ty=Tensor[(468), float64] */, %var_15581, %var_15582, meta[relay.Constant][64] /* ty=Tensor[(105, 2), float32] */, %var_15584, %784, %var_15587, %785)
}

def @func_19575() -> (Tensor[(15, 11, 2), uint8],) {
  %786 = @func_19119() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */;
  %787 = %786.1;
  (%787,)
}

def @func_14166() -> Tensor[(13, ?, 11), bool] {
  %788 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
  %790 = acosh(%789) /* ty=Tensor[(13, 1, 11), float32] */;
  %791 = cast(%788, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%790, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%793, %794) /* ty=Tensor[(13, ?, 11), bool] */
}

def @func_18995() -> (Tensor[(13, 4, 11), float32],) {
  @func_18993() /* ty=(Tensor[(13, 4, 11), float32],) */
}

def @func_13838(%var_13832: Tensor[(2, 8, 13), float64], %var_13833: Tensor[(630, 2), uint8], %var_13834: float64, %var_13835: Tensor[(40, 2), uint32], %var_13836: Tensor[(210), float32], %var_13837: Tensor[(7, 84), float32]) -> (Tensor[(60), float64], Tensor[(630, 2), uint8], float64, Tensor[(40, 2), uint32], Tensor[(16, 11, 12), float64], Tensor[(264, 8), float32], Tensor[(210), float32], Tensor[(7, 84), float32], Tensor[(448), float64], Tensor[(1, 4, 16), int64], Tensor[(2, 32), int64], Tensor[(132, 1), float32], Tensor[(1890), float64], Tensor[(2, 8, 13), float64]) {
  %829 = fn (%var_13687: Tensor[(2, 8, 13), float64], %var_13691: Tensor[(630, 2), uint8], %var_13692: float64, %var_13693: Tensor[(40, 2), uint32], %var_13716: Tensor[(210), float32], %var_13717: Tensor[(7, 84), float32]) -> (Tensor[(60), float64], Tensor[(630, 2), uint8], float64, Tensor[(40, 2), uint32], Tensor[(16, 11, 12), float64], Tensor[(264, 8), float32], Tensor[(210), float32], Tensor[(7, 84), float32], Tensor[(448), float64], Tensor[(1, 4, 16), int64], Tensor[(2, 32), int64], Tensor[(132, 1), float32], Tensor[(1890), float64], Tensor[(2, 8, 13), float64]) {
    %795 = cast(%var_13691, dtype="uint8") /* ty=Tensor[(630, 2), uint8] */;
    %796 = cast(%var_13692, dtype="float64") /* ty=float64 */;
    %797 = cast(%var_13693, dtype="uint32") /* ty=Tensor[(40, 2), uint32] */;
    %798 = reshape(%795, newshape=[1260]) /* ty=Tensor[(1260), uint8] */;
    %799 = reshape(%796, newshape=[]) /* ty=float64 */;
    %800 = reshape(%797, newshape=[80]) /* ty=Tensor[(80), uint32] */;
    %801 = @func_13438(%798, %799, %800) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(588), float32], float64, Tensor[(1, 7), float64], Tensor[(21), uint64], Tensor[(3, 7, 14), float64], Tensor[(9, 4, 8), float32], Tensor[(504), uint16], Tensor[(1, 9, 6), bool], Tensor[(54), bool], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(252), int8], Tensor[(448), float64], Tensor[(132), float32], Tensor[(448), float64]) */;
    %802 = cast(meta[relay.Constant][65] /* ty=Tensor[(264, 8), float32] */, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
    %803 = cast(meta[relay.Constant][65] /* ty=Tensor[(264, 8), float32] */, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
    %804 = cast(%var_13716, dtype="float32") /* ty=Tensor[(210), float32] */;
    %805 = cast(%var_13717, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
    %806 = cast(meta[relay.Constant][66] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %807 = reshape(%802, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %808 = reshape(%803, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %809 = reshape(%804, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
    %810 = reshape(%805, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %811 = reshape(%806, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
    %812 = @func_10853(%807, %808, %809, %810, %811) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
    %813 = cast(%var_13692, dtype="int64") /* ty=int64 */;
    %814 = cast(meta[relay.Constant][67] /* ty=Tensor[(2, 32), int64] */, dtype="int64") /* ty=Tensor[(2, 32), int64] */;
    %815 = reshape(%813, newshape=[]) /* ty=int64 */;
    %816 = reshape(%814, newshape=[1, 4, 16]) /* ty=Tensor[(1, 4, 16), int64] */;
    %817 = @func_8045(%815, %816) /* ty=(Tensor[(1, 4, 16), int64],) */;
    %818 = cast(meta[relay.Constant][68] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
    %819 = reshape(%818, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %820 = @func_13519(%819) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(8, 4, 7), float64], Tensor[(1890), float64], Tensor[(2, 40), uint32], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132, 1), float32], Tensor[(448), float64]) */;
    %821 = cast(%var_13687, dtype="float64") /* ty=Tensor[(2, 8, 13), float64] */;
    %822 = sigmoid(%821) /* ty=Tensor[(2, 8, 13), float64] */;
    %823 = cast(%822, dtype="float64") /* ty=Tensor[(2, 8, 13), float64] */;
    %824 = %801.1;
    %825 = %812.0;
    %826 = %817.0;
    %827 = %820.6;
    %828 = sinh(%823) /* ty=Tensor[(2, 8, 13), float64] */;
    (%824, %var_13691, %var_13692, %var_13693, %825, meta[relay.Constant][65] /* ty=Tensor[(264, 8), float32] */, %var_13716, %var_13717, meta[relay.Constant][66] /* ty=Tensor[(448), float64] */, %826, meta[relay.Constant][67] /* ty=Tensor[(2, 32), int64] */, %827, meta[relay.Constant][68] /* ty=Tensor[(1890), float64] */, %828)
  };
  %829(%var_13832, %var_13833, %var_13834, %var_13835, %var_13836, %var_13837) /* ty=(Tensor[(60), float64], Tensor[(630, 2), uint8], float64, Tensor[(40, 2), uint32], Tensor[(16, 11, 12), float64], Tensor[(264, 8), float32], Tensor[(210), float32], Tensor[(7, 84), float32], Tensor[(448), float64], Tensor[(1, 4, 16), int64], Tensor[(2, 32), int64], Tensor[(132, 1), float32], Tensor[(1890), float64], Tensor[(2, 8, 13), float64]) */
}

def @func_15509(%var_15507: Tensor[(6, 1, 1), float32], %var_15508: Tensor[(132), float32]) -> (Tensor[(6, 1, 1), float32], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  @func_15505(%var_15507, %var_15508) /* ty=(Tensor[(6, 1, 1), float32], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */
}

def @func_89(%var_87: Tensor[(2, 14, 16), float64], %var_88: Tensor[(2, 14, 16), float64]) -> (Tensor[(2, 14, 16), float64],) {
  %835 = fn (%var_77: Tensor[(2, 14, 16), float64], %var_78: Tensor[(2, 14, 16), float64]) -> (Tensor[(2, 14, 16), float64],) {
    %830 = cast(%var_78, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %831 = shape_of(%var_77, dtype="int32") /* ty=Tensor[(3), int32] */;
    %832 = cast(%var_77, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %834 = mod(%832, %833) /* ty=Tensor[(2, 14, 16), float64] */;
    (%834,)
  };
  %835(%var_87, %var_88) /* ty=(Tensor[(2, 14, 16), float64],) */
}

def @func_17987() -> (Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
  @func_17985() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */
}

def @func_19761(%var_19732: Tensor[(9, 8, 6), uint8]) -> (Tensor[(9, 8, 6), uint8], Tensor[(9, 8, 6), float32]) {
  %836 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 6), uint8] */, dtype="uint8") /* ty=Tensor[(9, 8, 6), uint8] */;
  %837 = shape_of(%var_19732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_19732, dtype="uint8") /* ty=Tensor[(9, 8, 6), uint8] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %840 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 6), uint8] */, dtype="float32") /* ty=Tensor[(9, 8, 6), float32] */;
  %841 = logical_xor(%838, %839) /* ty=Tensor[(9, 8, 6), uint8] */;
  %842 = atan(%840) /* ty=Tensor[(9, 8, 6), float32] */;
  (%841, %842)
}

def @func_6540(%var_6536: Tensor[(15, 10, 5), float32], %var_6537: Tensor[(15, 10, 5), float32], %var_6538: Tensor[(588), float32], %var_6539: Tensor[(448), float64]) -> (Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  @func_6534(%var_6536, %var_6537, %var_6538, %var_6539) /* ty=(Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */
}

def @func_13102(%var_13100: Tensor[(6, 9, 10), float64]) -> Tensor[(6, 9, 10), float64] {
  @func_13099(%var_13100) /* ty=Tensor[(6, 9, 10), float64] */
}

def @func_6109(%var_6108: Tensor[(504), uint16]) -> (Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) {
  %851 = fn (%var_6099: Tensor[(504), uint16]) -> (Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) {
    %843 = cast(meta[relay.Constant][70] /* ty=Tensor[(9, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(9, 4, 8), float32] */;
    %844 = cast(%var_6099, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %845 = cast(%var_6099, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %846 = reshape(%844, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %847 = reshape(%845, newshape=[7, 8, 9]) /* ty=Tensor[(7, 8, 9), uint16] */;
    %848 = @func_511(%846, %847) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) */;
    %849 = exp(%843) /* ty=Tensor[(9, 4, 8), float32] */;
    %850 = %848.1;
    (%849, %850, %var_6099)
  };
  %851(%var_6108) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */
}

def @func_19562() -> (Tensor[(13, 1, 11), float64],) {
  %852 = @func_15984() /* ty=Tensor[(13, 1, 11), float64] */;
  (%852,)
}

def @func_17293() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %853 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %854 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %855 = %853.0;
  (%854, %855)
}

def @func_717(%var_705: Tensor[(7, 16, 16), uint64], %var_706: Tensor[(7, 16, 16), uint64]) -> Tensor[(7, 16, 16), bool] {
  %856 = cast(%var_706, dtype="bool") /* ty=Tensor[(7, 16, 16), bool] */;
  %857 = shape_of(%var_705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%var_705, dtype="bool") /* ty=Tensor[(7, 16, 16), bool] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%858, %859) /* ty=Tensor[(7, 16, 16), bool] */
}

def @func_11061(%var_10957: float64, %var_10958: Tensor[(7, 1, 8), float64], %var_11001: Tensor[(210), float32], %var_11002: Tensor[(588), float32], %var_11003: Tensor[(448), float64], %var_11051: Tensor[(20, 4), uint32]) -> (Tensor[(54), bool], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64], Tensor[(1, 9, 6), float32], Tensor[(7, ?, 8), int64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(20, 4), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
  %860 = cast(%var_11001, dtype="float32") /* ty=Tensor[(210), float32] */;
  %861 = cast(%var_11002, dtype="float32") /* ty=Tensor[(588), float32] */;
  %862 = cast(%var_11003, dtype="float64") /* ty=Tensor[(448), float64] */;
  %863 = reshape(%860, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %864 = reshape(%861, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %865 = reshape(%862, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %866 = @func_6196(%863, %864, %865) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %867 = cast(meta[relay.Constant][71] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %868 = reshape(%867, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), bool] */;
  %869 = @func_9585(%868) /* ty=(Tensor[(1, 9, 6), bool],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %872 = cast(%var_10957, dtype="bool") /* ty=bool */;
  %873 = cast(%var_10958, dtype="bool") /* ty=Tensor[(7, 1, 8), bool] */;
  %874 = greater(%872, %873) /* ty=Tensor[(7, 1, 8), bool] */;
  %875 = cast(%var_10958, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  %876 = cast(%var_10957, dtype="float32") /* ty=float32 */;
  %877 = power(%875, %876) /* ty=Tensor[(7, 1, 8), float32] */;
  %878 = cast(%877, dtype="int64") /* ty=Tensor[(7, 1, 8), int64] */;
  %879 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%874, dtype="int64") /* ty=Tensor[(7, 1, 8), int64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %882 = cast(meta[relay.Constant][72] /* ty=Tensor[(1890), float64] */, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %883 = cast(%var_11051, dtype="uint32") /* ty=Tensor[(20, 4), uint32] */;
  %884 = reshape(%882, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %885 = reshape(%883, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %886 = @func_936(%884, %885) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %887 = cast(meta[relay.Constant][73] /* ty=Tensor[(2048), uint64] */, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %888 = cast(meta[relay.Constant][73] /* ty=Tensor[(2048), uint64] */, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %889 = reshape(%887, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %890 = reshape(%888, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
  %891 = @func_6394(%889, %890) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
  %892 = %866.4;
  %893 = rsqrt(%871) /* ty=Tensor[(1, 9, 6), float32] */;
  %894 = maximum(%880, %881) /* ty=Tensor[(7, ?, 8), int64] */;
  %895 = %886.2;
  %896 = %891.0;
  (meta[relay.Constant][71] /* ty=Tensor[(54), bool] */, %892, %var_11001, %var_11002, %var_11003, %893, %894, %895, meta[relay.Constant][72] /* ty=Tensor[(1890), float64] */, %var_11051, %896, meta[relay.Constant][73] /* ty=Tensor[(2048), uint64] */)
}

def @func_14746(%var_14728: Tensor[(468), float64], %var_14729: Tensor[(1890), float64], %var_14730: Tensor[(80), uint32], %var_14732: Tensor[(7, 84), float32]) -> (Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) {
  %897 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %898 = cast(%var_14728, dtype="float64") /* ty=Tensor[(468), float64] */;
  %899 = cast(%var_14728, dtype="float64") /* ty=Tensor[(468), float64] */;
  %900 = cast(%var_14729, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %901 = cast(%var_14730, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %902 = cast(%var_14730, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %903 = cast(meta[relay.Constant][74] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %904 = cast(%var_14732, dtype="float32") /* ty=Tensor[(7, 84), float32] */;
  %905 = reshape(%898, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %906 = reshape(%899, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float64] */;
  %907 = reshape(%900, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %908 = reshape(%901, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %909 = reshape(%902, newshape=[80, 1]) /* ty=Tensor[(80, 1), uint32] */;
  %910 = reshape(%903, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %911 = reshape(%904, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %912 = @func_11514(%905, %906, %907, %908, %909, %910, %911) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) */;
  %913 = %897.0;
  %914 = %912.6;
  (%913, %914, %var_14728, %var_14729, %var_14730, meta[relay.Constant][74] /* ty=Tensor[(210), float32] */, %var_14732)
}

def @func_13967(%var_13965: Tensor[(90, 1), uint8], %var_13966: Tensor[(1, 1260), uint8]) -> (Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) {
  @func_13963(%var_13965, %var_13966) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) */
}

def @func_11514(%var_11458: Tensor[(13, 3, 12), float64], %var_11459: Tensor[(13, 3, 12), float64], %var_11464: Tensor[(1890), float64], %var_11465: Tensor[(80, 1), uint32], %var_11482: Tensor[(80, 1), uint32], %var_11491: Tensor[(210), float32], %var_11492: Tensor[(588), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(80), uint32], Tensor[(1890), float64], Tensor[(80, ?), bool], Tensor[(588), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(80, 448), bool]) {
  %915 = cast(%var_11459, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %916 = shape_of(%var_11458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%var_11458, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %919 = cast(%var_11464, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %920 = cast(%var_11465, dtype="uint32") /* ty=Tensor[(80, 1), uint32] */;
  %921 = reshape(%919, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
  %922 = reshape(%920, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %923 = @func_936(%921, %922) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
  %924 = cast(%var_11482, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %925 = shape_of(%var_11465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %926 = cast(%var_11465, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %928 = cast(%var_11491, dtype="float32") /* ty=Tensor[(210), float32] */;
  %929 = cast(%var_11492, dtype="float32") /* ty=Tensor[(588), float32] */;
  %930 = cast(meta[relay.Constant][75] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %931 = reshape(%928, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %932 = reshape(%929, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %933 = reshape(%930, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %934 = @func_6196(%931, %932, %933) /* ty=(Tensor[(13, 12, 5), float32], Tensor[(11, 2, 6), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) */;
  %935 = cast(%var_11482, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %936 = erf(%935) /* ty=Tensor[(80, 1), float32] */;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %938 = cos(%937) /* ty=Tensor[(80, 1), float32] */;
  %939 = cast(%938, dtype="bool") /* ty=Tensor[(80, 1), bool] */;
  %940 = cast(meta[relay.Constant][75] /* ty=Tensor[(448), float64] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %941 = greater_equal(%917, %918) /* ty=Tensor[(13, 3, 12), bool] */;
  %942 = %923.3;
  %943 = logical_and(%926, %927) /* ty=Tensor[(80, ?), bool] */;
  %944 = %934.3;
  %945 = not_equal(%939, %940) /* ty=Tensor[(80, 448), bool] */;
  (%941, %942, %var_11464, %943, %944, %var_11491, %var_11492, %945)
}

def @func_3508(%var_3482: float64) -> (Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) {
  %946 = cast(%var_3482, dtype="float64") /* ty=float64 */;
  %947 = cast(meta[relay.Constant][76] /* ty=Tensor[(13, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 13), float64] */;
  %948 = cast(meta[relay.Constant][76] /* ty=Tensor[(13, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 1, 13), float64] */;
  %949 = cast(%var_3482, dtype="float64") /* ty=float64 */;
  %950 = mod(%946, %947) /* ty=Tensor[(13, 1, 13), float64] */;
  %951 = floor_mod(%948, %949) /* ty=Tensor[(13, 1, 13), float64] */;
  (%950, %951)
}

def @func_16315(%var_16313: Tensor[(8, 8), int64], %var_16314: Tensor[(630), float32]) -> (Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) {
  %982 = fn (%var_16290: Tensor[(8, 8), int64], %var_16303: Tensor[(630), float32]) -> (Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) {
    %952 = cast(meta[relay.Constant][77] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %953 = cast(meta[relay.Constant][77] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %954 = cast(meta[relay.Constant][78] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %955 = cast(meta[relay.Constant][79] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %956 = cast(meta[relay.Constant][80] /* ty=Tensor[(2, 224), float64] */, dtype="float64") /* ty=Tensor[(2, 224), float64] */;
    %957 = reshape(%952, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %958 = reshape(%953, newshape=[16, 11, 12]) /* ty=Tensor[(16, 11, 12), float32] */;
    %959 = reshape(%954, newshape=[35, 6]) /* ty=Tensor[(35, 6), float32] */;
    %960 = reshape(%955, newshape=[588]) /* ty=Tensor[(588), float32] */;
    %961 = reshape(%956, newshape=[8, 56]) /* ty=Tensor[(8, 56), float64] */;
    %962 = @func_10853(%957, %958, %959, %960, %961) /* ty=(Tensor[(16, 11, 12), float64], Tensor[(16, 11, 12), float64], Tensor[(448), float64], Tensor[(35, 6), float32], Tensor[(588), float32], Tensor[(8, 56), float64]) */;
    %963 = @func_14854() /* ty=Tensor[(13, 1, 11), float32] */;
    %964 = cast(%963, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
    %965 = sigmoid(%964) /* ty=Tensor[(13, 1, 11), float64] */;
    %966 = cast(%963, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
    %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
    %968 = cast(%965, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %970 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %971 = cast(%var_16290, dtype="int64") /* ty=Tensor[(8, 8), int64] */;
    %972 = reshape(%970, newshape=[]) /* ty=int64 */;
    %973 = reshape(%971, newshape=[1, 4, 16]) /* ty=Tensor[(1, 4, 16), int64] */;
    %974 = @func_8045(%972, %973) /* ty=(Tensor[(1, 4, 16), int64],) */;
    %975 = cast(%var_16303, dtype="float32") /* ty=Tensor[(630), float32] */;
    %976 = reshape(%975, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
    %977 = @func_11441(%976) /* ty=(Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) */;
    %978 = %962.2;
    %979 = logical_and(%968, %969) /* ty=Tensor[(13, ?, 11), bool] */;
    %980 = %974.0;
    %981 = %977.2;
    (%978, meta[relay.Constant][77] /* ty=Tensor[(2112), float32] */, meta[relay.Constant][78] /* ty=Tensor[(210), float32] */, meta[relay.Constant][79] /* ty=Tensor[(588), float32] */, meta[relay.Constant][80] /* ty=Tensor[(2, 224), float64] */, %979, %980, -4 /* ty=int64 */, %var_16290, %981, %var_16303)
  };
  %982(%var_16313, %var_16314) /* ty=(Tensor[(448), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(588), float32], Tensor[(2, 224), float64], Tensor[(13, ?, 11), bool], Tensor[(1, 4, 16), int64], int64, Tensor[(8, 8), int64], Tensor[(15, 3, 14), float64], Tensor[(630), float32]) */
}

def @func_15843() -> Tensor[(13, ?, 11), uint8] {
  @func_15841() /* ty=Tensor[(13, ?, 11), uint8] */
}

def @func_16449(%var_16390: Tensor[(90), uint8], %var_16391: Tensor[(1260), uint8], %var_16424: Tensor[(630), int64], %var_16430: Tensor[(2048), uint64]) -> (Tensor[(90), uint8], Tensor[(1260), uint8], Tensor[(13, 90, 11), bool], Tensor[(13, 90, 11), uint64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(13, ?, 11), bool], Tensor[(80), uint32], Tensor[(2048), uint64]) {
  %983 = @func_15841() /* ty=Tensor[(13, ?, 11), uint8] */;
  %984 = cast(%var_16390, dtype="uint8") /* ty=Tensor[(90), uint8] */;
  %985 = cast(%var_16391, dtype="uint8") /* ty=Tensor[(1260), uint8] */;
  %986 = reshape(%984, newshape=[90, 1]) /* ty=Tensor[(90, 1), uint8] */;
  %987 = reshape(%985, newshape=[1, 1260]) /* ty=Tensor[(1, 1260), uint8] */;
  %988 = @func_13963(%986, %987) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(14, 9, 10), bool], Tensor[(90, 1), uint8], Tensor[(1, 1260), uint8]) */;
  %989 = %988.2;
  %990 = cast(%983, dtype="bool") /* ty=Tensor[(13, ?, 11), bool] */;
  %991 = cast(%989, dtype="bool") /* ty=Tensor[(90, 1), bool] */;
  %992 = cast(%983, dtype="uint64") /* ty=Tensor[(13, ?, 11), uint64] */;
  %993 = cast(%989, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
  %994 = cast(%var_16424, dtype="int64") /* ty=Tensor[(630), int64] */;
  %995 = cast(%var_16424, dtype="int64") /* ty=Tensor[(630), int64] */;
  %996 = reshape(%994, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %997 = reshape(%995, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
  %998 = @func_12965(%996, %997) /* ty=(Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) */;
  %999 = cast(meta[relay.Constant][81] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1000 = cast(%var_16430, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
  %1001 = reshape(%999, newshape=[40, 2]) /* ty=Tensor[(40, 2), uint32] */;
  %1002 = reshape(%1000, newshape=[2048]) /* ty=Tensor[(2048), uint64] */;
  %1003 = @func_15196(%1001, %1002) /* ty=(Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) */;
  %1004 = logical_and(%990, %991) /* ty=Tensor[(13, 90, 11), bool] */;
  %1005 = minimum(%992, %993) /* ty=Tensor[(13, 90, 11), uint64] */;
  %1006 = %998.0;
  %1007 = %1003.0;
  (%var_16390, %var_16391, %1004, %1005, %1006, %var_16424, %1007, meta[relay.Constant][81] /* ty=Tensor[(80), uint32] */, %var_16430)
}

def @func_15652() -> (Tensor[(13, 1, 11), float64],) {
  %1008 = @func_13253() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1008,)
}

def @func_3511(%var_3509: float64) -> (Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) {
  @func_3508(%var_3509) /* ty=(Tensor[(13, 1, 13), float64], Tensor[(13, 1, 13), float64]) */
}

def @func_511(%var_483: Tensor[(7, 8, 9), uint16], %var_484: Tensor[(7, 8, 9), uint16]) -> (Tensor[(7, 8, 9), uint16], Tensor[(7, 8, 9), float32]) {
  %1009 = cast(%var_484, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1010 = shape_of(%var_483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_483, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1013 = cast(%var_483, dtype="float32") /* ty=Tensor[(7, 8, 9), float32] */;
  %1014 = maximum(%1011, %1012) /* ty=Tensor[(7, 8, 9), uint16] */;
  %1015 = tan(%1013) /* ty=Tensor[(7, 8, 9), float32] */;
  (%1014, %1015)
}

def @func_17845() -> (Tensor[(13, 1, 11), float64],) {
  @func_17843() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_6849(%var_6845: float64, %var_6846: Tensor[(1, 1, 7), float64], %var_6847: Tensor[(21), uint64], %var_6848: Tensor[(252), int8]) -> (Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) {
  %1037 = fn (%var_6815: float64, %var_6816: Tensor[(1, 1, 7), float64], %var_6824: Tensor[(21), uint64], %var_6838: Tensor[(252), int8]) -> (Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) {
    %1016 = cast(%var_6815, dtype="bool") /* ty=bool */;
    %1017 = cast(%var_6816, dtype="bool") /* ty=Tensor[(1, 1, 7), bool] */;
    %1018 = cast(%var_6824, dtype="uint64") /* ty=Tensor[(21), uint64] */;
    %1019 = cast(meta[relay.Constant][82] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1020 = reshape(%1018, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
    %1021 = reshape(%1019, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1022 = @func_3430(%1020, %1021) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
    %1023 = cast(%var_6838, dtype="int8") /* ty=Tensor[(252), int8] */;
    %1024 = cast(%var_6838, dtype="int8") /* ty=Tensor[(252), int8] */;
    %1025 = reshape(%1023, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
    %1026 = reshape(%1024, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), int8] */;
    %1027 = @func_1325(%1025, %1026) /* ty=(Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) */;
    %1028 = cast(meta[relay.Constant][83] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
    %1029 = cast(meta[relay.Constant][82] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1030 = reshape(%1028, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
    %1031 = reshape(%1029, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1032 = @func_627(%1030, %1031) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
    %1033 = less_equal(%1016, %1017) /* ty=Tensor[(1, 1, 7), bool] */;
    %1034 = %1022.3;
    %1035 = %1027.0;
    %1036 = %1032.2;
    (%1033, %1034, %var_6824, meta[relay.Constant][82] /* ty=Tensor[(448), float64] */, %1035, %var_6838, %1036, meta[relay.Constant][83] /* ty=Tensor[(588), float32] */)
  };
  %1037(%var_6845, %var_6846, %var_6847, %var_6848) /* ty=(Tensor[(1, 1, 7), bool], Tensor[(132), float32], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(4, 7, 9), bool], Tensor[(252), int8], Tensor[(448), float64], Tensor[(588), float32]) */
}

def @func_15362() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  %1038 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1039 = cast(meta[relay.Constant][84] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %1040 = cast(meta[relay.Constant][84] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %1041 = reshape(%1039, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %1042 = reshape(%1040, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
  %1043 = %1038.0;
  %1044 = @func_12200(%1041, %1042) /* ty=Tensor[(15, 11, 2), uint8] */;
  (%1043, %1044, meta[relay.Constant][84] /* ty=Tensor[(330), uint8] */)
}

def @func_15364() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) {
  @func_15362() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */
}

def @func_17843() -> (Tensor[(13, 1, 11), float64],) {
  %1045 = @func_14705() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_17422() -> (Tensor[(15, 11, 2), uint8],) {
  @func_17420() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_15289(%var_15287: Tensor[(504), uint16], %var_15288: Tensor[(1573), float64]) -> (Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) {
  %1065 = fn (%var_15234: Tensor[(504), uint16], %var_15269: Tensor[(1573), float64]) -> (Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) {
    %1047 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
    %1048 = cast(%var_15234, dtype="uint16") /* ty=Tensor[(504), uint16] */;
    %1049 = reshape(%1048, newshape=[504]) /* ty=Tensor[(504), uint16] */;
    %1050 = @func_6107(%1049) /* ty=(Tensor[(9, 4, 8), float32], Tensor[(7, 8, 9), float32], Tensor[(504), uint16]) */;
    %1051 = cast(meta[relay.Constant][85] /* ty=Tensor[(1573), float64] */, dtype="float64") /* ty=Tensor[(1573), float64] */;
    %1052 = reshape(%1051, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
    %1053 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1054 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
    %1055 = cast(%var_15269, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %1056 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(1573), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1057 = cast(meta[relay.Constant][85] /* ty=Tensor[(1573), float64] */, dtype="float32") /* ty=Tensor[(1573), float32] */;
    %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1059 = %1047.2;
    %1060 = %1050.2;
    %1061 = @func_14308(%1052) /* ty=Tensor[(13, 11, 11), uint32] */;
    %1062 = %1053.0;
    %1063 = %1054.0;
    %1064 = subtract(%1057, %1058) /* ty=Tensor[(1573), float32] */;
    (%1059, %1060, %var_15234, %1061, %1062, %1063, %1064)
  };
  %1065(%var_15287, %var_15288) /* ty=(Tensor[(54), bool], Tensor[(504), uint16], Tensor[(504), uint16], Tensor[(13, 11, 11), uint32], Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(1573), float32]) */
}

def @func_17024() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  %1066 = @func_16874() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %1067 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  %1068 = %1066.0;
  (%1067, %1068)
}

def @func_17026() -> (Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) {
  @func_17024() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8]) */
}

def @func_1761(%var_1759: Tensor[(11, 2, 6), float32]) -> Tensor[(11, 2, 6), float32] {
  @func_1758(%var_1759) /* ty=Tensor[(11, 2, 6), float32] */
}

def @func_18959() -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8]) {
  @func_18957() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(330), uint8]) */
}

def @func_18025() -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), uint8]) {
  %1073 = fn () -> (Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), uint8]) {
    %1069 = @func_17534() /* ty=(Tensor[(13, ?, 11), uint8],) */;
    %1070 = @func_17534() /* ty=(Tensor[(13, ?, 11), uint8],) */;
    %1071 = %1069.0;
    %1072 = %1070.0;
    (%1071, %1072)
  };
  %1073() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(13, ?, 11), uint8]) */
}

def @func_15381() -> Tensor[(1, 9, 6), bool] {
  %1074 = @func_14610() /* ty=(Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool], Tensor[(54), bool]) */;
  %1074.1
}

def @func_16455(%var_16451: Tensor[(90), uint8], %var_16452: Tensor[(1260), uint8], %var_16453: Tensor[(630), int64], %var_16454: Tensor[(2048), uint64]) -> (Tensor[(90), uint8], Tensor[(1260), uint8], Tensor[(13, 90, 11), bool], Tensor[(13, 90, 11), uint64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(13, ?, 11), bool], Tensor[(80), uint32], Tensor[(2048), uint64]) {
  @func_16449(%var_16451, %var_16452, %var_16453, %var_16454) /* ty=(Tensor[(90), uint8], Tensor[(1260), uint8], Tensor[(13, 90, 11), bool], Tensor[(13, 90, 11), uint64], Tensor[(3, 14, 15), int64], Tensor[(630), int64], Tensor[(13, ?, 11), bool], Tensor[(80), uint32], Tensor[(2048), uint64]) */
}

def @func_12203(%var_12201: Tensor[(15, 11, 2), uint8], %var_12202: Tensor[(15, 11, 2), uint8]) -> Tensor[(15, 11, 2), uint8] {
  %1079 = fn (%var_12168: Tensor[(15, 11, 2), uint8], %var_12169: Tensor[(15, 11, 2), uint8]) -> Tensor[(15, 11, 2), uint8] {
    %1075 = cast(%var_12169, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
    %1076 = shape_of(%var_12168, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1077 = cast(%var_12168, dtype="uint8") /* ty=Tensor[(15, 11, 2), uint8] */;
    %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    maximum(%1077, %1078) /* ty=Tensor[(15, 11, 2), uint8] */
  };
  %1079(%var_12201, %var_12202) /* ty=Tensor[(15, 11, 2), uint8] */
}

def @func_15383() -> Tensor[(1, 9, 6), bool] {
  @func_15381() /* ty=Tensor[(1, 9, 6), bool] */
}

def @func_1758(%var_1744: Tensor[(11, 2, 6), float32]) -> Tensor[(11, 2, 6), float32] {
  %1080 = cast(%var_1744, dtype="float32") /* ty=Tensor[(11, 2, 6), float32] */;
  asinh(%1080) /* ty=Tensor[(11, 2, 6), float32] */
}

def @func_20188() -> (Tensor[(13, 1, 11), float64],) {
  @func_20186() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_17508() -> Tensor[(13, 1, 11), float64] {
  %1081 = fn () -> Tensor[(13, 1, 11), float64] {
    @func_16116() /* ty=Tensor[(13, 1, 11), float64] */
  };
  %1081() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_18007() -> (Tensor[(15, 11, 2), uint8],) {
  %1082 = @func_17756() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_18466() -> (Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8]) {
  %1084 = @func_15787() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %1085 = @func_17652() /* ty=Tensor[(13, 1, 11), float64] */;
  %1086 = %1084.0;
  (%1085, %1086)
}

def @func_1325(%var_1292: Tensor[(4, 7, 9), int8], %var_1293: Tensor[(4, 7, 9), int8]) -> (Tensor[(4, 7, 9), bool], Tensor[(4, 7, 9), float32]) {
  %1087 = cast(%var_1293, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %1088 = shape_of(%var_1292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(%var_1292, dtype="bool") /* ty=Tensor[(4, 7, 9), bool] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1091 = cast(%var_1293, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %1092 = greater_equal(%1089, %1090) /* ty=Tensor[(4, 7, 9), bool] */;
  %1093 = sigmoid(%1091) /* ty=Tensor[(4, 7, 9), float32] */;
  (%1092, %1093)
}

def @func_16806() -> Tensor[(15, 11, 2), uint8] {
  %1095 = fn () -> Tensor[(15, 11, 2), uint8] {
    %1094 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
    %1094.0
  };
  %1095() /* ty=Tensor[(15, 11, 2), uint8] */
}

def @func_18886(%var_18872: Tensor[(13, 13, 11), float64], %var_18878: Tensor[(132), float32]) -> (Tensor[(13, 13, 11), bool], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) {
  %1096 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
  %1097 = cast(%1096, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
  %1098 = cast(%var_18872, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %1099 = cast(%var_18878, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1100 = reshape(%1099, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), float32] */;
  %1101 = greater(%1097, %1098) /* ty=Tensor[(13, 13, 11), bool] */;
  %1102 = @func_1758(%1100) /* ty=Tensor[(11, 2, 6), float32] */;
  (%1101, %1102, %var_18878)
}

def @func_14115() -> Tensor[(13, 1, 11), float64] {
  %1103 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1103.0
}

def @func_20186() -> (Tensor[(13, 1, 11), float64],) {
  %1104 = @func_17507() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1104,)
}

def @func_16578() -> (Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) {
  %1114 = fn () -> (Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) {
    %1105 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
    %1106 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
    %1107 = cast(%1106, dtype="float32") /* ty=Tensor[(13, 1, 11), float32] */;
    %1108 = @func_15787() /* ty=(Tensor[(13, ?, 11), uint8],) */;
    %1109 = %1105.2;
    %1110 = exp(%1107) /* ty=Tensor[(13, 1, 11), float32] */;
    %1111 = @func_14838() /* ty=Tensor[(13, 1, 11), float64] */;
    %1112 = %1108.0;
    %1113 = @func_15381() /* ty=Tensor[(1, 9, 6), bool] */;
    (%1109, %1110, %1111, %1112, %1113)
  };
  %1114() /* ty=(Tensor[(15, 11, 2), int64], Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float64], Tensor[(13, ?, 11), uint8], Tensor[(1, 9, 6), bool]) */
}

def @func_14036(%var_14034: Tensor[(630), int64], %var_14035: Tensor[(21), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) {
  %1131 = fn (%var_14017: Tensor[(630), int64], %var_14025: Tensor[(21), uint64]) -> (Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) {
    %1115 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1116 = cast(%var_14017, dtype="int64") /* ty=Tensor[(630), int64] */;
    %1117 = cast(%var_14017, dtype="int64") /* ty=Tensor[(630), int64] */;
    %1118 = reshape(%1116, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
    %1119 = reshape(%1117, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int64] */;
    %1120 = @func_12965(%1118, %1119) /* ty=(Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) */;
    %1121 = cast(%var_14025, dtype="uint64") /* ty=Tensor[(21), uint64] */;
    %1122 = cast(meta[relay.Constant][86] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %1123 = %1120.2;
    %1124 = cast(%1123, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1125 = reshape(%1121, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
    %1126 = reshape(%1122, newshape=[132]) /* ty=Tensor[(132), float32] */;
    %1127 = reshape(%1124, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1128 = @func_2914(%1125, %1126, %1127) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
    %1129 = %1115.0;
    %1130 = %1128.6;
    (%1129, %1123, %var_14017, %1130, %var_14025, meta[relay.Constant][86] /* ty=Tensor[(132), float32] */)
  };
  %1131(%var_14034, %var_14035) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(448), float64], Tensor[(630), int64], Tensor[(80), uint32], Tensor[(21), uint64], Tensor[(132), float32]) */
}

def @func_17535() -> (Tensor[(13, ?, 11), uint8],) {
  %1134 = fn () -> (Tensor[(13, ?, 11), uint8],) {
    %1132 = @func_16221() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), uint8], Tensor[(15, 11, 2), int64], Tensor[(15, 11, 2), uint8]) */;
    %1133 = %1132.1;
    (%1133,)
  };
  %1134() /* ty=(Tensor[(13, ?, 11), uint8],) */
}

def @func_16625() -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) {
  %1145 = fn () -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) {
    %1135 = @func_16013() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1136 = @func_16134() /* ty=(Tensor[(330), uint8],) */;
    %1137 = cast(meta[relay.Constant][87] /* ty=Tensor[(3, 630), float64] */, dtype="float64") /* ty=Tensor[(3, 630), float64] */;
    %1138 = cast(meta[relay.Constant][88] /* ty=Tensor[(4, 20), uint32] */, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
    %1139 = reshape(%1137, newshape=[9, 15, 14]) /* ty=Tensor[(9, 15, 14), float64] */;
    %1140 = reshape(%1138, newshape=[80]) /* ty=Tensor[(80), uint32] */;
    %1141 = @func_936(%1139, %1140) /* ty=(Tensor[(7, 8, 9), uint16], Tensor[(504), uint16], Tensor[(2, 14, 16), float64], Tensor[(80), uint32], Tensor[(7, 8, 9), uint16], Tensor[(9, 15, 14), float64]) */;
    %1142 = %1135.0;
    %1143 = %1136.0;
    %1144 = %1141.3;
    (%1142, %1143, %1144, meta[relay.Constant][87] /* ty=Tensor[(3, 630), float64] */, meta[relay.Constant][88] /* ty=Tensor[(4, 20), uint32] */)
  };
  %1145() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(3, 630), float64], Tensor[(4, 20), uint32]) */
}

def @func_17985() -> (Tensor[(13, ?, 11), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) {
  %1146 = @func_14784() /* ty=(Tensor[(13, ?, 11), uint8],) */;
  %1147 = cast(meta[relay.Constant][89] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1148 = reshape(%1147, newshape=[6, 9, 10]) /* ty=Tensor[(6, 9, 10), float64] */;
  %1149 = %1146.0;
  %1150 = @func_13099(%1148) /* ty=Tensor[(6, 9, 10), float64] */;
  (%1149, %1150, meta[relay.Constant][89] /* ty=Tensor[(540), float64] */)
}

def @func_6534(%var_6486: Tensor[(15, 10, 5), float32], %var_6502: Tensor[(15, 10, 5), float32], %var_6530: Tensor[(588), float32], %var_6531: Tensor[(448), float64]) -> (Tensor[(15, 10, 5), float64], Tensor[(448), float64], Tensor[(210), float32], Tensor[(588), float32], Tensor[(448), float64]) {
  %1151 = cast(%var_6486, dtype="float32") /* ty=Tensor[(15, 10, 5), float32] */;
  %1152 = acosh(%1151) /* ty=Tensor[(15, 10, 5), float32] */;
  %1153 = cast(%var_6502, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %1154 = shape_of(%1152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1155 = cast(%1152, dtype="float64") /* ty=Tensor[(15, 10, 5), float64] */;
  %1156 = dyn.reshape(%1153, %1154, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1157 = cast(meta[relay.Constant][90] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %1158 = cast(%var_6530, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1159 = cast(%var_6531, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1160 = reshape(%1157, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float32] */;
  %1161 = reshape(%1158, newshape=[588]) /* ty=Tensor[(588), float32] */;
  %1162 = reshape(%1159, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1163 = @func_3294(%1160, %1161, %1162) /* ty=(Tensor[(3, 10, 7), float32], Tensor[(2, 14, 16), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(11, 2, 6), float32], Tensor[(132), float32]) */;
  %1164 = floor_mod(%1155, %1156) /* ty=Tensor[(15, 10, 5), float64] */;
  %1165 = %1163.3;
  (%1164, %1165, meta[relay.Constant][90] /* ty=Tensor[(210), float32] */, %var_6530, %var_6531)
}

def @func_16350() -> (Tensor[(13, ?, 11), bool],) {
  @func_16348() /* ty=(Tensor[(13, ?, 11), bool],) */
}

def @func_11443(%var_11442: Tensor[(15, 3, 14), float32]) -> (Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) {
  %1175 = fn (%var_11417: Tensor[(15, 3, 14), float32]) -> (Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) {
    %1166 = cast(meta[relay.Constant][91] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
    %1167 = cast(meta[relay.Constant][91] /* ty=Tensor[(1792), uint64] */, dtype="uint64") /* ty=Tensor[(1792), uint64] */;
    %1168 = reshape(%1166, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
    %1169 = reshape(%1167, newshape=[7, 16, 16]) /* ty=Tensor[(7, 16, 16), uint64] */;
    %1170 = cast(%var_11417, dtype="float32") /* ty=Tensor[(15, 3, 14), float32] */;
    %1171 = atan(%1170) /* ty=Tensor[(15, 3, 14), float32] */;
    %1172 = cast(%1171, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
    %1173 = @func_717(%1168, %1169) /* ty=Tensor[(7, 16, 16), bool] */;
    %1174 = tan(%1172) /* ty=Tensor[(15, 3, 14), float64] */;
    (%1173, meta[relay.Constant][91] /* ty=Tensor[(1792), uint64] */, %1174)
  };
  %1175(%var_11442) /* ty=(Tensor[(7, 16, 16), bool], Tensor[(1792), uint64], Tensor[(15, 3, 14), float64]) */
}

def @func_12969(%var_12967: Tensor[(3, 14, 15), int64], %var_12968: Tensor[(3, 14, 15), int64]) -> (Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) {
  @func_12965(%var_12967, %var_12968) /* ty=(Tensor[(3, 14, 15), int64], Tensor[(15, 3, 7), float32], Tensor[(448), float64], Tensor[(132, 21), float32]) */
}

def @func_14127() -> (Tensor[(13, 1, 11), float64],) {
  %1177 = fn () -> (Tensor[(13, 1, 11), float64],) {
    %1176 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_20271() -> Tensor[(330), uint8] {
  %1178 = @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */;
  %1178.0
}

def @func_17718(%var_17716: Tensor[(98, 6), float32], %var_17717: Tensor[(1, 448), float64]) -> (Tensor[(540), float64], Tensor[(98, 6), float32], Tensor[(?, 448), float64]) {
  %1192 = fn (%var_17707: Tensor[(98, 6), float32], %var_17708: Tensor[(1, 448), float64]) -> (Tensor[(540), float64], Tensor[(98, 6), float32], Tensor[(?, 448), float64]) {
    %1179 = @func_15331() /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(6, 9, 10), float64], Tensor[(540), float64]) */;
    %1180 = cast(%var_17707, dtype="float32") /* ty=Tensor[(98, 6), float32] */;
    %1181 = cast(%var_17708, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
    %1182 = reshape(%1180, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
    %1183 = reshape(%1181, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1184 = @func_627(%1182, %1183) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
    %1185 = %1184.1;
    %1186 = cast(%1185, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %1187 = shape_of(%var_17708, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1188 = cast(%var_17708, dtype="float64") /* ty=Tensor[(1, 448), float64] */;
    %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1190 = %1179.2;
    %1191 = divide(%1188, %1189) /* ty=Tensor[(?, 448), float64] */;
    (%1190, %var_17707, %1191)
  };
  %1192(%var_17716, %var_17717) /* ty=(Tensor[(540), float64], Tensor[(98, 6), float32], Tensor[(?, 448), float64]) */
}

def @func_18009() -> (Tensor[(15, 11, 2), uint8],) {
  @func_18007() /* ty=(Tensor[(15, 11, 2), uint8],) */
}

def @func_15002(%var_14982: Tensor[(468), float64], %var_14983: Tensor[(1890), float64], %var_14992: Tensor[(1573), float64]) -> (Tensor[(330), uint8], Tensor[(7, 84), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(588), float32], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64]) {
  %1193 = @func_13614() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
  %1194 = cast(%var_14982, dtype="float64") /* ty=Tensor[(468), float64] */;
  %1195 = cast(%var_14983, dtype="float64") /* ty=Tensor[(1890), float64] */;
  %1196 = cast(meta[relay.Constant][92] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1197 = cast(meta[relay.Constant][93] /* ty=Tensor[(588), float32] */, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1198 = reshape(%1194, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %1199 = reshape(%1195, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
  %1200 = reshape(%1196, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %1201 = reshape(%1197, newshape=[7, 84]) /* ty=Tensor[(7, 84), float32] */;
  %1202 = @func_14746(%1198, %1199, %1200, %1201) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(468), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(210), float32], Tensor[(7, 84), float32]) */;
  %1203 = cast(%var_14992, dtype="float64") /* ty=Tensor[(1573), float64] */;
  %1204 = reshape(%1203, newshape=[13, 11, 11]) /* ty=Tensor[(13, 11, 11), float64] */;
  %1205 = %1193.2;
  %1206 = %1202.6;
  %1207 = @func_14308(%1204) /* ty=Tensor[(13, 11, 11), uint32] */;
  (%1205, %1206, %var_14982, %var_14983, meta[relay.Constant][92] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][93] /* ty=Tensor[(588), float32] */, %1207, %var_14992)
}

def @func_19333(%var_19331: Tensor[(1890), float64]) -> (Tensor[(15, 11, 2), int64], Tensor[(2, 40), uint32], Tensor[(1890), float64]) {
  @func_19330(%var_19331) /* ty=(Tensor[(15, 11, 2), int64], Tensor[(2, 40), uint32], Tensor[(1890), float64]) */
}

def @func_17903(%var_17889: int16, %var_17890: Tensor[(2, 1, 15), int16], %var_17898: Tensor[(21), uint64]) -> (Tensor[(2, 1, 15), int16], Tensor[(13, 1, 11), float32], Tensor[(8, 5, 2), uint16], Tensor[(21), uint64], Tensor[(132), float32], Tensor[(448), float64]) {
  %1208 = cast(%var_17889, dtype="int16") /* ty=int16 */;
  %1209 = cast(%var_17890, dtype="int16") /* ty=Tensor[(2, 1, 15), int16] */;
  %1210 = @func_17103() /* ty=(Tensor[(13, 1, 11), float32], Tensor[(13, 1, 11), float32], Tensor[(13, ?, 11), bool]) */;
  %1211 = cast(%var_17898, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %1212 = cast(meta[relay.Constant][94] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1213 = cast(meta[relay.Constant][95] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1214 = reshape(%1211, newshape=[1, 3, 7]) /* ty=Tensor[(1, 3, 7), uint64] */;
  %1215 = reshape(%1212, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %1216 = reshape(%1213, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1217 = @func_2914(%1214, %1215, %1216) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */;
  %1218 = bitwise_and(%1208, %1209) /* ty=Tensor[(2, 1, 15), int16] */;
  %1219 = %1210.0;
  %1220 = %1217.5;
  (%1218, %1219, %1220, %var_17898, meta[relay.Constant][94] /* ty=Tensor[(132), float32] */, meta[relay.Constant][95] /* ty=Tensor[(448), float64] */)
}

def @func_20216() -> Tensor[(13, 6, 11), uint16] {
  %1221 = @func_18094() /* ty=(Tensor[(13, 6, 11), uint16],) */;
  %1221.0
}

def @func_18957() -> (Tensor[(13, 1, 11), float64], Tensor[(330), uint8]) {
  %1222 = @func_17843() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1223 = @func_16497() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) */;
  %1224 = %1222.0;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_17333(%var_17331: float64) -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 13), float64], float64, Tensor[(630), int64], Tensor[(630, 1), int64], Tensor[(21), uint64]) {
  @func_17330(%var_17331) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(13, 1, 13), float64], float64, Tensor[(630), int64], Tensor[(630, 1), int64], Tensor[(21), uint64]) */
}

def @main(%var_20509: Tensor[(21), uint64], %var_20510: Tensor[(448), float64], %var_20536: Tensor[(504), uint16], %var_20537: Tensor[(192), bool]) -> (Tensor[(13, 1, 11), float64], Tensor[(15, 2, 2), float64], Tensor[(21), uint64], Tensor[(448), float64], Tensor[(630), float32], Tensor[(504), uint16], Tensor[(192), bool], Tensor[(13, 11, 11), float32]) {
  %1226 = @func_14706() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1227 = cast(%var_20509, dtype="uint64") /* ty=Tensor[(21), uint64] */;
  %1228 = cast(%var_20510, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1229 = reshape(%1227, newshape=[7, 3]) /* ty=Tensor[(7, 3), uint64] */;
  %1230 = reshape(%1228, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1231 = @func_3433(%1229, %1230) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(11, 2, 6), float32], Tensor[(7, 3), uint64], Tensor[(132), float32], Tensor[(448), float64]) */;
  %1232 = cast(meta[relay.Constant][96] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1233 = cast(%var_20536, dtype="uint16") /* ty=Tensor[(504), uint16] */;
  %1234 = cast(%var_20537, dtype="bool") /* ty=Tensor[(192), bool] */;
  %1235 = reshape(%1232, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1236 = reshape(%1233, newshape=[12, 42]) /* ty=Tensor[(12, 42), uint16] */;
  %1237 = reshape(%1234, newshape=[192]) /* ty=Tensor[(192), bool] */;
  %1238 = @func_14545(%1235, %1236, %1237) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) */;
  %1239 = %1238.10;
  %1240 = cast(%1239, dtype="float32") /* ty=Tensor[(13, 11, 11), float32] */;
  %1241 = %1226.0;
  %1242 = %1231.0;
  %1243 = rsqrt(%1240) /* ty=Tensor[(13, 11, 11), float32] */;
  (%1241, %1242, %var_20509, %var_20510, meta[relay.Constant][96] /* ty=Tensor[(630), float32] */, %var_20536, %var_20537, %1243)
}

def @func_19392() -> Tensor[(13, 6, 11), uint16] {
  @func_19390() /* ty=Tensor[(13, 6, 11), uint16] */
}

def @func_19987() -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
  %1244 = @func_14126() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1245 = @func_19345() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1246 = %1244.0;
  %1247 = %1245.0;
  %1248 = @func_17734() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1246, %1247, %1248)
}

def @func_18559() -> Tensor[(330), uint8] {
  %1250 = fn () -> Tensor[(330), uint8] {
    %1249 = @func_16497() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float32]) */;
    %1249.0
  };
  %1250() /* ty=Tensor[(330), uint8] */
}

def @func_18592() -> Tensor[(15, 11, 2), uint8] {
  @func_18590() /* ty=Tensor[(15, 11, 2), uint8] */
}

def @func_13926() -> Tensor[(13, 1, 11), float64] {
  %1251 = fn () -> Tensor[(13, 1, 11), float64] {
    @func_13253() /* ty=Tensor[(13, 1, 11), float64] */
  };
  %1251() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_19989() -> (Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) {
  @func_19987() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float64]) */
}

def @func_17736() -> Tensor[(13, 1, 11), float64] {
  @func_17734() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_14972(%var_14969: Tensor[(1120), float32], %var_14970: Tensor[(588), float32], %var_14971: Tensor[(448), float64]) -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) {
  @func_14967(%var_14969, %var_14970, %var_14971) /* ty=(Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) */
}

def @func_16116() -> Tensor[(13, 1, 11), float64] {
  %1252 = @func_15631() /* ty=(Tensor[(13, 1, 11), float64],) */;
  %1252.0
}

def @func_8048(%var_8046: int64, %var_8047: Tensor[(1, 4, 16), int64]) -> (Tensor[(1, 4, 16), int64],) {
  %1256 = fn (%var_8038: int64, %var_8039: Tensor[(1, 4, 16), int64]) -> (Tensor[(1, 4, 16), int64],) {
    %1253 = cast(%var_8038, dtype="int64") /* ty=int64 */;
    %1254 = cast(%var_8039, dtype="int64") /* ty=Tensor[(1, 4, 16), int64] */;
    %1255 = maximum(%1253, %1254) /* ty=Tensor[(1, 4, 16), int64] */;
    (%1255,)
  };
  %1256(%var_8046, %var_8047) /* ty=(Tensor[(1, 4, 16), int64],) */
}

def @func_14545(%var_14542: Tensor[(630), float32], %var_14543: Tensor[(12, 42), uint16], %var_14544: Tensor[(192), bool]) -> (Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) {
  @func_14540(%var_14542, %var_14543, %var_14544) /* ty=(Tensor[(13, 1, 11), float64], Tensor[(1792), uint64], Tensor[(630), float32], Tensor[(7, 8, 9), float32], Tensor[(13, 1, 11), float64], Tensor[(588), float32], Tensor[(750), float32], Tensor[(588), float32], Tensor[(224, 2), float64], Tensor[(12, 42), float64], Tensor[(13, 11, 11), uint32], Tensor[(1573), float64], Tensor[(21), uint64], Tensor[(192), bool]) */
}

def @func_16135() -> (Tensor[(330), uint8],) {
  %1259 = fn () -> (Tensor[(330), uint8],) {
    %1257 = @func_15362() /* ty=(Tensor[(13, 1, 11), float64], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8]) */;
    %1258 = %1257.2;
    (%1258,)
  };
  %1259() /* ty=(Tensor[(330), uint8],) */
}

def @func_20273() -> Tensor[(330), uint8] {
  @func_20271() /* ty=Tensor[(330), uint8] */
}

def @func_15199(%var_15197: Tensor[(40, 2), uint32], %var_15198: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
  %1279 = fn (%var_15186: Tensor[(40, 2), uint32], %var_15192: Tensor[(2048), uint64]) -> (Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) {
    %1260 = @func_15032() /* ty=(Tensor[(13, ?, 11), bool],) */;
    %1261 = cast(meta[relay.Constant][97] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %1262 = cast(meta[relay.Constant][97] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %1263 = reshape(%1261, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %1264 = reshape(%1262, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), uint8] */;
    %1265 = cast(meta[relay.Constant][98] /* ty=Tensor[(1890, 1), float64] */, dtype="float64") /* ty=Tensor[(1890, 1), float64] */;
    %1266 = cast(%var_15186, dtype="uint32") /* ty=Tensor[(40, 2), uint32] */;
    %1267 = reshape(%1265, newshape=[1890]) /* ty=Tensor[(1890), float64] */;
    %1268 = reshape(%1266, newshape=[80]) /* ty=Tensor[(80), uint32] */;
    %1269 = @func_5495(%1267, %1268) /* ty=(Tensor[(8, 4, 7), float64], Tensor[(2, 14, 16), float64], Tensor[(1890), float64], Tensor[(80), uint32], Tensor[(448), float64]) */;
    %1270 = cast(%var_15192, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
    %1271 = cast(%var_15192, dtype="uint64") /* ty=Tensor[(2048), uint64] */;
    %1272 = reshape(%1270, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
    %1273 = reshape(%1271, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), uint64] */;
    %1274 = @func_6394(%1272, %1273) /* ty=(Tensor[(8, 16, 16), uint64], Tensor[(8, 16, 16), int32]) */;
    %1275 = %1260.0;
    %1276 = @func_12200(%1263, %1264) /* ty=Tensor[(15, 11, 2), uint8] */;
    %1277 = %1269.3;
    %1278 = %1274.0;
    (%1275, %1276, meta[relay.Constant][97] /* ty=Tensor[(330), uint8] */, %1277, meta[relay.Constant][98] /* ty=Tensor[(1890, 1), float64] */, %var_15186, %1278, %var_15192)
  };
  %1279(%var_15197, %var_15198) /* ty=(Tensor[(13, ?, 11), bool], Tensor[(15, 11, 2), uint8], Tensor[(330), uint8], Tensor[(80), uint32], Tensor[(1890, 1), float64], Tensor[(40, 2), uint32], Tensor[(8, 16, 16), uint64], Tensor[(2048), uint64]) */
}

def @func_15632() -> (Tensor[(13, 1, 11), float64],) {
  %1284 = fn () -> (Tensor[(13, 1, 11), float64],) {
    %1280 = @func_13635() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1281 = %1280.0;
    %1282 = cast(%1281, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
    %1283 = acos(%1282) /* ty=Tensor[(13, 1, 11), float64] */;
    (%1283,)
  };
  %1284() /* ty=(Tensor[(13, 1, 11), float64],) */
}

def @func_14967(%var_14907: Tensor[(1120), float32], %var_14920: Tensor[(588), float32], %var_14921: Tensor[(448), float64]) -> (Tensor[(15, 11, 2), uint8], Tensor[(13, ?, 11), bool], Tensor[(16, 7, 10), float32], Tensor[(1120), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64]) {
  %1285 = @func_13865() /* ty=(Tensor[(15, 11, 2), uint8],) */;
  %1286 = cast(%var_14907, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1287 = reshape(%1286, newshape=[16, 7, 10]) /* ty=Tensor[(16, 7, 10), float32] */;
  %1288 = @func_13650(%1287) /* ty=(Tensor[(16, 7, 10), float32],) */;
  %1289 = cast(%var_14920, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1290 = cast(%var_14921, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1291 = reshape(%1289, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), float32] */;
  %1292 = reshape(%1290, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %1293 = @func_627(%1291, %1292) /* ty=(Tensor[(7, 7, 12), float32], Tensor[(2, 14, 16), float64], Tensor[(448), float64]) */;
  %1294 = %1285.0;
  %1295 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  %1296 = %1288.0;
  %1297 = %1293.2;
  (%1294, %1295, %1296, %var_14907, %1297, %var_14920, %var_14921)
}

def @func_17070() -> (Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) {
  @func_17068() /* ty=(Tensor[(330), uint8], Tensor[(13, 1, 11), float64], Tensor[(13, 1, 11), float32]) */
}

def @func_2919(%var_2916: Tensor[(1, 3, 7), uint64], %var_2917: Tensor[(132), float32], %var_2918: Tensor[(448), float64]) -> (Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) {
  @func_2914(%var_2916, %var_2917, %var_2918) /* ty=(Tensor[(11, 2, 6), float32], Tensor[(132), float32], Tensor[(448), float64], Tensor[(588), float32], Tensor[(448), float64], Tensor[(8, 5, 2), uint16], Tensor[(80), uint32], Tensor[(11, 2, 6), float32], Tensor[(15, 3, 7), float32]) */
}

def @func_16838() -> (Tensor[(13, 1, 11), float64],) {
  %1298 = @func_14115() /* ty=Tensor[(13, 1, 11), float64] */;
  (%1298,)
}

def @func_14168() -> Tensor[(13, ?, 11), bool] {
  @func_14166() /* ty=Tensor[(13, ?, 11), bool] */
}

def @func_16348() -> (Tensor[(13, ?, 11), bool],) {
  %1299 = @func_14166() /* ty=Tensor[(13, ?, 11), bool] */;
  (%1299,)
}

def @func_14839() -> Tensor[(13, 1, 11), float64] {
  %1301 = fn () -> Tensor[(13, 1, 11), float64] {
    %1300 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1300.0
  };
  %1301() /* ty=Tensor[(13, 1, 11), float64] */
}

def @func_17400(%var_17399: Tensor[(448, 1), float64]) -> (Tensor[(1260), uint8], Tensor[(3, 18), bool], Tensor[(13, 1, 11), float64], Tensor[(448, 6), bool], Tensor[(13, 60, 11), bool]) {
  %1319 = fn (%var_17357: Tensor[(448, 1), float64]) -> (Tensor[(1260), uint8], Tensor[(3, 18), bool], Tensor[(13, 1, 11), float64], Tensor[(448, 6), bool], Tensor[(13, 60, 11), bool]) {
    %1302 = cast(meta[relay.Constant][99] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
    %1303 = cast(meta[relay.Constant][100] /* ty=Tensor[(3, 18), bool] */, dtype="bool") /* ty=Tensor[(3, 18), bool] */;
    %1304 = cast(%var_17357, dtype="float64") /* ty=Tensor[(448, 1), float64] */;
    %1305 = reshape(%1302, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %1306 = reshape(%1303, newshape=[54]) /* ty=Tensor[(54), bool] */;
    %1307 = reshape(%1304, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %1308 = @func_17188(%1305, %1306, %1307) /* ty=(Tensor[(10, ?, 6), uint64], Tensor[(60), float64], Tensor[(1260), uint8], Tensor[(54), int32], Tensor[(16, 11, 12), float64], Tensor[(2112), float32], Tensor[(210), float32], Tensor[(1, 588), float32], Tensor[(448), float64]) */;
    %1309 = @func_14811() /* ty=(Tensor[(13, 1, 11), float64],) */;
    %1310 = cast(%var_17357, dtype="bool") /* ty=Tensor[(448, 1), bool] */;
    %1311 = cast(meta[relay.Constant][101] /* ty=Tensor[(448, 6), float64] */, dtype="bool") /* ty=Tensor[(448, 6), bool] */;
    %1312 = @func_13925() /* ty=Tensor[(13, 1, 11), float64] */;
    %1313 = cast(%1312, dtype="bool") /* ty=Tensor[(13, 1, 11), bool] */;
    %1314 = cast(meta[relay.Constant][99] /* ty=Tensor[(60, 1), float64] */, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
    %1315 = %1308.2;
    %1316 = %1309.0;
    %1317 = greater(%1310, %1311) /* ty=Tensor[(448, 6), bool] */;
    %1318 = logical_and(%1313, %1314) /* ty=Tensor[(13, 60, 11), bool] */;
    (%1315, meta[relay.Constant][100] /* ty=Tensor[(3, 18), bool] */, %1316, %1317, %1318)
  };
  %1319(%var_17399) /* ty=(Tensor[(1260), uint8], Tensor[(3, 18), bool], Tensor[(13, 1, 11), float64], Tensor[(448, 6), bool], Tensor[(13, 60, 11), bool]) */
}

def @func_17654() -> Tensor[(13, 1, 11), float64] {
  @func_17652() /* ty=Tensor[(13, 1, 11), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen949/build/output.py", line 3284, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:56:58] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_102 = relay.var("var_102", dtype = "float32", shape = (5, 12, 13))#candidate|102|(5, 12, 13)|var|float32
uop_103 = relay.asinh(var_102.astype('float32')) # shape=(5, 12, 13)
output = relay.Tuple([uop_103,])
output2 = relay.Tuple([uop_103,])
func_109 = relay.Function([var_102,], output)
mod['func_109'] = func_109
mod = relay.transform.InferType()(mod)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_110 = relay.var("var_110", dtype = "float32", shape = (5, 12, 13))#candidate|110|(5, 12, 13)|var|float32
func_109_call = mutated_mod.get_global_var('func_109')
call_111 = func_109_call(var_110)
output = call_111
func_112 = relay.Function([var_110], output)
mutated_mod['func_112'] = func_112
mutated_mod = relay.transform.InferType()(mutated_mod)
const_253 = relay.const([[[4.375229,-0.423954],[-9.357413,-7.611546],[-1.072676,-1.761374],[3.700683,-6.092246],[2.393764,-0.766736],[2.956413,1.495981],[4.719661,4.827147],[-2.807164,6.660052],[3.714105,-5.840393],[-4.672105,-0.225599],[5.113091,-6.103221],[1.744150,-7.368008],[5.748647,-4.333001],[4.804198,8.552901],[3.019248,-1.028558],[6.474832,3.311219]],[[-1.233619,-5.084963],[-6.150925,6.941122],[9.028903,0.322794],[-0.098020,-4.653142],[-1.043605,-1.904314],[-6.927914,-4.844068],[-4.552178,2.648900],[1.260977,-5.738542],[-5.000450,-3.980531],[1.743174,-7.107319],[5.134101,-6.320335],[2.015755,-6.387843],[6.085821,4.030027],[-7.989154,-1.974572],[5.024086,-6.812597],[-4.456549,-5.114347]],[[-9.640672,-0.468545],[-6.693741,-6.748179],[-7.194918,1.468257],[4.650480,0.659463],[-7.254213,-5.955240],[-2.051036,9.978481],[-3.689468,-8.964750],[-6.584243,-1.661558],[-8.713683,3.394073],[3.873666,-6.672109],[-0.784710,-7.444199],[9.412151,-0.409758],[-1.725288,-4.918262],[2.783117,-0.918242],[-1.809477,9.647065],[8.313577,6.392859]],[[-8.931593,-6.408028],[-4.602943,8.623721],[-2.669352,4.019948],[7.391897,0.789420],[-4.508625,-0.440778],[2.367358,-8.180311],[-7.609848,0.102224],[4.034139,3.929859],[1.968699,4.740789],[-8.767529,-0.441101],[-6.351378,3.805494],[3.218981,-3.201979],[-7.697772,-4.376770],[0.284192,9.360691],[-1.827968,-5.922227],[2.475489,2.640559]],[[8.674018,7.678180],[5.730649,9.029868],[4.039618,1.943158],[1.467830,-3.692567],[-7.192940,-5.803691],[4.298605,7.870980],[-6.317483,5.557039],[4.626144,-7.974808],[-0.814754,2.686385],[1.583843,1.308397],[5.520227,5.873882],[-2.601775,-4.693352],[-2.220908,5.959415],[6.964585,8.310675],[-3.417396,0.884344],[9.106174,-4.693200]],[[5.588270,0.875288],[-8.264963,7.039309],[0.976909,9.533683],[1.842679,4.537398],[-2.402803,2.038014],[0.574133,0.591341],[-8.594726,-7.674623],[-1.732792,0.964931],[-3.320409,-2.231857],[9.504732,-7.965663],[-4.460928,1.315251],[5.640471,-5.116304],[3.302620,9.598459],[-1.248200,-7.824853],[-7.490619,5.203292],[6.718924,-4.432368]],[[9.030393,4.619033],[3.711881,-3.110405],[1.961346,7.474535],[-4.250321,-7.562781],[3.727567,-9.563754],[-1.807515,-5.201411],[0.686400,3.176674],[-5.198729,-9.041645],[-1.706681,2.736032],[1.891791,5.645066],[1.388644,-7.754489],[-3.994131,3.943597],[-8.092965,-0.994637],[-4.530467,2.320431],[-3.395464,-3.726511],[3.317933,-4.323183]],[[-6.325965,6.404330],[9.547453,-0.042354],[8.773176,-9.637050],[0.744274,4.022074],[-9.119397,-0.711276],[5.213439,-1.418456],[-2.468151,-4.846243],[-4.324380,4.196624],[-8.673113,-0.078006],[-8.283897,-7.366594],[2.312047,5.447710],[-8.732445,7.362904],[-6.980615,2.964868],[3.152086,3.496472],[3.397071,8.028249],[0.297653,-4.676083]],[[1.848437,4.856580],[-6.428752,1.846357],[2.594763,-6.328418],[-5.438911,-9.016483],[-7.403577,-5.996177],[0.701895,0.124779],[8.219663,-3.444429],[-6.099003,9.747734],[-4.735270,6.017625],[-2.580797,-8.050353],[0.182926,-8.921791],[-5.692639,8.920561],[-9.859850,7.166364],[0.341258,-2.327735],[0.859602,1.737169],[-3.609668,-7.219921]],[[-1.323734,5.310448],[-7.511491,-9.708692],[-9.388746,1.766945],[9.126263,7.128030],[-6.191230,1.480739],[-9.370906,1.037050],[5.283098,1.960202],[8.920544,-5.690099],[6.115615,-0.994144],[7.834444,2.776986],[7.600882,6.750977],[0.948686,2.094783],[4.687945,-2.556121],[-0.213994,6.557435],[-3.192460,8.339934],[-2.172731,2.147597]],[[2.559641,-0.945623],[-0.127804,2.421208],[-0.773781,-5.888670],[5.511560,-7.966708],[4.727333,-6.418255],[-3.346982,9.000029],[-8.121432,-3.183910],[-9.132589,-0.955164],[3.959642,-8.113945],[4.827437,-3.231569],[-2.996060,8.687881],[-8.051398,-5.757313],[-7.046615,3.482679],[9.370016,-1.828516],[-8.580197,-1.429852],[-4.531179,-4.782729]],[[8.513633,-2.029496],[-1.553356,9.519949],[2.396357,6.536949],[-3.218044,3.218613],[-7.201552,5.659899],[4.717600,-2.969235],[-0.887858,-0.307706],[3.711027,-6.775600],[-5.054589,3.279624],[2.748102,6.746588],[-8.358130,-8.161224],[4.587426,4.042240],[9.191493,2.353047],[-1.545918,-5.453374],[-6.470562,-0.182328],[9.719157,6.849630]],[[1.658458,0.936599],[5.060681,4.210568],[4.809321,-0.941516],[-3.765099,-9.136553],[-3.684883,-5.429142],[8.148188,0.332061],[-4.655628,-1.372072],[-6.607222,3.298921],[-8.843057,3.585266],[2.428803,1.412227],[-0.201903,0.512040],[-0.217861,-4.920034],[1.310839,7.802145],[1.710006,5.239908],[-6.106719,-3.306418],[5.922923,-2.531207]],[[-9.647607,2.200490],[4.617769,-2.076295],[-8.464498,-3.713862],[8.096759,5.724005],[6.885830,-4.056417],[3.065583,-3.171802],[3.524585,-6.434199],[-2.592271,-9.819250],[-2.767878,8.960566],[1.001511,-0.863479],[9.424272,-7.799730],[1.861554,-5.649591],[-8.781384,-0.304794],[-0.712378,-1.408760],[1.589695,-0.877721],[4.316036,-1.791998]]], dtype = "float32")#candidate|253|(14, 16, 2)|const|float32
uop_254 = relay.erf(const_253.astype('float32')) # shape=(14, 16, 2)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
var_265 = relay.var("var_265", dtype = "float32", shape = (390, 2))#candidate|265|(390, 2)|var|float32
call_264 = relay.TupleGetItem(func_109_call(relay.reshape(var_265.astype('float32'), [5, 12, 13])), 0)
call_266 = relay.TupleGetItem(func_112_call(relay.reshape(var_265.astype('float32'), [5, 12, 13])), 0)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
call_281 = relay.TupleGetItem(func_109_call(relay.reshape(var_265.astype('float32'), [5, 12, 13])), 0)
call_282 = relay.TupleGetItem(func_112_call(relay.reshape(var_265.astype('float32'), [5, 12, 13])), 0)
uop_297 = relay.log2(call_281.astype('float64')) # shape=(5, 12, 13)
uop_299 = relay.log2(call_282.astype('float64')) # shape=(5, 12, 13)
uop_305 = relay.cosh(call_264.astype('float64')) # shape=(5, 12, 13)
uop_307 = relay.cosh(call_266.astype('float64')) # shape=(5, 12, 13)
output = relay.Tuple([uop_254,var_265,uop_297,uop_305,])
output2 = relay.Tuple([uop_254,var_265,uop_299,uop_307,])
func_309 = relay.Function([var_265,], output)
mod['func_309'] = func_309
mod = relay.transform.InferType()(mod)
mutated_mod['func_309'] = func_309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_310 = relay.var("var_310", dtype = "float32", shape = (390, 2))#candidate|310|(390, 2)|var|float32
func_309_call = mutated_mod.get_global_var('func_309')
call_311 = func_309_call(var_310)
output = call_311
func_312 = relay.Function([var_310], output)
mutated_mod['func_312'] = func_312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_510 = relay.var("var_510", dtype = "bool", shape = (16, 6, 16))#candidate|510|(16, 6, 16)|var|bool
const_511 = relay.const([[[True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False],[True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False],[True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True],[False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False],[True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False],[False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False]],[[False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True],[False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False],[True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True],[False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False],[False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True],[False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False]],[[False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False],[False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False],[True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,True],[True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False],[False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False],[False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True]],[[True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True],[False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True],[True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False],[True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True],[True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False],[False,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True]],[[False,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False],[False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True],[True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True],[False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True],[True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False],[False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True]],[[True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True],[True,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False],[True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True],[True,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False],[False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True],[True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True]],[[False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False],[True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True],[False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False],[True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False],[False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False],[True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True]],[[True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True],[False,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True],[True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,False],[True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False],[True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False],[False,False,True,True,True,True,False,False,True,False,True,False,False,True,True,False]],[[False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False],[True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True],[False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True],[True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False],[False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True],[True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True]],[[True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False],[True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True],[False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True],[True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,False],[True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False],[True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False]],[[False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True],[True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False],[True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True],[False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True],[False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False],[True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False]],[[True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False],[True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False],[True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False],[False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True],[False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True],[False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True]],[[False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True],[False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True],[False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False],[True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False],[False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True],[False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False]],[[False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True],[False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True],[True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False],[True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True],[True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False],[True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False]],[[False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True],[True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True],[False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True],[False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True],[False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False],[False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False]],[[False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True],[True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True],[False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True],[True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True],[True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,False],[False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True]]], dtype = "bool")#candidate|511|(16, 6, 16)|const|bool
bop_512 = relay.logical_and(var_510.astype('bool'), relay.reshape(const_511.astype('bool'), relay.shape_of(var_510))) # shape=(16, 6, 16)
output = relay.Tuple([bop_512,])
output2 = relay.Tuple([bop_512,])
func_520 = relay.Function([var_510,], output)
mod['func_520'] = func_520
mod = relay.transform.InferType()(mod)
var_521 = relay.var("var_521", dtype = "bool", shape = (16, 6, 16))#candidate|521|(16, 6, 16)|var|bool
output = func_520(var_521)
func_522 = relay.Function([var_521], output)
mutated_mod['func_522'] = func_522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "int16", shape = (8, 4, 5))#candidate|901|(8, 4, 5)|var|int16
var_902 = relay.var("var_902", dtype = "int16", shape = (8, 4, 5))#candidate|902|(8, 4, 5)|var|int16
bop_903 = relay.multiply(var_901.astype('int16'), relay.reshape(var_902.astype('int16'), relay.shape_of(var_901))) # shape=(8, 4, 5)
uop_915 = relay.log10(var_902.astype('float64')) # shape=(8, 4, 5)
func_309_call = mod.get_global_var('func_309')
func_312_call = mutated_mod.get_global_var('func_312')
const_952 = relay.const([0.354804,0.388849,-1.232475,-1.275460,-8.299510,-9.494792,1.958022,6.103879,3.113730,-9.519016,-5.494435,6.264035,-8.917382,6.883765,1.611775,8.812382,-5.595008,-8.240215,-1.781391,3.029663,-2.415897,6.581201,1.486174,8.333644,7.854151,6.996698,3.892780,-1.134866,-8.774783,1.703768,-1.332091,-8.848381,-2.453638,-5.670242,8.611862,9.531099,5.485817,0.310358,-3.521775,-1.310858,9.057496,9.643475,-5.099111,-1.600508,-6.877573,-3.129251,9.542145,0.517071,0.734004,-6.278051,3.152346,6.211131,-9.942647,4.497926,2.447300,7.600119,-5.762493,6.825652,-1.092044,8.358873,-7.007872,6.110128,6.723437,7.978665,-2.959524,8.124490,9.528211,4.526382,-4.558702,-6.572404,-0.916486,-5.523295,7.488738,0.808988,0.810207,-7.859857,-0.089155,2.881222,-2.885710,7.498397,-4.435313,-6.352791,5.969346,-8.135111,2.582942,3.058073,-8.242133,-6.911663,2.750555,2.670189,-9.817274,-4.187073,6.648810,-3.781446,-7.710870,2.797395,1.566049,0.019468,0.050862,-0.808531,-9.486450,-7.053513,4.789633,-9.817823,-5.108260,3.358266,3.821874,1.677669,-8.182818,-4.587334,7.778541,7.430268,-9.296848,2.392247,-9.915622,-0.521198,7.859495,7.161604,1.135250,-6.795578,2.688934,-6.923982,7.342022,-1.514140,-4.092583,4.686860,-7.924760,-4.836129,7.786000,-4.013914,8.431315,-9.951078,4.033391,6.940329,-1.398458,-6.955536,2.747209,-4.332164,-6.179744,-1.154694,-1.472291,6.030677,7.341050,4.707114,2.651757,-2.953232,-1.797062,-1.913894,5.145508,-3.296305,7.794703,2.078189,2.418089,9.326038,-6.374814,-0.685365,2.440530,3.394789,1.355449,2.513764,-1.720482,6.809962,7.676638,-6.464044,3.888327,-8.435060,4.648580,-6.469877,8.405101,2.178846,4.678614,-1.889783,4.232904,4.734539,-5.172925,0.374511,3.995949,3.887533,-1.287309,0.056235,-4.266400,-7.164794,8.425169,6.931641,5.150692,3.791308,-1.695460,3.249255,4.917156,4.442153,-5.966170,2.233109,5.119646,-4.567411,-2.640611,-2.193807,7.144611,1.489571,5.097770,4.430190,2.609875,3.510981,9.934638,4.756341,-4.870091,-7.762330,6.995559,-0.667910,9.508502,2.252439,-6.241694,-4.327641,-4.786487,-7.277707,-8.395864,-4.055104,-4.889699,-9.557322,2.643259,1.770098,-2.421110,-7.109706,3.707066,-0.070216,2.752714,-6.376587,6.936158,2.861277,-9.308793,0.574805,5.311894,-0.923807,-7.563381,7.721796,-6.061326,3.939871,8.801664,0.474371,-9.615769,8.744500,2.391655,2.156455,-0.852188,-7.675883,-4.030212,-1.434464,-6.903786,-7.913432,8.563019,-4.202613,-2.816074,-2.258097,6.967288,-7.379105,7.270405,9.658274,7.515576,-1.714960,1.007176,0.949465,-6.191493,4.584004,-6.831922,0.092659,-0.946349,-9.674123,2.026285,-6.695676,-9.852865,-0.246187,-1.293984,-2.777727,-3.483983,5.847324,7.401615,-9.480687,-8.449171,-2.462572,7.598328,-5.356259,5.287005,-5.544788,1.618715,4.623001,5.183160,-2.649214,3.568748,9.939713,8.099428,3.999565,2.301047,-1.607562,-0.195622,8.160039,5.113477,0.549985,-0.556922,8.284020,-3.677291,5.910397,5.499566,8.052610,-1.530881,-4.045834,6.040856,-3.518606,7.495100,0.503929,-3.277945,2.040892,-2.669083,-5.600413,-6.122598,8.923546,7.158511,-0.820576,-3.816564,3.281710,0.324379,-0.390208,-3.535368,5.266107,4.506804,2.178625,4.412733,9.036608,8.810616,-0.731818,-1.550653,-3.551472,-2.373725,-9.826606,-7.651457,1.910583,5.842154,-6.006629,7.170354,-0.801805,-5.396617,-1.832169,-8.674016,-7.862816,6.981732,-6.638071,-8.211964,9.543068,8.725324,7.542210,-4.298069,0.159059,-2.722980,6.967413,-2.592206,-1.216639,6.330666,-8.324568,0.615278,7.385442,-2.525406,-7.443508,-9.007884,9.676046,1.270619,8.946929,-3.710467,7.408205,-1.336248,-2.991794,-9.116318,-8.845601,6.623238,-1.497909,5.538301,7.116593,5.465876,-5.466428,-6.539098,1.129181,-1.222979,4.420518,-0.186421,7.185055,4.731646,3.617191,-3.208168,8.556042,-3.409004,-7.343605,8.101242,5.839659,4.972885,-0.389622,-0.240913,6.246096,-1.300837,2.636204,-8.466989,3.470081,-1.684933,5.115324,-2.046307,-0.114530,-7.885721,-2.788334,-1.152653,-2.241531,8.447967,6.994047,6.671087,-0.196018,6.761182,-9.400155,-4.228877,6.501866,-2.798217,-6.744367,6.373948,9.364102,6.549798,4.412508,-5.668325,-3.924323,-0.925346,3.083286,-8.231871,5.929956,7.130120,2.184295,-0.387066,-3.739759,-3.157957,9.926031,8.565255,9.236881,3.790944,-6.538920,1.341035,5.285415,4.992608,8.365246,5.765167,9.606052,-7.175608,-3.592520,-8.498793,0.505438,6.313826,-6.953183,2.195753,-5.304561,7.770887,-5.638919,8.954689,-7.497400,-0.794579,-3.967943,8.554011,-4.366276,8.009038,-3.654477,1.754550,-2.763851,-0.322348,4.205604,-7.150002,-5.040777,0.337528,-7.207919,6.528128,7.692344,-4.216320,9.441236,6.858321,1.554588,-2.547239,-3.051946,9.476571,2.142573,-0.541464,-8.158628,-7.633321,-6.116250,2.583148,-1.696836,6.051676,3.206702,6.373822,1.098983,-0.255163,3.076222,-7.720501,1.430912,-9.195683,-7.755380,0.225005,-6.975420,6.745596,1.500924,4.575536,9.935999,4.888513,9.051788,4.309366,-5.859333,3.476762,4.111568,6.809566,-4.619209,6.911201,-0.467457,7.757645,-1.055549,1.921011,9.801034,1.588320,-1.828577,5.974341,6.489501,-4.016808,0.349156,-8.009389,-0.861166,7.906657,7.699413,0.968738,2.319133,-5.386727,9.740217,-3.679757,8.641356,-3.843130,-2.233942,4.987654,-9.699913,9.306736,6.275122,-3.007922,-4.892575,-5.385721,-5.592892,6.561011,-6.589872,6.773465,-5.146339,4.395939,8.554054,2.751446,3.297248,-7.540676,-3.978147,7.217824,0.258606,9.207045,3.142993,0.145818,6.384504,-7.493524,3.601654,-0.448998,3.558239,0.252399,0.840053,-6.995899,0.997566,-5.563181,6.123730,1.128290,-3.678084,-2.433010,9.387183,1.661868,-5.878752,-8.460174,-7.757456,9.168538,-8.169224,-1.573868,1.451531,9.577094,0.994801,2.147481,6.480456,3.568683,9.051823,-5.711172,-8.714572,-5.032910,4.042178,-9.611513,9.590823,8.717307,-5.920886,4.650174,-1.338282,-7.723462,-2.152852,-4.066420,-8.832813,2.523103,1.293846,-1.457066,-9.958856,2.046255,-5.016864,5.302862,3.936986,1.753826,-7.602748,-4.205359,8.433485,4.755336,-3.717950,-8.450402,6.241810,-1.452343,4.684809,-8.885098,9.034706,5.528558,2.182543,5.614216,7.995481,-7.184892,9.055797,-4.816841,3.501611,6.680272,-9.951424,2.103788,2.209968,-4.062649,-9.657410,-7.842312,-1.311680,7.337836,-9.233344,8.226021,-1.895665,-8.662341,-6.839989,-7.635197,-6.193639,5.952177,8.039314,-8.202785,-5.295259,2.738446,-9.614011,7.919778,1.107561,-1.813006,8.776204,0.451308,-2.178758,-9.538173,4.923584,-8.068463,-9.501119,-5.587107,-0.557584,-6.782818,5.600427,-2.620411,-0.847536,7.490152,-2.648563,0.627399,2.301126,7.849358,-0.345624,-2.956688,4.850500,2.704005,-5.830978,9.967639,2.148508,0.779883,-8.100867,-3.020946,4.328592,-0.268229,0.638199,-9.796815,4.961877,-1.041264,6.731180,9.630391,-0.246960,-2.181546,-6.820119,9.662486,8.007647,-7.578182,-2.868067,-3.322093,-9.642242,-6.842336,6.702308,-0.325630,-1.187018,-9.931372,3.413180,-2.970745,2.349495,-4.815125,3.906109,0.020972,0.389658,-1.372150,-8.343153,9.482278,4.036447,-9.453178,-9.808406,6.460932,-2.283006,-2.171837,3.433091,3.615604,7.128970,-2.560453,0.712559,-4.982530,-3.913596,1.787020,5.200024,9.754276,-9.548007,7.638717,0.926213,2.285569,9.518157,4.849825,5.084878,2.520613,0.054215,9.535099,8.213948,8.216139,-1.954944,-4.688101,3.251408,-0.346096,7.315433,9.544115,2.849221,-2.398927,-8.847611,3.500523,-9.999659,8.121166,8.162164,5.290452,-9.865083,-5.271651,7.476410,-4.726221,-7.590295,-1.412290,5.414191,-9.496328,-1.736309,5.688262,1.469988,-1.575052,3.288257,0.948383,-9.361272,5.466631,0.651157,7.645589,-9.091894,8.829863,8.645921,-9.923725,7.743642,5.645493,-7.158819,5.406115,4.475306], dtype = "float32")#candidate|952|(780,)|const|float32
call_951 = relay.TupleGetItem(func_309_call(relay.reshape(const_952.astype('float32'), [390, 2])), 3)
call_953 = relay.TupleGetItem(func_312_call(relay.reshape(const_952.astype('float32'), [390, 2])), 3)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
call_989 = relay.TupleGetItem(func_109_call(relay.reshape(call_951.astype('float32'), [5, 12, 13])), 0)
call_990 = relay.TupleGetItem(func_112_call(relay.reshape(call_951.astype('float32'), [5, 12, 13])), 0)
output = relay.Tuple([bop_903,uop_915,call_951,const_952,call_989,])
output2 = relay.Tuple([bop_903,uop_915,call_953,const_952,call_990,])
func_1012 = relay.Function([var_901,var_902,], output)
mod['func_1012'] = func_1012
mod = relay.transform.InferType()(mod)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1012_call = mutated_mod.get_global_var('func_1012')
var_1014 = relay.var("var_1014", dtype = "int16", shape = (8, 4, 5))#candidate|1014|(8, 4, 5)|var|int16
var_1015 = relay.var("var_1015", dtype = "int16", shape = (8, 4, 5))#candidate|1015|(8, 4, 5)|var|int16
call_1013 = func_1012_call(var_1014,var_1015,)
output = call_1013
func_1016 = relay.Function([var_1014,var_1015,], output)
mutated_mod['func_1016'] = func_1016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1553 = relay.var("var_1553", dtype = "float32", shape = (12, 15, 6))#candidate|1553|(12, 15, 6)|var|float32
uop_1554 = relay.cos(var_1553.astype('float32')) # shape=(12, 15, 6)
func_309_call = mod.get_global_var('func_309')
func_312_call = mutated_mod.get_global_var('func_312')
var_1560 = relay.var("var_1560", dtype = "float32", shape = (780,))#candidate|1560|(780,)|var|float32
call_1559 = relay.TupleGetItem(func_309_call(relay.reshape(var_1560.astype('float32'), [390, 2])), 3)
call_1561 = relay.TupleGetItem(func_312_call(relay.reshape(var_1560.astype('float32'), [390, 2])), 3)
func_520_call = mod.get_global_var('func_520')
func_522_call = mutated_mod.get_global_var('func_522')
const_1572 = relay.const([False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False], dtype = "bool")#candidate|1572|(1536,)|const|bool
call_1571 = relay.TupleGetItem(func_520_call(relay.reshape(const_1572.astype('bool'), [16, 6, 16])), 0)
call_1573 = relay.TupleGetItem(func_522_call(relay.reshape(const_1572.astype('bool'), [16, 6, 16])), 0)
uop_1574 = relay.atanh(uop_1554.astype('float64')) # shape=(12, 15, 6)
output = relay.Tuple([call_1559,var_1560,call_1571,const_1572,uop_1574,])
output2 = relay.Tuple([call_1561,var_1560,call_1573,const_1572,uop_1574,])
func_1580 = relay.Function([var_1553,var_1560,], output)
mod['func_1580'] = func_1580
mod = relay.transform.InferType()(mod)
var_1581 = relay.var("var_1581", dtype = "float32", shape = (12, 15, 6))#candidate|1581|(12, 15, 6)|var|float32
var_1582 = relay.var("var_1582", dtype = "float32", shape = (780,))#candidate|1582|(780,)|var|float32
output = func_1580(var_1581,var_1582,)
func_1583 = relay.Function([var_1581,var_1582,], output)
mutated_mod['func_1583'] = func_1583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1769 = relay.var("var_1769", dtype = "float64", shape = ())#candidate|1769|()|var|float64
const_1770 = relay.const([[[-6.486547,-7.580528,-3.350097,8.152344,-8.906743,-8.707371,6.292776,-4.752096,-1.037038,-8.797066,4.340963,9.279342,-3.713137,7.502866,-5.556340,4.510481],[-5.986219,-6.110067,-9.861570,-8.164928,-4.526913,7.526055,1.564304,-1.493883,0.295732,-1.083108,4.762587,-1.151684,8.553308,6.310425,-0.323295,5.343440],[-8.647676,3.037136,6.148383,9.823702,6.464137,9.121616,-6.543736,-2.527454,-5.972699,-6.843273,-5.308092,-6.200370,6.249535,6.301887,-5.604930,-4.803181],[8.485358,9.692508,2.623099,-1.579780,-3.131161,5.723237,-8.496453,-0.831271,3.338259,-2.529906,3.524925,0.011137,-1.801689,-2.493022,8.372198,6.357961],[6.278185,6.585867,-9.954385,8.177346,-9.266816,6.691240,-1.403474,7.356057,2.715359,5.995543,-7.098556,7.357021,-5.347781,2.476396,-2.003549,-0.684247],[-0.269619,2.564539,4.990991,7.895449,1.246139,-2.371584,-1.439660,5.180821,-1.732374,3.799274,-4.225504,0.287414,-7.050630,-0.563174,-0.966682,-1.723174],[1.499134,1.005239,-0.926120,-1.617537,7.400447,9.983586,-6.175628,4.837766,-2.434528,-5.043943,9.135668,4.341937,-2.810086,9.709332,-4.914533,2.367164],[4.270172,-0.042147,4.499284,8.994606,-7.321578,6.072400,-4.062727,2.459894,0.640071,8.357449,4.371706,-5.000511,-7.171178,-3.796604,-8.351328,-4.039107]],[[-4.573173,1.426471,5.506574,6.088977,-1.457895,9.910488,8.293644,0.352358,-7.234651,-3.225341,3.610043,4.371117,-9.686433,-6.819074,-5.688848,-9.009809],[1.322730,-4.885331,-0.812472,-0.340651,-5.958548,8.199187,-7.196172,-4.989466,5.577265,6.376896,-7.261862,9.900757,-6.180644,5.147238,-5.766389,-6.382063],[3.071747,2.774690,-2.130931,-7.911650,7.836625,-4.770613,-0.936629,-4.620550,4.979924,-8.719070,-1.921571,-4.410778,4.474457,9.992341,6.312728,-0.460378],[1.254825,2.701610,3.282924,-2.861882,1.207102,0.538854,-0.316368,-6.618929,9.207421,6.996287,-2.262531,-5.650985,9.719023,3.736471,8.002263,5.552686],[6.296670,-2.533582,3.321486,0.650377,-2.216611,-2.946023,-2.943901,-5.008685,-9.398037,-7.754171,-1.447243,-1.137897,-2.129308,-8.359444,2.427957,-4.801640],[-3.905599,-7.948792,-3.176015,9.040653,-1.203849,2.318032,-4.331015,-9.226663,4.349154,7.509599,4.349605,1.255096,9.842760,-7.924269,7.256444,-8.000191],[5.515619,8.543749,-9.378520,-6.231390,0.925520,-7.296266,-4.903369,-6.081527,9.156992,0.131417,0.184746,-8.661767,-9.310180,-8.829934,-4.819905,-2.945708],[5.907453,9.422517,-7.918173,-1.512620,3.584304,7.072417,7.433069,3.414075,4.145486,9.354646,8.098436,7.170392,-4.293493,5.677055,-0.511174,8.457864]],[[-1.861463,-9.054508,-2.039437,-0.699920,0.546955,1.153208,0.710048,4.223896,6.604092,7.263264,-3.104504,9.280844,-6.676564,2.519985,-4.373333,-0.197596],[1.633782,8.313638,6.950841,9.895425,2.447928,8.829811,2.358348,5.266771,-0.707955,5.418162,6.794256,6.146333,-1.610156,5.784897,6.223049,6.570883],[-2.647081,1.041682,-4.135443,-0.482509,9.901797,-4.257341,-0.405942,-4.794470,-6.665800,0.465050,-5.698288,-8.938129,-6.159792,5.833435,0.835997,-1.820402],[0.338495,-8.677662,3.615579,6.662281,-4.720100,2.236617,5.539730,8.917261,-0.361169,9.764743,-7.706078,1.360404,4.063786,-2.037266,5.460328,-6.990105],[-5.667753,-8.297350,2.037609,6.170850,2.914817,-8.473884,-1.888470,-8.462574,1.680484,8.574570,4.761486,-3.585345,5.540502,-5.011220,6.480440,5.303226],[8.469722,8.680952,5.411710,-1.078985,-8.088201,8.979098,2.719259,4.135448,6.284505,-5.851652,0.035474,-1.837799,8.180244,7.685292,3.155416,1.099342],[-6.333732,-1.313257,3.588770,-6.468674,5.084176,-8.062385,5.919232,0.872872,-5.895505,-6.648963,-8.580842,-5.669660,9.847545,4.212363,-6.592128,3.713500],[3.191274,-9.268305,-8.167731,-0.633007,-2.536667,-1.871733,-9.620037,-4.259225,6.717713,-2.484443,4.707909,-3.995527,-1.925640,-7.636240,-8.776579,5.240995]],[[4.928877,-0.306290,-8.457965,3.854888,4.888109,1.122442,-1.025110,-0.053042,-4.872629,8.948240,4.125396,-0.768922,9.814252,-1.968010,-0.715258,-0.884885],[6.825040,8.332058,7.249989,-1.501250,1.285258,2.661447,2.336460,0.572226,-3.631728,-0.901443,-0.919912,-7.209514,7.557660,4.372436,-9.078662,7.300492],[-7.125311,-3.931398,8.715132,-1.684202,-9.319487,-9.287882,0.313859,9.557311,7.639789,0.447150,-9.632581,1.918933,-4.417556,4.040341,-7.098445,-7.987047],[9.004788,3.993180,7.825142,1.428635,6.966228,-2.690682,-3.556816,-4.286088,2.972660,6.222501,3.101034,5.875782,-8.636073,8.525450,2.974663,3.096723],[-3.852318,7.190059,7.003464,6.183427,7.015237,3.719431,8.400302,0.943489,-5.684904,-3.698514,1.842345,6.802433,-0.053872,6.008966,3.149134,-1.607713],[3.525092,7.540365,3.056773,1.845877,-0.334811,-1.980065,-2.776196,-2.272312,-9.031083,1.520541,-2.150278,3.972676,0.173274,-3.706444,-5.842141,-9.819160],[6.073776,-1.340732,-4.814869,7.101875,-7.775568,-8.135003,4.306375,0.719709,7.823851,1.886984,-2.494685,-8.015675,9.515905,-4.431514,1.532683,9.920564],[-0.093721,0.933835,7.191119,-0.816826,-4.010716,0.851593,1.921930,-9.084105,0.639820,6.932865,-9.008504,8.792014,-2.810600,6.127350,-8.812907,-7.914330]],[[-7.223589,3.776199,-7.368469,-8.069508,-3.635195,-8.854022,-1.624455,-4.164805,9.005187,0.193568,1.169215,5.879311,-4.987807,0.786746,-5.628755,-2.446682],[-1.900337,-2.082437,6.440380,6.161027,-3.789544,9.971262,-7.847881,-5.606545,3.225503,-5.358333,-5.328267,6.021604,-0.157531,8.871943,-4.040916,-1.429709],[9.424381,-5.457650,0.916426,-9.850497,3.238689,-6.995186,0.705820,4.478999,3.234562,5.124692,-9.183343,-0.458472,-7.380981,8.471910,4.075609,6.786407],[-9.977072,5.914919,9.758876,-1.119692,-4.641196,5.135631,6.533091,-7.091776,-9.446424,6.433620,-8.728451,1.826578,0.395416,-2.581991,-3.280319,-4.576140],[9.740897,-8.805367,9.841011,3.000524,-4.951649,-0.409995,-0.996994,-2.462575,-1.811944,2.296478,7.477597,6.203546,9.150479,-6.643339,9.524312,-8.908847],[-3.928704,-2.751598,5.070330,7.821300,-3.122800,-1.311662,3.218022,0.088196,-1.311371,-0.542271,8.946996,-7.186188,5.830767,4.490417,6.450816,8.070336],[-4.098602,-4.413707,-6.161539,4.181900,3.824762,3.559697,-2.914689,-0.196338,8.212102,2.305018,5.231811,9.608555,-8.602720,6.784905,-0.935781,5.263737],[-4.544013,5.388795,-9.129563,8.054124,-7.574147,-6.981587,3.038679,0.898881,1.156192,-2.189676,-6.408069,-0.323255,-4.319121,5.453214,-1.233355,9.218484]],[[-7.959393,8.577067,-5.258435,-7.092032,2.980365,7.410289,3.427250,3.703423,9.492871,4.342510,1.899348,-2.131619,-1.821989,8.507294,9.299404,4.374290],[1.025274,-8.310483,-9.471220,-9.180807,7.463695,-9.445357,-2.509377,7.727142,2.734871,7.525611,-7.104434,-7.506518,8.372547,-2.581687,1.343055,-8.122153],[-0.385654,-0.091216,0.151944,6.504761,-5.638176,-6.078669,3.002241,2.185728,-3.945137,-2.249746,-7.444301,0.004191,-6.910527,-0.478724,-9.327460,-3.988056],[7.864267,7.991975,3.933647,2.511532,-3.835386,-2.964181,-5.009823,2.510779,-3.368747,1.619222,-2.321209,2.805880,-2.026750,-4.848957,-2.646937,-3.686418],[5.717078,1.219773,-9.343463,6.470477,-9.937806,-2.638890,1.669680,5.697670,2.550503,-0.591403,-9.656677,-9.875411,-3.770870,2.293273,7.455592,-8.253758],[8.774459,0.901284,5.824052,-2.645966,-4.065938,-5.943523,-7.578080,-6.709192,-4.633545,-0.766913,-2.845151,-8.095974,0.271022,9.895934,8.909265,-0.998483],[8.275455,-2.503293,-4.582771,-1.968831,3.070083,-4.280164,3.843618,-6.396567,5.787933,-5.360153,0.017222,-2.190855,-9.516979,-6.459503,-4.080644,-3.932447],[-6.776205,-8.933486,0.872878,-2.143037,7.209942,9.818702,5.053593,-6.695875,-2.624785,-5.282608,3.353420,-8.697856,-7.925823,1.864581,5.436206,5.859170]],[[-8.682895,-6.012338,-8.710840,4.390327,2.011917,-6.454480,-1.352494,-8.451685,4.312189,-9.976857,0.471886,-4.353277,1.447231,-9.632381,8.181376,1.514294],[1.244235,-2.558479,-7.572434,6.959444,-8.651417,-1.386213,0.411994,3.250554,0.482507,0.272820,-2.005184,-7.632997,-1.033516,6.093888,-8.434377,9.338903],[-1.243180,-3.081850,8.992333,0.380637,4.833290,-3.194456,-0.570212,-1.647090,-1.575462,-3.031088,9.161830,-2.136744,-1.101645,-3.138555,-1.411370,-9.780479],[3.783184,8.623789,0.335427,-1.120251,-6.392580,2.792797,-5.146244,-1.695363,2.701216,1.584333,-7.562236,-5.039228,5.726474,4.305015,9.152598,6.559208],[-3.191569,4.288106,9.625215,3.571501,4.933530,-9.256024,-7.701802,-9.665088,8.949571,-5.597805,3.334467,-2.466305,2.656101,5.639153,-0.802286,8.160529],[9.935567,-5.559313,-2.756398,9.157555,-9.682537,7.685952,-8.928900,-1.638340,-4.664369,3.469132,-1.348161,-0.269414,-5.678877,-6.567257,-0.618478,0.518394],[-8.804528,-4.195055,4.193286,-2.572046,3.533734,-3.597456,8.657762,-2.814615,-5.996198,-8.030444,6.137700,-1.128347,-0.711757,-1.670603,1.510766,-2.946277],[6.684239,-5.229374,-0.898281,-7.880500,0.386732,-2.999970,-3.906519,-8.750444,-1.312634,0.963974,9.318055,2.926123,-9.060849,6.928095,-9.042683,3.194791]],[[-5.135918,-2.193551,5.313914,2.056508,-3.195646,5.838129,-4.142290,2.590190,-3.553287,-5.806904,-8.693772,7.384277,-2.797620,-1.535633,0.721364,-9.018895],[-2.668888,-7.497876,-7.937522,-3.218854,0.645180,0.026799,6.495986,0.764222,2.021000,7.382332,7.814846,-0.732027,8.764873,-7.453294,-5.201187,1.069988],[-4.119835,-3.178790,1.365710,5.654164,3.462076,-7.705148,6.734325,-9.922206,1.058926,-1.386665,4.455030,-3.057011,-2.867693,7.355889,-0.154176,1.614712],[-7.259134,0.364706,-6.278601,3.397019,7.759700,-9.407750,2.936296,8.424933,-8.945371,5.952949,-0.442247,2.800932,2.311574,2.568464,2.229730,-3.164490],[3.181258,7.311472,-6.861397,3.761707,-1.112109,-5.465322,-7.981394,-7.390521,6.393316,-0.355738,-4.885820,-8.883510,-5.873275,7.678439,-1.875588,-2.780643],[1.675098,3.930889,-0.250626,0.815027,-2.976511,-3.718520,3.073933,-8.182931,-6.102107,-5.217113,-4.926792,-5.540939,-6.963368,-6.156008,3.864613,-0.106343],[-7.925501,-7.541384,-8.671832,1.255300,1.308730,-8.729824,-7.173021,-9.969551,6.814965,6.093371,2.595508,4.313167,0.145069,9.213054,-2.660736,7.249689],[4.307994,7.159207,2.833909,0.951175,-0.512375,1.572931,-9.594271,7.581284,-2.648688,8.322780,9.833688,-9.018837,-1.357287,4.293423,7.287591,3.756458]],[[2.471577,3.962282,2.414248,5.571873,-1.037488,-2.637990,-2.108071,-1.962544,3.064842,0.868971,-0.321705,4.804822,6.972208,5.958078,-8.167189,8.860454],[9.467041,-5.778298,3.223482,-8.001848,6.758607,-5.491930,6.553552,-0.609358,-8.789831,1.044326,7.417308,1.009681,6.683746,-5.231282,8.579492,7.455705],[-9.064831,6.062474,-2.466710,8.929827,8.370969,4.535742,-9.760735,3.620319,5.650497,-1.259385,8.007683,9.776952,-5.180615,-1.449198,-4.907652,6.828828],[-4.777103,-3.592691,-7.889482,-3.973781,-2.415753,-1.951534,3.018107,5.162121,-5.843846,-0.833765,-8.483524,6.775709,4.127299,-5.118041,6.567875,-7.129952],[7.170759,-6.143844,-5.201898,2.017179,8.523831,8.759979,7.422047,7.059852,-8.566609,3.513042,-6.424912,-9.670781,7.614238,7.250197,-0.515225,-2.091108],[-8.019930,9.301785,0.285932,6.965676,0.403484,3.107791,-8.317349,-2.618178,-1.721671,9.948429,-7.457907,-8.393854,-5.384591,4.687575,0.035701,-2.085524],[-4.550008,-8.066352,-8.413821,-7.760884,9.625568,-3.896727,8.867484,-0.622287,8.839687,-2.683391,2.535888,1.141277,-6.974181,-8.380600,-2.466232,4.579891],[5.129092,-9.267933,-8.336524,4.985288,-9.136501,5.660385,-3.255683,-2.891310,9.940994,-8.559120,9.088815,-1.106579,-1.165183,-1.774444,-3.630111,6.429559]]], dtype = "float64")#candidate|1770|(9, 8, 16)|const|float64
bop_1771 = relay.divide(var_1769.astype('float64'), const_1770.astype('float64')) # shape=(9, 8, 16)
output = relay.Tuple([bop_1771,])
output2 = relay.Tuple([bop_1771,])
func_1786 = relay.Function([var_1769,], output)
mod['func_1786'] = func_1786
mod = relay.transform.InferType()(mod)
mutated_mod['func_1786'] = func_1786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1787 = relay.var("var_1787", dtype = "float64", shape = ())#candidate|1787|()|var|float64
func_1786_call = mutated_mod.get_global_var('func_1786')
call_1788 = func_1786_call(var_1787)
output = call_1788
func_1789 = relay.Function([var_1787], output)
mutated_mod['func_1789'] = func_1789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1940 = relay.var("var_1940", dtype = "float32", shape = (3, 8, 9))#candidate|1940|(3, 8, 9)|var|float32
uop_1941 = relay.log2(var_1940.astype('float32')) # shape=(3, 8, 9)
func_520_call = mod.get_global_var('func_520')
func_522_call = mutated_mod.get_global_var('func_522')
var_1959 = relay.var("var_1959", dtype = "bool", shape = (128, 12))#candidate|1959|(128, 12)|var|bool
call_1958 = relay.TupleGetItem(func_520_call(relay.reshape(var_1959.astype('bool'), [16, 6, 16])), 0)
call_1960 = relay.TupleGetItem(func_522_call(relay.reshape(var_1959.astype('bool'), [16, 6, 16])), 0)
output = relay.Tuple([uop_1941,call_1958,var_1959,])
output2 = relay.Tuple([uop_1941,call_1960,var_1959,])
func_1968 = relay.Function([var_1940,var_1959,], output)
mod['func_1968'] = func_1968
mod = relay.transform.InferType()(mod)
var_1969 = relay.var("var_1969", dtype = "float32", shape = (3, 8, 9))#candidate|1969|(3, 8, 9)|var|float32
var_1970 = relay.var("var_1970", dtype = "bool", shape = (128, 12))#candidate|1970|(128, 12)|var|bool
output = func_1968(var_1969,var_1970,)
func_1971 = relay.Function([var_1969,var_1970,], output)
mutated_mod['func_1971'] = func_1971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2296 = relay.var("var_2296", dtype = "uint64", shape = (1, 9, 6))#candidate|2296|(1, 9, 6)|var|uint64
var_2297 = relay.var("var_2297", dtype = "uint64", shape = (1, 9, 6))#candidate|2297|(1, 9, 6)|var|uint64
bop_2298 = relay.left_shift(var_2296.astype('uint64'), relay.reshape(var_2297.astype('uint64'), relay.shape_of(var_2296))) # shape=(1, 9, 6)
uop_2302 = relay.sin(bop_2298.astype('float64')) # shape=(1, 9, 6)
uop_2310 = relay.sqrt(uop_2302.astype('float64')) # shape=(1, 9, 6)
bop_2314 = relay.divide(var_2296.astype('float64'), relay.reshape(var_2297.astype('float64'), relay.shape_of(var_2296))) # shape=(1, 9, 6)
bop_2330 = relay.subtract(uop_2310.astype('int16'), relay.reshape(bop_2298.astype('int16'), relay.shape_of(uop_2310))) # shape=(1, 9, 6)
bop_2333 = relay.logical_or(uop_2302.astype('bool'), relay.reshape(bop_2330.astype('bool'), relay.shape_of(uop_2302))) # shape=(1, 9, 6)
output = relay.Tuple([bop_2314,bop_2333,])
output2 = relay.Tuple([bop_2314,bop_2333,])
func_2345 = relay.Function([var_2296,var_2297,], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
var_2346 = relay.var("var_2346", dtype = "uint64", shape = (1, 9, 6))#candidate|2346|(1, 9, 6)|var|uint64
var_2347 = relay.var("var_2347", dtype = "uint64", shape = (1, 9, 6))#candidate|2347|(1, 9, 6)|var|uint64
output = func_2345(var_2346,var_2347,)
func_2348 = relay.Function([var_2346,var_2347,], output)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2685 = relay.const([[[4.114871,8.111125],[1.840277,8.404516],[-6.162581,6.271650],[6.617566,7.846090],[-4.231219,-5.176701],[0.459291,-8.576967],[-3.423491,-2.331288],[4.155583,5.444263],[5.329806,-6.210653],[-8.205687,9.907459]],[[6.455960,3.732416],[3.082139,-5.423618],[3.245531,8.520650],[0.583573,-9.373960],[-4.496563,6.751226],[-9.537955,-0.251342],[2.175073,7.750126],[-8.574963,3.781557],[2.230189,3.488957],[8.191037,-0.734153]],[[-2.029546,5.362865],[-3.462846,9.962299],[5.524175,-8.746598],[-9.326305,4.253749],[3.764673,8.871519],[-1.958423,7.880017],[8.234391,-7.712177],[-4.014123,-4.196645],[-6.375831,7.997468],[2.070659,-3.503180]],[[7.653342,-3.938756],[6.621795,4.747565],[-4.177287,9.416616],[1.372654,9.021667],[7.324373,-9.410880],[-5.480793,-1.639357],[-2.246309,2.223651],[8.482551,-8.814721],[-1.064867,-7.456584],[2.556273,-0.703162]],[[-0.076241,-5.993088],[3.464340,-7.542198],[5.452280,-8.559895],[1.903380,-1.431722],[-5.906423,1.189126],[8.201705,-2.669466],[3.927835,-0.137281],[2.383523,-6.180319],[-4.256970,1.977541],[-0.816289,-0.595924]],[[-8.495947,-0.031366],[6.831181,-5.048420],[-9.795991,8.201146],[1.075510,-2.234648],[-9.774913,4.642331],[1.597046,3.086361],[-9.187841,9.401607],[8.536297,-4.420826],[7.155417,4.243737],[-5.862096,-8.306491]],[[-2.354240,-7.242067],[-4.906978,-0.705890],[5.362393,-7.540604],[6.579991,-8.612954],[-4.714898,8.102571],[4.077491,-4.601137],[-1.395880,-1.357057],[5.980172,0.938199],[-3.743379,2.431200],[-9.695664,-7.493256]],[[-1.732071,4.093475],[-9.765587,1.197764],[2.553123,-1.180163],[6.294796,9.798934],[2.004452,-3.721076],[2.398575,-4.157109],[3.039797,-1.244461],[1.488999,-4.151539],[1.097502,8.646718],[9.631136,-3.519165]],[[9.886862,-2.387331],[7.900718,-4.768885],[3.542857,2.538796],[4.664967,-3.393489],[-3.766749,-7.437666],[7.639507,0.217312],[-9.438317,8.017551],[9.058306,2.036960],[-5.135013,3.194337],[8.948304,-9.674359]],[[-3.786626,4.299307],[4.113837,9.094866],[-1.956910,1.522259],[-6.715260,-0.585237],[-7.810469,-9.866474],[-3.884519,-7.668938],[5.043742,-7.680758],[-8.193305,6.140377],[6.285714,-4.838362],[4.689608,-3.318319]],[[4.653651,1.204386],[-4.999717,2.908414],[3.907262,-6.290285],[1.491234,6.928885],[1.878984,7.166480],[-2.390020,-0.117877],[-3.637153,9.183243],[-8.066573,1.335279],[4.745905,3.504601],[8.524335,-5.252720]],[[1.385355,-4.270941],[-3.185981,8.084592],[4.170276,4.208901],[-7.380159,9.294033],[-4.995691,-2.477761],[-1.787850,-5.163416],[-2.604297,4.719323],[-7.262733,4.450806],[5.581246,-3.265121],[5.577425,6.915345]],[[8.855203,-8.972599],[-4.189986,-4.108897],[-8.277268,-3.710955],[-4.565808,5.876332],[-0.859967,-8.661015],[-6.264167,-5.323497],[0.141873,2.720517],[1.190848,-5.807614],[7.596436,-2.279787],[-1.935552,-3.101504]],[[1.491105,-7.714487],[-5.923740,-4.442489],[-9.374999,3.882647],[-3.021942,-0.572256],[5.652743,-1.308741],[-3.249693,5.122918],[-2.047564,-2.847900],[-5.818887,8.423449],[9.652706,3.038473],[6.021944,-7.306432]],[[3.880430,0.526749],[-4.832401,3.754337],[6.504148,-1.735775],[-0.922630,-9.509583],[7.351888,-0.276289],[7.635695,5.447299],[6.888913,-0.318228],[-3.950622,-3.078117],[3.906995,-8.963637],[-4.997689,7.102293]]], dtype = "float64")#candidate|2685|(15, 10, 2)|const|float64
uop_2686 = relay.acosh(const_2685.astype('float64')) # shape=(15, 10, 2)
func_520_call = mod.get_global_var('func_520')
func_522_call = mutated_mod.get_global_var('func_522')
var_2689 = relay.var("var_2689", dtype = "bool", shape = (1536,))#candidate|2689|(1536,)|var|bool
call_2688 = relay.TupleGetItem(func_520_call(relay.reshape(var_2689.astype('bool'), [16, 6, 16])), 0)
call_2690 = relay.TupleGetItem(func_522_call(relay.reshape(var_2689.astype('bool'), [16, 6, 16])), 0)
func_1968_call = mod.get_global_var('func_1968')
func_1971_call = mutated_mod.get_global_var('func_1971')
var_2710 = relay.var("var_2710", dtype = "float32", shape = (12, 18))#candidate|2710|(12, 18)|var|float32
call_2709 = relay.TupleGetItem(func_1968_call(relay.reshape(var_2710.astype('float32'), [3, 8, 9]), relay.reshape(call_2688.astype('bool'), [128, 12]), ), 2)
call_2711 = relay.TupleGetItem(func_1971_call(relay.reshape(var_2710.astype('float32'), [3, 8, 9]), relay.reshape(call_2688.astype('bool'), [128, 12]), ), 2)
output = relay.Tuple([uop_2686,call_2688,var_2689,call_2709,var_2710,])
output2 = relay.Tuple([uop_2686,call_2690,var_2689,call_2711,var_2710,])
func_2714 = relay.Function([var_2689,var_2710,], output)
mod['func_2714'] = func_2714
mod = relay.transform.InferType()(mod)
mutated_mod['func_2714'] = func_2714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2714_call = mutated_mod.get_global_var('func_2714')
var_2716 = relay.var("var_2716", dtype = "bool", shape = (1536,))#candidate|2716|(1536,)|var|bool
var_2717 = relay.var("var_2717", dtype = "float32", shape = (12, 18))#candidate|2717|(12, 18)|var|float32
call_2715 = func_2714_call(var_2716,var_2717,)
output = call_2715
func_2718 = relay.Function([var_2716,var_2717,], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2877 = relay.var("var_2877", dtype = "float64", shape = (9, 8, 14))#candidate|2877|(9, 8, 14)|var|float64
uop_2878 = relay.cosh(var_2877.astype('float64')) # shape=(9, 8, 14)
output = uop_2878
output2 = uop_2878
func_2884 = relay.Function([var_2877,], output)
mod['func_2884'] = func_2884
mod = relay.transform.InferType()(mod)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2885 = relay.var("var_2885", dtype = "float64", shape = (9, 8, 14))#candidate|2885|(9, 8, 14)|var|float64
func_2884_call = mutated_mod.get_global_var('func_2884')
call_2886 = func_2884_call(var_2885)
output = call_2886
func_2887 = relay.Function([var_2885], output)
mutated_mod['func_2887'] = func_2887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2891 = relay.var("var_2891", dtype = "float32", shape = (9, 7, 1))#candidate|2891|(9, 7, 1)|var|float32
uop_2892 = relay.sinh(var_2891.astype('float32')) # shape=(9, 7, 1)
output = relay.Tuple([uop_2892,])
output2 = relay.Tuple([uop_2892,])
func_2898 = relay.Function([var_2891,], output)
mod['func_2898'] = func_2898
mod = relay.transform.InferType()(mod)
var_2899 = relay.var("var_2899", dtype = "float32", shape = (9, 7, 1))#candidate|2899|(9, 7, 1)|var|float32
output = func_2898(var_2899)
func_2900 = relay.Function([var_2899], output)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3030 = relay.var("var_3030", dtype = "bool", shape = (16, 3, 1))#candidate|3030|(16, 3, 1)|var|bool
var_3031 = relay.var("var_3031", dtype = "bool", shape = (16, 3, 12))#candidate|3031|(16, 3, 12)|var|bool
bop_3032 = relay.logical_or(var_3030.astype('bool'), var_3031.astype('bool')) # shape=(16, 3, 12)
var_3036 = relay.var("var_3036", dtype = "bool", shape = (16, 3, 12))#candidate|3036|(16, 3, 12)|var|bool
bop_3037 = relay.bitwise_and(var_3031.astype('int16'), relay.reshape(var_3036.astype('int16'), relay.shape_of(var_3031))) # shape=(16, 3, 12)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_3053 = relay.var("var_3053", dtype = "float32", shape = (63,))#candidate|3053|(63,)|var|float32
call_3052 = relay.TupleGetItem(func_2898_call(relay.reshape(var_3053.astype('float32'), [9, 7, 1])), 0)
call_3054 = relay.TupleGetItem(func_2900_call(relay.reshape(var_3053.astype('float32'), [9, 7, 1])), 0)
func_2714_call = mod.get_global_var('func_2714')
func_2718_call = mutated_mod.get_global_var('func_2718')
var_3068 = relay.var("var_3068", dtype = "bool", shape = (1536,))#candidate|3068|(1536,)|var|bool
const_3069 = relay.const([-7.898515,7.856454,-7.473068,-2.151588,0.495657,1.805124,-6.055753,9.560713,-3.644082,0.218362,-7.300244,9.535368,-8.142214,6.233375,-6.157288,-0.454176,7.377579,0.075279,-3.113998,8.369366,-6.918280,-7.786641,9.153100,-9.030262,-9.490888,-9.488059,0.250066,3.675405,4.750561,-8.962477,-9.722571,-5.192182,-5.534136,6.710055,0.158493,-2.681033,2.164585,-9.394136,7.504566,0.689358,2.628205,-5.135781,5.763269,-6.137138,-3.828489,-3.060705,6.971865,5.942426,-5.523186,-5.100584,9.315864,-5.986544,2.577147,6.348220,3.177113,-4.203803,1.867630,-0.129162,-7.202105,7.688198,0.421118,-3.493741,-3.933974,-7.771519,-6.006252,-6.542291,0.810232,0.053809,8.033073,5.939391,1.327017,9.204630,0.070062,7.809223,6.454131,-0.763670,-8.143408,5.476523,-9.280374,3.942068,4.308788,4.889596,-6.066155,3.956487,3.439332,6.997747,2.445686,8.670464,-4.626974,-8.542925,0.117396,-5.588428,9.244783,-5.276311,4.979692,0.834565,8.064858,7.890539,0.672830,-8.981519,-8.248282,4.648763,-4.415129,-4.717954,8.017222,-1.858036,6.231144,-6.628439,9.075439,8.156114,-0.530883,5.378475,2.285668,-4.067333,4.883545,8.931943,-0.946570,6.084165,-2.952014,4.087203,0.194795,-7.892749,-3.481724,2.133045,-1.472407,-5.730793,7.462843,-9.868109,-2.552034,5.608397,0.865642,0.808236,1.869705,2.056740,-6.133166,4.828693,-2.393691,6.198439,-5.819699,-9.451012,3.246089,-2.080973,-1.779702,4.001143,8.492414,4.879784,1.402523,-4.522866,1.946321,-2.555181,-9.735628,8.741950,-9.082812,9.694836,-4.545145,2.400332,-4.338126,-8.049685,-1.202449,3.661578,4.938000,8.183329,-4.636091,5.337174,7.756439,3.641082,-3.654698,-0.305238,5.091037,5.584313,-2.961320,2.644417,-2.487969,6.058686,4.605874,-7.933539,1.384841,-0.490484,5.534799,-0.738614,7.958787,-2.752481,-2.172519,-4.865606,-1.799135,4.829676,-1.936637,2.114654,9.442168,-6.429264,-5.759971,0.394064,-0.640389,4.167647,3.279384,-6.435604,9.760132,-2.633298,4.093644,-5.136484,7.296844,-0.755289,-4.853595,-2.662788,4.120557,1.540071,-5.708977,1.041512,-6.718100,-0.613139,-5.348620,-9.383881,-3.085771,-9.941082,-6.378547,3.646364], dtype = "float32")#candidate|3069|(216,)|const|float32
call_3067 = relay.TupleGetItem(func_2714_call(relay.reshape(var_3068.astype('bool'), [1536,]), relay.reshape(const_3069.astype('float32'), [12, 18]), ), 1)
call_3070 = relay.TupleGetItem(func_2718_call(relay.reshape(var_3068.astype('bool'), [1536,]), relay.reshape(const_3069.astype('float32'), [12, 18]), ), 1)
var_3085 = relay.var("var_3085", dtype = "float32", shape = (9, 7, 12))#candidate|3085|(9, 7, 12)|var|float32
bop_3086 = relay.mod(call_3052.astype('float32'), var_3085.astype('float32')) # shape=(9, 7, 12)
bop_3089 = relay.mod(call_3054.astype('float32'), var_3085.astype('float32')) # shape=(9, 7, 12)
bop_3093 = relay.maximum(var_3068.astype('uint8'), call_3052.astype('uint8')) # shape=(9, 7, 1536)
bop_3096 = relay.maximum(var_3068.astype('uint8'), call_3054.astype('uint8')) # shape=(9, 7, 1536)
output = relay.Tuple([bop_3032,bop_3037,var_3053,call_3067,const_3069,bop_3086,bop_3093,])
output2 = relay.Tuple([bop_3032,bop_3037,var_3053,call_3070,const_3069,bop_3089,bop_3096,])
func_3099 = relay.Function([var_3030,var_3031,var_3036,var_3053,var_3068,var_3085,], output)
mod['func_3099'] = func_3099
mod = relay.transform.InferType()(mod)
mutated_mod['func_3099'] = func_3099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mutated_mod.get_global_var('func_3099')
var_3101 = relay.var("var_3101", dtype = "bool", shape = (16, 3, 1))#candidate|3101|(16, 3, 1)|var|bool
var_3102 = relay.var("var_3102", dtype = "bool", shape = (16, 3, 12))#candidate|3102|(16, 3, 12)|var|bool
var_3103 = relay.var("var_3103", dtype = "bool", shape = (16, 3, 12))#candidate|3103|(16, 3, 12)|var|bool
var_3104 = relay.var("var_3104", dtype = "float32", shape = (63,))#candidate|3104|(63,)|var|float32
var_3105 = relay.var("var_3105", dtype = "bool", shape = (1536,))#candidate|3105|(1536,)|var|bool
var_3106 = relay.var("var_3106", dtype = "float32", shape = (9, 7, 12))#candidate|3106|(9, 7, 12)|var|float32
call_3100 = func_3099_call(var_3101,var_3102,var_3103,var_3104,var_3105,var_3106,)
output = call_3100
func_3107 = relay.Function([var_3101,var_3102,var_3103,var_3104,var_3105,var_3106,], output)
mutated_mod['func_3107'] = func_3107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3212 = relay.var("var_3212", dtype = "uint64", shape = (11, 8, 6))#candidate|3212|(11, 8, 6)|var|uint64
const_3213 = relay.const([[[-6,3,-3,9,8,10],[-2,-9,-1,-2,-1,5],[3,-8,2,6,2,-7],[8,-6,8,2,-10,-3],[-2,-3,-7,-6,8,1],[9,-9,-7,-7,-4,3],[-8,-10,-6,1,-9,-10],[5,-9,10,-2,-9,10]],[[-9,3,8,3,-9,-6],[7,-2,2,-5,9,-7],[-5,-8,1,-8,-4,2],[-7,10,10,-10,1,-3],[3,9,3,-1,-6,1],[-6,8,2,-4,4,4],[9,-1,7,5,-4,-3],[4,-5,2,10,5,-10]],[[5,-5,-9,5,4,-10],[1,-10,-4,4,-7,-8],[5,7,-5,6,-10,-1],[1,-8,-3,3,-6,3],[-5,9,7,9,5,-1],[-4,2,-9,4,10,-2],[-2,9,7,-9,-10,-4],[-6,-9,10,3,9,9]],[[-8,-6,7,-1,5,7],[3,-4,-2,2,-3,9],[2,-7,-7,9,-1,4],[-4,-7,7,1,-9,5],[-5,-9,1,-2,-2,-4],[-7,-4,7,-10,-1,10],[-10,7,7,-3,2,-1],[-2,6,3,-2,-2,-3]],[[-2,-1,-10,2,1,-1],[5,9,6,10,2,-1],[-5,-7,9,9,-1,-8],[-9,-2,2,-7,7,-6],[-7,-2,-2,5,-6,-6],[2,-8,-6,-7,9,-5],[3,9,1,7,-10,8],[2,1,8,4,-3,-5]],[[1,5,-1,10,-4,8],[-4,3,3,-8,-5,-2],[-8,-2,-1,1,-1,1],[-7,-8,1,8,10,-3],[-3,8,2,10,8,-1],[9,10,-8,-3,-1,-8],[6,10,-7,1,-4,7],[-2,-3,9,9,8,9]],[[2,3,-3,-6,8,7],[8,7,-8,5,-3,10],[4,9,1,-10,-8,-6],[3,-9,9,8,5,-7],[-2,-5,-3,-5,6,-1],[-2,2,3,2,-2,-8],[-9,8,4,9,10,-10],[-8,-1,1,-1,-2,-4]],[[1,-2,-8,-3,9,-3],[5,-8,5,-7,5,7],[-10,10,1,9,-9,-2],[1,4,-5,2,8,-6],[-2,-7,-2,2,3,6],[-7,6,3,-4,3,4],[-6,1,-10,8,9,6],[10,-3,-3,8,3,-5]],[[2,-3,-7,7,5,9],[5,5,3,-7,-3,-9],[-9,-6,9,-1,1,7],[10,3,-2,-1,10,-2],[9,-7,10,-1,-2,-3],[8,-3,-7,1,6,5],[8,6,-3,-10,-8,7],[4,-8,4,-9,-9,-3]],[[5,-4,-8,1,-4,-4],[5,-9,5,-2,-5,5],[-4,-4,-7,9,-1,-4],[-3,-4,2,-6,-4,-10],[3,7,-2,9,-7,1],[8,-7,-7,9,-6,9],[-3,-2,1,5,4,4],[-4,-6,-6,6,-8,-4]],[[-4,5,5,7,-10,-2],[-3,-7,-7,-6,5,-2],[8,-4,1,-3,8,6],[-3,-9,3,6,-10,-4],[-3,10,2,-9,-9,9],[9,-8,10,-2,6,8],[5,-5,6,-2,2,6],[-3,6,-8,-6,9,-5]]], dtype = "uint64")#candidate|3213|(11, 8, 6)|const|uint64
bop_3214 = relay.maximum(var_3212.astype('uint64'), relay.reshape(const_3213.astype('uint64'), relay.shape_of(var_3212))) # shape=(11, 8, 6)
uop_3220 = relay.acos(bop_3214.astype('float64')) # shape=(11, 8, 6)
output = relay.Tuple([uop_3220,])
output2 = relay.Tuple([uop_3220,])
func_3224 = relay.Function([var_3212,], output)
mod['func_3224'] = func_3224
mod = relay.transform.InferType()(mod)
mutated_mod['func_3224'] = func_3224
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3225 = relay.var("var_3225", dtype = "uint64", shape = (11, 8, 6))#candidate|3225|(11, 8, 6)|var|uint64
func_3224_call = mutated_mod.get_global_var('func_3224')
call_3226 = func_3224_call(var_3225)
output = call_3226
func_3227 = relay.Function([var_3225], output)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3274 = relay.var("var_3274", dtype = "float64", shape = (5, 3, 1))#candidate|3274|(5, 3, 1)|var|float64
var_3275 = relay.var("var_3275", dtype = "float64", shape = (5, 3, 15))#candidate|3275|(5, 3, 15)|var|float64
bop_3276 = relay.floor_divide(var_3274.astype('float64'), var_3275.astype('float64')) # shape=(5, 3, 15)
uop_3293 = relay.rsqrt(var_3275.astype('float64')) # shape=(5, 3, 15)
output = relay.Tuple([bop_3276,uop_3293,])
output2 = relay.Tuple([bop_3276,uop_3293,])
func_3299 = relay.Function([var_3274,var_3275,], output)
mod['func_3299'] = func_3299
mod = relay.transform.InferType()(mod)
mutated_mod['func_3299'] = func_3299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3299_call = mutated_mod.get_global_var('func_3299')
var_3301 = relay.var("var_3301", dtype = "float64", shape = (5, 3, 1))#candidate|3301|(5, 3, 1)|var|float64
var_3302 = relay.var("var_3302", dtype = "float64", shape = (5, 3, 15))#candidate|3302|(5, 3, 15)|var|float64
call_3300 = func_3299_call(var_3301,var_3302,)
output = call_3300
func_3303 = relay.Function([var_3301,var_3302,], output)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3369 = relay.var("var_3369", dtype = "int64", shape = (7, 7, 12))#candidate|3369|(7, 7, 12)|var|int64
const_3370 = relay.const([[[-4,-4,1,-8,5,1,-4,10,10,-6,-2,1],[-6,-3,9,-3,-6,-4,6,-6,-5,-10,8,8],[2,6,-9,-3,2,-6,-5,-6,5,-8,9,-1],[-10,3,10,7,-7,7,10,1,-6,-2,5,4],[7,-2,-5,-1,5,-7,9,-9,9,-2,-4,2],[9,2,2,-5,-7,5,1,7,4,-3,9,9],[7,-6,2,2,-4,5,-10,4,7,-7,9,-4]],[[-9,-6,-8,6,-4,-8,-2,10,-5,-1,7,-2],[9,5,-5,-1,-8,5,-9,1,7,2,10,-7],[-8,9,8,-10,-1,4,-3,-4,-1,-7,2,-6],[9,-10,9,-5,-8,2,8,-2,4,8,-1,8],[-1,-2,7,2,7,7,1,-3,-10,6,7,-8],[-4,-10,-9,8,-5,3,-10,8,-8,3,8,-10],[-3,6,-4,10,-3,6,-9,9,7,-8,6,-4]],[[4,6,5,2,-4,-7,5,8,-10,-9,1,4],[10,4,-1,-2,6,-7,-6,1,9,8,-7,-3],[3,5,10,9,-5,-7,1,-9,9,-10,-7,5],[-8,10,-1,10,5,-7,7,4,-1,8,2,1],[-5,6,-1,-6,6,-4,-10,-1,10,-7,-6,-10],[-6,10,-6,-1,3,3,-10,3,-6,3,1,-1],[1,-9,1,-3,8,6,4,6,-5,-1,7,-3]],[[1,9,7,3,7,5,3,-6,-3,6,-10,-5],[1,-1,10,-1,7,2,-9,-6,-7,8,-10,1],[-9,-1,1,-5,1,-9,10,-3,2,-5,-10,-9],[1,-9,2,-4,-8,9,10,2,-9,-4,2,8],[-5,-5,1,4,-1,-2,-4,5,1,3,-9,-3],[-5,7,-6,-9,5,6,8,-9,2,6,-8,-7],[-9,2,-5,-6,4,8,-6,3,-3,-9,-8,1]],[[-10,7,10,-8,-6,6,-7,-2,4,3,6,-5],[-4,9,-3,-3,1,-2,5,1,2,3,-8,10],[-4,5,-8,9,3,3,10,10,7,-4,3,8],[-1,-3,-5,-4,-8,8,-7,6,-5,-7,-7,8],[-10,10,6,-7,8,-9,-4,1,1,-8,6,-10],[4,-8,6,-7,-6,8,-5,-2,-6,6,-3,-4],[6,-3,-5,-3,-2,-10,-5,-7,-5,7,-1,-3]],[[-10,-8,7,7,3,6,-3,-9,-8,-5,7,7],[6,-2,-3,-5,7,5,-7,-7,-2,-8,-2,10],[-7,4,-7,-6,7,10,-4,-4,-10,6,3,8],[8,10,5,9,-7,4,6,-8,9,-2,5,-5],[-6,2,4,-5,-6,-2,7,2,6,1,-7,6],[7,8,-5,8,-4,9,8,2,-10,-6,-6,2],[-4,8,2,-5,6,-2,8,2,-8,-2,6,-4]],[[-8,3,9,-10,10,4,3,-10,5,-8,2,5],[-3,-8,-10,-7,-3,6,6,2,-3,-10,8,-3],[-2,5,3,3,6,-8,6,-7,-4,8,7,9],[-8,6,9,-8,2,-6,-1,2,-2,4,-6,6],[3,1,4,2,9,8,7,8,7,-6,-2,-6],[1,-4,-2,-6,-2,7,-6,-10,6,10,3,-3],[-1,1,-7,10,10,4,4,-8,-4,-4,3,5]]], dtype = "int64")#candidate|3370|(7, 7, 12)|const|int64
bop_3371 = relay.greater(var_3369.astype('bool'), relay.reshape(const_3370.astype('bool'), relay.shape_of(var_3369))) # shape=(7, 7, 12)
output = relay.Tuple([bop_3371,])
output2 = relay.Tuple([bop_3371,])
func_3382 = relay.Function([var_3369,], output)
mod['func_3382'] = func_3382
mod = relay.transform.InferType()(mod)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3383 = relay.var("var_3383", dtype = "int64", shape = (7, 7, 12))#candidate|3383|(7, 7, 12)|var|int64
func_3382_call = mutated_mod.get_global_var('func_3382')
call_3384 = func_3382_call(var_3383)
output = call_3384
func_3385 = relay.Function([var_3383], output)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3463 = relay.const([[[-0.568633,2.507640,-7.270364],[0.870368,-8.972192,2.060174],[-6.558974,-4.317064,5.180447],[-5.660010,8.509724,2.597321],[-0.101387,-1.282753,-0.118044]],[[2.025317,-4.096211,-5.163179],[-8.273176,9.061770,-0.586416],[8.417498,-3.730665,0.173337],[-6.906980,-7.839928,6.047423],[-7.203669,-8.563213,7.275355]],[[2.161446,-3.482723,8.077338],[-2.686841,-5.812882,-4.097464],[-2.699271,7.295481,-9.455459],[-4.907749,5.126159,-5.267859],[-0.596506,-1.462777,9.867072]],[[-1.602319,-8.452210,6.399719],[0.578033,9.194670,3.443130],[-2.869311,-1.978282,-6.382371],[7.477539,1.130147,-8.575987],[7.623754,6.083340,8.847746]],[[1.957029,4.974841,-3.054025],[-4.420090,-4.128431,-9.802273],[6.251553,-9.915671,-4.117656],[-8.122714,3.928725,-9.967775],[-2.416227,3.023419,-7.239739]]], dtype = "float64")#candidate|3463|(5, 5, 3)|const|float64
var_3464 = relay.var("var_3464", dtype = "float64", shape = (5, 5, 3))#candidate|3464|(5, 5, 3)|var|float64
bop_3465 = relay.floor_divide(const_3463.astype('float64'), relay.reshape(var_3464.astype('float64'), relay.shape_of(const_3463))) # shape=(5, 5, 3)
uop_3469 = relay.log2(bop_3465.astype('float64')) # shape=(5, 5, 3)
func_3224_call = mod.get_global_var('func_3224')
func_3227_call = mutated_mod.get_global_var('func_3227')
const_3478 = relay.const([-7,10,-5,10,2,2,6,-1,5,4,8,-1,-9,7,-9,5,-1,3,-7,-2,6,2,3,3,-7,9,-8,-8,-7,2,-3,-9,1,10,9,-9,-7,9,6,7,-8,9,-9,10,-1,-10,-9,-7,-5,10,-9,8,-10,6,-8,9,3,1,4,6,6,-8,-6,-7,3,2,-6,10,7,4,-10,3,-1,-5,-10,10,6,-10,2,3,7,-7,-8,-1,-2,-2,7,8,-4,5,-4,9,-1,-2,8,-6,1,-10,-10,-3,5,9,-5,-2,-9,-2,-9,3,-9,3,-10,-4,4,-7,-4,-9,8,-1,-6,-1,-9,8,-5,10,-5,1,3,6,9,4,-6,4,-2,8,-9,2,3,8,2,1,-10,-5,-10,-10,4,6,-6,5,-5,-7,5,2,1,7,-7,-5,3,-10,8,-5,6,4,10,-2,-6,9,8,9,-1,-5,5,7,-9,-2,-9,-3,8,8,9,-5,1,-6,7,-10,-4,-9,6,-8,3,4,-8,-8,4,-6,-8,-2,7,9,5,-2,-8,-1,-5,1,-10,-9,-4,9,-2,3,-6,-10,2,6,-9,-10,9,1,-10,-1,9,-3,4,-1,6,8,-10,6,-6,-1,1,3,-3,-4,-9,7,5,-3,1,7,9,-1,2,2,10,-6,-7,2,5,6,1,4,-1,-6,2,-10,-9,-1,-8,10,10,-10,-4,8,-8,-3,-8,-6,-5,-3,-6,-9,4,5,-5,-2,8,2,4,-9,-6,3,3,-5,2,7,-1,-2,-6,-8,9,-8,2,8,1,8,4,-3,1,-5,-6,-10,9,-3,-8,-8,3,-5,-5,2,-4,5,-2,-5,4,7,-4,-6,-10,8,4,-6,-3,3,-5,5,-5,-7,7,-3,4,1,-10,9,-10,9,-6,-2,-5,-6,-9,-10,-1,3,-9,-1,6,-8,-10,6,5,-5,-2,9,-1,-8,8,-3,4,-9,2,-3,1,-7,-10,3,10,-6,5,10,10,6,-7,-9,7,-4,-7,9,2,-2,-9,-8,5,1,-7,7,10,-7,2,-10,5,10,-4,-1,5,7,-10,-4,8,6,6,-5,7,-5,-10,-10,8,-7,8,-9,3,8,-10,10,-6,5,10,-10,2,5,-2,-6,-4,-5,3,7,9,-1,6,8,8,5,3,-2,-5,-8,-4,7,9,4,3,10,-7,-4,-2,6,-8,-7,-8,-8,8,10,-10,1,7,1,-7,4,4,6,2,6,-2,-1,-2,5,-4,-1,10,-2,-7,8,6,7,-2,5,-2,-6,-4,7,5,-7,5,-3,-1,-1,-10,2,1,-5,10,-8,3,-7,10,-4,-5,8,-8,-4,-8,7,4,-5,9,-1,-1,3,3,-10,5,-2,4,8,-10,3,7,-7,1,7,1,-1,7,6,-4,-6,2,-7], dtype = "uint64")#candidate|3478|(528,)|const|uint64
call_3477 = relay.TupleGetItem(func_3224_call(relay.reshape(const_3478.astype('uint64'), [11, 8, 6])), 0)
call_3479 = relay.TupleGetItem(func_3227_call(relay.reshape(const_3478.astype('uint64'), [11, 8, 6])), 0)
func_3382_call = mod.get_global_var('func_3382')
func_3385_call = mutated_mod.get_global_var('func_3385')
var_3484 = relay.var("var_3484", dtype = "int64", shape = (588,))#candidate|3484|(588,)|var|int64
call_3483 = relay.TupleGetItem(func_3382_call(relay.reshape(var_3484.astype('int64'), [7, 7, 12])), 0)
call_3485 = relay.TupleGetItem(func_3385_call(relay.reshape(var_3484.astype('int64'), [7, 7, 12])), 0)
output = relay.Tuple([uop_3469,call_3477,const_3478,call_3483,var_3484,])
output2 = relay.Tuple([uop_3469,call_3479,const_3478,call_3485,var_3484,])
func_3492 = relay.Function([var_3464,var_3484,], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
var_3493 = relay.var("var_3493", dtype = "float64", shape = (5, 5, 3))#candidate|3493|(5, 5, 3)|var|float64
var_3494 = relay.var("var_3494", dtype = "int64", shape = (588,))#candidate|3494|(588,)|var|int64
output = func_3492(var_3493,var_3494,)
func_3495 = relay.Function([var_3493,var_3494,], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3855 = relay.var("var_3855", dtype = "float64", shape = (11, 13, 4))#candidate|3855|(11, 13, 4)|var|float64
const_3856 = relay.const([[[-4.807266,-1.663033,0.341497,1.261590],[3.035090,-6.042679,6.576064,6.307300],[2.507550,-5.114540,-7.674046,0.735919],[8.072345,8.220318,2.970268,-9.550871],[2.383777,1.787892,-8.121806,0.860234],[7.594271,-0.175013,1.905381,1.287434],[-8.535096,-3.739049,1.232544,1.360623],[4.447306,0.126623,9.800158,-3.480904],[-9.729646,8.815578,9.689751,-5.460471],[-2.836638,9.076273,-1.404722,-6.792442],[0.208958,-3.694829,-1.498876,1.740756],[-9.869825,2.954057,-8.442694,-6.883622],[6.702913,-6.410333,-8.093537,2.167804]],[[4.551585,1.513856,7.357080,-5.320618],[-5.166520,-8.991456,-3.797911,0.028739],[-6.673658,-1.436222,-9.630005,5.015397],[0.660434,-6.867713,-8.397111,-7.597133],[5.555120,1.223613,-4.790721,4.116545],[-9.150422,9.379505,3.963141,-7.524134],[6.035293,4.197572,1.090084,3.591345],[-2.093822,6.064432,-3.027015,-1.936076],[2.786173,-0.147452,7.353294,-2.453491],[5.340891,1.558106,-7.842390,-6.587961],[-7.257033,-9.928352,-9.652086,-1.611241],[7.916751,8.071933,-9.425650,6.650039],[-3.295729,1.058279,6.160849,6.079085]],[[1.764154,-9.159207,-5.516804,-6.350418],[-8.409165,7.980992,-4.413381,5.037354],[3.894712,0.220223,-8.995364,1.394218],[1.176593,-8.124416,-8.756810,4.178141],[-0.168860,-9.481636,9.492638,-2.272550],[3.961897,-0.135991,4.735196,2.622637],[0.493770,-4.447866,-7.241516,-3.598399],[-9.452802,-1.945480,-7.200987,0.158499],[6.781283,-1.927714,-0.885836,-1.058376],[-0.577743,7.173734,-1.787737,-6.343036],[-6.022198,6.589923,-4.330669,-9.834315],[5.277158,1.682584,-6.113969,-5.411475],[-9.557483,-2.362507,0.881656,-0.789923]],[[-2.314606,-4.039968,1.415308,-5.755302],[2.733899,-0.865378,0.203172,9.823079],[0.323050,-1.888810,1.337107,-5.328814],[6.128124,-2.905232,6.103906,-1.536396],[-9.913917,0.485690,3.270630,7.832427],[0.998828,-9.530980,-5.128294,3.075711],[5.901226,-3.119699,3.066947,-0.480278],[7.582757,3.339396,-4.726835,-6.405234],[-3.421210,-9.272101,8.743108,0.015265],[6.991008,5.533384,2.857980,4.272353],[3.482688,9.072693,-5.504240,5.547693],[-4.661906,0.410789,5.327733,5.158989],[7.547238,6.144437,-6.923232,2.186377]],[[5.113225,4.333703,-0.985671,7.333238],[-4.298152,-5.173606,-7.778278,4.457850],[-2.611259,0.701709,-4.957420,-6.684060],[-8.963978,0.930409,-4.522695,-0.796445],[3.965403,-0.515348,6.615563,8.464068],[-7.495717,-5.257636,-2.374841,5.195564],[-9.892953,-5.349266,1.478897,-8.106570],[-1.490562,-2.805958,7.241789,-7.643042],[8.981083,-2.556523,-1.338845,-7.302309],[9.252636,-5.003519,-3.623098,-4.272022],[-5.187806,-8.038541,2.509357,-1.863394],[-8.352184,-0.948504,7.918948,-7.835327],[1.473561,1.172876,5.012215,-3.327460]],[[9.904524,-8.739790,-6.134692,-6.982947],[4.991899,7.632400,-3.970804,-7.394084],[-6.501101,-7.664841,-8.758581,-2.829891],[0.790132,7.290757,-1.986798,6.154375],[-3.682610,9.601725,-4.225362,-0.490141],[-3.710703,6.412040,0.348896,4.885961],[-3.192433,9.332332,8.334824,3.825068],[-3.749288,2.973006,-9.941621,-9.057410],[-8.671908,-1.364277,9.552156,-2.120335],[-2.219452,-6.735215,4.161238,3.715725],[0.321018,-0.191020,6.145144,4.876517],[5.043701,-8.192066,9.599117,-6.975636],[-3.694208,4.489261,0.345424,-1.898239]],[[2.463575,7.663725,-9.066969,-4.260645],[-4.657922,-9.720765,-0.528494,7.588191],[-8.208080,-2.627729,-5.588513,1.560534],[9.994477,-3.179193,-6.699787,-2.703047],[-7.052283,8.250374,-6.402456,-8.730081],[-8.647762,-8.920706,8.520110,-6.717528],[4.678710,2.044262,-4.312342,1.872859],[1.466578,-7.086867,-4.041202,5.585401],[0.052315,6.520218,8.398647,-9.876046],[1.261460,-4.738726,-3.889188,-3.975256],[9.732574,2.432814,8.382737,1.877042],[-1.401882,-7.858730,-8.095525,8.716988],[-4.237705,-3.458330,6.331206,-1.393214]],[[2.466455,6.679198,9.641273,-3.495905],[8.047046,-7.583292,-2.402664,-0.304603],[-7.393014,2.100390,-1.823611,-8.207328],[0.197853,-2.895753,4.209133,3.707479],[-0.416918,-3.138914,6.303027,-5.380439],[-8.538707,3.406022,6.585685,8.330223],[-1.194689,-7.394039,-4.825369,-4.511694],[1.570141,-5.429443,9.833600,-1.573387],[-7.973381,8.475962,6.642436,-5.879149],[3.368048,-8.174019,5.979778,-4.514611],[-2.498586,1.706340,9.250958,-2.815430],[-9.094517,2.873773,4.947202,6.229974],[-9.502116,9.118694,9.225926,3.040268]],[[1.636775,1.050296,8.860650,-1.107027],[-4.491611,-6.233568,6.735361,2.798783],[3.784356,1.201685,-3.639207,-6.672206],[-1.268815,-3.676379,-5.924865,-2.247000],[4.174778,-3.075331,9.614515,-5.531055],[-3.860024,6.263306,3.006409,-7.214812],[8.812168,7.473195,-3.010702,-0.736414],[9.408373,-3.308265,-5.435915,8.359873],[-6.787653,-0.555566,6.360372,-7.056408],[-1.678178,6.309451,-6.978508,-3.639964],[-6.269405,1.813374,-6.509458,9.564290],[-9.393741,5.411903,-7.333162,-5.401051],[-3.534445,-2.063480,4.496815,-9.776311]],[[-1.044660,1.534011,6.350844,-0.404271],[-3.757373,-6.458819,4.141496,-1.436726],[-5.555100,-7.755546,1.421000,1.573404],[5.417201,8.084297,-3.420540,-2.343512],[8.187386,3.825632,-9.427954,-6.969641],[7.920631,3.670986,-0.894938,-9.208891],[0.009246,9.069338,3.921526,-9.129329],[-9.783255,4.615098,1.695568,2.258869],[-8.089315,4.885470,-3.043720,0.527946],[9.596920,-0.689952,-0.680379,-3.561476],[3.259528,-3.033779,-8.433649,-9.015522],[-4.382766,-8.384692,0.819928,1.692457],[-4.759550,-2.969749,-8.894946,9.141842]],[[-9.379372,-4.193997,-4.924665,-1.806296],[-0.050638,7.990081,-2.278834,-7.004581],[4.363670,-1.376336,-3.770299,-5.723591],[3.346520,-7.371015,-6.447506,9.437999],[8.457205,-4.430506,-2.308186,-8.064937],[6.510047,2.757101,8.922714,8.033640],[-2.551763,1.650505,3.919634,-4.503630],[9.606157,-9.372806,-5.461898,-7.663675],[2.325540,7.714561,-3.999925,2.615556],[9.748685,2.736716,-6.806666,-9.563316],[-8.697756,5.196397,5.063613,-6.037425],[-1.324965,3.553695,-7.989999,5.436682],[-0.164249,5.888887,-3.378210,-5.520465]]], dtype = "float64")#candidate|3856|(11, 13, 4)|const|float64
bop_3857 = relay.greater_equal(var_3855.astype('bool'), relay.reshape(const_3856.astype('bool'), relay.shape_of(var_3855))) # shape=(11, 13, 4)
bop_3866 = relay.less_equal(const_3856.astype('bool'), relay.reshape(bop_3857.astype('bool'), relay.shape_of(const_3856))) # shape=(11, 13, 4)
func_1012_call = mod.get_global_var('func_1012')
func_1016_call = mutated_mod.get_global_var('func_1016')
const_3872 = relay.const([[9,6,-3,9,2,-2,9,-10,4,-8,4,8,3,-4,2,-8,-3,-4,3,-8,-9,9,10,-9,-3,-5,-6,-4,8,2,6,-3,-2,-5,10,1,-6,7,10,-2],[-4,-3,-7,1,-6,5,3,-9,7,-2,-1,-8,3,-3,-1,7,10,-8,-6,-2,4,-2,-7,1,-9,3,-8,-7,6,6,-4,3,-3,-3,-3,-3,4,3,-10,-7],[9,-7,1,-10,3,-4,-8,-1,1,-2,-10,-1,-2,-8,-1,9,7,9,-1,6,-2,3,1,-1,-7,-7,7,3,-2,-10,-8,-3,9,6,10,6,-4,1,10,-10],[-4,7,-2,-3,-1,-7,3,5,-3,-2,3,-6,4,6,1,4,-10,-9,1,-9,6,-1,-8,-1,-9,6,2,1,-9,-3,-3,-8,-7,-7,8,1,2,2,-10,2]], dtype = "int16")#candidate|3872|(4, 40)|const|int16
call_3871 = relay.TupleGetItem(func_1012_call(relay.reshape(const_3872.astype('int16'), [8, 4, 5]), relay.reshape(const_3872.astype('int16'), [8, 4, 5]), ), 0)
call_3873 = relay.TupleGetItem(func_1016_call(relay.reshape(const_3872.astype('int16'), [8, 4, 5]), relay.reshape(const_3872.astype('int16'), [8, 4, 5]), ), 0)
func_2714_call = mod.get_global_var('func_2714')
func_2718_call = mutated_mod.get_global_var('func_2718')
const_3876 = relay.const([False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True], dtype = "bool")#candidate|3876|(1536,)|const|bool
const_3877 = relay.const([-9.870706,9.178770,-9.238706,1.075525,-1.674188,-9.303899,2.675693,3.032313,5.281054,0.378515,-1.760897,-1.137121,-3.012457,1.011012,1.033281,-6.126441,3.631017,-2.886226,-5.344178,-9.226706,-2.708821,2.040018,4.184864,0.948306,-6.115113,-2.406891,3.559478,-2.595306,6.975074,0.060811,-6.920023,-3.446343,1.278904,-6.276372,5.779399,-9.917167,8.071844,7.009280,6.502470,2.402175,1.365325,-8.197657,-3.362466,-8.081776,-3.120370,-8.261199,1.877996,-6.030087,6.876617,5.733148,-2.203073,6.740634,2.439883,-3.310445,7.750431,0.754618,5.456001,0.924838,-3.963312,9.118940,-0.774398,2.709720,0.367627,-8.467743,-8.204407,3.991537,-3.396661,-0.279276,0.646306,-1.332427,-0.564305,8.296029,7.375937,-9.988029,-5.872883,9.571115,3.703340,-7.817363,-0.650878,-0.554009,-7.834103,5.304874,-7.764012,5.883585,8.158356,-2.713704,0.755938,8.990723,0.261396,-2.776361,-7.743899,-3.001169,-8.586640,-9.846556,7.374635,-6.388641,-5.650344,-0.233321,6.127321,-5.164516,9.585699,5.886042,-5.708489,-1.163891,-1.809720,6.498972,-2.400923,-6.625609,-5.917261,6.339464,0.590861,-8.138961,-7.196813,-2.254589,-6.674384,-9.719850,-3.904413,-2.456378,-2.260514,-1.796416,8.536355,6.374020,7.361989,-9.055184,-6.250305,9.256899,9.980355,5.626169,1.863862,-8.437406,-8.189495,6.390262,-8.840649,2.139418,-7.329166,2.046176,5.937565,5.107963,-7.418662,4.906627,-3.087146,0.006029,-3.724403,7.046901,-5.709051,9.131228,-5.379219,5.094985,-0.002014,8.113325,-1.666031,-6.100517,-8.155825,-0.090529,5.019798,4.949549,0.968226,-0.784020,-0.380120,3.835339,7.210690,3.070289,2.592661,-3.286909,-6.278227,2.854159,-6.223814,-7.445980,5.409025,7.949558,-4.252134,-8.981993,2.079656,0.937787,-1.915798,1.889996,9.395832,5.622487,1.309526,-5.683297,-5.670411,4.584631,3.568546,4.639239,-1.429611,-0.348700,7.163581,-7.229894,8.695581,-7.841641,-2.692048,9.695178,2.919132,8.723131,-0.065078,-2.403038,2.844461,7.157412,0.457885,8.235224,9.129406,6.014646,0.433893,-1.568116,4.342056,-6.551145,-3.156864,-1.420831,4.781309,-0.094301,9.036348,-3.398015,-6.791401,-2.460104,-0.401048,-3.171605], dtype = "float32")#candidate|3877|(216,)|const|float32
call_3875 = relay.TupleGetItem(func_2714_call(relay.reshape(const_3876.astype('bool'), [1536,]), relay.reshape(const_3877.astype('float32'), [12, 18]), ), 2)
call_3878 = relay.TupleGetItem(func_2718_call(relay.reshape(const_3876.astype('bool'), [1536,]), relay.reshape(const_3877.astype('float32'), [12, 18]), ), 2)
uop_3885 = relay.log(var_3855.astype('float64')) # shape=(11, 13, 4)
output = relay.Tuple([bop_3866,call_3871,const_3872,call_3875,const_3876,const_3877,uop_3885,])
output2 = relay.Tuple([bop_3866,call_3873,const_3872,call_3878,const_3876,const_3877,uop_3885,])
func_3892 = relay.Function([var_3855,], output)
mod['func_3892'] = func_3892
mod = relay.transform.InferType()(mod)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3893 = relay.var("var_3893", dtype = "float64", shape = (11, 13, 4))#candidate|3893|(11, 13, 4)|var|float64
func_3892_call = mutated_mod.get_global_var('func_3892')
call_3894 = func_3892_call(var_3893)
output = call_3894
func_3895 = relay.Function([var_3893], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3897 = relay.var("var_3897", dtype = "float64", shape = (2, 15, 14))#candidate|3897|(2, 15, 14)|var|float64
uop_3898 = relay.atan(var_3897.astype('float64')) # shape=(2, 15, 14)
output = relay.Tuple([uop_3898,])
output2 = relay.Tuple([uop_3898,])
func_3900 = relay.Function([var_3897,], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
var_3901 = relay.var("var_3901", dtype = "float64", shape = (2, 15, 14))#candidate|3901|(2, 15, 14)|var|float64
output = func_3900(var_3901)
func_3902 = relay.Function([var_3901], output)
mutated_mod['func_3902'] = func_3902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4039 = relay.var("var_4039", dtype = "int16", shape = (14, 6, 15))#candidate|4039|(14, 6, 15)|var|int16
var_4040 = relay.var("var_4040", dtype = "int16", shape = (14, 6, 15))#candidate|4040|(14, 6, 15)|var|int16
bop_4041 = relay.logical_xor(var_4039.astype('int16'), relay.reshape(var_4040.astype('int16'), relay.shape_of(var_4039))) # shape=(14, 6, 15)
output = bop_4041
output2 = bop_4041
func_4049 = relay.Function([var_4039,var_4040,], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mutated_mod.get_global_var('func_4049')
var_4051 = relay.var("var_4051", dtype = "int16", shape = (14, 6, 15))#candidate|4051|(14, 6, 15)|var|int16
var_4052 = relay.var("var_4052", dtype = "int16", shape = (14, 6, 15))#candidate|4052|(14, 6, 15)|var|int16
call_4050 = func_4049_call(var_4051,var_4052,)
output = call_4050
func_4053 = relay.Function([var_4051,var_4052,], output)
mutated_mod['func_4053'] = func_4053
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4321 = relay.const([[[1.932165,9.989878,-9.745088,-3.063946,1.261848,0.684180,7.311558]],[[2.193978,-9.156202,5.816429,-7.727986,-0.032246,0.351897,1.744543]],[[4.491444,5.578813,-9.754695,-9.049582,6.496599,8.519021,-2.389032]],[[5.421244,6.566615,8.852689,-9.373064,9.218186,7.581916,-2.150081]],[[-9.397879,8.889216,-7.512056,-4.225453,6.930986,-5.973211,9.900611]]], dtype = "float64")#candidate|4321|(5, 1, 7)|const|float64
uop_4322 = relay.acos(const_4321.astype('float64')) # shape=(5, 1, 7)
output = uop_4322
output2 = uop_4322
func_4324 = relay.Function([], output)
mod['func_4324'] = func_4324
mod = relay.transform.InferType()(mod)
output = func_4324()
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4326 = func_4324_call()
call_4327 = func_4324_call()
output = call_4326
output2 = call_4327
func_4328 = relay.Function([], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
output = func_4328()
func_4329 = relay.Function([], output)
mutated_mod['func_4329'] = func_4329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4341 = func_4328_call()
call_4342 = func_4328_call()
output = call_4341
output2 = call_4342
func_4383 = relay.Function([], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
output = func_4383()
func_4384 = relay.Function([], output)
mutated_mod['func_4384'] = func_4384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4396 = relay.var("var_4396", dtype = "int16", shape = (2, 12, 4))#candidate|4396|(2, 12, 4)|var|int16
var_4397 = relay.var("var_4397", dtype = "int16", shape = (2, 12, 4))#candidate|4397|(2, 12, 4)|var|int16
bop_4398 = relay.bitwise_and(var_4396.astype('int16'), relay.reshape(var_4397.astype('int16'), relay.shape_of(var_4396))) # shape=(2, 12, 4)
func_3382_call = mod.get_global_var('func_3382')
func_3385_call = mutated_mod.get_global_var('func_3385')
var_4404 = relay.var("var_4404", dtype = "int64", shape = (588,))#candidate|4404|(588,)|var|int64
call_4403 = relay.TupleGetItem(func_3382_call(relay.reshape(var_4404.astype('int64'), [7, 7, 12])), 0)
call_4405 = relay.TupleGetItem(func_3385_call(relay.reshape(var_4404.astype('int64'), [7, 7, 12])), 0)
output = relay.Tuple([bop_4398,call_4403,var_4404,])
output2 = relay.Tuple([bop_4398,call_4405,var_4404,])
func_4407 = relay.Function([var_4396,var_4397,var_4404,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
var_4408 = relay.var("var_4408", dtype = "int16", shape = (2, 12, 4))#candidate|4408|(2, 12, 4)|var|int16
var_4409 = relay.var("var_4409", dtype = "int16", shape = (2, 12, 4))#candidate|4409|(2, 12, 4)|var|int16
var_4410 = relay.var("var_4410", dtype = "int64", shape = (588,))#candidate|4410|(588,)|var|int64
output = func_4407(var_4408,var_4409,var_4410,)
func_4411 = relay.Function([var_4408,var_4409,var_4410,], output)
mutated_mod['func_4411'] = func_4411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4419 = func_4328_call()
call_4420 = func_4328_call()
uop_4428 = relay.acosh(call_4419.astype('float32')) # shape=(5, 1, 7)
uop_4430 = relay.acosh(call_4420.astype('float32')) # shape=(5, 1, 7)
func_2884_call = mod.get_global_var('func_2884')
func_2887_call = mutated_mod.get_global_var('func_2887')
const_4432 = relay.const([[-2.353487],[-2.128355],[-7.617340],[-0.423565],[0.251283],[-8.807072],[5.929934],[-1.315071],[3.324141],[6.339489],[-3.879905],[0.424788],[4.243867],[4.411626],[7.547630],[-3.595521],[5.154524],[5.632276],[-3.732224],[-5.604719],[4.027323],[6.961226],[5.925054],[-3.959434],[-5.090877],[-9.659170],[5.060767],[5.013502],[-4.329476],[-9.766156],[-6.445425],[-1.992660],[1.134481],[0.014635],[3.155027],[0.881814],[2.143131],[-0.980293],[-0.392417],[2.282346],[-4.344085],[7.324110],[-0.437758],[-9.768871],[1.628690],[-5.946725],[7.955156],[7.419698],[-5.995716],[-6.901131],[4.593147],[-6.762063],[-4.738653],[7.489705],[-2.325343],[7.684847],[-8.179074],[-3.142600],[9.672795],[-5.834612],[7.497516],[1.016638],[7.167960],[2.463876],[5.382276],[1.283080],[5.999773],[9.896401],[-3.483355],[0.303149],[-0.785117],[6.189295],[6.054333],[3.716108],[-5.278197],[-8.403348],[-3.085925],[-4.213760],[-0.093322],[1.728665],[4.193569],[-4.859148],[-1.798365],[5.409868],[4.915670],[1.581699],[7.714116],[-6.704774],[-9.601322],[-4.550507],[8.151168],[-4.019443],[-2.183226],[6.510513],[-9.667321],[-4.999788],[-9.913484],[8.175753],[1.279310],[5.372550],[2.035603],[-7.835210],[-2.161721],[5.090687],[-3.742911],[7.570930],[-9.580115],[9.689041],[3.325881],[-1.708930],[5.136641],[7.546965],[4.506152],[-3.906217],[1.760233],[4.565322],[7.795354],[-6.732322],[4.384171],[-7.585805],[8.831435],[8.855295],[-3.275429],[-1.295524],[-6.850339],[1.136959],[1.550166],[4.951274],[5.338478],[8.544987],[5.661865],[8.192041],[-3.340243],[-3.847052],[-5.123603],[5.242236],[5.079609],[6.174813],[9.809807],[4.341038],[-8.952538],[6.036878],[3.734487],[4.100338],[9.221232],[-0.541020],[8.561761],[7.782811],[4.565210],[7.726837],[-1.333817],[8.863023],[-5.344872],[7.211491],[-5.747129],[7.938469],[-3.617281],[-0.403381],[3.360730],[-1.992142],[6.890459],[5.180294],[2.241063],[-7.680871],[3.236934],[-3.651595],[0.095077],[1.852445],[-1.470088],[0.033633],[5.053420],[-7.260844],[-6.135917],[3.499522],[-1.336785],[-2.128172],[-4.688243],[-1.515067],[-7.258421],[-8.961242],[4.890482],[2.887608],[-2.652472],[-5.367237],[-5.777191],[9.971381],[-1.639937],[2.790642],[9.833221],[-1.415541],[-6.048208],[2.667422],[-7.434811],[-8.932935],[-1.368981],[-9.519567],[3.354424],[-4.829094],[-1.129515],[6.849746],[4.972530],[-3.403524],[-4.648347],[-6.955473],[9.332716],[6.097057],[3.654197],[-0.532459],[-4.960881],[-3.950964],[-1.743817],[-1.272152],[-8.088408],[8.975427],[5.115990],[9.627994],[-6.917215],[-3.855300],[3.950333],[-5.076086],[8.840608],[8.760372],[-2.235285],[4.535386],[-1.417555],[5.377568],[-6.612984],[0.345716],[8.048784],[-5.140852],[0.659516],[1.328572],[1.532662],[-3.412936],[-3.534559],[5.484757],[-0.577542],[-8.940588],[8.141674],[9.241449],[6.900301],[-2.203986],[0.786437],[-6.037403],[-2.179396],[7.604719],[4.195693],[3.895227],[5.604062],[8.311987],[-5.544148],[9.651275],[9.200082],[7.170679],[7.810900],[2.270496],[-3.386155],[9.374089],[9.630969],[-0.901280],[-5.103463],[0.514551],[-1.930967],[-5.963689],[-3.523920],[7.380657],[8.873852],[3.536627],[-4.298384],[1.094051],[0.167551],[-3.776682],[-5.991701],[1.221877],[3.953790],[0.432286],[-5.499041],[8.332272],[-2.459054],[-2.399416],[-3.278858],[8.669504],[-0.590301],[-1.416969],[-6.969032],[5.662459],[-8.536732],[7.877999],[9.883213],[-3.152982],[-6.885217],[-8.810762],[-6.177028],[1.248176],[5.960522],[5.335364],[2.035115],[0.126256],[5.889605],[-5.052979],[7.957687],[-8.313886],[4.251727],[-0.947737],[-3.960444],[3.192985],[2.824250],[8.944027],[-6.414160],[-7.107228],[-1.835260],[5.796981],[-6.149487],[-1.296555],[-2.678648],[5.482984],[-7.191530],[-4.168403],[5.356594],[-5.170502],[8.899924],[-5.230020],[7.835264],[2.752783],[-5.952812],[6.234024],[3.870259],[-6.735574],[-0.096920],[-0.195679],[4.756264],[-0.040382],[6.154346],[4.059313],[-1.013311],[-3.631592],[-4.273742],[-2.857959],[7.979868],[5.133704],[7.324860],[-6.082914],[2.560779],[-3.558694],[7.941260],[-1.510998],[4.692020],[-4.942229],[6.909812],[3.058506],[0.980726],[-7.639644],[3.327380],[9.466335],[-9.466678],[-4.862808],[-0.214322],[-6.749859],[-7.410723],[4.790872],[4.314154],[-5.760373],[-2.542434],[9.558285],[8.765288],[2.205630],[7.704889],[-5.660798],[-4.688831],[4.153455],[-1.860905],[-8.596926],[-5.883305],[-7.968343],[-6.216894],[4.760936],[4.517519],[-0.636268],[-5.966006],[-9.456112],[-0.354443],[5.569251],[9.921961],[-7.306830],[0.847886],[-0.504725],[-2.212404],[-2.896953],[5.449663],[7.508172],[-0.355426],[-7.077627],[-1.840767],[-3.592669],[-2.353961],[-6.842644],[-4.815928],[-2.942086],[8.878163],[-9.539110],[-8.503637],[-4.281687],[1.073644],[-2.676666],[7.283880],[-2.267342],[-6.796227],[-9.670838],[2.702928],[1.868387],[7.784713],[9.089793],[1.310988],[4.016447],[-6.791562],[-7.475987],[-7.281538],[5.293607],[5.685439],[-9.800181],[1.264981],[6.103483],[3.803194],[9.646964],[-6.005546],[1.554361],[-7.734668],[3.594842],[-4.815438],[2.105029],[-5.607472],[-8.381403],[-8.484951],[1.832255],[7.356853],[5.025609],[-7.792054],[-4.305466],[-4.319144],[7.533933],[-7.968979],[-4.231967],[1.836438],[2.707498],[-0.095786],[-6.437232],[-0.439542],[5.047384],[6.297356],[-8.037355],[-3.559509],[4.450631],[-8.597718],[6.153612],[7.759413],[3.346791],[4.892946],[8.872297],[-3.107003],[-2.767793],[5.426592],[2.711265],[2.965707],[-2.121798],[7.730746],[3.769002],[-2.345099],[7.098186],[-5.451414],[0.641055],[4.070847],[-1.511348],[-3.875997],[3.308029],[-0.847346],[0.954402],[-8.620639],[3.402848],[7.261009],[-4.101316],[-4.731041],[0.328869],[1.344494],[-6.637409],[2.851898],[8.029145],[-0.735279],[5.149503],[3.618542],[6.441397],[-6.472369],[9.261430],[-0.846695],[1.110992],[0.959587],[-8.949224],[0.390647],[-8.975046],[-3.771446],[4.359338],[6.102565],[-2.041488],[-5.116806],[-5.811787],[-2.021271],[0.324738],[2.897343],[-9.128082],[9.745106],[0.919901],[6.283085],[-2.173647],[7.949956],[5.690624],[5.131015],[5.281665],[-0.873423],[5.142685],[1.908096],[-7.769917],[4.239496],[2.815235],[5.537759],[-3.966053],[3.914083],[0.675197],[-8.742004],[0.232618],[-0.727688],[3.337567],[9.904669],[-2.925612],[0.376240],[-1.504369],[-8.403744],[-0.670865],[-4.987008],[-6.285058],[0.987802],[-3.074381],[-7.883376],[-2.653758],[-2.677736],[4.891861],[-4.283787],[-8.385331],[8.881502],[3.713323],[-2.809625],[-8.038301],[0.912810],[1.503538],[-9.207425],[3.593749],[-6.747724],[-7.632076],[3.563784],[1.460790],[-4.060629],[-8.714859],[-4.899808],[8.180888],[-5.224292],[-5.852603],[-1.482907],[8.967775],[7.934605],[-1.144468],[-3.791320],[-2.892997],[3.306001],[4.659847],[6.908293],[-5.062842],[0.820402],[-6.072750],[-1.008786],[-6.125683],[2.921488],[6.643872],[7.309240],[2.091724],[4.451839],[-7.871845],[1.554015],[5.495504],[1.961749],[5.655738],[0.783914],[-2.480969],[-9.791231],[-9.974801],[-6.674339],[9.496601],[0.262032],[-4.970297],[8.631383],[-6.602565],[7.482179],[-4.799474],[6.087484],[9.426073],[9.584181],[3.967003],[0.564830],[3.997128],[-8.682396],[-1.774280],[-4.883292],[-4.960578],[-7.023062],[-1.725708],[-0.452561],[4.295855],[8.772773],[-3.398777],[3.362381],[5.734448],[-5.486932],[8.211406],[6.846795],[-2.459936],[9.454210],[-5.432291],[-3.391171],[1.700622],[9.697621],[4.498325],[-0.361190],[8.959386],[-8.539969],[-5.343422],[-5.715494],[-0.345081],[-2.967751],[-2.629423],[2.546264],[-7.877811],[9.412470],[-2.521010],[0.048773],[-6.152354],[-0.497956],[9.906033],[-0.177374],[-9.127095],[-9.090377],[-9.102233],[1.912552],[-4.211077],[3.735674],[6.654402],[8.618156],[0.275705],[-2.489858],[-2.592702],[9.607165],[7.134481],[-7.396163],[0.825535],[1.876415],[-8.663308],[-9.654150],[-4.666458],[3.485209],[-1.357498],[4.910638],[4.052337],[6.753541],[5.347762],[8.487057],[3.727553],[2.529605],[-4.045053],[2.461611],[-0.662695],[8.723486],[5.114933],[-5.981226],[0.523426],[-4.325266],[-7.775847],[2.712855],[-2.328372],[-9.492701],[0.525131],[7.664532],[-2.000074],[2.576701],[4.230941],[-3.343611],[0.040767],[-6.574431],[-7.730486],[3.613671],[-0.125854],[7.633965],[0.133943],[5.925232],[6.459289],[-8.456843],[7.455199],[5.946689],[-6.018627],[-2.182664],[-5.670174],[0.013948],[-8.498693],[-5.319543],[-0.054466],[4.256544],[4.182973],[6.091904],[7.919211],[-3.218550],[-8.912929],[9.962807],[-4.132893],[-3.338563],[2.169093],[-3.411037],[7.451291],[-4.537898],[0.991521],[-6.178749],[-3.437547],[1.621942],[-5.696218],[-2.617708],[8.406408],[-5.056373],[5.164952],[0.124056],[0.630369],[-9.577112],[-0.026124],[-5.282983],[3.782223],[2.335935],[8.525920],[-2.241826],[7.390202],[7.475437],[9.646482],[-4.641070],[-8.002525],[-0.053672],[-4.780684],[0.168099],[0.902910],[6.305301],[0.296365],[-3.987580],[-7.263346],[6.634656],[9.283435],[5.374211],[9.816638],[1.350465],[-6.341962],[5.610740],[-0.550705],[7.985284],[9.406220],[-2.168312],[-2.725709],[-2.677615],[4.055893],[-1.141231],[3.005318],[0.362264],[-9.253579],[5.318307],[5.318652],[-5.528735],[-9.043303],[-9.071914],[7.089841],[-7.463841],[6.032392],[-8.257947],[-6.714067],[5.678200],[4.014620],[1.035271],[5.901393],[7.651593],[9.948438],[-3.529408],[4.912370],[-0.639814],[-3.148181],[9.697110],[-1.554876],[0.043850],[-5.522574],[-2.461312],[-2.041246],[4.167291],[3.927518],[-0.873880],[6.966859],[-2.016077],[8.115369],[-3.213052],[9.907484],[-9.912830],[1.720439],[-0.427176],[2.882552],[0.387500],[0.840231],[-1.524024],[0.516340],[7.243819],[-0.578495],[-5.405758],[2.262431],[-0.440347],[4.663217],[-0.349565],[-4.665443],[-1.521957],[-2.292368],[2.093549],[-5.333617],[9.315921],[-6.659411],[-3.391048],[8.380799],[6.257268],[9.261773],[-0.072906],[-7.487798],[4.536059],[8.705701],[3.480973],[9.788853],[6.969488],[-4.235489],[8.258487],[-5.444711],[-7.391163],[7.425443],[-8.052131],[-5.718473],[-8.762492],[9.338206],[-0.384121],[-5.460240],[4.981149],[3.711635],[1.469357],[7.199184],[-7.464151],[5.436272],[-7.872017],[4.102615],[1.272535],[3.312073],[1.403954],[6.856022],[-2.229195],[-1.327634],[-3.282310],[-4.262144],[-4.451701],[-6.994840],[-6.388263],[1.822858],[6.951267],[3.901540],[-8.103384],[-6.721900],[1.551039],[4.216452],[2.569824],[-5.422982],[-1.367909],[9.835488],[5.769385],[-3.070239],[2.899383],[0.463389],[-3.413439],[1.715926],[-0.977987],[-2.457840],[1.498685],[-7.836884],[-5.114565],[5.552167],[-6.309283],[6.228992],[3.470600],[6.173090],[6.879618],[-6.909083],[2.797061],[-3.268266],[-4.516406],[9.915825],[-8.684148],[2.419342],[5.168835],[-8.280271],[-8.369709],[2.131272],[-2.897601],[5.795400],[7.003080],[-4.359283],[-4.905390],[-3.629282],[1.363716],[-9.713526],[-4.135265],[-5.743984],[1.329736],[-0.855180],[0.236782],[-5.028377],[-3.092118],[-9.131935],[9.554495],[-3.023834],[-1.087886],[5.165494],[-0.975585],[-2.130267],[-0.986220],[2.354015],[6.574892],[-3.756256],[-4.050579],[8.416284],[7.737954],[9.675659],[8.097769],[-7.665207],[2.441061],[-8.474715],[-2.314753],[-5.216960],[6.591064],[-5.796493],[5.746214],[-7.251095],[1.948285],[2.400285],[3.657760],[0.961852],[0.111230],[-2.273467],[-2.140011],[6.653046],[-5.707459],[9.882951],[3.946282],[9.454614],[3.646352],[-6.066773],[9.011937],[1.968966],[0.317496],[-1.812376],[6.388852],[-2.730717],[-6.705120],[8.656717],[5.472611],[-4.819777],[-5.681547],[-6.318449],[-8.779460],[-2.118067],[8.276363],[-4.618023],[4.381310],[4.144483],[4.461078],[1.907633],[5.285387],[7.064974],[7.286587],[-2.809949],[6.734795],[-9.694256],[3.783796],[2.442610],[-1.989650],[6.043041],[-1.495969],[-5.320445],[8.828029],[6.629768],[-8.893905],[9.140661],[-3.475533],[4.050377],[8.170324],[-4.748652],[2.613627],[4.852488],[-3.665172],[-2.403793],[-2.611011],[-8.310258]], dtype = "float64")#candidate|4432|(1008, 1)|const|float64
call_4431 = func_2884_call(relay.reshape(const_4432.astype('float64'), [9, 8, 14]))
call_4433 = func_2884_call(relay.reshape(const_4432.astype('float64'), [9, 8, 14]))
const_4449 = relay.const([[[4.154372,-1.521825,4.402433,-3.404127,3.958328,-0.803994,-8.176073],[4.052538,0.701414,-3.822234,-3.482681,-3.484707,-1.202348,-6.693386],[0.970917,9.017272,0.658756,-8.508923,-4.377817,-2.100345,-4.449709],[-7.941619,6.467889,-5.824502,9.304684,-2.980222,-7.358977,6.031986],[-9.677553,5.817707,9.385736,1.161215,-6.854420,0.103244,-7.823116],[-2.428554,-9.389199,6.631770,1.066247,-3.875578,-4.358187,-0.761003],[-9.489948,-8.877944,-6.634310,-5.762696,-4.497440,-1.091169,6.223518]],[[5.241247,7.302111,6.426057,6.573893,-6.136009,-3.497686,7.134128],[5.456988,-2.868104,1.928230,2.136157,-5.920073,5.157768,5.797555],[0.207918,-4.407932,-9.262243,-1.971427,3.117291,-9.312992,-7.335444],[3.178912,-8.190364,-0.371974,-8.026404,8.054843,9.834060,0.921098],[-8.953959,-7.408119,-7.822416,4.629265,6.977050,-6.833390,9.442043],[-5.943990,7.909187,2.331619,-6.048539,-7.397776,8.873572,-6.365282],[5.924915,0.319332,-7.713269,5.439192,-4.904742,5.229361,5.964528]],[[7.610347,9.364569,-2.961856,1.501665,-8.992164,3.059019,-0.622677],[-0.312246,2.443063,-2.075184,7.056812,8.529718,4.048597,8.865367],[1.490630,-2.269131,8.053909,-4.049968,3.634380,0.479614,7.046652],[-3.450558,6.423607,9.653325,7.132707,-6.469908,-9.379609,4.737620],[3.898645,2.111960,8.476575,9.593849,0.104587,8.523716,4.043376],[-0.027331,7.761310,-3.362919,0.589536,-3.875374,-1.763364,3.686095],[-4.363285,-8.891061,-7.152510,-5.771863,-8.145486,-3.522079,5.359721]],[[-9.319183,4.634484,2.621490,1.983119,8.891624,3.512491,5.157601],[-9.532463,6.951656,-7.003163,4.258166,7.847392,-3.662217,0.448744],[4.155260,-2.520251,-9.303455,-4.745861,0.745997,5.504318,-3.105302],[-1.804648,-9.971431,-7.218509,1.872237,-3.664347,8.716613,-9.466951],[0.879333,5.986195,-8.407107,-7.544881,3.178182,-5.750453,-5.091529],[6.845916,9.397256,3.332773,8.096614,0.725844,-4.366124,0.485474],[3.058762,0.712124,1.598442,8.988258,3.002626,-0.210817,-5.048415]],[[6.885448,0.048435,0.219749,-6.743831,-3.389543,-9.267839,-8.499125],[3.406939,0.024570,5.858698,2.638739,6.453703,-8.218167,-3.270433],[9.036603,7.832682,-6.564116,5.102222,5.642391,-7.205649,8.111263],[1.853479,0.148809,8.130735,3.555712,2.431491,-2.536247,2.083974],[4.587066,7.336301,-2.134269,3.300341,7.684482,-6.247345,-3.431500],[0.329677,-7.719308,3.696656,6.068131,-5.486947,0.215515,-8.232941],[-6.109898,-2.665387,4.772124,-4.069348,8.456242,-6.639142,-8.956896]]], dtype = "float32")#candidate|4449|(5, 7, 7)|const|float32
bop_4450 = relay.greater_equal(uop_4428.astype('bool'), const_4449.astype('bool')) # shape=(5, 7, 7)
bop_4453 = relay.greater_equal(uop_4430.astype('bool'), const_4449.astype('bool')) # shape=(5, 7, 7)
uop_4456 = relay.sqrt(bop_4450.astype('float64')) # shape=(5, 7, 7)
uop_4458 = relay.sqrt(bop_4453.astype('float64')) # shape=(5, 7, 7)
func_1012_call = mod.get_global_var('func_1012')
func_1016_call = mutated_mod.get_global_var('func_1016')
const_4461 = relay.const([7,3,5,-2,-8,7,-8,7,-2,-8,-10,2,-9,1,-4,-4,8,-3,-1,-1,3,-7,9,-5,-2,-1,-10,-6,8,3,-10,3,4,4,2,6,-3,6,-7,-1,4,3,7,-6,-9,-4,-6,10,6,-9,7,-6,10,-2,-5,-8,-7,4,2,-6,9,-3,-9,-8,5,5,-3,-6,-3,2,1,6,10,-1,-9,7,-9,6,-1,4,2,-2,8,-7,-6,8,8,-7,-3,-5,5,2,-2,3,3,-1,-7,-9,3,-8,7,-6,10,-7,2,-5,4,1,8,-9,-3,5,5,7,-1,7,-2,5,6,3,4,5,5,-5,-1,-5,7,6,-5,-10,-9,6,-9,3,5,-3,4,-8,-3,-4,-7,1,-1,4,2,-4,-10,-4,3,4,3,-6,5,-6,5,3,10,-4,2,7], dtype = "int16")#candidate|4461|(160,)|const|int16
call_4460 = relay.TupleGetItem(func_1012_call(relay.reshape(const_4461.astype('int16'), [8, 4, 5]), relay.reshape(const_4461.astype('int16'), [8, 4, 5]), ), 0)
call_4462 = relay.TupleGetItem(func_1016_call(relay.reshape(const_4461.astype('int16'), [8, 4, 5]), relay.reshape(const_4461.astype('int16'), [8, 4, 5]), ), 0)
output = relay.Tuple([call_4431,const_4432,uop_4456,call_4460,const_4461,])
output2 = relay.Tuple([call_4433,const_4432,uop_4458,call_4462,const_4461,])
func_4470 = relay.Function([], output)
mod['func_4470'] = func_4470
mod = relay.transform.InferType()(mod)
mutated_mod['func_4470'] = func_4470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4470_call = mutated_mod.get_global_var('func_4470')
call_4471 = func_4470_call()
output = call_4471
func_4472 = relay.Function([], output)
mutated_mod['func_4472'] = func_4472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4552 = func_4324_call()
call_4553 = func_4324_call()
output = call_4552
output2 = call_4553
func_4562 = relay.Function([], output)
mod['func_4562'] = func_4562
mod = relay.transform.InferType()(mod)
output = func_4562()
func_4563 = relay.Function([], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4588 = func_4328_call()
call_4589 = func_4328_call()
uop_4590 = relay.rsqrt(call_4588.astype('float64')) # shape=(5, 1, 7)
uop_4592 = relay.rsqrt(call_4589.astype('float64')) # shape=(5, 1, 7)
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
const_4594 = relay.const([[-7.975177,9.316107,-5.735673,-8.146322,1.492449,-1.393216,4.001445,4.782779,-1.725135,6.751319,-4.819783,-5.970829,9.818637,3.637111,-5.812817,-5.944644,0.732439,2.669199,-5.490523,9.876557,6.448236,-2.546594,8.543882,6.533716,-1.357061,5.402597,-6.885922,1.049778,8.984159,5.050819,-5.303742,4.912746,-9.749628,0.920737,-0.138924,-6.910493,-7.364795,-8.983891,9.369863,8.423196,-6.441723,-6.888534,-4.475400,9.851398,-7.250363,-0.427591,-9.669378,-3.395641,-1.522674,2.665016,4.375961,-2.287780,-4.963792,7.109156,-9.172457,4.736202,3.118086,6.601724,0.335582,-4.674770,2.130113,-8.992685,-6.345773,-3.187872,-6.652359,8.104111,-3.002206,6.808863,-8.881863,-6.277293,-5.259552,0.516047,6.126971,6.848241,9.283407,-4.097730,-7.120271,-8.584343,-8.577968,4.716367,-9.863718,-9.305893,-8.028637,8.529619,-8.694328,3.610974,0.808007,-4.885743,4.779146,-5.804137,6.428769,-6.575560,2.837764,-0.745739,6.086677,3.098446,-3.911210,-2.100555,1.156441,7.741845,6.350165,-6.338548,-7.688948,8.843258,5.995043,-3.263539,9.758241,-2.091173,-1.873658,-1.752907,7.567148,5.428374,0.296616,-5.459786,-8.928971,-5.188041,6.862532,-8.012115,6.713735,7.212642,6.340836,-2.158096,-5.644777,-6.010369,0.762603,8.252591,-9.502776,5.347556,-3.248167,-8.121020,4.022305,7.532958,-3.637781,-3.423476,5.150055,-7.273864,-1.770612,8.785728,7.178682,8.565723,-8.474595,5.926629,0.822863,-7.165633,8.080518,-0.998986,3.935038,8.730804,-4.284480,-7.980874,1.488107,-3.601254,5.251534,9.192052,0.725143,5.951269,0.564815,-5.804439,0.968682,-3.811594,-2.336659,-3.652263,-9.915651,5.994070,3.646610,9.171266,-6.611141,-9.477434,0.792539,-4.268602,-7.733391,1.738537,5.089474,7.894426,-6.353780,7.777542,-0.325128,8.624346,4.244566,5.377146,-1.891881,5.750270,2.211267,-9.736176,2.114830,8.681393,-4.392618,1.222826,0.804672,0.011095,1.087688,-6.844147,-4.449820,-6.964654,-1.351273,-4.457072,-7.983831,9.593905,-3.052192,5.245899,-6.399549,1.032592,7.035862,-0.445833,3.080155,-3.673017,-9.837800,0.758869,-1.424174,-1.763575,7.469606,0.766180,2.678813,5.678453,-4.471486,7.779039,-8.023356,-3.589046,-4.540235,-7.094264,-4.527501,-1.563375,4.384004,7.685067,4.989821,-3.058003,-4.993507,3.627425,-6.871169,6.564715,6.940869,9.640435,-3.327391,0.557241,2.698837,-4.340359,-4.173772,-9.391949,-9.537263,-3.214075,-2.183218,7.854679,-5.799824,-0.173906,4.258204,-5.400319,-9.965526,-9.558577,0.275744,3.196022,0.400078,-8.175891,-7.024656,9.894581,-8.064159,9.250116,-3.713590,8.955166,2.531163,4.733287,-3.913368,7.456160,-1.703277,0.937760,9.089081,-2.824902,-9.272248,-4.033645,6.423789,-4.400338,7.668317,-8.028711,-3.999376,1.201375,6.427789,-5.723932,-1.446518,8.113778,-3.861480,-3.238769,7.982288,-2.608254,2.868941,2.406209,2.399451,-8.182715,5.165281,-4.870271,-7.455699,7.786364,1.521643,8.460087,6.496973,-7.997766,4.425601,9.248890,0.778129,2.618196,-2.826273,7.930269,-0.693424,0.683829,0.520418,0.622565,7.875595,0.576454,-0.756043,-9.405172,1.765159,3.121026,9.494942,-4.894408,3.828622,3.705600,-1.625149,7.024855,-1.862487,-4.090071,-6.138379,9.241941,-0.736974,-0.392582,-5.665194,-7.689396,1.259895,-8.466047,-5.113498,7.862670,-1.068910,8.083104,-2.545180,2.139105,6.589135,-9.351185,8.587319,1.549054,-0.700353,0.164805,-1.994811,5.515626,7.193695,-4.441137,-2.103578,8.367015,-4.627981,2.410025,4.038520,1.955647,-5.007416,4.822283,-5.635336,5.979783,-9.345291,9.396509,-4.621111,3.664980,-8.973161,7.392100,5.785714,-6.763735,7.078937,-0.621383,-0.644698,-4.744606,1.458004,5.283284,-9.329006,9.388216,5.496795,-7.619831,6.000037,9.789440,2.683467,-9.414310,-6.849517,8.712310,-3.360374,-1.174032,7.054847,1.784027,-6.939980,-1.634370,3.288710,-6.169494,-2.171851,-5.505984,-4.312612,-5.713186,-2.107619,-7.281076,0.179970,-6.160525,-7.659135,-6.241682,4.179131,-2.709028,-3.089042,3.445266,-5.873123,-9.329648,-5.453569,-1.344392,4.573771,-1.424589,5.364584,-0.183995,-7.908084,-3.860520,4.879770,9.481801,-7.690964,0.033252,-5.608167,-9.989120,-6.215591,-7.702571,3.088387,1.306444,6.233833,-4.992566,-8.383110,9.286737,-9.337159,8.023182,-0.135844,-2.885618,2.990361,-2.430720,-0.221386,-3.651710,8.128359,1.706139,-9.442043,4.157261,1.979355,-3.539472,-2.371292,-7.145526,-5.528215,4.503710,-9.542305,5.745085,8.422608,-3.246669,5.220464,-7.936848,3.570497,7.345206,-1.618357,3.468509,4.055490,5.803203,4.306938,-3.334895,-0.164506,-0.585885,5.596559,-0.993188,5.158854,6.875968,9.736624,-9.455815,4.434602,-9.015454,-2.900662,9.986755,-9.751983,-7.305452,9.208682,0.618552,-6.190669,-0.245722,1.796041,-0.533114,0.004717,9.839976,5.229781,5.909859,-6.640361,-2.497299,3.043266,-5.198306,-7.865553,3.239659,5.590485,8.666630,5.759503,2.156578,-8.555117,2.543767,1.288557,9.354690,-5.638122,-2.617456,-0.635569,-1.776673,-0.125882,1.952811,3.281808,-3.671879,5.928216,-8.172055,-9.002911,-6.602628,3.605276,-8.892486,-4.615683,9.993149,9.800099,9.544811,-0.782076,0.464544,-6.918445,6.294222,-1.945176,-5.163965,-7.788102,-9.069157,4.786990,5.575110,-3.557673,7.349958,4.349886,-1.749055,-8.920516,0.506539,7.994015,-8.976046,7.005888,8.309521,6.309296,-0.659649,-9.601188,-4.430282,6.005806,-7.777518,-2.555432,-6.779316,-1.225823,-9.992024,2.571419,3.067875,-8.648934,-2.131318,9.892927,6.165580,-7.744764,-3.276826,-4.891048,-9.579269,4.965423,-5.597331,-8.661157,3.558385,9.945901,-3.259475,1.319004,6.114404,9.481720,-3.639382,3.657202,6.714147,7.711367,-4.563195,7.218925,9.174390,9.663976,-2.257105,-3.378516,-5.346112,9.868411,-2.142155,-4.150794,-8.293456,-2.120030,-4.363849,8.906362,6.069870,-2.207095,-9.246606,-9.844916,-6.375033,5.928871,2.736583,-6.231114,0.635910,-4.466133,0.394000,9.171965,-6.695463,-9.690181,1.237896,9.096170,-9.310992,-3.277470,3.888941,-7.226310,-8.399797,-3.099451,3.620988,3.306049,-0.604471,5.851835,-7.577051,6.227876,-2.632410,-4.422256,9.809623,-4.350364,6.426415,1.411382,6.893094,-2.957942,3.636705,7.824548,3.471805,-6.442830,8.623787,8.319754,-4.092873,-5.632919,-7.602966,8.483873,-3.254950,0.708989,-7.140714,-6.215874,-1.312473,-3.151949,5.652548,7.229140,-9.760667,-7.722283,6.268441,-9.133712,8.317127,-2.224612,2.439717,2.935092,2.489754,7.374610,4.925429,7.936322,-7.826543,-1.248997,7.289478,-4.225281,9.601150,0.979021,0.010540,-7.034972,4.761224,-3.427877,-1.927102,-3.424854,8.805949,-7.481365,-4.438048,-1.715435,8.346068,-7.469356,-8.665320,-9.656652,-0.215612,-1.870743,1.985567,-4.802639,9.636070,5.370142,-4.589455,7.819696,2.686018,9.476565,5.551377,-2.962989,-8.858248,-9.660555,-6.621612,-1.717058,-7.947792,-4.256515,9.850288,-6.290000,5.119929,1.672724,-8.157610,3.624120,-8.047218,7.796065,0.925254,-9.485970,-1.881311,-1.792508,6.816910,2.502326,-7.399827,-4.013851,-7.526412,-6.570166,-3.641406,-4.902262,9.930811,4.207909,-2.818097,0.544883,-2.532217,7.387627,-1.723454,5.640384,-3.805236,-9.582064,-3.244945,-6.835869,8.990957,5.987546,-8.646238,-8.077987,7.858398,1.537630,-6.832481,4.530228,-1.072434,-0.445028,3.576072,9.517665,-6.851940,-7.910786,-2.715973,-3.962285,4.999072,3.662090,6.469888,3.707730,1.716804,-0.766222,-7.533949,8.517881,-6.799735,5.010966,2.207244,8.005261,-3.073649,1.967063,-0.011980,2.128005,0.433032,-3.039717,-4.852634,0.477776,-3.603235,-3.660500,-0.126178,-8.166138,5.592838,-3.580020,-1.991573,-2.667882,5.025008,3.177502,1.028174,7.853595,6.326814,5.793402,-5.326569,-9.489620,-6.366971,5.950926,-5.817122,3.642956,6.158264,-4.551492,7.205938,9.698974,-0.240453,9.282445,1.576912,-2.623898,-5.680679,-1.527638,2.939540,5.808315,8.987385,-4.802276,-2.151458,9.992840,7.279382,6.125767,8.000579,7.542142,4.531924,2.960100,6.731041,-9.728008,-9.581710,-5.080840,0.003869,1.390456,-3.488728,-0.986439,-4.631468,9.874738,9.012949,-5.896200,2.999328,4.872672,-5.493461,6.582704,-0.871256,9.589114,-7.565483,-4.526454,-0.310521,2.814850,7.828716,3.673929,1.446066,9.907626,-9.057873,3.325268,6.805897,-9.590720,-8.250682,-5.368329,0.495705,1.750750,3.249694,8.992349,6.374415,9.759296,-0.992786,-2.827307,2.264355,7.738328,-9.017279,1.045801,2.294609,4.421790,7.027146,-0.101414,-2.045342,-4.918369,-8.905998,7.366142,-5.231338,-5.663294,8.673567,1.242160,8.728816,-3.090526,5.592693,8.878197,-4.569356,-7.073952,-8.348480,-6.857098,-5.151409,6.458375,5.439496,2.336509,2.773180,-1.950599,-0.893704,4.177648,-1.254093,5.428591,3.882502,-8.358114,-3.069387,6.424389,-4.138447,2.272163,-4.333543,1.830017,7.988961,-3.595289,-6.085629,9.628389,-6.400080,-3.291323,2.002383,-7.093690,9.976373,-7.648057,-3.409850,-2.867298,9.153264,0.233538,-7.829834,4.536809,7.395878,-2.416829,0.485326,1.812496,-1.841739,-4.725688,9.427873,-7.347726,-9.989318,-9.166859,-1.731076,4.469929,-9.684053,-9.525951,8.508865,-8.013308,5.748534,-5.340971,4.742933,-9.468440,-7.575562,1.183091,8.810724,-4.358727,-8.160795,-0.041760,9.734860,-4.536758,3.072515,9.966974,3.741307,3.308139,-1.469854,1.403041,4.618886,-7.796702,-7.667503,-1.672843,7.532640,9.625676,2.819379,9.334965,9.379374,3.184086,-4.156138,3.460169,-3.734927,-7.120189,3.605052,-6.653895,5.105056,-4.769168,-7.946232,8.790573,3.012605,1.394973,8.720747,4.811234,3.183374,7.835068,0.963884,6.175527,0.046611,3.420687,6.890958,-2.759274,-5.199244,-8.234636,4.745355,-0.848062,3.255513,3.355366,-1.456131,0.395140,7.006989,0.847783,-1.398807,3.814467,-4.453602,-2.742161,-0.822047,-5.628667,9.313461,-9.020645,7.265264,2.067183,-2.787529,2.292182,0.396908,-1.331370,5.859338,-8.345678,-1.325206,5.207826,-0.295512,-4.546857,-1.095250,8.703560,-1.814458,-4.158767,-1.031816,-8.451923,5.349460,-6.414568,-8.232333,2.822333,-6.486388,9.340257,4.835928,-4.859239,-7.770426,4.503318,2.454507,-9.634008,-6.926006,6.680862,-6.178218,2.266530,6.795983,1.823989,3.678416,8.989026,-1.318071,-6.633951,-9.656330,9.129010,-2.767910,9.741784,8.409592,6.891946,6.844599,-2.580054,-2.650745,0.890591,4.408423,6.301708,4.798615,4.274376,-4.073318,-9.519015,-6.931102,2.436017,-5.199459,-1.451232,6.786731,5.824528,7.137000,-0.136340,8.466415,2.739756,-0.142122,7.590428,-1.889490,2.196802,4.822951,3.638661,1.688160,-0.343408,1.466320,0.990121,-6.819630,3.180810,9.866409,7.974422,0.956189,9.520233,2.101784,-0.319023,0.229807,-1.299017,6.177923,-6.179031,6.690542,-7.350613,-6.710337,5.979975,-5.183232,-5.048957,-7.749524,-1.499976,-9.543507,-4.252014,8.765112,5.123409,-9.387524,6.682329,2.766507,1.698109,-6.479986,-1.544853,1.505351]], dtype = "float32")#candidate|4594|(1, 1080)|const|float32
const_4595 = relay.const([7.829393,3.459442,4.017329,-0.998071,2.715741,-1.233534,-4.402265,9.246695,-5.578962,-5.251107,4.014905,2.681394,2.936352,1.709202,-7.026540,-2.232569,-8.761136,6.235916,6.985982,8.676860,5.279792,-9.425035,2.332969,5.701348,-8.238353,2.192658,-6.840469,4.152578,5.390834,-7.027129,9.953256,-1.519654,-8.081080,3.804736,8.339608,9.576677,-3.448352,-5.886574,4.883736,7.008730,8.607538,3.327675,5.851130,0.784808,9.855007,-7.413197,-5.236405,-4.188062,-8.851530,8.422663,4.488160,6.678332,-0.436224,4.552549,4.682650,7.596047,8.377969,4.260946,-6.315980,1.875181,-8.348102,-4.943577,-2.586572,-2.863506,-9.083129,-1.027842,-5.354944,1.863413,-2.991030,-8.675966,6.190212,-4.300922,-7.833480,2.399337,2.235246,-4.475400,-3.971979,-9.124657,4.500032,8.810749,-8.662920,0.062151,5.331912,7.938725,9.748685,-4.816523,-6.497619,8.344491,-3.332053,0.004246,-7.903169,9.738252,-8.030033,4.309822,-4.108801,5.871287,7.104885,5.397132,9.261588,-5.790682,-1.335449,3.237166,2.349259,8.950879,7.291859,1.956657,-2.498782,-1.043881,3.714437,9.307986,-8.320600,-0.391731,8.250577,9.358701,3.285651,-1.375373,-1.379632,-1.346379,-9.132407,8.024286,-5.257024,0.181115,5.684206,4.607215,-5.297629,2.898019,8.526043,-8.597807,7.645246,9.813901,7.682691,0.734005,6.090309,8.236424,6.084100,8.031991,-8.857457,1.157693,-8.274743,-0.184782,0.036650,2.597019,3.767550,4.120973,3.866300,5.497946,-3.801902,-8.532277,-3.840396,-9.774545,-2.735392,9.551794,-3.959077,7.885133,0.585477,9.873363,1.779182,6.330121,-7.148439,5.779307,4.264568,-4.031263,1.715281,6.444510,2.668995,-2.986488,2.611866,-7.843755,-3.536948,-7.158371,1.353143,-8.705638,2.163708,3.036837,-6.689603,8.682032,-5.674750,-8.464577,3.579292,0.485153,6.441777,-8.390935,-9.209919,-9.606334,-4.626229,-8.985991,4.778241,-2.140942,4.498293,-0.601307,2.133997,9.347036,-3.847162,3.957986,-5.970524,-5.837396,-3.894253,-3.952407,1.122734,2.785787,-4.284158,3.917416,-5.797588,-5.469406,5.929469,-0.454129,-4.782741,-8.840484,9.189464,-7.218489,4.033364,7.295354,-5.029516,-1.590821,-7.391739,0.920924,7.357000,-5.430831,3.564404,0.920787,-5.410065,8.228693,-2.659080,3.368874,7.974016,1.726249,-5.341529,7.279065,-7.252836,-2.127961,8.894598,9.300394,-0.876282,6.011587,-3.898033,-9.047851,-3.502285,-1.591686,-8.038571,-3.854061,2.238735,-2.757509,-6.194909,-4.583485,4.982114,8.593770,1.411228,2.723256,7.528886,4.915900,-4.258558,-2.266223,4.799357,9.947645,-7.210402,4.615611,2.382482,4.292380,5.016931,-9.961651,-6.089147,-6.116810,2.255829,5.369656,-1.229525,-0.142924,-7.346402,4.126180,8.642284,8.513039,-2.224062,-6.238356,-5.765694,3.386999,7.113365,-4.060697,9.725654,3.826954,5.214653,9.336220,5.840921,-6.257867,-6.178450,3.949267,-1.323174,8.929930,-8.760435,-5.310869,6.577065,-1.442098,8.779286,-6.762403,1.819657,3.619416,-2.663334,-3.164712,7.375873,-6.653576,-8.473832,8.288621,-3.256886,3.364721,-2.298442,-7.670319,4.957991,5.173087,5.350933,-2.752534,0.808644,7.991681,-5.454919,-5.960703,-3.705293,-6.470388,-0.732564,1.808021,-2.271961,3.685699,-3.558174,9.871317,0.567708,7.089949,-5.574125,4.404077,2.552871,-1.008819,9.016593,3.036228,3.447049,-0.656145,-9.782561,-4.985658,2.216705,6.482808,7.721816,2.449379,5.825559,-4.277028,-1.590800,-1.046987,-6.358204,-5.766957,3.356757,-5.244418,5.182012,-2.382631,-4.103853,-2.853114,4.723808,-1.286718,-0.376852,1.738538,-1.316665,-1.210935,2.571475,-8.684799,2.526318,3.227976,3.028344,8.969327,5.049952,-5.805158,-0.695817,7.276936,-6.775303,1.326363,4.504269,2.390386,-0.783180,8.539194,-1.408669,8.016070,-6.560523,-8.302640,-6.890316,-3.625795,8.517538,-2.882800,1.996064,7.814401,3.690581,0.901749,6.475629,-0.268918,-5.198629,-2.959537,7.881833,-7.160374,-9.737580,4.357371,-9.800876,-6.194065,-0.685898,5.940209,-6.104272,-6.750483,0.445789,4.993759,-7.420369,-4.297033,4.774402,2.452018,0.755083,-0.591476,-7.344592,-5.668672,2.409953,-0.579252,0.197737,8.831883,3.044652,7.157126,2.149905,4.346696,-5.290940,-3.244668,-3.776383,2.896876,1.587046,-5.718146,8.037101,-0.410905,8.464091,4.527580,4.096188,2.532100,-0.614103,1.230466,5.112080,5.875231,1.635549,9.815766,1.818867,5.537924,-3.956209,-1.670535,-1.513838,-2.006689,5.411061,7.177832,-5.232322,2.217125,3.339259,8.330336,-3.491068,1.842755,-2.891379,6.187597,6.992620,8.434019,-8.703323,5.195156,-7.009803,7.570061,3.191910,-9.035694,6.808415,-7.305254,8.998827,0.701985,-0.930165,0.112637,0.631582,-8.012565,2.471240,-8.780636,7.826292,-6.165481,6.482566,-3.972559,-9.453183,-7.854039,-8.257480,9.094256,-4.778634,0.312732,8.546067,-8.419072,-6.155705,7.108521,-6.071843,4.132544,7.380579,2.610568,9.494869,-5.859606,3.282339,0.367140,9.151498,3.107858,3.095160,4.013260,6.834957,6.411182,-9.961205,8.565432,-5.921605,7.476797,-3.415819,-6.942597,-5.156439,-0.149702,-9.408949,8.571680,-5.387580,8.231679,-0.266144,-4.639548,-9.655648,4.193671,-2.772299,8.298691,3.167319,-7.619065,-1.097479,-4.748772,7.294877,-0.225031,-3.806634,-1.559075,-0.380978,5.259468,-7.950233,-3.348780,1.468536,8.811049,-9.510331,6.513087,8.665686,9.800109,-6.233684,-9.721785,-0.459785,4.026189,3.368567,6.439587,-6.623700,-9.337934,-9.295214,8.732245,-1.341447,9.387113,-8.786614,-7.794526,7.686093,1.846255,0.890233,3.203022,-5.552398,5.394908,-4.920306,8.822448,4.019264,9.873197,-1.785165,4.633889,-5.304819,6.011049,5.066505,-1.110402,4.410908,4.397891,-7.994981,2.876766,5.987061,-5.756994,2.407125,-7.903537,6.124793,7.781492,5.977843,-1.291673,4.096104,-4.389410,3.338129,2.344060,-5.750302,-5.994414,-2.221112,0.635225,-6.552891,7.148578,2.972028,-4.048766,-6.307422,-3.972392,-5.712275,2.593661,-4.988822,8.173743,-9.617244,-7.390221,7.659259,6.529438,-8.121704,8.767476,-4.658093,3.102719,9.772777,-5.047831,2.004332,5.877797,8.330331,4.775570,-7.897622,-4.139786,-2.575233,6.941843,2.720115,9.560674,6.350006,-2.396197,4.772586,1.331410,2.854266,-3.177552,-1.158391,-9.837467,-7.354712,3.137780,-2.587821,-5.695231,-2.953016,-8.361541,-1.927322,-3.213193,5.611208,-8.447383,-2.217913,4.825709,6.277867,-2.959794,3.730971,-8.197253,-3.079304,-3.834703,0.158915,6.293035,-0.116226,4.141364,6.610772,-5.574253,-9.040770,-4.397858,-0.929822,-6.182874,2.235848,2.343152,2.884147,7.265905,7.415762,7.223865,-1.549212,-7.654516,-3.495293,4.250056,6.426186,-2.270127,-2.460811,-1.035541,-9.120113,5.304727,3.819732,-3.105162,-2.523764,7.979682,4.059198,-1.726996,3.494489,-2.418062,-5.178085,-2.484196,9.493778,9.696040,3.099220,-6.139732,-3.101624,8.260810,-9.267326,-3.278458,9.403980,-3.976687,-4.314088,-1.156959,-4.394872,-5.022476,8.226588,-3.602343,3.171459,-5.964005,-1.967766,4.107518,-0.456580,-2.728175,-0.004315,0.931540,-4.845224,1.069347,-5.830492,3.120321,-5.918864,1.886614,-9.645973,6.992221,7.196716,-9.106536,-3.548771,-0.255678,-5.665788,-7.954535,-2.728848,6.689674,7.282560,7.028806,-1.386553,-7.569946,-2.335650,-4.829182,-8.322228,8.653011,-8.075639,4.206243,9.570825,5.233420,-5.219588,-0.577341,-7.562588,-3.722862,-9.581395,2.746173,-8.783632,-2.190894,-7.493669,5.149328,-8.575342,-8.301328,-2.882697,8.966852,-1.306598,1.978746,-0.914849,5.071161,0.662815,7.445732,7.021235,4.990966,-2.977937,9.684829,-1.040961,2.096034,4.894179,1.721441,2.230200,5.297436,-7.773272,3.070324,-0.703639,3.415468,-6.422006,-5.813774,4.478555,5.593411,6.666131,-4.248188,8.756752,-3.917553,-8.777201,-4.910238,-0.722570,6.090950,-1.089811,-9.165473,5.714798,5.014334,-1.646351,7.758029,7.562718,8.873196,4.561943,-9.861944], dtype = "float32")#candidate|4595|(780,)|const|float32
call_4593 = relay.TupleGetItem(func_1580_call(relay.reshape(const_4594.astype('float32'), [12, 15, 6]), relay.reshape(const_4595.astype('float32'), [780,]), ), 1)
call_4596 = relay.TupleGetItem(func_1583_call(relay.reshape(const_4594.astype('float32'), [12, 15, 6]), relay.reshape(const_4595.astype('float32'), [780,]), ), 1)
var_4598 = relay.var("var_4598", dtype = "float64", shape = (5, 7, 7))#candidate|4598|(5, 7, 7)|var|float64
bop_4599 = relay.multiply(uop_4590.astype('uint64'), var_4598.astype('uint64')) # shape=(5, 7, 7)
bop_4602 = relay.multiply(uop_4592.astype('uint64'), var_4598.astype('uint64')) # shape=(5, 7, 7)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4615 = func_4324_call()
call_4616 = func_4324_call()
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4621 = func_4328_call()
call_4622 = func_4328_call()
output = relay.Tuple([call_4593,const_4594,const_4595,bop_4599,call_4615,call_4621,])
output2 = relay.Tuple([call_4596,const_4594,const_4595,bop_4602,call_4616,call_4622,])
func_4635 = relay.Function([var_4598,], output)
mod['func_4635'] = func_4635
mod = relay.transform.InferType()(mod)
var_4636 = relay.var("var_4636", dtype = "float64", shape = (5, 7, 7))#candidate|4636|(5, 7, 7)|var|float64
output = func_4635(var_4636)
func_4637 = relay.Function([var_4636], output)
mutated_mod['func_4637'] = func_4637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4672 = func_4324_call()
call_4673 = func_4324_call()
var_4726 = relay.var("var_4726", dtype = "float64", shape = (5, 4, 7))#candidate|4726|(5, 4, 7)|var|float64
bop_4727 = relay.not_equal(call_4672.astype('bool'), var_4726.astype('bool')) # shape=(5, 4, 7)
bop_4730 = relay.not_equal(call_4673.astype('bool'), var_4726.astype('bool')) # shape=(5, 4, 7)
func_3099_call = mod.get_global_var('func_3099')
func_3107_call = mutated_mod.get_global_var('func_3107')
var_4732 = relay.var("var_4732", dtype = "bool", shape = (48,))#candidate|4732|(48,)|var|bool
var_4733 = relay.var("var_4733", dtype = "bool", shape = (576,))#candidate|4733|(576,)|var|bool
var_4734 = relay.var("var_4734", dtype = "float32", shape = (63,))#candidate|4734|(63,)|var|float32
const_4735 = relay.const([False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False], dtype = "bool")#candidate|4735|(1536,)|const|bool
var_4736 = relay.var("var_4736", dtype = "float32", shape = (756,))#candidate|4736|(756,)|var|float32
call_4731 = relay.TupleGetItem(func_3099_call(relay.reshape(var_4732.astype('bool'), [16, 3, 1]), relay.reshape(var_4733.astype('bool'), [16, 3, 12]), relay.reshape(var_4733.astype('bool'), [16, 3, 12]), relay.reshape(var_4734.astype('float32'), [63,]), relay.reshape(const_4735.astype('bool'), [1536,]), relay.reshape(var_4736.astype('float32'), [9, 7, 12]), ), 1)
call_4737 = relay.TupleGetItem(func_3107_call(relay.reshape(var_4732.astype('bool'), [16, 3, 1]), relay.reshape(var_4733.astype('bool'), [16, 3, 12]), relay.reshape(var_4733.astype('bool'), [16, 3, 12]), relay.reshape(var_4734.astype('float32'), [63,]), relay.reshape(const_4735.astype('bool'), [1536,]), relay.reshape(var_4736.astype('float32'), [9, 7, 12]), ), 1)
func_3224_call = mod.get_global_var('func_3224')
func_3227_call = mutated_mod.get_global_var('func_3227')
const_4740 = relay.const([-1,-8,-1,8,10,-4,3,-1,4,1,9,4,5,4,3,-7,-4,9,-1,9,-5,4,2,-6,1,6,3,2,7,-9,5,3,3,5,10,-7,4,-2,-9,3,-4,-2,10,4,-9,-6,-10,-6,-2,1,4,7,-7,8,-5,-8,1,7,-5,9,-5,10,5,-10,-8,8,-9,4,4,-4,5,2,-3,7,10,-1,10,-2,-9,3,3,3,-8,10,9,5,-5,9,-5,-3,2,-2,7,-9,-6,6,-4,3,-6,-8,-6,-8,-9,6,-3,3,-5,10,-8,-8,1,-8,-1,-9,-6,3,-9,1,-9,-1,8,-10,8,-2,-6,5,-4,-2,-5,-3,9,1,6,3,-10,6,8,-10,-5,-7,3,-8,-4,-2,-5,-10,-1,-10,4,10,10,6,3,6,-8,-9,-4,10,1,-9,-8,-9,-1,-4,2,2,2,-10,2,3,1,-5,-10,5,6,6,-2,-3,-3,9,-4,7,-7,-1,5,10,-7,-10,-9,-10,10,1,10,6,-4,1,6,-4,-7,1,-10,-5,-6,-5,4,2,-1,8,6,9,1,-7,-7,9,5,-5,2,3,-7,-5,-4,-6,9,-8,-2,-6,-6,1,4,-9,-1,-4,-4,-3,5,-3,4,-6,5,-7,-1,-1,5,-2,1,6,6,7,6,3,9,-10,7,-5,10,-1,-4,-9,4,8,5,-9,5,-2,-7,4,-1,6,-10,10,2,10,6,7,-5,7,-2,-2,4,9,7,5,6,5,2,-6,9,-4,-9,4,7,-3,-8,5,-9,3,-6,5,10,9,-5,10,-3,8,-5,-4,-2,1,-4,-3,-1,-10,-3,-8,-2,6,-2,-1,1,6,10,8,9,-5,6,-7,-2,-3,-1,-9,7,-10,4,-3,3,-8,-1,6,-6,4,-8,-8,-7,7,-3,1,-4,9,4,-10,3,-1,-6,4,-9,5,-9,-10,-5,4,-5,-8,-6,6,10,7,8,8,7,8,-10,3,-6,-4,10,-1,-3,-4,5,-8,-8,8,5,9,-8,5,-10,7,-9,-8,-9,4,7,8,7,-7,-3,2,3,-9,10,10,2,7,6,-2,6,6,3,-5,2,-9,7,4,-5,-2,6,-5,7,2,9,10,-10,-9,4,5,-6,-2,6,-4,8,-7,7,-1,-6,-2,6,2,-2,-9,7,-2,-10,7,-8,-8,8,-1,7,-3,-4,8,9,-6,-3,5,2,-2,-10,10,-9,-6,-2,-1,-8,4,9,4,3,9,8,5,-1,-2,-5,1,-9,-10,2,3,-8,-4,8,7,7,-9,-7,-4,-1,-9,7,10,-7,-10,-4,10,8,10,-1,9,-2,2,-1,10,-3,8,-1,7,-1,-8,7,-8,4,-3,7,-3,-10,-8,1,5,-7,3,3,7,-6,10,4,2], dtype = "uint64")#candidate|4740|(528,)|const|uint64
call_4739 = relay.TupleGetItem(func_3224_call(relay.reshape(const_4740.astype('uint64'), [11, 8, 6])), 0)
call_4741 = relay.TupleGetItem(func_3227_call(relay.reshape(const_4740.astype('uint64'), [11, 8, 6])), 0)
output = relay.Tuple([bop_4727,call_4731,var_4732,var_4733,var_4734,const_4735,var_4736,call_4739,const_4740,])
output2 = relay.Tuple([bop_4730,call_4737,var_4732,var_4733,var_4734,const_4735,var_4736,call_4741,const_4740,])
func_4758 = relay.Function([var_4726,var_4732,var_4733,var_4734,var_4736,], output)
mod['func_4758'] = func_4758
mod = relay.transform.InferType()(mod)
var_4759 = relay.var("var_4759", dtype = "float64", shape = (5, 4, 7))#candidate|4759|(5, 4, 7)|var|float64
var_4760 = relay.var("var_4760", dtype = "bool", shape = (48,))#candidate|4760|(48,)|var|bool
var_4761 = relay.var("var_4761", dtype = "bool", shape = (576,))#candidate|4761|(576,)|var|bool
var_4762 = relay.var("var_4762", dtype = "float32", shape = (63,))#candidate|4762|(63,)|var|float32
var_4763 = relay.var("var_4763", dtype = "float32", shape = (756,))#candidate|4763|(756,)|var|float32
output = func_4758(var_4759,var_4760,var_4761,var_4762,var_4763,)
func_4764 = relay.Function([var_4759,var_4760,var_4761,var_4762,var_4763,], output)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4470_call = mod.get_global_var('func_4470')
func_4472_call = mutated_mod.get_global_var('func_4472')
call_4771 = relay.TupleGetItem(func_4470_call(), 1)
call_4772 = relay.TupleGetItem(func_4472_call(), 1)
output = relay.Tuple([call_4771,])
output2 = relay.Tuple([call_4772,])
func_4773 = relay.Function([], output)
mod['func_4773'] = func_4773
mod = relay.transform.InferType()(mod)
output = func_4773()
func_4774 = relay.Function([], output)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mod.get_global_var('func_4773')
func_4774_call = mutated_mod.get_global_var('func_4774')
call_4809 = relay.TupleGetItem(func_4773_call(), 0)
call_4810 = relay.TupleGetItem(func_4774_call(), 0)
var_4811 = relay.var("var_4811", dtype = "float64", shape = (1008, 11))#candidate|4811|(1008, 11)|var|float64
bop_4812 = relay.subtract(call_4809.astype('float64'), var_4811.astype('float64')) # shape=(1008, 11)
bop_4815 = relay.subtract(call_4810.astype('float64'), var_4811.astype('float64')) # shape=(1008, 11)
var_4816 = relay.var("var_4816", dtype = "float64", shape = (1008, 11))#candidate|4816|(1008, 11)|var|float64
bop_4817 = relay.greater(var_4811.astype('bool'), relay.reshape(var_4816.astype('bool'), relay.shape_of(var_4811))) # shape=(1008, 11)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_4825 = relay.var("var_4825", dtype = "float32", shape = (63,))#candidate|4825|(63,)|var|float32
call_4824 = relay.TupleGetItem(func_2898_call(relay.reshape(var_4825.astype('float32'), [9, 7, 1])), 0)
call_4826 = relay.TupleGetItem(func_2900_call(relay.reshape(var_4825.astype('float32'), [9, 7, 1])), 0)
bop_4829 = relay.logical_or(var_4825.astype('bool'), call_4809.astype('bool')) # shape=(1008, 63)
bop_4832 = relay.logical_or(var_4825.astype('bool'), call_4810.astype('bool')) # shape=(1008, 63)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_4833 = func_4383_call()
call_4834 = func_4383_call()
uop_4842 = relay.acos(call_4809.astype('float64')) # shape=(1008, 1)
uop_4844 = relay.acos(call_4810.astype('float64')) # shape=(1008, 1)
output = relay.Tuple([bop_4812,bop_4817,call_4824,bop_4829,call_4833,uop_4842,])
output2 = relay.Tuple([bop_4815,bop_4817,call_4826,bop_4832,call_4834,uop_4844,])
func_4854 = relay.Function([var_4811,var_4816,var_4825,], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
var_4855 = relay.var("var_4855", dtype = "float64", shape = (1008, 11))#candidate|4855|(1008, 11)|var|float64
var_4856 = relay.var("var_4856", dtype = "float64", shape = (1008, 11))#candidate|4856|(1008, 11)|var|float64
var_4857 = relay.var("var_4857", dtype = "float32", shape = (63,))#candidate|4857|(63,)|var|float32
output = func_4854(var_4855,var_4856,var_4857,)
func_4858 = relay.Function([var_4855,var_4856,var_4857,], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_4865 = func_4383_call()
call_4866 = func_4383_call()
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4881 = func_4324_call()
call_4882 = func_4324_call()
func_309_call = mod.get_global_var('func_309')
func_312_call = mutated_mod.get_global_var('func_312')
const_4891 = relay.const([8.320984,6.699493,8.069551,4.976747,5.382410,2.427394,7.997123,6.147789,5.022537,6.511218,3.570876,-7.834562,2.810519,2.415761,-0.028012,6.158665,9.957379,-3.472436,9.905942,4.728289,3.445088,-5.133669,7.874499,6.759717,3.154134,3.742585,-7.860702,1.505971,6.196220,-6.863126,1.673507,0.936878,6.406754,1.462468,-2.764533,7.642663,5.227409,-7.212764,7.220692,5.314813,-2.478327,-1.389588,1.010208,2.408441,-0.556222,-8.087687,0.621385,-4.028773,4.086554,0.266243,2.645349,-8.426236,-3.196621,3.028445,-5.818050,-3.632815,4.623147,-9.601501,4.462730,-0.901182,4.778889,0.120059,-1.101339,2.830240,-4.637531,0.038932,0.386071,-7.579864,9.334743,-9.541176,0.026626,-1.748406,6.306238,7.970381,-2.407828,-0.026180,-8.287454,-2.971531,3.361162,7.021341,-7.516416,7.542884,-9.382207,9.015772,-8.565675,1.146119,0.057454,-5.725907,-3.954904,3.726978,8.933499,8.737674,2.468578,8.760249,4.691846,-8.935777,5.584344,-9.257089,-3.199704,1.603422,7.558834,-6.114744,6.029735,4.544165,-9.046425,-5.590454,-0.903752,5.720676,-6.622098,-8.606888,9.056502,2.836174,4.216586,-8.115994,-7.916991,-2.734123,5.848039,-8.430870,6.916645,-6.737680,-4.035198,-7.902132,-1.867837,-3.342571,-6.976082,0.284123,-6.046663,-3.032246,-3.519798,4.250642,2.615555,-0.464588,-3.243324,2.617071,-7.408904,8.972150,-1.275394,9.991273,5.521408,1.598556,-1.040503,-7.938045,-3.934809,-4.507137,9.166209,3.182524,2.822647,1.290909,-3.433425,-9.558600,0.094677,3.742350,4.233879,-8.516497,-7.212240,-9.263341,-9.465844,3.587605,5.403221,8.990038,7.707252,0.243824,-6.363828,-1.447979,8.716737,0.252184,-0.273459,6.811308,8.535018,0.954261,8.316024,9.650748,-9.348823,-2.789867,-9.896788,-1.115221,-7.910714,3.076628,8.734525,7.860548,-2.293111,6.105899,6.998382,-9.093223,-1.203935,8.980738,2.616239,-8.187684,2.779203,5.775998,-8.775362,-0.098161,-7.324947,-4.242544,6.861631,-7.391529,-5.665267,7.790257,-8.563175,7.571439,8.747062,3.477719,9.756527,-2.280186,-8.446175,-1.643831,0.058414,-3.645881,-2.902863,9.448713,-3.999404,4.452051,2.343424,1.209040,-6.243169,2.780418,3.249932,-2.186684,-1.482975,1.255954,1.516061,4.569906,-3.628666,-1.600846,-1.058886,9.881522,3.670356,-2.589319,2.358283,8.272467,-6.011377,8.993335,6.520848,-4.356669,-2.338381,-4.134044,6.069679,-3.006418,8.856026,7.424414,5.995994,8.304548,0.658217,4.111064,2.971327,3.900567,0.290528,9.781376,-9.253717,-2.002571,8.325138,-8.192763,3.488019,1.363472,9.403270,-6.163733,1.553156,-8.065545,0.055178,2.704107,-8.582778,-7.897074,6.931742,-9.106837,1.870942,-3.176300,4.592031,-8.858043,1.995599,-8.759167,-5.478584,7.265493,-7.178169,-1.244074,-7.452948,-2.683068,-6.820794,-7.467192,-8.193198,-4.324014,-5.414561,-5.215291,6.431996,-1.446990,-3.634020,-7.466128,3.562889,-6.511767,7.143990,-4.600001,-0.071833,-9.412035,0.164820,-6.055304,7.611687,-9.635404,4.872244,7.570004,5.086861,-7.322809,-0.362963,-6.772107,-9.572482,3.425873,2.538383,4.714429,-7.036068,0.660532,8.552351,5.852582,-3.554934,-3.028822,3.834395,-1.116893,2.880863,-8.194142,3.181582,4.611053,-4.330025,0.687684,-1.602156,9.549518,-2.262894,0.870022,6.922056,-9.528844,-4.667571,3.252789,8.694485,-2.263144,-2.989847,-7.599789,7.370653,-4.145573,6.210499,6.641386,-5.281073,-5.623239,5.189366,-2.308356,7.716503,-2.022374,9.223891,8.325746,-2.868609,3.277828,-4.806856,-7.321702,-2.244880,1.070746,3.947398,3.518933,-4.548069,-6.271545,1.050981,-8.321803,-1.363125,-0.902598,-9.314883,-9.007947,0.129871,-2.720833,9.117532,0.152980,7.082220,0.569243,-0.031246,-8.310756,2.217342,-8.101804,-0.603637,4.988540,-8.024286,-8.578638,4.437069,3.902338,9.433690,-3.391793,-2.036469,-6.454558,4.776655,-3.868571,-0.091575,-4.123835,-8.701708,6.811485,6.615331,3.168164,-7.478298,-0.470777,-6.796286,2.255658,6.779613,-5.573853,5.766252,1.216735,5.896778,-8.517456,6.204195,1.295986,-8.830728,-2.639298,3.732671,1.354715,8.760547,9.396244,2.067289,2.935009,-2.694728,-2.710436,-0.720393,-1.052533,-8.126653,-7.614623,6.978672,6.997090,-7.996478,2.898800,0.001306,6.851797,4.293680,-0.120297,5.392810,1.315456,2.771970,-2.684863,-4.033300,7.505918,9.828741,-0.556875,8.923365,-7.893912,1.163214,5.026988,-2.596743,1.527143,3.154096,-6.868265,-5.948814,3.584175,-4.445647,0.886736,-0.559124,5.394941,-0.369337,0.020949,6.390746,0.859601,7.657599,9.962155,-7.738392,4.011067,-3.587111,-6.887696,-2.776756,-0.543270,7.617608,5.087227,4.263435,-4.477250,-0.370428,1.478518,4.559416,-8.186918,-4.048294,9.488270,-1.958381,-4.930807,-5.325433,8.252380,-4.611600,9.291665,-3.030310,-0.518102,1.267033,2.390360,-3.272977,3.421064,-1.623826,-4.416388,6.627004,2.072758,6.285639,-8.547405,-3.802770,-7.831130,-9.483372,0.828209,-7.895180,-6.834450,-4.486403,0.743287,-9.738661,-6.924600,-6.876822,2.256098,-0.086980,4.887982,7.178195,-9.939495,-8.764874,-9.634506,-2.749295,0.971709,8.151647,5.337348,4.304333,-9.849540,5.864458,-5.669072,-0.079324,-1.340645,-6.905633,-4.987697,4.375217,-4.484162,0.862991,-9.307834,-3.368234,-3.571076,8.897739,2.809247,-4.542297,0.352886,-3.295797,8.500049,7.163854,-2.983536,4.633419,2.350916,6.276537,-4.670448,8.308139,-0.808142,-7.657430,6.839748,-5.128228,5.443611,6.947023,2.172549,-5.932987,-3.532561,-2.579149,-5.981087,5.599432,-0.734639,9.783607,7.711036,-8.988406,-4.111145,-9.190917,-5.811335,-4.082643,9.803393,-3.700886,0.370630,0.372621,9.247875,-9.010335,1.607827,6.302467,-7.335001,0.280886,0.903667,-0.152844,-1.584912,-7.002871,0.975853,-7.031512,-5.101074,5.937752,-4.282254,7.311902,-7.856274,8.428116,6.048905,-0.879629,3.637440,3.525135,8.663455,-1.410573,-2.576665,-3.474191,0.333086,-3.475025,-7.198306,5.871760,-1.256262,-7.790090,7.498647,-3.723810,-9.225417,-5.361171,-3.447279,8.182720,0.995542,-9.655310,-5.130581,-5.587748,9.094994,7.241273,-0.270717,-9.913475,1.210107,-0.402550,-8.434535,5.263926,9.855532,-2.824475,2.286603,2.994016,4.947041,-3.040261,-4.292986,4.548715,5.949195,1.313211,-1.863595,-1.063290,-0.245555,-0.699959,5.153608,-5.053061,8.125055,1.664252,-9.670464,-6.647668,-9.993385,9.659443,7.344515,-9.760255,8.606723,-1.573360,-5.815706,1.370341,0.126050,4.421769,8.688628,4.160367,7.229794,9.665335,9.312521,8.859652,-6.886059,8.153494,-3.182970,-2.325244,9.569044,8.455212,5.798345,9.788947,-3.372369,9.158108,-8.426707,-1.566546,4.636948,8.836477,6.910850,-9.743018,6.402619,7.914657,-7.409598,6.815953,1.213750,7.789777,8.536465,2.318265,8.940879,8.992052,-6.272481,3.156380,2.529871,-2.287124,-9.169722,-9.717666,-6.173402,2.924676,9.596896,2.296285,8.094037,5.023911,1.806188,-3.620062,2.609035,-0.277942,3.584501,-0.768346,-5.197309,-6.487470,1.403199,-9.062835,-0.776338,-6.677649,-7.213564,-5.244155,-1.843478,-2.598722,4.727229,4.570585,-6.066104,-6.954425,1.465516,-8.711472,0.015514,-0.004994,5.400645,7.375843,-8.539194,3.850570,2.639667,-5.353475,2.220678,5.235233,3.376130,4.208161,-4.737452,-2.369685,-4.702126,0.906928,3.725844,5.411295,-1.223084,-5.538508,-9.078304,6.012392,-8.704275,-9.435694,-2.038756,-6.548939,-6.109735,9.784680,3.899095,-1.890980,-4.592655,0.842214,-5.324790,-9.386563,9.190037,9.665952,-0.044467,2.308044,9.879034,-1.156941,1.465015,5.669121,-6.141830,-5.177501,-4.555577,-8.876936,-9.954498,-1.683054,-0.967409,9.193272,-4.911557,6.750140,8.740022,4.567202,-5.677534,-7.007222,-1.055060,5.154095,-1.062973,-7.725218,3.369410,9.696446,-6.608233,-6.666573,-0.405624,8.322106,-2.544826,9.545517,5.239149,-3.792594,-3.950759,-9.497541,9.817032,-8.913108,5.179178,-4.185518,0.340486], dtype = "float32")#candidate|4891|(780,)|const|float32
call_4890 = relay.TupleGetItem(func_309_call(relay.reshape(const_4891.astype('float32'), [390, 2])), 0)
call_4892 = relay.TupleGetItem(func_312_call(relay.reshape(const_4891.astype('float32'), [390, 2])), 0)
output = relay.Tuple([call_4865,call_4881,call_4890,const_4891,])
output2 = relay.Tuple([call_4866,call_4882,call_4892,const_4891,])
func_4911 = relay.Function([], output)
mod['func_4911'] = func_4911
mod = relay.transform.InferType()(mod)
output = func_4911()
func_4912 = relay.Function([], output)
mutated_mod['func_4912'] = func_4912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4911_call = mod.get_global_var('func_4911')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_4925 = relay.TupleGetItem(func_4911_call(), 0)
call_4926 = relay.TupleGetItem(func_4912_call(), 0)
output = relay.Tuple([call_4925,])
output2 = relay.Tuple([call_4926,])
func_4931 = relay.Function([], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mutated_mod.get_global_var('func_4931')
call_4932 = func_4931_call()
output = call_4932
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_4939 = func_4383_call()
call_4940 = func_4383_call()
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4946 = func_4324_call()
call_4947 = func_4324_call()
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_4949 = relay.var("var_4949", dtype = "float32", shape = (6, 180))#candidate|4949|(6, 180)|var|float32
const_4950 = relay.const([-8.308766,9.450753,-3.137691,-9.900786,5.339070,3.138217,7.228899,-0.541327,-5.030287,-3.606154,-9.002184,8.183704,1.081783,-4.035734,-9.700664,-9.783770,0.229488,-4.712265,7.416582,5.448358,0.421115,-3.394733,5.536145,-6.522184,-3.264635,9.516668,9.221010,4.296992,-6.231434,1.869789,-4.453142,9.262170,-8.016117,5.866386,-7.685192,-0.279630,8.240716,-6.776765,-8.649981,9.525585,4.394322,4.451885,8.708829,0.105433,0.037327,-8.700381,-8.752363,4.367036,9.443854,-0.724966,8.816018,0.143364,-4.575418,3.142553,1.655059,9.643558,4.398994,8.493214,4.142635,-2.116410,-1.748654,-3.318263,-1.465811,1.637623,-8.289178,-4.762527,-8.418861,-6.251002,0.777687,0.233003,-1.259978,-8.515572,-9.893017,-2.859294,-2.731513,-7.957175,2.073099,-9.422718,-5.845773,4.393599,9.738335,-4.101734,-0.932012,-4.389146,-4.992000,-6.470417,-7.156201,-5.521932,-3.260528,-7.216711,-7.005715,9.062293,0.405983,0.376774,6.523465,-4.011840,-4.899484,0.284181,-7.042940,4.356900,9.290670,7.977887,-1.488823,-7.824891,2.048254,9.215014,9.960136,8.198966,-0.600333,-1.136435,-1.783663,5.375259,2.546705,2.623028,-6.360801,-1.915138,-8.340348,-5.526132,-1.716282,8.663417,0.474158,3.783324,-3.699899,-2.347037,6.022306,-2.926454,3.395581,6.873899,-6.029618,-0.123978,7.029611,0.049672,6.639086,-9.063149,-8.784245,9.467603,-4.172593,5.257050,5.744943,-3.204461,-2.850075,-1.545413,-5.104916,5.937750,-9.168100,9.750996,-5.565895,9.457347,-2.520171,8.732776,-7.598358,7.054492,4.249818,0.675314,-8.193584,-1.022604,-0.283832,-5.207276,-3.720815,-5.800520,-9.100213,-1.411293,-5.581343,-2.706173,6.976045,1.565083,-8.468497,-7.083307,7.592928,-7.861005,9.560300,9.803571,-9.665049,-5.229597,1.989868,8.895258,8.039974,-8.819934,-7.127322,-5.896628,1.053021,4.629296,-7.019927,6.237052,9.318816,7.990576,-6.793268,-1.805757,2.148612,7.915574,7.205914,-7.987896,-8.349397,-0.014764,2.888349,-9.946090,2.416886,-4.354844,-8.306578,8.061576,8.682140,-9.892569,1.573059,-7.617826,-4.529835,4.067754,0.708426,-7.094314,4.514965,-4.612240,6.510324,1.080793,-2.090850,6.962877,0.288172,-0.175671,7.385220,3.632542,2.556193,9.057958,7.996784,-8.210801,-5.682812,4.775123,7.682827,-9.424392,-2.462488,8.153153,5.450571,3.157452,-0.659068,-0.961553,0.530279,-1.272433,9.570922,-7.680913,0.430431,3.257584,0.926772,4.138115,-8.058977,3.409666,0.200771,6.109663,8.483176,6.090600,-8.950485,-8.503960,7.019905,5.505949,-9.193272,-8.265097,-4.171549,-3.309480,-3.776490,-3.190746,7.609839,1.627111,3.989141,-2.479360,-3.500708,-3.660679,9.750505,-6.683141,2.766523,0.071239,6.026873,0.531432,-5.551322,4.985028,4.048974,9.665776,1.926404,5.842807,-9.146217,-5.946820,-5.272552,4.934115,1.011253,-1.009871,8.246408,-6.271651,7.700864,-4.619520,6.831026,-2.160407,-3.763944,-0.355111,2.972084,-1.597136,2.994918,-4.999404,2.462123,2.117124,5.425780,5.397383,8.200628,3.811675,-1.731152,-4.306307,3.805507,-4.349452,9.957804,3.364588,8.767969,-0.631557,-7.455269,-8.797062,-3.126609,-8.650437,0.252329,7.295827,-2.093240,-2.342335,-9.887276,-3.681577,5.911426,4.822872,2.587024,2.823077,-6.213625,0.640234,-2.656537,-3.500754,9.537220,-4.313865,6.006772,-9.002329,-3.068044,-6.772040,3.019276,-5.396507,6.016249,1.428266,1.916835,5.671281,-3.111125,-4.214919,-8.101705,-1.731552,-0.741040,2.081656,-3.306520,1.507656,-4.704801,4.009492,-1.153835,-6.697103,-6.665389,0.741254,9.665874,2.527769,3.400339,-8.130358,4.859736,-9.509170,-6.280010,5.118203,5.700445,9.624603,-3.675146,8.171084,7.007275,-2.580740,-1.073299,4.586030,1.062572,4.160005,-9.054035,-4.121013,-8.662593,4.109854,-2.283326,9.767890,2.299995,3.974511,-9.186931,0.589700,0.977028,2.217179,1.897089,9.000108,4.666654,6.318500,-2.526080,3.098045,-3.661369,3.954887,3.049577,-2.374598,-5.380510,-6.761041,6.159787,-2.332606,-8.907529,-2.674932,-2.860260,-6.802129,-5.152501,2.837642,0.256763,-8.841877,-1.328840,0.356875,-9.276568,-0.145332,7.481327,8.284380,-1.802162,6.748700,2.536359,-1.816234,8.950637,-1.619207,6.470735,6.104031,-9.052769,-2.712111,5.609635,9.289170,-2.139597,-2.681492,-7.530511,-2.982010,0.835969,2.603852,3.640247,-1.167395,-0.779674,-9.315331,3.170865,4.163647,3.690315,-0.815795,5.911960,7.336740,9.739112,7.477819,0.547215,9.569696,-1.863126,-0.994104,-5.898432,-0.645576,5.236385,-5.373934,-7.797084,-6.121529,-5.289263,8.713725,-9.269956,7.177265,-3.034521,-5.820098,-1.418002,9.485064,-8.818128,-8.515276,-3.756087,-1.288602,8.350130,-4.196156,-9.946579,-6.207777,5.834244,-8.115070,-7.223014,-1.965615,-6.272983,-8.596437,-1.389845,2.695505,0.771682,9.415833,6.586215,1.527466,1.123077,-8.318609,9.755597,-8.405996,-6.521040,-7.586162,-5.797561,-9.659386,3.304891,6.410795,-1.866116,8.274894,-2.723441,7.752397,-4.572684,-6.749332,9.770307,4.661826,0.820225,0.427432,-2.862825,-8.554072,-8.067467,4.297426,-8.998249,8.887592,-2.162743,-3.583737,-9.060839,-7.171891,8.235662,-8.100034,2.336765,1.199805,2.811728,2.948497,-1.193783,-6.150458,-4.051168,2.140810,-3.935297,5.621177,1.255346,4.620718,2.365565,-8.192183,-2.721309,6.922572,-3.458151,6.743297,-9.486061,5.966572,-6.365867,0.536712,2.151275,4.138326,-8.184370,-4.228711,2.146522,7.758920,1.050503,5.389854,-5.061016,-6.279840,4.418010,-6.550827,-6.251789,-0.037361,7.688302,3.805724,-3.857334,-0.791089,2.358228,-6.716440,-5.825249,7.091597,5.627019,4.842248,-7.127984,-5.530249,4.136776,3.542556,-2.924937,8.408194,7.614434,9.522703,7.315827,-4.543934,-0.938752,4.192426,-9.420563,9.706364,1.388335,7.972048,-6.472221,1.485302,-5.884400,5.672935,7.697283,-8.629015,0.387506,-2.286828,0.021070,7.962604,-7.416525,-0.505790,7.311601,-6.253472,8.278901,-5.728744,-9.583680,0.955058,-4.932981,0.148663,5.282606,9.547356,3.717080,-3.998869,-0.911639,5.373843,-4.762793,-6.799403,8.091660,7.611669,-5.667349,-8.010425,5.201702,-1.954612,-1.934584,4.387663,3.713115,-6.963949,9.030683,-5.491660,-3.749967,-2.246228,5.694353,-4.269878,2.820960,3.190849,-6.875519,-6.723705,-2.412613,0.427896,0.511013,-4.873062,3.175770,4.942712,2.440351,9.778613,8.900149,2.381954,-4.482148,0.639821,2.333393,8.805341,-9.142691,6.401282,-5.252534,6.964065,-2.597685,1.206956,-4.715862,-4.083571,-1.727040,8.790477,4.725272,-1.772916,3.118556,2.034602,0.162081,-9.648381,8.243347,-0.454049,-4.845853,2.174090,3.918376,6.125147,0.552214,-4.182841,3.148427,-4.107903,-9.203384,-9.720267,-5.662458,-7.019243,-7.635382,-5.071081,-8.668078,-3.834814,-7.853291,4.383266,-0.277532,-1.976602,-4.759610,1.908064,-7.339596,-8.889272,-5.888580,-3.784225,1.304727,-3.476880,6.847568,1.623773,6.720902,0.820864,3.826763,-9.770442,2.467745,0.532354,0.215610,1.467453,-3.124488,-4.513705,-8.020872,-6.773668,9.867484,5.370654,9.821394,-0.437359,-7.553780,-9.633811,8.804415,8.290141,1.741544,-5.460851,1.947249,2.140990,-6.573019,1.757981,-8.731971,-5.978347,-1.414384,1.074768,-1.410063,6.514816,2.932811,-6.782967,-8.924701,7.665727,-1.713805,-2.518161,3.964598,-8.265430,1.952654,-7.022001,7.009783,8.252165,-3.386179,8.329000,-3.086174,-0.769580,-6.912490,-5.194352,-9.132561,6.813606,-7.556032,3.463251,1.600548,7.224786,2.938936,-7.973390,-3.807174,-6.254217,-1.322537,6.992627,-6.309757,-8.567893,-9.736826,6.834738,-3.584628,3.424510,-1.815202,-5.864425,-8.209844,-1.183272,6.160141,-5.547172,-9.296570,6.429706,-5.632519,-3.989584,-6.788215,-4.194442,2.500445,8.234592,-8.899270,-4.657754,7.316599,-2.569255,-3.873067,3.378583,6.260023,3.342351,5.277017,2.542448,7.271856,-3.471194,-6.126001,-5.228742,3.904594,-0.535627,8.429617,-2.358128], dtype = "float32")#candidate|4950|(780,)|const|float32
call_4948 = relay.TupleGetItem(func_1580_call(relay.reshape(var_4949.astype('float32'), [12, 15, 6]), relay.reshape(const_4950.astype('float32'), [780,]), ), 0)
call_4951 = relay.TupleGetItem(func_1583_call(relay.reshape(var_4949.astype('float32'), [12, 15, 6]), relay.reshape(const_4950.astype('float32'), [780,]), ), 0)
output = relay.Tuple([call_4939,call_4946,call_4948,var_4949,const_4950,])
output2 = relay.Tuple([call_4940,call_4947,call_4951,var_4949,const_4950,])
func_4969 = relay.Function([var_4949,], output)
mod['func_4969'] = func_4969
mod = relay.transform.InferType()(mod)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4970 = relay.var("var_4970", dtype = "float32", shape = (6, 180))#candidate|4970|(6, 180)|var|float32
func_4969_call = mutated_mod.get_global_var('func_4969')
call_4971 = func_4969_call(var_4970)
output = call_4971
func_4972 = relay.Function([var_4970], output)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_4983 = func_4328_call()
call_4984 = func_4328_call()
func_4635_call = mod.get_global_var('func_4635')
func_4637_call = mutated_mod.get_global_var('func_4637')
var_4986 = relay.var("var_4986", dtype = "float64", shape = (245,))#candidate|4986|(245,)|var|float64
call_4985 = relay.TupleGetItem(func_4635_call(relay.reshape(var_4986.astype('float64'), [5, 7, 7])), 5)
call_4987 = relay.TupleGetItem(func_4637_call(relay.reshape(var_4986.astype('float64'), [5, 7, 7])), 5)
func_4049_call = mod.get_global_var('func_4049')
func_4053_call = mutated_mod.get_global_var('func_4053')
var_4990 = relay.var("var_4990", dtype = "int16", shape = (18, 70))#candidate|4990|(18, 70)|var|int16
call_4989 = func_4049_call(relay.reshape(var_4990.astype('int16'), [14, 6, 15]), relay.reshape(var_4990.astype('int16'), [14, 6, 15]), )
call_4991 = func_4049_call(relay.reshape(var_4990.astype('int16'), [14, 6, 15]), relay.reshape(var_4990.astype('int16'), [14, 6, 15]), )
func_4562_call = mod.get_global_var('func_4562')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_4995 = func_4562_call()
call_4996 = func_4562_call()
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
const_5000 = relay.const([[-9.217856,8.167657,-0.242794,-1.214896,-6.351194,9.861281,1.621010,-6.012942,-8.184389,-4.032064,5.462242,5.899338,-0.076885,-5.749053,-8.972780,9.066469,7.310738,1.579501,1.409980,-4.666993,1.300899,0.808059,0.278927,-1.968186,7.322391,-5.884511,-0.690962,-1.129938,-5.413788,-1.099702,-2.024791,-6.964760,-4.612287,7.908071,8.899938,9.441606,1.933789,8.321547,-9.170091,-5.463967,-6.625203,-6.823896,-1.183641,6.819015,-3.104661,-0.299569,3.563281,-9.293640,-1.799445,6.734178,-9.729724,-9.581887,-8.942989,-0.457475,9.935631,-4.765518,9.837099,0.638843,0.734893,6.373483,-8.013324,-9.333818,-9.777764,5.810349,-5.823817,-4.336275,1.731050,-5.036759,-0.147514,-3.412800,-3.753917,-3.302895,-4.985184,1.638721,-1.821859,9.925316,-7.011302,3.043222,-1.976423,3.897604,4.048931,8.759865,6.035897,-5.747026,7.473614,5.031093,-3.476064,0.208150,8.804366,-3.702374,4.548263,-0.297222,-4.521727,-5.770716,-5.389754,9.602290,7.717864,-1.125157,2.838486,6.552505,-5.321448,-8.567539,-8.660867,7.971668,-8.461135,5.707454,1.690989,-7.446050,4.897740,-1.993202,-5.226693,-5.921430,7.442255,-6.406622,5.448602,6.449534,7.630366,-5.303116,8.672967,9.772513,-9.120838,-5.149926,4.802568,3.487342,6.714257,-5.323454,8.816259,-0.431122,-6.642377,5.320483,-2.555553,8.498474,-8.073451,7.457829,3.851639,-8.389352,5.413954,1.971070,0.120887,-9.577213,-7.585513,-7.338641,0.952501,-8.747964,-4.964286,4.003678,-5.291508,-8.222784,1.633096,6.015287,-3.774708,-0.353197,-1.004112,-7.868131,-2.667865,-4.186342,-5.488026,-1.385969,3.526554,0.234573,5.239371,-0.938049,2.057646,-1.238346,-8.192634,6.815207,6.319622,3.571529,3.761224,6.146525,-6.510159,-6.612300,9.951740,-2.579534,-1.905283,-7.908634,-9.114463,9.970224,8.908188,-7.073813,0.457353,-2.554916,7.881914,-1.806129,-9.421107,-2.160349,-9.980149,8.494443,-6.911433,-9.580310,7.893301,-8.331717,-1.269522,8.808357,4.036423,4.085108,5.268275,-8.746567,5.529014,9.078946,-8.565142,-2.236185,-6.532583,-0.292101,6.648668,0.770746,1.735458,1.786615,-0.148523,8.622782,-0.397491,-1.542790,3.340378,0.127188,-7.115805,-6.097087,-2.951477,4.571635,-1.262079,4.188718,-6.490803,-1.969306,-3.038674,4.573492,-1.895939,0.463623,-0.101249,-8.824084,-8.754191,-0.777622,-8.444625,3.568347,-1.116264,7.816910,9.331675,-1.730776,-7.063560,0.473274,-7.637872,1.516990,-8.062457,-7.356124,-4.383230,-0.642514,-9.002284,5.339836,1.768460,8.306297,8.600347,-7.570872,-1.286256,3.659682,1.751825,8.802094,3.769788,-8.034762,8.976949,-5.523256,5.183387,-7.749589,-4.216847,-2.751149,6.085716,0.853298,-4.029858,0.177577,-1.863225,4.201109,8.148098,-5.201633,0.079694,-7.183539,0.829480,3.779272,5.338017,-9.179272,8.943892,8.612737,-1.983248,-0.794928,-6.421518,9.883075,-2.650730,-4.067817,-8.581301,-3.207527,0.693524,-2.665287,-4.804777,9.610106,-8.298691,4.689275,-4.398466,-4.274835,9.858879,-0.971519,-1.477938,-4.037874,-2.938399,-0.528290,2.128955,6.568586,-0.074179,0.676185,3.677040,-8.636297,-6.109636,1.397528,1.084868,-3.045972,-4.325213,-2.311907,-3.280982,4.465373,-1.114245,4.505791,4.915422,-1.660963,4.743055,-8.878057,9.918578,-6.100045,-8.782687,-8.502497,7.335482,-9.128175,4.584787,-8.098978,6.225769,6.608269,1.076568,-6.477075,2.501928,-0.516958,-7.942715,2.286406,-1.200941,-2.925377,7.354720,-4.546456,6.295066,5.448815,6.936966,-8.062348,2.513106,-1.787455,4.229503,6.095347,-2.719819,0.404130,-9.010396,-7.055076,-2.900391,1.804954,8.795741,-5.453735,-4.368968,-7.779964,4.702253,1.382999,-0.319511,3.220871,-9.655067,-2.216912,8.228085,1.651951,-5.463251,-7.658174,-1.499886,-7.172533,2.900853,-1.670045,-6.079810,6.722181,-3.355682,5.966969,6.629631,-9.551662,8.275733,-1.180082,-1.783688,2.518049,0.352936,6.486297,2.878340,1.808503,-9.443957,6.334220,-0.684694,-5.015144,1.505980,3.482216,-2.819098,-9.937773,-9.424243,-4.218052,-0.012414,8.153284,6.610346,-8.992341,9.062034,4.360761,8.676638,-9.551142,-1.378966,-3.103583,-0.574247,-3.895698,3.895568,0.870653,8.440896,-7.824161,3.887176,7.167244,-6.598465,9.323716,8.615080,4.887641,2.531445,9.293429,-3.022286,4.073135,6.582442,-8.529230,-6.548865,4.917966,2.679460,-7.128606,1.654175,-3.047626,7.982620,6.331127,-5.163888,9.968722,0.907941,3.607100,3.832107,-2.124215,-4.694878,0.743112,-1.783731,-1.328250,5.991758,-8.571143,-0.556468,-0.718402,2.994236,8.294252,7.625102,4.135875,3.327544,-6.891169,-7.517276,9.285210,2.562222,4.606029,1.704878,-3.762079,-2.732583,-3.707519,6.688023,-0.832660,-5.109928,-6.846008,4.849154,-7.907955,5.244077,0.057708,-7.147669,-2.756521,6.009311,9.375545,-4.134914,6.050791,9.819511,4.095433,6.842869,8.961363,7.084795,9.682686,9.217684,5.254197,-5.826975,-8.152787,-9.653433,2.203650,3.311608,-3.719863,-2.381873,-6.725176,1.121787,-6.827164,-4.451633,2.829351,0.282075,-5.922994,-2.010486,1.226671,-1.022314,5.033349,6.258107,-2.545300,-9.918584,-5.841196,0.027962,-2.777031,-6.229882,4.039589,-2.657143,4.905501,3.231732,-6.414530,6.590581,-6.158074,-9.657263,-8.119913,-7.776185,-6.244152,-7.154846,8.530571,6.549816,-9.654584,-9.731394,-6.319083,-6.539850,3.030649,2.645413,-9.982732,7.976141,-8.148296,-6.117414,4.255648,-3.295546,9.206022,-1.623297,-4.472372,-7.862593,-4.923429,-9.645033,6.880943,-8.923659,-1.688036,8.139121,-0.444898,7.965298,-8.746252,-4.711432,0.530213,4.569604,0.485056,6.127196,6.603748,-3.676940,6.764767,7.862600,-2.026760,5.185940,3.916162,1.010897,8.965296,8.439186,-1.240036,-4.578809,-8.110048,9.093489,4.322690,2.593947,-4.605053,-7.017549,-5.212130,3.344339,5.687056,1.004103,1.136966,8.853720,3.003293,-8.922472,-4.496601,8.132896,-0.864155,-3.104570,-1.541537,-0.341356,0.546399,-5.557414,-3.965288,-5.927263,-6.030615,3.429848,-2.816457,-7.800405,9.404645,-2.907818,9.570110,-1.968205,-0.265632,-9.765630,-8.379743,5.202710,1.376655,2.814444,8.558492,-3.013046,7.787055,0.094176,-6.397398,4.921739,-7.558482,8.731923,-2.281469,3.492901,-8.268943,0.850203,8.213424,-8.566053,-3.981927,-0.644401,-6.805848,9.507331,-0.270418,6.873543,-8.623975,-4.343900,-8.713195,2.195759,7.940759,7.766911,-2.985475,-9.418540,-3.494122,-0.426386,-7.628756,-6.595604,6.428265,-0.108511,8.325132,-2.192493,8.966534,-1.359886,-2.588758,-1.100549,3.670077,8.463993,-0.373107,7.749194,4.368908,2.889028,-4.556603,-4.436665,7.706223,-1.778401,-8.863922,-8.587603,1.859110,-7.047432,-1.997562,-7.222359,-4.269618,9.263726,4.430555,9.005916,4.474498,8.439930,7.907626,1.634379,-7.310213,2.824628,9.990858,-1.508526,-4.685685,-7.096608,2.619613,-4.750170,3.921161,-2.053094,-7.653208,2.071844,-8.355587,-5.249812,-3.979342,-4.825464,9.221123,3.013862,-0.207491,3.864809,-0.222057,5.276723,-2.618792,-3.277417,-6.431739,3.687003,-0.332881,-8.102498,9.045845,-6.212130,-6.513610,-8.284814,-2.171631,-4.166097,-6.433317,-0.026722,-8.779991,-7.209670,3.076272,-9.570392,-0.492279,9.726614,-7.878290,7.591439,-9.718500,3.854460,8.396644,-7.535242,5.650836,-5.492739,-1.509607,1.024355,-2.841282,-2.753298,-8.204364,6.173560,-4.946777,1.778037,-3.530828,-2.396931,2.958557,-2.608667,3.652653,-7.802014,4.757997,-1.557805,3.317377,-2.488742,-7.176247,-3.295520,6.186212,9.810117,-0.616601,-9.349663,7.201726,0.752365,-1.371363,3.530044,-3.997077,5.227127,-1.950966,8.167891,6.426038,-8.417502,-3.385285,-2.298684,-8.362283,7.948326,-4.611649,-0.925230,-7.842358,-2.538220,0.789796,8.388674,-5.945588,9.653160,-5.552664,-1.397494,3.534621,6.932962,9.717131,1.935831,4.672291,-0.777201,1.144338,-2.010314,-4.072994,-1.178534,-1.507924,0.450498,-4.510186,-6.881286,-0.357173,-2.157763,8.281391]], dtype = "float32")#candidate|5000|(1, 780)|const|float32
call_4999 = relay.TupleGetItem(func_109_call(relay.reshape(const_5000.astype('float32'), [5, 12, 13])), 0)
call_5001 = relay.TupleGetItem(func_112_call(relay.reshape(const_5000.astype('float32'), [5, 12, 13])), 0)
func_3299_call = mod.get_global_var('func_3299')
func_3303_call = mutated_mod.get_global_var('func_3303')
var_5016 = relay.var("var_5016", dtype = "float64", shape = (1, 15))#candidate|5016|(1, 15)|var|float64
var_5017 = relay.var("var_5017", dtype = "float64", shape = (225,))#candidate|5017|(225,)|var|float64
call_5015 = relay.TupleGetItem(func_3299_call(relay.reshape(var_5016.astype('float64'), [5, 3, 1]), relay.reshape(var_5017.astype('float64'), [5, 3, 15]), ), 0)
call_5018 = relay.TupleGetItem(func_3303_call(relay.reshape(var_5016.astype('float64'), [5, 3, 1]), relay.reshape(var_5017.astype('float64'), [5, 3, 15]), ), 0)
output = relay.Tuple([call_4983,call_4985,var_4986,call_4989,var_4990,call_4995,call_4999,const_5000,call_5015,var_5016,var_5017,])
output2 = relay.Tuple([call_4984,call_4987,var_4986,call_4991,var_4990,call_4996,call_5001,const_5000,call_5018,var_5016,var_5017,])
func_5023 = relay.Function([var_4986,var_4990,var_5016,var_5017,], output)
mod['func_5023'] = func_5023
mod = relay.transform.InferType()(mod)
mutated_mod['func_5023'] = func_5023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5023_call = mutated_mod.get_global_var('func_5023')
var_5025 = relay.var("var_5025", dtype = "float64", shape = (245,))#candidate|5025|(245,)|var|float64
var_5026 = relay.var("var_5026", dtype = "int16", shape = (18, 70))#candidate|5026|(18, 70)|var|int16
var_5027 = relay.var("var_5027", dtype = "float64", shape = (1, 15))#candidate|5027|(1, 15)|var|float64
var_5028 = relay.var("var_5028", dtype = "float64", shape = (225,))#candidate|5028|(225,)|var|float64
call_5024 = func_5023_call(var_5025,var_5026,var_5027,var_5028,)
output = call_5024
func_5029 = relay.Function([var_5025,var_5026,var_5027,var_5028,], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_5077 = func_4328_call()
call_5078 = func_4328_call()
output = relay.Tuple([call_5077,])
output2 = relay.Tuple([call_5078,])
func_5086 = relay.Function([], output)
mod['func_5086'] = func_5086
mod = relay.transform.InferType()(mod)
output = func_5086()
func_5087 = relay.Function([], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_5097 = func_4324_call()
call_5098 = func_4324_call()
func_3299_call = mod.get_global_var('func_3299')
func_3303_call = mutated_mod.get_global_var('func_3303')
var_5103 = relay.var("var_5103", dtype = "float64", shape = (15, 1))#candidate|5103|(15, 1)|var|float64
const_5104 = relay.const([8.791704,-8.376209,-3.767199,1.927260,-2.252504,1.358159,-1.237607,-8.326328,6.467401,0.558933,4.498903,2.646613,4.501712,4.431568,8.685819,-1.583620,4.718599,2.281907,4.826102,5.440832,-0.555331,-2.245070,-0.445158,5.295550,3.505045,-0.223938,-7.224897,-7.419984,-6.451289,-2.694937,-1.189673,-0.443671,3.032445,6.630972,-3.855527,-4.788613,1.115502,5.949118,-5.990228,-4.624549,4.016688,-7.817013,-9.070890,7.144070,-2.752651,3.441534,-0.401992,-7.535408,4.163101,2.384711,-1.875525,-0.744024,-6.681882,1.240267,-1.716992,6.379173,-7.193949,3.403120,-8.739812,1.894195,1.207786,-6.400941,5.974886,8.990745,-3.713527,-1.651925,0.409177,0.464107,2.662631,-8.447416,-7.415838,2.073615,4.725927,6.657858,-8.449352,-5.541471,0.099842,0.263773,5.539665,7.999882,3.675847,-3.183175,-8.207812,3.210700,-0.094554,9.181560,5.617330,6.089584,-9.251194,-3.162536,-0.999925,-0.958121,0.135846,-8.026003,-9.041282,4.619705,2.975252,-4.016705,1.617021,8.940464,6.809991,-3.246551,-3.388862,6.988313,-8.554067,1.990721,-9.931185,8.526948,8.169131,-6.935862,5.332515,-4.531098,6.663632,2.146720,-1.232698,-4.391944,6.971025,-7.949622,8.551457,-7.072440,1.284297,-8.194678,6.545218,-4.197173,1.090278,1.072881,-5.145919,0.707477,-1.277799,-8.230814,-6.515656,4.611568,7.957467,5.253018,4.108529,-3.737994,8.473619,3.956274,-8.097088,5.428748,-0.355441,3.132135,-7.828090,2.791638,2.908115,5.174885,-0.567445,2.324950,-3.320083,-6.287948,7.421321,0.881538,1.006870,5.954454,-4.063721,6.270144,5.746174,3.681099,-8.261917,4.477568,-8.544126,2.567096,2.390901,-9.570132,1.866020,0.461038,4.265664,3.666946,0.728397,0.958514,9.260460,2.735291,2.297877,6.914980,0.973016,3.617323,3.124372,-7.949521,0.787401,8.257621,-4.689683,7.931836,0.445486,-1.370881,-5.082706,-4.554844,8.632997,-2.593226,-5.602411,-2.599535,-3.777513,6.467847,-5.622954,-3.571593,-3.731704,-7.865402,2.469918,-2.871841,-1.738343,5.102476,-5.410217,-0.972240,1.060352,-6.792951,-5.958294,5.758701,-5.785081,3.290340,5.412586,9.741852,3.402049,-1.225341,3.173611,3.067495,8.538688,-2.662133,-3.241846,4.962660,-9.514761,6.020843,-0.295536,3.007121,0.312240,3.530494,9.925636], dtype = "float64")#candidate|5104|(225,)|const|float64
call_5102 = relay.TupleGetItem(func_3299_call(relay.reshape(var_5103.astype('float64'), [5, 3, 1]), relay.reshape(const_5104.astype('float64'), [5, 3, 15]), ), 0)
call_5105 = relay.TupleGetItem(func_3303_call(relay.reshape(var_5103.astype('float64'), [5, 3, 1]), relay.reshape(const_5104.astype('float64'), [5, 3, 15]), ), 0)
uop_5109 = relay.log2(call_5102.astype('float32')) # shape=(5, 3, 15)
uop_5111 = relay.log2(call_5105.astype('float32')) # shape=(5, 3, 15)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_5113 = func_4328_call()
call_5114 = func_4328_call()
output = relay.Tuple([call_5097,var_5103,const_5104,uop_5109,call_5113,])
output2 = relay.Tuple([call_5098,var_5103,const_5104,uop_5111,call_5114,])
func_5116 = relay.Function([var_5103,], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5117 = relay.var("var_5117", dtype = "float64", shape = (15, 1))#candidate|5117|(15, 1)|var|float64
func_5116_call = mutated_mod.get_global_var('func_5116')
call_5118 = func_5116_call(var_5117)
output = call_5118
func_5119 = relay.Function([var_5117], output)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5131 = relay.var("var_5131", dtype = "float64", shape = (11, 13, 7))#candidate|5131|(11, 13, 7)|var|float64
const_5132 = relay.const([[[-7.223678,4.514994,0.564986,0.010267,-8.890886,1.940869,2.572945],[3.234358,-4.204148,-3.400842,-9.528847,-3.075032,-4.336193,-9.284337],[-8.632605,8.342262,2.537927,-5.264975,-6.724628,5.150426,0.006605],[-4.931916,8.769368,5.809297,5.477933,-9.731615,0.030272,9.910940],[-2.633590,-6.423713,9.793905,-7.284653,-2.789478,-6.311260,-8.003834],[4.378938,-6.307711,-4.666870,8.388843,7.997352,7.896546,-6.380315],[-9.905970,1.941268,6.903520,2.377095,4.824409,0.459816,-2.859966],[-1.091807,-9.176247,9.656421,4.693468,-5.758012,4.294699,6.464974],[4.706574,2.405995,-7.549807,-9.961901,-0.649035,-5.860971,1.390954],[8.132452,5.903342,-9.895518,2.314091,-4.602306,1.947588,-4.204070],[-8.174362,-2.822718,6.702693,1.470211,-5.670553,-6.074671,3.710649],[-4.688081,-5.861539,0.312688,1.803763,3.439288,6.103213,9.357133],[-7.684557,0.935122,-7.261108,-6.714281,7.495511,3.290633,-4.826007]],[[2.704389,-6.615430,-9.288706,2.174499,0.879994,-9.460722,-9.504040],[-8.480752,-9.126591,5.847119,-0.584509,7.243508,1.588630,-6.077292],[-5.348297,-2.542771,7.260962,4.434255,-8.074266,8.134263,9.240789],[-4.663586,0.742426,-8.765448,-9.118392,4.962249,7.480999,9.779865],[2.103520,0.149313,-8.747807,4.135613,-7.015674,-1.382846,-8.669239],[-5.987692,7.167391,1.965490,-3.545387,-8.543425,7.285212,4.713833],[3.397176,8.099993,-7.943138,-7.310912,4.088602,-7.300716,2.278489],[-0.479380,-3.818490,5.224822,2.348130,-0.614944,-1.407165,-2.977101],[-5.667860,-0.201784,7.127663,3.934649,-6.981486,-0.630423,9.518738],[-2.415822,3.733364,-3.273610,5.531197,0.369191,-2.080301,-6.959770],[7.016423,-7.216517,-4.247722,2.141945,2.055700,-5.285203,-8.548074],[6.397732,1.746519,-1.088395,-4.907008,4.157375,8.476016,-8.789576],[-3.722654,-8.007882,-1.548687,-9.471031,-7.565175,-8.470421,-1.371971]],[[3.166341,6.250165,-7.620146,-5.714425,-7.063817,-8.213328,9.083629],[-9.593332,1.504047,-2.571321,-0.781892,4.895623,-9.603526,-2.217108],[3.220411,6.581377,-0.927477,7.411528,4.217263,9.978730,-2.429845],[2.928630,4.059637,7.694046,9.822606,7.048115,-9.493145,-9.131210],[-9.771654,3.115616,2.594547,-3.218420,-2.261048,-6.153891,-3.642313],[5.022864,7.962297,-5.798145,-9.119910,-0.728190,6.640259,-8.962700],[-4.502822,-4.108774,1.138414,-5.723526,-6.756912,-3.253828,-3.084631],[6.571619,4.969761,1.502946,7.033150,0.687890,9.763566,8.468543],[6.397299,4.047196,-3.997469,-1.988686,8.606925,-9.694064,-9.521609],[-5.751420,-4.986905,0.476646,-9.022491,-1.071913,-8.860737,-3.745769],[0.559836,-4.521718,7.349497,-6.259906,-9.154114,8.920373,1.313678],[9.642210,5.543753,-7.781613,7.368488,0.646218,-4.922280,-7.076193],[7.799913,8.982396,-2.508943,-6.293753,3.334910,-5.899680,3.829578]],[[1.559674,5.979292,-8.797652,3.459737,-7.792785,-4.788646,-3.340675],[-8.687625,6.472999,8.744473,-8.389089,7.452337,5.039100,-8.558291],[-8.158282,-1.969391,-0.354190,-6.807671,-6.509756,-3.612471,9.732437],[-0.733432,6.882189,-2.890963,-2.848636,2.144087,0.213526,5.909429],[8.907081,-3.991981,-0.839847,-1.468880,1.910289,3.875783,-7.979643],[-9.007683,2.618500,1.798174,9.727547,3.208085,-8.740841,7.862785],[0.792564,-2.967409,-2.089980,-3.124042,4.755662,2.496354,-2.706623],[-8.109986,-1.288957,-2.107485,2.473414,5.319480,0.603982,1.557539],[6.230742,3.637551,2.517689,-4.044806,4.200525,-8.679176,9.812584],[1.430954,0.092098,-3.464407,-7.798135,2.579666,-0.900894,2.539714],[9.934402,5.713201,3.776806,-0.142629,2.687346,-7.088119,1.054283],[9.873713,-8.104646,-6.368029,3.536493,-4.628359,6.633753,8.844413],[-4.535531,6.410500,5.926673,-3.302681,-2.903235,-6.325717,2.041568]],[[-3.934497,8.781450,7.591454,-8.879994,6.760321,-8.093717,7.999008],[0.584869,-6.955145,1.608260,-5.190074,-0.902852,7.490718,7.198927],[-9.360975,-6.803612,3.946593,9.807023,-2.808632,1.145643,6.500907],[4.080844,0.517707,4.708779,-5.027650,-7.226932,-4.973791,8.789700],[8.088154,8.952319,-8.830303,-2.619977,2.968060,-6.493192,9.219727],[-7.028977,-4.947040,7.030306,-9.952992,8.264823,-5.885800,0.066447],[-8.403413,-1.377985,8.263829,-3.458844,-7.193271,-0.148806,-0.272945],[0.810688,-7.126361,-4.808163,9.811316,-9.413843,-4.176418,-9.528485],[4.755118,3.193429,-6.371577,3.444193,7.093967,8.317817,-4.118687],[-8.229156,4.102298,-5.912978,6.290633,-4.600074,5.312554,-9.228156],[-3.079513,-3.062725,9.845023,8.828258,6.700324,5.253473,-5.694295],[-2.739040,-3.588269,2.976418,-7.430940,3.295221,-9.333365,-8.440154],[0.043543,-2.037080,0.547814,6.913895,-3.644291,4.617700,-6.542599]],[[7.550029,3.363331,1.743082,-7.905197,3.021553,5.884871,-8.225906],[-5.329364,3.368028,4.333566,8.592850,-9.018527,7.436369,-8.755601],[-9.468957,-6.634994,9.327213,-4.210168,4.153401,-0.885718,9.498311],[-5.965099,9.905073,8.219970,-0.720015,-4.525624,2.732577,-8.075553],[-3.422785,2.061524,2.759394,-4.256556,-1.485375,-0.711347,8.335300],[-9.368267,-8.196846,-8.675312,-3.965336,-8.384963,-6.568929,-7.841725],[7.482082,3.744305,9.339916,-8.997814,-9.580845,-2.078228,2.616361],[-2.621986,3.703085,-3.053188,1.002785,1.653819,-2.545592,-4.397557],[6.986367,-9.274460,-1.037530,-8.329434,8.366901,-9.087822,1.261443],[-0.730991,1.706095,3.722307,8.402865,-7.935278,-6.779355,-6.385177],[6.334061,6.739835,-0.080726,6.483778,9.196557,-3.873497,0.688329],[-9.085219,7.978118,4.517943,-6.465735,6.200265,-9.790671,-9.934920],[-6.817009,1.696276,-6.473615,-9.147933,0.039124,0.078051,3.871237]],[[3.967100,-3.402767,3.789920,-9.994774,0.398509,9.554635,-8.572854],[-0.120079,-5.787337,-2.333019,3.916116,-7.602410,3.085984,9.858925],[0.972044,-4.733290,2.639955,-4.034921,6.482878,-1.695923,0.470715],[0.753703,8.070540,5.832770,-7.721001,-8.066068,-1.277002,7.591952],[-2.017285,-6.959439,9.080100,-7.827586,0.923895,3.630749,1.645012],[3.205325,9.374786,-9.124649,7.112140,-0.082349,8.438361,4.454777],[-1.492207,4.685895,2.751326,-6.685956,9.968420,-1.042560,7.167420],[8.505465,9.615377,-1.462600,3.684960,0.243844,-7.547376,2.453232],[-5.267375,8.416876,7.946994,8.900699,-3.970189,-2.959816,-8.235121],[-8.015191,-0.323302,-5.194920,0.540228,8.476069,-4.751711,0.906253],[-2.409467,-0.472391,1.777503,1.837761,2.256136,7.084064,-6.608252],[8.327715,-0.782916,9.186692,0.974095,-2.419088,-6.984706,5.416358],[8.631560,8.655582,3.738774,-6.328893,1.470154,-6.465156,5.730264]],[[-5.453226,4.124583,-7.371898,1.527446,-6.996862,-0.655913,2.890555],[-8.033532,2.527033,0.334856,-8.916582,-8.166995,2.970622,-0.550644],[-7.605222,-5.921080,-5.635682,-5.564395,6.078143,-1.562063,-9.662444],[3.524814,6.137553,6.887417,8.114841,4.681186,2.665885,-2.362238],[8.158036,-5.968146,-0.803899,-6.383426,-3.205450,-6.404372,-5.628791],[-7.427194,0.648573,7.908360,3.864078,6.756392,1.245455,-7.327360],[-5.911344,-1.809858,-8.006202,-3.366751,8.455962,0.373735,8.935166],[0.440015,-9.336199,4.263581,2.705030,-5.049813,2.504422,0.058550],[-0.239927,9.544388,9.499344,-6.613645,7.254197,-8.574923,9.053306],[-5.372224,3.094185,-3.571327,8.580202,5.187527,-8.391984,-2.235514],[6.300645,8.424431,1.819471,0.355831,-6.440255,-0.129740,-0.715005],[-8.960682,-0.260465,-6.813321,-8.287195,8.825306,-9.196050,8.788692],[-6.080888,-4.306881,3.327415,0.801587,0.973296,5.717567,-9.159893]],[[8.170898,0.735862,-6.897310,-2.553068,6.879026,-1.978227,0.364836],[-2.260590,2.226349,-6.121276,-9.956666,3.460232,-6.229553,-7.756274],[-2.678305,-1.362682,7.403127,8.918499,0.816911,4.388585,4.435026],[-6.608948,-9.659572,5.089675,8.262635,-0.844884,4.336525,-0.964199],[-2.694934,-6.074735,0.484207,-7.932135,-0.146988,5.119899,5.265358],[-3.325448,-8.762055,5.182651,1.559498,-6.828940,-2.283461,0.849205],[5.524317,-4.584749,-2.726813,-8.745473,3.012902,0.821697,9.038811],[7.683441,0.526687,7.066765,-7.455917,-6.725655,2.708265,9.494585],[7.292421,9.267724,-0.680595,-5.583275,-9.302730,-2.246882,1.439686],[3.537142,-6.344904,-1.286365,5.232809,7.039350,-6.056076,3.324751],[1.146559,-8.934137,7.221843,2.105530,9.584616,3.517432,-3.969065],[9.046145,1.727464,-8.649213,4.202617,5.709834,-5.940609,6.877648],[-9.664549,-6.564306,4.118757,9.025789,6.170288,-7.608467,-6.343969]],[[-8.244115,9.942676,7.608090,9.498574,7.812808,-1.524099,7.297308],[5.957568,8.215775,1.042163,3.419941,-5.091822,-6.725866,7.671682],[-8.930118,-0.335311,7.707698,-7.886334,-8.585090,-7.410138,6.404104],[-5.972076,-8.001169,0.574015,2.439004,6.072980,6.345121,1.360385],[6.092181,-9.238185,5.809312,8.643090,-5.043053,3.848509,5.065313],[-4.858596,-9.555931,1.425668,4.738473,-8.646653,1.689883,6.218075],[-8.734070,-2.429261,-5.802525,7.797042,4.669324,-5.612886,7.807117],[-6.244509,6.248062,7.879403,2.321802,-9.500628,1.492833,-1.491960],[2.924629,1.528166,-5.493698,1.824320,-0.046605,-8.028400,5.190163],[3.645638,-4.622664,0.203751,6.752153,0.400733,2.898196,2.122527],[4.574019,-1.714372,4.430900,-7.047236,3.686537,-9.236543,-5.527265],[-6.129788,6.955778,-8.826903,3.526181,-5.801988,-3.631184,-1.845484],[9.294049,-9.729228,8.360708,7.839907,-6.002757,-4.179720,-8.664316]],[[2.628455,-0.468184,-1.613709,-4.154353,4.842871,5.132489,-4.053089],[-4.741512,4.755204,-0.567575,-4.400193,-0.810481,-0.165900,9.175407],[2.046613,-4.494080,-6.272285,-7.700288,-5.409583,-2.194911,-8.099429],[5.334840,1.049888,4.053555,-6.464836,0.187336,8.305138,-7.791367],[-4.773778,0.563593,4.961205,5.673520,-9.658746,5.287711,-0.778467],[-6.488121,5.662495,9.037309,5.763837,4.880055,-3.110530,-1.431619],[2.418485,5.221470,-4.951045,7.015867,-3.137351,-7.709654,-1.725452],[-9.669821,0.102827,4.657511,-6.222183,9.345376,-9.371820,4.090214],[8.181691,-1.624558,8.320510,4.245297,-2.367940,6.073299,2.482992],[6.321165,8.257867,-5.562626,7.389930,6.652433,-0.319649,8.140835],[-1.558318,3.016931,9.552652,-5.569340,4.340013,-8.604361,-2.281569],[6.994934,7.845096,3.250699,-7.581230,3.622970,6.293340,2.754792],[-5.245537,-5.998785,-3.662632,-4.909902,-5.337769,-6.885427,-6.996974]]], dtype = "float64")#candidate|5132|(11, 13, 7)|const|float64
bop_5133 = relay.power(var_5131.astype('float64'), relay.reshape(const_5132.astype('float64'), relay.shape_of(var_5131))) # shape=(11, 13, 7)
output = relay.Tuple([bop_5133,])
output2 = relay.Tuple([bop_5133,])
func_5139 = relay.Function([var_5131,], output)
mod['func_5139'] = func_5139
mod = relay.transform.InferType()(mod)
var_5140 = relay.var("var_5140", dtype = "float64", shape = (11, 13, 7))#candidate|5140|(11, 13, 7)|var|float64
output = func_5139(var_5140)
func_5141 = relay.Function([var_5140], output)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_5180 = func_4383_call()
call_5181 = func_4383_call()
var_5192 = relay.var("var_5192", dtype = "float64", shape = (5, 5, 7))#candidate|5192|(5, 5, 7)|var|float64
bop_5193 = relay.power(call_5180.astype('float32'), var_5192.astype('float32')) # shape=(5, 5, 7)
bop_5196 = relay.power(call_5181.astype('float32'), var_5192.astype('float32')) # shape=(5, 5, 7)
func_2898_call = mod.get_global_var('func_2898')
func_2900_call = mutated_mod.get_global_var('func_2900')
const_5207 = relay.const([5.243105,-6.156796,9.648545,-1.226532,-5.201987,-4.080000,8.936501,-8.452902,-8.484779,7.678702,-3.508802,-3.267697,6.047469,3.984961,1.868233,6.347096,9.142072,-7.755900,7.871406,2.158179,-9.923181,1.843853,-1.606468,-6.063373,-1.836295,7.682769,-0.892985,1.298999,-6.428457,-3.654027,8.543226,-4.863596,-5.371233,-9.116357,1.217280,9.784941,6.238966,-6.905700,1.163288,7.244382,-1.534210,-8.531706,-7.626516,-8.790968,-3.064624,-7.430885,-3.921781,-7.446894,-5.756291,3.172353,-6.877473,9.421841,3.801594,1.476264,-4.476789,-0.358764,3.965477,2.232709,-7.479360,1.633791,-8.802639,3.140725,-2.342942], dtype = "float32")#candidate|5207|(63,)|const|float32
call_5206 = relay.TupleGetItem(func_2898_call(relay.reshape(const_5207.astype('float32'), [9, 7, 1])), 0)
call_5208 = relay.TupleGetItem(func_2900_call(relay.reshape(const_5207.astype('float32'), [9, 7, 1])), 0)
func_2345_call = mod.get_global_var('func_2345')
func_2348_call = mutated_mod.get_global_var('func_2348')
var_5220 = relay.var("var_5220", dtype = "uint64", shape = (54,))#candidate|5220|(54,)|var|uint64
call_5219 = relay.TupleGetItem(func_2345_call(relay.reshape(var_5220.astype('uint64'), [1, 9, 6]), relay.reshape(var_5220.astype('uint64'), [1, 9, 6]), ), 1)
call_5221 = relay.TupleGetItem(func_2348_call(relay.reshape(var_5220.astype('uint64'), [1, 9, 6]), relay.reshape(var_5220.astype('uint64'), [1, 9, 6]), ), 1)
output = relay.Tuple([bop_5193,call_5206,const_5207,call_5219,var_5220,])
output2 = relay.Tuple([bop_5196,call_5208,const_5207,call_5221,var_5220,])
func_5225 = relay.Function([var_5192,var_5220,], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
mutated_mod['func_5225'] = func_5225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mutated_mod.get_global_var('func_5225')
var_5227 = relay.var("var_5227", dtype = "float64", shape = (5, 5, 7))#candidate|5227|(5, 5, 7)|var|float64
var_5228 = relay.var("var_5228", dtype = "uint64", shape = (54,))#candidate|5228|(54,)|var|uint64
call_5226 = func_5225_call(var_5227,var_5228,)
output = call_5226
func_5229 = relay.Function([var_5227,var_5228,], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5266 = relay.TupleGetItem(func_5086_call(), 0)
call_5267 = relay.TupleGetItem(func_5087_call(), 0)
output = relay.Tuple([call_5266,])
output2 = relay.Tuple([call_5267,])
func_5270 = relay.Function([], output)
mod['func_5270'] = func_5270
mod = relay.transform.InferType()(mod)
output = func_5270()
func_5271 = relay.Function([], output)
mutated_mod['func_5271'] = func_5271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_5319 = func_4383_call()
call_5320 = func_4383_call()
uop_5328 = relay.sin(call_5319.astype('float64')) # shape=(5, 1, 7)
uop_5330 = relay.sin(call_5320.astype('float64')) # shape=(5, 1, 7)
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_5342 = relay.var("var_5342", dtype = "float32", shape = (3, 360))#candidate|5342|(3, 360)|var|float32
var_5343 = relay.var("var_5343", dtype = "float32", shape = (780,))#candidate|5343|(780,)|var|float32
call_5341 = relay.TupleGetItem(func_1580_call(relay.reshape(var_5342.astype('float32'), [12, 15, 6]), relay.reshape(var_5343.astype('float32'), [780,]), ), 3)
call_5344 = relay.TupleGetItem(func_1583_call(relay.reshape(var_5342.astype('float32'), [12, 15, 6]), relay.reshape(var_5343.astype('float32'), [780,]), ), 3)
func_5139_call = mod.get_global_var('func_5139')
func_5141_call = mutated_mod.get_global_var('func_5141')
const_5347 = relay.const([[7.398119,6.514651,4.822891,-7.200504,8.671872,-4.799080,3.467404,-5.010319,6.698415,9.513637,1.328335],[-9.258051,3.946805,-7.386990,-8.713208,-9.623534,2.539623,7.138264,5.317161,7.166240,-5.259269,-4.492264],[-3.329919,-9.751483,-0.285127,-6.477985,4.397472,3.351527,1.212858,4.367889,4.978303,7.203801,1.046740],[-8.783209,-9.493922,5.613483,3.293617,-0.894046,-0.085061,-7.416725,-5.166775,7.323135,7.559697,-3.911818],[-6.471251,8.860360,-6.818292,-9.891751,8.234571,-8.934546,-8.879619,1.829731,9.003088,-3.990313,-3.117538],[-2.208385,4.548616,4.010189,-4.710783,8.474956,2.635510,9.114154,7.017209,7.423671,-4.535206,1.365339],[9.181870,-5.799462,-2.592578,4.841472,1.934062,-4.089671,2.069446,-0.887449,9.243867,-8.015004,-2.225007],[-8.147824,1.966343,-8.003624,-5.252842,5.010130,-1.394537,-5.300741,-3.371449,-9.388214,-7.901079,-2.771859],[-9.493679,5.854420,0.339214,-4.529287,2.270207,4.323278,-2.960689,-2.197953,0.601822,-4.173249,-6.431893],[7.811834,-4.154113,-4.362456,-3.126053,-2.430963,0.062044,-0.305035,2.630066,-7.072777,-7.999627,-8.506210],[-4.332909,9.888089,-6.786437,4.369004,-3.213009,5.286635,-8.506725,0.720766,-3.270624,3.676721,-0.480976],[-0.966059,-1.584509,-1.356470,6.555593,3.043223,-0.830782,7.005674,9.087111,3.411328,1.821465,-1.604391],[-0.420933,-3.976537,-3.921460,2.460546,-2.315582,-4.913922,-2.510986,4.480785,2.321878,9.880551,4.018432],[-5.095993,-6.259698,-3.881412,-4.994397,8.830358,1.085793,-8.329353,-4.837988,-4.948686,8.236627,7.622376],[1.898188,1.944137,-3.685913,-1.316953,-6.573942,-3.327107,-3.496709,-4.318791,3.450038,-2.188616,-8.360873],[-2.731742,-2.265654,8.423325,-4.650003,9.389271,8.854905,-0.204932,-1.372618,8.068294,-6.699323,1.759462],[-1.718882,7.803230,4.231752,-3.150729,-8.497604,-9.577286,4.224574,0.977863,2.202050,-5.052195,1.737550],[-1.334432,0.326784,-5.663946,9.150682,8.402431,-3.435751,4.002723,-6.312335,4.394667,3.594549,5.318693],[3.834737,-9.891161,7.165517,3.101839,0.441840,-1.508070,6.546389,-1.140155,-9.119254,-2.572162,3.289321],[0.362560,-5.199837,-2.520148,-6.824441,-5.746048,-2.165520,-9.266036,1.471445,8.760024,6.266995,-9.938903],[-4.388643,6.999260,-7.135541,4.065386,-3.119572,0.281114,7.840350,-3.063856,2.425984,5.560953,9.993523],[1.612685,7.555376,9.532996,0.078126,8.162897,9.331329,-1.749173,5.227376,4.581367,-3.748141,-4.246427],[-6.863025,-0.512650,8.777377,-2.825570,1.018788,-0.324167,-9.759200,-2.284791,8.628272,2.540382,-2.913280],[-1.308795,-0.117721,5.814089,-0.870432,-0.280939,-0.846353,-4.855203,4.360363,-4.567199,-6.255832,2.054603],[9.459313,-6.291656,-7.739539,4.941238,-9.858775,-8.776024,9.081343,3.770647,6.756245,-2.082270,-0.888073],[9.900573,6.849086,1.047864,-4.628068,-6.710709,-8.127630,-8.037917,4.373852,9.723828,6.555588,-5.994475],[-5.199577,-1.941000,8.153266,1.068113,1.727908,3.157495,5.217178,7.412229,-0.324666,5.263694,-9.136973],[3.219317,9.793962,9.640141,-5.106257,7.776945,-4.160215,-6.089672,-6.795725,6.502701,-1.920161,5.735236],[2.717784,-0.555803,-3.216009,-6.523523,7.927027,-8.680913,6.626638,-3.282307,6.460335,-1.117353,6.975742],[-4.655275,-4.643943,-6.880285,-6.835272,-0.502019,-0.584259,8.735753,-7.173142,1.496392,9.677229,-5.582999],[-3.248208,-6.860428,-3.434469,6.085698,8.140147,-2.045244,5.478841,5.065992,-4.396423,-6.772077,-1.254647],[2.718110,8.465765,-8.981135,2.838704,1.285891,1.954963,8.625231,-9.053193,-4.590369,-3.626581,-8.196006],[4.513897,-9.605237,6.319017,-0.012308,-4.093026,6.725375,-7.991293,2.934111,-6.737864,3.427921,-9.081969],[-7.295279,1.857283,7.783862,1.097288,-7.901911,5.349537,-7.921446,5.689891,-0.242367,-6.009493,9.267051],[9.361906,-6.542137,-6.245746,-0.249050,9.786957,1.394060,7.880764,-0.824323,-8.065834,2.996769,1.296972],[1.261025,-3.873770,5.845369,8.718302,5.104576,8.703829,-6.325742,-9.044586,-7.764009,2.035022,-1.411009],[-4.661266,7.804635,9.426720,-2.216745,-6.181053,1.572394,6.422699,-7.641043,-8.875539,-7.535512,2.623151],[2.706896,7.656513,0.664154,1.984800,8.632267,6.431533,4.615837,9.414984,4.434934,0.363976,-0.271720],[7.270806,8.014160,-4.009253,4.024571,-8.993773,3.386944,4.638129,5.372021,0.267229,-9.812178,4.344796],[1.535370,-5.842945,6.655993,-2.285745,-3.342095,-1.865396,0.173618,3.039147,-5.750776,6.493530,9.699802],[2.233790,8.376917,5.201868,7.040898,3.257289,0.742221,8.782488,1.579676,-7.219417,-1.981613,0.296582],[-0.898970,-9.074082,4.350038,-3.175880,-7.492617,5.620630,-4.925129,-3.503017,4.684499,5.455728,8.229186],[3.104952,-2.399071,-8.176273,-2.610261,-9.399520,6.230758,-2.931861,-9.309609,8.051751,-1.331206,-1.705824],[-0.481932,-4.306910,3.926243,-6.703493,-2.084460,5.895602,-1.687299,3.197566,-9.846738,3.727958,8.626564],[-7.570961,-9.829991,-1.528957,-9.216760,-0.194569,4.712599,-6.184004,-9.223561,8.359779,4.256390,5.243813],[7.825833,-9.672429,-5.470852,5.757745,8.745359,5.044242,9.111805,-4.742889,-0.504808,-7.692173,7.527968],[-5.191052,-8.925350,6.670514,9.452948,7.445179,5.305673,-6.924255,7.867003,8.904883,2.310645,-1.702534],[8.465409,-8.602312,5.484302,1.455716,7.329907,-5.855172,-5.839384,9.086789,-0.271461,-4.635759,8.897117],[1.754851,-2.305599,5.451417,7.562340,-3.985562,2.136530,9.857932,-6.464282,7.318173,-4.610526,2.440153],[0.764614,-0.264571,7.365204,-8.823823,7.238523,2.090583,-5.066975,3.605937,-6.048398,-6.466202,-4.860542],[8.991324,5.433870,6.327870,-2.548287,-0.762356,7.783498,-2.068035,8.189792,7.191330,-7.254775,-6.703337],[-2.066180,2.660207,8.888751,-0.183817,7.944757,-9.370761,-1.354906,-5.179288,-1.147234,2.324700,-4.121771],[-6.096634,-1.588640,-8.124155,-7.650099,2.787792,8.297266,-1.576772,3.512498,-6.241112,-1.686138,8.544639],[-9.869711,9.516030,-0.504174,2.510895,-3.226299,-6.731135,2.562943,-5.187317,8.733434,-7.420550,-0.972466],[2.566620,8.877440,-6.030767,3.135546,2.618934,8.230763,-8.777777,0.565362,-5.885980,-8.597688,-5.511987],[-5.248855,3.771464,-1.252276,-8.021308,-9.509895,-2.315458,7.419471,2.780467,-1.270449,5.124240,-8.905709],[2.149904,1.829564,5.284810,-5.982706,1.578257,-2.567061,-2.070958,5.669802,0.712410,3.513458,6.384104],[-6.122949,3.329835,7.337932,9.187158,-4.532052,0.105279,-3.349468,8.589436,-3.315040,3.646027,-5.350255],[-6.270492,-6.630635,7.167122,1.851812,7.753353,-1.750046,2.559638,5.779174,3.011935,3.862896,2.553204],[5.995368,3.704835,8.975874,1.573843,-0.220863,1.896415,6.357822,-9.362242,-0.697593,8.092077,-4.209907],[-3.524941,4.452930,-3.344109,8.051638,-9.209695,-2.322199,-6.109664,5.276783,3.722760,6.109616,-9.502233],[-7.482442,-1.145886,-3.265490,6.157482,-3.033823,-6.934846,8.820767,-5.998889,-2.057449,9.048820,-7.871279],[9.192405,0.826409,-8.386214,8.021070,-9.841731,2.924189,-2.677330,-4.011760,2.580500,-9.075582,-1.681329],[-9.306569,-5.262458,1.495648,6.323519,2.994972,9.092470,-5.777778,-9.639804,1.036363,3.373183,1.066700],[-3.271869,9.149643,-6.500060,-3.876348,6.013859,4.287323,5.483868,3.932265,3.335653,7.776414,-1.861321],[-8.788954,-2.834495,8.692011,-1.644722,3.041144,-1.078313,-0.813011,-8.594356,9.836970,5.098039,8.714887],[2.716138,-6.607520,-1.721123,-5.601730,7.865273,9.653703,-8.366934,9.917272,1.217894,3.923850,2.917559],[-0.925239,-6.349124,1.360531,-4.366308,1.036041,7.320145,-5.800420,0.479091,-7.742055,7.059602,-7.314216],[-6.378823,7.392274,0.734352,1.930283,-3.325227,-2.160251,4.836301,2.719600,2.557838,-5.597064,-1.644413],[-2.030605,6.691818,-2.303698,-7.589001,-7.769595,-4.165242,-5.534639,-1.261048,-9.414925,3.532734,-9.914390],[-4.575301,-5.784406,-5.105801,-2.631667,-3.188113,-9.732399,-8.129613,-9.754276,-6.413883,7.100360,-9.962532],[-7.052310,-1.741280,-1.405501,2.475197,-3.541052,-8.467325,7.452619,0.565150,5.279000,-5.398263,1.826714],[-0.114470,6.456132,-7.264037,1.032665,-0.545635,-5.267131,-5.453833,-4.679662,8.279707,6.353896,-9.022450],[-2.527582,-0.865763,8.698676,4.731417,3.479352,-6.706879,-6.612246,-1.636346,-7.603876,5.476477,3.171114],[9.724357,-0.261114,-3.470313,-5.117137,-3.728377,9.052932,-2.028359,-4.664519,8.033454,1.957754,-9.514671],[1.914386,8.367580,-8.628860,-6.816119,-9.841176,1.443700,-1.816935,-5.462916,-1.747374,9.997240,3.876288],[-8.017661,2.285534,-4.547897,-9.209722,3.001295,2.466631,3.046983,7.841283,0.456756,5.269755,-9.378960],[-2.428030,-4.652118,-2.871431,-7.470341,5.245304,7.896719,0.158886,3.789420,-7.200525,5.844610,8.744547],[2.018834,-2.730584,-7.163228,-9.508221,4.217564,0.822757,2.281618,9.126976,7.258237,6.850379,5.443421],[-1.328085,-5.424851,1.444930,-8.807689,-7.292058,-3.896163,-6.861472,-3.002428,1.764458,-4.191420,2.346080],[-3.870729,4.843880,2.842078,-0.057074,9.167766,3.365392,-8.086020,9.902272,6.157578,-9.484488,-5.297759],[-1.512058,6.797848,-9.304812,-0.695047,-8.274598,-9.743453,-7.353373,-0.228200,5.449347,-6.646493,6.321911],[8.793213,8.354441,-0.129291,-1.171201,3.081183,5.459940,9.522591,-4.869705,3.363974,-0.346609,-0.249187],[0.907986,-0.444221,1.868429,3.142595,8.781505,8.642680,5.731629,-9.298929,6.659663,-8.310542,3.719671],[-9.618374,1.047197,-3.521514,-2.749646,-6.814583,0.509618,-3.928004,6.245682,1.751690,-3.117459,-8.720007],[-0.880416,-5.245219,-3.460780,-0.716804,-4.556552,9.237340,-1.783073,3.564460,-2.225650,-0.540493,-0.903496],[-0.534071,-8.211630,-6.700863,7.950269,-4.835823,-6.111480,0.154450,2.144820,-6.822060,-7.125401,7.359041],[3.944622,0.809228,-4.171504,3.226452,-9.761844,1.377907,0.680971,-3.817114,-1.557960,-1.841038,3.098480],[4.113609,8.542237,-0.848201,8.826176,-8.746797,-3.540719,-8.757540,0.205881,-6.356427,-1.995820,-2.195072],[9.100997,-7.324145,6.417230,-8.276122,-2.835344,4.618805,1.195237,9.894087,5.496938,8.393958,-8.984052],[-0.970446,6.375443,4.974138,-1.345477,3.577330,-2.618989,1.024889,-8.910541,-1.093069,3.877637,-0.354515]], dtype = "float64")#candidate|5347|(91, 11)|const|float64
call_5346 = relay.TupleGetItem(func_5139_call(relay.reshape(const_5347.astype('float64'), [11, 13, 7])), 0)
call_5348 = relay.TupleGetItem(func_5141_call(relay.reshape(const_5347.astype('float64'), [11, 13, 7])), 0)
output = relay.Tuple([uop_5328,call_5341,var_5342,var_5343,call_5346,const_5347,])
output2 = relay.Tuple([uop_5330,call_5344,var_5342,var_5343,call_5348,const_5347,])
func_5353 = relay.Function([var_5342,var_5343,], output)
mod['func_5353'] = func_5353
mod = relay.transform.InferType()(mod)
mutated_mod['func_5353'] = func_5353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5353_call = mutated_mod.get_global_var('func_5353')
var_5355 = relay.var("var_5355", dtype = "float32", shape = (3, 360))#candidate|5355|(3, 360)|var|float32
var_5356 = relay.var("var_5356", dtype = "float32", shape = (780,))#candidate|5356|(780,)|var|float32
call_5354 = func_5353_call(var_5355,var_5356,)
output = call_5354
func_5357 = relay.Function([var_5355,var_5356,], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5388 = relay.var("var_5388", dtype = "int32", shape = (1, 11, 14))#candidate|5388|(1, 11, 14)|var|int32
const_5389 = relay.const([[[-6,-1,-1,-7,1,8,5,-8,-7,-1,-8,4,-2,4],[5,-4,-2,5,10,-10,-4,-3,-8,-4,-5,-6,4,7],[-4,1,-4,4,2,3,3,-4,-4,6,10,-9,-8,10],[-8,9,-7,-3,7,-8,7,2,-7,-9,-5,-4,-6,2],[1,-6,-6,-9,5,-3,-9,3,6,-6,-6,-3,9,-8],[2,10,1,-10,-1,1,3,10,8,-8,1,-5,-10,-7],[-8,7,-6,-1,3,5,4,-1,1,9,-7,4,-2,6],[-9,-10,-2,5,3,5,9,1,-8,-10,-6,-8,5,-2],[1,8,4,7,6,4,-9,-5,-8,4,7,-5,-3,7],[-5,5,-8,7,3,-10,5,-6,10,3,-8,-4,-8,-9],[9,1,4,1,-10,-5,-2,2,6,2,-1,-6,9,-3]],[[6,-2,-5,-1,10,2,2,-5,-2,-4,4,6,8,-2],[9,-7,-7,-2,-1,-3,6,-1,5,-7,-2,7,4,1],[5,-2,-1,1,-8,-2,7,10,-3,4,-6,2,1,-3],[-3,8,10,-4,10,8,-8,5,-6,-9,-7,-4,5,10],[-7,10,9,-8,9,-9,7,5,8,1,6,-2,4,-5],[-3,-4,1,-10,1,1,-2,-10,-8,6,-6,9,-6,6],[-8,-10,9,-1,7,1,3,-9,4,8,4,-9,1,-6],[-10,9,-5,-1,3,3,5,-8,-9,7,-8,-7,-9,5],[-6,-6,-3,-4,-6,-3,7,8,1,4,5,-5,-8,-5],[7,-4,-1,9,7,-4,-10,-3,2,-3,-9,5,10,-7],[2,-3,4,-4,-10,-2,-8,-2,-1,7,6,8,-7,-1]],[[3,-3,-2,4,4,4,10,-2,10,7,1,-5,-4,-4],[6,-5,-3,-3,-7,-4,4,-6,2,3,4,-3,3,-1],[3,-5,-1,9,1,3,-1,-8,3,-1,3,-8,3,-3],[-1,3,-2,-6,-1,8,-9,1,-8,-8,4,-7,-3,-6],[-6,3,3,-3,6,-9,6,-10,-10,6,-9,-10,-4,-2],[2,1,6,7,-2,6,2,5,-3,-3,-8,-1,-3,-10],[10,4,-9,-1,-1,-4,-9,-2,-4,-6,-4,1,10,-8],[3,-2,9,4,-10,-3,-1,5,9,-2,-4,1,-9,-9],[4,-2,5,-1,-9,-4,-10,-4,-8,-3,-6,-10,-5,-8],[3,3,-5,6,10,-6,-2,2,1,-3,4,-4,10,1],[-6,10,-8,-9,-8,5,-2,-9,-5,-4,-6,5,-2,-8]],[[-4,-8,10,10,-2,3,3,10,-10,8,9,-4,-7,-4],[-8,3,-3,-2,10,-1,10,2,1,-7,-10,-8,6,-3],[9,-4,-10,-10,-8,6,-6,-10,-10,-2,-4,-1,3,-3],[-1,4,6,8,-2,10,3,-8,2,7,-10,-2,7,9],[5,3,-8,6,4,9,2,-8,5,6,-5,1,2,-10],[-1,3,10,-9,-10,2,1,-1,-3,10,4,7,-10,5],[-6,-3,3,-10,-1,-3,6,-6,-7,9,-4,9,-4,-7],[7,-8,-8,-7,-8,-6,-5,-1,-4,-7,-4,2,3,7],[-8,-4,8,-5,5,-9,-8,-4,-4,4,-4,9,-7,-7],[2,10,2,-2,-7,9,10,7,-1,-1,-3,-2,-7,-6],[-2,5,-1,-2,2,-3,3,-3,10,-1,8,-7,-10,-10]],[[8,1,1,3,-4,4,1,7,1,-8,-1,-1,4,1],[-7,-9,9,4,-8,1,-4,-8,-2,10,4,-2,9,-3],[3,5,9,4,5,-7,7,-5,-2,-5,-5,-6,2,-5],[5,-4,-5,8,-4,-9,2,-2,-5,1,7,10,2,-4],[-7,-7,-8,-1,-9,-5,3,2,4,-8,10,-4,5,10],[1,-4,-4,3,4,-4,-4,8,7,-7,-3,-7,2,9],[-7,-9,-2,9,3,-7,-5,-2,2,-8,-7,7,10,2],[-7,-3,9,-5,2,6,-5,4,5,-10,-3,3,5,-3],[-6,-9,5,7,4,6,7,3,6,1,5,-8,10,-10],[3,-10,-8,2,-10,9,3,10,-9,2,-2,9,-4,6],[8,1,-9,10,9,-3,5,3,-9,-7,-7,6,-4,9]],[[-3,6,-2,5,-7,1,9,6,-5,-1,3,-3,-9,-2],[-5,4,7,-9,6,-10,-1,10,-4,3,5,-6,-1,1],[-9,6,-5,3,-8,-10,-6,-7,9,6,-4,-5,-2,9],[9,7,6,-3,2,2,-8,-4,3,3,9,-7,8,-3],[-2,-6,-4,-8,-6,1,7,-8,6,-9,-3,2,2,6],[1,2,10,4,-3,-4,3,5,-9,-5,4,5,-6,9],[6,8,5,-1,-10,-10,-7,-9,8,-2,-8,-3,3,-10],[-2,-5,-4,-6,-2,5,9,-4,8,1,-1,4,-2,-2],[4,3,10,-4,10,-5,-4,8,-4,4,-8,-1,-7,-8],[3,-3,-9,2,-4,-4,-6,-1,-7,-6,1,-6,-4,-8],[3,10,-4,-4,-7,2,5,-8,-5,3,-5,-7,-10,3]]], dtype = "int32")#candidate|5389|(6, 11, 14)|const|int32
bop_5390 = relay.subtract(var_5388.astype('int32'), const_5389.astype('int32')) # shape=(6, 11, 14)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
var_5409 = relay.var("var_5409", dtype = "float64", shape = (420,))#candidate|5409|(420,)|var|float64
call_5408 = relay.TupleGetItem(func_3900_call(relay.reshape(var_5409.astype('float64'), [2, 15, 14])), 0)
call_5410 = relay.TupleGetItem(func_3902_call(relay.reshape(var_5409.astype('float64'), [2, 15, 14])), 0)
output = relay.Tuple([bop_5390,call_5408,var_5409,])
output2 = relay.Tuple([bop_5390,call_5410,var_5409,])
func_5414 = relay.Function([var_5388,var_5409,], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
mutated_mod['func_5414'] = func_5414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mutated_mod.get_global_var('func_5414')
var_5416 = relay.var("var_5416", dtype = "int32", shape = (1, 11, 14))#candidate|5416|(1, 11, 14)|var|int32
var_5417 = relay.var("var_5417", dtype = "float64", shape = (420,))#candidate|5417|(420,)|var|float64
call_5415 = func_5414_call(var_5416,var_5417,)
output = call_5415
func_5418 = relay.Function([var_5416,var_5417,], output)
mutated_mod['func_5418'] = func_5418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4470_call = mod.get_global_var('func_4470')
func_4472_call = mutated_mod.get_global_var('func_4472')
call_5520 = relay.TupleGetItem(func_4470_call(), 2)
call_5521 = relay.TupleGetItem(func_4472_call(), 2)
func_2345_call = mod.get_global_var('func_2345')
func_2348_call = mutated_mod.get_global_var('func_2348')
var_5525 = relay.var("var_5525", dtype = "uint64", shape = (54,))#candidate|5525|(54,)|var|uint64
call_5524 = relay.TupleGetItem(func_2345_call(relay.reshape(var_5525.astype('uint64'), [1, 9, 6]), relay.reshape(var_5525.astype('uint64'), [1, 9, 6]), ), 0)
call_5526 = relay.TupleGetItem(func_2348_call(relay.reshape(var_5525.astype('uint64'), [1, 9, 6]), relay.reshape(var_5525.astype('uint64'), [1, 9, 6]), ), 0)
var_5527 = relay.var("var_5527", dtype = "float64", shape = (5, 7, 7))#candidate|5527|(5, 7, 7)|var|float64
bop_5528 = relay.bitwise_xor(call_5520.astype('int8'), relay.reshape(var_5527.astype('int8'), relay.shape_of(call_5520))) # shape=(5, 7, 7)
bop_5531 = relay.bitwise_xor(call_5521.astype('int8'), relay.reshape(var_5527.astype('int8'), relay.shape_of(call_5521))) # shape=(5, 7, 7)
output = relay.Tuple([call_5524,var_5525,bop_5528,])
output2 = relay.Tuple([call_5526,var_5525,bop_5531,])
func_5549 = relay.Function([var_5525,var_5527,], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mutated_mod.get_global_var('func_5549')
var_5551 = relay.var("var_5551", dtype = "uint64", shape = (54,))#candidate|5551|(54,)|var|uint64
var_5552 = relay.var("var_5552", dtype = "float64", shape = (5, 7, 7))#candidate|5552|(5, 7, 7)|var|float64
call_5550 = func_5549_call(var_5551,var_5552,)
output = call_5550
func_5553 = relay.Function([var_5551,var_5552,], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5676 = relay.TupleGetItem(func_5086_call(), 0)
call_5677 = relay.TupleGetItem(func_5087_call(), 0)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_5689 = func_4328_call()
call_5690 = func_4328_call()
output = relay.Tuple([call_5676,call_5689,])
output2 = relay.Tuple([call_5677,call_5690,])
func_5710 = relay.Function([], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mutated_mod.get_global_var('func_5710')
call_5711 = func_5710_call()
output = call_5711
func_5712 = relay.Function([], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_5713 = func_4324_call()
call_5714 = func_4324_call()
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
const_5717 = relay.const([[-0.114766],[-8.891286],[-6.443727],[-7.522330],[-9.288600],[7.624942],[1.558535],[-6.335399],[-1.337937],[5.414596],[-1.421745],[-2.156352],[-8.645645],[2.676237],[-0.262783],[6.663433],[-5.528783],[7.875573],[6.386921],[2.126473],[-6.292135],[9.172880],[9.369688],[4.576759],[3.357342],[8.326659],[8.636729],[0.513881],[6.681528],[-3.961146],[-7.754435],[-8.476384],[-3.705765],[-5.916881],[-1.522959],[2.478801],[-6.444207],[-9.830663],[-8.911391],[1.082436],[9.787606],[0.112191],[-7.355048],[-0.522193],[4.637722],[1.892528],[-8.155721],[-4.632905],[-0.434960],[3.659302],[0.389170],[6.111343],[5.379727],[2.991290],[9.227954],[-6.171425],[-8.411542],[5.960087],[-3.585852],[-3.313903],[9.144550],[0.689696],[-9.294555],[-2.205265],[-9.754795],[4.100883],[-0.238844],[0.387954],[-4.869903],[1.701117],[8.955866],[-9.324422],[0.653032],[7.830188],[-4.160595],[8.724599],[4.859562],[7.275030],[-7.161624],[-7.323554],[1.191946],[-5.298548],[0.704295],[-0.975959],[1.196424],[0.706053],[4.722146],[-8.886687],[-8.249520],[-4.745305],[7.547069],[-9.913022],[-7.872407],[-7.396962],[9.049205],[-8.951136],[-5.165780],[-1.465047],[-9.572140],[-4.525596],[-1.568853],[8.016043],[8.246498],[-6.206213],[1.271387],[-7.698785],[-7.046294],[4.443818],[2.941463],[5.419412],[5.496007],[3.225398],[5.402644],[6.108656],[-5.973619],[1.178829],[6.295765],[-4.916292],[-8.915831],[-2.870358],[8.067096],[-7.260988],[6.224668],[1.563857],[-9.297890],[9.833263],[-0.269474],[7.254862],[-0.782778],[2.286820],[-5.370571],[8.354851],[5.479615],[8.843063],[-3.831230],[9.833384],[-7.856061],[0.036468],[-2.160182],[-3.330239],[-8.119642],[-7.161059],[8.447236],[-6.010830],[-2.406463],[-7.927192],[-9.949110],[-9.328367],[-4.635215],[2.773336],[-6.617195],[-4.870584],[-5.962339],[-8.073025],[-6.411572],[6.270447],[7.196589],[5.713023],[-7.563014],[-9.183063],[-1.308696],[2.754770],[8.706576],[-2.512919],[7.707755],[-9.491268],[8.027058],[9.894491],[7.940305],[-5.866512],[-8.596053],[-5.032987],[6.138897],[-2.525793],[7.927645],[-6.671905],[-0.484349],[-9.168990],[4.797632],[9.462526],[-9.090288],[-7.566407],[-9.773573],[1.064658],[-5.034646],[-7.422183],[-2.666581],[-5.363740],[-6.890148],[7.828162],[5.086464],[6.827414],[6.612624],[4.160947],[7.953748],[-0.667068],[7.756323],[1.665528],[-1.338809],[8.844661],[-2.668625],[7.965782],[-9.288869],[-3.327775],[4.717281],[-7.364582],[7.023311],[-0.766940],[2.804218],[4.128745],[-1.608979],[-5.966668],[6.472800],[8.098761],[-2.990657],[-3.258144],[-2.526638],[8.660986],[6.077730],[-6.088640],[5.114383],[9.347267],[-1.544114],[-6.002901],[-4.382328],[-4.550997],[0.856635],[-9.930206],[-0.731032],[-7.922096],[-7.066061],[2.710646],[-0.540512],[9.572111],[-5.077121],[-9.800243],[-3.504323],[-5.568957],[6.107138],[-9.836103],[1.355271],[-2.808135],[5.434346],[5.061457],[2.292587],[-3.621418],[-9.576793],[-8.426079],[2.801987],[-1.953104],[5.253610],[6.275525],[-7.486491],[0.152308],[-0.005819],[4.421806],[-7.756626],[-9.408058],[-8.280851],[-0.693387],[1.899481],[4.277214],[-1.520383],[4.285530],[5.664404],[-4.175217],[-3.398537],[-5.140117],[9.090760],[1.849857],[4.246067],[5.877511],[-2.251430],[4.390586],[4.738581],[-1.412707],[4.740812],[-3.036188],[-8.497562],[6.869212],[4.490304],[-4.402329],[8.417444],[2.451017],[-2.425451],[3.002957],[3.363258],[-1.119730],[-5.183385],[6.106384],[4.606654],[2.857169],[1.366162],[-3.147534],[2.230614],[-4.806026],[0.654743],[-8.503293],[3.519071],[-6.119189],[-4.098232],[-1.521408],[-9.352606],[-7.082589],[-1.465230],[2.443606],[7.543717],[-4.191019],[-4.642636],[-5.098476],[-4.601167],[7.534431],[-5.810972],[7.958527],[7.145894],[6.080753],[9.685732],[9.059381],[-1.250979],[-0.543445],[6.786830],[-9.553590],[-4.137489],[-3.207803],[-6.476394],[-5.146484],[5.499052],[-3.394732],[-2.110733],[6.281928],[3.177599],[1.697249],[-2.380310],[8.241222],[-0.606679],[-4.659329],[5.781174],[9.687975],[8.250526],[-6.985103],[-2.829850],[1.791431],[-2.874058],[5.604252],[4.723727],[-0.336328],[-3.233850],[1.602219],[3.214645],[4.644606],[-9.302689],[6.411632],[6.691041],[-3.994551],[-5.493343],[-8.140694],[0.859843],[-1.349564],[0.340238],[-8.844616],[2.681041],[-4.486633],[7.076436],[-7.865534],[-2.315782],[-1.228935],[0.810733],[-1.293480],[-9.829116],[-9.624178],[8.994952],[-0.508348],[-3.884980],[4.026009],[-4.491292],[-7.471302],[-3.775444],[3.881036],[-8.268759],[-3.284086],[-6.855220],[0.430818],[9.674053],[-4.636139],[-7.606952],[-4.362669],[1.833587],[4.117295],[-1.666055],[2.341224],[-4.711106],[-6.454672],[-7.034033],[-4.384060],[5.165221],[9.191152],[-5.269748],[-6.719253],[-0.017739],[1.286509],[5.995135],[0.196666],[-2.333130],[-1.722576],[5.477480],[-8.015476],[4.475368],[-4.618604],[-1.770002],[-4.416433],[-6.883969],[2.366165],[-0.712517],[-2.979340],[-3.789608],[-9.157543],[3.069289],[-5.558763],[-1.782272],[-3.066056],[2.570812],[3.073561],[0.604865],[-5.377977],[8.717109],[-4.698369],[1.462923],[-4.173926],[7.096726],[-6.140465],[-9.787840],[9.795761],[-9.979788],[-2.548530],[-8.239775],[-3.003387],[9.172048],[-6.376000],[-9.630114],[-9.097979],[3.386907],[3.237224],[5.022353],[-5.504048],[-9.773220],[-2.560733],[7.107741],[-5.593297],[-5.803501],[-9.448356],[-3.980666],[-8.084275],[4.186604],[-1.411613],[7.931135],[6.464516],[0.838892],[8.967459],[-0.129267],[0.537260],[8.058419],[2.115951],[6.274418],[-6.263656],[-1.872324],[-5.414278],[-7.772541],[-8.825706],[4.575266],[7.013986],[-1.788701],[8.207146],[0.730335],[-9.248331],[9.130617],[-6.564401],[6.849806],[7.526582],[0.217548],[-8.061697],[4.763462],[-5.324715],[3.564453],[0.629743],[-0.523623],[-7.053416],[1.515586],[-9.364406],[-7.190788],[-4.587406],[3.425994],[-2.478047],[-9.477470],[5.630889],[-4.265334],[-5.627111],[1.915318],[2.519090],[1.187231],[3.101075],[6.750052],[-0.392670],[-5.495694],[0.336101],[7.087653],[-6.306413],[-1.517964],[-7.683748],[-8.929870],[-7.716279],[0.225975],[-3.850157],[-5.869863],[-7.476462],[-7.260800],[8.293291],[6.248077],[-9.260927],[-4.646846],[-3.557003],[6.776369],[-7.707710],[-5.910861],[4.902319],[4.189817],[5.339162],[-0.729526],[3.715054],[6.701043],[-0.966228],[2.871364],[0.955408],[-2.454993],[-2.788652],[3.669148],[-8.088347],[4.626303],[-8.605499],[2.217155],[2.884738],[0.839947],[-3.112611],[-4.552611],[-7.919260],[9.721137],[-4.026281],[-9.323590],[4.275838],[5.009624],[-0.810003],[-3.647083],[-6.170025],[9.155555],[4.135785],[-0.951913],[0.329306],[5.087998],[3.536428],[9.948308],[7.562936],[-4.670524],[-9.127541],[5.738478],[4.543546],[6.038701],[7.450551],[5.497023],[-3.416930],[-9.284618],[8.353493],[-3.766009],[7.228486],[-7.537652],[8.829954],[-3.774148],[-8.868453],[-1.448290],[-4.193611],[-0.251165],[5.683400],[3.772600],[-6.044705],[-4.419513],[9.508044],[-0.621459],[3.948962],[-7.557259],[4.106271],[3.981601],[-8.960790],[4.570268],[-6.825091],[0.414403],[-7.714299],[9.843945],[-1.943293],[-0.583325],[8.781065],[6.860083],[-3.377829],[4.902674],[-0.723889],[-6.641284],[8.872345],[-4.860634],[3.542976],[-8.815198],[-1.860442],[-2.717423],[-4.364451],[-7.936608],[-6.650726],[4.484717],[4.445489],[6.522176],[-4.340209],[2.380927],[-5.534650],[-3.778399],[1.406171],[2.706263],[6.552284],[-3.695708],[-3.111014],[-3.783520],[-6.578411],[8.728828],[8.007300],[-0.026826],[3.199043],[-5.185365],[9.109012],[-7.790628],[7.131268],[7.350646],[5.713496],[-5.143867],[-3.063926],[-6.996359],[2.407547],[9.736204],[7.379067],[9.587151],[7.640521],[3.375531],[8.536067],[0.905466],[2.250741],[-1.124269],[-6.941896],[0.454870],[-0.151129],[-5.067476],[3.026934],[0.357013],[4.489512],[-2.941881],[9.760573],[-1.888104],[-5.135199],[2.153594],[1.853410],[-2.842909],[-5.678322],[-4.802971],[-5.227639],[5.774062],[2.061089],[1.012741],[-8.119342],[8.783398],[-9.046138],[8.119983],[2.671165],[-5.442525],[9.530012],[6.918025],[-7.460050],[-9.225652],[-4.925856],[-4.448013],[-6.552054],[-6.060002],[3.439451],[-6.197332],[-1.561373],[-7.372047],[-1.374356],[6.414387],[3.012150],[3.166580],[7.019926],[2.909308],[-6.094409],[9.353444],[-4.167503],[9.597004],[5.634663],[-2.974705],[7.262693],[-2.623530],[8.416016],[-5.345814],[-7.528383],[1.996011],[-7.732828],[4.060531],[-4.401030],[7.674114],[-9.836710],[0.768597],[-5.800071],[0.164342],[-1.325198],[4.863888],[6.046873],[-3.775713],[-7.360890],[-3.235756],[-5.639613],[-1.186999],[-9.947348],[-8.837815],[-2.262265],[8.358540],[-4.652393],[-6.321275],[9.406401],[-8.752997],[1.730043],[2.882036],[-0.696459],[9.358625],[9.260268],[3.561971],[-3.994722],[-1.019850],[8.257774],[6.783929],[-7.504671],[-8.466727],[7.109541],[-5.016484],[2.552590],[2.711878],[-0.145698],[5.638419],[-1.675119],[7.607239],[-8.988809],[6.590940],[-3.780322],[8.753782],[-9.332477],[9.516902],[5.622871],[-9.871840],[-6.639051],[5.682150],[3.058673],[0.313624],[3.725588],[-1.899472],[6.958992],[0.648806],[1.394114],[-0.439133],[-7.383423],[2.174291],[-8.266861],[-8.377252],[2.010638],[5.113871],[2.594762],[2.543145],[6.635939],[-3.562067],[6.425479],[-5.965108],[-5.949072],[-7.415877],[-5.235552],[6.797623],[-3.165629],[7.136559],[9.491332],[-7.401954],[-8.244716],[4.961498],[-3.482258],[0.924925],[9.564610],[-9.803959],[-4.814843],[1.482670],[6.032737],[-7.180507],[1.997894],[-2.990226],[6.078744],[-0.512898],[4.649962],[2.815936],[-1.264095],[4.503161],[0.930558],[-3.802149],[-3.836493],[0.216681],[6.996835],[7.620449],[-6.704752],[-3.592358],[9.063042],[6.456153],[8.994601],[-8.671917],[-0.861391],[-2.141128],[-8.350238],[4.828702],[-5.390805],[-5.086459],[-6.499503],[-9.038907],[-6.474689],[-8.870995],[3.805180],[-1.672044],[-7.998126],[8.717027],[-6.122119],[-5.629333],[3.268114],[7.906632],[0.751684],[2.429432],[4.388950],[-7.807569],[0.246110],[5.917082],[8.296450],[-3.851842],[3.653355],[1.801504],[-5.445179],[3.717427],[-1.606820],[5.255979],[-2.884426],[7.032090],[4.930671],[-5.970336],[-4.199036],[0.922732],[1.005340],[-9.652878],[-2.347352],[6.512089],[1.095725],[1.721020],[-3.873246],[-1.439169],[0.545109],[-6.430659],[9.945918],[1.036879],[9.663645],[0.554389],[-1.798694],[8.965432],[3.763270],[-9.478678],[3.181956],[5.142468],[9.112132],[-0.711811],[8.796338],[-4.950387],[4.496705],[3.793031],[9.898586],[2.927891],[-3.488802],[-8.796766],[9.895860],[-8.408846],[4.933535],[9.495999],[-0.630238],[-8.609933],[6.005597],[0.152449],[7.466192],[9.278903],[4.050071],[9.093436],[8.975516],[8.747311],[8.832495],[5.626666],[6.416070],[-1.813904],[-1.339105],[4.789401],[-6.883119],[-2.127176],[2.934762],[6.322901],[-3.978041],[9.340934],[5.426439],[-8.897185],[2.095571],[-2.397444],[5.097493],[-8.589641],[3.925503],[-9.748425],[-9.731798],[-6.957363],[9.513089],[-5.918185],[1.047063],[0.616116],[4.887050],[5.954874],[-7.361372],[0.541890],[8.314782],[-3.184012],[6.393866],[5.435941],[4.842333],[5.621055],[-0.803604],[1.356055],[-7.739883],[-9.880836],[1.687306],[1.845129],[-2.816177],[6.858533],[-8.433993],[-0.374454],[-3.193720],[5.498753],[3.048868],[-5.211272],[-2.203606],[-6.905530],[2.864926],[-9.865328],[-2.427920],[9.876448],[-8.397594],[-3.057683],[6.630394],[7.473071],[-5.180822],[5.928340],[3.912811],[1.662285],[-0.366686],[5.420665],[7.138522],[8.144675],[4.283384],[-5.568736],[-4.191071],[5.111653],[0.521296],[0.193550],[3.988299],[-3.384901],[-0.370924],[-4.710398],[-9.428645],[5.922054],[3.519615],[9.193545],[-8.983304],[-4.287272],[-8.459972],[8.662543],[-3.216677],[-2.064017],[-3.112898],[1.760322],[-2.683435],[-7.833441],[3.692499],[-8.479559],[-8.395709],[-5.197008],[8.602428],[-2.119150],[-6.937233],[1.344534],[3.684542],[2.063939],[-8.366064],[5.716353],[5.521056],[-3.824613],[7.668953],[4.686347],[-5.061954],[-4.998273],[4.029747],[-5.774242],[1.151169],[-1.131126],[8.935688],[-1.519569],[6.790994],[3.153731],[0.200957],[-8.846005],[1.150017],[4.492247],[1.068896],[0.331166],[-5.503988],[-6.168943],[9.354330],[-8.805823],[2.416979],[-7.303853],[4.044226],[-7.881492],[4.381028],[-4.490722],[-4.845171],[6.908863],[9.959469],[-5.532757],[1.570020],[-3.722725],[-2.458700],[3.109748],[-8.037338],[-0.645256],[7.281933],[-0.723678],[0.517455],[0.273123],[-2.466884],[-4.707654],[-2.665526],[-3.811980],[-8.117811],[8.524118],[9.903361],[2.724769],[-9.588816],[2.900320],[5.950129],[7.824722],[-9.925637],[2.039142],[-2.358081],[-5.494538],[-6.319889],[2.582564],[3.094643],[-3.930995],[3.750143],[9.965019],[-0.236545],[-4.931366],[-6.976114],[6.070083],[6.553653],[-9.431810],[-3.854972],[5.692335],[-4.266465],[-3.089461],[-2.429386]], dtype = "float32")#candidate|5717|(1080, 1)|const|float32
const_5718 = relay.const([8.886257,5.072605,0.566727,-6.213093,1.836314,5.135698,-7.229052,1.593611,4.920223,-7.283826,-9.238210,-9.192512,0.357965,-0.389697,-9.758519,-2.745012,-2.767228,0.508544,1.926939,5.403361,-3.000350,9.662340,0.181048,8.315571,9.889181,-1.335005,-5.229292,-1.803180,9.925692,-4.074205,-0.430272,-1.096709,3.759828,4.424290,1.341091,3.660759,7.895682,-0.835738,2.271288,8.974879,7.358925,-8.383694,6.099576,8.265369,7.775526,-8.437730,-0.447902,2.545984,-9.363990,0.597808,8.102613,4.189714,1.195194,-5.786948,2.146896,9.591177,3.146174,-3.954200,-7.402157,0.752316,-4.425789,-9.233250,-3.250136,-4.054516,-7.449943,-7.822378,-3.944159,-2.234739,5.161662,-5.307478,2.200308,8.861622,5.537243,1.975646,2.427516,4.470577,-1.662259,9.916916,9.231894,-9.788338,3.644458,-3.165739,-7.335500,9.209594,3.131256,5.675341,-0.032143,7.393254,-2.213533,8.351501,0.603171,9.531217,-7.708463,9.204888,-9.049844,4.820198,-2.456097,1.320640,4.336136,1.662194,-1.061807,4.753646,1.098082,-3.093663,7.110719,-4.093395,3.092429,-5.096732,-7.780231,1.721708,0.915284,-7.212203,-0.424631,0.896569,-1.521522,-2.855064,4.309900,5.604683,-9.976630,-7.005726,-4.635011,1.660858,0.466908,4.202118,8.384560,-8.832914,-1.354949,-1.273200,1.363621,-9.906363,-7.988617,-2.742759,-8.236725,4.268909,-9.599994,-7.508931,-7.714220,-8.485373,0.790515,6.373869,-9.992020,-7.240316,-3.416416,-6.535092,-6.538658,1.369667,1.909057,-2.319625,-5.691999,1.838927,7.309889,3.465883,6.125459,7.806866,8.781426,7.988536,0.452736,-7.689901,-7.301727,8.403763,5.976790,-1.318635,-8.257090,-1.113107,-5.393811,3.722567,5.143678,7.445141,-1.634018,-3.280984,7.379214,-8.532365,5.147180,-2.850486,8.540345,-1.560972,-4.715013,5.137343,0.706803,3.215921,6.591332,0.986956,6.995456,1.095511,-9.098904,-2.644036,6.580335,-5.372908,9.711620,9.069900,-6.997849,-6.222708,-3.019706,4.698508,8.080402,9.480939,-2.574772,-6.380657,0.457530,5.938590,9.540517,8.604812,-8.611098,1.067229,-6.059179,-3.075107,-7.679695,9.095505,5.215909,-5.146029,-9.129822,7.846457,-0.811060,-5.311872,-1.048369,5.073779,2.073656,-2.823517,-2.229532,-2.299529,-6.994058,9.389053,9.155824,2.882998,-7.065372,2.882489,5.431903,5.695123,-1.557423,8.072721,4.596662,-7.848062,0.133033,0.950188,-8.527910,-2.928037,-7.532848,4.400947,6.762120,-0.362515,-2.018588,-3.569585,0.909496,-2.328496,7.134075,-7.957234,-5.746736,-7.942341,9.464844,-0.146769,3.672997,1.989649,-6.858337,3.667772,3.094643,2.470221,4.383111,-3.596702,1.668773,4.534194,-1.053692,-3.967839,-6.968644,4.364480,-8.369722,-8.413360,-5.150169,2.302302,-2.270841,-5.181859,8.678170,-1.894227,8.399317,3.490844,7.866266,-2.920598,-2.328320,-4.077461,2.296522,-1.854571,8.518871,3.148869,-2.914409,1.231572,8.626698,9.125590,3.894365,0.302069,-7.616836,-6.339268,1.330643,7.758884,5.619521,1.926392,4.168694,-9.544958,-3.798684,9.816989,-5.325720,3.791644,-4.608785,-5.762974,-7.199107,5.122969,-9.042592,-8.943833,-7.596203,6.556281,-2.022970,-9.212581,6.502357,-2.462799,-7.463356,-1.157550,-4.651724,-3.851951,-1.365590,4.077530,-0.474705,1.409026,-7.980296,6.678565,-3.682959,-2.219132,9.187660,-6.029593,9.851284,-6.195342,-8.316270,-7.740458,-3.168880,-4.382617,-0.434090,-7.881319,-5.364541,6.836027,4.961972,5.411128,-3.967012,-5.439804,-9.458133,-4.343064,-1.135403,2.233421,3.494773,6.692487,-9.114292,7.466998,6.263205,4.738780,5.072739,-1.757904,4.080914,-7.120146,7.423058,0.938554,-9.311904,0.701567,-2.068221,2.278857,1.420562,-1.303123,-3.572621,-5.780580,0.419395,2.418967,-5.982857,0.902432,8.426326,2.293532,9.489275,-5.409501,-0.140465,-7.958340,-1.063997,8.019550,-4.348165,9.254605,4.156002,8.440659,-8.219717,7.119551,-3.508243,-5.629951,6.006941,0.078321,4.518422,-7.094858,2.517811,-0.523720,-0.074670,6.917283,2.892955,-1.251089,-0.300610,1.051993,-6.758945,-2.724370,-7.083234,8.383151,-1.921450,-3.498801,-2.674663,-2.149405,5.108613,-0.029856,-6.992443,-0.430485,-5.126743,-4.571026,-3.337843,2.134494,-2.116494,-7.692173,9.654803,-6.670521,-1.495020,4.548621,7.580135,-6.782654,-4.608376,7.729355,9.449843,5.120816,-3.219359,-8.339029,8.071624,4.300713,4.932852,-9.297230,8.889647,6.796920,0.311897,9.232820,-0.453587,5.408969,-0.442088,9.354200,2.115830,8.062105,-1.036007,-5.300970,-5.832809,8.628225,8.188383,-2.062873,8.972724,-2.546163,-0.630522,5.599936,-6.854002,3.808351,5.036911,-8.680316,9.983793,-7.495672,1.809503,-6.751268,3.739634,-5.588369,6.208793,8.709442,-5.855785,-0.068537,5.692715,7.835901,-7.459430,-8.451496,1.198583,-1.105577,8.707026,-1.738640,-9.064695,-6.445418,-7.873565,-0.997333,9.642618,-3.291505,-9.574626,-0.457157,9.334961,9.657732,-6.618453,0.212228,-3.975318,6.477337,3.020840,-6.312551,-4.384641,1.630715,2.728240,-4.543024,6.746394,-0.175963,7.903289,-6.846571,-4.740291,3.839696,7.278025,-7.572826,-4.864963,9.524920,8.660495,7.533171,-8.658408,9.297670,6.730245,-2.307539,-0.679435,-7.200024,5.268166,-8.396617,-6.152400,0.004112,6.438166,3.163200,2.844859,9.455131,-4.488092,-2.334042,5.314146,9.438081,4.623646,7.873120,-9.197620,-3.484425,-4.606987,-1.076451,-2.275939,6.668953,3.268163,7.653665,2.954694,-3.999679,-8.524508,5.940560,-6.976289,-7.144020,-1.348365,0.231279,7.866988,4.580348,0.976296,-3.933357,3.903759,2.949411,-1.689900,4.715585,4.137202,2.907841,-9.202333,8.862807,9.693545,-1.864742,2.864816,2.070671,6.541348,3.726111,-5.437871,-0.164702,1.300730,-0.178140,8.090274,0.040756,1.542339,-3.201892,6.445367,-6.615237,7.665550,1.047268,3.883413,5.557153,6.897391,6.441179,-7.226965,6.042411,6.854323,8.023515,4.030140,0.384345,1.525015,-3.203105,4.153106,-0.415276,5.866665,9.270003,-8.608207,-3.936130,2.137251,2.302906,7.119787,0.985905,-5.971776,0.703135,-3.742178,7.467885,-1.537979,-5.988175,-6.712676,-2.651436,-4.113803,-1.661263,-0.519520,-1.764497,-1.846245,2.654993,-6.368741,-0.011848,7.018974,-1.863772,-2.713050,-1.857602,4.636310,-7.878340,6.682060,-3.116292,3.738323,-6.053481,8.301806,4.802042,-5.640465,9.452446,-2.457058,4.153167,-1.436820,5.945314,1.150702,2.635301,-7.881421,4.399837,8.313440,-5.750044,-4.562042,-4.433143,6.902629,-8.452667,5.251334,2.961252,1.408223,1.662505,-6.572907,9.876211,-2.683573,8.541753,-2.871759,-0.428459,-3.732727,-3.779392,6.276070,-2.775016,2.447837,-6.818463,-5.477342,-5.027111,0.494746,7.682741,-1.136775,1.403662,-6.513395,1.180671,5.587258,-4.689654,-4.808592,0.420240,6.847114,9.694132,-4.589119,4.848493,9.717117,-1.554488,-2.610153,-7.725968,-5.309037,4.433951,-8.417888,-8.218618,4.110387,0.703943,9.221770,8.066256,-5.537334,0.695976,9.132035,-3.144418,-9.491893,4.751810,-4.181238,0.966869,1.647877,7.534413,-0.063802,-2.065643,-9.698497,2.257593,-1.393920,4.248678,3.411980,1.154591,2.049322,2.473518,-7.060621,-7.591751,0.050884,-2.029249,1.390310,-6.772089,8.459386,6.657235,1.087967,9.711045,8.831529,-9.472972,-4.301466,2.898419,7.671292,5.835914,1.536545,8.889163,-7.364186,-0.922723,9.506367,9.658250,7.084407,3.213541,3.242028,-8.052397,9.228506,-4.393822,-3.715401,3.673977,-1.795411,1.024592,4.337823,-9.293829,-2.223396,4.478257,-7.227980,-1.734472,9.214614,-6.993941,4.087652,4.375377,8.685812,-2.760797,-0.834227,-7.993178,-3.311730,-6.484943,-5.727813,1.459895,5.936341,-9.215522,6.059788,4.143708,-9.375623,-6.649569,-5.192181,-4.694551,1.815558,2.567783,3.006539,-5.262491,-2.491433,4.518922,-4.791881,8.653855,8.578769,0.913774,4.443032,9.800426,-3.578012,9.418724,5.232493,-4.970664,-1.207908,-4.264694,5.490422,6.589050,-5.399055,-3.830484], dtype = "float32")#candidate|5718|(780,)|const|float32
call_5716 = relay.TupleGetItem(func_1580_call(relay.reshape(const_5717.astype('float32'), [12, 15, 6]), relay.reshape(const_5718.astype('float32'), [780,]), ), 4)
call_5719 = relay.TupleGetItem(func_1583_call(relay.reshape(const_5717.astype('float32'), [12, 15, 6]), relay.reshape(const_5718.astype('float32'), [780,]), ), 4)
output = relay.Tuple([call_5713,call_5716,const_5717,const_5718,])
output2 = relay.Tuple([call_5714,call_5719,const_5717,const_5718,])
func_5720 = relay.Function([], output)
mod['func_5720'] = func_5720
mod = relay.transform.InferType()(mod)
output = func_5720()
func_5721 = relay.Function([], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4562_call = mod.get_global_var('func_4562')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_5815 = func_4562_call()
call_5816 = func_4562_call()
output = relay.Tuple([call_5815,])
output2 = relay.Tuple([call_5816,])
func_5833 = relay.Function([], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
mutated_mod['func_5833'] = func_5833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5833_call = mutated_mod.get_global_var('func_5833')
call_5834 = func_5833_call()
output = call_5834
func_5835 = relay.Function([], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4911_call = mod.get_global_var('func_4911')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_5861 = relay.TupleGetItem(func_4911_call(), 1)
call_5862 = relay.TupleGetItem(func_4912_call(), 1)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_5863 = func_4328_call()
call_5864 = func_4328_call()
uop_5874 = relay.asin(call_5863.astype('float32')) # shape=(5, 1, 7)
uop_5876 = relay.asin(call_5864.astype('float32')) # shape=(5, 1, 7)
output = relay.Tuple([call_5861,uop_5874,])
output2 = relay.Tuple([call_5862,uop_5876,])
func_5886 = relay.Function([], output)
mod['func_5886'] = func_5886
mod = relay.transform.InferType()(mod)
output = func_5886()
func_5887 = relay.Function([], output)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mod.get_global_var('func_4931')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_5922 = relay.TupleGetItem(func_4931_call(), 0)
call_5923 = relay.TupleGetItem(func_4933_call(), 0)
output = relay.Tuple([call_5922,])
output2 = relay.Tuple([call_5923,])
func_5930 = relay.Function([], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
output = func_5930()
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_5955 = relay.TupleGetItem(func_5086_call(), 0)
call_5956 = relay.TupleGetItem(func_5087_call(), 0)
const_5957 = relay.const([[[-5.362856,8.293079,7.910774,-6.345506,-1.373019,1.056716,-1.259331]],[[6.369162,-1.881162,-5.314244,3.206420,2.850276,-8.127866,-7.188650]],[[-4.982389,9.477022,-6.705052,-4.908665,8.473202,8.937147,2.468523]],[[0.400779,-3.437121,7.540260,1.557781,-6.850286,-6.431808,-3.028256]],[[6.585989,2.110455,-7.624214,-7.892865,8.355677,-1.121527,-5.694018]]], dtype = "float64")#candidate|5957|(5, 1, 7)|const|float64
bop_5958 = relay.floor_divide(call_5955.astype('float64'), relay.reshape(const_5957.astype('float64'), relay.shape_of(call_5955))) # shape=(5, 1, 7)
bop_5961 = relay.floor_divide(call_5956.astype('float64'), relay.reshape(const_5957.astype('float64'), relay.shape_of(call_5956))) # shape=(5, 1, 7)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_5976 = relay.TupleGetItem(func_5930_call(), 0)
call_5977 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([bop_5958,call_5976,])
output2 = relay.Tuple([bop_5961,call_5977,])
func_5979 = relay.Function([], output)
mod['func_5979'] = func_5979
mod = relay.transform.InferType()(mod)
output = func_5979()
func_5980 = relay.Function([], output)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_6019 = relay.TupleGetItem(func_5886_call(), 1)
call_6020 = relay.TupleGetItem(func_5887_call(), 1)
func_5414_call = mod.get_global_var('func_5414')
func_5418_call = mutated_mod.get_global_var('func_5418')
var_6025 = relay.var("var_6025", dtype = "int32", shape = (1, 154))#candidate|6025|(1, 154)|var|int32
var_6026 = relay.var("var_6026", dtype = "float64", shape = (70, 6))#candidate|6026|(70, 6)|var|float64
call_6024 = relay.TupleGetItem(func_5414_call(relay.reshape(var_6025.astype('int32'), [1, 11, 14]), relay.reshape(var_6026.astype('float64'), [420,]), ), 2)
call_6027 = relay.TupleGetItem(func_5418_call(relay.reshape(var_6025.astype('int32'), [1, 11, 14]), relay.reshape(var_6026.astype('float64'), [420,]), ), 2)
output = relay.Tuple([call_6019,call_6024,var_6025,var_6026,])
output2 = relay.Tuple([call_6020,call_6027,var_6025,var_6026,])
func_6037 = relay.Function([var_6025,var_6026,], output)
mod['func_6037'] = func_6037
mod = relay.transform.InferType()(mod)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6037_call = mutated_mod.get_global_var('func_6037')
var_6039 = relay.var("var_6039", dtype = "int32", shape = (1, 154))#candidate|6039|(1, 154)|var|int32
var_6040 = relay.var("var_6040", dtype = "float64", shape = (70, 6))#candidate|6040|(70, 6)|var|float64
call_6038 = func_6037_call(var_6039,var_6040,)
output = call_6038
func_6041 = relay.Function([var_6039,var_6040,], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_6050 = func_4328_call()
call_6051 = func_4328_call()
output = relay.Tuple([call_6050,])
output2 = relay.Tuple([call_6051,])
func_6071 = relay.Function([], output)
mod['func_6071'] = func_6071
mod = relay.transform.InferType()(mod)
output = func_6071()
func_6072 = relay.Function([], output)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_6141 = relay.TupleGetItem(func_5886_call(), 0)
call_6142 = relay.TupleGetItem(func_5887_call(), 0)
func_6071_call = mod.get_global_var('func_6071')
func_6072_call = mutated_mod.get_global_var('func_6072')
call_6151 = relay.TupleGetItem(func_6071_call(), 0)
call_6152 = relay.TupleGetItem(func_6072_call(), 0)
func_3224_call = mod.get_global_var('func_3224')
func_3227_call = mutated_mod.get_global_var('func_3227')
var_6156 = relay.var("var_6156", dtype = "uint64", shape = (528,))#candidate|6156|(528,)|var|uint64
call_6155 = relay.TupleGetItem(func_3224_call(relay.reshape(var_6156.astype('uint64'), [11, 8, 6])), 0)
call_6157 = relay.TupleGetItem(func_3227_call(relay.reshape(var_6156.astype('uint64'), [11, 8, 6])), 0)
output = relay.Tuple([call_6141,call_6151,call_6155,var_6156,])
output2 = relay.Tuple([call_6142,call_6152,call_6157,var_6156,])
func_6159 = relay.Function([var_6156,], output)
mod['func_6159'] = func_6159
mod = relay.transform.InferType()(mod)
var_6160 = relay.var("var_6160", dtype = "uint64", shape = (528,))#candidate|6160|(528,)|var|uint64
output = func_6159(var_6160)
func_6161 = relay.Function([var_6160], output)
mutated_mod['func_6161'] = func_6161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6178 = relay.TupleGetItem(func_5930_call(), 0)
call_6179 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([call_6178,])
output2 = relay.Tuple([call_6179,])
func_6198 = relay.Function([], output)
mod['func_6198'] = func_6198
mod = relay.transform.InferType()(mod)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6198_call = mutated_mod.get_global_var('func_6198')
call_6199 = func_6198_call()
output = call_6199
func_6200 = relay.Function([], output)
mutated_mod['func_6200'] = func_6200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6201 = relay.var("var_6201", dtype = "float32", shape = (14, 3, 8))#candidate|6201|(14, 3, 8)|var|float32
uop_6202 = relay.sigmoid(var_6201.astype('float32')) # shape=(14, 3, 8)
func_4635_call = mod.get_global_var('func_4635')
func_4637_call = mutated_mod.get_global_var('func_4637')
const_6206 = relay.const([[-8.740790,-8.075868,3.799419,-4.363750,-1.437941,-0.902229,0.685122],[-9.941674,3.209069,9.303893,5.333275,8.031705,-8.218853,-9.246512],[-1.081833,4.421180,-6.246746,-6.031455,-0.355249,1.014919,6.957605],[-0.582983,2.928158,3.284531,-0.109290,0.897702,9.163361,-6.938260],[1.233218,-9.110529,-4.270878,-5.612894,0.296583,-6.755212,3.469242],[2.042240,0.011009,0.241056,-7.767771,-1.713462,-3.945516,-3.230444],[-2.974178,4.073142,8.623275,-1.171251,-4.750305,3.053454,1.813301],[8.535108,9.473616,9.203045,2.851588,9.892877,8.937827,-4.809617],[5.017664,1.970273,1.363685,-9.781421,8.149748,6.183090,5.019337],[7.093621,-9.733436,-3.627812,4.900261,8.863514,-6.588533,-6.528630],[-7.863050,3.337907,1.909088,3.146589,-3.770430,-4.772053,-1.998730],[8.911576,-6.042936,-9.031434,2.385907,-1.002983,-9.621135,6.372834],[-3.493808,8.068447,3.090984,-4.842313,1.953805,9.334976,8.982244],[9.245263,1.114565,-5.079966,-5.915367,1.651848,6.360525,-5.895406],[1.809562,-0.701531,-0.314548,-8.726187,1.205313,-5.380001,-5.195456],[-3.526306,7.385785,-4.699775,-7.693339,-5.437327,0.221906,-8.916560],[7.524822,1.585360,6.081203,-4.805602,7.777360,3.492674,-0.994231],[9.115004,0.915978,-5.830915,-9.336289,-3.029029,7.088028,2.070224],[-1.592290,3.502530,-9.580849,-7.772293,9.137982,1.839278,9.674900],[6.351160,2.878629,-5.043593,-5.372612,0.875896,0.545564,0.117353],[0.888472,-2.664104,-0.673107,8.663769,-9.676106,-1.122043,8.934793],[-0.575189,-6.126684,-2.249892,-9.919236,0.747892,1.054837,2.310106],[-2.812991,-1.155509,6.619697,0.861217,-2.558039,5.748600,-0.851363],[-1.386866,1.176968,-4.272284,-9.215932,0.905046,5.468472,5.008917],[-3.229808,-9.988119,2.264453,-3.271817,9.741385,5.812117,-5.963377],[-8.980293,-9.080115,-5.180045,5.633655,-6.704390,7.867191,-3.467458],[-4.935751,-8.476477,4.285741,2.337324,7.367634,4.863648,9.694584],[-4.028586,5.938669,-5.483048,-8.365106,-5.828227,8.517726,2.341776],[-0.599459,0.447127,-9.914362,1.301626,-8.440656,-6.631473,-6.639771],[-8.759296,-5.934265,-1.037391,4.060933,-0.537123,4.404466,1.666638],[2.168340,-1.484389,4.492945,-2.148232,1.886229,2.630148,-2.699608],[7.955993,1.999183,-0.619488,-7.441377,-6.227968,6.620363,0.373873],[9.167734,6.010170,-0.955313,-0.111907,2.291338,7.857822,0.950639],[4.462120,-4.708577,-4.611823,-3.311761,-7.203500,9.409833,4.801813],[8.090330,-0.985959,2.691127,5.263549,5.947812,1.814727,-7.058237]], dtype = "float64")#candidate|6206|(35, 7)|const|float64
call_6205 = relay.TupleGetItem(func_4635_call(relay.reshape(const_6206.astype('float64'), [5, 7, 7])), 3)
call_6207 = relay.TupleGetItem(func_4637_call(relay.reshape(const_6206.astype('float64'), [5, 7, 7])), 3)
output = relay.Tuple([uop_6202,call_6205,const_6206,])
output2 = relay.Tuple([uop_6202,call_6207,const_6206,])
func_6212 = relay.Function([var_6201,], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
var_6213 = relay.var("var_6213", dtype = "float32", shape = (14, 3, 8))#candidate|6213|(14, 3, 8)|var|float32
output = func_6212(var_6213)
func_6214 = relay.Function([var_6213], output)
mutated_mod['func_6214'] = func_6214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6216 = relay.var("var_6216", dtype = "float32", shape = (14, 1, 4))#candidate|6216|(14, 1, 4)|var|float32
uop_6217 = relay.exp(var_6216.astype('float32')) # shape=(14, 1, 4)
bop_6219 = relay.bitwise_xor(uop_6217.astype('int16'), relay.reshape(var_6216.astype('int16'), relay.shape_of(uop_6217))) # shape=(14, 1, 4)
bop_6233 = relay.right_shift(var_6216.astype('int16'), relay.reshape(uop_6217.astype('int16'), relay.shape_of(var_6216))) # shape=(14, 1, 4)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_6239 = relay.TupleGetItem(func_5086_call(), 0)
call_6240 = relay.TupleGetItem(func_5087_call(), 0)
output = relay.Tuple([bop_6219,bop_6233,call_6239,])
output2 = relay.Tuple([bop_6219,bop_6233,call_6240,])
func_6255 = relay.Function([var_6216,], output)
mod['func_6255'] = func_6255
mod = relay.transform.InferType()(mod)
mutated_mod['func_6255'] = func_6255
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6256 = relay.var("var_6256", dtype = "float32", shape = (14, 1, 4))#candidate|6256|(14, 1, 4)|var|float32
func_6255_call = mutated_mod.get_global_var('func_6255')
call_6257 = func_6255_call(var_6256)
output = call_6257
func_6258 = relay.Function([var_6256], output)
mutated_mod['func_6258'] = func_6258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6277 = relay.var("var_6277", dtype = "float64", shape = ())#candidate|6277|()|var|float64
var_6278 = relay.var("var_6278", dtype = "float64", shape = (6, 3, 13))#candidate|6278|(6, 3, 13)|var|float64
bop_6279 = relay.floor_mod(var_6277.astype('float64'), var_6278.astype('float64')) # shape=(6, 3, 13)
output = relay.Tuple([bop_6279,])
output2 = relay.Tuple([bop_6279,])
func_6286 = relay.Function([var_6277,var_6278,], output)
mod['func_6286'] = func_6286
mod = relay.transform.InferType()(mod)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6286_call = mutated_mod.get_global_var('func_6286')
var_6288 = relay.var("var_6288", dtype = "float64", shape = ())#candidate|6288|()|var|float64
var_6289 = relay.var("var_6289", dtype = "float64", shape = (6, 3, 13))#candidate|6289|(6, 3, 13)|var|float64
call_6287 = func_6286_call(var_6288,var_6289,)
output = call_6287
func_6290 = relay.Function([var_6288,var_6289,], output)
mutated_mod['func_6290'] = func_6290
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6319 = relay.const([[[-2.952286,-7.587557,-9.000119,-5.413652,-1.066167,-1.622722,-2.605370,6.811232,-8.526468],[-7.804545,3.726017,-9.486797,6.654979,3.875915,9.747335,-1.666016,-5.383800,9.844444]],[[-4.494304,-4.556136,-7.985497,9.766434,-0.677289,9.561186,-4.045576,-7.582238,-9.562803],[8.662379,-4.610451,-3.856699,7.629215,2.967599,0.686900,7.569110,-6.552816,-1.396529]],[[-0.045449,4.531905,-0.880613,1.518467,-5.889794,3.863701,-3.235997,-1.125725,9.652689],[5.977330,-1.942547,-2.333307,6.312377,7.552124,6.964782,-7.066745,8.734470,3.817655]],[[-1.003734,-2.380967,-4.214745,6.689026,0.586279,5.348373,-5.919311,4.159554,-1.319871],[0.964106,5.328093,1.831910,-5.067625,7.286690,-5.964663,-6.371796,8.122467,4.651742]],[[-9.044381,8.397067,0.080497,-8.002850,3.045736,-2.811824,-9.060357,0.444546,-0.823527],[-2.899957,8.044433,-9.590487,-7.749813,-0.350199,-4.688106,-8.604161,9.079885,-7.104297]],[[-8.732373,-6.471964,-3.289439,9.665227,-1.428677,6.081913,-0.113072,-1.333035,1.994098],[2.762189,7.607130,9.633238,3.118014,-7.983784,6.757561,4.434142,1.577104,8.767342]],[[-2.464204,-3.961436,-5.472137,7.091312,-3.035264,-7.806298,5.527618,0.880023,2.587761],[-1.987582,-7.378767,1.625136,5.922015,-4.345230,1.955058,-2.044401,-8.726373,-8.880737]],[[-9.510217,5.315512,6.000478,-7.557394,4.144790,4.622462,4.199838,-3.174398,-1.911819],[0.619307,-0.067873,2.533774,-5.503899,-6.645300,-4.291412,5.843465,-6.423161,7.981154]],[[-3.532672,-2.970910,-7.382461,-9.081685,5.557475,9.750107,0.430277,1.444870,-1.260850],[8.861440,5.885923,-3.487086,-2.434708,-6.681756,-9.064138,2.287280,-8.761545,8.132536]],[[5.352359,-1.915755,-4.578586,4.419860,-0.953294,9.200917,4.317768,6.017839,-4.705043],[-1.534253,2.265612,-8.353394,9.758724,-4.510448,4.046607,-0.839054,-2.904062,-9.990589]]], dtype = "float64")#candidate|6319|(10, 2, 9)|const|float64
uop_6320 = relay.log(const_6319.astype('float64')) # shape=(10, 2, 9)
var_6329 = relay.var("var_6329", dtype = "float64", shape = (10, 2, 9))#candidate|6329|(10, 2, 9)|var|float64
bop_6330 = relay.logical_xor(uop_6320.astype('int64'), relay.reshape(var_6329.astype('int64'), relay.shape_of(uop_6320))) # shape=(10, 2, 9)
func_5353_call = mod.get_global_var('func_5353')
func_5357_call = mutated_mod.get_global_var('func_5357')
var_6337 = relay.var("var_6337", dtype = "float32", shape = (1080,))#candidate|6337|(1080,)|var|float32
var_6338 = relay.var("var_6338", dtype = "float32", shape = (780,))#candidate|6338|(780,)|var|float32
call_6336 = relay.TupleGetItem(func_5353_call(relay.reshape(var_6337.astype('float32'), [3, 360]), relay.reshape(var_6338.astype('float32'), [780,]), ), 0)
call_6339 = relay.TupleGetItem(func_5357_call(relay.reshape(var_6337.astype('float32'), [3, 360]), relay.reshape(var_6338.astype('float32'), [780,]), ), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4858_call = mutated_mod.get_global_var('func_4858')
const_6357 = relay.const([2.116611,8.915522,5.620555,0.070756,6.409175,-6.261559,-5.645935,3.515662,-5.307949,-9.913073,-9.963175,0.037248,4.612326,-7.251803,6.577392,2.385194,-8.251007,-8.760766,-1.129000,-0.272796,9.973480,4.318835,4.176751,-4.312638,0.082732,-7.267934,2.542937,5.446460,-8.201586,2.209782,-6.840038,-2.056134,-1.204907,-7.915627,-6.495413,-2.215064,5.566789,6.608452,-4.446038,-3.414479,-9.018626,1.864991,-0.057625,-9.682519,-2.221786,-5.026657,0.377908,8.087770,3.959291,-0.653435,-7.678375,1.144916,-3.044070,3.019441,-5.454430,-6.639072,-5.734647,-3.575818,1.974899,-0.904523,8.750289,-1.691012,4.309700,-8.932398,4.176879,3.619967,7.223707,8.196783,4.665931,-7.289969,-4.643841,1.708885,4.643839,1.773205,-9.538394,-0.767558,-4.373194,-5.414880,4.587408,-0.557131,6.271966,-2.629578,0.032912,-5.115657,-3.029286,-0.052756,-6.441988,-2.892780,-5.478138,-8.061877,8.307819,-0.148911,4.941541,8.711731,5.416837,6.372214,7.083875,5.634307,3.318389,-9.848666,-0.356447,-3.126817,-8.376148,-6.170913,-0.534120,8.951180,-6.450389,6.603950,1.811315,-6.100306,-0.131930,9.314526,4.694575,-3.415305,6.135878,5.464720,-7.334360,-4.081190,-9.720782,7.263571,5.406240,-0.439034,-3.590429,0.482157,-6.525169,-5.244768,7.544291,0.428499,-8.640468,7.075687,-6.779077,5.004020,-3.038852,4.199439,2.569151,2.641262,3.948271,-7.244462,7.061252,2.524204,4.278381,-9.078434,-2.249316,0.474800,-2.803486,-8.876335,7.898233,8.318854,5.242384,-2.513770,3.054652,7.333233,9.524742,-7.751164,8.699722,2.202679,7.611502,1.140248,6.619844,-8.115067,1.422751,-9.862842,-9.956771,-5.568744,-7.301143,-2.723520,-1.302887,-2.512145,0.952868,-7.823245,2.272115,6.194530,4.103635,-1.016478,-3.995517,-7.931302,0.548149,-0.897167,-0.035605,2.485065,-4.412200,-0.663615,9.506683,-0.590628,8.356404,0.380328,-1.592461,3.984943,7.722195,-0.275272,-2.385166,2.834772,4.446991,-6.834244,-4.805765,-3.907173,6.005774,0.320166,-1.023868,-9.229454,-3.143689,-2.010644,-7.440180,-5.651075,3.726500,2.604984,-2.562646,4.601536,8.228525,8.898762,9.908060,-7.972911,8.850919,2.814797,7.383119,6.248104,0.989285,8.896541,-4.393056,5.368549,-1.298241,6.874496,7.913091,5.033607,-2.028991,-6.569631,-9.026890,7.562098,-2.622157,8.074333,-5.829235,5.220749,-2.076803,0.477272,-2.087893,-1.119038,-2.120077,9.488974,-8.376511,-3.649593,-8.530570,-9.020919,1.951086,-6.154257,-3.943127,2.986469,-7.433629,-8.230311,1.484252,7.247399,-5.835413,2.502921,-3.889033,-1.734707,3.680597,3.757395,1.068502,-2.742661,8.081367,-5.204517,2.538049,-7.504494,-4.960918,-2.403736,5.290357,-8.903930,-4.716468,-4.490528,-6.649087,1.512559,4.500021,3.721760,2.931968,5.345591,-7.449604,-6.914872,4.064896,-4.749728,-3.987391,-0.208682,-6.659027,0.185828,-2.309050,8.167118,4.571904,-7.127856,-8.105357,2.759534,0.541592,-7.699127,5.412262,3.879881,-9.690787,-1.441429,2.363519,-3.151790,3.191081,-5.931848,8.110639,5.802424,-2.496171,5.856137,1.614908,-5.066934,0.991830,2.304611,-7.076825,6.665694,-7.822764,0.882283,-4.306526,1.730212,5.645128,8.728396,-2.879271,0.362114,-4.317909,5.804246,-8.442209,1.908599,-6.199078,-4.373361,2.861124,7.304009,5.419139,9.087003,-0.210308,-4.522078,-6.306537,-8.908959,-3.642072,-2.420175,-6.335492,-0.869272,8.203754,-5.008511,-9.804652,-3.713528,8.520834,6.122179,-9.357541,-5.360843,-1.696757,7.730080,6.343518,9.435434,3.551128,-8.900747,5.008410,-0.084941,-3.145089,-5.626323,8.057009,6.492159,9.954782,-4.488604,8.356010,-7.483865,6.769933,1.674960,-7.475355,-3.478107,-4.606662,9.686138,9.610724,-0.957641,0.634332,1.697149,-0.227851,7.162365,3.273376,0.306339,-7.183743,-8.440956,8.843306,-3.419641,-9.428644,-6.015425,-8.780738,-4.078947,4.072586,0.740771,-6.023493,-5.399822,0.316949,-2.395394,3.709717,-2.240362,2.316409,1.242930,-5.896294,-5.657306,-5.416943,3.573136,8.838423,-3.841704,-4.974878,7.039410,-6.390199,7.192118,9.823714,1.714526,-4.088884,-7.126954,-6.433585,-2.297711,-2.012709,-1.606375,5.180952,6.601205,9.960260,-8.384493,6.166984,-2.863883,3.026815,-7.949454,4.010112,9.542728,1.795879,-5.899590,8.445456,-7.372298,5.161474,-3.548292,-2.548227,2.236106,2.126996,6.814450,2.563058,4.475911,-8.225149,3.263942,7.254392,1.224611,1.292722,-6.414665,-5.020678,-9.624470,2.588825,8.698019,-5.872550,-2.569131,-3.571873,-3.193429,2.746996,-2.389475,0.743097,-6.863780,-6.104520,2.726586,5.083241,-5.457585,-0.363354,9.558048,4.939864,0.195276,-7.389921,9.231972,-1.519457,-1.555175,2.073535,2.784182,4.106199,4.370262,2.074743,0.388526,3.411534,-1.817486,-7.367857,2.588662,-3.748516,1.424225,-1.868371,0.367547,-2.668125,3.521995,-4.590187,1.430902,-3.574006,0.044857,4.659662,-8.345312,-1.964944,7.983058,-4.852038,-2.171425,1.901418,1.923790,3.626464,-0.948095,8.758712,4.294059,-4.858891,7.367978,-4.027258,-7.261671,9.045499,-4.749120,-1.658415,-1.366839,-9.128024,6.851890,-8.547384,-8.309124,-4.912888,6.686161,-4.484517,0.903945,6.236619,4.064603,-9.650343,-5.440381,-5.781502,9.700746,-8.269585,3.730368,8.018216,-7.377814,-4.868710,5.127878,-3.952861,-6.223021,7.301283,7.863891,-1.932628,-7.156746,9.424742,-0.795537,4.048962,-9.803634,5.484912,5.396419,-1.997453,-3.940764,-3.139132,4.468337,-4.818606,2.483514,-5.623609,9.602310,5.064706,9.260600,-4.458918,-5.538040,1.613448,3.471214,-3.663247,6.834598,-0.307684,8.846395,6.447179,9.025140,-8.599036,-1.341477,-9.872662,3.196198,2.335529,-1.558546,-5.741738,-3.366296,8.968895,-5.918538,-9.809189,-5.155812,0.505079,1.371582,9.692956,3.706177,5.745212,-4.212025,9.534599,5.335239,-2.694304,-3.611668,-7.202550,-0.833380,-0.679793,9.776390,9.412785,8.604706,-7.039316,5.532959,-2.141305,8.405541,-4.518934,8.454342,-6.821727,5.213256,-3.003176,5.253231,-2.514852,-4.705967,1.734854,8.039660,0.974215,5.588707,2.232040,8.746008,6.836210,4.306794,-7.225112,5.791113,0.038403,3.884811,-4.413401,-4.993787,6.290566,1.975758,-6.177712,9.261775,-1.592960,1.003518,8.256416,3.073601,-2.654569,8.957978,9.515753,8.344411,2.002296,-3.229628,0.821120,-5.816181,6.347310,0.631030,-6.867902,4.698613,-4.744111,-8.871310,-4.069665,-0.515912,-7.817505,7.984633,2.398422,-1.564860,-7.208293,-2.358929,3.974925,-0.369707,0.422093,-5.517508,-5.975291,-0.803564,4.543551,-9.383832,-3.828823,-6.230264,-3.050703,-6.564875,-9.039118,-2.417500,8.251605,-2.359970,8.014878,9.659483,1.477335,-9.598297,5.449716,-6.114285,6.747098,-6.060232,7.858068,-6.044334,0.981297,5.373802,2.662362,-2.290002,5.808065,9.794814,9.707299,6.849170,3.407980,-8.491468,-0.900058,4.916730,1.495024,4.250639,-4.693146,2.473142,-5.724422,3.778474,-2.992963,-9.564446,-1.174284,9.195830,-3.138916,-2.587354,-1.655974,-0.231678,0.107755,5.812546,-9.603584,-8.602920,-2.150663,-0.654301,-2.631275,3.803787,7.523475,-2.349910,7.653777,2.461027,-4.779440,5.923634,-3.647518,4.839677,6.664202,-7.072954,6.166876,-8.067853,-4.515145,-4.302570,-5.488563,-8.952680,3.586130,-0.535709,-5.593692,-1.919661,5.379522,0.591791,-8.615872,-5.932547,9.215247,1.775331,2.360593,4.994305,-7.343220,-0.353553,3.939349,-2.770337,-1.122294,6.061296,-4.810371,2.707964,-8.168497,7.144605,-5.771877,-5.806592,-8.974560,-8.373339,-6.170312,-4.919364,-6.467070,7.136213,8.997332,-3.052748,-3.015886,-4.657407,-9.633884,9.211595,-8.279800,4.324782,-1.233057,0.770464,8.463973,-2.427280,4.629255,-3.355307,9.762469,1.642977,4.123556,-4.985055,2.692833,-8.000705,8.602984,-4.669408,-1.127891,-4.939721,-7.906391,7.888570,3.183774,6.118734,-9.296543,-0.293105,6.716137,-8.828026,-8.457180,1.129580,1.464156,3.076524,7.508418,6.047459,1.865017,-4.737306,4.826688,1.016191,8.436185,7.930911,-7.587770,0.286748,2.916936,-8.648914,2.636001,5.914992,4.321201,7.585001,8.830982,-8.424128,-4.818528,-3.983378,-9.032562,-4.311488,-5.747940,-6.740683,-7.199813,-1.244830,9.332965,2.525579,-3.954416,-0.683288,5.893391,-1.731117,-1.651511,1.761462,8.237652,-3.710637,4.832444,5.963149,-2.519687,-0.882843,-3.168616,-8.526498,4.150779,-2.250132,-9.213702,6.909939,-4.833482,-5.302603,-8.078262,1.137393,8.219507,4.159177,-8.881040,-1.892586,-2.863207,6.479034,-3.141418,8.829096,6.156939,1.603402,-6.953553,8.258218,3.162760,8.675926,2.314143,2.360639,-9.969956,0.108335,-4.620305,3.479896,-3.135777,4.313333,-5.165005,-1.581885,-7.427571,2.179139,-3.675469,8.992735,2.589241,3.954290,6.110604,5.112480,-1.513667,-4.341227,0.223627,2.348242,7.361641,-9.842007,5.033305,9.299889,-7.515711,-4.391035,-8.485285,-7.359361,-9.593543,-4.736641,7.334530,9.201713,5.072980,-3.924353,7.305908,-0.382921,-3.559460,-7.722544,-4.722243,3.829214,3.818821,7.591987,6.984109,9.138135,-9.219593,0.179979,4.443624,8.991463,-2.364288,4.125915,6.367458,-8.527863,-3.260879,-5.519336,8.294644,-7.451583,2.528667,-9.913277,3.619499,2.444679,4.816019,1.631185,8.641852,1.343066,-7.290230,-3.505344,4.400288,0.615224,9.725865,-0.027675,8.939580,3.508192,-8.701500,5.252603,2.914794,8.813647,7.637921,-0.872246,0.917737,8.243213,-0.096690,-2.215615,-8.923072,-4.025913,4.605231,-6.052351,1.866918,4.057354,4.590697,7.433679,3.639626,-8.863841,-9.640201,-3.063674,-0.631360,2.524164,6.861776,-0.668703,-7.617538,2.808193,4.780427,-0.174323,-2.650274,9.259124,0.456372,-6.243616,7.346735,9.846588,7.114248,-2.774388,4.675548,0.542491,9.718524,0.650499,-4.942761,8.154163,-2.022715,-1.346741,9.451728,8.928819,-3.034577,-3.363860,-9.542031,0.286794,6.858347,9.052438,-2.613808,6.178506,6.221811,0.091784,7.917944,6.109232,-7.215254,-2.832670,5.205395,-2.848528,-7.920075,-4.228057,6.119950,-2.357359,0.982178,6.967781,-3.398665,5.174928,4.425770,8.096373,7.615251,0.385276,-6.489523,0.730743,5.507417,-6.559445,-5.299198,-8.285896,-7.326236,-0.218005,-7.914390,0.329634,-7.892905,-5.108431,1.591801,6.442709,2.289314,7.856077,-3.076551,2.972922,-4.542498,2.637498,-6.742966,-8.017808,4.042170,-1.448813,2.612498,-1.631089,-9.315006,9.969802,9.609458,-0.974478,1.914315,-1.487236,3.674642,5.680102,1.528990,-2.878772,-9.664812,8.432263,-4.121393,-6.060957,4.978900,1.102519,8.304512,-5.781455,8.003565,2.974490,-6.096487,5.764473,-6.588373,9.811291,2.200228,7.916996,7.080157,7.438508,6.719214,6.768452,1.120024,-0.943998,5.494733,6.680597,-8.874011,-7.423244,-0.809420,-7.685625,-2.237080,2.082106,1.667978,-2.741848,7.679744,-3.022803,9.343339,6.576307,4.728794,8.702971,-1.589483,4.534419,-4.140583,0.557984,5.068495,8.097823,-3.144864,-6.306774,3.013324,-4.322048,-2.309051,1.639253,-3.469382,-9.620910,8.679962,-5.438662,-4.743558,-9.732277,0.568389,-3.218098,2.529208,3.949117,-2.276741,1.884861,-9.180889,-0.135018,5.194882,-0.363329,-7.543737,6.117182,-3.433162,-8.663522,8.200906,8.918332,-7.273503,-2.902481,5.543206,3.505261,4.339461,-0.567910,-2.527125,-7.578544,-2.676405,5.319513,-5.045645,-6.564098,6.267697,8.082343,0.681674,2.230621,-0.914688,4.614554,9.263662,0.350958,-4.459233,-1.702678,-7.346631,-5.856215,8.868600,-0.322756,-7.037748,5.788392,8.079172,-9.304143,8.968001,-6.061664,5.949793,-8.090183,2.473518,2.292039,0.680133,-9.573527,0.339676,-8.355157,8.582382,-1.332382,-9.586675,5.912121,-8.086229,-2.608322,6.984447,-1.710940,6.445772,-1.194806,-3.345051,-5.191134,8.298164,-7.201295,3.871599,-8.084099,7.676249,-8.982232,-0.687810,3.379698,2.612955,-9.098399,-5.354075,-8.528426,6.318401,-9.148092,-8.739660,5.365713,-7.023673,-3.691166,1.385812,-2.233235,8.087584,-3.388479,-0.361608,4.382325,5.562569,-7.432905,-7.496901,2.351104,9.132922,1.507559,-3.972594,-0.179389,-3.423090,-6.843212,7.441964,-1.583835,5.435411,-9.197330,-1.832072,-2.963418,7.604696,-6.995194,3.290503,-4.824584,2.704040,-5.899129,-9.894498,-7.844701,-5.589248,-1.834820,7.802356,-9.933489,4.874828,-0.032735,-2.223729,-0.089696,-0.014437,4.176169,-6.745310,-3.730101,-8.864088,-9.976391,0.348017,4.076180,5.813423,5.502495,7.214111,-1.017068,-5.967090,-4.285511,3.133201,9.453196,7.412214,2.340564,-5.098620,-1.472256,-4.311223,3.061162,0.960339,6.583708,9.365466,-2.109240,2.213588,5.055936,8.867695,-9.130023,-9.574726,-3.858564,2.020370,-5.233690,-9.454214,-4.823986,0.142722,-7.453607,-6.843094,1.331661,6.253380,-5.911941,-7.918391,-4.379567,-5.729737,-0.214494,-8.058892,-7.498551,-3.639446,3.465137,1.485693,-2.101424,-7.079519,-7.033238,-2.778860,-1.010194,6.891931,-2.077188,-7.119330,1.630559,-1.519252,-0.038822,4.836592,-6.089729,5.342797,-7.047201,1.149513,9.707406,4.742489,-2.280994,8.343903,2.176091,-1.444397,3.582945,7.527711,3.612980,-5.540733,-1.379194,-6.414725,-2.860812,3.972598,5.239770,0.020500,-3.470380,-0.749647,-7.047306,4.537684,-9.271244,-9.347375,-3.312447,-9.817757,1.678021,2.532522,-0.786772,-1.371859,8.076967,7.863529,-6.596616,3.955127,-7.081089,2.570655,-2.456772,-0.432212,-4.331874,-5.075907,-7.224017,-8.781699,5.121688,-7.121018,-3.844938,-1.945457,-1.550952,-6.588333,-1.833776,2.406874,9.980853,-4.341147,5.966908,-0.264533,9.585939,-1.178183,3.892771,2.108593,2.144750,2.894823,-2.644591,5.372858,1.890598,4.915749,-9.179961,-2.090891,7.855180,2.093136,-2.120537,3.110267,-3.708556,9.869961,-9.160411,-4.846843,-8.412249,1.247249,-2.876516,3.924605,-9.972531,8.811656,5.924360,-4.252880,-3.170566,2.095790,2.869255,-2.823299,5.818979,-3.469832,-6.466873,1.626167,-8.395425,5.659638,2.973033,-4.374604,6.512673,-7.148315,-7.448336,-5.240803,-9.190414,7.487094,-6.786345,3.152296,4.804799,3.618118,3.213753,4.897716,-5.234472,-3.510030,9.535739,1.514569,-7.353013,-6.503295,9.844161,-0.609114,-1.302524,1.130136,3.806433,-0.728974,-7.845489,3.557242,-4.748773,3.138963,5.801256,8.173766,3.560309,-8.223999,-5.996266,-9.589072,3.521442,-3.989313,-7.243183,-8.250244,-0.956914,-2.696382,-9.357638,-0.452169,-3.764916,3.615904,1.298638,3.779882,-9.273391,7.108846,-2.883364,-5.881864,-9.224795,2.946990,-2.505126,-6.820890,4.876075,-4.124879,-3.622537,-1.873524,-9.155392,3.619790,-5.559093,-6.276610,-0.878602,-1.332230,4.689514,-5.875967,5.886484,-0.145208,0.567479,-1.771129,-1.211532,-6.891286,-2.467209,4.374456,2.022566,-3.579410,2.706346,-1.640171,-3.331980,-6.884913,9.210300,9.261334,0.682303,-6.753170,7.790114,8.787392,5.853781,-9.238912,-1.933162,9.606375,-9.750593,-5.451765,-3.716267,6.869284,8.774742,8.646855,-6.239676,6.208656,-9.293702,-0.781135,-0.254582,9.321001,-7.250872,2.785423,-9.053427,-5.409328,6.025833,-5.764947,0.956615,-8.254024,-9.828079,7.266310,6.891757,-9.570611,-3.433343,6.502783,-9.704012,8.304451,-1.410182,5.067984,6.184366,-6.826585,-7.211093,-4.887015,-0.080894,-2.307625,-9.109981,-4.535196,-7.701834,-3.205422,1.186481,-6.823716,-2.347570,-0.205584,-6.983361,5.232100,8.668852,-2.576812,8.683534,5.009905,-0.649854,-2.602682,8.315980,-4.272867,2.605417,4.667397,-9.457380,-8.596389,2.989453,2.353842,-2.637424,1.760413,-2.473767,-9.992278,-9.901736,-5.110242,4.176735,-5.775280,5.186591,1.431166,2.313483,8.904454,-3.705950,-6.929184,1.053002,1.777284,2.310091,8.583774,3.142860,9.834052,-0.377008,-8.819786,-5.120007,-1.164057,4.846765,-4.590370,-8.117530,-2.125995,6.598024,-6.512983,-1.368817,-1.889790,-5.893543,-2.451914,4.620096,-3.696875,5.431491,-6.225327,1.600673,4.740773,-1.293012,4.933416,3.710641,4.923990,-2.431952,1.654195,3.124371,-2.397612,-3.705837,3.284575,-7.203968,3.907889,-9.527599,1.109061,-6.604560,-6.941313,-4.338376,-9.438301,1.166079,-9.810871,6.799301,3.789781,-5.647456,0.829143,-9.252802,-9.111679,-5.854680,-8.416613,1.393836,-7.106258,-1.085132,-2.096157,-9.513390,-3.524687,-1.506029,9.017196,8.367238,4.618215,1.075698,-8.856127,7.837929,-3.762809,-0.231257,1.541401,5.478863,0.493855,-9.249210,-2.509332,-2.011808,4.305340,-1.794525,6.996066,4.806927,6.270751,3.679044,-7.077336,-5.877859,-1.674845,6.156212,6.935668,6.033239,-9.552143,-4.093232,-2.018598,2.597889,-0.681136,-4.788879,3.049003,-1.831399,-8.053815,-6.507645,-4.549916,-9.258020,0.441818,-9.849712,-1.859808,-0.185271,-0.123915,2.752830,2.638022,-7.394522,-1.824936,7.358459,-6.946450,-9.404110,6.289525,0.252184,-5.265435,-7.093828,7.016533,-3.380119,-5.339771,-2.857362,5.373934,3.146428,-4.985580,-2.866459,6.672437,5.252280,4.697513,-0.972388,-0.681889,4.793154,1.321298,2.960013,-0.690787,-7.542473,-4.402907,9.091776,2.892387,-4.920688,-2.440068,-9.302109,0.326063,7.729621,-3.268749,2.534350,4.218349,6.145733,1.524364,6.003007,-8.524277,-8.379427,-7.265126,-5.833219,1.073328,-3.535119,-6.198597,4.518556,-8.444185,-3.113298,-7.018437,8.041494,-9.643358,1.991568,5.411283,-3.045611,-2.636758,-0.348653,-7.734098,-0.309586,-3.888781,-6.124931,-6.275104,-0.962299,-9.187327,5.451325,-1.347313,7.192527,5.258048,-5.893933,2.435850,-9.938675,-9.552300,5.001569,8.046876,-2.082857,-0.337962,-4.413273,-4.550183,2.931370,-2.595200,5.333756,1.134597,1.618175,5.052945,-1.603497,-0.267973,0.315812,9.328818,-4.387539,-4.193168,-2.762005,3.593721,1.693291,5.258271,-8.864218,6.761897,9.543527,-1.346496,7.182816,-1.835356,5.768974,-9.241142,0.392936,0.213562,6.260797,-7.208074,-3.737959,-3.854371,6.548149,-2.064767,1.083252,-9.418119,-3.475256,-9.489336,-2.843040,4.743510,6.839506,-0.238004,-4.050160,-0.137659,-0.356221,0.581728,-1.340120,-7.908116,-3.222988,-7.510097,0.035376,-1.434104,6.462673,2.371012,7.046157,9.439575,8.166641,-0.771504,5.714833,3.818972,4.364392,-8.899688,-2.574488,-8.254509,5.981193,8.207078,6.215913,5.888709,-4.650286,-1.485465,3.019412,-6.376365,-8.781061,-4.272768,-1.916014,7.346434,6.681550,9.487163,-3.938046,-8.672136,-7.995136,-7.200927,3.972237,1.662325,9.900713,8.733124,1.576813,8.065501,-1.797947,-2.277891,4.628361,6.335070,1.183737,-1.190899,-0.052814,-7.674523,-9.983770,-8.205242,-1.235667,0.193457,5.293590,-9.253296,1.432122,-2.712940,-7.902438,-5.483324,-9.935372,-5.516660,-6.453086,-8.122596,7.219265,-1.242475,9.204178,8.646465,-2.603055,5.567745,0.991642,-1.859165,3.740136,8.613846,7.507492,4.769248,6.014531,-3.728417,2.115824,-8.729273,9.455850,-9.649793,5.688499,-3.844097,7.376848,8.000697,7.819174,7.798276,7.796311,-2.611289,-2.754353,-9.635802,4.823759,6.542216,4.706803,5.159998,-9.927360,-6.883305,3.489691,7.926216,-9.542269,-6.109479,3.177539,3.309123,-9.522899,7.153555,5.684722,-0.486645,-2.312443,3.392262,2.413438,-5.223680,7.427449,6.094964,9.533119,9.804696,7.546593,-0.717289,2.394881,8.242312,0.148166,-5.532961,7.006238,-2.953293,-3.366480,7.502673,-0.924788,-8.900545,-8.108748,5.509800,-5.690681,-7.807357,-0.922741,-2.345217,-6.388034,7.835001,7.284292,-1.257776,-7.032963,-5.009370,3.926934,-8.085243,-8.590451,5.816708,-2.925343,-1.016598,4.340225,-4.166718,2.160750,9.295966,6.223856,-0.347698,-4.640593,8.337424,0.143320,2.245486,2.760004,-9.130956,-0.358735,3.718056,-0.978273,-0.461794,-7.443726,3.504277,7.360033,8.764173,7.284246,6.806714,-9.867652,-0.286805,6.880680,-6.626397,2.372751,-9.549211,-4.785322,-9.484148,3.137860,-0.969826,-1.515341,-2.459656,-5.370190,-7.100403,3.939706,4.069199,-1.669308,6.281573,-1.206353,-7.970376,-1.725301,8.516609,-2.806884,-0.588825,-9.962420,7.478994,-7.363470,3.526496,2.168686,7.367491,2.652054,4.571753,-7.947542,1.796698,-7.177938,3.103205,-3.472097,-3.719326,-5.146655,1.750166,1.290446,6.339120,-7.651394,4.569538,-1.407070,-6.920543,8.395593,1.208646,-3.583927,-6.697969,3.164059,0.956443,3.546098,-5.998635,-4.653080,-2.380908,6.963330,-2.817299,-8.091464,6.067107,-8.304095,5.963785,0.534394,9.629684,5.661560,3.554980,8.866652,5.761094,-9.952564,8.012193,6.794223,-7.545394,1.396250,-5.273806,-2.384619,8.004656,7.404551,4.458336,8.051760,-3.496463,-3.806841,0.137685,-7.500184,-6.798992,9.877651,-3.230579,-3.641984,2.402160,3.647655,4.332180,7.523336,-5.142643,6.966563,-4.905080,-5.620344,-6.876465,-2.110374,6.465873,-6.273442,2.800531,5.449948,-1.269670,-2.163697,6.087862,0.597566,-5.420790,8.486875,5.645011,-6.486725,-2.422257,-7.535285,9.306693,-5.039016,1.326098,9.287544,-7.014292,-6.038508,-5.908370,-0.228304,-6.947780,-6.674691,2.195809,3.692087,2.994657,-0.109850,5.965849,-0.208915,5.929234,0.285083,3.354327,9.643254,0.941266,-1.358941,-8.021403,0.221111,-3.030279,0.643507,-6.039761,-1.131497,-6.154008,2.049791,6.640787,8.130723,-1.297067,1.769621,4.896409,-1.957835,3.609507,-8.095101,7.950822,-3.512811,2.732202,6.050153,5.538697,3.307090,-7.510903,1.786952,-3.915317,-8.986087,7.721770,-8.011491,-4.847212,0.686558,7.072518,-4.238315,6.170230,-9.125434,-6.628133,-2.906977,7.126010,-4.355959,-9.056036,9.197135,-5.444031,-4.812659,-6.402423,-0.799990,3.446726,-5.879230,6.800518,1.988238,3.167896,3.743161,-6.833819,0.027032,-4.620535,2.239251,6.762118,9.240679,7.063123,2.418330,8.694441,-4.234547,9.369769,2.218204,4.595638,-5.169272,5.777142,3.105657,3.807495,2.274953,-5.794637,9.897133,-4.886886,8.392255,-1.494944,2.069065,-6.733917,-5.931715,-8.175661,-0.301692,-1.478603,-2.751095,-6.326371,2.689115,0.172670,8.584000,-3.471172,3.835362,-6.269143,-6.497169,-5.806631,-4.364530,9.252532,-8.645013,-8.281954,-1.826794,2.301977,-3.729729,-5.816404,-4.337477,3.245551,3.555523,-9.689767,-7.647809,3.756686,6.095827,-1.264928,-9.939592,-6.268905,2.916244,9.034131,1.900802,-6.916349,-3.407077,-6.172542,-2.554620,0.438420,8.323835,0.189958,-1.648258,-6.787850,-4.625755,3.331945,-7.440126,5.802811,-2.439041,8.462400,-6.950889,-3.386411,-1.518997,4.448679,-9.816529,-6.994907,-5.132784,6.379939,-5.334756,-6.326088,-3.507100,7.191012,3.408096,-4.969932,0.237419,5.408487,7.435026,7.245752,-6.717591,3.894041,1.602109,-2.447587,7.706459,-3.792502,8.969416,-6.038332,-6.682195,6.661572,-9.758062,1.329718,8.040640,5.210746,-0.427049,0.288031,2.264136,6.650839,-8.281065,-5.425464,2.094621,-7.169572,2.735661,-6.765103,-7.611570,3.278260,4.096270,8.307616,-1.897827,-3.203423,7.655850,4.228616,-2.212155,2.090747,3.681198,-5.234539,-5.711832,0.676317,1.752273,3.683306,5.862107,-0.894670,4.585532,-7.249346,5.907072,5.556718,-5.926304,1.956583,2.639330,8.507233,4.497511,-6.065235,-3.844045,1.786079,3.379123,-2.953825,-6.235184,-6.332915,-0.154639,9.220572,1.389990,-2.051595,2.245156,-2.349504,-4.087191,7.002084,8.536197,8.180478,-2.915123,0.747772,8.786906,-7.720673,-2.942372,9.600444,5.521139,-9.851598,4.121113,-3.574644,2.778122,-4.591302,6.539382,0.823489,1.236743,-0.211016,4.791174,1.587234,7.061819,-9.241755,-7.545691,-8.119062,-5.330627,-0.853019,7.326824,1.805429,8.986970,-6.042930,5.203974,0.221399,-4.517846,-8.047889,6.977324,-7.798035,-0.985086,6.996471,0.276149,-8.848680,-9.887941,1.530362,-8.287729,-1.301726,-0.576124,-8.476122,-3.968268,-8.283942,8.325513,3.072356,1.099318,-8.661055,-1.408448,-2.755842,9.844601,-3.970397,-3.262458,-7.778476,-0.160493,-7.588807,1.571753,-0.416638,3.823021,6.850597,-0.034363,3.971845,-2.740819,4.107228,6.167319,-0.126522,-6.951683,9.623762,5.835415,8.941903,-7.927290,-0.783607,-1.004049,-0.321578,-7.747687,0.797833,-5.670349,-2.617105,-9.100558,4.718569,8.265403,-2.737234,-9.537375,-2.712609,5.592991,6.948099,-6.952894,-2.029500,0.197430,-8.006760,-3.584661,-6.595868,-2.411293,8.997773,-7.776263,4.869213,4.736494,2.736955,7.772136,2.684436,-5.076380,-7.382103,-9.624168,8.503492,1.841435,6.371481,6.966189,-1.566002,-1.726565,-0.612275,9.314859,4.228645,-0.384535,-1.336107,-6.949594,-0.917680,9.906295,4.767509,4.024024,9.100232,-7.179763,-7.250360,-6.625178,-3.430185,6.166721,7.633006,-4.569621,3.735125,4.636070,-5.191850,0.824546,-1.406007,5.709769,-1.241199,2.488029,-7.428417,3.623037,9.316820,3.904088,-2.129843,1.659309,6.819509,-3.121033,-9.892666,3.651755,-4.430236,2.898379,8.850264,-7.771000,-7.888368,7.955043,-6.053081,4.913941,-5.816175,1.987795,5.592774,-1.429611,-9.430874,1.500638,-4.449199,2.846695,6.117072,-3.732427,5.023548,4.963733,-9.622442,-0.759054,4.459351,-1.306655,2.145466,-0.884842,-6.931615,5.151803,-2.477393,2.572286,9.569526,0.306013,-6.992432,4.189707,-4.796668,2.649239,4.340495,1.466436,8.230329,-0.316464,8.612931,-9.599930,0.605919,-4.629326,-4.194654,2.113889,-2.512600,1.562680,-9.428350,3.576904,8.751099,5.896724,-4.290257,6.162977,-3.983438,-7.817250,-3.705344,-3.427805,2.643624,4.828395,-6.726639,3.327563,4.193712,1.378070,-9.932762,6.562060,7.758212,-4.119069,0.354367,-9.687588,-3.502136,-8.265306,5.332698,-2.777640,7.169160,-4.642093,-8.030750,8.177261,-3.735005,4.986644,1.984114,-2.985127,0.063381,-9.419113,-2.537702,9.547769,-8.121833,-1.317124,-7.070892,-8.786407,-6.294551,7.182415,-0.266017,2.173468,-2.743656,0.259939,3.648409,-7.046457,8.768743,3.884322,4.701666,-4.734950,-3.456372,4.648707,7.582490,4.235383,7.398891,2.377082,2.202727,-8.229592,9.158343,2.854513,-0.779250,-6.606058,-1.142481,5.503967,-5.124827,1.901055,-1.480457,0.554833,-0.993018,-9.517181,1.112493,-7.280719,-3.902134,-8.246483,-2.599060,-5.254521,-3.466470,-8.860247,-1.608651,-0.646339,9.874526,-8.700470,9.585238,-6.576599,-3.785362,3.110758,-0.653625,-6.416667,-0.881682,-2.766922,-9.610463,9.508096,7.539819,3.174103,-2.435830,-6.851875,-4.044544,4.433169,-2.634366,4.831306,-9.901226,0.420988,-7.134584,8.692064,-0.774023,-1.049489,-4.949435,7.082175,2.143552,-0.867633,2.655869,-8.697195,7.820382,4.737959,4.434017,-3.348362,3.988176,-7.926198,0.215324,-3.431131,8.786973,-7.090838,3.563276,-6.611015,-8.831936,-9.613164,2.540602,6.430051,-9.334293,9.374236,-8.239360,-7.308124,2.712230,2.366799,-9.910975,-2.543109,-8.731873,-2.861884,1.788537,3.711406,6.781368,6.363820,-5.431744,0.216409,4.455156,-3.493680,-1.003884,7.839500,6.911305,-5.115094,-2.010997,1.151354,6.564109,-7.958119,-3.559400,-2.727635,0.530147,8.662601,7.799923,4.307806,9.677544,-7.212060,-0.263945,8.557860,-6.607217,9.941500,-5.830046,-4.500670,-8.811536,-8.785047,-8.900088,-7.264242,-3.592663,6.179034,-1.548375,-0.140557,-0.323115,2.627394,-9.438584,-0.173015,-9.374344,-5.930360,-0.651900,-7.712317,1.227905,-1.393933,-5.157500,-1.862400,-6.066523,-8.271379,-0.832940,-2.384375,3.774778,1.952560,-7.456680,-9.616679,1.719943,4.066759,5.459963,0.640114,5.327439,-8.925815,-2.392849,-1.572640,-6.837782,-1.934988,-3.951773,1.145058,-4.980994,7.050251,-2.481419,-3.649315,-1.099700,-8.452394,2.157801,7.034926,5.699427,-4.627806,-4.364087,-1.189218,8.031158,8.495674,4.673862,2.819324,9.739088,-9.850057,4.682199,6.420973,-7.807141,6.864646,8.404642,-1.644599,4.679989,3.719107,-3.091806,-2.068131,-9.950032,7.554895,0.581526,3.548503,0.245291,-9.338597,-8.359744,1.295012,1.199989,3.055425,7.417314,2.902758,-9.045390,-7.025711,-8.282109,4.873867,-0.656974,-4.320629,0.091157,-3.267696,9.019700,4.512391,-3.567827,7.451751,-8.233953,2.411962,-9.540218,-0.972519,6.890513,8.454203,3.342320,-8.695242,3.558840,8.792220,-3.916847,-2.440851,9.827535,-4.837010,-8.756468,6.353808,-7.340777,-0.034166,-3.544289,7.733243,0.421790,3.955534,6.880544,-9.791013,0.281417,-6.300315,3.034985,4.762643,-0.535246,-2.204610,0.234343,6.215779,-0.573938,0.471745,-9.201893,-3.404089,3.966864,2.894522,2.919808,-0.198963,0.170198,1.913884,1.302084,2.790254,-0.046086,-4.777693,-5.359196,5.247553,6.686253,2.428656,8.841386,8.370422,6.615444,-5.349019,-7.898183,7.477253,2.890997,-6.303175,-3.813458,-5.696583,1.196765,-3.259447,0.319492,4.912811,-0.383364,-6.025433,-1.316370,0.961901,-8.091879,7.136702,-6.319039,9.637842,7.050277,-1.848835,8.305751,-4.530574,9.310908,-6.847646,-2.271248,1.830075,-2.830842,-2.250419,3.121679,7.771044,7.299419,-3.848437,8.356966,4.806809,3.344570,-0.138960,9.176515,0.006675,-9.982942,6.275093,3.750743,9.555810,-2.014356,7.494852,4.289513,-0.411759,3.462995,-9.018921,-4.122629,6.352955,8.599829,-2.551168,-8.269986,5.953338,-8.705351,4.895068,0.180427,4.356247,-0.400275,0.755486,7.571572,6.816687,-4.442453,-0.017904,5.205263,-5.983683,3.404497,5.468757,8.854280,-1.129075,3.664159,9.502222,6.949331,0.474001,9.012919,8.067160,-5.876381,3.225508,7.764012,1.311101,2.348771,6.445205,-7.299885,-0.113562,-1.914525,5.069178,-5.905457,-0.071633,-6.676403,-1.791106,4.333736,-1.475601,-2.063076,-2.069464,0.964240,-6.976575,-2.152297,-5.502024,7.694718,-2.378275,3.676322,3.657353,-6.429000,4.518094,3.621358,3.927567,-8.784875,-2.079211,9.513816,-2.405021,-7.199803,-7.385289,-3.002536,-6.829787,4.280404,0.665720,-3.332527,2.462885,5.497467,0.343119,-9.965431,3.996544,0.250870,3.239542,-7.155267,8.566676,-9.311551,0.929187,-1.683442,-5.505685,-0.854734,7.412076,9.134992,-0.727535,7.260466,1.895097,-3.911391,-8.690745,9.068718,-1.537978,0.432960,-1.122796,7.664491,5.428021,0.109098,-0.513576,8.857435,2.459741,-0.226537,0.610915,9.342935,7.419107,1.464487,0.057933,5.678836,8.936482,-6.464722,-2.344560,4.831611,8.894388,-4.232430,6.236074,6.401333,-3.498685,-7.554064,-6.402706,-2.963765,0.455895,4.549903,-2.626540,-2.864559,-2.695905,-7.821802,3.105168,-6.265764,-2.287438,-7.535347,-6.517661,-6.890739,2.230818,7.312903,7.089308,1.346526,5.343306,5.002679,6.286909,8.047512,-4.854791,-7.456132,-4.098717,0.435891,4.482822,-0.459753,8.985272,-7.341325,5.565665,-9.981157,-7.198369,7.259098,9.249227,0.215599,-6.202050,-5.270577,-4.742413,-4.037395,0.655595,-3.606509,5.962854,-0.374631,3.543846,0.713849,-5.054770,4.146570,4.303523,4.745779,-7.277481,2.237277,5.513493,9.496956,4.280808,-9.172188,3.814778,5.753536,2.203125,-3.495413,3.856861,9.654897,8.327400,-2.144308,5.099923,6.203700,-9.831601,6.707156,-4.705046,-4.328046,-6.295759,-2.312840,7.663266,2.431470,-0.105708,9.101819,6.959017,4.711521,-2.983616,-8.005098,6.452989,4.682206,-4.900290,-1.868657,7.377807,-9.036831,3.384514,-1.261030,1.775957,-5.478860,7.912686,7.712022,-6.206311,8.058491,-7.837616,2.829810,-4.757856,0.579106,8.155478,5.856654,-7.941019,-1.344806,4.759101,-2.334001,-7.698932,-8.274980,2.612512,9.679183,-3.596734,-8.916319,-4.185341,0.928455,-1.033512,0.246132,-6.354587,-9.751575,1.461341,-3.680489,4.358865,2.154631,9.784997,0.072475,2.409874,3.235758,-2.047390,-8.681347,4.734793,7.095329,-3.352483,6.232925,6.890923,-7.024275,-1.017753,5.952400,4.259927,-1.507308,-9.486165,8.164556,-7.895129,-1.159304,-8.114376,8.759085,-3.548670,8.291067,2.961137,9.030636,5.945652,9.704473,-2.782510,3.748615,2.599427,3.217002,-9.700065,3.697480,4.851011,7.803706,-4.291311,6.392340,4.968744,-5.997793,1.779636,2.393411,7.665438,-4.314845,-0.564473,5.469206,1.586799,5.489717,-0.051075,-1.104319,-1.668358,3.985041,-4.137353,8.566067,-4.697862,1.873761,7.458335,-4.883898,2.643601,2.412371,-6.068659,-5.125997,5.222577,9.872544,-3.704723,8.005406,4.150658,-8.026604,1.515468,0.483330,3.061553,0.484867,-9.691982,5.795108,-4.153858,9.846658,9.589082,1.380051,1.022667,-7.181719,-2.169514,6.247368,0.352104,-2.120891,0.354036,-2.047854,-4.341944,-3.506228,0.698902,-7.615009,-2.316130,-1.085696,9.528720,-5.053974,7.531880,4.657068,-5.050553,0.426095,-4.980884,-8.398285,-1.574815,-1.578400,-8.012778,8.592327,-6.506335,8.363637,3.302919,-9.320859,5.338946,2.091557,-1.986082,8.416408,9.907556,-9.673944,-1.544662,-7.209573,0.808860,5.645475,8.947190,4.127234,-8.408519,-3.788865,-6.832725,2.488490,0.439869,-2.589977,9.428370,-5.133918,9.322033,-6.350313,7.767840,-9.831919,6.293967,-5.566543,-5.590221,-6.278629,-0.565406,-6.967642,2.959561,9.030455,-9.358053,-1.438903,0.324442,3.661528,8.460882,-8.422091,-5.390784,9.714502,-8.433868,-0.564945,8.933119,4.745090,7.718749,0.367589,9.279638,9.852792,-0.441617,0.715925,-4.281606,-3.678629,-2.174361,-1.289772,9.150820,-4.312104,4.413820,-1.385488,9.081250,-7.110553,8.456655,-1.978243,-6.809202,6.464289,2.144518,-9.017298,4.464688,-1.706833,5.826704,-2.499536,-9.727909,-5.259070,7.933923,1.467513,2.605753,3.644175,3.701533,1.902714,4.530898,-3.217379,-2.215138,-3.930269,-6.559413,4.083704,3.400368,-3.754793,5.744343,2.729520,-1.136337,9.779417,-1.555773,-2.913767,-5.070093,-5.863981,-0.151374,9.319214,1.437723,-3.470669,-7.427029,-7.948063,4.480622,0.806987,9.491346,7.997706,4.470859,7.771700,1.068289,5.695451,-4.782494,4.346960,4.525277,2.181416,-1.047090,-1.910071,4.794749,-1.147420,5.860451,4.637433,-8.822793,-8.051229,-6.822419,-7.226174,-2.003495,4.356984,0.914643,5.337594,2.255505,2.875538,2.551360,-7.833931,-1.378604,3.650211,5.337254,4.635220,-8.460811,7.316713,2.144980,-2.122251,-3.004757,-4.868164,4.855343,-2.554322,-2.509224,-9.986304,1.124448,9.734816,-8.336975,9.888609,7.932142,6.892537,5.943413,-1.369439,-4.838328,-2.828517,7.783172,-0.713098,-7.757403,5.705577,0.883011,-8.920821,5.345419,-4.550418,7.112969,5.020992,-6.293863,-8.608002,0.244980,9.314760,9.320138,-5.963329,-5.958507,3.185696,4.235381,-6.409651,6.222881,6.425390,-7.348559,-9.247311,-3.213169,-5.221767,-3.440281,-4.319339,-4.546970,-1.043439,4.682336,-2.185369,9.550047,-8.654639,-7.529708,4.710017,-7.840096,-6.973213,3.236944,-7.569366,-4.809264,-9.718777,5.679183,7.789797,-7.710732,4.134824,-5.423679,-5.113412,-3.949608,8.570820,6.012370,-9.900603,9.346952,-7.652321,6.743424,-9.663150,2.605184,-9.437418,5.923326,-2.153067,7.277012,0.625168,2.478151,-0.472816,5.322083,2.749262,-2.961383,-6.816760,-7.543746,-6.227003,9.486501,-2.772868,-2.561301,5.947255,-2.783058,3.210407,8.562293,5.155115,-8.489682,-8.022290,2.356707,-3.054550,2.156078,-4.447866,2.780617,8.683945,9.645203,-4.224878,9.373142,-9.040708,7.966328,9.674975,-3.612428,-3.908226,-3.530261,-1.419878,-2.870625,-8.115086,4.789990,0.330424,6.970750,6.151239,-8.510438,-3.789587,8.084025,5.304160,0.635845,-0.038998,-3.913768,-8.383033,0.188645,-5.802201,-8.550361,-6.117998,7.762024,-6.613994,-3.006502,-9.461927,5.724002,-1.903174,8.303141,-0.130332,4.252385,-3.766448,2.132728,-0.285246,-0.192592,-6.487034,3.504417,-9.389197,-7.678229,-2.222607,8.065566,-1.575057,5.971832,0.898646,-8.806063,4.851484,-6.268520,9.052432,5.034639,2.853921,2.522276,-7.360334,-5.892176,6.052684,9.409681,9.736221,-2.201785,-7.583958,2.614725,-5.183878,4.900290,7.116122,-8.032958,5.613709,-0.950300,6.268019,-6.814823,1.617396,-5.310590,1.702790,-2.922728,-9.600927,-7.949740,-0.139444,0.976429,-6.639036,8.798388,-4.501540,-8.204962,0.066321,-2.119223,-7.358707,-9.250410,5.406620,0.204997,-1.790387,-2.484007,-1.192354,4.006313,-0.945619,-4.429013,7.860051,-0.398017,1.154535,5.756562,5.775070,9.093731,-9.445435,2.020103,-5.968268,1.292254,-0.950992,-3.480684,-7.708067,-3.764286,-2.127839,6.771786,-6.784797,7.265951,7.996027,-4.344835,7.424282,-1.016409,1.540033,8.086340,-2.411043,-9.630056,-7.486375,-6.538795,4.349140,1.326031,0.049094,0.319308,-3.326661,2.168577,-0.168720,2.576105,3.373281,6.947119,6.150891,-0.414000,8.089591,3.389586,9.802212,9.240395,-6.098726,-7.484267,6.569867,2.905888,6.287178,7.414115,-2.063151,4.437164,8.713406,-9.254084,2.151164,-3.706732,7.987997,1.137756,8.054446,7.837691,6.165727,1.921638,-2.020232,1.405462,3.417003,1.971138,1.335879,6.051076,9.927650,9.779549,4.323331,-2.312046,3.410750,4.186176,-1.302209,-7.434705,1.268342,-9.800678,-4.414497,5.780054,0.790024,5.453222,8.514638,9.359501,-1.348563,3.057847,-3.643230,1.131016,7.759390,0.615376,1.180642,-4.543334,3.875448,-1.883325,-5.301847,-7.447988,-8.572107,-6.587763,-8.328004,0.690567,-5.089971,-7.665988,-6.245328,4.612594,0.450253,0.180278,-1.909611,8.599937,-0.003038,-9.159062,1.106408,-8.236994,-7.038283,7.440181,-0.188522,-4.229167,0.178513,-3.078777,-0.994998,-2.748717,-0.475251,-7.842795,2.029477,-6.270518,-2.726029,-7.155286,3.425505,5.198202,7.329377,0.715369,6.447646,-1.002404,-5.937056,-1.939864,-4.450790,-7.537765,-2.641426,-0.982658,-8.162118,-7.004947,3.039406,-2.473066,7.816459,-9.672125,-6.034833,5.923954,0.490173,2.753090,-7.092982,-0.842539,-4.323346,0.976294,-6.255511,-8.306072,-6.578549,4.894490,6.907944,8.028507,9.533474,1.536337,4.967023,-5.314619,-5.525320,-8.034875,2.486343,-6.975720,-4.082539,0.563234,8.943076,6.179772,-5.858251,5.816099,5.324150,-3.663079,-9.108864,-7.932189,-2.262022,8.371418,-9.644958,1.620492,-8.729448,2.586587,8.999721,9.339953,-8.295932,5.767819,0.027951,-3.531658,7.021795,-3.793406,-3.534665,2.434990,2.403016,-2.313938,-6.734960,9.637424,0.974230,5.863745,1.130632,3.378480,-8.869760,-3.940135,9.908805,-4.831549,-4.057558,-0.659238,4.006258,2.676281,-9.894514,2.358878,-2.797713,-2.799632,5.200009,-5.066235,-0.134490,1.735641,-9.786763,4.641193,-3.557453,-3.311254,-4.452424,-4.823035,-1.356308,-4.320762,9.120406,-1.363229,-5.665365,0.399546,-6.626600,2.881614,3.807903,2.461907,-9.064393,8.788565,-1.543227,2.978497,-3.203759,6.004162,-6.343298,-3.661241,4.054626,3.954382,1.414656,8.141056,-8.016041,-4.174614,6.256357,-8.197271,-5.015151,0.778846,9.330115,2.075795,-0.415781,5.551117,-3.140871,-2.093115,-8.467245,-8.667531,-3.469861,1.612164,-1.898781,-7.395656,-8.272971,4.686964,-0.449266,3.209876,-8.870024,8.183649,1.268954,1.371469,-6.907090,5.294342,7.699965,-4.251511,-9.296621,-6.131605,-2.624780,-5.234057,8.980643,7.307529,-2.557875,-9.191999,-2.812956,8.767147,-6.470572,2.891612,-4.931106,9.441066,-2.472633,2.808669,1.022015,5.362484,-0.919692,-5.499143,-4.542354,9.329248,7.949149,3.600715,-6.454985,6.392861,2.214616,5.611920,-5.094754,3.573031,5.475647,8.562428,-3.110182,-0.035606,-8.894091,7.378610,-9.364200,-4.109343,-8.245239,1.705484,-4.417358,2.412917,-7.626222,-0.977891,2.930449,1.103847,-7.602775,5.459820,-6.962072,-8.438601,9.844284,5.538618,-6.361417,6.769651,3.003561,9.186356,5.425182,2.508146,-1.718055,-4.446161,9.140466,-0.896690,-0.355657,-5.297599,8.848247,-1.809804,-2.427452,-9.728262,8.945635,3.738141,0.659798,-8.281099,0.145809,-4.204532,2.137062,2.926710,-5.309914,7.612077,-3.441478,8.498904,-7.509757,-9.141859,8.717406,5.848478,-2.279920,6.507739,-0.858492,-0.312693,9.683495,8.855932,-5.119490,7.766062,-1.039195,4.834157,8.422121,-2.674266,-4.308993,-1.733178,2.491858,-2.749937,0.806367,7.119791,-8.425737,4.312720,-9.159835,-3.637995,-1.001196,-8.683060,-6.542037,4.660812,-7.746042,3.791132,-9.258952,2.326481,-7.111914,9.006922,0.798613,6.369214,-1.263724,-9.261322,7.375596,7.827248,-7.552932,-6.643556,-1.976169,-1.029847,7.676398,0.498260,-7.737002,8.718115,2.645638,-7.411639,-7.488673,-6.907690,-3.308227,3.577489,1.932278,9.060805,-9.575710,8.223255,0.496851,-6.061284,4.827042,-6.838835,-2.586650,-3.072237,-2.213544,-4.680318,-9.492240,-3.976257,8.045528,-6.345910,-7.783977,9.929874,8.787166,4.395977,-5.956758,2.584059,-6.894568,7.136249,-0.976083,-8.934567,-2.488829,7.362389,5.394755,-1.953897,9.672403,9.364826,-5.637638,6.915404,3.189129,2.996447,-4.460505,-0.973828,-8.386294,1.828708,8.226104,-6.683793,-5.270610,8.698878,8.255405,8.745275,-2.841288,-2.575036,5.396518,7.206334,8.017916,-2.460453,8.782948,-8.448752,8.539826,-0.115545,8.532051,-3.455300,-9.177416,5.504714,1.388487,3.375967,8.420777,3.808469,5.008661,-7.230942,6.885457,-3.574572,2.837116,-6.576520,-2.814200,8.225112,9.227377,6.011615,7.220819,3.447722,9.444307,9.688308,3.654508,2.238355,3.556035,1.685674,9.875663,1.229656,-3.744472,1.285244,6.398531,-1.104384,-9.151334,-8.347676,-4.319444,4.741832,-4.845283,-8.635952,3.975834,-4.916532,0.870142,1.335841,3.646091,5.077557,-1.495243,-3.413087,-1.371858,6.577927,5.388749,-4.661011,9.795660,9.352251,-5.665953,5.814604,-6.789242,-5.442974,5.806493,-1.986451,1.936126,-1.489861,-9.940636,6.714001,2.386595,5.483634,-2.004207,-0.185188,1.061252,-0.562921,-1.632470,1.719410,9.581327,-6.094661,4.196451,-0.609057,9.920905,3.581829,1.182756,-6.664857,4.271120,9.903455,7.624882,6.780202,-4.091906,5.745682,-9.987692,9.087502,-2.884012,-1.202668,-1.972710,-2.587957,-1.155243,8.245989,-8.421778,-4.081822,2.073319,-3.177013,-9.533358,-4.258563,8.934829,7.666516,-7.514888,5.370129,-3.297566,4.895435,-9.001128,-6.372279,1.718890,8.352074,2.884123,1.861790,0.562676,-2.710573,0.872160,-4.506999,-5.004412,-1.981904,-2.039405,0.720621,-7.375902,0.923169,3.635220,4.209552,8.586014,-6.368058,-2.367235,-7.666120,7.009895,0.988747,2.688377,6.339065,5.096343,-9.028310,-5.368343,4.627032,-0.969516,1.871529,-5.644563,-1.643072,8.263319,1.954625,-6.644595,-1.109661,-3.815738,0.133729,1.266937,6.823264,-6.978252,9.639603,1.397128,0.275538,1.737861,9.337176,0.188459,-1.471899,8.996040,1.228322,4.928729,5.582602,4.920316,2.750367,-0.838264,-1.778170,-7.402505,0.848730,-6.966566,-5.068019,3.396823,0.245666,5.496084,-6.802428,1.595331,7.290058,5.280725,-5.379640,8.421953,8.421589,-8.676166,-2.547162,0.805544,3.972014,5.274077,-6.056391,2.202728,2.148449,6.556987,5.291511,2.327661,4.975958,-1.239207,-1.480871,0.600752,5.642963,4.369405,-3.202486,9.101412,-2.109227,0.670471,6.565866,-9.317557,-1.375408,-9.735234,1.242699,-5.801087,-9.800185,-8.008725,-4.657624,3.196787,-4.132413,7.447196,7.385529,-8.425571,5.993788,-5.148194,-0.196875,-1.846282,-5.833212,9.469576,-2.644118,-1.524473,-5.368988,1.694143,-0.129375,-1.025886,7.664923,-2.907164,-0.602500,-8.712765,-0.226277,-5.766099,-3.785140,7.691108,-9.603793,-7.744289,-1.822699,0.556266,2.605678,3.295511,4.945377,-3.353391,-0.946951,-8.183637,6.988856,-2.565688,4.703576,0.347215,5.415646,6.262778,1.353183,9.393831,-9.160201,-6.604531,0.256496,-2.182286,5.996778,-0.122977,8.133886,-4.389644,4.376375,-6.220395,5.820483,-4.776056,5.567835,-9.335582,0.495701,-5.734248,9.230643,-1.745459,5.400767,0.331920,6.919557,-0.474005,-0.229401,-3.478403,9.235417,0.779441,-9.392076,-2.374294,6.703248,-2.048230,-6.072746,-9.203276,8.316598,-6.001901,3.533036,5.438422,1.882611,0.141604,-8.829373,-5.400855,3.296407,-7.576547,2.739869,6.455246,-2.733747,-7.538520,-4.481104,-1.309839,5.121981,-4.619209,-6.311503,0.852308,9.886559,-0.975331,-7.342632,-8.001471,-6.105041,7.294462,7.145551,-2.501880,-0.796427,-2.707528,5.334393,-5.030070,8.419270,-5.996982,-1.398925,-6.098435,-9.487503,0.446036,9.535949,-3.664281,1.959814,1.666251,-1.287898,-5.002279,-7.143094,-3.627950,0.211315,-3.063100,2.118352,-9.782839,0.547461,-0.047689,8.565296,-7.493985,8.243383,-8.043574,0.633853,3.187668,0.667582,-3.496252,-7.686897,-5.723289,-0.987920,-6.860763,1.871635,4.189154,8.659752,-1.295089,-3.057980,5.267415,-5.359796,-3.046266,-8.727255,8.086491,9.024494,6.669805,-9.803914,9.955699,6.966390,7.123497,-0.818629,1.444944,-1.387968,3.214568,-5.662697,-8.456001,-5.430014,-8.035931,-8.761739,8.172931,-5.224720,2.838013,-3.358415,9.719856,-9.048525,-2.302452,4.556770,8.757401,2.976144,-4.611123,8.404881,-7.685621,0.729732,-0.515855,1.939906,4.904284,8.954120,-7.716729,1.171939,7.047660,-9.698648,3.261146,8.515697,9.156284,3.727957,-3.998217,-2.073942,-3.318631,-3.072707,5.349091,-8.221263,0.722143,2.605001,2.534322,7.167204,3.581555,-5.896115,9.010145,0.262537,2.483109,0.216197,9.484767,-0.978110,4.268892,5.098584,-7.429832,-0.165863,0.517448,-6.747339,-6.580359,4.563312,4.573867,-7.993402,8.900635,-4.201850,-4.211595,-7.916642,2.399765,-5.247202,4.975694,-8.355189,3.692902,7.528956,-8.886020,-7.520436,7.913111,-7.433598,7.502359,-9.380043,-3.362182,0.534540,-2.422683,9.387303,0.470797,-7.670012,8.218795,-2.708370,6.827761,1.412520,7.308926,1.929683,6.584882,-7.948217,-7.685030,1.837755,3.671032,-4.052475,-3.103434,2.846858,0.893496,5.554675,-1.379888,6.714848,6.825489,-0.772847,-8.876781,-4.240383,7.894103,9.757010,8.733624,1.193229,4.896990,-0.155140,1.921736,7.324409,6.511868,7.833416,8.260909,-6.352997,3.936347,5.505519,-1.078547,4.606425,-5.378883,9.078589,3.163901,-1.038274,-4.362182,-9.680298,9.142930,-7.053934,-0.548286,-6.475909,1.018183,4.218083,0.908060,-4.517198,-0.279495,-6.872049,-4.299951,-0.368414,-7.094096,7.519564,1.548492,-6.421476,2.129084,9.258056,-5.748639,4.109606,-5.916857,-4.466542,-4.930143,6.865073,-6.707233,5.085524,-2.578836,-5.952240,9.806386,3.391557,9.939324,1.759724,8.798509,0.616070,-9.097291,0.842966,3.462284,2.095511,-1.121336,-7.956604,-2.563142,-9.783935,7.835277,7.334267,-5.856166,6.612882,-2.350959,-3.161437,9.372877,5.023330,3.611653,1.561684,-9.506255,-3.022405,5.666047,2.506134,-1.025483,-1.682341,-7.420494,-4.162024,7.869645,-5.415656,-4.555185,4.640138,-0.948526,-9.725699,0.203505,-1.825729,-0.332214,-9.783131,9.720212,4.924540,3.166511,5.550563,3.296767,-2.519049,2.587390,-7.050525,-1.403531,-8.810930,-3.111591,-9.776416,-2.641997,1.724470,1.593611,-5.317449,6.329929,-8.153820,-4.057710,-5.428420,-2.113974,-6.627638,0.615104,9.595223,-0.676993,4.084895,-7.405052,-3.894699,-6.264444,2.980610,8.860089,7.602763,9.034045,-8.856736,2.494424,9.891243,0.435877,-0.129725,-6.051408,-8.698097,2.580156,3.800462,9.781923,-1.949254,6.924785,4.298045,0.004774,7.993635,0.064459,-6.643034,-7.547406,-2.291805,1.243655,5.003954,-5.270074,-1.217756,1.954766,-3.959574,5.226253,-6.053480,-4.982415,-0.016977,-1.119671,3.958260,0.362402,2.219099,7.875804,9.868288,-8.098086,4.081502,7.365356,-0.896807,8.174788,3.088157,2.752615,-8.255952,-0.227044,8.360179,-8.413322,-9.662622,0.995633,-5.349614,2.070644,3.023038,-8.450672,-3.317392,2.011647,-5.339740,4.119163,1.590219,9.222549,7.918263,-0.389218,0.426745,7.668036,-9.257143,1.393085,5.257124,9.329304,-4.901823,3.722500,9.017414,4.305444,-7.950366,0.922023,1.290752,3.137700,-1.061061,8.480993,-9.715232,4.666192,7.992036,4.472844,6.476347,-3.398889,-3.717832,2.856098,-4.939289,1.110255,5.188211,-9.349531,-4.257840,9.837499,-2.273216,-2.929234,4.904859,7.790844,-5.706699,-7.315483,2.540678,7.079528,-1.087800,7.432446,5.005560,7.091953,-2.973494,0.460630,4.076926,9.466271,8.775549,0.716827,-8.990649,-6.869832,3.812165,-2.456659,9.659875,1.667729,-8.122736,-3.199999,3.577440,4.062138,0.370654,-5.515551,0.628475,-7.321736,7.223168,-0.553035,8.204504,-0.255174,2.920696,3.027340,-5.633732,-2.273771,-2.545458,-9.920475,6.465406,6.557299,-2.978139,6.398088,7.995263,0.486719,0.910263,-9.846408,-7.745028,-6.295925,-4.499110,-2.417862,-1.234447,5.448974,5.136592,-7.883135,8.478212,6.816344,-3.271672,-0.307780,6.283960,-5.394548,7.333843,3.581382,-9.732745,9.292544,4.732681,6.639072,-4.304466,-2.239043,2.316884,-3.612109,-4.252251,-5.534104,4.835861,2.195586,-3.457502,3.187199,-5.772550,7.154282,-2.038809,9.911261,-6.711044,8.125247,-4.995764,-7.011697,7.054482,-6.277254,0.860519,-0.338555,8.051240,7.918205,4.976163,5.957888,0.098646,-2.873330,6.998630,7.550167,0.118516,4.566218,5.979109,9.409588,-0.224461,-7.713889,-7.724165,-0.711042,-8.715121,-3.380173,2.011583,-5.945071,-2.881502,-2.655398,-8.531126,-7.918787,4.092633,4.053435,1.919397,7.336103,5.543564,8.724287,-8.006458,6.647574,9.346125,-0.073708,-8.278079,1.038798,-7.940963,-9.230015,-9.056436,-6.735977,-2.739028,-4.319906,-4.198898,-1.188189,0.880125,9.533709,1.354916,2.009403,-5.514548,5.134514,-0.585992,-3.232951,1.598959,5.651241,7.591445,0.604465,-8.327217,1.057161,6.779828,-2.793108,-2.063408,-9.077795,-7.856000,-1.627212,2.418348,1.591587,6.516563,-1.150407,9.911800,-7.500491,1.084570,-7.416589,5.162004,-9.529737,3.655066,2.752648,5.345977,-1.767289,9.956560,-4.363892,-3.871556,-3.290771,0.187903,-9.900690,3.512470,1.482338,-8.628718,-6.886232,-9.392718,-3.412611,0.227502,8.586491,1.253361,-7.465701,-5.223398,-3.397882,9.734810,-5.803071,3.480723,7.668566,7.006826,-9.153353,-3.169905,6.336303,7.189533,0.551394,-3.097414,4.922389,-7.064083,-3.898388,5.492354,5.757567,-1.405841,9.204681,8.979829,-1.973276,-6.159216,-1.435419,3.403184,7.603265,-9.248754,0.441262,7.200063,-3.945739,-4.638411,-1.679243,8.557557,-9.697819,-1.088719,-9.323815,-4.890569,-8.077334,6.712417,-9.866846,3.142457,8.655859,-8.551311,-5.108527,-3.568119,5.408267,2.831464,-0.520975,6.456795,-3.729416,-8.289185,7.423358,5.896231,5.243405,8.271723,5.572966,9.885523,-0.452374,7.265478,5.452061,1.134177,2.006355,5.797344,-6.276747,-5.421061,-1.920461,9.607639,-5.940860,4.393319,8.441625,3.047849,8.678218,0.491448,-3.082946,-8.273837,-2.822707,-4.995658,4.473756,3.028967,-4.787915,-9.624494,1.296705,3.175016,3.884939,9.434458,6.449488,5.576011,-5.591323,-2.693551,-8.144067,-9.618951,-2.716877,-5.748023,-6.797066,0.851156,6.491614,2.545268,0.895240,-4.226857,-4.050040,8.723856,-4.007851,-4.166573,-0.617056,4.413873,-8.911165,9.817013,-2.760155,-1.606439,-7.512113,-7.905065,0.149107,-1.360276,-5.964629,4.481152,-8.813752,-2.122486,-8.696107,3.381476,4.579209,2.462143,4.004265,-2.873768,-6.342314,-8.633192,0.896201,-7.449672,7.903275,5.169091,-4.147228,-2.162911,-3.761807,8.595136,5.770995,6.206181,-7.535644,-5.888739,4.034551,6.061855,3.071572,-6.969984,-8.793732,-2.901943,8.950250,4.743631,-2.381027,0.627787,-2.564537,1.094894,0.535470,-9.997034,3.791477,2.101443,-7.599512,-5.800809,2.379673,-7.450085,-8.388571,6.110877,-7.291012,5.746379,-6.476356,8.485187,7.124576,-1.681263,9.877556,-5.588312,-8.481783,-8.401069,4.808517,-2.155133,2.263216,-0.952623,2.472294,-3.526032,0.496800,4.398089,-0.676992,-7.327936,4.723844,-5.727404,-3.578666,-4.609497,8.828871,7.844404,6.921579,5.506950,-8.512139,-5.452232,7.250588,5.160627,-4.746612,-9.806963,-5.506814,5.153391,3.093931,-5.458986,-3.214848,-1.006502,2.437422,-5.181183,-4.876625,-4.973407,-9.756000,-5.778502,9.926485,-1.283690,-8.917732,-4.113613,6.487093,7.290955,5.240966,-7.164438,-3.593819,9.318072,-9.641894,-2.894791,5.577492,7.523872,-8.996744,7.748937,-9.320481,8.280007,-6.587667,5.764783,1.684096,1.943833,-9.393944,4.692424,-4.917076,6.952512,-7.218533,4.089657,-9.065366,3.735194,5.277647,-9.969812,-0.662886,-0.544852,3.315107,2.374597,-2.871445,0.375840,-9.284487,9.082647,-8.649558,-1.656765,6.366952,-3.784404,-1.215451,-9.251310,1.148065,7.748105,-4.177214,-7.475036,9.898523,3.706739,-6.464975,0.407489,6.747312,-2.432340,4.766953,-3.899801,-0.864902,-1.663752,1.053410,-7.686295,7.978672,-9.129997,-4.216631,0.185440,-7.353267,7.765020,5.400270,-1.165916,-0.052515,-1.279564,8.700744,-8.527981,-4.442149,-0.685361,4.544559,-4.473472,0.966807,-3.799836,4.388951,6.040677,-3.393816,7.000116,8.136747,-4.972385,-4.902204,1.853100,-4.036265,8.368872,-4.657751,-7.815479,0.178878,-5.659654,9.899726,-0.001308,-8.938526,7.896867,-9.685853,1.251733,-2.603620,8.310488,-6.508162,-2.881641,-9.167254,5.674000,0.795537,-1.123896,-5.295931,3.680426,-5.245216,8.237573,-7.491448,9.917909,6.515749,-7.323900,7.617005,-6.261207,7.338752,-0.006008,-3.680749,-0.970121,4.646460,-0.413495,-1.280366,0.772260,1.314120,6.594695,6.386802,8.656565,7.890063,-8.774203,9.866080,3.964235,0.286699,7.517908,8.436878,-9.130339,-2.131434,9.114374,-3.852626,2.820739,5.496501,0.655057,-8.469189,5.745541,9.449111,-4.589536,-0.179924,6.558104,1.466686,8.897057,-4.558663,0.758274,5.794020,0.478460,8.877502,6.260140,-0.553383,-2.202709,0.265305,-2.540520,8.232988,-3.444095,-8.552305,-4.059069,-3.554820,3.081297,6.085840,0.840939,8.035047,-3.811351,-0.538341,0.884817,3.156481,6.278389,7.796244,1.510475,-2.210766,-9.899782,1.033797,-8.796033,-4.269950,-8.500848,-5.944835,-0.893551,8.587168,-3.018596,7.773203,-5.689465,6.472068,8.302759,5.998254,-6.807975,-8.758989,0.839388,9.351540,1.801589,4.300834,8.713087,-9.451494,4.493000,-0.200057,9.686676,1.449616,-4.192013,6.309470,5.774141,-8.162806,-2.877875,-2.997247,-7.105806,0.706476,1.095228,-7.229221,-7.322692,1.264625,-7.441092,6.432134,1.227621,4.336240,-5.771381,5.584558,0.370565,5.448125,7.404521,0.783201,0.156436,3.480150,1.341642,5.336166,-8.920846,9.184929,-3.238768,-4.822730,3.474258,-7.652218,-2.638559,7.978635,3.000120,6.086832,-1.983829,4.689368,0.114367,7.541859,-9.628110,-5.762746,3.989669,6.279788,2.162202,3.869046,8.966564,-8.606744,3.794182,6.364849,-8.967697,4.329191,-9.441116,-5.899726,-6.852597,-1.572082,-9.070538,7.313863,1.758508,5.569361,5.573976,9.676360,-5.330058,-8.343868,-0.637326,1.112086,9.808662,0.110910,4.049723,0.946316,8.307834,-6.550333,5.312034,9.071990,-3.201745,8.837528,1.134307,-5.493088,-4.876722,-5.758651,-8.103685,2.775256,-7.349721,8.305056,-5.022331,5.785200,8.754814,1.902023,-0.197739,9.590240,7.821114,-7.062600,3.655930,9.913093,5.892280,-9.053324,4.916926,8.191510,5.482567,6.250733,-1.290668,8.316963,-1.219019,-5.013752,-6.438939,7.922746,-5.527895,-9.619318,-6.509193,0.760535,1.011223,6.524792,5.994543,2.785856,-1.943264,-7.786974,4.011479,-8.795768,-3.949884,-8.934579,-3.636321,-2.645241,2.523110,-6.407279,-3.474772,-1.360339,-8.987497,-4.059743,-9.260005,-5.551830,-0.912298,2.586802,-0.458444,9.070783,-2.260004,9.333398,0.894537,9.401715,6.240486,-9.808583,7.778269,4.438562,8.563577,0.680859,4.493893,-1.442673,-1.332946,-3.805936,1.896972,3.542193,4.376763,-8.701635,1.248172,-9.729857,1.356890,-4.512814,6.824540,-8.055530,-5.699793,-0.865148,9.145866,9.512403,4.639900,0.275302,-0.844962,-3.113022,2.217493,-7.744450,8.062503,9.863482,-6.346410,1.415764,-0.210765,-2.368192,-6.120358,-9.464132,3.748676,9.326747,5.176380,2.549692,-8.091079,-4.521264,-2.073549,-5.852449,0.884423,-9.589351,9.294403,5.359699,-3.751292,-9.385607,-3.824016,-6.615422,4.349880,-5.826151,-9.979203,-5.357024,-7.656747,3.183521,7.281691,-6.883485,5.442354,-1.567820,-4.587675,-6.148614,7.365093,1.713221,-8.745445,3.504008,-1.877714,-5.674335,2.949523,9.683574,7.554625,-6.962674,-8.192934,5.213441,-0.108318,-6.435920,6.347625,3.116669,-8.956760,9.545225,-5.671265,-7.550853,-1.053490,-5.796051,9.509276,2.115037,-0.140232,1.464128,-0.884966,-3.592357,3.255208,-5.814322,-6.524076,5.504478,-8.813659,9.906544,-1.787603,5.572584,-2.046360,-0.206906,5.285432,8.513093,-5.962916,-5.373636,9.557152,3.063932,-6.080770,-4.689546,9.433889,6.647865,-9.830676,-6.919039,-9.292285,0.367272,8.704295,-3.735144,-6.522930,-7.440070,-9.968978,8.562951,-7.959658,-4.543720,-1.790609,4.388098,7.164149,-2.162683,2.232032,-5.070213,-1.091482,-4.387754,4.374466,7.945326,-8.558903,-0.187346,-7.423517,5.741225,-8.446229,5.332368,-1.402290,-9.268638,7.795709,4.364294,-9.199174,-0.660182,0.539496,-1.837803,5.410801,-7.194900,-6.476132,3.194219,7.890551,3.808606,-0.294133,-7.197658,7.913865,-7.277770,0.530900,2.527111,0.599206,8.086356,-9.167357,-8.018925,1.492018,-8.713975,5.865397,-4.318423,-8.091880,4.017458,2.692927,0.751291,-4.508150,7.020844,0.873033,4.540526,0.251263,6.060577,2.426927,7.060048,8.866924,-8.059876,8.901209,6.976284,-4.980425,3.808243,-4.548276,-2.134947,-7.858322,1.315974,-3.885681,8.252800,8.758972,5.391298,-0.700547,9.397943,-5.895090,-1.905256,-7.695616,5.514253,-9.741936,-5.539546,5.955776,-7.169689,6.207859,0.981013,-6.518152,6.065535,-4.656674,-3.254946,0.693761,-8.514356,7.604588,-9.081287,-7.840350,-1.709180,-9.031089,0.027147,1.729975,5.515062,4.238463,-6.371553,9.700557,0.788096,5.247788,-1.697482,6.982555,-5.906924,-5.327478,0.618218,4.374484,0.542999,-2.438682,9.955811,-4.252216,-1.411957,-7.273405,-7.879636,-8.063769,6.674406,1.332274,3.961542,-5.110134,-6.919087,-8.094513,1.135682,5.806456,7.043108,8.658889,-4.768610,1.381483,-1.833923,9.196779,-5.476488,-4.658655,2.163795,2.840095,4.862084,4.305809,-4.413447,9.541942,6.941231,0.272493,-4.297830,4.917719,-6.029943,-9.146674,-2.138900,2.418017,1.969513,-0.409465,-5.877961,8.134949,1.409378,9.479414,-4.509690,9.534342,0.472957,-3.714016,-6.271967,-5.875802,6.375558,3.167245,8.534378,-5.513695,-3.958567,7.056449,-8.629598,-4.465210,9.005631,-3.417761,-3.353791,4.252523,-1.308984,-1.977161,-3.819728,7.593670,6.796322,0.334740,-5.954843,5.423653,5.654728,4.914527,-9.212189,6.716826,0.506634,3.651869,-8.509172,1.981920,5.106505,0.549703,7.991214,5.602063,3.812883,8.965101,-5.841989,-1.610025,9.478935,5.392380,-2.682257,-1.862183,-8.227332,4.944795,-7.794980,1.193249,-2.074456,0.779887,-8.600842,-9.672922,-4.484969,2.445641,6.515859,-1.012676,5.344483,-4.637764,-1.970567,9.393327,-4.801634,0.357742,4.668841,-1.730633,3.139515,6.671422,-8.224278,3.175638,1.983296,6.787730,8.061466,-7.448459,-6.384060,-8.691158,0.458303,0.157960,-5.563349,-2.584831,-1.407424,-8.814649,4.436601,9.466987,3.045458,-6.713173,7.348807,8.160700,2.314493,9.720758,-6.099165,-1.263419,8.565140,-4.107516,6.914568,8.404273,4.484213,0.898872,-0.833890,9.611692,-3.082908,-9.328660,8.777120,-0.649928,7.909198,-7.893236,4.584937,1.124343,6.282202,-7.317677,3.462351,-3.883070,7.698349,9.186085,-7.937033,-9.078112,-6.426535,-0.831029,-9.802287,-5.716699,-8.709198,-1.545889,4.891578,-5.775346,1.082895,8.910149,-9.408844,3.350959,-7.647804,5.289459,3.675381,3.500521,0.528034,-8.365106,-9.589297,4.188832,2.881349,-8.339029,-2.834213,8.724736,8.673940,-5.072555,-7.117453,-4.786871,-4.700089,9.142659,6.198646,1.884976,-8.879487,-9.119274,-4.012344,3.547947,2.964000,-0.318253,-3.052260,0.413368,8.593270,-8.865562,-8.065117,-9.143431,-1.725700,-0.346533,-5.081331,-7.143299,4.960073,7.433553,3.798876,-7.753541,-2.190962,-5.701296,-2.696114,-4.176196,9.178486,-5.057016,0.970454,-5.674240,-2.157322,1.539514,-9.723893,-8.705983,4.735476,0.126122,-1.676434,9.530702,-7.823622,-2.562409,-4.924443,-1.564343,7.782577,2.464690,0.848429,-8.897908,-8.367198,-9.213051,-4.128497,3.796416,-7.142136,-9.704404,-9.558099,1.927903,4.605218,6.235169,5.620350,6.487581,-1.729425,9.672316,-2.611713,-3.201696,-2.389266,9.164615,0.438353,-9.004559,2.351161,-1.257461,-1.289114,-8.800448,3.936836,9.781420,-0.772836,4.384925,5.682842,-2.617313,1.695063,0.667963,-2.916445,-4.636679,8.372674,0.234007,7.876180,-5.895406,-0.832140,2.578133,-5.803451,-0.150284,0.257098,-7.908591,-4.773178,-9.401361,4.419183,5.691628,-6.818434,4.394178,-2.515544,-3.093756,-5.627153,-8.474916,7.466631,0.722486,-3.346165,-6.093533,2.773358,1.552771,-9.467194,3.645633,3.999869,9.749846,-0.808022,9.174522,2.178952,-8.397692,-5.017583,-4.606552,-8.207093,6.860360,7.265789,-2.381168,-1.757891,0.766531,1.929351,-9.927887,9.461296,-1.030816,-2.539962,5.292176,4.586239,-5.779692,-5.435703,-6.593148,-3.157472,2.251077,5.929499,-7.105820,6.782644,-5.018953,2.658990,9.855213,-9.220620,-4.657006,9.217170,4.266783,-8.428367,-4.595745,-4.647574,2.027718,5.902101,6.618654,9.968457,-8.609249,1.986061,5.819478,-3.597191,8.407882,6.576448,1.892871,8.862140,2.466103,-1.278586,-8.163919,-7.845483,1.124630,4.928431,1.440968,7.811831,1.963948,-6.002388,7.943881,-2.339668,-6.751092,-1.876190,-1.474770,-0.904482,2.421116,-5.552285,3.233209,-0.491611,-7.764137,3.942346,-2.431674,1.398815,8.261238,-0.498495,-6.396874,-9.244390,-6.574273,6.831715,-5.253838,4.112943,-4.908974,-3.711485,-7.587837,8.775728,-1.863797,-0.840763,0.422101,-2.130528,-2.847087,6.370397,7.428149,6.774783,-7.802402,0.393508,-5.301143,6.115692,-0.502055,-9.346886,-9.611854,3.666580,5.507866,7.299400,9.393864,7.721488,-4.937538,5.516564,-8.186305,-7.768394,2.374899,-3.565144,-0.980332,-9.331563,3.399566,8.288361,-0.261089,-9.819509,7.052797,-6.972778,7.663794,-5.127513,-9.916287,-3.676950,-1.781867,-0.678282,-5.705912,9.152710,-1.074131,1.117299,-0.015491,8.611439,8.303004,-3.637374,8.089947,6.758456,1.991277,-2.869412,0.041651,-3.974442,3.430333,4.327046,3.544682,-8.201003,8.546910,2.679604,8.446197,-2.268010,-2.971015,0.656303,-6.885466,7.478149,-9.426721,8.128122,-6.641722,2.396581,-1.659580,6.118480,3.880200,7.662919,5.445294,-6.334498,8.990043,1.478619,-6.813729,7.837199,3.137509,-0.225850,4.454913,-8.785049,6.756647,6.953616,-9.621597,-0.431719,0.640775,-6.750746,-8.756499,7.287711,-1.716916,-2.481406,4.072457,5.228293,-1.346981,-1.603706,4.756763,6.978713,-1.864263,7.260344,2.526840,-6.754013,6.044473,6.239832,1.570164,-5.563141,5.272714,-4.198299,-4.962163,5.589537,4.749557,-5.940518,-5.761509,-9.834421,0.637282,-2.032059,1.360278,8.753636,1.088803,-0.565400,7.029029,-2.924718,3.437868,3.929202,-3.546686,-0.851144,-3.947341,2.609610,-3.425575,9.923255,0.037645,-5.228796,-2.636071,9.575931,-5.263250,-7.509107,-5.441772,-9.678568,-0.680439,-2.976001,2.925198,-4.060182,5.995208,-3.030153,7.587512,7.297869,3.918633,7.450152,9.958683,-7.929023,3.798843,5.488249,6.755848,7.309067,0.938063,2.268065,4.273581,-7.284068,9.622174,-8.211147,-5.677490,2.301846,-5.681774,7.774811,3.001846,9.966176,0.324907,9.331196,7.101979,-8.884880,-4.358069,8.911940,3.752475,-9.472780,-3.190521,-6.481359,9.976914,3.084078,-3.155190,5.229558,-1.366955,-3.381960,-4.028857,-2.195654,6.329147,-2.270345,-1.545150,2.286176,-8.263683,-5.948406,-0.136264,4.109053,-6.509288,8.280525,-2.125960,2.250074,-3.096120,-7.491893,6.543984,-3.503770,1.586573,-6.562001,-6.755303,7.697078,6.864465,0.644195,-9.966265,1.853919,8.288323,-2.168739,-8.262529,-4.569659,9.322622,6.537863,-7.915996,7.683178,-7.336967,9.507015,0.325284,6.438832,1.511077,2.409590,-3.815050,-7.020431,0.057810,5.608157,-5.969064,-4.855309,-5.711981,-5.646286,6.291964,-7.791884,4.630910,-4.606275,-6.254402,-0.144593,6.588553,-4.096583,-5.961310,5.717030,1.721874,0.887906,0.555945,6.632762,8.893751,-0.100769,-8.496916,9.893415,-7.372823,-6.058625,8.228986,-3.561091,-7.263490,-1.810396,-7.694614,8.901235,-6.652710,5.780956,-6.471426,6.075860,1.586563,8.421580,-7.598044,9.905941,-4.686679,-8.722751,-1.090573,-9.709911,6.964818,-5.518918,9.500514,5.695477,-2.176857,9.288899,9.219776,3.732097,-4.098157,-2.043021,9.813022,6.372082,-1.722283,2.307032,2.834085,8.413224,4.862270,-1.952660,5.975952,-6.609225,-8.301795,1.431434,3.004835,-3.229621,6.501143,-5.868326,5.105838,-6.329651,7.478497,-6.315062,-0.246227,4.612574,9.540956,-4.741958,3.096158,1.934643,-3.423133,-7.001250,9.131583,9.867353,1.077900,5.848496,6.126264,-3.317179,9.020820,3.620578,0.434420,0.819247,-1.313657,5.944594,4.204239,-4.128907,4.602967,2.545177,5.740802,0.261119,-3.785624,0.520638,7.437458,6.083783,8.493999,-3.535296,6.421965,4.250143,2.914939,-1.568373,2.979795,-3.037060,3.654149,9.378894,-0.469446,4.339535,2.257379,-3.721839,3.233075,-8.951138,6.776296,0.409418,-3.030501,-6.148645,6.843381,-0.441135,0.731847,-1.894148,-6.281101,-9.675902,-1.932082,-5.650511,-0.006588,-2.451657,-1.038480,-9.120484,7.257898,-0.910101,7.526794,4.905639,9.763297,2.195437,-8.155116,9.145615,-9.880151,5.013068,-6.083618,-6.880316,2.649566,-0.902080,4.966841,5.788170,-4.197254,8.136796,-5.954628,-0.765612,-8.176458,8.543732,7.716845,-2.004348,-9.809544,5.838646,2.454788,0.864943,-6.268860,-4.510765,2.112680,8.124153,2.612351,0.494397,1.675914,-6.717270,1.785881,2.369058,-9.026055,-9.407871,1.833261,9.896215,-2.875910,1.348085,-5.166159,-0.877833,9.794931,6.915873,-2.499899,2.749946,3.979406,-0.979964,7.697080,9.938225,6.413254,-1.317407,6.494217,3.451899,-9.988097,7.225266,-4.204205,-7.967697,0.162545,-9.529940,-4.508323,8.759914,2.971418,1.332214,9.359360,9.144103,-8.736040,-7.182797,4.259452,2.424579,-7.991934,3.941945,7.213192,2.754796,9.651710,-2.697029,8.321863,5.941370,8.416992,1.831443,-5.373098,6.142849,-1.353673,-1.978381,5.366311,5.301125,-2.693438,-1.730868,3.853716,-4.349394,-7.909322,-3.908225,0.783734,-1.397088,-0.822597,0.296941,-5.033424,-5.229853,-5.387774,3.114611,-1.880751,-9.108519,3.613537,-3.417746,-6.572247,2.401735,-0.200984,-4.497858,-2.573080,-3.903754,-4.883687,0.842751,4.071324,1.655805,-7.189097,4.860199,9.063439,-5.894260,1.535121,8.113764,7.762431,-6.970114,2.470802,5.739309,5.965233,-9.028130,-1.055908,0.797227,3.692900,1.740029,9.342885,1.270175,-0.195843,2.063500,-8.217236,1.573545,1.884075,6.770456,-1.743196,-2.627001,4.611677,3.275166,-2.089821,2.731054,3.752472,-1.716316,4.343515,-7.101892,7.824528,5.545952,-8.288453,0.662842,-2.117999,-9.499970,-7.187217,6.928938,-2.766827,2.287784,7.450065,-5.796440,1.814259,8.549311,-1.100519,5.480210,7.903791,-4.891591,3.370396,7.176516,-6.631589,9.810007,1.333968,-6.549542,6.590198,-8.066819,-5.879916,-3.580153,8.549933,0.974775,5.250961,2.943882,0.847919,-6.176443,-8.704474,3.350532,-7.387965,0.399044,7.173369,1.097955,1.159428,5.622050,-7.260321,2.213612,2.830354,-3.866361,4.224337,0.116610,7.836666,-0.403454,7.540345,-6.630195,-9.890940,9.031997,-8.319374,-2.608818,4.622537,5.349722,3.106719,6.211403,9.168613,5.648150,-2.497257,-3.784789,6.075243,0.046560,-6.575994,-0.982647,3.055743,-3.159393,-7.862826,7.136412,-1.024276,9.236254,5.332084,-3.280354,-8.162833,-8.357480,-1.062568,-9.579939,9.414980,-8.809586,-4.616281,-0.103341,6.764465,9.354697,7.937863,7.015362,3.560126,-2.213782,3.167454,-6.905695,-4.662801,-6.414359,6.089849,-6.394599,-2.532206,-0.379308,3.604812,-1.686082,4.752055,-5.907529,-9.618025,-4.731289,1.978231,5.198350,7.890104,-1.773490,-5.032339,-0.449471,-6.547929,-4.026922,2.411138,9.533402,6.338360,1.172506,1.095321,9.088761,8.984395,5.167653,-4.360010,-5.102494,-6.904208,-4.176969,6.686259,-1.268429,2.467487,3.216421,4.328535,-0.775157,-4.134144,7.899276,5.938751,-7.577349,-4.730873,7.154177,-3.808283,-4.355466,4.216916,3.084936,9.997259,-3.282190,-7.908206,-4.543294,-2.309442,-1.708214,-1.921436,-6.378232,-9.365191,1.514560,-4.806059,-7.944325,-8.337936,-8.415706,2.396081,-7.753750,3.385289,8.082410,-5.442994,-0.725632,-2.639334,-7.443558,-6.344268,9.590281,9.253504,-2.311167,2.220098,-8.320485,2.966151,3.019281,-9.760435,-6.048242,-4.903658,5.031163,5.927681,8.743007,-0.150086,-0.554693,-8.571770,3.342905,-3.016653,-4.909901,-7.055866,6.080051,4.039639,-5.955336,0.420923,6.543605,9.089927,-9.871860,-0.475936,-2.447523,8.817043,-9.838368,-8.465965,8.315310,6.694253,6.664415,-8.913156,9.002338,1.770490,6.394910,-9.024986,3.604818,4.727314,-9.415962,2.825950,-5.944461,-8.091634,2.735667,2.695589,3.051309,-6.184411,-1.055355,-7.572704,-1.227187,-4.669949,-6.364783,-3.136603,-8.012709,7.915572,-4.694578,1.468173,-9.103260,9.041736,5.853372,-7.055020,9.243290,2.071565,-0.730451,1.676097,5.359591,-5.318088,1.743980,9.468119,4.236327,-0.575421,-6.167353,-2.493507,8.911451,-9.962690,-7.292753,-3.761309,8.085300,-9.463634,1.984238,-9.595368,6.420322,-5.639818,2.555693,-4.415143,-7.773762,-2.066833,-9.288500,0.901833,-2.195197,-0.029034,2.582424,-6.445281,-0.691039,-4.349288,1.964928,9.112946,9.131840,9.682223,4.886177,9.203429,-4.452095,-0.195608,2.117110,3.310417,3.644488,-2.216539,-3.226354,9.395704,7.994304,-8.646626,-2.462732,1.383706,2.358194,8.359116,-3.172421,-9.641992,-1.019240,-9.296805,0.623166,-6.683086,5.040790,7.512021,5.533153,0.287930,-1.101460,3.369779,8.201046,-4.084094,8.862179,7.081600,9.071085,9.581806,4.017359,5.495628,2.971170,3.462876,-9.454271,-2.062571,-5.015129,5.649749,1.644266,6.267144,9.299132,7.804117,5.694518,0.320624,-2.592009,6.619086,-4.796934,-2.293081,-9.409985,-6.033539,-0.080813,-5.527642,-9.744309,3.300083,4.177583,-0.849454,4.874923,6.544104,7.570016,3.159517,4.302306,7.392993,4.617258,2.952756,4.729125,-5.753286,-8.999876,-2.515076,-3.689448,-8.770906,7.161147,4.331453,-3.891081,6.681963,9.915817,-1.280957,4.956013,-4.846713,9.397065,-8.874602,9.795139,8.421093,-1.476325,7.079531,2.924310,-2.101259,-4.038562,7.264034,-0.165686,-9.087624,9.803302,3.229135,-9.136842,2.777181,6.903836,7.590596,8.873807,9.138450,-4.060245,-0.627898,-0.400462,-1.913651,-3.888964,-6.954082,6.644012,-3.480384,0.702322,9.802278,3.689248,1.123083,1.480275,-6.568296,7.158673,-1.927887,-6.229454,-1.930471,7.489201,1.176600,-6.541162,-7.214440,8.622162,7.618351,-2.421412,-5.946688,1.334966,9.440009,-1.622299,2.013508,0.712959,-3.511807,5.605048,-7.796323,0.147502,-0.246495,6.935984,0.844911,-3.999569,1.993802,-5.143605,-1.008913,-9.002714,-6.409406,9.693221,-8.336631,2.495330,-8.606594,1.566461,0.514296,3.733492,6.657516,-8.832634,8.488169,9.765440,-1.937436,-3.257271,9.151780,-7.592665,-5.034379,-5.073646,-3.017159,0.891721,-8.262602,0.084964,9.582741,5.501858,-5.830181,-7.937531,-3.681294,-2.434613,8.320570,-0.141969,2.935493,-5.375758,-9.282219,1.084566,-0.133235,-6.576869,1.513328,-2.057759,-5.756565,6.320496,7.417732,-3.878417,1.797423,-3.267873,3.466890,-3.628477,1.483521,-0.518347,9.133250,-0.722162,-4.182951,-8.692225,9.050658,8.487780,-1.810101,-5.390065,-6.728241,-1.016562,1.889568,-8.799856,6.842684,-9.263415,8.335707,-1.233216,-9.688354,-7.776531,3.504131,-2.834720,6.611220,-7.023021,9.201627,7.166277,3.249339,2.979650,6.760136,-6.257440,-1.982115,8.151220,9.550663,-1.151457,9.909617,6.908631,2.195021,7.282185,0.174145,4.092974,-4.313457,-5.596300,-8.524295,-6.425565,6.940947,-6.474877,4.151295,5.737316,2.773671,-9.569737,-3.382456,-4.325173,-1.334346,-8.290454,9.906048,-2.902009,-4.208299,-5.388542,-7.900068,-0.146322,2.060873,-2.862048,7.221992,9.183599,7.917502,3.332743,9.829816,-3.741159,8.998795,2.572615,-0.278265,-4.456227,-3.256702,9.373312,5.003869,-7.658098,-1.392654,-0.501303,-7.721541,-7.276501,7.666115,7.091956,0.878312,-4.097240,-3.942174,-5.262223,7.033285,-3.860861,9.855231,7.353311,1.343632,3.271379,-6.428285,8.490550,8.322443,-1.739684,5.215950,-4.398963,3.830252,2.275396,-0.896417,-3.060335,-5.533081,-7.517295,-1.770323,3.296390,9.004293,7.445295,-4.380441,8.058404,4.125576,-1.810149,8.802811,4.028280,-8.669105,5.528079,-7.047248,-0.627620,-4.084523,-7.181366,-2.122126,-0.431866,-9.879319,5.880839,8.012797,8.595932,3.606302,2.274809,-9.986167,1.832044,-0.595992,2.595694,6.497306,5.154241,-5.977263,-3.199789,2.709139,9.006126,2.359582,-9.602621,1.871168,9.619306,-4.033838,4.759874,3.311727,9.494919,6.591852,6.654038,-6.573993,-8.108298,-3.680651,-9.641927,-0.073078,-6.930903,-8.234953,-4.739356,-0.436407,-4.769295,-6.900771,2.094983,8.413253,8.646195,1.616477,7.172539,-7.486633,5.177025,-5.727960,-8.434365,4.786127,-0.428475,-0.718798,6.588377,-3.132846,1.727637,7.248968,7.570451,4.995168,-5.893663,3.976141,-6.715260,3.107987,-8.963228,2.421373,-2.912227,7.043209,2.165991,7.717568,-6.490879,-0.269947,6.714550,-6.631321,-8.033380,4.964127,4.132837,-4.121329,-0.045254,4.089814,-8.962582,-9.298799,0.821526,1.846171,2.314014,1.851814,0.536077,3.509591,2.312437,4.505774,0.560204,-7.882219,5.425210,-8.006214,0.136937,-8.469529,7.681999,-6.619228,3.086114,7.851092,8.275755,-6.436609,-7.484963,5.345373,-9.466807,-6.100459,3.380591,-9.389756,3.020449,6.621391,-0.923552,-5.431147,-9.246358,-1.197632,9.017440,-2.640181,-3.814518,5.489134,-8.846932,-7.901082,1.402644,-4.545546,-6.223860,2.091215,6.477943,-4.390956,-4.576635,7.297410,1.243057,-3.000058,3.304966,2.972600,-4.723029,1.773772,5.362167,4.291120,-8.909992,-1.421129,-6.452267,-3.806124,-8.789661,5.538467,-1.507557,0.736109,-1.238907,-9.589322,-8.493162,5.994249,-0.895717,3.081673,-5.497709,-1.271142,-8.121896,3.418891,-4.029141,-1.464135,-7.350213,1.999377,4.768286,7.229295,1.401797,0.913293,5.172956,-4.228628,5.971280,-4.295334,-9.677765,-4.037982,6.417551,3.369278,-7.580998,-7.875121,1.228263,5.100885,-5.850742,-6.091955,-2.900295,3.649677,-2.093041,6.268559,6.703608,3.951251,-2.008042,-8.407667,-7.607968,7.539388,4.257301,5.094215,7.827256,8.934291,9.991641,8.790370,-0.679903,-0.532471,-3.658420,-3.815133,6.296754,3.193904,-8.590628,6.663804,7.105422,8.831664,-0.613792,5.525818,2.853559,3.249312,-8.536855,-5.392272,2.627764,7.640642,-8.856558,8.785754,-5.177585,9.702068,-8.112224,6.147169,1.547933,-4.910821,2.947326,6.505212,9.659793,-0.051473,-6.075933,-3.957998,5.953623,7.770101,0.101373,1.429801,-3.480278,-9.027868,2.925091,-4.341931,-9.249401,-1.774958,9.992777,-2.567504,-1.484047,-7.238845,7.725726,-2.145545,3.396799,-4.893555,-9.944085,-2.201229,-8.042171,1.206191,-7.745498,-7.531741,-1.033141,-2.444464,0.929036,-5.910765,5.521129,-4.091033,5.769626,8.679361,-0.564107,-9.547487,0.526539,7.164310,1.778667,9.316241,3.001261,6.218690,-3.106469,4.174670,-1.657379,9.672041,-5.218682,3.260729,-4.384289,-3.025403,-1.177755,8.573841,4.699651,-9.489194,0.518908,-4.446157,7.017515,9.021662,-8.307742,3.549361,-9.531228,-4.780315,-1.634953,4.163475,1.344253,-7.409127,-2.216340,1.487952,-4.645260,-9.277648,-5.395959,-6.096328,-2.781660,9.050138,-6.181488,-9.405158,-0.662158,-9.964258,-0.970200,5.295292,1.129836,5.166472,-4.719123,-9.160384,-1.633205,-4.081907,0.834263,2.561509,-6.073760,-3.441716,7.458663,-3.717013,-9.410381,0.266665,-7.844931,-4.567540,-3.703711,8.802004,-6.241231,0.982089,-9.255838,0.069193,0.961099,-3.711444,-2.253001,-3.517059,3.243750,0.830210,3.389144,-9.223559,8.658692,-2.093932,-7.668361,-2.567992,9.731252,-3.400381,-2.774731,2.460675,-8.887900,2.336438,0.042755,-0.528901,-0.192055,-6.774593,-0.013736,7.330657,7.356153,8.136985,2.854286,-3.239475,-8.869749,1.774455,9.887103,-7.939589,-9.836049,-5.649517,7.170538,-2.100703,-4.205980,-4.233050,0.135956,-3.065411,5.177282,-1.464138,-1.996444,8.162560,6.948019,1.187154,2.233844,-9.077418,4.107991,1.472751,-3.003347,7.519623,-2.535118,8.061721,3.916795,-5.900766,-9.184057,-4.023335,-8.266021,5.823229,-1.250767,-3.839827,-3.437758,0.291388,5.451107,-7.991698,-0.834076,-1.092263,3.473779,-9.354090,5.962696,7.213882,9.328833,-8.791009,4.416028,-4.224161,-7.116799,-3.621642,1.966472,0.231462,-1.512981,-5.993186,4.124001,-8.546171,0.207155,6.754877,3.805083,-3.196452,-7.677523,-8.671369,-4.211825,3.470286,8.918508,2.982686,2.777283,0.786463,-1.820576,-3.634787,-5.766235,8.692998,3.492221,4.280475,3.751345,-9.751598,-9.141579,-4.028904,9.928020,-6.315376,2.580707,5.162451,-8.688768,-7.792878,7.748405,-8.580112,3.053280,0.398015,-1.780238,-5.862205,-4.727220,-4.099749,3.939467,4.678336,-5.057729,-2.950731,4.626002,9.577619,-3.273090,-0.422196,-5.470594,-0.132536,-9.067640,7.801042,-5.467591,3.698379,-9.302558,8.055757,-5.148483,-8.909181,-6.053552,-7.551148,-4.342924,3.740612,1.055036,-3.974164,-6.796719,-5.471706,-1.403434,-6.429992,9.956402,8.461145,7.751689,1.661856,0.301275,-2.289562,-0.887784,8.977518,-7.428386,-3.355244,6.400614,-0.889769,7.551622,-8.160113,-1.411005,-0.008400,-9.238282,0.647599,-0.986346,9.708375,-9.545364,-4.530186,-1.003540,2.927956,-9.336334,5.275906,8.321214,-4.896543,-2.319660,-8.208521,5.748793,-9.217513,1.463051,4.823732,-3.082593,4.762959,-6.010943,-6.202017,-4.603042,-7.976841,0.883532,-7.036504,9.122312,4.876988,8.587238,-1.116406,-7.146949,4.416510,-6.018252,9.877475,5.530397,3.230777,-8.461293,1.950029,3.833065,-8.036232,0.580432,1.315151,2.260477,-9.261289,1.299902,6.826589,1.994319,9.233547,1.258383,-8.076847,4.044357,-1.181180,5.962627,-5.024500,8.069976,2.373455,7.760526,2.666634,6.694001,-0.485981,-7.876528,-7.401740,-3.563347,6.805814,9.904327,-4.788302,9.618975,-0.356459,-9.488700,-0.084214,2.474377,-8.324096,-3.361610,7.677649,9.457134,-9.140667,3.265204,3.151859,-9.942760,3.752054,3.191497,8.249179,2.576062,4.266242,-3.131990,6.395611,-2.730609,2.077099,-1.541597,-2.185480,-9.106509,5.269066,-4.844130,3.141049,-8.457846,-0.774645,-3.519005,-8.228368,8.946582,-0.237307,4.198022,-9.673462,4.445669,6.944275,-5.230626,-9.853128,-0.384060,6.366278,-9.954947,-5.066829,3.244397,-3.855773,-8.177989,4.323204,2.756634,9.692891,-0.430755,-9.422669,5.756438,6.209451,7.448791,-5.527335,7.306109,-2.359713,-5.745708,-7.836318,2.819053,-1.351230,-3.123843,-4.826977,2.255235,-6.888317,8.758808,7.201806,-4.698950,-0.602249,-4.475838,-0.349191,-0.579180,-9.982607,3.592402,0.620692,3.072970,-4.534182,9.292682,5.011781,-8.664929,-8.985817,-5.326165,8.501881,-8.905138,9.055404,-7.922607,7.451285,-8.261809,-6.465287,-8.242552,3.149920,1.307837,7.950274,-8.446153,5.123903,3.121686,-6.256817,8.235994,-7.710670,4.261547,1.586151,7.042968,5.713783,-5.392396,1.506629,1.597728,-5.402878,-2.753170,4.650584,4.769180,-7.976955,2.994659,-9.357673,-6.923854,-0.975352,-7.837052,5.348197,-2.930278,-4.448719,-8.103091,-9.187446,-2.161417,-5.861377,-6.406576,4.850681,-0.542111,-5.559015,-6.430218,5.814594,-7.509583,-7.088322,9.351562,-8.744148,-2.214991,-7.696446,1.118243,-5.691399,9.747763,-5.561995,9.601488,5.167024,2.895670,0.731377,9.094807,-6.381844,-3.004312,-8.924227,3.550691,-9.333476,8.785092,-0.155607,3.914507,-2.953840,-8.574754,-8.945366,-3.935901,7.832449,-0.513678,2.081524,4.498373,5.983277,0.927085,8.436989,-6.723477,-1.244134,-4.939719,-6.081054,-0.783058,3.082971,-2.557242,-7.907262,6.530657,-8.382116,-7.269040,2.796034,-9.507532,3.015189,2.319159,-7.802264,-1.002095,6.742843,8.154015,-6.058906,7.083994,-7.217404,-0.399843,-4.907554,2.297977,2.245825,3.468437,5.084277,2.468258,3.412679,-2.547042,-2.278772,-0.634053,1.764363,-5.910589,7.977360,5.790125,3.590726,-9.394502,-7.549457,-5.852295,3.666366,-7.705639,3.272201,-3.672149,-9.557585,-6.546339,7.595349,9.999406,2.566039,6.968492,4.715149,-7.414759,-8.620215,-1.755545,-8.914977,-6.267544,-8.609604,0.161416,-5.333934,-8.816186,-1.805456,9.417504,-2.199411,-8.026670,-7.844153,-5.884017,7.974221,-3.648533,-3.680400,-4.860427,-2.418812,-5.285853,1.184703,-3.713041,9.442557,8.776055,-2.957449,-6.111793,5.068914,-9.524624,-2.691245,9.232307,5.160917,5.874828,-8.211741,4.870089,-9.624414,-4.907629,7.561915,9.060164,7.860889,-0.186650,3.244497,-2.859051,9.309724,2.701414,-5.275094,1.623256,-0.813916,3.519404,-4.289260,9.255080,-7.849515,4.466678,7.398679,1.794360,7.402496,-8.656168,-0.395144,7.338375,5.428200,2.134546,8.919850,2.852036,2.967065,-6.586287,5.081597,-0.496239,0.382325,8.864734,-3.812635,-6.915592,-3.758221,-1.378885,6.056562,7.166192,-4.073544,-8.535538,1.270657,-2.961997,-2.509583,2.106700,-2.399663,-8.892921,3.199932,-9.686771,-7.817001,7.587357,9.238756,5.793560,9.622492,4.701107,6.691569,1.912610,-7.536506,5.148776,-6.062514,-9.591342,-4.171814,1.189522,5.379691,2.065466,-5.561340,-7.972458,-2.344696,-1.598481,-1.913370,-0.480700,-4.126825,6.650640,5.028124,4.947149,3.587628,-1.321140,-7.836844,3.777704,-0.032600,8.484246,6.138866,-2.822347,5.485218,0.480973,1.625651,1.237137,6.891531,-7.085222,6.915462,-2.062943,3.117728,-0.093314,-4.728604,0.680546,-8.382025,1.270639,5.737464,-7.609626,6.687438,-3.117145,2.942926,-3.688033,-2.356720,8.886403,-7.743594,-6.894567,-3.830167,-4.664462,-3.275615,1.354025,-8.056480,-2.209775,2.822576,0.620603,-6.095028,5.601872,6.010824,-7.977420,-9.291955,-5.948076,-8.974310,-2.491457,8.114801,5.663471,9.547789,5.536553,-0.468450,0.839403,-9.692145,-9.292106,-8.770048,-9.242832,7.819511,-4.334095,-0.923674,-0.415942,8.947248,6.240992,4.020615,6.193997,-4.190299,2.755865,-1.886336,-6.730910,6.492882,-2.977600,-9.415654,8.289800,0.946553,9.306240,-7.678501,-4.006085,-2.421730,9.114691,8.272875,-3.116119,0.531039,-7.189969,-0.411929,-3.946674,9.512548,-9.371281,1.142208,0.774966,6.146441,-6.013068,-7.978834,2.024063,-0.798682,6.660840,2.848008,8.128615,2.999247,6.392640,-8.940984,8.935958,-2.413417,8.203465,1.676946,-8.150473,5.253652,7.971620,-3.792366,5.215417,7.976761,-2.585099,-8.578465,5.142237,8.749841,-1.956265,-2.062671,5.430455,4.800642,-3.492952,8.520052,4.799908,5.017593,-3.114660,1.340350,-5.470984,-8.492882,-8.240013,2.802739,-7.505934,-9.711810,-9.726852,-7.215251,3.540857,6.554313,7.290512,-5.014701,6.040583,1.062792,4.803584,6.595629,7.094554,-0.872053,5.178155,3.771301,-7.056508,-0.202254,-9.808543,-0.796525,-1.977102,1.049715,-3.082386,-8.642335,3.383918,-4.579744,-7.914852,-9.381404,6.878921,1.266583,-7.618427,8.592670,-9.170070,-3.643854,-3.055301,-7.453590,-2.982567,-3.037011,-0.351321,-2.953270,-5.706889,-9.999682,9.183512,-8.773294,-2.630748,2.915923,-3.425739,0.153144,-2.912980,5.354287,0.767255,1.803424,8.673567,-6.334860,-8.330913,0.500902,4.218348,5.673216,9.242457,-0.136052,-1.262643,-7.383012,-2.429224,8.748223,7.306869,9.974617,4.906493,-9.324681,7.437724,-6.075160,-5.071576,-8.923457,9.171557,-8.492044,-7.480955,-5.079853,-4.338765,0.796705,2.340038,6.659387,-2.502472,4.871560,8.480401,-9.014196,-5.271638,-2.926919,3.165261,2.616596,-2.603607,5.577463,-3.353464,9.987520,-4.195616,5.065126,-9.594600,6.303516,6.346522,-0.346279,-7.464958,7.031190,0.539448,2.482555,1.225165,0.997452,-7.289680,-0.491053,4.325621,6.287454,-4.335024,6.201111,2.628239,1.396174,1.040041,1.635145,9.114710,-3.267607,-3.499748,6.364450,-5.891905,-7.155289,7.187065,9.507390,-9.747326,-7.651864,6.429879,2.514156,-9.012769,-0.075932,-2.299784,-5.436241,-2.556134,-2.360509,-4.726493,-2.633567,4.198533,-2.734838,9.579562,5.858673,-4.592193,0.643713,8.733629,2.473944,3.222178,2.350963,6.923860,6.264642,-3.959526,2.849583,0.981498,-4.508138,-3.309132,4.808118,-5.677224,8.493543,5.748002,0.382603,-8.726216,-9.052650,-0.781043,7.316041,6.200328,5.439687,9.286251,1.138158,6.659526,2.755682,-2.031617,6.690004,6.917224,3.366036,0.789496,8.940733,8.217994,-6.488290,5.986309,-9.530948,-0.177661,-5.292146,-4.684073,9.158721,1.483447,6.063815,6.882420,7.450671,9.989475,6.886960,8.736863,-9.657889,7.539480,-6.294200,5.293624,9.512142,-6.153928,1.809814,3.894981,-5.729130,1.210401,-2.982583,1.783114,9.168826,0.530009,5.443046,6.247055,8.921521,-0.608565,5.490046,-9.427762,-8.278434,-1.409510,6.233977,-0.959616,6.143385,6.329890,-7.876220,6.191023,-3.681333,2.020155,4.182710,2.492129,8.481764,-4.553727,5.000641,2.439145,1.755932,3.527745,-8.701269,1.373381,5.775837,3.013085,3.723418,3.364129,4.984760,3.747599,1.251782,-1.405962,8.820263,5.627082,5.060482,-4.712673,3.443344,-1.880282,9.681450,9.717091,-5.390498,-8.261174,5.245227,5.011276,-2.663859,3.106780,-8.230500,-1.556625,-4.705644,-1.839710,9.088272,-1.023967,8.997035,-0.731117,-5.322640,0.466354,-6.137322,-7.124056,-7.987416,4.452091,3.071919,-2.319181,-6.756327,8.635516,2.893826,-6.849589,-0.742261,1.034514,7.273937,-7.110556,3.144091,2.201759,1.601885,8.271270,2.111855,8.928992,9.056489,-3.820405,-9.713271,-9.797584,-9.667218,-3.327247,7.075942,-7.912591,3.778490,3.189848,-1.490724,1.476545,-3.199456,1.201303,3.582211,-3.550123,7.532915,-8.253042,-1.243406,9.633881,7.355977,3.652272,2.887098,-9.376951,-5.431384,0.072438,-5.884937,8.286152,6.545952,-8.283607,2.142163,6.649227,-3.954802,-0.659120,-4.522022,7.442731,-5.267117,-4.114242,-8.238003,-4.478550,-1.048117,8.219177,-8.952824,-9.860294,-7.319106,-7.151012,6.633549,-1.261620,0.622422,2.910958,-1.845530,-9.929454,9.225043,-0.214530,8.205313,3.886818,-2.744976,-3.433245,2.648504,-1.564734,2.034968,6.334181,-1.650011,-5.145767,-9.551021,2.836636,-8.198727,0.616236,-6.125506,0.064567,7.642783,-8.652954,-2.469559,-0.478200,4.210131,9.315037,-8.237096,0.606384,-3.567519,-1.706328,3.258488,0.866613,5.827808,-1.420432,-6.344282,8.969405,-3.192355,6.765837,-8.522501,-8.079840,-6.006037,0.108037,-9.165023,6.652709,-0.297572,6.583491,2.678250,-5.111862,-4.727087,-6.238600,-8.065034,-8.162729,3.810649,8.854032,0.287499,0.379007,1.568132,-2.013204,-4.939156,-6.847314,-3.374020,-2.775947,-7.232496,-3.358931,8.544339,7.385187,3.485027,-7.949806,9.944327,-5.884502,8.118108,-6.469400,-7.594928,-3.664685,-3.154339,-2.612277,2.775414,-1.592136,5.039355,-4.702261,-2.692399,-1.852620,6.317144,-0.707034,0.755821,8.495668,0.280447,1.780716,1.670341,-6.494820,2.824091,-7.889034,8.818895,-4.008065,3.147002,-0.577089,5.218413,0.831721,3.149528,1.172405,6.649758,-0.105063,6.203376,-2.765727,2.362139,-6.777396,8.095459,9.788154,-2.320620,9.624009,-1.549830,8.562376,0.854941,-1.421591,-8.782572,5.784012,7.648023,-7.726861,2.796272,6.952591,3.023872,3.921005,-3.407187,-6.494961,5.467692,-2.880856,4.618683,4.615239,1.248143,7.151424,7.235148,2.381515,-3.190212,8.365465,-7.247959,9.523181,8.166184,9.735631,5.737732,-1.717247,4.092270,5.217769,-8.374670,5.987721,-3.141800,9.629366,9.604020,-2.369979,0.092214,-2.666093,-0.629349,7.401036,-3.579335,0.375723,-4.665638,-8.353105,5.616497,-2.931128,-5.862210,1.882323,6.011855,0.335575,7.098805,-5.311792,0.394884,-8.554309,-7.748227,8.236363,-0.455757,3.966376,-4.155535,2.144939,2.159980,0.177387,6.361165,-2.366257,-9.488869,-2.045174,-3.686200,-0.827207,1.810270,0.376144,-2.206241,-4.318472,-6.343428,-0.339462,-7.313558,-6.054145,0.448794,5.701667,-2.148065,9.184063,5.342464,-3.706915,1.696221,-9.530871,8.106234,-2.146446,-8.048400,0.711830,-3.406141,-9.374681,0.109834,-5.927750,-7.628664,9.600140,-3.844500,2.712088,-6.395945,8.347000,-6.804381,-4.667838,1.275828,-9.414099,-6.868393,-8.837819,7.240815,6.476257,8.823293,9.717085,7.421132,-9.131045,-2.288600,-5.546566,3.210421,-3.854191,4.097014,-5.080660,1.348550,-3.307431,-9.577658,2.635063,3.700740,-3.793529,-5.236629,8.020019,-7.204692,5.542134,2.884209,-0.795996,3.427491,7.187153,2.547618,-4.592873,-0.598143,-0.199022,7.817808,-6.818167,-3.416023,-4.649227,-6.029834,8.963178,2.050640,6.252482,-7.709625,-9.171700,-5.213576,-9.260195,5.638419,1.835234,8.022651,-2.409843,2.269156,-1.655431,5.654656,-1.260995,-1.306931,-8.728506,1.178977,-1.186738,0.345363,0.037890,-1.661450,-7.337252,-6.173690,6.527565,9.201643,1.100560,-2.418568,0.845670,-6.907152,-3.356064,6.751412,-0.742232,-8.627790,-6.146522,2.641736,-8.148481,4.213383,4.219648,-2.051045,6.584990,-5.429835,-6.385027,-7.103751,-6.041448,2.710003,4.002403,-4.475839,8.886497,7.312680,-7.249819,-0.201952,-3.481453,2.322056,0.289204,4.106594,-7.881226,7.001395,-4.328734,-4.802259,-8.312814,6.383923,-3.351739,-5.021056,6.417956,5.493078,-2.041011,-8.555214,3.642163,3.028845,2.770833,7.991291,-2.939313,-1.671384,7.640223,-4.191459,-5.777567,9.110862,5.189376,6.982905,2.969103,-5.656656,-7.133106,4.968938,2.000470,-9.878858,1.712289,-2.824114,9.966624,-0.398669,1.888543,-1.336171,7.756772,-1.135760,4.573493,8.207735,-6.153934,3.323895,-3.967332,-4.740591,1.289497,-4.202639,-3.515570,-1.106643,8.565132,-6.391220,7.247271,-7.927637,0.016713,7.128647,-6.143246,0.396292,8.628429,0.997941,5.708996,5.769874,2.111336,8.466540,-7.693798,6.699377,6.166394,-1.884137,-4.945794,4.657654,4.240906,4.591236,4.556629,-1.487359,0.053646,-8.179164,2.115998,1.516897,4.756288,-3.253797,-5.660565,7.332005,-3.867775,1.436893,-2.281621,-9.283868,1.504802,-1.574450,-8.986726,3.201906,-2.189613,8.124149,8.025354,-0.980712,6.399820,-5.270587,-1.712676,9.869726,3.023177,-6.618462,4.339867,1.876551,-4.656835,5.891131,-9.838385,-9.656950,-5.629403,-5.917987,-2.508312,-0.698860,-7.139103,9.163297,-0.446119,4.731205,7.256447,-4.611921,-5.221177,-5.062415,1.454050,1.763675,-9.535598,-8.511443,4.661961,6.528960,-6.077990,-7.497166,-0.135807,3.284552,-0.397192,2.706770,-1.582074,7.788947,1.967838,2.923183,0.829658,9.831125,-5.278810,7.217572,-6.895453,9.815916,-7.106234,9.088499,-3.629596,-5.968615,9.221360,-7.915976,5.911400,-4.556820,7.015278,7.474174,8.368350,5.140850,-7.954684,5.093507,6.731251,2.956302,-5.527892,-3.665360,-7.504524,-2.898899,-6.624202,3.154545,-8.415506,8.234095,-1.088786,-9.378409,5.933383,6.866178,-1.558294,-1.008493,-2.617371,-0.076380,6.661538,4.929086,5.335340,2.784225,-7.235287,5.534051,5.798916,5.566843,1.187722,1.395133,7.631487,-2.089283,2.120630,8.346249,4.092121,3.373829,-6.476462,-6.904849,-0.374107,-8.294239,-9.846124,8.341994,-8.385427,0.414745,-3.369778,-2.189728,-3.983289,-6.062742,6.548399,3.967951,2.452205,0.130978,3.278819,8.767283,-1.802072,-9.303680,2.839464,-6.442862,-6.406394,9.830019,-9.832516,-3.279689,-3.885095,-8.077459,-2.977844,-9.510125,-2.458298,-5.620120,4.585454,3.334430,1.187955,3.005168,7.999023,-1.070150,9.855155,3.361087,1.270030,-4.661750,-5.914158,1.482916,-4.521114,-9.814894,-3.924749,-9.432720,-2.813704,4.525211,-4.687843,-1.683462,-4.601170,8.240022,-7.776044,8.512419,6.922473,4.652185,-1.732752,-2.457940,5.177763,-9.167395,7.084709,5.191615,-3.617873,8.994166,9.430978,4.060016,-9.012705,-4.779263,8.239934,-0.571388,0.755941,-5.047600,0.361970,8.287037,1.519760,-3.066125,-5.613856,-9.395215,-6.673770,0.332519,9.468068,0.044540,-5.230758,-7.081139,0.883348,-0.909212,-5.922348,-3.693891,7.126387,-1.730075,5.524835,-0.531476,4.793656,7.503104,-9.465861,7.443612,9.528686,-6.598146,-7.851586,9.377351,1.751453,1.597374,-9.288042,7.070758,2.634403,-1.681087,-9.639680,-0.354446,8.682026,1.827724,5.883810,1.361164,9.277710,-8.667922,-5.302425,6.470318,2.075372,6.436666,2.723490,5.873995,7.508574,4.251650,-5.899087,7.240883,1.801933,-4.702665,3.349257,3.942196,6.260691,0.923193,8.431848,4.943572,6.687221,-8.492946,-9.547922,4.715174,3.485406,9.604808,-1.755584,9.110105,-1.061687,-2.888861,0.802013,-9.001524,7.795516,-3.596488,4.669395,5.788949,0.628022,0.789473,-0.017199,4.084904,2.094275,4.926418,2.868362,-0.330215,-3.499815,5.665496,-6.671185,-4.555567,2.021244,7.771526,2.247226,4.417931,-9.003873,-4.017598,2.988951,1.632703,-0.280595,4.043289,3.296458,9.263024,-3.056674,-6.158529,8.660951,2.088113,6.132953,9.705374,9.459709,2.451175,2.892647,-1.268798,2.793054,7.989823,5.916753,4.827622,-7.233851,-5.708554,-1.444355,-0.924123,-3.890873,-8.324298,-3.443443,-5.984005,9.991357,1.377703,6.831225,0.022578,4.049554,-8.008781,2.676951,-4.886590,0.684380,4.303002,4.382405,4.042597,5.226212,3.966354,2.208536,4.151804,-9.915496,4.415385,5.255632,-8.416608,6.451066,8.907803,2.059341,0.429955,-7.751239,-2.953802,-4.600319,0.052158,5.861941,6.896309,-4.872265,1.530650,3.968208,-8.150572,-4.916608,-6.662517,-2.910934,-9.568544,6.433591,-7.010638,-1.520838,4.030913,-2.154872,-0.697481,7.846429,-2.760300,1.704573,-4.289822,-5.624831,0.092623,-0.780650,-0.131328,9.870976,-0.591949,-5.503422,-7.514595,3.601498,8.874252,7.157845,6.953490,8.726026,-3.154255,-7.635875,-6.151906,-5.298743,9.248058,8.177417,5.698505,-8.432096,3.689954,-7.269503,-3.921568,2.164071,5.761670,8.777174,3.874069,-2.251678,6.534373,3.366586,7.773842,8.021728,-7.755273,-8.365346,3.679868,0.877496,-8.633771,2.743194,4.260969,-7.398993,6.489782,0.066779,7.787946,-4.862288,-5.592386,-4.043910,9.033889,-0.575493,-5.418366,1.292809,-9.903655,-7.691858,-7.507701,7.828957,-2.171442,-6.601819,5.200567,-4.291047,8.401608,-7.394053,-8.282822,6.573243,-8.538935,1.552351,8.086356,0.399249,8.082157,-1.620791,1.418127,8.592949,5.346926,1.994164,-1.784703,2.681369,-5.579676,1.930764,-3.206159,5.307159,2.989972,6.503423,0.546961,-2.295799,-9.136098,3.773687,-6.395713,1.376655,-4.584005,-3.844567,3.915666,5.241646,2.730303,-4.970679,7.320258,7.675316,5.970390,4.537304,2.915451,7.066403,-9.821497,0.192909,-4.334422,5.343566,3.979621,0.872417,8.734659,-4.252622,1.063067,0.329007,-0.381715,5.331330,8.687552,2.459743,-7.224802,5.920513,1.522151,2.016050,5.684570,-6.528361,6.512145,5.553711,-6.975128,1.383427,4.698133,4.578166,1.439867,8.983955,0.027139,3.566979,9.462341,5.297834,0.919161,-9.645524,0.829119,6.827941,-0.019690,7.727620,0.777271,2.737289,7.033896,-4.134744,8.245012,-9.122443,-2.861163,9.985950,-3.768671,-0.625549,0.601023,-9.751430,-8.909474,4.519544,4.692282,9.956944,-7.660145,6.274225,0.524521,-8.467571,5.165807,-4.410029,5.531961,8.931518,-2.528992,6.572885,1.810658,-4.177733,-3.277797,-8.882091,-7.549329,-4.176648,-0.168589,1.439347,4.041531,4.044334,-5.975925,0.409609,1.763071,4.289995,-3.082713,0.801583,-0.642396,9.074481,-5.130390,-9.640965,-0.206710,9.839023,-2.582020,-7.104392,-1.056142,-6.211322,4.157872,-2.226544,1.649787,-1.034842,6.286228,6.525370,4.909714,-1.784314,-1.210167,5.510830,2.886301,-4.486001,7.106961,2.865616,-4.188834,-0.486914,3.403017,-6.845450,-6.743589,3.487163,-9.948449,9.066570,8.668969,2.071654,6.524415,-6.482535,8.682267,-4.491397,-4.067045,5.421264,-7.834875,-2.075463,-9.978099,-6.668891,-1.616420,-1.827241,-1.432215,-5.239542,3.872478,2.278631,-4.430516,2.896575,-9.527605,-4.227504,-0.555927,4.506269,1.717035,-3.900892,-6.824324,-8.710841,-0.157703,-0.647802,9.883815,1.138201,-8.110811,6.928182,-0.868281,8.890032,-4.592752,6.922324,4.235375,3.465666,1.580459,-6.672997,-9.990827,-6.438263,-0.638166,7.829463,2.403163,-7.273844,-8.747299,7.349350,7.912425,6.506084,-2.236975,-6.509853,-2.152038,8.240445,9.139918,3.875681,-8.432883,2.899951,-2.075111,-2.254438,4.018128,-3.163271,-4.386526,-3.127088,-9.119451,-9.656773,7.342334,-1.300880,-0.508202,3.772238,1.370168,-2.581909,-1.138593,-5.966681,-5.570558,-3.208849,-8.826613,7.607774,-3.910703,-7.464222,-9.761971,-4.778286,2.522032,6.776744,-5.575719,1.729979,1.391058,0.227198,7.165505,3.197484,7.299487,8.999118,-1.703945,-1.835324,3.537333,9.216296,1.198018,7.778493,-2.583503,8.244354,7.338024,-8.060448,-0.242705,-1.115984,-3.972483,4.249463,0.786328,9.998626,-6.537454,1.070404,-7.960715,1.247049,-3.305905,-8.604176,3.881665,2.929555,-5.180657,1.629646,1.667963,0.084062,9.396041,6.876265,4.521275,-9.465198,2.484791,4.013211,-6.109160,7.445445,3.056766,4.230250,1.705966,4.177428,6.176093,-0.065578,-2.681144,-6.552292,4.031571,2.999159,-9.854088,-6.108987,2.164364,0.014252,-3.599164,-4.113043,-5.513928,-0.935153,-0.701676,4.338191,-7.329578,-6.274762,7.883467,1.668693,0.080510,-1.669412,-7.288138,2.014793,-1.858882,-0.019937,9.486823,6.887281,-1.303888,-5.037541,2.147535,-3.115702,7.991805,8.960152,5.710264,9.647427,0.036120,-8.767203,-5.704329,1.421819,-1.588028,0.038275,-8.504644,4.703861,-0.368358,9.262682,-3.527975,-1.651063,-6.209494,-7.831678,-9.902600,-0.730261,3.643350,8.787741,-1.004520,9.934408,-0.566208,0.694642,7.802823,-4.563070,-1.770832,1.920264,1.680707,-5.712415,9.188001,-4.668041,4.344561,3.924141,9.689968,-2.661353,1.514776,5.132202,8.851347,-3.928805,2.614840,-2.988724,-8.922521,-5.735149,6.241718,-2.539980,-7.367976,-1.336551,5.278264,-4.719362,9.389978,8.227408,-0.977743,-9.410278,2.345540,-6.825924,4.720777,-5.309557,1.644044,-9.124095,7.251508,3.553790,5.951934,4.859986,-4.410395,6.415505,8.040205,-5.447918,2.405649,8.451079,-3.155667,-4.700393,-0.085401,8.495379,6.142437,2.508512,-0.710581,-2.065546,-9.842665,5.350834,-5.841345,-2.659568,3.828007,6.596583,-1.587102,4.879947,7.999746,-0.438092,-0.397658,2.679918,3.167832,-6.080131,4.400004,2.413333,1.545598,-9.573000,-6.351874,7.674827,-0.197398,-3.598450,8.881855,9.507552,7.856973,-2.765980,8.531879,-5.162815,-8.912057,0.132691,8.963317,-1.179310,7.685896,-0.595441,6.451639,7.767655,0.628269,-8.316988,6.492788,9.459393,-2.150057,-9.479920,4.090100,-1.193951,9.590051,0.629489,1.496682,1.100828,2.441107,-9.308758,9.418749,-2.507855,0.212583,6.061033,-8.083294,-6.835035,8.196118,-8.152409,2.398286,-2.125063,-3.858285,3.016076,4.492928,-9.920707,1.788733,-8.368844,-4.942686,4.865423,1.884576,-7.681727,0.543464,-4.115401,4.359756,2.733364,-7.554603,-4.301112,4.383048,-8.424599,-1.652657,0.670238,8.607329,6.963025,-9.877022,7.386179,0.878160,5.797849,-7.965900,7.935695,6.813080,-7.832565,8.201875,-2.574969,3.945999,4.133727,-8.511187,2.192475,-6.518642,0.280789,7.788398,8.570997,5.287167,1.840106,-8.614885,5.767243,9.466019,1.736789,-8.355378,2.834897,-3.455356,-0.428346,-9.711447,-7.261576,-6.072284,0.941618,0.650530,-1.502441,-8.339323,-2.872093,6.327380,-4.149643,-8.115514,3.878938,2.624822,-2.740435,6.989514,-6.140157,-4.429008,9.519108,3.775731,-1.899937,1.233064,5.344003,-2.479842,-5.571365,3.286381,-6.131727,9.242519,5.442185,-7.814041,-5.928392,-1.515415,8.953744,-0.874639,3.784878,-6.042335,-3.968935,-0.450921,7.142381,9.590214,-2.632703,-1.104272,-5.559252,-5.381274,-1.467937,0.262436,9.057183,-3.564809,-3.989347,0.488112,-3.867387,4.163394,8.580555,-7.565385,-5.201401,-8.333373,-5.970563,5.350038,-6.889737,-5.906767,0.141665,-9.085601,6.588429,9.674194,3.926189,5.598206,-0.394020,-3.294081,7.439312,-8.725654,-8.125764,-2.537044,8.804012,-1.252683,-0.302048,9.386654,-4.616388,-4.441948,-0.197516,-9.147764,-5.869462,0.572356,-4.951121,-0.542715,-3.614713,-2.450692,7.180576,9.617767,-6.816400,3.615088,3.233798,-9.160230,-0.092330,5.877061,2.011089,-5.079020,-1.670395,-7.138726,2.882658,-5.154986,-6.136851,-5.616526,5.701954,-8.452805,9.382372,-5.769791,-2.426947,3.654810,4.275533,7.820131,-9.184769,-8.936072,3.826179,3.083195,9.695746,-7.325051,-1.517524,-7.274042,6.952138,-8.273041,-4.256459,3.613869,8.310971,4.765812,0.069339,6.574488,-3.365036,-3.258203,7.630395,-8.800555,1.885773,-9.697105,1.756879,-7.714177,4.773676,-6.970140,1.666451,7.024584,-8.571842,-5.668305,1.121053,5.170930,5.276665,-5.411241,6.006757,-7.588642,2.969159,0.550282,3.140229,4.986257,-9.619295,-8.703078,0.280900,-6.218648,-0.394810,-4.805364,3.232846,8.366417,4.358440,5.860448,-4.287087,-5.459555,-5.239244,-9.146412,9.130058,-9.020065,1.088779,8.624758,-9.886919,-4.882365,-0.772214,3.517095,-1.488251,5.874419,-7.048874,5.852776,-1.465413,-1.019711,4.108333,-7.976296,0.494532,-5.328500,5.250788,5.260171,4.586044,-3.943719,-6.061419,0.927445,-2.902927,0.922305,8.950241,5.988796,-2.354880,-5.836800,-7.574612,-7.130755,-5.981278,7.569813,-3.514671,9.551940,-9.229466,-1.260290,8.390235,-4.458466,-2.966337,-6.473120,-1.784274,6.024390,-8.797807,-4.292995,-0.682747,-0.625083,5.321749,-8.053933,-7.392486,0.186056,9.583544,-8.069154,-9.314957,-0.705058,-1.581896,-5.573754,-9.367892,8.992615,-5.299780,4.278714,-9.552433,1.865763,3.883156,5.236843,3.592641,3.808796,-9.140730,-5.184841,-4.614780,9.116979,2.038800,5.079382,4.639830,-1.772649,-1.256379,-9.981693,4.360423,-5.954896,7.039121,5.266690,-1.836877,6.376829,-7.589156,7.896446,-5.629543,2.792977,5.146449,2.569938,2.229405,-2.917904,-2.330879,-1.079893,-2.191937,-7.210217,-6.333600,-0.348281,-7.979133,-7.880707,5.883549,5.339739,-0.424590,-9.018245,8.594877,8.618104,2.151951,-3.733414,-5.337568,-2.052105,5.499003,4.986462,-6.042644,7.501492,2.586164,3.097592,2.979586,4.405603,8.804656,5.226488,0.428709,8.060946,-3.579160,-0.870699,-3.416168,0.749130,-2.437807,2.500088,4.516411,8.103968,-3.141775,8.198250,-2.114909,-6.112817,-1.327290,-2.483897,-4.150157,2.513164,-4.768267,3.803855,-9.291002,-7.182481,7.404796,7.473847,-1.769535,-4.997013,2.998465,7.616283,-1.868219,5.732153,8.440931,-8.236526,7.542263,8.735836,-5.477648,-4.892710,3.586376,7.818227,-5.733036,9.973786,5.313791,-0.800954,-9.427895,-2.155134,4.647863,0.024188,-8.626731,-2.365233,2.678493,6.243716,-2.882302,-3.357600,-1.937206,4.551719,-6.376046,-2.674290,-2.062124,-6.821687,-0.983047,7.498096,-5.907205,-5.480979,-5.430572,-1.107775,-7.235799,5.725575,0.712551,3.303605,0.047015,2.409432,9.655801,-2.926382,-4.195360,-6.445712,8.460675,-0.598553,8.776829,-8.141635,8.071436,0.991854,-1.958900,-1.057210,3.566482,-0.193544,-9.086595,-9.426572,0.228183,4.051254,-7.270575,-7.887381,1.242294,0.870244,0.946152,2.934132,2.862881,5.298399,1.015557,9.973804,1.444236,-8.943754,6.702218,8.488226,9.011821,-0.267847,0.938041,9.513423,8.576874,1.446817,4.050318,8.882475,8.340881,-8.403559,6.367869,1.428430,8.292651,-8.314735,6.410458,0.963358,1.501163,-6.778650,-1.452371,7.172648,-4.161036,4.983790,8.515415,-8.871248,6.097742,-1.808845,5.822431,9.694013,6.955988,4.396630,5.106477,2.692101,9.943542,2.484779,3.006642,7.658112,7.930224,4.318900,-1.118068,-5.140083,0.178307,-8.477314,-7.647616,8.305079,5.052970,-3.783339,-0.939054,6.835534,2.311962,0.228141,-0.592573,7.128015,6.707255,-8.797505,-6.639922,7.712318,6.301874,-7.220785,4.544660,8.567850,1.468823,-8.570668,8.736844,8.117926,-7.952533,-0.918558,4.055573,5.421090,-8.894868,-3.828133,-7.121489,-8.722448,2.224664,0.454631,6.060520,-5.270052,4.953053,-9.078222,-2.128938,1.351493,-6.758071,8.162430,3.713745,4.983397,7.894235,7.246669,1.029465,8.312442,-0.717236,-2.228272,-9.890218,-5.309691,3.424953,-4.564767,-0.189826,-4.588654,2.969092,7.584369,-3.228128,8.478103,-5.575616,3.222990,-0.434687,4.430964,-5.933777,-0.519695,-2.583890,-5.736289,7.544577,8.827400,-6.739256,7.760532,-6.135651,6.213759,1.026499,-7.002428,6.277255,2.515542,-4.196454,-7.667449,-9.238310,7.962228,-3.112802,-1.887894,4.115964,0.649340,-3.209244,8.404016,5.381898,7.032999,2.368650,2.603216,-4.122241,6.819744,1.115071,8.209787,-9.163543,-6.960988,-1.224668,3.934393,-2.830212,8.686240,7.748786,2.604394,8.755231,5.172539,-0.008858,2.479188,1.776244,-8.509519,7.458166,2.501937,-6.590595,-7.855381,-6.674890,-9.180769,-5.071008,4.765805,6.856723,7.068374,-7.199558,2.331389,0.734049,4.900825,6.781127,5.189305,7.003876,5.305456,-2.570920,-0.685362,4.646958,5.649196,-2.614994,8.639078,-4.350540,6.894614,3.094506,1.471319,1.366556,9.500344,-2.290492,2.194097,0.696247,-0.945513,-9.372329,6.858003,8.834035,-2.748395,1.153083,9.428701,-2.807852,-1.232307,-0.292598,-6.961913,-7.361269,-5.992299,-8.812100,-1.539070,-0.453270,8.012009,6.621908,-3.734540,0.526846,7.587285,-8.901802,-1.415822,3.720392,-9.013526,9.738048,2.528943,0.556328,-0.314419,-9.639210,3.223559,8.365291,4.346074,0.022220,-9.745674,-7.847600,-3.979731,-2.859994,8.916975,1.310810,0.544554,-2.621187,9.258811,9.065178,2.156788,-7.260428,-2.264959,7.009939,4.501483,-9.088736,-3.723331,2.904144,5.287229,1.079585,9.630455,6.847917,4.715985,7.085712,6.648130,8.612251,-9.459199,4.272264,4.049177,8.729668,-7.207469,-2.613624,-4.601421,6.531662,-3.527595,3.342714,2.659662,-8.713972,-8.894928,3.942367,-4.567171,1.807727,6.655180,-9.224776,3.179657,2.395547,6.196143,-1.484527,1.734184,1.229291,2.819129,3.406103,5.792607,6.893764,0.184018,9.341511,3.500210,5.676647,-5.948585,-3.420027,5.071342,8.085818,3.621194,-0.591470,5.943495,-3.267514,-3.573887,5.645819,-8.798546,-2.359938,-4.285303,2.306033,-0.320928,-9.067653,-1.604157,-0.745496,-2.216287,-8.032684,-6.964529,-7.887066,9.507183,-8.542972,-6.226223,2.459943,-2.904432,-6.483280,-4.139312,6.423606,-5.424604,6.115992,-5.027331,-8.244193,0.138362,-5.880746,-2.943641,7.749655,-6.437861,3.398308,6.610208,4.518989,-1.279297,-1.729268,0.040421,3.326081,8.824275,3.300304,7.378750,-9.129375,-4.445047,-9.945018,9.791289,-1.359051,9.571179,-4.555431,2.368864,-7.742409,-0.315895,-1.546014,-6.319130,2.044124,-6.594964,3.442679,0.718655,-0.821116,2.423049,-4.070135,-1.586755,-6.731027,-4.745333,-4.699875,-6.015976,-8.041057,-8.654651,-3.712660,-9.166171,-9.375747,-4.532022,-4.345604,-2.735855,-2.999447,2.404572,-3.936257,5.494135,1.304349,-1.874813,9.421743,6.325347,6.526342,-5.076392,-0.765910,1.506744,2.665596,4.430711,6.855587,-1.503314,4.972070,-9.267391,4.748154,-7.425898,-9.497666,3.849600,2.614385,2.444562,-9.460170,-3.677576,-3.986702,0.099495,-1.488437,-8.646419,-6.948273,3.665035,-2.621949,-3.002561,6.631614,8.982602,1.077137,-5.376779,9.269859,3.247647,3.039390,-6.927018,9.953944,-1.407139,-8.776519,-4.110823,5.273228,-4.057212,7.790892,-7.378775,6.147851,-5.816621,-5.339316,7.932894,-2.755014,0.707611,7.074527,-0.192365,8.228245,-7.091503,1.821855,0.213200,-7.818465,-7.510976,-4.144826,-6.414843,-2.747312,-8.846861,9.641500,-6.414314,-0.402875,-9.972424,-4.464306,-3.841294,5.034370,6.426772,6.396110,8.494426,8.871331,-4.283478,-4.189808,7.470741,7.953805,1.067241,-9.903908,8.468145,5.068693,-7.859667,-4.746794,-1.733740,7.349737,-9.224921,-7.992109,-6.293001,4.109972,5.485945,8.242454,6.870951,-2.247118,-4.785200,-6.057915,9.530789,6.591813,6.281317,-5.369452,2.168660,-7.999697,3.757713,0.886848,-1.157285,-7.662883,3.927292,-0.967835,-1.231883,8.888570,8.589186,-7.681426,-9.525568,-0.228146,9.640143,4.366691,-4.347156,-9.884979,-0.201056,9.047696,6.344216,-1.411634,-1.195052,4.450179,1.351256,3.353959,-8.936143,4.831376,8.086853,3.559120,-9.908606,8.760613,-5.074039,-2.415486,9.630289,6.848150,3.601327,9.703922,-8.397310,6.616275,-5.895573,6.363747,-5.088688,9.891166,-9.317402,6.797328,3.287642,-0.444577,-7.877271,-0.663220,-0.590861,-3.081156,7.373647,4.915213,-3.093245,3.438949,7.937195,-4.266160,9.112634,2.537690,-0.374478,-6.909794,2.774755,4.204518,-4.031690,-0.659362,7.503514,-3.749824,-6.271319,-0.600686,-0.440750,8.512257,-5.018328,-9.945410,5.757057,-6.546585,-1.944966,0.822110,5.008716,9.374742,-1.550617,-0.358678,8.084559,-0.021842,4.300422,-3.456803,-2.039536,6.445605,9.515787,-4.869325,-3.157358,-1.145290,-3.354200,-2.617710,-0.300970,2.084675,7.600714,-1.977277,-2.156006,2.543348,-0.197975,-8.823526,5.504808,4.062111,0.575607,-3.512178,-9.804872,-0.672511,-9.590777,-6.628798,-8.853263,-2.106364,-8.056076,-7.791430,8.567143,-8.575451,-6.260574,0.546729,-7.961286,-9.292644,-9.788815,2.953232,-5.664873,0.123141,5.237264,0.997862,5.025514,5.396883,1.296744,2.031652,8.265135,-6.819998,-5.034705,-8.858147,-3.197743,-1.564313,6.156135,-9.940235,0.558424,-6.910575,9.494624,-1.753873,9.043370,-5.696747,-1.316613,-3.666176,0.957843,5.670997,-4.958281,9.847709,-6.180390,7.832574,9.704193,2.453947,-1.811327,3.273811,-6.869212,-2.662005,-1.342231,-2.467344,-3.928534,-0.868363,3.647162,3.289287,0.733331,-1.013500,-2.523442,9.073366,0.014566,-7.031213,5.284256,-1.801839,-4.727543,0.057164,1.580176,5.349076,-0.149481,-2.037142,5.447033,0.411948,-0.373073,-4.644091,-6.617282,-1.378383,4.781240,0.501839,1.816320,-2.462588,-4.667127,-8.010712,2.567608,-5.493406,0.556473,3.564408,-4.753495,-4.718774,-8.367309,-3.084515,-9.152954,6.591939,1.977799,-1.215130,-4.937753,-1.494952,5.223388,-2.050482,-8.854760,-6.772546,2.379158,-2.092897,2.645650,-6.682862,-0.560060,-0.350446,-5.486005,-9.018657,-0.888245,-9.275122,2.887329,3.358295,5.328066,0.083336,-8.361540,5.949438,0.418043,-2.729060,-4.173231,-5.872194,1.062094,-0.866433,-2.512828,0.850411,2.787290,7.824734,1.777109,2.898485,5.192009,-1.909618,7.952372,7.042065,-7.798627,3.564583,9.491962,4.888215,-8.204647,-5.749420,-6.068309,2.650677,5.987216,-9.610299,1.032610,2.401235,-5.340710,5.991711,5.645214,-1.988713,-5.695318,2.858629,7.331348,-9.086079,-3.765691,7.466868,-0.413263,-9.619834,5.505827,-0.309568,5.078988,7.054228,-7.271325,5.369317,-3.751367,5.915234,7.438643,-1.049581,6.270972,-8.755574,6.177462,-7.292706,-9.572459,3.307475,9.455071,-4.919591,7.973535,-7.024440,-2.348352,7.364009,4.716238,9.679249,4.759271,0.753932,-8.566574,-8.188532,1.056962,-1.332740,-0.210321,-6.375729,5.673978,-1.499345,-6.770761,-3.410255,-1.469349,3.439151,-4.776625,-3.903426,-2.534670,-8.127760,2.433229,-3.042993,2.935791,-1.975321,-8.687498,0.614928,7.563334,-1.680651,-3.307414,6.650911,3.420469,-0.495768,9.621411,0.679126,4.752014,2.417034,4.329805,8.818839,-2.088853,-0.722429,-3.938576,-4.128982,2.645823,-7.758898,-8.702860,-7.243158,-5.270335,8.896848,1.948173,-2.049016,9.399649,4.992142,3.471522,3.216636,-7.908525,2.536128,-0.213467,-8.515446,-4.455681,8.287694,-1.712419,-4.799745,6.112398,9.331830,3.423416,2.558276,6.621829,7.981655,6.279194,-8.070377,-3.745049,1.611409,3.162450,-8.095021,-7.397321,-9.013391,7.612529,5.998354,1.466627,9.827663,-4.868661,5.537663,4.877335,5.146790,7.667109,-9.019314,1.986270,-6.127111,6.527495,-1.811635,6.332778,9.478849,-2.900208,2.284816,6.752963,-3.916835,8.956937,9.073732,-5.158804,5.425964,-8.934289,9.850483,0.785534,-5.764553,-2.109853,-5.483635,-7.508312,-5.690110,7.199585,-1.646672,-9.277648,-6.496816,-1.564163,-5.448043,-1.870564,-1.441924,1.437292,-4.457942,-4.207551,8.231910,-4.579244,-9.773570,2.454169,4.382847,-0.670452,2.281049,-9.995075,-5.778526,3.328485,2.955699,-5.913143,-4.889753,3.755297,3.150466,-3.596087,-6.174537,-0.909739,0.080336,5.034848,-8.702060,-8.854105,-8.452866,-5.090219,6.807409,4.030779,6.588975,-9.493118,9.928779,4.862865,0.696122,0.522051,-1.310572,-3.086740,-5.565461,-8.973093,1.769140,-9.241889,4.096411,-6.968435,1.291457,6.590375,-9.680840,-2.529663,5.535093,-6.855099,9.975136,-6.646168,3.774427,5.593597,-9.234872,8.916641,-2.594672,0.773260,-4.463934,-5.754822,7.456108,-1.615908,-1.569413,0.383432,-0.531422,-9.769539,3.649519,2.791208,-5.452461,-3.372537,-0.433681,-7.655408,-4.862959,-6.430196,-6.962709,-8.787994,-8.167915,9.273232,9.513287,-0.446737,-3.607863,-9.557718,8.516934,-0.404285,-1.286285,-8.556742,-9.733727,-9.474107,-4.823813,5.601886,9.729078,-0.289025,5.416479,-9.158311], dtype = "float64")#candidate|6357|(11088,)|const|float64
var_6358 = relay.var("var_6358", dtype = "float32", shape = (1, 63))#candidate|6358|(1, 63)|var|float32
call_6356 = relay.TupleGetItem(func_4854_call(relay.reshape(const_6357.astype('float64'), [1008, 11]), relay.reshape(const_6357.astype('float64'), [1008, 11]), relay.reshape(var_6358.astype('float32'), [63,]), ), 0)
call_6359 = relay.TupleGetItem(func_4858_call(relay.reshape(const_6357.astype('float64'), [1008, 11]), relay.reshape(const_6357.astype('float64'), [1008, 11]), relay.reshape(var_6358.astype('float32'), [63,]), ), 0)
func_6159_call = mod.get_global_var('func_6159')
func_6161_call = mutated_mod.get_global_var('func_6161')
const_6363 = relay.const([[7,-10,6,-4,10,9,5,7,5,-9,5,-8,-7,-7,-3,2,-7,-4,2,5,8,-4,-8,-8,2,7,-7,10,-4,-2,8,-8,8,7,10,4,9,-2,-10,-9,10,-8,3,-4,6,3,-9,10,-2,7,-2,1,10,-8,6,3,-3,4,10,2,-3,2,5,1,-9,-9,-1,2,-4,2,-8,-5,-7,-7,-6,-4,4,-10,8,-6,10,-9,6,2,2,1,8,-10,-4,3,8,8,5,-2,-1,-3,-6,4,6,3,10,7,-9,-3,6,2,5,-7,-9,-5,-7,-5,-3,-4,-5,-6,-10,-4,-1,-1,-5,2,-2,2,6,-6,-8,-6,10,-7,-7,-3,-7,6,-4,-5,-10,10,-4,7,-10,4,4,8,-10,-10,-9,5,-9,-1,8,3,5,-1,-6,2,1,-5,-4,10,7,10,-2,9,6,6,10,-3,5,-5,-4,10,-10,2,-5,7,-10,-5,2,6,5,-3,5,9,1,2,10,-3,-6,-6,5,2,-10,10,10,1,9,-10,9,-6,-3,6,-10,-6,1,-7,5,4,6,-9,-9,4,2,6,-5,-4,1,-4,8,-7,-1,-9,-6,4,-4,-8,1,5,-8,-7,-1,3,-2,3,8,10,8,8,2,-4,4,1,6,1,7,6,10,10,-8,-1,-6,-6,2,-8,5,-1,6,6,-8,-5,-6,2,10,-7,8,-5,-1,-9,-6,-9,9,-1,2,4,-4,-2,1,6,8,2,-3,10,-7,-9,6,-5,8,9,-3,7,-3,8,4,5,-9,-10,3,8,-1,-4,-5,-3,7,2,-6,-7,-9,-4,1,9,-8,2,-10,-3,7,9,8,-6,3,-5,6,-7,9,10,-3,-9,9,-10,2,-10,-3,-1,-1,4,-5,-3,2,-6,3,8,4,-5,-9,-1,-10,-9,2,-4,7,6,-8,2,1,1,-3,-10,-6,-1,-3,5,-5,-8,6,-7,1,-4,-2,-1,4,7,-10,-6,5,3,-10,-3,5,-2,-5,-6,2,-5,6,-7,7,8,4,-6,-1,-9,9,6,3,-9,-6,-3,4,-3,6,-3,-8,10,6,3,5,10,1,-2,-5,3,3,-10,-7,-9,6,6,4,-8,-2,-10,10,-4,8,-7,4,-4,7,-6,-10,-7,-9,-2,9,-7,-8,1,-9,-9,9,-9,6,-4,1,9,-6,-8,9,10,-8,10,-4,-6,-4,-9,10,9,-3,-1,2,-6,6,3,-3,-3,8,9,-2,4,-9,-10,10,7,2,-8,9,3,7,9,9,-3,5,8,6,-3,6,5,3,-1,-1,-7,2,-6,-6,-1,6,1,-5,-9,4,7,5,5,-6,-3,5,7,-10,8,-7,2,-2,-5,3,-7,5,-6,-6,8,-7,-10,1,-10,10,10,9,-1,4,-8]], dtype = "uint64")#candidate|6363|(1, 528)|const|uint64
call_6362 = relay.TupleGetItem(func_6159_call(relay.reshape(const_6363.astype('uint64'), [528,])), 3)
call_6364 = relay.TupleGetItem(func_6161_call(relay.reshape(const_6363.astype('uint64'), [528,])), 3)
uop_6391 = relay.sigmoid(bop_6330.astype('float64')) # shape=(10, 2, 9)
uop_6403 = relay.exp(bop_6330.astype('float32')) # shape=(10, 2, 9)
uop_6407 = relay.atanh(uop_6403.astype('float64')) # shape=(10, 2, 9)
var_6418 = relay.var("var_6418", dtype = "float64", shape = (10, 2, 9))#candidate|6418|(10, 2, 9)|var|float64
bop_6419 = relay.not_equal(uop_6407.astype('bool'), relay.reshape(var_6418.astype('bool'), relay.shape_of(uop_6407))) # shape=(10, 2, 9)
func_109_call = mod.get_global_var('func_109')
func_112_call = mutated_mod.get_global_var('func_112')
call_6425 = relay.TupleGetItem(func_109_call(relay.reshape(var_6338.astype('float32'), [5, 12, 13])), 0)
call_6426 = relay.TupleGetItem(func_112_call(relay.reshape(var_6338.astype('float32'), [5, 12, 13])), 0)
output = relay.Tuple([call_6336,var_6337,var_6338,call_6356,const_6357,var_6358,call_6362,const_6363,uop_6391,bop_6419,call_6425,])
output2 = relay.Tuple([call_6339,var_6337,var_6338,call_6359,const_6357,var_6358,call_6364,const_6363,uop_6391,bop_6419,call_6426,])
func_6428 = relay.Function([var_6329,var_6337,var_6338,var_6358,var_6418,], output)
mod['func_6428'] = func_6428
mod = relay.transform.InferType()(mod)
var_6429 = relay.var("var_6429", dtype = "float64", shape = (10, 2, 9))#candidate|6429|(10, 2, 9)|var|float64
var_6430 = relay.var("var_6430", dtype = "float32", shape = (1080,))#candidate|6430|(1080,)|var|float32
var_6431 = relay.var("var_6431", dtype = "float32", shape = (780,))#candidate|6431|(780,)|var|float32
var_6432 = relay.var("var_6432", dtype = "float32", shape = (1, 63))#candidate|6432|(1, 63)|var|float32
var_6433 = relay.var("var_6433", dtype = "float64", shape = (10, 2, 9))#candidate|6433|(10, 2, 9)|var|float64
output = func_6428(var_6429,var_6430,var_6431,var_6432,var_6433,)
func_6434 = relay.Function([var_6429,var_6430,var_6431,var_6432,var_6433,], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_6438 = func_4383_call()
call_6439 = func_4383_call()
func_4049_call = mod.get_global_var('func_4049')
func_4053_call = mutated_mod.get_global_var('func_4053')
const_6441 = relay.const([-2,-2,-8,1,4,-1,-4,-2,-1,7,1,-10,9,-1,6,9,-4,-8,-9,-4,6,-5,2,-1,8,-8,9,-6,-9,-7,2,-3,-9,9,-10,1,10,6,3,6,5,-8,4,-3,10,-10,-8,-1,5,-4,-6,-3,-3,8,-8,9,10,8,-3,9,-4,8,-3,8,-10,3,9,2,-6,-10,-7,-8,6,3,8,3,-2,-4,9,-2,-6,6,-4,-9,-9,3,-8,2,-8,1,6,7,-4,-4,-3,-5,5,4,8,-8,-2,2,3,-2,-9,-6,-9,-5,-4,-10,-7,-3,4,2,3,-8,4,-5,-2,-9,-3,5,7,-9,-1,7,-3,2,10,-9,5,-7,7,-7,10,1,-2,7,8,-10,4,9,-10,5,7,2,-3,-3,5,-1,-6,10,9,-7,3,8,-9,-3,7,8,3,-6,-2,-7,10,2,10,-6,-9,-8,2,-10,-2,-9,-2,-5,-8,-9,1,-7,-4,7,-1,7,-5,4,2,10,8,4,-6,-5,1,5,2,3,1,3,2,-5,4,6,-7,1,6,7,6,6,-10,9,5,9,1,-1,2,10,7,-4,-2,10,-2,-10,1,-8,-9,2,-9,1,4,3,-7,-6,10,-9,-6,-10,7,9,-8,-8,3,2,-2,-2,-4,-6,7,-5,3,9,4,10,-9,-1,7,3,-1,2,7,-4,8,-2,-4,-3,-3,-6,10,-10,6,-6,-3,3,-4,-1,-2,2,7,-6,-4,-7,9,-6,9,10,1,8,-6,10,-7,-3,-8,-10,10,5,5,3,-5,-5,-8,10,2,3,-9,10,-8,7,-7,-2,-3,2,-8,3,5,8,4,3,3,6,3,-10,-8,-6,3,3,-4,5,-4,-7,-6,-2,-2,8,3,9,-9,-6,7,-3,9,-8,5,-6,10,7,6,-6,-6,-6,-8,6,6,-6,5,5,7,8,-7,-8,6,2,-5,-2,3,-2,5,-8,-2,-3,-4,-3,-2,-3,-5,-5,-6,-7,-7,4,9,9,-3,-6,-9,-4,-7,-4,-7,-9,7,5,3,6,3,8,-5,-7,-3,-3,-1,-7,-3,-1,-7,-3,4,-10,2,-5,-4,-6,-9,7,-5,4,7,-8,10,1,8,4,3,-9,7,-9,-6,-2,-9,4,-9,-2,10,7,9,-9,-1,3,6,9,5,-6,1,5,-7,6,9,-2,-9,-1,6,-7,5,-1,1,6,-5,6,-2,-8,4,-5,-1,4,-8,8,4,-1,5,-2,3,4,-2,-8,3,-3,9,2,7,-9,10,8,-5,3,-4,-8,-2,-5,-3,9,8,-5,-10,-8,-2,1,-6,-5,10,3,-2,-1,3,1,8,6,-1,-4,9,-9,8,-2,-1,-5,7,-4,-9,5,10,10,5,-3,-6,-7,-10,-5,-8,-3,5,9,8,-3,6,-10,6,-4,7,-7,-6,-9,3,-5,2,10,-7,-1,2,-3,4,7,-7,-10,8,-9,-4,-3,2,-9,-7,2,-10,1,7,-2,-1,-2,10,5,9,-6,-10,-1,-8,-7,-3,-1,3,7,-9,-2,10,1,6,-9,9,2,-6,-4,-5,-9,9,1,3,-4,7,-3,10,8,-9,2,2,-7,-7,3,1,2,2,-4,1,7,3,-6,3,10,-9,-10,-6,-1,10,-7,-8,3,-2,6,4,-1,3,-4,9,8,6,-3,7,-7,10,9,3,-1,-8,8,10,3,-9,2,8,-8,-10,-9,6,5,10,-5,6,9,3,-8,-1,6,7,-7,-10,1,7,8,-4,9,-8,8,-2,-8,8,-8,8,-8,4,9,-2,3,-10,1,5,-9,-6,-7,-6,3,-10,5,-5,-2,-10,-2,-3,10,-7,7,-2,-4,-3,-9,5,-7,1,4,6,-4,9,9,-2,-5,-1,-2,1,3,7,7,4,-9,-5,-10,1,7,1,-3,-4,-3,-3,10,-10,-9,7,-9,9,3,-10,-7,8,-2,10,3,6,-3,-10,4,-7,7,7,2,-5,-10,-1,-8,2,9,5,-8,-9,-9,-3,9,6,-2,3,10,3,4,8,-1,2,-2,4,-8,-2,-10,-2,5,-6,-2,2,-8,6,7,4,4,-9,-2,8,-4,7,-5,4,8,6,-2,3,-3,3,-3,-1,-2,-5,3,-4,-4,-4,1,-9,-9,-10,5,-4,2,-10,4,-4,-2,-1,-2,4,6,-7,6,-6,10,10,9,6,1,10,7,-4,-3,-6,1,-3,9,-6,5,-4,7,-4,7,-2,6,-4,6,-4,2,-5,1,10,9,7,-7,3,-4,-4,7,-7,-8,7,-8,4,-10,-3,-1,1,10,-8,-6,2,-7,10,4,6,8,-7,-4,-6,-4,-5,3,-6,3,-9,4,10,-10,7,10,6,-7,-4,-8,7,-1,-6,8,7,-6,4,-10,3,-7,-3,-4,-4,-6,3,-1,3,-3,-8,10,4,-4,8,-5,3,3,-8,7,-9,-10,-6,-5,5,-9,-10,-8,7,-5,7,7,-1,-8,-7,-8,-9,-1,9,3,3,-7,-10,-7,9,5,-3,8,3,10,-2,-8,-9,3,4,-2,-9,-2,-3,8,-3,8,5,10,3,-10,10,-3,7,-7,-3,10,5,10,2,-10,3,1,-5,8,10,-10,-5,1,10,-5,-6,-4,8,1,-6,-5,10,-6,6,4,1,-8,8,10,-7,2,3,-6,-3,-1,9,-5,3,-5,-7,-4,-4,7,-2,-9,-4,-2,-8,10,-7,-8,8,-5,-7,9,-1,2,-7,-5,-6,8,7,8,10,5,-2,4,-8,-2,-1,-9,-6,-8,-8,2,9,-3,-9,2,-3,-7,-9,5,-9,-2,-8,3,-10,8,3,-1,9,-1,-8,-8,-9,4,-5,7,5,-6,-10,8,-9,-9,6,7,5,4,10,-4,8,-6,6,6,-3,-6,-1,-5,1,-5,6,-2,1,-6,-9,-9,-8,-9,6,-6,10,-4,-6,-3,2,6,3,1,-6,-6,-5,4,-10,8,10,7,-5,1,9,-10,6,-9,6,3,-6,8,4,7,-3,-1,8,-3,6,-6,-1,-6,-4,4,-6,3,7,-5,1,6,6,9,5,9,-9,8,3,5,-10,9,-7,10,-4,-9,-9,-1,2,9,3,9,-4,9,1,-9,4,-9,-2,7,5,1,10,-9,3,10,-5,-7,5,8,-2,9,7,-9,8,-5,3,-9,9,5,-5,7,3,-10,-9,-6,-7,7,6,3,1,9,5,6,3,9,6,7,-9,10,7,-9,3,-10,-1,3,2,-5,-9,4,-2,-1,6,-10,6,5,5,10,9,7,3,-1,1,2,6,-3,9,-7,-5,-2,-6,-6,10,-9,8,-10,-3,5,-6,5,5,10,-3,8,5,-8], dtype = "int16")#candidate|6441|(1260,)|const|int16
call_6440 = func_4049_call(relay.reshape(const_6441.astype('int16'), [14, 6, 15]), relay.reshape(const_6441.astype('int16'), [14, 6, 15]), )
call_6442 = func_4049_call(relay.reshape(const_6441.astype('int16'), [14, 6, 15]), relay.reshape(const_6441.astype('int16'), [14, 6, 15]), )
func_309_call = mod.get_global_var('func_309')
func_312_call = mutated_mod.get_global_var('func_312')
var_6444 = relay.var("var_6444", dtype = "float32", shape = (780,))#candidate|6444|(780,)|var|float32
call_6443 = relay.TupleGetItem(func_309_call(relay.reshape(var_6444.astype('float32'), [390, 2])), 2)
call_6445 = relay.TupleGetItem(func_312_call(relay.reshape(var_6444.astype('float32'), [390, 2])), 2)
output = relay.Tuple([call_6438,call_6440,const_6441,call_6443,var_6444,])
output2 = relay.Tuple([call_6439,call_6442,const_6441,call_6445,var_6444,])
func_6446 = relay.Function([var_6444,], output)
mod['func_6446'] = func_6446
mod = relay.transform.InferType()(mod)
mutated_mod['func_6446'] = func_6446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6447 = relay.var("var_6447", dtype = "float32", shape = (780,))#candidate|6447|(780,)|var|float32
func_6446_call = mutated_mod.get_global_var('func_6446')
call_6448 = func_6446_call(var_6447)
output = call_6448
func_6449 = relay.Function([var_6447], output)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_6465 = relay.TupleGetItem(func_5886_call(), 0)
call_6466 = relay.TupleGetItem(func_5887_call(), 0)
output = call_6465
output2 = call_6466
func_6474 = relay.Function([], output)
mod['func_6474'] = func_6474
mod = relay.transform.InferType()(mod)
output = func_6474()
func_6475 = relay.Function([], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mod.get_global_var('func_4773')
func_4774_call = mutated_mod.get_global_var('func_4774')
call_6510 = relay.TupleGetItem(func_4773_call(), 0)
call_6511 = relay.TupleGetItem(func_4774_call(), 0)
output = relay.Tuple([call_6510,])
output2 = relay.Tuple([call_6511,])
func_6518 = relay.Function([], output)
mod['func_6518'] = func_6518
mod = relay.transform.InferType()(mod)
output = func_6518()
func_6519 = relay.Function([], output)
mutated_mod['func_6519'] = func_6519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_6582 = func_4383_call()
call_6583 = func_4383_call()
output = relay.Tuple([call_6582,])
output2 = relay.Tuple([call_6583,])
func_6592 = relay.Function([], output)
mod['func_6592'] = func_6592
mod = relay.transform.InferType()(mod)
output = func_6592()
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_6623 = func_4383_call()
call_6624 = func_4383_call()
func_5116_call = mod.get_global_var('func_5116')
func_5119_call = mutated_mod.get_global_var('func_5119')
const_6634 = relay.const([[-7.664873],[8.211134],[2.802316],[9.328083],[6.992460],[-8.325948],[-9.099564],[-4.572951],[1.053528],[-7.832942],[-3.571211],[-5.403836],[-1.694192],[5.712886],[-3.183179]], dtype = "float64")#candidate|6634|(15, 1)|const|float64
call_6633 = relay.TupleGetItem(func_5116_call(relay.reshape(const_6634.astype('float64'), [15, 1])), 1)
call_6635 = relay.TupleGetItem(func_5119_call(relay.reshape(const_6634.astype('float64'), [15, 1])), 1)
func_4911_call = mod.get_global_var('func_4911')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_6662 = relay.TupleGetItem(func_4911_call(), 1)
call_6663 = relay.TupleGetItem(func_4912_call(), 1)
var_6664 = relay.var("var_6664", dtype = "float64", shape = (5, 5, 7))#candidate|6664|(5, 5, 7)|var|float64
bop_6665 = relay.less(call_6623.astype('bool'), var_6664.astype('bool')) # shape=(5, 5, 7)
bop_6668 = relay.less(call_6624.astype('bool'), var_6664.astype('bool')) # shape=(5, 5, 7)
output = relay.Tuple([call_6633,const_6634,call_6662,bop_6665,])
output2 = relay.Tuple([call_6635,const_6634,call_6663,bop_6668,])
func_6674 = relay.Function([var_6664,], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6675 = relay.var("var_6675", dtype = "float64", shape = (5, 5, 7))#candidate|6675|(5, 5, 7)|var|float64
func_6674_call = mutated_mod.get_global_var('func_6674')
call_6676 = func_6674_call(var_6675)
output = call_6676
func_6677 = relay.Function([var_6675], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_6825 = relay.TupleGetItem(func_5086_call(), 0)
call_6826 = relay.TupleGetItem(func_5087_call(), 0)
uop_6829 = relay.cos(call_6825.astype('float32')) # shape=(5, 1, 7)
uop_6831 = relay.cos(call_6826.astype('float32')) # shape=(5, 1, 7)
func_4773_call = mod.get_global_var('func_4773')
func_4774_call = mutated_mod.get_global_var('func_4774')
call_6849 = relay.TupleGetItem(func_4773_call(), 0)
call_6850 = relay.TupleGetItem(func_4774_call(), 0)
func_4758_call = mod.get_global_var('func_4758')
func_4764_call = mutated_mod.get_global_var('func_4764')
var_6855 = relay.var("var_6855", dtype = "float64", shape = (5, 28))#candidate|6855|(5, 28)|var|float64
const_6856 = relay.const([True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True], dtype = "bool")#candidate|6856|(48,)|const|bool
const_6857 = relay.const([True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False], dtype = "bool")#candidate|6857|(576,)|const|bool
var_6858 = relay.var("var_6858", dtype = "float32", shape = (63,))#candidate|6858|(63,)|var|float32
const_6859 = relay.const([7.605157,2.901018,-9.198618,-8.990314,-4.343216,-3.302293,-9.187612,-0.772200,4.270736,-5.430191,-3.484329,-1.134722,-2.880965,-8.397235,5.620900,7.341604,1.822409,-1.829432,6.183278,8.255787,-1.655844,-2.845656,7.708810,-8.911827,-8.823385,-6.887188,-4.828243,5.628912,-4.137623,-8.736729,5.300170,-2.013998,-0.528380,-9.424942,-5.841276,3.638002,1.585891,4.536424,-1.069945,9.237883,-5.775374,4.340964,2.680822,6.816661,-4.799366,5.014538,5.082373,4.921749,-3.478430,9.958973,8.980417,9.175368,1.971673,6.537443,-1.477046,-2.023374,3.559186,7.733549,-3.560250,-6.922173,-7.919908,9.038128,-4.285436,7.645940,-1.645064,9.715266,-7.257307,6.915209,1.457300,0.223057,2.511685,-6.790300,-9.769193,9.698243,-4.050458,1.494863,-1.373588,1.501329,7.621600,9.884298,4.741098,3.282848,-8.458284,1.093480,-9.776189,1.602735,-3.970594,-3.400881,-1.497942,-0.802959,2.754931,5.119054,-7.335494,-6.488100,-2.983560,2.494520,-2.073937,5.885167,9.547711,-1.900673,9.329181,-6.660770,1.612214,-1.689669,-3.903290,6.444477,0.535159,7.024249,5.317173,9.689324,-8.607536,7.343960,-3.952263,1.025438,-6.490693,4.021311,1.326285,2.250395,-7.678353,-2.910806,-0.874100,-6.525363,8.191609,8.500151,-4.498926,-9.417804,-8.606838,7.198346,-2.802320,-9.891290,1.170571,-0.798597,0.219046,3.125452,-6.125888,6.454169,6.071124,-7.880717,7.767705,7.679615,-0.287919,-3.476187,-7.731930,5.859289,-1.100106,2.318098,6.324126,1.321955,6.243525,-6.555405,-1.491987,5.648610,-9.350901,-2.094088,3.086787,8.808027,3.642428,-7.944410,7.520822,-7.813359,-7.175137,7.182897,-8.442888,-5.520463,-9.097948,0.089702,-3.586387,-8.631905,-5.183696,9.581758,6.869607,7.930265,-4.169978,-8.236578,-0.453555,-1.182904,-1.052029,-5.157449,-9.194941,-9.273584,-6.157439,5.254621,-7.318947,1.641316,5.356176,3.851588,0.829271,0.532612,-1.359654,7.913088,7.504576,2.590756,-6.299099,-0.175755,1.399335,1.692664,-5.982360,-4.051181,-9.508345,0.323195,-8.318989,-9.606315,8.500397,-0.761336,2.482636,-9.244226,7.749082,-5.625181,-0.097481,-7.120943,-0.973381,5.241755,-8.426406,1.207001,2.914179,-4.018177,4.864896,9.512290,1.597905,9.169584,7.241549,0.685600,6.416244,-5.111541,-0.761200,9.319795,-7.087440,1.889190,4.353963,-3.079159,0.118074,-5.182560,2.041927,3.902749,7.371776,-3.409199,5.322553,1.730537,2.232041,-6.911032,-6.601772,-0.848889,-8.872809,-2.222318,4.785879,-2.450433,6.488257,3.713331,-3.827589,2.720874,3.835026,-8.638812,5.062721,-1.037871,-1.899180,-6.144036,-8.776688,4.332704,-6.477473,-3.561998,-7.321238,-2.925170,-7.739647,4.540366,1.015567,-4.527859,-3.281530,9.741190,7.802498,-2.958138,-2.792011,-9.515528,-6.827503,0.978225,8.669253,-0.987458,-5.001301,-8.257531,-8.445140,2.700415,-5.836684,2.204297,-5.445922,5.507651,-5.464749,0.216885,-3.367638,5.901336,-3.201503,-4.209173,5.655907,2.069565,3.307713,-8.551878,7.802276,8.929370,0.587890,-5.351931,1.058198,7.601042,-6.680603,-7.825170,4.580820,7.406513,-3.908633,1.246924,-0.780149,1.183601,-9.031067,8.985846,9.836982,-4.342954,1.463916,6.652570,-9.613399,-2.110233,8.562551,3.917269,6.458530,-7.403587,-9.660477,3.380240,3.757647,8.108752,-0.330302,9.542355,8.477806,-8.734985,3.438544,-4.894979,0.965590,-0.935012,9.298733,7.200521,-7.736174,2.217293,6.111840,3.232670,4.405196,8.241502,6.361781,-6.388045,-4.189144,-0.591807,-9.454348,6.897434,5.639930,-9.637282,3.756844,7.247735,-2.952908,7.525411,7.172663,-1.984384,8.692784,-2.806356,-6.593443,0.672251,-8.686798,-0.107562,-1.943162,-7.548197,5.557771,5.912400,-6.853822,-5.802519,4.746248,-5.096746,-6.833668,7.661629,-5.492577,5.928652,-0.664517,2.035816,-5.275991,0.192639,3.948265,-3.634156,5.642429,-9.629739,4.556274,-7.747671,-1.691608,3.055857,3.462945,-7.634606,5.653347,-0.734770,-1.687413,-5.574829,-9.490047,-7.706268,3.344390,-5.195351,-3.007287,-9.892282,-2.290514,-1.771674,3.896996,9.916487,-5.730207,2.570273,9.158462,-1.647833,8.324477,-2.610565,-0.636777,-5.399767,-2.228554,-7.762847,7.829293,-3.135590,7.967343,-1.993858,-0.111993,7.766632,3.521506,-9.170182,1.589576,-1.890431,2.381011,-2.682428,8.615054,0.385793,4.994329,-9.942681,-3.126582,-7.022380,7.931132,0.014080,8.137187,7.920408,9.773344,7.573979,-6.291182,4.451204,1.054111,0.771140,-5.322444,-9.455205,5.343433,-0.964119,2.566821,5.145950,8.473918,-3.440452,-1.229443,6.824196,-9.322417,-8.669129,9.037795,-8.453052,4.940448,8.394529,4.798222,1.768708,9.875734,-4.518815,1.957068,3.593342,-7.547040,7.242907,5.324020,-6.218867,9.510505,-7.140421,4.474962,4.895318,7.174224,-8.407434,-3.589204,3.742426,-3.101885,-0.427277,9.547572,-9.895878,-2.053874,-8.826271,3.621922,3.072434,8.672812,3.392977,-9.530567,4.043837,5.986169,-2.414814,-5.738548,8.330294,-4.033585,-5.614413,-7.283629,9.118904,-9.395762,-6.704190,4.365619,-4.084578,-6.771356,5.610604,5.248233,-3.432312,-7.974366,-0.306364,-7.340130,8.515641,-6.558942,-9.375456,6.201971,3.362637,-2.649324,0.917729,9.131627,-3.240867,4.146267,-7.004466,0.887873,0.995914,-6.967725,-7.235318,-3.604927,7.834977,3.388359,1.848907,0.906628,-2.341353,-4.919157,8.229461,2.404345,5.290100,5.090439,4.446197,-4.821502,0.867294,2.485233,6.312850,8.758214,-6.511541,2.276092,0.123757,-4.376728,-0.372868,3.380288,-8.748015,2.514437,7.674779,6.549608,3.015941,-1.423651,-3.091190,-6.606731,9.465524,-6.032859,-6.245019,5.588650,1.753339,9.815770,-7.071152,8.321920,-1.288238,9.546799,-9.228744,-6.855401,-4.970267,-4.899569,-9.542875,5.458383,-6.963967,7.081421,5.615109,6.470187,-4.310740,-8.317757,0.120793,3.101064,-6.001065,-5.098185,-0.971897,4.174616,1.901134,9.801405,-6.917895,2.561843,0.634103,-2.180487,0.496262,5.333820,-6.224648,-3.857600,5.171052,5.776601,-4.008971,-3.215143,5.705394,-5.691920,3.065763,-3.040896,-5.289249,0.589126,9.449259,-4.348379,9.625854,-9.249983,4.557532,5.119653,4.856199,-4.634158,-7.369978,-8.152087,-3.391659,-0.788945,-6.485258,-7.966068,-8.450356,-7.578297,8.095090,-5.935199,-0.404038,-9.784745,-1.709925,1.337548,3.949756,1.947332,-5.968139,7.786284,-9.700419,7.406347,-7.593546,1.961531,4.628899,-9.867153,-5.814121,1.206548,-3.042934,-1.280130,1.618810,-0.613776,-3.115054,9.386152,1.416691,1.303233,-0.863829,-0.904139,-5.825230,-8.280214,-5.648566,-3.383704,4.559848,3.228130,-9.561853,-0.331600,6.401626,-0.056024,3.539654,7.034672,-7.036736,-7.569576,9.401390,9.171219,7.339673,1.688557,0.088378,-9.122760,3.335463,-7.321955,-9.904733,9.397318,3.954202,9.917129,7.506773,5.700085,5.669710,8.217085,-4.490995,0.466593,-8.902558,3.722530,-7.736844,-4.810325,-6.738437,8.577773,-5.505360,-8.730382,-4.273401,-2.603649,-9.082560,1.990352,7.792336,-5.548330,-3.714543,0.035912,-5.784676,-8.787289,4.540751,-6.551515,9.760672,-4.471495,5.295871,5.459225,-0.018716,3.286077,0.455794,-2.137489,5.625329,-8.114589,-1.103665,-3.263013,0.584256,-3.088100,-4.884585,-9.486142,-6.164333,1.030203,5.265053,-3.647925,-1.470405,6.626644,-6.138074,-2.414865,-8.778160,9.597187,0.959014,-4.896820,-1.915288,6.496451,3.207249,-6.692313,-5.756371,2.503047,-9.967970,7.687405,-6.208447,-4.795545,-8.364991,-5.344095,-2.919384,-9.298111,-3.403846,-1.934784,6.070192,5.596914,8.274177,-6.019875,3.421585,2.077728,6.244753,-3.872404,6.566262,4.621847,6.272086,5.762822,0.390372,5.580427,-9.146824,5.967240,9.948369,-2.200904,-2.752709], dtype = "float32")#candidate|6859|(756,)|const|float32
call_6854 = relay.TupleGetItem(func_4758_call(relay.reshape(var_6855.astype('float64'), [5, 4, 7]), relay.reshape(const_6856.astype('bool'), [48,]), relay.reshape(const_6857.astype('bool'), [576,]), relay.reshape(var_6858.astype('float32'), [63,]), relay.reshape(const_6859.astype('float32'), [756,]), ), 2)
call_6860 = relay.TupleGetItem(func_4764_call(relay.reshape(var_6855.astype('float64'), [5, 4, 7]), relay.reshape(const_6856.astype('bool'), [48,]), relay.reshape(const_6857.astype('bool'), [576,]), relay.reshape(var_6858.astype('float32'), [63,]), relay.reshape(const_6859.astype('float32'), [756,]), ), 2)
func_6159_call = mod.get_global_var('func_6159')
func_6161_call = mutated_mod.get_global_var('func_6161')
var_6865 = relay.var("var_6865", dtype = "uint64", shape = (528,))#candidate|6865|(528,)|var|uint64
call_6864 = relay.TupleGetItem(func_6159_call(relay.reshape(var_6865.astype('uint64'), [528,])), 0)
call_6866 = relay.TupleGetItem(func_6161_call(relay.reshape(var_6865.astype('uint64'), [528,])), 0)
func_4049_call = mod.get_global_var('func_4049')
func_4053_call = mutated_mod.get_global_var('func_4053')
var_6871 = relay.var("var_6871", dtype = "int16", shape = (1260,))#candidate|6871|(1260,)|var|int16
call_6870 = func_4049_call(relay.reshape(var_6871.astype('int16'), [14, 6, 15]), relay.reshape(var_6871.astype('int16'), [14, 6, 15]), )
call_6872 = func_4049_call(relay.reshape(var_6871.astype('int16'), [14, 6, 15]), relay.reshape(var_6871.astype('int16'), [14, 6, 15]), )
output = relay.Tuple([uop_6829,call_6849,call_6854,var_6855,const_6856,const_6857,var_6858,const_6859,call_6864,var_6865,call_6870,var_6871,])
output2 = relay.Tuple([uop_6831,call_6850,call_6860,var_6855,const_6856,const_6857,var_6858,const_6859,call_6866,var_6865,call_6872,var_6871,])
func_6876 = relay.Function([var_6855,var_6858,var_6865,var_6871,], output)
mod['func_6876'] = func_6876
mod = relay.transform.InferType()(mod)
var_6877 = relay.var("var_6877", dtype = "float64", shape = (5, 28))#candidate|6877|(5, 28)|var|float64
var_6878 = relay.var("var_6878", dtype = "float32", shape = (63,))#candidate|6878|(63,)|var|float32
var_6879 = relay.var("var_6879", dtype = "uint64", shape = (528,))#candidate|6879|(528,)|var|uint64
var_6880 = relay.var("var_6880", dtype = "int16", shape = (1260,))#candidate|6880|(1260,)|var|int16
output = func_6876(var_6877,var_6878,var_6879,var_6880,)
func_6881 = relay.Function([var_6877,var_6878,var_6879,var_6880,], output)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6922 = relay.var("var_6922", dtype = "float64", shape = (16, 9, 12))#candidate|6922|(16, 9, 12)|var|float64
uop_6923 = relay.sinh(var_6922.astype('float64')) # shape=(16, 9, 12)
var_6927 = relay.var("var_6927", dtype = "float64", shape = (16, 9, 12))#candidate|6927|(16, 9, 12)|var|float64
bop_6928 = relay.mod(uop_6923.astype('float32'), relay.reshape(var_6927.astype('float32'), relay.shape_of(uop_6923))) # shape=(16, 9, 12)
uop_6937 = relay.log(uop_6923.astype('float64')) # shape=(16, 9, 12)
output = relay.Tuple([bop_6928,uop_6937,])
output2 = relay.Tuple([bop_6928,uop_6937,])
func_6943 = relay.Function([var_6922,var_6927,], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
var_6944 = relay.var("var_6944", dtype = "float64", shape = (16, 9, 12))#candidate|6944|(16, 9, 12)|var|float64
var_6945 = relay.var("var_6945", dtype = "float64", shape = (16, 9, 12))#candidate|6945|(16, 9, 12)|var|float64
output = func_6943(var_6944,var_6945,)
func_6946 = relay.Function([var_6944,var_6945,], output)
mutated_mod['func_6946'] = func_6946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_7005 = func_4383_call()
call_7006 = func_4383_call()
var_7032 = relay.var("var_7032", dtype = "float64", shape = (5, 2, 7))#candidate|7032|(5, 2, 7)|var|float64
bop_7033 = relay.greater_equal(call_7005.astype('bool'), var_7032.astype('bool')) # shape=(5, 2, 7)
bop_7036 = relay.greater_equal(call_7006.astype('bool'), var_7032.astype('bool')) # shape=(5, 2, 7)
uop_7041 = relay.sigmoid(bop_7033.astype('float32')) # shape=(5, 2, 7)
uop_7043 = relay.sigmoid(bop_7036.astype('float32')) # shape=(5, 2, 7)
func_5710_call = mod.get_global_var('func_5710')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_7047 = relay.TupleGetItem(func_5710_call(), 1)
call_7048 = relay.TupleGetItem(func_5712_call(), 1)
output = relay.Tuple([uop_7041,call_7047,])
output2 = relay.Tuple([uop_7043,call_7048,])
func_7064 = relay.Function([var_7032,], output)
mod['func_7064'] = func_7064
mod = relay.transform.InferType()(mod)
var_7065 = relay.var("var_7065", dtype = "float64", shape = (5, 2, 7))#candidate|7065|(5, 2, 7)|var|float64
output = func_7064(var_7065)
func_7066 = relay.Function([var_7065], output)
mutated_mod['func_7066'] = func_7066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6474_call = mod.get_global_var('func_6474')
func_6475_call = mutated_mod.get_global_var('func_6475')
call_7105 = func_6474_call()
call_7106 = func_6474_call()
func_3382_call = mod.get_global_var('func_3382')
func_3385_call = mutated_mod.get_global_var('func_3385')
const_7111 = relay.const([-2,2,-4,-2,10,-1,6,-6,9,-2,9,7,-6,1,7,7,2,9,6,2,-1,-7,-9,2,2,2,-7,7,1,-5,3,-10,-3,-4,10,5,7,10,8,5,-7,-1,4,-10,-5,7,-8,4,6,2,-4,-9,10,8,-3,-8,-1,-5,-7,2,-1,-4,6,2,-6,9,-1,2,10,-1,-4,-1,8,-2,2,-8,4,2,10,3,-8,7,-3,-1,10,7,-1,-10,6,-5,-7,1,-7,-1,-7,-4,-7,4,-1,-4,-7,6,1,8,-10,-6,-5,6,10,-8,2,-3,4,-10,10,-7,-6,6,3,-3,-4,9,5,-1,5,-3,-3,7,-2,4,2,1,-8,-5,9,-3,-8,2,10,-8,7,3,6,9,6,1,9,-7,-7,6,-2,-8,-1,-6,8,-5,5,-4,7,-10,9,2,3,2,4,7,9,8,10,3,8,-2,8,-8,9,10,1,-5,3,-4,7,5,-9,-6,-9,-6,6,3,-3,-9,-9,10,10,4,-3,2,-2,-4,4,-1,-8,1,2,-8,-5,7,5,-5,3,10,-10,7,-1,-4,-2,7,1,-4,2,-9,-8,-10,-4,-7,4,6,-10,-7,-4,8,-5,4,3,-10,9,-9,-4,7,1,8,1,-9,-6,4,7,-4,6,-10,-7,3,8,2,-10,3,-4,9,6,6,6,10,9,8,3,4,8,5,-1,9,7,-5,4,6,-3,2,2,3,-5,9,-10,-9,2,6,10,-5,9,9,3,3,-10,5,6,-5,10,-10,-1,-1,-2,8,-2,10,4,-5,7,-5,3,-8,10,2,1,4,-1,-7,-2,5,-8,7,8,-1,2,-1,7,-5,-7,9,-9,10,-6,2,-9,-3,-6,3,2,7,9,10,9,3,4,-4,2,4,-10,-7,-5,-10,-1,-3,4,-9,-9,-10,-6,-6,2,-5,3,-4,6,-2,2,-10,-4,7,4,-2,7,-3,3,-5,-9,-1,10,5,-9,-4,10,5,8,1,-10,-5,5,3,-7,-6,9,-9,5,4,3,-6,-4,7,6,2,-3,4,6,9,-6,-8,-2,-5,-10,-2,6,6,-10,-10,2,-2,-10,4,-6,9,-10,8,-5,1,-9,-8,3,-5,-8,-9,8,7,2,5,-6,9,-1,-10,-9,2,5,2,-8,1,1,-8,3,-6,1,-2,-6,-5,-9,3,-5,5,9,-8,-6,2,-8,4,-10,-6,-4,9,1,-6,8,-8,4,-5,-3,-9,1,-4,-6,10,-1,-8,-7,4,1,-6,-9,4,-8,-8,1,9,1,-10,-4,-2,9,1,-6,-1,2,8,4,7,-2,-4,-10,-4,6,7,-2,-4,-8,-6,9,3,-7,-5,4,6,4,-8,4,-7,-4,10,-5,9,-9,-10,-2,-2,-6,3,-8,8,10,-8,10,5,-2,-1,1,-10,7,-1,-5,-10,-1,-2,2,2,-8,8,-8,1,10,-6,-4,-1,6,-9,-6,-1,2,7,3,-9,2,8,-10,1,-3,-1,5,7,8,2,5,-3,9,2,-1,-5,-6,-4,-4,-8,-4,-1,5,-10,-5,6], dtype = "int64")#candidate|7111|(588,)|const|int64
call_7110 = relay.TupleGetItem(func_3382_call(relay.reshape(const_7111.astype('int64'), [7, 7, 12])), 0)
call_7112 = relay.TupleGetItem(func_3385_call(relay.reshape(const_7111.astype('int64'), [7, 7, 12])), 0)
func_2345_call = mod.get_global_var('func_2345')
func_2348_call = mutated_mod.get_global_var('func_2348')
const_7128 = relay.const([9,8,9,-1,3,10,-5,-2,-10,8,1,-8,-10,-10,-5,10,2,-8,-8,-4,8,9,-7,-2,8,-10,1,-9,8,-1,-2,-7,-6,7,-5,5,7,7,-4,2,2,-3,1,5,3,2,-4,2,-3,-6,-4,-4,-6,6], dtype = "uint64")#candidate|7128|(54,)|const|uint64
call_7127 = relay.TupleGetItem(func_2345_call(relay.reshape(const_7128.astype('uint64'), [1, 9, 6]), relay.reshape(const_7128.astype('uint64'), [1, 9, 6]), ), 1)
call_7129 = relay.TupleGetItem(func_2348_call(relay.reshape(const_7128.astype('uint64'), [1, 9, 6]), relay.reshape(const_7128.astype('uint64'), [1, 9, 6]), ), 1)
func_5139_call = mod.get_global_var('func_5139')
func_5141_call = mutated_mod.get_global_var('func_5141')
const_7151 = relay.const([[0.097763],[0.662288],[4.402113],[-7.886613],[-3.580705],[-1.656441],[8.940533],[-5.993574],[7.264104],[-7.329528],[5.159515],[8.064771],[-5.303358],[7.791476],[-0.627758],[9.155651],[6.950261],[6.029160],[-4.202318],[-1.433877],[0.964692],[7.420759],[-1.262778],[-5.518015],[7.572419],[5.088961],[8.472141],[3.335409],[0.219006],[-4.883282],[9.217426],[5.008895],[-1.813039],[4.418991],[-1.826405],[-0.112153],[6.555652],[-4.993760],[8.038473],[0.174607],[-9.953366],[9.675850],[-6.836443],[0.345655],[0.129776],[4.226660],[6.836175],[2.187559],[4.329975],[-7.325821],[6.937899],[-5.819626],[7.901440],[-5.704501],[3.390622],[2.403957],[-9.840056],[-3.504950],[7.645089],[-1.754870],[6.296773],[9.672076],[-6.156076],[8.471036],[-1.128933],[-6.696288],[-2.210796],[-0.375938],[1.887336],[-2.969809],[-9.266047],[-0.724673],[7.978424],[5.326717],[-9.147477],[5.538394],[2.064711],[0.891123],[-2.406498],[-0.800995],[-4.756564],[-6.276858],[4.549232],[-4.577175],[6.395966],[7.073104],[-4.716998],[-5.717412],[-2.312183],[2.567278],[4.789905],[4.802535],[0.731545],[-3.676743],[8.599251],[-5.213974],[6.727358],[-3.324998],[1.819169],[-9.341994],[8.464756],[4.535112],[8.228769],[1.503413],[4.201125],[5.042742],[-0.897832],[-7.139131],[2.852236],[1.989999],[0.008952],[-2.682665],[-3.378257],[2.912753],[-1.641614],[-9.484342],[6.102959],[6.296814],[3.117534],[7.718166],[4.757958],[9.513948],[8.081410],[-0.346300],[-4.796114],[0.496080],[1.382427],[5.148358],[-7.962897],[-8.754174],[-0.519402],[-4.987296],[-8.726525],[-2.600733],[9.793313],[-2.828106],[-9.388162],[-6.440619],[5.696383],[-4.493596],[-3.081487],[9.232368],[-1.592515],[3.263890],[4.832404],[3.097428],[-3.899303],[-3.255273],[6.712983],[-7.398071],[-6.616525],[-4.688183],[-0.763358],[-6.460638],[2.480613],[3.346512],[-2.096651],[7.447431],[7.565232],[7.789674],[-3.970846],[-0.910956],[-3.936039],[2.338285],[-4.722802],[-8.444514],[8.374487],[1.182227],[6.507139],[3.478048],[7.023139],[-7.249612],[-3.270972],[-6.706496],[-4.477404],[-5.830578],[-5.514749],[5.419794],[2.698951],[-7.271645],[-6.562205],[-8.737942],[0.627797],[3.925500],[5.059889],[7.471643],[-9.600239],[-3.239075],[-1.597305],[-5.633390],[-7.420356],[3.083557],[-6.488507],[-5.322507],[-4.495737],[9.768674],[7.507623],[-4.486757],[7.330272],[-8.571302],[-0.702883],[5.114544],[5.111862],[8.732721],[-8.271870],[6.485309],[4.961888],[5.901555],[8.262932],[4.846751],[9.853143],[1.442890],[3.015077],[2.070778],[4.737776],[3.926191],[-7.428015],[-5.634973],[7.829479],[2.926477],[-9.654353],[-2.019158],[1.396188],[3.282193],[5.131974],[-0.362374],[6.040065],[-5.515344],[8.135311],[4.199303],[6.115817],[3.276476],[-7.448296],[9.073741],[3.220517],[9.124445],[0.758296],[5.340964],[-6.582328],[-5.417703],[-1.825762],[-3.897181],[-9.405574],[-0.932510],[-0.568603],[-8.091856],[-4.982712],[1.535100],[-6.567647],[-4.783565],[2.566204],[0.386553],[-4.110701],[-4.960895],[9.220535],[-0.543801],[5.720482],[0.126168],[0.456349],[-9.764121],[0.579313],[2.699905],[-2.024485],[-8.785996],[-2.790661],[-0.015223],[6.642518],[-9.045462],[0.006490],[-8.152760],[3.217529],[-1.185763],[0.683787],[-5.680153],[2.400808],[-6.219453],[-8.623160],[-5.887383],[5.879607],[1.160871],[-8.473981],[3.625478],[9.177137],[4.067425],[-8.956973],[0.878532],[-7.589509],[2.385085],[7.785665],[6.834783],[-3.491181],[0.971888],[7.401110],[8.793677],[3.204356],[-7.137512],[-2.132483],[1.896249],[-0.931336],[-4.093409],[-0.888094],[-1.553772],[1.779045],[-0.234039],[-1.796258],[3.304451],[5.586422],[5.396648],[2.684032],[3.778134],[1.160297],[-4.148270],[-3.447021],[9.033509],[-6.719935],[8.761141],[4.429551],[0.740270],[7.676342],[8.502807],[3.734956],[-9.107510],[1.273671],[-4.602283],[-4.027817],[8.481851],[3.644772],[-9.317020],[1.353420],[-7.034893],[0.453336],[-3.719449],[-4.093238],[-4.085930],[3.200104],[8.685500],[-8.300627],[-6.063099],[8.193718],[-6.890001],[-9.402678],[1.316490],[3.642006],[4.572911],[5.729528],[-3.121894],[-6.440601],[7.344205],[2.344214],[-1.126240],[9.768925],[3.037979],[-1.998684],[5.412965],[-8.105931],[3.778149],[-0.503888],[7.992447],[-2.281949],[-6.010035],[-0.833952],[3.901146],[-0.452926],[6.467985],[-7.790716],[-2.734231],[7.947180],[8.301662],[8.570164],[3.596257],[1.095767],[4.272276],[4.202170],[0.762702],[3.441268],[4.717380],[6.922862],[-1.384015],[1.429919],[8.790683],[-6.839329],[7.885676],[2.046513],[2.196427],[-0.650018],[0.739880],[7.977183],[6.392043],[3.030897],[3.762917],[-6.108388],[-1.870280],[7.967934],[5.998449],[8.457186],[-7.803597],[2.044711],[7.139368],[-3.496788],[7.004292],[-2.664372],[-4.699110],[0.448526],[-6.795060],[0.986589],[-3.728143],[6.387123],[6.896226],[1.562849],[7.301562],[4.550608],[-7.291221],[-2.030296],[0.705578],[-8.000047],[7.697190],[2.851935],[3.259585],[0.800330],[2.220511],[6.783547],[-1.923820],[9.817149],[1.204227],[1.808155],[8.477237],[-3.902581],[9.864065],[5.063177],[6.648468],[8.175716],[-1.615407],[7.425224],[-5.258602],[-8.905801],[0.334451],[8.122941],[-9.476110],[5.266132],[5.498694],[-6.480943],[3.147310],[1.068427],[1.081949],[1.579929],[-3.357734],[1.333966],[-8.648262],[-3.848163],[3.922827],[-5.503652],[-8.558878],[2.499651],[-5.710632],[-4.834590],[5.775521],[-1.172222],[3.976956],[8.635931],[7.580921],[-4.318020],[1.784494],[-3.876703],[-9.981317],[-6.229273],[5.523771],[-8.033142],[-0.796622],[-8.602918],[-0.412934],[1.779057],[-8.567123],[-9.040376],[0.164309],[-1.656945],[-6.853726],[-8.420649],[8.683012],[2.671637],[-6.226941],[8.696492],[6.631747],[6.225117],[7.897236],[-6.466852],[1.391300],[4.699081],[-1.765097],[7.970824],[0.950540],[-6.742265],[-1.632403],[-1.110438],[9.800153],[6.426845],[1.767416],[-0.979248],[-9.584105],[1.900237],[6.369703],[6.774185],[2.445472],[-4.159774],[-2.065966],[3.479850],[-0.068934],[-8.771058],[-7.689455],[-2.707068],[-4.461843],[8.061513],[-9.371734],[-8.000187],[-7.911249],[9.923384],[-8.267176],[-4.450920],[1.231854],[7.258703],[-0.452451],[-1.028077],[-5.038543],[-9.068493],[5.143612],[-2.695531],[-3.713263],[2.906014],[8.167675],[-8.083489],[3.320737],[-4.104626],[-3.760176],[3.852005],[7.881832],[-4.199355],[9.042943],[-6.141695],[1.018164],[3.931219],[5.674888],[-2.541499],[0.043512],[6.773745],[-4.458086],[-2.238639],[7.153402],[7.355761],[8.700781],[6.985567],[9.114296],[6.276699],[-4.140953],[-9.049429],[-5.200632],[-2.609380],[8.245516],[9.765378],[4.302787],[-9.856220],[-3.816964],[7.157305],[8.374431],[-2.791312],[-1.317274],[2.774756],[5.936368],[-8.946260],[1.152802],[9.118247],[-4.010079],[4.304016],[-4.548940],[0.524426],[4.142391],[2.342693],[-3.357637],[5.262442],[3.392624],[6.291474],[-7.624602],[7.525800],[7.235588],[3.938280],[-4.758590],[-3.520527],[0.877327],[0.229221],[-8.448347],[9.040452],[-1.698611],[-5.515734],[9.402143],[-2.517309],[2.122080],[-8.220362],[-9.776190],[7.420297],[-4.747820],[-2.344886],[0.686663],[7.778875],[1.179639],[-2.612706],[1.174111],[9.118536],[7.078593],[2.679940],[-3.052480],[8.736680],[9.233253],[7.435346],[-5.423559],[3.248993],[4.124241],[5.154733],[-1.719828],[5.843108],[1.432606],[7.590402],[7.461320],[-6.083019],[-1.231454],[-3.033638],[9.626034],[-3.093951],[2.035658],[3.602502],[-3.824019],[-3.227654],[-2.776588],[-5.627210],[1.745989],[-3.000415],[-7.287571],[5.772510],[6.730164],[-7.769310],[5.463913],[-8.736571],[-9.901699],[7.771090],[-6.000684],[4.651509],[9.207357],[-5.898830],[-2.477009],[-6.256537],[4.270764],[-1.114100],[9.609622],[5.210744],[-8.554284],[-1.013298],[-2.212402],[-6.833227],[-4.702408],[9.667660],[-8.509465],[7.212842],[-9.073529],[-4.473439],[6.993353],[-8.470473],[8.654691],[-1.669282],[4.616575],[4.897650],[0.141056],[8.686637],[-3.139608],[-4.127204],[-1.011650],[6.413735],[3.817129],[-7.312068],[6.996870],[-2.233032],[-1.482715],[7.432859],[7.452036],[-5.205131],[1.663508],[-0.992268],[3.508771],[5.147640],[-5.822874],[-6.487812],[9.393122],[8.161981],[6.234025],[-6.375573],[-3.939897],[5.954984],[-0.937248],[0.984922],[-5.104879],[-5.739971],[6.811131],[-8.668879],[-8.118715],[3.839775],[2.660931],[9.807349],[8.036612],[6.367717],[7.287031],[2.782003],[-5.350001],[-8.981797],[5.909211],[7.724101],[0.851181],[-6.928892],[-5.460487],[0.990534],[-0.688382],[4.367342],[6.529484],[-1.620571],[-5.736484],[3.015834],[2.597968],[5.847141],[5.738744],[-0.874077],[7.280928],[-4.363527],[6.071071],[-3.545222],[0.027584],[6.001222],[-4.227442],[0.741956],[9.097269],[-6.644647],[-1.341230],[3.475955],[4.557145],[5.872325],[-0.928801],[3.230309],[8.366796],[-7.788489],[-2.282418],[5.627385],[9.930544],[2.361996],[8.500153],[0.816090],[-7.802906],[-6.759296],[0.045257],[2.501033],[4.869207],[6.299260],[-0.803879],[4.872104],[-5.903909],[7.452292],[-8.734578],[-4.248324],[8.974091],[9.328869],[-6.976865],[3.650170],[9.020489],[3.988559],[-4.877156],[4.223010],[-4.290463],[2.149660],[3.239225],[-0.737603],[3.244799],[5.446110],[-4.278731],[3.605995],[0.650738],[7.578548],[9.656623],[3.826985],[-6.918881],[5.206169],[1.187286],[-8.213926],[2.836653],[-5.125853],[4.158352],[-6.292534],[-8.429643],[-2.168856],[9.070850],[-7.222052],[6.291666],[-6.733951],[2.506874],[9.973527],[9.674698],[-5.179367],[4.240806],[-9.782966],[-0.891427],[7.970662],[2.039946],[-0.574997],[6.068883],[4.690336],[-1.538309],[-4.362220],[3.981594],[-4.459953],[-5.293932],[-1.658654],[-4.489395],[-4.841654],[-7.049944],[-5.538379],[0.153163],[-2.370091],[3.735481],[7.028128],[2.845161],[3.147048],[-9.901852],[7.413962],[8.698843],[-7.580402],[1.956828],[5.065326],[9.409837],[1.668222],[-4.056208],[3.283804],[-5.719226],[-4.771174],[-7.670881],[-4.679393],[-9.797251],[-2.784013],[7.203606],[-8.146771],[5.409999],[-7.234584],[-0.393989],[4.172081],[8.511578],[4.117087],[-4.686233],[-7.953271],[-0.206740],[2.701723],[-2.282162],[-0.816360],[9.001933],[9.926767],[0.319560],[7.130580],[4.146299],[3.913058],[6.070949],[3.466096],[-6.993012],[-0.089946],[2.258088],[9.471620],[-1.334753],[1.249759],[-7.214844],[1.602452],[-9.141840],[3.643599],[2.478128],[-4.982855],[-9.780781],[-0.612736],[-9.436793],[4.952027],[-1.331254],[-7.887539],[-8.416670],[3.169223],[-4.017029],[2.042495],[-4.465854],[-1.332284],[5.737474],[-8.964043],[4.185038],[3.191285],[3.859215],[2.091389],[-9.586142],[-0.416319],[1.024028],[-7.604072],[-5.211064],[-5.880986],[-5.539806],[1.750291],[-1.728371],[1.258791],[0.579433],[-7.894750],[1.714553],[0.670733],[8.404047],[-3.484577],[4.468942],[-2.534042],[1.989814],[-0.279360],[-8.906629],[-1.672416],[-0.523058],[-4.448589],[-3.474000],[-9.711692],[3.087983],[-3.929375],[6.285232],[3.555889],[-1.089698],[-5.839618],[-3.022680],[-2.118366],[7.621834],[0.735864],[6.822081],[1.565906],[-6.308558],[9.828093],[8.712213],[-5.071582],[-0.725893],[4.063766],[-6.266420],[2.037986],[9.473081],[-7.563217],[-1.496988],[0.729755],[2.984692],[-1.638041],[3.450088],[-5.133277],[9.026442],[-8.537248],[-6.278329],[0.460953],[3.003340],[-7.663993],[-2.247690],[-5.345709],[6.964836],[0.345455],[-6.893419],[9.867442],[-5.538429],[-9.232831],[2.707742],[8.862524],[-1.319100],[-7.913280],[-0.449977],[-0.042697],[-3.474024],[-8.941699],[-6.480656],[-5.325791],[6.413158],[8.269028],[4.198854],[-8.618986],[-6.375009],[9.642763],[4.116772],[-9.684282],[-7.968798],[-9.377028],[7.003245],[-2.208728],[9.134726],[-3.975863],[8.556008],[4.904520],[-5.470228],[-9.183852],[-8.534182],[8.807660],[-0.455841],[-8.125274],[2.385071],[4.175059],[5.208377],[9.203828],[-0.165162],[9.686569],[-1.611210],[9.598867],[-3.572796],[-6.848780]], dtype = "float64")#candidate|7151|(1001, 1)|const|float64
call_7150 = relay.TupleGetItem(func_5139_call(relay.reshape(const_7151.astype('float64'), [11, 13, 7])), 0)
call_7152 = relay.TupleGetItem(func_5141_call(relay.reshape(const_7151.astype('float64'), [11, 13, 7])), 0)
output = relay.Tuple([call_7105,call_7110,const_7111,call_7127,const_7128,call_7150,const_7151,])
output2 = relay.Tuple([call_7106,call_7112,const_7111,call_7129,const_7128,call_7152,const_7151,])
func_7155 = relay.Function([], output)
mod['func_7155'] = func_7155
mod = relay.transform.InferType()(mod)
output = func_7155()
func_7156 = relay.Function([], output)
mutated_mod['func_7156'] = func_7156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_7162 = func_4383_call()
call_7163 = func_4383_call()
output = call_7162
output2 = call_7163
func_7179 = relay.Function([], output)
mod['func_7179'] = func_7179
mod = relay.transform.InferType()(mod)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7179_call = mutated_mod.get_global_var('func_7179')
call_7180 = func_7179_call()
output = call_7180
func_7181 = relay.Function([], output)
mutated_mod['func_7181'] = func_7181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6198_call = mod.get_global_var('func_6198')
func_6200_call = mutated_mod.get_global_var('func_6200')
call_7211 = relay.TupleGetItem(func_6198_call(), 0)
call_7212 = relay.TupleGetItem(func_6200_call(), 0)
func_4758_call = mod.get_global_var('func_4758')
func_4764_call = mutated_mod.get_global_var('func_4764')
var_7224 = relay.var("var_7224", dtype = "float64", shape = (140,))#candidate|7224|(140,)|var|float64
const_7225 = relay.const([[True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True],[True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False]], dtype = "bool")#candidate|7225|(2, 24)|const|bool
var_7226 = relay.var("var_7226", dtype = "bool", shape = (576, 1))#candidate|7226|(576, 1)|var|bool
const_7227 = relay.const([8.752134,9.225535,3.824759,-8.791184,1.215671,3.791609,2.927283,2.466286,-1.034691,-8.097727,-3.128760,2.835314,-5.121547,8.277094,3.731955,-5.102727,7.684831,5.545337,-2.934294,5.346103,-1.119963,-5.039823,-2.346258,2.846506,6.107991,-5.235263,-6.778450,1.822920,-1.132659,7.650240,3.782097,-2.746258,5.066340,3.496986,7.664404,7.104581,8.763652,-7.294089,-4.850932,4.890008,7.078073,5.385613,6.718592,4.086709,-5.879413,0.316520,-4.915505,-3.204723,-9.850302,3.858588,-8.327156,3.474937,-7.895829,4.437949,-6.703458,2.524501,-7.523137,9.151689,6.402427,-7.832072,6.286930,0.826533,0.963284], dtype = "float32")#candidate|7227|(63,)|const|float32
const_7228 = relay.const([[-3.726301,-6.754069],[4.288944,4.247011],[-4.038236,7.230913],[1.523300,9.139191],[9.173926,-1.631315],[3.700593,6.172910],[-8.940113,-4.993272],[7.717246,8.055069],[1.013723,7.146061],[-4.775651,-0.408174],[0.987429,7.375308],[-1.924033,8.219348],[-8.106919,0.423055],[2.006150,9.024818],[4.631724,-7.949496],[-8.358599,-6.699247],[-7.834018,-9.592011],[-2.198699,4.918367],[-9.847184,4.025893],[4.247925,0.483714],[-3.443570,-5.550511],[8.206102,7.441751],[5.277037,3.865283],[-1.017633,3.444414],[6.718990,4.303502],[-4.943347,6.624381],[6.496904,-1.270073],[0.880375,0.508015],[-7.227414,-8.702203],[7.345031,-4.951755],[0.227634,-2.792899],[-6.500071,-3.178222],[3.170659,8.240213],[4.911766,-9.908296],[5.631146,9.303997],[-9.076270,0.671103],[-0.120925,-0.430970],[7.479998,2.980855],[6.683197,-2.122229],[0.233756,6.431860],[-0.897461,4.846131],[-6.769026,7.864135],[-3.385986,-5.611540],[5.999044,2.929090],[7.067889,4.536292],[-2.305478,-3.297597],[-7.071784,0.774766],[8.707719,-7.836826],[-5.723892,9.394236],[4.876151,-2.350133],[-5.970894,3.205737],[-2.774245,8.326721],[-9.533209,8.990291],[1.803530,-6.687552],[-6.640475,-2.129664],[5.574539,-6.111459],[-3.796032,-2.080926],[-9.319309,3.479006],[9.030745,-8.091939],[8.853619,-9.754110],[-9.304778,-4.947901],[3.948280,9.330712],[5.942057,0.846819],[-0.681535,-9.947853],[-9.384432,-1.669814],[4.490328,0.408994],[-9.758848,3.449230],[5.528781,-6.057782],[7.170984,-2.854011],[9.451189,-8.513913],[7.668421,2.283247],[5.667658,-2.848051],[-9.285962,-4.718294],[-1.658631,9.123085],[6.351874,-5.465721],[-4.967860,-7.978758],[6.980718,-4.983909],[-8.602753,2.626013],[-0.596542,2.338650],[-3.630780,0.100489],[1.791096,5.467970],[3.335128,-6.060634],[6.541200,-8.421546],[9.388103,3.870830],[3.403053,-9.691352],[-1.121955,9.858720],[-4.993682,4.768966],[-4.592086,-0.247270],[-8.710915,2.464086],[-5.921672,6.810130],[-9.615559,0.346227],[-1.713784,-9.270009],[-1.309778,-8.141390],[8.500947,5.896564],[-2.627495,-2.357828],[-8.270158,-4.314812],[-8.909321,-5.429813],[-1.292988,-5.622942],[0.043837,-2.498471],[-8.579546,2.158043],[6.977013,-9.744614],[4.609553,7.283102],[-3.483293,-0.351620],[-2.981101,8.363682],[-8.064851,7.770828],[5.371992,3.253559],[4.683711,5.902684],[3.533931,-2.181391],[-6.725602,5.514392],[-1.575856,2.905415],[-0.782485,8.217918],[9.015029,-4.805555],[1.069550,-9.876141],[8.139166,2.842490],[5.605836,4.832636],[-9.177874,-6.887706],[-5.979288,-8.256490],[-4.654106,4.420172],[-3.647177,6.010236],[7.460251,5.192545],[2.441658,-9.047716],[-1.539320,3.403745],[-9.732751,-1.945017],[-8.681899,3.681557],[-8.102071,2.367612],[3.822438,1.841862],[-0.439289,8.923673],[-2.759198,-4.785829],[-5.717164,8.367554],[-6.025795,2.496067],[4.341735,8.547249],[-8.094885,-5.536271],[7.743274,5.466432],[-0.559323,-6.122409],[1.356383,-3.657401],[-3.848562,3.598293],[0.262336,0.816722],[9.020726,-7.692021],[-3.342800,-0.956778],[-7.274839,0.332937],[-7.777180,3.992097],[-6.034176,0.787951],[0.444051,8.623191],[-9.673882,3.791166],[5.882377,-7.715327],[9.421359,7.121619],[-5.725050,-6.472113],[-4.174251,-5.121638],[-6.398661,5.586398],[9.545773,-5.399203],[0.731755,6.887248],[-8.192034,5.054075],[3.338423,-4.086438],[5.885259,0.971750],[4.100113,-0.485768],[7.750965,-5.430926],[-2.906769,-4.171667],[9.855014,0.930294],[9.257062,-3.457890],[6.998335,9.901564],[1.948546,8.086039],[-5.546279,7.852176],[-0.327643,5.544587],[-5.922623,8.748639],[-5.819598,9.986345],[-3.771265,-4.783794],[1.701815,3.362112],[-7.898651,8.093469],[-0.103171,-4.988414],[7.117689,-1.320436],[-3.411530,-7.467601],[1.759758,8.336824],[3.670819,0.829954],[1.897730,0.013448],[2.082248,7.961203],[-0.051205,8.047613],[7.919908,8.616528],[0.841471,-2.468884],[9.407908,4.281772],[-0.538047,-5.449676],[6.572095,7.127576],[4.632240,9.937015],[3.431215,5.690785],[1.174811,-2.455269],[-4.597074,-2.212661],[4.905736,3.621040],[1.737005,-4.222744],[-8.137917,5.917903],[-0.716814,-2.859871],[-5.419549,-3.279417],[6.006162,8.297485],[1.001385,6.610941],[6.684212,5.680033],[7.619230,3.202553],[4.886979,-9.398857],[2.135794,2.741659],[0.276370,5.818668],[8.346763,5.496088],[0.967621,-6.411830],[6.639755,8.231471],[1.903583,9.011889],[1.016672,9.350714],[-4.778743,-3.371607],[1.736388,-3.980326],[-0.721008,-0.493099],[1.160913,-1.312697],[-0.233825,2.706871],[-4.046697,-7.461125],[-2.630713,-5.716373],[7.050913,-7.022975],[-7.760493,3.376434],[0.833137,-7.631341],[6.148872,8.222799],[-9.479220,-4.861035],[-1.915008,-0.751724],[-1.036576,-3.923991],[1.661917,-1.155980],[-2.324975,-7.248338],[-2.766744,7.914585],[4.399370,5.198010],[-5.390188,-6.381094],[-9.945840,-6.346239],[-8.860897,4.448230],[8.528836,5.766114],[7.919830,3.585488],[1.774799,-0.045304],[4.955370,5.307840],[9.122278,-9.083441],[0.722350,-5.816143],[9.121234,3.502452],[-5.427321,-0.756929],[-4.336872,-7.682684],[9.181044,-3.014408],[6.050012,-1.800246],[-2.162990,-2.658493],[-7.920189,5.805070],[2.519884,8.939001],[-6.065750,-8.390078],[-8.024374,1.890935],[7.411333,-3.903757],[9.387903,0.723413],[7.022449,-0.992842],[2.574140,1.167537],[4.043785,0.571115],[-5.129968,9.838798],[6.408648,3.719852],[-2.175982,0.283548],[-8.172679,-2.684670],[-0.848086,1.383743],[-0.148412,6.475964],[-9.961112,8.643909],[3.572645,-1.120875],[-8.645608,9.518569],[3.316537,6.862700],[1.845277,0.846133],[-8.947929,5.958482],[4.082813,-3.509456],[-7.373133,1.984245],[-3.210521,-5.531318],[-3.785423,8.448050],[-5.660734,-6.074744],[-4.870514,8.701154],[-5.894924,9.872003],[7.955577,7.758120],[4.980362,-1.714384],[4.830268,-4.267847],[-4.906389,-0.748376],[4.621771,3.801155],[-6.743933,-8.364122],[2.227076,-9.024147],[-4.036287,-3.769184],[-8.375071,9.172616],[6.738167,-7.683384],[2.853658,-8.367694],[4.077441,-3.221797],[1.375003,5.421062],[-9.432706,-0.787532],[9.525022,3.619813],[-9.273411,5.800035],[-0.610510,4.734739],[-6.078816,-4.470243],[-5.782581,-4.267559],[6.557921,9.869331],[-9.830816,-2.277598],[-0.216324,4.218035],[2.606551,8.693136],[-9.569688,3.993734],[2.052211,3.186490],[-7.374623,-4.340439],[-5.370685,-5.550132],[8.669472,-7.804084],[-7.647524,-9.810233],[0.579690,3.820716],[4.896144,2.879669],[9.741048,-0.595396],[3.329341,4.097532],[0.497817,-5.004084],[-3.172068,-9.578299],[-4.059322,2.176344],[0.494553,8.678054],[2.173335,-2.562915],[-6.995426,0.111248],[-6.257815,-7.934532],[4.551039,2.967374],[1.213637,-3.092503],[-3.368837,-4.280032],[-4.728325,-5.546722],[0.168174,-1.245912],[-1.201323,4.980434],[-4.140864,-2.370681],[-9.761056,-0.996013],[-9.918368,2.754819],[-9.235386,5.016856],[-3.706475,9.250905],[-0.620670,-5.089623],[-4.724448,-1.042136],[0.452499,3.802833],[-0.097594,-3.998595],[-4.963894,-2.610019],[-2.629442,1.365058],[-8.779283,-0.944216],[-0.104893,6.305502],[0.268760,-2.644226],[-3.612867,-4.001906],[1.824862,-8.319992],[1.136182,-6.799371],[3.013179,2.690000],[-0.308448,-7.703388],[3.885215,2.151537],[5.034891,-8.799463],[2.306393,-0.226589],[-6.699580,8.171092],[-6.802056,4.444491],[1.212509,6.546885],[7.844219,-3.690618],[9.787126,-3.864725],[4.463401,-0.123228],[-4.760704,9.791412],[-3.674893,4.596330],[-9.068356,-7.415672],[-4.298280,4.338070],[0.690380,9.659435],[3.412435,2.854282],[-2.907795,6.412969],[0.994483,-4.053211],[4.205526,5.786151],[9.847504,-6.072995],[-2.745712,-2.952674],[-4.180643,-5.808965],[0.980209,-0.209245],[0.417636,3.496002],[1.392997,-0.931861],[5.864040,-0.838959],[-0.994359,-6.199626],[2.493408,-2.198312],[9.620722,-2.487862],[-6.735971,7.553029],[-4.726069,-4.351491],[6.380187,-8.503414],[-9.047302,-8.367873],[7.250414,-8.778584],[-2.070355,-1.932164],[7.623181,9.423904],[6.022771,2.188892],[-5.163195,9.525006],[-0.337715,0.927375],[-6.361416,4.915550],[-5.478991,-5.610234],[-3.055023,9.542417],[2.309279,-6.861094],[-2.850623,8.543822],[-3.889206,1.356435],[0.573639,8.505510],[-2.891302,-4.920950],[-7.531402,-2.351567],[1.371385,3.827110],[5.657650,-7.623778],[-8.080518,-3.232286]], dtype = "float32")#candidate|7228|(378, 2)|const|float32
call_7223 = relay.TupleGetItem(func_4758_call(relay.reshape(var_7224.astype('float64'), [5, 4, 7]), relay.reshape(const_7225.astype('bool'), [48,]), relay.reshape(var_7226.astype('bool'), [576,]), relay.reshape(const_7227.astype('float32'), [63,]), relay.reshape(const_7228.astype('float32'), [756,]), ), 7)
call_7229 = relay.TupleGetItem(func_4764_call(relay.reshape(var_7224.astype('float64'), [5, 4, 7]), relay.reshape(const_7225.astype('bool'), [48,]), relay.reshape(var_7226.astype('bool'), [576,]), relay.reshape(const_7227.astype('float32'), [63,]), relay.reshape(const_7228.astype('float32'), [756,]), ), 7)
output = relay.Tuple([call_7211,call_7223,var_7224,const_7225,var_7226,const_7227,const_7228,])
output2 = relay.Tuple([call_7212,call_7229,var_7224,const_7225,var_7226,const_7227,const_7228,])
func_7232 = relay.Function([var_7224,var_7226,], output)
mod['func_7232'] = func_7232
mod = relay.transform.InferType()(mod)
mutated_mod['func_7232'] = func_7232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7232_call = mutated_mod.get_global_var('func_7232')
var_7234 = relay.var("var_7234", dtype = "float64", shape = (140,))#candidate|7234|(140,)|var|float64
var_7235 = relay.var("var_7235", dtype = "bool", shape = (576, 1))#candidate|7235|(576, 1)|var|bool
call_7233 = func_7232_call(var_7234,var_7235,)
output = call_7233
func_7236 = relay.Function([var_7234,var_7235,], output)
mutated_mod['func_7236'] = func_7236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_7249 = relay.TupleGetItem(func_5930_call(), 0)
call_7250 = relay.TupleGetItem(func_5931_call(), 0)
func_5833_call = mod.get_global_var('func_5833')
func_5835_call = mutated_mod.get_global_var('func_5835')
call_7251 = relay.TupleGetItem(func_5833_call(), 0)
call_7252 = relay.TupleGetItem(func_5835_call(), 0)
bop_7254 = relay.not_equal(call_7251.astype('bool'), relay.reshape(call_7249.astype('bool'), relay.shape_of(call_7251))) # shape=(5, 1, 7)
bop_7257 = relay.not_equal(call_7252.astype('bool'), relay.reshape(call_7250.astype('bool'), relay.shape_of(call_7252))) # shape=(5, 1, 7)
bop_7264 = relay.divide(call_7249.astype('float64'), relay.reshape(bop_7254.astype('float64'), relay.shape_of(call_7249))) # shape=(5, 1, 7)
bop_7267 = relay.divide(call_7250.astype('float64'), relay.reshape(bop_7257.astype('float64'), relay.shape_of(call_7250))) # shape=(5, 1, 7)
output = bop_7264
output2 = bop_7267
func_7274 = relay.Function([], output)
mod['func_7274'] = func_7274
mod = relay.transform.InferType()(mod)
output = func_7274()
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4324_call = mod.get_global_var('func_4324')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7332 = func_4324_call()
call_7333 = func_4324_call()
output = relay.Tuple([call_7332,])
output2 = relay.Tuple([call_7333,])
func_7336 = relay.Function([], output)
mod['func_7336'] = func_7336
mod = relay.transform.InferType()(mod)
output = func_7336()
func_7337 = relay.Function([], output)
mutated_mod['func_7337'] = func_7337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6518_call = mod.get_global_var('func_6518')
func_6519_call = mutated_mod.get_global_var('func_6519')
call_7338 = relay.TupleGetItem(func_6518_call(), 0)
call_7339 = relay.TupleGetItem(func_6519_call(), 0)
output = relay.Tuple([call_7338,])
output2 = relay.Tuple([call_7339,])
func_7344 = relay.Function([], output)
mod['func_7344'] = func_7344
mod = relay.transform.InferType()(mod)
output = func_7344()
func_7345 = relay.Function([], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6071_call = mod.get_global_var('func_6071')
func_6072_call = mutated_mod.get_global_var('func_6072')
call_7365 = relay.TupleGetItem(func_6071_call(), 0)
call_7366 = relay.TupleGetItem(func_6072_call(), 0)
func_6198_call = mod.get_global_var('func_6198')
func_6200_call = mutated_mod.get_global_var('func_6200')
call_7397 = relay.TupleGetItem(func_6198_call(), 0)
call_7398 = relay.TupleGetItem(func_6200_call(), 0)
func_6198_call = mod.get_global_var('func_6198')
func_6200_call = mutated_mod.get_global_var('func_6200')
call_7411 = relay.TupleGetItem(func_6198_call(), 0)
call_7412 = relay.TupleGetItem(func_6200_call(), 0)
func_5116_call = mod.get_global_var('func_5116')
func_5119_call = mutated_mod.get_global_var('func_5119')
const_7426 = relay.const([5.351820,3.298323,-2.440469,-0.540424,6.417081,5.909089,9.916082,-7.876835,7.206553,3.086461,3.750079,-7.037361,-7.382749,-5.153937,-6.172669], dtype = "float64")#candidate|7426|(15,)|const|float64
call_7425 = relay.TupleGetItem(func_5116_call(relay.reshape(const_7426.astype('float64'), [15, 1])), 4)
call_7427 = relay.TupleGetItem(func_5119_call(relay.reshape(const_7426.astype('float64'), [15, 1])), 4)
func_4049_call = mod.get_global_var('func_4049')
func_4053_call = mutated_mod.get_global_var('func_4053')
var_7429 = relay.var("var_7429", dtype = "int16", shape = (1260,))#candidate|7429|(1260,)|var|int16
call_7428 = func_4049_call(relay.reshape(var_7429.astype('int16'), [14, 6, 15]), relay.reshape(var_7429.astype('int16'), [14, 6, 15]), )
call_7430 = func_4049_call(relay.reshape(var_7429.astype('int16'), [14, 6, 15]), relay.reshape(var_7429.astype('int16'), [14, 6, 15]), )
output = relay.Tuple([call_7365,call_7397,call_7411,call_7425,const_7426,call_7428,var_7429,])
output2 = relay.Tuple([call_7366,call_7398,call_7412,call_7427,const_7426,call_7430,var_7429,])
func_7438 = relay.Function([var_7429,], output)
mod['func_7438'] = func_7438
mod = relay.transform.InferType()(mod)
mutated_mod['func_7438'] = func_7438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7439 = relay.var("var_7439", dtype = "int16", shape = (1260,))#candidate|7439|(1260,)|var|int16
func_7438_call = mutated_mod.get_global_var('func_7438')
call_7440 = func_7438_call(var_7439)
output = call_7440
func_7441 = relay.Function([var_7439], output)
mutated_mod['func_7441'] = func_7441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_7471 = relay.TupleGetItem(func_5086_call(), 0)
call_7472 = relay.TupleGetItem(func_5087_call(), 0)
uop_7484 = relay.exp(call_7471.astype('float32')) # shape=(5, 1, 7)
uop_7486 = relay.exp(call_7472.astype('float32')) # shape=(5, 1, 7)
bop_7489 = relay.less_equal(uop_7484.astype('bool'), relay.reshape(call_7471.astype('bool'), relay.shape_of(uop_7484))) # shape=(5, 1, 7)
bop_7492 = relay.less_equal(uop_7486.astype('bool'), relay.reshape(call_7472.astype('bool'), relay.shape_of(uop_7486))) # shape=(5, 1, 7)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_7506 = func_4328_call()
call_7507 = func_4328_call()
func_7336_call = mod.get_global_var('func_7336')
func_7337_call = mutated_mod.get_global_var('func_7337')
call_7516 = relay.TupleGetItem(func_7336_call(), 0)
call_7517 = relay.TupleGetItem(func_7337_call(), 0)
func_6674_call = mod.get_global_var('func_6674')
func_6677_call = mutated_mod.get_global_var('func_6677')
var_7521 = relay.var("var_7521", dtype = "float64", shape = (35, 5))#candidate|7521|(35, 5)|var|float64
call_7520 = relay.TupleGetItem(func_6674_call(relay.reshape(var_7521.astype('float64'), [5, 5, 7])), 1)
call_7522 = relay.TupleGetItem(func_6677_call(relay.reshape(var_7521.astype('float64'), [5, 5, 7])), 1)
output = relay.Tuple([bop_7489,call_7506,call_7516,call_7520,var_7521,])
output2 = relay.Tuple([bop_7492,call_7507,call_7517,call_7522,var_7521,])
func_7529 = relay.Function([var_7521,], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
mutated_mod['func_7529'] = func_7529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7530 = relay.var("var_7530", dtype = "float64", shape = (35, 5))#candidate|7530|(35, 5)|var|float64
func_7529_call = mutated_mod.get_global_var('func_7529')
call_7531 = func_7529_call(var_7530)
output = call_7531
func_7532 = relay.Function([var_7530], output)
mutated_mod['func_7532'] = func_7532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_7569 = relay.TupleGetItem(func_5886_call(), 0)
call_7570 = relay.TupleGetItem(func_5887_call(), 0)
output = relay.Tuple([call_7569,])
output2 = relay.Tuple([call_7570,])
func_7576 = relay.Function([], output)
mod['func_7576'] = func_7576
mod = relay.transform.InferType()(mod)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7576_call = mutated_mod.get_global_var('func_7576')
call_7577 = func_7576_call()
output = call_7577
func_7578 = relay.Function([], output)
mutated_mod['func_7578'] = func_7578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7155_call = mod.get_global_var('func_7155')
func_7156_call = mutated_mod.get_global_var('func_7156')
call_7609 = relay.TupleGetItem(func_7155_call(), 1)
call_7610 = relay.TupleGetItem(func_7156_call(), 1)
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_7614 = relay.TupleGetItem(func_7576_call(), 0)
call_7615 = relay.TupleGetItem(func_7578_call(), 0)
output = relay.Tuple([call_7609,call_7614,])
output2 = relay.Tuple([call_7610,call_7615,])
func_7623 = relay.Function([], output)
mod['func_7623'] = func_7623
mod = relay.transform.InferType()(mod)
output = func_7623()
func_7624 = relay.Function([], output)
mutated_mod['func_7624'] = func_7624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5979_call = mod.get_global_var('func_5979')
func_5980_call = mutated_mod.get_global_var('func_5980')
call_7664 = relay.TupleGetItem(func_5979_call(), 0)
call_7665 = relay.TupleGetItem(func_5980_call(), 0)
func_3099_call = mod.get_global_var('func_3099')
func_3107_call = mutated_mod.get_global_var('func_3107')
const_7669 = relay.const([[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True]], dtype = "bool")#candidate|7669|(48, 1)|const|bool
const_7670 = relay.const([True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False], dtype = "bool")#candidate|7670|(576,)|const|bool
var_7671 = relay.var("var_7671", dtype = "float32", shape = (63, 1))#candidate|7671|(63, 1)|var|float32
var_7672 = relay.var("var_7672", dtype = "bool", shape = (1536,))#candidate|7672|(1536,)|var|bool
var_7673 = relay.var("var_7673", dtype = "float32", shape = (756,))#candidate|7673|(756,)|var|float32
call_7668 = relay.TupleGetItem(func_3099_call(relay.reshape(const_7669.astype('bool'), [16, 3, 1]), relay.reshape(const_7670.astype('bool'), [16, 3, 12]), relay.reshape(const_7670.astype('bool'), [16, 3, 12]), relay.reshape(var_7671.astype('float32'), [63,]), relay.reshape(var_7672.astype('bool'), [1536,]), relay.reshape(var_7673.astype('float32'), [9, 7, 12]), ), 3)
call_7674 = relay.TupleGetItem(func_3107_call(relay.reshape(const_7669.astype('bool'), [16, 3, 1]), relay.reshape(const_7670.astype('bool'), [16, 3, 12]), relay.reshape(const_7670.astype('bool'), [16, 3, 12]), relay.reshape(var_7671.astype('float32'), [63,]), relay.reshape(var_7672.astype('bool'), [1536,]), relay.reshape(var_7673.astype('float32'), [9, 7, 12]), ), 3)
func_6943_call = mod.get_global_var('func_6943')
func_6946_call = mutated_mod.get_global_var('func_6946')
const_7678 = relay.const([-0.539395,7.901657,-7.313156,-6.037263,-4.141765,7.503609,-5.080343,9.146648,5.783360,-3.057788,-1.051865,-3.712143,8.175338,-2.661049,3.795331,-2.319403,0.905109,-2.953039,-3.725071,2.614098,-2.563788,7.274263,5.279770,0.716926,9.197625,-9.072599,-2.224731,3.520424,-2.778332,-7.921647,-8.795508,-4.887503,3.175784,6.583557,1.674682,-0.096743,-4.913063,-1.039584,-3.454024,-5.544214,3.401395,-9.434887,1.118971,-3.885259,7.745693,7.711786,1.575050,3.602774,-0.403610,-2.037778,-2.187166,1.888154,-8.689253,-6.671438,6.154609,-0.316068,9.195741,5.009177,-2.186667,7.141362,-8.824266,-3.064251,-8.090533,-7.906326,-9.299033,-1.815452,-3.796632,6.388957,4.656599,5.461814,-2.613501,3.132052,-6.764602,-4.571802,-3.559936,-0.712337,1.413124,-2.888297,6.701874,-8.082459,8.698509,-3.013422,6.528585,9.817395,8.369837,0.842856,-8.120347,6.476751,4.573459,-2.703897,4.296070,5.252201,5.264508,-2.322412,-8.820107,-1.631129,8.654568,5.875653,7.543298,7.590990,-0.688059,-3.006309,-9.239563,7.366036,-9.911520,7.110068,6.458332,-8.598916,9.720452,9.864515,3.973488,6.556216,-8.885169,6.898193,6.983800,-0.796671,-0.150128,1.599489,-8.163443,-3.890006,-4.247395,6.775191,-4.750799,-1.194879,-3.806174,-2.415563,0.142490,7.614671,-7.644226,1.794920,5.851428,9.393300,2.212040,-1.478798,-7.759608,-0.091377,2.298603,-7.015663,9.112530,4.454368,-1.005602,3.423749,0.473349,7.852613,-8.166527,-3.269900,-5.282949,6.468682,-5.532879,0.820604,-6.940353,6.693900,5.131760,-9.426990,-8.821290,9.653388,1.955015,-1.682321,6.114663,-8.980687,2.331758,8.870554,6.166433,4.746108,1.608914,-4.461565,-4.692245,7.795574,3.983391,-5.157180,7.919221,-4.000051,-2.634777,4.449465,-6.958970,2.816907,-9.431932,4.513719,4.120967,0.304679,0.280916,9.537682,5.185610,-7.299729,-5.683447,-2.395776,-6.320498,-3.250935,-4.872945,-5.375909,3.261560,-5.744394,-4.476991,9.360786,-9.587300,-5.358194,-5.196226,5.750167,-6.632769,-7.711554,-5.382780,-6.392539,2.440810,5.638247,4.623821,-5.546783,-9.508175,-5.284370,-3.362516,-6.229828,7.414106,3.068938,-6.124720,3.943898,-7.007105,3.679912,6.179592,0.487132,-3.203059,-4.550611,-7.779050,0.543591,4.075157,6.384149,0.334509,-1.597525,7.989891,5.281670,-4.197691,-9.971904,-4.997856,4.083962,-4.657629,7.423194,3.629564,-1.061618,-4.007431,-2.368857,3.595566,-3.440425,-1.454979,0.369009,-1.344673,0.484703,-8.356285,0.690593,-1.769495,-1.914006,1.980596,1.610316,5.336574,-9.954993,9.823778,3.254652,-9.944517,-7.474099,-4.824208,-7.808383,-2.723390,9.543732,-2.973348,0.135371,5.236281,8.251609,3.649415,9.369760,-8.983927,0.036274,6.949659,-9.785415,-5.301377,-7.000691,7.264192,2.112143,-6.741816,-5.611555,5.710258,5.172712,9.543759,0.197568,-4.656847,4.289008,-3.250528,-5.994620,1.333774,6.675411,0.689119,-7.235296,7.152575,-5.484710,-2.627006,-4.551916,8.916079,-8.048243,-4.216012,5.288448,-1.665890,7.540212,7.028418,-2.026237,-0.816034,-8.052365,4.025419,-1.874551,-1.683006,1.689873,1.346968,-2.894925,8.590918,3.882670,-0.115728,-5.114181,0.147693,0.582498,-5.802821,0.269278,-6.580630,-5.936470,-4.979452,-0.657347,-3.220063,2.149642,0.594463,-7.703207,-2.220571,-5.505194,-0.873902,-2.802827,-2.974253,1.030815,7.774788,3.259387,-3.673354,-3.091154,9.511763,-7.293757,-9.403065,0.802465,6.645683,-2.420784,-9.174728,6.905424,-6.570462,-9.693697,6.840640,7.372268,6.980032,-6.356062,-4.567017,-9.292257,3.394098,4.236403,2.986852,7.249355,-4.708025,-5.973111,-2.443230,-3.480806,4.917741,7.389069,-9.063200,-0.699698,-1.148067,0.960703,3.208900,-0.273068,-0.707870,-4.242907,-1.765467,9.313010,8.100303,1.242375,2.034145,-5.912631,4.375099,2.269025,-9.111685,1.241725,2.289111,-1.156309,-6.495144,1.779333,-1.694652,-2.257415,-0.475231,-2.108539,-8.650086,0.027536,7.216513,-3.981962,-7.905881,-6.288530,0.959650,9.445667,-5.962984,8.420842,-1.575483,-6.107433,-2.257101,0.138635,-1.927790,2.224843,-0.651299,-3.086386,-7.800799,-2.860353,-8.140373,-2.747541,-6.207253,-1.070160,2.711831,9.566749,1.928511,-5.064498,0.963050,-9.224618,5.066410,-4.315097,-4.434531,7.619368,5.166329,4.535725,-7.582630,-5.797948,8.642881,-5.766934,-5.242908,-0.417228,8.815935,-2.226433,3.728264,-2.547575,-6.430565,-8.425737,2.732201,0.094365,8.088719,-5.084871,-0.139572,-4.944263,-6.273341,-8.485063,-1.911810,-4.947635,-2.760300,-1.950766,4.885727,-7.166506,9.146803,-4.389504,0.949014,-2.709043,1.678337,-9.625924,2.535735,9.995905,3.887921,-1.081569,4.893591,0.504054,3.100435,6.948827,-9.378298,-9.579446,-8.697869,-8.858371,0.332774,-6.320297,-0.286508,-7.625381,2.962544,1.753827,-3.259549,-4.147685,-9.823753,6.441697,-4.103266,-9.070332,-3.603896,-2.137972,8.327015,-3.144053,4.562631,8.693333,-5.009921,8.254499,-9.123413,-0.448936,0.055350,-1.547266,7.434087,9.180024,-2.130318,-8.129749,4.296673,5.000730,-8.099869,9.317936,-4.726192,2.637923,-5.062104,-0.488030,2.621454,2.394494,2.073134,-6.800932,6.598961,-4.522376,3.615678,2.271661,-8.608099,3.527698,-3.758226,-3.120909,-9.662972,8.693575,8.454233,1.070105,6.929458,1.234961,-0.415213,2.536178,7.956974,5.559104,-2.651097,2.445754,3.948257,2.100432,6.631049,-7.629920,9.352303,1.331880,4.404378,5.235773,6.958403,0.347933,-8.679959,-9.560953,9.751960,-0.858842,-9.366243,-7.325404,6.593434,2.695380,3.772602,-3.740278,-9.491442,0.662923,-5.578299,-0.707928,1.391211,0.672922,-6.710856,-5.380327,2.165306,0.466764,-5.060181,3.603463,-8.843348,4.784551,-5.686699,-9.048665,6.758492,-3.490313,4.962370,7.852403,-0.342581,-3.115119,-5.611272,-9.742670,-7.617685,8.890764,2.208900,-6.412615,-8.329346,-9.478997,6.341968,9.691569,-8.473727,-5.068133,-8.360898,8.204684,-0.919831,5.790464,-6.225175,-4.669461,0.350585,5.666107,-6.440004,-2.465960,0.535298,1.960429,-6.624357,9.323485,-5.923487,-1.327565,-7.014298,2.670347,0.711828,7.067735,1.836002,-6.136131,-5.908100,4.656492,6.663383,1.583221,-1.455377,4.068571,0.546553,-5.736300,-1.222651,-8.418693,-5.876144,5.173154,-7.342394,7.017368,-2.718454,-4.625962,7.732479,0.483070,-2.189453,-6.546271,6.499416,7.475000,-1.465792,-7.186760,-6.550344,4.820547,9.273853,-1.369147,-9.007268,2.194827,-7.305328,9.899599,5.056349,-0.499936,4.148647,2.245707,1.038091,7.366974,-8.984747,-3.784625,-0.591482,8.749449,2.142579,0.968604,1.320723,-8.773960,-6.935760,1.821070,6.447569,6.358514,-5.986411,4.524911,7.983934,-6.112318,1.089687,-6.944044,-9.358632,9.930984,-1.960286,8.952475,2.840550,5.856867,0.567528,5.886255,-5.922599,4.676116,8.032764,-8.453916,8.008266,-7.540768,-9.440901,-6.977068,-3.068608,-9.117775,-7.193044,-3.832077,7.171518,-5.161307,6.261866,7.938605,-1.450501,-3.524680,-9.059475,3.211965,6.949862,-7.194081,-6.900455,5.485272,-6.788820,7.969602,0.230256,-2.948481,4.672875,-3.839562,-4.266097,4.212489,-0.465000,5.958920,-0.036418,5.299942,-0.909377,0.655378,-7.577098,-1.351006,-0.708254,-2.709797,5.108197,7.111100,4.171909,0.827860,6.917826,-0.355407,7.162591,-6.505904,-5.689130,9.306508,2.246241,-6.093532,6.413874,-2.420183,-1.593906,-2.310264,0.063968,5.762074,8.589596,8.304520,4.893290,-1.266148,8.083460,-9.619679,-8.855329,-4.496727,3.822002,-8.584475,0.234662,-4.191401,8.431737,-1.797916,-7.258120,9.536934,-2.499581,0.145494,-5.227854,-1.039809,-6.425431,-9.953518,7.359047,3.195757,9.931853,8.161357,-4.871749,-9.426603,-2.714485,1.591115,-9.796594,-9.511154,5.191281,-5.704994,-7.720333,0.097142,-3.838977,2.612812,-3.852283,-1.533602,-6.125630,2.178866,1.034521,-1.770593,-5.253505,9.158586,-1.176579,2.048016,3.880263,-5.389649,6.284273,-5.190765,7.374070,7.343037,-8.793801,9.843534,7.595843,-0.081911,-0.555097,3.391393,-7.695369,-8.255179,-2.573758,-1.417478,9.725708,3.996641,-0.113404,-6.342601,-9.448049,2.082147,9.632562,9.231395,6.246502,-3.948323,6.410728,-9.362656,-4.366054,-9.813429,0.280425,-3.998589,7.404625,8.102032,1.458177,2.910195,0.141313,6.811512,4.426461,1.244248,-7.576241,5.913575,2.715273,8.840697,-0.608091,7.362985,-8.845989,-4.631278,9.493992,0.870946,-0.064382,-8.678420,2.257803,-0.289449,7.398817,-4.310430,2.173113,1.535646,6.495067,-4.023838,-3.804695,8.927915,5.859829,0.578574,9.202998,-8.117454,7.129912,5.144463,-6.894874,-1.264818,-2.696504,8.951954,-7.589016,-3.690095,7.985704,4.015160,-6.189287,-1.487015,-8.527768,0.059519,-9.502691,7.843679,-2.583285,-8.672989,4.659646,-8.567429,4.862344,3.390287,-8.227101,-9.326511,1.639408,-0.425503,-3.421015,9.358773,-4.704791,0.199334,-2.019405,-5.755027,9.275283,0.853796,5.618273,-5.859172,7.445834,-5.130220,-7.158946,1.559263,-4.864864,6.173387,-3.697417,-1.501123,6.700326,7.192313,-4.176486,5.316826,9.462467,-3.431085,-7.115518,0.596305,3.186285,-5.522067,-1.432439,0.097580,3.554339,-5.799505,9.749968,-1.820339,-6.942213,4.469058,8.416001,-1.445907,6.608504,-0.669684,-3.668386,-3.393523,2.189075,9.788849,-4.149956,5.204406,2.141283,-2.060498,-9.732071,-2.454594,-1.564179,8.268527,-5.867765,-4.850285,8.874446,2.029388,9.659812,7.737010,-2.745993,-9.171708,1.121798,-2.583974,2.027825,5.073127,2.961610,-2.321699,1.265809,-3.158935,-0.494712,-6.732457,2.447022,2.635743,3.255087,3.108908,4.184984,-3.357011,3.737222,7.087007,1.017597,-7.621396,-8.898341,5.871935,7.931719,5.493834,-2.838910,3.210872,-2.431786,-0.808116,4.893206,8.464235,-2.188054,5.173134,5.148733,-2.118928,0.451616,9.420543,-1.210462,-1.102189,-9.069842,1.358778,5.714800,-5.223023,7.843717,1.422961,3.521921,6.009766,-1.264126,6.185604,7.951424,9.833473,4.619287,2.996129,0.343405,5.278196,8.575611,-0.022597,0.115110,-6.710714,-8.850941,4.396782,4.714821,5.110136,2.044734,9.170244,-3.091699,1.518103,3.047678,7.860066,-3.946892,1.802737,7.512934,-4.421906,-1.617513,7.397837,-0.128451,-8.558359,5.124035,-9.739975,4.257685,-7.811155,-3.928025,7.463622,-1.825631,-8.079641,2.788572,-5.135691,7.953792,8.394423,-5.082421,-2.588920,8.394444,-9.360363,-8.134411,9.390558,-1.846947,-0.236935,7.120229,-3.991906,-1.198758,8.722107,-7.964410,5.953903,-7.406692,-4.612489,6.795019,-7.194135,4.197294,-6.175655,5.597589,3.008900,7.464521,-3.643332,1.835183,-5.432326,5.725417,3.198458,8.897180,2.917324,5.923709,-4.742858,2.507774,6.792907,3.982613,-4.084835,5.109094,-6.141552,1.558373,-1.043849,-9.071427,6.617608,-4.292320,8.898932,3.739355,4.355324,-4.312017,3.282898,-5.259850,3.694288,-1.106428,-8.331111,6.102530,-9.733129,2.935441,-0.618746,6.615467,7.027760,-2.358166,-4.142318,-0.737231,0.199973,4.497525,-4.215898,2.906452,-2.566517,8.937842,-7.565530,5.654984,-7.649352,7.311873,-3.436233,-5.501229,-0.650078,9.411341,-5.000020,-0.092780,-4.656339,-5.059252,-0.045845,-2.707423,-0.672943,6.268636,7.480689,6.736947,-1.869317,-8.967684,-4.749974,-1.188137,7.311391,3.011245,8.832746,5.521849,9.951271,-6.428151,-6.371386,-5.855929,9.950565,3.755033,7.910213,-2.489427,7.869479,-9.772671,1.335638,-7.786579,-9.570652,-9.835279,9.608477,-4.439903,7.182100,-0.244688,6.622251,-5.892821,9.612031,9.327759,5.491728,-9.409452,-9.368610,-5.146711,2.074424,2.740986,-4.253256,-0.737213,5.316988,-5.276542,7.433288,-3.594603,-7.387789,5.859862,-8.114742,-1.625353,-9.960366,-4.942066,6.428262,-8.261870,3.196123,9.509357,8.408016,-8.849865,-9.965509,-8.496893,5.954600,-5.536239,5.439489,5.061149,5.264615,9.295569,-4.772189,-9.041391,-0.087534,6.391048,-0.636831,9.399219,-0.310705,7.095067,3.156834,-0.306424,-0.961124,-0.120375,0.971294,-4.363324,3.983048,-5.867696,7.491976,3.865485,-7.066377,-9.890469,0.582414,-4.222127,8.900553,-7.023323,2.436882,6.162983,-1.742490,-7.115461,-9.512963,-4.473981,-3.822422,4.949678,8.616853,-6.663427,5.645171,4.718290,-2.440042,-9.958765,4.435902,-2.646939,-7.304292,-8.502963,6.081629,-5.084345,1.042867,6.007978,5.386214,-0.870132,-9.339047,-3.756158,1.580356,-8.302549,-5.787711,7.947471,-2.165573,-3.945409,4.034456,2.695586,9.885824,-8.671017,-5.604054,2.256576,0.474637,-6.507935,-6.208731,5.599401,-5.277444,8.146782,3.683542,-0.668657,5.032808,-5.507145,-1.605074,5.845993,7.957774,-2.492338,-5.890402,7.998441,9.865497,8.441461,9.994446,2.666602,-1.659944,-1.180914,0.642564,5.016426,6.489118,-5.304185,8.144230,-3.154019,9.779669,-5.458561,-4.386833,7.734420,-4.346794,1.315910,-0.850498,9.808444,2.260450,-4.710781,6.699330,1.572206,6.565876,-9.596807,-5.493622,6.263654,6.221567,2.246313,8.759975,-0.269401,1.951053,2.328992,-4.017412,-9.433637,-6.660309,5.874865,9.889683,6.579312,-3.029999,8.097278,-6.134521,-6.029223,9.968500,6.120642,2.330237,-3.736301,2.039492,-6.349772,-2.123024,4.427200,2.234045,-6.733983,-0.050868,8.400827,5.334087,8.490397,7.641391,-5.332125,5.793242,6.940986,5.315708,1.460591,-8.150370,-0.984831,-8.467537,4.809611,-5.634614,-1.720787,4.888649,6.128553,7.396886,-9.495616,6.536941,9.473114,-3.909953,2.448290,-4.342468,-7.444472,-8.174247,7.946208,3.912640,-1.033207,2.811670,-0.544770,-3.943171,0.670797,-3.917110,-5.147378,-7.330046,-5.325111,-3.812633,-3.043769,-0.240332,0.796491,-3.322122,3.624909,-5.987868,7.331777,6.468661,-8.247208,-5.832789,5.098552,-7.246920,-5.641738,6.267678,8.406904,-7.003264,-3.499177,2.416918,9.778757,-5.451095,4.440507,-5.121507,-8.972263,-2.592428,7.949675,3.513790,0.619057,-8.057708,-9.980455,-3.059943,3.797868,-6.473733,2.046710,-4.736488,1.133715,0.275031,9.310290,4.836093,9.985618,-7.133484,-9.116353,9.283200,1.438095,7.250902,0.713644,-6.087267,-3.369302,-4.924248,-3.622517,-5.930763,-2.754961,-6.864788,6.789912,1.290991,3.359344,2.343688,0.089329,9.359653,-8.580400,7.664218,-2.320660,3.818684,-0.812156,-1.876840,-9.869356,-3.897272,-6.351348,-5.277667,-1.083983,3.446659,3.074421,-4.039967,2.391628,-6.836103,-0.162980,-7.706593,2.888754,-3.709717,6.378963,-8.564374,1.767658,-5.917605,2.870485,-8.063810,1.897705,7.754788,-4.745635,4.238983,6.596555,-5.666133,5.123493,-5.230841,-2.027215,-7.361309,5.327663,2.852942,5.037927,-0.747026,-4.668797,2.219950,-5.283189,-8.477810,-7.757683,0.301457,4.491660,8.454469,-9.582726,7.783560,-9.031052,-9.179955,-2.032296,4.561185,-4.540644,-2.010213,-7.739527,-7.058020,-6.349244,4.002759,-8.017332,-4.331663,-2.555698,5.412689,0.443641,8.562667,-7.170024,8.616767,6.185775,1.944298,8.789714,-2.330239,4.946267,-3.419264,-0.520323,-2.770200,-4.969323,-3.924926,-2.333639,8.530544,2.344177,-9.888178,1.820051,-4.398576,-7.009446,-9.756691,-4.341116,0.453159,7.694719,2.601451,3.569530,-5.069329,7.062996,2.015916,-8.340428,8.906276,6.046433,-2.878397,-4.858297,-0.558806,-9.612011,-9.386996,1.537209,-6.142325,9.387907,-6.862943,3.554683,5.913855,-7.766386,-2.522913,1.595082,-6.987502,9.338142,0.957696,8.710428,-2.502368,-0.343547,-0.309600,-8.889963,-3.356239,3.800070,0.059010,-6.079406,2.533949,7.117874,5.959868,3.370225,9.361648,-6.522785,-6.020770,-5.441540,4.986339,7.953513,6.533813,-4.029077,-6.206548,-9.520019,-2.119597,-4.823001,6.828694,-5.390118,-0.594000,-3.000914,-9.378512,9.865253,8.702569,-8.564239,-3.835967,-5.403228,9.640204,-8.104120,-6.262176,5.549428,9.233471,-0.324189,1.755775,4.943063,5.325316,-9.180475,1.926115,-1.367247,4.517724,7.835896,0.051115,2.886124,8.521829,-3.844727,2.527345,-7.127534,3.949958,9.125160,4.142149,-1.053507,5.102198,0.528772,-2.910504,3.370252,-6.175217,-3.632977,-3.537258,-7.248159,8.084773,-2.117056,2.313940,4.233315,7.429502,9.429082,2.203930,6.484798,-5.887481,6.702968,8.084506,3.145022,-1.173126,7.244695,5.843864,-6.870651,-1.631662,1.282130,4.725796,-1.428996,-8.851141,-4.675050,7.068325,-5.586761,-7.829577,1.263599,-8.010910,5.845831,-4.349782,4.601414,-1.909767,-4.474556,-5.754595,-6.499384,-2.545982,1.964901,4.301096,-2.125100,9.019452,-4.665208,0.855851,8.995559,-7.156594,-4.890845,5.179506,9.267097,3.021826,-6.119301,5.624131,5.954175,1.311633,-8.968694,-4.814378,-9.672811,3.970060,7.466384,-5.841441,-2.449484,2.790460,1.879506,5.405627,4.997225,-5.297181,-3.726801,-9.307822,0.964775,-6.642728,-5.820587,-7.343225,3.668820,-1.554457,-2.883055,9.929531,1.043305,9.892485,-0.193101,0.628096,8.917046,9.789956,-3.452128,-0.937237,-1.116670,6.566796,6.911058,0.314414,-5.600992,-9.781047,-6.976303,6.632381,-5.702008,-8.957711,1.382756,-0.999651,1.667739,8.419145,-3.230096,4.202255,-4.390330,4.653468,-2.950600,-1.486743,-3.048790,-4.695241,2.137805,4.279672,-0.403650,-6.926874,0.244490,8.751483,-0.639127,-7.910747,-2.445341,8.510498,4.130822,-3.591141,7.930984,-4.083894,6.816637,-5.483876,-1.849751,0.806751,6.858140,8.071251,-3.450342,5.721910,2.118332,6.357813,4.401482,-5.245510,-4.549666,4.629700,-2.692151,2.894973,-0.997217,-4.300346,3.685538,3.452989,6.723085,-2.293408,0.627769,-9.653733,5.242487,-0.302137,7.748503,4.632003,-8.284538,0.007246,-3.395783,-2.849803,2.513060,-0.330837,-1.771557,6.386183,-7.217654,-6.082307,-2.751854,-7.811574], dtype = "float64")#candidate|7678|(1728,)|const|float64
call_7677 = relay.TupleGetItem(func_6943_call(relay.reshape(const_7678.astype('float64'), [16, 9, 12]), relay.reshape(const_7678.astype('float64'), [16, 9, 12]), ), 0)
call_7679 = relay.TupleGetItem(func_6946_call(relay.reshape(const_7678.astype('float64'), [16, 9, 12]), relay.reshape(const_7678.astype('float64'), [16, 9, 12]), ), 0)
uop_7686 = relay.log(var_7671.astype('float32')) # shape=(63, 1)
output = relay.Tuple([call_7664,call_7668,const_7669,const_7670,var_7672,var_7673,call_7677,const_7678,uop_7686,])
output2 = relay.Tuple([call_7665,call_7674,const_7669,const_7670,var_7672,var_7673,call_7679,const_7678,uop_7686,])
func_7692 = relay.Function([var_7671,var_7672,var_7673,], output)
mod['func_7692'] = func_7692
mod = relay.transform.InferType()(mod)
var_7693 = relay.var("var_7693", dtype = "float32", shape = (63, 1))#candidate|7693|(63, 1)|var|float32
var_7694 = relay.var("var_7694", dtype = "bool", shape = (1536,))#candidate|7694|(1536,)|var|bool
var_7695 = relay.var("var_7695", dtype = "float32", shape = (756,))#candidate|7695|(756,)|var|float32
output = func_7692(var_7693,var_7694,var_7695,)
func_7696 = relay.Function([var_7693,var_7694,var_7695,], output)
mutated_mod['func_7696'] = func_7696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5086_call = mod.get_global_var('func_5086')
func_5087_call = mutated_mod.get_global_var('func_5087')
call_7749 = relay.TupleGetItem(func_5086_call(), 0)
call_7750 = relay.TupleGetItem(func_5087_call(), 0)
output = relay.Tuple([call_7749,])
output2 = relay.Tuple([call_7750,])
func_7752 = relay.Function([], output)
mod['func_7752'] = func_7752
mod = relay.transform.InferType()(mod)
output = func_7752()
func_7753 = relay.Function([], output)
mutated_mod['func_7753'] = func_7753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4773_call = mod.get_global_var('func_4773')
func_4774_call = mutated_mod.get_global_var('func_4774')
call_7767 = relay.TupleGetItem(func_4773_call(), 0)
call_7768 = relay.TupleGetItem(func_4774_call(), 0)
output = relay.Tuple([call_7767,])
output2 = relay.Tuple([call_7768,])
func_7770 = relay.Function([], output)
mod['func_7770'] = func_7770
mod = relay.transform.InferType()(mod)
output = func_7770()
func_7771 = relay.Function([], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6198_call = mod.get_global_var('func_6198')
func_6200_call = mutated_mod.get_global_var('func_6200')
call_7862 = relay.TupleGetItem(func_6198_call(), 0)
call_7863 = relay.TupleGetItem(func_6200_call(), 0)
func_2345_call = mod.get_global_var('func_2345')
func_2348_call = mutated_mod.get_global_var('func_2348')
const_7870 = relay.const([-7,-10,2,9,-3,6,-7,-9,10,10,6,-8,5,10,1,5,-2,9,6,-2,10,-9,6,9,-4,5,-9,1,-9,7,-4,-7,9,4,6,4,-6,3,9,-8,-3,4,-8,-7,-10,6,-9,2,-3,-5,2,4,-4,-10], dtype = "uint64")#candidate|7870|(54,)|const|uint64
call_7869 = relay.TupleGetItem(func_2345_call(relay.reshape(const_7870.astype('uint64'), [1, 9, 6]), relay.reshape(const_7870.astype('uint64'), [1, 9, 6]), ), 1)
call_7871 = relay.TupleGetItem(func_2348_call(relay.reshape(const_7870.astype('uint64'), [1, 9, 6]), relay.reshape(const_7870.astype('uint64'), [1, 9, 6]), ), 1)
output = relay.Tuple([call_7862,call_7869,const_7870,])
output2 = relay.Tuple([call_7863,call_7871,const_7870,])
func_7873 = relay.Function([], output)
mod['func_7873'] = func_7873
mod = relay.transform.InferType()(mod)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mutated_mod.get_global_var('func_7873')
call_7874 = func_7873_call()
output = call_7874
func_7875 = relay.Function([], output)
mutated_mod['func_7875'] = func_7875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7879 = relay.TupleGetItem(func_6592_call(), 0)
call_7880 = relay.TupleGetItem(func_6593_call(), 0)
func_7438_call = mod.get_global_var('func_7438')
func_7441_call = mutated_mod.get_global_var('func_7441')
const_7884 = relay.const([2,7,1,5,-3,3,5,-7,4,-4,-9,-9,9,-3,5,1,5,9,5,-5,10,-6,-1,3,7,8,-4,-9,3,1,9,7,10,-9,1,3,-1,-6,4,-6,7,-4,-3,3,6,-5,-6,8,-8,2,10,3,-4,4,8,-8,-5,7,7,5,-4,8,-3,-9,-5,2,-4,-7,-4,8,-10,-1,1,3,8,3,6,-3,8,-2,2,-8,-9,-5,-7,-8,-1,2,-7,-10,-10,-6,-6,9,-2,9,-5,10,-4,-8,10,-10,3,1,-6,4,5,6,2,5,4,-7,1,-4,2,7,-8,-3,8,2,6,-10,7,-2,1,2,-1,6,-4,-8,2,10,-2,-10,6,2,9,1,-10,-4,10,6,-5,-3,1,-7,7,-3,-10,-9,7,6,-5,-2,2,6,2,-5,-2,-7,-10,-6,-2,3,-3,6,-4,-8,1,-6,7,-7,1,7,-10,6,7,-6,4,10,-4,9,-3,8,6,9,5,-4,9,10,4,-1,2,9,-9,-3,-9,10,7,6,-2,-9,-2,-3,-2,2,1,-6,-3,6,8,-4,2,-7,-3,-4,-7,-4,-6,1,10,-4,9,3,-7,-3,-10,9,2,-1,-10,-2,6,5,-4,9,-2,-4,-3,2,-8,6,-5,-8,-3,-3,-3,-10,-2,-10,3,-10,-4,-5,-3,-8,3,1,-9,4,7,4,4,-9,-1,3,-10,-9,9,-3,3,5,5,6,4,-7,9,3,5,10,-2,-10,-3,-9,4,-7,3,-5,-8,4,10,5,3,3,-9,-4,3,5,4,10,-8,-5,9,-9,10,10,-5,9,2,-5,-4,-2,-2,5,-3,-4,-2,-1,-10,1,-6,-1,-6,8,-2,-9,-2,3,9,2,1,-2,6,7,6,7,8,4,8,-2,-4,9,3,2,8,-4,9,-5,1,-2,-9,-10,8,-3,-5,9,5,7,-7,-9,-2,-5,9,7,-1,9,-9,7,3,4,-4,-9,-10,-8,-7,2,-10,-2,9,10,-10,10,-8,-7,-8,10,3,-2,8,-9,-6,6,-10,-6,-8,8,7,-7,6,7,6,-5,-7,-3,-8,-9,5,-10,-4,5,3,1,-1,5,4,-1,-9,9,-5,10,5,6,3,-7,4,-10,-5,-7,1,4,-3,-8,-3,-8,-1,10,8,-6,-5,9,-4,4,-1,-6,4,8,6,2,4,6,10,1,-5,10,-1,7,9,-5,-4,-3,-2,6,8,5,-9,5,-10,-7,3,-3,8,2,-3,10,-9,-6,5,-6,1,4,4,-1,-8,-9,8,7,-4,-5,-5,4,7,4,-3,4,-6,8,-10,6,7,-10,7,-1,6,8,9,7,4,-8,4,5,-2,1,1,-1,3,3,9,-3,-10,-6,6,6,7,-9,8,2,-8,-2,-8,-9,-4,-3,6,8,8,8,-9,4,-8,6,8,6,1,-6,2,-2,-6,9,-10,2,3,9,-2,-8,5,-6,4,-10,-1,3,-10,2,-7,-9,-10,-4,1,-4,6,5,10,6,-5,-8,-1,-2,4,-6,-4,10,6,-6,-9,1,-6,7,-8,-9,-7,9,-6,8,4,-2,9,-2,-10,-3,3,-4,-10,3,4,-1,7,-1,-3,-4,3,7,2,8,-10,-8,-4,-1,3,-4,-6,-10,-7,7,-1,8,8,7,-7,-1,5,1,2,-8,6,4,7,8,-6,-5,-7,-3,8,-7,5,3,7,-1,-6,6,1,5,-5,-1,7,9,6,-8,-2,-1,-3,6,8,1,-8,-5,8,-4,-4,-5,8,-4,-6,3,9,4,8,-2,-7,10,9,-4,-7,1,3,10,-7,-10,-9,10,6,-8,4,-9,-2,-8,-4,9,1,1,-3,7,-7,7,-9,4,3,-8,-3,-9,7,7,10,-3,5,4,8,1,8,3,-5,3,-10,-4,-9,5,8,9,7,8,-7,1,-4,3,8,-1,5,-10,6,-6,-5,-1,5,3,-2,-6,-3,-6,-9,3,9,2,-10,6,6,-1,3,8,-1,-1,-1,-6,2,-3,3,8,-10,5,-3,-5,3,2,9,-5,10,-5,-1,-5,-3,3,4,9,4,-5,-4,-7,-10,2,-10,10,-1,1,6,-4,-6,-8,-10,8,10,10,6,9,-6,-5,-8,-6,-10,2,5,-6,4,-3,10,10,-5,-1,8,8,3,-10,-8,9,-5,5,-6,3,4,6,-7,3,-7,-6,-4,-8,-10,7,7,6,-6,2,-4,4,10,2,-4,-1,9,5,4,2,4,-9,-7,2,10,5,-8,-1,-9,-6,-10,-6,-6,6,-6,1,-10,-2,-9,-8,6,-2,4,-3,-8,6,7,1,-4,-3,-5,-4,-5,2,9,-1,-5,1,8,-2,6,6,-3,7,4,-2,4,-4,10,-3,7,-6,-8,-4,3,-3,-8,-2,-6,10,1,-8,6,4,-1,-5,-2,1,-7,6,-2,1,-10,1,-4,-5,-3,-7,-9,4,-9,-8,-9,-3,-5,8,-10,7,2,5,1,8,-6,-2,10,-5,-5,10,-4,-2,-1,-4,9,-2,-1,6,6,-3,-1,-9,1,9,-9,-9,3,-9,2,-7,7,4,6,-10,-4,-7,10,-7,10,-8,-7,1,8,4,5,1,-1,-2,4,9,6,4,-2,8,9,10,-3,-5,10,1,1,7,-8,8,10,-10,5,-4,-7,6,8,-1,4,-10,-5,10,-4,1,8,3,-9,6,-9,9,-3,-1,1,-2,9,-1,-2,4,10,7,5,5,5,5,2,-9,1,5,-5,8,8,10,-2,7,8,-7,-6,-6,-4,4,-5,10,-6,-7,-2,4,-4,-10,-9,-8,3,-9,-8,1,-5,9,-1,-7,3,-7,-1,-3,-7,3,9,2,-7,-2,-5,-8,-9,2,5,6,-3,1,6,-1,8,-7,-3,1,-10,-6,8,-5,10,-7,-7,3,6,6,-1,-4,-10,5,10,3,1,-4,3,7,5,10,-7,-1,-10,-6,3,9,-1,-7,2,-10,1,-3,-3,10,6,-9,-7,-7,-9,-8,-5,8,-1,8,6,8,3,-10,4,2,1,3,4,-5,-5,7,-9,-5,-9,8,2,-1,-7,-9,2,-1,5,-1,3,1,-8,-9,3,-1,-8,8,-5,3,1,-3,7,7,7,10,3,-10,-2,-10,-5,-9,-10,-1,5,8,-7,-10,4,-6,-5,-3,-2,9,-1,2,10,7,8,6,3,1,5,-6,-7,2,-3,-10,5,10,8,2,-3,1,-8,-5,1,4,-5,6,7,6,2,-4,5,5,-7,-3,-7,-2,-1,9,-2,1,3,1,-7,9,-5,6,-8,3,-7,6,1,10,-4,6,-2,-5,-4,7,5,9,-1,-10,-6,-4], dtype = "int16")#candidate|7884|(1260,)|const|int16
call_7883 = relay.TupleGetItem(func_7438_call(relay.reshape(const_7884.astype('int16'), [1260,])), 1)
call_7885 = relay.TupleGetItem(func_7441_call(relay.reshape(const_7884.astype('int16'), [1260,])), 1)
func_6876_call = mod.get_global_var('func_6876')
func_6881_call = mutated_mod.get_global_var('func_6881')
const_7915 = relay.const([-6.145165,0.386517,3.382500,-7.539677,0.253139,-7.904853,-0.041156,6.211275,-2.739409,-9.333868,7.626407,9.390456,2.264966,3.923301,3.807777,-1.404564,0.463730,-4.845703,-9.689067,-3.790175,-5.667405,-3.703835,7.085430,-7.767084,1.914551,6.562940,2.947268,8.068590,-1.903997,-9.562212,4.332726,7.546818,-6.567740,3.873641,9.412697,7.974635,-0.239329,-5.746512,1.289360,8.583852,2.460226,4.338491,4.113438,-5.187640,-3.225917,0.220596,2.626666,-5.557244,-0.522888,-5.819863,0.666688,9.354492,4.260179,5.439922,9.685714,-4.979322,8.280321,2.450477,-4.170654,-6.940811,-3.922252,-9.998148,9.341327,-8.735014,-3.453459,9.811262,-0.623366,3.652522,-6.169600,-9.016567,3.574586,6.445360,-4.436241,2.194676,-2.199029,7.486573,9.252481,-2.592607,9.338021,-1.135812,7.355563,2.618765,5.003102,-7.572613,-3.964606,5.204551,3.553605,-9.173582,9.222526,-2.589958,-7.155723,5.779844,9.597303,-9.817545,-5.151309,-0.391261,-4.591637,9.615821,-7.140686,6.164670,-9.144813,-3.934490,0.785077,6.128020,-1.856994,-4.579160,-1.744347,-8.226505,8.660746,-7.740148,9.384410,-3.476902,-1.370125,0.506958,3.564333,9.797427,6.415054,7.107524,2.319462,-5.941466,-1.575748,-9.781020,-9.342211,-2.891278,1.981442,7.601381,3.353407,-9.729467,2.420979,-4.079713,-4.983575,-9.128899,6.803774,8.777571,-1.787693,-6.553717,-1.976276,0.882217,0.848275,2.103748], dtype = "float64")#candidate|7915|(140,)|const|float64
var_7916 = relay.var("var_7916", dtype = "float32", shape = (63,))#candidate|7916|(63,)|var|float32
var_7917 = relay.var("var_7917", dtype = "uint64", shape = (4, 132))#candidate|7917|(4, 132)|var|uint64
call_7914 = relay.TupleGetItem(func_6876_call(relay.reshape(const_7915.astype('float64'), [5, 28]), relay.reshape(var_7916.astype('float32'), [63,]), relay.reshape(var_7917.astype('uint64'), [528,]), relay.reshape(const_7884.astype('int16'), [1260,]), ), 11)
call_7918 = relay.TupleGetItem(func_6881_call(relay.reshape(const_7915.astype('float64'), [5, 28]), relay.reshape(var_7916.astype('float32'), [63,]), relay.reshape(var_7917.astype('uint64'), [528,]), relay.reshape(const_7884.astype('int16'), [1260,]), ), 11)
output = relay.Tuple([call_7879,call_7883,const_7884,call_7914,const_7915,var_7916,var_7917,])
output2 = relay.Tuple([call_7880,call_7885,const_7884,call_7918,const_7915,var_7916,var_7917,])
func_7919 = relay.Function([var_7916,var_7917,], output)
mod['func_7919'] = func_7919
mod = relay.transform.InferType()(mod)
var_7920 = relay.var("var_7920", dtype = "float32", shape = (63,))#candidate|7920|(63,)|var|float32
var_7921 = relay.var("var_7921", dtype = "uint64", shape = (4, 132))#candidate|7921|(4, 132)|var|uint64
output = func_7919(var_7920,var_7921,)
func_7922 = relay.Function([var_7920,var_7921,], output)
mutated_mod['func_7922'] = func_7922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7770_call = mod.get_global_var('func_7770')
func_7771_call = mutated_mod.get_global_var('func_7771')
call_7985 = relay.TupleGetItem(func_7770_call(), 0)
call_7986 = relay.TupleGetItem(func_7771_call(), 0)
var_7995 = relay.var("var_7995", dtype = "float64", shape = (1008, 4))#candidate|7995|(1008, 4)|var|float64
bop_7996 = relay.bitwise_xor(call_7985.astype('uint32'), var_7995.astype('uint32')) # shape=(1008, 4)
bop_7999 = relay.bitwise_xor(call_7986.astype('uint32'), var_7995.astype('uint32')) # shape=(1008, 4)
uop_8014 = relay.asin(var_7995.astype('float64')) # shape=(1008, 4)
output = relay.Tuple([bop_7996,uop_8014,])
output2 = relay.Tuple([bop_7999,uop_8014,])
func_8018 = relay.Function([var_7995,], output)
mod['func_8018'] = func_8018
mod = relay.transform.InferType()(mod)
var_8019 = relay.var("var_8019", dtype = "float64", shape = (1008, 4))#candidate|8019|(1008, 4)|var|float64
output = func_8018(var_8019)
func_8020 = relay.Function([var_8019], output)
mutated_mod['func_8020'] = func_8020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mod.get_global_var('func_7274')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_8047 = func_7274_call()
call_8048 = func_7274_call()
func_6446_call = mod.get_global_var('func_6446')
func_6449_call = mutated_mod.get_global_var('func_6449')
const_8067 = relay.const([-8.438292,8.471141,8.613945,3.885816,-7.054726,-8.570969,9.223333,3.301251,6.236809,-8.941156,-9.633348,4.222890,-5.780736,2.053187,2.837639,-0.255866,1.705352,8.095664,-7.998362,6.647819,-2.621697,6.158334,-7.064735,-5.502689,-8.096631,-0.898799,1.154045,-5.566607,-6.613698,8.330084,3.485761,3.845141,-1.172491,5.318877,4.885242,5.300161,0.161683,-4.369977,2.906461,0.703589,1.060740,-8.802376,5.178186,-8.643487,4.328662,1.010682,-3.159858,5.642436,1.237325,3.883948,6.675895,5.231344,1.490631,6.327315,-4.317061,-4.705359,-7.492130,-2.191375,9.252061,7.089599,-4.764369,-7.175672,-6.658582,4.183177,-9.469601,-2.960945,-9.279304,-7.488858,6.381680,-3.494157,-3.041652,-9.432561,-9.048062,-8.268318,2.927669,-4.584371,4.906547,-3.217684,-8.157430,0.898757,7.522616,1.463015,8.944053,3.932878,1.289503,-1.499709,5.140322,-1.722304,1.739035,3.071561,-2.759154,8.611013,-2.845722,8.408361,2.023380,-8.770324,3.450610,-4.903335,6.877564,0.755461,-0.174638,4.312638,-8.339039,4.171494,-9.765317,3.500681,-1.232989,-0.082145,-6.168774,4.736339,9.275040,-9.857165,1.402937,5.531932,3.030966,5.803092,7.492700,4.696124,-2.819988,8.099467,0.616028,-4.992085,5.096071,0.342660,-6.918183,-3.209346,-3.283397,-9.258374,3.600350,-9.881100,8.433294,-0.298087,-9.536944,-5.046095,-1.327717,-2.165401,-9.612927,7.489519,1.092527,-8.493976,-3.409967,6.132759,9.767493,-2.691518,-7.580010,1.295170,3.009318,-6.243091,7.359623,-4.112488,-8.326408,-8.262035,7.703898,4.141556,-3.428303,2.843176,-9.873462,6.386691,-0.934597,-4.916808,-4.877938,-4.193071,-8.238381,-1.559984,-3.085868,2.034747,4.194990,7.774196,-9.511071,6.941896,-0.106255,1.724662,-7.627836,9.686799,-7.285210,6.370539,7.696649,-2.401433,-7.552753,-2.203857,-8.122981,2.950354,9.400399,-2.473146,9.527392,-3.290617,-5.110751,-6.302686,-6.831550,-7.972979,-8.724326,2.169712,3.419914,0.702267,-0.068927,-7.427683,8.656164,-9.171303,1.472125,-3.593677,7.082772,-7.189385,-4.912226,-0.638065,-3.925810,-1.509343,-8.584310,7.090770,5.084225,5.559831,-8.991327,-8.199284,6.852309,-8.342475,-5.449368,-0.002609,5.069168,1.428368,5.693349,-1.450503,-2.065614,-7.714816,-9.363154,1.363390,-8.723511,-2.417257,-9.893151,3.113334,9.603911,-9.355865,-4.700127,2.735206,-0.031585,-3.225160,-3.756968,1.238253,2.627893,3.426862,3.114023,0.778693,6.193934,-5.136265,6.397318,-0.689138,0.497101,-0.370904,3.397686,4.587269,-8.825948,7.015451,-1.804327,-7.073896,5.528555,-0.743837,-7.592324,-1.674296,9.008208,5.199685,-0.926123,0.941752,4.618507,-2.168921,-3.479200,-3.610855,8.623564,4.483047,-2.428115,7.892382,-8.883616,6.628004,0.632628,-4.785815,-6.374202,7.169447,0.445600,6.152339,-6.188971,5.344951,3.134555,-4.815185,-2.565124,6.911128,1.798550,-4.813338,-6.016961,-9.707087,7.302973,-6.352565,-9.887799,4.342677,-2.069578,-2.387880,-7.379705,6.770579,1.099118,-2.973055,-7.849156,2.880402,-5.416573,7.435539,0.177405,-4.221940,-4.831683,-6.654894,2.886061,0.017952,-9.763794,-0.924561,7.070304,8.175811,5.816496,-1.581602,7.081685,9.644620,7.822775,-1.049207,-3.005899,-5.951154,1.217201,-9.436365,-3.340978,-7.727007,6.848504,0.666880,8.636264,-9.316407,-9.721360,-9.885120,-5.995828,2.725519,-7.722850,-8.005125,-9.850925,0.386527,4.688435,-1.784238,8.329211,7.142840,-3.533516,-7.972742,2.514331,-6.713771,8.597712,7.218269,3.353359,-9.748062,-9.543952,-2.427751,6.432298,-8.124502,0.480415,-3.175088,9.114355,-2.639576,-7.745251,5.976910,1.351395,0.909004,-5.670410,-1.582258,0.492285,2.224064,8.020145,-1.535182,-4.465272,7.258271,-9.590955,-7.639354,1.722790,7.547785,5.651184,0.356971,-4.263304,-8.115818,6.304657,-1.610612,9.908857,-8.295730,-6.017791,3.047940,4.815860,-8.790336,-2.528778,-0.776845,5.057113,9.015779,-2.812488,3.168827,2.586064,-0.425436,-1.781111,1.903591,-1.564642,-8.288508,-1.258787,7.675308,5.688792,6.962752,3.152974,3.863374,6.595929,5.067683,-6.028059,1.413781,-0.979913,-1.220920,-6.531072,-6.290889,-1.890242,5.444801,-3.233841,-9.405737,4.788730,1.225628,8.423354,3.769030,4.849159,2.512653,-0.628372,2.439700,-3.576955,7.469415,0.677978,5.146740,1.151677,2.175307,-8.615904,1.862383,5.968985,-4.748834,0.221201,-1.569186,-2.265155,-8.060309,-7.547744,-5.051923,-0.750813,9.238115,4.963785,3.833257,-9.854141,8.123451,-5.997642,-1.715022,8.593318,2.210365,-6.631108,-9.642449,2.954960,4.908547,-3.852389,-2.382857,-7.019755,0.471175,-8.806054,-7.226606,9.745774,5.460812,-9.941883,6.199381,-5.221731,-7.348804,-7.153950,-5.804367,-7.449448,6.017371,7.016665,2.634750,-8.971402,8.702044,6.344917,8.980446,9.385922,-5.457581,-8.661565,-3.749214,-4.781066,6.468305,5.401333,-7.133118,-7.407420,-7.752859,0.674212,7.424071,-0.257575,2.857379,-1.565804,-1.323004,2.933302,7.303494,7.394089,3.656558,-5.464544,-0.702837,-3.537879,7.971233,6.515875,-5.769459,5.443887,-8.194590,-2.716684,1.230617,-3.656154,6.733783,0.022035,4.516305,-6.577517,-0.815311,5.770144,-7.751589,-2.326413,-3.264275,1.100048,-1.199160,-5.211277,5.492983,-8.164536,0.725906,-7.860818,7.398466,7.528504,-0.730912,7.277968,7.381682,-7.352827,-2.111288,0.092247,-7.807144,0.113959,-3.880315,2.006680,-9.473262,-1.256469,-0.240603,-3.160945,-7.509346,-2.703862,9.114068,-5.979347,-0.342791,-4.075481,9.714724,-3.312612,2.900422,-7.456000,9.744206,3.706348,-2.952842,-0.847544,-0.115240,-7.091658,-6.897762,-1.252320,-2.491588,-8.139943,5.723773,4.238786,7.993924,-9.501196,9.283629,-9.713432,-6.176509,-0.059973,8.022101,7.852535,-3.097859,3.599387,-4.458445,-2.844203,-2.313335,4.705770,-6.693338,-1.688549,-4.480547,-1.243151,9.939633,9.754527,-7.108270,-6.350640,-4.445107,5.217656,9.025676,8.035043,-7.784779,-1.969644,3.639187,-8.826055,-4.814800,7.791747,5.518403,-6.986622,-0.383991,-4.869127,-1.522734,-0.098402,-9.609000,6.620719,-1.916300,4.002242,-1.977939,3.158125,-5.267208,4.936582,-3.781116,0.696635,-3.643563,0.971118,2.840579,2.174163,-9.480382,-6.830725,-0.412904,1.560236,3.332412,4.677565,-2.204729,7.982992,9.405919,-7.198925,6.908601,3.100959,4.013578,-3.018515,6.231244,-4.373868,7.435579,-5.083877,-0.535231,7.741334,0.302642,-0.422951,4.846122,-6.924953,-4.622409,7.852498,-9.807370,-1.119704,7.788162,8.136726,-0.351290,-6.765253,-5.171835,7.419144,-8.109396,-2.225683,-4.902194,-3.142176,-3.142139,-6.092584,3.160424,-0.844385,-2.662847,6.905019,1.295083,-9.569655,3.703212,-1.340665,-2.386493,-8.775709,-7.918747,-0.629645,0.263723,-4.986562,5.770282,4.654176,-0.061818,-9.232107,-6.735052,-2.039689,-5.006600,8.614586,-5.301698,-5.175793,-1.999170,3.580321,4.952092,9.579358,-9.156408,3.494100,-1.967701,-4.415224,-6.673909,7.358712,7.125110,9.059782,3.376663,3.207714,-5.092855,-3.772409,-4.105522,9.526167,6.869529,8.675049,-7.622180,3.259484,6.035318,-8.983310,-0.813399,-3.338791,1.879962,-2.073418,-4.360808,-9.883589,7.954435,7.466418,5.632592,3.078573,6.503473,-1.412069,0.970471,-0.922204,-8.188495,4.212780,3.919716,-5.656550,6.259191,4.734673,-1.556215,-1.000603,-9.721431,3.105664,-9.791663,-1.551567,8.371559,5.341059,-8.974959,6.641137,-9.625187,9.446012,-9.654650,5.535964,-7.699545,-4.735258,-7.847201,-9.354130,-0.753090,-5.331389,4.315943,5.912423,-0.320912,6.948671,-4.661755,4.147815,9.695372,-7.656134,-2.865020,0.193644,-9.047722,0.888755,-3.313149,3.211646,7.082038,4.656838,-5.632799,-2.248794,-7.336279,6.412573,-8.876362,4.629052,-2.819779,-1.371613,9.413935,0.766231,7.901337,4.015950,8.048139,-9.276519,-6.952547,5.601612,-6.351829,3.213226,6.164650,-7.818058,2.665588,-9.547204,0.344894,-3.743950,-6.312057,9.954707,-8.798352], dtype = "float32")#candidate|8067|(780,)|const|float32
call_8066 = relay.TupleGetItem(func_6446_call(relay.reshape(const_8067.astype('float32'), [780,])), 2)
call_8068 = relay.TupleGetItem(func_6449_call(relay.reshape(const_8067.astype('float32'), [780,])), 2)
output = relay.Tuple([call_8047,call_8066,const_8067,])
output2 = relay.Tuple([call_8048,call_8068,const_8067,])
func_8073 = relay.Function([], output)
mod['func_8073'] = func_8073
mod = relay.transform.InferType()(mod)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8073_call = mutated_mod.get_global_var('func_8073')
call_8074 = func_8073_call()
output = call_8074
func_8075 = relay.Function([], output)
mutated_mod['func_8075'] = func_8075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7336_call = mod.get_global_var('func_7336')
func_7337_call = mutated_mod.get_global_var('func_7337')
call_8140 = relay.TupleGetItem(func_7336_call(), 0)
call_8141 = relay.TupleGetItem(func_7337_call(), 0)
func_1580_call = mod.get_global_var('func_1580')
func_1583_call = mutated_mod.get_global_var('func_1583')
var_8143 = relay.var("var_8143", dtype = "float32", shape = (1080,))#candidate|8143|(1080,)|var|float32
var_8144 = relay.var("var_8144", dtype = "float32", shape = (780, 1))#candidate|8144|(780, 1)|var|float32
call_8142 = relay.TupleGetItem(func_1580_call(relay.reshape(var_8143.astype('float32'), [12, 15, 6]), relay.reshape(var_8144.astype('float32'), [780,]), ), 3)
call_8145 = relay.TupleGetItem(func_1583_call(relay.reshape(var_8143.astype('float32'), [12, 15, 6]), relay.reshape(var_8144.astype('float32'), [780,]), ), 3)
output = relay.Tuple([call_8140,call_8142,var_8143,var_8144,])
output2 = relay.Tuple([call_8141,call_8145,var_8143,var_8144,])
func_8147 = relay.Function([var_8143,var_8144,], output)
mod['func_8147'] = func_8147
mod = relay.transform.InferType()(mod)
var_8148 = relay.var("var_8148", dtype = "float32", shape = (1080,))#candidate|8148|(1080,)|var|float32
var_8149 = relay.var("var_8149", dtype = "float32", shape = (780, 1))#candidate|8149|(780, 1)|var|float32
output = func_8147(var_8148,var_8149,)
func_8150 = relay.Function([var_8148,var_8149,], output)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4329_call = mutated_mod.get_global_var('func_4329')
call_8167 = func_4328_call()
call_8168 = func_4328_call()
uop_8182 = relay.atanh(call_8167.astype('float32')) # shape=(5, 1, 7)
uop_8184 = relay.atanh(call_8168.astype('float32')) # shape=(5, 1, 7)
uop_8193 = relay.log2(call_8167.astype('float64')) # shape=(5, 1, 7)
uop_8195 = relay.log2(call_8168.astype('float64')) # shape=(5, 1, 7)
func_5270_call = mod.get_global_var('func_5270')
func_5271_call = mutated_mod.get_global_var('func_5271')
call_8196 = relay.TupleGetItem(func_5270_call(), 0)
call_8197 = relay.TupleGetItem(func_5271_call(), 0)
output = relay.Tuple([uop_8182,uop_8193,call_8196,])
output2 = relay.Tuple([uop_8184,uop_8195,call_8197,])
func_8199 = relay.Function([], output)
mod['func_8199'] = func_8199
mod = relay.transform.InferType()(mod)
output = func_8199()
func_8200 = relay.Function([], output)
mutated_mod['func_8200'] = func_8200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_8236 = relay.TupleGetItem(func_7576_call(), 0)
call_8237 = relay.TupleGetItem(func_7578_call(), 0)
output = call_8236
output2 = call_8237
func_8240 = relay.Function([], output)
mod['func_8240'] = func_8240
mod = relay.transform.InferType()(mod)
mutated_mod['func_8240'] = func_8240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8240_call = mutated_mod.get_global_var('func_8240')
call_8241 = func_8240_call()
output = call_8241
func_8242 = relay.Function([], output)
mutated_mod['func_8242'] = func_8242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7752_call = mod.get_global_var('func_7752')
func_7753_call = mutated_mod.get_global_var('func_7753')
call_8255 = relay.TupleGetItem(func_7752_call(), 0)
call_8256 = relay.TupleGetItem(func_7753_call(), 0)
output = call_8255
output2 = call_8256
func_8272 = relay.Function([], output)
mod['func_8272'] = func_8272
mod = relay.transform.InferType()(mod)
mutated_mod['func_8272'] = func_8272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8272_call = mutated_mod.get_global_var('func_8272')
call_8273 = func_8272_call()
output = call_8273
func_8274 = relay.Function([], output)
mutated_mod['func_8274'] = func_8274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5979_call = mod.get_global_var('func_5979')
func_5980_call = mutated_mod.get_global_var('func_5980')
call_8299 = relay.TupleGetItem(func_5979_call(), 1)
call_8300 = relay.TupleGetItem(func_5980_call(), 1)
output = relay.Tuple([call_8299,])
output2 = relay.Tuple([call_8300,])
func_8308 = relay.Function([], output)
mod['func_8308'] = func_8308
mod = relay.transform.InferType()(mod)
output = func_8308()
func_8309 = relay.Function([], output)
mutated_mod['func_8309'] = func_8309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7623_call = mod.get_global_var('func_7623')
func_7624_call = mutated_mod.get_global_var('func_7624')
call_8313 = relay.TupleGetItem(func_7623_call(), 1)
call_8314 = relay.TupleGetItem(func_7624_call(), 1)
func_6876_call = mod.get_global_var('func_6876')
func_6881_call = mutated_mod.get_global_var('func_6881')
const_8334 = relay.const([[-4.708375,2.597167,-9.841237,-1.970885,-7.667586,2.462261,7.243676,-2.765213,5.489345,-3.453524,-5.148339,-3.246241,-0.760295,-0.374186,8.363610,8.712118,8.099856,-2.538475,1.685453,4.634859,-3.470858,2.455075,4.456581,-8.780842,-7.045389,8.404149,8.415821,-0.254048,6.383910,6.864585,-5.099197,-8.207844,7.862920,-1.988441,-8.471768,5.053049,-5.621365,-4.239122,-1.312224,-0.192204,6.749498,8.508993,2.231846,-3.257765,-9.922697,3.746912,8.369432,0.663362,-7.610336,3.176273,0.984459,-0.111659,6.846364,4.647862,1.718371,-1.086785,0.437798,-0.668781,9.110426,5.255708,-6.922960,3.960211,2.577686,-5.963057,-0.454830,-8.231333,-2.600194,7.685468,7.827627,4.074556,-8.713665,0.786938,-8.250805,-4.592421,0.592534,3.342235,7.874969,7.220263,4.130250,-3.041096,0.820460,3.049203,2.377140,4.819461,1.939754,-6.213565,-3.684347,3.099330,4.573036,8.169673,-1.836434,-9.969023,4.584232,-4.528426,9.404525,-6.460663,2.074718,5.009840,-3.751132,0.095410,1.075101,1.857441,0.031229,-1.995743,-4.920397,3.266114,3.755437,-7.983277,0.918092,4.877243,-8.697112,9.923953,-2.048406,-3.487684,6.706475,-2.357473,9.087623,0.887299,1.476799,1.825054,8.564915,-0.394307,-8.987207,2.060425,9.814922,0.127179,-4.052392,8.429474,3.388208,9.628765,7.123232,0.585219,6.212176,6.153764,8.084769,-9.566626,-7.344132,3.084157,-0.269389,-4.497288]], dtype = "float64")#candidate|8334|(1, 140)|const|float64
const_8335 = relay.const([9.490248,-5.142108,-3.495798,4.508341,-6.407665,4.543273,3.986676,-1.715959,7.755844,5.277161,3.851192,5.539561,2.772746,5.775769,7.664771,-7.621779,2.992883,0.438279,-7.786944,6.297825,0.152745,-4.847498,7.177054,9.448668,-6.162729,-4.700540,0.845584,5.899487,-8.109821,-2.082273,6.460188,-6.481730,6.628825,-8.217587,-9.652208,-2.455999,-7.549719,8.250782,9.588531,6.941512,7.647101,5.010853,3.082300,-0.533666,6.849747,9.827678,2.111481,9.338239,8.868010,0.327890,0.899728,5.837555,-8.574304,-2.935126,-5.390083,4.998020,5.220027,-0.474973,3.418101,-2.137869,7.648387,2.786796,0.743884], dtype = "float32")#candidate|8335|(63,)|const|float32
var_8336 = relay.var("var_8336", dtype = "uint64", shape = (528,))#candidate|8336|(528,)|var|uint64
const_8337 = relay.const([10,-8,-5,-10,-7,9,4,8,10,8,1,1,-10,9,10,7,-1,-3,-4,-5,6,8,7,5,-9,-1,7,-8,-2,6,-7,6,-8,2,3,-10,1,-9,6,-6,-1,7,-8,-2,4,-4,10,8,-8,7,-8,-10,-7,-7,-7,9,-9,3,-5,-10,4,9,4,2,-8,5,10,-4,8,-9,4,10,-8,1,-1,-2,4,9,-7,-4,-3,-2,8,-7,9,9,8,9,4,9,2,10,-3,6,1,-6,2,-5,-5,-7,2,10,-7,6,-8,7,-10,-7,-8,-4,4,-3,-9,-7,3,-1,-1,-5,-9,-2,-9,8,-7,-2,-8,2,-8,10,-5,6,-2,3,5,4,10,-2,4,-8,-4,4,9,-6,2,6,5,-5,6,-2,5,-6,1,-6,7,6,6,-3,-7,-10,5,6,10,6,-9,-9,-4,1,-5,8,3,-3,-5,2,5,3,-9,-7,2,7,2,8,-2,-9,8,-1,3,-7,-10,10,-2,3,-2,10,-4,7,-4,-1,-4,5,10,-2,-10,1,8,5,-6,1,1,-2,-10,-2,-4,3,3,-1,-2,6,-1,-1,-2,-1,7,6,5,4,9,-2,-6,10,-10,2,3,5,-7,-5,5,7,7,-9,-1,8,8,2,4,3,4,-8,-5,1,9,3,1,5,3,-2,8,6,-9,-10,-2,-9,-2,3,7,-9,3,2,2,-4,3,1,6,-7,-6,10,-4,4,3,3,-5,-10,-4,2,10,-1,10,4,9,-2,2,5,-10,-2,-8,5,-7,2,7,-9,10,10,4,-7,-9,8,-1,-7,-1,4,-6,-5,-3,-6,10,7,-7,-1,1,4,9,1,-6,-10,9,-8,-2,10,1,8,-3,-3,-10,-3,-6,-2,2,4,-4,-5,-8,-10,8,-8,5,-2,10,1,2,2,-3,-3,-10,3,9,6,2,10,5,-1,-3,-1,8,5,-5,10,-5,-5,7,-8,-7,-6,2,1,3,10,-4,-10,-2,-4,4,-9,6,4,1,2,8,-6,-1,8,8,-9,-8,7,-4,10,-7,-8,10,-6,4,8,-3,2,1,7,9,-10,-5,-8,-7,8,5,7,-6,8,-1,3,9,10,-7,-9,-3,3,5,-6,10,-8,-7,-10,-10,-6,5,4,7,5,-1,10,3,-9,-5,-5,-10,-9,10,2,10,-10,9,8,-8,-10,7,-10,-1,1,5,-10,8,3,-1,-5,-5,5,-9,-2,7,-3,-1,-5,3,10,-1,-6,-10,-5,4,-1,7,4,8,-10,-7,-9,9,1,-1,3,-1,-1,5,-1,5,7,5,-7,-9,-10,-3,3,5,3,6,8,-2,8,4,-6,1,-1,9,1,-7,2,-10,-2,-10,-10,1,-4,6,10,-1,-9,4,-9,9,8,-1,-6,7,5,-2,-4,1,-6,9,-7,4,3,7,8,-3,2,9,4,-7,-3,-4,-2,6,3,3,6,-7,5,2,-10,2,-9,-1,6,4,8,6,-4,-9,-8,7,10,-4,8,2,10,-9,4,-4,1,-8,5,-1,6,5,2,7,-8,9,-4,-3,5,-3,-3,9,-4,-2,-5,-9,-3,-5,8,9,3,-3,8,-3,-7,4,-3,3,4,-8,10,-7,2,10,-4,-6,-8,3,-5,1,-3,2,-7,-5,4,-7,-1,-9,-8,2,9,-8,9,3,6,-5,-6,-6,6,6,-5,2,9,8,2,1,2,-8,-9,-6,-4,5,-10,7,-2,-5,7,-10,1,-6,-10,6,-4,-4,7,9,10,5,7,-7,-4,4,10,-10,4,5,2,-7,-8,-1,-8,8,6,-10,-7,10,9,-5,-9,-9,-10,8,-8,10,5,-10,-2,3,-2,-1,-1,-10,-6,-9,-9,-10,5,-1,-5,6,2,3,4,2,-10,-5,-3,-9,-2,-5,-7,10,-3,4,3,7,7,9,-7,-9,3,10,-3,-6,9,5,-6,-9,-9,-6,4,10,-3,-3,2,-9,-8,-3,-8,-5,2,-3,5,7,5,-8,7,2,-7,-10,9,-3,8,9,7,-3,3,7,-9,2,8,-5,-8,-4,-2,-3,6,7,4,-2,-9,9,-2,-10,1,-5,3,-5,-6,5,5,-8,-6,7,-2,-2,-3,-1,-7,5,4,-8,-9,8,-2,-3,3,-10,-6,-10,7,9,2,6,-2,9,3,3,-10,9,-3,1,-4,4,1,8,5,7,-9,7,5,5,3,2,-8,7,3,-5,2,-7,-3,-8,-4,6,-1,-5,8,4,10,7,7,9,-4,7,6,-9,-10,-7,-4,-10,-5,1,6,7,3,4,-9,-8,-7,-9,8,2,-4,6,4,-3,2,-6,-1,-4,8,4,1,10,-6,1,-6,-6,5,-8,-8,10,7,10,-1,-4,-6,-4,-10,-5,3,2,2,-8,8,6,1,9,3,7,6,3,-10,9,3,-6,-1,-4,6,9,-9,1,-2,7,-10,1,8,7,3,9,9,10,6,2,7,-8,-6,-8,9,-6,-2,4,3,1,9,-1,7,-8,-7,-7,-4,3,-3,-10,8,3,7,3,1,7,4,-8,-1,-6,-9,-7,9,4,-2,-6,2,-2,7,8,-7,-9,5,4,6,-8,-4,-7,-6,-4,-5,9,-10,-6,-4,8,-1,4,4,6,7,-4,-9,-1,4,-3,6,8,-1,-4,3,8,-8,-2,10,4,-1,6,1,-7,5,-6,2,-8,10,-9,5,-9,-10,5,10,-5,8,-3,1,6,9,-8,7,3,-9,2,-10,6,1,-9,-3,-4,-10,-1,-8,-6,10,10,-9,5,-7,-1,-8,-10,8,-2,6,1,-4,6,9,10,7,7,7,5,10,3,-2,-9,-2,1,-6,3,-7,1,-2,-5,5,6,-5,5,8,-1,9,-1,10,1,6,-5,5,-9,1,10,8,-7,9,-8,10,-5,9,1,10,7,-6,-1,10,-1,-5,-6,-7,6,5,-2,3,-3,5,-4,-6,3,3,6,-3,6,-8,-1,-7,10,2,8,-9,-10,7,-1,4,8,9,3,-10,2,-3,-2,1,-4,-4,-10,3,9,-5,4,8,9,5,9,-2,3,5,6,9,-1,-2,10,-1,7,1,7,5,-5,9,6,-7,7,-6,8,-2,-2,1,10,-1,8,-2,1,1,8,2,-3,4,-2,4,-10,8,3,-4,-1,-1,6,6,-1,-5,-10,2,7,5,8,9,8,-10,9,3,8,1,-9,3,-5,-8,5,-8,8,2,-3,-6,8,-1,1,-7,9,-4,6,-6,-6,-7,4,3,-1,8,6,6,-1,1,10,-10,5,-5,1,-3,8,8,-5,4,6,1,-7,5,1,-9,-3,10,-4,10,-8,4], dtype = "int16")#candidate|8337|(1260,)|const|int16
call_8333 = relay.TupleGetItem(func_6876_call(relay.reshape(const_8334.astype('float64'), [5, 28]), relay.reshape(const_8335.astype('float32'), [63,]), relay.reshape(var_8336.astype('uint64'), [528,]), relay.reshape(const_8337.astype('int16'), [1260,]), ), 11)
call_8338 = relay.TupleGetItem(func_6881_call(relay.reshape(const_8334.astype('float64'), [5, 28]), relay.reshape(const_8335.astype('float32'), [63,]), relay.reshape(var_8336.astype('uint64'), [528,]), relay.reshape(const_8337.astype('int16'), [1260,]), ), 11)
output = relay.Tuple([call_8313,call_8333,const_8334,const_8335,var_8336,const_8337,])
output2 = relay.Tuple([call_8314,call_8338,const_8334,const_8335,var_8336,const_8337,])
func_8340 = relay.Function([var_8336,], output)
mod['func_8340'] = func_8340
mod = relay.transform.InferType()(mod)
mutated_mod['func_8340'] = func_8340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8341 = relay.var("var_8341", dtype = "uint64", shape = (528,))#candidate|8341|(528,)|var|uint64
func_8340_call = mutated_mod.get_global_var('func_8340')
call_8342 = func_8340_call(var_8341)
output = call_8342
func_8343 = relay.Function([var_8341], output)
mutated_mod['func_8343'] = func_8343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_8393 = relay.TupleGetItem(func_7873_call(), 0)
call_8394 = relay.TupleGetItem(func_7875_call(), 0)
func_7232_call = mod.get_global_var('func_7232')
func_7236_call = mutated_mod.get_global_var('func_7236')
const_8400 = relay.const([6.544032,4.465208,-7.567567,4.643691,5.674738,1.107388,-7.659496,2.046545,3.897881,4.740607,-0.446931,7.989031,-7.208702,7.213820,9.836343,7.895786,-2.413160,-7.291907,-8.411479,1.420300,2.080779,-3.035437,-2.369663,-0.862653,0.467035,-4.802169,3.864212,6.744660,5.937700,0.010595,2.008655,6.271851,4.092860,-4.183837,-5.468417,-5.434115,-0.409645,5.405229,-6.464219,-8.226994,7.636878,7.871547,8.045657,-3.019354,9.491194,0.509998,4.953378,9.730811,-6.644809,-1.047504,2.026820,7.825594,-3.158375,-1.783824,-4.574976,-9.305657,8.736336,-4.340318,-9.338955,9.188693,4.358590,4.785661,-4.397205,3.387706,-2.988761,5.696729,-0.346613,-5.984040,3.015698,-1.233477,9.114195,-4.232255,-1.338517,0.609160,5.931515,9.057787,-2.012540,4.994991,6.588109,9.696602,5.306095,0.626415,6.389617,-8.956081,-1.191898,-2.621265,3.682690,-8.482664,-6.588323,5.628323,5.816623,-3.323206,4.063614,-5.788816,-5.448681,-6.108578,-1.150586,-5.073791,7.349625,-5.753322,2.470332,-4.298962,7.042121,-2.418500,-7.781316,-3.477002,-4.889413,4.248397,-7.668268,-6.623094,-6.257079,-7.411472,-3.948908,-1.944773,1.993153,9.465056,-0.179878,-9.000782,2.422362,5.285388,-8.431022,0.431723,-0.570764,-2.319950,-3.671690,0.510725,2.367992,3.771819,-1.287251,-8.276064,-4.413563,-4.553026,0.073463,7.409149,-2.792192,-4.256733,-1.988179,4.065094,8.218818,0.415456], dtype = "float64")#candidate|8400|(140,)|const|float64
const_8401 = relay.const([False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True], dtype = "bool")#candidate|8401|(576,)|const|bool
call_8399 = relay.TupleGetItem(func_7232_call(relay.reshape(const_8400.astype('float64'), [140,]), relay.reshape(const_8401.astype('bool'), [576, 1]), ), 3)
call_8402 = relay.TupleGetItem(func_7236_call(relay.reshape(const_8400.astype('float64'), [140,]), relay.reshape(const_8401.astype('bool'), [576, 1]), ), 3)
output = relay.Tuple([call_8393,call_8399,const_8400,const_8401,])
output2 = relay.Tuple([call_8394,call_8402,const_8400,const_8401,])
func_8408 = relay.Function([], output)
mod['func_8408'] = func_8408
mod = relay.transform.InferType()(mod)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8408_call = mutated_mod.get_global_var('func_8408')
call_8409 = func_8408_call()
output = call_8409
func_8410 = relay.Function([], output)
mutated_mod['func_8410'] = func_8410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_8465 = relay.TupleGetItem(func_7873_call(), 1)
call_8466 = relay.TupleGetItem(func_7875_call(), 1)
output = call_8465
output2 = call_8466
func_8472 = relay.Function([], output)
mod['func_8472'] = func_8472
mod = relay.transform.InferType()(mod)
output = func_8472()
func_8473 = relay.Function([], output)
mutated_mod['func_8473'] = func_8473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4384_call = mutated_mod.get_global_var('func_4384')
call_8494 = func_4383_call()
call_8495 = func_4383_call()
output = call_8494
output2 = call_8495
func_8499 = relay.Function([], output)
mod['func_8499'] = func_8499
mod = relay.transform.InferType()(mod)
mutated_mod['func_8499'] = func_8499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mutated_mod.get_global_var('func_8499')
call_8500 = func_8499_call()
output = call_8500
func_8501 = relay.Function([], output)
mutated_mod['func_8501'] = func_8501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8199_call = mod.get_global_var('func_8199')
func_8200_call = mutated_mod.get_global_var('func_8200')
call_8526 = relay.TupleGetItem(func_8199_call(), 2)
call_8527 = relay.TupleGetItem(func_8200_call(), 2)
var_8532 = relay.var("var_8532", dtype = "float64", shape = (5, 11, 7))#candidate|8532|(5, 11, 7)|var|float64
bop_8533 = relay.less_equal(call_8526.astype('bool'), var_8532.astype('bool')) # shape=(5, 11, 7)
bop_8536 = relay.less_equal(call_8527.astype('bool'), var_8532.astype('bool')) # shape=(5, 11, 7)
output = relay.Tuple([bop_8533,])
output2 = relay.Tuple([bop_8536,])
func_8545 = relay.Function([var_8532,], output)
mod['func_8545'] = func_8545
mod = relay.transform.InferType()(mod)
mutated_mod['func_8545'] = func_8545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8546 = relay.var("var_8546", dtype = "float64", shape = (5, 11, 7))#candidate|8546|(5, 11, 7)|var|float64
func_8545_call = mutated_mod.get_global_var('func_8545')
call_8547 = func_8545_call(var_8546)
output = call_8547
func_8548 = relay.Function([var_8546], output)
mutated_mod['func_8548'] = func_8548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7770_call = mod.get_global_var('func_7770')
func_7771_call = mutated_mod.get_global_var('func_7771')
call_8652 = relay.TupleGetItem(func_7770_call(), 0)
call_8653 = relay.TupleGetItem(func_7771_call(), 0)
uop_8654 = relay.acosh(call_8652.astype('float32')) # shape=(1008, 1)
uop_8656 = relay.acosh(call_8653.astype('float32')) # shape=(1008, 1)
output = uop_8654
output2 = uop_8656
func_8662 = relay.Function([], output)
mod['func_8662'] = func_8662
mod = relay.transform.InferType()(mod)
output = func_8662()
func_8663 = relay.Function([], output)
mutated_mod['func_8663'] = func_8663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8499_call = mod.get_global_var('func_8499')
func_8501_call = mutated_mod.get_global_var('func_8501')
call_8741 = func_8499_call()
call_8742 = func_8499_call()
output = call_8741
output2 = call_8742
func_8767 = relay.Function([], output)
mod['func_8767'] = func_8767
mod = relay.transform.InferType()(mod)
mutated_mod['func_8767'] = func_8767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8767_call = mutated_mod.get_global_var('func_8767')
call_8768 = func_8767_call()
output = call_8768
func_8769 = relay.Function([], output)
mutated_mod['func_8769'] = func_8769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6518_call = mod.get_global_var('func_6518')
func_6519_call = mutated_mod.get_global_var('func_6519')
call_8782 = relay.TupleGetItem(func_6518_call(), 0)
call_8783 = relay.TupleGetItem(func_6519_call(), 0)
func_3900_call = mod.get_global_var('func_3900')
func_3902_call = mutated_mod.get_global_var('func_3902')
const_8803 = relay.const([7.985341,2.006778,9.258488,5.287494,-3.958760,7.643052,-6.376743,2.250560,-0.686212,-8.550581,5.677254,9.338813,-6.790163,2.020036,8.733097,-2.571691,9.086353,-0.560208,0.934317,8.907730,-4.608455,7.388820,-1.756413,-2.484890,-7.968613,0.671042,1.455221,9.908702,-0.907827,9.149691,-7.265321,-9.436692,1.172166,0.185681,-5.974656,3.501376,2.568453,-6.290607,3.152450,-9.547553,9.406894,-9.775923,-6.387147,-5.233627,-1.310699,-2.502226,-3.413007,-9.072850,1.519769,-3.679990,-4.989627,-2.417194,-8.805400,6.338223,1.100379,-5.318212,-0.830912,3.603111,-7.535032,6.362751,-3.109962,-3.266232,-5.855225,-8.145657,-0.299157,9.346714,-6.658075,-9.867260,-5.127929,0.504945,8.680067,-4.220056,-5.020723,1.394926,-9.228316,2.275654,-7.689982,5.845185,-8.499189,7.290662,-9.187905,8.411562,-9.084254,3.911381,-9.066207,5.148468,-1.178310,2.381925,5.998684,-9.239038,4.057787,-4.640923,4.974251,-1.574681,-9.643271,-2.731655,-2.780783,8.000564,4.653134,-1.607647,1.085411,4.968204,1.260712,-6.120471,5.285511,-5.219379,-8.177968,8.301867,-5.041969,9.925264,0.918516,0.565389,-7.953438,-6.003100,-7.552509,8.659814,-8.422923,9.635316,5.817531,0.234735,-4.114279,1.204518,-1.515415,-3.528179,-9.611649,4.057933,7.264950,3.068395,-5.846872,0.566438,-5.378130,-2.871911,-6.429863,5.811672,-1.597492,-5.711677,-1.382147,4.152033,-8.146280,-8.219518,-3.128307,-3.601408,-4.485891,6.860975,-3.909388,7.343191,1.031369,4.064224,-5.804797,8.894926,6.911066,9.391831,5.440335,4.424033,7.404739,-3.987478,7.858395,9.172033,-9.767322,-6.646046,-4.199984,-4.098043,-6.881702,8.548692,-7.332894,8.968489,-4.399782,6.497818,6.157047,-6.970206,-6.969842,-3.198845,9.880066,-6.344023,-1.419614,-7.824618,-5.408652,-5.765107,4.237455,4.564093,-0.958108,8.854730,-3.810489,-5.640435,3.740323,-6.523106,8.802776,-8.849644,-6.786068,7.472876,5.730063,4.370440,-8.403574,-2.932806,0.101470,6.939620,-0.818667,2.435724,0.403958,0.497625,-4.998423,9.880830,-2.748993,-1.053784,-7.691815,-6.389631,-5.958908,0.204030,6.341759,-9.256243,-0.586767,8.571591,-9.101551,4.887514,-1.723778,4.397963,-6.722453,1.967391,-2.425926,7.547529,8.405855,-3.434758,-4.099774,-0.936018,-8.991198,-3.185652,-0.432026,8.660585,-5.298845,-6.992781,9.065809,9.351661,-3.159001,2.645416,5.376121,2.017445,-4.714571,-5.220677,-7.526203,-6.036254,0.099607,8.346980,-7.363039,-9.954816,0.639872,-3.464808,-5.716995,-7.649658,-6.182762,2.751127,-6.786893,-9.512885,9.445715,0.982338,2.780236,-9.021336,3.722755,-8.240121,-0.102618,-9.901148,0.262207,2.915978,7.759630,3.365244,1.279894,6.116189,3.359688,-3.727659,-9.514889,-8.016383,1.222232,-2.273472,-3.904214,9.924044,5.080523,-5.738785,-3.521297,3.601613,8.756562,6.185398,8.822834,5.256377,-6.504978,0.012613,3.641873,-4.291954,-3.355959,3.154388,8.201027,-9.817040,0.725136,8.043817,-3.138888,2.972893,8.991714,-9.255034,7.106909,-8.775386,9.748118,-1.716620,9.091320,7.517272,3.588541,0.407201,4.623905,3.601143,-3.892817,-0.861270,0.174044,6.014594,-4.159408,-7.407932,9.231673,0.472797,-3.486460,8.783088,-1.502104,-3.209935,-9.951243,-5.989702,1.078435,-2.920282,8.803682,-4.285472,-6.325092,2.088707,8.818648,-9.374213,-7.136737,5.078727,0.367297,7.807184,1.448062,9.840382,3.075828,-3.335066,5.057843,-6.034538,4.626993,-0.222700,-3.779145,4.374488,4.934240,-6.271785,8.263878,-1.123425,2.950563,5.050996,5.105299,-2.759945,-7.152283,8.124825,0.769146,-4.346048,-6.704443,-7.431216,9.602926,-3.858753,9.327859,-4.066426,-9.727724,1.438921,-4.174039,8.621751,7.279883,-3.443488,-1.735575,5.813677,-2.608735,-5.664460,-0.429329,8.973552,-1.706842,-1.512431,5.623696,1.528353,-1.403682,8.029028,7.147588,-7.937185,-5.881521,-5.695623,9.643399,-6.083077,-6.003661,-8.266752,8.267368,-8.002579,-3.245753,2.645530,6.762092,7.805322,3.393215,3.156152,6.956517,9.855939,-2.185753,-8.442965,9.665614,4.960213,-4.453132,7.074774,-7.733415,8.329198,-8.025604,-7.636122,3.323906,0.380464,-0.570564,6.266244,5.370911,7.602802,4.483597,9.976269,-7.246771,-6.187090,-6.165399,-4.004032,7.531134,1.257662], dtype = "float64")#candidate|8803|(420,)|const|float64
call_8802 = relay.TupleGetItem(func_3900_call(relay.reshape(const_8803.astype('float64'), [2, 15, 14])), 0)
call_8804 = relay.TupleGetItem(func_3902_call(relay.reshape(const_8803.astype('float64'), [2, 15, 14])), 0)
func_5979_call = mod.get_global_var('func_5979')
func_5980_call = mutated_mod.get_global_var('func_5980')
call_8805 = relay.TupleGetItem(func_5979_call(), 1)
call_8806 = relay.TupleGetItem(func_5980_call(), 1)
output = relay.Tuple([call_8782,call_8802,const_8803,call_8805,])
output2 = relay.Tuple([call_8783,call_8804,const_8803,call_8806,])
func_8821 = relay.Function([], output)
mod['func_8821'] = func_8821
mod = relay.transform.InferType()(mod)
output = func_8821()
func_8822 = relay.Function([], output)
mutated_mod['func_8822'] = func_8822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7179_call = mod.get_global_var('func_7179')
func_7181_call = mutated_mod.get_global_var('func_7181')
call_8893 = func_7179_call()
call_8894 = func_7179_call()
output = call_8893
output2 = call_8894
func_8901 = relay.Function([], output)
mod['func_8901'] = func_8901
mod = relay.transform.InferType()(mod)
output = func_8901()
func_8902 = relay.Function([], output)
mutated_mod['func_8902'] = func_8902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8272_call = mod.get_global_var('func_8272')
func_8274_call = mutated_mod.get_global_var('func_8274')
call_8927 = func_8272_call()
call_8928 = func_8272_call()
func_8408_call = mod.get_global_var('func_8408')
func_8410_call = mutated_mod.get_global_var('func_8410')
call_8929 = relay.TupleGetItem(func_8408_call(), 0)
call_8930 = relay.TupleGetItem(func_8410_call(), 0)
bop_8932 = relay.floor_mod(call_8927.astype('float32'), relay.reshape(call_8929.astype('float32'), relay.shape_of(call_8927))) # shape=(5, 1, 7)
bop_8935 = relay.floor_mod(call_8928.astype('float32'), relay.reshape(call_8930.astype('float32'), relay.shape_of(call_8928))) # shape=(5, 1, 7)
const_8956 = relay.const([[[2.978543,2.901635,3.787775,1.533908,-1.694791,-8.767233,8.712966],[6.487242,6.268549,9.939571,6.039394,2.706007,8.247181,-5.275350],[0.825256,-3.537305,-1.377266,-7.245779,0.382937,-4.573341,3.925756],[0.944110,-3.454587,-7.212350,-5.837848,7.584841,6.707661,5.574818],[-1.719813,-1.536904,0.081500,-6.840788,-5.243664,-2.901512,-5.925264],[-6.335197,4.703694,-6.142892,-5.762624,2.564995,-2.517261,-3.974332],[3.112868,-4.588885,3.039160,9.561816,1.415702,-4.120788,8.131011],[3.126516,-9.843373,4.813876,3.866355,2.342701,3.649419,0.923516],[-4.020666,9.142003,5.009583,1.393188,9.960852,-3.662014,-6.985323],[-0.113113,9.666990,9.131177,4.644778,3.838734,-5.063185,-8.481350],[7.716824,1.503336,2.180626,2.361109,-6.902404,-3.374866,-7.194622],[-7.812784,1.271631,-8.437122,-2.967312,-2.565436,-9.499729,0.922375]],[[1.204211,-3.179737,1.462077,-0.540420,8.869161,9.105572,-7.439432],[4.047294,-5.789917,6.904840,-1.773345,-9.372494,5.999513,7.388864],[-5.651819,-4.419258,-5.048678,-8.499450,-3.229926,3.779709,8.106084],[7.540763,-8.297475,-2.448662,-2.148479,-8.487118,0.557954,8.899953],[-9.153650,-1.306545,2.700676,-6.690684,-5.706225,6.864303,3.086384],[-5.096423,-6.595142,-8.535429,-3.378252,9.369602,-8.506934,3.410473],[8.716727,-4.398848,8.627887,-5.689746,0.049236,3.976519,-9.274919],[-9.380314,1.806819,-6.036779,-1.635882,-0.079224,2.897553,2.252381],[4.264795,1.476651,4.801008,-0.806007,-3.977057,-8.829465,0.224526],[3.688997,-7.766026,1.365061,-6.645224,4.786891,-3.798977,3.973017],[-5.511360,2.343039,-0.429745,-5.179914,-6.369650,-3.844991,4.216952],[-4.649755,-6.098459,-6.251030,4.604103,-6.346370,6.021001,-4.328562]],[[7.409173,9.950714,-2.856591,-4.597593,1.974184,0.048311,9.871162],[8.688502,-3.101362,-4.794291,9.674321,1.408779,-1.580589,2.214276],[-6.765543,-6.361261,0.976291,2.970819,-0.013376,-4.828624,-4.792978],[-6.337405,-4.499731,-3.882118,2.102162,3.766502,-6.436076,-1.685060],[7.852515,-5.617434,9.414954,5.641991,2.083270,5.573755,-2.683894],[0.262980,8.108605,3.409472,2.942108,-2.312138,-1.149479,-6.511066],[-5.662562,6.970544,-1.999351,0.459971,-8.850241,-4.571623,9.200400],[-3.991824,-9.248455,-9.090887,6.688048,4.677492,-6.731252,2.900074],[1.054414,2.731211,-6.368915,2.452425,-2.169404,4.237908,-2.722822],[-6.467756,5.951671,5.945327,4.055231,6.880473,4.764990,0.402336],[-9.999081,-6.176854,-3.650237,6.506454,3.889845,3.991922,-3.303677],[-9.601131,3.101811,-4.734941,5.712969,-4.520604,-2.250796,0.143607]],[[-3.217419,0.282004,-6.987214,-0.806325,7.931564,1.073329,2.483785],[-0.501088,3.506659,-1.863194,-9.822718,5.446069,-8.116001,-2.358219],[7.196021,5.625775,-1.459078,-9.925929,-4.178893,-7.394171,0.102547],[-9.379521,-3.994629,-2.584132,-4.774579,-1.267963,9.815507,-6.681341],[6.347836,-6.374883,0.503545,-6.269575,-9.380228,-1.836351,-6.084022],[-7.297920,-4.358758,-9.581891,-4.358983,7.988615,0.805808,6.383743],[6.075285,-9.340145,-4.382442,-2.107672,-3.904185,6.004068,0.537007],[-4.383293,-0.664577,5.827712,8.497288,-5.924328,-2.865088,-8.323898],[5.782376,1.472425,-9.483804,-4.745793,-5.171275,-1.678016,2.092226],[-4.917666,4.993518,-4.552191,0.300541,-8.180514,0.680060,-3.059853],[-8.505863,5.453745,-7.107244,0.704758,7.366546,2.999409,-3.140624],[-7.017191,-1.120621,-6.756278,1.296413,1.075650,3.268014,-6.617768]],[[-9.436733,-5.668031,9.473963,2.608040,-5.767375,-5.849403,-2.463287],[-7.087786,8.259065,-9.684567,7.387273,3.112938,-4.408132,0.599178],[6.502523,-4.354665,7.875701,-6.165719,9.628102,-1.499437,-4.936462],[0.457083,3.073810,3.693673,-2.708709,-4.439086,8.296584,5.685377],[-1.608260,3.454000,-8.183422,-1.288863,-7.476810,-2.430474,-7.406162],[-5.465847,-2.354733,8.519106,9.549315,-0.335709,-6.797538,9.396168],[1.813710,2.338098,2.201015,1.444689,9.705763,5.787249,-9.129382],[4.921786,8.270324,-5.845678,3.966280,2.129838,-8.669743,-2.603026],[-7.856970,-4.753791,-4.176900,2.767049,-4.766283,1.714023,-6.592851],[-2.270155,3.302771,2.707884,3.513062,-3.741488,7.167900,9.089214],[9.005869,0.873580,4.554437,9.932119,5.627570,9.788375,1.189852],[4.696712,-7.997429,7.878691,1.076940,-9.026165,-3.299413,3.571855]]], dtype = "float64")#candidate|8956|(5, 12, 7)|const|float64
bop_8957 = relay.minimum(call_8927.astype('uint8'), const_8956.astype('uint8')) # shape=(5, 12, 7)
bop_8960 = relay.minimum(call_8928.astype('uint8'), const_8956.astype('uint8')) # shape=(5, 12, 7)
uop_8961 = relay.rsqrt(bop_8957.astype('float64')) # shape=(5, 12, 7)
uop_8963 = relay.rsqrt(bop_8960.astype('float64')) # shape=(5, 12, 7)
var_8988 = relay.var("var_8988", dtype = "float64", shape = (5, 13, 7))#candidate|8988|(5, 13, 7)|var|float64
bop_8989 = relay.logical_and(call_8927.astype('bool'), var_8988.astype('bool')) # shape=(5, 13, 7)
bop_8992 = relay.logical_and(call_8928.astype('bool'), var_8988.astype('bool')) # shape=(5, 13, 7)
output = relay.Tuple([bop_8932,uop_8961,bop_8989,])
output2 = relay.Tuple([bop_8935,uop_8963,bop_8992,])
func_8998 = relay.Function([var_8988,], output)
mod['func_8998'] = func_8998
mod = relay.transform.InferType()(mod)
var_8999 = relay.var("var_8999", dtype = "float64", shape = (5, 13, 7))#candidate|8999|(5, 13, 7)|var|float64
output = func_8998(var_8999)
func_9000 = relay.Function([var_8999], output)
mutated_mod['func_9000'] = func_9000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8408_call = mod.get_global_var('func_8408')
func_8410_call = mutated_mod.get_global_var('func_8410')
call_9105 = relay.TupleGetItem(func_8408_call(), 1)
call_9106 = relay.TupleGetItem(func_8410_call(), 1)
output = relay.Tuple([call_9105,])
output2 = relay.Tuple([call_9106,])
func_9112 = relay.Function([], output)
mod['func_9112'] = func_9112
mod = relay.transform.InferType()(mod)
mutated_mod['func_9112'] = func_9112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9112_call = mutated_mod.get_global_var('func_9112')
call_9113 = func_9112_call()
output = call_9113
func_9114 = relay.Function([], output)
mutated_mod['func_9114'] = func_9114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4931_call = mod.get_global_var('func_4931')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_9130 = relay.TupleGetItem(func_4931_call(), 0)
call_9131 = relay.TupleGetItem(func_4933_call(), 0)
output = call_9130
output2 = call_9131
func_9138 = relay.Function([], output)
mod['func_9138'] = func_9138
mod = relay.transform.InferType()(mod)
mutated_mod['func_9138'] = func_9138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9138_call = mutated_mod.get_global_var('func_9138')
call_9139 = func_9138_call()
output = call_9139
func_9140 = relay.Function([], output)
mutated_mod['func_9140'] = func_9140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_9182 = relay.TupleGetItem(func_7873_call(), 0)
call_9183 = relay.TupleGetItem(func_7875_call(), 0)
output = relay.Tuple([call_9182,])
output2 = relay.Tuple([call_9183,])
func_9203 = relay.Function([], output)
mod['func_9203'] = func_9203
mod = relay.transform.InferType()(mod)
output = func_9203()
func_9204 = relay.Function([], output)
mutated_mod['func_9204'] = func_9204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8073_call = mod.get_global_var('func_8073')
func_8075_call = mutated_mod.get_global_var('func_8075')
call_9250 = relay.TupleGetItem(func_8073_call(), 1)
call_9251 = relay.TupleGetItem(func_8075_call(), 1)
func_8998_call = mod.get_global_var('func_8998')
func_9000_call = mutated_mod.get_global_var('func_9000')
var_9261 = relay.var("var_9261", dtype = "float64", shape = (455,))#candidate|9261|(455,)|var|float64
call_9260 = relay.TupleGetItem(func_8998_call(relay.reshape(var_9261.astype('float64'), [5, 13, 7])), 1)
call_9262 = relay.TupleGetItem(func_9000_call(relay.reshape(var_9261.astype('float64'), [5, 13, 7])), 1)
uop_9269 = relay.rsqrt(var_9261.astype('float64')) # shape=(455,)
func_8073_call = mod.get_global_var('func_8073')
func_8075_call = mutated_mod.get_global_var('func_8075')
call_9275 = relay.TupleGetItem(func_8073_call(), 2)
call_9276 = relay.TupleGetItem(func_8075_call(), 2)
output = relay.Tuple([call_9250,call_9260,uop_9269,call_9275,])
output2 = relay.Tuple([call_9251,call_9262,uop_9269,call_9276,])
func_9282 = relay.Function([var_9261,], output)
mod['func_9282'] = func_9282
mod = relay.transform.InferType()(mod)
var_9283 = relay.var("var_9283", dtype = "float64", shape = (455,))#candidate|9283|(455,)|var|float64
output = func_9282(var_9283)
func_9284 = relay.Function([var_9283], output)
mutated_mod['func_9284'] = func_9284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9203_call = mod.get_global_var('func_9203')
func_9204_call = mutated_mod.get_global_var('func_9204')
call_9307 = relay.TupleGetItem(func_9203_call(), 0)
call_9308 = relay.TupleGetItem(func_9204_call(), 0)
var_9352 = relay.var("var_9352", dtype = "float64", shape = (5, 12, 7))#candidate|9352|(5, 12, 7)|var|float64
bop_9353 = relay.logical_and(call_9307.astype('bool'), var_9352.astype('bool')) # shape=(5, 12, 7)
bop_9356 = relay.logical_and(call_9308.astype('bool'), var_9352.astype('bool')) # shape=(5, 12, 7)
output = bop_9353
output2 = bop_9356
func_9396 = relay.Function([var_9352,], output)
mod['func_9396'] = func_9396
mod = relay.transform.InferType()(mod)
var_9397 = relay.var("var_9397", dtype = "float64", shape = (5, 12, 7))#candidate|9397|(5, 12, 7)|var|float64
output = func_9396(var_9397)
func_9398 = relay.Function([var_9397], output)
mutated_mod['func_9398'] = func_9398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8199_call = mod.get_global_var('func_8199')
func_8200_call = mutated_mod.get_global_var('func_8200')
call_9428 = relay.TupleGetItem(func_8199_call(), 0)
call_9429 = relay.TupleGetItem(func_8200_call(), 0)
func_6286_call = mod.get_global_var('func_6286')
func_6290_call = mutated_mod.get_global_var('func_6290')
var_9431 = relay.var("var_9431", dtype = "float64", shape = ())#candidate|9431|()|var|float64
var_9432 = relay.var("var_9432", dtype = "float64", shape = (3, 78))#candidate|9432|(3, 78)|var|float64
call_9430 = relay.TupleGetItem(func_6286_call(relay.reshape(var_9431.astype('float64'), []), relay.reshape(var_9432.astype('float64'), [6, 3, 13]), ), 0)
call_9433 = relay.TupleGetItem(func_6290_call(relay.reshape(var_9431.astype('float64'), []), relay.reshape(var_9432.astype('float64'), [6, 3, 13]), ), 0)
bop_9437 = relay.maximum(var_9432.astype('float32'), var_9431.astype('float32')) # shape=(3, 78)
output = relay.Tuple([call_9428,call_9430,bop_9437,])
output2 = relay.Tuple([call_9429,call_9433,bop_9437,])
func_9445 = relay.Function([var_9431,var_9432,], output)
mod['func_9445'] = func_9445
mod = relay.transform.InferType()(mod)
var_9446 = relay.var("var_9446", dtype = "float64", shape = ())#candidate|9446|()|var|float64
var_9447 = relay.var("var_9447", dtype = "float64", shape = (3, 78))#candidate|9447|(3, 78)|var|float64
output = func_9445(var_9446,var_9447,)
func_9448 = relay.Function([var_9446,var_9447,], output)
mutated_mod['func_9448'] = func_9448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mod.get_global_var('func_7274')
func_7275_call = mutated_mod.get_global_var('func_7275')
call_9527 = func_7274_call()
call_9528 = func_7274_call()
output = relay.Tuple([call_9527,])
output2 = relay.Tuple([call_9528,])
func_9555 = relay.Function([], output)
mod['func_9555'] = func_9555
mod = relay.transform.InferType()(mod)
output = func_9555()
func_9556 = relay.Function([], output)
mutated_mod['func_9556'] = func_9556
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9560 = relay.const([[[False,False,True,True,True,False,True,True,True,True,True,False,True],[False,False,False,True,False,True,True,False,False,True,False,True,False],[False,False,False,False,False,True,False,True,False,True,False,False,True]]], dtype = "bool")#candidate|9560|(1, 3, 13)|const|bool
var_9561 = relay.var("var_9561", dtype = "bool", shape = (12, 3, 13))#candidate|9561|(12, 3, 13)|var|bool
bop_9562 = relay.logical_and(const_9560.astype('bool'), var_9561.astype('bool')) # shape=(12, 3, 13)
output = bop_9562
output2 = bop_9562
func_9566 = relay.Function([var_9561,], output)
mod['func_9566'] = func_9566
mod = relay.transform.InferType()(mod)
mutated_mod['func_9566'] = func_9566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9567 = relay.var("var_9567", dtype = "bool", shape = (12, 3, 13))#candidate|9567|(12, 3, 13)|var|bool
func_9566_call = mutated_mod.get_global_var('func_9566')
call_9568 = func_9566_call(var_9567)
output = call_9568
func_9569 = relay.Function([var_9567], output)
mutated_mod['func_9569'] = func_9569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9112_call = mod.get_global_var('func_9112')
func_9114_call = mutated_mod.get_global_var('func_9114')
call_9616 = relay.TupleGetItem(func_9112_call(), 0)
call_9617 = relay.TupleGetItem(func_9114_call(), 0)
output = call_9616
output2 = call_9617
func_9618 = relay.Function([], output)
mod['func_9618'] = func_9618
mod = relay.transform.InferType()(mod)
output = func_9618()
func_9619 = relay.Function([], output)
mutated_mod['func_9619'] = func_9619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5886_call = mod.get_global_var('func_5886')
func_5887_call = mutated_mod.get_global_var('func_5887')
call_9702 = relay.TupleGetItem(func_5886_call(), 1)
call_9703 = relay.TupleGetItem(func_5887_call(), 1)
output = relay.Tuple([call_9702,])
output2 = relay.Tuple([call_9703,])
func_9706 = relay.Function([], output)
mod['func_9706'] = func_9706
mod = relay.transform.InferType()(mod)
output = func_9706()
func_9707 = relay.Function([], output)
mutated_mod['func_9707'] = func_9707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9720 = relay.var("var_9720", dtype = "float32", shape = (8, 1, 7))#candidate|9720|(8, 1, 7)|var|float32
uop_9721 = relay.sinh(var_9720.astype('float32')) # shape=(8, 1, 7)
output = relay.Tuple([uop_9721,])
output2 = relay.Tuple([uop_9721,])
func_9724 = relay.Function([var_9720,], output)
mod['func_9724'] = func_9724
mod = relay.transform.InferType()(mod)
var_9725 = relay.var("var_9725", dtype = "float32", shape = (8, 1, 7))#candidate|9725|(8, 1, 7)|var|float32
output = func_9724(var_9725)
func_9726 = relay.Function([var_9725], output)
mutated_mod['func_9726'] = func_9726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8901_call = mod.get_global_var('func_8901')
func_8902_call = mutated_mod.get_global_var('func_8902')
call_9743 = func_8901_call()
call_9744 = func_8901_call()
func_8240_call = mod.get_global_var('func_8240')
func_8242_call = mutated_mod.get_global_var('func_8242')
call_9745 = func_8240_call()
call_9746 = func_8240_call()
output = relay.Tuple([call_9743,call_9745,])
output2 = relay.Tuple([call_9744,call_9746,])
func_9749 = relay.Function([], output)
mod['func_9749'] = func_9749
mod = relay.transform.InferType()(mod)
output = func_9749()
func_9750 = relay.Function([], output)
mutated_mod['func_9750'] = func_9750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9799 = relay.var("var_9799", dtype = "float32", shape = (16, 11, 6))#candidate|9799|(16, 11, 6)|var|float32
uop_9800 = relay.cos(var_9799.astype('float32')) # shape=(16, 11, 6)
func_7438_call = mod.get_global_var('func_7438')
func_7441_call = mutated_mod.get_global_var('func_7441')
var_9805 = relay.var("var_9805", dtype = "int16", shape = (1, 1260))#candidate|9805|(1, 1260)|var|int16
call_9804 = relay.TupleGetItem(func_7438_call(relay.reshape(var_9805.astype('int16'), [1260,])), 0)
call_9806 = relay.TupleGetItem(func_7441_call(relay.reshape(var_9805.astype('int16'), [1260,])), 0)
func_7873_call = mod.get_global_var('func_7873')
func_7875_call = mutated_mod.get_global_var('func_7875')
call_9809 = relay.TupleGetItem(func_7873_call(), 0)
call_9810 = relay.TupleGetItem(func_7875_call(), 0)
func_3299_call = mod.get_global_var('func_3299')
func_3303_call = mutated_mod.get_global_var('func_3303')
var_9813 = relay.var("var_9813", dtype = "float64", shape = (15,))#candidate|9813|(15,)|var|float64
var_9814 = relay.var("var_9814", dtype = "float64", shape = (225,))#candidate|9814|(225,)|var|float64
call_9812 = relay.TupleGetItem(func_3299_call(relay.reshape(var_9813.astype('float64'), [5, 3, 1]), relay.reshape(var_9814.astype('float64'), [5, 3, 15]), ), 1)
call_9815 = relay.TupleGetItem(func_3303_call(relay.reshape(var_9813.astype('float64'), [5, 3, 1]), relay.reshape(var_9814.astype('float64'), [5, 3, 15]), ), 1)
const_9818 = relay.const([[[9.636178,-8.978263,7.631629,-2.320910,-6.438465,8.258879],[8.203553,-8.456488,3.872113,-4.552792,-8.150702,1.014218],[1.100563,-9.093941,-6.693220,6.238083,-8.417515,2.590373],[6.811782,7.423429,-5.052018,2.319001,-0.629948,4.762174],[1.497771,2.522824,-8.312490,6.931037,7.292831,1.960286],[2.605454,-3.498460,-5.110733,-9.284581,1.938848,-9.138116],[-4.985859,-1.882710,9.058368,-5.637714,7.078787,-9.046210],[-6.526573,3.006804,7.234650,-8.664688,4.882169,3.188167],[-2.424848,7.557207,9.320493,4.090138,8.086876,-2.183921],[2.036570,-9.068800,-9.420561,-3.640217,-3.120132,6.351063],[-3.577216,-0.617575,-0.783898,-7.007761,4.159742,-6.079614]],[[7.795311,-9.526367,0.301491,1.394374,-7.695188,2.193864],[-1.340176,5.530432,3.334587,-0.916379,-9.088581,3.080252],[-3.766661,2.147630,1.896652,9.497344,2.863524,-9.213954],[-1.527270,-0.831124,9.925036,-4.942601,1.513798,-1.056454],[-1.913634,2.512119,7.071710,2.766337,-5.364840,-8.551546],[-0.341522,-6.644508,8.140409,5.875512,-2.151296,-0.029312],[4.404581,0.097857,1.350340,-3.412559,-9.869855,-5.878586],[-1.005404,-4.493652,4.971815,6.888009,-3.172422,5.597601],[-6.009694,3.257138,-9.129341,-8.504660,-0.729152,4.080197],[6.673222,3.864733,7.845389,9.042410,8.850298,-1.998627],[-6.621508,1.762266,3.452894,3.044846,1.437172,-0.107679]],[[-8.564649,2.576154,-9.715866,-3.468880,-1.184070,4.281835],[-5.222180,-2.357784,-8.616292,-5.535248,-1.960584,0.581429],[-3.602068,8.524061,-4.321637,-8.013263,-3.040476,3.880591],[-0.496529,-8.214147,-6.705394,-5.457542,-2.439044,-8.591233],[2.632029,-4.187212,-0.311778,0.993563,-6.162845,-4.409088],[-3.726073,7.808489,0.073788,3.002460,2.426486,-4.675262],[7.156708,-9.331858,5.916261,1.173291,2.787728,-5.103814],[5.538041,-7.535933,-2.569233,-9.760886,1.382124,2.168696],[0.972947,-5.390957,-0.394997,-6.695165,4.041501,-6.189200],[2.805839,9.641546,2.857156,9.703905,7.458020,-9.351363],[-4.530157,-7.532989,-2.210139,-9.188328,-8.323631,-4.596316]],[[-7.780630,6.489173,1.189669,-4.360600,9.131754,5.634132],[-1.271241,0.608899,8.608010,2.708525,1.475873,6.903750],[-3.712578,2.908800,3.717775,6.835081,-3.936893,5.992689],[-0.781459,-4.024067,-4.024145,-0.128322,-6.010777,-3.345148],[5.749766,-1.433311,-1.567553,9.837614,0.190404,0.489787],[-2.313943,-5.218304,2.692045,5.403261,-3.075443,8.680730],[3.646060,2.989742,-7.458166,5.985966,1.440928,-1.119056],[-5.693312,-0.563857,-0.355740,-6.436287,5.893005,5.864167],[-3.254035,-9.446875,-3.854498,6.782273,-9.810343,-1.519798],[4.853754,-5.884121,0.206978,-6.249371,-9.224930,9.059124],[-4.765859,-0.846714,9.687283,2.415284,-1.688866,-6.873232]],[[8.957518,-2.543017,-3.930119,-1.065302,6.045981,-5.142841],[1.181514,-5.757642,-3.139548,-4.565108,6.837945,-0.443490],[-4.832734,-2.932210,3.070237,-7.854233,9.665390,-2.597278],[5.864734,8.306518,-5.684821,2.360888,-1.814772,4.550630],[2.880939,1.233918,-5.517457,5.315972,3.800370,7.103300],[-9.337108,-5.711114,0.843077,9.468619,5.247661,0.242872],[9.434222,-7.772013,-7.936442,-4.682391,4.870047,-2.833701],[9.496151,0.006460,5.780209,7.795119,-5.400012,1.227377],[9.819992,-9.986592,2.462961,-3.669712,-3.721433,-5.493839],[-7.116836,-0.581772,3.764649,-4.821672,0.623084,4.324362],[-2.837396,-0.459351,-2.435606,-7.068792,7.083365,9.302812]],[[-4.837303,6.401549,-4.599629,1.377892,-6.191765,-2.473979],[-1.365380,-9.581759,-5.291550,8.150121,-4.590062,1.316053],[4.910390,-6.576910,-2.721004,-0.936763,7.781071,6.969192],[4.117271,0.673752,3.509804,2.190591,-4.224938,2.132675],[-1.260113,7.212699,-0.311957,0.890428,7.141818,-3.412526],[0.759157,-4.824416,-4.023332,-2.980094,7.942034,0.162804],[-5.678390,-9.673503,-3.884410,3.835507,-5.975226,-0.547453],[-7.417343,2.689558,5.926538,8.889454,-8.615823,-0.639396],[-8.526627,-8.435029,-4.560285,-7.244625,5.900957,1.805370],[-0.976400,-6.657542,5.912222,4.720420,-0.639113,1.472466],[1.971571,7.619605,6.118218,-9.742561,-1.998654,3.564692]],[[8.658225,2.307516,-1.304646,-3.255154,-9.427158,-0.416552],[8.357829,5.601383,-1.707946,-4.702022,8.660458,4.511802],[2.773441,-8.015482,-4.972800,-2.888360,3.451973,-2.934823],[-4.086528,-5.397480,6.874676,-6.978508,5.259535,5.578717],[8.036248,8.854291,4.058792,7.278006,-0.566677,-7.400197],[3.788638,-0.092463,2.450418,-6.299932,-8.433703,-0.602800],[4.357806,-2.519390,-3.617473,-4.904869,9.046926,-7.966328],[-1.974043,8.117725,-2.627186,-1.454825,-3.324222,-7.126851],[4.546844,0.193771,-2.428983,-0.497045,3.159705,-2.640978],[-5.847996,8.322989,-8.181975,-1.767678,5.374115,4.189196],[8.967864,3.125033,7.243675,1.300707,-2.981679,-3.128297]],[[-7.297023,7.426596,0.705476,8.228571,-7.848677,-7.185304],[6.065942,-3.398319,-3.925946,-8.890390,3.140642,-4.690431],[7.390617,8.983737,-9.577498,-5.883782,-1.833883,-9.848468],[3.875634,6.671836,-3.662610,-7.098190,-8.832427,-9.020379],[2.220906,8.754012,-4.241162,7.359256,2.837601,-4.720689],[-9.915914,2.129707,-3.578161,-4.556494,2.176794,9.649891],[1.255935,1.848490,-4.026568,1.857757,-3.149224,-0.512320],[-8.027948,3.141878,8.483073,5.125149,-0.384144,-3.742452],[1.468439,8.547371,9.602215,-2.125384,-0.248973,-9.810471],[-7.263694,-0.307992,-4.486568,2.553220,-2.504936,4.206406],[-7.674128,8.938450,8.723329,0.816977,5.399511,0.678049]],[[-6.237143,9.043441,-0.360869,7.835774,4.639847,8.196565],[7.041509,-2.979275,0.855246,8.423417,8.122598,2.031965],[-0.931296,5.977238,5.429507,-3.514385,-5.206420,-0.788981],[-7.278317,3.663100,-8.423395,2.168853,-1.621297,7.639933],[7.264392,7.402077,-8.554184,8.433507,-9.830558,-6.200067],[-3.293480,7.389476,-5.660601,1.333715,8.910174,5.452493],[9.678980,7.774583,-0.027569,-5.804978,8.152245,-4.108025],[-9.987081,1.515378,-2.033071,-7.363622,-2.014481,-2.036620],[4.384145,9.318822,-9.501059,-3.456569,-7.064429,1.392529],[9.132266,-2.206231,-3.325883,-3.874210,3.304645,7.839296],[0.644009,-9.731115,4.009818,-6.388030,-1.868642,3.349760]],[[-6.253559,-2.078257,-2.555959,-0.024752,9.951826,-1.744058],[7.508385,-6.176660,-2.256459,2.971492,8.543830,-0.476685],[-6.505155,-6.265831,-1.860317,3.181205,6.290059,1.597915],[-3.264924,3.593460,1.343599,2.461392,-7.134264,8.099508],[9.987652,-4.537529,-2.448867,6.984057,-1.025389,0.174280],[5.616350,6.967474,-3.881664,-9.433041,-3.080183,3.220348],[-5.451605,6.110953,-8.022633,2.624909,8.499787,4.951338],[-5.772344,-3.285910,-1.592076,-5.859543,-0.662149,-7.058528],[-8.937304,5.520735,5.057220,-3.070796,8.771287,-9.321513],[-1.193916,3.152208,-3.235277,3.502937,0.160424,4.647048],[5.592587,-5.502909,3.120205,1.105205,2.849201,3.264568]],[[0.620628,-8.102037,7.648995,-6.274937,9.998184,6.206173],[-9.263122,-1.667147,-2.381508,6.841513,3.314396,5.106998],[3.413842,0.217612,-9.062334,0.931226,-5.259812,-3.470657],[-4.445788,-3.802497,1.608523,6.166258,-0.432209,3.813473],[1.608193,5.306492,-5.830735,-5.361827,8.511383,4.555175],[-2.699187,2.383666,-0.954762,-9.537002,-0.391473,-8.697949],[-3.630202,-1.318700,-5.474356,8.705413,-9.787862,-9.412115],[9.159879,-4.753062,-3.059482,-8.249867,-1.460040,-0.195570],[-8.989799,-3.790843,7.919400,-2.132042,-5.657505,-0.302371],[-7.796651,2.844671,-6.240899,-1.436365,-5.020920,-8.188088],[-1.622174,8.785093,-5.303074,0.558756,-1.433586,-3.558106]],[[8.726310,0.373244,3.901674,-4.903513,8.713423,-6.214365],[5.757468,1.646821,-5.662229,5.619153,0.948287,1.191439],[-0.741456,-3.594439,-3.397602,-8.277953,7.131280,-4.292350],[6.306325,-6.535927,-4.844487,5.362578,4.321587,2.558640],[-7.065417,-8.974589,5.730025,-5.260185,0.677760,-9.640245],[3.219131,4.242183,-7.827217,2.615592,-6.291845,-7.073407],[-9.665004,-0.182041,-5.156740,5.111500,-0.195381,-9.305088],[-6.797485,9.024907,1.175430,6.149688,-3.012903,0.992481],[-2.627498,7.065832,9.295970,6.305818,3.074815,7.524351],[4.812176,-0.093772,8.367842,2.036959,4.256576,7.837766],[-8.984836,7.358760,5.929964,9.406704,3.667720,-4.554012]],[[-1.327178,1.415738,7.947923,-7.754468,9.648562,7.473889],[4.774449,-4.987405,3.539462,-2.842476,6.476146,8.251577],[-8.082923,-8.652749,5.646902,-3.466472,7.126479,1.242312],[9.930995,3.145147,-2.777393,7.086319,-1.067056,4.457420],[7.584366,1.008743,1.390355,7.807786,-5.459096,-3.726473],[-1.091292,3.572845,-9.063700,-9.080679,-2.105996,-4.081355],[-2.091915,8.574082,-8.020480,5.986682,-1.691349,-2.561599],[6.510116,6.821247,0.719992,2.907782,0.769031,6.573886],[4.078528,8.344835,-4.647567,-7.001281,4.109074,6.150911],[-0.446999,1.816457,5.800877,0.181228,0.898095,-7.001943],[-8.631450,-3.460876,0.719106,2.093189,9.721146,-7.466746]],[[-0.165824,4.325000,-1.423890,4.514591,8.651307,3.345582],[-3.889366,4.476393,-5.117923,5.700875,5.323272,-3.393742],[0.631922,5.126983,-0.341616,-8.898385,-2.419067,-9.486299],[-8.641050,-5.945308,-4.732837,0.383269,-7.197522,-3.450526],[-1.119631,9.374703,7.828674,-0.157729,5.935663,6.908752],[-9.507681,-4.090578,4.221558,8.668112,7.876846,2.865726],[-2.959864,-3.644415,8.813639,4.104030,-8.362040,1.473303],[-0.163139,2.207562,8.347778,1.996605,-5.566249,5.952698],[-8.632047,-9.887626,-7.310038,3.230211,-8.469077,9.955579],[-0.006475,3.106086,1.182957,-5.774447,1.270779,9.231709],[-4.470973,-7.898858,-0.897516,4.763051,-2.540257,-4.265241]],[[0.602727,3.004361,-8.286862,-0.304054,2.770666,4.995198],[-3.939564,-7.946724,5.979313,3.001875,-3.336932,9.852293],[1.773220,3.679592,-8.996781,-6.110387,2.207087,5.851181],[-5.395656,-8.707727,9.672686,-5.253582,6.209197,9.628157],[-4.181900,9.965388,-4.212369,7.449897,0.914150,-7.931763],[2.580385,7.981897,-1.679588,-7.611759,-5.130857,3.517016],[-1.186682,-2.193952,-1.086086,4.613940,-6.458709,-9.477077],[6.362809,-5.237094,-3.323190,-4.490914,7.105581,5.548203],[-5.737550,-8.348613,-7.710077,-2.630428,4.309320,4.843147],[5.735089,-2.243303,1.566342,-2.170069,-1.014383,2.771284],[2.085451,-1.956975,0.651139,2.645409,4.472657,5.317926]],[[4.057247,7.742560,-0.937266,-5.784129,5.931539,3.211406],[9.005800,3.145071,-4.804785,2.421592,-3.018381,-7.278465],[8.857250,5.638632,0.687521,-6.070259,-3.257741,9.691084],[-4.680855,-3.638237,-1.033004,-8.852725,-1.223068,8.842558],[-4.024695,-1.476864,3.857080,8.068672,-5.351195,6.880111],[0.133013,-3.779125,4.800210,-3.194287,-7.767904,5.635036],[-6.482766,-4.862700,6.236900,9.881804,-1.421922,-1.230011],[-3.910326,-1.576640,-8.357628,-5.390547,-2.434613,-2.974271],[-6.670662,5.079430,3.094477,7.931144,8.688387,-8.348453],[9.376923,-7.034100,-3.521162,7.228989,-9.323682,9.282305],[-8.355303,-7.899949,8.569318,-5.896228,9.986687,-6.721329]]], dtype = "float32")#candidate|9818|(16, 11, 6)|const|float32
bop_9819 = relay.less(uop_9800.astype('bool'), relay.reshape(const_9818.astype('bool'), relay.shape_of(uop_9800))) # shape=(16, 11, 6)
output = relay.Tuple([call_9804,var_9805,call_9809,call_9812,var_9813,var_9814,bop_9819,])
output2 = relay.Tuple([call_9806,var_9805,call_9810,call_9815,var_9813,var_9814,bop_9819,])
func_9827 = relay.Function([var_9799,var_9805,var_9813,var_9814,], output)
mod['func_9827'] = func_9827
mod = relay.transform.InferType()(mod)
mutated_mod['func_9827'] = func_9827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9827_call = mutated_mod.get_global_var('func_9827')
var_9829 = relay.var("var_9829", dtype = "float32", shape = (16, 11, 6))#candidate|9829|(16, 11, 6)|var|float32
var_9830 = relay.var("var_9830", dtype = "int16", shape = (1, 1260))#candidate|9830|(1, 1260)|var|int16
var_9831 = relay.var("var_9831", dtype = "float64", shape = (15,))#candidate|9831|(15,)|var|float64
var_9832 = relay.var("var_9832", dtype = "float64", shape = (225,))#candidate|9832|(225,)|var|float64
call_9828 = func_9827_call(var_9829,var_9830,var_9831,var_9832,)
output = call_9828
func_9833 = relay.Function([var_9829,var_9830,var_9831,var_9832,], output)
mutated_mod['func_9833'] = func_9833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8073_call = mod.get_global_var('func_8073')
func_8075_call = mutated_mod.get_global_var('func_8075')
call_9844 = relay.TupleGetItem(func_8073_call(), 1)
call_9845 = relay.TupleGetItem(func_8075_call(), 1)
func_6428_call = mod.get_global_var('func_6428')
func_6434_call = mutated_mod.get_global_var('func_6434')
var_9855 = relay.var("var_9855", dtype = "float64", shape = (90, 2))#candidate|9855|(90, 2)|var|float64
var_9856 = relay.var("var_9856", dtype = "float32", shape = (1080,))#candidate|9856|(1080,)|var|float32
var_9857 = relay.var("var_9857", dtype = "float32", shape = (780,))#candidate|9857|(780,)|var|float32
const_9858 = relay.const([-6.001048,1.749120,-2.426235,7.374005,1.069122,-0.044280,-6.796530,2.723212,8.100711,1.851973,-2.950852,-3.282662,-9.978816,9.746639,8.057826,2.887100,2.215455,-5.631895,-0.011759,8.865554,-5.589705,8.180823,1.326382,1.761471,-6.945436,-2.087495,3.343965,2.466857,-0.008948,7.923969,-8.638617,4.391716,-0.375726,-5.389068,-1.531058,-8.325202,2.672342,4.627952,3.980682,7.577789,-1.471665,-4.723591,1.936466,1.565463,-9.548154,8.868664,7.260054,-7.987425,-2.350737,-5.418650,-1.678855,1.389890,6.497305,-4.319111,-0.134050,-3.461090,6.629629,-7.342919,-5.712869,-5.430349,6.244777,2.652039,0.849134], dtype = "float32")#candidate|9858|(63,)|const|float32
call_9854 = relay.TupleGetItem(func_6428_call(relay.reshape(var_9855.astype('float64'), [10, 2, 9]), relay.reshape(var_9856.astype('float32'), [1080,]), relay.reshape(var_9857.astype('float32'), [780,]), relay.reshape(const_9858.astype('float32'), [1, 63]), relay.reshape(var_9855.astype('float64'), [10, 2, 9]), ), 4)
call_9859 = relay.TupleGetItem(func_6434_call(relay.reshape(var_9855.astype('float64'), [10, 2, 9]), relay.reshape(var_9856.astype('float32'), [1080,]), relay.reshape(var_9857.astype('float32'), [780,]), relay.reshape(const_9858.astype('float32'), [1, 63]), relay.reshape(var_9855.astype('float64'), [10, 2, 9]), ), 4)
func_9396_call = mod.get_global_var('func_9396')
func_9398_call = mutated_mod.get_global_var('func_9398')
const_9861 = relay.const([-7.388502,7.413475,7.616565,9.993778,-2.317490,0.913415,-3.156536,7.977476,1.388398,-9.788077,-3.494272,6.291069,-9.376736,-0.526442,3.082775,-2.426570,3.838485,-2.027277,0.501131,-1.611010,-7.377623,-5.274229,4.162796,-6.982939,-9.225885,4.241257,2.288839,-3.694652,-6.936795,1.763573,4.542204,-4.646376,-7.446397,5.455447,-4.852140,4.187442,7.624850,0.505736,-9.281949,-3.364628,1.341957,1.129144,-0.143901,-9.358926,-8.743635,-5.186043,8.167979,6.591749,-6.784843,6.643590,-2.831375,9.571690,-4.484840,-5.036310,-0.269307,2.485791,6.466819,-8.056165,-6.275306,-5.357879,-6.754264,3.525391,4.585950,7.997360,5.736183,7.578793,-2.088195,-5.369598,6.259987,8.966135,4.148469,4.717318,8.082341,-1.038759,-3.818493,5.884557,6.921221,-2.687164,8.669635,-1.816583,-5.386914,-6.337254,-0.431876,5.617552,3.342389,3.086685,-8.561338,2.901172,-8.424238,9.759792,9.699582,-4.779666,2.316706,6.636939,-2.939809,-3.578326,6.853118,0.685955,5.781430,-2.912536,5.321334,0.659428,-9.482229,-3.363620,-8.937721,-5.656837,-7.258411,-7.701455,5.746378,-4.511749,-5.580292,2.727251,2.237569,3.311277,5.327923,3.850132,-9.101927,-3.487919,-6.943864,4.342245,0.248509,-7.048052,-6.356749,5.712118,-9.229217,-2.237142,-9.037499,4.277982,-4.286320,-7.999729,-6.660124,3.894304,-5.473628,2.950065,-1.856305,8.627254,-0.766630,7.999859,8.901846,2.459055,-4.680896,-4.067494,5.343222,-8.561276,-5.298015,8.597371,-5.804061,6.908129,1.313982,0.553959,-0.934135,1.542822,-9.143365,8.168127,3.877716,-8.186283,-7.608160,9.205005,-9.609343,-9.892840,-2.920026,0.306569,-7.909747,-6.472955,7.945757,7.355666,-9.014050,8.815590,5.458708,-4.070065,4.671156,-0.368229,7.713551,6.709782,8.984363,1.196505,7.178369,-7.832074,7.137628,4.120861,4.422224,-2.141026,0.551612,-1.671688,0.493419,-5.075731,4.277203,-1.830785,-9.958480,-5.164057,9.077831,0.794234,-4.457781,-5.707863,-0.648044,8.380268,-1.833323,-4.961393,2.516908,-7.181106,5.759918,3.743983,9.090305,-3.503223,5.406011,8.789183,-6.532498,5.515821,7.513015,-8.978250,-3.371850,9.470224,-3.293705,-0.735655,-5.875900,-7.773916,9.686258,4.363282,6.459718,-6.036033,-6.528042,-3.002171,8.393945,-4.841672,9.192398,-0.105426,-5.164181,5.384994,0.756594,-7.995408,-1.996307,-8.867194,-9.083982,0.666615,0.876821,-2.486112,1.932196,-4.487316,-9.098129,2.475933,0.138005,0.616423,5.298508,-2.437582,8.687903,9.230526,6.783432,5.388409,4.233268,-1.409032,7.606594,-6.280517,2.558147,1.596359,9.611367,5.338943,-8.875898,-7.354794,9.860646,1.556980,3.125554,6.488480,-9.070396,-5.010154,1.122562,-7.788501,7.655623,3.391642,0.422026,9.241392,-6.547978,5.784108,2.632954,-1.437925,7.364446,0.870296,-9.297563,6.904938,-6.912080,-5.855414,-4.271891,-1.344538,-6.412093,-5.464407,-6.560035,-3.195446,5.017195,5.199653,-2.302739,0.566267,1.743220,-2.807881,7.346371,-4.128694,-3.145910,7.494494,8.449369,-0.783127,-3.782193,8.417172,-8.345272,2.035131,-5.618831,0.379873,-6.177752,-3.650615,5.342588,-5.928008,-6.285889,-4.612891,3.788326,-4.629581,1.469394,-6.709027,8.278351,-1.152409,-3.819506,2.796286,3.575284,0.619544,-8.002405,9.808673,-6.777020,-5.364208,5.493977,3.392302,1.725634,0.245095,2.047371,-2.561424,-8.265505,-8.066713,-6.799594,7.691063,-2.769621,2.480606,-5.357639,1.259389,-7.632285,2.405478,-8.520491,2.406105,-1.872789,3.926420,-7.082104,2.922627,-5.925472,1.633768,7.028420,-8.304476,0.304018,-4.295344,5.708458,1.859703,-1.569823,2.802060,0.157914,-6.250885,4.885673,5.915294,1.541911,-9.389942,2.737522,-9.090378,-5.941079,-2.008583,-6.604851,7.128240,-3.886727,-4.076651,-6.126321,-4.039557,-5.449300,5.317208,-9.566572,6.114684,7.045702,2.389105,-1.340183,-2.448170,4.482928,-7.544833,3.755671,1.563556,-9.455519,-2.444836,2.439691,6.902549,2.287938,4.360160,7.180232,2.976079,8.866489,2.421610,-5.974821,-6.772142,3.470055,-2.855665,5.961755,-7.110578,9.003986,-8.356276,5.991812,-2.689433,-0.771343,-2.675989,-2.640746,6.549774,6.654650,7.251715,-9.527228,0.032012,1.865512,-0.622775,5.604814,-0.828735,-4.308484,0.265852,-4.986290,-9.594099], dtype = "float64")#candidate|9861|(420,)|const|float64
call_9860 = func_9396_call(relay.reshape(const_9861.astype('float64'), [5, 12, 7]))
call_9862 = func_9396_call(relay.reshape(const_9861.astype('float64'), [5, 12, 7]))
uop_9870 = relay.asin(var_9855.astype('float32')) # shape=(90, 2)
bop_9874 = relay.minimum(uop_9870.astype('uint8'), relay.reshape(var_9855.astype('uint8'), relay.shape_of(uop_9870))) # shape=(90, 2)
var_9881 = relay.var("var_9881", dtype = "float64", shape = (11088,))#candidate|9881|(11088,)|var|float64
bop_9882 = relay.power(call_9854.astype('float64'), relay.reshape(var_9881.astype('float64'), relay.shape_of(call_9854))) # shape=(11088,)
bop_9885 = relay.power(call_9859.astype('float64'), relay.reshape(var_9881.astype('float64'), relay.shape_of(call_9859))) # shape=(11088,)
bop_9886 = relay.power(bop_9874.astype('float32'), relay.reshape(uop_9870.astype('float32'), relay.shape_of(bop_9874))) # shape=(90, 2)
output = relay.Tuple([call_9844,var_9856,var_9857,const_9858,call_9860,const_9861,bop_9882,bop_9886,])
output2 = relay.Tuple([call_9845,var_9856,var_9857,const_9858,call_9862,const_9861,bop_9885,bop_9886,])
F = relay.Function([var_9855,var_9856,var_9857,var_9881,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9855,var_9856,var_9857,var_9881,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

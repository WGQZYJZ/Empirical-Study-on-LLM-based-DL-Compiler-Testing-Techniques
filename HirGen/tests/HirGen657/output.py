import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_1261 = relay.var("var_1261", dtype = "float32", shape = (13, 12, 8))#candidate|1261|(13, 12, 8)|var|float32
uop_1262 = relay.asinh(var_1261.astype('float32')) # shape=(13, 12, 8)
output = relay.Tuple([uop_1262,])
output2 = relay.Tuple([uop_1262,])
func_1268 = relay.Function([var_1261,], output)
mod['func_1268'] = func_1268
mod = relay.transform.InferType()(mod)
mutated_mod['func_1268'] = func_1268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1269 = relay.var("var_1269", dtype = "float32", shape = (13, 12, 8))#candidate|1269|(13, 12, 8)|var|float32
func_1268_call = mutated_mod.get_global_var('func_1268')
call_1270 = func_1268_call(var_1269)
output = call_1270
func_1271 = relay.Function([var_1269], output)
mutated_mod['func_1271'] = func_1271
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1383 = relay.const([[[1,10,-5,-3,6,6],[4,9,8,10,-5,4]],[[-6,-5,-5,-4,-8,8],[5,-10,-9,8,4,7]],[[-7,7,-1,-1,6,-6],[5,-9,4,6,-1,10]],[[-3,-5,6,-1,7,6],[-1,-5,-5,1,-10,-2]],[[-10,-6,5,10,6,6],[-7,6,7,2,-1,8]],[[-9,-7,-9,-7,-7,7],[9,-1,5,9,-4,-6]],[[9,10,6,-7,7,5],[-4,3,5,5,-9,1]],[[4,6,6,-3,-9,-4],[-1,9,8,-3,8,6]],[[-8,-9,7,-3,-9,3],[2,-10,-8,-5,7,8]],[[9,10,9,-1,6,6],[-10,-6,-1,-4,-4,-5]],[[1,3,5,3,-5,1],[8,-1,-4,8,9,2]]], dtype = "int64")#candidate|1383|(11, 2, 6)|const|int64
var_1384 = relay.var("var_1384", dtype = "int64", shape = (11, 2, 6))#candidate|1384|(11, 2, 6)|var|int64
bop_1385 = relay.equal(const_1383.astype('bool'), relay.reshape(var_1384.astype('bool'), relay.shape_of(const_1383))) # shape=(11, 2, 6)
uop_1390 = relay.acosh(const_1383.astype('float32')) # shape=(11, 2, 6)
output = relay.Tuple([bop_1385,uop_1390,])
output2 = relay.Tuple([bop_1385,uop_1390,])
func_1430 = relay.Function([var_1384,], output)
mod['func_1430'] = func_1430
mod = relay.transform.InferType()(mod)
mutated_mod['func_1430'] = func_1430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1431 = relay.var("var_1431", dtype = "int64", shape = (11, 2, 6))#candidate|1431|(11, 2, 6)|var|int64
func_1430_call = mutated_mod.get_global_var('func_1430')
call_1432 = func_1430_call(var_1431)
output = call_1432
func_1433 = relay.Function([var_1431], output)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1518 = relay.var("var_1518", dtype = "float32", shape = ())#candidate|1518|()|var|float32
var_1519 = relay.var("var_1519", dtype = "float32", shape = (3, 15, 16))#candidate|1519|(3, 15, 16)|var|float32
bop_1520 = relay.floor_mod(var_1518.astype('float32'), var_1519.astype('float32')) # shape=(3, 15, 16)
uop_1523 = relay.exp(bop_1520.astype('float64')) # shape=(3, 15, 16)
func_1430_call = mod.get_global_var('func_1430')
func_1433_call = mutated_mod.get_global_var('func_1433')
const_1529 = relay.const([[7,1,-5,9],[9,-2,10,3],[-8,-6,-9,-4],[-3,-3,8,1],[3,-1,4,-10],[5,10,-6,7],[-6,-10,-3,-1],[-7,-5,4,-8],[9,-7,-9,-6],[1,-2,-10,2],[9,-9,8,-3],[6,8,6,-7],[7,-8,3,3],[-1,-10,3,7],[3,8,-7,6],[7,-3,4,-9],[-6,-7,2,-2],[6,-8,-3,3],[-10,-9,10,-10],[1,-1,5,-6],[-7,-9,-7,-6],[2,-10,-6,1],[3,-4,-7,-9],[10,-5,-10,-8],[-8,-7,-8,5],[-4,5,9,-9],[7,-5,-10,5],[8,8,5,-4],[3,-7,4,-10],[-9,10,2,4],[5,-6,-8,6],[2,-2,10,-1],[9,5,-10,-4]], dtype = "int64")#candidate|1529|(33, 4)|const|int64
call_1528 = relay.TupleGetItem(func_1430_call(relay.reshape(const_1529.astype('int64'), [11, 2, 6])), 1)
call_1530 = relay.TupleGetItem(func_1433_call(relay.reshape(const_1529.astype('int64'), [11, 2, 6])), 1)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
const_1537 = relay.const([-1.542659,6.453229,-9.153160,8.640361,3.759447,0.315532,7.906955,1.957953,-0.102691,8.834766,7.192258,1.583325,9.569613,3.109423,5.214992,8.984813,7.995580,-0.661603,2.029641,2.802580,5.642953,-6.850288,4.033423,5.806869,1.951840,2.290609,2.175204,1.313512,2.830061,4.002259,-5.071215,-9.721428,2.546780,4.828222,-5.856707,3.954650,1.310165,-5.661953,-3.308875,-6.437313,1.606124,-3.174629,-3.616255,5.193695,-8.637932,-2.574546,7.332390,-6.807767,8.877330,2.611886,1.739736,4.611675,-9.313767,0.295338,-6.959701,1.490232,3.078270,-8.577823,1.006011,-0.306555,-0.411097,-3.105371,7.845771,-2.241751,-6.724749,1.857213,4.269622,9.512973,-6.948342,-8.889890,-9.145423,-5.552472,6.846610,-8.848391,-0.287874,0.583000,2.961699,-6.425666,-8.509959,-6.704015,3.460025,-5.469514,-8.540365,-1.484699,-0.852211,5.980436,-5.344085,2.757413,-3.207364,3.111043,-3.507884,4.085993,-0.259440,-3.783129,1.910973,-1.009374,-6.575631,2.484573,-4.210914,-9.867173,-5.344979,7.352416,1.216731,-7.398273,-9.425715,4.108092,-6.144727,2.070140,-6.556084,-0.009438,-0.804655,-9.236602,9.517963,0.243587,-7.803871,6.398911,-5.963280,0.933047,4.610142,9.717241,4.631573,-1.653698,-5.255916,7.255893,9.550419,-5.179795,-4.093994,3.345553,-1.316407,3.310833,-1.401271,9.449136,0.637413,-9.886195,-7.019808,5.848625,-5.645858,-2.232205,2.444967,-0.929031,4.226854,-9.322527,1.812298,1.163449,-6.968487,-2.938512,9.511127,7.302995,0.751743,4.205486,-7.732151,7.346669,-0.366167,2.416295,7.820511,0.156091,-1.258155,-0.930204,3.078766,2.671668,-1.916366,-2.676433,5.532667,8.492479,7.320929,-2.738699,4.909207,9.877250,7.850053,1.550463,-5.467838,5.985799,-6.471654,-6.475475,-6.580255,9.002757,-5.377090,-0.901895,-0.318321,-2.944215,3.540266,7.675564,-1.118760,-2.670629,6.591448,3.987272,-9.088723,-4.786949,-0.594116,-9.950592,-8.871633,-0.734417,7.159148,-4.161044,-1.221269,-3.796502,7.736794,-5.995256,-9.114756,-7.361119,-9.244283,6.577211,-6.503972,9.540825,-9.715704,9.598924,5.765236,5.711386,4.892410,-7.115896,-7.431623,2.339359,-9.645109,-6.527013,-3.778197,-3.787575,-8.755506,-0.357927,0.236318,0.873135,4.234280,-4.753884,-4.481959,-3.634099,9.368076,5.217958,4.859692,-6.206645,-3.466101,-9.208456,7.039214,3.782709,-7.443717,-6.149812,9.511285,7.016569,0.507267,-8.455422,-8.851605,2.475604,6.903372,8.314386,4.588587,6.397186,-7.443553,-7.163197,-0.682860,2.070915,9.009424,8.890899,-5.819933,-7.306387,-1.094726,8.465356,8.140598,0.344939,-2.159912,6.364255,-5.966216,8.400453,-4.557311,-8.622832,-7.279340,5.326182,6.074356,-3.703962,6.225320,5.975812,2.679508,-1.117016,2.253977,-5.094235,9.822397,4.605063,-2.594195,-6.344188,1.030664,4.272417,8.240545,9.425057,2.566221,-4.393913,-0.651770,1.437793,-4.941947,-9.266981,3.775371,0.919342,-6.066850,-5.758052,-9.349918,2.381197,8.089240,0.998057,8.801645,5.464953,-3.073013,-6.376074,-5.495158,1.874918,4.967230,-0.913013,-7.090175,0.188552,6.085651,6.438154,1.940784,0.021375,9.177614,4.905100,0.208256,-1.798755,-7.531616,4.900343,-8.066622,8.797464,-6.941178,-2.995715,-7.131892,-8.498399,8.541379,5.172138,-6.385099,5.818768,8.600703,6.609919,6.711172,-1.998374,-7.603749,-5.474299,-9.784376,-4.063882,-3.656825,4.526417,3.923487,-1.322274,1.254702,8.923779,-0.668521,-2.529673,4.540707,-7.461001,3.932138,-8.847950,-1.841519,-6.689728,-2.745925,-2.497884,9.042388,7.584590,6.728591,9.757972,4.245393,-2.484388,7.331837,0.717476,-0.545343,3.981064,9.885386,3.402640,5.540912,-8.432322,2.108902,-7.735134,3.380106,1.432431,5.521941,0.081340,0.405608,-7.353517,-5.408383,5.598645,7.328432,-8.759356,-6.568336,1.767883,7.081838,2.549878,-9.802407,9.936404,-4.988502,-2.147801,8.302402,-4.043176,9.687042,7.933770,3.140501,9.602079,-0.483580,7.906057,6.079440,-8.908872,-5.077014,0.516255,8.714824,-3.298519,1.498913,6.124972,8.867435,7.873858,-9.743089,-9.619198,0.363013,-8.407265,-4.914265,-8.449312,-7.206323,-0.145991,9.439160,4.050113,9.548751,-7.099152,-7.132156,3.404910,2.692536,3.493894,-6.264570,1.878741,5.922414,4.898363,8.471541,3.241481,-3.356561,8.803485,-9.311014,-1.874068,-2.832908,-4.189445,-2.434317,-5.597575,6.267115,0.587942,-2.126027,0.188288,-2.479487,2.751666,7.319008,-7.178292,-9.701269,8.165866,-9.274048,-7.224419,-1.968773,-9.462821,4.017816,-3.540364,-1.440810,-7.534369,2.791584,-3.401973,-9.336650,6.772557,-8.438515,9.883792,8.647391,4.074385,-9.636400,2.733656,6.909603,5.934415,-6.099715,0.452048,3.939625,0.355650,9.995318,-6.397767,8.220463,6.777009,8.471120,3.818057,8.868130,6.859334,-5.278805,-4.439517,-2.905323,-0.839814,-8.268032,3.268805,7.443853,-6.183221,-2.621005,-9.405981,-6.369288,7.446731,-3.154721,1.222069,-2.252989,9.780051,2.587784,-0.332044,9.393971,-2.685129,-8.727303,6.206058,3.328674,-9.188962,6.049415,6.750394,0.215505,9.518973,3.401712,5.810129,5.494845,6.135553,0.995293,-2.786883,-3.698578,-7.429663,-5.981923,4.128746,8.316225,8.523033,-1.465768,-9.580914,-7.663045,-1.756471,-1.762279,3.345643,-2.612686,-6.657802,-8.158081,6.965972,-9.603889,0.401837,1.321830,-0.991033,-4.192192,9.538975,-5.655600,-4.744361,-9.555874,7.655029,1.439637,-5.247740,0.795902,8.290809,-1.666448,-9.941866,-2.885650,1.784476,-2.093721,-2.085198,-1.284429,-9.365286,0.916903,5.266464,0.030118,8.538438,6.689573,-9.322347,-6.425157,-5.019018,-4.136108,9.695351,-3.319953,0.373257,-0.478979,7.020743,0.308597,-1.992807,0.537111,-4.303068,-6.689824,4.239223,-5.673144,-7.798793,5.474820,5.800107,0.407181,-8.027383,5.775299,1.785018,0.230428,-1.499931,-1.438426,9.292205,-1.991384,-1.340601,3.071992,-1.943916,1.261206,3.525392,4.161322,0.152492,9.318148,-1.897309,6.525637,5.596287,1.563632,0.173459,-4.556880,6.912449,4.501739,4.058301,7.682207,-5.733470,-6.577353,7.375951,-4.623201,-8.122717,-4.167563,-5.422792,-3.525978,-7.876418,-6.029570,3.660658,-6.743196,2.941876,-1.439235,4.763294,9.791222,3.959555,8.932480,3.188380,1.613417,2.975433,6.060845,7.492250,2.353170,2.319357,2.833672,-2.591467,8.259211,7.271180,-5.262433,0.152498,-4.367052,5.014881,1.595203,3.328170,1.649653,-8.314173,8.049708,-0.879197,5.096622,-7.234648,0.645589,-4.047252,-5.487329,-5.499028,-0.572276,-1.301168,-5.907357,-7.241174,7.698479,-0.298586,6.572953,4.556721,-9.524864,0.452748,9.931853,7.483527,4.247888,4.506852,0.276195,-0.241187,3.147931,8.079327,9.361711,5.009321,3.125211,9.783940,-5.203013,3.568530,-9.506206,-3.864750,-1.876927,-3.045694,2.253958,-1.041742,-0.408210,4.448348,9.215848,9.677707,-8.460480,1.875251,6.766215,-3.846705,3.885477,-9.400075,5.682930,3.188532,-7.839475,0.305945,3.120395,2.540828,-6.781920,5.769731,6.630577,-7.052487,1.630292,1.260651,-4.604264,-3.005179,-1.222306,-3.311647,0.856612,4.878610,9.590310,-1.670302,-8.649523,-5.849864,-3.008897,0.671575,5.023634,5.784863,1.273714,7.203059,0.260348,-1.375886,-2.781670,3.341670,-7.130397,-3.882838,9.603225,4.752802,-1.042420,-0.778148,1.393336,-8.145585,-4.153634,-6.591529,-8.351064,3.672237,7.861216,7.995246,-4.447343,-4.238877,-4.510348,8.165177,4.012122,5.016893,-7.366425,-7.920483,3.979416,-1.823364,-4.670206,-2.105585,-2.161274,-0.450995,1.118683,-0.012931,-5.535723,-9.654006,3.140814,-0.928100,-5.887744,-9.698101,-9.242565,3.844868,2.637241,2.031417,-2.715579,-3.930376,7.662212,-7.956026,9.080244,7.008395,4.660785,-4.778699,3.752866,2.619083,-5.815060,-2.363317,-1.827522,2.838313,-1.507942,-1.659560,-8.157757,7.412076,5.205920,-6.108872,-6.191857,7.526008,6.456041,-9.310879,-8.234609,0.147597,2.569006,9.951116,4.246587,1.530606,7.059625,-0.128687,9.644968,-0.852709,6.687666,9.894489,-0.411207,-1.802869,-2.663732,-7.398421,-1.670264,0.672850,5.807445,-7.848745,5.295046,-8.933247,4.337758,-7.604517,1.204459,7.306803,4.143737,-5.643258,1.689071,-9.425661,-8.291438,9.926668,-3.838447,-8.056703,5.301170,-2.603269,5.423802,-1.088997,3.706609,9.555260,7.511439,9.930207,8.525119,-2.141644,-1.184697,-6.935646,4.748972,-6.751307,-6.981489,7.495000,6.806949,2.394910,5.376532,2.547037,-1.702885,7.763081,3.732322,7.821371,-2.073195,-2.535248,-6.669063,4.870690,-4.141275,7.725254,1.929274,-7.320096,-0.670953,2.435300,9.065532,-7.080638,0.885083,2.079442,-3.745166,6.391689,-9.630145,-0.591508,-6.976198,-1.708643,7.069207,0.551082,0.832240,4.138046,9.552797,3.095741,5.978117,4.495741,0.383329,6.723561,4.081991,-7.940379,-6.723931,-1.929193,2.440894,2.696642,-2.188189,6.415926,4.453301,2.291067,1.167955,3.499169,-4.687483,2.043083,-1.699170,7.937246,0.515162,4.950596,-4.003661,-4.140194,9.549608,-9.875099,-8.706598,4.695512,-6.148788,1.495143,5.619631,-1.186032,1.894106,2.936353,0.322612,8.745252,-5.575587,-9.257524,-8.178791,-2.257572,4.428692,1.313530,-3.427802,3.448939,5.863226,-7.633021,9.017129,-0.364132,-9.217904,-8.043703,-2.546068,-3.469107,7.581383,-8.843633,6.276794,3.385281,5.845285,3.171412,8.227917,8.679459,9.282016,3.652110,-0.694744,6.002808,4.203392,-6.482851,1.133005,-4.458443,-2.972502,-9.920601,-3.220396,-8.673469,-1.941985,0.574438,-9.805526,-5.942400,5.786103,-1.596207,1.272912,-5.174648,-1.603040,-7.858439,-1.594786,-5.168530,3.643805,-5.763387,-8.804603,-3.932725,-8.895410,-2.137062,-3.131723,-1.583280,-9.916496,6.471972,-7.819644,-2.889018,5.348230,-4.466835,6.417094,-3.449304,4.899760,-4.736413,7.653033,-1.494869,9.057875,-8.926149,8.092515,1.064045,9.881170,7.333579,-4.640667,-0.787538,0.346866,4.554795,0.649580,1.037972,3.062086,-6.242276,-6.924021,-5.549825,7.512947,3.326336,-5.944254,-8.173594,-7.111023,6.602267,6.857112,-5.137573,6.724256,-7.401638,1.803523,9.985638,2.871003,3.726296,6.663748,6.283602,-9.430785,9.145274,4.056925,-2.570986,-2.519916,1.297005,-7.793370,-5.976609,7.600480,-7.416074,-3.957187,4.262555,-2.986029,-2.611317,6.825782,-7.900666,-4.884929,-6.399665,-7.801607,5.931499,-9.596327,-0.389859,-3.435655,-1.857038,2.675800,-4.134418,4.594128,-0.586260,-0.655065,6.343636,-5.685619,6.472504,5.709847,4.960661,4.120114,-5.880705,4.324455,-4.973431,0.139397,0.370139,7.502137,6.021561,-6.950378,-3.213884,-0.642719,-2.192216,-8.876832,8.536989,7.745434,0.057498,-8.820050,-0.879626,-0.852721,2.081712,-3.038056,6.066837,0.753196,-6.094633,-6.800756,-0.211269,-9.182528,4.083050,7.342721,-2.315835,1.536756,8.105858,-2.682166,0.433048,-7.412944,-9.872050,-1.309310,-2.837505,-8.246172,4.917119,-8.615852,7.115914,-3.720292,8.917729,-6.950707,-6.216556,2.374279,2.416735,8.270695,-2.821323,6.408123,-0.406766,-4.291123,4.859622,3.902543,1.541284,2.272066,-2.728186,-9.087415,7.013775,-2.612025,-9.407733,4.058558,3.454251,3.762057,-2.819484,-4.387773,-3.523316,1.724741,-7.519900,-5.755455,-8.111651,-2.574702,2.493728,-2.102272,7.277632,-3.075630,-1.174322,5.750934,-0.992405,-5.119919,-0.421140,-8.950690,4.504775,-2.051356,-6.748561,-4.549644,-2.403263,-5.143255,7.713467,-8.861616,4.446435,-2.710480,-2.563933,0.409034,-5.113391,2.711824,-4.175620,1.708897,-5.841203,7.731855,-2.122592,7.010436,4.323914,-9.214101,1.802358,0.814881,3.698579,-1.430714,-4.326684,4.829610,1.569504,8.604630,-7.591110,-5.450862,-9.150353,6.185563,7.654358,-3.894242,-3.615940,4.502316,4.040119,-6.995998,-7.966739,7.412437,-2.403240,-4.422256,6.422621,-8.617181,-2.036643,-0.259343,-8.528283,-6.747518,7.692736,-2.665546,5.138461,4.301663,1.590153,-9.459839,-7.199230,-0.624333,-6.126276,1.453264,-8.057232,3.909314,-3.580711,1.314844,3.919666,-6.129557,-1.352626,3.803469,-6.315863,2.682828,-3.293560,6.614693,4.792018,-0.766824,-0.912489,1.752453,4.994755,-1.325447,0.166920,-9.618863,8.427169,3.208674,-0.573913,3.384413,4.062668,-8.263626,-0.743302,-2.686884,0.208657,4.278164,-4.852520,-5.078938,6.229441,6.575493,-3.136699,-4.090704,-8.560689,-8.523656,-2.738833,5.695294,-2.880528,4.509582,-2.095920,-1.388726,-5.195896,4.163638,-5.566996,-8.882056,-9.913449,-2.684342,-2.534252,-3.620712,-0.779302,0.019146,2.206629,-5.153427,-4.649606,-6.362095,-5.591255,-0.670543,8.370397,4.928079,1.946874,9.362248,-2.720618,-8.124254,-7.117014,7.075758,5.532564,6.475301,-0.689204,-2.996703,-2.930056,7.275560,4.640865], dtype = "float32")#candidate|1537|(1248,)|const|float32
call_1536 = relay.TupleGetItem(func_1268_call(relay.reshape(const_1537.astype('float32'), [13, 12, 8])), 0)
call_1538 = relay.TupleGetItem(func_1271_call(relay.reshape(const_1537.astype('float32'), [13, 12, 8])), 0)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
call_1552 = relay.TupleGetItem(func_1268_call(relay.reshape(const_1537.astype('float32'), [13, 12, 8])), 0)
call_1553 = relay.TupleGetItem(func_1271_call(relay.reshape(const_1537.astype('float32'), [13, 12, 8])), 0)
bop_1555 = relay.bitwise_or(uop_1523.astype('uint32'), relay.reshape(bop_1520.astype('uint32'), relay.shape_of(uop_1523))) # shape=(3, 15, 16)
output = relay.Tuple([call_1528,const_1529,call_1536,const_1537,call_1552,bop_1555,])
output2 = relay.Tuple([call_1530,const_1529,call_1538,const_1537,call_1553,bop_1555,])
func_1567 = relay.Function([var_1518,var_1519,], output)
mod['func_1567'] = func_1567
mod = relay.transform.InferType()(mod)
var_1568 = relay.var("var_1568", dtype = "float32", shape = ())#candidate|1568|()|var|float32
var_1569 = relay.var("var_1569", dtype = "float32", shape = (3, 15, 16))#candidate|1569|(3, 15, 16)|var|float32
output = func_1567(var_1568,var_1569,)
func_1570 = relay.Function([var_1568,var_1569,], output)
mutated_mod['func_1570'] = func_1570
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2010 = relay.var("var_2010", dtype = "int8", shape = (16, 16, 7))#candidate|2010|(16, 16, 7)|var|int8
const_2011 = relay.const([[[-1,7,-5,-1,4,-6,5],[-6,1,-1,2,-10,2,2],[9,7,6,-3,-1,-6,6],[-8,7,10,-5,-1,-5,-10],[6,-6,-9,-7,9,8,6],[2,5,5,-2,-2,-7,8],[7,-10,9,7,9,2,4],[7,-5,2,-9,-4,3,9],[-10,-2,4,-9,8,-10,-10],[6,-6,3,-1,1,-3,10],[2,4,8,-10,-9,-7,7],[-5,-2,10,-5,-9,-8,-4],[-5,7,-6,9,8,-6,8],[-6,-1,-1,-2,-2,4,3],[2,-4,-4,2,3,-5,3],[-10,5,6,-6,2,8,5]],[[5,-3,-7,-2,8,-4,9],[4,1,3,-7,-5,-7,-3],[10,6,-7,-2,6,7,2],[-6,1,1,3,9,4,-5],[10,4,5,5,9,-8,1],[-10,7,2,-8,-9,8,5],[1,-2,9,10,8,-7,1],[3,-3,5,-10,9,1,-3],[7,4,9,8,4,3,1],[10,-5,6,-5,-9,9,7],[7,2,9,1,-1,-5,7],[6,7,-2,6,-2,8,-10],[-9,-6,6,-8,3,2,-8],[-7,-2,-3,-9,-1,10,10],[5,6,4,8,-9,4,8],[5,10,9,7,2,6,2]],[[9,5,-9,-7,2,-4,4],[4,-3,-5,1,6,-7,-3],[-6,-10,-7,10,-5,-9,-4],[1,-1,1,-4,-7,-2,4],[-5,-4,-1,7,-9,-6,-8],[3,-7,2,-9,-4,-1,9],[-5,-5,-9,-3,-3,-10,1],[-7,10,1,-4,7,-7,-6],[3,-2,-6,1,5,-6,6],[1,2,6,-7,1,-1,-5],[-1,-9,-6,-3,7,8,7],[2,-1,-1,-10,5,6,-1],[4,7,8,-8,-6,-5,-4],[-7,-8,-4,-2,2,-4,1],[2,-8,9,2,3,2,-2],[4,-1,-8,-10,7,-9,-5]],[[-5,2,-10,6,8,-9,-9],[-2,-7,8,7,-6,-8,8],[2,-10,-10,6,5,-1,9],[5,10,-8,2,-8,2,6],[9,-9,9,-9,2,-1,7],[-1,2,4,-1,-3,-10,2],[5,4,-5,-4,-2,3,8],[2,-6,10,7,1,6,-1],[-5,10,4,-3,-9,-1,-9],[5,-10,1,-10,-3,-6,-4],[-10,-1,-9,-2,-9,2,-1],[-8,-9,6,-2,5,-9,-8],[5,-9,7,8,3,1,-7],[9,-5,-8,10,4,-4,-3],[-9,10,-10,-9,-9,5,8],[-5,6,-5,-8,7,-1,-1]],[[2,-8,4,-5,6,-1,2],[10,-1,-7,6,-10,-6,-6],[8,2,1,2,-7,-10,-2],[2,9,4,-7,-7,-4,9],[3,-9,-3,2,-10,-9,-3],[3,-10,-9,-5,8,-5,-4],[3,-1,1,7,2,9,-6],[-10,-7,-6,8,-7,8,6],[2,4,-5,2,-6,1,-10],[9,-1,5,-4,9,6,-4],[3,2,9,-3,-1,-2,5],[5,8,-1,5,-8,-9,-8],[3,1,-1,3,9,4,-10],[6,-4,9,7,10,6,-2],[3,9,-3,1,-5,3,10],[-3,8,6,-2,-1,-6,4]],[[8,-8,5,6,2,-3,-4],[9,6,4,3,3,6,-6],[-6,6,-6,3,-4,1,-10],[2,-1,-6,5,10,-10,3],[8,10,-2,5,3,-9,-1],[-4,5,3,-9,4,8,3],[-8,6,10,1,2,-7,-6],[-3,-9,7,5,1,-8,-9],[8,8,2,3,10,3,-9],[-9,7,3,-1,9,2,-9],[4,1,-1,1,3,-7,-7],[8,-1,5,1,3,10,-5],[3,-3,3,2,-2,-9,-6],[-7,7,10,-2,-3,3,-4],[-1,5,2,-2,1,9,4],[8,4,-2,1,-6,-7,6]],[[8,-2,9,-2,5,-8,-5],[-10,4,-10,3,1,4,-7],[-8,-10,4,-5,9,-6,1],[-1,-2,7,8,6,9,-7],[7,-5,-8,-3,-9,7,-8],[-2,-8,5,-5,6,8,-9],[1,10,-8,3,2,-8,6],[8,-10,-1,7,-8,8,10],[-8,-3,-2,7,9,-8,7],[1,3,7,2,-10,4,3],[-2,10,-9,10,-7,1,-8],[9,5,9,1,-1,-4,2],[-9,-1,-6,-2,3,6,9],[-8,-8,-2,-8,3,5,-2],[5,6,-1,-8,8,-3,1],[3,-7,-9,-9,-10,-10,-8]],[[-4,-3,-6,-6,5,-5,-1],[-6,-6,-4,-9,9,-4,6],[-1,8,-7,-6,-9,2,-4],[1,-3,-2,5,5,-9,-3],[-5,-6,3,2,6,-5,-10],[-10,-3,-2,7,9,-9,5],[1,2,9,2,3,-4,-2],[5,5,6,8,6,3,-7],[-10,-2,-4,-8,-4,5,-2],[8,5,8,9,-9,4,-2],[3,-1,6,3,-10,1,1],[3,4,-9,-7,10,-3,-2],[-6,-3,-6,1,8,3,7],[3,-1,-1,-10,-3,-9,4],[4,8,2,1,6,1,-8],[-3,8,2,2,4,6,-10]],[[10,7,-10,6,-8,10,-8],[9,7,2,-8,7,-8,2],[8,-2,-6,4,6,7,-8],[-8,-10,-4,-9,-4,-1,-4],[2,4,10,8,-7,-1,2],[-4,7,-9,-9,5,9,2],[10,8,4,2,10,-9,2],[-9,-9,7,7,4,8,3],[-1,-5,2,7,-7,-9,8],[-5,1,-5,9,8,-7,-1],[4,-10,8,9,3,8,-4],[-9,7,3,10,-8,-1,4],[-1,-2,-8,3,10,-9,-8],[4,-4,-2,-9,-8,-4,-9],[-5,4,-7,-2,-9,-2,-6],[3,-8,6,10,-2,5,-9]],[[10,-6,10,-2,6,-1,-8],[-3,5,-10,3,-4,4,-3],[8,7,-9,-3,-5,-5,9],[-6,-2,-3,5,2,9,-10],[-4,9,-4,-1,3,1,9],[9,-3,-6,3,1,-5,3],[-1,-5,7,-8,-2,3,3],[3,1,1,-6,6,8,-7],[-2,-5,5,-9,-5,3,-6],[-3,10,2,-10,5,9,5],[-3,-10,-3,10,-6,10,6],[9,10,2,9,-3,-6,-5],[2,-4,-4,-9,-1,7,-8],[1,2,5,-3,4,-10,1],[7,-4,-7,1,-5,8,-9],[-7,4,10,-7,8,3,-2]],[[-2,10,-8,-8,5,6,-2],[-7,-9,-8,10,9,-5,9],[-10,1,-3,-1,7,8,1],[-3,-8,3,-3,-10,-1,4],[5,-1,4,9,5,8,1],[6,-10,4,9,5,8,-9],[-6,4,6,-10,-9,8,1],[8,4,2,4,1,-3,7],[6,2,-1,-5,2,-9,-2],[-5,-7,-5,-8,4,-4,7],[-5,-1,-2,-3,1,-2,-1],[2,-10,-8,-1,-7,-1,10],[7,-5,4,1,10,1,-2],[-4,7,-10,-4,-3,3,-1],[2,2,-1,-10,-4,10,-7],[-7,7,-3,7,1,-4,-6]],[[6,-3,-1,8,3,-6,10],[-1,1,7,-9,-10,6,8],[6,8,3,10,8,5,-5],[10,-9,4,9,7,2,4],[9,-9,-8,-8,-2,-3,10],[4,1,3,-5,9,8,3],[5,1,3,-10,-9,-10,-1],[-3,-4,-6,-1,4,-6,1],[1,6,-5,-10,7,7,-10],[-8,1,2,10,-10,-7,-8],[-1,8,7,10,3,8,9],[9,-4,2,10,-3,-2,-5],[9,-3,-6,-4,9,3,-3],[-3,8,-2,10,-8,-8,5],[5,-8,-3,7,-3,2,-3],[5,8,8,1,8,6,4]],[[-8,3,-6,8,-1,1,-3],[8,-8,4,1,1,4,3],[-7,1,3,9,-4,-1,1],[10,2,2,3,7,-7,-5],[-10,-10,-5,-2,-4,10,-5],[6,-4,2,6,-8,-9,4],[3,-9,-10,-10,10,5,-1],[4,9,-4,6,-1,-9,3],[3,-5,7,-1,-3,-1,-3],[6,3,-1,-2,5,10,-2],[4,6,3,6,-7,6,-10],[-2,-3,-8,-2,1,4,4],[10,3,-3,3,-2,5,-8],[9,8,-2,2,9,8,8],[6,6,-9,-1,-9,8,3],[-1,4,10,3,-3,1,9]],[[-2,1,-10,-3,7,-1,8],[8,-3,-2,-10,7,4,10],[-1,-5,9,-10,-5,8,-9],[-10,10,-8,-8,-8,-5,-4],[6,-6,-3,2,7,1,-7],[3,1,10,-1,2,1,8],[6,6,-5,9,-3,2,-2],[-1,-5,4,-8,-5,5,10],[9,3,-9,-5,1,-4,2],[-4,10,-3,10,9,4,-10],[-3,-4,-8,6,-7,-6,5],[-3,-6,3,-2,1,6,3],[7,-8,4,3,-10,-3,-1],[5,9,-7,7,-10,-8,3],[4,3,-1,-2,-2,9,3],[7,9,4,-2,-2,10,-7]],[[7,-4,10,-10,8,-6,-6],[-10,-6,-7,-1,-2,1,-9],[10,-1,10,5,3,-8,9],[9,8,-6,-8,-9,3,9],[9,-7,8,3,-3,7,-6],[-7,9,-2,-7,1,-1,-6],[4,-10,-5,-2,-5,10,-5],[-6,-2,-8,10,1,-10,7],[-5,-8,8,3,-5,8,-10],[-9,-7,-6,9,3,-3,9],[7,5,-8,-2,-10,-2,2],[6,8,4,10,6,5,-9],[2,-2,-5,-2,1,-9,-10],[8,9,-1,7,4,-9,-7],[8,3,-3,8,3,8,3],[-4,8,-5,6,-8,5,-2]],[[-10,9,4,-7,-6,-4,-6],[-2,2,4,-10,9,-6,10],[-8,-6,-3,6,6,4,-2],[-10,1,-7,-7,-4,-9,2],[-1,9,-7,6,9,-1,9],[6,4,-10,-7,1,-10,-9],[-8,-6,-5,6,9,6,-8],[-4,2,8,7,2,-7,-8],[-8,5,9,-4,-8,6,6],[5,9,-3,-1,-7,-1,2],[4,2,-8,7,-10,-2,5],[6,-2,-7,4,9,3,4],[7,-9,-8,2,-9,3,-1],[-10,3,-10,-10,-5,1,10],[2,-5,9,-9,-6,-3,9],[8,1,10,5,8,-1,10]]], dtype = "int8")#candidate|2011|(16, 16, 7)|const|int8
bop_2012 = relay.less_equal(var_2010.astype('bool'), relay.reshape(const_2011.astype('bool'), relay.shape_of(var_2010))) # shape=(16, 16, 7)
func_1567_call = mod.get_global_var('func_1567')
func_1570_call = mutated_mod.get_global_var('func_1570')
var_2030 = relay.var("var_2030", dtype = "float32", shape = ())#candidate|2030|()|var|float32
const_2031 = relay.const([4.840806,0.560571,-5.169404,-8.736280,9.134083,2.966129,-5.416811,5.313157,7.612808,-6.166639,-0.935705,6.364941,-3.061153,-3.413196,-3.476710,-3.904986,-7.866110,-8.213356,7.624695,-6.496072,0.971201,4.124005,-4.402382,1.242944,2.698609,-4.805390,3.534376,4.873173,-0.326239,6.804161,2.919536,-8.699705,3.519876,-6.846983,-3.564735,7.541976,-9.185354,3.717377,2.822705,-6.271989,9.707495,0.787409,5.513503,-0.653787,-3.419460,-6.087889,-9.969507,1.710833,-7.150554,-5.612370,-5.418586,-0.826819,9.952993,-1.661063,-3.743846,1.847744,8.160008,7.451073,-8.451874,-2.946032,2.025036,-0.627827,-0.263482,-0.264888,-0.876601,6.047399,-8.084698,3.198565,6.346779,3.331781,5.260104,5.372406,9.186505,3.350247,3.406832,-4.609693,-2.344225,-9.963983,-9.039655,6.044816,6.861533,4.781867,-8.388488,0.264725,-1.543632,-7.121235,-2.562321,5.686003,-3.760735,0.805735,-4.013834,-6.355337,-2.443152,4.487082,4.494953,8.974860,3.359883,1.338108,-1.448830,-6.388061,9.544820,-2.106031,-7.011254,3.439994,-7.940733,-2.247342,-8.313481,0.204165,0.377213,9.810926,-0.120769,-9.177722,0.033258,3.354998,-8.371868,3.464110,-9.836207,4.665844,8.068037,7.218262,7.980536,-7.084638,9.704924,1.029830,7.111430,0.779248,8.605753,6.032460,0.080443,-7.106818,-6.627618,7.607735,8.269050,-4.028188,4.186570,-4.311528,4.004399,-6.664146,7.514138,-6.545517,-5.996661,-6.429448,1.273557,1.860682,-8.984540,-3.147897,6.777078,-7.326992,6.551257,4.881581,-1.152743,2.981838,-6.459730,-9.616699,5.767667,-7.630001,5.957846,-8.949742,8.682089,0.388832,1.108587,-8.465765,-9.739898,-2.122186,3.389813,-7.673158,8.747713,-8.949495,-2.284587,6.038175,9.148489,5.469820,-5.346296,1.787560,0.783150,-8.074578,-3.084858,8.525167,0.243211,-9.800173,7.986956,-9.574685,2.833442,3.894114,-7.071969,5.145472,-5.699033,-7.298074,-7.247241,-1.280705,-4.060711,2.462768,-3.958450,7.291354,-5.302163,-0.920658,6.023150,-4.306801,3.314451,-0.437975,4.741933,5.700063,-5.809983,-9.294027,6.670323,2.597370,1.056590,3.489194,2.668180,3.053659,-1.969217,-3.150150,2.341661,-3.961173,-9.807804,-4.105734,4.938543,6.800507,3.220773,-9.747349,8.741948,-7.674484,-3.828159,-6.443023,5.837083,7.577691,2.633772,5.337254,0.964989,-0.243018,-6.887338,0.117419,-9.503726,5.863147,-6.542738,3.904323,7.810325,7.786597,0.589868,-0.355141,3.880677,-3.690788,5.445625,5.992795,-3.230397,-4.759893,-6.864886,-7.666709,-8.125560,-9.949429,1.884613,-8.817668,-1.662224,0.815433,0.541433,-4.612780,7.192399,-6.907906,-1.629892,1.779122,8.193097,0.992027,8.732256,-9.684658,7.240151,2.757409,-2.468913,-1.016324,6.752063,-3.996542,3.396793,7.390913,-9.394139,9.932053,-4.985218,4.282174,-8.486057,2.936267,-3.880030,5.096175,4.977850,-1.454399,1.592685,-7.556283,-2.740104,3.714271,3.290660,9.474644,-9.369140,-8.890698,5.194982,-7.695062,-4.920604,-5.458608,-2.762236,-8.118155,-9.699150,7.468335,4.820446,-5.007469,4.099792,3.576582,-5.974953,-1.308870,6.491159,8.427438,-1.939094,-2.223834,-7.380238,1.366283,4.233331,-8.285392,-8.639357,6.458597,1.887211,-5.590671,7.129749,1.432204,-8.385396,1.998351,-7.394887,-5.129042,-2.253784,8.382189,2.825596,4.751529,-3.023650,-6.163812,-5.643018,2.452006,0.152564,-8.218159,6.413302,1.111174,2.422825,-3.180547,5.760770,-1.405463,5.651590,-5.249780,-0.717402,0.973552,8.694706,6.525247,0.440020,9.476906,-3.371242,-8.776980,7.879202,0.102467,-0.710605,-2.592745,2.400095,2.977954,-8.365468,2.750410,-6.393739,-2.053314,1.840275,0.677795,-4.794278,2.723078,-1.530491,-4.338641,6.949818,-7.280779,6.058846,-6.311074,5.328431,-6.374458,3.994069,-7.367858,-1.066369,-1.356868,-1.055229,2.037573,-8.553059,-1.858091,-4.450520,8.713517,-8.454723,2.904779,-8.131328,-7.691923,1.179949,-0.847861,5.822156,-0.382697,6.974512,9.826035,-7.289149,-0.949088,4.128559,1.916515,5.566472,-4.862444,-8.154293,-1.561691,5.479953,-4.821975,0.412287,3.778485,3.742129,-1.315108,-6.224457,6.005676,-1.123854,-5.669476,-6.163007,9.564934,-1.031369,2.598012,9.095390,3.844632,1.916029,-8.452599,-3.747679,9.422933,7.131476,-9.922238,6.892996,2.453210,5.926581,5.732400,7.420049,-8.208898,-0.400152,6.773299,1.644118,-4.278374,-0.924997,0.503789,6.418919,5.782513,-8.308336,-3.918113,0.821841,-4.294639,8.993533,-2.841671,-9.507355,-6.365424,-5.291006,2.430207,3.368679,-2.697411,-4.297878,-8.785622,-5.207845,-2.296613,-7.044857,-1.372796,-0.766816,-4.751435,4.807980,3.585842,1.554823,-4.855565,7.138381,0.969178,-7.354825,-0.801225,8.855370,-1.366999,-5.021916,2.293278,7.847548,-1.082804,-4.480988,-8.930339,1.325684,6.491596,3.469317,4.166474,9.822017,1.061169,-3.630844,-3.903607,7.518204,-1.256165,-8.596492,-5.104773,7.994938,3.643041,7.452612,7.485013,9.118745,-5.038484,2.384180,0.814573,-0.426038,-9.543721,4.754406,7.644753,4.941343,-2.078713,1.006783,6.002495,-4.902775,-1.820235,-3.816597,-2.869012,-5.429120,0.794997,-3.083269,4.039872,6.118733,-2.296636,-5.800005,2.159755,5.181752,8.984844,-7.421176,6.823223,-5.099240,5.983195,-4.869006,-9.560523,-9.347887,-3.275263,9.250900,6.187111,5.852994,9.291718,6.410300,8.573983,-1.113424,6.634710,8.281713,0.643291,-6.374097,0.501975,5.365791,-4.226905,1.762633,-3.312346,-1.811050,2.960665,8.862665,0.411242,-6.602590,6.932482,-7.211394,6.863832,-3.938419,3.554741,2.544567,2.075074,-7.853615,-6.387477,-1.342588,-1.727377,9.990124,-9.486634,-8.538963,6.827320,-0.659040,-8.234029,-8.876312,-7.189231,-7.943332,1.502577,-5.742978,-3.732042,-0.046012,-8.208353,-0.896555,9.793484,4.503314,-6.571281,-9.386551,-4.925810,7.026212,0.769141,-8.177116,-6.959676,9.589986,1.630649,-3.190857,-5.534029,-7.588760,5.347294,-6.770507,-3.519394,-0.084285,3.522666,4.305525,5.640330,-7.196601,-5.642283,-6.027177,-4.534609,-3.481703,-7.290847,9.312199,-0.605994,6.909987,-1.529851,-7.070709,8.018282,-8.965451,7.752632,-7.928668,-5.698404,9.281835,-9.973887,5.840836,2.211737,-6.689872,-6.593018,8.551042,1.035353,-1.502561,-7.614448,3.777570,5.062817,-9.381066,9.814765,5.490698,-2.575744,-5.459366,-0.786793,9.578313,4.120191,5.738898,4.087730,-6.802920,-4.214918,8.174803,-4.932146,-0.546533,-8.469181,-8.641902,-3.056300,4.974928,5.046962,0.157170,0.817848,6.046698,-7.604992,-2.275531,5.621915,-3.248022,8.246334,-5.037353,-4.079882,7.256576,-3.867263,-6.267900,9.850675,5.590174,5.784464,-4.313188,1.315180,-5.755891,8.978322,3.966450,2.849035,-4.719682,7.345249,-3.736181,1.319577,-1.068538,-6.551315,-7.847070,-5.714596,-3.879025,-4.413361,-1.912874,-9.694662,8.117323,4.035060,4.378054,1.204389,1.916469,-8.935925,-2.263782,7.441977,6.745081,-5.775175,3.086819,5.523375,-6.601148,4.946808,2.649629,7.434268,5.189552,-9.912530,-2.888987,-1.489885,-9.310082,4.709943,-2.068501,-7.036133,-7.706209,-6.201790,7.178342,4.955644,5.107863,5.391713,2.087636,-2.421280,2.719292,8.647198,-0.604797,-4.217552,-2.842818,8.479225,-9.986143,3.067990,-9.157817,6.379543,2.068918,-8.325952,4.452616,-3.914028,-8.154372,7.167999,8.429413,7.542522], dtype = "float32")#candidate|2031|(720,)|const|float32
call_2029 = relay.TupleGetItem(func_1567_call(relay.reshape(var_2030.astype('float32'), []), relay.reshape(const_2031.astype('float32'), [3, 15, 16]), ), 2)
call_2032 = relay.TupleGetItem(func_1570_call(relay.reshape(var_2030.astype('float32'), []), relay.reshape(const_2031.astype('float32'), [3, 15, 16]), ), 2)
output = relay.Tuple([bop_2012,call_2029,var_2030,const_2031,])
output2 = relay.Tuple([bop_2012,call_2032,var_2030,const_2031,])
func_2033 = relay.Function([var_2010,var_2030,], output)
mod['func_2033'] = func_2033
mod = relay.transform.InferType()(mod)
var_2034 = relay.var("var_2034", dtype = "int8", shape = (16, 16, 7))#candidate|2034|(16, 16, 7)|var|int8
var_2035 = relay.var("var_2035", dtype = "float32", shape = ())#candidate|2035|()|var|float32
output = func_2033(var_2034,var_2035,)
func_2036 = relay.Function([var_2034,var_2035,], output)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2244 = relay.var("var_2244", dtype = "uint32", shape = (16, 9, 14))#candidate|2244|(16, 9, 14)|var|uint32
var_2245 = relay.var("var_2245", dtype = "uint32", shape = (16, 9, 14))#candidate|2245|(16, 9, 14)|var|uint32
bop_2246 = relay.greater_equal(var_2244.astype('bool'), relay.reshape(var_2245.astype('bool'), relay.shape_of(var_2244))) # shape=(16, 9, 14)
uop_2249 = relay.cos(var_2245.astype('float64')) # shape=(16, 9, 14)
uop_2252 = relay.rsqrt(uop_2249.astype('float32')) # shape=(16, 9, 14)
bop_2259 = relay.subtract(uop_2249.astype('uint32'), relay.reshape(var_2244.astype('uint32'), relay.shape_of(uop_2249))) # shape=(16, 9, 14)
output = relay.Tuple([bop_2246,uop_2252,bop_2259,])
output2 = relay.Tuple([bop_2246,uop_2252,bop_2259,])
func_2270 = relay.Function([var_2244,var_2245,], output)
mod['func_2270'] = func_2270
mod = relay.transform.InferType()(mod)
mutated_mod['func_2270'] = func_2270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2270_call = mutated_mod.get_global_var('func_2270')
var_2272 = relay.var("var_2272", dtype = "uint32", shape = (16, 9, 14))#candidate|2272|(16, 9, 14)|var|uint32
var_2273 = relay.var("var_2273", dtype = "uint32", shape = (16, 9, 14))#candidate|2273|(16, 9, 14)|var|uint32
call_2271 = func_2270_call(var_2272,var_2273,)
output = call_2271
func_2274 = relay.Function([var_2272,var_2273,], output)
mutated_mod['func_2274'] = func_2274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2313 = relay.var("var_2313", dtype = "float32", shape = ())#candidate|2313|()|var|float32
var_2314 = relay.var("var_2314", dtype = "float32", shape = (13, 13, 5))#candidate|2314|(13, 13, 5)|var|float32
bop_2315 = relay.floor_mod(var_2313.astype('float32'), var_2314.astype('float32')) # shape=(13, 13, 5)
func_1567_call = mod.get_global_var('func_1567')
func_1570_call = mutated_mod.get_global_var('func_1570')
var_2319 = relay.var("var_2319", dtype = "float32", shape = (720,))#candidate|2319|(720,)|var|float32
call_2318 = relay.TupleGetItem(func_1567_call(relay.reshape(var_2313.astype('float32'), []), relay.reshape(var_2319.astype('float32'), [3, 15, 16]), ), 1)
call_2320 = relay.TupleGetItem(func_1570_call(relay.reshape(var_2313.astype('float32'), []), relay.reshape(var_2319.astype('float32'), [3, 15, 16]), ), 1)
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
const_2322 = relay.const([2,3,-6,1,8,2,-7,10,-2,-4,3,9,-4,-4,10,4,-5,-3,-7,-8,-2,-2,5,-6,9,5,-3,9,9,-6,5,2,-8,-1,-1,-1,-1,3,-6,-10,10,4,2,-1,-9,9,-8,1,7,-10,-1,1,-1,-8,5,2,5,-1,3,7,8,3,-8,1,-8,-6,-9,3,-3,-8,10,4,-8,-2,6,3,5,1,2,-1,-10,-1,3,-10,6,-5,-8,2,5,-8,-3,-6,-7,-2,-10,1,-1,10,8,-2,-9,-1,-5,4,-6,2,3,8,6,9,4,-7,-2,-8,-8,5,7,-4,-6,4,-1,1,-4,-2,-8,6,8,-6,-2,-1,7,8,9,-8,-10,-6,7,-5,-6,-1,9,-8,-5,-7,1,7,-3,3,9,-6,-4,-2,-2,3,-5,2,-4,-10,5,5,-7,-5,1,2,-1,-1,-3,-5,-9,10,-3,-7,-3,5,6,7,4,2,1,-5,2,-5,-8,-9,9,2,-4,-10,-8,6,-6,-7,-4,-6,-5,-7,-9,-4,-5,4,10,7,-5,-10,1,-6,10,7,-4,-9,8,-8,10,-1,-2,-10,-1,8,-3,8,6,-3,1,10,-7,-6,9,-9,5,6,7,2,5,3,-10,-4,-8,3,-6,-5,-4,-7,5,1,-8,-7,-5,4,-9,-7,-9,-5,9,6,-3,-10,2,-9,3,-4,7,7,-2,-1,7,10,-3,3,-5,7,10,2,-3,8,10,-9,5,10,-7,8,1,2,-3,3,-5,-5,-8,-6,7,-8,-6,-8,5,8,-9,5,-4,-3,1,-6,-8,1,7,8,-3,-3,-5,2,8,-9,-8,-6,-3,-1,9,-1,6,3,-1,-7,9,-5,-2,-2,7,-9,10,-9,-6,-7,8,2,-2,-9,-7,-9,-8,-3,-9,3,10,5,7,3,4,8,10,8,-6,6,3,2,-8,-4,-1,5,8,1,3,1,-2,9,-1,-3,-2,-2,2,6,2,7,8,-5,3,4,-8,3,-5,3,9,-7,-4,-8,5,-8,-6,10,-10,-10,1,-7,8,10,-2,1,8,4,9,2,-8,2,-7,7,7,10,-1,6,9,-3,8,4,-4,-10,2,6,2,3,-10,9,-10,-7,6,-8,-1,5,7,-7,-8,3,-9,-10,-8,-10,-7,-8,-8,6,2,8,-7,5,2,6,-9,2,9,-8,-6,7,-9,-10,2,10,10,-9,3,-10,4,-7,-6,-10,2,5,-8,3,9,-6,-7,-7,4,-3,-8,4,-10,6,9,-2,5,10,10,-3,-7,2,-3,3,2,6,1,-3,-10,-7,-6,1,8,5,7,9,-4,9,7,-7,-8,-3,5,-9,7,-6,-9,-2,-2,-7,4,-4,6,-6,-5,-3,7,3,-2,-9,-8,-1,5,4,-10,-6,-6,1,-4,-4,-3,6,-5,-4,-9,7,9,6,1,9,2,6,-8,9,-5,2,2,-7,-7,5,5,5,9,-6,-3,10,4,3,-4,-5,7,-6,-7,7,6,-10,-5,-5,-8,3,-7,7,10,3,-4,2,6,-2,2,7,-3,-9,3,1,4,-5,8,2,3,9,-6,9,-10,4,-10,8,-9,-10,-10,4,-4,2,-2,-7,4,4,-8,1,-4,9,-6,-7,-5,-7,-7,-6,-1,-2,-7,-10,6,8,-9,-3,-1,-6,1,-4,-2,9,2,-10,-6,-8,1,1,-5,3,-5,6,-1,7,-8,6,1,-9,1,-10,2,-7,7,2,6,-6,4,-8,-4,6,-5,-2,-8,-1,-10,5,8,-7,-1,-9,-6,9,-4,-4,-4,-10,3,-7,-3,-1,1,3,9,6,-8,-8,-9,4,-5,-6,1,8,-8,-6,-5,-1,4,-6,5,4,9,10,10,-5,-4,-2,7,-2,6,5,6,6,4,-4,5,4,1,-2,-10,6,8,-3,-9,-1,3,-6,3,-1,-5,-6,3,4,6,5,-5,-1,10,-9,9,3,5,2,-3,-3,-8,-9,-10,4,-9,1,-1,-8,-6,-9,-4,-6,-4,-4,-1,-5,7,9,7,5,-6,1,-1,-8,3,-4,10,5,-10,10,10,-10,9,6,7,-3,8,-10,-2,-7,-6,3,1,-9,-9,-2,-2,5,6,-9,-1,-7,6,-9,8,3,-5,9,4,-6,-4,-1,-3,-10,-6,-1,1,9,5,-6,-1,6,-5,1,2,-2,8,-3,-10,7,3,-4,-5,-2,10,-5,8,9,6,-3,-9,-3,8,5,10,-3,-1,-7,-1,-1,8,-2,-5,10,-10,10,-7,8,10,3,-7,-6,5,-7,4,-5,-3,-1,-9,2,3,1,-6,7,-2,9,-7,10,-8,-8,6,-5,2,7,-8,-1,2,2,8,-5,10,-10,7,-10,-8,5,2,10,7,-3,10,-5,3,10,9,-4,7,7,-5,-7,5,-4,6,-1,3,8,-8,-6,4,-4,9,-1,3,10,-5,8,1,-9,6,-9,-3,-4,4,2,6,-1,6,-3,8,-5,-2,-4,-7,-1,-2,3,1,-4,7,-3,4,8,-3,-8,-4,-5,8,-1,-2,-7,3,10,9,-9,2,9,-7,7,-8,3,10,10,9,2,-2,-8,10,10,-1,-8,-2,-10,-4,9,4,5,3,-9,-5,-6,1,-5,-9,2,4,5,-7,-5,4,4,-9,9,6,-2,10,-1,1,1,1,-10,-1,2,-9,-10,4,-10,-7,-3,-8,4,-5,8,1,4,3,6,8,-4,9,-2,10,-6,-3,-9,-5,1,-8,-4,10,-10,5,-7,-5,1,-6,7,-7,4,1,10,-6,6,2,2,1,5,7,-8,-6,8,-4,-8,9,8,5,8,3,-5,5,6,-9,-1,-6,1,-9,-2,6,-1,-3,-9,-1,8,-2,-6,10,4,-7,-6,-5,5,-5,-7,8,-10,-1,9,-5,-3,-10,3,-4,-9,-3,4,-1,-3,5,-9,-2,-5,-9,4,-1,-10,-7,-3,1,2,5,3,-4,-2,8,5,4,4,4,5,6,-8,-10,4,1,5,-3,-3,5,-7,9,-5,-1,6,9,-3,-9,-8,2,-8,7,10,-2,-8,-8,-9,6,-2,7,4,-9,8,8,7,-7,6,10,5,-8,-6,9,-7,-3,4,7,5,5,-4,-1,-6,5,4,7,-7,4,3,-1,8,9,4,-10,-2,4,1,-6,-4,6,-8,9,7,-9,5,-3,5,-7,-10,10,3,7,-1,-8,3,3,8,-7,5,7,5,5,6,9,-8,-5,4,4,4,-10,-7,-10,-7,9,-2,-2,-10,9,10,1,8,10,7,-7,5,10,10,-6,-9,-9,-5,10,-9,-3,-6,8,10,5,-1,10,10,7,-2,-9,1,-1,-10,-4,-9,-1,-9,8,4,-9,-6,10,-9,-9,3,1,7,-10,5,9,1,7,-6,1,8,6,7,3,-6,-6,-2,1,-10,-10,5,7,9,5,-10,-7,6,-6,3,10,2,6,-2,-5,8,-5,5,8,-7,9,-1,8,4,-10,-3,-4,-6,-9,9,-3,1,1,-2,-8,-4,-8,5,-2,-10,-6,3,-8,-2,9,2,8,2,9,-8,2,-6,-9,-6,10,3,9,-5,7,3,-9,-10,8,8,-5,-6,10,-9,3,-10,-1,6,-1,6,-10,-7,-4,8,10,-1,4,-4,-9,5,-8,4,10,-1,5,-10,-6,4,4,6,-9,9,-6,10,-5,9,2,5,5,2,5,3,-8,5,-10,-6,-10,2,7,1,-9,-5,6,-2,8,-1,7,-8,2,7,-4,10,-7,10,-4,-3,-3,-3,-10,10,-10,-3,-6,2,-4,-9,-1,2,1,1,3,8,4,-5,-8,-2,-5,-7,-8,8,-9,2,-5,-9,6,-2,6,7,5,4,-8,-4,-3,-3,-10,-5,-9,9,1,2,10,8,-6,-3,8,4,4,-8,-9,-10,-5,7,3,-8,6,4,4,9,9,-10,-9,-3,-2,-2,6,-9,-8,-5,-4,5,-2,5,1,5,10,-6,-2,4,4,7,9,-10,-4,-7,-7,8,1,5,-1,-1,8,10,10,3,9,3,6,4,-10,8,-5,-7,2,-8,2,4,9,-9,-9,3,4,7,-1,10,3,-9,6,3,-7,3,-2,-1,-2,-10,-3,-10,-10,7,-7,1,6,-8,-5,2,-4,5,-3,-7,-7,7,-3,-6,-3,2,-3,2,4,-4,3,-3,1,2,-4,-1,9,10,-7,5,-1,-2,2,4,5,7,3,2,-9,10,-5,-4,-2,-6,-3,1,-8,8,8,-7,9,-1,-5,-6,9,-10,8,-9,-10,-9,6,9,-2,5,1,5,8,-2,-8,9,-6,-2,-5,-3,7,-8,-10,10,-3,6,-9,-4,6,9,-6,-1,-7,5,5,-7,-9,-7,3,5,-2,-2,1,-7,-3,10,5,2,-4,6,-6,-4,-9,8,-10,-9,-3,3,-6,10,7,9,-1,5,-7,-7,-5,9,-1,9,-9,4,-9,5,-9,7,7,9,-4,-7,7,-5,4,10,1,9,-8,-2,-1,-4,-6,-6,4,2,2,-2,-5,3,1,7,1,-5,-6,-5,6,7,10,-4,1,-6,-9,-1,-5,2,-8,-1,-2,7,3,-6,3,10,9,2,4,-2,-4,5,-9,-7,-7,-7,3,10,-8,-5,-2,-6,1,-8,4,9,-4,9,-3,-10,3,1,1,-1,10,10,1,10,4,8,-9,-7,-1,-6,-3,7,4,-1,1,-4,8,-10,1,-10,9,2,6,1,-8,-6,-5,-6,-2,6,10,4,-5,4,6,1,-5,3,4,1,-3,2], dtype = "int8")#candidate|2322|(1792,)|const|int8
call_2321 = relay.TupleGetItem(func_2033_call(relay.reshape(const_2322.astype('int8'), [16, 16, 7]), relay.reshape(var_2313.astype('float32'), []), ), 2)
call_2323 = relay.TupleGetItem(func_2036_call(relay.reshape(const_2322.astype('int8'), [16, 16, 7]), relay.reshape(var_2313.astype('float32'), []), ), 2)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
var_2328 = relay.var("var_2328", dtype = "float32", shape = (8, 156))#candidate|2328|(8, 156)|var|float32
call_2327 = relay.TupleGetItem(func_1268_call(relay.reshape(var_2328.astype('float32'), [13, 12, 8])), 0)
call_2329 = relay.TupleGetItem(func_1271_call(relay.reshape(var_2328.astype('float32'), [13, 12, 8])), 0)
const_2332 = relay.const([[7,-5,-10,6],[2,4,-4,-3],[3,10,-5,-8],[7,-9,-2,-1],[6,2,2,3],[-1,-9,9,8],[9,-4,1,1],[3,-1,2,4],[7,-1,3,2],[-2,8,3,5],[-8,-6,-1,4],[-10,9,-6,-7],[6,-3,-1,2],[6,-5,8,2],[-9,2,7,5],[3,-7,-6,2],[-2,10,2,9],[4,8,5,9],[-10,5,-8,-5],[4,-10,8,-2],[-8,6,-6,7],[-10,-5,7,-1],[4,-4,-6,-3],[-1,-1,-6,-9],[-5,6,9,-5],[-10,-4,-2,-4],[10,-1,7,9],[9,-8,2,1],[4,1,1,-2],[6,-10,2,-5],[3,9,1,1],[7,-5,7,-6],[-3,6,-3,-5]], dtype = "int64")#candidate|2332|(33, 4)|const|int64
bop_2333 = relay.logical_xor(call_2318.astype('uint8'), relay.reshape(const_2332.astype('uint8'), relay.shape_of(call_2318))) # shape=(33, 4)
bop_2336 = relay.logical_xor(call_2320.astype('uint8'), relay.reshape(const_2332.astype('uint8'), relay.shape_of(call_2320))) # shape=(33, 4)
output = relay.Tuple([bop_2315,var_2319,call_2321,const_2322,call_2327,var_2328,bop_2333,])
output2 = relay.Tuple([bop_2315,var_2319,call_2323,const_2322,call_2329,var_2328,bop_2336,])
func_2351 = relay.Function([var_2313,var_2314,var_2319,var_2328,], output)
mod['func_2351'] = func_2351
mod = relay.transform.InferType()(mod)
var_2352 = relay.var("var_2352", dtype = "float32", shape = ())#candidate|2352|()|var|float32
var_2353 = relay.var("var_2353", dtype = "float32", shape = (13, 13, 5))#candidate|2353|(13, 13, 5)|var|float32
var_2354 = relay.var("var_2354", dtype = "float32", shape = (720,))#candidate|2354|(720,)|var|float32
var_2355 = relay.var("var_2355", dtype = "float32", shape = (8, 156))#candidate|2355|(8, 156)|var|float32
output = func_2351(var_2352,var_2353,var_2354,var_2355,)
func_2356 = relay.Function([var_2352,var_2353,var_2354,var_2355,], output)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2449 = relay.const([[[-1.008110,-2.359497,-0.058179],[9.348304,-6.315398,5.891601],[6.219905,-9.667916,-9.240851],[-3.601973,-4.344351,-0.832966]],[[4.517483,-4.843175,-2.904504],[3.701644,-0.231316,4.043951],[8.818722,0.052346,4.201339],[7.937723,4.919196,-2.379053]],[[-6.836916,3.018201,-1.712147],[-6.418127,9.906124,-6.304991],[-4.948881,-4.361769,2.206857],[-1.184173,2.030563,1.326475]],[[-5.932194,5.296508,-7.500369],[6.108407,-1.364144,2.967131],[-8.383984,-0.424869,-1.268471],[2.634983,-3.057550,8.307975]],[[6.860157,9.763061,9.712879],[-9.204565,5.615845,-0.130718],[6.246635,-9.474980,-4.756944],[-0.378291,-7.430055,-6.863598]],[[6.706947,8.838734,-5.110597],[-3.976493,-7.728829,-4.056595],[-4.021599,-0.204740,-0.687167],[4.509174,-4.427050,-5.370983]],[[2.235165,-0.515136,7.785829],[-1.748196,-9.153732,3.991397],[-5.533805,9.279278,5.777504],[5.911179,-3.776185,4.770602]],[[-0.933674,-9.536439,-3.218948],[5.511630,-7.197994,5.634385],[6.260806,-2.289624,-7.577448],[-6.351444,6.440797,2.208199]],[[1.911943,-6.500362,-6.494691],[-5.691737,-7.197580,-0.345996],[5.634378,-7.588391,1.856267],[-4.642308,1.039580,-4.924566]],[[-6.644101,8.284233,-1.144758],[-0.203013,5.146085,5.961656],[-7.008512,-6.228141,7.868479],[2.896503,-7.161194,-5.665555]],[[-5.920191,-8.498475,1.571523],[8.205590,7.903552,-6.091266],[2.399764,8.693877,9.217812],[7.235320,7.185889,8.686661]]], dtype = "float64")#candidate|2449|(11, 4, 3)|const|float64
uop_2450 = relay.cosh(const_2449.astype('float64')) # shape=(11, 4, 3)
func_2270_call = mod.get_global_var('func_2270')
func_2274_call = mutated_mod.get_global_var('func_2274')
const_2455 = relay.const([-7,7,9,-5,-9,8,-2,-2,2,-2,-10,-6,-2,-8,9,9,4,-3,-9,-5,5,-6,-8,7,-2,8,4,2,-8,-8,2,1,3,-1,6,-9,-3,5,-3,3,1,-9,7,8,-2,2,-4,-3,1,-9,2,-6,-3,8,5,-1,-5,9,2,7,6,1,2,-8,8,10,3,4,-8,4,-4,-8,-7,-10,6,6,-5,-3,9,-10,9,6,5,-10,2,6,10,4,-3,-6,-10,-5,9,3,-9,6,4,-2,2,4,7,-2,4,-2,-10,9,3,8,2,-2,4,-1,-8,9,-6,-5,-1,-7,3,-5,2,-7,-8,8,6,-2,-8,1,5,-7,1,5,-9,10,-4,6,-8,4,10,5,2,6,-10,5,7,8,3,3,-8,3,7,-9,-6,3,4,2,5,5,5,3,-3,-1,6,8,6,-3,5,-9,6,-5,-10,-6,4,-10,-5,-4,-4,5,-10,2,-6,-10,9,-10,-1,-5,3,-4,5,10,7,-8,-1,-8,6,7,-7,3,-6,2,9,8,9,2,8,-3,8,-3,-4,9,3,2,-3,-7,-7,8,-6,-9,-10,8,3,-10,-3,-9,6,-7,-4,-2,-1,7,9,5,4,10,-6,-2,4,-1,7,-5,8,5,-10,-8,-7,10,-4,1,10,-4,4,5,-9,4,-6,2,-1,-5,-3,2,10,6,-9,-2,10,5,-3,1,-9,-2,4,-1,9,3,-7,-4,9,10,10,-6,9,6,4,-8,2,9,1,10,4,-6,2,-9,-1,-8,-3,1,6,6,5,-2,-3,5,-1,-6,10,-7,3,3,4,-4,6,1,-5,1,-10,-8,-3,6,10,10,-5,4,2,-1,9,-5,3,6,-2,1,-9,6,-4,8,6,7,7,-9,-1,9,-6,-4,2,-10,-6,-8,-9,-8,7,-8,6,-6,7,3,-4,7,-9,-2,2,5,2,-2,10,-4,8,1,9,8,-1,-3,7,8,10,7,9,-9,-7,-1,-3,-5,-1,6,2,-6,-8,9,-9,-1,6,-3,2,-7,3,8,-5,8,9,-3,-1,-5,8,-4,2,7,3,-2,-2,-6,7,2,8,7,5,8,1,-4,-9,7,4,-1,4,6,4,-10,7,-4,-1,2,-3,1,-6,-4,-3,-10,4,8,5,-1,-7,10,2,-10,-7,10,-5,-5,-6,-9,9,-10,9,1,3,2,5,-3,-6,-10,7,2,-9,-4,5,7,-5,8,-6,-7,-3,8,-1,-4,4,-9,-2,-5,-9,9,4,-9,-3,-4,-8,-10,2,-10,9,-1,8,5,2,-4,-9,-4,-8,-4,1,-4,9,-3,-9,5,9,-2,7,-8,7,1,-4,1,-9,7,-2,-1,2,-5,9,1,-5,4,8,2,-3,-1,9,10,-8,-8,-7,-3,-4,-4,-8,10,5,7,7,1,2,8,-6,9,-7,-4,7,7,-6,6,-3,-7,-4,6,-4,3,2,9,-2,-4,5,-5,-5,-6,3,-5,10,-9,-4,6,-3,-4,-10,3,-1,-1,4,1,-10,2,-10,-10,-9,-5,-3,3,-9,2,-1,-9,3,1,8,9,-10,9,-8,-2,-9,9,9,-1,10,6,-6,4,-5,-7,6,8,6,7,10,10,8,5,-3,6,8,3,-4,-5,1,-1,9,2,-1,-9,2,-2,9,8,4,5,5,-7,-6,-10,-6,3,-2,-1,6,6,7,8,7,-2,-1,4,7,-7,-6,10,-7,7,10,4,8,-3,10,-5,-7,-10,3,6,-7,-5,-7,-7,9,-8,4,4,4,6,-9,2,5,-6,-8,-10,-3,-10,-1,-7,-10,1,8,3,1,7,10,5,1,-8,4,-4,5,9,8,8,2,-4,-5,10,8,-5,7,6,3,-7,-1,6,-4,2,3,-3,-9,5,4,9,5,10,6,-9,7,-10,8,2,2,-7,-4,-2,-5,-7,2,-1,-2,6,5,8,3,10,-5,5,-8,4,1,7,3,-7,1,-2,8,-10,-5,-7,-8,2,-3,3,-9,7,5,10,-9,-2,6,3,4,-9,2,9,-6,3,10,-3,3,1,-4,-5,-7,-5,-3,-8,-2,5,-6,-3,-5,-2,-2,-4,-4,2,-3,3,4,-4,4,1,1,-9,-10,7,-9,-2,5,4,10,-9,3,-4,10,3,10,-2,-1,7,-3,9,-5,-3,-7,-10,-2,-2,3,-1,4,6,9,-6,-9,2,-7,-4,-3,5,-3,-9,-5,2,-4,10,-9,3,-6,-6,2,-7,-10,3,5,3,4,2,10,-7,9,4,6,3,8,5,9,3,2,-3,6,4,8,9,-2,-4,-4,8,-10,1,4,10,-9,-5,10,7,-3,-6,-1,-1,-9,-5,-3,-2,5,1,-9,-5,5,-9,-7,1,-1,1,9,-6,-6,3,5,-4,-1,10,-7,10,4,-7,8,-10,-2,-1,-4,-1,-8,-2,2,-3,-1,2,-9,-10,-4,5,4,10,-10,-6,10,7,-2,2,4,-6,2,5,-10,6,3,-5,9,-10,10,5,5,-9,8,-10,1,-9,4,4,-10,-10,-4,-7,-4,-3,-5,6,10,-7,-9,3,3,-2,-6,2,7,-7,1,-5,5,9,8,-1,3,7,5,1,-1,-6,9,3,2,-6,-7,7,-1,-1,-4,-7,10,-8,-5,-2,3,-5,8,8,-1,-2,-7,10,9,-7,4,1,-10,-1,-9,-3,-1,-3,-8,8,7,-6,2,4,-7,-6,5,-7,6,9,-10,-6,-1,-1,-1,-6,10,-3,-10,-4,8,-10,-5,7,6,7,-8,-1,3,6,3,-4,-6,7,-4,4,1,6,-2,9,8,-8,-10,-3,-4,-9,-3,-2,-10,4,10,-7,-2,8,3,-6,3,7,-6,8,-1,7,-8,2,5,-1,4,5,10,-3,-1,5,-4,9,5,8,-4,10,3,9,6,3,9,-7,1,3,-9,-6,-1,3,-2,-1,-7,8,1,-7,1,-8,-10,-1,-6,-5,-1,10,-7,7,7,4,9,3,1,-8,2,5,2,4,-8,-7,-9,-10,-3,4,5,3,1,-3,-9,-7,8,2,-7,1,3,-4,-4,-9,-1,6,-2,-1,6,9,6,8,-7,-5,-7,8,4,-4,-6,5,5,-5,-10,-2,-4,-4,7,6,2,-8,10,1,-8,10,10,-3,-7,-2,9,-5,-4,-5,3,-5,-5,-6,-9,-8,-5,-4,6,-10,10,-9,-7,-3,-7,4,-2,-5,-1,3,-9,10,-9,-9,-4,7,-10,-2,-5,9,-1,-10,-1,-9,7,4,-3,1,9,-1,6,6,6,-6,10,1,-8,4,7,4,9,1,6,-6,-2,9,-4,-8,10,-1,7,2,6,-7,-3,-8,-2,-4,1,-5,-8,-2,7,5,4,-8,10,8,-7,-9,-7,3,-6,-10,-9,-1,-7,-7,5,-4,8,7,3,5,2,2,-9,-1,-2,-1,5,-5,-6,-9,-6,7,-4,-3,-2,6,-2,-5,3,-5,8,5,-1,10,-7,-8,1,-7,10,3,-10,-7,-9,-3,-8,-9,-8,2,9,7,-10,-6,-10,9,7,-5,-2,1,-5,-6,-7,-9,-3,6,-2,5,10,4,-8,-2,-4,-4,-7,10,9,5,10,1,-7,-5,-10,3,-6,9,-2,1,-8,-4,9,-7,9,4,-7,3,4,5,10,5,6,10,-5,-6,5,7,4,-2,-7,-2,-3,-8,-5,-2,-2,-3,-1,6,5,8,-4,5,9,10,-6,-10,-9,6,3,1,5,4,8,-1,-4,4,-3,5,-6,10,9,-3,-10,4,-8,-1,-8,8,-6,10,5,-7,1,-10,9,3,10,8,-6,7,7,7,-2,-3,2,-8,5,7,7,7,9,-6,5,-1,6,2,-6,1,4,6,-7,-4,10,-2,-1,5,-10,-9,6,-5,7,-10,-8,1,-6,9,1,-8,7,10,-1,-7,9,-6,-7,-9,-8,-7,9,10,7,9,-3,9,-8,-9,5,2,4,-8,10,-7,-6,7,-4,-1,4,-9,6,10,-6,-5,-7,-4,6,3,-9,4,-5,-1,8,10,-1,-1,-6,2,-10,-6,7,-9,1,-9,-10,-6,-6,6,8,-7,4,7,-9,-5,-8,-7,10,-8,-5,1,-3,-2,5,-4,3,-3,9,10,-9,-8,-7,-3,-8,8,-1,-1,-8,-5,3,8,-1,7,-1,8,4,-10,-1,-8,4,-4,-6,9,-10,-9,-6,-10,-7,6,4,9,-2,-6,10,1,1,10,10,1,8,4,-6,10,1,-1,-4,2,-7,-8,-4,4,-4,-3,8,6,-4,9,-7,3,-6,3,-3,7,-5,1,-4,5,3,-6,-3,-6,-5,7,5,9,4,-3,-7,9,5,-1,6,9,-3,-10,-9,3,3,-3,-2,2,-4,-5,5,-3,3,-9,10,-8,-5,1,-5,6,-6,6,3,6,-5,10,-4,-10,7,-7,9,9,-6,-6,7,-8,-4,3,-4,-7,-9,-9,-10,-1,8,3,3,-1,-4,-9,10,-6,-6,4,-9,1,7,-2,-8,-5,10,4,-2,2,4,9,-3,-8,5,8,-2,1,-10,-10,5,-5,-5,-10,-5,-5,6,-3,-10,-7,-5,-8,-6,8,-3,4,-6,-2,-9,-8,-5,-3,10,1,7,6,4,8,-4,-6,7,-2,9,3,-8,-2,5,-7,1,4,5,9,5,-1,-8,-3,-5,9,3,-1,3,6,-9,5,-9,10,-1,5,-10,3,3,2,-3,3,-3,4,8,-5,1,8,1,7,-9,-5,9,7,-6,-2,-10,-2,7,-10,-6,-3,7,10,-1,9,9,1,4,2,6,6,8,8,3,-2,3,7,-1,7,4,-4,-9,-1,-4,2,6,6,7,-9,2,-1,-9,6,-7,-1,-8,-4,-3,-10,9,-7,-2,-10,6,1,-3,4,5,3,10,5,-1,5,-5,1,8,10,10,9,1,4,4,-9,6,3,6,-6,-6,-4,-5,-6,2,3,9,-8,3,6,1,-8,-7,-5,-8,3,3,6,2,-2,-9,-6,8,9,-9,-1,-2,9,10,4,6,-2,5,-8,-10,-1,7,9,5,-9,5,-7,10,6,-10,6,10,-9,-5,-1,-7,-6,-2,-2,-3,3,2,6,-6,2,5,-5,7,1,1,9,-6,4,1,9,8,3,2,4,4,-5,5,5,4,-5,7,2,-10,5,2,-7,-4,2,10,5,1,2,-3,-7,-2,-1,6,-4,2,8,-1,-6,-5,-4,-2,8,10,9,-8,10,7,-1,-7,-9,-4,4,-4,-4,-9,-4,7,6,4,3,-10,-2,-6,-1,-7,3,9,-1,-8,-2,5,-7,7,-4,-9,-5,-9,7,9,10,8,1,9,-10,1,3,5,-8,5,7], dtype = "uint32")#candidate|2455|(2016,)|const|uint32
call_2454 = relay.TupleGetItem(func_2270_call(relay.reshape(const_2455.astype('uint32'), [16, 9, 14]), relay.reshape(const_2455.astype('uint32'), [16, 9, 14]), ), 0)
call_2456 = relay.TupleGetItem(func_2274_call(relay.reshape(const_2455.astype('uint32'), [16, 9, 14]), relay.reshape(const_2455.astype('uint32'), [16, 9, 14]), ), 0)
func_1567_call = mod.get_global_var('func_1567')
func_1570_call = mutated_mod.get_global_var('func_1570')
var_2461 = relay.var("var_2461", dtype = "float32", shape = ())#candidate|2461|()|var|float32
var_2462 = relay.var("var_2462", dtype = "float32", shape = (1, 720))#candidate|2462|(1, 720)|var|float32
call_2460 = relay.TupleGetItem(func_1567_call(relay.reshape(var_2461.astype('float32'), []), relay.reshape(var_2462.astype('float32'), [3, 15, 16]), ), 5)
call_2463 = relay.TupleGetItem(func_1570_call(relay.reshape(var_2461.astype('float32'), []), relay.reshape(var_2462.astype('float32'), [3, 15, 16]), ), 5)
output = relay.Tuple([uop_2450,call_2454,const_2455,call_2460,var_2461,var_2462,])
output2 = relay.Tuple([uop_2450,call_2456,const_2455,call_2463,var_2461,var_2462,])
func_2471 = relay.Function([var_2461,var_2462,], output)
mod['func_2471'] = func_2471
mod = relay.transform.InferType()(mod)
var_2472 = relay.var("var_2472", dtype = "float32", shape = ())#candidate|2472|()|var|float32
var_2473 = relay.var("var_2473", dtype = "float32", shape = (1, 720))#candidate|2473|(1, 720)|var|float32
output = func_2471(var_2472,var_2473,)
func_2474 = relay.Function([var_2472,var_2473,], output)
mutated_mod['func_2474'] = func_2474
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3001 = relay.const([[[True,True,True,False,False,True,False],[False,False,True,False,True,True,False],[False,False,False,False,False,False,False],[True,False,False,True,False,True,False],[True,True,False,False,True,True,False],[True,False,False,True,False,True,True],[True,False,True,True,True,False,True],[True,False,False,False,True,False,False],[True,True,False,False,True,False,False],[False,False,False,True,False,False,True],[True,True,False,False,True,False,False],[False,False,True,True,False,True,False],[True,True,False,False,True,False,False],[False,False,False,False,False,False,True]],[[True,False,False,False,True,True,False],[True,True,False,True,True,False,True],[True,True,True,True,True,True,True],[False,True,False,False,True,False,False],[False,True,True,True,True,False,True],[True,True,True,False,False,False,True],[True,False,False,False,True,True,True],[False,False,True,False,True,True,False],[True,True,False,True,False,False,False],[False,False,True,True,True,False,True],[True,False,False,False,False,True,False],[False,False,False,False,True,True,True],[False,False,True,True,True,False,False],[False,False,False,False,False,True,True]],[[True,False,False,False,False,False,False],[True,True,False,True,False,False,True],[True,True,False,True,True,False,True],[True,False,True,True,False,False,True],[False,True,False,True,True,False,True],[False,False,True,True,False,True,False],[False,False,True,True,True,False,False],[True,False,True,False,False,True,True],[False,True,False,False,False,False,True],[False,False,False,False,False,True,True],[False,False,True,False,False,False,True],[False,False,False,True,False,True,True],[False,False,False,False,True,False,False],[False,False,True,False,False,True,False]],[[False,False,True,True,True,False,True],[True,False,True,True,True,True,False],[True,False,True,False,True,True,False],[False,True,True,False,True,False,False],[True,False,False,False,False,True,True],[True,True,False,True,False,True,False],[True,False,True,False,True,False,False],[False,False,True,False,True,False,True],[True,False,True,False,False,False,False],[True,True,True,False,True,False,True],[True,True,False,False,False,True,False],[True,True,True,True,True,False,True],[True,False,False,False,False,False,False],[True,False,True,False,True,False,False]],[[False,False,False,True,False,False,True],[False,True,False,True,False,True,False],[False,True,True,True,True,False,True],[True,False,True,False,False,False,False],[True,True,True,False,True,True,True],[True,True,True,True,False,True,False],[False,False,False,False,True,False,True],[False,False,False,True,False,False,False],[False,False,False,True,True,True,True],[True,False,True,False,True,False,False],[True,True,False,False,True,True,False],[False,True,False,False,True,False,True],[True,False,True,True,True,False,False],[False,True,False,True,False,True,False]],[[True,True,False,True,False,False,True],[True,True,True,True,False,True,True],[True,False,False,False,False,False,True],[True,False,False,False,True,False,True],[True,True,True,True,False,True,False],[False,False,True,True,True,False,False],[False,False,True,True,False,True,False],[False,True,True,False,True,True,False],[True,True,True,False,False,True,True],[False,False,True,False,False,False,True],[False,True,True,False,True,False,True],[True,False,True,True,True,True,True],[True,False,True,False,False,True,False],[False,False,False,True,False,True,True]],[[True,False,True,True,True,False,True],[False,True,False,True,True,False,False],[False,True,False,True,True,True,True],[True,False,False,False,False,False,True],[True,True,False,False,True,True,True],[False,False,False,False,True,False,True],[False,False,False,False,True,False,False],[True,True,True,False,False,True,False],[False,True,True,True,True,False,True],[False,True,False,True,True,False,True],[False,True,True,False,True,True,True],[True,True,True,False,False,False,False],[False,False,True,True,True,False,False],[False,False,False,True,False,False,False]],[[True,True,True,False,False,False,False],[True,True,True,False,False,False,False],[True,True,True,True,True,False,False],[False,False,True,True,True,True,False],[True,True,False,False,False,True,False],[False,False,True,False,True,False,False],[False,True,True,True,False,False,False],[True,False,True,True,False,False,False],[True,True,False,False,False,False,True],[True,False,True,True,False,False,True],[True,True,False,True,False,True,False],[False,True,True,True,True,False,False],[True,False,True,True,True,True,True],[True,False,False,False,False,False,False]],[[False,False,True,True,True,True,True],[True,False,True,True,True,False,False],[False,False,True,False,False,False,True],[True,True,False,True,True,True,True],[True,True,True,True,True,True,True],[True,False,False,False,True,True,False],[False,False,False,True,False,True,True],[True,True,False,False,True,False,True],[False,True,True,False,False,False,True],[False,True,False,True,False,False,True],[True,False,True,True,False,False,False],[False,True,True,True,True,True,False],[False,False,True,False,True,False,False],[False,True,False,False,False,False,True]],[[False,True,False,True,True,False,True],[True,False,True,True,True,True,True],[False,False,True,False,False,False,True],[False,True,True,False,False,True,False],[False,False,True,True,True,True,False],[False,True,True,True,True,True,False],[True,False,True,True,False,False,False],[True,True,True,True,False,False,True],[False,False,True,False,False,False,True],[True,True,False,True,True,True,False],[False,False,False,True,False,False,True],[True,False,True,False,True,False,True],[True,False,False,True,False,True,False],[False,True,True,True,False,True,False]],[[True,True,False,False,True,True,True],[False,True,False,True,True,True,True],[True,True,False,False,False,False,False],[False,True,False,True,False,True,False],[False,True,True,False,False,True,False],[True,False,True,True,True,False,False],[True,True,True,False,True,True,False],[True,True,False,True,False,False,False],[False,False,True,True,True,False,True],[True,True,True,False,False,False,False],[True,False,False,False,False,False,False],[True,True,True,False,True,True,True],[True,False,False,False,False,True,True],[True,True,False,False,False,True,False]],[[False,True,False,False,False,True,False],[False,True,True,True,False,False,True],[True,True,False,True,True,False,True],[True,True,False,False,False,False,False],[True,True,True,True,False,True,True],[False,False,False,False,True,True,True],[False,True,False,True,False,True,False],[False,True,True,True,True,True,False],[True,True,False,False,False,True,False],[True,True,True,True,True,True,False],[True,False,True,True,True,False,False],[False,True,True,False,False,False,True],[True,False,True,True,True,False,True],[False,True,True,True,False,True,False]],[[False,False,False,True,True,False,False],[False,False,False,False,True,True,False],[True,False,False,True,False,True,False],[True,True,True,True,True,True,False],[True,False,True,True,False,True,False],[True,True,False,False,True,True,False],[False,False,True,False,False,True,True],[False,False,True,False,False,False,True],[True,True,False,False,True,True,False],[False,False,False,True,False,True,True],[True,False,False,False,False,True,False],[True,False,True,True,False,False,True],[False,False,True,True,False,True,False],[True,False,False,True,False,False,True]],[[False,True,False,False,True,False,False],[False,True,False,True,True,True,False],[False,True,False,False,True,True,False],[True,False,False,True,False,False,False],[False,False,True,True,False,False,True],[True,False,True,True,False,True,False],[True,False,True,True,True,True,False],[False,False,False,False,False,False,True],[False,False,True,False,False,True,True],[False,True,False,False,True,True,True],[True,False,False,True,False,True,False],[True,False,False,False,False,False,False],[False,False,True,False,False,False,False],[True,True,False,True,False,False,True]],[[False,False,True,True,False,True,False],[True,False,True,False,False,True,False],[False,False,False,False,False,True,False],[True,False,False,False,True,False,True],[False,True,True,False,True,False,True],[True,True,False,False,True,True,True],[True,False,True,True,False,False,True],[True,True,True,False,True,True,False],[True,False,True,True,True,False,True],[False,False,False,True,True,False,False],[False,True,True,True,False,False,False],[False,False,True,True,False,False,True],[True,False,True,False,False,True,True],[True,True,False,True,False,True,False]]], dtype = "bool")#candidate|3001|(15, 14, 7)|const|bool
var_3002 = relay.var("var_3002", dtype = "bool", shape = (15, 14, 7))#candidate|3002|(15, 14, 7)|var|bool
bop_3003 = relay.logical_and(const_3001.astype('bool'), relay.reshape(var_3002.astype('bool'), relay.shape_of(const_3001))) # shape=(15, 14, 7)
output = bop_3003
output2 = bop_3003
func_3029 = relay.Function([var_3002,], output)
mod['func_3029'] = func_3029
mod = relay.transform.InferType()(mod)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3030 = relay.var("var_3030", dtype = "bool", shape = (15, 14, 7))#candidate|3030|(15, 14, 7)|var|bool
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3031 = func_3029_call(var_3030)
output = call_3031
func_3032 = relay.Function([var_3030], output)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3419 = relay.var("var_3419", dtype = "float32", shape = (11, 13, 5))#candidate|3419|(11, 13, 5)|var|float32
var_3420 = relay.var("var_3420", dtype = "float32", shape = (11, 13, 5))#candidate|3420|(11, 13, 5)|var|float32
bop_3421 = relay.floor_divide(var_3419.astype('float32'), relay.reshape(var_3420.astype('float32'), relay.shape_of(var_3419))) # shape=(11, 13, 5)
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
var_3437 = relay.var("var_3437", dtype = "int8", shape = (1792,))#candidate|3437|(1792,)|var|int8
var_3438 = relay.var("var_3438", dtype = "float32", shape = ())#candidate|3438|()|var|float32
call_3436 = relay.TupleGetItem(func_2033_call(relay.reshape(var_3437.astype('int8'), [16, 16, 7]), relay.reshape(var_3438.astype('float32'), []), ), 2)
call_3439 = relay.TupleGetItem(func_2036_call(relay.reshape(var_3437.astype('int8'), [16, 16, 7]), relay.reshape(var_3438.astype('float32'), []), ), 2)
uop_3448 = relay.cosh(var_3419.astype('float64')) # shape=(11, 13, 5)
bop_3453 = relay.right_shift(call_3436.astype('int32'), var_3420.astype('int32')) # shape=(11, 13, 5)
bop_3456 = relay.right_shift(call_3439.astype('int32'), var_3420.astype('int32')) # shape=(11, 13, 5)
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
const_3474 = relay.const([-7.980212,9.231272,-1.835686,-8.732211,8.351138,9.110864,-5.149278,7.116476,-5.076499,1.710887,5.467099,1.237732,-8.705048,4.570328,-2.447680,-2.410096,8.360805,-5.204024,-3.449855,-5.374572,-7.853696,-6.792026,1.113867,-6.536249,3.359269,7.341392,2.165036,-3.017050,-8.738667,0.901133,-9.136117,0.768262,-0.665599,9.455525,5.298032,-2.638486,-0.206919,-9.070330,-7.926225,0.686627,-3.087434,3.335336,3.161046,-5.287195,3.724705,5.745483,9.840166,0.948314,-0.393955,-5.601877,7.423105,3.250579,7.669733,5.093651,3.831912,-1.317459,8.006184,2.707704,8.726862,-0.337947,4.246364,4.927177,3.034019,-4.486872,2.039443,2.144728,-8.536404,-2.464424,-8.367709,2.275045,-6.146686,-8.607537,7.931995,7.355324,0.548269,1.233297,2.296074,9.402254,-1.163189,-8.954181,-0.940964,-1.386331,-8.109678,1.499642,-6.860461,-0.183534,-8.334126,-7.484725,-6.181633,-1.600613,2.569655,2.604959,-2.283012,8.833780,-5.739764,7.211465,6.488708,1.026709,-8.673052,2.112209,-3.853558,-5.533142,-1.892158,-2.295976,-0.237513,-3.466700,5.766639,-6.510336,-0.523558,-9.278251,7.773126,0.091040,7.921197,-7.028237,8.980100,-5.421392,-9.000148,-4.607718,7.739366,1.446394,-0.535446,8.750514,4.473807,2.722499,-4.010370,8.738045,0.386404,-1.651894,8.743216,8.745393,-1.722987,-0.840893,-7.676269,0.260857,-7.974018,6.707961,-8.497476,-3.414839,-6.231364,2.733304,3.959746,-9.455394,-7.766348,2.860071,1.991521,-0.758299,-8.863483,-9.045194,-1.130644,-1.735990,3.497070,8.144204,-5.886695,4.245330,5.943499,7.739722,3.943405,-6.300076,0.291342,-0.448571,-1.056412,-2.116262,1.303067,4.133824,5.728767,-9.811824,7.385244,-0.301930,3.470728,-2.251391,7.756956,9.377532,9.450518,-2.458187,6.441951,3.034963,4.961454,-5.865442,8.350108,-2.653711,0.913236,9.809799,-7.622404,1.714225,7.388919,4.523815,8.652703,-9.984537,-6.759214,9.750830,2.001368,1.105195,9.185834,6.751109,3.042299,9.017219,2.766752,0.464235,-5.666654,6.553254,-5.281492,-2.677327,-8.742350,-4.241699,3.030129,-0.547177,-7.739747,-9.125246,-1.138408,-2.768994,0.706996,-0.217844,-0.687647,9.186954,-0.460702,2.903963,8.575034,7.645698,-8.376316,-8.297855,1.098830,-3.290446,-3.160619,6.661490,-3.119047,-6.074965,8.617062,-4.429382,-2.843565,3.041938,9.638954,3.152492,-1.044471,-9.730445,-3.579991,5.968202,4.049849,4.240443,-9.218473,-4.987815,8.953604,-5.284486,-4.897968,-6.725742,-9.691120,0.752841,-4.070865,-6.898340,8.477817,8.598861,9.283653,-7.109959,-1.578937,-9.605486,-6.142043,-5.356862,5.830902,2.320985,9.581872,-0.678902,9.743766,8.057815,-7.517735,-1.991663,-7.478050,1.836964,-4.682255,1.738154,-8.861505,1.262280,-7.535604,-3.762097,2.060962,9.099679,5.538569,-3.465195,-9.310951,1.784135,-9.831202,-2.818550,0.706179,-1.440762,8.806249,4.078080,-0.605364,1.316179,-9.658385,-4.059455,5.627169,-5.455486,-4.362461,1.058775,7.932603,2.989755,-6.706566,-0.064106,-0.300822,-0.922227,-2.319425,5.354226,-1.278216,-7.282758,-6.580625,-6.205658,-8.327819,-3.702275,-1.510231,3.885317,-2.348037,5.513410,1.422525,5.087777,-9.711401,3.620124,2.465933,5.482961,7.434466,-3.624416,1.900023,4.784997,1.575137,-6.648927,9.279491,2.699790,-2.709048,6.728737,1.939091,1.040196,-4.069439,-2.429583,4.488771,1.020733,2.890945,-1.140819,1.463735,9.724479,-7.918798,-8.713151,8.332345,3.501916,-9.632468,2.323053,3.045272,3.386970,-2.334719,1.230856,-8.808704,-6.761126,-5.928679,-2.048513,5.118751,1.008558,4.172370,2.821136,0.466411,-9.890945,8.814096,2.245389,7.392811,-2.436314,6.804669,6.193260,5.528503,9.766420,4.947046,8.386681,9.672197,-1.351900,-0.812746,-6.397690,-1.793299,4.162533,-9.105528,8.484807,9.230193,2.371612,1.043519,-1.585951,8.385513,1.562037,6.126812,0.872065,1.847273,3.386836,0.092307,6.615566,0.234721,-3.803405,-7.938299,7.901753,7.651480,-0.139164,4.508872,7.208854,-3.870124,8.517883,5.152026,8.624264,-8.573433,-3.475317,-4.261910,-0.578840,-9.441768,8.020994,-9.338019,3.702484,-3.668949,-1.021458,-3.806677,-5.616000,-3.113329,8.673614,-5.172862,-8.232876,6.423798,-2.383731,0.620616,6.287383,6.899463,-2.576512,9.673290,-2.512192,8.940806,-8.989787,-6.970219,-6.362738,-6.545605,2.430398,-3.180550,-3.669207,-0.075217,6.164734,8.217991,-0.248676,-0.875324,-0.611097,-9.355418,7.633446,3.804615,2.265042,-9.136567,3.846424,5.328200,6.642128,-5.368890,-7.044267,-0.405116,-7.343587,-2.380860,2.427188,9.870331,0.209142,-6.072476,5.813061,-8.362652,1.261960,6.273707,7.168273,2.437284,-4.387498,-2.955938,5.212400,8.352087,-6.859761,-2.035910,-1.590341,7.234254,4.108290,-4.493639,-6.407721,9.910602,9.301283,-6.067293,-6.997076,5.756775,0.943599,7.565516,-9.892170,0.792202,-5.633378,-7.836110,4.724848,-9.154089,0.505196,-9.768254,3.556186,-4.557633,-3.037966,-0.113671,-0.662479,4.573360,1.639706,-4.596419,0.526816,1.953156,0.219475,-2.422700,9.711957,6.371304,8.179527,-0.375329,-5.246636,4.211290,7.366994,6.803477,1.400438,-9.912053,4.390051,3.584907,-8.112967,-5.176309,-5.053310,-1.737442,-9.574065,3.854844,9.404539,-2.040905,-6.437854,-3.522216,1.918316,4.159453,9.424611,-8.006946,5.363924,9.261839,-5.392887,0.555212,6.143851,-1.011362,-5.354794,9.389621,-1.814176,3.029974,-9.459798,-4.271875,4.325135,-8.155871,4.554402,4.457189,-3.279594,-6.610378,-6.616438,-5.789423,-3.658320,3.168164,-7.616589,-0.865370,3.168974,4.981807,-9.227965,2.626954,0.625223,-2.587837,-1.866675,7.916616,-9.325572,0.782348,-7.752420,-7.626450,8.284241,0.635479,2.266805,-7.344624,5.100511,-6.101465,0.274681,6.447891,8.773551,-5.786096,6.461226,3.273932,7.645629,-0.348119,-9.320470,-3.946413,9.061306,0.215213,-0.200386,6.801021,1.120144,0.994989,1.578614,5.979824,-9.400333,3.503289,-7.612501,7.181964,3.728221,4.466371,0.988029,9.831996,3.571619,2.701023,-5.293282,3.505886,-6.298800,9.665343,7.813207,-2.348362,-5.194457,1.815609,-6.012917,-5.709159,-3.862174,3.185836,-2.399498,-0.331709,7.728131,6.752207,-2.295341,5.670860,4.612453,8.847252,-0.155339,-0.579440,5.324529,5.740376,-0.970504,6.470835,9.284189,-9.673293,-4.548623,3.685235,-6.769998,7.120623,4.106663,8.200571,1.362289,8.524271,4.439024,-9.774031,5.562220,-3.379885,-0.926455,-5.654908,0.476972,8.473969,-1.450847,5.612827,7.414568,1.226572,-3.631446,0.729648,0.028541,6.570366,-6.098114,3.186561,5.999306,8.646022,-1.402592,6.314831,2.890040,4.581383,8.909822,-5.310339,6.660616,3.958713,3.402737,-8.308298,5.788583,9.884344,4.559917,1.233133,-8.407111,-4.041281,-0.814487,-1.455661,-6.456767,5.314942,0.825221,-2.544855,-2.435054,-2.376822,-2.483769,-5.613570,-8.844580,1.617748,6.715201,-6.271734,-4.357791,-2.181939,-6.747856,-1.027718,-5.268948,-2.780429,9.778132,-7.813858,-9.474332,4.370572,9.627612,-8.929788,4.562515,-9.747416,-9.412391,4.581774,3.078674,7.595242,-7.200013,9.159439,-3.422712,-9.591513,-6.423900,2.012697,2.804494,-9.377619,-1.135521,-1.527677,-0.429716,-6.575058,7.558359,9.352034,1.888787,-0.972005,-4.212460,-5.119556,5.479609,8.785741,-3.486230,-7.330170,4.660893], dtype = "float32")#candidate|3474|(720,)|const|float32
call_3473 = relay.TupleGetItem(func_2471_call(relay.reshape(call_3436.astype('float32'), []), relay.reshape(const_3474.astype('float32'), [1, 720]), ), 5)
call_3475 = relay.TupleGetItem(func_2474_call(relay.reshape(call_3436.astype('float32'), []), relay.reshape(const_3474.astype('float32'), [1, 720]), ), 5)
uop_3476 = relay.asin(uop_3448.astype('float64')) # shape=(11, 13, 5)
func_2270_call = mod.get_global_var('func_2270')
func_2274_call = mutated_mod.get_global_var('func_2274')
const_3484 = relay.const([-1,-7,9,-9,6,4,-7,3,1,-8,-6,-3,-8,-9,4,-1,8,-2,-1,-1,4,-8,-10,-7,-5,-3,-7,-5,3,-2,-5,2,10,-2,4,9,-1,-8,-7,3,7,4,-2,1,-4,2,5,-5,-9,-5,10,-10,-2,-3,3,-3,-2,6,-6,9,9,1,7,-8,-5,-9,8,8,-8,-9,5,-3,8,10,6,6,-3,9,5,4,2,-6,3,-10,-3,3,-10,-4,6,2,5,9,-9,8,6,5,-7,6,-3,4,7,3,-6,6,2,5,-8,-7,-1,-10,-9,4,-5,10,9,1,3,-3,-10,-10,9,-2,-10,-3,-6,-9,-9,2,5,2,-6,-2,-7,-6,4,-1,-5,-9,2,7,8,-4,1,10,8,2,5,2,8,10,6,-6,-4,6,-8,5,-9,2,-7,-7,-4,-8,4,-2,-8,6,-4,6,7,6,-7,1,2,-7,6,1,-5,-9,-8,3,3,-1,4,-5,-1,8,1,-3,3,-1,6,-6,-2,-1,-8,-8,6,8,-9,4,-3,8,-4,-9,3,-3,-4,7,6,8,-4,4,10,-1,4,-10,10,1,1,8,-9,-10,-1,-1,-6,-10,-9,-10,6,-7,9,-5,7,10,7,-1,-10,-1,9,6,3,6,2,-1,9,9,7,-4,2,-4,3,-5,-8,2,8,-5,-5,5,8,6,-3,-3,8,7,-5,-7,8,-1,-6,-6,-2,7,3,-5,-7,-10,3,-5,3,9,4,-6,7,9,-10,-10,-7,10,-1,4,-5,10,-8,-8,-8,-10,-4,5,6,5,-10,-8,3,8,2,-2,6,4,-9,-8,-1,9,7,-9,9,-6,-10,-5,-2,-9,-7,-1,4,-9,-10,-4,-5,8,-7,2,-2,5,5,-7,5,3,-6,6,-2,7,-10,-4,-3,7,-1,8,-9,5,4,-3,7,-2,-10,5,1,-3,2,-8,-10,-7,-3,-2,9,-6,-9,-4,5,-9,4,7,5,-8,7,-4,-10,8,7,6,7,-8,3,5,8,2,-8,-7,9,4,1,1,-10,-5,-8,2,2,-6,-4,2,-2,5,-1,5,-8,-6,-6,2,-7,-2,7,4,5,-4,-8,-10,9,4,-8,2,9,-8,-6,-2,7,-9,7,-4,1,1,4,-4,9,-7,-9,6,6,5,-2,6,-1,4,6,2,5,1,-7,2,-4,-4,7,-3,3,6,6,-7,-7,-7,-8,-2,-2,-10,-7,6,3,-8,-1,-5,10,-2,-5,5,1,-5,-1,-9,8,-4,4,-10,-2,-7,-9,9,-6,-6,-1,3,3,8,4,6,9,-9,-10,1,-7,-4,5,-6,4,3,2,-5,3,10,-5,9,6,10,-9,7,3,10,3,-8,7,2,9,-6,-5,10,-3,-3,-9,5,5,-3,5,4,-1,-7,-6,-10,8,-7,-10,-2,-8,-2,-9,-4,-2,1,-2,5,9,-4,1,-2,-7,10,6,2,7,10,4,-10,-2,-2,-8,-10,7,4,7,6,2,3,8,-3,-1,2,-8,-2,3,-9,-10,-8,4,-6,-7,-4,8,9,5,2,-5,-3,-5,7,8,-7,-6,7,6,-10,-6,1,4,-2,2,-8,6,-3,-6,-9,6,-5,10,2,-7,-8,-9,-9,-9,-3,-4,-1,2,-1,2,-3,5,-1,-3,-10,5,5,7,8,-4,-8,-2,1,10,-10,-2,-3,4,2,8,8,-10,-9,7,-4,6,1,8,2,4,2,-7,-2,10,-8,6,4,-7,4,10,-4,9,-6,7,-6,-10,-6,-5,9,2,6,3,5,-2,-5,8,-9,-7,3,1,-5,-10,-9,9,4,5,-9,-9,8,5,4,-5,8,9,5,3,-2,-1,1,7,1,-5,-10,-5,8,6,-3,6,-10,-5,5,-7,2,-8,-9,-8,8,-1,8,9,-7,-9,-5,-2,-9,1,4,1,-7,-10,-3,-9,2,1,7,7,6,-2,8,-5,-2,1,8,3,2,-4,-10,7,-2,-3,8,-10,-3,-5,-8,-9,9,-6,3,-2,3,-9,-8,6,-5,-8,-6,-7,-3,-1,3,1,10,-10,-9,8,-10,-6,5,10,-10,1,7,6,-10,-10,4,8,-3,9,-3,-3,-7,-3,2,10,-2,-9,-3,-8,1,-8,1,1,6,-5,8,-6,-10,7,4,5,10,-6,8,-6,4,-4,-3,1,4,10,6,8,7,-10,-3,-7,-1,-8,9,-10,1,9,8,3,6,7,-1,9,-10,-9,6,-10,10,-5,-3,1,-8,7,-8,1,8,-7,-1,-9,7,-6,3,-9,-3,2,-7,1,1,3,-10,5,-10,-9,1,6,5,3,7,2,4,5,5,9,3,7,-8,-3,5,3,-1,7,8,-5,10,4,-1,7,4,2,-10,3,3,8,2,-5,-8,-1,2,3,5,-6,-8,-10,1,-2,-5,10,-2,6,-10,9,5,4,9,-7,-7,-9,-8,-7,-5,3,-3,7,-3,-1,6,-1,-1,-8,4,-5,10,4,-4,-8,-10,-10,4,-8,2,10,-9,-9,-5,1,2,-2,9,-2,-9,-4,1,-1,1,4,1,1,4,-2,-7,-2,-10,-3,10,-4,6,-7,-1,-4,2,-6,-3,-4,-5,7,3,2,2,2,3,-1,3,-9,-6,7,-2,-10,-7,1,-5,5,8,1,7,1,3,-10,-10,1,4,6,10,-1,2,-1,10,7,5,9,-5,-3,-2,5,2,10,3,-1,1,7,4,4,-4,-4,-1,3,3,4,-1,-7,-4,-10,-2,7,-3,-9,-4,2,4,-1,9,10,-1,7,-1,4,3,10,5,9,6,4,2,10,-2,-8,-4,-10,3,5,-4,-9,5,2,-1,-5,-10,-6,4,8,-4,4,-7,3,4,3,-8,-6,-4,-2,-1,9,-7,6,1,-7,2,-3,8,8,3,-3,-4,6,7,-2,-5,2,7,3,-1,3,2,2,-9,3,2,6,2,5,-10,-10,9,6,7,4,-10,1,10,-1,4,4,9,-3,10,2,4,-4,1,8,9,-8,-8,10,-4,8,4,-5,2,4,5,-1,-8,-3,4,9,-7,4,-7,5,7,1,-7,-4,6,8,-6,4,3,2,-1,3,-5,-3,-3,-4,-2,-2,3,8,6,3,-5,5,-4,-5,6,-3,7,5,-4,10,6,-7,-10,2,-10,-9,4,3,10,5,8,-9,3,4,-5,-5,8,3,6,-5,10,1,9,2,-6,7,4,-10,4,-6,10,-1,5,6,7,8,-7,-1,-5,-8,-7,-4,5,-8,7,7,7,-6,9,-6,5,-6,-4,-1,-10,-7,-5,8,4,8,-1,-9,-10,3,-6,10,4,6,-4,5,7,1,-5,-2,4,-10,-3,-5,3,6,8,1,-1,8,-5,9,4,-3,-8,8,5,7,7,4,-2,7,6,10,8,-3,10,2,2,5,-10,-2,-10,-4,-2,7,9,-2,4,2,-1,-5,-9,-6,-4,-8,3,1,10,-2,-6,-6,3,-1,1,10,-8,-2,-4,7,9,-2,7,8,3,-10,1,5,6,-2,9,1,-9,-6,1,-8,-9,3,-6,-1,-2,-9,9,-8,1,-3,6,-10,9,5,-7,10,-5,-10,-5,1,4,-2,-5,-9,2,7,-10,-10,-2,8,-10,-5,-1,-8,-8,4,9,6,-6,-10,-10,6,-3,6,-5,-5,3,10,5,-8,6,-4,8,9,-6,4,-6,-6,1,6,-6,-1,-3,3,-8,8,5,-7,3,-8,-6,6,5,3,-4,9,2,-1,10,2,8,-2,-3,5,6,6,8,-4,-2,8,-7,-7,9,-5,-3,7,-6,-4,9,-4,5,-6,2,5,-8,9,1,6,6,-1,8,-10,-8,-3,4,-1,-7,-3,9,-2,-2,-4,-9,-5,4,3,3,-6,8,7,7,2,-6,-1,-4,4,4,-10,-2,7,8,-10,5,-3,7,8,7,8,-6,10,1,-5,4,9,8,-2,10,-1,-9,-10,4,8,8,7,-4,4,-1,-2,4,-10,9,-1,5,-4,4,-9,-1,-10,-3,-5,-3,4,-7,10,-2,-4,-6,10,6,-6,-9,9,-1,1,7,5,-2,-6,9,-8,8,-2,6,-6,7,3,6,-5,2,-5,1,-10,8,2,4,8,4,8,9,2,-7,-1,-6,10,-2,8,-2,6,6,9,10,4,5,-3,10,-2,10,-8,10,6,-2,7,5,-5,-3,-3,-4,-6,10,5,5,-7,-3,-5,2,8,8,-9,9,3,10,5,-4,-5,10,-6,-9,4,-5,-8,-10,10,-10,-10,5,-2,-1,9,8,10,5,-5,-7,8,-7,1,-3,-5,2,-3,-9,1,2,5,-5,-9,1,7,-4,1,3,1,7,-10,-9,5,10,8,-10,-3,8,-7,8,6,-3,5,1,4,10,-6,-7,-7,-8,8,-7,-3,2,3,-6,-4,-8,-6,5,-6,4,-5,2,7,-8,8,-5,-10,10,7,-4,4,-9,10,10,10,9,-2,-9,3,-3,3,-3,-5,8,-9,-4,-4,-5,9,-10,7,6,2,-10,1,7,3,6,-1,3,-7,-4,10,-5,5,9,7,-3,9,4,-9,3,-1,4,-5,3,-2,1,8,-4,-3,7,8,-7,-5,8,-3,10,4,-7,8,1,9,-5,-9,-4,-2,10,-10,1,-1,-1,-2,10,2,-4,-7,2,6,5,-8,6,9,-2,-5,6,1,-10,-6,-8,-8,-1,-7,1,4,-9,-6,-2,10,-5,8,3,-7,-2,-3,-5,3,6,-3,-3,4,7,6,-6,-7,3,2,-3,-9,6,-7,5,-9,2,-7,-6,7,-2,7,1,-8,-7,2,-1,-7,5,8,-8,8,-8,6,-5,-9,8,-4,10,-5,4,9,8,-4,3,-10,10,10,-4,-2,-9,-5,-9,-8,-5,-7,8,-6,-3,-7,4,-9,7,4,6,-10,9,4,8,-8,-4,-2,1,9,10,-2,5,-1,-1,-4,1,3,-1,9,-10,-10,9,7,4,6,1,-2,-1,9,-10,-10,6,10,-2,-7,-5,7,1,-4,9,10,-1,-6,-5,-4,-9,5,-10,3,5,4,-6,-4,4,-5,9,3,-8,-2,-4,-8,-3,-10,-10,-2,-2,-7,-9,7,-8,-6,-8,8,-8,10,9,6,-3,-4,7,9,4,10,-6,5,-1,-2,-10,4,-3,9,-2,-1,-9,-9,-2,-8,8,-8,-6,10,-5,-4,-5,2,-5,-7,6,-4,-4,3,-5,2,10,-8,6,2,10,-8,-6,-2,-9,-10,10,10,-8,2,6,7,-6,2,10,-5,2,7,2,-1,-10,-8,4,6,2,5,2,6,6,-1,-10,9,10,9,7,6,10,8,3,8,-2,7,-7,-3,9], dtype = "uint32")#candidate|3484|(2016,)|const|uint32
call_3483 = relay.TupleGetItem(func_2270_call(relay.reshape(const_3484.astype('uint32'), [16, 9, 14]), relay.reshape(const_3484.astype('uint32'), [16, 9, 14]), ), 0)
call_3485 = relay.TupleGetItem(func_2274_call(relay.reshape(const_3484.astype('uint32'), [16, 9, 14]), relay.reshape(const_3484.astype('uint32'), [16, 9, 14]), ), 0)
output = relay.Tuple([bop_3421,var_3437,var_3438,bop_3453,call_3473,const_3474,uop_3476,call_3483,const_3484,])
output2 = relay.Tuple([bop_3421,var_3437,var_3438,bop_3456,call_3475,const_3474,uop_3476,call_3485,const_3484,])
func_3489 = relay.Function([var_3419,var_3420,var_3437,var_3438,], output)
mod['func_3489'] = func_3489
mod = relay.transform.InferType()(mod)
mutated_mod['func_3489'] = func_3489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3489_call = mutated_mod.get_global_var('func_3489')
var_3491 = relay.var("var_3491", dtype = "float32", shape = (11, 13, 5))#candidate|3491|(11, 13, 5)|var|float32
var_3492 = relay.var("var_3492", dtype = "float32", shape = (11, 13, 5))#candidate|3492|(11, 13, 5)|var|float32
var_3493 = relay.var("var_3493", dtype = "int8", shape = (1792,))#candidate|3493|(1792,)|var|int8
var_3494 = relay.var("var_3494", dtype = "float32", shape = ())#candidate|3494|()|var|float32
call_3490 = func_3489_call(var_3491,var_3492,var_3493,var_3494,)
output = call_3490
func_3495 = relay.Function([var_3491,var_3492,var_3493,var_3494,], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3714 = relay.var("var_3714", dtype = "float64", shape = (5, 3, 8))#candidate|3714|(5, 3, 8)|var|float64
var_3715 = relay.var("var_3715", dtype = "float64", shape = (5, 3, 8))#candidate|3715|(5, 3, 8)|var|float64
bop_3716 = relay.power(var_3714.astype('float64'), relay.reshape(var_3715.astype('float64'), relay.shape_of(var_3714))) # shape=(5, 3, 8)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
const_3724 = relay.const([-2.806318,-9.664333,-1.660453,4.526928,9.140436,-4.116238,2.121128,4.819894,-4.072700,-2.915827,1.444042,-6.961709,-1.949045,8.835868,7.469266,3.661478,-4.830862,6.581999,-0.045334,5.120013,4.294292,-5.446017,4.885546,-5.248991,-9.511941,-2.917042,0.534837,0.569001,-9.534944,8.879417,-3.261330,3.041612,5.595216,7.698388,2.502794,7.932318,-2.285540,-1.496217,-2.619725,-6.122326,1.812057,-2.838038,3.761865,-6.493504,-6.419859,1.475018,-6.900490,-6.402273,6.119758,2.262350,-7.640540,4.253838,7.056045,-7.463564,9.191623,-8.059773,-5.875364,2.440963,-4.175539,1.137486,-9.266623,7.699132,-3.645347,-4.171704,6.575053,-1.135290,-6.978251,2.174881,8.348140,8.297492,-3.496493,5.731516,6.739954,-6.371883,-4.384245,-9.140201,-7.573695,-7.412047,6.315450,0.531204,-2.418097,2.678179,7.702486,-2.200765,-9.428436,2.212001,8.009376,5.492755,-6.568239,8.647679,-3.612053,1.120611,5.341470,3.925827,-7.665934,-5.707997,-2.007638,0.404182,-1.735139,0.418903,-8.426090,4.784948,1.448644,-3.406302,-2.405258,2.915065,1.637289,2.690949,-4.064085,-0.035290,4.325184,5.965084,-8.243531,-9.221471,0.089788,6.653733,-5.926264,6.002578,-8.824807,8.908890,6.767947,7.785762,0.989669,-1.134676,3.326646,-5.086125,3.074006,-6.586978,7.060144,-0.267795,-6.833702,-0.386433,-4.617109,1.582470,6.291344,7.895747,9.731904,0.431421,4.242414,-2.079619,-5.778445,-3.462606,-3.128490,5.606185,1.535698,-7.106424,-1.761187,-9.888926,5.401781,5.069551,5.303512,1.193238,2.489488,8.735265,-0.967110,9.785107,8.701500,-5.548177,-2.225934,6.608506,0.538297,-3.312643,-1.590390,-3.119706,-8.138503,-7.028549,-1.375261,-3.162109,-8.071297,2.658979,8.098053,-9.543097,-7.455707,-1.225188,-0.279081,-8.023471,-5.691246,8.137461,4.205927,-5.512564,5.497473,0.614046,-4.868806,0.476783,-8.000670,-1.566062,0.551964,-7.763487,0.808015,1.687174,-0.818195,-6.909384,-2.360950,2.165840,7.290932,4.844823,-9.134620,7.947426,-7.306201,3.851777,6.020160,-6.648437,-6.746713,-1.441405,5.304421,-9.473189,4.492329,-4.372363,-7.039611,3.459648,5.835650,1.069528,-9.680433,4.400042,8.287891,9.021548,-2.413559,-1.277737,-9.482508,-7.578677,-5.860295,7.839973,9.328582,0.719318,4.743788,-0.170258,6.433806,-2.734831,-2.169715,-1.921474,-1.336158,-6.497929,5.242899,-5.644091,4.253453,4.065391,3.920008,0.675210,8.130546,-7.113486,0.909103,5.683855,-5.837197,-9.233516,5.472405,1.913867,-1.062318,-0.835812,-9.157157,0.244941,-3.919286,8.864195,8.194662,-5.778773,7.468340,3.217939,5.259513,4.628442,-4.809005,-1.594672,-9.055453,-4.093711,8.657764,-2.363858,5.893768,5.315579,-5.817845,9.067696,0.739141,-2.888581,-7.582474,-9.065307,3.347577,-7.768641,0.002537,7.973891,-7.210251,0.807509,2.338354,4.051550,3.533841,-9.961730,7.026967,-7.659040,9.351086,8.282695,-1.842649,-2.032750,4.347428,-2.228918,2.516285,-5.835209,9.834851,-7.697822,0.545404,0.354989,-7.364268,-7.709616,9.329038,7.788103,-3.580873,-9.038908,-5.673162,-8.472569,4.807232,-2.938393,-1.485719,-3.959669,-6.818599,-6.994661,-3.921209,2.791573,9.799272,-5.920070,-8.122627,-5.318899,-8.003285,6.933347,8.753717,-2.721746,-6.932933,8.464564,2.717696,-5.662178,-1.012179,8.267966,-2.153271,-6.331676,5.843809,-1.438131,-0.272429,-0.593098,-3.941325,5.085914,4.339001,-1.033336,-0.666511,-4.894816,-3.428680,-5.316172,-4.812613,5.421707,-1.637485,-8.758248,6.975364,8.678276,7.488771,-7.993933,2.266613,5.977563,-7.741757,9.352707,-6.443900,-7.547034,-7.214705,2.252306,7.596996,-3.313622,-0.960593,6.196858,1.403777,9.791022,-7.950006,-8.996917,4.450815,-4.567704,-3.112890,1.881683,0.162911,2.464983,-8.315307,-2.115563,3.636055,8.347557,-9.462390,6.380833,8.235266,-7.757855,4.036817,5.988432,5.089346,-0.497824,8.936209,-4.987522,9.745903,1.472146,-3.966104,4.171183,-4.958852,-5.605103,9.217274,-6.263178,-7.986499,-6.366393,-0.764885,2.642030,6.951729,3.802706,7.792707,-4.953806,2.565845,-1.289827,4.791026,5.363971,-9.323969,-4.494529,-2.591724,-5.797467,-9.999204,-0.277327,-6.539328,-1.984066,2.042332,5.635255,4.680527,8.945332,6.627763,-9.589063,-4.638663,-6.310981,4.322714,-8.132721,9.038873,0.156819,-1.054082,-9.118062,7.362262,-1.198911,-3.900733,6.118017,4.327517,-0.588543,-4.266496,-6.641664,7.744625,0.297875,4.808728,-1.861837,-0.870437,-6.953063,6.015160,5.685550,6.694427,0.410396,5.613560,2.031806,3.469476,1.653602,4.328586,-6.789265,-8.209396,1.264766,-4.907223,8.910660,0.716410,4.677883,-3.291214,4.841239,-6.664283,-8.830226,0.268689,4.747352,8.097838,-4.211793,-2.055840,5.227264,-0.445464,-1.689800,-4.450480,4.950665,-9.118268,-9.734707,-7.337626,-9.915614,-4.820833,-1.864488,4.545519,0.906570,6.801813,4.803764,-9.367186,-7.877640,4.053908,4.685578,-9.008825,-5.991607,6.477870,-5.905413,-5.600191,3.945520,0.976259,2.286468,0.554289,6.754543,-7.383654,-8.877761,-9.222990,-4.163680,5.284015,4.393823,-3.579351,-9.444975,2.628806,8.507337,-4.623334,-1.049200,7.201067,-7.918071,-2.673009,2.676637,-2.011815,-7.788908,-2.267308,-8.279429,-2.544279,-4.223283,0.329872,8.822442,4.686545,5.437847,9.257048,5.237416,6.628023,4.695075,2.969298,-0.089340,-0.827500,-4.128653,7.699274,-1.956569,0.395544,4.067384,-0.296434,3.263660,2.411497,3.780638,-5.176166,1.331157,-8.512651,-2.858323,3.881658,0.560384,4.129573,2.523761,-1.880155,-8.504939,-7.144153,9.932661,-2.226034,-5.913804,8.886088,-4.949284,-0.543599,9.412461,-9.111859,-9.649444,-0.476377,9.367052,-8.953423,4.806978,3.398505,-2.115134,1.742840,-3.394328,-6.689848,4.676950,-8.378094,7.314201,-0.681509,8.267118,-6.957279,-7.241448,4.292928,-7.554392,-0.119045,-3.140644,-3.439698,0.255275,-4.592381,1.673582,-2.509732,-3.578128,7.411810,5.653795,-2.724814,-3.128527,7.346133,-3.357135,5.033965,-6.204190,-3.086346,0.141656,2.021963,-0.026574,-0.298133,-7.224389,-9.575440,2.699304,-6.650956,6.234350,9.790321,-4.861098,7.730865,4.912508,4.172950,-9.879136,-0.060605,-3.623724,9.438568,-3.340379,3.927422,-3.508566,7.931514,2.750067,2.810852,9.404092,-8.657295,4.247505,-4.171671,-4.426461,-0.973669,9.771888,-9.221478,-4.195645,-2.291037,1.930768,7.079542,9.356155,3.676573,-4.487524,-1.323303,3.624546,2.033879,-8.122865,4.585665,-0.441189,3.568983,8.846105,3.778518,7.002378,-9.747931,2.859551,0.594348,-7.919238,5.777814,1.908205,-5.595772,7.165886,4.706674,1.802188,-1.899935,-8.045704,0.435143,-1.872699,5.808243,-5.808294,-3.756354,1.658548,3.564567,7.634868,-3.249387,-7.508066,6.466163,4.283922,2.238353,-1.971834,-6.835391,1.335983,-8.105958,-6.348684,-3.538532,3.195792,3.535566,-5.050190,-6.495830,5.879812,-3.742087,-7.630353,8.933098,-3.907359,-1.371264,6.768564,7.333210,9.900370,-7.064525,8.826657,-9.400996,7.637427,6.235746,-7.329974,7.727888,-9.816521,4.816990,-9.645175,-0.531571,3.249284,9.133178,4.192348,-2.700084,-1.448168,2.193015,5.836137,-3.374592,5.297059,-6.546705,6.398341,1.511270,4.639420,-4.081843,-1.265208,-7.041005,-7.146148,-3.849744,-4.704380,-2.317470,0.550048,-8.174630,2.950213,4.861364,-0.811006,3.672274,-9.760804,7.525940,0.264094,3.501051,9.002203,-9.603020,7.825821,8.992252,2.625796,-7.677935,2.806046,6.327872,1.918458,5.621058,-5.427127,9.274925,-3.348353,-4.589888,0.082074,0.940652,7.681412,-1.185724,-0.962829,-9.813501,0.401055,-4.047879,4.729426,1.995207,-9.750893,-3.492559,0.935936,5.714847,-5.271139,-9.242766,6.278173,-0.806473,4.751290,3.967896,4.931152,2.573078,-4.631096,3.686383,9.871880,-6.567690,-8.970541,-9.574324,4.335929,4.836513,4.587412,3.654507,2.014994,4.133459,-0.347586,-4.197916,-2.662535,-8.213174,6.518166,-8.010227,-0.763656,-1.569141,5.304596,0.740787,9.535011,-9.326707,-1.575231,9.014167,-3.330505,-7.389834,-5.831451,-1.430254,-0.075262,6.942433,-1.953777,-7.718854,9.202268,2.174691,8.269748,4.206639,9.970638,0.047177,9.911509,5.389404,3.949689,-5.104182,-9.583666,-0.504069,9.560901,-9.277337,0.667839,-6.144941,-5.930669,3.180672,-3.051804,-0.807706,-4.112143,3.430689,-9.606463,5.891662,-5.656824,7.349514,-3.960032,1.113314,-5.193514,-2.033844,-1.248645,-5.705470,-3.340069,-0.210038,-5.720499,3.238083,-5.714355,-0.003741,6.317360,-6.652252,8.120108,5.864296,7.412047,7.787581,-7.518495,0.786984,-9.910616,5.724100,6.010290,-6.213653,-1.024759,9.191734,-2.499464,-8.998232,9.476424,-4.844860,-4.113077,0.565249,-0.838645,1.997738,-6.612094,-4.995312,-6.225273,9.371744,0.920175,5.868567,0.285902,4.389153,-3.613679,-4.819606,-2.485485,-4.594922,-8.714376,1.930597,-1.055089,0.966972,1.799446,-4.306284,-6.058749,-8.796838,3.738920,9.161946,-2.352544,-2.798806,-8.835304,-3.234659,6.383180,-2.589680,-0.308412,4.396858,-5.099969,0.513805,-9.140498,-7.918714,-2.728238,-6.002214,-3.465685,-2.901390,-2.527703,-4.125951,5.621620,-7.065834,5.500838,-2.735237,-3.546540,2.277631,8.031733,-1.182168,-8.649398,-2.890459,8.951676,-4.413633,-7.758548,-4.769753,1.502449,-0.899232,-4.825171,-3.887935,0.034988,0.112276,-3.958766,-5.259063,-6.291532,9.549055,4.583390,7.109002,-6.409137,2.928977,-9.997299,-3.624921,-6.910615,8.360064,2.837372,-8.762167,-1.807684,-3.534430,-4.838146,-8.324793,0.845104,9.559020,2.666795,-4.609828,-0.409323,5.052147,2.355560,0.121800,-2.376705,-4.722891,-6.575611,-0.899378,5.501076,0.535946,3.343993,-9.492070,9.784539,-5.415560,-7.612772,-9.861669,-4.112735,5.855098,7.259339,9.696383,3.116148,2.826413,-8.384584,3.431455,-5.676781,-0.139741,-5.427459,7.956064,-6.423469,6.841440,-9.222469,-3.729469,5.481387,-3.075102,-0.343728,-4.584953,-9.804703,9.883200,8.474564,-3.431571,7.804130,5.940769,6.137358,2.066964,-6.485034,-4.008000,-9.147407,8.450047,-0.803555,8.599871,3.065426,8.475502,7.918697,3.252741,0.697740,5.711283,-0.614302,-3.134834,0.652314,9.202683,-7.074872,-7.781922,-6.018964,-1.216235,4.168312,5.530199,7.726054,-4.851036,4.197543,9.258199,1.371497,1.819883,-2.416088,5.141909,6.161380,2.814630,-8.857381,4.491188,-4.914593,-7.940429,3.958247,-2.556645,-3.723029,6.435550,-8.623423,-1.622256,3.286853,2.749772,0.086591,0.973715,-9.337255,4.605536,-5.447791,8.763913,-4.608807,0.867445,-4.040464,7.655422,-5.340880,-5.764243,5.777967,3.510213,8.657352,-6.130821,8.870579,4.582645,3.530736,6.237592,7.086449,-3.117319,-6.579391,8.624996,0.222441,1.363488,-8.174845,9.799439,-8.017584,-2.688255,7.295104,-5.233215,0.989444,-6.767351,-7.921183,-4.867414,1.028488,-1.357089,-6.385414,-0.717473,-5.996044,-8.284889,2.554566,-9.112248,-1.473010,8.581406,-9.720295,-5.520706,-2.938548,-0.371938,-8.721804,-3.669083,6.918169,1.732243,7.158999,9.402027,0.016484,-1.199919,1.011902,-1.336637,7.292262,-4.726337,-9.325791,9.604360,7.072260,5.685743,7.455913,5.255340,-0.205010,-2.365202,-0.782297,4.850125,8.681829,8.335835,0.577471,-1.586142,3.855031,-2.577225,-0.856254,-4.897413,3.308708,2.795559,-4.481427,5.237820,-7.288364,-8.587971,0.718009,-4.996007,5.551871,-3.854902,-8.659439,8.121589,6.678154,4.345843,-6.814621,1.004071,7.597952,-8.770088,-5.284208,6.717967,6.722180,7.123963,2.271490,-4.027358,2.892850,1.941385,9.808464,-7.831063,-7.491318,-1.167155,2.438869,-5.783854,6.503472,-4.395667,-3.031611,-4.469672,1.488466,1.079315,2.401706,3.494426,-3.302327,-8.204742,-8.851855,-5.203374,-0.958378,9.906342,-7.461691,4.668453,-7.143486,2.254253,6.930079,-4.103986,-9.134640,0.022813,1.292281,-5.337833,-4.076428,-0.934271,0.505472,7.780562,0.959218,-8.390629,2.098341,9.804773,3.401694,-0.236044,-5.641688,-7.322036,-1.669885,2.810924,-7.253805,5.589646,-1.088279,7.832838,-0.269189,-9.622447,6.891775,-1.586666,-3.795061,-4.454421,-9.557247,-1.412054,-8.352845,0.099771,-4.582058,-7.640686,1.271003,0.802496,1.079142,3.879568,-5.298392,-6.079692,-2.267522,-6.322108,-4.120173,4.069301,3.007387,-1.820652,-7.765074,7.209225,-9.046727,4.607681,6.447566,1.436494,-7.726192,0.233039,-4.565394,-9.693070,-6.592161,7.037230,-9.472288,6.505371,-0.837111,7.081049,-6.730355,-8.772231,-1.206020,-6.717787,-2.342657,0.338613,-4.047182,6.840719,-8.569520,-7.096632,-2.679176,8.814187,-2.121856,9.185042,-0.835611,5.621942,8.314354,3.396168,5.551867,0.359403,-3.181987,-6.505085,9.341666,8.262461,-5.484333,-3.359190,-7.542795,0.455797,7.364849], dtype = "float32")#candidate|3724|(1248,)|const|float32
call_3723 = relay.TupleGetItem(func_1268_call(relay.reshape(const_3724.astype('float32'), [13, 12, 8])), 0)
call_3725 = relay.TupleGetItem(func_1271_call(relay.reshape(const_3724.astype('float32'), [13, 12, 8])), 0)
output = relay.Tuple([bop_3716,call_3723,const_3724,])
output2 = relay.Tuple([bop_3716,call_3725,const_3724,])
func_3732 = relay.Function([var_3714,var_3715,], output)
mod['func_3732'] = func_3732
mod = relay.transform.InferType()(mod)
var_3733 = relay.var("var_3733", dtype = "float64", shape = (5, 3, 8))#candidate|3733|(5, 3, 8)|var|float64
var_3734 = relay.var("var_3734", dtype = "float64", shape = (5, 3, 8))#candidate|3734|(5, 3, 8)|var|float64
output = func_3732(var_3733,var_3734,)
func_3735 = relay.Function([var_3733,var_3734,], output)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4022 = relay.var("var_4022", dtype = "int64", shape = (2, 4, 5))#candidate|4022|(2, 4, 5)|var|int64
const_4023 = relay.const([[[-7,10,-5,-10,5],[2,2,5,-1,8],[-10,8,7,-9,-10],[-10,9,3,-1,6]],[[-4,-2,-10,-2,1],[-3,-4,-3,1,-1],[-6,-9,1,10,-7],[-9,-5,-9,-7,6]]], dtype = "int64")#candidate|4023|(2, 4, 5)|const|int64
bop_4024 = relay.multiply(var_4022.astype('int64'), relay.reshape(const_4023.astype('int64'), relay.shape_of(var_4022))) # shape=(2, 4, 5)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
var_4037 = relay.var("var_4037", dtype = "float64", shape = (120,))#candidate|4037|(120,)|var|float64
call_4036 = relay.TupleGetItem(func_3732_call(relay.reshape(var_4037.astype('float64'), [5, 3, 8]), relay.reshape(var_4037.astype('float64'), [5, 3, 8]), ), 1)
call_4038 = relay.TupleGetItem(func_3735_call(relay.reshape(var_4037.astype('float64'), [5, 3, 8]), relay.reshape(var_4037.astype('float64'), [5, 3, 8]), ), 1)
func_2351_call = mod.get_global_var('func_2351')
func_2356_call = mutated_mod.get_global_var('func_2356')
var_4041 = relay.var("var_4041", dtype = "float32", shape = ())#candidate|4041|()|var|float32
var_4042 = relay.var("var_4042", dtype = "float32", shape = (845,))#candidate|4042|(845,)|var|float32
const_4043 = relay.const([[-2.673903],[1.268293],[-8.378035],[7.814809],[7.606585],[2.585852],[-9.118337],[-2.132225],[1.043184],[-3.254378],[5.797105],[6.587480],[3.304268],[-8.799340],[-1.873293],[5.213105],[-3.198039],[4.053078],[9.904894],[-5.075522],[5.382682],[-0.922102],[1.915294],[-8.968053],[-9.351971],[2.541936],[-6.671430],[-5.632727],[4.890557],[7.871635],[8.816782],[-1.189413],[5.697808],[-7.990454],[-3.946525],[0.711751],[-0.465244],[-4.422783],[4.121706],[-3.574408],[5.614114],[0.614217],[0.279730],[2.837521],[-8.080407],[-9.287090],[3.175218],[2.757857],[-6.284422],[-1.788966],[-7.781567],[1.804703],[6.097036],[2.551852],[-6.021884],[-2.431643],[4.273774],[1.668506],[6.607578],[0.873415],[-7.012536],[-4.879642],[8.806149],[-8.658539],[0.277950],[-5.976808],[3.621327],[3.307747],[6.458554],[8.999231],[-7.626878],[8.110153],[4.932401],[-6.881360],[-2.003158],[-2.636805],[-5.421794],[-0.369682],[-2.423732],[1.481904],[7.388390],[7.207915],[5.980492],[0.085115],[9.686891],[8.666538],[-2.608091],[9.188208],[8.128686],[5.329899],[-0.742885],[-4.657383],[-2.465992],[-9.547796],[-2.297665],[-0.058604],[7.549891],[-9.335776],[-3.934390],[-4.101220],[-3.997803],[-3.911407],[-3.143133],[-1.907406],[9.380271],[5.876877],[8.805648],[-7.938368],[3.306255],[-1.671934],[5.314870],[9.480256],[-0.730966],[8.411788],[-4.523173],[8.265101],[0.735698],[5.941673],[9.914842],[-7.485092],[7.696477],[-2.992258],[5.921210],[-5.679977],[0.917390],[-9.059493],[-5.208426],[-0.169655],[6.790142],[4.016489],[3.105729],[-2.931519],[-3.821467],[-7.327253],[5.000793],[5.087643],[2.242286],[3.313154],[-3.025881],[8.411602],[-1.531055],[-5.372996],[8.811606],[-3.043693],[8.627281],[-7.081244],[-7.438315],[2.076229],[0.319698],[-7.877316],[-5.572641],[0.533667],[-2.884500],[9.661126],[4.157376],[-5.682299],[-1.169097],[-4.396052],[5.498805],[4.423164],[-9.110761],[9.859707],[-8.554394],[-2.288675],[4.614290],[8.562206],[-4.855013],[1.854530],[3.320752],[2.247621],[4.384897],[7.500709],[5.466569],[8.080729],[-3.045509],[0.331688],[1.788343],[7.417174],[1.668920],[5.644622],[-0.451465],[7.581672],[0.513411],[1.394219],[4.045073],[6.811723],[1.803466],[-7.410351],[-8.230841],[5.320188],[-9.814252],[-6.010387],[-5.789319],[-5.164791],[6.697365],[-9.692545],[-9.453540],[-7.321532],[-2.893372],[-6.472787],[-8.026578],[-5.613556],[-1.752124],[-5.016706],[-8.852594],[1.820011],[-1.528455],[-2.444125],[8.558481],[6.652125],[-8.997709],[2.096401],[6.890180],[7.155851],[8.181050],[4.025880],[6.841593],[8.048979],[-2.600128],[9.512747],[-4.359390],[-5.490953],[-1.823483],[6.137851],[4.341219],[-5.307437],[-6.406277],[-8.705081],[9.588452],[0.167678],[2.665678],[-2.757584],[-8.898009],[4.261272],[-0.534506],[4.571468],[1.754374],[9.140836],[5.340669],[-9.910188],[2.736476],[-5.532623],[-6.174956],[4.969188],[-9.786932],[-1.956204],[1.963923],[1.225400],[6.612629],[2.835251],[2.285986],[-2.880852],[-6.266063],[-7.690178],[-9.510192],[-6.473991],[7.614616],[8.682844],[5.149417],[6.127966],[6.893121],[1.018501],[-7.475666],[-5.610383],[0.487434],[2.348560],[-4.644612],[-1.183897],[-1.925482],[-6.098688],[2.884900],[-4.030594],[-2.658438],[-5.321541],[4.431586],[9.745846],[2.440572],[3.829686],[0.339965],[2.873435],[9.039100],[1.991564],[-3.639126],[-5.087347],[-4.192890],[7.334227],[9.506644],[-9.669317],[8.894929],[1.932649],[-8.129967],[7.975315],[-7.464437],[-2.972368],[-7.790653],[-2.124479],[-1.091945],[-2.966829],[8.732133],[4.051776],[6.449289],[2.582271],[7.427356],[-2.572350],[-5.563522],[8.271650],[5.226196],[8.353660],[3.619029],[3.479827],[4.917656],[-5.888130],[-3.381445],[0.827300],[7.232696],[9.467783],[9.554816],[-2.322084],[6.322744],[-9.145444],[-4.948285],[-6.652188],[-0.118596],[7.388033],[0.633468],[-6.066621],[8.291479],[9.050303],[0.272048],[7.336494],[6.098993],[5.211697],[-5.929426],[2.343938],[6.555704],[7.763760],[7.678132],[7.392812],[4.617430],[-1.632271],[0.022538],[-7.392586],[0.387635],[-1.398567],[-4.788636],[9.836295],[0.808505],[-7.520715],[-9.218412],[2.868229],[2.932351],[-9.726394],[-5.065905],[5.233431],[-4.026224],[5.022253],[-4.771186],[-2.342807],[5.077958],[-1.964331],[1.830108],[0.227600],[-7.322920],[-7.608185],[-2.806642],[-9.435870],[-5.395423],[-9.021125],[-5.969673],[6.564336],[6.108036],[0.238622],[-3.164978],[7.798883],[-9.351906],[4.739238],[-8.757457],[-1.988857],[-5.626302],[0.100190],[-2.767272],[7.222402],[-3.140095],[-8.415943],[6.395791],[-1.227012],[-1.083586],[-0.565397],[6.115889],[-7.941844],[7.724994],[9.638565],[-6.488570],[-1.183164],[-0.613888],[8.243943],[-5.546039],[-7.995635],[5.587935],[1.632115],[-7.497589],[5.755222],[3.138759],[3.125947],[-5.716533],[4.026726],[5.703284],[7.652664],[-0.281767],[-4.679647],[2.193080],[-9.036053],[-3.952123],[4.050982],[0.936070],[-1.201538],[-2.048651],[-1.445216],[5.311918],[-2.826685],[2.028828],[4.024757],[7.506837],[-5.057370],[0.159901],[-9.931257],[4.199693],[-3.475119],[8.850871],[2.605303],[-3.893421],[-6.515363],[2.499272],[8.326042],[-8.586040],[-4.564505],[1.307164],[-8.178092],[-4.541009],[-2.892901],[-3.350991],[9.599220],[7.311503],[4.563206],[8.199374],[2.652747],[7.615885],[-2.601715],[-5.318678],[1.016913],[3.585306],[-3.005921],[-4.771321],[4.982373],[-3.278865],[-2.693402],[1.699442],[-1.749605],[4.195713],[8.651724],[-0.165526],[-8.576614],[8.536673],[-6.430257],[-7.781912],[-3.969770],[-1.072027],[-0.083242],[-2.832591],[7.935201],[-0.511257],[2.906884],[9.922200],[-2.481092],[5.037428],[8.648954],[6.463737],[9.941699],[-4.829370],[-6.251765],[-4.824701],[1.359315],[-7.841955],[3.066526],[0.689003],[8.719704],[-6.078137],[3.837807],[-1.501115],[-1.993115],[-9.914186],[9.996284],[5.111724],[-8.209401],[-8.618132],[4.424106],[4.821061],[9.637607],[-4.794755],[-2.698354],[-1.729283],[8.661138],[-5.505783],[-7.601953],[1.528139],[8.114632],[4.696029],[7.593050],[5.343239],[-2.637928],[-2.451427],[-4.393325],[-6.973734],[6.963889],[-7.340063],[5.085488],[9.766680],[1.097365],[9.010936],[-5.619636],[-6.420520],[-1.152804],[-1.140458],[0.144978],[5.599473],[-3.109509],[9.115694],[-5.928535],[-8.114018],[-4.681878],[0.181399],[5.865009],[3.614807],[6.495042],[1.888535],[0.580403],[0.048002],[0.203686],[7.818946],[1.461991],[-6.532568],[-2.845219],[4.414568],[-1.071849],[6.377041],[-7.332651],[-4.040469],[2.041155],[6.302115],[-4.281485],[7.386929],[-0.405515],[-5.896684],[-5.148602],[-0.242044],[-6.270401],[0.011026],[-1.201701],[9.805269],[7.363126],[-6.091709],[-9.782296],[1.887290],[-6.124913],[-8.346558],[1.472611],[-7.352573],[-7.720112],[9.954266],[-0.447135],[-6.802030],[4.845835],[6.279144],[-8.413399],[-9.364568],[5.306490],[-5.544913],[5.614231],[-4.024270],[-8.047693],[-3.621000],[-2.233360],[6.034151],[8.593258],[0.605452],[3.456102],[4.891747],[-9.504206],[-2.396203],[4.979161],[-4.518472],[0.680280],[-3.968994],[-6.648409],[-5.636262],[6.077380],[9.303217],[3.325561],[-7.310138],[5.330413],[-1.914446],[-9.281585],[4.672944],[6.078915],[2.133324],[-4.527778],[3.981298],[-2.589720],[-8.186580],[-3.554178],[5.241917],[-5.235214],[3.462205],[-7.563108],[-0.521075],[-3.931088],[-0.531955],[-5.656737],[0.578471],[5.896406],[8.903523],[-1.087864],[-1.605819],[-2.966189],[5.316696],[6.983930],[4.240780],[5.264530],[-7.505503],[-2.035808],[-1.462947],[6.890924],[3.675384],[-8.828941],[7.385599],[-2.150926],[-4.121739],[-3.196885],[2.543675],[5.218277],[7.295276],[-8.207382],[-7.600224],[-2.462014],[2.765436],[-4.613657],[6.887231],[-7.608684],[0.926097],[0.886921],[-5.502214],[4.588191],[-1.645744],[7.218730],[9.032512],[-5.619882],[-4.413768],[8.578218],[1.798729],[7.145101],[-9.229845],[-7.332383],[6.793791],[4.894387],[2.099497],[-3.729187],[-0.409522],[-1.638196],[2.841597],[-2.577935],[8.382205],[6.745153],[7.854545],[-5.778824],[-6.711332],[5.730580],[3.823038],[-3.657466],[-6.955136],[-9.667350],[-4.493283],[-9.563657],[-3.028740],[4.856820],[-8.753070],[-3.850730],[9.965200],[7.080906],[-4.183517],[6.976736],[3.117001],[-4.936298],[-2.553056],[-9.247282],[-7.044574],[-7.136601],[2.848300],[1.931490],[-2.917556],[0.054315],[-8.182041],[-7.857385],[2.830669],[5.604719],[5.293682],[6.805761],[6.692115],[-1.903483],[-5.359105],[9.854286],[3.030541],[-9.188343],[-7.133380],[-3.322277],[-4.332963],[8.141442],[-1.051768],[-4.049402],[-2.809157],[9.044036]], dtype = "float32")#candidate|4043|(720, 1)|const|float32
call_4040 = relay.TupleGetItem(func_2351_call(relay.reshape(var_4041.astype('float32'), []), relay.reshape(var_4042.astype('float32'), [13, 13, 5]), relay.reshape(const_4043.astype('float32'), [720,]), relay.reshape(call_4036.astype('float32'), [8, 156]), ), 2)
call_4044 = relay.TupleGetItem(func_2356_call(relay.reshape(var_4041.astype('float32'), []), relay.reshape(var_4042.astype('float32'), [13, 13, 5]), relay.reshape(const_4043.astype('float32'), [720,]), relay.reshape(call_4036.astype('float32'), [8, 156]), ), 2)
output = relay.Tuple([bop_4024,call_4036,var_4037,call_4040,var_4041,var_4042,const_4043,])
output2 = relay.Tuple([bop_4024,call_4038,var_4037,call_4044,var_4041,var_4042,const_4043,])
func_4059 = relay.Function([var_4022,var_4037,var_4041,var_4042,], output)
mod['func_4059'] = func_4059
mod = relay.transform.InferType()(mod)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4059_call = mutated_mod.get_global_var('func_4059')
var_4061 = relay.var("var_4061", dtype = "int64", shape = (2, 4, 5))#candidate|4061|(2, 4, 5)|var|int64
var_4062 = relay.var("var_4062", dtype = "float64", shape = (120,))#candidate|4062|(120,)|var|float64
var_4063 = relay.var("var_4063", dtype = "float32", shape = ())#candidate|4063|()|var|float32
var_4064 = relay.var("var_4064", dtype = "float32", shape = (845,))#candidate|4064|(845,)|var|float32
call_4060 = func_4059_call(var_4061,var_4062,var_4063,var_4064,)
output = call_4060
func_4065 = relay.Function([var_4061,var_4062,var_4063,var_4064,], output)
mutated_mod['func_4065'] = func_4065
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4107 = relay.const([[[False,False,True,False,False,True,True,True,True,True,False,False,True]],[[True,False,True,True,True,True,False,True,False,False,True,True,True]],[[False,True,False,False,True,False,False,False,False,True,True,True,False]],[[False,False,False,True,False,True,True,True,False,False,False,True,True]],[[True,True,False,False,False,True,True,False,True,False,False,False,True]],[[False,True,False,True,True,True,False,True,False,False,False,True,True]],[[False,True,False,True,False,True,False,False,True,True,True,True,True]],[[True,True,False,True,False,False,False,True,False,True,False,False,False]],[[False,False,False,True,True,False,False,True,False,False,False,False,False]],[[False,True,False,True,True,True,False,True,False,True,True,False,False]]], dtype = "bool")#candidate|4107|(10, 1, 13)|const|bool
var_4108 = relay.var("var_4108", dtype = "bool", shape = (10, 4, 13))#candidate|4108|(10, 4, 13)|var|bool
bop_4109 = relay.logical_and(const_4107.astype('bool'), var_4108.astype('bool')) # shape=(10, 4, 13)
func_2270_call = mod.get_global_var('func_2270')
func_2274_call = mutated_mod.get_global_var('func_2274')
const_4125 = relay.const([10,-1,-6,-9,1,-6,-8,7,-4,8,3,9,-3,-1,-1,8,4,8,-4,-2,-6,-9,-5,-10,5,1,7,6,-5,3,-1,-1,-10,4,-8,1,5,8,8,10,-8,-9,-3,7,6,-5,-10,-2,7,-6,-4,-9,-9,-10,-7,-10,3,1,6,3,-7,9,-7,8,8,-9,1,3,4,-6,-4,-7,-6,1,6,6,-4,-9,-7,-5,10,-9,-1,-10,-4,8,-3,-6,-3,2,3,-3,6,-10,-8,8,-10,-7,-7,-5,-3,2,-10,-6,-5,2,-8,-5,-6,7,-9,-10,-4,-9,5,-6,9,-4,-4,1,1,-9,8,-5,-10,-6,9,-7,4,4,2,-10,7,9,6,-3,1,6,-8,4,5,-7,8,7,-2,3,-10,6,-9,-9,2,2,5,-5,-10,9,8,10,-1,-8,-8,8,6,-5,8,-1,-7,-6,-2,-5,9,-10,1,-3,-8,7,3,-6,-1,5,-7,10,9,8,6,-6,7,-9,7,-3,4,1,-9,-8,7,10,10,-10,7,-2,1,-5,5,9,8,5,3,-9,2,-5,-1,-3,-6,-1,2,5,1,-2,-3,-8,-4,-3,8,9,7,9,8,10,8,6,-5,1,-10,2,-5,-6,-3,6,-1,3,1,-8,7,-5,-9,3,4,10,1,9,2,7,-6,-9,9,7,-6,-9,2,8,-4,5,-6,-2,-7,-5,8,-4,-4,-1,5,-3,2,-5,-3,-8,-3,3,-8,-8,-7,1,4,10,-8,-1,1,-5,-3,9,-1,-2,-10,8,1,-2,-9,-4,10,-1,6,-3,-5,2,-7,5,-10,4,6,-7,-8,-5,-3,1,2,-4,-5,5,-5,1,8,2,5,-9,8,9,-6,-4,-5,4,9,8,-5,6,-10,2,5,7,9,-2,-3,-6,5,-7,7,8,9,9,-8,6,4,-7,1,8,1,1,-10,2,7,6,3,1,9,-10,7,-5,3,9,-8,-5,8,3,-3,5,-6,-7,4,-5,-7,10,-8,-6,-6,6,-3,-3,9,3,10,-5,9,-9,7,6,6,10,10,6,1,10,-5,9,8,7,7,6,3,9,-9,5,-2,1,3,7,-1,9,9,-3,9,-7,-1,4,-10,5,-9,-5,7,2,3,-3,-8,4,10,4,-7,-8,6,4,7,3,10,-9,-2,-5,2,-3,10,-8,3,4,3,-10,-5,2,2,8,-3,-10,-9,4,-3,-2,4,-7,-1,7,-4,2,-1,-9,-2,-6,-7,-2,1,8,2,-1,1,3,1,-4,9,2,10,3,-2,7,-7,-8,6,4,-7,2,3,7,-7,8,-9,-6,-6,3,9,-9,-10,5,-2,-3,6,-8,3,4,8,-8,6,8,-2,-2,-10,9,10,7,5,-5,-9,9,-8,-4,6,-5,-3,-4,3,-7,-1,-6,-10,-4,-5,5,2,6,6,-6,1,5,-4,10,-9,10,-3,10,9,10,5,-8,7,6,-3,8,-4,9,-3,5,9,-1,-4,-8,7,9,-3,-10,10,-6,10,8,-6,-4,-9,1,6,10,3,5,8,-3,-8,1,-8,-10,10,2,6,-5,5,-2,-7,1,4,9,7,-3,4,-2,3,-1,-1,-9,9,1,-9,6,-7,6,-2,-3,7,-5,-2,-5,10,-7,1,9,1,5,-5,8,8,5,-8,-1,6,8,-7,-4,1,10,-9,-1,1,4,6,7,-7,6,-1,-2,4,-5,-5,10,2,7,10,-4,3,-4,2,-5,-4,-6,-7,-9,10,-6,5,-2,-7,-8,4,-8,10,8,-3,-2,-3,1,-7,-4,6,-4,5,8,5,-9,-8,8,8,1,-10,-10,1,6,4,5,-10,-3,-6,-9,8,10,6,5,5,-7,1,9,-9,-10,-2,4,-5,-1,1,2,7,-5,-9,6,10,-8,-1,5,-9,-4,1,7,7,10,7,7,-3,6,7,-5,-5,10,-9,5,-1,1,9,1,-3,3,-3,3,-5,8,-2,10,6,-5,-6,-1,1,2,-9,5,-6,-3,9,2,6,7,-3,-7,-7,-1,5,2,5,4,-9,-7,7,3,-7,-1,7,3,5,8,-6,-6,3,5,-4,-2,-9,-7,1,4,6,-3,5,10,9,5,7,4,-1,-5,-1,-9,8,-9,-7,8,-10,4,-6,7,-4,-1,-4,-10,6,-2,-4,9,7,2,-1,-5,1,4,6,5,6,1,-10,6,6,-5,9,6,-10,-9,-9,1,8,9,9,-3,9,4,5,-9,8,-5,8,2,-10,-10,-7,-10,6,-8,3,-9,-7,4,-3,-5,7,-7,-1,-4,9,-1,2,-3,1,5,-5,8,9,4,-5,4,-10,6,7,-2,3,-7,5,7,-5,1,9,2,1,2,6,9,-5,9,8,-2,-5,8,-1,7,7,6,9,-4,5,-8,1,10,6,-10,1,5,-1,7,8,-9,-5,-1,-4,-5,-2,-1,2,-9,-1,3,10,-7,3,-6,1,5,10,-8,-2,3,-6,7,8,-6,-4,8,-1,7,-10,-2,-8,-4,-5,-3,5,-1,2,9,-3,-6,8,-2,-10,2,4,8,-2,-2,-7,4,-3,-3,2,-5,-10,3,-7,-6,6,5,-1,1,7,8,10,-8,-6,8,-4,4,-5,2,10,7,4,-5,6,8,-3,9,-10,-6,7,-4,-8,5,-5,-3,2,2,-1,3,-5,1,7,9,7,4,3,5,8,5,6,10,-8,-6,-7,8,-9,-10,-1,4,6,1,9,1,7,-1,-3,-1,-1,-4,3,2,3,8,3,-3,1,-8,-10,-8,-6,10,-9,-2,5,1,-8,-1,5,8,-5,-8,-2,9,-7,1,-7,3,-1,6,-1,-7,2,-3,-1,-6,9,-3,10,7,10,-3,8,-10,-10,-6,-5,-1,10,3,-2,-8,-3,-4,-4,4,-8,8,2,-4,6,3,-2,8,8,-5,-2,-3,-5,-2,7,-2,1,-10,10,5,-7,-7,5,-5,9,-7,-5,8,9,-1,-5,3,5,-1,1,-8,6,-7,3,8,-4,-2,7,-8,-1,-5,4,-2,-3,-1,-9,-3,6,-8,2,10,-2,4,4,6,-5,-10,10,5,7,6,-6,-10,8,3,5,9,-6,7,-7,3,-5,-10,-7,6,2,9,-2,-2,9,4,1,-3,6,-6,2,-4,6,-10,8,6,-10,8,6,-4,-9,10,2,6,-3,1,-6,2,9,-5,-10,5,-8,3,6,10,8,5,5,-7,6,4,3,3,8,8,-1,-9,7,4,9,-9,7,-6,5,-3,-1,2,4,7,3,1,10,2,10,-3,1,-6,5,-3,5,-3,2,2,1,10,-5,-10,9,-4,-10,-9,-8,9,7,6,-7,-8,-2,-7,-10,-9,-7,1,2,6,2,-5,10,-6,6,-9,-8,-4,-9,-5,7,7,-4,-8,6,10,-9,8,9,-8,-5,9,-6,-4,-1,6,-5,-10,1,-7,3,-3,-2,-4,7,5,-1,-5,-7,-1,-8,-8,8,-1,-9,-4,-8,7,-1,1,4,-2,-2,1,-4,10,9,-2,-6,-6,3,-9,8,-3,8,-9,-9,9,-5,-3,-5,10,10,9,-7,3,4,3,8,2,-9,2,9,-1,4,-3,6,-2,-5,2,-5,-4,-7,-4,-4,-2,-5,-10,8,1,7,2,5,-10,5,4,1,3,-6,4,1,-10,-2,3,4,-3,-7,-6,9,5,-2,-5,7,-10,5,3,-9,6,-3,-1,-2,2,9,4,-4,3,-9,8,6,-1,9,9,-6,7,-4,10,3,7,-10,2,-3,-1,-3,10,-6,-10,-6,-2,2,4,10,-1,-6,8,1,-9,5,7,-8,7,10,10,4,10,3,-3,-10,9,5,3,5,2,-1,-8,-8,4,2,-5,5,-4,1,-3,-4,-8,-8,-6,-2,-5,-7,-5,-7,4,2,6,7,8,-9,-9,-1,-1,6,4,-4,-3,3,8,7,-1,-3,8,9,6,-5,1,1,-9,-9,-7,3,6,5,7,-7,-1,-7,10,5,6,-10,9,10,8,-10,-2,2,10,5,-1,6,-5,-3,3,-9,-9,7,-10,-4,6,-1,9,-10,5,6,8,-2,-7,5,4,-8,-5,-8,1,1,-8,-6,10,-5,1,-2,3,1,-8,1,-2,-2,-3,-10,-6,2,7,-2,5,-1,9,7,-7,4,-5,-5,4,-4,2,3,-6,2,4,10,1,6,-7,2,1,9,-2,5,-4,5,6,3,-3,-7,7,6,1,6,7,1,-5,-6,-7,-5,1,-6,-7,10,4,-7,-3,8,7,3,5,1,-4,-7,9,1,-1,8,-8,8,-4,-2,9,2,-8,-9,-8,-1,9,-3,-1,10,-5,-9,-5,-6,3,-7,-10,10,5,-10,-2,-5,-10,-1,7,4,10,-7,-2,5,3,-10,2,-10,1,-7,-3,-8,-5,6,10,3,3,4,-5,1,-2,10,4,10,1,10,2,-7,-7,-8,-10,7,-3,9,4,3,-4,10,2,-3,9,-7,1,9,-6,7,8,-1,6,6,-3,-6,1,-5,7,-5,1,-7,-5,-2,-3,-7,2,-1,-8,-10,7,8,-3,-2,10,5,9,-6,10,5,5,-6,10,7,6,8,3,-3,10,-5,3,2,5,8,5,9,-3,-7,4,-2,-1,-6,-8,-1,6,-9,-9,3,-10,-9,4,5,5,-2,-7,-9,-5,-5,6,1,3,3,2,5,-8,-9,4,-2,7,8,-10,-4,-6,10,-4,-5,3,-10,5,9,2,8,1,5,-5,3,3,-10,8,-2,1,1,7,-10,-9,-10,8,-6,-9,8,7,-1,1,-1,1,1,-3,9,6,-4,8,-7,-1,7,8,-4,-1,7,-6,10,4,-3,-6,8,-2,8,-6,8,9,-7,-3,2,-8,5,-7,-3,-6,7,9,-5,-8,10,-7,-3,-4,-3,-5,-10,-4,-7,7,2,-8,-7,-6,7,3,-10,-6,9,5,-6,7,-3,10,-3,-2,2,6,5,10,-6,9,-5,8,6,6,-6,-9,-3,9,-8,1,-8,-9,-10,7,2,-1,5,-1,-3,-3,9,7,3,-7,8,-10,6,-1,6,2,8,-7,3,3,6,-6,-10,-8,-1,-1,-5,-7,-10,-7,8,6,-3,8,2,3,-9,-2,3,9,7,5,3,-4,10,-9,3,6,-8,-3,8,-8,-4,-4,-2,-3,5,10,-7,10,6,-6,5,-6,-8,3,4,5,-4,6,-3,7,-4,5,1,-9,-5,7,-10,-2,1,-6,-9,-6,-1,-10,-1,10,4,-9,3,4,-6,7,-4,-6,-6,-4,5,-7,2,9,-6,1,8,-5,-9,-8,-9,-2,-6,2,3,7,5,4,-5,3], dtype = "uint32")#candidate|4125|(2016,)|const|uint32
call_4124 = relay.TupleGetItem(func_2270_call(relay.reshape(const_4125.astype('uint32'), [16, 9, 14]), relay.reshape(const_4125.astype('uint32'), [16, 9, 14]), ), 0)
call_4126 = relay.TupleGetItem(func_2274_call(relay.reshape(const_4125.astype('uint32'), [16, 9, 14]), relay.reshape(const_4125.astype('uint32'), [16, 9, 14]), ), 0)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
var_4133 = relay.var("var_4133", dtype = "float32", shape = (1248,))#candidate|4133|(1248,)|var|float32
call_4132 = relay.TupleGetItem(func_1268_call(relay.reshape(var_4133.astype('float32'), [13, 12, 8])), 0)
call_4134 = relay.TupleGetItem(func_1271_call(relay.reshape(var_4133.astype('float32'), [13, 12, 8])), 0)
output = relay.Tuple([bop_4109,call_4124,const_4125,call_4132,var_4133,])
output2 = relay.Tuple([bop_4109,call_4126,const_4125,call_4134,var_4133,])
func_4152 = relay.Function([var_4108,var_4133,], output)
mod['func_4152'] = func_4152
mod = relay.transform.InferType()(mod)
mutated_mod['func_4152'] = func_4152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4152_call = mutated_mod.get_global_var('func_4152')
var_4154 = relay.var("var_4154", dtype = "bool", shape = (10, 4, 13))#candidate|4154|(10, 4, 13)|var|bool
var_4155 = relay.var("var_4155", dtype = "float32", shape = (1248,))#candidate|4155|(1248,)|var|float32
call_4153 = func_4152_call(var_4154,var_4155,)
output = call_4153
func_4156 = relay.Function([var_4154,var_4155,], output)
mutated_mod['func_4156'] = func_4156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4763 = relay.var("var_4763", dtype = "float64", shape = (12, 13, 3))#candidate|4763|(12, 13, 3)|var|float64
uop_4764 = relay.atanh(var_4763.astype('float64')) # shape=(12, 13, 3)
func_1430_call = mod.get_global_var('func_1430')
func_1433_call = mutated_mod.get_global_var('func_1433')
const_4776 = relay.const([3,5,3,4,10,-1,-5,5,6,-10,-9,3,2,3,6,-3,-1,6,2,-7,5,-3,4,-2,9,1,-8,9,8,2,-7,2,3,9,2,-2,-6,7,-4,-10,10,2,6,2,3,-10,10,8,4,1,-5,-10,7,-9,-6,-5,-10,6,8,2,3,2,5,-9,9,-2,-4,-5,2,3,3,-6,-2,-9,-2,4,2,-9,7,-6,9,-9,2,3,8,-4,1,-3,4,-5,-4,4,-6,5,-2,-8,-8,-1,10,6,9,10,4,4,7,6,10,-1,2,10,4,-4,-4,5,-10,-4,5,-8,-7,-6,-4,10,-2,-10,7,-10,-7,-5,1,7,-3,10], dtype = "int64")#candidate|4776|(132,)|const|int64
call_4775 = relay.TupleGetItem(func_1430_call(relay.reshape(const_4776.astype('int64'), [11, 2, 6])), 0)
call_4777 = relay.TupleGetItem(func_1433_call(relay.reshape(const_4776.astype('int64'), [11, 2, 6])), 0)
output = relay.Tuple([uop_4764,call_4775,const_4776,])
output2 = relay.Tuple([uop_4764,call_4777,const_4776,])
func_4793 = relay.Function([var_4763,], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4794 = relay.var("var_4794", dtype = "float64", shape = (12, 13, 3))#candidate|4794|(12, 13, 3)|var|float64
func_4793_call = mutated_mod.get_global_var('func_4793')
call_4795 = func_4793_call(var_4794)
output = call_4795
func_4796 = relay.Function([var_4794], output)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5548 = relay.const([[[8,8,-4,8,-6,-8,-2,7,10,-6,-4,-9,-10,-6,-1],[-2,10,6,-1,-1,9,-7,8,6,9,-10,4,-4,10,-5],[4,-9,9,10,2,-8,-3,-6,8,-8,-6,2,10,4,7],[-1,9,9,7,-8,1,2,3,-6,9,-10,2,5,-9,2],[-10,-10,2,7,-7,8,2,-3,-9,-6,2,-5,9,8,1],[-5,-10,-2,-4,-2,7,-10,-4,-4,1,3,-9,8,8,-7],[6,4,6,-10,6,-3,4,1,-8,10,8,-3,-10,4,-8],[1,-2,-10,10,1,2,8,-9,3,-6,7,6,1,-2,6],[-8,4,1,-8,-5,-6,5,4,-6,1,2,8,-9,-4,5],[-3,-8,-1,-4,-9,-10,-8,10,8,1,-8,9,-10,4,-3],[7,-2,-4,1,3,-7,-4,9,8,-2,1,1,5,-10,9],[-9,-9,9,-5,-1,2,-3,-4,-4,2,-1,-3,2,-6,-8],[6,-1,-10,8,3,-6,-9,5,1,-8,-3,-5,3,-8,-10]],[[6,-6,10,-9,3,-10,-9,6,-4,3,-2,-3,5,-6,9],[-9,-3,3,-3,4,4,-3,-4,-9,7,-10,-8,-8,1,6],[-10,-4,-2,-8,9,8,-7,8,-1,-10,1,-9,-5,4,1],[-5,-6,5,5,-10,-5,-10,1,-4,7,1,3,6,7,3],[9,2,-6,3,2,8,4,-2,7,5,9,1,6,-2,-7],[-4,3,-2,-4,-2,8,6,9,-7,3,8,10,3,-7,10],[10,-10,9,-3,9,-9,-7,-9,2,-1,-7,-6,10,-2,6],[1,-5,8,5,7,9,10,-1,-2,-4,10,4,10,-7,1],[4,9,4,-3,1,4,-8,-7,5,3,-4,3,-9,2,-3],[9,-6,9,8,-3,-4,10,-3,-8,-6,-8,-4,-8,1,-8],[4,6,-8,2,-6,4,3,-9,-2,-5,-10,9,-3,6,9],[-10,3,-3,-8,-8,1,4,7,2,-2,8,-9,5,-5,6],[7,7,2,5,-6,-6,-5,2,-4,1,-9,-8,-7,-8,4]],[[-8,-10,4,-2,1,2,-6,-8,6,1,7,-8,10,-8,2],[4,6,3,-5,-9,-5,-6,7,-7,5,2,-2,7,-10,10],[-8,9,8,3,9,2,4,-2,9,6,1,-7,2,5,-10],[3,-1,1,-4,-5,-10,-6,-4,-7,-2,-8,-1,-6,-9,-5],[9,-9,10,-2,-6,-9,5,-1,6,3,-1,10,7,6,-8],[7,9,-10,5,5,-2,-10,-10,7,10,-3,-2,-2,-1,-7],[9,8,1,7,1,-9,-6,9,1,3,5,-10,-1,8,-3],[2,-8,-10,-8,6,8,-10,4,4,5,-7,-5,7,-1,1],[9,-8,2,7,4,7,7,-10,-7,8,-2,-2,4,-7,4],[1,-9,-2,6,1,3,5,7,2,-8,6,7,-8,-7,8],[-3,7,-7,-3,10,-2,-1,-2,-2,2,7,1,8,-7,-6],[-8,-5,3,8,4,9,9,-4,-10,-7,8,10,2,-3,-5],[-5,10,-10,9,-8,-5,10,10,-9,10,-1,-2,10,-3,2]]], dtype = "uint64")#candidate|5548|(3, 13, 15)|const|uint64
const_5549 = relay.const([[[-6,-2,1,4,4,6,-8,-3,-10,2,4,8,-2,9,5],[-7,9,5,-7,2,8,5,10,-6,10,6,1,-4,-6,-8],[1,3,7,1,-8,5,-8,-1,-8,-9,-9,6,10,3,-3],[8,-6,-5,8,5,7,-3,10,-5,2,-9,-8,1,5,5],[-4,-1,3,-3,9,8,-8,3,4,-8,-2,9,2,-10,-3],[4,-10,-8,-2,-6,9,-9,3,-4,-1,-5,-1,-5,-4,1],[-9,-7,-1,-4,5,6,-1,2,-6,-1,1,10,-10,-5,9],[2,-3,7,-3,7,-10,-4,7,-3,2,-1,-1,5,5,4],[5,10,-4,-2,-9,-4,3,9,4,4,-7,-1,4,-8,3],[1,-9,-8,1,9,-8,-10,-3,-10,1,4,-6,6,10,-9],[7,3,-4,-8,-10,6,2,-8,4,-3,-9,-3,-4,5,5],[9,7,-10,4,5,-7,-1,-6,3,6,-7,2,9,10,-2],[-1,9,-4,8,-8,-1,5,-3,2,3,9,2,-9,-9,-7]],[[6,-1,-6,7,-2,-1,10,-6,9,9,5,-3,3,-8,-2],[5,-2,4,-3,6,-6,10,-2,-10,-6,2,-9,8,8,-6],[10,-8,-10,-4,1,-8,-4,-4,-9,-7,3,6,-6,-8,10],[-3,-7,-5,-1,-10,9,-1,8,-1,-10,-2,8,9,-2,-8],[-2,5,2,-4,10,-7,-4,4,-6,1,-5,-10,-10,-9,-5],[7,8,7,-1,-2,7,-2,10,4,-2,1,-7,10,-2,-2],[-6,4,-8,-1,-4,-1,-4,1,-10,-1,2,-10,3,-8,9],[-1,8,6,-8,6,3,2,-2,-3,-10,3,-6,-2,-2,-5],[-10,-5,-4,4,-1,-8,8,4,-5,-2,-1,8,9,8,10],[-4,10,9,-4,9,-3,-2,7,3,-2,6,10,-1,-5,2],[-2,6,-8,7,-9,-9,-3,5,4,-9,-5,-10,-2,5,1],[1,-6,7,-3,7,-1,4,5,2,-1,8,10,10,2,-7],[5,-6,6,-6,-8,-1,-9,-2,6,6,7,-3,5,-8,1]],[[7,5,10,9,-10,-8,7,-6,2,5,1,-3,10,8,-4],[-5,-8,8,-2,3,-5,3,-8,3,2,9,1,-6,1,-10],[4,8,6,1,3,9,6,-8,-10,-6,8,-4,1,-1,-5],[-9,-6,4,-1,9,-10,1,-8,-10,-1,-1,-6,-7,6,-1],[-9,-1,-5,7,9,-1,-4,-4,-3,-1,3,-3,-6,7,-10],[-4,-7,4,-9,10,-8,-8,5,-5,6,-3,7,-9,-6,-4],[3,5,-2,-3,-1,10,6,-2,-9,1,2,-6,10,1,-2],[-2,4,6,-6,8,2,9,-7,2,7,-3,7,-7,7,-3],[-4,5,-2,-5,-9,-8,-4,-2,-7,8,6,-4,-1,10,-10],[6,-5,3,1,6,2,3,-10,-6,7,-10,5,6,4,3],[-8,-7,9,2,7,-10,-3,-4,5,-9,-3,-7,-10,4,10],[7,6,3,-3,3,-7,10,5,-3,5,-5,1,-9,-5,-7],[10,-5,10,-2,-4,-5,-10,-1,3,7,7,8,-4,-1,10]]], dtype = "uint64")#candidate|5549|(3, 13, 15)|const|uint64
bop_5550 = relay.logical_xor(const_5548.astype('uint64'), relay.reshape(const_5549.astype('uint64'), relay.shape_of(const_5548))) # shape=(3, 13, 15)
output = bop_5550
output2 = bop_5550
func_5560 = relay.Function([], output)
mod['func_5560'] = func_5560
mod = relay.transform.InferType()(mod)
output = func_5560()
func_5561 = relay.Function([], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mod.get_global_var('func_5560')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_5587 = func_5560_call()
call_5588 = func_5560_call()
output = call_5587
output2 = call_5588
func_5593 = relay.Function([], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
mutated_mod['func_5593'] = func_5593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mutated_mod.get_global_var('func_5593')
call_5594 = func_5593_call()
output = call_5594
func_5595 = relay.Function([], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_5602 = func_5593_call()
call_5603 = func_5593_call()
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
var_5608 = relay.var("var_5608", dtype = "float64", shape = (120,))#candidate|5608|(120,)|var|float64
call_5607 = relay.TupleGetItem(func_3732_call(relay.reshape(var_5608.astype('float64'), [5, 3, 8]), relay.reshape(var_5608.astype('float64'), [5, 3, 8]), ), 1)
call_5609 = relay.TupleGetItem(func_3735_call(relay.reshape(var_5608.astype('float64'), [5, 3, 8]), relay.reshape(var_5608.astype('float64'), [5, 3, 8]), ), 1)
output = relay.Tuple([call_5602,call_5607,var_5608,])
output2 = relay.Tuple([call_5603,call_5609,var_5608,])
func_5610 = relay.Function([var_5608,], output)
mod['func_5610'] = func_5610
mod = relay.transform.InferType()(mod)
var_5611 = relay.var("var_5611", dtype = "float64", shape = (120,))#candidate|5611|(120,)|var|float64
output = func_5610(var_5611)
func_5612 = relay.Function([var_5611], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_5627 = func_5593_call()
call_5628 = func_5593_call()
output = call_5627
output2 = call_5628
func_5633 = relay.Function([], output)
mod['func_5633'] = func_5633
mod = relay.transform.InferType()(mod)
output = func_5633()
func_5634 = relay.Function([], output)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mod.get_global_var('func_5560')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_5659 = func_5560_call()
call_5660 = func_5560_call()
output = relay.Tuple([call_5659,])
output2 = relay.Tuple([call_5660,])
func_5675 = relay.Function([], output)
mod['func_5675'] = func_5675
mod = relay.transform.InferType()(mod)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mutated_mod.get_global_var('func_5675')
call_5676 = func_5675_call()
output = call_5676
func_5677 = relay.Function([], output)
mutated_mod['func_5677'] = func_5677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5694 = relay.TupleGetItem(func_5675_call(), 0)
call_5695 = relay.TupleGetItem(func_5677_call(), 0)
output = call_5694
output2 = call_5695
func_5708 = relay.Function([], output)
mod['func_5708'] = func_5708
mod = relay.transform.InferType()(mod)
mutated_mod['func_5708'] = func_5708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mutated_mod.get_global_var('func_5708')
call_5709 = func_5708_call()
output = call_5709
func_5710 = relay.Function([], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_5735 = func_5708_call()
call_5736 = func_5708_call()
output = relay.Tuple([call_5735,])
output2 = relay.Tuple([call_5736,])
func_5744 = relay.Function([], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5745 = func_5744_call()
output = call_5745
func_5746 = relay.Function([], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5762 = relay.TupleGetItem(func_5675_call(), 0)
call_5763 = relay.TupleGetItem(func_5677_call(), 0)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5771 = relay.TupleGetItem(func_5675_call(), 0)
call_5772 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_5762,call_5771,])
output2 = relay.Tuple([call_5763,call_5772,])
func_5788 = relay.Function([], output)
mod['func_5788'] = func_5788
mod = relay.transform.InferType()(mod)
mutated_mod['func_5788'] = func_5788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mutated_mod.get_global_var('func_5788')
call_5789 = func_5788_call()
output = call_5789
func_5790 = relay.Function([], output)
mutated_mod['func_5790'] = func_5790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5633_call = mod.get_global_var('func_5633')
func_5634_call = mutated_mod.get_global_var('func_5634')
call_5796 = func_5633_call()
call_5797 = func_5633_call()
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_5805 = relay.TupleGetItem(func_5675_call(), 0)
call_5806 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_5796,call_5805,])
output2 = relay.Tuple([call_5797,call_5806,])
func_5809 = relay.Function([], output)
mod['func_5809'] = func_5809
mod = relay.transform.InferType()(mod)
output = func_5809()
func_5810 = relay.Function([], output)
mutated_mod['func_5810'] = func_5810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_5921 = func_5593_call()
call_5922 = func_5593_call()
func_2351_call = mod.get_global_var('func_2351')
func_2356_call = mutated_mod.get_global_var('func_2356')
const_5924 = relay.const(-4.912766, dtype = "float32")#candidate|5924|()|const|float32
const_5925 = relay.const([5.925389,4.407449,7.036033,8.029783,-7.700400,6.078725,-3.178196,-8.189771,-4.168549,1.419811,2.663409,-7.995008,9.771571,-2.461693,-0.995641,5.679053,6.003551,-3.603792,-9.936610,-9.569060,-9.266297,8.492392,-6.988644,-0.969807,9.256709,0.186379,-1.710892,7.321087,1.997652,-6.537195,8.818061,9.484708,3.497699,-4.521493,8.923766,-9.725971,-4.524357,-1.766046,4.215767,-5.969301,-3.626990,0.409315,6.328083,-1.863030,-6.855202,-7.568647,-2.894998,9.401136,0.308878,8.857147,-0.757627,3.481987,-4.269575,9.173149,-1.357323,-4.038389,2.111107,6.030008,-7.621862,6.132796,2.038984,4.259358,6.955971,1.274041,-6.280520,9.898452,-0.386035,5.698663,-4.717122,-3.086386,-6.165991,7.495789,-9.431747,-5.869184,-8.868419,9.788164,-9.888075,-7.900687,9.294152,-8.709051,-8.257027,-9.166439,-8.827638,3.800644,-3.901735,6.931630,-2.545459,2.574698,-8.428945,-4.354080,7.387712,-3.668492,-4.063989,-1.447231,-3.153085,8.201006,-7.200419,0.965301,8.471930,-5.646292,-7.445015,7.346995,-0.914710,9.656854,-3.352472,-3.037636,4.131266,8.787410,7.525596,-5.395977,2.167136,-8.542906,7.964326,-8.655838,0.570894,9.698722,4.677734,-0.522047,9.172217,-9.226275,5.730106,9.438934,3.200416,-6.249945,-5.111186,-8.489558,-2.528543,-9.346435,-4.866233,6.038337,7.841491,9.586867,4.926639,-9.885655,3.528132,-1.271635,3.352133,0.145213,6.331299,7.829368,-6.633719,9.269732,9.670586,6.413869,-0.320220,1.202898,7.319011,-8.017179,-6.824362,6.083353,6.897572,8.307652,7.499907,3.648946,-7.152401,8.783196,-1.775975,-9.829933,-0.200477,6.415557,-6.413922,-7.613842,6.032792,-0.589032,1.955714,1.668866,7.897905,-5.820328,-1.273481,6.983336,-6.526085,3.708321,9.599797,-4.409178,4.466091,0.800145,-9.528026,1.040475,-4.635326,-2.017413,9.786834,2.299100,-2.386701,-3.867038,3.905989,8.321055,-5.773853,2.031246,-2.332951,6.039213,6.045115,1.994549,-7.107687,-9.542213,-1.922946,-1.231704,-9.610764,8.535221,4.257850,5.771105,9.932466,2.728273,-4.823190,-7.594362,-0.631468,-2.545231,-7.424834,-9.668183,3.325096,4.223543,7.647174,1.109341,9.099842,-5.099591,-5.554653,-6.686832,-8.277243,5.485059,-6.565872,-7.238432,8.868599,-5.480038,-9.842157,-2.043281,3.933626,-9.752686,-3.911833,0.631517,-2.339721,-3.846323,5.192347,-3.727616,-1.827320,-2.558145,4.535591,-9.091634,-6.128235,-3.867550,3.797204,-6.331050,3.832995,2.626737,-0.749044,5.743437,-8.651398,-3.566470,-0.813269,1.199723,-0.329373,2.817854,-8.142649,7.409543,5.671947,-4.025941,-4.825495,7.088632,0.529073,5.605999,1.645934,-0.596850,3.881089,-1.966940,3.853816,-2.313650,7.169466,-5.397838,3.233509,-2.607328,8.928634,0.853267,6.745181,2.771377,2.027659,2.906498,-1.075593,-6.604777,-5.029150,7.815147,1.525661,8.468629,-8.126400,-0.644173,2.895547,-0.868240,4.105730,9.374405,-6.945654,7.130281,5.340143,8.016664,-3.055261,2.655359,-0.925171,8.355947,3.911078,-8.524844,-9.103015,5.196855,-2.955885,-8.094603,-2.700879,-8.853719,5.031618,-3.122906,-9.962123,-7.677254,-9.079849,3.561745,-8.370150,-1.477180,-4.605277,3.513436,8.762024,-4.033488,-0.232298,-3.546667,-4.820092,-9.171381,-1.511691,3.947158,-2.937677,-5.736813,5.504556,1.355524,-4.605327,1.058848,-5.899393,5.869510,-1.806389,7.937818,-3.885911,7.207757,7.452626,-9.659938,-5.320632,-1.233991,7.975445,2.149088,3.068109,8.676456,-6.931365,-6.829039,0.158037,4.618814,1.737037,3.796166,-8.568020,0.064877,-3.335475,3.555903,6.149137,8.884240,-2.618732,7.503590,4.668334,0.931065,-8.143736,-0.217493,2.136547,9.517082,1.186195,6.262912,0.119403,7.109031,-0.169521,-8.236354,-9.159676,1.681539,1.728752,-4.395220,2.944069,-3.689386,2.805889,2.062753,-6.538812,-4.761305,4.219144,9.334720,-2.676385,-8.987989,-0.662859,-5.697013,-2.435970,8.776464,-7.557581,-1.177918,-8.200472,0.805460,-2.073793,-4.813326,3.533851,-4.267412,-8.493577,4.141719,-3.393740,-5.341621,2.740364,2.523173,-8.257210,1.962004,1.551642,-7.927414,-7.097597,2.292494,-8.137155,-0.912928,-6.259707,2.329000,-2.871702,7.150487,-9.416097,5.253654,-4.901012,-7.999649,-7.378173,-0.653168,7.983862,8.548702,-9.846880,-2.487782,-4.777264,7.315486,7.116463,-9.719741,2.528338,-4.045274,9.219547,6.212771,3.085266,-4.391582,7.666566,6.049198,6.995286,7.808723,4.539795,-2.141061,-9.576232,3.442508,-5.647313,2.311624,3.533088,-9.184333,-7.579934,6.810486,5.411962,2.870763,-2.779212,4.484240,6.385821,8.723192,8.772694,-0.878518,9.919850,9.753428,4.796997,-4.898624,4.507174,6.171123,-4.668648,4.821306,-2.226947,7.788802,4.620943,-8.318889,3.768764,5.670347,-3.639629,-3.475263,8.559967,4.274650,-0.653141,-9.341965,-0.562296,6.321749,-8.586717,-4.129491,0.956645,5.744330,6.805944,3.597175,8.135743,5.534316,6.616379,-3.575184,6.300698,1.841667,4.627415,5.927622,-0.038539,-0.075895,0.233432,5.609683,-4.869946,4.375308,5.996146,-7.154059,-9.339004,-7.206510,2.092216,-4.012353,-9.636009,8.836869,4.246711,-5.019793,8.164928,-4.584725,0.914910,-5.221690,-3.841826,4.882027,-9.533907,1.970599,9.329184,-3.365275,-0.673274,-5.748570,4.901198,-5.708014,-6.637526,-8.257386,8.948475,7.548760,-8.794931,9.252229,8.592230,-7.317019,-6.785265,-0.418556,3.077072,5.801523,-0.460837,4.805869,7.500103,-8.311828,-3.309756,6.067885,-6.180103,-4.356939,-7.311193,0.940867,9.617379,-4.159879,8.612497,4.617463,0.247052,-9.213828,-1.685323,3.333990,6.888494,-6.680352,-7.226881,-5.382006,-3.469308,-2.866437,-3.489071,-5.931223,0.269940,7.825704,-7.078770,-1.771128,8.223538,2.187299,-0.028042,7.849258,-6.408219,4.340845,-5.380768,6.603670,-0.035607,0.326547,-0.059751,-4.730447,-7.037797,-4.476172,5.539587,6.405051,-0.101436,-6.658492,9.643474,-5.129534,8.288806,2.223957,9.533967,-1.969906,-4.055516,-6.085474,-3.568564,-0.509643,2.773404,6.392782,5.261258,6.527716,0.280661,-6.552532,-0.469408,-6.280175,-0.068387,5.958609,5.515066,-1.811953,6.954439,-7.798424,9.765253,4.918981,7.625921,6.773491,2.662395,-8.060637,2.485725,8.843492,-7.152121,2.061155,1.707073,-0.184498,0.066847,-4.757605,-1.101675,-8.798497,-6.598823,-9.820241,-1.791082,-0.794477,-9.664730,-0.167152,-4.169974,2.584820,6.914213,5.754219,4.324200,2.480642,-8.806936,-2.785080,-1.170853,7.823487,-3.404679,0.078206,8.433685,-4.626768,-9.300839,1.745705,-3.010437,3.678650,-5.138549,2.302056,5.064233,-7.555731,-7.120415,-5.532478,7.525693,0.361735,9.275038,-4.512304,5.968816,-6.115108,5.878826,-6.278596,8.360125,3.957510,-8.264105,0.219249,-1.912270,-0.632955,-5.952107,0.574862,-1.731807,8.411193,8.361817,-3.430106,-5.969801,9.530062,1.303396,-8.601925,3.601751,-6.674858,-2.726639,8.650090,6.587604,0.797860,-9.324983,5.352704,-9.107992,-8.101363,-1.252259,-7.071884,-9.786641,-0.438870,0.428581,-1.609278,-6.122843,-6.921982,-5.446122,5.926072,6.678304,-7.197290,-4.885109,-1.529559,-5.254518,-1.388331,-8.596066,-1.441345,-3.925314,-3.515131,9.981823,9.233612,8.054238,-9.157572,5.596759,4.562481,-2.986693,3.198406,7.227970,4.626162,-6.439364,-2.434312,-1.443481,8.862311,6.341783,-6.519273,-7.088453,-2.156850,-2.506847,-0.911398,1.769716,-9.235981,1.110347,-9.452884,-8.912263,-9.524096,0.457972,3.963661,6.062865,1.924346,-5.211195,9.098001,0.221622,-4.693509,-5.854322,6.938560,-8.637163,-2.090990,6.804086,-7.976882,-9.418428,9.465611,5.024530,-6.551314,9.843030,5.661101,2.303129,5.369650,-1.502692,-2.940608,-6.325296,-9.821746,-1.637288,-7.168975,1.682503,7.914516,8.438332,-0.419985,0.929555,-6.795864,-6.223457,-8.376102,-5.707806,-1.664965,4.260144,-6.776434,-8.404699,-4.179912,2.911876,6.703602,4.174694,-1.306551,8.965899,7.261079,0.629130,6.098686,9.181446,-8.723717,7.979386,-5.345802,1.166219,-8.179861,-8.704601,-4.747887,8.172982,-9.162342,-8.230316,-8.899198,4.930313,-4.680442,4.015891,-5.217776,4.600643,-3.112117,7.883897,0.037985,1.135935,7.897033,-5.744442,5.899408,1.046311,-0.316076,3.839204,0.057648,-9.128899,5.140272,7.279447,-1.460335,-3.185934,-3.679723,-3.216127,6.149427,5.261037,1.102933,-3.523899,-6.718805,-1.172137,-4.899519,7.787689,3.991623,9.418503,0.544208,-5.474557,-7.473335,-7.949440,5.360252,-9.408390,0.785438,2.763670,-4.898155,1.057364,4.822627,3.111493,6.996689,6.596874,7.212100,-7.147526,4.185347,-2.124859,4.205196,-7.628225,8.855083,2.917339], dtype = "float32")#candidate|5925|(845,)|const|float32
const_5926 = relay.const([0.552103,-6.108604,9.741664,-7.593234,-7.535119,9.852331,-4.819431,-4.851616,-1.978429,5.364671,4.941329,-5.964000,5.095275,7.504918,-6.803018,-9.072327,-5.931095,-0.383566,-4.383636,-9.763809,-4.719969,-7.252457,5.984683,2.344160,-1.462129,-2.435119,-7.172342,-3.769899,-8.033998,-3.485364,5.526201,-1.085599,3.744347,6.121870,8.049636,-3.699028,3.859416,8.051630,4.825439,-5.118082,7.285281,-3.448032,-9.018625,3.658895,-1.927092,0.225743,-8.589081,8.902403,3.153553,-7.862696,8.512433,-2.507630,4.954301,2.438074,-1.050202,-0.980483,-2.888147,-1.942346,-0.151474,-3.537859,1.222943,-7.156029,7.944091,-1.607440,-9.668952,-3.607477,0.007566,-4.686961,-3.318164,-7.394990,6.027701,-1.548978,0.450872,-4.299239,0.022034,-9.131048,9.179130,-9.653286,3.117008,9.975846,4.532185,7.108934,-0.621311,-2.246134,7.713074,-5.431535,8.191614,8.421963,7.516862,-5.291146,-9.031546,8.186160,2.378192,-7.811070,-9.230515,-1.863530,4.512283,7.042630,9.437211,-0.751642,-6.031157,-7.106817,-6.087177,-5.637356,8.068006,-4.386894,0.452803,0.148383,6.874012,9.860107,6.459491,-9.996499,2.583174,8.778929,1.213799,-0.687545,-2.612044,4.495305,-2.074491,-7.593368,2.334785,9.758124,-1.602794,8.475651,-9.540569,-9.482634,7.592716,9.569560,-0.944908,7.793381,-7.501066,5.685747,-6.959146,5.986645,-7.162471,7.729160,-5.349178,-4.013309,0.788620,9.932673,6.103980,-0.824533,-4.031568,6.959966,-3.352675,-1.925019,-1.014014,8.914214,-8.977810,2.761301,-8.167720,-7.099277,4.669238,5.704377,6.740566,3.620238,-6.163800,2.928766,8.435035,5.525107,8.828364,-6.769574,4.420424,2.553298,4.924174,-6.163560,1.615647,-5.363814,-0.146063,9.556947,-2.952561,-0.724096,-4.496755,0.073196,-6.900369,3.522031,-1.482829,-1.002835,7.452645,-2.683899,-4.883729,-2.093215,8.976746,2.057060,4.159411,5.424349,6.926863,-2.383868,9.588114,8.177153,1.240558,-7.299827,-9.562887,4.029434,-6.024081,-4.161488,8.982145,-6.196716,-5.743089,-2.990816,-6.721408,1.630154,6.850740,-1.457934,-3.183973,-0.981047,-7.070225,3.813891,9.353479,6.723202,-1.869432,3.743686,-7.359708,1.741309,1.486601,-9.707485,5.479340,6.562298,-4.389628,-9.546238,2.072498,-4.660488,4.418328,-5.114516,-2.615821,-3.462475,-7.471114,-4.714104,7.209081,9.222230,4.186753,-0.014950,8.737305,1.086287,6.690514,-3.683325,6.975126,3.868108,7.395437,5.324430,8.308482,-4.765603,1.612796,-6.534490,-3.053915,3.135603,-3.234778,2.438184,7.791063,5.610264,-7.076085,9.181696,-4.106508,-2.123332,1.918672,4.774605,2.277890,-6.117963,3.175018,3.715460,-8.480098,6.453837,-0.966421,-1.165806,-5.755013,0.982916,-3.402267,-9.642343,0.739096,-4.498409,-1.533278,6.952548,9.466987,3.109305,-4.717322,1.710952,2.666184,5.865402,1.714686,-4.642507,8.758076,-4.666795,-7.057548,-0.724354,5.007436,-4.734840,1.883687,4.538979,9.180605,0.761444,6.521011,-6.407386,0.969417,-8.303737,-2.638185,-7.082985,-3.192252,7.218243,1.775599,-9.137170,-2.932312,3.984682,-6.595670,-7.476917,2.512234,-8.321468,-5.597557,5.615117,-9.067361,-2.264241,-6.195369,0.636436,6.272852,-7.608504,-4.232390,3.390707,9.868014,-9.222757,5.871562,-0.069048,-2.965454,2.183129,0.612867,5.097705,6.673672,-2.788401,-0.505847,-2.345604,-5.614228,6.020537,-2.807968,4.043706,0.387841,2.065666,4.537016,7.317197,-6.549062,-0.919287,1.884662,-6.294393,-3.680516,8.106768,-6.948042,-6.659623,-4.899109,8.433684,7.959980,-0.929195,7.515946,5.472300,2.780179,-0.005515,-9.813497,-8.323724,-2.906452,-3.266716,1.497825,-5.185072,4.716010,1.477756,-6.309519,-4.083201,5.177507,-0.228816,9.805754,9.231559,-4.252077,-3.150243,8.289008,-5.527022,9.180146,-3.365802,-7.996949,-9.766066,0.575879,8.034967,8.449913,3.849216,8.545542,6.417942,-5.380278,9.107267,-2.991085,1.499511,-6.642703,-0.655111,-5.197562,2.950527,7.538142,-2.655094,4.829500,-8.936575,-8.437669,8.595278,5.810515,-0.178795,-1.304363,-6.285195,8.463620,-7.709484,8.967613,-9.848649,0.594686,1.319614,1.370051,9.078548,9.186019,2.247313,-3.517887,5.025558,1.103161,2.746763,-1.053352,2.653052,4.985304,7.249264,-9.939973,-1.041584,7.772945,-8.524015,9.589035,9.731875,7.255227,-8.984780,-1.646186,2.446585,4.970744,3.070065,-1.290845,-2.334107,-1.807654,-6.180557,4.343888,-9.458838,-3.322103,2.027941,-3.295591,8.557204,-7.320870,5.010490,8.424804,-3.326196,3.033121,-3.461389,-7.555831,0.246312,2.738558,4.975153,-2.845234,4.113573,-0.846539,2.887507,-8.507867,-1.611215,-5.177506,0.937145,-6.363484,1.734821,9.454301,0.348193,-7.137670,-7.205420,6.578360,-9.999205,8.559200,-6.966104,-6.486770,-4.114131,-9.739678,2.787542,3.944475,3.487892,4.528674,1.844679,-2.824839,-5.901583,-3.561437,-6.276443,9.641249,2.005514,2.591151,-3.672679,0.172473,-7.151832,-6.673455,4.950786,-1.049300,1.693850,8.874527,-5.354435,-7.889189,-1.936672,2.420085,-2.162017,4.872036,9.610207,7.057793,-4.633042,-2.877256,1.953797,0.708037,-4.676568,5.102230,9.452353,7.456631,-0.211401,-1.639998,-4.073838,-6.750754,-7.147677,-9.194742,-0.155920,-8.251535,8.540796,0.582312,1.915132,4.649635,-4.403727,1.055781,2.294436,9.222119,-4.021514,-4.847434,6.040142,9.372467,-1.936659,1.621793,-9.322118,8.228717,-2.610190,-1.963886,4.719455,-5.319836,-0.490115,8.984172,-9.504001,3.185987,1.038209,0.229411,-3.848424,-9.492562,-6.253385,7.102024,1.937236,-7.897539,8.173680,1.193519,-9.017337,-2.442975,-1.604417,-0.771021,-4.765223,9.476622,1.773276,-9.625559,-9.564409,-7.808326,-4.022584,8.477240,4.915593,-7.156937,-9.360672,9.550809,9.488944,2.709934,-0.730773,-1.072776,1.658928,-9.034895,-1.142418,3.633862,1.994813,4.249764,6.932529,-3.846550,3.003168,-0.122120,-1.176201,-1.079252,6.189471,9.704208,-1.925711,9.335273,-2.293982,-8.703012,-0.441124,1.348514,-6.533281,-0.565144,1.440105,-7.077516,4.620338,-1.095859,-2.186960,6.262276,-2.304198,9.844687,-2.664820,-5.337967,-7.564960,1.546005,-1.173305,0.498248,8.747132,2.976083,-2.214391,8.094100,-1.123749,6.354159,4.988858,-4.147383,-1.065392,-7.180090,-0.681384,6.845731,9.153212,-6.029443,8.876981,-3.298039,9.307990,8.772759,4.567058,8.152907,-4.262055,9.341329,4.553249,1.042619,4.865740,-8.758170,-6.623117,5.153282,-1.275037,-6.052043,9.250387,-9.664432,-3.452691,-0.407005,1.176224,3.782423,-6.790532,1.944253,-8.856973,7.429425,-2.806557,-6.034062,0.579491,-5.827178,4.369499,6.874696,-6.430412,0.366040,0.221496,-6.043064,3.207328,-3.240120,-1.532542,8.266725,-5.519551,9.973968,-8.520462,-7.999823,5.140250,7.792404,3.715850,3.333845,-1.555812,-0.285301,-7.493671,-0.570175,-1.003486,5.546630,-9.238199,4.666278,-2.980554,0.728190,-8.560888,-8.478271,9.151826,-7.247223,8.334406,-4.656180,-8.049070,7.286762,1.010466,-5.028677,3.153886,5.203930,-1.893572,-9.403208,5.275743,9.169235,3.399561,2.210327,7.052538,8.942315,4.184081,7.398582,-6.922754,-6.362312,-7.552982,6.135053,-2.719516,-7.807041,-5.563296,7.706545,-9.359486,3.389521,4.676137,-9.202188,0.819445,6.897698,1.699838,-7.733762,1.501544,-8.438703,-0.089386,6.708400,-0.339058,3.156257,8.125692], dtype = "float32")#candidate|5926|(720,)|const|float32
var_5927 = relay.var("var_5927", dtype = "float32", shape = (1248,))#candidate|5927|(1248,)|var|float32
call_5923 = relay.TupleGetItem(func_2351_call(relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [13, 13, 5]), relay.reshape(const_5926.astype('float32'), [720,]), relay.reshape(var_5927.astype('float32'), [8, 156]), ), 1)
call_5928 = relay.TupleGetItem(func_2356_call(relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [13, 13, 5]), relay.reshape(const_5926.astype('float32'), [720,]), relay.reshape(var_5927.astype('float32'), [8, 156]), ), 1)
func_4059_call = mod.get_global_var('func_4059')
func_4065_call = mutated_mod.get_global_var('func_4065')
var_5934 = relay.var("var_5934", dtype = "int64", shape = (40,))#candidate|5934|(40,)|var|int64
const_5935 = relay.const([[7.993567,9.040713],[-2.922008,-9.316978],[-0.849301,-3.146052],[-4.218635,3.547452],[2.972512,-1.811848],[-6.743036,2.463493],[8.335183,6.719624],[-9.118920,-3.883355],[1.335450,0.412106],[6.888872,4.224026],[9.769220,6.933978],[8.818381,7.840821],[1.727967,5.281632],[-9.274677,-4.900949],[3.997626,1.113483],[-9.885496,1.840979],[-6.167460,7.169553],[-2.129262,2.453157],[-7.222473,7.414075],[-7.305483,6.022919],[6.612456,0.620873],[0.840596,3.385289],[-4.353225,-8.001840],[-1.065168,-8.608851],[7.766278,-1.270515],[-4.533894,3.522375],[-6.180154,-8.075877],[2.498834,5.099977],[-6.156233,-6.349220],[-0.678044,-6.781716],[7.052233,7.039566],[2.317502,-8.880561],[6.459963,-7.454049],[-7.470209,-6.725645],[8.168130,7.977608],[-3.191330,7.244075],[-8.576857,-8.126461],[7.833952,7.874542],[-7.681400,6.477230],[-6.431688,-7.236784],[-7.507937,-1.900165],[-5.210671,-4.323497],[9.449673,5.636388],[-3.377381,4.256123],[-6.489845,2.324227],[-8.134496,-5.002813],[8.919224,-1.760411],[7.284134,7.889903],[-4.836903,3.950628],[-5.935638,-5.084532],[5.847908,-3.519518],[-9.268735,-1.418472],[6.714420,-0.980897],[-9.558002,-4.091960],[-7.905352,-7.431585],[4.033846,-4.116881],[3.484016,2.149161],[4.879570,9.404730],[6.502142,-5.149297],[1.043313,-6.829089]], dtype = "float64")#candidate|5935|(60, 2)|const|float64
call_5933 = relay.TupleGetItem(func_4059_call(relay.reshape(var_5934.astype('int64'), [2, 4, 5]), relay.reshape(const_5935.astype('float64'), [120,]), relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [845,]), ), 2)
call_5936 = relay.TupleGetItem(func_4065_call(relay.reshape(var_5934.astype('int64'), [2, 4, 5]), relay.reshape(const_5935.astype('float64'), [120,]), relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [845,]), ), 2)
func_2351_call = mod.get_global_var('func_2351')
func_2356_call = mutated_mod.get_global_var('func_2356')
call_5939 = relay.TupleGetItem(func_2351_call(relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [13, 13, 5]), relay.reshape(call_5923.astype('float32'), [720,]), relay.reshape(var_5927.astype('float32'), [8, 156]), ), 6)
call_5940 = relay.TupleGetItem(func_2356_call(relay.reshape(const_5924.astype('float32'), []), relay.reshape(const_5925.astype('float32'), [13, 13, 5]), relay.reshape(call_5923.astype('float32'), [720,]), relay.reshape(var_5927.astype('float32'), [8, 156]), ), 6)
uop_5947 = relay.atanh(call_5939.astype('float64')) # shape=(33, 4)
uop_5949 = relay.atanh(call_5940.astype('float64')) # shape=(33, 4)
output = relay.Tuple([call_5921,call_5923,const_5924,const_5925,const_5926,var_5927,call_5933,var_5934,const_5935,uop_5947,])
output2 = relay.Tuple([call_5922,call_5928,const_5924,const_5925,const_5926,var_5927,call_5936,var_5934,const_5935,uop_5949,])
func_5951 = relay.Function([var_5927,var_5934,], output)
mod['func_5951'] = func_5951
mod = relay.transform.InferType()(mod)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5951_call = mutated_mod.get_global_var('func_5951')
var_5953 = relay.var("var_5953", dtype = "float32", shape = (1248,))#candidate|5953|(1248,)|var|float32
var_5954 = relay.var("var_5954", dtype = "int64", shape = (40,))#candidate|5954|(40,)|var|int64
call_5952 = func_5951_call(var_5953,var_5954,)
output = call_5952
func_5955 = relay.Function([var_5953,var_5954,], output)
mutated_mod['func_5955'] = func_5955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_5987 = func_5708_call()
call_5988 = func_5708_call()
uop_6003 = relay.asin(call_5987.astype('float32')) # shape=(3, 13, 15)
uop_6005 = relay.asin(call_5988.astype('float32')) # shape=(3, 13, 15)
func_3029_call = mod.get_global_var('func_3029')
func_3032_call = mutated_mod.get_global_var('func_3032')
var_6007 = relay.var("var_6007", dtype = "bool", shape = (98, 15))#candidate|6007|(98, 15)|var|bool
call_6006 = func_3029_call(relay.reshape(var_6007.astype('bool'), [15, 14, 7]))
call_6008 = func_3029_call(relay.reshape(var_6007.astype('bool'), [15, 14, 7]))
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
const_6019 = relay.const(0.967458, dtype = "float32")#candidate|6019|()|const|float32
var_6020 = relay.var("var_6020", dtype = "float32", shape = (720,))#candidate|6020|(720,)|var|float32
call_6018 = relay.TupleGetItem(func_2471_call(relay.reshape(const_6019.astype('float32'), []), relay.reshape(var_6020.astype('float32'), [1, 720]), ), 2)
call_6021 = relay.TupleGetItem(func_2474_call(relay.reshape(const_6019.astype('float32'), []), relay.reshape(var_6020.astype('float32'), [1, 720]), ), 2)
var_6025 = relay.var("var_6025", dtype = "float32", shape = (3, 13, 15))#candidate|6025|(3, 13, 15)|var|float32
bop_6026 = relay.maximum(uop_6003.astype('uint8'), relay.reshape(var_6025.astype('uint8'), relay.shape_of(uop_6003))) # shape=(3, 13, 15)
bop_6029 = relay.maximum(uop_6005.astype('uint8'), relay.reshape(var_6025.astype('uint8'), relay.shape_of(uop_6005))) # shape=(3, 13, 15)
uop_6036 = relay.asinh(uop_6003.astype('float32')) # shape=(3, 13, 15)
uop_6038 = relay.asinh(uop_6005.astype('float32')) # shape=(3, 13, 15)
output = relay.Tuple([call_6006,var_6007,call_6018,const_6019,var_6020,bop_6026,uop_6036,])
output2 = relay.Tuple([call_6008,var_6007,call_6021,const_6019,var_6020,bop_6029,uop_6038,])
func_6040 = relay.Function([var_6007,var_6020,var_6025,], output)
mod['func_6040'] = func_6040
mod = relay.transform.InferType()(mod)
var_6041 = relay.var("var_6041", dtype = "bool", shape = (98, 15))#candidate|6041|(98, 15)|var|bool
var_6042 = relay.var("var_6042", dtype = "float32", shape = (720,))#candidate|6042|(720,)|var|float32
var_6043 = relay.var("var_6043", dtype = "float32", shape = (3, 13, 15))#candidate|6043|(3, 13, 15)|var|float32
output = func_6040(var_6041,var_6042,var_6043,)
func_6044 = relay.Function([var_6041,var_6042,var_6043,], output)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_6049 = relay.TupleGetItem(func_5744_call(), 0)
call_6050 = relay.TupleGetItem(func_5746_call(), 0)
func_1567_call = mod.get_global_var('func_1567')
func_1570_call = mutated_mod.get_global_var('func_1570')
const_6070 = relay.const(-6.950883, dtype = "float32")#candidate|6070|()|const|float32
const_6071 = relay.const([[-5.990711,-2.260611,3.596236,7.969762,-3.615359,3.965691,-5.841805,3.838488,2.506401,0.849920,-4.826470,-2.601797,4.199867,9.348335,6.933292,1.165075,-0.523602,0.955083,2.078385,3.739290,-4.671473,0.206548,7.841315,6.624575,9.660213,7.428537,9.287524,-6.551241,-3.502953,-7.964131,-3.813889,6.149761,7.227188,-2.572285,5.866344,-9.844070,-7.240620,6.999394,-7.216242,-6.800669,5.123570,2.329810,-1.252738,2.925156,-9.807044,-0.276068,-6.471472,7.486967,-7.690201,-4.323115,1.494905,-2.935324,-8.551142,8.873035,-4.273944,-1.995484,-9.027780,-3.932268,5.347654,1.720324],[8.988991,-2.070543,4.690065,3.116873,-1.777562,-5.491339,-3.562033,4.409475,-2.045410,4.912780,0.150376,-0.494515,-2.848001,-7.651555,0.516074,1.866194,8.817249,-5.058783,3.504802,6.575189,3.215473,-9.264897,-5.104637,-6.646912,-3.457460,9.550906,0.405304,2.904185,-7.889930,5.583508,7.059604,-1.893118,3.738265,-0.801355,-8.551573,-5.058406,9.498036,7.724778,-1.671733,-4.398763,5.322988,-8.293797,4.721181,-0.251510,0.322360,2.594558,-5.399270,-0.337551,-7.460404,8.186262,-3.150803,-7.597116,-1.421657,7.613108,7.730098,6.995872,1.602019,5.149818,-6.817328,-9.911327],[-8.309985,-0.170394,7.064356,-7.661055,8.295274,-2.500475,4.088241,9.045712,-6.218708,-5.669069,-4.850103,-9.684036,-9.641611,9.489837,-8.037650,-4.988155,7.027788,9.623791,1.797671,2.009822,8.264683,-2.596787,-8.536822,-1.558708,-6.577521,7.413720,3.136641,-1.569142,9.861508,-1.526492,7.569262,-3.711549,8.440947,1.506483,5.406664,-1.460849,-9.474143,8.941713,-0.241440,0.675345,6.477553,-3.514021,3.061902,-6.627277,-7.783427,-8.543760,8.801949,-6.109822,-2.056247,-4.550348,-0.765766,5.039742,4.559804,-1.366353,-5.163180,9.413390,-5.839187,-3.443320,-0.412998,-1.697323],[0.204013,9.550126,-1.848386,-3.799002,8.557005,-5.403682,4.999993,8.276497,0.152296,-6.296830,5.239906,6.866016,3.055592,4.797257,-8.667709,-1.767179,-1.415776,-7.778719,-3.617186,-6.858572,4.324451,5.740533,-3.417016,-5.698047,-5.472052,0.318834,-3.772424,4.091762,0.554797,4.589203,8.912734,2.192955,3.445195,-2.710763,-7.233961,-6.420968,2.761821,-6.298677,-8.217120,0.527880,-1.086821,-2.079334,5.730575,-0.141926,7.476523,-1.759189,-3.752135,-8.287118,-8.948712,3.158622,9.680566,-3.437493,8.897046,-5.001290,0.331806,9.502658,4.921426,-0.592318,9.528383,8.932528],[0.568542,6.832390,7.425612,6.057891,-4.702667,0.167919,-3.731420,4.205484,-5.472853,5.475100,5.253148,9.642163,5.683982,-2.639803,9.374408,6.796661,5.895939,-9.888582,-8.841726,-2.605578,-4.610562,0.907503,-9.045032,-1.694603,-4.390294,-3.651762,-2.156302,-5.262195,-2.990468,1.826577,-7.558212,-5.969579,7.057968,9.990318,-5.112919,5.490304,9.113359,-8.356246,6.757539,-6.502904,-3.388081,5.275405,4.321820,-2.510728,-1.223560,8.208167,-0.193562,5.167617,-4.959234,-9.894423,-8.591313,5.002794,-6.300148,1.673486,-2.559709,4.983877,0.141281,-1.415888,6.046520,-1.347094],[-9.785384,-2.246620,3.105491,-7.198095,-7.782663,-0.210522,-6.753403,-3.913955,5.005706,-5.293830,-7.644946,1.390195,2.909843,-9.034687,-7.458874,-3.716893,-1.714727,-3.632819,-9.683437,9.190027,2.688095,-4.935526,9.972416,-7.188594,-8.517535,-6.348389,-1.566224,-8.272972,0.120102,-0.622571,3.664009,-7.146300,-6.394313,2.377798,-2.645956,4.432776,6.999064,4.195229,0.743751,6.190446,2.161680,-7.330788,7.287969,1.476798,2.517527,6.268647,-2.471714,-7.192853,-0.651225,-5.521504,-2.020521,-0.085141,0.196409,-4.906238,1.273221,-4.436751,9.862628,-4.068670,-1.065053,-4.901203],[-1.309080,-2.835207,8.208313,8.597585,9.439958,-3.778890,4.743853,5.297004,3.127637,3.487072,8.626082,8.934238,-4.020165,-2.956559,4.429682,-8.602088,-6.900338,-7.164356,4.385098,2.159746,7.957564,-0.374507,-3.466577,3.806722,0.123362,-2.331868,6.938844,-7.925638,1.408371,-4.776747,1.008795,-1.121551,8.486721,9.563861,-9.085656,4.992454,4.568482,5.742487,1.487537,0.243131,1.310297,-7.174658,9.522162,0.184210,1.091929,0.033011,-3.332796,-2.029370,-9.252500,2.520107,-0.016823,0.813091,-4.583584,2.412549,5.588333,3.970957,-1.372457,7.393908,-7.927625,-5.171674],[-2.789815,-0.240137,-7.284014,2.020901,-6.611020,6.164888,8.850850,-0.618683,2.782419,-6.893212,-0.626604,-4.642825,7.243158,-4.440265,-3.002995,6.203551,-6.248757,9.045395,-0.794608,-1.755879,7.335483,9.346916,-8.855796,3.483762,8.081000,-9.335460,7.400165,-4.640171,8.033206,-0.338220,1.268903,-7.011409,9.940659,-4.530682,-2.214274,-8.065379,0.641640,3.118167,-2.870438,9.166416,-0.404165,1.156632,-3.375385,-7.793986,8.186007,2.382886,-5.960012,-0.211934,-0.151203,7.268024,5.522619,-1.094208,1.656113,-9.381525,-7.822655,3.262428,-8.740282,-8.674112,-1.074177,-7.074360],[7.896083,-9.769197,0.681341,8.081873,-9.109920,4.954792,3.025926,-5.820975,8.702301,-8.800400,-2.854834,-7.422681,-5.260446,-8.550032,9.240377,-0.540706,-1.629429,-1.418076,-9.235868,5.416539,-6.637448,-3.607608,3.136085,-5.564175,-5.572215,-6.210002,-8.723947,8.352615,-2.419392,8.480370,-6.752427,-4.172516,-1.458187,-7.181156,1.778044,2.410004,-3.863110,3.628390,-1.266057,-2.768727,-6.072105,-5.175569,2.985582,1.755224,8.772323,9.762235,8.286510,-6.111722,-0.942640,-4.012039,3.661166,4.834724,7.210884,6.412555,-3.049050,-9.599643,-7.333085,8.240921,-4.669235,1.922451],[5.463786,8.090396,4.344259,0.600380,1.387110,8.674415,0.499333,-4.178913,4.618181,6.205820,-6.137948,-5.563631,-8.943276,-0.123323,-9.797627,-7.866220,8.655437,-0.917776,1.408416,-2.618437,9.828374,8.277642,7.191139,-8.423045,9.961727,-1.911616,9.708924,2.590807,5.854305,4.509395,7.927058,7.163768,5.371005,5.444785,4.691772,4.900855,5.649135,-6.342934,8.454263,7.256510,-9.114032,-8.452074,-7.459785,6.605609,9.073977,-1.967725,-6.739323,9.992192,6.134161,-7.954480,8.282106,-1.329641,4.338186,1.747515,6.949558,8.729021,-5.341726,9.741403,1.552636,-6.827533],[4.645497,-7.422360,1.839516,-4.618514,-0.979630,7.342878,-2.757459,8.602877,-1.107654,-1.115932,8.334467,7.616606,4.332495,1.488708,1.185382,-5.412393,-6.060238,-7.606235,-4.996959,-2.665484,-8.031737,-6.715392,8.552135,-7.865623,-3.199287,5.385418,-5.955156,-5.002435,-8.157357,7.614591,9.067754,-8.163974,-0.509048,4.600222,0.030433,6.480314,-3.173413,2.148816,6.181441,5.221623,-1.911834,-1.218627,-4.080887,9.327562,-9.718982,-8.212333,-6.846943,9.590328,-3.817649,9.660297,-0.020644,0.165150,5.267022,1.556527,-0.828215,-3.223641,5.787862,9.723028,0.271576,-2.913139],[2.218710,-0.335112,-4.747629,-8.249557,-9.154588,-4.017339,7.605494,0.615505,-1.508578,0.470864,-8.748424,-6.002273,-0.556251,4.638546,-1.773586,1.842537,-9.635451,4.937228,2.443943,7.726822,0.166190,7.249338,6.279094,9.820108,7.435001,-8.222656,4.223407,0.264747,1.487840,6.186725,6.424082,7.303879,-7.498686,-1.517446,6.958101,-7.453120,7.023516,7.457739,-8.161801,8.162321,2.414931,4.724202,-8.021460,0.104826,7.534111,8.768404,7.787494,5.411662,6.261692,-9.458845,6.985082,5.360132,-3.610342,-4.042053,-4.711478,-0.681724,7.961469,-1.116476,-4.680750,4.155639]], dtype = "float32")#candidate|6071|(12, 60)|const|float32
call_6069 = relay.TupleGetItem(func_1567_call(relay.reshape(const_6070.astype('float32'), []), relay.reshape(const_6071.astype('float32'), [3, 15, 16]), ), 0)
call_6072 = relay.TupleGetItem(func_1570_call(relay.reshape(const_6070.astype('float32'), []), relay.reshape(const_6071.astype('float32'), [3, 15, 16]), ), 0)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_6076 = func_5593_call()
call_6077 = func_5593_call()
output = relay.Tuple([call_6049,call_6069,const_6070,const_6071,call_6076,])
output2 = relay.Tuple([call_6050,call_6072,const_6070,const_6071,call_6077,])
func_6082 = relay.Function([], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
output = func_6082()
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_6161 = relay.TupleGetItem(func_5744_call(), 0)
call_6162 = relay.TupleGetItem(func_5746_call(), 0)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_6179 = relay.TupleGetItem(func_5788_call(), 1)
call_6180 = relay.TupleGetItem(func_5790_call(), 1)
func_2033_call = mod.get_global_var('func_2033')
func_2036_call = mutated_mod.get_global_var('func_2036')
const_6188 = relay.const([-3,1,-7,-6,-9,-2,10,-7,1,2,-3,-9,-4,-8,-1,-5,-1,-2,1,-1,-10,3,4,5,-2,-9,-7,-1,9,-6,-6,7,-7,-6,-7,-1,9,-9,7,-6,4,4,-6,-2,4,-7,9,8,5,6,-2,-10,-2,3,4,-8,7,-8,7,-9,-10,-1,-2,-4,-6,8,-7,8,7,1,-3,8,9,4,-9,-6,7,9,10,-6,-4,-4,-5,4,-6,-3,-2,-8,10,4,2,8,7,1,-3,-4,3,1,2,8,-8,4,4,8,3,3,4,-7,1,10,6,2,-4,5,-6,-2,8,4,-10,-3,-8,2,-10,-5,-8,-4,9,-4,-8,-8,6,1,-8,5,9,4,-6,9,5,6,9,8,5,2,2,10,-2,1,7,-9,-4,6,-9,-6,9,10,2,-9,-1,-2,10,3,2,1,2,6,5,7,-6,-8,5,-6,-7,3,5,3,7,7,-3,-9,-10,-2,8,9,-2,-3,-7,1,-4,-4,-2,-4,6,-10,-10,4,5,-7,3,9,6,-10,8,9,-10,1,-1,-10,-4,3,-9,-8,-1,9,2,9,9,3,5,-9,6,-6,5,-3,6,5,-5,4,-9,-1,-1,10,-2,-7,-6,1,-8,-8,-2,-10,-7,8,9,9,4,-10,10,5,5,-8,-10,-3,-5,9,-2,-8,5,2,-9,-3,-10,-10,-3,2,-8,-10,-9,-7,4,2,7,6,5,8,-8,6,4,-8,-10,-6,1,9,9,-2,1,8,3,2,1,-1,10,6,-3,2,5,4,-6,-3,6,-5,-9,-7,-6,-10,8,5,-1,2,5,9,-4,5,-3,-4,-4,-8,-3,-7,3,-7,9,8,4,3,-6,1,-5,-1,-5,-9,-3,3,-3,6,-8,-6,-4,8,-4,7,-5,-1,3,9,4,-8,-7,6,1,-4,4,7,-4,-6,-8,-8,1,5,9,3,-4,-4,-2,-8,2,-4,-4,4,8,6,-3,10,4,-8,-1,-8,-2,5,5,-8,9,-1,3,-1,-5,8,1,-4,7,-10,2,3,-2,-9,6,-2,-9,10,-10,4,7,-7,-2,-5,-2,-7,-5,-10,3,-4,9,5,-2,-2,5,-10,-2,5,8,2,5,4,-4,-6,6,-7,7,4,5,2,4,4,-2,9,-9,8,4,3,-8,4,-1,8,-1,7,-8,9,4,-9,2,-4,3,-4,-6,5,-8,-8,10,-6,6,-10,-4,-8,2,-5,-5,5,3,-5,8,2,8,4,-6,2,4,8,-1,-8,-4,-7,-2,-7,2,5,-1,-6,9,-1,-2,6,-3,6,1,-6,7,-3,4,3,3,7,-6,-5,3,-9,8,-1,-2,-6,-2,-9,4,7,2,-5,9,1,5,10,3,-4,-7,-4,3,3,10,2,3,-3,1,-4,-10,-6,2,-2,9,5,-1,6,-7,-9,2,3,3,4,4,6,2,8,10,-8,5,5,-4,-2,-4,10,-2,-3,10,1,-5,7,-9,-1,6,9,5,-7,-9,-10,10,8,4,9,9,8,-6,-3,-10,7,-6,-7,-2,-1,-5,-3,2,7,5,10,5,-9,-2,10,-9,-10,-3,9,3,-10,1,-1,7,9,-5,5,4,3,-8,-10,9,-5,6,10,4,-6,-3,5,7,1,2,4,-2,4,9,1,3,-10,10,8,2,-8,-3,5,7,-3,-4,7,-1,7,4,-10,4,5,4,9,-7,10,-9,1,-3,-7,9,-10,-2,2,5,-2,-4,4,-10,1,-9,9,-8,-4,-3,5,-4,4,-3,1,-10,8,9,1,4,-9,5,-1,-10,-3,7,-7,-6,-6,-9,9,-9,3,-7,-1,6,-4,-10,5,9,3,7,-6,2,4,-8,-9,7,8,8,-7,-9,-7,-5,1,10,1,-5,-10,10,6,-6,6,9,-9,3,-3,-6,-5,3,-4,-9,10,-3,-1,-6,-2,4,-6,-2,-1,-1,-1,-3,8,10,8,-7,5,3,-5,-3,-1,-5,-1,4,-3,-6,-3,-9,-6,-3,2,5,1,3,6,3,2,-6,6,-5,-8,1,10,2,-3,-8,-4,2,10,-5,1,4,5,-4,-2,10,-8,1,3,3,8,-10,-6,-10,-8,-3,-3,2,-6,1,-7,-8,-1,4,2,-1,1,-3,-8,3,9,6,-2,-4,-7,6,5,9,-5,-2,-2,-7,8,8,-6,1,7,-1,-6,-7,9,6,-9,10,10,1,6,-3,-10,8,3,3,-9,-9,9,-9,-9,-10,2,10,-9,5,9,-10,2,6,1,5,4,-6,-10,-9,2,5,9,-9,8,-6,4,7,3,-9,-1,-4,-10,7,-7,-9,6,-6,-3,3,-9,-8,4,8,7,2,4,4,-8,4,-7,-6,-8,8,-9,1,-10,10,-4,-1,-8,8,1,-3,-3,6,-9,3,-7,9,1,-4,8,-7,4,1,3,1,-3,4,-3,-4,-7,2,-7,1,-10,9,1,-8,5,7,1,3,6,10,2,-6,2,-2,-8,6,-10,-5,2,5,5,7,-4,1,-10,1,-6,10,6,8,-6,1,-9,6,2,-1,7,-2,-6,1,6,9,-1,-4,2,-1,4,4,-8,7,4,-6,3,2,-5,-9,-6,-6,9,4,-10,10,6,-1,6,6,-7,-1,-2,-4,-5,-7,1,-8,1,-2,6,9,5,6,-10,-1,5,-7,-4,-2,-4,-2,10,5,-1,-4,-8,8,-5,-7,7,1,-2,6,9,-7,-7,-8,-10,-10,-2,7,-9,5,9,8,4,7,8,-3,1,10,10,5,-2,10,-1,-6,-4,-6,-5,-1,4,4,-1,-10,1,-10,-9,3,-4,-7,-2,7,2,-10,-10,5,-1,7,-7,4,-7,1,3,-7,-6,2,-5,-3,2,5,6,-5,8,9,-9,5,9,-1,-9,7,-3,3,-8,7,10,2,-2,5,9,7,-4,3,10,6,-2,-5,4,5,2,1,-3,-2,-2,-5,8,8,-6,-7,-4,-6,-8,3,8,-3,9,-4,9,-7,2,1,-8,4,-9,-10,6,9,-8,-5,10,7,-1,2,-9,-10,-3,-1,-7,6,-7,-9,4,-4,-2,-9,6,2,8,-7,2,-8,-6,7,5,1,2,3,-10,8,-8,4,4,-1,-7,1,-4,8,9,7,-1,-6,-8,8,-7,-10,7,9,10,-6,-8,10,-8,-4,-6,-3,-9,1,-9,5,-7,-3,1,-6,1,9,10,1,-10,5,8,-2,-6,-2,1,-4,-4,-3,-8,7,-2,1,10,10,-9,-5,-2,1,9,4,3,-10,-5,-6,-3,-4,-3,-7,-9,10,-1,-4,-1,10,2,-2,1,4,7,9,-4,3,10,-10,-8,-6,7,-9,-8,-10,2,-5,-6,-9,2,-10,-10,4,6,8,6,10,-5,2,9,-4,-4,6,-2,2,2,8,9,-2,10,9,-4,-9,-10,-4,3,-2,9,-8,2,2,-3,5,-6,9,7,-2,-4,9,2,-3,-1,1,-2,10,-10,-7,7,-7,9,9,-1,-6,-1,-1,8,5,10,1,6,5,8,-9,3,7,9,9,-6,8,-10,10,2,9,-3,3,4,5,9,-6,-7,8,9,-9,2,4,-6,-2,-10,-10,1,-2,3,-6,1,-7,-7,6,2,-2,-3,-6,9,-7,9,3,5,5,-3,8,-7,4,-10,7,-8,-6,-5,9,-2,-2,6,-1,1,6,-10,-9,1,-8,-6,3,-6,-4,-3,5,-1,-4,-4,-9,2,-10,2,-7,5,-6,-2,4,9,-9,2,8,10,-2,9,-1,7,-1,-3,5,-6,10,1,-4,-5,-3,-6,10,-4,-2,4,-4,-7,1,5,-9,-9,7,-6,-10,-5,-7,3,8,-10,10,6,-4,-1,2,-2,-5,3,-1,-6,-9,2,-3,-3,-4,-3,-4,10,-9,-4,-5,3,7,5,-2,-9,-1,7,9,4,1,-10,6,5,-9,6,5,-7,3,2,-2,-8,-3,-6,3,6,9,10,-3,1,-4,-9,6,3,7,-7,-8,3,-10,-4,1,8,5,7,5,-2,-5,-9,-9,2,-10,7,6,9,-1,8,2,-3,-5,5,-8,-10,1,8,2,8,-1,-7,-4,-10,1,8,5,2,-2,2,7,-5,-9,-8,2,-10,8,-9,-8,-9,6,-4,-9,-3,-3,-2,-6,9,-1,6,-1,-6,8,5,-4,-4,-2,-3,5,1,-2,-10,-2,-4,6,-6,-8,7,-8,1,7,-4,2,-9,5,6,-4,6,5,-7,-9,7,-5,-3,-9,5,-10,6,-6,8,6,9,-10,4,-4,-6,5,-2,2,-3,2,8,7,-3,-10,4,-6,-5,-7,-2,1,-4,3,-7,3,-5,-8,-4,-8,9,7,3,-6,10,7,-4,1,-5,6,-7,-1,-2,7,5,-3,3,-8,5,-7,7,8,4,-9,-4,-2,4,3,-6,3,4,-6,10,-7,7,-2,10,8,-1,-7,-4,4,-4,-5,7,-2,4,10,-1,8,3,-6,2,-8,-3,-6,6,6,-8,10,6,6,1,5,7,4,5,-2,4,-10,9,-5,-7,-4,-1,-10,-8,1,4,-3,-1,-8,5,-3,-4,-7,8,-7,-6,-10,7,5,6,-5,2,-9,3,9,-1,-10,-3,9,10,6,9,2,-6,1,5,-10,4,-9,-1,6,1,9,2,7,4,-9,-1,-8,9,1,-5,-10,2,-7,-10,-5,8,6,1,-5,9,7,6,1,3,1,2,-7,3,-9,7,-3,-7,-7,4,-1,-8,5,2,-3,-5,-4,-6], dtype = "int8")#candidate|6188|(1792,)|const|int8
const_6189 = relay.const(-3.801316, dtype = "float32")#candidate|6189|()|const|float32
call_6187 = relay.TupleGetItem(func_2033_call(relay.reshape(const_6188.astype('int8'), [16, 16, 7]), relay.reshape(const_6189.astype('float32'), []), ), 3)
call_6190 = relay.TupleGetItem(func_2036_call(relay.reshape(const_6188.astype('int8'), [16, 16, 7]), relay.reshape(const_6189.astype('float32'), []), ), 3)
output = relay.Tuple([call_6161,call_6179,call_6187,const_6188,const_6189,])
output2 = relay.Tuple([call_6162,call_6180,call_6190,const_6188,const_6189,])
func_6200 = relay.Function([], output)
mod['func_6200'] = func_6200
mod = relay.transform.InferType()(mod)
output = func_6200()
func_6201 = relay.Function([], output)
mutated_mod['func_6201'] = func_6201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_6207 = relay.TupleGetItem(func_5744_call(), 0)
call_6208 = relay.TupleGetItem(func_5746_call(), 0)
uop_6212 = relay.acosh(call_6207.astype('float32')) # shape=(3, 13, 15)
uop_6214 = relay.acosh(call_6208.astype('float32')) # shape=(3, 13, 15)
uop_6215 = relay.log2(uop_6212.astype('float32')) # shape=(3, 13, 15)
uop_6217 = relay.log2(uop_6214.astype('float32')) # shape=(3, 13, 15)
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
var_6248 = relay.var("var_6248", dtype = "float32", shape = ())#candidate|6248|()|var|float32
var_6249 = relay.var("var_6249", dtype = "float32", shape = (720,))#candidate|6249|(720,)|var|float32
call_6247 = relay.TupleGetItem(func_2471_call(relay.reshape(var_6248.astype('float32'), []), relay.reshape(var_6249.astype('float32'), [1, 720]), ), 4)
call_6250 = relay.TupleGetItem(func_2474_call(relay.reshape(var_6248.astype('float32'), []), relay.reshape(var_6249.astype('float32'), [1, 720]), ), 4)
output = relay.Tuple([uop_6215,call_6247,var_6248,var_6249,])
output2 = relay.Tuple([uop_6217,call_6250,var_6248,var_6249,])
func_6252 = relay.Function([var_6248,var_6249,], output)
mod['func_6252'] = func_6252
mod = relay.transform.InferType()(mod)
mutated_mod['func_6252'] = func_6252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6252_call = mutated_mod.get_global_var('func_6252')
var_6254 = relay.var("var_6254", dtype = "float32", shape = ())#candidate|6254|()|var|float32
var_6255 = relay.var("var_6255", dtype = "float32", shape = (720,))#candidate|6255|(720,)|var|float32
call_6253 = func_6252_call(var_6254,var_6255,)
output = call_6253
func_6256 = relay.Function([var_6254,var_6255,], output)
mutated_mod['func_6256'] = func_6256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_6280 = func_5708_call()
call_6281 = func_5708_call()
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
var_6297 = relay.var("var_6297", dtype = "float64", shape = (6, 20))#candidate|6297|(6, 20)|var|float64
call_6296 = relay.TupleGetItem(func_5610_call(relay.reshape(var_6297.astype('float64'), [120,])), 2)
call_6298 = relay.TupleGetItem(func_5612_call(relay.reshape(var_6297.astype('float64'), [120,])), 2)
func_1430_call = mod.get_global_var('func_1430')
func_1433_call = mutated_mod.get_global_var('func_1433')
const_6304 = relay.const([3,7,5,-9,-10,-8,2,-8,5,-9,-2,-7,-8,6,-10,-2,-2,-4,-1,-8,1,-6,10,-7,-7,-6,-7,-8,5,-4,-3,-7,3,2,4,7,-7,-10,6,-2,6,-4,2,-10,5,4,-10,3,-4,-9,4,-6,8,10,5,-9,-3,-6,4,-3,-9,7,2,5,2,6,2,10,10,-6,-3,10,9,-10,3,3,4,5,7,-2,6,8,-2,9,-8,10,1,7,7,4,3,-6,-7,-1,-1,-5,2,4,-4,7,8,-5,-7,-1,-2,-8,2,1,5,4,-6,-10,2,4,6,10,-9,5,7,-4,-10,-3,-6,-4,8,-6,6,-5,-1,6,10,-3], dtype = "int64")#candidate|6304|(132,)|const|int64
call_6303 = relay.TupleGetItem(func_1430_call(relay.reshape(const_6304.astype('int64'), [11, 2, 6])), 1)
call_6305 = relay.TupleGetItem(func_1433_call(relay.reshape(const_6304.astype('int64'), [11, 2, 6])), 1)
uop_6310 = relay.log2(call_6303.astype('float32')) # shape=(11, 2, 6)
uop_6312 = relay.log2(call_6305.astype('float32')) # shape=(11, 2, 6)
uop_6325 = relay.erf(uop_6310.astype('float32')) # shape=(11, 2, 6)
uop_6327 = relay.erf(uop_6312.astype('float32')) # shape=(11, 2, 6)
output = relay.Tuple([call_6280,call_6296,var_6297,const_6304,uop_6325,])
output2 = relay.Tuple([call_6281,call_6298,var_6297,const_6304,uop_6327,])
func_6334 = relay.Function([var_6297,], output)
mod['func_6334'] = func_6334
mod = relay.transform.InferType()(mod)
mutated_mod['func_6334'] = func_6334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6335 = relay.var("var_6335", dtype = "float64", shape = (6, 20))#candidate|6335|(6, 20)|var|float64
func_6334_call = mutated_mod.get_global_var('func_6334')
call_6336 = func_6334_call(var_6335)
output = call_6336
func_6337 = relay.Function([var_6335], output)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6371 = relay.const([[[9.645084,5.006827,-6.442851,-0.416806,-5.735345,7.834114,-7.820773],[0.336895,-3.903913,9.116447,-2.082202,2.079364,-6.855615,-8.037769],[0.465107,6.653476,7.919053,-8.950365,3.913691,3.362409,-2.171820],[7.445903,1.972045,2.735478,-1.752406,-4.085348,3.090543,5.000584],[-8.475885,1.500967,1.196167,-7.067070,-3.595951,-2.839006,-7.804810],[9.648148,0.238557,9.405116,6.279975,-3.889797,2.980591,4.145748],[-9.638751,-6.712716,-4.975301,2.302447,-8.400568,7.329803,-0.422883],[0.299777,7.637143,7.859901,5.949896,0.510236,-9.343441,-8.676505],[2.876797,-2.289990,-0.131721,-4.497107,-3.950463,8.067228,-1.934752],[3.423099,-2.968300,3.117719,-3.463319,-9.345309,5.923906,-3.758487],[2.080104,6.243994,-6.663007,1.735875,-3.415911,-7.389957,6.691670]],[[-1.532991,-6.876742,-2.572515,-9.876425,-1.047951,-8.688548,-0.471378],[-0.731335,2.522188,9.023477,-7.322289,-2.594491,6.582412,-2.658049],[-1.745585,6.372996,5.232012,-3.806306,-2.003481,6.516930,5.297726],[-2.179974,3.174090,2.084787,-4.506554,8.454439,-6.710048,-9.087139],[-9.334041,1.046414,-3.307598,2.632015,-8.148206,7.111614,-7.586026],[4.813264,8.199654,8.816104,1.883858,3.188013,-2.639015,-7.925089],[4.771098,-1.448528,9.743301,-1.555521,-0.156134,9.609186,1.698764],[1.089086,3.478174,-5.473607,-5.764391,8.727634,-4.355997,-8.586193],[5.736481,3.626161,0.515130,2.248535,-8.186712,5.102570,9.666400],[7.740157,8.418015,3.231234,-3.201952,6.869730,0.258535,-4.041905],[-9.603542,-8.126429,3.136176,-7.452618,6.568710,-2.700860,3.965601]],[[-7.571773,-4.994666,9.297268,9.871306,2.527612,-0.842802,-7.309331],[7.327742,5.597321,1.473914,-4.375368,-7.394937,-7.442613,-8.261827],[5.091805,-4.311762,-2.033554,6.929076,-0.203431,-5.550903,-6.746286],[6.423453,6.016085,3.812281,-2.247863,-3.014712,-8.126694,9.761746],[5.386762,5.983601,0.310734,-0.707736,-7.117294,9.552054,-7.207075],[-9.391353,4.301849,-7.130635,1.023594,0.209775,-5.462142,-7.931702],[-0.146961,5.656386,5.056189,-8.901443,-7.310818,-8.050229,1.252571],[-6.693343,-8.843345,-0.010104,-1.450819,-3.494379,0.520392,2.572240],[6.606682,-3.614915,9.101307,1.534560,-0.826692,3.518049,7.141291],[0.722568,5.045105,-8.013215,5.262214,1.441141,5.779237,9.934679],[-2.907350,9.473408,-7.558323,4.010293,4.474300,-3.209490,0.927225]],[[6.105351,2.312440,0.587425,-6.127162,-8.172325,-2.476542,8.976077],[2.245282,-0.489636,9.200243,-4.411584,7.432609,9.179504,-8.928747],[-7.929021,6.414503,-2.191607,3.797678,9.631829,-8.764978,4.509125],[-9.018340,-2.387298,4.647100,2.609193,-0.686367,-7.350908,3.295716],[7.082217,3.240973,2.221944,5.681926,8.711801,2.189956,-7.885153],[8.040049,7.878647,-3.179502,0.141476,-0.299833,-8.406425,-6.122245],[1.625528,-9.841986,-7.540707,-2.481786,-0.779218,5.338909,-2.643086],[-6.735893,-8.336605,-5.421469,8.303325,-3.218347,-9.582062,9.783452],[8.598064,0.678244,-1.713155,2.236952,3.048537,-1.971447,9.125968],[-8.475437,9.273133,-2.771687,-8.487509,0.154451,8.448776,-8.181065],[-3.805435,-3.512146,-4.506011,-3.241291,5.186444,8.282248,-5.261908]],[[-1.773065,4.826858,2.334568,-4.222149,5.008768,5.517038,-9.072709],[-8.371346,-0.508243,5.427243,-7.341067,8.977277,-2.673980,3.557220],[3.341442,2.085316,5.241740,-8.343256,9.665603,7.849335,9.925388],[5.469580,7.100393,5.503375,2.150911,8.674797,-1.945714,-3.017163],[1.968155,-3.242561,6.223637,0.730342,-7.606078,-9.991276,-2.078455],[-1.169691,-6.171709,5.903867,8.674315,2.326272,9.165369,6.890543],[0.162188,-2.357834,3.275414,-8.166411,9.640875,7.830985,7.059445],[8.298525,8.943826,-6.417068,-4.008990,-4.732199,-8.879019,-3.295075],[-7.160173,5.065443,7.389579,-6.384442,-4.478411,-4.331128,-5.459476],[5.091349,4.882322,8.508975,3.745641,-9.113703,-2.150995,2.408363],[-1.865890,-5.170301,7.707654,9.131499,-3.490259,1.810973,-8.469156]],[[-8.060714,-4.551421,-3.848110,-0.588665,-0.241009,0.232919,0.436560],[8.565655,-4.051547,-3.435287,-8.989996,-1.967849,4.735836,-2.885681],[0.824972,-7.627655,8.747935,-0.655707,-4.659288,-7.652548,-1.992174],[2.841709,5.255476,-5.620794,-6.059594,-2.234790,4.216911,-6.471048],[3.161149,1.337511,7.933016,-0.722512,-3.087469,4.315717,-2.284177],[-4.964331,0.949392,-4.909731,-5.757553,7.194325,-5.658708,-3.093542],[-6.405709,-9.351784,7.597167,3.575947,9.291951,4.237199,-7.608477],[-4.301739,-7.278763,3.508365,-3.052733,-0.751970,-9.178155,4.505515],[-8.207355,-0.743150,6.834704,-0.485436,8.265973,6.008779,-6.761985],[-6.654983,6.542688,6.542755,8.208675,-0.642803,-6.152229,0.657607],[-4.964016,2.713422,-6.115660,3.789219,-2.335403,-4.658066,0.868560]],[[-1.195309,-6.122750,-6.997009,5.193327,-2.109662,-5.993220,-2.842592],[8.685409,-2.483162,6.687991,-3.754362,6.285868,5.669846,-5.223714],[8.700475,7.397372,2.252290,1.646804,-4.166537,5.483139,5.373673],[3.299976,-9.904227,6.046084,-3.499590,0.525787,-3.344353,-5.381058],[-8.346085,0.369918,1.083814,-3.490165,2.777182,-1.653642,-1.192745],[-1.905347,-0.012287,-7.493768,-0.828040,5.833305,-4.614621,-8.708807],[8.698356,-9.957207,6.946516,-8.066032,-6.539505,3.778034,-8.673612],[9.067272,9.780682,-8.091078,2.496403,-0.931981,2.536351,-0.789967],[-9.432966,-4.366223,-1.985841,-0.220667,6.408432,-8.523113,8.321251],[2.285333,8.776982,-6.085316,-6.363910,-8.000670,0.106887,3.306397],[-5.296490,-3.521485,-3.527498,9.146121,7.991521,-3.684080,-3.353331]],[[6.137519,-7.274078,3.232860,5.982235,-3.207357,-8.642531,-2.600046],[-3.916913,-6.921534,4.055126,0.581846,-3.940779,-1.987056,-5.066542],[-1.624231,4.793396,-2.038716,-4.505424,-6.140381,-5.096661,9.513069],[2.739250,-8.352291,5.115771,9.609396,-9.948652,7.356919,3.095462],[-8.467322,-3.926470,-0.215407,-7.645854,-4.641589,-2.522607,9.897028],[9.046641,4.559275,-2.568603,-4.703451,1.443151,-4.950166,7.530915],[-0.669274,-2.195717,-8.246028,4.820568,-4.938254,-9.876084,-2.527274],[6.868176,6.064247,-3.124040,-0.093375,-0.052055,-7.994679,-3.339357],[8.187269,-8.276195,-8.549477,1.993854,-4.902141,4.051766,-4.681209],[1.586764,-4.230075,-2.029001,7.417116,-9.096131,0.177487,1.228155],[-8.540919,6.052152,1.236545,6.308087,-6.261028,-8.866164,0.739326]],[[9.252975,3.860087,-9.305649,-5.879749,3.705709,1.909148,7.031399],[3.914679,4.415946,-7.207518,0.240945,-2.811331,6.961449,7.740319],[4.991801,8.327827,3.695477,5.116242,-5.314126,-8.488270,-2.256976],[0.892316,4.885749,-5.628968,5.698098,7.388259,-1.631020,3.012094],[-4.685962,5.479991,-8.505164,-4.751324,-8.923288,4.335522,6.824553],[-6.836237,-5.584116,8.103815,-3.150962,-6.261716,-2.582236,3.327443],[1.611024,-5.102765,5.755370,-1.445786,-2.103355,9.037624,-7.173820],[3.672257,0.724364,8.658353,-0.180316,5.625084,-8.180943,-5.380933],[4.766125,5.057002,-7.097826,-5.145107,-2.229265,8.836373,3.907982],[0.993802,-7.825911,-1.848371,-3.887508,8.649130,-0.454241,-7.510360],[-7.772256,-8.414631,-4.941725,-6.131590,7.098196,-1.158733,2.864712]],[[6.538165,0.929193,8.404556,1.008651,9.900785,9.850002,-9.987131],[4.882169,7.917816,0.848450,1.854569,5.079710,8.264255,-3.827270],[-3.802336,4.434353,-1.193326,-8.706809,-6.325696,8.171513,-4.914659],[-7.178064,3.828176,3.816335,1.211913,-5.085062,-0.030027,3.343993],[-4.021736,6.996150,6.171901,-5.142254,9.336196,5.605294,7.140655],[6.071828,-5.816518,-2.404980,5.672270,-4.118925,6.248554,1.724433],[-2.053780,9.574373,-7.588303,-2.045508,3.436739,-5.779154,3.252496],[8.049101,-0.128653,-9.719735,-9.824201,-3.036403,-7.833606,2.086258],[7.999434,3.784565,8.890562,9.079788,-5.169149,7.796809,-7.331839],[-0.899713,-3.982084,-1.754405,9.874884,7.219862,-7.997958,9.505259],[-5.743435,-3.196193,-9.337673,7.624055,-2.941861,0.931122,-9.278555]],[[-0.726045,-6.026284,6.413885,-7.149972,-3.795228,-8.168537,-1.982395],[5.053455,-8.235583,-0.567916,-5.799198,-0.693734,-1.074906,-0.994451],[9.379091,-2.107314,5.195420,8.327063,0.626461,0.462140,2.979195],[9.048249,-9.168207,6.915335,-4.553730,6.967801,-7.153349,6.869190],[-1.187783,1.520631,-3.839021,8.208000,-4.797136,-9.712287,1.151373],[8.965768,-6.350362,-5.527218,-0.654714,5.774834,3.579648,6.441658],[-2.697149,-9.773402,-8.913221,0.463237,6.369159,-8.426042,6.374405],[-3.402728,-9.439683,6.183649,-8.348694,3.237779,3.222652,-9.032665],[1.486039,8.502281,-6.290146,-3.666299,2.679850,5.320041,8.744295],[-1.385163,6.242210,7.556504,4.317724,-7.218245,-4.688340,-4.563369],[-0.728443,-1.907450,-8.708139,0.495013,3.926493,6.641322,6.155626]],[[7.123960,-1.315860,7.485717,-1.940980,-5.301102,8.718652,-4.026192],[-2.413876,-3.263156,9.943876,8.577171,-7.392493,-6.496119,-3.094526],[-8.523946,-9.308519,-1.824344,0.825291,-7.379797,-9.605460,1.734738],[1.135280,3.851431,-1.767163,-4.785438,-3.980863,4.739913,7.466348],[-2.773398,6.450067,3.096358,2.531031,6.769587,-3.781456,-3.690269],[-0.364183,-3.492706,0.364441,5.901334,7.728229,8.043921,1.434549],[-5.220176,-7.245063,9.405543,1.899308,-4.427394,-0.457558,-5.624078],[1.852770,-0.324031,-3.178241,-6.070972,-8.570869,-7.295817,8.602265],[-2.395436,-3.844084,1.773149,5.995678,6.849199,-5.755089,9.846277],[1.432850,7.842645,2.055443,-2.329947,-4.530061,3.516562,-0.356070],[1.260512,-2.065152,2.976305,-8.097729,0.043117,3.027915,4.126710]],[[-1.109634,-9.113305,-8.126664,3.449120,3.278973,9.230245,-3.848304],[4.424776,-1.457851,-3.672271,-7.373840,-0.301556,0.358642,-8.673261],[-7.701940,-6.898451,4.769184,-3.256648,-9.712980,9.064390,1.301392],[7.334420,8.198727,-0.391431,4.687313,-7.354264,-0.139325,7.642318],[5.451689,-1.049597,6.003573,-7.257787,-9.815112,-2.141803,-2.851847],[-2.408554,-6.989228,8.616332,-7.186639,-3.908154,8.436317,7.936893],[6.509963,1.126580,6.618104,-3.672923,-6.525438,0.302389,8.283099],[8.013086,9.110628,0.329989,1.337154,3.553976,-0.274015,-4.353116],[8.129640,-3.621831,-0.874602,9.615080,8.504008,-4.088312,-0.359104],[-2.643402,2.532556,-2.893726,-6.119497,-6.959105,-1.085733,5.415849],[7.981191,-6.530931,-8.726087,8.645884,-4.113365,-4.668960,-5.533264]],[[1.353980,-8.691749,-7.586913,2.358825,-7.611303,-4.030084,-9.616456],[-8.294869,-4.079040,1.352446,-7.484960,9.108396,-2.456822,-3.115161],[2.688465,5.063918,-1.183323,9.244132,6.870630,1.422408,-0.545690],[-4.310524,-7.418037,-3.860442,8.653225,-7.646981,6.748761,2.871923],[8.782642,-6.610095,5.457835,-0.034487,1.461267,-3.799687,-1.648956],[-2.157732,-2.351314,1.316993,-3.912440,6.868370,0.634168,9.321740],[1.930962,-0.405925,9.664908,8.162426,-7.642442,-2.802540,8.231662],[-1.145013,-5.468809,-9.519980,-8.338127,5.694319,-9.043094,-8.652184],[-2.706538,-7.361112,-8.648663,0.423983,-3.487008,-5.557130,-3.484821],[-0.850269,-6.344795,1.465971,-1.945897,0.412375,-4.030141,0.419525],[6.657981,-6.181118,1.574457,1.012748,-7.676115,4.459508,7.646075]],[[6.273773,-2.269482,-4.801975,3.031969,7.036127,1.524428,-1.477051],[-0.569448,-9.163939,8.983230,6.644959,-0.667562,-6.687130,9.290920],[3.011702,-4.832866,-2.387529,-9.893420,0.439747,3.986682,3.470759],[2.434598,-9.986815,8.749553,2.156815,0.982809,-0.882657,2.958630],[-5.303732,-9.533949,9.599942,6.283112,-9.592407,-3.424485,9.249877],[-5.527946,5.922038,-6.891203,9.544965,-2.660269,-1.645135,-8.312470],[5.771971,4.015660,-8.841505,8.141874,-6.561677,-1.397361,0.527275],[-2.276868,-5.492353,1.412840,-9.824907,0.320214,-5.828801,-4.131024],[0.644459,7.646378,-2.314981,2.818700,-5.223844,8.075974,5.994796],[0.279105,-3.282892,2.885690,5.976733,-4.697680,-1.241717,0.078621],[-7.857304,7.825691,-1.543155,-4.916675,5.433310,-1.434700,9.492683]]], dtype = "float32")#candidate|6371|(15, 11, 7)|const|float32
uop_6372 = relay.cosh(const_6371.astype('float32')) # shape=(15, 11, 7)
func_5809_call = mod.get_global_var('func_5809')
func_5810_call = mutated_mod.get_global_var('func_5810')
call_6383 = relay.TupleGetItem(func_5809_call(), 0)
call_6384 = relay.TupleGetItem(func_5810_call(), 0)
uop_6386 = relay.tan(uop_6372.astype('float32')) # shape=(15, 11, 7)
output = relay.Tuple([call_6383,uop_6386,])
output2 = relay.Tuple([call_6384,uop_6386,])
func_6421 = relay.Function([], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mutated_mod.get_global_var('func_6421')
call_6422 = func_6421_call()
output = call_6422
func_6423 = relay.Function([], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_6451 = relay.TupleGetItem(func_5788_call(), 1)
call_6452 = relay.TupleGetItem(func_5790_call(), 1)
func_4152_call = mod.get_global_var('func_4152')
func_4156_call = mutated_mod.get_global_var('func_4156')
var_6472 = relay.var("var_6472", dtype = "bool", shape = (520,))#candidate|6472|(520,)|var|bool
var_6473 = relay.var("var_6473", dtype = "float32", shape = (1248,))#candidate|6473|(1248,)|var|float32
call_6471 = relay.TupleGetItem(func_4152_call(relay.reshape(var_6472.astype('bool'), [10, 4, 13]), relay.reshape(var_6473.astype('float32'), [1248,]), ), 2)
call_6474 = relay.TupleGetItem(func_4156_call(relay.reshape(var_6472.astype('bool'), [10, 4, 13]), relay.reshape(var_6473.astype('float32'), [1248,]), ), 2)
output = relay.Tuple([call_6451,call_6471,var_6472,var_6473,])
output2 = relay.Tuple([call_6452,call_6474,var_6472,var_6473,])
func_6483 = relay.Function([var_6472,var_6473,], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6483_call = mutated_mod.get_global_var('func_6483')
var_6485 = relay.var("var_6485", dtype = "bool", shape = (520,))#candidate|6485|(520,)|var|bool
var_6486 = relay.var("var_6486", dtype = "float32", shape = (1248,))#candidate|6486|(1248,)|var|float32
call_6484 = func_6483_call(var_6485,var_6486,)
output = call_6484
func_6487 = relay.Function([var_6485,var_6486,], output)
mutated_mod['func_6487'] = func_6487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_6509 = relay.TupleGetItem(func_6421_call(), 1)
call_6510 = relay.TupleGetItem(func_6423_call(), 1)
func_6252_call = mod.get_global_var('func_6252')
func_6256_call = mutated_mod.get_global_var('func_6256')
var_6517 = relay.var("var_6517", dtype = "float32", shape = ())#candidate|6517|()|var|float32
var_6518 = relay.var("var_6518", dtype = "float32", shape = (720,))#candidate|6518|(720,)|var|float32
call_6516 = relay.TupleGetItem(func_6252_call(relay.reshape(var_6517.astype('float32'), []), relay.reshape(var_6518.astype('float32'), [720,]), ), 1)
call_6519 = relay.TupleGetItem(func_6256_call(relay.reshape(var_6517.astype('float32'), []), relay.reshape(var_6518.astype('float32'), [720,]), ), 1)
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
var_6537 = relay.var("var_6537", dtype = "float64", shape = (120,))#candidate|6537|(120,)|var|float64
call_6536 = relay.TupleGetItem(func_5610_call(relay.reshape(var_6537.astype('float64'), [120,])), 2)
call_6538 = relay.TupleGetItem(func_5612_call(relay.reshape(var_6537.astype('float64'), [120,])), 2)
output = relay.Tuple([call_6509,call_6516,var_6517,var_6518,call_6536,var_6537,])
output2 = relay.Tuple([call_6510,call_6519,var_6517,var_6518,call_6538,var_6537,])
func_6556 = relay.Function([var_6517,var_6518,var_6537,], output)
mod['func_6556'] = func_6556
mod = relay.transform.InferType()(mod)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mutated_mod.get_global_var('func_6556')
var_6558 = relay.var("var_6558", dtype = "float32", shape = ())#candidate|6558|()|var|float32
var_6559 = relay.var("var_6559", dtype = "float32", shape = (720,))#candidate|6559|(720,)|var|float32
var_6560 = relay.var("var_6560", dtype = "float64", shape = (120,))#candidate|6560|(120,)|var|float64
call_6557 = func_6556_call(var_6558,var_6559,var_6560,)
output = call_6557
func_6561 = relay.Function([var_6558,var_6559,var_6560,], output)
mutated_mod['func_6561'] = func_6561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6577 = relay.TupleGetItem(func_5675_call(), 0)
call_6578 = relay.TupleGetItem(func_5677_call(), 0)
output = call_6577
output2 = call_6578
func_6585 = relay.Function([], output)
mod['func_6585'] = func_6585
mod = relay.transform.InferType()(mod)
output = func_6585()
func_6586 = relay.Function([], output)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6587 = relay.TupleGetItem(func_6082_call(), 4)
call_6588 = relay.TupleGetItem(func_6083_call(), 4)
output = relay.Tuple([call_6587,])
output2 = relay.Tuple([call_6588,])
func_6592 = relay.Function([], output)
mod['func_6592'] = func_6592
mod = relay.transform.InferType()(mod)
output = func_6592()
func_6593 = relay.Function([], output)
mutated_mod['func_6593'] = func_6593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5809_call = mod.get_global_var('func_5809')
func_5810_call = mutated_mod.get_global_var('func_5810')
call_6610 = relay.TupleGetItem(func_5809_call(), 0)
call_6611 = relay.TupleGetItem(func_5810_call(), 0)
output = call_6610
output2 = call_6611
func_6619 = relay.Function([], output)
mod['func_6619'] = func_6619
mod = relay.transform.InferType()(mod)
output = func_6619()
func_6620 = relay.Function([], output)
mutated_mod['func_6620'] = func_6620
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6676 = relay.const([[[-9,2,1,-2,10,-8,-8,-10,-5,-1,-8],[7,4,-8,-1,-10,1,-10,4,1,1,-2],[10,-1,-10,5,-1,-5,-10,-7,-2,-1,-10],[7,-4,9,-10,6,1,-6,-10,-1,1,-5],[3,-4,-10,7,-8,6,-3,-9,4,-2,5],[-9,8,5,8,-2,3,-3,1,-4,4,-4],[5,-9,-1,5,10,-2,-6,10,8,-4,-10],[-3,-8,-3,-7,1,-10,-10,-1,8,2,2],[8,1,-5,-6,-1,7,8,-4,-7,-6,5],[-10,4,10,2,2,-3,6,8,-5,1,-8],[4,-5,-7,9,-8,8,1,-5,-9,10,2],[4,-8,-6,-4,9,10,-8,4,9,-6,-1],[7,7,7,-2,5,-6,6,1,10,-6,1]]], dtype = "uint64")#candidate|6676|(1, 13, 11)|const|uint64
var_6677 = relay.var("var_6677", dtype = "uint64", shape = (13, 13, 11))#candidate|6677|(13, 13, 11)|var|uint64
bop_6678 = relay.logical_xor(const_6676.astype('uint64'), var_6677.astype('uint64')) # shape=(13, 13, 11)
bop_6681 = relay.right_shift(const_6676.astype('uint32'), bop_6678.astype('uint32')) # shape=(13, 13, 11)
var_6684 = relay.var("var_6684", dtype = "uint64", shape = (6, 13, 11))#candidate|6684|(6, 13, 11)|var|uint64
bop_6685 = relay.bitwise_and(const_6676.astype('int8'), var_6684.astype('int8')) # shape=(6, 13, 11)
var_6688 = relay.var("var_6688", dtype = "uint64", shape = (1, 13, 11))#candidate|6688|(1, 13, 11)|var|uint64
bop_6689 = relay.multiply(const_6676.astype('int16'), relay.reshape(var_6688.astype('int16'), relay.shape_of(const_6676))) # shape=(1, 13, 11)
output = relay.Tuple([bop_6681,bop_6685,bop_6689,])
output2 = relay.Tuple([bop_6681,bop_6685,bop_6689,])
func_6704 = relay.Function([var_6677,var_6684,var_6688,], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
var_6705 = relay.var("var_6705", dtype = "uint64", shape = (13, 13, 11))#candidate|6705|(13, 13, 11)|var|uint64
var_6706 = relay.var("var_6706", dtype = "uint64", shape = (6, 13, 11))#candidate|6706|(6, 13, 11)|var|uint64
var_6707 = relay.var("var_6707", dtype = "uint64", shape = (1, 13, 11))#candidate|6707|(1, 13, 11)|var|uint64
output = func_6704(var_6705,var_6706,var_6707,)
func_6708 = relay.Function([var_6705,var_6706,var_6707,], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6585_call = mod.get_global_var('func_6585')
func_6586_call = mutated_mod.get_global_var('func_6586')
call_6825 = func_6585_call()
call_6826 = func_6585_call()
var_6843 = relay.var("var_6843", dtype = "uint64", shape = (3, 13, 15))#candidate|6843|(3, 13, 15)|var|uint64
bop_6844 = relay.add(call_6825.astype('int16'), relay.reshape(var_6843.astype('int16'), relay.shape_of(call_6825))) # shape=(3, 13, 15)
bop_6847 = relay.add(call_6826.astype('int16'), relay.reshape(var_6843.astype('int16'), relay.shape_of(call_6826))) # shape=(3, 13, 15)
func_6040_call = mod.get_global_var('func_6040')
func_6044_call = mutated_mod.get_global_var('func_6044')
var_6853 = relay.var("var_6853", dtype = "bool", shape = (1470,))#candidate|6853|(1470,)|var|bool
const_6854 = relay.const([8.244203,-3.354667,-8.083554,1.338587,-5.958376,-3.011888,-7.723552,3.850489,-4.452458,2.595636,-3.383040,-8.553787,6.897776,-7.232363,1.443143,-1.620356,-6.934637,7.412599,7.674741,8.619023,-9.167711,5.931552,1.955830,2.368878,-1.279282,-7.441663,6.482475,-3.251898,4.325212,4.052714,-0.657220,2.299979,-1.798012,5.518012,9.158108,7.634744,-8.040105,-7.161927,-7.878898,-0.293684,-0.698896,9.139838,9.269718,2.601331,-8.477691,3.418960,-2.629310,2.656030,4.190253,-3.335472,9.331972,-3.473317,6.802491,-9.424328,7.533403,-4.751642,3.623578,0.353234,1.930599,1.195825,3.239416,-5.510910,-1.863890,9.628226,3.251954,-4.972237,5.463843,-8.338175,-6.482336,-6.961878,8.223486,0.714457,7.470693,7.451862,5.411459,-3.001995,5.902721,-1.954723,5.209104,-2.391260,-0.261720,1.348689,5.818486,-0.160459,-8.041312,0.006999,7.412432,4.884679,6.149487,-0.188983,3.890814,-1.893169,3.187191,-9.393217,-1.655472,3.121476,-9.682712,-6.306519,0.549720,7.521035,-9.768254,9.013569,0.262720,-6.230043,-0.781651,-8.569455,1.476741,-7.541893,5.858568,3.571457,2.686299,-4.209661,-4.823935,-5.907556,9.864642,2.091970,-6.475172,-3.285524,3.730941,9.995056,5.115127,-1.852443,-0.648818,5.826301,0.042848,5.531340,-1.387320,-2.450264,-9.235840,-5.009237,-6.960771,9.016172,-1.820944,5.635065,-7.964813,4.810057,-8.604134,7.070431,7.491983,-7.172782,9.033308,9.168011,-3.850216,-9.180459,-7.167219,-1.674621,8.931419,-3.232247,6.177097,7.004312,-4.137422,2.023732,-4.137537,9.646299,-0.426947,3.640131,2.090494,8.265667,-0.981684,-6.032650,-6.000442,-6.472102,7.718891,8.114581,-7.127598,-3.465516,-8.313324,4.671018,-3.589469,-8.779732,-7.597652,8.020763,-5.705070,5.097807,-1.579477,-7.961234,9.055467,-4.144655,5.781126,3.008846,7.530479,-6.224322,-9.505161,-5.008243,-2.788485,1.524194,-1.399671,-9.208369,9.456201,-6.894445,6.090780,-2.991181,5.835915,1.733574,-4.231991,-0.221676,3.378597,2.544215,-8.833286,-8.976769,-1.590202,4.757275,-1.841037,-1.620195,-2.908598,-2.989064,1.582120,-1.763557,0.295759,5.921146,-7.006893,9.235434,-5.477573,9.551362,2.553346,6.072837,9.528370,-7.736894,-2.688255,2.426058,7.168668,-1.493266,-2.052083,7.775672,0.510915,-4.926614,-3.361395,4.088722,-7.443284,4.444775,-6.541034,-1.057903,-6.155677,-7.018545,5.389236,2.861249,2.760234,1.671814,-0.120897,5.744580,1.294065,0.442796,-0.607534,-3.120471,-3.092631,-8.355310,-6.107414,-9.511560,4.490821,9.087185,4.438337,-5.792245,-7.950544,-5.492411,-6.654139,-6.585423,4.993693,-1.308124,-3.574349,7.457149,-8.296572,-1.489679,-2.550508,2.410049,8.837093,-4.360305,5.250764,1.672427,-4.075875,-3.391188,2.639857,-4.986998,3.051139,-0.658874,0.403376,-9.327222,0.585477,-2.265495,5.702295,-4.375336,-5.050747,9.556135,0.054525,0.640122,1.548193,-2.081132,8.623934,2.515716,9.521800,-3.438034,8.201572,3.090364,0.739301,-7.397748,9.860004,6.187384,7.838329,-1.108066,1.639657,-7.991774,9.469570,-6.180546,3.734760,0.069531,5.664809,5.720079,-8.089873,-6.930565,-4.483634,2.169801,8.190400,8.039682,1.682218,3.806075,-5.887559,4.510013,-8.936218,-7.835517,-3.057310,4.067763,4.484126,-5.242723,6.193061,-7.846105,-0.496379,6.228342,-4.345272,-5.251618,-8.543681,7.851502,-7.221786,3.127104,-2.378746,-8.329422,1.477499,-6.511418,6.744643,3.615939,3.873199,-7.098127,7.840340,3.392509,6.945100,1.245662,4.469625,-7.381966,-9.966722,5.429598,1.793913,0.673719,6.310679,8.456707,-2.673013,8.326204,-9.117163,9.626806,8.727753,-2.808271,9.545790,0.698260,-3.490732,-6.928157,6.023712,4.922510,5.218075,1.691793,-0.456322,0.682172,1.330407,7.152666,5.283807,5.558590,8.256086,0.268609,-8.517425,-9.592455,-2.108049,6.206155,-0.967285,-9.668162,3.717762,-3.439954,-7.363684,-0.027472,-0.281996,-4.247430,4.416939,-3.455152,6.780493,5.586899,-5.111001,-5.354123,-9.800838,-9.667742,-6.780861,-2.623903,5.765489,5.894980,9.736774,5.564645,7.091941,5.499097,-1.774214,-1.322434,3.276091,3.935173,4.459053,-7.663002,7.522303,-8.242828,9.172621,6.189513,5.578503,-6.092911,-7.909130,-3.307429,6.131005,-9.939601,9.934786,4.813281,-3.337497,4.940956,-4.384589,4.530236,-4.450125,7.990575,7.402511,-3.274285,-6.674523,2.715305,8.593336,-2.843330,3.634203,-7.701967,8.335921,7.743279,-1.678449,0.418644,-3.176552,-7.370373,-6.270695,-9.249195,-4.488284,-6.018003,8.289719,1.618909,0.210372,-5.118919,6.500563,-8.696204,-2.432368,-5.828357,-7.229202,-1.161519,3.635511,1.991519,-1.390542,5.028124,3.958781,2.820185,0.403920,7.605593,2.745384,4.028948,-0.724726,9.384674,9.641280,0.607296,-2.546804,-7.607616,-5.606269,7.306287,7.705765,6.089514,9.880514,5.846364,1.626599,0.246916,-9.953331,2.276670,-3.248267,-5.683310,2.879928,1.160211,8.105331,1.631813,-6.187264,-2.432908,2.760733,-2.318218,0.254170,4.130631,-4.996465,4.338172,6.237971,3.157971,4.700441,0.390876,7.124086,-7.948542,-9.765872,-6.981105,9.410207,-2.714355,-5.606356,4.347099,-8.589913,-5.003563,2.835410,-6.196761,6.597221,4.626475,4.685094,8.103657,0.279311,6.738928,0.617824,-2.725866,-2.953065,2.313335,5.290058,-0.549904,8.261246,-3.183674,-3.082888,0.575674,-8.873387,5.151178,4.749975,-0.289135,-3.386502,-4.524135,6.118293,-5.520585,1.902797,-7.614370,-6.776347,-8.638896,-2.702042,5.468162,3.645223,-6.653776,0.447958,0.816146,-9.331860,4.557050,6.623491,-5.807292,4.706776,9.310833,-8.583238,1.402556,-1.852995,-7.094869,4.221850,-3.164270,-8.468058,-6.635043,-2.208273,-8.804744,-8.175630,8.917116,2.303190,-6.338252,2.571448,5.969183,-7.092532,-7.038685,-4.970650,4.582755,-0.888873,7.421451,-1.587879,-3.570976,3.325279,3.912754,2.780672,-0.858132,-0.412910,1.744499,-2.843496,2.914391,4.339238,7.946726,-9.983815,3.458033,-6.691360,3.587080,1.737223,4.845078,-8.326119,-3.916422,-8.934990,-3.506010,5.156334,-6.298104,-2.457904,-7.752016,2.854307,0.973546,-4.495380,6.496407,0.033937,2.862784,-2.775329,-6.292731,3.074922,-2.305710,0.247013,-2.658042,-5.907156,-4.069412,-2.394343,0.181243,-2.824958,7.956192,0.983302,-9.341358,5.896932,5.859449,-4.378517,-7.668766,-3.234669,0.982128,4.167449,4.828658,-2.761813,-5.225502,-7.967794,7.317467,0.383054,-3.021509,1.296214,3.984889,-5.728632,-2.726236,-8.101728,7.571061,-2.374485,-7.322277,-7.843234,2.472896,2.093609,-8.586220,8.112943,8.180422,-6.955747,-0.717832,-6.478388,3.010836,-0.114090,0.468669,-3.470211,-3.229286,-1.709241,2.523704,-6.068118,4.808656,-1.072652,0.026909,3.992587,-4.842562,-1.821237,9.241740,5.763036,-2.416673,8.981587,-0.912492,-8.013626,-1.414027,-5.360283,0.045475,-7.703834,-2.390548,-1.482776,2.366237,-0.707283,-5.395873,-2.858470,5.291782,-9.065540,2.586369,-4.253187,3.353776,-1.756816,2.995450,6.432136,3.278321,5.947718,4.077258,-3.741333,-8.780227,-8.585706,1.807205,-7.949870,-2.188481,-1.863287,-7.355934,-1.108274,2.460087,8.741730,1.751174,-9.975374,3.048219,-0.442620,9.516902,1.101631,-3.781575,-3.806862,-3.563907,-6.774372,6.173809,-4.509634,7.355466,-0.410924,-1.172354,7.312568,-1.482531,-9.461533,-5.569291], dtype = "float32")#candidate|6854|(720,)|const|float32
call_6852 = relay.TupleGetItem(func_6040_call(relay.reshape(var_6853.astype('bool'), [98, 15]), relay.reshape(const_6854.astype('float32'), [720,]), relay.reshape(call_6825.astype('float32'), [3, 13, 15]), ), 6)
call_6855 = relay.TupleGetItem(func_6044_call(relay.reshape(var_6853.astype('bool'), [98, 15]), relay.reshape(const_6854.astype('float32'), [720,]), relay.reshape(call_6825.astype('float32'), [3, 13, 15]), ), 6)
output = relay.Tuple([bop_6844,call_6852,var_6853,const_6854,])
output2 = relay.Tuple([bop_6847,call_6855,var_6853,const_6854,])
func_6856 = relay.Function([var_6843,var_6853,], output)
mod['func_6856'] = func_6856
mod = relay.transform.InferType()(mod)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6856_call = mutated_mod.get_global_var('func_6856')
var_6858 = relay.var("var_6858", dtype = "uint64", shape = (3, 13, 15))#candidate|6858|(3, 13, 15)|var|uint64
var_6859 = relay.var("var_6859", dtype = "bool", shape = (1470,))#candidate|6859|(1470,)|var|bool
call_6857 = func_6856_call(var_6858,var_6859,)
output = call_6857
func_6860 = relay.Function([var_6858,var_6859,], output)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_6862 = relay.TupleGetItem(func_6200_call(), 0)
call_6863 = relay.TupleGetItem(func_6201_call(), 0)
uop_6864 = relay.atan(call_6862.astype('float64')) # shape=(3, 13, 15)
uop_6866 = relay.atan(call_6863.astype('float64')) # shape=(3, 13, 15)
output = relay.Tuple([uop_6864,])
output2 = relay.Tuple([uop_6866,])
func_6874 = relay.Function([], output)
mod['func_6874'] = func_6874
mod = relay.transform.InferType()(mod)
mutated_mod['func_6874'] = func_6874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mutated_mod.get_global_var('func_6874')
call_6875 = func_6874_call()
output = call_6875
func_6876 = relay.Function([], output)
mutated_mod['func_6876'] = func_6876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_6939 = relay.TupleGetItem(func_5675_call(), 0)
call_6940 = relay.TupleGetItem(func_5677_call(), 0)
func_4059_call = mod.get_global_var('func_4059')
func_4065_call = mutated_mod.get_global_var('func_4065')
var_6944 = relay.var("var_6944", dtype = "int64", shape = (40,))#candidate|6944|(40,)|var|int64
var_6945 = relay.var("var_6945", dtype = "float64", shape = (120, 1))#candidate|6945|(120, 1)|var|float64
const_6946 = relay.const(-3.869348, dtype = "float32")#candidate|6946|()|const|float32
const_6947 = relay.const([-4.759003,-0.846844,-6.448558,3.540507,-9.034258,-0.026954,9.838712,-7.449686,-1.776042,8.883119,-1.039110,-9.504117,-4.695249,-2.162866,-7.422198,1.387029,-2.128439,-5.906936,5.412783,0.423562,4.536239,-5.767606,1.582370,2.749401,1.402346,-9.233051,-9.726832,9.693740,1.867690,-0.144929,7.851718,-3.395876,8.453805,-9.672436,6.908895,-4.627196,9.169344,2.343529,9.165961,-6.924524,1.285233,-6.491713,-0.668434,-7.598621,8.929347,3.401340,4.325576,7.512995,-6.096112,6.991414,8.948015,-8.808256,-0.730249,3.729950,0.940304,-4.846027,-1.117934,-4.525534,0.826072,0.559668,-8.491882,4.241303,-7.778757,-4.024721,5.203834,-6.125407,-5.933900,4.733152,1.904239,-3.094613,2.081534,3.620104,-0.486969,-4.726433,0.105623,-0.498107,-3.622720,5.606090,-7.571682,9.492215,2.747135,9.515771,2.687231,-9.112578,1.906112,0.383313,9.768532,2.055610,-2.760050,0.105182,4.997902,6.548291,-9.332323,-2.829703,3.470695,-8.551016,-7.818418,-9.773380,-3.327137,-8.991639,7.786797,-9.000518,-8.460330,-5.234396,6.919041,-3.506293,-9.079660,-1.501127,-0.810998,1.213946,4.087363,-0.681232,3.120030,8.273029,0.395492,-4.966056,6.705163,-5.714921,-7.388904,-3.118336,-9.281742,-6.247899,4.810252,2.471812,5.282956,2.632788,-1.493779,-8.511694,-8.414417,-7.152171,8.669448,-8.607493,0.760154,8.192802,-5.637207,-9.376021,-6.131500,5.620010,9.159779,-7.304192,1.710390,0.985598,3.505295,-8.348042,5.021531,-1.270961,5.304821,7.803932,6.816831,-4.127515,8.066589,-4.490339,1.458556,8.810275,0.886028,0.096299,5.878920,-6.337879,5.044283,-3.755489,3.538802,2.288490,9.987785,-9.273673,2.707705,-4.610949,7.924903,5.519078,-9.952167,0.752509,-1.964349,5.168407,-3.561116,-6.730220,-9.137200,-8.175979,2.157147,-9.987424,4.716356,1.774512,7.271677,3.153786,7.915464,3.791669,4.559250,8.003191,3.271541,8.867582,-2.241598,0.693220,-4.421134,7.924892,-6.128273,-5.835080,-4.373807,-2.981520,-7.919765,-9.830780,-4.653180,7.742101,-8.730533,8.246619,8.490789,8.447134,5.676011,-5.233587,2.315987,7.714441,1.375870,7.948071,-6.194656,3.159976,9.796540,-5.532820,6.020556,2.510933,-6.952671,-7.947547,1.982432,3.550001,-1.483571,-3.860568,5.915637,2.043875,0.738494,-6.828961,6.687979,-2.225858,8.518853,-8.305228,3.720830,5.191356,6.622538,2.708156,7.114908,5.156746,6.150946,7.528959,1.533205,2.602400,7.602374,-3.880562,-6.298360,3.375153,5.161187,-5.570718,4.439775,-4.753871,0.538243,1.015638,6.396337,0.828095,-3.254636,0.700252,7.456631,2.812748,5.971024,1.421482,-7.726364,8.712924,2.345206,-4.183126,7.934674,9.885341,5.807708,-8.384913,3.029147,3.929036,-2.642096,8.006232,5.915185,1.555032,7.755074,-2.584459,2.944158,2.030281,-2.152714,-5.249928,2.377137,-4.962918,-0.512102,2.889264,-6.446893,-0.958777,6.182156,0.421271,-3.397387,1.486733,0.229493,4.122182,-0.916901,1.455188,0.810678,-2.720291,2.829002,2.842392,1.871015,1.854846,3.730232,4.527871,-0.630605,8.714679,4.652698,-4.792989,7.418335,1.113648,-8.351386,-0.981437,-7.234654,-6.752623,5.547499,-8.796423,-2.986279,2.959961,2.642467,9.578608,4.651058,-9.349353,5.599875,5.944916,-9.226303,-3.217284,-2.872835,-3.420750,-8.297442,-4.487007,-5.065702,-5.257617,6.383815,-1.029474,-1.875318,-3.286127,7.001641,-4.906290,0.557393,8.333309,2.782998,-4.964427,-6.656741,-2.964325,-4.954193,-0.426057,3.207302,7.309718,-2.002108,6.829106,8.618813,-5.648046,-5.970362,-0.184163,4.172652,-7.144048,1.551685,-7.763197,8.239158,-9.413366,7.246938,1.179359,-3.194113,2.420930,-4.197055,1.378495,-7.337711,-1.583378,9.692139,-7.299445,-4.638516,6.741127,-7.614399,6.600485,-0.633152,1.462567,4.169450,4.219050,7.776555,-1.414444,9.873879,-1.737286,-1.738075,4.735373,6.397564,-0.165052,-2.243409,5.825260,3.069358,-3.656698,8.281969,8.677135,-7.135086,-8.297763,-5.537950,-8.075225,-1.792867,0.615398,8.919251,-4.938403,0.666654,2.698479,-3.107885,-0.879809,0.934176,-4.416064,-9.714989,1.854438,-9.791469,-8.026235,4.233708,-7.973350,7.945177,-8.874296,-0.374694,0.868987,2.995175,9.583072,-9.912593,9.257490,4.554511,-6.819761,8.652261,-8.228265,8.073468,-3.988835,5.734350,-4.366139,7.671552,-1.590556,-2.516011,2.104161,-3.588972,4.120584,-3.140261,-4.915148,-9.365334,3.540677,1.357328,9.104759,-5.835191,8.730223,8.978107,4.745633,-8.208229,-9.626275,1.011957,-7.743445,5.783387,-7.179290,-2.873340,2.798514,5.406914,-7.516846,-2.951347,1.872193,-1.546145,8.917107,4.992391,-6.169587,-5.579932,-0.367121,-3.565224,2.869927,-5.923640,5.113605,-3.763524,-9.177053,8.418357,-3.637905,-1.148149,-4.835858,-8.021765,-4.307499,-1.846065,5.179305,-7.414241,3.272225,-6.130780,-0.017610,-7.175931,0.145953,-4.673065,7.815452,2.231676,3.880302,1.104522,-1.785110,4.126696,2.127395,5.009304,-7.515615,-0.670689,-1.083964,-9.437303,-5.523922,-3.557951,-2.383804,2.570105,-4.710077,1.659531,-7.104951,5.906071,2.637593,-0.315127,8.201895,1.539040,3.123665,8.539705,9.828810,-5.023187,-1.885647,0.070954,3.366609,-4.369072,0.450066,5.608881,7.319693,-4.290854,-5.651433,2.356374,-7.959199,4.280926,7.382793,7.387791,9.125846,-4.868554,-4.235745,-4.053214,-4.699130,0.339445,-1.124989,0.793286,-8.157400,-6.383768,-2.226310,-2.778702,6.970830,-6.641485,-7.744155,5.329408,7.185112,8.230741,0.821037,2.327200,7.443237,-7.461990,-8.209801,3.382025,9.706774,8.172483,8.376792,8.557693,2.962439,6.003615,9.461557,0.789870,-3.537092,6.442464,-2.874076,4.060600,6.506547,-9.141877,-5.431428,-8.743160,1.635791,3.731722,7.453819,7.153743,0.389146,-1.562131,0.417272,5.988618,1.668711,-7.540842,-7.947164,8.433647,9.328355,6.720632,0.173054,5.672356,9.143574,4.361984,0.858216,7.812126,-4.110311,-6.285163,-0.838167,7.404391,-1.305152,5.880546,-3.823850,-0.420184,-3.180459,6.251359,-3.096138,0.142087,1.342870,-9.924653,1.393596,1.630765,-7.327072,-8.869990,-1.552292,-7.186722,3.422832,5.721956,-0.262333,9.208663,3.017849,-3.904044,4.427508,0.239017,-9.264692,-0.927563,5.862767,3.113380,5.529061,-5.949025,-9.833066,-5.412104,6.624060,8.392344,6.189799,-2.267847,9.125421,-8.260413,-0.438073,6.955264,-8.933744,3.822807,-2.758383,4.972206,-4.369968,2.766930,-7.278834,-8.005346,6.782146,1.184028,-7.657035,4.092719,-0.851947,-2.733061,6.114769,7.986301,1.617653,2.155385,-7.754804,8.347745,8.205718,6.527300,-9.797850,9.219017,5.120820,7.404768,-6.848985,1.195525,-3.585928,-6.566210,5.984637,1.909112,-0.132859,-1.175551,6.694381,2.311353,-1.852699,-4.449687,-1.739875,-0.960305,-2.189879,8.310921,-9.313519,6.185522,-3.740372,-9.685270,-4.893950,8.437945,2.261669,7.547162,1.617999,1.887532,1.708952,7.771848,5.874539,7.755340,9.674395,-7.442173,4.495519,-7.000290,3.612786,2.522761,3.679688,-8.889563,9.655964,1.529770,-1.768338,-2.938906,7.192144,6.329093,-7.125429,-7.664308,3.771966,2.636034,0.553111,3.415482,1.648524,-7.417794,9.017846,1.595544,-2.303888,3.804622,3.461336,-3.580315,2.930549,7.316165,-4.855578,2.100663,-6.248948,-2.626792,1.006937,6.241702,-2.834284,5.325924,-1.982614,-8.256810,5.066904,-4.037409,-6.498126,6.880676,-4.035139,2.979297,2.208512,2.804235,4.774584,8.726815,0.567229,8.369230,-1.692114,6.796109,2.476598,4.886714,7.164243,4.144475,-2.083718,-9.755963,8.080745,1.002260,-4.647575,6.100735,-7.969713,-6.070303,8.565119,0.517064,-4.263336,-8.883710,3.194743,9.043632,6.665590,-8.636754,1.514978,0.439481,-3.686218,8.201788,2.630538,-8.014738,7.538032,7.539067,7.111009,-9.914475,6.897978,7.940920,-7.710967,0.841709,-1.855840,1.407511,-8.382301,-5.593812,1.573282,-1.063396,-8.182372,-3.759618,2.853735,-2.441484,2.106588,2.124900,-8.581128,7.996065,1.764866,-0.223776,-6.993208,1.209623,-9.867892,7.473680,-0.238553,-0.751455,-0.543498,-1.631411,-7.422070,-3.532410,-8.176197,-8.129702,6.884131,9.469832,5.406854,-7.074398,-1.934044,-4.730156,5.257416,-3.248188,6.315928,5.256826,-8.046795,-2.544635,-3.045599,-2.494938,-2.320507,8.986368,-2.485674,-1.179543,6.756027,1.482351,-3.435169,-2.776751,6.549254,7.775266,-3.020840,-1.500593,0.822506,4.164233,-3.115520,-7.278957,7.352819,-4.639649,-4.829132,4.656597,8.099116,0.831220,-5.108653,4.566910,4.397103,3.220303,2.920994,-4.414398,-2.580199,9.703245,1.642429,3.092253,1.007425,-4.767460], dtype = "float32")#candidate|6947|(845,)|const|float32
call_6943 = relay.TupleGetItem(func_4059_call(relay.reshape(var_6944.astype('int64'), [2, 4, 5]), relay.reshape(var_6945.astype('float64'), [120,]), relay.reshape(const_6946.astype('float32'), []), relay.reshape(const_6947.astype('float32'), [845,]), ), 0)
call_6948 = relay.TupleGetItem(func_4065_call(relay.reshape(var_6944.astype('int64'), [2, 4, 5]), relay.reshape(var_6945.astype('float64'), [120,]), relay.reshape(const_6946.astype('float32'), []), relay.reshape(const_6947.astype('float32'), [845,]), ), 0)
func_1430_call = mod.get_global_var('func_1430')
func_1433_call = mutated_mod.get_global_var('func_1433')
var_6954 = relay.var("var_6954", dtype = "int64", shape = (3, 44))#candidate|6954|(3, 44)|var|int64
call_6953 = relay.TupleGetItem(func_1430_call(relay.reshape(var_6954.astype('int64'), [11, 2, 6])), 1)
call_6955 = relay.TupleGetItem(func_1433_call(relay.reshape(var_6954.astype('int64'), [11, 2, 6])), 1)
uop_6958 = relay.atan(var_6945.astype('float32')) # shape=(120, 1)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_6962 = relay.TupleGetItem(func_6082_call(), 0)
call_6963 = relay.TupleGetItem(func_6083_call(), 0)
func_2351_call = mod.get_global_var('func_2351')
func_2356_call = mutated_mod.get_global_var('func_2356')
var_6970 = relay.var("var_6970", dtype = "float32", shape = (720,))#candidate|6970|(720,)|var|float32
var_6971 = relay.var("var_6971", dtype = "float32", shape = (1248,))#candidate|6971|(1248,)|var|float32
call_6969 = relay.TupleGetItem(func_2351_call(relay.reshape(const_6946.astype('float32'), []), relay.reshape(const_6947.astype('float32'), [13, 13, 5]), relay.reshape(var_6970.astype('float32'), [720,]), relay.reshape(var_6971.astype('float32'), [8, 156]), ), 3)
call_6972 = relay.TupleGetItem(func_2356_call(relay.reshape(const_6946.astype('float32'), []), relay.reshape(const_6947.astype('float32'), [13, 13, 5]), relay.reshape(var_6970.astype('float32'), [720,]), relay.reshape(var_6971.astype('float32'), [8, 156]), ), 3)
output = relay.Tuple([call_6939,call_6943,var_6944,const_6946,const_6947,call_6953,var_6954,uop_6958,call_6962,call_6969,var_6970,var_6971,])
output2 = relay.Tuple([call_6940,call_6948,var_6944,const_6946,const_6947,call_6955,var_6954,uop_6958,call_6963,call_6972,var_6970,var_6971,])
func_6977 = relay.Function([var_6944,var_6945,var_6954,var_6970,var_6971,], output)
mod['func_6977'] = func_6977
mod = relay.transform.InferType()(mod)
var_6978 = relay.var("var_6978", dtype = "int64", shape = (40,))#candidate|6978|(40,)|var|int64
var_6979 = relay.var("var_6979", dtype = "float64", shape = (120, 1))#candidate|6979|(120, 1)|var|float64
var_6980 = relay.var("var_6980", dtype = "int64", shape = (3, 44))#candidate|6980|(3, 44)|var|int64
var_6981 = relay.var("var_6981", dtype = "float32", shape = (720,))#candidate|6981|(720,)|var|float32
var_6982 = relay.var("var_6982", dtype = "float32", shape = (1248,))#candidate|6982|(1248,)|var|float32
output = func_6977(var_6978,var_6979,var_6980,var_6981,var_6982,)
func_6983 = relay.Function([var_6978,var_6979,var_6980,var_6981,var_6982,], output)
mutated_mod['func_6983'] = func_6983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mod.get_global_var('func_6619')
func_6620_call = mutated_mod.get_global_var('func_6620')
call_7056 = func_6619_call()
call_7057 = func_6619_call()
uop_7064 = relay.atanh(call_7056.astype('float64')) # shape=(3, 13, 15)
uop_7066 = relay.atanh(call_7057.astype('float64')) # shape=(3, 13, 15)
output = uop_7064
output2 = uop_7066
func_7071 = relay.Function([], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
output = func_7071()
func_7072 = relay.Function([], output)
mutated_mod['func_7072'] = func_7072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_7153 = func_5593_call()
call_7154 = func_5593_call()
output = relay.Tuple([call_7153,])
output2 = relay.Tuple([call_7154,])
func_7156 = relay.Function([], output)
mod['func_7156'] = func_7156
mod = relay.transform.InferType()(mod)
mutated_mod['func_7156'] = func_7156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7156_call = mutated_mod.get_global_var('func_7156')
call_7157 = func_7156_call()
output = call_7157
func_7158 = relay.Function([], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_7179 = func_5593_call()
call_7180 = func_5593_call()
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_7197 = relay.TupleGetItem(func_6200_call(), 4)
call_7198 = relay.TupleGetItem(func_6201_call(), 4)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_7219 = relay.TupleGetItem(func_5675_call(), 0)
call_7220 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_7179,call_7197,call_7219,])
output2 = relay.Tuple([call_7180,call_7198,call_7220,])
func_7226 = relay.Function([], output)
mod['func_7226'] = func_7226
mod = relay.transform.InferType()(mod)
mutated_mod['func_7226'] = func_7226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7226_call = mutated_mod.get_global_var('func_7226')
call_7227 = func_7226_call()
output = call_7227
func_7228 = relay.Function([], output)
mutated_mod['func_7228'] = func_7228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7156_call = mod.get_global_var('func_7156')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_7245 = relay.TupleGetItem(func_7156_call(), 0)
call_7246 = relay.TupleGetItem(func_7158_call(), 0)
func_6977_call = mod.get_global_var('func_6977')
func_6983_call = mutated_mod.get_global_var('func_6983')
var_7273 = relay.var("var_7273", dtype = "int64", shape = (40,))#candidate|7273|(40,)|var|int64
const_7274 = relay.const([6.699780,-2.874944,-6.061001,1.830417,2.983950,-6.041217,3.197020,2.389256,9.356371,-8.179148,3.556275,7.253995,-8.113344,-0.590055,-3.459521,-7.915183,-8.536227,6.221209,1.521617,3.874561,-6.107271,2.268708,3.798774,-4.085325,9.446086,-4.847204,-1.668666,-6.744290,-6.839789,-0.403271,-2.609318,-6.362779,7.169936,6.713082,-8.597439,7.547347,-0.864563,-9.759740,-6.370666,8.483030,3.564786,-0.020276,5.241126,-0.964406,4.554838,-3.299129,5.167231,-6.223261,-1.663479,1.053606,-3.646512,-8.736034,2.762159,7.279072,6.073445,1.093694,-6.626018,-9.309444,2.152080,-1.359265,0.612352,-2.441309,8.663181,-6.708580,2.746843,7.839955,-0.673244,-7.336290,-5.244243,3.042647,-7.932461,1.959886,-2.885001,-0.094850,-7.247349,-2.242224,5.312834,0.946049,3.335449,6.272335,8.544782,2.719233,-9.007832,-1.483413,3.789432,-2.576276,-2.178477,-9.638000,3.947928,-1.331905,5.085217,6.308854,-5.940975,-3.120285,-4.813184,-4.373735,-2.382049,-6.164725,8.137478,8.630754,-0.681923,4.349376,1.083502,-6.510494,-4.035669,7.229483,5.600689,5.254993,6.697061,-1.255122,2.751538,3.155456,-0.382732,-9.425773,-5.205359,-7.401482,5.153901,-9.760448,1.881479,3.912275], dtype = "float64")#candidate|7274|(120,)|const|float64
const_7275 = relay.const([-5,5,-1,-6,4,4,8,3,5,10,7,10,-8,-10,-2,1,8,-7,-8,-7,-10,-6,-3,6,8,-6,5,-4,5,-7,-9,-4,-8,-7,-5,1,-5,6,5,-6,7,9,7,4,-9,1,-3,4,6,-8,-6,-8,7,1,-3,4,-10,-1,-6,1,8,-3,6,10,9,-5,-8,-5,5,6,4,10,-5,-9,4,8,1,-2,-1,1,2,-4,-8,-7,7,-3,-3,3,3,-9,-3,10,-10,-2,-7,-2,8,-1,-5,1,2,-2,-6,5,8,-8,-2,-6,-1,5,5,6,1,10,-6,9,5,-2,-6,-4,-10,-7,1,7,6,-1,-9,-4,4,10,7,7], dtype = "int64")#candidate|7275|(132,)|const|int64
const_7276 = relay.const([-6.348185,-6.579551,-0.197824,-1.212754,3.109993,-1.764745,4.446057,-8.307362,8.265605,8.773764,-2.266554,4.074269,8.916816,0.883292,4.094064,8.840726,-6.028062,-5.448030,-2.525222,-4.526461,0.874830,-2.460721,-8.653892,-5.012174,-7.441064,-4.885478,-6.285298,0.263920,-4.749742,-3.203943,6.277606,-3.031129,-2.137082,-8.333457,9.155614,-6.596319,0.737318,9.988612,1.519929,7.306925,1.183487,-8.469790,5.766296,1.044247,-6.381072,-4.232353,5.159303,-0.290677,0.802492,-4.295134,3.284568,4.009680,3.932087,-1.337796,-9.017162,6.932431,-6.803397,-5.794557,3.963533,4.580372,2.096216,1.535906,-2.675022,-2.465994,-6.288666,-1.209271,-7.305197,0.725445,-7.576193,-7.985109,3.701581,-3.921751,-7.755886,-6.629063,-4.970502,9.544050,2.824184,-7.855484,-0.195275,1.945619,-2.961410,-5.019131,4.525445,-5.854378,-0.333626,-8.562682,-0.286183,8.778268,6.903753,-7.210797,7.589921,-9.871542,-9.454835,5.836038,2.599451,-5.347738,-2.423298,-7.335430,-1.334991,-8.543850,-6.471775,-5.979378,2.335666,9.009542,4.136351,4.406364,3.337473,8.330644,-1.531715,2.784578,6.151702,5.556914,-1.973330,8.402932,6.733339,9.215140,5.345146,-0.778894,3.495116,8.014816,-0.231049,-0.767458,-3.363327,6.684459,-8.033170,5.570347,-4.463425,4.450843,-5.805698,7.577311,-3.604747,9.969231,7.351220,8.551439,3.595548,3.655612,8.935641,-1.908157,-9.453108,-4.738225,-3.070686,-0.720142,9.058033,2.364004,2.424720,2.028045,-8.951059,3.784005,-9.535837,-9.414941,6.796250,1.401724,3.439626,2.035294,-3.603416,-7.334591,4.639249,8.735881,5.475465,-5.466160,-7.723012,-7.278259,5.031054,-4.449753,-3.190845,9.897698,-3.859175,-3.606274,-4.088123,0.089949,-2.209521,5.475126,5.353073,-8.232787,-5.414540,4.174281,-7.066040,6.119772,3.491720,6.394127,-5.545613,5.605741,-2.699905,1.249089,2.456708,7.196608,-3.740714,4.809618,6.031053,-7.481425,4.513907,-7.965157,-8.809341,5.308244,9.749546,2.017054,4.145601,3.441934,0.603238,3.367964,1.343366,-1.739512,0.660485,6.140617,1.606019,-8.274629,7.176176,-2.608692,-6.154563,1.561663,-0.959054,-4.280731,-4.860714,4.315410,-6.649194,-6.762936,8.028294,5.311619,1.356427,-7.878777,0.497205,7.030665,8.689507,-4.990707,6.246104,-4.826539,-7.701730,0.415297,-4.009724,-6.043885,8.338926,-9.538365,7.751328,-7.980443,5.475052,7.890266,6.341457,6.072877,-5.679098,0.268478,-6.498336,-3.466671,-3.284902,1.721611,-9.392566,6.967068,-5.929473,5.962180,7.999064,-3.162030,-6.038076,8.802460,-8.908997,-7.237527,-5.280281,-0.616929,4.813503,-3.845160,1.240748,-6.128139,6.045022,6.264961,-7.728454,-1.089008,-6.302802,-1.819747,-0.562427,7.826659,-9.431609,-1.253318,6.309153,3.794867,0.097888,-7.313131,7.985786,-0.865763,-6.371577,1.587519,-6.155149,-2.355532,-5.760211,2.893298,0.484908,-2.503809,7.718157,-9.809034,8.453354,5.300303,8.228692,0.008386,0.341868,-2.259749,-7.362425,-9.480741,2.356057,9.166299,9.284714,-6.156289,5.558070,-6.016751,6.118157,7.429696,3.910360,4.825283,-4.624481,3.985239,1.702600,5.268296,0.715400,-8.923971,5.442557,6.269293,7.387532,8.849826,-7.213081,9.310108,-6.355729,-3.989371,5.432194,7.041669,7.864201,3.180836,-0.500703,-9.896639,-9.822232,-0.600231,-8.512008,-7.668641,4.234964,6.151765,-8.766675,-4.533292,7.354037,-2.757193,-0.137121,4.791219,-0.912042,-7.349169,1.523540,3.765706,-3.305815,2.513388,3.617594,-2.997440,6.177861,-3.453752,-1.530385,6.183982,1.200061,-7.936074,6.815394,8.530110,0.373864,-8.838127,-4.083518,-9.411059,1.470915,-4.807992,-5.199819,6.240840,-0.973617,2.705247,-3.055872,-9.935744,-1.356159,-0.632121,-5.775445,4.015610,6.519402,9.501619,3.017341,-9.304239,5.660816,9.840963,3.789857,-3.596819,-9.562350,-6.600470,-9.204653,6.036346,-2.329186,-6.138707,1.614177,-1.975316,4.290041,2.079915,1.457580,2.078750,-6.748045,-9.315371,5.567053,0.049385,-4.471149,3.131209,-0.331747,7.799274,-6.870180,-0.297569,-5.054149,-5.576266,-4.392724,-3.670918,-4.499661,-8.975891,0.613859,-3.692546,2.743693,-2.617100,-4.796425,-2.520350,-1.744678,6.455136,4.496989,3.949382,-9.387137,2.321547,9.390902,-0.057545,7.959324,-1.251510,-4.153914,-8.546426,-3.666564,2.626634,-8.866105,1.327037,-8.400642,8.883500,-5.237315,8.051383,-8.240719,5.035200,-9.068409,7.798619,7.278910,-8.923175,6.566851,5.277919,-8.291323,-3.042724,1.746000,7.442514,-1.270080,4.267888,3.992436,6.275942,-4.945681,4.745416,-0.536263,-6.922895,-0.617594,5.791605,9.489528,2.327848,-2.526671,-1.021979,-2.457204,0.587497,-6.993324,5.769079,4.882424,-2.617334,-5.888552,-9.415954,-0.950917,-4.960239,-1.876094,-4.150012,-8.429724,6.292060,9.350466,-1.784067,1.941844,-5.246587,2.442149,-7.043334,-7.015514,-1.612545,-4.231307,-5.501816,0.268350,-1.533238,-7.107007,-1.193660,-0.022896,7.731769,6.443306,3.295115,5.841014,5.518517,-8.470449,4.170850,-9.018598,7.281611,9.625434,4.748839,-5.132119,-9.440922,1.119021,3.574791,-5.622093,5.540161,6.238517,-1.994138,9.997951,1.086113,2.865406,-7.599316,-6.833228,8.431467,9.516098,-1.885921,-1.367579,1.396473,1.368367,0.301445,3.835953,-1.952939,-5.877470,-5.678470,-5.215585,7.799344,-7.418761,4.980944,0.143569,-6.437063,4.054093,-4.017639,2.541559,6.430677,-4.158917,-2.786058,-8.859102,-4.445074,-8.008422,-8.522527,-9.210268,-7.275724,6.703734,3.195440,-6.964380,-4.007108,9.696762,0.526530,-8.269954,9.612073,-5.187766,-7.589013,-8.187999,4.232373,3.039494,0.191485,7.467883,9.324912,7.191020,9.636962,-9.450604,-9.287597,-7.940788,8.557558,-1.721019,2.730998,-9.962392,5.697854,7.362181,6.455455,-0.303068,-4.194720,2.136434,2.471113,9.353720,-2.853696,-7.201564,8.839080,1.865033,9.374231,1.017538,-3.398139,-1.365585,8.083692,-1.989886,0.231932,3.917086,-3.640850,4.421773,-8.344020,-3.618112,-0.109887,6.985829,7.982650,-5.735789,-4.446262,0.388453,-6.920868,3.094384,3.246368,-2.847807,-0.035735,0.722881,-8.981182,-9.255292,9.472654,-2.508620,0.802857,6.864560,-7.447809,7.605777,5.672196,8.350239,5.129966,1.913825,-2.309511,2.033845,-8.166852,1.948670,5.875016,9.223618,-0.612458,-5.547640,3.965754,-8.262314,-3.317358,-9.905479,-4.157870,3.409683,-6.019577,2.269906,-9.709040,-2.826342,3.080338,-8.309166,1.846528,3.975104,2.033315,-3.086701,2.182987,-2.887756,-5.263748,6.153001,-0.013543,-8.285304,-5.589942,2.357399,-3.703356,7.071308,8.472886,-5.170106,7.736362,-5.087186,-4.767902,8.365546,0.039295,3.381414,-4.464716,-6.214777,3.661298,-5.063771,-8.550849,-7.593080,6.182238,-9.736888,0.076165,5.523110,-2.964315,6.596218,-8.736279,-8.925399,-6.716591,-4.557779,3.277231,2.634114,9.779125,-1.671207,0.720233,4.196194,-9.953284,5.522637,-7.022939,-4.718940,-5.259220,2.875368,-0.461812,-0.809143,4.290116,9.239863,-6.082158,1.565729,-4.604656,8.243239,6.083749,-4.594990,2.693973,6.775902,4.446540,-8.655166,-7.566203,-5.493447,-2.336609,0.629684,3.892028,-9.590837,-4.429917,-6.982749,5.747707,-6.620517,-7.159199,-6.643866,3.038112,2.450753,7.650317,-8.650078,-7.007454,-1.046769,-6.801789,-2.259353,-7.666073,4.869121,1.317233,-6.570028,4.217672], dtype = "float32")#candidate|7276|(720,)|const|float32
const_7277 = relay.const([4.985439,9.818905,5.794982,5.538796,-8.696631,0.501760,-5.787959,5.356447,5.203671,0.955059,-9.734131,-7.620556,7.278053,5.960226,9.382039,-7.582481,3.917174,-6.305554,-9.577520,2.851092,7.971002,9.964839,-0.581285,-3.197611,-3.516237,-6.860481,-3.083821,3.982464,-6.596060,-7.545589,-2.152625,0.252051,9.814524,-0.886675,9.133054,-2.957561,-5.488421,-1.439212,-5.586130,0.717517,-6.046786,5.654699,-3.562208,-9.749092,-5.800205,6.781883,4.372955,-2.255705,-8.681119,-4.938756,-3.444554,-7.862224,-1.039295,8.737649,1.223920,0.961714,-1.537572,4.982944,-7.765590,-8.502864,-2.279679,5.817665,-9.240777,-6.260295,-3.695239,-3.592779,-9.135411,-3.220661,5.385206,8.596899,-6.656845,-8.227120,-7.862481,3.474517,8.855350,9.600344,8.241740,7.961514,-6.557152,-1.288374,-9.237001,-3.985933,8.630675,8.396501,-2.323577,-2.795998,4.684771,-5.671084,-2.168994,-1.749082,2.317829,3.675593,-3.395272,-5.268060,4.093650,-5.696722,7.765238,-8.697451,5.263204,4.731540,-5.539392,-2.569602,-2.840414,0.764456,-4.529273,-7.691500,0.443859,6.217822,-7.715620,1.801672,-6.284903,2.790359,-4.753820,2.439356,7.048763,2.317072,-4.235335,4.866125,-4.345567,9.445844,1.896049,-0.450880,3.462076,-4.486116,1.316901,9.405327,5.969101,6.132825,-4.594963,8.149260,1.797953,-9.521595,-1.694427,-4.964093,-2.635851,-7.003954,4.694323,9.753335,-7.769647,-0.225835,5.334744,9.784021,-3.345253,-9.027064,5.581841,-1.843993,-3.223680,-4.171458,4.800049,-5.540119,-3.372626,2.458624,7.924154,3.674334,-0.384381,-8.046368,3.497729,2.949550,-3.358629,7.405030,2.983320,6.458205,-8.681989,9.029675,-8.491828,9.151965,-0.836373,7.391285,6.522602,7.462323,-1.794064,5.682517,2.604389,-4.987152,-0.992423,-5.028343,2.826668,-3.345598,0.260868,0.098898,6.029469,3.625545,1.572741,6.924805,4.890254,8.966630,-5.751903,0.384907,2.243113,-2.929615,6.394094,2.071020,-5.764761,-6.641295,6.215063,6.464284,8.356182,-3.779908,7.825280,9.533816,-8.521750,3.421940,-4.132456,4.730223,-8.744570,8.467149,-5.156104,-1.164650,-2.551595,-7.965846,3.131440,-2.452694,-7.896725,4.287080,4.231100,-2.439631,8.707487,-9.163622,2.698115,0.123039,5.620221,3.454434,-9.932874,-2.000148,0.506504,-7.979155,8.233314,6.575390,-3.887784,4.303219,8.114769,2.384979,7.871352,-4.937171,2.072397,-2.510460,6.973228,-0.136210,-7.778464,-0.157003,-6.932308,-2.849574,-0.758017,8.986710,-3.829267,-9.395722,8.737631,2.329973,1.740175,2.286916,8.903867,-4.473076,0.095745,-8.384797,8.366803,3.313582,-6.242387,2.733548,6.776405,0.782258,-4.752679,-2.547998,1.496529,-7.866213,2.364168,-0.521305,-5.352869,5.847646,8.332205,2.257832,4.534029,-0.131731,-7.640249,-1.401309,4.822639,3.552353,2.454222,4.920875,2.159396,8.842199,7.986623,-8.507533,-2.105831,4.296167,5.253884,3.098819,-6.826038,-1.206785,0.059058,-9.880304,-2.595585,-7.176231,3.724438,5.550744,-7.025175,-5.456690,-4.509114,0.675945,-4.449729,-5.848744,6.549291,-9.602121,-8.785409,-3.849327,6.344668,-3.800975,-3.585619,9.612646,-6.373221,1.287446,-0.100756,-0.867678,-0.248888,9.885288,-2.676360,-2.600668,5.074401,6.700484,-6.234605,-6.403874,0.801286,0.472298,5.307654,7.846536,1.286009,-6.457412,-7.722847,-5.588982,-6.840935,-9.532604,-5.200238,-4.228227,9.464326,4.934775,6.615148,-6.325373,-2.485964,5.776492,-4.065077,4.087131,0.633996,5.283676,-9.776795,-8.219414,-5.692140,2.816208,2.110655,-3.015669,-5.693573,-8.530423,7.888532,-8.659105,7.123665,-8.144983,-8.744884,5.043712,1.848937,-0.075587,1.770977,9.238906,6.664056,-6.471696,-3.976008,3.058383,-7.803469,3.304149,-4.659281,4.201064,4.019216,-5.707852,9.875205,6.170465,-4.480154,-4.509480,-2.796949,0.430497,-3.589162,-0.472795,0.430228,1.744508,-1.264222,0.312963,-7.834677,-9.918607,-8.356454,-6.808125,-7.528336,1.256655,6.205819,-8.025617,0.922275,9.856223,2.088187,-9.564992,6.211693,-4.061152,-7.358730,3.441569,-9.300457,-5.603712,-7.997885,-0.876490,-0.680935,5.962551,0.451828,2.303726,-3.645743,0.545096,4.104133,-1.068238,1.134289,-6.434251,-1.383053,5.289859,1.995746,-0.792151,-5.152566,-7.058685,-1.507052,-4.169784,-2.701198,-2.242237,-4.113213,-6.742144,4.134917,-3.384499,-8.631503,5.421305,-2.572936,4.326699,-7.722509,8.285181,3.222783,-9.525951,-6.836293,3.732458,-8.958535,5.291357,4.348551,-5.751959,-3.158535,-9.730692,4.914734,3.583854,-5.589479,7.388097,-8.058938,9.927915,3.720259,5.838159,-7.781642,-2.052879,-0.835535,1.036390,3.411009,1.879176,-4.620752,-8.918700,9.428700,-1.320312,5.845089,-8.894807,-1.273528,0.814795,7.937303,2.507920,3.813295,5.114671,6.784786,-8.077281,-0.425814,-8.584518,1.583279,1.354887,6.639595,-2.028308,8.955651,-2.122652,-4.080636,4.168651,4.975873,3.123206,-1.411339,-4.733545,6.954046,9.567964,-4.541830,-7.626899,-4.992423,-8.192162,7.754815,-9.170357,-6.117918,5.170517,-8.236554,-2.551814,3.778238,7.535306,-1.589147,-6.346876,-9.902251,-4.401047,5.551491,-2.531024,-6.831495,9.383395,8.557371,-3.331959,4.650640,-5.811134,2.223733,8.658269,-5.239995,-1.009443,-5.960179,-8.619866,-7.377395,-2.359487,4.744482,-4.847041,3.358984,-6.773359,5.215930,-0.242439,-9.441388,8.876661,-1.924166,-0.597430,6.366902,2.175446,1.715804,-8.919296,-2.723566,-0.985196,4.762888,2.618630,-4.269145,2.833689,8.751031,-1.555992,-8.299821,1.828927,-6.507442,1.824803,-1.527287,-9.785992,-6.471356,-5.734142,3.643074,-8.523928,6.104505,2.846629,2.877898,0.763012,0.486784,-2.855465,2.328010,-4.933890,-8.934163,0.148468,-8.766410,-9.600687,-6.843719,-1.134334,4.780501,-3.490080,-4.253718,4.799542,-8.861561,-9.410782,-0.247224,3.065449,-2.776512,-5.289811,3.791630,-5.990503,6.355374,-0.967521,3.419166,5.639975,-0.348592,1.258668,2.428118,-2.597154,7.245303,6.554279,-5.274786,-5.848201,-4.400684,8.210437,-0.110452,-3.448943,-7.833294,-9.236265,0.467740,7.674025,5.687806,-5.089918,0.288360,1.891371,-6.623872,-1.141136,3.363190,7.993148,4.647677,-6.087673,-5.604771,3.259606,0.815613,-1.055773,3.582009,-3.814872,-3.740626,-4.069269,-9.361549,1.206723,-9.192556,5.006737,-8.847914,-7.884137,8.867527,4.870076,0.982000,-3.693662,-4.170107,8.000998,-2.767842,2.000098,-6.205403,-2.131618,9.859993,9.113837,-5.618009,3.666384,-7.926108,-4.083760,-8.004443,0.804653,5.055499,3.444373,0.860940,0.535314,-7.819427,-2.826942,-6.517854,5.986123,-2.248462,-3.629244,9.303053,8.865558,9.979417,2.799581,-6.706392,3.912377,0.003079,9.918762,3.989262,-0.558679,0.705724,-1.973900,-1.293717,7.070641,5.542413,1.211524,-3.997726,-7.544308,-1.002824,8.876972,-1.964395,-8.521267,3.273202,-0.862001,7.941140,2.472962,-4.373627,-6.814127,4.097461,5.203730,4.913470,-6.842689,-9.862948,7.171323,-1.821677,9.765909,0.945262,-8.316517,4.454593,5.867175,-4.056438,-3.977262,7.640274,3.089444,-7.379558,0.743652,2.502610,0.964362,-2.532781,-4.722503,-5.753993,7.411723,-7.309069,-5.902296,6.708628,-9.722621,-1.354193,-0.069168,3.919675,6.427601,-3.953453,-9.288009,-6.349255,5.587925,-1.419938,8.883817,2.646438,4.160746,2.159209,-7.489279,6.630688,-3.301944,3.074666,9.541328,-0.825445,-9.769204,2.847889,-9.826917,7.627588,-2.601897,9.510143,-3.075175,4.651608,-6.482576,8.216556,0.269437,0.532465,6.356700,-5.793600,-7.406782,2.830010,9.186570,1.567508,-4.472593,-9.018176,-2.814934,-2.508360,-8.856116,-7.420781,-4.498365,4.652318,9.062664,4.288692,4.351070,4.784104,-4.338041,9.548580,-7.154747,1.127755,4.270411,2.113899,-5.349428,-7.435599,6.882631,6.977356,-4.767412,1.334215,-9.210738,-1.909261,-3.004771,0.512792,-9.992877,7.614605,1.155520,3.109235,-7.642746,-6.020643,4.001118,8.680477,-7.132611,-1.081893,-6.849866,-4.038677,9.308772,-4.788399,-6.739069,-2.055372,-9.726710,0.287658,7.253265,-3.096175,-0.698632,-0.603351,5.162757,-4.081136,-2.801620,8.839515,1.588067,0.893276,-9.716153,-5.292737,9.621723,-8.603025,-6.733724,9.448580,-4.660410,9.244775,1.772360,-1.159958,-3.915895,-5.459056,-2.474607,5.880769,5.288835,-4.308639,-7.078661,-3.447191,4.118151,-8.360986,4.733151,6.685780,2.434706,-7.633908,-8.556253,-0.989646,5.716631,-7.025638,-5.464084,4.759520,-7.587004,5.468596,4.540761,8.560124,-2.325542,-0.485897,7.290439,-9.142776,1.158207,8.437946,7.118545,-8.383837,-9.276287,-5.634076,-1.025442,-7.307495,2.192882,2.749939,-9.897533,-8.465638,-1.833428,-6.927214,-4.607728,0.016813,9.906919,-2.308795,-7.173715,7.760727,8.822766,3.444429,-9.146792,-9.168110,7.707482,-6.139633,-0.327069,4.435354,3.122644,9.267760,-8.687894,8.668598,6.666214,-9.855801,-9.315534,7.449360,-4.004377,3.031579,-4.832809,-8.435264,-0.160199,9.353986,7.591954,9.800139,-0.967273,7.332439,1.484568,-6.434463,-0.090946,-8.718314,0.939870,-9.214760,-8.073820,-5.298673,1.129827,6.412804,3.176320,9.671529,6.346142,8.485772,0.060903,-8.771367,-7.583119,1.649089,4.135584,9.583015,8.108650,-6.880486,-9.276804,9.300648,-9.871684,3.723975,1.524136,-5.993246,0.086118,9.078646,-6.068399,-3.518206,-0.794385,4.183752,6.722642,-0.736471,-5.644445,9.407095,1.925042,5.752984,3.956893,8.674602,2.008567,3.244152,-6.885765,1.927159,-1.581603,4.298801,5.633417,-4.638409,4.944059,-6.893281,-1.920419,-2.077901,-5.367920,6.639479,-6.338001,-4.471508,-1.365930,5.164919,-4.309565,-0.438139,-7.003868,-8.146850,-6.749793,-5.403506,9.241538,-4.465427,-6.743411,-0.564633,-1.935455,-2.703613,-7.540028,-6.854928,-5.656747,6.915895,-3.456458,1.510832,6.945914,-6.485571,2.326831,-2.728778,6.439559,-8.167827,1.463956,-1.338170,-0.642048,7.262176,-7.134158,5.363393,7.268816,5.468871,-3.794197,-4.558300,-9.309324,-1.075449,8.953118,9.557360,2.549428,9.510279,-4.735748,-9.449222,-0.351788,8.258650,2.567586,-8.153551,-3.646787,-5.957714,-8.880019,-8.552916,2.698687,-0.654231,9.678970,-9.717747,5.972614,-2.839829,0.658022,-2.155895,-0.862106,-4.680658,2.077114,-8.059311,0.146575,-8.655430,2.062003,-9.302716,1.060151,3.315158,-0.688930,2.089554,7.799245,5.265970,-0.552918,9.251120,-5.809450,-8.032282,-6.547293,1.603091,0.511593,9.758007,-3.230459,-1.848504,7.143085,2.439543,2.936822,2.307489,-6.258821,5.213881,0.750135,1.251899,9.520569,4.471610,-6.350194,5.683540,-8.274821,-6.724050,-7.782702,1.988028,-9.334124,-6.394935,1.888538,5.061451,-3.294166,6.214396,8.996777,2.584765,-4.403599,-2.019404,3.298587,3.457575,-3.128209,5.487498,-6.563589,-1.339163,0.018129,-6.991841,2.842085,-5.887038,-9.736557,7.480328,-0.213938,-3.869970,0.021827,6.160514,-5.835978,-1.753681,-2.849142,-7.148746,-5.173682,2.336320,5.405694,9.507270,6.087532,-6.831147,3.801792,9.244515,7.436829,-1.044922,-5.064411,7.332750,-4.499542,-8.918620,7.696768,9.011763,3.190082,7.336403,-3.354083,3.815032,-0.218488,-1.852269,5.228798,8.313885,0.162438,7.818827,0.557253,6.777441,5.890507,-3.135615,-4.027141,-7.788156,8.053977,-6.460607,-9.789675,0.665545,4.072399,-4.574248,-6.480222,5.069016,-4.880030,9.773306,-4.972307,1.922332,-5.924373,-3.411987,-3.517496,5.826069,8.953880,4.109030,3.101780,-2.086984,-4.665674,-5.951310,9.895085,9.799900,-6.691233,5.342691,6.398121,-9.585528,8.513186,-6.162875,-2.244268,0.525423,4.044341,1.865617,3.819303,6.631862,7.507318,-1.715803,-5.619733,-5.443708,2.392460,9.673188,-9.155383,-3.528340,-3.131774,3.545498,-5.504697,-8.552018,-3.050062,1.261121,-6.565104,7.612784,-6.633118,-9.444976,0.526938,5.743539,-5.501317,1.198023,5.212388,-9.183121,-5.194067,-3.611486,-8.559829,-1.928094,-7.774548,0.805932,8.079271,-8.275850,-4.004279,-4.758622,8.015090,-0.138795,-2.151448,7.714722,-5.925707,0.412061,6.233015,0.500934,8.628084,-2.415375,3.302108,-6.558453,5.986243,-5.479629,8.574880,9.974454,2.414031,-0.793658,-6.915741,7.875941,-1.734660,1.357151,-3.531114,2.750229,6.204622,6.666190,8.789552,2.730571,3.811038,5.276661,-9.396928,9.130086,-1.293474,6.453041,9.737036,6.434487,3.055006,-1.985637,-3.449824,7.104289,7.799897,-7.457723,-7.716965,2.949055,-6.628827,-5.233381,-9.900945,-4.173137,-8.902778,0.332576,-8.660367,9.556899,7.598018,9.671289,1.507698,5.656016,2.708992,-2.651368,1.355976,4.669118,-0.589143,-6.512683,-7.232219,5.049643,-9.176397,-2.992239,-8.234710,1.135527,8.022296,6.937639,2.603676,-3.027862,-8.411801,7.950624,-7.485758,6.490933,-1.935039], dtype = "float32")#candidate|7277|(1248,)|const|float32
call_7272 = relay.TupleGetItem(func_6977_call(relay.reshape(var_7273.astype('int64'), [40,]), relay.reshape(const_7274.astype('float64'), [120, 1]), relay.reshape(const_7275.astype('int64'), [3, 44]), relay.reshape(const_7276.astype('float32'), [720,]), relay.reshape(const_7277.astype('float32'), [1248,]), ), 2)
call_7278 = relay.TupleGetItem(func_6983_call(relay.reshape(var_7273.astype('int64'), [40,]), relay.reshape(const_7274.astype('float64'), [120, 1]), relay.reshape(const_7275.astype('int64'), [3, 44]), relay.reshape(const_7276.astype('float32'), [720,]), relay.reshape(const_7277.astype('float32'), [1248,]), ), 2)
func_3489_call = mod.get_global_var('func_3489')
func_3495_call = mutated_mod.get_global_var('func_3495')
var_7307 = relay.var("var_7307", dtype = "float32", shape = (1, 715))#candidate|7307|(1, 715)|var|float32
const_7308 = relay.const([5,4,-4,-7,-10,5,-8,-7,5,-2,5,7,6,-4,4,5,-1,-1,7,3,5,-3,-9,2,8,-9,3,-9,-7,10,-10,-1,3,7,1,9,-10,-1,-3,-6,-10,5,1,2,9,-9,4,-2,-1,-9,3,-10,-10,-5,-7,7,-6,-1,-6,-2,5,-4,1,-8,-8,-5,-6,-5,8,-1,-1,-2,-1,-3,-8,-2,6,1,-5,-10,-7,6,-9,-10,-3,4,1,2,-3,-9,-7,3,8,-3,-3,7,-7,5,-6,-5,-8,-4,6,-3,8,-9,4,2,-4,-6,-7,10,6,10,-2,2,3,-1,1,-10,-5,-5,9,-10,2,3,-10,3,-8,-9,-7,10,-8,-3,-6,-9,-9,9,-2,2,-6,-5,-6,4,1,-4,-4,-10,-7,3,-5,-4,7,-4,-6,-4,1,-9,-8,-3,-6,-9,5,-5,4,6,10,-4,7,5,6,4,-9,-4,-9,5,-6,-8,-4,3,-2,-7,-3,9,-3,-1,-4,-4,-1,-9,9,-6,8,8,-8,2,-2,-2,2,-4,8,1,10,6,-8,-2,8,-2,1,-2,10,10,-1,-8,-6,7,6,5,-5,-9,-5,-10,8,-1,1,-9,7,5,-2,2,-5,-1,9,1,6,-9,-3,-3,-10,-2,-10,-5,8,5,-3,7,6,-1,1,-10,-1,7,-7,-5,-7,-1,-7,3,6,-5,-5,-9,8,7,-3,8,8,-8,-6,-6,-1,9,3,1,-10,-10,-9,-7,10,-8,-2,7,-2,7,-9,10,-9,-5,-10,4,5,4,-5,-10,-6,-8,-5,-10,-1,4,9,-9,2,5,-2,-4,4,-2,-1,-4,3,5,8,-6,2,8,-3,-2,-10,-10,7,-1,2,-8,6,-9,-7,-6,8,3,-1,1,-9,-2,1,1,-6,9,-4,2,-10,-8,5,-3,7,1,8,-5,-7,5,-8,8,-9,-3,-5,-4,6,-3,7,2,-1,-5,8,-5,6,5,-8,-10,-9,1,-8,8,-6,-2,6,-10,-10,-5,4,3,1,8,10,-8,8,4,2,-9,2,3,7,4,-8,-4,-10,6,3,-3,-9,4,8,-5,-10,3,6,-10,1,8,3,-4,7,4,-4,-6,8,4,10,8,-4,1,-7,10,-7,9,-10,-10,-5,-10,-3,-5,6,7,-9,-5,-8,-4,1,4,4,-7,6,-1,4,-1,-8,8,-6,-2,-1,-9,-5,-5,6,-4,3,-5,9,-2,-9,-1,-7,-3,-1,-7,1,-1,-10,-5,-8,-7,10,-1,-9,-3,-6,-5,3,-6,-10,9,1,-10,-8,7,3,6,7,-6,2,3,6,-1,-4,3,1,7,-2,5,3,-6,8,-2,1,1,7,-9,4,2,-6,3,-5,-1,9,-4,8,9,-4,-2,8,8,9,-10,9,2,5,5,10,-6,2,1,2,7,-2,-10,-4,10,8,-8,-2,-4,-8,6,7,-4,3,-8,-9,10,-3,4,1,-3,-3,-7,1,-3,-2,-4,-2,7,-8,-10,-9,-8,3,2,-7,-4,-5,-7,-4,-5,9,7,-2,9,-9,-6,-3,3,-6,1,-1,6,-8,2,3,-10,9,-6,-2,-10,5,-1,10,-4,8,-2,10,5,-8,10,6,-4,7,-7,-4,-2,-3,-5,7,-9,-5,-4,-8,-1,-5,10,10,8,3,-8,10,-7,-1,4,-4,-2,6,1,4,10,4,-3,-3,2,4,-6,10,-7,-8,10,8,8,-8,7,5,-3,7,-3,-5,-10,-5,-3,-2,5,-5,-1,-6,4,1,6,-9,3,5,10,-1,8,9,-10,-4,-10,-7,-2,1,7,-7,6,-3,4,6,-7,6,-2,9,-3,-6,-3,-5,6,-1,8,5,8,4,6,-7,9,-8,-6,3,-9,-6,2,7,7,-10,-8,8,4,9,4,-3,-9,3,8,-7,-5,-9,-4,4,4,6,-10,9,6,6,-4,-2,1,-8,-3,6,-8,4,1,3,1,-7,-4,7,-4,2,3,1,-1,-1,-6,2,-1,-7,-4,8,-10,10,-3,3,-1,7,1,8,-9,-8,-7,10,-7,-10,5,-8,-5,10,5,-7,-10,-2,4,-5,-8,-9,-3,3,-4,-3,-3,8,9,-3,-1,3,-7,-2,-5,-6,-2,-8,-6,9,5,2,2,3,-6,-10,-9,8,-9,8,1,-9,-1,-10,-9,6,2,2,-6,7,-3,10,-1,-9,1,6,-1,5,-1,6,5,-4,10,10,2,9,-6,9,-7,2,6,-10,-3,9,-1,4,9,-4,3,-6,-5,10,5,-1,-10,10,10,-2,-6,-7,-8,-4,6,-5,-4,-3,7,10,-5,-4,-5,10,6,-10,-5,-1,5,-7,5,-1,-2,-10,10,-8,-5,1,-9,-7,2,-9,-2,9,8,-10,7,-4,8,7,5,4,-8,-10,-5,-1,-2,-8,-1,-4,1,1,-5,-7,8,10,9,-3,-8,-5,-10,4,9,8,8,-8,-6,-7,6,2,7,-9,-6,5,-5,-1,-9,9,-8,9,-9,-3,7,-3,-5,7,7,-8,8,8,-4,-10,-5,-2,-4,-9,7,9,3,7,9,9,9,10,1,-3,-1,9,-10,9,1,10,-1,3,10,-1,3,-6,7,2,-8,-2,-7,-4,-3,4,2,-1,-10,-6,-4,1,5,2,5,-10,10,-1,5,6,2,-2,-4,7,7,6,10,-1,-5,9,-8,3,2,-6,1,5,-2,8,-9,-9,2,-10,-5,9,7,-3,8,-4,2,-7,2,8,8,9,3,-6,5,9,-10,-3,-8,-1,-2,7,4,7,-8,7,1,3,-4,-10,6,1,10,2,-8,-4,-7,4,-7,-7,-6,-10,10,4,4,-5,5,-6,-9,3,-1,-8,10,-2,-5,-1,-3,1,-4,-9,8,1,-9,-8,-7,-8,8,9,-9,4,-1,-6,-5,10,-1,10,-5,5,-9,-6,4,5,1,-1,-6,-4,-9,3,-7,-5,-4,-8,-9,-6,-5,-3,4,4,-3,-6,9,5,-10,4,-3,-6,8,-7,6,-5,4,2,7,3,-1,8,1,-10,4,-10,4,4,-1,-1,2,8,4,-6,-5,1,-10,-6,2,3,1,-5,-1,-9,9,9,-5,-9,-6,8,-6,7,-7,8,-10,-9,6,8,-10,2,-6,-3,8,8,7,-3,-8,-10,5,6,10,-8,7,8,10,9,10,7,-1,2,-4,2,7,-6,-9,10,8,-8,2,4,-3,-10,-4,3,-5,-5,1,-2,9,-1,-10,10,8,5,-1,6,4,8,-4,-5,-5,-9,-10,-5,8,-9,-8,8,-6,-10,4,2,-1,-5,-3,-5,3,-7,6,3,-1,-4,-3,6,5,-8,-1,6,5,8,-2,-10,-8,7,10,-10,2,9,6,5,-5,-10,-5,8,-8,10,9,6,-7,-1,-2,-8,-5,-10,-4,2,-1,-6,9,-8,10,8,6,-7,6,7,-9,4,4,4,-2,7,-9,10,9,-6,4,8,-7,-2,-5,4,-6,9,-4,-7,-1,10,9,9,-7,-9,-8,-2,4,-1,5,-6,-4,8,-9,-6,1,-10,5,-10,-4,-3,8,9,-9,2,6,2,2,-9,9,1,1,-2,-3,-9,3,-9,-7,-2,7,-10,-3,-4,-4,-8,-10,3,-2,-10,-9,-2,-2,1,7,8,9,-8,10,-7,-7,-9,4,8,7,1,-8,-8,3,-10,5,8,-7,6,10,-4,-8,2,5,10,-10,9,3,6,9,10,-5,-9,5,-2,1,-2,8,-3,-5,-8,3,1,-5,3,7,9,4,-6,3,3,-3,3,10,6,-8,-10,-2,-6,-10,-2,-4,8,-6,6,2,3,8,-7,-3,-2,7,-1,-3,-5,-10,9,-7,2,1,3,1,9,6,-6,8,2,-1,4,2,6,-8,5,-2,-7,7,8,-9,-7,-2,-4,4,8,8,7,3,1,-10,7,5,7,-5,2,-2,1,-4,4,2,1,-6,-2,-6,2,-1,-8,-2,-8,9,-3,9,-3,-8,10,3,-1,-2,7,6,-3,-8,-3,5,-7,1,5,5,-2,-7,2,4,8,-6,5,6,-1,9,7,5,-10,6,-6,-3,4,1,-1,-1,2,-8,1,6,-10,-8,-9,-1,-1,4,5,-6,-1,-7,1,-3,-5,-1,-5,-10,2,-10,-5,1,7,5,-5,1,7,10,5,-2,-4,-7,-10,4,7,4,-6,-7,-2,-4,-1,-5,-4,8,-8,-10,-5,-1,-3,8,10,1,-9,-8,-1,10,-1,2,-1,5,-3,2,-3,5,-8,8,-7,6,9,8,8,4,4,7,8,-3,-8,-1,7,-8,8,-5,-5,10,-4,-4,6,-4,-5,6,-4,6,-3,4,2,-7,8,-7,10,8,6,8,1,-4,6,10,10,-3,-3,-5,9,-5,-3,-9,-10,8,-9,1,2,-6,7,8,4,-2,-8,-1,-10,-3,1,-7,9,8,-4,9,6,4,-3,-3,-6,3,-4,1,1,9,6,-4,1,-4,-2,-1,-10,2,-9,-2,9,-9,10,-9,5,-6,1,-7,-1,-9,6,9,-7,3,5,-3,3,-9,3,7,-5,-9,10,-1,7,-3,-2,-10,3,-8,-1,5,4,-6,-4,-5,5,-7,9,5,2,10,-10,2,6,-4,-1,-10,4,2,-10,-9,10,-9,8,5,-1,1,-7,-5,-4,-7,-9,-2,4,1,2,8,-7,-10,-10,2,-2,-3,7,2,-8,-8,8,9,7,-4,1,-10,-9,-1,9,-10,-6,10,2,7,-2,6,7,10,7,-3,-5,5,5,-3,-1,3,-8,3,6,-2], dtype = "int8")#candidate|7308|(1792,)|const|int8
var_7309 = relay.var("var_7309", dtype = "float32", shape = ())#candidate|7309|()|var|float32
call_7306 = relay.TupleGetItem(func_3489_call(relay.reshape(var_7307.astype('float32'), [11, 13, 5]), relay.reshape(var_7307.astype('float32'), [11, 13, 5]), relay.reshape(const_7308.astype('int8'), [1792,]), relay.reshape(var_7309.astype('float32'), []), ), 2)
call_7310 = relay.TupleGetItem(func_3495_call(relay.reshape(var_7307.astype('float32'), [11, 13, 5]), relay.reshape(var_7307.astype('float32'), [11, 13, 5]), relay.reshape(const_7308.astype('int8'), [1792,]), relay.reshape(var_7309.astype('float32'), []), ), 2)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_7341 = relay.TupleGetItem(func_5675_call(), 0)
call_7342 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_7245,call_7272,var_7273,const_7274,const_7275,const_7276,const_7277,call_7306,var_7307,const_7308,var_7309,call_7341,])
output2 = relay.Tuple([call_7246,call_7278,var_7273,const_7274,const_7275,const_7276,const_7277,call_7310,var_7307,const_7308,var_7309,call_7342,])
func_7358 = relay.Function([var_7273,var_7307,var_7309,], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
var_7359 = relay.var("var_7359", dtype = "int64", shape = (40,))#candidate|7359|(40,)|var|int64
var_7360 = relay.var("var_7360", dtype = "float32", shape = (1, 715))#candidate|7360|(1, 715)|var|float32
var_7361 = relay.var("var_7361", dtype = "float32", shape = ())#candidate|7361|()|var|float32
output = func_7358(var_7359,var_7360,var_7361,)
func_7362 = relay.Function([var_7359,var_7360,var_7361,], output)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7364 = relay.var("var_7364", dtype = "float64", shape = (3, 4, 4))#candidate|7364|(3, 4, 4)|var|float64
uop_7365 = relay.sqrt(var_7364.astype('float64')) # shape=(3, 4, 4)
bop_7367 = relay.bitwise_xor(var_7364.astype('uint32'), relay.reshape(uop_7365.astype('uint32'), relay.shape_of(var_7364))) # shape=(3, 4, 4)
func_6483_call = mod.get_global_var('func_6483')
func_6487_call = mutated_mod.get_global_var('func_6487')
const_7372 = relay.const([False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True], dtype = "bool")#candidate|7372|(520,)|const|bool
const_7373 = relay.const([1.911114,-8.870503,8.057387,0.095935,-7.355947,8.251049,9.443632,-0.167319,3.133533,-6.433715,4.341312,1.804982,-9.873991,-3.469378,7.906953,9.403033,-3.643790,1.721911,5.857786,-6.594264,5.385417,5.766158,-6.195989,-6.975709,-0.950491,3.011373,-3.422546,1.800978,-6.204401,-4.897396,-1.046819,6.222145,6.580558,-0.170477,3.445651,3.950686,9.262898,4.287304,-1.253036,2.452246,-8.770696,-7.893571,-8.879990,1.570727,-9.021778,-2.594626,0.732895,8.768308,-4.022569,-9.181268,7.789670,-4.843878,-2.967667,-9.688513,-1.193167,5.884547,6.535648,9.317332,-5.451446,-6.705931,-1.307391,1.439770,-2.360115,8.225875,-8.036877,-1.474059,5.072202,-5.812759,-5.202360,-3.748694,5.166586,1.222020,3.705792,-3.094804,-7.512575,-0.920814,4.548624,-6.140845,7.486773,-7.330147,4.403169,7.374613,1.012825,-4.763579,-5.128175,-7.382069,0.534425,-0.682091,-0.539726,-3.934402,-3.009285,-2.424516,-7.569023,2.622309,-0.455989,9.528527,8.351809,-4.732179,7.292970,-0.723837,6.181851,1.373128,1.803705,3.855229,-3.856749,-6.974616,6.347792,-7.106692,6.908905,2.189961,9.018047,-9.841534,7.512729,9.478252,3.966737,-7.920181,5.143123,4.969906,-0.166090,-7.049862,-3.098492,9.114241,6.585821,0.564768,9.712840,-2.792242,-2.669190,1.069688,8.733161,-9.907826,4.399646,8.592515,-5.503848,2.315317,-3.113626,2.528358,-3.102774,-7.060954,-7.303573,-2.062016,-3.093610,-1.643786,5.433666,-9.818902,-3.234116,-8.198715,5.061401,-0.974524,-0.634122,-1.590356,-7.198184,-5.525030,-7.470757,-8.570081,-1.644634,3.826843,-6.186578,3.546037,6.111266,-3.219702,-9.247641,8.656354,1.753050,2.829416,8.736339,-8.602780,5.122378,-3.242056,5.304663,-9.324458,-1.860261,-5.462108,5.993399,-1.001752,6.198431,6.078968,2.746458,8.734882,-4.217526,5.827981,2.156511,7.653125,-1.802604,-2.259478,9.641523,5.104369,-6.539497,-4.179043,-2.904928,5.791353,9.823679,8.444849,2.797582,7.098842,-3.879179,-8.280382,-9.657785,-0.117735,0.923954,-4.376602,-5.670561,-2.292738,3.557818,-3.211283,-9.920626,1.464462,-8.908254,-2.711077,-2.300898,-9.144353,-6.450504,-7.906388,-3.536490,1.134970,1.735374,-3.630550,-0.434200,1.913804,1.294492,6.745618,1.654299,-2.835450,7.713200,0.843814,-4.220069,-9.126774,-1.289154,-5.596866,-1.185710,9.753548,5.139990,9.428986,-8.790432,-0.839752,-9.297311,4.552005,-3.394600,-3.946486,0.474706,1.558693,7.619937,-6.584078,-7.245336,-8.335623,0.502044,0.934507,-1.457739,-9.088546,9.596283,-7.871680,-3.543424,8.911396,7.802067,-3.552642,8.430621,9.725052,-4.355669,5.169723,-2.915483,2.860264,4.345521,-9.750170,4.355279,-3.127982,5.742444,-7.829466,1.529923,3.011301,4.447390,3.968289,3.930929,3.595773,-6.712522,7.630884,6.457752,-3.737085,8.933180,-8.137607,7.390958,0.331303,3.504244,-0.513606,3.641842,-2.104290,-2.954901,1.708490,-7.968268,7.791666,4.794303,3.361998,9.590830,8.956961,-0.302027,5.983311,7.115874,8.587999,-3.086394,0.561679,4.198750,8.544072,3.479122,6.513241,2.666849,-1.326339,9.569362,8.051962,-0.489660,4.848008,-3.544991,-1.242839,4.969537,1.954630,-0.897154,5.510240,-6.259281,2.195143,-5.822741,3.741448,7.699091,-4.559020,1.924164,6.944321,2.751443,-8.532398,1.311475,3.073137,-7.736441,-3.241093,6.271109,-5.340847,-5.166625,2.228204,8.628261,2.125115,-6.878526,0.162602,4.482525,8.235020,-7.631318,3.167105,7.411412,-2.026047,7.862499,-1.467959,1.179588,-3.578614,-1.311628,-2.952184,-8.490709,-2.140611,1.433161,-0.765018,-0.158581,5.873645,3.093119,-8.466442,4.831293,1.102513,2.723678,4.845677,-5.497985,6.829154,3.491739,-0.003535,7.932260,9.980118,0.841313,7.212618,1.920712,-6.694523,7.070827,8.384821,3.854509,4.708224,-7.946957,6.328014,-5.449112,6.846244,-7.699661,7.491169,-6.160641,8.685812,-6.164573,9.154698,5.767825,1.710125,-0.644217,-3.137495,3.303097,8.224578,-8.669809,-8.786058,3.220868,1.114434,-8.767823,3.178145,7.792416,-5.258736,3.970168,8.147691,7.071537,-5.796352,-5.079946,0.831610,-7.561737,2.390229,-8.644296,-1.869950,-6.371027,8.611912,-0.488497,6.172522,4.428426,-3.638674,-1.854666,-7.950600,-0.135936,5.392989,2.471103,-3.065745,8.353229,-3.548291,6.652979,6.116673,-0.467333,-5.162619,2.324687,-9.157422,4.874287,-6.733930,1.006729,8.534485,9.091269,-4.168037,-9.014273,-3.962967,-1.954452,0.996807,7.720001,6.965937,2.496800,7.316745,-6.178417,-2.053227,-8.466976,4.647024,5.844443,7.347018,8.778258,6.052784,-3.526353,-6.488014,-8.248614,-0.513165,-6.600313,-3.615829,-0.730054,5.905222,0.921902,-5.990516,-6.696766,5.860280,4.150844,-9.352691,-2.531037,-6.355637,8.189477,-8.159331,-8.142111,-6.008115,-8.098643,-4.921094,-7.838572,1.648703,8.279704,2.846927,3.000000,7.586222,8.698854,-4.054701,2.346169,-3.660441,9.651681,0.979048,8.108661,-3.854185,-2.451234,-1.942862,-4.309975,-2.511109,-6.406392,0.037114,5.027217,-0.030251,-2.904462,-0.284147,4.603852,5.197670,5.949851,-0.891266,-6.132647,2.448795,6.858668,2.033098,2.288701,-4.701068,2.462992,-0.830256,-6.875791,6.877628,7.910402,7.979314,-1.585342,8.866511,9.679789,-2.263228,-0.075093,-7.028612,-3.197595,-5.713372,8.123427,5.686430,-4.440085,2.697542,-7.241545,-3.870417,0.756819,-5.016371,-0.689878,2.104413,8.103711,7.785158,6.076173,5.381652,4.283585,-6.471098,-4.848925,7.000681,0.373222,-0.197782,9.981384,8.603114,-1.492342,-5.834405,3.072684,-9.640327,9.178274,-3.558506,2.873237,-4.032547,4.037941,9.210185,-7.441981,4.295307,-8.073774,1.527700,-1.214762,-0.108386,-0.135636,9.676184,-3.961634,-3.030671,4.416424,5.289124,3.459065,3.008463,-5.148581,-5.516027,7.018870,-0.907410,5.454976,5.334417,-4.660134,-7.802114,-0.270869,-7.768230,2.684741,-2.168185,8.544515,4.507918,-6.157123,-3.496800,-4.580344,2.090279,-8.029101,9.088630,-8.766842,3.582074,-3.820604,1.532939,7.725306,6.209840,3.478704,8.726938,0.072139,4.464235,0.333348,-3.782614,-8.310194,9.255982,1.025291,4.939357,0.725890,-8.179475,-4.509067,-2.564968,4.539358,6.518612,2.552470,-8.811632,4.423888,-4.658132,8.712794,-2.188231,8.797846,-7.274155,-8.091049,-7.896577,-0.199874,7.481968,-7.285536,-1.116600,-3.361498,-2.189754,-0.935277,-8.479026,-2.523001,-7.745049,-1.343038,-7.838473,-7.727526,-3.053706,-9.874651,-2.814134,-5.972485,4.977188,9.712675,-4.564470,4.524848,6.857620,0.547884,-4.543780,2.395435,1.294381,1.586090,5.004518,-2.696031,7.357321,-3.756245,8.128503,9.279233,3.961552,-0.999817,-4.526132,9.705320,8.519124,-6.475591,-4.388738,-3.158413,3.777014,9.555551,9.937065,-6.915157,-5.125124,-8.154192,3.962715,7.178101,-6.801472,9.334098,8.166233,7.461721,4.141188,-9.211246,4.167501,-8.548376,0.258309,7.090171,1.902860,5.216379,-0.539048,-6.748309,8.801405,-6.030546,1.880079,8.355470,-6.127741,-9.594486,-6.207246,-0.500930,2.805158,-2.850832,-7.764818,-0.476654,6.091648,-3.293679,4.385221,-4.314925,-7.548024,0.181903,-0.472398,-4.785383,1.308310,-6.013865,-5.169007,9.205082,1.276272,-4.255316,3.377875,-5.959723,-0.951616,-3.867033,9.601973,-5.349717,9.811615,2.008230,-8.276895,1.754379,-1.873450,2.010586,-9.747846,4.898015,-6.797721,6.027713,-1.947289,7.905807,-0.035451,-9.886701,-3.306703,0.047938,-5.515236,7.302437,4.693403,-6.944206,-5.447104,-3.193764,-7.291042,2.367342,9.676134,-1.648728,-7.556497,-0.322298,4.994762,-2.117279,8.730355,-0.420184,-6.438681,8.528484,-1.836758,-9.025867,9.915021,8.821923,-5.197094,4.191325,1.987842,8.275201,4.814376,8.874571,-6.399409,-5.021976,4.689418,-3.412489,-5.995581,5.385248,3.763836,1.707600,-5.393221,3.900034,3.577312,-2.337147,-8.284164,-6.697456,9.678448,2.825174,6.042312,-7.880782,-9.721901,7.097009,-9.746585,3.186288,-5.166124,-1.791455,7.070132,8.819362,-0.073305,8.767373,1.480787,-3.028592,2.857347,-0.704787,3.583441,-9.657756,7.360501,-0.210208,-8.187256,-6.805298,3.323872,-7.469191,-2.174364,8.073252,4.645101,2.210821,4.183604,-3.677392,3.684443,3.191615,3.160397,-4.664593,7.637990,-4.751204,-3.184488,-2.955001,2.304096,-9.658026,-3.014726,7.967119,3.333580,-5.371336,-8.253686,3.328859,-2.515807,7.612832,-9.552290,-5.714325,-7.607581,-4.393756,3.929768,-8.333330,3.777845,-8.904654,7.900144,5.377300,6.988136,7.474165,-0.396462,0.022543,7.776574,-8.512970,5.405615,-7.023221,2.330945,-2.853333,4.942647,-8.235291,-1.880376,2.186068,-5.008246,-9.022943,-9.092196,7.627824,-0.751505,8.771655,9.620307,-1.387045,2.544436,2.608260,5.246685,4.665242,-1.254150,9.808457,3.676296,-2.989586,2.971559,1.156027,-7.520523,3.897793,6.795254,8.928817,-0.175234,2.888505,-2.499188,5.446177,0.580001,-6.438372,-0.382677,-6.102400,-6.101707,0.979136,1.225554,-5.974122,6.087342,-3.848982,-7.846634,-5.690061,2.129490,-2.089478,-5.418348,7.126234,7.763642,8.734474,4.503694,4.845268,1.395117,-9.552675,6.064144,-0.950801,-2.272764,3.693700,-4.227684,3.010686,-3.442187,1.611582,2.771320,-2.605425,9.412148,-1.405895,7.914234,-5.554455,-9.279935,7.396177,0.228321,1.903501,-2.233910,8.183835,-5.663836,5.779125,-9.716016,4.075439,9.317713,-5.919745,0.872704,-7.493899,-5.644616,4.147694,2.144882,-3.497518,0.856352,-2.939344,8.549881,-5.747437,-8.799780,-3.934901,3.943996,1.958624,5.623762,9.274643,-4.041868,0.932824,-5.618687,-1.056143,9.828150,3.197690,-5.488761,-6.923202,6.423310,9.966578,-2.425346,-9.325655,7.571170,2.240167,-2.594475,9.655148,-4.722725,2.806351,-2.737631,-5.475234,4.044309,-3.323486,7.920614,4.586502,3.032316,-5.225345,-7.906370,5.076493,-6.032838,-1.096127,7.465433,-0.683577,-2.104371,2.132841,4.550151,-3.307036,8.921029,-7.627858,7.033931,2.450231,-4.210976,0.002895,-9.233431,-0.946534,4.294481,5.751189,-6.256627,-3.246915,-0.092793,5.866463,2.681732,-5.534350,-2.383954,2.306974,-0.861578,0.881539,-0.117094,4.854920,4.356903,-1.326789,-5.162253,-3.441955,0.167045,0.894906,-4.151271,5.198503,-3.379225,-6.419016,-9.355662,-7.500273,-9.410473,4.051181,-5.028999,7.853287,-0.914501,-5.194736,-1.771982,9.748917,7.500191,4.453622,-1.205164,3.851390,-8.961297,2.694963,5.902404,4.965945,9.769853,6.178291,8.614624,-2.429457,-8.249445,-7.150395,1.158716,-7.434445,-4.300948,-2.249901,-4.104627,0.347147,7.027005,1.079351,-8.809745,-3.654673,5.859763,-8.133733,-8.792165,-8.423591,5.675939,0.370634,-9.007396,-9.456769,3.473115,2.075785,-8.492659,-3.986513,-5.539563,5.697846,-3.469925,-1.925612,0.112144,-7.522567,1.759926,-7.826971,5.879099,1.257462,7.468399,-2.969269,-5.908705,-0.888964,-2.452238,-2.603170,-5.651492,-5.324894,7.260873,-2.998252,3.027218,6.183446,8.793299,2.224493,2.258839,-7.330533,-7.736400,-4.867770,0.064248,-3.566211,5.524868,-1.496166,-0.483510,5.052690,4.377226,-9.852404,-8.223378,-1.176714,4.465112,5.974277,-2.806912,1.973466,-0.574642,-5.062036,-4.770325,-1.210938,6.617919,8.780077,5.335599,-8.286663,-7.566374,5.642532,-1.315839,-3.408765,4.727325,-2.698129,3.438515,2.394759,6.238938,1.782060,-6.369371,-6.442276,-3.374957,2.115057,-1.797284,4.438404,-5.578560,5.008980,-7.337454,-7.039950,6.257080,2.467876,-2.500817,5.246382,-5.405308,2.581642,-9.249128,1.947039,7.319018,-1.983197,-6.378808,-8.792933,-3.323989,0.408500,2.216260,-1.201738,-7.957024,5.523412,-3.834766,8.386772,-0.670722,6.510674,-1.046885,2.919216,8.681654,1.452669,5.757619,-6.897722,1.949238,-8.683794,1.250847,-7.023696,2.625466,-3.198596,-4.674241,-6.970375,-2.222791,7.023876,-7.959665,-4.704043,-2.187396,4.705807,9.159215,7.928326,5.201162,0.986308,-8.545968,4.359369,-0.598896,-9.391267,4.925831,1.150982,-3.611011,-0.168767,7.515267,0.850281,-0.014331,-1.226609,-7.502176,-9.722448,6.476109,2.693625,4.967596,8.450440,-5.692711,-5.226773,1.703081,-7.696286,-8.547755,-8.904330,7.294615,8.430955,6.991349,-6.982618,6.539081,8.238886,-3.464162,8.512257,8.176724,7.824188,-8.260466,9.179223,6.576436,0.716254,-2.956739,-9.068016,7.083357,7.263714,4.521360,6.674455,1.096191,6.775266,0.406228,8.278198,-1.474722,-0.310808,7.709188,-5.332641,0.281018,-4.342128,1.333142,-3.040878,8.064350,0.825043,3.776846,1.571762,-3.316441,-1.914958,7.054381,-9.931686,5.676111,-4.974226,7.384328,7.520327,4.209621,-6.213166,-9.774339,4.317842,3.233951,-6.807955,3.910274,3.179826,6.184364,0.657568,2.009147,-7.092434,1.553329,0.120167,6.117176], dtype = "float32")#candidate|7373|(1248,)|const|float32
call_7371 = relay.TupleGetItem(func_6483_call(relay.reshape(const_7372.astype('bool'), [520,]), relay.reshape(const_7373.astype('float32'), [1248,]), ), 1)
call_7374 = relay.TupleGetItem(func_6487_call(relay.reshape(const_7372.astype('bool'), [520,]), relay.reshape(const_7373.astype('float32'), [1248,]), ), 1)
func_6977_call = mod.get_global_var('func_6977')
func_6983_call = mutated_mod.get_global_var('func_6983')
var_7384 = relay.var("var_7384", dtype = "int64", shape = (40,))#candidate|7384|(40,)|var|int64
var_7385 = relay.var("var_7385", dtype = "float64", shape = (120,))#candidate|7385|(120,)|var|float64
const_7386 = relay.const([[6,6,-7,-10,10,-1,5,8,-1,-7,-8,-3,7,6,7,-6,5,2,2,10,6,-4,-1,7,5,-2,-4,8,2,7,-5,2,-5,-1,6,9,-5,7,5,-7,-7,1,-3,-5,4,-4,-5,8,1,-6,-5,1,8,-5,1,1,-10,-1,3,5,8,-6,-6,-2,6,-5,1,-10,-5,1,-6,6,-7,8,-3,-5,4,3,-6,8,10,-2,1,-1,-8,4,7,9,-7,3,-9,2,-10,5,7,-9,-9,2,-4,8,-7,3,2,-7,-10,-10,7,-4,6,-4,-3,2,3,-3,8,6,-6,9,-2,9,-5,10,-1,-2,2,-10,6,-6,-7,-3,-10,8]], dtype = "int64")#candidate|7386|(1, 132)|const|int64
const_7387 = relay.const([-1.471530,-6.772793,-3.503907,-7.238084,-9.035559,-6.795512,7.727222,1.645965,-4.498285,5.354585,-2.315361,8.945850,9.580320,4.051921,7.804595,-4.031928,-8.870250,-5.219340,-3.220096,2.255015,6.278540,-8.163546,3.360007,3.499982,3.637350,-2.148934,-3.759315,3.820516,0.793785,-1.526886,6.118561,-6.573956,3.621218,-1.475337,3.183819,-3.918856,9.469656,8.244259,-6.138293,-5.837492,-5.446224,-6.340391,-7.867918,-0.419641,-8.754922,-2.494183,8.821982,-4.214264,9.686790,-9.414940,-4.085491,2.271358,9.752696,-4.533450,7.890594,2.678031,-0.681943,-8.345957,0.503870,-6.732400,8.859774,6.235715,3.687993,4.354744,-9.606118,8.835695,-6.555006,-9.244966,4.777942,1.075362,4.405545,-2.944565,-1.142271,-1.632670,1.715862,-3.237812,3.461184,2.340085,0.409781,8.707151,-0.609028,-3.363704,5.423695,-3.758885,-7.496429,5.411140,7.026100,3.459777,-1.248603,0.365655,-8.413337,-0.347463,-5.878848,-6.640790,-7.403912,7.438516,-1.470756,5.772674,8.782216,-9.831393,-4.115814,3.188752,-2.123418,0.801721,0.498972,-3.729210,-8.938225,9.316131,8.379923,-0.403297,-2.777567,-2.852129,-1.372561,-9.947450,-6.761977,4.762860,5.220572,-7.207333,7.666424,-5.217978,-5.155619,-0.347269,-6.673047,9.677501,5.273883,9.473988,-5.229085,-2.053804,-5.453255,-1.546862,2.186351,3.038622,-2.686270,-6.742229,2.691551,-9.941812,-6.869550,7.266986,9.972921,-3.991256,-0.470207,-6.941472,5.522808,9.016368,3.878761,-2.500594,3.266192,8.050102,1.963286,4.419224,3.250058,4.049347,-4.268675,-6.180086,0.305686,-9.070979,-0.055758,-4.466083,5.165050,0.330211,0.597360,-4.834485,8.494472,3.843362,3.216029,-9.371551,-8.490280,-3.632532,-5.060798,-6.121706,4.578413,6.497221,7.956289,-2.694616,-6.169599,-4.809056,9.853079,-9.538543,-0.594980,-8.028787,1.120039,-9.368787,-6.389078,-3.584495,2.814045,-7.718199,-7.152408,2.372749,-2.918423,-1.767446,0.188378,-2.235922,0.615741,-0.424152,-9.293468,-3.536920,4.405930,-5.765310,9.113355,-9.819560,2.565867,-4.797558,-1.124106,-1.873542,4.839351,5.005209,8.461348,9.232750,3.730514,-8.593833,-6.069082,3.858666,-3.824876,4.242362,-3.594923,-3.916702,0.114289,4.265694,-4.819155,-9.592048,1.679790,7.589838,3.849673,9.930791,-9.560843,2.483431,-6.657258,-2.158193,-6.560153,7.533321,8.804380,-7.284370,-0.906840,-0.767947,3.392941,-1.249786,8.013712,9.521942,-0.098208,5.588950,0.241142,-5.123832,2.411416,-8.708142,-9.997214,-2.054151,0.311126,-7.746820,3.624602,1.562191,3.019843,9.511445,4.946103,-1.473051,8.353110,-4.739048,-5.810002,9.690308,7.725038,6.317840,5.428735,7.542226,-6.149976,-3.659321,-5.878092,7.998914,3.580267,-2.898834,3.651865,-1.583996,-8.652458,7.996537,0.812825,-4.560347,-0.633451,2.903616,-7.576863,5.647266,-2.102693,-6.321682,3.637919,0.068860,-7.243090,5.033287,-3.408331,-5.014910,-9.459587,1.139297,-4.131289,-3.048692,0.245330,-7.354360,-0.583624,-7.397886,2.380633,9.690969,-6.810218,4.278751,4.598516,8.118030,0.812246,-4.299162,6.175328,9.280788,-5.116500,3.008847,3.212753,8.824608,4.864688,0.153939,-5.087316,6.391405,3.260054,4.674888,0.470958,-7.193962,-0.882724,-1.408311,-2.947196,-7.360442,4.193140,-0.278118,0.436936,-0.080108,8.393203,-8.604772,-2.283872,9.107079,-6.631143,-1.713652,8.596687,-9.933850,-3.592220,2.629745,4.243277,3.768430,6.306784,7.023382,4.860753,1.199753,6.420430,-0.233933,9.578064,2.370571,-9.191054,0.277847,-2.842943,3.914658,-6.370183,5.030424,-7.215322,-4.973473,-3.915375,7.508486,7.531797,9.011465,-3.018302,7.326967,4.719712,3.885953,-9.862697,2.858517,6.681504,4.687268,8.032576,7.187192,2.648133,-9.032946,0.735939,7.041109,-4.334964,-2.715171,-2.689281,3.173076,-4.224598,5.479037,3.414353,-5.283571,-0.353756,0.323785,-8.026440,7.165437,-3.768377,-2.882510,1.618687,7.200186,-1.548867,-3.724652,4.075255,-8.602137,5.758785,-4.720559,-7.586983,7.708213,4.328066,-1.339714,7.428452,3.754993,6.547984,1.695561,-6.973191,9.723672,-1.590595,5.217391,5.162897,-3.002841,-2.964552,8.409262,4.283118,8.409586,0.161682,-7.862573,1.703049,5.640239,0.583932,-3.460655,2.454941,-0.642751,5.529619,2.353857,4.543894,2.166413,-6.417087,-0.068136,8.028583,-4.365678,-2.341556,9.354431,1.972786,-6.111378,-2.476789,-1.343706,-1.945563,6.853961,-5.159732,-7.741913,-9.687792,0.446356,4.906642,-8.577799,3.063290,0.864120,-7.841044,-7.245912,5.923503,-9.067971,3.402937,1.019636,-8.450092,2.816489,9.685296,-2.841678,-7.356245,2.124957,-4.261543,-2.654729,-6.434061,4.964279,8.638555,-8.004785,-3.718738,-8.185850,9.513173,-7.939172,-3.583083,4.182828,8.639111,-2.638080,1.747214,0.673900,0.686044,-7.344594,-9.932451,-0.403879,0.861631,-3.832051,-1.841332,4.778556,9.240528,8.102690,4.960591,2.196690,-6.350298,-7.580588,1.189669,4.422824,-6.921129,8.022841,7.044365,-0.177744,-0.355207,6.612511,9.373563,2.633433,-9.285070,-1.497828,3.924742,-3.008148,0.677360,0.775857,4.646331,-9.170234,-9.342906,-9.124800,1.057644,-1.604045,3.917940,-6.085242,-3.421263,0.344365,-9.496384,7.784507,-1.440946,-3.933370,-4.244620,-7.130931,-4.854887,1.559024,-1.735240,3.762665,-1.762650,-5.958351,0.395852,-7.448941,-3.174478,-1.247192,-9.062559,-1.266664,3.884578,-3.467792,-5.256071,7.772491,9.688641,-3.134876,-3.175180,-8.217025,8.043830,9.937311,3.560544,3.370150,8.448927,0.695489,8.218104,-8.909689,-3.568997,-4.215859,-5.538764,3.455988,7.449697,1.878877,3.532990,-7.738256,-7.264379,8.596540,-6.496174,6.003259,-9.766374,5.582707,-5.629511,1.189891,-5.802629,-6.532584,3.310908,8.783949,6.434662,7.740346,-7.921921,7.289978,2.033743,-8.378446,8.028843,0.264680,-5.797026,6.951491,4.061792,6.776248,4.034475,-7.967914,-7.653223,6.157305,-7.825385,-6.851749,-4.591046,-6.301728,7.931985,3.697368,-0.833230,-2.037713,3.879345,-5.946082,-8.352431,3.249592,7.745191,2.608983,6.354625,3.954728,0.279661,-8.168104,1.469066,1.298328,3.575387,-4.378256,2.981944,8.570119,-7.863273,1.791950,9.046475,-6.020484,-0.627196,-4.333318,-5.043307,-5.919523,-5.084231,-9.946482,0.177731,-6.547542,-0.907288,-2.015985,2.477651,7.586883,6.226304,1.956000,1.389507,0.967736,0.963855,6.179233,0.868227,9.835589,-0.378862,-1.986371,1.434807,-3.074244,5.337008,1.628049,-2.683989,-6.221441,-7.755956,2.799107,-9.421827,7.628825,-0.971293,7.218266,-1.438520,9.019565,-6.565782,-7.259553,-5.431909,-7.313954,-1.975654,5.387927,-4.795202,-6.977451,0.607656,-5.011006,8.795021,9.250278,-8.389652,5.254225,5.726794,6.126737,-7.373417,3.805653,-5.148806,-1.050666,6.821853,-4.950434,-7.093650,-2.484075,-1.792078,0.279826,9.706469,7.996652,2.078750,-4.107245,-2.875881,3.293396,-7.389107,0.629462,-0.564338,6.950659,2.358116,6.807405,-2.431436,6.909999,-5.614776,-0.354026,1.914481,1.976126,1.317321,2.332933,0.132152,-0.964335,5.521965,-7.735586,-0.591600,-0.004794,0.292108,6.575841,7.240432,-1.454503,5.455137,2.989198,1.639341,2.259624,3.237468,-8.029875,3.216179,-0.634328,-6.596867,-6.070666,-5.652197,2.927097,-9.531173,2.634402,4.275252,3.279414,4.398163,-7.753683,4.312177,8.216761], dtype = "float32")#candidate|7387|(720,)|const|float32
call_7383 = relay.TupleGetItem(func_6977_call(relay.reshape(var_7384.astype('int64'), [40,]), relay.reshape(var_7385.astype('float64'), [120, 1]), relay.reshape(const_7386.astype('int64'), [3, 44]), relay.reshape(const_7387.astype('float32'), [720,]), relay.reshape(const_7373.astype('float32'), [1248,]), ), 2)
call_7388 = relay.TupleGetItem(func_6983_call(relay.reshape(var_7384.astype('int64'), [40,]), relay.reshape(var_7385.astype('float64'), [120, 1]), relay.reshape(const_7386.astype('int64'), [3, 44]), relay.reshape(const_7387.astype('float32'), [720,]), relay.reshape(const_7373.astype('float32'), [1248,]), ), 2)
output = relay.Tuple([bop_7367,call_7371,const_7372,const_7373,call_7383,var_7384,var_7385,const_7386,const_7387,])
output2 = relay.Tuple([bop_7367,call_7374,const_7372,const_7373,call_7388,var_7384,var_7385,const_7386,const_7387,])
func_7389 = relay.Function([var_7364,var_7384,var_7385,], output)
mod['func_7389'] = func_7389
mod = relay.transform.InferType()(mod)
var_7390 = relay.var("var_7390", dtype = "float64", shape = (3, 4, 4))#candidate|7390|(3, 4, 4)|var|float64
var_7391 = relay.var("var_7391", dtype = "int64", shape = (40,))#candidate|7391|(40,)|var|int64
var_7392 = relay.var("var_7392", dtype = "float64", shape = (120,))#candidate|7392|(120,)|var|float64
output = func_7389(var_7390,var_7391,var_7392,)
func_7393 = relay.Function([var_7390,var_7391,var_7392,], output)
mutated_mod['func_7393'] = func_7393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_7471 = relay.TupleGetItem(func_6421_call(), 0)
call_7472 = relay.TupleGetItem(func_6423_call(), 0)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
const_7482 = relay.const([7.450284,5.908815,-8.796304,-9.226153,-3.395751,3.740429,0.742344,6.268039,7.312480,0.423091,2.515811,-8.919400,6.267041,7.338194,0.920931,9.904035,-5.899912,5.323058,5.344216,-5.316114,6.719601,6.917172,8.506338,1.921243,7.001819,-8.959087,-3.954654,-5.137426,0.727848,-5.955156,5.180379,4.872052,-5.738559,-6.972592,6.114374,-4.441904,-7.701681,1.868175,-2.413255,-4.422075,0.177239,-7.992639,5.396521,3.823032,-7.055159,6.897351,7.884538,4.475048,5.381728,9.985912,-2.417184,-4.852324,5.801512,-6.412672,-0.662396,-3.281856,8.748626,4.421966,1.757383,2.537658,2.879399,3.711995,-1.953237,-9.027135,-3.781614,-7.912192,0.961520,8.196058,-2.599263,9.737626,0.280566,-1.045585,-6.809341,0.947788,6.323390,-0.977156,-3.437960,8.531700,-8.151896,-0.039681,-0.240254,-8.708745,2.742726,-6.086520,6.870535,3.878506,3.643554,-8.132429,3.414467,0.743911,-6.955820,5.301877,6.788577,9.725241,6.845416,-3.146328,-3.572422,6.413886,7.701732,3.718228,7.847003,7.038618,5.757224,0.091456,2.403637,2.762044,-3.968704,-4.486829,7.129399,8.865133,-3.716639,-2.725663,-0.072883,-7.131696,-5.543848,4.081111,-3.837498,-9.010401,-5.980506,7.172869], dtype = "float64")#candidate|7482|(120,)|const|float64
call_7481 = relay.TupleGetItem(func_3732_call(relay.reshape(const_7482.astype('float64'), [5, 3, 8]), relay.reshape(const_7482.astype('float64'), [5, 3, 8]), ), 1)
call_7483 = relay.TupleGetItem(func_3735_call(relay.reshape(const_7482.astype('float64'), [5, 3, 8]), relay.reshape(const_7482.astype('float64'), [5, 3, 8]), ), 1)
func_6856_call = mod.get_global_var('func_6856')
func_6860_call = mutated_mod.get_global_var('func_6860')
const_7494 = relay.const([False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True], dtype = "bool")#candidate|7494|(1470,)|const|bool
call_7493 = relay.TupleGetItem(func_6856_call(relay.reshape(call_7471.astype('uint64'), [3, 13, 15]), relay.reshape(const_7494.astype('bool'), [1470,]), ), 3)
call_7495 = relay.TupleGetItem(func_6860_call(relay.reshape(call_7471.astype('uint64'), [3, 13, 15]), relay.reshape(const_7494.astype('bool'), [1470,]), ), 3)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
call_7499 = relay.TupleGetItem(func_3732_call(relay.reshape(const_7482.astype('float64'), [5, 3, 8]), relay.reshape(const_7482.astype('float64'), [5, 3, 8]), ), 2)
call_7500 = relay.TupleGetItem(func_3735_call(relay.reshape(const_7482.astype('float64'), [5, 3, 8]), relay.reshape(const_7482.astype('float64'), [5, 3, 8]), ), 2)
output = relay.Tuple([call_7471,call_7481,const_7482,call_7493,const_7494,call_7499,])
output2 = relay.Tuple([call_7472,call_7483,const_7482,call_7495,const_7494,call_7500,])
func_7504 = relay.Function([], output)
mod['func_7504'] = func_7504
mod = relay.transform.InferType()(mod)
mutated_mod['func_7504'] = func_7504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7504_call = mutated_mod.get_global_var('func_7504')
call_7505 = func_7504_call()
output = call_7505
func_7506 = relay.Function([], output)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_7577 = relay.TupleGetItem(func_6421_call(), 0)
call_7578 = relay.TupleGetItem(func_6423_call(), 0)
output = relay.Tuple([call_7577,])
output2 = relay.Tuple([call_7578,])
func_7580 = relay.Function([], output)
mod['func_7580'] = func_7580
mod = relay.transform.InferType()(mod)
output = func_7580()
func_7581 = relay.Function([], output)
mutated_mod['func_7581'] = func_7581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_7593 = relay.TupleGetItem(func_6082_call(), 2)
call_7594 = relay.TupleGetItem(func_6083_call(), 2)
output = relay.Tuple([call_7593,])
output2 = relay.Tuple([call_7594,])
func_7618 = relay.Function([], output)
mod['func_7618'] = func_7618
mod = relay.transform.InferType()(mod)
output = func_7618()
func_7619 = relay.Function([], output)
mutated_mod['func_7619'] = func_7619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7504_call = mod.get_global_var('func_7504')
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7666 = relay.TupleGetItem(func_7504_call(), 2)
call_7667 = relay.TupleGetItem(func_7506_call(), 2)
output = relay.Tuple([call_7666,])
output2 = relay.Tuple([call_7667,])
func_7669 = relay.Function([], output)
mod['func_7669'] = func_7669
mod = relay.transform.InferType()(mod)
output = func_7669()
func_7670 = relay.Function([], output)
mutated_mod['func_7670'] = func_7670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_7685 = relay.TupleGetItem(func_6592_call(), 0)
call_7686 = relay.TupleGetItem(func_6593_call(), 0)
output = relay.Tuple([call_7685,])
output2 = relay.Tuple([call_7686,])
func_7687 = relay.Function([], output)
mod['func_7687'] = func_7687
mod = relay.transform.InferType()(mod)
output = func_7687()
func_7688 = relay.Function([], output)
mutated_mod['func_7688'] = func_7688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7504_call = mod.get_global_var('func_7504')
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7701 = relay.TupleGetItem(func_7504_call(), 4)
call_7702 = relay.TupleGetItem(func_7506_call(), 4)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_7726 = relay.TupleGetItem(func_5675_call(), 0)
call_7727 = relay.TupleGetItem(func_5677_call(), 0)
func_4152_call = mod.get_global_var('func_4152')
func_4156_call = mutated_mod.get_global_var('func_4156')
var_7729 = relay.var("var_7729", dtype = "bool", shape = (520, 1))#candidate|7729|(520, 1)|var|bool
var_7730 = relay.var("var_7730", dtype = "float32", shape = (1248,))#candidate|7730|(1248,)|var|float32
call_7728 = relay.TupleGetItem(func_4152_call(relay.reshape(var_7729.astype('bool'), [10, 4, 13]), relay.reshape(var_7730.astype('float32'), [1248,]), ), 3)
call_7731 = relay.TupleGetItem(func_4156_call(relay.reshape(var_7729.astype('bool'), [10, 4, 13]), relay.reshape(var_7730.astype('float32'), [1248,]), ), 3)
output = relay.Tuple([call_7701,call_7726,call_7728,var_7729,var_7730,])
output2 = relay.Tuple([call_7702,call_7727,call_7731,var_7729,var_7730,])
func_7744 = relay.Function([var_7729,var_7730,], output)
mod['func_7744'] = func_7744
mod = relay.transform.InferType()(mod)
var_7745 = relay.var("var_7745", dtype = "bool", shape = (520, 1))#candidate|7745|(520, 1)|var|bool
var_7746 = relay.var("var_7746", dtype = "float32", shape = (1248,))#candidate|7746|(1248,)|var|float32
output = func_7744(var_7745,var_7746,)
func_7747 = relay.Function([var_7745,var_7746,], output)
mutated_mod['func_7747'] = func_7747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7669_call = mod.get_global_var('func_7669')
func_7670_call = mutated_mod.get_global_var('func_7670')
call_7782 = relay.TupleGetItem(func_7669_call(), 0)
call_7783 = relay.TupleGetItem(func_7670_call(), 0)
output = relay.Tuple([call_7782,])
output2 = relay.Tuple([call_7783,])
func_7786 = relay.Function([], output)
mod['func_7786'] = func_7786
mod = relay.transform.InferType()(mod)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mutated_mod.get_global_var('func_7786')
call_7787 = func_7786_call()
output = call_7787
func_7788 = relay.Function([], output)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_7820 = relay.TupleGetItem(func_6082_call(), 2)
call_7821 = relay.TupleGetItem(func_6083_call(), 2)
output = call_7820
output2 = call_7821
func_7843 = relay.Function([], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7843_call = mutated_mod.get_global_var('func_7843')
call_7844 = func_7843_call()
output = call_7844
func_7845 = relay.Function([], output)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7852 = relay.var("var_7852", dtype = "float32", shape = (16, 9, 11))#candidate|7852|(16, 9, 11)|var|float32
var_7853 = relay.var("var_7853", dtype = "float32", shape = (16, 9, 11))#candidate|7853|(16, 9, 11)|var|float32
bop_7854 = relay.equal(var_7852.astype('bool'), relay.reshape(var_7853.astype('bool'), relay.shape_of(var_7852))) # shape=(16, 9, 11)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_7861 = relay.TupleGetItem(func_6200_call(), 0)
call_7862 = relay.TupleGetItem(func_6201_call(), 0)
output = relay.Tuple([bop_7854,call_7861,])
output2 = relay.Tuple([bop_7854,call_7862,])
func_7903 = relay.Function([var_7852,var_7853,], output)
mod['func_7903'] = func_7903
mod = relay.transform.InferType()(mod)
var_7904 = relay.var("var_7904", dtype = "float32", shape = (16, 9, 11))#candidate|7904|(16, 9, 11)|var|float32
var_7905 = relay.var("var_7905", dtype = "float32", shape = (16, 9, 11))#candidate|7905|(16, 9, 11)|var|float32
output = func_7903(var_7904,var_7905,)
func_7906 = relay.Function([var_7904,var_7905,], output)
mutated_mod['func_7906'] = func_7906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_7908 = relay.TupleGetItem(func_6200_call(), 2)
call_7909 = relay.TupleGetItem(func_6201_call(), 2)
output = relay.Tuple([call_7908,])
output2 = relay.Tuple([call_7909,])
func_7914 = relay.Function([], output)
mod['func_7914'] = func_7914
mod = relay.transform.InferType()(mod)
output = func_7914()
func_7915 = relay.Function([], output)
mutated_mod['func_7915'] = func_7915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_8001 = relay.TupleGetItem(func_7786_call(), 0)
call_8002 = relay.TupleGetItem(func_7788_call(), 0)
output = relay.Tuple([call_8001,])
output2 = relay.Tuple([call_8002,])
func_8010 = relay.Function([], output)
mod['func_8010'] = func_8010
mod = relay.transform.InferType()(mod)
mutated_mod['func_8010'] = func_8010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8010_call = mutated_mod.get_global_var('func_8010')
call_8011 = func_8010_call()
output = call_8011
func_8012 = relay.Function([], output)
mutated_mod['func_8012'] = func_8012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8134 = relay.var("var_8134", dtype = "float32", shape = (2, 11, 1))#candidate|8134|(2, 11, 1)|var|float32
uop_8135 = relay.asin(var_8134.astype('float32')) # shape=(2, 11, 1)
output = relay.Tuple([uop_8135,])
output2 = relay.Tuple([uop_8135,])
func_8140 = relay.Function([var_8134,], output)
mod['func_8140'] = func_8140
mod = relay.transform.InferType()(mod)
var_8141 = relay.var("var_8141", dtype = "float32", shape = (2, 11, 1))#candidate|8141|(2, 11, 1)|var|float32
output = func_8140(var_8141)
func_8142 = relay.Function([var_8141], output)
mutated_mod['func_8142'] = func_8142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7226_call = mod.get_global_var('func_7226')
func_7228_call = mutated_mod.get_global_var('func_7228')
call_8173 = relay.TupleGetItem(func_7226_call(), 1)
call_8174 = relay.TupleGetItem(func_7228_call(), 1)
output = relay.Tuple([call_8173,])
output2 = relay.Tuple([call_8174,])
func_8176 = relay.Function([], output)
mod['func_8176'] = func_8176
mod = relay.transform.InferType()(mod)
output = func_8176()
func_8177 = relay.Function([], output)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_8192 = func_5708_call()
call_8193 = func_5708_call()
uop_8207 = relay.cosh(call_8192.astype('float32')) # shape=(3, 13, 15)
uop_8209 = relay.cosh(call_8193.astype('float32')) # shape=(3, 13, 15)
bop_8210 = relay.logical_or(uop_8207.astype('bool'), relay.reshape(call_8192.astype('bool'), relay.shape_of(uop_8207))) # shape=(3, 13, 15)
bop_8213 = relay.logical_or(uop_8209.astype('bool'), relay.reshape(call_8193.astype('bool'), relay.shape_of(uop_8209))) # shape=(3, 13, 15)
output = bop_8210
output2 = bop_8213
func_8214 = relay.Function([], output)
mod['func_8214'] = func_8214
mod = relay.transform.InferType()(mod)
output = func_8214()
func_8215 = relay.Function([], output)
mutated_mod['func_8215'] = func_8215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_8325 = relay.TupleGetItem(func_6592_call(), 0)
call_8326 = relay.TupleGetItem(func_6593_call(), 0)
var_8336 = relay.var("var_8336", dtype = "uint64", shape = (3, 13, 15))#candidate|8336|(3, 13, 15)|var|uint64
bop_8337 = relay.not_equal(call_8325.astype('bool'), relay.reshape(var_8336.astype('bool'), relay.shape_of(call_8325))) # shape=(3, 13, 15)
bop_8340 = relay.not_equal(call_8326.astype('bool'), relay.reshape(var_8336.astype('bool'), relay.shape_of(call_8326))) # shape=(3, 13, 15)
output = bop_8337
output2 = bop_8340
func_8371 = relay.Function([var_8336,], output)
mod['func_8371'] = func_8371
mod = relay.transform.InferType()(mod)
mutated_mod['func_8371'] = func_8371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8372 = relay.var("var_8372", dtype = "uint64", shape = (3, 13, 15))#candidate|8372|(3, 13, 15)|var|uint64
func_8371_call = mutated_mod.get_global_var('func_8371')
call_8373 = func_8371_call(var_8372)
output = call_8373
func_8374 = relay.Function([var_8372], output)
mutated_mod['func_8374'] = func_8374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8413 = relay.var("var_8413", dtype = "int64", shape = (1, 5, 8))#candidate|8413|(1, 5, 8)|var|int64
const_8414 = relay.const([[[1,1,-6,10,7,-9,7,-8],[9,6,6,-9,3,-6,9,-1],[7,-6,-6,-9,2,-2,9,7],[8,3,9,8,5,-7,9,-7],[-9,-1,9,5,-7,-2,7,-2]],[[5,8,9,-6,-1,-1,2,-1],[2,3,4,-5,-7,5,8,-10],[7,9,-5,2,-7,-10,-2,-9],[3,-8,-1,5,-1,1,-2,-4],[-8,-4,-7,1,-1,2,-2,-2]],[[4,9,4,-3,-6,6,-7,8],[-1,-10,-1,2,-2,9,-9,8],[-2,7,10,-1,-6,6,-5,-9],[-9,7,-10,3,-7,-7,-5,8],[-1,-1,6,-9,9,6,-2,-2]],[[-3,-2,-10,-6,-9,-1,-7,2],[-5,9,7,6,5,-9,6,-7],[-10,2,4,-5,3,9,-7,10],[-4,-3,-6,6,-8,10,6,-3],[-8,6,-6,-7,9,1,-7,-7]],[[-9,-1,-7,8,-3,1,6,8],[2,-8,-7,7,10,-3,6,-7],[8,10,6,5,6,1,-2,8],[2,-2,8,6,-7,5,9,-10],[4,6,-8,9,7,-8,8,-4]],[[-9,-1,8,-6,-8,-8,-7,-6],[10,10,3,4,1,2,7,10],[-4,6,8,-7,-7,5,-5,4],[3,5,-3,-9,-10,-4,8,-6],[4,-4,-4,-3,8,-4,9,10]],[[1,-9,4,-1,-10,3,10,10],[-9,-10,-7,-5,-9,2,6,9],[7,4,-9,-6,-1,-6,-8,4],[-3,4,5,7,-8,-1,2,4],[1,1,-2,-8,-9,3,-1,7]],[[-1,-3,2,-4,10,-7,-7,-4],[-10,8,-3,4,-1,1,3,-5],[1,-5,-2,3,4,6,2,4],[4,-1,-10,-1,3,-2,-10,-3],[9,-3,-6,-2,-6,-6,10,-8]],[[1,3,6,2,-8,6,-3,8],[-8,2,-7,6,5,-10,9,-9],[-9,2,8,7,-8,3,-3,-3],[4,-4,-2,-4,2,9,-4,-2],[1,-10,-5,5,1,5,1,-4]],[[-5,-5,9,-3,-5,-2,1,2],[7,-2,-1,6,-7,4,10,2],[-8,-4,8,10,10,-10,6,-6],[8,-5,-7,8,3,1,-4,3],[-1,9,-4,1,-10,8,5,-1]],[[2,-1,-9,10,-5,-7,3,8],[-5,-3,5,5,-5,1,7,-4],[-8,-5,-3,8,5,6,-3,3],[-1,-9,8,-10,-8,-4,3,-1],[2,7,-10,-5,10,4,4,-3]]], dtype = "int64")#candidate|8414|(11, 5, 8)|const|int64
bop_8415 = relay.maximum(var_8413.astype('int64'), const_8414.astype('int64')) # shape=(11, 5, 8)
bop_8418 = relay.bitwise_xor(var_8413.astype('int16'), const_8414.astype('int16')) # shape=(11, 5, 8)
output = relay.Tuple([bop_8415,bop_8418,])
output2 = relay.Tuple([bop_8415,bop_8418,])
func_8426 = relay.Function([var_8413,], output)
mod['func_8426'] = func_8426
mod = relay.transform.InferType()(mod)
mutated_mod['func_8426'] = func_8426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8427 = relay.var("var_8427", dtype = "int64", shape = (1, 5, 8))#candidate|8427|(1, 5, 8)|var|int64
func_8426_call = mutated_mod.get_global_var('func_8426')
call_8428 = func_8426_call(var_8427)
output = call_8428
func_8429 = relay.Function([var_8427], output)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8460 = relay.var("var_8460", dtype = "float64", shape = (6, 15, 16))#candidate|8460|(6, 15, 16)|var|float64
uop_8461 = relay.sigmoid(var_8460.astype('float64')) # shape=(6, 15, 16)
output = uop_8461
output2 = uop_8461
func_8477 = relay.Function([var_8460,], output)
mod['func_8477'] = func_8477
mod = relay.transform.InferType()(mod)
var_8478 = relay.var("var_8478", dtype = "float64", shape = (6, 15, 16))#candidate|8478|(6, 15, 16)|var|float64
output = func_8477(var_8478)
func_8479 = relay.Function([var_8478], output)
mutated_mod['func_8479'] = func_8479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7580_call = mod.get_global_var('func_7580')
func_7581_call = mutated_mod.get_global_var('func_7581')
call_8531 = relay.TupleGetItem(func_7580_call(), 0)
call_8532 = relay.TupleGetItem(func_7581_call(), 0)
const_8534 = relay.const([[[1,8,-9,-4,7,-1,8,9,1,-5,-10,-6,4,10,9],[9,-7,6,2,-1,10,3,-10,-4,-2,3,-4,6,2,9],[-1,9,-9,-2,-9,-1,-4,8,9,-6,-9,-4,2,2,-7],[3,-3,-3,-1,5,-9,8,-3,9,8,-4,6,9,-9,10],[-4,-3,7,-7,-3,8,-9,5,-5,-5,-10,10,-8,-2,2],[4,-6,10,4,-4,2,-9,10,-4,-8,8,9,-4,8,3],[-7,-5,5,-6,7,-6,-2,1,-8,-9,-5,4,6,10,-3],[6,-9,3,-10,-2,1,-7,10,-6,-4,-7,-1,-4,9,5],[-6,-2,-5,10,-7,4,8,-10,-9,9,3,-6,-8,-3,4],[-7,-10,7,5,1,-8,10,4,6,-8,9,-2,-6,-5,5],[9,-10,-4,-2,-4,1,-8,8,2,-7,9,-2,3,9,-8],[-9,-10,-4,6,3,1,-2,4,-2,3,9,-9,3,8,10],[-10,-1,-8,3,2,-5,-10,3,8,2,-5,3,1,-6,10]],[[5,6,10,-2,9,-9,-7,3,2,-5,5,5,-6,6,5],[9,-5,5,-9,8,-1,2,5,9,-9,4,-6,1,-7,-5],[2,4,9,5,-6,-5,2,-8,5,6,4,7,1,4,-5],[-2,-5,6,-6,3,8,1,-9,8,-10,9,4,-6,4,-3],[-2,-7,1,-2,-6,9,5,3,10,-8,-6,6,3,-5,3],[5,4,2,-5,10,-9,5,-10,-8,2,3,-2,-7,1,9],[3,1,6,-3,-10,-2,4,5,-8,6,-8,7,8,-5,10],[-4,10,10,-1,-4,-8,1,4,7,8,3,10,8,-7,-6],[-8,8,6,-1,1,-9,2,10,-6,1,10,-2,3,8,-4],[7,-5,-8,-2,-9,6,1,-7,-7,10,9,-9,8,-2,2],[-3,7,-3,-10,-6,8,-8,-2,-2,10,-5,9,3,-8,8],[-2,-10,-6,6,7,-6,7,-6,10,8,-9,10,-6,7,-9],[-5,-5,-10,7,-8,1,1,-7,7,-4,-9,7,-3,4,9]],[[7,4,9,5,-1,2,7,2,-10,-3,-3,9,4,4,-4],[-1,9,2,-9,-5,10,-6,1,-2,6,-9,-10,8,-2,3],[-7,8,-10,-5,-9,-3,10,-5,7,3,-5,-10,-3,-8,-5],[5,-5,-10,-3,-6,-7,-1,-8,9,-6,-7,-7,3,-9,8],[-1,-6,4,-1,-2,1,-8,8,1,-1,10,-5,7,8,10],[-10,9,-9,-1,-1,-7,-4,-7,1,8,2,-10,-6,6,4],[9,8,9,2,8,-7,-6,-2,-3,-10,4,10,10,2,-9],[-3,-2,8,-8,3,4,5,-1,4,9,-5,-5,-1,-9,10],[-1,8,-5,5,7,-1,10,-2,2,-4,-1,8,-4,-2,3],[-4,-6,-8,-1,4,4,10,1,4,-9,6,1,-7,-2,9],[2,10,6,-6,-2,4,8,-10,7,4,-4,9,6,-10,4],[4,3,-3,-1,-7,-1,-6,6,-10,2,2,-6,-1,6,1],[-3,5,8,-6,-8,1,-3,-8,3,-3,-6,2,5,-6,-7]]], dtype = "uint64")#candidate|8534|(3, 13, 15)|const|uint64
bop_8535 = relay.less(call_8531.astype('bool'), relay.reshape(const_8534.astype('bool'), relay.shape_of(call_8531))) # shape=(3, 13, 15)
bop_8538 = relay.less(call_8532.astype('bool'), relay.reshape(const_8534.astype('bool'), relay.shape_of(call_8532))) # shape=(3, 13, 15)
func_6856_call = mod.get_global_var('func_6856')
func_6860_call = mutated_mod.get_global_var('func_6860')
var_8549 = relay.var("var_8549", dtype = "bool", shape = (1470,))#candidate|8549|(1470,)|var|bool
call_8548 = relay.TupleGetItem(func_6856_call(relay.reshape(call_8531.astype('uint64'), [3, 13, 15]), relay.reshape(var_8549.astype('bool'), [1470,]), ), 2)
call_8550 = relay.TupleGetItem(func_6860_call(relay.reshape(call_8531.astype('uint64'), [3, 13, 15]), relay.reshape(var_8549.astype('bool'), [1470,]), ), 2)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
const_8576 = relay.const([9.655046,-6.762458,8.350332,-4.570232,-6.890857,0.377155,2.333862,-2.425116,6.621755,-8.521853,-1.087537,9.275181,0.494504,9.327566,3.096445,-5.075067,8.168655,-5.322980,-3.946140,1.257106,-5.125740,9.692856,4.137074,-8.069748,7.469314,-2.683655,-8.954889,-3.316703,-3.183953,8.337177,-9.494740,-3.109236,-5.935220,1.902695,7.682899,0.287710,8.896980,5.482440,-8.865021,5.963701,7.169604,9.960259,-2.947312,8.816579,-6.981629,-0.367630,-4.314868,-4.240508,0.295282,0.651738,2.928439,-8.174735,-6.454442,7.911374,1.625803,-3.912305,-5.516973,9.867201,7.666089,0.089543,2.464946,-2.171274,-5.953306,-5.616564,-3.195042,5.892093,-5.499194,-8.641232,0.244769,9.600886,0.949181,9.063641,-7.098241,-5.841153,-2.551727,6.577647,1.182703,4.132796,-1.369183,7.916007,-8.941450,-1.753815,-2.435120,8.577184,-7.536559,-5.835969,-7.912837,0.272153,-5.615034,-4.889214,1.858193,-2.430708,7.313713,9.054583,0.698288,3.260442,1.799232,-8.653204,-7.331634,4.088709,6.593262,-8.246666,-7.639489,-5.816172,1.846998,1.963408,-1.431080,2.204060,7.790199,1.469648,9.681184,-0.007189,6.493798,-1.519337,-0.113975,-1.656462,-1.805458,3.032004,3.361817,9.567245], dtype = "float64")#candidate|8576|(120,)|const|float64
call_8575 = relay.TupleGetItem(func_3732_call(relay.reshape(const_8576.astype('float64'), [5, 3, 8]), relay.reshape(const_8576.astype('float64'), [5, 3, 8]), ), 1)
call_8577 = relay.TupleGetItem(func_3735_call(relay.reshape(const_8576.astype('float64'), [5, 3, 8]), relay.reshape(const_8576.astype('float64'), [5, 3, 8]), ), 1)
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
const_8605 = relay.const(4.589386, dtype = "float32")#candidate|8605|()|const|float32
var_8606 = relay.var("var_8606", dtype = "float32", shape = (60, 12))#candidate|8606|(60, 12)|var|float32
call_8604 = relay.TupleGetItem(func_2471_call(relay.reshape(const_8605.astype('float32'), []), relay.reshape(var_8606.astype('float32'), [1, 720]), ), 3)
call_8607 = relay.TupleGetItem(func_2474_call(relay.reshape(const_8605.astype('float32'), []), relay.reshape(var_8606.astype('float32'), [1, 720]), ), 3)
output = relay.Tuple([bop_8535,call_8548,var_8549,call_8575,const_8576,call_8604,const_8605,var_8606,])
output2 = relay.Tuple([bop_8538,call_8550,var_8549,call_8577,const_8576,call_8607,const_8605,var_8606,])
func_8608 = relay.Function([var_8549,var_8606,], output)
mod['func_8608'] = func_8608
mod = relay.transform.InferType()(mod)
mutated_mod['func_8608'] = func_8608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8608_call = mutated_mod.get_global_var('func_8608')
var_8610 = relay.var("var_8610", dtype = "bool", shape = (1470,))#candidate|8610|(1470,)|var|bool
var_8611 = relay.var("var_8611", dtype = "float32", shape = (60, 12))#candidate|8611|(60, 12)|var|float32
call_8609 = func_8608_call(var_8610,var_8611,)
output = call_8609
func_8612 = relay.Function([var_8610,var_8611,], output)
mutated_mod['func_8612'] = func_8612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_8636 = relay.TupleGetItem(func_6874_call(), 0)
call_8637 = relay.TupleGetItem(func_6876_call(), 0)
func_8426_call = mod.get_global_var('func_8426')
func_8429_call = mutated_mod.get_global_var('func_8429')
const_8639 = relay.const([[2,7],[-2,-7],[9,-4],[3,-6],[-7,-7],[10,3],[10,3],[-2,6],[-9,-5],[9,6],[9,-8],[3,3],[-6,4],[8,6],[-7,-6],[3,4],[4,-7],[-1,-2],[6,-5],[5,-10]], dtype = "int64")#candidate|8639|(20, 2)|const|int64
call_8638 = relay.TupleGetItem(func_8426_call(relay.reshape(const_8639.astype('int64'), [1, 5, 8])), 1)
call_8640 = relay.TupleGetItem(func_8429_call(relay.reshape(const_8639.astype('int64'), [1, 5, 8])), 1)
output = relay.Tuple([call_8636,call_8638,const_8639,])
output2 = relay.Tuple([call_8637,call_8640,const_8639,])
func_8644 = relay.Function([], output)
mod['func_8644'] = func_8644
mod = relay.transform.InferType()(mod)
mutated_mod['func_8644'] = func_8644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mutated_mod.get_global_var('func_8644')
call_8645 = func_8644_call()
output = call_8645
func_8646 = relay.Function([], output)
mutated_mod['func_8646'] = func_8646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8214_call = mod.get_global_var('func_8214')
func_8215_call = mutated_mod.get_global_var('func_8215')
call_8655 = func_8214_call()
call_8656 = func_8214_call()
func_7669_call = mod.get_global_var('func_7669')
func_7670_call = mutated_mod.get_global_var('func_7670')
call_8659 = relay.TupleGetItem(func_7669_call(), 0)
call_8660 = relay.TupleGetItem(func_7670_call(), 0)
func_5809_call = mod.get_global_var('func_5809')
func_5810_call = mutated_mod.get_global_var('func_5810')
call_8666 = relay.TupleGetItem(func_5809_call(), 1)
call_8667 = relay.TupleGetItem(func_5810_call(), 1)
bop_8670 = relay.bitwise_or(call_8666.astype('int32'), relay.reshape(call_8655.astype('int32'), relay.shape_of(call_8666))) # shape=(3, 13, 15)
bop_8673 = relay.bitwise_or(call_8667.astype('int32'), relay.reshape(call_8656.astype('int32'), relay.shape_of(call_8667))) # shape=(3, 13, 15)
output = relay.Tuple([call_8659,bop_8670,])
output2 = relay.Tuple([call_8660,bop_8673,])
func_8677 = relay.Function([], output)
mod['func_8677'] = func_8677
mod = relay.transform.InferType()(mod)
mutated_mod['func_8677'] = func_8677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8677_call = mutated_mod.get_global_var('func_8677')
call_8678 = func_8677_call()
output = call_8678
func_8679 = relay.Function([], output)
mutated_mod['func_8679'] = func_8679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_8691 = relay.TupleGetItem(func_6082_call(), 1)
call_8692 = relay.TupleGetItem(func_6083_call(), 1)
output = call_8691
output2 = call_8692
func_8694 = relay.Function([], output)
mod['func_8694'] = func_8694
mod = relay.transform.InferType()(mod)
output = func_8694()
func_8695 = relay.Function([], output)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8214_call = mod.get_global_var('func_8214')
func_8215_call = mutated_mod.get_global_var('func_8215')
call_8785 = func_8214_call()
call_8786 = func_8214_call()
output = call_8785
output2 = call_8786
func_8800 = relay.Function([], output)
mod['func_8800'] = func_8800
mod = relay.transform.InferType()(mod)
mutated_mod['func_8800'] = func_8800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mutated_mod.get_global_var('func_8800')
call_8801 = func_8800_call()
output = call_8801
func_8802 = relay.Function([], output)
mutated_mod['func_8802'] = func_8802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7156_call = mod.get_global_var('func_7156')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_8940 = relay.TupleGetItem(func_7156_call(), 0)
call_8941 = relay.TupleGetItem(func_7158_call(), 0)
output = relay.Tuple([call_8940,])
output2 = relay.Tuple([call_8941,])
func_8950 = relay.Function([], output)
mod['func_8950'] = func_8950
mod = relay.transform.InferType()(mod)
output = func_8950()
func_8951 = relay.Function([], output)
mutated_mod['func_8951'] = func_8951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_8982 = relay.TupleGetItem(func_7786_call(), 0)
call_8983 = relay.TupleGetItem(func_7788_call(), 0)
output = relay.Tuple([call_8982,])
output2 = relay.Tuple([call_8983,])
func_9008 = relay.Function([], output)
mod['func_9008'] = func_9008
mod = relay.transform.InferType()(mod)
output = func_9008()
func_9009 = relay.Function([], output)
mutated_mod['func_9009'] = func_9009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_9023 = func_8800_call()
call_9024 = func_8800_call()
var_9044 = relay.var("var_9044", dtype = "bool", shape = (3, 13, 15))#candidate|9044|(3, 13, 15)|var|bool
bop_9045 = relay.greater(call_9023.astype('bool'), relay.reshape(var_9044.astype('bool'), relay.shape_of(call_9023))) # shape=(3, 13, 15)
bop_9048 = relay.greater(call_9024.astype('bool'), relay.reshape(var_9044.astype('bool'), relay.shape_of(call_9024))) # shape=(3, 13, 15)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
var_9058 = relay.var("var_9058", dtype = "float64", shape = (120,))#candidate|9058|(120,)|var|float64
call_9057 = relay.TupleGetItem(func_3732_call(relay.reshape(var_9058.astype('float64'), [5, 3, 8]), relay.reshape(var_9058.astype('float64'), [5, 3, 8]), ), 0)
call_9059 = relay.TupleGetItem(func_3735_call(relay.reshape(var_9058.astype('float64'), [5, 3, 8]), relay.reshape(var_9058.astype('float64'), [5, 3, 8]), ), 0)
func_9008_call = mod.get_global_var('func_9008')
func_9009_call = mutated_mod.get_global_var('func_9009')
call_9062 = relay.TupleGetItem(func_9008_call(), 0)
call_9063 = relay.TupleGetItem(func_9009_call(), 0)
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_9078 = relay.TupleGetItem(func_5610_call(relay.reshape(var_9058.astype('float64'), [120,])), 2)
call_9079 = relay.TupleGetItem(func_5612_call(relay.reshape(var_9058.astype('float64'), [120,])), 2)
func_1567_call = mod.get_global_var('func_1567')
func_1570_call = mutated_mod.get_global_var('func_1570')
var_9109 = relay.var("var_9109", dtype = "float32", shape = ())#candidate|9109|()|var|float32
var_9110 = relay.var("var_9110", dtype = "float32", shape = (720,))#candidate|9110|(720,)|var|float32
call_9108 = relay.TupleGetItem(func_1567_call(relay.reshape(var_9109.astype('float32'), []), relay.reshape(var_9110.astype('float32'), [3, 15, 16]), ), 1)
call_9111 = relay.TupleGetItem(func_1570_call(relay.reshape(var_9109.astype('float32'), []), relay.reshape(var_9110.astype('float32'), [3, 15, 16]), ), 1)
output = relay.Tuple([bop_9045,call_9057,var_9058,call_9062,call_9078,call_9108,var_9109,var_9110,])
output2 = relay.Tuple([bop_9048,call_9059,var_9058,call_9063,call_9079,call_9111,var_9109,var_9110,])
func_9117 = relay.Function([var_9044,var_9058,var_9109,var_9110,], output)
mod['func_9117'] = func_9117
mod = relay.transform.InferType()(mod)
mutated_mod['func_9117'] = func_9117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9117_call = mutated_mod.get_global_var('func_9117')
var_9119 = relay.var("var_9119", dtype = "bool", shape = (3, 13, 15))#candidate|9119|(3, 13, 15)|var|bool
var_9120 = relay.var("var_9120", dtype = "float64", shape = (120,))#candidate|9120|(120,)|var|float64
var_9121 = relay.var("var_9121", dtype = "float32", shape = ())#candidate|9121|()|var|float32
var_9122 = relay.var("var_9122", dtype = "float32", shape = (720,))#candidate|9122|(720,)|var|float32
call_9118 = func_9117_call(var_9119,var_9120,var_9121,var_9122,)
output = call_9118
func_9123 = relay.Function([var_9119,var_9120,var_9121,var_9122,], output)
mutated_mod['func_9123'] = func_9123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_9190 = func_5708_call()
call_9191 = func_5708_call()
output = relay.Tuple([call_9190,])
output2 = relay.Tuple([call_9191,])
func_9200 = relay.Function([], output)
mod['func_9200'] = func_9200
mod = relay.transform.InferType()(mod)
mutated_mod['func_9200'] = func_9200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9200_call = mutated_mod.get_global_var('func_9200')
call_9201 = func_9200_call()
output = call_9201
func_9202 = relay.Function([], output)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_9203 = relay.TupleGetItem(func_5675_call(), 0)
call_9204 = relay.TupleGetItem(func_5677_call(), 0)
output = call_9203
output2 = call_9204
func_9216 = relay.Function([], output)
mod['func_9216'] = func_9216
mod = relay.transform.InferType()(mod)
mutated_mod['func_9216'] = func_9216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9216_call = mutated_mod.get_global_var('func_9216')
call_9217 = func_9216_call()
output = call_9217
func_9218 = relay.Function([], output)
mutated_mod['func_9218'] = func_9218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mod.get_global_var('func_8644')
func_8646_call = mutated_mod.get_global_var('func_8646')
call_9226 = relay.TupleGetItem(func_8644_call(), 0)
call_9227 = relay.TupleGetItem(func_8646_call(), 0)
func_6977_call = mod.get_global_var('func_6977')
func_6983_call = mutated_mod.get_global_var('func_6983')
var_9233 = relay.var("var_9233", dtype = "int64", shape = (40,))#candidate|9233|(40,)|var|int64
const_9234 = relay.const([7.762038,-1.352264,-9.996530,2.789519,9.101321,-2.685959,-6.684369,-0.257163,-8.658141,-7.214504,5.543767,-0.552031,-5.401789,2.175317,9.783255,0.485524,-4.784886,-6.888584,-4.125080,-9.201820,-4.443427,-6.171159,0.277961,-8.998680,-7.444955,-3.343188,8.030531,6.784414,-1.348395,8.897185,8.698545,-9.240319,-9.037819,0.442124,-4.618541,-8.081752,-3.655369,-5.105366,4.406533,5.198868,5.800243,-4.882472,-4.684411,0.139868,-4.385866,4.376994,8.755075,0.402170,-7.749844,-1.773597,-2.479270,9.345327,-8.036659,-4.102468,4.871928,7.080678,1.470563,8.413434,3.658396,4.749669,5.407430,-4.015621,-8.776138,-9.958372,-5.105577,-8.524971,-4.744858,9.565721,9.339548,-9.281076,-9.959242,2.861336,8.890501,3.567000,4.020911,-8.771322,9.688564,9.527530,-0.969553,9.379372,2.706040,8.273989,6.134039,-8.667020,-9.156144,2.583932,-1.390162,8.651248,6.203610,-1.991893,9.691640,4.592734,7.859566,-7.521182,8.406205,-5.881592,1.325696,-5.250375,3.528381,2.680441,6.702576,-8.357317,-8.597305,-8.851615,-4.431113,-2.078218,2.424052,0.035562,0.791741,3.536331,4.015870,3.829395,9.622193,6.929820,-6.799957,2.104574,-4.143661,9.076932,5.881206,-9.423626], dtype = "float64")#candidate|9234|(120,)|const|float64
var_9235 = relay.var("var_9235", dtype = "int64", shape = (132,))#candidate|9235|(132,)|var|int64
const_9236 = relay.const([-5.340386,0.077300,-6.932237,1.771231,-3.537518,-9.940175,2.198811,-6.247127,4.549387,-8.733262,4.261764,6.537701,-2.870315,-9.254984,7.507574,-8.479665,-0.864663,0.488435,-4.095093,-6.354602,5.066085,5.331899,-7.879755,-4.576098,9.394276,-9.975871,-5.074783,-5.684819,-9.657824,-1.327378,-1.536451,-9.298070,-6.311980,-6.677170,-0.272256,6.663326,5.960190,-7.411916,-0.394645,-4.983519,-7.288866,6.555171,-2.652981,9.837542,-9.931845,-7.150364,-3.761067,5.942985,-9.058764,3.030908,-8.229032,-5.249205,3.646601,-1.433524,-5.552407,5.818937,0.110787,4.292207,-1.634762,3.532833,-7.274060,-5.197441,-3.183762,9.971282,7.924295,3.772228,2.973019,2.813960,-3.844837,-9.215087,-5.822908,0.580111,-8.369905,7.159272,2.142993,0.884343,-1.500466,-5.778524,3.376191,1.331491,-3.010606,4.866411,1.901129,-4.415757,-2.581151,-8.744662,-6.459275,-0.451336,-6.178467,-2.455949,-9.377707,2.110551,8.820841,1.442118,9.135557,5.566003,4.687290,9.158453,0.579885,6.408007,-7.525938,2.188617,0.411079,-9.187964,7.539570,-5.100501,-2.129116,9.405063,2.283771,7.881157,2.426096,4.773025,9.470676,2.840264,-4.463854,-8.340208,-4.263759,-5.662690,9.708633,9.022003,7.373788,6.493085,9.033788,9.236594,8.455409,1.150342,6.444686,-4.487604,2.118002,3.390557,-2.489415,7.543139,0.847789,-0.829634,-8.638015,-4.870186,4.138412,3.714081,-5.158156,-1.684341,4.006751,-9.911842,-0.816017,5.843042,0.192548,4.506979,-2.796361,-0.310602,-3.845621,0.044033,6.934565,-9.740490,3.000242,9.737753,-2.797252,5.502791,-9.838571,-7.366915,-9.901608,-4.143252,5.917031,8.829113,-0.080978,1.457118,0.679972,0.442573,-9.155244,6.893841,-5.832764,5.696836,-0.342536,-7.045053,1.365856,5.465844,3.774670,1.865900,-2.915447,-8.821755,-4.876874,8.195627,-5.499033,-0.940196,9.359179,-0.247276,6.656809,-0.684287,9.795221,-8.939908,-4.485600,-1.047227,7.950072,-5.486428,5.013611,7.593267,-6.018287,5.907080,0.461989,-6.896082,8.993783,-7.992623,-4.244109,0.210707,-9.212061,-3.199228,2.614177,-1.990734,-3.841684,-6.466761,2.000688,-4.049408,4.794577,4.083703,6.873881,4.649840,-3.512417,3.614269,-3.649862,-5.070908,-4.383211,6.810736,-6.166475,5.060711,-3.697946,-7.842481,1.617071,-0.449407,-0.835684,1.573666,5.848521,-3.085459,5.118955,-8.955763,-8.682010,-2.508241,-3.469565,1.419469,5.525995,1.826516,-0.477449,1.594751,-2.786216,-5.148708,2.574280,7.089897,-2.166089,4.387741,9.117890,-7.097058,-4.687357,3.499747,-3.143425,3.564970,3.437981,-4.120623,-9.187710,7.418422,6.232079,8.619646,6.910244,9.331676,2.889584,6.800182,-0.945028,-7.310332,-8.027942,6.413979,-6.431912,-0.001556,-5.245102,-1.282902,4.225691,9.572781,6.977070,6.611064,8.886409,3.952346,1.092698,-6.355784,-7.901965,0.208403,-6.148862,9.990570,6.161609,-4.294155,-0.784701,2.615614,-8.581268,-4.451528,1.947994,-0.203022,-7.679812,8.902486,6.829787,-4.052644,7.892964,-4.275131,-8.502753,-9.433354,-2.324131,1.253684,4.036719,-1.598981,-8.386350,-5.663262,-1.184754,-0.197093,-6.500636,3.077211,3.841269,1.257611,9.385547,-3.205566,1.917226,5.631586,5.259839,3.555215,9.390045,-6.613749,-9.872921,-8.292604,-8.248573,-0.169736,-2.937277,-1.358569,5.887680,-6.916272,7.205055,-1.449220,-0.229530,-3.842470,9.580117,-1.348964,4.101818,-0.133289,0.324787,8.020542,6.986185,-3.583151,2.714014,-7.682751,-8.432863,3.163713,4.489493,1.046798,0.540766,-8.997118,2.824789,-7.127118,5.940385,-8.355867,4.426444,-6.234546,8.524792,-8.980100,9.904711,0.866757,-9.274728,-9.811246,2.290694,5.491837,5.127475,1.012220,-7.495601,-6.175123,-8.941874,8.634014,-7.629003,-1.339053,-8.725772,-0.111557,4.088890,-4.923244,-7.634006,-3.388688,-5.638408,-7.336269,1.786805,-8.472280,8.741670,9.134303,2.776559,1.059532,3.301750,-3.646412,8.303487,5.838905,-7.263992,-1.385057,-2.703261,-9.287614,-7.056740,9.677118,-9.847629,4.748114,-5.997872,0.865620,9.973167,8.091698,7.742213,2.872955,-8.155255,1.727708,-0.735591,0.133814,-9.191586,4.264377,-8.762007,-6.585491,-2.108415,9.183331,4.066211,-6.998785,4.669156,8.011601,6.870971,0.382800,1.901371,0.415039,-8.238606,0.553039,-4.222519,5.849058,0.172465,-3.834446,-4.305029,-7.986785,-3.705705,-4.539970,-9.943021,-7.260318,-1.625420,6.521933,6.777124,3.067551,4.002293,-2.339241,0.250712,-6.936402,-1.292972,-4.213003,-0.531484,-4.177987,-9.541297,2.549459,-3.715168,-0.827783,2.893844,-6.683819,-8.896367,8.730084,-9.443122,-9.033461,4.129370,-6.376975,5.650466,-5.169195,0.337916,-0.312729,-2.761996,-1.767081,-2.657239,3.867535,-9.141939,-6.714032,-2.475145,-7.595595,3.316064,-5.829268,-8.292647,-0.469045,-1.808394,7.879460,3.061243,1.549221,2.556903,-3.153798,-3.527203,-0.739691,-0.765601,-5.595284,-0.457233,9.688261,2.932096,-5.917476,6.907386,9.634148,-3.949255,8.079311,-9.837733,8.690197,6.487059,2.052972,0.453340,-7.707119,-1.679899,-3.822278,-3.545118,2.027300,-0.157567,8.920159,-4.990119,1.018849,8.570716,2.356557,4.371178,-7.432529,-8.975359,-9.668535,6.498865,9.473865,0.504907,-8.997373,-0.695925,3.747571,7.185245,-0.685170,5.203773,-6.166245,-5.038678,0.803062,-3.472720,-0.296866,3.922787,7.895276,-7.094778,0.844046,-4.667032,0.056862,9.035184,9.179000,1.482430,-8.074363,1.915629,0.847923,-8.614172,1.088549,-5.873489,-1.036032,1.402960,-4.937983,-5.671537,7.354700,9.082973,7.559116,-0.290256,-9.977042,-9.469712,-4.660916,5.324601,-1.488840,-2.449910,3.327859,6.839980,0.093590,2.471876,-9.530138,2.743831,-2.670325,-8.582092,0.690701,4.350109,-1.175746,-3.547378,8.871013,9.630810,-5.206578,-6.234158,-5.380643,3.060301,-5.813780,-9.420229,-8.773040,-1.079221,-2.711109,1.330759,7.413381,3.001031,-4.042087,4.971986,-6.290962,2.838022,-3.977745,-1.449434,-2.021226,-0.256705,-3.272223,8.381992,-9.803156,7.312123,4.315248,-4.196505,7.373059,-6.408492,-5.058109,-0.262578,-9.161093,8.801891,3.422504,-5.876970,1.767798,-0.800797,7.018351,-0.761353,9.451757,-2.575540,-8.429347,-6.766206,0.972148,-9.325828,-0.011983,-8.243047,-7.921149,8.999488,6.126509,9.958872,7.581620,-0.288273,-2.221837,-1.926884,-3.116110,-2.807566,-3.101302,6.227563,4.930072,2.357064,-0.860668,7.366115,9.420831,-5.290575,-1.635209,1.542350,1.690180,-5.645789,-9.018748,5.184937,9.375799,-0.995531,-6.789436,5.717116,0.600946,4.342991,-8.124677,-0.240720,-0.478058,-0.464256,1.879838,-0.836417,3.264626,-2.000439,9.140702,5.955611,4.041457,-0.852557,5.275079,8.395067,-5.436703,-4.915421,6.160360,-7.375900,0.080959,-6.629194,-8.106287,0.184117,0.552265,-0.222241,3.850175,-9.667919,8.176080,1.559590,-4.712724,9.983951,2.971982,-1.515646,-0.146831,-2.587844,5.640329,-6.707826,7.648626,-5.325958,4.525884,-3.175907,-7.039856,0.528193,3.067272,-7.235103,-2.818379,7.073109,3.709092,-8.410809,-4.334511,9.395177,-7.910211,-4.028578,4.037658,-6.742888,2.599474,8.135209,2.278740,2.902188,7.911057,9.165196,3.140852,-9.433577,-0.459093,-4.163304,8.845955,-3.986020,-3.266449,-7.942336,6.247837,-3.836445,3.318948,-2.011691,0.498137,0.218753,0.164559,-6.388888,0.670576,6.309353,1.094942], dtype = "float32")#candidate|9236|(720,)|const|float32
const_9237 = relay.const([-7.079354,-2.593044,8.943629,-5.460961,-5.344072,-4.052793,-4.126024,-9.789609,-1.346305,-0.654921,-5.767018,7.759803,8.862166,2.460682,-5.396717,5.764743,-7.073207,7.299652,8.696680,-2.784437,3.604109,5.384381,-8.332423,2.968313,3.325293,9.907505,-9.129773,-2.608856,6.002692,-3.093908,-3.288693,3.263094,6.119905,5.559670,-1.494355,-4.373335,-3.093452,3.213409,3.842784,6.392016,8.798647,-7.580863,-8.560134,9.065668,-5.686342,1.025769,9.830114,-4.158324,7.483968,-9.028476,8.190658,3.434144,-5.747005,-0.289840,2.685512,-5.895142,-0.795629,-5.102206,3.421321,-1.236106,7.833686,3.238126,-5.150235,7.376971,8.088221,2.708174,-5.364390,-2.020052,-9.918887,-9.715608,-1.678713,-5.138125,0.852659,1.565655,-5.949027,5.137536,8.458069,0.051875,-0.184307,8.609777,-4.532245,-3.906016,2.203428,4.060962,8.577411,-8.984552,-2.558380,-8.052456,0.148931,7.909920,4.225120,-0.922645,6.162723,6.230849,-8.852285,8.828907,3.590167,-8.872904,-3.958485,-3.406519,9.377458,3.811817,9.073998,-9.723392,-0.560914,3.993901,-5.891462,-9.027691,3.652573,0.606737,6.803511,-7.221238,-5.204136,5.066554,-1.255207,-1.089024,-8.260829,7.477350,7.715419,4.268358,1.644346,8.555559,-6.315015,0.373561,1.849140,3.604763,9.603418,-9.384531,-8.885575,-8.452093,7.321650,3.186795,9.669680,-7.245068,-2.670415,-1.058617,-3.754619,3.058329,0.950936,-5.106163,0.976854,1.457551,0.014767,-4.427326,-5.617649,-9.533752,9.160968,4.171050,-1.490742,0.714987,4.457219,4.046495,6.755285,-9.980418,7.376941,-5.302570,6.649345,-6.717471,3.691712,-5.498426,4.406664,0.906259,-0.211469,0.146267,-9.088169,1.587561,-7.814418,8.786083,8.119726,7.573174,-8.082622,1.598370,0.692603,-8.034158,-7.389592,-7.760760,6.988972,-3.846406,5.165498,3.012165,-3.744745,6.486884,0.033819,1.240774,1.053792,7.814929,-6.395634,2.154241,-1.336006,-2.465897,-4.435136,0.684981,-4.981325,-4.171722,3.225741,-9.962986,-3.768104,8.229327,-6.861024,0.216993,9.368035,-0.497254,5.946235,7.016592,5.911695,6.275047,8.565600,-1.580665,-3.840144,0.245102,-0.197156,-5.330338,6.427262,-4.719355,-9.387632,9.930212,-6.420830,1.476769,5.819454,-8.030219,-2.105243,4.314648,-4.325001,6.080319,-6.910046,-3.540089,-7.342786,2.948888,-5.985104,-3.661046,5.925204,-9.274398,6.742326,-6.873432,5.197740,7.906065,-0.490369,3.588246,-6.308562,3.449522,9.790650,8.844649,-4.080694,2.360498,-5.074273,1.870610,-2.091800,-1.599253,1.362581,-2.814647,3.077950,-2.379192,-3.364478,-5.438783,1.489923,4.962936,6.713490,-9.629005,-0.109152,1.329064,1.450470,-0.908783,-8.079014,2.161808,3.983078,-1.109106,-0.494523,-0.378628,-6.069405,4.103366,7.872026,-9.037765,-8.640077,-2.821907,1.370059,3.958888,6.817876,-1.741355,-0.646106,7.468339,6.054721,-1.670937,8.969286,5.023258,8.156869,2.072531,2.466407,-7.662813,-4.869286,-6.038453,-0.989669,7.965820,-5.145061,3.596751,0.682816,-0.645147,0.734603,-6.257425,-5.902089,-8.469055,7.340084,-2.067463,-5.864452,-3.801407,3.070133,-0.341404,-7.110903,1.059019,7.853473,-8.522999,-4.895968,8.925750,7.989637,-6.062500,2.398980,-3.108002,-4.636084,-0.588492,8.479306,0.562793,3.211996,-4.043927,7.903670,-0.982690,-7.001933,-5.708954,-4.709346,-9.203844,1.071867,5.629481,-0.407618,8.188881,-7.768639,1.429025,-8.896932,-4.950736,-7.392845,-9.396420,3.176071,-0.853683,1.072713,-1.540831,-3.191095,0.212659,6.592227,5.063656,-2.280286,-7.902494,-5.978876,-7.829305,-2.061534,-4.810515,0.277521,4.872893,-1.897934,4.632338,-6.731613,4.958460,-5.790459,-9.057936,7.438489,9.686812,3.188248,-4.806152,7.309792,-9.958271,3.573790,-5.854466,2.282447,7.877203,6.864952,7.599453,-3.766493,6.550251,-0.277681,-3.019312,7.392545,2.690554,5.919452,-6.093086,7.502360,6.539029,3.486609,9.649387,2.992644,-9.995283,8.956132,-5.930812,-8.205700,8.297227,4.637643,-6.582143,6.944726,0.577003,1.142195,-7.235021,6.770214,-6.594643,4.355792,6.701015,-2.885140,-3.637892,-8.434869,-6.664076,-1.704770,3.278492,0.892228,-1.362744,0.767380,-9.868043,4.495751,8.822695,-2.901876,7.576742,-1.360865,-8.276533,2.643834,-1.065092,6.216814,-5.408140,-8.778719,6.749972,-1.844907,9.625175,-9.956044,-3.546932,-6.255766,-8.227349,5.392829,-8.353215,-9.533561,8.041698,7.191134,8.011531,-1.420202,-7.126887,6.020233,-7.843240,2.979440,-0.557707,4.413682,8.075679,-3.425767,-8.963275,-3.498272,6.992907,4.101192,-0.397459,3.416029,6.125021,7.871034,-5.791388,-6.846543,-1.629255,-1.679199,9.457954,-4.058744,9.838643,-5.407739,-0.355671,3.156529,7.617366,-7.162910,1.457471,-7.757648,8.704206,5.674160,-9.768169,7.811064,0.480898,5.924141,8.883876,-4.642831,6.493023,5.937815,6.621019,6.090818,6.864428,-9.230667,8.978471,-8.676186,-1.418930,5.419753,6.445903,-4.165015,-6.902880,0.101825,0.233181,7.516265,-9.056993,-1.028901,8.428960,-5.066361,-8.042184,3.379945,5.611624,-1.634830,0.811324,1.485517,-2.743026,-0.446965,2.218283,1.466310,8.010470,1.352032,2.086826,8.972273,-7.292140,0.264389,-0.550879,-4.006214,-5.350663,7.411323,-5.643809,-3.603389,-2.976788,-5.614034,-2.608506,-0.895017,-3.453868,8.307220,-5.324343,-9.222029,4.358384,7.162823,-1.699210,6.903618,-3.721052,5.370330,6.476727,-6.632520,-0.090680,-6.203960,-8.500415,-2.695028,-6.186166,-1.354936,-0.089941,9.487591,-1.592657,2.253306,9.633138,-2.062384,5.180085,-3.062371,7.490379,3.469256,4.127708,3.385758,-6.082317,-7.110414,1.621321,8.358578,0.192667,1.625020,1.736958,0.446731,-1.757178,8.109552,3.464503,-2.258082,-4.075540,-5.971164,9.993264,2.378225,0.583606,4.822481,-2.405549,-3.699844,3.136725,7.505258,-7.688778,9.449601,-8.012312,-8.059082,9.009822,9.421233,-5.793526,2.747882,5.115291,-9.269140,3.407628,8.378366,-6.575062,3.184427,-5.770425,8.582656,8.699427,0.345611,4.808690,1.612049,-9.018688,-8.558075,-5.292759,8.697232,-0.603488,-3.762036,3.423335,4.305629,1.269732,6.281633,2.764095,-0.030647,-0.852389,6.445647,-6.501107,-3.347598,5.584030,0.799268,-7.442098,5.059931,-4.128599,-8.366564,2.909965,-5.943488,0.070610,-4.194003,-6.541245,8.743270,-0.931856,-3.662827,-8.273817,-4.547517,9.504944,6.561631,-4.055179,-4.689576,2.488655,-7.882646,-6.639516,4.856821,-2.809916,-9.097543,5.157484,6.631199,-9.697345,-9.659069,-1.774385,-6.669126,-5.126908,-8.403497,-1.030193,-6.234730,3.248943,8.597940,6.269691,6.876889,-5.748157,-2.970625,-2.944028,-3.211328,4.721272,6.453354,3.709884,1.538241,7.388633,-1.482122,-4.431100,8.725075,5.978950,6.265798,-0.405670,-6.965422,-0.756770,-3.087751,1.242505,-9.266803,1.913979,-8.205962,1.464850,-1.773957,3.870614,4.428849,0.085447,-0.209400,9.774259,2.139270,-8.828910,-2.476264,-3.080112,7.431180,2.531007,-4.576866,0.050853,0.158707,-9.859457,-0.987385,-6.097631,9.292512,-8.313219,-3.577390,9.861396,8.195959,-0.175415,7.909935,-4.180289,-6.101296,-1.339960,-9.942991,7.920624,-7.336316,-9.820872,-4.822714,-7.987798,-6.902204,0.669775,-0.860826,8.459565,-2.294552,-2.750753,-4.100640,1.867129,-7.778236,-6.643123,1.930038,1.296988,9.806382,-7.948197,-5.007116,-2.269098,-1.400182,-4.874674,-2.679889,-0.726580,1.527382,-5.353355,-7.533993,-6.768894,8.643599,7.066712,-8.815541,4.266479,-8.463937,9.522994,-0.145104,-7.485561,5.708086,-8.907874,-3.524448,9.258854,0.805418,3.229567,9.523508,-9.818048,-2.888870,5.780766,-0.334687,9.485827,6.951301,-5.388150,-2.352040,-9.324850,8.033485,7.214318,2.053359,9.474685,5.484007,-3.495408,-8.309976,7.530462,1.165355,4.987182,8.199672,-9.619065,-1.423541,6.588209,4.863816,-6.359763,-6.767222,-7.986274,-8.817474,-9.608973,0.572291,-0.256618,5.880441,-1.591947,1.675128,3.014914,-5.823794,9.812415,-4.508846,9.176263,-4.469845,-0.306232,-0.120965,-6.771385,-2.398332,-5.850852,-3.753386,4.503992,-2.775919,-3.943251,3.904226,1.064867,8.957880,-4.583480,0.045008,-1.064915,-4.629133,-4.639936,8.220999,6.722746,9.253852,9.756970,7.131886,9.596520,5.274850,8.661874,8.982498,-1.249386,6.183821,-0.063257,5.389522,-0.719672,5.743345,-9.748805,8.813065,-4.345442,9.120459,-0.248041,-3.203812,-9.210346,0.409760,0.813311,-0.546783,-0.108771,-7.198373,-5.856655,4.750497,0.387297,1.476848,9.334129,-5.025106,6.704382,-4.233109,-8.139106,-5.345778,-7.214726,-6.626357,-9.307444,0.235373,-8.826421,-8.631728,0.693466,5.525409,-3.402521,-7.100827,5.008368,-8.681789,-3.016957,4.315123,6.524538,-2.524735,4.103517,5.923847,7.079550,-7.676036,2.356160,0.388821,-3.700957,5.331701,5.764196,3.178619,-3.517914,-1.104725,-2.402857,3.543374,8.499595,4.232810,-8.538102,-5.723626,2.036768,6.010949,0.034176,-6.061707,4.711704,6.474101,4.144937,-2.515545,-7.957068,9.584408,-0.615117,-3.593037,-9.154819,-8.793651,8.528574,-2.453975,-9.336686,6.588412,-1.860384,4.594245,4.652859,6.361310,5.372483,1.942171,-6.775966,-5.486254,1.929362,-9.965743,-3.457680,8.074201,6.603061,7.713541,0.805286,-2.149585,-9.472903,-5.817122,-5.176563,-3.346740,0.708012,3.473297,-2.540467,-1.245515,-6.034623,6.710464,3.661265,-0.022137,2.266005,-9.106785,-1.903417,-0.604405,9.551215,6.366263,-0.257025,7.069468,3.490840,3.130842,3.584938,7.065518,-7.602980,-4.243832,5.239316,5.232084,-5.014860,-6.507780,-9.498238,0.754851,8.014298,8.885110,8.231020,7.207389,7.017285,-1.829379,-6.738482,-4.469297,8.338038,-7.105006,-2.904977,5.415475,-0.712638,7.901124,-8.163358,-3.878165,5.489307,-2.779471,-8.505906,5.671133,-5.560983,-0.932890,-8.873583,-3.677141,-1.680815,-6.190249,-5.713416,8.962707,7.000910,9.230693,-0.523465,0.452067,4.225040,-2.035282,7.973946,5.474103,5.182109,-4.274670,-4.367954,0.344254,-1.775615,9.243440,3.833244,0.690516,-3.514197,6.078911,-0.224327,-0.257627,-3.515771,4.586332,7.225770,9.852813,9.692952,-6.734076,-1.403115,-4.086745,3.697015,2.795746,-4.978897,-5.166139,2.580255,1.692846,-3.840205,2.318191,-8.893880,9.923052,2.416408,2.892881,-8.964112,6.709190,6.563763,9.124774,1.530336,-8.799780,4.337307,-7.786546,-1.985036,-3.104665,-2.369903,3.645815,4.786149,-2.453345,8.861595,1.711134,8.234721,0.603309,-7.055664,4.342168,4.104560,6.384254,-6.010517,-0.540807,-2.370524,-8.944661,-2.161570,9.392479,-5.276672,0.937560,2.677510,9.422414,2.368555,-6.645867,-5.080057,4.811506,0.572397,-6.144331,4.741819,-2.855550,-7.170936,-5.194660,-5.666790,-8.018416,5.423953,-2.144861,-9.628978,3.627272,-6.343728,7.151543,5.135471,7.598458,9.728492,9.229151,-8.730516,-9.039181,-8.783237,5.959397,5.548932,7.107804,9.941906,4.757355,3.259985,2.213310,-1.674148,-8.654586,-7.400457,-7.780457,-4.637096,-4.696457,4.182788,1.506981,1.992884,-6.570012,-8.415959,5.425944,-4.298692,8.506542,6.726369,6.350177,2.401588,6.792799,4.745317,9.964190,4.205707,-0.894153,4.607029,-3.047019,0.476294,7.096253,-3.558666,8.825653,4.262939,1.688232,-7.526153,9.198866,-5.849399,3.646224,-2.483725,2.401422,-0.192794,1.216315,2.220557,-2.679330,-1.576566,-9.326134,-9.761359,6.734448,-8.516010,-6.397231,-6.926527,-0.258291,-6.222753,-1.508088,2.851676,0.839825,-3.903632,6.359174,-0.960425,-2.259147,6.546669,-8.221679,-5.942294,2.796350,-4.658628,4.972043,5.080477,8.460612,2.242544,1.381532,-5.699412,-9.225420,5.019971,-9.224027,5.475274,-4.968604,-9.800237,-6.220190,6.945017,3.022333,2.975372,-8.221997,1.492459,2.143214,6.278624,4.743194,0.236365,-9.875806,9.582782,-0.679048,8.480945,9.425670,2.022610,7.089423,8.403320,-8.222204,2.092843,-6.661626,0.010101,-3.325287,-5.277204,-8.542025,2.420166,-6.282193,2.888906,-5.756793,5.325058,-0.644081,4.210032,6.681407,8.374736,-8.437539,-0.827761,5.808535,-6.327868,8.573847,8.109201,-3.443148,-9.461637,2.343115,5.712697,2.057178,5.792895,-6.215303,6.570279,9.037447,6.808642,2.277230,-1.395062,2.972665,-8.752798,1.635581,-7.045657,6.232019,-0.907670,5.368079,-6.297267,6.225935,-3.732208,-6.019562,8.955942,-1.700554,6.304560,9.803203,-6.208718,-9.292923,3.133212,-6.533837,1.780822,-9.976837,-4.308622,-5.055183,-2.681320,-2.519060,8.455602,-0.591895,9.834317,0.661371,7.840170,-6.991756,-5.926145,-6.069504,1.391023,0.373884,-1.808231,-8.984321,6.750662,0.947174,-2.803281,8.352368,5.644122,2.888958,-1.402152,6.466202,4.924555,-7.509516,7.508596,0.250172,7.773917,7.771535,-2.328379,0.290556,-1.216074], dtype = "float32")#candidate|9237|(1248,)|const|float32
call_9232 = relay.TupleGetItem(func_6977_call(relay.reshape(var_9233.astype('int64'), [40,]), relay.reshape(const_9234.astype('float64'), [120, 1]), relay.reshape(var_9235.astype('int64'), [3, 44]), relay.reshape(const_9236.astype('float32'), [720,]), relay.reshape(const_9237.astype('float32'), [1248,]), ), 0)
call_9238 = relay.TupleGetItem(func_6983_call(relay.reshape(var_9233.astype('int64'), [40,]), relay.reshape(const_9234.astype('float64'), [120, 1]), relay.reshape(var_9235.astype('int64'), [3, 44]), relay.reshape(const_9236.astype('float32'), [720,]), relay.reshape(const_9237.astype('float32'), [1248,]), ), 0)
func_4059_call = mod.get_global_var('func_4059')
func_4065_call = mutated_mod.get_global_var('func_4065')
const_9248 = relay.const(2.520238, dtype = "float32")#candidate|9248|()|const|float32
var_9249 = relay.var("var_9249", dtype = "float32", shape = (13, 65))#candidate|9249|(13, 65)|var|float32
call_9247 = relay.TupleGetItem(func_4059_call(relay.reshape(var_9233.astype('int64'), [2, 4, 5]), relay.reshape(const_9234.astype('float64'), [120,]), relay.reshape(const_9248.astype('float32'), []), relay.reshape(var_9249.astype('float32'), [845,]), ), 4)
call_9250 = relay.TupleGetItem(func_4065_call(relay.reshape(var_9233.astype('int64'), [2, 4, 5]), relay.reshape(const_9234.astype('float64'), [120,]), relay.reshape(const_9248.astype('float32'), []), relay.reshape(var_9249.astype('float32'), [845,]), ), 4)
bop_9252 = relay.equal(var_9249.astype('bool'), call_9247.astype('bool')) # shape=(13, 65)
bop_9255 = relay.equal(var_9249.astype('bool'), call_9250.astype('bool')) # shape=(13, 65)
func_8477_call = mod.get_global_var('func_8477')
func_8479_call = mutated_mod.get_global_var('func_8479')
const_9266 = relay.const([6.294535,-9.886048,4.455884,-8.118110,3.548412,8.453123,7.084317,-2.372159,-5.961503,-6.291253,2.354513,9.162803,-5.849396,-7.121919,-8.293677,-6.657983,8.971837,-0.980052,9.921995,-3.275527,0.946890,6.011614,-4.608087,6.363212,6.814230,-1.701452,-4.686471,1.160991,9.824286,4.644532,2.044864,9.386119,-9.518308,-5.526241,-8.594220,-2.049812,-6.310795,-2.476879,-4.381802,1.226259,-3.459363,-9.788633,2.802906,3.969414,5.963671,5.827292,9.450194,-5.314977,-0.518438,8.399141,2.390778,-9.079740,8.329678,8.229401,0.983114,1.888724,-1.837372,-3.320703,5.246788,-2.412267,-5.966546,-7.191920,-8.144660,-3.078457,0.998774,-1.411354,9.724432,-2.389402,8.803341,-7.593434,4.859171,-8.279503,0.711844,2.185820,4.420060,-5.756515,9.272180,1.875148,4.645155,5.301793,4.491707,1.073621,-1.157472,6.441834,1.766293,-0.889387,2.220464,-1.828944,-8.524742,-7.281030,1.910532,4.805663,3.689247,9.502127,-7.045671,4.317651,-8.352592,7.302692,-9.877181,-1.633796,-1.826602,-3.499068,-1.568866,7.632282,0.956857,-9.324672,-2.901582,2.015761,-6.359307,-5.675160,9.371723,-8.439550,-3.821191,9.678735,-6.835003,1.676878,-9.562043,-1.226318,-3.818399,7.251441,6.510475,3.320740,-4.489831,2.044904,9.131498,0.807464,2.602372,-9.000830,6.379715,1.765850,4.834786,7.946241,-3.682029,-8.765354,9.722001,-9.338485,6.506504,-0.496034,3.487123,-2.058368,8.538268,6.504574,8.694968,-5.722189,9.967660,-9.000550,-1.341368,7.620361,-9.067981,-7.351002,4.154315,-6.606626,-5.310031,-4.494419,4.943066,-5.388272,2.017337,1.998185,1.813302,7.157547,8.431434,3.481085,7.975526,8.302119,8.961620,6.992701,-2.386413,3.434422,-9.845250,-5.023156,5.617742,-9.505981,1.653497,6.301341,-7.840118,3.442750,5.335981,9.236948,4.253194,-9.363662,-7.951762,-9.727483,4.890648,4.737121,3.730534,3.889539,-5.640285,7.605098,-5.831128,-2.642161,-7.335652,-0.142528,5.928050,-8.626340,-6.890820,0.126692,8.325182,-7.592072,8.831898,-5.130514,8.385807,3.985049,-7.645546,0.001099,-3.830421,3.634057,-8.045854,-4.898811,8.691961,-2.545680,0.008482,7.713452,1.663120,6.344084,7.797429,-9.553538,-0.404188,0.573932,-0.351326,9.841511,-1.474154,6.094428,-7.653193,-7.463376,4.081457,-2.011995,-9.653092,3.440969,4.981324,1.209548,-9.316027,2.983834,1.147250,4.451463,-6.518008,-0.453402,1.253276,3.688995,7.928912,-2.003893,-6.343430,0.271359,-6.898093,9.826810,-9.047037,-5.514513,-3.675996,3.670199,-8.688325,2.520715,3.183272,-0.571897,-5.840107,-5.581021,9.198993,-7.480739,8.049010,5.895656,-0.770796,9.809717,0.764282,2.067247,-1.935256,6.839382,-4.250588,8.396260,0.339980,-8.653852,8.975444,5.987968,1.572473,-7.696308,-4.692260,-2.230582,-2.478667,6.342410,-7.362334,5.797080,8.547526,9.750278,-2.506493,4.099219,-0.169810,3.041243,-8.717269,7.945012,-6.567576,0.934114,2.645565,1.709385,9.467884,5.389568,1.741493,-8.404777,1.520575,-1.475327,-5.581984,5.975636,-6.638768,-5.339805,-0.016681,-2.109007,-2.672222,4.732277,-1.845441,1.207655,2.566364,6.342746,-6.841005,1.571315,1.306535,1.100450,4.013358,6.227592,3.404812,-6.110145,1.496793,-1.174470,-1.898924,7.866496,-4.172695,9.766767,3.989488,-9.426632,-5.660783,4.625321,-1.092578,-2.242340,-3.157603,1.404587,7.927791,0.943794,-8.488673,-4.733616,9.017357,6.321738,8.942632,5.863815,3.854607,-3.020243,2.314425,-9.163215,-8.750762,8.529921,-3.617640,-5.358151,-0.157047,-1.520230,1.944137,-1.118407,-9.734154,-0.530669,-7.338997,-3.170616,1.855201,4.889574,-9.206631,-1.834555,-9.873101,9.356299,-1.581379,0.846568,8.863605,-4.717707,-9.622153,3.014398,-6.554349,-8.794635,3.741941,9.963117,5.868871,1.689044,-0.520157,-5.912796,4.511049,4.649385,2.780950,3.909532,-8.707688,5.735263,-6.900307,9.264119,-9.157679,7.735122,-9.540575,4.939877,6.070560,4.741420,-0.927390,5.353328,-7.933657,-7.174306,1.969886,-3.933368,2.061962,-5.922418,8.332766,-6.282962,-3.094493,7.630707,-4.561307,-5.703568,-6.078844,7.062615,-8.043147,-3.100536,1.459748,-8.893976,-6.579082,-8.284458,3.416917,8.412885,-5.181843,-3.604223,2.529943,5.041079,-7.055600,-6.588865,-4.809396,-6.614054,-3.625268,2.509227,2.971532,-1.405764,-1.194323,0.857963,4.852316,-5.869608,-3.941135,-3.478555,4.206427,-9.001457,-4.546225,-2.421825,-4.306087,4.788021,9.523720,1.120575,-0.403287,8.314750,-4.042353,-3.896676,7.070664,-1.440865,-8.078034,-2.905469,-1.391745,6.577090,7.638541,6.992792,-6.129319,-0.308635,6.416296,-5.061207,9.581741,6.446006,-5.058727,3.527155,-3.813551,-0.369807,5.445975,-2.630010,3.359456,-2.902690,8.727820,-7.590246,-2.265652,-2.791565,-1.170948,4.194863,-2.511391,-8.057011,9.665162,-5.827938,5.753120,-5.719751,7.403669,-9.530062,-7.103838,9.227877,0.052686,-2.328504,-7.618160,8.893659,8.171434,-4.616095,8.854692,7.859411,9.020449,1.116730,-1.690159,1.538948,-6.627907,-5.839460,-0.795030,6.887226,6.070819,8.878890,-6.626794,3.585629,8.962296,7.175460,-7.258564,6.577076,-5.862926,-9.473004,-1.461839,3.706953,6.478670,-8.453452,7.465287,6.144553,9.068774,3.051917,-4.820362,5.221691,-6.108220,-5.478597,3.883435,-0.732646,-0.743776,-0.417890,-6.509408,-5.426449,8.430810,3.959864,-6.028403,-1.291440,8.412770,2.394581,-2.680670,-9.982782,0.595577,8.964738,-1.140947,-4.909204,-3.525630,-9.577705,-6.138194,-8.876794,1.862065,1.414461,1.910383,0.855215,7.330817,-6.453684,1.987062,-5.296220,6.081450,-0.413385,-9.148058,0.858956,7.985066,1.067765,-5.819303,-7.569355,-9.830856,8.363026,9.421697,-7.642303,9.566483,-4.410514,1.189552,2.291360,-0.192464,0.999296,-5.260542,0.945080,-6.574565,-9.761886,-1.157642,-0.328667,-9.947044,-0.788017,-9.515587,-9.488069,5.793225,-5.431447,3.582726,-7.466096,9.134253,-6.703784,-7.543546,-3.009757,8.213485,6.243120,7.200836,-4.000353,1.497712,3.771819,0.324931,4.734283,-6.199503,-9.598554,3.096560,7.119951,-9.544771,-0.781118,9.640974,4.756115,5.050636,-5.963204,-4.883350,-1.552863,-6.743918,3.612921,7.986623,-2.692256,-0.149743,-9.494158,4.935007,5.595921,9.639201,-9.632251,-3.919652,7.759996,-5.296579,-1.801856,-2.324175,-5.089439,-5.479316,6.024102,-0.661416,0.693221,-5.112955,-1.761871,0.134613,3.884957,-1.966063,1.637197,7.648655,-2.178633,-2.594403,-1.661620,-3.998424,5.239069,-9.503269,-5.112237,7.086515,2.610891,8.155250,7.084848,6.747771,-5.627967,8.952289,-1.955430,-1.810281,-2.235391,9.752312,-1.904165,-3.632781,-5.496160,-2.456398,1.165359,-0.960333,5.903000,3.912223,-7.934524,6.712347,-2.250924,-6.289746,7.294826,5.712440,-3.815387,-1.402809,-3.216052,-0.082923,5.455098,-4.605874,-2.700776,2.041175,-3.942451,4.756339,-0.144455,2.512632,2.837556,4.674113,8.686561,-6.063708,-5.483739,-7.366887,1.698702,3.450542,5.107770,-9.742889,4.898768,3.296426,-9.832975,-3.052713,3.626542,4.018560,-3.548825,9.537064,1.505723,4.890970,-6.288853,8.944075,-2.665318,-1.367321,-3.735769,-8.664624,-8.566219,6.223395,-1.016003,3.769327,-2.691885,-6.105982,-0.842704,-0.426338,6.160224,8.813840,8.212667,-1.910271,7.164392,2.104273,5.929705,9.467214,4.909235,-2.274619,8.826787,8.717241,-4.087317,-4.997851,7.387631,-4.109078,-0.152079,-8.729216,-8.182124,3.629675,6.053934,3.179530,-4.722589,-9.780573,-5.393625,1.858008,2.110837,8.715666,-9.018528,-5.495918,-0.310217,5.481855,-7.740274,-2.210256,-1.733159,-5.634164,-0.297468,-4.159291,7.419047,-3.042925,9.929164,4.672438,-1.990496,-9.064602,-2.567079,-4.366872,7.218106,3.149476,9.489038,6.507897,8.368966,9.030930,2.686943,5.528485,-5.437415,-8.196224,4.686802,-5.533090,-2.988866,7.523907,0.788281,9.887179,7.147592,-7.293736,-1.902770,-3.027122,-8.538691,2.668406,2.024007,-1.289214,-5.434431,7.961508,-5.584897,0.866291,-9.088741,7.788023,-9.873167,-4.602871,2.278691,-2.087083,-2.970072,3.883593,-8.413995,9.901115,3.025936,-6.373415,-6.328169,-9.233209,0.920820,-8.536017,-2.414531,-2.076062,-4.670808,-3.328007,0.445787,-8.646000,0.777728,-7.228919,-7.948040,3.697934,5.520469,-1.302982,3.643421,-7.229159,-9.621644,-0.045787,-8.089096,-2.821820,2.638020,-8.687951,6.629192,4.091835,5.639719,1.749621,6.556238,1.709425,-6.779926,-2.199332,-9.453027,-2.075431,6.766119,2.853939,1.323615,3.569324,-6.378948,-2.681318,-3.991058,-6.410496,4.042575,3.258330,-8.607604,-8.070625,-9.465779,-2.612574,4.215863,-8.667830,1.077249,2.287931,2.754362,-2.904882,-9.837164,3.641333,-6.440532,-4.337999,5.087762,-4.490948,4.753100,-3.119638,7.788450,-6.121656,-0.049595,-9.896743,5.758989,-8.873747,-3.647824,-7.866512,4.308827,7.982602,-3.426931,-7.678667,8.229210,9.378548,0.685872,0.189245,2.823798,9.213321,-4.821590,3.713118,1.484868,-8.583941,-7.047111,8.226772,-1.930661,6.079969,-4.991610,0.050187,-6.960172,-0.397226,-7.519112,6.625144,-1.773407,4.474659,-3.084330,-3.647258,0.392030,0.531383,0.126991,5.566408,1.156301,-7.980418,-5.783826,7.587453,0.408365,-9.259657,4.821072,3.929054,7.595256,-0.395636,1.352188,9.152893,8.398276,7.470316,1.018867,6.333627,3.549876,8.396551,3.637467,4.232744,-5.560441,-9.374478,6.166347,7.817521,9.794390,-8.734613,-5.676389,3.268875,-0.177644,1.524750,7.785068,-3.579251,-3.097900,3.627351,-8.870370,-4.934881,-3.242713,9.059373,-1.083409,-4.450751,-2.386694,5.139128,1.870460,2.187456,5.719247,4.504945,6.721651,2.830239,1.598210,7.156353,7.776430,9.503652,-4.025561,7.653831,1.168318,-2.841724,-6.144749,2.194390,-8.327616,8.940260,0.728982,1.809734,-7.371017,-0.779526,0.999568,-3.888498,-0.355987,-5.827044,-4.576709,3.939419,-7.138277,6.931470,9.964290,-9.128567,2.242503,8.263870,-0.966123,0.645369,-7.940941,6.419093,8.410765,-3.749955,0.596675,8.849970,2.307906,6.424285,-9.851802,-3.277914,3.831415,-5.677412,1.349659,8.721382,-5.100168,-1.625755,9.673921,-4.173300,9.444670,-2.838608,7.515221,-7.621227,-2.000429,-2.704307,6.620121,0.321536,6.561084,2.922924,2.917441,8.754361,-4.902088,-8.338586,1.830279,-3.248397,-8.156068,5.775398,-8.145262,-7.173377,9.753136,-9.796970,1.080716,-0.238060,7.157723,6.946498,-8.701708,-5.984878,0.239111,-0.417446,5.077198,7.301102,8.019384,4.861454,6.221912,3.970591,0.863225,5.450920,5.932097,5.603409,9.369926,3.870165,4.533182,-5.510173,3.393490,1.530270,-8.437881,-3.789644,2.951296,9.146595,4.585020,-1.948530,-8.478012,3.250653,2.945256,-8.241767,-5.438670,-3.059997,7.768864,-2.697767,-5.208583,7.615718,-8.127446,-1.041450,-7.393391,-9.871622,-7.798378,-0.922983,-3.459413,-4.201026,-8.662982,2.060692,2.870094,4.520803,-3.990615,8.268318,2.759829,7.639554,-3.961881,-2.196884,-1.756150,-3.480782,6.786309,6.331205,-0.778793,8.760394,4.010748,7.163501,-6.749147,2.006405,-0.282100,4.579458,-9.578933,-9.697366,0.943263,2.603668,4.341074,-6.930217,-2.927884,8.942158,-4.849567,4.333743,5.519086,-0.282795,2.124037,-2.246833,-4.496186,-3.393911,0.286741,3.598510,9.164145,-8.651521,-8.946949,9.122594,-1.559687,1.339981,6.783228,-9.877971,-9.865905,-0.463007,1.346177,7.154188,3.909285,-1.541230,-3.778717,0.486183,-5.485578,0.480272,-2.749052,8.031411,9.494778,8.443615,9.301282,0.258934,-6.073651,-5.993563,-8.548896,9.518338,5.810724,-1.393489,1.270383,6.439704,9.965777,-5.513998,6.412666,1.155832,1.481796,7.391778,-1.244390,-3.602050,-1.643953,-0.180856,-3.320754,-3.490058,2.217011,-2.794457,-0.477527,-9.339305,-3.385210,-9.258251,-8.180613,-4.940755,-9.844219,4.747976,-1.367675,-7.280847,-0.724897,2.370940,-5.099019,-8.555466,5.807222,3.056207,-3.793392,8.260471,-7.620124,-9.679522,9.215260,-4.787681,-0.845991,1.924152,6.348588,3.792550,-8.917982,4.186719,1.543266,7.106439,-1.359939,-0.253037,-2.940502,8.621685,6.210231,-9.461216,-5.620890,1.149975,-6.668748,5.896220,-4.571374,9.231460,0.159453,8.445809,-9.059438,1.777264,8.644693,4.951734,-9.054220,1.501778,-5.709116,-8.719653,-8.696629,6.744505,-8.022982,7.709474,5.061637,-6.767550,9.466836,5.589287,-9.225450,-1.369611,4.011132,9.855016,-9.093151,1.737674,-2.425506,9.012670,5.494821,3.383160,3.189942,-7.622118,8.072562,8.978401,0.729849,-7.774789,-4.602707,8.766140,-3.373665,1.820520,9.778464,5.841918,-2.636308,6.338105,5.999319,-7.256975,7.537855,-3.405961,9.515631,9.431491,-0.444763,-0.354481,-8.623993,-1.409243,-7.595797,5.478968,3.604532,-6.908147,7.304923,9.298632,-7.489182,9.881056,1.579998,0.405543,9.425836,2.188250,-6.004864,-3.219557,1.273934,-8.050975,-1.896729,-2.761764,-3.742289,-5.356968,-1.588074,6.782692,0.747994,-6.586154,-5.755944,8.880034,-8.386003,1.522252,-8.806432,6.427333,4.031246,2.643527,8.806395,5.168841,-3.993251,4.044294,5.060864,-5.337576,7.150977,9.279588,-8.618355,8.871594,9.219396,9.555628,0.284901,-3.462343,-4.085568,-9.514352,8.863238,-4.504052,6.174440,-0.794365,-8.753926,7.870656,1.902151,3.974660,5.644100,-2.979615,4.106865,-9.003226,-5.933453,7.448163,8.352644,-5.968658,0.589149,-2.040084,-3.172492,-4.209057,3.663213,-3.799314,-3.360210,-7.181740,-7.741273,2.162594,5.665253,-4.615026,-3.349487,-6.389056,-7.459294,-8.260437,7.031229,-3.122734,7.362842,-4.974308,7.383763,1.654879,-2.433072,0.965204,-7.476854,9.923180,1.201244,1.278695,6.182162,9.224230,-5.369036,-8.767248,-0.360280,6.699724,5.780829,7.261776,-8.203032,-5.859619,-3.904212,8.666117,-5.857992,-8.120870,4.736772,1.107259,-5.384905,-4.744949,-4.166820,-1.929180,5.930715,-1.972030,-0.609855,4.262328,-1.767259,4.344091,-9.230768,6.584516,7.003143,-0.870490,4.569180,-0.092392,-6.756390,-9.017160,2.388875,2.294473,-6.799993,3.870158,0.155827,4.086731,-6.520599,9.459225,-3.715906,-4.613389,-0.294303,-7.824766,-2.709375,8.605432,4.039987,-5.509629,2.750715,2.460903,9.452455,-9.582555,-8.432218,1.013714,-3.272565,8.853992,7.669891,0.462311,-5.524284,-3.566230,-1.516045,4.521938,7.664258,-6.203707,5.051967,4.908151,-6.052745,-4.560089,3.881592,3.496575,-7.760153,-1.724767,-5.288637,7.875652,2.693713,-6.660854,-0.370877,2.275567,3.788046,-7.245534,-4.789625,9.711907,3.258138,0.213777,2.920412,-0.394069,7.073926,-6.809723,-0.210235,-5.000234,1.069145,5.068386,-4.766050,2.554758,-8.383736,-8.986845,6.094935,2.917879,2.061860,-6.697461,-1.875425,-9.201732,9.247747], dtype = "float64")#candidate|9266|(1440,)|const|float64
call_9265 = func_8477_call(relay.reshape(const_9266.astype('float64'), [6, 15, 16]))
call_9267 = func_8477_call(relay.reshape(const_9266.astype('float64'), [6, 15, 16]))
output = relay.Tuple([call_9226,call_9232,var_9233,const_9234,var_9235,const_9236,const_9237,const_9248,bop_9252,call_9265,const_9266,])
output2 = relay.Tuple([call_9227,call_9238,var_9233,const_9234,var_9235,const_9236,const_9237,const_9248,bop_9255,call_9267,const_9266,])
func_9284 = relay.Function([var_9233,var_9235,var_9249,], output)
mod['func_9284'] = func_9284
mod = relay.transform.InferType()(mod)
var_9285 = relay.var("var_9285", dtype = "int64", shape = (40,))#candidate|9285|(40,)|var|int64
var_9286 = relay.var("var_9286", dtype = "int64", shape = (132,))#candidate|9286|(132,)|var|int64
var_9287 = relay.var("var_9287", dtype = "float32", shape = (13, 65))#candidate|9287|(13, 65)|var|float32
output = func_9284(var_9285,var_9286,var_9287,)
func_9288 = relay.Function([var_9285,var_9286,var_9287,], output)
mutated_mod['func_9288'] = func_9288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5809_call = mod.get_global_var('func_5809')
func_5810_call = mutated_mod.get_global_var('func_5810')
call_9306 = relay.TupleGetItem(func_5809_call(), 1)
call_9307 = relay.TupleGetItem(func_5810_call(), 1)
output = call_9306
output2 = call_9307
func_9312 = relay.Function([], output)
mod['func_9312'] = func_9312
mod = relay.transform.InferType()(mod)
output = func_9312()
func_9313 = relay.Function([], output)
mutated_mod['func_9313'] = func_9313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_9328 = relay.TupleGetItem(func_6200_call(), 2)
call_9329 = relay.TupleGetItem(func_6201_call(), 2)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
var_9340 = relay.var("var_9340", dtype = "float32", shape = (1248,))#candidate|9340|(1248,)|var|float32
call_9339 = relay.TupleGetItem(func_1268_call(relay.reshape(var_9340.astype('float32'), [13, 12, 8])), 0)
call_9341 = relay.TupleGetItem(func_1271_call(relay.reshape(var_9340.astype('float32'), [13, 12, 8])), 0)
output = relay.Tuple([call_9328,call_9339,var_9340,])
output2 = relay.Tuple([call_9329,call_9341,var_9340,])
func_9362 = relay.Function([var_9340,], output)
mod['func_9362'] = func_9362
mod = relay.transform.InferType()(mod)
var_9363 = relay.var("var_9363", dtype = "float32", shape = (1248,))#candidate|9363|(1248,)|var|float32
output = func_9362(var_9363)
func_9364 = relay.Function([var_9363], output)
mutated_mod['func_9364'] = func_9364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_9441 = relay.TupleGetItem(func_6874_call(), 0)
call_9442 = relay.TupleGetItem(func_6876_call(), 0)
output = relay.Tuple([call_9441,])
output2 = relay.Tuple([call_9442,])
func_9451 = relay.Function([], output)
mod['func_9451'] = func_9451
mod = relay.transform.InferType()(mod)
mutated_mod['func_9451'] = func_9451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9451_call = mutated_mod.get_global_var('func_9451')
call_9452 = func_9451_call()
output = call_9452
func_9453 = relay.Function([], output)
mutated_mod['func_9453'] = func_9453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_9461 = relay.TupleGetItem(func_6592_call(), 0)
call_9462 = relay.TupleGetItem(func_6593_call(), 0)
uop_9463 = relay.acos(call_9461.astype('float32')) # shape=(3, 13, 15)
uop_9465 = relay.acos(call_9462.astype('float32')) # shape=(3, 13, 15)
bop_9474 = relay.bitwise_and(uop_9463.astype('uint32'), relay.reshape(call_9461.astype('uint32'), relay.shape_of(uop_9463))) # shape=(3, 13, 15)
bop_9477 = relay.bitwise_and(uop_9465.astype('uint32'), relay.reshape(call_9462.astype('uint32'), relay.shape_of(uop_9465))) # shape=(3, 13, 15)
output = bop_9474
output2 = bop_9477
func_9486 = relay.Function([], output)
mod['func_9486'] = func_9486
mod = relay.transform.InferType()(mod)
output = func_9486()
func_9487 = relay.Function([], output)
mutated_mod['func_9487'] = func_9487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9503 = relay.var("var_9503", dtype = "float64", shape = (9, 1, 3))#candidate|9503|(9, 1, 3)|var|float64
uop_9504 = relay.sigmoid(var_9503.astype('float64')) # shape=(9, 1, 3)
bop_9513 = relay.floor_mod(uop_9504.astype('float32'), relay.reshape(var_9503.astype('float32'), relay.shape_of(uop_9504))) # shape=(9, 1, 3)
output = bop_9513
output2 = bop_9513
func_9521 = relay.Function([var_9503,], output)
mod['func_9521'] = func_9521
mod = relay.transform.InferType()(mod)
mutated_mod['func_9521'] = func_9521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9522 = relay.var("var_9522", dtype = "float64", shape = (9, 1, 3))#candidate|9522|(9, 1, 3)|var|float64
func_9521_call = mutated_mod.get_global_var('func_9521')
call_9523 = func_9521_call(var_9522)
output = call_9523
func_9524 = relay.Function([var_9522], output)
mutated_mod['func_9524'] = func_9524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_9589 = func_5593_call()
call_9590 = func_5593_call()
output = call_9589
output2 = call_9590
func_9601 = relay.Function([], output)
mod['func_9601'] = func_9601
mod = relay.transform.InferType()(mod)
output = func_9601()
func_9602 = relay.Function([], output)
mutated_mod['func_9602'] = func_9602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mod.get_global_var('func_7914')
func_7915_call = mutated_mod.get_global_var('func_7915')
call_9642 = relay.TupleGetItem(func_7914_call(), 0)
call_9643 = relay.TupleGetItem(func_7915_call(), 0)
func_9312_call = mod.get_global_var('func_9312')
func_9313_call = mutated_mod.get_global_var('func_9313')
call_9667 = func_9312_call()
call_9668 = func_9312_call()
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_9682 = func_8800_call()
call_9683 = func_8800_call()
func_8694_call = mod.get_global_var('func_8694')
func_8695_call = mutated_mod.get_global_var('func_8695')
call_9684 = func_8694_call()
call_9685 = func_8694_call()
output = relay.Tuple([call_9642,call_9667,call_9682,call_9684,])
output2 = relay.Tuple([call_9643,call_9668,call_9683,call_9685,])
func_9688 = relay.Function([], output)
mod['func_9688'] = func_9688
mod = relay.transform.InferType()(mod)
output = func_9688()
func_9689 = relay.Function([], output)
mutated_mod['func_9689'] = func_9689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_9701 = relay.TupleGetItem(func_5744_call(), 0)
call_9702 = relay.TupleGetItem(func_5746_call(), 0)
output = call_9701
output2 = call_9702
func_9703 = relay.Function([], output)
mod['func_9703'] = func_9703
mod = relay.transform.InferType()(mod)
output = func_9703()
func_9704 = relay.Function([], output)
mutated_mod['func_9704'] = func_9704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_9711 = func_5708_call()
call_9712 = func_5708_call()
var_9732 = relay.var("var_9732", dtype = "uint64", shape = (3, 13, 15))#candidate|9732|(3, 13, 15)|var|uint64
bop_9733 = relay.divide(call_9711.astype('float64'), relay.reshape(var_9732.astype('float64'), relay.shape_of(call_9711))) # shape=(3, 13, 15)
bop_9736 = relay.divide(call_9712.astype('float64'), relay.reshape(var_9732.astype('float64'), relay.shape_of(call_9712))) # shape=(3, 13, 15)
output = relay.Tuple([bop_9733,])
output2 = relay.Tuple([bop_9736,])
func_9741 = relay.Function([var_9732,], output)
mod['func_9741'] = func_9741
mod = relay.transform.InferType()(mod)
var_9742 = relay.var("var_9742", dtype = "uint64", shape = (3, 13, 15))#candidate|9742|(3, 13, 15)|var|uint64
output = func_9741(var_9742)
func_9743 = relay.Function([var_9742], output)
mutated_mod['func_9743'] = func_9743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_9778 = func_5593_call()
call_9779 = func_5593_call()
func_6704_call = mod.get_global_var('func_6704')
func_6708_call = mutated_mod.get_global_var('func_6708')
var_9795 = relay.var("var_9795", dtype = "uint64", shape = (1859,))#candidate|9795|(1859,)|var|uint64
var_9796 = relay.var("var_9796", dtype = "uint64", shape = (143, 6))#candidate|9796|(143, 6)|var|uint64
var_9797 = relay.var("var_9797", dtype = "uint64", shape = (143,))#candidate|9797|(143,)|var|uint64
call_9794 = relay.TupleGetItem(func_6704_call(relay.reshape(var_9795.astype('uint64'), [13, 13, 11]), relay.reshape(var_9796.astype('uint64'), [6, 13, 11]), relay.reshape(var_9797.astype('uint64'), [1, 13, 11]), ), 2)
call_9798 = relay.TupleGetItem(func_6708_call(relay.reshape(var_9795.astype('uint64'), [13, 13, 11]), relay.reshape(var_9796.astype('uint64'), [6, 13, 11]), relay.reshape(var_9797.astype('uint64'), [1, 13, 11]), ), 2)
output = relay.Tuple([call_9778,call_9794,var_9795,var_9796,var_9797,])
output2 = relay.Tuple([call_9779,call_9798,var_9795,var_9796,var_9797,])
func_9810 = relay.Function([var_9795,var_9796,var_9797,], output)
mod['func_9810'] = func_9810
mod = relay.transform.InferType()(mod)
mutated_mod['func_9810'] = func_9810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9810_call = mutated_mod.get_global_var('func_9810')
var_9812 = relay.var("var_9812", dtype = "uint64", shape = (1859,))#candidate|9812|(1859,)|var|uint64
var_9813 = relay.var("var_9813", dtype = "uint64", shape = (143, 6))#candidate|9813|(143, 6)|var|uint64
var_9814 = relay.var("var_9814", dtype = "uint64", shape = (143,))#candidate|9814|(143,)|var|uint64
call_9811 = func_9810_call(var_9812,var_9813,var_9814,)
output = call_9811
func_9815 = relay.Function([var_9812,var_9813,var_9814,], output)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9826 = relay.const([[[8.987927,5.725057,5.720852,2.751614,8.464480],[-6.795035,-9.207366,0.284912,-7.191871,7.686090],[-1.744028,-1.579395,-4.616217,-3.220734,9.401999]],[[-6.719000,-0.524681,-5.016957,9.864440,-0.565140],[0.455290,-9.069685,5.512235,2.606630,7.774771],[1.586172,2.002614,4.753265,-5.085587,1.355908]],[[9.750655,-0.982002,-6.078013,8.592331,2.664421],[-7.828134,0.984344,-2.832459,-5.667586,-8.602772],[8.258330,-3.266375,5.345842,-7.442472,6.351286]],[[4.420001,9.646191,-9.512285,-9.583519,-1.459535],[9.685406,-4.024873,0.549599,7.835268,8.156418],[2.719280,-5.362507,0.944071,-4.620153,5.916233]],[[8.262266,-1.634495,-4.724365,-6.167149,9.068804],[-7.297300,-4.532037,4.023906,-1.697626,5.130853],[-6.614354,-8.435625,-1.958393,-6.509884,7.445278]],[[4.746106,-0.459028,-8.577501,-7.008191,6.658407],[4.703845,4.358438,9.474290,2.201358,0.194254],[9.041619,-2.115375,-6.797887,2.652792,1.894786]],[[-0.339583,3.963255,-3.907750,-0.687278,8.331438],[-3.692381,8.163811,-6.085740,-2.708217,-0.843209],[-2.198303,7.120776,0.742664,-6.061028,-4.986720]],[[-8.567149,-4.213618,5.201197,3.577533,2.575390],[-2.472443,7.245975,3.394555,-1.778718,3.027595],[-5.424796,-9.167390,-9.788964,3.575940,-4.765331]],[[-1.396907,2.750856,-9.026863,-4.200321,-0.464433],[-1.805734,5.890858,-1.740110,1.288797,8.679159],[-9.428291,1.660480,3.063982,-7.810992,-4.430338]],[[3.572502,3.252048,1.690594,7.002783,2.330868],[3.399859,-5.800989,1.130119,-3.593565,1.399311],[-2.018053,2.921186,-3.103291,6.437785,9.313033]],[[7.003976,5.381524,9.684690,5.404855,-4.477240],[-5.745096,-5.845289,-8.642971,-0.645936,4.169044],[-0.914373,5.076704,2.682173,4.536093,-1.959689]]], dtype = "float64")#candidate|9826|(11, 3, 5)|const|float64
uop_9827 = relay.tan(const_9826.astype('float64')) # shape=(11, 3, 5)
func_4793_call = mod.get_global_var('func_4793')
func_4796_call = mutated_mod.get_global_var('func_4796')
var_9833 = relay.var("var_9833", dtype = "float64", shape = (468,))#candidate|9833|(468,)|var|float64
call_9832 = relay.TupleGetItem(func_4793_call(relay.reshape(var_9833.astype('float64'), [12, 13, 3])), 2)
call_9834 = relay.TupleGetItem(func_4796_call(relay.reshape(var_9833.astype('float64'), [12, 13, 3])), 2)
func_7914_call = mod.get_global_var('func_7914')
func_7915_call = mutated_mod.get_global_var('func_7915')
call_9844 = relay.TupleGetItem(func_7914_call(), 0)
call_9845 = relay.TupleGetItem(func_7915_call(), 0)
func_7071_call = mod.get_global_var('func_7071')
func_7072_call = mutated_mod.get_global_var('func_7072')
call_9870 = func_7071_call()
call_9871 = func_7071_call()
uop_9873 = relay.asin(uop_9827.astype('float32')) # shape=(11, 3, 5)
bop_9875 = relay.floor_mod(uop_9873.astype('float64'), relay.reshape(uop_9827.astype('float64'), relay.shape_of(uop_9873))) # shape=(11, 3, 5)
output = relay.Tuple([call_9832,var_9833,call_9844,call_9870,bop_9875,])
output2 = relay.Tuple([call_9834,var_9833,call_9845,call_9871,bop_9875,])
func_9883 = relay.Function([var_9833,], output)
mod['func_9883'] = func_9883
mod = relay.transform.InferType()(mod)
mutated_mod['func_9883'] = func_9883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9884 = relay.var("var_9884", dtype = "float64", shape = (468,))#candidate|9884|(468,)|var|float64
func_9883_call = mutated_mod.get_global_var('func_9883')
call_9885 = func_9883_call(var_9884)
output = call_9885
func_9886 = relay.Function([var_9884], output)
mutated_mod['func_9886'] = func_9886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mod.get_global_var('func_7618')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_9910 = relay.TupleGetItem(func_7618_call(), 0)
call_9911 = relay.TupleGetItem(func_7619_call(), 0)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_9930 = func_5708_call()
call_9931 = func_5708_call()
output = relay.Tuple([call_9910,call_9930,])
output2 = relay.Tuple([call_9911,call_9931,])
func_9950 = relay.Function([], output)
mod['func_9950'] = func_9950
mod = relay.transform.InferType()(mod)
mutated_mod['func_9950'] = func_9950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9950_call = mutated_mod.get_global_var('func_9950')
call_9951 = func_9950_call()
output = call_9951
func_9952 = relay.Function([], output)
mutated_mod['func_9952'] = func_9952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_9963 = relay.TupleGetItem(func_5788_call(), 1)
call_9964 = relay.TupleGetItem(func_5790_call(), 1)
func_5951_call = mod.get_global_var('func_5951')
func_5955_call = mutated_mod.get_global_var('func_5955')
var_9978 = relay.var("var_9978", dtype = "float32", shape = (1248,))#candidate|9978|(1248,)|var|float32
const_9979 = relay.const([-1,-2,6,2,5,-3,-5,1,8,4,-3,3,7,3,-2,-7,-3,-3,1,4,-7,8,-3,3,-4,7,6,-5,3,-10,-2,-9,-6,-5,-10,-2,-8,-9,9,4], dtype = "int64")#candidate|9979|(40,)|const|int64
call_9977 = relay.TupleGetItem(func_5951_call(relay.reshape(var_9978.astype('float32'), [1248,]), relay.reshape(const_9979.astype('int64'), [40,]), ), 4)
call_9980 = relay.TupleGetItem(func_5955_call(relay.reshape(var_9978.astype('float32'), [1248,]), relay.reshape(const_9979.astype('int64'), [40,]), ), 4)
func_7580_call = mod.get_global_var('func_7580')
func_7581_call = mutated_mod.get_global_var('func_7581')
call_9981 = relay.TupleGetItem(func_7580_call(), 0)
call_9982 = relay.TupleGetItem(func_7581_call(), 0)
func_6585_call = mod.get_global_var('func_6585')
func_6586_call = mutated_mod.get_global_var('func_6586')
call_9986 = func_6585_call()
call_9987 = func_6585_call()
output = relay.Tuple([call_9963,call_9977,var_9978,const_9979,call_9981,call_9986,])
output2 = relay.Tuple([call_9964,call_9980,var_9978,const_9979,call_9982,call_9987,])
func_10003 = relay.Function([var_9978,], output)
mod['func_10003'] = func_10003
mod = relay.transform.InferType()(mod)
var_10004 = relay.var("var_10004", dtype = "float32", shape = (1248,))#candidate|10004|(1248,)|var|float32
output = func_10003(var_10004)
func_10005 = relay.Function([var_10004], output)
mutated_mod['func_10005'] = func_10005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7688_call = mutated_mod.get_global_var('func_7688')
call_10020 = relay.TupleGetItem(func_7687_call(), 0)
call_10021 = relay.TupleGetItem(func_7688_call(), 0)
func_9688_call = mod.get_global_var('func_9688')
func_9689_call = mutated_mod.get_global_var('func_9689')
call_10027 = relay.TupleGetItem(func_9688_call(), 3)
call_10028 = relay.TupleGetItem(func_9689_call(), 3)
output = relay.Tuple([call_10020,call_10027,])
output2 = relay.Tuple([call_10021,call_10028,])
func_10030 = relay.Function([], output)
mod['func_10030'] = func_10030
mod = relay.transform.InferType()(mod)
output = func_10030()
func_10031 = relay.Function([], output)
mutated_mod['func_10031'] = func_10031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mod.get_global_var('func_7618')
func_7619_call = mutated_mod.get_global_var('func_7619')
call_10086 = relay.TupleGetItem(func_7618_call(), 0)
call_10087 = relay.TupleGetItem(func_7619_call(), 0)
func_6856_call = mod.get_global_var('func_6856')
func_6860_call = mutated_mod.get_global_var('func_6860')
var_10099 = relay.var("var_10099", dtype = "uint64", shape = (1, 585))#candidate|10099|(1, 585)|var|uint64
const_10100 = relay.const([False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True], dtype = "bool")#candidate|10100|(1470,)|const|bool
call_10098 = relay.TupleGetItem(func_6856_call(relay.reshape(var_10099.astype('uint64'), [3, 13, 15]), relay.reshape(const_10100.astype('bool'), [1470,]), ), 3)
call_10101 = relay.TupleGetItem(func_6860_call(relay.reshape(var_10099.astype('uint64'), [3, 13, 15]), relay.reshape(const_10100.astype('bool'), [1470,]), ), 3)
output = relay.Tuple([call_10086,call_10098,var_10099,const_10100,])
output2 = relay.Tuple([call_10087,call_10101,var_10099,const_10100,])
func_10102 = relay.Function([var_10099,], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
var_10103 = relay.var("var_10103", dtype = "uint64", shape = (1, 585))#candidate|10103|(1, 585)|var|uint64
output = func_10102(var_10103)
func_10104 = relay.Function([var_10103], output)
mutated_mod['func_10104'] = func_10104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_10111 = func_8800_call()
call_10112 = func_8800_call()
output = call_10111
output2 = call_10112
func_10169 = relay.Function([], output)
mod['func_10169'] = func_10169
mod = relay.transform.InferType()(mod)
output = func_10169()
func_10170 = relay.Function([], output)
mutated_mod['func_10170'] = func_10170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9008_call = mod.get_global_var('func_9008')
func_9009_call = mutated_mod.get_global_var('func_9009')
call_10194 = relay.TupleGetItem(func_9008_call(), 0)
call_10195 = relay.TupleGetItem(func_9009_call(), 0)
output = call_10194
output2 = call_10195
func_10206 = relay.Function([], output)
mod['func_10206'] = func_10206
mod = relay.transform.InferType()(mod)
output = func_10206()
func_10207 = relay.Function([], output)
mutated_mod['func_10207'] = func_10207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9950_call = mod.get_global_var('func_9950')
func_9952_call = mutated_mod.get_global_var('func_9952')
call_10218 = relay.TupleGetItem(func_9950_call(), 0)
call_10219 = relay.TupleGetItem(func_9952_call(), 0)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_10227 = relay.TupleGetItem(func_8176_call(), 0)
call_10228 = relay.TupleGetItem(func_8177_call(), 0)
func_7358_call = mod.get_global_var('func_7358')
func_7362_call = mutated_mod.get_global_var('func_7362')
var_10230 = relay.var("var_10230", dtype = "int64", shape = (40,))#candidate|10230|(40,)|var|int64
const_10231 = relay.const([[2.692579,4.754527,9.679418,-0.069408,-9.245711,3.347257,1.137443,1.109160,-3.750956,7.315074,1.419072,2.694231,-8.555207,0.891649,-0.186699,7.543414,5.067470,-0.956330,-2.393496,8.736844,4.032210,2.562967,-1.920167,3.118392,-3.022104,3.254944,-9.671927,-5.997110,4.921992,4.649863,-7.620138,-7.998720,7.548261,-5.582719,8.160723,-7.574296,-9.003006,5.020428,-7.415090,6.549540,-5.535456,-0.662223,4.844779,7.834910,-0.630574,-4.450255,0.240893,2.775449,-4.532671,-2.199505,5.474096,-2.274467,-1.616606,-3.300454,-2.311072,-4.247327,5.920618,2.801582,3.338585,3.094010,6.220907,1.536545,-9.137981,1.194691,-7.862051,9.813130,-5.942622,-0.009327,6.942613,7.710642,-2.100423,-7.442634,0.572841,1.418462,-7.276446,-1.257284,-9.345931,3.699927,-9.580380,3.747679,-8.363088,-8.990953,5.367585,-7.883172,-8.636070,-8.072695,5.991810,-2.235992,5.411511,1.353795,-5.657001,0.641586,3.744271,-8.318455,-3.413798,8.759612,-2.514596,1.148131,-5.911148,-1.403028,-0.475667,5.537534,-2.055775,-4.453049,4.887374,2.166276,1.321853,0.657163,2.403811,5.185326,9.499789,5.337099,-7.464596,5.161084,-3.656370,5.532012,3.202432,-7.786945,-3.509929,8.457815,-5.560067,-7.615380,4.137608,9.885086,1.979720,-4.871510,6.326453,-9.736542,7.194462,-4.726113,7.557095,-5.989478,-1.528657,-2.861502,9.197740,8.536289,9.525632,7.409183,9.958194,5.176196,2.164931,4.743440,8.956064,6.159083,-3.263208,-9.061765,3.587204,-5.599071,7.630520,6.389805,-0.300700,6.357517,-6.643034,-0.249306,2.385158,-7.885114,-2.012018,1.720056,8.518907,-5.585489,-7.880936,5.870965,5.547554,7.545573,2.797726,3.751434,7.826849,6.219937,5.606120,1.848908,6.617948,-7.754236,-3.549278,-5.560356,-0.959566,9.942270,8.732573,-3.891999,-8.156559,-1.871540,-5.523678,9.610877,-8.176898,3.460223,-0.574943,-7.960140,-6.578187,1.834790,-4.073484,-1.574866,-3.667885,5.450243,2.368261,-3.394423,5.499066,8.339501,-5.165918,-6.766805,2.720140,2.274726,-3.001295,9.355260,-6.602696,0.162928,-6.217245,1.670305,9.460460,6.293650,-3.330053,-1.153477,-9.154678,-7.238874,-2.318679,0.244118,-8.939909,-7.728191,-3.271128,-4.148408,-2.227568,4.860358,3.633722,-6.919388,9.224165,3.787561,4.074417,9.280961,5.218186,7.160017,-6.941437,3.244368,0.192348,-9.941886,-5.786982,-4.090607,-1.119432,0.491819,-3.812342,2.834709,7.069728,0.106925,-5.594067,-8.296745,-0.855225,-4.014959,-3.844080,-7.903490,8.120515,3.538907,3.784402,-7.247963,8.210935,2.515957,9.169939,6.925066,-3.278398,-8.455633,-7.228564,-2.934356,-2.813242,5.333100,0.078082,-1.347854,-2.491589,-3.078554,6.252724,-8.555057,-9.752980,-2.670086,-1.120715,5.423238,-8.379154,8.616671,-4.162950,-6.800294,-8.374957,-0.388933,3.779556,-1.380909,-3.322584,8.182285,-5.597840,6.391958,7.940171,-5.574908,4.443183,-5.062184,6.546112,-9.191552,-6.375953,-8.526481,6.676890,-6.957283,3.746581,-5.639107,6.902870,5.727167,3.365599,-4.540881,-7.871983,-7.868568,-7.859526,-7.783844,6.136467,-0.056103,9.326765,-2.007182,7.535895,1.803938,-9.093810,-5.542069,4.467986,8.385293,-6.927188,6.007352,-4.961269,6.092465,3.953010,8.946193,-8.276873,-7.230558,-5.103992,-1.963116,1.917216,5.150009,-6.171360,1.228553,0.372130,-8.717402,-2.899039,4.866444,-6.878512,-9.232724,-0.839910,-5.304569,2.566989,-4.342509,4.759347,2.460422,-2.096157,-1.767391,-1.945568,-8.031070,-7.832237,-1.176257,-7.884885,-2.160842,-6.552789,-6.513856,-0.798330,2.392193,7.635423,3.083608,9.538970,4.340638,4.427951,-9.940548,8.167865,-1.116088,7.490199,2.262527,-4.369909,-6.513096,-1.839344,5.010226,4.381083,-5.115733,-8.515947,-0.449569,-3.860025,0.591701,4.697624,0.413589,-4.011565,4.694251,-1.613748,2.108164,-0.196599,2.987476,1.103946,9.956045,-0.548333,5.421511,2.196860,-3.999436,-7.117359,-1.621856,0.126446,-2.232074,1.000354,1.157260,-6.411300,-2.542060,6.201699,7.864991,-6.493827,3.894082,-9.400050,5.452104,-6.183198,6.349269,3.040280,6.798139,-5.633300,-7.565726,2.420640,7.330188,-7.944979,-4.320928,-1.496577,-5.763687,-1.964790,8.506975,0.536272,-4.591923,-9.948646,-4.930011,8.173997,-5.547312,9.345201,6.425720,-8.648505,6.118745,-4.332859,-9.601453,9.910898,1.641779,7.417746,1.489014,4.704159,-5.961664,7.544025,1.436202,-1.406082,-4.660003,-4.359373,-0.645757,2.525039,-1.600234,8.129718,-5.184498,6.819199,-1.308761,-1.640786,4.710924,-8.577262,5.155867,-9.941709,-9.694059,-4.905213,0.817227,0.742184,2.637261,0.630403,-3.610720,6.987605,2.611061,7.433270,5.211298,4.635618,6.718582,-4.133638,-3.744266,-0.633222,-3.695250,0.151356,1.606993,4.782984,4.181937,-1.408727,-9.044348,-4.254839,9.023989,0.976257,6.457847,8.803613,-6.974438,6.335932,1.480076,-3.427640,-3.674283,6.950355,-5.739516,8.339688,1.821151,5.729228,2.267884,3.366468,4.791140,6.103659,-4.055677,-9.966601,-0.530451,9.493277,4.956748,8.464340,4.713764,2.914127,-1.793272,-3.051187,5.565472,2.174415,8.577843,0.081782,4.474204,-8.143337,9.957190,2.028560,-1.290206,0.345634,-3.785789,-9.654199,1.512327,9.785176,-8.142881,6.940841,8.779090,-9.309548,-8.738828,-6.807527,-7.973773,5.617335,3.867232,2.537295,2.147577,8.169541,-6.474032,0.337818,3.651535,0.621319,-7.243645,9.040086,5.901115,1.871583,8.832264,9.681796,-5.392862,-1.277419,8.919128,4.867176,-7.182282,-9.040635,-5.457825,3.272095,-9.735240,5.864569,9.239091,9.812912,-9.819402,-1.380864,-2.841066,9.000031,-6.568322,-5.553695,-6.501734,-2.333628,-4.651713,4.211848,5.984189,-1.267984,7.492187,-1.141561,1.960927,7.594218,-1.119975,5.362905,4.363466,5.195068,-9.528710,-9.008955,-7.080632,-6.061499,2.708038,7.113308,-7.581392,3.664606,-8.127569,-6.152974,7.381994,1.907622,-4.108895,-3.631819,-1.109759,1.481997,5.570977,3.820872,7.272816,-6.836131,1.899228,2.017963,6.578800,9.168945,-5.815640,2.781108,5.223080,-7.350271,-7.066656,8.398206,-1.754221,9.044416,-0.693769,6.772296,-1.924139,5.018256,-2.061823,9.991343,5.272781,7.949504,1.312027,4.165169,6.077521,-1.101697,-8.750935,-2.280712,-2.262965,-9.557171,-9.379877,-1.557015,2.271266,-3.605509,-7.763249,1.930789,-8.585409,-0.372116,-3.738563,-2.799227,7.273008,3.188299,5.507110,-0.125192,9.286405,-5.619637,0.763336,6.115491,-9.170526,-0.689861,7.514727,-3.825961,-5.288175,8.801412,-4.869003,-0.408098,-3.125490,8.576636,-8.797094,-6.423066,-4.956005,9.260775,4.700248,-7.142185,8.377129,8.813029,2.004072,-4.169633,-0.120367,-1.096361,-7.857350,-5.945794,-8.413755,-3.374218,9.678318,-8.603563,3.506316,4.210572,-4.967320,3.258852,-8.807249,9.242237,-0.659607,6.333057,0.899710,-3.761845,7.431945,6.509078,-0.279466,-4.847595,-4.999078,-6.199042,-3.486383,-8.435144,3.055147,-9.353115,-9.434521,3.167964,-8.087563,4.629658,-5.382839,1.646427,-9.485407,2.493215,-8.850246,1.483628,2.030239,-7.063431,5.970867,-0.761673,-1.547876,6.350883,-6.463399,-5.789024,7.607096,5.153951,1.461882,3.096936,9.385742,-3.249701,-9.803672,-8.317347,0.500835,-8.446374,8.606827,-5.101742,0.280670,1.269611,-8.129843,-8.411759]], dtype = "float32")#candidate|10231|(1, 715)|const|float32
call_10229 = relay.TupleGetItem(func_7358_call(relay.reshape(var_10230.astype('int64'), [40,]), relay.reshape(const_10231.astype('float32'), [1, 715]), relay.reshape(call_10218.astype('float32'), []), ), 11)
call_10232 = relay.TupleGetItem(func_7362_call(relay.reshape(var_10230.astype('int64'), [40,]), relay.reshape(const_10231.astype('float32'), [1, 715]), relay.reshape(call_10218.astype('float32'), []), ), 11)
bop_10236 = relay.bitwise_or(const_10231.astype('int16'), call_10227.astype('int16')) # shape=(1, 715)
bop_10239 = relay.bitwise_or(const_10231.astype('int16'), call_10228.astype('int16')) # shape=(1, 715)
output = relay.Tuple([call_10218,call_10229,var_10230,bop_10236,])
output2 = relay.Tuple([call_10219,call_10232,var_10230,bop_10239,])
func_10240 = relay.Function([var_10230,], output)
mod['func_10240'] = func_10240
mod = relay.transform.InferType()(mod)
var_10241 = relay.var("var_10241", dtype = "int64", shape = (40,))#candidate|10241|(40,)|var|int64
output = func_10240(var_10241)
func_10242 = relay.Function([var_10241], output)
mutated_mod['func_10242'] = func_10242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_10246 = func_8800_call()
call_10247 = func_8800_call()
func_6252_call = mod.get_global_var('func_6252')
func_6256_call = mutated_mod.get_global_var('func_6256')
var_10256 = relay.var("var_10256", dtype = "float32", shape = ())#candidate|10256|()|var|float32
var_10257 = relay.var("var_10257", dtype = "float32", shape = (720,))#candidate|10257|(720,)|var|float32
call_10255 = relay.TupleGetItem(func_6252_call(relay.reshape(var_10256.astype('float32'), []), relay.reshape(var_10257.astype('float32'), [720,]), ), 3)
call_10258 = relay.TupleGetItem(func_6256_call(relay.reshape(var_10256.astype('float32'), []), relay.reshape(var_10257.astype('float32'), [720,]), ), 3)
func_4059_call = mod.get_global_var('func_4059')
func_4065_call = mutated_mod.get_global_var('func_4065')
const_10264 = relay.const([9,8,-6,3,-10,10,1,-7,9,-9,-10,1,-8,10,-2,-10,4,-8,-1,-8,7,8,3,10,5,-5,8,6,-6,9,3,8,-1,8,9,-6,-3,-6,-10,-10], dtype = "int64")#candidate|10264|(40,)|const|int64
var_10265 = relay.var("var_10265", dtype = "float64", shape = (120,))#candidate|10265|(120,)|var|float64
const_10266 = relay.const([0.368279,4.669880,8.537207,-1.919355,-3.843656,3.490083,-6.305386,-5.154598,2.951685,-2.204800,-1.663106,-5.934504,2.276949,3.287956,-3.706377,7.452763,-8.854886,7.961851,-6.793787,4.978909,7.389615,2.398421,-1.106639,-3.252930,-8.886243,9.354748,8.515425,-0.890941,-7.383278,4.944324,7.123351,-6.124974,7.176038,-9.741873,0.525809,-5.331318,-8.156238,-6.838376,6.777392,-3.076854,-2.561944,3.238402,6.400442,-1.846894,5.270226,8.914228,1.776656,-6.216602,4.209565,-9.120483,2.484192,1.810404,-1.873595,-3.625243,-3.567818,8.296564,3.440098,-4.733675,-5.970528,-2.918711,-4.200618,2.848649,0.093682,2.950053,-8.787338,8.004170,-0.542468,7.274916,-3.887139,0.671531,5.884182,6.486285,2.945073,3.338333,9.804660,4.876569,5.085413,9.678764,-0.470935,-9.724158,-8.626946,-6.559046,-0.071649,3.025780,-3.726971,-9.590889,6.515740,-8.217959,0.720795,2.133562,1.220351,2.809235,6.423576,0.222712,1.424238,-6.487081,0.401699,-0.980320,-4.611076,-9.430913,-7.524252,-1.768159,1.270483,-7.441210,5.247775,3.740384,-4.773343,6.335855,2.669715,-3.181285,-5.021324,-7.494181,4.336289,-5.795955,-3.328280,-1.420248,4.762699,-4.355819,6.908810,7.073859,-6.940619,4.289262,8.642793,-7.426708,6.497882,6.545082,8.282698,9.166869,8.858311,8.273870,9.404822,-0.215006,-0.552711,5.694803,-4.332389,-3.245857,7.180292,8.525308,4.412809,9.916909,-0.768430,-8.047591,-1.352341,3.172102,1.798976,1.369717,-2.100401,3.841858,-9.903765,3.565309,-7.277687,-6.493909,7.756842,-0.404909,6.383828,-7.344876,4.102177,-2.181398,-6.177078,7.603260,-4.964479,-0.859036,-3.100398,7.064177,-2.314610,0.611892,7.231199,-7.967102,-8.781837,4.456130,-1.024952,6.843191,-5.227412,9.648800,0.673408,1.335671,1.586826,9.324820,4.613313,0.920900,7.415913,-1.356665,-1.170936,6.333582,-1.016645,-4.147455,-2.241242,-4.117102,3.703865,-7.604728,-9.612527,-5.522762,9.295398,7.569643,3.328377,0.614715,-7.512699,3.458612,-5.380574,0.806395,3.988161,-2.559651,8.412524,-9.986941,-1.699409,-2.975220,-6.547155,5.623142,-8.404506,9.590305,4.706000,-7.716696,-2.677437,-1.786026,-2.590024,1.391123,0.165910,-8.447383,-0.918141,-5.378243,7.762801,4.182248,1.895206,0.727653,-9.013631,4.439764,1.272478,0.274264,6.241606,9.193710,6.281799,7.272626,-2.649115,1.546835,9.821652,4.097439,-1.715151,-3.362439,8.896154,5.723676,-4.373007,0.128235,-1.477543,-5.008794,-2.480077,-7.473939,-4.750507,2.935979,0.793169,-4.565922,-9.160340,9.255134,-6.431906,-3.003773,8.897193,7.627477,6.604389,-2.794993,3.241625,0.936242,-8.663037,6.359757,-2.886425,7.488504,-1.386542,-3.441720,7.980739,1.029376,3.526171,-7.094997,-1.454469,5.870661,-7.439564,1.735848,-6.360756,-2.020441,-5.022211,7.394004,-8.144338,-4.585040,-6.149807,5.396575,-1.312716,-6.895830,-4.566161,5.628674,-5.255591,-2.741562,-3.593006,6.686196,6.951946,8.888380,4.299839,-8.389560,3.294385,-9.211922,7.456110,0.963747,0.305397,5.393286,-2.418594,-5.427467,5.623912,-4.901904,-4.655098,-1.312508,8.849017,-6.508037,9.689770,-1.731409,4.429377,-5.601135,-3.145404,4.221708,9.582830,7.310912,4.466974,8.993922,9.715575,-1.177692,8.372448,4.128524,-8.211991,0.149150,-2.001900,-5.259502,4.626907,-2.279305,-0.531250,3.174757,-4.787238,-7.205577,-2.089874,5.128662,7.035035,3.222797,-2.517961,5.183389,-5.695931,-1.235568,-1.689815,5.421419,-5.685637,1.598324,3.882887,-6.175180,7.682633,2.880336,-6.723862,1.047633,-9.385902,-8.145596,6.728827,5.005525,3.261280,-9.159257,-0.443422,7.005671,6.959434,7.742266,2.889650,6.394682,-2.726072,-7.529353,9.872417,-1.712867,-8.371704,-0.179292,-9.799265,-4.044647,-1.967014,5.299937,-5.797052,0.981967,4.155655,-0.241997,-5.048082,-8.043396,-9.473467,-9.360479,-4.973683,6.759095,4.851366,4.655223,1.568640,0.551958,-3.734349,-7.057874,0.932696,5.571700,-1.702544,5.363971,4.303710,-8.441963,-4.332662,9.223704,9.576143,-1.075026,-9.415338,4.437690,5.356856,2.591463,4.190268,-2.910415,6.111187,-2.564446,2.002817,7.656348,4.860774,-7.274788,-1.354362,-4.865811,-9.700409,-7.046439,-5.497318,-0.588857,0.108178,-2.897912,8.417606,6.499986,-2.248775,-3.117877,-3.609985,-0.825734,3.155709,6.623275,-1.317112,-5.755261,-9.816807,3.774452,-6.818963,-4.945689,-8.632875,-1.201088,8.774122,-7.768462,6.470359,6.806418,-8.652949,7.193978,-2.451990,7.190277,5.148310,1.386595,7.871844,-2.663832,-4.338964,3.270413,0.740416,-0.978129,4.379307,-7.643832,-4.346508,-3.114697,5.049370,-3.010282,3.680759,-1.976107,2.746452,-6.806458,9.629276,-9.522731,-2.736169,-8.631308,-8.460102,-9.355579,1.156889,-9.701245,6.701645,7.136827,5.950172,-8.853322,9.474229,1.931232,4.293975,3.325237,-0.718812,-3.400150,7.211512,7.292045,-7.517188,-9.808865,-0.347112,1.896317,4.847284,6.016986,-5.184101,6.131703,-5.466909,3.809242,1.209422,-0.817095,-5.699120,-5.713721,0.900344,5.823616,2.010451,-3.789433,1.952728,2.858625,-4.427583,6.008950,1.614377,-7.545871,3.242915,2.738171,3.455753,-4.145665,-0.017707,2.758721,-5.797269,7.238207,-0.781979,-0.984318,5.259222,9.850869,-4.177384,3.182081,9.098447,1.272366,3.438942,8.759087,2.650546,-5.329307,-5.767874,2.351702,5.444698,6.429676,-3.523275,3.169296,5.793830,4.027344,5.765458,7.591567,8.279775,2.741704,5.179864,2.604051,-3.861659,7.975457,6.296885,-7.821511,3.924994,9.725948,3.050273,-8.943846,4.242082,-8.351662,-6.445589,4.626373,-4.909200,-8.845179,-8.644412,-3.990317,7.812343,9.600234,6.597912,2.723542,4.861848,-8.227634,4.407293,-1.270790,9.589394,3.913922,-3.972335,8.287594,8.643084,7.597824,1.098625,9.476049,1.983185,5.412944,-4.136318,5.897323,0.621550,-2.329141,-0.367273,2.358269,0.947362,8.145653,-9.253530,-6.095706,-5.257439,0.566795,-8.465159,2.071026,2.970353,-5.837461,1.533351,-2.743324,0.024955,-0.957975,3.216908,2.443910,-1.483814,-4.972530,9.788968,2.497849,-8.610363,6.627279,6.205540,-0.682506,-7.246969,-9.758598,5.811854,-4.126763,1.940668,-3.217553,0.326558,9.480999,6.470873,-6.823565,-8.917539,-8.502219,-0.536667,1.337157,-4.192071,-2.444046,-9.813653,0.630375,1.632421,7.309013,-5.345935,6.468705,1.130023,3.449479,5.827460,-3.549705,1.645677,-7.269741,-8.928815,2.917163,-5.980357,4.324559,-1.499243,-5.183731,1.475317,-1.814746,3.626966,2.357656,-4.942198,1.379645,-0.547172,-4.481541,5.234634,9.242424,-3.674710,-5.950881,-5.164993,-9.720880,-6.458007,8.467829,-3.073253,7.294044,8.416882,-8.954301,-1.138070,6.219645,8.989244,-4.817234,7.798067,1.617564,4.977225,-3.951024,3.425229,-5.316376,6.515753,4.390388,-2.473040,7.739562,9.162750,3.645868,-4.844518,-6.460213,-4.974079,-2.101723,-3.554506,-6.590913,3.248155,-0.386178,8.087688,6.588159,-6.041474,-6.308866,6.998377,-9.230117,3.048854,-3.530303,2.164895,-7.932241,-6.782994,4.994122,-7.227983,-7.371910,-0.762715,-6.131414,6.545506,-5.857936,3.318728,-6.837828,-1.267283,4.587930,8.236787,3.286262,4.437487,-6.652081,-7.811796,-8.035852,0.663555,7.543833,9.894314,1.831294,3.736945,-0.112148,-1.694822,8.168575,-4.875142,8.821915,3.134941,-6.373368,-9.654928,-0.613418,-1.273796,8.880206,7.718387,4.437598,-9.202495,7.218642,-9.412296,-5.195389,0.523602,2.549524,7.838880,5.566159,-3.016079,0.595825,-6.585180,9.597284,-4.254802,2.616747,5.685109,7.107343,0.331660,6.542945,-9.467181,5.113711,-3.258183,9.191988,2.225315,-0.690457,-7.232657,-8.037389,9.318627,1.232940,-6.185401,1.022068,2.094010,9.931644,7.616211,-3.234715,1.096306,9.177091,8.824655,8.607903,7.320296,-4.327393,8.067017,8.886544,-9.476493,-4.639950,0.298553,3.417317,-0.744568,3.276904,0.709137,-8.105005,5.249410,-6.481046,-8.684723,5.659234,8.743602,-7.236051,-1.209805,3.192512,-6.196532,4.089216,4.939040,0.144575,-9.697797,-5.219250,-1.652812,-3.131607,-4.372811,-5.447521,-1.313958,4.537001,2.334746,-8.799509,7.441252,2.786540,3.435811,9.666828,7.119542,6.330829,9.674785,2.524825,-1.580011,-8.833804,2.504325,9.844874,-9.899359,6.056174,-7.457368,-8.314963,-6.852501,-2.530482,-4.511209,-8.428988,-8.234600,6.451610,0.154283,3.879899,-3.558497,1.500400,5.076033,3.481138,3.624214,9.975854,-2.145568,6.478482,3.618205,8.360790,0.810384,2.694462,0.668448,2.926659,-5.385570,-4.473078,-2.064929,-2.606620,-9.768548,-3.490814,-8.772409,-2.483935,3.925651], dtype = "float32")#candidate|10266|(845,)|const|float32
call_10263 = relay.TupleGetItem(func_4059_call(relay.reshape(const_10264.astype('int64'), [2, 4, 5]), relay.reshape(var_10265.astype('float64'), [120,]), relay.reshape(var_10256.astype('float32'), []), relay.reshape(const_10266.astype('float32'), [845,]), ), 6)
call_10267 = relay.TupleGetItem(func_4065_call(relay.reshape(const_10264.astype('int64'), [2, 4, 5]), relay.reshape(var_10265.astype('float64'), [120,]), relay.reshape(var_10256.astype('float32'), []), relay.reshape(const_10266.astype('float32'), [845,]), ), 6)
func_6585_call = mod.get_global_var('func_6585')
func_6586_call = mutated_mod.get_global_var('func_6586')
call_10268 = func_6585_call()
call_10269 = func_6585_call()
bop_10270 = relay.floor_divide(call_10263.astype('float64'), const_10266.astype('float64')) # shape=(720, 845)
bop_10273 = relay.floor_divide(call_10267.astype('float64'), const_10266.astype('float64')) # shape=(720, 845)
output = relay.Tuple([call_10246,call_10255,var_10256,var_10257,const_10264,var_10265,call_10268,bop_10270,])
output2 = relay.Tuple([call_10247,call_10258,var_10256,var_10257,const_10264,var_10265,call_10269,bop_10273,])
func_10277 = relay.Function([var_10256,var_10257,var_10265,], output)
mod['func_10277'] = func_10277
mod = relay.transform.InferType()(mod)
mutated_mod['func_10277'] = func_10277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10277_call = mutated_mod.get_global_var('func_10277')
var_10279 = relay.var("var_10279", dtype = "float32", shape = ())#candidate|10279|()|var|float32
var_10280 = relay.var("var_10280", dtype = "float32", shape = (720,))#candidate|10280|(720,)|var|float32
var_10281 = relay.var("var_10281", dtype = "float64", shape = (120,))#candidate|10281|(120,)|var|float64
call_10278 = func_10277_call(var_10279,var_10280,var_10281,)
output = call_10278
func_10282 = relay.Function([var_10279,var_10280,var_10281,], output)
mutated_mod['func_10282'] = func_10282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_10312 = relay.TupleGetItem(func_5788_call(), 0)
call_10313 = relay.TupleGetItem(func_5790_call(), 0)
output = relay.Tuple([call_10312,])
output2 = relay.Tuple([call_10313,])
func_10314 = relay.Function([], output)
mod['func_10314'] = func_10314
mod = relay.transform.InferType()(mod)
output = func_10314()
func_10315 = relay.Function([], output)
mutated_mod['func_10315'] = func_10315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_10316 = relay.TupleGetItem(func_8677_call(), 1)
call_10317 = relay.TupleGetItem(func_8679_call(), 1)
output = call_10316
output2 = call_10317
func_10334 = relay.Function([], output)
mod['func_10334'] = func_10334
mod = relay.transform.InferType()(mod)
mutated_mod['func_10334'] = func_10334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10334_call = mutated_mod.get_global_var('func_10334')
call_10335 = func_10334_call()
output = call_10335
func_10336 = relay.Function([], output)
mutated_mod['func_10336'] = func_10336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10334_call = mod.get_global_var('func_10334')
func_10336_call = mutated_mod.get_global_var('func_10336')
call_10367 = func_10334_call()
call_10368 = func_10334_call()
output = call_10367
output2 = call_10368
func_10373 = relay.Function([], output)
mod['func_10373'] = func_10373
mod = relay.transform.InferType()(mod)
mutated_mod['func_10373'] = func_10373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mutated_mod.get_global_var('func_10373')
call_10374 = func_10373_call()
output = call_10374
func_10375 = relay.Function([], output)
mutated_mod['func_10375'] = func_10375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mod.get_global_var('func_7914')
func_7915_call = mutated_mod.get_global_var('func_7915')
call_10376 = relay.TupleGetItem(func_7914_call(), 0)
call_10377 = relay.TupleGetItem(func_7915_call(), 0)
output = relay.Tuple([call_10376,])
output2 = relay.Tuple([call_10377,])
func_10412 = relay.Function([], output)
mod['func_10412'] = func_10412
mod = relay.transform.InferType()(mod)
mutated_mod['func_10412'] = func_10412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10412_call = mutated_mod.get_global_var('func_10412')
call_10413 = func_10412_call()
output = call_10413
func_10414 = relay.Function([], output)
mutated_mod['func_10414'] = func_10414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mod.get_global_var('func_6619')
func_6620_call = mutated_mod.get_global_var('func_6620')
call_10462 = func_6619_call()
call_10463 = func_6619_call()
output = relay.Tuple([call_10462,])
output2 = relay.Tuple([call_10463,])
func_10479 = relay.Function([], output)
mod['func_10479'] = func_10479
mod = relay.transform.InferType()(mod)
output = func_10479()
func_10480 = relay.Function([], output)
mutated_mod['func_10480'] = func_10480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_10521 = relay.TupleGetItem(func_7786_call(), 0)
call_10522 = relay.TupleGetItem(func_7788_call(), 0)
func_6585_call = mod.get_global_var('func_6585')
func_6586_call = mutated_mod.get_global_var('func_6586')
call_10533 = func_6585_call()
call_10534 = func_6585_call()
output = relay.Tuple([call_10521,call_10533,])
output2 = relay.Tuple([call_10522,call_10534,])
func_10536 = relay.Function([], output)
mod['func_10536'] = func_10536
mod = relay.transform.InferType()(mod)
output = func_10536()
func_10537 = relay.Function([], output)
mutated_mod['func_10537'] = func_10537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_10599 = relay.TupleGetItem(func_6874_call(), 0)
call_10600 = relay.TupleGetItem(func_6876_call(), 0)
output = call_10599
output2 = call_10600
func_10625 = relay.Function([], output)
mod['func_10625'] = func_10625
mod = relay.transform.InferType()(mod)
mutated_mod['func_10625'] = func_10625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10625_call = mutated_mod.get_global_var('func_10625')
call_10626 = func_10625_call()
output = call_10626
func_10627 = relay.Function([], output)
mutated_mod['func_10627'] = func_10627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_10670 = relay.TupleGetItem(func_6200_call(), 3)
call_10671 = relay.TupleGetItem(func_6201_call(), 3)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_10675 = relay.TupleGetItem(func_8176_call(), 0)
call_10676 = relay.TupleGetItem(func_8177_call(), 0)
func_6252_call = mod.get_global_var('func_6252')
func_6256_call = mutated_mod.get_global_var('func_6256')
const_10703 = relay.const([3.316325,4.658577,5.479926,1.096804,4.552151,-4.235575,-3.957673,8.691806,5.275760,-4.880838,-9.740229,1.494043,3.100995,6.780329,3.380849,3.877384,-8.979184,-0.418988,4.630313,6.142655,2.778950,8.655336,5.203931,5.007421,3.147398,5.652809,3.921856,2.635477,-6.461288,0.738514,-2.002083,-4.693017,8.674441,-8.839559,9.639235,2.037920,2.186520,-6.932234,-8.540990,9.218216,4.615166,2.508452,4.895614,1.049361,6.704109,-1.804878,-4.622641,-1.063320,8.833293,-5.387375,-3.761944,-8.921116,-8.255678,7.759637,-1.261880,-3.394724,9.237138,-4.610534,-2.026773,-9.704504,2.219289,4.756309,2.624555,0.170915,-9.668203,4.909309,-8.014045,-9.960972,2.139349,4.589981,4.675290,8.750227,8.999992,3.198080,-4.320951,2.721702,-2.363478,7.000985,9.515519,0.562810,-1.909173,-9.014643,-3.682922,1.239711,-8.759825,7.598881,5.997574,-9.046394,-4.429183,-6.354552,6.805184,-3.214193,8.831840,-4.537196,0.674878,-6.046792,-1.411322,-5.785412,-6.040988,-8.542354,-8.529981,-5.499650,2.650405,-9.282230,-3.575239,-2.815430,-2.606229,-4.891099,-2.859759,-2.647761,-0.547034,1.776393,-8.368945,7.676109,8.216204,6.942159,4.493973,9.158463,5.085211,-5.280288,5.240263,2.554040,-2.235046,0.331588,-0.372557,-8.774235,-8.298183,-9.079384,4.033010,5.430175,4.162121,-6.601611,-4.238016,3.201159,5.257361,-4.396601,-2.719038,-5.408594,3.980065,3.772694,-9.111362,-2.739719,6.220554,6.058522,-5.680471,-8.822804,1.629207,-9.047538,-6.484523,8.375054,1.372421,-8.668458,-5.602078,-0.973310,-9.451319,5.434755,6.500332,-4.794501,-5.349381,2.270229,-8.250066,7.446261,-2.308047,-2.114410,1.524916,-2.440786,6.882272,6.928316,-1.957039,6.700865,8.154112,8.020805,-3.393231,-2.945921,4.398928,7.240168,1.107449,9.698730,-1.722174,-7.770277,-8.104469,-4.702689,-2.842356,8.941923,-9.886001,1.843568,6.611207,-3.437641,-6.023527,0.192993,4.293520,-7.793332,2.634194,-2.060157,2.225737,7.963142,-3.696592,2.790442,2.313989,9.662339,8.020047,-9.532571,0.614210,-1.864560,1.646246,9.717905,-0.721971,1.792512,8.332823,9.931791,-3.831385,-2.939618,-0.409759,8.181040,-8.588002,1.475579,-2.732127,1.190230,5.013589,0.578628,7.172403,5.062265,-1.045711,6.974121,-8.961711,-8.548047,6.423416,7.504247,-1.142034,-2.087971,4.214365,-8.226723,0.580141,7.160672,0.008521,5.318922,7.068460,-0.900681,8.929829,-3.590457,-1.607975,-4.102387,0.028137,-9.923364,9.973843,8.231748,-2.103446,-9.533811,7.183370,-5.046970,-2.730336,8.346595,-1.127751,-8.079555,5.856353,-4.884589,9.373521,0.839033,-4.696277,7.950456,-9.394543,3.721273,-2.710682,-1.524320,2.335796,1.770993,-3.524640,-5.882850,-1.709101,-7.401645,6.029498,-1.829978,-1.529691,3.258584,5.077797,-2.375799,4.417511,-6.510150,7.165566,2.101145,-2.575266,-3.173613,9.855324,5.828404,9.197717,6.543771,-7.319161,-5.307019,-6.101334,-3.494421,-1.771560,4.285239,-5.117322,4.827544,4.443662,-9.333333,5.851479,-9.932514,8.147806,1.346878,-1.247570,0.924504,-6.391944,4.862923,-8.688297,-1.199077,-2.014366,-8.621559,2.084286,-2.125805,9.038064,-2.430090,9.585368,9.446486,7.033593,-3.238436,-2.264689,-1.186040,9.379520,1.758080,9.695731,-8.345097,8.554245,-1.086190,-5.206544,2.011120,-2.502784,5.680958,8.505436,-5.999594,0.602975,-8.454089,0.729008,-5.104489,-1.513886,-3.535860,2.256483,0.955970,6.637601,0.733145,-4.976130,0.185725,8.252888,-7.154311,-7.450249,6.072047,6.353837,7.986106,-5.588544,9.560031,1.687442,2.232669,-0.221151,0.035851,-9.077572,-2.533170,-0.474331,7.457281,-4.059643,-4.446731,2.382300,-9.281093,8.324242,2.628249,0.200471,-0.994014,-7.565224,1.768010,-4.707828,-3.121645,8.404340,5.248947,1.137929,5.943070,-3.833068,-6.188549,4.728826,1.010831,-2.067853,9.804606,2.643403,-6.287911,2.436152,4.781110,-1.245370,-3.235103,-3.837650,5.133064,5.696387,8.228811,-8.189783,3.400658,-2.287650,-7.789457,4.072540,-9.844812,3.481708,-6.980032,-3.800109,-1.958419,5.890860,-3.592534,-8.553596,1.781089,2.558763,-6.101742,-4.415985,5.194645,-3.193773,3.110177,9.678370,-5.659896,-8.124574,4.249529,-1.241490,-6.167346,5.161964,7.331617,-1.435622,2.549875,6.116077,-3.944499,4.086932,-5.539612,4.752576,1.006119,8.436893,-5.324411,-6.177208,-4.182118,3.686232,-3.338114,-8.926527,9.417831,8.491485,-0.639658,-7.856921,-4.269958,-6.529904,6.407422,7.272346,5.945625,-8.951962,-6.799841,2.168729,-0.538875,9.831748,9.152005,-3.517492,3.065572,7.786242,1.427720,-1.027067,3.720644,-5.695870,-6.882560,3.693589,8.192028,9.142350,-5.018974,-1.705292,-0.519576,-4.872688,6.995819,-9.200276,-9.304638,-4.125442,2.348609,3.874740,-8.784722,5.524618,1.232433,-5.759070,-1.354719,5.824522,-8.509894,9.015383,0.551234,7.913157,3.082353,3.740787,2.124487,2.037557,-8.080722,-5.028936,-4.432520,-6.608798,-6.590673,-0.892314,-2.058788,-3.114286,-4.505291,4.595098,8.639735,-7.865874,-2.149374,-5.754882,-9.318574,-0.608393,-7.093378,7.059100,-5.067972,7.396212,-9.558097,-9.912729,8.688776,0.929551,-6.250427,6.845604,2.251674,-2.908602,-1.426451,-9.871285,-2.655968,2.115101,3.387441,-4.238803,-5.402472,-5.416814,5.905688,-2.445024,8.760996,-7.345187,-4.164917,8.622548,-9.151628,-6.506601,-8.394696,2.401900,3.683488,-7.437630,7.620028,8.874009,-7.954021,-4.845238,-5.185806,-4.625806,-8.576219,4.306270,-4.524516,5.653171,9.190165,7.514641,-5.889894,-8.792441,-3.949657,-3.475423,4.906743,9.939792,6.992761,-8.697371,-8.758163,-9.510495,9.343922,-6.963680,-1.550153,-3.234689,0.598999,-7.930852,-4.416798,8.968897,8.894810,-5.786443,3.573228,-0.841190,3.305015,-9.293331,0.813324,8.693903,4.308126,-7.610512,3.128619,9.138940,8.970428,-6.602579,-6.782847,-7.543959,7.042380,5.465697,-6.421245,2.692631,-9.316297,-9.975889,-3.485989,-2.759873,3.884919,-9.494324,-1.869733,8.157521,6.848970,7.536064,5.335314,2.582652,7.987468,-6.882065,-8.036608,0.555823,7.343103,-4.287838,4.625814,5.054426,1.486194,8.754598,6.611728,2.519210,-8.786350,5.651213,-3.793784,-5.496840,1.640715,-7.071577,0.896084,-1.509946,3.013075,-2.613057,2.433591,4.827448,3.749730,-6.197403,0.600450,6.771612,5.084356,4.305802,0.386459,3.090423,-9.995966,-7.593200,3.374059,7.337524,8.272506,-0.821276,3.016113,-9.943873,-3.768761,-8.272899,-6.323793,-4.064771,-9.941536,-4.754170,1.589007,-9.213895,1.829534,4.392499,3.485461,0.083260,6.579438,6.468074,6.055419,7.186368,9.933777,8.103755,-9.907327,6.200267,6.935412,-6.152065,3.974450,7.217287,-9.275535,8.054335,5.177579,-5.068669,-4.749073,3.137626,6.378022,-3.631693,-9.119023,2.011947,3.982467,7.499226,-9.966822,9.176391,-2.473482,-1.981936,-7.467452,-3.345642,-7.169706,-9.206964,7.058519,-0.656785,-8.181823,4.906099,-2.033874,8.520464,5.867868,-0.985209,1.853292,1.000023,-2.860086,-9.174603,4.621830,-5.984878,3.187170,9.025389,4.041363,-7.029012,-9.199033,-3.741943,-5.672449,-0.449443,9.978860,4.023353,-0.952089,-8.795410,-7.440916,7.182660,-4.198774,0.346420,-4.974571,-2.094717,-5.095096,-5.055811,-4.839697,0.560551,-6.297277,-4.862622,-1.172642,-7.519010,-7.113173,-5.998294,0.801519], dtype = "float32")#candidate|10703|(720,)|const|float32
call_10702 = relay.TupleGetItem(func_6252_call(relay.reshape(call_10675.astype('float32'), []), relay.reshape(const_10703.astype('float32'), [720,]), ), 0)
call_10704 = relay.TupleGetItem(func_6256_call(relay.reshape(call_10675.astype('float32'), []), relay.reshape(const_10703.astype('float32'), [720,]), ), 0)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_10720 = relay.TupleGetItem(func_6082_call(), 2)
call_10721 = relay.TupleGetItem(func_6083_call(), 2)
func_6334_call = mod.get_global_var('func_6334')
func_6337_call = mutated_mod.get_global_var('func_6337')
var_10742 = relay.var("var_10742", dtype = "float64", shape = (120,))#candidate|10742|(120,)|var|float64
call_10741 = relay.TupleGetItem(func_6334_call(relay.reshape(var_10742.astype('float64'), [6, 20])), 4)
call_10743 = relay.TupleGetItem(func_6337_call(relay.reshape(var_10742.astype('float64'), [6, 20])), 4)
uop_10780 = relay.log(call_10741.astype('float32')) # shape=(11, 2, 6)
uop_10782 = relay.log(call_10743.astype('float32')) # shape=(11, 2, 6)
output = relay.Tuple([call_10670,call_10675,call_10702,const_10703,call_10720,var_10742,uop_10780,])
output2 = relay.Tuple([call_10671,call_10676,call_10704,const_10703,call_10721,var_10742,uop_10782,])
func_10809 = relay.Function([var_10742,], output)
mod['func_10809'] = func_10809
mod = relay.transform.InferType()(mod)
var_10810 = relay.var("var_10810", dtype = "float64", shape = (120,))#candidate|10810|(120,)|var|float64
output = func_10809(var_10810)
func_10811 = relay.Function([var_10810], output)
mutated_mod['func_10811'] = func_10811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_10832 = relay.TupleGetItem(func_6592_call(), 0)
call_10833 = relay.TupleGetItem(func_6593_call(), 0)
output = call_10832
output2 = call_10833
func_10837 = relay.Function([], output)
mod['func_10837'] = func_10837
mod = relay.transform.InferType()(mod)
mutated_mod['func_10837'] = func_10837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10837_call = mutated_mod.get_global_var('func_10837')
call_10838 = func_10837_call()
output = call_10838
func_10839 = relay.Function([], output)
mutated_mod['func_10839'] = func_10839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9216_call = mod.get_global_var('func_9216')
func_9218_call = mutated_mod.get_global_var('func_9218')
call_10870 = func_9216_call()
call_10871 = func_9216_call()
func_4793_call = mod.get_global_var('func_4793')
func_4796_call = mutated_mod.get_global_var('func_4796')
var_10874 = relay.var("var_10874", dtype = "float64", shape = (1, 468))#candidate|10874|(1, 468)|var|float64
call_10873 = relay.TupleGetItem(func_4793_call(relay.reshape(var_10874.astype('float64'), [12, 13, 3])), 1)
call_10875 = relay.TupleGetItem(func_4796_call(relay.reshape(var_10874.astype('float64'), [12, 13, 3])), 1)
output = relay.Tuple([call_10870,call_10873,var_10874,])
output2 = relay.Tuple([call_10871,call_10875,var_10874,])
func_10876 = relay.Function([var_10874,], output)
mod['func_10876'] = func_10876
mod = relay.transform.InferType()(mod)
mutated_mod['func_10876'] = func_10876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10877 = relay.var("var_10877", dtype = "float64", shape = (1, 468))#candidate|10877|(1, 468)|var|float64
func_10876_call = mutated_mod.get_global_var('func_10876')
call_10878 = func_10876_call(var_10877)
output = call_10878
func_10879 = relay.Function([var_10877], output)
mutated_mod['func_10879'] = func_10879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7226_call = mod.get_global_var('func_7226')
func_7228_call = mutated_mod.get_global_var('func_7228')
call_10893 = relay.TupleGetItem(func_7226_call(), 0)
call_10894 = relay.TupleGetItem(func_7228_call(), 0)
output = relay.Tuple([call_10893,])
output2 = relay.Tuple([call_10894,])
func_10901 = relay.Function([], output)
mod['func_10901'] = func_10901
mod = relay.transform.InferType()(mod)
output = func_10901()
func_10902 = relay.Function([], output)
mutated_mod['func_10902'] = func_10902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10030_call = mod.get_global_var('func_10030')
func_10031_call = mutated_mod.get_global_var('func_10031')
call_10918 = relay.TupleGetItem(func_10030_call(), 1)
call_10919 = relay.TupleGetItem(func_10031_call(), 1)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_10941 = func_8800_call()
call_10942 = func_8800_call()
var_10958 = relay.var("var_10958", dtype = "float32", shape = (11, 2, 6))#candidate|10958|(11, 2, 6)|var|float32
bop_10959 = relay.not_equal(call_10918.astype('bool'), relay.reshape(var_10958.astype('bool'), relay.shape_of(call_10918))) # shape=(11, 2, 6)
bop_10962 = relay.not_equal(call_10919.astype('bool'), relay.reshape(var_10958.astype('bool'), relay.shape_of(call_10919))) # shape=(11, 2, 6)
output = relay.Tuple([call_10941,bop_10959,])
output2 = relay.Tuple([call_10942,bop_10962,])
func_10965 = relay.Function([var_10958,], output)
mod['func_10965'] = func_10965
mod = relay.transform.InferType()(mod)
var_10966 = relay.var("var_10966", dtype = "float32", shape = (11, 2, 6))#candidate|10966|(11, 2, 6)|var|float32
output = func_10965(var_10966)
func_10967 = relay.Function([var_10966], output)
mutated_mod['func_10967'] = func_10967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9703_call = mod.get_global_var('func_9703')
func_9704_call = mutated_mod.get_global_var('func_9704')
call_11021 = func_9703_call()
call_11022 = func_9703_call()
func_3489_call = mod.get_global_var('func_3489')
func_3495_call = mutated_mod.get_global_var('func_3495')
const_11046 = relay.const([[-9.652106,5.268626,-3.443700,-1.330873,9.597410,-8.239681,0.345734,9.635987,3.909664,-7.022344,-6.678714,8.535439,-5.583788,-7.782354,-8.578152,4.392631,-2.689164,-6.420616,6.156478,-8.555268,-2.923123,-4.350931,-2.398645,2.863513,3.116224,-7.989167,9.314466,-4.566237,-4.905256,-0.921953,-6.291174,4.972314,-4.661978,0.878435,0.047320,-4.402749,-1.135602,4.561473,0.932573,-4.940010,-0.716392,-8.785001,-8.060901,9.059390,2.449246,9.076845,5.050754,-6.810894,0.804128,6.449696,0.326795,-2.630466,2.132893,-7.207016,-4.809749],[5.063717,2.084709,-0.320672,-0.328599,1.361612,-9.908622,5.950291,5.852533,6.226895,-3.773449,1.490720,8.612910,5.614566,2.090476,8.556089,8.041128,6.596974,-4.640579,-5.890367,9.432304,-0.073607,2.056966,-1.322712,1.449164,1.557439,-1.151021,4.126202,-7.711969,-6.844426,-2.267766,-7.184083,-0.922489,-3.454065,2.560545,-9.553818,-7.738676,-3.663691,-5.109201,7.689565,5.344971,2.370927,1.444224,4.790949,-8.323664,-6.912913,1.463775,-6.018672,-4.536983,-8.386451,7.553272,-7.621789,6.338996,5.906478,8.567962,4.454594],[1.698063,0.283333,6.314898,7.397666,-4.364370,-8.842414,-8.372935,-8.003602,8.961232,-4.026923,8.625215,1.801516,-2.043979,-1.155286,2.473798,-7.536482,4.550036,2.841843,-1.891133,-1.177996,-8.396770,-3.867210,4.964810,1.426884,7.256288,0.979320,7.806064,8.646572,-0.081091,8.988536,1.114102,-6.237824,1.923150,7.977541,-5.184874,9.868250,-0.306832,8.794143,-7.395664,-3.930666,1.419937,-6.965392,-7.022753,-0.372898,2.087554,-5.118734,6.228611,8.901841,1.550721,-5.708215,-2.481479,-6.763803,2.333595,-3.338508,8.353437],[6.379468,9.638519,6.099201,0.923222,-7.340060,8.521726,2.274982,3.539793,-6.214448,0.129869,4.170651,-1.189302,-8.190359,4.642793,8.346991,4.202129,2.174257,-9.135161,1.041515,-3.492485,-2.670024,-9.456790,-9.019365,0.104071,-0.215767,4.094368,-9.943269,-6.569678,1.060716,-9.987794,-0.160463,7.198086,-0.336087,-6.034876,5.898674,0.822305,-7.974912,6.306530,8.081378,7.693665,6.148384,1.351886,-3.399537,-6.367360,-6.234976,-5.965816,1.753280,-2.775454,3.119244,5.629700,-5.191474,4.759349,-2.095671,0.473600,6.317148],[-3.398689,-3.931868,-7.277214,1.735866,-9.147286,5.764519,-4.048796,0.961290,-8.390568,3.329000,9.645690,-0.555562,-3.914402,-2.962415,6.247256,6.914577,-6.387790,2.836606,-6.828871,-7.042537,-2.293790,-3.333801,-1.903840,-4.978547,-5.385889,-1.594513,1.429634,-7.234140,6.747124,6.509806,-0.759633,-9.418221,-8.655941,-2.199753,-3.284086,-9.716054,-4.777432,1.518455,-7.409288,-2.003476,9.897840,-0.904298,8.597035,3.145511,1.962409,0.231852,8.992124,9.567445,-1.490477,-5.196660,-9.037819,4.341745,8.936497,5.393666,-8.585155],[8.154714,-6.842606,-4.098390,-8.739423,-7.495002,4.290962,-1.640060,-7.128995,-1.804546,5.889812,9.186743,1.246690,-5.159566,-1.906145,-1.193696,6.227564,-7.781799,-9.201463,-0.274636,-1.477692,-9.269367,-6.931379,-5.638425,-3.420793,6.350769,-6.119544,2.406987,-0.118692,-2.958797,1.728939,1.602201,-2.469142,-4.766901,0.466347,-2.939612,-9.499254,1.379951,0.305251,4.844738,-4.125383,6.109700,6.753089,1.251534,-2.149615,-1.353420,-5.519264,9.161978,-8.258041,7.979894,-6.321579,3.798480,8.792978,6.377164,6.349984,-7.439508],[-7.905023,-0.873996,5.254757,8.662301,8.349528,1.185521,5.831787,2.403993,1.405464,1.432740,-8.059920,-6.303413,6.047098,-3.875485,-7.985925,4.443077,-4.212496,-6.649908,5.726552,0.057478,-1.678070,-3.230204,9.135396,1.625829,2.168440,-7.467652,7.311403,5.178252,3.434611,1.431635,-3.712255,-2.880003,-0.637979,-1.126687,-6.233096,6.355874,6.585968,-9.271889,2.113002,7.826758,0.081524,-9.625164,-3.662729,1.619684,4.942330,2.303926,8.533651,-2.910817,-1.917399,9.869877,-8.588674,6.306567,5.188442,1.445898,5.316142],[2.645053,-2.856162,-7.515044,8.508769,-7.842171,-8.757290,-6.168897,0.923471,-8.351413,-9.577351,-0.046613,-9.829057,-5.747691,-6.871803,-9.225273,-9.580553,-5.774416,7.794380,0.201563,-7.302455,9.775037,9.648533,8.949770,-7.203213,-2.983204,4.107588,9.088950,6.353195,3.651486,0.813823,4.774036,9.127375,3.954607,-4.386075,4.493052,-1.187101,-2.639270,3.172284,6.645034,1.609956,-1.848295,-5.750786,-4.254354,8.601330,2.055713,3.007858,-6.666498,-8.741060,7.060980,-3.676911,-8.092892,0.123773,-1.167595,-4.176282,-8.055030],[1.669507,-2.699126,-7.754493,5.217761,2.534818,9.892724,-2.938143,5.164373,5.457108,6.091008,-9.093088,-5.144767,-4.762701,-2.168750,-4.270012,-6.366880,5.464914,-4.576811,8.369644,3.848435,-1.776473,9.831966,-8.252879,-5.100725,0.904470,4.661635,2.230270,9.648758,-3.449537,-1.271638,-2.046738,-3.627126,9.299806,-6.440117,8.433936,4.114187,-3.063093,-2.036329,-8.992289,-5.214671,-9.456556,9.007559,6.308953,-3.235093,-8.455214,7.538057,9.354703,-9.377381,-7.802853,-8.682228,-3.728713,9.201417,-1.391927,1.110056,-2.306294],[8.850771,2.052928,-4.032301,7.295377,-3.731736,3.780313,0.658253,5.511216,-7.135718,-9.250194,9.524235,-4.774720,7.151491,-4.733124,3.413815,-6.403320,-6.682710,7.354912,-5.370536,5.584900,-8.111579,-5.163530,6.433678,9.682281,1.912532,-7.050500,-7.546127,-1.502708,-5.262037,-3.970745,5.510222,-3.577832,-0.059049,7.968251,-9.066113,9.345374,8.347662,-8.480957,-3.985026,-8.442556,8.564394,-9.512966,-3.217154,2.139793,-5.290901,-7.629495,-2.338144,5.636250,7.109841,-8.793136,1.305241,-6.224205,0.553700,0.049842,3.631993],[-2.429700,7.767255,-1.143409,2.866184,-9.721869,-4.603991,2.614712,7.633824,2.183858,1.125522,-5.279719,-4.376813,-2.679368,-6.608587,8.459169,2.059958,-4.635265,-0.546212,-4.953061,6.882416,6.005441,-9.027629,-0.084811,1.193351,-6.198012,1.095815,8.772742,7.298986,-8.890019,-3.202301,9.607184,6.593160,-2.851024,6.185489,8.639351,8.237815,-9.441293,7.918221,9.377082,-0.554751,-2.601836,-7.092521,6.268471,6.515433,4.939865,7.542407,4.637788,2.282624,5.232769,2.569639,1.387704,6.407941,-5.971851,-1.369668,-3.035131],[5.727659,0.722522,-7.580604,9.617953,-9.773736,9.783694,-1.449421,-4.396110,-3.291488,-3.174308,-4.937882,-6.187438,6.902588,-9.774169,-6.910375,-6.637119,1.463843,-1.996106,5.718392,1.000884,-8.688747,1.209685,-2.153095,-4.776403,3.623364,-2.492652,-1.998342,-5.888074,6.632625,-8.436031,6.065918,5.642306,-9.187912,-6.668084,9.978213,8.304347,6.346637,-6.577337,-8.069978,-3.962856,6.646713,8.524496,-5.385881,7.799904,-6.539501,3.962281,2.602540,1.661682,-6.319012,1.804882,9.649494,-8.467340,4.148083,-3.881201,7.247536],[-3.013351,1.511459,4.182396,5.327127,4.397399,-0.156157,3.785503,9.414962,7.215774,-0.271647,-1.971120,3.151140,-6.106798,1.891705,-4.731470,-7.566697,-0.728722,-8.367888,9.617180,-0.809621,5.115745,4.621587,-9.304551,2.377811,1.919592,-6.289575,-7.449624,-9.057927,2.298032,0.420805,-2.056801,-8.244994,-9.205328,-6.752263,-1.716020,-0.645153,7.262238,-8.912156,0.891239,7.410463,2.207591,-8.565656,0.051028,4.987917,-8.504694,-4.984683,-7.867701,7.337164,3.566482,-5.485288,3.750288,-8.923049,-9.744697,-3.876930,-1.450807]], dtype = "float32")#candidate|11046|(13, 55)|const|float32
var_11047 = relay.var("var_11047", dtype = "int8", shape = (1792,))#candidate|11047|(1792,)|var|int8
const_11048 = relay.const(-6.478457, dtype = "float32")#candidate|11048|()|const|float32
call_11045 = relay.TupleGetItem(func_3489_call(relay.reshape(const_11046.astype('float32'), [11, 13, 5]), relay.reshape(const_11046.astype('float32'), [11, 13, 5]), relay.reshape(var_11047.astype('int8'), [1792,]), relay.reshape(const_11048.astype('float32'), []), ), 0)
call_11049 = relay.TupleGetItem(func_3495_call(relay.reshape(const_11046.astype('float32'), [11, 13, 5]), relay.reshape(const_11046.astype('float32'), [11, 13, 5]), relay.reshape(var_11047.astype('int8'), [1792,]), relay.reshape(const_11048.astype('float32'), []), ), 0)
output = relay.Tuple([call_11021,call_11045,const_11046,var_11047,const_11048,])
output2 = relay.Tuple([call_11022,call_11049,const_11046,var_11047,const_11048,])
func_11050 = relay.Function([var_11047,], output)
mod['func_11050'] = func_11050
mod = relay.transform.InferType()(mod)
mutated_mod['func_11050'] = func_11050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11051 = relay.var("var_11051", dtype = "int8", shape = (1792,))#candidate|11051|(1792,)|var|int8
func_11050_call = mutated_mod.get_global_var('func_11050')
call_11052 = func_11050_call(var_11051)
output = call_11052
func_11053 = relay.Function([var_11051], output)
mutated_mod['func_11053'] = func_11053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_11065 = func_5708_call()
call_11066 = func_5708_call()
output = relay.Tuple([call_11065,])
output2 = relay.Tuple([call_11066,])
func_11067 = relay.Function([], output)
mod['func_11067'] = func_11067
mod = relay.transform.InferType()(mod)
mutated_mod['func_11067'] = func_11067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11067_call = mutated_mod.get_global_var('func_11067')
call_11068 = func_11067_call()
output = call_11068
func_11069 = relay.Function([], output)
mutated_mod['func_11069'] = func_11069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_11093 = relay.TupleGetItem(func_7786_call(), 0)
call_11094 = relay.TupleGetItem(func_7788_call(), 0)
output = call_11093
output2 = call_11094
func_11123 = relay.Function([], output)
mod['func_11123'] = func_11123
mod = relay.transform.InferType()(mod)
output = func_11123()
func_11124 = relay.Function([], output)
mutated_mod['func_11124'] = func_11124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10625_call = mod.get_global_var('func_10625')
func_10627_call = mutated_mod.get_global_var('func_10627')
call_11135 = func_10625_call()
call_11136 = func_10625_call()
output = relay.Tuple([call_11135,])
output2 = relay.Tuple([call_11136,])
func_11144 = relay.Function([], output)
mod['func_11144'] = func_11144
mod = relay.transform.InferType()(mod)
output = func_11144()
func_11145 = relay.Function([], output)
mutated_mod['func_11145'] = func_11145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10625_call = mod.get_global_var('func_10625')
func_10627_call = mutated_mod.get_global_var('func_10627')
call_11192 = func_10625_call()
call_11193 = func_10625_call()
func_10206_call = mod.get_global_var('func_10206')
func_10207_call = mutated_mod.get_global_var('func_10207')
call_11217 = func_10206_call()
call_11218 = func_10206_call()
func_9312_call = mod.get_global_var('func_9312')
func_9313_call = mutated_mod.get_global_var('func_9313')
call_11225 = func_9312_call()
call_11226 = func_9312_call()
uop_11237 = relay.erf(call_11192.astype('float32')) # shape=(3, 13, 15)
uop_11239 = relay.erf(call_11193.astype('float32')) # shape=(3, 13, 15)
func_8950_call = mod.get_global_var('func_8950')
func_8951_call = mutated_mod.get_global_var('func_8951')
call_11241 = relay.TupleGetItem(func_8950_call(), 0)
call_11242 = relay.TupleGetItem(func_8951_call(), 0)
output = relay.Tuple([call_11217,call_11225,uop_11237,call_11241,])
output2 = relay.Tuple([call_11218,call_11226,uop_11239,call_11242,])
func_11250 = relay.Function([], output)
mod['func_11250'] = func_11250
mod = relay.transform.InferType()(mod)
output = func_11250()
func_11251 = relay.Function([], output)
mutated_mod['func_11251'] = func_11251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6200_call = mod.get_global_var('func_6200')
func_6201_call = mutated_mod.get_global_var('func_6201')
call_11267 = relay.TupleGetItem(func_6200_call(), 1)
call_11268 = relay.TupleGetItem(func_6201_call(), 1)
func_10373_call = mod.get_global_var('func_10373')
func_10375_call = mutated_mod.get_global_var('func_10375')
call_11269 = func_10373_call()
call_11270 = func_10373_call()
output = relay.Tuple([call_11267,call_11269,])
output2 = relay.Tuple([call_11268,call_11270,])
func_11277 = relay.Function([], output)
mod['func_11277'] = func_11277
mod = relay.transform.InferType()(mod)
output = func_11277()
func_11278 = relay.Function([], output)
mutated_mod['func_11278'] = func_11278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_11281 = relay.TupleGetItem(func_6421_call(), 1)
call_11282 = relay.TupleGetItem(func_6423_call(), 1)
func_8608_call = mod.get_global_var('func_8608')
func_8612_call = mutated_mod.get_global_var('func_8612')
const_11288 = relay.const([True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True], dtype = "bool")#candidate|11288|(1470,)|const|bool
const_11289 = relay.const([-7.768900,-9.616718,2.323601,-0.980984,-4.299023,5.075213,-2.700575,-2.727583,-7.394846,-3.939668,3.202104,-6.058486,7.112071,-2.621006,2.312034,6.793898,-5.952328,-0.807351,-7.946413,7.255178,-6.076982,-9.580401,-1.889923,9.223625,-8.420609,-8.406238,3.190535,-3.628345,8.034330,4.001779,-4.291706,8.636425,-2.620258,-1.476366,-0.188567,-3.625203,-0.615445,0.073270,1.185685,-9.015571,-1.745895,7.417462,8.757893,4.650497,-1.928381,0.871897,8.535522,-3.709556,-3.724668,-5.406889,-3.293971,4.099350,3.995131,-1.611928,8.060925,-3.970029,9.449827,-5.882055,-6.093801,6.346549,-9.892031,3.985523,5.202712,-9.415867,2.364400,-4.169402,9.085302,-9.463256,-4.710832,4.995992,2.437902,-9.239723,8.997705,1.241899,-7.296055,7.593354,-4.900751,-2.306845,-0.708950,8.337725,0.960487,6.044057,-2.412340,-4.940668,-4.735468,-8.475725,9.073271,-5.196899,4.604724,-8.538792,6.072244,2.682170,6.302597,2.326303,-5.176492,6.891770,0.001301,-1.142062,-0.650322,-2.234311,-4.449457,8.479196,4.909349,-0.540143,0.160617,-7.443380,-6.287752,-4.574719,8.748263,9.810140,5.649653,-8.926991,-8.245596,-7.714574,3.994799,1.268463,5.512472,5.524072,6.318662,-2.014197,2.261191,4.316116,-3.397876,0.164177,0.724599,0.436146,8.203164,5.821725,-4.248272,-6.319161,9.849389,6.471906,-0.421502,1.540613,-0.828371,8.287016,2.284105,-6.453868,-7.218578,5.497305,-5.407082,-6.943337,-2.818422,5.506953,2.295378,-7.174642,-5.932364,-6.653229,3.194833,-9.992908,9.478608,0.219516,-0.166772,-8.251467,0.834752,-2.604151,-6.992578,5.124469,6.069510,3.303270,-1.585225,3.466263,1.444446,-3.022972,9.186972,-8.578254,-1.493942,8.012052,1.581884,3.863407,-1.154836,3.717820,5.650210,0.399957,7.892496,3.089506,2.074160,-1.138167,-1.274383,8.145607,7.963882,-8.269157,5.743493,-8.875625,4.538381,7.863065,-3.117260,-5.871262,0.675168,-0.614860,-5.572950,-9.651037,-9.174191,-7.517960,4.288867,-6.737621,-4.921639,-7.625994,6.210683,-9.741613,3.807650,-1.032125,-2.703876,2.003608,-6.743478,9.499406,9.644044,-2.754683,-3.569933,3.989491,-6.175087,0.463709,-4.562839,-0.191409,-5.786390,4.061697,-0.790391,4.380574,-2.350479,-2.606222,-4.646851,-0.463651,-3.377131,3.773356,1.533943,-4.105728,9.806051,-0.350469,-8.477230,1.419024,-0.520161,-7.634023,-6.433687,7.174703,-6.410262,4.675045,4.827188,-8.378631,9.969635,8.784092,-0.177571,-9.280476,5.164214,-6.615756,-1.581404,-7.413960,-7.005775,7.567294,3.272220,5.973451,1.174656,-8.090212,-2.520528,-4.924101,0.513197,5.803513,1.109647,3.296509,-7.687057,-7.620930,1.030271,1.997164,2.257717,-5.658670,-5.569320,-6.428626,-8.211057,-3.257898,-5.441948,-3.359080,-2.210347,7.194802,-7.566396,-2.470571,-4.658675,5.561575,-8.607496,3.606540,9.152037,-7.443465,-8.604937,6.802199,0.442727,3.819720,-7.161610,2.391403,8.262239,1.882441,8.777776,0.766086,-1.397548,9.597859,6.784393,5.154199,-5.195859,-0.899124,-9.591445,-2.027062,-6.246406,5.729867,0.986952,0.144403,-2.425860,-3.827702,5.730016,9.120913,-9.159408,-4.524668,-7.587080,5.551205,8.810055,5.097831,1.229386,5.601801,5.300894,6.451203,-0.896861,-7.413638,6.614774,-6.412229,-9.057229,-5.240403,2.670399,-6.440764,-0.283224,-4.936053,-1.022525,-8.913755,7.494332,1.837361,-6.025632,-1.553325,7.253283,2.051105,2.918477,9.907901,-4.119323,4.567477,-6.644485,4.676625,5.102820,-3.650318,2.237428,7.415474,2.280092,4.773924,8.035646,-6.174685,-6.186502,3.896138,5.731500,0.409753,5.547802,3.948488,8.158462,-8.333183,5.907701,-3.295237,3.905492,0.561140,-1.755349,7.213655,-1.978958,-1.731931,7.479873,2.846368,3.585839,-9.711456,4.675670,-2.947376,-2.697790,9.603175,-3.720263,-2.588620,0.294726,-7.334335,6.770280,-9.609595,2.641558,-0.996235,-0.548837,5.862382,4.814355,-0.037703,-6.646094,5.590828,-6.008280,-5.787249,-0.113820,-7.000478,-3.675036,1.113130,-1.025967,-7.322823,-3.707715,6.859867,-4.978582,-9.087503,-2.957256,-7.398812,-3.048578,-7.748361,-3.651068,9.973772,2.945320,-5.280225,-3.593906,1.602157,6.900315,-8.943802,5.688264,8.395388,-5.728783,8.722820,-1.409722,0.878594,8.002507,6.004754,-5.605571,-8.688003,4.710977,-4.452040,-3.662554,-9.778002,0.660455,1.863314,-4.302798,-9.982294,4.437350,-8.309149,7.170679,-1.163137,8.596764,-4.839392,-9.907549,5.944690,7.845943,2.900646,-3.760816,-5.223739,-5.671645,-1.065607,-5.699267,8.851066,-0.934857,5.319710,-4.829060,-8.913951,-5.141695,3.353251,1.612121,-6.262271,-2.026349,-3.624688,9.771148,-6.419593,-5.122596,9.565903,4.473950,-1.330983,-0.535924,9.059741,9.336563,-2.288611,-0.599400,-6.721789,-1.712447,1.234266,-5.005399,0.575975,-7.119058,4.888819,-4.935325,8.495723,-0.625233,2.660528,5.652662,2.054431,-8.209846,-4.377799,0.542681,-5.797375,6.033349,5.070431,7.348303,-6.801388,-2.193975,9.917652,-1.240655,5.679302,-4.652833,9.585970,4.244157,1.020847,-2.193818,5.157398,-4.735186,1.960358,4.265713,-4.617962,-3.232165,-3.958639,-5.224643,4.105077,-4.063200,9.636754,-4.584168,-0.305184,1.155321,6.375185,-0.355322,-6.790618,9.768810,-3.757047,-9.826362,1.573544,9.414160,0.896773,1.235567,-0.908424,7.239160,5.711378,-5.897976,-1.930518,7.005069,1.388990,-6.385082,-3.194071,-1.458615,-3.449906,0.532911,0.550528,9.832401,4.133488,4.867629,-0.007136,4.420716,-4.885004,4.625860,-8.115218,8.387763,-1.520927,5.431570,1.580033,-7.288312,-2.961347,1.296017,-8.071755,-4.801331,-4.473848,-1.494187,3.111791,-9.103686,4.745485,-0.280911,-0.078823,-8.088361,6.932324,5.935297,2.708509,-5.681114,-6.379713,5.195375,-1.263971,-8.149610,7.011346,4.337215,-8.212646,0.987076,8.832326,3.074365,8.397910,8.021170,8.198109,3.922656,-8.946545,-6.293801,8.339181,7.784656,-3.998045,-1.682969,-8.588450,-5.415745,8.519505,4.537213,6.943188,-5.720504,-3.300271,4.068456,8.361764,-1.694831,-2.590595,-7.989349,-7.864412,7.253246,5.307649,-1.987273,2.367574,-9.383024,-2.043065,2.055617,5.639747,-6.376702,7.970871,7.083337,-4.983078,-5.945368,9.744456,6.270250,7.762949,-1.542563,-4.010782,-8.299707,9.170936,1.719695,-6.555657,2.516794,-8.135626,0.855988,8.104353,-6.901705,-6.900482,-1.279286,3.127466,4.590853,-0.441906,5.346615,7.481760,-1.627655,1.230769,-2.643157,-0.863056,5.345154,-7.663631,7.974140,9.372384,1.852899,-8.068932,1.560269,6.511042,-0.393709,-9.769704,0.293952,-8.964398,-1.327257,9.576811,4.339377,-3.913054,-0.550265,-1.140304,-0.899433,-3.278801,9.843588,8.540360,-9.421059,-9.818954,-9.953433,6.600675,-5.206912,1.823931,5.671591,8.528677,6.362008,0.405056,-1.779459,3.068844,9.290965,6.805011,-9.165340,-9.478397,2.147405,-5.914135,0.015048,3.222389,5.892516,6.830505,9.858255,0.838433,-2.181541,1.284641,-9.248102,-6.112540,-4.245106,0.389158,-2.285451,5.666766,-3.162186,-2.738670,8.410826,5.692484,-6.297018,7.984443,3.800935,-8.344669,6.255076,7.682775,-2.831270,-4.075147,9.591730,-1.145488,4.658931,0.662906,7.152538,5.369204,-5.356362,6.845101,4.306165,-6.012435,8.028320,0.560839,-6.497971,6.679801,-0.563971,6.367907,6.975821,7.051348,-3.152503,-1.454005,-8.096743,-7.067191], dtype = "float32")#candidate|11289|(720,)|const|float32
call_11287 = relay.TupleGetItem(func_8608_call(relay.reshape(const_11288.astype('bool'), [1470,]), relay.reshape(const_11289.astype('float32'), [60, 12]), ), 3)
call_11290 = relay.TupleGetItem(func_8612_call(relay.reshape(const_11288.astype('bool'), [1470,]), relay.reshape(const_11289.astype('float32'), [60, 12]), ), 3)
output = relay.Tuple([call_11281,call_11287,const_11288,const_11289,])
output2 = relay.Tuple([call_11282,call_11290,const_11288,const_11289,])
func_11311 = relay.Function([], output)
mod['func_11311'] = func_11311
mod = relay.transform.InferType()(mod)
output = func_11311()
func_11312 = relay.Function([], output)
mutated_mod['func_11312'] = func_11312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_11387 = relay.TupleGetItem(func_6592_call(), 0)
call_11388 = relay.TupleGetItem(func_6593_call(), 0)
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
var_11390 = relay.var("var_11390", dtype = "float64", shape = (120,))#candidate|11390|(120,)|var|float64
call_11389 = relay.TupleGetItem(func_5610_call(relay.reshape(var_11390.astype('float64'), [120,])), 2)
call_11391 = relay.TupleGetItem(func_5612_call(relay.reshape(var_11390.astype('float64'), [120,])), 2)
func_8477_call = mod.get_global_var('func_8477')
func_8479_call = mutated_mod.get_global_var('func_8479')
const_11393 = relay.const([-4.452749,8.915409,-7.647740,2.616576,8.048426,-1.257050,8.936236,-9.525824,-3.576856,-1.976492,-5.371145,2.833792,-0.039461,4.010329,-7.802090,-4.204005,8.710708,3.158517,0.973132,7.655749,-4.455971,4.688283,-6.305405,-0.808775,-0.800536,1.665961,-7.704464,-4.315682,-3.128931,-2.049703,1.404655,5.399547,-6.524401,-4.097270,-5.211848,-3.719105,-1.171090,-6.313749,-3.946832,7.431275,8.499958,0.812062,8.672565,-0.215903,7.102768,-1.504840,6.674279,9.315044,1.000757,9.334322,-1.570413,-5.768241,0.125630,8.748963,0.765821,3.975062,1.905052,-0.873060,-8.336890,4.327862,6.308966,-9.112567,6.153524,-4.150856,-3.101723,-6.584654,-8.999152,2.313015,-6.366066,5.892423,6.551091,-5.907463,1.319644,6.114653,-1.571238,4.228436,2.859596,-6.168999,-5.493019,6.577083,7.456402,6.682131,-2.235605,8.955454,0.485082,-4.117549,9.835247,5.271214,0.772460,4.803231,6.065981,2.036706,-0.534021,-0.080854,-0.495010,1.143298,7.223727,2.940901,2.959826,-0.678817,8.985952,2.974207,-2.352862,0.869264,-7.936787,9.425283,-1.816908,-0.321066,-1.203970,5.241107,-2.408571,-3.199957,3.629513,9.404040,6.178446,5.792611,-0.379771,8.495045,5.897977,-2.372055,9.909996,-9.695643,-6.716791,1.203414,4.547338,4.679468,9.524595,4.188638,-5.450754,-0.778516,5.141696,-3.850875,-4.987030,-5.613310,4.824409,7.073564,-3.637706,-4.010771,-2.208505,3.334422,-9.658057,8.986359,3.270322,-5.443453,3.259476,4.937113,-5.317631,-0.151021,7.574671,-8.720586,5.721711,-7.164071,5.726489,-5.435089,-9.535579,5.263260,7.805574,-5.271297,-0.288617,-8.470433,4.333484,-3.070305,9.500781,0.814100,1.592250,7.760919,0.294997,-6.822059,-2.671497,6.612630,-1.131606,4.151812,7.062336,-8.126827,-2.540703,-4.310332,-0.808588,6.665441,7.839714,1.553752,9.559633,-9.617278,-3.196733,4.917468,9.192639,6.732969,-3.902603,2.242569,-4.890096,2.659266,-8.308013,6.622478,-6.505025,8.336474,7.258678,-4.991458,8.701923,6.196734,7.609892,5.840318,1.785266,-6.745064,0.399018,-8.442921,-2.987115,5.636375,4.914456,8.839154,4.928341,6.014100,3.004172,7.112441,-9.471323,-9.203392,-1.801769,6.873142,-2.989309,2.476310,9.258873,-5.758676,7.508103,2.393248,-6.249971,-2.365477,6.032382,-4.113705,2.205854,7.617996,-0.957753,5.305284,8.431559,2.290917,-5.875405,-0.687519,-1.480067,1.864113,-9.645103,-8.509562,-3.793160,-2.505831,-7.341977,-8.397170,4.023265,-1.207811,-6.543401,-2.005250,-7.241396,3.690836,-0.025182,-5.720189,-4.231874,-4.280921,-0.823313,0.846919,0.423345,-6.329308,-8.892680,8.220689,1.715307,-6.793102,3.270146,1.183686,-8.898352,-2.477353,-2.664110,7.036465,4.205334,6.130239,-8.777034,-3.678427,9.896148,8.106030,4.913997,6.789956,-3.738572,-2.604659,-9.131463,2.642924,8.588494,9.387556,0.782155,-1.554068,-6.958161,-1.268250,2.574048,-4.086411,-0.761804,-9.787042,-6.571883,-1.200037,3.862456,-1.736416,-2.055514,-3.529503,0.823638,-8.581947,-6.728780,6.954692,-0.391010,7.994568,-6.357234,-2.088090,-3.950599,5.764787,-8.092884,0.622022,-3.493891,7.389906,-6.457442,-4.603984,5.173912,-9.340610,-5.425081,-0.241762,5.873740,-8.377446,8.997353,-8.581829,9.431139,-0.630023,3.963020,-7.857386,7.420033,3.008242,9.616292,-6.161812,-9.331568,3.102836,-9.606650,0.370676,4.202117,-1.603638,0.954886,-4.646496,-3.535566,-3.882561,0.917834,4.610548,3.003615,-7.317903,7.751388,7.240635,4.139752,-1.427100,2.326746,4.657680,6.231984,0.994972,3.757036,2.624148,4.726559,1.450342,-5.986206,7.063556,7.957112,2.772491,-1.372713,-9.589960,6.451144,-3.855907,1.457690,2.800118,6.472609,9.512738,0.318403,-2.645517,-5.310067,8.447829,-9.999248,-6.178209,-4.953066,-9.063017,6.640891,-0.128237,2.160120,5.448612,-5.507762,7.692232,5.816836,-4.150518,-7.511200,9.322603,8.704453,1.808412,-9.042034,0.694520,5.666644,9.292919,3.011849,8.470507,-6.221224,1.616393,-2.512767,-7.537960,9.912249,-0.467652,5.432811,-3.094900,-5.168848,2.026880,-3.910364,8.765135,-4.842413,-1.212003,-4.774734,4.076972,-1.383846,9.423847,6.790241,-7.249604,2.506009,-8.377068,5.052131,6.064181,6.669743,-0.433235,1.447832,6.455049,-9.754627,3.125842,-0.289299,-3.340200,4.444139,7.804429,7.777098,4.534970,-2.373950,-3.586133,5.651270,9.211832,-5.322372,-4.612674,5.754760,4.748814,1.751693,-5.570111,2.953474,-9.679447,-1.379501,-8.594236,4.339374,-4.800627,2.568598,7.805384,-5.215449,5.768015,-5.011881,4.866905,-9.205899,-7.136513,9.724291,4.100447,0.834878,-6.722205,1.942609,9.167019,-5.180562,-0.853117,-3.154118,-1.545549,-5.971467,6.412274,1.111637,-9.580658,-7.548703,0.976611,8.508157,-1.086315,-4.137936,-4.530928,1.918581,0.371773,-3.540067,-6.018736,0.378746,8.943600,-3.846330,1.110681,7.462217,3.570543,-1.170243,-7.013709,0.737896,-4.752083,9.542213,8.095977,-8.661968,-8.372298,-8.002350,-7.302284,-9.626874,0.952865,-7.607608,-2.153134,-8.848695,5.993559,8.813856,-4.972647,6.850638,-5.214123,-1.854438,6.061810,-8.276682,1.612999,-4.182908,3.358890,9.926434,-8.668544,4.967377,-1.907145,-0.347858,-6.386374,0.304903,3.228197,2.691726,2.238893,4.916356,-1.398072,-6.624743,1.268500,8.262413,3.762099,9.625588,3.256146,8.426264,5.476360,0.638541,0.031307,-2.189879,7.923424,-4.986522,8.796918,-7.546458,-9.881552,2.629947,6.256674,-2.618388,-3.844739,-8.914059,-9.841482,1.161899,-7.149477,9.707169,6.949768,-8.160730,6.707466,8.109013,-6.144640,-7.602338,-1.529475,-5.090028,8.343051,7.844413,4.068187,7.673884,2.543104,9.434947,9.107006,0.290616,-9.226346,-4.963803,-9.540113,7.782449,3.788124,6.847409,8.600745,9.686377,-5.759658,-4.459331,1.072960,5.388230,-3.214947,-6.634358,8.847948,-3.945825,8.793634,7.806420,-6.791161,-6.589982,0.634634,-4.437434,-3.679666,2.611463,-9.547625,-8.127606,3.817952,-1.254936,-2.486728,0.905461,-7.995963,9.430926,-8.995735,6.886617,8.881540,-4.773050,-7.215048,-2.854921,4.040660,7.574714,3.052841,6.813222,-5.817674,4.821155,-4.701040,-7.513406,-2.103928,-7.392538,8.146554,-1.960655,1.599385,9.257993,9.807261,-2.505376,1.255036,-5.000376,7.106073,3.133211,0.143494,-1.331829,9.547735,-2.442738,8.420448,2.299077,-9.723365,3.122231,-9.905144,9.197093,-3.385958,-7.929163,-5.387750,0.577154,-0.420893,4.273418,9.692472,5.151745,-4.565880,-0.525818,-0.044089,-9.240786,1.768182,5.320582,-4.334746,7.663024,-8.487612,-3.238977,-5.164258,7.940483,-2.269703,-9.113514,-7.768800,3.367048,1.858723,-2.809651,8.622104,7.604026,8.784158,-0.783472,9.962451,-3.378691,-6.021241,-4.006115,-7.604437,7.397323,-8.764082,-5.574223,-6.182625,-5.259594,-0.697699,4.962738,2.968040,-4.335453,6.438990,9.134431,0.231802,0.334186,-7.413192,-4.922253,9.719300,-7.635485,-8.922073,-2.637095,-1.643906,-5.508300,-7.958319,-1.520421,-1.052430,-2.122055,6.222458,7.997844,5.668975,-8.428034,-5.753824,0.625940,3.954627,-7.375686,-1.782454,-7.221117,6.585370,2.208687,-8.759182,7.993191,6.516562,1.060747,1.558544,3.171158,7.866143,9.036934,-2.365301,4.396119,-1.261507,1.310950,-2.141207,6.078776,6.344802,1.578731,-3.140494,-1.330592,-4.384424,-2.729577,-1.143486,0.511805,-7.839596,-4.820749,3.764158,-2.252924,9.910952,-5.055868,0.700133,9.397336,2.332252,-9.096624,4.972193,2.280265,-4.015367,-7.752740,7.781487,-4.389207,-5.511614,-2.008632,-3.544834,7.324607,7.897786,-0.850557,8.476880,2.234519,-8.368329,-3.693086,-9.295104,-2.875396,4.797202,-8.943291,-3.887297,-6.804846,4.388961,-3.618027,0.897455,6.716021,3.195719,4.513768,5.081389,8.296630,3.380329,5.358484,2.567554,-4.782804,-9.492341,7.303921,-5.291551,5.826785,8.205527,4.394243,0.782763,3.007991,-0.707003,8.800857,0.611340,-5.929643,-6.386928,-5.167999,1.276571,0.625512,3.636636,-6.917214,-0.169313,1.221015,5.205732,9.243670,6.816781,3.039601,2.310525,9.404118,-9.158461,4.020974,-0.534579,-6.731544,1.266129,5.253764,8.618194,-9.560962,-9.533849,7.694129,-2.229755,-0.118569,5.453813,-0.917800,0.136752,2.950731,3.994093,-1.805070,-0.104423,0.861582,-6.861302,7.851061,-2.872498,-8.541634,7.970361,-3.821487,-3.505589,-9.476241,-8.415158,-3.156699,-2.683981,8.413353,6.331117,0.153076,1.147464,8.043493,-0.860416,1.273177,-9.830598,6.941644,2.701526,9.932917,-0.216919,1.606310,-9.460953,-1.268919,6.657509,-0.382070,-7.618527,-9.348470,-6.374364,8.767561,-2.279068,1.392228,-7.419958,7.739268,-5.367215,0.239903,-8.564218,-7.135324,2.664175,8.291127,-5.562497,2.172127,-2.825562,-4.615092,1.264709,7.644728,-0.163547,-6.368295,9.198195,-7.019963,-5.719410,-8.171914,-0.647136,-7.742220,-5.655761,-5.752174,6.419619,5.004891,-5.830800,3.055487,2.892835,2.538859,4.793313,3.345905,8.015404,2.681440,1.766860,-2.150279,-0.966801,4.757892,1.955957,3.251801,7.189310,-1.476503,3.186656,5.254850,-3.598739,-6.813546,-3.366291,-2.683256,-2.675927,-9.207257,2.083194,7.109171,0.383688,-5.727016,6.394900,9.080606,-4.403615,-8.474011,7.325660,7.370585,-2.922759,-3.781262,6.137368,2.399596,-0.296942,0.437758,-9.558894,7.383495,-9.110241,-3.318500,5.350114,-5.246604,1.265418,3.903849,7.728550,-3.822125,2.153878,-6.354644,6.113538,-0.145004,6.502189,-7.007130,-1.301192,7.501871,7.785482,-0.169645,-0.851885,2.805722,3.038554,-0.007230,3.235107,1.701154,0.709606,0.922326,4.850956,-1.297526,6.473129,-6.963315,-3.940680,-0.448772,-5.358836,5.567908,-7.012692,-9.778553,7.758995,-1.318560,-1.981118,0.642004,8.577633,-8.772489,-6.708352,-2.599662,5.614310,-6.507817,-5.569082,-9.222975,9.974579,6.394838,-0.061762,-9.094612,8.957470,-8.039560,-6.386237,3.492795,-1.149178,-1.360361,7.725228,-2.298948,6.967156,-7.330991,-0.587150,-8.008008,-5.956179,4.069251,-3.327392,8.203079,-6.091399,6.982754,4.778442,-7.867023,-2.284945,4.430158,4.147052,9.534067,-5.489881,4.016978,-5.986755,-0.538694,0.208628,1.498370,6.329890,1.859647,-5.118169,-5.338782,-0.588855,3.597326,0.311827,-4.751790,-6.854968,-9.726104,9.309162,7.773894,1.704417,7.106321,7.124685,-8.014281,6.383228,-8.009747,-8.019903,8.079302,-4.173106,-8.165173,8.762640,-6.325821,-3.572163,-5.666021,-1.639948,3.295249,-8.163834,1.076084,1.672366,-3.001470,2.048006,-7.135895,-5.429493,-7.123945,-4.500468,-5.037225,8.733174,6.297073,6.901684,-5.778491,-9.243933,-3.246887,-5.564749,-9.644867,2.082618,-4.272534,-0.362522,4.364739,-1.806078,0.197015,-3.991525,5.136145,-0.654365,6.452324,-8.346431,-1.766577,5.975949,9.273942,-4.941978,6.792694,4.710196,-8.501693,-2.647431,-3.896903,-4.525594,4.567816,4.723525,-2.718736,7.766709,-1.373220,8.353385,-9.779362,6.795240,-9.479251,-8.592981,2.852003,8.049319,7.774518,4.928139,2.730076,8.244427,-0.276053,7.563681,-7.793166,-0.841750,-4.760298,6.950458,-8.931934,0.453167,-8.474476,-4.448560,2.777154,-7.172193,7.348346,-5.668552,4.072099,4.051291,-3.626885,-4.439355,-3.592637,0.625904,2.525429,8.264178,7.444990,-2.000390,-0.317181,-9.970890,8.522203,-9.843731,-2.764654,6.096623,-4.959062,-0.320724,2.869544,-1.744302,9.922921,-4.159520,-2.680088,3.222866,-9.426173,-5.309444,-3.627040,-4.519269,9.955520,3.260971,6.200234,8.746677,3.168297,1.273077,-9.441286,-3.013196,9.231461,-5.756724,1.887813,-2.826189,-4.010829,-7.706938,4.060414,-2.998512,-6.501597,-1.513546,-4.743397,9.235504,6.939637,-6.306328,-1.409224,-7.444116,0.647690,-1.891431,-7.499885,3.645840,2.671871,2.624530,-7.726555,6.371280,2.632360,0.945961,5.616582,-5.964376,9.282254,-1.935610,4.378076,6.008278,-4.877224,3.257600,-8.631072,3.209778,8.623021,-6.563474,-6.756861,-3.079120,-3.098436,1.552571,-0.964267,-6.987464,-6.757365,-4.391289,8.111452,-9.754145,7.141238,-9.825637,-2.837829,1.076425,3.899220,-7.611463,8.543743,3.032274,-1.909209,9.776415,-6.438110,-2.606856,-5.270145,1.818905,-9.271471,8.379914,8.818411,-0.871465,0.356822,6.915597,3.975757,-1.793338,-1.820704,-2.338657,-4.044152,-2.374810,-7.271903,2.291483,3.664559,-7.827652,2.155062,3.042832,-5.637440,-1.854748,3.827835,-7.894854,3.014255,3.364921,-7.247580,-4.942051,9.355241,-2.301466,7.591235,-5.921980,-2.089732,3.846143,0.139616,-4.987155,-8.230464,4.992218,7.364453,-7.381168,0.295481,-6.604902,-0.259377,-9.021121,4.158825,2.675202,0.589884,0.560779,-0.067888,3.634567,1.842178,6.789572,-8.962452,3.125794,-9.699170,8.266556,4.419648,-9.747301,-0.867345,5.634674,4.166438,4.648710,7.409694,-5.730674,0.590652,9.515785,2.891496,-3.203270,1.975937,5.222163,2.565507,5.522083,3.460030,-3.417704,3.045003,1.744011,-7.563493,6.558976,-0.482280,-2.118031,8.237861,-9.744066,-4.245832,-4.558873,8.790820,-1.966861,-7.187033,8.302786,6.106508,-4.958460,-0.204192,5.540040,-1.389664,-2.963380,-3.406520,-9.689938,-7.287817,-0.301477,3.759179,-4.100754,5.252838,2.071348,0.276520,9.911165,9.640188,5.261053,6.027079,-3.234779,6.442420,-7.148478,9.594014,0.332920,-0.024754,2.605468,-4.631156,-8.052110,-4.004784,-9.834307,-5.676944,-9.164810,6.165760,7.666622,-9.827304,-1.944780,-7.590308,8.565201,8.255484,9.773182,-5.687664,3.808168,4.782798,-3.596910,7.004488,2.806444,-4.304884,8.186800,8.986833,4.544802,7.425045,0.312044,-0.130155,7.029285,5.979992,7.840999,7.105166,-1.133567,-4.924440,-1.488471,8.489636,-3.585526,7.015033,6.480057,-7.390545,-9.152399,-1.344063,-9.435661,-5.520202,-3.455055,-2.361071,-6.176837,-4.942964,-0.564716,6.989337,8.972831,-1.520469,7.574609,2.800539,-2.741983,8.553216,4.565017,-5.989744,-4.854103,-1.592371,-7.292226,7.702461,-1.707134,-9.131438,-4.911852,-2.800612,-3.684696,1.310788,-6.306871,3.883204,3.685923,-2.415453,-2.006131,-0.026862,9.368418,-0.379727,1.366829,-5.851824,9.571863,5.988002,1.423008,8.689553,-5.830784,3.130292,-9.432604,-8.298790,0.311248,-5.730669,8.964779,-8.908238,0.099550,8.306677,-1.362282,5.581418,-8.564207,-0.337281,-3.287263,5.748495,-5.888686,8.277805,6.778688,-7.618129,-5.781121,2.606110,9.939842,5.114767,-2.931832,-3.397122,-2.920931,-4.366924,-2.332075,-8.721653,7.948957,4.306184,-8.399882,-8.967188,-8.119139,-1.357736,1.343268,5.931275,-8.102748,-3.445409,7.000637,7.372204,-8.245318,-0.292778,-6.726785,8.847966,-9.671468,-4.895097,9.270294,2.109417,8.143407,6.008129,5.993414,-4.452439,5.508701,-6.810555,7.675175], dtype = "float64")#candidate|11393|(1440,)|const|float64
call_11392 = func_8477_call(relay.reshape(const_11393.astype('float64'), [6, 15, 16]))
call_11394 = func_8477_call(relay.reshape(const_11393.astype('float64'), [6, 15, 16]))
func_5951_call = mod.get_global_var('func_5951')
func_5955_call = mutated_mod.get_global_var('func_5955')
var_11401 = relay.var("var_11401", dtype = "float32", shape = (1248,))#candidate|11401|(1248,)|var|float32
const_11402 = relay.const([[-7,8],[-5,-1],[-1,4],[-4,-6],[8,7],[4,-7],[8,-5],[1,-10],[-8,2],[-9,-4],[5,6],[8,8],[5,-5],[5,-9],[5,-5],[-3,5],[-5,-7],[-2,-5],[-8,-8],[-4,-4]], dtype = "int64")#candidate|11402|(20, 2)|const|int64
call_11400 = relay.TupleGetItem(func_5951_call(relay.reshape(var_11401.astype('float32'), [1248,]), relay.reshape(const_11402.astype('int64'), [40,]), ), 6)
call_11403 = relay.TupleGetItem(func_5955_call(relay.reshape(var_11401.astype('float32'), [1248,]), relay.reshape(const_11402.astype('int64'), [40,]), ), 6)
output = relay.Tuple([call_11387,call_11389,var_11390,call_11392,const_11393,call_11400,var_11401,const_11402,])
output2 = relay.Tuple([call_11388,call_11391,var_11390,call_11394,const_11393,call_11403,var_11401,const_11402,])
func_11406 = relay.Function([var_11390,var_11401,], output)
mod['func_11406'] = func_11406
mod = relay.transform.InferType()(mod)
var_11407 = relay.var("var_11407", dtype = "float64", shape = (120,))#candidate|11407|(120,)|var|float64
var_11408 = relay.var("var_11408", dtype = "float32", shape = (1248,))#candidate|11408|(1248,)|var|float32
output = func_11406(var_11407,var_11408,)
func_11409 = relay.Function([var_11407,var_11408,], output)
mutated_mod['func_11409'] = func_11409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_11478 = relay.TupleGetItem(func_8176_call(), 0)
call_11479 = relay.TupleGetItem(func_8177_call(), 0)
output = call_11478
output2 = call_11479
func_11481 = relay.Function([], output)
mod['func_11481'] = func_11481
mod = relay.transform.InferType()(mod)
output = func_11481()
func_11482 = relay.Function([], output)
mutated_mod['func_11482'] = func_11482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11483 = relay.var("var_11483", dtype = "float32", shape = (1, 8, 4))#candidate|11483|(1, 8, 4)|var|float32
uop_11484 = relay.asin(var_11483.astype('float32')) # shape=(1, 8, 4)
output = relay.Tuple([uop_11484,])
output2 = relay.Tuple([uop_11484,])
func_11486 = relay.Function([var_11483,], output)
mod['func_11486'] = func_11486
mod = relay.transform.InferType()(mod)
mutated_mod['func_11486'] = func_11486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11487 = relay.var("var_11487", dtype = "float32", shape = (1, 8, 4))#candidate|11487|(1, 8, 4)|var|float32
func_11486_call = mutated_mod.get_global_var('func_11486')
call_11488 = func_11486_call(var_11487)
output = call_11488
func_11489 = relay.Function([var_11487], output)
mutated_mod['func_11489'] = func_11489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_11563 = relay.TupleGetItem(func_8677_call(), 1)
call_11564 = relay.TupleGetItem(func_8679_call(), 1)
output = call_11563
output2 = call_11564
func_11570 = relay.Function([], output)
mod['func_11570'] = func_11570
mod = relay.transform.InferType()(mod)
mutated_mod['func_11570'] = func_11570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11570_call = mutated_mod.get_global_var('func_11570')
call_11571 = func_11570_call()
output = call_11571
func_11572 = relay.Function([], output)
mutated_mod['func_11572'] = func_11572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10030_call = mod.get_global_var('func_10030')
func_10031_call = mutated_mod.get_global_var('func_10031')
call_11576 = relay.TupleGetItem(func_10030_call(), 1)
call_11577 = relay.TupleGetItem(func_10031_call(), 1)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_11593 = relay.TupleGetItem(func_7786_call(), 0)
call_11594 = relay.TupleGetItem(func_7788_call(), 0)
const_11619 = relay.const([[[6.865596,-2.797167,4.522625,4.090413,5.364310,-1.186986],[-5.884316,-2.351040,-3.842807,0.193684,6.270148,-5.134211]],[[8.701356,9.585612,9.440940,-1.729812,6.665657,3.134674],[-1.889232,1.891112,-5.869780,-6.356136,-0.763032,9.353190]],[[-7.569435,-6.764965,-1.947030,8.399844,-6.302287,-8.363374],[-9.018712,-7.407210,9.624763,-1.285111,-3.295987,-0.600627]],[[1.383017,0.609710,7.586499,-7.715377,-0.541525,7.651927],[-9.353373,-4.572739,1.939028,-6.294862,0.666159,-0.785492]],[[4.478223,0.013235,-1.956258,-2.187865,-5.349870,7.754746],[-3.694811,8.519535,-8.793155,-9.818417,-1.605294,-1.655775]],[[8.054683,9.093362,4.458872,-5.406451,-6.160410,5.895493],[4.885148,-9.760477,1.305735,6.212727,5.233785,-4.581427]],[[-0.993195,-9.407523,-4.997075,-8.829259,-0.464637,-0.616251],[6.178917,-7.914706,-9.662491,-6.888128,0.611805,-6.974177]],[[8.154789,3.594329,-4.393378,-0.099365,-8.591259,5.151736],[3.931938,-7.913860,6.755647,-3.516496,2.695479,-4.554786]],[[-2.245143,4.668152,8.943375,-3.000481,-1.499756,-3.167163],[-6.041391,2.539495,5.261658,0.971458,-6.726503,-2.418743]],[[-1.045157,7.229141,0.296438,-7.401353,-3.198860,-2.974237],[9.041524,-2.529626,-0.938652,-8.129901,-1.181526,8.756608]],[[0.317242,-6.956364,-4.121301,2.392034,4.708280,8.843413],[1.260537,-3.605256,9.712048,8.774081,-6.311883,-5.660472]]], dtype = "float32")#candidate|11619|(11, 2, 6)|const|float32
bop_11620 = relay.less_equal(call_11576.astype('bool'), relay.reshape(const_11619.astype('bool'), relay.shape_of(call_11576))) # shape=(11, 2, 6)
bop_11623 = relay.less_equal(call_11577.astype('bool'), relay.reshape(const_11619.astype('bool'), relay.shape_of(call_11577))) # shape=(11, 2, 6)
output = relay.Tuple([call_11593,bop_11620,])
output2 = relay.Tuple([call_11594,bop_11623,])
func_11625 = relay.Function([], output)
mod['func_11625'] = func_11625
mod = relay.transform.InferType()(mod)
output = func_11625()
func_11626 = relay.Function([], output)
mutated_mod['func_11626'] = func_11626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_11644 = relay.TupleGetItem(func_8176_call(), 0)
call_11645 = relay.TupleGetItem(func_8177_call(), 0)
output = relay.Tuple([call_11644,])
output2 = relay.Tuple([call_11645,])
func_11652 = relay.Function([], output)
mod['func_11652'] = func_11652
mod = relay.transform.InferType()(mod)
output = func_11652()
func_11653 = relay.Function([], output)
mutated_mod['func_11653'] = func_11653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mod.get_global_var('func_9688')
func_9689_call = mutated_mod.get_global_var('func_9689')
call_11661 = relay.TupleGetItem(func_9688_call(), 1)
call_11662 = relay.TupleGetItem(func_9689_call(), 1)
var_11676 = relay.var("var_11676", dtype = "uint64", shape = (3, 13, 15))#candidate|11676|(3, 13, 15)|var|uint64
bop_11677 = relay.subtract(call_11661.astype('int32'), relay.reshape(var_11676.astype('int32'), relay.shape_of(call_11661))) # shape=(3, 13, 15)
bop_11680 = relay.subtract(call_11662.astype('int32'), relay.reshape(var_11676.astype('int32'), relay.shape_of(call_11662))) # shape=(3, 13, 15)
output = bop_11677
output2 = bop_11680
func_11692 = relay.Function([var_11676,], output)
mod['func_11692'] = func_11692
mod = relay.transform.InferType()(mod)
mutated_mod['func_11692'] = func_11692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11693 = relay.var("var_11693", dtype = "uint64", shape = (3, 13, 15))#candidate|11693|(3, 13, 15)|var|uint64
func_11692_call = mutated_mod.get_global_var('func_11692')
call_11694 = func_11692_call(var_11693)
output = call_11694
func_11695 = relay.Function([var_11693], output)
mutated_mod['func_11695'] = func_11695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11701 = relay.var("var_11701", dtype = "float32", shape = (14, 11, 4))#candidate|11701|(14, 11, 4)|var|float32
uop_11702 = relay.asinh(var_11701.astype('float32')) # shape=(14, 11, 4)
func_8371_call = mod.get_global_var('func_8371')
func_8374_call = mutated_mod.get_global_var('func_8374')
var_11707 = relay.var("var_11707", dtype = "uint64", shape = (585,))#candidate|11707|(585,)|var|uint64
call_11706 = func_8371_call(relay.reshape(var_11707.astype('uint64'), [3, 13, 15]))
call_11708 = func_8371_call(relay.reshape(var_11707.astype('uint64'), [3, 13, 15]))
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_11711 = relay.TupleGetItem(func_6082_call(), 0)
call_11712 = relay.TupleGetItem(func_6083_call(), 0)
func_9883_call = mod.get_global_var('func_9883')
func_9886_call = mutated_mod.get_global_var('func_9886')
var_11729 = relay.var("var_11729", dtype = "float64", shape = (468, 1))#candidate|11729|(468, 1)|var|float64
call_11728 = relay.TupleGetItem(func_9883_call(relay.reshape(var_11729.astype('float64'), [468,])), 2)
call_11730 = relay.TupleGetItem(func_9886_call(relay.reshape(var_11729.astype('float64'), [468,])), 2)
output = relay.Tuple([uop_11702,call_11706,var_11707,call_11711,call_11728,var_11729,])
output2 = relay.Tuple([uop_11702,call_11708,var_11707,call_11712,call_11730,var_11729,])
func_11745 = relay.Function([var_11701,var_11707,var_11729,], output)
mod['func_11745'] = func_11745
mod = relay.transform.InferType()(mod)
mutated_mod['func_11745'] = func_11745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11745_call = mutated_mod.get_global_var('func_11745')
var_11747 = relay.var("var_11747", dtype = "float32", shape = (14, 11, 4))#candidate|11747|(14, 11, 4)|var|float32
var_11748 = relay.var("var_11748", dtype = "uint64", shape = (585,))#candidate|11748|(585,)|var|uint64
var_11749 = relay.var("var_11749", dtype = "float64", shape = (468, 1))#candidate|11749|(468, 1)|var|float64
call_11746 = func_11745_call(var_11747,var_11748,var_11749,)
output = call_11746
func_11750 = relay.Function([var_11747,var_11748,var_11749,], output)
mutated_mod['func_11750'] = func_11750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7226_call = mod.get_global_var('func_7226')
func_7228_call = mutated_mod.get_global_var('func_7228')
call_11752 = relay.TupleGetItem(func_7226_call(), 2)
call_11753 = relay.TupleGetItem(func_7228_call(), 2)
output = call_11752
output2 = call_11753
func_11758 = relay.Function([], output)
mod['func_11758'] = func_11758
mod = relay.transform.InferType()(mod)
output = func_11758()
func_11759 = relay.Function([], output)
mutated_mod['func_11759'] = func_11759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7156_call = mod.get_global_var('func_7156')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_11769 = relay.TupleGetItem(func_7156_call(), 0)
call_11770 = relay.TupleGetItem(func_7158_call(), 0)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_11818 = relay.TupleGetItem(func_6082_call(), 2)
call_11819 = relay.TupleGetItem(func_6083_call(), 2)
func_7389_call = mod.get_global_var('func_7389')
func_7393_call = mutated_mod.get_global_var('func_7393')
const_11835 = relay.const([1.813759,-5.479127,-1.327690,-8.637876,-2.122429,4.459076,-4.916955,-4.465057,7.105481,-2.943583,-7.050666,0.666799,4.173019,-9.236796,-1.941018,-7.647223,7.092054,-7.278449,1.172780,-7.367349,-9.371695,-9.866890,-7.428915,-3.525088,1.276240,4.269353,-9.223445,5.242893,-4.716362,-9.820038,-9.512408,-7.670582,3.514650,9.437718,-7.528382,8.901054,1.611862,4.291157,-5.984498,5.835235,9.428434,2.928010,7.994738,1.191554,-1.027271,4.111131,-5.707442,-6.063372], dtype = "float64")#candidate|11835|(48,)|const|float64
var_11836 = relay.var("var_11836", dtype = "int64", shape = (40, 1))#candidate|11836|(40, 1)|var|int64
const_11837 = relay.const([2.015394,-0.595729,6.053013,6.342740,-2.299439,4.251667,7.346218,5.192906,-9.454076,-1.231606,-0.254164,-8.976113,9.787476,-8.576201,-8.189916,-0.118764,6.016619,-9.241069,-8.815518,4.975372,1.500218,-4.127044,4.503844,1.275627,3.781076,-5.898632,-6.790024,-4.304669,5.537043,-0.849914,-7.857910,8.597931,9.377705,-4.558279,6.872741,-5.163582,-3.071237,5.066000,3.108655,-4.530487,2.692716,-3.128504,8.301387,4.562543,3.933241,5.215005,-1.507121,8.534444,-2.240894,6.146961,5.302701,-3.996294,-3.817834,1.875395,-7.079812,-5.410248,2.944750,1.897513,4.621089,8.843808,-8.676418,-0.999772,3.500996,0.734669,5.348544,6.681100,-8.636484,0.505835,-7.011711,-8.152865,-1.597275,-8.937829,5.364136,-9.439377,-6.696680,7.775674,-6.615222,-6.029797,5.808133,-0.970607,-4.890249,-2.811688,0.302286,-1.940362,-6.305975,9.562357,9.485734,-1.491205,1.965040,-3.893568,-7.730643,4.931483,5.598058,-9.595672,7.371034,-2.461179,2.810199,-2.061782,-8.857712,-2.936749,-3.650381,3.311009,1.908396,-5.456594,-1.258608,-2.422736,0.633158,-7.895356,2.827827,1.159389,5.432825,5.374642,-8.042358,4.388592,-9.701292,-9.846679,4.797481,-0.014958,0.434498,-2.187183], dtype = "float64")#candidate|11837|(120,)|const|float64
call_11834 = relay.TupleGetItem(func_7389_call(relay.reshape(const_11835.astype('float64'), [3, 4, 4]), relay.reshape(var_11836.astype('int64'), [40,]), relay.reshape(const_11837.astype('float64'), [120,]), ), 7)
call_11838 = relay.TupleGetItem(func_7393_call(relay.reshape(const_11835.astype('float64'), [3, 4, 4]), relay.reshape(var_11836.astype('int64'), [40,]), relay.reshape(const_11837.astype('float64'), [120,]), ), 7)
output = relay.Tuple([call_11769,call_11818,call_11834,const_11835,var_11836,const_11837,])
output2 = relay.Tuple([call_11770,call_11819,call_11838,const_11835,var_11836,const_11837,])
func_11852 = relay.Function([var_11836,], output)
mod['func_11852'] = func_11852
mod = relay.transform.InferType()(mod)
mutated_mod['func_11852'] = func_11852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11853 = relay.var("var_11853", dtype = "int64", shape = (40, 1))#candidate|11853|(40, 1)|var|int64
func_11852_call = mutated_mod.get_global_var('func_11852')
call_11854 = func_11852_call(var_11853)
output = call_11854
func_11855 = relay.Function([var_11853], output)
mutated_mod['func_11855'] = func_11855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10334_call = mod.get_global_var('func_10334')
func_10336_call = mutated_mod.get_global_var('func_10336')
call_11867 = func_10334_call()
call_11868 = func_10334_call()
func_8010_call = mod.get_global_var('func_8010')
func_8012_call = mutated_mod.get_global_var('func_8012')
call_11939 = relay.TupleGetItem(func_8010_call(), 0)
call_11940 = relay.TupleGetItem(func_8012_call(), 0)
output = relay.Tuple([call_11867,call_11939,])
output2 = relay.Tuple([call_11868,call_11940,])
func_11959 = relay.Function([], output)
mod['func_11959'] = func_11959
mod = relay.transform.InferType()(mod)
output = func_11959()
func_11960 = relay.Function([], output)
mutated_mod['func_11960'] = func_11960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11758_call = mod.get_global_var('func_11758')
func_11759_call = mutated_mod.get_global_var('func_11759')
call_11994 = func_11758_call()
call_11995 = func_11758_call()
output = call_11994
output2 = call_11995
func_12003 = relay.Function([], output)
mod['func_12003'] = func_12003
mod = relay.transform.InferType()(mod)
mutated_mod['func_12003'] = func_12003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12003_call = mutated_mod.get_global_var('func_12003')
call_12004 = func_12003_call()
output = call_12004
func_12005 = relay.Function([], output)
mutated_mod['func_12005'] = func_12005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9688_call = mod.get_global_var('func_9688')
func_9689_call = mutated_mod.get_global_var('func_9689')
call_12044 = relay.TupleGetItem(func_9688_call(), 3)
call_12045 = relay.TupleGetItem(func_9689_call(), 3)
func_11123_call = mod.get_global_var('func_11123')
func_11124_call = mutated_mod.get_global_var('func_11124')
call_12050 = func_11123_call()
call_12051 = func_11123_call()
func_6556_call = mod.get_global_var('func_6556')
func_6561_call = mutated_mod.get_global_var('func_6561')
const_12062 = relay.const(0.228511, dtype = "float32")#candidate|12062|()|const|float32
var_12063 = relay.var("var_12063", dtype = "float32", shape = (360, 2))#candidate|12063|(360, 2)|var|float32
call_12061 = relay.TupleGetItem(func_6556_call(relay.reshape(const_12062.astype('float32'), []), relay.reshape(var_12063.astype('float32'), [720,]), relay.reshape(call_12050.astype('float64'), [120,]), ), 3)
call_12064 = relay.TupleGetItem(func_6561_call(relay.reshape(const_12062.astype('float32'), []), relay.reshape(var_12063.astype('float32'), [720,]), relay.reshape(call_12050.astype('float64'), [120,]), ), 3)
uop_12071 = relay.cos(call_12044.astype('float64')) # shape=(11, 2, 6)
uop_12073 = relay.cos(call_12045.astype('float64')) # shape=(11, 2, 6)
func_11758_call = mod.get_global_var('func_11758')
func_11759_call = mutated_mod.get_global_var('func_11759')
call_12079 = func_11758_call()
call_12080 = func_11758_call()
output = relay.Tuple([call_12050,call_12061,const_12062,var_12063,uop_12071,call_12079,])
output2 = relay.Tuple([call_12051,call_12064,const_12062,var_12063,uop_12073,call_12080,])
func_12097 = relay.Function([var_12063,], output)
mod['func_12097'] = func_12097
mod = relay.transform.InferType()(mod)
mutated_mod['func_12097'] = func_12097
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12098 = relay.var("var_12098", dtype = "float32", shape = (360, 2))#candidate|12098|(360, 2)|var|float32
func_12097_call = mutated_mod.get_global_var('func_12097')
call_12099 = func_12097_call(var_12098)
output = call_12099
func_12100 = relay.Function([var_12098], output)
mutated_mod['func_12100'] = func_12100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10479_call = mod.get_global_var('func_10479')
func_10480_call = mutated_mod.get_global_var('func_10480')
call_12118 = relay.TupleGetItem(func_10479_call(), 0)
call_12119 = relay.TupleGetItem(func_10480_call(), 0)
output = call_12118
output2 = call_12119
func_12125 = relay.Function([], output)
mod['func_12125'] = func_12125
mod = relay.transform.InferType()(mod)
output = func_12125()
func_12126 = relay.Function([], output)
mutated_mod['func_12126'] = func_12126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_12152 = relay.TupleGetItem(func_6421_call(), 1)
call_12153 = relay.TupleGetItem(func_6423_call(), 1)
output = call_12152
output2 = call_12153
func_12164 = relay.Function([], output)
mod['func_12164'] = func_12164
mod = relay.transform.InferType()(mod)
output = func_12164()
func_12165 = relay.Function([], output)
mutated_mod['func_12165'] = func_12165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12213 = relay.var("var_12213", dtype = "float64", shape = (15, 15, 10))#candidate|12213|(15, 15, 10)|var|float64
uop_12214 = relay.log(var_12213.astype('float64')) # shape=(15, 15, 10)
output = uop_12214
output2 = uop_12214
func_12217 = relay.Function([var_12213,], output)
mod['func_12217'] = func_12217
mod = relay.transform.InferType()(mod)
var_12218 = relay.var("var_12218", dtype = "float64", shape = (15, 15, 10))#candidate|12218|(15, 15, 10)|var|float64
output = func_12217(var_12218)
func_12219 = relay.Function([var_12218], output)
mutated_mod['func_12219'] = func_12219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12164_call = mod.get_global_var('func_12164')
func_12165_call = mutated_mod.get_global_var('func_12165')
call_12261 = func_12164_call()
call_12262 = func_12164_call()
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_12268 = relay.TupleGetItem(func_6592_call(), 0)
call_12269 = relay.TupleGetItem(func_6593_call(), 0)
output = relay.Tuple([call_12261,call_12268,])
output2 = relay.Tuple([call_12262,call_12269,])
func_12271 = relay.Function([], output)
mod['func_12271'] = func_12271
mod = relay.transform.InferType()(mod)
mutated_mod['func_12271'] = func_12271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12271_call = mutated_mod.get_global_var('func_12271')
call_12272 = func_12271_call()
output = call_12272
func_12273 = relay.Function([], output)
mutated_mod['func_12273'] = func_12273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11959_call = mod.get_global_var('func_11959')
func_11960_call = mutated_mod.get_global_var('func_11960')
call_12274 = relay.TupleGetItem(func_11959_call(), 0)
call_12275 = relay.TupleGetItem(func_11960_call(), 0)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_12278 = func_8800_call()
call_12279 = func_8800_call()
func_10314_call = mod.get_global_var('func_10314')
func_10315_call = mutated_mod.get_global_var('func_10315')
call_12282 = relay.TupleGetItem(func_10314_call(), 0)
call_12283 = relay.TupleGetItem(func_10315_call(), 0)
func_10479_call = mod.get_global_var('func_10479')
func_10480_call = mutated_mod.get_global_var('func_10480')
call_12284 = relay.TupleGetItem(func_10479_call(), 0)
call_12285 = relay.TupleGetItem(func_10480_call(), 0)
output = relay.Tuple([call_12274,call_12278,call_12282,call_12284,])
output2 = relay.Tuple([call_12275,call_12279,call_12283,call_12285,])
func_12288 = relay.Function([], output)
mod['func_12288'] = func_12288
mod = relay.transform.InferType()(mod)
output = func_12288()
func_12289 = relay.Function([], output)
mutated_mod['func_12289'] = func_12289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11652_call = mod.get_global_var('func_11652')
func_11653_call = mutated_mod.get_global_var('func_11653')
call_12326 = relay.TupleGetItem(func_11652_call(), 0)
call_12327 = relay.TupleGetItem(func_11653_call(), 0)
output = call_12326
output2 = call_12327
func_12328 = relay.Function([], output)
mod['func_12328'] = func_12328
mod = relay.transform.InferType()(mod)
mutated_mod['func_12328'] = func_12328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12328_call = mutated_mod.get_global_var('func_12328')
call_12329 = func_12328_call()
output = call_12329
func_12330 = relay.Function([], output)
mutated_mod['func_12330'] = func_12330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12328_call = mod.get_global_var('func_12328')
func_12330_call = mutated_mod.get_global_var('func_12330')
call_12365 = func_12328_call()
call_12366 = func_12328_call()
func_12125_call = mod.get_global_var('func_12125')
func_12126_call = mutated_mod.get_global_var('func_12126')
call_12370 = func_12125_call()
call_12371 = func_12125_call()
func_11481_call = mod.get_global_var('func_11481')
func_11482_call = mutated_mod.get_global_var('func_11482')
call_12386 = func_11481_call()
call_12387 = func_11481_call()
output = relay.Tuple([call_12365,call_12370,call_12386,])
output2 = relay.Tuple([call_12366,call_12371,call_12387,])
func_12395 = relay.Function([], output)
mod['func_12395'] = func_12395
mod = relay.transform.InferType()(mod)
output = func_12395()
func_12396 = relay.Function([], output)
mutated_mod['func_12396'] = func_12396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_12488 = relay.TupleGetItem(func_8176_call(), 0)
call_12489 = relay.TupleGetItem(func_8177_call(), 0)
output = call_12488
output2 = call_12489
func_12497 = relay.Function([], output)
mod['func_12497'] = func_12497
mod = relay.transform.InferType()(mod)
mutated_mod['func_12497'] = func_12497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12497_call = mutated_mod.get_global_var('func_12497')
call_12498 = func_12497_call()
output = call_12498
func_12499 = relay.Function([], output)
mutated_mod['func_12499'] = func_12499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7226_call = mod.get_global_var('func_7226')
func_7228_call = mutated_mod.get_global_var('func_7228')
call_12520 = relay.TupleGetItem(func_7226_call(), 1)
call_12521 = relay.TupleGetItem(func_7228_call(), 1)
output = relay.Tuple([call_12520,])
output2 = relay.Tuple([call_12521,])
func_12526 = relay.Function([], output)
mod['func_12526'] = func_12526
mod = relay.transform.InferType()(mod)
mutated_mod['func_12526'] = func_12526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12526_call = mutated_mod.get_global_var('func_12526')
call_12527 = func_12526_call()
output = call_12527
func_12528 = relay.Function([], output)
mutated_mod['func_12528'] = func_12528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_12556 = relay.TupleGetItem(func_6874_call(), 0)
call_12557 = relay.TupleGetItem(func_6876_call(), 0)
func_11277_call = mod.get_global_var('func_11277')
func_11278_call = mutated_mod.get_global_var('func_11278')
call_12559 = relay.TupleGetItem(func_11277_call(), 0)
call_12560 = relay.TupleGetItem(func_11278_call(), 0)
output = relay.Tuple([call_12556,call_12559,])
output2 = relay.Tuple([call_12557,call_12560,])
func_12563 = relay.Function([], output)
mod['func_12563'] = func_12563
mod = relay.transform.InferType()(mod)
mutated_mod['func_12563'] = func_12563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12563_call = mutated_mod.get_global_var('func_12563')
call_12564 = func_12563_call()
output = call_12564
func_12565 = relay.Function([], output)
mutated_mod['func_12565'] = func_12565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12576 = relay.var("var_12576", dtype = "float32", shape = (11, 10, 5))#candidate|12576|(11, 10, 5)|var|float32
uop_12577 = relay.log2(var_12576.astype('float32')) # shape=(11, 10, 5)
bop_12585 = relay.bitwise_and(var_12576.astype('int16'), relay.reshape(uop_12577.astype('int16'), relay.shape_of(var_12576))) # shape=(11, 10, 5)
output = relay.Tuple([bop_12585,])
output2 = relay.Tuple([bop_12585,])
func_12602 = relay.Function([var_12576,], output)
mod['func_12602'] = func_12602
mod = relay.transform.InferType()(mod)
mutated_mod['func_12602'] = func_12602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12603 = relay.var("var_12603", dtype = "float32", shape = (11, 10, 5))#candidate|12603|(11, 10, 5)|var|float32
func_12602_call = mutated_mod.get_global_var('func_12602')
call_12604 = func_12602_call(var_12603)
output = call_12604
func_12605 = relay.Function([var_12603], output)
mutated_mod['func_12605'] = func_12605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11144_call = mod.get_global_var('func_11144')
func_11145_call = mutated_mod.get_global_var('func_11145')
call_12634 = relay.TupleGetItem(func_11144_call(), 0)
call_12635 = relay.TupleGetItem(func_11145_call(), 0)
func_5708_call = mod.get_global_var('func_5708')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_12645 = func_5708_call()
call_12646 = func_5708_call()
func_6704_call = mod.get_global_var('func_6704')
func_6708_call = mutated_mod.get_global_var('func_6708')
const_12657 = relay.const([[5,2,5,-3,-2,-9,-4,-10,4,3,-9,-3,-9,-5,-5,5,-2,-3,8,-1,5,-3,10,8,-1,9,2,-5,9,9,-10,7,9,10,-3,8,-10,7,-4,4,-5,-9,7,10,-5,-1,3,-4,7,10,4,8,-10,-6,1,4,-2,-3,-9,6,-1,-7,-6,-7,-7,-3,-8,7,-7,4,2,1,3,5,-8,3,10,6,-5,7,1,-4,-2,-8,-3,-4,-10,-1,1,-4,8,10,9,4,-10,-5,2,9,10,2,10,10,-2,-5,-10,-4,6,6,10,7,-2,1,2,7,-9,-7,4,-1,10,-9,-2,-9,-9,-4,-7,-6,-5,-1,9,9,7,-9,3,7,-5,-4,-1,5,-7,8,-10,-3,3],[2,-3,2,-8,1,10,-7,-6,9,-3,7,3,-6,-2,-10,2,-9,-6,5,1,-7,5,3,6,-1,8,1,-3,-8,5,-2,-1,-1,9,1,3,-10,-4,10,-6,-1,8,10,8,-8,8,-9,10,-6,-8,-10,8,9,-2,-4,-1,5,-6,3,-4,8,-3,-1,-8,2,5,-9,10,7,-9,4,-3,-1,5,2,7,1,6,10,8,-2,-2,8,-8,-5,3,7,8,4,2,-5,5,-6,8,8,8,1,-10,-1,3,7,7,1,-4,1,2,-4,1,-9,-7,-5,9,-4,-4,-9,-3,10,-10,7,7,-1,-3,-7,8,1,4,-10,-1,-2,-9,9,-5,2,-3,3,-7,10,-1,4,2,-3,-1,-7],[-9,-7,-8,-8,7,-2,9,10,-10,-5,5,10,-5,2,-8,-10,8,3,4,-2,-5,1,2,9,-10,-4,-4,-2,7,-8,-5,-2,-8,2,10,2,10,9,-5,-5,3,-9,2,-9,-7,4,5,-6,2,-4,-4,6,-2,-6,-3,1,10,4,-3,-1,-10,-4,-2,6,10,6,8,6,7,6,-2,-8,9,4,-7,-2,-1,-9,-7,-9,-5,-1,-9,3,-8,7,-6,-4,-9,6,-7,-10,-5,3,4,-10,-9,3,7,-5,3,-7,-9,3,-3,-1,-7,9,9,-5,8,-3,-6,4,-2,-8,-2,-5,10,-8,-9,3,1,-8,-6,5,-6,-10,7,-6,4,6,-1,-7,-1,1,-6,-3,-6,7,-4,5,-3],[4,10,10,4,-10,-9,3,3,-9,10,-6,-3,-10,5,8,-10,-1,2,4,9,8,-2,7,7,-6,8,-3,5,9,-9,-2,-9,9,4,7,7,1,-8,-7,-6,2,-7,6,-10,-3,-2,-8,-6,4,10,5,-9,-9,9,-4,10,-7,-2,-8,8,1,-6,2,-6,4,-6,-5,9,1,-1,1,2,-8,-2,7,10,9,9,-8,6,2,2,8,-1,-9,6,4,9,2,-2,1,-1,8,2,4,7,-1,-3,-2,1,-7,-1,-7,-6,-10,-2,-10,1,-10,1,2,-9,-9,-3,-7,2,3,8,2,1,-10,-4,5,-8,10,-10,-9,5,-1,1,-7,5,-4,2,-5,-9,5,7,1,-6,7,3,-4],[6,-9,7,-9,5,-3,1,-9,5,4,-5,-7,5,-6,-2,9,10,-6,-3,7,-8,5,10,-2,10,-9,2,-8,2,7,6,1,-3,1,1,6,-2,-1,-4,9,8,9,-4,8,10,-9,1,-2,-8,-2,5,-10,-8,-9,-3,-6,-6,2,-3,7,6,-10,7,-5,9,4,5,10,5,4,10,1,-7,8,-3,-3,-1,10,-7,3,-2,1,-8,-9,-2,3,4,-2,6,1,6,-10,7,7,5,-1,6,4,-4,-9,7,10,5,-2,-1,10,-7,6,-4,-9,2,8,3,-2,-5,3,2,-3,5,-7,8,-8,2,8,-7,-5,-6,-7,-4,-6,-1,-1,4,1,7,10,9,-10,-9,7,5,9,4],[2,6,-7,9,-3,9,-4,3,-4,9,-1,2,8,-1,-1,-2,3,3,6,-9,6,-2,6,4,6,-6,6,7,7,1,-5,1,1,-9,7,-8,5,5,5,-3,-7,-10,-7,6,-6,-4,-8,-10,-10,-7,-6,1,-5,3,10,-3,-5,7,-1,-7,-8,10,7,-6,-1,-5,-10,-8,-5,-6,-9,1,1,7,10,3,-5,5,-4,-9,6,10,10,-2,1,1,7,5,9,2,-3,7,-7,-2,-5,-6,2,-10,5,9,-10,-7,2,4,1,-9,10,-4,10,8,6,-8,-9,5,8,10,-4,-6,-7,6,-8,-4,-2,-5,-6,-8,4,-3,2,-5,-1,2,-1,2,1,-6,4,7,-8,-8,3,7,2],[10,-7,6,-1,-3,-7,10,2,6,8,4,4,-2,-8,4,-10,-3,1,-7,8,-5,-5,-2,3,-7,-9,-8,-2,10,1,9,-10,10,-2,4,-7,6,3,10,-3,-8,-7,7,-5,9,-5,-7,3,-6,4,-6,8,2,-7,9,9,-6,2,-6,-2,-4,5,2,9,-2,6,4,9,5,-10,8,2,8,9,10,10,8,5,1,8,7,-3,-9,-8,-8,9,-8,2,-4,1,-4,-9,-6,2,8,-3,5,-7,6,-9,4,2,10,9,7,-9,2,-3,2,-8,-7,-7,-6,-7,10,9,-3,-5,9,6,-5,-8,2,-7,-9,5,5,8,-6,4,-10,-9,5,5,-9,9,5,3,9,2,-5,5,10],[-1,-10,-4,7,-3,-9,-4,1,-4,-3,4,1,1,4,5,-9,10,-1,-2,-8,-9,-5,-7,10,-3,-2,-4,-4,6,9,9,10,-1,-4,7,8,-10,3,-9,1,-6,10,4,3,1,-3,-1,-2,4,-3,-1,-9,4,-8,-6,7,-10,10,-1,5,-4,-4,1,-9,-3,6,-5,-5,-8,6,-2,6,9,7,10,6,10,10,6,-8,4,-5,10,2,4,4,8,-1,7,-1,-2,2,6,5,3,-3,9,8,9,-9,-5,-3,4,-3,2,9,-10,-5,-3,8,-6,-3,-10,-4,10,-6,-8,-9,10,5,-6,5,-5,2,-3,-6,-5,5,9,-6,5,-3,10,-7,-1,-2,9,3,-10,-6,7,-3,8],[-10,7,7,10,7,9,8,-6,-9,10,3,-8,4,-8,10,6,4,-7,-5,10,-5,-6,2,-5,-9,4,-6,2,10,8,-7,-1,8,-3,-5,5,-3,-4,4,-6,6,-6,2,4,-7,1,7,-6,-10,-9,3,6,4,-1,-9,1,6,-8,7,-10,6,-10,-5,-7,-7,-1,-10,-6,-7,5,5,1,-5,-2,3,-7,-7,-2,-3,-7,-7,9,-5,4,-4,-8,-6,4,10,-4,-2,-9,-9,-9,-2,-1,7,6,8,6,10,-3,-2,8,5,-2,4,-5,-4,3,3,5,-7,1,-5,-7,10,-1,-1,6,-10,2,-4,7,1,6,-8,-3,-5,10,3,3,1,8,3,-7,-4,9,8,-6,7,-3,4],[-10,2,7,9,-9,-5,2,4,-3,8,6,9,5,5,-3,-5,8,-2,1,8,-4,10,3,5,2,-1,7,2,7,1,-8,2,-2,-2,8,6,3,7,-9,3,6,-2,3,7,3,10,4,7,6,10,9,5,-3,-9,5,-6,7,5,3,-2,10,8,-1,10,4,1,-8,-7,-1,3,-2,8,-8,1,-5,-8,4,8,10,-3,10,2,-2,-8,7,8,2,-1,9,2,5,-8,7,-4,-6,3,-3,-3,-4,-8,6,-2,-4,-1,-5,8,4,-8,-1,-7,-1,2,-7,-1,-10,4,4,6,-9,2,9,-1,-3,-3,-3,-3,5,10,-4,3,-9,10,2,-3,3,2,-5,-7,2,-5,2,-1,5],[9,4,3,-6,9,1,7,-9,-7,2,3,6,2,7,-7,5,-2,-5,-4,-10,-10,-9,6,-8,2,-9,-7,-4,2,-10,-4,4,-6,10,1,3,10,8,9,1,7,8,-2,1,-4,5,-8,1,-8,-3,1,-2,-9,-7,6,2,7,-5,4,4,-9,-5,10,10,-7,8,-3,10,-1,-2,6,-10,8,1,3,10,-6,8,1,3,3,7,-2,-9,6,9,7,-5,7,5,-3,4,9,3,-2,-9,8,2,-5,-2,-2,4,-2,-4,-7,3,-5,-7,-10,8,9,-8,5,8,1,-4,-10,-4,-7,3,1,-2,-10,-5,-3,2,-10,8,10,-9,7,8,2,-10,-2,3,-9,-2,-7,-1,9,10,-4],[7,8,9,-9,-3,-8,-10,-7,4,9,7,4,-4,-1,-2,-7,-3,5,10,-6,3,-5,-2,5,10,-3,-9,5,10,2,-1,1,3,5,-9,6,2,-6,-8,2,6,5,4,3,-3,8,-5,9,6,-3,4,-1,-3,-1,-10,6,-10,-3,10,10,2,-9,-8,5,4,-1,7,3,8,10,-8,-4,-7,5,-5,-1,7,-4,-2,-9,8,5,3,-5,3,-1,-2,-1,3,8,-5,5,-1,-6,-9,-9,8,-2,3,4,-3,-9,9,5,8,-8,-4,-6,1,10,-7,-4,-5,6,4,-4,-4,-3,4,2,1,6,2,-10,4,-2,-1,7,-5,-3,-4,5,3,8,-5,-9,10,-2,9,-7,2,-3,-8],[-10,-3,9,2,-5,1,2,4,2,9,8,6,1,5,-2,6,3,4,9,7,3,-7,-5,8,-5,-9,-7,8,-4,3,5,7,1,1,9,3,-7,-1,-1,8,-8,-1,-4,4,-4,-4,-10,-9,2,10,8,-5,4,-7,-5,-3,6,9,-4,7,-3,9,2,4,-7,-5,-8,4,-8,-8,-8,7,6,-5,10,2,-5,-7,-8,10,5,-4,8,6,-1,-9,7,4,-2,6,10,-5,9,-1,1,6,-7,-9,-8,-10,-1,-7,-3,-4,9,6,7,6,3,5,-1,10,-1,4,5,-10,3,5,-10,2,6,-1,-9,-1,6,-6,6,6,6,9,-4,-6,-6,-2,7,-6,-3,-9,5,5,-7,10,-9]], dtype = "uint64")#candidate|12657|(13, 143)|const|uint64
const_12658 = relay.const([6,6,2,-6,2,-5,-3,-5,-9,9,4,9,8,-7,8,4,5,-4,4,5,8,-7,2,-9,8,-9,5,6,-7,-10,6,-9,-6,5,-2,5,2,-3,6,7,2,-6,2,-10,-6,6,-8,10,7,-1,-10,9,2,6,5,-4,9,-8,4,2,10,-2,2,-2,1,-5,2,1,-9,-4,2,3,-7,-2,1,-1,-1,-1,6,1,-7,-8,-2,4,8,6,-5,-9,2,-3,7,-3,-8,-1,-8,-4,1,-7,-1,-4,1,10,3,-8,3,9,7,8,6,10,4,-10,-5,7,10,-8,-5,6,-8,-2,-6,-10,-3,-8,10,7,-3,-6,-6,8,-6,6,5,-7,4,5,-10,-3,-5,-4,-9,6,9,-10,-5,-10,5,2,6,2,-9,-2,-3,-6,5,1,2,-8,9,4,6,-7,-10,10,8,-7,-10,8,5,-10,-3,-6,10,3,-2,7,3,-1,-1,-8,-5,-6,6,-8,7,3,1,-4,-3,-2,8,-7,3,1,-10,-3,-5,-10,6,-10,-6,-4,2,9,6,2,-1,2,-6,-8,-5,-1,-3,-9,-9,-9,-2,3,10,3,3,10,6,-8,9,9,6,-2,1,7,10,6,-8,10,-10,5,-8,-9,-9,7,2,1,7,8,-7,-9,-8,1,-3,7,-3,9,7,6,-5,-5,-2,-5,-4,-9,6,7,3,4,-8,1,1,-5,-8,-8,7,-9,2,7,7,-6,-4,-8,3,-4,3,4,-5,-4,-1,7,-6,4,8,-7,-7,-7,7,5,7,1,-5,4,6,-7,2,3,-8,-7,10,1,-6,6,6,-3,3,3,-1,-9,6,-1,8,6,3,-4,7,10,-8,7,8,-4,-4,-10,-5,9,5,-8,8,-10,-7,-5,2,8,-10,3,-4,10,6,-10,-8,-10,1,-5,2,-9,2,3,-9,-5,5,8,6,7,5,1,-6,-6,3,-5,9,-5,-10,-6,-1,-8,10,8,-2,-6,-10,-2,-1,3,-8,-8,4,9,-4,-3,-7,-1,-6,10,4,9,-6,10,7,-1,4,3,7,-4,-6,-5,-9,-7,5,-7,7,3,-6,1,8,10,5,2,5,10,4,-4,2,-9,3,8,-1,3,5,1,-10,-7,-4,7,-4,5,-2,10,2,-5,-5,-7,7,4,-8,7,-5,2,-3,1,8,5,4,-6,-7,5,7,8,6,5,-8,1,-9,3,4,1,-1,-1,-4,-3,-1,2,-2,1,-6,-1,1,8,-9,-5,-8,-6,-7,-3,-8,-3,-7,-7,7,9,4,-10,4,-8,10,9,-2,-6,-1,-9,5,8,-6,3,2,-1,-3,-3,8,1,5,-5,-2,3,9,-4,5,-8,-8,-8,-2,5,7,-4,9,4,-5,10,-9,-3,-6,-3,-1,-4,2,9,9,1,4,-5,-1,7,-8,-3,10,5,5,7,-1,-8,2,-10,1,-1,9,8,-4,5,-9,-1,6,-3,6,-10,-2,1,-4,-9,4,-10,5,-2,2,-1,8,8,-7,-7,-2,1,5,-1,3,-6,9,10,5,-3,1,-5,-7,5,5,-9,8,2,4,-2,3,-5,-5,6,-9,4,6,-1,4,9,7,-8,-9,-8,-6,-9,-10,1,9,3,8,-2,-9,-7,10,-2,-3,-3,1,-5,-4,5,-1,9,-4,10,2,-6,4,5,1,-10,-10,-9,4,9,2,-2,-10,3,-5,-8,4,9,-9,-1,-6,5,3,8,-9,7,-10,-4,-2,-8,9,-6,-2,-4,-1,-1,7,-2,3,-10,-6,-4,6,1,-5,6,3,-1,-7,7,-10,-3,-6,7,-5,-2,6,9,5,9,-7,6,-7,6,-9,-9,1,6,-9,7,-2,6,4,-9,5,9,-4,-3,-9,2,4,-7,-5,2,-7,-9,7,-8,-1,2,-8,-8,-5,3,2,3,1,10,-4,2,-3,-4,-8,-3,-1,5,-5,4,-5,-3,-6,-2,-6,-3,-7,4,7,2,10,4,-2,3,-3,-7,-5,5,9,-8,-2,-5,-7,-10,-7,-2,10,8,-7,9,-9,-8,9,6,3,-2,5,5,-8,-6,1,-10,6,-5,1,2,-2,-6,4,-10,-6,-3,2,2,-4,5,-8,8,-4,-4,-7,-7,-7,-2,5,-9,8,1,-9,-10,-5,10,-9,-7,9,8,-10,-7,-7,9,4,-2,-1,2,10,-4,-6,-8,5,8,7,-2,-2,-3,9,-3,-1,3,10,3,-7,4,-3,10,6,-2,5,-9,4,-8,-3,5,-7,-9,6,-8,-10,6,-5,-3,-4,5], dtype = "uint64")#candidate|12658|(858,)|const|uint64
var_12659 = relay.var("var_12659", dtype = "uint64", shape = (143,))#candidate|12659|(143,)|var|uint64
call_12656 = relay.TupleGetItem(func_6704_call(relay.reshape(const_12657.astype('uint64'), [13, 13, 11]), relay.reshape(const_12658.astype('uint64'), [6, 13, 11]), relay.reshape(var_12659.astype('uint64'), [1, 13, 11]), ), 0)
call_12660 = relay.TupleGetItem(func_6708_call(relay.reshape(const_12657.astype('uint64'), [13, 13, 11]), relay.reshape(const_12658.astype('uint64'), [6, 13, 11]), relay.reshape(var_12659.astype('uint64'), [1, 13, 11]), ), 0)
func_3732_call = mod.get_global_var('func_3732')
func_3735_call = mutated_mod.get_global_var('func_3735')
const_12662 = relay.const([[-3.939153,8.196048,6.984935,9.970863,-5.469863,2.962794,-5.020263,4.781855,0.211126,-7.063108,-7.235298,-2.852821,0.091225,-1.141524,-0.507500,1.077920,1.815321,4.722160,-7.757938,-7.323178,-7.415406,-0.807607,-6.944354,-1.233397,-3.482048,-1.244334,-2.360034,-0.671857,-8.826219,-8.831297,-7.576876,-0.425028,-1.795406,-8.019870,-5.094187,3.804184,-6.411767,0.453570,3.150324,-4.926283,-5.796298,-3.946302,8.504584,-7.000295,1.083812,4.638027,-9.717491,2.658590,2.775806,1.482210,7.688620,-4.704332,-0.641443,-3.927603,5.452839,8.021378,8.858839,0.698990,-7.161001,6.344382,-0.768570,3.528434,-7.733118,8.253166,-7.371921,8.423757,4.735264,2.648142,6.040894,5.235315,-8.400394,7.358349,-8.266564,3.373440,-4.365431,9.247278,5.048523,-0.600100,0.085063,2.048959,-8.962704,9.324192,-8.412786,-6.920120,4.557622,4.545158,-6.695894,3.381148,1.245335,-3.964375,1.747476,-2.419756,-4.255503,-0.525505,-9.368998,-3.431294,-7.822624,-6.805149,-7.054589,0.318540,-3.545511,-0.413283,4.095625,9.831070,-7.140369,-9.897596,6.886846,-7.790999,7.807903,-7.527573,-5.412103,6.831236,-6.883022,0.836158,-5.384747,-5.709325,4.152142,4.587078,5.592148,9.492612]], dtype = "float64")#candidate|12662|(1, 120)|const|float64
call_12661 = relay.TupleGetItem(func_3732_call(relay.reshape(const_12662.astype('float64'), [5, 3, 8]), relay.reshape(const_12662.astype('float64'), [5, 3, 8]), ), 1)
call_12663 = relay.TupleGetItem(func_3735_call(relay.reshape(const_12662.astype('float64'), [5, 3, 8]), relay.reshape(const_12662.astype('float64'), [5, 3, 8]), ), 1)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_12667 = relay.TupleGetItem(func_8677_call(), 1)
call_12668 = relay.TupleGetItem(func_8679_call(), 1)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
call_12678 = relay.TupleGetItem(func_1268_call(relay.reshape(call_12661.astype('float32'), [13, 12, 8])), 0)
call_12679 = relay.TupleGetItem(func_1271_call(relay.reshape(call_12661.astype('float32'), [13, 12, 8])), 0)
output = relay.Tuple([call_12634,call_12645,call_12656,const_12657,const_12658,var_12659,call_12661,const_12662,call_12667,call_12678,])
output2 = relay.Tuple([call_12635,call_12646,call_12660,const_12657,const_12658,var_12659,call_12663,const_12662,call_12668,call_12679,])
func_12687 = relay.Function([var_12659,], output)
mod['func_12687'] = func_12687
mod = relay.transform.InferType()(mod)
mutated_mod['func_12687'] = func_12687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12688 = relay.var("var_12688", dtype = "uint64", shape = (143,))#candidate|12688|(143,)|var|uint64
func_12687_call = mutated_mod.get_global_var('func_12687')
call_12689 = func_12687_call(var_12688)
output = call_12689
func_12690 = relay.Function([var_12688], output)
mutated_mod['func_12690'] = func_12690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11311_call = mod.get_global_var('func_11311')
func_11312_call = mutated_mod.get_global_var('func_11312')
call_12726 = relay.TupleGetItem(func_11311_call(), 2)
call_12727 = relay.TupleGetItem(func_11312_call(), 2)
func_6040_call = mod.get_global_var('func_6040')
func_6044_call = mutated_mod.get_global_var('func_6044')
const_12760 = relay.const([[2.385984,9.678994,8.950924,-6.367489,6.651955,-7.720638,-6.409297,-2.499786,-6.811658,6.853997,1.954597,5.563940,-3.030558,3.334067,-5.015635,5.643615,0.581643,-4.105288,-3.813639,8.994947,-6.009410,5.630689,-3.339687,-2.675995,6.860390,7.482473,9.642414,-1.287085,-7.481236,-9.549408,-7.753722,-4.106215,9.253438,8.724264,2.174949,9.033823,-4.224294,-7.246160,-8.347963,-3.685142,-1.869233,-6.453603,-4.384280,9.539980,4.441749,-1.837215,6.501922,9.656878,1.118489,-3.850192,5.765133,-5.382075,-5.484960,4.891156,-1.223530,-6.746294,3.306920,-0.512595,0.007295,-3.187697,-0.239735,6.929965,8.144014,-2.424018,5.664199,3.585786,-4.389187,-8.781456,-5.079062,3.302067,6.983651,3.384384,2.690303,6.663072,6.396257,1.643565,-1.399141,-1.801989,3.677950,-0.244348,0.320716,4.875900,-8.435085,6.589584,7.774572,9.123556,-3.229781,-3.040752,-0.242158,2.543325,6.954165,0.305455,0.912620,-5.711370,-5.662091,5.157576,-3.060661,6.138427,-5.569358,-1.300400,-9.687664,4.608842,-2.693249,-4.951169,8.589840,7.447345,-6.737254,-4.691193,-1.531102,-1.029780,3.998552,-3.673889,-0.169676,-9.829326,-7.461899,1.500708,-9.222361,-4.663025,-5.979365,-1.727485,-8.704514,-7.013697,-6.584839,-0.664681,8.553550,-0.970482,-8.663191,1.287265,-7.354826,0.509389,-2.952505,6.478615,2.891845,7.160981,-5.652518,1.019217,8.684828,0.748675,-6.158954,-9.374166,-6.614057,3.943652,-7.361833,-9.754447,-0.287896,7.772987,-2.696623,-2.384439,-8.520400,8.810725,9.999038,4.962695,-4.638006,-8.599749,-0.242208,0.100788,8.319590,3.025388,9.704190,6.489506,-2.291776,-0.919322,6.077613,-2.842612,-2.705597,9.714000,4.305080,7.932433,1.021170,-5.608268,-7.303287,3.062429,-8.809356,3.610146,-2.551934,-2.142323,-1.306170,6.829673,0.115086,8.617148],[8.395078,3.630406,-7.768385,-3.731596,-3.900574,5.529465,-7.852567,9.494509,-2.759356,-4.631054,7.806134,7.966166,3.130268,9.342389,-5.304890,4.779105,5.405224,-3.560560,1.046003,-9.611936,-9.124269,-6.086983,-9.560903,5.656913,1.463061,5.000957,-5.856814,-0.701759,7.326396,-0.535291,-8.729927,8.581960,-8.657912,8.452425,-0.486126,-2.992685,-0.622487,-7.683951,-9.379085,0.333892,0.020808,-1.599820,3.402145,-3.814568,-5.066107,-9.159608,-9.393416,8.445954,-5.462883,-8.468356,-6.120411,5.018587,6.527391,0.158682,5.044152,8.220473,5.675478,2.788259,-1.155911,3.690330,-4.912891,-2.796582,6.297204,-5.023878,-3.760842,-6.364971,2.260663,6.967320,6.812023,-6.444765,1.057126,-7.149318,2.029840,8.161784,3.284897,-4.813659,9.020488,-1.376868,-1.133797,-4.746927,7.940075,2.716358,-2.658231,5.932402,8.825063,-1.350203,-6.884107,8.365272,-6.753851,8.461098,1.243176,-5.915508,-4.453896,6.152573,3.015527,-1.226413,9.418647,4.633685,-7.503005,7.510816,-8.756216,1.608151,-0.837862,-0.291375,1.530775,-6.264519,4.107417,0.691769,6.511408,7.581813,-3.020901,5.878235,8.874100,9.749136,-1.993346,-6.161054,7.773550,8.695412,-6.602042,-6.029986,2.626176,2.817888,7.538013,4.944548,0.185180,9.740283,-3.250614,1.795170,2.107877,3.966335,-1.943176,-5.141344,8.317661,9.136253,2.458021,-7.129956,5.478692,-1.968041,-8.722125,0.478288,-9.433097,-0.660918,-0.910006,-0.238068,-4.627856,9.926148,9.202861,-2.522628,6.433529,1.434097,-6.205924,8.277498,7.525935,-6.394494,7.116979,4.608138,1.515863,-8.651743,-3.192483,1.050784,1.144602,2.937767,9.719597,6.707639,5.792502,1.491122,-3.848068,8.962531,-5.788437,-2.528483,-5.815180,4.599320,6.925153,4.509012,5.010915,-1.555914,9.866942,6.667917,-8.360653,5.252829],[0.093826,0.059451,4.696301,6.934445,-6.315565,-2.196144,-0.317616,-4.676760,1.114976,8.341670,6.160117,9.682877,8.092935,8.363344,-1.676442,6.327456,7.230809,1.581628,-3.765107,9.561715,-5.591167,7.287085,9.631501,-8.153264,6.202609,9.097039,-2.601180,1.147165,-0.785350,5.625560,4.596357,-8.164968,7.036220,4.376948,2.879107,-1.102839,-3.926288,-6.415309,-4.463032,7.680375,-1.336663,-3.365312,9.586233,-5.938958,-7.544496,-3.591716,-3.059620,-8.145894,9.949596,2.495353,-2.519513,-0.503074,9.935224,9.250490,-6.617375,1.097844,7.665573,5.219564,1.608206,-7.053605,5.846543,2.676987,-0.734871,0.263112,-3.623063,-8.474512,-2.359384,6.375072,8.975936,6.593138,8.639653,-0.806427,-9.967857,-1.890582,8.730662,6.704684,8.486965,-6.888425,5.421267,7.740134,7.975790,-3.289657,4.811847,3.963757,-5.241893,-1.075580,-8.593494,0.980253,-1.131940,-3.150102,-7.701788,-7.956092,9.771003,4.514169,-7.381214,-1.082064,-5.860504,1.706289,-7.206493,-4.814946,-8.915881,4.782683,6.359317,2.135180,-2.581277,0.794599,-8.387566,-7.835485,3.797843,-2.290433,0.142349,6.776653,5.303356,9.234936,5.933269,2.088622,-7.642666,-6.415155,5.404578,7.664698,-4.732282,-6.926174,-2.028247,-5.252422,5.361764,3.605989,1.599746,-1.998835,2.887264,-6.160422,-4.760807,-9.376157,-8.545644,-2.581581,6.374360,6.266154,8.254562,-9.807014,9.961840,8.626466,4.284146,3.741601,1.324961,2.817354,8.678410,4.334633,7.095405,-1.319275,9.930460,3.323449,-7.796142,-0.866512,5.898410,7.034094,0.745426,6.505419,4.929709,8.543611,-9.925689,6.468756,-9.383119,5.151776,7.649470,-7.007178,3.578757,8.296499,-6.191431,4.323626,-2.258085,-7.668788,2.752272,-6.534287,-3.585043,6.226858,-2.780319,-2.201735,5.646584,5.379604,1.243962,4.830244],[2.280390,-7.088692,-3.438451,6.778717,-0.747763,-8.163517,1.768622,-0.854613,-9.062963,4.673447,8.244775,-6.417097,4.125062,0.631742,4.682965,9.239689,1.792171,-5.743372,6.060475,-7.287710,-7.713682,2.503938,7.119727,3.963414,5.052715,-3.060617,4.950652,-6.160085,-0.057715,8.918622,-3.995735,2.937474,3.859522,-6.483724,6.769903,-2.856460,7.566083,-9.887012,-8.882658,6.291410,-0.265726,-7.228632,-7.513944,-5.657463,-2.692930,-0.549714,3.426848,-9.446812,6.032267,5.092168,5.432646,-2.349832,-8.134576,1.573862,6.193506,-1.685762,-0.412198,2.781913,0.756743,-1.255612,9.915734,8.192442,-1.849634,0.405305,-9.843161,-6.391638,1.379440,-2.491187,6.202003,-1.364275,-7.977631,-0.194813,6.119324,2.412460,-9.581215,-3.427631,-6.077587,-2.986855,8.088486,4.308273,-5.952508,0.416993,-0.473658,2.669330,0.489859,-7.734792,5.025457,-2.415652,-3.515641,0.264764,5.676640,3.376198,0.660229,-7.179605,0.788951,-2.817630,-6.749008,3.408135,-4.028196,-0.767954,-4.477910,6.812420,-7.733647,-8.324586,-1.634536,1.392828,5.381075,5.575539,-2.995537,5.177990,6.521927,3.646771,6.894853,5.465891,-5.756647,4.613208,-9.624460,-0.112755,1.208795,-6.902191,-0.088952,2.123539,-4.206453,2.364315,4.496739,-5.369123,-1.809045,-4.704546,4.170669,4.417978,3.440068,-7.797683,-5.333222,-7.806009,-9.384667,7.997342,-0.131975,-8.559960,1.442448,3.073741,6.999459,-4.371175,-8.768411,1.130308,-2.960455,7.969786,-0.387029,0.176363,-8.350040,-9.414419,-7.461413,8.152412,-7.680097,7.181032,5.289723,-7.172605,2.681419,4.950984,0.725639,9.200730,6.570242,-7.875358,-3.141012,-6.290583,3.805748,2.753561,-3.334491,9.168247,5.871165,4.575164,4.823074,2.723696,-4.760455,-5.370326,9.520114,8.738058,-3.398877,-5.445169,6.650924,6.073635]], dtype = "float32")#candidate|12760|(4, 180)|const|float32
const_12761 = relay.const([-1.308782,1.366624,8.124318,-3.494976,-3.566339,3.392820,-5.411698,6.931721,1.317793,9.006424,-0.423040,6.183737,-7.301688,-4.983206,4.651653,-4.089987,-3.829572,6.406120,-8.699490,2.570257,9.198661,9.423006,-1.297461,-9.504467,4.895891,-7.089730,3.844109,9.542079,-3.619433,-9.345038,1.504044,3.185851,-0.677035,-2.419215,9.822698,0.629976,-6.248209,-9.411331,2.544185,0.325799,-8.014361,-9.356723,1.217191,-5.810506,-6.847209,6.632443,1.293727,8.856319,-2.419074,-7.880681,9.107804,-8.586704,-0.501373,2.550775,3.286603,-0.877410,-3.910056,-9.150269,-3.376146,3.885863,8.281241,4.626738,-6.698059,-6.297565,-1.926338,-5.009030,-3.062738,3.020595,4.781606,4.274354,3.801639,9.886796,-6.878756,2.244407,-3.439685,3.483713,-6.080756,-5.037500,-2.866993,3.440773,6.452124,-3.261163,-3.305419,-7.010056,-5.488105,3.766052,5.551493,1.995133,-4.881579,-8.545323,-0.033173,-4.310263,-7.835774,5.133858,0.582163,5.508361,-6.155142,-9.667499,-2.969155,-2.479514,-5.143618,-2.020233,-0.999080,-9.936220,4.532435,8.652962,-6.848899,-6.982410,-0.294484,8.839481,-8.263620,-0.953701,7.078971,0.660510,0.371647,-3.584576,3.743498,5.057197,0.718482,-7.136431,6.498985,-3.726861,9.520356,-6.897376,-0.637960,2.057647,3.964514,8.316115,8.906031,-1.277456,-6.198841,-3.528225,5.772461,-2.016242,4.834474,6.982857,-2.697882,6.629913,-0.443926,-8.565918,8.169268,0.228777,9.559430,2.172372,-8.302234,-2.300001,9.335517,-7.475907,-2.230583,6.116683,-6.452428,-2.501626,-5.978590,-4.622057,-5.125553,5.684029,1.978453,-9.269327,1.223788,2.575500,8.763090,-5.898692,-8.512372,0.634778,9.466695,8.104224,-6.953261,8.838030,6.730678,7.757237,-6.812994,4.248469,-9.430509,-8.797004,-7.382481,8.476798,0.264844,-1.224766,-3.024760,6.534113,-6.408130,4.475574,-4.514803,2.584285,9.644108,3.219374,3.616533,3.854721,-4.057276,7.597365,2.509265,-7.613931,-5.279989,-2.395925,7.973154,8.724781,-5.342728,-1.286664,7.692701,-7.576336,-2.142365,-9.053802,9.727061,5.475128,4.993029,-5.302965,1.988092,-5.799010,5.365426,7.834646,-5.035136,-3.070123,0.787316,3.820148,-9.688459,2.742011,-0.163930,-2.573719,8.463859,0.101306,-8.168334,1.075960,8.878972,8.726361,6.957013,8.587554,0.308565,-8.307570,-4.043380,5.215882,-2.069560,4.934391,-9.334754,-4.529315,-9.866272,5.434140,4.120661,-0.088389,-2.046099,4.716529,-7.827564,6.719794,-0.743010,8.911596,2.927052,8.477071,4.230838,-0.921173,-5.526202,-6.757712,4.628524,2.666380,-5.209097,2.333222,8.389822,-1.073302,4.702951,-5.072639,-8.987045,-1.175590,-5.495579,8.554931,-9.762905,-2.667579,-5.791541,7.086331,-8.346882,-6.087285,9.927262,1.424067,-5.009591,-1.687572,8.342139,4.344598,-3.171205,0.554551,5.085464,8.228176,5.069343,-0.542581,-5.032729,4.859602,-4.451243,8.143087,9.836345,-1.166751,8.872564,5.155054,6.869856,-9.985773,-0.981240,4.311299,-9.248202,6.507539,-9.081647,2.978587,-3.436148,8.304459,-3.801418,-4.389725,2.885300,3.083966,3.829698,6.294787,1.109177,5.483776,9.547266,9.785127,0.516276,7.776187,-7.556689,-4.542132,0.754133,8.515584,-4.638494,0.030002,-5.419886,-1.722315,2.089593,5.049868,1.637970,-7.684723,7.904828,-0.775399,1.823693,-5.562132,-5.043802,-9.254404,-8.529031,2.074904,3.462125,-4.296138,0.318531,4.299585,-4.603110,8.768184,5.939914,-4.815677,7.502683,6.537119,3.371961,-6.905834,-7.423561,6.019114,-1.956814,-3.223072,-7.592376,-8.857133,7.653906,-0.432224,-5.449748,-4.150231,-1.338375,-4.772664,3.530572,-4.503049,3.270438,9.254881,7.501231,-4.956771,2.907855,1.428631,4.956621,-2.858473,9.926638,-1.092253,-4.171164,-1.869556,8.677606,7.648673,-5.079263,0.534264,-4.168710,-6.787438,-7.844329,-7.418825,7.547095,9.645844,3.379151,9.578954,-9.920583,-6.019895,-3.982191,9.596036,4.362173,7.920135,-9.572677,2.139687,6.395444,-1.573858,-6.891842,5.529316,-5.683983,-7.824861,-2.435986,6.137947,5.708073,-1.848981,-2.997417,6.710045,-0.941233,8.562977,-2.064068,6.275567,-9.227883,2.018247,-5.477402,-2.429557,9.001866,-6.702968,4.394259,-2.165393,2.846754,-1.071938,2.697775,5.430567,-2.821359,-6.202365,7.246218,-5.816883,-8.085228,-9.416161,0.363338,1.723972,1.330642,-5.900093,4.299784,4.688394,9.632276,-3.737887,-0.850195,-9.512612,3.229181,3.904863,3.541266,-5.234048,0.967422,-5.106470,-7.552832,4.558972,-4.604627,-7.308065,-3.104792,-8.568315,5.548662,-3.973113,3.867798,0.968808,-2.406749,0.260640,-5.246436,6.417575,4.056323,-8.726849,6.814688,8.178933,-3.417127,-6.418027,-7.936199,-9.142927,6.208508,4.804336,-5.223358,4.346971,2.506189,-0.476948,2.703124,2.321600,4.729662,-3.014282,4.975044,-0.536206,2.596406,-3.897219,-0.134097,8.496449,-2.829374,-7.913009,1.478422,8.312330,-7.982196,3.041088,5.391745,-4.224553,-4.846282,2.693509,6.796732,9.657252,-6.258946,-5.339647,0.935812,7.299550,-1.014371,-5.647462,9.115047,-7.111606,2.289723,5.231438,-5.763087,2.339995,-7.572310,-8.767832,0.010119,-3.904050,8.946297,-8.203841,9.098204,-0.032034,6.704069,0.600821,-5.076232,-8.483654,5.814545,-2.053096,-5.825344,1.985531,8.544747,-9.330158,8.612477,-5.994057,8.028056,9.684569,-3.891580,-6.432962,-3.726682,0.160210,7.666615,-3.998207,0.355425,-7.934523,6.765250,8.803160,2.018711,9.700630,-2.323105,2.154454,-7.362377,-2.512044,8.522655,-9.209886,1.723323,-1.921964,4.759275,4.473378,-8.431768,-6.579260,7.295564,-4.383698,2.832549,-0.806748,6.503600,4.080299,-2.515364,3.829085,-3.172917,-2.261187,9.344791,-8.833129,9.627213,5.049047,0.655809,8.842735,6.692695,5.325186,7.886549,3.845778,-8.056820,-2.531401,-5.010574,-0.954431,0.208229,-6.282925,3.396615,-7.982910,2.759451,-5.355553,4.811465,9.256048,7.061845,-2.623734,-7.826941,-5.130197,-4.930619,-6.304938,-2.163617], dtype = "float32")#candidate|12761|(585,)|const|float32
call_12759 = relay.TupleGetItem(func_6040_call(relay.reshape(call_12726.astype('bool'), [98, 15]), relay.reshape(const_12760.astype('float32'), [720,]), relay.reshape(const_12761.astype('float32'), [3, 13, 15]), ), 6)
call_12762 = relay.TupleGetItem(func_6044_call(relay.reshape(call_12726.astype('bool'), [98, 15]), relay.reshape(const_12760.astype('float32'), [720,]), relay.reshape(const_12761.astype('float32'), [3, 13, 15]), ), 6)
uop_12781 = relay.sinh(const_12761.astype('float32')) # shape=(585,)
func_9216_call = mod.get_global_var('func_9216')
func_9218_call = mutated_mod.get_global_var('func_9218')
call_12796 = func_9216_call()
call_12797 = func_9216_call()
var_12804 = relay.var("var_12804", dtype = "float32", shape = (4, 180))#candidate|12804|(4, 180)|var|float32
bop_12805 = relay.floor_mod(const_12760.astype('float32'), relay.reshape(var_12804.astype('float32'), relay.shape_of(const_12760))) # shape=(4, 180)
output = relay.Tuple([call_12726,call_12759,uop_12781,call_12796,bop_12805,])
output2 = relay.Tuple([call_12727,call_12762,uop_12781,call_12797,bop_12805,])
func_12809 = relay.Function([var_12804,], output)
mod['func_12809'] = func_12809
mod = relay.transform.InferType()(mod)
mutated_mod['func_12809'] = func_12809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12810 = relay.var("var_12810", dtype = "float32", shape = (4, 180))#candidate|12810|(4, 180)|var|float32
func_12809_call = mutated_mod.get_global_var('func_12809')
call_12811 = func_12809_call(var_12810)
output = call_12811
func_12812 = relay.Function([var_12810], output)
mutated_mod['func_12812'] = func_12812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mod.get_global_var('func_8644')
func_8646_call = mutated_mod.get_global_var('func_8646')
call_12956 = relay.TupleGetItem(func_8644_call(), 1)
call_12957 = relay.TupleGetItem(func_8646_call(), 1)
output = relay.Tuple([call_12956,])
output2 = relay.Tuple([call_12957,])
func_12968 = relay.Function([], output)
mod['func_12968'] = func_12968
mod = relay.transform.InferType()(mod)
output = func_12968()
func_12969 = relay.Function([], output)
mutated_mod['func_12969'] = func_12969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10373_call = mod.get_global_var('func_10373')
func_10375_call = mutated_mod.get_global_var('func_10375')
call_13047 = func_10373_call()
call_13048 = func_10373_call()
output = call_13047
output2 = call_13048
func_13049 = relay.Function([], output)
mod['func_13049'] = func_13049
mod = relay.transform.InferType()(mod)
mutated_mod['func_13049'] = func_13049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13049_call = mutated_mod.get_global_var('func_13049')
call_13050 = func_13049_call()
output = call_13050
func_13051 = relay.Function([], output)
mutated_mod['func_13051'] = func_13051
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13059 = relay.const([[[-7,-8,-8,-10],[10,1,-2,-6],[-9,10,-2,-9],[10,5,-8,-5],[-10,3,-8,3]],[[4,3,3,8],[2,-7,5,-5],[10,10,4,4],[-6,2,-1,-1],[-10,-2,4,3]],[[7,2,-4,7],[-6,-3,-2,-4],[3,6,10,-10],[2,1,9,3],[4,8,-10,-3]],[[3,7,-2,-8],[7,-10,1,-7],[-9,10,2,5],[-7,-3,9,-5],[1,-10,5,9]],[[-9,-8,6,-3],[4,4,7,4],[-2,2,5,6],[3,9,3,7],[7,-2,1,-8]]], dtype = "int16")#candidate|13059|(5, 5, 4)|const|int16
var_13060 = relay.var("var_13060", dtype = "int16", shape = (5, 5, 4))#candidate|13060|(5, 5, 4)|var|int16
bop_13061 = relay.multiply(const_13059.astype('int16'), relay.reshape(var_13060.astype('int16'), relay.shape_of(const_13059))) # shape=(5, 5, 4)
output = bop_13061
output2 = bop_13061
func_13065 = relay.Function([var_13060,], output)
mod['func_13065'] = func_13065
mod = relay.transform.InferType()(mod)
mutated_mod['func_13065'] = func_13065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13066 = relay.var("var_13066", dtype = "int16", shape = (5, 5, 4))#candidate|13066|(5, 5, 4)|var|int16
func_13065_call = mutated_mod.get_global_var('func_13065')
call_13067 = func_13065_call(var_13066)
output = call_13067
func_13068 = relay.Function([var_13066], output)
mutated_mod['func_13068'] = func_13068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_13100 = relay.TupleGetItem(func_6874_call(), 0)
call_13101 = relay.TupleGetItem(func_6876_call(), 0)
output = relay.Tuple([call_13100,])
output2 = relay.Tuple([call_13101,])
func_13105 = relay.Function([], output)
mod['func_13105'] = func_13105
mod = relay.transform.InferType()(mod)
output = func_13105()
func_13106 = relay.Function([], output)
mutated_mod['func_13106'] = func_13106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_13220 = relay.TupleGetItem(func_6874_call(), 0)
call_13221 = relay.TupleGetItem(func_6876_call(), 0)
output = call_13220
output2 = call_13221
func_13230 = relay.Function([], output)
mod['func_13230'] = func_13230
mod = relay.transform.InferType()(mod)
mutated_mod['func_13230'] = func_13230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13230_call = mutated_mod.get_global_var('func_13230')
call_13231 = func_13230_call()
output = call_13231
func_13232 = relay.Function([], output)
mutated_mod['func_13232'] = func_13232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12395_call = mod.get_global_var('func_12395')
func_12396_call = mutated_mod.get_global_var('func_12396')
call_13263 = relay.TupleGetItem(func_12395_call(), 0)
call_13264 = relay.TupleGetItem(func_12396_call(), 0)
func_7580_call = mod.get_global_var('func_7580')
func_7581_call = mutated_mod.get_global_var('func_7581')
call_13294 = relay.TupleGetItem(func_7580_call(), 0)
call_13295 = relay.TupleGetItem(func_7581_call(), 0)
func_11250_call = mod.get_global_var('func_11250')
func_11251_call = mutated_mod.get_global_var('func_11251')
call_13302 = relay.TupleGetItem(func_11250_call(), 3)
call_13303 = relay.TupleGetItem(func_11251_call(), 3)
output = relay.Tuple([call_13263,call_13294,call_13302,])
output2 = relay.Tuple([call_13264,call_13295,call_13303,])
func_13316 = relay.Function([], output)
mod['func_13316'] = func_13316
mod = relay.transform.InferType()(mod)
mutated_mod['func_13316'] = func_13316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13316_call = mutated_mod.get_global_var('func_13316')
call_13317 = func_13316_call()
output = call_13317
func_13318 = relay.Function([], output)
mutated_mod['func_13318'] = func_13318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_13332 = relay.TupleGetItem(func_8677_call(), 1)
call_13333 = relay.TupleGetItem(func_8679_call(), 1)
output = relay.Tuple([call_13332,])
output2 = relay.Tuple([call_13333,])
func_13334 = relay.Function([], output)
mod['func_13334'] = func_13334
mod = relay.transform.InferType()(mod)
output = func_13334()
func_13335 = relay.Function([], output)
mutated_mod['func_13335'] = func_13335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_13364 = relay.TupleGetItem(func_5744_call(), 0)
call_13365 = relay.TupleGetItem(func_5746_call(), 0)
output = relay.Tuple([call_13364,])
output2 = relay.Tuple([call_13365,])
func_13382 = relay.Function([], output)
mod['func_13382'] = func_13382
mod = relay.transform.InferType()(mod)
mutated_mod['func_13382'] = func_13382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13382_call = mutated_mod.get_global_var('func_13382')
call_13383 = func_13382_call()
output = call_13383
func_13384 = relay.Function([], output)
mutated_mod['func_13384'] = func_13384
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13410 = relay.const([[[0.622622,-8.127723,-3.512418,-2.069985,-9.789781],[-7.119404,8.278225,8.386190,-6.239062,3.017649],[-2.198270,5.870156,7.998575,7.851401,-0.645979],[0.978066,-5.575557,0.739818,2.538958,3.889914],[-7.619302,-8.584386,5.707500,-7.087862,2.273984],[0.452853,-1.211569,5.184754,-0.762250,-5.571011],[7.935481,-5.548711,2.957490,-7.771256,2.285127],[8.120712,2.305740,-4.362368,9.754637,-5.370302],[-4.579441,1.804999,-7.547065,1.830354,8.195170],[-5.909185,9.782669,-6.701078,-2.828479,7.608301],[-4.187833,4.807145,-8.061643,1.456182,1.730796]],[[-7.340761,9.071055,-9.928510,-4.597721,-8.251275],[3.963488,7.370712,8.669825,0.078875,-2.558148],[-0.579987,3.030805,8.594353,8.765814,-2.179504],[-7.682894,-9.131541,-8.533941,-9.824230,-2.752287],[-7.091866,2.941377,-0.515813,1.032495,-2.985627],[-9.362894,8.588969,7.579122,7.511413,9.743708],[4.855094,3.578823,5.926712,-7.505121,-9.061793],[9.974945,-5.945906,-9.044791,5.725197,-1.944056],[-5.124226,-2.458766,5.473600,-6.956339,-8.988672],[-5.509352,1.840292,-0.676254,5.459947,-5.153750],[0.447105,-7.223699,-1.391274,3.776717,-3.065312]]], dtype = "float64")#candidate|13410|(2, 11, 5)|const|float64
uop_13411 = relay.cos(const_13410.astype('float64')) # shape=(2, 11, 5)
bop_13413 = relay.greater(uop_13411.astype('bool'), relay.reshape(const_13410.astype('bool'), relay.shape_of(uop_13411))) # shape=(2, 11, 5)
func_9312_call = mod.get_global_var('func_9312')
func_9313_call = mutated_mod.get_global_var('func_9313')
call_13421 = func_9312_call()
call_13422 = func_9312_call()
output = relay.Tuple([bop_13413,call_13421,])
output2 = relay.Tuple([bop_13413,call_13422,])
func_13448 = relay.Function([], output)
mod['func_13448'] = func_13448
mod = relay.transform.InferType()(mod)
mutated_mod['func_13448'] = func_13448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13448_call = mutated_mod.get_global_var('func_13448')
call_13449 = func_13448_call()
output = call_13449
func_13450 = relay.Function([], output)
mutated_mod['func_13450'] = func_13450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5593_call = mod.get_global_var('func_5593')
func_5595_call = mutated_mod.get_global_var('func_5595')
call_13492 = func_5593_call()
call_13493 = func_5593_call()
output = call_13492
output2 = call_13493
func_13503 = relay.Function([], output)
mod['func_13503'] = func_13503
mod = relay.transform.InferType()(mod)
mutated_mod['func_13503'] = func_13503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13503_call = mutated_mod.get_global_var('func_13503')
call_13504 = func_13503_call()
output = call_13504
func_13505 = relay.Function([], output)
mutated_mod['func_13505'] = func_13505
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13511 = relay.const([[[-2.618673,-2.771609,7.644894,-6.100898,-0.830001,-8.609753,6.871890,-3.925682,2.523514,8.381460,9.838757,-1.676734,7.923336],[-4.853554,-4.022108,-9.085720,7.707354,-4.577707,2.626567,9.058420,8.310138,2.182339,-5.582990,-0.187610,0.437181,-7.293685],[7.164481,-9.844300,-0.501158,8.274388,1.588899,4.461906,-1.868540,9.429386,-3.727445,5.643837,-5.730942,-5.959017,-5.916497],[-1.129521,-3.635630,-7.280642,0.731926,0.129718,1.812367,3.752558,-7.241795,0.726789,-7.258898,-6.163645,-2.934378,-3.199316],[-1.395680,3.112944,0.280022,2.869752,-9.346057,0.012176,-0.558781,0.205779,5.814234,-1.153530,-0.993397,9.308400,-5.638859],[7.131765,1.966400,-6.170995,1.060028,6.821903,8.068822,-4.751150,-8.264327,-7.824471,-9.511586,9.019826,-4.582235,-4.871412],[2.834222,3.197091,1.807272,-9.984132,-4.170875,8.999157,4.925250,-9.362446,5.686675,-0.003195,-0.601450,-3.355548,2.362417],[-5.785878,-7.490851,-2.681742,-0.329729,4.294214,-2.909468,3.176736,-5.772067,-5.971458,7.053345,7.907010,-0.569495,-1.089246],[-9.693617,5.606624,-6.677511,0.629083,-6.121793,4.352427,4.672707,4.967087,-0.834687,-1.967457,9.459561,-1.329433,2.339363],[0.792901,-3.512382,-4.702126,-0.039033,-9.420355,3.623872,4.795530,3.381013,7.147965,-3.084396,-3.116225,6.159546,3.723986],[-0.085364,1.160588,8.606351,1.225381,-8.047146,-7.235414,9.679703,-7.996303,-3.034919,4.454824,-3.986732,-1.262872,6.203555]],[[0.223706,8.860358,0.822303,8.489945,2.164051,6.910500,-0.230348,-9.430245,-6.605039,3.667943,9.174599,2.887702,4.293190],[6.839918,-3.193837,-1.239439,7.628740,-6.479669,1.364700,6.015779,8.630643,1.235067,-3.182650,-1.139265,-7.904415,1.790192],[-2.600023,-5.535894,-9.785124,4.430276,-5.091852,9.232294,-6.725571,-7.234235,6.094450,-6.365219,-6.346736,-2.967819,-0.232251],[3.932292,-6.934494,-0.697442,1.674257,-2.100131,-9.794967,-4.403683,5.406828,-1.854082,-6.596798,-6.645877,-6.435067,-2.163510],[-0.668899,3.198211,6.208584,7.594445,-9.887160,-8.342634,-3.332344,3.355784,5.848054,8.925530,7.998087,-5.855779,-5.037881],[1.366459,4.032344,2.921769,-6.562168,-5.451173,-7.854055,2.439782,3.987286,-8.908296,-9.042833,-6.079357,-0.537470,3.566431],[0.797252,3.400764,-5.285502,-7.267752,-6.156105,6.482084,3.830496,-7.426904,-7.778148,-2.062400,-9.421166,9.463086,-8.353387],[-1.363036,-8.088590,5.490225,0.845853,4.523221,0.573269,1.935290,-6.309276,1.960018,1.479492,3.667755,9.412808,5.540619],[-2.676648,6.826282,4.633984,4.757790,6.868990,2.945330,1.967350,-4.153974,3.277055,-6.282045,-3.474311,5.061070,-6.524840],[5.580206,-1.053503,1.598830,-5.194949,8.624413,-3.013665,1.360702,2.820205,-2.538111,0.458070,-5.875665,-2.655626,-8.732103],[-0.768253,-0.545652,-5.817051,-8.625899,9.960584,-6.527817,-3.409690,4.023741,-6.508638,-8.522569,6.834795,3.817576,4.837451]],[[0.882702,-5.594722,6.984690,6.771704,6.027181,8.569895,-0.232943,6.723858,-6.689274,1.954032,-2.576232,-8.196982,6.101054],[5.774406,9.555511,-0.676276,7.254300,-1.796883,9.290523,-1.627272,-2.086605,9.173363,-9.379908,2.263775,-5.361461,-0.321959],[-0.703990,-8.384934,1.899216,-6.778975,-3.047760,8.152135,-5.601078,-3.592962,-4.320443,-7.729576,8.062089,9.137763,0.800815],[-0.006947,9.361333,-0.794533,-1.975637,-2.796978,8.807711,-8.785014,4.850071,0.863432,0.394690,-8.356520,-7.505220,-8.243455],[-9.354565,-6.006110,-7.268796,8.526345,7.298235,-4.331341,-4.114981,2.244759,8.411906,-2.628339,-3.646735,-5.450219,8.129936],[9.557601,-5.967277,2.472965,6.820687,-9.854320,9.954172,-0.153441,2.491051,-6.612248,3.902665,7.681411,4.493372,5.067920],[2.340340,7.875175,-0.276492,9.900450,7.065976,5.571467,-0.777996,-4.927879,-6.911098,-2.833443,3.047165,7.682198,2.846325],[-5.886985,-7.224449,-2.057828,8.536666,9.295680,-9.422715,-8.804346,7.853324,-4.874251,5.419174,2.645238,0.089932,-6.303046],[-8.176101,0.620953,-3.984910,-1.525830,-9.526424,1.000490,0.126074,2.254954,8.074650,0.650497,-6.804313,-4.279752,-7.521539],[8.508545,3.230787,8.340648,8.090657,9.304860,-3.119162,6.412094,-1.919478,-2.743715,7.229747,6.754357,-4.418333,5.770027],[6.756380,-9.598662,-7.404937,8.455406,2.802601,7.710571,-0.198065,3.011605,0.997490,4.945287,2.935305,3.634586,1.065643]],[[3.412926,9.842858,-4.590076,-6.107201,-4.388557,-7.785846,-1.517412,-6.624973,5.850224,7.750195,8.350220,9.191687,-5.080005],[4.588845,8.065881,9.838934,-5.958262,7.564909,6.101021,2.002615,-6.540255,9.429570,-1.776824,0.889070,-6.977517,-9.268037],[7.248784,-0.601171,-6.463620,8.646788,7.534058,-0.407497,3.132702,-6.309882,9.780833,-3.884845,-6.124447,-9.750346,-2.304086],[-9.935090,-1.263422,-1.770341,-7.127874,-3.839691,-0.602084,-1.093793,-1.280760,1.799762,-5.698254,-6.802444,-2.408364,-4.842610],[-0.577084,3.228310,-2.293717,-2.920056,-6.166044,-0.546492,7.489274,2.083257,-2.466827,4.680176,-7.372307,-4.169563,1.648074],[-9.917834,7.214536,-4.484744,4.071307,-4.865781,7.421318,1.942583,-5.365240,-4.481322,-4.953054,7.076829,3.849557,3.041981],[-2.107753,-8.548032,-0.592830,3.398941,8.989471,6.171168,6.951320,-3.121669,-3.470824,-1.727588,2.169863,2.063821,-9.423626],[-0.515080,6.205093,5.986132,3.882548,6.015787,-3.086683,-8.120226,-0.057543,-7.492920,4.905080,-6.889235,-3.856706,-7.702225],[3.562728,6.912804,1.107444,1.010839,0.314325,-2.769175,2.942405,-5.570242,-6.446587,4.697419,9.430402,-9.365264,2.101273],[-3.297562,4.497813,4.247048,-0.189245,-8.924405,6.692944,0.969710,-6.116078,6.965878,5.520203,7.756159,-4.537722,3.573980],[-8.616553,6.863304,-2.735597,-1.131293,-8.886773,2.265166,-6.642630,-2.607353,9.061040,4.855662,0.670895,7.542340,-9.623640]],[[-4.712106,-7.227279,-1.640286,0.613718,-8.265770,-2.954271,4.601790,-4.064983,0.028231,-3.279406,-3.791151,4.722870,5.338916],[2.111613,-2.167964,6.950193,-9.245563,-8.028500,7.798508,-7.542951,9.956875,-7.742453,-0.846795,9.602459,7.792587,1.724757],[-6.653941,9.488371,-3.608530,-9.294020,9.894100,1.718734,2.082115,-7.197367,-4.491118,-2.709468,3.768478,-3.903944,-4.139457],[-4.780789,-8.438360,1.797875,-5.804276,-5.921117,6.949364,0.962024,4.169414,2.367119,-0.888600,2.639927,-0.007419,5.441566],[-4.717625,7.695282,3.186092,-0.309178,-1.513584,-8.471680,9.786350,9.396453,-5.302194,8.140088,1.101792,-8.375093,-9.123244],[-3.975542,-0.738622,4.729622,-3.078038,5.578593,-8.341505,0.893077,6.907263,9.826934,-8.018956,-2.221165,-4.903842,-3.534063],[-0.660969,6.708618,-8.013263,8.597129,8.835065,1.540730,-0.472766,-8.515196,6.186229,5.194060,9.912557,9.755359,0.470129],[-9.049331,6.314649,6.275635,-8.303955,-1.498968,2.347760,8.931734,-2.561790,-4.569124,6.518025,5.941142,-8.276036,7.959710],[-7.570913,7.626706,-7.651296,2.090734,0.467158,3.941908,3.933989,-5.558838,-9.052492,-4.379597,0.508717,0.279046,6.287387],[9.084246,1.647353,8.051484,8.662174,6.199208,2.601152,4.288988,2.827249,-6.369301,-8.389283,5.384191,-5.882973,-5.408643],[-8.412389,-4.837171,-1.701402,4.594643,-3.204455,7.523564,-8.690262,-8.011828,0.950768,-9.151992,-3.629259,-2.424762,5.548546]],[[5.869763,5.653927,1.122264,8.147297,2.178131,6.321234,3.161459,0.811924,3.457817,7.407157,1.381402,8.417964,-1.269871],[-3.987601,1.141761,-3.270999,4.828771,-1.638672,-7.806529,-4.288432,8.976137,-1.138211,-5.678530,-7.043495,4.719280,2.786447],[-5.765432,-3.708947,-3.241352,4.768813,5.974583,9.653035,9.059591,7.633452,3.168606,8.680358,-7.279266,-7.807076,-1.278923],[-8.354897,-4.580130,-3.097002,8.398991,7.721364,-3.845774,9.146369,2.061386,-9.484102,-0.190869,-0.675433,-6.074446,-0.287814],[1.092565,2.343994,0.615510,-8.493977,2.684526,9.637387,5.314227,-7.590394,4.841131,0.887084,-1.547263,-6.610287,-7.927331],[9.064983,-6.330172,4.201353,-8.762018,4.339712,-9.338665,1.604531,5.679830,-2.176405,-6.959752,-5.432505,-2.912483,-2.678121],[4.715481,0.528891,8.770396,-0.061054,6.949837,4.635101,-7.799563,6.642295,-1.959886,-1.891538,2.354491,6.889580,-7.136556],[-4.277567,6.771263,2.149698,2.105140,-8.371154,9.203478,-0.860814,-3.013946,-6.903123,8.835478,-6.666044,9.991939,7.213192],[6.106877,-3.535881,-8.500337,4.701214,2.103890,-0.467711,6.602069,4.683450,-8.856314,2.242371,0.677566,0.066830,-6.562368],[0.386930,7.597011,-6.560337,2.625315,-3.989723,7.400068,2.343722,-5.904612,4.002831,9.585392,0.384184,0.878385,-1.598781],[-6.733074,0.961031,4.638503,-7.002139,2.109855,-9.397981,9.138016,-0.910619,-3.713675,1.062377,5.364942,-3.880504,3.792129]],[[-8.102720,6.936902,-6.306896,2.004855,-8.156046,-0.639109,4.674679,8.342942,-3.733057,-5.151014,-5.681016,-2.002917,1.462159],[-7.948121,-6.288129,5.028764,-4.189979,-3.695764,2.367706,-6.651421,-7.373086,-6.833792,-4.632342,9.962460,2.415532,8.387916],[-4.524485,9.971731,-1.804943,-3.705846,-9.714385,4.509146,-6.975720,1.450053,2.014113,4.919722,-0.774183,5.444418,2.029747],[4.248374,-7.022012,-5.646372,-2.905391,5.127997,-9.871227,-6.860239,1.256179,3.693579,7.205596,6.805836,0.288395,-4.405484],[0.528698,-0.908453,0.761605,7.220808,5.615595,-9.203529,4.805001,-7.573267,5.855069,-3.956292,-1.547669,-9.869796,-8.546020],[8.761645,-7.453882,1.459266,4.778754,2.221371,6.054052,3.849560,-4.560111,1.233753,2.493663,5.324355,-8.075120,5.469911],[-1.475082,-6.523317,-7.272287,-3.171878,9.650684,-5.829217,4.531012,0.689140,-0.321420,2.147263,9.312178,-5.098249,-6.765467],[9.722364,-5.637063,-4.723035,8.565416,0.017099,-2.019345,-0.266847,-5.999188,-9.166538,-2.969099,-6.768600,-6.533016,-4.784963],[-6.537772,-1.969108,-7.117935,4.410708,1.443743,1.295790,-2.035508,-0.573688,-2.039954,6.266959,8.202677,7.226304,6.505689],[-2.990223,8.385086,0.433779,1.757110,1.959495,-7.741473,-2.136523,-5.607791,-1.741226,5.629074,8.629156,9.204473,-7.258769],[-6.594686,6.339518,2.983369,-0.070903,-4.503089,4.655990,4.659870,3.812341,5.908189,1.886344,-6.595948,5.130591,-8.976442]],[[5.206545,4.470377,-3.653376,9.726717,3.770072,7.432905,-5.645234,-0.644080,-3.614624,-9.878826,6.087720,6.273706,2.117819],[-9.698144,8.720470,2.011465,-1.643233,-8.869645,-6.111056,-4.877772,6.252871,0.465519,5.285349,3.248124,-0.884934,-3.421683],[3.924766,-1.234603,1.232896,0.259981,-2.509773,9.985037,9.928006,7.977903,-7.125294,-1.314154,-7.095812,6.522326,4.167478],[5.926311,-0.917575,9.294501,6.560644,-1.967087,-7.856144,-3.399662,-3.397876,7.076434,5.055782,9.259991,4.303747,6.046802],[-9.808413,7.831405,5.359102,0.695793,-8.804127,-5.296966,-9.481667,-5.137133,-6.748673,6.127428,9.240105,3.653524,-9.938735],[-4.908481,-9.068049,2.508265,-7.671003,-3.526353,4.623970,9.670440,-8.624666,2.006859,-6.848213,6.517099,-5.648392,9.473320],[2.530913,5.243487,0.548677,0.607892,2.755325,-4.295055,-9.062919,-7.959044,-9.194478,1.744931,3.502880,-6.261391,6.994907],[-0.359270,-4.241782,9.445535,-4.854873,0.050708,-5.439512,1.143944,8.316985,6.547779,-1.308407,4.838239,0.607948,7.085240],[-5.573805,-8.079441,2.884713,2.129026,-0.279565,-6.250514,2.094802,-4.430478,-5.117708,-0.086238,-8.725585,8.917129,2.542179],[8.270916,-8.019201,4.958560,-4.577526,-5.329380,-0.013926,-7.982796,-7.770817,-1.528317,-9.829976,2.504390,-3.958212,9.623807],[4.098862,-7.091690,9.846249,5.298429,-1.867956,-8.336750,-0.892772,9.481024,5.374387,5.185778,-6.753830,6.014444,-7.385526]],[[6.665582,-4.650015,9.279009,-1.264669,-8.306764,-8.441987,7.903353,-1.563910,0.014881,-0.755129,-1.055080,-2.564560,1.771299],[7.442245,-3.001335,5.346339,-8.571792,-4.388747,5.930831,1.714955,-2.646014,8.033020,4.157310,-9.220842,-1.384060,9.199491],[-8.705656,-5.643517,-7.548250,-7.702571,5.409020,-6.818119,-3.534518,-7.876174,3.768054,1.314209,2.428656,3.942882,3.195780],[7.859657,-0.525677,-9.385853,5.029797,-8.730593,-8.706963,-4.514592,-1.968195,6.020537,0.363491,-7.420105,-8.654738,-2.890526],[-7.865488,-6.448768,7.121039,6.027363,-4.051372,-4.751885,-2.202555,5.773096,-9.027661,3.553654,-6.414519,5.649972,-6.256698],[2.064364,7.832642,-6.788185,3.441365,6.435504,-1.933842,8.391825,-6.092327,-6.363832,-9.879879,9.208004,9.857854,-6.499542],[-7.494746,8.669597,1.110913,6.396266,5.902568,8.589128,-7.218219,3.915009,3.568945,6.340191,5.792195,8.060039,9.539133],[-7.741633,5.827543,-7.355969,-9.094117,-7.290913,-4.347180,-4.511143,4.730931,5.272242,6.627426,-4.456926,0.456546,-2.790452],[-3.865763,-0.227981,5.764197,-7.304523,4.862717,-4.317262,6.750101,-2.164516,-2.658359,6.030543,-9.619425,1.099330,3.783490],[-5.347841,1.752836,2.691409,-5.795395,0.806370,-3.531723,-3.086044,-1.659357,4.880737,9.764224,-4.093538,6.103726,3.476071],[-7.317512,9.088305,5.923903,-5.545408,-9.535696,-3.421880,1.795390,-6.443563,4.343714,-7.519490,1.536331,2.103481,0.950636]],[[-5.397637,8.912220,-1.008105,-9.770767,-0.898616,1.147625,-1.420794,-4.553381,9.647836,-1.705532,-1.474104,-6.083040,-8.576321],[-5.093184,8.726344,0.445045,-6.772749,8.930549,-7.966709,-6.660521,7.590032,1.689172,-3.602816,-1.269730,5.324015,4.563631],[1.644067,-3.367368,-2.725265,7.222442,-9.442862,4.141758,-5.899220,9.533747,8.604711,0.009446,-0.297324,-0.409185,-7.132131],[-1.183067,-6.899386,5.206694,5.341588,2.210585,3.191129,1.448456,7.289905,-3.984458,-0.520026,-0.848798,-3.972882,-2.062604],[-4.364850,9.144424,-6.077268,-7.832296,9.035631,-4.542669,-9.382748,-8.025202,-2.016654,1.799283,6.185967,2.852259,-6.535407],[0.057702,2.420362,9.426695,-2.341203,0.849059,-9.507542,2.180272,9.308062,-7.612067,0.857534,7.640927,7.034194,6.777663],[3.562520,-6.602909,-4.696945,-1.536167,6.300959,0.755263,-1.688929,-5.765733,0.603890,-5.292557,3.525068,-6.688454,-6.487261],[5.881084,-2.909192,-8.964833,2.728219,5.390996,-5.615826,-7.276765,9.503992,0.299205,-9.512686,-1.997946,-6.335639,-8.592438],[-7.314048,-8.858984,4.286820,-0.738272,7.773534,5.018197,1.507295,-1.144722,-3.436667,3.274485,3.006593,0.851510,8.610261],[5.068362,-1.790789,1.022036,-5.373389,1.251389,7.344119,6.338995,-4.696333,-7.451091,-7.663961,2.565583,6.196880,-1.080692],[-3.778808,-1.492885,-0.592209,5.320400,2.456044,6.679760,-6.414907,2.148636,-3.007930,-6.530223,6.253694,-2.169430,-7.556152]]], dtype = "float32")#candidate|13511|(10, 11, 13)|const|float32
uop_13512 = relay.erf(const_13511.astype('float32')) # shape=(10, 11, 13)
func_6977_call = mod.get_global_var('func_6977')
func_6983_call = mutated_mod.get_global_var('func_6983')
var_13516 = relay.var("var_13516", dtype = "int64", shape = (40,))#candidate|13516|(40,)|var|int64
const_13517 = relay.const([[-1.013712,-5.081273,-6.024244,-9.654112],[6.771546,5.942674,9.096147,5.792384],[-2.949374,9.699780,7.981329,-5.753358],[-4.972052,-6.965947,2.916990,2.696835],[0.019256,-6.013455,-2.102730,-8.750349],[-2.738219,-9.384866,0.621101,6.676055],[-4.379398,9.179143,-7.602674,-0.669364],[-6.688301,9.566492,-6.965554,9.837874],[4.060543,0.684423,-2.201671,6.474337],[-3.257269,-9.706438,-0.861551,3.802258],[-9.149840,-1.869794,-4.516134,3.395437],[9.689921,-4.651856,5.125017,-0.602317],[-2.978542,5.643747,6.114525,6.426898],[-9.414300,-2.537768,8.623626,2.703587],[-3.418293,-9.983449,-0.693005,7.902397],[2.005577,6.401253,-1.864162,3.890206],[-4.803511,4.912574,5.312166,6.902914],[3.288165,-5.621801,2.416629,-1.326429],[6.440265,-7.891281,6.458282,-5.602632],[-3.572071,6.234020,8.933557,1.483862],[8.148298,5.311239,8.909626,-2.598368],[-7.950876,5.657425,-8.204269,-1.960902],[-1.947748,-9.496867,-1.638730,-1.038062],[-9.015790,6.018865,-8.924178,8.532010],[-6.135463,8.263163,2.807289,-0.182754],[-7.786003,4.475275,8.059087,3.715762],[2.578129,2.109754,-1.179137,-3.718837],[-4.861857,-5.926789,-6.165663,-0.757601],[-1.344440,-5.968287,-1.752320,-0.103267],[-6.784680,8.113612,6.027098,0.021352]], dtype = "float64")#candidate|13517|(30, 4)|const|float64
var_13518 = relay.var("var_13518", dtype = "int64", shape = (132,))#candidate|13518|(132,)|var|int64
const_13519 = relay.const([9.476065,-2.096962,-1.608629,-0.105601,-6.307960,9.035809,2.639453,-3.768987,4.419404,2.576680,-4.734970,0.908698,-8.986333,8.310207,-4.288612,2.256793,-4.931987,4.004754,-6.570577,0.105860,-2.020865,6.467794,-4.593179,0.591204,-6.978250,-8.908193,-3.777380,4.132403,-6.798529,-2.524524,-6.171018,-6.553741,7.973443,-4.028950,9.043745,0.874407,-0.746052,3.376279,-5.861330,-2.749190,6.099626,3.187005,3.110576,-6.044906,9.691651,-8.774140,-6.898717,-6.762140,8.563152,-4.807745,-0.755477,-4.132891,-9.066693,-8.835950,7.815403,2.318858,2.022508,-8.483791,-2.450454,-2.447327,2.342813,8.425366,2.459703,7.685749,-3.049637,3.717158,7.436212,4.762218,8.797425,-8.452118,6.537616,-5.412552,-9.940474,7.736276,8.148823,-2.240736,-4.646514,2.613533,5.362444,-9.214778,-9.687051,4.989593,-4.936809,6.662566,-2.266793,-3.805979,-4.624076,-9.859565,7.469555,4.532993,-0.953698,5.123000,3.119031,-8.471158,9.957927,8.076163,1.246187,-9.435686,8.830247,5.014048,5.821586,1.701364,-1.182979,3.235243,4.134427,2.223299,-0.748978,3.801987,3.152132,8.629849,-2.918390,-8.700442,6.341945,7.923608,-5.731576,-0.673996,-2.602608,8.478045,8.695850,-7.660862,1.225617,-3.167925,-5.341558,-4.056647,-3.674245,1.172305,-8.158750,-2.875914,-4.478174,-0.664803,-1.524680,-6.260070,9.288501,-6.718362,-1.313550,5.977853,-8.061753,-2.166784,3.072585,-0.217316,-3.596438,8.776816,9.239928,-9.055635,9.091025,-7.763301,2.254432,1.473501,8.284293,9.551821,-7.164511,7.783791,4.856370,-2.384619,-3.053430,-7.065303,-2.669605,4.997425,9.846730,9.791018,4.408763,-8.775123,-5.342994,8.572188,7.081237,-8.320266,7.425177,-8.451796,1.882840,-7.526319,3.736318,-4.838677,-5.116616,1.258084,1.703494,-8.090657,2.620819,4.389833,-7.238455,0.114554,5.814924,-7.381671,9.361335,3.915367,5.103721,8.228973,-4.520852,-4.312693,2.768828,-3.339411,-3.983284,7.549093,-6.965602,0.201016,9.481438,-3.597178,-2.966323,-9.388907,-2.575677,-7.863098,2.129011,-2.357183,9.771735,-8.286273,0.250973,4.006530,8.703477,4.009172,7.130973,5.557482,3.304759,-3.192422,-8.818076,7.730293,-1.446304,-9.970898,0.103513,-0.534748,9.429972,-0.625800,2.179742,-7.263198,-0.363049,-9.686110,-0.817923,9.780418,-7.245786,-9.931558,-5.253063,1.313997,4.719947,-4.564326,-0.115026,-6.186960,4.063875,-2.112380,-3.176336,0.646973,-2.334673,2.415529,2.717087,-2.225921,-7.729161,-5.672025,3.131991,2.638862,4.201403,5.686227,-1.826537,7.492188,-2.772644,8.267061,-9.238783,-0.834043,-2.035506,-5.279073,-9.086613,8.669020,9.449343,0.821045,3.305625,9.762539,-9.643990,8.848963,-7.583946,-2.767970,-5.234113,-6.765480,-7.448581,-0.335200,-0.808638,9.727171,2.217802,6.307689,-6.895579,6.975123,2.142381,1.805946,-7.730162,2.022568,0.944562,6.859349,9.171267,6.496230,-9.086192,-1.215261,-8.751241,6.643723,2.656638,-2.408868,4.245429,1.775703,-7.258340,-6.532519,7.639884,-2.113210,5.805837,8.526949,3.269598,0.147746,-9.224681,-3.680480,9.689516,-1.210507,-9.913232,-7.336819,1.078596,-5.965285,-1.038114,-6.802617,-4.187620,7.772806,-5.852678,-1.178851,7.133436,-7.798968,-6.865993,-4.958865,-4.088627,-3.383025,1.616810,0.435350,-1.305830,-5.742327,-5.907300,2.980553,6.160232,9.053971,7.817807,1.980229,4.042920,-3.412858,-2.082352,5.206814,0.296883,2.972341,-3.449742,5.327474,3.401516,-2.240724,-2.486708,-4.126752,-9.343157,-0.879850,-4.707739,-8.182334,9.324114,6.667575,5.963920,-5.778250,-5.420616,2.715601,-9.156832,7.028701,-4.078340,-8.994153,5.689130,6.888490,-2.529029,7.778211,5.127337,-1.925741,-7.657232,0.231661,-6.311827,4.150558,9.233286,0.505811,1.475862,0.500604,-5.860624,0.073884,6.632426,3.785555,-0.895633,-1.156380,-7.623508,-5.274085,-9.158296,-1.123845,2.344527,6.899648,-7.264474,9.245835,3.359790,-7.873192,-6.408899,-4.536500,-2.553907,7.253837,-2.529680,-2.213517,-3.228127,-2.549439,-6.083399,1.954610,-6.802447,7.235712,2.571148,-4.074256,8.115308,1.373927,-7.954302,4.115067,1.550072,9.497340,-1.356902,8.625082,-8.519995,0.900389,-8.534234,2.135141,1.051574,-5.843421,3.055706,-6.011213,4.951957,-7.999851,9.221298,-0.691180,-3.371371,-6.781271,9.145673,2.477852,7.208746,5.622187,5.305572,-9.011552,5.423668,5.748295,-7.077564,5.572856,3.926292,4.071809,-1.975093,-3.940955,-0.685741,1.245541,-0.966171,5.014228,-1.664223,5.545451,2.311842,-5.231878,-5.891085,8.744734,7.175269,-1.342643,-2.765744,1.549333,9.500448,9.063586,0.879909,-5.715921,2.668229,1.396868,-1.749819,1.329130,6.079489,-2.809624,-4.124187,-4.482028,-4.301625,-9.344730,-2.360442,3.105967,5.301243,9.782250,-0.660108,-5.292917,-7.130113,6.775555,7.823639,-8.406193,-0.724117,-9.189041,3.345834,1.417847,-4.696554,-0.930397,8.390451,-3.180737,3.887207,5.146323,0.559139,3.762587,-3.259435,-2.584979,-3.635585,-9.766755,6.123011,8.048860,9.609378,8.165337,-2.238722,-1.112571,7.750113,9.278078,5.345493,-8.841619,-1.701092,-7.734692,-2.228350,-2.175880,5.735520,-6.679239,-3.516618,6.705430,-2.105902,1.360981,3.045545,-9.099242,-9.671771,5.394013,8.387242,9.043160,6.015288,-0.735847,-0.821608,-7.274794,8.707208,0.839090,-3.784508,6.731187,6.413887,-5.437465,-8.645474,2.183011,-8.893190,-8.181646,6.813263,4.699492,5.862498,-2.826164,0.599758,-8.716615,3.414516,-7.483764,-7.867688,-3.418205,-9.171932,-5.889363,-1.287541,5.408990,-8.603635,-7.077920,4.798618,8.321102,9.501487,1.688630,-9.224050,0.019434,4.485608,-2.320151,7.930898,7.247828,0.519309,-8.184651,1.612858,-6.502081,-4.675763,0.332797,-2.637464,-3.845290,1.367305,-4.195777,4.206643,6.495240,8.112771,0.213270,1.131050,-2.400648,-2.639701,-0.353984,6.457438,-1.408027,6.544307,9.459658,-4.580971,2.714251,2.801042,4.614617,9.406993,8.019502,-3.548392,5.590495,3.578404,-8.774053,-8.206788,-7.087148,7.952125,5.208494,-8.991048,4.692380,8.901115,-0.977719,-1.389538,5.215699,1.749887,3.367712,0.111613,2.304440,-1.404460,8.425856,-2.003433,-5.987588,-1.517376,-2.463400,7.715039,9.077791,-5.039558,7.289360,0.026690,-3.886174,-2.699103,5.141622,-7.654421,-1.328665,-5.963359,4.510561,5.284151,1.615823,-6.010171,0.459626,3.309468,-8.328485,-1.410571,-8.005060,-3.914638,-5.541728,-5.994377,9.696187,-9.233553,-8.737428,5.404574,8.878159,4.374524,-3.194956,-6.970091,5.040627,-4.124824,1.073098,-8.538808,-9.184923,-0.031887,6.530037,-5.936673,2.548520,-7.505043,-4.444518,-3.445006,0.536253,-5.738026,8.055798,6.508415,-9.918305,-9.235178,-2.929138,8.587994,8.877083,-2.044107,7.979158,1.656456,4.796369,-7.384590,1.028507,-0.985997,-9.362338,-6.107736,8.817425,0.061634,8.704397,-2.015766,-6.919674,0.184718,9.392033,-4.881856,-1.369877,-7.337329,8.987742,2.873270,8.850783,4.028691,-3.962403,7.078360,1.639360,5.004022,-4.647738,2.085058,-3.424722,-9.197183,-7.405317,-7.733061,9.518742,-0.919070,1.998974,6.598399,6.198681,-5.837671,5.997048,-0.356704,-6.420993,7.209856,9.660409,2.580543,5.621058,4.745740,-7.051546,1.149240,-7.965833,1.707246,3.579548,-1.501941,7.335741,8.059737,-6.954176,-8.721015,4.096103,4.034777,-0.429099], dtype = "float32")#candidate|13519|(720,)|const|float32
var_13520 = relay.var("var_13520", dtype = "float32", shape = (1248,))#candidate|13520|(1248,)|var|float32
call_13515 = relay.TupleGetItem(func_6977_call(relay.reshape(var_13516.astype('int64'), [40,]), relay.reshape(const_13517.astype('float64'), [120, 1]), relay.reshape(var_13518.astype('int64'), [3, 44]), relay.reshape(const_13519.astype('float32'), [720,]), relay.reshape(var_13520.astype('float32'), [1248,]), ), 10)
call_13521 = relay.TupleGetItem(func_6983_call(relay.reshape(var_13516.astype('int64'), [40,]), relay.reshape(const_13517.astype('float64'), [120, 1]), relay.reshape(var_13518.astype('int64'), [3, 44]), relay.reshape(const_13519.astype('float32'), [720,]), relay.reshape(var_13520.astype('float32'), [1248,]), ), 10)
func_5788_call = mod.get_global_var('func_5788')
func_5790_call = mutated_mod.get_global_var('func_5790')
call_13529 = relay.TupleGetItem(func_5788_call(), 0)
call_13530 = relay.TupleGetItem(func_5790_call(), 0)
uop_13536 = relay.atanh(uop_13512.astype('float64')) # shape=(10, 11, 13)
uop_13552 = relay.sinh(uop_13536.astype('float64')) # shape=(10, 11, 13)
output = relay.Tuple([call_13515,var_13516,const_13517,var_13518,const_13519,var_13520,call_13529,uop_13552,])
output2 = relay.Tuple([call_13521,var_13516,const_13517,var_13518,const_13519,var_13520,call_13530,uop_13552,])
func_13555 = relay.Function([var_13516,var_13518,var_13520,], output)
mod['func_13555'] = func_13555
mod = relay.transform.InferType()(mod)
var_13556 = relay.var("var_13556", dtype = "int64", shape = (40,))#candidate|13556|(40,)|var|int64
var_13557 = relay.var("var_13557", dtype = "int64", shape = (132,))#candidate|13557|(132,)|var|int64
var_13558 = relay.var("var_13558", dtype = "float32", shape = (1248,))#candidate|13558|(1248,)|var|float32
output = func_13555(var_13556,var_13557,var_13558,)
func_13559 = relay.Function([var_13556,var_13557,var_13558,], output)
mutated_mod['func_13559'] = func_13559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mod.get_global_var('func_7071')
func_7072_call = mutated_mod.get_global_var('func_7072')
call_13589 = func_7071_call()
call_13590 = func_7071_call()
output = relay.Tuple([call_13589,])
output2 = relay.Tuple([call_13590,])
func_13616 = relay.Function([], output)
mod['func_13616'] = func_13616
mod = relay.transform.InferType()(mod)
mutated_mod['func_13616'] = func_13616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13616_call = mutated_mod.get_global_var('func_13616')
call_13617 = func_13616_call()
output = call_13617
func_13618 = relay.Function([], output)
mutated_mod['func_13618'] = func_13618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10030_call = mod.get_global_var('func_10030')
func_10031_call = mutated_mod.get_global_var('func_10031')
call_13625 = relay.TupleGetItem(func_10030_call(), 0)
call_13626 = relay.TupleGetItem(func_10031_call(), 0)
output = relay.Tuple([call_13625,])
output2 = relay.Tuple([call_13626,])
func_13634 = relay.Function([], output)
mod['func_13634'] = func_13634
mod = relay.transform.InferType()(mod)
mutated_mod['func_13634'] = func_13634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13634_call = mutated_mod.get_global_var('func_13634')
call_13635 = func_13634_call()
output = call_13635
func_13636 = relay.Function([], output)
mutated_mod['func_13636'] = func_13636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13616_call = mod.get_global_var('func_13616')
func_13618_call = mutated_mod.get_global_var('func_13618')
call_13655 = relay.TupleGetItem(func_13616_call(), 0)
call_13656 = relay.TupleGetItem(func_13618_call(), 0)
uop_13657 = relay.sin(call_13655.astype('float32')) # shape=(3, 13, 15)
uop_13659 = relay.sin(call_13656.astype('float32')) # shape=(3, 13, 15)
func_6856_call = mod.get_global_var('func_6856')
func_6860_call = mutated_mod.get_global_var('func_6860')
const_13661 = relay.const([False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True], dtype = "bool")#candidate|13661|(1470,)|const|bool
call_13660 = relay.TupleGetItem(func_6856_call(relay.reshape(uop_13657.astype('uint64'), [3, 13, 15]), relay.reshape(const_13661.astype('bool'), [1470,]), ), 1)
call_13662 = relay.TupleGetItem(func_6860_call(relay.reshape(uop_13657.astype('uint64'), [3, 13, 15]), relay.reshape(const_13661.astype('bool'), [1470,]), ), 1)
output = relay.Tuple([uop_13657,call_13660,const_13661,])
output2 = relay.Tuple([uop_13659,call_13662,const_13661,])
func_13678 = relay.Function([], output)
mod['func_13678'] = func_13678
mod = relay.transform.InferType()(mod)
mutated_mod['func_13678'] = func_13678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13678_call = mutated_mod.get_global_var('func_13678')
call_13679 = func_13678_call()
output = call_13679
func_13680 = relay.Function([], output)
mutated_mod['func_13680'] = func_13680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11277_call = mod.get_global_var('func_11277')
func_11278_call = mutated_mod.get_global_var('func_11278')
call_13683 = relay.TupleGetItem(func_11277_call(), 0)
call_13684 = relay.TupleGetItem(func_11278_call(), 0)
func_10837_call = mod.get_global_var('func_10837')
func_10839_call = mutated_mod.get_global_var('func_10839')
call_13701 = func_10837_call()
call_13702 = func_10837_call()
output = relay.Tuple([call_13683,call_13701,])
output2 = relay.Tuple([call_13684,call_13702,])
func_13718 = relay.Function([], output)
mod['func_13718'] = func_13718
mod = relay.transform.InferType()(mod)
output = func_13718()
func_13719 = relay.Function([], output)
mutated_mod['func_13719'] = func_13719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6876_call = mutated_mod.get_global_var('func_6876')
call_13734 = relay.TupleGetItem(func_6874_call(), 0)
call_13735 = relay.TupleGetItem(func_6876_call(), 0)
output = relay.Tuple([call_13734,])
output2 = relay.Tuple([call_13735,])
func_13737 = relay.Function([], output)
mod['func_13737'] = func_13737
mod = relay.transform.InferType()(mod)
mutated_mod['func_13737'] = func_13737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13737_call = mutated_mod.get_global_var('func_13737')
call_13738 = func_13737_call()
output = call_13738
func_13739 = relay.Function([], output)
mutated_mod['func_13739'] = func_13739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mod.get_global_var('func_6619')
func_6620_call = mutated_mod.get_global_var('func_6620')
call_13790 = func_6619_call()
call_13791 = func_6619_call()
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
const_13799 = relay.const([0.066249,-4.866946,-5.695264,2.191427,-5.534179,6.462794,5.335832,-9.270902,6.181021,9.798916,2.996871,7.277842,3.002517,7.540254,7.726484,3.231432,7.498126,6.752075,3.209595,-6.324507,-5.944971,-5.773090,0.186043,5.892307,0.739460,-6.691404,9.211952,-7.729284,9.686585,0.715540,-9.894952,-5.872727,-3.598850,3.765946,-1.634085,1.798817,9.089655,-7.294000,-5.614894,9.322194,-4.357830,-4.752871,-3.890736,-0.123299,-3.250343,-1.318621,-3.818877,4.458940,4.046991,-0.118555,-8.285192,-0.439259,7.825758,-3.333491,-3.875831,4.828374,3.538159,-0.699710,-2.653484,-6.431924,-8.767019,8.183815,5.784496,8.661453,3.662560,-0.168130,7.687621,-9.225797,8.794725,-1.124686,-7.943757,-1.566426,-1.887021,1.516092,1.998132,7.738640,5.475564,-1.057820,9.202287,6.627805,5.050211,-0.555236,-7.403627,-9.966193,-1.008507,-4.507061,-7.735071,-3.793450,2.075006,-3.917869,1.117098,5.240248,-1.109267,5.578835,3.201155,5.594696,-3.435595,-6.106371,-6.273210,-0.763373,5.846780,8.202685,6.336180,-3.659026,-8.609616,0.821768,5.143628,-2.955272,-2.123734,3.083735,-2.701074,5.041152,5.926051,0.619440,-6.220009,-3.565851,-4.320275,1.554361,7.521109,7.182778], dtype = "float64")#candidate|13799|(120,)|const|float64
call_13798 = relay.TupleGetItem(func_5610_call(relay.reshape(const_13799.astype('float64'), [120,])), 1)
call_13800 = relay.TupleGetItem(func_5612_call(relay.reshape(const_13799.astype('float64'), [120,])), 1)
output = relay.Tuple([call_13790,call_13798,const_13799,])
output2 = relay.Tuple([call_13791,call_13800,const_13799,])
func_13804 = relay.Function([], output)
mod['func_13804'] = func_13804
mod = relay.transform.InferType()(mod)
output = func_13804()
func_13805 = relay.Function([], output)
mutated_mod['func_13805'] = func_13805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12164_call = mod.get_global_var('func_12164')
func_12165_call = mutated_mod.get_global_var('func_12165')
call_13929 = func_12164_call()
call_13930 = func_12164_call()
output = call_13929
output2 = call_13930
func_13931 = relay.Function([], output)
mod['func_13931'] = func_13931
mod = relay.transform.InferType()(mod)
mutated_mod['func_13931'] = func_13931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13931_call = mutated_mod.get_global_var('func_13931')
call_13932 = func_13931_call()
output = call_13932
func_13933 = relay.Function([], output)
mutated_mod['func_13933'] = func_13933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13503_call = mod.get_global_var('func_13503')
func_13505_call = mutated_mod.get_global_var('func_13505')
call_13937 = func_13503_call()
call_13938 = func_13503_call()
func_9601_call = mod.get_global_var('func_9601')
func_9602_call = mutated_mod.get_global_var('func_9602')
call_13985 = func_9601_call()
call_13986 = func_9601_call()
func_12395_call = mod.get_global_var('func_12395')
func_12396_call = mutated_mod.get_global_var('func_12396')
call_14005 = relay.TupleGetItem(func_12395_call(), 2)
call_14006 = relay.TupleGetItem(func_12396_call(), 2)
output = relay.Tuple([call_13937,call_13985,call_14005,])
output2 = relay.Tuple([call_13938,call_13986,call_14006,])
func_14015 = relay.Function([], output)
mod['func_14015'] = func_14015
mod = relay.transform.InferType()(mod)
output = func_14015()
func_14016 = relay.Function([], output)
mutated_mod['func_14016'] = func_14016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9312_call = mod.get_global_var('func_9312')
func_9313_call = mutated_mod.get_global_var('func_9313')
call_14090 = func_9312_call()
call_14091 = func_9312_call()
output = relay.Tuple([call_14090,])
output2 = relay.Tuple([call_14091,])
func_14109 = relay.Function([], output)
mod['func_14109'] = func_14109
mod = relay.transform.InferType()(mod)
output = func_14109()
func_14110 = relay.Function([], output)
mutated_mod['func_14110'] = func_14110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8214_call = mod.get_global_var('func_8214')
func_8215_call = mutated_mod.get_global_var('func_8215')
call_14152 = func_8214_call()
call_14153 = func_8214_call()
output = relay.Tuple([call_14152,])
output2 = relay.Tuple([call_14153,])
func_14185 = relay.Function([], output)
mod['func_14185'] = func_14185
mod = relay.transform.InferType()(mod)
mutated_mod['func_14185'] = func_14185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14185_call = mutated_mod.get_global_var('func_14185')
call_14186 = func_14185_call()
output = call_14186
func_14187 = relay.Function([], output)
mutated_mod['func_14187'] = func_14187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10479_call = mod.get_global_var('func_10479')
func_10480_call = mutated_mod.get_global_var('func_10480')
call_14284 = relay.TupleGetItem(func_10479_call(), 0)
call_14285 = relay.TupleGetItem(func_10480_call(), 0)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_14293 = relay.TupleGetItem(func_5744_call(), 0)
call_14294 = relay.TupleGetItem(func_5746_call(), 0)
output = relay.Tuple([call_14284,call_14293,])
output2 = relay.Tuple([call_14285,call_14294,])
func_14301 = relay.Function([], output)
mod['func_14301'] = func_14301
mod = relay.transform.InferType()(mod)
output = func_14301()
func_14302 = relay.Function([], output)
mutated_mod['func_14302'] = func_14302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10901_call = mod.get_global_var('func_10901')
func_10902_call = mutated_mod.get_global_var('func_10902')
call_14318 = relay.TupleGetItem(func_10901_call(), 0)
call_14319 = relay.TupleGetItem(func_10902_call(), 0)
output = call_14318
output2 = call_14319
func_14329 = relay.Function([], output)
mod['func_14329'] = func_14329
mod = relay.transform.InferType()(mod)
mutated_mod['func_14329'] = func_14329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14329_call = mutated_mod.get_global_var('func_14329')
call_14330 = func_14329_call()
output = call_14330
func_14331 = relay.Function([], output)
mutated_mod['func_14331'] = func_14331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_14332 = relay.TupleGetItem(func_8176_call(), 0)
call_14333 = relay.TupleGetItem(func_8177_call(), 0)
output = relay.Tuple([call_14332,])
output2 = relay.Tuple([call_14333,])
func_14342 = relay.Function([], output)
mod['func_14342'] = func_14342
mod = relay.transform.InferType()(mod)
output = func_14342()
func_14343 = relay.Function([], output)
mutated_mod['func_14343'] = func_14343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11959_call = mod.get_global_var('func_11959')
func_11960_call = mutated_mod.get_global_var('func_11960')
call_14414 = relay.TupleGetItem(func_11959_call(), 0)
call_14415 = relay.TupleGetItem(func_11960_call(), 0)
output = relay.Tuple([call_14414,])
output2 = relay.Tuple([call_14415,])
func_14428 = relay.Function([], output)
mod['func_14428'] = func_14428
mod = relay.transform.InferType()(mod)
output = func_14428()
func_14429 = relay.Function([], output)
mutated_mod['func_14429'] = func_14429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8694_call = mod.get_global_var('func_8694')
func_8695_call = mutated_mod.get_global_var('func_8695')
call_14543 = func_8694_call()
call_14544 = func_8694_call()
output = relay.Tuple([call_14543,])
output2 = relay.Tuple([call_14544,])
func_14547 = relay.Function([], output)
mod['func_14547'] = func_14547
mod = relay.transform.InferType()(mod)
output = func_14547()
func_14548 = relay.Function([], output)
mutated_mod['func_14548'] = func_14548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11758_call = mod.get_global_var('func_11758')
func_11759_call = mutated_mod.get_global_var('func_11759')
call_14575 = func_11758_call()
call_14576 = func_11758_call()
output = relay.Tuple([call_14575,])
output2 = relay.Tuple([call_14576,])
func_14585 = relay.Function([], output)
mod['func_14585'] = func_14585
mod = relay.transform.InferType()(mod)
output = func_14585()
func_14586 = relay.Function([], output)
mutated_mod['func_14586'] = func_14586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10536_call = mod.get_global_var('func_10536')
func_10537_call = mutated_mod.get_global_var('func_10537')
call_14593 = relay.TupleGetItem(func_10536_call(), 0)
call_14594 = relay.TupleGetItem(func_10537_call(), 0)
output = call_14593
output2 = call_14594
func_14598 = relay.Function([], output)
mod['func_14598'] = func_14598
mod = relay.transform.InferType()(mod)
mutated_mod['func_14598'] = func_14598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14598_call = mutated_mod.get_global_var('func_14598')
call_14599 = func_14598_call()
output = call_14599
func_14600 = relay.Function([], output)
mutated_mod['func_14600'] = func_14600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10169_call = mod.get_global_var('func_10169')
func_10170_call = mutated_mod.get_global_var('func_10170')
call_14663 = func_10169_call()
call_14664 = func_10169_call()
output = relay.Tuple([call_14663,])
output2 = relay.Tuple([call_14664,])
func_14684 = relay.Function([], output)
mod['func_14684'] = func_14684
mod = relay.transform.InferType()(mod)
output = func_14684()
func_14685 = relay.Function([], output)
mutated_mod['func_14685'] = func_14685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6592_call = mod.get_global_var('func_6592')
func_6593_call = mutated_mod.get_global_var('func_6593')
call_14742 = relay.TupleGetItem(func_6592_call(), 0)
call_14743 = relay.TupleGetItem(func_6593_call(), 0)
output = relay.Tuple([call_14742,])
output2 = relay.Tuple([call_14743,])
func_14788 = relay.Function([], output)
mod['func_14788'] = func_14788
mod = relay.transform.InferType()(mod)
mutated_mod['func_14788'] = func_14788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14788_call = mutated_mod.get_global_var('func_14788')
call_14789 = func_14788_call()
output = call_14789
func_14790 = relay.Function([], output)
mutated_mod['func_14790'] = func_14790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14015_call = mod.get_global_var('func_14015')
func_14016_call = mutated_mod.get_global_var('func_14016')
call_14852 = relay.TupleGetItem(func_14015_call(), 2)
call_14853 = relay.TupleGetItem(func_14016_call(), 2)
output = call_14852
output2 = call_14853
func_14882 = relay.Function([], output)
mod['func_14882'] = func_14882
mod = relay.transform.InferType()(mod)
mutated_mod['func_14882'] = func_14882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14882_call = mutated_mod.get_global_var('func_14882')
call_14883 = func_14882_call()
output = call_14883
func_14884 = relay.Function([], output)
mutated_mod['func_14884'] = func_14884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7687_call = mod.get_global_var('func_7687')
func_7688_call = mutated_mod.get_global_var('func_7688')
call_14900 = relay.TupleGetItem(func_7687_call(), 0)
call_14901 = relay.TupleGetItem(func_7688_call(), 0)
func_8010_call = mod.get_global_var('func_8010')
func_8012_call = mutated_mod.get_global_var('func_8012')
call_14916 = relay.TupleGetItem(func_8010_call(), 0)
call_14917 = relay.TupleGetItem(func_8012_call(), 0)
func_5675_call = mod.get_global_var('func_5675')
func_5677_call = mutated_mod.get_global_var('func_5677')
call_14918 = relay.TupleGetItem(func_5675_call(), 0)
call_14919 = relay.TupleGetItem(func_5677_call(), 0)
output = relay.Tuple([call_14900,call_14916,call_14918,])
output2 = relay.Tuple([call_14901,call_14917,call_14919,])
func_14949 = relay.Function([], output)
mod['func_14949'] = func_14949
mod = relay.transform.InferType()(mod)
output = func_14949()
func_14950 = relay.Function([], output)
mutated_mod['func_14950'] = func_14950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10479_call = mod.get_global_var('func_10479')
func_10480_call = mutated_mod.get_global_var('func_10480')
call_14967 = relay.TupleGetItem(func_10479_call(), 0)
call_14968 = relay.TupleGetItem(func_10480_call(), 0)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
const_14989 = relay.const([-0.556809,8.197683,-1.880999,-2.905197,-0.822486,-0.529061,9.837035,7.524218,3.384049,2.644620,-0.410397,-1.129824,6.166258,8.914326,-5.356293,-8.224586,-3.863020,6.891184,-9.420433,-3.887015,-6.775006,-7.699308,0.141216,-4.991538,5.467938,5.451743,-8.952141,2.880698,0.554229,6.544683,4.400666,5.453837,4.508567,7.526685,-0.826192,-8.858149,-2.580600,-6.269917,-4.800123,-2.586978,6.714744,1.514076,7.928284,8.369708,9.518333,-5.801422,-0.325588,8.430896,-0.851200,3.716324,-4.608375,9.858626,-1.404048,6.563100,1.885837,7.784460,5.497043,-9.969062,9.451184,5.081245,-7.191576,8.328267,0.761093,-6.917576,2.062714,-9.532985,8.898138,-9.909549,-7.514648,-4.123029,9.668105,-9.971238,-7.971737,2.696183,-9.269239,7.661961,-2.456406,-5.921365,0.201998,5.323321,-4.808374,-7.063222,-4.558386,-3.087769,-8.944306,-4.195398,-2.083271,-6.186158,0.799900,-8.774267,0.562450,9.127526,-3.945170,0.100463,-1.312857,8.282263,3.227213,6.096144,-6.760927,-3.483754,-3.961382,3.924174,7.003186,-2.222883,6.075241,-7.248251,-0.135844,8.629241,6.917265,-0.409314,9.241743,4.122204,1.823139,-9.817092,-7.455183,7.070600,5.213548,4.675878,-1.588616,-0.764106,-4.714613,-2.194664,-7.348033,0.924551,8.413172,6.684183,9.256357,7.795120,0.027539,3.462630,-6.133333,3.339431,4.887468,-9.813298,-0.344170,7.445051,5.652705,0.749583,6.521497,-5.608904,-1.490314,-9.242142,-4.587666,-1.405083,4.242515,3.396258,-6.864006,-5.573356,5.369343,-6.209003,1.707405,-1.492913,1.694779,-1.262121,-3.948180,1.312407,-6.602159,1.980170,0.524264,3.676192,6.241525,-1.689969,2.683352,7.228670,0.876522,-4.180513,3.239061,-1.928482,-2.842573,-0.444227,2.137362,6.806184,5.681740,-0.702923,-5.360324,7.907956,-4.889382,-6.089148,-3.856713,-7.969388,0.117243,-1.681927,9.435781,4.002566,1.440293,-2.072848,-2.215928,2.405836,-7.041912,-6.720122,6.152144,-2.549299,-4.807791,8.097369,-0.715847,-3.831558,-1.697465,8.826438,4.381442,8.172117,-7.324635,1.911361,4.911281,-4.164797,-2.738200,-8.522714,-5.594555,5.382390,7.411641,-1.724296,-7.294943,6.492461,1.299122,-3.004737,-2.818487,-8.818049,-8.130655,9.085444,-5.982907,9.815819,-3.058998,-6.408923,7.800273,3.814737,-0.745920,-6.313081,3.007709,2.301919,-7.917845,3.870009,6.819678,8.057227,-3.346424,7.015202,-8.747702,6.905328,-9.285178,-0.062957,-1.919087,8.914818,4.406206,2.702348,7.252076,2.997248,1.928067,-2.553934,-2.535515,-8.574103,-6.415470,5.831129,-4.557771,-5.403891,-5.588094,-0.066068,-8.593743,4.446622,-0.333579,-2.859790,8.209464,9.106537,5.681031,3.240460,-5.639189,-4.243000,2.528302,3.382801,-7.279405,8.863941,-5.666024,0.429310,2.468470,-4.888434,-8.253250,6.982231,5.153408,-4.224427,4.833621,-1.185607,7.991021,-5.822806,1.998674,-5.753433,8.993775,-3.953883,-9.519716,7.991067,8.523657,7.819331,-5.444245,3.757071,3.939399,-3.380831,-3.196011,-6.873787,3.858568,-4.073407,6.321325,2.326489,-8.183005,-5.116594,4.949274,-4.572084,-3.948594,-3.848143,0.793196,-1.778462,5.295050,5.842687,8.753104,6.121832,-6.806460,7.704633,3.395494,3.900078,0.676959,-5.999067,5.613058,0.719894,-7.200959,-0.341413,3.691820,-6.818239,-6.056353,-9.775352,-2.471761,-6.397933,-9.714433,-3.645879,-4.957418,6.397759,2.819934,2.229297,5.651011,-6.282378,-0.762419,6.948766,4.176230,5.888426,3.035738,-8.791348,4.169606,-2.979026,-0.510855,9.671195,-0.114871,-5.908608,-2.067512,-1.259944,-4.198892,5.484637,-3.296325,4.766923,0.073647,0.520396,-3.106162,-1.183269,-6.661039,1.395050,9.285074,-0.841794,-8.447884,6.702830,-8.015936,-7.311098,8.616148,2.672697,-9.393379,1.548840,2.773624,-7.614864,-1.327328,-4.839923,9.601665,-3.176999,-9.179379,5.672054,6.824521,-7.390778,-9.208393,6.509297,-8.313510,1.685894,1.766646,-8.492443,7.574266,-4.707443,0.622300,1.239775,3.958166,9.834401,-0.631199,-4.450151,-1.358539,9.892004,3.759348,-7.959375,0.793543,-2.609277,-9.249622,-3.673233,5.067090,-6.303915,6.781493,8.140615,4.931380,-0.960753,1.836029,2.030292,5.704593,5.169732,4.623106,5.788862,9.605939,7.868359,-6.207656,-1.510559,9.282536,8.027414,-6.654582,6.307204,0.276899,0.533198,-4.031741,-7.632752,3.923800,-9.898123,7.705076,0.263720,1.453408,9.597348,-9.068926,3.850904,-8.010087,-0.432658,3.542461,-5.313456,-8.119464,-1.032069,-5.353379,-8.188749,-8.038573,0.956707,-3.424599,-8.396845,4.034620,-8.104947,1.138458,7.427833,-3.620752,-1.440713,2.427158,-8.813489,-7.797716,-7.194304,-0.780457,-9.282433,7.321869,-7.950020,6.827168,7.578572,-7.334910,-1.853931,7.081977,7.028545,-2.262772,-2.011922,-2.280730,8.302116,4.730049,-5.305226,-5.467397,-0.065348,-3.621735,-6.107073,3.172153,-4.210007,9.546060,-9.001497,7.434606,-7.829817,5.390637,3.382647,6.367482,4.214009,5.994195,-1.312447,-7.060048,6.138255,-9.215996,-6.034276,-5.528482,3.214936,-7.329563,-6.416113,-2.237852,7.541090,3.394574,5.637931,7.893471,7.952391,-0.517819,-1.734760,-5.540996,1.063162,9.877078,7.863365,0.927210,8.866862,-1.169047,5.207540,-6.331294,-5.250442,9.629462,1.255665,-6.773679,6.232273,-7.408414,-1.666588,-1.860183,6.516783,0.597694,3.074093,-5.738299,-9.118687,-3.433429,5.256270,-8.056611,0.890854,5.798743,-4.286013,7.316064,3.361684,-9.804474,0.561523,9.740728,-6.362687,6.881398,6.212775,0.981228,-5.675340,6.013764,-0.659704,8.119992,-4.473232,-2.414267,0.722210,-9.479896,-4.432171,-6.326043,6.967045,-9.293166,-1.629986,6.613649,6.109945,-4.259553,7.247665,7.610344,2.729092,5.478869,-2.862049,9.457400,8.615118,-2.045423,-3.088426,7.799495,-7.472715,8.155380,0.003282,0.732566,7.518503,-8.408726,1.107232,8.935754,9.983544,-7.078581,-9.532590,3.149488,-9.760412,7.478119,-7.346399,-1.573261,4.823880,1.243559,0.581522,9.201577,-6.001014,6.917488,-0.058187,8.441551,3.284458,8.848828,8.829391,0.358582,-6.665884,-3.386072,-4.482252,8.912305,-4.898745,-0.572669,6.778409,1.583920,-3.259105,-2.109004,4.023747,-1.409198,5.326724,-8.417167,-7.923760,-0.785067,9.612889,8.207862,-6.254788,0.338324,9.431264,-0.491844,7.589289,5.313780,-2.309615,-2.831995,1.179315,-5.776547,-2.482984,4.960793,-0.392028,4.713205,-3.880713,7.840357,-0.164787,5.783769,6.543661,-2.013535,4.928145,-3.781534,0.748141,0.868013,4.158027,-3.647195,1.981052,-7.474626,0.351945,2.563137,-6.341014,-9.456247,7.733465,-6.090065,6.431627,6.886140,-0.190494,-6.052501,1.239338,-4.345705,5.864224,-6.371600,-6.141213,1.963283,5.770338,6.359354,2.057322,-9.197328,-3.244497,2.747388,4.839101,-0.578904,-2.799002,-3.131734,6.912477,-5.070838,1.007283,5.307247,6.205926,0.026260,5.700959,-3.699413,0.183766,4.585417,-2.762609,1.366639,7.474348,4.487845,2.335451,2.965891,5.720498,7.085875,2.754731,-7.891513,8.263524,5.075296,5.891216,-3.497803,-7.626843,-1.852054,-8.305854,-1.645800,7.706784,-8.408130,9.056378,9.842959,9.282995,5.407437,7.030260,-3.929337,-6.550282,6.746290,5.145885,-5.814758,0.586427,-4.250246,-0.274125,-8.346370,0.275092,-9.447432,-9.971845,1.869513,5.987686,-5.076043,-5.508053,2.480613,-2.339808,-6.329918,-3.938801,5.793715,5.431331,-3.981373,9.170196,-1.750078,9.530105,8.530766,-3.809087,6.742027,-2.410371,2.151434,-3.445545,9.909627,0.452855,9.337357,-8.952990,-9.059235,-4.700492,9.358193,0.568592,-1.005524,0.436043,-3.288274,-0.299349,4.715613,-6.999080,-5.546226,7.116670,1.057507,0.588268,4.588932,-9.129068,-4.211729,-3.540193,-8.236536,5.016141,-2.025945,-4.985204,-4.468174,-3.303529,1.827361,-6.559325,-5.134371,3.198363,1.191842,-7.728909,-6.568979,-9.155329,1.140090,8.319939,-2.326645,5.539369,2.814817,3.186009,-4.314675,7.286075,-7.960274,1.554115,2.400839,5.802360,-9.381964,6.703944,-8.161800,4.267488,-2.602121,0.407423,3.234717,4.782549,-5.089247,-9.677894,9.700261,0.570741,-5.281179,-4.710573,9.661982,-8.129511,0.182607,5.894962,4.871249,1.225912,9.547154,-5.721694,6.733542,6.253202,-2.549023,6.433671,5.156311,-3.733955,3.223075,3.504824,-1.643474,-4.415315,-2.681276,1.777536,-3.106052,4.899574,6.586746,-6.207579,-0.141028,-3.590476,-7.867583,-7.450217,-3.029978,4.588549,7.828294,8.997590,-3.059607,1.888378,8.830586,-9.146969,1.695625,2.694654,2.776587,-6.913962,8.130884,-4.729237,-1.366776,3.532773,4.581365,-6.818332,9.320612,-4.609457,-9.832645,-5.949632,-1.333503,3.003525,8.396029,-6.471695,8.399406,-3.252132,-2.869286,-4.200438,5.730192,3.008792,-2.914905,6.115989,6.675321,1.426821,7.789079,4.982226,-7.003751,9.368715,7.001148,-1.678214,-6.080977,5.929359,7.485820,2.292694,5.329789,-1.775260,5.529494,-3.197064,6.399182,-1.222945,9.397642,8.986028,-8.036444,9.522438,-0.200572,-9.597763,-6.477402,1.360541,5.731252,-3.289828,-3.371331,-0.851769,-5.706212,-6.919841,-9.109582,-4.744026,8.958233,7.213916,4.644900,4.815954,-3.941324,-0.467253,-2.688011,0.652111,8.603681,-9.990094,-9.059182,6.700156,9.718808,-3.927102,-4.253844,-6.287488,-4.571912,1.314407,-6.099475,-1.910432,7.957825,-3.541426,-2.788551,9.103874,2.788293,6.472779,8.621883,0.727692,4.930287,-7.097640,-8.634103,2.878511,5.085646,-1.531776,8.546051,-2.530200,-0.493696,-7.981292,-1.716114,-7.196705,-6.948201,0.387789,-8.362517,-2.035527,6.572119,4.214720,7.815155,-8.109840,1.467489,1.452106,5.975784,3.808958,-5.934911,0.987893,-2.370617,-9.909945,9.818998,-5.973898,-3.873564,7.573823,3.795396,-7.718203,9.921833,0.956124,5.872595,-4.228525,9.533363,-9.078931,6.101988,-6.297176,8.051416,-2.137377,2.331808,-3.015553,-8.542925,4.965490,-0.595199,-0.049893,-8.973225,3.385548,-8.347333,4.464392,7.987594,4.093879,5.238514,-9.669947,2.308261,3.200098,3.717881,-2.687980,-4.015716,-1.383873,1.107894,-7.903288,-0.200441,-5.164908,1.002423,-6.420127,7.343387,-8.938629,-2.820893,-7.958592,9.041487,-4.172125,0.742891,-9.716033,-1.659530,1.628750,-9.537882,8.277466,1.657183,7.088053,0.234401,2.408997,-2.742198,5.362176,0.968444,-8.438896,-6.629400,7.552049,0.563559,5.455549,-0.335458,-2.300310,-2.570797,-4.005337,7.181083,4.212761,7.336896,3.335424,-1.342808,-7.631087,-2.294834,-6.272430,9.907735,6.715327,-0.128160,-1.476696,3.512142,5.164450,7.046495,4.630042,1.506529,4.922384,2.319193,-9.595998,-7.723570,9.604463,8.289389,5.838188,-3.009010,-9.394551,6.398933,6.562885,0.657793,-2.825946,-3.443120,1.242866,-3.077456,7.570000,5.222987,7.720078,-1.548598,2.459426,0.656314,4.805078,6.131336,-8.381917,-0.976305,6.616674,-8.942976,-4.208916,1.120154,-6.481541,9.234582,9.503809,-6.423776,-9.210788,-5.259071,-6.532157,-3.943227,5.324790,9.905056,-9.970043,0.309113,2.750985,1.444356,9.285991,4.316912,3.927553,2.843597,-1.924373,4.510947,-7.745123,-9.358817,2.858022,-7.727708,-6.089407,-4.399220,-5.700946,-3.927136,9.796316,2.974001,-3.978422,9.955423,1.573054,-5.721390,-3.919821,-2.364975,4.919958,1.467443,9.641579,3.981185,-7.769658,-1.671536,-3.194993,-1.795391,6.915872,-3.032828,7.923390,9.144966,-2.481529,-6.819893,4.212427,0.847494,9.494955,-7.475953,9.107740,-3.408317,6.154551,-9.947449,5.292676,-6.902386,-7.764068,-0.004361,-1.228193,4.964316,5.826322,6.911856,-2.821635,-2.567059,3.742597,7.450503,-4.771333,-1.137867,-4.944228,9.346523,-7.690209,-9.047445,-5.319583,-6.128346,-9.105281,6.745083,7.774945,3.246551,-0.369151,8.231544,-6.934163,-1.851073,-2.131971,-5.765865,3.993558,-3.623479,8.535609,-0.384413,5.061537,-3.815272,-1.711525,3.141712,-5.210287,-3.778033,-3.976959,4.192553,-2.859939,-4.961962,-4.066874,2.627006,-2.985880,1.472271,9.561007,-5.236250,-7.846018,-9.837842,-7.279625,-7.487106,-4.895691,7.033212,-8.973629,7.588290,-8.627873,0.066472,4.134742,-9.380668,-7.869758,6.907807,-4.687338,-1.988921,3.065229,6.633355,6.711358,-6.895159,-1.003524,-9.398084,-9.349248,1.761437,6.683554,-3.678945,-3.739858,1.451256,-3.833729,-9.749450,-2.256324,-9.311524,3.121381,6.015132,1.638057,4.775834,-9.309189,7.223131,9.107911,5.629130,5.460013,7.603074,0.362920,1.254872,-4.336250,-6.822568,-5.093248,-8.730741,-3.410431,-0.749757,0.608873,-2.934283,-2.012962,8.094340,-4.586239,-4.980522,-2.098307,0.815126,-6.171816,5.644816,-8.691590,2.617921,-1.808618,0.097329,-8.610884,6.892452,4.082466,8.633175,4.972048,7.374986,8.706306,0.599414,-1.860445,8.090120,7.561690,9.339872,-4.549939], dtype = "float32")#candidate|14989|(1248,)|const|float32
call_14988 = relay.TupleGetItem(func_1268_call(relay.reshape(const_14989.astype('float32'), [13, 12, 8])), 0)
call_14990 = relay.TupleGetItem(func_1271_call(relay.reshape(const_14989.astype('float32'), [13, 12, 8])), 0)
output = relay.Tuple([call_14967,call_14988,const_14989,])
output2 = relay.Tuple([call_14968,call_14990,const_14989,])
func_15010 = relay.Function([], output)
mod['func_15010'] = func_15010
mod = relay.transform.InferType()(mod)
output = func_15010()
func_15011 = relay.Function([], output)
mutated_mod['func_15011'] = func_15011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11250_call = mod.get_global_var('func_11250')
func_11251_call = mutated_mod.get_global_var('func_11251')
call_15040 = relay.TupleGetItem(func_11250_call(), 1)
call_15041 = relay.TupleGetItem(func_11251_call(), 1)
output = relay.Tuple([call_15040,])
output2 = relay.Tuple([call_15041,])
func_15052 = relay.Function([], output)
mod['func_15052'] = func_15052
mod = relay.transform.InferType()(mod)
output = func_15052()
func_15053 = relay.Function([], output)
mutated_mod['func_15053'] = func_15053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10206_call = mod.get_global_var('func_10206')
func_10207_call = mutated_mod.get_global_var('func_10207')
call_15081 = func_10206_call()
call_15082 = func_10206_call()
output = relay.Tuple([call_15081,])
output2 = relay.Tuple([call_15082,])
func_15087 = relay.Function([], output)
mod['func_15087'] = func_15087
mod = relay.transform.InferType()(mod)
output = func_15087()
func_15088 = relay.Function([], output)
mutated_mod['func_15088'] = func_15088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8644_call = mod.get_global_var('func_8644')
func_8646_call = mutated_mod.get_global_var('func_8646')
call_15129 = relay.TupleGetItem(func_8644_call(), 0)
call_15130 = relay.TupleGetItem(func_8646_call(), 0)
func_7687_call = mod.get_global_var('func_7687')
func_7688_call = mutated_mod.get_global_var('func_7688')
call_15131 = relay.TupleGetItem(func_7687_call(), 0)
call_15132 = relay.TupleGetItem(func_7688_call(), 0)
output = relay.Tuple([call_15129,call_15131,])
output2 = relay.Tuple([call_15130,call_15132,])
func_15134 = relay.Function([], output)
mod['func_15134'] = func_15134
mod = relay.transform.InferType()(mod)
mutated_mod['func_15134'] = func_15134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15134_call = mutated_mod.get_global_var('func_15134')
call_15135 = func_15134_call()
output = call_15135
func_15136 = relay.Function([], output)
mutated_mod['func_15136'] = func_15136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11625_call = mod.get_global_var('func_11625')
func_11626_call = mutated_mod.get_global_var('func_11626')
call_15150 = relay.TupleGetItem(func_11625_call(), 0)
call_15151 = relay.TupleGetItem(func_11626_call(), 0)
output = relay.Tuple([call_15150,])
output2 = relay.Tuple([call_15151,])
func_15159 = relay.Function([], output)
mod['func_15159'] = func_15159
mod = relay.transform.InferType()(mod)
mutated_mod['func_15159'] = func_15159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15159_call = mutated_mod.get_global_var('func_15159')
call_15160 = func_15159_call()
output = call_15160
func_15161 = relay.Function([], output)
mutated_mod['func_15161'] = func_15161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15179 = relay.var("var_15179", dtype = "float32", shape = ())#candidate|15179|()|var|float32
var_15180 = relay.var("var_15180", dtype = "float32", shape = (7, 2, 13))#candidate|15180|(7, 2, 13)|var|float32
bop_15181 = relay.floor_divide(var_15179.astype('float32'), var_15180.astype('float32')) # shape=(7, 2, 13)
func_12809_call = mod.get_global_var('func_12809')
func_12812_call = mutated_mod.get_global_var('func_12812')
var_15187 = relay.var("var_15187", dtype = "float32", shape = (720,))#candidate|15187|(720,)|var|float32
call_15186 = relay.TupleGetItem(func_12809_call(relay.reshape(var_15187.astype('float32'), [4, 180])), 2)
call_15188 = relay.TupleGetItem(func_12812_call(relay.reshape(var_15187.astype('float32'), [4, 180])), 2)
output = relay.Tuple([bop_15181,call_15186,var_15187,])
output2 = relay.Tuple([bop_15181,call_15188,var_15187,])
func_15211 = relay.Function([var_15179,var_15180,var_15187,], output)
mod['func_15211'] = func_15211
mod = relay.transform.InferType()(mod)
mutated_mod['func_15211'] = func_15211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15211_call = mutated_mod.get_global_var('func_15211')
var_15213 = relay.var("var_15213", dtype = "float32", shape = ())#candidate|15213|()|var|float32
var_15214 = relay.var("var_15214", dtype = "float32", shape = (7, 2, 13))#candidate|15214|(7, 2, 13)|var|float32
var_15215 = relay.var("var_15215", dtype = "float32", shape = (720,))#candidate|15215|(720,)|var|float32
call_15212 = func_15211_call(var_15213,var_15214,var_15215,)
output = call_15212
func_15216 = relay.Function([var_15213,var_15214,var_15215,], output)
mutated_mod['func_15216'] = func_15216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mod.get_global_var('func_5560')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_15227 = func_5560_call()
call_15228 = func_5560_call()
output = relay.Tuple([call_15227,])
output2 = relay.Tuple([call_15228,])
func_15235 = relay.Function([], output)
mod['func_15235'] = func_15235
mod = relay.transform.InferType()(mod)
mutated_mod['func_15235'] = func_15235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15235_call = mutated_mod.get_global_var('func_15235')
call_15236 = func_15235_call()
output = call_15236
func_15237 = relay.Function([], output)
mutated_mod['func_15237'] = func_15237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15300 = relay.var("var_15300", dtype = "uint32", shape = (11, 14, 6))#candidate|15300|(11, 14, 6)|var|uint32
var_15301 = relay.var("var_15301", dtype = "uint32", shape = (11, 14, 6))#candidate|15301|(11, 14, 6)|var|uint32
bop_15302 = relay.add(var_15300.astype('uint32'), relay.reshape(var_15301.astype('uint32'), relay.shape_of(var_15300))) # shape=(11, 14, 6)
output = bop_15302
output2 = bop_15302
func_15311 = relay.Function([var_15300,var_15301,], output)
mod['func_15311'] = func_15311
mod = relay.transform.InferType()(mod)
var_15312 = relay.var("var_15312", dtype = "uint32", shape = (11, 14, 6))#candidate|15312|(11, 14, 6)|var|uint32
var_15313 = relay.var("var_15313", dtype = "uint32", shape = (11, 14, 6))#candidate|15313|(11, 14, 6)|var|uint32
output = func_15311(var_15312,var_15313,)
func_15314 = relay.Function([var_15312,var_15313,], output)
mutated_mod['func_15314'] = func_15314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13503_call = mod.get_global_var('func_13503')
func_13505_call = mutated_mod.get_global_var('func_13505')
call_15451 = func_13503_call()
call_15452 = func_13503_call()
output = call_15451
output2 = call_15452
func_15458 = relay.Function([], output)
mod['func_15458'] = func_15458
mod = relay.transform.InferType()(mod)
mutated_mod['func_15458'] = func_15458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15458_call = mutated_mod.get_global_var('func_15458')
call_15459 = func_15458_call()
output = call_15459
func_15460 = relay.Function([], output)
mutated_mod['func_15460'] = func_15460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15479 = relay.var("var_15479", dtype = "int16", shape = (3, 16, 4))#candidate|15479|(3, 16, 4)|var|int16
var_15480 = relay.var("var_15480", dtype = "int16", shape = (3, 16, 4))#candidate|15480|(3, 16, 4)|var|int16
bop_15481 = relay.add(var_15479.astype('int16'), relay.reshape(var_15480.astype('int16'), relay.shape_of(var_15479))) # shape=(3, 16, 4)
func_8644_call = mod.get_global_var('func_8644')
func_8646_call = mutated_mod.get_global_var('func_8646')
call_15489 = relay.TupleGetItem(func_8644_call(), 2)
call_15490 = relay.TupleGetItem(func_8646_call(), 2)
output = relay.Tuple([bop_15481,call_15489,])
output2 = relay.Tuple([bop_15481,call_15490,])
func_15500 = relay.Function([var_15479,var_15480,], output)
mod['func_15500'] = func_15500
mod = relay.transform.InferType()(mod)
mutated_mod['func_15500'] = func_15500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15500_call = mutated_mod.get_global_var('func_15500')
var_15502 = relay.var("var_15502", dtype = "int16", shape = (3, 16, 4))#candidate|15502|(3, 16, 4)|var|int16
var_15503 = relay.var("var_15503", dtype = "int16", shape = (3, 16, 4))#candidate|15503|(3, 16, 4)|var|int16
call_15501 = func_15500_call(var_15502,var_15503,)
output = call_15501
func_15504 = relay.Function([var_15502,var_15503,], output)
mutated_mod['func_15504'] = func_15504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mod.get_global_var('func_7914')
func_7915_call = mutated_mod.get_global_var('func_7915')
call_15547 = relay.TupleGetItem(func_7914_call(), 0)
call_15548 = relay.TupleGetItem(func_7915_call(), 0)
output = call_15547
output2 = call_15548
func_15594 = relay.Function([], output)
mod['func_15594'] = func_15594
mod = relay.transform.InferType()(mod)
mutated_mod['func_15594'] = func_15594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15594_call = mutated_mod.get_global_var('func_15594')
call_15595 = func_15594_call()
output = call_15595
func_15596 = relay.Function([], output)
mutated_mod['func_15596'] = func_15596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9486_call = mod.get_global_var('func_9486')
func_9487_call = mutated_mod.get_global_var('func_9487')
call_15610 = func_9486_call()
call_15611 = func_9486_call()
func_10479_call = mod.get_global_var('func_10479')
func_10480_call = mutated_mod.get_global_var('func_10480')
call_15617 = relay.TupleGetItem(func_10479_call(), 0)
call_15618 = relay.TupleGetItem(func_10480_call(), 0)
output = relay.Tuple([call_15610,call_15617,])
output2 = relay.Tuple([call_15611,call_15618,])
func_15628 = relay.Function([], output)
mod['func_15628'] = func_15628
mod = relay.transform.InferType()(mod)
mutated_mod['func_15628'] = func_15628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15628_call = mutated_mod.get_global_var('func_15628')
call_15629 = func_15628_call()
output = call_15629
func_15630 = relay.Function([], output)
mutated_mod['func_15630'] = func_15630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10169_call = mod.get_global_var('func_10169')
func_10170_call = mutated_mod.get_global_var('func_10170')
call_15682 = func_10169_call()
call_15683 = func_10169_call()
func_12328_call = mod.get_global_var('func_12328')
func_12330_call = mutated_mod.get_global_var('func_12330')
call_15694 = func_12328_call()
call_15695 = func_12328_call()
output = relay.Tuple([call_15682,call_15694,])
output2 = relay.Tuple([call_15683,call_15695,])
func_15698 = relay.Function([], output)
mod['func_15698'] = func_15698
mod = relay.transform.InferType()(mod)
output = func_15698()
func_15699 = relay.Function([], output)
mutated_mod['func_15699'] = func_15699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13334_call = mod.get_global_var('func_13334')
func_13335_call = mutated_mod.get_global_var('func_13335')
call_15700 = relay.TupleGetItem(func_13334_call(), 0)
call_15701 = relay.TupleGetItem(func_13335_call(), 0)
func_13737_call = mod.get_global_var('func_13737')
func_13739_call = mutated_mod.get_global_var('func_13739')
call_15729 = relay.TupleGetItem(func_13737_call(), 0)
call_15730 = relay.TupleGetItem(func_13739_call(), 0)
output = relay.Tuple([call_15700,call_15729,])
output2 = relay.Tuple([call_15701,call_15730,])
func_15733 = relay.Function([], output)
mod['func_15733'] = func_15733
mod = relay.transform.InferType()(mod)
output = func_15733()
func_15734 = relay.Function([], output)
mutated_mod['func_15734'] = func_15734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14329_call = mod.get_global_var('func_14329')
func_14331_call = mutated_mod.get_global_var('func_14331')
call_15758 = func_14329_call()
call_15759 = func_14329_call()
output = call_15758
output2 = call_15759
func_15765 = relay.Function([], output)
mod['func_15765'] = func_15765
mod = relay.transform.InferType()(mod)
mutated_mod['func_15765'] = func_15765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15765_call = mutated_mod.get_global_var('func_15765')
call_15766 = func_15765_call()
output = call_15766
func_15767 = relay.Function([], output)
mutated_mod['func_15767'] = func_15767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7580_call = mod.get_global_var('func_7580')
func_7581_call = mutated_mod.get_global_var('func_7581')
call_15791 = relay.TupleGetItem(func_7580_call(), 0)
call_15792 = relay.TupleGetItem(func_7581_call(), 0)
func_12164_call = mod.get_global_var('func_12164')
func_12165_call = mutated_mod.get_global_var('func_12165')
call_15795 = func_12164_call()
call_15796 = func_12164_call()
func_7687_call = mod.get_global_var('func_7687')
func_7688_call = mutated_mod.get_global_var('func_7688')
call_15804 = relay.TupleGetItem(func_7687_call(), 0)
call_15805 = relay.TupleGetItem(func_7688_call(), 0)
output = relay.Tuple([call_15791,call_15795,call_15804,])
output2 = relay.Tuple([call_15792,call_15796,call_15805,])
func_15813 = relay.Function([], output)
mod['func_15813'] = func_15813
mod = relay.transform.InferType()(mod)
output = func_15813()
func_15814 = relay.Function([], output)
mutated_mod['func_15814'] = func_15814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15698_call = mod.get_global_var('func_15698')
func_15699_call = mutated_mod.get_global_var('func_15699')
call_15835 = relay.TupleGetItem(func_15698_call(), 0)
call_15836 = relay.TupleGetItem(func_15699_call(), 0)
func_15235_call = mod.get_global_var('func_15235')
func_15237_call = mutated_mod.get_global_var('func_15237')
call_15862 = relay.TupleGetItem(func_15235_call(), 0)
call_15863 = relay.TupleGetItem(func_15237_call(), 0)
func_11652_call = mod.get_global_var('func_11652')
func_11653_call = mutated_mod.get_global_var('func_11653')
call_15864 = relay.TupleGetItem(func_11652_call(), 0)
call_15865 = relay.TupleGetItem(func_11653_call(), 0)
func_12288_call = mod.get_global_var('func_12288')
func_12289_call = mutated_mod.get_global_var('func_12289')
call_15879 = relay.TupleGetItem(func_12288_call(), 0)
call_15880 = relay.TupleGetItem(func_12289_call(), 0)
output = relay.Tuple([call_15835,call_15862,call_15864,call_15879,])
output2 = relay.Tuple([call_15836,call_15863,call_15865,call_15880,])
func_15892 = relay.Function([], output)
mod['func_15892'] = func_15892
mod = relay.transform.InferType()(mod)
output = func_15892()
func_15893 = relay.Function([], output)
mutated_mod['func_15893'] = func_15893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15813_call = mod.get_global_var('func_15813')
func_15814_call = mutated_mod.get_global_var('func_15814')
call_15966 = relay.TupleGetItem(func_15813_call(), 0)
call_15967 = relay.TupleGetItem(func_15814_call(), 0)
output = relay.Tuple([call_15966,])
output2 = relay.Tuple([call_15967,])
func_15970 = relay.Function([], output)
mod['func_15970'] = func_15970
mod = relay.transform.InferType()(mod)
mutated_mod['func_15970'] = func_15970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15970_call = mutated_mod.get_global_var('func_15970')
call_15971 = func_15970_call()
output = call_15971
func_15972 = relay.Function([], output)
mutated_mod['func_15972'] = func_15972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9451_call = mod.get_global_var('func_9451')
func_9453_call = mutated_mod.get_global_var('func_9453')
call_15979 = relay.TupleGetItem(func_9451_call(), 0)
call_15980 = relay.TupleGetItem(func_9453_call(), 0)
output = call_15979
output2 = call_15980
func_16010 = relay.Function([], output)
mod['func_16010'] = func_16010
mod = relay.transform.InferType()(mod)
mutated_mod['func_16010'] = func_16010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16010_call = mutated_mod.get_global_var('func_16010')
call_16011 = func_16010_call()
output = call_16011
func_16012 = relay.Function([], output)
mutated_mod['func_16012'] = func_16012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6423_call = mutated_mod.get_global_var('func_6423')
call_16078 = relay.TupleGetItem(func_6421_call(), 1)
call_16079 = relay.TupleGetItem(func_6423_call(), 1)
output = relay.Tuple([call_16078,])
output2 = relay.Tuple([call_16079,])
func_16080 = relay.Function([], output)
mod['func_16080'] = func_16080
mod = relay.transform.InferType()(mod)
mutated_mod['func_16080'] = func_16080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16080_call = mutated_mod.get_global_var('func_16080')
call_16081 = func_16080_call()
output = call_16081
func_16082 = relay.Function([], output)
mutated_mod['func_16082'] = func_16082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14585_call = mod.get_global_var('func_14585')
func_14586_call = mutated_mod.get_global_var('func_14586')
call_16102 = relay.TupleGetItem(func_14585_call(), 0)
call_16103 = relay.TupleGetItem(func_14586_call(), 0)
output = call_16102
output2 = call_16103
func_16116 = relay.Function([], output)
mod['func_16116'] = func_16116
mod = relay.transform.InferType()(mod)
output = func_16116()
func_16117 = relay.Function([], output)
mutated_mod['func_16117'] = func_16117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11959_call = mod.get_global_var('func_11959')
func_11960_call = mutated_mod.get_global_var('func_11960')
call_16194 = relay.TupleGetItem(func_11959_call(), 0)
call_16195 = relay.TupleGetItem(func_11960_call(), 0)
output = relay.Tuple([call_16194,])
output2 = relay.Tuple([call_16195,])
func_16199 = relay.Function([], output)
mod['func_16199'] = func_16199
mod = relay.transform.InferType()(mod)
output = func_16199()
func_16200 = relay.Function([], output)
mutated_mod['func_16200'] = func_16200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16262 = relay.var("var_16262", dtype = "float64", shape = (3, 2, 7))#candidate|16262|(3, 2, 7)|var|float64
var_16263 = relay.var("var_16263", dtype = "float64", shape = (3, 2, 7))#candidate|16263|(3, 2, 7)|var|float64
bop_16264 = relay.not_equal(var_16262.astype('bool'), relay.reshape(var_16263.astype('bool'), relay.shape_of(var_16262))) # shape=(3, 2, 7)
func_13634_call = mod.get_global_var('func_13634')
func_13636_call = mutated_mod.get_global_var('func_13636')
call_16272 = relay.TupleGetItem(func_13634_call(), 0)
call_16273 = relay.TupleGetItem(func_13636_call(), 0)
uop_16282 = relay.atan(bop_16264.astype('float32')) # shape=(3, 2, 7)
func_9950_call = mod.get_global_var('func_9950')
func_9952_call = mutated_mod.get_global_var('func_9952')
call_16286 = relay.TupleGetItem(func_9950_call(), 0)
call_16287 = relay.TupleGetItem(func_9952_call(), 0)
output = relay.Tuple([call_16272,uop_16282,call_16286,])
output2 = relay.Tuple([call_16273,uop_16282,call_16287,])
func_16291 = relay.Function([var_16262,var_16263,], output)
mod['func_16291'] = func_16291
mod = relay.transform.InferType()(mod)
mutated_mod['func_16291'] = func_16291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16291_call = mutated_mod.get_global_var('func_16291')
var_16293 = relay.var("var_16293", dtype = "float64", shape = (3, 2, 7))#candidate|16293|(3, 2, 7)|var|float64
var_16294 = relay.var("var_16294", dtype = "float64", shape = (3, 2, 7))#candidate|16294|(3, 2, 7)|var|float64
call_16292 = func_16291_call(var_16293,var_16294,)
output = call_16292
func_16295 = relay.Function([var_16293,var_16294,], output)
mutated_mod['func_16295'] = func_16295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14301_call = mod.get_global_var('func_14301')
func_14302_call = mutated_mod.get_global_var('func_14302')
call_16338 = relay.TupleGetItem(func_14301_call(), 0)
call_16339 = relay.TupleGetItem(func_14302_call(), 0)
func_6585_call = mod.get_global_var('func_6585')
func_6586_call = mutated_mod.get_global_var('func_6586')
call_16343 = func_6585_call()
call_16344 = func_6585_call()
output = relay.Tuple([call_16338,call_16343,])
output2 = relay.Tuple([call_16339,call_16344,])
func_16361 = relay.Function([], output)
mod['func_16361'] = func_16361
mod = relay.transform.InferType()(mod)
mutated_mod['func_16361'] = func_16361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16361_call = mutated_mod.get_global_var('func_16361')
call_16362 = func_16361_call()
output = call_16362
func_16363 = relay.Function([], output)
mutated_mod['func_16363'] = func_16363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5633_call = mod.get_global_var('func_5633')
func_5634_call = mutated_mod.get_global_var('func_5634')
call_16377 = func_5633_call()
call_16378 = func_5633_call()
output = call_16377
output2 = call_16378
func_16403 = relay.Function([], output)
mod['func_16403'] = func_16403
mod = relay.transform.InferType()(mod)
output = func_16403()
func_16404 = relay.Function([], output)
mutated_mod['func_16404'] = func_16404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14428_call = mod.get_global_var('func_14428')
func_14429_call = mutated_mod.get_global_var('func_14429')
call_16476 = relay.TupleGetItem(func_14428_call(), 0)
call_16477 = relay.TupleGetItem(func_14429_call(), 0)
output = call_16476
output2 = call_16477
func_16483 = relay.Function([], output)
mod['func_16483'] = func_16483
mod = relay.transform.InferType()(mod)
mutated_mod['func_16483'] = func_16483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16483_call = mutated_mod.get_global_var('func_16483')
call_16484 = func_16483_call()
output = call_16484
func_16485 = relay.Function([], output)
mutated_mod['func_16485'] = func_16485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16519 = relay.var("var_16519", dtype = "float32", shape = (4, 6, 15))#candidate|16519|(4, 6, 15)|var|float32
uop_16520 = relay.tan(var_16519.astype('float32')) # shape=(4, 6, 15)
uop_16524 = relay.cosh(uop_16520.astype('float64')) # shape=(4, 6, 15)
func_11406_call = mod.get_global_var('func_11406')
func_11409_call = mutated_mod.get_global_var('func_11409')
const_16541 = relay.const([[9.448568,4.397480,9.996659,-9.779675,6.297187,1.775321,-7.881832,-7.363242,-6.860295,5.734880,-9.565181,0.208095,7.387385,-2.330397,6.926090,7.881860,4.923740,-8.223957,-5.866876,1.900838],[-5.744957,6.696682,9.975385,-1.025447,-9.745593,2.070405,-3.993706,-5.477207,3.845698,2.229445,6.052860,8.143614,9.237113,5.619121,-2.522477,9.737464,2.900856,2.729280,-7.770859,2.413918],[2.415734,-2.240596,2.813622,-1.734363,8.812613,2.435130,-6.459322,0.676238,-8.768052,-0.782292,-3.708907,-0.381535,-1.292641,-9.559779,3.320098,8.471432,-3.901218,-6.678080,-5.587674,-1.025472],[-4.633629,-9.996178,-8.975724,-8.795691,-4.665505,5.056961,3.280716,4.869909,-7.200536,-5.220872,1.345627,-5.611985,3.478291,7.006737,0.552316,-4.740763,-9.684534,7.328351,-0.248190,1.239165],[-6.130309,5.614433,-1.448134,8.632372,6.034082,-5.002694,3.378485,-5.494234,4.736969,-6.971766,-3.428969,-3.585885,-4.809906,0.347719,-8.623819,9.527201,-3.509532,-6.319048,3.597103,7.816069],[9.805153,2.477138,-0.673463,-3.833077,-3.167233,4.387835,7.573319,7.175564,4.013461,-9.564717,5.349169,-4.401197,7.915105,0.437721,-6.523384,4.492830,-4.106006,-6.779019,-6.968157,0.716245]], dtype = "float64")#candidate|16541|(6, 20)|const|float64
const_16542 = relay.const([-4.320293,-9.632303,-2.735756,9.175693,9.080827,8.930983,-9.189466,0.648410,7.789962,5.652440,-7.925687,-9.829453,-1.032954,9.938578,-9.662107,-7.616646,3.762848,-7.237962,7.634719,0.644760,1.304602,7.105492,8.705333,-6.758322,9.738838,1.152771,9.593685,6.816254,0.459200,-6.041910,1.865422,-2.869150,8.139085,-3.942621,1.206179,1.771287,-9.550224,-2.093550,-7.355104,-1.959683,-1.419551,1.493915,-5.514442,0.472414,8.961591,8.513173,-2.880466,2.314339,0.946466,5.609298,2.495601,9.972182,6.568872,-2.688043,4.021438,-9.421105,-4.131368,6.631750,-7.991632,-4.810871,-4.937616,-0.782969,0.314308,9.378092,-1.287146,2.621142,5.635136,3.482750,0.787650,-8.878460,2.691969,-6.013800,-2.845752,-5.715280,4.398345,-2.912082,-6.396344,-6.681197,-0.652118,-6.394054,-2.100721,6.860844,6.743626,4.198806,-7.242118,6.051486,-0.498485,7.747369,4.029172,0.597723,-2.657657,9.324893,-8.969053,-2.176145,0.102078,1.324672,6.577917,8.793061,-7.801978,6.543049,3.022273,-6.519721,-6.175721,-4.050090,7.994057,-8.631488,-7.984065,-4.489694,-2.479415,9.084448,-4.964119,1.284140,7.417137,-1.741975,6.822109,-7.382892,-7.140244,-9.260414,-4.745965,-5.981616,-5.070667,6.954535,-1.324116,-9.588216,7.854147,-3.676882,-7.146579,3.654851,3.847574,6.243339,0.935105,6.526900,-1.173930,-7.143365,-3.738891,-0.776901,-9.482433,0.858737,-6.080512,4.992341,-0.671662,7.462417,4.341618,-2.705914,-3.054495,-4.966398,-4.543677,6.999480,7.204826,5.622502,-0.745600,7.129567,-7.250541,-6.962928,-6.289214,-2.324649,7.105788,0.665887,-3.691179,5.021521,-1.692566,-7.578171,1.659084,6.149458,7.084527,8.112060,4.623825,-6.180250,4.214144,-5.803414,-0.503387,-9.288956,-7.039146,2.953005,-2.013312,1.384518,-1.681734,2.890136,2.208817,-4.889736,6.448600,-2.812231,-8.791585,-4.849241,0.142351,2.848361,0.893975,-0.781732,-7.017741,-0.598946,-2.739108,5.180937,9.364922,9.457244,1.152322,-7.737261,8.221257,5.244861,4.106388,8.558053,-6.895181,2.001808,5.094643,7.650207,1.396747,-3.393857,7.387998,-0.912706,-6.394864,3.199125,9.847157,-5.049222,2.088616,0.781930,-7.574756,8.232820,4.476977,-6.834746,-0.363487,-1.233184,-8.246532,-2.326657,-1.194550,-4.283787,-0.384386,4.725291,0.654276,-6.741246,9.569852,-5.303802,-2.411527,7.340460,-5.380002,-2.073843,6.418945,-0.560442,7.036104,-3.868026,3.392595,-7.505147,-9.209148,8.765493,-7.559789,-1.561120,0.671145,1.259874,9.025567,-2.039521,-0.947980,-5.664472,3.427786,8.653303,6.843073,0.623963,5.784027,-4.511680,0.941661,0.704583,7.559009,0.541370,-1.419854,4.458641,8.888511,6.336629,-3.588040,-1.494588,-8.388379,8.154183,8.236272,-1.495387,-3.343466,-2.092673,3.459957,5.079715,-8.861400,6.678770,9.684949,-5.268689,-5.182607,4.367651,8.974952,8.540030,2.289643,-2.620019,5.583114,4.979890,2.278993,4.796084,-0.047179,-2.872854,3.341375,7.501066,-2.181917,-4.060011,-6.249132,3.795475,9.898637,3.707674,6.022307,9.253284,1.114451,7.162591,-2.675772,3.331216,0.540416,9.435824,3.611252,-5.913210,-2.311936,7.486897,-1.277399,9.213627,3.798130,-8.197102,-1.922847,1.983735,5.306055,-8.798832,4.711346,-9.202948,0.325419,4.060618,-3.905557,-3.098394,-5.629580,8.411237,9.368511,-3.786787,-0.580304,0.837236,-0.855801,-9.242766,2.495508,-6.389718,-5.748033,-9.917001,-8.556680,-7.493871,3.976890,-5.397800,-6.613086,-2.991850,-7.647024,-6.462055,6.759437,3.970198,-4.209471,7.947992,-7.725934,-4.542864,-5.228806,0.856072,2.764204,-9.846224,-0.109619,-5.040334,-9.432486,-1.541058,-0.346298,2.846324,5.753504,2.375150,-9.098521,6.320016,-4.645840,7.148610,-3.817207,-8.063138,2.094838,-8.061428,2.001113,-6.238904,6.061415,-4.956457,-4.132657,-7.181000,-4.628306,7.275719,-3.003590,8.169564,9.565951,-0.206794,6.151043,0.344673,3.237392,3.737037,-3.391911,-1.852470,-3.741815,7.624488,2.179607,-7.464946,-1.305316,-5.303189,3.055926,0.211978,2.147449,-8.459849,-6.831634,2.032242,-3.449528,-3.223636,-0.281633,-1.137653,2.717980,4.076076,6.698830,-9.098617,-9.969892,3.635162,3.466528,-2.839738,-0.579721,9.583798,-9.845709,-1.566283,6.330095,5.820531,6.335015,8.295745,-4.375151,8.253904,-1.786738,3.863888,8.156821,-4.007197,5.846355,0.637634,-3.654776,6.618112,2.393465,8.230916,-0.878169,-8.723427,-1.722547,6.937750,7.085499,9.500670,-7.545266,-2.782089,3.773463,-5.422967,5.756072,-0.028644,6.377232,-0.745535,8.308482,7.152910,-9.435813,4.836028,4.104921,9.001929,-4.768857,8.841466,4.296278,-1.568181,-5.053436,-0.171582,-5.896320,2.646247,-7.664430,-9.986460,3.801834,4.216583,1.375007,8.445413,0.556551,7.879789,2.645679,2.417046,-6.242470,6.294141,-1.266627,-8.809788,-8.443536,-8.814434,6.686336,-3.140951,9.765530,7.230386,-3.607114,9.083815,5.305270,2.294208,1.838410,-2.183524,-6.624154,4.516658,3.187158,5.273564,7.556040,-3.385833,-7.368260,-2.444705,-6.946269,1.639148,-0.014977,7.378766,8.629928,-1.755227,8.103780,2.068817,-8.805814,-1.341299,-2.211344,8.999175,-5.665274,3.311268,-2.679804,-4.910916,2.515237,0.319987,-2.869671,8.186874,-1.161316,2.578676,-9.958467,3.455385,2.006675,-1.710021,-4.002637,7.222622,8.967693,8.072701,-9.684738,5.915427,5.268084,1.139963,5.194569,-5.458833,-9.324895,7.096310,-7.469070,9.430198,-5.162802,0.952574,4.320031,3.892092,9.567662,-9.849818,-3.975754,2.968222,5.464220,-6.644891,-4.805183,-0.663381,-5.303367,0.534137,-6.085464,-7.324068,4.325942,6.268935,-5.929045,8.532618,-8.939573,-4.899299,7.599821,-0.487596,-9.625935,3.962718,8.652674,-5.024663,7.313898,-8.822907,-6.058524,0.032354,8.759848,9.752230,4.497885,3.197184,-4.436174,7.391272,-8.380031,-7.528496,-5.325468,5.971819,7.691490,1.310783,6.764598,4.436996,-7.542861,7.939273,3.583798,6.568035,-8.277301,-9.970466,-6.625267,-3.462688,-6.020445,-5.778680,1.183076,-9.931367,4.804217,3.640315,-0.863873,-0.434800,6.656830,-0.079147,-9.440937,-1.803336,-1.861732,-0.849850,-7.085597,1.969116,7.408767,1.714595,1.750093,-3.524865,3.105998,-3.802684,-3.185023,-5.803978,-3.712971,-0.770063,-1.626491,9.380020,-7.542638,-2.372982,1.850242,8.034556,1.967333,3.317354,-4.009416,6.595562,7.488177,5.646473,-0.692856,-6.999924,-2.048796,-7.342784,2.395603,-2.275684,1.894395,-5.612825,-5.267940,6.053040,-0.035717,0.643835,-3.052987,-5.206455,-9.281834,2.936955,8.729740,1.995170,2.322373,-1.052877,-0.986275,-6.704950,3.596974,-2.676483,-3.824285,3.226327,-8.754118,4.473367,5.905754,-0.477144,-9.416634,4.886806,5.590185,2.574911,-7.168628,1.254373,-8.327529,-3.957336,-9.178974,-4.479499,-1.010731,4.099559,-6.673479,-1.565275,-7.414381,1.260498,-7.132620,-7.861576,3.414676,-7.183373,-6.121296,-3.871523,0.783367,-0.634793,2.127551,-8.503723,6.057406,-2.280699,8.411720,2.891033,-0.050987,-4.762327,4.871815,-2.554313,-9.874657,-9.746534,3.329371,-2.225546,3.164647,-7.476158,3.215574,5.691239,5.009774,-2.514710,-2.765803,-8.607160,-8.093050,1.369645,-4.208244,-0.614354,3.894680,3.936477,-3.293873,0.236216,-2.100166,-6.718687,7.867775,-2.156650,-4.925285,4.195080,1.553489,6.127975,-6.559376,7.425967,-4.249807,5.191623,0.026476,-8.767823,-2.931442,2.623753,-8.342888,-7.596044,0.140071,-3.473693,0.711188,-4.554202,8.812807,-5.658118,2.290229,-2.526545,-2.984411,3.013158,-2.287634,1.206526,1.231291,-7.093807,-1.415309,9.103357,5.605489,1.386661,8.473393,4.024114,8.927364,-6.581351,-0.313037,3.301094,8.772110,-2.389923,-3.806466,-9.230420,-6.685541,4.225654,-0.315988,6.641973,-0.003238,-6.335633,-8.432165,9.416303,-3.090584,-8.236492,-4.201054,6.797465,-3.249081,-9.082362,1.526571,1.303006,8.563714,-1.348145,0.800564,3.050447,2.774215,-4.920810,-5.251453,2.344301,0.806746,4.541269,3.345741,8.756844,-2.836627,4.567246,2.691710,9.415548,6.582010,-8.689346,0.674811,1.411566,6.143022,6.076132,5.533228,-5.567279,-1.217738,-5.351283,-6.696378,-3.362522,6.764837,-0.871669,-7.088777,3.733984,-4.714586,-8.652631,-2.094327,-0.887932,5.841266,1.364742,-4.618655,-7.578523,6.789348,5.762047,-9.489004,-3.000044,5.317417,-5.588264,-0.474159,7.854890,3.614504,5.370122,1.472169,-1.812547,7.417712,6.975821,2.598142,-5.937201,7.693155,4.670793,0.995458,9.334715,-2.498311,-4.552191,-2.121777,4.706747,-4.649448,3.472288,-5.165744,-6.918927,7.005357,-2.965107,2.756849,4.420435,-0.183674,5.887042,-8.163315,-0.860074,-5.736556,0.050687,-4.658890,1.980292,3.148222,1.952997,-9.200276,6.187549,6.033166,-5.626736,9.430460,5.379204,-4.536612,3.720406,-7.331073,-0.130626,0.031420,3.328996,-8.646979,-5.149963,3.456628,-3.892834,8.288002,2.524497,9.807491,-8.172779,1.542078,-2.450063,-1.570653,-1.163437,2.085822,2.926556,-7.527966,-6.022173,1.307540,3.183958,-3.276933,-5.625208,4.695249,6.896741,-2.232073,4.985296,5.641794,2.093004,-7.858223,-1.533550,-0.773960,-0.943206,-3.630067,-7.117382,7.785364,-8.988422,6.885745,8.436523,-1.638990,8.986083,-7.894682,-2.608205,-2.447766,5.685173,0.724424,-2.582686,-4.529085,1.092960,3.603328,-9.338763,6.038700,8.046359,-9.209192,8.155461,3.940095,9.813215,-4.835383,3.753960,4.509625,7.287042,9.810753,1.703388,-4.525311,-0.541055,-4.519759,-4.541073,-2.149585,-3.467214,-0.039087,9.799074,-9.613430,-7.561067,6.910218,9.947976,-5.856233,6.671870,-0.003725,5.631988,1.436339,-7.840171,8.934358,1.441034,-8.046213,-1.503349,-2.551947,-2.438826,-9.148131,9.874778,3.697857,-1.522040,9.902610,8.377798,-2.453449,-9.073193,-6.356643,6.575156,6.148987,9.285636,-1.022731,-9.421777,-0.444113,5.434591,8.014309,-0.036151,8.420673,5.698860,-0.907891,-0.263172,4.522407,3.847100,-3.680861,3.974246,0.036816,9.586693,-9.397757,-0.172667,1.304932,9.827699,-7.008978,9.046360,9.922275,-8.157955,2.713581,-8.811098,2.970205,-4.485703,3.069696,8.826035,0.995463,-8.974169,1.344563,-2.550457,3.032005,5.980425,8.823993,8.822172,9.893953,-6.928446,3.616088,-3.841629,-1.922467,-4.810957,-3.268188,2.550415,-3.190974,-5.438721,-8.894842,-1.791275,-1.373666,-2.507498,-3.240803,-3.932788,7.716954,-3.844519,-0.949633,-4.525876,-8.782400,-4.837051,-6.328244,-2.124718,0.131982,-1.351939,0.425763,1.375037,3.503706,4.877602,-1.185836,1.960018,-3.728320,-3.317408,-5.524595,-0.735182,3.680498,-0.233301,-1.449624,-6.313253,4.713341,7.259529,-2.378940,-5.206879,-9.758208,9.595574,-4.106204,0.693683,4.159067,0.785921,-3.753957,-0.341695,-6.075480,4.650578,4.448725,-9.964593,1.990722,0.389348,9.723449,6.753008,3.052062,-1.664853,0.836739,-6.038355,9.161958,2.163976,0.860664,7.970486,-6.951634,-6.949106,-2.252481,-5.190191,8.698452,8.044016,8.069798,-5.234251,-1.813448,-9.197423,-5.939332,-9.655480,-4.658004,2.236128,6.891714,2.850636,-2.144532,0.876836,2.256423,-2.490381,3.008428,6.072356,-5.843586,5.107345,-6.415046,-1.075767,-9.707953,-5.193469,-1.734734,2.730262,-4.362065,5.529216,-9.633034,0.434349,-7.666629,-9.438105,-3.968396,2.237402,-3.688951,1.378883,-7.621701,8.441157,-2.221165,-1.930963,-0.454878,-5.472109,-3.659365,9.377580,-6.964707,-2.049302,-9.544371,-9.382208,-6.720281,7.437732,-9.451750,0.277707,-9.927071,4.710114,-3.506088,-9.550814,3.786570,5.064762,-3.427404,4.760683,-2.576665,-1.051846,-8.080680,3.594295,-1.470943,0.602408,2.534102,2.808446,-5.496691,-6.613679,-5.764914,0.405471,4.211218,-6.230815,4.936083,-9.065778,7.139872,-9.281687,3.302175,5.177750,-7.825380,-5.836063,4.106125,0.803429,-1.852209,3.631176,-5.741727,1.457300,9.250532,-8.919677,2.595301,-2.441178,8.983682,-7.478132,-3.770823,-5.321786,0.950667,-4.885256,-4.192572,-6.475719,3.523904,-4.960016,-0.204563,7.064772,8.855813,-0.117380,-5.320378,7.876003,2.728331,-0.402106,7.470726,-2.189055,6.994024,-3.769319,-1.984133,4.427330,-8.490544,-5.920635,5.526377,-6.783159,3.028045,4.615547,-6.021851,7.218355,-8.561207,2.987024,-2.421840,-6.419977,1.445974,9.690335,2.885360,5.495481,-2.083158,-4.502162,-0.132778,-7.313135,6.694028,2.396091,1.723219,2.444629,5.991799,7.113493,-9.766010,9.028612,-8.815074,-8.921930,8.875141,2.882551,2.266270,4.953310,1.630630,8.529809,0.786540,-5.128985,6.443042,4.766526,-9.292727,-6.926186,-3.341073,-5.872893,-2.844070,5.063137,6.520583,-9.619336,-8.459808,-1.785097,6.823484,1.427013,-0.983165,6.035088,8.622520,-2.302508,-9.882355,8.682505,7.167845,4.602246], dtype = "float32")#candidate|16542|(1248,)|const|float32
call_16540 = relay.TupleGetItem(func_11406_call(relay.reshape(const_16541.astype('float64'), [120,]), relay.reshape(const_16542.astype('float32'), [1248,]), ), 4)
call_16543 = relay.TupleGetItem(func_11409_call(relay.reshape(const_16541.astype('float64'), [120,]), relay.reshape(const_16542.astype('float32'), [1248,]), ), 4)
func_11050_call = mod.get_global_var('func_11050')
func_11053_call = mutated_mod.get_global_var('func_11053')
const_16567 = relay.const([-5,-3,2,-6,-5,10,-1,-1,1,6,-2,3,8,1,-8,-10,-9,9,-6,10,-10,-5,-1,-7,2,10,-2,1,-4,5,-5,5,9,7,9,-9,10,-1,10,3,-1,-5,-5,3,7,1,7,5,-10,-1,2,7,4,2,7,-4,-8,1,5,5,6,-5,-2,8,5,-10,-1,-8,6,-9,-7,1,-3,-1,10,2,1,-8,-10,-4,6,-3,-10,2,-4,7,7,9,4,-10,-7,10,-2,3,-5,-10,-9,-9,-5,-5,3,10,-1,2,2,-10,6,9,8,-1,-8,-5,-3,8,-5,-7,-4,-2,10,2,6,1,4,10,-1,-5,2,-8,2,5,6,10,10,8,-6,2,-6,3,-4,-10,-4,5,-2,-2,-8,6,8,-5,9,-8,8,6,4,2,2,2,6,3,10,-4,10,-2,7,-9,-3,-1,9,-4,7,-1,-5,-7,10,-9,-5,9,-5,6,-10,-10,1,5,1,3,5,-8,-8,-1,5,1,7,7,-4,-5,7,-9,-9,10,-4,-1,-8,-1,-6,-5,4,-2,9,-2,4,7,-5,10,1,-5,3,-5,-4,7,9,-10,-9,4,2,9,5,7,-2,-3,9,1,-3,4,5,7,3,-8,10,2,-10,-7,-9,-5,3,6,-6,-5,3,8,1,1,3,-10,-1,-4,-5,6,-7,-5,-8,4,5,-5,-3,8,8,-9,9,3,-4,-1,-10,-3,9,-9,6,-3,5,3,10,-1,9,1,-3,-9,1,-6,-8,-8,-6,4,-10,-4,4,4,-9,4,9,7,10,-9,-6,4,3,-3,-8,-10,5,-7,3,4,-6,-1,4,7,4,6,10,-5,3,1,-6,-2,-6,9,10,-3,-2,1,2,9,-1,-7,-7,3,2,-3,-6,-9,-4,4,-2,2,1,9,1,-9,-4,-5,-9,-3,4,-7,-1,-5,-7,-10,-5,-2,-6,-10,-10,9,-3,7,5,-3,7,1,8,-4,-6,3,-7,-10,5,-7,-6,9,3,3,7,6,6,2,5,9,10,-3,-7,9,-10,7,7,7,-1,5,-6,1,-10,8,-1,-5,10,-8,-10,9,5,9,-1,1,9,-1,9,-9,-7,4,-7,-8,8,4,-5,1,-10,-4,-7,2,-3,2,-6,-10,-9,2,-5,3,-10,-3,-9,-7,-3,9,-7,5,-5,-1,8,-6,8,-5,10,-6,4,-5,4,-3,4,6,-4,-3,-7,-9,-8,6,-3,-10,-10,3,-8,8,-2,-6,2,10,-4,-4,-9,-8,8,-6,-6,5,-5,-9,-9,-4,7,-7,-3,-6,2,-7,-2,10,10,4,2,-1,10,-9,-6,-7,-2,-3,-3,-9,-10,-10,3,4,-7,9,-10,8,10,-8,-10,-1,-1,-7,-3,3,-5,8,2,1,-2,9,-3,-1,-4,-1,-4,-7,7,1,-2,-5,-7,7,7,-7,2,-1,2,-10,-1,-9,5,1,-1,4,-9,10,-4,-3,7,-7,7,4,10,-6,-6,5,2,-3,-10,-6,-10,3,5,2,-10,-1,-9,-6,10,1,6,7,-3,3,-9,-2,-5,-10,5,-2,-5,9,1,-4,-7,7,2,-5,4,8,-5,2,-7,2,-8,-6,9,-6,3,1,6,5,-2,3,-8,-1,3,-5,-6,2,-1,-7,-4,-3,5,-6,4,9,4,3,-2,5,8,6,4,7,8,6,-9,10,-2,6,-10,1,-6,-3,9,-6,7,10,-1,7,-3,3,3,-7,-2,3,8,5,10,-4,6,-5,-1,-4,-4,-4,-7,10,-10,5,9,-1,1,3,-4,10,7,4,-2,2,1,-4,1,-8,-10,3,10,6,-10,5,-4,-5,-2,-10,-7,-10,-8,-9,-8,-2,-10,6,8,5,9,-5,5,-7,-9,3,9,8,-8,8,6,4,4,-7,-2,-4,2,-7,1,4,-10,10,10,9,-5,-6,9,-8,-10,9,7,6,-5,6,6,8,9,-5,5,1,-3,2,8,4,5,1,-9,1,9,-9,-1,1,2,3,2,-9,10,6,1,8,-5,10,-8,-5,-10,4,-1,3,10,3,9,-6,5,-9,-4,-4,7,-3,5,-4,2,8,2,9,7,-4,3,-5,2,7,-10,2,-5,4,3,-6,-7,-10,-6,-9,-10,7,-2,4,-6,-7,3,6,6,-1,2,-6,2,8,-3,-10,1,-6,2,7,2,6,5,5,-4,10,4,4,2,-3,-10,-7,4,4,-5,4,4,3,2,3,-6,3,-1,-5,1,-7,5,-10,9,-5,-4,4,-8,9,6,-9,7,2,1,10,-7,2,10,9,7,-6,2,1,6,4,-6,-4,-5,2,4,-9,-8,3,5,9,-5,-5,4,8,9,-4,5,7,-6,7,8,1,8,-4,-5,7,10,10,9,4,10,-3,7,6,-9,-3,2,5,-9,3,3,-5,-1,7,-3,-9,10,-1,-10,-10,3,-5,9,-2,-8,2,4,-4,-2,-8,1,-1,7,-8,10,-5,-3,-5,2,-9,-2,-2,10,-5,7,1,-1,9,-4,-5,6,7,-10,-10,-10,3,-1,2,2,-6,-1,7,9,7,2,10,-2,5,-9,-4,-7,-3,-3,2,2,-4,-4,4,4,7,-3,-4,-3,-7,-6,-3,2,-1,-1,-2,-10,-4,7,10,-9,-9,-5,7,2,10,9,-10,9,7,4,-1,-4,-3,-4,4,9,6,-6,1,1,5,5,10,-9,-4,-6,9,1,-1,-2,-8,8,-4,1,2,7,1,-3,7,-9,4,5,5,7,3,-3,-2,-7,5,10,-7,5,10,-10,-1,-6,-4,2,1,5,9,-4,-1,7,-8,-3,5,-4,9,2,5,-7,-2,-8,8,-4,-3,8,-9,10,-6,-4,-5,6,4,-4,-7,-8,9,10,3,-4,4,2,9,-1,-7,5,-3,5,-10,-6,7,-6,4,-4,9,3,10,-9,9,5,4,9,-3,-7,-3,-2,9,-9,-3,7,-10,7,10,-10,-5,7,5,9,2,10,8,-6,-9,7,-9,-4,-7,-9,-5,5,2,-9,10,4,3,7,-6,-8,9,7,-10,-7,1,3,4,8,-10,2,7,1,-10,3,3,-2,-7,-2,-1,-3,4,-2,3,-6,-9,4,4,5,-6,-3,8,-1,6,1,2,-4,1,7,-6,-9,-1,8,-8,1,-1,-1,2,5,5,7,-1,6,-9,-6,-3,-9,-7,2,-1,-1,7,-5,-6,-7,10,10,7,3,-6,10,-5,-6,7,2,-8,4,5,-6,-2,3,9,3,-9,3,-7,-7,-3,9,-8,9,3,5,1,-8,4,-4,7,8,-4,-1,5,5,10,7,-4,8,-8,-5,4,-3,-7,1,4,7,-2,1,8,-3,-2,6,7,-7,-7,-5,8,-1,-6,-8,-2,10,-5,1,-1,-10,7,2,2,-8,-10,1,-2,2,5,-10,-4,2,3,3,-2,-6,-10,4,8,2,6,5,-6,-5,8,9,-8,-1,8,5,-8,-8,1,-10,-5,-6,-6,8,1,-6,-1,-1,7,1,6,5,9,2,-7,-1,-5,-3,2,-6,7,10,-6,-8,-2,10,3,4,1,5,8,-2,5,-5,-9,7,-10,3,-7,1,-7,9,-6,-5,-1,-7,-6,-4,-6,-5,-8,10,-1,-8,-5,-10,-7,6,6,-2,-2,5,-10,9,6,3,-6,5,-8,-8,1,-5,8,4,3,-8,7,-2,-2,4,-5,-5,-10,2,3,-10,7,3,-9,7,2,-6,1,-5,1,5,6,10,-10,3,10,8,-9,3,7,-9,-9,8,-6,-7,2,-4,-9,4,7,-3,-1,6,-9,9,3,4,4,4,-5,-7,-2,-7,7,10,-1,5,-3,3,2,-9,9,-8,5,10,-4,9,10,-9,-7,3,4,-1,8,1,7,8,-3,-6,-10,-8,-7,-10,-3,6,-8,10,-8,8,-7,8,1,10,2,-2,-4,9,-7,10,10,2,6,9,-4,-2,10,-7,-7,2,-2,-4,-7,2,1,-4,10,8,-9,-2,8,6,-5,6,9,-1,-6,-1,-7,-7,-5,-9,8,-10,8,9,-5,3,-7,10,-1,-9,6,-8,-1,3,-7,-8,4,1,10,-8,-5,5,-2,-8,-7,-9,-6,-8,-3,2,5,-6,-10,9,-7,6,-9,-5,-7,-3,-1,9,-1,-4,-8,-8,-10,2,-1,1,9,1,-2,9,9,-4,-6,6,10,6,10,-2,8,10,6,-7,-3,-5,3,4,7,2,3,-5,-10,2,4,-10,-10,2,-6,-3,7,5,1,2,9,3,2,6,10,-3,6,7,-6,1,7,-2,-1,4,6,2,-2,1,7,-7,7,-1,3,-8,8,2,3,-10,1,-10,2,4,1,7,3,2,3,-3,-3,7,10,7,-5,2,10,3,-6,-7,4,-2,7,-9,9,-1,4,-4,-9,-2,5,-8,-7,-1,2,7,-2,-3,7,1,7,-8,10,-9,-10,-3,4,4,-4,4,2,2,-2,-5,10,-3,-8,9,-3,-8,9,10,5,-5,-6,7,-10,-2,-5,-1,2,1,7,1,6,4,1,9,7,-6,-4,-3,-1,9,1,-8,-6,-5,9,-6,5,2,-4,-3,6,-6,-2,7,3,7,7,-8,-6,-9,-1,4,5,-4,-7,-3,-6,-5,7,2,-1,-5,6,-3,-8,-9,-7,5,-9,2,5,10,4,2,1,-3,-2,-1,4,1,8,3,3,9,8,-7,-9,-6,6,6,3,10,-10,4,-6,-9,4,-2,-9,-8,-4,-2,4], dtype = "int8")#candidate|16567|(1792,)|const|int8
call_16566 = relay.TupleGetItem(func_11050_call(relay.reshape(const_16567.astype('int8'), [1792,])), 4)
call_16568 = relay.TupleGetItem(func_11053_call(relay.reshape(const_16567.astype('int8'), [1792,])), 4)
func_5744_call = mod.get_global_var('func_5744')
func_5746_call = mutated_mod.get_global_var('func_5746')
call_16569 = relay.TupleGetItem(func_5744_call(), 0)
call_16570 = relay.TupleGetItem(func_5746_call(), 0)
bop_16583 = relay.greater_equal(uop_16520.astype('bool'), relay.reshape(uop_16524.astype('bool'), relay.shape_of(uop_16520))) # shape=(4, 6, 15)
func_12097_call = mod.get_global_var('func_12097')
func_12100_call = mutated_mod.get_global_var('func_12100')
const_16592 = relay.const([5.664766,-4.339517,0.916187,-2.440908,-2.626457,-6.436832,-6.003391,-9.278968,6.341762,8.242663,-4.876918,-8.190251,5.867044,-2.691794,8.236861,7.041878,-5.930310,7.029901,-1.835366,-4.304614,1.201485,-4.223865,-6.590888,4.557172,1.721371,2.633897,3.464020,9.565259,-0.713138,6.493720,5.124157,-7.535125,8.979448,7.687756,3.009027,-2.079645,-1.264336,1.460139,-1.017728,9.280353,7.680641,9.392789,-0.726984,7.643040,5.671092,-7.792973,-1.144337,-6.649646,-1.639840,3.178783,-3.042469,-8.173706,-7.320072,1.881028,-9.525160,0.110489,0.880890,-3.338410,9.501720,-1.752281,1.357981,3.102885,8.341303,0.498226,3.831114,-8.242154,-7.528897,-5.037094,-6.152496,0.996101,-6.841674,-5.984154,-6.670886,-2.216818,-1.249467,-5.220540,4.837398,0.921909,4.740395,8.144733,4.111828,-3.701021,-9.790987,4.242594,-2.547192,-7.954164,8.900635,-8.383666,1.350998,9.154048,3.733566,2.719657,3.378158,-0.905052,1.306471,5.942176,0.145663,6.242176,-2.608741,-4.073254,3.431027,-4.996666,9.084071,-5.254784,2.921524,-3.265419,2.228581,7.079836,2.391604,-8.181604,6.796537,5.064303,1.616082,7.748770,7.809495,4.581119,-2.206960,9.119929,-7.710216,-5.939500,7.346967,6.091319,0.867801,3.544985,-1.836692,3.296014,9.237539,-9.350235,2.350038,5.697752,0.985088,-6.596237,-1.158295,5.972669,7.892850,-1.474523,-5.654955,-6.088863,-5.453225,-1.954874,2.880905,8.921258,8.279124,4.453771,5.425994,8.998155,3.505455,-7.884782,-6.680465,5.175978,5.048642,-6.965250,1.887693,7.335320,1.805243,-0.760250,-4.043790,0.764056,1.037880,-7.659983,7.486074,1.133146,0.291737,-6.653649,6.873322,-8.813864,1.905697,-3.935808,0.225532,3.227658,-2.178436,1.973890,1.653384,-8.361740,5.236419,7.256668,-1.621172,-3.950575,-5.980068,4.171828,-1.095407,-0.152451,7.674233,-2.043828,2.785510,2.776026,4.337023,-7.818613,3.600880,6.181973,3.471922,-9.967851,2.221443,-3.731193,5.800740,2.845362,4.745060,-3.585967,-6.023572,7.783506,-9.307949,1.096032,9.875912,-8.678696,-9.995004,8.215840,-8.037570,-6.331982,-0.642465,3.653427,-8.732097,8.003833,-6.463682,-5.181633,-4.492262,-7.164772,-6.028012,-0.928841,3.375070,3.776814,-9.410342,-9.952759,-1.409517,-3.165048,9.930454,-2.254871,-2.745306,7.035182,8.081990,-0.118006,7.610613,-4.998443,-8.369617,3.026807,9.475277,-3.561107,3.889044,-2.055209,3.632111,9.119429,-3.851091,-7.723549,8.586530,-1.631960,-2.501325,6.927411,6.539028,7.379966,-1.547335,-9.182353,5.796151,-2.776167,9.361781,-6.849624,1.734995,7.581607,-4.895080,1.832470,0.437261,-2.410704,-6.569771,9.323963,-0.856493,0.834483,5.751186,-7.717851,-3.312612,4.290395,-0.226089,-7.570672,9.135827,2.917786,-0.911059,-1.279289,-0.315071,3.548978,-3.708782,0.325467,5.789856,1.104825,-1.284762,-4.402338,-6.516115,-6.160359,0.796925,9.454367,-2.686300,-3.649382,5.888180,-8.966319,-1.904933,-0.849592,-0.440104,0.150422,-5.460277,-7.404623,-4.217731,-7.942066,-1.703680,8.757329,3.606687,8.212815,-2.228716,-3.267287,-9.713686,6.762955,-4.896812,4.638082,7.248141,8.974365,4.605907,-0.959221,-5.467182,3.995993,5.165406,-6.527657,3.368731,-4.620806,-5.124631,4.375714,7.924328,2.556957,-0.853557,-1.705923,9.805851,2.504995,3.446679,-5.430149,-4.394633,3.527438,2.860097,5.084813,6.775165,-2.214845,-7.769312,-8.193205,-6.263448,-8.984061,-6.005880,2.954715,-0.173111,-7.258364,-1.630695,3.828117,-7.796026,7.622675,-3.918940,-9.552968,-5.991182,6.204255,-3.463283,3.686964,7.057105,9.729369,-7.031904,9.259663,-6.369712,0.445617,0.296531,9.017325,1.402791,4.938306,8.520123,9.620421,-0.346474,1.176632,-8.679858,3.493922,-6.499053,1.570636,8.081483,1.874298,-2.982252,0.028118,1.758645,-0.890421,2.319067,-6.251792,1.068951,-8.840596,3.739034,0.320033,-6.937746,3.946926,1.087605,-1.468441,-5.442547,-6.306216,-3.245018,-1.213138,5.281915,-5.985346,-8.227696,9.437108,-1.792716,9.266922,0.129608,3.856943,0.074389,-7.035001,4.084344,-1.528354,-7.369583,-6.730290,-1.884260,-4.266837,3.523112,-3.574907,-9.166179,-5.369124,0.085044,-1.393222,-9.278346,0.590228,-4.159647,-2.490663,-5.991347,9.532967,-0.314353,8.191688,-3.059204,-1.833342,-2.841199,2.601527,-8.518172,4.781492,8.678360,7.852266,3.119961,-8.600021,-2.763717,5.988472,3.502502,-5.985739,-5.825185,-1.037270,2.030919,9.955493,4.885703,-6.012130,-5.937867,3.675982,3.668386,6.679803,0.569587,1.250622,-5.565531,-5.282260,4.790621,6.938580,-5.522342,2.469842,-8.807331,1.786311,1.177894,-8.109825,9.184934,-8.270146,-8.609519,6.172508,9.675475,2.817916,0.461279,7.036895,-6.948910,0.170003,-0.225271,8.398821,2.208853,-3.005059,-4.684011,-7.929387,-5.729744,4.665830,-1.100521,0.961206,0.657008,3.614086,-7.148328,6.855017,-7.616367,-4.780846,3.209328,3.157713,-4.685803,-6.889883,-9.155877,1.385507,1.026604,9.993503,2.169098,6.600992,-6.671724,-4.551500,1.109181,0.998863,-9.260953,-8.742110,2.734604,-5.323285,0.175052,1.234454,5.687331,-9.259155,8.107548,-7.441251,-3.184606,0.326681,-3.040071,-1.097064,0.767776,4.576105,7.587931,-6.579309,-7.590446,-7.947899,5.023586,7.250245,-2.668531,5.099340,-8.678645,2.898853,9.842043,0.644907,-3.303498,0.745911,9.828452,5.341167,-7.321333,-1.726334,-2.617239,-9.039797,-0.885762,-7.498548,4.214844,-0.747875,4.602291,0.934955,-9.615875,-0.885577,-3.267041,-5.573919,9.564034,-3.124700,7.801746,-7.475501,7.192093,0.479400,-2.032998,2.561984,6.034019,7.936663,9.923298,9.376090,8.896251,-4.747459,9.458026,-4.506632,-1.624892,-0.742602,0.582849,9.217221,1.677622,-0.492545,-4.259075,-0.601936,7.202609,-5.017957,-7.983719,-4.556625,4.861150,6.615440,9.784858,2.853692,-2.438072,-7.526085,-1.663372,-2.368755,-4.627829,-0.465124,-8.378379,5.913111,-5.905538,-9.388177,5.986792,2.815867,6.825737,-1.418227,-1.884257,-2.724904,8.749922,-5.584606,-3.923928,-5.918679,7.163737,5.838976,1.528166,1.690474,-6.986766,-7.959158,-6.809366,0.858309,-9.054561,-2.739728,4.699013,0.991326,1.888162,1.918560,-6.466343,0.893769,-2.921368,-8.139120,1.435212,9.082403,2.178223,0.989111,6.633151,-1.521518,-8.457462,-5.896875,8.846170,7.200848,6.415408,9.963303,-1.469385,0.260688,2.484267,-2.363230,9.494709,7.620715,5.652132,-3.948489,9.834779,-3.872517,-0.815524,4.261692,-7.275603,-1.312897,1.115265,9.333116,-0.531036,-6.307561,-9.968682,-5.695788,6.873890,6.350178,3.531749,8.433654,-7.454544,-7.144541,6.819639,-2.534857,-2.463151,1.868473,-4.111763,4.245137,-2.932541,1.776639,-3.862965,-2.511717,9.243480,-9.277078,-7.159647,4.069391,7.407000,2.827575,1.458315,-3.977181,-0.291397,-8.878294,8.189205,-3.228601,7.911760,-7.192426,7.369275,3.571188,-4.672541,8.735518,-4.953353,3.931318,8.050037,-4.694659,1.757992,-0.620097,-5.252059,-3.126513,1.386075,3.850053,-5.684535,-7.590222,6.231430,-3.959310,-7.179835,-5.095518,-5.941023,-6.822017,-8.432817,5.809523,-6.766015,4.148381,-5.634782,-7.639203,-2.937313,-4.794409,1.473919,4.373855,2.645021,9.255769,7.528835,-6.098827,8.466126,5.818247,3.539345,0.866965,7.576231,-9.008320,3.439189,0.141098,2.832685,-2.431349], dtype = "float32")#candidate|16592|(720,)|const|float32
call_16591 = relay.TupleGetItem(func_12097_call(relay.reshape(const_16592.astype('float32'), [360, 2])), 1)
call_16593 = relay.TupleGetItem(func_12100_call(relay.reshape(const_16592.astype('float32'), [360, 2])), 1)
output = relay.Tuple([call_16540,const_16541,const_16542,call_16566,const_16567,call_16569,bop_16583,call_16591,const_16592,])
output2 = relay.Tuple([call_16543,const_16541,const_16542,call_16568,const_16567,call_16570,bop_16583,call_16593,const_16592,])
func_16598 = relay.Function([var_16519,], output)
mod['func_16598'] = func_16598
mod = relay.transform.InferType()(mod)
mutated_mod['func_16598'] = func_16598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16599 = relay.var("var_16599", dtype = "float32", shape = (4, 6, 15))#candidate|16599|(4, 6, 15)|var|float32
func_16598_call = mutated_mod.get_global_var('func_16598')
call_16600 = func_16598_call(var_16599)
output = call_16600
func_16601 = relay.Function([var_16599], output)
mutated_mod['func_16601'] = func_16601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14109_call = mod.get_global_var('func_14109')
func_14110_call = mutated_mod.get_global_var('func_14110')
call_16633 = relay.TupleGetItem(func_14109_call(), 0)
call_16634 = relay.TupleGetItem(func_14110_call(), 0)
func_7156_call = mod.get_global_var('func_7156')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_16638 = relay.TupleGetItem(func_7156_call(), 0)
call_16639 = relay.TupleGetItem(func_7158_call(), 0)
output = relay.Tuple([call_16633,call_16638,])
output2 = relay.Tuple([call_16634,call_16639,])
func_16647 = relay.Function([], output)
mod['func_16647'] = func_16647
mod = relay.transform.InferType()(mod)
mutated_mod['func_16647'] = func_16647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16647_call = mutated_mod.get_global_var('func_16647')
call_16648 = func_16647_call()
output = call_16648
func_16649 = relay.Function([], output)
mutated_mod['func_16649'] = func_16649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16650 = relay.var("var_16650", dtype = "float32", shape = ())#candidate|16650|()|var|float32
const_16651 = relay.const([[[-1.198970,0.127182,7.559056,5.853815,1.332895,4.422925,-2.225400,-3.677132],[-1.595903,-6.845283,-8.932804,3.726894,-3.830094,1.165713,8.587326,-6.212407],[1.944949,8.545187,-4.407857,-4.779232,6.879366,-1.771976,1.980140,-2.181991],[-6.930839,1.114798,-4.257869,3.402224,1.119040,2.344402,7.151500,-2.665090],[6.610366,-3.595303,2.966893,4.368091,-5.199673,-5.723320,-0.737450,-1.842744],[8.530660,8.030494,-9.944579,-3.861756,4.954455,-5.179964,-6.156353,6.893419],[0.994788,3.085222,-5.683933,6.579253,-0.659394,-2.835601,-4.677783,8.481901],[-2.345293,8.241725,-2.402131,-4.733239,2.603438,-4.775913,6.988695,2.250980],[5.656153,7.516694,6.667090,1.419658,9.851879,-6.453091,-8.863259,6.274593]],[[-7.299678,1.739856,2.057346,-0.916443,-0.515381,-1.809017,-5.820209,-3.691508],[-2.633557,8.315399,-9.344993,6.827325,-4.873109,-0.345937,0.087078,7.988215],[-0.975229,-6.447471,-3.642577,3.652235,-6.653410,8.939483,6.255357,-4.467183],[2.605592,-7.099863,-1.785094,8.903090,2.824942,1.439951,-0.943142,6.942509],[8.616311,-1.402271,-5.810897,7.598167,4.187308,-0.120277,-4.153829,-1.198860],[-5.652560,-4.788270,-2.328232,-7.907014,7.579035,-0.965480,-9.213483,-4.008537],[-2.924968,-2.316883,-6.118568,4.226572,-9.287119,2.531313,-3.797120,-6.007036],[-9.465627,-2.864218,6.238410,-7.512012,-1.200238,-1.671164,-4.612852,2.862114],[9.780564,-5.818265,9.416158,8.773447,1.647914,-9.528539,-5.102575,-2.272087]],[[5.112622,1.984559,2.282636,6.838241,-3.756085,2.199218,8.644528,1.588569],[-5.849034,-4.361940,7.696149,2.274998,-6.606116,8.190361,-0.584107,5.871974],[-6.703166,-4.395212,5.129287,8.449107,4.408825,-7.023464,2.177826,1.304671],[4.698039,0.375396,2.171321,2.246564,4.340549,-5.825336,6.674020,7.832957],[-4.512570,3.893669,-7.513729,-0.835248,1.156702,-7.571365,-1.780518,-2.759460],[0.831830,5.915574,-7.405603,0.369721,9.867498,-9.319114,4.097896,-2.137007],[7.999294,8.630495,-8.548860,-2.727858,6.578814,1.590670,-3.694646,0.037810],[1.241394,5.439142,-5.321203,0.582649,-2.238321,-2.098115,-2.664246,-2.781679],[-5.136555,9.780653,3.663043,3.672910,-9.500119,-2.321452,-0.082864,-4.928342]],[[-5.517982,-1.644042,-1.181737,-7.265279,6.212080,5.044638,7.609945,2.226229],[1.703133,0.105471,-4.754795,9.311159,6.874732,-7.925434,-8.288507,7.783256],[-2.943393,1.528269,-7.169090,9.296987,-9.258624,3.514144,-0.781450,6.315590],[2.057243,-5.345815,8.047061,-7.928077,-4.028412,7.761387,3.831577,6.333232],[-5.168664,8.269977,6.033469,-7.021360,5.292254,4.628103,-6.119930,5.880228],[1.544641,-1.328164,-3.052520,4.003855,2.536901,0.108634,-2.286629,-3.709878],[3.721861,8.458501,-6.953157,-3.422903,5.236828,-8.149002,-6.698566,3.145628],[5.669759,0.243069,-1.891808,-4.252654,6.388574,-9.152197,2.231655,-5.757184],[-1.023710,1.091838,2.641891,-8.647803,0.183352,-1.290520,0.352043,-4.523475]],[[3.286783,-2.528086,-8.012547,3.685797,-4.607114,5.584117,-5.829486,-1.755840],[7.845933,-6.562149,5.573592,1.003040,1.232490,-4.624179,3.193751,3.144785],[-6.147099,-1.816461,5.262788,-1.953416,-7.271895,3.749575,1.457126,1.540414],[1.584285,7.581102,1.057770,1.040566,0.927873,3.838531,-7.749701,6.618404],[-7.727400,-9.544670,-4.221711,9.601699,-6.432703,4.663851,-2.718825,2.835093],[-9.558618,-1.815508,5.289670,-2.035564,5.665880,-3.220950,7.778774,6.760471],[0.610047,7.741181,-3.467546,-5.254693,0.302491,1.119167,0.445733,7.024733],[8.122424,2.943206,8.422054,3.290287,1.752127,6.001971,-0.819259,-2.065919],[-3.837941,8.565044,-7.943580,3.027514,0.340858,2.021453,9.161509,2.388780]],[[-5.634027,-5.273916,-3.142964,-2.333493,7.415357,-4.517005,-5.988818,5.256210],[-0.680366,-2.355181,5.897728,-4.629174,-1.583817,1.342167,-0.237788,-8.841361],[7.306156,1.635258,8.773677,4.141938,1.754103,-5.241106,-9.605881,-1.372104],[-0.526629,3.170526,-7.106824,-9.687460,1.887197,5.030023,-7.996934,-1.626021],[-8.874494,-3.527517,7.756943,-0.212858,8.814509,9.112630,-5.062845,5.706064],[-1.905375,-4.838496,-4.727707,9.314406,-5.759910,-5.696184,-4.109745,-5.951186],[-5.937386,-4.255153,-1.364227,-0.982688,6.681067,1.050297,1.412673,-4.648642],[9.014672,-2.507652,-4.971139,1.281783,-9.014922,2.753907,-3.118156,5.632025],[-7.964458,6.230135,-6.091922,9.814124,9.985588,-9.168294,6.258422,-3.027019]],[[1.259668,-7.469527,-2.534910,8.821623,4.111675,4.621682,-9.100507,-4.850890],[4.641475,-6.253642,0.307323,5.461145,-3.830942,0.035307,7.172497,8.527369],[3.785190,-8.275082,2.067423,-1.631175,-2.894425,5.041440,3.168422,-8.430322],[8.315510,-7.754449,-2.974433,8.154418,6.586015,-6.688094,-9.307889,-3.148758],[1.565238,1.285722,-3.262224,-8.882655,1.044526,2.440619,6.274285,0.155365],[-0.433989,-0.378606,-1.652768,-0.778803,-4.309010,-2.220029,-1.961710,-2.123030],[8.524804,-8.624452,-6.771903,-0.093364,-0.327044,-7.363579,7.027899,-5.384877],[8.849153,-1.038391,-7.237425,-7.821495,5.047960,7.179887,6.142980,-3.902866],[1.388695,-5.179544,9.752112,-3.281393,-2.032599,9.216729,-7.975840,-8.939735]],[[-1.622051,0.700992,3.785121,-8.477231,-8.411761,-8.575677,7.033085,-0.352498],[0.842988,-0.878300,-6.594713,7.226393,3.199076,-6.119174,-5.448926,-4.610783],[-8.202771,-4.414407,5.598338,-2.976594,-7.874651,2.012884,5.434813,0.730281],[-8.531306,9.954380,-6.343047,4.521003,-9.310653,4.948040,-3.601258,0.466686],[-7.103336,-3.053531,-4.187892,2.944949,5.658636,0.263463,8.506192,-7.417719],[-8.773324,-6.445203,-1.775428,2.749312,5.534270,3.111652,-4.096928,-4.027730],[-1.635894,-9.101660,-0.628449,-5.753433,-5.374977,-1.679544,-6.239614,6.864098],[0.017403,6.072104,2.318941,-5.355363,9.375939,2.309377,-2.339687,-6.172175],[-4.959094,-5.900321,3.300985,8.037283,-4.050555,2.057716,-4.675203,9.277444]],[[-9.521457,5.810394,0.321843,-1.479817,9.498469,-7.033128,-5.996635,0.267999],[7.344783,9.942001,-5.651154,-3.199373,-0.848051,8.218409,-9.889135,-0.285677],[8.866179,8.740594,8.325103,3.929600,8.278224,4.770240,8.428497,-3.150194],[-8.732595,2.513681,-5.781049,4.387283,7.915106,1.151253,9.401819,-7.382344],[5.105650,-0.473587,9.218744,-0.354229,9.958498,-8.456928,-5.660077,-7.025106],[-0.748247,4.637979,7.060712,-6.759381,1.654935,8.310073,7.552014,0.944955],[4.730115,-6.705844,2.671546,9.667026,-5.876769,5.502299,-5.764329,6.754421],[3.926936,-8.986852,1.872797,9.384075,-1.540146,9.888273,-5.732826,3.777707],[-6.124812,0.053425,-5.385088,6.199340,-6.151644,1.191064,-2.263824,-2.244434]],[[9.878692,-8.815229,0.016822,9.892361,-4.160437,9.841299,7.718124,-8.119199],[-0.265958,2.854813,-2.052983,1.486455,-3.705384,-8.363223,8.995261,-6.449928],[4.569139,9.338123,7.545429,-9.877082,-3.805810,-3.702757,-7.256883,6.136865],[-9.620349,5.208690,3.891708,-9.947568,1.499305,-2.473485,7.471809,8.473386],[-4.227678,2.129017,5.065310,1.373062,7.066287,4.276774,6.507288,6.956119],[-9.046709,-9.078153,3.713254,4.058165,7.025284,-0.467408,-5.288965,9.426473],[-8.751831,-1.990129,2.863973,5.225966,-8.190755,-7.958723,-7.902476,5.733341],[5.778235,-7.001071,-4.388159,9.842772,-4.494353,-8.575467,-4.600799,2.364242],[-5.805225,-6.692943,6.302170,2.120668,3.768368,6.529244,0.097857,-3.842568]],[[1.368075,7.107920,-2.778824,8.533899,-3.231272,7.194181,-1.423204,-1.070918],[4.042549,-8.267377,-5.018764,-0.177810,5.638213,4.317517,-2.890151,5.327069],[9.491827,-3.187083,-5.812615,-1.329033,6.102351,5.973171,-9.723514,9.878347],[-3.296393,-5.230836,3.344786,-6.027159,3.914409,9.537398,3.255555,9.520697],[4.856285,-6.786987,6.974206,4.429959,0.773826,-0.119412,-1.594089,8.588369],[8.509040,9.753840,-9.581163,-3.331710,-5.355086,1.035696,-8.186209,-8.162793],[-2.604612,3.831886,2.890736,5.160593,8.362310,-0.323839,2.534188,0.059346],[9.315391,9.502616,-7.227896,3.091096,0.700733,6.832841,4.026182,2.833902],[-4.560919,-4.093297,2.126550,-0.610229,0.316781,-7.491596,-8.387166,-0.345450]],[[4.813815,0.936569,4.049633,-1.141206,-8.006198,-9.551513,1.859676,6.103065],[2.231625,4.369107,3.310007,4.207894,-8.242037,7.888247,4.234479,-1.748734],[0.044731,6.434173,2.310657,1.887429,2.378370,8.876453,-1.780876,-9.964929],[-9.531936,-5.291193,-6.429553,0.544661,-5.656903,9.352138,-1.471910,-9.838311],[-1.905445,-3.370524,3.595444,3.383342,2.846322,1.881381,1.429650,6.979938],[6.420503,-1.020527,-8.185567,-4.593060,-7.791541,-9.469087,0.255087,3.155178],[-4.827552,3.811621,1.702885,-2.186028,-3.108590,-3.911365,-4.780709,5.588575],[-9.904144,9.740300,5.872541,5.855736,5.502724,-2.340779,-6.137920,-6.945176],[1.516285,-6.928873,-6.823751,-7.354119,-9.084080,7.697190,-0.892929,-0.270063]],[[-9.413407,3.299772,3.964277,6.618162,4.115217,4.281161,8.153135,-1.495023],[-4.472430,-5.696208,-4.742093,0.341575,1.902605,8.850234,6.167075,-6.420295],[6.065331,-2.376142,-9.686129,6.295609,3.090473,5.108167,5.352267,-4.617124],[-1.860682,-1.438243,1.091418,1.420379,-6.580137,-7.010412,-6.974910,1.392091],[5.392349,-4.327383,-6.117554,4.547088,8.754258,-7.116297,-2.168043,-5.708536],[9.718224,2.068700,-6.477943,-4.670915,5.230178,-0.341711,1.975540,7.283450],[0.583064,3.829161,-1.748643,-5.774750,7.852922,-4.255741,4.291757,5.674548],[8.223170,1.822155,3.746254,5.070746,-3.968019,9.372111,0.197443,-1.312710],[-7.928965,-1.206261,-8.502219,-9.720184,-7.631623,-3.869094,5.929380,-3.912127]],[[-4.324786,-0.550632,4.113574,3.227457,-9.161750,-9.845463,3.116846,-9.740493],[-8.277908,-3.389692,0.194064,-3.225121,9.059991,3.117747,-6.248338,-7.027194],[3.613938,3.905000,-8.377637,6.833160,3.562714,-9.959224,-1.806276,-4.915727],[-9.157294,-8.324412,-1.295003,0.152944,0.685284,-5.662869,-4.101698,-5.435137],[-6.994684,3.933641,-5.540377,4.843133,-2.696691,0.987144,-9.176826,0.199130],[-0.054501,5.129013,-9.931564,2.832936,4.910229,-7.079019,-9.672707,-8.983063],[-1.971756,7.259123,-5.882133,-7.835227,-1.048374,0.621369,9.326547,9.973581],[-5.260871,-9.955998,3.300340,-2.310272,-1.085337,2.628489,-7.291802,8.091581],[6.122171,5.775239,6.268734,-8.060090,7.493030,-9.172141,-3.399543,2.203008]],[[-8.232973,0.144572,9.138185,5.554747,-1.058218,-4.184758,-7.212580,2.951907],[-4.137713,5.585413,-4.342415,8.910707,9.583657,2.734771,-7.245656,2.128978],[-6.709649,-4.085721,-3.163475,4.680649,-5.719708,4.244725,6.709301,-0.633355],[-0.977799,0.336219,2.248229,-7.703176,5.320252,-8.504528,-7.665085,-7.460476],[0.736977,-9.400103,-9.293632,-2.395506,8.968992,3.186835,5.044102,-0.795482],[8.499486,-7.511147,1.930508,-3.610576,-8.205963,-1.614252,-8.084170,-5.364121],[9.577790,8.113338,-4.464752,6.198432,-6.492719,5.733632,-9.837953,6.360292],[2.398967,0.271113,-1.880156,4.565223,-2.241221,-3.425971,3.294346,-8.158709],[5.052597,-8.567874,-5.059775,-8.714158,5.498647,-9.755510,8.891820,4.072792]],[[7.625088,0.634433,-2.622544,4.963391,-8.699269,6.425041,-6.869315,7.569684],[-9.182411,4.120354,3.229135,3.852635,9.867739,-5.081690,8.147451,-5.277212],[-4.321635,-1.845768,-9.945253,-5.482716,4.180872,-0.939448,7.147367,-7.442640],[-7.017187,-4.556109,0.779147,-8.864913,7.252675,2.697736,-6.517945,-5.745598],[-5.495145,-4.343848,-2.127491,6.223425,-4.553550,6.653747,3.758151,4.370368],[1.223065,5.697156,6.582166,-2.077524,4.269695,3.096038,3.280130,-1.591680],[3.268206,-6.217756,4.085575,9.233750,-2.306350,-2.700854,-7.612642,2.546624],[8.199407,-1.240574,-6.791482,-3.562902,2.386172,4.656786,5.010697,-8.934518],[-3.044669,-9.431177,-2.977385,-0.691133,-0.965200,1.867179,-2.657972,-6.472786]]], dtype = "float32")#candidate|16651|(16, 9, 8)|const|float32
bop_16652 = relay.power(var_16650.astype('float32'), const_16651.astype('float32')) # shape=(16, 9, 8)
func_16483_call = mod.get_global_var('func_16483')
func_16485_call = mutated_mod.get_global_var('func_16485')
call_16655 = func_16483_call()
call_16656 = func_16483_call()
bop_16660 = relay.bitwise_and(bop_16652.astype('uint8'), relay.reshape(const_16651.astype('uint8'), relay.shape_of(bop_16652))) # shape=(16, 9, 8)
output = relay.Tuple([call_16655,bop_16660,])
output2 = relay.Tuple([call_16656,bop_16660,])
func_16663 = relay.Function([var_16650,], output)
mod['func_16663'] = func_16663
mod = relay.transform.InferType()(mod)
mutated_mod['func_16663'] = func_16663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16664 = relay.var("var_16664", dtype = "float32", shape = ())#candidate|16664|()|var|float32
func_16663_call = mutated_mod.get_global_var('func_16663')
call_16665 = func_16663_call(var_16664)
output = call_16665
func_16666 = relay.Function([var_16664], output)
mutated_mod['func_16666'] = func_16666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16116_call = mod.get_global_var('func_16116')
func_16117_call = mutated_mod.get_global_var('func_16117')
call_16745 = func_16116_call()
call_16746 = func_16116_call()
func_15733_call = mod.get_global_var('func_15733')
func_15734_call = mutated_mod.get_global_var('func_15734')
call_16782 = relay.TupleGetItem(func_15733_call(), 1)
call_16783 = relay.TupleGetItem(func_15734_call(), 1)
output = relay.Tuple([call_16745,call_16782,])
output2 = relay.Tuple([call_16746,call_16783,])
func_16787 = relay.Function([], output)
mod['func_16787'] = func_16787
mod = relay.transform.InferType()(mod)
mutated_mod['func_16787'] = func_16787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16787_call = mutated_mod.get_global_var('func_16787')
call_16788 = func_16787_call()
output = call_16788
func_16789 = relay.Function([], output)
mutated_mod['func_16789'] = func_16789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14585_call = mod.get_global_var('func_14585')
func_14586_call = mutated_mod.get_global_var('func_14586')
call_16800 = relay.TupleGetItem(func_14585_call(), 0)
call_16801 = relay.TupleGetItem(func_14586_call(), 0)
output = call_16800
output2 = call_16801
func_16816 = relay.Function([], output)
mod['func_16816'] = func_16816
mod = relay.transform.InferType()(mod)
output = func_16816()
func_16817 = relay.Function([], output)
mutated_mod['func_16817'] = func_16817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11277_call = mod.get_global_var('func_11277')
func_11278_call = mutated_mod.get_global_var('func_11278')
call_16818 = relay.TupleGetItem(func_11277_call(), 1)
call_16819 = relay.TupleGetItem(func_11278_call(), 1)
func_7786_call = mod.get_global_var('func_7786')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_16849 = relay.TupleGetItem(func_7786_call(), 0)
call_16850 = relay.TupleGetItem(func_7788_call(), 0)
func_8477_call = mod.get_global_var('func_8477')
func_8479_call = mutated_mod.get_global_var('func_8479')
const_16852 = relay.const([0.993751,3.443009,-6.998142,0.203877,6.083542,0.066555,-8.041861,0.086140,-5.998120,-0.908125,3.119205,-2.608879,-3.763028,6.312455,-9.187747,9.575069,-8.852124,6.029015,2.732883,3.248611,-4.933323,-8.054941,-6.585905,-9.089535,9.171415,7.245680,-2.752560,5.532946,-4.902902,9.743183,-4.090394,0.493891,7.758622,1.830074,1.375264,3.999862,8.236617,-2.867750,-3.707594,-4.591478,-8.433938,-4.509701,1.863613,6.277458,6.841236,-3.340474,5.443565,-4.462622,7.691078,-2.675789,-3.181053,-0.773738,1.400996,-5.266590,7.649738,7.675858,-8.904279,8.052021,-4.713080,-4.188316,8.600262,5.900372,-1.769791,5.676954,7.499302,-0.661436,-5.712768,2.603473,-6.122397,0.365942,-6.860350,8.880895,-9.548130,-9.480594,6.732570,-2.305704,-8.933481,1.062257,6.420463,-1.520998,-5.720962,9.157618,3.555613,-2.067062,-5.628028,-2.014275,3.736430,7.145072,-9.087464,-9.431660,-6.134096,-7.712428,-5.302634,3.995092,-8.803020,-0.071825,8.849530,4.967939,-5.806074,-0.761217,8.332019,5.552430,-9.202146,4.346670,-1.873965,-3.902321,-7.871715,5.520982,-2.900214,5.039127,-9.757364,-3.361003,0.905686,0.231999,4.498802,-0.224791,-9.061001,3.793458,-4.246145,9.104282,-4.486658,-9.386850,-4.561949,5.942378,-5.684604,7.372986,-5.054844,-7.774806,-7.624774,4.110850,6.405216,-7.034980,4.658052,-3.579493,-6.924681,0.502924,9.471354,-4.640853,5.400839,0.092609,-7.307348,3.871772,-2.040545,-7.868685,2.500516,-9.282970,2.711572,-0.820077,8.115937,-8.741932,-1.819654,-6.604551,8.011065,5.057254,3.111107,5.098329,0.119702,-7.663021,-4.061370,-9.375877,8.175190,9.449851,-6.806492,3.146837,-0.232793,3.107268,6.173281,3.714741,-0.037985,-5.980414,0.302987,0.307056,-4.940673,-8.905277,-9.414728,-3.942466,7.354336,-9.207653,0.160759,5.484421,-8.879503,-0.050981,5.895933,-8.261224,-1.046044,3.105381,-5.143176,-2.291314,-4.495593,-5.938894,-6.945733,-6.753415,-3.578602,0.267407,8.698256,4.839517,5.294927,9.607289,8.730903,4.766406,-6.339810,1.216454,1.146375,0.500826,-7.141743,2.407829,-8.412099,1.579199,-2.026908,-4.888760,9.879859,7.937909,8.622067,3.093650,6.796517,-9.958211,4.877454,-9.929697,-5.733626,2.870816,8.077375,0.469806,-4.795515,-3.629583,8.094264,-6.126995,7.089110,3.159539,9.522613,9.731531,5.865101,-9.116956,-9.349433,-1.892531,7.383997,4.516685,-6.170228,-1.570212,1.376464,0.391660,-0.740879,-0.229620,-4.741512,-4.397972,-4.447335,-3.286919,-0.104014,8.327776,8.249104,6.780285,2.913369,-0.853132,4.052653,-4.474401,2.347712,1.869769,-4.185959,3.140875,2.090457,-9.847088,-4.299825,-7.405883,0.096771,4.677855,9.830447,3.625594,8.765412,-4.050685,0.273369,-1.181844,-3.006502,-2.315359,5.678494,6.381740,3.890734,-8.365703,-1.557270,-4.424128,-5.016225,7.442792,-1.582793,-8.254014,-9.397008,-3.027788,-4.552242,-8.667095,-9.972845,7.144309,5.297592,9.983569,-5.751318,-2.120628,-6.414870,-1.302005,-5.837454,-5.466716,7.899920,-6.280258,3.980179,8.824961,1.595606,-7.541079,-3.404917,7.053408,6.120485,-8.565861,3.616421,-9.085868,-6.398628,-5.921921,-8.829793,6.560701,-3.958785,4.447636,7.165079,6.658890,4.074709,-4.861598,3.491877,3.375849,-5.458420,-4.404739,-1.905793,3.507179,0.142069,4.473070,-8.030888,8.631022,-6.335071,-1.906684,3.489848,3.124981,-5.755856,-9.624582,1.748682,-8.565764,-8.777179,4.488926,4.186298,2.553817,6.887201,8.967697,7.381421,-7.998160,8.165318,1.553469,-4.308153,2.969525,9.035389,-3.958724,7.734501,-1.919041,7.552786,-0.348005,4.223218,2.484489,-3.946328,-8.758321,-9.024360,-4.148908,-5.750005,-3.428453,-9.817027,0.780030,-4.326645,-5.444101,-3.222108,5.976099,1.546609,-1.544305,0.907701,5.952977,-0.909001,7.698958,-6.633743,8.130773,-9.950459,7.936497,1.969514,-8.442650,-5.717389,-4.479871,8.928986,-9.374305,2.285330,9.796060,-1.270251,1.009174,6.719664,5.594061,-3.388117,-5.752231,7.429894,0.896042,-6.494065,-0.829601,-9.745011,3.250386,-0.373480,-8.558613,-0.526343,-1.918810,-9.203711,-8.567653,-5.112382,5.083035,-7.392169,5.294887,6.255600,-8.976175,-1.530009,-2.790637,3.240451,2.602458,6.872630,-3.417415,7.704065,6.197652,-9.611655,2.264765,5.627351,5.954401,-3.609801,8.662517,3.693511,9.473805,-9.494417,-1.403504,0.290862,5.281799,-8.563288,0.223126,-7.277197,5.097868,-8.382688,-1.985361,-3.768793,5.315333,-6.688463,-9.466894,-5.050546,-2.882254,-2.487634,3.355335,-2.875828,-5.109748,-6.110989,-8.558815,-1.398737,7.603449,5.654657,3.920667,2.459992,-8.725717,8.882424,6.571227,1.695053,8.719718,-2.361613,1.296284,5.170026,4.754558,6.536285,7.555001,-7.052768,-1.061632,-0.248116,0.828271,-7.163998,8.010148,-9.155530,-6.859870,-3.323082,2.619012,-4.689174,2.025926,8.975771,0.754132,8.759595,-2.282281,8.567043,8.521927,-4.921427,1.641142,-7.187925,5.557800,9.866107,-6.411171,9.553935,-7.878472,8.403594,4.166145,4.101445,5.949651,9.657619,-1.309080,4.440537,-3.219283,-2.335356,-6.463198,6.650982,1.715889,0.402467,-1.062577,-8.456272,-5.403367,0.557314,-3.136424,-5.762570,6.560351,8.601626,-9.490815,4.751811,0.501249,-3.608873,-4.895037,0.589155,-0.181290,-9.939326,4.367006,-3.582390,-5.061016,9.752870,-5.414033,-9.164403,-5.402779,3.547557,-5.560782,4.381256,-3.476190,-7.213855,5.889520,-6.890687,-8.514449,6.312157,1.048917,-2.411680,5.000832,-0.094538,9.506152,2.558337,2.349746,1.549800,9.284469,3.097592,-7.341021,-9.209214,6.477394,-1.469697,6.320261,9.439377,8.903838,-7.884593,2.039588,-7.659246,-5.074181,-6.761159,-6.964296,7.773820,2.671232,8.635454,-9.356137,9.738081,-2.342607,-0.347759,5.092522,7.460884,1.541927,2.322628,-8.114186,7.074552,5.735083,-7.407262,9.996671,3.461449,-0.081645,5.785035,0.395593,-5.070711,-5.629046,9.684025,-7.326057,-1.538288,8.777649,9.532576,8.911860,-3.985774,-4.627254,-2.658508,-6.429115,-9.108431,-9.743409,-9.217535,0.730863,0.860327,9.185364,1.173332,9.437258,8.627891,-7.253499,6.974356,9.695070,-9.227157,-2.951733,-1.294135,9.114432,-5.307015,-4.802027,3.695054,0.526199,4.671452,0.986089,0.270069,-8.015722,8.614243,5.164435,-3.022676,-3.760836,-6.521191,8.339958,-2.889966,-9.328542,-8.251867,1.801214,-9.535888,-1.191723,6.691048,-0.287948,7.698485,3.984446,4.819368,6.900973,1.562549,6.284815,-7.368966,-2.633548,7.902131,8.114537,2.999420,3.048657,-6.643758,1.273802,5.752597,-8.369424,-0.439397,-4.656532,-0.076406,2.784287,9.352772,2.667317,3.800351,-2.609282,-9.153441,-3.519728,-5.926038,8.086973,-8.818421,-1.875386,3.681637,-1.859860,-3.991506,7.327714,-5.281418,5.047132,3.110084,0.803059,-1.528005,3.624139,-4.991762,9.366474,1.813509,1.927521,4.240702,-0.931875,-6.028820,3.661565,8.012065,3.680080,1.630447,9.387737,3.327223,-1.127790,5.965968,6.954941,2.318162,-4.863310,0.781471,-5.406316,-7.398260,4.613905,7.160245,4.514301,-1.258996,-0.659712,1.796848,-4.395864,4.874761,8.249752,1.239268,-0.514520,2.184997,2.624627,-4.452709,6.048910,-3.233171,9.156611,3.197005,-2.442162,7.166632,-9.766196,2.021794,7.158518,2.372558,1.105223,8.006246,2.017752,-6.067115,-4.547756,7.131930,0.352592,-5.409523,2.952417,-0.465393,0.370017,5.732981,-7.844822,5.693945,1.345025,-5.901738,1.784593,-8.742791,-2.046194,4.208408,5.258258,1.490378,4.277265,0.185544,4.366116,-5.254969,1.963716,-3.591490,-9.523931,2.309019,-4.608648,-3.040964,-9.394427,2.962819,-9.058531,8.691808,0.010606,-6.241537,-7.512987,0.812936,3.761670,0.637921,5.369946,8.929171,6.717498,1.503787,-3.704060,5.884332,-5.205158,-6.083240,0.637963,-2.840126,-7.787168,9.796376,-5.128521,-3.878942,1.249015,-2.809505,-2.245985,-5.004987,3.914558,0.026847,-0.159711,-1.433128,1.321487,5.689457,-1.969576,3.921027,-2.813349,3.559718,-6.591803,4.595445,8.594807,-1.013721,8.906762,4.395923,6.228739,-1.664168,7.158287,-7.529226,0.479112,-4.877950,-2.193268,-7.709649,-0.607415,4.750418,-3.017089,-3.114973,6.649337,2.678471,-5.665639,4.719468,4.646096,9.417213,-0.936183,-2.419575,3.146499,9.172363,-2.867726,-7.110084,8.066663,4.580047,-1.884498,-9.768648,8.781874,-0.856415,-9.795310,6.479294,-9.202675,2.368019,-7.887149,-8.194171,-1.670601,6.848963,-6.029012,5.396242,-4.963215,0.223447,4.773202,-1.525828,2.794577,-3.525142,-9.311053,1.004339,-8.993645,1.603859,-6.090235,-4.929550,3.709403,-0.005831,8.798988,3.501062,-6.857089,0.580034,-0.245901,-3.260126,-4.304770,-0.056812,-0.287010,1.686800,-2.847937,-8.505480,0.314882,8.354829,-6.965568,-2.284892,9.390446,3.586078,-4.125423,8.859530,-9.647046,-9.215527,-5.068974,8.374374,-3.020967,1.305180,9.320459,-8.810522,-4.679864,7.288552,6.074159,2.953953,-7.205339,-3.974041,9.520199,9.246500,-4.058930,-1.456966,-6.153554,1.157738,4.369767,6.012962,-6.559280,2.457431,5.880331,-3.095134,-5.127764,-0.754805,-7.261960,3.766767,-2.220670,-7.456066,-3.991617,-7.262078,-1.799211,8.693872,-7.816274,4.538729,-4.323820,-5.970134,4.356792,-5.083943,-9.524609,-6.641425,-6.274472,-7.203867,6.079885,9.728730,9.865276,-6.733550,6.442015,7.709185,5.664301,9.582609,8.767405,2.482893,-7.968760,-8.706022,-2.994366,8.323854,-0.512176,-2.178759,-2.102101,1.066162,7.899394,-1.018420,-8.511918,-8.063652,-5.231494,2.202501,3.277646,-7.249880,4.071656,-1.629327,-6.200485,-4.982616,4.685720,-3.486222,-6.683241,-3.754902,8.187898,-0.092176,-4.828286,0.296861,-5.687275,8.736529,-5.820151,3.806759,-8.507352,9.083807,-3.119472,-8.185534,-1.571678,3.467768,-9.199488,-7.964393,-1.489072,7.523394,-6.285038,1.163395,-9.580590,-9.343632,2.759117,-1.818824,-9.274576,-0.403556,9.194155,-4.361464,6.256016,-0.739717,7.777298,2.324146,2.874849,7.837846,-9.226169,3.826904,2.700242,3.596017,9.906273,-3.496332,2.282627,-9.232450,5.364229,9.908471,8.832175,8.334603,-8.719905,-7.858434,9.662380,2.875482,5.772288,-9.607300,1.734822,1.948230,8.910681,-0.497445,-8.156203,4.847260,1.903091,-0.768503,-2.538979,-8.545287,-1.794038,6.950417,-7.835999,3.878808,6.595992,-2.292877,1.850799,9.471238,2.468437,-1.241985,1.369386,-8.966534,-6.721300,7.534011,-7.993279,8.439799,-5.824610,-0.661638,-9.542604,-6.509934,-5.525267,-3.520762,-9.194239,-8.728072,4.669095,1.409116,0.031571,2.374278,-9.354494,-4.541402,-2.725297,-8.912473,-0.170493,6.853076,-3.404141,-5.822451,-4.436840,1.168700,8.345927,4.831558,-5.490324,2.637627,-1.916576,4.414030,1.549511,7.444800,3.325356,-0.500848,-6.992916,-3.669531,-3.753829,7.855013,5.920892,0.971351,3.147931,6.244650,-6.730392,1.860272,-4.768941,8.327916,-2.557382,8.931753,-6.384036,-6.900571,-7.821854,-2.247949,1.258494,9.443177,-1.758654,4.943438,4.085952,9.657750,2.023881,-4.541414,7.532786,4.238825,-8.756584,5.423821,1.270097,-5.505036,6.823422,-6.815042,-3.354136,0.475854,-7.525510,-7.204306,-9.468573,0.384933,-7.439261,9.008593,-4.912786,-9.575525,4.455771,8.165336,3.014325,-6.389259,-6.649832,1.573006,8.509285,0.337051,-1.346001,5.471774,7.293918,-1.258588,8.876813,7.933939,4.014618,-8.951766,-5.416333,6.495412,7.982154,-7.796493,-3.348689,9.080550,-9.249596,5.652356,-7.376321,4.188761,-2.496883,-1.939910,6.307417,2.854602,6.059659,-6.983027,7.627260,5.223489,8.407482,4.113431,7.021872,3.857551,8.859672,-4.111463,-2.307781,-8.667183,-4.288163,-7.129332,-3.392439,-0.234039,1.952075,5.593303,-0.879558,-4.058058,-1.491458,3.228814,-7.396868,-5.718248,7.437755,9.463846,-5.902598,-7.949929,-9.711551,5.928502,-4.661799,-9.488035,-8.532823,0.504767,-0.625117,-8.395495,8.997942,3.773864,2.964591,9.294179,-8.504376,-9.414781,-3.628292,5.204064,4.976797,-1.972870,-5.917355,3.739282,-3.630527,8.307096,-5.903887,-7.923785,1.650153,7.238913,0.632567,-5.122781,-3.724937,-2.529736,7.579984,2.312382,-8.718369,4.057828,9.744999,2.462752,1.789421,-1.262206,7.138347,4.263348,-9.760771,5.625586,6.998386,-5.329909,-4.951595,3.028204,-2.782713,-1.353915,-6.149004,-6.895291,-8.545042,0.919906,-6.731745,-9.408172,-2.559523,2.027762,-7.083075,-6.997454,-0.608650,6.150489,-1.357073,-2.018505,-6.412522,6.806121,-1.183009,-2.635296,-8.662687,-9.616063,7.815890,-2.174404,-3.723906,9.424409,-8.081410,9.033122,-4.373266,8.497322,2.717205,8.733463,-7.496889,-6.687129,-1.992704,6.637631,-7.721860,-0.509888,-6.432345,-7.085003,-8.351720,-2.135653,3.766823,6.262156,-9.708749,-1.134086,-7.563425,2.586903,6.366279,-1.330542,-5.217153,-9.052839,8.200852,0.436870,8.620674,9.134149,5.384050,-3.962113,9.362415,-2.407640,-2.626762,7.883858,-5.844123,5.000146,-4.450949,-6.629761,3.631501,2.518996,5.259058,1.027704,-9.972507,-6.710890,-1.576134,9.012719,-8.952353,0.603033,-3.368694,8.399069,-3.571329,-6.934085,-2.551403,9.290824,6.789993,0.551821,4.437874,2.394056,8.783501,1.394616,-0.235993,9.231645,-8.888191,1.034298,4.574469,-1.754696,4.747215,-4.549763,6.311109,-8.411337,-7.296333,8.093628,-0.158043,-5.817127,-1.314303,9.799929,-2.429910,4.675266,2.931217,8.910942,2.017465,-1.903122,2.381823,9.649551,0.618293,8.503995,0.346409,0.326678,-2.665435,6.880281,-9.378230,7.603238,0.079759,1.188495,-0.995078,1.909722,-2.086296,-7.566841,-4.477124,-6.153628,2.366805,8.714589,-6.990942,-7.549792,-7.716348,8.378981,-6.734307,2.350409,4.798387,6.651012,-6.890017,-8.614021,-4.151264,-4.601781,-5.821330,-7.697993,-3.047101,-7.968518,2.205080,1.215749,-6.211513,-4.345086,-5.148166,-7.428615,-4.603408,0.849884,-1.201613,-0.637755,-6.946114,6.833658,5.873707,6.239361,8.063662,9.827232,-9.139661,8.440895,4.641674,-1.033247,7.070521,-7.080645,-8.026830,-4.380520,4.556867,1.467918,4.671371,-9.244575,2.008487,3.671785,4.466145,7.931628,0.831350,-4.461367,-9.868007,-3.864423,8.865943,5.390403,-6.461700,-9.965928,-4.456418,-7.430125,-5.203471,1.237654,-4.473794,-2.823810,4.319374,4.475454,-8.986396,1.074321,-4.981207,0.399835,-9.062085,0.524608,-6.948315,-4.814924,-6.637658,9.312987,2.302946,-2.105551,8.624309,6.167623,-2.781601,0.152148,-2.364937,8.640606,9.245801,-9.679442,1.963341,-7.329622,3.838644,4.320518,8.683133,-3.735313,4.965826,-6.876268,-6.756209,0.307705,9.412020,2.331284,3.858664,-2.980094,5.377239,1.156031,1.271395,6.749849,-2.146790,-5.318231,2.832563,7.168598,0.462518,9.213954,5.776829], dtype = "float64")#candidate|16852|(1440,)|const|float64
call_16851 = func_8477_call(relay.reshape(const_16852.astype('float64'), [6, 15, 16]))
call_16853 = func_8477_call(relay.reshape(const_16852.astype('float64'), [6, 15, 16]))
output = relay.Tuple([call_16818,call_16849,call_16851,const_16852,])
output2 = relay.Tuple([call_16819,call_16850,call_16853,const_16852,])
func_16865 = relay.Function([], output)
mod['func_16865'] = func_16865
mod = relay.transform.InferType()(mod)
output = func_16865()
func_16866 = relay.Function([], output)
mutated_mod['func_16866'] = func_16866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12497_call = mod.get_global_var('func_12497')
func_12499_call = mutated_mod.get_global_var('func_12499')
call_16867 = func_12497_call()
call_16868 = func_12497_call()
func_14547_call = mod.get_global_var('func_14547')
func_14548_call = mutated_mod.get_global_var('func_14548')
call_16950 = relay.TupleGetItem(func_14547_call(), 0)
call_16951 = relay.TupleGetItem(func_14548_call(), 0)
func_8677_call = mod.get_global_var('func_8677')
func_8679_call = mutated_mod.get_global_var('func_8679')
call_16954 = relay.TupleGetItem(func_8677_call(), 0)
call_16955 = relay.TupleGetItem(func_8679_call(), 0)
output = relay.Tuple([call_16867,call_16950,call_16954,])
output2 = relay.Tuple([call_16868,call_16951,call_16955,])
func_16968 = relay.Function([], output)
mod['func_16968'] = func_16968
mod = relay.transform.InferType()(mod)
output = func_16968()
func_16969 = relay.Function([], output)
mutated_mod['func_16969'] = func_16969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14882_call = mod.get_global_var('func_14882')
func_14884_call = mutated_mod.get_global_var('func_14884')
call_17088 = func_14882_call()
call_17089 = func_14882_call()
output = relay.Tuple([call_17088,])
output2 = relay.Tuple([call_17089,])
func_17100 = relay.Function([], output)
mod['func_17100'] = func_17100
mod = relay.transform.InferType()(mod)
mutated_mod['func_17100'] = func_17100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17100_call = mutated_mod.get_global_var('func_17100')
call_17101 = func_17100_call()
output = call_17101
func_17102 = relay.Function([], output)
mutated_mod['func_17102'] = func_17102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11250_call = mod.get_global_var('func_11250')
func_11251_call = mutated_mod.get_global_var('func_11251')
call_17120 = relay.TupleGetItem(func_11250_call(), 0)
call_17121 = relay.TupleGetItem(func_11251_call(), 0)
output = relay.Tuple([call_17120,])
output2 = relay.Tuple([call_17121,])
func_17138 = relay.Function([], output)
mod['func_17138'] = func_17138
mod = relay.transform.InferType()(mod)
output = func_17138()
func_17139 = relay.Function([], output)
mutated_mod['func_17139'] = func_17139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10625_call = mod.get_global_var('func_10625')
func_10627_call = mutated_mod.get_global_var('func_10627')
call_17147 = func_10625_call()
call_17148 = func_10625_call()
func_13634_call = mod.get_global_var('func_13634')
func_13636_call = mutated_mod.get_global_var('func_13636')
call_17151 = relay.TupleGetItem(func_13634_call(), 0)
call_17152 = relay.TupleGetItem(func_13636_call(), 0)
func_7669_call = mod.get_global_var('func_7669')
func_7670_call = mutated_mod.get_global_var('func_7670')
call_17169 = relay.TupleGetItem(func_7669_call(), 0)
call_17170 = relay.TupleGetItem(func_7670_call(), 0)
func_13105_call = mod.get_global_var('func_13105')
func_13106_call = mutated_mod.get_global_var('func_13106')
call_17180 = relay.TupleGetItem(func_13105_call(), 0)
call_17181 = relay.TupleGetItem(func_13106_call(), 0)
output = relay.Tuple([call_17147,call_17151,call_17169,call_17180,])
output2 = relay.Tuple([call_17148,call_17152,call_17170,call_17181,])
func_17190 = relay.Function([], output)
mod['func_17190'] = func_17190
mod = relay.transform.InferType()(mod)
mutated_mod['func_17190'] = func_17190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17190_call = mutated_mod.get_global_var('func_17190')
call_17191 = func_17190_call()
output = call_17191
func_17192 = relay.Function([], output)
mutated_mod['func_17192'] = func_17192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17221 = relay.var("var_17221", dtype = "float64", shape = (9, 14, 9))#candidate|17221|(9, 14, 9)|var|float64
uop_17222 = relay.exp(var_17221.astype('float64')) # shape=(9, 14, 9)
func_14015_call = mod.get_global_var('func_14015')
func_14016_call = mutated_mod.get_global_var('func_14016')
call_17232 = relay.TupleGetItem(func_14015_call(), 2)
call_17233 = relay.TupleGetItem(func_14016_call(), 2)
output = relay.Tuple([uop_17222,call_17232,])
output2 = relay.Tuple([uop_17222,call_17233,])
func_17247 = relay.Function([var_17221,], output)
mod['func_17247'] = func_17247
mod = relay.transform.InferType()(mod)
var_17248 = relay.var("var_17248", dtype = "float64", shape = (9, 14, 9))#candidate|17248|(9, 14, 9)|var|float64
output = func_17247(var_17248)
func_17249 = relay.Function([var_17248], output)
mutated_mod['func_17249'] = func_17249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10206_call = mod.get_global_var('func_10206')
func_10207_call = mutated_mod.get_global_var('func_10207')
call_17257 = func_10206_call()
call_17258 = func_10206_call()
output = call_17257
output2 = call_17258
func_17272 = relay.Function([], output)
mod['func_17272'] = func_17272
mod = relay.transform.InferType()(mod)
mutated_mod['func_17272'] = func_17272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17272_call = mutated_mod.get_global_var('func_17272')
call_17273 = func_17272_call()
output = call_17273
func_17274 = relay.Function([], output)
mutated_mod['func_17274'] = func_17274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9312_call = mod.get_global_var('func_9312')
func_9313_call = mutated_mod.get_global_var('func_9313')
call_17319 = func_9312_call()
call_17320 = func_9312_call()
output = call_17319
output2 = call_17320
func_17331 = relay.Function([], output)
mod['func_17331'] = func_17331
mod = relay.transform.InferType()(mod)
output = func_17331()
func_17332 = relay.Function([], output)
mutated_mod['func_17332'] = func_17332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16403_call = mod.get_global_var('func_16403')
func_16404_call = mutated_mod.get_global_var('func_16404')
call_17391 = func_16403_call()
call_17392 = func_16403_call()
output = relay.Tuple([call_17391,])
output2 = relay.Tuple([call_17392,])
func_17400 = relay.Function([], output)
mod['func_17400'] = func_17400
mod = relay.transform.InferType()(mod)
mutated_mod['func_17400'] = func_17400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17400_call = mutated_mod.get_global_var('func_17400')
call_17401 = func_17400_call()
output = call_17401
func_17402 = relay.Function([], output)
mutated_mod['func_17402'] = func_17402
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17407 = relay.var("var_17407", dtype = "float64", shape = (1, 14, 14))#candidate|17407|(1, 14, 14)|var|float64
uop_17408 = relay.exp(var_17407.astype('float64')) # shape=(1, 14, 14)
output = relay.Tuple([uop_17408,])
output2 = relay.Tuple([uop_17408,])
func_17415 = relay.Function([var_17407,], output)
mod['func_17415'] = func_17415
mod = relay.transform.InferType()(mod)
var_17416 = relay.var("var_17416", dtype = "float64", shape = (1, 14, 14))#candidate|17416|(1, 14, 14)|var|float64
output = func_17415(var_17416)
func_17417 = relay.Function([var_17416], output)
mutated_mod['func_17417'] = func_17417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15134_call = mod.get_global_var('func_15134')
func_15136_call = mutated_mod.get_global_var('func_15136')
call_17430 = relay.TupleGetItem(func_15134_call(), 0)
call_17431 = relay.TupleGetItem(func_15136_call(), 0)
func_14547_call = mod.get_global_var('func_14547')
func_14548_call = mutated_mod.get_global_var('func_14548')
call_17437 = relay.TupleGetItem(func_14547_call(), 0)
call_17438 = relay.TupleGetItem(func_14548_call(), 0)
output = relay.Tuple([call_17430,call_17437,])
output2 = relay.Tuple([call_17431,call_17438,])
func_17444 = relay.Function([], output)
mod['func_17444'] = func_17444
mod = relay.transform.InferType()(mod)
mutated_mod['func_17444'] = func_17444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17444_call = mutated_mod.get_global_var('func_17444')
call_17445 = func_17444_call()
output = call_17445
func_17446 = relay.Function([], output)
mutated_mod['func_17446'] = func_17446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17486 = relay.var("var_17486", dtype = "float32", shape = (8, 4, 9))#candidate|17486|(8, 4, 9)|var|float32
uop_17487 = relay.atan(var_17486.astype('float32')) # shape=(8, 4, 9)
output = relay.Tuple([uop_17487,])
output2 = relay.Tuple([uop_17487,])
func_17492 = relay.Function([var_17486,], output)
mod['func_17492'] = func_17492
mod = relay.transform.InferType()(mod)
var_17493 = relay.var("var_17493", dtype = "float32", shape = (8, 4, 9))#candidate|17493|(8, 4, 9)|var|float32
output = func_17492(var_17493)
func_17494 = relay.Function([var_17493], output)
mutated_mod['func_17494'] = func_17494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15010_call = mod.get_global_var('func_15010')
func_15011_call = mutated_mod.get_global_var('func_15011')
call_17515 = relay.TupleGetItem(func_15010_call(), 0)
call_17516 = relay.TupleGetItem(func_15011_call(), 0)
func_15159_call = mod.get_global_var('func_15159')
func_15161_call = mutated_mod.get_global_var('func_15161')
call_17517 = relay.TupleGetItem(func_15159_call(), 0)
call_17518 = relay.TupleGetItem(func_15161_call(), 0)
func_8644_call = mod.get_global_var('func_8644')
func_8646_call = mutated_mod.get_global_var('func_8646')
call_17521 = relay.TupleGetItem(func_8644_call(), 2)
call_17522 = relay.TupleGetItem(func_8646_call(), 2)
output = relay.Tuple([call_17515,call_17517,call_17521,])
output2 = relay.Tuple([call_17516,call_17518,call_17522,])
func_17523 = relay.Function([], output)
mod['func_17523'] = func_17523
mod = relay.transform.InferType()(mod)
output = func_17523()
func_17524 = relay.Function([], output)
mutated_mod['func_17524'] = func_17524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10334_call = mod.get_global_var('func_10334')
func_10336_call = mutated_mod.get_global_var('func_10336')
call_17528 = func_10334_call()
call_17529 = func_10334_call()
func_15970_call = mod.get_global_var('func_15970')
func_15972_call = mutated_mod.get_global_var('func_15972')
call_17578 = relay.TupleGetItem(func_15970_call(), 0)
call_17579 = relay.TupleGetItem(func_15972_call(), 0)
output = relay.Tuple([call_17528,call_17578,])
output2 = relay.Tuple([call_17529,call_17579,])
func_17612 = relay.Function([], output)
mod['func_17612'] = func_17612
mod = relay.transform.InferType()(mod)
output = func_17612()
func_17613 = relay.Function([], output)
mutated_mod['func_17613'] = func_17613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13230_call = mod.get_global_var('func_13230')
func_13232_call = mutated_mod.get_global_var('func_13232')
call_17685 = func_13230_call()
call_17686 = func_13230_call()
func_7226_call = mod.get_global_var('func_7226')
func_7228_call = mutated_mod.get_global_var('func_7228')
call_17687 = relay.TupleGetItem(func_7226_call(), 2)
call_17688 = relay.TupleGetItem(func_7228_call(), 2)
output = relay.Tuple([call_17685,call_17687,])
output2 = relay.Tuple([call_17686,call_17688,])
func_17689 = relay.Function([], output)
mod['func_17689'] = func_17689
mod = relay.transform.InferType()(mod)
output = func_17689()
func_17690 = relay.Function([], output)
mutated_mod['func_17690'] = func_17690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17755 = relay.var("var_17755", dtype = "float64", shape = ())#candidate|17755|()|var|float64
const_17756 = relay.const([[[6.136902,9.962443,-5.452964,-2.720292,7.311372,3.642197,7.376782,-2.655725,1.685446,2.991148,9.144811,7.044872],[-1.511052,-3.612185,-0.274443,3.053056,-3.753046,-6.181793,3.505000,9.818120,5.351690,-7.160242,-1.626216,-5.030836],[9.203807,-7.343928,2.730238,-8.548812,-8.317978,-8.266929,-3.808003,-0.724306,0.018988,-4.695538,-3.968811,2.149061],[-0.659239,-7.686525,-0.847628,-9.731443,-5.263489,-6.469030,-7.549554,4.262672,5.428479,3.790085,-1.843445,-2.704574],[6.207959,-7.404774,-7.170300,0.872219,0.563666,-8.497401,-9.060913,8.802664,9.898277,-0.782650,9.455128,-1.274318],[-2.393569,-7.681632,-1.728454,-5.781869,7.065180,1.133946,-5.028216,-0.175220,-4.464196,6.403246,4.611217,2.079716],[-0.694288,-8.089640,7.883364,-7.589036,8.909359,-2.165688,-6.438209,9.097085,1.996055,2.705906,7.495940,-2.633276],[-1.505626,7.819678,-6.972158,4.331073,-0.563053,-4.391435,-6.180409,2.460584,-9.668879,0.511896,-2.355907,-4.768627],[7.198682,3.426854,-1.985929,-2.687116,0.590237,-9.585079,-3.392605,-2.582297,-0.474991,7.918405,-9.424228,-8.090197],[-4.585357,4.615601,-4.824873,7.476805,7.310127,-4.528919,-1.254436,5.214753,-3.960539,4.976845,8.100149,-9.075043],[5.585123,-6.235256,-5.150572,-7.459841,9.321961,-0.230504,7.209189,7.570709,-1.022288,-3.530296,2.175764,9.570048],[-9.197619,-2.156644,-7.959551,9.155811,-0.526555,8.565186,-1.593892,-9.417026,4.801622,3.443190,-3.787812,-9.965083]],[[-8.360175,2.806857,-7.692961,-3.463964,4.551810,-3.234517,9.892638,7.524128,2.962717,-5.921790,-5.970359,1.090661],[5.204930,4.183956,-3.451662,4.641231,-3.978172,-0.766030,3.609672,5.875952,7.526974,-2.475722,9.162576,5.423005],[4.328732,-3.768114,-1.158269,5.519144,-0.741222,5.078615,-3.429839,-7.612458,0.916124,3.771501,3.720445,5.801817],[-4.035974,6.718745,-1.033382,6.564655,-3.417559,5.523753,2.933028,1.980941,4.060115,-8.776987,0.917251,0.528825],[8.063957,6.032580,5.447208,-8.159055,-9.503148,-9.859011,-6.465009,-4.332349,0.636161,0.373071,1.281498,5.179285],[7.306618,-4.192936,-0.735141,1.579884,9.605233,-2.976021,6.043366,-3.900754,-9.673867,-2.671566,-2.725089,0.436711],[4.579684,8.090916,2.160212,4.176671,-8.590037,2.642371,3.954785,9.957669,2.393747,-0.582184,-3.784106,1.993812],[9.855083,8.247080,-1.228268,8.391461,9.232905,-5.196985,2.876465,6.761323,-0.418292,-0.023736,9.001787,-1.979803],[0.577696,4.243531,5.516701,-5.462279,5.640343,7.177857,4.929779,5.787868,5.095922,4.429088,0.610072,-2.537082],[-1.172166,-4.297400,-4.194421,-7.498968,8.218761,9.921882,-9.505790,5.003483,2.294039,-0.332832,9.528503,9.727974],[4.081830,-9.435355,6.493045,-7.402843,3.122948,0.071307,6.790609,-0.396705,-4.115105,-3.509950,2.861967,-5.976041],[-6.314793,5.851683,-7.723775,-1.752090,-5.867906,-3.752326,9.783666,5.494229,3.023405,0.317744,-3.287198,3.806739]],[[2.778413,-4.783541,0.364337,-2.503511,1.475652,-7.899047,-0.747045,7.660821,3.109869,5.992348,9.822980,4.192927],[5.326994,7.881413,-8.969372,-0.094449,-3.751525,8.976331,1.243657,7.601163,7.317794,-7.901629,-4.513889,-9.617020],[-0.433787,5.084603,-1.759590,-2.237582,0.062470,-1.851460,8.236294,9.823317,1.184284,4.376836,-3.154599,0.272959],[-0.307085,-1.520405,4.875050,-5.973181,-4.783232,2.005634,9.997751,-5.726579,-1.384379,-1.692817,-2.014427,7.827926],[-9.877578,-1.502246,-0.570126,1.869205,-4.889953,2.618547,-2.121333,1.202295,2.420970,-9.357695,-6.539501,2.999270],[8.775991,-8.028549,-0.499165,0.296448,6.951998,8.328306,4.931485,-3.162664,-2.404657,7.244996,-7.056692,6.981898],[-7.755992,-3.396710,2.329734,8.997445,1.574764,-6.737503,9.675622,8.060483,6.310347,-5.537327,9.744899,-6.199997],[9.767842,-0.946980,-9.267287,6.130932,5.533359,-7.461495,-3.963971,8.685179,5.529810,2.826180,7.705004,8.802650],[5.588601,6.877097,3.963461,7.122992,-1.048434,-2.982556,3.259581,9.432049,2.962030,9.149894,3.789613,6.862678],[-2.142763,5.861779,9.402853,8.372112,1.168723,5.949716,-9.978852,1.121655,7.469426,-9.407746,3.501982,4.915670],[9.678987,-0.506383,-2.111854,9.583848,-6.404320,-3.715085,-7.622961,7.765219,2.006791,-6.777282,6.755583,-2.833038],[3.720170,7.540206,-5.859093,8.496413,-4.027874,-3.398767,1.675711,3.329517,-9.354766,-7.712293,9.888118,-2.769555]],[[-5.405620,8.252671,-9.987810,-1.363229,-1.941817,2.238270,0.406066,-3.525392,-2.858731,-6.321581,-6.453769,-2.523041],[9.213650,2.131072,-8.299051,5.654227,-3.726965,-2.481413,-5.679490,-1.033603,-9.883943,8.894939,-7.848857,0.618405],[-5.089259,9.438211,-8.224139,-7.801571,-0.273189,-4.376441,6.289860,8.468146,-8.871046,4.292637,4.833994,5.948131],[4.937315,4.850509,-5.709632,-8.984746,-9.529430,-6.730939,8.691930,-7.046519,-8.840784,-9.220809,6.523241,-2.088137],[1.020881,-7.212740,7.087479,4.521324,5.911233,1.264977,1.530877,-5.168043,1.872754,-6.853266,9.663236,-2.304437],[-4.910944,-1.744338,-7.249222,9.257517,-5.948724,-5.355241,-7.384785,-0.887732,-1.140958,1.685962,6.649881,5.755116],[-8.521183,-4.512883,9.721967,-4.550296,6.380106,0.803993,7.878762,-3.666495,-8.414147,0.953655,-9.366987,-8.993419],[3.364048,-8.050457,-3.848422,3.440150,-4.254537,-7.146378,-0.699361,6.507405,3.427371,-9.048400,0.492430,-1.860744],[7.991898,-2.144707,1.836937,9.012266,3.565950,-5.427615,9.844282,-2.022834,9.495572,6.663822,5.987075,3.461993],[4.402506,7.821591,-2.847849,9.609152,-8.344410,0.009547,-9.738491,-3.902516,7.419704,4.918464,9.166080,-3.207071],[2.176096,-9.376678,-6.824366,6.968323,3.262324,-5.262349,3.538268,-1.917165,-9.609373,8.944782,-5.386682,-8.369297],[-0.442629,-7.548290,5.306531,-3.078507,7.033343,-5.485903,8.239708,6.669598,-2.046829,-6.669933,2.123925,7.532950]],[[7.587142,6.641847,7.520178,0.080358,2.588170,6.035463,-4.299827,8.750127,-6.504735,9.378602,-8.602014,9.702309],[-4.553811,-9.019883,-6.517296,7.038538,-4.667036,8.385156,-6.354919,-1.751231,-0.118373,1.144222,4.497784,-2.429702],[-3.775826,1.724178,6.595000,7.074431,9.055787,2.293363,-5.787393,5.468079,4.524345,-3.092529,4.567802,-1.226527],[-5.581842,-0.409466,-1.052641,7.129718,-3.020098,0.254741,2.607787,3.663683,-4.885399,-7.720307,-1.139995,-4.694556],[-5.236443,1.058740,2.067405,-7.432643,3.540566,7.691803,2.894974,-0.577307,-3.148971,6.747142,1.227212,-3.775446],[-2.058315,-2.312403,-3.424336,-9.604729,6.311535,-1.477411,1.570542,-7.967854,9.124657,4.727580,-6.035603,-9.106297],[5.726475,5.473902,-4.534225,7.206960,-0.099580,8.834291,-5.888252,-0.489744,-9.603607,-4.271225,6.729305,-4.575572],[-9.152670,7.976502,-5.180431,2.750428,-9.056824,-5.691120,-8.375033,1.777806,3.466432,0.969926,-3.618597,3.018549],[-3.503007,0.984687,-9.036528,-0.560263,8.074330,2.966713,3.267999,9.536650,6.917339,7.921848,9.825947,3.725079],[3.464674,-5.942324,-5.663981,-7.582491,9.762771,-8.282112,-9.458230,0.500708,-1.632323,3.335792,0.470906,5.342339],[-2.595917,0.863043,1.170550,-7.382911,8.559666,6.175843,-3.909222,7.860306,2.189301,7.218619,-3.975147,7.881507],[3.359662,3.771029,2.448185,-3.922014,6.303852,-6.856309,-0.991568,5.666241,1.648008,4.016134,1.718725,-4.663075]],[[-8.545036,-5.246649,-1.520138,1.454602,-4.930322,-4.458602,-1.904691,0.958420,-6.060474,-0.361290,-7.765237,5.336894],[-6.552285,3.094474,2.511414,-2.962209,6.095253,-7.201858,-2.735249,8.798195,-9.791939,9.987312,-6.040458,-0.183919],[-2.585614,0.167768,1.501403,-0.092736,6.378236,1.613867,5.500323,-1.446446,-8.087524,-8.927438,3.464738,7.484955],[-1.615564,-0.708013,2.113016,8.676228,9.424104,-9.258195,1.601925,8.390185,-0.018221,9.870650,-6.658138,-8.198211],[2.615511,-8.065412,-7.802661,-0.851312,-0.239494,-5.143500,-5.273222,1.749660,-1.436968,-2.071181,-4.780575,1.630701],[-6.145679,7.899025,-6.654336,6.616231,-1.813816,-3.103986,9.647006,0.417440,1.510229,1.390256,-4.345550,-2.032682],[-7.388527,-7.665982,-0.036718,7.240280,8.780462,6.532341,-1.692749,8.228161,-4.990451,0.975021,-5.077758,8.006108],[-1.089710,3.656398,5.308859,-9.483017,-4.257289,2.324629,-8.994455,1.149180,6.573659,3.606394,0.855187,-3.080625],[0.921313,1.524695,8.321446,8.228701,9.008946,-9.946542,-0.456032,-3.228750,8.135352,3.996300,-3.568932,5.939341],[-2.246571,4.987611,4.460681,4.960701,-9.846351,3.277528,-4.641959,1.253732,7.250537,-6.376011,-5.203190,1.526592],[-9.098868,0.891047,9.220174,-9.388861,-7.553965,-3.734774,-1.881750,-3.460111,-7.600523,-4.135040,-1.565203,0.941662],[0.309777,-2.035096,-5.509456,0.391250,-8.261118,-8.455132,-2.156850,5.596138,-3.882950,-0.621263,-3.023933,3.723586]]], dtype = "float64")#candidate|17756|(6, 12, 12)|const|float64
bop_17757 = relay.power(var_17755.astype('float64'), const_17756.astype('float64')) # shape=(6, 12, 12)
output = bop_17757
output2 = bop_17757
F = relay.Function([var_17755,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_17755,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_52 = relay.var("var_52", dtype = "uint64", shape = (9, 4, 16))#candidate|52|(9, 4, 16)|var|uint64
const_53 = relay.const([[[-5,-4,-8,-8,-9,-5,6,-4,-10,-10,-2,-1,2,10,8,-4],[10,-3,6,-9,10,4,2,4,-4,6,-1,-6,6,7,-5,9],[10,4,-3,-1,-9,-2,-6,-10,1,6,-6,-5,10,8,-4,9],[-1,9,5,1,-6,-2,7,5,-1,10,-5,2,8,9,9,5]],[[10,-5,6,1,-9,6,-9,6,2,-9,-2,2,-1,1,8,1],[3,-7,4,-3,-4,-8,10,5,9,-8,-5,10,-1,7,8,1],[5,-10,-5,1,2,2,-3,-5,-1,5,3,-1,8,-6,-5,8],[5,1,3,-1,3,-8,-10,-1,5,-6,-1,5,-4,-6,7,1]],[[3,2,-5,-2,6,-5,2,7,1,-8,-8,-2,3,1,3,4],[7,-4,8,-1,8,1,3,7,-1,8,7,4,-9,4,9,10],[1,-8,-1,-3,4,-7,4,-1,-9,6,9,10,7,10,9,1],[3,10,8,-1,1,-9,3,2,1,2,8,-9,-5,2,-8,-5]],[[-4,-5,2,7,5,8,8,-2,8,10,-5,2,8,3,6,-7],[2,-5,9,8,9,-3,-6,5,-8,-3,-4,10,-8,5,10,-8],[-7,9,-4,3,-2,10,1,3,10,2,-2,5,-5,8,4,10],[-7,-1,-5,-4,-1,7,10,1,8,6,-4,-10,1,4,1,1]],[[2,-1,-4,-4,-7,-7,8,1,-9,-6,5,-4,3,4,-2,2],[-6,-1,-7,-5,3,-3,10,-9,-10,4,10,-4,5,-4,4,3],[10,10,6,-2,-7,-1,9,-6,4,4,7,4,-7,-9,8,-1],[-5,-6,6,1,4,-2,4,2,7,2,8,-6,-8,-6,-8,-5]],[[-7,5,10,7,-9,-7,-7,3,-6,10,2,-9,-2,7,3,10],[-4,3,2,-5,9,4,-10,-3,-1,-2,-8,5,7,7,-7,-10],[-3,-4,3,6,3,9,6,-2,5,-1,-7,3,10,6,9,8],[-8,-9,-2,-2,-6,8,3,8,-6,-10,-7,10,1,5,-1,5]],[[5,-10,-8,2,5,5,-2,3,4,-4,6,-8,-10,-8,6,-2],[-7,8,5,9,-1,-8,-7,-2,6,-4,10,9,7,-10,-1,5],[-5,3,-4,1,-7,10,-10,7,-10,8,6,-9,7,9,-2,-7],[-9,8,-5,1,-8,7,5,5,6,-7,-3,7,-8,9,1,6]],[[8,-3,2,4,5,7,-5,7,-8,-6,-1,-10,-9,10,6,-10],[-1,-7,9,3,3,3,-2,9,-5,10,8,-6,10,-9,-1,3],[3,4,-3,5,-7,-4,-9,9,-10,1,-1,-6,-4,-9,3,-8],[2,-8,9,1,-2,-6,-9,-6,-6,-8,-5,-7,-9,-5,-6,3]],[[-6,-5,6,2,-2,-8,3,-2,10,-5,-4,5,9,-8,-4,-5],[3,7,7,-5,6,-1,-7,10,-1,-4,7,8,1,1,8,6],[-7,9,2,4,-9,-1,-8,-6,7,-3,1,-2,-1,8,10,-1],[8,-2,5,-10,-9,-3,-1,-5,10,5,-3,-6,10,4,-9,-7]]], dtype = "uint64")#candidate|53|(9, 4, 16)|const|uint64
bop_54 = relay.add(var_52.astype('uint64'), relay.reshape(const_53.astype('uint64'), relay.shape_of(var_52))) # shape=(9, 4, 16)
uop_58 = relay.asinh(bop_54.astype('float32')) # shape=(9, 4, 16)
output = relay.Tuple([uop_58,])
output2 = relay.Tuple([uop_58,])
func_60 = relay.Function([var_52,], output)
mod['func_60'] = func_60
mod = relay.transform.InferType()(mod)
var_61 = relay.var("var_61", dtype = "uint64", shape = (9, 4, 16))#candidate|61|(9, 4, 16)|var|uint64
output = func_60(var_61)
func_62 = relay.Function([var_61], output)
mutated_mod['func_62'] = func_62
mutated_mod = relay.transform.InferType()(mutated_mod)
var_116 = relay.var("var_116", dtype = "uint8", shape = (3, 1, 10))#candidate|116|(3, 1, 10)|var|uint8
var_117 = relay.var("var_117", dtype = "uint8", shape = (3, 9, 10))#candidate|117|(3, 9, 10)|var|uint8
bop_118 = relay.add(var_116.astype('uint8'), var_117.astype('uint8')) # shape=(3, 9, 10)
func_60_call = mod.get_global_var('func_60')
func_62_call = mutated_mod.get_global_var('func_62')
const_128 = relay.const([-10,-10,7,9,5,-10,9,-10,7,1,-10,-5,-2,4,-1,-2,1,7,-3,-5,2,-1,-5,7,10,1,4,2,9,2,10,-3,7,9,6,-10,-7,1,-2,3,-10,-4,2,-2,2,1,9,3,3,8,5,-10,-9,-6,1,4,4,6,4,7,4,-9,1,9,-5,-3,-6,-5,-6,-7,2,10,9,-2,-6,2,4,-10,-3,-8,9,1,6,10,10,-1,-9,6,9,-5,-6,2,8,6,-5,2,-8,7,10,8,-7,2,-3,5,8,-6,5,-8,-2,-6,1,-8,2,4,5,4,2,7,4,-7,2,-9,-1,-1,1,7,5,10,-3,1,-8,-9,1,-6,-7,-7,6,7,-3,8,6,-8,1,10,4,-3,6,-3,-9,10,-1,7,5,5,-10,3,-8,-9,-9,-6,-8,-5,10,-1,-8,7,10,-9,5,4,-8,-5,8,-7,1,-1,-2,-3,-6,-1,5,-6,-1,-1,-10,6,-2,4,3,6,-7,-2,5,3,-2,-8,4,4,-2,2,10,1,8,-1,-9,4,-5,-6,6,4,6,2,7,-5,-1,-10,-6,-2,-6,-5,1,4,-10,8,2,1,-3,7,-1,10,9,2,3,-10,-8,-6,8,4,-10,1,4,9,-7,9,7,1,-9,3,-8,1,-10,4,8,-4,-10,-10,1,4,-6,-7,2,10,2,3,6,5,-2,-4,8,-9,-4,-5,-8,2,-1,6,-6,5,10,7,2,2,4,-4,-3,-3,4,2,8,-6,5,-2,-10,1,3,-6,2,10,-3,10,-9,-10,2,5,-8,-9,-6,-3,6,-6,2,5,-1,1,1,-7,4,-5,1,-6,-4,-1,-4,7,-8,8,-7,3,-9,-10,-8,3,6,8,-10,8,9,-4,-4,2,6,-10,-6,10,1,-6,-9,-1,-8,4,-3,-4,10,5,9,-5,-9,9,-10,-1,-1,10,-7,-6,-9,-3,-1,-7,4,-6,-9,-1,6,4,-9,8,1,9,-10,2,-5,4,-1,8,2,2,3,-10,1,4,10,-9,2,8,3,3,-5,4,9,3,6,-3,-9,5,-8,10,-2,6,9,6,-3,9,-6,-6,-7,-4,-6,-1,1,-5,-6,4,5,10,5,-5,-4,8,1,3,-5,-2,-6,-8,-8,6,9,10,10,-10,-7,-3,1,-1,7,10,-2,3,-5,7,-5,7,-10,9,-10,-5,4,-8,-1,-7,4,10,-10,-8,-5,8,7,-5,-4,-9,3,-1,-5,-2,-9,-5,-8,1,-8,-5,-3,5,10,-8,-4,9,4,6,9,6,-9,-3,5,-5,4,-8,-4,-6,10,-1,3,-4,9,6,10,-10,-2,5,8,10,1,6,10,-4,-9,5,-6,-1,-8,7,-9,-6,9,-10,-1,-8,8,-2,7,9,10,10,-4,10,-7,10,3,9,-5,-8,9,3,-1,8,-10,6,2,5,-6,-7,-2,-1,3,9,-8,6,-5,9,-3,-4,5,-2,-5,-2,-2,3,8,-8,-3,8,-6,-3,5,-6,8,-1], dtype = "uint64")#candidate|128|(576,)|const|uint64
call_127 = relay.TupleGetItem(func_60_call(relay.reshape(const_128.astype('uint64'), [9, 4, 16])), 0)
call_129 = relay.TupleGetItem(func_62_call(relay.reshape(const_128.astype('uint64'), [9, 4, 16])), 0)
output = relay.Tuple([bop_118,call_127,const_128,])
output2 = relay.Tuple([bop_118,call_129,const_128,])
func_130 = relay.Function([var_116,var_117,], output)
mod['func_130'] = func_130
mod = relay.transform.InferType()(mod)
mutated_mod['func_130'] = func_130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_130_call = mutated_mod.get_global_var('func_130')
var_132 = relay.var("var_132", dtype = "uint8", shape = (3, 1, 10))#candidate|132|(3, 1, 10)|var|uint8
var_133 = relay.var("var_133", dtype = "uint8", shape = (3, 9, 10))#candidate|133|(3, 9, 10)|var|uint8
call_131 = func_130_call(var_132,var_133,)
output = call_131
func_134 = relay.Function([var_132,var_133,], output)
mutated_mod['func_134'] = func_134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_189 = relay.var("var_189", dtype = "float64", shape = (2, 2, 3))#candidate|189|(2, 2, 3)|var|float64
uop_190 = relay.asinh(var_189.astype('float64')) # shape=(2, 2, 3)
output = relay.Tuple([uop_190,])
output2 = relay.Tuple([uop_190,])
func_199 = relay.Function([var_189,], output)
mod['func_199'] = func_199
mod = relay.transform.InferType()(mod)
mutated_mod['func_199'] = func_199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_200 = relay.var("var_200", dtype = "float64", shape = (2, 2, 3))#candidate|200|(2, 2, 3)|var|float64
func_199_call = mutated_mod.get_global_var('func_199')
call_201 = func_199_call(var_200)
output = call_201
func_202 = relay.Function([var_200], output)
mutated_mod['func_202'] = func_202
mutated_mod = relay.transform.InferType()(mutated_mod)
const_327 = relay.const([[[0.175288,-9.193287,-7.841856],[1.405819,5.339102,1.661591],[-8.419501,-7.094503,6.803129],[-1.151301,-0.996403,3.336632],[5.271424,-5.359542,8.600462],[-1.717258,-9.636057,3.912588],[5.470835,9.347660,-4.550274],[-4.963433,7.703807,6.498688],[9.123198,-2.971250,-6.088565],[-8.117639,7.039151,2.637644],[-6.350887,1.974482,-6.513173],[-0.523980,-8.909894,-3.397739],[-4.435888,5.263239,-1.410520],[-3.485720,-8.613581,1.497804]],[[-1.889531,-1.459317,-4.238531],[0.110090,5.831835,-8.011890],[2.992358,-3.076141,-5.269324],[-6.362395,0.986235,-0.767792],[4.117058,9.830722,9.911878],[-1.807941,-1.138746,8.056834],[-9.206400,9.064615,-8.306457],[-4.625707,-8.302323,2.960920],[8.713248,1.359038,1.151952],[-8.935661,-8.491621,-3.171050],[9.778228,-4.753289,5.596416],[-9.367824,-9.004936,5.348601],[4.940271,-1.580946,-1.275741],[-7.665291,7.850279,-1.085717]],[[-0.028337,2.011376,-2.274026],[-6.167665,9.493144,7.579818],[2.683751,-5.706830,-4.231499],[-7.925287,3.892888,3.741159],[-5.893292,-9.927385,-9.899428],[-7.962452,8.761759,3.862789],[9.336898,7.098689,-5.317586],[7.270041,5.477749,4.031354],[1.611034,7.546158,-8.092807],[9.211337,9.570199,0.077289],[-1.993790,-6.404059,9.389881],[-6.894259,2.700348,3.030280],[-8.053492,9.708760,2.263146],[8.496804,-4.942203,7.025791]],[[-6.616708,7.171781,-3.225651],[5.413743,-5.017508,6.628144],[8.256578,-0.940409,1.298650],[7.653066,-1.059478,5.906916],[7.834316,2.426987,-7.037119],[5.569417,7.129815,-0.419246],[3.440009,-7.400706,0.478419],[1.551075,7.441655,5.647303],[-0.392008,5.761667,-0.955658],[-1.340030,8.980795,4.830115],[-7.601869,-3.993078,-5.739877],[-7.505901,-9.341311,4.902135],[-3.515444,7.228582,4.849774],[-4.137240,5.860871,-5.765172]],[[4.295649,6.694976,-1.566285],[-4.877665,0.648710,-6.755158],[6.569086,9.672061,-5.760264],[5.741718,-3.274344,-5.238598],[9.939751,7.435609,-3.596712],[-0.124633,-6.974275,7.977448],[6.081094,4.051800,-0.436439],[-5.629373,-3.245038,-2.710158],[-6.982951,0.043037,-0.029142],[-8.770090,6.729044,-7.203127],[-3.064316,8.200487,-4.567394],[1.653053,-5.061191,7.164808],[1.331687,-0.975406,1.399278],[-7.768925,-1.315239,-4.025984]],[[6.726422,-7.668836,-3.062249],[7.871239,-1.860297,1.207758],[8.409010,-3.677898,-0.632724],[-0.449616,7.206800,4.800301],[2.316738,-4.879813,-7.320479],[-7.156550,-7.145701,-6.474596],[8.527924,2.578503,-9.207201],[7.687761,8.677931,2.356475],[3.935400,9.760059,-6.772626],[5.276386,-3.064295,1.915098],[7.940526,4.158024,-9.648239],[-1.768090,4.740011,4.143965],[0.602003,5.832511,-0.061544],[-4.949793,-2.925855,-0.052024]],[[-4.411619,9.501486,-5.151723],[4.365654,-9.977301,5.096733],[-4.288449,5.415795,9.377740],[7.141578,3.172620,7.966931],[9.517767,7.067330,-9.534191],[-1.871577,3.180234,2.164548],[-3.605025,9.006061,7.707148],[-9.893075,5.832438,1.599159],[-6.221490,2.373594,0.571026],[-9.501532,-5.765233,5.400304],[2.224583,3.919987,2.965519],[-5.586083,-6.937447,-2.332982],[-3.099080,9.601419,-0.145448],[-9.351799,-2.940585,-9.550439]],[[9.346064,-7.439754,-8.332672],[-1.774966,-7.081521,4.049115],[-7.756070,5.753747,3.124043],[1.279659,-6.831741,2.576759],[3.051397,-5.325658,8.602894],[-1.162085,8.827393,-3.936714],[-8.395535,7.686993,4.103276],[-7.244745,6.050612,-7.720965],[5.682440,-1.076383,-8.646395],[5.464288,-7.699853,4.634589],[-2.878815,-1.309357,1.271792],[-7.874213,4.588426,-2.570436],[-2.045098,-9.126531,-3.703591],[-5.507786,-4.330396,-7.285159]],[[3.610746,0.072201,4.584869],[3.979346,-2.098529,5.978609],[5.249120,2.801295,1.643569],[7.824006,-7.594959,0.861394],[-0.273886,-1.535477,8.714632],[6.721238,-8.989340,-0.302373],[-8.282013,-7.356634,5.482107],[-5.050013,4.760823,0.237784],[1.727632,-7.373069,-8.045026],[-7.096394,5.764546,-1.432792],[5.919666,8.731650,-5.935806],[3.037903,-8.585210,7.027991],[8.455019,-6.269000,4.561203],[-8.722035,-2.094517,-5.464577]],[[-4.432977,9.701440,8.731919],[-2.918252,2.802996,6.015780],[6.067035,-1.863956,-4.809387],[5.969964,9.920280,-4.001087],[6.262512,7.843722,7.771314],[3.703987,0.458641,1.470671],[-5.346704,4.538879,-3.873322],[4.102423,-0.664273,1.586530],[9.543694,-5.590199,-4.442902],[5.758080,6.806864,9.026872],[-2.361897,7.751043,7.392442],[-0.387879,-7.742384,3.747944],[-7.186507,9.113690,2.790981],[3.300924,5.779911,9.105665]],[[-4.909516,-0.836904,-8.733157],[-8.974512,-6.600562,-3.631657],[4.091512,4.209915,-6.373748],[-2.405076,5.707449,9.615433],[-7.363480,4.568584,0.398212],[5.746133,4.164309,8.071407],[3.076018,-4.782952,5.156851],[0.865581,8.444200,5.874138],[4.418193,9.415148,7.962421],[3.906806,0.560060,0.709353],[-1.821106,0.601605,-5.976828],[6.327564,-2.051684,4.321773],[-4.265462,-0.572213,1.124088],[2.305596,3.065807,2.818270]],[[-7.899039,-7.269957,1.800010],[-7.767294,-4.767539,6.422733],[-3.106135,-2.583162,-2.832804],[9.345865,-4.959721,6.146955],[0.401501,2.242656,4.613435],[4.050853,8.013313,4.287607],[8.176221,-1.887011,3.400087],[3.622908,-8.124235,9.201474],[2.559537,6.710911,-3.481242],[-2.267614,-2.694812,8.218012],[-8.638171,2.469925,-7.191225],[6.843357,-3.072250,-6.107711],[2.429148,8.450998,2.909296],[8.544956,9.488709,4.894069]]], dtype = "float64")#candidate|327|(12, 14, 3)|const|float64
var_328 = relay.var("var_328", dtype = "float64", shape = (12, 14, 3))#candidate|328|(12, 14, 3)|var|float64
bop_329 = relay.mod(const_327.astype('float64'), relay.reshape(var_328.astype('float64'), relay.shape_of(const_327))) # shape=(12, 14, 3)
bop_334 = relay.minimum(var_328.astype('int8'), relay.reshape(const_327.astype('int8'), relay.shape_of(var_328))) # shape=(12, 14, 3)
func_60_call = mod.get_global_var('func_60')
func_62_call = mutated_mod.get_global_var('func_62')
const_338 = relay.const([3,8,-10,-7,6,7,-2,7,-7,-8,-8,1,5,4,-9,8,3,-2,-7,-5,5,-2,-10,-4,8,4,-8,-6,2,-8,9,2,4,-6,-5,5,3,-6,6,10,1,-10,8,10,3,10,6,5,-10,-2,-2,-4,8,-7,-9,8,8,8,1,-5,-8,10,1,-3,-8,5,-5,6,8,-8,8,-8,4,-2,4,3,4,-5,1,-3,6,-1,-6,4,10,-2,10,7,-6,2,8,-1,9,7,-3,-10,-10,-9,10,2,-7,-10,-4,2,-6,1,10,-8,7,10,8,10,1,-4,-5,10,-1,-3,-7,-7,9,-9,-10,-7,-10,9,-7,6,10,-10,6,-1,10,2,-8,10,-6,6,4,5,2,-2,4,-8,7,3,8,8,5,3,10,-1,-10,4,-10,-10,6,-3,9,7,9,-9,4,-5,9,4,-3,8,2,9,-3,-6,10,-9,1,7,6,9,7,-8,-1,-8,9,-8,-7,5,-6,7,2,-5,2,5,1,-7,-7,5,-9,-4,8,-9,1,-5,7,-2,-7,-6,-10,6,-4,-10,-10,-10,-9,-9,-6,-1,6,-3,7,-4,4,-3,10,6,4,6,2,-5,10,-5,4,-5,-4,-5,-6,3,-8,4,6,3,-9,-4,-5,-9,4,-5,-2,1,1,-6,3,-8,-8,1,4,5,-1,4,9,2,9,-2,-10,-8,-8,-9,-6,4,-9,9,6,-9,-5,4,-8,7,-6,8,-3,6,-3,-2,1,-2,-8,-6,-6,-3,7,5,6,3,-3,7,-9,7,9,2,3,10,6,-8,-10,5,8,5,2,-7,10,10,8,-3,7,7,-9,5,-5,-2,-4,4,-5,-8,-8,-3,-9,-8,-2,-2,-4,3,7,3,-1,-7,-1,8,2,4,-1,6,2,4,5,-3,8,6,-3,7,5,-8,-9,-2,-2,-10,-5,-2,-2,-1,4,-8,1,8,-3,8,3,4,-2,-2,5,7,2,-7,6,3,-1,2,5,5,-7,7,9,-1,-10,-7,-8,-4,-4,5,8,-1,1,2,5,5,10,-3,5,-2,-10,-1,3,-7,8,-8,3,7,5,9,7,-4,-10,-8,5,-2,-8,1,10,-2,-3,-7,2,-8,5,6,5,-1,-1,10,8,10,6,-1,1,-3,4,9,-3,-2,6,2,-2,-6,1,-8,9,7,9,-10,-1,-5,4,-2,2,-7,4,2,2,8,6,-4,-3,-10,1,5,6,9,-3,-9,7,-5,-7,8,5,-5,-3,5,10,-2,-9,4,-6,-7,6,-6,-4,-5,-8,-2,-10,-3,6,2,-7,-8,1,2,-7,-6,5,-7,3,-1,6,3,10,2,7,-1,-8,9,-3,7,-9,4,-7,2,4,2,-7,-7,-2,-3,2,-1,5,8,-2,7,-7,3,1,-3,-9,4,-1,-4,-9,-2,-3,1,-7,-7,5,-10,6,-6,1,1,-8,7,-7,2,10,-8,1,2,-2,6,-6,10,2,-10,-9,4,-7,7,-5,-1,-5,7,-2,-3,-1,-2,7,-10], dtype = "uint64")#candidate|338|(576,)|const|uint64
call_337 = relay.TupleGetItem(func_60_call(relay.reshape(const_338.astype('uint64'), [9, 4, 16])), 0)
call_339 = relay.TupleGetItem(func_62_call(relay.reshape(const_338.astype('uint64'), [9, 4, 16])), 0)
uop_350 = relay.erf(const_327.astype('float64')) # shape=(12, 14, 3)
uop_359 = relay.cosh(uop_350.astype('float64')) # shape=(12, 14, 3)
output = relay.Tuple([bop_329,bop_334,call_337,const_338,uop_359,])
output2 = relay.Tuple([bop_329,bop_334,call_339,const_338,uop_359,])
func_368 = relay.Function([var_328,], output)
mod['func_368'] = func_368
mod = relay.transform.InferType()(mod)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
var_369 = relay.var("var_369", dtype = "float64", shape = (12, 14, 3))#candidate|369|(12, 14, 3)|var|float64
func_368_call = mutated_mod.get_global_var('func_368')
call_370 = func_368_call(var_369)
output = call_370
func_371 = relay.Function([var_369], output)
mutated_mod['func_371'] = func_371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_441 = relay.var("var_441", dtype = "float64", shape = ())#candidate|441|()|var|float64
const_442 = relay.const([[[-0.400586,8.869854,-5.559932],[1.570094,0.236466,5.033098],[0.229253,6.090016,-5.155434],[8.543068,-5.315127,5.378362],[-3.795867,-0.467334,-9.579906],[-1.574236,0.302650,-3.796660],[-7.122633,6.912511,6.569980],[6.609050,5.364033,3.670302],[4.006021,1.811417,6.917582],[-0.700693,-6.032493,1.056073],[-7.699750,1.118307,-0.298160],[0.737559,-8.332485,-4.893848],[-5.319959,-4.369099,-9.271440],[5.870313,1.589450,4.782654],[7.746421,-6.344964,-7.033835]],[[-4.250541,-4.049793,-5.508057],[1.818536,7.622274,-9.961991],[1.880830,0.579593,-3.108339],[-6.608683,9.231119,-7.049772],[-4.335412,-7.355117,9.429050],[-4.681602,3.185537,-3.418054],[8.167392,-8.350514,0.526651],[-4.146550,8.052587,-3.409012],[0.071406,3.135329,-4.006945],[8.797744,-2.784790,-1.093071],[-7.692671,0.494232,8.961118],[3.470971,-6.943511,1.172340],[-2.166550,-7.978444,2.049423],[3.268746,5.599365,2.130314],[8.242169,-8.645380,-3.700884]],[[7.495243,-4.441492,-8.299036],[-0.629165,-2.220140,9.034577],[-3.066690,-8.423196,4.016030],[-8.585445,-6.536467,-2.978925],[3.517632,7.802413,5.456336],[-8.423017,-2.060569,5.259652],[-6.324766,9.095990,-6.583532],[-0.126951,-5.384093,-0.924729],[-5.235359,1.584142,-1.112993],[-2.350198,3.466234,-3.447993],[0.467868,2.015263,3.536014],[5.274226,9.126529,-3.590309],[5.804412,-1.390736,0.059764],[-7.758871,4.693394,1.717659],[8.892900,-6.585583,8.993188]],[[4.604076,5.711078,-0.843783],[5.227844,2.459084,-1.243773],[1.869750,-2.381056,-4.270992],[-0.051864,-4.671062,-9.092252],[6.226138,4.129670,-1.265266],[-4.167688,-9.229156,-4.821950],[-4.385766,-6.469223,-4.522127],[-9.582416,-4.989418,-3.069551],[-2.628870,8.388985,-1.917369],[-6.783608,7.710481,8.086465],[-2.709238,1.314234,-9.093281],[-5.349964,-7.440232,-7.120414],[3.262430,-4.294968,6.620163],[-2.112834,0.856313,-7.009009],[2.294704,9.964218,8.449846]],[[-7.049788,7.357448,-2.834343],[-9.460857,-8.035622,9.832325],[5.213849,1.698501,-7.350036],[-3.143630,6.793270,5.179524],[-8.256963,-4.881145,7.879840],[-6.493548,-5.046589,-7.777355],[9.611933,2.459639,3.897883],[-1.843251,1.653256,-6.304974],[8.473368,0.927874,-0.883168],[-5.046861,1.288814,-9.027275],[-6.289222,8.901933,-5.086331],[7.944426,-3.983098,-3.145868],[5.323364,-7.387163,-1.571683],[0.806366,-5.653488,-7.623151],[1.380906,3.543176,-5.973417]],[[3.059784,-9.054318,8.501032],[-1.172915,9.099860,6.719318],[-7.165924,-2.310794,4.768495],[1.259892,-6.550726,8.060007],[-9.262563,-1.869206,-5.023978],[-8.918414,4.019684,-3.716940],[6.328071,-2.496778,4.999788],[-8.344579,-0.299135,-4.980326],[-6.500109,-4.999161,3.364509],[1.779708,-4.161046,9.083748],[-2.006643,8.317749,6.401544],[-6.375788,-5.615563,9.215971],[-2.770631,-8.103816,-2.005650],[7.229444,-9.596300,-8.464573],[1.765997,-3.802602,6.842948]],[[-3.855893,2.890181,9.647351],[2.238019,3.828511,-0.754837],[3.509355,5.905632,-5.886193],[3.092249,-5.284089,5.867588],[4.651633,-5.722032,2.044037],[-9.271213,-4.533947,7.866591],[-0.303872,3.296490,-0.243856],[-3.249172,0.809989,8.760768],[0.375543,1.861411,7.065191],[-0.287342,5.812718,-1.910391],[-4.968693,9.091118,-1.946525],[7.489855,8.593195,-6.628913],[-7.268386,-3.654932,-1.143830],[9.894113,-6.993504,5.900093],[-5.268900,-0.845545,4.006653]],[[-4.476056,6.836105,-8.162974],[-8.569411,-6.353702,-2.537292],[0.017413,2.544055,-2.852469],[-5.835644,-2.926777,-6.595986],[-2.899131,3.775769,6.345883],[9.887243,5.338028,9.261785],[-9.998753,1.300412,9.410905],[3.138925,-3.688194,-2.652420],[0.850673,0.421990,8.255803],[4.480986,-8.797857,0.505004],[2.237180,4.117089,8.064323],[-4.792812,-5.390626,4.154372],[-0.302737,-7.093193,3.643031],[1.666009,5.693690,-5.265865],[2.787919,-8.213327,0.054059]]], dtype = "float64")#candidate|442|(8, 15, 3)|const|float64
bop_443 = relay.divide(var_441.astype('float64'), const_442.astype('float64')) # shape=(8, 15, 3)
bop_446 = relay.not_equal(var_441.astype('bool'), const_442.astype('bool')) # shape=(8, 15, 3)
bop_455 = relay.add(var_441.astype('uint64'), bop_446.astype('uint64')) # shape=(8, 15, 3)
output = relay.Tuple([bop_443,bop_455,])
output2 = relay.Tuple([bop_443,bop_455,])
func_473 = relay.Function([var_441,], output)
mod['func_473'] = func_473
mod = relay.transform.InferType()(mod)
mutated_mod['func_473'] = func_473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_474 = relay.var("var_474", dtype = "float64", shape = ())#candidate|474|()|var|float64
func_473_call = mutated_mod.get_global_var('func_473')
call_475 = func_473_call(var_474)
output = call_475
func_476 = relay.Function([var_474], output)
mutated_mod['func_476'] = func_476
mutated_mod = relay.transform.InferType()(mutated_mod)
var_679 = relay.var("var_679", dtype = "uint16", shape = ())#candidate|679|()|var|uint16
var_680 = relay.var("var_680", dtype = "uint16", shape = (16, 4, 3))#candidate|680|(16, 4, 3)|var|uint16
bop_681 = relay.add(var_679.astype('uint16'), var_680.astype('uint16')) # shape=(16, 4, 3)
func_473_call = mod.get_global_var('func_473')
func_476_call = mutated_mod.get_global_var('func_476')
call_697 = relay.TupleGetItem(func_473_call(relay.reshape(var_679.astype('float64'), [])), 0)
call_698 = relay.TupleGetItem(func_476_call(relay.reshape(var_679.astype('float64'), [])), 0)
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
var_711 = relay.var("var_711", dtype = "float64", shape = (504,))#candidate|711|(504,)|var|float64
call_710 = relay.TupleGetItem(func_368_call(relay.reshape(var_711.astype('float64'), [12, 14, 3])), 2)
call_712 = relay.TupleGetItem(func_371_call(relay.reshape(var_711.astype('float64'), [12, 14, 3])), 2)
output = relay.Tuple([bop_681,call_697,call_710,var_711,])
output2 = relay.Tuple([bop_681,call_698,call_712,var_711,])
func_720 = relay.Function([var_679,var_680,var_711,], output)
mod['func_720'] = func_720
mod = relay.transform.InferType()(mod)
var_721 = relay.var("var_721", dtype = "uint16", shape = ())#candidate|721|()|var|uint16
var_722 = relay.var("var_722", dtype = "uint16", shape = (16, 4, 3))#candidate|722|(16, 4, 3)|var|uint16
var_723 = relay.var("var_723", dtype = "float64", shape = (504,))#candidate|723|(504,)|var|float64
output = func_720(var_721,var_722,var_723,)
func_724 = relay.Function([var_721,var_722,var_723,], output)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_875 = relay.var("var_875", dtype = "int8", shape = (6, 8, 3))#candidate|875|(6, 8, 3)|var|int8
var_876 = relay.var("var_876", dtype = "int8", shape = (6, 8, 3))#candidate|876|(6, 8, 3)|var|int8
bop_877 = relay.minimum(var_875.astype('int8'), relay.reshape(var_876.astype('int8'), relay.shape_of(var_875))) # shape=(6, 8, 3)
func_199_call = mod.get_global_var('func_199')
func_202_call = mutated_mod.get_global_var('func_202')
var_892 = relay.var("var_892", dtype = "float64", shape = (12,))#candidate|892|(12,)|var|float64
call_891 = relay.TupleGetItem(func_199_call(relay.reshape(var_892.astype('float64'), [2, 2, 3])), 0)
call_893 = relay.TupleGetItem(func_202_call(relay.reshape(var_892.astype('float64'), [2, 2, 3])), 0)
output = relay.Tuple([bop_877,call_891,var_892,])
output2 = relay.Tuple([bop_877,call_893,var_892,])
func_894 = relay.Function([var_875,var_876,var_892,], output)
mod['func_894'] = func_894
mod = relay.transform.InferType()(mod)
mutated_mod['func_894'] = func_894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mutated_mod.get_global_var('func_894')
var_896 = relay.var("var_896", dtype = "int8", shape = (6, 8, 3))#candidate|896|(6, 8, 3)|var|int8
var_897 = relay.var("var_897", dtype = "int8", shape = (6, 8, 3))#candidate|897|(6, 8, 3)|var|int8
var_898 = relay.var("var_898", dtype = "float64", shape = (12,))#candidate|898|(12,)|var|float64
call_895 = func_894_call(var_896,var_897,var_898,)
output = call_895
func_899 = relay.Function([var_896,var_897,var_898,], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_938 = relay.var("var_938", dtype = "float64", shape = (5, 2, 4))#candidate|938|(5, 2, 4)|var|float64
uop_939 = relay.atan(var_938.astype('float64')) # shape=(5, 2, 4)
func_473_call = mod.get_global_var('func_473')
func_476_call = mutated_mod.get_global_var('func_476')
const_948 = relay.const(-8.824794, dtype = "float64")#candidate|948|()|const|float64
call_947 = relay.TupleGetItem(func_473_call(relay.reshape(const_948.astype('float64'), [])), 0)
call_949 = relay.TupleGetItem(func_476_call(relay.reshape(const_948.astype('float64'), [])), 0)
uop_969 = relay.rsqrt(uop_939.astype('float32')) # shape=(5, 2, 4)
uop_972 = relay.sigmoid(uop_939.astype('float32')) # shape=(5, 2, 4)
func_720_call = mod.get_global_var('func_720')
func_724_call = mutated_mod.get_global_var('func_724')
var_982 = relay.var("var_982", dtype = "uint16", shape = (192,))#candidate|982|(192,)|var|uint16
var_983 = relay.var("var_983", dtype = "float64", shape = (252, 2))#candidate|983|(252, 2)|var|float64
call_981 = relay.TupleGetItem(func_720_call(relay.reshape(const_948.astype('uint16'), []), relay.reshape(var_982.astype('uint16'), [16, 4, 3]), relay.reshape(var_983.astype('float64'), [504,]), ), 1)
call_984 = relay.TupleGetItem(func_724_call(relay.reshape(const_948.astype('uint16'), []), relay.reshape(var_982.astype('uint16'), [16, 4, 3]), relay.reshape(var_983.astype('float64'), [504,]), ), 1)
output = relay.Tuple([call_947,const_948,uop_969,uop_972,call_981,var_982,var_983,])
output2 = relay.Tuple([call_949,const_948,uop_969,uop_972,call_984,var_982,var_983,])
func_993 = relay.Function([var_938,var_982,var_983,], output)
mod['func_993'] = func_993
mod = relay.transform.InferType()(mod)
mutated_mod['func_993'] = func_993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_993_call = mutated_mod.get_global_var('func_993')
var_995 = relay.var("var_995", dtype = "float64", shape = (5, 2, 4))#candidate|995|(5, 2, 4)|var|float64
var_996 = relay.var("var_996", dtype = "uint16", shape = (192,))#candidate|996|(192,)|var|uint16
var_997 = relay.var("var_997", dtype = "float64", shape = (252, 2))#candidate|997|(252, 2)|var|float64
call_994 = func_993_call(var_995,var_996,var_997,)
output = call_994
func_998 = relay.Function([var_995,var_996,var_997,], output)
mutated_mod['func_998'] = func_998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1252 = relay.var("var_1252", dtype = "float32", shape = (8, 4, 8))#candidate|1252|(8, 4, 8)|var|float32
var_1253 = relay.var("var_1253", dtype = "float32", shape = (8, 4, 8))#candidate|1253|(8, 4, 8)|var|float32
bop_1254 = relay.subtract(var_1252.astype('float32'), relay.reshape(var_1253.astype('float32'), relay.shape_of(var_1252))) # shape=(8, 4, 8)
func_473_call = mod.get_global_var('func_473')
func_476_call = mutated_mod.get_global_var('func_476')
var_1278 = relay.var("var_1278", dtype = "float64", shape = ())#candidate|1278|()|var|float64
call_1277 = relay.TupleGetItem(func_473_call(relay.reshape(var_1278.astype('float64'), [])), 1)
call_1279 = relay.TupleGetItem(func_476_call(relay.reshape(var_1278.astype('float64'), [])), 1)
output = relay.Tuple([bop_1254,call_1277,var_1278,])
output2 = relay.Tuple([bop_1254,call_1279,var_1278,])
func_1282 = relay.Function([var_1252,var_1253,var_1278,], output)
mod['func_1282'] = func_1282
mod = relay.transform.InferType()(mod)
var_1283 = relay.var("var_1283", dtype = "float32", shape = (8, 4, 8))#candidate|1283|(8, 4, 8)|var|float32
var_1284 = relay.var("var_1284", dtype = "float32", shape = (8, 4, 8))#candidate|1284|(8, 4, 8)|var|float32
var_1285 = relay.var("var_1285", dtype = "float64", shape = ())#candidate|1285|()|var|float64
output = func_1282(var_1283,var_1284,var_1285,)
func_1286 = relay.Function([var_1283,var_1284,var_1285,], output)
mutated_mod['func_1286'] = func_1286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1390 = relay.var("var_1390", dtype = "float64", shape = (13, 6, 12))#candidate|1390|(13, 6, 12)|var|float64
uop_1391 = relay.exp(var_1390.astype('float64')) # shape=(13, 6, 12)
var_1393 = relay.var("var_1393", dtype = "float64", shape = (13, 6, 12))#candidate|1393|(13, 6, 12)|var|float64
bop_1394 = relay.power(var_1390.astype('float64'), relay.reshape(var_1393.astype('float64'), relay.shape_of(var_1390))) # shape=(13, 6, 12)
func_60_call = mod.get_global_var('func_60')
func_62_call = mutated_mod.get_global_var('func_62')
const_1409 = relay.const([-9,-6,-10,-6,-9,7,7,-9,3,-4,-7,-4,9,8,-4,-3,-7,-3,-2,-9,8,-2,7,7,1,4,8,-4,5,2,6,-6,4,1,8,9,-5,8,4,-4,9,-2,6,-3,-7,-2,-10,-5,8,2,-7,2,2,6,9,1,-9,-4,-9,8,4,9,10,10,-10,-4,3,-9,-7,-5,6,-2,-10,-2,3,-5,1,3,-7,-7,-5,-4,-6,7,1,-10,7,1,-8,6,-2,10,-4,5,4,-8,5,-9,-8,-4,8,5,-6,3,-9,9,2,7,10,7,5,7,1,1,-4,-6,1,-8,-8,-2,9,-2,-1,-7,2,9,3,-7,1,2,5,6,1,-2,4,-8,7,6,-9,-1,10,8,3,8,7,9,-9,-7,-10,1,-7,9,-9,2,-1,-8,-2,-4,6,-8,9,-5,4,-1,3,8,-1,3,-5,7,-7,-5,-3,-5,9,2,-3,-10,-8,-1,1,10,8,1,10,9,2,8,5,6,7,3,6,-6,4,-7,7,-8,-3,-10,8,-10,-5,8,2,-3,-4,8,2,4,1,5,-9,7,-4,4,-8,4,3,-5,-8,1,-7,-1,4,8,-9,5,8,9,-1,-5,7,4,1,-2,-8,-10,5,5,-7,3,4,3,2,-3,6,1,7,-3,7,-5,2,1,7,5,8,9,7,-5,5,-1,-6,-4,2,-1,-7,-5,2,-6,-1,-2,-10,1,2,-8,4,7,6,4,1,6,-4,6,-8,-4,5,7,6,5,-4,4,-6,9,-2,-9,-10,2,-7,-7,-3,1,-8,3,6,1,-5,-9,8,1,1,-5,-7,5,3,7,5,-4,-6,-9,7,4,7,-10,-1,4,-3,5,4,-1,3,5,-8,3,5,8,-1,3,8,-4,-6,-3,7,-10,9,2,-1,-2,-5,3,-6,-4,-7,-9,-10,-6,-1,-7,8,-3,-9,10,1,9,6,10,6,1,10,-10,2,1,6,6,-5,2,-4,-6,-4,-3,-8,2,-8,9,4,-10,-5,2,9,5,6,10,10,7,2,4,-4,5,-1,9,4,-4,10,-2,5,-3,-7,-3,8,10,-9,-9,3,4,-10,9,-4,-7,-10,-3,8,-6,-10,1,8,-7,10,-1,-2,4,7,10,-8,-6,-5,5,-7,-8,1,-5,3,-5,10,5,-10,5,-4,-9,-1,-5,5,8,1,9,5,1,5,-2,-4,8,6,3,10,6,-8,6,9,5,9,-3,7,-4,-4,7,3,-1,-1,-9,-8,-10,6,-2,-1,-6,-3,7,-5,-2,7,-6,-5,9,3,6,-5,-10,6,5,-10,-10,-9,1,-9,-10,2,-9,3,4,-8,-9,-9,-3,10,-2,8,-1,10,1,-7,-8,-7,10,4,7,-6,-4,-5,2,6,6,-8,1,3,7,-2,-10,1,10,6,7,4,-7,-10,-6,2,10,-1,10,-10,-5,-2,-1,5,-8,9,-2,-9,-5,7,7,5,1,-8,-1,8,3,9,2,-5,6,8,-10,9,7,-7,7], dtype = "uint64")#candidate|1409|(576,)|const|uint64
call_1408 = relay.TupleGetItem(func_60_call(relay.reshape(const_1409.astype('uint64'), [9, 4, 16])), 0)
call_1410 = relay.TupleGetItem(func_62_call(relay.reshape(const_1409.astype('uint64'), [9, 4, 16])), 0)
func_720_call = mod.get_global_var('func_720')
func_724_call = mutated_mod.get_global_var('func_724')
const_1417 = relay.const(3, dtype = "uint16")#candidate|1417|()|const|uint16
const_1418 = relay.const([[2,4,6,6,-10,-3,2,-5,7,-5,6,-9,2,-6,-4,9,-8,5,-8,-4,-2,3,10,-7,5,-6,-3,1,-8,8,-1,7,2,5,-7,-6,-5,-4,-8,-2,3,1,2,1,9,2,-6,1],[-5,8,3,-10,5,-3,-5,6,-2,5,-9,4,6,7,-8,-2,5,4,5,8,10,-3,-4,-4,-5,10,3,-3,-3,5,-1,6,-6,-5,6,1,5,-10,2,-7,3,3,3,-7,8,-8,8,6],[6,-6,-3,8,-2,8,2,-3,3,1,1,2,9,-10,-6,10,8,-4,-3,-10,9,-9,1,6,-7,10,4,-9,4,9,-8,1,4,-6,8,-10,-1,-9,-10,-4,3,-6,6,9,7,-1,6,-8],[9,-7,-9,5,-7,-10,-1,-3,10,1,-5,7,10,-6,10,-7,9,6,-1,5,5,-5,4,3,7,2,-6,-5,-7,-5,6,-7,-5,10,4,-6,-5,-9,8,2,6,9,-5,10,-5,10,-6,6]], dtype = "uint16")#candidate|1418|(4, 48)|const|uint16
var_1419 = relay.var("var_1419", dtype = "float64", shape = (6, 84))#candidate|1419|(6, 84)|var|float64
call_1416 = relay.TupleGetItem(func_720_call(relay.reshape(const_1417.astype('uint16'), []), relay.reshape(const_1418.astype('uint16'), [16, 4, 3]), relay.reshape(var_1419.astype('float64'), [504,]), ), 3)
call_1420 = relay.TupleGetItem(func_724_call(relay.reshape(const_1417.astype('uint16'), []), relay.reshape(const_1418.astype('uint16'), [16, 4, 3]), relay.reshape(var_1419.astype('float64'), [504,]), ), 3)
output = relay.Tuple([uop_1391,bop_1394,call_1408,const_1409,call_1416,const_1417,const_1418,var_1419,])
output2 = relay.Tuple([uop_1391,bop_1394,call_1410,const_1409,call_1420,const_1417,const_1418,var_1419,])
func_1425 = relay.Function([var_1390,var_1393,var_1419,], output)
mod['func_1425'] = func_1425
mod = relay.transform.InferType()(mod)
mutated_mod['func_1425'] = func_1425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1425_call = mutated_mod.get_global_var('func_1425')
var_1427 = relay.var("var_1427", dtype = "float64", shape = (13, 6, 12))#candidate|1427|(13, 6, 12)|var|float64
var_1428 = relay.var("var_1428", dtype = "float64", shape = (13, 6, 12))#candidate|1428|(13, 6, 12)|var|float64
var_1429 = relay.var("var_1429", dtype = "float64", shape = (6, 84))#candidate|1429|(6, 84)|var|float64
call_1426 = func_1425_call(var_1427,var_1428,var_1429,)
output = call_1426
func_1430 = relay.Function([var_1427,var_1428,var_1429,], output)
mutated_mod['func_1430'] = func_1430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1445 = relay.var("var_1445", dtype = "float32", shape = (11, 10, 13))#candidate|1445|(11, 10, 13)|var|float32
var_1446 = relay.var("var_1446", dtype = "float32", shape = (11, 10, 13))#candidate|1446|(11, 10, 13)|var|float32
bop_1447 = relay.floor_divide(var_1445.astype('float32'), relay.reshape(var_1446.astype('float32'), relay.shape_of(var_1445))) # shape=(11, 10, 13)
bop_1464 = relay.left_shift(bop_1447.astype('int16'), relay.reshape(var_1445.astype('int16'), relay.shape_of(bop_1447))) # shape=(11, 10, 13)
func_1282_call = mod.get_global_var('func_1282')
func_1286_call = mutated_mod.get_global_var('func_1286')
const_1469 = relay.const([-0.831883,-0.235720,0.609787,-7.309856,-3.380027,3.931421,9.633359,9.465931,7.383599,5.827074,-4.510868,1.364264,-5.033299,1.101583,1.663512,3.475011,-0.664605,-2.006612,6.574287,0.067126,7.714816,7.990420,-6.476330,4.598425,3.817315,5.106714,-0.447093,2.597972,-9.050244,-5.650084,-8.575209,6.927797,8.209921,-4.078678,-5.698184,2.815307,-2.493306,-6.511772,7.666864,5.129390,1.198525,-2.844516,0.579762,-5.293565,-8.969473,5.553480,5.679737,1.805654,8.088343,5.490450,7.324161,3.209259,-5.684938,-5.728345,3.763359,-0.782575,-6.165002,-3.155246,4.565133,4.006200,-5.774801,-6.233206,4.721578,-0.251237,5.438069,-6.475445,-0.335194,5.404707,-0.799358,-4.840289,8.190187,-0.183081,4.725461,9.739282,9.542377,7.539672,6.726962,8.481491,3.907850,3.339052,-1.488842,-1.752884,8.364223,5.247175,1.339334,-6.477396,-1.454969,8.278012,4.761028,-9.896490,0.644204,-4.919752,7.740325,-3.208794,-0.807074,-4.798797,4.390925,5.110845,-7.621051,-4.278321,7.876306,-0.622785,4.777115,0.769727,-0.946467,-5.459778,1.012741,-6.172785,-9.734487,-2.790523,4.396624,9.871956,6.769968,5.618109,9.044692,8.723658,-9.464666,2.464405,6.386991,2.743676,-0.718388,-1.470141,-4.934461,8.240182,1.894228,0.514807,-5.637631,8.897220,-3.001929,1.870924,9.219669,-9.226894,-4.186633,9.141635,-7.840923,7.578987,-9.077662,8.289655,-7.854692,-5.768774,-0.029826,-6.695877,-0.612621,-1.764444,8.854630,1.465781,-0.199428,-5.766655,2.079628,0.700194,-8.569971,-8.409491,-6.598983,-8.234920,-2.379266,-5.911928,-8.448443,5.747584,-2.141259,3.013517,5.461049,-6.723218,-3.279137,-0.709161,1.615235,-8.779543,-0.287243,-4.646249,-1.672874,-9.700425,7.609437,4.277746,5.067471,8.943025,-7.842363,7.511061,2.058488,1.210813,3.950820,1.124048,8.000364,-3.732725,-3.708543,-4.034891,4.667717,-8.575030,4.169603,8.393526,-3.136501,7.078097,4.772841,2.811128,-3.352878,4.776019,-7.422590,-8.789652,-3.425547,-3.741165,-2.794199,7.947673,3.847230,-3.297573,6.542942,1.444947,-1.948430,-7.521481,-1.935379,-3.172706,-2.312404,-9.766126,-1.102867,5.416592,6.957497,-5.250035,-4.204997,-4.280756,3.678959,3.151566,-6.836469,-0.036917,6.793226,-4.193270,-1.346172,-8.171988,-4.069000,-0.842921,-7.551216,5.632160,0.038398,9.877075,0.620595,5.382254,-9.086535,7.933870,8.796341,-1.030759,-9.025684,-6.899326,4.244311,-4.831669,1.292577,3.982912,-5.814666,-5.210516,-0.850050,4.189531,2.224938,-0.660948,1.639671,-1.226623,5.951220,1.921767,1.394320,2.165081,5.849513,5.874163], dtype = "float32")#candidate|1469|(256,)|const|float32
var_1470 = relay.var("var_1470", dtype = "float64", shape = ())#candidate|1470|()|var|float64
call_1468 = relay.TupleGetItem(func_1282_call(relay.reshape(const_1469.astype('float32'), [8, 4, 8]), relay.reshape(const_1469.astype('float32'), [8, 4, 8]), relay.reshape(var_1470.astype('float64'), []), ), 1)
call_1471 = relay.TupleGetItem(func_1286_call(relay.reshape(const_1469.astype('float32'), [8, 4, 8]), relay.reshape(const_1469.astype('float32'), [8, 4, 8]), relay.reshape(var_1470.astype('float64'), []), ), 1)
uop_1476 = relay.sinh(bop_1447.astype('float64')) # shape=(11, 10, 13)
output = relay.Tuple([bop_1464,call_1468,const_1469,var_1470,uop_1476,])
output2 = relay.Tuple([bop_1464,call_1471,const_1469,var_1470,uop_1476,])
func_1485 = relay.Function([var_1445,var_1446,var_1470,], output)
mod['func_1485'] = func_1485
mod = relay.transform.InferType()(mod)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1485_call = mutated_mod.get_global_var('func_1485')
var_1487 = relay.var("var_1487", dtype = "float32", shape = (11, 10, 13))#candidate|1487|(11, 10, 13)|var|float32
var_1488 = relay.var("var_1488", dtype = "float32", shape = (11, 10, 13))#candidate|1488|(11, 10, 13)|var|float32
var_1489 = relay.var("var_1489", dtype = "float64", shape = ())#candidate|1489|()|var|float64
call_1486 = func_1485_call(var_1487,var_1488,var_1489,)
output = call_1486
func_1490 = relay.Function([var_1487,var_1488,var_1489,], output)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1533 = relay.const([[[-0.156655],[-2.345801],[-6.905143],[-0.004318]],[[-6.402043],[-1.305894],[1.201320],[-8.187530]],[[2.780328],[-4.902347],[4.365888],[2.175261]]], dtype = "float32")#candidate|1533|(3, 4, 1)|const|float32
uop_1534 = relay.sinh(const_1533.astype('float32')) # shape=(3, 4, 1)
bop_1536 = relay.greater_equal(const_1533.astype('bool'), relay.reshape(uop_1534.astype('bool'), relay.shape_of(const_1533))) # shape=(3, 4, 1)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
const_1550 = relay.const([1.409745,-2.905716,2.054306,3.485573,6.167608,-7.771607,-0.969800,8.349484,5.081154,-0.693897,-1.962739,-2.211683,5.661467,-3.647743,0.125989,-1.108903,-6.209871,-1.426874,-6.585309,5.101929,-8.049777,1.089896,-4.302939,2.744377,2.169036,-8.347988,9.393231,6.850338,4.031936,-5.780204,0.435510,-9.225353,0.774895,-7.842957,-7.935114,4.898342,1.796887,5.784243,4.731408,5.582182,-2.529409,-6.455348,-0.120871,-8.795723,-2.433143,4.164440,-6.255007,7.001002,-4.852953,6.706271,-1.449054,1.275793,1.686195,2.058063,8.356145,7.542334,-3.447964,4.442665,-5.310808,7.192776,-9.016822,-1.772687,-7.830185,-6.213302,5.923160,5.004764,-4.241162,-7.109852,-5.242348,3.016769,-5.974457,9.609714,-5.509822,-4.692338,4.298795,0.382417,-7.157499,-5.120642,-6.817916,6.331244,-1.268993,2.858257,4.860433,3.394727,6.521687,4.153295,3.293440,-0.745186,1.371444,-7.115044,-1.762060,6.856226,-7.767538,3.134872,-1.633067,-6.837545,-8.746091,-5.284592,0.290824,0.629386,-1.891117,2.052337,7.516040,7.554835,-1.137682,9.967447,-0.242602,6.756352,-6.724163,1.074851,6.997178,-9.161390,8.258270,4.941938,-6.625148,1.701952,2.816159,-6.404641,-0.418277,2.932415,-9.682613,-7.867307,7.625213,9.535898,-7.236446,4.949722,-4.206989,4.331043,-6.868796,9.830657,5.181120,9.006787,7.996241,-9.096981,8.941128,-9.422213,-9.282061,-9.483158,-0.784561,-0.159035,-3.326461,-2.879471,3.499545,-9.031348,-9.170120,-2.108647,-3.333463,-5.522788,0.039114,-3.730252,-9.114189,-7.622543,0.665668,1.807849,-0.740821,-4.853842,9.549429,-9.639701,1.308579,-3.920283,-2.408006,2.465423,-0.126469,-1.202639,-1.073182,-8.297793,2.332458,-1.488825,-6.273800,-1.757659,9.556829,9.554449,6.934137,7.088145,8.348841,-9.669879,-6.910098,-4.953260,0.613202,-7.682760,7.090129,-7.288784,-7.753732,7.757346,-6.718981,9.381789,9.505809,-5.684833,-5.166164,0.704726,2.116841,3.578093,3.380756,-0.591730,-1.688284,5.381974,-3.379944,-9.700513,-8.528423,8.845773,7.665331,-0.428224,5.092874,6.047462,-0.789997,9.268768,-4.580021,8.478645,1.630883,-4.177710,-7.665130,5.882720,-2.048928,5.172560,-1.196431,9.946156,-5.017152,-3.858872,0.512904,1.521510,-2.613347,7.925617,-0.030847,-7.024549,3.761489,7.314426,-7.289845,-2.887872,3.105260,8.044852,-8.142481,8.595316,-2.228136,-6.147452,-7.629677,0.645192,7.282244,2.233149,2.879409,8.437052,6.998276,8.135010,2.232485,-5.679880,3.661427,-8.434171,-3.986459,-5.807297,4.455868,-3.512324,4.022612,-1.797966,8.265734,-1.843886,-4.554381,0.155134,-5.266011,1.747166,-1.076363,-9.596235,-1.544413,3.332632,9.315938,7.753995,-1.874883,-7.993964,-9.597652,-7.021908,-4.379962,-0.865507,-8.467284,-3.890382,-3.014683,2.244784,9.723854,1.462952,-3.132769,4.261466,-1.262806,7.371795,-1.248578,-5.934690,-0.954395,-3.588999,3.223739,0.334253,-1.780442,0.770950,-4.825216,6.428907,-6.233582,7.403535,1.590683,-1.527833,5.902589,7.122581,0.439311,-0.831282,-8.887033,7.191988,-0.890580,-8.148064,-8.075773,5.102430,-4.288576,5.524303,5.237272,3.689845,9.242246,4.285331,0.771705,-8.497018,-9.040639,7.174642,-8.610639,7.307128,5.492241,1.125664,9.390281,-1.056137,-5.570752,-0.868795,-3.523542,-2.443269,-2.753715,5.327364,-4.675449,-6.932243,-8.960990,-8.898111,-8.506529,3.885259,4.785422,-9.074593,-3.582815,-9.058958,-3.371304,-6.958223,-5.616010,-2.325892,-0.969088,5.883168,6.286178,-6.725984,4.738103,-9.141977,-1.430719,2.598787,0.978095,-4.644857,0.027901,-4.695919,7.034214,-6.482806,2.723462,-5.926318,-8.985703,7.920768,-0.572365,-8.764725,-8.895437,0.807786,-0.896029,-4.549437,-2.913943,8.163039,5.938227,6.892315,6.645618,-1.181398,-2.767142,-3.173803,-7.751041,5.894601,0.963218,-2.701289,-2.702270,-9.360302,6.772585,-4.960064,3.091019,3.323959,5.650345,-4.824280,-5.345673,-8.986036,4.267963,-5.504924,-9.505076,-3.897860,5.642697,6.005674,6.813087,-2.838911,-0.903846,-4.203681,8.529978,-6.030800,1.047908,7.061929,5.611576,-7.532392,-8.401426,5.510471,-6.118529,7.412094,-9.372384,-1.879216,-9.889111,-4.192443,6.545692,4.001422,-2.698462,-0.911243,-8.662694,-2.356590,1.236894,-6.996963,2.652854,-1.721919,-9.417911,1.559898,-5.782991,-3.832725,-2.910692,1.121705,1.326580,-2.714703,-4.208522,6.483668,-3.778459,-3.424857,2.152751,-9.440493,-1.286728,-7.698275,-8.697101,-8.929471,0.666811,4.771679,3.210513,-5.679986,1.661466,5.236264,0.820005,-3.107570,-1.604379,2.142433,-1.515896,-5.932400,-9.541370,7.750318,-1.393910,1.482938,-7.306033,0.773448,0.804350,-4.960903,5.333000,-4.607561,9.266240,-2.490763,5.507878,0.704798,7.588043,3.846288,-4.838989,-0.941550,-3.226200,7.981934,7.972900,-4.029088,-8.476567,2.817745,-6.163369,-5.600990,2.286559,1.594516,-9.445663,-2.713038,-6.349643,1.198724,-2.153107,4.379110,8.398582,8.172711,-3.323008,3.642495,-6.802577,-9.280518,-6.971792,-1.946576,8.102460,-9.623864,-9.276516,-6.101249,-2.103974,-3.287746,3.393942,1.583253,-2.404276,9.187583,2.371803,7.589727,-2.292290,-7.717603,-7.090650,-4.424018,1.867385,7.784170,7.061260,-5.002729,6.617834,-0.352424,6.547735,1.819707,-5.124516,-2.797492,5.295261,9.899433,8.675807,-1.236016,2.515883,4.392769,4.060844,-6.282418,-8.612252,9.229828,0.412149,4.479680,7.949767,-4.465151,8.895329,5.296138,-8.851012,-6.076080,8.357548,7.895575,9.305194,4.996049,8.736456,5.352889,-1.219782,3.461976,-1.360111,-4.399371,5.578920,0.012940,3.203163,5.687430,-3.507036,0.022387,-3.658654,-5.306254,-4.369502,9.450799,8.549192,7.092710,4.143649,-8.590548,9.801328,0.826985,2.074747,-0.688274,-9.429614,5.380801,6.831157,-2.377567,5.965627,-0.816705,-4.444043,-3.058217,-6.350288,1.896666,-0.750258,-2.149716,0.820011,4.544423,-2.082630,8.961852,9.367891,4.598079,-5.394117,7.141853,-6.930602,5.527112,7.207166,7.627995,9.794668,3.629250,-0.608765,-2.352228,0.869295,-0.533767,5.552238,-2.627496,-4.918475,0.300334,8.308909,8.732920,-4.722836,-0.131866,-2.516295,-5.660844,0.344117,9.532920,6.160489,8.978977,3.118340,-6.309733,8.122172,-4.214773,6.070343,-6.644320,-3.908713,-2.419676,-8.777916,-6.436754,-6.982030,9.051842,-9.097773,6.570658,-1.743882,-9.632141,8.396337,-1.169502,-0.237495,-1.311164,-3.675790,-2.648910,-4.281398,-6.935587,-3.778786,5.049121,4.333306,-5.027068,-1.984852,6.491552,-1.927016,-2.176335,-3.126186,-3.210741,0.697701,-3.497541,-8.935045,-7.751837,-7.714660,5.841617,6.645026,9.461517,7.578433,-6.512242,-6.942195,-9.056356,-2.186659,-7.728146,9.102058,1.367414,9.590223,5.349260,-2.157620,4.443059,-7.909271,3.244290,3.096847,-9.106198,-5.710893,-4.612511,-9.186723,2.984623,-6.558611,7.760790,2.357366,-3.082344,9.320722,-5.791560,-5.507401,-7.575360,-0.890191,-2.418528,-3.016246,4.744436,-5.569508,9.073356,-1.553024,9.174594,-7.478419,2.124270,1.925800,2.234893,1.556800,-9.509590,8.274895,-7.411256,5.175356,7.511993,2.420816,-0.286071,0.829795,-1.996346,6.868277,-4.064722,-2.553835,2.333748,2.645228,-8.505024,-6.572162,-7.094776,4.220347,5.753580,-4.271141,4.217179,4.841342,4.882028,2.565498,0.135090,3.875465,9.474309,9.649415,3.014083,8.832733,7.623228,-0.647411,8.410623,-6.251324,-2.323023,4.196651,-6.814024,-3.186963,4.574194,7.321996,-3.188279,-2.256137,-7.484468,-6.019188,0.726883,-1.879371,0.183404,-5.601778,-1.928715,8.765851,4.754472,-2.547320,-3.319721,9.826983,7.673486,-1.458050,3.496813,1.027888,-7.744945,5.507976,5.913373,-3.940563,2.671789,2.622114,2.272366,-0.218803,4.552458,-3.678350,1.394958,-9.065638,-0.984293,-4.224222,2.666330,8.518461,4.541120,9.667817,-8.960507,8.235397,5.623923,-8.941035,-0.716061,6.845168,2.840473,5.555041,-9.142537,8.732039,-0.791564,-0.258371,3.080977,6.339968,5.951498,6.192596,-2.448152,4.873932,4.219728,-5.411468,-6.428556,-6.080900,8.175746,8.869416,1.280019,-1.012085,-0.600411,1.093574,-4.475741,3.124249,-8.150901,-2.441451,2.277951,-2.475456,8.550505,-3.799995,-2.440740,8.687594,-2.467022,9.814254,-4.079681,5.243462,6.744443,-3.321102,7.364269,3.852000,6.375450,-8.680659,2.887824,2.590509,4.860507,-4.058851,-1.343557,4.327335,-1.570093,-0.134734,-1.520320,-8.996462,0.202093,-7.334609,-8.914497,-0.352196,6.096151,-2.356579,4.126635,6.763114,-5.732383,-1.401567,6.958076,9.697497,5.742492,-4.429646,-2.820283,3.712767,-0.188157,-9.495475,4.330904,-5.252212,-3.818818,9.154364,-5.006854,-4.701559,-7.099905,-2.075803,3.735519,-3.856990,2.321483,-2.847330,3.895335,6.492079,2.078834,-8.037780,-1.662445,7.899103,4.547686,-1.487055,8.712417,-4.858583,-2.494674,-1.208407,5.788432,-8.989544,5.546076,-3.351532,-6.326962,-4.858983,3.122540,-4.608974,8.551346,-0.848069,-4.503724,7.620112,-1.840432,0.416841,-5.964477,-7.583156,-8.589198,-6.029716,8.614536,-6.404909,0.501690,-1.698050,2.959596,-3.515015,-5.121535,-5.244933,-8.443151,6.757620,8.679809,5.110904,-6.418293,1.246340,-2.212993,-9.316352,-5.202786,4.808556,-5.613085,9.553799,-5.801069,-3.717265,-5.375183,9.123435,-0.986129,7.898474,3.752369,8.571220,-1.840050,8.135424,5.986464,1.938849,-1.886759,5.601953,-0.997821,7.677384,-4.721609,5.466800,-4.141846,6.781945,7.749354,-0.435874,2.518865,-9.563121,8.605689,-0.555330,-6.721659,-1.442361,-5.174267,7.431045,-6.341239,9.469501,-6.441099,-5.864988,7.509134,-2.024336,-3.325291,-0.886569,-0.617557,-8.566907,-9.384457,-6.956875,-9.119513,5.752252,-2.860803,7.792561,0.022571,-8.674160,5.621298,-2.735080,-0.032105,-1.796527,-0.088386,6.939451,5.303924,-9.205950,-2.148268,-7.008674,6.633138,-4.639354,-0.300923,1.557593,-6.008867,-2.720880,-4.144938,0.227600,4.326341,0.083625,-4.982648,-3.875532,-5.533455,9.017689,-8.644747,4.355496,7.134193,6.999171,1.944999,-2.178090,-5.961657,-0.006250,8.172865,-2.350848,9.664026,-7.046337,-5.023104,4.685668,8.817668,8.355547,4.930126,-2.948528,-1.201292,-0.631843,-1.991394,-5.889916,1.161055,9.607781,-5.778196,9.329790,2.185219,1.497881,4.587100,4.999969,7.432983,-7.817470,0.684179,4.167560,-8.206779,-4.908374,-3.580769,-5.341767,5.155445,5.373409,5.425998,6.088022,-0.991328,-9.729626,5.050641,4.864545,-6.354809,3.237268,-6.675595,-8.397782,5.023822,1.239451,1.582905,5.073778,9.575895,-1.850137,-6.951318,0.568573,-6.008816,-3.051773,1.116338,-0.854795,5.815219,-6.716508,-2.807108,-2.853852,5.059542,-2.755732,8.981416,5.724243,-0.378788,1.947346,3.560779,3.229573,-7.419514,7.982435,3.334737,-3.707428,-0.592329,-8.440389,4.235349,-6.942228,-1.832780,8.591240,-1.975732,-1.125159,-4.460544,4.696160,9.356359,8.950732,-0.791511,0.154570,-4.404192,-5.124882,-1.456844,6.544239,-0.434715,-2.110558,-1.078099,-0.884346,-0.795064,6.086397,9.642876,-8.665102,-6.083278,-2.576685,6.865921,-4.589522,1.521704,-3.406260,-4.561185,9.667158,3.744611,4.617985,0.342101,-7.386925,9.850977,-6.953965,7.965003,4.449880,-9.455323,-4.617008,8.035797,1.652841,-3.283336,8.665903,-3.490992,0.320440,-0.676737,3.999530,-5.008175,-6.765384,-6.361376,-1.369222,4.288507,2.061091,-8.814591,7.908165,-7.680584,-0.265510,-0.272499,8.661204,4.662018,-0.387688,-7.374959,4.156160,-7.751736,-8.654188,9.318022,-7.907888,-9.838132,-0.509365,4.368341,-3.347263,4.029240,-9.056571,-3.321462,-8.052726,-1.030161,-1.752249,-4.118388,-4.232306,8.406529,2.064564,1.207941,5.396267,5.123315,-9.608674,-0.233909,0.742026,-6.864529,9.865525,7.722515,-5.514155,4.910886,-9.210187,-4.035193,-4.830043,4.080237,-7.370604,8.147670,-8.133020,-3.308553,3.218721,-0.961684,-0.336106,6.284896,6.777511,8.245296,-3.461403,-1.684259,-0.327160,4.995282,-7.901919,7.348131,-8.034056,3.263991,9.278130,7.515182,-8.881592,9.987448,-2.236552,-1.893087,-0.315506,4.810428,-8.494555,8.437933,4.787670,3.929303,-9.552519,-1.179464,1.119347,6.397912,8.189594,-2.729078,-1.490822,-5.973268,-6.352119,2.406028,-3.098604,2.628280,-6.365995,-3.383581,-4.930733,-2.688638,-1.576075,0.538228,-9.554221,-7.209386,6.976632,3.636954,4.313056,5.607600,-5.649831,-6.621253,7.222458,-3.465293,-8.209059,8.203254,-0.907696,8.896463,1.192058,1.892749,-9.235438,8.495738,-3.272325,4.399836,4.440108,3.902967,6.139994,-9.040037,1.520087,0.542861,9.764523,-8.212390,-9.000346,-7.818337,-1.616607,9.547806,-7.599651,1.796384,7.562238,-0.011845,8.173238,-8.831610,1.234258,6.098284,2.600171,-8.761003,-3.808013,4.958273,9.192927,-1.638545,4.453796,-0.112463,-0.392487,-3.919884,-3.738607,-4.463796,-6.213188,7.936835,-8.051302,-2.364918,3.707747,-2.993537,-4.956503,-0.306846,-2.690773,7.487354,-4.896727,6.315700,6.972217,-4.141517,-9.258465,7.581990,5.227579,-6.399565,-8.624870,-5.165809,4.516546,3.788642,-3.215421,0.301811,-8.953765,-9.491216,-1.099926,1.735929,2.574411,-2.194307,5.184320,-9.374675,-2.247356,-2.079872,6.383704,-2.596569,7.853486,-6.031192,9.853335,-2.443212,3.052319,-5.776068,-8.227975,8.182147,9.396244,8.113459,-8.751986,9.433106,-7.826434,3.345677,-9.639053,2.429563,9.878542,8.065149,9.040697,-2.848670,-6.580772,4.367762,-2.842589,-3.969941,-0.782243,-9.763898,5.718045,4.014922,8.939981,-6.356693,-0.844678,-1.675496,2.121644,-1.755015,4.760641,4.714668,5.281565,9.729871,-0.460955,3.407916,1.142487,4.362540,7.295058,4.848079,3.621144,2.532113,8.542707,9.293036,7.131921,4.173703,-1.807958,8.214730,9.163650,9.102824,-4.328185,-9.114990,6.498370,8.824429,-4.287587,5.915293,-8.511912,5.314871,-0.755426,-3.651407,-1.142506,1.972526,9.243537,-4.278370,8.613203,-9.793918,-8.975044,2.110131,-0.170014,3.196712,5.319509,-5.924045,0.733388,1.263992,-4.672435,8.749147,-6.284487,5.411879,8.962494,-7.316008,9.648235,9.376819,-0.017751,4.833099,3.163965,9.673996,-7.978493,-3.818016,-1.512417,2.607306,5.246181,8.128214,6.084386,8.845652,0.760279,5.684841,-9.290578,-3.872526,-1.259203,9.190034,-0.581459,-7.316293,-3.729328,-9.500708,5.110433,2.005826,6.502603,-4.495330,6.846758,6.758454,2.703552,-5.582981,1.696641,-7.269884,-8.838931,4.191914,0.073763,5.446454,-7.324612,-5.702867,-5.866712,1.274546,-6.662637,-8.278965,1.019535,-0.706177,4.417267,5.578285,-4.150727,-1.641664,2.521857,0.966915,7.263915,1.433495], dtype = "float32")#candidate|1550|(1430,)|const|float32
const_1551 = relay.const(9.136253, dtype = "float64")#candidate|1551|()|const|float64
call_1549 = relay.TupleGetItem(func_1485_call(relay.reshape(const_1550.astype('float32'), [11, 10, 13]), relay.reshape(const_1550.astype('float32'), [11, 10, 13]), relay.reshape(const_1551.astype('float64'), []), ), 3)
call_1552 = relay.TupleGetItem(func_1490_call(relay.reshape(const_1550.astype('float32'), [11, 10, 13]), relay.reshape(const_1550.astype('float32'), [11, 10, 13]), relay.reshape(const_1551.astype('float64'), []), ), 3)
bop_1564 = relay.minimum(const_1533.astype('float64'), relay.reshape(uop_1534.astype('float64'), relay.shape_of(const_1533))) # shape=(3, 4, 1)
bop_1567 = relay.subtract(bop_1564.astype('int8'), relay.reshape(bop_1536.astype('int8'), relay.shape_of(bop_1564))) # shape=(3, 4, 1)
output = relay.Tuple([call_1549,const_1550,const_1551,bop_1567,])
output2 = relay.Tuple([call_1552,const_1550,const_1551,bop_1567,])
func_1573 = relay.Function([], output)
mod['func_1573'] = func_1573
mod = relay.transform.InferType()(mod)
mutated_mod['func_1573'] = func_1573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mutated_mod.get_global_var('func_1573')
call_1574 = func_1573_call()
output = call_1574
func_1575 = relay.Function([], output)
mutated_mod['func_1575'] = func_1575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1587 = relay.TupleGetItem(func_1573_call(), 2)
call_1588 = relay.TupleGetItem(func_1575_call(), 2)
output = call_1587
output2 = call_1588
func_1598 = relay.Function([], output)
mod['func_1598'] = func_1598
mod = relay.transform.InferType()(mod)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mutated_mod.get_global_var('func_1598')
call_1599 = func_1598_call()
output = call_1599
func_1600 = relay.Function([], output)
mutated_mod['func_1600'] = func_1600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1603 = func_1598_call()
call_1604 = func_1598_call()
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1605 = relay.TupleGetItem(func_1573_call(), 3)
call_1606 = relay.TupleGetItem(func_1575_call(), 3)
output = relay.Tuple([call_1603,call_1605,])
output2 = relay.Tuple([call_1604,call_1606,])
func_1643 = relay.Function([], output)
mod['func_1643'] = func_1643
mod = relay.transform.InferType()(mod)
output = func_1643()
func_1644 = relay.Function([], output)
mutated_mod['func_1644'] = func_1644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1645 = func_1598_call()
call_1646 = func_1598_call()
func_368_call = mod.get_global_var('func_368')
func_371_call = mutated_mod.get_global_var('func_371')
const_1661 = relay.const([[-7.648566,8.320091],[1.331531,-7.960439],[1.095531,-5.974600],[-2.030895,4.477615],[-6.947086,2.034665],[-9.602553,-5.724061],[1.856381,6.247831],[3.823308,3.108970],[-7.180355,0.255530],[-7.308678,-6.681044],[-7.359386,1.466850],[-8.356309,-8.473603],[-6.267414,2.255674],[-5.785628,9.718476],[2.532083,6.532961],[-4.188889,6.922206],[4.919230,-6.553349],[-2.510118,-3.889228],[-3.536247,0.549303],[-7.745964,1.233668],[6.876684,9.821754],[-5.242840,7.948195],[3.826468,-1.338384],[2.673919,2.305508],[-1.133320,6.928876],[-6.608019,-5.623347],[6.832688,2.591403],[6.304811,8.004162],[1.375620,-4.398106],[8.929395,-2.368097],[8.239060,8.079842],[-1.098886,0.594135],[-2.966479,9.456958],[-9.426781,5.377385],[1.393482,-4.886006],[6.374289,9.899566],[-0.278155,-3.176843],[-5.545821,7.084376],[4.640552,-4.544892],[5.759572,0.008319],[-2.559240,-1.405955],[-0.781342,3.108063],[0.124824,-9.582823],[9.790687,0.551287],[-6.102203,5.891186],[-0.154216,-4.477079],[4.452175,6.373952],[-4.407692,9.449158],[3.150336,-5.924261],[0.557117,1.600744],[6.599188,-1.174107],[-8.006404,-0.288769],[7.210098,2.496231],[-0.971839,-5.967918],[-3.972153,-9.204074],[-6.246286,-6.914179],[-7.420850,5.524513],[-6.541604,-1.529819],[-2.259717,-6.906502],[-1.263721,1.671647],[-7.837637,-9.685789],[-0.735302,7.802003],[-8.475750,-8.493909],[5.045088,5.996237],[0.504504,6.070602],[7.271133,9.255456],[-0.299601,-3.563729],[-7.717652,5.492624],[-4.665046,-0.825532],[-9.361205,-5.476525],[8.436935,5.123662],[6.492812,-9.157530],[2.599200,-8.298212],[5.939576,-0.484533],[3.569937,9.595399],[7.270077,-7.620892],[-1.874279,-2.106800],[-0.754923,8.709885],[3.935837,-8.800822],[9.769132,6.569693],[9.247490,-5.835966],[8.674115,-7.621103],[8.803628,9.254089],[-2.413207,0.763174],[-9.750858,2.528404],[-7.950473,-9.912755],[6.769535,-0.046550],[-8.400343,5.623893],[3.731817,-8.483412],[0.600635,9.660535],[-8.751055,1.382257],[-1.285078,0.621043],[-5.433058,-3.565916],[-1.748414,1.954970],[4.727082,-7.945629],[3.506136,3.767042],[2.200579,-3.978136],[1.710542,-1.440442],[-7.719477,-0.792623],[-1.650839,8.057027],[4.907862,3.676889],[-1.736574,9.305607],[-2.081534,6.072104],[-0.774982,-2.845208],[9.693520,-9.754319],[-8.341017,-5.522757],[-2.514294,1.788353],[3.544767,2.204671],[-4.041004,-7.057610],[8.676117,1.798601],[5.640762,-9.805844],[1.785465,-5.255999],[3.975266,3.324404],[9.110703,-6.515202],[7.375209,-5.244537],[-1.816489,3.408195],[-2.651224,1.121597],[5.557335,0.744514],[-2.906232,-1.938523],[-9.733199,-6.489610],[1.578493,3.918003],[1.535429,-7.018894],[8.297392,8.067081],[3.593252,0.624050],[-6.305258,9.502186],[4.872273,3.955564],[-7.422940,4.650569],[-4.824053,-0.123343],[-6.478668,-7.059431],[9.884184,-1.869639],[9.978179,-2.816392],[-8.937081,-3.364541],[5.924481,-7.153450],[-1.549422,-6.115728],[-4.478750,9.540492],[5.023677,-6.697896],[1.135419,9.736479],[-6.346108,5.077465],[-3.334690,-3.033492],[3.766178,1.909122],[-9.371923,4.800114],[2.064963,-1.315685],[-0.297708,-0.062819],[3.029048,9.401306],[1.951452,-5.277043],[-3.054891,2.553975],[9.733503,8.964145],[-3.400945,3.146538],[-0.655430,9.525534],[-0.361464,3.151322],[2.813343,-1.046073],[8.577464,7.570771],[2.190484,-9.724534],[-6.423794,-9.470264],[3.811335,-0.001781],[-7.518382,-7.193391],[5.950003,1.825445],[9.865177,-9.285650],[-6.653781,-7.465458],[-7.630162,4.901836],[4.386150,7.218155],[7.102790,5.664636],[0.277889,1.477258],[-4.610983,-9.817839],[7.055044,5.546457],[0.219588,-9.901415],[6.507347,9.005139],[-5.071998,8.413951],[-9.505924,4.487208],[-5.985913,-1.439065],[0.866190,3.689068],[1.936159,9.056603],[4.987672,-8.911913],[-7.143727,1.716866],[6.150860,2.482489],[1.215873,3.857048],[3.009721,0.077734],[2.827296,7.926415],[3.728134,-0.613745],[-4.009384,-5.695789],[2.072359,-0.395267],[7.334756,3.120620],[-3.634801,-1.351236],[0.691243,0.077006],[9.988389,-7.507038],[-2.359107,7.881167],[-0.926752,7.658303],[5.091755,5.953568],[-6.173583,-3.726023],[7.962262,-1.078067],[-4.268167,5.497631],[-8.507377,-1.811418],[6.922327,-9.148901],[-4.820298,-5.179908],[-9.369820,7.332804],[4.820829,-8.966456],[0.728693,0.855022],[-2.207676,-8.494680],[-9.074999,-7.951138],[6.195350,-2.516963],[3.009332,-5.256809],[-8.340074,-4.609107],[-1.807580,-5.463783],[-5.146509,8.151935],[6.112089,-6.276965],[-7.375565,-8.320818],[-0.788690,0.248041],[0.574893,1.185887],[0.136151,-5.640547],[-5.983125,-7.726921],[0.874696,-3.333343],[7.954473,3.745440],[-9.641039,-9.841972],[-0.876975,4.452770],[8.953767,-1.284619],[2.876953,0.539536],[-2.048886,-4.978167],[-6.190154,5.127717],[-1.678641,-7.692371],[-5.374035,-1.782290],[8.366299,6.764062],[-6.145103,2.105756],[-4.640201,-5.846703],[1.092925,-9.252664],[-2.324419,-5.642620],[9.000551,-4.441996],[8.706226,6.070153],[-6.860201,-9.778397],[-1.175382,0.546920],[-5.829872,-2.137621],[8.206396,-7.920278],[-8.765524,-9.216850],[-4.339219,7.386189],[-9.272845,3.770233],[-3.864912,8.042963],[-1.746870,6.003326],[-4.715926,0.726258],[2.927054,2.091785],[6.330854,1.741953],[-4.965063,-6.903115],[-1.906695,-4.515010],[9.212115,-5.271744],[-6.069653,-5.520894],[9.084119,7.264312],[-9.540424,-0.236852],[-0.712030,-9.415018],[-1.881382,2.662279],[1.662832,4.711566],[8.953052,9.826559],[0.806447,9.533219],[7.457312,-4.428033],[2.679343,-4.052521]], dtype = "float64")#candidate|1661|(252, 2)|const|float64
call_1660 = relay.TupleGetItem(func_368_call(relay.reshape(const_1661.astype('float64'), [12, 14, 3])), 2)
call_1662 = relay.TupleGetItem(func_371_call(relay.reshape(const_1661.astype('float64'), [12, 14, 3])), 2)
output = relay.Tuple([call_1645,call_1660,const_1661,])
output2 = relay.Tuple([call_1646,call_1662,const_1661,])
func_1669 = relay.Function([], output)
mod['func_1669'] = func_1669
mod = relay.transform.InferType()(mod)
output = func_1669()
func_1670 = relay.Function([], output)
mutated_mod['func_1670'] = func_1670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_1696 = func_1598_call()
call_1697 = func_1598_call()
func_199_call = mod.get_global_var('func_199')
func_202_call = mutated_mod.get_global_var('func_202')
const_1699 = relay.const([-0.564608,3.174651,-0.111321,0.252781,-1.626851,4.604415,-4.603830,6.287062,-7.606595,6.923690,-6.783698,0.368973], dtype = "float64")#candidate|1699|(12,)|const|float64
call_1698 = relay.TupleGetItem(func_199_call(relay.reshape(const_1699.astype('float64'), [2, 2, 3])), 0)
call_1700 = relay.TupleGetItem(func_202_call(relay.reshape(const_1699.astype('float64'), [2, 2, 3])), 0)
output = relay.Tuple([call_1696,call_1698,const_1699,])
output2 = relay.Tuple([call_1697,call_1700,const_1699,])
func_1701 = relay.Function([], output)
mod['func_1701'] = func_1701
mod = relay.transform.InferType()(mod)
output = func_1701()
func_1702 = relay.Function([], output)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1723 = relay.var("var_1723", dtype = "uint64", shape = (14, 8, 8))#candidate|1723|(14, 8, 8)|var|uint64
const_1724 = relay.const([[[8,-1,6,6,5,-8,9,2],[4,-3,-3,9,1,9,-2,-1],[2,7,-7,9,-8,3,-9,-7],[-9,1,-9,-7,8,8,-6,-10],[-10,-8,8,8,-4,-5,-8,-6],[-3,8,-9,-6,3,-7,-10,7],[2,6,-5,-7,-9,-2,3,3],[-4,1,8,-10,-9,1,-4,9]],[[8,-5,2,-1,-2,-8,-2,-2],[4,2,1,2,-9,-9,-3,-8],[-4,1,-2,-6,9,1,5,-10],[7,8,3,5,-4,4,3,-6],[2,-2,4,-1,2,-4,5,3],[-3,-9,-4,10,-1,3,6,-2],[1,-5,3,-5,9,-9,3,-6],[6,5,-10,-6,-9,4,2,-4]],[[-1,5,-8,-7,2,-9,2,3],[1,-8,3,3,-6,-5,-2,-9],[-1,-6,-7,-6,-1,-5,-2,-2],[4,-5,5,9,4,10,-5,10],[-5,7,-9,2,9,4,-6,6],[8,9,9,7,-1,9,5,-6],[-4,-2,-7,5,-2,1,9,9],[9,1,3,-1,-4,-4,8,7]],[[2,-8,-4,7,6,-3,5,2],[-10,-2,-2,1,3,-3,3,6],[-9,-6,-9,-10,-3,8,7,-2],[5,-1,-8,1,8,-2,-3,-8],[-3,7,9,7,-2,-8,6,-7],[-5,-6,-1,-4,-10,-9,9,9],[-2,-3,6,3,-6,-9,2,-3],[-4,-3,5,-5,-8,-10,-2,8]],[[-5,-8,-3,-9,1,-3,-5,3],[-3,-6,6,5,-8,8,2,-5],[-6,-8,-4,-8,-8,-2,-7,-2],[-1,-1,2,10,9,-9,3,9],[-8,8,5,-7,-9,6,3,-8],[-8,3,5,7,3,-6,-1,6],[2,-9,4,-2,6,10,-5,8],[-7,3,-6,5,-8,8,8,9]],[[9,-8,8,7,7,-5,-6,-8],[-4,5,5,1,-1,-5,2,8],[3,-8,8,-5,5,-9,-1,-3],[2,-6,8,-8,-6,-9,-8,2],[4,10,-7,9,3,2,7,-10],[5,-3,3,3,8,-10,8,-6],[3,-4,-3,2,-1,1,-2,-6],[-6,10,-4,-3,-3,-7,-6,-5]],[[10,-1,10,-10,-8,10,1,4],[9,-1,7,5,6,2,6,-4],[7,-1,7,-10,10,4,10,-3],[2,-1,-7,-10,10,-6,1,5],[5,5,-7,6,8,1,8,4],[7,10,4,8,3,-2,-5,-2],[-7,10,-5,1,6,1,7,5],[-3,-9,-6,2,-10,6,5,4]],[[9,6,-2,-7,-1,6,6,-4],[-8,-7,-10,6,5,-5,-1,4],[7,-4,-7,1,1,-7,-9,-5],[4,3,-1,5,-10,10,-3,3],[-4,-1,10,-8,9,8,-6,7],[7,5,-9,-7,3,2,2,6],[-4,5,-8,5,-8,-7,7,4],[4,-1,-2,-3,6,8,3,-1]],[[10,-1,1,-6,-8,-3,7,-9],[1,-1,8,5,-1,1,-9,-1],[10,-7,-7,-10,-6,-1,2,-3],[10,3,9,-4,-3,4,-7,10],[4,-8,10,7,-1,-10,-8,6],[-6,8,9,4,6,3,-3,-3],[-10,-10,-1,8,-5,4,1,1],[-3,1,-10,-3,4,-2,-8,-4]],[[9,1,-10,9,7,-9,7,4],[-9,-1,1,-5,-1,2,5,-10],[-1,-2,9,-6,-7,3,-5,6],[-5,2,1,2,6,1,-1,4],[1,-1,-7,7,6,-2,8,-6],[2,-10,5,7,6,-1,-1,9],[2,2,-8,7,-8,4,4,-10],[8,-1,2,4,-8,-6,-1,8]],[[-4,-3,9,8,-9,-7,4,1],[-7,-5,-2,10,-6,-8,-1,10],[-9,2,5,7,-4,-8,2,-2],[-4,2,8,8,8,2,-2,-7],[-7,9,10,-7,2,5,-5,-5],[-6,6,6,-9,-10,4,-3,-5],[1,-4,1,7,7,7,9,-10],[8,-2,-2,9,-1,-5,7,7]],[[-3,-8,4,-10,-7,2,1,-2],[10,3,4,5,8,-2,-10,-2],[-3,9,-6,-8,-8,-1,-2,7],[-9,-3,4,-10,10,7,4,4],[10,5,-4,10,-3,10,6,-7],[-8,9,2,6,3,1,1,-5],[3,-8,4,9,-1,-3,6,1],[4,-6,1,-6,5,2,-7,8]],[[8,6,-4,-9,4,1,4,4],[3,-2,-1,-9,-10,-2,-7,-6],[6,4,7,-6,-5,-10,10,7],[-5,-8,-9,-3,-7,3,-7,8],[1,7,7,-10,4,-3,6,-10],[1,7,6,-9,9,6,3,1],[-7,-3,-4,1,4,2,6,-1],[1,-8,-10,-9,-1,4,2,9]],[[6,6,-6,9,2,10,-5,-4],[-8,3,-9,4,-1,3,4,3],[-5,-9,7,-9,-9,-5,-9,-1],[3,-3,-8,4,5,-3,1,-8],[-6,-5,7,9,4,-2,-5,2],[-9,-4,-3,-8,-6,-9,8,3],[-8,-4,4,-1,-9,5,-6,-6],[3,-1,6,7,2,-1,7,2]]], dtype = "uint64")#candidate|1724|(14, 8, 8)|const|uint64
bop_1725 = relay.less(var_1723.astype('bool'), relay.reshape(const_1724.astype('bool'), relay.shape_of(var_1723))) # shape=(14, 8, 8)
var_1728 = relay.var("var_1728", dtype = "uint64", shape = (14, 8, 8))#candidate|1728|(14, 8, 8)|var|uint64
bop_1729 = relay.maximum(var_1723.astype('uint16'), relay.reshape(var_1728.astype('uint16'), relay.shape_of(var_1723))) # shape=(14, 8, 8)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_1739 = relay.TupleGetItem(func_1643_call(), 1)
call_1740 = relay.TupleGetItem(func_1644_call(), 1)
var_1742 = relay.var("var_1742", dtype = "uint16", shape = (14, 8, 8))#candidate|1742|(14, 8, 8)|var|uint16
bop_1743 = relay.minimum(bop_1729.astype('int64'), relay.reshape(var_1742.astype('int64'), relay.shape_of(bop_1729))) # shape=(14, 8, 8)
const_1771 = relay.const([[[-6,-3,-10],[-2,-7,-6],[2,-2,-1],[-1,-4,5]],[[10,6,-9],[-1,3,4],[4,10,1],[-8,-6,-1]],[[5,-8,-4],[2,10,-5],[-5,4,10],[-3,-5,8]]], dtype = "int8")#candidate|1771|(3, 4, 3)|const|int8
bop_1772 = relay.floor_divide(call_1739.astype('float64'), const_1771.astype('float64')) # shape=(3, 4, 3)
bop_1775 = relay.floor_divide(call_1740.astype('float64'), const_1771.astype('float64')) # shape=(3, 4, 3)
bop_1806 = relay.bitwise_and(bop_1725.astype('int64'), relay.reshape(bop_1743.astype('int64'), relay.shape_of(bop_1725))) # shape=(14, 8, 8)
var_1811 = relay.var("var_1811", dtype = "int64", shape = (14, 8, 8))#candidate|1811|(14, 8, 8)|var|int64
bop_1812 = relay.bitwise_xor(bop_1743.astype('int32'), relay.reshape(var_1811.astype('int32'), relay.shape_of(bop_1743))) # shape=(14, 8, 8)
func_1425_call = mod.get_global_var('func_1425')
func_1430_call = mutated_mod.get_global_var('func_1430')
var_1818 = relay.var("var_1818", dtype = "float64", shape = (936,))#candidate|1818|(936,)|var|float64
var_1819 = relay.var("var_1819", dtype = "float64", shape = (504,))#candidate|1819|(504,)|var|float64
call_1817 = relay.TupleGetItem(func_1425_call(relay.reshape(var_1818.astype('float64'), [13, 6, 12]), relay.reshape(var_1818.astype('float64'), [13, 6, 12]), relay.reshape(var_1819.astype('float64'), [6, 84]), ), 2)
call_1820 = relay.TupleGetItem(func_1430_call(relay.reshape(var_1818.astype('float64'), [13, 6, 12]), relay.reshape(var_1818.astype('float64'), [13, 6, 12]), relay.reshape(var_1819.astype('float64'), [6, 84]), ), 2)
output = relay.Tuple([bop_1772,bop_1806,bop_1812,call_1817,var_1818,var_1819,])
output2 = relay.Tuple([bop_1775,bop_1806,bop_1812,call_1820,var_1818,var_1819,])
func_1825 = relay.Function([var_1723,var_1728,var_1742,var_1811,var_1818,var_1819,], output)
mod['func_1825'] = func_1825
mod = relay.transform.InferType()(mod)
var_1826 = relay.var("var_1826", dtype = "uint64", shape = (14, 8, 8))#candidate|1826|(14, 8, 8)|var|uint64
var_1827 = relay.var("var_1827", dtype = "uint64", shape = (14, 8, 8))#candidate|1827|(14, 8, 8)|var|uint64
var_1828 = relay.var("var_1828", dtype = "uint16", shape = (14, 8, 8))#candidate|1828|(14, 8, 8)|var|uint16
var_1829 = relay.var("var_1829", dtype = "int64", shape = (14, 8, 8))#candidate|1829|(14, 8, 8)|var|int64
var_1830 = relay.var("var_1830", dtype = "float64", shape = (936,))#candidate|1830|(936,)|var|float64
var_1831 = relay.var("var_1831", dtype = "float64", shape = (504,))#candidate|1831|(504,)|var|float64
output = func_1825(var_1826,var_1827,var_1828,var_1829,var_1830,var_1831,)
func_1832 = relay.Function([var_1826,var_1827,var_1828,var_1829,var_1830,var_1831,], output)
mutated_mod['func_1832'] = func_1832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_1856 = relay.TupleGetItem(func_1643_call(), 1)
call_1857 = relay.TupleGetItem(func_1644_call(), 1)
output = call_1856
output2 = call_1857
func_1869 = relay.Function([], output)
mod['func_1869'] = func_1869
mod = relay.transform.InferType()(mod)
output = func_1869()
func_1870 = relay.Function([], output)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1896 = relay.TupleGetItem(func_1573_call(), 0)
call_1897 = relay.TupleGetItem(func_1575_call(), 0)
output = relay.Tuple([call_1896,])
output2 = relay.Tuple([call_1897,])
func_1900 = relay.Function([], output)
mod['func_1900'] = func_1900
mod = relay.transform.InferType()(mod)
output = func_1900()
func_1901 = relay.Function([], output)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1927 = relay.var("var_1927", dtype = "uint64", shape = (7, 9, 11))#candidate|1927|(7, 9, 11)|var|uint64
var_1928 = relay.var("var_1928", dtype = "uint64", shape = (7, 9, 11))#candidate|1928|(7, 9, 11)|var|uint64
bop_1929 = relay.greater(var_1927.astype('bool'), relay.reshape(var_1928.astype('bool'), relay.shape_of(var_1927))) # shape=(7, 9, 11)
uop_1934 = relay.sin(var_1927.astype('float32')) # shape=(7, 9, 11)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_1939 = relay.TupleGetItem(func_1573_call(), 0)
call_1940 = relay.TupleGetItem(func_1575_call(), 0)
output = relay.Tuple([bop_1929,uop_1934,call_1939,])
output2 = relay.Tuple([bop_1929,uop_1934,call_1940,])
func_1941 = relay.Function([var_1927,var_1928,], output)
mod['func_1941'] = func_1941
mod = relay.transform.InferType()(mod)
var_1942 = relay.var("var_1942", dtype = "uint64", shape = (7, 9, 11))#candidate|1942|(7, 9, 11)|var|uint64
var_1943 = relay.var("var_1943", dtype = "uint64", shape = (7, 9, 11))#candidate|1943|(7, 9, 11)|var|uint64
output = func_1941(var_1942,var_1943,)
func_1944 = relay.Function([var_1942,var_1943,], output)
mutated_mod['func_1944'] = func_1944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_1951 = func_1869_call()
call_1952 = func_1869_call()
output = relay.Tuple([call_1951,])
output2 = relay.Tuple([call_1952,])
func_1956 = relay.Function([], output)
mod['func_1956'] = func_1956
mod = relay.transform.InferType()(mod)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1956_call = mutated_mod.get_global_var('func_1956')
call_1957 = func_1956_call()
output = call_1957
func_1958 = relay.Function([], output)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_1959 = relay.TupleGetItem(func_1669_call(), 2)
call_1960 = relay.TupleGetItem(func_1670_call(), 2)
uop_1973 = relay.cosh(call_1959.astype('float32')) # shape=(252, 2)
uop_1975 = relay.cosh(call_1960.astype('float32')) # shape=(252, 2)
uop_1985 = relay.exp(call_1959.astype('float32')) # shape=(252, 2)
uop_1987 = relay.exp(call_1960.astype('float32')) # shape=(252, 2)
output = relay.Tuple([uop_1973,uop_1985,])
output2 = relay.Tuple([uop_1975,uop_1987,])
func_1999 = relay.Function([], output)
mod['func_1999'] = func_1999
mod = relay.transform.InferType()(mod)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mutated_mod.get_global_var('func_1999')
call_2000 = func_1999_call()
output = call_2000
func_2001 = relay.Function([], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2090 = relay.var("var_2090", dtype = "float64", shape = (15, 5, 3))#candidate|2090|(15, 5, 3)|var|float64
uop_2091 = relay.log10(var_2090.astype('float64')) # shape=(15, 5, 3)
var_2106 = relay.var("var_2106", dtype = "float64", shape = (15, 5, 3))#candidate|2106|(15, 5, 3)|var|float64
bop_2107 = relay.greater_equal(uop_2091.astype('bool'), relay.reshape(var_2106.astype('bool'), relay.shape_of(uop_2091))) # shape=(15, 5, 3)
output = bop_2107
output2 = bop_2107
func_2110 = relay.Function([var_2090,var_2106,], output)
mod['func_2110'] = func_2110
mod = relay.transform.InferType()(mod)
var_2111 = relay.var("var_2111", dtype = "float64", shape = (15, 5, 3))#candidate|2111|(15, 5, 3)|var|float64
var_2112 = relay.var("var_2112", dtype = "float64", shape = (15, 5, 3))#candidate|2112|(15, 5, 3)|var|float64
output = func_2110(var_2111,var_2112,)
func_2113 = relay.Function([var_2111,var_2112,], output)
mutated_mod['func_2113'] = func_2113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1701_call = mod.get_global_var('func_1701')
func_1702_call = mutated_mod.get_global_var('func_1702')
call_2227 = relay.TupleGetItem(func_1701_call(), 2)
call_2228 = relay.TupleGetItem(func_1702_call(), 2)
func_2110_call = mod.get_global_var('func_2110')
func_2113_call = mutated_mod.get_global_var('func_2113')
var_2237 = relay.var("var_2237", dtype = "float64", shape = (225,))#candidate|2237|(225,)|var|float64
call_2236 = func_2110_call(relay.reshape(var_2237.astype('float64'), [15, 5, 3]), relay.reshape(var_2237.astype('float64'), [15, 5, 3]), )
call_2238 = func_2110_call(relay.reshape(var_2237.astype('float64'), [15, 5, 3]), relay.reshape(var_2237.astype('float64'), [15, 5, 3]), )
func_894_call = mod.get_global_var('func_894')
func_899_call = mutated_mod.get_global_var('func_899')
var_2243 = relay.var("var_2243", dtype = "int8", shape = (144,))#candidate|2243|(144,)|var|int8
call_2242 = relay.TupleGetItem(func_894_call(relay.reshape(var_2243.astype('int8'), [6, 8, 3]), relay.reshape(var_2243.astype('int8'), [6, 8, 3]), relay.reshape(call_2227.astype('float64'), [12,]), ), 2)
call_2244 = relay.TupleGetItem(func_899_call(relay.reshape(var_2243.astype('int8'), [6, 8, 3]), relay.reshape(var_2243.astype('int8'), [6, 8, 3]), relay.reshape(call_2227.astype('float64'), [12,]), ), 2)
func_60_call = mod.get_global_var('func_60')
func_62_call = mutated_mod.get_global_var('func_62')
var_2248 = relay.var("var_2248", dtype = "uint64", shape = (1, 576))#candidate|2248|(1, 576)|var|uint64
call_2247 = relay.TupleGetItem(func_60_call(relay.reshape(var_2248.astype('uint64'), [9, 4, 16])), 0)
call_2249 = relay.TupleGetItem(func_62_call(relay.reshape(var_2248.astype('uint64'), [9, 4, 16])), 0)
output = relay.Tuple([call_2227,call_2236,var_2237,call_2242,var_2243,call_2247,var_2248,])
output2 = relay.Tuple([call_2228,call_2238,var_2237,call_2244,var_2243,call_2249,var_2248,])
func_2250 = relay.Function([var_2237,var_2243,var_2248,], output)
mod['func_2250'] = func_2250
mod = relay.transform.InferType()(mod)
var_2251 = relay.var("var_2251", dtype = "float64", shape = (225,))#candidate|2251|(225,)|var|float64
var_2252 = relay.var("var_2252", dtype = "int8", shape = (144,))#candidate|2252|(144,)|var|int8
var_2253 = relay.var("var_2253", dtype = "uint64", shape = (1, 576))#candidate|2253|(1, 576)|var|uint64
output = func_2250(var_2251,var_2252,var_2253,)
func_2254 = relay.Function([var_2251,var_2252,var_2253,], output)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_2315 = relay.TupleGetItem(func_1900_call(), 0)
call_2316 = relay.TupleGetItem(func_1901_call(), 0)
output = call_2315
output2 = call_2316
func_2325 = relay.Function([], output)
mod['func_2325'] = func_2325
mod = relay.transform.InferType()(mod)
mutated_mod['func_2325'] = func_2325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2325_call = mutated_mod.get_global_var('func_2325')
call_2326 = func_2325_call()
output = call_2326
func_2327 = relay.Function([], output)
mutated_mod['func_2327'] = func_2327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1701_call = mod.get_global_var('func_1701')
func_1702_call = mutated_mod.get_global_var('func_1702')
call_2336 = relay.TupleGetItem(func_1701_call(), 2)
call_2337 = relay.TupleGetItem(func_1702_call(), 2)
func_1282_call = mod.get_global_var('func_1282')
func_1286_call = mutated_mod.get_global_var('func_1286')
var_2340 = relay.var("var_2340", dtype = "float32", shape = (2, 128))#candidate|2340|(2, 128)|var|float32
var_2341 = relay.var("var_2341", dtype = "float64", shape = ())#candidate|2341|()|var|float64
call_2339 = relay.TupleGetItem(func_1282_call(relay.reshape(var_2340.astype('float32'), [8, 4, 8]), relay.reshape(var_2340.astype('float32'), [8, 4, 8]), relay.reshape(var_2341.astype('float64'), []), ), 0)
call_2342 = relay.TupleGetItem(func_1286_call(relay.reshape(var_2340.astype('float32'), [8, 4, 8]), relay.reshape(var_2340.astype('float32'), [8, 4, 8]), relay.reshape(var_2341.astype('float64'), []), ), 0)
bop_2348 = relay.less_equal(var_2340.astype('bool'), var_2341.astype('bool')) # shape=(2, 128)
output = relay.Tuple([call_2336,call_2339,bop_2348,])
output2 = relay.Tuple([call_2337,call_2342,bop_2348,])
func_2352 = relay.Function([var_2340,var_2341,], output)
mod['func_2352'] = func_2352
mod = relay.transform.InferType()(mod)
var_2353 = relay.var("var_2353", dtype = "float32", shape = (2, 128))#candidate|2353|(2, 128)|var|float32
var_2354 = relay.var("var_2354", dtype = "float64", shape = ())#candidate|2354|()|var|float64
output = func_2352(var_2353,var_2354,)
func_2355 = relay.Function([var_2353,var_2354,], output)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2368 = func_1869_call()
call_2369 = func_1869_call()
var_2404 = relay.var("var_2404", dtype = "int8", shape = (3, 4, 15))#candidate|2404|(3, 4, 15)|var|int8
bop_2405 = relay.equal(call_2368.astype('bool'), var_2404.astype('bool')) # shape=(3, 4, 15)
bop_2408 = relay.equal(call_2369.astype('bool'), var_2404.astype('bool')) # shape=(3, 4, 15)
uop_2441 = relay.cosh(var_2404.astype('float64')) # shape=(3, 4, 15)
output = relay.Tuple([bop_2405,uop_2441,])
output2 = relay.Tuple([bop_2408,uop_2441,])
func_2452 = relay.Function([var_2404,], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2453 = relay.var("var_2453", dtype = "int8", shape = (3, 4, 15))#candidate|2453|(3, 4, 15)|var|int8
func_2452_call = mutated_mod.get_global_var('func_2452')
call_2454 = func_2452_call(var_2453)
output = call_2454
func_2455 = relay.Function([var_2453], output)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_2457 = relay.TupleGetItem(func_1900_call(), 0)
call_2458 = relay.TupleGetItem(func_1901_call(), 0)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
const_2482 = relay.const([-1.913622,5.203875,0.374885,8.905280,-9.109607,-3.127225,-9.974644,6.841044,-1.698973,3.129605,-7.542598,7.642440,2.188836,1.537214,-4.869337,-2.781414,-4.208808,1.977744,7.275978,-2.829452,6.030579,-8.837313,-2.023862,5.381186,8.262549,0.721950,4.878926,-3.721265,5.569708,2.672227,3.489420,-0.132030,4.093951,4.131527,-6.359868,-1.939727,8.647347,7.516179,-6.500275,-2.265923,-8.974171,-4.512157,-6.854506,-9.224029,-7.769427,6.800589,-0.507367,8.936390,5.462753,-0.680906,-0.847124,6.586874,2.529835,7.696311,-1.948582,3.561584,-2.188687,-7.619511,4.171673,-8.676258,2.747200,6.175893,8.289477,2.453548,9.943986,-8.973590,9.438185,4.148410,2.032437,-0.801960,-1.340063,-3.324740,8.492907,0.071068,0.560733,-0.380476,-5.135055,-0.328297,-9.672483,-9.285905,-3.914159,-8.010730,4.721465,-2.958005,-1.415180,-5.217945,5.295043,1.515962,0.004830,0.329757,-2.035955,4.996624,5.501029,-4.012406,-1.254311,7.599353,-7.874649,-0.605814,-7.853242,-8.013844,2.213322,1.302646,9.790736,-8.744126,-7.093531,2.357910,5.006463,1.581399,3.609303,7.772663,-0.353942,-4.320407,-2.259856,-4.760287,6.793743,3.139468,1.655025,1.679618,-6.533139,-9.780226,6.989596,3.442238,-8.245999,6.693724,6.118298,0.765197,-6.777496,-5.618806,-6.076982,5.077306,3.870501,0.549696,9.263928,6.873833,-0.192789,-5.143504,0.224252,-7.057821,-2.227529,8.192863,-1.232047,-7.315068,-6.986105,7.622373,2.500006,6.610798,-2.397066,-1.664613,0.601241,1.517676,7.837064,-6.103228,0.533659,-6.437845,-8.808371,6.612318,8.315238,9.180852,-1.356780,-3.563860,3.287350,-7.024801,-2.689156,-4.574063,-0.304999,1.877240,7.349147,3.251881,2.903856,7.821318,1.985859,-0.207683,-2.836873,1.425221,5.260101,-4.410601,3.988796,-6.462697,7.252504,1.250907,-9.139366,7.668701,-1.937028,-2.599624,4.436330,-5.888069,4.053061,2.070077,-7.907087,-9.092493,-2.112849,2.321455,-2.842766,-6.591542,-3.553535,2.071793,-3.172761,-2.658577,0.134608,-6.248731,-3.805098,-7.220369,-5.161728,5.571184,-6.524754,-9.551391,2.519880,-6.445434,4.086855,5.357156,-7.699954,-8.108466,-3.891352,-4.595685,3.767900,-6.654101,1.933145,7.375015,-4.622827,-3.790586,6.078006,5.228649,-5.883379,-9.783352,-4.241886,7.281040,-8.143103,-1.925363,1.359537,0.092673,8.971602,-6.524660,-9.259604,-7.279128,4.231423,9.193829,2.156836,7.002323,-4.257093,8.524102,0.475898,7.100180,-4.389360,-0.036873,-2.678893,9.876243,9.767973,-5.709728,3.303143,-0.133248,-5.365099,9.249066,3.189329,0.099388,-0.423498,-8.332289,-4.765833,-1.195077,9.966856,-5.399404,-1.482811,-6.036129,5.910162,6.211283,9.600534,2.234129,7.435959,-5.691152,8.655096,-9.580190,-5.375644,-4.042898,-4.797088,-4.708752,7.621376,-3.771512,-3.042186,-1.021963,8.761763,-2.264798,9.673769,-7.405567,8.930753,7.117318,1.068652,-8.193240,7.303508,-6.610711,3.204239,5.473804,7.532015,-4.253197,-9.827856,9.133859,-7.625503,2.898627,-2.856348,-2.551831,-7.980162,-8.933468,0.130899,5.020227,5.726724,2.663281,-8.614654,-2.819531,-9.223029,2.579746,2.110182,-5.063446,1.298415,0.478528,-9.421348,7.117008,-1.504250,-7.533115,-5.868751,-3.655236,4.936493,3.989754,-5.772810,1.512671,-4.177617,-5.633074,2.212882,-0.385044,-7.141571,-5.172671,8.502637,4.040478,-8.108713,-3.462541,6.155500,-5.408777,-7.980063,4.122479,8.592984,7.219753,2.510402,4.568170,-1.251342,3.494805,-1.988727,5.843899,5.204376,0.774073,-3.569396,9.333056,-5.685751,-6.268481,3.750128,3.811738,-0.059544,-6.249467,-8.949600,4.886233,7.852558,7.347742,-9.089972,-3.754093,3.570622,7.391422,8.274843,-5.750660,2.888024,-7.475558,-6.891558,8.447928,-0.014672,-1.115967,-5.487642,2.919194,6.997193,3.192038,-7.254373,9.317673,8.700521,8.716679,3.000023,-9.899787,1.212146,5.765262,-8.160708,-0.813015,5.239601,-7.998982,-3.272832,2.340997,-5.090539,-5.335984,-5.689189,3.422396,-3.818616,-4.843016,-2.092596,-3.751495,8.175386,8.255734,7.580520,-2.705343,-9.963144,-8.516313,8.099097,-7.204415,-7.634599,-7.667843,5.186291,-5.401885,-9.665082,7.071508,8.045576,-6.271515,-6.984719,-4.870743,-0.037874,-6.052409,0.271691,7.922119,-5.253477,7.943637,-7.020511,-2.811629,2.537684,-1.427705,7.600649,-1.021716,7.256072,-0.501274,-8.471635,4.796008,0.021693,9.383284,-0.635552,2.578792,1.200847,6.470421,-0.632061,7.497435,-1.240304,-4.369199,2.168125,-0.744582,9.041071,-7.881697,-7.810453,-6.214074,8.485782,-1.204656,4.869711,9.180467,-0.791587,-2.524931,-8.433064,-1.866134,3.199907,-5.883339,3.773568,-5.674862,2.659204,-4.730406,-5.502103,-3.276617,6.894972,-5.116064,-6.310770,9.340615,-9.991256,-7.135854,0.585756,-2.347324,6.208634,6.527673,0.765712,8.647651,3.580888,-7.131996,3.183242,5.829597,-1.862421,4.592718,2.637016,7.592559,-7.209991,-9.705867,5.200668,4.354172,-2.227358,0.513768,-3.113600,-2.497231,7.002488,5.939618,8.818577,5.848072,-6.388436,4.470162,3.043480,-3.254334,-4.164368,1.428169,5.511936,-8.787167,3.478741,2.533684,-2.402115,9.468030,2.002610,-0.832270,-8.901818,-9.719627,-5.163164,-5.284813,-1.774772,-3.383577,-7.540365,-2.162360,-9.856853,2.828180,2.262987,5.148669,-9.467408,7.622367,9.754291,4.881336,1.669499,1.033437,4.918206,4.417464,-7.324907,-8.180417,0.426473,-4.185034,4.908047,7.840779,-3.456732,-5.235598,-5.758195,-8.052367,-4.500025,9.735408,8.511713,0.163454,-6.588036,3.984855,-2.828611,3.108036,-7.576117,2.949248,7.995665,-3.702600,9.629965,7.392639,-1.837378,-7.854495,7.402819,-1.214685,-0.748294,9.280139,-5.352613,0.782757,-2.128189,-6.953357,-9.385242,-1.566797,3.724141,3.579638,7.652246,-7.945130,7.931982,-1.088183,-0.883170,1.999311,3.541138,2.289678,4.105538,-0.714671,-3.138924,1.838489,7.902396,-2.414294,-7.539542,1.976478,-8.308074,-3.143719,-4.472304,-1.091395,4.666041,7.186542,-5.049435,6.252030,8.224226,7.966295,-2.993902,-1.083090,-2.543741,-0.033288,5.464027,3.926129,2.193639,4.705922,-4.087644,-8.711664,5.316535,-5.656911,4.803202,-0.543344,-9.171664,-5.464519,-6.769166,-7.160335,2.828509,9.106829,-7.118900,7.907112,-4.044444,-7.830034,-8.787308,8.511518,-3.003222,-0.982966,6.344661,2.809850,-0.786138,-7.275346,-7.109191,-7.121651,-6.986176,-1.881130,-2.981502,-8.230353,-8.852638,8.506501,-4.063874,5.380731,5.913485,-3.172161,-9.682193,-2.695074,9.912674,9.347622,1.267040,6.323256,6.674680,-1.499392,2.071732,1.479609,2.996843,4.419394,9.926152,2.698430,-2.201114,8.683698,0.341554,2.913150,-3.369131,-9.279191,-7.619337,6.413669,-0.793710,3.938465,9.548245,5.263798,-6.176944,-5.156374,0.462392,-8.580916,3.188105,-7.651007,9.615462,4.616634,-1.550878,9.167994,6.535010,6.759689,-1.029754,-2.213997,5.766230,0.298886,-4.446615,7.729606,7.479644,5.943646,1.807852,8.835506,9.591779,-0.550953,-3.535666,6.507008,5.428781,2.272995,1.846607,5.453142,-6.177469,-4.992122,-8.544534,-6.281299,6.998990,-5.851654,-8.271462,9.558284,-1.825633,1.795841,2.240717,-7.931170,7.352709,0.760381,0.299209,1.886437,0.944763,-8.979142,4.721163,3.702263,-3.481054,9.910517,7.633128,4.622384,6.243515,-2.089670,4.214124,9.321897,9.956832,6.957671,1.903093,-2.006633,2.160731,-7.567587,4.440347,1.566691,5.363606,-6.905704,-0.068164,-0.246670,6.034146,-7.285427,6.467668,2.908876,-8.445788,-2.296994,-4.787180,-2.851925,9.859405,-0.955419,-5.608558,5.869918,1.447444,-9.163561,4.052166,9.320992,-3.766765,1.850900,1.125682,-8.831553,9.126055,6.863857,0.770078,6.765652,-4.931357,7.151410,-3.634654,-7.630336,2.552342,6.084726,0.438960,2.337308,-4.926749,3.188431,5.480482,-9.101797,-0.705970,-9.970028,7.659134,7.239469,-9.951664,1.199797,8.942729,-2.494535,-2.263404,0.179628,-4.779970,7.418848,0.586633,-2.138627,-5.570787,0.511198,-6.628587,-3.607854,-7.924645,2.455442,8.222447,2.247687,-7.898350,7.229143,0.158007,-6.085369,7.478939,-6.919653,-9.565514,8.144597,4.978074,-2.188456,5.773299,-9.370305,-2.380663,-7.796863,-8.938957,-1.830233,6.590609,1.386993,-9.647248,-1.897023,-6.850511,-7.202256,9.627419,1.643529,-9.366632,-0.979248,2.138038,9.645568,-7.682117,3.833035,2.269167,7.717047,6.054554,3.157061,-8.387903,6.394557,8.209391,1.181134,0.648606,4.147516,-2.511292,5.940774,-4.778635,3.969088,-0.513751,5.312038,-5.870703,-5.319293,-9.684011,9.344385,4.952289,8.872137,-1.367131,4.027901,2.138224,-5.984460,-2.982837,9.901970,-1.708121,4.697813,6.967066,9.948222,2.164404,6.748986,2.376133,-1.349852,1.652403,2.774628,2.685049,-6.902659,-4.273893,-0.803832,-5.788259,3.699851,4.923576,-0.240072,-0.748395,-0.182483,8.565154,5.737719,8.856266,-9.554608,9.892309,-3.006052,-3.323025,0.745580,7.690725,-8.683135,-5.726260,0.356177,-8.127506,-8.069262,5.632879,6.817520,0.753603,9.619674,-6.894284,9.532928,-1.985817,-9.407721,-6.605429,9.779097,-2.284272,-6.778781,3.835715,-0.713660,2.772162,-3.758815,8.475830,8.315396,-1.729647,1.343358,-3.520464,-9.814626,8.248419,-6.222344,9.023800,1.496122,5.047594,-3.405004,2.175728,-1.913225,1.150198,5.026748,-0.654612,9.328730,-2.222918,-7.341812,-1.947874,8.701213,9.116887,4.570609,4.795527,-8.511741,-7.359377,3.670863,1.844728,-6.415781,4.118466,-9.848057,5.608383,-9.473107,-8.600732,-0.899729,-4.182708,-5.200000,7.799073,-2.931856,8.293984,9.256477,0.064263,1.569611,6.206191,1.988639,-9.026984,-5.616539,-6.829688,7.566779,6.160630,5.474684,3.140306,-5.946026,9.183777,1.508257,2.939960,2.567239,4.159538,-9.027529,-1.939891,6.117430,2.242411,-3.778094,2.457672,-1.823622,-0.615937,-9.662220,-9.703522,-2.350178,4.339525,-7.580828,6.822931,9.933232,-1.772649,1.257838,3.256285,2.312260,-1.362325,-3.253905,2.164473,7.659265,-0.944001,5.482223,-1.042910,8.130027,0.853195,-5.410309,9.925041,-5.367122,8.304947,-7.467572,-3.578600,0.683682,-0.358744,-1.423826,3.430304,1.041735,6.492302,-8.487913,-1.436643,1.848803,6.475160,-5.140897,2.892641,-6.433177,-3.848488,-9.124998,8.155993,-1.439289,1.055217,8.623673,-8.724909,3.505705,-5.124617,8.919017,8.152611,-7.530605,-4.757277,9.322919,6.898019,0.918196,-8.518855,1.594485,7.465505,3.701689,-7.835263,3.449103,8.007290,2.606480,-7.106937,1.711101,0.468401,-7.643917,-6.518949,-1.334024,-8.435474,-6.010576,9.261792,-2.315465,6.533214,2.900073,-6.227832,-3.326422,1.882615,7.106853,-9.052299,9.208281,6.768891,3.493048,6.337061,0.540212,8.571108,8.474183,1.369018,-0.978994,7.208519,7.549157,-6.919751,-7.688160,6.695565,-7.377247,-5.913628,1.266526,5.518445,8.513329,-0.843528,-9.143624,-1.346704,-0.521645,4.970672,-1.144729,0.621002,7.129597,3.175159,2.705966,1.929044,-3.593362,-7.198208,3.946812,6.585122,-5.566635,-3.346604,3.539007,-9.395870,-5.472551,-8.098174,8.834606,-9.524043,-7.396425,-0.555432,-0.173168,8.464895,6.538099,8.446185,3.445881,0.031686,-0.287483,2.372134,2.191964,-8.443114,7.238913,-8.779721,-5.937877,7.644910,3.696761,-0.129392,-9.830279,-1.383902,3.147083,-4.200358,-5.233885,4.208455,5.105842,1.828275,-7.406938,1.781367,-9.912672,-9.386798,-8.640672,8.178021,8.378997,-5.017271,4.469586,4.488524,-3.353630,-8.356048,-0.191142,5.790469,-8.072658,-9.681351,-8.528915,-8.489840,4.760344,7.558772,3.491672,1.451059,9.203305,-4.134011,5.682740,4.438868,4.802174,-4.596939,3.346156,-2.650509,-7.575528,6.554997,-5.525924,-4.731915,-4.939511,6.515484,-2.988552,1.025183,-7.535790,3.367108,3.725945,7.933948,-6.533160,-4.346781,-8.039037,8.608665,1.493021,6.411939,-5.899794,-1.712892,-1.530766,-8.301191,-6.694062,-7.192993,1.414793,-6.235438,-9.364614,-9.140779,-2.671687,7.483225,5.412508,8.268902,0.648853,-8.515873,-4.281942,-8.320105,-3.865395,-4.951885,-6.085959,-2.776278,-1.357036,8.875542,-8.196783,1.604688,-3.320669,3.335090,5.224696,2.011835,-5.093231,-1.674844,-1.983415,9.407155,-1.023686,2.391051,-1.087834,-9.494074,8.029520,4.634047,5.152982,-2.936395,2.430890,6.513230,-0.434940,4.653665,-5.187335,-5.448983,3.155250,-0.180063,0.753014,-8.436977,9.641649,-2.763932,-7.550054,-4.315999,-2.580300,-7.507945,0.809540,-3.267754,-4.335290,-5.098553,7.951569,5.212247,-9.727896,-9.487919,6.284941,8.697848,-5.383623,4.113211,9.772085,-3.476942,-7.079198,-9.348724,8.512254,-0.335812,-4.580589,-5.378183,9.682337,-3.201336,0.187070,6.954513,-8.687223,0.161845,-7.914169,5.829300,8.481044,0.323564,-0.440737,9.941280,-4.131791,5.947087,-7.878376,-6.022762,4.067879,4.777527,-4.702673,-7.560229,5.149954,8.885052,-2.945556,6.691381,-1.340980,-8.741391,-7.004190,-9.450444,8.660463,-4.248002,-3.257931,1.061421,4.446339,-5.496941,7.092001,-0.192756,8.568294,-8.555415,7.079109,5.161033,-0.012051,-2.808450,8.726824,8.127873,5.195451,-1.490992,-1.344219,7.392662,-8.348674,6.908426,-4.610825,-2.867600,1.063203,-1.059850,-7.878906,6.272817,2.192145,-9.459702,-2.077511,1.058268,6.927241,7.704387,3.141827,0.272606,0.534639,6.589975,7.307918,1.954445,-3.704132,5.790410,6.859227,5.751778,-6.078401,9.243216,1.770210,-6.603043,-7.252020,-5.362843,0.248131,4.321088,5.781063,-2.478901,-1.848380,5.508771,9.056292,3.636089,1.298349,3.018587,-6.167816,3.993924,2.916772,-6.687880,0.754899,9.582641,5.298487,6.386798,2.160344,0.372088,5.613612,-8.890192,7.508390,2.989284,-9.004918,-5.106154,1.451726,-3.985646,-6.389860,-8.845043,-5.149382,-3.135664,-2.065420,-8.732286,5.039445,8.391393,-7.822711,-4.025845,-3.266194,4.404507,-4.157511,4.980195,8.835674,2.245950,9.522670,9.703881,9.135432,5.983192,-4.654052,-2.724196,5.544478,-8.401381,1.279815,5.191315,0.697409,2.865564,-8.952896,5.693059,-7.293300,8.473244,6.630056,7.950902,-4.301928,-1.785150,-4.743863,8.473979,2.869937,-9.892193,-0.884270,-1.382872,-8.562922,8.199206,-9.038920,-3.301140,4.981929,-0.942966,-2.019217,-1.922369,-0.085841,1.649857,0.954879,-4.849681,1.951023,4.978952,-7.265380,9.991484,4.806668,-6.433526,9.127192,7.152909,-4.008021,5.717462,0.736106,-6.796029,0.968139,6.091175,-1.565995,5.844438,-8.529218,7.545965,-6.974231,6.636456,6.629436,8.722027,-7.551059,-5.037949,8.124587,8.900980,2.024144,-0.945235,-4.531618,5.969616,-6.217685], dtype = "float32")#candidate|2482|(1430,)|const|float32
call_2481 = relay.TupleGetItem(func_1485_call(relay.reshape(const_2482.astype('float32'), [11, 10, 13]), relay.reshape(const_2482.astype('float32'), [11, 10, 13]), relay.reshape(call_2457.astype('float64'), []), ), 3)
call_2483 = relay.TupleGetItem(func_1490_call(relay.reshape(const_2482.astype('float32'), [11, 10, 13]), relay.reshape(const_2482.astype('float32'), [11, 10, 13]), relay.reshape(call_2457.astype('float64'), []), ), 3)
func_2250_call = mod.get_global_var('func_2250')
func_2254_call = mutated_mod.get_global_var('func_2254')
var_2487 = relay.var("var_2487", dtype = "float64", shape = (225,))#candidate|2487|(225,)|var|float64
const_2488 = relay.const([[-7,-4,-7,3,-6,1],[-3,-3,9,-3,8,-3],[5,9,-7,-4,-5,-5],[1,-8,10,-4,10,-9],[-7,-5,2,5,1,-3],[6,-1,10,-3,6,6],[5,-9,9,5,2,-4],[-5,-2,-10,5,6,9],[3,-5,-5,5,2,4],[-1,9,8,10,10,-10],[-8,-8,-2,-8,-9,6],[-3,6,4,-9,1,-10],[3,2,1,8,8,4],[3,7,-5,9,-5,-7],[7,3,6,-6,-5,-6],[2,-6,8,-10,-1,4],[-3,8,-8,-4,1,-4],[3,9,10,-4,7,-1],[-1,-7,-2,-10,4,1],[-1,8,6,-2,-3,7],[-4,4,-3,8,7,-6],[-6,4,-2,-3,-1,8],[4,6,-9,-9,-8,-6],[-7,4,-10,5,-7,-8]], dtype = "int8")#candidate|2488|(24, 6)|const|int8
const_2489 = relay.const([[-5,1,-7,1,-10,1,-3,-9,-10,8,5,9,-5,-10,-2,-7,-7,1,9,-8,-6,10,-4,4,5,9,3,2,6,3,6,-5,8,-9,-5,-5,5,-2,-8,3,10,3,-2,1,9,-6,-4,8,-4,-1,3,1,5,9,2,7,5,-5,-5,5,-10,8,9,-6,-4,-3,6,9,9,-5,1,3,3,3,4,-3,8,-8,1,1,2,-4,-1,-10,-10,-1,8,-9,4,1,9,-4,-7,-5,10,-4,1,3,-1,-2,7,-4,-1,-7,4,-5,-4,-9,5,1,-9,10,-5,1,5,10,9,8,-6,7,5,-2,-2,1,-4,-5,-9,2,5,3,9,1,-7,9,5,3,7,10,4,-9,6,-1,8,-1,7,2,-7,-5,5,8,-8,-2,4,-6,-3,-9,10,6,-3,10,2,5,6,-6,2,1,-4,-6,-4,1,9,8,9,-5,4,-2,7,8,5,-6,-9,-8,-1,5,7,5,-5,-5,-1,-7,-6,-1,-6,8,-4,-8,-3,-6,-3,10,-7,5,-7,6,-1,-3,4,1,3,-9,6,-10,6,-3,-8,-8,-5,-7,-5,2,-8,4,9,9,-7,-8,10,1,-3,4,5,-6,-6,5,-6,1,4,-5,1,4,4,2,-10,-9,-7,-6,-4,-5,5,-4,-8,6,-10,-4,7,-2,10,5,7,2,-7,-6,-1,3,-2,-7,-4,2,-4,-9,-4,1,3,3,10,-3,4,-9,-2,-2,-1,-3,-4,1,3,10,-10,-3],[-7,-4,2,5,9,-4,8,5,5,-4,-5,6,6,-7,-8,-9,5,-3,3,6,4,2,3,1,5,6,2,-10,-9,5,5,2,9,8,7,-5,3,-3,5,4,-1,4,4,4,-8,1,-4,5,10,7,-7,-10,-10,-7,-9,8,1,7,-3,9,3,7,4,-3,7,-2,2,5,5,8,-4,7,-8,1,7,-7,9,-8,-5,-7,-2,-9,3,6,-7,-3,3,-6,-4,4,-6,-2,4,10,-10,4,-8,-6,-6,-8,-1,3,10,-6,-4,-8,3,7,-9,-9,-4,10,-5,-10,1,3,10,5,-3,6,1,-10,-3,2,-4,10,-3,9,-7,8,-8,9,4,9,2,7,-1,-8,3,-6,-10,-4,-9,10,3,-5,8,10,7,-3,7,4,6,2,-3,-4,-7,7,-1,-3,6,5,9,10,-7,4,-3,-1,10,6,-4,-6,1,6,-2,-6,6,-2,9,2,5,9,4,-6,-3,-10,5,7,-1,7,1,-10,9,3,-6,-5,1,-10,3,-3,-8,-1,-9,10,3,-3,-3,3,-5,-9,1,3,-7,9,8,-4,5,1,6,-5,-9,5,-1,3,5,8,-5,8,-1,1,8,-6,-3,-8,8,-9,-2,-10,-3,9,-6,-1,-8,-4,7,8,1,10,-3,-4,-4,10,7,10,-5,-7,-8,4,9,-4,-3,2,10,-9,-2,6,6,-3,5,3,2,3,-8,5,4,6,6,3,-1,9,-7,-1,-10,-8,-6,7,2,-10]], dtype = "uint64")#candidate|2489|(2, 288)|const|uint64
call_2486 = relay.TupleGetItem(func_2250_call(relay.reshape(var_2487.astype('float64'), [225,]), relay.reshape(const_2488.astype('int8'), [144,]), relay.reshape(const_2489.astype('uint64'), [1, 576]), ), 0)
call_2490 = relay.TupleGetItem(func_2254_call(relay.reshape(var_2487.astype('float64'), [225,]), relay.reshape(const_2488.astype('int8'), [144,]), relay.reshape(const_2489.astype('uint64'), [1, 576]), ), 0)
var_2516 = relay.var("var_2516", dtype = "uint64", shape = (2, 288))#candidate|2516|(2, 288)|var|uint64
bop_2517 = relay.not_equal(const_2489.astype('bool'), relay.reshape(var_2516.astype('bool'), relay.shape_of(const_2489))) # shape=(2, 288)
uop_2531 = relay.exp(const_2488.astype('float64')) # shape=(24, 6)
bop_2534 = relay.less(const_2488.astype('bool'), call_2457.astype('bool')) # shape=(24, 6)
bop_2537 = relay.less(const_2488.astype('bool'), call_2458.astype('bool')) # shape=(24, 6)
bop_2540 = relay.equal(uop_2531.astype('bool'), call_2481.astype('bool')) # shape=(24, 6)
bop_2543 = relay.equal(uop_2531.astype('bool'), call_2483.astype('bool')) # shape=(24, 6)
func_993_call = mod.get_global_var('func_993')
func_998_call = mutated_mod.get_global_var('func_998')
const_2556 = relay.const([5.941506,0.281487,-5.131796,4.904686,2.693608,3.316494,-7.941712,2.260437,1.204751,5.771395,2.655666,-6.405096,-2.471817,5.533256,7.589356,4.728044,1.457214,2.735861,-6.440340,-1.997644,-5.388324,-6.929609,-1.217526,0.123546,-3.763330,9.759872,-3.969797,-4.781616,3.428427,-3.067623,7.750714,8.912584,9.460620,-0.694382,-2.677000,1.049125,-7.027277,9.374907,8.246738,7.599486], dtype = "float64")#candidate|2556|(40,)|const|float64
const_2557 = relay.const([-4,-6,-6,-3,-9,-9,-3,-6,6,-2,-1,-5,4,-10,1,-10,8,-8,-1,7,5,7,-4,5,-10,10,9,-10,-7,3,-10,4,1,10,-4,3,4,-9,5,-8,-2,-6,-4,-5,9,-8,1,6,-4,5,5,9,-10,-6,4,-3,2,9,-8,-6,4,-5,-8,8,-7,-1,-1,-2,1,-9,3,3,-1,-3,9,-5,7,-10,3,8,3,4,2,-8,-7,-7,-8,10,-5,8,6,8,7,10,-8,-2,10,4,6,-6,-8,5,-3,5,10,1,9,9,9,-6,8,7,-5,-1,-4,6,-7,-8,-8,10,6,-3,-3,1,-2,9,6,-7,9,-4,2,-5,-2,3,7,9,-5,2,-7,-7,1,-8,-2,-10,2,3,5,-4,2,9,9,7,-2,-1,2,-9,-4,10,9,-8,-3,4,-1,-4,-6,-4,-1,-10,-10,6,-8,6,2,-1,-3,2,10,-3,8,3,8,-10,10,6,10,-3,6,4,5,-9,-4,6], dtype = "uint16")#candidate|2557|(192,)|const|uint16
var_2558 = relay.var("var_2558", dtype = "float64", shape = (504,))#candidate|2558|(504,)|var|float64
call_2555 = relay.TupleGetItem(func_993_call(relay.reshape(const_2556.astype('float64'), [5, 2, 4]), relay.reshape(const_2557.astype('uint16'), [192,]), relay.reshape(var_2558.astype('float64'), [252, 2]), ), 4)
call_2559 = relay.TupleGetItem(func_998_call(relay.reshape(const_2556.astype('float64'), [5, 2, 4]), relay.reshape(const_2557.astype('uint16'), [192,]), relay.reshape(var_2558.astype('float64'), [252, 2]), ), 4)
output = relay.Tuple([const_2482,call_2486,var_2487,bop_2517,bop_2534,bop_2540,call_2555,const_2556,const_2557,var_2558,])
output2 = relay.Tuple([const_2482,call_2490,var_2487,bop_2517,bop_2537,bop_2543,call_2559,const_2556,const_2557,var_2558,])
func_2560 = relay.Function([var_2487,var_2516,var_2558,], output)
mod['func_2560'] = func_2560
mod = relay.transform.InferType()(mod)
var_2561 = relay.var("var_2561", dtype = "float64", shape = (225,))#candidate|2561|(225,)|var|float64
var_2562 = relay.var("var_2562", dtype = "uint64", shape = (2, 288))#candidate|2562|(2, 288)|var|uint64
var_2563 = relay.var("var_2563", dtype = "float64", shape = (504,))#candidate|2563|(504,)|var|float64
output = func_2560(var_2561,var_2562,var_2563,)
func_2564 = relay.Function([var_2561,var_2562,var_2563,], output)
mutated_mod['func_2564'] = func_2564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_2593 = relay.TupleGetItem(func_1999_call(), 1)
call_2594 = relay.TupleGetItem(func_2001_call(), 1)
func_2452_call = mod.get_global_var('func_2452')
func_2455_call = mutated_mod.get_global_var('func_2455')
var_2596 = relay.var("var_2596", dtype = "int8", shape = (180,))#candidate|2596|(180,)|var|int8
call_2595 = relay.TupleGetItem(func_2452_call(relay.reshape(var_2596.astype('int8'), [3, 4, 15])), 1)
call_2597 = relay.TupleGetItem(func_2455_call(relay.reshape(var_2596.astype('int8'), [3, 4, 15])), 1)
const_2604 = relay.const([[-0.534210,7.621943],[7.251406,9.247969],[-5.985600,-9.281474],[5.973307,-8.759519],[4.861006,2.430870],[-3.623375,6.224615],[-7.295663,4.111469],[8.044660,-8.641908],[-5.761228,7.735400],[-6.461558,7.257814],[1.295264,5.062595],[4.459466,9.782951],[6.826648,-1.253903],[-5.577443,-3.532701],[8.280731,4.380269],[-6.292692,-0.558372],[-7.271183,-2.357924],[-0.107325,5.821344],[-8.357295,8.929375],[-4.171286,-7.567250],[1.843503,8.352633],[9.137433,-3.974091],[-6.271991,7.331434],[-1.896481,5.013493],[-5.067975,7.353313],[5.744024,-7.989492],[7.497155,8.214667],[-6.446852,2.626763],[-7.800594,6.329046],[-0.680039,-2.525027],[-7.774954,1.442659],[4.369063,9.987368],[8.741055,8.133645],[8.524114,-7.871966],[8.417212,-7.233367],[3.095576,1.728525],[-7.944636,1.069554],[-0.978447,2.565198],[-5.774351,1.203374],[-9.889000,1.205627],[0.833278,-0.418199],[-0.399350,-7.726890],[8.703199,5.059625],[-6.852334,-0.482819],[-0.989084,-3.602751],[-7.517638,3.945600],[-2.150604,-5.886502],[3.843153,-6.281125],[-0.045577,8.007524],[4.383535,-6.423076],[-4.612464,-2.027475],[-0.114104,1.969636],[-3.334643,-9.526997],[-5.703884,2.711652],[-9.993120,1.495583],[7.369988,5.464385],[-3.933864,-3.977042],[-1.020434,-2.030387],[5.050098,0.354537],[-6.173513,-4.490175],[-4.063865,6.476345],[-2.616605,-6.871949],[-0.858899,-1.348922],[6.515962,-5.579580],[-3.318457,-4.304461],[5.809696,1.916864],[7.921564,5.932463],[5.010783,-8.929846],[-5.878918,-0.246147],[8.926584,8.966418],[-9.798826,5.038558],[7.984793,-3.177023],[9.095873,-9.824265],[6.412635,7.397701],[0.388057,-5.952010],[-3.560726,-2.955814],[-8.018636,2.588499],[1.144375,-1.667019],[-1.244910,-4.194318],[4.294815,3.434367],[6.367061,2.643918],[3.871158,4.120338],[6.810111,5.082027],[-6.286083,-5.717406],[7.649126,-1.833006],[7.899574,-7.627121],[3.338281,7.065843],[8.048476,1.345958],[1.885199,-6.268667],[2.320752,0.177042],[0.839698,-0.700046],[-8.506180,7.451849],[-7.550971,5.880826],[-4.197538,1.242864],[-4.558682,-1.243872],[0.736898,-5.960472],[-4.242354,2.735824],[-4.527830,8.372931],[2.460060,1.497274],[-1.284621,5.855748],[5.522076,-9.425812],[4.982994,9.780415],[9.330665,7.706895],[6.163707,8.631355],[-4.153138,2.627993],[9.659737,2.173017],[-5.858190,-9.444456],[2.285036,9.152409],[-0.881069,-3.786339],[7.365540,9.522695],[3.369920,6.774435],[-7.784592,-7.601985],[6.146833,5.754208],[-1.618340,6.989086],[-8.499869,-3.225142],[-7.327299,-5.358033],[9.969443,-7.190493],[-5.435449,8.796887],[-1.309484,-4.515158],[9.003103,-1.123764],[-8.992824,5.032485],[-8.867991,6.970955],[5.039759,-4.512041],[4.677012,-1.300550],[4.561652,1.151004],[5.814430,6.272375],[6.506815,-5.321530],[-8.311445,0.877665],[4.745526,-3.162433],[8.702951,-9.577576],[7.633825,-8.670404],[7.896387,2.239934],[2.347562,-6.144080],[-6.434146,1.457861],[1.069054,-8.189292],[-2.795997,-5.166037],[0.949514,0.151447],[-1.875284,7.569422],[-4.726616,-1.157479],[-2.262113,-4.344691],[-8.872154,-3.320699],[-9.911342,-4.620943],[-3.922743,5.953961],[-5.422858,-0.645413],[-9.627918,-8.639087],[4.283660,-7.633988],[-9.340199,4.608122],[8.821221,-2.210258],[-4.889538,-1.461786],[-2.026633,-3.693270],[6.470859,5.632061],[2.435190,5.661122],[9.701166,-1.040537],[6.686658,-0.369313],[9.201542,1.594653],[8.932032,-4.266259],[-6.275361,-3.115885],[0.042911,5.382007],[1.748161,-2.592902],[-8.069955,-2.738541],[7.140582,-3.761337],[-6.089834,-1.427057],[-6.071397,-4.449421],[-0.349593,6.125369],[6.928783,3.644058],[-9.175644,1.809061],[-4.617576,-9.558396],[-8.859895,-2.269773],[4.563481,-7.726881],[-3.800578,5.797087],[-1.406354,-8.157081],[-5.448715,-5.450583],[-1.359860,-2.901778],[-6.202733,-0.045114],[2.620611,-2.080283],[3.497890,-0.665447],[9.433309,-7.102062],[3.031207,7.791761],[0.170306,-2.742885],[2.573219,2.843668],[2.772040,6.863480],[-3.510247,-0.184750],[-3.796167,7.417792],[2.815262,2.361769],[-7.222323,-6.879333],[5.685894,-7.819555],[-0.377783,0.111129],[5.910679,0.467956],[-5.159536,-4.570575],[-9.590978,4.858950],[8.371241,-9.481487],[-9.949885,-7.150461],[-4.781173,-9.134635],[-4.709509,-5.667068],[-8.833500,-8.015326],[5.290045,-9.580194],[-0.411682,-3.799430],[6.168889,-1.399161],[-7.350776,2.767364],[-8.068797,0.914097],[2.241808,-6.394150],[-2.217794,-0.472676],[-7.260416,-8.746372],[-7.315738,-5.394631],[-0.305818,7.205405],[-2.150157,-9.404240],[-9.978528,0.141423],[6.163386,3.184821],[-4.301560,-3.465129],[8.698198,9.926935],[-1.946821,4.308378],[-8.480421,8.509918],[-4.980076,-8.742729],[-6.730390,0.643731],[9.459596,5.329912],[7.012668,1.935114],[5.747688,2.456882],[-5.033435,-8.846847],[-3.861994,2.698200],[8.222643,7.730920],[6.478437,-9.920974],[1.080001,-4.806014],[-0.298175,4.575932],[0.483733,-6.862046],[0.316426,3.188266],[-4.210723,-0.561399],[8.684473,-4.325961],[-9.057850,-4.341756],[2.444926,-7.293115],[-8.391809,3.037551],[-1.222598,-3.825480],[9.752272,-5.084702],[-6.340156,-4.769778],[-1.917070,-2.743137],[-9.124335,-1.338314],[-6.069815,-5.724383],[-3.252537,-9.248111],[-1.474770,4.731429],[7.944615,-5.377041],[-1.989116,1.983597],[-1.993639,-9.645557],[-8.942957,-9.766706],[8.461724,3.374679],[2.161945,5.587205],[-3.410362,-3.239933],[-3.622813,-2.979457],[2.726114,-6.513244],[6.708304,6.291414],[-7.329411,-0.055913],[-6.013272,6.228809],[-8.762689,0.502371],[3.005053,4.822807]], dtype = "float32")#candidate|2604|(252, 2)|const|float32
bop_2605 = relay.left_shift(call_2593.astype('int16'), relay.reshape(const_2604.astype('int16'), relay.shape_of(call_2593))) # shape=(252, 2)
bop_2608 = relay.left_shift(call_2594.astype('int16'), relay.reshape(const_2604.astype('int16'), relay.shape_of(call_2594))) # shape=(252, 2)
output = relay.Tuple([call_2595,var_2596,bop_2605,])
output2 = relay.Tuple([call_2597,var_2596,bop_2608,])
func_2613 = relay.Function([var_2596,], output)
mod['func_2613'] = func_2613
mod = relay.transform.InferType()(mod)
mutated_mod['func_2613'] = func_2613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2614 = relay.var("var_2614", dtype = "int8", shape = (180,))#candidate|2614|(180,)|var|int8
func_2613_call = mutated_mod.get_global_var('func_2613')
call_2615 = func_2613_call(var_2614)
output = call_2615
func_2616 = relay.Function([var_2614], output)
mutated_mod['func_2616'] = func_2616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_2631 = relay.TupleGetItem(func_1999_call(), 0)
call_2632 = relay.TupleGetItem(func_2001_call(), 0)
var_2648 = relay.var("var_2648", dtype = "float32", shape = (252, 2))#candidate|2648|(252, 2)|var|float32
bop_2649 = relay.less_equal(call_2631.astype('bool'), relay.reshape(var_2648.astype('bool'), relay.shape_of(call_2631))) # shape=(252, 2)
bop_2652 = relay.less_equal(call_2632.astype('bool'), relay.reshape(var_2648.astype('bool'), relay.shape_of(call_2632))) # shape=(252, 2)
var_2670 = relay.var("var_2670", dtype = "float32", shape = (252, 2))#candidate|2670|(252, 2)|var|float32
bop_2671 = relay.maximum(call_2631.astype('float32'), relay.reshape(var_2670.astype('float32'), relay.shape_of(call_2631))) # shape=(252, 2)
bop_2674 = relay.maximum(call_2632.astype('float32'), relay.reshape(var_2670.astype('float32'), relay.shape_of(call_2632))) # shape=(252, 2)
output = relay.Tuple([bop_2649,bop_2671,])
output2 = relay.Tuple([bop_2652,bop_2674,])
func_2675 = relay.Function([var_2648,var_2670,], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
mutated_mod['func_2675'] = func_2675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2675_call = mutated_mod.get_global_var('func_2675')
var_2677 = relay.var("var_2677", dtype = "float32", shape = (252, 2))#candidate|2677|(252, 2)|var|float32
var_2678 = relay.var("var_2678", dtype = "float32", shape = (252, 2))#candidate|2678|(252, 2)|var|float32
call_2676 = func_2675_call(var_2677,var_2678,)
output = call_2676
func_2679 = relay.Function([var_2677,var_2678,], output)
mutated_mod['func_2679'] = func_2679
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2681 = relay.const([[[6,-3,1,-3,-4],[-5,1,-9,4,8],[2,-6,1,-10,-5]],[[-2,-6,-7,-2,1],[5,-3,5,1,-8],[3,9,10,3,6]],[[4,9,4,9,4],[4,-8,-10,-6,2],[9,3,5,7,-5]],[[5,2,9,10,2],[8,5,-2,8,-5],[-4,-6,-4,10,8]],[[-4,-5,5,-2,2],[8,1,-7,-10,1],[-7,-2,9,3,-7]],[[7,2,-10,5,-3],[-8,-8,-6,-10,-2],[-4,5,2,-9,-5]],[[6,10,3,-8,-3],[-5,1,10,2,6],[2,-5,-5,2,1]],[[-2,1,-6,1,-3],[4,5,-3,5,-4],[1,2,-4,-2,10]]], dtype = "int32")#candidate|2681|(8, 3, 5)|const|int32
var_2682 = relay.var("var_2682", dtype = "int32", shape = (8, 3, 5))#candidate|2682|(8, 3, 5)|var|int32
bop_2683 = relay.bitwise_xor(const_2681.astype('int32'), relay.reshape(var_2682.astype('int32'), relay.shape_of(const_2681))) # shape=(8, 3, 5)
uop_2702 = relay.atan(var_2682.astype('float32')) # shape=(8, 3, 5)
bop_2709 = relay.less(uop_2702.astype('bool'), relay.reshape(bop_2683.astype('bool'), relay.shape_of(uop_2702))) # shape=(8, 3, 5)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_2714 = relay.TupleGetItem(func_1643_call(), 1)
call_2715 = relay.TupleGetItem(func_1644_call(), 1)
func_2325_call = mod.get_global_var('func_2325')
func_2327_call = mutated_mod.get_global_var('func_2327')
call_2719 = func_2325_call()
call_2720 = func_2325_call()
func_1425_call = mod.get_global_var('func_1425')
func_1430_call = mutated_mod.get_global_var('func_1430')
var_2728 = relay.var("var_2728", dtype = "float64", shape = (1, 936))#candidate|2728|(1, 936)|var|float64
var_2729 = relay.var("var_2729", dtype = "float64", shape = (504,))#candidate|2729|(504,)|var|float64
call_2727 = relay.TupleGetItem(func_1425_call(relay.reshape(var_2728.astype('float64'), [13, 6, 12]), relay.reshape(var_2728.astype('float64'), [13, 6, 12]), relay.reshape(var_2729.astype('float64'), [6, 84]), ), 0)
call_2730 = relay.TupleGetItem(func_1430_call(relay.reshape(var_2728.astype('float64'), [13, 6, 12]), relay.reshape(var_2728.astype('float64'), [13, 6, 12]), relay.reshape(var_2729.astype('float64'), [6, 84]), ), 0)
func_2560_call = mod.get_global_var('func_2560')
func_2564_call = mutated_mod.get_global_var('func_2564')
var_2732 = relay.var("var_2732", dtype = "float64", shape = (225,))#candidate|2732|(225,)|var|float64
const_2733 = relay.const([-2,-5,-8,1,10,-6,10,-9,7,-3,-10,-10,4,4,-6,9,-8,3,7,-5,-7,8,-7,4,-4,2,4,9,-9,-5,10,5,10,-3,1,4,9,9,-10,9,-2,9,3,3,1,-9,5,10,-9,4,10,-9,-1,-2,-1,-6,2,-8,-3,6,-10,6,6,-1,-8,-6,3,5,2,-7,-10,6,8,6,-7,-5,5,4,-7,8,-2,-4,-10,10,-8,-6,8,10,-8,-7,-7,3,6,-7,2,8,2,8,-1,-5,-3,-7,7,-9,4,-1,8,6,9,9,-9,-5,9,2,-2,-2,1,8,-9,-4,-10,-5,-7,4,-2,-9,-10,-1,-8,10,1,-4,3,10,-6,-4,-7,7,-10,2,-2,5,3,-10,9,8,-3,-2,-4,-8,-5,9,1,-8,6,5,10,9,-5,6,-2,4,9,-2,8,-3,4,7,-5,6,-6,9,-10,1,9,9,-4,-7,-1,-3,-2,-2,-8,10,5,-5,1,-8,4,8,7,-7,2,-3,4,10,2,-2,2,-6,-2,-9,-6,-3,8,-8,-9,-7,8,2,6,9,5,-10,5,-7,8,-7,-4,-7,-2,-7,-9,-1,-4,10,-6,-8,2,1,4,2,3,6,-2,8,-9,6,-1,6,2,5,-5,-3,3,-4,-10,-8,-8,8,9,-5,-5,8,-7,-3,-10,-1,3,2,5,-2,-2,10,7,9,6,-6,-2,10,9,-2,-4,-4,4,5,-1,8,9,3,-6,10,4,-6,2,-10,9,-10,5,-4,-9,10,-7,-3,-6,10,7,-3,-8,9,-5,1,-1,9,-2,-4,-1,10,5,-2,-10,-3,2,9,-5,2,-7,3,1,-1,4,-5,-2,-1,-8,7,5,6,6,-9,-4,-10,-3,9,7,-8,-7,-4,-8,7,-7,-6,4,2,-5,-2,2,-10,-7,1,-10,4,4,6,4,7,-8,6,3,4,6,9,-10,-5,9,-2,6,4,-6,9,-6,3,-1,7,-6,-4,-9,-2,-3,5,-4,-8,-2,8,5,-10,-6,-4,-2,1,-6,-2,-9,1,3,1,-2,6,1,2,3,-6,4,4,-3,-6,1,3,2,9,9,-3,-8,6,4,5,1,4,1,5,-6,-2,-9,-4,-8,-8,-4,-1,9,4,-7,-1,-10,6,-7,-7,2,-10,6,-3,9,-3,-4,7,-2,-9,2,7,-6,-5,-4,6,4,8,-1,6,4,-5,4,4,-5,-4,2,8,4,3,-8,3,-4,-5,4,7,9,-8,5,8,2,4,-3,4,-8,5,-5,-1,1,-5,5,3,-5,-8,3,-10,-10,-1,-9,-10,9,4,-4,-4,-10,2,-3,1,5,8,-5,-3,5,8,8,-10,3,-2,10,4,6,-5,-10,-9,-6,-5,7,6,3,-5,-9,-7,-2,1,-6,2,-8,3,5,-5,10,2,9,9,-1,2,-3,4,9,-7,-8,-8,-8,-6,-2,-4,2,-10,-3,2,5,-3,2,-4,-3,-7,2,9,8,-4,8,-3,-3,1,1,-7,-9,5,-10,-4], dtype = "uint64")#candidate|2733|(576,)|const|uint64
call_2731 = relay.TupleGetItem(func_2560_call(relay.reshape(var_2732.astype('float64'), [225,]), relay.reshape(const_2733.astype('uint64'), [2, 288]), relay.reshape(var_2729.astype('float64'), [504,]), ), 0)
call_2734 = relay.TupleGetItem(func_2564_call(relay.reshape(var_2732.astype('float64'), [225,]), relay.reshape(const_2733.astype('uint64'), [2, 288]), relay.reshape(var_2729.astype('float64'), [504,]), ), 0)
output = relay.Tuple([bop_2709,call_2714,call_2719,call_2727,var_2728,var_2729,call_2731,var_2732,const_2733,])
output2 = relay.Tuple([bop_2709,call_2715,call_2720,call_2730,var_2728,var_2729,call_2734,var_2732,const_2733,])
func_2739 = relay.Function([var_2682,var_2728,var_2729,var_2732,], output)
mod['func_2739'] = func_2739
mod = relay.transform.InferType()(mod)
var_2740 = relay.var("var_2740", dtype = "int32", shape = (8, 3, 5))#candidate|2740|(8, 3, 5)|var|int32
var_2741 = relay.var("var_2741", dtype = "float64", shape = (1, 936))#candidate|2741|(1, 936)|var|float64
var_2742 = relay.var("var_2742", dtype = "float64", shape = (504,))#candidate|2742|(504,)|var|float64
var_2743 = relay.var("var_2743", dtype = "float64", shape = (225,))#candidate|2743|(225,)|var|float64
output = func_2739(var_2740,var_2741,var_2742,var_2743,)
func_2744 = relay.Function([var_2740,var_2741,var_2742,var_2743,], output)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2804 = relay.var("var_2804", dtype = "uint64", shape = ())#candidate|2804|()|var|uint64
var_2805 = relay.var("var_2805", dtype = "uint64", shape = (9, 13, 12))#candidate|2805|(9, 13, 12)|var|uint64
bop_2806 = relay.logical_xor(var_2804.astype('uint64'), var_2805.astype('uint64')) # shape=(9, 13, 12)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_2820 = relay.TupleGetItem(func_1643_call(), 1)
call_2821 = relay.TupleGetItem(func_1644_call(), 1)
output = relay.Tuple([bop_2806,call_2820,])
output2 = relay.Tuple([bop_2806,call_2821,])
func_2823 = relay.Function([var_2804,var_2805,], output)
mod['func_2823'] = func_2823
mod = relay.transform.InferType()(mod)
var_2824 = relay.var("var_2824", dtype = "uint64", shape = ())#candidate|2824|()|var|uint64
var_2825 = relay.var("var_2825", dtype = "uint64", shape = (9, 13, 12))#candidate|2825|(9, 13, 12)|var|uint64
output = func_2823(var_2824,var_2825,)
func_2826 = relay.Function([var_2824,var_2825,], output)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2851 = relay.var("var_2851", dtype = "float32", shape = (5, 16, 12))#candidate|2851|(5, 16, 12)|var|float32
uop_2852 = relay.sqrt(var_2851.astype('float32')) # shape=(5, 16, 12)
uop_2857 = relay.acos(uop_2852.astype('float32')) # shape=(5, 16, 12)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_2859 = relay.TupleGetItem(func_1669_call(), 1)
call_2860 = relay.TupleGetItem(func_1670_call(), 1)
const_2864 = relay.const([[[0.568397,5.277619,0.451654,3.692730,5.442454,6.982274,4.593646,0.905014,-3.602019,3.910148,-9.632375,-4.210917],[1.324496,-4.141545,-7.278190,-1.826281,2.315206,7.295304,-7.516836,2.100924,-2.515910,-6.932252,0.370562,1.766054],[-9.087152,-0.597523,2.967891,-8.446886,7.983188,0.844662,7.288821,-0.296571,0.996945,0.246137,-8.070258,0.241384],[2.024242,7.802340,8.514965,-1.163365,8.190090,-2.004748,3.519535,4.205357,1.024787,-6.762954,6.810946,7.958927],[-9.091960,-5.195039,4.184791,-3.015823,3.547730,4.553525,-3.089166,1.511021,0.221236,-5.231250,-6.770901,1.103172],[-0.394776,-5.026414,-8.214946,-1.045372,-0.754585,-8.750245,7.035044,-7.098101,-0.193879,2.692027,3.221084,-0.662487],[4.758616,6.427642,4.957839,3.212142,-0.691466,5.331381,-9.074527,-7.223418,-9.674130,-2.271547,8.705071,5.794087],[7.423079,-8.824517,4.645214,7.547346,4.541844,-8.648844,2.017023,7.750321,-6.281815,4.116636,-8.783418,7.835982],[-4.548383,-5.235049,6.562771,1.788182,8.910211,9.638434,-3.676721,8.854963,-6.815254,-3.915310,9.676822,3.154963],[-2.998410,-3.864751,-1.146348,-8.408468,-6.648842,-6.674971,-2.185848,-1.138017,4.773625,-1.608755,-7.295137,-8.798851],[4.124250,-1.514365,-7.549414,-7.881920,-8.757681,9.433263,1.788550,2.156971,8.700256,3.772077,2.856621,7.897862],[2.617549,9.202724,0.115067,-1.662562,-7.486304,6.493793,0.912852,-7.295441,3.738315,-2.874106,1.756166,-0.357067],[-1.730607,-2.381301,0.248772,-5.584200,2.371823,-7.250205,3.015400,5.701625,2.135386,-6.229391,8.582445,2.349331],[9.349677,2.247546,1.130868,0.944696,5.956159,-0.067049,3.103306,6.472750,-2.516518,8.692505,8.974960,9.995510],[1.162641,4.595923,-8.754045,5.807641,-1.051628,-9.289511,-5.939549,6.375662,1.937724,-4.637745,2.609398,3.117507],[2.527965,2.941572,-9.934010,-7.503893,9.203688,-9.358764,-3.353376,3.536450,-5.909529,-9.383329,0.881658,-9.550863]],[[4.276480,4.715017,-2.488573,-2.810922,5.920141,-9.139115,5.531995,5.106744,-3.106449,-5.018300,-4.397510,-1.894459],[-5.134931,6.692390,-1.582504,-3.812218,1.076958,-0.867391,9.278486,9.080773,5.769205,-5.085337,-7.857160,1.221588],[6.748362,3.009078,0.167303,-3.536244,9.972717,2.236971,2.111363,6.131856,2.471272,-1.975390,9.623746,9.506157],[-5.448389,2.133667,3.696382,6.300992,-4.639107,-7.327498,-5.147438,4.078291,8.309537,-6.331255,0.217962,7.873719],[6.732312,9.875308,9.325951,5.916157,-4.656786,3.407646,8.451020,-1.921242,0.942611,1.674364,9.429952,1.221800],[3.254564,5.386333,-7.657570,6.762806,-4.923555,-2.729722,0.616429,8.651443,-9.917049,-3.310343,-2.040147,5.405629],[9.977128,1.998168,-6.257632,5.785865,-6.410590,-4.948720,3.579370,9.643821,-9.696757,-0.674505,3.081369,2.010911],[-2.451051,-9.926716,-4.520748,-9.761003,-9.080990,-7.557196,8.917477,0.402016,-2.629874,-8.476321,8.529795,4.693019],[1.856074,-7.354718,-5.093255,-9.412417,5.677372,9.566219,-4.928830,1.708017,2.586992,2.388850,-5.383161,9.125488],[-5.975310,-5.506872,4.020801,7.000588,3.940395,3.953281,9.237997,-4.809207,-6.913818,-4.668590,-0.402607,-8.970501],[1.275362,-3.017283,-3.026599,-5.006191,4.628430,-8.515979,4.771784,5.939752,1.727277,-1.108493,-5.412527,6.080648],[-4.280978,9.862201,-8.100998,-3.421447,-7.248662,5.740257,-0.114863,7.182014,-2.678751,-5.487284,-8.649675,1.399789],[6.210247,-4.268839,-1.027758,-9.389218,-6.928797,6.489132,4.299786,-4.548498,-7.143730,-8.439883,-8.122216,-5.554263],[-5.642163,-0.442810,-0.130351,-7.762949,1.693696,3.064910,0.864610,-8.936407,-0.791671,-5.624267,1.619341,9.447776],[-9.470764,3.316124,8.083492,2.724002,-6.744148,-9.964063,0.533783,-5.637133,-8.830787,1.170697,-6.583953,6.249788],[9.592199,-9.998582,-5.047123,8.082246,-6.977117,1.232460,-3.507200,6.034818,-6.965150,-3.270374,-6.225380,-2.078903]],[[-5.422198,-5.362241,6.155584,3.479554,8.997625,-5.814649,4.328715,-0.712835,-2.912923,-9.545902,3.860029,3.043383],[4.135902,7.556279,4.207719,-6.030387,3.870869,-3.908988,-6.751760,-2.709163,1.780263,-1.549218,-8.409459,-6.363907],[-4.121282,7.085106,-0.470443,-5.362392,-2.109959,-2.226738,4.351321,-9.021344,5.172593,-2.443203,-4.955066,-5.598807],[6.306931,3.405618,6.899666,-6.234772,-7.364050,4.004523,-7.956294,-6.837032,-6.887615,-1.105016,-1.656853,-6.970966],[8.841729,0.982174,2.248095,-6.582974,-0.368122,-7.423628,9.176743,-9.613673,4.436480,8.402806,0.847668,-2.441634],[-9.694208,9.434338,6.327711,-8.911810,-5.753527,5.235804,8.929729,-4.178800,0.140410,-5.509433,5.994165,-2.401406],[-7.918136,4.999463,9.147056,4.289960,-3.357825,-3.595534,4.592620,5.908800,3.837861,7.881553,-2.820430,-2.277811],[3.640026,-3.553402,6.523616,4.891394,-7.366808,2.698215,-0.424573,2.566873,-6.160893,6.770308,3.338667,7.310469],[1.093181,0.109189,4.274795,5.759757,-1.868136,0.663339,-1.702958,-6.408328,2.938070,-9.132237,-0.068791,8.324232],[-0.468117,-8.995001,0.578779,-2.209839,6.510707,-7.309364,0.998479,5.671336,5.819974,-8.911446,8.536043,4.831008],[-8.226297,-8.733092,8.606738,0.712233,-2.659973,5.036983,-0.488310,-7.441996,-9.236353,-1.921501,-7.620112,5.192230],[-1.211712,5.263637,-2.402984,4.997011,7.287710,-1.754360,8.224215,-6.320263,6.327674,1.316239,1.279663,9.077231],[-6.386561,1.273876,9.015323,-7.685467,-2.983956,6.552166,-4.565468,-7.205956,3.519552,1.105892,-3.669275,-5.003675],[5.278287,9.725105,-0.181882,-7.737249,-8.559692,3.294508,1.617755,-1.246108,-9.205175,-8.772507,-5.580737,-3.601407],[0.196566,-3.821624,1.313266,-1.013320,-4.592331,1.061246,-8.798610,8.896442,0.003095,4.804999,-2.364886,2.063226],[9.933364,-4.124430,-8.897190,0.063470,-9.499976,2.426214,5.924714,-4.966673,-9.659796,-7.994602,-5.882820,3.972077]],[[-4.928238,-0.218164,-5.340972,5.862905,8.300263,3.253770,-7.329892,-0.314325,-1.432902,-7.889321,6.692992,6.180610],[-4.447625,-7.550865,0.184523,7.753931,-1.450777,7.326844,0.396812,9.254054,-5.031429,-3.535640,8.926238,2.588970],[-1.252787,9.175614,-3.860989,9.129407,-5.231107,7.212913,-7.505336,-9.048041,-6.019045,4.762087,-2.198982,8.119976],[-5.432223,-7.422613,-9.058319,8.967128,5.353414,-8.536834,-7.863032,2.506282,2.732428,-3.288382,5.272322,3.183332],[-5.308338,6.449894,4.946776,2.981179,-3.939212,2.155858,9.404669,1.777441,-6.890135,5.944612,-5.034618,7.207814],[8.487170,4.999819,-0.995168,2.611826,0.756878,-2.266687,7.702161,-3.280087,2.560442,-1.864151,5.572547,0.365328],[3.423019,-5.980354,0.261098,4.993095,7.787816,5.491753,6.357364,4.561154,6.519188,6.152004,8.374570,-4.486061],[-9.552177,-7.744342,8.531437,5.731149,-8.439923,-9.553937,9.796637,-6.384519,-2.739161,5.820108,-0.156954,-3.634290],[-8.362747,-9.030112,-3.502016,-0.757419,8.127403,-1.773631,-7.806248,0.592690,5.639665,9.990198,-1.875850,1.153748],[8.619797,-2.865672,4.120002,-1.142432,5.013413,-3.320417,6.310067,-1.374423,3.724566,5.442010,-1.720802,-0.175458],[-0.519707,-9.736016,3.795296,3.613999,-4.490109,3.158967,9.007065,2.344184,-4.788726,-7.216745,-9.934000,4.179066],[6.684196,-8.735633,1.592865,9.288628,-6.491620,-5.891145,2.356087,-5.920245,-2.811077,-3.846049,9.068982,-8.550424],[5.347740,-7.618657,1.985350,1.375304,-9.515271,-8.215394,-6.222661,-1.813864,7.775024,-9.071774,-6.115114,5.395827],[-5.408843,-8.480422,7.421534,-4.106730,1.127527,7.598705,-1.284200,2.029411,-9.751201,-2.834522,7.435210,9.450398],[-8.851255,-5.841089,-7.373565,9.687123,7.619260,4.831761,-3.385586,0.214013,-8.695576,-4.193481,6.761202,6.648075],[4.330260,-0.019606,-7.920611,4.483902,3.104117,-4.933603,3.184083,1.729610,7.644191,-8.649620,-6.258432,-2.207212]],[[-8.324775,3.363142,-4.621320,0.339505,-5.368246,5.362248,4.910409,9.677842,-4.972653,-1.565658,9.093222,-6.319507],[-6.806996,-1.745171,-1.930716,2.079835,3.961765,-6.610974,-2.322870,0.251657,6.080043,0.053680,-7.900913,3.052738],[-7.515923,-4.403419,6.456583,7.153081,8.638705,-5.085360,-4.377029,-1.513802,-0.923263,0.358235,-9.968518,-8.979013],[0.311588,-9.588774,-0.704326,-2.344078,-7.216327,5.999102,2.228798,0.835860,-8.331823,-1.103281,-5.569773,7.416709],[3.467371,4.981051,3.488123,0.624894,7.801551,-5.505112,-8.423197,6.110415,-2.856437,-9.786362,5.968460,-2.389428],[-9.355360,-0.396160,-2.328230,1.441940,-9.412165,6.873492,-2.617549,0.874888,0.537050,-0.432727,-8.252698,-4.424913],[-8.402285,9.272171,-4.921113,5.667432,-8.398525,7.256602,9.562652,2.580958,4.385705,-5.473529,1.476875,-2.834392],[5.824061,-4.237866,-1.816087,-2.691193,-5.375085,-8.410701,-7.266465,7.767793,2.468259,5.704622,7.078011,-5.749800],[6.690216,3.698591,-5.434787,2.774282,-9.997830,-8.876699,-0.741101,5.383957,-3.068641,-3.429971,6.067999,0.530084],[-6.467528,-6.214556,9.509806,3.921480,2.287135,-2.871023,-0.696180,8.586455,0.515750,0.522888,7.988798,-5.683602],[-3.734383,-8.618407,-9.036088,-8.017532,-6.477061,2.623187,9.925978,-4.833131,1.898033,3.032423,6.513594,-3.788877],[-5.158944,-7.680736,-6.698094,8.605825,3.343539,-9.239126,4.110866,6.769162,8.683196,-3.878287,0.665128,0.318308],[5.837223,-6.287353,-2.977676,5.708029,-8.351791,-5.180359,4.611052,3.722161,9.509178,-1.025702,-4.381352,-3.593738],[-0.331876,-6.324717,9.363882,-2.868001,-9.253387,8.194564,1.219176,4.048401,4.514416,-2.135824,8.294397,1.847404],[-3.052051,-3.126207,1.158806,-2.306479,2.913204,1.430818,3.023999,2.932000,-5.027097,-2.755071,1.356897,5.986152],[5.830562,9.295251,8.395059,6.603647,0.721728,-0.761331,-8.561883,-9.778158,-4.399465,-4.190503,-7.750408,5.988220]]], dtype = "float32")#candidate|2864|(5, 16, 12)|const|float32
bop_2865 = relay.add(uop_2852.astype('int16'), relay.reshape(const_2864.astype('int16'), relay.shape_of(uop_2852))) # shape=(5, 16, 12)
output = relay.Tuple([uop_2857,call_2859,bop_2865,])
output2 = relay.Tuple([uop_2857,call_2860,bop_2865,])
func_2869 = relay.Function([var_2851,], output)
mod['func_2869'] = func_2869
mod = relay.transform.InferType()(mod)
var_2870 = relay.var("var_2870", dtype = "float32", shape = (5, 16, 12))#candidate|2870|(5, 16, 12)|var|float32
output = func_2869(var_2870)
func_2871 = relay.Function([var_2870], output)
mutated_mod['func_2871'] = func_2871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_2882 = relay.TupleGetItem(func_1669_call(), 2)
call_2883 = relay.TupleGetItem(func_1670_call(), 2)
func_2675_call = mod.get_global_var('func_2675')
func_2679_call = mutated_mod.get_global_var('func_2679')
call_2892 = relay.TupleGetItem(func_2675_call(relay.reshape(call_2882.astype('float32'), [252, 2]), relay.reshape(call_2882.astype('float32'), [252, 2]), ), 0)
call_2893 = relay.TupleGetItem(func_2679_call(relay.reshape(call_2882.astype('float32'), [252, 2]), relay.reshape(call_2882.astype('float32'), [252, 2]), ), 0)
func_2452_call = mod.get_global_var('func_2452')
func_2455_call = mutated_mod.get_global_var('func_2455')
var_2901 = relay.var("var_2901", dtype = "int8", shape = (90, 2))#candidate|2901|(90, 2)|var|int8
call_2900 = relay.TupleGetItem(func_2452_call(relay.reshape(var_2901.astype('int8'), [3, 4, 15])), 0)
call_2902 = relay.TupleGetItem(func_2455_call(relay.reshape(var_2901.astype('int8'), [3, 4, 15])), 0)
output = relay.Tuple([call_2882,call_2892,call_2900,var_2901,])
output2 = relay.Tuple([call_2883,call_2893,call_2902,var_2901,])
func_2908 = relay.Function([var_2901,], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2909 = relay.var("var_2909", dtype = "int8", shape = (90, 2))#candidate|2909|(90, 2)|var|int8
func_2908_call = mutated_mod.get_global_var('func_2908')
call_2910 = func_2908_call(var_2909)
output = call_2910
func_2911 = relay.Function([var_2909], output)
mutated_mod['func_2911'] = func_2911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1598_call = mod.get_global_var('func_1598')
func_1600_call = mutated_mod.get_global_var('func_1600')
call_2913 = func_1598_call()
call_2914 = func_1598_call()
func_2613_call = mod.get_global_var('func_2613')
func_2616_call = mutated_mod.get_global_var('func_2616')
const_2922 = relay.const([[-6],[-6],[2],[9],[-9],[-9],[-4],[-2],[-8],[10],[5],[2],[-2],[-10],[8],[7],[-2],[4],[10],[3],[-2],[8],[1],[-8],[6],[-9],[-8],[3],[-7],[-3],[4],[1],[-7],[-8],[-10],[-8],[-5],[-6],[-6],[-7],[2],[3],[7],[2],[-8],[9],[6],[-6],[6],[-10],[6],[9],[-4],[-8],[-1],[5],[3],[5],[-2],[5],[3],[2],[5],[2],[3],[-8],[-10],[2],[3],[-6],[-9],[10],[-7],[-3],[2],[-10],[4],[-4],[-9],[2],[10],[5],[-6],[6],[1],[4],[3],[1],[8],[10],[3],[-7],[-2],[-8],[7],[7],[10],[9],[-10],[-5],[-7],[8],[-2],[-9],[-4],[2],[-8],[4],[10],[-3],[4],[6],[3],[-9],[-10],[-2],[3],[4],[-3],[-6],[3],[4],[-7],[-1],[2],[5],[5],[9],[-7],[-1],[-3],[4],[4],[-1],[-3],[4],[7],[7],[-8],[-10],[-4],[6],[8],[-7],[6],[-4],[10],[-4],[5],[3],[-2],[-6],[-5],[-2],[1],[3],[9],[-7],[9],[-2],[4],[1],[-3],[10],[10],[-10],[2],[-3],[6],[2],[-9],[5],[8],[-7],[-7],[-9],[6],[-5],[-7],[-8]], dtype = "int8")#candidate|2922|(180, 1)|const|int8
call_2921 = relay.TupleGetItem(func_2613_call(relay.reshape(const_2922.astype('int8'), [180,])), 0)
call_2923 = relay.TupleGetItem(func_2616_call(relay.reshape(const_2922.astype('int8'), [180,])), 0)
func_2613_call = mod.get_global_var('func_2613')
func_2616_call = mutated_mod.get_global_var('func_2616')
call_2928 = relay.TupleGetItem(func_2613_call(relay.reshape(call_2921.astype('int8'), [180,])), 2)
call_2929 = relay.TupleGetItem(func_2616_call(relay.reshape(call_2921.astype('int8'), [180,])), 2)
output = relay.Tuple([call_2913,call_2921,const_2922,call_2928,])
output2 = relay.Tuple([call_2914,call_2923,const_2922,call_2929,])
func_2945 = relay.Function([], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
mutated_mod['func_2945'] = func_2945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mutated_mod.get_global_var('func_2945')
call_2946 = func_2945_call()
output = call_2946
func_2947 = relay.Function([], output)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_2959 = relay.TupleGetItem(func_1643_call(), 1)
call_2960 = relay.TupleGetItem(func_1644_call(), 1)
var_2962 = relay.var("var_2962", dtype = "int8", shape = (3, 4, 7))#candidate|2962|(3, 4, 7)|var|int8
bop_2963 = relay.logical_and(call_2959.astype('bool'), var_2962.astype('bool')) # shape=(3, 4, 7)
bop_2966 = relay.logical_and(call_2960.astype('bool'), var_2962.astype('bool')) # shape=(3, 4, 7)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2967 = func_1869_call()
call_2968 = func_1869_call()
func_993_call = mod.get_global_var('func_993')
func_998_call = mutated_mod.get_global_var('func_998')
const_2970 = relay.const([0.260171,8.406055,-3.005489,-1.845563,7.302612,-7.458490,8.619691,1.706226,2.702288,-7.640804,6.176465,1.085671,0.991415,-9.659562,9.845919,1.669327,-2.718549,-3.956077,5.991934,-3.187138,-5.374045,6.153690,-3.632146,-4.053053,-2.978957,3.437553,4.323949,-4.829537,-7.870469,0.211241,0.490588,-6.099883,-1.971412,5.663185,8.725734,-2.346851,-9.818888,-0.652759,-6.793534,-6.476747], dtype = "float64")#candidate|2970|(40,)|const|float64
const_2971 = relay.const([8,1,-9,4,-10,6,1,7,-4,6,8,-5,-8,3,-3,7,4,5,-7,-9,-9,10,-3,-6,9,-2,-1,-4,-3,-8,-3,10,-1,9,3,-4,5,2,4,-4,-1,10,7,-2,-2,7,-3,3,1,1,-9,6,-8,3,6,5,-6,-9,8,3,10,-7,6,-7,1,-1,-3,-8,3,5,9,-9,2,9,-9,-3,-4,-4,-10,5,10,-6,3,4,-5,7,8,10,4,-1,4,4,6,-8,10,10,9,1,-7,-10,-5,-8,-5,-2,-10,5,-8,-1,8,1,-3,6,-6,-6,3,7,6,-10,4,1,-6,9,5,10,-1,9,-5,-8,5,6,-1,-7,-10,8,-8,9,5,-2,8,-4,-7,3,-2,-3,-4,-5,3,9,-7,-7,-6,-3,-2,1,-6,-9,8,5,2,6,-8,-8,-1,2,6,6,-6,2,1,2,-6,2,-2,5,6,9,-2,-5,-5,-2,-8,2,-7,-6,8,10,8,10,-1,-3,8,-3], dtype = "uint16")#candidate|2971|(192,)|const|uint16
var_2972 = relay.var("var_2972", dtype = "float64", shape = (504,))#candidate|2972|(504,)|var|float64
call_2969 = relay.TupleGetItem(func_993_call(relay.reshape(const_2970.astype('float64'), [5, 2, 4]), relay.reshape(const_2971.astype('uint16'), [192,]), relay.reshape(var_2972.astype('float64'), [252, 2]), ), 5)
call_2973 = relay.TupleGetItem(func_998_call(relay.reshape(const_2970.astype('float64'), [5, 2, 4]), relay.reshape(const_2971.astype('uint16'), [192,]), relay.reshape(var_2972.astype('float64'), [252, 2]), ), 5)
output = relay.Tuple([bop_2963,call_2967,call_2969,const_2970,const_2971,var_2972,])
output2 = relay.Tuple([bop_2966,call_2968,call_2973,const_2970,const_2971,var_2972,])
func_2976 = relay.Function([var_2962,var_2972,], output)
mod['func_2976'] = func_2976
mod = relay.transform.InferType()(mod)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mutated_mod.get_global_var('func_2976')
var_2978 = relay.var("var_2978", dtype = "int8", shape = (3, 4, 7))#candidate|2978|(3, 4, 7)|var|int8
var_2979 = relay.var("var_2979", dtype = "float64", shape = (504,))#candidate|2979|(504,)|var|float64
call_2977 = func_2976_call(var_2978,var_2979,)
output = call_2977
func_2980 = relay.Function([var_2978,var_2979,], output)
mutated_mod['func_2980'] = func_2980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1900_call = mod.get_global_var('func_1900')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_2997 = relay.TupleGetItem(func_1900_call(), 0)
call_2998 = relay.TupleGetItem(func_1901_call(), 0)
output = call_2997
output2 = call_2998
func_3000 = relay.Function([], output)
mod['func_3000'] = func_3000
mod = relay.transform.InferType()(mod)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3001 = func_3000_call()
output = call_3001
func_3002 = relay.Function([], output)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_3012 = relay.TupleGetItem(func_1999_call(), 1)
call_3013 = relay.TupleGetItem(func_2001_call(), 1)
output = call_3012
output2 = call_3013
func_3014 = relay.Function([], output)
mod['func_3014'] = func_3014
mod = relay.transform.InferType()(mod)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3015 = func_3014_call()
output = call_3015
func_3016 = relay.Function([], output)
mutated_mod['func_3016'] = func_3016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_3030 = relay.TupleGetItem(func_1999_call(), 0)
call_3031 = relay.TupleGetItem(func_2001_call(), 0)
uop_3033 = relay.asinh(call_3030.astype('float32')) # shape=(252, 2)
uop_3035 = relay.asinh(call_3031.astype('float32')) # shape=(252, 2)
output = uop_3033
output2 = uop_3035
func_3036 = relay.Function([], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
output = func_3036()
func_3037 = relay.Function([], output)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_3054 = relay.TupleGetItem(func_1669_call(), 0)
call_3055 = relay.TupleGetItem(func_1670_call(), 0)
output = call_3054
output2 = call_3055
func_3063 = relay.Function([], output)
mod['func_3063'] = func_3063
mod = relay.transform.InferType()(mod)
output = func_3063()
func_3064 = relay.Function([], output)
mutated_mod['func_3064'] = func_3064
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3096 = relay.var("var_3096", dtype = "int32", shape = (14, 10, 14))#candidate|3096|(14, 10, 14)|var|int32
var_3097 = relay.var("var_3097", dtype = "int32", shape = (14, 10, 14))#candidate|3097|(14, 10, 14)|var|int32
bop_3098 = relay.multiply(var_3096.astype('int32'), relay.reshape(var_3097.astype('int32'), relay.shape_of(var_3096))) # shape=(14, 10, 14)
func_2675_call = mod.get_global_var('func_2675')
func_2679_call = mutated_mod.get_global_var('func_2679')
var_3124 = relay.var("var_3124", dtype = "float32", shape = (504,))#candidate|3124|(504,)|var|float32
call_3123 = relay.TupleGetItem(func_2675_call(relay.reshape(var_3124.astype('float32'), [252, 2]), relay.reshape(var_3124.astype('float32'), [252, 2]), ), 0)
call_3125 = relay.TupleGetItem(func_2679_call(relay.reshape(var_3124.astype('float32'), [252, 2]), relay.reshape(var_3124.astype('float32'), [252, 2]), ), 0)
output = relay.Tuple([bop_3098,call_3123,var_3124,])
output2 = relay.Tuple([bop_3098,call_3125,var_3124,])
func_3128 = relay.Function([var_3096,var_3097,var_3124,], output)
mod['func_3128'] = func_3128
mod = relay.transform.InferType()(mod)
var_3129 = relay.var("var_3129", dtype = "int32", shape = (14, 10, 14))#candidate|3129|(14, 10, 14)|var|int32
var_3130 = relay.var("var_3130", dtype = "int32", shape = (14, 10, 14))#candidate|3130|(14, 10, 14)|var|int32
var_3131 = relay.var("var_3131", dtype = "float32", shape = (504,))#candidate|3131|(504,)|var|float32
output = func_3128(var_3129,var_3130,var_3131,)
func_3132 = relay.Function([var_3129,var_3130,var_3131,], output)
mutated_mod['func_3132'] = func_3132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_3144 = relay.TupleGetItem(func_1999_call(), 1)
call_3145 = relay.TupleGetItem(func_2001_call(), 1)
uop_3159 = relay.atan(call_3144.astype('float32')) # shape=(252, 2)
uop_3161 = relay.atan(call_3145.astype('float32')) # shape=(252, 2)
output = relay.Tuple([uop_3159,])
output2 = relay.Tuple([uop_3161,])
func_3162 = relay.Function([], output)
mod['func_3162'] = func_3162
mod = relay.transform.InferType()(mod)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3163 = func_3162_call()
output = call_3163
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mod.get_global_var('func_3014')
func_3016_call = mutated_mod.get_global_var('func_3016')
call_3177 = func_3014_call()
call_3178 = func_3014_call()
func_2823_call = mod.get_global_var('func_2823')
func_2826_call = mutated_mod.get_global_var('func_2826')
var_3183 = relay.var("var_3183", dtype = "uint64", shape = ())#candidate|3183|()|var|uint64
var_3184 = relay.var("var_3184", dtype = "uint64", shape = (1404,))#candidate|3184|(1404,)|var|uint64
call_3182 = relay.TupleGetItem(func_2823_call(relay.reshape(var_3183.astype('uint64'), []), relay.reshape(var_3184.astype('uint64'), [9, 13, 12]), ), 0)
call_3185 = relay.TupleGetItem(func_2826_call(relay.reshape(var_3183.astype('uint64'), []), relay.reshape(var_3184.astype('uint64'), [9, 13, 12]), ), 0)
output = relay.Tuple([call_3177,call_3182,var_3183,var_3184,])
output2 = relay.Tuple([call_3178,call_3185,var_3183,var_3184,])
func_3188 = relay.Function([var_3183,var_3184,], output)
mod['func_3188'] = func_3188
mod = relay.transform.InferType()(mod)
mutated_mod['func_3188'] = func_3188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3188_call = mutated_mod.get_global_var('func_3188')
var_3190 = relay.var("var_3190", dtype = "uint64", shape = ())#candidate|3190|()|var|uint64
var_3191 = relay.var("var_3191", dtype = "uint64", shape = (1404,))#candidate|3191|(1404,)|var|uint64
call_3189 = func_3188_call(var_3190,var_3191,)
output = call_3189
func_3192 = relay.Function([var_3190,var_3191,], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mod.get_global_var('func_3014')
func_3016_call = mutated_mod.get_global_var('func_3016')
call_3201 = func_3014_call()
call_3202 = func_3014_call()
output = relay.Tuple([call_3201,])
output2 = relay.Tuple([call_3202,])
func_3226 = relay.Function([], output)
mod['func_3226'] = func_3226
mod = relay.transform.InferType()(mod)
mutated_mod['func_3226'] = func_3226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mutated_mod.get_global_var('func_3226')
call_3227 = func_3226_call()
output = call_3227
func_3228 = relay.Function([], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_3229 = func_1869_call()
call_3230 = func_1869_call()
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_3246 = relay.TupleGetItem(func_3162_call(), 0)
call_3247 = relay.TupleGetItem(func_3164_call(), 0)
uop_3248 = relay.exp(call_3229.astype('float64')) # shape=(3, 4, 1)
uop_3250 = relay.exp(call_3230.astype('float64')) # shape=(3, 4, 1)
bop_3260 = relay.not_equal(uop_3248.astype('bool'), relay.reshape(call_3229.astype('bool'), relay.shape_of(uop_3248))) # shape=(3, 4, 1)
bop_3263 = relay.not_equal(uop_3250.astype('bool'), relay.reshape(call_3230.astype('bool'), relay.shape_of(uop_3250))) # shape=(3, 4, 1)
uop_3264 = relay.log2(call_3229.astype('float32')) # shape=(3, 4, 1)
uop_3266 = relay.log2(call_3230.astype('float32')) # shape=(3, 4, 1)
output = relay.Tuple([call_3246,bop_3260,uop_3264,])
output2 = relay.Tuple([call_3247,bop_3263,uop_3266,])
func_3281 = relay.Function([], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mutated_mod.get_global_var('func_3281')
call_3282 = func_3281_call()
output = call_3282
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_3343 = relay.TupleGetItem(func_1669_call(), 0)
call_3344 = relay.TupleGetItem(func_1670_call(), 0)
output = call_3343
output2 = call_3344
func_3348 = relay.Function([], output)
mod['func_3348'] = func_3348
mod = relay.transform.InferType()(mod)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3349 = func_3348_call()
output = call_3349
func_3350 = relay.Function([], output)
mutated_mod['func_3350'] = func_3350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_3441 = relay.TupleGetItem(func_1573_call(), 3)
call_3442 = relay.TupleGetItem(func_1575_call(), 3)
uop_3449 = relay.acosh(call_3441.astype('float32')) # shape=(3, 4, 1)
uop_3451 = relay.acosh(call_3442.astype('float32')) # shape=(3, 4, 1)
var_3452 = relay.var("var_3452", dtype = "int8", shape = (3, 4, 8))#candidate|3452|(3, 4, 8)|var|int8
bop_3453 = relay.bitwise_or(call_3441.astype('uint64'), var_3452.astype('uint64')) # shape=(3, 4, 8)
bop_3456 = relay.bitwise_or(call_3442.astype('uint64'), var_3452.astype('uint64')) # shape=(3, 4, 8)
bop_3457 = relay.less(uop_3449.astype('bool'), var_3452.astype('bool')) # shape=(3, 4, 8)
bop_3460 = relay.less(uop_3451.astype('bool'), var_3452.astype('bool')) # shape=(3, 4, 8)
output = relay.Tuple([bop_3453,bop_3457,])
output2 = relay.Tuple([bop_3456,bop_3460,])
func_3461 = relay.Function([var_3452,], output)
mod['func_3461'] = func_3461
mod = relay.transform.InferType()(mod)
var_3462 = relay.var("var_3462", dtype = "int8", shape = (3, 4, 8))#candidate|3462|(3, 4, 8)|var|int8
output = func_3461(var_3462)
func_3463 = relay.Function([var_3462], output)
mutated_mod['func_3463'] = func_3463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_3494 = relay.TupleGetItem(func_1643_call(), 0)
call_3495 = relay.TupleGetItem(func_1644_call(), 0)
func_3128_call = mod.get_global_var('func_3128')
func_3132_call = mutated_mod.get_global_var('func_3132')
var_3502 = relay.var("var_3502", dtype = "int32", shape = (1960,))#candidate|3502|(1960,)|var|int32
var_3503 = relay.var("var_3503", dtype = "float32", shape = (504,))#candidate|3503|(504,)|var|float32
call_3501 = relay.TupleGetItem(func_3128_call(relay.reshape(var_3502.astype('int32'), [14, 10, 14]), relay.reshape(var_3502.astype('int32'), [14, 10, 14]), relay.reshape(var_3503.astype('float32'), [504,]), ), 1)
call_3504 = relay.TupleGetItem(func_3132_call(relay.reshape(var_3502.astype('int32'), [14, 10, 14]), relay.reshape(var_3502.astype('int32'), [14, 10, 14]), relay.reshape(var_3503.astype('float32'), [504,]), ), 1)
output = relay.Tuple([call_3494,call_3501,var_3502,var_3503,])
output2 = relay.Tuple([call_3495,call_3504,var_3502,var_3503,])
func_3519 = relay.Function([var_3502,var_3503,], output)
mod['func_3519'] = func_3519
mod = relay.transform.InferType()(mod)
var_3520 = relay.var("var_3520", dtype = "int32", shape = (1960,))#candidate|3520|(1960,)|var|int32
var_3521 = relay.var("var_3521", dtype = "float32", shape = (504,))#candidate|3521|(504,)|var|float32
output = func_3519(var_3520,var_3521,)
func_3522 = relay.Function([var_3520,var_3521,], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_3601 = relay.TupleGetItem(func_1669_call(), 1)
call_3602 = relay.TupleGetItem(func_1670_call(), 1)
output = call_3601
output2 = call_3602
func_3619 = relay.Function([], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mutated_mod.get_global_var('func_3619')
call_3620 = func_3619_call()
output = call_3620
func_3621 = relay.Function([], output)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3632 = relay.var("var_3632", dtype = "int32", shape = (5, 1, 1))#candidate|3632|(5, 1, 1)|var|int32
var_3633 = relay.var("var_3633", dtype = "int32", shape = (5, 4, 11))#candidate|3633|(5, 4, 11)|var|int32
bop_3634 = relay.greater(var_3632.astype('bool'), var_3633.astype('bool')) # shape=(5, 4, 11)
func_3000_call = mod.get_global_var('func_3000')
func_3002_call = mutated_mod.get_global_var('func_3002')
call_3641 = func_3000_call()
call_3642 = func_3000_call()
func_3128_call = mod.get_global_var('func_3128')
func_3132_call = mutated_mod.get_global_var('func_3132')
const_3649 = relay.const([9,7,1,-10,-3,-5,-1,-6,-3,-5,7,-4,-1,3,-2,-7,4,-6,8,-9,-9,9,-7,2,3,9,-5,6,5,-7,2,9,10,2,-5,8,-5,1,2,-2,-3,5,-3,3,-2,7,6,1,-1,-1,-6,-10,10,3,-5,6,-5,5,4,5,10,-4,-8,-2,2,5,6,8,-7,7,7,3,6,1,-7,10,10,6,10,7,3,9,9,5,-10,1,8,1,-1,-8,1,-8,1,-7,1,-5,9,-8,-1,6,7,-9,1,-1,-4,-1,-4,-4,-2,-7,8,-1,-6,-5,2,-6,-9,6,-7,-4,-3,-6,5,-3,4,2,-4,8,2,6,-5,4,9,5,4,-7,-6,5,4,10,2,9,-7,-5,-8,-2,3,-8,6,8,-3,-1,7,-10,-4,8,-2,-1,4,7,-8,7,-7,-4,6,-6,-7,8,1,-5,-8,-2,-2,9,-10,9,5,9,-1,-6,-7,8,7,7,5,6,9,-6,-2,6,-1,-2,-3,10,-6,-2,1,6,-9,-8,7,8,2,6,8,8,8,-8,10,6,-8,-10,2,7,-9,4,8,1,-5,-8,10,4,3,-9,-4,1,-5,9,5,9,-10,1,4,-2,8,3,3,5,1,-10,-3,7,10,-7,1,-10,-6,10,2,10,9,9,3,7,2,-1,8,4,3,4,5,4,4,3,4,-9,1,5,6,9,1,4,7,7,9,-3,-7,8,-9,-9,-6,-5,6,10,4,-9,-9,-6,1,8,7,2,8,-5,-1,-9,-3,-4,6,1,3,-9,-3,1,-8,-1,10,-9,5,5,-10,-7,-1,-2,-4,1,4,-4,-2,-10,3,7,9,2,-2,2,-9,5,-9,-9,1,-2,7,-2,10,1,-5,7,-4,8,5,-8,-8,-6,-1,1,4,-6,1,4,-10,-5,1,9,-2,-1,-6,1,1,2,-4,-3,6,3,-7,-9,10,-4,-7,-8,1,-5,-10,2,6,5,-4,-10,8,-8,-8,6,10,-1,-4,-7,2,-3,-2,4,-6,8,7,-10,1,4,4,7,9,-2,-9,-9,3,-3,-4,1,-8,-1,8,2,9,9,5,9,4,-8,-8,-5,-8,4,-7,-3,7,-2,5,-4,-1,10,-9,-9,-10,-7,3,-9,-4,4,-1,8,2,3,-3,6,10,-9,6,-1,4,-5,1,9,-9,7,-3,6,-5,7,-5,-4,-8,3,1,-10,-1,-4,-9,10,-8,-5,-1,8,-1,-6,7,-3,-2,-9,-8,8,4,-4,4,10,-2,-5,-8,-1,-8,-5,-8,10,-3,-5,-9,-4,6,7,-3,-4,-2,8,-3,-8,5,-6,2,-2,-6,-9,9,-8,-1,-5,-2,9,-9,5,-3,3,-8,10,-4,8,9,-2,1,5,7,-8,10,-4,-2,1,3,3,2,3,8,-3,-9,7,-9,3,4,-6,9,-5,10,-6,1,-4,5,-8,-9,1,-10,-9,5,-4,1,5,-9,-1,-10,1,8,-6,-5,9,-7,-3,1,3,-3,-6,6,-6,-4,3,-6,7,2,-1,8,-4,-10,-2,-10,-8,-4,9,6,7,2,5,-4,4,-6,6,4,-2,8,7,1,-1,8,6,-5,5,3,-7,-2,5,-7,5,1,-8,-1,7,10,8,-9,-3,7,2,-8,9,2,-10,-4,-2,10,4,-5,-3,2,-7,6,-5,-10,5,8,7,-7,-8,-2,6,10,-5,-4,2,-10,4,8,10,-8,5,-8,-5,1,-6,4,9,3,-1,-4,10,1,-1,5,9,6,-9,-8,9,-8,6,-6,-9,1,-5,-2,-9,3,2,-3,1,-4,-6,-3,-4,10,6,-5,7,5,-10,-1,10,9,1,-2,1,-1,2,2,8,6,-9,8,-8,2,-10,5,6,-1,-7,-9,2,-7,-5,-10,2,6,-10,1,-9,-4,-7,-10,-4,-2,-7,3,-1,6,1,1,-4,9,3,-2,3,5,4,5,-8,2,7,5,-6,-6,-6,2,-3,-6,1,1,3,-5,3,6,6,7,3,-1,-2,8,1,-10,3,3,3,9,1,-4,6,6,-7,-5,-4,1,-3,-3,-1,1,10,-7,7,10,9,-4,1,-7,2,3,8,1,-5,6,-9,1,8,-2,-3,6,-6,9,10,-8,-7,8,4,-5,-4,-6,-5,-2,-4,-1,-9,-1,7,4,5,10,4,-5,5,-9,10,-4,4,-9,4,-5,5,10,5,9,-6,10,-7,8,7,-3,-5,-2,-4,-7,-9,1,-8,7,-5,-1,-7,10,-8,-8,-8,-1,-7,-1,-4,-7,-1,-10,-9,2,5,-6,-8,8,7,-2,6,-9,8,2,-10,-4,7,-2,1,2,-1,2,-5,9,6,-8,-7,-3,-8,-5,-4,-1,-5,1,1,5,2,-3,-6,8,4,-4,2,5,2,6,1,1,2,-3,5,-5,5,-3,-10,5,-4,6,6,-6,1,4,-1,9,7,6,-2,-9,9,-8,-1,-7,-1,3,-2,6,10,5,-7,5,-6,5,10,-3,-6,-1,5,3,9,-5,-4,-4,3,6,-2,5,9,-4,-6,1,-9,8,-10,-3,-7,-10,9,5,-3,-1,1,-3,-6,3,-5,3,-7,-9,9,8,2,9,1,-3,-7,9,2,2,8,-9,10,-6,-2,3,-9,-9,8,2,2,-8,-2,8,-9,-2,-6,10,5,-2,-5,10,8,4,-9,-9,-4,1,4,-1,-2,9,-8,-3,-7,1,1,-5,-3,7,7,-5,3,-10,5,-9,4,4,-7,4,3,-5,9,3,8,3,8,-10,-4,-9,10,8,7,6,1,9,7,8,3,7,-5,-1,-8,7,9,-3,-5,-5,-4,-8,2,9,-3,-5,-10,10,-5,-8,1,-7,1,-3,10,1,-10,-7,8,4,-4,-8,3,10,10,-3,5,-5,-7,-5,6,-10,-4,-3,-4,-4,7,-3,-1,-10,-2,1,-10,-6,-5,-3,6,9,2,-4,8,5,1,8,2,2,9,-3,-2,-8,-9,-7,-6,-9,-10,-3,3,4,5,-6,9,10,3,-7,-10,1,-5,6,-9,-10,-10,-5,-10,-6,2,1,-2,-7,4,-10,-10,6,1,9,-9,-7,1,-1,-3,-7,9,-6,10,-5,-9,1,-6,-5,10,-7,2,-7,5,5,3,5,-1,-4,-4,7,6,3,6,-10,-3,-5,-8,7,10,-5,5,8,1,-6,3,-10,-3,2,2,-6,-9,-9,7,2,9,10,-7,7,2,-3,-1,5,-8,3,-1,7,4,-8,-4,-6,-8,-5,7,-3,9,4,-10,4,-6,-10,-8,6,2,10,-4,7,7,9,7,-2,1,-4,5,-1,-5,-9,-7,-4,10,-3,2,-10,-5,2,-2,-6,-2,-4,-10,-9,5,7,-6,-10,-7,-3,-6,-8,4,1,-8,-9,-9,7,-7,6,8,-3,-6,-1,8,2,10,3,1,8,-2,10,-9,1,-5,7,10,-6,-6,9,-4,8,-10,6,6,3,-2,-9,7,-6,-7,-6,6,3,-10,6,5,7,-6,9,8,1,-2,-10,10,-3,-10,2,-10,6,9,-5,-5,-10,-7,4,-10,5,5,10,1,10,2,-5,-1,2,4,-6,10,-1,-6,2,2,-5,3,2,-1,-7,-6,-5,5,9,-7,-8,3,-5,6,3,7,5,-5,5,-9,1,5,4,-5,1,8,-2,1,-9,7,5,10,-3,6,3,2,-3,-9,-9,10,8,-1,10,-8,-9,1,-8,-5,-7,2,-8,-3,-3,8,7,-4,-9,-7,-7,9,1,-3,10,3,10,-7,-10,-9,-1,7,-8,-6,5,7,-8,1,6,-10,1,6,-9,-2,-1,3,10,3,10,5,1,-9,-10,-10,-4,7,-6,-9,-5,-3,1,-10,6,9,1,3,-9,2,-5,-8,-7,-6,-5,7,5,-6,-5,-7,10,-9,1,-4,6,-10,2,-2,10,-9,3,6,-7,-4,9,-5,9,-1,-6,3,-2,-3,-2,3,-4,-8,10,5,-6,-10,-4,5,9,-6,-2,-6,-3,-1,5,6,8,-6,-7,6,2,8,10,-9,-1,1,5,2,-8,4,10,-3,-3,-7,-2,4,8,1,-7,-5,7,-6,5,2,-4,9,4,2,-2,8,1,-9,-5,-9,1,5,-3,-10,-10,4,-7,-5,6,10,6,4,-3,-10,-5,3,2,4,10,4,6,-3,10,6,7,5,-8,-3,-4,-1,2,5,-3,-1,-2,-2,-4,1,-5,1,-7,-7,7,-7,-3,-2,-2,10,5,-8,-8,-5,-5,8,5,2,-6,-10,9,8,6,8,6,-3,1,7,-2,-2,9,7,-9,-10,7,2,7,-9,-9,-1,7,5,7,-9,-4,-6,-3,1,-1,9,-10,6,-8,-8,-4,-1,5,8,7,9,-8,-6,-7,3,7,7,-2,3,-10,8,-2,-4,4,-8,-1,6,-1,10,-1,-5,-6,6,-7,-7,-3,-10,3,-1,10,-2,8,10,-2,7,-5,4,7,9,-10,-3,-1,-10,-9,-3,-2,-9,5,-10,-2,-10,3,10,3,-6,-8,-8,1,5,-8,-10,5,1,-9,-7,-9,-9,9,2,1,-7,-6,9,-10,9,5,8,-7,10,-1,-8,-3,3,-6,-4,-7,-7,-5,-2,1,2,-9,7,-3,-5,-3,-7,9,8,6,-4,4,-6,8,-1,9,4,-8,-7,10,-7,2,1,3,7,-1,2,2,4,8,-8,1,-7,5,-1,-6,9,-10,1,8,-3,-1,-6,-7,-5,-6,-3,7,7,6,8,-8,-9,-7,-4,-10,-8,3,4,-4,2,1,10,-5,-1,-7,-2,6,-5,-4,10,5,-3,-1,6,-5,9,6,-4,-6,-4,4,10,-1,-4,4,-9,1,-9,10,-10,-6,10,8,-6,9,-9,-10,-2,6,6,-10,-10,6,5,-5,-2,6,6,6,-10,4,7,-10,4,4,7,2,5,7,7,-5,-6,1,-4,-3,-1,4,2,-4,10,-6,-2,-4,-8,4,-6,4,-1,3,-1,10,7,7,-1,-6,1,-8,10,-7,-7,-6,4,-5,5,8,6,6,-5,-1,-6,-7,-8,-9,1,9,-8,10,-6,-5,-1,-7,-5,8,-7,-8,7,1,4,-4,-7,4,-9,-7,7,6,-9,7,-7,7,6,-9,3,-8,2,-4,8,-4,10,2,7,7,2,-1,-9,-2,-4,-9,3,-5,-1,1,7,-6,9,6,5,-2,-7], dtype = "int32")#candidate|3649|(1960,)|const|int32
const_3650 = relay.const([7.169104,-4.706612,-0.879813,-3.744083,6.515674,9.101400,-5.490054,8.398678,-4.736200,7.698227,4.575341,0.920399,-2.344428,6.564970,8.062464,-8.088009,0.102250,3.036827,-0.231934,9.186299,-4.817828,-5.552398,-4.464207,-9.900006,7.671280,7.057080,2.159333,4.958632,-6.909534,0.768927,8.806068,-7.619602,9.802726,5.048833,3.451919,2.060831,7.362365,1.405698,5.259251,-3.861686,6.717537,4.000596,8.808201,-3.132813,-2.965614,6.179164,2.544469,-0.630480,5.738982,-9.999064,-3.406797,8.370191,-8.588046,0.374945,-4.957884,-6.381959,-2.719753,-5.653410,-9.297350,6.716803,7.000900,8.938542,-3.230517,1.373546,1.206594,-1.596395,7.924365,3.239554,-5.110655,8.332214,7.214811,9.079639,3.461700,1.796265,-3.248727,-2.143088,1.096829,9.609174,0.087909,-4.188833,-5.399147,0.255222,-0.110134,6.044368,9.991873,7.756042,0.348258,-0.318626,9.932637,-8.890698,-2.514271,4.908026,-5.687457,0.468854,4.321469,-6.996892,6.221866,6.474273,1.731331,-4.142649,7.507374,2.935091,-4.522919,1.463007,4.148220,-7.041702,6.492982,7.758486,-7.426569,4.471325,-6.055025,6.944301,1.695463,8.422986,-5.356228,-3.335416,-8.712469,-9.656481,1.099879,-2.651910,3.627327,8.081705,-9.545973,7.923473,7.383234,-6.838591,-2.632187,0.716044,-0.045068,-5.497856,6.424398,-2.290579,-4.077255,-6.638011,-2.501058,-7.437346,7.029276,-5.971004,8.525634,-9.412553,4.539548,-2.634310,6.904037,8.653591,1.121486,-2.846946,-4.475426,-8.169939,2.887930,8.517639,2.624342,4.314416,7.169812,-4.506478,1.745421,8.986603,3.152274,1.870798,-9.929549,-7.219468,-9.758834,-0.959379,3.081589,-8.880251,4.304478,-3.932138,7.461960,-0.867599,-2.016747,1.046737,2.443347,-9.895445,3.145033,7.380531,-5.248623,5.649880,-9.831138,-3.533762,-8.785258,-4.614501,-4.416196,-9.769036,4.456239,-1.016976,0.138871,7.701422,-4.030627,4.998644,5.902224,7.991921,-6.676373,7.496580,-7.093273,-6.934712,-9.235928,8.752862,5.143760,-1.860933,-2.065266,-3.224659,4.509213,-5.411788,5.262902,3.301340,0.079299,0.117234,1.682186,-4.266318,-2.406550,-9.777165,-8.149822,0.197511,3.564759,-8.545356,-0.242373,5.608264,-3.970191,4.944689,1.684449,3.911776,-5.420771,-1.492253,7.169848,7.869518,3.011141,-1.447799,8.110883,7.787302,0.695693,-6.196822,7.519626,7.027771,-4.578897,1.669397,3.640290,-7.417362,0.189788,8.734581,7.214570,-4.693942,-6.080320,-4.964589,-0.151427,-5.102838,1.140015,8.482309,-7.117125,8.378934,-7.058301,-4.251823,5.550970,1.273479,6.969061,8.969812,9.900784,0.909260,-4.325733,-1.044799,-9.776743,-7.570677,2.596926,-9.230933,7.271750,-6.303247,-0.117725,3.428399,9.351379,1.760318,-2.226807,-4.889857,-9.437107,3.836677,3.834598,-9.963914,3.537928,-6.390964,-7.669510,-1.110029,-6.718612,4.079993,-3.448804,-1.829075,0.165377,-0.873458,-9.162250,-3.726262,9.397102,1.166147,7.063123,-1.811871,-3.912031,7.229274,9.471498,-7.364271,1.870853,-5.575779,0.588266,5.874579,-4.394917,-5.125081,-6.132834,-0.289425,-6.228988,4.507090,6.849368,-1.677999,-8.114358,-1.881454,-2.917835,7.105752,8.430739,7.071456,-9.320930,7.554296,-6.068750,1.916465,-9.854487,-8.140073,9.861073,-9.828322,6.095333,-8.919519,2.453881,3.847458,-8.283815,1.139128,7.414543,-9.216088,7.436736,-0.489448,4.988063,8.361829,5.299513,-5.191841,1.891587,5.990915,-1.410718,-9.128057,6.878890,1.957818,-9.928281,0.425180,4.123143,6.193411,9.678382,-3.529854,7.066696,2.555512,-1.950654,6.165414,-5.770658,-7.998347,-3.639569,-1.224719,7.290008,5.560208,-8.063521,4.681539,-1.607956,6.704714,-9.140386,-6.574605,1.683306,5.387077,-7.878512,2.510342,3.523075,9.014543,-7.394782,1.660577,6.957498,5.873766,7.089821,5.100525,8.274017,-8.484957,-1.352554,4.035997,-4.912517,8.577034,9.360469,3.396960,9.058207,-6.874536,5.491398,2.295822,6.898452,-4.758447,1.636471,-8.726813,-6.635553,-9.344551,-6.863556,-1.555669,-6.531150,2.785894,-8.529041,1.196318,7.136736,1.308193,3.777720,8.033142,3.606645,-9.699278,9.370471,5.940965,5.224742,-9.883711,3.339066,-4.642657,7.031875,1.537667,-9.417612,4.348584,8.425055,-3.511931,8.504996,4.242643,-7.919778,6.956314,-0.730220,6.107452,-7.002052,9.088428,4.012310,-1.566368,1.828959,-1.562771,-2.730020,8.813775,1.734680,-5.650118,8.660355,6.593471,5.516855,9.467596,-5.729684,4.167321,2.321378,-8.227470,-4.472702,9.006441,4.852383,-7.089469,5.099211,1.648547,4.764863,4.155274,0.021059,-8.741337,2.326259,-2.898426,8.057203,-7.495205,8.148498,8.481328,6.235838,7.210390,-7.969148,-8.511284,-6.676610,-8.595533,-7.982779,-7.310613,3.559375,-5.537513,1.163198,-9.925936,8.053944,9.433251,7.877502,-1.800060,0.724713,8.594229,1.616623,3.256279,2.025619,-5.637562,5.614771,9.888508,4.396785,1.251808,9.244853,9.069506,-0.394220,4.142248,1.790648,5.228767,7.767265,6.026876,-4.171717,-8.661549,-1.550660,4.713073,-5.589233,-8.464057,5.450222,-9.740949,4.012719,6.609848,-1.220521,-6.575667,-1.812829,-2.923594], dtype = "float32")#candidate|3650|(504,)|const|float32
call_3648 = relay.TupleGetItem(func_3128_call(relay.reshape(const_3649.astype('int32'), [14, 10, 14]), relay.reshape(const_3649.astype('int32'), [14, 10, 14]), relay.reshape(const_3650.astype('float32'), [504,]), ), 1)
call_3651 = relay.TupleGetItem(func_3132_call(relay.reshape(const_3649.astype('int32'), [14, 10, 14]), relay.reshape(const_3649.astype('int32'), [14, 10, 14]), relay.reshape(const_3650.astype('float32'), [504,]), ), 1)
uop_3653 = relay.asinh(bop_3634.astype('float32')) # shape=(5, 4, 11)
uop_3660 = relay.exp(uop_3653.astype('float64')) # shape=(5, 4, 11)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_3666 = relay.TupleGetItem(func_1643_call(), 0)
call_3667 = relay.TupleGetItem(func_1644_call(), 0)
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3670 = func_3619_call()
call_3671 = func_3619_call()
output = relay.Tuple([call_3641,call_3648,const_3649,const_3650,uop_3660,call_3666,call_3670,])
output2 = relay.Tuple([call_3642,call_3651,const_3649,const_3650,uop_3660,call_3667,call_3671,])
func_3675 = relay.Function([var_3632,var_3633,], output)
mod['func_3675'] = func_3675
mod = relay.transform.InferType()(mod)
mutated_mod['func_3675'] = func_3675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3675_call = mutated_mod.get_global_var('func_3675')
var_3677 = relay.var("var_3677", dtype = "int32", shape = (5, 1, 1))#candidate|3677|(5, 1, 1)|var|int32
var_3678 = relay.var("var_3678", dtype = "int32", shape = (5, 4, 11))#candidate|3678|(5, 4, 11)|var|int32
call_3676 = func_3675_call(var_3677,var_3678,)
output = call_3676
func_3679 = relay.Function([var_3677,var_3678,], output)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1669_call = mod.get_global_var('func_1669')
func_1670_call = mutated_mod.get_global_var('func_1670')
call_3697 = relay.TupleGetItem(func_1669_call(), 0)
call_3698 = relay.TupleGetItem(func_1670_call(), 0)
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3714 = func_3619_call()
call_3715 = func_3619_call()
output = relay.Tuple([call_3697,call_3714,])
output2 = relay.Tuple([call_3698,call_3715,])
func_3728 = relay.Function([], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
output = func_3728()
func_3729 = relay.Function([], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3728_call = mod.get_global_var('func_3728')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_3836 = relay.TupleGetItem(func_3728_call(), 0)
call_3837 = relay.TupleGetItem(func_3729_call(), 0)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_3847 = func_1869_call()
call_3848 = func_1869_call()
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_3855 = func_3619_call()
call_3856 = func_3619_call()
uop_3861 = relay.tan(call_3847.astype('float64')) # shape=(3, 4, 1)
uop_3863 = relay.tan(call_3848.astype('float64')) # shape=(3, 4, 1)
output = relay.Tuple([call_3836,call_3855,uop_3861,])
output2 = relay.Tuple([call_3837,call_3856,uop_3863,])
func_3869 = relay.Function([], output)
mod['func_3869'] = func_3869
mod = relay.transform.InferType()(mod)
mutated_mod['func_3869'] = func_3869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3869_call = mutated_mod.get_global_var('func_3869')
call_3870 = func_3869_call()
output = call_3870
func_3871 = relay.Function([], output)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3348_call = mod.get_global_var('func_3348')
func_3350_call = mutated_mod.get_global_var('func_3350')
call_3874 = func_3348_call()
call_3875 = func_3348_call()
func_1999_call = mod.get_global_var('func_1999')
func_2001_call = mutated_mod.get_global_var('func_2001')
call_3877 = relay.TupleGetItem(func_1999_call(), 1)
call_3878 = relay.TupleGetItem(func_2001_call(), 1)
output = relay.Tuple([call_3874,call_3877,])
output2 = relay.Tuple([call_3875,call_3878,])
func_3882 = relay.Function([], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mutated_mod.get_global_var('func_3882')
call_3883 = func_3882_call()
output = call_3883
func_3884 = relay.Function([], output)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3014_call = mod.get_global_var('func_3014')
func_3016_call = mutated_mod.get_global_var('func_3016')
call_3914 = func_3014_call()
call_3915 = func_3014_call()
var_3923 = relay.var("var_3923", dtype = "float32", shape = (252, 2))#candidate|3923|(252, 2)|var|float32
bop_3924 = relay.less(call_3914.astype('bool'), relay.reshape(var_3923.astype('bool'), relay.shape_of(call_3914))) # shape=(252, 2)
bop_3927 = relay.less(call_3915.astype('bool'), relay.reshape(var_3923.astype('bool'), relay.shape_of(call_3915))) # shape=(252, 2)
uop_3936 = relay.log2(call_3914.astype('float32')) # shape=(252, 2)
uop_3938 = relay.log2(call_3915.astype('float32')) # shape=(252, 2)
const_3943 = relay.const([[-7.520646,-5.810662],[-0.637493,6.505591],[3.283449,8.540877],[5.746021,9.278439],[7.872447,-2.571848],[3.228745,-7.111414],[3.838076,2.286055],[5.308612,-1.901145],[4.638687,4.175438],[3.692136,-3.357215],[5.993871,7.553427],[4.822842,8.005007],[-7.147052,-1.557413],[9.065027,-6.037083],[-2.512149,-8.461489],[7.420356,5.155887],[8.517625,-2.145266],[1.703355,-1.947338],[-1.202847,3.205806],[-2.637793,8.001247],[-6.831745,-0.752523],[-4.367011,0.417054],[4.677818,-0.338409],[-4.859226,3.019492],[-9.668421,9.351095],[-5.648563,0.563386],[9.530721,8.817483],[3.474001,-5.047576],[-0.793389,6.757643],[5.365411,6.324514],[-5.997778,0.799310],[4.754327,0.200916],[3.914756,4.719247],[-3.823440,-4.300378],[2.621192,0.127387],[-4.764631,1.563336],[-0.649059,2.548827],[8.079706,-5.747171],[7.187619,-3.657396],[-2.507395,-9.084241],[-3.436978,-4.400402],[-4.111422,-1.759126],[-8.594168,0.780262],[4.939451,6.875062],[7.211313,-9.503259],[-8.093379,1.501255],[-2.908957,-5.032245],[3.521683,-8.592383],[5.182956,-2.812848],[-1.136225,0.782670],[-8.533646,1.427005],[5.532979,4.576213],[-7.086367,5.470964],[4.126183,-8.436941],[7.268539,-8.878896],[6.060724,-8.429618],[0.444312,6.929897],[-0.198353,-7.022745],[9.530419,-2.684307],[2.811201,0.844547],[7.481266,-0.904899],[0.977929,5.320830],[6.790764,9.418673],[-1.940380,7.107065],[-7.416034,0.540153],[-6.594983,6.518682],[-6.853186,-5.921180],[-1.221509,3.443756],[4.101678,-4.392709],[-6.581221,7.556493],[2.477777,-8.434716],[-7.404916,-8.339976],[-9.075988,4.018406],[8.666159,-6.785594],[1.092812,4.547732],[0.976199,6.833279],[-4.768237,4.271261],[2.682701,3.747214],[-7.502374,9.056152],[8.885558,1.861485],[3.406889,-8.313646],[-3.663495,-2.079652],[-8.148148,5.770176],[-3.947131,-8.090149],[-2.280878,0.495679],[-6.758464,-6.374113],[7.984595,0.866500],[4.836489,-5.162929],[-7.528671,-3.471345],[-0.655506,-3.703116],[-8.296827,-3.360231],[-7.519886,-7.400482],[-5.465586,1.390046],[-9.657462,4.937289],[3.790568,-5.095695],[-2.150101,5.496386],[-0.207287,0.531837],[1.818024,2.984460],[1.464185,-6.412837],[-1.818039,-1.431853],[8.872186,7.997640],[2.317502,4.123821],[0.287694,-6.104734],[-6.352327,-2.236783],[0.291942,2.688587],[9.097004,-0.278660],[-1.736190,2.599670],[2.185475,-4.530685],[1.991296,-2.286031],[-2.570329,4.826736],[-2.530648,7.415295],[7.367808,6.305770],[0.669040,4.010173],[1.594444,6.078418],[6.967344,-5.584782],[-6.353728,4.076089],[-5.038178,4.777308],[0.021077,-2.564874],[-7.132652,-8.853082],[-5.407569,-6.441056],[0.945839,-5.916825],[4.142439,-1.972504],[-0.023822,-0.085667],[9.878418,-0.950320],[8.053721,8.179399],[-8.362367,-3.988047],[0.531735,4.177330],[-9.678643,-3.930702],[6.647653,-4.463767],[-1.646398,6.721193],[7.598451,-8.329717],[5.745791,-2.753246],[-5.364785,3.909726],[-4.155375,1.304346],[5.405665,1.860268],[-2.483832,3.357124],[-9.350126,-2.387606],[-6.945400,-5.096870],[1.806146,8.371264],[5.630680,-8.161498],[1.028123,3.724323],[5.806495,6.999409],[5.856829,3.338700],[-0.695871,8.740269],[-7.878382,-7.432939],[-3.482281,5.900791],[4.200864,-5.828646],[-4.767455,-6.166352],[1.201844,7.380680],[-3.915390,5.488602],[8.971486,2.024271],[7.495034,5.163671],[-1.196148,-8.923990],[-3.743739,7.712282],[-0.262676,-1.496479],[-3.089665,-3.924267],[-7.571639,-3.188140],[1.629862,-9.226398],[-2.168595,-8.359268],[5.443324,-0.386836],[2.706792,-4.886334],[-9.180555,9.815802],[1.290899,8.705244],[-5.768967,0.739029],[-4.151233,1.686086],[1.259705,-3.939903],[8.317764,2.683164],[-4.550498,5.728489],[1.959638,8.394223],[0.147974,-8.732335],[1.616139,-0.414931],[-7.911951,-8.549825],[3.966259,-8.387231],[-4.817044,6.905854],[8.945164,-2.290388],[-6.515215,-9.337111],[8.033711,8.019902],[-7.485490,9.034867],[2.468229,-6.366061],[-9.142893,-1.146376],[-0.127137,-5.764944],[-4.851563,6.636741],[4.174575,9.697888],[1.219809,8.198845],[-6.749898,0.146561],[-0.500479,-7.309776],[-4.433674,2.831657],[7.396164,-1.142476],[-0.406460,-0.739668],[-6.215549,6.894127],[9.199634,7.244302],[-8.910851,2.575146],[4.632975,8.654432],[-8.648970,-7.292504],[-9.511896,7.980073],[2.714003,-0.236476],[-6.071319,-8.639379],[-3.190834,-4.707291],[2.618800,-3.851272],[-7.182896,-4.223245],[-5.243339,-7.401934],[8.347686,2.783891],[-7.297283,0.072516],[-7.968175,-7.659777],[2.388446,-0.799169],[-8.342313,8.890724],[-9.561187,1.702558],[-6.466710,6.959819],[3.188051,4.736150],[-4.773822,7.243734],[7.943829,-8.214974],[-4.166672,-5.181673],[-0.933995,5.497420],[-3.479401,-5.705578],[-7.514154,3.255875],[8.522391,4.414248],[-2.367525,5.392686],[6.273008,-3.024477],[0.400557,-7.669897],[3.220022,7.998979],[9.594564,-4.172864],[-3.261352,1.835754],[-9.218453,5.139126],[4.252614,-3.568957],[8.937344,-5.233089],[-2.564509,2.245943],[9.637587,5.165518],[-8.247256,-2.954827],[7.153630,5.715474],[5.288296,-5.665097],[-6.788836,9.981043],[-3.685981,5.092022],[1.103357,-5.487269],[-1.939542,-0.943395],[-6.805672,-2.072025],[-8.844428,-6.437893],[0.165276,1.446340],[-2.934924,-2.654629],[2.845176,-1.593382],[-3.520923,9.104730],[9.961698,6.125200],[0.560933,-3.593949],[-5.311100,0.838208],[8.598178,-9.114856],[4.756660,-7.764566],[-4.754734,-3.151501],[-0.743700,3.738867],[3.795881,4.217397],[6.212315,-4.524038],[-5.975239,-1.174609],[-9.182941,9.401752],[6.747689,-7.763014]], dtype = "float32")#candidate|3943|(252, 2)|const|float32
bop_3944 = relay.bitwise_and(uop_3936.astype('uint32'), relay.reshape(const_3943.astype('uint32'), relay.shape_of(uop_3936))) # shape=(252, 2)
bop_3947 = relay.bitwise_and(uop_3938.astype('uint32'), relay.reshape(const_3943.astype('uint32'), relay.shape_of(uop_3938))) # shape=(252, 2)
bop_3966 = relay.logical_and(bop_3944.astype('bool'), relay.reshape(uop_3936.astype('bool'), relay.shape_of(bop_3944))) # shape=(252, 2)
bop_3969 = relay.logical_and(bop_3947.astype('bool'), relay.reshape(uop_3938.astype('bool'), relay.shape_of(bop_3947))) # shape=(252, 2)
bop_3977 = relay.equal(bop_3944.astype('bool'), relay.reshape(uop_3936.astype('bool'), relay.shape_of(bop_3944))) # shape=(252, 2)
bop_3980 = relay.equal(bop_3947.astype('bool'), relay.reshape(uop_3938.astype('bool'), relay.shape_of(bop_3947))) # shape=(252, 2)
uop_3998 = relay.sinh(const_3943.astype('float32')) # shape=(252, 2)
output = relay.Tuple([bop_3924,bop_3966,bop_3977,uop_3998,])
output2 = relay.Tuple([bop_3927,bop_3969,bop_3980,uop_3998,])
func_4001 = relay.Function([var_3923,], output)
mod['func_4001'] = func_4001
mod = relay.transform.InferType()(mod)
var_4002 = relay.var("var_4002", dtype = "float32", shape = (252, 2))#candidate|4002|(252, 2)|var|float32
output = func_4001(var_4002)
func_4003 = relay.Function([var_4002], output)
mutated_mod['func_4003'] = func_4003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2325_call = mod.get_global_var('func_2325')
func_2327_call = mutated_mod.get_global_var('func_2327')
call_4034 = func_2325_call()
call_4035 = func_2325_call()
func_3348_call = mod.get_global_var('func_3348')
func_3350_call = mutated_mod.get_global_var('func_3350')
call_4042 = func_3348_call()
call_4043 = func_3348_call()
output = relay.Tuple([call_4034,call_4042,])
output2 = relay.Tuple([call_4035,call_4043,])
func_4048 = relay.Function([], output)
mod['func_4048'] = func_4048
mod = relay.transform.InferType()(mod)
output = func_4048()
func_4049 = relay.Function([], output)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1956_call = mod.get_global_var('func_1956')
func_1958_call = mutated_mod.get_global_var('func_1958')
call_4091 = relay.TupleGetItem(func_1956_call(), 0)
call_4092 = relay.TupleGetItem(func_1958_call(), 0)
output = relay.Tuple([call_4091,])
output2 = relay.Tuple([call_4092,])
func_4093 = relay.Function([], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mutated_mod.get_global_var('func_4093')
call_4094 = func_4093_call()
output = call_4094
func_4095 = relay.Function([], output)
mutated_mod['func_4095'] = func_4095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4113 = relay.var("var_4113", dtype = "int16", shape = (16, 2, 11))#candidate|4113|(16, 2, 11)|var|int16
var_4114 = relay.var("var_4114", dtype = "int16", shape = (16, 2, 11))#candidate|4114|(16, 2, 11)|var|int16
bop_4115 = relay.not_equal(var_4113.astype('bool'), relay.reshape(var_4114.astype('bool'), relay.shape_of(var_4113))) # shape=(16, 2, 11)
func_3063_call = mod.get_global_var('func_3063')
func_3064_call = mutated_mod.get_global_var('func_3064')
call_4119 = func_3063_call()
call_4120 = func_3063_call()
func_3000_call = mod.get_global_var('func_3000')
func_3002_call = mutated_mod.get_global_var('func_3002')
call_4124 = func_3000_call()
call_4125 = func_3000_call()
output = relay.Tuple([bop_4115,call_4119,call_4124,])
output2 = relay.Tuple([bop_4115,call_4120,call_4125,])
func_4140 = relay.Function([var_4113,var_4114,], output)
mod['func_4140'] = func_4140
mod = relay.transform.InferType()(mod)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4140_call = mutated_mod.get_global_var('func_4140')
var_4142 = relay.var("var_4142", dtype = "int16", shape = (16, 2, 11))#candidate|4142|(16, 2, 11)|var|int16
var_4143 = relay.var("var_4143", dtype = "int16", shape = (16, 2, 11))#candidate|4143|(16, 2, 11)|var|int16
call_4141 = func_4140_call(var_4142,var_4143,)
output = call_4141
func_4144 = relay.Function([var_4142,var_4143,], output)
mutated_mod['func_4144'] = func_4144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_4146 = relay.TupleGetItem(func_1573_call(), 0)
call_4147 = relay.TupleGetItem(func_1575_call(), 0)
var_4152 = relay.var("var_4152", dtype = "float64", shape = (11, 10, 10))#candidate|4152|(11, 10, 10)|var|float64
bop_4153 = relay.bitwise_xor(call_4146.astype('int8'), var_4152.astype('int8')) # shape=(11, 10, 10)
bop_4156 = relay.bitwise_xor(call_4147.astype('int8'), var_4152.astype('int8')) # shape=(11, 10, 10)
func_720_call = mod.get_global_var('func_720')
func_724_call = mutated_mod.get_global_var('func_724')
const_4158 = relay.const([-1,-1,-5,9,-9,1,-8,-5,-9,-3,10,2,7,-3,8,-10,-4,-4,-7,8,-9,-9,-8,-6,-3,8,4,-7,-1,1,-6,-10,1,7,10,-5,-4,8,1,9,-4,-9,-6,-1,-1,-8,-3,-7,-4,-4,2,3,-6,-8,-6,-2,5,-9,2,-9,2,9,-8,2,1,-6,5,-8,10,-7,4,-5,3,-1,-3,7,10,1,-2,-9,8,5,3,-4,1,7,3,6,7,-10,-6,8,-10,-3,1,-7,-5,2,-8,-1,8,-6,-2,-6,8,3,-10,1,9,4,5,-9,-8,8,-7,-4,-9,-5,-3,-3,-4,4,-5,-8,8,-4,-5,-3,4,-8,-2,-6,-5,3,-2,6,3,2,6,4,-1,-8,3,-9,5,-8,2,-8,-4,4,9,4,1,-10,5,2,4,4,1,2,3,-3,-5,1,-3,-5,-4,-4,4,-3,-10,5,-6,1,2,-5,5,-9,10,2,-2,6,6,2,-6,1,1,1,-6,-5,6,-5], dtype = "uint16")#candidate|4158|(192,)|const|uint16
var_4159 = relay.var("var_4159", dtype = "float64", shape = (504, 1))#candidate|4159|(504, 1)|var|float64
call_4157 = relay.TupleGetItem(func_720_call(relay.reshape(call_4146.astype('uint16'), []), relay.reshape(const_4158.astype('uint16'), [16, 4, 3]), relay.reshape(var_4159.astype('float64'), [504,]), ), 3)
call_4160 = relay.TupleGetItem(func_724_call(relay.reshape(call_4146.astype('uint16'), []), relay.reshape(const_4158.astype('uint16'), [16, 4, 3]), relay.reshape(var_4159.astype('float64'), [504,]), ), 3)
uop_4162 = relay.cos(var_4159.astype('float32')) # shape=(504, 1)
bop_4167 = relay.greater(uop_4162.astype('bool'), relay.reshape(call_4157.astype('bool'), relay.shape_of(uop_4162))) # shape=(504, 1)
bop_4170 = relay.greater(uop_4162.astype('bool'), relay.reshape(call_4160.astype('bool'), relay.shape_of(uop_4162))) # shape=(504, 1)
func_3519_call = mod.get_global_var('func_3519')
func_3522_call = mutated_mod.get_global_var('func_3522')
var_4173 = relay.var("var_4173", dtype = "int32", shape = (980, 2))#candidate|4173|(980, 2)|var|int32
call_4172 = relay.TupleGetItem(func_3519_call(relay.reshape(var_4173.astype('int32'), [1960,]), relay.reshape(uop_4162.astype('float32'), [504,]), ), 1)
call_4174 = relay.TupleGetItem(func_3522_call(relay.reshape(var_4173.astype('int32'), [1960,]), relay.reshape(uop_4162.astype('float32'), [504,]), ), 1)
uop_4178 = relay.erf(uop_4162.astype('float64')) # shape=(504, 1)
bop_4180 = relay.left_shift(bop_4167.astype('int16'), relay.reshape(uop_4162.astype('int16'), relay.shape_of(bop_4167))) # shape=(504, 1)
bop_4183 = relay.left_shift(bop_4170.astype('int16'), relay.reshape(uop_4162.astype('int16'), relay.shape_of(bop_4170))) # shape=(504, 1)
output = relay.Tuple([bop_4153,const_4158,call_4172,var_4173,uop_4178,bop_4180,])
output2 = relay.Tuple([bop_4156,const_4158,call_4174,var_4173,uop_4178,bop_4183,])
func_4188 = relay.Function([var_4152,var_4159,var_4173,], output)
mod['func_4188'] = func_4188
mod = relay.transform.InferType()(mod)
var_4189 = relay.var("var_4189", dtype = "float64", shape = (11, 10, 10))#candidate|4189|(11, 10, 10)|var|float64
var_4190 = relay.var("var_4190", dtype = "float64", shape = (504, 1))#candidate|4190|(504, 1)|var|float64
var_4191 = relay.var("var_4191", dtype = "int32", shape = (980, 2))#candidate|4191|(980, 2)|var|int32
output = func_4188(var_4189,var_4190,var_4191,)
func_4192 = relay.Function([var_4189,var_4190,var_4191,], output)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_4213 = relay.TupleGetItem(func_3226_call(), 0)
call_4214 = relay.TupleGetItem(func_3228_call(), 0)
output = call_4213
output2 = call_4214
func_4215 = relay.Function([], output)
mod['func_4215'] = func_4215
mod = relay.transform.InferType()(mod)
output = func_4215()
func_4216 = relay.Function([], output)
mutated_mod['func_4216'] = func_4216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3619_call = mod.get_global_var('func_3619')
func_3621_call = mutated_mod.get_global_var('func_3621')
call_4232 = func_3619_call()
call_4233 = func_3619_call()
var_4247 = relay.var("var_4247", dtype = "float32", shape = (9, 4, 16))#candidate|4247|(9, 4, 16)|var|float32
bop_4248 = relay.right_shift(call_4232.astype('uint8'), relay.reshape(var_4247.astype('uint8'), relay.shape_of(call_4232))) # shape=(9, 4, 16)
bop_4251 = relay.right_shift(call_4233.astype('uint8'), relay.reshape(var_4247.astype('uint8'), relay.shape_of(call_4233))) # shape=(9, 4, 16)
func_3461_call = mod.get_global_var('func_3461')
func_3463_call = mutated_mod.get_global_var('func_3463')
var_4257 = relay.var("var_4257", dtype = "int8", shape = (96,))#candidate|4257|(96,)|var|int8
call_4256 = relay.TupleGetItem(func_3461_call(relay.reshape(var_4257.astype('int8'), [3, 4, 8])), 0)
call_4258 = relay.TupleGetItem(func_3463_call(relay.reshape(var_4257.astype('int8'), [3, 4, 8])), 0)
const_4262 = relay.const([[[5.885279,-4.257577,4.152583,-9.955053,7.141562,-5.243593,-0.878749,7.825004,7.159654,-0.844751,4.463968,-5.203586,7.642649,-1.443495,-9.354956,1.179062],[-2.478374,8.224213,9.506158,6.674252,-7.404596,-3.678471,0.631746,-8.699537,3.617909,5.709413,3.607655,5.784851,1.774448,-8.027587,9.075560,5.054202],[2.055579,7.887235,-4.138064,-1.140435,-2.014316,-9.020010,-4.712922,-4.061284,8.891932,-8.888170,0.367153,3.834547,3.458508,0.966624,5.257779,9.415723],[9.118205,2.649399,1.593839,-9.775852,1.427611,2.782294,2.647361,6.996676,7.707332,2.038117,6.502824,0.761147,3.679935,8.506403,-0.946110,5.985080]],[[-2.739578,6.895630,-5.864211,5.863071,-3.930863,8.762431,7.373701,7.773957,-2.869627,2.370812,5.349994,7.575629,7.954847,-6.478408,7.948012,2.576801],[-5.876855,9.373902,7.617900,-1.824989,9.390117,3.834081,-6.902074,-8.972817,-6.445671,-8.268269,-0.147973,-3.710532,4.660035,8.760823,-9.178847,-8.657698],[-6.307748,-3.816284,-5.756205,3.289741,-2.734739,-6.140810,6.603636,-7.281131,7.890104,-8.085068,-6.273606,4.133258,4.973874,-3.007243,-7.129027,-4.184218],[-4.222369,-4.414359,-7.566758,-9.077918,-1.648578,6.699796,0.342927,7.779405,2.498825,8.833914,-6.941173,1.406607,7.800710,-1.352197,-0.476484,-8.631457]],[[3.084004,4.778517,4.276792,-0.715035,8.497160,5.464852,2.234819,0.277463,-6.480328,-3.815458,5.257256,-2.727789,9.698127,-3.095006,-8.531938,-6.694848],[3.695872,6.728947,-1.094151,0.971313,0.833719,-9.617119,4.640101,5.086214,-1.075239,6.498709,2.556353,2.208303,-3.875270,-0.344557,-0.479664,-0.025896],[7.894415,-4.560407,4.111073,0.084380,9.012555,-4.322469,9.203632,-7.746097,1.403720,6.478565,-3.494786,-8.517936,0.169862,7.395403,1.162876,4.407032],[1.800925,-6.069589,7.595866,5.406290,-7.480350,-8.917166,-5.446243,8.864728,-6.971030,-6.843349,2.395507,5.572681,-8.065448,8.081878,-8.829820,-8.019750]],[[-0.545919,-8.423415,-9.588837,-0.623008,0.530773,-8.347957,-2.792672,-3.663052,-3.692774,9.660574,1.341437,-7.315425,0.991857,1.527056,8.665016,9.645105],[8.183431,5.561173,4.689561,-7.545613,-0.757339,-9.862519,-5.903438,7.496377,-6.843857,9.085673,1.696454,8.000642,3.023599,-5.761649,-2.842664,-3.283508],[-9.825863,0.143745,-4.292943,-4.488089,-3.686603,9.787589,1.058795,9.725914,7.506106,8.643819,9.631089,8.210827,-5.267002,3.591839,8.521902,-4.419890],[3.307455,7.634788,9.622541,8.877414,4.833281,-2.353663,7.119591,-9.551262,-2.714264,-9.614844,-0.762745,-7.551029,4.839616,7.823399,-8.932869,-6.849151]],[[6.165703,7.344770,-4.504676,-2.674720,8.970152,-0.041119,-7.989099,2.394334,0.500675,-6.064344,5.399868,-9.859239,-8.142479,0.555223,0.190188,5.174409],[2.063575,4.393389,9.635852,6.653477,-4.543617,1.357813,-5.303126,-9.139712,-0.847362,4.350242,6.794465,3.594114,3.631491,-7.197300,-9.270999,6.221575],[-5.950834,7.702648,-1.488184,-9.358395,2.883235,-6.820651,-6.668805,3.198020,3.977238,-7.625734,-6.979122,4.503381,-8.676474,-0.757782,6.600949,0.014640],[-7.054809,6.674924,3.910250,9.363373,7.331430,8.985228,-8.928249,3.236391,3.042979,3.924814,9.793686,-5.364970,-7.459889,-7.115025,-0.722158,-0.472992]],[[0.418041,-5.389163,1.395423,2.434513,9.585838,0.674442,8.484811,5.221964,-5.114417,-2.094795,8.774589,-7.155743,2.299982,7.178847,-5.133094,-4.509747],[2.204579,-4.010053,-0.258438,-4.472744,-2.362457,-8.759209,-0.022320,1.965017,-7.331003,-9.951631,-6.843980,9.689713,7.031081,6.213161,-3.644549,5.133330],[-0.437350,6.585306,7.418529,-8.623315,3.265892,7.685110,5.040743,-0.902725,-2.675923,4.535228,6.530924,-2.028093,-8.072238,-3.770922,1.010430,-5.886436],[-4.019379,6.425245,6.094118,2.608678,-5.343839,-0.279086,4.386272,9.094000,6.176165,-0.134305,7.995115,-6.312010,9.418176,8.370319,-4.709071,-8.955267]],[[5.386357,0.729511,-5.565928,5.861615,4.540856,-4.324272,-2.311463,0.646259,-3.677150,7.270315,-5.436213,4.067978,-0.442460,7.826502,5.080304,8.834291],[3.226394,2.432829,-4.982981,-0.252179,5.884756,-7.880031,-1.101387,8.990966,-1.413280,-1.838437,-5.551671,-2.389570,-0.923926,-8.726282,9.531750,-1.130553],[-1.201775,-9.735367,-2.511357,-8.333079,0.499603,-4.523711,-1.885309,4.729926,-0.762902,-2.715323,8.297508,8.920952,-2.932173,8.654961,-3.089927,-6.901094],[-4.297519,9.155224,3.559992,-5.202005,-0.878099,-8.214152,-4.952087,9.006252,2.101991,-0.074662,-3.657769,7.430129,2.809945,2.541858,-6.266677,-4.501090]],[[-5.681231,-0.186231,0.784201,0.459153,6.485022,5.292623,9.211556,-8.439237,-6.307123,7.034672,-5.427713,7.479415,-3.569484,5.279598,-0.204386,4.148678],[7.145274,-8.850059,-2.301312,0.099602,0.692523,3.114011,4.631547,4.714703,-0.912125,7.377849,5.969646,-8.872428,6.939669,6.339122,3.513485,-2.955383],[-5.553855,-8.162711,-5.832419,-6.186136,-7.984876,-2.988961,9.973548,9.157447,4.787396,-9.736853,3.612259,-1.292233,3.131693,-7.051016,-0.435290,7.367103],[4.160356,2.221589,7.220442,8.213813,3.417978,-1.805419,4.664388,1.968090,-1.452160,-5.079065,-9.495112,-9.370293,-1.965652,6.953895,5.887441,8.299629]],[[-0.895146,9.498425,-0.233655,8.321109,-0.974587,-0.158895,3.526248,-2.176437,1.543323,1.059332,7.421040,4.143720,-3.824807,-5.424811,-4.837571,-0.733525],[-3.328921,-5.909435,-4.916587,7.866692,9.973914,-9.674511,4.257661,-0.794499,9.588983,-0.300117,2.955423,-9.007099,-5.543527,-8.068279,-3.188686,1.032305],[-2.782269,1.423781,1.611658,8.835320,-5.045274,1.230387,8.186031,0.137115,9.119081,3.583753,9.256543,-8.372178,3.600266,-6.895423,9.066034,-2.659036],[-9.756228,-2.012831,-8.633082,-7.576963,-7.178352,-5.338361,-3.637123,-3.602198,-0.702099,-6.535158,-5.914452,4.034064,9.725880,4.140191,-7.984411,-0.616847]]], dtype = "float32")#candidate|4262|(9, 4, 16)|const|float32
bop_4263 = relay.floor_divide(call_4232.astype('float32'), relay.reshape(const_4262.astype('float32'), relay.shape_of(call_4232))) # shape=(9, 4, 16)
bop_4266 = relay.floor_divide(call_4233.astype('float32'), relay.reshape(const_4262.astype('float32'), relay.shape_of(call_4233))) # shape=(9, 4, 16)
bop_4274 = relay.less_equal(var_4247.astype('bool'), relay.reshape(call_4232.astype('bool'), relay.shape_of(var_4247))) # shape=(9, 4, 16)
bop_4277 = relay.less_equal(var_4247.astype('bool'), relay.reshape(call_4233.astype('bool'), relay.shape_of(var_4247))) # shape=(9, 4, 16)
output = relay.Tuple([bop_4248,call_4256,var_4257,bop_4263,bop_4274,])
output2 = relay.Tuple([bop_4251,call_4258,var_4257,bop_4266,bop_4277,])
func_4281 = relay.Function([var_4247,var_4257,], output)
mod['func_4281'] = func_4281
mod = relay.transform.InferType()(mod)
var_4282 = relay.var("var_4282", dtype = "float32", shape = (9, 4, 16))#candidate|4282|(9, 4, 16)|var|float32
var_4283 = relay.var("var_4283", dtype = "int8", shape = (96,))#candidate|4283|(96,)|var|int8
output = func_4281(var_4282,var_4283,)
func_4284 = relay.Function([var_4282,var_4283,], output)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_4312 = relay.TupleGetItem(func_1573_call(), 2)
call_4313 = relay.TupleGetItem(func_1575_call(), 2)
func_4048_call = mod.get_global_var('func_4048')
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4333 = relay.TupleGetItem(func_4048_call(), 0)
call_4334 = relay.TupleGetItem(func_4049_call(), 0)
func_1956_call = mod.get_global_var('func_1956')
func_1958_call = mutated_mod.get_global_var('func_1958')
call_4362 = relay.TupleGetItem(func_1956_call(), 0)
call_4363 = relay.TupleGetItem(func_1958_call(), 0)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_4381 = relay.TupleGetItem(func_1573_call(), 3)
call_4382 = relay.TupleGetItem(func_1575_call(), 3)
output = relay.Tuple([call_4312,call_4333,call_4362,call_4381,])
output2 = relay.Tuple([call_4313,call_4334,call_4363,call_4382,])
func_4398 = relay.Function([], output)
mod['func_4398'] = func_4398
mod = relay.transform.InferType()(mod)
output = func_4398()
func_4399 = relay.Function([], output)
mutated_mod['func_4399'] = func_4399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3348_call = mod.get_global_var('func_3348')
func_3350_call = mutated_mod.get_global_var('func_3350')
call_4548 = func_3348_call()
call_4549 = func_3348_call()
output = relay.Tuple([call_4548,])
output2 = relay.Tuple([call_4549,])
func_4561 = relay.Function([], output)
mod['func_4561'] = func_4561
mod = relay.transform.InferType()(mod)
mutated_mod['func_4561'] = func_4561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mutated_mod.get_global_var('func_4561')
call_4562 = func_4561_call()
output = call_4562
func_4563 = relay.Function([], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4587 = func_1869_call()
call_4588 = func_1869_call()
output = call_4587
output2 = call_4588
func_4603 = relay.Function([], output)
mod['func_4603'] = func_4603
mod = relay.transform.InferType()(mod)
output = func_4603()
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mod.get_global_var('func_4093')
func_4095_call = mutated_mod.get_global_var('func_4095')
call_4643 = relay.TupleGetItem(func_4093_call(), 0)
call_4644 = relay.TupleGetItem(func_4095_call(), 0)
func_1825_call = mod.get_global_var('func_1825')
func_1832_call = mutated_mod.get_global_var('func_1832')
var_4646 = relay.var("var_4646", dtype = "uint64", shape = (28, 32))#candidate|4646|(28, 32)|var|uint64
const_4647 = relay.const([[1.039375,-3.853650,-6.201221,-2.859629,5.862868,7.300726,-2.908183,4.653954,-5.411200,8.606975,0.401638,4.274983,-4.378703,7.368213,5.748719,8.399824,-3.894139,0.039822,7.527557,7.349451,-0.444327,-7.756367,9.508745,-7.677415,-8.826380,-4.123969],[7.860599,-1.680974,-6.466261,-4.285935,-5.996675,-3.398480,0.678414,6.715471,9.269740,1.494711,3.166204,8.911442,-6.092639,-6.713762,7.927162,-7.690286,1.120459,0.570962,-5.973051,5.411736,7.239710,1.720486,2.954309,7.836865,4.243147,-8.387275],[-4.101822,1.653173,8.487964,4.385926,9.282753,2.068894,-6.385237,-2.808141,5.543099,0.380222,-6.084329,4.202527,-9.329173,-3.442396,-8.939318,-2.026487,-4.569260,2.784234,-2.097155,6.107132,-1.526143,-2.800626,6.923014,2.013439,-8.507707,7.515245],[9.605516,-9.973149,3.827453,5.426341,8.922540,-3.606818,-5.686713,-8.776857,8.490334,-7.051624,-5.580307,-2.261591,0.509322,-3.284328,7.925372,-1.911419,8.977642,-6.178749,-5.792165,-8.422162,7.475220,4.098914,-7.615849,-6.251552,6.210616,2.135351],[4.034706,3.409743,8.561812,-0.018327,6.024624,1.471896,1.972297,4.350691,9.774467,-0.084685,2.706263,-7.283239,8.529128,1.898844,9.433502,-2.221802,-9.231572,-4.405165,-0.042722,-6.054006,3.028669,-5.228515,4.747707,-6.069840,3.172842,-2.419167],[0.027557,-2.939033,7.495728,2.885600,-2.127179,-2.599744,-3.996101,-8.023037,5.537142,-6.586603,-7.231061,-2.747578,2.311605,-6.295840,7.757224,4.378239,-8.362810,5.911175,2.960075,-9.736957,-8.319020,-0.050488,5.277465,3.909700,-0.917909,-7.856161],[-7.952977,-9.094910,0.053011,-5.111064,2.275831,1.640626,0.537652,-2.262760,-6.503844,-4.275167,2.825026,7.732846,4.308902,3.714794,-0.426595,-9.864221,-2.667215,-0.572927,-5.311837,-5.811676,-8.863360,5.015874,-0.763908,-7.887177,-2.541769,-1.995162],[-3.649350,8.107752,-4.898706,6.657522,-8.828953,-4.740647,-0.763134,-2.721619,4.235305,1.301693,2.880668,-6.014931,-2.085015,-1.424070,5.949805,-3.002118,-1.493921,-1.443796,-3.572141,9.849943,2.620692,-8.201007,2.509930,-7.693303,1.732982,-9.419257],[-7.745825,2.975338,-8.626357,-4.826528,-9.915757,0.985724,-2.725314,8.825906,2.825998,2.305291,-8.375083,-8.561479,-6.415212,6.758032,-1.838847,-2.180143,-9.720573,2.135767,2.206728,-7.251069,-5.938895,-4.435180,8.924750,-6.259639,9.307559,-4.879324],[0.805722,2.878426,6.046899,6.688921,-4.042743,2.459677,0.117447,5.704552,-8.958520,-7.452022,5.485118,7.037596,3.777906,0.978709,3.057235,-2.965983,3.593513,-5.357195,-3.117387,-6.788525,-4.286551,2.722084,7.435374,-7.029057,6.982103,-1.562191],[-6.940465,8.731702,3.653319,-5.953516,-3.495706,6.187613,-8.915454,9.813550,-6.113772,4.536948,9.441454,-6.944649,-5.583138,-8.819656,-8.345685,-8.353940,-7.312428,-4.410998,2.452860,-0.247622,1.777283,6.479952,2.125479,5.858169,-8.680523,-9.610990],[7.702885,-9.974594,-2.503482,7.104856,-8.356976,0.093792,-1.994923,-4.033256,-3.256173,5.190391,8.449748,9.975189,6.228348,-7.046952,5.907073,4.659352,8.010531,-4.479835,-1.820827,-3.916104,-6.665512,8.793079,0.377980,-5.892548,-8.004180,-9.997465],[-9.932041,6.068908,-5.562684,0.744134,-4.200034,-7.826891,2.840391,9.171463,0.411188,-7.833710,0.034414,-6.386534,4.960191,-5.954435,-5.274724,8.359375,-0.339900,2.820360,-5.702192,9.725063,6.874723,7.595030,-3.651392,0.390668,-9.275988,6.717888],[0.408768,0.147567,-2.208510,0.326085,-2.039493,4.043207,1.635590,6.245171,-5.613635,-8.856434,-2.990257,-3.988678,3.770298,-7.988209,9.032018,5.066967,0.341220,9.844373,0.071444,7.879228,-5.510739,-2.971746,9.959069,6.317234,-0.952954,5.690072],[0.595526,-6.994221,9.190909,3.698384,-2.089254,-4.325729,0.120727,-5.525252,-8.141128,-8.712799,-1.634635,-6.377680,-8.836765,3.991683,9.611327,4.671675,-8.752957,9.865630,8.177330,-6.929885,-3.288511,9.341494,2.413708,-1.470103,4.881182,-6.585371],[7.909601,1.950547,-7.503052,3.591628,-2.747339,7.719731,-7.185154,-8.447093,6.914539,5.825120,8.469201,8.927526,-2.915673,-0.308557,-7.074820,-8.983433,2.774247,3.615309,-8.294071,-4.265870,3.127791,-6.628144,-9.650001,4.562924,6.235028,4.742744],[-4.938766,0.950220,-3.972723,-5.539241,-9.906803,9.528143,6.040992,-6.632904,0.801297,-5.419129,-1.420051,-2.229702,6.234185,-3.175100,-0.373939,-4.698279,-6.780210,-4.847425,1.819221,7.465165,3.177662,-3.791164,4.099269,-4.494056,8.292711,7.534624],[4.023981,-2.537876,-3.065950,-4.482467,3.679907,1.741525,-9.176273,-4.499819,-4.379484,-2.320529,-2.154111,-0.883600,9.007647,-3.722116,8.205246,-9.090458,7.106146,-7.200172,2.557552,0.385588,0.670088,-1.062150,-3.079130,9.303736,-8.083781,-5.412094],[-6.642983,-7.764017,4.707031,-0.342068,-9.149227,-4.783273,-6.994973,3.678586,0.504775,-4.551683,5.123459,-5.412705,5.521481,4.663141,3.265153,2.857983,-3.812889,2.037472,-5.624435,5.419745,-7.815599,3.548409,-6.054190,-4.520826,9.836168,-0.495644],[8.631427,-9.532496,-8.517555,-4.126393,9.685453,-9.500464,7.872946,8.592615,4.205028,6.596989,-9.071307,-6.921369,1.419202,-4.871329,8.859930,-7.806228,-6.231633,-0.372255,-2.131607,-6.263042,-0.577545,0.964337,0.860678,4.532047,5.198112,-6.831387],[4.646374,-2.285466,-9.399135,9.893353,5.717044,-2.682762,-3.192241,1.652630,-0.665855,-4.930102,-9.674700,-1.650885,7.772942,-0.510465,-8.360142,-1.038727,-1.362517,7.309997,-9.216558,-2.778105,-6.146917,7.454256,9.394531,0.754792,-7.049692,-1.224163],[3.112336,-3.008460,8.729926,-8.404787,-9.753437,8.987891,3.995540,5.545267,-7.442884,-7.826275,-3.310979,7.532728,-1.260496,6.718182,8.829269,1.190594,4.881517,8.191650,-2.240951,-2.692854,-5.647536,9.722171,-5.557176,3.208657,4.044202,1.250814],[6.441972,6.349494,2.068570,5.222451,8.706805,-2.083317,-7.849924,5.855690,3.558909,5.668681,4.193501,7.595917,9.601001,-9.045992,-6.576185,2.138236,8.536194,1.056464,6.885485,0.195739,5.609427,2.313844,0.858279,9.455905,5.083432,-0.641996],[5.822356,-1.346130,3.963281,5.200075,9.343630,4.568241,-9.792364,0.464927,6.358586,-0.507979,-8.113532,7.114179,-8.443566,-8.003091,9.164976,-1.404718,5.100080,-9.420286,-1.798480,-4.289016,-4.192029,-9.456487,2.861968,-3.165772,-6.670052,4.521841],[1.756849,-3.979172,0.404477,1.151377,1.684618,-7.511260,-5.902570,7.676685,-2.195742,-4.717408,-9.828362,4.615972,7.300896,-2.894861,-3.104642,-5.792771,-9.876074,0.085759,-9.692512,5.182095,8.714994,-2.668655,-4.805086,-9.053908,0.989447,2.279439],[6.213645,1.948532,-5.317148,-2.443489,-5.381923,-5.918454,3.145993,-2.057785,-3.631568,3.755886,6.287190,-3.088982,-8.668588,8.427820,0.375257,6.480191,2.325020,3.745642,-8.503512,9.655080,5.330425,-0.931269,2.464371,-4.267991,-1.672712,1.242146],[5.425724,6.564081,-4.148774,8.468365,6.631789,-5.915605,-7.370823,-9.723682,5.872982,5.891149,-1.102916,4.908872,-3.519468,8.714336,-7.719305,6.783456,-4.861437,3.212622,8.957344,4.124001,1.033071,2.731343,9.820020,-7.201658,9.322057,7.012365],[1.114893,-6.565234,-0.818155,-6.803108,-1.288552,-5.825135,-5.265724,-3.491990,5.441049,-9.543456,6.937857,-1.006386,-8.771471,-9.733985,-9.723212,0.505289,-1.564071,6.520817,4.086019,3.239733,0.591777,2.135194,1.531454,6.161549,5.184634,3.333721],[-0.179222,6.171107,8.824417,-1.468740,-7.975888,2.129036,9.128870,8.610540,1.796649,5.154432,8.549081,-2.357921,-9.395330,1.365996,-4.565151,-1.506098,-4.890818,7.065726,9.046620,6.371048,8.943838,8.233620,8.840408,2.791220,8.425998,-0.199814],[2.426199,-8.847135,-2.004308,1.862919,-0.459318,6.348441,-9.609560,-2.053345,2.762368,4.604879,4.547863,1.510060,5.372496,4.043940,3.519048,7.584050,-0.989186,-8.990044,8.304284,4.297435,-1.592746,-4.696024,4.604056,-5.332260,-5.044136,0.648601],[-0.220770,5.035230,-4.556631,1.419958,-1.092578,-1.243609,-4.645705,8.808248,2.428207,2.172270,-5.261946,-8.148919,4.496526,-2.724694,-9.623697,4.784775,-4.670249,-9.771945,8.696855,3.146693,5.971262,-9.382330,-2.588383,9.833980,9.366490,3.297621],[4.111367,8.045284,6.231720,-4.276515,-3.828333,-7.649404,-5.567523,8.485688,-9.995989,2.653410,-1.226632,6.763663,-2.415740,-7.672390,-0.907915,8.183320,1.985500,-1.659352,-1.018419,-6.426349,-4.061675,6.860362,-7.829176,-5.861598,6.551378,-8.277806],[8.217322,8.661015,-6.273473,2.664401,4.860124,-6.238064,-9.668873,3.808232,-2.019252,6.287049,2.139802,8.038166,6.811053,-0.173519,-3.755588,-0.356683,6.956654,0.092035,-4.302718,-8.573891,1.506016,-0.565382,8.605884,-7.369051,-2.617913,-4.148539],[-0.153967,1.015944,2.447297,4.050844,-4.457518,0.838110,9.125817,8.805440,-0.642779,0.788690,8.690356,8.569659,-5.136181,-0.584861,5.431419,-3.143484,-6.125960,7.039865,9.189433,9.599120,-3.985272,9.912713,1.373894,6.774010,-7.868096,9.974875],[8.541583,-2.272697,-1.691188,-7.874968,5.381490,-0.132601,-0.296087,1.039375,-6.045000,1.000182,-3.558582,-9.360765,9.950800,8.155504,-1.065901,0.713806,6.351881,0.236370,-5.032374,4.217945,-5.261087,-5.933172,3.089420,9.198905,-0.588984,-2.026522],[6.557088,2.598000,4.006346,0.202467,6.185196,0.359149,-3.674984,1.878664,-6.195173,9.794501,-9.687963,0.284442,1.052019,1.713339,6.406792,-0.432590,-7.502306,7.327087,-8.397893,6.193027,-2.514015,-2.690492,-7.366994,5.166559,-4.352735,7.524000]], dtype = "float64")#candidate|4647|(36, 26)|const|float64
var_4648 = relay.var("var_4648", dtype = "float64", shape = (504,))#candidate|4648|(504,)|var|float64
call_4645 = relay.TupleGetItem(func_1825_call(relay.reshape(var_4646.astype('uint64'), [14, 8, 8]), relay.reshape(var_4646.astype('uint64'), [14, 8, 8]), relay.reshape(var_4646.astype('uint16'), [14, 8, 8]), relay.reshape(var_4646.astype('int64'), [14, 8, 8]), relay.reshape(const_4647.astype('float64'), [936,]), relay.reshape(var_4648.astype('float64'), [504,]), ), 5)
call_4649 = relay.TupleGetItem(func_1832_call(relay.reshape(var_4646.astype('uint64'), [14, 8, 8]), relay.reshape(var_4646.astype('uint64'), [14, 8, 8]), relay.reshape(var_4646.astype('uint16'), [14, 8, 8]), relay.reshape(var_4646.astype('int64'), [14, 8, 8]), relay.reshape(const_4647.astype('float64'), [936,]), relay.reshape(var_4648.astype('float64'), [504,]), ), 5)
bop_4651 = relay.logical_or(var_4648.astype('bool'), call_4643.astype('bool')) # shape=(3, 4, 504)
bop_4654 = relay.logical_or(var_4648.astype('bool'), call_4644.astype('bool')) # shape=(3, 4, 504)
uop_4660 = relay.sqrt(bop_4651.astype('float32')) # shape=(3, 4, 504)
uop_4662 = relay.sqrt(bop_4654.astype('float32')) # shape=(3, 4, 504)
output = relay.Tuple([call_4645,var_4646,const_4647,uop_4660,])
output2 = relay.Tuple([call_4649,var_4646,const_4647,uop_4662,])
func_4666 = relay.Function([var_4646,var_4648,], output)
mod['func_4666'] = func_4666
mod = relay.transform.InferType()(mod)
var_4667 = relay.var("var_4667", dtype = "uint64", shape = (28, 32))#candidate|4667|(28, 32)|var|uint64
var_4668 = relay.var("var_4668", dtype = "float64", shape = (504,))#candidate|4668|(504,)|var|float64
output = func_4666(var_4667,var_4668,)
func_4669 = relay.Function([var_4667,var_4668,], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_4680 = func_4215_call()
call_4681 = func_4215_call()
uop_4695 = relay.cos(call_4680.astype('float32')) # shape=(252, 2)
uop_4697 = relay.cos(call_4681.astype('float32')) # shape=(252, 2)
func_1825_call = mod.get_global_var('func_1825')
func_1832_call = mutated_mod.get_global_var('func_1832')
var_4699 = relay.var("var_4699", dtype = "uint64", shape = (2, 448))#candidate|4699|(2, 448)|var|uint64
var_4700 = relay.var("var_4700", dtype = "float64", shape = (936,))#candidate|4700|(936,)|var|float64
call_4698 = relay.TupleGetItem(func_1825_call(relay.reshape(var_4699.astype('uint64'), [14, 8, 8]), relay.reshape(var_4699.astype('uint64'), [14, 8, 8]), relay.reshape(var_4699.astype('uint16'), [14, 8, 8]), relay.reshape(var_4699.astype('int64'), [14, 8, 8]), relay.reshape(var_4700.astype('float64'), [936,]), relay.reshape(call_4680.astype('float64'), [504,]), ), 3)
call_4701 = relay.TupleGetItem(func_1832_call(relay.reshape(var_4699.astype('uint64'), [14, 8, 8]), relay.reshape(var_4699.astype('uint64'), [14, 8, 8]), relay.reshape(var_4699.astype('uint16'), [14, 8, 8]), relay.reshape(var_4699.astype('int64'), [14, 8, 8]), relay.reshape(var_4700.astype('float64'), [936,]), relay.reshape(call_4680.astype('float64'), [504,]), ), 3)
func_2976_call = mod.get_global_var('func_2976')
func_2980_call = mutated_mod.get_global_var('func_2980')
var_4710 = relay.var("var_4710", dtype = "int8", shape = (84,))#candidate|4710|(84,)|var|int8
call_4709 = relay.TupleGetItem(func_2976_call(relay.reshape(var_4710.astype('int8'), [3, 4, 7]), relay.reshape(call_4680.astype('float64'), [504,]), ), 5)
call_4711 = relay.TupleGetItem(func_2980_call(relay.reshape(var_4710.astype('int8'), [3, 4, 7]), relay.reshape(call_4680.astype('float64'), [504,]), ), 5)
bop_4723 = relay.power(uop_4695.astype('float64'), relay.reshape(call_4680.astype('float64'), relay.shape_of(uop_4695))) # shape=(252, 2)
bop_4726 = relay.power(uop_4697.astype('float64'), relay.reshape(call_4681.astype('float64'), relay.shape_of(uop_4697))) # shape=(252, 2)
output = relay.Tuple([call_4698,var_4699,var_4700,call_4709,var_4710,bop_4723,])
output2 = relay.Tuple([call_4701,var_4699,var_4700,call_4711,var_4710,bop_4726,])
func_4728 = relay.Function([var_4699,var_4700,var_4710,], output)
mod['func_4728'] = func_4728
mod = relay.transform.InferType()(mod)
var_4729 = relay.var("var_4729", dtype = "uint64", shape = (2, 448))#candidate|4729|(2, 448)|var|uint64
var_4730 = relay.var("var_4730", dtype = "float64", shape = (936,))#candidate|4730|(936,)|var|float64
var_4731 = relay.var("var_4731", dtype = "int8", shape = (84,))#candidate|4731|(84,)|var|int8
output = func_4728(var_4729,var_4730,var_4731,)
func_4732 = relay.Function([var_4729,var_4730,var_4731,], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1643_call = mod.get_global_var('func_1643')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_4772 = relay.TupleGetItem(func_1643_call(), 1)
call_4773 = relay.TupleGetItem(func_1644_call(), 1)
func_4188_call = mod.get_global_var('func_4188')
func_4192_call = mutated_mod.get_global_var('func_4192')
const_4782 = relay.const([2.187293,-3.578487,-3.528335,-0.109807,3.808055,-5.910798,5.774702,-9.864627,-5.795850,-9.687403,2.888068,-4.551955,0.204926,-2.392988,-5.998878,-9.915795,-7.108927,-3.452807,4.251067,5.013645,-3.608648,-4.515508,7.826421,-2.117634,-3.235235,-8.422969,-3.643424,7.604158,3.401689,-0.930386,2.458061,2.389206,2.139594,-7.937022,-6.721951,0.425026,9.114947,7.793481,-3.795980,-6.029211,-5.814915,7.774814,5.336885,-4.819728,-0.595648,-8.512247,-1.099016,1.917884,4.148168,-4.176488,2.754903,-5.211985,-1.161095,5.018522,1.691089,5.216685,4.534780,-2.077295,9.413478,4.077886,-3.688469,3.618615,8.997305,-5.059869,-8.544258,9.861568,1.963328,-0.551199,9.805376,-9.693554,6.933122,-7.402946,-7.449568,2.206072,-9.773081,7.522325,-1.002928,0.027793,-0.010528,-7.048081,-6.907953,-1.611580,5.000868,0.020366,0.081149,5.243255,7.467391,6.819681,9.664126,7.764545,4.580867,-4.461411,3.162442,7.362514,0.782910,-8.838309,5.015378,3.725082,8.802890,5.102355,9.291610,9.213792,3.784074,-9.828325,3.494421,-2.974872,5.688161,-2.070890,-7.415152,-6.999204,9.866643,4.187823,3.814801,3.096284,-0.625509,0.237405,-7.721026,-1.755794,4.594304,-8.769096,6.134843,8.601980,2.926791,9.781434,-8.240266,5.950298,1.041095,-0.285195,-1.419061,8.541159,7.658854,-6.242147,-5.372457,0.659705,3.416771,-2.267149,-8.300565,2.175872,-3.995612,3.521933,-6.271190,-6.609858,9.513708,9.745127,9.143403,-6.814915,6.557792,-3.966234,-7.357076,-0.089006,2.997760,-8.344853,-9.900366,8.743738,-2.088134,5.083036,4.193132,-0.049792,7.227119,-8.525516,8.187602,1.245423,8.611531,-5.642647,2.501933,-7.710467,2.391229,-9.778495,-9.574311,-9.821561,-7.509856,-0.966813,-9.577482,-8.670880,-4.671142,-5.559706,-6.098860,-5.520750,5.980747,0.849651,5.195535,9.356250,-8.048039,5.939282,2.130224,4.661716,9.685084,7.012725,5.365480,6.674015,2.870930,6.843307,9.164426,4.667985,-6.567057,2.610465,-5.851219,-8.566198,-6.480336,-4.350767,-6.576876,7.176795,9.299143,3.718342,0.369580,-8.597462,-3.602845,-3.100394,3.659064,-1.202108,-5.464168,-1.012831,-7.618568,4.142000,-5.409025,-9.604575,7.903734,-4.581757,-8.034391,4.857728,2.138831,-2.575700,7.495662,9.599841,8.170380,-2.572138,-3.980962,-5.965752,-6.945570,9.901871,1.187299,8.195135,-8.337397,1.655551,2.027833,-8.534999,-4.496016,-9.175060,6.256094,0.336654,1.927847,-5.253234,-3.496715,-0.492081,-1.217900,6.898802,2.322641,-2.078755,-6.751965,-2.686744,3.686542,-7.078024,-0.416652,6.796209,9.918173,-2.594755,5.561705,-2.388865,9.593085,-9.703660,-7.076766,-4.319389,-9.811591,6.918873,-0.225011,-0.085194,-8.769318,-0.130964,4.031881,-9.806986,-0.199882,2.709089,7.968686,2.596751,-7.706300,-1.242123,4.136794,-7.852816,-7.618474,-1.253876,1.982272,-9.107536,-5.745478,-4.996294,-7.207955,-4.209346,6.571202,-4.089867,9.911301,-4.389422,8.852866,-4.092299,4.078486,-0.482013,8.464689,-7.909390,7.216684,-8.700688,0.409024,1.781373,-6.780637,-2.242129,8.840111,-0.831253,-3.186978,-0.492825,-9.012912,-8.890299,5.247818,6.470033,-6.910750,-8.219040,-2.622926,6.684794,3.827129,5.059335,-1.640916,-0.086737,8.684542,-4.937550,5.254203,5.764312,6.471413,7.789917,2.656770,4.875279,-8.847036,4.646632,2.822967,9.192431,-1.991567,-5.958811,-3.314234,-9.902443,7.069447,-7.651873,-6.526414,-6.263391,9.215852,-1.823768,-2.391899,-7.555146,5.391922,4.586574,-5.385474,-7.923391,-7.542025,3.128624,3.625418,-1.030132,-1.582822,7.172394,-0.835543,1.421659,9.064824,-7.643213,5.437096,-9.616436,8.470350,6.406075,-2.496331,-9.521132,-3.278018,-7.767173,1.688712,0.915307,0.767795,-1.919489,-2.989008,1.993918,-0.371990,-2.988151,0.853075,-3.979382,-8.915339,-3.361407,3.987233,6.108122,4.288029,1.710557,-6.533972,-5.265090,1.036119,-7.920981,-3.326023,4.217371,5.134464,5.070401,5.616540,7.196949,1.315392,-0.365214,-4.887910,0.317448,8.324940,8.874104,0.368855,5.290878,-3.003964,-8.531991,-7.849570,2.862637,3.948354,-6.837671,0.261371,6.593162,9.457160,8.333877,8.296015,4.806348,-2.169006,4.783858,2.306007,-2.564912,-1.061452,-7.118246,0.254479,-5.817746,-1.643069,1.187180,9.602328,9.630249,-4.265662,-7.450387,4.235635,1.895559,-8.690166,6.084261,5.373187,-8.865462,-5.565937,-4.419874,-9.002107,3.856802,9.182619,-8.616675,9.088880,-3.834256,2.280563,3.737140,-6.442099,-6.571168,6.600594,-4.604296,5.024275,-0.992468,-5.777016,2.271645,-6.518376,3.406038,2.503950,-2.801049,1.809096,2.995340,2.130671,7.105097,0.660014,9.956927,1.355093,8.393685,-0.990559,4.984091,0.224344,7.371201,5.598875,3.471724,3.234539,8.142197,-5.627988,8.973395,5.817760,-2.285149,-8.230188,-1.566305,2.846362,-4.407427,0.692181,-7.384700,1.948982,-5.128806,7.810792,0.431255,4.276564,5.361109,4.855516,-1.593244,-7.402228,2.880001,-9.067355,-8.224777,-5.868226,8.938095,-1.768617,-9.713911,2.604031,-0.854502,-3.542379,2.198045,-8.020433,-7.498175,3.494969,1.450119,9.443942,-7.333599,-7.154532,8.311164,-9.104172,-7.885734,0.629754,-8.804296,-4.938186,7.098523,-3.945889,-0.417005,2.043785,4.845694,9.617281,-4.735761,2.860883,-7.263645,-3.415812,-9.309054,-3.907164,1.131230,5.608039,3.302754,9.554853,5.242759,2.673090,-9.970820,-3.673089,-6.390284,-3.244757,-7.256839,1.821556,1.038704,-7.343020,-8.147021,8.285564,-6.379425,6.739200,-0.478409,-2.786069,4.527384,4.826761,4.909892,9.557795,-9.604804,-8.075622,9.446802,8.410284,5.185993,4.547760,9.603668,-7.332821,1.944553,9.195008,-7.177849,1.892441,8.924299,3.316465,-4.497902,-4.955468,5.524467,0.116667,3.693937,7.816701,8.162692,-0.789283,2.436218,-6.390582,5.808351,-6.281359,-8.996458,0.598148,6.460335,-1.519578,6.627576,-5.190352,8.160152,6.231626,-9.626542,-2.158706,9.735883,-5.302758,3.607415,-6.317914,-0.384399,-6.103988,-8.913971,4.373752,-6.246930,-3.741081,-5.218764,-2.884944,-9.233105,-2.108547,5.978438,-4.211554,-8.699672,1.582641,-5.157030,-9.708225,0.889937,6.962639,-7.306339,2.997990,-9.833188,-7.501319,-8.422435,-1.432691,-0.013839,7.212457,5.559310,0.587506,1.200169,3.905267,-0.076286,-5.641699,-9.607781,6.138072,-3.469128,-0.606512,-7.893382,-8.893332,9.491267,-7.986070,5.890575,7.276190,7.159304,-5.565165,-8.267946,-0.256874,4.965513,-5.582054,-1.252604,-1.146587,-0.575906,5.204722,2.462941,4.277443,8.109361,2.098490,4.959497,2.964501,4.349848,8.316292,-0.116731,-7.086806,8.339050,9.904108,-8.614100,-8.089451,-4.133580,-1.423774,7.871363,2.258049,5.623101,-7.109467,0.804108,7.085692,9.483263,-9.204593,2.561303,-9.877046,0.121576,-8.613479,2.577748,-8.360045,7.395070,-4.543363,-7.192624,1.098477,-8.195049,9.786647,2.021598,-9.569831,9.870335,-4.298587,4.041937,7.258728,5.014311,-2.699989,5.268633,-7.896618,0.824673,1.616763,-6.122935,2.736370,-7.534925,3.534118,-1.994087,7.047409,-9.686734,-2.634302,-5.609860,2.514474,3.325453,-4.486963,-8.951617,9.927228,2.191078,-1.606131,0.157099,-0.951264,-3.017041,-0.646463,5.963811,-2.381334,7.113299,1.449684,2.752048,6.632968,8.523335,7.997279,5.871257,2.606846,2.607098,-0.777952,-8.325791,0.490722,-8.018607,6.322387,2.332722,-4.134660,-9.974701,-7.503621,-6.725480,-9.934931,7.902833,5.816224,5.099933,-5.222542,-5.956057,3.052559,3.819203,4.305067,-5.273443,-3.131821,5.517227,8.151948,-1.299630,3.092962,2.350177,-9.751490,0.181761,4.694615,1.408323,2.148150,5.738676,-2.175811,5.878506,-4.958073,-8.791649,2.025844,1.054032,6.401309,-6.579462,-9.705377,-3.958317,1.928885,4.735745,-8.376815,-0.030303,-3.774547,6.903760,-8.333077,9.435580,-6.281691,3.828846,1.333062,-5.734500,2.553589,8.702508,9.362659,-8.338545,9.613562,5.349803,-4.491426,5.542700,4.812143,4.585355,-9.382856,7.147699,-0.595137,-3.269981,6.236849,-6.897913,-2.975469,3.798136,-1.082230,-1.519871,1.423335,2.198621,5.399661,-4.479691,9.050169,-6.066719,-3.579414,9.506178,2.046220,-2.252581,-6.758913,9.408991,-2.583599,-5.548397,-5.037432,-0.322654,9.880183,-3.946311,7.278204,5.343287,-8.074854,-0.355691,8.912761,-9.158372,1.188364,-5.489853,3.193259,-9.108593,-2.339498,-7.626289,8.474034,-9.009283,9.244455,0.038956,2.581762,7.991337,9.330005,9.904571,8.163161,9.817407,-3.785336,4.367623,7.741698,-7.223394,-0.997894,-6.484435,5.989841,-2.463876,4.184448,7.718452,3.389755,1.713973,-2.717753,7.909047,-7.428239,4.895640,-2.572947,-5.452427,-4.103844,4.140410,-6.005047,3.951359,-4.024605,-7.000196,6.796061,9.059026,-2.918458,6.470526,6.739337,5.924597,3.145163,-6.269730,0.060536,3.509186,0.465153,-6.555970,1.829821,-9.384821,-9.188023,5.791538,-2.981625,-6.517024,8.536648,-0.127558,-8.589383,-5.157978,-2.126614,-5.780235,-3.498401,0.151371,-7.564011,0.796921,3.150093,-5.481059,-0.565556,-4.223867,-3.948664,9.829240,-1.638527,-6.345847,6.380000,8.844400,1.243023,0.184713,0.816676,-6.192541,0.024826,8.092814,1.833956,-4.168138,-2.267234,-7.992699,2.808357,-6.659197,8.400276,-8.655712,-3.882988,-5.018699,7.715461,5.406343,6.708649,8.708258,8.283368,3.912890,-4.355305,-2.476884,-8.983235,8.143869,-2.109964,-3.298214,-2.624624,3.541617,-8.757204,-9.502825,6.074171,-5.961568,4.449040,1.748119,5.294261,0.680109,-6.050731,-2.351710,1.970707,-4.906495,3.569198,1.100504,-2.193378,-6.990184,0.656467,-3.049340,-2.973165,6.292280,-9.269809,-9.903518,0.482382,4.044816,8.239922,9.271185,6.640705,3.561934,-1.934166,-5.155311,2.845962,2.791079,-9.470380,1.888698,-0.896980,-8.318852,-1.871106,-3.500166,3.823321,1.396549,9.670819,9.758049,9.356362,-9.835238,6.774544,-3.574836,9.157893,6.675450,8.534483,8.678919,3.760192,7.933584,-9.582655,-1.257470,1.914688,9.890252,-8.580790,-8.972574,1.667128,9.332371,8.596446,5.271129,7.704263,-9.766129,2.537638,-6.901269,-9.499291,-5.876862,-8.878890,-8.607565,9.469413,-6.753168,-8.583126,3.599814,5.687882,-6.719586,-4.001955,-6.099611,4.298653,-4.448518,-5.104208,3.432605,-0.408795,2.846704,-0.459012,0.458628,8.948646,2.558639,-1.093562,9.546111,6.678195,-6.277882,2.799025,1.422949,-6.267031,-0.538466,4.402672,9.859284,4.947968,-1.940446,-6.582724,4.789392,7.018831,6.037471,4.934446,-0.757194,-2.779913,-6.026358,9.961016,-2.084736,-0.416786,-5.844380,7.725088,5.664755,-0.113281,-2.214198,0.193786,3.532039,3.845706,-9.131087,0.647744,2.388094,-7.612478,-6.846519,-8.687440,3.735226,4.110718,-4.870205,3.151270,0.060217,7.076236,-8.285091,-5.413612,2.121514,-2.303427,-8.697828,-1.763469,3.071903,-0.180126,-6.914322,2.225005,8.362573,8.071048,7.414361,7.297717,2.172497,-1.704188,-0.342085,2.002527,-0.255027,0.588331,1.458641,4.707223,-4.979196,-8.682173,-1.042087,-6.091771,-4.692539,3.324497,-5.007941,3.183885,6.109125,7.032758,-4.506352,4.493869,-0.438111,2.888213,7.280025,8.612345,-4.700638,-0.502995,7.934843,-9.577273,4.483643,8.069376,3.073227], dtype = "float64")#candidate|4782|(1100,)|const|float64
const_4783 = relay.const([-2.368723,5.296364,-4.147712,-6.812022,0.555345,-6.233180,-9.464897,3.089906,3.391970,3.612665,-6.404586,3.519252,9.159846,-1.735035,9.890497,4.625108,0.937720,2.239668,4.201433,-0.978216,5.160772,4.566624,4.834246,0.312743,2.227481,3.484983,2.862270,8.626285,9.157544,4.153802,-4.388460,-3.085159,9.794035,1.703059,9.238290,3.571297,-1.479752,-6.397418,4.743928,-6.902112,8.008468,0.021298,-4.001245,2.314780,-4.358156,-8.919285,1.520140,5.587646,2.869497,9.536006,-3.368366,1.897524,7.682925,-8.430156,2.316469,5.763319,-5.458472,4.253362,1.376466,-3.963363,7.349441,0.753726,8.854411,3.088474,7.783699,-7.405318,-3.703931,1.657146,4.036266,-4.006771,-7.849247,3.202485,-0.508953,-7.543558,3.581195,-3.950238,3.051376,-4.447971,-9.523146,1.742444,-8.964692,0.693798,-2.077304,5.739807,-4.697069,-6.114166,0.957442,-5.677061,1.352208,-5.727219,8.059050,0.409109,-0.252036,-6.891609,-3.773160,-6.962412,9.864831,6.008164,-0.048901,2.360255,-8.120126,-0.772159,-5.120522,-6.029621,5.520885,-2.973832,1.497177,9.668032,1.050649,-5.921897,-2.980295,0.274339,-8.314485,8.895119,2.786604,1.792578,-2.355781,9.880558,-3.408004,-2.079290,-6.899410,4.461021,3.497941,2.945634,-2.030653,-9.729712,5.066770,-4.906923,-8.553335,-1.731144,-3.687093,2.771071,1.107287,6.311015,-4.497837,9.231122,2.252531,-2.863254,-4.996655,6.779169,5.794891,8.277407,8.322827,-7.060121,2.043474,8.531153,8.137685,-3.357955,-5.369414,-5.004439,-2.379039,9.862066,-6.073976,-7.630345,-8.574152,7.218834,1.355295,-1.166606,-6.819466,-1.297341,5.289958,-1.125084,-7.785006,-6.863542,-6.381762,-7.436304,-3.644249,-2.051262,4.930008,3.072643,6.579486,-8.443457,0.165135,6.370580,0.963601,9.967151,-5.480208,5.923359,6.558431,8.215302,2.681100,-9.043725,4.306917,-2.642442,5.026931,-6.498524,5.853584,1.956456,1.805784,-4.287684,-2.547635,-4.474166,5.586315,5.949327,6.068329,0.350171,-8.582118,-6.365214,-6.901709,8.195337,5.767535,-8.482560,-9.809988,4.308025,7.004585,-6.471283,-1.636381,-8.790549,5.574060,-6.625170,-7.026406,8.244294,4.786122,-7.046009,-8.601229,1.645607,-4.299850,-9.550210,7.942125,-2.567795,-0.284738,-6.995633,7.076583,-6.833449,-8.171519,7.189080,-8.056573,-0.246296,9.208709,-9.010212,-1.923228,4.641966,5.667220,1.990713,7.718894,6.882796,-6.509922,-7.912381,-4.849958,-3.452378,4.653278,8.881589,-7.378090,3.355856,7.582790,-6.343633,9.869272,-7.998077,7.817948,1.719781,2.370661,-6.052402,-3.826101,-7.998130,-1.001868,-2.603533,-0.187226,5.394941,2.042025,-8.945339,-3.551327,-2.030800,-8.242008,1.883067,-0.257546,9.222259,2.834904,3.217225,-4.757133,2.014061,6.969732,1.776079,7.605377,-9.462404,8.944627,4.922699,5.057224,-0.370205,-4.491470,-3.055464,-0.069845,5.939937,7.774178,-1.422894,-2.114524,-9.495717,7.456281,7.918910,2.239419,8.005203,4.054381,-2.110599,-9.016606,-5.126903,-6.946023,7.527704,-3.137614,3.227724,5.550284,-9.640550,9.062925,6.304865,-8.027646,8.746958,2.516517,-3.005866,-5.228970,3.541125,7.855955,3.719331,-6.898746,4.656185,3.256241,0.737214,-9.984734,-9.296690,-5.150656,-9.055675,6.703579,-7.091447,-0.323222,1.111818,-4.824150,0.947082,-9.008510,7.426965,8.267041,-5.376911,6.008097,5.990187,8.770165,9.080940,-6.333745,-1.197765,-9.909080,-7.884782,9.115065,6.153241,-1.285333,-1.246510,3.904459,-2.926613,-3.443797,-8.833863,-3.674985,7.266963,0.596128,4.695343,-1.546794,0.603947,4.675060,5.826947,0.880613,-2.582842,8.363788,3.157762,-9.004264,0.598097,-9.769080,1.163191,3.626482,-5.306740,8.667573,-1.124009,5.275978,-3.310989,9.073656,7.481138,-3.762911,2.069966,-5.102923,9.729894,-0.329008,6.765799,-2.662656,6.353115,1.928341,-4.974721,9.495870,-4.767459,3.990881,1.974245,-6.078221,7.643660,-0.839615,-0.902919,0.668459,-1.787244,-7.583123,-8.607690,-4.909980,5.165965,6.590217,-2.927441,-2.602150,7.361417,-4.169223,8.020723,-5.944396,4.290125,2.271985,3.526888,9.323992,-4.073244,-4.771139,-8.509981,-3.585867,-9.882526,-9.467678,-5.765413,-3.775028,-7.194626,4.035603,4.950609,-0.071984,-3.532143,5.277376,2.017899,0.597470,-7.132743,-1.969717,-5.530590,-2.427122,0.649391,-9.089552,-4.099072,4.458771,7.762048,-3.646399,-8.994158,3.787721,-8.854211,8.442228,-4.150611,0.260409,-4.587843,2.472669,-8.972496,2.231563,-9.110401,7.672813,-8.644649,0.724287,7.356497,4.674880,6.356689,6.981108,6.741914,7.343708,1.330638,-0.176729,-0.084310,3.099767,-3.110340,-4.508215,-8.404998,1.442826,1.342004,-7.622271,-7.295866,-5.809085,-1.167710,6.288367,-8.032212,7.874082,8.955585,2.679916,-4.658542,-9.675524,-6.917675,0.219843,-7.588280,0.724989,-4.157183,8.947289,3.985304,-7.527618,7.769448,4.704455,-2.351886,5.547631,5.465514,3.879221,6.413261,-1.163966,0.735906,-6.361472,-5.747329,4.124077,1.467312,2.144388,-9.710022,6.029482,1.029461,-9.653273,3.332961,8.268991,-6.813178,-7.355721,-3.096895,8.362325,7.238735,7.535451,-5.394129], dtype = "float64")#candidate|4783|(504,)|const|float64
var_4784 = relay.var("var_4784", dtype = "int32", shape = (1960,))#candidate|4784|(1960,)|var|int32
call_4781 = relay.TupleGetItem(func_4188_call(relay.reshape(const_4782.astype('float64'), [11, 10, 10]), relay.reshape(const_4783.astype('float64'), [504, 1]), relay.reshape(var_4784.astype('int32'), [980, 2]), ), 0)
call_4785 = relay.TupleGetItem(func_4192_call(relay.reshape(const_4782.astype('float64'), [11, 10, 10]), relay.reshape(const_4783.astype('float64'), [504, 1]), relay.reshape(var_4784.astype('int32'), [980, 2]), ), 0)
uop_4789 = relay.acosh(var_4784.astype('float32')) # shape=(1960,)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_4796 = relay.TupleGetItem(func_1573_call(), 3)
call_4797 = relay.TupleGetItem(func_1575_call(), 3)
output = relay.Tuple([call_4772,call_4781,const_4782,const_4783,uop_4789,call_4796,])
output2 = relay.Tuple([call_4773,call_4785,const_4782,const_4783,uop_4789,call_4797,])
func_4799 = relay.Function([var_4784,], output)
mod['func_4799'] = func_4799
mod = relay.transform.InferType()(mod)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4800 = relay.var("var_4800", dtype = "int32", shape = (1960,))#candidate|4800|(1960,)|var|int32
func_4799_call = mutated_mod.get_global_var('func_4799')
call_4801 = func_4799_call(var_4800)
output = call_4801
func_4802 = relay.Function([var_4800], output)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_4813 = relay.TupleGetItem(func_3226_call(), 0)
call_4814 = relay.TupleGetItem(func_3228_call(), 0)
func_130_call = mod.get_global_var('func_130')
func_134_call = mutated_mod.get_global_var('func_134')
var_4827 = relay.var("var_4827", dtype = "uint8", shape = (30,))#candidate|4827|(30,)|var|uint8
var_4828 = relay.var("var_4828", dtype = "uint8", shape = (270,))#candidate|4828|(270,)|var|uint8
call_4826 = relay.TupleGetItem(func_130_call(relay.reshape(var_4827.astype('uint8'), [3, 1, 10]), relay.reshape(var_4828.astype('uint8'), [3, 9, 10]), ), 2)
call_4829 = relay.TupleGetItem(func_134_call(relay.reshape(var_4827.astype('uint8'), [3, 1, 10]), relay.reshape(var_4828.astype('uint8'), [3, 9, 10]), ), 2)
output = relay.Tuple([call_4813,call_4826,var_4827,var_4828,])
output2 = relay.Tuple([call_4814,call_4829,var_4827,var_4828,])
func_4839 = relay.Function([var_4827,var_4828,], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
var_4840 = relay.var("var_4840", dtype = "uint8", shape = (30,))#candidate|4840|(30,)|var|uint8
var_4841 = relay.var("var_4841", dtype = "uint8", shape = (270,))#candidate|4841|(270,)|var|uint8
output = func_4839(var_4840,var_4841,)
func_4842 = relay.Function([var_4840,var_4841,], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4561_call = mod.get_global_var('func_4561')
func_4563_call = mutated_mod.get_global_var('func_4563')
call_4867 = relay.TupleGetItem(func_4561_call(), 0)
call_4868 = relay.TupleGetItem(func_4563_call(), 0)
output = relay.Tuple([call_4867,])
output2 = relay.Tuple([call_4868,])
func_4870 = relay.Function([], output)
mod['func_4870'] = func_4870
mod = relay.transform.InferType()(mod)
mutated_mod['func_4870'] = func_4870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4870_call = mutated_mod.get_global_var('func_4870')
call_4871 = func_4870_call()
output = call_4871
func_4872 = relay.Function([], output)
mutated_mod['func_4872'] = func_4872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4883 = relay.TupleGetItem(func_3281_call(), 0)
call_4884 = relay.TupleGetItem(func_3283_call(), 0)
output = call_4883
output2 = call_4884
func_4894 = relay.Function([], output)
mod['func_4894'] = func_4894
mod = relay.transform.InferType()(mod)
mutated_mod['func_4894'] = func_4894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mutated_mod.get_global_var('func_4894')
call_4895 = func_4894_call()
output = call_4895
func_4896 = relay.Function([], output)
mutated_mod['func_4896'] = func_4896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4048_call = mod.get_global_var('func_4048')
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4923 = relay.TupleGetItem(func_4048_call(), 0)
call_4924 = relay.TupleGetItem(func_4049_call(), 0)
output = call_4923
output2 = call_4924
func_4933 = relay.Function([], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4933_call = mutated_mod.get_global_var('func_4933')
call_4934 = func_4933_call()
output = call_4934
func_4935 = relay.Function([], output)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4870_call = mod.get_global_var('func_4870')
func_4872_call = mutated_mod.get_global_var('func_4872')
call_4938 = relay.TupleGetItem(func_4870_call(), 0)
call_4939 = relay.TupleGetItem(func_4872_call(), 0)
func_3000_call = mod.get_global_var('func_3000')
func_3002_call = mutated_mod.get_global_var('func_3002')
call_4944 = func_3000_call()
call_4945 = func_3000_call()
output = relay.Tuple([call_4938,call_4944,])
output2 = relay.Tuple([call_4939,call_4945,])
func_4956 = relay.Function([], output)
mod['func_4956'] = func_4956
mod = relay.transform.InferType()(mod)
output = func_4956()
func_4957 = relay.Function([], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3063_call = mod.get_global_var('func_3063')
func_3064_call = mutated_mod.get_global_var('func_3064')
call_4988 = func_3063_call()
call_4989 = func_3063_call()
output = relay.Tuple([call_4988,])
output2 = relay.Tuple([call_4989,])
func_4991 = relay.Function([], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
output = func_4991()
func_4992 = relay.Function([], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4991_call = mod.get_global_var('func_4991')
func_4992_call = mutated_mod.get_global_var('func_4992')
call_5001 = relay.TupleGetItem(func_4991_call(), 0)
call_5002 = relay.TupleGetItem(func_4992_call(), 0)
output = relay.Tuple([call_5001,])
output2 = relay.Tuple([call_5002,])
func_5011 = relay.Function([], output)
mod['func_5011'] = func_5011
mod = relay.transform.InferType()(mod)
output = func_5011()
func_5012 = relay.Function([], output)
mutated_mod['func_5012'] = func_5012
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5052 = relay.var("var_5052", dtype = "float64", shape = (1, 12, 10))#candidate|5052|(1, 12, 10)|var|float64
var_5053 = relay.var("var_5053", dtype = "float64", shape = (6, 12, 10))#candidate|5053|(6, 12, 10)|var|float64
bop_5054 = relay.greater_equal(var_5052.astype('bool'), var_5053.astype('bool')) # shape=(6, 12, 10)
output = bop_5054
output2 = bop_5054
func_5057 = relay.Function([var_5052,var_5053,], output)
mod['func_5057'] = func_5057
mod = relay.transform.InferType()(mod)
mutated_mod['func_5057'] = func_5057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5057_call = mutated_mod.get_global_var('func_5057')
var_5059 = relay.var("var_5059", dtype = "float64", shape = (1, 12, 10))#candidate|5059|(1, 12, 10)|var|float64
var_5060 = relay.var("var_5060", dtype = "float64", shape = (6, 12, 10))#candidate|5060|(6, 12, 10)|var|float64
call_5058 = func_5057_call(var_5059,var_5060,)
output = call_5058
func_5061 = relay.Function([var_5059,var_5060,], output)
mutated_mod['func_5061'] = func_5061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_5133 = relay.TupleGetItem(func_3226_call(), 0)
call_5134 = relay.TupleGetItem(func_3228_call(), 0)
var_5135 = relay.var("var_5135", dtype = "float32", shape = (252, 2))#candidate|5135|(252, 2)|var|float32
bop_5136 = relay.multiply(call_5133.astype('uint16'), relay.reshape(var_5135.astype('uint16'), relay.shape_of(call_5133))) # shape=(252, 2)
bop_5139 = relay.multiply(call_5134.astype('uint16'), relay.reshape(var_5135.astype('uint16'), relay.shape_of(call_5134))) # shape=(252, 2)
func_2452_call = mod.get_global_var('func_2452')
func_2455_call = mutated_mod.get_global_var('func_2455')
var_5141 = relay.var("var_5141", dtype = "int8", shape = (180,))#candidate|5141|(180,)|var|int8
call_5140 = relay.TupleGetItem(func_2452_call(relay.reshape(var_5141.astype('int8'), [3, 4, 15])), 0)
call_5142 = relay.TupleGetItem(func_2455_call(relay.reshape(var_5141.astype('int8'), [3, 4, 15])), 0)
func_1941_call = mod.get_global_var('func_1941')
func_1944_call = mutated_mod.get_global_var('func_1944')
const_5153 = relay.const([-8,3,-7,-4,-10,1,2,-5,-2,6,2,10,-9,-8,4,9,10,4,8,6,-6,4,-5,-9,-1,-3,-9,3,-9,3,8,-5,-3,-8,5,-10,1,1,5,4,-6,-9,2,-3,4,-6,7,1,-10,-2,4,-8,-6,-10,-8,6,-3,-9,8,-10,9,7,7,7,-10,4,2,9,-2,10,-3,-6,-5,3,-8,-10,-9,4,-6,5,3,-9,5,5,-7,9,-5,-8,9,-6,4,-5,-2,1,1,5,7,-1,10,-8,-2,6,-2,-8,8,2,-7,-7,8,-8,-3,-5,4,1,-9,-2,-7,-8,5,-2,9,6,-10,4,8,7,4,-2,-5,4,-3,6,-7,1,-10,6,8,5,3,-6,-3,6,4,-6,10,-4,6,-5,4,-4,10,6,-2,-5,-2,7,3,-5,-1,7,-8,-6,-1,-7,8,1,-1,-5,-8,9,-9,-7,10,-1,-2,-4,-7,5,5,3,3,-1,-1,-1,-5,10,7,-8,1,9,8,-4,-6,-5,2,4,3,4,-2,-4,-3,2,-4,-6,10,10,9,-2,-4,-7,6,4,7,-3,2,3,-2,5,5,-2,-9,2,-8,-4,-3,9,-10,-9,10,5,9,-9,-5,8,-8,-5,-5,-4,5,-5,6,-10,-6,3,-10,2,-8,-10,-5,-1,3,9,-6,10,10,-2,9,3,8,5,-6,-7,8,-5,8,-6,-5,8,8,3,-5,-4,-6,4,-5,-1,-6,5,-8,8,10,4,1,-9,1,-8,-8,3,-9,7,5,-7,8,6,-6,-1,-8,-4,-8,7,4,8,-8,-5,7,5,3,5,-5,9,-5,10,5,2,6,5,-7,-3,3,3,1,3,9,-7,-9,8,5,7,1,-5,9,6,-2,-2,-8,-6,5,4,7,10,8,-8,-5,4,4,-10,7,10,6,6,-7,4,-2,-7,10,3,-5,-2,9,6,-3,-8,-6,-4,10,-8,-2,10,1,-1,5,8,8,-2,-3,-10,-9,-1,-7,-9,2,-6,8,-8,-5,9,-4,2,8,-1,-6,-9,9,10,-4,-5,-6,3,-8,2,-10,3,-1,-8,-1,-10,-1,-2,1,-6,-2,-1,3,2,-5,-7,9,-10,5,7,-8,4,8,-10,1,3,-9,2,10,-5,10,9,2,-8,-9,6,4,7,-8,-10,-2,-4,7,5,10,2,2,7,-3,2,2,9,7,-7,-2,-8,7,-7,8,4,4,5,-9,1,-9,-4,-2,-8,-9,-8,1,-5,-7,-5,-6,2,6,7,2,-7,-2,4,4,-3,-7,5,-6,-6,-5,-8,1,1,7,-3,8,2,1,-2,-7,1,7,-2,8,-5,-1,4,-3,9,6,9,-2,-2,6,-9,10,-7,-5,9,8,-6,7,1,8,-7,2,6,8,6,-3,-7,6,-9,6,6,-10,-3,4,-6,-5,-7,-1,-8,3,3,8,7,5,-7,-2,4,-5,10,2,4,-10,-4,-5,2,-8,-2,-6,-2,-4,1,-2,-9,-4,10,6,-5,4,9,-4,5,-5,-10,-5,1,3,-7,-9,-4,9,8,8,4,-5,-1,-4,-10,-5,-2,-5,2,-7,3,-7,-8,10,2,9,2,-8,2,-1,-5,-5,7,-1,5,9,-3,-4,-5,-9,4,4,2,1,6,-8,-6,-7,10,3,-8,-1,1,4,-2,2,10,4,-9,-8,6,-7,7,-7,-4,10,5,4,1,-1,-10,-10,10,-4,10,-6,-8,-9,9,-1,8,-6,5,8,-6,10,3,-8,-8,4,4,4,-4,-6,9,-7,-9,10,3,-1,-5,6,-2,1,-7,-6,6,3,-5,7,4,-10,7,8,-6,-8,1,10], dtype = "uint64")#candidate|5153|(693,)|const|uint64
call_5152 = relay.TupleGetItem(func_1941_call(relay.reshape(const_5153.astype('uint64'), [7, 9, 11]), relay.reshape(const_5153.astype('uint64'), [7, 9, 11]), ), 0)
call_5154 = relay.TupleGetItem(func_1944_call(relay.reshape(const_5153.astype('uint64'), [7, 9, 11]), relay.reshape(const_5153.astype('uint64'), [7, 9, 11]), ), 0)
func_1425_call = mod.get_global_var('func_1425')
func_1430_call = mutated_mod.get_global_var('func_1430')
var_5162 = relay.var("var_5162", dtype = "float64", shape = (936, 1))#candidate|5162|(936, 1)|var|float64
call_5161 = relay.TupleGetItem(func_1425_call(relay.reshape(var_5162.astype('float64'), [13, 6, 12]), relay.reshape(var_5162.astype('float64'), [13, 6, 12]), relay.reshape(call_5133.astype('float64'), [6, 84]), ), 7)
call_5163 = relay.TupleGetItem(func_1430_call(relay.reshape(var_5162.astype('float64'), [13, 6, 12]), relay.reshape(var_5162.astype('float64'), [13, 6, 12]), relay.reshape(call_5133.astype('float64'), [6, 84]), ), 7)
uop_5164 = relay.tan(call_5140.astype('float32')) # shape=(3, 4, 15)
uop_5166 = relay.tan(call_5142.astype('float32')) # shape=(3, 4, 15)
uop_5175 = relay.atan(uop_5164.astype('float64')) # shape=(3, 4, 15)
uop_5177 = relay.atan(uop_5166.astype('float64')) # shape=(3, 4, 15)
bop_5189 = relay.not_equal(uop_5175.astype('bool'), relay.reshape(uop_5164.astype('bool'), relay.shape_of(uop_5175))) # shape=(3, 4, 15)
bop_5192 = relay.not_equal(uop_5177.astype('bool'), relay.reshape(uop_5166.astype('bool'), relay.shape_of(uop_5177))) # shape=(3, 4, 15)
output = relay.Tuple([bop_5136,var_5141,call_5152,const_5153,call_5161,var_5162,bop_5189,])
output2 = relay.Tuple([bop_5139,var_5141,call_5154,const_5153,call_5163,var_5162,bop_5192,])
func_5193 = relay.Function([var_5135,var_5141,var_5162,], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
var_5194 = relay.var("var_5194", dtype = "float32", shape = (252, 2))#candidate|5194|(252, 2)|var|float32
var_5195 = relay.var("var_5195", dtype = "int8", shape = (180,))#candidate|5195|(180,)|var|int8
var_5196 = relay.var("var_5196", dtype = "float64", shape = (936, 1))#candidate|5196|(936, 1)|var|float64
output = func_5193(var_5194,var_5195,var_5196,)
func_5197 = relay.Function([var_5194,var_5195,var_5196,], output)
mutated_mod['func_5197'] = func_5197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_5215 = func_4215_call()
call_5216 = func_4215_call()
output = relay.Tuple([call_5215,])
output2 = relay.Tuple([call_5216,])
func_5220 = relay.Function([], output)
mod['func_5220'] = func_5220
mod = relay.transform.InferType()(mod)
mutated_mod['func_5220'] = func_5220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mutated_mod.get_global_var('func_5220')
call_5221 = func_5220_call()
output = call_5221
func_5222 = relay.Function([], output)
mutated_mod['func_5222'] = func_5222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4894_call = mod.get_global_var('func_4894')
func_4896_call = mutated_mod.get_global_var('func_4896')
call_5264 = func_4894_call()
call_5265 = func_4894_call()
var_5266 = relay.var("var_5266", dtype = "float32", shape = (252, 2))#candidate|5266|(252, 2)|var|float32
bop_5267 = relay.logical_xor(call_5264.astype('uint32'), relay.reshape(var_5266.astype('uint32'), relay.shape_of(call_5264))) # shape=(252, 2)
bop_5270 = relay.logical_xor(call_5265.astype('uint32'), relay.reshape(var_5266.astype('uint32'), relay.shape_of(call_5265))) # shape=(252, 2)
output = relay.Tuple([bop_5267,])
output2 = relay.Tuple([bop_5270,])
func_5273 = relay.Function([var_5266,], output)
mod['func_5273'] = func_5273
mod = relay.transform.InferType()(mod)
var_5274 = relay.var("var_5274", dtype = "float32", shape = (252, 2))#candidate|5274|(252, 2)|var|float32
output = func_5273(var_5274)
func_5275 = relay.Function([var_5274], output)
mutated_mod['func_5275'] = func_5275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mod.get_global_var('func_4093')
func_4095_call = mutated_mod.get_global_var('func_4095')
call_5312 = relay.TupleGetItem(func_4093_call(), 0)
call_5313 = relay.TupleGetItem(func_4095_call(), 0)
output = relay.Tuple([call_5312,])
output2 = relay.Tuple([call_5313,])
func_5314 = relay.Function([], output)
mod['func_5314'] = func_5314
mod = relay.transform.InferType()(mod)
output = func_5314()
func_5315 = relay.Function([], output)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1869_call = mod.get_global_var('func_1869')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_5411 = func_1869_call()
call_5412 = func_1869_call()
output = call_5411
output2 = call_5412
func_5426 = relay.Function([], output)
mod['func_5426'] = func_5426
mod = relay.transform.InferType()(mod)
output = func_5426()
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4603_call = mod.get_global_var('func_4603')
func_4604_call = mutated_mod.get_global_var('func_4604')
call_5450 = func_4603_call()
call_5451 = func_4603_call()
output = call_5450
output2 = call_5451
func_5453 = relay.Function([], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5454 = func_5453_call()
output = call_5454
func_5455 = relay.Function([], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5480 = relay.var("var_5480", dtype = "uint64", shape = (4, 4, 3))#candidate|5480|(4, 4, 3)|var|uint64
var_5481 = relay.var("var_5481", dtype = "uint64", shape = (4, 4, 3))#candidate|5481|(4, 4, 3)|var|uint64
bop_5482 = relay.less(var_5480.astype('bool'), relay.reshape(var_5481.astype('bool'), relay.shape_of(var_5480))) # shape=(4, 4, 3)
func_3226_call = mod.get_global_var('func_3226')
func_3228_call = mutated_mod.get_global_var('func_3228')
call_5488 = relay.TupleGetItem(func_3226_call(), 0)
call_5489 = relay.TupleGetItem(func_3228_call(), 0)
uop_5496 = relay.cos(var_5480.astype('float32')) # shape=(4, 4, 3)
output = relay.Tuple([bop_5482,call_5488,uop_5496,])
output2 = relay.Tuple([bop_5482,call_5489,uop_5496,])
func_5498 = relay.Function([var_5480,var_5481,], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5498_call = mutated_mod.get_global_var('func_5498')
var_5500 = relay.var("var_5500", dtype = "uint64", shape = (4, 4, 3))#candidate|5500|(4, 4, 3)|var|uint64
var_5501 = relay.var("var_5501", dtype = "uint64", shape = (4, 4, 3))#candidate|5501|(4, 4, 3)|var|uint64
call_5499 = func_5498_call(var_5500,var_5501,)
output = call_5499
func_5502 = relay.Function([var_5500,var_5501,], output)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5530 = relay.var("var_5530", dtype = "float32", shape = (9, 16, 6))#candidate|5530|(9, 16, 6)|var|float32
uop_5531 = relay.atanh(var_5530.astype('float32')) # shape=(9, 16, 6)
output = uop_5531
output2 = uop_5531
func_5558 = relay.Function([var_5530,], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
var_5559 = relay.var("var_5559", dtype = "float32", shape = (9, 16, 6))#candidate|5559|(9, 16, 6)|var|float32
output = func_5558(var_5559)
func_5560 = relay.Function([var_5559], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5565 = relay.var("var_5565", dtype = "float32", shape = (12, 1, 6))#candidate|5565|(12, 1, 6)|var|float32
uop_5566 = relay.sqrt(var_5565.astype('float32')) # shape=(12, 1, 6)
func_1573_call = mod.get_global_var('func_1573')
func_1575_call = mutated_mod.get_global_var('func_1575')
call_5570 = relay.TupleGetItem(func_1573_call(), 1)
call_5571 = relay.TupleGetItem(func_1575_call(), 1)
const_5577 = relay.const([[[2.823996,-8.623545,4.168685,1.693324,0.843447,-0.027276]],[[9.502823,-9.590312,6.204783,-5.271498,-9.431105,9.876466]],[[-7.689890,2.799073,9.756178,-7.231934,2.445431,5.672480]],[[-5.250089,-0.454261,-9.883279,0.188702,-7.652352,4.833301]],[[5.998841,4.272392,5.500851,-4.888473,-3.153083,5.350788]],[[9.622235,-8.475281,5.654184,1.343080,-9.604048,2.789948]],[[-9.060706,2.272882,-0.981936,-5.001745,-6.591386,0.065865]],[[9.240177,-2.171912,6.476529,9.522801,2.194070,0.104137]],[[7.449492,9.988372,9.837686,-3.380380,0.631960,-4.322482]],[[-2.618600,4.136250,-0.387921,-4.992691,4.060570,9.107174]],[[0.775351,0.190521,4.713187,5.311687,2.970801,-2.377902]],[[8.909064,-1.930954,-3.363630,-3.132591,0.715839,-2.352007]]], dtype = "float32")#candidate|5577|(12, 1, 6)|const|float32
bop_5578 = relay.floor_divide(uop_5566.astype('float32'), relay.reshape(const_5577.astype('float32'), relay.shape_of(uop_5566))) # shape=(12, 1, 6)
output = relay.Tuple([call_5570,bop_5578,])
output2 = relay.Tuple([call_5571,bop_5578,])
F = relay.Function([var_5565,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5565,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_13746(%var_13733: Tensor[(11, 1, 1), int16]) -> Tensor[(11, 2, 6), int16] {
  %0 = cast(%var_13733, dtype="int16") /* ty=Tensor[(11, 1, 1), int16] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 2, 6), int16] */, dtype="int16") /* ty=Tensor[(11, 2, 6), int16] */;
  maximum(%0, %1) /* ty=Tensor[(11, 2, 6), int16] */
}

def @func_2909() -> (Tensor[(10, 13, 9), int8],) {
  %2 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %3 = %2.0;
  (%3,)
}

def @func_5339() -> Tensor[(10, 13, 9), int8] {
  %4 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %4.1
}

def @func_6351() -> (Tensor[(800), float64],) {
  %5 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %6 = %5.3;
  (%6,)
}

def @func_10644() -> (Tensor[(800), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %7 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
  %8 = @func_10131() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %9 = %8.0;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %11 = %7.1;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(800), float64] */;
  %13 = reshape(%10, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %14 = reshape(%12, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %15 = @func_3524(%13, %14) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
  %16 = %15.3;
  (%11, %9, %16)
}

def @func_5419() -> (Tensor[(8, 3, 6), bool],) {
  %17 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %18 = %17.2;
  (%18,)
}

def @func_15279(%var_15273: Tensor[(2730), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(13, 15, 14), float64], Tensor[(2730), float64]) {
  %19 = @func_15023() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %20 = cast(%var_15273, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %21 = reshape(%20, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %22 = %19.0;
  %23 = @func_11893(%21) /* ty=Tensor[(13, 15, 14), float64] */;
  (%22, %23, %var_15273)
}

def @func_3157() -> (Tensor[(10, 13, 9), int8],) {
  %24 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %25 = %24.0;
  (%25,)
}

def @func_12418(%var_12409: Tensor[(156), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(13, 4, 3), float64], Tensor[(156), float64]) {
  %26 = cast(%var_12409, dtype="float64") /* ty=Tensor[(156), float64] */;
  %27 = cast(%var_12409, dtype="float64") /* ty=Tensor[(156), float64] */;
  %28 = reshape(%26, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %29 = reshape(%27, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %30 = @func_5297(%28, %29) /* ty=(Tensor[(13, 4, 3), float64],) */;
  %31 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
  %32 = %30.0;
  (%31, %32, %var_12409)
}

def @func_15639() -> Tensor[(800), float32] {
  %33 = @func_9706() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), int32]) */;
  %34 = %33.1;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(800), float32] */;
  log(%35) /* ty=Tensor[(800), float32] */
}

def @func_7758() -> Tensor[(2, 72), bool] {
  %36 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %36.1
}

def @func_13392() -> (Tensor[(10, 13, 9), int8],) {
  %37 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %38 = %37.0;
  (%38,)
}

def @func_7275() -> Tensor[(10, 13, 9), float32] {
  @func_6654() /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_10377(%var_10366: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  %39 = @func_7333() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %40 = cast(%var_10366, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %41 = reshape(%40, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), uint32] */;
  %42 = @func_5383(%41) /* ty=(Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) */;
  %43 = %39.0;
  %44 = %42.1;
  (%43, %44, %var_10366)
}

def @func_2855() -> (Tensor[(10, 13, 9), int8],) {
  %45 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %46 = %45.0;
  (%46,)
}

def @func_10131() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
  %47 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %48 = %47.0;
  %49 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
  (%48, %49)
}

def @func_10751(%var_10743: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(864), float32], Tensor[(5, 99), int32]) {
  %50 = cast(%var_10743, dtype="float32") /* ty=Tensor[(864), float32] */;
  %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 99), int32] */, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %52 = reshape(%50, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %53 = reshape(%51, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %54 = @func_1808(%52, %53) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %55 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
  %56 = %54.3;
  (%55, %56, %var_10743, meta[relay.Constant][1] /* ty=Tensor[(5, 99), int32] */)
}

def @func_13062(%var_13057: Tensor[(15, 16, 13), int16], %var_13058: Tensor[(15, 16, 13), int16]) -> Tensor[(15, 16, 13), int16] {
  %57 = cast(%var_13058, dtype="int16") /* ty=Tensor[(15, 16, 13), int16] */;
  %58 = shape_of(%var_13057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_13057, dtype="int16") /* ty=Tensor[(15, 16, 13), int16] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%59, %60) /* ty=Tensor[(15, 16, 13), int16] */
}

def @func_8909() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %61 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %62 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %63 = %61.0;
  (%62, %63)
}

def @func_4165() -> Tensor[(10, 13, 9), int8] {
  %64 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %64.0
}

def @func_11784(%var_11772: Tensor[(14, 11, 2), float64]) -> Tensor[(14, 11, 2), float64] {
  %65 = cast(%var_11772, dtype="float64") /* ty=Tensor[(14, 11, 2), float64] */;
  sinh(%65) /* ty=Tensor[(14, 11, 2), float64] */
}

def @func_3895(%var_3891: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) {
  %66 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %67 = cast(meta[relay.Constant][2] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %69 = cast(%var_3891, dtype="int16") /* ty=Tensor[(88, 1), int16] */;
  %70 = reshape(%67, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %71 = reshape(%68, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %72 = reshape(%69, newshape=[88]) /* ty=Tensor[(88), int16] */;
  %73 = @func_2676(%70, %71, %72) /* ty=(Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */;
  %74 = %66.0;
  %75 = %73.1;
  (%74, %75, meta[relay.Constant][2] /* ty=Tensor[(12), float32] */, meta[relay.Constant][3] /* ty=Tensor[(8), int16] */, %var_3891)
}

def @func_5369() -> (Tensor[(10, 13, 9), int8],) {
  %76 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %77 = %76.1;
  (%77,)
}

def @func_13369() -> Tensor[(10, 13, 9), int8] {
  %78 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %78.0
}

def @func_3687() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %79 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %80 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %81 = %79.0;
  %82 = %80.1;
  (%81, %82)
}

def @func_5861() -> (Tensor[(10, 13, 9), float64],) {
  %83 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %84 = %83.1;
  %85 = cast(%84, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %86 = atan(%85) /* ty=Tensor[(10, 13, 9), float64] */;
  (%86,)
}

def @func_12477() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(6, 42), int64]) {
  %87 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
  %88 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 42), int64] */, dtype="int64") /* ty=Tensor[(6, 42), int64] */;
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 42), int64] */, dtype="int64") /* ty=Tensor[(6, 42), int64] */;
  %90 = reshape(%88, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %91 = reshape(%89, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %92 = @func_8994(%90, %91) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
  %93 = %87.0;
  %94 = %92.2;
  (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(6, 42), int64] */)
}

def @func_11974() -> (Tensor[(8, 3, 6), bool],) {
  %95 = @func_5419() /* ty=(Tensor[(8, 3, 6), bool],) */;
  %96 = %95.0;
  (%96,)
}

def @func_11593() -> (Tensor[(10, 13, 9), uint16],) {
  %97 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  (%97,)
}

def @func_8836() -> Tensor[(10, 13, 9), int8] {
  %98 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %98.0
}

def @func_8898() -> (Tensor[(10, 13, 9), float64],) {
  %99 = @func_7202() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %100 = %99.0;
  (%100,)
}

def @func_11398() -> (Tensor[(5, 8, 9), float64],) {
  %101 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
  %102 = cast(%101, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
  %103 = log2(%102) /* ty=Tensor[(5, 8, 9), float64] */;
  (%103,)
}

def @func_3758() -> Tensor[(10, 13, 9), int8] {
  %104 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %104.0
}

def @func_5174() -> (Tensor[(10, 13, 9), int8],) {
  %105 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %106 = %105.0;
  (%106,)
}

def @func_13148() -> (Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(88), int16]) {
  %107 = @func_6542() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %109 = reshape(%108, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
  %110 = @func_3895(%109) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
  %111 = %107.0;
  %112 = %110.4;
  (%111, %112, meta[relay.Constant][5] /* ty=Tensor[(88), int16] */)
}

def @func_8814() -> (Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) {
  %113 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %114 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %115 = %113.0;
  (%114, %115)
}

def @func_14317() -> (Tensor[(10, 13, 9), int8], Tensor[(864), float64]) {
  %116 = @func_12526() /* ty=(Tensor[(864), float32],) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(864), float64] */;
  %119 = @func_9535() /* ty=Tensor[(10, 13, 9), int8] */;
  %120 = asinh(%118) /* ty=Tensor[(864), float64] */;
  (%119, %120)
}

def @func_2969() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %121 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %122 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_8725() -> Tensor[(3, 10, 1), float64] {
  @func_7566() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_90(%var_38: Tensor[(4, 2, 1), int16], %var_39: Tensor[(4, 2, 11), int16]) -> (Tensor[(4, 2, 11), int16],) {
  %125 = cast(%var_38, dtype="int16") /* ty=Tensor[(4, 2, 1), int16] */;
  %126 = cast(%var_39, dtype="int16") /* ty=Tensor[(4, 2, 11), int16] */;
  %127 = bitwise_and(%125, %126) /* ty=Tensor[(4, 2, 11), int16] */;
  (%127,)
}

def @func_9475() -> (Tensor[(864), float32], Tensor[(800), int16]) {
  %128 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %129 = %128.3;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(864), float32] */;
  %131 = reshape(%130, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %132 = @func_4865(%131) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %133 = %132.2;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(800), float64] */, dtype="int16") /* ty=Tensor[(800), int16] */;
  %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(1), int32] */;
  %136 = cast(%133, dtype="int16") /* ty=Tensor[(800), int16] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?), int16] */;
  %138 = bitwise_xor(%136, %137) /* ty=Tensor[(800), int16] */;
  (%129, %138)
}

def @func_3981() -> (Tensor[(10, 13, 9), bool],) {
  %139 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %140 = cast(%139, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %141 = reshape(%140, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %142 = @func_3870(%141) /* ty=Tensor[(10, 13, 9), uint32] */;
  %143 = cast(%139, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %147 = greater(%145, %146) /* ty=Tensor[(10, 13, 9), bool] */;
  (%147,)
}

def @func_6542() -> (Tensor[(10, 13, 9), int8],) {
  %148 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %149 = %148.0;
  (%149,)
}

def @func_9083() -> Tensor[(800), float64] {
  %150 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %150.1
}

def @func_6365() -> Tensor[(10, 13, 9), int8] {
  %151 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %151.1
}

def @func_9214() -> (Tensor[(10, 13, 9), float32],) {
  %152 = @func_6654() /* ty=Tensor[(10, 13, 9), float32] */;
  (%152,)
}

def @func_11431() -> (Tensor[(10, 13, 9), int8],) {
  %153 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %154 = %153.0;
  (%154,)
}

def @func_12509() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %155 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %156 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %157 = %155.0;
  (%156, %157)
}

def @func_2839() -> (Tensor[(10, 13, 9), int8],) {
  %158 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %159 = %158.0;
  (%159,)
}

def @func_6126() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %160 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %161 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %162 = %160.1;
  %163 = %161.0;
  (%162, %163)
}

def @func_14949() -> (Tensor[(10, 13, 9), int8],) {
  %164 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %165 = %164.0;
  (%165,)
}

def @func_14805() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %166 = @func_5034() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %167 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %168 = %166.1;
  %169 = %167.0;
  (%168, %169)
}

def @func_13554(%var_13540: float64, %var_13541: Tensor[(3, 8, 4), float64], %var_13545: Tensor[(3, 8, 4), float64]) -> (Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) {
  %170 = cast(%var_13540, dtype="float64") /* ty=float64 */;
  %171 = cast(%var_13541, dtype="float64") /* ty=Tensor[(3, 8, 4), float64] */;
  %172 = cast(%var_13545, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
  %173 = shape_of(%var_13541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_13541, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %176 = floor_divide(%170, %171) /* ty=Tensor[(3, 8, 4), float64] */;
  %177 = divide(%174, %175) /* ty=Tensor[(3, 8, 4), float32] */;
  (%176, %177)
}

def @func_12217() -> Tensor[(3, 4, 9), float64] {
  %178 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
  sqrt(%178) /* ty=Tensor[(3, 4, 9), float64] */
}

def @func_14204() -> (Tensor[(5, 8, 9), float64], Tensor[(22, 4), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool]) {
  %179 = @func_11398() /* ty=(Tensor[(5, 8, 9), float64],) */;
  %180 = cast(meta[relay.Constant][8] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %181 = reshape(%180, newshape=[495, 1]) /* ty=Tensor[(495, 1), int32] */;
  %182 = @func_11344(%181) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) */;
  %183 = @func_11974() /* ty=(Tensor[(8, 3, 6), bool],) */;
  %184 = %179.0;
  %185 = %182.1;
  %186 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %187 = %183.0;
  (%184, %185, meta[relay.Constant][8] /* ty=Tensor[(495), int32] */, %186, %187)
}

def @func_11344(%var_11339: Tensor[(495, 1), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) {
  %188 = @func_11060() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %189 = cast(%var_11339, dtype="int32") /* ty=Tensor[(495, 1), int32] */;
  %190 = reshape(%189, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %191 = @func_6034(%190) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
  %192 = %188.0;
  %193 = %191.3;
  (%192, %193, %var_11339)
}

def @func_14442(%var_14410: Tensor[(792), int8], %var_14418: Tensor[(165, 3), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) {
  %194 = @func_14216() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %195 = cast(%var_14410, dtype="int8") /* ty=Tensor[(792), int8] */;
  %196 = cast(%var_14410, dtype="int8") /* ty=Tensor[(792), int8] */;
  %197 = reshape(%195, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %198 = reshape(%196, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %199 = @func_5701(%197, %198) /* ty=(Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %200 = cast(%var_14418, dtype="int32") /* ty=Tensor[(165, 3), int32] */;
  %201 = reshape(%200, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %202 = @func_3641(%201) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) */;
  %203 = %194.0;
  %204 = %199.2;
  %205 = %202.0;
  (%203, %204, %var_14410, %205, %var_14418)
}

def @func_6654() -> Tensor[(10, 13, 9), float32] {
  %206 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
  %207 = %206.0;
  %208 = cast(%207, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  cosh(%208) /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_11222(%var_11159: Tensor[(800), float64], %var_11160: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), bool]) {
  %209 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %210 = @func_6785() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %211 = cast(%var_11159, dtype="float64") /* ty=Tensor[(800), float64] */;
  %212 = cast(%var_11160, dtype="float32") /* ty=Tensor[(864), float32] */;
  %213 = reshape(%211, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %214 = reshape(%212, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %215 = @func_2494(%213, %214) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %216 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %217 = @func_3981() /* ty=(Tensor[(10, 13, 9), bool],) */;
  %218 = %209.0;
  %219 = %210.0;
  %220 = %215.4;
  %221 = %216.0;
  %222 = %217.0;
  (%218, %219, %220, %var_11159, %var_11160, %221, %222)
}

def @func_15023() -> (Tensor[(10, 13, 9), int8],) {
  %223 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  (%223,)
}

def @func_8513() -> (Tensor[(10, 13, 9), int8],) {
  %224 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %225 = %224.0;
  (%225,)
}

def @func_12039() -> Tensor[(800), int32] {
  %226 = @func_8683() /* ty=(Tensor[(800), int32],) */;
  %226.0
}

def @func_10900() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %227 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %228 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %229 = %227.0;
  %230 = %228.0;
  (%229, %230)
}

def @func_5567() -> (Tensor[(10, 13, 9), int8],) {
  %231 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %232 = %231.0;
  (%232,)
}

def @func_12755(%var_12742: Tensor[(5, 99), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) {
  %233 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %234 = cast(meta[relay.Constant][9] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %235 = reshape(%234, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %236 = @func_10377(%235) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %237 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %238 = cast(meta[relay.Constant][10] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %239 = cast(%var_12742, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %240 = reshape(%238, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %241 = reshape(%239, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %242 = @func_1808(%240, %241) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %243 = %233.1;
  %244 = %236.1;
  %245 = %237.0;
  %246 = %242.0;
  (%243, %244, meta[relay.Constant][9] /* ty=Tensor[(192), uint32] */, %245, %246, meta[relay.Constant][10] /* ty=Tensor[(864), float32] */, %var_12742)
}

def @func_5297(%var_5277: Tensor[(13, 4, 3), float64], %var_5278: Tensor[(13, 4, 3), float64]) -> (Tensor[(13, 4, 3), float64],) {
  %247 = cast(%var_5278, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  %248 = shape_of(%var_5277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%var_5277, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %251 = floor_divide(%249, %250) /* ty=Tensor[(13, 4, 3), float64] */;
  (%251,)
}

def @func_7333() -> (Tensor[(10, 13, 9), int8],) {
  %252 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %253 = %252.0;
  (%253,)
}

def @func_4571(%var_4504: Tensor[(400, 2), float64], %var_4537: Tensor[(12, 72), float32], %var_4563: Tensor[(12, 72), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) {
  %254 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %255 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %256 = cast(meta[relay.Constant][11] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %257 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 2), int16] */, dtype="int16") /* ty=Tensor[(4, 2), int16] */;
  %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
  %259 = reshape(%256, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %260 = reshape(%257, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %261 = reshape(%258, newshape=[88]) /* ty=Tensor[(88), int16] */;
  %262 = @func_2676(%259, %260, %261) /* ty=(Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */;
  %263 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 72), float32] */, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
  %264 = tan(%263) /* ty=Tensor[(12, 72), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
  %266 = cos(%265) /* ty=Tensor[(12, 72), float32] */;
  %267 = cast(%var_4504, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
  %268 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 72), float32] */, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
  %269 = reshape(%267, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %270 = reshape(%268, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %271 = @func_2494(%269, %270) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %272 = %271.1;
  %273 = cast(%272, dtype="int64") /* ty=Tensor[(2, 432), int64] */;
  %274 = shape_of(%266, dtype="int32") /* ty=Tensor[(2), int32] */;
  %275 = cast(%266, dtype="int64") /* ty=Tensor[(12, 72), int64] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %277 = cast(%var_4537, dtype="int16") /* ty=Tensor[(12, 72), int16] */;
  %278 = shape_of(%266, dtype="int32") /* ty=Tensor[(2), int32] */;
  %279 = cast(%266, dtype="int16") /* ty=Tensor[(12, 72), int16] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %281 = cast(%264, dtype="float64") /* ty=Tensor[(12, 72), float64] */;
  %282 = cast(meta[relay.Constant][13] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
  %283 = reshape(%282, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
  %284 = @func_3895(%283) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
  %285 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 72), float32] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %286 = shape_of(%264, dtype="int32") /* ty=Tensor[(2), int32] */;
  %287 = cast(%264, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %289 = bitwise_xor(%287, %288) /* ty=Tensor[(12, 72), uint64] */;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(12, 72), float64] */;
  %291 = cast(meta[relay.Constant][15] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %292 = cast(meta[relay.Constant][15] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %293 = reshape(%291, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %294 = reshape(%292, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %295 = @func_661(%293, %294) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %296 = cast(%var_4563, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
  %297 = shape_of(%266, dtype="int32") /* ty=Tensor[(2), int32] */;
  %298 = cast(%266, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %300 = %254.0;
  %301 = %255.1;
  %302 = %262.0;
  %303 = bitwise_or(%275, %276) /* ty=Tensor[(12, 72), int64] */;
  %304 = add(%279, %280) /* ty=Tensor[(12, 72), int16] */;
  %305 = rsqrt(%281) /* ty=Tensor[(12, 72), float64] */;
  %306 = %284.2;
  %307 = erf(%290) /* ty=Tensor[(12, 72), float64] */;
  %308 = %295.0;
  %309 = greater(%298, %299) /* ty=Tensor[(12, 72), bool] */;
  (%300, %301, %var_4504, %302, meta[relay.Constant][11] /* ty=Tensor[(12), float32] */, meta[relay.Constant][12] /* ty=Tensor[(4, 2), int16] */, meta[relay.Constant][13] /* ty=Tensor[(22, 4), int16] */, %303, %304, %305, %306, %307, %308, meta[relay.Constant][15] /* ty=Tensor[(495), int32] */, %309)
}

def @func_14573() -> (Tensor[(10, 13, 9), int8], Tensor[(13, 3, 10), float64], Tensor[(390), int64], Tensor[(5, 7, 4), float32], Tensor[(10, 13, 9), int8]) {
  %310 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
  %311 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
  %312 = reshape(%310, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %313 = reshape(%311, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %314 = @func_10283(%312, %313) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(864), float32]) */;
  %315 = @func_13348() /* ty=(Tensor[(5, 7, 4), float32],) */;
  %316 = @func_13479() /* ty=Tensor[(10, 13, 9), int8] */;
  %317 = %314.0;
  %318 = %315.0;
  %319 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
  (%316, %317, meta[relay.Constant][16] /* ty=Tensor[(390), int64] */, %318, %319)
}

def @func_12883() -> (Tensor[(88), int16], Tensor[(10, 13, 9), float32]) {
  %320 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %321 = @func_9975() /* ty=(Tensor[(10, 13, 9), float32],) */;
  %322 = %320.2;
  %323 = %321.0;
  (%322, %323)
}

def @func_8754(%var_8748: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 13, 9), int8]) {
  %324 = cast(%var_8748, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
  %325 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %326 = asin(%324) /* ty=Tensor[(4, 15, 2), float32] */;
  %327 = %325.0;
  (%326, %327)
}

def @func_12526() -> (Tensor[(864), float32],) {
  %328 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %329 = %328.3;
  (%329,)
}

def @func_8994(%var_8956: Tensor[(7, 3, 12), int64], %var_8957: Tensor[(7, 3, 12), int64]) -> (Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) {
  %330 = @func_8909() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %331 = cast(%var_8957, dtype="int64") /* ty=Tensor[(7, 3, 12), int64] */;
  %332 = shape_of(%var_8956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_8956, dtype="int64") /* ty=Tensor[(7, 3, 12), int64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %335 = maximum(%333, %334) /* ty=Tensor[(7, 3, 12), int64] */;
  %336 = cast(%var_8957, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%335, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %340 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %341 = %330.1;
  %342 = less_equal(%338, %339) /* ty=Tensor[(7, 3, 12), bool] */;
  %343 = %340.0;
  (%341, %342, %343)
}

def @func_9564() -> (Tensor[(10, 13, 9), int8],) {
  %344 = @func_8208() /* ty=Tensor[(10, 13, 9), int8] */;
  (%344,)
}

def @func_3246() -> Tensor[(10, 13, 9), int8] {
  %345 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %345.0
}

def @func_10039(%var_10028: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) {
  %346 = cast(%var_10028, dtype="int32") /* ty=Tensor[(495), int32] */;
  %347 = reshape(%346, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %348 = @func_6034(%347) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
  %349 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
  %350 = %348.0;
  (%349, %350, %var_10028)
}

def @func_3524(%var_3494: Tensor[(10, 13, 9), float32], %var_3518: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) {
  %351 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %352 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %353 = %352.1;
  %354 = cast(%var_3494, dtype="uint8") /* ty=Tensor[(10, 13, 9), uint8] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%353, dtype="uint8") /* ty=Tensor[(10, 13, 9), uint8] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %358 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %359 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %360 = cast(%353, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %361 = cast(%var_3518, dtype="float64") /* ty=Tensor[(800), float64] */;
  %362 = cast(meta[relay.Constant][17] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %363 = reshape(%361, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %364 = reshape(%362, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %365 = @func_2494(%363, %364) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %366 = %351.1;
  %367 = bitwise_and(%356, %357) /* ty=Tensor[(10, 13, 9), uint8] */;
  %368 = %358.1;
  %369 = %359.0;
  %370 = sin(%360) /* ty=Tensor[(10, 13, 9), float32] */;
  %371 = %365.2;
  (%366, %367, %368, %369, %370, %371, %var_3518, meta[relay.Constant][17] /* ty=Tensor[(864), float32] */)
}

def @func_7779() -> (Tensor[(10, 13, 9), int8],) {
  %372 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  (%372,)
}

def @func_6182() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %373 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %374 = %373.0;
  %375 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  (%374, %375)
}

def @func_13651() -> (Tensor[(10, 13, 9), int8],) {
  %376 = @func_10900() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %377 = %376.0;
  (%377,)
}

def @func_4929() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
  %378 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %379 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %382 = cast(meta[relay.Constant][18] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %383 = reshape(%381, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %384 = reshape(%382, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %385 = @func_3524(%383, %384) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
  %386 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %387 = %378.1;
  %388 = %385.7;
  %389 = %386.0;
  (%387, %380, %388, meta[relay.Constant][18] /* ty=Tensor[(800), float64] */, %389)
}

def @main(%var_15927: float64) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(3, 8, 4), float64], Tensor[(96), float64], Tensor[(1, 4, 11), float32]) {
  %390 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %391 = @func_11849() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %392 = cast(%var_15927, dtype="float64") /* ty=float64 */;
  %393 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %394 = cast(meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %395 = reshape(%392, newshape=[]) /* ty=float64 */;
  %396 = reshape(%393, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float64] */;
  %397 = reshape(%394, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float64] */;
  %398 = @func_13554(%395, %396, %397) /* ty=(Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) */;
  %399 = cast(%var_15927, dtype="float32") /* ty=float32 */;
  %400 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 4, 11), float64] */, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
  %401 = %390.0;
  %402 = %391.1;
  %403 = %398.0;
  %404 = power(%399, %400) /* ty=Tensor[(1, 4, 11), float32] */;
  (%401, %402, %403, meta[relay.Constant][19] /* ty=Tensor[(96), float64] */, %404)
}

def @func_12844() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %405 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %406 = %405.3;
  %407 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
  (%406, %407)
}

def @func_661(%var_653: Tensor[(5, 9, 11), int32], %var_654: Tensor[(5, 9, 11), int32]) -> (Tensor[(5, 9, 11), bool],) {
  %408 = cast(%var_654, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %409 = shape_of(%var_653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_653, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %412 = less(%410, %411) /* ty=Tensor[(5, 9, 11), bool] */;
  (%412,)
}

def @func_3800() -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) {
  %413 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %414 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
  %415 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %416 = %415.1;
  %417 = cast(%416, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %418 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%414, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %421 = %413.1;
  %422 = multiply(%419, %420) /* ty=Tensor[(10, 13, 9), float64] */;
  (%421, %422)
}

def @func_4478(%var_4415: Tensor[(8), int16], %var_4416: Tensor[(44, 2), int16], %var_4438: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) {
  %423 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %424 = cast(%var_4415, dtype="int16") /* ty=Tensor[(8), int16] */;
  %425 = cast(%var_4416, dtype="int16") /* ty=Tensor[(44, 2), int16] */;
  %426 = reshape(%424, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %427 = reshape(%425, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %428 = @func_90(%426, %427) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %429 = cast(%var_4438, dtype="int32") /* ty=Tensor[(495), int32] */;
  %430 = reshape(%429, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %431 = @func_3641(%430) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) */;
  %432 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %433 = cast(%432, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %434 = cast(meta[relay.Constant][21] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %435 = reshape(%433, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %436 = reshape(%434, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %437 = @func_3524(%435, %436) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
  %438 = %423.0;
  %439 = %428.0;
  %440 = %431.2;
  %441 = %437.1;
  (%438, %439, %var_4415, %var_4416, %432, %440, %var_4438, %441, meta[relay.Constant][21] /* ty=Tensor[(800), float64] */)
}

def @func_2362(%var_2349: Tensor[(8, 3, 6), bool], %var_2350: Tensor[(8, 3, 6), bool]) -> Tensor[(8, 3, 6), bool] {
  %442 = cast(%var_2350, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %443 = shape_of(%var_2349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_2349, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%444, %445) /* ty=Tensor[(8, 3, 6), bool] */
}

def @func_1808(%var_1729: Tensor[(9, 6, 16), float32], %var_1747: Tensor[(5, 99), int32]) -> (Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) {
  %446 = cast(%var_1729, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
  %447 = exp(%446) /* ty=Tensor[(9, 6, 16), float32] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %449 = cast(meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %451 = reshape(%449, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %452 = reshape(%450, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %453 = @func_90(%451, %452) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %454 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %455 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %456 = reshape(%454, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %457 = reshape(%455, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %458 = @func_661(%456, %457) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %459 = cast(meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %460 = cast(meta[relay.Constant][23] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %461 = reshape(%459, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %462 = reshape(%460, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %463 = @func_90(%461, %462) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %464 = cast(meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %465 = %453.0;
  %466 = cast(%465, dtype="int16") /* ty=Tensor[(4, 2, 11), int16] */;
  %467 = reshape(%464, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %468 = reshape(%466, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %469 = @func_90(%467, %468) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %470 = cast(%var_1729, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %471 = rsqrt(%470) /* ty=Tensor[(9, 6, 16), float64] */;
  %472 = cast(%var_1729, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %477 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %478 = reshape(%476, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %479 = reshape(%477, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %480 = @func_661(%478, %479) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %481 = atanh(%448) /* ty=Tensor[(9, 6, 16), float64] */;
  %482 = %458.0;
  %483 = %463.0;
  %484 = %469.0;
  %485 = not_equal(%474, %475) /* ty=Tensor[(9, 6, 16), bool] */;
  %486 = %480.0;
  (%481, %465, meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, meta[relay.Constant][23] /* ty=Tensor[(88), int16] */, %482, %var_1747, %483, %484, %485, %486)
}

def @func_7893(%var_7811: Tensor[(864), float32], %var_7814: Tensor[(792), int8]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32], Tensor[(9, 8, 11), int8], Tensor[(792), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(1, 88), int16], Tensor[(10, 13, 9), float64], Tensor[(8, 100), float64], Tensor[(10, 13, 9), float32]) {
  %487 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %488 = cast(%var_7811, dtype="float32") /* ty=Tensor[(864), float32] */;
  %489 = reshape(%488, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %490 = @func_4865(%489) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %491 = cast(%var_7814, dtype="int8") /* ty=Tensor[(792), int8] */;
  %492 = cast(%var_7814, dtype="int8") /* ty=Tensor[(792), int8] */;
  %493 = reshape(%491, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %494 = reshape(%492, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %495 = @func_5701(%493, %494) /* ty=(Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %496 = %490.3;
  %497 = cast(%496, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
  %498 = reshape(%497, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %499 = @func_4865(%498) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %500 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %501 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 88), int16] */, dtype="int16") /* ty=Tensor[(1, 88), int16] */;
  %502 = reshape(%501, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
  %503 = @func_3895(%502) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
  %504 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %505 = %499.2;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(800), float64] */;
  %507 = reshape(%506, newshape=[8, 100]) /* ty=Tensor[(8, 100), float64] */;
  %508 = @func_6813(%507) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) */;
  %509 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %510 = %509.4;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %512 = %487.0;
  %513 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %514 = %495.0;
  %515 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %516 = %500.0;
  %517 = %503.4;
  %518 = %504.1;
  %519 = %508.1;
  %520 = atanh(%511) /* ty=Tensor[(10, 13, 9), float32] */;
  (%512, %513, %496, %var_7811, %514, %var_7814, %505, %515, %516, %517, meta[relay.Constant][24] /* ty=Tensor[(1, 88), int16] */, %518, %519, %520)
}

def @func_7415() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %521 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %522 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %523 = %521.0;
  %524 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
  %525 = %522.0;
  (%523, %524, %525)
}

def @func_8479() -> Tensor[(5, 8, 9), float64] {
  %526 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
  sqrt(%526) /* ty=Tensor[(5, 8, 9), float64] */
}

def @func_9550() -> Tensor[(10, 13, 9), int8] {
  @func_3246() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_12198(%var_12152: Tensor[(156), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(156), float64], Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8], Tensor[(13, 4, 3), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16]) {
  %527 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %528 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %529 = cast(%var_12152, dtype="float64") /* ty=Tensor[(156), float64] */;
  %530 = cast(%var_12152, dtype="float64") /* ty=Tensor[(156), float64] */;
  %531 = reshape(%529, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %532 = reshape(%530, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %533 = @func_5297(%531, %532) /* ty=(Tensor[(13, 4, 3), float64],) */;
  %534 = %533.0;
  %535 = cast(%534, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  %536 = tan(%535) /* ty=Tensor[(13, 4, 3), float64] */;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(13, 4, 3), float32] */;
  %538 = @func_10266() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %539 = %527.0;
  %540 = @func_9550() /* ty=Tensor[(10, 13, 9), int8] */;
  %541 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %542 = %528.4;
  %543 = sinh(%537) /* ty=Tensor[(13, 4, 3), float32] */;
  %544 = %538.0;
  %545 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  (%539, %var_12152, %540, %541, %542, %543, %544, %545)
}

def @func_13348() -> (Tensor[(5, 7, 4), float32],) {
  %546 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %547 = acosh(%546) /* ty=Tensor[(5, 7, 4), float32] */;
  (%547,)
}

def @func_12631() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %548 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %549 = @func_11280() /* ty=(Tensor[(88), int16],) */;
  %550 = %548.0;
  %551 = %549.0;
  (%550, %551)
}

def @func_13223(%var_13204: Tensor[(8), int16], %var_13208: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(432, 2), float32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(3, 10, 1), float64]) {
  %552 = @func_9509() /* ty=(Tensor[(800), float32], Tensor[(10, 13, 9), int8]) */;
  %553 = @func_8036() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) */;
  %554 = cast(%var_13204, dtype="int16") /* ty=Tensor[(8), int16] */;
  %555 = cast(meta[relay.Constant][27] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %556 = reshape(%554, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %557 = reshape(%555, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %558 = @func_90(%556, %557) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %559 = cast(%var_13208, dtype="float64") /* ty=Tensor[(800), float64] */;
  %560 = %553.2;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(432, 2), float32] */;
  %562 = reshape(%559, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %563 = reshape(%561, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %564 = @func_2494(%562, %563) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %565 = %552.1;
  %566 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %567 = %558.0;
  %568 = %564.4;
  %569 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  (%565, %566, %560, %567, %var_13204, meta[relay.Constant][27] /* ty=Tensor[(88), int16] */, %568, %var_13208, %569)
}

def @func_7259() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %570 = cast(meta[relay.Constant][28] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %571 = reshape(%570, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
  %572 = @func_3895(%571) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
  %573 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %574 = %573.0;
  %575 = cast(%574, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %576 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %577 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
  %578 = %572.0;
  %579 = acos(%575) /* ty=Tensor[(10, 13, 9), float64] */;
  %580 = %576.4;
  (%577, %578, meta[relay.Constant][28] /* ty=Tensor[(88), int16] */, %579, %580)
}

def @func_15558() -> (Tensor[(10, 13, 9), float64],) {
  %581 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %582 = %581.0;
  (%582,)
}

def @func_14710() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %583 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %584 = @func_8332() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */;
  %585 = %583.4;
  %586 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %587 = %584.1;
  (%585, %586, %587)
}

def @func_8432() -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64]) {
  %588 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %589 = @func_6351() /* ty=(Tensor[(800), float64],) */;
  %590 = %588.0;
  %591 = %589.0;
  (%590, %591)
}

def @func_12120(%var_12047: Tensor[(15, 9, 5), float32], %var_12068: Tensor[(15, 9, 5), float32]) -> (Tensor[(15, 9, 5), bool], Tensor[(10, 13, 9), int8], Tensor[(15, 9, 5), int8], Tensor[(10, 13, 9), int8]) {
  %592 = cast(%var_12047, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
  %593 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(15, 9, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 9, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %596 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %597 = cast(%var_12068, dtype="int8") /* ty=Tensor[(15, 9, 5), int8] */;
  %598 = shape_of(%var_12047, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_12047, dtype="int8") /* ty=Tensor[(15, 9, 5), int8] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %601 = @func_11060() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %602 = less(%594, %595) /* ty=Tensor[(15, 9, 5), bool] */;
  %603 = %596.0;
  %604 = minimum(%599, %600) /* ty=Tensor[(15, 9, 5), int8] */;
  %605 = %601.0;
  (%602, %603, %604, %605)
}

def @func_12434() -> (Tensor[(5, 8, 9), float64],) {
  %606 = @func_11398() /* ty=(Tensor[(5, 8, 9), float64],) */;
  %607 = %606.0;
  (%607,)
}

def @func_14161(%var_14153: float64, %var_14154: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
  %608 = cast(%var_14153, dtype="float64") /* ty=float64 */;
  %609 = cast(%var_14154, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
  %610 = divide(%608, %609) /* ty=Tensor[(2, 6, 16), float64] */;
  (%610,)
}

def @func_2827() -> (Tensor[(10, 13, 9), int8],) {
  %611 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %612 = acosh(%611) /* ty=Tensor[(10, 13, 9), float64] */;
  %613 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 13, 9), float64] */, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %617 = bitwise_or(%615, %616) /* ty=Tensor[(10, 13, 9), int8] */;
  (%617,)
}

def @func_8208() -> Tensor[(10, 13, 9), int8] {
  %618 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %618.1
}

def @func_4653() -> (Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) {
  %619 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %620 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %621 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %622 = reshape(%620, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %623 = reshape(%621, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %624 = @func_2362(%622, %623) /* ty=Tensor[(8, 3, 6), bool] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %626 = sinh(%625) /* ty=Tensor[(8, 3, 6), float32] */;
  %627 = cast(%624, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%626, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %631 = %619.0;
  %632 = less_equal(%629, %630) /* ty=Tensor[(8, 3, 6), bool] */;
  (%631, meta[relay.Constant][31] /* ty=Tensor[(2, 72), bool] */, %632)
}

def @func_8495() -> Tensor[(3, 10, 1), float64] {
  @func_7566() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_7741() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
  %633 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %634 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %635 = @func_6443() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) */;
  %636 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %637 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
  %638 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
  %639 = %633.0;
  %640 = %634.0;
  %641 = %635.0;
  %642 = %636.1;
  (%637, %638, %639, %640, %641, %642)
}

def @func_14743(%var_14728: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(495), int32], Tensor[(10, 13, 9), int8]) {
  %643 = @func_8432() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64]) */;
  %644 = cast(%var_14728, dtype="int32") /* ty=Tensor[(495), int32] */;
  %645 = reshape(%644, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %646 = @func_12755(%645) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) */;
  %647 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %648 = %643.0;
  %649 = %646.2;
  %650 = %647.0;
  (%648, %649, %var_14728, %650)
}

def @func_9535() -> Tensor[(10, 13, 9), int8] {
  %651 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %651.0
}

def @func_8158() -> (Tensor[(2, 72), bool],) {
  %652 = @func_7758() /* ty=Tensor[(2, 72), bool] */;
  (%652,)
}

def @func_4218() -> Tensor[(10, 13, 9), int8] {
  %653 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %653.0
}

def @func_5701(%var_5682: Tensor[(9, 8, 11), int8], %var_5683: Tensor[(9, 8, 11), int8]) -> (Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  %654 = cast(%var_5683, dtype="int8") /* ty=Tensor[(9, 8, 11), int8] */;
  %655 = shape_of(%var_5682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_5682, dtype="int8") /* ty=Tensor[(9, 8, 11), int8] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %658 = cast(%var_5682, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %659 = cast(meta[relay.Constant][32] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %660 = reshape(%659, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), uint32] */;
  %661 = @func_5383(%660) /* ty=(Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) */;
  %662 = multiply(%656, %657) /* ty=Tensor[(9, 8, 11), int8] */;
  %663 = rsqrt(%658) /* ty=Tensor[(9, 8, 11), float64] */;
  %664 = %661.1;
  (%662, %663, %664, meta[relay.Constant][32] /* ty=Tensor[(192), uint32] */)
}

def @func_8290() -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
  %665 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %666 = @func_6351() /* ty=(Tensor[(800), float64],) */;
  %667 = @func_6898() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %668 = %665.0;
  %669 = %666.0;
  %670 = %667.1;
  (%668, %669, %670)
}

def @func_6443() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) {
  %671 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %672 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %673 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %674 = %673.0;
  %675 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %676 = %675.0;
  %677 = cast(%676, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %678 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%674, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = %671.0;
  %682 = %672.0;
  %683 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %684 = less(%679, %680) /* ty=Tensor[(10, 13, 9), bool] */;
  (%681, %682, %683, %684)
}

def @func_3347() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) {
  %685 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %688 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %689 = asin(%687) /* ty=Tensor[(10, 13, 9), float32] */;
  (%688, %689)
}

def @func_7163() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32]) {
  %690 = cast(meta[relay.Constant][33] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %691 = reshape(%690, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %692 = @func_4865(%691) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %693 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %694 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
  %695 = %692.3;
  (%693, %694, %695, meta[relay.Constant][33] /* ty=Tensor[(864), float32] */)
}

def @func_10820() -> (Tensor[(10, 13, 9), int8],) {
  %696 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %697 = %696.0;
  (%697,)
}

def @func_7566() -> Tensor[(3, 10, 1), float64] {
  %698 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  sinh(%698) /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_11514() -> Tensor[(10, 13, 9), int8] {
  %699 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %699.0
}

def @func_4955() -> (Tensor[(800), float32],) {
  %700 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %701 = %700.3;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(800), float32] */;
  %703 = erf(%702) /* ty=Tensor[(800), float32] */;
  (%703,)
}

def @func_9433() -> (Tensor[(10, 13, 9), int8], Tensor[(252), int64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %704 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %705 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %706 = cast(meta[relay.Constant][35] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
  %707 = cast(meta[relay.Constant][35] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
  %708 = reshape(%706, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %709 = reshape(%707, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %710 = @func_8994(%708, %709) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
  %711 = %710.2;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %713 = rsqrt(%712) /* ty=Tensor[(10, 13, 9), float32] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %715 = %704.1;
  %716 = %705.0;
  %717 = log10(%714) /* ty=Tensor[(10, 13, 9), float64] */;
  (%715, meta[relay.Constant][35] /* ty=Tensor[(252), int64] */, %716, %717)
}

def @func_3004(%var_2997: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) {
  %718 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %719 = cast(meta[relay.Constant][36] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %720 = cast(%var_2997, dtype="float32") /* ty=Tensor[(864), float32] */;
  %721 = reshape(%719, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %722 = reshape(%720, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %723 = @func_2494(%721, %722) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %724 = %718.0;
  %725 = %723.4;
  (%724, %725, meta[relay.Constant][36] /* ty=Tensor[(800), float64] */, %var_2997)
}

def @func_6572() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %726 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %727 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %728 = %726.0;
  %729 = %727.0;
  (%728, %729)
}

def @func_10266() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %730 = @func_7202() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %731 = @func_9938() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) */;
  %732 = %730.1;
  %733 = %731.2;
  (%732, %733)
}

def @func_3068() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %734 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %735 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %736 = %734.0;
  %737 = %735.1;
  (%736, %737)
}

def @func_15172() -> Tensor[(10, 13, 9), int8] {
  %738 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %738.0
}

def @func_11280() -> (Tensor[(88), int16],) {
  %739 = @func_8541() /* ty=Tensor[(88), int16] */;
  (%739,)
}

def @func_11467() -> Tensor[(10, 13, 9), uint16] {
  %740 = @func_7475() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %740.0
}

def @func_8541() -> Tensor[(88), int16] {
  %741 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %741.2
}

def @func_5265() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %742 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %743 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %744 = %742.1;
  %745 = %743.4;
  (%744, %745)
}

def @func_13092() -> (Tensor[(10, 13, 9), int8],) {
  %746 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %747 = %746.1;
  (%747,)
}

def @func_14216() -> (Tensor[(10, 13, 9), int8],) {
  %748 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %749 = %748.1;
  (%749,)
}

def @func_4062() -> (Tensor[(10, 13, 9), int8],) {
  %750 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %751 = %750.0;
  (%751,)
}

def @func_11765(%var_11746: Tensor[(15, 12, 16), int16], %var_11747: Tensor[(15, 12, 16), int16]) -> Tensor[(15, 12, 16), float32] {
  %752 = cast(%var_11747, dtype="int16") /* ty=Tensor[(15, 12, 16), int16] */;
  %753 = shape_of(%var_11746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%var_11746, dtype="int16") /* ty=Tensor[(15, 12, 16), int16] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %756 = logical_xor(%754, %755) /* ty=Tensor[(15, 12, 16), int16] */;
  %757 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 12, 16), int16] */, dtype="float32") /* ty=Tensor[(15, 12, 16), float32] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="float32") /* ty=Tensor[(15, 12, 16), float32] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%759, %760) /* ty=Tensor[(15, 12, 16), float32] */
}

def @func_10541() -> (Tensor[(10, 13, 9), int8],) {
  %761 = @func_8814() /* ty=(Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) */;
  %762 = %761.1;
  (%762,)
}

def @func_10326() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), uint16]) {
  %763 = @func_9509() /* ty=(Tensor[(800), float32], Tensor[(10, 13, 9), int8]) */;
  %764 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
  %765 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %766 = %763.1;
  %767 = %764.0;
  %768 = %765.0;
  (%766, %767, %768)
}

def @func_9862() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %769 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %770 = %769.0;
  %771 = cast(%770, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %772 = reshape(%771, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %773 = @func_3870(%772) /* ty=Tensor[(10, 13, 9), uint32] */;
  %774 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %775 = @func_8091() /* ty=Tensor[(10, 13, 9), float64] */;
  (%770, %773, %774, %775)
}

def @func_10169() -> (Tensor[(10, 13, 9), int8],) {
  %776 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
  (%776,)
}

def @func_10800() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(800), int32], Tensor[(2, 72), bool]) {
  %777 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %778 = @func_7333() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %779 = @func_8683() /* ty=(Tensor[(800), int32],) */;
  %780 = %777.1;
  %781 = %778.0;
  %782 = %779.0;
  %783 = @func_9637() /* ty=Tensor[(2, 72), bool] */;
  (%780, %781, %782, %783)
}

def @func_4710() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %784 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %785 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
  %786 = %784.0;
  (%785, %786)
}

def @func_14896(%var_14840: Tensor[(864), float32], %var_14841: Tensor[(495), int32], %var_14883: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 99), int32], Tensor[(495), int32], Tensor[(165, 3), int32], Tensor[(792), int8], Tensor[(864), bool], Tensor[(10, 13, 9), int8]) {
  %787 = @func_8332() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */;
  %788 = @func_5174() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %789 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %790 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %791 = @func_13392() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %792 = cast(%var_14840, dtype="float32") /* ty=Tensor[(864), float32] */;
  %793 = cast(%var_14841, dtype="int32") /* ty=Tensor[(495), int32] */;
  %794 = reshape(%792, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %795 = reshape(%793, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %796 = @func_1808(%794, %795) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %797 = cast(meta[relay.Constant][38] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %798 = cast(%var_14841, dtype="int32") /* ty=Tensor[(495), int32] */;
  %799 = reshape(%797, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %800 = reshape(%798, newshape=[165, 3]) /* ty=Tensor[(165, 3), int32] */;
  %801 = @func_14442(%799, %800) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) */;
  %802 = cast(%var_14883, dtype="bool") /* ty=Tensor[(864), bool] */;
  %803 = shape_of(%var_14840, dtype="int32") /* ty=Tensor[(1), int32] */;
  %804 = cast(%var_14840, dtype="bool") /* ty=Tensor[(864), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?), bool] */;
  %806 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %807 = %787.0;
  %808 = %788.0;
  %809 = %789.0;
  %810 = %790.0;
  %811 = %791.0;
  %812 = %796.5;
  %813 = %801.4;
  %814 = not_equal(%804, %805) /* ty=Tensor[(864), bool] */;
  %815 = %806.0;
  (%807, %808, %809, %810, %811, %812, %var_14841, %813, meta[relay.Constant][38] /* ty=Tensor[(792), int8] */, %814, %815)
}

def @func_13479() -> Tensor[(10, 13, 9), int8] {
  %816 = @func_6542() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %816.0
}

def @func_9010() -> (Tensor[(5, 15, 8), float32],) {
  %817 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
  %818 = cosh(%817) /* ty=Tensor[(5, 15, 8), float32] */;
  (%818,)
}

def @func_11580() -> (Tensor[(800), float64], Tensor[(?, 864), bool], Tensor[(10, 13, 9), int8]) {
  %819 = @func_9083() /* ty=Tensor[(800), float64] */;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(800), float64] */;
  %821 = reshape(%820, newshape=[8, 100]) /* ty=Tensor[(8, 100), float64] */;
  %822 = @func_6813(%821) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) */;
  %823 = %822.2;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(?, 864), float32] */;
  %825 = reshape(%824, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %826 = @func_4865(%825) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %827 = %826.0;
  (%819, %823, %827)
}

def @func_15310() -> (Tensor[(10, 13, 9), int8], Tensor[(5, 8, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
  %828 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %829 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %830 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
  %831 = %828.0;
  %832 = @func_12039() /* ty=Tensor[(800), int32] */;
  (%829, %830, %831, %832)
}

def @func_15082() -> Tensor[(5, 8, 9), float64] {
  @func_8479() /* ty=Tensor[(5, 8, 9), float64] */
}

def @func_3104() -> Tensor[(10, 13, 9), int8] {
  %833 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %833.0
}

def @func_15713() -> (Tensor[(10, 13, 9), int8],) {
  %834 = @func_12457() /* ty=Tensor[(10, 13, 9), int8] */;
  (%834,)
}

def @func_5034() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %835 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %836 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %837 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  (%835, %836, %837)
}

def @func_7650() -> (Tensor[(12, 6, 5), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
  %838 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 5), float32] */;
  %839 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %840 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %841 = erf(%838) /* ty=Tensor[(12, 6, 5), float32] */;
  %842 = %839.0;
  %843 = %840.0;
  (%841, %842, %843)
}

def @func_5383(%var_5371: Tensor[(3, 4, 16), uint32]) -> (Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) {
  %844 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 4, 16), uint32] */, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %845 = shape_of(%var_5371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%var_5371, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %848 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %849 = greater(%846, %847) /* ty=Tensor[(3, 4, 16), bool] */;
  %850 = %848.0;
  (%849, %850)
}

def @func_11728() -> Tensor[(10, 13, 9), uint16] {
  %851 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %851.0
}

def @func_7475() -> (Tensor[(10, 13, 9), uint16],) {
  %852 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  (%852,)
}

def @func_12946() -> (Tensor[(800), float64], Tensor[(10, 13, 9), float32]) {
  %853 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %854 = %853.1;
  %855 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
  (%854, %855)
}

def @func_7951() -> (Tensor[(10, 13, 9), int8],) {
  %856 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %857 = %856.0;
  (%857,)
}

def @func_14036() -> (Tensor[(10, 13, 9), float32],) {
  %858 = @func_12883() /* ty=(Tensor[(88), int16], Tensor[(10, 13, 9), float32]) */;
  %859 = %858.1;
  (%859,)
}

def @func_14490() -> (Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(495), int32]) {
  %860 = @func_13392() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %861 = cast(meta[relay.Constant][42] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %862 = reshape(%861, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %863 = @func_10039(%862) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) */;
  %864 = %860.0;
  %865 = %863.2;
  (%864, %865, meta[relay.Constant][42] /* ty=Tensor[(495), int32] */)
}

def @func_14654() -> (Tensor[(8, 3, 6), bool],) {
  %866 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %867 = %866.2;
  (%867,)
}

def @func_6898() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %868 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %869 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %870 = %868.1;
  %871 = %869.1;
  (%870, %871)
}

def @func_5536(%var_5484: Tensor[(800), float64], %var_5485: Tensor[(864), float32], %var_5501: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) {
  %872 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %873 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %874 = cast(%var_5484, dtype="float64") /* ty=Tensor[(800), float64] */;
  %875 = cast(%var_5485, dtype="float32") /* ty=Tensor[(864), float32] */;
  %876 = reshape(%874, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %877 = reshape(%875, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %878 = @func_2494(%876, %877) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %879 = cast(%var_5501, dtype="float64") /* ty=Tensor[(800), float64] */;
  %880 = shape_of(%var_5484, dtype="int32") /* ty=Tensor[(1), int32] */;
  %881 = cast(%var_5484, dtype="float64") /* ty=Tensor[(800), float64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?), float64] */;
  %883 = %872.1;
  %884 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %885 = %873.1;
  %886 = %878.2;
  %887 = divide(%881, %882) /* ty=Tensor[(800), float64] */;
  (%883, %884, %885, %886, %var_5485, %887)
}

def @func_13270(%var_13245: float64) -> (Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool], Tensor[(10, 13, 9), int8]) {
  %888 = cast(%var_13245, dtype="float64") /* ty=float64 */;
  %889 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
  %890 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 9, 12), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
  %891 = cast(%var_13245, dtype="bool") /* ty=bool */;
  %892 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %893 = mod(%888, %889) /* ty=Tensor[(4, 9, 12), float64] */;
  %894 = not_equal(%890, %891) /* ty=Tensor[(4, 9, 12), bool] */;
  %895 = %892.2;
  (%893, %894, %895)
}

def @func_10218() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %896 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %897 = @func_8909() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %898 = %896.1;
  %899 = %897.1;
  (%898, %899)
}

def @func_9149() -> Tensor[(10, 13, 9), uint16] {
  %900 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %900.0
}

def @func_7202() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %901 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
  %902 = %901.0;
  %903 = @func_5339() /* ty=Tensor[(10, 13, 9), int8] */;
  (%902, %903)
}

def @func_8091() -> Tensor[(10, 13, 9), float64] {
  %904 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %905 = %904.1;
  %906 = cast(%905, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  asinh(%906) /* ty=Tensor[(10, 13, 9), float64] */
}

def @func_3641(%var_3635: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) {
  %907 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %908 = cast(meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %909 = reshape(%908, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %910 = @func_3004(%909) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) */;
  %911 = cast(%var_3635, dtype="int32") /* ty=Tensor[(495), int32] */;
  %912 = cast(%var_3635, dtype="int32") /* ty=Tensor[(495), int32] */;
  %913 = reshape(%911, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %914 = reshape(%912, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %915 = @func_661(%913, %914) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %916 = %907.0;
  %917 = %910.0;
  %918 = %915.0;
  (%916, %917, meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, %918, %var_3635)
}

def @func_12601() -> (Tensor[(8, 3, 5), float64],) {
  %919 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  %920 = exp(%919) /* ty=Tensor[(8, 3, 5), float64] */;
  (%920,)
}

def @func_3729() -> (Tensor[(10, 13, 9), int8],) {
  %921 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %922 = %921.0;
  (%922,)
}

def @func_6034(%var_6013: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) {
  %923 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %924 = cast(meta[relay.Constant][46] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %925 = cast(meta[relay.Constant][47] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
  %926 = cast(%var_6013, dtype="int32") /* ty=Tensor[(495), int32] */;
  %927 = reshape(%924, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %928 = reshape(%925, newshape=[44, 2]) /* ty=Tensor[(44, 2), int16] */;
  %929 = reshape(%926, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %930 = @func_4478(%927, %928, %929) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) */;
  %931 = %923.0;
  %932 = %930.7;
  (%931, %932, meta[relay.Constant][46] /* ty=Tensor[(8), int16] */, meta[relay.Constant][47] /* ty=Tensor[(22, 4), int16] */, %var_6013)
}

def @func_5664() -> (Tensor[(10, 13, 9), int8],) {
  %933 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %934 = %933.0;
  (%934,)
}

def @func_13128() -> (Tensor[(10, 13, 9), int8],) {
  %935 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %936 = %935.0;
  (%936,)
}

def @func_11060() -> (Tensor[(10, 13, 9), int8],) {
  %937 = @func_5339() /* ty=Tensor[(10, 13, 9), int8] */;
  (%937,)
}

def @func_9637() -> Tensor[(2, 72), bool] {
  @func_7758() /* ty=Tensor[(2, 72), bool] */
}

def @func_5614() -> (Tensor[(10, 13, 9), int8],) {
  %938 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  (%938,)
}

def @func_8683() -> (Tensor[(800), int32],) {
  %939 = @func_4955() /* ty=(Tensor[(800), float32],) */;
  %940 = %939.0;
  %941 = cast(meta[relay.Constant][48] /* ty=Tensor[(800), float32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(1), int32] */;
  %943 = cast(%940, dtype="int32") /* ty=Tensor[(800), int32] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?), int32] */;
  %945 = right_shift(%943, %944) /* ty=Tensor[(800), int32] */;
  (%945,)
}

def @func_7593() -> (Tensor[(10, 13, 9), uint16],) {
  %946 = @func_7475() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %947 = %946.0;
  (%947,)
}

def @func_7040() -> (Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) {
  %948 = cast(meta[relay.Constant][49] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %949 = cast(meta[relay.Constant][50] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %950 = cast(meta[relay.Constant][50] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %951 = reshape(%948, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
  %952 = reshape(%949, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %953 = reshape(%950, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %954 = @func_4571(%951, %952, %953) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
  %955 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
  %956 = %954.3;
  (%955, %956, meta[relay.Constant][49] /* ty=Tensor[(800), float64] */, meta[relay.Constant][50] /* ty=Tensor[(864), float32] */)
}

def @func_9244() -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
  %957 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %958 = %957.0;
  %959 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  (%958, %959)
}

def @func_11955(%var_11938: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(800), float64], Tensor[(864), float32], Tensor[(252), int64], Tensor[(10, 13, 9), float32]) {
  %960 = @func_10541() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %961 = cast(%var_11938, dtype="float64") /* ty=Tensor[(800), float64] */;
  %962 = cast(meta[relay.Constant][51] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %963 = cast(%var_11938, dtype="float64") /* ty=Tensor[(800), float64] */;
  %964 = reshape(%961, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %965 = reshape(%962, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %966 = reshape(%963, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %967 = @func_5536(%964, %965, %966) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
  %968 = @func_9268() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) */;
  %969 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %970 = %960.0;
  %971 = %967.2;
  %972 = %968.2;
  %973 = %969.5;
  (%970, %971, %var_11938, meta[relay.Constant][51] /* ty=Tensor[(864), float32] */, %972, %973)
}

def @func_15125(%var_15119: Tensor[(15, 7, 8), float32]) -> (Tensor[(15, 7, 8), float32],) {
  %974 = cast(%var_15119, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
  %975 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %978 = power(%976, %977) /* ty=Tensor[(15, 7, 8), float32] */;
  (%978,)
}

def @func_9775(%var_9727: Tensor[(495), int32], %var_9762: Tensor[(2, 72), bool]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool]) {
  %979 = cast(%var_9727, dtype="int32") /* ty=Tensor[(495), int32] */;
  %980 = reshape(%979, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %981 = @func_6034(%980) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
  %982 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %983 = @func_8158() /* ty=(Tensor[(2, 72), bool],) */;
  %984 = %983.0;
  %985 = cast(%var_9762, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(2), int32] */;
  %987 = cast(%984, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %989 = @func_9149() /* ty=Tensor[(10, 13, 9), uint16] */;
  %990 = %981.2;
  %991 = %982.0;
  %992 = logical_and(%987, %988) /* ty=Tensor[(2, 72), bool] */;
  (%989, %990, %var_9727, %991, %992)
}

def @func_6227() -> Tensor[(10, 13, 9), uint16] {
  %993 = @func_3981() /* ty=(Tensor[(10, 13, 9), bool],) */;
  %994 = %993.0;
  %995 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %996 = %995.0;
  %997 = cast(%996, dtype="uint16") /* ty=Tensor[(10, 13, 9), uint16] */;
  %998 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%994, dtype="uint16") /* ty=Tensor[(10, 13, 9), uint16] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  add(%999, %1000) /* ty=Tensor[(10, 13, 9), uint16] */
}

def @func_12358(%var_12269: Tensor[(3, 10, 8), float64], %var_12344: Tensor[(8), int16]) -> (Tensor[(3, 10, 8), bool], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  %1001 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %1002 = cast(%1001, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %1003 = cast(%var_12269, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %1004 = floor_divide(%1002, %1003) /* ty=Tensor[(3, 10, 8), float32] */;
  %1005 = cast(%var_12269, dtype="bool") /* ty=Tensor[(3, 10, 8), bool] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="bool") /* ty=Tensor[(3, 10, 8), bool] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1009 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  %1010 = cast(%1009, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %1011 = reshape(%1010, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %1012 = @func_4776(%1011) /* ty=(Tensor[(10, 13, 9), float64],) */;
  %1013 = cast(meta[relay.Constant][53] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1014 = reshape(%1013, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %1015 = @func_10039(%1014) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) */;
  %1016 = cast(%var_12344, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1017 = cast(meta[relay.Constant][54] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1018 = reshape(%1016, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1019 = reshape(%1017, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1020 = @func_90(%1018, %1019) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1021 = greater_equal(%1007, %1008) /* ty=Tensor[(3, 10, 8), bool] */;
  %1022 = %1012.0;
  %1023 = %1015.1;
  %1024 = %1020.0;
  (%1021, %1009, %1022, %1023, meta[relay.Constant][53] /* ty=Tensor[(495), int32] */, %1024, %var_12344, meta[relay.Constant][54] /* ty=Tensor[(88), int16] */)
}

def @func_15675(%var_15656: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
  %1025 = cast(%var_15656, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
  tan(%1025) /* ty=Tensor[(12, 5, 16), float32] */
}

def @func_15877(%var_15863: Tensor[(2, 72), float64]) -> (Tensor[(2, 72), bool],) {
  %1026 = @func_9637() /* ty=Tensor[(2, 72), bool] */;
  %1027 = cast(%1026, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %1028 = atan(%1027) /* ty=Tensor[(2, 72), float64] */;
  %1029 = cast(%var_15863, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1031 = cast(%1028, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1033 = not_equal(%1031, %1032) /* ty=Tensor[(2, 72), bool] */;
  (%1033,)
}

def @func_8036() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) {
  %1034 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1035 = cast(meta[relay.Constant][55] /* ty=Tensor[(432, 2), float32] */, dtype="float32") /* ty=Tensor[(432, 2), float32] */;
  %1036 = reshape(%1035, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %1037 = @func_4865(%1036) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %1038 = %1034.0;
  %1039 = %1037.0;
  (%1038, %1039, meta[relay.Constant][55] /* ty=Tensor[(432, 2), float32] */)
}

def @func_8332() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %1040 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %1041 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %1042 = %1040.0;
  %1043 = %1041.2;
  (%1042, %1043)
}

def @func_11011(%var_10964: Tensor[(864), float32], %var_10991: Tensor[(195, 2), int64], %var_10993: Tensor[(800), float64], %var_11007: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(13, 3, 10), float64], Tensor[(195, 2), int64], Tensor[(800), bool], Tensor[(800), float64], Tensor[(192), uint32], Tensor[(192), uint32]) {
  %1044 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %1045 = cast(%var_10991, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %1046 = cast(%var_10991, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %1047 = reshape(%1045, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %1048 = reshape(%1046, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %1049 = @func_10283(%1047, %1048) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(864), float32]) */;
  %1050 = cast(%var_10964, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1051 = reshape(%1050, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1052 = @func_3004(%1051) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) */;
  %1053 = %1052.2;
  %1054 = cast(%var_10993, dtype="bool") /* ty=Tensor[(800), bool] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1056 = cast(%1053, dtype="bool") /* ty=Tensor[(800), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1058 = @func_8432() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64]) */;
  %1059 = cast(%var_11007, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1060 = reshape(%1059, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %1061 = @func_10377(%1060) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %1062 = %1044.0;
  %1063 = %1049.0;
  %1064 = greater_equal(%1056, %1057) /* ty=Tensor[(800), bool] */;
  %1065 = %1058.1;
  %1066 = %1061.2;
  (%1062, %var_10964, %1063, %var_10991, %1064, %1065, %1066, %var_11007)
}

def @func_4865(%var_4860: Tensor[(6, 144), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) {
  %1067 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1068 = cast(meta[relay.Constant][56] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %1069 = cast(%var_4860, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
  %1070 = cast(%var_4860, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
  %1071 = reshape(%1068, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
  %1072 = reshape(%1069, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %1073 = reshape(%1070, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %1074 = @func_4571(%1071, %1072, %1073) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
  %1075 = %1067.0;
  %1076 = %1074.2;
  (%1075, %1076, meta[relay.Constant][56] /* ty=Tensor[(800), float64] */, %var_4860)
}

def @func_3870(%var_3836: Tensor[(10, 13, 9), int8]) -> Tensor[(10, 13, 9), uint32] {
  %1077 = cast(%var_3836, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %1078 = cos(%1077) /* ty=Tensor[(10, 13, 9), float32] */;
  %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %1080 = erf(%1079) /* ty=Tensor[(10, 13, 9), float32] */;
  %1081 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1082 = %1081.0;
  %1083 = cast(%var_3836, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1087 = minimum(%1085, %1086) /* ty=Tensor[(10, 13, 9), int8] */;
  %1088 = cast(%1087, dtype="uint32") /* ty=Tensor[(10, 13, 9), uint32] */;
  %1089 = shape_of(%1080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%1080, dtype="uint32") /* ty=Tensor[(10, 13, 9), uint32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%1090, %1091) /* ty=Tensor[(10, 13, 9), uint32] */
}

def @func_9268() -> (Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) {
  %1092 = @func_9214() /* ty=(Tensor[(10, 13, 9), float32],) */;
  %1093 = cast(meta[relay.Constant][57] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
  %1094 = cast(meta[relay.Constant][57] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
  %1095 = reshape(%1093, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %1096 = reshape(%1094, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %1097 = @func_8994(%1095, %1096) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
  %1098 = %1092.0;
  %1099 = %1097.1;
  (%1098, %1099, meta[relay.Constant][57] /* ty=Tensor[(252), int64] */)
}

def @func_6785() -> (Tensor[(10, 13, 9), int8],) {
  %1100 = @func_5034() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1101 = %1100.1;
  (%1101,)
}

def @func_4776(%var_4758: Tensor[(10, 13, 9), int8]) -> (Tensor[(10, 13, 9), float64],) {
  %1102 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
  %1103 = cast(%var_4758, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%1102, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1107 = floor_mod(%1105, %1106) /* ty=Tensor[(10, 13, 9), float64] */;
  (%1107,)
}

def @func_5980() -> Tensor[(10, 13, 9), int8] {
  %1108 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1108.0
}

def @func_5089(%var_5076: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
  %1109 = cast(%var_5076, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
  log(%1109) /* ty=Tensor[(6, 11, 7), float64] */
}

def @func_14365(%var_14329: Tensor[(11, 5, 11), float32], %var_14337: Tensor[(495), int32]) -> (Tensor[(11, 5, 11), float64], Tensor[(864), float32], Tensor[(495), int64]) {
  %1110 = cast(%var_14329, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
  %1111 = erf(%1110) /* ty=Tensor[(11, 5, 11), float32] */;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
  %1113 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
  %1114 = cast(%var_14337, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1115 = reshape(%1114, newshape=[495, 1]) /* ty=Tensor[(495, 1), int32] */;
  %1116 = @func_11344(%1115) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) */;
  %1117 = %1116.2;
  %1118 = cast(%1117, dtype="int64") /* ty=Tensor[(495, 1), int64] */;
  %1119 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1120 = cast(%var_14337, dtype="int64") /* ty=Tensor[(495), int64] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1122 = sin(%1112) /* ty=Tensor[(11, 5, 11), float64] */;
  %1123 = %1113.0;
  %1124 = bitwise_and(%1120, %1121) /* ty=Tensor[(495), int64] */;
  (%1122, %1123, %1124)
}

def @func_9509() -> (Tensor[(800), float32], Tensor[(10, 13, 9), int8]) {
  %1125 = @func_4955() /* ty=(Tensor[(800), float32],) */;
  %1126 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1127 = %1125.0;
  %1128 = %1126.0;
  (%1127, %1128)
}

def @func_12681() -> Tensor[(10, 13, 9), int8] {
  %1129 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1129.1
}

def @func_13016(%var_12972: Tensor[(88), int16], %var_12973: Tensor[(495), int32], %var_12992: Tensor[(156, 1), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(8), int16], Tensor[(88), int16], Tensor[(800), int32], Tensor[(13, 4, 3), float64], Tensor[(156, 495), bool]) {
  %1130 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %1131 = cast(meta[relay.Constant][58] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1132 = cast(%var_12972, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1133 = cast(%var_12973, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1134 = reshape(%1131, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %1135 = reshape(%1132, newshape=[44, 2]) /* ty=Tensor[(44, 2), int16] */;
  %1136 = reshape(%1133, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %1137 = @func_4478(%1134, %1135, %1136) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) */;
  %1138 = cast(%var_12992, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %1139 = cast(%var_12992, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
  %1140 = reshape(%1138, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %1141 = reshape(%1139, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
  %1142 = @func_5297(%1140, %1141) /* ty=(Tensor[(13, 4, 3), float64],) */;
  %1143 = cast(%var_12973, dtype="float32") /* ty=Tensor[(495), float32] */;
  %1144 = cast(%var_12992, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
  %1145 = divide(%1143, %1144) /* ty=Tensor[(156, 495), float32] */;
  %1146 = cast(%1145, dtype="bool") /* ty=Tensor[(156, 495), bool] */;
  %1147 = cast(%var_12973, dtype="bool") /* ty=Tensor[(495), bool] */;
  %1148 = greater_equal(%1146, %1147) /* ty=Tensor[(156, 495), bool] */;
  %1149 = cast(%var_12992, dtype="bool") /* ty=Tensor[(156, 1), bool] */;
  %1150 = cast(%1148, dtype="bool") /* ty=Tensor[(156, 495), bool] */;
  %1151 = %1130.2;
  %1152 = %1137.5;
  %1153 = @func_12039() /* ty=Tensor[(800), int32] */;
  %1154 = %1142.0;
  %1155 = less(%1149, %1150) /* ty=Tensor[(156, 495), bool] */;
  (%1151, %1152, meta[relay.Constant][58] /* ty=Tensor[(8), int16] */, %var_12972, %1153, %1154, %1155)
}

def @func_10112() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), int8]) {
  %1156 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1157 = @func_6126() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1158 = %1156.0;
  %1159 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  %1160 = %1157.0;
  (%1158, %1159, %1160)
}

def @func_9335() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %1161 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1162 = @func_7779() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1163 = %1161.0;
  %1164 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
  %1165 = %1162.0;
  (%1163, %1164, %1165)
}

def @func_9975() -> (Tensor[(10, 13, 9), float32],) {
  %1166 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
  (%1166,)
}

def @func_13025() -> Tensor[(10, 13, 9), float64] {
  %1167 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %1167.4
}

def @func_2676(%var_2651: Tensor[(3, 1, 4), float32], %var_2673: Tensor[(8), int16], %var_2674: Tensor[(88), int16]) -> (Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  %1168 = cast(%var_2651, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %1169 = log2(%1168) /* ty=Tensor[(3, 1, 4), float32] */;
  %1170 = cast(%1169, dtype="float64") /* ty=Tensor[(3, 1, 4), float64] */;
  %1171 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1172 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1173 = reshape(%1171, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1174 = reshape(%1172, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1175 = cast(%var_2673, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1176 = cast(%var_2674, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1177 = reshape(%1175, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1178 = reshape(%1176, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1179 = @func_90(%1177, %1178) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1180 = cosh(%1170) /* ty=Tensor[(3, 1, 4), float64] */;
  %1181 = @func_2362(%1173, %1174) /* ty=Tensor[(8, 3, 6), bool] */;
  %1182 = %1179.0;
  (%1180, %1181, meta[relay.Constant][59] /* ty=Tensor[(144), bool] */, %1182, %var_2673, %var_2674)
}

def @func_9706() -> (Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
  %1183 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %1184 = @func_8683() /* ty=(Tensor[(800), int32],) */;
  %1185 = %1183.0;
  %1186 = %1184.0;
  (%1185, %1186)
}

def @func_6813(%var_6801: Tensor[(8, 100), float64]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) {
  %1187 = cast(%var_6801, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
  %1188 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 864), float32] */, dtype="float32") /* ty=Tensor[(1, 864), float32] */;
  %1189 = cast(%var_6801, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
  %1190 = reshape(%1187, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %1191 = reshape(%1188, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1192 = reshape(%1189, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %1193 = @func_5536(%1190, %1191, %1192) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
  %1194 = %1193.4;
  %1195 = cast(%1194, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1196 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(1, 864), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1197 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 864), float32] */, dtype="bool") /* ty=Tensor[(1, 864), bool] */;
  %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1199 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  %1200 = greater(%1197, %1198) /* ty=Tensor[(?, 864), bool] */;
  (%1199, %var_6801, %1200)
}

def @func_10283(%var_10271: Tensor[(13, 3, 10), int64], %var_10272: Tensor[(13, 3, 10), int64]) -> (Tensor[(13, 3, 10), float64], Tensor[(864), float32]) {
  %1201 = cast(%var_10272, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %1202 = shape_of(%var_10271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%var_10271, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1205 = equal(%1203, %1204) /* ty=Tensor[(13, 3, 10), bool] */;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %1207 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %1208 = erf(%1206) /* ty=Tensor[(13, 3, 10), float64] */;
  %1209 = %1207.2;
  (%1208, %1209)
}

def @func_7095(%var_7067: Tensor[(864), float32], %var_7086: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(40, 20), float64], Tensor[(864), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8), int16], Tensor[(88, 1), int16], Tensor[(10, 13, 9), int8]) {
  %1210 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1211 = cast(meta[relay.Constant][61] /* ty=Tensor[(40, 20), float64] */, dtype="float64") /* ty=Tensor[(40, 20), float64] */;
  %1212 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1213 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1214 = reshape(%1211, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
  %1215 = reshape(%1212, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %1216 = reshape(%1213, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
  %1217 = @func_4571(%1214, %1215, %1216) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
  %1218 = %1217.2;
  %1219 = cast(%1218, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
  %1220 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1221 = cast(%1218, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
  %1222 = reshape(%1219, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %1223 = reshape(%1220, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1224 = reshape(%1221, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %1225 = @func_5536(%1222, %1223, %1224) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
  %1226 = cast(%var_7086, dtype="int16") /* ty=Tensor[(88, 1), int16] */;
  %1227 = reshape(%1226, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
  %1228 = @func_3895(%1227) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
  %1229 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
  %1230 = %1210.0;
  %1231 = %1225.0;
  %1232 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %1233 = %1228.3;
  %1234 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
  (%1229, %1230, %1218, meta[relay.Constant][61] /* ty=Tensor[(40, 20), float64] */, %var_7067, %1231, %1232, %1233, %var_7086, %1234)
}

def @func_9938() -> (Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) {
  %1235 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %1236 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
  %1237 = @func_8158() /* ty=(Tensor[(2, 72), bool],) */;
  %1238 = %1237.0;
  %1239 = cast(%1238, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %1240 = %1235.0;
  %1241 = %1236.1;
  %1242 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
  %1243 = atanh(%1239) /* ty=Tensor[(2, 72), float32] */;
  (%1240, %1241, %1242, %1243)
}

def @func_4821() -> (Tensor[(10, 13, 9), int8],) {
  %1244 = @func_3213() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1245 = %1244.0;
  (%1245,)
}

def @func_11849() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %1246 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1247 = %1246.0;
  %1248 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
  (%1247, %1248)
}

def @func_2494(%var_2451: Tensor[(5, 10, 16), float64], %var_2459: Tensor[(2, 432), float32]) -> (Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) {
  %1249 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
  %1250 = cast(meta[relay.Constant][62] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1251 = reshape(%1249, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %1252 = reshape(%1250, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %1253 = @func_1808(%1251, %1252) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %1254 = cast(%var_2451, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
  %1255 = sin(%1254) /* ty=Tensor[(5, 10, 16), float64] */;
  %1256 = cast(%var_2451, dtype="int32") /* ty=Tensor[(5, 10, 16), int32] */;
  %1257 = shape_of(%1255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1258 = cast(%1255, dtype="int32") /* ty=Tensor[(5, 10, 16), int32] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1260 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
  %1261 = cast(meta[relay.Constant][62] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1262 = reshape(%1260, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %1263 = reshape(%1261, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %1264 = @func_1808(%1262, %1263) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %1265 = %1253.7;
  %1266 = left_shift(%1258, %1259) /* ty=Tensor[(5, 10, 16), int32] */;
  %1267 = %1264.9;
  (%1265, %var_2459, meta[relay.Constant][62] /* ty=Tensor[(495), int32] */, %1266, %1267)
}

def @func_12457() -> Tensor[(10, 13, 9), int8] {
  @func_9550() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_15576() -> Tensor[(10, 13, 9), int8] {
  @func_11514() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_5725(%var_5712: Tensor[(7, 11, 13), bool], %var_5713: Tensor[(7, 11, 13), bool]) -> (Tensor[(7, 11, 13), bool], Tensor[(10, 13, 9), int8]) {
  %1268 = cast(%var_5713, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %1269 = shape_of(%var_5712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1270 = cast(%var_5712, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
  %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1272 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1273 = logical_and(%1270, %1271) /* ty=Tensor[(7, 11, 13), bool] */;
  %1274 = %1272.0;
  (%1273, %1274)
}

def @func_4356(%var_4353: Tensor[(144), bool]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(144), bool]) {
  %1275 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1276 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1277 = cast(%var_4353, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1278 = cast(%var_4353, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1279 = reshape(%1277, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1280 = reshape(%1278, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1281 = %1275.1;
  %1282 = %1276.0;
  %1283 = @func_2362(%1279, %1280) /* ty=Tensor[(8, 3, 6), bool] */;
  (%1281, %1282, %1283, %var_4353)
}

def @func_11264() -> Tensor[(10, 13, 9), int8] {
  %1284 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1284.0
}

def @func_11893(%var_11861: Tensor[(13, 15, 14), float64]) -> Tensor[(13, 15, 14), float64] {
  %1285 = cast(%var_11861, dtype="float64") /* ty=Tensor[(13, 15, 14), float64] */;
  sin(%1285) /* ty=Tensor[(13, 15, 14), float64] */
}

def @func_3276() -> Tensor[(10, 13, 9), int8] {
  %1286 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1286.0
}

def @func_3213() -> (Tensor[(10, 13, 9), int8],) {
  %1287 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1288 = %1287.0;
  (%1288,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7650() -> (Tensor[(12, 6, 5), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 5), float32] */;
  %1 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %2 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %3 = erf(%0) /* ty=Tensor[(12, 6, 5), float32] */;
  %4 = %1.0;
  %5 = %2.0;
  (%3, %4, %5)
}

def @func_8291() -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
  %12 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
    %6 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
    %7 = @func_6351() /* ty=(Tensor[(800), float64],) */;
    %8 = @func_6898() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %9 = %6.0;
    %10 = %7.0;
    %11 = %8.1;
    (%9, %10, %11)
  };
  %12() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_2828() -> (Tensor[(10, 13, 9), int8],) {
  %20 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    %14 = acosh(%13) /* ty=Tensor[(10, 13, 9), float64] */;
    %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 13, 9), float64] */, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
    %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(%14, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %19 = bitwise_or(%17, %18) /* ty=Tensor[(10, 13, 9), int8] */;
    (%19,)
  };
  %20() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_12844() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %21 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %22 = %21.3;
  %23 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
  (%22, %23)
}

def @func_3349() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) {
  @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */
}

def @func_14745(%var_14744: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(495), int32], Tensor[(10, 13, 9), int8]) {
  %32 = fn (%var_14728: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(495), int32], Tensor[(10, 13, 9), int8]) {
    %24 = @func_8432() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64]) */;
    %25 = cast(%var_14728, dtype="int32") /* ty=Tensor[(495), int32] */;
    %26 = reshape(%25, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
    %27 = @func_12755(%26) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) */;
    %28 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %29 = %24.0;
    %30 = %27.2;
    %31 = %28.0;
    (%29, %30, %var_14728, %31)
  };
  %32(%var_14744) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(495), int32], Tensor[(10, 13, 9), int8]) */
}

def @func_10377(%var_10366: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  %33 = @func_7333() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %34 = cast(%var_10366, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %35 = reshape(%34, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), uint32] */;
  %36 = @func_5383(%35) /* ty=(Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) */;
  %37 = %33.0;
  %38 = %36.1;
  (%37, %38, %var_10366)
}

def @func_9083() -> Tensor[(800), float64] {
  %39 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %39.1
}

def @func_15577() -> Tensor[(10, 13, 9), int8] {
  %40 = fn () -> Tensor[(10, 13, 9), int8] {
    @func_11514() /* ty=Tensor[(10, 13, 9), int8] */
  };
  %40() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_9707() -> (Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
  %45 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
    %41 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %42 = @func_8683() /* ty=(Tensor[(800), int32],) */;
    %43 = %41.0;
    %44 = %42.0;
    (%43, %44)
  };
  %45() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), int32]) */
}

def @func_12358(%var_12269: Tensor[(3, 10, 8), float64], %var_12344: Tensor[(8), int16]) -> (Tensor[(3, 10, 8), bool], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  %46 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(3, 10, 1), float32] */;
  %48 = cast(%var_12269, dtype="float32") /* ty=Tensor[(3, 10, 8), float32] */;
  %49 = floor_divide(%47, %48) /* ty=Tensor[(3, 10, 8), float32] */;
  %50 = cast(%var_12269, dtype="bool") /* ty=Tensor[(3, 10, 8), bool] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="bool") /* ty=Tensor[(3, 10, 8), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  %55 = cast(%54, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %56 = reshape(%55, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %57 = @func_4776(%56) /* ty=(Tensor[(10, 13, 9), float64],) */;
  %58 = cast(meta[relay.Constant][2] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %59 = reshape(%58, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %60 = @func_10039(%59) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) */;
  %61 = cast(%var_12344, dtype="int16") /* ty=Tensor[(8), int16] */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %63 = reshape(%61, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %64 = reshape(%62, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %65 = @func_90(%63, %64) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %66 = greater_equal(%52, %53) /* ty=Tensor[(3, 10, 8), bool] */;
  %67 = %57.0;
  %68 = %60.1;
  %69 = %65.0;
  (%66, %54, %67, %68, meta[relay.Constant][2] /* ty=Tensor[(495), int32] */, %69, %var_12344, meta[relay.Constant][3] /* ty=Tensor[(88), int16] */)
}

def @func_11728() -> Tensor[(10, 13, 9), uint16] {
  %70 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %70.0
}

def @func_11514() -> Tensor[(10, 13, 9), int8] {
  %71 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %71.0
}

def @func_3347() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) {
  %72 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %73 = %72.0;
  %74 = cast(%73, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %75 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %76 = asin(%74) /* ty=Tensor[(10, 13, 9), float32] */;
  (%75, %76)
}

def @func_14164(%var_14162: float64, %var_14163: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
  %80 = fn (%var_14153: float64, %var_14154: Tensor[(2, 6, 16), float64]) -> (Tensor[(2, 6, 16), float64],) {
    %77 = cast(%var_14153, dtype="float64") /* ty=float64 */;
    %78 = cast(%var_14154, dtype="float64") /* ty=Tensor[(2, 6, 16), float64] */;
    %79 = divide(%77, %78) /* ty=Tensor[(2, 6, 16), float64] */;
    (%79,)
  };
  %80(%var_14162, %var_14163) /* ty=(Tensor[(2, 6, 16), float64],) */
}

def @func_2681(%var_2678: Tensor[(3, 1, 4), float32], %var_2679: Tensor[(8), int16], %var_2680: Tensor[(88), int16]) -> (Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  @func_2676(%var_2678, %var_2679, %var_2680) /* ty=(Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */
}

def @func_14036() -> (Tensor[(10, 13, 9), float32],) {
  %81 = @func_12883() /* ty=(Tensor[(88), int16], Tensor[(10, 13, 9), float32]) */;
  %82 = %81.1;
  (%82,)
}

def @func_15312() -> (Tensor[(10, 13, 9), int8], Tensor[(5, 8, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
  @func_15310() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 8, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(800), int32]) */
}

def @func_90(%var_38: Tensor[(4, 2, 1), int16], %var_39: Tensor[(4, 2, 11), int16]) -> (Tensor[(4, 2, 11), int16],) {
  %83 = cast(%var_38, dtype="int16") /* ty=Tensor[(4, 2, 1), int16] */;
  %84 = cast(%var_39, dtype="int16") /* ty=Tensor[(4, 2, 11), int16] */;
  %85 = bitwise_and(%83, %84) /* ty=Tensor[(4, 2, 11), int16] */;
  (%85,)
}

def @func_7475() -> (Tensor[(10, 13, 9), uint16],) {
  %86 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
  (%86,)
}

def @func_5701(%var_5682: Tensor[(9, 8, 11), int8], %var_5683: Tensor[(9, 8, 11), int8]) -> (Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  %87 = cast(%var_5683, dtype="int8") /* ty=Tensor[(9, 8, 11), int8] */;
  %88 = shape_of(%var_5682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_5682, dtype="int8") /* ty=Tensor[(9, 8, 11), int8] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %91 = cast(%var_5682, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %93 = reshape(%92, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), uint32] */;
  %94 = @func_5383(%93) /* ty=(Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) */;
  %95 = multiply(%89, %90) /* ty=Tensor[(9, 8, 11), int8] */;
  %96 = rsqrt(%91) /* ty=Tensor[(9, 8, 11), float64] */;
  %97 = %94.1;
  (%95, %96, %97, meta[relay.Constant][4] /* ty=Tensor[(192), uint32] */)
}

def @func_6127() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %102 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %98 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %99 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %100 = %98.1;
    %101 = %99.0;
    (%100, %101)
  };
  %102() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_13066(%var_13064: Tensor[(15, 16, 13), int16], %var_13065: Tensor[(15, 16, 13), int16]) -> Tensor[(15, 16, 13), int16] {
  @func_13062(%var_13064, %var_13065) /* ty=Tensor[(15, 16, 13), int16] */
}

def @func_11398() -> (Tensor[(5, 8, 9), float64],) {
  %103 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
  %105 = log2(%104) /* ty=Tensor[(5, 8, 9), float64] */;
  (%105,)
}

def @func_9778(%var_9776: Tensor[(495), int32], %var_9777: Tensor[(2, 72), bool]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool]) {
  %120 = fn (%var_9727: Tensor[(495), int32], %var_9762: Tensor[(2, 72), bool]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool]) {
    %106 = cast(%var_9727, dtype="int32") /* ty=Tensor[(495), int32] */;
    %107 = reshape(%106, newshape=[495]) /* ty=Tensor[(495), int32] */;
    %108 = @func_6034(%107) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
    %109 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %110 = @func_8158() /* ty=(Tensor[(2, 72), bool],) */;
    %111 = %110.0;
    %112 = cast(%var_9762, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
    %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(2), int32] */;
    %114 = cast(%111, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
    %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %116 = @func_9149() /* ty=Tensor[(10, 13, 9), uint16] */;
    %117 = %108.2;
    %118 = %109.0;
    %119 = logical_and(%114, %115) /* ty=Tensor[(2, 72), bool] */;
    (%116, %117, %var_9727, %118, %119)
  };
  %120(%var_9776, %var_9777) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool]) */
}

def @func_8208() -> Tensor[(10, 13, 9), int8] {
  %121 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %121.1
}

def @func_14491() -> (Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(495), int32]) {
  %128 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(495), int32]) {
    %122 = @func_13392() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %123 = cast(meta[relay.Constant][5] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
    %124 = reshape(%123, newshape=[495]) /* ty=Tensor[(495), int32] */;
    %125 = @func_10039(%124) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) */;
    %126 = %122.0;
    %127 = %125.2;
    (%126, %127, meta[relay.Constant][5] /* ty=Tensor[(495), int32] */)
  };
  %128() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(495), int32]) */
}

def @func_10266() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %129 = @func_7202() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %130 = @func_9938() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) */;
  %131 = %129.1;
  %132 = %130.2;
  (%131, %132)
}

def @func_9509() -> (Tensor[(800), float32], Tensor[(10, 13, 9), int8]) {
  %133 = @func_4955() /* ty=(Tensor[(800), float32],) */;
  %134 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %135 = %133.0;
  %136 = %134.0;
  (%135, %136)
}

def @func_3641(%var_3635: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) {
  %137 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %139 = reshape(%138, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %140 = @func_3004(%139) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) */;
  %141 = cast(%var_3635, dtype="int32") /* ty=Tensor[(495), int32] */;
  %142 = cast(%var_3635, dtype="int32") /* ty=Tensor[(495), int32] */;
  %143 = reshape(%141, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %144 = reshape(%142, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %145 = @func_661(%143, %144) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %146 = %137.0;
  %147 = %140.0;
  %148 = %145.0;
  (%146, %147, meta[relay.Constant][6] /* ty=Tensor[(864), float32] */, %148, %var_3635)
}

def @func_5175() -> (Tensor[(10, 13, 9), int8],) {
  %151 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %149 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %150 = %149.0;
    (%150,)
  };
  %151() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_12946() -> (Tensor[(800), float64], Tensor[(10, 13, 9), float32]) {
  %152 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %153 = %152.1;
  %154 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
  (%153, %154)
}

def @func_7896(%var_7894: Tensor[(864), float32], %var_7895: Tensor[(792), int8]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32], Tensor[(9, 8, 11), int8], Tensor[(792), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(1, 88), int16], Tensor[(10, 13, 9), float64], Tensor[(8, 100), float64], Tensor[(10, 13, 9), float32]) {
  %189 = fn (%var_7811: Tensor[(864), float32], %var_7814: Tensor[(792), int8]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32], Tensor[(9, 8, 11), int8], Tensor[(792), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(1, 88), int16], Tensor[(10, 13, 9), float64], Tensor[(8, 100), float64], Tensor[(10, 13, 9), float32]) {
    %155 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %156 = cast(%var_7811, dtype="float32") /* ty=Tensor[(864), float32] */;
    %157 = reshape(%156, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
    %158 = @func_4865(%157) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
    %159 = cast(%var_7814, dtype="int8") /* ty=Tensor[(792), int8] */;
    %160 = cast(%var_7814, dtype="int8") /* ty=Tensor[(792), int8] */;
    %161 = reshape(%159, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
    %162 = reshape(%160, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
    %163 = @func_5701(%161, %162) /* ty=(Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
    %164 = %158.3;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
    %166 = reshape(%165, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
    %167 = @func_4865(%166) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
    %168 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 88), int16] */, dtype="int16") /* ty=Tensor[(1, 88), int16] */;
    %170 = reshape(%169, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
    %171 = @func_3895(%170) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
    %172 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
    %173 = %167.2;
    %174 = cast(%173, dtype="float64") /* ty=Tensor[(800), float64] */;
    %175 = reshape(%174, newshape=[8, 100]) /* ty=Tensor[(8, 100), float64] */;
    %176 = @func_6813(%175) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) */;
    %177 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %178 = %177.4;
    %179 = cast(%178, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %180 = %155.0;
    %181 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    %182 = %163.0;
    %183 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    %184 = %168.0;
    %185 = %171.4;
    %186 = %172.1;
    %187 = %176.1;
    %188 = atanh(%179) /* ty=Tensor[(10, 13, 9), float32] */;
    (%180, %181, %164, %var_7811, %182, %var_7814, %173, %183, %184, %185, meta[relay.Constant][7] /* ty=Tensor[(1, 88), int16] */, %186, %187, %188)
  };
  %189(%var_7894, %var_7895) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32], Tensor[(9, 8, 11), int8], Tensor[(792), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(1, 88), int16], Tensor[(10, 13, 9), float64], Tensor[(8, 100), float64], Tensor[(10, 13, 9), float32]) */
}

def @func_5728(%var_5726: Tensor[(7, 11, 13), bool], %var_5727: Tensor[(7, 11, 13), bool]) -> (Tensor[(7, 11, 13), bool], Tensor[(10, 13, 9), int8]) {
  %197 = fn (%var_5712: Tensor[(7, 11, 13), bool], %var_5713: Tensor[(7, 11, 13), bool]) -> (Tensor[(7, 11, 13), bool], Tensor[(10, 13, 9), int8]) {
    %190 = cast(%var_5713, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
    %191 = shape_of(%var_5712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %192 = cast(%var_5712, dtype="bool") /* ty=Tensor[(7, 11, 13), bool] */;
    %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %194 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %195 = logical_and(%192, %193) /* ty=Tensor[(7, 11, 13), bool] */;
    %196 = %194.0;
    (%195, %196)
  };
  %197(%var_5726, %var_5727) /* ty=(Tensor[(7, 11, 13), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_3006(%var_3005: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) {
  %206 = fn (%var_2997: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) {
    %198 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %199 = cast(meta[relay.Constant][8] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %200 = cast(%var_2997, dtype="float32") /* ty=Tensor[(864), float32] */;
    %201 = reshape(%199, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
    %202 = reshape(%200, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
    %203 = @func_2494(%201, %202) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
    %204 = %198.0;
    %205 = %203.4;
    (%204, %205, meta[relay.Constant][8] /* ty=Tensor[(800), float64] */, %var_2997)
  };
  %206(%var_3005) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) */
}

def @func_8899() -> (Tensor[(10, 13, 9), float64],) {
  %209 = fn () -> (Tensor[(10, 13, 9), float64],) {
    %207 = @func_7202() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %208 = %207.0;
    (%208,)
  };
  %209() /* ty=(Tensor[(10, 13, 9), float64],) */
}

def @func_12477() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(6, 42), int64]) {
  %210 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
  %211 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 42), int64] */, dtype="int64") /* ty=Tensor[(6, 42), int64] */;
  %212 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 42), int64] */, dtype="int64") /* ty=Tensor[(6, 42), int64] */;
  %213 = reshape(%211, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %214 = reshape(%212, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
  %215 = @func_8994(%213, %214) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
  %216 = %210.0;
  %217 = %215.2;
  (%216, %217, meta[relay.Constant][9] /* ty=Tensor[(6, 42), int64] */)
}

def @func_5536(%var_5484: Tensor[(800), float64], %var_5485: Tensor[(864), float32], %var_5501: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) {
  %218 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %219 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
  %220 = cast(%var_5484, dtype="float64") /* ty=Tensor[(800), float64] */;
  %221 = cast(%var_5485, dtype="float32") /* ty=Tensor[(864), float32] */;
  %222 = reshape(%220, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %223 = reshape(%221, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %224 = @func_2494(%222, %223) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %225 = cast(%var_5501, dtype="float64") /* ty=Tensor[(800), float64] */;
  %226 = shape_of(%var_5484, dtype="int32") /* ty=Tensor[(1), int32] */;
  %227 = cast(%var_5484, dtype="float64") /* ty=Tensor[(800), float64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?), float64] */;
  %229 = %218.1;
  %230 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %231 = %219.1;
  %232 = %224.2;
  %233 = divide(%227, %228) /* ty=Tensor[(800), float64] */;
  (%229, %230, %231, %232, %var_5485, %233)
}

def @func_5541(%var_5538: Tensor[(800), float64], %var_5539: Tensor[(864), float32], %var_5540: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) {
  @func_5536(%var_5538, %var_5539, %var_5540) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */
}

def @func_11896(%var_11894: Tensor[(13, 15, 14), float64]) -> Tensor[(13, 15, 14), float64] {
  @func_11893(%var_11894) /* ty=Tensor[(13, 15, 14), float64] */
}

def @func_4478(%var_4415: Tensor[(8), int16], %var_4416: Tensor[(44, 2), int16], %var_4438: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) {
  %234 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %235 = cast(%var_4415, dtype="int16") /* ty=Tensor[(8), int16] */;
  %236 = cast(%var_4416, dtype="int16") /* ty=Tensor[(44, 2), int16] */;
  %237 = reshape(%235, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %238 = reshape(%236, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %239 = @func_90(%237, %238) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %240 = cast(%var_4438, dtype="int32") /* ty=Tensor[(495), int32] */;
  %241 = reshape(%240, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %242 = @func_3641(%241) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) */;
  %243 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
  %246 = reshape(%244, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
  %247 = reshape(%245, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %248 = @func_3524(%246, %247) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
  %249 = %234.0;
  %250 = %239.0;
  %251 = %242.2;
  %252 = %248.1;
  (%249, %250, %var_4415, %var_4416, %243, %251, %var_4438, %252, meta[relay.Constant][10] /* ty=Tensor[(800), float64] */)
}

def @func_6352() -> (Tensor[(800), float64],) {
  %255 = fn () -> (Tensor[(800), float64],) {
    %253 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %254 = %253.3;
    (%254,)
  };
  %255() /* ty=(Tensor[(800), float64],) */
}

def @func_4483(%var_4480: Tensor[(8), int16], %var_4481: Tensor[(44, 2), int16], %var_4482: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) {
  @func_4478(%var_4480, %var_4481, %var_4482) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) */
}

def @func_8997(%var_8995: Tensor[(7, 3, 12), int64], %var_8996: Tensor[(7, 3, 12), int64]) -> (Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) {
  %270 = fn (%var_8956: Tensor[(7, 3, 12), int64], %var_8957: Tensor[(7, 3, 12), int64]) -> (Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) {
    %256 = @func_8909() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %257 = cast(%var_8957, dtype="int64") /* ty=Tensor[(7, 3, 12), int64] */;
    %258 = shape_of(%var_8956, dtype="int32") /* ty=Tensor[(3), int32] */;
    %259 = cast(%var_8956, dtype="int64") /* ty=Tensor[(7, 3, 12), int64] */;
    %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %261 = maximum(%259, %260) /* ty=Tensor[(7, 3, 12), int64] */;
    %262 = cast(%var_8957, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="bool") /* ty=Tensor[(7, 3, 12), bool] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %266 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %267 = %256.1;
    %268 = less_equal(%264, %265) /* ty=Tensor[(7, 3, 12), bool] */;
    %269 = %266.0;
    (%267, %268, %269)
  };
  %270(%var_8995, %var_8996) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_14574() -> (Tensor[(10, 13, 9), int8], Tensor[(13, 3, 10), float64], Tensor[(390), int64], Tensor[(5, 7, 4), float32], Tensor[(10, 13, 9), int8]) {
  %281 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(13, 3, 10), float64], Tensor[(390), int64], Tensor[(5, 7, 4), float32], Tensor[(10, 13, 9), int8]) {
    %271 = cast(meta[relay.Constant][11] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
    %272 = cast(meta[relay.Constant][11] /* ty=Tensor[(390), int64] */, dtype="int64") /* ty=Tensor[(390), int64] */;
    %273 = reshape(%271, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
    %274 = reshape(%272, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
    %275 = @func_10283(%273, %274) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(864), float32]) */;
    %276 = @func_13348() /* ty=(Tensor[(5, 7, 4), float32],) */;
    %277 = @func_13479() /* ty=Tensor[(10, 13, 9), int8] */;
    %278 = %275.0;
    %279 = %276.0;
    %280 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
    (%277, %278, meta[relay.Constant][11] /* ty=Tensor[(390), int64] */, %279, %280)
  };
  %281() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(13, 3, 10), float64], Tensor[(390), int64], Tensor[(5, 7, 4), float32], Tensor[(10, 13, 9), int8]) */
}

def @func_6183() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %285 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %282 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %283 = %282.0;
    %284 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_8434() -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64]) {
  @func_8432() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64]) */
}

def @func_12633() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  @func_12631() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */
}

def @func_9511() -> (Tensor[(800), float32], Tensor[(10, 13, 9), int8]) {
  @func_9509() /* ty=(Tensor[(800), float32], Tensor[(10, 13, 9), int8]) */
}

def @func_11582() -> (Tensor[(800), float64], Tensor[(?, 864), bool], Tensor[(10, 13, 9), int8]) {
  @func_11580() /* ty=(Tensor[(800), float64], Tensor[(?, 864), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_8683() -> (Tensor[(800), int32],) {
  %286 = @func_4955() /* ty=(Tensor[(800), float32],) */;
  %287 = %286.0;
  %288 = cast(meta[relay.Constant][12] /* ty=Tensor[(800), float32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(1), int32] */;
  %290 = cast(%287, dtype="int32") /* ty=Tensor[(800), int32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?), int32] */;
  %292 = right_shift(%290, %291) /* ty=Tensor[(800), int32] */;
  (%292,)
}

def @func_3731() -> (Tensor[(10, 13, 9), int8],) {
  @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_8334() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  @func_8332() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */
}

def @func_5569() -> (Tensor[(10, 13, 9), int8],) {
  @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_14655() -> (Tensor[(8, 3, 6), bool],) {
  %295 = fn () -> (Tensor[(8, 3, 6), bool],) {
    %293 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
    %294 = %293.2;
    (%294,)
  };
  %295() /* ty=(Tensor[(8, 3, 6), bool],) */
}

def @func_14805() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %296 = @func_5034() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %297 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %298 = %296.1;
  %299 = %297.0;
  (%298, %299)
}

def @func_11225(%var_11223: Tensor[(800), float64], %var_11224: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), bool]) {
  %314 = fn (%var_11159: Tensor[(800), float64], %var_11160: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), bool]) {
    %300 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %301 = @func_6785() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %302 = cast(%var_11159, dtype="float64") /* ty=Tensor[(800), float64] */;
    %303 = cast(%var_11160, dtype="float32") /* ty=Tensor[(864), float32] */;
    %304 = reshape(%302, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
    %305 = reshape(%303, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
    %306 = @func_2494(%304, %305) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
    %307 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
    %308 = @func_3981() /* ty=(Tensor[(10, 13, 9), bool],) */;
    %309 = %300.0;
    %310 = %301.0;
    %311 = %306.4;
    %312 = %307.0;
    %313 = %308.0;
    (%309, %310, %311, %var_11159, %var_11160, %312, %313)
  };
  %314(%var_11223, %var_11224) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), bool]) */
}

def @func_9477() -> (Tensor[(864), float32], Tensor[(800), int16]) {
  @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */
}

def @func_12631() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %315 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %316 = @func_11280() /* ty=(Tensor[(88), int16],) */;
  %317 = %315.0;
  %318 = %316.0;
  (%317, %318)
}

def @func_7041() -> (Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) {
  %328 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) {
    %319 = cast(meta[relay.Constant][13] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %320 = cast(meta[relay.Constant][14] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %321 = cast(meta[relay.Constant][14] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %322 = reshape(%319, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
    %323 = reshape(%320, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %324 = reshape(%321, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %325 = @func_4571(%322, %323, %324) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
    %326 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
    %327 = %325.3;
    (%326, %327, meta[relay.Constant][13] /* ty=Tensor[(800), float64] */, meta[relay.Constant][14] /* ty=Tensor[(864), float32] */)
  };
  %328() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */
}

def @func_3528(%var_3526: Tensor[(10, 13, 9), float32], %var_3527: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) {
  @func_3524(%var_3526, %var_3527) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */
}

def @func_5419() -> (Tensor[(8, 3, 6), bool],) {
  %329 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
  %330 = %329.2;
  (%330,)
}

def @func_11768(%var_11766: Tensor[(15, 12, 16), int16], %var_11767: Tensor[(15, 12, 16), int16]) -> Tensor[(15, 12, 16), float32] {
  %340 = fn (%var_11746: Tensor[(15, 12, 16), int16], %var_11747: Tensor[(15, 12, 16), int16]) -> Tensor[(15, 12, 16), float32] {
    %331 = cast(%var_11747, dtype="int16") /* ty=Tensor[(15, 12, 16), int16] */;
    %332 = shape_of(%var_11746, dtype="int32") /* ty=Tensor[(3), int32] */;
    %333 = cast(%var_11746, dtype="int16") /* ty=Tensor[(15, 12, 16), int16] */;
    %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %335 = logical_xor(%333, %334) /* ty=Tensor[(15, 12, 16), int16] */;
    %336 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 12, 16), int16] */, dtype="float32") /* ty=Tensor[(15, 12, 16), float32] */;
    %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
    %338 = cast(%335, dtype="float32") /* ty=Tensor[(15, 12, 16), float32] */;
    %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%338, %339) /* ty=Tensor[(15, 12, 16), float32] */
  };
  %340(%var_11766, %var_11767) /* ty=Tensor[(15, 12, 16), float32] */
}

def @func_10801() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(800), int32], Tensor[(2, 72), bool]) {
  %348 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(800), int32], Tensor[(2, 72), bool]) {
    %341 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %342 = @func_7333() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %343 = @func_8683() /* ty=(Tensor[(800), int32],) */;
    %344 = %341.1;
    %345 = %342.0;
    %346 = %343.0;
    %347 = @func_9637() /* ty=Tensor[(2, 72), bool] */;
    (%344, %345, %346, %347)
  };
  %348() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(800), int32], Tensor[(2, 72), bool]) */
}

def @func_5666() -> (Tensor[(10, 13, 9), int8],) {
  @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_15023() -> (Tensor[(10, 13, 9), int8],) {
  %349 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  (%349,)
}

def @func_13130() -> (Tensor[(10, 13, 9), int8],) {
  @func_13128() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_15880(%var_15878: Tensor[(2, 72), float64]) -> (Tensor[(2, 72), bool],) {
  @func_15877(%var_15878) /* ty=(Tensor[(2, 72), bool],) */
}

def @func_14368(%var_14366: Tensor[(11, 5, 11), float32], %var_14367: Tensor[(495), int32]) -> (Tensor[(11, 5, 11), float64], Tensor[(864), float32], Tensor[(495), int64]) {
  %365 = fn (%var_14329: Tensor[(11, 5, 11), float32], %var_14337: Tensor[(495), int32]) -> (Tensor[(11, 5, 11), float64], Tensor[(864), float32], Tensor[(495), int64]) {
    %350 = cast(%var_14329, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
    %351 = erf(%350) /* ty=Tensor[(11, 5, 11), float32] */;
    %352 = cast(%351, dtype="float64") /* ty=Tensor[(11, 5, 11), float64] */;
    %353 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
    %354 = cast(%var_14337, dtype="int32") /* ty=Tensor[(495), int32] */;
    %355 = reshape(%354, newshape=[495, 1]) /* ty=Tensor[(495, 1), int32] */;
    %356 = @func_11344(%355) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) */;
    %357 = %356.2;
    %358 = cast(%357, dtype="int64") /* ty=Tensor[(495, 1), int64] */;
    %359 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(1), int32] */;
    %360 = cast(%var_14337, dtype="int64") /* ty=Tensor[(495), int64] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?), int64] */;
    %362 = sin(%352) /* ty=Tensor[(11, 5, 11), float64] */;
    %363 = %353.0;
    %364 = bitwise_and(%360, %361) /* ty=Tensor[(495), int64] */;
    (%362, %363, %364)
  };
  %365(%var_14366, %var_14367) /* ty=(Tensor[(11, 5, 11), float64], Tensor[(864), float32], Tensor[(495), int64]) */
}

def @func_661(%var_653: Tensor[(5, 9, 11), int32], %var_654: Tensor[(5, 9, 11), int32]) -> (Tensor[(5, 9, 11), bool],) {
  %366 = cast(%var_654, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %367 = shape_of(%var_653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%var_653, dtype="bool") /* ty=Tensor[(5, 9, 11), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %370 = less(%368, %369) /* ty=Tensor[(5, 9, 11), bool] */;
  (%370,)
}

def @func_8910() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %374 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %371 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %372 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
    %373 = %371.0;
    (%372, %373)
  };
  %374() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_4957() -> (Tensor[(800), float32],) {
  @func_4955() /* ty=(Tensor[(800), float32],) */
}

def @func_9975() -> (Tensor[(10, 13, 9), float32],) {
  %375 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
  (%375,)
}

def @func_13062(%var_13057: Tensor[(15, 16, 13), int16], %var_13058: Tensor[(15, 16, 13), int16]) -> Tensor[(15, 16, 13), int16] {
  %376 = cast(%var_13058, dtype="int16") /* ty=Tensor[(15, 16, 13), int16] */;
  %377 = shape_of(%var_13057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_13057, dtype="int16") /* ty=Tensor[(15, 16, 13), int16] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  multiply(%378, %379) /* ty=Tensor[(15, 16, 13), int16] */
}

def @func_8513() -> (Tensor[(10, 13, 9), int8],) {
  %380 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %381 = %380.0;
  (%381,)
}

def @func_3688() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %386 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %382 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %383 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %384 = %382.0;
    %385 = %383.1;
    (%384, %385)
  };
  %386() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_9977() -> (Tensor[(10, 13, 9), float32],) {
  @func_9975() /* ty=(Tensor[(10, 13, 9), float32],) */
}

def @func_11786(%var_11785: Tensor[(14, 11, 2), float64]) -> Tensor[(14, 11, 2), float64] {
  %388 = fn (%var_11772: Tensor[(14, 11, 2), float64]) -> Tensor[(14, 11, 2), float64] {
    %387 = cast(%var_11772, dtype="float64") /* ty=Tensor[(14, 11, 2), float64] */;
    sinh(%387) /* ty=Tensor[(14, 11, 2), float64] */
  };
  %388(%var_11785) /* ty=Tensor[(14, 11, 2), float64] */
}

def @func_7742() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
  %399 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
    %389 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %390 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %391 = @func_6443() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) */;
    %392 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %393 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
    %394 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
    %395 = %389.0;
    %396 = %390.0;
    %397 = %391.0;
    %398 = %392.1;
    (%393, %394, %395, %396, %397, %398)
  };
  %399() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */
}

def @func_3159() -> (Tensor[(10, 13, 9), int8],) {
  @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_8210() -> Tensor[(10, 13, 9), int8] {
  @func_8208() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_8159() -> (Tensor[(2, 72), bool],) {
  %401 = fn () -> (Tensor[(2, 72), bool],) {
    %400 = @func_7758() /* ty=Tensor[(2, 72), bool] */;
    (%400,)
  };
  %401() /* ty=(Tensor[(2, 72), bool],) */
}

def @func_5091(%var_5090: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
  %403 = fn (%var_5076: Tensor[(6, 11, 7), float64]) -> Tensor[(6, 11, 7), float64] {
    %402 = cast(%var_5076, dtype="float64") /* ty=Tensor[(6, 11, 7), float64] */;
    log(%402) /* ty=Tensor[(6, 11, 7), float64] */
  };
  %403(%var_5090) /* ty=Tensor[(6, 11, 7), float64] */
}

def @func_13651() -> (Tensor[(10, 13, 9), int8],) {
  %404 = @func_10900() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %405 = %404.0;
  (%405,)
}

def @func_15678(%var_15676: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
  @func_15675(%var_15676) /* ty=Tensor[(12, 5, 16), float32] */
}

def @func_12758(%var_12756: Tensor[(5, 99), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) {
  @func_12755(%var_12756) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) */
}

def @func_7203() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %409 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
    %406 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
    %407 = %406.0;
    %408 = @func_5339() /* ty=Tensor[(10, 13, 9), int8] */;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_12510() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %413 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %410 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %411 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
    %412 = %410.0;
    (%411, %412)
  };
  %413() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_11955(%var_11938: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(800), float64], Tensor[(864), float32], Tensor[(252), int64], Tensor[(10, 13, 9), float32]) {
  %414 = @func_10541() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %415 = cast(%var_11938, dtype="float64") /* ty=Tensor[(800), float64] */;
  %416 = cast(meta[relay.Constant][16] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %417 = cast(%var_11938, dtype="float64") /* ty=Tensor[(800), float64] */;
  %418 = reshape(%415, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %419 = reshape(%416, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %420 = reshape(%417, newshape=[800]) /* ty=Tensor[(800), float64] */;
  %421 = @func_5536(%418, %419, %420) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
  %422 = @func_9268() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) */;
  %423 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %424 = %414.0;
  %425 = %421.2;
  %426 = %422.2;
  %427 = %423.5;
  (%424, %425, %var_11938, meta[relay.Constant][16] /* ty=Tensor[(864), float32] */, %426, %427)
}

def @func_4867(%var_4866: Tensor[(6, 144), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) {
  %438 = fn (%var_4860: Tensor[(6, 144), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) {
    %428 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %429 = cast(meta[relay.Constant][17] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %430 = cast(%var_4860, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
    %431 = cast(%var_4860, dtype="float32") /* ty=Tensor[(6, 144), float32] */;
    %432 = reshape(%429, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
    %433 = reshape(%430, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %434 = reshape(%431, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %435 = @func_4571(%432, %433, %434) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
    %436 = %428.0;
    %437 = %435.2;
    (%436, %437, meta[relay.Constant][17] /* ty=Tensor[(800), float64] */, %var_4860)
  };
  %438(%var_4866) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */
}

def @func_13149() -> (Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(88), int16]) {
  %445 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(88), int16]) {
    %439 = @func_6542() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %440 = cast(meta[relay.Constant][18] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
    %441 = reshape(%440, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
    %442 = @func_3895(%441) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
    %443 = %439.0;
    %444 = %442.4;
    (%443, %444, meta[relay.Constant][18] /* ty=Tensor[(88), int16] */)
  };
  %445() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88, 1), int16], Tensor[(88), int16]) */
}

def @func_13350() -> (Tensor[(5, 7, 4), float32],) {
  @func_13348() /* ty=(Tensor[(5, 7, 4), float32],) */
}

def @func_12602() -> (Tensor[(8, 3, 5), float64],) {
  %448 = fn () -> (Tensor[(8, 3, 5), float64],) {
    %446 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
    %447 = exp(%446) /* ty=Tensor[(8, 3, 5), float64] */;
    (%447,)
  };
  %448() /* ty=(Tensor[(8, 3, 5), float64],) */
}

def @func_4653() -> (Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) {
  %449 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %450 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %451 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 72), bool] */, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %452 = reshape(%450, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %453 = reshape(%451, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %454 = @func_2362(%452, %453) /* ty=Tensor[(8, 3, 6), bool] */;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(8, 3, 6), float32] */;
  %456 = sinh(%455) /* ty=Tensor[(8, 3, 6), float32] */;
  %457 = cast(%454, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = %449.0;
  %462 = less_equal(%459, %460) /* ty=Tensor[(8, 3, 6), bool] */;
  (%461, meta[relay.Constant][20] /* ty=Tensor[(2, 72), bool] */, %462)
}

def @func_2840() -> (Tensor[(10, 13, 9), int8],) {
  %465 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %463 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %464 = %463.0;
    (%464,)
  };
  %465() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_3898(%var_3896: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) {
  @func_3895(%var_3896) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */
}

def @func_6572() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %466 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %467 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %468 = %466.0;
  %469 = %467.0;
  (%468, %469)
}

def @func_7416() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %475 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %470 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %471 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %472 = %470.0;
    %473 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
    %474 = %471.0;
    (%472, %473, %474)
  };
  %475() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_3213() -> (Tensor[(10, 13, 9), int8],) {
  %476 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %477 = %476.0;
  (%477,)
}

def @func_4710() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %478 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %479 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
  %480 = %478.0;
  (%479, %480)
}

def @func_11281() -> (Tensor[(88), int16],) {
  %482 = fn () -> (Tensor[(88), int16],) {
    %481 = @func_8541() /* ty=Tensor[(88), int16] */;
    (%481,)
  };
  %482() /* ty=(Tensor[(88), int16],) */
}

def @func_7277() -> Tensor[(10, 13, 9), float32] {
  @func_7275() /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_9336() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %488 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %483 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %484 = @func_7779() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %485 = %483.0;
    %486 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
    %487 = %484.0;
    (%485, %486, %487)
  };
  %488() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_3802() -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) {
  @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */
}

def @func_10218() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %489 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %490 = @func_8909() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %491 = %489.1;
  %492 = %490.1;
  (%491, %492)
}

def @func_13748(%var_13747: Tensor[(11, 1, 1), int16]) -> Tensor[(11, 2, 6), int16] {
  %495 = fn (%var_13733: Tensor[(11, 1, 1), int16]) -> Tensor[(11, 2, 6), int16] {
    %493 = cast(%var_13733, dtype="int16") /* ty=Tensor[(11, 1, 1), int16] */;
    %494 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 2, 6), int16] */, dtype="int16") /* ty=Tensor[(11, 2, 6), int16] */;
    maximum(%493, %494) /* ty=Tensor[(11, 2, 6), int16] */
  };
  %495(%var_13747) /* ty=Tensor[(11, 2, 6), int16] */
}

def @func_11060() -> (Tensor[(10, 13, 9), int8],) {
  %496 = @func_5339() /* ty=Tensor[(10, 13, 9), int8] */;
  (%496,)
}

def @func_9149() -> Tensor[(10, 13, 9), uint16] {
  %497 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %497.0
}

def @func_9151() -> Tensor[(10, 13, 9), uint16] {
  @func_9149() /* ty=Tensor[(10, 13, 9), uint16] */
}

def @func_3729() -> (Tensor[(10, 13, 9), int8],) {
  %498 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %499 = %498.0;
  (%499,)
}

def @func_3246() -> Tensor[(10, 13, 9), int8] {
  %500 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %500.0
}

def @func_15713() -> (Tensor[(10, 13, 9), int8],) {
  %501 = @func_12457() /* ty=Tensor[(10, 13, 9), int8] */;
  (%501,)
}

def @func_8542() -> Tensor[(88), int16] {
  %503 = fn () -> Tensor[(88), int16] {
    %502 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %502.2
  };
  %503() /* ty=Tensor[(88), int16] */
}

def @func_8725() -> Tensor[(3, 10, 1), float64] {
  @func_7566() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_6787() -> (Tensor[(10, 13, 9), int8],) {
  @func_6785() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_10287(%var_10285: Tensor[(13, 3, 10), int64], %var_10286: Tensor[(13, 3, 10), int64]) -> (Tensor[(13, 3, 10), float64], Tensor[(864), float32]) {
  @func_10283(%var_10285, %var_10286) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(864), float32]) */
}

def @func_8756(%var_8755: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 13, 9), int8]) {
  %508 = fn (%var_8748: Tensor[(4, 15, 2), float32]) -> (Tensor[(4, 15, 2), float32], Tensor[(10, 13, 9), int8]) {
    %504 = cast(%var_8748, dtype="float32") /* ty=Tensor[(4, 15, 2), float32] */;
    %505 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %506 = asin(%504) /* ty=Tensor[(4, 15, 2), float32] */;
    %507 = %505.0;
    (%506, %507)
  };
  %508(%var_8755) /* ty=(Tensor[(4, 15, 2), float32], Tensor[(10, 13, 9), int8]) */
}

def @func_10268() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_10266() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_3105() -> Tensor[(10, 13, 9), int8] {
  %510 = fn () -> Tensor[(10, 13, 9), int8] {
    %509 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %509.0
  };
  %510() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_2494(%var_2451: Tensor[(5, 10, 16), float64], %var_2459: Tensor[(2, 432), float32]) -> (Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) {
  %511 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
  %512 = cast(meta[relay.Constant][22] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %513 = reshape(%511, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %514 = reshape(%512, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %515 = @func_1808(%513, %514) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %516 = cast(%var_2451, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
  %517 = sin(%516) /* ty=Tensor[(5, 10, 16), float64] */;
  %518 = cast(%var_2451, dtype="int32") /* ty=Tensor[(5, 10, 16), int32] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="int32") /* ty=Tensor[(5, 10, 16), int32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %522 = cast(%var_2459, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
  %523 = cast(meta[relay.Constant][22] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
  %524 = reshape(%522, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %525 = reshape(%523, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %526 = @func_1808(%524, %525) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %527 = %515.7;
  %528 = left_shift(%520, %521) /* ty=Tensor[(5, 10, 16), int32] */;
  %529 = %526.9;
  (%527, %var_2459, meta[relay.Constant][22] /* ty=Tensor[(495), int32] */, %528, %529)
}

def @func_10901() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %534 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %530 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %531 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %532 = %530.0;
    %533 = %531.0;
    (%532, %533)
  };
  %534() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_13223(%var_13204: Tensor[(8), int16], %var_13208: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(432, 2), float32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(3, 10, 1), float64]) {
  %535 = @func_9509() /* ty=(Tensor[(800), float32], Tensor[(10, 13, 9), int8]) */;
  %536 = @func_8036() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) */;
  %537 = cast(%var_13204, dtype="int16") /* ty=Tensor[(8), int16] */;
  %538 = cast(meta[relay.Constant][23] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %539 = reshape(%537, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %540 = reshape(%538, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %541 = @func_90(%539, %540) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %542 = cast(%var_13208, dtype="float64") /* ty=Tensor[(800), float64] */;
  %543 = %536.2;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(432, 2), float32] */;
  %545 = reshape(%542, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %546 = reshape(%544, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %547 = @func_2494(%545, %546) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %548 = %535.1;
  %549 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %550 = %541.0;
  %551 = %547.4;
  %552 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  (%548, %549, %543, %550, %var_13204, meta[relay.Constant][23] /* ty=Tensor[(88), int16] */, %551, %var_13208, %552)
}

def @func_7593() -> (Tensor[(10, 13, 9), uint16],) {
  %553 = @func_7475() /* ty=(Tensor[(10, 13, 9), uint16],) */;
  %554 = %553.0;
  (%554,)
}

def @func_10170() -> (Tensor[(10, 13, 9), int8],) {
  %556 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %555 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
    (%555,)
  };
  %556() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_11974() -> (Tensor[(8, 3, 6), bool],) {
  %557 = @func_5419() /* ty=(Tensor[(8, 3, 6), bool],) */;
  %558 = %557.0;
  (%558,)
}

def @func_5370() -> (Tensor[(10, 13, 9), int8],) {
  %561 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %559 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %560 = %559.1;
    (%560,)
  };
  %561() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_4166() -> Tensor[(10, 13, 9), int8] {
  %563 = fn () -> Tensor[(10, 13, 9), int8] {
    %562 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %562.0
  };
  %563() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_13020(%var_13017: Tensor[(88), int16], %var_13018: Tensor[(495), int32], %var_13019: Tensor[(156, 1), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(8), int16], Tensor[(88), int16], Tensor[(800), int32], Tensor[(13, 4, 3), float64], Tensor[(156, 495), bool]) {
  %590 = fn (%var_12972: Tensor[(88), int16], %var_12973: Tensor[(495), int32], %var_12992: Tensor[(156, 1), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(8), int16], Tensor[(88), int16], Tensor[(800), int32], Tensor[(13, 4, 3), float64], Tensor[(156, 495), bool]) {
    %564 = @func_8290() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %565 = cast(meta[relay.Constant][24] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
    %566 = cast(%var_12972, dtype="int16") /* ty=Tensor[(88), int16] */;
    %567 = cast(%var_12973, dtype="int32") /* ty=Tensor[(495), int32] */;
    %568 = reshape(%565, newshape=[8]) /* ty=Tensor[(8), int16] */;
    %569 = reshape(%566, newshape=[44, 2]) /* ty=Tensor[(44, 2), int16] */;
    %570 = reshape(%567, newshape=[495]) /* ty=Tensor[(495), int32] */;
    %571 = @func_4478(%568, %569, %570) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) */;
    %572 = cast(%var_12992, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %573 = cast(%var_12992, dtype="float64") /* ty=Tensor[(156, 1), float64] */;
    %574 = reshape(%572, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %575 = reshape(%573, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %576 = @func_5297(%574, %575) /* ty=(Tensor[(13, 4, 3), float64],) */;
    %577 = cast(%var_12973, dtype="float32") /* ty=Tensor[(495), float32] */;
    %578 = cast(%var_12992, dtype="float32") /* ty=Tensor[(156, 1), float32] */;
    %579 = divide(%577, %578) /* ty=Tensor[(156, 495), float32] */;
    %580 = cast(%579, dtype="bool") /* ty=Tensor[(156, 495), bool] */;
    %581 = cast(%var_12973, dtype="bool") /* ty=Tensor[(495), bool] */;
    %582 = greater_equal(%580, %581) /* ty=Tensor[(156, 495), bool] */;
    %583 = cast(%var_12992, dtype="bool") /* ty=Tensor[(156, 1), bool] */;
    %584 = cast(%582, dtype="bool") /* ty=Tensor[(156, 495), bool] */;
    %585 = %564.2;
    %586 = %571.5;
    %587 = @func_12039() /* ty=Tensor[(800), int32] */;
    %588 = %576.0;
    %589 = less(%583, %584) /* ty=Tensor[(156, 495), bool] */;
    (%585, %586, meta[relay.Constant][24] /* ty=Tensor[(8), int16] */, %var_12972, %587, %588, %589)
  };
  %590(%var_13017, %var_13018, %var_13019) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(8), int16], Tensor[(88), int16], Tensor[(800), int32], Tensor[(13, 4, 3), float64], Tensor[(156, 495), bool]) */
}

def @func_10541() -> (Tensor[(10, 13, 9), int8],) {
  %591 = @func_8814() /* ty=(Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) */;
  %592 = %591.1;
  (%592,)
}

def @func_6228() -> Tensor[(10, 13, 9), uint16] {
  %601 = fn () -> Tensor[(10, 13, 9), uint16] {
    %593 = @func_3981() /* ty=(Tensor[(10, 13, 9), bool],) */;
    %594 = %593.0;
    %595 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %596 = %595.0;
    %597 = cast(%596, dtype="uint16") /* ty=Tensor[(10, 13, 9), uint16] */;
    %598 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%594, dtype="uint16") /* ty=Tensor[(10, 13, 9), uint16] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    add(%599, %600) /* ty=Tensor[(10, 13, 9), uint16] */
  };
  %601() /* ty=Tensor[(10, 13, 9), uint16] */
}

def @func_7275() -> Tensor[(10, 13, 9), float32] {
  @func_6654() /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_14318() -> (Tensor[(10, 13, 9), int8], Tensor[(864), float64]) {
  %607 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(864), float64]) {
    %602 = @func_12526() /* ty=(Tensor[(864), float32],) */;
    %603 = %602.0;
    %604 = cast(%603, dtype="float64") /* ty=Tensor[(864), float64] */;
    %605 = @func_9535() /* ty=Tensor[(10, 13, 9), int8] */;
    %606 = asinh(%604) /* ty=Tensor[(864), float64] */;
    (%605, %606)
  };
  %607() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(864), float64]) */
}

def @func_2909() -> (Tensor[(10, 13, 9), int8],) {
  %608 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %609 = %608.0;
  (%609,)
}

def @func_3215() -> (Tensor[(10, 13, 9), int8],) {
  @func_3213() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_9537() -> Tensor[(10, 13, 9), int8] {
  @func_9535() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_665(%var_663: Tensor[(5, 9, 11), int32], %var_664: Tensor[(5, 9, 11), int32]) -> (Tensor[(5, 9, 11), bool],) {
  @func_661(%var_663, %var_664) /* ty=(Tensor[(5, 9, 11), bool],) */
}

def @func_11400() -> (Tensor[(5, 8, 9), float64],) {
  @func_11398() /* ty=(Tensor[(5, 8, 9), float64],) */
}

def @func_12885() -> (Tensor[(88), int16], Tensor[(10, 13, 9), float32]) {
  @func_12883() /* ty=(Tensor[(88), int16], Tensor[(10, 13, 9), float32]) */
}

def @func_10380(%var_10378: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  @func_10377(%var_10378) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */
}

def @func_11893(%var_11861: Tensor[(13, 15, 14), float64]) -> Tensor[(13, 15, 14), float64] {
  %610 = cast(%var_11861, dtype="float64") /* ty=Tensor[(13, 15, 14), float64] */;
  sin(%610) /* ty=Tensor[(13, 15, 14), float64] */
}

def @func_2856() -> (Tensor[(10, 13, 9), int8],) {
  %613 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %611 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %612 = %611.0;
    (%612,)
  };
  %613() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_11346(%var_11345: Tensor[(495, 1), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) {
  %620 = fn (%var_11339: Tensor[(495, 1), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) {
    %614 = @func_11060() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %615 = cast(%var_11339, dtype="int32") /* ty=Tensor[(495, 1), int32] */;
    %616 = reshape(%615, newshape=[495]) /* ty=Tensor[(495), int32] */;
    %617 = @func_6034(%616) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
    %618 = %614.0;
    %619 = %617.3;
    (%618, %619, %var_11339)
  };
  %620(%var_11345) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) */
}

def @func_9475() -> (Tensor[(864), float32], Tensor[(800), int16]) {
  %621 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %622 = %621.3;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(864), float32] */;
  %624 = reshape(%623, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %625 = @func_4865(%624) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %626 = %625.2;
  %627 = cast(meta[relay.Constant][25] /* ty=Tensor[(800), float64] */, dtype="int16") /* ty=Tensor[(800), int16] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(1), int32] */;
  %629 = cast(%626, dtype="int16") /* ty=Tensor[(800), int16] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?), int16] */;
  %631 = bitwise_xor(%629, %630) /* ty=Tensor[(800), int16] */;
  (%622, %631)
}

def @func_5385(%var_5384: Tensor[(3, 4, 16), uint32]) -> (Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) {
  %639 = fn (%var_5371: Tensor[(3, 4, 16), uint32]) -> (Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) {
    %632 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 4, 16), uint32] */, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
    %633 = shape_of(%var_5371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%var_5371, dtype="bool") /* ty=Tensor[(3, 4, 16), bool] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %636 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %637 = greater(%634, %635) /* ty=Tensor[(3, 4, 16), bool] */;
    %638 = %636.0;
    (%637, %638)
  };
  %639(%var_5384) /* ty=(Tensor[(3, 4, 16), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_9085() -> Tensor[(800), float64] {
  @func_9083() /* ty=Tensor[(800), float64] */
}

def @func_12528() -> (Tensor[(864), float32],) {
  @func_12526() /* ty=(Tensor[(864), float32],) */
}

def @func_9535() -> Tensor[(10, 13, 9), int8] {
  %640 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %640.0
}

def @func_12040() -> Tensor[(800), int32] {
  %642 = fn () -> Tensor[(800), int32] {
    %641 = @func_8683() /* ty=(Tensor[(800), int32],) */;
    %641.0
  };
  %642() /* ty=Tensor[(800), int32] */
}

def @func_14901(%var_14898: Tensor[(864), float32], %var_14899: Tensor[(495), int32], %var_14900: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 99), int32], Tensor[(495), int32], Tensor[(165, 3), int32], Tensor[(792), int8], Tensor[(864), bool], Tensor[(10, 13, 9), int8]) {
  @func_14896(%var_14898, %var_14899, %var_14900) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 99), int32], Tensor[(495), int32], Tensor[(165, 3), int32], Tensor[(792), int8], Tensor[(864), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_11266() -> Tensor[(10, 13, 9), int8] {
  @func_11264() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_10645() -> (Tensor[(800), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %653 = fn () -> (Tensor[(800), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
    %643 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
    %644 = @func_10131() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
    %645 = %644.0;
    %646 = cast(%645, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %647 = %643.1;
    %648 = cast(%647, dtype="float64") /* ty=Tensor[(800), float64] */;
    %649 = reshape(%646, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
    %650 = reshape(%648, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %651 = @func_3524(%649, %650) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
    %652 = %651.3;
    (%647, %645, %652)
  };
  %653() /* ty=(Tensor[(800), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_11017(%var_11013: Tensor[(864), float32], %var_11014: Tensor[(195, 2), int64], %var_11015: Tensor[(800), float64], %var_11016: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(13, 3, 10), float64], Tensor[(195, 2), int64], Tensor[(800), bool], Tensor[(800), float64], Tensor[(192), uint32], Tensor[(192), uint32]) {
  @func_11011(%var_11013, %var_11014, %var_11015, %var_11016) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(13, 3, 10), float64], Tensor[(195, 2), int64], Tensor[(800), bool], Tensor[(800), float64], Tensor[(192), uint32], Tensor[(192), uint32]) */
}

def @func_13479() -> Tensor[(10, 13, 9), int8] {
  %654 = @func_6542() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %654.0
}

def @func_9434() -> (Tensor[(10, 13, 9), int8], Tensor[(252), int64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %669 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(252), int64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
    %655 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %656 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %657 = cast(meta[relay.Constant][27] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
    %658 = cast(meta[relay.Constant][27] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
    %659 = reshape(%657, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
    %660 = reshape(%658, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
    %661 = @func_8994(%659, %660) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
    %662 = %661.2;
    %663 = cast(%662, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %664 = rsqrt(%663) /* ty=Tensor[(10, 13, 9), float32] */;
    %665 = cast(%664, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    %666 = %655.1;
    %667 = %656.0;
    %668 = log10(%665) /* ty=Tensor[(10, 13, 9), float64] */;
    (%666, meta[relay.Constant][27] /* ty=Tensor[(252), int64] */, %667, %668)
  };
  %669() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(252), int64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) */
}

def @func_14711() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %675 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
    %670 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %671 = @func_8332() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */;
    %672 = %670.4;
    %673 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
    %674 = %671.1;
    (%672, %673, %674)
  };
  %675() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */
}

def @func_11849() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %676 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %677 = %676.0;
  %678 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
  (%677, %678)
}

def @func_3983() -> (Tensor[(10, 13, 9), bool],) {
  @func_3981() /* ty=(Tensor[(10, 13, 9), bool],) */
}

def @func_3157() -> (Tensor[(10, 13, 9), int8],) {
  %679 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %680 = %679.0;
  (%680,)
}

def @func_2365(%var_2363: Tensor[(8, 3, 6), bool], %var_2364: Tensor[(8, 3, 6), bool]) -> Tensor[(8, 3, 6), bool] {
  %685 = fn (%var_2349: Tensor[(8, 3, 6), bool], %var_2350: Tensor[(8, 3, 6), bool]) -> Tensor[(8, 3, 6), bool] {
    %681 = cast(%var_2350, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
    %682 = shape_of(%var_2349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%var_2349, dtype="bool") /* ty=Tensor[(8, 3, 6), bool] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%683, %684) /* ty=Tensor[(8, 3, 6), bool] */
  };
  %685(%var_2363, %var_2364) /* ty=Tensor[(8, 3, 6), bool] */
}

def @func_12683() -> Tensor[(10, 13, 9), int8] {
  @func_12681() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_11516() -> Tensor[(10, 13, 9), int8] {
  @func_11514() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_11432() -> (Tensor[(10, 13, 9), int8],) {
  %688 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %686 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %687 = %686.0;
    (%687,)
  };
  %688() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_12479() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(6, 42), int64]) {
  @func_12477() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(6, 42), int64]) */
}

def @func_13371() -> Tensor[(10, 13, 9), int8] {
  @func_13369() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_3981() -> (Tensor[(10, 13, 9), bool],) {
  %689 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %690 = cast(%689, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %691 = reshape(%690, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %692 = @func_3870(%691) /* ty=Tensor[(10, 13, 9), uint32] */;
  %693 = cast(%689, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %697 = greater(%695, %696) /* ty=Tensor[(10, 13, 9), bool] */;
  (%697,)
}

def @func_15559() -> (Tensor[(10, 13, 9), float64],) {
  %700 = fn () -> (Tensor[(10, 13, 9), float64],) {
    %698 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %699 = %698.0;
    (%699,)
  };
  %700() /* ty=(Tensor[(10, 13, 9), float64],) */
}

def @func_5615() -> (Tensor[(10, 13, 9), int8],) {
  %702 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %701 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
    (%701,)
  };
  %702() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_11851() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_11849() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_3277() -> Tensor[(10, 13, 9), int8] {
  %704 = fn () -> Tensor[(10, 13, 9), int8] {
    %703 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %703.0
  };
  %704() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_13026() -> Tensor[(10, 13, 9), float64] {
  %706 = fn () -> Tensor[(10, 13, 9), float64] {
    %705 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
    %705.4
  };
  %706() /* ty=Tensor[(10, 13, 9), float64] */
}

def @func_14950() -> (Tensor[(10, 13, 9), int8],) {
  %709 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %707 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %708 = %707.0;
    (%708,)
  };
  %709() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_2498(%var_2496: Tensor[(5, 10, 16), float64], %var_2497: Tensor[(2, 432), float32]) -> (Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) {
  @func_2494(%var_2496, %var_2497) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */
}

def @func_12526() -> (Tensor[(864), float32],) {
  %710 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %711 = %710.3;
  (%711,)
}

def @func_6900() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_6898() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_13348() -> (Tensor[(5, 7, 4), float32],) {
  %712 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %713 = acosh(%712) /* ty=Tensor[(5, 7, 4), float32] */;
  (%713,)
}

def @func_7567() -> Tensor[(3, 10, 1), float64] {
  %715 = fn () -> Tensor[(3, 10, 1), float64] {
    %714 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
    sinh(%714) /* ty=Tensor[(3, 10, 1), float64] */
  };
  %715() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_13558(%var_13555: float64, %var_13556: Tensor[(3, 8, 4), float64], %var_13557: Tensor[(3, 8, 4), float64]) -> (Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) {
  %724 = fn (%var_13540: float64, %var_13541: Tensor[(3, 8, 4), float64], %var_13545: Tensor[(3, 8, 4), float64]) -> (Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) {
    %716 = cast(%var_13540, dtype="float64") /* ty=float64 */;
    %717 = cast(%var_13541, dtype="float64") /* ty=Tensor[(3, 8, 4), float64] */;
    %718 = cast(%var_13545, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
    %719 = shape_of(%var_13541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_13541, dtype="float32") /* ty=Tensor[(3, 8, 4), float32] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %722 = floor_divide(%716, %717) /* ty=Tensor[(3, 8, 4), float64] */;
    %723 = divide(%720, %721) /* ty=Tensor[(3, 8, 4), float32] */;
    (%722, %723)
  };
  %724(%var_13555, %var_13556, %var_13557) /* ty=(Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) */
}

def @func_4778(%var_4777: Tensor[(10, 13, 9), int8]) -> (Tensor[(10, 13, 9), float64],) {
  %731 = fn (%var_4758: Tensor[(10, 13, 9), int8]) -> (Tensor[(10, 13, 9), float64],) {
    %725 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
    %726 = cast(%var_4758, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %728 = cast(%725, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %730 = floor_mod(%728, %729) /* ty=Tensor[(10, 13, 9), float64] */;
    (%730,)
  };
  %731(%var_4777) /* ty=(Tensor[(10, 13, 9), float64],) */
}

def @func_13272(%var_13271: float64) -> (Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool], Tensor[(10, 13, 9), int8]) {
  %740 = fn (%var_13245: float64) -> (Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool], Tensor[(10, 13, 9), int8]) {
    %732 = cast(%var_13245, dtype="float64") /* ty=float64 */;
    %733 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 9, 12), float64] */;
    %734 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 9, 12), float64] */, dtype="bool") /* ty=Tensor[(4, 9, 12), bool] */;
    %735 = cast(%var_13245, dtype="bool") /* ty=bool */;
    %736 = @func_7415() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %737 = mod(%732, %733) /* ty=Tensor[(4, 9, 12), float64] */;
    %738 = not_equal(%734, %735) /* ty=Tensor[(4, 9, 12), bool] */;
    %739 = %736.2;
    (%737, %738, %739)
  };
  %740(%var_13271) /* ty=(Tensor[(4, 9, 12), float64], Tensor[(4, 9, 12), bool], Tensor[(10, 13, 9), int8]) */
}

def @func_14446(%var_14444: Tensor[(792), int8], %var_14445: Tensor[(165, 3), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) {
  @func_14442(%var_14444, %var_14445) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) */
}

def @func_10220() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_10218() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_11976() -> (Tensor[(8, 3, 6), bool],) {
  @func_11974() /* ty=(Tensor[(8, 3, 6), bool],) */
}

def @func_15174() -> Tensor[(10, 13, 9), int8] {
  @func_15172() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_15675(%var_15656: Tensor[(12, 5, 16), float32]) -> Tensor[(12, 5, 16), float32] {
  %741 = cast(%var_15656, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
  tan(%741) /* ty=Tensor[(12, 5, 16), float32] */
}

def @func_8496() -> Tensor[(3, 10, 1), float64] {
  %742 = fn () -> Tensor[(3, 10, 1), float64] {
    @func_7566() /* ty=Tensor[(3, 10, 1), float64] */
  };
  %742() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_13653() -> (Tensor[(10, 13, 9), int8],) {
  @func_13651() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_5567() -> (Tensor[(10, 13, 9), int8],) {
  %743 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %744 = %743.0;
  (%744,)
}

def @func_9551() -> Tensor[(10, 13, 9), int8] {
  %745 = fn () -> Tensor[(10, 13, 9), int8] {
    @func_3246() /* ty=Tensor[(10, 13, 9), int8] */
  };
  %745() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_6367() -> Tensor[(10, 13, 9), int8] {
  @func_6365() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_4575(%var_4572: Tensor[(400, 2), float64], %var_4573: Tensor[(12, 72), float32], %var_4574: Tensor[(12, 72), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) {
  %802 = fn (%var_4504: Tensor[(400, 2), float64], %var_4537: Tensor[(12, 72), float32], %var_4563: Tensor[(12, 72), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) {
    %746 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %747 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %748 = cast(meta[relay.Constant][31] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %749 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 2), int16] */, dtype="int16") /* ty=Tensor[(4, 2), int16] */;
    %750 = cast(meta[relay.Constant][33] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
    %751 = reshape(%748, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
    %752 = reshape(%749, newshape=[8]) /* ty=Tensor[(8), int16] */;
    %753 = reshape(%750, newshape=[88]) /* ty=Tensor[(88), int16] */;
    %754 = @func_2676(%751, %752, %753) /* ty=(Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */;
    %755 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 72), float32] */, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
    %756 = tan(%755) /* ty=Tensor[(12, 72), float32] */;
    %757 = cast(%756, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
    %758 = cos(%757) /* ty=Tensor[(12, 72), float32] */;
    %759 = cast(%var_4504, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
    %760 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 72), float32] */, dtype="float32") /* ty=Tensor[(12, 72), float32] */;
    %761 = reshape(%759, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
    %762 = reshape(%760, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
    %763 = @func_2494(%761, %762) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
    %764 = %763.1;
    %765 = cast(%764, dtype="int64") /* ty=Tensor[(2, 432), int64] */;
    %766 = shape_of(%758, dtype="int32") /* ty=Tensor[(2), int32] */;
    %767 = cast(%758, dtype="int64") /* ty=Tensor[(12, 72), int64] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %769 = cast(%var_4537, dtype="int16") /* ty=Tensor[(12, 72), int16] */;
    %770 = shape_of(%758, dtype="int32") /* ty=Tensor[(2), int32] */;
    %771 = cast(%758, dtype="int16") /* ty=Tensor[(12, 72), int16] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %773 = cast(%756, dtype="float64") /* ty=Tensor[(12, 72), float64] */;
    %774 = cast(meta[relay.Constant][33] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
    %775 = reshape(%774, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
    %776 = @func_3895(%775) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
    %777 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 72), float32] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
    %778 = shape_of(%756, dtype="int32") /* ty=Tensor[(2), int32] */;
    %779 = cast(%756, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %781 = bitwise_xor(%779, %780) /* ty=Tensor[(12, 72), uint64] */;
    %782 = cast(%781, dtype="float64") /* ty=Tensor[(12, 72), float64] */;
    %783 = cast(meta[relay.Constant][35] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
    %784 = cast(meta[relay.Constant][35] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
    %785 = reshape(%783, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
    %786 = reshape(%784, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
    %787 = @func_661(%785, %786) /* ty=(Tensor[(5, 9, 11), bool],) */;
    %788 = cast(%var_4563, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
    %789 = shape_of(%758, dtype="int32") /* ty=Tensor[(2), int32] */;
    %790 = cast(%758, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %792 = %746.0;
    %793 = %747.1;
    %794 = %754.0;
    %795 = bitwise_or(%767, %768) /* ty=Tensor[(12, 72), int64] */;
    %796 = add(%771, %772) /* ty=Tensor[(12, 72), int16] */;
    %797 = rsqrt(%773) /* ty=Tensor[(12, 72), float64] */;
    %798 = %776.2;
    %799 = erf(%782) /* ty=Tensor[(12, 72), float64] */;
    %800 = %787.0;
    %801 = greater(%790, %791) /* ty=Tensor[(12, 72), bool] */;
    (%792, %793, %var_4504, %794, meta[relay.Constant][31] /* ty=Tensor[(12), float32] */, meta[relay.Constant][32] /* ty=Tensor[(4, 2), int16] */, meta[relay.Constant][33] /* ty=Tensor[(22, 4), int16] */, %795, %796, %797, %798, %799, %800, meta[relay.Constant][35] /* ty=Tensor[(495), int32] */, %801)
  };
  %802(%var_4572, %var_4573, %var_4574) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */
}

def @func_12435() -> (Tensor[(5, 8, 9), float64],) {
  %805 = fn () -> (Tensor[(5, 8, 9), float64],) {
    %803 = @func_11398() /* ty=(Tensor[(5, 8, 9), float64],) */;
    %804 = %803.0;
    (%804,)
  };
  %805() /* ty=(Tensor[(5, 8, 9), float64],) */
}

def @func_11958(%var_11956: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(800), float64], Tensor[(864), float32], Tensor[(252), int64], Tensor[(10, 13, 9), float32]) {
  @func_11955(%var_11956) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(800), float64], Tensor[(864), float32], Tensor[(252), int64], Tensor[(10, 13, 9), float32]) */
}

def @func_12755(%var_12742: Tensor[(5, 99), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32], Tensor[(10, 13, 9), int8], Tensor[(9, 6, 16), float64], Tensor[(864), float32], Tensor[(5, 99), int32]) {
  %806 = @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %807 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %808 = reshape(%807, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %809 = @func_10377(%808) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %810 = @func_4062() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %811 = cast(meta[relay.Constant][37] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %812 = cast(%var_12742, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %813 = reshape(%811, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %814 = reshape(%812, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %815 = @func_1808(%813, %814) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %816 = %806.1;
  %817 = %809.1;
  %818 = %810.0;
  %819 = %815.0;
  (%816, %817, meta[relay.Constant][36] /* ty=Tensor[(192), uint32] */, %818, %819, meta[relay.Constant][37] /* ty=Tensor[(864), float32] */, %var_12742)
}

def @func_1812(%var_1810: Tensor[(9, 6, 16), float32], %var_1811: Tensor[(5, 99), int32]) -> (Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) {
  @func_1808(%var_1810, %var_1811) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */
}

def @func_5035() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %823 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %820 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
    %821 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    %822 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
    (%820, %821, %822)
  };
  %823() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_8037() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) {
  %830 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) {
    %824 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %825 = cast(meta[relay.Constant][38] /* ty=Tensor[(432, 2), float32] */, dtype="float32") /* ty=Tensor[(432, 2), float32] */;
    %826 = reshape(%825, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
    %827 = @func_4865(%826) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
    %828 = %824.0;
    %829 = %827.0;
    (%828, %829, meta[relay.Constant][38] /* ty=Tensor[(432, 2), float32] */)
  };
  %830() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(432, 2), float32]) */
}

def @func_14807() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  @func_14805() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) */
}

def @func_7165() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32]) {
  @func_7163() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32]) */
}

def @func_2970() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %835 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %831 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %832 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %833 = %831.0;
    %834 = %832.0;
    (%833, %834)
  };
  %835() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_8685() -> (Tensor[(800), int32],) {
  @func_8683() /* ty=(Tensor[(800), int32],) */
}

def @func_94(%var_92: Tensor[(4, 2, 1), int16], %var_93: Tensor[(4, 2, 11), int16]) -> (Tensor[(4, 2, 11), int16],) {
  @func_90(%var_92, %var_93) /* ty=(Tensor[(4, 2, 11), int16],) */
}

def @func_14218() -> (Tensor[(10, 13, 9), int8],) {
  @func_14216() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_15083() -> Tensor[(5, 8, 9), float64] {
  %836 = fn () -> Tensor[(5, 8, 9), float64] {
    @func_8479() /* ty=Tensor[(5, 8, 9), float64] */
  };
  %836() /* ty=Tensor[(5, 8, 9), float64] */
}

def @func_15877(%var_15863: Tensor[(2, 72), float64]) -> (Tensor[(2, 72), bool],) {
  %837 = @func_9637() /* ty=Tensor[(2, 72), bool] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %839 = atan(%838) /* ty=Tensor[(2, 72), float64] */;
  %840 = cast(%var_15863, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %842 = cast(%839, dtype="bool") /* ty=Tensor[(2, 72), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %844 = not_equal(%842, %843) /* ty=Tensor[(2, 72), bool] */;
  (%844,)
}

def @func_14442(%var_14410: Tensor[(792), int8], %var_14418: Tensor[(165, 3), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) {
  %845 = @func_14216() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %846 = cast(%var_14410, dtype="int8") /* ty=Tensor[(792), int8] */;
  %847 = cast(%var_14410, dtype="int8") /* ty=Tensor[(792), int8] */;
  %848 = reshape(%846, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %849 = reshape(%847, newshape=[9, 8, 11]) /* ty=Tensor[(9, 8, 11), int8] */;
  %850 = @func_5701(%848, %849) /* ty=(Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %851 = cast(%var_14418, dtype="int32") /* ty=Tensor[(165, 3), int32] */;
  %852 = reshape(%851, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %853 = @func_3641(%852) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) */;
  %854 = %845.0;
  %855 = %850.2;
  %856 = %853.0;
  (%854, %855, %var_14410, %856, %var_14418)
}

def @func_7334() -> (Tensor[(10, 13, 9), int8],) {
  %859 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %857 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %858 = %857.0;
    (%858,)
  };
  %859() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_7098(%var_7096: Tensor[(864), float32], %var_7097: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(40, 20), float64], Tensor[(864), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8), int16], Tensor[(88, 1), int16], Tensor[(10, 13, 9), int8]) {
  %885 = fn (%var_7067: Tensor[(864), float32], %var_7086: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(40, 20), float64], Tensor[(864), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8), int16], Tensor[(88, 1), int16], Tensor[(10, 13, 9), int8]) {
    %860 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %861 = cast(meta[relay.Constant][39] /* ty=Tensor[(40, 20), float64] */, dtype="float64") /* ty=Tensor[(40, 20), float64] */;
    %862 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
    %863 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
    %864 = reshape(%861, newshape=[400, 2]) /* ty=Tensor[(400, 2), float64] */;
    %865 = reshape(%862, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %866 = reshape(%863, newshape=[12, 72]) /* ty=Tensor[(12, 72), float32] */;
    %867 = @func_4571(%864, %865, %866) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(3, 1, 4), float64], Tensor[(12), float32], Tensor[(4, 2), int16], Tensor[(22, 4), int16], Tensor[(12, 72), int64], Tensor[(12, 72), int16], Tensor[(12, 72), float64], Tensor[(12), float32], Tensor[(12, 72), float64], Tensor[(5, 9, 11), bool], Tensor[(495), int32], Tensor[(12, 72), bool]) */;
    %868 = %867.2;
    %869 = cast(%868, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
    %870 = cast(%var_7067, dtype="float32") /* ty=Tensor[(864), float32] */;
    %871 = cast(%868, dtype="float64") /* ty=Tensor[(400, 2), float64] */;
    %872 = reshape(%869, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %873 = reshape(%870, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %874 = reshape(%871, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %875 = @func_5536(%872, %873, %874) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
    %876 = cast(%var_7086, dtype="int16") /* ty=Tensor[(88, 1), int16] */;
    %877 = reshape(%876, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
    %878 = @func_3895(%877) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
    %879 = @func_4165() /* ty=Tensor[(10, 13, 9), int8] */;
    %880 = %860.0;
    %881 = %875.0;
    %882 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
    %883 = %878.3;
    %884 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
    (%879, %880, %868, meta[relay.Constant][39] /* ty=Tensor[(40, 20), float64] */, %var_7067, %881, %882, %883, %var_7086, %884)
  };
  %885(%var_7096, %var_7097) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(40, 20), float64], Tensor[(864), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8), int16], Tensor[(88, 1), int16], Tensor[(10, 13, 9), int8]) */
}

def @func_5981() -> Tensor[(10, 13, 9), int8] {
  %887 = fn () -> Tensor[(10, 13, 9), int8] {
    %886 = @func_2839() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %886.0
  };
  %887() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_12123(%var_12121: Tensor[(15, 9, 5), float32], %var_12122: Tensor[(15, 9, 5), float32]) -> (Tensor[(15, 9, 5), bool], Tensor[(10, 13, 9), int8], Tensor[(15, 9, 5), int8], Tensor[(10, 13, 9), int8]) {
  %902 = fn (%var_12047: Tensor[(15, 9, 5), float32], %var_12068: Tensor[(15, 9, 5), float32]) -> (Tensor[(15, 9, 5), bool], Tensor[(10, 13, 9), int8], Tensor[(15, 9, 5), int8], Tensor[(10, 13, 9), int8]) {
    %888 = cast(%var_12047, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
    %889 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(15, 9, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 9, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %892 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %893 = cast(%var_12068, dtype="int8") /* ty=Tensor[(15, 9, 5), int8] */;
    %894 = shape_of(%var_12047, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%var_12047, dtype="int8") /* ty=Tensor[(15, 9, 5), int8] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %897 = @func_11060() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %898 = less(%890, %891) /* ty=Tensor[(15, 9, 5), bool] */;
    %899 = %892.0;
    %900 = minimum(%895, %896) /* ty=Tensor[(15, 9, 5), int8] */;
    %901 = %897.0;
    (%898, %899, %900, %901)
  };
  %902(%var_12121, %var_12122) /* ty=(Tensor[(15, 9, 5), bool], Tensor[(10, 13, 9), int8], Tensor[(15, 9, 5), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_7163() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(6, 144), float32], Tensor[(864), float32]) {
  %903 = cast(meta[relay.Constant][41] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %904 = reshape(%903, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %905 = @func_4865(%904) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %906 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
  %907 = @func_5980() /* ty=Tensor[(10, 13, 9), int8] */;
  %908 = %905.3;
  (%906, %907, %908, meta[relay.Constant][41] /* ty=Tensor[(864), float32] */)
}

def @func_12420(%var_12419: Tensor[(156), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(13, 4, 3), float64], Tensor[(156), float64]) {
  %916 = fn (%var_12409: Tensor[(156), float64]) -> (Tensor[(5, 8, 9), float64], Tensor[(13, 4, 3), float64], Tensor[(156), float64]) {
    %909 = cast(%var_12409, dtype="float64") /* ty=Tensor[(156), float64] */;
    %910 = cast(%var_12409, dtype="float64") /* ty=Tensor[(156), float64] */;
    %911 = reshape(%909, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %912 = reshape(%910, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %913 = @func_5297(%911, %912) /* ty=(Tensor[(13, 4, 3), float64],) */;
    %914 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
    %915 = %913.0;
    (%914, %915, %var_12409)
  };
  %916(%var_12419) /* ty=(Tensor[(5, 8, 9), float64], Tensor[(13, 4, 3), float64], Tensor[(156), float64]) */
}

def @func_12458() -> Tensor[(10, 13, 9), int8] {
  %917 = fn () -> Tensor[(10, 13, 9), int8] {
    @func_9550() /* ty=Tensor[(10, 13, 9), int8] */
  };
  %917() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_11468() -> Tensor[(10, 13, 9), uint16] {
  %919 = fn () -> Tensor[(10, 13, 9), uint16] {
    %918 = @func_7475() /* ty=(Tensor[(10, 13, 9), uint16],) */;
    %918.0
  };
  %919() /* ty=Tensor[(10, 13, 9), uint16] */
}

def @func_3644(%var_3642: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) {
  @func_3641(%var_3642) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(5, 9, 11), bool], Tensor[(495), int32]) */
}

def @func_12948() -> (Tensor[(800), float64], Tensor[(10, 13, 9), float32]) {
  @func_12946() /* ty=(Tensor[(800), float64], Tensor[(10, 13, 9), float32]) */
}

def @func_8838() -> Tensor[(10, 13, 9), int8] {
  @func_8836() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_12362(%var_12360: Tensor[(3, 10, 8), float64], %var_12361: Tensor[(8), int16]) -> (Tensor[(3, 10, 8), bool], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  @func_12358(%var_12360, %var_12361) /* ty=(Tensor[(3, 10, 8), bool], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(495), int32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */
}

def @func_3524(%var_3494: Tensor[(10, 13, 9), float32], %var_3518: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) {
  %920 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %921 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %922 = %921.1;
  %923 = cast(%var_3494, dtype="uint8") /* ty=Tensor[(10, 13, 9), uint8] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%922, dtype="uint8") /* ty=Tensor[(10, 13, 9), uint8] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %927 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %928 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %929 = cast(%922, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
  %930 = cast(%var_3518, dtype="float64") /* ty=Tensor[(800), float64] */;
  %931 = cast(meta[relay.Constant][42] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %932 = reshape(%930, newshape=[5, 10, 16]) /* ty=Tensor[(5, 10, 16), float64] */;
  %933 = reshape(%931, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %934 = @func_2494(%932, %933) /* ty=(Tensor[(4, 2, 11), int16], Tensor[(2, 432), float32], Tensor[(495), int32], Tensor[(5, 10, 16), int32], Tensor[(5, 9, 11), bool]) */;
  %935 = %920.1;
  %936 = bitwise_and(%925, %926) /* ty=Tensor[(10, 13, 9), uint8] */;
  %937 = %927.1;
  %938 = %928.0;
  %939 = sin(%929) /* ty=Tensor[(10, 13, 9), float32] */;
  %940 = %934.2;
  (%935, %936, %937, %938, %939, %940, %var_3518, meta[relay.Constant][42] /* ty=Tensor[(864), float32] */)
}

def @func_11062() -> (Tensor[(10, 13, 9), int8],) {
  @func_11060() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_4930() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
  %953 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) {
    %941 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
    %942 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
    %943 = %942.0;
    %944 = cast(%943, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %945 = cast(meta[relay.Constant][43] /* ty=Tensor[(800), float64] */, dtype="float64") /* ty=Tensor[(800), float64] */;
    %946 = reshape(%944, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), float32] */;
    %947 = reshape(%945, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %948 = @func_3524(%946, %947) /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), uint8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32], Tensor[(495), int32], Tensor[(800), float64], Tensor[(864), float32]) */;
    %949 = @func_4821() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %950 = %941.1;
    %951 = %948.7;
    %952 = %949.0;
    (%950, %943, %951, meta[relay.Constant][43] /* ty=Tensor[(800), float64] */, %952)
  };
  %953() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_13392() -> (Tensor[(10, 13, 9), int8],) {
  %954 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %955 = %954.0;
  (%955,)
}

def @func_3895(%var_3891: Tensor[(88, 1), int16]) -> (Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) {
  %956 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %957 = cast(meta[relay.Constant][44] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %958 = cast(meta[relay.Constant][45] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %959 = cast(%var_3891, dtype="int16") /* ty=Tensor[(88, 1), int16] */;
  %960 = reshape(%957, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %961 = reshape(%958, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %962 = reshape(%959, newshape=[88]) /* ty=Tensor[(88), int16] */;
  %963 = @func_2676(%960, %961, %962) /* ty=(Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) */;
  %964 = %956.0;
  %965 = %963.1;
  (%964, %965, meta[relay.Constant][44] /* ty=Tensor[(12), float32] */, meta[relay.Constant][45] /* ty=Tensor[(8), int16] */, %var_3891)
}

def @func_7260() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %977 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
    %966 = cast(meta[relay.Constant][46] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
    %967 = reshape(%966, newshape=[88, 1]) /* ty=Tensor[(88, 1), int16] */;
    %968 = @func_3895(%967) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(12), float32], Tensor[(8), int16], Tensor[(88, 1), int16]) */;
    %969 = @func_5614() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %970 = %969.0;
    %971 = cast(%970, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    %972 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %973 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
    %974 = %968.0;
    %975 = acos(%971) /* ty=Tensor[(10, 13, 9), float64] */;
    %976 = %972.4;
    (%973, %974, meta[relay.Constant][46] /* ty=Tensor[(88), int16] */, %975, %976)
  };
  %977() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_8480() -> Tensor[(5, 8, 9), float64] {
  %979 = fn () -> Tensor[(5, 8, 9), float64] {
    %978 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(5, 8, 9), float64] */;
    sqrt(%978) /* ty=Tensor[(5, 8, 9), float64] */
  };
  %979() /* ty=Tensor[(5, 8, 9), float64] */
}

def @func_3800() -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) {
  %980 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %981 = @func_3758() /* ty=Tensor[(10, 13, 9), int8] */;
  %982 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %983 = %982.1;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %985 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%981, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %988 = %980.1;
  %989 = multiply(%986, %987) /* ty=Tensor[(10, 13, 9), float64] */;
  (%988, %989)
}

def @func_8092() -> Tensor[(10, 13, 9), float64] {
  %993 = fn () -> Tensor[(10, 13, 9), float64] {
    %990 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %991 = %990.1;
    %992 = cast(%991, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
    asinh(%992) /* ty=Tensor[(10, 13, 9), float64] */
  };
  %993() /* ty=Tensor[(10, 13, 9), float64] */
}

def @func_7652() -> (Tensor[(12, 6, 5), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
  @func_7650() /* ty=(Tensor[(12, 6, 5), float32], Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) */
}

def @func_8332() -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16]) {
  %994 = @func_7040() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 1, 4), float64], Tensor[(800), float64], Tensor[(864), float32]) */;
  %995 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %996 = %994.0;
  %997 = %995.2;
  (%996, %997)
}

def @func_8432() -> (Tensor[(10, 13, 9), int8], Tensor[(800), float64]) {
  %998 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %999 = @func_6351() /* ty=(Tensor[(800), float64],) */;
  %1000 = %998.0;
  %1001 = %999.0;
  (%1000, %1001)
}

def @func_2676(%var_2651: Tensor[(3, 1, 4), float32], %var_2673: Tensor[(8), int16], %var_2674: Tensor[(88), int16]) -> (Tensor[(3, 1, 4), float64], Tensor[(8, 3, 6), bool], Tensor[(144), bool], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16]) {
  %1002 = cast(%var_2651, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %1003 = log2(%1002) /* ty=Tensor[(3, 1, 4), float32] */;
  %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(3, 1, 4), float64] */;
  %1005 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1006 = cast(meta[relay.Constant][48] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1007 = reshape(%1005, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1008 = reshape(%1006, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1009 = cast(%var_2673, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1010 = cast(%var_2674, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1011 = reshape(%1009, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1012 = reshape(%1010, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1013 = @func_90(%1011, %1012) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1014 = cosh(%1004) /* ty=Tensor[(3, 1, 4), float64] */;
  %1015 = @func_2362(%1007, %1008) /* ty=Tensor[(8, 3, 6), bool] */;
  %1016 = %1013.0;
  (%1014, %1015, meta[relay.Constant][48] /* ty=Tensor[(144), bool] */, %1016, %var_2673, %var_2674)
}

def @func_13227(%var_13225: Tensor[(8), int16], %var_13226: Tensor[(800), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(432, 2), float32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(3, 10, 1), float64]) {
  @func_13223(%var_13225, %var_13226) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(432, 2), float32], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(3, 10, 1), float64]) */
}

def @func_6785() -> (Tensor[(10, 13, 9), int8],) {
  %1017 = @func_5034() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1018 = %1017.1;
  (%1018,)
}

def @func_9862() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  %1019 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1020 = %1019.0;
  %1021 = cast(%1020, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
  %1022 = reshape(%1021, newshape=[10, 13, 9]) /* ty=Tensor[(10, 13, 9), int8] */;
  %1023 = @func_3870(%1022) /* ty=Tensor[(10, 13, 9), uint32] */;
  %1024 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
  %1025 = @func_8091() /* ty=Tensor[(10, 13, 9), float64] */;
  (%1020, %1023, %1024, %1025)
}

def @func_3069() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %1030 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
    %1026 = @func_2855() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1027 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1028 = %1026.0;
    %1029 = %1027.1;
    (%1028, %1029)
  };
  %1030() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_4219() -> Tensor[(10, 13, 9), int8] {
  %1032 = fn () -> Tensor[(10, 13, 9), int8] {
    %1031 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1031.0
  };
  %1032() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_13093() -> (Tensor[(10, 13, 9), int8],) {
  %1035 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1033 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %1034 = %1033.1;
    (%1034,)
  };
  %1035() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_1808(%var_1729: Tensor[(9, 6, 16), float32], %var_1747: Tensor[(5, 99), int32]) -> (Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) {
  %1036 = cast(%var_1729, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
  %1037 = exp(%1036) /* ty=Tensor[(9, 6, 16), float32] */;
  %1038 = cast(%1037, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %1039 = cast(meta[relay.Constant][49] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1040 = cast(meta[relay.Constant][50] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1041 = reshape(%1039, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1042 = reshape(%1040, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1043 = @func_90(%1041, %1042) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1044 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %1045 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %1046 = reshape(%1044, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %1047 = reshape(%1045, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %1048 = @func_661(%1046, %1047) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %1049 = cast(meta[relay.Constant][49] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1050 = cast(meta[relay.Constant][50] /* ty=Tensor[(88), int16] */, dtype="int16") /* ty=Tensor[(88), int16] */;
  %1051 = reshape(%1049, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1052 = reshape(%1050, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1053 = @func_90(%1051, %1052) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1054 = cast(meta[relay.Constant][49] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1055 = %1043.0;
  %1056 = cast(%1055, dtype="int16") /* ty=Tensor[(4, 2, 11), int16] */;
  %1057 = reshape(%1054, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), int16] */;
  %1058 = reshape(%1056, newshape=[4, 2, 11]) /* ty=Tensor[(4, 2, 11), int16] */;
  %1059 = @func_90(%1057, %1058) /* ty=(Tensor[(4, 2, 11), int16],) */;
  %1060 = cast(%var_1729, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %1061 = rsqrt(%1060) /* ty=Tensor[(9, 6, 16), float64] */;
  %1062 = cast(%var_1729, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %1063 = shape_of(%1061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%1061, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %1067 = cast(%var_1747, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
  %1068 = reshape(%1066, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %1069 = reshape(%1067, newshape=[5, 9, 11]) /* ty=Tensor[(5, 9, 11), int32] */;
  %1070 = @func_661(%1068, %1069) /* ty=(Tensor[(5, 9, 11), bool],) */;
  %1071 = atanh(%1038) /* ty=Tensor[(9, 6, 16), float64] */;
  %1072 = %1048.0;
  %1073 = %1053.0;
  %1074 = %1059.0;
  %1075 = not_equal(%1064, %1065) /* ty=Tensor[(9, 6, 16), bool] */;
  %1076 = %1070.0;
  (%1071, %1055, meta[relay.Constant][49] /* ty=Tensor[(8), int16] */, meta[relay.Constant][50] /* ty=Tensor[(88), int16] */, %1072, %var_1747, %1073, %1074, %1075, %1076)
}

def @func_5421() -> (Tensor[(8, 3, 6), bool],) {
  @func_5419() /* ty=(Tensor[(8, 3, 6), bool],) */
}

def @func_15025() -> (Tensor[(10, 13, 9), int8],) {
  @func_15023() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_15279(%var_15273: Tensor[(2730), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(13, 15, 14), float64], Tensor[(2730), float64]) {
  %1077 = @func_15023() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1078 = cast(%var_15273, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %1079 = reshape(%1078, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %1080 = %1077.0;
  %1081 = @func_11893(%1079) /* ty=Tensor[(13, 15, 14), float64] */;
  (%1080, %1081, %var_15273)
}

def @func_10821() -> (Tensor[(10, 13, 9), int8],) {
  %1084 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1082 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1083 = %1082.0;
    (%1083,)
  };
  %1084() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_6365() -> Tensor[(10, 13, 9), int8] {
  %1085 = @func_3068() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1085.1
}

def @func_5301(%var_5299: Tensor[(13, 4, 3), float64], %var_5300: Tensor[(13, 4, 3), float64]) -> (Tensor[(13, 4, 3), float64],) {
  @func_5297(%var_5299, %var_5300) /* ty=(Tensor[(13, 4, 3), float64],) */
}

def @func_15282(%var_15280: Tensor[(2730), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(13, 15, 14), float64], Tensor[(2730), float64]) {
  @func_15279(%var_15280) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(13, 15, 14), float64], Tensor[(2730), float64]) */
}

def @func_11580() -> (Tensor[(800), float64], Tensor[(?, 864), bool], Tensor[(10, 13, 9), int8]) {
  %1086 = @func_9083() /* ty=Tensor[(800), float64] */;
  %1087 = cast(%1086, dtype="float64") /* ty=Tensor[(800), float64] */;
  %1088 = reshape(%1087, newshape=[8, 100]) /* ty=Tensor[(8, 100), float64] */;
  %1089 = @func_6813(%1088) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) */;
  %1090 = %1089.2;
  %1091 = cast(%1090, dtype="float32") /* ty=Tensor[(?, 864), float32] */;
  %1092 = reshape(%1091, newshape=[6, 144]) /* ty=Tensor[(6, 144), float32] */;
  %1093 = @func_4865(%1092) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(400, 2), float64], Tensor[(800), float64], Tensor[(6, 144), float32]) */;
  %1094 = %1093.0;
  (%1086, %1090, %1094)
}

def @func_13481() -> Tensor[(10, 13, 9), int8] {
  @func_13479() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_12218() -> Tensor[(3, 4, 9), float64] {
  %1096 = fn () -> Tensor[(3, 4, 9), float64] {
    %1095 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 4, 9), float64] */;
    sqrt(%1095) /* ty=Tensor[(3, 4, 9), float64] */
  };
  %1096() /* ty=Tensor[(3, 4, 9), float64] */
}

def @func_9864() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) {
  @func_9862() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64]) */
}

def @func_11264() -> Tensor[(10, 13, 9), int8] {
  %1097 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1097.0
}

def @func_14896(%var_14840: Tensor[(864), float32], %var_14841: Tensor[(495), int32], %var_14883: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(5, 99), int32], Tensor[(495), int32], Tensor[(165, 3), int32], Tensor[(792), int8], Tensor[(864), bool], Tensor[(10, 13, 9), int8]) {
  %1098 = @func_8332() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16]) */;
  %1099 = @func_5174() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1100 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1101 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1102 = @func_13392() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1103 = cast(%var_14840, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1104 = cast(%var_14841, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1105 = reshape(%1103, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
  %1106 = reshape(%1104, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
  %1107 = @func_1808(%1105, %1106) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
  %1108 = cast(meta[relay.Constant][52] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1109 = cast(%var_14841, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1110 = reshape(%1108, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %1111 = reshape(%1109, newshape=[165, 3]) /* ty=Tensor[(165, 3), int32] */;
  %1112 = @func_14442(%1110, %1111) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(792), int8], Tensor[(10, 13, 9), int8], Tensor[(165, 3), int32]) */;
  %1113 = cast(%var_14883, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1114 = shape_of(%var_14840, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1115 = cast(%var_14840, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1117 = @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1118 = %1098.0;
  %1119 = %1099.0;
  %1120 = %1100.0;
  %1121 = %1101.0;
  %1122 = %1102.0;
  %1123 = %1107.5;
  %1124 = %1112.4;
  %1125 = not_equal(%1115, %1116) /* ty=Tensor[(864), bool] */;
  %1126 = %1117.0;
  (%1118, %1119, %1120, %1121, %1122, %1123, %var_14841, %1124, meta[relay.Constant][52] /* ty=Tensor[(792), int8] */, %1125, %1126)
}

def @func_6815(%var_6814: Tensor[(8, 100), float64]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) {
  %1141 = fn (%var_6801: Tensor[(8, 100), float64]) -> (Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) {
    %1127 = cast(%var_6801, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
    %1128 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 864), float32] */, dtype="float32") /* ty=Tensor[(1, 864), float32] */;
    %1129 = cast(%var_6801, dtype="float64") /* ty=Tensor[(8, 100), float64] */;
    %1130 = reshape(%1127, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %1131 = reshape(%1128, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %1132 = reshape(%1129, newshape=[800]) /* ty=Tensor[(800), float64] */;
    %1133 = @func_5536(%1130, %1131, %1132) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(495), int32], Tensor[(864), float32], Tensor[(800), float64]) */;
    %1134 = %1133.4;
    %1135 = cast(%1134, dtype="bool") /* ty=Tensor[(864), bool] */;
    %1136 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(1, 864), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1137 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 864), float32] */, dtype="bool") /* ty=Tensor[(1, 864), bool] */;
    %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1139 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
    %1140 = greater(%1137, %1138) /* ty=Tensor[(?, 864), bool] */;
    (%1139, %var_6801, %1140)
  };
  %1141(%var_6814) /* ty=(Tensor[(10, 13, 9), uint16], Tensor[(8, 100), float64], Tensor[(?, 864), bool]) */
}

def @func_9564() -> (Tensor[(10, 13, 9), int8],) {
  %1142 = @func_8208() /* ty=Tensor[(10, 13, 9), int8] */;
  (%1142,)
}

def @func_13128() -> (Tensor[(10, 13, 9), int8],) {
  %1143 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_8515() -> (Tensor[(10, 13, 9), int8],) {
  @func_8513() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_7595() -> (Tensor[(10, 13, 9), uint16],) {
  @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */
}

def @func_11011(%var_10964: Tensor[(864), float32], %var_10991: Tensor[(195, 2), int64], %var_10993: Tensor[(800), float64], %var_11007: Tensor[(192), uint32]) -> (Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(13, 3, 10), float64], Tensor[(195, 2), int64], Tensor[(800), bool], Tensor[(800), float64], Tensor[(192), uint32], Tensor[(192), uint32]) {
  %1145 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %1146 = cast(%var_10991, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %1147 = cast(%var_10991, dtype="int64") /* ty=Tensor[(195, 2), int64] */;
  %1148 = reshape(%1146, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %1149 = reshape(%1147, newshape=[13, 3, 10]) /* ty=Tensor[(13, 3, 10), int64] */;
  %1150 = @func_10283(%1148, %1149) /* ty=(Tensor[(13, 3, 10), float64], Tensor[(864), float32]) */;
  %1151 = cast(%var_10964, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1152 = reshape(%1151, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1153 = @func_3004(%1152) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(5, 9, 11), bool], Tensor[(800), float64], Tensor[(864), float32]) */;
  %1154 = %1153.2;
  %1155 = cast(%var_10993, dtype="bool") /* ty=Tensor[(800), bool] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1157 = cast(%1154, dtype="bool") /* ty=Tensor[(800), bool] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1159 = @func_8432() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), float64]) */;
  %1160 = cast(%var_11007, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1161 = reshape(%1160, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %1162 = @func_10377(%1161) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */;
  %1163 = %1145.0;
  %1164 = %1150.0;
  %1165 = greater_equal(%1157, %1158) /* ty=Tensor[(800), bool] */;
  %1166 = %1159.1;
  %1167 = %1162.2;
  (%1163, %var_10964, %1164, %var_10991, %1165, %1166, %1167, %var_11007)
}

def @func_10132() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
  %1171 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) {
    %1168 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %1169 = %1168.0;
    %1170 = @func_7275() /* ty=Tensor[(10, 13, 9), float32] */;
    (%1169, %1170)
  };
  %1171() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */
}

def @func_10042(%var_10040: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) {
  @func_10039(%var_10040) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) */
}

def @func_4822() -> (Tensor[(10, 13, 9), int8],) {
  %1174 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1172 = @func_3213() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_4955() -> (Tensor[(800), float32],) {
  %1175 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %1176 = %1175.3;
  %1177 = cast(%1176, dtype="float32") /* ty=Tensor[(800), float32] */;
  %1178 = erf(%1177) /* ty=Tensor[(800), float32] */;
  (%1178,)
}

def @func_6655() -> Tensor[(10, 13, 9), float32] {
  %1182 = fn () -> Tensor[(10, 13, 9), float32] {
    %1179 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
    %1180 = %1179.0;
    %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    cosh(%1181) /* ty=Tensor[(10, 13, 9), float32] */
  };
  %1182() /* ty=Tensor[(10, 13, 9), float32] */
}

def @func_4359(%var_4357: Tensor[(144), bool]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(144), bool]) {
  @func_4356(%var_4357) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(144), bool]) */
}

def @func_10543() -> (Tensor[(10, 13, 9), int8],) {
  @func_10541() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_14216() -> (Tensor[(10, 13, 9), int8],) {
  %1183 = @func_7741() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), float32]) */;
  %1184 = %1183.1;
  (%1184,)
}

def @func_11730() -> Tensor[(10, 13, 9), uint16] {
  @func_11728() /* ty=Tensor[(10, 13, 9), uint16] */
}

def @func_5664() -> (Tensor[(10, 13, 9), int8],) {
  %1185 = @func_3157() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1186 = %1185.0;
  (%1186,)
}

def @func_7780() -> (Tensor[(10, 13, 9), int8],) {
  %1188 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1187 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    (%1187,)
  };
  %1188() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_8816() -> (Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) {
  @func_8814() /* ty=(Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_12883() -> (Tensor[(88), int16], Tensor[(10, 13, 9), float32]) {
  %1189 = @func_7259() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %1190 = @func_9975() /* ty=(Tensor[(10, 13, 9), float32],) */;
  %1191 = %1189.2;
  %1192 = %1190.0;
  (%1191, %1192)
}

def @func_10753(%var_10752: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(864), float32], Tensor[(5, 99), int32]) {
  %1200 = fn (%var_10743: Tensor[(864), float32]) -> (Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(864), float32], Tensor[(5, 99), int32]) {
    %1193 = cast(%var_10743, dtype="float32") /* ty=Tensor[(864), float32] */;
    %1194 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 99), int32] */, dtype="int32") /* ty=Tensor[(5, 99), int32] */;
    %1195 = reshape(%1193, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), float32] */;
    %1196 = reshape(%1194, newshape=[5, 99]) /* ty=Tensor[(5, 99), int32] */;
    %1197 = @func_1808(%1195, %1196) /* ty=(Tensor[(9, 6, 16), float64], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(88), int16], Tensor[(5, 9, 11), bool], Tensor[(5, 99), int32], Tensor[(4, 2, 11), int16], Tensor[(4, 2, 11), int16], Tensor[(9, 6, 16), bool], Tensor[(5, 9, 11), bool]) */;
    %1198 = @func_8836() /* ty=Tensor[(10, 13, 9), int8] */;
    %1199 = %1197.3;
    (%1198, %1199, %var_10743, meta[relay.Constant][54] /* ty=Tensor[(5, 99), int32] */)
  };
  %1200(%var_10752) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(88), int16], Tensor[(864), float32], Tensor[(5, 99), int32]) */
}

def @func_6898() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  %1201 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
  %1202 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1203 = %1201.1;
  %1204 = %1202.1;
  (%1203, %1204)
}

def @func_9638() -> Tensor[(2, 72), bool] {
  %1205 = fn () -> Tensor[(2, 72), bool] {
    @func_7758() /* ty=Tensor[(2, 72), bool] */
  };
  %1205() /* ty=Tensor[(2, 72), bool] */
}

def @func_5863() -> (Tensor[(10, 13, 9), float64],) {
  @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */
}

def @func_8814() -> (Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8]) {
  %1206 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1207 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_5705(%var_5703: Tensor[(9, 8, 11), int8], %var_5704: Tensor[(9, 8, 11), int8]) -> (Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) {
  @func_5701(%var_5703, %var_5704) /* ty=(Tensor[(9, 8, 11), int8], Tensor[(9, 8, 11), float64], Tensor[(10, 13, 9), int8], Tensor[(192), uint32]) */
}

def @func_15640() -> Tensor[(800), float32] {
  %1212 = fn () -> Tensor[(800), float32] {
    %1209 = @func_9706() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(800), int32]) */;
    %1210 = %1209.1;
    %1211 = cast(%1210, dtype="float32") /* ty=Tensor[(800), float32] */;
    log(%1211) /* ty=Tensor[(800), float32] */
  };
  %1212() /* ty=Tensor[(800), float32] */
}

def @func_6036(%var_6035: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) {
  %1223 = fn (%var_6013: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) {
    %1213 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1214 = cast(meta[relay.Constant][55] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
    %1215 = cast(meta[relay.Constant][56] /* ty=Tensor[(22, 4), int16] */, dtype="int16") /* ty=Tensor[(22, 4), int16] */;
    %1216 = cast(%var_6013, dtype="int32") /* ty=Tensor[(495), int32] */;
    %1217 = reshape(%1214, newshape=[8]) /* ty=Tensor[(8), int16] */;
    %1218 = reshape(%1215, newshape=[44, 2]) /* ty=Tensor[(44, 2), int16] */;
    %1219 = reshape(%1216, newshape=[495]) /* ty=Tensor[(495), int32] */;
    %1220 = @func_4478(%1217, %1218, %1219) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(4, 2, 11), int16], Tensor[(8), int16], Tensor[(44, 2), int16], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(495), int32], Tensor[(10, 13, 9), uint8], Tensor[(800), float64]) */;
    %1221 = %1213.0;
    %1222 = %1220.7;
    (%1221, %1222, meta[relay.Constant][55] /* ty=Tensor[(8), int16] */, meta[relay.Constant][56] /* ty=Tensor[(22, 4), int16] */, %var_6013)
  };
  %1223(%var_6035) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */
}

def @func_4356(%var_4353: Tensor[(144), bool]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool], Tensor[(144), bool]) {
  %1224 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1225 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1226 = cast(%var_4353, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1227 = cast(%var_4353, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1228 = reshape(%1226, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1229 = reshape(%1227, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), bool] */;
  %1230 = %1224.1;
  %1231 = %1225.0;
  %1232 = @func_2362(%1228, %1229) /* ty=Tensor[(8, 3, 6), bool] */;
  (%1230, %1231, %1232, %var_4353)
}

def @func_9011() -> (Tensor[(5, 15, 8), float32],) {
  %1235 = fn () -> (Tensor[(5, 15, 8), float32],) {
    %1233 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 8), float32] */;
    %1234 = cosh(%1233) /* ty=Tensor[(5, 15, 8), float32] */;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(5, 15, 8), float32],) */
}

def @func_6543() -> (Tensor[(10, 13, 9), int8],) {
  %1238 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1236 = @func_5567() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1237 = %1236.0;
    (%1237,)
  };
  %1238() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_6574() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_6572() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_4712() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) {
  @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */
}

def @func_10283(%var_10271: Tensor[(13, 3, 10), int64], %var_10272: Tensor[(13, 3, 10), int64]) -> (Tensor[(13, 3, 10), float64], Tensor[(864), float32]) {
  %1239 = cast(%var_10272, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %1240 = shape_of(%var_10271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%var_10271, dtype="bool") /* ty=Tensor[(13, 3, 10), bool] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1243 = equal(%1241, %1242) /* ty=Tensor[(13, 3, 10), bool] */;
  %1244 = cast(%1243, dtype="float64") /* ty=Tensor[(13, 3, 10), float64] */;
  %1245 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
  %1246 = erf(%1244) /* ty=Tensor[(13, 3, 10), float64] */;
  %1247 = %1245.2;
  (%1246, %1247)
}

def @func_12846() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  @func_12844() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_4655() -> (Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) {
  @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */
}

def @func_5861() -> (Tensor[(10, 13, 9), float64],) {
  %1248 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %1249 = %1248.1;
  %1250 = cast(%1249, dtype="float64") /* ty=Tensor[(10, 13, 9), float64] */;
  %1251 = atan(%1250) /* ty=Tensor[(10, 13, 9), float64] */;
  (%1251,)
}

def @func_15172() -> Tensor[(10, 13, 9), int8] {
  %1252 = @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1252.0
}

def @func_15310() -> (Tensor[(10, 13, 9), int8], Tensor[(5, 8, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(800), int32]) {
  %1253 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1254 = @func_3104() /* ty=Tensor[(10, 13, 9), int8] */;
  %1255 = @func_8479() /* ty=Tensor[(5, 8, 9), float64] */;
  %1256 = %1253.0;
  %1257 = @func_12039() /* ty=Tensor[(800), int32] */;
  (%1254, %1255, %1256, %1257)
}

def @func_7953() -> (Tensor[(10, 13, 9), int8],) {
  @func_7951() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_9269() -> (Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) {
  %1266 = fn () -> (Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) {
    %1258 = @func_9214() /* ty=(Tensor[(10, 13, 9), float32],) */;
    %1259 = cast(meta[relay.Constant][58] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
    %1260 = cast(meta[relay.Constant][58] /* ty=Tensor[(252), int64] */, dtype="int64") /* ty=Tensor[(252), int64] */;
    %1261 = reshape(%1259, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
    %1262 = reshape(%1260, newshape=[7, 3, 12]) /* ty=Tensor[(7, 3, 12), int64] */;
    %1263 = @func_8994(%1261, %1262) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(7, 3, 12), bool], Tensor[(10, 13, 9), int8]) */;
    %1264 = %1258.0;
    %1265 = %1263.1;
    (%1264, %1265, meta[relay.Constant][58] /* ty=Tensor[(252), int64] */)
  };
  %1266() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(7, 3, 12), bool], Tensor[(252), int64]) */
}

def @func_14205() -> (Tensor[(5, 8, 9), float64], Tensor[(22, 4), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool]) {
  %1276 = fn () -> (Tensor[(5, 8, 9), float64], Tensor[(22, 4), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool]) {
    %1267 = @func_11398() /* ty=(Tensor[(5, 8, 9), float64],) */;
    %1268 = cast(meta[relay.Constant][59] /* ty=Tensor[(495), int32] */, dtype="int32") /* ty=Tensor[(495), int32] */;
    %1269 = reshape(%1268, newshape=[495, 1]) /* ty=Tensor[(495, 1), int32] */;
    %1270 = @func_11344(%1269) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(22, 4), int16], Tensor[(495, 1), int32]) */;
    %1271 = @func_11974() /* ty=(Tensor[(8, 3, 6), bool],) */;
    %1272 = %1267.0;
    %1273 = %1270.1;
    %1274 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    %1275 = %1271.0;
    (%1272, %1273, meta[relay.Constant][59] /* ty=Tensor[(495), int32] */, %1274, %1275)
  };
  %1276() /* ty=(Tensor[(5, 8, 9), float64], Tensor[(22, 4), int16], Tensor[(495), int32], Tensor[(10, 13, 9), int8], Tensor[(8, 3, 6), bool]) */
}

def @func_3758() -> Tensor[(10, 13, 9), int8] {
  %1277 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1277.0
}

def @func_11594() -> (Tensor[(10, 13, 9), uint16],) {
  %1279 = fn () -> (Tensor[(10, 13, 9), uint16],) {
    %1278 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
    (%1278,)
  };
  %1279() /* ty=(Tensor[(10, 13, 9), uint16],) */
}

def @func_12681() -> Tensor[(10, 13, 9), int8] {
  %1280 = @func_2969() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1280.1
}

def @func_3872(%var_3871: Tensor[(10, 13, 9), int8]) -> Tensor[(10, 13, 9), uint32] {
  %1296 = fn (%var_3836: Tensor[(10, 13, 9), int8]) -> Tensor[(10, 13, 9), uint32] {
    %1281 = cast(%var_3836, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %1282 = cos(%1281) /* ty=Tensor[(10, 13, 9), float32] */;
    %1283 = cast(%1282, dtype="float32") /* ty=Tensor[(10, 13, 9), float32] */;
    %1284 = erf(%1283) /* ty=Tensor[(10, 13, 9), float32] */;
    %1285 = @func_3729() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1286 = %1285.0;
    %1287 = cast(%var_3836, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
    %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1289 = cast(%1286, dtype="int8") /* ty=Tensor[(10, 13, 9), int8] */;
    %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1291 = minimum(%1289, %1290) /* ty=Tensor[(10, 13, 9), int8] */;
    %1292 = cast(%1291, dtype="uint32") /* ty=Tensor[(10, 13, 9), uint32] */;
    %1293 = shape_of(%1284, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(%1284, dtype="uint32") /* ty=Tensor[(10, 13, 9), uint32] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%1294, %1295) /* ty=Tensor[(10, 13, 9), uint32] */
  };
  %1296(%var_3871) /* ty=Tensor[(10, 13, 9), uint32] */
}

def @func_13369() -> Tensor[(10, 13, 9), int8] {
  %1297 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1297.0
}

def @func_10039(%var_10028: Tensor[(495), int32]) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(495), int32]) {
  %1298 = cast(%var_10028, dtype="int32") /* ty=Tensor[(495), int32] */;
  %1299 = reshape(%1298, newshape=[495]) /* ty=Tensor[(495), int32] */;
  %1300 = @func_6034(%1299) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint8], Tensor[(8), int16], Tensor[(22, 4), int16], Tensor[(495), int32]) */;
  %1301 = @func_6365() /* ty=Tensor[(10, 13, 9), int8] */;
  %1302 = %1300.0;
  (%1301, %1302, %var_10028)
}

def @func_7951() -> (Tensor[(10, 13, 9), int8],) {
  %1303 = @func_5369() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1304 = %1303.0;
  (%1304,)
}

def @func_5297(%var_5277: Tensor[(13, 4, 3), float64], %var_5278: Tensor[(13, 4, 3), float64]) -> (Tensor[(13, 4, 3), float64],) {
  %1305 = cast(%var_5278, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  %1306 = shape_of(%var_5277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%var_5277, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1309 = floor_divide(%1307, %1308) /* ty=Tensor[(13, 4, 3), float64] */;
  (%1309,)
}

def @func_9245() -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
  %1313 = fn () -> (Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) {
    %1310 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
    %1311 = %1310.0;
    %1312 = @func_3276() /* ty=Tensor[(10, 13, 9), int8] */;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), int8]) */
}

def @func_8727() -> Tensor[(3, 10, 1), float64] {
  @func_8725() /* ty=Tensor[(3, 10, 1), float64] */
}

def @func_3760() -> Tensor[(10, 13, 9), int8] {
  @func_3758() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_5266() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
  %1318 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) {
    %1314 = @func_3800() /* ty=(Tensor[(10, 13, 9), float32], Tensor[(10, 13, 9), float64]) */;
    %1315 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %1316 = %1314.1;
    %1317 = %1315.4;
    (%1316, %1317)
  };
  %1318() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */
}

def @func_9216() -> (Tensor[(10, 13, 9), float32],) {
  @func_9214() /* ty=(Tensor[(10, 13, 9), float32],) */
}

def @func_8836() -> Tensor[(10, 13, 9), int8] {
  %1319 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
  %1319.0
}

def @func_2911() -> (Tensor[(10, 13, 9), int8],) {
  @func_2909() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_5340() -> Tensor[(10, 13, 9), int8] {
  %1321 = fn () -> Tensor[(10, 13, 9), int8] {
    %1320 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %1320.1
  };
  %1321() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_14038() -> (Tensor[(10, 13, 9), float32],) {
  @func_14036() /* ty=(Tensor[(10, 13, 9), float32],) */
}

def @func_9939() -> (Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) {
  %1331 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) {
    %1322 = @func_5265() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8]) */;
    %1323 = @func_9475() /* ty=(Tensor[(864), float32], Tensor[(800), int16]) */;
    %1324 = @func_8158() /* ty=(Tensor[(2, 72), bool],) */;
    %1325 = %1324.0;
    %1326 = cast(%1325, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
    %1327 = %1322.0;
    %1328 = %1323.1;
    %1329 = @func_4218() /* ty=Tensor[(10, 13, 9), int8] */;
    %1330 = atanh(%1326) /* ty=Tensor[(2, 72), float32] */;
    (%1327, %1328, %1329, %1330)
  };
  %1331() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(800), int16], Tensor[(10, 13, 9), int8], Tensor[(2, 72), float32]) */
}

def @func_9214() -> (Tensor[(10, 13, 9), float32],) {
  %1332 = @func_6654() /* ty=Tensor[(10, 13, 9), float32] */;
  (%1332,)
}

def @func_12200(%var_12199: Tensor[(156), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(156), float64], Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8], Tensor[(13, 4, 3), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16]) {
  %1352 = fn (%var_12152: Tensor[(156), float64]) -> (Tensor[(10, 13, 9), int8], Tensor[(156), float64], Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8], Tensor[(13, 4, 3), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16]) {
    %1333 = @func_3687() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1334 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %1335 = cast(%var_12152, dtype="float64") /* ty=Tensor[(156), float64] */;
    %1336 = cast(%var_12152, dtype="float64") /* ty=Tensor[(156), float64] */;
    %1337 = reshape(%1335, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %1338 = reshape(%1336, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), float64] */;
    %1339 = @func_5297(%1337, %1338) /* ty=(Tensor[(13, 4, 3), float64],) */;
    %1340 = %1339.0;
    %1341 = cast(%1340, dtype="float64") /* ty=Tensor[(13, 4, 3), float64] */;
    %1342 = tan(%1341) /* ty=Tensor[(13, 4, 3), float64] */;
    %1343 = cast(%1342, dtype="float32") /* ty=Tensor[(13, 4, 3), float32] */;
    %1344 = @func_10266() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1345 = %1333.0;
    %1346 = @func_9550() /* ty=Tensor[(10, 13, 9), int8] */;
    %1347 = @func_8495() /* ty=Tensor[(3, 10, 1), float64] */;
    %1348 = %1334.4;
    %1349 = sinh(%1343) /* ty=Tensor[(13, 4, 3), float32] */;
    %1350 = %1344.0;
    %1351 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
    (%1345, %var_12152, %1346, %1347, %1348, %1349, %1350, %1351)
  };
  %1352(%var_12199) /* ty=(Tensor[(10, 13, 9), int8], Tensor[(156), float64], Tensor[(10, 13, 9), int8], Tensor[(3, 10, 1), float64], Tensor[(10, 13, 9), int8], Tensor[(13, 4, 3), float32], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16]) */
}

def @func_15127(%var_15126: Tensor[(15, 7, 8), float32]) -> (Tensor[(15, 7, 8), float32],) {
  %1358 = fn (%var_15119: Tensor[(15, 7, 8), float32]) -> (Tensor[(15, 7, 8), float32],) {
    %1353 = cast(%var_15119, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
    %1354 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(15, 7, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1355 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 7, 8), float32] */;
    %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1357 = power(%1355, %1356) /* ty=Tensor[(15, 7, 8), float32] */;
    (%1357,)
  };
  %1358(%var_15126) /* ty=(Tensor[(15, 7, 8), float32],) */
}

def @func_15715() -> (Tensor[(10, 13, 9), int8],) {
  @func_15713() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_6444() -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) {
  %1373 = fn () -> (Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) {
    %1359 = @func_4929() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(864), float32], Tensor[(800), float64], Tensor[(10, 13, 9), int8]) */;
    %1360 = @func_5664() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1361 = @func_4710() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1362 = %1361.0;
    %1363 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %1364 = %1363.0;
    %1365 = cast(%1364, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
    %1366 = shape_of(%1362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1367 = cast(%1362, dtype="bool") /* ty=Tensor[(10, 13, 9), bool] */;
    %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1369 = %1359.0;
    %1370 = %1360.0;
    %1371 = @func_3246() /* ty=Tensor[(10, 13, 9), int8] */;
    %1372 = less(%1367, %1368) /* ty=Tensor[(10, 13, 9), bool] */;
    (%1369, %1370, %1371, %1372)
  };
  %1373() /* ty=(Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), bool]) */
}

def @func_13394() -> (Tensor[(10, 13, 9), int8],) {
  @func_13392() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @main(%var_15927: float64) -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8], Tensor[(3, 8, 4), float64], Tensor[(96), float64], Tensor[(1, 4, 11), float32]) {
  %1374 = @func_3731() /* ty=(Tensor[(10, 13, 9), int8],) */;
  %1375 = @func_11851() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
  %1376 = cast(%var_15927, dtype="float64") /* ty=float64 */;
  %1377 = cast(meta[relay.Constant][61] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1378 = cast(meta[relay.Constant][61] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %1379 = reshape(%1376, newshape=[]) /* ty=float64 */;
  %1380 = reshape(%1377, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float64] */;
  %1381 = reshape(%1378, newshape=[3, 8, 4]) /* ty=Tensor[(3, 8, 4), float64] */;
  %1382 = @func_13558(%1379, %1380, %1381) /* ty=(Tensor[(3, 8, 4), float64], Tensor[(3, 8, 4), float32]) */;
  %1383 = cast(%var_15927, dtype="float32") /* ty=float32 */;
  %1384 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 4, 11), float64] */, dtype="float32") /* ty=Tensor[(1, 4, 11), float32] */;
  %1385 = %1374.0;
  %1386 = %1375.1;
  %1387 = %1382.0;
  %1388 = power(%1383, %1384) /* ty=Tensor[(1, 4, 11), float32] */;
  (%1385, %1386, %1387, meta[relay.Constant][61] /* ty=Tensor[(96), float64] */, %1388)
}

def @func_9566() -> (Tensor[(10, 13, 9), int8],) {
  @func_9564() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_7759() -> Tensor[(2, 72), bool] {
  %1390 = fn () -> Tensor[(2, 72), bool] {
    %1389 = @func_4653() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(2, 72), bool], Tensor[(8, 3, 6), bool]) */;
    %1389.1
  };
  %1390() /* ty=Tensor[(2, 72), bool] */
}

def @func_3248() -> Tensor[(10, 13, 9), int8] {
  @func_3246() /* ty=Tensor[(10, 13, 9), int8] */
}

def @func_4063() -> (Tensor[(10, 13, 9), int8],) {
  %1393 = fn () -> (Tensor[(10, 13, 9), int8],) {
    %1391 = @func_3347() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float32]) */;
    %1392 = %1391.0;
    (%1392,)
  };
  %1393() /* ty=(Tensor[(10, 13, 9), int8],) */
}

def @func_7477() -> (Tensor[(10, 13, 9), uint16],) {
  @func_7475() /* ty=(Tensor[(10, 13, 9), uint16],) */
}

def @func_10327() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), uint16]) {
  %1400 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), uint16]) {
    %1394 = @func_9509() /* ty=(Tensor[(800), float32], Tensor[(10, 13, 9), int8]) */;
    %1395 = @func_5861() /* ty=(Tensor[(10, 13, 9), float64],) */;
    %1396 = @func_7593() /* ty=(Tensor[(10, 13, 9), uint16],) */;
    %1397 = %1394.1;
    %1398 = %1395.0;
    %1399 = %1396.0;
    (%1397, %1398, %1399)
  };
  %1400() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), float64], Tensor[(10, 13, 9), uint16]) */
}

def @func_10113() -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), int8]) {
  %1406 = fn () -> (Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), int8]) {
    %1401 = @func_2827() /* ty=(Tensor[(10, 13, 9), int8],) */;
    %1402 = @func_6126() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), int8]) */;
    %1403 = %1401.0;
    %1404 = @func_6227() /* ty=Tensor[(10, 13, 9), uint16] */;
    %1405 = %1402.0;
    (%1403, %1404, %1405)
  };
  %1406() /* ty=(Tensor[(10, 13, 9), int8], Tensor[(10, 13, 9), uint16], Tensor[(10, 13, 9), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen691/build/output.py", line 4419, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:52:54] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_352 = relay.var("var_352", dtype = "float32", shape = (1, 3, 5))#candidate|352|(1, 3, 5)|var|float32
uop_353 = relay.sinh(var_352.astype('float32')) # shape=(1, 3, 5)
output = uop_353
output2 = uop_353
func_358 = relay.Function([var_352,], output)
mod['func_358'] = func_358
mod = relay.transform.InferType()(mod)
var_359 = relay.var("var_359", dtype = "float32", shape = (1, 3, 5))#candidate|359|(1, 3, 5)|var|float32
output = func_358(var_359)
func_360 = relay.Function([var_359], output)
mutated_mod['func_360'] = func_360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_378 = relay.var("var_378", dtype = "int8", shape = (13, 9, 8))#candidate|378|(13, 9, 8)|var|int8
var_379 = relay.var("var_379", dtype = "int8", shape = (13, 9, 8))#candidate|379|(13, 9, 8)|var|int8
bop_380 = relay.left_shift(var_378.astype('int8'), relay.reshape(var_379.astype('int8'), relay.shape_of(var_378))) # shape=(13, 9, 8)
output = bop_380
output2 = bop_380
func_394 = relay.Function([var_378,var_379,], output)
mod['func_394'] = func_394
mod = relay.transform.InferType()(mod)
mutated_mod['func_394'] = func_394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_394_call = mutated_mod.get_global_var('func_394')
var_396 = relay.var("var_396", dtype = "int8", shape = (13, 9, 8))#candidate|396|(13, 9, 8)|var|int8
var_397 = relay.var("var_397", dtype = "int8", shape = (13, 9, 8))#candidate|397|(13, 9, 8)|var|int8
call_395 = func_394_call(var_396,var_397,)
output = call_395
func_398 = relay.Function([var_396,var_397,], output)
mutated_mod['func_398'] = func_398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1213 = relay.var("var_1213", dtype = "float32", shape = (1, 15, 16))#candidate|1213|(1, 15, 16)|var|float32
uop_1214 = relay.atan(var_1213.astype('float32')) # shape=(1, 15, 16)
bop_1225 = relay.logical_xor(uop_1214.astype('uint8'), relay.reshape(var_1213.astype('uint8'), relay.shape_of(uop_1214))) # shape=(1, 15, 16)
output = bop_1225
output2 = bop_1225
func_1228 = relay.Function([var_1213,], output)
mod['func_1228'] = func_1228
mod = relay.transform.InferType()(mod)
mutated_mod['func_1228'] = func_1228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1229 = relay.var("var_1229", dtype = "float32", shape = (1, 15, 16))#candidate|1229|(1, 15, 16)|var|float32
func_1228_call = mutated_mod.get_global_var('func_1228')
call_1230 = func_1228_call(var_1229)
output = call_1230
func_1231 = relay.Function([var_1229], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1973 = relay.var("var_1973", dtype = "int16", shape = ())#candidate|1973|()|var|int16
var_1974 = relay.var("var_1974", dtype = "int16", shape = (3, 6, 4))#candidate|1974|(3, 6, 4)|var|int16
bop_1975 = relay.bitwise_or(var_1973.astype('int16'), var_1974.astype('int16')) # shape=(3, 6, 4)
func_358_call = mod.get_global_var('func_358')
func_360_call = mutated_mod.get_global_var('func_360')
var_1980 = relay.var("var_1980", dtype = "float32", shape = (15,))#candidate|1980|(15,)|var|float32
call_1979 = func_358_call(relay.reshape(var_1980.astype('float32'), [1, 3, 5]))
call_1981 = func_358_call(relay.reshape(var_1980.astype('float32'), [1, 3, 5]))
uop_1986 = relay.acosh(var_1974.astype('float64')) # shape=(3, 6, 4)
func_358_call = mod.get_global_var('func_358')
func_360_call = mutated_mod.get_global_var('func_360')
call_2001 = func_358_call(relay.reshape(call_1979.astype('float32'), [1, 3, 5]))
call_2002 = func_358_call(relay.reshape(call_1979.astype('float32'), [1, 3, 5]))
output = relay.Tuple([bop_1975,call_1979,var_1980,uop_1986,call_2001,])
output2 = relay.Tuple([bop_1975,call_1981,var_1980,uop_1986,call_2002,])
func_2003 = relay.Function([var_1973,var_1974,var_1980,], output)
mod['func_2003'] = func_2003
mod = relay.transform.InferType()(mod)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2003_call = mutated_mod.get_global_var('func_2003')
var_2005 = relay.var("var_2005", dtype = "int16", shape = ())#candidate|2005|()|var|int16
var_2006 = relay.var("var_2006", dtype = "int16", shape = (3, 6, 4))#candidate|2006|(3, 6, 4)|var|int16
var_2007 = relay.var("var_2007", dtype = "float32", shape = (15,))#candidate|2007|(15,)|var|float32
call_2004 = func_2003_call(var_2005,var_2006,var_2007,)
output = call_2004
func_2008 = relay.Function([var_2005,var_2006,var_2007,], output)
mutated_mod['func_2008'] = func_2008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2356 = relay.var("var_2356", dtype = "float64", shape = (13, 5, 6))#candidate|2356|(13, 5, 6)|var|float64
uop_2357 = relay.asin(var_2356.astype('float64')) # shape=(13, 5, 6)
uop_2366 = relay.atan(uop_2357.astype('float32')) # shape=(13, 5, 6)
const_2371 = relay.const([[[5.029178,-7.812782,8.872191,-2.256627,4.555641,-7.520209],[1.113263,4.880796,-4.284393,-6.859723,-6.176191,9.622022],[-5.374669,-7.687633,-4.030050,-5.569310,-1.876971,-9.845499],[-3.136065,-8.176967,9.001475,2.133719,-0.053778,-1.903170],[-7.474758,-9.640758,-9.620924,-0.953468,-2.976641,-5.985985]],[[-1.616419,5.795638,3.373300,-1.782451,-8.186125,4.294609],[3.972154,-3.415294,-1.945649,6.318880,2.060258,2.947326],[9.248080,9.383974,7.681364,-6.379177,-2.298552,-9.438469],[6.405320,2.228636,5.022544,-1.745127,1.571585,-2.128570],[4.929955,-9.243429,7.842232,8.228345,9.680790,8.416242]],[[-2.492017,5.579233,0.960437,-0.322227,-1.316859,-2.651981],[8.539692,1.922096,-2.396556,-1.408424,3.190228,-7.873579],[-8.432506,7.151885,-0.116744,-7.566602,-9.415765,-4.743784],[5.443032,4.975917,-0.283256,0.368654,-4.541980,5.650681],[9.453305,-6.019560,-6.168744,0.531315,-5.481896,6.138147]],[[3.115105,2.822695,6.417325,7.048570,8.794591,-6.771902],[8.034956,0.604100,-3.227172,-1.499498,-5.394151,-2.423463],[9.941333,2.471053,-8.568144,6.909502,7.248722,-1.952235],[-2.669843,5.135896,-5.339670,4.739301,-1.685999,7.251103],[0.374455,-6.224569,-6.241588,2.721958,-2.311903,-8.190498]],[[3.402458,8.946927,-9.996870,0.758687,8.159171,-9.985661],[-3.044263,9.048082,-1.399124,-5.683114,-7.208504,0.248581],[0.678186,1.297287,-8.799868,7.198989,9.822070,-9.771012],[-7.927517,-2.284380,-5.664930,5.501152,-4.599159,2.270996],[4.487513,1.571113,-3.903565,-0.687724,3.456788,-3.715616]],[[4.597405,0.407292,-7.721257,4.192498,0.241197,-3.769818],[-3.992052,-5.699048,2.680020,-0.362484,0.546166,-7.539756],[-7.013095,-0.181000,-3.068198,5.192695,-3.814665,-1.531631],[-1.135299,3.250388,1.149152,-2.731270,6.951222,2.165964],[-3.371834,3.472452,8.301552,-2.922173,-6.863212,3.582496]],[[2.995865,6.597764,1.575118,-5.648485,2.276740,1.939243],[5.206049,-7.104531,-2.996001,2.594426,2.844785,9.259128],[1.630034,6.253602,-3.246745,-1.015755,9.374941,6.369247],[-9.592822,6.849685,8.976836,-4.480434,-7.131713,3.050697],[-1.332188,1.223207,9.492173,-1.815287,-7.533722,-9.882108]],[[-1.337814,-3.245299,-8.811578,-3.864468,0.807351,-5.491781],[-3.980729,-4.702515,-2.166563,-2.859566,-8.969929,-5.513280],[-4.154801,-4.846454,-5.234806,9.944631,-5.951527,1.010742],[6.426317,7.360378,6.697969,5.589797,-3.186283,-3.080335],[5.101016,-3.792377,-6.069831,6.417295,5.083059,-4.565426]],[[-1.302278,1.742802,3.838992,-1.424078,-7.561938,-7.579909],[4.661204,-7.888601,8.059611,-0.115075,3.622954,-5.824021],[-6.532952,-3.645594,-3.632205,1.880383,-5.278337,6.174363],[4.475714,-2.146189,5.067342,7.070460,-6.785452,-2.544872],[-6.372717,-8.235083,3.700834,-0.137160,-3.306546,-4.773474]],[[0.604464,2.858766,-8.229124,5.202703,-5.080409,3.868735],[-2.730059,3.189149,-0.336362,-3.481817,-5.155322,-1.870442],[-2.955247,4.682961,7.759123,1.942341,-3.879733,-2.666168],[9.237265,-0.806672,4.338052,6.760194,0.533498,-4.514373],[-1.673235,-8.376050,6.678505,4.652642,6.799003,-4.407062]],[[-8.049352,4.218363,2.535393,4.000747,-9.991905,-9.105348],[5.200025,2.213267,-7.608416,8.621332,4.355130,-1.272149],[-9.624668,-9.978819,-3.569511,9.040284,-6.617804,1.658560],[-8.209268,-1.563266,9.325668,1.173191,-6.285122,8.208708],[-6.593869,9.392103,-2.959915,7.333716,7.049376,3.426576]],[[-1.005296,-1.896526,2.428758,-4.105992,-4.181165,-9.647236],[-7.203379,7.459688,4.494645,3.597932,0.430783,2.622476],[-8.240097,-6.363789,-5.284423,-0.442941,-1.157308,5.028060],[-1.669017,-5.112153,-3.358837,-6.664866,-0.128211,0.194633],[-4.733702,5.901403,1.329421,-3.199813,6.534449,-5.985319]],[[-1.721533,9.421536,7.665238,-2.049297,-7.910239,2.814811],[-8.356105,6.361012,6.864754,-9.879667,-8.234424,6.598409],[-0.067723,7.202794,-5.705332,7.144614,-2.436102,-0.412259],[2.380184,-0.956383,1.202356,-2.337152,4.512225,-3.050208],[-0.152637,5.205711,-6.462699,-2.207619,-8.685322,1.765838]]], dtype = "float64")#candidate|2371|(13, 5, 6)|const|float64
bop_2372 = relay.logical_or(var_2356.astype('bool'), relay.reshape(const_2371.astype('bool'), relay.shape_of(var_2356))) # shape=(13, 5, 6)
output = relay.Tuple([uop_2366,bop_2372,])
output2 = relay.Tuple([uop_2366,bop_2372,])
func_2377 = relay.Function([var_2356,], output)
mod['func_2377'] = func_2377
mod = relay.transform.InferType()(mod)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2378 = relay.var("var_2378", dtype = "float64", shape = (13, 5, 6))#candidate|2378|(13, 5, 6)|var|float64
func_2377_call = mutated_mod.get_global_var('func_2377')
call_2379 = func_2377_call(var_2378)
output = call_2379
func_2380 = relay.Function([var_2378], output)
mutated_mod['func_2380'] = func_2380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2676 = relay.var("var_2676", dtype = "float32", shape = (2, 15, 8))#candidate|2676|(2, 15, 8)|var|float32
uop_2677 = relay.atanh(var_2676.astype('float32')) # shape=(2, 15, 8)
uop_2702 = relay.sin(var_2676.astype('float32')) # shape=(2, 15, 8)
uop_2718 = relay.cosh(uop_2677.astype('float32')) # shape=(2, 15, 8)
func_2003_call = mod.get_global_var('func_2003')
func_2008_call = mutated_mod.get_global_var('func_2008')
const_2734 = relay.const(6, dtype = "int16")#candidate|2734|()|const|int16
const_2735 = relay.const([-2,5,5,8,-6,-8,6,-4,-4,-8,-9,-9,2,-2,-8,8,-5,-1,5,-8,-8,2,6,-2,3,1,2,-8,4,7,-8,-3,-5,3,4,3,-8,7,-2,-4,10,6,7,-8,-3,-4,7,-4,-10,6,-8,7,7,10,2,4,-3,-3,6,1,6,2,3,-10,3,-8,-7,9,-6,1,6,9], dtype = "int16")#candidate|2735|(72,)|const|int16
var_2736 = relay.var("var_2736", dtype = "float32", shape = (15,))#candidate|2736|(15,)|var|float32
call_2733 = relay.TupleGetItem(func_2003_call(relay.reshape(const_2734.astype('int16'), []), relay.reshape(const_2735.astype('int16'), [3, 6, 4]), relay.reshape(var_2736.astype('float32'), [15,]), ), 4)
call_2737 = relay.TupleGetItem(func_2008_call(relay.reshape(const_2734.astype('int16'), []), relay.reshape(const_2735.astype('int16'), [3, 6, 4]), relay.reshape(var_2736.astype('float32'), [15,]), ), 4)
output = relay.Tuple([uop_2702,uop_2718,call_2733,const_2734,const_2735,var_2736,])
output2 = relay.Tuple([uop_2702,uop_2718,call_2737,const_2734,const_2735,var_2736,])
func_2743 = relay.Function([var_2676,var_2736,], output)
mod['func_2743'] = func_2743
mod = relay.transform.InferType()(mod)
mutated_mod['func_2743'] = func_2743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2743_call = mutated_mod.get_global_var('func_2743')
var_2745 = relay.var("var_2745", dtype = "float32", shape = (2, 15, 8))#candidate|2745|(2, 15, 8)|var|float32
var_2746 = relay.var("var_2746", dtype = "float32", shape = (15,))#candidate|2746|(15,)|var|float32
call_2744 = func_2743_call(var_2745,var_2746,)
output = call_2744
func_2747 = relay.Function([var_2745,var_2746,], output)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3126 = relay.var("var_3126", dtype = "float32", shape = (10, 5, 12))#candidate|3126|(10, 5, 12)|var|float32
var_3127 = relay.var("var_3127", dtype = "float32", shape = (10, 5, 12))#candidate|3127|(10, 5, 12)|var|float32
bop_3128 = relay.less(var_3126.astype('bool'), relay.reshape(var_3127.astype('bool'), relay.shape_of(var_3126))) # shape=(10, 5, 12)
output = bop_3128
output2 = bop_3128
func_3139 = relay.Function([var_3126,var_3127,], output)
mod['func_3139'] = func_3139
mod = relay.transform.InferType()(mod)
mutated_mod['func_3139'] = func_3139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3139_call = mutated_mod.get_global_var('func_3139')
var_3141 = relay.var("var_3141", dtype = "float32", shape = (10, 5, 12))#candidate|3141|(10, 5, 12)|var|float32
var_3142 = relay.var("var_3142", dtype = "float32", shape = (10, 5, 12))#candidate|3142|(10, 5, 12)|var|float32
call_3140 = func_3139_call(var_3141,var_3142,)
output = call_3140
func_3143 = relay.Function([var_3141,var_3142,], output)
mutated_mod['func_3143'] = func_3143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3588 = relay.var("var_3588", dtype = "float32", shape = (8, 10, 15))#candidate|3588|(8, 10, 15)|var|float32
var_3589 = relay.var("var_3589", dtype = "float32", shape = (8, 10, 15))#candidate|3589|(8, 10, 15)|var|float32
bop_3590 = relay.floor_mod(var_3588.astype('float32'), relay.reshape(var_3589.astype('float32'), relay.shape_of(var_3588))) # shape=(8, 10, 15)
output = relay.Tuple([bop_3590,])
output2 = relay.Tuple([bop_3590,])
func_3598 = relay.Function([var_3588,var_3589,], output)
mod['func_3598'] = func_3598
mod = relay.transform.InferType()(mod)
var_3599 = relay.var("var_3599", dtype = "float32", shape = (8, 10, 15))#candidate|3599|(8, 10, 15)|var|float32
var_3600 = relay.var("var_3600", dtype = "float32", shape = (8, 10, 15))#candidate|3600|(8, 10, 15)|var|float32
output = func_3598(var_3599,var_3600,)
func_3601 = relay.Function([var_3599,var_3600,], output)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4797 = relay.var("var_4797", dtype = "float32", shape = (10, 12, 14))#candidate|4797|(10, 12, 14)|var|float32
uop_4798 = relay.acosh(var_4797.astype('float32')) # shape=(10, 12, 14)
uop_4812 = relay.cos(uop_4798.astype('float32')) # shape=(10, 12, 14)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_4846 = relay.var("var_4846", dtype = "int8", shape = (936,))#candidate|4846|(936,)|var|int8
call_4845 = func_394_call(relay.reshape(var_4846.astype('int8'), [13, 9, 8]), relay.reshape(var_4846.astype('int8'), [13, 9, 8]), )
call_4847 = func_394_call(relay.reshape(var_4846.astype('int8'), [13, 9, 8]), relay.reshape(var_4846.astype('int8'), [13, 9, 8]), )
output = relay.Tuple([uop_4812,call_4845,var_4846,])
output2 = relay.Tuple([uop_4812,call_4847,var_4846,])
func_4860 = relay.Function([var_4797,var_4846,], output)
mod['func_4860'] = func_4860
mod = relay.transform.InferType()(mod)
var_4861 = relay.var("var_4861", dtype = "float32", shape = (10, 12, 14))#candidate|4861|(10, 12, 14)|var|float32
var_4862 = relay.var("var_4862", dtype = "int8", shape = (936,))#candidate|4862|(936,)|var|int8
output = func_4860(var_4861,var_4862,)
func_4863 = relay.Function([var_4861,var_4862,], output)
mutated_mod['func_4863'] = func_4863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4918 = relay.var("var_4918", dtype = "float64", shape = (3, 7, 14))#candidate|4918|(3, 7, 14)|var|float64
uop_4919 = relay.atan(var_4918.astype('float64')) # shape=(3, 7, 14)
var_4927 = relay.var("var_4927", dtype = "float64", shape = (3, 7, 14))#candidate|4927|(3, 7, 14)|var|float64
bop_4928 = relay.divide(uop_4919.astype('float64'), relay.reshape(var_4927.astype('float64'), relay.shape_of(uop_4919))) # shape=(3, 7, 14)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_4941 = relay.var("var_4941", dtype = "int8", shape = (936,))#candidate|4941|(936,)|var|int8
call_4940 = func_394_call(relay.reshape(var_4941.astype('int8'), [13, 9, 8]), relay.reshape(var_4941.astype('int8'), [13, 9, 8]), )
call_4942 = func_394_call(relay.reshape(var_4941.astype('int8'), [13, 9, 8]), relay.reshape(var_4941.astype('int8'), [13, 9, 8]), )
output = relay.Tuple([bop_4928,call_4940,var_4941,])
output2 = relay.Tuple([bop_4928,call_4942,var_4941,])
func_4948 = relay.Function([var_4918,var_4927,var_4941,], output)
mod['func_4948'] = func_4948
mod = relay.transform.InferType()(mod)
mutated_mod['func_4948'] = func_4948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4948_call = mutated_mod.get_global_var('func_4948')
var_4950 = relay.var("var_4950", dtype = "float64", shape = (3, 7, 14))#candidate|4950|(3, 7, 14)|var|float64
var_4951 = relay.var("var_4951", dtype = "float64", shape = (3, 7, 14))#candidate|4951|(3, 7, 14)|var|float64
var_4952 = relay.var("var_4952", dtype = "int8", shape = (936,))#candidate|4952|(936,)|var|int8
call_4949 = func_4948_call(var_4950,var_4951,var_4952,)
output = call_4949
func_4953 = relay.Function([var_4950,var_4951,var_4952,], output)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5075 = relay.const([[[-4,-10,-6,10,6,4,-5,10,3,-8,9,-7,-5,2],[1,-9,-2,-5,-2,4,3,6,5,1,3,6,1,-4],[6,-2,-5,1,2,10,3,1,-4,-5,-10,-6,8,-4],[-9,5,-4,10,10,9,-7,5,4,7,-3,-8,9,-8],[8,-5,-8,-2,-9,-4,-4,-2,-3,-3,3,5,-2,-10],[7,-7,-10,3,3,2,8,1,-10,-4,-10,-10,-7,-10],[7,10,-8,10,1,5,9,-6,-5,10,9,-6,9,5],[-10,4,7,-3,3,4,-9,8,8,6,10,-7,-7,10],[-1,-3,10,-10,3,1,-1,10,3,9,-1,-3,10,-1],[-6,-7,6,10,9,-2,-5,10,7,7,9,1,2,2],[7,1,6,8,9,-9,-10,-5,-5,3,9,2,-6,10],[1,10,-7,9,10,-5,-7,-1,5,-2,-1,2,4,9],[-1,10,3,7,-4,5,-8,-4,7,2,1,2,-8,3]],[[-10,-4,1,2,7,-4,-8,4,1,10,5,-8,5,-10],[6,-7,-6,-9,6,-1,-1,-1,-5,-4,4,2,4,-8],[4,2,-1,-8,9,-4,-9,7,1,8,4,2,-3,-7],[-4,6,3,8,6,-3,-5,9,1,1,-3,-7,10,2],[4,2,6,-6,7,-5,1,-7,4,-10,1,6,-10,-8],[-2,4,4,6,4,-1,7,6,-3,-6,-9,1,-8,4],[1,8,4,1,-8,10,-8,-4,4,-5,-3,1,7,-1],[-10,-3,-7,-6,5,-1,-4,-6,1,-9,2,-1,5,6],[-5,-9,2,-5,4,-3,9,-1,-6,-5,-1,-9,8,-7],[-3,9,1,-2,1,-5,-1,4,-4,-2,6,-5,-2,9],[6,5,10,-9,1,8,-3,6,1,1,-9,-6,-10,1],[7,4,-7,-5,4,-9,-7,6,8,-3,6,-4,7,-9],[1,3,-1,3,7,-4,-4,-5,-10,3,4,8,-8,-4]],[[-4,-3,4,-3,4,-4,4,1,3,-8,-6,-10,5,-2],[-10,-1,9,9,2,10,-8,5,2,-9,-2,5,-8,-2],[-3,-9,9,9,-3,-3,10,9,6,1,9,-3,9,-1],[-3,3,7,10,9,6,-8,5,2,10,-7,8,-3,9],[8,-2,-4,10,-4,-9,-10,4,-4,9,-2,-6,10,-5],[4,6,3,-5,-10,10,5,-8,2,4,9,-4,2,10],[-3,-4,8,-8,-7,-9,6,-4,9,-8,2,-9,-7,3],[-2,-1,7,-1,-7,-9,-2,5,10,-10,9,-9,2,-3],[-2,10,7,-10,-9,3,-10,2,1,-9,-9,9,7,-9],[8,9,8,4,3,2,-5,-7,7,4,-1,8,-9,7],[5,-6,8,10,7,3,-10,-9,2,-7,-9,7,-3,7],[-2,-10,10,9,-3,6,-5,-9,6,7,8,-6,-4,-5],[10,8,6,-8,-6,-6,7,1,3,-6,-10,6,10,4]],[[-7,-10,-3,-8,10,9,2,-7,9,1,-9,-2,2,8],[-2,-6,3,5,-8,-9,8,6,-3,-8,-10,8,-6,10],[-8,1,-1,10,-7,-4,-5,-3,8,2,-2,-8,9,-2],[4,-4,10,-4,-4,-9,-7,-6,-3,-7,10,-4,10,-7],[-6,4,2,-4,-5,7,3,2,6,-6,1,-2,5,-5],[10,3,-10,-9,9,7,4,-3,10,8,-5,9,-8,-7],[10,7,4,7,-9,8,-2,1,-9,-2,2,-8,-2,1],[7,2,-9,-7,-9,7,-3,-7,10,-8,2,9,-9,9],[4,-3,7,8,4,-9,2,-2,-8,7,-7,-6,-4,-3],[4,4,1,8,-3,-5,4,2,9,8,-5,5,9,-10],[-8,5,4,-1,7,4,6,8,5,-5,-6,-2,-7,2],[10,-8,-5,-2,2,-2,3,-8,-9,-10,-8,1,-5,4],[1,7,-8,-2,5,9,-9,6,-1,2,5,-6,-4,-7]],[[-9,-2,-7,-4,3,-9,1,-8,1,2,-2,-3,4,-8],[-6,1,5,8,2,8,-7,4,5,6,-7,9,1,-4],[1,7,-6,3,-2,5,2,-1,-10,-4,-8,2,-9,3],[-5,6,9,-3,2,10,6,1,-9,-4,-9,6,9,1],[1,7,-2,-1,-8,10,10,-5,-3,6,-9,5,-1,5],[10,-7,3,6,8,-6,4,6,4,-2,-10,-3,9,8],[8,9,1,-9,-3,-10,4,7,2,4,7,-6,-4,-5],[-6,2,-6,10,-8,-4,5,2,-9,-7,-4,-8,-9,-7],[3,8,5,-1,-3,-2,1,-4,9,-6,-6,-1,8,-1],[-2,-9,-10,-2,9,8,8,6,8,-8,7,7,-8,6],[-6,2,7,4,-10,-2,2,4,-2,1,-2,6,2,-5],[-2,8,-9,-7,-4,4,9,-5,-10,3,1,3,-3,-3],[4,5,2,-3,4,9,-3,3,1,-3,9,4,-7,3]],[[5,5,7,-3,-5,-10,-8,-8,4,-3,1,5,-1,8],[-3,10,-9,7,-6,3,-9,-2,-3,-10,-2,-1,8,-1],[-4,-8,3,7,10,-6,-4,-8,5,2,10,5,6,5],[4,4,8,-5,8,1,-3,6,9,10,4,1,5,-8],[-4,6,10,5,2,8,-1,-1,9,4,1,-1,-8,-1],[-10,6,3,-1,-4,2,6,7,1,2,5,-8,-9,-3],[1,2,4,-5,-1,-1,-3,-10,-3,4,5,3,-1,-6],[10,-9,-5,4,10,8,6,-4,-2,-7,1,8,9,-8],[2,1,5,-5,-3,-2,8,2,-7,2,1,4,-3,2],[2,2,-5,-6,-5,3,-9,10,-2,1,1,1,-5,5],[-7,-9,8,5,-8,-6,-3,2,-1,-7,-5,4,-2,-7],[2,-6,-1,-8,-8,-4,3,9,6,-7,-4,-2,3,-6],[-5,-3,-6,-5,-5,8,7,2,-10,7,-2,7,-1,6]],[[6,-2,-4,-9,-5,9,-1,-5,-7,-10,8,4,-4,-8],[9,10,6,8,6,-2,4,-2,6,-3,4,1,3,-2],[8,3,-5,-7,-6,3,-4,4,8,-3,3,9,-9,7],[-8,10,-2,5,7,-10,-7,-4,10,7,4,-2,5,-4],[2,6,-2,-5,-9,-2,10,-7,7,-8,-1,-6,-4,-4],[2,1,9,5,4,-8,2,-9,-5,1,-10,-10,-3,-8],[7,-6,-1,-6,-6,6,4,-3,5,1,10,4,1,1],[-10,-1,-4,-9,-3,5,-5,9,6,-6,-6,3,-10,-4],[-8,-5,7,-9,-2,-3,-1,-4,1,10,7,-8,-4,7],[-5,5,7,4,-9,-4,-9,-7,7,-1,-7,6,6,5],[3,5,2,-3,-3,4,10,-2,2,3,1,8,6,1],[7,3,-7,-8,-8,9,-8,3,8,-8,5,2,7,5],[3,5,-2,-10,7,-8,-2,8,10,9,7,8,1,9]],[[1,1,-1,-6,5,4,7,-8,-8,9,6,-6,5,6],[-6,-6,-10,-1,-5,4,4,-3,9,-7,6,7,-4,-6],[6,7,-6,9,3,-6,8,8,9,2,-3,-7,5,-10],[6,9,9,-4,-10,10,2,2,6,-1,-3,5,3,4],[7,-6,1,4,3,4,2,9,-10,5,2,2,-10,3],[8,-3,1,-5,5,4,-1,3,4,9,-2,-9,2,-2],[-6,-8,-2,7,-10,-10,6,-5,4,-10,10,10,4,8],[1,-2,7,-3,-3,-4,5,-2,-10,7,4,2,-9,-8],[4,-10,-8,-3,-4,-5,7,2,5,-4,-8,7,-2,-10],[1,-3,3,-9,-8,7,-9,9,-4,-1,-4,2,-7,7],[-7,-10,2,5,-9,-8,9,10,-8,5,1,-10,10,-6],[10,8,-10,-10,-4,-8,9,9,-3,-5,10,-4,-5,-4],[6,-6,5,6,4,8,10,10,-3,-7,-10,7,4,8]],[[6,6,6,-8,8,8,1,10,3,-3,1,-3,4,-10],[3,-10,2,1,-10,10,-5,9,-6,9,1,8,-4,4],[2,8,1,-4,-6,4,-6,-5,5,-6,5,10,9,-9],[-8,-5,-4,-8,3,-2,9,-6,-10,-5,-4,-8,8,6],[-8,4,-7,-8,2,-8,8,-3,-5,1,7,-2,6,-2],[10,6,5,5,7,-3,-1,-3,2,-7,4,-4,-3,5],[-8,8,7,7,-1,3,10,-8,-8,10,-10,7,-5,6],[7,9,-10,-5,-10,10,9,-1,9,7,-4,-5,4,-10],[-3,8,10,7,-4,-9,-9,8,-10,6,-2,-9,10,3],[-8,-4,9,-2,9,1,4,-10,6,-8,10,-10,-6,1],[2,3,-6,10,-9,8,-10,3,-6,-6,2,-3,-9,-5],[1,-5,9,-1,-3,4,-1,-9,-1,6,5,4,-7,2],[-9,1,2,-2,-3,9,6,-9,-6,-2,3,6,10,-7]],[[-6,-3,5,-6,-1,9,-5,-10,-2,2,9,6,-1,-10],[-2,-10,-6,-5,8,-8,-4,-2,3,-2,3,6,-7,4],[5,-1,-2,9,-5,-9,-8,3,-1,-2,7,3,7,1],[-2,-2,-8,-5,-5,8,-1,-6,-3,-2,1,3,10,-9],[-3,-1,-5,1,-5,4,5,3,-9,4,5,6,-1,-8],[-5,8,-5,-3,1,4,4,-9,7,2,8,-8,5,-2],[3,9,-5,5,7,2,4,5,1,-7,-5,-6,9,7],[8,-2,9,8,-8,4,3,-3,-2,-6,-4,5,4,-2],[5,-8,-1,3,-2,4,4,-5,-5,-3,-9,-2,-2,10],[-6,2,6,-4,10,6,10,2,-7,-2,-7,7,-4,9],[-6,5,-3,-5,4,-5,9,-6,1,-5,-7,9,2,10],[-7,-3,7,-4,2,1,-1,4,-10,-10,-8,-7,4,9],[-4,-3,5,1,-3,-4,6,-4,-4,8,-9,-4,5,-4]],[[-7,-6,-1,9,2,-9,7,-1,9,-8,2,-6,6,7],[-9,-2,-3,9,-5,9,-10,-4,10,-8,9,-1,-3,1],[4,1,-9,2,-9,-4,-1,4,1,-6,1,9,1,-2],[-6,-4,-9,4,7,-9,-8,3,-8,-1,-4,8,-1,7],[9,-6,10,-3,-4,8,4,-8,-2,2,-7,-9,-9,8],[5,4,3,-9,2,6,1,-7,-3,9,-7,7,5,-7],[-4,6,8,-3,4,8,6,-3,-9,-1,-7,-10,-1,-10],[-5,-1,-2,8,9,-5,-3,-10,-6,-5,-3,-7,-5,7],[-6,-2,-6,7,10,-9,7,3,-6,1,5,-7,2,-1],[1,-5,-4,7,2,7,-1,2,-10,-10,-7,8,-8,-10],[-7,1,8,-8,-5,-2,10,8,6,1,-6,-2,-5,4],[-3,6,-7,1,-3,6,3,6,9,-7,5,-1,-3,3],[-1,-3,-3,-6,6,-4,6,8,9,-5,7,3,3,2]],[[-9,4,-9,-6,-6,3,-2,2,6,-9,3,5,-5,-3],[-4,-4,9,3,-7,-10,-5,-8,9,-5,1,2,-8,-5],[7,3,4,-4,-9,8,-10,-2,3,-2,-9,9,-2,3],[8,-5,7,-8,-7,-1,1,-4,-2,-6,4,9,-4,3],[-9,-6,-4,4,10,10,4,4,1,-8,4,-7,-1,-2],[-5,9,-1,1,-5,-5,-8,-2,6,-2,6,1,-4,-10],[7,10,-7,3,5,3,2,-4,-5,-5,-4,10,-6,2],[1,7,-4,-7,-5,10,8,-9,-1,1,1,7,-2,5],[-9,-8,-9,-6,1,3,-6,5,4,2,-6,3,8,3],[6,8,5,4,10,-4,-5,-8,-9,3,-6,1,8,9],[4,6,10,-5,-1,-8,3,3,-10,-7,3,-4,-6,8],[1,-2,9,-6,5,3,-4,-6,-6,3,9,5,-1,-10],[8,-5,-7,-3,-6,-5,-2,-6,1,1,2,-3,5,4]]], dtype = "uint64")#candidate|5075|(12, 13, 14)|const|uint64
const_5076 = relay.const([[[3,6,1,-8,9,-5,-9,-10,1,1,7,-4,3,-8],[10,-2,3,4,3,2,-5,-10,1,5,5,-5,-7,-3],[-6,1,-8,-8,2,-4,4,-8,2,-5,-6,-4,-8,3],[1,-6,-9,-2,9,-8,4,7,-8,6,2,3,-4,9],[8,-9,-8,-6,1,3,-2,2,-5,-3,-3,2,-2,3],[2,10,-4,10,4,-8,-8,5,-4,-5,6,-1,-6,-6],[6,4,1,-9,-3,-6,5,-1,9,-2,-5,-9,4,1],[2,8,-7,7,6,-5,-5,3,-7,4,2,-6,-4,9],[-6,9,10,-6,-10,4,-1,5,10,-7,-4,-2,6,3],[-6,7,3,-1,-5,-9,-2,-3,4,8,-5,2,5,-6],[-5,-10,-3,4,-4,8,-4,4,-2,10,4,1,-2,-9],[-8,-7,-7,-3,-3,-6,-3,-6,-1,-6,7,8,-3,-1],[1,-1,8,-1,4,-5,4,6,6,-6,-4,2,8,5]],[[9,8,7,-1,9,9,-8,2,6,9,2,8,10,9],[10,-1,9,2,-1,10,7,-5,4,6,7,-3,-3,-5],[1,-2,8,-3,-5,1,-10,-9,-2,9,-4,-7,2,-10],[-1,9,10,4,-9,5,3,-3,8,-7,6,6,3,-1],[-3,10,-7,-5,-4,-7,7,-8,-7,-1,-1,-3,6,-7],[5,2,8,-2,-4,-3,10,-3,1,7,-2,-3,7,-10],[-9,2,2,2,9,-6,-4,3,-1,9,8,2,-4,-3],[-2,6,9,-5,-3,2,2,-6,6,-10,-6,9,-5,-1],[7,-4,6,-2,9,5,-4,-5,-4,-3,-10,9,2,-9],[-10,-9,-6,-6,2,-7,-5,4,-1,4,-2,8,-9,-8],[-5,-9,-9,10,9,8,-5,-2,-1,-10,7,-8,10,-1],[-2,-10,-7,-10,5,-2,9,8,8,4,8,2,7,-4],[-7,-8,3,-6,6,7,-9,8,2,3,5,9,-3,-9]],[[-4,-9,-8,-2,6,-3,5,6,2,1,1,4,-3,-1],[6,7,3,-1,-5,-5,-10,-3,-10,-10,-4,-4,6,1],[1,-4,-2,-6,-8,-9,9,-2,-2,-5,-4,3,-5,5],[5,1,-7,-4,7,-5,5,6,8,5,4,10,-7,8],[-2,-5,8,-4,2,-4,-5,2,3,-8,-9,-8,-4,-1],[-1,-5,1,-1,-6,3,-2,5,-4,-9,-8,-7,-1,7],[3,-6,-8,-9,-1,-7,-5,2,-5,-5,5,-7,3,9],[-9,9,6,-8,6,-3,-10,-3,9,10,-4,3,1,4],[6,-7,-2,6,-2,2,6,7,6,-10,-3,8,-7,7],[-3,-9,-6,3,-3,-6,5,-4,-5,-6,-9,3,9,1],[2,-2,-1,-3,9,3,-5,8,-8,3,-5,4,7,8],[-9,-10,9,8,-4,6,-7,5,9,3,8,-3,-5,7],[-4,-6,5,6,9,-5,4,-6,10,4,5,-9,1,3]],[[10,-8,4,9,-1,5,-8,-2,-10,5,8,-1,7,7],[5,4,10,10,-7,7,-4,7,-3,-6,5,-4,3,9],[9,-9,-6,10,6,-3,-8,2,-3,4,8,-8,5,8],[-9,-9,-3,-3,-3,6,-2,4,-9,2,5,-5,-7,-6],[5,10,2,-6,-8,-5,-3,-2,-10,-5,-3,9,2,-9],[-9,1,8,9,9,-7,6,9,5,-4,-6,-5,7,-6],[-10,-10,-9,-2,-10,-1,8,-7,-1,2,8,10,5,4],[9,-3,-5,7,-3,5,10,4,3,2,10,10,10,-1],[-7,-6,-4,-7,-1,-5,3,-8,5,3,-5,-3,-9,-2],[-7,1,-9,2,8,-2,-6,-3,-8,-4,-3,4,1,5],[-2,-6,-2,-3,-8,4,-4,4,5,9,-10,-10,-1,3],[2,4,4,3,1,-7,-8,-4,9,-4,-7,2,7,8],[-4,4,8,-10,-9,10,-8,8,10,-10,-10,-7,-7,-2]],[[-9,-4,3,1,-5,-6,5,-4,-3,-8,-2,5,-1,9],[-9,4,-3,-3,8,8,6,-8,9,1,-2,-8,5,8],[-6,-8,10,-5,2,-9,-3,-4,2,7,3,5,6,2],[7,-1,-9,-7,3,-9,-9,7,-7,10,-4,1,4,-3],[-9,6,-4,-10,6,-1,-9,-5,-1,2,-5,7,9,5],[4,-6,2,3,-8,9,10,2,2,-10,10,-1,4,4],[-6,9,-6,6,-8,4,-2,10,4,-1,-9,-1,5,-6],[2,4,-9,-9,-9,-3,-4,1,-1,-7,-2,3,-9,2],[6,5,-6,-7,2,-9,3,-6,-10,-2,-9,-8,-7,-2],[-5,2,-2,1,-6,4,4,-6,5,5,-10,-8,8,-10],[7,3,10,-3,-2,10,-1,-5,8,-4,-5,10,-6,4],[4,-8,10,1,7,-2,-8,-7,9,-6,3,-1,8,4],[2,9,6,5,9,7,1,4,-4,-8,5,9,5,6]],[[1,-9,-10,9,6,-3,1,2,9,-1,9,5,5,-1],[4,-6,-7,-8,-1,-2,-2,-3,-5,6,1,7,9,3],[6,6,1,-4,5,7,10,7,6,-6,-5,5,10,-7],[3,-4,-3,-8,-2,-5,4,-7,1,8,-5,8,-7,-5],[6,5,-1,-8,-1,1,9,-2,-7,-9,4,8,2,-9],[-1,-5,8,6,-8,6,-3,5,-2,-4,8,9,-1,-1],[-3,1,5,-8,-5,-4,1,4,-4,5,-6,5,4,-5],[-1,7,7,5,-3,6,-1,1,-8,-7,4,10,-3,-3],[9,10,-4,-1,5,4,-2,6,-1,-5,-3,-3,6,-6],[-8,-6,7,-4,-4,-4,4,-9,-8,-10,-3,8,-9,3],[-4,-4,8,-9,5,7,-10,-10,-7,-3,-5,4,7,-2],[-2,-2,3,-1,6,-7,-3,2,-3,10,-1,-7,-5,4],[2,10,2,4,-8,6,3,6,-6,-1,-3,3,3,2]],[[-10,2,2,-9,4,10,6,-7,-9,-5,5,8,-9,4],[10,2,2,-3,3,-9,-5,10,-6,10,-2,-2,3,5],[-10,5,-4,-1,10,1,8,-2,-10,6,-1,-1,5,2],[-3,1,-5,-3,-5,3,8,1,-5,-1,-7,-9,3,-1],[-3,-6,9,8,-6,-3,3,6,-2,-9,2,-2,-5,7],[-10,8,-3,-8,4,8,-4,8,-1,-1,1,-1,-10,-4],[-1,4,-3,-5,-9,-1,-6,10,2,-1,4,7,4,10],[1,10,7,5,8,-6,-10,7,-6,10,-7,-2,-3,-8],[-8,-10,2,-3,5,7,-8,8,10,6,6,-5,-6,-4],[9,-5,-10,-8,-6,1,10,3,-1,-8,10,-8,-9,-9],[-1,4,-5,-8,6,9,-6,-1,10,-4,9,-3,-5,3],[-5,1,-5,5,5,-9,1,3,10,-4,10,-3,-2,-7],[-9,-3,5,10,10,-4,-1,8,-2,-9,-6,5,5,-6]],[[6,3,6,-10,1,-2,7,10,10,-10,-10,7,4,-4],[9,5,5,-3,-6,-3,4,2,5,9,-1,-8,-2,8],[6,-6,-4,-4,-8,2,-1,3,-4,9,6,-5,-9,-7],[-7,-8,7,-9,2,9,-10,6,-6,9,5,-9,7,9],[6,-8,2,-5,-7,-9,-10,3,-1,-3,9,7,1,-8],[-10,6,-2,9,10,3,2,10,-2,2,-3,10,-9,7],[-5,-10,-1,-2,-3,-7,7,-4,-3,1,-7,-9,-9,2],[8,-10,6,9,-8,-10,-2,-6,10,9,4,1,4,2],[8,1,-5,8,-1,-9,-8,10,8,10,-5,3,9,-1],[-1,6,6,7,10,-5,2,2,2,1,-7,10,-2,-1],[7,5,4,-9,-1,-4,-2,2,2,8,-5,6,2,5],[-8,-4,-10,-3,10,-9,-8,2,1,-6,9,6,2,7],[7,5,-10,-2,-10,9,7,-3,-8,-7,-10,-1,-6,2]],[[-9,10,-8,-3,6,3,10,-7,7,-4,-4,5,3,-2],[4,-6,10,-1,5,-1,9,8,-3,6,5,-4,-2,-3],[-6,5,1,-3,9,1,9,-4,5,8,7,5,-4,10],[-9,-3,10,-5,9,-1,-3,2,-4,10,8,-7,-2,6],[-3,-3,9,-9,2,-9,-3,9,5,-8,8,8,6,1],[-10,-5,3,-7,-2,1,-10,4,3,1,-7,-8,-9,-10],[-4,4,-10,-8,4,5,-4,1,9,9,-1,1,-9,2],[5,-4,3,-2,-6,-5,-6,8,7,3,-7,7,3,5],[-4,2,8,-8,-6,3,-9,-6,-9,6,-6,-9,1,10],[-3,-8,1,-6,-7,-2,-5,7,-5,10,9,-7,4,7],[-3,3,-3,3,-2,5,-5,4,-1,-3,-6,-8,10,-10],[-5,-2,-4,-6,-6,1,10,-9,2,-5,6,9,5,-9],[-7,9,-3,-2,-6,4,-9,-9,-2,6,-4,8,10,-4]],[[-7,10,-9,7,10,1,-10,-9,9,-10,6,6,8,2],[3,3,-8,-5,-3,-10,-4,10,-5,2,7,-6,7,-3],[-8,-3,10,3,10,-4,2,6,5,9,5,4,5,-4],[-4,9,3,-4,-9,-10,7,-10,10,-7,1,4,9,-7],[2,7,10,9,-8,-6,-2,-4,10,1,1,4,-4,-10],[-8,5,10,-5,8,2,9,-2,4,-3,1,4,-2,8],[9,-8,6,-7,7,-5,-8,-2,-4,-1,10,3,-7,-5],[-5,6,-10,-1,10,-1,9,-4,2,5,10,-4,-1,-2],[-4,-9,8,3,10,2,-1,4,8,9,4,6,4,-4],[5,-3,-1,-7,8,8,-5,5,-5,8,-1,-3,-4,8],[-7,1,8,-2,-10,1,1,5,10,-10,3,8,6,10],[10,-6,-2,-10,4,-1,-1,2,2,7,-1,6,-6,9],[-6,2,7,-1,-6,9,-5,6,-5,-9,10,-8,3,-7]],[[8,1,-5,8,-10,10,1,9,4,-3,4,3,-6,-4],[-4,-7,7,6,10,5,-2,7,-6,1,-2,8,-6,9],[-3,10,6,-2,7,6,-2,7,-5,1,-1,-1,9,-8],[-2,7,-3,-3,-6,3,-2,1,9,-10,-4,-8,-3,9],[-10,-5,5,-8,-2,-7,-5,-4,-1,-1,-2,-9,-9,-3],[-7,4,-9,-10,2,-3,8,-3,-2,1,1,-8,-2,1],[-5,4,7,9,-9,-10,-8,5,5,-10,6,-4,3,2],[-10,-9,-9,7,2,-4,7,-2,-9,5,-7,-4,-6,4],[10,-7,10,5,10,7,-8,-3,-7,1,1,1,-1,-5],[-3,10,-4,6,-2,5,-3,-6,-5,7,3,9,4,-4],[-7,3,7,-5,-10,-4,4,-6,4,-7,10,-1,1,-7],[-4,-1,-1,2,8,10,10,2,-5,-10,-2,-8,-2,7],[10,10,6,-4,-8,6,4,3,2,-8,8,6,7,-4]],[[2,4,-5,6,8,10,-4,1,4,2,1,-3,-7,9],[-2,3,-2,5,-1,-1,-9,-4,-7,1,-9,7,2,-9],[10,3,8,-5,-2,10,-1,4,-1,-5,3,2,-10,2],[-1,-10,-6,3,8,-8,10,8,8,3,10,8,7,-5],[-8,-8,-7,-2,-3,9,-6,-4,5,-10,-3,10,3,7],[9,7,-9,8,3,-9,8,-8,6,-1,-3,2,3,9],[4,-8,-2,-10,-9,-8,-10,-9,-6,-1,10,-3,-4,-10],[9,-5,-9,-5,7,1,4,8,-6,-2,-7,-5,6,1],[5,7,3,8,-4,-1,8,6,-1,8,3,-2,-5,-7],[-6,-1,10,-6,1,-4,-7,-7,-9,7,-9,-1,-4,-3],[1,10,-8,10,-8,-4,-8,-5,5,10,-6,8,-1,-10],[-10,-2,2,-10,-2,10,-7,-10,-3,10,10,4,4,-3],[-8,9,-5,3,-4,6,3,7,-2,-5,-5,-5,-2,3]]], dtype = "uint64")#candidate|5076|(12, 13, 14)|const|uint64
bop_5077 = relay.greater_equal(const_5075.astype('bool'), relay.reshape(const_5076.astype('bool'), relay.shape_of(const_5075))) # shape=(12, 13, 14)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
const_5090 = relay.const([-1,3,1,4,-3,8,9,7,-10,-9,-6,-7,5,-3,7,10,-4,-7,10,4,8,-1,6,10,-2,8,-4,-1,10,-5,-5,-7,8,2,7,1,10,4,-1,-5,-3,-3,9,-9,-7,8,-9,-10,10,5,2,5,-2,-9,5,-8,-6,-7,-4,-5,-3,4,9,1,8,9,3,-3,4,10,7,-8,-10,9,5,8,7,10,-7,-7,8,-6,-9,8,2,-3,-7,-5,7,-10,10,-10,9,4,2,3,-5,-1,-8,10,-6,-1,3,7,-2,2,-6,-8,4,-2,-1,-4,-2,5,-1,-1,7,9,10,3,6,3,-10,8,-10,8,-3,-10,-5,-8,9,5,-3,-9,2,-8,-7,-10,-9,9,-7,3,-9,-7,-9,3,4,5,4,-4,-5,-3,-3,-9,9,4,-7,8,-1,4,-1,9,7,-5,-9,5,3,-6,1,7,-7,6,9,4,10,-9,5,6,-3,2,2,-3,7,9,9,6,8,-4,7,-6,-5,5,4,-3,4,8,5,9,5,8,6,3,-7,3,-4,10,-8,1,-8,-1,-10,-8,-2,-4,7,-10,7,10,-10,-9,-4,4,-6,3,9,-6,-3,-3,1,2,1,-2,-7,4,5,-2,10,8,2,2,5,10,2,5,-1,5,8,2,-10,-3,-10,4,2,8,5,-5,7,10,-9,7,1,3,7,-7,4,4,6,5,-9,-3,-2,7,-4,-1,4,-2,-9,-6,-2,5,-4,1,-6,1,-9,10,-3,-3,5,-9,-3,4,7,10,3,-7,-4,-9,5,6,4,-7,4,-5,5,8,6,2,1,5,5,3,10,-10,3,9,1,-6,8,-3,-9,5,-2,1,6,1,9,5,-9,-4,-8,-2,1,-3,1,-5,9,-8,-4,-6,6,-6,-3,-2,-5,-5,-1,1,6,4,1,10,9,1,-6,6,8,4,-4,-4,-5,1,7,-2,7,2,5,-10,-9,-8,9,6,-9,-9,-9,9,5,3,-3,4,-3,9,-8,4,1,-2,-7,8,-1,8,-1,7,8,-7,-7,2,9,7,2,5,-5,-4,5,8,-8,-7,5,4,-4,-4,-3,-10,-10,8,-8,3,-9,-6,8,2,2,6,3,-1,-10,7,-3,-4,4,5,6,-5,-7,-1,7,-3,-5,4,-9,-5,2,-2,1,-10,-1,-8,4,-4,-4,-10,-10,-10,1,3,9,-1,-3,7,-1,10,-3,1,-2,10,1,9,-2,8,-2,-5,10,3,-9,7,9,-1,6,10,6,5,2,1,-10,-9,-8,5,-10,-3,-1,6,10,2,1,3,6,5,2,5,-2,6,1,-10,-10,-8,5,-2,-5,-10,-10,4,-3,-5,-4,6,-7,8,4,6,4,6,2,-4,-2,-3,-9,10,5,-8,-6,-7,-7,-10,6,6,4,7,9,2,8,-6,4,1,-1,-10,-3,1,-3,-2,9,-7,9,-8,5,-10,7,2,-1,-3,-9,-3,-10,-4,-5,10,-6,6,10,4,4,-10,9,4,-4,6,10,8,2,-2,8,-3,-10,-10,3,-10,7,1,2,7,2,9,-1,-3,9,-3,9,1,-7,2,4,-8,-1,-6,4,-1,9,10,9,4,-9,6,3,7,-10,-9,-10,5,7,4,-7,10,7,5,-3,3,-5,8,-8,-7,4,3,4,5,9,3,-6,-3,2,10,-6,5,-4,1,-10,8,-6,-9,-9,2,-6,6,-7,-7,-7,-2,2,8,2,5,2,9,-6,-10,5,-5,-8,-6,-9,2,2,3,-3,7,2,1,-7,2,1,8,-6,8,3,-9,-7,-10,-6,2,-6,7,10,2,8,-3,-7,-4,4,-9,6,-1,10,3,-6,9,3,-10,4,2,-7,1,-6,9,9,-6,7,-9,1,-6,6,-9,-1,-1,10,-7,8,10,-6,-1,8,-9,7,5,1,-4,-7,5,-1,-3,10,7,9,-2,-8,-10,-2,-3,-9,6,-10,-9,1,-4,-10,3,-8,-10,8,4,4,-4,2,-5,8,3,10,-6,5,5,-9,-7,-7,-6,10,-2,-3,-3,4,8,-9,-9,-4,-4,-6,-4,5,2,2,-10,-5,7,9,-4,9,-6,-4,1,-9,-5,-2,-10,2,-1,-7,7,3,1,-5,6,9,-4,6,-9,10,10,4,-9,1,3,2,3,5,9,8,-5,7,10,-5,-8,4,7,9,6,-7,-9,10,-6,3,6,9,10,1,9,10,2,-7,-4,6,-6,1,-4,5,-6,3,4,1,2,-6,9,8,2,10,-4,5,1,-5,-5,-5,1,-2,4,8,7,-4,-2,10,2,7,8,3,-8,-4,-9,3,-9,-4,10,6,8,8,6,3,1,1,-3,-9,-5,3,4,-3,-5,-5,-8,4,4,-7,1,-8,1,-4,-6,-5,-7,-8,-6,-5,7,-6,2,-3,4,-7,-2,-9,-4,7,-5,-4,3,-7,-2,-10,4,-6,-7,-5,10,8,-6], dtype = "int8")#candidate|5090|(936,)|const|int8
call_5089 = func_394_call(relay.reshape(const_5090.astype('int8'), [13, 9, 8]), relay.reshape(const_5090.astype('int8'), [13, 9, 8]), )
call_5091 = func_394_call(relay.reshape(const_5090.astype('int8'), [13, 9, 8]), relay.reshape(const_5090.astype('int8'), [13, 9, 8]), )
func_358_call = mod.get_global_var('func_358')
func_360_call = mutated_mod.get_global_var('func_360')
var_5094 = relay.var("var_5094", dtype = "float32", shape = (15, 1))#candidate|5094|(15, 1)|var|float32
call_5093 = func_358_call(relay.reshape(var_5094.astype('float32'), [1, 3, 5]))
call_5095 = func_358_call(relay.reshape(var_5094.astype('float32'), [1, 3, 5]))
uop_5099 = relay.log(const_5075.astype('float64')) # shape=(12, 13, 14)
func_4948_call = mod.get_global_var('func_4948')
func_4953_call = mutated_mod.get_global_var('func_4953')
const_5113 = relay.const([-7.558527,-3.747279,-6.877208,4.300316,-6.656816,-9.130021,-2.438434,-5.292008,-6.164668,-6.720249,-5.641876,-8.059338,7.720555,-0.995106,8.815114,1.148389,0.721216,-3.869712,-3.317420,0.890471,-7.534624,-4.208965,0.911832,-1.186511,-7.784911,6.365917,9.374843,0.746696,3.676172,-2.395949,0.639002,-3.834572,5.104674,-9.694094,-2.068420,-2.918907,0.871853,-4.897820,5.833671,9.557011,7.701462,-6.507582,-1.222908,0.109593,5.156093,7.633882,1.669090,0.483657,-6.929457,-3.724959,7.190037,2.795223,-3.243720,-9.957698,1.535525,7.761807,-7.319353,5.902193,-4.000897,-8.763473,-2.037348,-8.914908,9.441058,-9.039688,-1.685410,9.839635,7.434227,-5.922376,-1.073902,8.161004,-7.940875,-8.371130,4.564298,-7.180748,-3.549428,2.573171,-3.960535,2.610554,-5.913783,7.657472,-2.754989,-1.821127,-5.440094,3.984652,2.319361,-4.390757,-2.101475,1.984502,-8.263763,5.750124,-0.294534,-8.723311,-0.540182,6.111192,5.536849,4.267795,1.654799,-5.762331,5.868082,-3.897281,-2.790648,-4.083314,0.146157,-6.186674,2.685971,-5.544183,0.740235,-0.492093,-6.996802,-9.371388,2.797249,-6.800204,9.506074,-7.707892,-4.047111,-1.955235,9.446153,4.568985,-4.129006,-3.260221,0.665706,1.563467,1.488600,5.058948,2.972604,-5.455198,0.262174,1.837950,8.490438,7.300577,-0.915060,-3.809674,3.232885,-2.973387,-5.704465,8.312295,-2.531831,-3.621639,2.736215,8.128822,0.191262,0.354757,-4.945979,2.132880,-8.085792,-3.623931,-3.795382,-6.117567,-3.059013,9.310111,5.297408,4.438101,-0.248724,-8.378110,2.442348,-0.358149,7.225179,1.857248,2.996473,5.324410,-4.383063,-5.128898,-6.679115,-1.344688,-1.151547,4.486918,-0.918916,4.038544,-3.017533,-5.912077,3.116054,-8.810563,-1.700835,3.235170,2.702540,1.238881,-9.774084,-6.626531,-8.994182,8.282524,0.355913,4.435932,9.069025,-0.047222,-7.421929,3.417381,7.151849,-5.874619,-9.001551,1.824420,-2.164930,7.399499,1.649659,2.513803,-6.932784,-3.224122,-1.647605,5.643970,-0.198597,9.184916,0.748128,-2.844375,8.590837,-2.205615,-7.542657,4.791910,6.577953,3.426179,-5.124381,-9.398055,-2.235750,-2.595802,-4.547418,-5.774735,8.499282,7.115655,4.956305,-6.671122,-8.264653,-8.553977,-1.159476,1.697650,-7.332971,-8.165039,-5.198795,2.175894,2.594229,6.486364,5.872156,-0.928448,6.894043,0.268105,-3.981338,7.053928,2.404315,5.574122,0.038547,2.640890,-3.063193,2.254030,-6.526322,3.815501,-6.706891,-3.422521,-7.686591,8.293325,-8.513238,-8.110137,-7.519014,-4.833140,7.229334,9.677928,-3.847345,-1.354857,5.569323,7.547076,-3.848756,3.078067,3.084929,0.997107,9.131696,-7.700887,7.652159,-4.706632,-1.721801,2.995451,-5.311242,3.194081,4.282565,0.306877,8.100223,2.751141,9.825878,-8.849006,-8.681649,0.794008,-7.605808,9.039456,-2.788598,2.440710,-2.693721,2.854862,-6.241179,-5.565634,-8.187383,-1.291028,-3.374270,-1.891344,-6.288994,6.949572,-3.647973,-2.028943,-0.730993,-6.335830], dtype = "float64")#candidate|5113|(294,)|const|float64
call_5112 = relay.TupleGetItem(func_4948_call(relay.reshape(const_5113.astype('float64'), [3, 7, 14]), relay.reshape(const_5113.astype('float64'), [3, 7, 14]), relay.reshape(const_5090.astype('int8'), [936,]), ), 0)
call_5114 = relay.TupleGetItem(func_4953_call(relay.reshape(const_5113.astype('float64'), [3, 7, 14]), relay.reshape(const_5113.astype('float64'), [3, 7, 14]), relay.reshape(const_5090.astype('int8'), [936,]), ), 0)
output = relay.Tuple([bop_5077,call_5089,const_5090,call_5093,var_5094,uop_5099,call_5112,const_5113,])
output2 = relay.Tuple([bop_5077,call_5091,const_5090,call_5095,var_5094,uop_5099,call_5114,const_5113,])
func_5116 = relay.Function([var_5094,], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
mutated_mod['func_5116'] = func_5116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5117 = relay.var("var_5117", dtype = "float32", shape = (15, 1))#candidate|5117|(15, 1)|var|float32
func_5116_call = mutated_mod.get_global_var('func_5116')
call_5118 = func_5116_call(var_5117)
output = call_5118
func_5119 = relay.Function([var_5117], output)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5681 = relay.var("var_5681", dtype = "float32", shape = (5, 1, 6))#candidate|5681|(5, 1, 6)|var|float32
uop_5682 = relay.cosh(var_5681.astype('float32')) # shape=(5, 1, 6)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_5698 = relay.var("var_5698", dtype = "int8", shape = (936,))#candidate|5698|(936,)|var|int8
call_5697 = func_394_call(relay.reshape(var_5698.astype('int8'), [13, 9, 8]), relay.reshape(var_5698.astype('int8'), [13, 9, 8]), )
call_5699 = func_394_call(relay.reshape(var_5698.astype('int8'), [13, 9, 8]), relay.reshape(var_5698.astype('int8'), [13, 9, 8]), )
output = relay.Tuple([uop_5682,call_5697,var_5698,])
output2 = relay.Tuple([uop_5682,call_5699,var_5698,])
func_5717 = relay.Function([var_5681,var_5698,], output)
mod['func_5717'] = func_5717
mod = relay.transform.InferType()(mod)
var_5718 = relay.var("var_5718", dtype = "float32", shape = (5, 1, 6))#candidate|5718|(5, 1, 6)|var|float32
var_5719 = relay.var("var_5719", dtype = "int8", shape = (936,))#candidate|5719|(936,)|var|int8
output = func_5717(var_5718,var_5719,)
func_5720 = relay.Function([var_5718,var_5719,], output)
mutated_mod['func_5720'] = func_5720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6184 = relay.var("var_6184", dtype = "float64", shape = (8, 8, 16))#candidate|6184|(8, 8, 16)|var|float64
uop_6185 = relay.acosh(var_6184.astype('float64')) # shape=(8, 8, 16)
func_4860_call = mod.get_global_var('func_4860')
func_4863_call = mutated_mod.get_global_var('func_4863')
var_6214 = relay.var("var_6214", dtype = "float32", shape = (1680, 1))#candidate|6214|(1680, 1)|var|float32
const_6215 = relay.const([6,-6,5,-4,-5,2,1,6,-9,3,10,-5,9,1,-2,7,-10,10,4,-2,-10,-8,-10,4,1,5,-1,8,-2,5,-1,5,-7,9,-8,10,-7,9,-5,5,10,-7,-2,1,4,-9,8,10,-8,5,-10,-6,-7,2,-7,10,-9,-10,-2,7,7,-4,-2,10,-1,-8,4,-8,10,-5,-7,6,-1,-6,-9,10,-9,-1,-9,10,8,3,-3,-2,-10,-2,9,-2,-6,3,9,9,10,-10,-3,-8,-10,2,1,8,1,8,-8,2,7,7,-1,-8,8,-7,-8,-1,-8,-6,5,10,-4,7,9,7,-5,5,-3,-4,-3,-2,-9,-1,-4,-6,3,-6,-8,-10,-10,-4,9,10,4,-3,-8,10,-5,-2,8,-9,-8,7,-6,3,-3,-3,-8,-4,-1,-1,-1,-4,-2,7,-6,2,-1,-10,-7,5,9,2,-4,-2,-5,-2,4,7,4,-5,-2,6,7,10,-8,1,4,-5,-10,-3,-9,-3,1,-6,-4,5,9,9,7,9,-6,-1,4,1,2,-10,9,2,5,-2,1,7,1,6,-7,1,5,-8,-9,-4,-4,-2,10,-10,-1,6,-4,-4,10,10,4,3,-5,-10,-1,-7,-1,-6,10,7,-2,5,-5,8,-8,-3,4,-4,6,-5,-8,-1,-9,9,-5,-5,9,-5,-1,-10,-3,-3,-10,6,-1,-2,-3,-10,-2,-6,-7,-5,2,-3,-3,2,-7,-3,-2,-2,1,-1,-8,9,-10,-6,5,-3,1,8,10,-10,-4,3,-3,8,10,-10,-2,8,-3,9,6,-5,-10,1,-6,5,5,8,5,-3,7,3,2,1,6,7,2,8,-6,1,9,2,6,-3,-7,-7,-10,4,-2,1,-3,-1,-10,-8,-8,-8,5,-3,1,-3,2,3,-10,6,-9,1,3,8,9,-2,5,5,2,-2,-6,3,4,-10,2,6,2,5,7,1,-3,6,2,9,-1,-9,5,7,-8,4,4,5,-9,-3,6,-4,-6,-7,2,-2,-7,10,-3,-5,-3,-4,1,2,10,6,-9,4,-9,-4,9,3,-9,9,-1,4,5,2,-7,-6,2,-2,-2,-8,1,3,-10,-5,-3,-10,3,10,-3,-2,9,-7,9,3,10,-4,3,-1,4,-1,-4,-1,8,3,-6,-2,-4,-5,2,6,-9,-1,8,7,-9,8,3,8,-3,-1,-7,-3,5,8,5,-7,4,9,1,-5,6,4,5,9,7,8,-6,-7,-10,-6,8,-1,3,-4,6,7,-3,1,4,-9,-1,-5,7,-6,8,3,-7,-8,-4,7,2,-2,-4,4,-5,1,9,1,-1,-4,-10,2,-9,10,-3,-3,-8,1,-10,-3,7,10,-1,3,-9,8,-3,-9,-1,6,-3,-8,-8,6,-3,4,3,7,5,6,8,-5,4,-3,-2,-8,10,9,-6,-5,-4,-10,-2,-2,8,3,2,5,4,3,-7,-3,9,-4,-9,-4,9,-3,-1,-8,-3,-5,6,10,-9,8,-4,-4,4,-5,-8,-7,3,8,5,4,-4,2,10,2,5,-7,10,9,1,9,5,6,8,-3,-7,-10,6,3,-1,9,-4,4,-10,-9,9,10,-4,1,10,4,10,10,-5,4,-9,-2,1,-8,9,10,5,-3,8,-2,7,-8,9,3,-5,10,3,-7,-9,3,-2,9,5,-6,-5,3,-4,9,1,9,-2,-1,2,9,-3,-3,-7,10,-2,7,5,-9,1,2,3,-1,10,-10,-8,-8,-3,-7,3,4,-4,-3,1,5,4,-7,1,-4,7,-5,-4,7,-4,-8,2,2,-3,4,-1,-7,8,-3,-9,10,-2,-3,10,2,4,2,-1,3,-3,7,8,10,7,7,-2,-2,-3,-9,-4,-10,-2,-6,9,7,6,6,10,-10,-3,3,-5,10,-9,-5,-1,-3,5,5,1,-6,8,9,-1,-2,-7,10,9,1,8,-3,1,1,9,2,10,5,3,3,-6,-8,8,-6,-9,-7,5,5,7,-1,-4,6,-10,-9,6,7,-6,4,7,3,9,3,9,7,6,4,-1,-3,1,6,-3,-7,9,3,1,2,-5,3,2,1,8,-7,6,-9,-3,6,9,-5,5,4,5,8,-10,-5,1,-10,3,-7,9,-8,1,8,-7,8,-4,-2,2,-10,-10,-5,-1,9,6,3,-2,-8,4,4,-1,-7,-9,-6,8,-1,9,1,-5,-3,6,4,8,-4,-10,-8,-1,7,-2,8,7,10,9,9,4,5,-10,10,3,-2,2,-3,5,-2,-1,8,-4,-7,4,7,7,-9,-2,-7,-3,-5,1,8,8,-2,4,8,-2,3,10,-3,-1,-4,-1,8,-9,9,-3,-3,-10,-1,-9,-4,-5,-9,6,-9,-6,2,3,-3,4,-2,2,-7,2,-7,-8,-6,-8,7,-8,-5,-9,-4,-6,5,-1,-7,4,-3,4,9,-3,-5,1,8,-8,6,9,-4,-6,-5,7,8,-5,-8], dtype = "int8")#candidate|6215|(936,)|const|int8
call_6213 = relay.TupleGetItem(func_4860_call(relay.reshape(var_6214.astype('float32'), [10, 12, 14]), relay.reshape(const_6215.astype('int8'), [936,]), ), 1)
call_6216 = relay.TupleGetItem(func_4863_call(relay.reshape(var_6214.astype('float32'), [10, 12, 14]), relay.reshape(const_6215.astype('int8'), [936,]), ), 1)
func_4948_call = mod.get_global_var('func_4948')
func_4953_call = mutated_mod.get_global_var('func_4953')
const_6219 = relay.const([6.157858,7.046993,9.289111,4.252681,8.749546,5.983565,-9.677155,6.239048,8.682504,2.593987,1.831439,-7.350599,8.241084,9.693893,6.646555,4.790065,1.963663,8.109836,-4.185066,4.153392,3.698197,-5.982671,8.551577,4.464590,2.745138,4.491419,-8.549586,-1.532549,1.713355,-5.782522,-8.155334,4.439845,-8.211166,-0.701033,6.357246,4.601723,5.134882,-2.394400,6.825800,9.611282,-0.367349,2.056427,-2.133463,6.588729,8.265212,2.028462,0.600036,7.034428,8.326708,1.420796,5.708037,2.046906,-1.542267,5.467470,6.592688,-8.163028,5.602388,-3.470050,0.978374,-8.734546,9.677860,-6.792544,-9.480946,9.491082,-9.388778,9.614383,4.895442,-5.519013,-3.777619,6.587106,-7.623696,-8.905243,7.790320,5.768544,-0.524002,8.860390,0.337364,-2.117470,1.359496,6.254937,-9.608069,-0.690553,2.677254,8.268691,-1.822785,3.186128,-1.028314,5.167665,-3.109926,8.547791,-3.805066,9.650637,-7.005427,5.854415,0.016775,4.543095,5.733197,0.895587,-6.045225,3.958352,7.368650,1.904674,-3.941915,0.128012,-8.684958,8.649139,3.173068,-0.035891,-9.634210,9.784371,2.222555,-2.460981,-9.548298,6.074029,-8.164272,-2.412388,-5.910719,-4.665833,-6.842006,6.475562,-9.367068,3.632501,9.103989,7.013588,2.671191,3.814818,-5.370933,-9.789450,2.326146,7.631707,-1.389823,7.192129,-8.498300,8.115712,5.408613,7.511371,6.268378,6.304001,-2.973021,-1.296726,-2.563121,-5.832036,2.621517,1.866573,4.617098,0.266021,-0.162975,-6.152823,-1.457534,3.930345,-8.269861,3.453211,1.204794,8.132000,0.665716,-9.938626,7.533108,-8.373635,2.854804,-1.038520,1.295325,-8.117787,-8.628331,-0.994444,-2.078033,0.706413,-4.215733,-3.689199,9.969071,4.087674,4.819003,-2.222534,6.357589,-7.141471,7.958868,0.113797,-8.957271,-8.011882,-3.270277,0.224770,6.014530,5.820674,5.611783,3.939104,9.938304,1.262704,-5.505887,-9.465068,1.568604,-5.678779,4.760418,9.920838,2.654347,-7.191602,-5.381523,-5.193650,-0.860461,2.065139,3.259816,0.532163,6.146877,-0.009910,-9.084634,6.540662,0.049574,-4.716213,2.835305,-3.585301,-0.717549,-0.973306,-5.694534,-9.301110,1.549210,-2.025114,-8.245399,8.081227,-0.270056,-9.034630,-4.061040,-4.456136,3.689036,-9.878836,-5.003295,-1.748174,-9.187363,5.385741,4.709940,3.397352,7.475404,-2.334489,9.887663,-2.761729,7.492355,6.792156,-6.255736,6.128374,-6.716420,7.393891,-1.841697,6.573818,-1.368159,5.572277,-7.209346,-6.162609,-8.800321,-1.603044,4.256521,5.030545,5.489486,-0.101468,0.085525,9.925959,-9.840573,-5.163387,-9.992000,6.815470,9.829729,6.537971,0.333647,8.323195,-5.887005,-3.899115,-3.851056,-3.288225,-1.689236,-9.407204,-2.172713,8.130145,-6.706875,3.329628,-5.885882,5.019723,2.253174,0.319188,7.396360,-1.500948,-4.134485,6.271964,-6.991026,-9.347040,-5.867095,-5.221837,4.016969,3.856110,-6.531056,-8.437572,0.260327,-6.566273,-5.684333,-7.527808,-2.147868,2.772386,1.135059,-4.218503], dtype = "float64")#candidate|6219|(294,)|const|float64
call_6218 = relay.TupleGetItem(func_4948_call(relay.reshape(const_6219.astype('float64'), [3, 7, 14]), relay.reshape(const_6219.astype('float64'), [3, 7, 14]), relay.reshape(call_6213.astype('int8'), [936,]), ), 0)
call_6220 = relay.TupleGetItem(func_4953_call(relay.reshape(const_6219.astype('float64'), [3, 7, 14]), relay.reshape(const_6219.astype('float64'), [3, 7, 14]), relay.reshape(call_6213.astype('int8'), [936,]), ), 0)
output = relay.Tuple([uop_6185,call_6213,var_6214,const_6215,call_6218,const_6219,])
output2 = relay.Tuple([uop_6185,call_6216,var_6214,const_6215,call_6220,const_6219,])
func_6222 = relay.Function([var_6184,var_6214,], output)
mod['func_6222'] = func_6222
mod = relay.transform.InferType()(mod)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6222_call = mutated_mod.get_global_var('func_6222')
var_6224 = relay.var("var_6224", dtype = "float64", shape = (8, 8, 16))#candidate|6224|(8, 8, 16)|var|float64
var_6225 = relay.var("var_6225", dtype = "float32", shape = (1680, 1))#candidate|6225|(1680, 1)|var|float32
call_6223 = func_6222_call(var_6224,var_6225,)
output = call_6223
func_6226 = relay.Function([var_6224,var_6225,], output)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6637 = relay.var("var_6637", dtype = "float64", shape = (10, 6, 14))#candidate|6637|(10, 6, 14)|var|float64
uop_6638 = relay.erf(var_6637.astype('float64')) # shape=(10, 6, 14)
output = uop_6638
output2 = uop_6638
func_6641 = relay.Function([var_6637,], output)
mod['func_6641'] = func_6641
mod = relay.transform.InferType()(mod)
var_6642 = relay.var("var_6642", dtype = "float64", shape = (10, 6, 14))#candidate|6642|(10, 6, 14)|var|float64
output = func_6641(var_6642)
func_6643 = relay.Function([var_6642], output)
mutated_mod['func_6643'] = func_6643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6685 = relay.var("var_6685", dtype = "float32", shape = (11, 14, 6))#candidate|6685|(11, 14, 6)|var|float32
uop_6686 = relay.atan(var_6685.astype('float32')) # shape=(11, 14, 6)
output = uop_6686
output2 = uop_6686
func_6692 = relay.Function([var_6685,], output)
mod['func_6692'] = func_6692
mod = relay.transform.InferType()(mod)
mutated_mod['func_6692'] = func_6692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6693 = relay.var("var_6693", dtype = "float32", shape = (11, 14, 6))#candidate|6693|(11, 14, 6)|var|float32
func_6692_call = mutated_mod.get_global_var('func_6692')
call_6694 = func_6692_call(var_6693)
output = call_6694
func_6695 = relay.Function([var_6693], output)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6710 = relay.var("var_6710", dtype = "float32", shape = (5, 12, 14))#candidate|6710|(5, 12, 14)|var|float32
uop_6711 = relay.sinh(var_6710.astype('float32')) # shape=(5, 12, 14)
func_1228_call = mod.get_global_var('func_1228')
func_1231_call = mutated_mod.get_global_var('func_1231')
var_6723 = relay.var("var_6723", dtype = "float32", shape = (240,))#candidate|6723|(240,)|var|float32
call_6722 = func_1228_call(relay.reshape(var_6723.astype('float32'), [1, 15, 16]))
call_6724 = func_1228_call(relay.reshape(var_6723.astype('float32'), [1, 15, 16]))
uop_6742 = relay.tan(uop_6711.astype('float64')) # shape=(5, 12, 14)
uop_6749 = relay.rsqrt(uop_6711.astype('float32')) # shape=(5, 12, 14)
output = relay.Tuple([call_6722,var_6723,uop_6742,uop_6749,])
output2 = relay.Tuple([call_6724,var_6723,uop_6742,uop_6749,])
func_6752 = relay.Function([var_6710,var_6723,], output)
mod['func_6752'] = func_6752
mod = relay.transform.InferType()(mod)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6752_call = mutated_mod.get_global_var('func_6752')
var_6754 = relay.var("var_6754", dtype = "float32", shape = (5, 12, 14))#candidate|6754|(5, 12, 14)|var|float32
var_6755 = relay.var("var_6755", dtype = "float32", shape = (240,))#candidate|6755|(240,)|var|float32
call_6753 = func_6752_call(var_6754,var_6755,)
output = call_6753
func_6756 = relay.Function([var_6754,var_6755,], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6834 = relay.var("var_6834", dtype = "float32", shape = (15, 15, 16))#candidate|6834|(15, 15, 16)|var|float32
uop_6835 = relay.sin(var_6834.astype('float32')) # shape=(15, 15, 16)
bop_6839 = relay.divide(uop_6835.astype('float32'), relay.reshape(var_6834.astype('float32'), relay.shape_of(uop_6835))) # shape=(15, 15, 16)
uop_6851 = relay.log10(var_6834.astype('float64')) # shape=(15, 15, 16)
func_2003_call = mod.get_global_var('func_2003')
func_2008_call = mutated_mod.get_global_var('func_2008')
var_6854 = relay.var("var_6854", dtype = "int16", shape = ())#candidate|6854|()|var|int16
const_6855 = relay.const([10,5,-7,4,8,-3,-2,7,-7,-3,3,1,7,-2,10,8,-7,-1,10,6,-5,-7,4,-4,-8,-3,5,6,5,-6,-1,-5,9,-5,-1,9,9,-2,1,-3,3,9,-2,-9,2,2,-2,-4,-4,10,-9,3,6,-9,3,7,10,3,-2,8,8,9,-8,-10,1,8,-2,6,-8,6,-8,9], dtype = "int16")#candidate|6855|(72,)|const|int16
var_6856 = relay.var("var_6856", dtype = "float32", shape = (5, 3))#candidate|6856|(5, 3)|var|float32
call_6853 = relay.TupleGetItem(func_2003_call(relay.reshape(var_6854.astype('int16'), []), relay.reshape(const_6855.astype('int16'), [3, 6, 4]), relay.reshape(var_6856.astype('float32'), [15,]), ), 4)
call_6857 = relay.TupleGetItem(func_2008_call(relay.reshape(var_6854.astype('int16'), []), relay.reshape(const_6855.astype('int16'), [3, 6, 4]), relay.reshape(var_6856.astype('float32'), [15,]), ), 4)
bop_6901 = relay.bitwise_or(uop_6835.astype('int16'), relay.reshape(uop_6851.astype('int16'), relay.shape_of(uop_6835))) # shape=(15, 15, 16)
func_6641_call = mod.get_global_var('func_6641')
func_6643_call = mutated_mod.get_global_var('func_6643')
const_6905 = relay.const([9.158813,8.290015,-5.706300,-5.003172,-4.999087,8.773727,0.553917,-1.887620,3.510178,6.725788,8.988462,5.240963,0.045321,-3.030395,7.030525,-7.282513,2.659828,4.609399,7.531283,3.444428,0.971360,0.654715,8.468857,-1.237394,5.525853,3.759226,6.826900,6.408554,9.887524,4.844274,2.342423,3.847360,5.105829,-4.722649,-7.172532,-4.402801,-4.064080,-0.557451,-8.008755,3.549057,0.149141,-4.541513,6.233069,7.846161,6.817526,-2.813081,-0.045006,1.575697,-8.295634,-2.206173,4.025833,1.579479,-3.432561,4.418131,-0.085222,1.808690,-8.075922,-2.126720,5.458111,-2.179986,-2.798132,6.840467,-0.229934,0.522447,-4.672147,6.565471,-7.508130,-1.822768,-4.319346,7.184826,-8.526869,-6.903838,-4.247743,-4.489369,-6.306535,-2.674651,3.422644,-5.181127,1.647481,9.227942,4.460285,0.614575,8.719107,0.054827,-6.607665,-9.674188,7.513547,9.282485,-0.302970,5.844401,-7.939697,5.991669,9.418500,3.930509,6.413775,-0.868864,1.654096,3.876527,6.897998,-8.087947,3.037023,-3.821436,-1.122216,1.188820,-9.968017,2.770109,-7.458335,-3.551934,-4.478227,-7.103284,-0.826643,4.391721,1.185180,-3.011245,3.045832,-9.279885,-7.538825,0.427800,-7.330085,0.764247,1.557880,4.983474,2.825930,1.998178,6.553194,-7.017319,-6.333580,3.553617,-5.584867,8.518857,-5.423685,-2.990568,-8.453629,1.301423,-3.382592,0.758919,-1.889096,-7.490021,1.635041,5.358462,6.553963,-0.194721,2.148013,0.902344,-4.491402,3.426437,-0.735290,4.254527,1.284572,9.094972,2.718427,3.698079,2.893376,2.014364,1.761352,5.748257,-5.627340,6.248133,5.474031,5.550358,0.377004,2.586174,2.062158,-2.925770,5.702175,-0.995275,0.628905,-5.380427,1.091833,3.361474,2.931197,-7.337765,-6.652270,2.095663,-6.246305,8.315412,-8.977004,-0.050119,5.787518,-0.242617,-2.444376,7.299983,6.234973,4.727841,-0.812824,8.972329,1.004629,9.001134,5.706183,-4.869738,-8.426744,1.283466,-8.068984,-4.522197,3.920613,-8.740905,5.714139,5.507739,-3.298706,-7.246403,6.838907,-7.857970,6.602510,-0.248978,-8.977667,-9.307650,1.173651,5.770883,8.984348,8.149256,8.648447,5.081662,-1.468269,4.822147,6.799321,6.810188,1.815971,6.764345,8.282629,-8.359758,-8.806845,-7.765454,-0.168020,3.844970,7.481154,-3.289242,6.330270,-2.101710,-2.910194,-6.984535,3.177177,-6.149133,6.581397,9.066194,-1.029901,-2.930176,-8.798762,-6.691829,0.460050,8.975752,-5.931967,1.446197,3.768735,9.071477,0.378345,4.673383,5.788387,6.240258,8.118978,-2.816158,-9.731239,0.076706,8.112102,-1.502818,1.104549,-8.773524,5.992434,7.209153,2.504366,9.766537,-5.561921,2.465149,-4.225351,-3.173486,9.613069,5.590252,-4.090763,-1.111410,-4.142233,-9.493813,-7.698733,-6.140948,-1.189013,-8.015881,-6.411315,-5.180160,-4.511551,5.793632,-0.474353,6.545253,-9.596578,-6.827960,9.927975,-3.916604,3.668834,4.395804,6.358016,7.001474,-7.987467,4.155545,0.097352,7.023872,4.931474,0.393028,3.689234,3.640932,0.416203,-3.216942,3.651925,7.057862,4.991271,-9.026287,-1.676438,-9.590720,-6.048118,6.242366,9.842620,2.569488,2.014263,-6.986917,7.975538,-4.443061,7.371504,7.760394,-1.862226,3.301900,-6.800401,-7.048746,-2.513255,3.816985,8.412743,-4.791124,0.475634,6.967720,-1.733275,8.382044,-7.044645,7.100341,-3.161179,-8.834264,3.944624,-4.579044,7.594286,-5.675658,7.335952,-1.098806,-6.970190,8.059717,9.035685,9.645005,4.384813,7.734328,-3.468617,8.545614,-1.403146,3.097628,-2.597769,5.273232,1.050212,0.114095,5.497253,6.872525,-5.573539,0.489208,1.158681,-9.576767,-4.385815,-5.534517,-3.728910,6.236113,0.748972,-8.807261,0.754749,-2.496288,0.885940,3.658275,2.341756,-8.043621,-0.909980,6.115735,-3.431667,-4.061347,-3.839022,-0.471443,-4.808616,8.362258,-8.811836,0.414534,3.562751,-4.255350,3.015101,3.596159,-5.791198,0.436294,9.286554,8.293680,-0.636245,-7.731704,-3.432820,4.556035,9.876641,9.346261,-1.283463,9.182109,-0.599190,-7.346656,8.432991,-0.416754,2.561642,-2.530593,7.860258,8.071557,1.765731,-1.373265,-5.412656,2.496977,-1.108617,3.889874,0.221624,-8.438753,4.665046,-5.037771,-0.683151,-4.989982,-4.219242,-8.424577,-3.462510,6.966498,-4.356240,-5.569263,3.555514,-2.770188,-9.274737,-8.668242,-8.934385,1.738002,2.135238,-9.916989,-2.636495,8.512556,-6.490814,-4.904453,4.422806,-8.190443,9.427675,-7.614113,-4.457228,-5.501324,8.341570,9.472586,7.148166,5.130864,-7.410925,-3.818272,-3.787218,4.110919,-0.938773,-1.965672,5.085402,0.124637,3.680648,4.403467,-5.544061,-5.900364,-0.538167,6.729159,-3.946831,-1.289506,-7.211991,9.095376,-6.136061,1.663426,9.325608,3.122598,5.690781,4.918306,-2.267725,-7.228197,8.008002,-7.111448,-5.800398,5.721483,-0.839320,9.682731,3.571856,-7.236170,3.838789,-4.667707,3.542117,2.718838,-5.123881,4.557796,8.896183,5.784963,-1.524822,-9.526706,4.717796,3.318988,4.477109,-1.644177,9.950105,0.173613,6.463945,7.685928,7.978327,8.997484,-3.870856,-2.707695,-3.434368,-8.804220,-7.060680,-3.008542,-4.036341,4.168892,-9.436691,-8.412816,-5.386423,3.806351,1.343782,-4.503843,3.141247,-3.747477,-9.742947,-6.622137,-2.946679,2.927754,4.135876,-4.496133,0.794859,-5.221945,-6.148837,-2.221620,-1.655100,-4.866743,-2.873143,-5.088166,-5.385959,7.636623,7.306664,4.986621,-2.917595,-8.798680,-9.074390,-5.083890,0.833971,-8.919923,8.538325,-9.891989,-3.001034,-7.382206,-3.505716,-9.308176,7.884628,9.406500,2.398087,8.678828,-1.815385,-1.021458,-1.996625,-5.413341,1.116255,6.808903,6.959457,-8.306511,-4.614803,5.988467,1.014250,9.486878,0.300977,3.885214,-9.729531,9.527029,5.743271,2.316013,-4.823562,8.217368,-7.025418,-5.878428,-8.184941,6.784388,5.852418,7.577494,6.082866,-3.884170,-8.272539,7.975238,-8.376503,6.185002,-0.326795,4.978889,-2.274986,-5.319598,-2.494380,0.170272,8.526572,3.769059,3.247665,1.059173,-4.886680,8.029482,-6.018798,0.455868,7.920993,-2.145116,1.061382,-5.272541,-1.728008,7.202397,-5.360366,3.638139,6.118540,-7.991244,-0.215886,3.849432,0.978505,8.203241,-9.674819,-7.385224,2.567993,0.719298,6.970367,-0.209811,7.082804,-2.690754,-3.322763,7.235283,-6.863168,-5.051468,-1.960387,3.599603,0.459018,9.789483,4.775209,4.044508,-1.229170,-4.509552,3.418874,6.824419,-5.411121,-2.192033,1.073085,-4.131641,3.009427,-2.331421,9.582345,-0.028752,-1.324071,-3.039267,7.957261,-6.226523,-8.937208,5.320135,-4.881478,-9.157218,-5.955643,5.450545,2.935819,-2.710634,6.993184,-2.117988,-0.860581,0.036184,-2.041325,1.376522,5.154548,7.161407,-3.556110,2.323677,1.772259,5.980124,-8.301813,6.469449,-1.637145,4.074701,3.490499,-1.768004,-3.821060,-6.593081,3.947496,-1.494542,-2.704142,8.867138,4.233403,8.900039,-2.812922,-0.316247,7.327457,-5.763904,2.765312,3.681930,1.241244,5.248833,5.461852,-7.678237,6.503677,-5.165313,-1.579571,-1.761721,-7.995847,-7.994898,-2.968056,-8.770854,8.262769,1.726573,-0.450993,1.001661,2.923577,6.425398,-4.134437,0.384431,-3.993598,4.842588,9.155649,-9.258038,2.170426,4.645843,-1.362697,-2.934792,-2.631275,-5.159520,-9.781081,5.327173,-0.006701,4.865138,-9.308579,-6.844040,-9.476409,-0.573695,1.109783,4.155195,5.828847,-6.106788,-5.528245,7.940070,4.403327,9.803048,8.001818,4.059147,3.868388,6.948763,5.942998,6.973933,4.111993,-9.752109,-5.876357,-6.281665,-9.375545,0.852693,9.301802,6.153214,9.956534,-1.957611,9.592877,-1.172440,-9.736599,1.113844,-7.425502,0.895566,-4.450045,-3.284549,-2.464274,-0.483272,-4.250781,7.045219,7.085574,-4.325432,-9.066650,9.640949,-5.368187,-8.460533,0.460167,-9.836312,-8.579941,-0.533004,0.328695,-5.734511,1.581761,-2.968397,-6.355872,3.439523,0.686878,-8.069666,-8.565117,3.141533,-0.796885,-7.676651,5.155804,4.468542,-7.515180,-6.011849,-2.367905,7.689615,-2.341473,8.027551,-7.320208,-8.568552,-7.944277,3.154189,-2.677599,0.524160,-6.196491,8.552347,0.854279,-2.552803,-3.976572,3.180476,4.024635,-5.347788,1.746759,-3.973459,-1.787647,4.245406,-0.137125,2.617156,3.813094,7.309840,-6.241058,-1.836192,2.256612,-7.070575,7.894065,-5.470592,-1.948341,-7.104978,1.154935,1.148997,0.690128,-2.191111,1.466036,2.945606,5.110974,8.475002,0.419764,6.164291,-5.858389,-3.404904,3.192555,-6.937395,7.651552,4.590164,7.352329,-6.440864,6.789758,-0.326698,-2.305060,-3.011346,-8.404836,-0.160043,0.094224,-4.641914], dtype = "float64")#candidate|6905|(840,)|const|float64
call_6904 = func_6641_call(relay.reshape(const_6905.astype('float64'), [10, 6, 14]))
call_6906 = func_6641_call(relay.reshape(const_6905.astype('float64'), [10, 6, 14]))
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_6914 = relay.var("var_6914", dtype = "int8", shape = (2, 468))#candidate|6914|(2, 468)|var|int8
call_6913 = func_394_call(relay.reshape(var_6914.astype('int8'), [13, 9, 8]), relay.reshape(var_6914.astype('int8'), [13, 9, 8]), )
call_6915 = func_394_call(relay.reshape(var_6914.astype('int8'), [13, 9, 8]), relay.reshape(var_6914.astype('int8'), [13, 9, 8]), )
uop_6920 = relay.log(uop_6835.astype('float64')) # shape=(15, 15, 16)
func_4860_call = mod.get_global_var('func_4860')
func_4863_call = mutated_mod.get_global_var('func_4863')
var_6938 = relay.var("var_6938", dtype = "float32", shape = (1680,))#candidate|6938|(1680,)|var|float32
call_6937 = relay.TupleGetItem(func_4860_call(relay.reshape(var_6938.astype('float32'), [10, 12, 14]), relay.reshape(var_6914.astype('int8'), [936,]), ), 2)
call_6939 = relay.TupleGetItem(func_4863_call(relay.reshape(var_6938.astype('float32'), [10, 12, 14]), relay.reshape(var_6914.astype('int8'), [936,]), ), 2)
output = relay.Tuple([bop_6839,call_6853,var_6854,const_6855,var_6856,bop_6901,call_6904,const_6905,call_6913,var_6914,uop_6920,call_6937,var_6938,])
output2 = relay.Tuple([bop_6839,call_6857,var_6854,const_6855,var_6856,bop_6901,call_6906,const_6905,call_6915,var_6914,uop_6920,call_6939,var_6938,])
func_6946 = relay.Function([var_6834,var_6854,var_6856,var_6914,var_6938,], output)
mod['func_6946'] = func_6946
mod = relay.transform.InferType()(mod)
mutated_mod['func_6946'] = func_6946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6946_call = mutated_mod.get_global_var('func_6946')
var_6948 = relay.var("var_6948", dtype = "float32", shape = (15, 15, 16))#candidate|6948|(15, 15, 16)|var|float32
var_6949 = relay.var("var_6949", dtype = "int16", shape = ())#candidate|6949|()|var|int16
var_6950 = relay.var("var_6950", dtype = "float32", shape = (5, 3))#candidate|6950|(5, 3)|var|float32
var_6951 = relay.var("var_6951", dtype = "int8", shape = (2, 468))#candidate|6951|(2, 468)|var|int8
var_6952 = relay.var("var_6952", dtype = "float32", shape = (1680,))#candidate|6952|(1680,)|var|float32
call_6947 = func_6946_call(var_6948,var_6949,var_6950,var_6951,var_6952,)
output = call_6947
func_6953 = relay.Function([var_6948,var_6949,var_6950,var_6951,var_6952,], output)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7013 = relay.var("var_7013", dtype = "uint64", shape = ())#candidate|7013|()|var|uint64
var_7014 = relay.var("var_7014", dtype = "uint64", shape = (14, 15, 2))#candidate|7014|(14, 15, 2)|var|uint64
bop_7015 = relay.right_shift(var_7013.astype('uint64'), var_7014.astype('uint64')) # shape=(14, 15, 2)
output = relay.Tuple([bop_7015,])
output2 = relay.Tuple([bop_7015,])
func_7026 = relay.Function([var_7013,var_7014,], output)
mod['func_7026'] = func_7026
mod = relay.transform.InferType()(mod)
var_7027 = relay.var("var_7027", dtype = "uint64", shape = ())#candidate|7027|()|var|uint64
var_7028 = relay.var("var_7028", dtype = "uint64", shape = (14, 15, 2))#candidate|7028|(14, 15, 2)|var|uint64
output = func_7026(var_7027,var_7028,)
func_7029 = relay.Function([var_7027,var_7028,], output)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7064 = relay.var("var_7064", dtype = "float32", shape = (5, 6, 8))#candidate|7064|(5, 6, 8)|var|float32
uop_7065 = relay.log10(var_7064.astype('float32')) # shape=(5, 6, 8)
func_1228_call = mod.get_global_var('func_1228')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_7069 = func_1228_call(relay.reshape(var_7064.astype('float32'), [1, 15, 16]))
call_7070 = func_1228_call(relay.reshape(var_7064.astype('float32'), [1, 15, 16]))
uop_7071 = relay.asin(uop_7065.astype('float32')) # shape=(5, 6, 8)
output = relay.Tuple([call_7069,uop_7071,])
output2 = relay.Tuple([call_7070,uop_7071,])
func_7074 = relay.Function([var_7064,], output)
mod['func_7074'] = func_7074
mod = relay.transform.InferType()(mod)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7075 = relay.var("var_7075", dtype = "float32", shape = (5, 6, 8))#candidate|7075|(5, 6, 8)|var|float32
func_7074_call = mutated_mod.get_global_var('func_7074')
call_7076 = func_7074_call(var_7075)
output = call_7076
func_7077 = relay.Function([var_7075], output)
mutated_mod['func_7077'] = func_7077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7310 = relay.var("var_7310", dtype = "float32", shape = (16, 14, 11))#candidate|7310|(16, 14, 11)|var|float32
uop_7311 = relay.log2(var_7310.astype('float32')) # shape=(16, 14, 11)
bop_7344 = relay.mod(uop_7311.astype('float32'), relay.reshape(var_7310.astype('float32'), relay.shape_of(uop_7311))) # shape=(16, 14, 11)
bop_7357 = relay.maximum(bop_7344.astype('uint32'), relay.reshape(var_7310.astype('uint32'), relay.shape_of(bop_7344))) # shape=(16, 14, 11)
uop_7360 = relay.sigmoid(var_7310.astype('float64')) # shape=(16, 14, 11)
func_5717_call = mod.get_global_var('func_5717')
func_5720_call = mutated_mod.get_global_var('func_5720')
var_7366 = relay.var("var_7366", dtype = "float32", shape = (30,))#candidate|7366|(30,)|var|float32
const_7367 = relay.const([-3,9,2,10,8,-3,6,1,10,-6,5,-1,-9,-6,-3,-10,-9,-10,8,9,9,10,5,-5,-3,9,-6,-6,9,4,4,10,2,2,-2,-7,-4,-6,-8,-7,-3,-2,9,6,1,1,5,-9,-1,-6,-2,4,9,9,3,10,-10,-5,-2,8,4,-1,1,3,-10,7,-1,10,-2,-7,2,-3,2,3,2,9,1,2,-7,5,5,9,-4,-5,-9,3,2,6,-5,-7,-10,-10,4,4,10,-1,3,2,1,4,-2,1,-3,9,6,3,-10,-9,-7,-10,-2,4,10,-3,-3,-1,3,2,-7,-2,-5,-10,-9,3,-10,3,-3,9,2,4,-8,2,-7,5,-5,8,3,-7,5,-8,-3,8,7,9,9,5,-8,-7,3,-10,1,8,-6,-6,-7,7,-5,-7,-2,4,-10,7,9,-5,-7,1,-3,-4,6,-1,4,2,-2,-4,5,-6,-8,-7,8,-9,8,-5,-1,-1,6,-7,-9,2,9,-6,3,-3,4,9,-1,8,-10,-2,1,5,5,-10,4,4,5,10,-1,-2,-5,8,9,7,1,10,1,1,-9,10,10,-7,-3,4,1,8,7,2,-6,-7,8,-8,3,5,-10,-3,9,5,8,4,7,5,-10,4,-6,2,10,-3,1,5,4,-2,-10,5,-8,7,-2,3,-9,-9,-8,1,5,1,3,-7,-5,-2,-6,1,7,-1,-10,5,3,-4,-9,1,10,-9,-9,2,5,-9,2,-7,9,9,4,9,-10,-10,-10,2,-2,-5,-7,-5,2,5,5,4,-4,3,9,-5,5,-9,-6,-4,-3,-9,5,-5,7,2,4,4,-1,5,-9,2,-8,10,3,2,3,6,-5,-9,-1,-2,9,2,-5,3,-7,-9,-7,9,-2,-7,2,7,4,-10,6,-1,-10,-6,-10,-10,-5,4,-5,-1,-5,4,-4,7,-6,5,8,9,-9,-4,4,-9,-2,-1,7,-6,2,2,-10,4,-3,-7,4,-9,-1,-5,-7,-5,7,-8,10,9,-1,-8,9,4,-2,4,-7,1,8,-2,-10,5,-5,-10,-4,-6,9,7,-9,-3,-2,-7,2,6,3,8,-6,-1,-6,5,1,9,9,-9,7,-7,10,9,-1,-3,-4,10,-4,5,1,1,3,-1,4,-1,3,-1,2,-5,4,9,-1,-1,1,6,-6,-3,7,-1,5,3,10,1,3,-4,7,6,-6,4,1,-9,-7,5,-8,8,-8,1,4,-9,1,-3,-1,-6,-5,4,10,-4,6,2,8,7,-2,2,-2,4,-6,-2,7,-2,8,-10,-9,-7,6,7,1,9,-2,-1,4,8,4,5,-7,6,4,6,-2,8,-4,1,-1,-9,1,-9,-5,5,8,3,-8,5,-4,-5,3,2,10,-3,4,-4,-1,-10,-2,8,-4,7,9,-5,-2,7,6,3,5,-5,-7,5,-3,-6,1,-7,6,-8,8,8,-6,5,6,-5,3,3,-10,10,5,-10,-2,1,1,-5,-3,-8,7,2,-3,-8,9,-8,10,-4,-4,9,-1,3,10,-2,-10,3,-6,-3,-1,7,10,1,-3,-5,7,-2,4,10,-5,8,-5,-3,5,-1,-6,-6,-4,-6,-2,-4,5,-7,3,-3,-2,-4,-2,-9,2,3,10,4,-8,3,-1,9,2,7,7,-2,2,7,2,3,8,1,7,2,-8,-5,1,-7,2,-6,5,-10,-5,-3,3,-2,1,-8,1,-4,-2,-7,3,-6,9,3,-4,-1,10,-8,9,3,-5,10,1,-6,3,8,7,-10,-7,-10,-6,2,6,-8,-1,-7,-3,4,-1,9,-4,-9,-2,-7,1,-10,10,-4,3,3,4,2,-9,3,7,-3,10,3,-8,-1,-10,8,4,-8,4,8,-1,7,-7,9,4,-8,-1,-6,-3,-2,9,-5,-1,-7,6,5,8,-7,-4,-2,8,1,-2,2,6,-10,-3,-6,-10,1,2,3,-10,6,9,-10,-9,10,-10,5,-6,10,10,6,-1,-3,-5,-5,-7,6,-1,6,-1,-9,9,-6,-1,-4,4,-2,-7,10,-1,6,7,7,2,8,-8,-4,-3,1,9,-6,5,8,2,5,-4,-5,-5,-9,-4,10,-5,8,-5,3,-4,6,8,-3,-3,-8,-1,8,-3,-5,-5,8,9,8,-5,-1,2,8,1,-4,4,-3,-3,3,9,3,-4,2,7,1,-2,10,-8,-6,2,5,-10,-10,-1,-8,-10,-4,2,-10,-5,10,3,-1,-8,2,-7,-3,7,-1,-8,-9,-10,5,-9,10,5,-3,-9,9,-3,7,-10,-8,-6,7,8,2,-9,9,-1,-5,-10,-5,7,4,7,-2,4,5,-1,-1,8,-6,-10,8,5,-8,-4,-1,8,-2,9,-3,-6,-2,-3,-5,-6,-10,5,8,3,-4,-10,9,4,-5,5,-7,-8,-7,2,2,2,-6,1,-8,9,-3,-9,-9,4,-8,-5,10,-6,6,9,-7,1,-10], dtype = "int8")#candidate|7367|(936,)|const|int8
call_7365 = relay.TupleGetItem(func_5717_call(relay.reshape(var_7366.astype('float32'), [5, 1, 6]), relay.reshape(const_7367.astype('int8'), [936,]), ), 1)
call_7368 = relay.TupleGetItem(func_5720_call(relay.reshape(var_7366.astype('float32'), [5, 1, 6]), relay.reshape(const_7367.astype('int8'), [936,]), ), 1)
func_6222_call = mod.get_global_var('func_6222')
func_6226_call = mutated_mod.get_global_var('func_6226')
var_7377 = relay.var("var_7377", dtype = "float64", shape = (1024,))#candidate|7377|(1024,)|var|float64
var_7378 = relay.var("var_7378", dtype = "float32", shape = (1680,))#candidate|7378|(1680,)|var|float32
call_7376 = relay.TupleGetItem(func_6222_call(relay.reshape(var_7377.astype('float64'), [8, 8, 16]), relay.reshape(var_7378.astype('float32'), [1680, 1]), ), 2)
call_7379 = relay.TupleGetItem(func_6226_call(relay.reshape(var_7377.astype('float64'), [8, 8, 16]), relay.reshape(var_7378.astype('float32'), [1680, 1]), ), 2)
func_6946_call = mod.get_global_var('func_6946')
func_6953_call = mutated_mod.get_global_var('func_6953')
var_7389 = relay.var("var_7389", dtype = "float32", shape = (3600,))#candidate|7389|(3600,)|var|float32
const_7390 = relay.const(-1, dtype = "int16")#candidate|7390|()|const|int16
var_7391 = relay.var("var_7391", dtype = "float32", shape = (15, 1))#candidate|7391|(15, 1)|var|float32
call_7388 = relay.TupleGetItem(func_6946_call(relay.reshape(var_7389.astype('float32'), [15, 15, 16]), relay.reshape(const_7390.astype('int16'), []), relay.reshape(var_7391.astype('float32'), [5, 3]), relay.reshape(call_7365.astype('int8'), [2, 468]), relay.reshape(var_7378.astype('float32'), [1680,]), ), 12)
call_7392 = relay.TupleGetItem(func_6953_call(relay.reshape(var_7389.astype('float32'), [15, 15, 16]), relay.reshape(const_7390.astype('int16'), []), relay.reshape(var_7391.astype('float32'), [5, 3]), relay.reshape(call_7365.astype('int8'), [2, 468]), relay.reshape(var_7378.astype('float32'), [1680,]), ), 12)
bop_7395 = relay.greater(bop_7344.astype('bool'), relay.reshape(uop_7360.astype('bool'), relay.shape_of(bop_7344))) # shape=(16, 14, 11)
output = relay.Tuple([bop_7357,call_7365,var_7366,const_7367,call_7376,var_7377,var_7378,call_7388,var_7389,const_7390,var_7391,bop_7395,])
output2 = relay.Tuple([bop_7357,call_7368,var_7366,const_7367,call_7379,var_7377,var_7378,call_7392,var_7389,const_7390,var_7391,bop_7395,])
func_7405 = relay.Function([var_7310,var_7366,var_7377,var_7378,var_7389,var_7391,], output)
mod['func_7405'] = func_7405
mod = relay.transform.InferType()(mod)
var_7406 = relay.var("var_7406", dtype = "float32", shape = (16, 14, 11))#candidate|7406|(16, 14, 11)|var|float32
var_7407 = relay.var("var_7407", dtype = "float32", shape = (30,))#candidate|7407|(30,)|var|float32
var_7408 = relay.var("var_7408", dtype = "float64", shape = (1024,))#candidate|7408|(1024,)|var|float64
var_7409 = relay.var("var_7409", dtype = "float32", shape = (1680,))#candidate|7409|(1680,)|var|float32
var_7410 = relay.var("var_7410", dtype = "float32", shape = (3600,))#candidate|7410|(3600,)|var|float32
var_7411 = relay.var("var_7411", dtype = "float32", shape = (15, 1))#candidate|7411|(15, 1)|var|float32
output = func_7405(var_7406,var_7407,var_7408,var_7409,var_7410,var_7411,)
func_7412 = relay.Function([var_7406,var_7407,var_7408,var_7409,var_7410,var_7411,], output)
mutated_mod['func_7412'] = func_7412
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7934 = relay.const([[[1,-8,-4,-3,-5,2,-6,-2,5],[3,3,8,-6,-6,-10,5,-8,2],[10,-5,-8,10,5,-7,1,6,4],[1,-4,-2,-7,4,2,9,5,-8],[3,7,9,10,3,-8,-1,6,-6],[-10,5,-10,1,-10,5,9,5,8],[9,-6,4,-9,2,10,6,-3,-7]]], dtype = "int8")#candidate|7934|(1, 7, 9)|const|int8
var_7935 = relay.var("var_7935", dtype = "int8", shape = (16, 7, 9))#candidate|7935|(16, 7, 9)|var|int8
bop_7936 = relay.less_equal(const_7934.astype('bool'), var_7935.astype('bool')) # shape=(16, 7, 9)
var_7951 = relay.var("var_7951", dtype = "bool", shape = (16, 7, 9))#candidate|7951|(16, 7, 9)|var|bool
bop_7952 = relay.power(bop_7936.astype('float64'), relay.reshape(var_7951.astype('float64'), relay.shape_of(bop_7936))) # shape=(16, 7, 9)
output = relay.Tuple([bop_7952,])
output2 = relay.Tuple([bop_7952,])
func_7959 = relay.Function([var_7935,var_7951,], output)
mod['func_7959'] = func_7959
mod = relay.transform.InferType()(mod)
var_7960 = relay.var("var_7960", dtype = "int8", shape = (16, 7, 9))#candidate|7960|(16, 7, 9)|var|int8
var_7961 = relay.var("var_7961", dtype = "bool", shape = (16, 7, 9))#candidate|7961|(16, 7, 9)|var|bool
output = func_7959(var_7960,var_7961,)
func_7962 = relay.Function([var_7960,var_7961,], output)
mutated_mod['func_7962'] = func_7962
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8007 = relay.const([[[-5,-5,7],[3,1,2],[-9,9,4],[2,-5,9]],[[-8,-4,7],[4,-4,-6],[-9,7,-6],[5,-3,1]],[[4,7,10],[-3,-2,-7],[-6,1,-1],[3,6,2]],[[-2,9,-3],[5,4,9],[10,6,-10],[-1,3,-8]],[[-8,8,2],[-8,-9,10],[-5,-1,10],[7,-3,2]],[[-4,-10,6],[3,9,-10],[3,5,-2],[8,-3,10]],[[-1,1,-8],[5,-5,-10],[3,5,-7],[2,2,4]],[[6,3,2],[-1,10,7],[7,9,7],[5,5,3]]], dtype = "uint64")#candidate|8007|(8, 4, 3)|const|uint64
var_8008 = relay.var("var_8008", dtype = "uint64", shape = (8, 4, 3))#candidate|8008|(8, 4, 3)|var|uint64
bop_8009 = relay.right_shift(const_8007.astype('uint64'), relay.reshape(var_8008.astype('uint64'), relay.shape_of(const_8007))) # shape=(8, 4, 3)
func_4948_call = mod.get_global_var('func_4948')
func_4953_call = mutated_mod.get_global_var('func_4953')
var_8021 = relay.var("var_8021", dtype = "float64", shape = (7, 42))#candidate|8021|(7, 42)|var|float64
const_8022 = relay.const([-8,1,-1,6,9,-5,1,-5,-3,-4,-2,-5,-5,-1,7,-10,6,4,6,-1,4,-5,5,1,-8,4,-7,-1,7,7,4,1,-1,-5,5,-9,3,3,3,-5,-7,2,-7,-8,7,-8,-5,2,6,-2,-5,-9,6,-8,5,1,-4,8,6,-6,1,5,-5,-3,-4,1,7,-2,3,3,5,2,5,-1,-5,-5,2,-4,6,-9,2,2,1,6,5,-4,1,10,-5,10,-7,-8,-4,-8,-2,3,-7,5,10,-2,1,5,-1,10,5,7,5,-3,-8,1,7,3,-10,2,2,-7,9,4,9,5,4,-8,-5,-9,-3,4,4,-4,8,8,-7,10,9,5,10,1,-1,-2,-1,1,1,4,3,-2,3,10,5,7,7,-1,1,10,3,8,5,10,7,3,-3,2,7,5,5,7,3,9,-9,5,3,8,7,5,-3,3,-5,1,8,-5,7,4,-9,-5,2,-8,5,4,-3,5,9,-1,2,8,9,2,-7,-5,7,-3,-2,-5,-9,9,10,-10,-2,5,7,4,9,2,-10,2,-7,-10,10,-5,6,2,10,7,7,7,-5,7,-9,-2,6,-8,-1,-3,6,9,-6,10,-7,9,8,7,1,9,-3,-8,-7,5,7,-8,-7,-4,1,8,-10,-1,7,2,-2,-5,-2,-7,1,6,7,10,-2,-7,-8,-1,6,-7,-10,10,-9,-8,-9,-1,-6,-6,-2,6,-3,-7,10,9,9,-8,2,2,4,-4,4,1,4,-2,-6,-2,-3,-9,-8,10,4,-8,-7,-10,10,-2,-1,4,-2,2,7,8,3,-5,-8,8,-3,8,5,-9,-2,-9,5,8,2,-7,4,-8,-5,-7,6,-2,-4,-8,-8,5,-9,-5,-10,2,-3,-8,6,-5,7,-1,9,-3,-6,3,-8,-6,-5,-1,-1,4,2,2,-9,9,9,10,-5,-5,4,5,-8,-8,1,5,-2,8,2,4,-9,7,2,7,2,10,-2,9,7,3,7,-2,1,-5,-1,4,1,-7,-3,-4,-10,1,1,-2,-7,10,4,-5,3,-8,10,-4,7,5,10,5,6,-2,3,-7,10,6,-9,-9,-2,9,-2,4,6,9,9,-8,9,-3,-3,-5,-10,-6,-2,3,3,6,5,-5,9,9,-10,-4,6,-5,8,1,-9,-6,2,-6,9,10,-2,-5,1,-1,-10,1,-2,4,-6,-7,1,-7,5,8,5,-8,-3,10,-10,6,-5,5,-5,7,-3,8,10,-7,-9,8,2,-3,-10,10,3,9,5,3,-4,-3,5,-3,7,7,-6,1,1,-3,-8,-3,1,7,8,7,-2,-3,4,-1,7,-8,-3,10,-5,-6,-8,-4,-1,-6,-4,-2,-7,-3,-10,-9,-2,-9,8,-10,-4,7,-5,2,3,6,-3,4,-3,1,1,2,9,-8,-3,-1,3,9,-9,6,1,1,-10,3,4,-9,-4,-6,-6,-9,3,6,-7,5,-7,2,-3,-3,-10,6,-2,6,-8,10,-9,3,-10,9,7,5,-7,4,-10,10,-5,5,-3,-5,5,5,6,-7,10,-4,-10,-2,8,6,3,9,4,5,-4,8,-6,3,-4,8,6,10,-3,-4,6,-10,-8,9,2,7,6,5,-10,-6,9,-8,-8,-3,-9,-3,-9,-8,-1,-6,2,-8,1,-2,4,-7,4,1,4,-6,-1,1,-1,6,5,6,7,6,9,-3,10,7,-5,-7,-2,-3,-1,4,1,-5,-2,-4,4,1,1,-6,1,-4,-4,7,-5,9,-5,9,5,-2,6,-7,7,-6,9,-9,7,-9,6,7,6,-9,-10,-7,-6,-1,-7,3,-6,2,10,8,-5,-10,-2,-4,2,-7,6,9,-3,2,-1,-3,3,4,7,3,-8,-4,-10,9,4,6,10,-1,8,-2,-10,5,10,-9,1,10,-4,2,-3,-8,8,8,-1,-10,4,-5,-9,-10,-10,-6,2,4,10,-2,8,-3,-3,-2,-10,3,-6,-8,9,-6,8,1,9,6,1,4,7,4,8,6,10,-4,8,-3,-2,7,2,8,3,-9,-3,2,10,-3,3,6,1,-2,-2,7,6,3,-1,-7,6,-9,-1,-10,8,-9,5,4,5,-6,-3,-2,6,-6,6,-3,1,3,4,5,9,5,-1,-1,-7,7,7,-10,5,-3,-1,-5,-10,-6,-4,-10,-9,8,-4,-8,5,2,7,6,-7,-4,7,1,-10,6,10,-8,9,-10,-8,-5,-6,-4,10,-4,10,5,7,-7,-5,-2,8,-5,-9,-1,5,-7,-4,1,-2,-1,3,2,-4,-9,-3,-7,1,10,-6,5,9,-2,3,-7,10,-7,-3,-5,9,7,2,-3,-5,3,5,5,-9,7,10,-9,3,5,7,3,5,6,-6,-10,-3,4,-10,2,-6,3,6,-8,8,-2,-7,-10,9,-10,6,-3,5,-7,-6,6,1,-10,1,-3,-5,-3,4,-3,-9,5], dtype = "int8")#candidate|8022|(936,)|const|int8
call_8020 = relay.TupleGetItem(func_4948_call(relay.reshape(var_8021.astype('float64'), [3, 7, 14]), relay.reshape(var_8021.astype('float64'), [3, 7, 14]), relay.reshape(const_8022.astype('int8'), [936,]), ), 2)
call_8023 = relay.TupleGetItem(func_4953_call(relay.reshape(var_8021.astype('float64'), [3, 7, 14]), relay.reshape(var_8021.astype('float64'), [3, 7, 14]), relay.reshape(const_8022.astype('int8'), [936,]), ), 2)
func_7026_call = mod.get_global_var('func_7026')
func_7029_call = mutated_mod.get_global_var('func_7029')
const_8027 = relay.const(-6, dtype = "uint64")#candidate|8027|()|const|uint64
var_8028 = relay.var("var_8028", dtype = "uint64", shape = (420,))#candidate|8028|(420,)|var|uint64
call_8026 = relay.TupleGetItem(func_7026_call(relay.reshape(const_8027.astype('uint64'), []), relay.reshape(var_8028.astype('uint64'), [14, 15, 2]), ), 0)
call_8029 = relay.TupleGetItem(func_7029_call(relay.reshape(const_8027.astype('uint64'), []), relay.reshape(var_8028.astype('uint64'), [14, 15, 2]), ), 0)
output = relay.Tuple([bop_8009,call_8020,var_8021,const_8022,call_8026,const_8027,var_8028,])
output2 = relay.Tuple([bop_8009,call_8023,var_8021,const_8022,call_8029,const_8027,var_8028,])
func_8037 = relay.Function([var_8008,var_8021,var_8028,], output)
mod['func_8037'] = func_8037
mod = relay.transform.InferType()(mod)
var_8038 = relay.var("var_8038", dtype = "uint64", shape = (8, 4, 3))#candidate|8038|(8, 4, 3)|var|uint64
var_8039 = relay.var("var_8039", dtype = "float64", shape = (7, 42))#candidate|8039|(7, 42)|var|float64
var_8040 = relay.var("var_8040", dtype = "uint64", shape = (420,))#candidate|8040|(420,)|var|uint64
output = func_8037(var_8038,var_8039,var_8040,)
func_8041 = relay.Function([var_8038,var_8039,var_8040,], output)
mutated_mod['func_8041'] = func_8041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8117 = relay.var("var_8117", dtype = "float64", shape = (15, 3, 9))#candidate|8117|(15, 3, 9)|var|float64
uop_8118 = relay.cos(var_8117.astype('float64')) # shape=(15, 3, 9)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
var_8121 = relay.var("var_8121", dtype = "int8", shape = (936,))#candidate|8121|(936,)|var|int8
call_8120 = func_394_call(relay.reshape(var_8121.astype('int8'), [13, 9, 8]), relay.reshape(var_8121.astype('int8'), [13, 9, 8]), )
call_8122 = func_394_call(relay.reshape(var_8121.astype('int8'), [13, 9, 8]), relay.reshape(var_8121.astype('int8'), [13, 9, 8]), )
output = relay.Tuple([uop_8118,call_8120,var_8121,])
output2 = relay.Tuple([uop_8118,call_8122,var_8121,])
func_8128 = relay.Function([var_8117,var_8121,], output)
mod['func_8128'] = func_8128
mod = relay.transform.InferType()(mod)
mutated_mod['func_8128'] = func_8128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8128_call = mutated_mod.get_global_var('func_8128')
var_8130 = relay.var("var_8130", dtype = "float64", shape = (15, 3, 9))#candidate|8130|(15, 3, 9)|var|float64
var_8131 = relay.var("var_8131", dtype = "int8", shape = (936,))#candidate|8131|(936,)|var|int8
call_8129 = func_8128_call(var_8130,var_8131,)
output = call_8129
func_8132 = relay.Function([var_8130,var_8131,], output)
mutated_mod['func_8132'] = func_8132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8439 = relay.var("var_8439", dtype = "int16", shape = (12, 16, 11))#candidate|8439|(12, 16, 11)|var|int16
const_8440 = relay.const([[[1,9,10,-1,3,3,-7,-3,-8,-8,-6],[-9,-10,-2,-5,6,3,-9,5,-3,6,-6],[-5,-7,-5,-3,6,2,5,4,-2,-7,8],[-7,-6,3,-6,-6,-9,1,9,-5,-10,-3],[-2,6,-9,-9,10,10,-6,-9,-4,-3,-1],[-5,10,7,6,6,9,1,8,-5,-6,6],[9,-6,4,6,-6,6,-2,8,5,7,10],[1,8,8,-4,7,2,8,5,-1,-8,6],[2,-9,10,10,-6,7,9,-9,10,8,-9],[9,-4,-4,-9,-2,8,7,-9,-9,-8,-8],[-2,3,3,5,10,8,6,6,-4,-8,4],[-2,2,10,6,8,7,9,3,-3,-9,8],[-3,-3,-7,-1,8,-5,-5,-2,-3,10,-4],[-9,4,-1,-3,8,-7,6,4,4,3,2],[-4,-10,5,-8,-8,7,1,2,-8,3,-1],[-9,8,-7,-5,-8,3,8,7,-8,-5,4]],[[-4,-1,7,8,-2,-5,2,-1,10,8,9],[-3,3,9,8,-5,10,-5,-1,6,-1,4],[-4,-2,8,10,-5,-2,-6,-6,6,9,9],[-4,-8,-4,3,4,-4,-2,8,8,4,-4],[4,-7,3,-6,-9,-1,-3,5,2,1,-6],[8,6,-9,-9,3,3,4,7,6,-10,-2],[-1,-9,8,1,-5,-10,-7,3,10,-9,-7],[6,-3,-9,-1,-8,-10,5,8,-2,5,8],[-10,7,-7,2,-9,8,-3,7,-10,6,3],[-9,-9,8,4,-5,-6,-6,-1,5,-9,4],[-9,-7,7,10,7,4,2,-10,-9,3,-1],[6,-7,2,3,-1,-8,-3,4,-8,5,-6],[6,-5,5,10,-9,8,9,-6,-9,-5,5],[-3,-3,9,2,5,5,3,-2,-6,1,-6],[7,3,9,2,-7,-3,3,-8,-9,-5,7],[-4,2,7,-5,4,-7,7,-6,-9,1,3]],[[4,-1,8,-5,3,-3,1,-8,7,8,8],[9,4,7,10,1,5,6,7,8,3,5],[-1,10,-7,-1,6,9,10,5,-7,-3,-8],[6,2,-5,5,-1,-5,4,1,-6,-7,-7],[10,6,-8,-2,10,10,-1,-9,7,3,-10],[3,-2,8,-4,6,-7,-3,-1,-9,-2,3],[6,-10,-1,-6,-9,2,-7,-3,-5,5,1],[-5,3,-3,5,-10,9,5,-4,1,-9,9],[3,-5,2,8,-7,8,-7,7,-9,4,-1],[-10,-1,2,-5,-5,2,-9,-1,-10,2,-10],[-10,-2,8,-1,-4,-3,3,4,-6,-8,-1],[7,-6,10,-6,6,7,-7,5,-3,-6,-3],[-4,8,-7,10,-3,-10,3,-6,10,3,3],[4,7,-4,-6,3,-7,-1,7,-2,8,1],[4,10,-3,-5,4,-2,-9,-3,7,-6,-5],[9,-10,-4,5,-10,5,4,5,-4,-9,8]],[[-5,4,7,6,-10,-5,6,-9,-5,9,-10],[-7,2,-4,10,-10,2,-6,-7,10,5,-8],[-5,1,7,-1,3,-4,1,-6,9,-5,2],[-2,2,-4,9,8,-10,-5,9,4,4,-6],[5,8,-10,6,2,8,-2,-1,-8,-5,7],[3,-6,9,4,-6,9,-4,-5,-8,-10,1],[3,-3,2,-7,-9,-7,7,6,-3,-4,-6],[-1,9,-8,-8,-1,2,9,-5,2,-7,9],[-7,9,7,4,2,-4,5,-9,2,1,5],[9,8,-4,-2,-1,7,-3,-5,-8,2,-5],[-6,7,6,6,-10,1,-6,-3,5,-1,7],[-9,-1,-7,-10,8,-9,-6,3,-8,6,-10],[-2,3,10,2,-6,-8,-9,-7,-9,3,-10],[-7,-10,7,-2,-8,-2,4,5,-7,-10,-9],[2,-5,3,-1,8,7,2,-6,10,1,-7],[2,-4,6,-6,10,-2,-10,-5,-9,8,-3]],[[-7,7,4,-9,-2,6,2,7,-6,-7,-3],[3,-8,1,8,8,-2,5,2,9,-7,-9],[7,-10,-4,1,-3,-5,7,-1,-9,-10,-4],[9,1,2,-4,-8,9,-6,-4,-2,3,10],[-3,-5,-9,-5,4,-1,-3,2,3,2,7],[-5,-5,7,-4,8,-5,-2,-1,-7,3,7],[-10,7,8,-3,5,3,-5,-8,7,-8,10],[-7,9,4,-4,1,-10,9,-8,-1,2,-3],[-4,8,8,4,-8,-6,6,10,-1,-6,-9],[-6,-9,10,-3,-10,5,-10,6,10,4,-10],[6,-2,2,7,-5,8,2,-7,2,-3,5],[-9,-5,4,5,-10,5,7,10,-9,-6,8],[7,-2,3,6,-9,9,-6,-5,-7,1,9],[-9,9,-5,-5,3,-10,-10,2,-1,3,-5],[4,-9,7,5,5,4,-2,-10,-1,10,10],[4,-8,-5,6,-1,1,3,9,1,-2,1]],[[-3,-2,4,6,5,-7,5,-5,5,-3,-5],[4,4,9,2,1,-9,-10,8,8,-5,6],[1,3,5,-2,-4,-4,4,6,3,1,-4],[-4,6,4,9,3,1,-5,4,7,-4,8],[-6,3,-6,1,3,10,9,3,6,-9,-2],[3,2,5,5,-3,10,8,10,3,5,5],[9,-4,-3,-2,-7,-2,7,6,-3,-10,-7],[-8,-10,-2,-6,10,4,10,7,4,-7,5],[-6,-5,-4,-9,-5,-9,9,9,10,-9,-5],[4,3,8,-4,3,5,-6,-2,9,-3,-2],[2,6,-3,6,7,2,6,9,4,-10,1],[8,-3,1,-7,-10,6,-1,-4,7,-5,-1],[-8,2,4,10,10,-9,9,10,-4,-7,8],[-9,2,-2,-4,9,5,3,5,-7,3,7],[7,-8,-8,1,-2,8,6,-3,5,4,3],[-1,3,1,-5,8,8,5,2,3,6,-7]],[[3,5,-10,-10,-8,-1,-1,7,-5,-10,-2],[10,-8,-7,4,9,4,5,-2,-8,8,-1],[6,-4,4,3,-6,-1,3,3,4,5,5],[-3,-5,-9,-2,1,-10,-6,-9,-4,9,-3],[5,-2,-5,8,-6,-9,10,3,10,-10,1],[7,-5,6,10,8,3,-6,-6,-10,-5,-3],[-7,-7,-2,-7,4,-2,-9,-5,-8,-4,-3],[-9,5,1,-8,-5,3,-2,-10,8,5,3],[10,10,-10,-9,5,4,-9,1,1,2,9],[-1,-5,3,10,-3,-3,-8,-9,10,5,7],[-8,1,2,5,1,10,-4,-5,8,-5,-5],[8,2,-10,-9,-10,3,10,7,9,-1,4],[-2,10,-1,3,-9,-7,-8,-7,4,-5,1],[4,-1,7,-4,7,-4,-7,1,-8,-2,1],[-4,6,8,-6,-7,8,-7,-9,-8,6,3],[-4,5,7,8,5,8,1,3,6,2,-7]],[[1,-8,6,10,9,-6,-9,-10,-2,-1,6],[-10,-3,-8,-10,-4,5,-1,-7,-10,6,-9],[-8,-2,-5,5,-6,2,-9,4,7,2,9],[-5,-4,-3,1,-5,-2,-3,1,8,-3,7],[-1,3,9,2,-9,-6,-3,3,-10,5,7],[-7,-8,-8,-5,2,7,6,3,8,6,-6],[1,-5,10,-3,9,-7,-8,7,3,-1,-7],[8,6,1,-10,-3,8,3,9,5,9,3],[1,1,9,4,-9,-5,10,9,5,-2,1],[1,3,-7,9,8,-10,-4,10,-7,4,-6],[-10,-6,-8,-9,4,-10,-5,-7,-7,-6,5],[7,2,6,8,10,-6,4,-5,-6,1,5],[-1,2,-9,-6,-10,10,9,-8,8,6,4],[-2,2,-5,-4,-9,-5,4,1,8,2,-5],[-4,7,-1,-5,-2,-2,-5,-7,9,3,-9],[8,4,3,-6,9,1,1,9,-5,-5,5]],[[-7,-8,-8,-2,7,-7,8,8,-8,5,3],[1,3,4,6,7,-2,10,5,9,4,2],[-7,5,7,7,5,1,6,8,-5,-3,-2],[-8,-7,-9,-4,2,-1,-9,8,-8,3,-4],[5,9,9,-10,7,7,7,-6,9,2,-6],[8,-6,8,6,-6,-4,-2,9,3,1,1],[-6,-9,-4,4,-2,5,-1,-7,6,7,-10],[-2,-2,-4,-5,-1,1,-7,-10,6,-3,2],[-5,10,-4,-3,9,-1,10,-6,-10,7,6],[8,-5,10,7,-4,2,-6,-3,1,4,-5],[-9,1,-5,-3,-4,-6,5,-9,-7,7,-6],[-6,-1,3,10,2,-6,-1,5,3,-4,8],[-5,2,-1,1,-9,8,-5,7,-6,7,4],[-4,-1,-8,-8,-2,5,-6,2,-4,6,3],[1,-9,1,-1,-3,3,4,8,-8,-6,6],[-9,-9,1,3,9,4,-2,-3,9,8,1]],[[-3,-5,-9,6,-2,6,-10,-9,9,-8,5],[9,1,-5,1,-10,-4,9,-5,-1,-2,8],[-3,6,6,-8,-1,10,-6,2,2,-6,-6],[-4,-2,8,3,7,-5,-8,4,-4,3,-9],[-3,-8,3,-5,-9,-10,3,4,-7,10,1],[-5,-5,1,4,-9,-1,4,-1,2,6,-8],[3,-5,-2,-4,-2,-9,7,7,10,-10,2],[-4,5,-2,10,-1,1,-1,8,7,4,9],[6,7,-1,-6,3,6,5,-10,-8,-8,-5],[-4,-6,-5,5,-4,-9,6,9,2,3,9],[-6,5,-8,-2,3,5,7,10,3,4,6],[-3,3,7,5,-5,5,-6,-4,7,6,-5],[-4,-6,2,1,1,2,-3,-1,-7,1,8],[-6,-8,10,-6,7,-1,-7,5,10,3,-10],[-3,7,9,1,-5,-10,1,-7,4,-7,8],[-9,-3,9,-2,-4,-1,-2,-1,8,1,1]],[[7,-9,3,-7,1,6,-6,1,5,3,-8],[-6,10,-5,3,3,3,2,-9,8,6,3],[8,-2,-3,9,-1,-10,-1,4,-2,-4,8],[-10,-9,-6,-2,-9,-4,5,7,9,-9,1],[-8,3,-1,-5,-5,5,-5,8,-9,-10,-9],[2,-9,4,-4,7,1,9,7,10,-1,5],[-5,5,-10,-8,-10,-5,-3,-6,-5,8,4],[-7,-3,2,-1,2,-8,9,-2,6,-9,-2],[9,9,4,7,5,7,-10,-4,6,6,-2],[3,-4,-7,-10,-7,-10,3,6,-10,-6,8],[7,-7,-7,8,-10,3,-10,8,1,8,-4],[5,-1,-8,3,-2,-10,-7,2,4,4,5],[-8,-5,8,10,4,-9,-10,3,5,-8,-4],[1,10,-7,3,-10,5,-1,7,-5,9,-8],[-3,6,6,-4,-9,-6,2,-3,5,7,-7],[3,2,-6,1,3,7,-3,-3,3,4,1]],[[3,1,7,6,-8,1,6,-2,3,1,5],[3,3,-10,-7,2,-4,8,1,-9,-2,1],[-8,-4,-8,-3,9,9,-3,-10,9,-10,5],[8,1,-4,-6,10,-8,8,-9,7,6,1],[-6,-10,3,9,6,-1,-5,-10,2,8,4],[5,7,-1,-1,-4,5,1,-4,3,2,-8],[3,-9,-8,6,-2,-5,-5,2,3,3,2],[6,-6,7,-5,4,-3,-4,9,6,10,-8],[10,-1,8,2,7,5,9,1,6,-3,-10],[3,8,9,-1,-3,1,-7,-7,10,-7,9],[-6,1,8,5,2,5,7,5,3,2,-3],[4,8,-4,-6,10,-5,-7,4,1,10,-3],[2,-7,-10,-10,8,3,-5,-10,1,-6,-10],[9,3,-9,8,1,3,-4,9,-6,-7,10],[7,4,9,-6,10,-2,-7,-7,-6,-4,6],[-2,3,1,-6,-3,-2,-4,-6,-9,-8,-3]]], dtype = "int16")#candidate|8440|(12, 16, 11)|const|int16
bop_8441 = relay.right_shift(var_8439.astype('int16'), relay.reshape(const_8440.astype('int16'), relay.shape_of(var_8439))) # shape=(12, 16, 11)
func_8037_call = mod.get_global_var('func_8037')
func_8041_call = mutated_mod.get_global_var('func_8041')
const_8472 = relay.const([[-1,-9,-6,-8,-1,-9,1,5,-6,6,3,2,-8,-9,-6,-9,5,9,5,10,4,-8,-5,-10,9,-10,1,-2,-6,-8,-9,-1,-9,8,10,1,-7,10,-3,4,8,4,-10,8,7,-10,7,5],[-4,9,2,1,-8,-3,3,10,-5,-3,-1,3,-9,8,-6,1,7,7,9,-1,9,5,-3,-5,1,7,1,2,3,-7,5,3,9,1,8,-2,-8,-10,5,-1,-3,8,8,-5,4,-2,-1,10]], dtype = "uint64")#candidate|8472|(2, 48)|const|uint64
var_8473 = relay.var("var_8473", dtype = "float64", shape = (294,))#candidate|8473|(294,)|var|float64
const_8474 = relay.const([-5,-8,-5,-4,-2,-7,-3,1,9,-2,8,-1,-8,-7,4,2,-1,2,7,-6,-3,5,10,-5,4,9,1,2,-10,-10,3,6,10,-9,6,-7,-10,2,2,8,-5,7,6,-5,-10,-3,-7,-6,6,8,-3,-10,-9,3,-4,-7,-8,6,6,4,-6,-7,-5,4,10,-5,6,8,-2,5,3,-4,6,7,-1,8,-8,-4,9,4,9,4,9,-9,4,6,7,8,-1,-5,-4,2,9,-4,-4,-8,2,-6,-4,1,-10,3,10,-3,4,3,-3,1,3,-8,6,9,6,8,-2,-7,-7,-2,-2,7,-2,-6,-7,5,-4,6,9,-7,-1,-6,-5,9,-5,-10,5,3,-8,-2,-7,5,-2,-3,-6,-9,-7,-2,-9,-8,-10,-1,6,4,-4,10,-5,-5,6,1,10,9,-4,2,1,-8,-8,8,3,-1,10,8,-6,4,1,-6,-3,8,5,3,-2,9,-1,6,-8,-3,-8,-4,6,-8,3,-9,10,-8,-1,-3,3,3,-8,10,-3,6,5,-6,10,-1,-10,3,-10,-7,3,2,-1,-2,3,8,-6,-7,-6,6,-1,-3,7,-2,-7,8,8,-8,6,-9,1,-4,2,9,-6,-4,-10,-9,2,-4,8,-1,-5,-5,-6,-9,-10,3,6,-9,-5,-1,-1,3,-10,4,-10,-4,5,-5,4,9,9,-5,4,-1,-1,5,5,-5,7,-4,-8,2,-10,4,5,9,5,-2,9,9,8,-2,-2,-7,-10,-5,-3,-10,8,-8,-5,-8,10,9,-3,-9,-4,1,10,6,1,6,10,7,-2,-2,2,9,-10,-1,-9,-4,-3,-9,-5,5,-6,-1,9,-8,-5,-7,-10,8,5,5,-2,-4,-3,10,-10,3,-7,4,-4,-6,3,-5,10,-7,3,-10,10,-1,-9,-1,5,-4,-10,-8,-1,5,-10,10,-2,-6,8,9,9,9,1,6,-5,10,-9,10,-7,-5,-5,-6,2,3,7,6,-4,-6,6,-2,-4,-6,5,6,-1,6,8,3,7,9,-10,1,-1,-10,1,-8,6,-10,10,-2,9,-8,-1,4,-9,-3,-10,-2,3,10,3,1,-3,-2,-8,-5,2,1,-6,-3,-10,3], dtype = "uint64")#candidate|8474|(420,)|const|uint64
call_8471 = relay.TupleGetItem(func_8037_call(relay.reshape(const_8472.astype('uint64'), [8, 4, 3]), relay.reshape(var_8473.astype('float64'), [7, 42]), relay.reshape(const_8474.astype('uint64'), [420,]), ), 6)
call_8475 = relay.TupleGetItem(func_8041_call(relay.reshape(const_8472.astype('uint64'), [8, 4, 3]), relay.reshape(var_8473.astype('float64'), [7, 42]), relay.reshape(const_8474.astype('uint64'), [420,]), ), 6)
func_5717_call = mod.get_global_var('func_5717')
func_5720_call = mutated_mod.get_global_var('func_5720')
const_8481 = relay.const([3.063788,6.014675,2.755792,-4.039611,8.570178,1.390170,-4.634830,8.057152,-5.600093,5.805721,-7.267467,7.074224,-2.600575,-8.406614,0.357575,3.001456,-0.376727,-2.047010,0.123168,-9.507654,0.821251,-1.758415,-7.347741,-4.045120,0.677799,-9.347096,9.031595,0.391941,-6.280240,3.638074], dtype = "float32")#candidate|8481|(30,)|const|float32
var_8482 = relay.var("var_8482", dtype = "int8", shape = (936,))#candidate|8482|(936,)|var|int8
call_8480 = relay.TupleGetItem(func_5717_call(relay.reshape(const_8481.astype('float32'), [5, 1, 6]), relay.reshape(var_8482.astype('int8'), [936,]), ), 1)
call_8483 = relay.TupleGetItem(func_5720_call(relay.reshape(const_8481.astype('float32'), [5, 1, 6]), relay.reshape(var_8482.astype('int8'), [936,]), ), 1)
func_4948_call = mod.get_global_var('func_4948')
func_4953_call = mutated_mod.get_global_var('func_4953')
call_8495 = relay.TupleGetItem(func_4948_call(relay.reshape(var_8473.astype('float64'), [3, 7, 14]), relay.reshape(var_8473.astype('float64'), [3, 7, 14]), relay.reshape(var_8482.astype('int8'), [936,]), ), 1)
call_8496 = relay.TupleGetItem(func_4953_call(relay.reshape(var_8473.astype('float64'), [3, 7, 14]), relay.reshape(var_8473.astype('float64'), [3, 7, 14]), relay.reshape(var_8482.astype('int8'), [936,]), ), 1)
func_2003_call = mod.get_global_var('func_2003')
func_2008_call = mutated_mod.get_global_var('func_2008')
const_8513 = relay.const(-9, dtype = "int16")#candidate|8513|()|const|int16
const_8514 = relay.const([-7,9,-8,-9,5,6,-10,-3,7,5,4,-8,5,2,10,-1,10,1,2,8,9,-5,4,-3,-7,1,-6,2,4,5,7,-3,5,6,-3,3,8,-1,6,-1,4,-4,10,10,-2,-10,-3,6,10,-3,6,-4,-6,5,1,-4,-8,5,-6,4,2,-7,-10,10,6,-2,1,-5,5,10,-7,-2], dtype = "int16")#candidate|8514|(72,)|const|int16
const_8515 = relay.const([8.026842,-6.091944,-9.860301,-4.911301,4.480843,8.345281,-7.511990,8.730923,-8.922623,5.818259,-1.994416,-8.677197,3.137869,2.127050,-3.903894], dtype = "float32")#candidate|8515|(15,)|const|float32
call_8512 = relay.TupleGetItem(func_2003_call(relay.reshape(const_8513.astype('int16'), []), relay.reshape(const_8514.astype('int16'), [3, 6, 4]), relay.reshape(const_8515.astype('float32'), [15,]), ), 2)
call_8516 = relay.TupleGetItem(func_2008_call(relay.reshape(const_8513.astype('int16'), []), relay.reshape(const_8514.astype('int16'), [3, 6, 4]), relay.reshape(const_8515.astype('float32'), [15,]), ), 2)
func_2377_call = mod.get_global_var('func_2377')
func_2380_call = mutated_mod.get_global_var('func_2380')
var_8518 = relay.var("var_8518", dtype = "float64", shape = (390,))#candidate|8518|(390,)|var|float64
call_8517 = relay.TupleGetItem(func_2377_call(relay.reshape(var_8518.astype('float64'), [13, 5, 6])), 1)
call_8519 = relay.TupleGetItem(func_2380_call(relay.reshape(var_8518.astype('float64'), [13, 5, 6])), 1)
output = relay.Tuple([bop_8441,call_8471,const_8472,var_8473,const_8474,call_8480,const_8481,var_8482,call_8495,call_8512,const_8513,const_8514,const_8515,call_8517,var_8518,])
output2 = relay.Tuple([bop_8441,call_8475,const_8472,var_8473,const_8474,call_8483,const_8481,var_8482,call_8496,call_8516,const_8513,const_8514,const_8515,call_8519,var_8518,])
func_8545 = relay.Function([var_8439,var_8473,var_8482,var_8518,], output)
mod['func_8545'] = func_8545
mod = relay.transform.InferType()(mod)
var_8546 = relay.var("var_8546", dtype = "int16", shape = (12, 16, 11))#candidate|8546|(12, 16, 11)|var|int16
var_8547 = relay.var("var_8547", dtype = "float64", shape = (294,))#candidate|8547|(294,)|var|float64
var_8548 = relay.var("var_8548", dtype = "int8", shape = (936,))#candidate|8548|(936,)|var|int8
var_8549 = relay.var("var_8549", dtype = "float64", shape = (390,))#candidate|8549|(390,)|var|float64
output = func_8545(var_8546,var_8547,var_8548,var_8549,)
func_8550 = relay.Function([var_8546,var_8547,var_8548,var_8549,], output)
mutated_mod['func_8550'] = func_8550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8698 = relay.var("var_8698", dtype = "uint32", shape = (13, 16, 14))#candidate|8698|(13, 16, 14)|var|uint32
const_8699 = relay.const([[[5,-2,-5,1,8,-3,-7,-10,-4,3,-7,4,8,9],[10,10,8,-2,-5,-6,-8,-5,-3,2,-7,-5,-9,-4],[-10,7,-4,7,-8,-4,3,-5,-10,8,5,-3,6,-7],[-8,1,5,-9,-4,-1,-5,-7,-9,-1,-3,4,-10,2],[-6,8,1,3,-5,7,9,4,-4,-2,3,2,6,-6],[5,-10,-7,5,8,-6,-10,-4,2,3,-9,7,-2,-8],[6,-3,-1,2,-3,-8,6,-6,8,7,8,-3,7,-8],[10,-5,7,-5,-3,8,5,9,-9,-10,-4,6,7,10],[-1,10,2,6,-7,10,10,-8,-4,-6,1,-2,3,9],[-7,-3,-9,8,10,3,-6,7,-2,9,-1,9,-3,7],[6,7,8,4,2,-9,7,-8,-6,7,10,-4,-2,-3],[1,-2,-7,-2,8,-2,-7,1,-4,7,5,-8,1,-6],[-4,-10,10,-3,3,-1,3,-9,4,-6,-10,10,8,-2],[9,-2,8,7,-5,4,8,-9,1,-1,10,5,10,-7],[5,-7,-9,9,-2,5,9,-7,7,7,-4,6,6,5],[-9,6,2,-8,2,-8,4,-4,-3,9,7,-1,-4,6]],[[-8,-10,3,-1,-9,8,6,8,7,6,-4,-3,3,-3],[-1,-9,-10,-8,-4,10,9,7,-3,-9,8,2,10,-5],[1,10,-7,-3,-7,-1,-1,4,-8,7,-5,-2,2,7],[1,-5,-9,4,-5,4,9,2,-6,-2,-5,-8,7,-5],[3,-3,3,-9,-4,-10,-2,-10,10,3,-10,2,7,-8],[-9,-5,3,9,9,-8,-2,3,-3,-7,9,-8,-6,-2],[2,9,-3,6,-6,1,4,8,10,-10,-8,-3,-6,4],[5,4,8,-9,-10,6,-1,-9,10,10,3,-10,-8,6],[8,-7,5,-10,-7,-3,-5,10,10,2,-1,8,4,-2],[3,-6,7,-5,5,7,-6,8,1,-9,9,1,-4,3],[8,-10,-7,-5,-10,-9,4,6,6,3,-3,-10,-4,4],[1,7,7,4,4,8,-8,10,3,-3,-1,8,-1,-8],[-1,-4,-2,-4,8,2,-7,-7,-5,8,2,-7,-10,-9],[-5,-5,-9,-9,-1,9,2,1,-10,-4,-5,3,6,2],[-8,6,-8,-10,-3,8,-3,-1,-6,4,-1,3,5,-5],[7,-6,8,10,4,-3,-8,-10,7,8,6,-9,2,-2]],[[7,7,-5,-3,-6,1,1,-8,-4,-2,10,4,3,2],[5,-4,1,10,-6,-1,4,-4,-3,-5,-9,-7,10,4],[5,1,-9,-4,-6,-6,-7,-7,-8,-9,-1,9,-3,10],[10,-7,9,-8,-2,-1,-9,5,6,1,2,7,2,7],[4,3,3,-10,-9,-3,3,3,2,7,9,2,-8,7],[4,-7,1,-4,-1,7,5,1,5,-9,2,-3,-6,2],[-3,-3,-1,5,10,6,-4,-1,6,-6,-6,8,-10,8],[-5,7,-9,4,1,-4,9,-4,7,-3,-9,-4,3,-4],[-2,-1,3,6,10,-6,9,4,1,10,-7,-3,-1,1],[10,1,8,-10,1,6,5,-2,1,-10,-6,-2,-5,-9],[-3,-2,-6,8,4,8,5,-5,-6,-5,-3,-1,7,-1],[-10,9,-1,-8,-6,2,4,5,3,-10,-9,6,-1,-4],[-10,-1,7,4,2,6,10,-8,-7,-4,5,9,-10,-9],[-2,9,7,-10,9,2,-8,7,-4,2,8,-4,-1,-10],[-10,2,-9,3,1,10,-9,-9,-9,-5,-3,-8,5,5],[-7,-9,-3,10,-1,10,6,10,-10,-10,-9,-4,4,-3]],[[-4,-6,-5,-9,-5,-2,9,8,10,9,-9,9,-6,10],[6,10,4,-2,-1,9,9,-2,-1,-6,-8,-1,5,-5],[-4,2,10,10,6,-3,3,2,-1,-10,7,-3,10,2],[-5,-8,-3,1,-2,5,2,-6,-10,-7,-7,5,-5,-6],[4,2,-6,10,-3,-3,3,7,-8,2,-5,2,8,-3],[6,7,9,9,2,-7,2,1,9,-1,-3,8,-2,8],[-8,2,-2,5,-10,9,6,6,9,3,7,9,-9,-6],[7,-10,6,-10,2,-2,-2,2,-10,-7,-8,-6,-6,-5],[-2,-5,-6,6,8,-10,3,-1,-6,4,3,-2,-2,8],[-3,-3,3,-4,5,-10,-9,-3,6,-9,9,6,-5,-5],[-9,4,-5,9,-7,8,4,-4,10,-7,-1,7,-2,-4],[-5,3,-1,8,-6,-7,-9,-4,2,-5,-5,-1,1,-8],[4,7,2,-3,-8,10,-5,6,1,6,10,-10,-6,-3],[10,7,5,1,-5,-2,-3,-9,-1,-2,-7,-10,2,1],[-2,4,-8,-5,-6,-2,-1,5,9,4,-1,6,7,-2],[-5,-4,9,-8,8,2,10,-6,-8,-6,-5,9,-9,1]],[[-1,2,7,-5,-5,-3,-8,8,9,-2,-2,-6,-1,4],[-1,5,-9,-2,-6,-5,1,3,-3,9,4,8,10,-5],[-2,10,-4,-7,-3,-1,5,-7,4,-6,-2,6,8,1],[2,8,5,-9,-2,-1,-5,-3,8,9,-3,-6,1,10],[10,9,9,7,-7,4,3,6,8,2,-1,-8,5,-9],[8,8,-5,1,6,10,4,-3,-9,-7,-8,5,-8,-4],[-6,3,-4,-3,10,3,-2,9,4,5,3,-2,-10,2],[7,3,9,-9,-9,-2,-8,4,5,-8,-5,6,-4,1],[-3,-4,-7,8,-2,-10,1,9,4,-3,-7,10,5,-2],[-4,5,-5,2,5,-9,6,8,-9,9,10,-2,5,1],[-10,1,5,3,-2,-2,-2,-3,-10,8,-8,3,-10,-5],[1,-7,8,-6,3,-4,4,-3,9,-7,-7,-10,-3,-2],[-2,-8,-2,5,-2,-4,-10,-1,6,-1,1,6,2,-4],[-1,-5,-5,7,9,-1,10,-9,6,5,5,-9,-3,-4],[-10,-7,7,5,9,1,-3,1,10,6,-2,-7,6,-3],[10,-1,8,-3,-1,8,10,8,-4,7,-10,9,3,-7]],[[2,5,7,-10,5,1,4,6,1,-7,4,8,-8,-6],[-2,9,2,6,1,8,1,-2,9,9,1,-6,2,8],[2,1,6,-2,6,-2,3,-3,-9,9,2,-9,-2,5],[-2,5,5,-10,8,9,-9,2,-1,6,1,-8,-1,-3],[4,8,1,10,1,-8,3,4,-10,-3,5,-9,-5,9],[-5,-3,-4,-7,-6,2,-8,-6,-8,4,-9,9,10,-2],[6,-3,8,4,-8,-7,-7,-2,7,-9,-2,-5,1,7],[-1,-6,-2,1,-6,-10,-5,1,-5,-8,-2,-9,9,-7],[7,2,3,-6,9,-3,-2,1,9,7,6,-6,2,5],[9,-10,4,-4,-1,1,8,5,8,-5,-10,3,-10,4],[-6,1,-1,-2,4,1,6,3,8,2,-8,5,1,-3],[6,-1,6,-6,5,-1,3,2,8,3,-7,-1,4,-2],[1,4,-3,-10,8,-6,-5,2,3,-9,-3,-6,-9,-5],[3,8,5,1,-8,6,6,-1,-1,9,8,4,2,2],[-4,-4,6,-1,3,-6,-5,-1,4,-2,-4,8,10,-1],[-1,2,2,2,-8,-9,-9,6,-9,2,8,10,-6,-3]],[[-2,9,-9,-9,-8,9,8,-9,-2,8,1,-7,-6,2],[-7,8,-1,-3,7,1,6,1,7,8,4,-1,8,5],[-6,3,6,-3,8,9,-9,-3,10,7,-4,7,3,-5],[7,-4,-1,-6,-10,-3,-4,-6,-3,-6,-2,10,-9,6],[-6,-4,4,-8,7,-1,-3,-9,-7,8,5,2,-8,-5],[-9,9,-1,10,1,10,2,-8,6,-1,-2,2,4,5],[6,7,9,3,-10,-9,1,-10,-3,-7,6,1,-7,-5],[8,-1,10,-2,-5,-2,7,6,1,8,-4,2,-3,8],[-7,-10,-5,-9,-8,-3,-5,-8,4,-8,-1,8,3,7],[-2,-7,10,-4,-8,-9,6,-1,-6,-3,2,7,10,-9],[5,3,1,-8,7,7,7,-2,-5,-3,-2,3,-10,7],[8,-4,-4,-2,-7,7,2,-7,-9,3,-2,4,5,-7],[-10,4,4,10,-3,2,-3,-3,-4,-6,-7,-6,-7,2],[10,4,6,9,-6,-6,1,10,-1,-1,-3,-8,7,-9],[6,6,-3,-7,10,6,5,6,4,-2,-9,9,-1,2],[3,-2,-5,5,9,-4,8,-5,-6,8,7,4,-2,-5]],[[2,-1,-9,3,1,1,-10,9,8,10,4,-3,-8,6],[4,3,1,10,-8,5,1,-9,4,8,3,6,-5,-10],[-10,5,10,-9,-3,-10,-1,8,2,2,7,-7,-9,-8],[6,9,6,7,1,6,4,-5,-2,7,-2,1,-1,10],[3,-6,7,2,-7,-9,6,4,-3,5,6,1,-2,-7],[-1,5,-6,1,-6,7,6,4,3,-10,-9,-6,-8,2],[9,7,8,-4,-2,-8,-1,-2,10,7,-5,4,3,-8],[-6,2,-4,7,-10,-6,7,-3,-8,-3,10,-4,8,-9],[-7,-1,9,-10,2,-5,-8,7,5,-4,-4,3,-7,-10],[-4,-6,-8,-6,2,-10,-3,1,7,5,-9,-5,5,8],[5,-9,-7,-2,3,3,-5,-2,-7,-10,-10,-6,-5,1],[-9,4,-6,-4,7,9,-7,-7,-5,-1,-1,-7,-5,9],[4,-9,-8,-8,5,9,-2,-4,-9,1,10,-6,-2,-2],[-6,8,1,-6,2,3,-9,-9,-1,10,-4,3,3,-2],[2,6,5,1,-3,4,2,3,2,-10,5,-10,-1,2],[4,-2,8,-6,2,-6,2,-2,-9,-6,7,1,-6,-10]],[[6,2,3,-6,-2,3,-8,2,-1,6,7,1,8,5],[-5,-4,6,2,-1,-2,1,-10,-6,-10,-5,7,10,8],[-1,5,-10,10,-4,5,1,10,-3,-2,3,6,-2,-1],[-2,-10,6,1,-4,-9,-5,8,2,-9,-8,-3,-5,-8],[1,-7,2,8,-5,-1,-1,-1,-7,-2,7,-5,2,-6],[7,4,-5,1,-2,-5,-7,8,-1,4,-8,-6,-10,7],[-8,-1,-9,5,7,3,-4,-8,7,2,-7,-5,-3,-9],[3,-6,-1,8,-1,-3,-8,10,5,6,6,-1,4,-7],[8,-1,1,3,-4,1,-3,-4,3,6,1,-1,10,9],[9,-3,9,-9,1,4,3,1,-2,-9,-8,-4,-7,-6],[-8,-10,-1,7,9,2,-7,5,4,8,-2,2,1,9],[-10,2,-1,8,-5,2,10,-4,-2,9,-7,-5,-3,9],[4,10,4,-3,-6,7,-5,-7,-4,-2,-2,-4,7,7],[8,-3,-3,-6,7,-4,-10,4,9,-10,2,9,2,-2],[5,-10,3,-5,8,-5,-1,-8,1,6,-3,3,8,-9],[7,1,1,5,7,-4,9,10,10,1,-1,-1,5,2]],[[-8,-6,-4,-7,8,-3,-1,-2,8,-2,-1,10,-2,-8],[5,-10,1,-5,3,-4,-5,-10,3,1,-3,10,10,7],[8,-10,-3,5,-6,-1,-4,4,1,10,-3,7,-5,-1],[4,-6,-3,-5,-7,-2,-1,-6,9,6,1,6,-6,1],[8,6,-9,-6,9,9,-4,-10,4,-1,3,3,-5,7],[1,-5,-9,-3,-3,3,2,5,2,2,1,-1,3,8],[4,-3,5,-6,-9,5,7,2,-1,-5,4,1,1,2],[7,-3,-7,-7,-4,-9,1,-5,-3,10,-7,6,-2,-9],[-10,-8,10,9,-2,10,-1,-1,2,-3,-4,-8,9,2],[-3,-6,-1,10,-10,9,-7,-7,7,-1,3,-5,-8,-8],[8,-10,-3,4,5,-5,4,8,-2,-10,-3,9,6,5],[-6,-10,-4,-3,-9,1,10,-8,10,4,10,-3,4,1],[6,3,-10,4,5,1,4,-7,-9,-9,-2,-5,8,7],[9,-1,5,-5,-8,9,8,-7,-3,9,1,3,2,6],[-5,3,3,9,7,-1,4,-8,9,7,10,-5,5,-4],[3,8,-5,2,-4,-5,4,7,7,2,-1,-9,-6,-3]],[[2,9,-1,5,-9,-5,-7,-3,-8,9,-6,-3,-2,1],[7,-9,3,-8,7,2,10,9,8,8,-4,1,-10,8],[-7,9,5,6,-10,-4,-6,2,-4,5,5,-7,-2,1],[-3,5,-10,-7,-6,2,-7,-2,-5,-1,7,10,-9,3],[5,7,-4,1,9,-8,-1,1,-1,3,7,-2,9,-8],[-8,4,-6,-3,-5,6,-4,-1,7,5,2,3,-1,4],[6,2,5,-7,-7,3,9,-8,-6,-10,-10,2,-4,-1],[-7,-6,-1,6,6,-8,8,-7,-3,-9,-3,-3,-5,-4],[7,3,2,-8,10,8,-1,-9,2,-7,-10,-5,7,-3],[-4,-9,-2,-6,4,7,1,-7,6,3,-1,-2,-9,1],[4,8,1,-8,2,7,-9,7,4,4,2,-5,-8,-4],[-3,-2,-9,6,10,2,9,7,8,9,1,-1,1,-6],[4,-7,-2,-5,-1,-2,-4,-6,-6,2,-8,5,6,-2],[1,-7,5,1,5,10,-6,1,-7,-4,10,4,-8,-9],[4,-3,-9,-9,4,-4,7,-7,6,-4,2,5,-5,-2],[-7,-9,-2,5,3,-6,5,8,-3,4,10,2,9,6]],[[6,9,10,-4,2,-2,5,-4,9,2,-4,1,6,9],[-1,-1,4,-2,-10,7,-8,-7,-8,-3,10,8,2,1],[3,5,-7,-2,-6,7,3,-6,-4,3,-3,-8,-4,10],[-6,-5,-2,-4,9,-2,-10,-1,-5,-3,-1,1,-5,-8],[7,-6,-10,1,-3,1,-1,-7,3,6,-6,-9,7,10],[2,2,7,-2,9,8,-10,-6,-3,-4,10,8,-10,2],[8,-1,1,8,1,6,3,4,3,4,2,4,-9,7],[-9,5,2,-6,9,-2,3,-2,1,2,7,-2,6,-10],[-8,4,-7,-7,-7,1,-8,-8,-10,9,-8,5,-9,-4],[-3,-1,3,-2,-4,-9,-3,-7,-7,2,-7,1,6,-1],[-3,1,9,-10,-5,3,3,-2,-6,7,-6,-1,2,8],[-7,4,-4,-9,4,5,4,-1,-4,3,-4,3,1,-2],[-5,-2,9,-6,8,-6,-7,-4,-1,-9,-9,-2,5,2],[-9,-9,-5,9,-7,-7,-10,-9,-3,7,-1,-6,-1,5],[6,-3,4,-1,3,2,-5,-6,1,-2,-2,6,-7,6],[-5,-5,-10,5,-10,-10,-6,-4,-3,-8,8,7,-10,3]],[[-9,7,-2,2,3,-4,6,8,8,5,-2,6,-2,10],[-7,-1,-4,10,-3,5,-10,8,5,-7,8,4,6,10],[2,2,-2,6,1,1,-8,1,5,5,-7,-3,-6,-5],[-7,-10,2,10,5,2,-2,4,-9,-10,-4,6,-7,6],[-8,-6,5,-5,8,-3,-1,-10,7,-5,-7,-3,-9,-6],[-10,10,3,-4,-3,-5,6,3,4,2,-7,10,-9,-9],[-1,-5,-5,-10,4,-9,5,-8,-4,10,-4,9,-7,-7],[1,-7,9,7,10,4,-3,8,7,-9,-7,-8,1,-2],[8,7,5,6,-7,-8,8,8,5,9,2,-4,9,1],[1,8,-5,1,-10,-4,7,3,-5,9,7,-3,-8,-1],[9,6,-5,9,3,10,6,10,5,9,4,-10,-7,-1],[8,-3,4,-8,8,-9,-9,2,-2,-9,6,6,7,3],[7,-1,8,5,-5,-10,-10,2,9,-5,8,9,1,6],[-1,3,2,4,-8,-1,2,4,2,3,3,4,1,7],[-1,1,-9,10,8,1,-5,-7,-4,8,8,-7,1,-2],[9,6,2,1,-4,5,7,8,-10,8,7,-2,-7,-5]]], dtype = "uint32")#candidate|8699|(13, 16, 14)|const|uint32
bop_8700 = relay.less_equal(var_8698.astype('bool'), relay.reshape(const_8699.astype('bool'), relay.shape_of(var_8698))) # shape=(13, 16, 14)
func_7959_call = mod.get_global_var('func_7959')
func_7962_call = mutated_mod.get_global_var('func_7962')
const_8704 = relay.const([[-10,-3,-9,-10,2,-9,-8,9,-10,6,2,1,9,-3,9,10,-6,6,-7,10,-4,2,3,-7,-8,10,-9,2,-3,6,6,-5,8,10,6,5,-8,-3,-8,7,-5,8,7,9,6,-4,-1,5,-10,7,6,7,-10,-6,-5,6,9,2,-3,8,6,2,-10,-7,5,-8,7,-4,10,-5,4,-4,3,-8,9,-8,9,4,-10,-2,6,-3,-9,-8,-10,5,4,6,7,8,4,-5,-7,-2,10,1,6,-9,-2,6,-1,5,-10,5,-8,7,8,-3,-9,-1,1,-6,-5,-1,-3,-8,-8,2,-5,-7,-9,-3,4,-1,4,-3,5,1,-6,8,1,-4,8,-9,4,-3,8,-9,5,9,-3,4,4,9,-10,-9,-2,2,-10,10,-4,-4,-3,9,4,-7,10,6,-7,-6,-5,-7,-8,6,9,2,1,8,-1,-1,-4,-4,8,-10,9,1,1,-1,-9,8,3,1,-8,-7,5,5,-6,6,1,8,-2,-3,9,3,-9,7,-3,-7,7,-1,3,4,7,3,5,-9,2,-9,6,-2,5,8,-8,-8,-10,-9,-6,-2,2,2,-7,-4,3,-2,7,5,-3,-9,-9,-6,-7,1,10,8,-7,7,3,4,5,6,-2,-4,-5,6,8,-10,8,8,-5,10,-9,7,-8,-10,9,-5,-9,7,-9,-6,6,-2,9,4,8,-5,1,-9,-3,10,-4,-6,-1,7,-6,9,-10,8,-2,-3,-6,-9,2,-4,8,-8,8,-5,7,-2,-4,-6,-1,6,-9,-6,-1,2,5,-8,-9,-5,-2,-9,-2,-3,10,-3,-4,-6,1,-7,-9,6,4,-6,2,-3,2,5,-3,-2,-8,5,7,-4,-5,1,-10,9,2,-9,5,-1,4,-2,-4,9,9,-3,-7,-5,10,8,4,5,1,2,-6,4,9,-6,-10,7,10,8,-7,-10,10,8,-5,1,9,-3,-6,-6,3,-10,-6,2,6,-3,-2,9,-1,7,-2,-4,-2,5,-6,-5,-2,3,3,-3,-7,2,-9,3,-10,10,1,-10,-2,4,-5,-8,5,4,-9,9,-5,-5,-3,-8,1,4,1,6,10,-1,9,1,-1,4,-4,-3,-3,3,7,9,-9,-9,-9,-2,-4,-2,-2,-9,-8,10,5,10,4,-5,5,8,-9,2,3,-6,9,-10,-3,-4,1,2,9,-5,5,3,-6,-4,1,4,10,-1,-10,-9,-7,3,-7,5,8,9,9,-5,-7,1,-3,-10,-7,-1,1,1,3,7,10,5,1,5,-8,-7,7,2,5,4,-2,-10,-7,10,-4,7,8,-5,-6,7,9,10,3,6,4,1],[-7,9,-1,-1,6,10,9,-1,6,-2,3,10,4,4,-8,-1,6,-6,-9,-2,6,-8,-5,-4,8,-5,8,9,-3,-7,9,-5,-10,-10,9,-3,-1,-10,2,9,-9,-3,2,-8,-6,-8,-5,-10,4,-5,1,10,10,2,3,4,-8,9,-10,6,4,-2,5,-5,1,5,-9,-4,4,-3,-7,-9,3,-6,-6,10,4,-10,-4,-9,-4,-7,-9,4,-6,10,-1,10,-8,-8,7,-6,-1,-2,-1,10,-7,-10,9,-10,10,-10,-9,-6,9,5,3,-8,8,-9,-1,4,-5,4,10,-9,-4,-3,3,9,-5,-7,6,3,3,4,-1,4,5,-2,-4,5,-3,-8,-10,-6,3,-5,9,4,-4,-8,9,2,1,-8,6,2,4,6,9,2,5,3,-7,-6,7,5,7,9,3,3,-3,-1,-5,4,6,5,3,-5,-7,1,-6,-10,-8,-1,6,-10,-10,-7,-7,8,5,7,3,8,5,-6,10,4,-4,-6,-2,9,-9,-9,-7,10,-2,10,10,-9,-1,-6,10,-6,-8,3,3,1,10,8,7,-9,-6,-8,9,1,-10,-1,-8,3,1,5,-9,6,6,-7,4,4,5,6,9,5,6,-10,-3,10,10,-8,4,10,-7,-5,-1,3,-2,3,8,-1,-4,-9,-5,-10,4,5,3,-10,-2,-3,5,-10,-7,-8,-1,-9,9,1,-7,-10,1,1,-3,-4,7,8,5,10,-3,7,9,-8,-6,-2,-1,5,8,-4,8,-5,-7,-10,-5,4,-1,1,-9,-8,-9,7,5,-2,10,3,5,-5,-3,7,-5,5,4,-8,6,-7,8,-6,5,-7,3,-3,10,-3,2,10,-10,5,-2,4,-1,-4,6,4,-6,-6,-3,-9,8,-7,-9,10,-1,-3,10,-2,10,-1,-3,-8,8,-10,-5,-7,9,3,-10,-9,-2,5,-10,4,-2,-4,2,6,6,-4,-4,-3,-2,3,1,-4,-4,6,7,-4,7,-3,-10,2,4,-6,-6,3,7,-3,-8,3,7,6,3,2,-7,-10,4,4,9,-8,1,4,-7,-8,5,9,-5,5,-4,-8,2,8,10,-5,4,-6,7,2,-9,1,4,-6,-4,6,8,8,10,5,10,10,5,6,8,-10,-10,8,2,2,-5,-5,-10,10,-1,-3,6,2,1,-5,-7,3,5,-3,7,2,-4,4,10,-8,-2,-1,-4,10,-4,-4,2,-10,3,4,1,-4,5,-10,4,7,9,-4,4,10,-1,-10,-4,-9,-6,-6,1,9,-8,2,-9,9,8,4,-9,9,-1,-2,9,-9,-4,-9,5,-2,1,6,-4,9]], dtype = "int8")#candidate|8704|(2, 504)|const|int8
call_8703 = relay.TupleGetItem(func_7959_call(relay.reshape(const_8704.astype('int8'), [16, 7, 9]), relay.reshape(const_8704.astype('bool'), [16, 7, 9]), ), 0)
call_8705 = relay.TupleGetItem(func_7962_call(relay.reshape(const_8704.astype('int8'), [16, 7, 9]), relay.reshape(const_8704.astype('bool'), [16, 7, 9]), ), 0)
output = relay.Tuple([bop_8700,call_8703,const_8704,])
output2 = relay.Tuple([bop_8700,call_8705,const_8704,])
func_8746 = relay.Function([var_8698,], output)
mod['func_8746'] = func_8746
mod = relay.transform.InferType()(mod)
var_8747 = relay.var("var_8747", dtype = "uint32", shape = (13, 16, 14))#candidate|8747|(13, 16, 14)|var|uint32
output = func_8746(var_8747)
func_8748 = relay.Function([var_8747], output)
mutated_mod['func_8748'] = func_8748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9150 = relay.var("var_9150", dtype = "float64", shape = (11, 10, 11))#candidate|9150|(11, 10, 11)|var|float64
var_9151 = relay.var("var_9151", dtype = "float64", shape = (11, 10, 11))#candidate|9151|(11, 10, 11)|var|float64
bop_9152 = relay.floor_mod(var_9150.astype('float64'), relay.reshape(var_9151.astype('float64'), relay.shape_of(var_9150))) # shape=(11, 10, 11)
output = bop_9152
output2 = bop_9152
func_9162 = relay.Function([var_9150,var_9151,], output)
mod['func_9162'] = func_9162
mod = relay.transform.InferType()(mod)
var_9163 = relay.var("var_9163", dtype = "float64", shape = (11, 10, 11))#candidate|9163|(11, 10, 11)|var|float64
var_9164 = relay.var("var_9164", dtype = "float64", shape = (11, 10, 11))#candidate|9164|(11, 10, 11)|var|float64
output = func_9162(var_9163,var_9164,)
func_9165 = relay.Function([var_9163,var_9164,], output)
mutated_mod['func_9165'] = func_9165
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9933 = relay.const([[[-7.838347,-7.223183],[-0.421769,-8.410211],[7.541216,4.267550],[-1.808070,6.125844],[0.926401,4.095353],[-4.867898,-8.237090],[9.614611,7.623742],[8.399679,-6.040123],[1.201300,6.806613],[-3.899658,-6.392552]],[[7.120433,1.604325],[-0.004776,-0.733018],[-3.293633,1.423588],[-9.754698,-2.693184],[-8.236911,5.833890],[-0.417014,5.057369],[-3.672544,1.282507],[4.061664,-9.674221],[8.765576,-9.296324],[-1.233885,-4.956819]],[[-5.882546,-5.549140],[4.917612,-1.949052],[-6.406702,2.112906],[-1.045380,-6.054698],[-5.004319,5.433356],[4.718969,-7.863398],[9.804873,-2.705390],[3.579782,-4.968118],[-0.015710,-4.984063],[0.790895,6.737920]],[[-3.158015,-2.472694],[-1.465210,-4.578768],[-9.845108,-8.222010],[0.774666,6.494149],[5.605250,8.097401],[-8.376282,8.726600],[-4.930854,-1.894804],[-7.814969,6.000295],[-7.759100,7.738786],[-0.381378,6.834452]],[[4.390987,-7.314996],[-8.713881,-0.096874],[-9.930654,6.560742],[7.290329,2.837290],[-7.506452,-4.852390],[-8.654352,-9.449444],[5.623112,7.087630],[3.179225,4.501030],[-8.402074,2.944477],[7.367672,-1.170131]],[[4.216026,-1.666103],[-7.614223,-3.002186],[7.633173,-0.869057],[-5.090968,-6.753996],[-1.849270,4.437397],[6.298974,2.152818],[4.251587,-8.163767],[-0.102143,-3.240999],[-0.087759,-7.958024],[-2.913045,-8.957898]],[[1.525988,0.778781],[2.767777,-1.010213],[2.271428,7.153794],[-9.490082,-2.731408],[5.275624,-9.128878],[-9.363377,-3.041672],[2.012140,2.809203],[2.748980,5.541898],[-1.431507,6.288944],[-2.554098,-9.928342]],[[8.248336,-0.455641],[-9.753911,3.052819],[-0.702230,0.836683],[-3.624766,5.870920],[-1.734098,-0.937096],[-3.587515,0.051199],[-7.351744,-4.062631],[-4.590173,3.602616],[-2.451909,8.141181],[-5.354477,1.720701]],[[-7.982113,5.739517],[-5.843330,-9.612080],[-3.241498,-4.393730],[-5.447382,9.760275],[-8.802366,1.140883],[-0.818785,5.633050],[4.673302,4.073446],[5.777154,-7.559375],[0.673667,9.018393],[-1.598633,2.471815]]], dtype = "float32")#candidate|9933|(9, 10, 2)|const|float32
var_9934 = relay.var("var_9934", dtype = "float32", shape = (9, 10, 2))#candidate|9934|(9, 10, 2)|var|float32
bop_9935 = relay.power(const_9933.astype('float32'), relay.reshape(var_9934.astype('float32'), relay.shape_of(const_9933))) # shape=(9, 10, 2)
output = bop_9935
output2 = bop_9935
func_9938 = relay.Function([var_9934,], output)
mod['func_9938'] = func_9938
mod = relay.transform.InferType()(mod)
mutated_mod['func_9938'] = func_9938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9939 = relay.var("var_9939", dtype = "float32", shape = (9, 10, 2))#candidate|9939|(9, 10, 2)|var|float32
func_9938_call = mutated_mod.get_global_var('func_9938')
call_9940 = func_9938_call(var_9939)
output = call_9940
func_9941 = relay.Function([var_9939], output)
mutated_mod['func_9941'] = func_9941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10282 = relay.var("var_10282", dtype = "float64", shape = (11, 16, 8))#candidate|10282|(11, 16, 8)|var|float64
var_10283 = relay.var("var_10283", dtype = "float64", shape = (11, 16, 8))#candidate|10283|(11, 16, 8)|var|float64
bop_10284 = relay.power(var_10282.astype('float64'), relay.reshape(var_10283.astype('float64'), relay.shape_of(var_10282))) # shape=(11, 16, 8)
output = relay.Tuple([bop_10284,])
output2 = relay.Tuple([bop_10284,])
func_10287 = relay.Function([var_10282,var_10283,], output)
mod['func_10287'] = func_10287
mod = relay.transform.InferType()(mod)
var_10288 = relay.var("var_10288", dtype = "float64", shape = (11, 16, 8))#candidate|10288|(11, 16, 8)|var|float64
var_10289 = relay.var("var_10289", dtype = "float64", shape = (11, 16, 8))#candidate|10289|(11, 16, 8)|var|float64
output = func_10287(var_10288,var_10289,)
func_10290 = relay.Function([var_10288,var_10289,], output)
mutated_mod['func_10290'] = func_10290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10433 = relay.var("var_10433", dtype = "float32", shape = (3, 7, 10))#candidate|10433|(3, 7, 10)|var|float32
uop_10434 = relay.asinh(var_10433.astype('float32')) # shape=(3, 7, 10)
func_6222_call = mod.get_global_var('func_6222')
func_6226_call = mutated_mod.get_global_var('func_6226')
var_10451 = relay.var("var_10451", dtype = "float64", shape = (1024, 1))#candidate|10451|(1024, 1)|var|float64
var_10452 = relay.var("var_10452", dtype = "float32", shape = (1680,))#candidate|10452|(1680,)|var|float32
call_10450 = relay.TupleGetItem(func_6222_call(relay.reshape(var_10451.astype('float64'), [8, 8, 16]), relay.reshape(var_10452.astype('float32'), [1680, 1]), ), 3)
call_10453 = relay.TupleGetItem(func_6226_call(relay.reshape(var_10451.astype('float64'), [8, 8, 16]), relay.reshape(var_10452.astype('float32'), [1680, 1]), ), 3)
output = relay.Tuple([uop_10434,call_10450,var_10451,var_10452,])
output2 = relay.Tuple([uop_10434,call_10453,var_10451,var_10452,])
func_10464 = relay.Function([var_10433,var_10451,var_10452,], output)
mod['func_10464'] = func_10464
mod = relay.transform.InferType()(mod)
var_10465 = relay.var("var_10465", dtype = "float32", shape = (3, 7, 10))#candidate|10465|(3, 7, 10)|var|float32
var_10466 = relay.var("var_10466", dtype = "float64", shape = (1024, 1))#candidate|10466|(1024, 1)|var|float64
var_10467 = relay.var("var_10467", dtype = "float32", shape = (1680,))#candidate|10467|(1680,)|var|float32
output = func_10464(var_10465,var_10466,var_10467,)
func_10468 = relay.Function([var_10465,var_10466,var_10467,], output)
mutated_mod['func_10468'] = func_10468
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10495 = relay.const([[0.214995],[1.909307],[-6.819093],[1.455379],[-8.754602],[2.198591],[-9.374506]], dtype = "float32")#candidate|10495|(7, 1)|const|float32
var_10496 = relay.var("var_10496", dtype = "float32", shape = (7, 1))#candidate|10496|(7, 1)|var|float32
bop_10497 = relay.mod(const_10495.astype('float32'), relay.reshape(var_10496.astype('float32'), relay.shape_of(const_10495))) # shape=(7, 1)
output = bop_10497
output2 = bop_10497
func_10508 = relay.Function([var_10496,], output)
mod['func_10508'] = func_10508
mod = relay.transform.InferType()(mod)
var_10509 = relay.var("var_10509", dtype = "float32", shape = (7, 1))#candidate|10509|(7, 1)|var|float32
output = func_10508(var_10509)
func_10510 = relay.Function([var_10509], output)
mutated_mod['func_10510'] = func_10510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10915 = relay.var("var_10915", dtype = "uint64", shape = ())#candidate|10915|()|var|uint64
var_10916 = relay.var("var_10916", dtype = "uint64", shape = (15, 4, 11))#candidate|10916|(15, 4, 11)|var|uint64
bop_10917 = relay.maximum(var_10915.astype('uint64'), var_10916.astype('uint64')) # shape=(15, 4, 11)
func_8545_call = mod.get_global_var('func_8545')
func_8550_call = mutated_mod.get_global_var('func_8550')
const_10924 = relay.const([10,9,4,2,8,1,3,3,6,-2,-4,-2,-3,-10,-3,-4,-6,3,-10,2,-9,4,-3,-5,6,9,-6,-9,-1,-7,-4,1,1,-10,3,9,-4,-3,9,-8,-5,-4,-10,-1,6,9,-6,-9,-6,-10,-10,-10,-3,1,-1,6,8,1,7,-10,10,2,-10,5,-2,3,-5,4,6,-9,-6,6,-8,-9,9,-7,-9,-4,-2,4,-3,5,2,5,7,-6,10,-5,9,3,-5,6,1,-4,-9,6,5,-2,-5,4,3,-4,-4,-1,-7,10,7,8,7,1,-10,10,10,-2,-10,-6,-6,8,-1,2,7,10,1,-2,-1,4,9,7,-7,6,-7,2,5,3,3,2,1,-4,1,1,-8,-3,9,10,-9,3,9,1,-9,9,-2,-4,4,-5,3,-5,9,9,8,-5,-4,-4,6,-8,-10,9,-8,6,8,-7,5,3,1,-5,-9,-9,9,-7,-1,-1,4,4,10,5,1,-10,-5,-2,5,9,-8,-7,2,-1,1,-3,-10,6,-6,10,3,6,5,6,7,-1,2,9,4,-8,-10,7,-9,-1,-1,4,3,4,10,-7,5,-2,-8,2,1,-6,-10,-2,-5,6,4,-4,2,4,-7,-8,10,9,1,9,-3,2,9,4,6,4,2,6,3,5,-2,-2,3,10,7,5,-6,5,10,1,-3,-8,2,-8,-6,7,-6,-8,-2,-2,-8,1,1,-1,-7,-10,9,5,2,6,-8,3,2,4,2,5,10,-5,-1,-5,9,1,1,-9,1,10,10,5,7,-8,-5,8,-6,-8,9,5,9,8,-2,-5,-4,-6,10,-6,1,5,-4,3,6,-7,7,3,-10,7,7,8,-7,-4,6,-6,-4,4,6,8,-1,8,-10,3,3,-3,2,-2,4,9,-7,-6,8,9,-9,7,-5,-7,6,-5,2,9,-1,-4,-10,6,8,10,-4,-9,7,5,10,7,4,5,1,-9,-9,-1,7,-8,-1,-2,-7,-10,-6,-6,-6,4,-4,5,5,2,-6,4,-8,10,-9,4,3,2,-10,-8,1,6,1,5,-5,1,-7,7,-7,7,-7,-4,7,-10,4,3,9,3,3,7,4,-9,3,10,-3,8,10,-2,9,5,-1,-1,8,-10,3,-8,3,7,5,8,4,2,9,2,8,-3,6,7,9,6,3,8,3,-6,5,-10,1,5,-6,1,-6,10,10,7,-5,3,9,7,-9,2,-8,-2,-2,2,6,1,8,4,-9,9,-6,-5,4,-8,-7,-6,1,-6,7,-3,9,-6,5,5,3,-9,6,5,-6,-4,3,7,-10,-1,9,1,-7,-5,9,6,3,2,-7,-1,1,-5,-5,-10,-3,1,4,10,-9,4,4,-9,-3,-6,9,3,-1,4,-1,3,5,6,8,-9,-10,6,-10,10,-7,6,-2,-7,7,10,-8,-2,9,-10,-3,-5,-3,8,5,9,-2,1,3,-8,-1,-8,3,2,7,8,-3,6,3,1,10,1,4,6,10,-10,4,2,8,-1,7,9,-2,8,-9,-3,-9,-2,6,10,4,9,-8,7,-6,-4,-8,7,-8,-5,-5,7,-3,-7,-7,-7,9,-8,8,4,4,10,-1,-1,-3,-7,5,2,-2,-6,-10,-9,8,7,-3,-1,10,-10,-8,1,7,10,3,9,5,-4,8,-3,1,4,2,2,5,-3,10,4,6,-9,-8,-4,-4,7,4,-10,-1,-8,10,-4,-1,-9,1,-10,9,-5,6,9,10,3,7,8,8,10,-5,4,-1,8,-8,8,6,4,5,-5,1,-10,9,-6,-3,6,1,5,-3,-4,1,-8,-7,2,-8,-10,3,5,9,3,-8,-3,9,2,1,4,-2,-9,-7,-3,-8,-1,-5,4,-10,10,-6,-8,9,8,8,1,4,-10,-3,-3,-8,-3,-3,-10,6,10,1,6,9,-1,5,8,-6,-8,3,-1,8,-7,2,1,-5,9,-8,-9,10,4,6,5,-2,2,-6,6,8,4,-1,10,-5,-4,-4,10,5,-9,7,2,7,-5,-8,7,-4,-9,-6,-3,-6,2,1,5,-5,6,8,-1,5,-8,-7,-10,7,-8,-8,2,7,7,-5,6,7,-3,-4,-2,2,-2,6,-2,3,6,10,-7,-3,6,7,9,6,10,8,-6,1,-7,-2,-2,8,6,5,4,-6,-5,4,8,7,9,10,-4,-5,-10,2,10,1,8,9,-5,4,-9,-5,8,3,-5,-5,5,-2,5,-8,-5,-10,4,-7,-4,8,-1,10,-3,9,7,-9,-3,7,4,-2,-2,-4,-2,5,5,-1,6,-10,-6,9,2,-6,-8,3,-6,-2,7,-7,8,9,7,2,3,6,-10,3,-2,6,-9,5,4,-4,-5,2,-4,7,-10,7,-10,3,8,9,-4,-4,-6,10,6,10,6,-5,2,-4,-10,8,-3,-7,8,5,-2,6,-7,7,2,-3,9,9,-9,-6,3,10,-6,1,4,5,-4,-4,-7,2,-8,8,-4,-9,-1,5,-10,1,1,-7,7,-1,-4,10,7,3,-9,-3,9,10,-8,1,8,-3,6,-4,-3,-4,1,10,-7,3,5,1,-9,-1,5,-6,-6,4,8,-4,2,-8,3,-10,3,6,-9,-10,-9,-7,5,-9,-2,-4,8,1,-8,-2,-9,1,4,-9,-6,3,-2,-10,-4,9,-2,4,2,10,4,-3,4,4,1,1,4,3,-4,2,-3,-2,5,7,-3,9,10,-10,-6,-2,-10,6,-9,-10,3,-1,-3,5,10,7,-8,-1,-8,3,-5,-3,-10,-9,-8,-1,10,-1,-6,-3,6,-10,-4,-5,1,-10,-2,3,4,10,2,-4,3,5,2,6,6,4,-6,-6,-6,-5,-9,-2,-2,-4,-4,-5,6,8,10,5,1,-7,10,-4,-10,-7,-9,4,3,-4,-8,6,2,1,-10,-7,-8,10,8,6,-4,8,2,-3,-10,4,7,-4,-5,-1,3,-8,10,1,-3,-5,8,10,-5,-8,1,3,-1,-9,1,-3,-5,7,10,-3,-3,-10,4,-4,5,4,-2,-4,-5,1,-10,-2,9,10,7,4,6,2,6,-8,8,6,8,-4,2,1,-2,-9,-2,2,-6,9,2,1,7,-10,-1,4,-6,-4,-4,4,-8,8,-4,9,-9,-2,-2,-3,-4,2,9,7,-4,8,8,5,3,-9,-8,-6,9,-1,3,-7,-7,2,-7,-3,-4,9,3,9,1,-4,8,-7,-10,-7,-2,-9,5,7,2,3,3,7,9,-1,-6,9,-4,1,7,-6,10,8,-9,-7,4,-7,3,-10,-2,3,3,1,10,-1,8,6,5,5,-6,4,-6,7,-7,-2,-8,-8,-8,-2,1,-5,-3,10,2,9,-10,10,-6,-5,-5,-1,-3,8,7,10,-3,8,-6,1,4,10,5,-1,-8,-1,5,-8,8,-2,5,-3,-6,4,9,-4,7,8,3,-2,-8,-5,-4,3,-10,9,6,-4,2,6,3,-4,-3,2,-2,8,7,4,6,-3,4,-2,5,3,-5,-9,-1,9,-7,-10,5,-10,-1,4,-2,4,1,6,-1,3,2,-6,-7,6,8,-3,-4,-7,-7,-2,8,-7,-1,4,2,8,9,6,1,-8,-10,3,-3,-10,-9,-9,6,7,9,-9,-9,6,5,4,5,-4,-4,-8,-7,-7,-1,-5,-4,-6,6,-3,-4,-4,2,4,1,-10,-5,4,-7,10,9,4,-10,6,6,2,8,-1,-6,-8,5,4,6,-1,8,10,-9,-1,-7,-6,6,-4,-5,-7,-2,-10,2,-6,-3,-1,10,-10,-8,-7,-10,7,-10,2,-6,8,3,4,3,4,-6,-7,-6,3,-10,8,-3,7,6,1,-10,1,-1,1,-2,10,-9,4,5,-1,10,-6,6,10,-3,-5,2,-6,-8,6,1,-10,4,6,-3,-6,-8,-8,6,-6,1,-1,5,5,-6,5,-1,-8,9,6,-4,-7,-7,-5,-4,-1,2,7,1,1,7,7,-3,4,-10,5,5,6,-8,-4,-4,9,-8,3,10,-7,2,-4,-10,8,-9,3,5,-7,-10,7,-5,-10,-3,-2,-9,-10,4,5,-4,-3,-5,8,-6,7,5,2,2,-3,-6,-8,8,3,5,8,-2,2,-9,-1,5,-3,-4,10,-8,1,-2,9,8,-1,-2,2,-2,-5,-7,6,-6,2,-5,-4,-7,-8,-3,-8,9,-3,10,8,2,-1,-2,10,-7,6,9,8,6,-7,-3,1,6,-4,1,-10,-5,-1,9,3,-8,-9,-2,4,-1,8,-8,7,-2,2,-2,6,3,-4,-9,-10,7,-3,-4,-4,8,10,-10,-9,7,8,4,-7,-1,1,8,-8,-1,-2,10,2,10,5,9,2,5,-5,6,-10,-3,-9,-2,-5,-2,8,5,-1,9,2,-9,-6,-6,5,-5,9,6,8,-6,1,-10,-9,6,-9,-3,-5,-7,7,3,7,7,-3,-5,2,-6,1,-9,-2,-10,4,-1,-8,-9,4,-8,-10,-1,9,6,9,-2,9,-3,-10,9,8,10,-10,10,-5,-9,3,-7,-5,-4,6,-7,9,5,4,-1,6,10,-4,-2,-9,3,-8,-8,3,7,8,-4,5,8,3,-2,5,-5,-2,-8,-5,-7,-1,-5,-5,-6,8,1,1,-3,-1,3,6,-4,4,-9,3,3,-1,2,5,-2,-10,-6,-4,-5,-3,8,-8,-6,-4,-5,-5,5,-9,3,-3,-6,-9,3,-1,-8,-9,-4,9,-1,-8,-2,-5,8,-3,7,-7,-10,7,-10,4,-5,-6,-9,-10,10,7,1,-8,-7,2,-9,-8,7,-2,6,-7,-6,1,-8,8,-10,-1,-8,-2,1,8,4,7,-1,-10,-3,-7,2,8,10,-9,10,1,-8,-2,8,-7,4,-6,2,-2,-3,-8,7,-6,-2,7,-2,2,1,8,-4,2,10,-2,1,1,-3,10,5,-8,10,8,2,-3,4,2,10,-5,-9,-5,3,6,-7,7,-6,-8,10,10,8,7,-7,-9,3,9,2,-4,-2,-10,-1,-10,4,3,7,-8,-9,8,-5,4,2,-2,9,-9,8,-9,-8,6,-10,6,4,-2,-10,-8,-7,5,-6,-4,-6,-6,-4,-5,-8,4,2,5,5,-7,-8,-2,-7,-6,7,-8,5,-7,-8,1,3,-4,-5,-1,6,5,-2,9,-3,2,7,3,1,8,10,7,-5,10,-10,8,10,-10,-10,2,5,3,4,-1,6,8,1,9,6,5,2,-2,7,-5,-10,-10,2,7,9,-5,-1,1,8,-7,-1,10,6,-6,-3,-7,9,-10,-3,7,6,9,4,-9,-1,-9,-9,-8,3,5,6,-9,-1,3,5,-8,-3,8,6,-10,-4,-9,-9,7,2,6,-7,-2,5,2,7,-2,-6,6,10,9,6,-8,-5,-7,-6,-7,-9,3,4,5,-7,10,1,-5,3,-4,10,-5,6,5,4,-7,9,-8,-5,-4,4,-6,-9,6,5,-4,4,3,1,4,-10,-10,-2,3,5,-2,9,-4,8,-4,-1,-9,8,-5,-10,8,-3,-8,-9,2,8,3,-1,8,4,-4,10,10,-5,-9,-5,2,5], dtype = "int16")#candidate|10924|(2112,)|const|int16
var_10925 = relay.var("var_10925", dtype = "float64", shape = (294,))#candidate|10925|(294,)|var|float64
const_10926 = relay.const([[-10,-10,1,7,-10,6,-9,-4,5,-6,5,4,-6,-5,-8,-9,-1,7,-6,5,5,2,2,-8,8,-10],[6,5,8,-4,2,-5,4,-5,8,-10,1,5,-10,4,9,-8,-5,6,4,10,-5,9,8,-2,5,-9],[4,2,9,1,-10,-10,4,10,7,-6,-6,-4,2,-1,7,-3,-4,-6,-3,-8,6,1,7,9,-3,8],[3,-4,-7,-2,-4,9,4,-8,2,1,5,9,-5,-8,7,-8,8,-7,-6,3,-6,6,8,6,-2,-10],[-2,9,-9,-4,2,9,3,-7,7,-8,2,2,10,10,8,8,-8,5,-5,6,-2,-9,10,-5,8,9],[-9,-10,10,10,-1,-6,-7,-8,2,2,-8,-1,1,-7,-3,-8,7,1,9,3,-2,-1,-10,5,-5,-7],[10,-3,-6,-7,-7,1,-5,9,-6,6,-3,-10,7,4,2,7,9,-2,-2,-4,-6,-3,9,-4,8,4],[-6,2,-8,7,10,-4,8,6,7,-1,6,5,-7,10,-9,-5,-9,-2,7,-8,5,-6,8,-1,3,-9],[5,4,-2,-9,9,10,3,2,1,-7,-2,7,6,-6,-1,9,8,10,-6,-3,-5,2,4,9,5,-2],[-2,6,7,8,6,4,9,-4,-4,-1,-1,-6,6,-2,3,6,3,3,4,9,-9,4,10,-4,-6,-3],[7,-5,5,1,-3,3,-3,-7,-10,-8,1,4,9,-6,-4,-1,-6,-1,4,-3,3,5,2,2,8,10],[2,-1,-3,-4,-3,5,3,-4,-10,-6,-3,-8,10,-7,-1,-10,-3,2,7,3,10,1,4,10,2,-8],[4,-10,-7,5,-3,9,-5,2,-6,3,-2,9,10,1,-7,5,-6,-8,-1,1,9,2,10,7,8,1],[-4,8,-2,-6,-10,2,3,9,4,-9,-1,-10,-4,6,-9,-4,9,-7,-2,2,1,10,-4,9,10,-5],[-7,-9,-2,-5,-1,-3,2,1,-2,-8,7,-10,-6,10,-7,6,-10,6,-9,2,-9,-10,5,-7,-4,-4],[10,3,1,3,-10,1,-3,1,-8,-1,8,-10,-3,-3,-1,-10,-9,10,-8,-9,9,10,8,3,6,5],[-5,10,3,7,-8,-8,1,8,-10,-2,8,-10,-5,4,-8,7,5,3,1,-5,-8,6,10,1,-1,-8],[4,5,2,-3,8,2,-9,3,-5,-9,-9,2,-10,-9,5,10,-5,1,4,-6,5,-6,-4,-6,-5,-2],[1,4,-9,2,10,5,7,-1,-9,-3,-6,1,-8,-9,-2,-7,-6,-6,-6,1,10,-1,2,-10,-10,9],[2,6,-7,-2,7,-5,4,10,-8,8,-8,7,-3,-5,9,-1,-4,-10,-1,3,4,2,7,-8,6,-5],[4,-6,-8,-10,-5,-8,7,1,10,9,-9,-10,5,-3,1,-7,9,-2,4,-6,2,-9,1,10,-5,-3],[-9,1,10,-7,2,-8,7,10,3,-2,9,5,-1,-9,-3,1,7,6,-7,-2,8,4,9,7,-9,8],[-10,7,-7,10,-3,2,4,-9,2,2,1,-7,9,4,-5,-7,7,-8,2,-4,8,7,3,-3,-9,-7],[2,-3,-8,-8,-3,-7,10,-3,-3,9,3,1,4,-5,2,5,5,-2,7,7,-6,-8,-10,-3,10,-4],[10,2,-1,8,8,7,1,8,1,10,2,6,-1,-6,-2,7,-8,-5,4,4,7,5,1,8,1,-1],[-5,6,5,10,-4,9,-4,1,-10,-9,-6,-6,2,-9,1,-7,-7,4,-6,-1,-9,-4,-7,-10,2,5],[-6,5,5,10,-1,2,-1,-2,-3,1,3,7,-10,6,-8,10,-2,-3,-8,-2,-1,9,-5,1,3,-1],[5,4,-5,-7,-3,-1,1,-1,7,8,-2,-2,-7,4,-4,6,-3,9,3,2,-5,1,5,5,-7,-1],[-1,5,-7,9,4,-5,6,-4,9,4,-9,10,-9,9,1,7,5,1,3,-5,5,-5,-1,-1,8,-4],[2,-2,-10,-9,1,2,-1,9,-5,2,-4,3,9,8,9,4,-6,4,-7,5,-2,5,-2,-7,1,-6],[-10,10,3,7,-10,5,9,-1,4,-8,5,-10,-10,-3,-8,-5,10,-10,-5,-6,9,-2,1,-9,-1,1],[-10,4,-8,10,10,6,5,4,2,7,-1,4,-4,7,7,3,1,-9,6,6,-7,7,-8,-1,9,4],[7,-2,-10,-6,8,-6,9,-7,5,3,6,5,1,6,4,-9,-7,-3,9,6,1,6,7,6,-5,-5],[1,6,-6,9,10,2,-1,6,4,-7,6,-4,-7,5,9,4,10,1,10,-7,-10,-10,1,10,2,10],[-3,8,-5,1,-5,-6,-2,-2,-9,-3,-7,9,-2,5,8,-9,2,-10,-4,-4,5,5,-9,8,-7,6],[-5,-2,-5,1,4,6,-1,2,-9,-4,6,-10,8,10,2,-9,-10,5,10,9,-8,-10,3,-4,-6,-5]], dtype = "int8")#candidate|10926|(36, 26)|const|int8
var_10927 = relay.var("var_10927", dtype = "float64", shape = (5, 78))#candidate|10927|(5, 78)|var|float64
call_10923 = relay.TupleGetItem(func_8545_call(relay.reshape(const_10924.astype('int16'), [12, 16, 11]), relay.reshape(var_10925.astype('float64'), [294,]), relay.reshape(const_10926.astype('int8'), [936,]), relay.reshape(var_10927.astype('float64'), [390,]), ), 13)
call_10928 = relay.TupleGetItem(func_8550_call(relay.reshape(const_10924.astype('int16'), [12, 16, 11]), relay.reshape(var_10925.astype('float64'), [294,]), relay.reshape(const_10926.astype('int8'), [936,]), relay.reshape(var_10927.astype('float64'), [390,]), ), 13)
uop_10931 = relay.atan(const_10926.astype('float64')) # shape=(36, 26)
var_10941 = relay.var("var_10941", dtype = "int8", shape = (36, 26))#candidate|10941|(36, 26)|var|int8
bop_10942 = relay.equal(const_10926.astype('bool'), relay.reshape(var_10941.astype('bool'), relay.shape_of(const_10926))) # shape=(36, 26)
output = relay.Tuple([bop_10917,call_10923,const_10924,var_10925,var_10927,uop_10931,bop_10942,])
output2 = relay.Tuple([bop_10917,call_10928,const_10924,var_10925,var_10927,uop_10931,bop_10942,])
func_10946 = relay.Function([var_10915,var_10916,var_10925,var_10927,var_10941,], output)
mod['func_10946'] = func_10946
mod = relay.transform.InferType()(mod)
var_10947 = relay.var("var_10947", dtype = "uint64", shape = ())#candidate|10947|()|var|uint64
var_10948 = relay.var("var_10948", dtype = "uint64", shape = (15, 4, 11))#candidate|10948|(15, 4, 11)|var|uint64
var_10949 = relay.var("var_10949", dtype = "float64", shape = (294,))#candidate|10949|(294,)|var|float64
var_10950 = relay.var("var_10950", dtype = "float64", shape = (5, 78))#candidate|10950|(5, 78)|var|float64
var_10951 = relay.var("var_10951", dtype = "int8", shape = (36, 26))#candidate|10951|(36, 26)|var|int8
output = func_10946(var_10947,var_10948,var_10949,var_10950,var_10951,)
func_10952 = relay.Function([var_10947,var_10948,var_10949,var_10950,var_10951,], output)
mutated_mod['func_10952'] = func_10952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11295 = relay.var("var_11295", dtype = "float64", shape = (3, 3, 2))#candidate|11295|(3, 3, 2)|var|float64
var_11296 = relay.var("var_11296", dtype = "float64", shape = (3, 3, 2))#candidate|11296|(3, 3, 2)|var|float64
bop_11297 = relay.floor_mod(var_11295.astype('float64'), relay.reshape(var_11296.astype('float64'), relay.shape_of(var_11295))) # shape=(3, 3, 2)
output = bop_11297
output2 = bop_11297
func_11307 = relay.Function([var_11295,var_11296,], output)
mod['func_11307'] = func_11307
mod = relay.transform.InferType()(mod)
var_11308 = relay.var("var_11308", dtype = "float64", shape = (3, 3, 2))#candidate|11308|(3, 3, 2)|var|float64
var_11309 = relay.var("var_11309", dtype = "float64", shape = (3, 3, 2))#candidate|11309|(3, 3, 2)|var|float64
output = func_11307(var_11308,var_11309,)
func_11310 = relay.Function([var_11308,var_11309,], output)
mutated_mod['func_11310'] = func_11310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11465 = relay.var("var_11465", dtype = "float64", shape = (14, 2, 1))#candidate|11465|(14, 2, 1)|var|float64
uop_11466 = relay.atanh(var_11465.astype('float64')) # shape=(14, 2, 1)
bop_11469 = relay.logical_xor(var_11465.astype('int16'), relay.reshape(uop_11466.astype('int16'), relay.shape_of(var_11465))) # shape=(14, 2, 1)
output = relay.Tuple([bop_11469,])
output2 = relay.Tuple([bop_11469,])
func_11485 = relay.Function([var_11465,], output)
mod['func_11485'] = func_11485
mod = relay.transform.InferType()(mod)
var_11486 = relay.var("var_11486", dtype = "float64", shape = (14, 2, 1))#candidate|11486|(14, 2, 1)|var|float64
output = func_11485(var_11486)
func_11487 = relay.Function([var_11486], output)
mutated_mod['func_11487'] = func_11487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11575 = relay.var("var_11575", dtype = "int8", shape = (2, 9, 12))#candidate|11575|(2, 9, 12)|var|int8
var_11576 = relay.var("var_11576", dtype = "int8", shape = (2, 9, 12))#candidate|11576|(2, 9, 12)|var|int8
bop_11577 = relay.equal(var_11575.astype('bool'), relay.reshape(var_11576.astype('bool'), relay.shape_of(var_11575))) # shape=(2, 9, 12)
uop_11584 = relay.cos(bop_11577.astype('float64')) # shape=(2, 9, 12)
func_6222_call = mod.get_global_var('func_6222')
func_6226_call = mutated_mod.get_global_var('func_6226')
const_11590 = relay.const([-3.100947,9.080630,-0.598431,-7.913787,6.141087,-7.655334,7.025144,-4.443136,-7.457316,8.315154,7.342244,8.001928,-4.425175,-9.496440,5.237702,-1.627804,4.760464,-5.304265,9.413319,8.654357,-8.114166,2.746734,-1.001749,6.227485,-8.617469,-2.792140,-3.642292,-0.387270,4.760271,-7.881176,3.908271,7.188953,-8.729029,2.353344,-9.416178,-3.092943,-8.499775,-1.208092,1.808208,8.769671,9.306151,-8.649334,2.148607,-5.983936,4.779961,-8.586454,1.792661,6.141219,9.810667,4.181189,4.624792,9.566749,9.478134,-1.376361,9.731985,4.139727,-6.472852,-3.733265,-5.205625,-9.862838,6.645325,7.901629,-2.382470,-5.165545,8.566641,-8.916801,4.816410,-3.369437,1.842479,-4.415834,2.204329,9.256937,5.462726,3.400457,-1.831169,7.315190,-3.246860,-1.120757,2.858542,1.858753,-1.203106,3.663111,0.444125,0.677456,-8.073623,8.316691,6.474231,1.070604,2.791823,-6.852372,1.414871,8.923294,-3.024337,-8.304225,4.848656,-5.460839,3.788393,8.749296,-8.005969,-3.658908,-6.521813,-9.699267,-2.621333,-9.011619,-6.363278,-7.124498,-0.882640,-9.246439,7.443573,-0.693985,-0.170013,2.903071,-6.337311,-9.767970,8.922572,-2.772658,-5.101792,2.350065,-5.750255,-1.311324,-4.511740,-3.511550,8.537651,-2.430493,-8.601259,8.798812,2.101264,-1.353592,9.112307,-6.388215,1.507783,0.354336,1.684331,0.697995,-0.119916,2.265362,-8.277937,-8.206497,-0.038559,-1.944164,5.821877,7.335199,-5.875349,7.766474,-0.805561,-7.152382,-0.535658,0.195948,-8.359340,9.939141,1.172750,-4.278278,4.890123,4.235849,8.931181,-3.529976,6.956305,8.977357,1.367161,0.750479,9.652615,-9.580273,2.572296,5.847877,-3.003149,3.465960,8.982484,3.850623,-2.887049,-8.128427,-3.861533,-5.943555,-9.414887,-7.841952,-4.703064,0.393689,7.788193,5.420775,-5.309827,3.165422,-3.103199,-8.502503,-5.954569,-2.810071,-7.267134,-1.118613,1.458647,-7.395464,-5.345319,5.582873,-0.649077,-4.920933,-6.166213,4.020643,2.153458,0.518674,6.818137,4.649027,9.982721,-8.609170,4.280378,1.500307,2.854022,-0.233661,-9.478416,9.640367,5.187539,-3.226683,3.111136,-9.587143,-7.374600,-6.526109,6.785590,7.375980,2.481822,-3.704833,-1.013552,6.276805,0.849502,-5.215889,-9.379967,-3.688682,6.805007,6.886254,-8.503276,3.870335,-6.652521,-0.528020,-8.268418,-1.180888,2.713053,-8.035737,-0.218131,-7.339463,7.760586,2.657164,-0.573141,2.089323,6.140947,-5.521816,-8.337544,-8.827890,-2.767258,-2.357559,6.717231,-3.056266,5.699144,-4.057319,5.883076,7.675647,8.302651,-5.105542,5.584023,-9.176995,-9.833014,-3.245664,-1.394468,5.130309,-0.692711,8.075689,6.890590,-1.409672,-8.023467,-9.219235,2.609814,1.862869,9.079632,-5.870693,0.964176,8.235328,-8.565720,4.624923,-6.922312,5.046905,-3.775574,-5.638568,-3.158321,9.089817,-4.286480,-1.077071,5.852277,-4.730991,1.087171,0.912685,7.282304,4.439448,8.405556,1.943257,2.162694,-2.932225,9.855185,1.519851,0.060849,3.141460,0.710109,-9.161607,5.642480,3.139025,7.593847,3.605362,4.812884,-5.554455,4.688338,-6.815225,-3.689803,0.891211,-4.299732,-4.616844,9.781927,0.055802,4.218941,8.327039,-0.267229,-5.069720,-1.031786,7.822692,-3.693132,-5.591348,5.033820,-6.279200,2.900618,8.963909,1.310963,6.380339,7.571801,7.868992,-6.346691,2.628712,7.257019,0.854644,-3.884557,9.925526,-4.748497,-0.706827,-3.532691,-1.678700,-9.016675,8.960095,2.563160,-8.434559,9.221477,4.406975,2.305335,5.783459,-1.840103,-7.862717,0.161985,2.908986,2.480668,7.854682,6.523791,8.192790,1.577248,9.301233,3.444056,-5.419546,9.007877,9.168935,-5.923235,3.303477,5.858376,0.537477,6.821951,-9.600929,8.541658,-6.221651,2.560422,-9.667024,3.978426,4.178193,-7.592496,7.217103,-3.022442,-7.436758,0.642291,3.749333,5.588424,7.898365,-3.584444,4.143975,8.435580,-3.764684,2.874607,-2.817549,-0.338143,7.942468,7.248593,-6.549096,8.154836,-8.989553,-7.556426,3.627587,0.595876,-8.311148,9.356648,8.185422,9.763424,9.739963,-5.276494,6.740537,-4.082185,8.039617,-5.832068,0.998973,-6.370848,-3.019834,2.162254,-9.679873,1.835531,-9.470743,-8.212837,9.204003,7.244630,-9.908113,-3.723064,-1.885558,2.988456,-9.750279,1.557449,5.832036,-5.288390,-8.815136,-2.705581,-0.586627,0.813027,-4.499150,-1.636216,-9.584899,-8.038406,0.950990,-4.819051,6.641872,-3.243251,8.168033,1.811899,9.272451,6.307267,-5.841822,2.343460,5.298585,8.985623,-0.594216,5.400292,-9.875363,-1.205190,6.924578,4.261921,-6.319865,-9.814784,-8.588534,-3.825998,4.825065,4.937945,6.721695,-3.010128,-5.491495,-2.895419,3.788266,6.645330,-7.821685,-9.233590,-7.997075,-5.296785,6.747434,0.901386,0.673804,5.421837,7.667911,-2.072842,8.885688,3.336444,-5.851040,0.662187,9.151668,7.364467,-6.136184,6.276908,-0.538282,7.983310,3.766344,1.297938,-9.341422,6.342579,1.461697,6.888180,4.864570,-8.209615,-5.369377,0.237558,-1.798807,7.719528,-4.397681,-5.211377,9.060558,-7.122048,-5.504848,9.748419,0.845419,-5.754693,-8.307928,3.546392,-1.913606,7.056971,4.570309,-0.431761,-7.595525,-8.494287,3.266677,8.103958,-6.409088,1.051996,4.989774,-9.602602,0.258129,3.549407,-3.722631,0.515224,1.211161,0.560183,-9.481463,-4.976595,-9.252771,8.247355,0.720851,-8.325368,9.153660,-2.044298,-4.886772,8.635903,7.883457,0.865513,1.387339,-2.017801,7.584448,-6.526959,-5.854594,-8.787821,4.897226,-8.380660,-2.748326,2.713856,-3.130581,-6.731532,-1.362252,-4.454841,1.898757,6.026506,2.490642,1.149736,6.148237,-7.876800,-5.191080,-7.595097,-8.402360,4.190316,0.148503,-3.864858,-2.527619,-6.259880,-1.308103,3.624594,-5.259224,8.957991,-1.321498,9.212358,-5.159117,4.760591,-4.841277,-3.143860,-7.424610,-1.924955,-3.003967,2.966270,5.785040,2.039551,5.031736,7.212599,3.553086,5.771522,7.466076,-7.466227,-3.513548,4.570249,9.987101,6.021357,6.134689,-5.240168,4.498193,-6.883199,6.337684,-7.396514,-2.739888,9.474060,-6.313736,-8.898771,9.135865,5.554929,-2.430365,-0.548354,7.552962,-0.749455,0.363027,-1.953324,-2.904928,-8.862687,8.816552,-3.605380,-9.236880,1.497964,-0.384337,9.693973,-8.692352,4.301322,4.048293,5.157285,-8.688673,4.187411,-6.582518,-7.760851,-0.684603,-8.334436,1.779314,-0.357427,-1.687365,2.496596,0.717681,-7.687531,9.047313,-2.611777,-5.238829,0.704800,6.935714,-1.583721,9.781693,0.129260,6.311102,5.620716,-6.604266,8.210464,7.850766,-1.893976,2.247569,4.444386,-5.409316,0.038038,7.427541,9.018137,9.281033,-1.714495,-0.803339,-4.165109,4.155549,8.010888,0.692874,8.032877,9.963407,5.857313,-5.370018,8.758700,6.069716,3.700728,-8.385782,8.240203,8.420964,-3.215212,6.868759,6.317178,-0.599138,0.111467,0.580442,-2.610198,-8.237160,7.467561,-7.109653,3.788139,0.434280,-9.817737,-4.321385,8.126161,1.002947,1.671804,2.892329,-2.954365,5.669008,2.615842,-1.377793,8.765328,-9.724446,9.631970,-3.765147,-6.333143,-0.021274,0.653205,-9.647862,-0.229331,-4.005182,5.688397,-2.064372,7.952322,9.059465,8.527437,-6.976797,-2.750798,9.781151,-9.793898,-3.337520,-5.024216,0.473025,6.444232,-2.543285,-5.454789,-5.584944,-5.825666,5.940990,-3.013647,2.339756,-5.362276,9.317884,-9.177715,-0.486410,-2.413521,5.654201,7.502048,-8.513949,-7.643330,-4.906654,9.092829,-5.627624,-9.295741,1.980682,-9.158817,-2.860008,-0.714926,2.047983,-4.457988,1.197340,8.352762,8.116464,-4.198671,2.698335,8.719587,9.330436,-4.117189,-4.527094,3.829841,-8.315438,-2.738570,-5.569768,-0.086063,6.360374,3.496081,6.442904,6.240103,-0.896388,-0.273942,2.569714,3.275467,-3.929337,-2.265081,-9.896448,-4.679088,-1.068138,6.396153,3.888912,-7.480895,1.947791,-3.669825,-5.848728,6.317555,9.349413,8.473786,4.161479,0.472028,-0.765701,9.382476,8.014210,9.296028,-9.705435,-2.368371,-2.118687,4.210877,-1.902029,-8.527897,3.403903,8.619459,5.513491,3.734970,-1.466532,-2.292687,0.662518,2.480699,3.767858,-8.473989,-7.832291,-8.757182,0.137232,-1.869457,6.079526,4.432235,-7.850968,8.071583,1.106633,3.485532,3.915631,-7.654661,0.328188,3.950189,9.430633,-2.650066,-9.422972,-4.382540,-7.286394,4.036191,-7.009070,2.509641,-8.682492,-3.593276,7.383877,6.350564,-7.222947,2.842112,2.214690,-7.264149,-6.472032,-2.156533,6.176229,5.293777,0.233630,4.224519,5.278442,6.794270,5.147615,3.385907,1.156094,7.981523,-9.908414,9.306057,5.261279,-5.980303,-0.899576,-7.211575,-6.715455,-6.827635,2.643572,9.362109,-0.297764,-2.318715,-2.169456,-5.245312,-4.893036,9.205555,9.904096,-0.237958,1.536485,-4.364756,-6.786049,3.541962,-6.514999,-1.883134,-3.776062,-8.913747,-5.195435,-1.935782,-4.538024,-5.157996,0.733069,-7.563138,-3.086308,1.695156,3.550671,-8.466576,5.321640,-0.206890,6.259913,5.694725,-5.770527,-8.620822,-3.378191,-8.571956,5.766277,3.314256,-1.701895,3.698973,-2.540228,-7.786604,9.942600,0.806430,4.018170,-6.624573,9.263125,-0.711661,-6.109012,-1.939351,1.484156,8.110388,-7.414314,1.763425,-8.601825,8.529247,-0.955217,2.544770,-0.145636,-7.954946,-2.818755,-7.214832,-1.792562,-3.324761,7.469312,0.328397,4.922461,-7.857368,4.297855,-1.085155,-9.470548,-6.419465,-9.593391,-3.908506,5.626046,-5.065356,-0.738756,5.266522,2.458028,2.827731,-4.745722,6.659270,1.757415,6.096106,-1.351296,8.838778,-3.473702,4.296815,2.303166,9.649594,-8.770646,-4.825446,9.958516,5.906378,5.156522,7.467320,3.734038,6.186844,-8.396717,8.292462,4.237087,-8.794604,-8.657105,-6.893545,8.102880,-5.801150,4.507897,-9.130340,-3.136754,1.994937,-5.416488,-6.035048,7.821059,5.505679,-4.991682,-5.457389,5.683292,3.380713,-7.456736,5.279033,-1.576023,5.968795,-0.514418,-4.685492,3.156231,0.022649,-3.080626,8.416708,1.598422,-5.182674,6.265025,4.473291,0.434046,9.520241,-8.636872,1.279601,-2.556356,-1.883435,2.437072,-4.443337,-2.600670,-2.387131,6.833454,9.317327,-3.008707,-9.073406,-8.678596,-7.819715,2.839556,-7.223139,-3.030827,-9.102052,-9.038284,-0.661284,8.084733,3.082320,-8.515220,-0.031233,7.675959,-6.450911,1.721758,-2.876996,9.995310,0.604243,-0.379938,-0.619228,-1.335243,1.978783,-6.282989,-7.013491,-4.325452,0.772845,6.591296,-4.938654,5.680630,0.135695,-8.853929,0.942662,-4.622828,-5.989827,-6.375143], dtype = "float64")#candidate|11590|(1024,)|const|float64
var_11591 = relay.var("var_11591", dtype = "float32", shape = (1680,))#candidate|11591|(1680,)|var|float32
call_11589 = relay.TupleGetItem(func_6222_call(relay.reshape(const_11590.astype('float64'), [8, 8, 16]), relay.reshape(var_11591.astype('float32'), [1680, 1]), ), 5)
call_11592 = relay.TupleGetItem(func_6226_call(relay.reshape(const_11590.astype('float64'), [8, 8, 16]), relay.reshape(var_11591.astype('float32'), [1680, 1]), ), 5)
output = relay.Tuple([uop_11584,call_11589,const_11590,var_11591,])
output2 = relay.Tuple([uop_11584,call_11592,const_11590,var_11591,])
func_11601 = relay.Function([var_11575,var_11576,var_11591,], output)
mod['func_11601'] = func_11601
mod = relay.transform.InferType()(mod)
mutated_mod['func_11601'] = func_11601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11601_call = mutated_mod.get_global_var('func_11601')
var_11603 = relay.var("var_11603", dtype = "int8", shape = (2, 9, 12))#candidate|11603|(2, 9, 12)|var|int8
var_11604 = relay.var("var_11604", dtype = "int8", shape = (2, 9, 12))#candidate|11604|(2, 9, 12)|var|int8
var_11605 = relay.var("var_11605", dtype = "float32", shape = (1680,))#candidate|11605|(1680,)|var|float32
call_11602 = func_11601_call(var_11603,var_11604,var_11605,)
output = call_11602
func_11606 = relay.Function([var_11603,var_11604,var_11605,], output)
mutated_mod['func_11606'] = func_11606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11845 = relay.var("var_11845", dtype = "float32", shape = (16, 2, 2))#candidate|11845|(16, 2, 2)|var|float32
uop_11846 = relay.log2(var_11845.astype('float32')) # shape=(16, 2, 2)
func_3139_call = mod.get_global_var('func_3139')
func_3143_call = mutated_mod.get_global_var('func_3143')
const_11853 = relay.const([-5.910683,-5.951120,-3.496880,3.679168,-9.223139,-7.849819,3.674634,-2.478317,-9.908444,3.197425,-3.632224,-9.344974,-7.535992,-5.072733,4.623973,-0.301473,-2.725251,-1.925743,-9.013782,-4.531812,3.759635,-9.922873,0.055600,2.090212,-3.320013,-1.416747,-8.389271,-7.862158,-1.676857,7.930030,-0.570823,7.599608,-1.821603,-4.103752,0.185895,5.226868,4.500032,6.718586,2.064446,-9.513970,6.446730,-6.509973,4.412470,-1.464057,7.257379,5.360291,2.361170,6.697488,3.923510,-8.858048,-0.356126,4.959009,-8.720351,-4.177555,8.602512,7.007037,9.851638,3.183348,4.760052,-3.827715,3.085160,-5.869986,-4.473191,-7.282132,2.159918,-0.233498,5.464662,9.339121,1.746556,5.172734,4.320875,6.659827,-1.851258,9.151963,3.350919,-3.929809,-2.044599,6.896062,-0.037828,-5.427451,4.790463,4.487959,-3.017458,-5.460557,-7.362676,-3.275108,-8.700775,-0.712100,-4.301207,-6.633859,1.065721,-1.016192,-8.146582,-9.384032,-9.478480,-0.534569,-8.552226,-6.464266,6.708341,-5.575405,-6.105479,3.715536,-0.688214,1.988817,7.047308,-3.639131,-8.713660,-5.818429,3.794084,-9.821981,9.911996,8.369060,-3.967859,-9.245169,-5.268183,-9.707912,-7.716304,8.756133,8.192433,0.849618,5.531306,-5.365753,7.736304,-7.151687,3.535530,-2.457084,2.932253,-5.976182,5.464784,5.417469,5.974835,-1.852006,9.712298,0.285256,-6.158123,-6.967956,-0.160977,3.724272,0.375947,-5.952629,-0.426870,-5.351998,-0.759905,-3.141212,4.762863,5.328256,5.090391,-4.167680,-2.394407,7.120966,6.744804,-6.769712,-5.155766,3.620024,4.969222,0.860718,-2.037672,2.051059,-6.978422,-8.339365,-1.068454,2.834441,7.636763,-4.324477,3.422684,-6.335835,7.640207,-8.035468,-1.794818,-0.338270,-2.778218,-9.815096,2.946792,2.540853,3.190126,5.709242,-0.771320,8.426347,8.475257,6.822530,3.993398,1.005842,-9.334691,8.439352,5.102006,-7.419363,5.607382,-2.345657,-9.108497,-7.041616,8.529295,9.212530,-1.057893,3.502418,3.232025,-1.527248,-7.749073,9.609985,-6.103872,3.735890,-1.563776,6.093227,-9.290017,-4.087242,7.909659,-4.893628,6.819340,-0.149931,-2.244173,8.414705,-8.020989,3.044376,5.441757,7.983584,9.035103,0.431433,-9.447515,5.376492,-7.909056,-3.637687,-0.528545,-7.834603,-2.184893,-5.146584,-6.824212,-3.959684,4.827395,9.483853,8.134536,-9.013735,4.813945,-3.765722,-4.652417,9.092270,-4.779212,1.650104,-0.058051,-1.949194,-1.757316,-4.731226,-4.238335,-1.584507,-4.138273,-8.008193,-7.063487,-6.241011,-4.243036,-9.344830,-8.888785,6.425355,9.613944,7.496277,-1.435065,-9.605928,-1.103625,3.487531,-6.841147,3.560515,2.767670,-9.911568,-9.360682,6.801182,9.747695,-6.095560,0.069854,-7.546755,-8.946804,5.326492,0.263335,1.131509,-4.524598,-4.558020,-5.282276,5.856473,2.916523,-4.157649,-2.715889,-8.985665,0.676369,0.299873,-5.174601,2.680478,8.546935,1.451243,-6.020923,4.013641,7.543273,1.211461,9.154885,1.438105,-2.082921,-6.798150,-1.349813,6.218039,9.183852,-8.631509,-6.696748,-2.702989,-1.207149,9.834897,6.796850,0.197565,-5.644651,-9.838411,1.366150,0.399763,5.890013,-7.030413,-2.445703,7.497762,-7.482263,-5.276948,7.422682,6.446063,-1.774276,7.579696,7.432053,6.999436,9.902374,1.404320,7.417760,7.599336,-5.036656,-0.787186,8.557649,4.090343,-7.973608,-5.293680,-4.650947,9.063745,-4.569443,-3.669070,-6.097202,-6.155648,-8.864246,-7.972885,-6.011121,-1.153971,-8.340471,1.784079,9.837830,1.886427,-0.225733,6.330565,0.867674,-1.383339,7.953596,6.010837,-1.865654,-9.086313,2.092177,-3.888493,-3.579033,1.008484,-6.375640,-0.717385,6.801497,9.052665,9.291804,-2.572036,8.663836,9.169944,-5.649553,-5.182864,-1.162345,3.345996,-9.808728,3.143911,-6.867871,2.970110,9.853100,-1.667151,0.169558,5.932690,0.238537,-1.069164,-4.017176,2.883442,-1.465542,3.359571,-5.958781,9.771961,-4.575962,6.878392,9.979520,0.432534,-6.969793,0.140820,5.616596,2.311000,-3.166740,-1.928929,1.565967,2.890300,5.821187,-3.734071,1.549899,-9.524610,-3.952405,8.587473,-8.862060,-7.003171,-1.108307,1.712774,-8.230842,-4.896277,-3.176770,9.915513,9.794145,4.308709,0.576691,-2.376881,6.044744,9.177904,5.811057,6.392074,2.597970,-7.270595,7.868616,-2.779210,-9.949245,7.005641,6.763199,-3.514672,7.599631,1.120707,2.593310,-7.141941,2.924746,-4.042915,-0.794452,-4.576148,-6.245435,8.765295,-3.890850,6.278168,5.197959,0.965074,-2.138800,7.720978,-2.197385,-6.702300,-8.547805,-0.968249,-8.091081,-9.361009,9.503004,5.318595,-1.016516,1.854815,-1.401073,3.739623,6.837060,-5.483874,8.415402,-7.449917,-9.975187,2.443885,8.673509,-3.056824,2.816802,-4.933384,-6.123662,-6.948650,-9.721911,6.922966,-5.506826,-0.966266,-2.773128,5.510282,-8.970263,1.547962,5.850614,-6.952264,-6.213272,-3.819175,0.457967,-9.991499,-3.331680,-9.472334,6.159843,2.916063,5.490975,7.222169,-0.110504,8.361864,-8.472419,-4.098567,6.053714,-6.472387,0.815834,2.253625,9.986092,-4.267799,-2.521083,1.792391,0.385064,-5.759038,-2.920367,-2.827294,-9.421815,-0.221415,-5.394943,-9.546912,0.853661,8.569774,-6.633419,6.898234,3.926847,3.381491,9.669066,5.131896,-4.261925,0.193371,2.293913,3.593903,6.884388,7.843645,-9.824766,3.196032,-1.253980,3.862083,-6.766092,4.664120,-6.297293,4.891711,2.647305,-0.979511,-4.232033,-7.647373,1.743987,-1.382926,0.823196,-2.595521,9.367058,6.981307,2.277975,-3.274760,-4.880806,6.547714,2.468285,-1.970586,2.701886,-2.560990,-3.749674,0.718473,-1.295411,-7.700166,4.847551,-1.835598,-2.783729,0.213936,-3.611502,8.878025,7.042656,6.181840,-3.252443,6.013476,1.645497,3.518174,-0.504994,7.278202,-4.099041,9.026943,9.522210,4.497034,1.044954,2.188273,-1.979652,-9.545521,4.215273,-1.506140,3.571824,5.791430,2.290310,-4.917728,1.017878,4.022868,0.555614,-9.314945,-2.105660,1.528007,-2.486168,2.149225,5.640805,-4.393142,1.034202,-5.109923,-6.269809,6.896506,7.781547,4.380882,-2.026500,-8.848171,7.481779,-5.949620,-8.175890,-0.394214,-0.486230,-2.103227], dtype = "float32")#candidate|11853|(600,)|const|float32
call_11852 = func_3139_call(relay.reshape(const_11853.astype('float32'), [10, 5, 12]), relay.reshape(const_11853.astype('float32'), [10, 5, 12]), )
call_11854 = func_3139_call(relay.reshape(const_11853.astype('float32'), [10, 5, 12]), relay.reshape(const_11853.astype('float32'), [10, 5, 12]), )
func_6641_call = mod.get_global_var('func_6641')
func_6643_call = mutated_mod.get_global_var('func_6643')
var_11857 = relay.var("var_11857", dtype = "float64", shape = (12, 70))#candidate|11857|(12, 70)|var|float64
call_11856 = func_6641_call(relay.reshape(var_11857.astype('float64'), [10, 6, 14]))
call_11858 = func_6641_call(relay.reshape(var_11857.astype('float64'), [10, 6, 14]))
output = relay.Tuple([uop_11846,call_11852,const_11853,call_11856,var_11857,])
output2 = relay.Tuple([uop_11846,call_11854,const_11853,call_11858,var_11857,])
func_11859 = relay.Function([var_11845,var_11857,], output)
mod['func_11859'] = func_11859
mod = relay.transform.InferType()(mod)
var_11860 = relay.var("var_11860", dtype = "float32", shape = (16, 2, 2))#candidate|11860|(16, 2, 2)|var|float32
var_11861 = relay.var("var_11861", dtype = "float64", shape = (12, 70))#candidate|11861|(12, 70)|var|float64
output = func_11859(var_11860,var_11861,)
func_11862 = relay.Function([var_11860,var_11861,], output)
mutated_mod['func_11862'] = func_11862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12015 = relay.var("var_12015", dtype = "float32", shape = (9, 3, 8))#candidate|12015|(9, 3, 8)|var|float32
uop_12016 = relay.sigmoid(var_12015.astype('float32')) # shape=(9, 3, 8)
output = uop_12016
output2 = uop_12016
func_12041 = relay.Function([var_12015,], output)
mod['func_12041'] = func_12041
mod = relay.transform.InferType()(mod)
var_12042 = relay.var("var_12042", dtype = "float32", shape = (9, 3, 8))#candidate|12042|(9, 3, 8)|var|float32
output = func_12041(var_12042)
func_12043 = relay.Function([var_12042], output)
mutated_mod['func_12043'] = func_12043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12394 = relay.var("var_12394", dtype = "float64", shape = (10, 12, 1))#candidate|12394|(10, 12, 1)|var|float64
uop_12395 = relay.log(var_12394.astype('float64')) # shape=(10, 12, 1)
output = uop_12395
output2 = uop_12395
func_12400 = relay.Function([var_12394,], output)
mod['func_12400'] = func_12400
mod = relay.transform.InferType()(mod)
var_12401 = relay.var("var_12401", dtype = "float64", shape = (10, 12, 1))#candidate|12401|(10, 12, 1)|var|float64
output = func_12400(var_12401)
func_12402 = relay.Function([var_12401], output)
mutated_mod['func_12402'] = func_12402
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12703 = relay.const([[[3,-9,-6,2,5,1,3,1,2,7,-3,-3],[-1,1,1,7,3,-2,6,1,5,9,1,-8],[-3,-9,9,-1,-4,-6,-8,-10,-8,10,-8,7]],[[2,-3,-6,-5,5,-5,-5,5,-9,-6,-1,-7],[-1,-6,7,-4,9,-9,-10,4,-10,10,-3,5],[-3,8,7,6,4,9,-5,-8,2,-9,-4,6]],[[10,-7,10,-7,-3,10,4,-10,-9,-10,1,9],[7,-6,3,-5,9,-7,6,-3,-1,-10,8,-3],[-10,1,1,5,-10,-9,4,-5,5,-1,6,-1]],[[6,3,-3,10,9,5,1,-8,-10,1,10,-6],[-8,8,-2,2,-10,1,-3,-7,10,4,1,-10],[10,6,7,-7,-10,10,3,9,9,1,8,-4]],[[-9,10,10,-4,1,-10,-3,-7,1,-4,-1,2],[-4,2,10,-10,4,-2,10,-5,-5,3,-2,-10],[10,-1,-10,3,-5,-5,2,-5,-5,-5,2,-10]],[[-4,6,5,-3,3,-8,-7,4,7,-9,5,9],[3,-9,-3,4,3,-5,8,-5,-2,-4,3,10],[-9,9,5,6,-2,-2,5,2,6,8,5,-6]],[[6,7,10,-9,8,-3,-8,8,-5,2,-6,7],[2,-7,9,-8,-5,-2,2,-4,-1,-3,7,6],[-2,3,5,-2,-7,5,-6,9,-6,4,4,10]],[[4,-4,-5,-4,-1,6,9,2,-1,-10,-10,6],[-3,5,10,-5,-7,9,3,10,10,-9,-4,-5],[-10,1,5,7,2,7,7,8,3,7,-1,-10]],[[-3,-2,-2,3,3,3,3,-7,-3,-7,-6,-6],[4,-5,-2,-8,5,-3,6,-10,-10,-6,-4,8],[-7,8,1,4,-1,2,5,-10,7,-7,9,-1]],[[-2,-2,10,-4,6,-10,-7,-4,-3,-4,6,9],[5,-8,5,3,-6,6,4,3,-3,9,-5,-10],[1,7,6,-5,-1,-5,-4,-6,5,8,-3,1]]], dtype = "uint8")#candidate|12703|(10, 3, 12)|const|uint8
var_12704 = relay.var("var_12704", dtype = "uint8", shape = (10, 3, 12))#candidate|12704|(10, 3, 12)|var|uint8
bop_12705 = relay.bitwise_xor(const_12703.astype('uint8'), relay.reshape(var_12704.astype('uint8'), relay.shape_of(const_12703))) # shape=(10, 3, 12)
output = relay.Tuple([bop_12705,])
output2 = relay.Tuple([bop_12705,])
func_12713 = relay.Function([var_12704,], output)
mod['func_12713'] = func_12713
mod = relay.transform.InferType()(mod)
var_12714 = relay.var("var_12714", dtype = "uint8", shape = (10, 3, 12))#candidate|12714|(10, 3, 12)|var|uint8
output = func_12713(var_12714)
func_12715 = relay.Function([var_12714], output)
mutated_mod['func_12715'] = func_12715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12834 = relay.var("var_12834", dtype = "float32", shape = (12, 12, 12))#candidate|12834|(12, 12, 12)|var|float32
uop_12835 = relay.asin(var_12834.astype('float32')) # shape=(12, 12, 12)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
var_12844 = relay.var("var_12844", dtype = "float32", shape = (1200,))#candidate|12844|(1200,)|var|float32
call_12843 = relay.TupleGetItem(func_3598_call(relay.reshape(var_12844.astype('float32'), [8, 10, 15]), relay.reshape(var_12844.astype('float32'), [8, 10, 15]), ), 0)
call_12845 = relay.TupleGetItem(func_3601_call(relay.reshape(var_12844.astype('float32'), [8, 10, 15]), relay.reshape(var_12844.astype('float32'), [8, 10, 15]), ), 0)
output = relay.Tuple([uop_12835,call_12843,var_12844,])
output2 = relay.Tuple([uop_12835,call_12845,var_12844,])
func_12849 = relay.Function([var_12834,var_12844,], output)
mod['func_12849'] = func_12849
mod = relay.transform.InferType()(mod)
mutated_mod['func_12849'] = func_12849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12849_call = mutated_mod.get_global_var('func_12849')
var_12851 = relay.var("var_12851", dtype = "float32", shape = (12, 12, 12))#candidate|12851|(12, 12, 12)|var|float32
var_12852 = relay.var("var_12852", dtype = "float32", shape = (1200,))#candidate|12852|(1200,)|var|float32
call_12850 = func_12849_call(var_12851,var_12852,)
output = call_12850
func_12853 = relay.Function([var_12851,var_12852,], output)
mutated_mod['func_12853'] = func_12853
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12932 = relay.const([[[8,10,-4,3,-10,-3,7,-6,8,5,8,6],[-9,-6,-7,-3,-6,5,2,5,-1,4,-4,2]],[[-6,7,4,-1,6,8,-10,8,-5,-7,-1,10],[-1,-9,-5,-5,9,-4,-5,7,-2,7,-7,-9]]], dtype = "int16")#candidate|12932|(2, 2, 12)|const|int16
var_12933 = relay.var("var_12933", dtype = "int16", shape = (2, 2, 12))#candidate|12933|(2, 2, 12)|var|int16
bop_12934 = relay.logical_xor(const_12932.astype('int16'), relay.reshape(var_12933.astype('int16'), relay.shape_of(const_12932))) # shape=(2, 2, 12)
func_11307_call = mod.get_global_var('func_11307')
func_11310_call = mutated_mod.get_global_var('func_11310')
const_12954 = relay.const([[-7.529852],[-1.415881],[8.173443],[1.641155],[-3.939267],[7.458703],[-4.713256],[-4.989992],[-5.264954],[4.808933],[7.198436],[-3.880438],[5.087773],[-1.098096],[-0.761137],[2.975944],[-0.298712],[-4.727253]], dtype = "float64")#candidate|12954|(18, 1)|const|float64
call_12953 = func_11307_call(relay.reshape(const_12954.astype('float64'), [3, 3, 2]), relay.reshape(const_12954.astype('float64'), [3, 3, 2]), )
call_12955 = func_11307_call(relay.reshape(const_12954.astype('float64'), [3, 3, 2]), relay.reshape(const_12954.astype('float64'), [3, 3, 2]), )
output = relay.Tuple([bop_12934,call_12953,const_12954,])
output2 = relay.Tuple([bop_12934,call_12955,const_12954,])
func_12963 = relay.Function([var_12933,], output)
mod['func_12963'] = func_12963
mod = relay.transform.InferType()(mod)
var_12964 = relay.var("var_12964", dtype = "int16", shape = (2, 2, 12))#candidate|12964|(2, 2, 12)|var|int16
output = func_12963(var_12964)
func_12965 = relay.Function([var_12964], output)
mutated_mod['func_12965'] = func_12965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13124 = relay.var("var_13124", dtype = "float32", shape = (6, 2, 9))#candidate|13124|(6, 2, 9)|var|float32
var_13125 = relay.var("var_13125", dtype = "float32", shape = (6, 2, 9))#candidate|13125|(6, 2, 9)|var|float32
bop_13126 = relay.power(var_13124.astype('float32'), relay.reshape(var_13125.astype('float32'), relay.shape_of(var_13124))) # shape=(6, 2, 9)
uop_13135 = relay.cos(bop_13126.astype('float64')) # shape=(6, 2, 9)
func_8545_call = mod.get_global_var('func_8545')
func_8550_call = mutated_mod.get_global_var('func_8550')
const_13149 = relay.const([[7,2,-9,9,-8,-4,7,8,-10,-2,6,8,-6,9,-1,9,-6,10,-2,5,-2,-10,7,-7,-3,-1,-4,5,1,9,8,-10,1,-10,-2,4,4,-5,2,-7,10,-5,8,-4,5,3,-5,6,6,8,2,2,-8,8,-8,6,-6,2,-3,5,2,-1,-2,3,-4,-5,-5,-4,-3,-2,9,7,-10,-9,7,-1,3,-6,-9,-4,9,1,6,4,8,-8,-3,4,6,-6,-9,-2,9,9,8,-2],[3,-1,-7,-6,-1,5,1,-7,5,2,2,-8,3,-8,-3,5,2,-2,-1,7,5,7,-1,5,-10,10,10,-3,-7,1,1,-3,2,-3,8,-6,-10,-8,-9,-5,-9,-1,2,9,2,9,-6,6,2,2,7,-2,2,8,-3,10,-9,-1,4,-2,10,10,4,3,-7,-5,-2,3,-4,-5,7,1,6,-9,-3,-7,-10,8,-6,1,7,-10,-10,-5,6,-3,5,1,9,-4,-10,-5,1,-6,6,10],[3,4,-5,-10,-9,5,9,9,-5,10,5,8,1,-3,-1,-2,-7,10,5,2,-2,-2,-5,9,-6,-7,-6,-7,9,4,4,-6,4,2,3,7,-3,6,-2,9,-8,8,-1,1,-4,-2,4,-1,2,-8,-9,2,-4,1,-5,-3,-9,7,4,2,6,10,9,-8,5,8,1,-8,-8,2,-1,8,-3,-2,6,7,-7,4,8,-9,-8,-9,-8,-5,-5,-4,9,8,9,-3,5,9,-8,-10,-4,9],[9,-10,-4,5,-1,6,3,4,-6,-8,-8,5,-9,10,5,5,9,10,2,3,-6,-3,-2,2,-5,-1,9,-7,-10,-2,-8,6,4,-1,3,10,-2,10,-4,-4,-5,2,-10,2,7,2,3,-7,3,-5,-3,-8,10,10,10,-2,10,9,-4,9,-5,1,8,6,5,10,6,2,3,9,8,10,-7,8,-10,-7,6,2,3,7,-9,5,-2,9,-8,1,-2,-2,10,2,-6,2,6,-6,-3,-8],[-10,6,-9,7,5,-3,-9,-8,6,-8,9,-4,5,6,5,-10,7,6,5,5,-3,9,-3,10,6,-2,7,2,8,-2,1,7,-2,-6,-6,6,-7,-3,9,2,1,-2,9,-4,1,-9,10,2,7,-8,7,4,7,6,1,5,3,-2,-3,-1,-4,9,-4,-5,-9,8,5,1,1,1,-7,-6,2,-5,6,-1,4,-4,1,3,-2,-5,5,10,5,-8,6,5,3,4,3,8,5,10,-3,5],[6,-4,-6,-8,6,5,9,-3,-7,-2,2,10,3,-3,-4,2,8,2,-10,7,6,9,2,-10,1,-1,-1,2,2,-10,4,8,-8,8,-1,-4,-8,4,7,9,5,10,-1,-10,10,1,4,7,-10,-9,-1,1,8,-9,9,-2,8,-10,6,3,-2,9,-4,7,1,-8,-1,-4,-2,5,-1,-8,8,-9,8,10,6,5,6,-5,-9,1,-2,8,-10,-7,-9,9,1,-4,9,8,-3,-7,-4,-10],[-7,-3,-8,3,6,-8,-5,4,6,-4,2,-2,6,8,6,-4,-8,2,-2,5,-6,-4,-9,-6,6,10,3,-5,-1,-10,-10,2,3,-6,-10,2,-2,-7,-3,-6,3,7,5,-7,-4,5,-1,-3,-10,7,2,6,-6,-6,5,9,5,-6,-9,-1,7,-8,5,-1,2,7,-1,-7,5,7,-5,-8,4,3,6,-8,-1,1,10,1,4,-6,-2,-2,-8,8,7,4,-1,-5,-2,-10,-1,-9,3,-3],[-9,-1,-3,7,-10,-5,-3,8,-9,-1,-8,-3,1,2,-1,2,3,10,-4,9,4,-3,-4,-10,-6,3,-1,-6,6,8,-10,-7,2,3,4,4,-6,4,-9,-5,5,-2,-4,-9,-4,-8,-5,-1,4,-7,-6,6,-7,3,3,1,-6,4,-1,10,8,-4,-7,-2,-9,-7,9,8,-4,-9,9,-6,-5,6,-3,-3,-8,-6,2,-6,-6,-7,-6,10,-5,8,-1,2,-3,3,-7,-7,-5,-10,2,1],[8,-2,2,6,-2,-5,9,10,6,-9,2,-7,-10,8,-4,-9,-7,-7,-6,-8,9,9,1,-1,-3,-9,8,-5,-7,-2,2,-1,6,-9,5,9,1,4,-9,8,-9,8,6,-8,8,4,-3,10,7,2,-7,7,-10,3,-10,-3,9,-6,7,-2,6,-5,-2,-10,4,-2,2,-2,-2,4,-5,1,-10,-3,-3,-4,-10,7,3,1,-9,10,-2,-6,7,-8,-10,-8,-6,-9,-5,-7,3,-5,3,-6],[8,-4,10,7,-3,-10,4,3,-9,10,-7,-9,2,7,-9,-8,10,-1,3,8,5,-8,7,10,6,-10,-4,3,2,-1,-6,-1,-2,-7,-10,-2,-2,-3,-6,5,-10,6,5,-4,-3,1,6,6,-2,-3,-7,-7,-7,-7,3,6,-8,-1,-2,-3,10,4,4,3,2,-8,1,7,-6,-3,-8,-4,1,-3,-10,8,8,5,-2,6,4,-3,9,-7,6,-2,10,3,1,4,10,-3,-6,8,9,-1],[10,-8,-4,2,6,4,-1,-7,3,-6,-7,-1,7,2,5,-9,-9,-6,3,-5,-3,4,6,-8,5,1,-3,5,-2,-8,-8,6,3,10,-9,4,4,9,1,10,-3,6,-3,-8,5,6,2,-3,-1,2,10,5,5,-7,-3,-2,9,-4,8,1,-9,-1,6,-5,-8,10,-4,5,1,6,8,2,-8,2,-10,1,10,8,7,5,-2,-7,-2,-6,4,-8,-1,-2,9,-7,6,6,-2,-4,-10,6],[5,-8,6,3,7,-2,4,-9,9,1,4,3,-4,6,-5,-5,8,9,-9,-3,6,7,1,-2,-2,6,-2,1,-6,-9,-9,-3,-10,-10,7,-7,3,2,10,4,6,-9,1,-4,6,9,-10,4,-7,8,10,-4,1,-8,-9,-4,-4,-5,2,-1,-3,-8,3,2,6,1,-7,-10,-2,-1,1,-5,-10,-10,-10,-3,-1,5,-2,-3,6,8,-10,4,-9,2,2,-6,10,5,9,4,-8,4,-5,-10],[-3,-6,9,5,-7,-7,-8,9,1,7,-1,-7,-9,1,-10,-7,-9,7,5,5,1,-8,9,7,1,-7,7,1,9,-10,-3,3,1,2,-4,-5,3,5,1,1,8,-4,3,10,9,10,-8,8,3,-5,-10,-1,4,-6,-10,8,-4,2,2,-7,4,7,-10,-1,-4,9,7,-9,-10,9,-10,5,-1,-9,-10,6,-4,6,-7,-7,5,4,-10,6,-6,9,2,-9,-2,8,7,-4,6,-4,-10,3],[-1,-9,2,2,-8,5,2,5,-6,-5,-6,3,10,-6,-2,-8,-7,-5,-10,-8,-5,-10,-1,-2,7,-10,-8,-6,4,-1,-10,1,-5,6,-3,-6,9,7,3,7,-9,-5,-9,5,3,-10,-4,10,-7,-5,-3,1,8,-2,-9,3,5,7,6,-7,-10,2,10,-5,8,-9,2,-3,-8,-3,3,7,3,1,-7,-10,9,-1,4,6,-8,3,5,-2,2,-1,3,-2,-3,-10,3,-5,4,1,-6,9],[4,-3,1,-3,5,7,-4,-6,4,-5,-6,1,-10,7,1,-9,-10,-5,10,-4,-2,2,-10,2,4,10,2,1,4,-8,-6,4,-9,-8,7,-3,3,-4,6,6,5,-4,-9,-9,-3,-10,3,-4,2,-3,-4,-9,-6,9,-1,3,-2,3,2,-4,10,-3,-9,7,-10,2,1,-10,-4,-8,-5,1,8,1,-7,-6,-1,9,-7,-1,1,3,-3,-8,4,-4,-6,8,-10,-5,-6,-5,1,4,2,-7],[9,4,2,8,7,5,-6,9,-4,6,-5,-6,5,-4,-7,2,10,-5,8,-8,-7,8,10,1,2,-5,-8,-3,2,2,10,-3,-1,-5,-4,-4,8,6,9,-3,5,-8,-10,8,10,-1,-3,3,5,-3,-10,3,10,7,7,10,9,-6,1,-1,3,3,8,-2,-1,5,-1,-9,-6,-10,-6,6,2,-4,-8,-6,-9,-7,-3,2,-3,5,-3,-6,-3,-3,-9,-6,-3,-4,7,1,8,-5,-6,-7],[3,-4,-10,-7,-7,2,1,8,8,4,3,3,5,4,-2,2,-7,-2,-7,10,1,-1,-9,6,-3,5,8,-7,4,6,-4,-3,-5,8,6,-7,9,7,8,-7,6,7,2,6,-7,3,-1,4,3,-1,7,4,-9,-4,-6,10,-7,-7,2,4,-8,-3,-5,-8,-7,7,-8,-2,6,3,-8,-6,-7,3,-8,1,6,-6,10,-1,-2,3,-1,-6,10,1,-10,3,1,9,3,-7,3,-9,-9,2],[-1,3,9,-3,9,-6,-2,-8,-3,4,8,-4,-9,6,5,1,-2,-10,-6,-7,-6,3,2,-2,-2,-10,2,-3,-8,8,6,1,-4,8,-5,-4,-8,10,-10,-4,3,-5,9,-3,-7,-10,10,1,-4,5,-4,10,-8,3,-7,2,-2,-2,-5,5,7,4,-9,-3,-6,10,-7,-5,5,3,-6,9,-2,-8,-7,6,10,-3,-9,-2,7,6,-4,-9,10,10,-6,1,-1,2,1,4,-2,-2,5,5],[-6,6,-3,-9,-6,8,-10,-10,7,9,-2,3,9,-2,-7,-8,1,3,6,8,2,6,4,-1,7,-2,2,-2,9,9,2,-9,9,8,5,-9,-9,-9,10,5,9,-6,-1,3,-4,-5,10,-9,5,6,1,-7,2,-5,-7,10,6,-8,-6,-6,-5,-7,7,6,3,-4,-9,7,6,-4,2,10,1,6,10,8,-5,10,10,5,-10,-8,-9,-10,10,-9,-1,-2,-4,-2,10,-10,2,8,10,5],[-10,6,-9,6,4,2,2,-8,2,-3,-9,-7,6,2,9,-3,10,10,-10,1,-2,9,-6,-4,-8,-1,1,7,5,3,-9,-5,-10,2,-5,-3,-5,3,-3,2,-4,-8,2,2,9,3,4,8,-7,3,3,-9,10,4,8,5,-10,7,-10,-1,-4,6,-6,-3,5,5,4,8,5,-7,7,-5,7,-9,8,-6,8,-4,6,-7,3,-9,-5,1,7,3,2,-1,9,-5,-1,1,5,-4,-3,2],[-3,1,7,10,-9,-8,-2,-9,-10,-7,-7,2,4,-3,-9,2,-5,1,-6,6,7,-8,4,9,-4,-6,-7,-1,4,-9,-8,-4,6,2,8,1,3,-4,7,-10,-2,-1,5,-9,5,-2,10,5,3,2,-7,-7,-10,-7,6,9,-4,-4,-2,7,-4,-10,7,2,5,1,5,-2,3,-6,-7,-7,-5,1,8,5,-7,6,-2,-3,-2,-7,-6,-4,10,-8,-4,9,7,-7,10,-5,-8,-2,-9,5],[1,10,5,-8,5,2,-10,1,3,-10,-9,-1,-8,-7,-7,-10,-8,-10,6,6,4,3,2,-1,1,9,8,8,2,3,-10,2,3,1,-9,-3,8,7,9,7,9,1,-6,5,6,1,-3,4,-4,7,3,-6,-5,10,-1,5,3,-9,-7,-10,2,-9,-4,-1,9,4,6,-4,5,7,3,5,-8,-6,7,-7,5,2,-10,-10,8,2,7,9,2,-5,-7,-8,3,1,-9,-8,4,-4,2,-5]], dtype = "int16")#candidate|13149|(22, 96)|const|int16
const_13150 = relay.const([-7.789766,7.429472,6.067427,-6.950484,-0.480011,-6.013272,-4.380111,-1.868021,9.095669,2.348503,9.275494,-7.415236,-0.605888,6.832881,-9.712505,5.354590,7.548951,7.670100,-3.333398,6.937201,-9.454297,7.633349,9.316547,6.458738,-1.626666,3.878259,7.329937,4.737787,-3.415423,7.557736,6.524108,4.375316,4.469964,7.460978,1.019183,-6.925322,6.281046,-5.592123,-2.973513,6.926865,-9.445382,-1.354947,2.243403,-9.797630,4.895016,-7.246815,-0.645187,2.012581,-1.956725,4.369640,4.569451,5.555519,0.224412,-8.529513,4.144431,1.327824,-4.402426,2.864390,9.684700,3.226606,0.356012,3.124349,7.154625,-0.137809,1.422415,5.838044,7.382154,7.938854,8.141630,-7.609963,-1.847971,-6.829553,-4.758179,-0.314370,8.639332,-0.119786,0.913074,-0.810038,-1.469411,3.555025,-6.297440,6.792982,5.900223,6.155520,-7.445524,-6.886808,1.274418,3.725232,-9.063388,1.161316,9.337167,1.252957,5.109807,8.191710,-6.445654,7.176884,-8.243095,-2.571416,-4.150294,-5.191619,-7.081461,1.043818,9.574107,0.392493,-2.839608,-8.475664,-5.512065,-0.886201,0.787719,5.123309,-2.837144,0.766951,8.911859,6.068423,1.904747,-9.432355,-7.760443,1.398752,-0.556599,3.560567,2.886281,-2.294338,3.476238,8.604903,9.409972,-5.520504,2.086617,-1.196792,-9.240011,-3.905981,1.485575,6.498183,-2.696311,0.310476,4.971988,7.178073,-0.860019,-7.752458,5.154515,1.626019,-8.338653,-8.339661,6.980326,3.977338,-3.051109,0.894385,-4.453773,0.849161,7.712929,-1.443314,-2.620969,8.629957,1.071283,-5.628966,8.120549,5.152173,-6.963268,5.916494,-1.280226,8.344212,8.783866,-9.018865,7.603025,-5.217017,2.848281,8.244992,2.027555,-0.954855,-0.948580,1.888173,-3.417998,1.592466,-3.416309,-3.922298,3.067754,-4.541724,-2.552355,7.850763,-1.236475,-5.163272,-6.465585,0.073931,-5.571672,-7.519866,6.254411,-7.893414,1.014522,-7.157801,4.409211,-6.016561,-2.624008,8.242675,-7.774353,-1.216655,-0.724441,-0.597535,-2.927181,-1.193389,8.935000,9.232841,-0.802464,9.320842,0.484133,-4.625918,-0.453090,-8.471128,4.487936,-8.019870,-2.698589,-0.120241,8.196050,0.405755,2.734846,1.978401,-8.996787,3.020486,-7.565042,-7.789238,-7.204365,-6.527462,-4.684279,2.369771,-1.124577,0.378173,-1.127160,-7.846260,-6.385380,7.226071,0.021738,-9.875261,2.066871,4.126622,-1.228873,5.428116,-9.828376,-2.413404,-7.362404,-8.151534,0.731661,4.943334,1.581533,9.921594,8.186983,3.587112,6.102246,3.990240,6.070668,4.707034,-3.404479,-4.698071,-7.041689,7.117267,-6.702021,-9.882263,9.623638,5.915595,3.101359,-1.483631,3.815352,6.524048,-4.697684,8.113662,3.796756,4.825864,-6.966873,-2.491662,-8.743202,5.123765,2.523266,-5.363564,-8.898337,-4.656257,4.185839,-6.392611,-4.397247,5.136469,-0.359970,0.987540,9.128695,-5.467120,-7.125559,6.375865,-2.215099,-6.336110,-7.666882,6.121465,-3.843117,-6.629431,-4.055466,3.810827,-0.165351,4.622698,8.459444,1.116626], dtype = "float64")#candidate|13150|(294,)|const|float64
var_13151 = relay.var("var_13151", dtype = "int8", shape = (1, 936))#candidate|13151|(1, 936)|var|int8
const_13152 = relay.const([6.666197,7.555452,-1.953239,-5.032825,6.422251,2.926147,5.899964,4.877102,5.207440,8.293502,-7.910275,-8.911988,1.928273,-5.387618,2.097798,-2.654305,5.141156,3.335053,6.814149,-4.098210,4.747904,4.365888,5.412611,6.097590,-4.507842,6.174390,-9.416969,9.676459,3.578898,5.581581,3.166326,6.390025,0.226777,-0.924346,-4.731439,9.124293,4.843601,-2.042825,8.484568,8.194013,0.685014,-4.196058,-1.239516,1.953581,5.050218,-9.253217,-2.108269,6.135236,3.150833,-1.519838,-8.590108,3.966452,1.959026,1.515864,2.326120,-1.509816,2.325247,1.946933,-4.193089,5.933464,4.099536,5.570621,6.934179,4.490310,-2.311419,-0.029578,8.135697,-4.260788,-9.533885,5.078455,-2.419875,-8.713385,5.074303,4.536319,-0.048736,0.121838,0.204656,9.043690,-9.458183,7.342305,-4.244763,8.105533,5.858843,-4.587206,9.089546,3.710781,8.970687,-6.645588,2.884998,6.945787,-2.523218,5.963675,7.305215,1.310310,3.633766,-5.742837,-4.096218,7.002101,-1.489383,8.535912,-4.168458,3.945598,-0.321821,-6.990795,-7.706594,4.383355,-0.516015,-7.329283,3.085290,0.009995,-6.314733,1.421601,-7.548532,-5.155477,-6.857913,-8.940021,-1.621887,1.183279,0.646652,2.176382,0.229890,8.881512,4.088687,6.934457,5.346621,-6.057418,-2.992924,-4.726787,-3.294320,4.636526,5.328192,3.996292,-9.315576,-0.268012,-5.490537,9.256990,6.744840,-9.331458,-5.723547,0.575163,-5.966204,1.719265,8.646563,5.405670,-1.520212,2.726131,5.241191,5.252865,4.511883,4.582268,4.523587,6.400818,3.684640,-8.463298,6.064793,6.058223,7.291956,-3.557359,2.794304,-8.610891,2.981724,0.914885,6.582180,-0.332750,-5.395004,-8.550295,-0.539232,-3.704012,7.954413,8.003405,8.729466,8.830825,4.427794,1.793299,2.051309,-2.103182,6.862454,2.321649,-6.172094,7.740006,-1.027203,7.714343,4.782561,-6.772892,-0.632861,1.466062,3.128432,-6.452298,3.400935,9.756072,5.890785,5.194541,5.743169,1.957847,-6.534243,-7.787974,5.650824,3.104030,-0.971164,6.947325,4.971255,-8.476126,1.213539,9.385237,-3.252933,-3.285778,-1.491942,2.909537,-7.601913,8.396599,8.824648,3.873261,8.714917,-8.996347,4.539778,-5.492773,-7.488194,1.490598,8.850138,-3.949080,8.663584,-9.226996,-6.949357,1.812308,-0.647920,7.808731,-2.651499,-5.875044,6.241227,1.595037,8.202050,1.505094,-7.529336,6.879983,3.990659,-5.704802,-3.803524,-2.164951,-9.829195,-0.384595,1.056143,-0.083959,-5.136491,5.192766,0.001453,-1.107041,3.332674,3.019151,-7.233906,2.898385,-9.694545,-2.455273,-3.047590,-5.692949,-4.527132,-6.020897,-1.331978,-3.043384,7.777503,1.791691,-5.036838,1.810225,2.535827,-5.755780,-5.182732,-0.542006,5.402343,9.897204,1.144131,-5.349459,-0.335326,4.260242,4.558669,-5.247214,-0.532078,-9.026204,7.358071,-9.530744,-3.401981,8.597210,-3.292881,7.719649,-8.775564,-7.190245,-1.486039,-3.712266,5.542178,-1.690418,2.217484,5.095653,-0.297243,-3.208173,-1.707829,-6.240994,7.192237,9.095554,4.146188,1.602436,3.015232,-1.309918,-1.809869,3.742071,-3.092719,0.449189,-7.876871,4.010763,-6.897317,-6.200631,-6.896569,2.021539,-5.465097,-1.120021,2.849850,-7.876834,0.142302,4.032494,4.001052,3.389463,-4.155549,0.252633,1.450621,7.773491,-8.720372,-4.242528,-0.920900,9.253570,-8.411193,8.415935,4.048602,1.835334,-6.075932,3.174095,8.319068,8.092491,1.206329,-5.513920,-0.424436,-6.754767,9.901870,7.524235,-4.144618,3.653353,-8.065946,-1.968571,-1.230625,-5.108138,-4.730254,-5.570744,-1.557668,0.304560,-3.420464,3.551497,5.242444,0.906270,-2.069308,4.823805,5.254449,-0.460993,4.707284,-9.889565,-0.287177,-0.593802,-6.287104,-2.782012,-1.481461,-7.975141,7.101179,8.185910,8.723584,4.258400,-9.602423,-6.784753,0.335091,6.583089,8.148740,-3.838781,9.436608,4.179591,7.082235,-9.620629,9.903669,-7.039055,-4.085190,-4.125300,3.422410,-0.874943,-6.555253,8.614456,0.061824,-2.445301], dtype = "float64")#candidate|13152|(390,)|const|float64
call_13148 = relay.TupleGetItem(func_8545_call(relay.reshape(const_13149.astype('int16'), [12, 16, 11]), relay.reshape(const_13150.astype('float64'), [294,]), relay.reshape(var_13151.astype('int8'), [936,]), relay.reshape(const_13152.astype('float64'), [390,]), ), 8)
call_13153 = relay.TupleGetItem(func_8550_call(relay.reshape(const_13149.astype('int16'), [12, 16, 11]), relay.reshape(const_13150.astype('float64'), [294,]), relay.reshape(var_13151.astype('int8'), [936,]), relay.reshape(const_13152.astype('float64'), [390,]), ), 8)
output = relay.Tuple([uop_13135,call_13148,const_13149,const_13150,var_13151,const_13152,])
output2 = relay.Tuple([uop_13135,call_13153,const_13149,const_13150,var_13151,const_13152,])
func_13169 = relay.Function([var_13124,var_13125,var_13151,], output)
mod['func_13169'] = func_13169
mod = relay.transform.InferType()(mod)
mutated_mod['func_13169'] = func_13169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13169_call = mutated_mod.get_global_var('func_13169')
var_13171 = relay.var("var_13171", dtype = "float32", shape = (6, 2, 9))#candidate|13171|(6, 2, 9)|var|float32
var_13172 = relay.var("var_13172", dtype = "float32", shape = (6, 2, 9))#candidate|13172|(6, 2, 9)|var|float32
var_13173 = relay.var("var_13173", dtype = "int8", shape = (1, 936))#candidate|13173|(1, 936)|var|int8
call_13170 = func_13169_call(var_13171,var_13172,var_13173,)
output = call_13170
func_13174 = relay.Function([var_13171,var_13172,var_13173,], output)
mutated_mod['func_13174'] = func_13174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13185 = relay.var("var_13185", dtype = "float64", shape = (13, 6, 2))#candidate|13185|(13, 6, 2)|var|float64
uop_13186 = relay.sin(var_13185.astype('float64')) # shape=(13, 6, 2)
uop_13194 = relay.sinh(uop_13186.astype('float32')) # shape=(13, 6, 2)
output = relay.Tuple([uop_13194,])
output2 = relay.Tuple([uop_13194,])
func_13220 = relay.Function([var_13185,], output)
mod['func_13220'] = func_13220
mod = relay.transform.InferType()(mod)
var_13221 = relay.var("var_13221", dtype = "float64", shape = (13, 6, 2))#candidate|13221|(13, 6, 2)|var|float64
output = func_13220(var_13221)
func_13222 = relay.Function([var_13221], output)
mutated_mod['func_13222'] = func_13222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13486 = relay.var("var_13486", dtype = "uint16", shape = (14, 15, 3))#candidate|13486|(14, 15, 3)|var|uint16
var_13487 = relay.var("var_13487", dtype = "uint16", shape = (14, 15, 3))#candidate|13487|(14, 15, 3)|var|uint16
bop_13488 = relay.right_shift(var_13486.astype('uint16'), relay.reshape(var_13487.astype('uint16'), relay.shape_of(var_13486))) # shape=(14, 15, 3)
func_6222_call = mod.get_global_var('func_6222')
func_6226_call = mutated_mod.get_global_var('func_6226')
const_13492 = relay.const([5.962336,9.414696,3.911486,8.755485,6.577230,1.912221,7.111428,0.608562,0.305202,-6.598805,-6.105811,-7.602154,-5.741508,-6.330547,1.457310,-3.297078,4.781522,-1.870042,9.162260,6.624013,4.198214,8.233407,1.806861,-1.519323,5.718714,1.116616,2.857925,-1.126025,5.714138,8.805860,-4.433886,4.405066,7.244824,2.377311,3.793141,-5.307597,8.800227,6.438412,-9.481936,4.229486,-7.353364,7.144839,-7.491408,2.516057,0.529371,-0.902898,-7.552449,5.515300,7.192661,-2.386055,5.874982,-0.534581,9.043428,-4.334475,3.299024,2.374485,-3.873644,2.353534,-6.911761,-1.901838,8.730024,-0.890768,-9.669615,-8.102563,-9.627271,-8.588435,1.722822,-7.477732,9.774032,-7.644487,2.695003,-6.284237,-4.458029,-3.951267,8.550259,-9.708561,-5.999895,-2.475951,6.782246,-4.598999,-2.158929,8.354133,3.282409,-3.072167,-6.610854,-7.134126,-7.155582,-0.857043,-6.604180,-9.612592,1.371805,9.754333,3.728905,6.807062,-2.912580,-3.066287,-5.762723,-9.706891,4.396579,-6.598074,6.677009,3.705094,-0.906290,-8.480619,3.862948,-6.429976,-7.660783,-6.707892,6.255172,-0.462907,9.998761,-0.319169,-7.900931,-8.457109,7.821818,-0.653712,7.557508,2.868850,2.080283,-4.879923,-8.764662,5.467155,-2.105021,-5.879637,7.759181,6.493944,7.273541,4.718409,-5.935319,7.105098,-4.683143,-6.951328,-9.442650,7.341716,-4.295514,-7.256162,-3.226978,6.205862,3.152732,1.616238,-8.221185,3.627829,-0.180793,9.285405,-0.167222,0.160126,-7.247787,-2.580061,6.737134,-9.978006,-1.846653,-5.774284,5.859160,4.051908,0.411843,9.357091,-6.031445,3.799224,8.622185,4.270983,8.612057,8.276041,7.023859,-6.618522,0.711226,-0.852471,6.645428,6.066769,-6.443432,6.839274,9.043124,0.498234,-6.626323,-9.800505,8.808926,8.193959,-6.053328,1.975605,4.259802,-8.367363,-3.958172,-8.760290,8.147608,-9.048616,-6.690061,4.320930,2.218217,9.093478,7.531226,6.363648,-1.836858,-6.601899,4.249568,-8.412989,2.633811,-0.193283,1.283693,-9.350402,-7.563695,-0.548870,-7.208187,-9.249701,-9.103958,2.736083,1.797523,-7.286404,-7.192291,2.326112,-3.994093,-8.618558,-8.637320,-8.405461,3.873734,5.385209,7.347751,-2.439628,0.740945,6.537485,7.948057,-4.434358,-4.624210,-5.646344,3.987179,-8.962802,7.789544,0.269697,2.463910,8.139294,-7.687227,-8.221706,-0.996830,-2.699052,7.366162,7.009538,-6.416974,-8.181214,-2.915232,4.311711,-7.337619,-2.269305,-5.111734,7.488163,7.252889,-9.490584,3.389921,4.515676,-7.611814,-5.650719,-6.050230,-0.112518,1.500827,0.583149,0.350866,1.470354,-2.851707,1.158538,9.052611,6.997275,3.281841,1.738246,-3.793752,-8.128958,-9.483665,4.441433,-9.162776,2.291600,-8.267574,4.141434,-4.475459,7.168366,-1.385215,8.225523,2.749660,-7.391766,1.354265,-7.901102,5.501542,-8.337346,4.669362,-5.951892,5.668833,4.341804,-9.875665,0.539413,5.196858,0.792360,3.772237,6.141900,2.480027,3.231636,5.181703,3.723381,-9.591623,-4.277685,9.764078,2.660470,1.271838,-7.450725,5.975774,-7.788797,-5.228712,0.474441,-0.616118,-0.305745,-0.451066,-0.639193,3.281484,-5.869803,8.699182,2.386616,0.550484,1.305631,9.048539,-9.860981,5.626014,8.044168,8.131066,0.187689,-3.483992,6.687563,1.382447,-8.133503,9.599594,-2.804431,-8.108904,4.377008,-6.850728,-1.976040,-4.741740,1.107448,0.771942,5.127030,8.289845,-2.524475,1.031012,-5.202954,-5.123906,8.786243,-7.283909,-0.483641,-7.427783,-5.953598,0.570197,-2.120759,-5.149168,7.778514,0.604131,-0.354475,-4.463565,-5.646499,-9.140997,-0.666740,5.043780,7.403873,-5.904023,-8.082634,7.650155,2.768423,0.704529,9.101852,0.942325,5.881488,8.759405,8.622565,6.985098,8.692615,6.932166,-7.257497,-6.079666,-8.486395,7.955096,9.187923,3.605951,6.226017,-0.785394,-4.605298,-4.072053,-6.947836,4.923555,1.432313,0.960593,8.659525,-7.123826,-4.182611,7.056665,4.633377,0.521213,0.412668,-6.858968,-7.534609,8.543790,-5.665885,-2.397445,-7.618492,7.019752,-2.791021,-5.238896,3.229122,1.685117,9.791804,-4.722615,-5.315127,9.640037,-9.491236,-0.663561,5.837415,-7.087333,5.182550,-1.743262,-6.266564,4.424200,2.959868,-0.026785,6.760914,-8.842636,-3.855365,5.752155,-8.003558,6.600052,-8.591205,7.311855,4.939716,-9.086249,9.879914,-4.948165,-5.056530,-7.664813,-2.257843,-9.319323,7.173217,-3.594299,3.046573,-3.538535,9.508056,-2.077824,6.469980,6.795776,3.857070,-5.715905,-1.284355,4.020986,-6.339040,-5.217942,-3.570016,-4.508144,8.900180,-2.657465,6.671384,1.662931,-4.953086,-7.892179,4.538709,-2.798230,7.573796,3.813430,-1.222128,-8.219657,7.311712,7.128513,5.211829,4.211773,-1.129866,7.541301,-4.827946,-3.709115,6.555329,-1.025461,-1.063676,3.752661,7.468524,-5.818611,8.752843,0.822142,6.491676,9.455053,-6.210112,-3.924165,-6.536760,-8.867803,-9.936626,1.636049,-2.255315,-1.783168,-8.909599,-6.508069,5.289516,6.560404,-9.960777,0.672389,9.490849,-8.684318,7.534763,6.680682,0.661971,-7.396150,-7.239788,6.005464,8.231822,-1.210500,5.251622,-9.869788,2.895639,-7.243473,-0.339417,8.253586,-8.242052,6.957404,-2.234455,8.303850,2.311817,2.028254,8.053984,-4.076227,9.637845,-1.948935,7.449248,4.246861,1.191421,-0.168977,0.088712,6.683220,-9.017010,8.532863,9.082485,-8.732579,-9.467789,6.192700,-2.419375,-6.768144,-9.623410,-8.123482,6.051063,-9.071196,4.522103,-9.191498,-1.717897,-1.756307,9.539344,-9.493115,-0.806741,7.325188,-9.121288,-9.995129,-6.910792,-9.075827,-3.369133,-7.958072,-3.902015,-1.919717,-6.418119,-4.602560,-4.122148,1.868274,-8.582040,1.034651,-5.459719,9.186858,8.381911,7.494806,7.094134,-8.942844,-9.364764,4.941381,9.739070,3.125241,7.069873,-7.016545,-6.016284,4.848227,1.168453,-0.458346,4.485117,5.883643,1.177854,-9.582771,-9.243793,-6.243798,6.728462,-1.133842,0.423997,-7.254689,7.262103,6.072610,-0.278117,7.360286,5.115509,4.624204,1.236592,0.628965,7.720106,7.608679,-8.088544,8.693706,-9.710654,-5.511918,7.541386,-9.964464,8.822813,-8.967934,-4.070257,-8.008141,2.939661,-5.056446,-8.359601,-7.061318,8.139433,1.579971,9.529739,4.777747,-9.500428,-9.152474,0.150915,4.406159,-5.456377,-0.129432,0.195525,-4.799466,9.072949,1.187550,-7.557335,8.370658,-3.850446,1.239927,4.885288,5.818338,-9.189718,3.735357,-3.335104,-6.114484,8.088729,3.584526,7.634275,8.871111,-9.905388,-8.522999,-2.360774,-8.036328,6.858239,2.616715,-0.204099,-0.387644,-1.575764,-7.075105,-8.999408,1.268193,-3.144311,-6.043073,-8.408007,-2.457723,0.174873,3.930794,-2.799348,-0.287436,7.581284,1.564044,-4.034765,-2.239092,1.575496,3.728578,6.898372,0.284639,4.212346,-6.907749,-5.170732,-4.702570,4.152878,8.915106,5.659545,6.464638,9.465951,-9.962383,2.691788,-2.419400,-7.573014,-5.644140,-6.979656,9.839552,-9.280716,7.343567,-8.366831,-4.377443,9.501774,1.507334,2.869460,2.348333,0.871789,-1.173442,-8.894062,-1.024956,-6.626911,9.965048,-9.229281,-0.182620,-6.879606,6.764969,8.808065,-4.152566,-3.300249,7.745152,9.883948,-5.677106,-5.762361,1.433581,-0.352909,0.410937,-9.884672,5.228143,7.699652,6.236914,-2.323000,-1.637371,-6.713486,-9.917214,3.354419,-0.807555,6.334732,8.389241,4.869812,-2.828070,-0.984706,-0.479829,-5.892848,-7.083164,3.446549,5.152996,-5.914701,9.689332,8.437312,8.286427,8.099742,6.557304,2.338098,9.236509,8.962346,-6.230895,9.563833,-8.371512,-6.573938,-6.835663,3.712540,5.771531,6.030838,-3.540822,8.189636,6.252246,-4.605448,4.182690,-6.830085,-0.494204,-0.591162,4.397072,-3.136202,-3.828751,-3.716131,-7.772724,-2.356511,-8.944020,3.715147,-2.367944,-6.649792,7.413278,-0.141903,-6.692300,8.321531,-3.606575,8.069067,-3.993161,-8.934685,8.182262,3.750156,-9.567246,3.008022,6.336094,6.026338,8.674055,-5.075926,-1.085793,2.217079,1.683785,-1.479280,1.613341,7.854432,5.740350,-0.913290,5.461367,-9.858912,2.668871,-1.446490,-9.093512,2.091916,5.910840,6.935479,-1.028149,8.186001,1.450433,-4.559575,6.955414,-8.984287,9.301724,2.258161,-4.157228,-8.250653,-7.706234,9.823211,-1.606580,-3.296071,-1.953700,-9.454140,0.482391,-1.313520,2.118500,7.587357,-5.384202,2.649170,-2.713365,-8.706803,-8.579339,-4.352499,4.187466,-6.698917,-3.222654,-0.665906,-9.983433,-5.594599,-5.180807,-4.070698,2.967171,-4.111912,-0.687702,0.425209,3.682084,9.911260,-3.377556,-8.971635,9.825286,1.575499,8.406361,-8.684416,-3.603490,9.899071,9.079789,-5.115939,7.301633,4.738171,-9.229673,-4.396329,-2.374770,-8.191165,-0.548284,3.275239,3.103443,3.623378,-0.704046,-8.528626,-5.603374,0.901537,8.869292,-4.491586,-6.175225,-6.590809,-8.078830,-4.696025,6.339462,6.210750,0.812045,2.388615,-9.446028,-4.454721,4.797933,2.069913,-9.347711,0.737679,4.722113,4.506653,3.868069,-3.382465,-3.217876,3.464821,4.009365,2.544701,8.145958,6.353957,-6.982659,-7.041555,-1.279174,9.490985,-6.516002,9.179927,1.311986,1.801748,-6.723379,-3.709426,6.244655,-8.558645,5.715921,9.116105,6.770986,-5.962784,-7.485419,5.012161,-2.535721,-1.312007,2.552106,-5.979655,-8.865105,-4.296109,-6.713846,1.829162,-1.767684,-5.960525,-2.433100,-1.728624,2.399713,2.112654,1.440269,-6.332080,4.427811,-1.035160,-8.704684,0.154476,-4.259290,-1.600751,9.210078,-6.781978,2.943853,3.037870,6.759292,4.157626,-3.045201,-4.369129,0.310552,3.357822,4.204082,-7.755813,0.451615,-0.344051,3.798251,-1.598544,2.196847,-0.369868,6.430580,-4.130724,0.188236,2.711177,-5.352519,3.063779,5.807641,-0.331741,-2.936034,-3.182835,6.236978,9.657620,4.659002,1.408538,9.727012,-5.391826,7.007717,4.167722,-1.084954,-8.770090,-8.145254,0.703762,-6.945484,1.874898,-1.807845,-0.511725,-5.126143,-0.514444,6.898148,-2.128880,9.647638,-3.074620,3.491449,8.987096,-3.963543,-3.327839,7.161378,-6.144388,-4.423823,-0.557048,-7.857805,-7.098466,-7.341601,-7.314403,-6.661881,-3.106025,0.484487,-3.308752,-1.676224,8.735081,0.220076,-5.356214,1.928325,-1.285837,-0.652473,-7.647456,-0.902606,3.845296,1.490594,-3.957635,1.321618,8.333757,0.522136,4.667335,5.370009,9.781054,9.398892,8.016413,-2.590548,-5.983816,-2.751343,2.712632,0.454752,5.894907,7.005871,-8.146481,9.900796,5.927448,7.968383,-8.703141,9.035214,7.934136,5.654508,6.010862], dtype = "float64")#candidate|13492|(1024,)|const|float64
var_13493 = relay.var("var_13493", dtype = "float32", shape = (1680, 1))#candidate|13493|(1680, 1)|var|float32
call_13491 = relay.TupleGetItem(func_6222_call(relay.reshape(const_13492.astype('float64'), [8, 8, 16]), relay.reshape(var_13493.astype('float32'), [1680, 1]), ), 1)
call_13494 = relay.TupleGetItem(func_6226_call(relay.reshape(const_13492.astype('float64'), [8, 8, 16]), relay.reshape(var_13493.astype('float32'), [1680, 1]), ), 1)
uop_13511 = relay.cosh(const_13492.astype('float64')) # shape=(1024,)
bop_13518 = relay.multiply(uop_13511.astype('int32'), var_13493.astype('int32')) # shape=(1680, 1024)
bop_13538 = relay.greater(uop_13511.astype('bool'), bop_13518.astype('bool')) # shape=(1680, 1024)
var_13544 = relay.var("var_13544", dtype = "float64", shape = (1024,))#candidate|13544|(1024,)|var|float64
bop_13545 = relay.equal(uop_13511.astype('bool'), relay.reshape(var_13544.astype('bool'), relay.shape_of(uop_13511))) # shape=(1024,)
bop_13553 = relay.minimum(bop_13518.astype('uint64'), bop_13545.astype('uint64')) # shape=(1680, 1024)
bop_13557 = relay.mod(bop_13518.astype('float64'), relay.reshape(bop_13553.astype('float64'), relay.shape_of(bop_13518))) # shape=(1680, 1024)
func_6641_call = mod.get_global_var('func_6641')
func_6643_call = mutated_mod.get_global_var('func_6643')
const_13563 = relay.const([-7.327278,-5.357446,2.056511,-8.044848,7.050036,-6.454620,-5.363892,0.898978,-9.772142,-0.767904,-1.979874,-2.447359,-7.419379,6.511018,7.096283,-0.012361,2.036231,7.068021,-4.080039,-5.812535,7.521255,-3.492477,7.125841,6.359424,-5.850285,1.047361,6.091902,-6.374244,-8.322891,9.474432,-9.420005,0.382864,3.396110,-0.183771,-6.343538,8.009842,-4.733158,6.715777,5.417956,0.673794,-1.627577,-6.850781,-9.068180,9.482456,5.519630,5.174164,-4.832899,9.091028,7.827729,7.553025,-9.174153,0.307825,-8.781275,3.430807,-3.299699,1.933192,1.763225,-4.704770,2.107665,-1.129475,-1.102025,-0.836678,-1.555901,-0.398781,-6.576461,9.293453,-3.944575,3.780656,2.756778,-1.576575,0.635349,4.052659,-6.520254,1.559956,3.505443,-4.780074,2.406238,8.002743,-2.289724,0.761343,9.068430,-9.475232,6.780048,1.530059,-1.536312,-8.654862,4.533511,-8.965081,0.281140,4.149933,9.171920,7.356858,9.779656,-6.871713,-5.157158,-4.810928,-3.571472,-9.471669,-4.167647,-3.770526,6.053528,-2.476722,-1.967045,-1.938003,-6.038516,1.119932,5.619972,-6.063538,6.948652,9.844615,-2.460430,9.696626,-5.716061,8.691956,0.964937,3.623394,-5.450386,-3.278594,-9.863789,8.172410,-9.997972,-3.767386,4.809396,-1.696374,9.280896,-9.187242,0.510796,-2.125557,4.306457,-9.488204,5.906798,-7.159641,-4.351877,9.903225,2.982439,6.612519,1.058182,-2.696963,7.206537,1.316228,-4.900754,-9.792660,4.974640,1.410274,-9.364049,-8.772571,2.322981,-0.530592,1.984623,-4.983259,-8.907025,-9.222995,7.236923,-8.105577,-6.843915,0.827690,4.819332,-4.001481,-5.114643,-2.274200,-5.133713,-3.142594,4.296541,4.879954,-9.875471,0.427561,4.781881,-9.071240,-3.043322,7.145034,-2.468740,5.959109,2.948315,0.036731,6.687756,-3.871561,-3.946767,1.020944,9.203779,-6.761570,-6.153112,-3.612279,0.314068,-0.216624,5.248895,-4.679418,-5.354356,-5.752547,-1.222851,5.525027,8.961906,3.984360,9.482728,7.260920,7.278166,-5.307834,9.901369,3.729674,-6.097208,9.325457,-7.275975,9.014368,2.069839,-4.116382,9.888226,-9.535279,4.336069,-8.632799,-4.706300,-5.817341,0.943082,-7.151343,6.996433,-7.712066,2.306177,-4.552174,3.751852,2.183434,6.289743,-7.173037,6.222310,6.109288,-4.366078,3.748386,4.725004,-9.741433,1.546677,7.890775,2.866988,-4.272063,3.299732,-0.234057,-6.017217,-9.906313,0.795136,2.519107,8.726369,9.004464,-8.762153,-1.098859,-3.467690,3.709305,0.585932,5.569738,-9.476833,-7.290025,-0.458694,-8.703360,-5.819895,-5.342179,-9.640302,-8.621395,-1.547757,8.775235,4.009322,-6.462094,4.810883,5.742398,-0.646991,2.439581,-3.119738,1.224001,-8.750252,9.925576,-7.550779,-1.940487,8.484159,-3.949120,-8.425044,0.804698,5.502041,-9.964692,6.126894,-8.262300,-3.448445,-2.817946,3.911493,1.509647,0.459288,-9.543183,-4.094382,-2.242640,1.566165,0.743953,2.129298,5.159520,-3.660678,6.252768,5.017664,3.776257,5.905684,-4.065242,2.489536,-8.420704,9.960620,-5.279178,9.584220,5.784196,3.765788,-2.966683,0.328551,-5.202895,9.957013,8.143872,3.063526,-8.812110,-5.134986,1.791112,-3.767264,0.736297,-1.860426,8.031280,-5.447784,-2.442316,8.849564,-3.019568,5.614428,-0.229395,-7.828713,7.961573,0.901873,-8.215592,4.060351,9.870415,6.169758,7.141825,6.105922,3.848431,9.250653,7.967025,6.461907,-9.954364,-2.097845,6.973842,-6.007242,-9.116521,3.770194,-6.905514,-3.374826,-5.742833,-8.635056,7.283245,0.633433,4.304657,3.466651,9.146539,2.159361,1.534383,2.473206,-8.594563,9.341773,3.114718,-0.910126,3.995473,9.453958,-0.427308,0.276376,6.215104,8.720710,-4.822466,-4.969253,9.151161,6.081727,1.059305,3.841065,-0.924650,0.541180,6.092346,4.441939,-5.170438,4.906295,-5.434329,3.280189,5.961122,0.866157,5.844556,6.394177,2.976290,1.912239,8.515282,-5.221581,9.742281,8.924862,1.115765,-9.193376,-8.671667,5.896487,-2.148685,-6.049779,6.929777,2.348201,8.122833,4.851914,5.542052,-5.767215,2.905948,3.859265,-7.422221,-6.170661,8.395871,0.144770,-5.216406,6.189466,2.802009,-4.651024,8.647103,4.079736,-2.127683,6.033827,9.498321,9.728083,-6.719831,-6.338541,2.348745,3.708635,6.948549,-7.144577,5.356947,-0.420470,-2.685940,7.028231,7.955014,-6.830790,6.481548,8.631189,9.160125,1.834255,6.969131,-3.315568,-7.103677,-6.189014,0.669175,4.363738,-2.723518,3.502676,-8.908848,-1.150577,-5.719562,-8.110458,-9.448713,-7.981325,-1.690687,6.699971,8.628144,-8.124116,4.672752,4.969831,-8.809757,9.914647,4.345705,3.784054,0.013581,0.151575,-0.850962,5.221690,9.783240,3.663328,-4.979025,-2.276037,-6.301347,9.165192,4.337143,-5.637185,-8.667469,-1.013444,5.046157,3.234419,3.803287,-8.612400,-1.997024,-1.376363,3.411267,4.596209,-4.558850,-3.330297,2.710871,6.044256,-0.024731,-7.922069,0.929455,-4.666581,-1.886694,-2.195597,-5.188876,2.866005,-3.791734,5.934722,8.027848,3.106590,-0.501285,4.048534,-3.034683,-3.690417,-0.684621,7.182725,6.724206,-7.478264,9.822076,7.401806,4.381428,7.062204,-1.745166,-3.137586,6.846339,8.902421,8.227208,8.072493,9.999750,-6.530331,-9.169038,-8.689647,-7.497217,6.239926,0.994545,8.543314,-8.982622,-6.382898,4.832058,-2.940947,7.652722,-1.274135,-2.031409,-5.387244,0.927204,-3.529240,-7.637368,5.665772,8.205697,-3.066755,3.409551,-5.731917,-3.127043,-9.650945,9.455683,2.647358,6.995066,1.514109,1.439040,5.509287,-3.266896,6.234215,-3.788628,6.154211,4.425590,-5.812155,-9.006362,-1.231093,-1.485089,-2.603077,-6.101343,-6.748070,-1.040017,2.085448,1.823031,-0.147733,-3.879677,-6.129444,5.585153,8.128830,1.361061,2.267192,-3.837382,9.449222,3.512663,-4.460238,4.546391,2.005442,-5.652319,1.049600,3.288435,8.729228,5.942327,2.892500,-6.255699,-5.266640,-6.947164,6.574257,0.827355,4.002776,-5.850619,-0.875804,-5.190305,8.519872,0.556282,-3.587810,8.296856,-3.038874,3.753679,3.334590,-8.341886,-6.101158,2.627559,4.889695,-9.764913,9.300468,-3.025572,-8.282285,8.226394,1.706837,-0.843330,-1.130808,-5.116960,7.205694,-5.927522,5.377057,-7.198777,4.121651,8.820924,-3.366770,-7.858088,-6.781351,-9.344138,6.958783,7.718383,-9.943143,1.580077,5.435820,7.069909,4.483311,3.105969,6.751681,-5.024018,3.598054,4.661562,9.492365,-4.071830,7.629436,-5.717293,-0.964241,0.920664,-5.144705,3.091010,-0.433767,-7.819589,-8.712738,-0.470567,5.924574,4.827478,-1.480226,-9.784372,-5.397048,-6.060364,7.079980,-0.413189,-4.504333,-0.616718,-2.482656,-2.541950,8.384285,1.422681,-5.909588,0.965021,-1.053657,-8.420008,0.491171,7.950213,9.596199,0.495719,-6.986425,9.323070,-7.859895,0.793585,7.131535,9.831030,-5.568469,0.045916,5.212399,-3.111219,4.194763,-3.141203,-5.795450,-5.477393,9.057474,-7.333885,7.179907,-0.169008,-3.310387,3.879445,5.144843,-7.482873,7.598277,-1.977363,-2.494562,-3.598834,-1.039168,-9.486210,-4.051669,-9.503013,7.554776,-8.145879,-4.728020,-1.331715,-2.505407,9.956752,-1.408617,-9.353959,6.496472,-9.395281,2.677296,0.563779,-0.357316,-0.134966,-1.102781,-3.907634,-5.964323,-0.654604,-6.247945,9.939821,-5.788768,-3.844057,-4.931165,-0.640286,-0.176829,2.546626,-3.430499,4.908464,-9.936089,6.352099,-7.643458,-0.227631,-2.923203,-6.415756,9.932009,-9.016334,-6.085055,8.610321,1.293916,-3.187571,-8.947017,6.339792,-7.762441,1.236849,8.907469,4.459857,7.553877,-7.572239,-1.377149,-3.811197,-7.378544,-7.717338,4.013434,9.336687,2.441180,-2.693404,7.190741,-1.070905,-5.440875,-5.568551,5.584328,-8.684982,-3.842521,-5.598639,0.853270,-3.864237,6.209137,-7.409222,-4.609168,1.732478,2.528211,-1.396287,-8.156206,-1.321967,-6.248163,-4.685367,-8.832527,-3.557175,2.791888,8.085127,0.844015,-0.400364,-2.185394,-1.476210,-0.601237,1.791521,9.633635,-3.660720,-9.120109,2.173572,9.786305,-2.797328,-5.251100,-4.084400,-7.291038,-6.102564,-2.077403,-1.536184,9.521785,7.301918,4.768938,1.460384,-4.303287,-9.100187,-2.869612,-5.914428,9.062414,0.495167,8.011619,8.298797,8.951583,-1.635890,-5.668569,5.016617,2.057312,3.308867,2.790150,1.667734,-1.235878,-2.649370,6.615020,-8.813048,-7.395633,-2.182654,-9.759809,9.922765,1.915454,6.166304,-3.355921,7.419429,3.247097,-9.868021,7.632699,3.754353,2.275223,-1.621450,-3.953079,2.563200,-7.544689,-2.957121,5.444697,4.894056,3.311273,-4.431484,9.077528,3.559205,-9.496096,3.789498,-7.821171,4.776953,-3.021390,-7.536909], dtype = "float64")#candidate|13563|(840,)|const|float64
call_13562 = func_6641_call(relay.reshape(const_13563.astype('float64'), [10, 6, 14]))
call_13564 = func_6641_call(relay.reshape(const_13563.astype('float64'), [10, 6, 14]))
func_7026_call = mod.get_global_var('func_7026')
func_7029_call = mutated_mod.get_global_var('func_7029')
const_13569 = relay.const(6, dtype = "uint64")#candidate|13569|()|const|uint64
const_13570 = relay.const([10,10,8,1,1,-9,-9,4,3,5,-8,-5,-6,4,4,-10,-9,4,-8,-7,8,5,3,9,5,-3,5,-5,9,-2,-3,7,3,-3,-8,-1,6,-6,-5,4,-9,2,9,6,7,2,2,-5,-3,-7,7,-9,-4,-4,10,-9,-9,6,10,-7,-1,8,10,-8,2,-4,-3,-3,-8,6,-9,10,5,5,7,4,-2,-1,6,7,-5,8,-4,5,-10,-1,-5,4,-4,-5,4,8,2,10,1,7,-8,3,5,-3,8,-1,-2,3,5,-8,-9,-5,-8,-10,-2,-4,-1,-2,5,-9,-7,6,-5,-7,8,7,6,8,-7,-4,7,-9,6,-5,5,6,6,3,-10,2,-10,5,1,9,-4,-6,10,1,7,9,-2,5,-4,7,-1,-1,-8,-6,-10,8,7,-6,1,4,-3,-9,-5,-1,5,4,9,-8,2,5,-10,-7,-8,5,-8,9,-2,-6,-5,8,9,3,-7,-4,-6,10,-3,-2,-10,2,5,-1,10,-4,8,-2,-3,-2,7,-9,4,-8,8,10,6,-6,-3,-8,6,-7,-3,1,5,6,9,6,9,-2,3,-7,-2,-10,1,8,-9,2,-4,-7,6,3,-3,1,-3,10,-3,-7,-9,-9,-4,-8,2,6,-2,-4,-10,-6,-6,-6,-7,8,-3,-4,1,-3,-10,9,-2,7,8,6,6,1,-8,4,-3,-5,5,-1,5,-3,-8,7,7,-5,5,5,3,5,4,7,10,-6,-3,3,-2,3,9,9,5,-5,7,-2,-5,-2,-8,6,10,5,8,1,6,-7,5,-3,10,-1,-7,7,-3,10,-9,9,10,-5,4,8,2,-7,3,-7,7,2,-2,5,-10,-7,5,8,-2,4,1,-7,9,-7,-3,7,-6,-3,8,4,-7,6,-8,5,-9,7,-3,2,10,4,6,1,-10,2,4,-7,8,-3,10,-8,7,1,-2,1,2,5,-9,-2,3,-9,10,10,-9,-6,-10,-10,-2,8,3,5,-7,5,-7,4,-1,-8,9,10,-10,-9,-1,-9,9,6,-7,7,-1,7,-9,1,4,-2,-7,10,-7,8,-7,10,4,-10,-6,2,-1,-7,-2,10,-8,-10,5,4], dtype = "uint64")#candidate|13570|(420,)|const|uint64
call_13568 = relay.TupleGetItem(func_7026_call(relay.reshape(const_13569.astype('uint64'), []), relay.reshape(const_13570.astype('uint64'), [14, 15, 2]), ), 0)
call_13571 = relay.TupleGetItem(func_7029_call(relay.reshape(const_13569.astype('uint64'), []), relay.reshape(const_13570.astype('uint64'), [14, 15, 2]), ), 0)
func_8037_call = mod.get_global_var('func_8037')
func_8041_call = mutated_mod.get_global_var('func_8041')
var_13580 = relay.var("var_13580", dtype = "uint64", shape = (96,))#candidate|13580|(96,)|var|uint64
const_13581 = relay.const([-2.798567,-2.208695,-2.782407,5.806230,-1.887796,0.117150,3.011034,3.837745,3.460088,-5.869698,-2.845342,1.915507,-9.405255,2.941198,-7.834085,0.476311,-1.399316,4.373865,-9.591188,5.928319,8.912759,-1.679307,-6.802304,5.123663,-4.566391,6.734490,0.224369,-3.963607,-4.342872,-4.685153,3.957548,6.810119,3.268041,-4.482237,6.485035,-9.289338,-0.529236,0.045493,1.602227,-7.667280,-1.950246,-9.858510,-3.317932,2.051457,8.816595,-1.955617,7.683602,-8.483061,-6.076569,-5.492459,0.042534,3.063273,8.828190,-4.506742,8.246314,8.618704,-1.261937,-9.133469,-0.748088,7.470061,2.636577,-5.990621,-7.298105,3.905645,2.008783,-8.886456,-8.553707,-1.603193,4.018943,-6.272573,-2.830204,-4.752416,-4.999660,0.456436,0.051432,-9.535396,-1.078548,3.129372,8.618696,-5.167146,0.137189,4.263661,-1.645563,7.704802,-9.286729,-5.710776,9.829000,-0.069244,3.031262,-8.932176,-4.775522,6.423493,7.168381,7.594985,1.240604,5.150340,5.623295,4.182282,5.359342,3.560733,-3.861098,-9.371073,-5.148693,1.618367,-4.885170,-4.231489,-0.220198,-0.771682,8.807882,9.846216,7.221703,8.192328,8.080931,-0.375684,2.342170,1.689910,5.303663,-8.695862,-1.306212,-0.967142,5.464507,6.578632,-2.169413,-9.112298,-5.753270,1.940708,-3.851266,-3.542429,5.213830,-2.486922,-4.831017,-7.518619,6.724591,1.827702,9.172940,7.131844,7.958460,-8.883185,-3.336319,5.364645,-4.832480,-2.236631,9.846853,5.232565,7.107810,4.069101,7.780477,4.900706,-8.539176,-2.832398,-8.330419,9.854141,-0.813996,-7.800978,-8.675768,8.671743,-3.877584,7.229820,-5.493326,-1.967317,7.233269,9.947731,3.753952,0.194800,-7.378761,4.311801,5.908853,-3.293707,2.927350,-1.106666,-0.410694,-6.845425,6.823659,-9.744493,-9.201132,7.685181,-7.535251,-5.209061,-2.367372,-5.750485,7.019583,1.767054,-8.120028,2.530844,-4.942171,8.681817,2.618033,6.204791,5.543632,0.338113,-7.652879,2.330095,3.016354,9.365167,-3.334800,-7.468572,4.462627,-7.733484,1.175827,6.770546,-2.966566,-3.542976,8.076430,-1.234556,6.838110,-2.619933,6.136068,7.239447,-4.061866,-2.319892,-0.268154,-1.466205,-9.860639,9.663803,-9.154679,-8.542583,6.346481,5.910876,-2.689709,5.717062,4.443989,-5.796056,-6.461697,5.894391,-2.877367,2.976980,4.516925,-2.955450,-9.595741,9.662253,3.557478,3.419330,8.508099,7.181448,4.985077,7.846294,-6.310026,1.004451,8.311148,6.175657,-6.192264,-9.805879,5.707239,4.014822,-5.554373,-0.225569,-9.465691,-1.809661,-0.511023,-5.903059,8.199968,-6.223682,9.133792,-8.202209,6.020640,-0.693379,-2.464588,9.850315,4.915096,3.063792,2.363581,6.888402,-9.427437,6.235265,4.156048,-2.772783,-8.387865,2.762786,-6.979543,-5.854694,4.927563,3.952585,-3.367699,7.033611,6.519138,2.115783,2.792532,8.271808,7.729317,-8.545612,-2.849312,3.172837,-5.130248,-8.971003,-6.406011,-8.254525,5.364942,4.288452,-3.196554,2.608110,4.746977,-2.712850,-9.959526,-3.177008], dtype = "float64")#candidate|13581|(294,)|const|float64
call_13579 = relay.TupleGetItem(func_8037_call(relay.reshape(var_13580.astype('uint64'), [8, 4, 3]), relay.reshape(const_13581.astype('float64'), [7, 42]), relay.reshape(const_13570.astype('uint64'), [420,]), ), 6)
call_13582 = relay.TupleGetItem(func_8041_call(relay.reshape(var_13580.astype('uint64'), [8, 4, 3]), relay.reshape(const_13581.astype('float64'), [7, 42]), relay.reshape(const_13570.astype('uint64'), [420,]), ), 6)
output = relay.Tuple([bop_13488,call_13491,bop_13538,bop_13557,call_13562,const_13563,call_13568,const_13569,const_13570,call_13579,var_13580,const_13581,])
output2 = relay.Tuple([bop_13488,call_13494,bop_13538,bop_13557,call_13564,const_13563,call_13571,const_13569,const_13570,call_13582,var_13580,const_13581,])
func_13585 = relay.Function([var_13486,var_13487,var_13493,var_13544,var_13580,], output)
mod['func_13585'] = func_13585
mod = relay.transform.InferType()(mod)
mutated_mod['func_13585'] = func_13585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13585_call = mutated_mod.get_global_var('func_13585')
var_13587 = relay.var("var_13587", dtype = "uint16", shape = (14, 15, 3))#candidate|13587|(14, 15, 3)|var|uint16
var_13588 = relay.var("var_13588", dtype = "uint16", shape = (14, 15, 3))#candidate|13588|(14, 15, 3)|var|uint16
var_13589 = relay.var("var_13589", dtype = "float32", shape = (1680, 1))#candidate|13589|(1680, 1)|var|float32
var_13590 = relay.var("var_13590", dtype = "float64", shape = (1024,))#candidate|13590|(1024,)|var|float64
var_13591 = relay.var("var_13591", dtype = "uint64", shape = (96,))#candidate|13591|(96,)|var|uint64
call_13586 = func_13585_call(var_13587,var_13588,var_13589,var_13590,var_13591,)
output = call_13586
func_13592 = relay.Function([var_13587,var_13588,var_13589,var_13590,var_13591,], output)
mutated_mod['func_13592'] = func_13592
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13813 = relay.var("var_13813", dtype = "float64", shape = (12, 2, 12))#candidate|13813|(12, 2, 12)|var|float64
var_13814 = relay.var("var_13814", dtype = "float64", shape = (12, 2, 12))#candidate|13814|(12, 2, 12)|var|float64
bop_13815 = relay.mod(var_13813.astype('float64'), relay.reshape(var_13814.astype('float64'), relay.shape_of(var_13813))) # shape=(12, 2, 12)
func_5717_call = mod.get_global_var('func_5717')
func_5720_call = mutated_mod.get_global_var('func_5720')
const_13831 = relay.const([[-9.457622,9.333400,3.351110],[-1.299051,-0.820260,6.765356],[-3.014790,4.224836,7.073335],[-1.267932,-9.623323,7.916835],[-8.133942,-0.933771,-6.925691],[-0.561378,7.890723,1.314009],[-6.264864,-0.748276,-2.345795],[2.498850,0.466033,4.731399],[-4.145528,0.751482,5.910324],[-1.894980,7.731023,1.183428]], dtype = "float32")#candidate|13831|(10, 3)|const|float32
var_13832 = relay.var("var_13832", dtype = "int8", shape = (936,))#candidate|13832|(936,)|var|int8
call_13830 = relay.TupleGetItem(func_5717_call(relay.reshape(const_13831.astype('float32'), [5, 1, 6]), relay.reshape(var_13832.astype('int8'), [936,]), ), 2)
call_13833 = relay.TupleGetItem(func_5720_call(relay.reshape(const_13831.astype('float32'), [5, 1, 6]), relay.reshape(var_13832.astype('int8'), [936,]), ), 2)
func_358_call = mod.get_global_var('func_358')
func_360_call = mutated_mod.get_global_var('func_360')
const_13847 = relay.const([-5.013977,-3.643685,-5.290445,6.718757,4.151693,-0.364966,5.463649,4.712900,8.127176,4.205607,-0.875835,-1.962772,-7.310355,9.927235,1.510336], dtype = "float32")#candidate|13847|(15,)|const|float32
call_13846 = func_358_call(relay.reshape(const_13847.astype('float32'), [1, 3, 5]))
call_13848 = func_358_call(relay.reshape(const_13847.astype('float32'), [1, 3, 5]))
output = relay.Tuple([bop_13815,call_13830,const_13831,var_13832,call_13846,const_13847,])
output2 = relay.Tuple([bop_13815,call_13833,const_13831,var_13832,call_13848,const_13847,])
func_13850 = relay.Function([var_13813,var_13814,var_13832,], output)
mod['func_13850'] = func_13850
mod = relay.transform.InferType()(mod)
var_13851 = relay.var("var_13851", dtype = "float64", shape = (12, 2, 12))#candidate|13851|(12, 2, 12)|var|float64
var_13852 = relay.var("var_13852", dtype = "float64", shape = (12, 2, 12))#candidate|13852|(12, 2, 12)|var|float64
var_13853 = relay.var("var_13853", dtype = "int8", shape = (936,))#candidate|13853|(936,)|var|int8
output = func_13850(var_13851,var_13852,var_13853,)
func_13854 = relay.Function([var_13851,var_13852,var_13853,], output)
mutated_mod['func_13854'] = func_13854
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14116 = relay.const([[[9.588020,-6.467783,7.129949,6.924683],[-6.707102,9.135192,-7.162622,-4.122005],[-1.370218,2.570050,7.235509,-6.623642],[-1.855949,3.550244,-8.174926,7.118085],[-1.709932,2.256621,-8.575758,7.480468],[-2.598817,2.406563,1.251290,3.857239],[6.229629,-0.040656,6.470537,-3.484622],[-1.414764,-4.198934,4.354059,7.230030],[3.251523,3.311221,3.803665,-3.215214],[-0.760358,-3.854972,-6.536228,1.707194],[-9.111617,-5.759145,-0.047766,8.176150],[-5.240040,3.022407,3.865547,7.312748],[-8.756856,7.374844,0.049942,0.399451],[7.381537,0.232686,-8.614644,-2.830810],[-2.113639,-9.062315,2.051279,-0.017978]],[[6.541068,1.371171,-3.660645,3.329004],[-4.024140,-6.786750,4.176199,2.898070],[6.016416,-5.511495,0.048752,4.409643],[1.754709,5.069512,7.348419,-0.280312],[4.674585,-0.421823,-1.889093,-3.191962],[-2.041980,-9.528111,6.112340,-1.371713],[-7.491218,-3.126475,2.714524,-4.988127],[7.448046,-7.559462,6.775800,1.851858],[-7.995756,-1.786355,2.159916,8.058423],[1.158015,4.598335,7.636707,7.680714],[-7.121469,-5.898573,3.160911,-1.822522],[-1.473615,-9.515053,8.464626,-2.255345],[9.093188,-7.740627,-7.309236,-0.765254],[4.283528,-6.269300,9.436247,5.040114],[1.383322,-1.719185,-6.609135,2.928259]],[[6.122149,-0.744324,1.979178,-3.794366],[4.697726,9.349467,4.285229,8.695752],[-4.092552,0.268302,0.403011,0.017011],[-2.860357,-0.060904,9.348648,4.900503],[4.883402,5.616276,4.902466,3.055173],[3.588955,-9.747868,-2.979437,4.728153],[2.310553,-4.630330,9.502716,4.208285],[7.544789,-3.097109,1.586073,4.843436],[9.743743,7.815870,1.379499,2.253317],[3.875924,2.720620,5.734630,-7.633845],[2.273495,-4.122031,7.882105,0.096557],[9.368179,3.469677,6.884951,2.729928],[0.790440,1.555844,4.257824,6.068194],[-9.656400,-6.901028,-5.956420,-9.183425],[6.108080,-8.248683,-8.392523,-7.308524]],[[-2.568459,-3.626978,-4.380252,-8.836336],[-4.557270,-1.373686,0.119441,1.633450],[-6.720569,3.244813,-1.172263,3.974853],[-7.220401,-1.213948,2.953176,-8.391155],[-9.744798,8.855189,-5.193795,9.673099],[-6.420383,-3.264554,8.922973,4.251117],[6.921075,-2.455180,5.259302,-7.092943],[-0.359537,-8.791747,9.015522,2.987934],[-6.161072,-9.271677,-5.207346,4.411404],[-3.338564,-6.884637,5.524627,2.469847],[5.607822,9.821219,0.059188,-7.373240],[-7.342725,3.234194,-2.946041,-4.812257],[-6.284897,6.480781,-9.583854,5.097811],[3.741751,-9.827729,5.875643,4.811857],[-8.560410,0.891569,-5.935905,1.490774]],[[4.436193,-6.395977,4.888172,-8.594704],[-7.782480,-5.940292,-7.242714,4.653211],[-9.078018,2.812286,8.364983,-8.952831],[1.546344,-6.450971,3.574311,-2.692134],[-6.070955,-8.239831,8.953825,1.800719],[3.616672,-5.250257,2.522433,0.746945],[-0.277889,-2.134239,9.526203,6.193598],[-3.927667,5.736301,9.889581,-7.811731],[-9.317124,0.675285,8.427024,3.685599],[-2.845603,6.237890,4.386603,4.341945],[4.911087,-1.326688,-5.159919,0.478800],[4.758005,1.097171,-5.566388,-4.133290],[-3.001581,9.474447,5.313741,-5.723665],[-3.041028,8.256128,-9.013222,2.544951],[-4.609714,3.574106,9.517121,-8.762769]],[[8.535019,7.949994,5.730973,-1.847370],[4.168888,-2.507819,5.181403,7.822319],[-0.616831,5.869403,9.468332,-9.748316],[-8.525771,0.481034,-5.011974,-1.889433],[2.823787,1.978113,-9.259205,-8.395192],[2.246421,-5.466424,-2.355928,1.001604],[-1.815004,4.896376,2.654632,-3.296286],[0.826372,-3.509926,2.464656,9.351980],[-8.927441,4.294946,0.932835,2.037742],[-4.654918,4.479668,3.404049,3.876198],[4.481522,5.299219,-6.614596,2.453714],[2.070336,2.822958,-5.963817,7.511809],[-4.361688,8.908388,8.818530,-6.625803],[-1.545393,-3.003955,-2.552203,-4.575247],[-8.541921,0.734987,8.258136,1.500797]],[[-7.475045,8.680430,0.979803,8.104397],[3.178518,8.814869,3.799180,7.075148],[8.805300,4.645393,9.601239,-8.942548],[-7.320185,1.324589,-5.833647,-4.039632],[0.285342,0.639854,9.315518,-4.508160],[-8.986292,1.204476,-8.995592,7.963121],[-0.042380,2.378951,-4.743870,7.475855],[8.336261,-8.173631,1.778550,-2.946080],[-8.014788,-2.094150,1.224777,9.642988],[-7.977039,1.944438,3.458033,6.901929],[-3.365277,1.278791,-5.861496,1.720366],[9.943334,3.165550,-3.173269,-1.784437],[8.606004,-1.788996,7.446589,-3.594421],[-5.411341,-0.105239,4.109897,7.062080],[1.686068,-4.185072,-5.824243,3.089701]],[[-4.399372,-8.238921,7.226264,9.900909],[9.069246,2.652759,8.033965,1.533942],[9.900863,1.782465,0.928125,-3.800338],[-7.789546,-0.968809,-0.709172,-0.958652],[-9.976023,-4.941540,2.145276,-1.372148],[3.517953,-1.717924,-6.326372,4.682657],[7.388316,-8.270675,8.669630,2.890288],[8.582101,-2.361656,-9.446873,-8.732298],[-6.658343,-2.758921,9.593702,-7.995309],[-6.740670,2.604694,-8.290259,-8.600292],[-6.676001,-2.694614,-5.696142,8.093331],[3.502729,8.687346,-5.115748,-1.395694],[-4.291614,7.189444,-6.481793,9.526916],[-1.602041,4.111428,9.065020,-0.085620],[-5.690806,0.090484,0.564656,-5.817603]],[[3.350026,-1.965286,-8.992054,-6.149034],[7.197781,-7.904394,5.393151,-0.056202],[-2.875683,4.909563,2.155579,0.173976],[-9.582767,-4.860436,5.056929,1.624949],[8.059461,7.425969,-2.008288,-1.389113],[0.864646,8.623896,-6.056064,-4.416541],[2.951524,-2.838674,6.771459,-1.424278],[6.769925,9.763422,-7.013304,4.628074],[-1.396344,5.866354,-4.974755,-5.283841],[-7.522332,-9.112276,7.415198,0.773349],[-1.470879,-1.508942,-6.164303,-2.308952],[0.447960,-3.519049,-3.486595,5.491261],[-1.560881,7.045683,3.912691,-9.310631],[-2.188025,-8.872242,9.086381,-0.711136],[-1.284855,-8.324330,-3.687178,-2.818287]],[[-6.649569,8.585621,-1.795134,-8.221067],[0.692417,5.401546,0.090820,-8.329450],[-8.289294,-0.179409,-5.834763,-2.469101],[5.128177,0.914177,3.097419,6.791323],[9.160345,-8.874186,-3.376538,-1.352530],[-6.807354,-2.038424,-7.235669,2.879955],[0.471013,-5.148629,9.920228,-4.852165],[2.595921,-2.454338,7.593354,0.016186],[-0.050301,-4.109294,-1.603584,-5.571487],[-5.815932,-3.294635,3.870853,-8.666093],[9.096471,-2.920925,1.463762,0.486737],[4.614833,3.087346,-5.273070,8.981532],[-4.544959,2.853357,-0.687273,3.591467],[-6.776379,0.766431,-1.514323,-3.678020],[8.244647,-8.615013,-9.694881,2.944951]],[[3.259596,-4.288199,6.772931,-1.880794],[-2.875334,-6.395942,6.254026,3.412869],[-7.588823,5.478469,-0.246037,-3.732543],[-3.468692,-1.817000,3.484412,-8.473168],[-7.491426,-3.432306,-6.932805,2.990930],[-6.578069,-1.173396,-2.183117,1.380330],[-6.545380,4.485745,-1.549615,-5.147963],[-3.354493,8.086210,2.268338,-5.745154],[5.567873,9.406972,6.137261,-4.439582],[4.930266,6.522221,-2.450228,-7.349248],[9.530920,-2.611239,7.985515,-3.973653],[0.254693,6.732096,-6.896940,9.278354],[-9.418161,9.029855,8.264537,3.967224],[-7.491034,-0.321794,5.626614,-6.157644],[-8.732549,5.603032,1.706700,4.266269]],[[2.041169,5.088447,-7.494137,0.620874],[-5.032093,-3.695903,-6.976301,-0.340663],[-1.532129,-0.295727,1.450359,-0.172724],[8.510499,5.293623,-9.529879,1.191869],[-9.945977,8.326138,5.232789,6.566075],[0.586270,-1.403072,-0.883022,1.696942],[8.282350,-0.947360,-5.084575,9.389945],[-7.997571,-9.110542,2.101205,6.104341],[8.723048,0.583952,6.585623,-6.635195],[-5.856824,5.001255,9.965864,-2.673991],[-2.737733,8.391590,9.053128,-6.559137],[0.354078,-2.269380,-1.600887,-7.896462],[-8.337421,0.694986,6.720302,6.688551],[-8.768839,-9.540069,0.516787,-3.632162],[3.992841,-6.775379,-8.811996,5.137428]],[[1.508696,8.846303,5.085578,0.283184],[5.079960,9.562194,-9.945724,-6.158628],[9.649336,-8.966247,9.278027,-2.897375],[-9.879270,-0.083047,1.717884,7.313411],[5.021357,5.658484,-8.797725,9.515404],[4.893726,-4.308124,5.718545,-0.828159],[9.760533,2.987456,0.987116,-0.791149],[-0.468954,1.149778,-7.403533,-4.506367],[1.829864,-8.434443,9.597188,2.538155],[-2.123423,-4.024905,-8.408701,4.160392],[-5.104613,6.299385,-8.347616,3.471556],[-5.797628,4.344890,2.257586,-5.233331],[5.303159,3.952230,-1.841617,8.992783],[-6.392017,-5.013655,-8.248718,7.901177],[-3.536318,-0.608853,-8.634318,7.969240]],[[-6.964668,3.854824,3.642043,-4.195251],[-4.405000,7.978856,-1.256540,5.948540],[-2.609139,-5.630145,0.024623,5.462699],[-5.849911,7.950867,-5.710279,3.356181],[5.329748,-9.609345,-0.894292,8.414683],[-2.429326,-3.884103,2.245754,-6.153651],[9.101038,-6.688313,-1.812775,3.753195],[6.253324,4.209086,6.687518,1.586158],[3.719434,5.813568,-2.799547,-6.905455],[1.416581,-7.541158,-3.374957,2.067780],[2.872278,6.764801,5.369976,-5.854374],[9.509856,-8.028377,-9.800214,8.474602],[-5.447745,0.887919,7.676877,5.791811],[-8.635991,5.677779,-7.834358,7.485249],[-8.859917,4.439183,1.390361,-6.335088]],[[2.111004,6.488087,-8.699365,1.729492],[-7.639230,-6.127812,-8.938144,-5.939015],[6.850022,-0.915189,-0.085157,8.494665],[-9.398217,9.772800,-2.585297,-2.337175],[-4.884217,0.378370,-6.485820,2.619693],[4.075465,-8.115446,-6.850784,9.820642],[-9.901953,7.260904,0.867625,2.524372],[-0.869320,5.827009,-3.256128,-5.172191],[7.178654,-7.164236,8.365043,-9.897366],[3.390311,-0.110675,-2.944123,5.466880],[0.328247,8.435686,3.554841,-9.791874],[5.235024,-7.239985,4.708208,1.760073],[-9.494493,-4.933643,3.285874,-5.343263],[8.527744,-7.730960,-8.024554,-8.175517],[0.422185,-2.077566,-4.788570,-7.544764]],[[-6.189597,-6.382099,5.945486,9.131568],[8.169594,8.970759,-5.867306,0.948892],[7.940512,0.156147,7.180170,4.892264],[-9.834510,7.779453,0.348296,-5.312539],[-6.492669,7.391924,-5.387906,8.766343],[7.375264,9.060067,-1.369021,6.229105],[-5.889065,-8.242544,0.526444,-2.275034],[4.256547,-1.373805,9.350266,5.896947],[6.333009,-6.924344,0.404272,1.302482],[-7.869081,-4.784662,1.505935,-6.485683],[1.943781,0.974020,9.258114,-8.017407],[7.514050,4.811312,4.402755,-5.824140],[8.432481,3.544279,-6.168911,1.289813],[0.462615,-9.292278,-5.536871,-7.261353],[9.535156,-8.366209,-4.314430,7.335669]]], dtype = "float64")#candidate|14116|(16, 15, 4)|const|float64
uop_14117 = relay.tan(const_14116.astype('float64')) # shape=(16, 15, 4)
uop_14123 = relay.cosh(const_14116.astype('float32')) # shape=(16, 15, 4)
var_14125 = relay.var("var_14125", dtype = "float32", shape = (16, 15, 4))#candidate|14125|(16, 15, 4)|var|float32
bop_14126 = relay.logical_and(uop_14123.astype('bool'), relay.reshape(var_14125.astype('bool'), relay.shape_of(uop_14123))) # shape=(16, 15, 4)
output = relay.Tuple([uop_14117,bop_14126,])
output2 = relay.Tuple([uop_14117,bop_14126,])
func_14131 = relay.Function([var_14125,], output)
mod['func_14131'] = func_14131
mod = relay.transform.InferType()(mod)
var_14132 = relay.var("var_14132", dtype = "float32", shape = (16, 15, 4))#candidate|14132|(16, 15, 4)|var|float32
output = func_14131(var_14132)
func_14133 = relay.Function([var_14132], output)
mutated_mod['func_14133'] = func_14133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14230 = relay.var("var_14230", dtype = "float64", shape = (16, 13, 11))#candidate|14230|(16, 13, 11)|var|float64
uop_14231 = relay.sqrt(var_14230.astype('float64')) # shape=(16, 13, 11)
const_14249 = relay.constdtype = "float64")#candidate|14249|(16, 13, 11)|const|float64
bop_14250 = relay.add(var_14230.astype('uint64'), relay.reshape(const_14249.astype('uint64'), relay.shape_of(var_14230))) # shape=(16, 13, 11)
uop_14253 = relay.sin(uop_14231.astype('float64')) # shape=(16, 13, 11)
uop_14267 = relay.rsqrt(var_14230.astype('float64')) # shape=(16, 13, 11)
func_6752_call = mod.get_global_var('func_6752')
func_6756_call = mutated_mod.get_global_var('func_6756')
var_14284 = relay.var("var_14284", dtype = "float32", shape = (840,))#candidate|14284|(840,)|var|float32
const_14285 = relay.const([-9.448158,-4.567669,7.647575,-4.582745,-5.720054,6.429887,7.734219,-1.270223,4.893283,5.256072,-4.574263,-7.996175,-2.733858,-0.343492,-2.400373,9.025694,0.545342,-7.818710,-4.052374,-8.298265,1.856498,0.090017,1.175075,5.370727,-9.171301,4.441966,-1.639428,9.221448,-7.436096,-9.093610,7.791071,1.519814,4.216051,-5.729620,-1.918904,8.519391,-0.083035,-5.017427,-8.506285,-8.278521,-7.785164,8.582203,5.512359,-2.510162,-2.783918,-6.500959,-0.436155,-4.069284,6.311237,0.285316,9.486605,-6.318480,-0.678360,2.511159,-6.063739,9.453415,4.683906,9.290858,-8.593615,-8.046390,-5.030041,-5.790418,-8.919297,-7.580922,1.281231,1.622042,-4.520656,-6.749599,-6.257442,5.308412,9.254004,-2.647539,7.183265,5.131400,5.085084,-3.556743,2.105621,-3.469994,6.792913,8.092030,-3.560864,8.610000,-1.521353,5.513038,-5.173701,9.675731,-9.257335,-0.106813,1.612452,0.869070,-8.034675,-4.958651,-2.467667,1.741931,-7.963181,2.068988,-0.475165,2.166608,-4.054899,1.185589,-9.787668,3.180960,-0.493175,-4.090614,7.863962,-0.110066,-4.402658,8.704783,7.777619,-0.056459,-8.158978,6.387122,2.754697,7.957187,9.859970,-6.598934,-6.737514,-4.721333,0.905818,-1.651786,-8.615131,-4.003245,-1.880614,-7.878005,4.578132,5.162462,-7.966187,-8.910551,8.914651,6.543071,-1.706454,-5.441214,2.441483,-1.302977,-9.049991,-1.460854,7.746525,4.619124,-1.741215,-2.795833,-3.273920,8.220159,-9.136988,-8.018796,-3.984937,-0.608060,4.497706,4.714100,-0.208962,-0.660085,-1.822746,0.079125,6.088199,7.570915,-9.665214,5.296404,9.594605,1.500216,-2.415895,-2.897653,-8.648719,-1.026743,8.558576,-4.635525,7.326307,-5.108556,1.687225,5.843364,-6.920625,0.783583,-6.209451,-1.388437,6.148866,9.585356,4.004182,-2.860051,3.548320,-2.756140,-6.915763,-8.302240,5.544763,-2.108509,-3.564135,0.846213,-0.489641,-3.694002,-6.413269,5.584714,-7.656253,1.378534,-9.195879,8.907247,-6.590437,-3.531536,8.120397,-8.213562,-4.058146,3.935771,9.816123,3.412412,3.092523,-3.848158,-7.700397,-2.407172,0.448865,8.784348,9.119026,3.641412,-2.372952,8.035074,-5.573150,-5.727647,-9.447973,3.627373,-9.645857,5.491091,-6.151247,3.226750,1.312464,-5.906114,-1.697989,-2.585219,-0.780477,7.708726,-7.546653,-3.708733,8.763846,9.538263,0.484012,0.100714,5.813421,3.998018,-0.679941,2.370928,-7.325408,-4.947183,6.317263,6.147903,-2.023151,-4.814399], dtype = "float32")#candidate|14285|(240,)|const|float32
call_14283 = relay.TupleGetItem(func_6752_call(relay.reshape(var_14284.astype('float32'), [5, 12, 14]), relay.reshape(const_14285.astype('float32'), [240,]), ), 1)
call_14286 = relay.TupleGetItem(func_6756_call(relay.reshape(var_14284.astype('float32'), [5, 12, 14]), relay.reshape(const_14285.astype('float32'), [240,]), ), 1)
func_394_call = mod.get_global_var('func_394')
func_398_call = mutated_mod.get_global_var('func_398')
const_14288 = relay.const([-4,4,7,-2,-6,2,-5,9,-2,-10,4,-3,7,1,1,-2,-4,-1,-2,7,5,-6,-8,-2,5,-9,2,-5,5,-1,-9,3,1,-6,7,5,-5,-2,-5,-5,8,9,-6,-1,2,9,-8,9,-6,-4,-10,-5,-9,-10,-3,5,9,-5,10,-5,-9,8,-7,-7,-1,4,-2,-8,7,-5,3,4,-8,8,-5,10,7,1,4,7,-1,-9,-1,5,-3,8,2,9,-1,8,9,-9,-6,2,-8,-5,3,3,-1,2,9,-1,6,-3,-4,-10,-8,1,9,6,-4,8,7,1,-2,-3,7,-5,1,-7,-8,-9,-7,-2,4,6,3,5,-7,-7,1,1,-3,8,-2,-8,-3,-9,-7,-9,-3,9,8,5,2,6,1,9,2,7,-4,6,-1,-10,-10,-9,3,-6,-4,8,-2,-7,-10,8,-6,5,9,7,-8,8,3,10,7,-7,-8,7,9,-4,2,8,6,-6,-7,-7,-8,-5,-4,9,3,-4,-10,3,-7,-8,-9,-5,-2,-4,-3,-7,7,2,-9,5,-6,4,-2,-7,4,-7,2,9,-2,4,-5,-4,5,4,-8,7,-1,-2,-6,3,-6,4,-10,-1,-8,-6,8,-3,-10,6,-9,-4,3,-3,-6,-10,5,-10,7,-9,-8,5,-7,-8,7,-6,8,7,5,2,-6,-6,8,-8,-7,9,-4,-3,5,9,-9,8,-5,1,-5,-3,-7,6,3,10,10,9,-4,-6,-8,-10,-10,-4,-3,4,8,-3,-6,-10,-2,1,10,8,6,10,9,-1,-8,3,-2,1,4,-6,-10,1,9,-4,4,2,5,4,-3,2,-3,-3,2,6,-10,8,3,2,3,-10,9,9,-5,8,9,9,5,-7,-8,6,-7,7,-6,-1,-8,-6,-4,-3,-9,7,2,-1,8,5,3,3,8,2,-3,-2,6,10,-4,-9,7,-2,1,-6,-1,4,-4,6,1,7,10,6,9,6,-10,-8,-10,-4,4,-10,4,-9,-5,10,2,9,-7,8,1,-3,8,8,2,10,5,-10,-4,-7,5,-4,-7,9,-7,1,-10,1,-6,7,-2,-5,-7,-5,-8,-1,-2,-10,-7,2,-5,-6,-9,-6,-7,-6,-1,7,8,8,-4,8,3,4,6,-8,3,5,-10,-9,-3,-5,6,2,-3,1,-1,-3,7,-6,5,2,-5,-2,-10,-1,5,-9,7,-4,-4,-10,-4,-9,2,3,-9,-7,-4,1,-7,-8,8,3,7,-10,4,5,-2,-10,10,-2,-8,3,-8,-5,7,-9,-1,4,2,10,-1,6,9,-8,9,8,-10,1,-5,5,2,-9,-6,2,5,4,6,1,-5,-4,2,-6,-5,2,-5,-4,-3,-3,-7,7,-6,-10,-10,-8,4,3,-8,-8,-6,-4,9,2,-4,1,8,3,-10,8,6,6,10,3,8,2,4,-7,-6,3,1,-9,-3,-7,-5,-2,1,-10,9,10,7,-1,7,-3,4,3,1,8,-6,4,10,-6,-6,-3,-2,-10,4,-1,9,4,-2,-1,-2,-5,-4,2,7,-4,-6,7,7,-8,-9,1,-5,-1,3,9,1,-4,3,6,5,2,-6,-1,6,-3,10,-3,9,3,-6,-7,-6,-1,-10,10,8,9,3,-6,-9,4,-2,-8,2,5,4,4,-7,-1,-1,-4,-7,2,5,8,6,-5,10,-1,5,-10,-10,-10,-9,-5,6,-1,4,-10,1,3,10,6,-3,4,-3,-8,-9,1,3,-2,5,9,-9,6,-9,-5,-7,10,-6,-10,9,1,6,7,7,-8,5,10,8,-1,-5,7,7,-3,-2,-3,1,-8,-7,-8,-6,-5,-4,4,2,-1,2,-10,5,-6,-8,-5,-5,6,8,6,-10,5,-7,10,-4,6,-8,9,-2,2,1,7,-10,8,8,-4,-5,4,9,1,4,-1,4,8,2,3,7,1,-6,-7,-5,3,-3,-3,-9,-6,-4,5,-7,-3,3,6,8,7,-8,-8,-7,-4,8,-1,-4,1,-5,3,9,5,-3,-2,-8,-7,-3,-1,6,9,3,-10,-10,-4,-7,-1,4,-2,4,-10,-3,1,1,-8,-7,10,8,8,1,5,8,8,-9,-1,-6,-7,5,7,-10,-3,-2,7,-3,10,-7,-5,10,-9,6,3,-10,-1,10,10,-2,5,6,-6,8,-2,-2,10,-2,2,-8,10,-7,2,8,7,7,-6,5,1,-1,-8,1,6,8,1,-6,5,-1,-3,1,1,-2,-2,-10,-10,-7,5,-8,-1,-10,4,3,-1,6,-3,4,6,10,4,-2,-2,-5,-7,7,-9,10,5,1,-8,-10,6,5,-1,-2,7,-9,3,4,-7,5,10,-9,9,-10,9,-9,5,8,1,9,6,-4,4,-6,-1,-8,8,-5,-7,5,-7,2,-10,-8,-4,6,-6,6,10,-2,-5,-1,8,-2,-1,3,-1,9,-7,2,-5,1,1,-1,1,2,-4,1,-9,6,-9,-9,4], dtype = "int8")#candidate|14288|(936,)|const|int8
call_14287 = func_394_call(relay.reshape(const_14288.astype('int8'), [13, 9, 8]), relay.reshape(const_14288.astype('int8'), [13, 9, 8]), )
call_14289 = func_394_call(relay.reshape(const_14288.astype('int8'), [13, 9, 8]), relay.reshape(const_14288.astype('int8'), [13, 9, 8]), )
output = relay.Tuple([bop_14250,uop_14253,uop_14267,call_14283,var_14284,const_14285,call_14287,const_14288,])
output2 = relay.Tuple([bop_14250,uop_14253,uop_14267,call_14286,var_14284,const_14285,call_14289,const_14288,])
func_14295 = relay.Function([var_14230,var_14284,], output)
mod['func_14295'] = func_14295
mod = relay.transform.InferType()(mod)
mutated_mod['func_14295'] = func_14295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14295_call = mutated_mod.get_global_var('func_14295')
var_14297 = relay.var("var_14297", dtype = "float64", shape = (16, 13, 11))#candidate|14297|(16, 13, 11)|var|float64
var_14298 = relay.var("var_14298", dtype = "float32", shape = (840,))#candidate|14298|(840,)|var|float32
call_14296 = func_14295_call(var_14297,var_14298,)
output = call_14296
func_14299 = relay.Function([var_14297,var_14298,], output)
mutated_mod['func_14299'] = func_14299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14591 = relay.var("var_14591", dtype = "bool", shape = (2, 15, 11))#candidate|14591|(2, 15, 11)|var|bool
var_14592 = relay.var("var_14592", dtype = "bool", shape = (2, 15, 11))#candidate|14592|(2, 15, 11)|var|bool
bop_14593 = relay.logical_or(var_14591.astype('bool'), relay.reshape(var_14592.astype('bool'), relay.shape_of(var_14591))) # shape=(2, 15, 11)
output = bop_14593
output2 = bop_14593
func_14605 = relay.Function([var_14591,var_14592,], output)
mod['func_14605'] = func_14605
mod = relay.transform.InferType()(mod)
mutated_mod['func_14605'] = func_14605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14605_call = mutated_mod.get_global_var('func_14605')
var_14607 = relay.var("var_14607", dtype = "bool", shape = (2, 15, 11))#candidate|14607|(2, 15, 11)|var|bool
var_14608 = relay.var("var_14608", dtype = "bool", shape = (2, 15, 11))#candidate|14608|(2, 15, 11)|var|bool
call_14606 = func_14605_call(var_14607,var_14608,)
output = call_14606
func_14609 = relay.Function([var_14607,var_14608,], output)
mutated_mod['func_14609'] = func_14609
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14721 = relay.const([[[-6,-2,7,-4,5,3,-1,5,9],[4,4,3,8,-10,-2,2,-5,6],[10,-3,4,-9,6,-6,-5,-1,4]],[[2,3,-4,-8,-7,-3,-9,7,-9],[5,-7,-2,-8,-1,-8,2,-7,-2],[4,-9,5,3,4,5,10,-1,-10]],[[8,-2,6,6,-9,-7,-5,-1,9],[6,-9,4,4,-3,-3,-10,3,-1],[-1,1,1,-9,6,-9,-5,10,5]],[[-9,10,-8,8,-5,9,2,-5,9],[8,2,-7,10,6,-7,6,4,9],[8,-9,8,8,-9,10,1,-4,-3]],[[-4,5,5,-4,10,-6,9,4,-6],[7,2,-1,4,2,4,10,-2,-9],[9,-7,-1,-5,8,10,2,10,-5]],[[-6,-2,6,-6,4,-1,5,8,8],[7,-10,3,-9,-9,-8,-9,-1,5],[-8,6,-8,-7,-9,-7,4,8,-6]],[[-6,-5,3,9,-10,-6,-10,7,-8],[-4,-10,-10,8,10,10,7,3,10],[9,-2,2,5,2,-7,-9,-7,-4]],[[9,-3,-7,6,-8,10,-9,-9,-8],[-8,-4,-9,3,4,8,-7,7,5],[-10,10,4,-7,-8,1,-9,1,1]],[[4,7,-4,-5,3,10,8,10,9],[9,-6,-4,3,8,-7,-3,5,-1],[4,-1,-8,6,2,-5,2,10,-10]],[[-5,-10,-4,-5,9,6,10,-4,8],[5,-9,10,9,7,-9,6,10,8],[2,-3,-3,9,-1,-8,6,-3,-10]],[[8,-6,-1,-1,-1,-2,5,2,4],[-6,-1,-7,-8,-10,-5,-5,-2,-9],[-9,9,-1,9,-4,5,6,-1,8]],[[6,1,6,-8,1,5,-10,-10,4],[-9,-1,-4,1,8,9,-1,2,10],[-10,-3,6,-2,-4,-7,-8,-3,-9]]], dtype = "int16")#candidate|14721|(12, 3, 9)|const|int16
var_14722 = relay.var("var_14722", dtype = "int16", shape = (12, 3, 9))#candidate|14722|(12, 3, 9)|var|int16
bop_14723 = relay.equal(const_14721.astype('bool'), relay.reshape(var_14722.astype('bool'), relay.shape_of(const_14721))) # shape=(12, 3, 9)
uop_14728 = relay.cos(bop_14723.astype('float64')) # shape=(12, 3, 9)
func_14295_call = mod.get_global_var('func_14295')
func_14299_call = mutated_mod.get_global_var('func_14299')
var_14735 = relay.var("var_14735", dtype = "float64", shape = (2288,))#candidate|14735|(2288,)|var|float64
var_14736 = relay.var("var_14736", dtype = "float32", shape = (2, 420))#candidate|14736|(2, 420)|var|float32
call_14734 = relay.TupleGetItem(func_14295_call(relay.reshape(var_14735.astype('float64'), [16, 13, 11]), relay.reshape(var_14736.astype('float32'), [840,]), ), 1)
call_14737 = relay.TupleGetItem(func_14299_call(relay.reshape(var_14735.astype('float64'), [16, 13, 11]), relay.reshape(var_14736.astype('float32'), [840,]), ), 1)
output = relay.Tuple([uop_14728,call_14734,var_14735,var_14736,])
output2 = relay.Tuple([uop_14728,call_14737,var_14735,var_14736,])
func_14745 = relay.Function([var_14722,var_14735,var_14736,], output)
mod['func_14745'] = func_14745
mod = relay.transform.InferType()(mod)
mutated_mod['func_14745'] = func_14745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14745_call = mutated_mod.get_global_var('func_14745')
var_14747 = relay.var("var_14747", dtype = "int16", shape = (12, 3, 9))#candidate|14747|(12, 3, 9)|var|int16
var_14748 = relay.var("var_14748", dtype = "float64", shape = (2288,))#candidate|14748|(2288,)|var|float64
var_14749 = relay.var("var_14749", dtype = "float32", shape = (2, 420))#candidate|14749|(2, 420)|var|float32
call_14746 = func_14745_call(var_14747,var_14748,var_14749,)
output = call_14746
func_14750 = relay.Function([var_14747,var_14748,var_14749,], output)
mutated_mod['func_14750'] = func_14750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14879 = relay.var("var_14879", dtype = "float64", shape = (9, 8, 1))#candidate|14879|(9, 8, 1)|var|float64
uop_14880 = relay.log10(var_14879.astype('float64')) # shape=(9, 8, 1)
func_12041_call = mod.get_global_var('func_12041')
func_12043_call = mutated_mod.get_global_var('func_12043')
var_14894 = relay.var("var_14894", dtype = "float32", shape = (12, 18))#candidate|14894|(12, 18)|var|float32
call_14893 = func_12041_call(relay.reshape(var_14894.astype('float32'), [9, 3, 8]))
call_14895 = func_12041_call(relay.reshape(var_14894.astype('float32'), [9, 3, 8]))
bop_14896 = relay.equal(uop_14880.astype('bool'), relay.reshape(var_14879.astype('bool'), relay.shape_of(uop_14880))) # shape=(9, 8, 1)
func_6641_call = mod.get_global_var('func_6641')
func_6643_call = mutated_mod.get_global_var('func_6643')
var_14907 = relay.var("var_14907", dtype = "float64", shape = (840, 1))#candidate|14907|(840, 1)|var|float64
call_14906 = func_6641_call(relay.reshape(var_14907.astype('float64'), [10, 6, 14]))
call_14908 = func_6641_call(relay.reshape(var_14907.astype('float64'), [10, 6, 14]))
bop_14909 = relay.power(bop_14896.astype('float64'), relay.reshape(uop_14880.astype('float64'), relay.shape_of(bop_14896))) # shape=(9, 8, 1)
output = relay.Tuple([call_14893,var_14894,call_14906,var_14907,bop_14909,])
output2 = relay.Tuple([call_14895,var_14894,call_14908,var_14907,bop_14909,])
func_14918 = relay.Function([var_14879,var_14894,var_14907,], output)
mod['func_14918'] = func_14918
mod = relay.transform.InferType()(mod)
var_14919 = relay.var("var_14919", dtype = "float64", shape = (9, 8, 1))#candidate|14919|(9, 8, 1)|var|float64
var_14920 = relay.var("var_14920", dtype = "float32", shape = (12, 18))#candidate|14920|(12, 18)|var|float32
var_14921 = relay.var("var_14921", dtype = "float64", shape = (840, 1))#candidate|14921|(840, 1)|var|float64
output = func_14918(var_14919,var_14920,var_14921,)
func_14922 = relay.Function([var_14919,var_14920,var_14921,], output)
mutated_mod['func_14922'] = func_14922
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14995 = relay.const([[[-9,-7,-2,8,-1,2,10,-3,-6,-9,-8,-4,6],[-7,-10,-2,9,-9,2,-1,-10,-6,-4,-9,-4,7],[-9,-2,1,-10,6,-9,1,-5,5,8,8,-6,-5],[-5,1,-10,-5,9,-4,6,-9,4,-2,3,-5,-3],[-6,-9,3,-7,8,-9,2,10,5,5,-2,5,9],[1,10,-9,4,5,-2,4,-2,2,10,-9,9,-2],[4,-4,5,7,1,10,-3,-5,-9,-6,3,-2,-9],[10,6,8,-7,-1,10,-8,3,8,-4,3,-3,2],[-7,9,-7,6,10,3,10,10,1,3,-7,-10,-4],[-2,-3,1,3,8,8,5,-1,5,-2,1,4,-7],[-3,-10,1,-5,8,-2,7,-3,5,-3,6,-8,-5],[-2,-3,10,4,-4,-3,9,5,2,-3,-7,1,-7],[-7,5,-3,3,-4,1,-2,-4,6,-6,-5,2,-3]],[[6,-8,3,7,-9,5,-8,4,8,6,1,-5,2],[-5,-10,1,4,-1,5,7,10,-8,10,10,8,-3],[-8,7,-10,4,3,-6,-5,6,-4,-3,-4,5,-3],[-3,10,1,4,-8,4,-4,5,6,6,-9,-4,9],[5,3,8,10,-1,4,1,-2,3,-2,6,8,1],[-6,-4,-2,-8,7,-10,-2,10,-8,9,7,-6,10],[-8,-5,10,3,-4,-2,-1,-8,8,4,7,2,-4],[8,10,1,10,7,7,1,7,6,4,1,-4,-1],[-6,7,-2,9,4,-9,6,-4,8,-6,1,-4,-6],[7,9,10,-3,-5,-3,6,-4,4,3,-5,-3,7],[-3,-9,6,-8,3,10,7,10,10,9,-3,8,-1],[8,-3,8,-7,-6,2,-6,2,-3,-1,-10,1,9],[-4,-1,-9,1,-5,2,5,-5,-10,1,6,2,7]],[[2,-3,1,7,2,-2,-10,1,10,-7,-10,5,10],[5,1,-4,-9,4,-4,-1,-7,-1,-1,6,-8,-4],[2,2,-1,6,1,4,8,-8,-9,1,2,-4,6],[-4,-2,5,-6,-8,5,8,3,-4,2,-3,2,8],[8,9,-1,-8,-9,-9,-1,-1,-10,-2,3,-3,-9],[5,-10,7,4,-10,7,7,3,3,4,2,-5,6],[10,10,-6,3,7,-2,6,-5,1,10,-10,10,9],[8,6,-1,-3,-8,-7,5,-2,6,-10,-2,-2,9],[-9,6,10,-1,9,-5,-6,-3,5,-6,4,7,-2],[-7,5,-6,4,2,7,-10,-7,9,9,6,-10,3],[4,-10,-10,1,-4,10,9,1,7,-2,-8,8,3],[-1,8,-8,5,9,6,1,-6,-7,-4,1,-4,6],[4,-1,-9,9,-8,10,-5,-7,8,1,10,1,6]]], dtype = "uint64")#candidate|14995|(3, 13, 13)|const|uint64
const_14996 = relay.const([[[-9,-10,-9,-2,5,6,-5,10,8,5,8,-7,-4],[-2,-1,-3,-2,-5,-10,-8,5,6,6,5,5,-10],[-3,-5,3,-5,4,9,5,-7,-10,-9,-8,-4,-2],[-6,8,-1,7,7,-3,6,-2,-3,8,-1,6,-5],[6,9,-8,-6,-3,7,-3,9,7,-5,-2,-8,-10],[-3,3,-3,9,7,-6,-4,-2,-8,5,10,7,-3],[-6,3,1,4,-6,-3,10,-4,4,5,1,10,-3],[10,-6,10,5,9,9,-10,-2,-2,4,9,8,-6],[9,8,6,3,2,-3,-7,5,-6,3,-9,-10,-4],[2,3,4,-4,4,-10,-2,-10,-9,9,-7,10,-3],[-6,3,2,-6,5,-6,10,-1,-9,-1,9,-8,-6],[3,4,5,1,-3,-5,-9,-7,-3,7,7,8,4],[10,6,-8,1,7,5,-8,-2,-7,5,-5,3,4]],[[-5,10,10,3,7,8,-5,-6,2,9,6,4,2],[-2,1,-4,6,8,-5,5,4,8,8,-10,-9,-4],[-6,6,8,-2,-2,7,-2,8,-10,7,-6,-5,-10],[-5,-5,4,7,-9,8,6,-8,1,-2,7,-2,5],[-9,2,-7,-8,6,-4,-4,10,6,3,2,4,-3],[-5,-5,-2,-1,6,1,-2,8,2,1,-3,9,-1],[-1,5,7,-8,-10,-7,-9,1,-8,9,-9,7,10],[-6,-7,-7,1,-2,-2,3,5,5,2,3,8,-6],[-10,8,-5,8,1,-2,-9,-3,9,3,5,-5,3],[-8,10,8,9,10,10,9,5,-4,-8,-5,2,-10],[-7,3,-2,1,-7,2,4,-3,1,-6,3,-3,4],[9,-8,-2,-3,5,7,9,-4,3,4,4,10,-4],[-7,-6,-6,8,2,-3,6,10,3,-1,-2,-8,-2]],[[4,10,5,-6,10,-5,-10,-10,-4,10,-4,-5,1],[-9,6,1,3,9,-1,-8,10,1,2,2,10,2],[-6,-8,6,6,-1,1,10,-2,8,-4,-3,8,-8],[3,-4,-3,2,7,-1,10,-2,5,-3,-3,-9,9],[3,9,-10,1,-7,-4,6,-7,-6,8,-9,10,-2],[-1,1,2,7,-5,-6,-3,-9,-2,-8,-1,-7,2],[3,-8,-6,-5,8,3,9,-6,-2,-7,-4,7,9],[8,-8,4,4,-6,10,9,9,7,10,4,-2,7],[2,-10,4,9,-8,-7,4,5,5,3,-8,3,-4],[1,9,-2,4,2,-1,3,-7,-2,-4,-6,-10,4],[-1,-5,-3,3,-6,3,-8,-9,-9,8,1,-6,8],[-5,-2,8,5,8,-2,1,7,-8,-10,-6,9,4],[6,6,-3,4,-9,7,-6,1,-8,-7,-6,-2,4]]], dtype = "uint64")#candidate|14996|(3, 13, 13)|const|uint64
bop_14997 = relay.equal(const_14995.astype('bool'), relay.reshape(const_14996.astype('bool'), relay.shape_of(const_14995))) # shape=(3, 13, 13)
func_11307_call = mod.get_global_var('func_11307')
func_11310_call = mutated_mod.get_global_var('func_11310')
const_15001 = relay.const([-6.516997,8.013749,-7.408843,3.821484,-9.814565,-2.801142,-0.474825,-0.947100,-0.862178,1.013734,-3.030025,6.885198,-2.679642,1.778712,1.147782,-5.548060,-2.296633,-5.705336], dtype = "float64")#candidate|15001|(18,)|const|float64
call_15000 = func_11307_call(relay.reshape(const_15001.astype('float64'), [3, 3, 2]), relay.reshape(const_15001.astype('float64'), [3, 3, 2]), )
call_15002 = func_11307_call(relay.reshape(const_15001.astype('float64'), [3, 3, 2]), relay.reshape(const_15001.astype('float64'), [3, 3, 2]), )
output = relay.Tuple([bop_14997,call_15000,const_15001,])
output2 = relay.Tuple([bop_14997,call_15002,const_15001,])
func_15011 = relay.Function([], output)
mod['func_15011'] = func_15011
mod = relay.transform.InferType()(mod)
mutated_mod['func_15011'] = func_15011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mutated_mod.get_global_var('func_15011')
call_15012 = func_15011_call()
output = call_15012
func_15013 = relay.Function([], output)
mutated_mod['func_15013'] = func_15013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15020 = relay.TupleGetItem(func_15011_call(), 1)
call_15021 = relay.TupleGetItem(func_15013_call(), 1)
var_15029 = relay.var("var_15029", dtype = "float64", shape = (3, 3, 2))#candidate|15029|(3, 3, 2)|var|float64
bop_15030 = relay.mod(call_15020.astype('float64'), relay.reshape(var_15029.astype('float64'), relay.shape_of(call_15020))) # shape=(3, 3, 2)
bop_15033 = relay.mod(call_15021.astype('float64'), relay.reshape(var_15029.astype('float64'), relay.shape_of(call_15021))) # shape=(3, 3, 2)
output = bop_15030
output2 = bop_15033
func_15042 = relay.Function([var_15029,], output)
mod['func_15042'] = func_15042
mod = relay.transform.InferType()(mod)
var_15043 = relay.var("var_15043", dtype = "float64", shape = (3, 3, 2))#candidate|15043|(3, 3, 2)|var|float64
output = func_15042(var_15043)
func_15044 = relay.Function([var_15043], output)
mutated_mod['func_15044'] = func_15044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15105 = relay.TupleGetItem(func_15011_call(), 1)
call_15106 = relay.TupleGetItem(func_15013_call(), 1)
func_12713_call = mod.get_global_var('func_12713')
func_12715_call = mutated_mod.get_global_var('func_12715')
var_15122 = relay.var("var_15122", dtype = "uint8", shape = (360,))#candidate|15122|(360,)|var|uint8
call_15121 = relay.TupleGetItem(func_12713_call(relay.reshape(var_15122.astype('uint8'), [10, 3, 12])), 0)
call_15123 = relay.TupleGetItem(func_12715_call(relay.reshape(var_15122.astype('uint8'), [10, 3, 12])), 0)
func_5717_call = mod.get_global_var('func_5717')
func_5720_call = mutated_mod.get_global_var('func_5720')
var_15133 = relay.var("var_15133", dtype = "float32", shape = (30,))#candidate|15133|(30,)|var|float32
const_15134 = relay.const([-8,7,8,-5,2,10,4,1,5,7,-10,-1,-7,-7,3,-3,8,-4,-3,9,-5,-5,1,9,4,3,6,-6,-1,4,-9,-2,9,5,6,-9,-3,8,-2,9,-4,1,-8,-3,-2,-4,5,9,-3,6,-6,-10,1,4,6,3,-10,2,-3,-1,-1,5,-1,10,9,-3,2,6,3,9,7,-1,-6,9,7,4,4,-8,4,-9,5,-7,-7,-10,-7,10,-1,-3,6,-6,-1,-5,-10,10,-10,-8,-2,1,2,-10,2,-4,-2,8,10,-5,4,8,2,1,-8,8,-4,9,-4,-4,10,-9,-7,-2,-3,-8,6,3,5,-1,-3,-4,2,2,4,-10,5,7,-6,-7,-8,6,-2,-4,-4,-9,-8,3,-6,-3,2,5,3,-9,2,8,2,4,6,10,-4,5,4,1,-5,-2,-8,-4,8,-1,-9,8,6,5,3,10,-6,1,-6,-10,5,-8,9,-5,5,-5,5,-6,-9,-3,-8,-10,-9,-6,1,6,10,-2,-5,-3,-1,5,-6,-8,-3,7,-3,8,8,-9,-10,7,-8,-6,-6,-1,1,-4,8,2,-3,3,-6,8,-6,2,-1,-5,-8,1,-2,-10,8,-10,7,8,-10,4,3,-7,10,-5,8,1,3,-9,-4,-9,-4,1,-10,-9,-9,4,6,2,-1,-10,-9,5,3,-6,-3,-1,4,6,8,-4,-10,-10,-10,-6,-1,9,7,1,-8,-7,2,7,8,9,3,-3,-10,1,9,-2,-4,-2,5,-9,8,5,3,-5,-7,7,6,3,6,7,-3,-6,1,8,-1,10,-4,-1,-9,8,-1,-8,-6,4,-6,7,-1,6,3,8,2,3,-5,3,-1,1,-7,-8,9,4,2,-7,-4,-2,7,-9,10,-5,8,-10,-2,-8,10,-9,-5,-6,-4,-9,6,-5,1,-3,8,5,-7,-3,-6,7,7,4,-1,-1,5,-3,-1,-3,-2,3,-6,4,-3,-4,9,4,-7,2,-1,3,2,7,2,-6,-8,-4,7,-10,6,9,3,-3,-2,-2,-7,8,-1,-1,-5,-9,5,-7,-1,3,9,5,7,-6,-1,3,3,7,6,-9,6,4,-1,-4,-8,-2,-10,2,-2,-8,7,3,3,-6,-10,10,4,9,-6,8,1,2,-4,1,-3,1,10,-1,-5,-10,3,5,3,-1,-7,3,-8,1,9,9,1,-3,-5,-4,1,-7,3,2,-6,-4,-3,-10,4,-4,-5,5,3,9,-2,10,6,-8,1,-6,2,-9,9,-5,-3,5,1,8,-8,4,9,-3,-3,-5,-2,9,-10,-10,-8,-1,-3,-10,8,10,4,-6,-8,-9,2,5,-2,-10,5,-3,-5,5,-3,-2,-5,-7,-6,4,-3,-7,7,-9,-8,-3,-6,-5,1,9,-7,4,-5,2,3,-7,9,9,8,4,8,-7,2,-5,2,-6,7,2,1,3,-10,-8,6,4,9,10,-5,-10,-8,9,-9,10,5,7,-8,9,3,-8,7,5,-9,-1,-3,-1,-8,-3,-7,4,-9,-7,-1,6,4,-7,5,6,8,-10,8,1,2,-4,9,1,7,4,6,6,-3,2,-4,3,6,2,-5,-10,7,7,2,-5,-10,8,10,-8,6,10,-6,1,-8,-6,4,-3,-3,-10,-2,5,5,-8,7,5,-5,3,-1,5,-7,-6,10,3,-2,8,9,6,7,6,-1,9,-9,-9,-7,2,7,5,7,-1,-5,3,-10,-6,4,-1,7,10,2,-6,6,-3,6,-10,-9,4,-10,8,9,-7,7,7,-5,10,8,6,-6,7,-6,8,10,9,-2,-9,10,3,1,-3,-7,-6,3,-7,1,-4,2,4,6,1,-10,-9,8,2,-2,-8,10,-3,5,3,-5,3,-10,1,-10,-4,-5,-5,-6,2,1,-6,5,-5,1,-6,-8,-4,-6,4,9,10,-2,-7,-1,-6,-1,5,-4,-4,-2,-3,-1,-7,-2,-5,-9,-5,10,-1,10,-3,-4,5,-1,-4,1,-1,4,9,1,7,9,-2,3,-9,-3,-4,-1,4,9,-4,3,5,5,5,8,-5,5,7,1,3,-8,-10,5,4,-9,-8,-6,-2,-7,-7,9,3,1,4,-5,5,-3,6,-8,5,9,-2,6,-5,10,-7,4,-5,-1,-7,7,4,9,-9,10,-4,7,3,-1,6,2,4,-5,-3,9,7,-3,5,10,-9,-8,-9,-9,10,-3,-3,2,-1,6,5,3,1,-10,-8,-8,1,9,5,-4,-10,-1,-10,-2,-10,-4,-6,-7,-2,1,7,4,9,10,1,-7,9,-6,9,-1,-8,3,9,-1,7,1,-3,-6,8,6,-9,4,1,8,-10,10,-1,4,-3,3,8,7,-8,-6,8,10,3,5,4,5,-10,3,-9,3,3,5,-9,5,-3,6,10,-9,7,-8,-5,6,1,-9,8,4,8,-5,10,-6,8,6,-7,-3,-7,9,8,-7,7,-9,8,8,-1], dtype = "int8")#candidate|15134|(936,)|const|int8
call_15132 = relay.TupleGetItem(func_5717_call(relay.reshape(var_15133.astype('float32'), [5, 1, 6]), relay.reshape(const_15134.astype('int8'), [936,]), ), 0)
call_15135 = relay.TupleGetItem(func_5720_call(relay.reshape(var_15133.astype('float32'), [5, 1, 6]), relay.reshape(const_15134.astype('int8'), [936,]), ), 0)
func_8545_call = mod.get_global_var('func_8545')
func_8550_call = mutated_mod.get_global_var('func_8550')
const_15141 = relay.const([[-4],[6],[4],[-1],[-9],[-7],[-9],[5],[-8],[9],[-1],[3],[3],[3],[-9],[-6],[7],[4],[-8],[-8],[2],[-1],[2],[8],[-2],[-7],[3],[-3],[1],[-4],[2],[-3],[6],[10],[-4],[2],[-6],[9],[-9],[-7],[4],[-6],[-6],[-5],[-4],[7],[-1],[-6],[-8],[2],[7],[-10],[-8],[-10],[-7],[-10],[2],[8],[-4],[5],[2],[-5],[-2],[1],[-7],[4],[6],[6],[2],[-1],[-4],[-10],[6],[4],[-2],[7],[1],[-8],[-2],[3],[-1],[-3],[10],[3],[5],[2],[6],[6],[3],[1],[9],[9],[1],[-2],[-6],[10],[1],[-8],[-3],[4],[-6],[5],[-10],[3],[1],[9],[1],[9],[-5],[5],[-6],[-1],[-8],[-10],[10],[9],[2],[-6],[-5],[8],[-3],[7],[4],[8],[-4],[1],[7],[9],[-10],[8],[-2],[-4],[1],[1],[-10],[-3],[5],[-1],[-5],[-8],[-1],[1],[2],[-5],[6],[2],[2],[-6],[-7],[10],[-3],[2],[-4],[-9],[-1],[10],[-6],[2],[-10],[10],[-4],[-5],[8],[9],[8],[3],[-6],[-1],[10],[-9],[-7],[-3],[-1],[-2],[-5],[6],[7],[-4],[-5],[-10],[-4],[-4],[10],[1],[5],[10],[-1],[6],[-1],[-3],[-5],[4],[2],[-4],[-10],[-10],[1],[-5],[1],[-2],[-5],[10],[-9],[-8],[-7],[5],[-9],[3],[-8],[10],[3],[-4],[-4],[-5],[4],[3],[2],[-7],[-2],[-1],[5],[-2],[-6],[10],[1],[-4],[8],[1],[7],[-8],[5],[-2],[5],[-8],[-4],[5],[-7],[-8],[1],[9],[-5],[-6],[-10],[-8],[-5],[10],[10],[-9],[-3],[3],[5],[9],[-4],[-7],[2],[-6],[-6],[2],[1],[5],[-8],[8],[-8],[4],[-1],[9],[4],[10],[-4],[2],[-2],[4],[3],[3],[8],[10],[4],[-4],[2],[-6],[-3],[-2],[4],[5],[-10],[3],[-5],[9],[-5],[-2],[2],[-6],[9],[-1],[-8],[-7],[-1],[-7],[3],[-2],[-7],[7],[3],[10],[2],[-8],[-5],[3],[4],[6],[-10],[-2],[3],[5],[-1],[3],[1],[2],[7],[10],[5],[4],[-2],[-3],[-10],[10],[-3],[8],[-4],[-4],[-9],[3],[-6],[-3],[-8],[-2],[1],[-2],[-2],[3],[5],[1],[-6],[3],[-3],[4],[-5],[-3],[-3],[-6],[1],[5],[-6],[7],[1],[4],[-3],[-3],[-4],[-8],[-5],[-1],[9],[-3],[-2],[3],[-9],[-5],[5],[-6],[2],[-4],[3],[-4],[6],[-7],[4],[1],[-4],[6],[-3],[9],[-9],[-8],[-8],[3],[-4],[-5],[-4],[5],[-2],[-1],[2],[10],[6],[4],[-8],[1],[7],[2],[-4],[5],[1],[5],[10],[-5],[6],[-7],[-10],[4],[6],[5],[-1],[1],[-6],[3],[-5],[-7],[8],[-2],[-6],[9],[7],[-10],[-6],[2],[2],[-7],[-2],[1],[9],[-7],[2],[-1],[-8],[9],[3],[5],[7],[-4],[-10],[6],[-4],[5],[9],[-3],[9],[3],[7],[-4],[-8],[-8],[2],[-1],[-1],[-5],[-3],[-10],[-3],[-2],[-10],[3],[6],[1],[-3],[-8],[-7],[-3],[4],[-1],[1],[3],[-6],[-1],[-10],[5],[8],[7],[5],[9],[2],[-10],[6],[1],[9],[4],[-7],[-6],[-9],[-4],[-7],[-9],[7],[1],[6],[2],[7],[-9],[9],[-4],[4],[-10],[2],[4],[10],[2],[-4],[-6],[-7],[-5],[-7],[2],[-10],[9],[-3],[-8],[9],[-5],[-4],[6],[-6],[-5],[9],[1],[8],[-8],[-2],[-9],[1],[2],[10],[-8],[9],[-4],[4],[-9],[8],[1],[5],[3],[8],[8],[-2],[-4],[6],[-7],[-7],[-7],[-2],[-1],[1],[-7],[4],[-6],[9],[-2],[-1],[-9],[-9],[5],[1],[2],[-9],[-4],[8],[-5],[5],[-7],[9],[-8],[1],[7],[2],[4],[-3],[5],[-1],[9],[5],[-8],[9],[1],[-7],[-3],[-2],[-5],[2],[-4],[2],[-8],[-6],[-6],[-9],[6],[-2],[-9],[8],[-7],[10],[1],[2],[4],[2],[2],[7],[8],[2],[-10],[-2],[-7],[1],[-7],[5],[5],[-3],[-5],[4],[3],[-9],[-1],[-5],[-10],[6],[-8],[-6],[-3],[8],[-9],[-4],[-8],[3],[-6],[-3],[5],[3],[8],[5],[-5],[-8],[9],[7],[-5],[4],[7],[8],[-6],[9],[10],[-10],[3],[10],[-3],[9],[-8],[-10],[-3],[1],[-1],[-1],[2],[4],[-2],[10],[4],[-6],[-5],[-10],[3],[-6],[-8],[-10],[-3],[-10],[5],[-3],[-3],[-6],[9],[-9],[-10],[-1],[3],[-3],[3],[-7],[-8],[-6],[9],[7],[9],[2],[-8],[-9],[8],[1],[-10],[3],[6],[-10],[-7],[-1],[-8],[-8],[-3],[1],[-7],[-4],[-3],[2],[-10],[9],[5],[-5],[-8],[-1],[-4],[10],[1],[8],[-4],[-8],[2],[-4],[6],[8],[8],[5],[-9],[-8],[7],[-2],[6],[-4],[-3],[-3],[-1],[-6],[4],[10],[7],[-7],[7],[-2],[-4],[5],[-10],[2],[-10],[-2],[-9],[10],[7],[-3],[-7],[4],[-4],[2],[-3],[-10],[-3],[-8],[-2],[8],[9],[7],[-9],[7],[4],[-9],[-4],[-6],[4],[-10],[10],[-7],[4],[7],[-8],[-2],[-9],[2],[-5],[-3],[9],[-9],[-7],[-3],[-2],[-1],[2],[-7],[-3],[-4],[1],[5],[-4],[-7],[-8],[-7],[2],[-1],[-10],[-1],[7],[5],[10],[-8],[8],[2],[-8],[9],[-6],[3],[7],[-2],[-4],[10],[-7],[-6],[-5],[-4],[5],[-5],[-5],[-4],[4],[7],[10],[-3],[-9],[-7],[-9],[-7],[-8],[-1],[-8],[-5],[8],[-7],[7],[-8],[-5],[-2],[-4],[-1],[1],[6],[-5],[-6],[-7],[-5],[3],[-7],[-3],[6],[6],[-2],[8],[3],[10],[-4],[3],[1],[-2],[10],[-6],[-4],[8],[2],[6],[1],[1],[-10],[-9],[2],[10],[-10],[-4],[9],[-2],[7],[6],[6],[3],[-3],[-7],[10],[10],[-8],[6],[8],[-6],[6],[-3],[-7],[-6],[2],[-6],[-5],[-8],[7],[-5],[-3],[8],[3],[1],[-9],[-10],[-6],[2],[8],[8],[9],[8],[-2],[-2],[-10],[-7],[-1],[-6],[10],[-6],[4],[-3],[-8],[4],[2],[-4],[7],[-5],[-8],[7],[6],[-3],[-10],[3],[-6],[-6],[-4],[-1],[-8],[8],[10],[-3],[8],[5],[4],[4],[-7],[-7],[7],[4],[9],[-6],[-2],[7],[5],[-10],[-1],[-1],[2],[3],[-9],[8],[-7],[2],[4],[-7],[-9],[-8],[-1],[3],[-10],[10],[-7],[-8],[-6],[-4],[1],[2],[6],[-2],[-3],[5],[-4],[-5],[8],[1],[-2],[-1],[4],[7],[-2],[7],[-3],[-1],[-5],[1],[-2],[10],[-1],[-10],[-4],[9],[4],[4],[-1],[7],[1],[9],[5],[3],[3],[-7],[-2],[8],[5],[-2],[-1],[-4],[3],[2],[-6],[9],[3],[1],[8],[-9],[8],[5],[-5],[1],[2],[-9],[-8],[-9],[-9],[-7],[10],[-2],[6],[2],[-7],[-6],[-6],[-3],[3],[-1],[1],[10],[-2],[-2],[-8],[6],[7],[-2],[3],[-6],[2],[5],[10],[-1],[6],[-9],[-1],[-6],[-6],[4],[7],[3],[-9],[-4],[6],[5],[3],[-7],[8],[7],[-9],[10],[-5],[-1],[-7],[6],[-6],[-8],[1],[-9],[4],[-6],[4],[2],[-3],[-7],[-7],[-2],[-7],[3],[9],[-8],[8],[2],[-7],[-8],[-7],[-8],[2],[-6],[-10],[7],[1],[-8],[-4],[2],[4],[-10],[5],[-4],[5],[3],[-8],[4],[2],[-7],[2],[-10],[5],[3],[10],[-5],[-5],[-7],[-7],[3],[4],[-5],[-9],[-4],[-8],[5],[-5],[2],[2],[-1],[1],[9],[1],[6],[-8],[1],[7],[6],[-6],[8],[3],[3],[-8],[-10],[-10],[-5],[7],[7],[-9],[-5],[4],[-8],[-3],[-6],[9],[2],[-7],[4],[9],[6],[-6],[-10],[-4],[-10],[-10],[9],[-2],[-4],[5],[5],[-3],[-8],[1],[-6],[7],[-10],[4],[6],[5],[-10],[-1],[-10],[7],[-10],[-3],[6],[2],[-6],[7],[3],[-5],[-7],[-1],[6],[8],[-2],[6],[4],[5],[4],[6],[3],[8],[-3],[3],[-9],[9],[7],[10],[7],[-1],[1],[-2],[-1],[-6],[8],[-6],[2],[-2],[9],[10],[-4],[-5],[-8],[-6],[6],[-7],[-5],[9],[-7],[-2],[9],[-6],[2],[-5],[-5],[-8],[-4],[10],[1],[-9],[5],[2],[-7],[7],[-8],[-1],[-7],[-7],[6],[9],[-6],[10],[3],[4],[-8],[-8],[10],[-5],[3],[-3],[3],[7],[10],[8],[-7],[-7],[7],[5],[-7],[-3],[-3],[-10],[-3],[10],[-8],[-8],[-6],[10],[2],[-1],[-8],[-3],[4],[-6],[-6],[-8],[2],[-4],[2],[4],[6],[3],[-8],[7],[5],[-8],[-6],[10],[9],[-3],[-9],[-6],[6],[9],[-3],[-9],[4],[10],[-5],[3],[-6],[-2],[1],[4],[-10],[-7],[-7],[-1],[10],[-2],[10],[1],[-3],[9],[1],[-7],[2],[-9],[1],[-5],[10],[1],[4],[10],[-9],[-6],[-4],[-4],[-1],[3],[4],[8],[9],[-1],[1],[-5],[-9],[-8],[-8],[6],[1],[-8],[-2],[-9],[5],[4],[4],[-5],[3],[7],[-3],[7],[-9],[-4],[3],[6],[-3],[-8],[7],[7],[-1],[-1],[-7],[10],[-2],[4],[-9],[9],[7],[-7],[-5],[-4],[-7],[5],[-2],[-6],[-5],[10],[3],[4],[4],[3],[10],[-3],[5],[-7],[3],[1],[6],[6],[8],[10],[10],[7],[-9],[1],[8],[9],[5],[-3],[2],[-3],[1],[-4],[9],[4],[-1],[1],[4],[5],[7],[-9],[9],[1],[7],[-6],[-5],[-5],[2],[3],[9],[-9],[2],[4],[-5],[1],[6],[-7],[7],[-8],[-3],[5],[-5],[4],[10],[-1],[5],[-3],[-7],[6],[7],[-4],[-7],[-9],[8],[-9],[4],[-8],[-4],[8],[-10],[-5],[6],[-3],[-5],[5],[-6],[9],[7],[-8],[-5],[-5],[-10],[-8],[3],[-8],[-3],[-7],[1],[2],[-7],[-1],[5],[6],[6],[-6],[-10],[-10],[1],[-7],[-3],[9],[-10],[-5],[-4],[-8],[-5],[6],[9],[-3],[-6],[5],[-9],[10],[-2],[6],[6],[3],[2],[8],[6],[-9],[-4],[-2],[-6],[7],[-3],[2],[9],[4],[1],[-9],[7],[-4],[10],[5],[7],[-1],[-6],[6],[-8],[-6],[7],[-3],[-1],[10],[-8],[8],[2],[2],[-3],[10],[-10],[3],[-3],[-10],[3],[-4],[-5],[1],[-7],[-8],[1],[-8],[-8],[-3],[-7],[1],[5],[3],[-4],[-3],[-10],[-9],[7],[3],[-10],[-6],[-8],[2],[-5],[7],[9],[1],[-3],[-5],[9],[3],[-4],[-8],[-2],[-4],[-1],[1],[-5],[7],[9],[3],[-3],[5],[-1],[2],[6],[-1],[8],[3],[10],[2],[8],[-3],[8],[4],[-6],[-7],[-3],[5],[-3],[-4],[-10],[1],[-6],[-8],[4],[2],[-5],[4],[6],[1],[4],[1],[10],[-1],[-2],[-4],[-2],[2],[1],[-6],[2],[-6],[2],[-10],[-7],[10],[-1],[-9],[4],[-6],[5],[-1],[-4],[6],[-3],[-2],[-8],[-1],[10],[9],[-4],[-3],[10],[6],[3],[2],[-3],[-6],[-4],[-4],[-5],[-3],[7],[-5],[5],[8],[-3],[-4],[2],[8],[-3],[3],[1],[-3],[-2],[-1],[5],[9],[-8],[-1],[-8],[-4],[-8],[5],[10],[3],[-4],[-1],[4],[10],[-3],[10],[-7],[-10],[-3],[9],[7],[-6],[2],[5],[7],[-7],[-2],[3],[-2],[-3],[-6],[-5],[-4],[-7],[5],[10],[-9],[-9],[8],[-3],[1],[5],[6],[-1],[-3],[-7],[7],[-1],[6],[-8],[5],[-5],[6],[3],[7],[10],[-6],[1],[-5],[2],[7],[8],[-1],[5],[-8],[-10],[-4],[-7],[-10],[-4],[-8],[7],[1],[6],[2],[-3],[-9],[-3],[1],[-10],[4],[2],[-7],[-6],[-9],[6],[-7],[1],[-2],[-4],[-7],[1],[8],[-8],[3],[-8],[10],[-5],[-10],[5],[-3],[9],[5],[10],[7],[2],[-2],[1],[9],[9],[-9],[-9],[10],[5],[-4],[1],[1],[-1],[-8],[-4],[4],[-10],[-8],[-6],[-2],[9],[5],[-10],[3],[-5],[4],[-6],[4],[1],[-8],[-10],[10],[-1],[-2],[-5],[4],[-6],[5],[4],[-1],[-7],[-4],[10],[-10],[-3],[-8],[3],[2],[-6],[2],[1],[-9],[-5],[-2],[4],[-7],[-8],[4],[1],[3],[-4],[-7],[-10],[-2],[-5],[10],[-8],[-2],[-5],[3],[10],[8],[3],[10],[-8],[7],[3],[-1],[-3],[9],[-5],[4],[10],[-10],[4],[2],[-5],[4],[4],[3],[-4],[-6],[-6],[-9],[-9],[-7],[-9],[-10],[10],[-4],[5],[-8],[8],[-10],[3],[-4],[8],[7],[-6],[3],[7],[10],[2],[5],[-1],[-4],[-6],[-9],[-4],[7],[-4],[8],[1],[-6],[-2],[-10],[8],[6],[-1],[-9],[1],[9],[8],[2],[-6],[-1],[7],[4],[5],[-5],[-8],[7],[-9],[5],[-6],[-2],[-10],[2],[10],[-1],[-2],[9],[-4],[-9],[5],[-7],[3],[9],[8],[1],[8],[9],[-8],[-7],[-7],[-5],[3],[-10],[6],[-5],[3],[4],[-7],[-7],[-6],[-9],[4],[6],[2],[-10],[-4],[-8],[8],[-3],[7],[-7],[-9],[8],[3],[10],[-8],[8],[8],[-3],[7],[-9],[-8],[-9],[7],[1],[9],[6],[-9],[5],[4],[5],[-6],[-3],[5],[3],[1],[5],[1],[6],[-6],[-1],[6],[-3],[4],[1],[5],[1],[7],[4],[-1],[-5],[2],[-4],[6],[8],[10],[6],[-9],[-5],[9],[2],[-1],[3],[-6],[-1],[-7],[1],[-8],[10],[-6],[5],[2],[-4],[-10],[-5],[-4],[-1],[9],[-3],[5],[3],[-4],[-1],[1],[6],[4],[7],[-3],[-6],[-9],[-4],[-7],[8],[-10],[-4],[-8],[-9],[3],[-5],[-5],[-6],[-4],[-4],[4],[-4],[2],[-6],[2],[6],[8],[1],[9],[6],[-1],[-8],[4],[5],[7],[-9],[-1],[1],[-10],[2],[-2],[5],[10],[-6],[3],[-1],[-5],[-1],[3],[8],[-5],[-10],[-1],[-10],[10],[10],[2],[-2],[1],[-1]], dtype = "int16")#candidate|15141|(2112, 1)|const|int16
const_15142 = relay.const([6.883764,3.087652,3.352811,7.944834,-9.506705,9.968494,3.492202,-5.097927,6.110193,-0.696582,7.699592,-1.988056,6.567361,-9.678385,9.078529,-8.452474,3.166291,-1.057937,-7.028921,9.649630,4.243285,-1.349667,8.669668,-7.898527,6.034186,0.528247,-0.247325,5.147395,-0.141754,-6.159839,-6.995286,-5.292449,3.275641,-7.711783,-6.356126,-7.167346,-5.464374,8.155818,5.407037,-9.236504,-1.622192,-7.976815,9.831576,-6.181190,1.692530,8.598858,9.668658,1.212859,3.024633,-3.460505,0.810948,7.471384,3.861463,7.786954,-5.228348,3.698458,-6.386091,0.285488,-8.798016,0.568393,-3.416959,1.119734,4.584028,-0.593270,-3.020143,-0.124943,-8.994734,5.478853,-7.375994,-1.945229,-9.833788,9.905724,3.309054,-8.458954,-6.387183,0.285486,-4.366271,-4.748340,-0.635098,-8.659945,-5.601225,-8.212022,-6.644307,-2.464470,8.990460,0.623947,3.211072,-9.916209,8.481805,-9.242507,-3.991993,5.873104,-7.365267,-3.048733,-5.254508,0.140263,-5.353522,7.107434,3.902362,1.279026,1.536875,-8.511988,-2.795594,3.433807,4.350018,2.381059,-4.389802,-7.039547,6.760479,7.925040,-7.425802,-8.861197,-5.520104,0.420720,5.527068,-9.366803,-0.807007,3.156676,1.740401,-8.823419,-8.240600,7.506168,-1.862344,4.296144,-9.201099,-9.228791,4.535718,9.086048,-1.298577,0.964948,-1.332904,-9.550708,-8.630887,4.162400,0.889357,-7.427934,0.812929,-3.090327,-3.368436,8.444377,-0.932697,7.008056,-2.910192,7.396971,1.672269,3.394761,3.825522,-9.483965,1.257098,9.787528,-5.589598,5.342638,7.791509,8.205000,1.743524,5.917779,-0.809752,-7.709069,9.462257,-4.996083,-6.834385,-5.996703,7.600816,-5.020589,-2.976343,5.285832,1.520522,3.271111,-4.323038,-0.805777,1.955240,0.710762,-7.156095,5.365327,-7.390937,4.280656,2.804336,-9.249522,-6.052784,7.848342,-6.191479,7.282419,8.612529,9.441494,-6.652150,-7.474080,3.201138,6.003926,3.362381,4.784107,-9.605090,-4.066451,3.124504,9.229577,1.184515,-2.613656,3.974464,-1.427186,-4.189887,7.989851,8.854056,7.663068,5.464792,0.441829,7.059905,-2.674600,1.157678,4.581393,5.631429,-0.909140,9.460631,8.988051,1.177212,-1.170338,7.130221,-4.464052,1.591710,0.634376,-2.372980,3.918174,1.878179,-2.082376,-2.436376,2.631618,-0.035918,5.819443,8.078690,-8.402690,-8.739210,-9.143732,-4.120112,-3.132519,-0.395385,2.209583,-4.570893,-9.050306,-9.577175,-5.951639,-1.249077,9.059249,-8.440128,8.702582,5.690908,-9.451684,-4.375321,4.849706,3.567562,-4.106047,5.545866,-3.474357,-9.776456,6.255238,3.551382,9.797058,-1.362395,-1.191582,3.554219,-7.540925,-4.238905,-8.978932,2.121572,9.526826,-8.963480,4.596373,5.814550,9.216567,-3.094147,8.182876,3.733306,-6.471025,3.642000,-5.976807,-4.829136,9.463387,4.702869,1.295970,4.356302,1.034292,-2.237677,0.618827,-1.673980,2.719956,9.130930,4.945443,8.871408,-1.856270,-9.328237,-7.358696,1.912513,0.304927,0.136894,-1.732926,-4.711364,-7.594938], dtype = "float64")#candidate|15142|(294,)|const|float64
var_15143 = relay.var("var_15143", dtype = "float64", shape = (390,))#candidate|15143|(390,)|var|float64
call_15140 = relay.TupleGetItem(func_8545_call(relay.reshape(const_15141.astype('int16'), [12, 16, 11]), relay.reshape(const_15142.astype('float64'), [294,]), relay.reshape(const_15134.astype('int8'), [936,]), relay.reshape(var_15143.astype('float64'), [390,]), ), 1)
call_15144 = relay.TupleGetItem(func_8550_call(relay.reshape(const_15141.astype('int16'), [12, 16, 11]), relay.reshape(const_15142.astype('float64'), [294,]), relay.reshape(const_15134.astype('int8'), [936,]), relay.reshape(var_15143.astype('float64'), [390,]), ), 1)
bop_15147 = relay.power(call_15140.astype('float64'), const_15141.astype('float64')) # shape=(2112, 420)
bop_15150 = relay.power(call_15144.astype('float64'), const_15141.astype('float64')) # shape=(2112, 420)
func_7959_call = mod.get_global_var('func_7959')
func_7962_call = mutated_mod.get_global_var('func_7962')
var_15160 = relay.var("var_15160", dtype = "int8", shape = (1008, 1))#candidate|15160|(1008, 1)|var|int8
call_15159 = relay.TupleGetItem(func_7959_call(relay.reshape(var_15160.astype('int8'), [16, 7, 9]), relay.reshape(var_15160.astype('bool'), [16, 7, 9]), ), 0)
call_15161 = relay.TupleGetItem(func_7962_call(relay.reshape(var_15160.astype('int8'), [16, 7, 9]), relay.reshape(var_15160.astype('bool'), [16, 7, 9]), ), 0)
func_9162_call = mod.get_global_var('func_9162')
func_9165_call = mutated_mod.get_global_var('func_9165')
var_15163 = relay.var("var_15163", dtype = "float64", shape = (1210,))#candidate|15163|(1210,)|var|float64
call_15162 = func_9162_call(relay.reshape(var_15163.astype('float64'), [11, 10, 11]), relay.reshape(var_15163.astype('float64'), [11, 10, 11]), )
call_15164 = func_9162_call(relay.reshape(var_15163.astype('float64'), [11, 10, 11]), relay.reshape(var_15163.astype('float64'), [11, 10, 11]), )
output = relay.Tuple([call_15105,call_15121,var_15122,call_15132,var_15133,const_15134,const_15142,var_15143,bop_15147,call_15159,var_15160,call_15162,var_15163,])
output2 = relay.Tuple([call_15106,call_15123,var_15122,call_15135,var_15133,const_15134,const_15142,var_15143,bop_15150,call_15161,var_15160,call_15164,var_15163,])
func_15167 = relay.Function([var_15122,var_15133,var_15143,var_15160,var_15163,], output)
mod['func_15167'] = func_15167
mod = relay.transform.InferType()(mod)
mutated_mod['func_15167'] = func_15167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15167_call = mutated_mod.get_global_var('func_15167')
var_15169 = relay.var("var_15169", dtype = "uint8", shape = (360,))#candidate|15169|(360,)|var|uint8
var_15170 = relay.var("var_15170", dtype = "float32", shape = (30,))#candidate|15170|(30,)|var|float32
var_15171 = relay.var("var_15171", dtype = "float64", shape = (390,))#candidate|15171|(390,)|var|float64
var_15172 = relay.var("var_15172", dtype = "int8", shape = (1008, 1))#candidate|15172|(1008, 1)|var|int8
var_15173 = relay.var("var_15173", dtype = "float64", shape = (1210,))#candidate|15173|(1210,)|var|float64
call_15168 = func_15167_call(var_15169,var_15170,var_15171,var_15172,var_15173,)
output = call_15168
func_15174 = relay.Function([var_15169,var_15170,var_15171,var_15172,var_15173,], output)
mutated_mod['func_15174'] = func_15174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15315 = relay.TupleGetItem(func_15011_call(), 2)
call_15316 = relay.TupleGetItem(func_15013_call(), 2)
func_2377_call = mod.get_global_var('func_2377')
func_2380_call = mutated_mod.get_global_var('func_2380')
var_15320 = relay.var("var_15320", dtype = "float64", shape = (390,))#candidate|15320|(390,)|var|float64
call_15319 = relay.TupleGetItem(func_2377_call(relay.reshape(var_15320.astype('float64'), [13, 5, 6])), 1)
call_15321 = relay.TupleGetItem(func_2380_call(relay.reshape(var_15320.astype('float64'), [13, 5, 6])), 1)
output = relay.Tuple([call_15315,call_15319,var_15320,])
output2 = relay.Tuple([call_15316,call_15321,var_15320,])
func_15328 = relay.Function([var_15320,], output)
mod['func_15328'] = func_15328
mod = relay.transform.InferType()(mod)
var_15329 = relay.var("var_15329", dtype = "float64", shape = (390,))#candidate|15329|(390,)|var|float64
output = func_15328(var_15329)
func_15330 = relay.Function([var_15329], output)
mutated_mod['func_15330'] = func_15330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15395 = relay.TupleGetItem(func_15011_call(), 2)
call_15396 = relay.TupleGetItem(func_15013_call(), 2)
var_15397 = relay.var("var_15397", dtype = "float64", shape = (18,))#candidate|15397|(18,)|var|float64
bop_15398 = relay.equal(call_15395.astype('bool'), relay.reshape(var_15397.astype('bool'), relay.shape_of(call_15395))) # shape=(18,)
bop_15401 = relay.equal(call_15396.astype('bool'), relay.reshape(var_15397.astype('bool'), relay.shape_of(call_15396))) # shape=(18,)
func_6752_call = mod.get_global_var('func_6752')
func_6756_call = mutated_mod.get_global_var('func_6756')
var_15404 = relay.var("var_15404", dtype = "float32", shape = (420, 2))#candidate|15404|(420, 2)|var|float32
var_15405 = relay.var("var_15405", dtype = "float32", shape = (240,))#candidate|15405|(240,)|var|float32
call_15403 = relay.TupleGetItem(func_6752_call(relay.reshape(var_15404.astype('float32'), [5, 12, 14]), relay.reshape(var_15405.astype('float32'), [240,]), ), 1)
call_15406 = relay.TupleGetItem(func_6756_call(relay.reshape(var_15404.astype('float32'), [5, 12, 14]), relay.reshape(var_15405.astype('float32'), [240,]), ), 1)
func_9162_call = mod.get_global_var('func_9162')
func_9165_call = mutated_mod.get_global_var('func_9165')
const_15417 = relay.const([-5.037144,8.858746,9.460184,9.369129,2.810275,-0.208483,5.843262,1.943634,2.615669,-9.100614,2.046611,-4.924096,3.074957,7.195506,8.554315,-1.720467,-5.754999,-8.514652,8.626213,-7.713840,-6.860878,5.605417,-7.615266,-3.541279,1.749986,-7.945552,-4.524192,3.075464,4.657532,-2.158179,6.261791,-0.503212,5.253432,8.293322,-0.888471,1.173504,-4.232020,-7.964283,5.456295,-6.080157,-1.282957,-7.485071,-9.330251,-4.520518,-3.828076,-4.365290,3.688223,-6.600071,-8.579509,4.585986,0.583768,9.012199,4.955197,6.844094,-9.548926,-9.886888,-6.081996,8.909800,-2.870122,-4.871332,5.636105,-5.473726,6.702517,9.431946,-7.397727,-1.021989,3.194725,-2.249288,3.468471,-5.100660,4.620839,-3.038897,2.979076,-1.139664,8.102437,-3.206517,-3.719840,2.890187,3.617280,6.362579,0.398203,-5.995173,1.649382,-6.197403,-2.303583,9.721734,5.624491,4.768807,2.586978,-7.727165,-0.959090,1.351591,-5.251532,-8.338241,2.989551,6.145675,5.227447,-0.485857,-2.331735,6.874155,3.146031,7.423384,9.527451,6.397567,-5.147278,9.918410,-5.410261,6.231378,-4.312746,1.160418,7.814296,-4.003805,-0.070761,-4.030170,4.002490,5.982499,-5.705177,3.269281,2.970390,-5.693888,4.375527,-3.377823,9.060504,-1.354586,3.158684,6.434816,-2.381819,7.897853,-0.868201,-2.716568,6.044124,-0.153842,-6.616169,2.046436,-7.904018,4.932934,-6.191893,-9.627380,-1.464985,2.049514,-4.158773,-2.683308,-6.322656,0.477196,5.237885,5.944871,5.677136,-2.171644,1.319735,4.850388,-4.641818,1.414202,-8.410273,-4.126905,-6.736143,-0.090780,-4.906377,-7.763015,-6.011762,-4.095882,6.247261,-8.940258,5.621044,-9.722720,3.815027,5.459396,-2.781726,-4.153620,-1.446090,0.762561,-3.825377,1.628092,2.546151,8.018706,7.486687,3.847270,1.687879,1.028232,7.113887,-7.330026,4.512989,-3.445708,-9.632511,-3.149743,7.274397,-7.088075,2.096950,-6.200611,0.781234,-2.466376,2.544099,5.839802,0.143967,-0.785673,-5.341520,9.092813,-6.085733,7.340533,-2.380089,2.661960,-5.647410,0.085033,5.093208,-9.545110,-5.333646,3.531809,-4.615453,-0.328263,9.245689,-2.868347,4.835565,3.362046,5.804610,8.245062,-1.221237,3.052328,-3.269802,-1.658322,9.691402,-3.316711,5.428997,0.437367,-1.500314,5.978232,-3.485728,9.125278,-0.856276,3.426702,9.021445,2.212747,3.991233,-2.864508,-6.361647,1.488864,6.284498,1.496103,7.453522,9.078133,-2.121449,1.561476,-6.686608,6.002356,2.508401,9.950348,0.553539,-6.265923,8.002148,-4.258212,2.924086,0.387877,7.178417,8.970939,-1.643549,-9.280975,-9.814019,2.629539,-5.052708,6.838278,-9.748958,-5.234349,1.251194,-8.140027,-9.011152,-9.255028,0.010450,-7.484900,-1.484097,6.843270,-1.587131,-0.107500,-7.180029,-6.583684,-2.837785,-6.042896,-4.812758,-2.770774,-9.154377,-6.078354,5.224124,-1.455369,7.023121,9.883762,1.161505,-5.304488,-4.612364,-5.377923,-3.349019,1.772841,-8.148711,4.896274,-5.894719,-5.122899,9.749337,5.094677,-8.448369,6.022307,3.619312,1.524589,0.915728,-0.504929,-4.612285,-7.759947,7.131357,6.949168,-3.767396,-5.197812,-7.541045,6.191340,-5.606916,-3.035970,-9.130926,-7.741238,-2.497811,-9.885183,2.083364,0.428810,8.252593,-1.383099,8.257112,-2.825207,3.002137,1.322072,-8.613055,7.081388,3.506176,6.144922,0.338705,2.159040,8.180488,9.140710,8.485657,3.027540,2.161976,0.663070,0.137431,-3.149261,3.745062,8.765486,-7.087520,-6.212722,-3.523713,0.787426,4.377970,-0.178477,0.870448,7.646623,-5.519344,3.192988,-0.175700,6.046743,5.704218,-5.496602,5.483464,-5.835704,-2.707744,4.237026,-9.481303,-2.024637,-7.219802,-6.542058,3.872926,-5.221176,-5.752336,7.531671,-2.684965,8.589563,-7.524124,-4.625058,6.880153,5.355946,6.575418,-4.963298,3.855914,8.083239,3.531916,7.242660,6.393607,3.103184,-4.996548,6.412094,4.119858,-8.552045,-2.857980,7.912045,9.312547,-2.261242,0.346017,-8.433812,8.329002,-5.357645,2.693078,7.194381,5.934411,6.557764,7.968358,1.513221,2.175458,-0.169752,-7.604225,7.649933,-3.284953,5.249651,-3.580073,1.258597,8.042893,2.727810,4.542797,-0.240217,1.856365,-0.524574,-1.429466,2.982416,1.454561,1.405542,4.248096,1.369586,-8.749956,7.789476,-2.468326,5.980649,0.052960,7.833130,8.926539,7.891816,7.308695,-4.562529,3.870717,1.564429,1.389157,3.614866,0.876542,5.631795,4.313326,-0.421004,0.188954,9.952570,-7.762308,5.809798,-1.774498,-0.750773,0.167748,5.427048,-0.868118,3.573123,-1.210823,-7.578072,-8.235074,2.133613,9.320907,4.579235,9.888868,7.485897,8.483781,-0.304593,6.524976,9.040981,6.660453,-9.385871,0.627752,1.382123,-9.994839,2.672254,9.784701,-1.904131,1.370205,8.035087,-0.647577,-5.686628,-2.501235,-3.467414,-7.205106,-9.924944,-9.432803,3.212137,-5.299528,6.743296,0.529664,9.640639,-9.344549,5.801314,-7.916865,-4.719153,1.767287,-0.935734,1.997787,7.118096,6.280518,2.177980,-2.643346,6.697899,-0.652003,4.681623,-2.952542,-7.805536,-6.801128,-3.267565,7.584111,-9.049260,4.335486,-9.871731,0.202714,-8.723809,9.855001,-7.463100,4.448651,-1.245210,7.966196,0.904395,0.160974,-8.130924,9.536714,-9.246919,0.976114,4.464839,0.786256,-4.641733,1.886971,1.565752,-0.419787,5.740139,-0.420047,1.864613,0.173681,0.449619,0.679876,0.364056,-0.833034,5.656844,-5.904748,-5.694750,-9.559264,-6.402769,-9.768951,-7.433020,9.634657,-0.866536,7.310062,0.330629,-1.462577,6.442251,-3.534092,-3.469409,-6.972396,6.279784,-2.889306,7.156892,-8.038953,-1.190680,3.903343,8.129285,-2.778039,-6.278698,-8.298727,1.840319,-8.804055,-0.878199,7.222793,9.616680,-4.358008,-2.089072,4.287197,8.257638,4.687812,-6.431636,-9.760811,8.049623,5.826547,-7.509717,-4.268040,-5.917302,5.215732,3.720470,5.835242,-0.095024,8.935999,-0.698947,-5.543147,-7.381197,9.812950,5.021003,1.166656,2.300177,-1.103388,-4.811310,0.465828,-0.120813,6.775221,0.875044,-1.819973,-9.559368,-4.851361,-4.268698,-7.244422,-2.558022,6.557389,8.519336,-6.577131,6.708754,-8.202617,4.239613,-0.471690,-9.941685,-1.206816,-3.017824,-4.859430,-2.161743,6.596157,4.202723,-2.600532,-6.064248,6.254161,-9.634215,-6.035612,5.800065,9.145593,-7.431920,-9.809219,3.742443,-4.326730,0.428724,-5.602759,8.227860,7.715139,5.240641,-8.473384,2.751215,1.453562,5.844613,-4.562029,-6.635190,-4.700905,3.800165,-0.219210,3.882204,7.680754,2.092607,-4.112586,0.309736,1.486729,7.447077,-7.326692,-2.163390,-8.351768,9.583140,-4.394793,-9.594537,-6.502371,3.252362,-2.499198,1.492858,4.834737,4.996119,4.997598,6.376141,9.530589,-0.688814,-7.625389,0.813293,9.632437,9.626888,8.655788,-9.393018,2.749664,-9.388373,-5.013572,3.202105,-9.582175,0.903283,-1.967940,-6.424843,-2.558700,9.123984,6.538625,0.428374,-5.724269,-1.032140,8.288356,5.780356,-0.971647,-0.781209,-3.042398,5.903227,7.578126,-6.010812,2.351425,3.859718,-6.065375,-1.541638,-7.177992,-9.608209,-5.569775,-3.089825,7.773790,2.165064,5.293729,-7.163407,1.500820,-5.943455,-1.524272,-7.840793,8.908546,0.428281,8.363923,-7.269127,-5.269930,-8.182779,4.914365,-9.299691,-8.235677,7.803712,7.168195,2.301413,0.063440,7.056486,3.238225,5.198612,-1.090334,-3.986971,7.262017,8.392160,7.081969,-6.725809,-0.912330,1.707421,-1.954804,-2.638995,-7.454579,3.576135,7.855920,7.505700,-3.864982,1.426495,-2.830004,-5.495931,-8.018665,6.467824,9.674774,4.863362,-7.442363,2.454733,2.588783,-3.807912,8.629925,4.725167,0.326732,0.723096,7.971008,-6.543198,-5.758301,2.812008,-7.799827,-5.415489,2.844141,4.609737,-2.853284,-1.487153,-9.098388,1.633058,-7.274883,-6.518377,-1.709525,-9.087464,-8.674447,1.010075,4.814824,-0.364556,6.193622,-8.325996,-0.564432,-9.855820,-2.143513,-1.768857,7.851224,-3.070996,-5.588308,1.870465,5.521655,-6.189954,-1.333441,-4.458704,1.782006,0.521794,-7.040415,5.732666,0.274362,3.184368,-9.128029,-8.082262,-2.055808,-8.865972,4.082540,4.245837,0.139014,8.624900,0.485382,6.858606,-1.367020,5.878602,-1.544588,7.642328,-2.112944,9.013001,-4.164419,-6.893039,8.411883,3.567032,2.463504,5.021267,-7.929353,-0.035055,-7.484551,-2.280477,3.536617,2.669402,-2.889467,8.540907,-8.531775,-4.523850,1.025821,1.850150,1.455246,6.276942,9.665201,4.472491,1.717368,2.305912,1.240444,-0.296145,3.524019,1.117817,-1.974175,-0.652040,2.843325,1.342990,6.569353,3.758912,3.534275,7.342399,0.953951,0.170755,3.708299,0.907441,-4.589908,9.912221,6.820292,-3.222351,1.971290,-5.854087,8.334459,0.951665,-3.804918,4.832368,-2.663930,-1.151383,9.099092,-7.413867,-4.941814,1.799485,-5.619706,-9.395728,4.535374,0.759693,7.814055,-9.826439,-4.391428,-6.773048,-4.805023,-1.616528,-1.061627,2.506127,-4.848629,-4.385451,0.813870,-9.092224,-9.954745,1.706771,3.261196,3.206443,1.905996,1.615706,5.193735,-6.476827,1.178398,-3.920827,-1.344149,3.599501,-5.609516,7.700246,0.610236,2.859975,0.424063,-5.072846,4.545743,9.558006,6.961644,-3.564833,-3.989287,-7.170837,-2.203598,-5.934203,-1.524658,0.518482,7.805537,-9.885762,-0.025983,0.476750,2.949269,-2.486804,9.969620,8.043167,-8.316985,7.684254,-4.038062,-1.533324,9.112609,5.155907,-4.246002,-7.328271,-7.248417,1.114008,-1.156494,-6.521054,-7.512036,-7.755890,-2.807116,-7.263786,-5.521358,-5.372505,7.609573,1.740533,8.994110,6.658513,6.403585,5.118615,-7.479800,0.376132,7.941121,-1.495505,-8.634546,1.447141,-8.900410,-6.675572,-5.113855,-5.118736,6.441691,-7.368327,-7.619904,5.755626,6.456715,3.547114,1.990486,-9.390427,-1.396080,-6.718296,7.788037,-6.401433,1.225405,-4.538156,1.283923,6.076027,-0.836097,5.045995,2.379165,2.437737,3.517458,5.776590,7.974536,-8.668392,-5.183713,-6.390047,-1.238168,-4.856863,2.609556,5.445565,1.614345,-5.678419,-9.784591,-2.646507,-3.235382,-6.259662,6.777491,-0.963062,7.614076,-9.450913,3.309038,-9.531387,6.184155,7.099320,2.644637,9.096239,0.821187,0.611303,3.533925,-5.962312,3.818125,-8.259413,-1.048494,3.456816,6.509710,5.395739,-8.609465,-0.421737,-5.816767,9.356299,3.683304,-9.372312,-3.975366,-9.819000,-1.027415,7.329884,-4.340723,-7.324934,-9.917788,-6.793821,6.933760,-7.380863,5.970407,-9.815533,-4.218356,-2.896882,-6.207501,-6.777886,-4.098971,7.969275,6.979312,-1.006082,-7.784944,-4.211518,-6.775289,-4.448167,1.878720,3.084952,7.661046,-0.595671,7.068599,6.420370,-3.054282,-4.021396,4.910798,3.810019,-1.174873,-6.248991,-9.854548,9.072093,7.746734,-0.149517,-0.132521,-4.733189,1.216936,7.735758,9.684226,5.103306,2.151605,-9.208985,6.831510,0.590187,6.556754,-3.889433,1.755263,-2.445860,3.930292,5.223298,-8.015570,2.862359,-4.264937,3.100660,-2.426695,3.502165,-0.630915,-3.574962,3.325826,-8.766176,1.764999,-6.796816,-3.998656,1.578649,-0.730129,-2.579900,-9.057580,-7.699940,-5.479456,-9.138520,-2.828127,-3.272295,3.798941,-3.275391,9.899643,6.946416,7.330728,1.091008,-0.479279,3.808151,1.149732,-0.450775,-0.609993,-9.905286,-9.500088,0.332888,7.182720,9.962288,-0.103100,6.666490,-9.072024,-9.299068,0.879361,-1.580551,-1.170584,-6.336139,2.937096,-3.850794,3.945706,-8.807020,8.623159,3.465976,-0.501573,-2.167668,-4.772300,-4.044685,-5.864539,1.535488,-3.154149,-5.263841,6.298736,-2.925422,7.337581,-4.579566,2.024789,-3.261573,-6.294543,5.944284,-9.842973,5.426635,-0.501720,-3.311161,-3.170824,-5.313210,6.816867,-4.995459,5.542394,7.640988,0.708025,6.223062,-7.201801,8.655948,2.007089,1.836077,-1.340687,9.542406,-8.996936,-2.872156,6.345636,1.939497,4.099650,6.775600,-1.480941,2.993458,7.484657,5.633234,-7.016634,-1.029943,6.128081,7.581137,1.372589,-8.897615,-3.300468,-7.527326,9.554159,-2.412117,1.207824,0.288509,-7.717533,2.685647,-4.320753,-1.971781,-6.114207,-8.682758,-5.662900,5.058393,-4.440408,-7.882536,-0.912464,-8.935742,-2.201372,-4.400860,1.276786,-0.244960,-5.435881,9.773690,-6.504558,3.409061,-9.931979,-5.159993,-0.101110,-3.884376,-3.297347,9.368512,-9.364285,-6.378065,9.908883,-8.065225,8.688681,-1.668393,7.224123,-0.690542,6.077611,-5.991619,4.982872,6.797650,-0.847396,9.638244], dtype = "float64")#candidate|15417|(1210,)|const|float64
call_15416 = func_9162_call(relay.reshape(const_15417.astype('float64'), [11, 10, 11]), relay.reshape(const_15417.astype('float64'), [11, 10, 11]), )
call_15418 = func_9162_call(relay.reshape(const_15417.astype('float64'), [11, 10, 11]), relay.reshape(const_15417.astype('float64'), [11, 10, 11]), )
func_13585_call = mod.get_global_var('func_13585')
func_13592_call = mutated_mod.get_global_var('func_13592')
const_15423 = relay.const([-4,3,5,6,8,-8,-4,-4,-1,-2,-8,9,-4,-6,-9,-5,4,-6,-1,-6,4,4,6,8,-2,-8,-9,-8,8,-5,1,-2,8,-3,-10,-10,4,-2,-3,-10,3,5,7,-4,-9,9,-10,4,-9,-9,-7,5,2,-2,10,-9,-1,6,8,-2,10,7,-4,-8,-2,-2,-5,-10,6,3,5,-10,6,4,-5,-3,8,7,-4,5,-3,3,-5,6,-5,7,2,-6,-3,-6,-7,-5,10,-8,-6,-8,-1,-6,6,-8,-2,-2,-2,7,-1,6,-2,6,5,-6,-7,2,7,-4,2,3,7,-2,-6,-6,2,6,5,5,3,2,6,-8,2,4,-2,-1,4,7,10,8,5,5,-5,-1,2,10,7,-10,8,6,5,-10,-9,-1,-2,3,3,9,-10,4,-4,-1,2,10,5,3,-3,9,2,1,8,-1,-3,7,-1,-5,-7,3,-8,-1,-1,5,7,-6,-5,-3,2,-4,-6,-8,5,-9,-2,2,-9,4,-7,-4,4,-3,8,4,2,4,-10,-5,8,7,-10,9,-4,-9,-4,7,-4,9,-6,1,10,8,-10,6,6,-7,4,6,-2,1,10,4,-8,-8,-5,-6,6,8,4,-5,9,9,-9,3,9,-7,-4,5,-3,10,-3,6,8,-7,-10,-7,4,4,8,-5,3,-8,-3,3,-7,8,7,1,-8,2,-1,-6,-2,10,-10,-8,9,2,-8,-1,-7,-5,3,-2,4,-10,2,4,8,5,-1,3,-9,-3,1,2,-5,4,2,-10,9,-5,-9,6,-3,7,2,-7,6,-7,-5,7,-5,7,-7,6,-8,9,-10,-7,4,8,-6,8,-6,-1,6,-1,8,-2,5,-1,9,-2,-4,3,-7,-5,-7,-6,-2,5,6,-10,-4,-9,10,-5,1,9,8,-5,-2,-7,5,-3,-2,-4,-2,5,9,-6,6,-10,-9,-2,1,-4,-10,-4,-8,-2,3,1,2,-3,1,-10,3,4,8,-2,3,-4,9,-8,4,9,7,5,7,-8,9,3,-7,5,3,4,3,1,-5,9,10,-7,8,-6,-1,-3,-4,4,5,7,-5,8,-9,10,-9,-1,8,9,1,-3,2,5,-4,7,8,-9,-5,3,-7,5,-3,-6,6,7,1,-2,-5,10,7,9,1,2,-5,7,-1,8,1,-7,1,8,3,6,-8,7,4,-5,-4,-1,4,-2,2,-1,6,-2,1,1,-10,3,-5,-5,8,4,-7,-2,-2,-7,4,9,-5,9,1,-9,-8,10,3,-2,5,3,-10,-4,9,9,1,-5,9,10,3,10,2,-3,-5,-3,1,-4,-1,7,4,-5,-4,-9,4,2,1,-9,3,-5,8,-9,-6,-2,-5,-8,5,-2,-4,9,-2,-7,4,-5,9,5,2,6,9,6,7,3,-7,-8,-7,1,9,-4,4,-9,-1,-8,-10,-10,2,-5,8,-8,4,-6,-4,-2,-4,5,-6,-1,-9,-10,3,10,-6,4,-2,8,8,-6,-2,-3,-5,-6,-5,7,-8,-4,7,-6,-10,6,3,-7,10,3,-4,-2,-7,9,7,-7,-3,4,7,-2,2,-9,3,-6,-1,-7,-5,3,9,-5,10,-9,-5,6,5,-10,-7,10,7,3,4,5,10,3,-4,6,-10,-8,8,-10,-1,9,-9,7,6,-6], dtype = "uint16")#candidate|15423|(630,)|const|uint16
var_15424 = relay.var("var_15424", dtype = "float32", shape = (1680,))#candidate|15424|(1680,)|var|float32
const_15425 = relay.const([-8.053091,1.725309,3.840892,0.089610,-8.902569,7.648889,8.261643,8.059569,-3.102536,-1.565728,-1.140110,-4.803129,-8.928215,0.552920,-6.142338,2.559673,-0.634032,-3.100456,1.267037,3.671903,2.073238,-1.684847,3.219192,6.812301,6.355938,-0.114727,-8.171725,-7.599991,8.132407,-5.312634,9.319168,-2.809207,-2.245989,-7.055562,2.307141,7.544553,-8.572660,2.924374,5.242700,-6.498546,-0.650962,5.913621,3.240175,2.219055,2.328109,6.788639,7.230212,-4.295937,-5.668976,-0.030765,3.735814,-1.591250,8.303282,7.663005,3.781717,5.157631,-9.728135,-1.235881,-9.270342,-1.940984,6.728345,-5.310836,0.829921,-2.748551,5.315569,5.695515,-7.053165,1.999892,9.675782,-5.400110,-9.424674,7.697112,-4.832525,-3.121353,3.803597,1.039436,-3.246052,-3.341904,-7.068215,-9.887246,1.650537,-4.936430,2.744514,9.009147,-8.632240,5.011307,8.415120,3.552928,-4.803500,-9.538328,-0.756258,-3.736309,0.069569,3.520882,8.832129,-2.197603,7.005004,-6.319304,-5.855453,-1.922779,-3.150161,8.660526,-1.481807,6.398138,-8.000805,-2.800942,0.775329,-3.349168,1.855600,3.732167,6.680593,8.006996,-9.444088,3.498321,9.035965,-3.919373,-7.116544,4.328831,-3.379087,0.397473,-5.798484,-7.640283,9.091853,6.457926,-4.252016,9.759054,-1.020040,-8.356360,9.941309,4.982544,3.253637,-7.254199,8.341893,-9.829298,-3.140519,-4.503755,-2.287710,7.758729,7.413635,-4.114880,8.404416,1.994375,9.494248,-1.228656,-5.465189,8.502121,7.037203,0.641597,-4.331217,4.500805,3.009841,0.895905,-5.637652,4.232669,3.635566,0.105386,-9.017209,-3.676494,-4.667719,-0.030185,-9.626261,2.402196,8.103654,-6.803103,-1.901609,-6.876415,-0.461910,1.337148,-5.197447,-6.045175,8.882165,-0.274340,1.451371,3.621030,-7.465612,-6.863269,3.993161,-7.621676,-6.804039,-7.618997,-1.016828,-1.028889,7.681122,3.812933,8.807203,4.557650,0.300560,-6.510406,4.935652,7.716472,2.955880,-2.529314,3.241616,6.266920,-6.117257,-4.752281,-7.198662,5.087602,2.655606,-1.225366,-7.119400,6.564181,3.033599,-1.823773,4.145774,-2.187650,7.661610,6.183849,-0.904084,-4.260354,2.433433,0.477569,-0.547326,8.739142,-1.275092,-8.514351,8.281689,-8.804598,9.282689,0.870391,-2.899399,7.653822,7.874857,-3.212756,2.937721,-4.999999,-9.300634,-5.633297,-8.906342,-1.583541,1.883343,7.749031,-0.669214,-7.504742,4.077101,-0.077210,8.262750,2.265397,-6.689532,-5.757560,2.657231,-2.586460,3.848186,-9.342600,-3.511849,-3.869359,4.933895,4.296647,7.938841,4.077630,7.463799,9.573608,9.277968,7.503515,-2.062482,7.150391,-3.187694,8.426511,-8.130805,0.783147,-2.586449,2.905267,-0.339026,8.548946,-1.544881,-4.277034,-1.326867,-3.113428,-0.828124,-6.469801,-3.143106,-0.205813,8.063559,-7.450024,8.066904,2.898809,4.179425,4.291685,9.318774,6.627986,6.740335,8.325127,7.681323,0.433227,-0.938171,0.489334,6.683545,0.995001,5.059324,4.631191,-3.212522,5.037533,7.859266,5.701200,6.240491,-1.169235,-7.994465,4.573227,8.953752,0.173419,-9.365527,-6.996497,1.337542,-6.525786,2.517776,7.564585,-8.583470,8.307662,-1.599982,-6.594598,-2.731710,-6.706791,4.886116,-6.427753,1.363898,-1.669566,-1.701766,9.192704,-6.421815,0.280670,6.810798,0.022803,3.331131,7.869664,3.025022,3.845143,-7.847446,-3.659123,9.191596,7.260484,5.725803,-7.923910,-9.379489,0.023141,-1.964770,8.545645,2.032971,4.100059,1.412895,-6.553971,5.413941,-8.843403,-1.504009,3.212899,-2.449819,-0.711144,-7.808815,5.190889,-5.897236,7.199610,2.993303,6.190739,-1.410921,5.011367,4.339058,-0.183905,-4.189892,9.207451,-1.455588,-2.030974,1.769834,-6.905319,-2.138176,-2.073232,-9.427085,0.799250,-5.984735,-8.651103,8.304666,6.980666,-1.698897,7.412467,-1.767729,8.875801,9.615561,7.291640,-1.163361,-0.191887,-0.593228,5.841480,7.841291,-8.709457,5.122324,-9.750056,4.602155,-6.036409,9.054678,-0.030159,-6.506563,-8.166991,3.085795,-3.963441,2.534207,-0.419558,3.403473,-4.320176,-7.469717,9.157181,-8.966314,6.122799,8.761932,4.331851,1.840312,-8.869346,2.886656,-0.955682,2.776737,-0.976671,2.689819,-7.929907,-7.634127,5.430305,9.766322,8.388120,-9.381213,5.038558,-3.791885,6.102831,-5.330774,7.838267,-5.344391,9.787783,-9.291941,2.716448,-9.353543,-0.379236,-0.092411,-3.294773,-1.077849,8.546070,-4.473741,-5.291210,7.484109,-8.234414,-8.283263,2.300100,2.896273,-9.897249,-5.408858,-7.788874,7.453436,-7.348640,-2.182571,0.774449,-8.746365,-7.977660,-1.208766,0.637799,-5.083325,1.748352,0.599346,5.910756,3.041743,-4.893457,4.637587,0.313946,4.289984,7.196325,-6.945088,8.034401,3.614015,3.010832,-6.047672,-5.334477,-9.158101,1.521583,-8.439380,9.371367,-6.868447,-2.493682,-8.611001,-4.895874,9.721076,4.203326,4.211414,-1.789864,-3.141778,-5.885610,-0.402035,0.090860,-1.095269,-7.694600,-0.728088,3.548709,6.421359,-6.463120,5.582820,6.523848,-3.655420,-8.961303,1.398629,9.273474,-0.875428,5.350691,-1.994857,4.072405,4.010610,9.429870,5.449936,6.161154,-3.672144,-4.346086,-0.357557,-8.079920,3.113726,-1.628540,4.046014,-7.955180,8.623449,-7.194918,8.453261,9.118115,8.876052,-6.280896,2.093923,3.157093,0.193175,7.778597,-3.603373,3.419010,-1.836323,-9.330460,6.079179,9.641715,-0.952364,-5.037086,0.998529,4.038702,-7.358364,-2.285824,9.175927,-7.628230,9.819139,-4.488666,4.667179,0.740130,-7.810816,-1.628700,2.796999,-2.978652,5.258098,9.217981,-2.923626,-3.655001,-5.721401,-5.989444,-0.720276,-4.976374,-6.396673,7.231445,-3.691149,9.228261,4.500805,-0.497300,1.876900,-3.022102,2.773320,-6.709944,-6.288650,8.708983,8.560743,-5.146976,-7.990757,1.866068,-4.618658,-8.119020,-6.695206,2.985216,3.301639,-4.822272,-8.156302,-1.750513,-7.188581,-4.143217,0.999452,3.352666,3.596970,-0.715323,-7.452309,4.201054,2.053449,-2.903724,4.347971,9.725557,8.615171,-0.540348,-5.129555,-3.522768,3.089351,-1.451426,-2.161388,7.597764,2.693064,5.841848,0.228750,-5.115013,-2.854545,-0.433396,-3.472336,6.800068,0.431974,-1.075803,-6.271611,-6.498787,0.373873,-3.894319,-6.160269,7.501924,2.467934,-5.240473,9.408793,7.673178,4.382526,-4.228611,6.834321,7.763774,6.692322,3.465446,-3.479525,0.922610,-2.224851,9.762607,2.614036,-4.982580,5.502965,7.390908,-9.903411,8.877754,9.183672,4.460500,6.554477,8.359329,-1.149745,-6.573052,5.717959,-2.811302,9.983407,-4.520330,4.567692,3.426800,7.788063,6.969922,-9.149472,5.003154,-9.032375,-5.140746,-3.572582,-4.568499,-0.631814,3.788270,-4.836590,6.049878,-6.924159,-4.230313,2.605177,-4.970906,2.262046,-9.295663,-8.164096,2.959386,-7.495504,-7.841931,3.750146,-8.602050,0.109927,1.400661,9.548745,8.739552,3.299683,5.975968,-4.139613,8.351376,-8.769092,3.992273,-2.467338,0.737864,-8.352870,6.193371,3.921005,-7.312614,2.757711,-5.241778,-1.018460,-0.370263,-6.234857,-3.629548,-1.789292,-6.724505,2.334109,3.006725,-1.174764,0.901954,4.065718,-4.695393,-6.822587,0.705855,0.517553,-5.119590,-7.909646,2.184901,1.952362,1.449849,8.333222,-4.028169,0.032964,-4.817326,-0.092800,-4.034055,-1.574123,-7.181485,0.347841,5.605623,-4.367853,1.573667,-0.945173,0.993442,-4.259421,2.246922,-1.567949,4.252754,-1.194661,5.161599,8.249991,-8.317756,-7.835682,-3.358269,-9.561005,-5.080074,6.038727,5.025258,-3.051448,9.539222,7.204802,6.258562,-0.605094,0.259947,-5.806461,-2.806700,4.514657,-2.118855,7.812565,6.608357,-9.181093,-5.957992,6.389191,7.014278,-0.767167,4.134445,-7.651795,4.317499,2.047299,3.247281,8.915101,1.611987,-3.957301,7.382658,-2.796727,5.725323,-9.021977,-3.716769,-6.874716,-8.091965,2.795145,-4.314649,-7.651115,-5.121113,4.795280,1.186860,9.985815,5.323623,-0.060442,-8.422398,6.052515,1.937516,3.737648,-4.873669,-3.099230,2.344010,-6.988122,8.881144,3.813849,-6.158833,5.439193,-9.090453,-4.448588,-1.058565,-6.886207,6.540131,-8.024675,3.399032,-8.886997,3.315635,-7.432040,-9.506185,5.766495,8.730604,-5.793068,3.675827,-8.934346,-7.171399,5.465317,0.755382,0.591233,4.135603,-7.492939,-3.007920,-1.773475,9.303967,-1.283630,2.441614,3.957677,-2.925997,-4.010389,7.858014,7.606190,4.675653,-3.629392,-0.884232,4.654466,7.004018,9.916114,9.636619,-7.365725,-1.738610,-9.681382,-2.603876,6.198570,5.398080,-1.330351,-7.388733,1.307944,-3.789664,-4.071388,3.752838,-7.818176,0.501617,-6.763848,-2.858144,6.446331,3.574763,-4.489302,9.705021,3.541527,-0.319396,8.981414,5.109111,-8.205341,-3.071100,0.560557,1.160183,1.553926,7.050824,4.409914,-6.895776,-9.031882,-0.232120,6.195341,-2.373131,4.362246,-6.799835,9.562732,5.826892,8.817506,6.959715,6.405176,-5.411274,0.999538,8.009821,4.754334,-1.862824,4.698994,0.073132,-4.383721,9.859295,-6.737729,0.285106,-7.877181,4.839611,-3.346487,-8.012596,5.042709,-9.614931,-9.543574,0.886977,0.601661,7.167743,8.818847,6.202394,0.708217,6.028340,-3.659663,2.922045,6.348255,-2.330358,1.899765,2.743063,-4.283661,-4.615915,8.052481,-4.716902,2.045127,-9.230337,-1.480635,-0.893307,-6.858777,9.976412,-7.078966,1.159917,-3.362775,-2.669193,-6.193089,-8.342119,6.426042,4.856152,1.410420,-9.686260,-1.386565,7.601953,-4.380577,-1.927034,5.435658,-2.147717,-4.310541,1.580403,3.860555,9.678945,8.491801,-9.757834,-2.371390,-2.486498,-3.478970,-6.351385,2.545405,8.838592,8.968106,-5.771157,-9.400468,4.007948,8.039827,4.580667,-3.408380,-3.455944,-7.524148,-0.594900,4.289165,-6.000323,8.003253,-9.629068,-4.902271,2.813215,4.183126,-1.627319,-8.773974,-4.792196,-5.385823,-1.034996,-7.604116,4.604255,-2.185195,7.466232,-8.886270,9.998994,-8.636762,-9.602467,0.871822,3.664081,6.790815,-1.565590,2.410951,7.982298,-1.783473,-8.556856,8.575845,-1.588382,1.249475,8.195857,4.649595,-3.501612,-7.480832,7.324531,-7.189613,-4.196703,-4.447513,6.560261,2.731511,-3.975078,-6.675778,2.375016,-8.758319,5.279007,0.669134,4.511026,8.928446,6.768006,-7.584671,-1.035119,0.235618,-6.658574,5.149492,3.977290,2.121217,9.484948,-8.031716,1.684606,-9.283594,-7.945279,9.049850,-5.788260,7.733671,-2.730227,-2.788113,-4.043021,5.564952,-8.933045,-8.885410,1.300292,8.272434,-5.848833,5.936447,-8.185448,-9.929536,-9.162219,-4.886832,0.014767], dtype = "float64")#candidate|15425|(1024,)|const|float64
var_15426 = relay.var("var_15426", dtype = "uint64", shape = (96,))#candidate|15426|(96,)|var|uint64
call_15422 = relay.TupleGetItem(func_13585_call(relay.reshape(const_15423.astype('uint16'), [14, 15, 3]), relay.reshape(const_15423.astype('uint16'), [14, 15, 3]), relay.reshape(var_15424.astype('float32'), [1680, 1]), relay.reshape(const_15425.astype('float64'), [1024,]), relay.reshape(var_15426.astype('uint64'), [96,]), ), 3)
call_15427 = relay.TupleGetItem(func_13592_call(relay.reshape(const_15423.astype('uint16'), [14, 15, 3]), relay.reshape(const_15423.astype('uint16'), [14, 15, 3]), relay.reshape(var_15424.astype('float32'), [1680, 1]), relay.reshape(const_15425.astype('float64'), [1024,]), relay.reshape(var_15426.astype('uint64'), [96,]), ), 3)
func_13220_call = mod.get_global_var('func_13220')
func_13222_call = mutated_mod.get_global_var('func_13222')
const_15432 = relay.const([-5.218598,7.362078,4.039448,-5.961017,-4.424342,8.414656,6.750134,-4.872352,-1.974605,-4.065097,2.541690,2.678198,-4.454665,-5.898379,2.009253,8.483889,6.580967,9.783402,6.261281,-3.991556,-3.574777,-0.212137,-9.008119,-5.855639,8.451232,-8.317879,7.126385,0.795339,-7.314716,-8.592749,-7.053229,2.974817,-3.838196,7.772996,-5.247572,5.072329,1.504092,-7.109150,3.716881,3.648613,-8.410200,5.148209,7.378442,7.318068,9.663470,-6.489597,-9.776995,0.821585,-8.210182,-8.368705,6.653607,2.984433,9.162143,-1.860016,-1.754049,7.732242,1.928846,6.497950,8.685363,-4.988171,-5.728091,2.004143,3.359266,6.876841,8.996824,-7.834580,-0.427916,3.732745,-4.853502,-1.722480,0.937074,2.774138,-3.426445,-3.528098,4.658314,-2.545503,4.181415,-5.867859,5.694860,-1.986067,9.686487,5.593893,-1.272665,-5.515406,-9.804469,-4.219042,-5.435518,2.362814,-0.951339,8.520207,-1.523619,4.109794,7.450294,-9.409356,9.237765,8.596150,-4.597848,-3.517690,5.533399,5.813647,8.162686,-2.295932,6.947487,5.882602,9.279051,9.956274,-1.573690,3.260415,4.881919,-7.530982,-6.764355,1.168465,-0.408564,8.931826,-4.481091,-2.538929,-2.517524,-9.608532,-7.812005,5.159661,-6.262892,0.699767,6.380815,-9.050323,4.837663,-8.698164,-9.795313,-9.085591,0.848304,-1.444547,-7.446146,-5.525483,6.157072,-8.617007,-8.818358,4.217383,-8.583848,2.158565,8.447074,-0.682483,8.993722,-7.573177,1.375384,-1.601601,9.266710,-0.113977,6.039545,-1.659951,7.865567,-2.215368,1.074066,-2.014490,7.941357,1.554769,9.011796,6.558071], dtype = "float64")#candidate|15432|(156,)|const|float64
call_15431 = relay.TupleGetItem(func_13220_call(relay.reshape(const_15432.astype('float64'), [13, 6, 2])), 0)
call_15433 = relay.TupleGetItem(func_13222_call(relay.reshape(const_15432.astype('float64'), [13, 6, 2])), 0)
func_8128_call = mod.get_global_var('func_8128')
func_8132_call = mutated_mod.get_global_var('func_8132')
var_15451 = relay.var("var_15451", dtype = "float64", shape = (405,))#candidate|15451|(405,)|var|float64
var_15452 = relay.var("var_15452", dtype = "int8", shape = (936,))#candidate|15452|(936,)|var|int8
call_15450 = relay.TupleGetItem(func_8128_call(relay.reshape(var_15451.astype('float64'), [15, 3, 9]), relay.reshape(var_15452.astype('int8'), [936,]), ), 1)
call_15453 = relay.TupleGetItem(func_8132_call(relay.reshape(var_15451.astype('float64'), [15, 3, 9]), relay.reshape(var_15452.astype('int8'), [936,]), ), 1)
output = relay.Tuple([bop_15398,call_15403,var_15404,var_15405,call_15416,const_15417,call_15422,const_15423,var_15424,const_15425,var_15426,call_15431,const_15432,call_15450,var_15451,var_15452,])
output2 = relay.Tuple([bop_15401,call_15406,var_15404,var_15405,call_15418,const_15417,call_15427,const_15423,var_15424,const_15425,var_15426,call_15433,const_15432,call_15453,var_15451,var_15452,])
func_15463 = relay.Function([var_15397,var_15404,var_15405,var_15424,var_15426,var_15451,var_15452,], output)
mod['func_15463'] = func_15463
mod = relay.transform.InferType()(mod)
mutated_mod['func_15463'] = func_15463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15463_call = mutated_mod.get_global_var('func_15463')
var_15465 = relay.var("var_15465", dtype = "float64", shape = (18,))#candidate|15465|(18,)|var|float64
var_15466 = relay.var("var_15466", dtype = "float32", shape = (420, 2))#candidate|15466|(420, 2)|var|float32
var_15467 = relay.var("var_15467", dtype = "float32", shape = (240,))#candidate|15467|(240,)|var|float32
var_15468 = relay.var("var_15468", dtype = "float32", shape = (1680,))#candidate|15468|(1680,)|var|float32
var_15469 = relay.var("var_15469", dtype = "uint64", shape = (96,))#candidate|15469|(96,)|var|uint64
var_15470 = relay.var("var_15470", dtype = "float64", shape = (405,))#candidate|15470|(405,)|var|float64
var_15471 = relay.var("var_15471", dtype = "int8", shape = (936,))#candidate|15471|(936,)|var|int8
call_15464 = func_15463_call(var_15465,var_15466,var_15467,var_15468,var_15469,var_15470,var_15471,)
output = call_15464
func_15472 = relay.Function([var_15465,var_15466,var_15467,var_15468,var_15469,var_15470,var_15471,], output)
mutated_mod['func_15472'] = func_15472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15497 = relay.TupleGetItem(func_15011_call(), 2)
call_15498 = relay.TupleGetItem(func_15013_call(), 2)
output = call_15497
output2 = call_15498
func_15501 = relay.Function([], output)
mod['func_15501'] = func_15501
mod = relay.transform.InferType()(mod)
output = func_15501()
func_15502 = relay.Function([], output)
mutated_mod['func_15502'] = func_15502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15501_call = mod.get_global_var('func_15501')
func_15502_call = mutated_mod.get_global_var('func_15502')
call_15506 = func_15501_call()
call_15507 = func_15501_call()
output = call_15506
output2 = call_15507
func_15510 = relay.Function([], output)
mod['func_15510'] = func_15510
mod = relay.transform.InferType()(mod)
output = func_15510()
func_15511 = relay.Function([], output)
mutated_mod['func_15511'] = func_15511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15501_call = mod.get_global_var('func_15501')
func_15502_call = mutated_mod.get_global_var('func_15502')
call_15512 = func_15501_call()
call_15513 = func_15501_call()
output = relay.Tuple([call_15512,])
output2 = relay.Tuple([call_15513,])
func_15553 = relay.Function([], output)
mod['func_15553'] = func_15553
mod = relay.transform.InferType()(mod)
output = func_15553()
func_15554 = relay.Function([], output)
mutated_mod['func_15554'] = func_15554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15501_call = mod.get_global_var('func_15501')
func_15502_call = mutated_mod.get_global_var('func_15502')
call_15557 = func_15501_call()
call_15558 = func_15501_call()
output = relay.Tuple([call_15557,])
output2 = relay.Tuple([call_15558,])
func_15565 = relay.Function([], output)
mod['func_15565'] = func_15565
mod = relay.transform.InferType()(mod)
mutated_mod['func_15565'] = func_15565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15565_call = mutated_mod.get_global_var('func_15565')
call_15566 = func_15565_call()
output = call_15566
func_15567 = relay.Function([], output)
mutated_mod['func_15567'] = func_15567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15565_call = mod.get_global_var('func_15565')
func_15567_call = mutated_mod.get_global_var('func_15567')
call_15570 = relay.TupleGetItem(func_15565_call(), 0)
call_15571 = relay.TupleGetItem(func_15567_call(), 0)
output = call_15570
output2 = call_15571
func_15581 = relay.Function([], output)
mod['func_15581'] = func_15581
mod = relay.transform.InferType()(mod)
mutated_mod['func_15581'] = func_15581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15581_call = mutated_mod.get_global_var('func_15581')
call_15582 = func_15581_call()
output = call_15582
func_15583 = relay.Function([], output)
mutated_mod['func_15583'] = func_15583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15510_call = mod.get_global_var('func_15510')
func_15511_call = mutated_mod.get_global_var('func_15511')
call_15584 = func_15510_call()
call_15585 = func_15510_call()
output = relay.Tuple([call_15584,])
output2 = relay.Tuple([call_15585,])
func_15589 = relay.Function([], output)
mod['func_15589'] = func_15589
mod = relay.transform.InferType()(mod)
mutated_mod['func_15589'] = func_15589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15589_call = mutated_mod.get_global_var('func_15589')
call_15590 = func_15589_call()
output = call_15590
func_15591 = relay.Function([], output)
mutated_mod['func_15591'] = func_15591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15565_call = mod.get_global_var('func_15565')
func_15567_call = mutated_mod.get_global_var('func_15567')
call_15688 = relay.TupleGetItem(func_15565_call(), 0)
call_15689 = relay.TupleGetItem(func_15567_call(), 0)
func_14918_call = mod.get_global_var('func_14918')
func_14922_call = mutated_mod.get_global_var('func_14922')
var_15691 = relay.var("var_15691", dtype = "float64", shape = (72,))#candidate|15691|(72,)|var|float64
const_15692 = relay.const([-8.272999,2.959805,-7.748083,-0.767814,5.949422,8.273519,1.328688,-2.760192,-9.672956,-0.303488,-4.845351,1.918796,2.991323,4.949020,-8.849735,2.552225,-5.732734,1.554297,-1.186838,-6.007275,-4.799365,8.489768,-2.224205,-1.251340,-4.342321,8.300879,5.762579,8.401721,8.448886,-5.921975,-2.690477,-0.595006,-2.265543,-6.260057,4.899801,-0.362167,-9.474512,-3.220329,7.598155,0.892657,8.311456,-8.342721,-2.903770,8.074650,-8.648613,9.496135,-3.644645,2.195986,7.747683,8.290924,-1.205072,-2.030512,1.524734,1.882043,-2.402026,-2.994400,1.657599,-0.303003,7.250107,2.347865,2.292721,-6.394597,7.619578,-1.947414,0.204484,2.057537,5.207557,7.464380,-4.679337,0.460001,2.106545,7.029183,-3.210600,-6.475015,7.014054,8.553522,4.829390,-2.554303,7.946174,8.354920,-7.363437,-1.871982,4.127609,-8.567603,4.526922,-2.597099,-1.104615,5.119196,8.039921,-2.842274,-7.990398,-2.979864,8.915100,-2.736221,2.974250,-6.019690,-8.719483,-0.199474,-8.704117,-0.160322,-5.917959,-6.410212,-0.087866,-7.674759,-3.581954,-2.565260,-2.455648,-8.689814,-8.206040,0.072500,-2.969281,4.700849,-1.505885,-5.846677,5.444229,-4.842847,7.104191,-0.270184,1.588905,-1.998716,0.608835,-8.982602,6.710967,9.481230,3.986775,4.335311,-2.927715,-6.990130,-5.155283,3.451134,0.465173,-7.580138,7.345276,-0.688244,9.902608,-2.740701,-1.644201,-3.502286,9.287713,2.191805,-3.743337,-4.296515,3.299916,-2.092258,-8.245751,1.106516,0.186199,-9.199223,-3.214384,7.304258,2.701648,-1.829560,-4.776366,2.943561,4.094982,-0.951970,-5.181068,-2.134938,-9.045858,4.678728,9.589698,-2.802753,-1.554325,1.840671,-1.208388,-0.990418,-6.944513,5.459097,-6.760514,-8.734498,9.999248,8.774506,2.177934,1.808475,-0.682142,-5.199867,-1.628050,8.546631,-4.805358,4.769711,4.063243,-0.935692,2.924721,5.806524,8.077492,8.379385,-5.958514,-0.008503,-2.887935,6.359075,-5.373418,-9.176331,8.193596,-3.829811,-1.965264,-7.818776,4.857258,4.919566,-4.496700,-5.343490,-0.014216,-6.055205,5.590861,6.353484,-7.010642,-3.581063,-8.338438,6.138593,-5.751987,0.051322,-9.910420,8.434660,6.015569,-6.148533,3.703601,3.420285], dtype = "float32")#candidate|15692|(216,)|const|float32
var_15693 = relay.var("var_15693", dtype = "float64", shape = (12, 70))#candidate|15693|(12, 70)|var|float64
call_15690 = relay.TupleGetItem(func_14918_call(relay.reshape(var_15691.astype('float64'), [9, 8, 1]), relay.reshape(const_15692.astype('float32'), [12, 18]), relay.reshape(var_15693.astype('float64'), [840, 1]), ), 4)
call_15694 = relay.TupleGetItem(func_14922_call(relay.reshape(var_15691.astype('float64'), [9, 8, 1]), relay.reshape(const_15692.astype('float32'), [12, 18]), relay.reshape(var_15693.astype('float64'), [840, 1]), ), 4)
func_12400_call = mod.get_global_var('func_12400')
func_12402_call = mutated_mod.get_global_var('func_12402')
const_15697 = relay.const([-4.912530,-6.668293,-9.482174,-7.747888,-1.564779,7.618409,-7.493906,-3.316307,-2.438498,2.924110,-8.047392,1.782015,3.258190,-2.638588,-0.415819,2.075528,-5.341111,6.247664,7.227001,7.372563,8.942361,4.683784,-5.911738,6.491659,4.291802,3.860101,1.506277,-1.062624,3.319622,2.954668,-8.276546,9.171628,-0.418059,0.418999,-8.819001,-1.506601,4.153418,0.550582,8.255051,-8.796262,-9.318608,-4.920138,-1.499215,-3.911706,-9.255273,3.362114,2.435012,2.960268,1.548141,5.296882,-4.898638,-0.369663,3.663423,9.224688,-2.080688,4.457300,1.016807,-9.737366,-2.855870,-5.850314,-0.199448,7.824240,-9.457131,-8.413253,9.950572,4.403214,3.495953,1.966708,-3.651030,3.846453,2.000860,1.974990,-1.624381,-8.469123,-9.896305,1.913640,9.079363,-9.714122,-5.847104,2.541457,-6.389266,6.351055,-8.536089,-6.725208,5.108681,-5.209176,-6.836612,3.924911,1.105525,1.657351,-6.510108,0.147879,1.386302,5.600780,-0.034073,1.742198,-2.858516,-8.494888,-7.290589,6.698213,-4.714241,-7.597174,0.326835,9.985061,4.700177,-5.831153,-7.533749,2.860095,-5.593273,0.094605,-2.585845,5.131133,1.186107,7.709965,3.735396,4.154052,-4.065285,-8.922060,1.193339,1.951356], dtype = "float64")#candidate|15697|(120,)|const|float64
call_15696 = func_12400_call(relay.reshape(const_15697.astype('float64'), [10, 12, 1]))
call_15698 = func_12400_call(relay.reshape(const_15697.astype('float64'), [10, 12, 1]))
bop_15721 = relay.power(const_15692.astype('float64'), call_15696.astype('float64')) # shape=(10, 12, 216)
bop_15724 = relay.power(const_15692.astype('float64'), call_15698.astype('float64')) # shape=(10, 12, 216)
var_15726 = relay.var("var_15726", dtype = "float64", shape = (10, 12, 216))#candidate|15726|(10, 12, 216)|var|float64
bop_15727 = relay.greater(bop_15721.astype('bool'), relay.reshape(var_15726.astype('bool'), relay.shape_of(bop_15721))) # shape=(10, 12, 216)
bop_15730 = relay.greater(bop_15724.astype('bool'), relay.reshape(var_15726.astype('bool'), relay.shape_of(bop_15724))) # shape=(10, 12, 216)
bop_15733 = relay.bitwise_or(call_15690.astype('int32'), const_15697.astype('int32')) # shape=(9, 8, 120)
bop_15736 = relay.bitwise_or(call_15694.astype('int32'), const_15697.astype('int32')) # shape=(9, 8, 120)
output = relay.Tuple([call_15688,var_15691,var_15693,bop_15727,bop_15733,])
output2 = relay.Tuple([call_15689,var_15691,var_15693,bop_15730,bop_15736,])
func_15746 = relay.Function([var_15691,var_15693,var_15726,], output)
mod['func_15746'] = func_15746
mod = relay.transform.InferType()(mod)
var_15747 = relay.var("var_15747", dtype = "float64", shape = (72,))#candidate|15747|(72,)|var|float64
var_15748 = relay.var("var_15748", dtype = "float64", shape = (12, 70))#candidate|15748|(12, 70)|var|float64
var_15749 = relay.var("var_15749", dtype = "float64", shape = (10, 12, 216))#candidate|15749|(10, 12, 216)|var|float64
output = func_15746(var_15747,var_15748,var_15749,)
func_15750 = relay.Function([var_15747,var_15748,var_15749,], output)
mutated_mod['func_15750'] = func_15750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15793 = relay.TupleGetItem(func_15011_call(), 1)
call_15794 = relay.TupleGetItem(func_15013_call(), 1)
output = relay.Tuple([call_15793,])
output2 = relay.Tuple([call_15794,])
func_15799 = relay.Function([], output)
mod['func_15799'] = func_15799
mod = relay.transform.InferType()(mod)
mutated_mod['func_15799'] = func_15799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15799_call = mutated_mod.get_global_var('func_15799')
call_15800 = func_15799_call()
output = call_15800
func_15801 = relay.Function([], output)
mutated_mod['func_15801'] = func_15801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15857 = relay.var("var_15857", dtype = "int16", shape = (6, 14, 6))#candidate|15857|(6, 14, 6)|var|int16
const_15858 = relay.const([[[-4,2,8,-2,-7,1],[-3,-8,-9,3,-5,-5],[-10,-9,5,-10,-4,3],[-4,-2,6,-6,8,-7],[-1,5,5,1,2,-10],[9,-6,-4,4,-5,-10],[-4,8,-10,-9,9,-7],[3,-2,7,-3,-1,9],[7,-5,2,3,-2,7],[10,-5,9,5,-9,8],[6,4,2,5,9,-4],[-5,-6,-2,1,1,2],[7,6,2,-3,7,8],[-1,9,-4,10,1,-6]],[[-2,-4,-10,-5,-4,2],[6,6,5,3,8,-7],[-4,-2,4,8,7,-9],[10,6,6,10,5,5],[2,7,7,-4,10,8],[6,-10,-9,1,-6,1],[-5,3,-9,-10,-4,2],[-9,-6,4,5,-9,-4],[7,-6,-2,-4,-2,-7],[-5,1,-1,5,-1,3],[5,7,4,-2,9,-3],[-9,-8,-3,-1,9,10],[-6,4,-3,5,4,2],[5,10,-4,-3,-9,1]],[[5,10,5,-5,-2,10],[-7,-5,-9,10,3,-6],[-2,-7,1,3,-3,9],[3,-10,-5,2,5,5],[-6,-8,5,-3,2,-8],[-1,8,-3,1,4,-3],[-2,-1,6,-3,-2,-9],[-2,4,6,8,4,-3],[-6,5,6,9,6,-6],[-7,-3,7,-6,6,-4],[3,-2,-1,-5,9,-5],[9,2,-5,6,-7,-10],[2,-5,7,3,-5,-8],[1,-1,5,-7,1,10]],[[10,-5,6,3,-1,-6],[-2,-10,-7,-3,-4,-9],[2,3,-5,-7,-8,2],[-10,-2,5,-1,1,2],[-2,4,-9,2,9,5],[8,-1,-6,2,7,-1],[4,-9,-5,-2,-6,-10],[-1,8,-10,6,-5,-6],[-9,9,6,8,3,-6],[-10,3,5,3,-8,6],[2,-7,6,-1,6,2],[-1,-2,10,1,4,-6],[-9,-5,-7,-8,2,9],[-1,-4,10,6,6,4]],[[-6,6,8,9,8,-8],[-4,6,-2,-5,-3,7],[-4,-5,-3,-6,3,-6],[-3,-10,-10,8,5,-1],[8,7,2,-5,8,-7],[-8,-9,7,3,2,-3],[-4,-8,4,5,5,3],[9,-6,-9,-8,-7,9],[-4,-6,-6,1,-1,-10],[-8,6,8,-3,-1,-5],[-3,9,-2,6,1,-2],[-2,-10,2,7,-6,5],[6,2,-8,-10,-10,3],[-7,5,10,8,10,2]],[[-7,-4,-1,6,9,-5],[-5,-10,-3,-8,-9,-10],[-2,-8,8,4,8,-8],[-7,8,-4,-2,7,-7],[-4,-1,-10,1,-3,4],[-10,5,-6,-1,-9,8],[-2,-6,4,-7,8,1],[-1,10,3,5,10,-5],[5,9,5,-9,10,3],[-1,-2,10,-7,-6,-7],[10,-4,2,-7,5,2],[5,-6,9,1,-2,8],[-4,5,3,1,-3,-4],[-4,3,8,9,7,2]]], dtype = "int16")#candidate|15858|(6, 14, 6)|const|int16
bop_15859 = relay.greater(var_15857.astype('bool'), relay.reshape(const_15858.astype('bool'), relay.shape_of(var_15857))) # shape=(6, 14, 6)
output = bop_15859
output2 = bop_15859
func_15862 = relay.Function([var_15857,], output)
mod['func_15862'] = func_15862
mod = relay.transform.InferType()(mod)
var_15863 = relay.var("var_15863", dtype = "int16", shape = (6, 14, 6))#candidate|15863|(6, 14, 6)|var|int16
output = func_15862(var_15863)
func_15864 = relay.Function([var_15863], output)
mutated_mod['func_15864'] = func_15864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15553_call = mod.get_global_var('func_15553')
func_15554_call = mutated_mod.get_global_var('func_15554')
call_15918 = relay.TupleGetItem(func_15553_call(), 0)
call_15919 = relay.TupleGetItem(func_15554_call(), 0)
output = relay.Tuple([call_15918,])
output2 = relay.Tuple([call_15919,])
func_15920 = relay.Function([], output)
mod['func_15920'] = func_15920
mod = relay.transform.InferType()(mod)
output = func_15920()
func_15921 = relay.Function([], output)
mutated_mod['func_15921'] = func_15921
mutated_mod = relay.transform.InferType()(mutated_mod)
const_15935 = relay.const([[[1,5,-3,-3,10,8],[-8,10,10,-6,5,-3],[3,-5,-5,6,-1,5],[4,6,9,-7,-2,-5],[-4,-7,6,-5,10,-10],[1,2,-7,-5,-4,-6],[-6,-9,2,3,6,-3],[9,-1,-10,-5,-7,10],[-3,-6,5,-9,-6,9],[4,-4,-3,-3,6,1],[-7,6,3,-9,-10,-5],[-8,6,-3,-4,1,9]],[[6,6,6,-10,6,-8],[-4,7,-1,-9,-7,6],[3,10,9,-8,1,-9],[-5,-1,-6,2,-5,4],[-3,6,-1,3,4,8],[3,8,-1,-1,5,9],[-1,9,-2,-4,7,9],[4,-2,7,2,5,2],[-7,4,8,-3,-6,5],[-7,-7,10,-2,7,-1],[-3,4,2,-6,2,-1],[5,7,6,1,4,-10]]], dtype = "int16")#candidate|15935|(2, 12, 6)|const|int16
var_15936 = relay.var("var_15936", dtype = "int16", shape = (2, 12, 6))#candidate|15936|(2, 12, 6)|var|int16
bop_15937 = relay.minimum(const_15935.astype('int16'), relay.reshape(var_15936.astype('int16'), relay.shape_of(const_15935))) # shape=(2, 12, 6)
output = relay.Tuple([bop_15937,])
output2 = relay.Tuple([bop_15937,])
func_15942 = relay.Function([var_15936,], output)
mod['func_15942'] = func_15942
mod = relay.transform.InferType()(mod)
mutated_mod['func_15942'] = func_15942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15943 = relay.var("var_15943", dtype = "int16", shape = (2, 12, 6))#candidate|15943|(2, 12, 6)|var|int16
func_15942_call = mutated_mod.get_global_var('func_15942')
call_15944 = func_15942_call(var_15943)
output = call_15944
func_15945 = relay.Function([var_15943], output)
mutated_mod['func_15945'] = func_15945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_15974 = relay.TupleGetItem(func_15011_call(), 0)
call_15975 = relay.TupleGetItem(func_15013_call(), 0)
func_7959_call = mod.get_global_var('func_7959')
func_7962_call = mutated_mod.get_global_var('func_7962')
var_15986 = relay.var("var_15986", dtype = "int8", shape = (1008,))#candidate|15986|(1008,)|var|int8
call_15985 = relay.TupleGetItem(func_7959_call(relay.reshape(var_15986.astype('int8'), [16, 7, 9]), relay.reshape(var_15986.astype('bool'), [16, 7, 9]), ), 0)
call_15987 = relay.TupleGetItem(func_7962_call(relay.reshape(var_15986.astype('int8'), [16, 7, 9]), relay.reshape(var_15986.astype('bool'), [16, 7, 9]), ), 0)
func_12963_call = mod.get_global_var('func_12963')
func_12965_call = mutated_mod.get_global_var('func_12965')
var_15991 = relay.var("var_15991", dtype = "int16", shape = (48,))#candidate|15991|(48,)|var|int16
call_15990 = relay.TupleGetItem(func_12963_call(relay.reshape(var_15991.astype('int16'), [2, 2, 12])), 1)
call_15992 = relay.TupleGetItem(func_12965_call(relay.reshape(var_15991.astype('int16'), [2, 2, 12])), 1)
output = relay.Tuple([call_15974,call_15985,var_15986,call_15990,var_15991,])
output2 = relay.Tuple([call_15975,call_15987,var_15986,call_15992,var_15991,])
func_15993 = relay.Function([var_15986,var_15991,], output)
mod['func_15993'] = func_15993
mod = relay.transform.InferType()(mod)
var_15994 = relay.var("var_15994", dtype = "int8", shape = (1008,))#candidate|15994|(1008,)|var|int8
var_15995 = relay.var("var_15995", dtype = "int16", shape = (48,))#candidate|15995|(48,)|var|int16
output = func_15993(var_15994,var_15995,)
func_15996 = relay.Function([var_15994,var_15995,], output)
mutated_mod['func_15996'] = func_15996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15011_call = mod.get_global_var('func_15011')
func_15013_call = mutated_mod.get_global_var('func_15013')
call_16021 = relay.TupleGetItem(func_15011_call(), 2)
call_16022 = relay.TupleGetItem(func_15013_call(), 2)
output = call_16021
output2 = call_16022
func_16033 = relay.Function([], output)
mod['func_16033'] = func_16033
mod = relay.transform.InferType()(mod)
output = func_16033()
func_16034 = relay.Function([], output)
mutated_mod['func_16034'] = func_16034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15565_call = mod.get_global_var('func_15565')
func_15567_call = mutated_mod.get_global_var('func_15567')
call_16072 = relay.TupleGetItem(func_15565_call(), 0)
call_16073 = relay.TupleGetItem(func_15567_call(), 0)
output = call_16072
output2 = call_16073
func_16074 = relay.Function([], output)
mod['func_16074'] = func_16074
mod = relay.transform.InferType()(mod)
output = func_16074()
func_16075 = relay.Function([], output)
mutated_mod['func_16075'] = func_16075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15920_call = mod.get_global_var('func_15920')
func_15921_call = mutated_mod.get_global_var('func_15921')
call_16099 = relay.TupleGetItem(func_15920_call(), 0)
call_16100 = relay.TupleGetItem(func_15921_call(), 0)
func_6641_call = mod.get_global_var('func_6641')
func_6643_call = mutated_mod.get_global_var('func_6643')
var_16102 = relay.var("var_16102", dtype = "float64", shape = (2, 420))#candidate|16102|(2, 420)|var|float64
call_16101 = func_6641_call(relay.reshape(var_16102.astype('float64'), [10, 6, 14]))
call_16103 = func_6641_call(relay.reshape(var_16102.astype('float64'), [10, 6, 14]))
output = relay.Tuple([call_16099,call_16101,var_16102,])
output2 = relay.Tuple([call_16100,call_16103,var_16102,])
func_16106 = relay.Function([var_16102,], output)
mod['func_16106'] = func_16106
mod = relay.transform.InferType()(mod)
var_16107 = relay.var("var_16107", dtype = "float64", shape = (2, 420))#candidate|16107|(2, 420)|var|float64
output = func_16106(var_16107)
func_16108 = relay.Function([var_16107], output)
mutated_mod['func_16108'] = func_16108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15501_call = mod.get_global_var('func_15501')
func_15502_call = mutated_mod.get_global_var('func_15502')
call_16120 = func_15501_call()
call_16121 = func_15501_call()
output = relay.Tuple([call_16120,])
output2 = relay.Tuple([call_16121,])
func_16135 = relay.Function([], output)
mod['func_16135'] = func_16135
mod = relay.transform.InferType()(mod)
mutated_mod['func_16135'] = func_16135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16135_call = mutated_mod.get_global_var('func_16135')
call_16136 = func_16135_call()
output = call_16136
func_16137 = relay.Function([], output)
mutated_mod['func_16137'] = func_16137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16074_call = mod.get_global_var('func_16074')
func_16075_call = mutated_mod.get_global_var('func_16075')
call_16179 = func_16074_call()
call_16180 = func_16074_call()
func_11859_call = mod.get_global_var('func_11859')
func_11862_call = mutated_mod.get_global_var('func_11862')
const_16196 = relay.const([[-2.984304,-0.098314,7.352392,2.011783,-5.034253,8.815484,-8.295773,3.305674,2.190915,-9.689486,-5.849203,-7.382495,-9.956532,1.036795,-4.911375,-6.004585,-5.517702,6.582617,-3.008411,9.021385,8.928479,0.911548,-4.482973,-5.250956,-9.932687,0.593702,4.559961,-8.517722,2.512666,-2.475945,1.697030,-1.221144,6.092526,-7.242302,-0.710638,-9.995698,-2.803147,9.714024,-1.098110,-3.766956,-6.917785,0.138097,-1.203314,4.383557,-5.607527,2.909908,-0.185323,0.026992,3.444536,-9.519003,6.439832,2.478504,-8.729612,-4.364123,6.794215,2.010707,-7.973248,9.899033,-0.073863,-4.367804,-6.253396,4.740652,-4.230762,8.269200]], dtype = "float32")#candidate|16196|(1, 64)|const|float32
var_16197 = relay.var("var_16197", dtype = "float64", shape = (840,))#candidate|16197|(840,)|var|float64
call_16195 = relay.TupleGetItem(func_11859_call(relay.reshape(const_16196.astype('float32'), [16, 2, 2]), relay.reshape(var_16197.astype('float64'), [12, 70]), ), 1)
call_16198 = relay.TupleGetItem(func_11862_call(relay.reshape(const_16196.astype('float32'), [16, 2, 2]), relay.reshape(var_16197.astype('float64'), [12, 70]), ), 1)
func_5116_call = mod.get_global_var('func_5116')
func_5119_call = mutated_mod.get_global_var('func_5119')
const_16205 = relay.const([5.029175,1.504487,-8.661292,5.534630,-1.563380,-4.981874,-9.398079,-2.114004,-1.709432,6.969762,5.408774,5.524602,4.460330,-8.393578,-2.109032], dtype = "float32")#candidate|16205|(15,)|const|float32
call_16204 = relay.TupleGetItem(func_5116_call(relay.reshape(const_16205.astype('float32'), [15, 1])), 3)
call_16206 = relay.TupleGetItem(func_5119_call(relay.reshape(const_16205.astype('float32'), [15, 1])), 3)
uop_16215 = relay.rsqrt(const_16196.astype('float32')) # shape=(1, 64)
output = relay.Tuple([call_16179,call_16195,var_16197,call_16204,const_16205,uop_16215,])
output2 = relay.Tuple([call_16180,call_16198,var_16197,call_16206,const_16205,uop_16215,])
F = relay.Function([var_16197,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_16197,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4403() -> (Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %1 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(10), bool] */, dtype="bool") /* ty=Tensor[(10), bool] */;
  %3 = reshape(%1, newshape=[]) /* ty=bool */;
  %4 = reshape(%2, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %5 = @func_2789(%3, %4) /* ty=(Tensor[(1, 10), bool],) */;
  %6 = cast(meta[relay.Constant][2] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %7 = reshape(%6, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
  %8 = asinh(%0) /* ty=Tensor[(2, 16, 1), float64] */;
  %9 = %5.0;
  %10 = @func_1481(%7) /* ty=Tensor[(6, 6, 13), bool] */;
  (%8, %9, False /* ty=bool */, meta[relay.Constant][1] /* ty=Tensor[(10), bool] */, %10, meta[relay.Constant][2] /* ty=Tensor[(468), int32] */)
}

def @func_4744() -> (Tensor[(10), bool],) {
  %11 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %12 = %11.3;
  (%12,)
}

def @func_4712(%var_4708: uint16) -> (Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) {
  %13 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %14 = cast(%var_4708, dtype="uint16") /* ty=uint16 */;
  %15 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 12), uint16] */, dtype="uint16") /* ty=Tensor[(60, 12), uint16] */;
  %16 = reshape(%14, newshape=[]) /* ty=uint16 */;
  %17 = reshape(%15, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %18 = @func_662(%16, %17) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %19 = %13.4;
  %20 = %18.3;
  (%19, %20, %var_4708, meta[relay.Constant][3] /* ty=Tensor[(60, 12), uint16] */)
}

def @func_6789(%var_6787: Tensor[(81), float32]) -> (Tensor[(468), int32], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
  %21 = cast(%var_6787, dtype="float32") /* ty=Tensor[(81), float32] */;
  %22 = reshape(%21, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %23 = @func_47(%22) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %24 = @func_5815() /* ty=Tensor[(468), int32] */;
  %25 = %23.0;
  (%24, %25, %var_6787)
}

def @func_3976(%var_3935: Tensor[(16, 4, 15), uint64], %var_3952: Tensor[(13, 1), float64], %var_3962: Tensor[(1, 1), float64], %var_3963: Tensor[(1232), float64]) -> (Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) {
  %26 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="uint64") /* ty=Tensor[(16, 4, 15), uint64] */;
  %27 = shape_of(%var_3935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%var_3935, dtype="uint64") /* ty=Tensor[(16, 4, 15), uint64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %30 = bitwise_xor(%28, %29) /* ty=Tensor[(16, 4, 15), uint64] */;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(16, 4, 15), float64] */;
  %32 = cast(%var_3952, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %33 = reshape(%32, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %34 = @func_3606(%33) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %35 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(16, 4, 15), int32] */;
  %36 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(16, 4, 15), int32] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %39 = cast(%var_3962, dtype="float64") /* ty=Tensor[(1, 1), float64] */;
  %40 = cast(%var_3963, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %43 = reshape(%39, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %44 = reshape(%40, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %45 = reshape(%41, newshape=[2, 280]) /* ty=Tensor[(2, 280), int64] */;
  %46 = reshape(%42, newshape=[1, 720]) /* ty=Tensor[(1, 720), uint16] */;
  %47 = @func_2124(%43, %44, %45, %46) /* ty=(Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) */;
  %48 = cast(%var_3952, dtype="int64") /* ty=Tensor[(13, 1), int64] */;
  %49 = cast(%var_3963, dtype="int64") /* ty=Tensor[(1232), int64] */;
  %50 = exp(%31) /* ty=Tensor[(16, 4, 15), float64] */;
  %51 = %34.1;
  %52 = right_shift(%37, %38) /* ty=Tensor[(16, 4, 15), int32] */;
  %53 = %47.1;
  %54 = subtract(%48, %49) /* ty=Tensor[(13, 1232), int64] */;
  (%50, %51, %52, %53, %var_3962, meta[relay.Constant][6] /* ty=Tensor[(560), int64] */, meta[relay.Constant][7] /* ty=Tensor[(720), uint16] */, %54)
}

def @main(%var_10261: Tensor[(2, 13, 13), int64], %var_10262: Tensor[(2, 13, 13), int64]) -> (Tensor[(2, 13, 13), bool],) {
  %55 = cast(%var_10262, dtype="bool") /* ty=Tensor[(2, 13, 13), bool] */;
  %56 = shape_of(%var_10261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_10261, dtype="bool") /* ty=Tensor[(2, 13, 13), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %59 = less_equal(%57, %58) /* ty=Tensor[(2, 13, 13), bool] */;
  (%59,)
}

def @func_9612(%var_9593: Tensor[(960), uint64], %var_9594: Tensor[(13, 1), float64], %var_9595: Tensor[(1), float64], %var_9596: Tensor[(1232), float64]) -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64], Tensor[(105), float64]) {
  %60 = @func_9066() /* ty=(Tensor[(10), bool],) */;
  %61 = cast(%var_9593, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %62 = cast(%var_9594, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %63 = cast(%var_9595, dtype="float64") /* ty=Tensor[(1), float64] */;
  %64 = cast(%var_9596, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %65 = reshape(%61, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %66 = reshape(%62, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %67 = reshape(%63, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %68 = reshape(%64, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %69 = @func_3976(%65, %66, %67, %68) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %70 = cast(%var_9595, dtype="int64") /* ty=Tensor[(1), int64] */;
  %71 = reshape(%70, newshape=[]) /* ty=int64 */;
  %72 = @func_5124(%71) /* ty=(Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) */;
  %73 = %60.0;
  %74 = %69.1;
  %75 = %72.1;
  (%73, %74, %var_9593, %var_9594, %var_9595, %var_9596, %75)
}

def @func_8805(%var_8801: Tensor[(720), uint16]) -> (Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], Tensor[(720), uint16], Tensor[(240), float32], Tensor[(468), int32]) {
  %76 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %77 = cast(%var_8801, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %78 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %79 = cast(meta[relay.Constant][9] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %80 = reshape(%77, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %81 = reshape(%78, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %82 = reshape(%79, newshape=[234, 2]) /* ty=Tensor[(234, 2), int32] */;
  %83 = @func_6883(%80, %81, %82) /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) */;
  %84 = %76.1;
  %85 = %83.2;
  (%84, %85, %var_8801, meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, meta[relay.Constant][9] /* ty=Tensor[(468), int32] */)
}

def @func_7899() -> (Tensor[(15, 4, 4), int64], Tensor[(10), bool]) {
  %86 = @func_7129() /* ty=(Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) */;
  %87 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %88 = %86.3;
  %89 = %87.0;
  (%88, %89)
}

def @func_3369(%var_3348: Tensor[(5, 4, 5), uint64], %var_3349: Tensor[(5, 4, 5), uint64]) -> (Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) {
  %90 = cast(%var_3349, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
  %91 = shape_of(%var_3348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %92 = cast(%var_3348, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
  %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %94 = cast(meta[relay.Constant][10] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %95 = reshape(%94, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), float32] */;
  %96 = @func_2519(%95) /* ty=(Tensor[(4, 5, 15), float32],) */;
  %97 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %98 = cast(meta[relay.Constant][11] /* ty=Tensor[(10), bool] */, dtype="bool") /* ty=Tensor[(10), bool] */;
  %99 = reshape(%97, newshape=[]) /* ty=bool */;
  %100 = reshape(%98, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %101 = @func_2789(%99, %100) /* ty=(Tensor[(1, 10), bool],) */;
  %102 = less_equal(%92, %93) /* ty=Tensor[(5, 4, 5), bool] */;
  %103 = %96.0;
  %104 = %101.0;
  (%102, %103, meta[relay.Constant][10] /* ty=Tensor[(300), float32] */, %104, True /* ty=bool */, meta[relay.Constant][11] /* ty=Tensor[(10), bool] */)
}

def @func_6223() -> (Tensor[(10), bool],) {
  %105 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %106 = %105.0;
  (%106,)
}

def @func_6104(%var_6049: Tensor[(6, 14, 13), float32]) -> (Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) {
  %107 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %108 = cast(%var_6049, dtype="float32") /* ty=Tensor[(6, 14, 13), float32] */;
  %109 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %110 = reshape(%109, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %111 = @func_3606(%110) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %112 = divide(%107, %108) /* ty=Tensor[(6, 14, 13), float32] */;
  %113 = %111.2;
  (%112, %113, meta[relay.Constant][13] /* ty=Tensor[(13, 1), float64] */)
}

def @func_4116(%var_4012: Tensor[(9, 11, 14), float32], %var_4037: Tensor[(9, 11, 14), uint16], %var_4070: Tensor[(240), float32]) -> (uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) {
  %114 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 572), float64] */, dtype="float64") /* ty=Tensor[(1, 572), float64] */;
  %115 = cast(meta[relay.Constant][15] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %116 = cast(meta[relay.Constant][16] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %117 = reshape(%114, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %118 = reshape(%115, newshape=[]) /* ty=uint16 */;
  %119 = reshape(%116, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %120 = @func_869(%117, %118, %119) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %121 = cast(%var_4070, dtype="float32") /* ty=Tensor[(240), float32] */;
  %122 = cast(%var_4070, dtype="float32") /* ty=Tensor[(240), float32] */;
  %123 = reshape(%121, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %124 = reshape(%122, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %125 = @func_3697(%123, %124) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %126 = cast(meta[relay.Constant][17] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %127 = reshape(%126, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %128 = @func_47(%127) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %129 = cast(meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %130 = reshape(%129, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
  %131 = @func_230(%130) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
  %132 = cast(%var_4012, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %133 = sigmoid(%132) /* ty=Tensor[(9, 11, 14), float32] */;
  %134 = cast(%133, dtype="uint16") /* ty=Tensor[(9, 11, 14), uint16] */;
  %135 = shape_of(%var_4012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%var_4012, dtype="uint16") /* ty=Tensor[(9, 11, 14), uint16] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %138 = bitwise_or(%136, %137) /* ty=Tensor[(9, 11, 14), uint16] */;
  %139 = cast(%var_4037, dtype="int8") /* ty=Tensor[(9, 11, 14), int8] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="int8") /* ty=Tensor[(9, 11, 14), int8] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %143 = maximum(%141, %142) /* ty=Tensor[(9, 11, 14), int8] */;
  %144 = cast(%138, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %148 = mod(%146, %147) /* ty=Tensor[(9, 11, 14), float32] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
  %150 = %120.2;
  %151 = %125.0;
  %152 = %128.1;
  %153 = %131.0;
  %154 = erf(%149) /* ty=Tensor[(9, 11, 14), float32] */;
  (%150, meta[relay.Constant][14] /* ty=Tensor[(1, 572), float64] */, meta[relay.Constant][15] /* ty=uint16 */, meta[relay.Constant][16] /* ty=Tensor[(21, 5), float64] */, %151, %var_4070, %152, meta[relay.Constant][17] /* ty=Tensor[(81), float32] */, %153, meta[relay.Constant][18] /* ty=Tensor[(1232), float64] */, %154)
}

def @func_9572() -> (Tensor[(10), bool],) {
  %155 = @func_7254() /* ty=Tensor[(10), bool] */;
  (%155,)
}

def @func_9872() -> (Tensor[(10), bool],) {
  %156 = @func_9838() /* ty=Tensor[(10), bool] */;
  (%156,)
}

def @func_9160(%var_9137: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(15, 6, 8), float32], Tensor[(10), bool]) {
  %157 = cast(%var_9137, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
  %158 = cast(%var_9137, dtype="float32") /* ty=Tensor[(15, 6, 8), float32] */;
  %159 = @func_8685() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %160 = cos(%157) /* ty=Tensor[(15, 6, 8), float64] */;
  %161 = atan(%158) /* ty=Tensor[(15, 6, 8), float32] */;
  %162 = %159.1;
  (%160, %161, %162)
}

def @func_7305(%var_7299: Tensor[(420), float64], %var_7302: Tensor[(1386), float32], %var_7303: Tensor[(240), float32]) -> (Tensor[(10), bool], Tensor[(1386), float32], Tensor[(420), float64], Tensor[(660), float32], Tensor[(192), int16], Tensor[(1386), float32], Tensor[(240), float32]) {
  %163 = cast(%var_7299, dtype="float64") /* ty=Tensor[(420), float64] */;
  %164 = cast(meta[relay.Constant][19] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %165 = cast(meta[relay.Constant][20] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %166 = cast(%var_7302, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %167 = cast(%var_7303, dtype="float32") /* ty=Tensor[(240), float32] */;
  %168 = reshape(%163, newshape=[210, 2]) /* ty=Tensor[(210, 2), float64] */;
  %169 = reshape(%164, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %170 = reshape(%165, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %171 = reshape(%166, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %172 = reshape(%167, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %173 = @func_5251(%168, %169, %170, %171, %172) /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) */;
  %174 = @func_7254() /* ty=Tensor[(10), bool] */;
  %175 = %173.11;
  (%174, %175, %var_7299, meta[relay.Constant][19] /* ty=Tensor[(660), float32] */, meta[relay.Constant][20] /* ty=Tensor[(192), int16] */, %var_7302, %var_7303)
}

def @func_3552(%var_3534: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) {
  %176 = cast(%var_3534, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %177 = cast(%var_3534, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %178 = log(%176) /* ty=Tensor[(4, 15, 11), float32] */;
  %179 = sigmoid(%177) /* ty=Tensor[(4, 15, 11), float32] */;
  (%178, %179)
}

def @func_4735() -> (bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) {
  %180 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %181 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 78), int32] */, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
  %182 = reshape(%181, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
  %183 = %180.2;
  %184 = @func_1481(%182) /* ty=Tensor[(6, 6, 13), bool] */;
  (%183, %184, meta[relay.Constant][21] /* ty=Tensor[(6, 78), int32] */)
}

def @func_3606(%var_3589: Tensor[(1, 13), float64]) -> (Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) {
  %185 = cast(%var_3589, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %186 = cast(meta[relay.Constant][22] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %187 = cast(meta[relay.Constant][22] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
  %188 = reshape(%186, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), uint64] */;
  %189 = reshape(%187, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), uint64] */;
  %190 = @func_3369(%188, %189) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) */;
  %191 = sinh(%185) /* ty=Tensor[(1, 13), float64] */;
  %192 = %190.1;
  (%191, %192, meta[relay.Constant][22] /* ty=Tensor[(100), uint64] */)
}

def @func_6455(%var_6449: Tensor[(1, 105), float64], %var_6450: Tensor[(81), float32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool, Tensor[(81), float32], Tensor[(1, 105), float64], Tensor[(81), float32]) {
  %193 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %194 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %195 = %193.0;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(10), bool] */;
  %197 = reshape(%194, newshape=[]) /* ty=bool */;
  %198 = reshape(%196, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %199 = @func_2789(%197, %198) /* ty=(Tensor[(1, 10), bool],) */;
  %200 = cast(%var_6449, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %201 = cast(%var_6450, dtype="float32") /* ty=Tensor[(81), float32] */;
  %202 = reshape(%200, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %203 = reshape(%201, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %204 = @func_164(%202, %203) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %205 = %199.0;
  %206 = %204.2;
  (%195, %205, True /* ty=bool */, %206, %var_6449, %var_6450)
}

def @func_6883(%var_6855: Tensor[(720), uint16], %var_6868: Tensor[(240), float32], %var_6876: Tensor[(234, 2), int32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) {
  %207 = @func_5486() /* ty=(Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) */;
  %208 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %209 = cast(meta[relay.Constant][23] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %210 = cast(%var_6855, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %211 = reshape(%209, newshape=[]) /* ty=uint16 */;
  %212 = reshape(%210, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %213 = @func_662(%211, %212) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %214 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %215 = cast(%var_6868, dtype="float32") /* ty=Tensor[(240), float32] */;
  %216 = cast(%var_6868, dtype="float32") /* ty=Tensor[(240), float32] */;
  %217 = reshape(%215, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %218 = reshape(%216, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %219 = @func_3697(%217, %218) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %220 = cast(%var_6876, dtype="int32") /* ty=Tensor[(234, 2), int32] */;
  %221 = reshape(%220, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
  %222 = @func_1481(%221) /* ty=Tensor[(6, 6, 13), bool] */;
  %223 = cast(%222, dtype="uint32") /* ty=Tensor[(6, 6, 13), uint32] */;
  %224 = shape_of(%var_6876, dtype="int32") /* ty=Tensor[(2), int32] */;
  %225 = cast(%var_6876, dtype="uint32") /* ty=Tensor[(234, 2), uint32] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %227 = %207.1;
  %228 = %208.0;
  %229 = %213.0;
  %230 = %214.0;
  %231 = %219.0;
  %232 = right_shift(%225, %226) /* ty=Tensor[(234, 2), uint32] */;
  (%227, %228, %229, meta[relay.Constant][23] /* ty=uint16 */, %var_6855, %230, %231, %var_6868, %232)
}

def @func_8556(%var_8488: Tensor[(1, 420), uint8], %var_8489: Tensor[(112), int64], %var_8491: Tensor[(560), int64], %var_8519: Tensor[(660, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(560), float64], Tensor[(1, 420), uint8], Tensor[(112), int64], Tensor[(560), int64], Tensor[(11, 10, 10), float32], Tensor[(1100), float32], Tensor[(10), bool], Tensor[(660, 1), float32], Tensor[(10), bool], Tensor[(1008), float32], Tensor[(6, 78), int32], Tensor[(10), bool]) {
  %233 = cast(%var_8488, dtype="uint8") /* ty=Tensor[(1, 420), uint8] */;
  %234 = cast(%var_8489, dtype="int64") /* ty=Tensor[(112), int64] */;
  %235 = cast(meta[relay.Constant][24] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %236 = cast(%var_8491, dtype="int64") /* ty=Tensor[(560), int64] */;
  %237 = reshape(%233, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %238 = reshape(%234, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %239 = reshape(%235, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %240 = reshape(%236, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %241 = @func_5025(%237, %238, %239, %240) /* ty=(Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) */;
  %242 = cast(meta[relay.Constant][25] /* ty=Tensor[(1100), float32] */, dtype="float32") /* ty=Tensor[(1100), float32] */;
  %243 = reshape(%242, newshape=[11, 10, 10]) /* ty=Tensor[(11, 10, 10), float32] */;
  %244 = @func_7804(%243) /* ty=(Tensor[(11, 10, 10), float32],) */;
  %245 = cast(%var_8519, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %246 = reshape(%245, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %247 = @func_5334(%246) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
  %248 = cast(%var_8519, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
  %249 = reshape(%248, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %250 = @func_5334(%249) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
  %251 = cast(meta[relay.Constant][24] /* ty=Tensor[(1008), int64] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %252 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %253 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %254 = @func_7954() /* ty=Tensor[(1, 10), bool] */;
  %255 = %241.7;
  %256 = %244.0;
  %257 = %247.0;
  %258 = %250.0;
  %259 = erf(%251) /* ty=Tensor[(1008), float32] */;
  %260 = %252.2;
  %261 = %253.0;
  (%254, %255, %var_8488, %var_8489, %var_8491, %256, meta[relay.Constant][25] /* ty=Tensor[(1100), float32] */, %257, %var_8519, %258, %259, %260, %261)
}

def @func_9066() -> (Tensor[(10), bool],) {
  %262 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %263 = %262.0;
  (%263,)
}

def @func_9493(%var_9436: int32, %var_9437: Tensor[(15, 15, 14), int32], %var_9454: Tensor[(1386), float32]) -> (Tensor[(15, 15, 14), int32], Tensor[(3, 3, 9), float32], Tensor[(240), float32], Tensor[(1386), float64]) {
  %264 = cast(%var_9436, dtype="int32") /* ty=int32 */;
  %265 = cast(%var_9437, dtype="int32") /* ty=Tensor[(15, 15, 14), int32] */;
  %266 = cast(%var_9454, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %267 = cast(%var_9454, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
  %268 = cast(meta[relay.Constant][26] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %269 = reshape(%266, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %270 = reshape(%267, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
  %271 = reshape(%268, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %272 = @func_4116(%269, %270, %271) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
  %273 = cast(%var_9454, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %274 = cast(%var_9436, dtype="float64") /* ty=float64 */;
  %275 = right_shift(%264, %265) /* ty=Tensor[(15, 15, 14), int32] */;
  %276 = %272.6;
  %277 = floor_divide(%273, %274) /* ty=Tensor[(1386), float64] */;
  (%275, %276, meta[relay.Constant][26] /* ty=Tensor[(240), float32] */, %277)
}

def @func_1045(%var_996: Tensor[(13, 4, 10), float32], %var_997: Tensor[(13, 4, 10), float32], %var_1009: uint16) -> (Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) {
  %278 = cast(%var_997, dtype="bool") /* ty=Tensor[(13, 4, 10), bool] */;
  %279 = shape_of(%var_996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%var_996, dtype="bool") /* ty=Tensor[(13, 4, 10), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = cast(meta[relay.Constant][27] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %283 = cast(%var_1009, dtype="uint16") /* ty=uint16 */;
  %284 = cast(meta[relay.Constant][28] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %285 = reshape(%282, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %286 = reshape(%283, newshape=[]) /* ty=uint16 */;
  %287 = reshape(%284, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %288 = @func_869(%285, %286, %287) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %289 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %290 = reshape(%289, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %291 = @func_47(%290) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %292 = cast(%var_1009, dtype="uint16") /* ty=uint16 */;
  %293 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 60), uint16] */, dtype="uint16") /* ty=Tensor[(12, 60), uint16] */;
  %294 = reshape(%292, newshape=[]) /* ty=uint16 */;
  %295 = reshape(%293, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %296 = @func_662(%294, %295) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %297 = greater_equal(%280, %281) /* ty=Tensor[(13, 4, 10), bool] */;
  %298 = %288.4;
  %299 = %291.0;
  %300 = %296.1;
  (%297, %298, meta[relay.Constant][27] /* ty=Tensor[(572), float64] */, %var_1009, meta[relay.Constant][28] /* ty=Tensor[(105), float64] */, %299, meta[relay.Constant][29] /* ty=Tensor[(9, 9), float32] */, %300, meta[relay.Constant][30] /* ty=Tensor[(12, 60), uint16] */)
}

def @func_8769() -> Tensor[(10), bool] {
  %301 = @func_6956() /* ty=(Tensor[(10), bool],) */;
  %301.0
}

def @func_9251() -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %302 = @func_8197() /* ty=(bool, Tensor[(1, 10), bool]) */;
  %303 = %302.1;
  %304 = @func_7254() /* ty=Tensor[(10), bool] */;
  (%303, %304)
}

def @func_9334() -> (Tensor[(468), int32],) {
  %305 = @func_5815() /* ty=Tensor[(468), int32] */;
  (%305,)
}

def @func_8421() -> (Tensor[(10), bool], Tensor[(567), float32], Tensor[(567), float32]) {
  %306 = @func_5743() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %307 = cast(meta[relay.Constant][31] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %308 = reshape(%307, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %309 = @func_4933(%308) /* ty=(Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) */;
  %310 = %306.0;
  %311 = %309.2;
  (%310, %311, meta[relay.Constant][31] /* ty=Tensor[(567), float32] */)
}

def @func_10040(%var_9978: bool, %var_9979: Tensor[(10), bool], %var_10002: Tensor[(420), uint8]) -> (Tensor[(6, 6, 13), uint8], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(10), bool], Tensor[(420), uint8], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), bool], Tensor[(10), bool]) {
  %312 = @func_7986() /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) */;
  %313 = %312.3;
  %314 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 6, 13), bool] */, dtype="uint8") /* ty=Tensor[(6, 6, 13), uint8] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="uint8") /* ty=Tensor[(6, 6, 13), uint8] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %318 = cast(%var_9978, dtype="bool") /* ty=bool */;
  %319 = cast(%var_9979, dtype="bool") /* ty=Tensor[(10), bool] */;
  %320 = reshape(%318, newshape=[]) /* ty=bool */;
  %321 = reshape(%319, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %322 = @func_2789(%320, %321) /* ty=(Tensor[(1, 10), bool],) */;
  %323 = @func_9066() /* ty=(Tensor[(10), bool],) */;
  %324 = cast(%var_10002, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %325 = cast(meta[relay.Constant][33] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %326 = cast(meta[relay.Constant][34] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %327 = cast(meta[relay.Constant][35] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %328 = reshape(%324, newshape=[420]) /* ty=Tensor[(420), uint8] */;
  %329 = reshape(%325, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %330 = reshape(%326, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %331 = reshape(%327, newshape=[560]) /* ty=Tensor[(560), int64] */;
  %332 = @func_5025(%328, %329, %330, %331) /* ty=(Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) */;
  %333 = %332.6;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(560), float64] */;
  %335 = acosh(%334) /* ty=Tensor[(560), float64] */;
  %336 = cast(%335, dtype="bool") /* ty=Tensor[(560), bool] */;
  %337 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(560), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %338 = cast(meta[relay.Constant][35] /* ty=Tensor[(560), int64] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?), bool] */;
  %340 = subtract(%316, %317) /* ty=Tensor[(6, 6, 13), uint8] */;
  %341 = %322.0;
  %342 = %323.0;
  %343 = less(%338, %339) /* ty=Tensor[(560), bool] */;
  %344 = @func_5413() /* ty=Tensor[(10), bool] */;
  (%340, %341, %var_9978, %var_9979, %342, %var_10002, meta[relay.Constant][33] /* ty=Tensor[(112), int64] */, meta[relay.Constant][34] /* ty=Tensor[(1008), int64] */, %343, %344)
}

def @func_4818() -> (Tensor[(10), bool],) {
  %345 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %346 = %345.0;
  (%346,)
}

def @func_294(%var_275: Tensor[(5, 6, 4), float64], %var_276: Tensor[(5, 6, 4), float64], %var_280: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) {
  %347 = cast(%var_276, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %348 = shape_of(%var_275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%var_275, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %351 = cast(%var_280, dtype="int16") /* ty=Tensor[(5, 6, 4), int16] */;
  %352 = shape_of(%var_276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_276, dtype="int16") /* ty=Tensor[(5, 6, 4), int16] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %355 = mod(%349, %350) /* ty=Tensor[(5, 6, 4), float64] */;
  %356 = minimum(%353, %354) /* ty=Tensor[(5, 6, 4), int16] */;
  (%355, %356)
}

def @func_7254() -> Tensor[(10), bool] {
  %357 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %357.0
}

def @func_230(%var_205: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) {
  %358 = cast(%var_205, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %359 = cast(%var_205, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %360 = log10(%358) /* ty=Tensor[(11, 16, 7), float64] */;
  %361 = erf(%359) /* ty=Tensor[(11, 16, 7), float64] */;
  (%360, %361)
}

def @func_9767(%var_9760: Tensor[(2, 15, 16), bool], %var_9761: Tensor[(2, 15, 16), bool]) -> Tensor[(2, 15, 16), bool] {
  %362 = cast(%var_9761, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %363 = shape_of(%var_9760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%var_9760, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%364, %365) /* ty=Tensor[(2, 15, 16), bool] */
}

def @func_9803(%var_9790: Tensor[(660), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(660), float32]) {
  %366 = @func_6912() /* ty=(Tensor[(10), bool],) */;
  %367 = cast(-5.99533f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %368 = cast(meta[relay.Constant][36] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %369 = cast(%var_9790, dtype="float32") /* ty=Tensor[(660), float32] */;
  %370 = reshape(%367, newshape=[]) /* ty=float64 */;
  %371 = reshape(%368, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), float64] */;
  %372 = reshape(%369, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %373 = @func_8628(%370, %371, %372) /* ty=(Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
  %374 = %366.0;
  %375 = %373.4;
  (%374, %375, -5.99533f64 /* ty=float64 */, meta[relay.Constant][36] /* ty=Tensor[(300), float64] */, %var_9790)
}

def @func_5251(%var_5182: Tensor[(210, 2), float64], %var_5190: Tensor[(660), float32], %var_5211: Tensor[(192, 1), int16], %var_5225: Tensor[(1386), float32], %var_5226: Tensor[(240), float32]) -> (Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) {
  %376 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %377 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %378 = cast(meta[relay.Constant][37] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %379 = reshape(%378, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %380 = @func_3606(%379) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %381 = cast(%var_5182, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
  %382 = reshape(%381, newshape=[6, 10, 7]) /* ty=Tensor[(6, 10, 7), float64] */;
  %383 = @func_768(%382) /* ty=(Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) */;
  %384 = cast(%var_5190, dtype="float32") /* ty=Tensor[(660), float32] */;
  %385 = reshape(%384, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %386 = @func_3552(%385) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %387 = cast(%var_5211, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
  %388 = cast(%var_5211, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
  %389 = reshape(%387, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %390 = reshape(%388, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %391 = @func_4457(%389, %390) /* ty=(Tensor[(16, 2, 6), float64],) */;
  %392 = cast(meta[relay.Constant][37] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %393 = reshape(%392, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %394 = @func_3606(%393) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %395 = cast(%var_5225, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %396 = cast(%var_5225, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
  %397 = cast(%var_5226, dtype="float32") /* ty=Tensor[(240), float32] */;
  %398 = reshape(%395, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %399 = reshape(%396, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
  %400 = reshape(%397, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %401 = @func_4116(%398, %399, %400) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
  %402 = cast(%var_5182, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
  %403 = acosh(%402) /* ty=Tensor[(210, 2), float32] */;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
  %405 = tan(%404) /* ty=Tensor[(210, 2), float64] */;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
  %407 = %376.1;
  %408 = %377.0;
  %409 = %380.1;
  %410 = %383.1;
  %411 = %386.1;
  %412 = %391.0;
  %413 = %394.1;
  %414 = %401.9;
  %415 = cosh(%406) /* ty=Tensor[(210, 2), float64] */;
  (%407, %408, %409, meta[relay.Constant][37] /* ty=Tensor[(13), float64] */, %410, %411, %var_5190, %412, %var_5211, %413, %414, %var_5225, %var_5226, %415)
}

def @func_7279() -> (Tensor[(10), bool],) {
  %416 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %417 = %416.0;
  (%417,)
}

def @func_7773(%var_7725: Tensor[(6, 8, 6), int64], %var_7745: Tensor[(60, 2), float64]) -> (Tensor[(6, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(60, 2), float64], Tensor[(12, 60), uint16], Tensor[(520), float32], uint16) {
  %418 = cast(%var_7725, dtype="int64") /* ty=Tensor[(6, 8, 6), int64] */;
  %419 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 8, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 8, 6), int64] */, dtype="int64") /* ty=Tensor[(6, 8, 6), int64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %422 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %423 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %424 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %425 = reshape(%422, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %426 = reshape(%423, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %427 = reshape(%424, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %428 = @func_294(%425, %426, %427) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
  %429 = cast(meta[relay.Constant][39] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %430 = cast(meta[relay.Constant][39] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %431 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %432 = reshape(%429, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
  %433 = reshape(%430, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
  %434 = reshape(%431, newshape=[]) /* ty=uint16 */;
  %435 = @func_1045(%432, %433, %434) /* ty=(Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) */;
  %436 = right_shift(%420, %421) /* ty=Tensor[(6, 8, 6), int64] */;
  %437 = %428.0;
  %438 = %435.8;
  (%436, %437, %var_7745, %438, meta[relay.Constant][39] /* ty=Tensor[(520), float32] */, meta[relay.Constant][40] /* ty=uint16 */)
}

def @func_2519(%var_2516: Tensor[(4, 5, 15), float32]) -> (Tensor[(4, 5, 15), float32],) {
  %439 = cast(%var_2516, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
  %440 = asinh(%439) /* ty=Tensor[(4, 5, 15), float32] */;
  (%440,)
}

def @func_869(%var_835: Tensor[(11, 13, 4), float64], %var_839: uint16, %var_848: Tensor[(105), float64]) -> (Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) {
  %441 = cast(%var_835, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %442 = cast(%var_839, dtype="uint16") /* ty=uint16 */;
  %443 = cast(meta[relay.Constant][41] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %444 = reshape(%442, newshape=[]) /* ty=uint16 */;
  %445 = reshape(%443, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %446 = @func_662(%444, %445) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %447 = cast(%var_848, dtype="float64") /* ty=Tensor[(105), float64] */;
  %448 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %449 = reshape(%447, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %450 = reshape(%448, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %451 = @func_164(%449, %450) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %452 = cast(%var_848, dtype="float64") /* ty=Tensor[(105), float64] */;
  %453 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %454 = reshape(%452, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %455 = reshape(%453, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %456 = @func_164(%454, %455) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %457 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %458 = reshape(%457, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %459 = @func_47(%458) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %460 = sigmoid(%441) /* ty=Tensor[(11, 13, 4), float64] */;
  %461 = %446.2;
  %462 = %451.0;
  %463 = %456.0;
  %464 = %459.2;
  (%460, %461, %var_839, meta[relay.Constant][41] /* ty=Tensor[(720), uint16] */, %462, %var_848, meta[relay.Constant][42] /* ty=Tensor[(9, 9), float32] */, %463, %464)
}

def @func_4781() -> (Tensor[(10), bool],) {
  %465 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %466 = %465.0;
  (%466,)
}

def @func_3108(%var_3064: int64, %var_3065: Tensor[(12, 8, 15), int64], %var_3069: Tensor[(12, 8, 15), int64], %var_3094: Tensor[(112), int64]) -> (Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) {
  %467 = cast(%var_3064, dtype="int64") /* ty=int64 */;
  %468 = cast(%var_3065, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
  %469 = left_shift(%467, %468) /* ty=Tensor[(12, 8, 15), int64] */;
  %470 = cast(%var_3069, dtype="uint16") /* ty=Tensor[(12, 8, 15), uint16] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="uint16") /* ty=Tensor[(12, 8, 15), uint16] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %474 = cast(meta[relay.Constant][43] /* ty=Tensor[(286, 2), float64] */, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %475 = cast(%var_3064, dtype="uint16") /* ty=uint16 */;
  %476 = cast(meta[relay.Constant][44] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %477 = reshape(%474, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %478 = reshape(%475, newshape=[]) /* ty=uint16 */;
  %479 = reshape(%476, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %480 = @func_869(%477, %478, %479) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %481 = cast(%var_3094, dtype="int64") /* ty=Tensor[(112), int64] */;
  %482 = cast(meta[relay.Constant][45] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %483 = cast(meta[relay.Constant][46] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %484 = cast(meta[relay.Constant][47] /* ty=Tensor[(81, 1), float32] */, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
  %485 = cast(%var_3064, dtype="uint16") /* ty=uint16 */;
  %486 = cast(meta[relay.Constant][48] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %487 = reshape(%481, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
  %488 = reshape(%482, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
  %489 = reshape(%483, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
  %490 = reshape(%484, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %491 = reshape(%485, newshape=[]) /* ty=uint16 */;
  %492 = reshape(%486, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %493 = @func_1325(%487, %488, %489, %490, %491, %492) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
  %494 = bitwise_and(%472, %473) /* ty=Tensor[(12, 8, 15), uint16] */;
  %495 = %480.7;
  %496 = %493.3;
  (%494, %495, meta[relay.Constant][43] /* ty=Tensor[(286, 2), float64] */, meta[relay.Constant][44] /* ty=Tensor[(105), float64] */, %496, %var_3094, meta[relay.Constant][45] /* ty=Tensor[(560), int64] */, meta[relay.Constant][46] /* ty=Tensor[(1008), int64] */, meta[relay.Constant][47] /* ty=Tensor[(81, 1), float32] */, meta[relay.Constant][48] /* ty=Tensor[(720), uint16] */)
}

def @func_7922(%var_7906: Tensor[(12, 14, 6), float32]) -> Tensor[(12, 14, 6), uint32] {
  %497 = cast(%var_7906, dtype="float32") /* ty=Tensor[(12, 14, 6), float32] */;
  %498 = asinh(%497) /* ty=Tensor[(12, 14, 6), float32] */;
  %499 = cast(%var_7906, dtype="uint32") /* ty=Tensor[(12, 14, 6), uint32] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="uint32") /* ty=Tensor[(12, 14, 6), uint32] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%501, %502) /* ty=Tensor[(12, 14, 6), uint32] */
}

def @func_7234() -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %503 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %504 = @func_5743() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %505 = %503.1;
  %506 = %504.0;
  (%505, %506)
}

def @func_5669() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %507 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %508 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_8134() -> Tensor[(10), bool] {
  @func_8072() /* ty=Tensor[(10), bool] */
}

def @func_5815() -> Tensor[(468), int32] {
  %511 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %511.5
}

def @func_3697(%var_3675: Tensor[(15, 4, 4), float32], %var_3686: Tensor[(15, 4, 4), float32]) -> (Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) {
  %512 = cast(%var_3675, dtype="float32") /* ty=Tensor[(15, 4, 4), float32] */;
  %513 = acosh(%512) /* ty=Tensor[(15, 4, 4), float32] */;
  %514 = cast(%var_3686, dtype="uint64") /* ty=Tensor[(15, 4, 4), uint64] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="uint64") /* ty=Tensor[(15, 4, 4), uint64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %518 = cast(%513, dtype="float64") /* ty=Tensor[(15, 4, 4), float64] */;
  %519 = sqrt(%518) /* ty=Tensor[(15, 4, 4), float64] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(15, 4, 4), float64] */;
  %521 = add(%516, %517) /* ty=Tensor[(15, 4, 4), uint64] */;
  %522 = cos(%520) /* ty=Tensor[(15, 4, 4), float64] */;
  (%521, %522)
}

def @func_8685() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %523 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %524 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %525 = %523.2;
  %526 = %524.0;
  (%525, %526)
}

def @func_6912() -> (Tensor[(10), bool],) {
  %527 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %528 = %527.0;
  (%528,)
}

def @func_10124() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %529 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %530 = @func_6912() /* ty=(Tensor[(10), bool],) */;
  %531 = %529.0;
  %532 = %530.0;
  (%531, %532)
}

def @func_4933(%var_4929: Tensor[(567), float32]) -> (Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) {
  %533 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %534 = cast(%var_4929, dtype="float32") /* ty=Tensor[(567), float32] */;
  %535 = reshape(%534, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %536 = @func_2372(%535) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %537 = %533.1;
  %538 = %536.0;
  (%537, %538, %var_4929)
}

def @func_8459() -> Tensor[(1, 10), bool] {
  %539 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %539.0
}

def @func_10167(%var_10148: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), float64], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(1, 660), float32]) {
  %540 = cast(%var_10148, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %541 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(10, 14, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = cast(1.44439f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %545 = cast(meta[relay.Constant][50] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %546 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 660), float32] */, dtype="float32") /* ty=Tensor[(1, 660), float32] */;
  %547 = reshape(%544, newshape=[]) /* ty=float64 */;
  %548 = reshape(%545, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), float64] */;
  %549 = reshape(%546, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %550 = @func_8628(%547, %548, %549) /* ty=(Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
  %551 = divide(%542, %543) /* ty=Tensor[(10, 14, 7), float64] */;
  %552 = %550.4;
  (%551, %552, 1.44439f64 /* ty=float64 */, meta[relay.Constant][50] /* ty=Tensor[(300), float64] */, meta[relay.Constant][51] /* ty=Tensor[(1, 660), float32] */)
}

def @func_662(%var_638: uint16, %var_639: Tensor[(16, 5, 9), uint16]) -> (Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) {
  %553 = cast(meta[relay.Constant][52] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %554 = cast(meta[relay.Constant][52] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %555 = cast(meta[relay.Constant][52] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %556 = reshape(%553, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %557 = reshape(%554, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %558 = reshape(%555, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %559 = @func_294(%556, %557, %558) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
  %560 = cast(%var_638, dtype="bool") /* ty=bool */;
  %561 = cast(%var_639, dtype="bool") /* ty=Tensor[(16, 5, 9), bool] */;
  %562 = greater_equal(%560, %561) /* ty=Tensor[(16, 5, 9), bool] */;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(16, 5, 9), float64] */;
  %564 = cast(meta[relay.Constant][53] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %565 = reshape(%564, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
  %566 = @func_230(%565) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
  %567 = %559.1;
  %568 = sinh(%563) /* ty=Tensor[(16, 5, 9), float64] */;
  %569 = %566.1;
  (%567, meta[relay.Constant][52] /* ty=Tensor[(120), float64] */, %568, %569, meta[relay.Constant][53] /* ty=Tensor[(1232), float64] */)
}

def @func_7007() -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %570 = @func_6956() /* ty=(Tensor[(10), bool],) */;
  %571 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %572 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %573 = %570.0;
  %574 = %571.0;
  %575 = %572.0;
  (%573, %574, %575)
}

def @func_5573(%var_5518: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(10), bool]) {
  %576 = cast(%var_5518, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
  %577 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %578 = atanh(%576) /* ty=Tensor[(4, 13, 1), float64] */;
  %579 = %577.0;
  (%578, %579)
}

def @func_6289(%var_6282: Tensor[(572), float64], %var_6283: uint16, %var_6284: Tensor[(105), float64]) -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) {
  %580 = @func_6254() /* ty=(Tensor[(10), bool],) */;
  %581 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %582 = reshape(%581, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %583 = @func_3552(%582) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %584 = cast(%var_6282, dtype="float64") /* ty=Tensor[(572), float64] */;
  %585 = cast(%var_6283, dtype="uint16") /* ty=uint16 */;
  %586 = cast(%var_6284, dtype="float64") /* ty=Tensor[(105), float64] */;
  %587 = reshape(%584, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %588 = reshape(%585, newshape=[]) /* ty=uint16 */;
  %589 = reshape(%586, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %590 = @func_869(%587, %588, %589) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %591 = cast(%var_6282, dtype="float32") /* ty=Tensor[(572), float32] */;
  %592 = %580.0;
  %593 = %583.1;
  %594 = %590.8;
  %595 = log2(%591) /* ty=Tensor[(572), float32] */;
  (%592, %593, meta[relay.Constant][54] /* ty=Tensor[(660), float32] */, %594, %var_6283, %var_6284, %595)
}

def @func_8834() -> Tensor[(10), bool] {
  %596 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %596.0
}

def @func_7205(%var_7188: Tensor[(286, 2), float64], %var_7189: uint16) -> (Tensor[(10), bool], Tensor[(16, 2, 6), float64], Tensor[(192), int16], Tensor[(4, 15, 11), float32], uint16, Tensor[(105), float64], Tensor[(286, 2), float64], Tensor[(13, 1), float64], Tensor[(1092), float32]) {
  %597 = @func_6956() /* ty=(Tensor[(10), bool],) */;
  %598 = cast(meta[relay.Constant][55] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %599 = cast(meta[relay.Constant][55] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %600 = reshape(%598, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %601 = reshape(%599, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %602 = @func_4457(%600, %601) /* ty=(Tensor[(16, 2, 6), float64],) */;
  %603 = cast(%var_7188, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %604 = cast(%var_7189, dtype="uint16") /* ty=uint16 */;
  %605 = cast(meta[relay.Constant][56] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %606 = reshape(%603, newshape=[572]) /* ty=Tensor[(572), float64] */;
  %607 = reshape(%604, newshape=[]) /* ty=uint16 */;
  %608 = reshape(%605, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %609 = @func_6289(%606, %607, %608) /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) */;
  %610 = cast(%var_7188, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %611 = cast(meta[relay.Constant][57] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %612 = reshape(%611, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), float32] */;
  %613 = @func_6104(%612) /* ty=(Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) */;
  %614 = %597.0;
  %615 = %602.0;
  %616 = %609.1;
  %617 = rsqrt(%610) /* ty=Tensor[(286, 2), float64] */;
  %618 = %613.2;
  (%614, %615, meta[relay.Constant][55] /* ty=Tensor[(192), int16] */, %616, %var_7189, meta[relay.Constant][56] /* ty=Tensor[(105), float64] */, %617, %618, meta[relay.Constant][57] /* ty=Tensor[(1092), float32] */)
}

def @func_5743() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %619 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %620 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %621 = %619.0;
  %622 = %620.0;
  (%621, %622)
}

def @func_5334(%var_5321: Tensor[(5, 132), float32]) -> (Tensor[(10), bool], Tensor[(5, 132), bool]) {
  %623 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %624 = cast(%var_5321, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
  %625 = reshape(%624, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %626 = @func_3552(%625) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %627 = %626.0;
  %628 = cast(%627, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %629 = shape_of(%var_5321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %630 = cast(%var_5321, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %632 = %623.0;
  %633 = less_equal(%630, %631) /* ty=Tensor[(5, 132), bool] */;
  (%632, %633)
}

def @func_2372(%var_2349: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) {
  %634 = cast(%var_2349, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %635 = cast(%var_2349, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %636 = asin(%634) /* ty=Tensor[(9, 7, 9), float32] */;
  %637 = sigmoid(%635) /* ty=Tensor[(9, 7, 9), float32] */;
  (%636, %637)
}

def @func_7986() -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) {
  %638 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %639 = cast(meta[relay.Constant][58] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %640 = reshape(%639, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %641 = @func_3552(%640) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %642 = cast(meta[relay.Constant][59] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %643 = reshape(%642, newshape=[]) /* ty=uint16 */;
  %644 = @func_4712(%643) /* ty=(Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) */;
  %645 = %638.2;
  %646 = %641.1;
  %647 = %644.0;
  (%645, %646, meta[relay.Constant][58] /* ty=Tensor[(660), float32] */, %647, meta[relay.Constant][59] /* ty=uint16 */)
}

def @func_9059() -> (Tensor[(10), bool],) {
  %648 = @func_5413() /* ty=Tensor[(10), bool] */;
  (%648,)
}

def @func_7394(%var_7360: Tensor[(960), uint64], %var_7361: Tensor[(13, 1), float64], %var_7363: Tensor[(1232), float64]) -> (Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) {
  %649 = cast(%var_7360, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %650 = cast(%var_7361, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %651 = cast(meta[relay.Constant][60] /* ty=Tensor[(1), float64] */, dtype="float64") /* ty=Tensor[(1), float64] */;
  %652 = cast(%var_7363, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %653 = reshape(%649, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %654 = reshape(%650, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %655 = reshape(%651, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %656 = reshape(%652, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %657 = @func_3976(%653, %654, %655, %656) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %658 = @func_5815() /* ty=Tensor[(468), int32] */;
  %659 = %657.5;
  (%658, %659, %var_7360, %var_7361, meta[relay.Constant][60] /* ty=Tensor[(1), float64] */, %var_7363)
}

def @func_47(%var_29: Tensor[(3, 3, 9), float32]) -> (Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) {
  %660 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
  %661 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
  %662 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
  %663 = asin(%660) /* ty=Tensor[(3, 3, 9), float32] */;
  %664 = acosh(%661) /* ty=Tensor[(3, 3, 9), float32] */;
  %665 = rsqrt(%662) /* ty=Tensor[(3, 3, 9), float32] */;
  (%663, %664, %665)
}

def @func_9106() -> (Tensor[(10), bool],) {
  %666 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %667 = %666.1;
  (%667,)
}

def @func_4681(%var_4605: Tensor[(240), float32], %var_4671: Tensor[(13), float64], %var_4672: Tensor[(56, 22), float64]) -> (Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) {
  %668 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %669 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %670 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %671 = reshape(%669, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %672 = reshape(%670, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %673 = @func_3697(%671, %672) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %674 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %675 = %668.3;
  %676 = cast(%675, dtype="bool") /* ty=Tensor[(10), bool] */;
  %677 = reshape(%674, newshape=[]) /* ty=bool */;
  %678 = reshape(%676, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %679 = @func_2789(%677, %678) /* ty=(Tensor[(1, 10), bool],) */;
  %680 = cast(meta[relay.Constant][61] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %681 = cast(meta[relay.Constant][61] /* ty=Tensor[(1386), float32] */, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
  %682 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %683 = reshape(%680, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %684 = reshape(%681, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
  %685 = reshape(%682, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %686 = @func_4116(%683, %684, %685) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
  %687 = cast(meta[relay.Constant][62] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %688 = cast(True /* ty=bool */, dtype="uint16") /* ty=uint16 */;
  %689 = cast(meta[relay.Constant][63] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %690 = reshape(%687, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %691 = reshape(%688, newshape=[]) /* ty=uint16 */;
  %692 = reshape(%689, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %693 = @func_869(%690, %691, %692) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %694 = cast(meta[relay.Constant][64] /* ty=Tensor[(960), uint64] */, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %695 = cast(%var_4671, dtype="float64") /* ty=Tensor[(13), float64] */;
  %696 = cast(True /* ty=bool */, dtype="float64") /* ty=float64 */;
  %697 = cast(%var_4672, dtype="float64") /* ty=Tensor[(56, 22), float64] */;
  %698 = reshape(%694, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %699 = reshape(%695, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %700 = reshape(%696, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %701 = reshape(%697, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %702 = @func_3976(%698, %699, %700, %701) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %703 = %673.1;
  %704 = %679.0;
  %705 = %686.10;
  %706 = %693.0;
  %707 = %702.5;
  (%675, %703, %var_4605, %704, True /* ty=bool */, %705, meta[relay.Constant][61] /* ty=Tensor[(1386), float32] */, %706, meta[relay.Constant][62] /* ty=Tensor[(572), float64] */, meta[relay.Constant][63] /* ty=Tensor[(105), float64] */, %707, meta[relay.Constant][64] /* ty=Tensor[(960), uint64] */, %var_4671, %var_4672)
}

def @func_8647() -> Tensor[(10), bool] {
  %708 = @func_7899() /* ty=(Tensor[(15, 4, 4), int64], Tensor[(10), bool]) */;
  %708.1
}

def @func_1325(%var_1261: Tensor[(7, 1, 16), int64], %var_1262: Tensor[(7, 5, 16), int64], %var_1300: Tensor[(7, 9, 16), int64], %var_1313: Tensor[(81), float32], %var_1322: uint16, %var_1323: Tensor[(720), uint16]) -> (Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) {
  %709 = cast(%var_1261, dtype="int64") /* ty=Tensor[(7, 1, 16), int64] */;
  %710 = cast(%var_1262, dtype="int64") /* ty=Tensor[(7, 5, 16), int64] */;
  %711 = cast(%var_1261, dtype="float64") /* ty=Tensor[(7, 1, 16), float64] */;
  %712 = cast(meta[relay.Constant][65] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %713 = cast(meta[relay.Constant][65] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %714 = cast(meta[relay.Constant][65] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %715 = reshape(%712, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %716 = reshape(%713, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %717 = reshape(%714, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %718 = @func_294(%715, %716, %717) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
  %719 = cast(%var_1261, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
  %720 = cast(%var_1300, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %721 = cast(meta[relay.Constant][66] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %722 = cast(%var_1313, dtype="float32") /* ty=Tensor[(81), float32] */;
  %723 = reshape(%721, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %724 = reshape(%722, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %725 = @func_164(%723, %724) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %726 = cast(%var_1322, dtype="uint16") /* ty=uint16 */;
  %727 = cast(%var_1323, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %728 = reshape(%726, newshape=[]) /* ty=uint16 */;
  %729 = reshape(%727, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %730 = @func_662(%728, %729) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %731 = add(%709, %710) /* ty=Tensor[(7, 5, 16), int64] */;
  %732 = sin(%711) /* ty=Tensor[(7, 1, 16), float64] */;
  %733 = %718.0;
  %734 = not_equal(%719, %720) /* ty=Tensor[(7, 9, 16), bool] */;
  %735 = %725.1;
  %736 = %730.2;
  (%731, %732, %733, meta[relay.Constant][65] /* ty=Tensor[(120, 1), float64] */, %734, %735, meta[relay.Constant][66] /* ty=Tensor[(105), float64] */, %var_1313, %736, %var_1322, %var_1323)
}

def @func_8197() -> (bool, Tensor[(1, 10), bool]) {
  %737 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %738 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %739 = %737.0;
  %740 = %738.1;
  (%739, %740)
}

def @func_900(%var_892: Tensor[(1, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool],) {
  %741 = cast(%var_892, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %742 = exp(%741) /* ty=Tensor[(1, 7, 6), float32] */;
  %743 = cast(%var_892, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%742, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %747 = greater(%745, %746) /* ty=Tensor[(?, 7, 6), bool] */;
  (%747,)
}

def @func_6254() -> (Tensor[(10), bool],) {
  %748 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %749 = %748.1;
  (%749,)
}

def @func_5079() -> (Tensor[(10), bool],) {
  %750 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %751 = %750.0;
  (%751,)
}

def @func_8893(%var_8883: bool) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
  %752 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %753 = cast(%var_8883, dtype="bool") /* ty=bool */;
  %754 = %752.1;
  %755 = cast(%754, dtype="bool") /* ty=Tensor[(10), bool] */;
  %756 = reshape(%753, newshape=[]) /* ty=bool */;
  %757 = reshape(%755, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %758 = @func_2789(%756, %757) /* ty=(Tensor[(1, 10), bool],) */;
  %759 = %758.0;
  (%754, %759, %var_8883)
}

def @func_4562(%var_4471: int64, %var_4472: Tensor[(12, 4, 7), int64], %var_4540: Tensor[(572), float64], %var_4558: Tensor[(1, 567), float32]) -> (Tensor[(12, 4, 7), float32], Tensor[(720), uint16], Tensor[(572), float64], Tensor[(7, 15), float64], Tensor[(9, 7, 9), float32], Tensor[(1, 567), float32]) {
  %760 = cast(%var_4471, dtype="int64") /* ty=int64 */;
  %761 = cast(%var_4472, dtype="int64") /* ty=Tensor[(12, 4, 7), int64] */;
  %762 = add(%760, %761) /* ty=Tensor[(12, 4, 7), int64] */;
  %763 = cast(%var_4471, dtype="float64") /* ty=float64 */;
  %764 = cast(%762, dtype="float64") /* ty=Tensor[(12, 4, 7), float64] */;
  %765 = floor_divide(%763, %764) /* ty=Tensor[(12, 4, 7), float64] */;
  %766 = cast(%762, dtype="float32") /* ty=Tensor[(12, 4, 7), float32] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="float32") /* ty=Tensor[(12, 4, 7), float32] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %770 = cast(%var_4540, dtype="float64") /* ty=Tensor[(572), float64] */;
  %771 = cast(%var_4471, dtype="uint16") /* ty=uint16 */;
  %772 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %773 = reshape(%770, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %774 = reshape(%771, newshape=[]) /* ty=uint16 */;
  %775 = reshape(%772, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %776 = @func_869(%773, %774, %775) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %777 = cast(%var_4558, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
  %778 = reshape(%777, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %779 = @func_2372(%778) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %780 = divide(%768, %769) /* ty=Tensor[(12, 4, 7), float32] */;
  %781 = %776.3;
  %782 = %779.1;
  (%780, %781, %var_4540, meta[relay.Constant][67] /* ty=Tensor[(7, 15), float64] */, %782, %var_4558)
}

def @func_2789(%var_2782: bool, %var_2783: Tensor[(1, 10), bool]) -> (Tensor[(1, 10), bool],) {
  %783 = cast(%var_2782, dtype="bool") /* ty=bool */;
  %784 = cast(%var_2783, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
  %785 = logical_and(%783, %784) /* ty=Tensor[(1, 10), bool] */;
  (%785,)
}

def @func_6580(%var_6538: Tensor[(660), float32], %var_6542: Tensor[(4, 15, 11), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) {
  %786 = cast(%var_6538, dtype="float32") /* ty=Tensor[(660), float32] */;
  %787 = reshape(%786, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %788 = @func_3552(%787) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %789 = %788.0;
  %790 = cast(%var_6542, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %794 = cast(%789, dtype="float64") /* ty=Tensor[(4, 15, 11), float64] */;
  %795 = shape_of(%var_6542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%var_6542, dtype="float64") /* ty=Tensor[(4, 15, 11), float64] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %798 = cast(%789, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %799 = reshape(%798, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %800 = @func_5334(%799) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
  %801 = @func_5413() /* ty=Tensor[(10), bool] */;
  %802 = subtract(%792, %793) /* ty=Tensor[(4, 15, 11), float32] */;
  %803 = mod(%796, %797) /* ty=Tensor[(4, 15, 11), float64] */;
  %804 = %800.1;
  (%801, %var_6538, %802, %803, %804)
}

def @func_7535(%var_7529: int64) -> (Tensor[(1, 10), bool], Tensor[(120, 1), float64], int64, Tensor[(10, 144), int64], Tensor[(112), int64]) {
  %805 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %806 = cast(%var_7529, dtype="int64") /* ty=int64 */;
  %807 = cast(meta[relay.Constant][68] /* ty=Tensor[(10, 144), int64] */, dtype="int64") /* ty=Tensor[(10, 144), int64] */;
  %808 = cast(meta[relay.Constant][68] /* ty=Tensor[(10, 144), int64] */, dtype="int64") /* ty=Tensor[(10, 144), int64] */;
  %809 = cast(meta[relay.Constant][69] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %810 = reshape(%806, newshape=[]) /* ty=int64 */;
  %811 = reshape(%807, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %812 = reshape(%808, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %813 = reshape(%809, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %814 = @func_3108(%810, %811, %812, %813) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
  %815 = %805.0;
  %816 = %814.4;
  (%815, %816, %var_7529, meta[relay.Constant][68] /* ty=Tensor[(10, 144), int64] */, meta[relay.Constant][69] /* ty=Tensor[(112), int64] */)
}

def @func_6653() -> (Tensor[(1, 10), bool],) {
  %817 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %818 = %817.1;
  (%818,)
}

def @func_9838() -> Tensor[(10), bool] {
  %819 = @func_9251() /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %819.1
}

def @func_4855() -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
  %820 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %821 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %822 = %820.0;
  %823 = cast(%822, dtype="bool") /* ty=Tensor[(10), bool] */;
  %824 = reshape(%821, newshape=[]) /* ty=bool */;
  %825 = reshape(%823, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %826 = @func_2789(%824, %825) /* ty=(Tensor[(1, 10), bool],) */;
  %827 = %826.0;
  (%822, %827, False /* ty=bool */)
}

def @func_7129() -> (Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) {
  %828 = @func_6254() /* ty=(Tensor[(10), bool],) */;
  %829 = cast(meta[relay.Constant][70] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %830 = reshape(%829, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %831 = @func_5887(%830) /* ty=(Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) */;
  %832 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %833 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %834 = reshape(%832, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %835 = reshape(%833, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %836 = @func_3697(%834, %835) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %837 = %836.0;
  %838 = cast(meta[relay.Constant][71] /* ty=Tensor[(240), float32] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="bool") /* ty=Tensor[(15, 4, 4), bool] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %842 = logical_or(%840, %841) /* ty=Tensor[(15, 4, 4), bool] */;
  %843 = cast(%837, dtype="int64") /* ty=Tensor[(15, 4, 4), int64] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%842, dtype="int64") /* ty=Tensor[(15, 4, 4), int64] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %847 = %828.0;
  %848 = %831.3;
  %849 = multiply(%845, %846) /* ty=Tensor[(15, 4, 4), int64] */;
  (%847, %848, meta[relay.Constant][70] /* ty=Tensor[(112), int64] */, %849)
}

def @func_164(%var_146: Tensor[(5, 3, 7), float64], %var_151: Tensor[(81), float32]) -> (Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
  %850 = cast(%var_146, dtype="float64") /* ty=Tensor[(5, 3, 7), float64] */;
  %851 = cast(%var_151, dtype="float32") /* ty=Tensor[(81), float32] */;
  %852 = reshape(%851, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %853 = @func_47(%852) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %854 = sinh(%850) /* ty=Tensor[(5, 3, 7), float64] */;
  %855 = %853.1;
  (%854, %855, %var_151)
}

def @func_5413() -> Tensor[(10), bool] {
  %856 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %856.0
}

def @func_5025(%var_4982: Tensor[(420), uint8], %var_4984: Tensor[(112), int64], %var_4986: Tensor[(1008), int64], %var_5005: Tensor[(560), int64]) -> (Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) {
  %857 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %858 = cast(%var_4982, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %859 = cast(meta[relay.Constant][72] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %860 = cast(%var_4984, dtype="int64") /* ty=Tensor[(112), int64] */;
  %861 = cast(meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %862 = cast(%var_4986, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %863 = reshape(%858, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), uint8] */;
  %864 = reshape(%859, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %865 = reshape(%860, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %866 = reshape(%861, newshape=[560, 1]) /* ty=Tensor[(560, 1), int64] */;
  %867 = reshape(%862, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %868 = @func_3260(%863, %864, %865, %866, %867) /* ty=(Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) */;
  %869 = cast(%var_5005, dtype="int64") /* ty=Tensor[(560), int64] */;
  %870 = shape_of(meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %871 = cast(meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?), int64] */;
  %873 = cast(meta[relay.Constant][73] /* ty=Tensor[(560), int64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %874 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(1), int32] */;
  %875 = cast(%var_5005, dtype="float64") /* ty=Tensor[(560), float64] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?), float64] */;
  %877 = %857.0;
  %878 = %868.1;
  %879 = maximum(%871, %872) /* ty=Tensor[(560), int64] */;
  %880 = floor_divide(%875, %876) /* ty=Tensor[(560), float64] */;
  (%877, %878, %var_4982, meta[relay.Constant][72] /* ty=Tensor[(105), float64] */, %var_4984, %var_4986, %879, %880)
}

def @func_8072() -> Tensor[(10), bool] {
  %881 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %881.0
}

def @func_8128() -> (Tensor[(6, 78), bool],) {
  %882 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %883 = %882.2;
  %884 = cast(meta[relay.Constant][74] /* ty=Tensor[(6, 78), int32] */, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(2), int32] */;
  %886 = cast(%883, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %888 = logical_and(%886, %887) /* ty=Tensor[(6, 78), bool] */;
  (%888,)
}

def @func_2124(%var_2095: Tensor[(1, 1), float64], %var_2105: Tensor[(1232), float64], %var_2120: Tensor[(2, 280), int64], %var_2122: Tensor[(1, 720), uint16]) -> (Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) {
  %889 = cast(%var_2095, dtype="float64") /* ty=Tensor[(1, 1), float64] */;
  %890 = cast(meta[relay.Constant][75] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %891 = cast(meta[relay.Constant][75] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %892 = sinh(%889) /* ty=Tensor[(1, 1), float64] */;
  %893 = cast(%892, dtype="uint16") /* ty=Tensor[(1, 1), uint16] */;
  %894 = reshape(%890, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
  %895 = reshape(%891, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
  %896 = reshape(%893, newshape=[]) /* ty=uint16 */;
  %897 = @func_1045(%894, %895, %896) /* ty=(Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) */;
  %898 = cast(%var_2105, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %899 = reshape(%898, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
  %900 = @func_230(%899) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
  %901 = cast(meta[relay.Constant][76] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %902 = cast(%var_2120, dtype="int64") /* ty=Tensor[(2, 280), int64] */;
  %903 = cast(meta[relay.Constant][77] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %904 = %897.5;
  %905 = cast(%904, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
  %906 = cast(%var_2095, dtype="uint16") /* ty=Tensor[(1, 1), uint16] */;
  %907 = cast(%var_2122, dtype="uint16") /* ty=Tensor[(1, 720), uint16] */;
  %908 = reshape(%901, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
  %909 = reshape(%902, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
  %910 = reshape(%903, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
  %911 = reshape(%905, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %912 = reshape(%906, newshape=[]) /* ty=uint16 */;
  %913 = reshape(%907, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %914 = @func_1325(%908, %909, %910, %911, %912, %913) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
  %915 = %900.0;
  %916 = %914.1;
  (%892, %904, meta[relay.Constant][75] /* ty=Tensor[(520), float32] */, %915, %var_2105, %916, meta[relay.Constant][76] /* ty=Tensor[(112), int64] */, %var_2120, meta[relay.Constant][77] /* ty=Tensor[(1008), int64] */, %var_2122)
}

def @func_9273() -> (Tensor[(10), bool],) {
  %917 = @func_8647() /* ty=Tensor[(10), bool] */;
  (%917,)
}

def @func_4457(%var_4423: Tensor[(16, 2, 6), int16], %var_4424: Tensor[(16, 2, 6), int16]) -> (Tensor[(16, 2, 6), float64],) {
  %918 = cast(%var_4424, dtype="bool") /* ty=Tensor[(16, 2, 6), bool] */;
  %919 = shape_of(%var_4423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_4423, dtype="bool") /* ty=Tensor[(16, 2, 6), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = less_equal(%920, %921) /* ty=Tensor[(16, 2, 6), bool] */;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(16, 2, 6), float64] */;
  %924 = cosh(%923) /* ty=Tensor[(16, 2, 6), float64] */;
  (%924,)
}

def @func_8628(%var_8593: float64, %var_8594: Tensor[(10, 3, 10), float64], %var_8626: Tensor[(660), float32]) -> (Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  %925 = cast(%var_8593, dtype="float64") /* ty=float64 */;
  %926 = cast(%var_8594, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %927 = cast(%var_8594, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %928 = @func_6912() /* ty=(Tensor[(10), bool],) */;
  %929 = cast(%var_8626, dtype="float32") /* ty=Tensor[(660), float32] */;
  %930 = cast(%var_8626, dtype="float32") /* ty=Tensor[(660), float32] */;
  %931 = reshape(%929, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %932 = reshape(%930, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %933 = @func_6580(%931, %932) /* ty=(Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) */;
  %934 = divide(%925, %926) /* ty=Tensor[(10, 3, 10), float64] */;
  %935 = sinh(%927) /* ty=Tensor[(10, 3, 10), float64] */;
  %936 = %928.0;
  %937 = %933.2;
  (%934, %935, %936, %937, %var_8626)
}

def @func_9690() -> (Tensor[(10), bool], Tensor[(1, 10), bool]) {
  %938 = @func_9059() /* ty=(Tensor[(10), bool],) */;
  %939 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %940 = %938.0;
  %941 = %939.1;
  (%940, %941)
}

def @func_5709(%var_5704: int64, %var_5705: Tensor[(1440), int64]) -> (Tensor[(10), bool], Tensor[(81, 1), float32], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
  %942 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %943 = cast(%var_5704, dtype="int64") /* ty=int64 */;
  %944 = cast(%var_5705, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %945 = cast(%var_5705, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %946 = cast(meta[relay.Constant][78] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %947 = reshape(%943, newshape=[]) /* ty=int64 */;
  %948 = reshape(%944, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %949 = reshape(%945, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %950 = reshape(%946, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %951 = @func_3108(%947, %948, %949, %950) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
  %952 = %942.0;
  %953 = %951.8;
  (%952, %953, %var_5704, %var_5705, meta[relay.Constant][78] /* ty=Tensor[(112), int64] */)
}

def @func_6038(%var_5896: Tensor[(8, 7, 1), float32], %var_5975: Tensor[(8, 7, 1), uint32], %var_5997: Tensor[(8, 7, 100), int32], %var_6006: Tensor[(240), float32], %var_6007: Tensor[(1232), float64]) -> (Tensor[(1, 13), float64], Tensor[(8, 7, 10), uint16], Tensor[(8, 7, ?), bool], Tensor[(8, 7, 100), float64], Tensor[(105), float64], Tensor[(240), float32], Tensor[(1232), float64]) {
  %954 = cast(%var_5896, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %955 = log(%954) /* ty=Tensor[(8, 7, 1), float32] */;
  %956 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %957 = %956.0;
  %958 = cast(%955, dtype="uint16") /* ty=Tensor[(8, 7, 1), uint16] */;
  %959 = cast(%957, dtype="uint16") /* ty=Tensor[(10), uint16] */;
  %960 = cast(%955, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  %961 = log2(%960) /* ty=Tensor[(8, 7, 1), float64] */;
  %962 = cast(%955, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
  %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%961, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %966 = bitwise_or(%964, %965) /* ty=Tensor[(8, 7, ?), uint32] */;
  %967 = cast(%var_5975, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%966, dtype="bool") /* ty=Tensor[(8, 7, ?), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %971 = cast(%var_5896, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %972 = sinh(%971) /* ty=Tensor[(8, 7, 1), float32] */;
  %973 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %974 = reshape(%973, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %975 = @func_3606(%974) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %976 = %975.2;
  %977 = cast(%972, dtype="int32") /* ty=Tensor[(8, 7, 1), int32] */;
  %978 = cast(%976, dtype="int32") /* ty=Tensor[(100), int32] */;
  %979 = bitwise_and(%977, %978) /* ty=Tensor[(8, 7, 100), int32] */;
  %980 = cast(%var_5997, dtype="float64") /* ty=Tensor[(8, 7, 100), float64] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%979, dtype="float64") /* ty=Tensor[(8, 7, 100), float64] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %984 = cast(%var_6006, dtype="float32") /* ty=Tensor[(240), float32] */;
  %985 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
  %986 = cast(%var_6007, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %987 = reshape(%984, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %988 = reshape(%985, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %989 = reshape(%986, newshape=[56, 22]) /* ty=Tensor[(56, 22), float64] */;
  %990 = @func_4681(%987, %988, %989) /* ty=(Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) */;
  %991 = subtract(%958, %959) /* ty=Tensor[(8, 7, 10), uint16] */;
  %992 = greater_equal(%969, %970) /* ty=Tensor[(8, 7, ?), bool] */;
  %993 = mod(%982, %983) /* ty=Tensor[(8, 7, 100), float64] */;
  %994 = %990.9;
  (meta[relay.Constant][79] /* ty=Tensor[(1, 13), float64] */, %991, %992, %993, %994, %var_6006, %var_6007)
}

def @func_5631(%var_5603: Tensor[(13), float64], %var_5625: Tensor[(2, 96), int16]) -> (Tensor[(10), bool], Tensor[(1, 13), float64], Tensor[(13), float64], Tensor[(567), bool], Tensor[(16, 2, 6), float64], Tensor[(2, 96), int16]) {
  %995 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %996 = cast(%var_5603, dtype="float64") /* ty=Tensor[(13), float64] */;
  %997 = reshape(%996, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %998 = @func_3606(%997) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %999 = cast(meta[relay.Constant][80] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %1000 = reshape(%999, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %1001 = @func_2372(%1000) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %1002 = %1001.1;
  %1003 = cast(%1002, dtype="bool") /* ty=Tensor[(9, 7, 9), bool] */;
  %1004 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(567), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1005 = cast(meta[relay.Constant][80] /* ty=Tensor[(567), float32] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1007 = cast(%var_5625, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %1008 = cast(%var_5625, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %1009 = reshape(%1007, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %1010 = reshape(%1008, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %1011 = @func_4457(%1009, %1010) /* ty=(Tensor[(16, 2, 6), float64],) */;
  %1012 = %995.0;
  %1013 = %998.0;
  %1014 = logical_or(%1005, %1006) /* ty=Tensor[(567), bool] */;
  %1015 = %1011.0;
  (%1012, %1013, %var_5603, %1014, %1015, %var_5625)
}

def @func_6197() -> Tensor[(10), bool] {
  %1016 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %1016.0
}

def @func_5157() -> (Tensor[(10), bool],) {
  %1017 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %1018 = %1017.0;
  (%1018,)
}

def @func_8389() -> (Tensor[(10), bool],) {
  %1019 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %1020 = %1019.0;
  (%1020,)
}

def @func_6349(%var_6295: float32, %var_6329: Tensor[(40, 14), int64]) -> (Tensor[(5, 11, 4), float32], Tensor[(1232), float64], Tensor[(720), uint16], Tensor[(10), bool], Tensor[(1, 720), uint16], Tensor[(40, 14), float64], Tensor[(4, 5, 15), float32], Tensor[(13), float64]) {
  %1021 = cast(%var_6295, dtype="float32") /* ty=float32 */;
  %1022 = cast(meta[relay.Constant][81] /* ty=Tensor[(5, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 4), float32] */;
  %1023 = cast(%var_6295, dtype="uint16") /* ty=uint16 */;
  %1024 = cast(meta[relay.Constant][82] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %1025 = reshape(%1023, newshape=[]) /* ty=uint16 */;
  %1026 = reshape(%1024, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %1027 = @func_662(%1025, %1026) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %1028 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %1029 = cast(%var_6295, dtype="float64") /* ty=float64 */;
  %1030 = %1027.4;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1032 = cast(%var_6329, dtype="int64") /* ty=Tensor[(40, 14), int64] */;
  %1033 = cast(meta[relay.Constant][82] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %1034 = reshape(%1029, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %1035 = reshape(%1031, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %1036 = reshape(%1032, newshape=[2, 280]) /* ty=Tensor[(2, 280), int64] */;
  %1037 = reshape(%1033, newshape=[1, 720]) /* ty=Tensor[(1, 720), uint16] */;
  %1038 = @func_2124(%1034, %1035, %1036, %1037) /* ty=(Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) */;
  %1039 = cast(%var_6329, dtype="float64") /* ty=Tensor[(40, 14), float64] */;
  %1040 = cast(meta[relay.Constant][83] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1041 = reshape(%1040, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %1042 = @func_3606(%1041) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %1043 = floor_divide(%1021, %1022) /* ty=Tensor[(5, 11, 4), float32] */;
  %1044 = %1028.0;
  %1045 = %1038.9;
  %1046 = sqrt(%1039) /* ty=Tensor[(40, 14), float64] */;
  %1047 = %1042.1;
  (%1043, %1030, meta[relay.Constant][82] /* ty=Tensor[(720), uint16] */, %1044, %1045, %1046, %1047, meta[relay.Constant][83] /* ty=Tensor[(13), float64] */)
}

def @func_3260(%var_3218: Tensor[(12, 5, 7), uint8], %var_3224: Tensor[(105), float64], %var_3254: Tensor[(112), int64], %var_3255: Tensor[(560, 1), int64], %var_3256: Tensor[(1008), int64]) -> (Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) {
  %1048 = cast(%var_3218, dtype="uint8") /* ty=Tensor[(12, 5, 7), uint8] */;
  %1049 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(12, 5, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1050 = cast(meta[relay.Constant][84] /* ty=Tensor[(12, 5, 7), uint8] */, dtype="uint8") /* ty=Tensor[(12, 5, 7), uint8] */;
  %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1052 = cast(%var_3224, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1053 = cast(meta[relay.Constant][85] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1054 = reshape(%1052, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %1055 = reshape(%1053, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %1056 = @func_164(%1054, %1055) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %1057 = cast(%var_3254, dtype="int64") /* ty=Tensor[(112), int64] */;
  %1058 = cast(%var_3255, dtype="int64") /* ty=Tensor[(560, 1), int64] */;
  %1059 = cast(%var_3256, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %1060 = cast(meta[relay.Constant][85] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %1061 = cast(meta[relay.Constant][86] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1062 = cast(meta[relay.Constant][87] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %1063 = reshape(%1057, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
  %1064 = reshape(%1058, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
  %1065 = reshape(%1059, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
  %1066 = reshape(%1060, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %1067 = reshape(%1061, newshape=[]) /* ty=uint16 */;
  %1068 = reshape(%1062, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %1069 = @func_1325(%1063, %1064, %1065, %1066, %1067, %1068) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
  %1070 = multiply(%1050, %1051) /* ty=Tensor[(12, 5, 7), uint8] */;
  %1071 = %1056.0;
  %1072 = %1069.2;
  (%1070, %1071, %var_3224, meta[relay.Constant][85] /* ty=Tensor[(81), float32] */, %1072, %var_3254, %var_3255, %var_3256, meta[relay.Constant][86] /* ty=uint16 */, meta[relay.Constant][87] /* ty=Tensor[(720), uint16] */)
}

def @func_9037(%var_9029: uint8) -> (Tensor[(1, 4, 5), uint8],) {
  %1073 = cast(%var_9029, dtype="uint8") /* ty=uint8 */;
  %1074 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 4, 5), uint8] */, dtype="uint8") /* ty=Tensor[(1, 4, 5), uint8] */;
  %1075 = maximum(%1073, %1074) /* ty=Tensor[(1, 4, 5), uint8] */;
  (%1075,)
}

def @func_5486() -> (Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) {
  %1076 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %1077 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %1078 = cast(meta[relay.Constant][89] /* ty=Tensor[(8, 30), float32] */, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
  %1079 = cast(meta[relay.Constant][89] /* ty=Tensor[(8, 30), float32] */, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
  %1080 = reshape(%1078, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %1081 = reshape(%1079, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %1082 = @func_3697(%1080, %1081) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %1083 = %1076.0;
  %1084 = %1077.0;
  %1085 = %1082.0;
  (%1083, %1084, %1085, meta[relay.Constant][89] /* ty=Tensor[(8, 30), float32] */)
}

def @func_7804(%var_7783: Tensor[(11, 10, 10), float32]) -> (Tensor[(11, 10, 10), float32],) {
  %1086 = cast(%var_7783, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
  %1087 = acosh(%1086) /* ty=Tensor[(11, 10, 10), float32] */;
  (%1087,)
}

def @func_5066(%var_5053: Tensor[(240), float32]) -> (Tensor[(6, 78), int32], bool, Tensor[(240), float32], Tensor[(13), float64], Tensor[(1, 1232), float64]) {
  %1088 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %1089 = %1088.2;
  %1090 = cast(%1089, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %1091 = acosh(%1090) /* ty=Tensor[(6, 78), float32] */;
  %1092 = cast(%1091, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
  %1093 = shape_of(%1089, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1094 = cast(%1089, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1096 = cast(%var_5053, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1097 = cast(meta[relay.Constant][90] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1098 = cast(meta[relay.Constant][91] /* ty=Tensor[(1, 1232), float64] */, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %1099 = reshape(%1096, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1100 = reshape(%1097, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %1101 = reshape(%1098, newshape=[56, 22]) /* ty=Tensor[(56, 22), float64] */;
  %1102 = @func_4681(%1099, %1100, %1101) /* ty=(Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) */;
  %1103 = add(%1094, %1095) /* ty=Tensor[(6, 78), int32] */;
  %1104 = %1102.4;
  (%1103, %1104, %var_5053, meta[relay.Constant][90] /* ty=Tensor[(13), float64] */, meta[relay.Constant][91] /* ty=Tensor[(1, 1232), float64] */)
}

def @func_7954() -> Tensor[(1, 10), bool] {
  %1105 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %1105.1
}

def @func_768(%var_725: Tensor[(6, 10, 7), float64]) -> (Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) {
  %1106 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 7), float64] */;
  %1107 = shape_of(%var_725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1108 = cast(%var_725, dtype="float64") /* ty=Tensor[(6, 10, 7), float64] */;
  %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1110 = multiply(%1108, %1109) /* ty=Tensor[(6, 10, 7), float64] */;
  %1111 = cast(meta[relay.Constant][92] /* ty=Tensor[(6, 10, 7), float64] */, dtype="int64") /* ty=Tensor[(6, 10, 7), int64] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1113 = cast(%1110, dtype="int64") /* ty=Tensor[(6, 10, 7), int64] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1115 = cast(meta[relay.Constant][93] /* ty=Tensor[(56, 22), float64] */, dtype="float64") /* ty=Tensor[(56, 22), float64] */;
  %1116 = reshape(%1115, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
  %1117 = @func_230(%1116) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
  %1118 = right_shift(%1113, %1114) /* ty=Tensor[(6, 10, 7), int64] */;
  %1119 = %1117.0;
  (%1118, %1119, meta[relay.Constant][93] /* ty=Tensor[(56, 22), float64] */)
}

def @func_5124(%var_5118: int64) -> (Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
  %1120 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %1121 = cast(%var_5118, dtype="int64") /* ty=int64 */;
  %1122 = cast(meta[relay.Constant][94] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %1123 = cast(meta[relay.Constant][94] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %1124 = cast(meta[relay.Constant][95] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %1125 = reshape(%1121, newshape=[]) /* ty=int64 */;
  %1126 = reshape(%1122, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %1127 = reshape(%1123, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %1128 = reshape(%1124, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %1129 = @func_3108(%1125, %1126, %1127, %1128) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
  %1130 = %1120.0;
  %1131 = %1129.3;
  (%1130, %1131, %var_5118, meta[relay.Constant][94] /* ty=Tensor[(1440), int64] */, meta[relay.Constant][95] /* ty=Tensor[(112), int64] */)
}

def @func_1481(%var_1471: Tensor[(6, 6, 13), int32]) -> Tensor[(6, 6, 13), bool] {
  %1132 = cast(%var_1471, dtype="int32") /* ty=Tensor[(6, 6, 13), int32] */;
  %1133 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(6, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(meta[relay.Constant][96] /* ty=Tensor[(6, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 6, 13), int32] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1136 = left_shift(%1134, %1135) /* ty=Tensor[(6, 6, 13), int32] */;
  %1137 = cast(meta[relay.Constant][97] /* ty=Tensor[(6, 6, 13), int32] */, dtype="bool") /* ty=Tensor[(6, 6, 13), bool] */;
  %1138 = shape_of(%1136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1139 = cast(%1136, dtype="bool") /* ty=Tensor[(6, 6, 13), bool] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1139, %1140) /* ty=Tensor[(6, 6, 13), bool] */
}

def @func_5887(%var_5883: Tensor[(112), int64]) -> (Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) {
  %1141 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %1142 = cast(meta[relay.Constant][98] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
  %1143 = cast(meta[relay.Constant][99] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1144 = cast(%var_5883, dtype="int64") /* ty=Tensor[(112), int64] */;
  %1145 = cast(meta[relay.Constant][100] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
  %1146 = cast(meta[relay.Constant][101] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %1147 = reshape(%1142, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), uint8] */;
  %1148 = reshape(%1143, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1149 = reshape(%1144, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %1150 = reshape(%1145, newshape=[560, 1]) /* ty=Tensor[(560, 1), int64] */;
  %1151 = reshape(%1146, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
  %1152 = @func_3260(%1147, %1148, %1149, %1150, %1151) /* ty=(Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) */;
  %1153 = %1141.0;
  %1154 = %1152.5;
  (%1153, %1154, meta[relay.Constant][98] /* ty=Tensor[(420), uint8] */, meta[relay.Constant][99] /* ty=Tensor[(105), float64] */, %var_5883, meta[relay.Constant][100] /* ty=Tensor[(560), int64] */, meta[relay.Constant][101] /* ty=Tensor[(1008), int64] */)
}

def @func_7586() -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(468), int32], Tensor[(1, 960), uint64], Tensor[(13), float64], Tensor[(1232), float64]) {
  %1155 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %1156 = cast(meta[relay.Constant][102] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1157 = reshape(%1156, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), float32] */;
  %1158 = @func_2519(%1157) /* ty=(Tensor[(4, 5, 15), float32],) */;
  %1159 = cast(meta[relay.Constant][103] /* ty=Tensor[(1, 960), uint64] */, dtype="uint64") /* ty=Tensor[(1, 960), uint64] */;
  %1160 = cast(meta[relay.Constant][104] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %1161 = cast(meta[relay.Constant][105] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1162 = reshape(%1159, newshape=[960]) /* ty=Tensor[(960), uint64] */;
  %1163 = reshape(%1160, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %1164 = reshape(%1161, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %1165 = @func_7394(%1162, %1163, %1164) /* ty=(Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) */;
  %1166 = %1155.0;
  %1167 = %1158.0;
  %1168 = %1165.0;
  (%1166, %1167, meta[relay.Constant][102] /* ty=Tensor[(300), float32] */, %1168, meta[relay.Constant][103] /* ty=Tensor[(1, 960), uint64] */, meta[relay.Constant][104] /* ty=Tensor[(13), float64] */, meta[relay.Constant][105] /* ty=Tensor[(1232), float64] */)
}

def @func_8100(%var_8093: bool) -> (Tensor[(3, 6, 6), bool],) {
  %1169 = cast(%var_8093, dtype="bool") /* ty=bool */;
  %1170 = cast(meta[relay.Constant][106] /* ty=Tensor[(3, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(3, 6, 6), bool] */;
  %1171 = logical_and(%1169, %1170) /* ty=Tensor[(3, 6, 6), bool] */;
  (%1171,)
}

def @func_6956() -> (Tensor[(10), bool],) {
  %1172 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %1173 = %1172.0;
  (%1173,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4405() -> (Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) {
  @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */
}

def @func_8895(%var_8894: bool) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
  %8 = fn (%var_8883: bool) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
    %0 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
    %1 = cast(%var_8883, dtype="bool") /* ty=bool */;
    %2 = %0.1;
    %3 = cast(%2, dtype="bool") /* ty=Tensor[(10), bool] */;
    %4 = reshape(%1, newshape=[]) /* ty=bool */;
    %5 = reshape(%3, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
    %6 = @func_2789(%4, %5) /* ty=(Tensor[(1, 10), bool],) */;
    %7 = %6.0;
    (%2, %7, %var_8883)
  };
  %8(%var_8894) /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */
}

def @func_1325(%var_1261: Tensor[(7, 1, 16), int64], %var_1262: Tensor[(7, 5, 16), int64], %var_1300: Tensor[(7, 9, 16), int64], %var_1313: Tensor[(81), float32], %var_1322: uint16, %var_1323: Tensor[(720), uint16]) -> (Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) {
  %9 = cast(%var_1261, dtype="int64") /* ty=Tensor[(7, 1, 16), int64] */;
  %10 = cast(%var_1262, dtype="int64") /* ty=Tensor[(7, 5, 16), int64] */;
  %11 = cast(%var_1261, dtype="float64") /* ty=Tensor[(7, 1, 16), float64] */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(120, 1), float64] */, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %15 = reshape(%12, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %16 = reshape(%13, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %17 = reshape(%14, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
  %18 = @func_294(%15, %16, %17) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
  %19 = cast(%var_1261, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
  %20 = cast(%var_1300, dtype="bool") /* ty=Tensor[(7, 9, 16), bool] */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %22 = cast(%var_1313, dtype="float32") /* ty=Tensor[(81), float32] */;
  %23 = reshape(%21, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %24 = reshape(%22, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %25 = @func_164(%23, %24) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %26 = cast(%var_1322, dtype="uint16") /* ty=uint16 */;
  %27 = cast(%var_1323, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %28 = reshape(%26, newshape=[]) /* ty=uint16 */;
  %29 = reshape(%27, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %30 = @func_662(%28, %29) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %31 = add(%9, %10) /* ty=Tensor[(7, 5, 16), int64] */;
  %32 = sin(%11) /* ty=Tensor[(7, 1, 16), float64] */;
  %33 = %18.0;
  %34 = not_equal(%19, %20) /* ty=Tensor[(7, 9, 16), bool] */;
  %35 = %25.1;
  %36 = %30.2;
  (%31, %32, %33, meta[relay.Constant][0] /* ty=Tensor[(120, 1), float64] */, %34, %35, meta[relay.Constant][1] /* ty=Tensor[(105), float64] */, %var_1313, %36, %var_1322, %var_1323)
}

def @func_8805(%var_8801: Tensor[(720), uint16]) -> (Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], Tensor[(720), uint16], Tensor[(240), float32], Tensor[(468), int32]) {
  %37 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %38 = cast(%var_8801, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %41 = reshape(%38, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %42 = reshape(%39, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %43 = reshape(%40, newshape=[234, 2]) /* ty=Tensor[(234, 2), int32] */;
  %44 = @func_6883(%41, %42, %43) /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) */;
  %45 = %37.1;
  %46 = %44.2;
  (%45, %46, %var_8801, meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, meta[relay.Constant][3] /* ty=Tensor[(468), int32] */)
}

def @func_900(%var_892: Tensor[(1, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool],) {
  %47 = cast(%var_892, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %48 = exp(%47) /* ty=Tensor[(1, 7, 6), float32] */;
  %49 = cast(%var_892, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%48, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %53 = greater(%51, %52) /* ty=Tensor[(?, 7, 6), bool] */;
  (%53,)
}

def @func_2792(%var_2790: bool, %var_2791: Tensor[(1, 10), bool]) -> (Tensor[(1, 10), bool],) {
  %57 = fn (%var_2782: bool, %var_2783: Tensor[(1, 10), bool]) -> (Tensor[(1, 10), bool],) {
    %54 = cast(%var_2782, dtype="bool") /* ty=bool */;
    %55 = cast(%var_2783, dtype="bool") /* ty=Tensor[(1, 10), bool] */;
    %56 = logical_and(%54, %55) /* ty=Tensor[(1, 10), bool] */;
    (%56,)
  };
  %57(%var_2790, %var_2791) /* ty=(Tensor[(1, 10), bool],) */
}

def @func_7987() -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) {
  %68 = fn () -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) {
    %58 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
    %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %60 = reshape(%59, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %61 = @func_3552(%60) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
    %62 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %63 = reshape(%62, newshape=[]) /* ty=uint16 */;
    %64 = @func_4712(%63) /* ty=(Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) */;
    %65 = %58.2;
    %66 = %61.1;
    %67 = %64.0;
    (%65, %66, meta[relay.Constant][4] /* ty=Tensor[(660), float32] */, %67, meta[relay.Constant][5] /* ty=uint16 */)
  };
  %68() /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) */
}

def @func_4744() -> (Tensor[(10), bool],) {
  %69 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %70 = %69.3;
  (%70,)
}

def @func_8771() -> Tensor[(10), bool] {
  @func_8769() /* ty=Tensor[(10), bool] */
}

def @func_4781() -> (Tensor[(10), bool],) {
  %71 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %72 = %71.0;
  (%72,)
}

def @func_8199() -> (bool, Tensor[(1, 10), bool]) {
  @func_8197() /* ty=(bool, Tensor[(1, 10), bool]) */
}

def @func_5414() -> Tensor[(10), bool] {
  %74 = fn () -> Tensor[(10), bool] {
    %73 = @func_5079() /* ty=(Tensor[(10), bool],) */;
    %73.0
  };
  %74() /* ty=Tensor[(10), bool] */
}

def @func_3552(%var_3534: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) {
  %75 = cast(%var_3534, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %76 = cast(%var_3534, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %77 = log(%75) /* ty=Tensor[(4, 15, 11), float32] */;
  %78 = sigmoid(%76) /* ty=Tensor[(4, 15, 11), float32] */;
  (%77, %78)
}

def @func_6914() -> (Tensor[(10), bool],) {
  @func_6912() /* ty=(Tensor[(10), bool],) */
}

def @func_8769() -> Tensor[(10), bool] {
  %79 = @func_6956() /* ty=(Tensor[(10), bool],) */;
  %79.0
}

def @func_9273() -> (Tensor[(10), bool],) {
  %80 = @func_8647() /* ty=Tensor[(10), bool] */;
  (%80,)
}

def @func_5157() -> (Tensor[(10), bool],) {
  %81 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %82 = %81.0;
  (%82,)
}

def @func_6223() -> (Tensor[(10), bool],) {
  %83 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %84 = %83.0;
  (%84,)
}

def @func_7535(%var_7529: int64) -> (Tensor[(1, 10), bool], Tensor[(120, 1), float64], int64, Tensor[(10, 144), int64], Tensor[(112), int64]) {
  %85 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %86 = cast(%var_7529, dtype="int64") /* ty=int64 */;
  %87 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 144), int64] */, dtype="int64") /* ty=Tensor[(10, 144), int64] */;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 144), int64] */, dtype="int64") /* ty=Tensor[(10, 144), int64] */;
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %90 = reshape(%86, newshape=[]) /* ty=int64 */;
  %91 = reshape(%87, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %92 = reshape(%88, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
  %93 = reshape(%89, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %94 = @func_3108(%90, %91, %92, %93) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
  %95 = %85.0;
  %96 = %94.4;
  (%95, %96, %var_7529, meta[relay.Constant][6] /* ty=Tensor[(10, 144), int64] */, meta[relay.Constant][7] /* ty=Tensor[(112), int64] */)
}

def @func_7280() -> (Tensor[(10), bool],) {
  %99 = fn () -> (Tensor[(10), bool],) {
    %97 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
    %98 = %97.0;
    (%98,)
  };
  %99() /* ty=(Tensor[(10), bool],) */
}

def @func_6256() -> (Tensor[(10), bool],) {
  @func_6254() /* ty=(Tensor[(10), bool],) */
}

def @func_7776(%var_7774: Tensor[(6, 8, 6), int64], %var_7775: Tensor[(60, 2), float64]) -> (Tensor[(6, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(60, 2), float64], Tensor[(12, 60), uint16], Tensor[(520), float32], uint16) {
  %121 = fn (%var_7725: Tensor[(6, 8, 6), int64], %var_7745: Tensor[(60, 2), float64]) -> (Tensor[(6, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(60, 2), float64], Tensor[(12, 60), uint16], Tensor[(520), float32], uint16) {
    %100 = cast(%var_7725, dtype="int64") /* ty=Tensor[(6, 8, 6), int64] */;
    %101 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 6), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 6), int64] */, dtype="int64") /* ty=Tensor[(6, 8, 6), int64] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %104 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %105 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %106 = cast(%var_7745, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %107 = reshape(%104, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %108 = reshape(%105, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %109 = reshape(%106, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %110 = @func_294(%107, %108, %109) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
    %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
    %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
    %113 = cast(meta[relay.Constant][10] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %114 = reshape(%111, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
    %115 = reshape(%112, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
    %116 = reshape(%113, newshape=[]) /* ty=uint16 */;
    %117 = @func_1045(%114, %115, %116) /* ty=(Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) */;
    %118 = right_shift(%102, %103) /* ty=Tensor[(6, 8, 6), int64] */;
    %119 = %110.0;
    %120 = %117.8;
    (%118, %119, %var_7745, %120, meta[relay.Constant][9] /* ty=Tensor[(520), float32] */, meta[relay.Constant][10] /* ty=uint16 */)
  };
  %121(%var_7774, %var_7775) /* ty=(Tensor[(6, 8, 6), int64], Tensor[(5, 6, 4), float64], Tensor[(60, 2), float64], Tensor[(12, 60), uint16], Tensor[(520), float32], uint16) */
}

def @func_5126(%var_5125: int64) -> (Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
  %134 = fn (%var_5118: int64) -> (Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
    %122 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %123 = cast(%var_5118, dtype="int64") /* ty=int64 */;
    %124 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %125 = cast(meta[relay.Constant][11] /* ty=Tensor[(1440), int64] */, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %126 = cast(meta[relay.Constant][12] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %127 = reshape(%123, newshape=[]) /* ty=int64 */;
    %128 = reshape(%124, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
    %129 = reshape(%125, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
    %130 = reshape(%126, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %131 = @func_3108(%127, %128, %129, %130) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
    %132 = %122.0;
    %133 = %131.3;
    (%132, %133, %var_5118, meta[relay.Constant][11] /* ty=Tensor[(1440), int64] */, meta[relay.Constant][12] /* ty=Tensor[(112), int64] */)
  };
  %134(%var_5125) /* ty=(Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) */
}

def @func_2522(%var_2520: Tensor[(4, 5, 15), float32]) -> (Tensor[(4, 5, 15), float32],) {
  @func_2519(%var_2520) /* ty=(Tensor[(4, 5, 15), float32],) */
}

def @func_6459(%var_6457: Tensor[(1, 105), float64], %var_6458: Tensor[(81), float32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool, Tensor[(81), float32], Tensor[(1, 105), float64], Tensor[(81), float32]) {
  @func_6455(%var_6457, %var_6458) /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool, Tensor[(81), float32], Tensor[(1, 105), float64], Tensor[(81), float32]) */
}

def @func_8391() -> (Tensor[(10), bool],) {
  @func_8389() /* ty=(Tensor[(10), bool],) */
}

def @func_5159() -> (Tensor[(10), bool],) {
  @func_5157() /* ty=(Tensor[(10), bool],) */
}

def @func_8389() -> (Tensor[(10), bool],) {
  %135 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %136 = %135.0;
  (%136,)
}

def @func_8074() -> Tensor[(10), bool] {
  @func_8072() /* ty=Tensor[(10), bool] */
}

def @func_4681(%var_4605: Tensor[(240), float32], %var_4671: Tensor[(13), float64], %var_4672: Tensor[(56, 22), float64]) -> (Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) {
  %137 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
  %138 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %139 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %140 = reshape(%138, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %141 = reshape(%139, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
  %142 = @func_3697(%140, %141) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
  %143 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %144 = %137.3;
  %145 = cast(%144, dtype="bool") /* ty=Tensor[(10), bool] */;
  %146 = reshape(%143, newshape=[]) /* ty=bool */;
  %147 = reshape(%145, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %148 = @func_2789(%146, %147) /* ty=(Tensor[(1, 10), bool],) */;
  %149 = cast(meta[relay.Constant][13] /* ty=Tensor[(1386), float32] */, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %150 = cast(meta[relay.Constant][13] /* ty=Tensor[(1386), float32] */, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
  %151 = cast(%var_4605, dtype="float32") /* ty=Tensor[(240), float32] */;
  %152 = reshape(%149, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %153 = reshape(%150, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
  %154 = reshape(%151, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %155 = @func_4116(%152, %153, %154) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
  %156 = cast(meta[relay.Constant][14] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %157 = cast(True /* ty=bool */, dtype="uint16") /* ty=uint16 */;
  %158 = cast(meta[relay.Constant][15] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %159 = reshape(%156, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %160 = reshape(%157, newshape=[]) /* ty=uint16 */;
  %161 = reshape(%158, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %162 = @func_869(%159, %160, %161) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %163 = cast(meta[relay.Constant][16] /* ty=Tensor[(960), uint64] */, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %164 = cast(%var_4671, dtype="float64") /* ty=Tensor[(13), float64] */;
  %165 = cast(True /* ty=bool */, dtype="float64") /* ty=float64 */;
  %166 = cast(%var_4672, dtype="float64") /* ty=Tensor[(56, 22), float64] */;
  %167 = reshape(%163, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %168 = reshape(%164, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %169 = reshape(%165, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %170 = reshape(%166, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %171 = @func_3976(%167, %168, %169, %170) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %172 = %142.1;
  %173 = %148.0;
  %174 = %155.10;
  %175 = %162.0;
  %176 = %171.5;
  (%144, %172, %var_4605, %173, True /* ty=bool */, %174, meta[relay.Constant][13] /* ty=Tensor[(1386), float32] */, %175, meta[relay.Constant][14] /* ty=Tensor[(572), float64] */, meta[relay.Constant][15] /* ty=Tensor[(105), float64] */, %176, meta[relay.Constant][16] /* ty=Tensor[(960), uint64] */, %var_4671, %var_4672)
}

def @func_5066(%var_5053: Tensor[(240), float32]) -> (Tensor[(6, 78), int32], bool, Tensor[(240), float32], Tensor[(13), float64], Tensor[(1, 1232), float64]) {
  %177 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %178 = %177.2;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %180 = acosh(%179) /* ty=Tensor[(6, 78), float32] */;
  %181 = cast(%180, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
  %182 = shape_of(%178, dtype="int32") /* ty=Tensor[(2), int32] */;
  %183 = cast(%178, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %185 = cast(%var_5053, dtype="float32") /* ty=Tensor[(240), float32] */;
  %186 = cast(meta[relay.Constant][17] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %187 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 1232), float64] */, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %188 = reshape(%185, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %189 = reshape(%186, newshape=[13]) /* ty=Tensor[(13), float64] */;
  %190 = reshape(%187, newshape=[56, 22]) /* ty=Tensor[(56, 22), float64] */;
  %191 = @func_4681(%188, %189, %190) /* ty=(Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) */;
  %192 = add(%183, %184) /* ty=Tensor[(6, 78), int32] */;
  %193 = %191.4;
  (%192, %193, %var_5053, meta[relay.Constant][17] /* ty=Tensor[(13), float64] */, meta[relay.Constant][18] /* ty=Tensor[(1, 1232), float64] */)
}

def @func_9061() -> (Tensor[(10), bool],) {
  @func_9059() /* ty=(Tensor[(10), bool],) */
}

def @func_5816() -> Tensor[(468), int32] {
  %195 = fn () -> Tensor[(468), int32] {
    %194 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
    %194.5
  };
  %195() /* ty=Tensor[(468), int32] */
}

def @func_4933(%var_4929: Tensor[(567), float32]) -> (Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) {
  %196 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %197 = cast(%var_4929, dtype="float32") /* ty=Tensor[(567), float32] */;
  %198 = reshape(%197, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %199 = @func_2372(%198) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %200 = %196.1;
  %201 = %199.0;
  (%200, %201, %var_4929)
}

def @func_9106() -> (Tensor[(10), bool],) {
  %202 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %203 = %202.1;
  (%203,)
}

def @func_233(%var_231: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) {
  @func_230(%var_231) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */
}

def @func_5712(%var_5710: int64, %var_5711: Tensor[(1440), int64]) -> (Tensor[(10), bool], Tensor[(81, 1), float32], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
  %216 = fn (%var_5704: int64, %var_5705: Tensor[(1440), int64]) -> (Tensor[(10), bool], Tensor[(81, 1), float32], int64, Tensor[(1440), int64], Tensor[(112), int64]) {
    %204 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
    %205 = cast(%var_5704, dtype="int64") /* ty=int64 */;
    %206 = cast(%var_5705, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %207 = cast(%var_5705, dtype="int64") /* ty=Tensor[(1440), int64] */;
    %208 = cast(meta[relay.Constant][19] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %209 = reshape(%205, newshape=[]) /* ty=int64 */;
    %210 = reshape(%206, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
    %211 = reshape(%207, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), int64] */;
    %212 = reshape(%208, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %213 = @func_3108(%209, %210, %211, %212) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */;
    %214 = %204.0;
    %215 = %213.8;
    (%214, %215, %var_5704, %var_5705, meta[relay.Constant][19] /* ty=Tensor[(112), int64] */)
  };
  %216(%var_5710, %var_5711) /* ty=(Tensor[(10), bool], Tensor[(81, 1), float32], int64, Tensor[(1440), int64], Tensor[(112), int64]) */
}

def @func_3113(%var_3109: int64, %var_3110: Tensor[(12, 8, 15), int64], %var_3111: Tensor[(12, 8, 15), int64], %var_3112: Tensor[(112), int64]) -> (Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) {
  %247 = fn (%var_3064: int64, %var_3065: Tensor[(12, 8, 15), int64], %var_3069: Tensor[(12, 8, 15), int64], %var_3094: Tensor[(112), int64]) -> (Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) {
    %217 = cast(%var_3064, dtype="int64") /* ty=int64 */;
    %218 = cast(%var_3065, dtype="int64") /* ty=Tensor[(12, 8, 15), int64] */;
    %219 = left_shift(%217, %218) /* ty=Tensor[(12, 8, 15), int64] */;
    %220 = cast(%var_3069, dtype="uint16") /* ty=Tensor[(12, 8, 15), uint16] */;
    %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
    %222 = cast(%219, dtype="uint16") /* ty=Tensor[(12, 8, 15), uint16] */;
    %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %224 = cast(meta[relay.Constant][20] /* ty=Tensor[(286, 2), float64] */, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
    %225 = cast(%var_3064, dtype="uint16") /* ty=uint16 */;
    %226 = cast(meta[relay.Constant][21] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %227 = reshape(%224, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
    %228 = reshape(%225, newshape=[]) /* ty=uint16 */;
    %229 = reshape(%226, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %230 = @func_869(%227, %228, %229) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
    %231 = cast(%var_3094, dtype="int64") /* ty=Tensor[(112), int64] */;
    %232 = cast(meta[relay.Constant][22] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %233 = cast(meta[relay.Constant][23] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %234 = cast(meta[relay.Constant][24] /* ty=Tensor[(81, 1), float32] */, dtype="float32") /* ty=Tensor[(81, 1), float32] */;
    %235 = cast(%var_3064, dtype="uint16") /* ty=uint16 */;
    %236 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %237 = reshape(%231, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
    %238 = reshape(%232, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
    %239 = reshape(%233, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
    %240 = reshape(%234, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %241 = reshape(%235, newshape=[]) /* ty=uint16 */;
    %242 = reshape(%236, newshape=[720]) /* ty=Tensor[(720), uint16] */;
    %243 = @func_1325(%237, %238, %239, %240, %241, %242) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
    %244 = bitwise_and(%222, %223) /* ty=Tensor[(12, 8, 15), uint16] */;
    %245 = %230.7;
    %246 = %243.3;
    (%244, %245, meta[relay.Constant][20] /* ty=Tensor[(286, 2), float64] */, meta[relay.Constant][21] /* ty=Tensor[(105), float64] */, %246, %var_3094, meta[relay.Constant][22] /* ty=Tensor[(560), int64] */, meta[relay.Constant][23] /* ty=Tensor[(1008), int64] */, meta[relay.Constant][24] /* ty=Tensor[(81, 1), float32] */, meta[relay.Constant][25] /* ty=Tensor[(720), uint16] */)
  };
  %247(%var_3109, %var_3110, %var_3111, %var_3112) /* ty=(Tensor[(12, 8, 15), uint16], Tensor[(5, 3, 7), float64], Tensor[(286, 2), float64], Tensor[(105), float64], Tensor[(120, 1), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64], Tensor[(81, 1), float32], Tensor[(720), uint16]) */
}

def @func_3608(%var_3607: Tensor[(1, 13), float64]) -> (Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) {
  %256 = fn (%var_3589: Tensor[(1, 13), float64]) -> (Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) {
    %248 = cast(%var_3589, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %249 = cast(meta[relay.Constant][26] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
    %250 = cast(meta[relay.Constant][26] /* ty=Tensor[(100), uint64] */, dtype="uint64") /* ty=Tensor[(100), uint64] */;
    %251 = reshape(%249, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), uint64] */;
    %252 = reshape(%250, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), uint64] */;
    %253 = @func_3369(%251, %252) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) */;
    %254 = sinh(%248) /* ty=Tensor[(1, 13), float64] */;
    %255 = %253.1;
    (%254, %255, meta[relay.Constant][26] /* ty=Tensor[(100), uint64] */)
  };
  %256(%var_3607) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */
}

def @func_6653() -> (Tensor[(1, 10), bool],) {
  %257 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %258 = %257.1;
  (%258,)
}

def @func_4820() -> (Tensor[(10), bool],) {
  @func_4818() /* ty=(Tensor[(10), bool],) */
}

def @func_2372(%var_2349: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) {
  %259 = cast(%var_2349, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %260 = cast(%var_2349, dtype="float32") /* ty=Tensor[(9, 7, 9), float32] */;
  %261 = asin(%259) /* ty=Tensor[(9, 7, 9), float32] */;
  %262 = sigmoid(%260) /* ty=Tensor[(9, 7, 9), float32] */;
  (%261, %262)
}

def @func_9612(%var_9593: Tensor[(960), uint64], %var_9594: Tensor[(13, 1), float64], %var_9595: Tensor[(1), float64], %var_9596: Tensor[(1232), float64]) -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64], Tensor[(105), float64]) {
  %263 = @func_9066() /* ty=(Tensor[(10), bool],) */;
  %264 = cast(%var_9593, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %265 = cast(%var_9594, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %266 = cast(%var_9595, dtype="float64") /* ty=Tensor[(1), float64] */;
  %267 = cast(%var_9596, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %268 = reshape(%264, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %269 = reshape(%265, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %270 = reshape(%266, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %271 = reshape(%267, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %272 = @func_3976(%268, %269, %270, %271) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %273 = cast(%var_9595, dtype="int64") /* ty=Tensor[(1), int64] */;
  %274 = reshape(%273, newshape=[]) /* ty=int64 */;
  %275 = @func_5124(%274) /* ty=(Tensor[(10), bool], Tensor[(105), float64], int64, Tensor[(1440), int64], Tensor[(112), int64]) */;
  %276 = %263.0;
  %277 = %272.1;
  %278 = %275.1;
  (%276, %277, %var_9593, %var_9594, %var_9595, %var_9596, %278)
}

def @func_8072() -> Tensor[(10), bool] {
  %279 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %279.0
}

def @func_8129() -> (Tensor[(6, 78), bool],) {
  %287 = fn () -> (Tensor[(6, 78), bool],) {
    %280 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
    %281 = %280.2;
    %282 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 78), int32] */, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
    %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(2), int32] */;
    %284 = cast(%281, dtype="bool") /* ty=Tensor[(6, 78), bool] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %286 = logical_and(%284, %285) /* ty=Tensor[(6, 78), bool] */;
    (%286,)
  };
  %287() /* ty=(Tensor[(6, 78), bool],) */
}

def @func_4686(%var_4683: Tensor[(240), float32], %var_4684: Tensor[(13), float64], %var_4685: Tensor[(56, 22), float64]) -> (Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) {
  @func_4681(%var_4683, %var_4684, %var_4685) /* ty=(Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) */
}

def @func_5889(%var_5888: Tensor[(112), int64]) -> (Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) {
  %302 = fn (%var_5883: Tensor[(112), int64]) -> (Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) {
    %288 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %289 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), uint8] */, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %290 = cast(meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %291 = cast(%var_5883, dtype="int64") /* ty=Tensor[(112), int64] */;
    %292 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %293 = cast(meta[relay.Constant][31] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %294 = reshape(%289, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), uint8] */;
    %295 = reshape(%290, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %296 = reshape(%291, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %297 = reshape(%292, newshape=[560, 1]) /* ty=Tensor[(560, 1), int64] */;
    %298 = reshape(%293, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %299 = @func_3260(%294, %295, %296, %297, %298) /* ty=(Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) */;
    %300 = %288.0;
    %301 = %299.5;
    (%300, %301, meta[relay.Constant][28] /* ty=Tensor[(420), uint8] */, meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, %var_5883, meta[relay.Constant][30] /* ty=Tensor[(560), int64] */, meta[relay.Constant][31] /* ty=Tensor[(1008), int64] */)
  };
  %302(%var_5888) /* ty=(Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) */
}

def @func_9162(%var_9161: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(15, 6, 8), float32], Tensor[(10), bool]) {
  %309 = fn (%var_9137: Tensor[(15, 6, 8), float64]) -> (Tensor[(15, 6, 8), float64], Tensor[(15, 6, 8), float32], Tensor[(10), bool]) {
    %303 = cast(%var_9137, dtype="float64") /* ty=Tensor[(15, 6, 8), float64] */;
    %304 = cast(%var_9137, dtype="float32") /* ty=Tensor[(15, 6, 8), float32] */;
    %305 = @func_8685() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
    %306 = cos(%303) /* ty=Tensor[(15, 6, 8), float64] */;
    %307 = atan(%304) /* ty=Tensor[(15, 6, 8), float32] */;
    %308 = %305.1;
    (%306, %307, %308)
  };
  %309(%var_9161) /* ty=(Tensor[(15, 6, 8), float64], Tensor[(15, 6, 8), float32], Tensor[(10), bool]) */
}

def @func_8197() -> (bool, Tensor[(1, 10), bool]) {
  %310 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
  %311 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %312 = %310.0;
  %313 = %311.1;
  (%312, %313)
}

def @func_1049(%var_1046: Tensor[(13, 4, 10), float32], %var_1047: Tensor[(13, 4, 10), float32], %var_1048: uint16) -> (Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) {
  %337 = fn (%var_996: Tensor[(13, 4, 10), float32], %var_997: Tensor[(13, 4, 10), float32], %var_1009: uint16) -> (Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) {
    %314 = cast(%var_997, dtype="bool") /* ty=Tensor[(13, 4, 10), bool] */;
    %315 = shape_of(%var_996, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%var_996, dtype="bool") /* ty=Tensor[(13, 4, 10), bool] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %318 = cast(meta[relay.Constant][32] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
    %319 = cast(%var_1009, dtype="uint16") /* ty=uint16 */;
    %320 = cast(meta[relay.Constant][33] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %321 = reshape(%318, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
    %322 = reshape(%319, newshape=[]) /* ty=uint16 */;
    %323 = reshape(%320, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %324 = @func_869(%321, %322, %323) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
    %325 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
    %326 = reshape(%325, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
    %327 = @func_47(%326) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
    %328 = cast(%var_1009, dtype="uint16") /* ty=uint16 */;
    %329 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 60), uint16] */, dtype="uint16") /* ty=Tensor[(12, 60), uint16] */;
    %330 = reshape(%328, newshape=[]) /* ty=uint16 */;
    %331 = reshape(%329, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
    %332 = @func_662(%330, %331) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
    %333 = greater_equal(%316, %317) /* ty=Tensor[(13, 4, 10), bool] */;
    %334 = %324.4;
    %335 = %327.0;
    %336 = %332.1;
    (%333, %334, meta[relay.Constant][32] /* ty=Tensor[(572), float64] */, %var_1009, meta[relay.Constant][33] /* ty=Tensor[(105), float64] */, %335, meta[relay.Constant][34] /* ty=Tensor[(9, 9), float32] */, %336, meta[relay.Constant][35] /* ty=Tensor[(12, 60), uint16] */)
  };
  %337(%var_1046, %var_1047, %var_1048) /* ty=(Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) */
}

def @func_6792(%var_6790: Tensor[(81), float32]) -> (Tensor[(468), int32], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
  @func_6789(%var_6790) /* ty=(Tensor[(468), int32], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */
}

def @func_5631(%var_5603: Tensor[(13), float64], %var_5625: Tensor[(2, 96), int16]) -> (Tensor[(10), bool], Tensor[(1, 13), float64], Tensor[(13), float64], Tensor[(567), bool], Tensor[(16, 2, 6), float64], Tensor[(2, 96), int16]) {
  %338 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %339 = cast(%var_5603, dtype="float64") /* ty=Tensor[(13), float64] */;
  %340 = reshape(%339, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
  %341 = @func_3606(%340) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
  %342 = cast(meta[relay.Constant][36] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %343 = reshape(%342, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %344 = @func_2372(%343) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %345 = %344.1;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(9, 7, 9), bool] */;
  %347 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(567), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %348 = cast(meta[relay.Constant][36] /* ty=Tensor[(567), float32] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?), bool] */;
  %350 = cast(%var_5625, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %351 = cast(%var_5625, dtype="int16") /* ty=Tensor[(2, 96), int16] */;
  %352 = reshape(%350, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %353 = reshape(%351, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %354 = @func_4457(%352, %353) /* ty=(Tensor[(16, 2, 6), float64],) */;
  %355 = %338.0;
  %356 = %341.0;
  %357 = logical_or(%348, %349) /* ty=Tensor[(567), bool] */;
  %358 = %354.0;
  (%355, %356, %var_5603, %357, %358, %var_5625)
}

def @func_3260(%var_3218: Tensor[(12, 5, 7), uint8], %var_3224: Tensor[(105), float64], %var_3254: Tensor[(112), int64], %var_3255: Tensor[(560, 1), int64], %var_3256: Tensor[(1008), int64]) -> (Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) {
  %359 = cast(%var_3218, dtype="uint8") /* ty=Tensor[(12, 5, 7), uint8] */;
  %360 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(12, 5, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 5, 7), uint8] */, dtype="uint8") /* ty=Tensor[(12, 5, 7), uint8] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %363 = cast(%var_3224, dtype="float64") /* ty=Tensor[(105), float64] */;
  %364 = cast(meta[relay.Constant][38] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %365 = reshape(%363, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %366 = reshape(%364, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %367 = @func_164(%365, %366) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %368 = cast(%var_3254, dtype="int64") /* ty=Tensor[(112), int64] */;
  %369 = cast(%var_3255, dtype="int64") /* ty=Tensor[(560, 1), int64] */;
  %370 = cast(%var_3256, dtype="int64") /* ty=Tensor[(1008), int64] */;
  %371 = cast(meta[relay.Constant][38] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
  %372 = cast(meta[relay.Constant][39] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %373 = cast(meta[relay.Constant][40] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %374 = reshape(%368, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
  %375 = reshape(%369, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
  %376 = reshape(%370, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
  %377 = reshape(%371, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %378 = reshape(%372, newshape=[]) /* ty=uint16 */;
  %379 = reshape(%373, newshape=[720]) /* ty=Tensor[(720), uint16] */;
  %380 = @func_1325(%374, %375, %376, %377, %378, %379) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
  %381 = multiply(%361, %362) /* ty=Tensor[(12, 5, 7), uint8] */;
  %382 = %367.0;
  %383 = %380.2;
  (%381, %382, %var_3224, meta[relay.Constant][38] /* ty=Tensor[(81), float32] */, %383, %var_3254, %var_3255, %var_3256, meta[relay.Constant][39] /* ty=uint16 */, meta[relay.Constant][40] /* ty=Tensor[(720), uint16] */)
}

def @func_9037(%var_9029: uint8) -> (Tensor[(1, 4, 5), uint8],) {
  %384 = cast(%var_9029, dtype="uint8") /* ty=uint8 */;
  %385 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 4, 5), uint8] */, dtype="uint8") /* ty=Tensor[(1, 4, 5), uint8] */;
  %386 = maximum(%384, %385) /* ty=Tensor[(1, 4, 5), uint8] */;
  (%386,)
}

def @func_5069(%var_5067: Tensor[(240), float32]) -> (Tensor[(6, 78), int32], bool, Tensor[(240), float32], Tensor[(13), float64], Tensor[(1, 1232), float64]) {
  @func_5066(%var_5067) /* ty=(Tensor[(6, 78), int32], bool, Tensor[(240), float32], Tensor[(13), float64], Tensor[(1, 1232), float64]) */
}

def @func_5334(%var_5321: Tensor[(5, 132), float32]) -> (Tensor[(10), bool], Tensor[(5, 132), bool]) {
  %387 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %388 = cast(%var_5321, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
  %389 = reshape(%388, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %390 = @func_3552(%389) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="bool") /* ty=Tensor[(4, 15, 11), bool] */;
  %393 = shape_of(%var_5321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %394 = cast(%var_5321, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %396 = %387.0;
  %397 = less_equal(%394, %395) /* ty=Tensor[(5, 132), bool] */;
  (%396, %397)
}

def @func_7806(%var_7805: Tensor[(11, 10, 10), float32]) -> (Tensor[(11, 10, 10), float32],) {
  %400 = fn (%var_7783: Tensor[(11, 10, 10), float32]) -> (Tensor[(11, 10, 10), float32],) {
    %398 = cast(%var_7783, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
    %399 = acosh(%398) /* ty=Tensor[(11, 10, 10), float32] */;
    (%399,)
  };
  %400(%var_7805) /* ty=(Tensor[(11, 10, 10), float32],) */
}

def @func_3555(%var_3553: Tensor[(4, 15, 11), float32]) -> (Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) {
  @func_3552(%var_3553) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */
}

def @func_5744() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %405 = fn () -> (Tensor[(10), bool], Tensor[(10), bool]) {
    %401 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %402 = @func_5079() /* ty=(Tensor[(10), bool],) */;
    %403 = %401.0;
    %404 = %402.0;
    (%403, %404)
  };
  %405() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */
}

def @func_869(%var_835: Tensor[(11, 13, 4), float64], %var_839: uint16, %var_848: Tensor[(105), float64]) -> (Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) {
  %406 = cast(%var_835, dtype="float64") /* ty=Tensor[(11, 13, 4), float64] */;
  %407 = cast(%var_839, dtype="uint16") /* ty=uint16 */;
  %408 = cast(meta[relay.Constant][42] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
  %409 = reshape(%407, newshape=[]) /* ty=uint16 */;
  %410 = reshape(%408, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
  %411 = @func_662(%409, %410) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
  %412 = cast(%var_848, dtype="float64") /* ty=Tensor[(105), float64] */;
  %413 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %414 = reshape(%412, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %415 = reshape(%413, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %416 = @func_164(%414, %415) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %417 = cast(%var_848, dtype="float64") /* ty=Tensor[(105), float64] */;
  %418 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %419 = reshape(%417, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %420 = reshape(%418, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %421 = @func_164(%419, %420) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %422 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 9), float32] */, dtype="float32") /* ty=Tensor[(9, 9), float32] */;
  %423 = reshape(%422, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %424 = @func_47(%423) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %425 = sigmoid(%406) /* ty=Tensor[(11, 13, 4), float64] */;
  %426 = %411.2;
  %427 = %416.0;
  %428 = %421.0;
  %429 = %424.2;
  (%425, %426, %var_839, meta[relay.Constant][42] /* ty=Tensor[(720), uint16] */, %427, %var_848, meta[relay.Constant][43] /* ty=Tensor[(9, 9), float32] */, %428, %429)
}

def @func_4855() -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
  %430 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %431 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %432 = %430.0;
  %433 = cast(%432, dtype="bool") /* ty=Tensor[(10), bool] */;
  %434 = reshape(%431, newshape=[]) /* ty=bool */;
  %435 = reshape(%433, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %436 = @func_2789(%434, %435) /* ty=(Tensor[(1, 10), bool],) */;
  %437 = %436.0;
  (%432, %437, False /* ty=bool */)
}

def @func_7008() -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %444 = fn () -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) {
    %438 = @func_6956() /* ty=(Tensor[(10), bool],) */;
    %439 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
    %440 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %441 = %438.0;
    %442 = %439.0;
    %443 = %440.0;
    (%441, %442, %443)
  };
  %444() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */
}

def @func_8561(%var_8557: Tensor[(1, 420), uint8], %var_8558: Tensor[(112), int64], %var_8559: Tensor[(560), int64], %var_8560: Tensor[(660, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(560), float64], Tensor[(1, 420), uint8], Tensor[(112), int64], Tensor[(560), int64], Tensor[(11, 10, 10), float32], Tensor[(1100), float32], Tensor[(10), bool], Tensor[(660, 1), float32], Tensor[(10), bool], Tensor[(1008), float32], Tensor[(6, 78), int32], Tensor[(10), bool]) {
  %474 = fn (%var_8488: Tensor[(1, 420), uint8], %var_8489: Tensor[(112), int64], %var_8491: Tensor[(560), int64], %var_8519: Tensor[(660, 1), float32]) -> (Tensor[(1, 10), bool], Tensor[(560), float64], Tensor[(1, 420), uint8], Tensor[(112), int64], Tensor[(560), int64], Tensor[(11, 10, 10), float32], Tensor[(1100), float32], Tensor[(10), bool], Tensor[(660, 1), float32], Tensor[(10), bool], Tensor[(1008), float32], Tensor[(6, 78), int32], Tensor[(10), bool]) {
    %445 = cast(%var_8488, dtype="uint8") /* ty=Tensor[(1, 420), uint8] */;
    %446 = cast(%var_8489, dtype="int64") /* ty=Tensor[(112), int64] */;
    %447 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %448 = cast(%var_8491, dtype="int64") /* ty=Tensor[(560), int64] */;
    %449 = reshape(%445, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %450 = reshape(%446, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %451 = reshape(%447, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %452 = reshape(%448, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %453 = @func_5025(%449, %450, %451, %452) /* ty=(Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) */;
    %454 = cast(meta[relay.Constant][45] /* ty=Tensor[(1100), float32] */, dtype="float32") /* ty=Tensor[(1100), float32] */;
    %455 = reshape(%454, newshape=[11, 10, 10]) /* ty=Tensor[(11, 10, 10), float32] */;
    %456 = @func_7804(%455) /* ty=(Tensor[(11, 10, 10), float32],) */;
    %457 = cast(%var_8519, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
    %458 = reshape(%457, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
    %459 = @func_5334(%458) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
    %460 = cast(%var_8519, dtype="float32") /* ty=Tensor[(660, 1), float32] */;
    %461 = reshape(%460, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
    %462 = @func_5334(%461) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
    %463 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), int64] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %464 = @func_4735() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */;
    %465 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %466 = @func_7954() /* ty=Tensor[(1, 10), bool] */;
    %467 = %453.7;
    %468 = %456.0;
    %469 = %459.0;
    %470 = %462.0;
    %471 = erf(%463) /* ty=Tensor[(1008), float32] */;
    %472 = %464.2;
    %473 = %465.0;
    (%466, %467, %var_8488, %var_8489, %var_8491, %468, meta[relay.Constant][45] /* ty=Tensor[(1100), float32] */, %469, %var_8519, %470, %471, %472, %473)
  };
  %474(%var_8557, %var_8558, %var_8559, %var_8560) /* ty=(Tensor[(1, 10), bool], Tensor[(560), float64], Tensor[(1, 420), uint8], Tensor[(112), int64], Tensor[(560), int64], Tensor[(11, 10, 10), float32], Tensor[(1100), float32], Tensor[(10), bool], Tensor[(660, 1), float32], Tensor[(10), bool], Tensor[(1008), float32], Tensor[(6, 78), int32], Tensor[(10), bool]) */
}

def @func_7394(%var_7360: Tensor[(960), uint64], %var_7361: Tensor[(13, 1), float64], %var_7363: Tensor[(1232), float64]) -> (Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) {
  %475 = cast(%var_7360, dtype="uint64") /* ty=Tensor[(960), uint64] */;
  %476 = cast(%var_7361, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
  %477 = cast(meta[relay.Constant][46] /* ty=Tensor[(1), float64] */, dtype="float64") /* ty=Tensor[(1), float64] */;
  %478 = cast(%var_7363, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %479 = reshape(%475, newshape=[16, 4, 15]) /* ty=Tensor[(16, 4, 15), uint64] */;
  %480 = reshape(%476, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
  %481 = reshape(%477, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
  %482 = reshape(%478, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
  %483 = @func_3976(%479, %480, %481, %482) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */;
  %484 = @func_5815() /* ty=Tensor[(468), int32] */;
  %485 = %483.5;
  (%484, %485, %var_7360, %var_7361, meta[relay.Constant][46] /* ty=Tensor[(1), float64] */, %var_7363)
}

def @func_9618(%var_9614: Tensor[(960), uint64], %var_9615: Tensor[(13, 1), float64], %var_9616: Tensor[(1), float64], %var_9617: Tensor[(1232), float64]) -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64], Tensor[(105), float64]) {
  @func_9612(%var_9614, %var_9615, %var_9616, %var_9617) /* ty=(Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64], Tensor[(105), float64]) */
}

def @func_49(%var_48: Tensor[(3, 3, 9), float32]) -> (Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) {
  %492 = fn (%var_29: Tensor[(3, 3, 9), float32]) -> (Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) {
    %486 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
    %487 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
    %488 = cast(%var_29, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
    %489 = asin(%486) /* ty=Tensor[(3, 3, 9), float32] */;
    %490 = acosh(%487) /* ty=Tensor[(3, 3, 9), float32] */;
    %491 = rsqrt(%488) /* ty=Tensor[(3, 3, 9), float32] */;
    (%489, %490, %491)
  };
  %492(%var_48) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */
}

def @func_9498(%var_9495: int32, %var_9496: Tensor[(15, 15, 14), int32], %var_9497: Tensor[(1386), float32]) -> (Tensor[(15, 15, 14), int32], Tensor[(3, 3, 9), float32], Tensor[(240), float32], Tensor[(1386), float64]) {
  @func_9493(%var_9495, %var_9496, %var_9497) /* ty=(Tensor[(15, 15, 14), int32], Tensor[(3, 3, 9), float32], Tensor[(240), float32], Tensor[(1386), float64]) */
}

def @func_6352(%var_6350: float32, %var_6351: Tensor[(40, 14), int64]) -> (Tensor[(5, 11, 4), float32], Tensor[(1232), float64], Tensor[(720), uint16], Tensor[(10), bool], Tensor[(1, 720), uint16], Tensor[(40, 14), float64], Tensor[(4, 5, 15), float32], Tensor[(13), float64]) {
  %520 = fn (%var_6295: float32, %var_6329: Tensor[(40, 14), int64]) -> (Tensor[(5, 11, 4), float32], Tensor[(1232), float64], Tensor[(720), uint16], Tensor[(10), bool], Tensor[(1, 720), uint16], Tensor[(40, 14), float64], Tensor[(4, 5, 15), float32], Tensor[(13), float64]) {
    %493 = cast(%var_6295, dtype="float32") /* ty=float32 */;
    %494 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 4), float32] */;
    %495 = cast(%var_6295, dtype="uint16") /* ty=uint16 */;
    %496 = cast(meta[relay.Constant][48] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %497 = reshape(%495, newshape=[]) /* ty=uint16 */;
    %498 = reshape(%496, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
    %499 = @func_662(%497, %498) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
    %500 = @func_5157() /* ty=(Tensor[(10), bool],) */;
    %501 = cast(%var_6295, dtype="float64") /* ty=float64 */;
    %502 = %499.4;
    %503 = cast(%502, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %504 = cast(%var_6329, dtype="int64") /* ty=Tensor[(40, 14), int64] */;
    %505 = cast(meta[relay.Constant][48] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %506 = reshape(%501, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
    %507 = reshape(%503, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %508 = reshape(%504, newshape=[2, 280]) /* ty=Tensor[(2, 280), int64] */;
    %509 = reshape(%505, newshape=[1, 720]) /* ty=Tensor[(1, 720), uint16] */;
    %510 = @func_2124(%506, %507, %508, %509) /* ty=(Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) */;
    %511 = cast(%var_6329, dtype="float64") /* ty=Tensor[(40, 14), float64] */;
    %512 = cast(meta[relay.Constant][49] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %513 = reshape(%512, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %514 = @func_3606(%513) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %515 = floor_divide(%493, %494) /* ty=Tensor[(5, 11, 4), float32] */;
    %516 = %500.0;
    %517 = %510.9;
    %518 = sqrt(%511) /* ty=Tensor[(40, 14), float64] */;
    %519 = %514.1;
    (%515, %502, meta[relay.Constant][48] /* ty=Tensor[(720), uint16] */, %516, %517, %518, %519, meta[relay.Constant][49] /* ty=Tensor[(13), float64] */)
  };
  %520(%var_6350, %var_6351) /* ty=(Tensor[(5, 11, 4), float32], Tensor[(1232), float64], Tensor[(720), uint16], Tensor[(10), bool], Tensor[(1, 720), uint16], Tensor[(40, 14), float64], Tensor[(4, 5, 15), float32], Tensor[(13), float64]) */
}

def @func_10125() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %525 = fn () -> (Tensor[(10), bool], Tensor[(10), bool]) {
    %521 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
    %522 = @func_6912() /* ty=(Tensor[(10), bool],) */;
    %523 = %521.0;
    %524 = %522.0;
    (%523, %524)
  };
  %525() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */
}

def @func_2519(%var_2516: Tensor[(4, 5, 15), float32]) -> (Tensor[(4, 5, 15), float32],) {
  %526 = cast(%var_2516, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
  %527 = asinh(%526) /* ty=Tensor[(4, 5, 15), float32] */;
  (%527,)
}

def @func_8100(%var_8093: bool) -> (Tensor[(3, 6, 6), bool],) {
  %528 = cast(%var_8093, dtype="bool") /* ty=bool */;
  %529 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(3, 6, 6), bool] */;
  %530 = logical_and(%528, %529) /* ty=Tensor[(3, 6, 6), bool] */;
  (%530,)
}

def @func_3372(%var_3370: Tensor[(5, 4, 5), uint64], %var_3371: Tensor[(5, 4, 5), uint64]) -> (Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) {
  %546 = fn (%var_3348: Tensor[(5, 4, 5), uint64], %var_3349: Tensor[(5, 4, 5), uint64]) -> (Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) {
    %531 = cast(%var_3349, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
    %532 = shape_of(%var_3348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %533 = cast(%var_3348, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
    %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %535 = cast(meta[relay.Constant][51] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %536 = reshape(%535, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), float32] */;
    %537 = @func_2519(%536) /* ty=(Tensor[(4, 5, 15), float32],) */;
    %538 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %539 = cast(meta[relay.Constant][52] /* ty=Tensor[(10), bool] */, dtype="bool") /* ty=Tensor[(10), bool] */;
    %540 = reshape(%538, newshape=[]) /* ty=bool */;
    %541 = reshape(%539, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
    %542 = @func_2789(%540, %541) /* ty=(Tensor[(1, 10), bool],) */;
    %543 = less_equal(%533, %534) /* ty=Tensor[(5, 4, 5), bool] */;
    %544 = %537.0;
    %545 = %542.0;
    (%543, %544, meta[relay.Constant][51] /* ty=Tensor[(300), float32] */, %545, True /* ty=bool */, meta[relay.Constant][52] /* ty=Tensor[(10), bool] */)
  };
  %546(%var_3370, %var_3371) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(1, 10), bool], bool, Tensor[(10), bool]) */
}

def @func_5573(%var_5518: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(10), bool]) {
  %547 = cast(%var_5518, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
  %548 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
  %549 = atanh(%547) /* ty=Tensor[(4, 13, 1), float64] */;
  %550 = %548.0;
  (%549, %550)
}

def @func_8648() -> Tensor[(10), bool] {
  %552 = fn () -> Tensor[(10), bool] {
    %551 = @func_7899() /* ty=(Tensor[(15, 4, 4), int64], Tensor[(10), bool]) */;
    %551.1
  };
  %552() /* ty=Tensor[(10), bool] */
}

def @func_8628(%var_8593: float64, %var_8594: Tensor[(10, 3, 10), float64], %var_8626: Tensor[(660), float32]) -> (Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  %553 = cast(%var_8593, dtype="float64") /* ty=float64 */;
  %554 = cast(%var_8594, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %555 = cast(%var_8594, dtype="float64") /* ty=Tensor[(10, 3, 10), float64] */;
  %556 = @func_6912() /* ty=(Tensor[(10), bool],) */;
  %557 = cast(%var_8626, dtype="float32") /* ty=Tensor[(660), float32] */;
  %558 = cast(%var_8626, dtype="float32") /* ty=Tensor[(660), float32] */;
  %559 = reshape(%557, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %560 = reshape(%558, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %561 = @func_6580(%559, %560) /* ty=(Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) */;
  %562 = divide(%553, %554) /* ty=Tensor[(10, 3, 10), float64] */;
  %563 = sinh(%555) /* ty=Tensor[(10, 3, 10), float64] */;
  %564 = %556.0;
  %565 = %561.2;
  (%562, %563, %564, %565, %var_8626)
}

def @func_7399(%var_7396: Tensor[(960), uint64], %var_7397: Tensor[(13, 1), float64], %var_7398: Tensor[(1232), float64]) -> (Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) {
  @func_7394(%var_7396, %var_7397, %var_7398) /* ty=(Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) */
}

def @func_7587() -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(468), int32], Tensor[(1, 960), uint64], Tensor[(13), float64], Tensor[(1232), float64]) {
  %580 = fn () -> (Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(468), int32], Tensor[(1, 960), uint64], Tensor[(13), float64], Tensor[(1232), float64]) {
    %566 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %567 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %568 = reshape(%567, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), float32] */;
    %569 = @func_2519(%568) /* ty=(Tensor[(4, 5, 15), float32],) */;
    %570 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 960), uint64] */, dtype="uint64") /* ty=Tensor[(1, 960), uint64] */;
    %571 = cast(meta[relay.Constant][55] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %572 = cast(meta[relay.Constant][56] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %573 = reshape(%570, newshape=[960]) /* ty=Tensor[(960), uint64] */;
    %574 = reshape(%571, newshape=[13, 1]) /* ty=Tensor[(13, 1), float64] */;
    %575 = reshape(%572, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %576 = @func_7394(%573, %574, %575) /* ty=(Tensor[(468), int32], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13, 1), float64], Tensor[(1), float64], Tensor[(1232), float64]) */;
    %577 = %566.0;
    %578 = %569.0;
    %579 = %576.0;
    (%577, %578, meta[relay.Constant][53] /* ty=Tensor[(300), float32] */, %579, meta[relay.Constant][54] /* ty=Tensor[(1, 960), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(13), float64] */, meta[relay.Constant][56] /* ty=Tensor[(1232), float64] */)
  };
  %580() /* ty=(Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(300), float32], Tensor[(468), int32], Tensor[(1, 960), uint64], Tensor[(13), float64], Tensor[(1232), float64]) */
}

def @func_8834() -> Tensor[(10), bool] {
  %581 = @func_7279() /* ty=(Tensor[(10), bool],) */;
  %581.0
}

def @func_9839() -> Tensor[(10), bool] {
  %583 = fn () -> Tensor[(10), bool] {
    %582 = @func_9251() /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool]) */;
    %582.1
  };
  %583() /* ty=Tensor[(10), bool] */
}

def @func_299(%var_296: Tensor[(5, 6, 4), float64], %var_297: Tensor[(5, 6, 4), float64], %var_298: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) {
  @func_294(%var_296, %var_297, %var_298) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */
}

def @func_8808(%var_8806: Tensor[(720), uint16]) -> (Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], Tensor[(720), uint16], Tensor[(240), float32], Tensor[(468), int32]) {
  @func_8805(%var_8806) /* ty=(Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], Tensor[(720), uint16], Tensor[(240), float32], Tensor[(468), int32]) */
}

def @func_9771(%var_9769: Tensor[(2, 15, 16), bool], %var_9770: Tensor[(2, 15, 16), bool]) -> Tensor[(2, 15, 16), bool] {
  @func_9767(%var_9769, %var_9770) /* ty=Tensor[(2, 15, 16), bool] */
}

def @func_770(%var_769: Tensor[(6, 10, 7), float64]) -> (Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) {
  %598 = fn (%var_725: Tensor[(6, 10, 7), float64]) -> (Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) {
    %584 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 7), float64] */;
    %585 = shape_of(%var_725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%var_725, dtype="float64") /* ty=Tensor[(6, 10, 7), float64] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %588 = multiply(%586, %587) /* ty=Tensor[(6, 10, 7), float64] */;
    %589 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 10, 7), float64] */, dtype="int64") /* ty=Tensor[(6, 10, 7), int64] */;
    %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %591 = cast(%588, dtype="int64") /* ty=Tensor[(6, 10, 7), int64] */;
    %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %593 = cast(meta[relay.Constant][58] /* ty=Tensor[(56, 22), float64] */, dtype="float64") /* ty=Tensor[(56, 22), float64] */;
    %594 = reshape(%593, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
    %595 = @func_230(%594) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
    %596 = right_shift(%591, %592) /* ty=Tensor[(6, 10, 7), int64] */;
    %597 = %595.0;
    (%596, %597, meta[relay.Constant][58] /* ty=Tensor[(56, 22), float64] */)
  };
  %598(%var_769) /* ty=(Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) */
}

def @func_9874() -> (Tensor[(10), bool],) {
  @func_9872() /* ty=(Tensor[(10), bool],) */
}

def @func_6655() -> (Tensor[(1, 10), bool],) {
  @func_6653() /* ty=(Tensor[(1, 10), bool],) */
}

def @func_3981(%var_3977: Tensor[(16, 4, 15), uint64], %var_3978: Tensor[(13, 1), float64], %var_3979: Tensor[(1, 1), float64], %var_3980: Tensor[(1232), float64]) -> (Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) {
  %628 = fn (%var_3935: Tensor[(16, 4, 15), uint64], %var_3952: Tensor[(13, 1), float64], %var_3962: Tensor[(1, 1), float64], %var_3963: Tensor[(1232), float64]) -> (Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) {
    %599 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="uint64") /* ty=Tensor[(16, 4, 15), uint64] */;
    %600 = shape_of(%var_3935, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%var_3935, dtype="uint64") /* ty=Tensor[(16, 4, 15), uint64] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %603 = bitwise_xor(%601, %602) /* ty=Tensor[(16, 4, 15), uint64] */;
    %604 = cast(%603, dtype="float64") /* ty=Tensor[(16, 4, 15), float64] */;
    %605 = cast(%var_3952, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
    %606 = reshape(%605, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %607 = @func_3606(%606) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %608 = cast(meta[relay.Constant][60] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(16, 4, 15), int32] */;
    %609 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %610 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(16, 4, 15), int32] */;
    %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %612 = cast(%var_3962, dtype="float64") /* ty=Tensor[(1, 1), float64] */;
    %613 = cast(%var_3963, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %614 = cast(meta[relay.Constant][61] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %615 = cast(meta[relay.Constant][62] /* ty=Tensor[(720), uint16] */, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %616 = reshape(%612, newshape=[1, 1]) /* ty=Tensor[(1, 1), float64] */;
    %617 = reshape(%613, newshape=[1232]) /* ty=Tensor[(1232), float64] */;
    %618 = reshape(%614, newshape=[2, 280]) /* ty=Tensor[(2, 280), int64] */;
    %619 = reshape(%615, newshape=[1, 720]) /* ty=Tensor[(1, 720), uint16] */;
    %620 = @func_2124(%616, %617, %618, %619) /* ty=(Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) */;
    %621 = cast(%var_3952, dtype="int64") /* ty=Tensor[(13, 1), int64] */;
    %622 = cast(%var_3963, dtype="int64") /* ty=Tensor[(1232), int64] */;
    %623 = exp(%604) /* ty=Tensor[(16, 4, 15), float64] */;
    %624 = %607.1;
    %625 = right_shift(%610, %611) /* ty=Tensor[(16, 4, 15), int32] */;
    %626 = %620.1;
    %627 = subtract(%621, %622) /* ty=Tensor[(13, 1232), int64] */;
    (%623, %624, %625, %626, %var_3962, meta[relay.Constant][61] /* ty=Tensor[(560), int64] */, meta[relay.Constant][62] /* ty=Tensor[(720), uint16] */, %627)
  };
  %628(%var_3977, %var_3978, %var_3979, %var_3980) /* ty=(Tensor[(16, 4, 15), float64], Tensor[(4, 5, 15), float32], Tensor[(16, 4, 15), int32], Tensor[(3, 3, 9), float32], Tensor[(1, 1), float64], Tensor[(560), int64], Tensor[(720), uint16], Tensor[(13, 1232), int64]) */
}

def @func_4457(%var_4423: Tensor[(16, 2, 6), int16], %var_4424: Tensor[(16, 2, 6), int16]) -> (Tensor[(16, 2, 6), float64],) {
  %629 = cast(%var_4424, dtype="bool") /* ty=Tensor[(16, 2, 6), bool] */;
  %630 = shape_of(%var_4423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%var_4423, dtype="bool") /* ty=Tensor[(16, 2, 6), bool] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %633 = less_equal(%631, %632) /* ty=Tensor[(16, 2, 6), bool] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(16, 2, 6), float64] */;
  %635 = cosh(%634) /* ty=Tensor[(16, 2, 6), float64] */;
  (%635,)
}

def @func_9252() -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %639 = fn () -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
    %636 = @func_8197() /* ty=(bool, Tensor[(1, 10), bool]) */;
    %637 = %636.1;
    %638 = @func_7254() /* ty=Tensor[(10), bool] */;
    (%637, %638)
  };
  %639() /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool]) */
}

def @func_874(%var_871: Tensor[(11, 13, 4), float64], %var_872: uint16, %var_873: Tensor[(105), float64]) -> (Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) {
  @func_869(%var_871, %var_872, %var_873) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */
}

def @func_9493(%var_9436: int32, %var_9437: Tensor[(15, 15, 14), int32], %var_9454: Tensor[(1386), float32]) -> (Tensor[(15, 15, 14), int32], Tensor[(3, 3, 9), float32], Tensor[(240), float32], Tensor[(1386), float64]) {
  %640 = cast(%var_9436, dtype="int32") /* ty=int32 */;
  %641 = cast(%var_9437, dtype="int32") /* ty=Tensor[(15, 15, 14), int32] */;
  %642 = cast(%var_9454, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %643 = cast(%var_9454, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
  %644 = cast(meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %645 = reshape(%642, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
  %646 = reshape(%643, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
  %647 = reshape(%644, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %648 = @func_4116(%645, %646, %647) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
  %649 = cast(%var_9454, dtype="float64") /* ty=Tensor[(1386), float64] */;
  %650 = cast(%var_9436, dtype="float64") /* ty=float64 */;
  %651 = right_shift(%640, %641) /* ty=Tensor[(15, 15, 14), int32] */;
  %652 = %648.6;
  %653 = floor_divide(%649, %650) /* ty=Tensor[(1386), float64] */;
  (%651, %652, meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, %653)
}

def @func_6580(%var_6538: Tensor[(660), float32], %var_6542: Tensor[(4, 15, 11), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) {
  %654 = cast(%var_6538, dtype="float32") /* ty=Tensor[(660), float32] */;
  %655 = reshape(%654, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
  %656 = @func_3552(%655) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
  %657 = %656.0;
  %658 = cast(%var_6542, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %662 = cast(%657, dtype="float64") /* ty=Tensor[(4, 15, 11), float64] */;
  %663 = shape_of(%var_6542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%var_6542, dtype="float64") /* ty=Tensor[(4, 15, 11), float64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %666 = cast(%657, dtype="float32") /* ty=Tensor[(4, 15, 11), float32] */;
  %667 = reshape(%666, newshape=[5, 132]) /* ty=Tensor[(5, 132), float32] */;
  %668 = @func_5334(%667) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */;
  %669 = @func_5413() /* ty=Tensor[(10), bool] */;
  %670 = subtract(%660, %661) /* ty=Tensor[(4, 15, 11), float32] */;
  %671 = mod(%664, %665) /* ty=Tensor[(4, 15, 11), float64] */;
  %672 = %668.1;
  (%669, %var_6538, %670, %671, %672)
}

def @func_4746() -> (Tensor[(10), bool],) {
  @func_4744() /* ty=(Tensor[(10), bool],) */
}

def @func_9275() -> (Tensor[(10), bool],) {
  @func_9273() /* ty=(Tensor[(10), bool],) */
}

def @func_8423() -> (Tensor[(10), bool], Tensor[(567), float32], Tensor[(567), float32]) {
  @func_8421() /* ty=(Tensor[(10), bool], Tensor[(567), float32], Tensor[(567), float32]) */
}

def @func_8135() -> Tensor[(10), bool] {
  %673 = fn () -> Tensor[(10), bool] {
    @func_8072() /* ty=Tensor[(10), bool] */
  };
  %673() /* ty=Tensor[(10), bool] */
}

def @func_5030(%var_5026: Tensor[(420), uint8], %var_5027: Tensor[(112), int64], %var_5028: Tensor[(1008), int64], %var_5029: Tensor[(560), int64]) -> (Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) {
  %698 = fn (%var_4982: Tensor[(420), uint8], %var_4984: Tensor[(112), int64], %var_4986: Tensor[(1008), int64], %var_5005: Tensor[(560), int64]) -> (Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) {
    %674 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %675 = cast(%var_4982, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %676 = cast(meta[relay.Constant][64] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %677 = cast(%var_4984, dtype="int64") /* ty=Tensor[(112), int64] */;
    %678 = cast(meta[relay.Constant][65] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %679 = cast(%var_4986, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %680 = reshape(%675, newshape=[12, 5, 7]) /* ty=Tensor[(12, 5, 7), uint8] */;
    %681 = reshape(%676, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %682 = reshape(%677, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %683 = reshape(%678, newshape=[560, 1]) /* ty=Tensor[(560, 1), int64] */;
    %684 = reshape(%679, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %685 = @func_3260(%680, %681, %682, %683, %684) /* ty=(Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) */;
    %686 = cast(%var_5005, dtype="int64") /* ty=Tensor[(560), int64] */;
    %687 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(560), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %688 = cast(meta[relay.Constant][65] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?), int64] */;
    %690 = cast(meta[relay.Constant][65] /* ty=Tensor[(560), int64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %691 = shape_of(%var_5005, dtype="int32") /* ty=Tensor[(1), int32] */;
    %692 = cast(%var_5005, dtype="float64") /* ty=Tensor[(560), float64] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?), float64] */;
    %694 = %674.0;
    %695 = %685.1;
    %696 = maximum(%688, %689) /* ty=Tensor[(560), int64] */;
    %697 = floor_divide(%692, %693) /* ty=Tensor[(560), float64] */;
    (%694, %695, %var_4982, meta[relay.Constant][64] /* ty=Tensor[(105), float64] */, %var_4984, %var_4986, %696, %697)
  };
  %698(%var_5026, %var_5027, %var_5028, %var_5029) /* ty=(Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) */
}

def @func_4783() -> (Tensor[(10), bool],) {
  @func_4781() /* ty=(Tensor[(10), bool],) */
}

def @func_5337(%var_5335: Tensor[(5, 132), float32]) -> (Tensor[(10), bool], Tensor[(5, 132), bool]) {
  @func_5334(%var_5335) /* ty=(Tensor[(10), bool], Tensor[(5, 132), bool]) */
}

def @func_6197() -> Tensor[(10), bool] {
  %699 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %699.0
}

def @func_7236() -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
  @func_7234() /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool]) */
}

def @func_9806(%var_9804: Tensor[(660), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(660), float32]) {
  @func_9803(%var_9804) /* ty=(Tensor[(10), bool], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(660), float32]) */
}

def @func_6199() -> Tensor[(10), bool] {
  @func_6197() /* ty=Tensor[(10), bool] */
}

def @func_7305(%var_7299: Tensor[(420), float64], %var_7302: Tensor[(1386), float32], %var_7303: Tensor[(240), float32]) -> (Tensor[(10), bool], Tensor[(1386), float32], Tensor[(420), float64], Tensor[(660), float32], Tensor[(192), int16], Tensor[(1386), float32], Tensor[(240), float32]) {
  %700 = cast(%var_7299, dtype="float64") /* ty=Tensor[(420), float64] */;
  %701 = cast(meta[relay.Constant][66] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
  %702 = cast(meta[relay.Constant][67] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %703 = cast(%var_7302, dtype="float32") /* ty=Tensor[(1386), float32] */;
  %704 = cast(%var_7303, dtype="float32") /* ty=Tensor[(240), float32] */;
  %705 = reshape(%700, newshape=[210, 2]) /* ty=Tensor[(210, 2), float64] */;
  %706 = reshape(%701, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %707 = reshape(%702, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %708 = reshape(%703, newshape=[1386]) /* ty=Tensor[(1386), float32] */;
  %709 = reshape(%704, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %710 = @func_5251(%705, %706, %707, %708, %709) /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) */;
  %711 = @func_7254() /* ty=Tensor[(10), bool] */;
  %712 = %710.11;
  (%711, %712, %var_7299, meta[relay.Constant][66] /* ty=Tensor[(660), float32] */, meta[relay.Constant][67] /* ty=Tensor[(192), int16] */, %var_7302, %var_7303)
}

def @func_7900() -> (Tensor[(15, 4, 4), int64], Tensor[(10), bool]) {
  %717 = fn () -> (Tensor[(15, 4, 4), int64], Tensor[(10), bool]) {
    %713 = @func_7129() /* ty=(Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) */;
    %714 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %715 = %713.3;
    %716 = %714.0;
    (%715, %716)
  };
  %717() /* ty=(Tensor[(15, 4, 4), int64], Tensor[(10), bool]) */
}

def @func_6293(%var_6290: Tensor[(572), float64], %var_6291: uint16, %var_6292: Tensor[(105), float64]) -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) {
  %734 = fn (%var_6282: Tensor[(572), float64], %var_6283: uint16, %var_6284: Tensor[(105), float64]) -> (Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) {
    %718 = @func_6254() /* ty=(Tensor[(10), bool],) */;
    %719 = cast(meta[relay.Constant][68] /* ty=Tensor[(660), float32] */, dtype="float32") /* ty=Tensor[(660), float32] */;
    %720 = reshape(%719, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %721 = @func_3552(%720) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
    %722 = cast(%var_6282, dtype="float64") /* ty=Tensor[(572), float64] */;
    %723 = cast(%var_6283, dtype="uint16") /* ty=uint16 */;
    %724 = cast(%var_6284, dtype="float64") /* ty=Tensor[(105), float64] */;
    %725 = reshape(%722, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
    %726 = reshape(%723, newshape=[]) /* ty=uint16 */;
    %727 = reshape(%724, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %728 = @func_869(%725, %726, %727) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
    %729 = cast(%var_6282, dtype="float32") /* ty=Tensor[(572), float32] */;
    %730 = %718.0;
    %731 = %721.1;
    %732 = %728.8;
    %733 = log2(%729) /* ty=Tensor[(572), float32] */;
    (%730, %731, meta[relay.Constant][68] /* ty=Tensor[(660), float32] */, %732, %var_6283, %var_6284, %733)
  };
  %734(%var_6290, %var_6291, %var_6292) /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) */
}

def @func_4120(%var_4117: Tensor[(9, 11, 14), float32], %var_4118: Tensor[(9, 11, 14), uint16], %var_4119: Tensor[(240), float32]) -> (uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) {
  %776 = fn (%var_4012: Tensor[(9, 11, 14), float32], %var_4037: Tensor[(9, 11, 14), uint16], %var_4070: Tensor[(240), float32]) -> (uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) {
    %735 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 572), float64] */, dtype="float64") /* ty=Tensor[(1, 572), float64] */;
    %736 = cast(meta[relay.Constant][70] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %737 = cast(meta[relay.Constant][71] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %738 = reshape(%735, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
    %739 = reshape(%736, newshape=[]) /* ty=uint16 */;
    %740 = reshape(%737, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %741 = @func_869(%738, %739, %740) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
    %742 = cast(%var_4070, dtype="float32") /* ty=Tensor[(240), float32] */;
    %743 = cast(%var_4070, dtype="float32") /* ty=Tensor[(240), float32] */;
    %744 = reshape(%742, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %745 = reshape(%743, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %746 = @func_3697(%744, %745) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
    %747 = cast(meta[relay.Constant][72] /* ty=Tensor[(81), float32] */, dtype="float32") /* ty=Tensor[(81), float32] */;
    %748 = reshape(%747, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
    %749 = @func_47(%748) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
    %750 = cast(meta[relay.Constant][73] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %751 = reshape(%750, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
    %752 = @func_230(%751) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
    %753 = cast(%var_4012, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %754 = sigmoid(%753) /* ty=Tensor[(9, 11, 14), float32] */;
    %755 = cast(%754, dtype="uint16") /* ty=Tensor[(9, 11, 14), uint16] */;
    %756 = shape_of(%var_4012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(%var_4012, dtype="uint16") /* ty=Tensor[(9, 11, 14), uint16] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %759 = bitwise_or(%757, %758) /* ty=Tensor[(9, 11, 14), uint16] */;
    %760 = cast(%var_4037, dtype="int8") /* ty=Tensor[(9, 11, 14), int8] */;
    %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
    %762 = cast(%759, dtype="int8") /* ty=Tensor[(9, 11, 14), int8] */;
    %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %764 = maximum(%762, %763) /* ty=Tensor[(9, 11, 14), int8] */;
    %765 = cast(%759, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%764, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %769 = mod(%767, %768) /* ty=Tensor[(9, 11, 14), float32] */;
    %770 = cast(%769, dtype="float32") /* ty=Tensor[(9, 11, 14), float32] */;
    %771 = %741.2;
    %772 = %746.0;
    %773 = %749.1;
    %774 = %752.0;
    %775 = erf(%770) /* ty=Tensor[(9, 11, 14), float32] */;
    (%771, meta[relay.Constant][69] /* ty=Tensor[(1, 572), float64] */, meta[relay.Constant][70] /* ty=uint16 */, meta[relay.Constant][71] /* ty=Tensor[(21, 5), float64] */, %772, %var_4070, %773, meta[relay.Constant][72] /* ty=Tensor[(81), float32] */, %774, meta[relay.Constant][73] /* ty=Tensor[(1232), float64] */, %775)
  };
  %776(%var_4117, %var_4118, %var_4119) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */
}

def @func_4857() -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool) {
  @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */
}

def @func_1483(%var_1482: Tensor[(6, 6, 13), int32]) -> Tensor[(6, 6, 13), bool] {
  %786 = fn (%var_1471: Tensor[(6, 6, 13), int32]) -> Tensor[(6, 6, 13), bool] {
    %777 = cast(%var_1471, dtype="int32") /* ty=Tensor[(6, 6, 13), int32] */;
    %778 = shape_of(meta[relay.Constant][74] /* ty=Tensor[(6, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %779 = cast(meta[relay.Constant][74] /* ty=Tensor[(6, 6, 13), int32] */, dtype="int32") /* ty=Tensor[(6, 6, 13), int32] */;
    %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %781 = left_shift(%779, %780) /* ty=Tensor[(6, 6, 13), int32] */;
    %782 = cast(meta[relay.Constant][75] /* ty=Tensor[(6, 6, 13), int32] */, dtype="bool") /* ty=Tensor[(6, 6, 13), bool] */;
    %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%781, dtype="bool") /* ty=Tensor[(6, 6, 13), bool] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%784, %785) /* ty=Tensor[(6, 6, 13), bool] */
  };
  %786(%var_1482) /* ty=Tensor[(6, 6, 13), bool] */
}

def @main(%var_10261: Tensor[(2, 13, 13), int64], %var_10262: Tensor[(2, 13, 13), int64]) -> (Tensor[(2, 13, 13), bool],) {
  %787 = cast(%var_10262, dtype="bool") /* ty=Tensor[(2, 13, 13), bool] */;
  %788 = shape_of(%var_10261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_10261, dtype="bool") /* ty=Tensor[(2, 13, 13), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = less_equal(%789, %790) /* ty=Tensor[(2, 13, 13), bool] */;
  (%791,)
}

def @func_3697(%var_3675: Tensor[(15, 4, 4), float32], %var_3686: Tensor[(15, 4, 4), float32]) -> (Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) {
  %792 = cast(%var_3675, dtype="float32") /* ty=Tensor[(15, 4, 4), float32] */;
  %793 = acosh(%792) /* ty=Tensor[(15, 4, 4), float32] */;
  %794 = cast(%var_3686, dtype="uint64") /* ty=Tensor[(15, 4, 4), uint64] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="uint64") /* ty=Tensor[(15, 4, 4), uint64] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %798 = cast(%793, dtype="float64") /* ty=Tensor[(15, 4, 4), float64] */;
  %799 = sqrt(%798) /* ty=Tensor[(15, 4, 4), float64] */;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(15, 4, 4), float64] */;
  %801 = add(%796, %797) /* ty=Tensor[(15, 4, 4), uint64] */;
  %802 = cos(%800) /* ty=Tensor[(15, 4, 4), float64] */;
  (%801, %802)
}

def @func_6887(%var_6884: Tensor[(720), uint16], %var_6885: Tensor[(240), float32], %var_6886: Tensor[(234, 2), int32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) {
  %829 = fn (%var_6855: Tensor[(720), uint16], %var_6868: Tensor[(240), float32], %var_6876: Tensor[(234, 2), int32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) {
    %803 = @func_5486() /* ty=(Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) */;
    %804 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
    %805 = cast(meta[relay.Constant][76] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %806 = cast(%var_6855, dtype="uint16") /* ty=Tensor[(720), uint16] */;
    %807 = reshape(%805, newshape=[]) /* ty=uint16 */;
    %808 = reshape(%806, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
    %809 = @func_662(%807, %808) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
    %810 = @func_4781() /* ty=(Tensor[(10), bool],) */;
    %811 = cast(%var_6868, dtype="float32") /* ty=Tensor[(240), float32] */;
    %812 = cast(%var_6868, dtype="float32") /* ty=Tensor[(240), float32] */;
    %813 = reshape(%811, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %814 = reshape(%812, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %815 = @func_3697(%813, %814) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
    %816 = cast(%var_6876, dtype="int32") /* ty=Tensor[(234, 2), int32] */;
    %817 = reshape(%816, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
    %818 = @func_1481(%817) /* ty=Tensor[(6, 6, 13), bool] */;
    %819 = cast(%818, dtype="uint32") /* ty=Tensor[(6, 6, 13), uint32] */;
    %820 = shape_of(%var_6876, dtype="int32") /* ty=Tensor[(2), int32] */;
    %821 = cast(%var_6876, dtype="uint32") /* ty=Tensor[(234, 2), uint32] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %823 = %803.1;
    %824 = %804.0;
    %825 = %809.0;
    %826 = %810.0;
    %827 = %815.0;
    %828 = right_shift(%821, %822) /* ty=Tensor[(234, 2), uint32] */;
    (%823, %824, %825, meta[relay.Constant][76] /* ty=uint16 */, %var_6855, %826, %827, %var_6868, %828)
  };
  %829(%var_6884, %var_6885, %var_6886) /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(5, 6, 4), int16], uint16, Tensor[(720), uint16], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(234, 2), uint32]) */
}

def @func_8459() -> Tensor[(1, 10), bool] {
  %830 = @func_6653() /* ty=(Tensor[(1, 10), bool],) */;
  %830.0
}

def @func_9573() -> (Tensor[(10), bool],) {
  %832 = fn () -> (Tensor[(10), bool],) {
    %831 = @func_7254() /* ty=Tensor[(10), bool] */;
    (%831,)
  };
  %832() /* ty=(Tensor[(10), bool],) */
}

def @func_6455(%var_6449: Tensor[(1, 105), float64], %var_6450: Tensor[(81), float32]) -> (Tensor[(10), bool], Tensor[(1, 10), bool], bool, Tensor[(81), float32], Tensor[(1, 105), float64], Tensor[(81), float32]) {
  %833 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %834 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %835 = %833.0;
  %836 = cast(%835, dtype="bool") /* ty=Tensor[(10), bool] */;
  %837 = reshape(%834, newshape=[]) /* ty=bool */;
  %838 = reshape(%836, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %839 = @func_2789(%837, %838) /* ty=(Tensor[(1, 10), bool],) */;
  %840 = cast(%var_6449, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %841 = cast(%var_6450, dtype="float32") /* ty=Tensor[(81), float32] */;
  %842 = reshape(%840, newshape=[5, 3, 7]) /* ty=Tensor[(5, 3, 7), float64] */;
  %843 = reshape(%841, newshape=[81]) /* ty=Tensor[(81), float32] */;
  %844 = @func_164(%842, %843) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */;
  %845 = %839.0;
  %846 = %844.2;
  (%835, %845, True /* ty=bool */, %846, %var_6449, %var_6450)
}

def @func_6912() -> (Tensor[(10), bool],) {
  %847 = @func_5157() /* ty=(Tensor[(10), bool],) */;
  %848 = %847.0;
  (%848,)
}

def @func_6044(%var_6039: Tensor[(8, 7, 1), float32], %var_6040: Tensor[(8, 7, 1), uint32], %var_6041: Tensor[(8, 7, 100), int32], %var_6042: Tensor[(240), float32], %var_6043: Tensor[(1232), float64]) -> (Tensor[(1, 13), float64], Tensor[(8, 7, 10), uint16], Tensor[(8, 7, ?), bool], Tensor[(8, 7, 100), float64], Tensor[(105), float64], Tensor[(240), float32], Tensor[(1232), float64]) {
  %890 = fn (%var_5896: Tensor[(8, 7, 1), float32], %var_5975: Tensor[(8, 7, 1), uint32], %var_5997: Tensor[(8, 7, 100), int32], %var_6006: Tensor[(240), float32], %var_6007: Tensor[(1232), float64]) -> (Tensor[(1, 13), float64], Tensor[(8, 7, 10), uint16], Tensor[(8, 7, ?), bool], Tensor[(8, 7, 100), float64], Tensor[(105), float64], Tensor[(240), float32], Tensor[(1232), float64]) {
    %849 = cast(%var_5896, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
    %850 = log(%849) /* ty=Tensor[(8, 7, 1), float32] */;
    %851 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %852 = %851.0;
    %853 = cast(%850, dtype="uint16") /* ty=Tensor[(8, 7, 1), uint16] */;
    %854 = cast(%852, dtype="uint16") /* ty=Tensor[(10), uint16] */;
    %855 = cast(%850, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
    %856 = log2(%855) /* ty=Tensor[(8, 7, 1), float64] */;
    %857 = cast(%850, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
    %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%856, dtype="uint32") /* ty=Tensor[(8, 7, 1), uint32] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %861 = bitwise_or(%859, %860) /* ty=Tensor[(8, 7, ?), uint32] */;
    %862 = cast(%var_5975, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
    %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%861, dtype="bool") /* ty=Tensor[(8, 7, ?), bool] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %866 = cast(%var_5896, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
    %867 = sinh(%866) /* ty=Tensor[(8, 7, 1), float32] */;
    %868 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %869 = reshape(%868, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %870 = @func_3606(%869) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %871 = %870.2;
    %872 = cast(%867, dtype="int32") /* ty=Tensor[(8, 7, 1), int32] */;
    %873 = cast(%871, dtype="int32") /* ty=Tensor[(100), int32] */;
    %874 = bitwise_and(%872, %873) /* ty=Tensor[(8, 7, 100), int32] */;
    %875 = cast(%var_5997, dtype="float64") /* ty=Tensor[(8, 7, 100), float64] */;
    %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%874, dtype="float64") /* ty=Tensor[(8, 7, 100), float64] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %879 = cast(%var_6006, dtype="float32") /* ty=Tensor[(240), float32] */;
    %880 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 13), float64] */;
    %881 = cast(%var_6007, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %882 = reshape(%879, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %883 = reshape(%880, newshape=[13]) /* ty=Tensor[(13), float64] */;
    %884 = reshape(%881, newshape=[56, 22]) /* ty=Tensor[(56, 22), float64] */;
    %885 = @func_4681(%882, %883, %884) /* ty=(Tensor[(10), bool], Tensor[(15, 4, 4), float64], Tensor[(240), float32], Tensor[(1, 10), bool], bool, Tensor[(9, 11, 14), float32], Tensor[(1386), float32], Tensor[(11, 13, 4), float64], Tensor[(572), float64], Tensor[(105), float64], Tensor[(560), int64], Tensor[(960), uint64], Tensor[(13), float64], Tensor[(56, 22), float64]) */;
    %886 = subtract(%853, %854) /* ty=Tensor[(8, 7, 10), uint16] */;
    %887 = greater_equal(%864, %865) /* ty=Tensor[(8, 7, ?), bool] */;
    %888 = mod(%877, %878) /* ty=Tensor[(8, 7, 100), float64] */;
    %889 = %885.9;
    (meta[relay.Constant][77] /* ty=Tensor[(1, 13), float64] */, %886, %887, %888, %889, %var_6006, %var_6007)
  };
  %890(%var_6039, %var_6040, %var_6041, %var_6042, %var_6043) /* ty=(Tensor[(1, 13), float64], Tensor[(8, 7, 10), uint16], Tensor[(8, 7, ?), bool], Tensor[(8, 7, 100), float64], Tensor[(105), float64], Tensor[(240), float32], Tensor[(1232), float64]) */
}

def @func_5080() -> (Tensor[(10), bool],) {
  %893 = fn () -> (Tensor[(10), bool],) {
    %891 = @func_4818() /* ty=(Tensor[(10), bool],) */;
    %892 = %891.0;
    (%892,)
  };
  %893() /* ty=(Tensor[(10), bool],) */
}

def @func_5671() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */
}

def @func_10167(%var_10148: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), float64], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(1, 660), float32]) {
  %894 = cast(%var_10148, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %895 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(10, 14, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(meta[relay.Constant][78] /* ty=Tensor[(10, 14, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %898 = cast(1.44439f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %899 = cast(meta[relay.Constant][79] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %900 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 660), float32] */, dtype="float32") /* ty=Tensor[(1, 660), float32] */;
  %901 = reshape(%898, newshape=[]) /* ty=float64 */;
  %902 = reshape(%899, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), float64] */;
  %903 = reshape(%900, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %904 = @func_8628(%901, %902, %903) /* ty=(Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
  %905 = divide(%896, %897) /* ty=Tensor[(10, 14, 7), float64] */;
  %906 = %904.4;
  (%905, %906, 1.44439f64 /* ty=float64 */, meta[relay.Constant][79] /* ty=Tensor[(300), float64] */, meta[relay.Constant][80] /* ty=Tensor[(1, 660), float32] */)
}

def @func_5576(%var_5574: Tensor[(4, 13, 1), float64]) -> (Tensor[(4, 13, 1), float64], Tensor[(10), bool]) {
  @func_5573(%var_5574) /* ty=(Tensor[(4, 13, 1), float64], Tensor[(10), bool]) */
}

def @func_6957() -> (Tensor[(10), bool],) {
  %909 = fn () -> (Tensor[(10), bool],) {
    %907 = @func_4818() /* ty=(Tensor[(10), bool],) */;
    %908 = %907.0;
    (%908,)
  };
  %909() /* ty=(Tensor[(10), bool],) */
}

def @func_903(%var_901: Tensor[(1, 7, 6), float32]) -> (Tensor[(?, 7, 6), bool],) {
  @func_900(%var_901) /* ty=(Tensor[(?, 7, 6), bool],) */
}

def @func_6584(%var_6582: Tensor[(660), float32], %var_6583: Tensor[(4, 15, 11), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) {
  @func_6580(%var_6582, %var_6583) /* ty=(Tensor[(10), bool], Tensor[(660), float32], Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float64], Tensor[(5, 132), bool]) */
}

def @func_7209(%var_7207: Tensor[(286, 2), float64], %var_7208: uint16) -> (Tensor[(10), bool], Tensor[(16, 2, 6), float64], Tensor[(192), int16], Tensor[(4, 15, 11), float32], uint16, Tensor[(105), float64], Tensor[(286, 2), float64], Tensor[(13, 1), float64], Tensor[(1092), float32]) {
  @func_7205(%var_7207, %var_7208) /* ty=(Tensor[(10), bool], Tensor[(16, 2, 6), float64], Tensor[(192), int16], Tensor[(4, 15, 11), float32], uint16, Tensor[(105), float64], Tensor[(286, 2), float64], Tensor[(13, 1), float64], Tensor[(1092), float32]) */
}

def @func_7310(%var_7307: Tensor[(420), float64], %var_7308: Tensor[(1386), float32], %var_7309: Tensor[(240), float32]) -> (Tensor[(10), bool], Tensor[(1386), float32], Tensor[(420), float64], Tensor[(660), float32], Tensor[(192), int16], Tensor[(1386), float32], Tensor[(240), float32]) {
  @func_7305(%var_7307, %var_7308, %var_7309) /* ty=(Tensor[(10), bool], Tensor[(1386), float32], Tensor[(420), float64], Tensor[(660), float32], Tensor[(192), int16], Tensor[(1386), float32], Tensor[(240), float32]) */
}

def @func_8687() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  @func_8685() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */
}

def @func_7925(%var_7923: Tensor[(12, 14, 6), float32]) -> Tensor[(12, 14, 6), uint32] {
  @func_7922(%var_7923) /* ty=Tensor[(12, 14, 6), uint32] */
}

def @func_4714(%var_4713: uint16) -> (Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) {
  %918 = fn (%var_4708: uint16) -> (Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) {
    %910 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
    %911 = cast(%var_4708, dtype="uint16") /* ty=uint16 */;
    %912 = cast(meta[relay.Constant][81] /* ty=Tensor[(60, 12), uint16] */, dtype="uint16") /* ty=Tensor[(60, 12), uint16] */;
    %913 = reshape(%911, newshape=[]) /* ty=uint16 */;
    %914 = reshape(%912, newshape=[16, 5, 9]) /* ty=Tensor[(16, 5, 9), uint16] */;
    %915 = @func_662(%913, %914) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */;
    %916 = %910.4;
    %917 = %915.3;
    (%916, %917, %var_4708, meta[relay.Constant][81] /* ty=Tensor[(60, 12), uint16] */)
  };
  %918(%var_4713) /* ty=(Tensor[(6, 6, 13), bool], Tensor[(11, 16, 7), float64], uint16, Tensor[(60, 12), uint16]) */
}

def @func_10170(%var_10168: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), float64], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(1, 660), float32]) {
  @func_10167(%var_10168) /* ty=(Tensor[(10, 14, 7), float64], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(1, 660), float32]) */
}

def @func_5257(%var_5252: Tensor[(210, 2), float64], %var_5253: Tensor[(660), float32], %var_5254: Tensor[(192, 1), int16], %var_5255: Tensor[(1386), float32], %var_5256: Tensor[(240), float32]) -> (Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) {
  %959 = fn (%var_5182: Tensor[(210, 2), float64], %var_5190: Tensor[(660), float32], %var_5211: Tensor[(192, 1), int16], %var_5225: Tensor[(1386), float32], %var_5226: Tensor[(240), float32]) -> (Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) {
    %919 = @func_4855() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], bool) */;
    %920 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %921 = cast(meta[relay.Constant][82] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %922 = reshape(%921, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %923 = @func_3606(%922) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %924 = cast(%var_5182, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
    %925 = reshape(%924, newshape=[6, 10, 7]) /* ty=Tensor[(6, 10, 7), float64] */;
    %926 = @func_768(%925) /* ty=(Tensor[(6, 10, 7), int64], Tensor[(11, 16, 7), float64], Tensor[(56, 22), float64]) */;
    %927 = cast(%var_5190, dtype="float32") /* ty=Tensor[(660), float32] */;
    %928 = reshape(%927, newshape=[4, 15, 11]) /* ty=Tensor[(4, 15, 11), float32] */;
    %929 = @func_3552(%928) /* ty=(Tensor[(4, 15, 11), float32], Tensor[(4, 15, 11), float32]) */;
    %930 = cast(%var_5211, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
    %931 = cast(%var_5211, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
    %932 = reshape(%930, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
    %933 = reshape(%931, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
    %934 = @func_4457(%932, %933) /* ty=(Tensor[(16, 2, 6), float64],) */;
    %935 = cast(meta[relay.Constant][82] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
    %936 = reshape(%935, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %937 = @func_3606(%936) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %938 = cast(%var_5225, dtype="float32") /* ty=Tensor[(1386), float32] */;
    %939 = cast(%var_5225, dtype="uint16") /* ty=Tensor[(1386), uint16] */;
    %940 = cast(%var_5226, dtype="float32") /* ty=Tensor[(240), float32] */;
    %941 = reshape(%938, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), float32] */;
    %942 = reshape(%939, newshape=[9, 11, 14]) /* ty=Tensor[(9, 11, 14), uint16] */;
    %943 = reshape(%940, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %944 = @func_4116(%941, %942, %943) /* ty=(uint16, Tensor[(1, 572), float64], uint16, Tensor[(21, 5), float64], Tensor[(15, 4, 4), uint64], Tensor[(240), float32], Tensor[(3, 3, 9), float32], Tensor[(81), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(9, 11, 14), float32]) */;
    %945 = cast(%var_5182, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
    %946 = acosh(%945) /* ty=Tensor[(210, 2), float32] */;
    %947 = cast(%946, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
    %948 = tan(%947) /* ty=Tensor[(210, 2), float64] */;
    %949 = cast(%948, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
    %950 = %919.1;
    %951 = %920.0;
    %952 = %923.1;
    %953 = %926.1;
    %954 = %929.1;
    %955 = %934.0;
    %956 = %937.1;
    %957 = %944.9;
    %958 = cosh(%949) /* ty=Tensor[(210, 2), float64] */;
    (%950, %951, %952, meta[relay.Constant][82] /* ty=Tensor[(13), float64] */, %953, %954, %var_5190, %955, %var_5211, %956, %957, %var_5225, %var_5226, %958)
  };
  %959(%var_5252, %var_5253, %var_5254, %var_5255, %var_5256) /* ty=(Tensor[(1, 10), bool], Tensor[(10), bool], Tensor[(4, 5, 15), float32], Tensor[(13), float64], Tensor[(11, 16, 7), float64], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(16, 2, 6), float64], Tensor[(192, 1), int16], Tensor[(4, 5, 15), float32], Tensor[(1232), float64], Tensor[(1386), float32], Tensor[(240), float32], Tensor[(210, 2), float64]) */
}

def @func_6254() -> (Tensor[(10), bool],) {
  %960 = @func_5669() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %961 = %960.1;
  (%961,)
}

def @func_3267(%var_3262: Tensor[(12, 5, 7), uint8], %var_3263: Tensor[(105), float64], %var_3264: Tensor[(112), int64], %var_3265: Tensor[(560, 1), int64], %var_3266: Tensor[(1008), int64]) -> (Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) {
  @func_3260(%var_3262, %var_3263, %var_3264, %var_3265, %var_3266) /* ty=(Tensor[(12, 5, 7), uint8], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(81), float32], Tensor[(5, 6, 4), float64], Tensor[(112), int64], Tensor[(560, 1), int64], Tensor[(1008), int64], uint16, Tensor[(720), uint16]) */
}

def @func_5487() -> (Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) {
  %972 = fn () -> (Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) {
    %962 = @func_4744() /* ty=(Tensor[(10), bool],) */;
    %963 = @func_5157() /* ty=(Tensor[(10), bool],) */;
    %964 = cast(meta[relay.Constant][83] /* ty=Tensor[(8, 30), float32] */, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
    %965 = cast(meta[relay.Constant][83] /* ty=Tensor[(8, 30), float32] */, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
    %966 = reshape(%964, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %967 = reshape(%965, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %968 = @func_3697(%966, %967) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
    %969 = %962.0;
    %970 = %963.0;
    %971 = %968.0;
    (%969, %970, %971, meta[relay.Constant][83] /* ty=Tensor[(8, 30), float32] */)
  };
  %972() /* ty=(Tensor[(10), bool], Tensor[(10), bool], Tensor[(15, 4, 4), uint64], Tensor[(8, 30), float32]) */
}

def @func_6789(%var_6787: Tensor[(81), float32]) -> (Tensor[(468), int32], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
  %973 = cast(%var_6787, dtype="float32") /* ty=Tensor[(81), float32] */;
  %974 = reshape(%973, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
  %975 = @func_47(%974) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
  %976 = @func_5815() /* ty=Tensor[(468), int32] */;
  %977 = %975.0;
  (%976, %977, %var_6787)
}

def @func_7954() -> Tensor[(1, 10), bool] {
  %978 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %978.1
}

def @func_4562(%var_4471: int64, %var_4472: Tensor[(12, 4, 7), int64], %var_4540: Tensor[(572), float64], %var_4558: Tensor[(1, 567), float32]) -> (Tensor[(12, 4, 7), float32], Tensor[(720), uint16], Tensor[(572), float64], Tensor[(7, 15), float64], Tensor[(9, 7, 9), float32], Tensor[(1, 567), float32]) {
  %979 = cast(%var_4471, dtype="int64") /* ty=int64 */;
  %980 = cast(%var_4472, dtype="int64") /* ty=Tensor[(12, 4, 7), int64] */;
  %981 = add(%979, %980) /* ty=Tensor[(12, 4, 7), int64] */;
  %982 = cast(%var_4471, dtype="float64") /* ty=float64 */;
  %983 = cast(%981, dtype="float64") /* ty=Tensor[(12, 4, 7), float64] */;
  %984 = floor_divide(%982, %983) /* ty=Tensor[(12, 4, 7), float64] */;
  %985 = cast(%981, dtype="float32") /* ty=Tensor[(12, 4, 7), float32] */;
  %986 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%984, dtype="float32") /* ty=Tensor[(12, 4, 7), float32] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %989 = cast(%var_4540, dtype="float64") /* ty=Tensor[(572), float64] */;
  %990 = cast(%var_4471, dtype="uint16") /* ty=uint16 */;
  %991 = cast(meta[relay.Constant][84] /* ty=Tensor[(7, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %992 = reshape(%989, newshape=[11, 13, 4]) /* ty=Tensor[(11, 13, 4), float64] */;
  %993 = reshape(%990, newshape=[]) /* ty=uint16 */;
  %994 = reshape(%991, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %995 = @func_869(%992, %993, %994) /* ty=(Tensor[(11, 13, 4), float64], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16], Tensor[(5, 3, 7), float64], Tensor[(105), float64], Tensor[(9, 9), float32], Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32]) */;
  %996 = cast(%var_4558, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
  %997 = reshape(%996, newshape=[9, 7, 9]) /* ty=Tensor[(9, 7, 9), float32] */;
  %998 = @func_2372(%997) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */;
  %999 = divide(%987, %988) /* ty=Tensor[(12, 4, 7), float32] */;
  %1000 = %995.3;
  %1001 = %998.1;
  (%999, %1000, %var_4540, meta[relay.Constant][84] /* ty=Tensor[(7, 15), float64] */, %1001, %var_4558)
}

def @func_8836() -> Tensor[(10), bool] {
  @func_8834() /* ty=Tensor[(10), bool] */
}

def @func_9803(%var_9790: Tensor[(660), float32]) -> (Tensor[(10), bool], Tensor[(660), float32], float64, Tensor[(300), float64], Tensor[(660), float32]) {
  %1002 = @func_6912() /* ty=(Tensor[(10), bool],) */;
  %1003 = cast(-5.99533f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1004 = cast(meta[relay.Constant][85] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1005 = cast(%var_9790, dtype="float32") /* ty=Tensor[(660), float32] */;
  %1006 = reshape(%1003, newshape=[]) /* ty=float64 */;
  %1007 = reshape(%1004, newshape=[10, 3, 10]) /* ty=Tensor[(10, 3, 10), float64] */;
  %1008 = reshape(%1005, newshape=[660]) /* ty=Tensor[(660), float32] */;
  %1009 = @func_8628(%1006, %1007, %1008) /* ty=(Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */;
  %1010 = %1002.0;
  %1011 = %1009.4;
  (%1010, %1011, -5.99533f64 /* ty=float64 */, meta[relay.Constant][85] /* ty=Tensor[(300), float64] */, %var_9790)
}

def @func_5669() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %1012 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %1013 = @func_4744() /* ty=(Tensor[(10), bool],) */;
  %1014 = %1012.0;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_2129(%var_2125: Tensor[(1, 1), float64], %var_2126: Tensor[(1232), float64], %var_2127: Tensor[(2, 280), int64], %var_2128: Tensor[(1, 720), uint16]) -> (Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) {
  %1044 = fn (%var_2095: Tensor[(1, 1), float64], %var_2105: Tensor[(1232), float64], %var_2120: Tensor[(2, 280), int64], %var_2122: Tensor[(1, 720), uint16]) -> (Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) {
    %1016 = cast(%var_2095, dtype="float64") /* ty=Tensor[(1, 1), float64] */;
    %1017 = cast(meta[relay.Constant][86] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
    %1018 = cast(meta[relay.Constant][86] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
    %1019 = sinh(%1016) /* ty=Tensor[(1, 1), float64] */;
    %1020 = cast(%1019, dtype="uint16") /* ty=Tensor[(1, 1), uint16] */;
    %1021 = reshape(%1017, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
    %1022 = reshape(%1018, newshape=[13, 4, 10]) /* ty=Tensor[(13, 4, 10), float32] */;
    %1023 = reshape(%1020, newshape=[]) /* ty=uint16 */;
    %1024 = @func_1045(%1021, %1022, %1023) /* ty=(Tensor[(13, 4, 10), bool], Tensor[(5, 3, 7), float64], Tensor[(572), float64], uint16, Tensor[(105), float64], Tensor[(3, 3, 9), float32], Tensor[(9, 9), float32], Tensor[(120), float64], Tensor[(12, 60), uint16]) */;
    %1025 = cast(%var_2105, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1026 = reshape(%1025, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
    %1027 = @func_230(%1026) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
    %1028 = cast(meta[relay.Constant][87] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %1029 = cast(%var_2120, dtype="int64") /* ty=Tensor[(2, 280), int64] */;
    %1030 = cast(meta[relay.Constant][88] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %1031 = %1024.5;
    %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(3, 3, 9), float32] */;
    %1033 = cast(%var_2095, dtype="uint16") /* ty=Tensor[(1, 1), uint16] */;
    %1034 = cast(%var_2122, dtype="uint16") /* ty=Tensor[(1, 720), uint16] */;
    %1035 = reshape(%1028, newshape=[7, 1, 16]) /* ty=Tensor[(7, 1, 16), int64] */;
    %1036 = reshape(%1029, newshape=[7, 5, 16]) /* ty=Tensor[(7, 5, 16), int64] */;
    %1037 = reshape(%1030, newshape=[7, 9, 16]) /* ty=Tensor[(7, 9, 16), int64] */;
    %1038 = reshape(%1032, newshape=[81]) /* ty=Tensor[(81), float32] */;
    %1039 = reshape(%1033, newshape=[]) /* ty=uint16 */;
    %1040 = reshape(%1034, newshape=[720]) /* ty=Tensor[(720), uint16] */;
    %1041 = @func_1325(%1035, %1036, %1037, %1038, %1039, %1040) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */;
    %1042 = %1027.0;
    %1043 = %1041.1;
    (%1019, %1031, meta[relay.Constant][86] /* ty=Tensor[(520), float32] */, %1042, %var_2105, %1043, meta[relay.Constant][87] /* ty=Tensor[(112), int64] */, %var_2120, meta[relay.Constant][88] /* ty=Tensor[(1008), int64] */, %var_2122)
  };
  %1044(%var_2125, %var_2126, %var_2127, %var_2128) /* ty=(Tensor[(1, 1), float64], Tensor[(3, 3, 9), float32], Tensor[(520), float32], Tensor[(11, 16, 7), float64], Tensor[(1232), float64], Tensor[(7, 1, 16), float64], Tensor[(112), int64], Tensor[(2, 280), int64], Tensor[(1008), int64], Tensor[(1, 720), uint16]) */
}

def @func_9067() -> (Tensor[(10), bool],) {
  %1047 = fn () -> (Tensor[(10), bool],) {
    %1045 = @func_7279() /* ty=(Tensor[(10), bool],) */;
    %1046 = %1045.0;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(10), bool],) */
}

def @func_9335() -> (Tensor[(468), int32],) {
  %1049 = fn () -> (Tensor[(468), int32],) {
    %1048 = @func_5815() /* ty=Tensor[(468), int32] */;
    (%1048,)
  };
  %1049() /* ty=(Tensor[(468), int32],) */
}

def @func_4818() -> (Tensor[(10), bool],) {
  %1050 = @func_4781() /* ty=(Tensor[(10), bool],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_2375(%var_2373: Tensor[(9, 7, 9), float32]) -> (Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) {
  @func_2372(%var_2373) /* ty=(Tensor[(9, 7, 9), float32], Tensor[(9, 7, 9), float32]) */
}

def @func_5635(%var_5633: Tensor[(13), float64], %var_5634: Tensor[(2, 96), int16]) -> (Tensor[(10), bool], Tensor[(1, 13), float64], Tensor[(13), float64], Tensor[(567), bool], Tensor[(16, 2, 6), float64], Tensor[(2, 96), int16]) {
  @func_5631(%var_5633, %var_5634) /* ty=(Tensor[(10), bool], Tensor[(1, 13), float64], Tensor[(13), float64], Tensor[(567), bool], Tensor[(16, 2, 6), float64], Tensor[(2, 96), int16]) */
}

def @func_6106(%var_6105: Tensor[(6, 14, 13), float32]) -> (Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) {
  %1059 = fn (%var_6049: Tensor[(6, 14, 13), float32]) -> (Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) {
    %1052 = cast(meta[relay.Constant][89] /* ty=Tensor[(6, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
    %1053 = cast(%var_6049, dtype="float32") /* ty=Tensor[(6, 14, 13), float32] */;
    %1054 = cast(meta[relay.Constant][90] /* ty=Tensor[(13, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 1), float64] */;
    %1055 = reshape(%1054, newshape=[1, 13]) /* ty=Tensor[(1, 13), float64] */;
    %1056 = @func_3606(%1055) /* ty=(Tensor[(1, 13), float64], Tensor[(4, 5, 15), float32], Tensor[(100), uint64]) */;
    %1057 = divide(%1052, %1053) /* ty=Tensor[(6, 14, 13), float32] */;
    %1058 = %1056.2;
    (%1057, %1058, meta[relay.Constant][90] /* ty=Tensor[(13, 1), float64] */)
  };
  %1059(%var_6105) /* ty=(Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) */
}

def @func_7256() -> Tensor[(10), bool] {
  @func_7254() /* ty=Tensor[(10), bool] */
}

def @func_1333(%var_1327: Tensor[(7, 1, 16), int64], %var_1328: Tensor[(7, 5, 16), int64], %var_1329: Tensor[(7, 9, 16), int64], %var_1330: Tensor[(81), float32], %var_1331: uint16, %var_1332: Tensor[(720), uint16]) -> (Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) {
  @func_1325(%var_1327, %var_1328, %var_1329, %var_1330, %var_1331, %var_1332) /* ty=(Tensor[(7, 5, 16), int64], Tensor[(7, 1, 16), float64], Tensor[(5, 6, 4), float64], Tensor[(120, 1), float64], Tensor[(7, 9, 16), bool], Tensor[(3, 3, 9), float32], Tensor[(105), float64], Tensor[(81), float32], Tensor[(16, 5, 9), float64], uint16, Tensor[(720), uint16]) */
}

def @func_7956() -> Tensor[(1, 10), bool] {
  @func_7954() /* ty=Tensor[(1, 10), bool] */
}

def @func_8685() -> (Tensor[(10), bool], Tensor[(10), bool]) {
  %1060 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %1061 = @func_5079() /* ty=(Tensor[(10), bool],) */;
  %1062 = %1060.2;
  %1063 = %1061.0;
  (%1062, %1063)
}

def @func_3701(%var_3699: Tensor[(15, 4, 4), float32], %var_3700: Tensor[(15, 4, 4), float32]) -> (Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) {
  @func_3697(%var_3699, %var_3700) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */
}

def @func_8461() -> Tensor[(1, 10), bool] {
  @func_8459() /* ty=Tensor[(1, 10), bool] */
}

def @func_9872() -> (Tensor[(10), bool],) {
  %1064 = @func_9838() /* ty=Tensor[(10), bool] */;
  (%1064,)
}

def @func_7922(%var_7906: Tensor[(12, 14, 6), float32]) -> Tensor[(12, 14, 6), uint32] {
  %1065 = cast(%var_7906, dtype="float32") /* ty=Tensor[(12, 14, 6), float32] */;
  %1066 = asinh(%1065) /* ty=Tensor[(12, 14, 6), float32] */;
  %1067 = cast(%var_7906, dtype="uint32") /* ty=Tensor[(12, 14, 6), uint32] */;
  %1068 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%1066, dtype="uint32") /* ty=Tensor[(12, 14, 6), uint32] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%1069, %1070) /* ty=Tensor[(12, 14, 6), uint32] */
}

def @func_7538(%var_7536: int64) -> (Tensor[(1, 10), bool], Tensor[(120, 1), float64], int64, Tensor[(10, 144), int64], Tensor[(112), int64]) {
  @func_7535(%var_7536) /* ty=(Tensor[(1, 10), bool], Tensor[(120, 1), float64], int64, Tensor[(10, 144), int64], Tensor[(112), int64]) */
}

def @func_8103(%var_8101: bool) -> (Tensor[(3, 6, 6), bool],) {
  @func_8100(%var_8101) /* ty=(Tensor[(3, 6, 6), bool],) */
}

def @func_167(%var_165: Tensor[(5, 3, 7), float64], %var_166: Tensor[(81), float32]) -> (Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
  %1077 = fn (%var_146: Tensor[(5, 3, 7), float64], %var_151: Tensor[(81), float32]) -> (Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) {
    %1071 = cast(%var_146, dtype="float64") /* ty=Tensor[(5, 3, 7), float64] */;
    %1072 = cast(%var_151, dtype="float32") /* ty=Tensor[(81), float32] */;
    %1073 = reshape(%1072, newshape=[3, 3, 9]) /* ty=Tensor[(3, 3, 9), float32] */;
    %1074 = @func_47(%1073) /* ty=(Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32], Tensor[(3, 3, 9), float32]) */;
    %1075 = sinh(%1071) /* ty=Tensor[(5, 3, 7), float64] */;
    %1076 = %1074.1;
    (%1075, %1076, %var_151)
  };
  %1077(%var_165, %var_166) /* ty=(Tensor[(5, 3, 7), float64], Tensor[(3, 3, 9), float32], Tensor[(81), float32]) */
}

def @func_4403() -> (Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) {
  %1078 = cast(meta[relay.Constant][91] /* ty=Tensor[(2, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 1), float64] */;
  %1079 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1080 = cast(meta[relay.Constant][92] /* ty=Tensor[(10), bool] */, dtype="bool") /* ty=Tensor[(10), bool] */;
  %1081 = reshape(%1079, newshape=[]) /* ty=bool */;
  %1082 = reshape(%1080, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
  %1083 = @func_2789(%1081, %1082) /* ty=(Tensor[(1, 10), bool],) */;
  %1084 = cast(meta[relay.Constant][93] /* ty=Tensor[(468), int32] */, dtype="int32") /* ty=Tensor[(468), int32] */;
  %1085 = reshape(%1084, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
  %1086 = asinh(%1078) /* ty=Tensor[(2, 16, 1), float64] */;
  %1087 = %1083.0;
  %1088 = @func_1481(%1085) /* ty=Tensor[(6, 6, 13), bool] */;
  (%1086, %1087, False /* ty=bool */, meta[relay.Constant][92] /* ty=Tensor[(10), bool] */, %1088, meta[relay.Constant][93] /* ty=Tensor[(468), int32] */)
}

def @func_4736() -> (bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) {
  %1094 = fn () -> (bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) {
    %1089 = @func_4403() /* ty=(Tensor[(2, 16, 1), float64], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(6, 6, 13), bool], Tensor[(468), int32]) */;
    %1090 = cast(meta[relay.Constant][94] /* ty=Tensor[(6, 78), int32] */, dtype="int32") /* ty=Tensor[(6, 78), int32] */;
    %1091 = reshape(%1090, newshape=[6, 6, 13]) /* ty=Tensor[(6, 6, 13), int32] */;
    %1092 = %1089.2;
    %1093 = @func_1481(%1091) /* ty=Tensor[(6, 6, 13), bool] */;
    (%1092, %1093, meta[relay.Constant][94] /* ty=Tensor[(6, 78), int32] */)
  };
  %1094() /* ty=(bool, Tensor[(6, 6, 13), bool], Tensor[(6, 78), int32]) */
}

def @func_4936(%var_4934: Tensor[(567), float32]) -> (Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) {
  @func_4933(%var_4934) /* ty=(Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) */
}

def @func_7205(%var_7188: Tensor[(286, 2), float64], %var_7189: uint16) -> (Tensor[(10), bool], Tensor[(16, 2, 6), float64], Tensor[(192), int16], Tensor[(4, 15, 11), float32], uint16, Tensor[(105), float64], Tensor[(286, 2), float64], Tensor[(13, 1), float64], Tensor[(1092), float32]) {
  %1095 = @func_6956() /* ty=(Tensor[(10), bool],) */;
  %1096 = cast(meta[relay.Constant][95] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1097 = cast(meta[relay.Constant][95] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1098 = reshape(%1096, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %1099 = reshape(%1097, newshape=[16, 2, 6]) /* ty=Tensor[(16, 2, 6), int16] */;
  %1100 = @func_4457(%1098, %1099) /* ty=(Tensor[(16, 2, 6), float64],) */;
  %1101 = cast(%var_7188, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %1102 = cast(%var_7189, dtype="uint16") /* ty=uint16 */;
  %1103 = cast(meta[relay.Constant][96] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1104 = reshape(%1101, newshape=[572]) /* ty=Tensor[(572), float64] */;
  %1105 = reshape(%1102, newshape=[]) /* ty=uint16 */;
  %1106 = reshape(%1103, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1107 = @func_6289(%1104, %1105, %1106) /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(3, 3, 9), float32], uint16, Tensor[(105), float64], Tensor[(572), float32]) */;
  %1108 = cast(%var_7188, dtype="float64") /* ty=Tensor[(286, 2), float64] */;
  %1109 = cast(meta[relay.Constant][97] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %1110 = reshape(%1109, newshape=[6, 14, 13]) /* ty=Tensor[(6, 14, 13), float32] */;
  %1111 = @func_6104(%1110) /* ty=(Tensor[(6, 14, 13), float32], Tensor[(100), uint64], Tensor[(13, 1), float64]) */;
  %1112 = %1095.0;
  %1113 = %1100.0;
  %1114 = %1107.1;
  %1115 = rsqrt(%1108) /* ty=Tensor[(286, 2), float64] */;
  %1116 = %1111.2;
  (%1112, %1113, meta[relay.Constant][95] /* ty=Tensor[(192), int16] */, %1114, %var_7189, meta[relay.Constant][96] /* ty=Tensor[(105), float64] */, %1115, %1116, meta[relay.Constant][97] /* ty=Tensor[(1092), float32] */)
}

def @func_6225() -> (Tensor[(10), bool],) {
  @func_6223() /* ty=(Tensor[(10), bool],) */
}

def @func_9767(%var_9760: Tensor[(2, 15, 16), bool], %var_9761: Tensor[(2, 15, 16), bool]) -> Tensor[(2, 15, 16), bool] {
  %1117 = cast(%var_9761, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1118 = shape_of(%var_9760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%var_9760, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1119, %1120) /* ty=Tensor[(2, 15, 16), bool] */
}

def @func_8421() -> (Tensor[(10), bool], Tensor[(567), float32], Tensor[(567), float32]) {
  %1121 = @func_5743() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %1122 = cast(meta[relay.Constant][98] /* ty=Tensor[(567), float32] */, dtype="float32") /* ty=Tensor[(567), float32] */;
  %1123 = reshape(%1122, newshape=[567]) /* ty=Tensor[(567), float32] */;
  %1124 = @func_4933(%1123) /* ty=(Tensor[(1, 10), bool], Tensor[(9, 7, 9), float32], Tensor[(567), float32]) */;
  %1125 = %1121.0;
  %1126 = %1124.2;
  (%1125, %1126, meta[relay.Constant][98] /* ty=Tensor[(567), float32] */)
}

def @func_7130() -> (Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) {
  %1149 = fn () -> (Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) {
    %1127 = @func_6254() /* ty=(Tensor[(10), bool],) */;
    %1128 = cast(meta[relay.Constant][99] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %1129 = reshape(%1128, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %1130 = @func_5887(%1129) /* ty=(Tensor[(10), bool], Tensor[(112), int64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(560), int64], Tensor[(1008), int64]) */;
    %1131 = cast(meta[relay.Constant][100] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1132 = cast(meta[relay.Constant][100] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1133 = reshape(%1131, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %1134 = reshape(%1132, newshape=[15, 4, 4]) /* ty=Tensor[(15, 4, 4), float32] */;
    %1135 = @func_3697(%1133, %1134) /* ty=(Tensor[(15, 4, 4), uint64], Tensor[(15, 4, 4), float64]) */;
    %1136 = %1135.0;
    %1137 = cast(meta[relay.Constant][100] /* ty=Tensor[(240), float32] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %1138 = shape_of(%1136, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1139 = cast(%1136, dtype="bool") /* ty=Tensor[(15, 4, 4), bool] */;
    %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1141 = logical_or(%1139, %1140) /* ty=Tensor[(15, 4, 4), bool] */;
    %1142 = cast(%1136, dtype="int64") /* ty=Tensor[(15, 4, 4), int64] */;
    %1143 = shape_of(%1141, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1144 = cast(%1141, dtype="int64") /* ty=Tensor[(15, 4, 4), int64] */;
    %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1146 = %1127.0;
    %1147 = %1130.3;
    %1148 = multiply(%1144, %1145) /* ty=Tensor[(15, 4, 4), int64] */;
    (%1146, %1147, meta[relay.Constant][99] /* ty=Tensor[(112), int64] */, %1148)
  };
  %1149() /* ty=(Tensor[(10), bool], Tensor[(105), float64], Tensor[(112), int64], Tensor[(15, 4, 4), int64]) */
}

def @func_10044(%var_10041: bool, %var_10042: Tensor[(10), bool], %var_10043: Tensor[(420), uint8]) -> (Tensor[(6, 6, 13), uint8], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(10), bool], Tensor[(420), uint8], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), bool], Tensor[(10), bool]) {
  %1183 = fn (%var_9978: bool, %var_9979: Tensor[(10), bool], %var_10002: Tensor[(420), uint8]) -> (Tensor[(6, 6, 13), uint8], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(10), bool], Tensor[(420), uint8], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), bool], Tensor[(10), bool]) {
    %1150 = @func_7986() /* ty=(Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32], Tensor[(6, 6, 13), bool], uint16) */;
    %1151 = %1150.3;
    %1152 = cast(meta[relay.Constant][101] /* ty=Tensor[(6, 6, 13), bool] */, dtype="uint8") /* ty=Tensor[(6, 6, 13), uint8] */;
    %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1154 = cast(%1151, dtype="uint8") /* ty=Tensor[(6, 6, 13), uint8] */;
    %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1156 = cast(%var_9978, dtype="bool") /* ty=bool */;
    %1157 = cast(%var_9979, dtype="bool") /* ty=Tensor[(10), bool] */;
    %1158 = reshape(%1156, newshape=[]) /* ty=bool */;
    %1159 = reshape(%1157, newshape=[1, 10]) /* ty=Tensor[(1, 10), bool] */;
    %1160 = @func_2789(%1158, %1159) /* ty=(Tensor[(1, 10), bool],) */;
    %1161 = @func_9066() /* ty=(Tensor[(10), bool],) */;
    %1162 = cast(%var_10002, dtype="uint8") /* ty=Tensor[(420), uint8] */;
    %1163 = cast(meta[relay.Constant][102] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %1164 = cast(meta[relay.Constant][103] /* ty=Tensor[(1008), int64] */, dtype="int64") /* ty=Tensor[(1008), int64] */;
    %1165 = cast(meta[relay.Constant][104] /* ty=Tensor[(560), int64] */, dtype="int64") /* ty=Tensor[(560), int64] */;
    %1166 = reshape(%1162, newshape=[420]) /* ty=Tensor[(420), uint8] */;
    %1167 = reshape(%1163, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %1168 = reshape(%1164, newshape=[1008]) /* ty=Tensor[(1008), int64] */;
    %1169 = reshape(%1165, newshape=[560]) /* ty=Tensor[(560), int64] */;
    %1170 = @func_5025(%1166, %1167, %1168, %1169) /* ty=(Tensor[(10), bool], Tensor[(5, 3, 7), float64], Tensor[(420), uint8], Tensor[(105), float64], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), int64], Tensor[(560), float64]) */;
    %1171 = %1170.6;
    %1172 = cast(%1171, dtype="float64") /* ty=Tensor[(560), float64] */;
    %1173 = acosh(%1172) /* ty=Tensor[(560), float64] */;
    %1174 = cast(%1173, dtype="bool") /* ty=Tensor[(560), bool] */;
    %1175 = shape_of(meta[relay.Constant][104] /* ty=Tensor[(560), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1176 = cast(meta[relay.Constant][104] /* ty=Tensor[(560), int64] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %1177 = dyn.reshape(%1174, %1175, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1178 = subtract(%1154, %1155) /* ty=Tensor[(6, 6, 13), uint8] */;
    %1179 = %1160.0;
    %1180 = %1161.0;
    %1181 = less(%1176, %1177) /* ty=Tensor[(560), bool] */;
    %1182 = @func_5413() /* ty=Tensor[(10), bool] */;
    (%1178, %1179, %var_9978, %var_9979, %1180, %var_10002, meta[relay.Constant][102] /* ty=Tensor[(112), int64] */, meta[relay.Constant][103] /* ty=Tensor[(1008), int64] */, %1181, %1182)
  };
  %1183(%var_10041, %var_10042, %var_10043) /* ty=(Tensor[(6, 6, 13), uint8], Tensor[(1, 10), bool], bool, Tensor[(10), bool], Tensor[(10), bool], Tensor[(420), uint8], Tensor[(112), int64], Tensor[(1008), int64], Tensor[(560), bool], Tensor[(10), bool]) */
}

def @func_294(%var_275: Tensor[(5, 6, 4), float64], %var_276: Tensor[(5, 6, 4), float64], %var_280: Tensor[(5, 6, 4), float64]) -> (Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) {
  %1184 = cast(%var_276, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %1185 = shape_of(%var_275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1186 = cast(%var_275, dtype="float64") /* ty=Tensor[(5, 6, 4), float64] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1188 = cast(%var_280, dtype="int16") /* ty=Tensor[(5, 6, 4), int16] */;
  %1189 = shape_of(%var_276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%var_276, dtype="int16") /* ty=Tensor[(5, 6, 4), int16] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1192 = mod(%1186, %1187) /* ty=Tensor[(5, 6, 4), float64] */;
  %1193 = minimum(%1190, %1191) /* ty=Tensor[(5, 6, 4), int16] */;
  (%1192, %1193)
}

def @func_9040(%var_9038: uint8) -> (Tensor[(1, 4, 5), uint8],) {
  @func_9037(%var_9038) /* ty=(Tensor[(1, 4, 5), uint8],) */
}

def @func_4568(%var_4564: int64, %var_4565: Tensor[(12, 4, 7), int64], %var_4566: Tensor[(572), float64], %var_4567: Tensor[(1, 567), float32]) -> (Tensor[(12, 4, 7), float32], Tensor[(720), uint16], Tensor[(572), float64], Tensor[(7, 15), float64], Tensor[(9, 7, 9), float32], Tensor[(1, 567), float32]) {
  @func_4562(%var_4564, %var_4565, %var_4566, %var_4567) /* ty=(Tensor[(12, 4, 7), float32], Tensor[(720), uint16], Tensor[(572), float64], Tensor[(7, 15), float64], Tensor[(9, 7, 9), float32], Tensor[(1, 567), float32]) */
}

def @func_8633(%var_8630: float64, %var_8631: Tensor[(10, 3, 10), float64], %var_8632: Tensor[(660), float32]) -> (Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) {
  @func_8628(%var_8630, %var_8631, %var_8632) /* ty=(Tensor[(10, 3, 10), float64], Tensor[(10, 3, 10), float64], Tensor[(10), bool], Tensor[(4, 15, 11), float32], Tensor[(660), float32]) */
}

def @func_665(%var_663: uint16, %var_664: Tensor[(16, 5, 9), uint16]) -> (Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) {
  %1211 = fn (%var_638: uint16, %var_639: Tensor[(16, 5, 9), uint16]) -> (Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) {
    %1194 = cast(meta[relay.Constant][105] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1195 = cast(meta[relay.Constant][105] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1196 = cast(meta[relay.Constant][105] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1197 = reshape(%1194, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %1198 = reshape(%1195, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %1199 = reshape(%1196, newshape=[5, 6, 4]) /* ty=Tensor[(5, 6, 4), float64] */;
    %1200 = @func_294(%1197, %1198, %1199) /* ty=(Tensor[(5, 6, 4), float64], Tensor[(5, 6, 4), int16]) */;
    %1201 = cast(%var_638, dtype="bool") /* ty=bool */;
    %1202 = cast(%var_639, dtype="bool") /* ty=Tensor[(16, 5, 9), bool] */;
    %1203 = greater_equal(%1201, %1202) /* ty=Tensor[(16, 5, 9), bool] */;
    %1204 = cast(%1203, dtype="float64") /* ty=Tensor[(16, 5, 9), float64] */;
    %1205 = cast(meta[relay.Constant][106] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %1206 = reshape(%1205, newshape=[11, 16, 7]) /* ty=Tensor[(11, 16, 7), float64] */;
    %1207 = @func_230(%1206) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) */;
    %1208 = %1200.1;
    %1209 = sinh(%1204) /* ty=Tensor[(16, 5, 9), float64] */;
    %1210 = %1207.1;
    (%1208, meta[relay.Constant][105] /* ty=Tensor[(120), float64] */, %1209, %1210, meta[relay.Constant][106] /* ty=Tensor[(1232), float64] */)
  };
  %1211(%var_663, %var_664) /* ty=(Tensor[(5, 6, 4), int16], Tensor[(120), float64], Tensor[(16, 5, 9), float64], Tensor[(11, 16, 7), float64], Tensor[(1232), float64]) */
}

def @func_9059() -> (Tensor[(10), bool],) {
  %1212 = @func_5413() /* ty=Tensor[(10), bool] */;
  (%1212,)
}

def @func_7234() -> (Tensor[(1, 10), bool], Tensor[(10), bool]) {
  %1213 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
  %1214 = @func_5743() /* ty=(Tensor[(10), bool], Tensor[(10), bool]) */;
  %1215 = %1213.1;
  %1216 = %1214.0;
  (%1215, %1216)
}

def @func_4461(%var_4459: Tensor[(16, 2, 6), int16], %var_4460: Tensor[(16, 2, 6), int16]) -> (Tensor[(16, 2, 6), float64],) {
  @func_4457(%var_4459, %var_4460) /* ty=(Tensor[(16, 2, 6), float64],) */
}

def @func_230(%var_205: Tensor[(11, 16, 7), float64]) -> (Tensor[(11, 16, 7), float64], Tensor[(11, 16, 7), float64]) {
  %1217 = cast(%var_205, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %1218 = cast(%var_205, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %1219 = log10(%1217) /* ty=Tensor[(11, 16, 7), float64] */;
  %1220 = erf(%1218) /* ty=Tensor[(11, 16, 7), float64] */;
  (%1219, %1220)
}

def @func_7254() -> Tensor[(10), bool] {
  %1221 = @func_4818() /* ty=(Tensor[(10), bool],) */;
  %1221.0
}

def @func_9108() -> (Tensor[(10), bool],) {
  @func_9106() /* ty=(Tensor[(10), bool],) */
}

def @func_9691() -> (Tensor[(10), bool], Tensor[(1, 10), bool]) {
  %1226 = fn () -> (Tensor[(10), bool], Tensor[(1, 10), bool]) {
    %1222 = @func_9059() /* ty=(Tensor[(10), bool],) */;
    %1223 = @func_7007() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool], Tensor[(10), bool]) */;
    %1224 = %1222.0;
    %1225 = %1223.1;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(10), bool], Tensor[(1, 10), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen192/build/output.py:2631: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen192/build/output.py", line 2636, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(338) tvmgen_default_fused_cast_cast_reshape_less_equal_kernel0(signed char* __restrict__ T_less_equal, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_less_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


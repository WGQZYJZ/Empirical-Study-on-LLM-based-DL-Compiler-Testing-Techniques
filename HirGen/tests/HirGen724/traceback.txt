==========mod==========
#[version = "0.0.5"]
def @func_14893() -> (Tensor[(15, 16, 8), float32],) {
  %0 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1 = %0.1;
  (%1,)
}

def @func_9116() -> (Tensor[(15, 2, 13), int16],) {
  %2 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %3 = %2.1;
  (%3,)
}

def @func_20089() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(4, 168), int32], Tensor[(6, 8, 14), float64], Tensor[(390), float32]) {
  %4 = @func_15972() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %5 = @func_11543() /* ty=Tensor[(672), float64] */;
  %6 = cast(%5, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %7 = reshape(%6, newshape=[4, 168]) /* ty=Tensor[(4, 168), uint64] */;
  %8 = @func_5506(%7) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) */;
  %9 = %8.4;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %11 = reshape(%10, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %12 = @func_1536(%11) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %13 = @func_15557() /* ty=(Tensor[(390), float32],) */;
  %14 = %4.1;
  %15 = %12.1;
  %16 = %13.0;
  (%14, %5, %9, %15, %16)
}

def @func_4014() -> Tensor[(672), float64] {
  %17 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %17.0
}

def @func_5219() -> (Tensor[(15, 16, 8), int64],) {
  %18 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %20 = log10(%19) /* ty=Tensor[(15, 16, 8), float32] */;
  %21 = cast(%18, dtype="int64") /* ty=Tensor[(15, 16, 8), int64] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="int64") /* ty=Tensor[(15, 16, 8), int64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %25 = maximum(%23, %24) /* ty=Tensor[(15, 16, 8), int64] */;
  (%25,)
}

def @func_15401() -> Tensor[(672), float64] {
  @func_11543() /* ty=Tensor[(672), float64] */
}

def @func_1226() -> (Tensor[(15, 16, 8), float32],) {
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %27 = cos(%26) /* ty=Tensor[(15, 16, 8), float32] */;
  (%27,)
}

def @func_15503(%var_15493: Tensor[(864), uint64]) -> (Tensor[(672), float64], Tensor[(864), uint64], Tensor[(864), uint64]) {
  %28 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %29 = cast(%var_15493, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %30 = reshape(%29, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %31 = @func_11775(%30) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) */;
  %32 = %28.0;
  %33 = %31.3;
  (%32, %33, %var_15493)
}

def @func_1339(%var_1237: Tensor[(390), int16], %var_1244: Tensor[(210), int8]) -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) {
  %34 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %35 = %34.0;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %37 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %38 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %39 = cast(%var_1237, dtype="int16") /* ty=Tensor[(390), int16] */;
  %40 = reshape(%37, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %41 = reshape(%38, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %42 = reshape(%39, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %43 = @func_398(%40, %41, %42) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %45 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %47 = reshape(%44, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %48 = reshape(%45, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %49 = reshape(%46, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %50 = @func_800(%47, %48, %49) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %52 = cast(%var_1237, dtype="int16") /* ty=Tensor[(390), int16] */;
  %53 = reshape(%51, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %54 = reshape(%52, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %55 = @func_688(%53, %54) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %58 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(168, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(168, 4), float64] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %61 = cast(meta[relay.Constant][1] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %62 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %63 = bitwise_and(%59, %60) /* ty=Tensor[(168, 4), uint8] */;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %65 = reshape(%61, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %66 = reshape(%62, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %67 = reshape(%64, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %68 = @func_800(%65, %66, %67) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %69 = cast(meta[relay.Constant][1] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %70 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %71 = cast(%63, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %72 = reshape(%69, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %73 = reshape(%70, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %74 = reshape(%71, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %75 = @func_800(%72, %73, %74) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %76 = cosh(%36) /* ty=Tensor[(15, 16, 8), float32] */;
  %77 = %43.3;
  %78 = %50.3;
  %79 = %68.1;
  %80 = %75.6;
  (%76, %var_1237, %77, %var_1244, %78, meta[relay.Constant][1] /* ty=Tensor[(550), float32] */, %63, %79, %80)
}

def @func_5559() -> (Tensor[(15, 16, 8), float32],) {
  %81 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  (%81,)
}

def @func_16613() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) {
  %82 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %83 = %82.0;
  %84 = @func_5871() /* ty=Tensor[(672), float64] */;
  %85 = @func_11543() /* ty=Tensor[(672), float64] */;
  (%83, %84, %85)
}

def @main() -> (Tensor[(5, 3, 14), int8], Tensor[(210), int8], Tensor[(550), bool]) {
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %87 = reshape(%86, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %88 = @func_3465(%87) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) */;
  %89 = @func_16516() /* ty=(Tensor[(550), float32],) */;
  %90 = %89.0;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(550), float64] */;
  %92 = exp(%91) /* ty=Tensor[(550), float64] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(550), bool] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(1), int32] */;
  %95 = cast(%92, dtype="bool") /* ty=Tensor[(550), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?), bool] */;
  %97 = %88.1;
  %98 = equal(%95, %96) /* ty=Tensor[(550), bool] */;
  (%97, meta[relay.Constant][3] /* ty=Tensor[(210), int8] */, %98)
}

def @func_13814() -> Tensor[(390), int16] {
  @func_11856() /* ty=Tensor[(390), int16] */
}

def @func_3778() -> (Tensor[(390), int16], Tensor[(390), float32]) {
  %99 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %100 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %101 = %99.1;
  %102 = %100.1;
  (%101, %102)
}

def @func_15148() -> (Tensor[(672), float64],) {
  %103 = @func_10644() /* ty=(Tensor[(672), float64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_11015() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %105 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %106 = %105.0;
  %107 = @func_4073() /* ty=Tensor[(390), int16] */;
  (%106, %107)
}

def @func_14017() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %108 = @func_13412() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16]) */;
  %109 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %110 = %108.1;
  %111 = %109.0;
  (%110, %111)
}

def @func_9279() -> (Tensor[(390), float32],) {
  %112 = @func_7118() /* ty=(Tensor[(672), float64], Tensor[(390), float32]) */;
  %113 = %112.1;
  (%113,)
}

def @func_19531() -> (Tensor[(4, 168), uint16],) {
  %114 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
  %115 = %114.1;
  (%115,)
}

def @func_16758() -> (Tensor[(396), float64],) {
  %116 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
  %117 = %116.3;
  (%117,)
}

def @func_2604() -> Tensor[(15, 16, 8), float32] {
  %118 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %118.0
}

def @func_8509(%var_8493: Tensor[(390), int16]) -> (Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(1920), bool], Tensor[(390), int16], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
  %119 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %120 = cast(%var_8493, dtype="int16") /* ty=Tensor[(390), int16] */;
  %121 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
  %122 = cast(%121, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %123 = reshape(%120, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %124 = reshape(%122, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %125 = @func_6969(%123, %124) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %127 = reshape(%126, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %128 = @func_1716(%127) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %129 = %119.1;
  %130 = %125.2;
  %131 = %128.0;
  (%129, %121, %130, %var_8493, %131, meta[relay.Constant][4] /* ty=Tensor[(864), uint64] */)
}

def @func_2976() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %132 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %133 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %134 = %132.0;
  %135 = %133.0;
  %136 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%134, %135, %136)
}

def @func_4965() -> Tensor[(390), float32] {
  %137 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %137.1
}

def @func_16076() -> Tensor[(15, 2, 13), int16] {
  @func_6106() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_6309() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %138 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %139 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %140 = %138.1;
  %141 = %139.0;
  (%140, %141)
}

def @func_8082(%var_8077: Tensor[(7, 8, 6), float32]) -> Tensor[(7, 8, 6), float32] {
  %142 = cast(%var_8077, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  atan(%142) /* ty=Tensor[(7, 8, 6), float32] */
}

def @func_11268() -> (Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) {
  %143 = @func_8264() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */;
  %144 = @func_5219() /* ty=(Tensor[(15, 16, 8), int64],) */;
  %145 = cast(meta[relay.Constant][5] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %146 = reshape(%145, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %147 = @func_7697(%146) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) */;
  %148 = %143.1;
  %149 = %144.0;
  %150 = %147.6;
  (%148, %149, %150, meta[relay.Constant][5] /* ty=Tensor[(672), float32] */)
}

def @func_5796() -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %151 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %152 = @func_4573() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %153 = @func_3243() /* ty=Tensor[(672), float64] */;
  %154 = %151.0;
  %155 = %152.0;
  (%153, %154, %155)
}

def @func_4404() -> (Tensor[(390), int16], Tensor[(390), int16]) {
  %156 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %157 = %156.0;
  %158 = @func_4073() /* ty=Tensor[(390), int16] */;
  (%157, %158)
}

def @func_6337() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
  %159 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %160 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %161 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %162 = %159.1;
  %163 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %164 = %160.2;
  %165 = %161.0;
  (%162, %163, %164, %165)
}

def @func_6183() -> (Tensor[(672), float64], Tensor[(390), int16]) {
  %166 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %167 = @func_4573() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %168 = %166.0;
  %169 = %167.1;
  (%168, %169)
}

def @func_4573() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %170 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %171 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %172 = %170.3;
  %173 = %171.0;
  (%172, %173)
}

def @func_9058() -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %174 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %175 = %174.0;
  %176 = @func_6106() /* ty=Tensor[(15, 2, 13), int16] */;
  %177 = @func_7830() /* ty=Tensor[(672), float64] */;
  (%175, %176, %177)
}

def @func_10275() -> (Tensor[(15, 16, 8), float32],) {
  %178 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %179 = %178.0;
  (%179,)
}

def @func_15421() -> Tensor[(390), float32] {
  %180 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %180.1
}

def @func_3621() -> Tensor[(15, 2, 13), int16] {
  %181 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %181.0
}

def @func_14071(%var_14030: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(672), float64]) {
  %182 = cast(%var_14030, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %183 = log10(%182) /* ty=Tensor[(13, 6, 14), float64] */;
  %184 = cast(%183, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %185 = sin(%184) /* ty=Tensor[(13, 6, 14), float64] */;
  %186 = @func_4014() /* ty=Tensor[(672), float64] */;
  (%185, %186)
}

def @func_6004() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %187 = @func_3982() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %188 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %189 = %187.0;
  %190 = %188.0;
  (%189, %190)
}

def @func_7506(%var_7493: Tensor[(210, 11), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(210, 11), bool]) {
  %191 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %192 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %193 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %194 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %195 = %194.2;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(210, 1), bool] */;
  %197 = cast(%var_7493, dtype="bool") /* ty=Tensor[(210, 11), bool] */;
  %198 = %191.0;
  %199 = %192.0;
  %200 = %193.0;
  %201 = equal(%196, %197) /* ty=Tensor[(210, 11), bool] */;
  (%198, %199, %200, %201)
}

def @func_16664() -> Tensor[(672), float64] {
  %202 = @func_10769() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %202.4
}

def @func_10815() -> Tensor[(15, 16, 8), float32] {
  @func_2604() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_16516() -> (Tensor[(550), float32],) {
  %203 = @func_11170() /* ty=Tensor[(550), float32] */;
  (%203,)
}

def @func_1792(%var_1769: Tensor[(105, 2), int8]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) {
  %204 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %205 = %204.1;
  %206 = cast(%205, dtype="int16") /* ty=Tensor[(390), int16] */;
  %207 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
  %208 = reshape(%206, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %209 = reshape(%207, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %210 = @func_1339(%208, %209) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
  %211 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 2), int8] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %212 = cast(%var_1769, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %213 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(105, 2), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %214 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 2), int8] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %216 = power(%214, %215) /* ty=Tensor[(105, 2), float64] */;
  %217 = cast(%216, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %218 = %210.0;
  %219 = log(%211) /* ty=Tensor[(105, 2), float64] */;
  %220 = log10(%217) /* ty=Tensor[(105, 2), float64] */;
  (%205, %218, %219, %220)
}

def @func_11474() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %221 = @func_7766() /* ty=Tensor[(672), float64] */;
  %222 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%221, %222)
}

def @func_8170() -> (Tensor[(672), float64], Tensor[(210), int8]) {
  %223 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="float32") /* ty=Tensor[(672), float32] */;
  %226 = reshape(%225, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %227 = @func_7697(%226) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) */;
  %228 = %227.2;
  (%224, %228)
}

def @func_18596() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %229 = @func_12700() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %230 = %229.0;
  %231 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%230, %231)
}

def @func_12852(%var_12845: Tensor[(5, 3, 14), int8]) -> (Tensor[(5, 3, 14), bool],) {
  %232 = @func_8007() /* ty=(Tensor[(5, 3, 14), int8],) */;
  %233 = %232.0;
  %234 = cast(%var_12845, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %238 = greater(%236, %237) /* ty=Tensor[(5, 3, 14), bool] */;
  (%238,)
}

def @func_17713(%var_17679: Tensor[(198, 2), float64]) -> (Tensor[(672), float64], Tensor[(9, 13, 6), float32], Tensor[(702), float32], Tensor[(336), float32], Tensor[(1920), float32], Tensor[(390), float32], Tensor[(7, 13, 5), float32], Tensor[(15, 2, 13), int16], Tensor[(198, 2), uint64], Tensor[(672), float64]) {
  %239 = cast(meta[relay.Constant][7] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %240 = cast(meta[relay.Constant][8] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %241 = cast(meta[relay.Constant][9] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %242 = cast(meta[relay.Constant][10] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %243 = reshape(%239, newshape=[9, 13, 6]) /* ty=Tensor[(9, 13, 6), float32] */;
  %244 = reshape(%240, newshape=[4, 84]) /* ty=Tensor[(4, 84), float32] */;
  %245 = reshape(%241, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %246 = reshape(%242, newshape=[96, 20]) /* ty=Tensor[(96, 20), float32] */;
  %247 = @func_13744(%243, %244, %245, %246) /* ty=(Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) */;
  %248 = @func_9279() /* ty=(Tensor[(390), float32],) */;
  %249 = cast(meta[relay.Constant][11] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %250 = cast(meta[relay.Constant][11] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %251 = reshape(%249, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %252 = reshape(%250, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %253 = @func_8409(%251, %252) /* ty=(Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) */;
  %254 = %253.1;
  %255 = cast(meta[relay.Constant][11] /* ty=Tensor[(455), uint8] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %259 = cast(%var_17679, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %260 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(198, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %261 = cast(meta[relay.Constant][9] /* ty=Tensor[(198, 2), float64] */, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %263 = bitwise_xor(%261, %262) /* ty=Tensor[(198, 2), uint8] */;
  %264 = cast(%var_17679, dtype="uint64") /* ty=Tensor[(198, 2), uint64] */;
  %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(2), int32] */;
  %266 = cast(%263, dtype="uint64") /* ty=Tensor[(198, 2), uint64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %268 = @func_7442() /* ty=(Tensor[(672), float64],) */;
  %269 = @func_5635() /* ty=Tensor[(672), float64] */;
  %270 = %247.0;
  %271 = %248.0;
  %272 = power(%257, %258) /* ty=Tensor[(7, 13, 5), float32] */;
  %273 = @func_15065() /* ty=Tensor[(15, 2, 13), int16] */;
  %274 = maximum(%266, %267) /* ty=Tensor[(198, 2), uint64] */;
  %275 = %268.0;
  (%269, %270, meta[relay.Constant][7] /* ty=Tensor[(702), float32] */, meta[relay.Constant][8] /* ty=Tensor[(336), float32] */, meta[relay.Constant][10] /* ty=Tensor[(1920), float32] */, %271, %272, %273, %274, %275)
}

def @func_6605() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %276 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %277 = @func_2710() /* ty=Tensor[(15, 16, 8), float32] */;
  (%276, %277)
}

def @func_12114() -> (Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %278 = @func_11445() /* ty=(Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) */;
  %279 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %280 = @func_10668() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %281 = %278.0;
  %282 = %279.0;
  %283 = %280.0;
  (%281, %282, %283)
}

def @func_19823() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(15, 16, 8), uint8]) {
  %284 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %285 = @func_8952() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %286 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
  %287 = %284.0;
  %288 = %285.1;
  %289 = %286.1;
  (%287, %288, %289)
}

def @func_13744(%var_13704: Tensor[(9, 13, 6), float32], %var_13711: Tensor[(4, 84), float32], %var_13722: Tensor[(396), float64], %var_13723: Tensor[(96, 20), float32]) -> (Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) {
  %290 = cast(%var_13704, dtype="float32") /* ty=Tensor[(9, 13, 6), float32] */;
  %291 = cast(%var_13711, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
  %292 = reshape(%291, newshape=[7, 8, 6]) /* ty=Tensor[(7, 8, 6), float32] */;
  %293 = cast(meta[relay.Constant][12] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %294 = cast(%var_13722, dtype="float64") /* ty=Tensor[(396), float64] */;
  %295 = cast(%var_13723, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
  %296 = reshape(%293, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float64] */;
  %297 = reshape(%294, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %298 = reshape(%295, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %299 = @func_3297(%296, %297, %298) /* ty=(Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) */;
  %300 = cast(%var_13711, dtype="float64") /* ty=Tensor[(4, 84), float64] */;
  %301 = erf(%290) /* ty=Tensor[(9, 13, 6), float32] */;
  %302 = @func_8082(%292) /* ty=Tensor[(7, 8, 6), float32] */;
  %303 = %299.0;
  %304 = sqrt(%300) /* ty=Tensor[(4, 84), float64] */;
  (%301, %302, %303, meta[relay.Constant][12] /* ty=Tensor[(99), float64] */, %var_13722, %var_13723, %304)
}

def @func_17937(%var_17924: Tensor[(11, 15, 2), uint64], %var_17925: Tensor[(11, 15, 2), uint64]) -> (Tensor[(11, 15, 2), uint64], Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64]) {
  %305 = cast(%var_17925, dtype="uint64") /* ty=Tensor[(11, 15, 2), uint64] */;
  %306 = shape_of(%var_17924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_17924, dtype="uint64") /* ty=Tensor[(11, 15, 2), uint64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %309 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 72), uint64] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %310 = reshape(%309, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %311 = @func_1716(%310) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %312 = minimum(%307, %308) /* ty=Tensor[(11, 15, 2), uint64] */;
  %313 = %311.0;
  (%312, %313, meta[relay.Constant][13] /* ty=Tensor[(12, 72), uint64] */)
}

def @func_20357() -> Tensor[(15, 2, 13), int16] {
  @func_15659() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_13235() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) {
  %314 = @func_11474() /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %316 = cast(meta[relay.Constant][15] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %317 = %314.1;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %319 = reshape(%315, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float64] */;
  %320 = reshape(%316, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %321 = reshape(%318, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %322 = @func_3297(%319, %320, %321) /* ty=(Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) */;
  %323 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %324 = %322.2;
  %325 = %323.0;
  (%317, %324, meta[relay.Constant][14] /* ty=Tensor[(99), float64] */, meta[relay.Constant][15] /* ty=Tensor[(396), float64] */, %325)
}

def @func_9216() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
  %326 = @func_9116() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %327 = @func_7748() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %328 = %326.0;
  %329 = %327.1;
  %330 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  (%328, %329, %330)
}

def @func_18291() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(144), bool]) {
  %331 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
  %332 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %333 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %334 = reshape(%332, newshape=[72, 2]) /* ty=Tensor[(72, 2), bool] */;
  %335 = reshape(%333, newshape=[72, 2]) /* ty=Tensor[(72, 2), bool] */;
  %336 = @func_16966(%334, %335) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) */;
  %337 = %331.0;
  %338 = %336.0;
  (%337, %338, meta[relay.Constant][16] /* ty=Tensor[(144), bool] */)
}

def @func_17735() -> (Tensor[(672), float64],) {
  %339 = @func_12506() /* ty=(Tensor[(672), float64],) */;
  %340 = %339.0;
  (%340,)
}

def @func_17595(%var_17591: Tensor[(3, 900), float32]) -> (Tensor[(15, 16, 8), float32], Tensor[(15, 15, 12), float32], Tensor[(3, 900), float32]) {
  %341 = cast(%var_17591, dtype="float32") /* ty=Tensor[(3, 900), float32] */;
  %342 = reshape(%341, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float32] */;
  %343 = @func_12772(%342) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) */;
  %344 = @func_10815() /* ty=Tensor[(15, 16, 8), float32] */;
  %345 = %343.1;
  (%344, %345, %var_17591)
}

def @func_11748() -> Tensor[(15, 16, 8), float32] {
  @func_2710() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_19521() -> (Tensor[(15, 2, 13), int16],) {
  %346 = @func_16366() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %347 = %346.0;
  (%347,)
}

def @func_11117() -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64]) {
  %348 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 7), float64] */;
  %349 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %350 = log10(%348) /* ty=Tensor[(14, 2, 7), float64] */;
  %351 = %349.0;
  (%350, %351)
}

def @func_17810() -> (Tensor[(15, 16, 8), float32],) {
  %352 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %353 = %352.3;
  (%353,)
}

def @func_7574() -> (Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) {
  %354 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %355 = reshape(%354, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
  %356 = @func_6903(%355) /* ty=(Tensor[(16, 4, 9), float64],) */;
  %357 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %358 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
  %359 = %356.0;
  %360 = %357.1;
  (%358, %359, meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, %360)
}

def @func_5627() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %361 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %362 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %363 = %361.1;
  %364 = %362.0;
  (%363, %364)
}

def @func_8952() -> (Tensor[(390), int16], Tensor[(390), float32]) {
  %365 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %366 = %365.1;
  %367 = @func_4965() /* ty=Tensor[(390), float32] */;
  (%366, %367)
}

def @func_12825() -> (Tensor[(390), int16],) {
  %368 = @func_12173() /* ty=(Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %369 = %368.2;
  (%369,)
}

def @func_11838() -> (Tensor[(550), float32], Tensor[(1920), float32]) {
  %370 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %371 = @func_11170() /* ty=Tensor[(550), float32] */;
  %372 = %370.2;
  (%371, %372)
}

def @func_9593() -> (Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
  %373 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %374 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %375 = @func_8264() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */;
  %376 = %373.1;
  %377 = @func_8776() /* ty=Tensor[(15, 2, 13), int16] */;
  %378 = %374.1;
  %379 = %375.1;
  (%376, %377, %378, %379)
}

def @func_18451() -> Tensor[(2, 11, 4), bool] {
  %380 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 11, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 11, 4), bool] */;
  %381 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(2, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 11, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 11, 4), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%382, %383) /* ty=Tensor[(2, 11, 4), bool] */
}

def @func_13552() -> (Tensor[(4, 168), float64], Tensor[(1920), float32]) {
  %384 = @func_11838() /* ty=(Tensor[(550), float32], Tensor[(1920), float32]) */;
  %385 = @func_7540() /* ty=Tensor[(4, 168), float64] */;
  %386 = %384.1;
  (%385, %386)
}

def @func_17423() -> (Tensor[(15, 16, 8), float32],) {
  %387 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %388 = %387.0;
  (%388,)
}

def @func_2237(%var_2174: Tensor[(5, 42), int8], %var_2221: Tensor[(550), float32]) -> (Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) {
  %389 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %390 = %389.1;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(390), float32] */;
  %392 = cast(%390, dtype="int16") /* ty=Tensor[(390), int16] */;
  %393 = cast(%var_2174, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
  %394 = reshape(%392, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %395 = reshape(%393, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %396 = @func_1339(%394, %395) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
  %397 = %396.5;
  %398 = cast(%var_2221, dtype="int64") /* ty=Tensor[(550), int64] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(1), int32] */;
  %400 = cast(%397, dtype="int64") /* ty=Tensor[(550), int64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), int64] */;
  %402 = log(%391) /* ty=Tensor[(390), float32] */;
  %403 = multiply(%400, %401) /* ty=Tensor[(550), int64] */;
  (%var_2174, %402, %403)
}

def @func_17961() -> (Tensor[(672), float64],) {
  %404 = @func_10225() /* ty=(Tensor[(672), float64],) */;
  %405 = %404.0;
  (%405,)
}

def @func_11070() -> (Tensor[(390), int16],) {
  %406 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %407 = %406.1;
  (%407,)
}

def @func_14642(%var_14606: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(144), bool], Tensor[(5, 42), int8], Tensor[(210), int8], Tensor[(550), float32], Tensor[(390), int16], Tensor[(252), float32], Tensor[(1920), bool], Tensor[(15, 2, 13), int16]) {
  %408 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %411 = cast(meta[relay.Constant][21] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %412 = reshape(%410, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %413 = reshape(%411, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %414 = @func_6969(%412, %413) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
  %415 = cast(%var_14606, dtype="int8") /* ty=Tensor[(210), int8] */;
  %416 = cast(meta[relay.Constant][23] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %417 = reshape(%415, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
  %418 = reshape(%416, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %419 = @func_2237(%417, %418) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
  %420 = cast(meta[relay.Constant][24] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %421 = reshape(%420, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
  %422 = @func_2105(%421) /* ty=(Tensor[(12, 3, 7), float32], Tensor[(390), int16]) */;
  %423 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %424 = reshape(%423, newshape=[144]) /* ty=Tensor[(144), bool] */;
  %425 = @func_11916(%424) /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) */;
  %426 = %425.1;
  %427 = cast(%426, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %428 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(1920), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %429 = cast(meta[relay.Constant][21] /* ty=Tensor[(1920), float32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?), bool] */;
  %431 = @func_13447() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %432 = %414.1;
  %433 = %419.0;
  %434 = %422.1;
  %435 = not_equal(%429, %430) /* ty=Tensor[(1920), bool] */;
  %436 = %431.0;
  (%409, %432, meta[relay.Constant][22] /* ty=Tensor[(144), bool] */, %433, %var_14606, meta[relay.Constant][23] /* ty=Tensor[(550), float32] */, %434, meta[relay.Constant][24] /* ty=Tensor[(252), float32] */, %435, %436)
}

def @func_10999() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %437 = @func_6337() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) */;
  %438 = @func_9058() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %439 = @func_10668() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %440 = %437.3;
  %441 = @func_10170() /* ty=Tensor[(390), int16] */;
  %442 = @func_4014() /* ty=Tensor[(672), float64] */;
  %443 = %438.1;
  %444 = %439.0;
  (%440, %441, %442, %443, %444)
}

def @func_4340() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %445 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %446 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %447 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %448 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %449 = %445.0;
  %450 = %446.0;
  %451 = %447.1;
  %452 = %448.1;
  %453 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%449, %450, %451, %452, %453)
}

def @func_2543() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) {
  %454 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %455 = cast(meta[relay.Constant][25] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
  %456 = cast(meta[relay.Constant][26] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %457 = reshape(%455, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
  %458 = reshape(%456, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %459 = @func_2237(%457, %458) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
  %460 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %461 = %454.1;
  %462 = %459.1;
  %463 = %460.4;
  (%461, %462, meta[relay.Constant][25] /* ty=Tensor[(105, 2), int8] */, meta[relay.Constant][26] /* ty=Tensor[(550), float32] */, %463)
}

def @func_6969(%var_6949: Tensor[(390), int16], %var_6960: Tensor[(1920), float32]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) {
  %464 = cast(%var_6949, dtype="int16") /* ty=Tensor[(390), int16] */;
  %465 = reshape(%464, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %466 = @func_4769(%465) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
  %467 = @func_5061() /* ty=Tensor[(1920), float32] */;
  %468 = cast(%var_6960, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(1), int32] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?), bool] */;
  %472 = %466.0;
  %473 = equal(%470, %471) /* ty=Tensor[(1920), bool] */;
  (%472, %var_6949, %473)
}

def @func_4682() -> (Tensor[(15, 16, 8), float64],) {
  %474 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %475 = %474.0;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %477 = sigmoid(%476) /* ty=Tensor[(15, 16, 8), float64] */;
  (%477,)
}

def @func_14838() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %478 = @func_9593() /* ty=(Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */;
  %479 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %480 = %478.2;
  %481 = %479.0;
  (%480, %481)
}

def @func_4551() -> (Tensor[(15, 2, 13), int16],) {
  %482 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  (%482,)
}

def @func_11646() -> (Tensor[(672), float64],) {
  %483 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%483,)
}

def @func_10225() -> (Tensor[(672), float64],) {
  %484 = @func_9254() /* ty=Tensor[(672), float64] */;
  (%484,)
}

def @func_2006(%var_1968: Tensor[(6, 7, 16), float32], %var_1981: Tensor[(210), int8], %var_1982: Tensor[(390), int16]) -> (Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %485 = cast(%var_1968, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %486 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(6, 7, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %489 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 7, 16), float32] */, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %490 = shape_of(%var_1968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%var_1968, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %493 = cast(%var_1981, dtype="int8") /* ty=Tensor[(210), int8] */;
  %494 = cast(%var_1981, dtype="int8") /* ty=Tensor[(210), int8] */;
  %495 = cast(%var_1982, dtype="int16") /* ty=Tensor[(390), int16] */;
  %496 = reshape(%493, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %497 = reshape(%494, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %498 = reshape(%495, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %499 = @func_398(%496, %497, %498) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %500 = cast(%var_1982, dtype="float32") /* ty=Tensor[(390), float32] */;
  %501 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %502 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %503 = divide(%487, %488) /* ty=Tensor[(6, 7, 16), float32] */;
  %504 = power(%491, %492) /* ty=Tensor[(6, 7, 16), float64] */;
  %505 = %499.4;
  %506 = atan(%500) /* ty=Tensor[(390), float32] */;
  %507 = %501.0;
  %508 = %502.1;
  (%503, %504, %505, %var_1981, %506, %507, %508)
}

def @func_17536(%var_17531: Tensor[(3, 11, 5), int32], %var_17532: Tensor[(3, 11, 5), int32]) -> Tensor[(3, 11, 5), bool] {
  %509 = cast(%var_17532, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
  %510 = shape_of(%var_17531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%var_17531, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%511, %512) /* ty=Tensor[(3, 11, 5), bool] */
}

def @func_15746() -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
  %513 = @func_7748() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %514 = @func_11543() /* ty=Tensor[(672), float64] */;
  %515 = %513.0;
  %516 = @func_5871() /* ty=Tensor[(672), float64] */;
  (%514, %515, %516)
}

def @func_6518(%var_6455: Tensor[(6, 9, 14), float32], %var_6456: Tensor[(6, 9, 14), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 9, 14), float64]) {
  %517 = cast(%var_6456, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %518 = shape_of(%var_6455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_6455, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %521 = floor_mod(%519, %520) /* ty=Tensor[(6, 9, 14), float32] */;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(6, 9, 14), float64] */;
  %523 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %524 = log(%522) /* ty=Tensor[(6, 9, 14), float64] */;
  (%523, %524)
}

def @func_1465() -> (Tensor[(15, 16, 8), float32],) {
  %525 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %526 = %525.0;
  (%526,)
}

def @func_19857() -> Tensor[(390), int16] {
  %527 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
  %527.4
}

def @func_19482() -> (Tensor[(15, 16, 8), float32],) {
  %528 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %529 = %528.0;
  (%529,)
}

def @func_9891(%var_9875: Tensor[(110), int32]) -> (Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) {
  %530 = @func_8752() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %531 = cast(meta[relay.Constant][28] /* ty=Tensor[(336, 1), float64] */, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
  %532 = reshape(%531, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %533 = @func_4520(%532) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %535 = cast(meta[relay.Constant][29] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %536 = reshape(%534, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %537 = reshape(%535, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %538 = @func_8409(%536, %537) /* ty=(Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) */;
  %539 = cast(%var_9875, dtype="int32") /* ty=Tensor[(110), int32] */;
  %540 = cast(%var_9875, dtype="int32") /* ty=Tensor[(110), int32] */;
  %541 = reshape(%539, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %542 = reshape(%540, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %543 = @func_8432(%541, %542) /* ty=(Tensor[(5, 2, 11), bool],) */;
  %544 = %530.0;
  %545 = %533.0;
  %546 = %538.0;
  %547 = %543.0;
  (%544, %545, meta[relay.Constant][28] /* ty=Tensor[(336, 1), float64] */, %546, meta[relay.Constant][29] /* ty=Tensor[(455), uint8] */, %547, %var_9875)
}

def @func_12564() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %548 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %549 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %550 = %548.0;
  %551 = %549.0;
  %552 = @func_6701() /* ty=Tensor[(672), float64] */;
  (%550, %551, %552)
}

def @func_19138(%var_19128: int32) -> (Tensor[(7, 10, 1), int32],) {
  %553 = cast(%var_19128, dtype="int32") /* ty=int32 */;
  %554 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 10, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 10, 1), int32] */;
  %555 = left_shift(%553, %554) /* ty=Tensor[(7, 10, 1), int32] */;
  (%555,)
}

def @func_17152() -> Tensor[(15, 2, 13), int16] {
  %556 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %556.0
}

def @func_6434(%var_6404: Tensor[(336), float64]) -> (Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) {
  %557 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %558 = cast(%var_6404, dtype="float64") /* ty=Tensor[(336), float64] */;
  %559 = reshape(%558, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %560 = @func_4520(%559) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %561 = %557.2;
  %562 = %560.2;
  (%561, %562, %var_6404)
}

def @func_8752() -> (Tensor[(15, 16, 8), float32],) {
  %563 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  (%563,)
}

def @func_12772(%var_12740: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) {
  %564 = cast(%var_12740, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
  %565 = cast(%var_12740, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
  %566 = sinh(%564) /* ty=Tensor[(15, 15, 12), float32] */;
  %567 = sin(%565) /* ty=Tensor[(15, 15, 12), float32] */;
  (%566, %567)
}

def @func_4636() -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) {
  %568 = cast(meta[relay.Constant][31] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %569 = reshape(%568, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %570 = @func_3119(%569) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) */;
  %571 = @func_4073() /* ty=Tensor[(390), int16] */;
  %572 = %570.0;
  (%571, %572, meta[relay.Constant][31] /* ty=Tensor[(1920), float32] */)
}

def @func_15358() -> Tensor[(390), float32] {
  %573 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %573.0
}

def @func_11042() -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %574 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
  %575 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%574, %575)
}

def @func_11527() -> (Tensor[(390), int16],) {
  %576 = @func_11070() /* ty=(Tensor[(390), int16],) */;
  %577 = %576.0;
  (%577,)
}

def @func_13075() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) {
  %578 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %579 = @func_8686() /* ty=(Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) */;
  %580 = %578.0;
  %581 = %579.2;
  (%580, %581)
}

def @func_9254() -> Tensor[(672), float64] {
  %582 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %582.0
}

def @func_8409(%var_8359: Tensor[(7, 13, 5), uint8], %var_8360: Tensor[(7, 13, 5), uint8]) -> (Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) {
  %583 = cast(%var_8360, dtype="bool") /* ty=Tensor[(7, 13, 5), bool] */;
  %584 = shape_of(%var_8359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%var_8359, dtype="bool") /* ty=Tensor[(7, 13, 5), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = cast(%var_8359, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %588 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %589 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %590 = equal(%585, %586) /* ty=Tensor[(7, 13, 5), bool] */;
  %591 = acos(%587) /* ty=Tensor[(7, 13, 5), float32] */;
  %592 = %588.1;
  %593 = %589.1;
  (%590, %591, %592, %593)
}

def @func_11806() -> (Tensor[(390), float32],) {
  %594 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %595 = %594.1;
  (%595,)
}

def @func_7062() -> (Tensor[(390), float32],) {
  %596 = @func_4965() /* ty=Tensor[(390), float32] */;
  (%596,)
}

def @func_17212() -> (Tensor[(672), float64],) {
  %597 = @func_15629() /* ty=(Tensor[(672), float64],) */;
  %598 = %597.0;
  (%598,)
}

def @func_13001() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %599 = @func_12564() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %600 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %601 = %599.0;
  %602 = %600.1;
  (%601, %602)
}

def @func_13483() -> (Tensor[(5, 3, 14), int8],) {
  %603 = @func_9528() /* ty=Tensor[(5, 3, 14), int8] */;
  (%603,)
}

def @func_18144() -> (Tensor[(390), float32],) {
  %604 = @func_7062() /* ty=(Tensor[(390), float32],) */;
  %605 = %604.0;
  (%605,)
}

def @func_3243() -> Tensor[(672), float64] {
  %606 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %606.0
}

def @func_4951() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %607 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %608 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
  %609 = %607.0;
  (%608, %609)
}

def @func_15024() -> (Tensor[(576), float64], Tensor[(672), float32]) {
  %610 = @func_7574() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) */;
  %611 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
  %612 = %610.2;
  %613 = %611.2;
  (%612, %613)
}

def @func_12580() -> Tensor[(15, 2, 13), int16] {
  @func_12131() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_15932() -> Tensor[(390), int16] {
  %614 = @func_13164() /* ty=(Tensor[(390), int16],) */;
  %614.0
}

def @func_17298() -> (Tensor[(15, 2, 13), int16],) {
  %615 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %616 = %615.0;
  (%616,)
}

def @func_1507() -> (Tensor[(15, 2, 13), int16],) {
  %617 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %618 = %617.1;
  (%618,)
}

def @func_16507() -> Tensor[(15, 16, 8), float32] {
  @func_9716() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_18185() -> Tensor[(390), int16] {
  @func_8238() /* ty=Tensor[(390), int16] */
}

def @func_8686() -> (Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) {
  %619 = @func_8170() /* ty=(Tensor[(672), float64], Tensor[(210), int8]) */;
  %620 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %621 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %622 = %619.1;
  %623 = %620.1;
  %624 = %621.1;
  (%622, %623, %624)
}

def @func_14091() -> (Tensor[(15, 2, 13), int16],) {
  %625 = @func_12700() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %626 = %625.0;
  (%626,)
}

def @func_15451() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(15, 15, 12), float32], Tensor[(2700, 1), float32]) {
  %627 = @func_8528() /* ty=(Tensor[(672), float64],) */;
  %628 = cast(meta[relay.Constant][32] /* ty=Tensor[(2700, 1), float32] */, dtype="float32") /* ty=Tensor[(2700, 1), float32] */;
  %629 = reshape(%628, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float32] */;
  %630 = @func_12772(%629) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) */;
  %631 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
  %632 = %627.0;
  %633 = %630.0;
  (%631, %632, %633, meta[relay.Constant][32] /* ty=Tensor[(2700, 1), float32] */)
}

def @func_15164() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %634 = @func_5608() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %635 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %636 = %634.0;
  (%635, %636)
}

def @func_20298() -> (Tensor[(15, 16, 8), float64],) {
  %637 = @func_15386() /* ty=(Tensor[(15, 16, 8), float64],) */;
  %638 = %637.0;
  (%638,)
}

def @func_10668() -> (Tensor[(15, 16, 8), float32],) {
  %639 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %640 = %639.0;
  (%640,)
}

def @func_12669(%var_12661: Tensor[(390), int16]) -> (Tensor[(3, 15, 1), bool], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %641 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %642 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 15, 1), uint64] */, dtype="bool") /* ty=Tensor[(3, 15, 1), bool] */;
  %643 = cast(%var_12661, dtype="int16") /* ty=Tensor[(390), int16] */;
  %644 = cast(%var_12661, dtype="int16") /* ty=Tensor[(390), int16] */;
  %645 = reshape(%643, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %646 = reshape(%644, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %647 = @func_182(%645, %646) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %648 = equal(%641, %642) /* ty=Tensor[(3, 15, 1), bool] */;
  %649 = %647.0;
  (%648, %649, %var_12661)
}

def @func_10170() -> Tensor[(390), int16] {
  @func_4073() /* ty=Tensor[(390), int16] */
}

def @func_16352() -> (Tensor[(672), float64],) {
  %650 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %651 = %650.0;
  (%651,)
}

def @func_4795() -> (Tensor[(672), float64],) {
  %652 = @func_4014() /* ty=Tensor[(672), float64] */;
  (%652,)
}

def @func_3119(%var_3114: Tensor[(15, 16, 8), float32]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) {
  %653 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %654 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  %655 = cast(%var_3114, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %659 = %653.0;
  %660 = add(%657, %658) /* ty=Tensor[(15, 16, 8), uint8] */;
  (%659, %660)
}

def @func_9688(%var_9623: Tensor[(144), bool]) -> (Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) {
  %661 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %662 = cast(%var_9623, dtype="bool") /* ty=Tensor[(144), bool] */;
  %663 = cast(%var_9623, dtype="bool") /* ty=Tensor[(144), bool] */;
  %664 = reshape(%662, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %665 = reshape(%663, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %666 = @func_9382(%664, %665) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
  %667 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %668 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %669 = reshape(%668, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %670 = @func_4520(%669) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %671 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %672 = reshape(%671, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %673 = @func_4520(%672) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %674 = %661.0;
  %675 = %666.0;
  %676 = %667.1;
  %677 = %670.2;
  %678 = %673.1;
  (%674, %675, %var_9623, %676, %677, meta[relay.Constant][35] /* ty=Tensor[(336), float64] */, %678)
}

def @func_800(%var_713: Tensor[(10, 5, 11), float32], %var_718: Tensor[(210), int8], %var_730: Tensor[(672), float64]) -> (Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) {
  %679 = cast(%var_713, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %680 = cast(%var_718, dtype="int8") /* ty=Tensor[(210), int8] */;
  %681 = cast(%var_718, dtype="int8") /* ty=Tensor[(210), int8] */;
  %682 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
  %683 = reshape(%680, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %684 = reshape(%681, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %685 = reshape(%682, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %686 = @func_398(%683, %684, %685) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %687 = %686.2;
  %688 = cast(%687, dtype="int16") /* ty=Tensor[(390), int16] */;
  %689 = cast(%687, dtype="int16") /* ty=Tensor[(390), int16] */;
  %690 = reshape(%688, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %691 = reshape(%689, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %692 = @func_182(%690, %691) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %693 = cast(%var_730, dtype="float64") /* ty=Tensor[(672), float64] */;
  %694 = %692.0;
  %695 = cast(%694, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %696 = reshape(%693, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %697 = reshape(%695, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %698 = @func_688(%696, %697) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %699 = %698.2;
  %700 = cast(%699, dtype="int16") /* ty=Tensor[(390), int16] */;
  %701 = cast(%699, dtype="int16") /* ty=Tensor[(390), int16] */;
  %702 = reshape(%700, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %703 = reshape(%701, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %704 = @func_182(%702, %703) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %705 = cast(%var_730, dtype="float64") /* ty=Tensor[(672), float64] */;
  %706 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
  %707 = reshape(%705, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %708 = reshape(%706, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %709 = @func_688(%707, %708) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %710 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
  %711 = cast(%694, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %712 = reshape(%710, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %713 = reshape(%711, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %714 = @func_182(%712, %713) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %715 = sin(%679) /* ty=Tensor[(10, 5, 11), float32] */;
  %716 = %704.0;
  %717 = %709.0;
  %718 = %714.0;
  (%715, %687, %var_718, meta[relay.Constant][36] /* ty=Tensor[(1, 390), int16] */, %694, %699, %var_730, %716, %717, %718)
}

def @func_14215() -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
  %719 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %720 = cast(meta[relay.Constant][37] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %721 = %719.0;
  %722 = cast(%721, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %723 = reshape(%720, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %724 = reshape(%722, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %725 = @func_688(%723, %724) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %726 = %725.0;
  (%721, %726, meta[relay.Constant][37] /* ty=Tensor[(672), float64] */)
}

def @func_19468(%var_19406: Tensor[(2, 6, 6), bool]) -> (Tensor[(2, 6, 6), bool], Tensor[(15, 16, 8), float32], Tensor[(2, 6, 6), float64], Tensor[(105, 2), float64]) {
  %727 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %728 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_19406, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %731 = @func_18596() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %733 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_19406, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = logical_or(%734, %735) /* ty=Tensor[(2, 6, 6), bool] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %738 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%var_19406, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %741 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %742 = less(%729, %730) /* ty=Tensor[(2, 6, 6), bool] */;
  %743 = %731.1;
  %744 = mod(%739, %740) /* ty=Tensor[(2, 6, 6), float64] */;
  %745 = %741.1;
  (%742, %743, %744, %745)
}

def @func_17508() -> (Tensor[(15, 2, 13), int16],) {
  %746 = @func_17298() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %747 = %746.0;
  (%747,)
}

def @func_11775(%var_11772: Tensor[(864), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) {
  %748 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %749 = @func_10852() /* ty=(Tensor[(390), int16],) */;
  %750 = cast(%var_11772, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %751 = reshape(%750, newshape=[12, 72]) /* ty=Tensor[(12, 72), uint64] */;
  %752 = @func_2087(%751) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) */;
  %753 = %748.0;
  %754 = %749.0;
  %755 = %752.1;
  (%753, %754, %755, %var_11772)
}

def @func_15210(%var_15172: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %756 = cast(%var_15172, dtype="float64") /* ty=Tensor[(14, 15, 8), float64] */;
  %757 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %758 = @func_10225() /* ty=(Tensor[(672), float64],) */;
  %759 = @func_6635() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %760 = cos(%756) /* ty=Tensor[(14, 15, 8), float64] */;
  %761 = %757.0;
  %762 = %758.0;
  %763 = %759.0;
  (%760, %761, %762, %763)
}

def @func_8432(%var_8422: Tensor[(5, 2, 11), int32], %var_8423: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), bool],) {
  %764 = cast(%var_8423, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %765 = shape_of(%var_8422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%var_8422, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = less_equal(%766, %767) /* ty=Tensor[(5, 2, 11), bool] */;
  (%768,)
}

def @func_13905() -> Tensor[(390), int16] {
  %769 = @func_10811() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %769.1
}

def @func_5861(%var_5853: float32) -> (Tensor[(11, 5, 1), float32], Tensor[(15, 2, 13), int16]) {
  %770 = cast(%var_5853, dtype="float32") /* ty=float32 */;
  %771 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 1), float32] */;
  %772 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %773 = mod(%770, %771) /* ty=Tensor[(11, 5, 1), float32] */;
  %774 = %772.0;
  (%773, %774)
}

def @func_16218() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %775 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %776 = @func_14189() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %777 = %775.0;
  %778 = %776.1;
  (%777, %778)
}

def @func_15972() -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %779 = @func_14017() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %780 = @func_6915() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %781 = @func_10170() /* ty=Tensor[(390), int16] */;
  %782 = @func_4073() /* ty=Tensor[(390), int16] */;
  %783 = %779.0;
  %784 = %780.0;
  (%781, %782, %783, %784)
}

def @func_19297() -> (Tensor[(15, 2, 13), int16],) {
  %785 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %786 = %785.0;
  (%786,)
}

def @func_3590() -> (Tensor[(15, 2, 13), int16],) {
  %787 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %788 = %787.0;
  %789 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 2, 13), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %793 = add(%791, %792) /* ty=Tensor[(15, 2, 13), int16] */;
  (%793,)
}

def @func_7118() -> (Tensor[(672), float64], Tensor[(390), float32]) {
  %794 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %795 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %796 = %794.0;
  %797 = %795.1;
  (%796, %797)
}

def @func_18100() -> (Tensor[(396), float64], Tensor[(15, 16, 8), float32]) {
  %798 = @func_16758() /* ty=(Tensor[(396), float64],) */;
  %799 = %798.0;
  %800 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%799, %800)
}

def @func_15065() -> Tensor[(15, 2, 13), int16] {
  %801 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %801.0
}

def @func_7540() -> Tensor[(4, 168), float64] {
  %802 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %803 = %802.2;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  erf(%804) /* ty=Tensor[(4, 168), float64] */
}

def @func_19265() -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  %805 = @func_16613() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %806 = @func_10644() /* ty=(Tensor[(672), float64],) */;
  %807 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %808 = %805.1;
  %809 = %806.0;
  %810 = %807.0;
  (%808, %809, %810)
}

def @func_18339() -> (Tensor[(15, 16, 8), float32], Tensor[(390), float32]) {
  %811 = @func_11445() /* ty=(Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) */;
  %812 = @func_15557() /* ty=(Tensor[(390), float32],) */;
  %813 = %811.1;
  %814 = %812.0;
  (%813, %814)
}

def @func_6915() -> (Tensor[(15, 2, 13), int16],) {
  %815 = @func_3982() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %816 = %815.0;
  (%816,)
}

def @func_7169() -> Tensor[(15, 16, 8), float32] {
  %817 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %817.1
}

def @func_12506() -> (Tensor[(672), float64],) {
  %818 = @func_5635() /* ty=Tensor[(672), float64] */;
  (%818,)
}

def @func_6887() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %819 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %820 = @func_6635() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %821 = %819.0;
  %822 = %820.0;
  (%821, %822)
}

def @func_5061() -> Tensor[(1920), float32] {
  %823 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %823.2
}

def @func_6701() -> Tensor[(672), float64] {
  %824 = @func_5627() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %824.1
}

def @func_5608() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %825 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %826 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
  %827 = %825.0;
  (%826, %827)
}

def @func_16132() -> (Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) {
  %828 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %829 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(8, 11, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %832 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  %833 = @func_14838() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %834 = minimum(%830, %831) /* ty=Tensor[(8, 11, 11), float32] */;
  %835 = sinh(%832) /* ty=Tensor[(8, 11, 11), float64] */;
  %836 = %833.0;
  (%834, %835, %836)
}

def @func_16966(%var_16944: Tensor[(72, 2), bool], %var_16946: Tensor[(72, 2), bool]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) {
  %837 = cast(%var_16944, dtype="bool") /* ty=Tensor[(72, 2), bool] */;
  %838 = cast(%var_16944, dtype="bool") /* ty=Tensor[(72, 2), bool] */;
  %839 = reshape(%837, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %840 = reshape(%838, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %841 = @func_9382(%839, %840) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
  %842 = cast(%var_16946, dtype="uint16") /* ty=Tensor[(72, 2), uint16] */;
  %843 = shape_of(%var_16944, dtype="int32") /* ty=Tensor[(2), int32] */;
  %844 = cast(%var_16944, dtype="uint16") /* ty=Tensor[(72, 2), uint16] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %846 = @func_15401() /* ty=Tensor[(672), float64] */;
  %847 = %841.3;
  %848 = subtract(%844, %845) /* ty=Tensor[(72, 2), uint16] */;
  (%846, %847, %848)
}

def @func_6903(%var_6900: Tensor[(16, 4, 9), float64]) -> (Tensor[(16, 4, 9), float64],) {
  %849 = cast(%var_6900, dtype="float64") /* ty=Tensor[(16, 4, 9), float64] */;
  %850 = atanh(%849) /* ty=Tensor[(16, 4, 9), float64] */;
  (%850,)
}

def @func_1941() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %851 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %852 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %853 = %851.1;
  %854 = %852.0;
  (%853, %854)
}

def @func_2871() -> (Tensor[(672), float64],) {
  %855 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %856 = %855.1;
  (%856,)
}

def @func_16428() -> (Tensor[(390), float32],) {
  %857 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %858 = %857.0;
  (%858,)
}

def @func_7148(%var_7123: Tensor[(4, 12, 1), int8], %var_7124: Tensor[(4, 12, 16), int8], %var_7129: Tensor[(4, 12, 16), int8]) -> (Tensor[(4, 12, 16), float32], Tensor[(390), int16]) {
  %859 = cast(%var_7123, dtype="int8") /* ty=Tensor[(4, 12, 1), int8] */;
  %860 = cast(%var_7124, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
  %861 = maximum(%859, %860) /* ty=Tensor[(4, 12, 16), int8] */;
  %862 = cast(%var_7129, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%861, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %866 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %867 = floor_divide(%864, %865) /* ty=Tensor[(4, 12, 16), float32] */;
  %868 = %866.1;
  (%867, %868)
}

def @func_3359() -> Tensor[(672), float64] {
  %869 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %869.0
}

def @func_5871() -> Tensor[(672), float64] {
  %870 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %870.0
}

def @func_19735() -> Tensor[(5, 3, 14), int8] {
  %871 = @func_14273() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) */;
  %871.1
}

def @func_12046() -> (Tensor[(15, 16, 8), float32],) {
  %872 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%872,)
}

def @func_12700() -> (Tensor[(15, 2, 13), int16],) {
  %873 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %874 = %873.0;
  (%874,)
}

def @func_5406(%var_5336: Tensor[(390), float32]) -> (Tensor[(390), uint32], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %875 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %876 = %875.1;
  %877 = cast(%var_5336, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(1), int32] */;
  %879 = cast(%876, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %881 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %882 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %883 = left_shift(%879, %880) /* ty=Tensor[(390), uint32] */;
  %884 = %881.0;
  %885 = %882.2;
  (%883, %884, %885)
}

def @func_12318() -> (Tensor[(672), float64],) {
  %886 = @func_7830() /* ty=Tensor[(672), float64] */;
  (%886,)
}

def @func_7442() -> (Tensor[(672), float64],) {
  %887 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %888 = %887.0;
  (%888,)
}

def @func_11445() -> (Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) {
  %889 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %890 = %889.0;
  %891 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
  %892 = cast(%891, dtype="uint8") /* ty=Tensor[(15, 2, 13), uint8] */;
  %893 = shape_of(%890, dtype="int32") /* ty=Tensor[(1), int32] */;
  %894 = cast(%890, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %896 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %897 = logical_xor(%894, %895) /* ty=Tensor[(390), uint8] */;
  %898 = %896.1;
  (%897, %898)
}

def @func_16327() -> (Tensor[(672), float64], Tensor[(14, 2, 7), float64]) {
  %899 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %900 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %901 = %899.0;
  %902 = %900.1;
  (%901, %902)
}

def @func_7748() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %903 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %904 = %903.0;
  %905 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
  (%904, %905)
}

def @func_12008() -> (Tensor[(15, 16, 8), float32],) {
  %906 = @func_5559() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %907 = %906.0;
  (%907,)
}

def @func_17111() -> Tensor[(5, 3, 14), int8] {
  %908 = @func_15888() /* ty=(Tensor[(672), float64], Tensor[(5, 3, 14), int8]) */;
  %908.1
}

def @func_19106() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %909 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %910 = @func_13371() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %911 = @func_14444() /* ty=Tensor[(15, 16, 8), float32] */;
  %912 = %909.0;
  %913 = %910.1;
  (%911, %912, %913)
}

def @func_9450(%var_9411: Tensor[(336), float64]) -> (Tensor[(390), int16], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), bool]) {
  %914 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %915 = cast(%var_9411, dtype="float64") /* ty=Tensor[(336), float64] */;
  %916 = reshape(%915, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %917 = @func_6434(%916) /* ty=(Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) */;
  %918 = %914.0;
  %919 = cast(%918, dtype="int16") /* ty=Tensor[(390), int16] */;
  %920 = reshape(%919, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %921 = @func_4769(%920) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
  %922 = %917.1;
  %923 = %921.1;
  (%918, %922, %var_9411, %923)
}

def @func_10090() -> Tensor[(390), int16] {
  %924 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %924.0
}

def @func_7009() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
  %925 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %926 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %927 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %928 = %925.0;
  %929 = %926.1;
  %930 = %927.0;
  (%928, %929, %930)
}

def @func_8776() -> Tensor[(15, 2, 13), int16] {
  @func_3473() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_8868(%var_8856: Tensor[(336), float32]) -> (Tensor[(390), int16], Tensor[(336), float32], Tensor[(7, 8, 6), float64]) {
  %931 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %932 = cast(%var_8856, dtype="float32") /* ty=Tensor[(336), float32] */;
  %933 = reshape(%932, newshape=[7, 8, 6]) /* ty=Tensor[(7, 8, 6), float32] */;
  %934 = @func_8082(%933) /* ty=Tensor[(7, 8, 6), float32] */;
  %935 = cast(%934, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %936 = %931.0;
  %937 = sqrt(%935) /* ty=Tensor[(7, 8, 6), float64] */;
  (%936, %var_8856, %937)
}

def @func_15557() -> (Tensor[(390), float32],) {
  %938 = @func_11981() /* ty=(Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) */;
  %939 = %938.0;
  (%939,)
}

def @func_19904() -> Tensor[(672), float64] {
  %940 = @func_15148() /* ty=(Tensor[(672), float64],) */;
  %940.0
}

def @func_11981() -> (Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) {
  %941 = cast(meta[relay.Constant][43] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %942 = reshape(%941, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
  %943 = @func_6903(%942) /* ty=(Tensor[(16, 4, 9), float64],) */;
  %944 = @func_7411() /* ty=(Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) */;
  %945 = cast(meta[relay.Constant][44] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %946 = reshape(%945, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %947 = @func_1716(%946) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %948 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %949 = @func_4965() /* ty=Tensor[(390), float32] */;
  %950 = %943.0;
  %951 = @func_11170() /* ty=Tensor[(550), float32] */;
  %952 = %944.3;
  %953 = %947.0;
  %954 = %948.0;
  (%949, %950, meta[relay.Constant][43] /* ty=Tensor[(576), float64] */, %951, %952, %953, meta[relay.Constant][44] /* ty=Tensor[(864), uint64] */, %954)
}

def @func_6106() -> Tensor[(15, 2, 13), int16] {
  %955 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %955.0
}

def @func_11170() -> Tensor[(550), float32] {
  %956 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %956.3
}

def @func_16034() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), float32], Tensor[(390), int16]) {
  %957 = @func_14342() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) */;
  %958 = %957.1;
  %959 = cast(%958, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %960 = reshape(%959, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %961 = @func_3465(%960) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) */;
  %962 = cast(%958, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %963 = %961.0;
  %964 = sin(%962) /* ty=Tensor[(35, 6), float32] */;
  %965 = @func_15932() /* ty=Tensor[(390), int16] */;
  (%963, %964, %965)
}

def @func_8994() -> (Tensor[(5, 3, 14), int8],) {
  %966 = @func_7960() /* ty=Tensor[(5, 3, 14), int8] */;
  (%966,)
}

def @func_4769(%var_4764: Tensor[(15, 2, 13), int16]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), bool]) {
  %967 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %968 = %967.0;
  %969 = cast(%var_4764, dtype="bool") /* ty=Tensor[(15, 2, 13), bool] */;
  %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%968, dtype="bool") /* ty=Tensor[(15, 2, 13), bool] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %973 = @func_3243() /* ty=Tensor[(672), float64] */;
  %974 = logical_and(%971, %972) /* ty=Tensor[(15, 2, 13), bool] */;
  (%973, %974)
}

def @func_10769() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %975 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %976 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %977 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %978 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %979 = %975.0;
  %980 = %976.0;
  %981 = @func_7321() /* ty=Tensor[(390), int16] */;
  %982 = %977.0;
  %983 = %978.0;
  (%979, %980, %981, %982, %983)
}

def @func_12624() -> (Tensor[(390), float32], Tensor[(14, 2, 7), float64]) {
  %984 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %985 = @func_11117() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64]) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_18473() -> (Tensor[(15, 16, 8), float64],) {
  %988 = @func_13075() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) */;
  %989 = %988.1;
  (%989,)
}

def @func_17032() -> (Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(14, 2, 7), float64]) {
  %990 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %991 = @func_9058() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %992 = @func_11117() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64]) */;
  %993 = %990.0;
  %994 = %991.1;
  %995 = %992.0;
  (%993, %994, %995)
}

def @func_13144(%var_13127: Tensor[(14, 16, 10), float32], %var_13132: Tensor[(2, 288), float64]) -> (Tensor[(16, 4, 9), float64], Tensor[(2, 288), float64], Tensor[(14, 16, 10), float32]) {
  %996 = cast(%var_13132, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %997 = reshape(%996, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
  %998 = @func_6903(%997) /* ty=(Tensor[(16, 4, 9), float64],) */;
  %999 = cast(%var_13127, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %1000 = rsqrt(%999) /* ty=Tensor[(14, 16, 10), float32] */;
  %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %1002 = %998.0;
  %1003 = sqrt(%1001) /* ty=Tensor[(14, 16, 10), float32] */;
  (%1002, %var_13132, %1003)
}

def @func_18744() -> (Tensor[(15, 16, 8), float32],) {
  %1004 = @func_12173() /* ty=(Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1005 = %1004.3;
  (%1005,)
}

def @func_2087(%var_2038: Tensor[(12, 72), uint64]) -> (Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) {
  %1006 = cast(%var_2038, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %1007 = reshape(%1006, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %1008 = @func_1716(%1007) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %1009 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1010 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 16), float32] */;
  %1011 = sigmoid(%1010) /* ty=Tensor[(6, 6, 16), float32] */;
  %1012 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 6, 16), float32] */, dtype="int16") /* ty=Tensor[(6, 6, 16), int16] */;
  %1013 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%1011, dtype="int16") /* ty=Tensor[(6, 6, 16), int16] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1016 = multiply(%1014, %1015) /* ty=Tensor[(6, 6, 16), int16] */;
  %1017 = cast(%1011, dtype="uint32") /* ty=Tensor[(6, 6, 16), uint32] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="uint32") /* ty=Tensor[(6, 6, 16), uint32] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1021 = %1008.0;
  %1022 = %1009.1;
  %1023 = minimum(%1019, %1020) /* ty=Tensor[(6, 6, 16), uint32] */;
  (%1021, %var_2038, %1022, %1023)
}

def @func_9716() -> Tensor[(15, 16, 8), float32] {
  @func_2604() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_1610() -> Tensor[(15, 2, 13), int16] {
  %1024 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1024.0
}

def @func_7321() -> Tensor[(390), int16] {
  %1025 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1025.0
}

def @func_7411() -> (Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) {
  %1026 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1027 = %1026.0;
  %1028 = cast(%1027, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1029 = cast(meta[relay.Constant][46] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1030 = reshape(%1028, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1031 = reshape(%1029, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %1032 = @func_6969(%1030, %1031) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
  %1033 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1034 = %1032.2;
  %1035 = %1033.1;
  (%1027, %1034, meta[relay.Constant][46] /* ty=Tensor[(1920), float32] */, %1035)
}

def @func_182(%var_170: Tensor[(15, 2, 13), int16], %var_171: Tensor[(15, 2, 13), int16]) -> (Tensor[(15, 2, 13), int16],) {
  %1036 = cast(%var_171, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1037 = shape_of(%var_170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%var_170, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1040 = minimum(%1038, %1039) /* ty=Tensor[(15, 2, 13), int16] */;
  (%1040,)
}

def @func_20138() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(144), bool]) {
  %1041 = @func_20014() /* ty=(Tensor[(390), float32], Tensor[(390), int16]) */;
  %1042 = cast(meta[relay.Constant][47] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1043 = reshape(%1042, newshape=[144]) /* ty=Tensor[(144), bool] */;
  %1044 = @func_11916(%1043) /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) */;
  %1045 = %1041.1;
  %1046 = %1044.0;
  (%1045, %1046, meta[relay.Constant][47] /* ty=Tensor[(144), bool] */)
}

def @func_10266() -> Tensor[(15, 16, 8), float32] {
  %1047 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1047.0
}

def @func_14486() -> Tensor[(15, 2, 13), int16] {
  @func_12580() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_19712() -> (Tensor[(672), float64],) {
  %1048 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%1048,)
}

def @func_688(%var_644: Tensor[(6, 8, 14), float64], %var_679: Tensor[(390), int16]) -> (Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1049 = cast(%var_644, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
  %1050 = cast(%var_679, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1051 = cast(%var_679, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1052 = reshape(%1050, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1053 = reshape(%1051, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1054 = @func_182(%1052, %1053) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1055 = sigmoid(%1049) /* ty=Tensor[(6, 8, 14), float64] */;
  %1056 = %1054.0;
  (%1055, %1056, %var_679)
}

def @func_19392() -> (Tensor[(672), float64],) {
  %1057 = @func_12114() /* ty=(Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1058 = %1057.1;
  (%1058,)
}

def @func_10482() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1059 = @func_7009() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */;
  %1060 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1061 = %1059.0;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_3691() -> (Tensor[(672), float64],) {
  %1063 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %1064 = %1063.0;
  (%1064,)
}

def @func_16839() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(210, 576), uint16]) {
  %1065 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %1066 = @func_14215() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1067 = @func_15285() /* ty=(Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) */;
  %1068 = %1065.0;
  %1069 = %1066.2;
  %1070 = %1067.0;
  (%1068, %1069, %1070)
}

def @func_19625() -> (Tensor[(15, 16, 8), float32],) {
  %1071 = @func_8752() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_3465(%var_3463: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) {
  %1073 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1074 = cast(%var_3463, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1075 = cast(%var_3463, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1076 = %1073.0;
  %1077 = cast(%1076, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1078 = reshape(%1074, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1079 = reshape(%1075, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1080 = reshape(%1077, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1081 = @func_398(%1078, %1079, %1080) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1082 = %1081.0;
  (%1076, %1082, %var_3463)
}

def @func_14927() -> (Tensor[(672), float64],) {
  %1083 = @func_10644() /* ty=(Tensor[(672), float64],) */;
  %1084 = %1083.0;
  (%1084,)
}

def @func_4720() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
  %1085 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1086 = cast(meta[relay.Constant][48] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1087 = reshape(%1086, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %1088 = @func_4520(%1087) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %1089 = %1085.0;
  %1090 = %1088.1;
  (%1089, %1090, meta[relay.Constant][48] /* ty=Tensor[(336), float64] */)
}

def @func_15345() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16]) {
  %1091 = @func_14342() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) */;
  %1092 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %1093 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
  %1094 = %1091.1;
  %1095 = %1092.4;
  %1096 = @func_14486() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1093, %1094, %1095, %1096)
}

def @func_7697(%var_7650: Tensor[(672), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) {
  %1097 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1098 = %1097.0;
  %1099 = cast(%1098, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1100 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1101 = reshape(%1099, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1102 = reshape(%1100, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1103 = @func_1339(%1101, %1102) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
  %1104 = cast(%var_7650, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1105 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1106 = %1103.1;
  %1107 = cast(%1106, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1108 = reshape(%1104, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %1109 = reshape(%1105, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1110 = reshape(%1107, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1111 = @func_2006(%1108, %1109, %1110) /* ty=(Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %1112 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1113 = @func_7062() /* ty=(Tensor[(390), float32],) */;
  %1114 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1115 = %1111.3;
  %1116 = %1112.0;
  %1117 = %1113.0;
  %1118 = %1114.1;
  (%1098, %1106, meta[relay.Constant][49] /* ty=Tensor[(210), int8] */, %1115, %var_7650, %1116, %1117, %1118)
}

def @func_12239() -> Tensor[(390), float32] {
  %1119 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %1119.1
}

def @func_19053() -> (Tensor[(15, 2, 13), int32], Tensor[(210), int8], Tensor[(210), int8], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %1120 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1121 = %1120.1;
  %1122 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 2, 13), int16] */, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1121, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1126 = cast(meta[relay.Constant][51] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1127 = cast(%1121, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1128 = reshape(%1126, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1129 = reshape(%1127, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1130 = @func_9165(%1128, %1129) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) */;
  %1131 = @func_15164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %1132 = bitwise_xor(%1124, %1125) /* ty=Tensor[(15, 2, 13), int32] */;
  %1133 = %1130.2;
  %1134 = %1131.0;
  %1135 = @func_7830() /* ty=Tensor[(672), float64] */;
  (%1132, %1133, meta[relay.Constant][51] /* ty=Tensor[(210), int8] */, %1134, %1135)
}

def @func_4834() -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) {
  %1136 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1137 = cast(meta[relay.Constant][52] /* ty=Tensor[(210, 1), int8] */, dtype="int8") /* ty=Tensor[(210, 1), int8] */;
  %1138 = reshape(%1137, newshape=[105, 2]) /* ty=Tensor[(105, 2), int8] */;
  %1139 = @func_1792(%1138) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) */;
  %1140 = %1136.0;
  %1141 = %1139.3;
  (%1140, %1141, meta[relay.Constant][52] /* ty=Tensor[(210, 1), int8] */)
}

def @func_8238() -> Tensor[(390), int16] {
  %1142 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1142.0
}

def @func_10811() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %1143 = @func_8335() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %1144 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %1145 = %1143.0;
  %1146 = %1144.0;
  (%1145, %1146)
}

def @func_7830() -> Tensor[(672), float64] {
  %1147 = @func_7411() /* ty=(Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) */;
  %1147.3
}

def @func_8335() -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %1148 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %1149 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %1150 = %1148.0;
  (%1149, %1150)
}

def @func_1631() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1151 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1152 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %1153 = %1151.2;
  (%1152, %1153)
}

def @func_3982() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1154 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %1155 = cast(%1154, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1156 = cast(%1154, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1157 = reshape(%1155, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1158 = reshape(%1156, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1159 = @func_182(%1157, %1158) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1160 = %1159.0;
  (%1154, %1160)
}

def @func_2458() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1161 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1162 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %1163 = %1161.0;
  %1164 = %1162.1;
  (%1163, %1164)
}

def @func_6093() -> (Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) {
  %1165 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1166 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %1167 = @func_4682() /* ty=(Tensor[(15, 16, 8), float64],) */;
  %1168 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1169 = %1165.0;
  %1170 = %1166.4;
  %1171 = %1167.0;
  %1172 = %1168.1;
  (%1169, %1170, %1171, %1172)
}

def @func_2804() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1173 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1174 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1175 = %1173.0;
  %1176 = %1174.0;
  (%1175, %1176)
}

def @func_7932() -> (Tensor[(672), float64], Tensor[(672), float64]) {
  %1177 = @func_3359() /* ty=Tensor[(672), float64] */;
  %1178 = cast(%1177, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1179 = reshape(%1178, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1180 = @func_1536(%1179) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1181 = %1180.2;
  (%1177, %1181)
}

def @func_2164() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %1182 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1183 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1184 = %1182.1;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_14536(%var_14521: Tensor[(110), int32]) -> (Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) {
  %1186 = cast(%var_14521, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1187 = cast(%var_14521, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1188 = reshape(%1186, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %1189 = reshape(%1187, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %1190 = @func_8432(%1188, %1189) /* ty=(Tensor[(5, 2, 11), bool],) */;
  %1191 = cast(%var_14521, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1192 = @func_3359() /* ty=Tensor[(672), float64] */;
  %1193 = %1190.0;
  %1194 = sigmoid(%1191) /* ty=Tensor[(110), float32] */;
  (%1192, %1193, %1194)
}

def @func_3398() -> (Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %1195 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %1196 = %1195.2;
  %1197 = cast(%1196, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %1198 = cosh(%1197) /* ty=Tensor[(4, 168), float32] */;
  %1199 = cast(%1196, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %1200 = shape_of(%1198, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1201 = cast(%1198, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %1202 = dyn.reshape(%1199, %1200, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1203 = cast(meta[relay.Constant][53] /* ty=Tensor[(6, 144), uint64] */, dtype="uint64") /* ty=Tensor[(6, 144), uint64] */;
  %1204 = reshape(%1203, newshape=[12, 72]) /* ty=Tensor[(12, 72), uint64] */;
  %1205 = @func_2087(%1204) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) */;
  %1206 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1207 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %1208 = power(%1201, %1202) /* ty=Tensor[(4, 168), float32] */;
  %1209 = %1205.2;
  %1210 = %1206.0;
  %1211 = %1207.0;
  (%1208, %1209, meta[relay.Constant][53] /* ty=Tensor[(6, 144), uint64] */, %1210, %1211)
}

def @func_8528() -> (Tensor[(672), float64],) {
  %1212 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %1213 = %1212.1;
  (%1213,)
}

def @func_5506(%var_5482: Tensor[(4, 168), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) {
  %1214 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %1215 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %1216 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %1217 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %1218 = %1217.1;
  %1219 = cast(%var_5482, dtype="int32") /* ty=Tensor[(4, 168), int32] */;
  %1220 = shape_of(%1218, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1221 = cast(%1218, dtype="int32") /* ty=Tensor[(4, 168), int32] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1223 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %1224 = %1223.3;
  %1225 = cast(%1224, dtype="float32") /* ty=Tensor[(550), float32] */;
  %1226 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
  %1227 = %1214.1;
  %1228 = %1215.0;
  %1229 = %1216.0;
  %1230 = right_shift(%1221, %1222) /* ty=Tensor[(4, 168), int32] */;
  %1231 = cos(%1225) /* ty=Tensor[(550), float32] */;
  (%1226, %1227, %1228, %1229, %1230, %1231)
}

def @func_7960() -> Tensor[(5, 3, 14), int8] {
  %1232 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %1232.4
}

def @func_13429() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %1233 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1234 = @func_4014() /* ty=Tensor[(672), float64] */;
  %1235 = %1233.0;
  (%1234, %1235)
}

def @func_13412() -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  %1236 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1237 = @func_7830() /* ty=Tensor[(672), float64] */;
  %1238 = %1236.0;
  (%1237, %1238)
}

def @func_12400(%var_12372: Tensor[(6, 2, 12), int16]) -> (Tensor[(15, 16, 8), float32], Tensor[(336), float64], Tensor[(336), float64], Tensor[(6, 2, 12), float32]) {
  %1239 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1240 = cast(meta[relay.Constant][54] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1241 = reshape(%1240, newshape=[336]) /* ty=Tensor[(336), float64] */;
  %1242 = @func_6434(%1241) /* ty=(Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) */;
  %1243 = cast(%var_12372, dtype="int16") /* ty=Tensor[(6, 2, 12), int16] */;
  %1244 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(6, 2, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1245 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 2, 12), int16] */, dtype="int16") /* ty=Tensor[(6, 2, 12), int16] */;
  %1246 = dyn.reshape(%1243, %1244, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1247 = bitwise_xor(%1245, %1246) /* ty=Tensor[(6, 2, 12), int16] */;
  %1248 = cast(%1247, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %1249 = %1239.1;
  %1250 = %1242.2;
  %1251 = exp(%1248) /* ty=Tensor[(6, 2, 12), float32] */;
  (%1249, %1250, meta[relay.Constant][54] /* ty=Tensor[(336), float64] */, %1251)
}

def @func_1716(%var_1709: Tensor[(9, 8, 12), uint64]) -> (Tensor[(9, 8, 12), uint64],) {
  %1252 = cast(%var_1709, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
  %1253 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(9, 8, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1254 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
  %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1256 = right_shift(%1254, %1255) /* ty=Tensor[(9, 8, 12), uint64] */;
  (%1256,)
}

def @func_17357() -> (Tensor[(15, 2, 13), int16],) {
  %1257 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1258 = %1257.0;
  (%1258,)
}

def @func_3186() -> Tensor[(15, 16, 8), float32] {
  %1259 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1259.1
}

def @func_12443() -> Tensor[(15, 16, 8), float32] {
  %1260 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1260.0
}

def @func_9382(%var_9326: Tensor[(2, 12, 6), bool], %var_9327: Tensor[(2, 12, 6), bool]) -> (Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) {
  %1261 = cast(%var_9327, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %1262 = shape_of(%var_9326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1263 = cast(%var_9326, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %1264 = dyn.reshape(%1261, %1262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1265 = cast(%var_9327, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %1266 = shape_of(%var_9326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1267 = cast(%var_9326, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %1268 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1269 = @func_8600() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1270 = %1269.0;
  %1271 = cast(%1270, dtype="float32") /* ty=Tensor[(15, 2, 13), float32] */;
  %1272 = logical_and(%1263, %1264) /* ty=Tensor[(2, 12, 6), bool] */;
  %1273 = maximum(%1267, %1268) /* ty=Tensor[(2, 12, 6), uint8] */;
  %1274 = cos(%1271) /* ty=Tensor[(15, 2, 13), float32] */;
  %1275 = @func_8776() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1272, %1273, %1274, %1275)
}

def @func_9939(%var_9927: Tensor[(144), bool]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), float32], Tensor[(144), bool]) {
  %1276 = cast(%var_9927, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1277 = cast(%var_9927, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1278 = reshape(%1276, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %1279 = reshape(%1277, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %1280 = @func_9382(%1278, %1279) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
  %1281 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
  %1282 = %1280.2;
  (%1281, %1282, %var_9927)
}

def @func_8600() -> (Tensor[(15, 2, 13), int16],) {
  %1283 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1284 = %1283.1;
  (%1284,)
}

def @func_16293(%var_16283: Tensor[(110), int32]) -> (Tensor[(13, ?, 12), uint64], Tensor[(110), int32], Tensor[(110), int32]) {
  %1285 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 12), float32] */;
  %1286 = sigmoid(%1285) /* ty=Tensor[(13, 1, 12), float32] */;
  %1287 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 1, 12), float32] */, dtype="uint64") /* ty=Tensor[(13, 1, 12), uint64] */;
  %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1289 = cast(%1286, dtype="uint64") /* ty=Tensor[(13, 1, 12), uint64] */;
  %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1291 = cast(%var_16283, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1292 = reshape(%1291, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %1293 = @func_9891(%1292) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) */;
  %1294 = minimum(%1289, %1290) /* ty=Tensor[(13, ?, 12), uint64] */;
  %1295 = %1293.6;
  (%1294, %1295, %var_16283)
}

def @func_16707(%var_16693: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
  %1296 = cast(%var_16693, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
  atan(%1296) /* ty=Tensor[(3, 10, 12), float64] */
}

def @func_20183() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1297 = @func_5608() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %1298 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %1299 = %1297.0;
  (%1298, %1299)
}

def @func_15285() -> (Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) {
  %1300 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
  %1301 = %1300.2;
  %1302 = @func_11981() /* ty=(Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) */;
  %1303 = %1302.2;
  %1304 = cast(%1301, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
  %1305 = cast(%1303, dtype="uint16") /* ty=Tensor[(576), uint16] */;
  %1306 = cast(meta[relay.Constant][58] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1307 = reshape(%1306, newshape=[14, 15, 8]) /* ty=Tensor[(14, 15, 8), float64] */;
  %1308 = @func_15210(%1307) /* ty=(Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1309 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1310 = right_shift(%1304, %1305) /* ty=Tensor[(210, 576), uint16] */;
  %1311 = %1308.2;
  %1312 = %1309.0;
  (%1310, %1311, meta[relay.Constant][58] /* ty=Tensor[(1680), float64] */, %1312)
}

def @func_17921() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1313 = @func_14091() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1314 = @func_10811() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %1315 = %1313.0;
  %1316 = %1314.1;
  (%1315, %1316)
}

def @func_6635() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %1317 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %1318 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %1319 = %1317.2;
  %1320 = %1318.3;
  (%1319, %1320)
}

def @func_8264() -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
  %1321 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %1322 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1323 = %1321.0;
  %1324 = %1322.0;
  %1325 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%1323, %1324, %1325)
}

def @func_10644() -> (Tensor[(672), float64],) {
  %1326 = @func_3243() /* ty=Tensor[(672), float64] */;
  (%1326,)
}

def @func_13371() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %1327 = @func_12443() /* ty=Tensor[(15, 16, 8), float32] */;
  %1328 = @func_7321() /* ty=Tensor[(390), int16] */;
  (%1327, %1328)
}

def @func_1413() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1329 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1330 = cast(meta[relay.Constant][59] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1331 = cast(meta[relay.Constant][59] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1332 = reshape(%1330, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1333 = reshape(%1331, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1334 = @func_182(%1332, %1333) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1335 = %1329.0;
  %1336 = %1334.0;
  (%1335, %1336, meta[relay.Constant][59] /* ty=Tensor[(390), int16] */)
}

def @func_5021() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
  %1337 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1338 = @func_2710() /* ty=Tensor[(15, 16, 8), float32] */;
  %1339 = cast(%1338, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %1340 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1341 = %1337.3;
  %1342 = log2(%1339) /* ty=Tensor[(15, 16, 8), float64] */;
  %1343 = %1340.2;
  (%1341, %1342, %1343)
}

def @func_14775() -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64], Tensor[(390), int16]) {
  %1344 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %1345 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %1346 = %1344.1;
  %1347 = %1345.0;
  %1348 = @func_11856() /* ty=Tensor[(390), int16] */;
  (%1346, %1347, %1348)
}

def @func_12646() -> (Tensor[(15, 16, 8), float32],) {
  %1349 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %1350 = %1349.0;
  %1351 = cast(%1350, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %1352 = sinh(%1351) /* ty=Tensor[(15, 16, 8), float32] */;
  (%1352,)
}

def @func_15386() -> (Tensor[(15, 16, 8), float64],) {
  %1353 = @func_4682() /* ty=(Tensor[(15, 16, 8), float64],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_15629() -> (Tensor[(672), float64],) {
  %1355 = @func_3359() /* ty=Tensor[(672), float64] */;
  (%1355,)
}

def @func_18928() -> (Tensor[(15, 2, 13), int16], Tensor[(110), float32], Tensor[(110), int32], Tensor[(8, 11, 11), float64]) {
  %1356 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1357 = cast(meta[relay.Constant][60] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1358 = reshape(%1357, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %1359 = @func_14536(%1358) /* ty=(Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) */;
  %1360 = @func_16132() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) */;
  %1361 = %1356.0;
  %1362 = %1359.2;
  %1363 = %1360.1;
  (%1361, %1362, meta[relay.Constant][60] /* ty=Tensor[(110), int32] */, %1363)
}

def @func_8007() -> (Tensor[(5, 3, 14), int8],) {
  %1364 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %1365 = %1364.1;
  (%1365,)
}

def @func_14444() -> Tensor[(15, 16, 8), float32] {
  %1366 = @func_12114() /* ty=(Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1366.2
}

def @func_14273() -> (Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) {
  %1367 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %1368 = @func_13483() /* ty=(Tensor[(5, 3, 14), int8],) */;
  %1369 = %1367.1;
  %1370 = %1368.0;
  %1371 = @func_13814() /* ty=Tensor[(390), int16] */;
  (%1369, %1370, %1371)
}

def @func_4064() -> (Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) {
  %1372 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1373 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 168), float64] */, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %1374 = reshape(%1373, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1375 = @func_1536(%1374) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1376 = %1375.1;
  %1377 = cast(%1376, dtype="uint64") /* ty=Tensor[(6, 8, 14), uint64] */;
  %1378 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(4, 168), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1379 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 168), float64] */, dtype="uint64") /* ty=Tensor[(4, 168), uint64] */;
  %1380 = dyn.reshape(%1377, %1378, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1381 = %1372.0;
  %1382 = bitwise_or(%1379, %1380) /* ty=Tensor[(4, 168), uint64] */;
  (%1381, %1382)
}

def @func_4520(%var_4486: Tensor[(14, 8, 3), float64]) -> (Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) {
  %1383 = cast(%var_4486, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %1384 = sqrt(%1383) /* ty=Tensor[(14, 8, 3), float64] */;
  %1385 = cast(%1384, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1386 = shape_of(%var_4486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1387 = cast(%var_4486, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1389 = less_equal(%1387, %1388) /* ty=Tensor[(14, 8, 3), bool] */;
  %1390 = cast(%1389, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
  %1391 = shape_of(%1384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1392 = cast(%1384, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
  %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1394 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1395 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %1396 = bitwise_xor(%1392, %1393) /* ty=Tensor[(14, 8, 3), uint32] */;
  %1397 = %1394.0;
  %1398 = %1395.3;
  (%1396, %1397, %1398)
}

def @func_2412() -> (Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) {
  %1399 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1400 = cast(meta[relay.Constant][62] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %1401 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1402 = %1399.0;
  %1403 = cast(%1402, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1404 = reshape(%1400, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %1405 = reshape(%1401, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1406 = reshape(%1403, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1407 = @func_2006(%1404, %1405, %1406) /* ty=(Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %1408 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1409 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1410 = cast(%1402, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1411 = reshape(%1408, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1412 = reshape(%1409, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1413 = reshape(%1410, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1414 = @func_398(%1411, %1412, %1413) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1415 = %1407.4;
  %1416 = %1414.0;
  (%1402, %1415, meta[relay.Constant][62] /* ty=Tensor[(4, 168), float32] */, meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, %1416)
}

def @func_11543() -> Tensor[(672), float64] {
  %1417 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %1417.0
}

def @func_7766() -> Tensor[(672), float64] {
  %1418 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %1418.0
}

def @func_3473() -> Tensor[(15, 2, 13), int16] {
  %1419 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %1419.0
}

def @func_16567() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), int16]) {
  %1420 = @func_14893() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1421 = @func_11268() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) */;
  %1422 = %1421.1;
  %1423 = @func_11748() /* ty=Tensor[(15, 16, 8), float32] */;
  %1424 = cast(%1423, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
  %1425 = shape_of(%1422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1426 = cast(%1422, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
  %1427 = dyn.reshape(%1424, %1425, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1428 = %1420.0;
  %1429 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
  %1430 = right_shift(%1426, %1427) /* ty=Tensor[(15, 16, 8), int16] */;
  (%1428, %1429, %1430)
}

def @func_16366() -> (Tensor[(15, 2, 13), int16],) {
  %1431 = @func_15065() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1431,)
}

def @func_19333(%var_19331: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(390), int16]) {
  %1432 = @func_16352() /* ty=(Tensor[(672), float64],) */;
  %1433 = cast(%var_19331, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1434 = reshape(%1433, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1435 = @func_4769(%1434) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
  %1436 = %1432.0;
  %1437 = %1435.0;
  (%1436, %1437, %var_19331)
}

def @func_4073() -> Tensor[(390), int16] {
  %1438 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %1438.0
}

def @func_1829() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) {
  %1439 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1440 = cast(meta[relay.Constant][64] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1441 = reshape(%1440, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1442 = @func_1536(%1441) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1443 = %1439.1;
  %1444 = %1442.2;
  (%1443, %1444, meta[relay.Constant][64] /* ty=Tensor[(672), float64] */)
}

def @func_6762() -> (Tensor[(390), int16],) {
  %1445 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1446 = %1445.3;
  (%1446,)
}

def @func_14189() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
  %1447 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1448 = cast(meta[relay.Constant][65] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1449 = reshape(%1448, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %1450 = @func_4520(%1449) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %1451 = %1447.1;
  %1452 = %1450.1;
  (%1451, %1452, meta[relay.Constant][65] /* ty=Tensor[(336), float64] */)
}

def @func_5635() -> Tensor[(672), float64] {
  @func_3359() /* ty=Tensor[(672), float64] */
}

def @func_13164() -> (Tensor[(390), int16],) {
  %1453 = @func_11268() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) */;
  %1454 = %1453.0;
  (%1454,)
}

def @func_17583(%var_17579: Tensor[(1, 4, 3), float32]) -> Tensor[(1, 4, 3), float32] {
  %1455 = cast(%var_17579, dtype="float32") /* ty=Tensor[(1, 4, 3), float32] */;
  atanh(%1455) /* ty=Tensor[(1, 4, 3), float32] */
}

def @func_12923() -> (Tensor[(15, 2, 13), int16],) {
  %1456 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1456,)
}

def @func_15830() -> Tensor[(672), float64] {
  %1457 = @func_15148() /* ty=(Tensor[(672), float64],) */;
  %1457.0
}

def @func_19211() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(672), float64]) {
  %1458 = @func_10852() /* ty=(Tensor[(390), int16],) */;
  %1459 = %1458.0;
  %1460 = @func_4965() /* ty=Tensor[(390), float32] */;
  %1461 = @func_15830() /* ty=Tensor[(672), float64] */;
  (%1459, %1460, %1461)
}

def @func_398(%var_349: Tensor[(5, 3, 14), int8], %var_350: Tensor[(5, 3, 14), int8], %var_361: Tensor[(390), int16]) -> (Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1462 = cast(%var_350, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1463 = shape_of(%var_349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1464 = cast(%var_349, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1465 = dyn.reshape(%1462, %1463, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1466 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1467 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1468 = reshape(%1466, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1469 = reshape(%1467, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1470 = @func_182(%1468, %1469) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1471 = %1470.0;
  %1472 = cast(%1471, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1473 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1474 = reshape(%1472, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1475 = reshape(%1473, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1476 = @func_182(%1474, %1475) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1477 = %1476.0;
  %1478 = cast(%1477, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1479 = cast(%1471, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1480 = reshape(%1478, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1481 = reshape(%1479, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1482 = @func_182(%1480, %1481) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1483 = multiply(%1464, %1465) /* ty=Tensor[(5, 3, 14), int8] */;
  %1484 = %1482.0;
  (%1483, %1471, %var_361, %1477, %1484)
}

def @func_3042() -> (Tensor[(390), int16],) {
  %1485 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1486 = %1485.2;
  (%1486,)
}

def @func_11856() -> Tensor[(390), int16] {
  %1487 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1487.0
}

def @func_15888() -> (Tensor[(672), float64], Tensor[(5, 3, 14), int8]) {
  %1488 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %1489 = %1488.0;
  %1490 = @func_7960() /* ty=Tensor[(5, 3, 14), int8] */;
  (%1489, %1490)
}

def @func_3297(%var_3258: Tensor[(1, 9, 11), float64], %var_3259: Tensor[(4, 9, 11), float64], %var_3274: Tensor[(15, 16, 8), float32]) -> (Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) {
  %1491 = cast(%var_3258, dtype="float64") /* ty=Tensor[(1, 9, 11), float64] */;
  %1492 = cast(%var_3259, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
  %1493 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %1494 = cast(%var_3274, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
  %1495 = shape_of(%1493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1496 = cast(%1493, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
  %1497 = dyn.reshape(%1494, %1495, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1498 = cast(%var_3274, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %1499 = reshape(%1498, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %1500 = @func_3119(%1499) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) */;
  %1501 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %1502 = divide(%1491, %1492) /* ty=Tensor[(4, 9, 11), float64] */;
  %1503 = left_shift(%1496, %1497) /* ty=Tensor[(15, 16, 8), int16] */;
  %1504 = %1500.1;
  %1505 = %1501.0;
  (%1502, %1503, %1504, %1505)
}

def @func_3949() -> (Tensor[(672), float64],) {
  %1506 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %1507 = %1506.0;
  (%1507,)
}

def @func_10286(%var_10284: Tensor[(768), int8]) -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(48), int8], Tensor[(768), int8]) {
  %1508 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %1509 = cast(meta[relay.Constant][66] /* ty=Tensor[(48), int8] */, dtype="int8") /* ty=Tensor[(48), int8] */;
  %1510 = cast(%var_10284, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1511 = cast(%var_10284, dtype="int8") /* ty=Tensor[(768), int8] */;
  %1512 = reshape(%1509, newshape=[4, 12, 1]) /* ty=Tensor[(4, 12, 1), int8] */;
  %1513 = reshape(%1510, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %1514 = reshape(%1511, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %1515 = @func_7148(%1512, %1513, %1514) /* ty=(Tensor[(4, 12, 16), float32], Tensor[(390), int16]) */;
  %1516 = %1508.0;
  %1517 = %1515.1;
  (%1516, %1517, meta[relay.Constant][66] /* ty=Tensor[(48), int8] */, %var_10284)
}

def @func_6242(%var_6232: Tensor[(4, 168), float32]) -> (Tensor[(4, 168), uint16],) {
  %1518 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %1519 = %1518.0;
  %1520 = cast(%var_6232, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %1521 = shape_of(%1519, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1522 = cast(%1519, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
  %1523 = dyn.reshape(%1520, %1521, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1524 = left_shift(%1522, %1523) /* ty=Tensor[(4, 168), uint16] */;
  (%1524,)
}

def @func_10574() -> (Tensor[(672), float64],) {
  %1525 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%1525,)
}

def @func_9165(%var_9141: Tensor[(210), int8], %var_9142: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) {
  %1526 = cast(%var_9141, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1527 = cast(%var_9141, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1528 = cast(%var_9142, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1529 = reshape(%1526, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1530 = reshape(%1527, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1531 = reshape(%1528, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1532 = @func_398(%1529, %1530, %1531) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1533 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %1534 = @func_5871() /* ty=Tensor[(672), float64] */;
  %1535 = %1532.2;
  %1536 = %1533.4;
  (%1534, %1535, %var_9141, %var_9142, %1536)
}

def @func_11916(%var_11904: Tensor[(144), bool]) -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) {
  %1537 = cast(%var_11904, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1538 = reshape(%1537, newshape=[144]) /* ty=Tensor[(144), bool] */;
  %1539 = @func_9688(%1538) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) */;
  %1540 = @func_4014() /* ty=Tensor[(672), float64] */;
  %1541 = %1539.0;
  (%1540, %1541, %var_11904)
}

def @func_14235() -> Tensor[(672), float64] {
  %1542 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1542.0
}

def @func_8557() -> Tensor[(15, 2, 13), int16] {
  @func_6106() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_2679() -> Tensor[(15, 2, 13), int16] {
  @func_1610() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_9528() -> Tensor[(5, 3, 14), int8] {
  %1543 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %1543.1
}

def @func_13447() -> (Tensor[(15, 2, 13), int16],) {
  %1544 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1544,)
}

def @func_15659() -> Tensor[(15, 2, 13), int16] {
  %1545 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1545.0
}

def @func_1536(%var_1532: Tensor[(672), float64]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
  %1546 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1547 = cast(%var_1532, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1548 = %1546.0;
  %1549 = cast(%1548, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1550 = reshape(%1547, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %1551 = reshape(%1549, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1552 = @func_688(%1550, %1551) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1553 = %1552.0;
  (%1548, %1553, %var_1532)
}

def @func_14342() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) {
  %1554 = @func_13075() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) */;
  %1555 = cast(meta[relay.Constant][67] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %1556 = cast(meta[relay.Constant][68] /* ty=Tensor[(275, 2), float32] */, dtype="float32") /* ty=Tensor[(275, 2), float32] */;
  %1557 = reshape(%1555, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
  %1558 = reshape(%1556, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %1559 = @func_2237(%1557, %1558) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
  %1560 = %1559.2;
  %1561 = cast(%1560, dtype="float64") /* ty=Tensor[(550), float64] */;
  %1562 = cast(meta[relay.Constant][68] /* ty=Tensor[(275, 2), float32] */, dtype="float32") /* ty=Tensor[(275, 2), float32] */;
  %1563 = %1554.0;
  %1564 = log2(%1561) /* ty=Tensor[(550), float64] */;
  %1565 = cos(%1562) /* ty=Tensor[(275, 2), float32] */;
  (%1563, meta[relay.Constant][67] /* ty=Tensor[(35, 6), int8] */, %1564, %1565)
}

def @func_10852() -> (Tensor[(390), int16],) {
  %1566 = @func_4073() /* ty=Tensor[(390), int16] */;
  (%1566,)
}

def @func_2710() -> Tensor[(15, 16, 8), float32] {
  %1567 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1567.0
}

def @func_19341() -> Tensor[(672), float64] {
  @func_3359() /* ty=Tensor[(672), float64] */
}

def @func_2105(%var_2095: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(390), int16]) {
  %1568 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
  %1569 = shape_of(%var_2095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1570 = cast(%var_2095, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
  %1571 = dyn.reshape(%1568, %1569, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1572 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1573 = add(%1570, %1571) /* ty=Tensor[(12, 3, 7), float32] */;
  %1574 = %1572.1;
  (%1573, %1574)
}

def @func_14707() -> (Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) {
  %1575 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %1576 = cast(meta[relay.Constant][70] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1577 = reshape(%1576, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %1578 = @func_6242(%1577) /* ty=(Tensor[(4, 168), uint16],) */;
  %1579 = %1575.0;
  %1580 = %1578.0;
  (%1579, %1580, meta[relay.Constant][70] /* ty=Tensor[(672), float32] */)
}

def @func_12131() -> Tensor[(15, 2, 13), int16] {
  %1581 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1581.1
}

def @func_17200() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(5, 3, 14), float64]) {
  %1582 = @func_16366() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1583 = @func_11070() /* ty=(Tensor[(390), int16],) */;
  %1584 = @func_9528() /* ty=Tensor[(5, 3, 14), int8] */;
  %1585 = cast(%1584, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
  %1586 = %1582.0;
  %1587 = %1583.0;
  %1588 = cosh(%1585) /* ty=Tensor[(5, 3, 14), float64] */;
  (%1586, %1587, %1588)
}

def @func_20014() -> (Tensor[(390), float32], Tensor[(390), int16]) {
  %1589 = @func_12825() /* ty=(Tensor[(390), int16],) */;
  %1590 = @func_4965() /* ty=Tensor[(390), float32] */;
  %1591 = %1589.0;
  (%1590, %1591)
}

def @func_12173() -> (Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %1592 = @func_8994() /* ty=(Tensor[(5, 3, 14), int8],) */;
  %1593 = %1592.0;
  %1594 = cast(%1593, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1595 = cast(meta[relay.Constant][71] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1596 = reshape(%1594, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1597 = reshape(%1595, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1598 = @func_9165(%1596, %1597) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) */;
  %1599 = cast(%1593, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1600 = reshape(%1599, newshape=[105, 2]) /* ty=Tensor[(105, 2), int8] */;
  %1601 = @func_1792(%1600) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) */;
  %1602 = %1598.0;
  %1603 = %1601.1;
  (%1593, %1602, meta[relay.Constant][71] /* ty=Tensor[(390), int16] */, %1603)
}

def @func_10552() -> (Tensor[(15, 16, 8), float32],) {
  %1604 = @func_6309() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %1605 = %1604.0;
  (%1605,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2710() -> Tensor[(15, 16, 8), float32] {
  %0 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %0.0
}

def @func_18145() -> (Tensor[(390), float32],) {
  %3 = fn () -> (Tensor[(390), float32],) {
    %1 = @func_7062() /* ty=(Tensor[(390), float32],) */;
    %2 = %1.0;
    (%2,)
  };
  %3() /* ty=(Tensor[(390), float32],) */
}

def @func_8752() -> (Tensor[(15, 16, 8), float32],) {
  %4 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  (%4,)
}

def @func_11043() -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %7 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
    %5 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
    %6 = @func_7766() /* ty=Tensor[(672), float64] */;
    (%5, %6)
  };
  %7() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */
}

def @func_14071(%var_14030: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(672), float64]) {
  %8 = cast(%var_14030, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %9 = log10(%8) /* ty=Tensor[(13, 6, 14), float64] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %11 = sin(%10) /* ty=Tensor[(13, 6, 14), float64] */;
  %12 = @func_4014() /* ty=Tensor[(672), float64] */;
  (%11, %12)
}

def @func_4573() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %13 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %14 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %15 = %13.3;
  %16 = %14.0;
  (%15, %16)
}

def @func_15830() -> Tensor[(672), float64] {
  %17 = @func_15148() /* ty=(Tensor[(672), float64],) */;
  %17.0
}

def @func_18102() -> (Tensor[(396), float64], Tensor[(15, 16, 8), float32]) {
  @func_18100() /* ty=(Tensor[(396), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_8007() -> (Tensor[(5, 3, 14), int8],) {
  %18 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %19 = %18.1;
  (%19,)
}

def @func_4953() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_9386(%var_9384: Tensor[(2, 12, 6), bool], %var_9385: Tensor[(2, 12, 6), bool]) -> (Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) {
  @func_9382(%var_9384, %var_9385) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_13166() -> (Tensor[(390), int16],) {
  @func_13164() /* ty=(Tensor[(390), int16],) */
}

def @func_15347() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16]) {
  @func_15345() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16]) */
}

def @func_5873() -> Tensor[(672), float64] {
  @func_5871() /* ty=Tensor[(672), float64] */
}

def @func_7748() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %20 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %21 = %20.0;
  %22 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
  (%21, %22)
}

def @func_17153() -> Tensor[(15, 2, 13), int16] {
  %24 = fn () -> Tensor[(15, 2, 13), int16] {
    %23 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %23.0
  };
  %24() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_19521() -> (Tensor[(15, 2, 13), int16],) {
  %25 = @func_16366() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %26 = %25.0;
  (%26,)
}

def @func_691(%var_689: Tensor[(6, 8, 14), float64], %var_690: Tensor[(390), int16]) -> (Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %35 = fn (%var_644: Tensor[(6, 8, 14), float64], %var_679: Tensor[(390), int16]) -> (Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
    %27 = cast(%var_644, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
    %28 = cast(%var_679, dtype="int16") /* ty=Tensor[(390), int16] */;
    %29 = cast(%var_679, dtype="int16") /* ty=Tensor[(390), int16] */;
    %30 = reshape(%28, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %31 = reshape(%29, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %32 = @func_182(%30, %31) /* ty=(Tensor[(15, 2, 13), int16],) */;
    %33 = sigmoid(%27) /* ty=Tensor[(6, 8, 14), float64] */;
    %34 = %32.0;
    (%33, %34, %var_679)
  };
  %35(%var_689, %var_690) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_9528() -> Tensor[(5, 3, 14), int8] {
  %36 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %36.1
}

def @func_12444() -> Tensor[(15, 16, 8), float32] {
  %38 = fn () -> Tensor[(15, 16, 8), float32] {
    %37 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %37.0
  };
  %38() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_14237() -> Tensor[(672), float64] {
  @func_14235() /* ty=Tensor[(672), float64] */
}

def @func_7832() -> Tensor[(672), float64] {
  @func_7830() /* ty=Tensor[(672), float64] */
}

def @func_11474() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %39 = @func_7766() /* ty=Tensor[(672), float64] */;
  %40 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%39, %40)
}

def @func_7830() -> Tensor[(672), float64] {
  %41 = @func_7411() /* ty=(Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) */;
  %41.3
}

def @func_8337() -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  @func_8335() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */
}

def @func_20140() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(144), bool]) {
  @func_20138() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(144), bool]) */
}

def @func_8953() -> (Tensor[(390), int16], Tensor[(390), float32]) {
  %45 = fn () -> (Tensor[(390), int16], Tensor[(390), float32]) {
    %42 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %43 = %42.1;
    %44 = @func_4965() /* ty=Tensor[(390), float32] */;
    (%43, %44)
  };
  %45() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */
}

def @func_17424() -> (Tensor[(15, 16, 8), float32],) {
  %48 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %46 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %47 = %46.0;
    (%47,)
  };
  %48() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_19108() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  @func_19106() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */
}

def @func_12924() -> (Tensor[(15, 2, 13), int16],) {
  %50 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %49 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
    (%49,)
  };
  %50() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_12852(%var_12845: Tensor[(5, 3, 14), int8]) -> (Tensor[(5, 3, 14), bool],) {
  %51 = @func_8007() /* ty=(Tensor[(5, 3, 14), int8],) */;
  %52 = %51.0;
  %53 = cast(%var_12845, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%52, dtype="bool") /* ty=Tensor[(5, 3, 14), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %57 = greater(%55, %56) /* ty=Tensor[(5, 3, 14), bool] */;
  (%57,)
}

def @func_11447() -> (Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) {
  @func_11445() /* ty=(Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) */
}

def @func_13485() -> (Tensor[(5, 3, 14), int8],) {
  @func_13483() /* ty=(Tensor[(5, 3, 14), int8],) */
}

def @func_2545() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) {
  @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */
}

def @func_17586(%var_17584: Tensor[(1, 4, 3), float32]) -> Tensor[(1, 4, 3), float32] {
  @func_17583(%var_17584) /* ty=Tensor[(1, 4, 3), float32] */
}

def @func_12115() -> (Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %64 = fn () -> (Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
    %58 = @func_11445() /* ty=(Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) */;
    %59 = @func_4795() /* ty=(Tensor[(672), float64],) */;
    %60 = @func_10668() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %61 = %58.0;
    %62 = %59.0;
    %63 = %60.0;
    (%61, %62, %63)
  };
  %64() /* ty=(Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_15630() -> (Tensor[(672), float64],) {
  %66 = fn () -> (Tensor[(672), float64],) {
    %65 = @func_3359() /* ty=Tensor[(672), float64] */;
    (%65,)
  };
  %66() /* ty=(Tensor[(672), float64],) */
}

def @func_19857() -> Tensor[(390), int16] {
  %67 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
  %67.4
}

def @func_17716(%var_17714: Tensor[(198, 2), float64]) -> (Tensor[(672), float64], Tensor[(9, 13, 6), float32], Tensor[(702), float32], Tensor[(336), float32], Tensor[(1920), float32], Tensor[(390), float32], Tensor[(7, 13, 5), float32], Tensor[(15, 2, 13), int16], Tensor[(198, 2), uint64], Tensor[(672), float64]) {
  @func_17713(%var_17714) /* ty=(Tensor[(672), float64], Tensor[(9, 13, 6), float32], Tensor[(702), float32], Tensor[(336), float32], Tensor[(1920), float32], Tensor[(390), float32], Tensor[(7, 13, 5), float32], Tensor[(15, 2, 13), int16], Tensor[(198, 2), uint64], Tensor[(672), float64]) */
}

def @func_19267() -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  @func_19265() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_3778() -> (Tensor[(390), int16], Tensor[(390), float32]) {
  %68 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %69 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %70 = %68.1;
  %71 = %69.1;
  (%70, %71)
}

def @func_17583(%var_17579: Tensor[(1, 4, 3), float32]) -> Tensor[(1, 4, 3), float32] {
  %72 = cast(%var_17579, dtype="float32") /* ty=Tensor[(1, 4, 3), float32] */;
  atanh(%72) /* ty=Tensor[(1, 4, 3), float32] */
}

def @func_16665() -> Tensor[(672), float64] {
  %74 = fn () -> Tensor[(672), float64] {
    %73 = @func_10769() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
    %73.4
  };
  %74() /* ty=Tensor[(672), float64] */
}

def @func_1509() -> (Tensor[(15, 2, 13), int16],) {
  @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_13164() -> (Tensor[(390), int16],) {
  %75 = @func_11268() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) */;
  %76 = %75.0;
  (%76,)
}

def @func_12580() -> Tensor[(15, 2, 13), int16] {
  @func_12131() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_13373() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  @func_13371() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */
}

def @func_2413() -> (Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) {
  %95 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) {
    %77 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %78 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 168), float32] */, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
    %79 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %80 = %77.0;
    %81 = cast(%80, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %82 = reshape(%78, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
    %83 = reshape(%79, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %84 = reshape(%81, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %85 = @func_2006(%82, %83, %84) /* ty=(Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
    %86 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %87 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %88 = cast(%80, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %89 = reshape(%86, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %90 = reshape(%87, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %91 = reshape(%88, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %92 = @func_398(%89, %90, %91) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %93 = %85.4;
    %94 = %92.0;
    (%80, %93, meta[relay.Constant][0] /* ty=Tensor[(4, 168), float32] */, meta[relay.Constant][1] /* ty=Tensor[(210), int8] */, %94)
  };
  %95() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */
}

def @func_13371() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %96 = @func_12443() /* ty=Tensor[(15, 16, 8), float32] */;
  %97 = @func_7321() /* ty=Tensor[(390), int16] */;
  (%96, %97)
}

def @func_3243() -> Tensor[(672), float64] {
  %98 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %98.0
}

def @func_8754() -> (Tensor[(15, 16, 8), float32],) {
  @func_8752() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_17202() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(5, 3, 14), float64]) {
  @func_17200() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(5, 3, 14), float64]) */
}

def @func_18451() -> Tensor[(2, 11, 4), bool] {
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(2, 11, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 11, 4), bool] */;
  %100 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(2, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 11, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 11, 4), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%101, %102) /* ty=Tensor[(2, 11, 4), bool] */
}

def @func_9280() -> (Tensor[(390), float32],) {
  %105 = fn () -> (Tensor[(390), float32],) {
    %103 = @func_7118() /* ty=(Tensor[(672), float64], Tensor[(390), float32]) */;
    %104 = %103.1;
    (%104,)
  };
  %105() /* ty=(Tensor[(390), float32],) */
}

def @func_7750() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  @func_7748() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_3042() -> (Tensor[(390), int16],) {
  %106 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %107 = %106.2;
  (%107,)
}

def @func_1226() -> (Tensor[(15, 16, 8), float32],) {
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %109 = cos(%108) /* ty=Tensor[(15, 16, 8), float32] */;
  (%109,)
}

def @func_3399() -> (Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %127 = fn () -> (Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
    %110 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %111 = %110.2;
    %112 = cast(%111, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
    %113 = cosh(%112) /* ty=Tensor[(4, 168), float32] */;
    %114 = cast(%111, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
    %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(2), int32] */;
    %116 = cast(%113, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 144), uint64] */, dtype="uint64") /* ty=Tensor[(6, 144), uint64] */;
    %119 = reshape(%118, newshape=[12, 72]) /* ty=Tensor[(12, 72), uint64] */;
    %120 = @func_2087(%119) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) */;
    %121 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %122 = @func_2871() /* ty=(Tensor[(672), float64],) */;
    %123 = power(%116, %117) /* ty=Tensor[(4, 168), float32] */;
    %124 = %120.2;
    %125 = %121.0;
    %126 = %122.0;
    (%123, %124, meta[relay.Constant][5] /* ty=Tensor[(6, 144), uint64] */, %125, %126)
  };
  %127() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */
}

def @func_5560() -> (Tensor[(15, 16, 8), float32],) {
  %129 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %128 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
    (%128,)
  };
  %129() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_14536(%var_14521: Tensor[(110), int32]) -> (Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) {
  %130 = cast(%var_14521, dtype="int32") /* ty=Tensor[(110), int32] */;
  %131 = cast(%var_14521, dtype="int32") /* ty=Tensor[(110), int32] */;
  %132 = reshape(%130, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %133 = reshape(%131, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %134 = @func_8432(%132, %133) /* ty=(Tensor[(5, 2, 11), bool],) */;
  %135 = cast(%var_14521, dtype="float32") /* ty=Tensor[(110), float32] */;
  %136 = @func_3359() /* ty=Tensor[(672), float64] */;
  %137 = %134.0;
  %138 = sigmoid(%135) /* ty=Tensor[(110), float32] */;
  (%136, %137, %138)
}

def @func_16077() -> Tensor[(15, 2, 13), int16] {
  %139 = fn () -> Tensor[(15, 2, 13), int16] {
    @func_6106() /* ty=Tensor[(15, 2, 13), int16] */
  };
  %139() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_15067() -> Tensor[(15, 2, 13), int16] {
  @func_15065() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_11527() -> (Tensor[(390), int16],) {
  %140 = @func_11070() /* ty=(Tensor[(390), int16],) */;
  %141 = %140.0;
  (%141,)
}

def @func_9116() -> (Tensor[(15, 2, 13), int16],) {
  %142 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %143 = %142.1;
  (%143,)
}

def @func_16966(%var_16944: Tensor[(72, 2), bool], %var_16946: Tensor[(72, 2), bool]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) {
  %144 = cast(%var_16944, dtype="bool") /* ty=Tensor[(72, 2), bool] */;
  %145 = cast(%var_16944, dtype="bool") /* ty=Tensor[(72, 2), bool] */;
  %146 = reshape(%144, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %147 = reshape(%145, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %148 = @func_9382(%146, %147) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
  %149 = cast(%var_16946, dtype="uint16") /* ty=Tensor[(72, 2), uint16] */;
  %150 = shape_of(%var_16944, dtype="int32") /* ty=Tensor[(2), int32] */;
  %151 = cast(%var_16944, dtype="uint16") /* ty=Tensor[(72, 2), uint16] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %153 = @func_15401() /* ty=Tensor[(672), float64] */;
  %154 = %148.3;
  %155 = subtract(%151, %152) /* ty=Tensor[(72, 2), uint16] */;
  (%153, %154, %155)
}

def @func_15149() -> (Tensor[(672), float64],) {
  %158 = fn () -> (Tensor[(672), float64],) {
    %156 = @func_10644() /* ty=(Tensor[(672), float64],) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(672), float64],) */
}

def @func_6973(%var_6971: Tensor[(390), int16], %var_6972: Tensor[(1920), float32]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) {
  @func_6969(%var_6971, %var_6972) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */
}

def @func_15166() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  @func_15164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_15557() -> (Tensor[(390), float32],) {
  %159 = @func_11981() /* ty=(Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) */;
  %160 = %159.0;
  (%160,)
}

def @func_18100() -> (Tensor[(396), float64], Tensor[(15, 16, 8), float32]) {
  %161 = @func_16758() /* ty=(Tensor[(396), float64],) */;
  %162 = %161.0;
  %163 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%162, %163)
}

def @func_19335(%var_19334: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(390), int16]) {
  %170 = fn (%var_19331: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(390), int16]) {
    %164 = @func_16352() /* ty=(Tensor[(672), float64],) */;
    %165 = cast(%var_19331, dtype="int16") /* ty=Tensor[(390), int16] */;
    %166 = reshape(%165, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %167 = @func_4769(%166) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
    %168 = %164.0;
    %169 = %167.0;
    (%168, %169, %var_19331)
  };
  %170(%var_19334) /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(390), int16]) */
}

def @func_8601() -> (Tensor[(15, 2, 13), int16],) {
  %173 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %171 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %172 = %171.1;
    (%172,)
  };
  %173() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_12669(%var_12661: Tensor[(390), int16]) -> (Tensor[(3, 15, 1), bool], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %174 = cast(meta[relay.Constant][6] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %175 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 15, 1), uint64] */, dtype="bool") /* ty=Tensor[(3, 15, 1), bool] */;
  %176 = cast(%var_12661, dtype="int16") /* ty=Tensor[(390), int16] */;
  %177 = cast(%var_12661, dtype="int16") /* ty=Tensor[(390), int16] */;
  %178 = reshape(%176, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %179 = reshape(%177, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %180 = @func_182(%178, %179) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %181 = equal(%174, %175) /* ty=Tensor[(3, 15, 1), bool] */;
  %182 = %180.0;
  (%181, %182, %var_12661)
}

def @func_20015() -> (Tensor[(390), float32], Tensor[(390), int16]) {
  %186 = fn () -> (Tensor[(390), float32], Tensor[(390), int16]) {
    %183 = @func_12825() /* ty=(Tensor[(390), int16],) */;
    %184 = @func_4965() /* ty=Tensor[(390), float32] */;
    %185 = %183.0;
    (%184, %185)
  };
  %186() /* ty=(Tensor[(390), float32], Tensor[(390), int16]) */
}

def @func_10769() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %187 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %188 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %189 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %190 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %191 = %187.0;
  %192 = %188.0;
  %193 = @func_7321() /* ty=Tensor[(390), int16] */;
  %194 = %189.0;
  %195 = %190.0;
  (%191, %192, %193, %194, %195)
}

def @func_11118() -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64]) {
  %200 = fn () -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64]) {
    %196 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 7), float64] */;
    %197 = @func_4795() /* ty=(Tensor[(672), float64],) */;
    %198 = log10(%196) /* ty=Tensor[(14, 2, 7), float64] */;
    %199 = %197.0;
    (%198, %199)
  };
  %200() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64]) */
}

def @func_18291() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(144), bool]) {
  %201 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
  %202 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %203 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %204 = reshape(%202, newshape=[72, 2]) /* ty=Tensor[(72, 2), bool] */;
  %205 = reshape(%203, newshape=[72, 2]) /* ty=Tensor[(72, 2), bool] */;
  %206 = @func_16966(%204, %205) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) */;
  %207 = %201.0;
  %208 = %206.0;
  (%207, %208, meta[relay.Constant][9] /* ty=Tensor[(144), bool] */)
}

def @func_5408(%var_5407: Tensor[(390), float32]) -> (Tensor[(390), uint32], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %220 = fn (%var_5336: Tensor[(390), float32]) -> (Tensor[(390), uint32], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
    %209 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %210 = %209.1;
    %211 = cast(%var_5336, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(1), int32] */;
    %213 = cast(%210, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %215 = @func_2871() /* ty=(Tensor[(672), float64],) */;
    %216 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
    %217 = left_shift(%213, %214) /* ty=Tensor[(390), uint32] */;
    %218 = %215.0;
    %219 = %216.2;
    (%217, %218, %219)
  };
  %220(%var_5407) /* ty=(Tensor[(390), uint32], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_6635() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %221 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %222 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %223 = %221.2;
  %224 = %222.3;
  (%223, %224)
}

def @func_8084(%var_8083: Tensor[(7, 8, 6), float32]) -> Tensor[(7, 8, 6), float32] {
  %226 = fn (%var_8077: Tensor[(7, 8, 6), float32]) -> Tensor[(7, 8, 6), float32] {
    %225 = cast(%var_8077, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
    atan(%225) /* ty=Tensor[(7, 8, 6), float32] */
  };
  %226(%var_8083) /* ty=Tensor[(7, 8, 6), float32] */
}

def @func_17508() -> (Tensor[(15, 2, 13), int16],) {
  %227 = @func_17298() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %228 = %227.0;
  (%228,)
}

def @func_11983() -> (Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) {
  @func_11981() /* ty=(Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) */
}

def @func_18596() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %229 = @func_12700() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %230 = %229.0;
  %231 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%230, %231)
}

def @func_12174() -> (Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %244 = fn () -> (Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
    %232 = @func_8994() /* ty=(Tensor[(5, 3, 14), int8],) */;
    %233 = %232.0;
    %234 = cast(%233, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
    %235 = cast(meta[relay.Constant][10] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %236 = reshape(%234, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %237 = reshape(%235, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %238 = @func_9165(%236, %237) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) */;
    %239 = cast(%233, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
    %240 = reshape(%239, newshape=[105, 2]) /* ty=Tensor[(105, 2), int8] */;
    %241 = @func_1792(%240) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) */;
    %242 = %238.0;
    %243 = %241.1;
    (%233, %242, meta[relay.Constant][10] /* ty=Tensor[(390), int16] */, %243)
  };
  %244() /* ty=(Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_19211() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(672), float64]) {
  %245 = @func_10852() /* ty=(Tensor[(390), int16],) */;
  %246 = %245.0;
  %247 = @func_4965() /* ty=Tensor[(390), float32] */;
  %248 = @func_15830() /* ty=Tensor[(672), float64] */;
  (%246, %247, %248)
}

def @func_20183() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %249 = @func_5608() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %250 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %251 = %249.0;
  (%250, %251)
}

def @func_11529() -> (Tensor[(390), int16],) {
  @func_11527() /* ty=(Tensor[(390), int16],) */
}

def @func_16367() -> (Tensor[(15, 2, 13), int16],) {
  %253 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %252 = @func_15065() /* ty=Tensor[(15, 2, 13), int16] */;
    (%252,)
  };
  %253() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_10276() -> (Tensor[(15, 16, 8), float32],) {
  %256 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %254 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %255 = %254.0;
    (%255,)
  };
  %256() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_18187() -> Tensor[(390), int16] {
  @func_18185() /* ty=Tensor[(390), int16] */
}

def @func_1941() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %257 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %258 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %259 = %257.1;
  %260 = %258.0;
  (%259, %260)
}

def @func_5608() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %261 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %262 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
  %263 = %261.0;
  (%262, %263)
}

def @func_8265() -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
  %269 = fn () -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
    %264 = @func_2871() /* ty=(Tensor[(672), float64],) */;
    %265 = @func_6762() /* ty=(Tensor[(390), int16],) */;
    %266 = %264.0;
    %267 = %265.0;
    %268 = @func_7766() /* ty=Tensor[(672), float64] */;
    (%266, %267, %268)
  };
  %269() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */
}

def @func_5635() -> Tensor[(672), float64] {
  @func_3359() /* ty=Tensor[(672), float64] */
}

def @func_8238() -> Tensor[(390), int16] {
  %270 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %270.0
}

def @func_17539(%var_17537: Tensor[(3, 11, 5), int32], %var_17538: Tensor[(3, 11, 5), int32]) -> Tensor[(3, 11, 5), bool] {
  %275 = fn (%var_17531: Tensor[(3, 11, 5), int32], %var_17532: Tensor[(3, 11, 5), int32]) -> Tensor[(3, 11, 5), bool] {
    %271 = cast(%var_17532, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
    %272 = shape_of(%var_17531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(%var_17531, dtype="bool") /* ty=Tensor[(3, 11, 5), bool] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%273, %274) /* ty=Tensor[(3, 11, 5), bool] */
  };
  %275(%var_17537, %var_17538) /* ty=Tensor[(3, 11, 5), bool] */
}

def @func_3982() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %276 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %277 = cast(%276, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %278 = cast(%276, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %279 = reshape(%277, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %280 = reshape(%278, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %281 = @func_182(%279, %280) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %282 = %281.0;
  (%276, %282)
}

def @func_11445() -> (Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) {
  %283 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %284 = %283.0;
  %285 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
  %286 = cast(%285, dtype="uint8") /* ty=Tensor[(15, 2, 13), uint8] */;
  %287 = shape_of(%284, dtype="int32") /* ty=Tensor[(1), int32] */;
  %288 = cast(%284, dtype="uint8") /* ty=Tensor[(390), uint8] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %290 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %291 = logical_xor(%288, %289) /* ty=Tensor[(390), uint8] */;
  %292 = %290.1;
  (%291, %292)
}

def @func_11840() -> (Tensor[(550), float32], Tensor[(1920), float32]) {
  @func_11838() /* ty=(Tensor[(550), float32], Tensor[(1920), float32]) */
}

def @func_5063() -> Tensor[(1920), float32] {
  @func_5061() /* ty=Tensor[(1920), float32] */
}

def @func_17923() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  @func_17921() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_1792(%var_1769: Tensor[(105, 2), int8]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) {
  %293 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %294 = %293.1;
  %295 = cast(%294, dtype="int16") /* ty=Tensor[(390), int16] */;
  %296 = cast(meta[relay.Constant][11] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
  %297 = reshape(%295, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %298 = reshape(%296, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %299 = @func_1339(%297, %298) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
  %300 = cast(meta[relay.Constant][11] /* ty=Tensor[(105, 2), int8] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %301 = cast(%var_1769, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %302 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(105, 2), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %303 = cast(meta[relay.Constant][11] /* ty=Tensor[(105, 2), int8] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %305 = power(%303, %304) /* ty=Tensor[(105, 2), float64] */;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %307 = %299.0;
  %308 = log(%300) /* ty=Tensor[(105, 2), float64] */;
  %309 = log10(%306) /* ty=Tensor[(105, 2), float64] */;
  (%294, %307, %308, %309)
}

def @func_8868(%var_8856: Tensor[(336), float32]) -> (Tensor[(390), int16], Tensor[(336), float32], Tensor[(7, 8, 6), float64]) {
  %310 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %311 = cast(%var_8856, dtype="float32") /* ty=Tensor[(336), float32] */;
  %312 = reshape(%311, newshape=[7, 8, 6]) /* ty=Tensor[(7, 8, 6), float32] */;
  %313 = @func_8082(%312) /* ty=Tensor[(7, 8, 6), float32] */;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %315 = %310.0;
  %316 = sqrt(%314) /* ty=Tensor[(7, 8, 6), float64] */;
  (%315, %var_8856, %316)
}

def @func_8170() -> (Tensor[(672), float64], Tensor[(210), int8]) {
  %317 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %318 = %317.0;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(672), float32] */;
  %320 = reshape(%319, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %321 = @func_7697(%320) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) */;
  %322 = %321.2;
  (%318, %322)
}

def @func_10286(%var_10284: Tensor[(768), int8]) -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(48), int8], Tensor[(768), int8]) {
  %323 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %324 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), int8] */, dtype="int8") /* ty=Tensor[(48), int8] */;
  %325 = cast(%var_10284, dtype="int8") /* ty=Tensor[(768), int8] */;
  %326 = cast(%var_10284, dtype="int8") /* ty=Tensor[(768), int8] */;
  %327 = reshape(%324, newshape=[4, 12, 1]) /* ty=Tensor[(4, 12, 1), int8] */;
  %328 = reshape(%325, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %329 = reshape(%326, newshape=[4, 12, 16]) /* ty=Tensor[(4, 12, 16), int8] */;
  %330 = @func_7148(%327, %328, %329) /* ty=(Tensor[(4, 12, 16), float32], Tensor[(390), int16]) */;
  %331 = %323.0;
  %332 = %330.1;
  (%331, %332, meta[relay.Constant][12] /* ty=Tensor[(48), int8] */, %var_10284)
}

def @func_18185() -> Tensor[(390), int16] {
  @func_8238() /* ty=Tensor[(390), int16] */
}

def @func_14445() -> Tensor[(15, 16, 8), float32] {
  %334 = fn () -> Tensor[(15, 16, 8), float32] {
    %333 = @func_12114() /* ty=(Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
    %333.2
  };
  %334() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_6244(%var_6243: Tensor[(4, 168), float32]) -> (Tensor[(4, 168), uint16],) {
  %342 = fn (%var_6232: Tensor[(4, 168), float32]) -> (Tensor[(4, 168), uint16],) {
    %335 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
    %336 = %335.0;
    %337 = cast(%var_6232, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
    %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(2), int32] */;
    %339 = cast(%336, dtype="uint16") /* ty=Tensor[(4, 168), uint16] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %341 = left_shift(%339, %340) /* ty=Tensor[(4, 168), uint16] */;
    (%341,)
  };
  %342(%var_6243) /* ty=(Tensor[(4, 168), uint16],) */
}

def @func_14839() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %347 = fn () -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
    %343 = @func_9593() /* ty=(Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */;
    %344 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %345 = %343.2;
    %346 = %344.0;
    (%345, %346)
  };
  %347() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_16970(%var_16968: Tensor[(72, 2), bool], %var_16969: Tensor[(72, 2), bool]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) {
  @func_16966(%var_16968, %var_16969) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(72, 2), uint16]) */
}

def @func_19138(%var_19128: int32) -> (Tensor[(7, 10, 1), int32],) {
  %348 = cast(%var_19128, dtype="int32") /* ty=int32 */;
  %349 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 10, 1), int32] */, dtype="int32") /* ty=Tensor[(7, 10, 1), int32] */;
  %350 = left_shift(%348, %349) /* ty=Tensor[(7, 10, 1), int32] */;
  (%350,)
}

def @func_17810() -> (Tensor[(15, 16, 8), float32],) {
  %351 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
  %352 = %351.3;
  (%352,)
}

def @func_15210(%var_15172: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %353 = cast(%var_15172, dtype="float64") /* ty=Tensor[(14, 15, 8), float64] */;
  %354 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %355 = @func_10225() /* ty=(Tensor[(672), float64],) */;
  %356 = @func_6635() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %357 = cos(%353) /* ty=Tensor[(14, 15, 8), float64] */;
  %358 = %354.0;
  %359 = %355.0;
  %360 = %356.0;
  (%357, %358, %359, %360)
}

def @func_9059() -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %365 = fn () -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
    %361 = @func_3691() /* ty=(Tensor[(672), float64],) */;
    %362 = %361.0;
    %363 = @func_6106() /* ty=Tensor[(15, 2, 13), int16] */;
    %364 = @func_7830() /* ty=Tensor[(672), float64] */;
    (%362, %363, %364)
  };
  %365() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */
}

def @func_19106() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %366 = @func_6093() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */;
  %367 = @func_13371() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %368 = @func_14444() /* ty=Tensor[(15, 16, 8), float32] */;
  %369 = %366.0;
  %370 = %367.1;
  (%368, %369, %370)
}

def @func_14775() -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64], Tensor[(390), int16]) {
  %371 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %372 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %373 = %371.1;
  %374 = %372.0;
  %375 = @func_11856() /* ty=Tensor[(390), int16] */;
  (%373, %374, %375)
}

def @func_13148(%var_13146: Tensor[(14, 16, 10), float32], %var_13147: Tensor[(2, 288), float64]) -> (Tensor[(16, 4, 9), float64], Tensor[(2, 288), float64], Tensor[(14, 16, 10), float32]) {
  @func_13144(%var_13146, %var_13147) /* ty=(Tensor[(16, 4, 9), float64], Tensor[(2, 288), float64], Tensor[(14, 16, 10), float32]) */
}

def @func_13448() -> (Tensor[(15, 2, 13), int16],) {
  %377 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %376 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
    (%376,)
  };
  %377() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_18598() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  @func_18596() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_7413() -> (Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) {
  @func_7411() /* ty=(Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) */
}

def @func_14708() -> (Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) {
  %384 = fn () -> (Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) {
    %378 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
    %379 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %380 = reshape(%379, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
    %381 = @func_6242(%380) /* ty=(Tensor[(4, 168), uint16],) */;
    %382 = %378.0;
    %383 = %381.0;
    (%382, %383, meta[relay.Constant][14] /* ty=Tensor[(672), float32] */)
  };
  %384() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */
}

def @func_1611() -> Tensor[(15, 2, 13), int16] {
  %386 = fn () -> Tensor[(15, 2, 13), int16] {
    %385 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %385.0
  };
  %386() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_6337() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
  %387 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %388 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %389 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %390 = %387.1;
  %391 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %392 = %388.2;
  %393 = %389.0;
  (%390, %391, %392, %393)
}

def @func_10669() -> (Tensor[(15, 16, 8), float32],) {
  %396 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %394 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
    %395 = %394.0;
    (%395,)
  };
  %396() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_9941(%var_9940: Tensor[(144), bool]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), float32], Tensor[(144), bool]) {
  %404 = fn (%var_9927: Tensor[(144), bool]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), float32], Tensor[(144), bool]) {
    %397 = cast(%var_9927, dtype="bool") /* ty=Tensor[(144), bool] */;
    %398 = cast(%var_9927, dtype="bool") /* ty=Tensor[(144), bool] */;
    %399 = reshape(%397, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
    %400 = reshape(%398, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
    %401 = @func_9382(%399, %400) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
    %402 = @func_2679() /* ty=Tensor[(15, 2, 13), int16] */;
    %403 = %401.2;
    (%402, %403, %var_9927)
  };
  %404(%var_9940) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), float32], Tensor[(144), bool]) */
}

def @func_10852() -> (Tensor[(390), int16],) {
  %405 = @func_4073() /* ty=Tensor[(390), int16] */;
  (%405,)
}

def @func_10289(%var_10287: Tensor[(768), int8]) -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(48), int8], Tensor[(768), int8]) {
  @func_10286(%var_10287) /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(48), int8], Tensor[(768), int8]) */
}

def @func_18928() -> (Tensor[(15, 2, 13), int16], Tensor[(110), float32], Tensor[(110), int32], Tensor[(8, 11, 11), float64]) {
  %406 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %407 = cast(meta[relay.Constant][15] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %408 = reshape(%407, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %409 = @func_14536(%408) /* ty=(Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) */;
  %410 = @func_16132() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) */;
  %411 = %406.0;
  %412 = %409.2;
  %413 = %410.1;
  (%411, %412, meta[relay.Constant][15] /* ty=Tensor[(110), int32] */, %413)
}

def @func_403(%var_400: Tensor[(5, 3, 14), int8], %var_401: Tensor[(5, 3, 14), int8], %var_402: Tensor[(390), int16]) -> (Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  @func_398(%var_400, %var_401, %var_402) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_1633() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_18475() -> (Tensor[(15, 16, 8), float64],) {
  @func_18473() /* ty=(Tensor[(15, 16, 8), float64],) */
}

def @func_8558() -> Tensor[(15, 2, 13), int16] {
  %414 = fn () -> Tensor[(15, 2, 13), int16] {
    @func_6106() /* ty=Tensor[(15, 2, 13), int16] */
  };
  %414() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_4722() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
  @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */
}

def @func_19523() -> (Tensor[(15, 2, 13), int16],) {
  @func_19521() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_12239() -> Tensor[(390), float32] {
  %415 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %415.1
}

def @func_17736() -> (Tensor[(672), float64],) {
  %418 = fn () -> (Tensor[(672), float64],) {
    %416 = @func_12506() /* ty=(Tensor[(672), float64],) */;
    %417 = %416.0;
    (%417,)
  };
  %418() /* ty=(Tensor[(672), float64],) */
}

def @func_1414() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %427 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
    %419 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %420 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %421 = cast(meta[relay.Constant][16] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %422 = reshape(%420, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %423 = reshape(%421, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %424 = @func_182(%422, %423) /* ty=(Tensor[(15, 2, 13), int16],) */;
    %425 = %419.0;
    %426 = %424.0;
    (%425, %426, meta[relay.Constant][16] /* ty=Tensor[(390), int16] */)
  };
  %427() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_17941(%var_17939: Tensor[(11, 15, 2), uint64], %var_17940: Tensor[(11, 15, 2), uint64]) -> (Tensor[(11, 15, 2), uint64], Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64]) {
  @func_17937(%var_17939, %var_17940) /* ty=(Tensor[(11, 15, 2), uint64], Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64]) */
}

def @func_10225() -> (Tensor[(672), float64],) {
  %428 = @func_9254() /* ty=Tensor[(672), float64] */;
  (%428,)
}

def @func_11648() -> (Tensor[(672), float64],) {
  @func_11646() /* ty=(Tensor[(672), float64],) */
}

def @func_19626() -> (Tensor[(15, 16, 8), float32],) {
  %431 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %429 = @func_8752() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %430 = %429.0;
    (%430,)
  };
  %431() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_15387() -> (Tensor[(15, 16, 8), float64],) {
  %434 = fn () -> (Tensor[(15, 16, 8), float64],) {
    %432 = @func_4682() /* ty=(Tensor[(15, 16, 8), float64],) */;
    %433 = %432.0;
    (%433,)
  };
  %434() /* ty=(Tensor[(15, 16, 8), float64],) */
}

def @func_11916(%var_11904: Tensor[(144), bool]) -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) {
  %435 = cast(%var_11904, dtype="bool") /* ty=Tensor[(144), bool] */;
  %436 = reshape(%435, newshape=[144]) /* ty=Tensor[(144), bool] */;
  %437 = @func_9688(%436) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) */;
  %438 = @func_4014() /* ty=Tensor[(672), float64] */;
  %439 = %437.0;
  (%438, %439, %var_11904)
}

def @func_9118() -> (Tensor[(15, 2, 13), int16],) {
  @func_9116() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_13905() -> Tensor[(390), int16] {
  %440 = @func_10811() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %440.1
}

def @func_20138() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(144), bool]) {
  %441 = @func_20014() /* ty=(Tensor[(390), float32], Tensor[(390), int16]) */;
  %442 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %443 = reshape(%442, newshape=[144]) /* ty=Tensor[(144), bool] */;
  %444 = @func_11916(%443) /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) */;
  %445 = %441.1;
  %446 = %444.0;
  (%445, %446, meta[relay.Constant][17] /* ty=Tensor[(144), bool] */)
}

def @func_19824() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(15, 16, 8), uint8]) {
  %453 = fn () -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(15, 16, 8), uint8]) {
    %447 = @func_6762() /* ty=(Tensor[(390), int16],) */;
    %448 = @func_8952() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
    %449 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
    %450 = %447.0;
    %451 = %448.1;
    %452 = %449.1;
    (%450, %451, %452)
  };
  %453() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(15, 16, 8), uint8]) */
}

def @func_10266() -> Tensor[(15, 16, 8), float32] {
  %454 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %454.0
}

def @func_7170() -> Tensor[(15, 16, 8), float32] {
  %456 = fn () -> Tensor[(15, 16, 8), float32] {
    %455 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %455.1
  };
  %456() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_17300() -> (Tensor[(15, 2, 13), int16],) {
  @func_17298() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_15421() -> Tensor[(390), float32] {
  %457 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %457.1
}

def @func_1343(%var_1341: Tensor[(390), int16], %var_1342: Tensor[(210), int8]) -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) {
  @func_1339(%var_1341, %var_1342) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */
}

def @func_19906() -> Tensor[(672), float64] {
  @func_19904() /* ty=Tensor[(672), float64] */
}

def @func_13144(%var_13127: Tensor[(14, 16, 10), float32], %var_13132: Tensor[(2, 288), float64]) -> (Tensor[(16, 4, 9), float64], Tensor[(2, 288), float64], Tensor[(14, 16, 10), float32]) {
  %458 = cast(%var_13132, dtype="float64") /* ty=Tensor[(2, 288), float64] */;
  %459 = reshape(%458, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
  %460 = @func_6903(%459) /* ty=(Tensor[(16, 4, 9), float64],) */;
  %461 = cast(%var_13127, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %462 = rsqrt(%461) /* ty=Tensor[(14, 16, 10), float32] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %464 = %460.0;
  %465 = sqrt(%463) /* ty=Tensor[(14, 16, 10), float32] */;
  (%464, %var_13132, %465)
}

def @func_12048() -> (Tensor[(15, 16, 8), float32],) {
  @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_15659() -> Tensor[(15, 2, 13), int16] {
  %466 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %466.0
}

def @main() -> (Tensor[(5, 3, 14), int8], Tensor[(210), int8], Tensor[(550), bool]) {
  %467 = cast(meta[relay.Constant][18] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %468 = reshape(%467, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %469 = @func_3467(%468) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) */;
  %470 = @func_16517() /* ty=(Tensor[(550), float32],) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(550), float64] */;
  %473 = exp(%472) /* ty=Tensor[(550), float64] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(550), bool] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(1), int32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(550), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?), bool] */;
  %478 = %469.1;
  %479 = equal(%476, %477) /* ty=Tensor[(550), bool] */;
  (%478, meta[relay.Constant][18] /* ty=Tensor[(210), int8] */, %479)
}

def @func_8529() -> (Tensor[(672), float64],) {
  %482 = fn () -> (Tensor[(672), float64],) {
    %480 = @func_3398() /* ty=(Tensor[(4, 168), float32], Tensor[(672), float64], Tensor[(6, 144), uint64], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
    %481 = %480.1;
    (%481,)
  };
  %482() /* ty=(Tensor[(672), float64],) */
}

def @func_7697(%var_7650: Tensor[(672), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) {
  %483 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %484 = %483.0;
  %485 = cast(%484, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %486 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %487 = reshape(%485, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %488 = reshape(%486, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %489 = @func_1339(%487, %488) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
  %490 = cast(%var_7650, dtype="float32") /* ty=Tensor[(672), float32] */;
  %491 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %492 = %489.1;
  %493 = cast(%492, dtype="int16") /* ty=Tensor[(390), int16] */;
  %494 = reshape(%490, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float32] */;
  %495 = reshape(%491, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %496 = reshape(%493, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %497 = @func_2006(%494, %495, %496) /* ty=(Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %498 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %499 = @func_7062() /* ty=(Tensor[(390), float32],) */;
  %500 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %501 = %497.3;
  %502 = %498.0;
  %503 = %499.0;
  %504 = %500.1;
  (%484, %492, meta[relay.Constant][19] /* ty=Tensor[(210), int8] */, %501, %var_7650, %502, %503, %504)
}

def @func_12131() -> Tensor[(15, 2, 13), int16] {
  %505 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %505.1
}

def @func_8412(%var_8410: Tensor[(7, 13, 5), uint8], %var_8411: Tensor[(7, 13, 5), uint8]) -> (Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) {
  %517 = fn (%var_8359: Tensor[(7, 13, 5), uint8], %var_8360: Tensor[(7, 13, 5), uint8]) -> (Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) {
    %506 = cast(%var_8360, dtype="bool") /* ty=Tensor[(7, 13, 5), bool] */;
    %507 = shape_of(%var_8359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%var_8359, dtype="bool") /* ty=Tensor[(7, 13, 5), bool] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %510 = cast(%var_8359, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
    %511 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
    %512 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
    %513 = equal(%508, %509) /* ty=Tensor[(7, 13, 5), bool] */;
    %514 = acos(%510) /* ty=Tensor[(7, 13, 5), float32] */;
    %515 = %511.1;
    %516 = %512.1;
    (%513, %514, %515, %516)
  };
  %517(%var_8410, %var_8411) /* ty=(Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) */
}

def @func_11544() -> Tensor[(672), float64] {
  %519 = fn () -> Tensor[(672), float64] {
    %518 = @func_3691() /* ty=(Tensor[(672), float64],) */;
    %518.0
  };
  %519() /* ty=Tensor[(672), float64] */
}

def @func_2804() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %520 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %521 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %522 = %520.0;
  %523 = %521.0;
  (%522, %523)
}

def @func_20299() -> (Tensor[(15, 16, 8), float64],) {
  %526 = fn () -> (Tensor[(15, 16, 8), float64],) {
    %524 = @func_15386() /* ty=(Tensor[(15, 16, 8), float64],) */;
    %525 = %524.0;
    (%525,)
  };
  %526() /* ty=(Tensor[(15, 16, 8), float64],) */
}

def @func_17921() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %527 = @func_14091() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %528 = @func_10811() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %529 = %527.0;
  %530 = %528.1;
  (%529, %530)
}

def @func_17111() -> Tensor[(5, 3, 14), int8] {
  %531 = @func_15888() /* ty=(Tensor[(672), float64], Tensor[(5, 3, 14), int8]) */;
  %531.1
}

def @func_19342() -> Tensor[(672), float64] {
  %532 = fn () -> Tensor[(672), float64] {
    @func_3359() /* ty=Tensor[(672), float64] */
  };
  %532() /* ty=Tensor[(672), float64] */
}

def @func_7118() -> (Tensor[(672), float64], Tensor[(390), float32]) {
  %533 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %534 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %535 = %533.0;
  %536 = %534.1;
  (%535, %536)
}

def @func_14018() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %541 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
    %537 = @func_13412() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16]) */;
    %538 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %539 = %537.1;
    %540 = %538.0;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_12825() -> (Tensor[(390), int16],) {
  %542 = @func_12173() /* ty=(Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %543 = %542.2;
  (%543,)
}

def @func_16709(%var_16708: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
  %545 = fn (%var_16693: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), float64] {
    %544 = cast(%var_16693, dtype="float64") /* ty=Tensor[(3, 10, 12), float64] */;
    atan(%544) /* ty=Tensor[(3, 10, 12), float64] */
  };
  %545(%var_16708) /* ty=Tensor[(3, 10, 12), float64] */
}

def @func_12320() -> (Tensor[(672), float64],) {
  @func_12318() /* ty=(Tensor[(672), float64],) */
}

def @func_2543() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) {
  %546 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %547 = cast(meta[relay.Constant][20] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
  %548 = cast(meta[relay.Constant][21] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %549 = reshape(%547, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
  %550 = reshape(%548, newshape=[550]) /* ty=Tensor[(550), float32] */;
  %551 = @func_2237(%549, %550) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
  %552 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %553 = %546.1;
  %554 = %551.1;
  %555 = %552.4;
  (%553, %554, meta[relay.Constant][20] /* ty=Tensor[(105, 2), int8] */, meta[relay.Constant][21] /* ty=Tensor[(550), float32] */, %555)
}

def @func_15345() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16]) {
  %556 = @func_14342() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) */;
  %557 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %558 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
  %559 = %556.1;
  %560 = %557.4;
  %561 = @func_14486() /* ty=Tensor[(15, 2, 13), int16] */;
  (%558, %559, %560, %561)
}

def @func_11856() -> Tensor[(390), int16] {
  %562 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %562.0
}

def @func_19482() -> (Tensor[(15, 16, 8), float32],) {
  %563 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %564 = %563.0;
  (%564,)
}

def @func_16219() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %569 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
    %565 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %566 = @func_14189() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
    %567 = %565.0;
    %568 = %566.1;
    (%567, %568)
  };
  %569() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_18930() -> (Tensor[(15, 2, 13), int16], Tensor[(110), float32], Tensor[(110), int32], Tensor[(8, 11, 11), float64]) {
  @func_18928() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(110), float32], Tensor[(110), int32], Tensor[(8, 11, 11), float64]) */
}

def @func_19712() -> (Tensor[(672), float64],) {
  %570 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%570,)
}

def @func_9718() -> Tensor[(15, 16, 8), float32] {
  @func_9716() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_19392() -> (Tensor[(672), float64],) {
  %571 = @func_12114() /* ty=(Tensor[(390), uint8], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %572 = %571.1;
  (%572,)
}

def @func_17962() -> (Tensor[(672), float64],) {
  %575 = fn () -> (Tensor[(672), float64],) {
    %573 = @func_10225() /* ty=(Tensor[(672), float64],) */;
    %574 = %573.0;
    (%574,)
  };
  %575() /* ty=(Tensor[(672), float64],) */
}

def @func_13002() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %580 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
    %576 = @func_12564() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
    %577 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %578 = %576.0;
    %579 = %577.1;
    (%578, %579)
  };
  %580() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_9165(%var_9141: Tensor[(210), int8], %var_9142: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) {
  %581 = cast(%var_9141, dtype="int8") /* ty=Tensor[(210), int8] */;
  %582 = cast(%var_9141, dtype="int8") /* ty=Tensor[(210), int8] */;
  %583 = cast(%var_9142, dtype="int16") /* ty=Tensor[(390), int16] */;
  %584 = reshape(%581, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %585 = reshape(%582, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %586 = reshape(%583, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %587 = @func_398(%584, %585, %586) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %588 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %589 = @func_5871() /* ty=Tensor[(672), float64] */;
  %590 = %587.2;
  %591 = %588.4;
  (%589, %590, %var_9141, %var_9142, %591)
}

def @func_1339(%var_1237: Tensor[(390), int16], %var_1244: Tensor[(210), int8]) -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) {
  %592 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %595 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %596 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %597 = cast(%var_1237, dtype="int16") /* ty=Tensor[(390), int16] */;
  %598 = reshape(%595, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %599 = reshape(%596, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %600 = reshape(%597, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %601 = @func_398(%598, %599, %600) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %602 = cast(meta[relay.Constant][22] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %603 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %604 = cast(meta[relay.Constant][23] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %605 = reshape(%602, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %606 = reshape(%603, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %607 = reshape(%604, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %608 = @func_800(%605, %606, %607) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %609 = cast(meta[relay.Constant][23] /* ty=Tensor[(168, 4), float64] */, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %610 = cast(%var_1237, dtype="int16") /* ty=Tensor[(390), int16] */;
  %611 = reshape(%609, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
  %612 = reshape(%610, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %613 = @func_688(%611, %612) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %614 = %613.0;
  %615 = cast(%614, dtype="uint8") /* ty=Tensor[(6, 8, 14), uint8] */;
  %616 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(168, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %617 = cast(meta[relay.Constant][23] /* ty=Tensor[(168, 4), float64] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %619 = cast(meta[relay.Constant][22] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %620 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %621 = bitwise_and(%617, %618) /* ty=Tensor[(168, 4), uint8] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %623 = reshape(%619, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %624 = reshape(%620, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %625 = reshape(%622, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %626 = @func_800(%623, %624, %625) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %627 = cast(meta[relay.Constant][22] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
  %628 = cast(%var_1244, dtype="int8") /* ty=Tensor[(210), int8] */;
  %629 = cast(%621, dtype="float64") /* ty=Tensor[(168, 4), float64] */;
  %630 = reshape(%627, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), float32] */;
  %631 = reshape(%628, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %632 = reshape(%629, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %633 = @func_800(%630, %631, %632) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */;
  %634 = cosh(%594) /* ty=Tensor[(15, 16, 8), float32] */;
  %635 = %601.3;
  %636 = %608.3;
  %637 = %626.1;
  %638 = %633.6;
  (%634, %var_1237, %635, %var_1244, %636, meta[relay.Constant][22] /* ty=Tensor[(550), float32] */, %621, %637, %638)
}

def @func_17200() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(5, 3, 14), float64]) {
  %639 = @func_16366() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %640 = @func_11070() /* ty=(Tensor[(390), int16],) */;
  %641 = @func_9528() /* ty=Tensor[(5, 3, 14), int8] */;
  %642 = cast(%641, dtype="float64") /* ty=Tensor[(5, 3, 14), float64] */;
  %643 = %639.0;
  %644 = %640.0;
  %645 = cosh(%642) /* ty=Tensor[(5, 3, 14), float64] */;
  (%643, %644, %645)
}

def @func_1795(%var_1793: Tensor[(105, 2), int8]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) {
  @func_1792(%var_1793) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) */
}

def @func_12009() -> (Tensor[(15, 16, 8), float32],) {
  %648 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %646 = @func_5559() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %647 = %646.0;
    (%647,)
  };
  %648() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_19394() -> (Tensor[(672), float64],) {
  @func_19392() /* ty=(Tensor[(672), float64],) */
}

def @func_2460() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_7933() -> (Tensor[(672), float64], Tensor[(672), float64]) {
  %654 = fn () -> (Tensor[(672), float64], Tensor[(672), float64]) {
    %649 = @func_3359() /* ty=Tensor[(672), float64] */;
    %650 = cast(%649, dtype="float64") /* ty=Tensor[(672), float64] */;
    %651 = reshape(%650, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %652 = @func_1536(%651) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
    %653 = %652.2;
    (%649, %653)
  };
  %654() /* ty=(Tensor[(672), float64], Tensor[(672), float64]) */
}

def @func_15065() -> Tensor[(15, 2, 13), int16] {
  %655 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %655.0
}

def @func_4796() -> (Tensor[(672), float64],) {
  %657 = fn () -> (Tensor[(672), float64],) {
    %656 = @func_4014() /* ty=Tensor[(672), float64] */;
    (%656,)
  };
  %657() /* ty=(Tensor[(672), float64],) */
}

def @func_9382(%var_9326: Tensor[(2, 12, 6), bool], %var_9327: Tensor[(2, 12, 6), bool]) -> (Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) {
  %658 = cast(%var_9327, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %659 = shape_of(%var_9326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_9326, dtype="bool") /* ty=Tensor[(2, 12, 6), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = cast(%var_9327, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %663 = shape_of(%var_9326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%var_9326, dtype="uint8") /* ty=Tensor[(2, 12, 6), uint8] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %666 = @func_8600() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %667 = %666.0;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(15, 2, 13), float32] */;
  %669 = logical_and(%660, %661) /* ty=Tensor[(2, 12, 6), bool] */;
  %670 = maximum(%664, %665) /* ty=Tensor[(2, 12, 6), uint8] */;
  %671 = cos(%668) /* ty=Tensor[(15, 2, 13), float32] */;
  %672 = @func_8776() /* ty=Tensor[(15, 2, 13), int16] */;
  (%669, %670, %671, %672)
}

def @func_10170() -> Tensor[(390), int16] {
  @func_4073() /* ty=Tensor[(390), int16] */
}

def @func_8335() -> (Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %673 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
  %674 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %675 = %673.0;
  (%674, %675)
}

def @func_3984() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  @func_3982() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_5221() -> (Tensor[(15, 16, 8), int64],) {
  @func_5219() /* ty=(Tensor[(15, 16, 8), int64],) */
}

def @func_16517() -> (Tensor[(550), float32],) {
  %677 = fn () -> (Tensor[(550), float32],) {
    %676 = @func_11170() /* ty=Tensor[(550), float32] */;
    (%676,)
  };
  %677() /* ty=(Tensor[(550), float32],) */
}

def @func_10172() -> Tensor[(390), int16] {
  @func_10170() /* ty=Tensor[(390), int16] */
}

def @func_1228() -> (Tensor[(15, 16, 8), float32],) {
  @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_12582() -> Tensor[(15, 2, 13), int16] {
  @func_12580() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_4014() -> Tensor[(672), float64] {
  %678 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %678.0
}

def @func_9594() -> (Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
  %686 = fn () -> (Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
    %679 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
    %680 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
    %681 = @func_8264() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */;
    %682 = %679.1;
    %683 = @func_8776() /* ty=Tensor[(15, 2, 13), int16] */;
    %684 = %680.1;
    %685 = %681.1;
    (%682, %683, %684, %685)
  };
  %686() /* ty=(Tensor[(390), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */
}

def @func_4951() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %687 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
  %688 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_16134() -> (Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) {
  @func_16132() /* ty=(Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) */
}

def @func_15889() -> (Tensor[(672), float64], Tensor[(5, 3, 14), int8]) {
  %693 = fn () -> (Tensor[(672), float64], Tensor[(5, 3, 14), int8]) {
    %690 = @func_3691() /* ty=(Tensor[(672), float64],) */;
    %691 = %690.0;
    %692 = @func_7960() /* ty=Tensor[(5, 3, 14), int8] */;
    (%691, %692)
  };
  %693() /* ty=(Tensor[(672), float64], Tensor[(5, 3, 14), int8]) */
}

def @func_7323() -> Tensor[(390), int16] {
  @func_7321() /* ty=Tensor[(390), int16] */
}

def @func_7010() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
  %700 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) {
    %694 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %695 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %696 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
    %697 = %694.0;
    %698 = %695.1;
    %699 = %696.0;
    (%697, %698, %699)
  };
  %700() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */
}

def @func_15832() -> Tensor[(672), float64] {
  @func_15830() /* ty=Tensor[(672), float64] */
}

def @func_8511(%var_8510: Tensor[(390), int16]) -> (Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(1920), bool], Tensor[(390), int16], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
  %714 = fn (%var_8493: Tensor[(390), int16]) -> (Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(1920), bool], Tensor[(390), int16], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
    %701 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %702 = cast(%var_8493, dtype="int16") /* ty=Tensor[(390), int16] */;
    %703 = @func_7169() /* ty=Tensor[(15, 16, 8), float32] */;
    %704 = cast(%703, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
    %705 = reshape(%702, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %706 = reshape(%704, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
    %707 = @func_6969(%705, %706) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
    %708 = cast(meta[relay.Constant][24] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %709 = reshape(%708, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
    %710 = @func_1716(%709) /* ty=(Tensor[(9, 8, 12), uint64],) */;
    %711 = %701.1;
    %712 = %707.2;
    %713 = %710.0;
    (%711, %703, %712, %var_8493, %713, meta[relay.Constant][24] /* ty=Tensor[(864), uint64] */)
  };
  %714(%var_8510) /* ty=(Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(1920), bool], Tensor[(390), int16], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */
}

def @func_17113() -> Tensor[(5, 3, 14), int8] {
  @func_17111() /* ty=Tensor[(5, 3, 14), int8] */
}

def @func_19055() -> (Tensor[(15, 2, 13), int32], Tensor[(210), int8], Tensor[(210), int8], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  @func_19053() /* ty=(Tensor[(15, 2, 13), int32], Tensor[(210), int8], Tensor[(210), int8], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */
}

def @func_19470(%var_19469: Tensor[(2, 6, 6), bool]) -> (Tensor[(2, 6, 6), bool], Tensor[(15, 16, 8), float32], Tensor[(2, 6, 6), float64], Tensor[(105, 2), float64]) {
  %734 = fn (%var_19406: Tensor[(2, 6, 6), bool]) -> (Tensor[(2, 6, 6), bool], Tensor[(15, 16, 8), float32], Tensor[(2, 6, 6), float64], Tensor[(105, 2), float64]) {
    %715 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %716 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%var_19406, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %719 = @func_18596() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %720 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %721 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%var_19406, dtype="bool") /* ty=Tensor[(2, 6, 6), bool] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %724 = logical_or(%722, %723) /* ty=Tensor[(2, 6, 6), bool] */;
    %725 = cast(%724, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
    %726 = shape_of(%var_19406, dtype="int32") /* ty=Tensor[(3), int32] */;
    %727 = cast(%var_19406, dtype="float64") /* ty=Tensor[(2, 6, 6), float64] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %729 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %730 = less(%717, %718) /* ty=Tensor[(2, 6, 6), bool] */;
    %731 = %719.1;
    %732 = mod(%727, %728) /* ty=Tensor[(2, 6, 6), float64] */;
    %733 = %729.1;
    (%730, %731, %732, %733)
  };
  %734(%var_19469) /* ty=(Tensor[(2, 6, 6), bool], Tensor[(15, 16, 8), float32], Tensor[(2, 6, 6), float64], Tensor[(105, 2), float64]) */
}

def @func_2165() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %739 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
    %735 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %736 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
    %737 = %735.1;
    %738 = %736.0;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */
}

def @func_9452(%var_9451: Tensor[(336), float64]) -> (Tensor[(390), int16], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), bool]) {
  %750 = fn (%var_9411: Tensor[(336), float64]) -> (Tensor[(390), int16], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), bool]) {
    %740 = @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */;
    %741 = cast(%var_9411, dtype="float64") /* ty=Tensor[(336), float64] */;
    %742 = reshape(%741, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %743 = @func_6434(%742) /* ty=(Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) */;
    %744 = %740.0;
    %745 = cast(%744, dtype="int16") /* ty=Tensor[(390), int16] */;
    %746 = reshape(%745, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %747 = @func_4769(%746) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
    %748 = %743.1;
    %749 = %747.1;
    (%744, %748, %var_9411, %749)
  };
  %750(%var_9451) /* ty=(Tensor[(390), int16], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), bool]) */
}

def @func_9716() -> Tensor[(15, 16, 8), float32] {
  @func_2604() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_15164() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %751 = @func_5608() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %752 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %753 = %751.0;
  (%752, %753)
}

def @func_14235() -> Tensor[(672), float64] {
  %754 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %754.0
}

def @func_12701() -> (Tensor[(15, 2, 13), int16],) {
  %757 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %755 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
    %756 = %755.0;
    (%756,)
  };
  %757() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_4406() -> (Tensor[(390), int16], Tensor[(390), int16]) {
  @func_4404() /* ty=(Tensor[(390), int16], Tensor[(390), int16]) */
}

def @func_14777() -> (Tensor[(14, 2, 7), float64], Tensor[(672), float64], Tensor[(390), int16]) {
  @func_14775() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64], Tensor[(390), int16]) */
}

def @func_9691(%var_9689: Tensor[(144), bool]) -> (Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) {
  @func_9688(%var_9689) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_9688(%var_9623: Tensor[(144), bool]) -> (Tensor[(15, 16, 8), float32], Tensor[(2, 12, 6), bool], Tensor[(144), bool], Tensor[(15, 16, 8), float32], Tensor[(210), int8], Tensor[(336), float64], Tensor[(15, 2, 13), int16]) {
  %758 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %759 = cast(%var_9623, dtype="bool") /* ty=Tensor[(144), bool] */;
  %760 = cast(%var_9623, dtype="bool") /* ty=Tensor[(144), bool] */;
  %761 = reshape(%759, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %762 = reshape(%760, newshape=[2, 12, 6]) /* ty=Tensor[(2, 12, 6), bool] */;
  %763 = @func_9382(%761, %762) /* ty=(Tensor[(2, 12, 6), bool], Tensor[(2, 12, 6), uint8], Tensor[(15, 2, 13), float32], Tensor[(15, 2, 13), int16]) */;
  %764 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %765 = cast(meta[relay.Constant][26] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %766 = reshape(%765, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %767 = @func_4520(%766) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %768 = cast(meta[relay.Constant][26] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %769 = reshape(%768, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %770 = @func_4520(%769) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %771 = %758.0;
  %772 = %763.0;
  %773 = %764.1;
  %774 = %767.2;
  %775 = %770.1;
  (%771, %772, %var_9623, %773, %774, meta[relay.Constant][26] /* ty=Tensor[(336), float64] */, %775)
}

def @func_17595(%var_17591: Tensor[(3, 900), float32]) -> (Tensor[(15, 16, 8), float32], Tensor[(15, 15, 12), float32], Tensor[(3, 900), float32]) {
  %776 = cast(%var_17591, dtype="float32") /* ty=Tensor[(3, 900), float32] */;
  %777 = reshape(%776, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float32] */;
  %778 = @func_12772(%777) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) */;
  %779 = @func_10815() /* ty=Tensor[(15, 16, 8), float32] */;
  %780 = %778.1;
  (%779, %780, %var_17591)
}

def @func_16329() -> (Tensor[(672), float64], Tensor[(14, 2, 7), float64]) {
  @func_16327() /* ty=(Tensor[(672), float64], Tensor[(14, 2, 7), float64]) */
}

def @func_19053() -> (Tensor[(15, 2, 13), int32], Tensor[(210), int8], Tensor[(210), int8], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %781 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %782 = %781.1;
  %783 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 2, 13), int16] */, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%782, dtype="int32") /* ty=Tensor[(15, 2, 13), int32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %787 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %788 = cast(%782, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %789 = reshape(%787, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %790 = reshape(%788, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %791 = @func_9165(%789, %790) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) */;
  %792 = @func_15164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %793 = bitwise_xor(%785, %786) /* ty=Tensor[(15, 2, 13), int32] */;
  %794 = %791.2;
  %795 = %792.0;
  %796 = @func_7830() /* ty=Tensor[(672), float64] */;
  (%793, %794, meta[relay.Constant][28] /* ty=Tensor[(210), int8] */, %795, %796)
}

def @func_15213(%var_15211: Tensor[(14, 15, 8), float64]) -> (Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  @func_15210(%var_15211) /* ty=(Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_16759() -> (Tensor[(396), float64],) {
  %799 = fn () -> (Tensor[(396), float64],) {
    %797 = @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */;
    %798 = %797.3;
    (%798,)
  };
  %799() /* ty=(Tensor[(396), float64],) */
}

def @func_3592() -> (Tensor[(15, 2, 13), int16],) {
  @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_10227() -> (Tensor[(672), float64],) {
  @func_10225() /* ty=(Tensor[(672), float64],) */
}

def @func_3044() -> (Tensor[(390), int16],) {
  @func_3042() /* ty=(Tensor[(390), int16],) */
}

def @func_4720() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
  %800 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %801 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %802 = reshape(%801, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %803 = @func_4520(%802) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %804 = %800.0;
  %805 = %803.1;
  (%804, %805, meta[relay.Constant][29] /* ty=Tensor[(336), float64] */)
}

def @func_8871(%var_8869: Tensor[(336), float32]) -> (Tensor[(390), int16], Tensor[(336), float32], Tensor[(7, 8, 6), float64]) {
  @func_8868(%var_8869) /* ty=(Tensor[(390), int16], Tensor[(336), float32], Tensor[(7, 8, 6), float64]) */
}

def @func_14190() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
  %812 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) {
    %806 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %807 = cast(meta[relay.Constant][30] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %808 = reshape(%807, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
    %809 = @func_4520(%808) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
    %810 = %806.1;
    %811 = %809.1;
    (%810, %811, meta[relay.Constant][30] /* ty=Tensor[(336), float64] */)
  };
  %812() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */
}

def @func_2712() -> Tensor[(15, 16, 8), float32] {
  @func_2710() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_9217() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
  %818 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
    %813 = @func_9116() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %814 = @func_7748() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
    %815 = %813.0;
    %816 = %814.1;
    %817 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
    (%815, %816, %817)
  };
  %818() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) */
}

def @func_3950() -> (Tensor[(672), float64],) {
  %821 = fn () -> (Tensor[(672), float64],) {
    %819 = @func_3691() /* ty=(Tensor[(672), float64],) */;
    %820 = %819.0;
    (%820,)
  };
  %821() /* ty=(Tensor[(672), float64],) */
}

def @func_6903(%var_6900: Tensor[(16, 4, 9), float64]) -> (Tensor[(16, 4, 9), float64],) {
  %822 = cast(%var_6900, dtype="float64") /* ty=Tensor[(16, 4, 9), float64] */;
  %823 = atanh(%822) /* ty=Tensor[(16, 4, 9), float64] */;
  (%823,)
}

def @func_11777(%var_11776: Tensor[(864), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) {
  %832 = fn (%var_11772: Tensor[(864), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) {
    %824 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %825 = @func_10852() /* ty=(Tensor[(390), int16],) */;
    %826 = cast(%var_11772, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %827 = reshape(%826, newshape=[12, 72]) /* ty=Tensor[(12, 72), uint64] */;
    %828 = @func_2087(%827) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) */;
    %829 = %824.0;
    %830 = %825.0;
    %831 = %828.1;
    (%829, %830, %831, %var_11772)
  };
  %832(%var_11776) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) */
}

def @func_2240(%var_2238: Tensor[(5, 42), int8], %var_2239: Tensor[(550), float32]) -> (Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) {
  %848 = fn (%var_2174: Tensor[(5, 42), int8], %var_2221: Tensor[(550), float32]) -> (Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) {
    %833 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %834 = %833.1;
    %835 = cast(%834, dtype="float32") /* ty=Tensor[(390), float32] */;
    %836 = cast(%834, dtype="int16") /* ty=Tensor[(390), int16] */;
    %837 = cast(%var_2174, dtype="int8") /* ty=Tensor[(5, 42), int8] */;
    %838 = reshape(%836, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %839 = reshape(%837, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %840 = @func_1339(%838, %839) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(550), float32], Tensor[(168, 4), uint8], Tensor[(390), int16], Tensor[(672), float64]) */;
    %841 = %840.5;
    %842 = cast(%var_2221, dtype="int64") /* ty=Tensor[(550), int64] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(1), int32] */;
    %844 = cast(%841, dtype="int64") /* ty=Tensor[(550), int64] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?), int64] */;
    %846 = log(%835) /* ty=Tensor[(390), float32] */;
    %847 = multiply(%844, %845) /* ty=Tensor[(550), int64] */;
    (%var_2174, %846, %847)
  };
  %848(%var_2238, %var_2239) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */
}

def @func_7152(%var_7149: Tensor[(4, 12, 1), int8], %var_7150: Tensor[(4, 12, 16), int8], %var_7151: Tensor[(4, 12, 16), int8]) -> (Tensor[(4, 12, 16), float32], Tensor[(390), int16]) {
  %859 = fn (%var_7123: Tensor[(4, 12, 1), int8], %var_7124: Tensor[(4, 12, 16), int8], %var_7129: Tensor[(4, 12, 16), int8]) -> (Tensor[(4, 12, 16), float32], Tensor[(390), int16]) {
    %849 = cast(%var_7123, dtype="int8") /* ty=Tensor[(4, 12, 1), int8] */;
    %850 = cast(%var_7124, dtype="int8") /* ty=Tensor[(4, 12, 16), int8] */;
    %851 = maximum(%849, %850) /* ty=Tensor[(4, 12, 16), int8] */;
    %852 = cast(%var_7129, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
    %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%851, dtype="float32") /* ty=Tensor[(4, 12, 16), float32] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %856 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %857 = floor_divide(%854, %855) /* ty=Tensor[(4, 12, 16), float32] */;
    %858 = %856.1;
    (%857, %858)
  };
  %859(%var_7149, %var_7150, %var_7151) /* ty=(Tensor[(4, 12, 16), float32], Tensor[(390), int16]) */
}

def @func_6434(%var_6404: Tensor[(336), float64]) -> (Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) {
  %860 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %861 = cast(%var_6404, dtype="float64") /* ty=Tensor[(336), float64] */;
  %862 = reshape(%861, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %863 = @func_4520(%862) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %864 = %860.2;
  %865 = %863.2;
  (%864, %865, %var_6404)
}

def @func_15661() -> Tensor[(15, 2, 13), int16] {
  @func_15659() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_2090(%var_2088: Tensor[(12, 72), uint64]) -> (Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) {
  @func_2087(%var_2088) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) */
}

def @func_1943() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_11808() -> (Tensor[(390), float32],) {
  @func_11806() /* ty=(Tensor[(390), float32],) */
}

def @func_19904() -> Tensor[(672), float64] {
  %866 = @func_15148() /* ty=(Tensor[(672), float64],) */;
  %866.0
}

def @func_6906(%var_6904: Tensor[(16, 4, 9), float64]) -> (Tensor[(16, 4, 9), float64],) {
  @func_6903(%var_6904) /* ty=(Tensor[(16, 4, 9), float64],) */
}

def @func_12564() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  %867 = @func_4720() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(336), float64]) */;
  %868 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %869 = %867.0;
  %870 = %868.0;
  %871 = @func_6701() /* ty=Tensor[(672), float64] */;
  (%869, %870, %871)
}

def @func_2873() -> (Tensor[(672), float64],) {
  @func_2871() /* ty=(Tensor[(672), float64],) */
}

def @func_12648() -> (Tensor[(15, 16, 8), float32],) {
  @func_12646() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_14487() -> Tensor[(15, 2, 13), int16] {
  %872 = fn () -> Tensor[(15, 2, 13), int16] {
    @func_12580() /* ty=Tensor[(15, 2, 13), int16] */
  };
  %872() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_9254() -> Tensor[(672), float64] {
  %873 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %873.0
}

def @func_12402(%var_12401: Tensor[(6, 2, 12), int16]) -> (Tensor[(15, 16, 8), float32], Tensor[(336), float64], Tensor[(336), float64], Tensor[(6, 2, 12), float32]) {
  %887 = fn (%var_12372: Tensor[(6, 2, 12), int16]) -> (Tensor[(15, 16, 8), float32], Tensor[(336), float64], Tensor[(336), float64], Tensor[(6, 2, 12), float32]) {
    %874 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %875 = cast(meta[relay.Constant][31] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %876 = reshape(%875, newshape=[336]) /* ty=Tensor[(336), float64] */;
    %877 = @func_6434(%876) /* ty=(Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) */;
    %878 = cast(%var_12372, dtype="int16") /* ty=Tensor[(6, 2, 12), int16] */;
    %879 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(6, 2, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 2, 12), int16] */, dtype="int16") /* ty=Tensor[(6, 2, 12), int16] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %882 = bitwise_xor(%880, %881) /* ty=Tensor[(6, 2, 12), int16] */;
    %883 = cast(%882, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
    %884 = %874.1;
    %885 = %877.2;
    %886 = exp(%883) /* ty=Tensor[(6, 2, 12), float32] */;
    (%884, %885, meta[relay.Constant][31] /* ty=Tensor[(336), float64] */, %886)
  };
  %887(%var_12401) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(336), float64], Tensor[(336), float64], Tensor[(6, 2, 12), float32]) */
}

def @func_17298() -> (Tensor[(15, 2, 13), int16],) {
  %888 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %889 = %888.0;
  (%889,)
}

def @func_16841() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(210, 576), uint16]) {
  @func_16839() /* ty=(Tensor[(390), float32], Tensor[(672), float64], Tensor[(210, 576), uint16]) */
}

def @func_20185() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  @func_20183() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_19265() -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  %890 = @func_16613() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %891 = @func_10644() /* ty=(Tensor[(672), float64],) */;
  %892 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %893 = %890.1;
  %894 = %891.0;
  %895 = %892.0;
  (%893, %894, %895)
}

def @func_5871() -> Tensor[(672), float64] {
  %896 = @func_4795() /* ty=(Tensor[(672), float64],) */;
  %896.0
}

def @func_185(%var_183: Tensor[(15, 2, 13), int16], %var_184: Tensor[(15, 2, 13), int16]) -> (Tensor[(15, 2, 13), int16],) {
  %902 = fn (%var_170: Tensor[(15, 2, 13), int16], %var_171: Tensor[(15, 2, 13), int16]) -> (Tensor[(15, 2, 13), int16],) {
    %897 = cast(%var_171, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %898 = shape_of(%var_170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %899 = cast(%var_170, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %901 = minimum(%899, %900) /* ty=Tensor[(15, 2, 13), int16] */;
    (%901,)
  };
  %902(%var_183, %var_184) /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_4404() -> (Tensor[(390), int16], Tensor[(390), int16]) {
  %903 = @func_3042() /* ty=(Tensor[(390), int16],) */;
  %904 = %903.0;
  %905 = @func_4073() /* ty=Tensor[(390), int16] */;
  (%904, %905)
}

def @func_16509() -> Tensor[(15, 16, 8), float32] {
  @func_16507() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_3590() -> (Tensor[(15, 2, 13), int16],) {
  %906 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %907 = %906.0;
  %908 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 2, 13), int16] */, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %909 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%907, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %912 = add(%910, %911) /* ty=Tensor[(15, 2, 13), int16] */;
  (%912,)
}

def @func_11170() -> Tensor[(550), float32] {
  %913 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
  %913.3
}

def @func_9256() -> Tensor[(672), float64] {
  @func_9254() /* ty=Tensor[(672), float64] */
}

def @func_3467(%var_3466: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) {
  %924 = fn (%var_3463: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) {
    %914 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %915 = cast(%var_3463, dtype="int8") /* ty=Tensor[(210), int8] */;
    %916 = cast(%var_3463, dtype="int8") /* ty=Tensor[(210), int8] */;
    %917 = %914.0;
    %918 = cast(%917, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %919 = reshape(%915, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %920 = reshape(%916, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %921 = reshape(%918, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %922 = @func_398(%919, %920, %921) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %923 = %922.0;
    (%917, %923, %var_3463)
  };
  %924(%var_3466) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) */
}

def @func_6183() -> (Tensor[(672), float64], Tensor[(390), int16]) {
  %925 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %926 = @func_4573() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %927 = %925.0;
  %928 = %926.1;
  (%927, %928)
}

def @func_12855(%var_12853: Tensor[(5, 3, 14), int8]) -> (Tensor[(5, 3, 14), bool],) {
  @func_12852(%var_12853) /* ty=(Tensor[(5, 3, 14), bool],) */
}

def @func_6185() -> (Tensor[(672), float64], Tensor[(390), int16]) {
  @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */
}

def @func_19298() -> (Tensor[(15, 2, 13), int16],) {
  %931 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %929 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %930 = %929.0;
    (%930,)
  };
  %931() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_19714() -> (Tensor[(672), float64],) {
  @func_19712() /* ty=(Tensor[(672), float64],) */
}

def @func_16428() -> (Tensor[(390), float32],) {
  %932 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %933 = %932.0;
  (%933,)
}

def @func_5637() -> Tensor[(672), float64] {
  @func_5635() /* ty=Tensor[(672), float64] */
}

def @func_4771(%var_4770: Tensor[(15, 2, 13), int16]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), bool]) {
  %942 = fn (%var_4764: Tensor[(15, 2, 13), int16]) -> (Tensor[(672), float64], Tensor[(15, 2, 13), bool]) {
    %934 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %935 = %934.0;
    %936 = cast(%var_4764, dtype="bool") /* ty=Tensor[(15, 2, 13), bool] */;
    %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%935, dtype="bool") /* ty=Tensor[(15, 2, 13), bool] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %940 = @func_3243() /* ty=Tensor[(672), float64] */;
    %941 = logical_and(%938, %939) /* ty=Tensor[(15, 2, 13), bool] */;
    (%940, %941)
  };
  %942(%var_4770) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */
}

def @func_12827() -> (Tensor[(390), int16],) {
  @func_12825() /* ty=(Tensor[(390), int16],) */
}

def @func_6887() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %943 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %944 = @func_6635() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
  %945 = %943.0;
  %946 = %944.0;
  (%945, %946)
}

def @func_6094() -> (Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) {
  %955 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) {
    %947 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %948 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %949 = @func_4682() /* ty=(Tensor[(15, 16, 8), float64],) */;
    %950 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %951 = %947.0;
    %952 = %948.4;
    %953 = %949.0;
    %954 = %950.1;
    (%951, %952, %953, %954)
  };
  %955() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(5, 3, 14), int8], Tensor[(15, 16, 8), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_10646() -> (Tensor[(672), float64],) {
  @func_10644() /* ty=(Tensor[(672), float64],) */
}

def @func_8009() -> (Tensor[(5, 3, 14), int8],) {
  @func_8007() /* ty=(Tensor[(5, 3, 14), int8],) */
}

def @func_13483() -> (Tensor[(5, 3, 14), int8],) {
  %956 = @func_9528() /* ty=Tensor[(5, 3, 14), int8] */;
  (%956,)
}

def @func_15286() -> (Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) {
  %970 = fn () -> (Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) {
    %957 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %958 = %957.2;
    %959 = @func_11981() /* ty=(Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) */;
    %960 = %959.2;
    %961 = cast(%958, dtype="uint16") /* ty=Tensor[(210, 1), uint16] */;
    %962 = cast(%960, dtype="uint16") /* ty=Tensor[(576), uint16] */;
    %963 = cast(meta[relay.Constant][34] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %964 = reshape(%963, newshape=[14, 15, 8]) /* ty=Tensor[(14, 15, 8), float64] */;
    %965 = @func_15210(%964) /* ty=(Tensor[(14, 15, 8), float64], Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
    %966 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %967 = right_shift(%961, %962) /* ty=Tensor[(210, 576), uint16] */;
    %968 = %965.2;
    %969 = %966.0;
    (%967, %968, meta[relay.Constant][34] /* ty=Tensor[(1680), float64] */, %969)
  };
  %970() /* ty=(Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_19736() -> Tensor[(5, 3, 14), int8] {
  %972 = fn () -> Tensor[(5, 3, 14), int8] {
    %971 = @func_14273() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) */;
    %971.1
  };
  %972() /* ty=Tensor[(5, 3, 14), int8] */
}

def @func_17358() -> (Tensor[(15, 2, 13), int16],) {
  %975 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %973 = @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %974 = %973.0;
    (%974,)
  };
  %975() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_4638() -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) {
  @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */
}

def @func_5219() -> (Tensor[(15, 16, 8), int64],) {
  %976 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %978 = log10(%977) /* ty=Tensor[(15, 16, 8), float32] */;
  %979 = cast(%976, dtype="int64") /* ty=Tensor[(15, 16, 8), int64] */;
  %980 = shape_of(%978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%978, dtype="int64") /* ty=Tensor[(15, 16, 8), int64] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %983 = maximum(%981, %982) /* ty=Tensor[(15, 16, 8), int64] */;
  (%983,)
}

def @func_7540() -> Tensor[(4, 168), float64] {
  %984 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
  %985 = %984.2;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  erf(%986) /* ty=Tensor[(4, 168), float64] */
}

def @func_13429() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %987 = @func_12046() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %988 = @func_4014() /* ty=Tensor[(672), float64] */;
  %989 = %987.0;
  (%988, %989)
}

def @func_2006(%var_1968: Tensor[(6, 7, 16), float32], %var_1981: Tensor[(210), int8], %var_1982: Tensor[(390), int16]) -> (Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %990 = cast(%var_1968, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %991 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(6, 7, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %994 = cast(meta[relay.Constant][35] /* ty=Tensor[(6, 7, 16), float32] */, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %995 = shape_of(%var_1968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%var_1968, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %998 = cast(%var_1981, dtype="int8") /* ty=Tensor[(210), int8] */;
  %999 = cast(%var_1981, dtype="int8") /* ty=Tensor[(210), int8] */;
  %1000 = cast(%var_1982, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1001 = reshape(%998, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1002 = reshape(%999, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
  %1003 = reshape(%1000, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1004 = @func_398(%1001, %1002, %1003) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1005 = cast(%var_1982, dtype="float32") /* ty=Tensor[(390), float32] */;
  %1006 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1007 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1008 = divide(%992, %993) /* ty=Tensor[(6, 7, 16), float32] */;
  %1009 = power(%996, %997) /* ty=Tensor[(6, 7, 16), float64] */;
  %1010 = %1004.4;
  %1011 = atan(%1005) /* ty=Tensor[(390), float32] */;
  %1012 = %1006.0;
  %1013 = %1007.1;
  (%1008, %1009, %1010, %var_1981, %1011, %1012, %1013)
}

def @func_12318() -> (Tensor[(672), float64],) {
  %1014 = @func_7830() /* ty=Tensor[(672), float64] */;
  (%1014,)
}

def @func_4551() -> (Tensor[(15, 2, 13), int16],) {
  %1015 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  (%1015,)
}

def @func_5022() -> (Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
  %1023 = fn () -> (Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) {
    %1016 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
    %1017 = @func_2710() /* ty=Tensor[(15, 16, 8), float32] */;
    %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %1019 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %1020 = %1016.3;
    %1021 = log2(%1018) /* ty=Tensor[(15, 16, 8), float64] */;
    %1022 = %1019.2;
    (%1020, %1021, %1022)
  };
  %1023() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_16036() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), float32], Tensor[(390), int16]) {
  @func_16034() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), float32], Tensor[(390), int16]) */
}

def @func_11016() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1027 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
    %1024 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1025 = %1024.0;
    %1026 = @func_4073() /* ty=Tensor[(390), int16] */;
    (%1025, %1026)
  };
  %1027() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_6311() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  @func_6309() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_1507() -> (Tensor[(15, 2, 13), int16],) {
  %1028 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1029 = %1028.1;
  (%1029,)
}

def @func_11001() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  @func_10999() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_6004() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1030 = @func_3982() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1031 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1032 = %1030.0;
  %1033 = %1031.0;
  (%1032, %1033)
}

def @func_3780() -> (Tensor[(390), int16], Tensor[(390), float32]) {
  @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */
}

def @func_2680() -> Tensor[(15, 2, 13), int16] {
  %1034 = fn () -> Tensor[(15, 2, 13), int16] {
    @func_1610() /* ty=Tensor[(15, 2, 13), int16] */
  };
  %1034() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_14343() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) {
  %1047 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) {
    %1035 = @func_13075() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) */;
    %1036 = cast(meta[relay.Constant][36] /* ty=Tensor[(35, 6), int8] */, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
    %1037 = cast(meta[relay.Constant][37] /* ty=Tensor[(275, 2), float32] */, dtype="float32") /* ty=Tensor[(275, 2), float32] */;
    %1038 = reshape(%1036, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
    %1039 = reshape(%1037, newshape=[550]) /* ty=Tensor[(550), float32] */;
    %1040 = @func_2237(%1038, %1039) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
    %1041 = %1040.2;
    %1042 = cast(%1041, dtype="float64") /* ty=Tensor[(550), float64] */;
    %1043 = cast(meta[relay.Constant][37] /* ty=Tensor[(275, 2), float32] */, dtype="float32") /* ty=Tensor[(275, 2), float32] */;
    %1044 = %1035.0;
    %1045 = log2(%1042) /* ty=Tensor[(550), float64] */;
    %1046 = cos(%1043) /* ty=Tensor[(275, 2), float32] */;
    (%1044, meta[relay.Constant][36] /* ty=Tensor[(35, 6), int8] */, %1045, %1046)
  };
  %1047() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) */
}

def @func_12646() -> (Tensor[(15, 16, 8), float32],) {
  %1048 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
  %1049 = %1048.0;
  %1050 = cast(%1049, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %1051 = sinh(%1050) /* ty=Tensor[(15, 16, 8), float32] */;
  (%1051,)
}

def @func_16568() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), int16]) {
  %1063 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), int16]) {
    %1052 = @func_14893() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %1053 = @func_11268() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) */;
    %1054 = %1053.1;
    %1055 = @func_11748() /* ty=Tensor[(15, 16, 8), float32] */;
    %1056 = cast(%1055, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
    %1057 = shape_of(%1054, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(%1054, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1060 = %1052.0;
    %1061 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
    %1062 = right_shift(%1058, %1059) /* ty=Tensor[(15, 16, 8), int16] */;
    (%1060, %1061, %1062)
  };
  %1063() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), int16]) */
}

def @func_19859() -> Tensor[(390), int16] {
  @func_19857() /* ty=Tensor[(390), int16] */
}

def @func_11858() -> Tensor[(390), int16] {
  @func_11856() /* ty=Tensor[(390), int16] */
}

def @func_12775(%var_12773: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) {
  @func_12772(%var_12773) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) */
}

def @func_12566() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) {
  @func_12564() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */
}

def @func_1465() -> (Tensor[(15, 16, 8), float32],) {
  %1064 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1065 = %1064.0;
  (%1065,)
}

def @func_3359() -> Tensor[(672), float64] {
  %1066 = @func_2871() /* ty=(Tensor[(672), float64],) */;
  %1066.0
}

def @func_4966() -> Tensor[(390), float32] {
  %1068 = fn () -> Tensor[(390), float32] {
    %1067 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %1067.1
  };
  %1068() /* ty=Tensor[(390), float32] */
}

def @func_18340() -> (Tensor[(15, 16, 8), float32], Tensor[(390), float32]) {
  %1073 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(390), float32]) {
    %1069 = @func_11445() /* ty=(Tensor[(390), uint8], Tensor[(15, 16, 8), float32]) */;
    %1070 = @func_15557() /* ty=(Tensor[(390), float32],) */;
    %1071 = %1069.1;
    %1072 = %1070.0;
    (%1071, %1072)
  };
  %1073() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), float32]) */
}

def @func_8240() -> Tensor[(390), int16] {
  @func_8238() /* ty=Tensor[(390), int16] */
}

def @func_10644() -> (Tensor[(672), float64],) {
  %1074 = @func_3243() /* ty=Tensor[(672), float64] */;
  (%1074,)
}

def @func_10090() -> Tensor[(390), int16] {
  %1075 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1075.0
}

def @func_10854() -> (Tensor[(390), int16],) {
  @func_10852() /* ty=(Tensor[(390), int16],) */
}

def @func_2806() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_6764() -> (Tensor[(390), int16],) {
  @func_6762() /* ty=(Tensor[(390), int16],) */
}

def @func_3474() -> Tensor[(15, 2, 13), int16] {
  %1077 = fn () -> Tensor[(15, 2, 13), int16] {
    %1076 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %1076.0
  };
  %1077() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_12241() -> Tensor[(390), float32] {
  @func_12239() /* ty=Tensor[(390), float32] */
}

def @func_12507() -> (Tensor[(672), float64],) {
  %1079 = fn () -> (Tensor[(672), float64],) {
    %1078 = @func_5635() /* ty=Tensor[(672), float64] */;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(672), float64],) */
}

def @func_14539(%var_14537: Tensor[(110), int32]) -> (Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) {
  @func_14536(%var_14537) /* ty=(Tensor[(672), float64], Tensor[(5, 2, 11), bool], Tensor[(110), float32]) */
}

def @func_2087(%var_2038: Tensor[(12, 72), uint64]) -> (Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64], Tensor[(672), float64], Tensor[(6, 6, 16), uint32]) {
  %1080 = cast(%var_2038, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %1081 = reshape(%1080, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %1082 = @func_1716(%1081) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %1083 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1084 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 16), float32] */;
  %1085 = sigmoid(%1084) /* ty=Tensor[(6, 6, 16), float32] */;
  %1086 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 16), float32] */, dtype="int16") /* ty=Tensor[(6, 6, 16), int16] */;
  %1087 = shape_of(%1085, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%1085, dtype="int16") /* ty=Tensor[(6, 6, 16), int16] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1090 = multiply(%1088, %1089) /* ty=Tensor[(6, 6, 16), int16] */;
  %1091 = cast(%1085, dtype="uint32") /* ty=Tensor[(6, 6, 16), uint32] */;
  %1092 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%1090, dtype="uint32") /* ty=Tensor[(6, 6, 16), uint32] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1095 = %1082.0;
  %1096 = %1083.1;
  %1097 = minimum(%1093, %1094) /* ty=Tensor[(6, 6, 16), uint32] */;
  (%1095, %var_2038, %1096, %1097)
}

def @func_5629() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  @func_5627() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */
}

def @func_13553() -> (Tensor[(4, 168), float64], Tensor[(1920), float32]) {
  %1101 = fn () -> (Tensor[(4, 168), float64], Tensor[(1920), float32]) {
    %1098 = @func_11838() /* ty=(Tensor[(550), float32], Tensor[(1920), float32]) */;
    %1099 = @func_7540() /* ty=Tensor[(4, 168), float64] */;
    %1100 = %1098.1;
    (%1099, %1100)
  };
  %1101() /* ty=(Tensor[(4, 168), float64], Tensor[(1920), float32]) */
}

def @func_10268() -> Tensor[(15, 16, 8), float32] {
  @func_10266() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_6762() -> (Tensor[(390), int16],) {
  %1102 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1103 = %1102.3;
  (%1103,)
}

def @func_12624() -> (Tensor[(390), float32], Tensor[(14, 2, 7), float64]) {
  %1104 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %1105 = @func_11117() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64]) */;
  %1106 = %1104.0;
  %1107 = %1105.0;
  (%1106, %1107)
}

def @func_4073() -> Tensor[(390), int16] {
  %1108 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %1108.0
}

def @func_4342() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_10999() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %1109 = @func_6337() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) */;
  %1110 = @func_9058() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %1111 = @func_10668() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1112 = %1109.3;
  %1113 = @func_10170() /* ty=Tensor[(390), int16] */;
  %1114 = @func_4014() /* ty=Tensor[(672), float64] */;
  %1115 = %1110.1;
  %1116 = %1111.0;
  (%1112, %1113, %1114, %1115, %1116)
}

def @func_5797() -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  %1122 = fn () -> (Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
    %1117 = @func_3691() /* ty=(Tensor[(672), float64],) */;
    %1118 = @func_4573() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
    %1119 = @func_3243() /* ty=Tensor[(672), float64] */;
    %1120 = %1117.0;
    %1121 = %1118.0;
    (%1119, %1120, %1121)
  };
  %1122() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_16132() -> (Tensor[(8, 11, 11), float32], Tensor[(8, 11, 11), float64], Tensor[(390), int16]) {
  %1123 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %1124 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 11, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(8, 11, 11), float32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1127 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 11, 11), float32] */, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  %1128 = @func_14838() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1129 = minimum(%1125, %1126) /* ty=Tensor[(8, 11, 11), float32] */;
  %1130 = sinh(%1127) /* ty=Tensor[(8, 11, 11), float64] */;
  %1131 = %1128.0;
  (%1129, %1130, %1131)
}

def @func_14928() -> (Tensor[(672), float64],) {
  %1134 = fn () -> (Tensor[(672), float64],) {
    %1132 = @func_10644() /* ty=(Tensor[(672), float64],) */;
    %1133 = %1132.0;
    (%1133,)
  };
  %1134() /* ty=(Tensor[(672), float64],) */
}

def @func_13749(%var_13745: Tensor[(9, 13, 6), float32], %var_13746: Tensor[(4, 84), float32], %var_13747: Tensor[(396), float64], %var_13748: Tensor[(96, 20), float32]) -> (Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) {
  %1150 = fn (%var_13704: Tensor[(9, 13, 6), float32], %var_13711: Tensor[(4, 84), float32], %var_13722: Tensor[(396), float64], %var_13723: Tensor[(96, 20), float32]) -> (Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) {
    %1135 = cast(%var_13704, dtype="float32") /* ty=Tensor[(9, 13, 6), float32] */;
    %1136 = cast(%var_13711, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
    %1137 = reshape(%1136, newshape=[7, 8, 6]) /* ty=Tensor[(7, 8, 6), float32] */;
    %1138 = cast(meta[relay.Constant][41] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %1139 = cast(%var_13722, dtype="float64") /* ty=Tensor[(396), float64] */;
    %1140 = cast(%var_13723, dtype="float32") /* ty=Tensor[(96, 20), float32] */;
    %1141 = reshape(%1138, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float64] */;
    %1142 = reshape(%1139, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
    %1143 = reshape(%1140, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
    %1144 = @func_3297(%1141, %1142, %1143) /* ty=(Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) */;
    %1145 = cast(%var_13711, dtype="float64") /* ty=Tensor[(4, 84), float64] */;
    %1146 = erf(%1135) /* ty=Tensor[(9, 13, 6), float32] */;
    %1147 = @func_8082(%1137) /* ty=Tensor[(7, 8, 6), float32] */;
    %1148 = %1144.0;
    %1149 = sqrt(%1145) /* ty=Tensor[(4, 84), float64] */;
    (%1146, %1147, %1148, meta[relay.Constant][41] /* ty=Tensor[(99), float64] */, %var_13722, %var_13723, %1149)
  };
  %1150(%var_13745, %var_13746, %var_13747, %var_13748) /* ty=(Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) */
}

def @func_17713(%var_17679: Tensor[(198, 2), float64]) -> (Tensor[(672), float64], Tensor[(9, 13, 6), float32], Tensor[(702), float32], Tensor[(336), float32], Tensor[(1920), float32], Tensor[(390), float32], Tensor[(7, 13, 5), float32], Tensor[(15, 2, 13), int16], Tensor[(198, 2), uint64], Tensor[(672), float64]) {
  %1151 = cast(meta[relay.Constant][42] /* ty=Tensor[(702), float32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %1152 = cast(meta[relay.Constant][43] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1153 = cast(meta[relay.Constant][44] /* ty=Tensor[(198, 2), float64] */, dtype="float64") /* ty=Tensor[(198, 2), float64] */;
  %1154 = cast(meta[relay.Constant][45] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1155 = reshape(%1151, newshape=[9, 13, 6]) /* ty=Tensor[(9, 13, 6), float32] */;
  %1156 = reshape(%1152, newshape=[4, 84]) /* ty=Tensor[(4, 84), float32] */;
  %1157 = reshape(%1153, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %1158 = reshape(%1154, newshape=[96, 20]) /* ty=Tensor[(96, 20), float32] */;
  %1159 = @func_13744(%1155, %1156, %1157, %1158) /* ty=(Tensor[(9, 13, 6), float32], Tensor[(7, 8, 6), float32], Tensor[(4, 9, 11), float64], Tensor[(99), float64], Tensor[(396), float64], Tensor[(96, 20), float32], Tensor[(4, 84), float64]) */;
  %1160 = @func_9279() /* ty=(Tensor[(390), float32],) */;
  %1161 = cast(meta[relay.Constant][46] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %1162 = cast(meta[relay.Constant][46] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %1163 = reshape(%1161, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %1164 = reshape(%1162, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %1165 = @func_8409(%1163, %1164) /* ty=(Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) */;
  %1166 = %1165.1;
  %1167 = cast(meta[relay.Constant][46] /* ty=Tensor[(455), uint8] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1168 = shape_of(%1166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1169 = cast(%1166, dtype="float32") /* ty=Tensor[(7, 13, 5), float32] */;
  %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1171 = cast(%var_17679, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %1172 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(198, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1173 = cast(meta[relay.Constant][44] /* ty=Tensor[(198, 2), float64] */, dtype="uint8") /* ty=Tensor[(198, 2), uint8] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1175 = bitwise_xor(%1173, %1174) /* ty=Tensor[(198, 2), uint8] */;
  %1176 = cast(%var_17679, dtype="uint64") /* ty=Tensor[(198, 2), uint64] */;
  %1177 = shape_of(%1175, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1178 = cast(%1175, dtype="uint64") /* ty=Tensor[(198, 2), uint64] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1180 = @func_7442() /* ty=(Tensor[(672), float64],) */;
  %1181 = @func_5635() /* ty=Tensor[(672), float64] */;
  %1182 = %1159.0;
  %1183 = %1160.0;
  %1184 = power(%1169, %1170) /* ty=Tensor[(7, 13, 5), float32] */;
  %1185 = @func_15065() /* ty=Tensor[(15, 2, 13), int16] */;
  %1186 = maximum(%1178, %1179) /* ty=Tensor[(198, 2), uint64] */;
  %1187 = %1180.0;
  (%1181, %1182, meta[relay.Constant][42] /* ty=Tensor[(702), float32] */, meta[relay.Constant][43] /* ty=Tensor[(336), float32] */, meta[relay.Constant][45] /* ty=Tensor[(1920), float32] */, %1183, %1184, %1185, %1186, %1187)
}

def @func_13414() -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  @func_13412() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_11476() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  @func_11474() /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_6606() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %1190 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
    %1188 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
    %1189 = @func_2710() /* ty=Tensor[(15, 16, 8), float32] */;
    (%1188, %1189)
  };
  %1190() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_9894(%var_9892: Tensor[(110), int32]) -> (Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) {
  @func_9891(%var_9892) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) */
}

def @func_9169(%var_9167: Tensor[(210), int8], %var_9168: Tensor[(390), int16]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) {
  @func_9165(%var_9167, %var_9168) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(210), int8], Tensor[(390), int16], Tensor[(5, 3, 14), int8]) */
}

def @func_19532() -> (Tensor[(4, 168), uint16],) {
  %1193 = fn () -> (Tensor[(4, 168), uint16],) {
    %1191 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
    %1192 = %1191.1;
    (%1192,)
  };
  %1193() /* ty=(Tensor[(4, 168), uint16],) */
}

def @func_17212() -> (Tensor[(672), float64],) {
  %1194 = @func_15629() /* ty=(Tensor[(672), float64],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_3692() -> (Tensor[(672), float64],) {
  %1198 = fn () -> (Tensor[(672), float64],) {
    %1196 = @func_2871() /* ty=(Tensor[(672), float64],) */;
    %1197 = %1196.0;
    (%1197,)
  };
  %1198() /* ty=(Tensor[(672), float64],) */
}

def @func_14092() -> (Tensor[(15, 2, 13), int16],) {
  %1201 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %1199 = @func_12700() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1200 = %1199.0;
    (%1200,)
  };
  %1201() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_6916() -> (Tensor[(15, 2, 13), int16],) {
  %1204 = fn () -> (Tensor[(15, 2, 13), int16],) {
    %1202 = @func_3982() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %1203 = %1202.0;
    (%1203,)
  };
  %1204() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_7321() -> Tensor[(390), int16] {
  %1205 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1205.0
}

def @func_7508(%var_7507: Tensor[(210, 11), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(210, 11), bool]) {
  %1217 = fn (%var_7493: Tensor[(210, 11), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(210, 11), bool]) {
    %1206 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1207 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1208 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %1209 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %1210 = %1209.2;
    %1211 = cast(%1210, dtype="bool") /* ty=Tensor[(210, 1), bool] */;
    %1212 = cast(%var_7493, dtype="bool") /* ty=Tensor[(210, 11), bool] */;
    %1213 = %1206.0;
    %1214 = %1207.0;
    %1215 = %1208.0;
    %1216 = equal(%1211, %1212) /* ty=Tensor[(210, 11), bool] */;
    (%1213, %1214, %1215, %1216)
  };
  %1217(%var_7507) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(210, 11), bool]) */
}

def @func_14274() -> (Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) {
  %1223 = fn () -> (Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) {
    %1218 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
    %1219 = @func_13483() /* ty=(Tensor[(5, 3, 14), int8],) */;
    %1220 = %1218.1;
    %1221 = %1219.0;
    %1222 = @func_13814() /* ty=Tensor[(390), int16] */;
    (%1220, %1221, %1222)
  };
  %1223() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(5, 3, 14), int8], Tensor[(390), int16]) */
}

def @func_8777() -> Tensor[(15, 2, 13), int16] {
  %1224 = fn () -> Tensor[(15, 2, 13), int16] {
    @func_3473() /* ty=Tensor[(15, 2, 13), int16] */
  };
  %1224() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_16327() -> (Tensor[(672), float64], Tensor[(14, 2, 7), float64]) {
  %1225 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %1226 = @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */;
  %1227 = %1225.0;
  %1228 = %1226.1;
  (%1227, %1228)
}

def @func_10815() -> Tensor[(15, 16, 8), float32] {
  @func_2604() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_9530() -> Tensor[(5, 3, 14), int8] {
  @func_9528() /* ty=Tensor[(5, 3, 14), int8] */
}

def @func_4066() -> (Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) {
  @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */
}

def @func_3121(%var_3120: Tensor[(15, 16, 8), float32]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) {
  %1237 = fn (%var_3114: Tensor[(15, 16, 8), float32]) -> (Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) {
    %1229 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
    %1230 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
    %1231 = cast(%var_3114, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
    %1232 = shape_of(%1230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1233 = cast(%1230, dtype="uint8") /* ty=Tensor[(15, 16, 8), uint8] */;
    %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1235 = %1229.0;
    %1236 = add(%1233, %1234) /* ty=Tensor[(15, 16, 8), uint8] */;
    (%1235, %1236)
  };
  %1237(%var_3120) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) */
}

def @func_10771() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  @func_10769() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */
}

def @func_16614() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) {
  %1242 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) {
    %1238 = @func_10482() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %1239 = %1238.0;
    %1240 = @func_5871() /* ty=Tensor[(672), float64] */;
    %1241 = @func_11543() /* ty=Tensor[(672), float64] */;
    (%1239, %1240, %1241)
  };
  %1242() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(672), float64]) */
}

def @func_4553() -> (Tensor[(15, 2, 13), int16],) {
  @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_1829() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) {
  %1243 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1244 = cast(meta[relay.Constant][47] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1245 = reshape(%1244, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1246 = @func_1536(%1245) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1247 = %1243.1;
  %1248 = %1246.2;
  (%1247, %1248, meta[relay.Constant][47] /* ty=Tensor[(672), float64] */)
}

def @func_12133() -> Tensor[(15, 2, 13), int16] {
  @func_12131() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_20089() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(4, 168), int32], Tensor[(6, 8, 14), float64], Tensor[(390), float32]) {
  %1249 = @func_15972() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1250 = @func_11543() /* ty=Tensor[(672), float64] */;
  %1251 = cast(%1250, dtype="uint64") /* ty=Tensor[(672), uint64] */;
  %1252 = reshape(%1251, newshape=[4, 168]) /* ty=Tensor[(4, 168), uint64] */;
  %1253 = @func_5506(%1252) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) */;
  %1254 = %1253.4;
  %1255 = cast(%1254, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %1256 = reshape(%1255, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1257 = @func_1536(%1256) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1258 = @func_15557() /* ty=(Tensor[(390), float32],) */;
  %1259 = %1249.1;
  %1260 = %1257.1;
  %1261 = %1258.0;
  (%1259, %1250, %1254, %1260, %1261)
}

def @func_14893() -> (Tensor[(15, 16, 8), float32],) {
  %1262 = @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1263 = %1262.1;
  (%1263,)
}

def @func_5508(%var_5507: Tensor[(4, 168), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) {
  %1282 = fn (%var_5482: Tensor[(4, 168), uint64]) -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) {
    %1264 = @func_4834() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */;
    %1265 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
    %1266 = @func_3042() /* ty=(Tensor[(390), int16],) */;
    %1267 = @func_4064() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) */;
    %1268 = %1267.1;
    %1269 = cast(%var_5482, dtype="int32") /* ty=Tensor[(4, 168), int32] */;
    %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1271 = cast(%1268, dtype="int32") /* ty=Tensor[(4, 168), int32] */;
    %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1273 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
    %1274 = %1273.3;
    %1275 = cast(%1274, dtype="float32") /* ty=Tensor[(550), float32] */;
    %1276 = @func_3473() /* ty=Tensor[(15, 2, 13), int16] */;
    %1277 = %1264.1;
    %1278 = %1265.0;
    %1279 = %1266.0;
    %1280 = right_shift(%1271, %1272) /* ty=Tensor[(4, 168), int32] */;
    %1281 = cos(%1275) /* ty=Tensor[(550), float32] */;
    (%1276, %1277, %1278, %1279, %1280, %1281)
  };
  %1282(%var_5507) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(15, 16, 8), float32], Tensor[(390), int16], Tensor[(4, 168), int32], Tensor[(550), float32]) */
}

def @func_6106() -> Tensor[(15, 2, 13), int16] {
  %1283 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1283.0
}

def @func_15747() -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
  %1288 = fn () -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) {
    %1284 = @func_7748() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
    %1285 = @func_11543() /* ty=Tensor[(672), float64] */;
    %1286 = %1284.0;
    %1287 = @func_5871() /* ty=Tensor[(672), float64] */;
    (%1285, %1286, %1287)
  };
  %1288() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */
}

def @func_4522(%var_4521: Tensor[(14, 8, 3), float64]) -> (Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) {
  %1305 = fn (%var_4486: Tensor[(14, 8, 3), float64]) -> (Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) {
    %1289 = cast(%var_4486, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
    %1290 = sqrt(%1289) /* ty=Tensor[(14, 8, 3), float64] */;
    %1291 = cast(%1290, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
    %1292 = shape_of(%var_4486, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1293 = cast(%var_4486, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
    %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1295 = less_equal(%1293, %1294) /* ty=Tensor[(14, 8, 3), bool] */;
    %1296 = cast(%1295, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
    %1297 = shape_of(%1290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1298 = cast(%1290, dtype="uint32") /* ty=Tensor[(14, 8, 3), uint32] */;
    %1299 = dyn.reshape(%1296, %1297, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1300 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1301 = @func_2412() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), float32], Tensor[(4, 168), float32], Tensor[(210), int8], Tensor[(5, 3, 14), int8]) */;
    %1302 = bitwise_xor(%1298, %1299) /* ty=Tensor[(14, 8, 3), uint32] */;
    %1303 = %1300.0;
    %1304 = %1301.3;
    (%1302, %1303, %1304)
  };
  %1305(%var_4521) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */
}

def @func_14074(%var_14072: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(672), float64]) {
  @func_14071(%var_14072) /* ty=(Tensor[(13, 6, 14), float64], Tensor[(672), float64]) */
}

def @func_10553() -> (Tensor[(15, 16, 8), float32],) {
  %1308 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %1306 = @func_6309() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */;
    %1307 = %1306.0;
    (%1307,)
  };
  %1308() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_10092() -> Tensor[(390), int16] {
  @func_10090() /* ty=Tensor[(390), int16] */
}

def @func_13816() -> Tensor[(390), int16] {
  @func_13814() /* ty=Tensor[(390), int16] */
}

def @func_14216() -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
  %1317 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
    %1309 = @func_2458() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1310 = cast(meta[relay.Constant][48] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1311 = %1309.0;
    %1312 = cast(%1311, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %1313 = reshape(%1310, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
    %1314 = reshape(%1312, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1315 = @func_688(%1313, %1314) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1316 = %1315.0;
    (%1311, %1316, meta[relay.Constant][48] /* ty=Tensor[(672), float64] */)
  };
  %1317() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */
}

def @func_10812() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  %1322 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
    %1318 = @func_8335() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(672), float64]) */;
    %1319 = @func_3042() /* ty=(Tensor[(390), int16],) */;
    %1320 = %1318.0;
    %1321 = %1319.0;
    (%1320, %1321)
  };
  %1322() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */
}

def @func_4636() -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) {
  %1323 = cast(meta[relay.Constant][49] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1324 = reshape(%1323, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %1325 = @func_3119(%1324) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) */;
  %1326 = @func_4073() /* ty=Tensor[(390), int16] */;
  %1327 = %1325.0;
  (%1326, %1327, meta[relay.Constant][49] /* ty=Tensor[(1920), float32] */)
}

def @func_15453() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(15, 15, 12), float32], Tensor[(2700, 1), float32]) {
  @func_15451() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(15, 15, 12), float32], Tensor[(2700, 1), float32]) */
}

def @func_19484() -> (Tensor[(15, 16, 8), float32],) {
  @func_19482() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_9891(%var_9875: Tensor[(110), int32]) -> (Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) {
  %1328 = @func_8752() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1329 = cast(meta[relay.Constant][50] /* ty=Tensor[(336, 1), float64] */, dtype="float64") /* ty=Tensor[(336, 1), float64] */;
  %1330 = reshape(%1329, newshape=[14, 8, 3]) /* ty=Tensor[(14, 8, 3), float64] */;
  %1331 = @func_4520(%1330) /* ty=(Tensor[(14, 8, 3), uint32], Tensor[(15, 2, 13), int16], Tensor[(210), int8]) */;
  %1332 = cast(meta[relay.Constant][51] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %1333 = cast(meta[relay.Constant][51] /* ty=Tensor[(455), uint8] */, dtype="uint8") /* ty=Tensor[(455), uint8] */;
  %1334 = reshape(%1332, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %1335 = reshape(%1333, newshape=[7, 13, 5]) /* ty=Tensor[(7, 13, 5), uint8] */;
  %1336 = @func_8409(%1334, %1335) /* ty=(Tensor[(7, 13, 5), bool], Tensor[(7, 13, 5), float32], Tensor[(390), int16], Tensor[(672), float64]) */;
  %1337 = cast(%var_9875, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1338 = cast(%var_9875, dtype="int32") /* ty=Tensor[(110), int32] */;
  %1339 = reshape(%1337, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %1340 = reshape(%1338, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %1341 = @func_8432(%1339, %1340) /* ty=(Tensor[(5, 2, 11), bool],) */;
  %1342 = %1328.0;
  %1343 = %1331.0;
  %1344 = %1336.0;
  %1345 = %1341.0;
  (%1342, %1343, meta[relay.Constant][50] /* ty=Tensor[(336, 1), float64] */, %1344, meta[relay.Constant][51] /* ty=Tensor[(455), uint8] */, %1345, %var_9875)
}

def @func_13235() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) {
  %1346 = @func_11474() /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1347 = cast(meta[relay.Constant][52] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1348 = cast(meta[relay.Constant][53] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %1349 = %1346.1;
  %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %1351 = reshape(%1347, newshape=[1, 9, 11]) /* ty=Tensor[(1, 9, 11), float64] */;
  %1352 = reshape(%1348, newshape=[4, 9, 11]) /* ty=Tensor[(4, 9, 11), float64] */;
  %1353 = reshape(%1350, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
  %1354 = @func_3297(%1351, %1352, %1353) /* ty=(Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) */;
  %1355 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
  %1356 = %1354.2;
  %1357 = %1355.0;
  (%1349, %1356, meta[relay.Constant][52] /* ty=Tensor[(99), float64] */, meta[relay.Constant][53] /* ty=Tensor[(396), float64] */, %1357)
}

def @func_8687() -> (Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) {
  %1364 = fn () -> (Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) {
    %1358 = @func_8170() /* ty=(Tensor[(672), float64], Tensor[(210), int8]) */;
    %1359 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
    %1360 = @func_5021() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float64], Tensor[(15, 16, 8), float32]) */;
    %1361 = %1358.1;
    %1362 = %1359.1;
    %1363 = %1360.1;
    (%1361, %1362, %1363)
  };
  %1364() /* ty=(Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) */
}

def @func_6006() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  @func_6004() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_2011(%var_2008: Tensor[(6, 7, 16), float32], %var_2009: Tensor[(210), int8], %var_2010: Tensor[(390), int16]) -> (Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  @func_2006(%var_2008, %var_2009, %var_2010) /* ty=(Tensor[(6, 7, 16), float32], Tensor[(6, 7, 16), float64], Tensor[(15, 2, 13), int16], Tensor[(210), int8], Tensor[(390), float32], Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_7767() -> Tensor[(672), float64] {
  %1366 = fn () -> Tensor[(672), float64] {
    %1365 = @func_4795() /* ty=(Tensor[(672), float64],) */;
    %1365.0
  };
  %1366() /* ty=Tensor[(672), float64] */
}

def @func_5627() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  %1367 = @func_2976() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1368 = @func_3949() /* ty=(Tensor[(672), float64],) */;
  %1369 = %1367.1;
  %1370 = %1368.0;
  (%1369, %1370)
}

def @func_4075() -> Tensor[(390), int16] {
  @func_4073() /* ty=Tensor[(390), int16] */
}

def @func_10483() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1375 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
    %1371 = @func_7009() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(390), int16]) */;
    %1372 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %1373 = %1371.0;
    %1374 = %1372.0;
    (%1373, %1374)
  };
  %1375() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_19213() -> (Tensor[(390), int16], Tensor[(390), float32], Tensor[(672), float64]) {
  @func_19211() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(672), float64]) */
}

def @func_7411() -> (Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) {
  %1376 = @func_6762() /* ty=(Tensor[(390), int16],) */;
  %1377 = %1376.0;
  %1378 = cast(%1377, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1379 = cast(meta[relay.Constant][54] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
  %1380 = reshape(%1378, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %1381 = reshape(%1379, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
  %1382 = @func_6969(%1380, %1381) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
  %1383 = @func_5796() /* ty=(Tensor[(672), float64], Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */;
  %1384 = %1382.2;
  %1385 = %1383.1;
  (%1377, %1384, meta[relay.Constant][54] /* ty=Tensor[(1920), float32] */, %1385)
}

def @func_20091() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(4, 168), int32], Tensor[(6, 8, 14), float64], Tensor[(390), float32]) {
  @func_20089() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(4, 168), int32], Tensor[(6, 8, 14), float64], Tensor[(390), float32]) */
}

def @func_7120() -> (Tensor[(672), float64], Tensor[(390), float32]) {
  @func_7118() /* ty=(Tensor[(672), float64], Tensor[(390), float32]) */
}

def @func_2107(%var_2106: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(390), int16]) {
  %1393 = fn (%var_2095: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(390), int16]) {
    %1386 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
    %1387 = shape_of(%var_2095, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1388 = cast(%var_2095, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
    %1389 = dyn.reshape(%1386, %1387, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1390 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1391 = add(%1388, %1389) /* ty=Tensor[(12, 3, 7), float32] */;
    %1392 = %1390.1;
    (%1391, %1392)
  };
  %1393(%var_2106) /* ty=(Tensor[(12, 3, 7), float32], Tensor[(390), int16]) */
}

def @func_18453() -> Tensor[(2, 11, 4), bool] {
  @func_18451() /* ty=Tensor[(2, 11, 4), bool] */
}

def @func_10576() -> (Tensor[(672), float64],) {
  @func_10574() /* ty=(Tensor[(672), float64],) */
}

def @func_13075() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) {
  %1394 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1395 = @func_8686() /* ty=(Tensor[(210), int8], Tensor[(390), int16], Tensor[(15, 16, 8), float64]) */;
  %1396 = %1394.0;
  %1397 = %1395.2;
  (%1396, %1397)
}

def @func_6637() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  @func_6635() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_1538(%var_1537: Tensor[(672), float64]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
  %1406 = fn (%var_1532: Tensor[(672), float64]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) {
    %1398 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1399 = cast(%var_1532, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1400 = %1398.0;
    %1401 = cast(%1400, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %1402 = reshape(%1399, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
    %1403 = reshape(%1401, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1404 = @func_688(%1402, %1403) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1405 = %1404.0;
    (%1400, %1405, %var_1532)
  };
  %1406(%var_1537) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */
}

def @func_8432(%var_8422: Tensor[(5, 2, 11), int32], %var_8423: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), bool],) {
  %1407 = cast(%var_8423, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %1408 = shape_of(%var_8422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1409 = cast(%var_8422, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %1410 = dyn.reshape(%1407, %1408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1411 = less_equal(%1409, %1410) /* ty=Tensor[(5, 2, 11), bool] */;
  (%1411,)
}

def @func_11838() -> (Tensor[(550), float32], Tensor[(1920), float32]) {
  %1412 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %1413 = @func_11170() /* ty=Tensor[(550), float32] */;
  %1414 = %1412.2;
  (%1413, %1414)
}

def @func_13412() -> (Tensor[(672), float64], Tensor[(15, 2, 13), int16]) {
  %1415 = @func_3590() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1416 = @func_7830() /* ty=Tensor[(672), float64] */;
  %1417 = %1415.0;
  (%1416, %1417)
}

def @func_12772(%var_12740: Tensor[(15, 15, 12), float32]) -> (Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) {
  %1418 = cast(%var_12740, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
  %1419 = cast(%var_12740, dtype="float32") /* ty=Tensor[(15, 15, 12), float32] */;
  %1420 = sinh(%1418) /* ty=Tensor[(15, 15, 12), float32] */;
  %1421 = sin(%1419) /* ty=Tensor[(15, 15, 12), float32] */;
  (%1420, %1421)
}

def @func_10574() -> (Tensor[(672), float64],) {
  %1422 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%1422,)
}

def @func_2605() -> Tensor[(15, 16, 8), float32] {
  %1424 = fn () -> Tensor[(15, 16, 8), float32] {
    %1423 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %1423.0
  };
  %1424() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_1631() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1425 = @func_1413() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1426 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
  %1427 = %1425.2;
  (%1426, %1427)
}

def @func_4835() -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) {
  %1434 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) {
    %1428 = @func_4551() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1429 = cast(meta[relay.Constant][56] /* ty=Tensor[(210, 1), int8] */, dtype="int8") /* ty=Tensor[(210, 1), int8] */;
    %1430 = reshape(%1429, newshape=[105, 2]) /* ty=Tensor[(105, 2), int8] */;
    %1431 = @func_1792(%1430) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), float32], Tensor[(105, 2), float64], Tensor[(105, 2), float64]) */;
    %1432 = %1428.0;
    %1433 = %1431.3;
    (%1432, %1433, meta[relay.Constant][56] /* ty=Tensor[(210, 1), int8] */)
  };
  %1434() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(105, 2), float64], Tensor[(210, 1), int8]) */
}

def @func_15359() -> Tensor[(390), float32] {
  %1436 = fn () -> Tensor[(390), float32] {
    %1435 = @func_11806() /* ty=(Tensor[(390), float32],) */;
    %1435.0
  };
  %1436() /* ty=Tensor[(390), float32] */
}

def @func_4064() -> (Tensor[(15, 16, 8), float32], Tensor[(4, 168), uint64]) {
  %1437 = @func_1226() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1438 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 168), float64] */, dtype="float64") /* ty=Tensor[(4, 168), float64] */;
  %1439 = reshape(%1438, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %1440 = @func_1536(%1439) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1441 = %1440.1;
  %1442 = cast(%1441, dtype="uint64") /* ty=Tensor[(6, 8, 14), uint64] */;
  %1443 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(4, 168), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1444 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 168), float64] */, dtype="uint64") /* ty=Tensor[(4, 168), uint64] */;
  %1445 = dyn.reshape(%1442, %1443, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1446 = %1437.0;
  %1447 = bitwise_or(%1444, %1445) /* ty=Tensor[(4, 168), uint64] */;
  (%1446, %1447)
}

def @func_11172() -> Tensor[(550), float32] {
  @func_11170() /* ty=Tensor[(550), float32] */
}

def @func_13431() -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32]) {
  @func_13429() /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_1467() -> (Tensor[(15, 16, 8), float32],) {
  @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_14895() -> (Tensor[(15, 16, 8), float32],) {
  @func_14893() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_17033() -> (Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(14, 2, 7), float64]) {
  %1454 = fn () -> (Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(14, 2, 7), float64]) {
    %1448 = @func_6762() /* ty=(Tensor[(390), int16],) */;
    %1449 = @func_9058() /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
    %1450 = @func_11117() /* ty=(Tensor[(14, 2, 7), float64], Tensor[(672), float64]) */;
    %1451 = %1448.0;
    %1452 = %1449.1;
    %1453 = %1450.0;
    (%1451, %1452, %1453)
  };
  %1454() /* ty=(Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(14, 2, 7), float64]) */
}

def @func_5863(%var_5862: float32) -> (Tensor[(11, 5, 1), float32], Tensor[(15, 2, 13), int16]) {
  %1460 = fn (%var_5853: float32) -> (Tensor[(11, 5, 1), float32], Tensor[(15, 2, 13), int16]) {
    %1455 = cast(%var_5853, dtype="float32") /* ty=float32 */;
    %1456 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 5, 1), float32] */;
    %1457 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1458 = mod(%1455, %1456) /* ty=Tensor[(11, 5, 1), float32] */;
    %1459 = %1457.0;
    (%1458, %1459)
  };
  %1460(%var_5862) /* ty=(Tensor[(11, 5, 1), float32], Tensor[(15, 2, 13), int16]) */
}

def @func_6108() -> Tensor[(15, 2, 13), int16] {
  @func_6106() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_13814() -> Tensor[(390), int16] {
  @func_11856() /* ty=Tensor[(390), int16] */
}

def @func_7063() -> (Tensor[(390), float32],) {
  %1462 = fn () -> (Tensor[(390), float32],) {
    %1461 = @func_4965() /* ty=Tensor[(390), float32] */;
    (%1461,)
  };
  %1462() /* ty=(Tensor[(390), float32],) */
}

def @func_1718(%var_1717: Tensor[(9, 8, 12), uint64]) -> (Tensor[(9, 8, 12), uint64],) {
  %1468 = fn (%var_1709: Tensor[(9, 8, 12), uint64]) -> (Tensor[(9, 8, 12), uint64],) {
    %1463 = cast(%var_1709, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
    %1464 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(9, 8, 12), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1465 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
    %1466 = dyn.reshape(%1463, %1464, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1467 = right_shift(%1465, %1466) /* ty=Tensor[(9, 8, 12), uint64] */;
    (%1467,)
  };
  %1468(%var_1717) /* ty=(Tensor[(9, 8, 12), uint64],) */
}

def @func_3361() -> Tensor[(672), float64] {
  @func_3359() /* ty=Tensor[(672), float64] */
}

def @func_16430() -> (Tensor[(390), float32],) {
  @func_16428() /* ty=(Tensor[(390), float32],) */
}

def @func_6969(%var_6949: Tensor[(390), int16], %var_6960: Tensor[(1920), float32]) -> (Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) {
  %1469 = cast(%var_6949, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1470 = reshape(%1469, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1471 = @func_4769(%1470) /* ty=(Tensor[(672), float64], Tensor[(15, 2, 13), bool]) */;
  %1472 = @func_5061() /* ty=Tensor[(1920), float32] */;
  %1473 = cast(%var_6960, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %1474 = shape_of(%1472, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1475 = cast(%1472, dtype="bool") /* ty=Tensor[(1920), bool] */;
  %1476 = dyn.reshape(%1473, %1474, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1477 = %1471.0;
  %1478 = equal(%1475, %1476) /* ty=Tensor[(1920), bool] */;
  (%1477, %var_6949, %1478)
}

def @func_11270() -> (Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) {
  @func_11268() /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) */
}

def @func_15402() -> Tensor[(672), float64] {
  %1479 = fn () -> Tensor[(672), float64] {
    @func_11543() /* ty=Tensor[(672), float64] */
  };
  %1479() /* ty=Tensor[(672), float64] */
}

def @func_16295(%var_16294: Tensor[(110), int32]) -> (Tensor[(13, ?, 12), uint64], Tensor[(110), int32], Tensor[(110), int32]) {
  %1491 = fn (%var_16283: Tensor[(110), int32]) -> (Tensor[(13, ?, 12), uint64], Tensor[(110), int32], Tensor[(110), int32]) {
    %1480 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 12), float32] */;
    %1481 = sigmoid(%1480) /* ty=Tensor[(13, 1, 12), float32] */;
    %1482 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 1, 12), float32] */, dtype="uint64") /* ty=Tensor[(13, 1, 12), uint64] */;
    %1483 = shape_of(%1481, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1484 = cast(%1481, dtype="uint64") /* ty=Tensor[(13, 1, 12), uint64] */;
    %1485 = dyn.reshape(%1482, %1483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1486 = cast(%var_16283, dtype="int32") /* ty=Tensor[(110), int32] */;
    %1487 = reshape(%1486, newshape=[110]) /* ty=Tensor[(110), int32] */;
    %1488 = @func_9891(%1487) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(14, 8, 3), uint32], Tensor[(336, 1), float64], Tensor[(7, 13, 5), bool], Tensor[(455), uint8], Tensor[(5, 2, 11), bool], Tensor[(110), int32]) */;
    %1489 = minimum(%1484, %1485) /* ty=Tensor[(13, ?, 12), uint64] */;
    %1490 = %1488.6;
    (%1489, %1490, %var_16283)
  };
  %1491(%var_16294) /* ty=(Tensor[(13, ?, 12), uint64], Tensor[(110), int32], Tensor[(110), int32]) */
}

def @func_16352() -> (Tensor[(672), float64],) {
  %1492 = @func_3691() /* ty=(Tensor[(672), float64],) */;
  %1493 = %1492.0;
  (%1493,)
}

def @func_11268() -> (Tensor[(390), int16], Tensor[(15, 16, 8), int64], Tensor[(390), float32], Tensor[(672), float32]) {
  %1494 = @func_8264() /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(672), float64]) */;
  %1495 = @func_5219() /* ty=(Tensor[(15, 16, 8), int64],) */;
  %1496 = cast(meta[relay.Constant][61] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1497 = reshape(%1496, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1498 = @func_7697(%1497) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) */;
  %1499 = %1494.1;
  %1500 = %1495.0;
  %1501 = %1498.6;
  (%1499, %1500, %1501, meta[relay.Constant][61] /* ty=Tensor[(672), float32] */)
}

def @func_398(%var_349: Tensor[(5, 3, 14), int8], %var_350: Tensor[(5, 3, 14), int8], %var_361: Tensor[(390), int16]) -> (Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1502 = cast(%var_350, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1503 = shape_of(%var_349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1504 = cast(%var_349, dtype="int8") /* ty=Tensor[(5, 3, 14), int8] */;
  %1505 = dyn.reshape(%1502, %1503, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1506 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1507 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1508 = reshape(%1506, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1509 = reshape(%1507, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1510 = @func_182(%1508, %1509) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1511 = %1510.0;
  %1512 = cast(%1511, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1513 = cast(%var_361, dtype="int16") /* ty=Tensor[(390), int16] */;
  %1514 = reshape(%1512, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1515 = reshape(%1513, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1516 = @func_182(%1514, %1515) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1517 = %1516.0;
  %1518 = cast(%1517, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1519 = cast(%1511, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
  %1520 = reshape(%1518, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1521 = reshape(%1519, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
  %1522 = @func_182(%1520, %1521) /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1523 = multiply(%1504, %1505) /* ty=Tensor[(5, 3, 14), int8] */;
  %1524 = %1522.0;
  (%1523, %1511, %var_361, %1517, %1524)
}

def @func_8172() -> (Tensor[(672), float64], Tensor[(210), int8]) {
  @func_8170() /* ty=(Tensor[(672), float64], Tensor[(210), int8]) */
}

def @func_15451() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64], Tensor[(15, 15, 12), float32], Tensor[(2700, 1), float32]) {
  %1525 = @func_8528() /* ty=(Tensor[(672), float64],) */;
  %1526 = cast(meta[relay.Constant][62] /* ty=Tensor[(2700, 1), float32] */, dtype="float32") /* ty=Tensor[(2700, 1), float32] */;
  %1527 = reshape(%1526, newshape=[15, 15, 12]) /* ty=Tensor[(15, 15, 12), float32] */;
  %1528 = @func_12772(%1527) /* ty=(Tensor[(15, 15, 12), float32], Tensor[(15, 15, 12), float32]) */;
  %1529 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
  %1530 = %1525.0;
  %1531 = %1528.0;
  (%1529, %1530, %1531, meta[relay.Constant][62] /* ty=Tensor[(2700, 1), float32] */)
}

def @func_12046() -> (Tensor[(15, 16, 8), float32],) {
  %1532 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%1532,)
}

def @func_1831() -> (Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) {
  @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */
}

def @func_4016() -> Tensor[(672), float64] {
  @func_4014() /* ty=Tensor[(672), float64] */
}

def @func_6437(%var_6435: Tensor[(336), float64]) -> (Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) {
  @func_6434(%var_6435) /* ty=(Tensor[(672), float64], Tensor[(210), int8], Tensor[(336), float64]) */
}

def @func_12626() -> (Tensor[(390), float32], Tensor[(14, 2, 7), float64]) {
  @func_12624() /* ty=(Tensor[(390), float32], Tensor[(14, 2, 7), float64]) */
}

def @func_13907() -> Tensor[(390), int16] {
  @func_13905() /* ty=Tensor[(390), int16] */
}

def @func_3186() -> Tensor[(15, 16, 8), float32] {
  %1533 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
  %1533.1
}

def @func_13237() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) {
  @func_13235() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), uint8], Tensor[(99), float64], Tensor[(396), float64], Tensor[(390), int16]) */
}

def @func_15973() -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
  %1540 = fn () -> (Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) {
    %1534 = @func_14017() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %1535 = @func_6915() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1536 = @func_10170() /* ty=Tensor[(390), int16] */;
    %1537 = @func_4073() /* ty=Tensor[(390), int16] */;
    %1538 = %1534.0;
    %1539 = %1535.0;
    (%1536, %1537, %1538, %1539)
  };
  %1540() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */
}

def @func_5061() -> Tensor[(1920), float32] {
  %1541 = @func_4636() /* ty=(Tensor[(390), int16], Tensor[(390), int16], Tensor[(1920), float32]) */;
  %1541.2
}

def @func_15423() -> Tensor[(390), float32] {
  @func_15421() /* ty=Tensor[(390), float32] */
}

def @func_7542() -> Tensor[(4, 168), float64] {
  @func_7540() /* ty=Tensor[(4, 168), float64] */
}

def @func_20357() -> Tensor[(15, 2, 13), int16] {
  @func_15659() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_8996() -> (Tensor[(5, 3, 14), int8],) {
  @func_8994() /* ty=(Tensor[(5, 3, 14), int8],) */
}

def @func_6309() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16]) {
  %1542 = @func_4340() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
  %1543 = @func_2804() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
  %1544 = %1542.1;
  %1545 = %1543.0;
  (%1544, %1545)
}

def @func_11071() -> (Tensor[(390), int16],) {
  %1548 = fn () -> (Tensor[(390), int16],) {
    %1546 = @func_11015() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1547 = %1546.1;
    (%1547,)
  };
  %1548() /* ty=(Tensor[(390), int16],) */
}

def @func_11646() -> (Tensor[(672), float64],) {
  %1549 = @func_7766() /* ty=Tensor[(672), float64] */;
  (%1549,)
}

def @func_2871() -> (Tensor[(672), float64],) {
  %1550 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1551 = %1550.1;
  (%1551,)
}

def @func_10817() -> Tensor[(15, 16, 8), float32] {
  @func_10815() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_4340() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) {
  %1552 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
  %1553 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %1554 = @func_1829() /* ty=(Tensor[(390), int16], Tensor[(672), float64], Tensor[(672), float64]) */;
  %1555 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1556 = %1552.0;
  %1557 = %1553.0;
  %1558 = %1554.1;
  %1559 = %1555.1;
  %1560 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
  (%1556, %1557, %1558, %1559, %1560)
}

def @func_17937(%var_17924: Tensor[(11, 15, 2), uint64], %var_17925: Tensor[(11, 15, 2), uint64]) -> (Tensor[(11, 15, 2), uint64], Tensor[(9, 8, 12), uint64], Tensor[(12, 72), uint64]) {
  %1561 = cast(%var_17925, dtype="uint64") /* ty=Tensor[(11, 15, 2), uint64] */;
  %1562 = shape_of(%var_17924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1563 = cast(%var_17924, dtype="uint64") /* ty=Tensor[(11, 15, 2), uint64] */;
  %1564 = dyn.reshape(%1561, %1562, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1565 = cast(meta[relay.Constant][63] /* ty=Tensor[(12, 72), uint64] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %1566 = reshape(%1565, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %1567 = @func_1716(%1566) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %1568 = minimum(%1563, %1564) /* ty=Tensor[(11, 15, 2), uint64] */;
  %1569 = %1567.0;
  (%1568, %1569, meta[relay.Constant][63] /* ty=Tensor[(12, 72), uint64] */)
}

def @func_16507() -> Tensor[(15, 16, 8), float32] {
  @func_9716() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_5610() -> (Tensor[(15, 2, 13), int16], Tensor[(672), float64]) {
  @func_5608() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */
}

def @func_3188() -> Tensor[(15, 16, 8), float32] {
  @func_3186() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_2977() -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  %1575 = fn () -> (Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
    %1570 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
    %1571 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1572 = %1570.0;
    %1573 = %1571.0;
    %1574 = @func_2604() /* ty=Tensor[(15, 16, 8), float32] */;
    (%1572, %1573, %1574)
  };
  %1575() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_7443() -> (Tensor[(672), float64],) {
  %1578 = fn () -> (Tensor[(672), float64],) {
    %1576 = @func_6183() /* ty=(Tensor[(672), float64], Tensor[(390), int16]) */;
    %1577 = %1576.0;
    (%1577,)
  };
  %1578() /* ty=(Tensor[(672), float64],) */
}

def @func_8436(%var_8434: Tensor[(5, 2, 11), int32], %var_8435: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), bool],) {
  @func_8432(%var_8434, %var_8435) /* ty=(Tensor[(5, 2, 11), bool],) */
}

def @func_15559() -> (Tensor[(390), float32],) {
  @func_15557() /* ty=(Tensor[(390), float32],) */
}

def @func_20359() -> Tensor[(15, 2, 13), int16] {
  @func_20357() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_3301(%var_3298: Tensor[(1, 9, 11), float64], %var_3299: Tensor[(4, 9, 11), float64], %var_3300: Tensor[(15, 16, 8), float32]) -> (Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) {
  %1594 = fn (%var_3258: Tensor[(1, 9, 11), float64], %var_3259: Tensor[(4, 9, 11), float64], %var_3274: Tensor[(15, 16, 8), float32]) -> (Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) {
    %1579 = cast(%var_3258, dtype="float64") /* ty=Tensor[(1, 9, 11), float64] */;
    %1580 = cast(%var_3259, dtype="float64") /* ty=Tensor[(4, 9, 11), float64] */;
    %1581 = @func_3186() /* ty=Tensor[(15, 16, 8), float32] */;
    %1582 = cast(%var_3274, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
    %1583 = shape_of(%1581, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1584 = cast(%1581, dtype="int16") /* ty=Tensor[(15, 16, 8), int16] */;
    %1585 = dyn.reshape(%1582, %1583, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1586 = cast(%var_3274, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
    %1587 = reshape(%1586, newshape=[15, 16, 8]) /* ty=Tensor[(15, 16, 8), float32] */;
    %1588 = @func_3119(%1587) /* ty=(Tensor[(390), int16], Tensor[(15, 16, 8), uint8]) */;
    %1589 = @func_3042() /* ty=(Tensor[(390), int16],) */;
    %1590 = divide(%1579, %1580) /* ty=Tensor[(4, 9, 11), float64] */;
    %1591 = left_shift(%1584, %1585) /* ty=Tensor[(15, 16, 8), int16] */;
    %1592 = %1588.1;
    %1593 = %1589.0;
    (%1590, %1591, %1592, %1593)
  };
  %1594(%var_3298, %var_3299, %var_3300) /* ty=(Tensor[(4, 9, 11), float64], Tensor[(15, 16, 8), int16], Tensor[(15, 16, 8), uint8], Tensor[(390), int16]) */
}

def @func_6521(%var_6519: Tensor[(6, 9, 14), float32], %var_6520: Tensor[(6, 9, 14), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 9, 14), float64]) {
  %1603 = fn (%var_6455: Tensor[(6, 9, 14), float32], %var_6456: Tensor[(6, 9, 14), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(6, 9, 14), float64]) {
    %1595 = cast(%var_6456, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
    %1596 = shape_of(%var_6455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1597 = cast(%var_6455, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
    %1598 = dyn.reshape(%1595, %1596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1599 = floor_mod(%1597, %1598) /* ty=Tensor[(6, 9, 14), float32] */;
    %1600 = cast(%1599, dtype="float64") /* ty=Tensor[(6, 9, 14), float64] */;
    %1601 = @func_1610() /* ty=Tensor[(15, 2, 13), int16] */;
    %1602 = log(%1600) /* ty=Tensor[(6, 9, 14), float64] */;
    (%1601, %1602)
  };
  %1603(%var_6519, %var_6520) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 9, 14), float64]) */
}

def @func_15933() -> Tensor[(390), int16] {
  %1605 = fn () -> Tensor[(390), int16] {
    %1604 = @func_13164() /* ty=(Tensor[(390), int16],) */;
    %1604.0
  };
  %1605() /* ty=Tensor[(390), int16] */
}

def @func_13077() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) {
  @func_13075() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) */
}

def @func_6701() -> Tensor[(672), float64] {
  %1606 = @func_5627() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(672), float64]) */;
  %1606.1
}

def @func_6703() -> Tensor[(672), float64] {
  @func_6701() /* ty=Tensor[(672), float64] */
}

def @func_11981() -> (Tensor[(390), float32], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(550), float32], Tensor[(672), float64], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64], Tensor[(15, 2, 13), int16]) {
  %1607 = cast(meta[relay.Constant][64] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1608 = reshape(%1607, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
  %1609 = @func_6903(%1608) /* ty=(Tensor[(16, 4, 9), float64],) */;
  %1610 = @func_7411() /* ty=(Tensor[(390), int16], Tensor[(1920), bool], Tensor[(1920), float32], Tensor[(672), float64]) */;
  %1611 = cast(meta[relay.Constant][65] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %1612 = reshape(%1611, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %1613 = @func_1716(%1612) /* ty=(Tensor[(9, 8, 12), uint64],) */;
  %1614 = @func_1507() /* ty=(Tensor[(15, 2, 13), int16],) */;
  %1615 = @func_4965() /* ty=Tensor[(390), float32] */;
  %1616 = %1609.0;
  %1617 = @func_11170() /* ty=Tensor[(550), float32] */;
  %1618 = %1610.3;
  %1619 = %1613.0;
  %1620 = %1614.0;
  (%1615, %1616, meta[relay.Constant][64] /* ty=Tensor[(576), float64] */, %1617, %1618, %1619, meta[relay.Constant][65] /* ty=Tensor[(864), uint64] */, %1620)
}

def @func_16354() -> (Tensor[(672), float64],) {
  @func_16352() /* ty=(Tensor[(672), float64],) */
}

def @func_18293() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(144), bool]) {
  @func_18291() /* ty=(Tensor[(390), float32], Tensor[(672), float64], Tensor[(144), bool]) */
}

def @func_3622() -> Tensor[(15, 2, 13), int16] {
  %1622 = fn () -> Tensor[(15, 2, 13), int16] {
    %1621 = @func_1941() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %1621.0
  };
  %1622() /* ty=Tensor[(15, 2, 13), int16] */
}

def @func_6339() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) {
  @func_6337() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32], Tensor[(15, 16, 8), float32]) */
}

def @func_4683() -> (Tensor[(15, 16, 8), float64],) {
  %1627 = fn () -> (Tensor[(15, 16, 8), float64],) {
    %1623 = @func_1465() /* ty=(Tensor[(15, 16, 8), float32],) */;
    %1624 = %1623.0;
    %1625 = cast(%1624, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
    %1626 = sigmoid(%1625) /* ty=Tensor[(15, 16, 8), float64] */;
    (%1626,)
  };
  %1627() /* ty=(Tensor[(15, 16, 8), float64],) */
}

def @func_2458() -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  %1628 = @func_1631() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
  %1629 = @func_2164() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */;
  %1630 = %1628.0;
  %1631 = %1629.1;
  (%1630, %1631)
}

def @func_14644(%var_14643: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(144), bool], Tensor[(5, 42), int8], Tensor[(210), int8], Tensor[(550), float32], Tensor[(390), int16], Tensor[(252), float32], Tensor[(1920), bool], Tensor[(15, 2, 13), int16]) {
  %1661 = fn (%var_14606: Tensor[(210), int8]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(144), bool], Tensor[(5, 42), int8], Tensor[(210), int8], Tensor[(550), float32], Tensor[(390), int16], Tensor[(252), float32], Tensor[(1920), bool], Tensor[(15, 2, 13), int16]) {
    %1632 = @func_4951() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1633 = %1632.0;
    %1634 = cast(%1633, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %1635 = cast(meta[relay.Constant][66] /* ty=Tensor[(1920), float32] */, dtype="float32") /* ty=Tensor[(1920), float32] */;
    %1636 = reshape(%1634, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1637 = reshape(%1635, newshape=[1920]) /* ty=Tensor[(1920), float32] */;
    %1638 = @func_6969(%1636, %1637) /* ty=(Tensor[(672), float64], Tensor[(390), int16], Tensor[(1920), bool]) */;
    %1639 = cast(%var_14606, dtype="int8") /* ty=Tensor[(210), int8] */;
    %1640 = cast(meta[relay.Constant][68] /* ty=Tensor[(550), float32] */, dtype="float32") /* ty=Tensor[(550), float32] */;
    %1641 = reshape(%1639, newshape=[5, 42]) /* ty=Tensor[(5, 42), int8] */;
    %1642 = reshape(%1640, newshape=[550]) /* ty=Tensor[(550), float32] */;
    %1643 = @func_2237(%1641, %1642) /* ty=(Tensor[(5, 42), int8], Tensor[(390), float32], Tensor[(550), int64]) */;
    %1644 = cast(meta[relay.Constant][69] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1645 = reshape(%1644, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), float32] */;
    %1646 = @func_2105(%1645) /* ty=(Tensor[(12, 3, 7), float32], Tensor[(390), int16]) */;
    %1647 = cast(meta[relay.Constant][67] /* ty=Tensor[(144), bool] */, dtype="bool") /* ty=Tensor[(144), bool] */;
    %1648 = reshape(%1647, newshape=[144]) /* ty=Tensor[(144), bool] */;
    %1649 = @func_11916(%1648) /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) */;
    %1650 = %1649.1;
    %1651 = cast(%1650, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
    %1652 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(1920), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1653 = cast(meta[relay.Constant][66] /* ty=Tensor[(1920), float32] */, dtype="bool") /* ty=Tensor[(1920), bool] */;
    %1654 = dyn.reshape(%1651, %1652, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1655 = @func_13447() /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1656 = %1638.1;
    %1657 = %1643.0;
    %1658 = %1646.1;
    %1659 = not_equal(%1653, %1654) /* ty=Tensor[(1920), bool] */;
    %1660 = %1655.0;
    (%1633, %1656, meta[relay.Constant][67] /* ty=Tensor[(144), bool] */, %1657, %var_14606, meta[relay.Constant][68] /* ty=Tensor[(550), float32] */, %1658, meta[relay.Constant][69] /* ty=Tensor[(252), float32] */, %1659, %1660)
  };
  %1661(%var_14643) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(144), bool], Tensor[(5, 42), int8], Tensor[(210), int8], Tensor[(550), float32], Tensor[(390), int16], Tensor[(252), float32], Tensor[(1920), bool], Tensor[(15, 2, 13), int16]) */
}

def @func_6889() -> (Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) {
  @func_6887() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */
}

def @func_12672(%var_12670: Tensor[(390), int16]) -> (Tensor[(3, 15, 1), bool], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) {
  @func_12669(%var_12670) /* ty=(Tensor[(3, 15, 1), bool], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */
}

def @func_17214() -> (Tensor[(672), float64],) {
  @func_17212() /* ty=(Tensor[(672), float64],) */
}

def @func_7961() -> Tensor[(5, 3, 14), int8] {
  %1663 = fn () -> Tensor[(5, 3, 14), int8] {
    %1662 = @func_2543() /* ty=(Tensor[(390), int16], Tensor[(390), float32], Tensor[(105, 2), int8], Tensor[(550), float32], Tensor[(5, 3, 14), int8]) */;
    %1662.4
  };
  %1663() /* ty=Tensor[(5, 3, 14), int8] */
}

def @func_11919(%var_11917: Tensor[(144), bool]) -> (Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) {
  @func_11916(%var_11917) /* ty=(Tensor[(672), float64], Tensor[(15, 16, 8), float32], Tensor[(144), bool]) */
}

def @func_15025() -> (Tensor[(576), float64], Tensor[(672), float32]) {
  %1668 = fn () -> (Tensor[(576), float64], Tensor[(672), float32]) {
    %1664 = @func_7574() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) */;
    %1665 = @func_14707() /* ty=(Tensor[(390), float32], Tensor[(4, 168), uint16], Tensor[(672), float32]) */;
    %1666 = %1664.2;
    %1667 = %1665.2;
    (%1666, %1667)
  };
  %1668() /* ty=(Tensor[(576), float64], Tensor[(672), float32]) */
}

def @func_17812() -> (Tensor[(15, 16, 8), float32],) {
  @func_17810() /* ty=(Tensor[(15, 16, 8), float32],) */
}

def @func_804(%var_801: Tensor[(10, 5, 11), float32], %var_802: Tensor[(210), int8], %var_803: Tensor[(672), float64]) -> (Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) {
  %1709 = fn (%var_713: Tensor[(10, 5, 11), float32], %var_718: Tensor[(210), int8], %var_730: Tensor[(672), float64]) -> (Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) {
    %1669 = cast(%var_713, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
    %1670 = cast(%var_718, dtype="int8") /* ty=Tensor[(210), int8] */;
    %1671 = cast(%var_718, dtype="int8") /* ty=Tensor[(210), int8] */;
    %1672 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
    %1673 = reshape(%1670, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %1674 = reshape(%1671, newshape=[5, 3, 14]) /* ty=Tensor[(5, 3, 14), int8] */;
    %1675 = reshape(%1672, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1676 = @func_398(%1673, %1674, %1675) /* ty=(Tensor[(5, 3, 14), int8], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(15, 2, 13), int16], Tensor[(15, 2, 13), int16]) */;
    %1677 = %1676.2;
    %1678 = cast(%1677, dtype="int16") /* ty=Tensor[(390), int16] */;
    %1679 = cast(%1677, dtype="int16") /* ty=Tensor[(390), int16] */;
    %1680 = reshape(%1678, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1681 = reshape(%1679, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1682 = @func_182(%1680, %1681) /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1683 = cast(%var_730, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1684 = %1682.0;
    %1685 = cast(%1684, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %1686 = reshape(%1683, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
    %1687 = reshape(%1685, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1688 = @func_688(%1686, %1687) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1689 = %1688.2;
    %1690 = cast(%1689, dtype="int16") /* ty=Tensor[(390), int16] */;
    %1691 = cast(%1689, dtype="int16") /* ty=Tensor[(390), int16] */;
    %1692 = reshape(%1690, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1693 = reshape(%1691, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1694 = @func_182(%1692, %1693) /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1695 = cast(%var_730, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1696 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
    %1697 = reshape(%1695, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float64] */;
    %1698 = reshape(%1696, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %1699 = @func_688(%1697, %1698) /* ty=(Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16], Tensor[(390), int16]) */;
    %1700 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 390), int16] */, dtype="int16") /* ty=Tensor[(1, 390), int16] */;
    %1701 = cast(%1684, dtype="int16") /* ty=Tensor[(15, 2, 13), int16] */;
    %1702 = reshape(%1700, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1703 = reshape(%1701, newshape=[15, 2, 13]) /* ty=Tensor[(15, 2, 13), int16] */;
    %1704 = @func_182(%1702, %1703) /* ty=(Tensor[(15, 2, 13), int16],) */;
    %1705 = sin(%1669) /* ty=Tensor[(10, 5, 11), float32] */;
    %1706 = %1694.0;
    %1707 = %1699.0;
    %1708 = %1704.0;
    (%1705, %1677, %var_718, meta[relay.Constant][70] /* ty=Tensor[(1, 390), int16] */, %1684, %1689, %var_730, %1706, %1707, %1708)
  };
  %1709(%var_801, %var_802, %var_803) /* ty=(Tensor[(10, 5, 11), float32], Tensor[(390), int16], Tensor[(210), int8], Tensor[(1, 390), int16], Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(672), float64], Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(15, 2, 13), int16]) */
}

def @func_17510() -> (Tensor[(15, 2, 13), int16],) {
  @func_17508() /* ty=(Tensor[(15, 2, 13), int16],) */
}

def @func_7575() -> (Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) {
  %1717 = fn () -> (Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) {
    %1710 = cast(meta[relay.Constant][71] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %1711 = reshape(%1710, newshape=[16, 4, 9]) /* ty=Tensor[(16, 4, 9), float64] */;
    %1712 = @func_6903(%1711) /* ty=(Tensor[(16, 4, 9), float64],) */;
    %1713 = @func_6605() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float32]) */;
    %1714 = @func_3621() /* ty=Tensor[(15, 2, 13), int16] */;
    %1715 = %1712.0;
    %1716 = %1713.1;
    (%1714, %1715, meta[relay.Constant][71] /* ty=Tensor[(576), float64] */, %1716)
  };
  %1717() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(16, 4, 9), float64], Tensor[(576), float64], Tensor[(15, 16, 8), float32]) */
}

def @func_11806() -> (Tensor[(390), float32],) {
  %1718 = @func_3778() /* ty=(Tensor[(390), int16], Tensor[(390), float32]) */;
  %1719 = %1718.1;
  (%1719,)
}

def @func_15505(%var_15504: Tensor[(864), uint64]) -> (Tensor[(672), float64], Tensor[(864), uint64], Tensor[(864), uint64]) {
  %1726 = fn (%var_15493: Tensor[(864), uint64]) -> (Tensor[(672), float64], Tensor[(864), uint64], Tensor[(864), uint64]) {
    %1720 = @func_2871() /* ty=(Tensor[(672), float64],) */;
    %1721 = cast(%var_15493, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1722 = reshape(%1721, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %1723 = @func_11775(%1722) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(12, 72), uint64], Tensor[(864), uint64]) */;
    %1724 = %1720.0;
    %1725 = %1723.3;
    (%1724, %1725, %var_15493)
  };
  %1726(%var_15504) /* ty=(Tensor[(672), float64], Tensor[(864), uint64], Tensor[(864), uint64]) */
}

def @func_16839() -> (Tensor[(390), float32], Tensor[(672), float64], Tensor[(210, 576), uint16]) {
  %1727 = @func_11806() /* ty=(Tensor[(390), float32],) */;
  %1728 = @func_14215() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(6, 8, 14), float64], Tensor[(672), float64]) */;
  %1729 = @func_15285() /* ty=(Tensor[(210, 576), uint16], Tensor[(672), float64], Tensor[(1680), float64], Tensor[(15, 2, 13), int16]) */;
  %1730 = %1727.0;
  %1731 = %1728.2;
  %1732 = %1729.0;
  (%1730, %1731, %1732)
}

def @func_19141(%var_19139: int32) -> (Tensor[(7, 10, 1), int32],) {
  @func_19138(%var_19139) /* ty=(Tensor[(7, 10, 1), int32],) */
}

def @func_7700(%var_7698: Tensor[(672), float32]) -> (Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) {
  @func_7697(%var_7698) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(390), int16], Tensor[(210), int8], Tensor[(210), int8], Tensor[(672), float32], Tensor[(15, 16, 8), float32], Tensor[(390), float32], Tensor[(672), float64]) */
}

def @func_3245() -> Tensor[(672), float64] {
  @func_3243() /* ty=Tensor[(672), float64] */
}

def @func_17598(%var_17596: Tensor[(3, 900), float32]) -> (Tensor[(15, 16, 8), float32], Tensor[(15, 15, 12), float32], Tensor[(3, 900), float32]) {
  @func_17595(%var_17596) /* ty=(Tensor[(15, 16, 8), float32], Tensor[(15, 15, 12), float32], Tensor[(3, 900), float32]) */
}

def @func_11749() -> Tensor[(15, 16, 8), float32] {
  %1733 = fn () -> Tensor[(15, 16, 8), float32] {
    @func_2710() /* ty=Tensor[(15, 16, 8), float32] */
  };
  %1733() /* ty=Tensor[(15, 16, 8), float32] */
}

def @func_16034() -> (Tensor[(15, 2, 13), int16], Tensor[(35, 6), float32], Tensor[(390), int16]) {
  %1734 = @func_14342() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(35, 6), int8], Tensor[(550), float64], Tensor[(275, 2), float32]) */;
  %1735 = %1734.1;
  %1736 = cast(%1735, dtype="int8") /* ty=Tensor[(35, 6), int8] */;
  %1737 = reshape(%1736, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %1738 = @func_3465(%1737) /* ty=(Tensor[(15, 2, 13), int16], Tensor[(5, 3, 14), int8], Tensor[(210), int8]) */;
  %1739 = cast(%1735, dtype="float32") /* ty=Tensor[(35, 6), float32] */;
  %1740 = %1738.0;
  %1741 = sin(%1739) /* ty=Tensor[(35, 6), float32] */;
  %1742 = @func_15932() /* ty=Tensor[(390), int16] */;
  (%1740, %1741, %1742)
}

def @func_4575() -> (Tensor[(15, 16, 8), float32], Tensor[(390), int16]) {
  @func_4573() /* ty=(Tensor[(15, 16, 8), float32], Tensor[(390), int16]) */
}

def @func_8994() -> (Tensor[(5, 3, 14), int8],) {
  %1743 = @func_7960() /* ty=Tensor[(5, 3, 14), int8] */;
  (%1743,)
}

def @func_18473() -> (Tensor[(15, 16, 8), float64],) {
  %1744 = @func_13075() /* ty=(Tensor[(15, 2, 13), int16], Tensor[(15, 16, 8), float64]) */;
  %1745 = %1744.1;
  (%1745,)
}

def @func_18745() -> (Tensor[(15, 16, 8), float32],) {
  %1748 = fn () -> (Tensor[(15, 16, 8), float32],) {
    %1746 = @func_12173() /* ty=(Tensor[(5, 3, 14), int8], Tensor[(672), float64], Tensor[(390), int16], Tensor[(15, 16, 8), float32]) */;
    %1747 = %1746.3;
    (%1747,)
  };
  %1748() /* ty=(Tensor[(15, 16, 8), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen724/build/output.py", line 6201, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:59:52] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_65 = relay.const([[3,-4,-5,-7,-2,8,10,-7,4,10,-9,5,10],[10,-10,-9,3,7,8,2,-1,-7,-6,9,-8,-2],[-9,8,8,-7,3,9,-3,7,4,-1,-4,3,3],[-10,10,7,-10,-9,3,7,3,-5,4,-8,-3,-3],[-7,7,-10,-2,-10,10,-4,-8,-6,-6,-3,-5,-2],[7,-2,-2,-7,-1,-5,-5,-2,5,-5,-4,8,-2],[-10,7,-2,7,3,4,-8,6,6,10,-8,5,-8],[6,10,6,-5,-1,-7,2,8,1,9,-9,9,-6],[-6,2,-1,-9,-6,-10,-10,-7,-1,-7,5,5,3],[2,5,1,-8,-5,-1,7,-1,-8,9,-6,-4,-9],[10,2,10,-7,1,-6,9,5,6,-7,2,6,1],[-2,-6,4,7,-9,-2,-9,2,-2,-7,-5,3,-9],[-7,8,8,3,-3,10,-4,4,-3,1,-2,-10,-3],[3,-7,3,-9,2,-1,3,-3,-3,-2,-7,3,2],[-2,-4,7,1,10,-10,4,-8,8,-8,-4,9,1],[-1,-3,-10,7,-10,-1,-10,6,2,3,-5,-3,1]], dtype = "int16")#candidate|65|(16, 13)|const|int16
var_66 = relay.var("var_66", dtype = "int16", shape = (16, 13))#candidate|66|(16, 13)|var|int16
bop_67 = relay.greater(const_65.astype('bool'), relay.reshape(var_66.astype('bool'), relay.shape_of(const_65))) # shape=(16, 13)
output = bop_67
output2 = bop_67
func_114 = relay.Function([var_66,], output)
mod['func_114'] = func_114
mod = relay.transform.InferType()(mod)
var_115 = relay.var("var_115", dtype = "int16", shape = (16, 13))#candidate|115|(16, 13)|var|int16
output = func_114(var_115)
func_116 = relay.Function([var_115], output)
mutated_mod['func_116'] = func_116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_201 = relay.var("var_201", dtype = "uint8", shape = (8, 8, 8))#candidate|201|(8, 8, 8)|var|uint8
const_202 = relay.const([[[8,-4,5,6,1,-8,-8,5],[-4,-3,-10,8,3,6,-1,-5],[-2,-7,-5,7,-10,4,-7,10],[-7,-8,5,4,5,9,-2,-6],[-5,3,6,7,-4,6,1,5],[-10,-6,8,-4,2,9,-10,-8],[8,7,3,1,-7,9,4,6],[6,8,-2,6,-10,9,2,6]],[[-1,3,9,1,3,-3,-1,-9],[-1,-10,-3,-10,-3,-4,-6,-6],[-5,3,5,9,-2,-2,-1,2],[2,-8,10,8,7,-10,-4,2],[-5,5,-8,7,9,7,-4,4],[2,-9,-2,-8,2,-1,-6,6],[-7,5,-5,5,4,4,10,-2],[-3,-5,-1,-1,-4,-9,-5,-4]],[[-6,-8,-1,-7,-7,-5,-2,-9],[9,8,-10,-2,3,-5,-8,1],[-9,-7,1,9,6,5,10,-10],[10,10,-9,4,-6,10,-1,-8],[-9,-5,8,10,-6,1,-1,-7],[-1,10,-9,-3,5,-9,-6,9],[1,-10,5,-4,-7,9,5,10],[10,7,-6,4,-4,10,-9,5]],[[-10,-2,7,8,-2,1,-4,5],[-2,-5,3,-2,2,6,8,3],[8,-2,1,6,-8,3,1,6],[-10,-4,10,-9,7,-6,-7,-2],[4,10,4,1,7,4,1,1],[-2,-4,10,-7,-9,9,-1,10],[7,-3,8,-4,7,10,9,1],[6,-4,-1,1,-3,5,-3,1]],[[7,-2,-7,9,-6,6,-2,-7],[-2,-3,3,2,-6,1,-6,-1],[6,9,2,9,-8,-5,2,7],[6,-9,-5,4,10,3,8,10],[-9,-7,-6,1,3,-4,-2,1],[4,7,-2,1,6,9,-5,-6],[-7,-5,3,-9,-6,5,8,5],[7,9,1,-3,-3,-1,-1,-5]],[[3,-5,8,7,1,-9,8,-8],[6,-4,9,-5,10,-1,4,1],[-5,-6,-4,-6,-4,1,1,-7],[-1,3,8,2,-4,9,10,7],[-10,-10,-5,7,-3,1,10,-10],[-9,-2,-3,-5,1,8,5,9],[-8,8,-7,-5,5,-6,-4,-7],[3,1,6,-4,-9,-8,-8,10]],[[6,-1,4,3,4,4,8,-2],[-1,-7,-1,3,3,-6,10,7],[5,9,6,7,-3,-7,-2,-10],[-3,1,-7,-4,8,1,6,-4],[-10,10,-6,5,6,8,2,-3],[6,1,-8,4,-6,4,5,-3],[-2,10,-10,5,8,5,5,6],[-10,5,-5,4,3,3,5,-2]],[[9,-2,6,6,-5,3,9,-9],[10,6,2,7,5,3,6,-6],[-7,7,-10,-9,-3,2,6,8],[-7,1,4,5,8,1,5,-2],[-10,10,-1,2,1,-4,9,-5],[8,-6,-4,2,-2,9,-2,2],[1,1,-10,3,-9,10,-1,-6],[1,-9,-4,-8,-6,4,9,2]]], dtype = "uint8")#candidate|202|(8, 8, 8)|const|uint8
bop_203 = relay.bitwise_and(var_201.astype('uint8'), relay.reshape(const_202.astype('uint8'), relay.shape_of(var_201))) # shape=(8, 8, 8)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
const_222 = relay.const([-3,2,1,9,-4,9,5,-10,-5,9,5,-6,7,3,5,10,8,-8,-6,6,-4,-9,7,2,-10,-7,-2,10,-6,9,8,9,-3,-8,-4,9,9,6,7,-9,-8,-2,9,10,-6,7,10,1,-3,-2,-5,-2,1,4,6,7,-10,-4,2,6,-5,-1,1,8,-4,10,3,6,1,-6,-5,-1,-3,-4,1,2,-5,10,-8,7,-9,3,-10,-8,1,6,-6,-9,-1,5,-4,-7,3,-4,-6,-4,9,-8,6,-8,1,-3,2,-7,8,7,10,-3,-1,-3,8,-1,5,-6,7,-10,-1,-7,-6,7,6,-5,8,-7,-5,-6,-8,-9,-10,5,-10,-8,-7,-3,-9,6,2,2,-1,9,-1,-10,5,3,-6,-5,-3,-9,-5,-5,1,-10,7,5,10,6,2,-10,7,4,-2,-10,-9,-7,-1,1,-6,-9,2,10,9,-3,2,-9,9,-2,2,7,-3,8,-9,-8,-9,-5,-10,-2,3,-9,1,5,3,2,-1,9,-3,8,5,6,-2,6,8,-10,-5,5,8,5,-9,-7], dtype = "int16")#candidate|222|(208,)|const|int16
call_221 = func_114_call(relay.reshape(const_222.astype('int16'), [16, 13]))
call_223 = func_114_call(relay.reshape(const_222.astype('int16'), [16, 13]))
output = relay.Tuple([bop_203,call_221,const_222,])
output2 = relay.Tuple([bop_203,call_223,const_222,])
func_229 = relay.Function([var_201,], output)
mod['func_229'] = func_229
mod = relay.transform.InferType()(mod)
var_230 = relay.var("var_230", dtype = "uint8", shape = (8, 8, 8))#candidate|230|(8, 8, 8)|var|uint8
output = func_229(var_230)
func_231 = relay.Function([var_230], output)
mutated_mod['func_231'] = func_231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_289 = relay.var("var_289", dtype = "float64", shape = ())#candidate|289|()|var|float64
const_290 = relay.const([[[-3.092265,-8.473529,-5.611470,0.094403,4.832314,-5.446596,8.243851,9.743075,0.489879],[-1.645002,-1.065194,-7.742925,-8.219173,4.805762,-3.979375,-2.762469,-4.893390,8.986139],[1.644367,5.846429,4.193374,-9.580327,-7.262790,2.190962,-5.009609,9.568133,-0.961363]],[[7.623726,4.605837,2.806710,7.720961,-0.617723,-6.852566,7.392943,-0.092946,1.564801],[-1.869951,-3.001374,2.685510,-2.278265,-0.769611,-0.414130,-1.324725,0.760319,-2.694459],[9.947383,-0.477241,-4.836374,8.435410,2.472022,-3.899896,9.266063,-8.953587,5.166867]],[[-5.940813,4.767604,-7.649213,9.467166,8.694188,-2.007588,9.742066,0.461334,-6.541276],[7.747509,6.370663,1.453677,8.755216,9.500267,0.998739,1.884038,-2.876719,-2.857931],[-6.270065,7.347994,-2.914995,2.371589,9.754487,-9.228130,-2.300774,8.728489,-7.672341]],[[-7.671457,-9.997447,1.923878,-1.529418,0.463896,2.216100,1.576285,5.232096,1.939556],[8.179935,-5.488135,8.207599,-0.309452,-2.415848,-7.171143,-5.523163,-6.658297,-5.093272],[-9.309612,-2.378305,1.192717,5.387758,6.852783,-0.457506,4.353978,1.217123,-9.172637]],[[-4.861619,1.161424,2.111007,1.186913,-9.900917,-3.382585,5.649262,6.493157,-7.677293],[9.329660,-9.161377,-4.966624,2.983920,-3.078004,3.545373,1.360674,0.244301,-5.567746],[-0.607666,-1.996590,7.335996,8.633435,-1.056437,-0.623969,-9.800840,-1.693370,-3.686343]],[[6.660474,-9.419011,7.984363,-8.098205,2.246878,1.162107,-5.311832,4.259943,-4.580842],[8.713788,3.453019,-7.857118,-4.823692,9.584886,3.392201,-8.263781,6.378334,-3.929269],[-6.670547,-0.662073,-7.114533,-1.520397,6.977178,-5.490881,-1.735947,-6.243114,7.910096]]], dtype = "float64")#candidate|290|(6, 3, 9)|const|float64
bop_291 = relay.floor_mod(var_289.astype('float64'), const_290.astype('float64')) # shape=(6, 3, 9)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
var_299 = relay.var("var_299", dtype = "int16", shape = (208,))#candidate|299|(208,)|var|int16
call_298 = func_114_call(relay.reshape(var_299.astype('int16'), [16, 13]))
call_300 = func_114_call(relay.reshape(var_299.astype('int16'), [16, 13]))
func_229_call = mod.get_global_var('func_229')
func_231_call = mutated_mod.get_global_var('func_231')
var_317 = relay.var("var_317", dtype = "uint8", shape = (128, 4))#candidate|317|(128, 4)|var|uint8
call_316 = relay.TupleGetItem(func_229_call(relay.reshape(var_317.astype('uint8'), [8, 8, 8])), 1)
call_318 = relay.TupleGetItem(func_231_call(relay.reshape(var_317.astype('uint8'), [8, 8, 8])), 1)
func_229_call = mod.get_global_var('func_229')
func_231_call = mutated_mod.get_global_var('func_231')
call_328 = relay.TupleGetItem(func_229_call(relay.reshape(var_317.astype('uint8'), [8, 8, 8])), 1)
call_329 = relay.TupleGetItem(func_231_call(relay.reshape(var_317.astype('uint8'), [8, 8, 8])), 1)
output = relay.Tuple([bop_291,call_298,var_299,call_316,var_317,call_328,])
output2 = relay.Tuple([bop_291,call_300,var_299,call_318,var_317,call_329,])
func_334 = relay.Function([var_289,var_299,var_317,], output)
mod['func_334'] = func_334
mod = relay.transform.InferType()(mod)
var_335 = relay.var("var_335", dtype = "float64", shape = ())#candidate|335|()|var|float64
var_336 = relay.var("var_336", dtype = "int16", shape = (208,))#candidate|336|(208,)|var|int16
var_337 = relay.var("var_337", dtype = "uint8", shape = (128, 4))#candidate|337|(128, 4)|var|uint8
output = func_334(var_335,var_336,var_337,)
func_338 = relay.Function([var_335,var_336,var_337,], output)
mutated_mod['func_338'] = func_338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_471 = relay.var("var_471", dtype = "int64", shape = (1, 9, 11))#candidate|471|(1, 9, 11)|var|int64
var_472 = relay.var("var_472", dtype = "int64", shape = (5, 9, 11))#candidate|472|(5, 9, 11)|var|int64
bop_473 = relay.not_equal(var_471.astype('bool'), var_472.astype('bool')) # shape=(5, 9, 11)
output = relay.Tuple([bop_473,])
output2 = relay.Tuple([bop_473,])
func_479 = relay.Function([var_471,var_472,], output)
mod['func_479'] = func_479
mod = relay.transform.InferType()(mod)
mutated_mod['func_479'] = func_479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_479_call = mutated_mod.get_global_var('func_479')
var_481 = relay.var("var_481", dtype = "int64", shape = (1, 9, 11))#candidate|481|(1, 9, 11)|var|int64
var_482 = relay.var("var_482", dtype = "int64", shape = (5, 9, 11))#candidate|482|(5, 9, 11)|var|int64
call_480 = func_479_call(var_481,var_482,)
output = call_480
func_483 = relay.Function([var_481,var_482,], output)
mutated_mod['func_483'] = func_483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_489 = relay.var("var_489", dtype = "float32", shape = (11, 13, 8))#candidate|489|(11, 13, 8)|var|float32
var_490 = relay.var("var_490", dtype = "float32", shape = (11, 13, 8))#candidate|490|(11, 13, 8)|var|float32
bop_491 = relay.minimum(var_489.astype('float32'), relay.reshape(var_490.astype('float32'), relay.shape_of(var_489))) # shape=(11, 13, 8)
uop_494 = relay.asinh(var_489.astype('float32')) # shape=(11, 13, 8)
output = relay.Tuple([bop_491,uop_494,])
output2 = relay.Tuple([bop_491,uop_494,])
func_498 = relay.Function([var_489,var_490,], output)
mod['func_498'] = func_498
mod = relay.transform.InferType()(mod)
var_499 = relay.var("var_499", dtype = "float32", shape = (11, 13, 8))#candidate|499|(11, 13, 8)|var|float32
var_500 = relay.var("var_500", dtype = "float32", shape = (11, 13, 8))#candidate|500|(11, 13, 8)|var|float32
output = func_498(var_499,var_500,)
func_501 = relay.Function([var_499,var_500,], output)
mutated_mod['func_501'] = func_501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_517 = relay.var("var_517", dtype = "float32", shape = (14, 12, 6))#candidate|517|(14, 12, 6)|var|float32
uop_518 = relay.sin(var_517.astype('float32')) # shape=(14, 12, 6)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_554 = relay.const([-5.290422,1.770213,3.797318,-8.008016,-4.304972,-8.258770,5.777531,1.251804,-5.069391,5.380847,-4.012579,6.219404,3.459098,8.582288,4.838166,6.751852,7.256510,-0.385444,9.662187,5.311886,-6.729701,-6.638607,0.619713,-3.252760,0.620970,-7.761787,-7.854265,-0.823071,7.693106,-8.924121,-6.889653,6.660578,-2.251888,-4.512439,-2.697773,-7.478891,5.661413,-4.082684,-2.383673,-9.119404,-3.142522,8.712549,7.368179,-6.223360,4.441953,6.350591,-4.083187,-3.300779,2.905165,8.180740,-4.635634,-6.046437,-5.037600,-8.721909,4.690360,-5.288222,6.951408,-6.757055,8.076173,-3.557924,2.100438,-4.338343,-6.756764,4.390529,9.963839,8.741952,-9.123383,3.161416,-6.295856,1.916062,1.988911,0.195119,3.100882,5.534423,-9.724893,-7.799313,8.112327,-3.452611,4.372180,9.619414,-5.617552,-9.293706,-9.880537,9.869083,6.008341,4.874040,5.721561,-3.576934,-0.376615,8.378478,9.442982,3.098893,6.208414,-0.816194,0.685232,2.531902,-1.838195,-6.552097,-2.642905,8.195705,-7.636489,-0.270022,0.146203,-2.158190,-3.018302,-9.748431,8.394545,-5.163529,7.435068,8.518458,1.244072,-3.352984,-5.125153,-9.916703,9.886528,9.406868,-1.170303,1.544769,-0.473419,-6.171400,2.867467,-3.850052,-9.145469,1.117412,1.374166,-3.462336,-2.629676,-0.451369,6.754435,0.656331,-0.183639,-5.045298,-6.736646,-5.147772,7.135360,9.786261,5.738623,-6.834642,-9.616770,-1.620240,-8.341398,-0.955169,4.053339,-8.480593,-9.912521,6.793473,-0.177873,8.437706,3.075514,1.470004,-6.665722,-0.568250,-2.514863,3.472801,-3.439089,-1.755334,-2.674227,8.368096,8.284121,-8.447486,8.806883,-6.723056,7.176267,-3.053983,5.277719,-9.277175,-0.364948,2.502782,6.525717,-4.206107,-6.684074,-3.210637,1.989879,5.858438,4.836802,-2.960795,6.161617,-0.444362,2.012629,-8.922169,-2.823974,-6.439709,2.105905,5.575333,7.439264,-8.944133,-3.787522,-9.173224,2.706817,-8.101381,-4.017015,8.629031,4.763757,-9.238191,5.724699,1.303942,9.125950,-5.589541,-1.444395,6.709182,4.729935,5.402949,5.156194,-6.813452,3.277439,0.296898,7.485973,-3.973785,8.917044,6.510761,1.291830,-0.080469,4.471819,6.338777,9.423604,1.088518,-9.437870,-7.236905,-6.134967,-1.969831,-6.907560,1.217814,7.949758,-4.432316,2.066202,4.717365,8.990738,1.718659,-4.775876,-8.857897,-1.384493,3.750798,-3.691185,-6.608051,-0.061423,6.330313,-3.618511,-5.013499,-5.305687,-2.533127,8.548211,-3.073446,-8.618005,3.310315,-6.913054,-4.634077,7.571339,3.532586,4.002007,-5.959959,2.283565,-4.522772,0.635954,2.807153,-3.395062,4.921629,4.811498,-6.690672,3.618539,-7.738185,5.383445,-8.367641,-3.988093,-5.438349,7.879227,4.748107,-6.295535,4.026068,3.527192,3.280437,-3.226129,9.471868,-8.667039,2.522903,6.542465,6.924612,-8.430302,3.342036,-5.809044,0.409419,-7.427477,-1.318593,-6.599334,-6.417892,-8.861101,9.415432,-7.364438,-0.326166,-1.444072,7.337634,6.420302,-7.081374,-1.276176,1.373258,-4.513356,8.040197,1.810443,0.803023,2.062603,9.892600,-2.153043,-0.355035,5.987961,7.530105,0.247656,1.408120,-5.738372,-2.356166,8.412336,3.719172,-5.731667,3.870206,-0.286329,-8.740414,-7.480625,3.738413,-1.264717,-1.935706,-5.614573,-4.672494,-0.361852,-4.693817,1.275669,4.072926,-3.114227,-2.120300,5.466743,2.922505,4.625373,2.241976,2.831777,-9.721568,9.781037,-9.794096,-7.139834,8.276340,-6.136057,4.714157,-9.639268,3.582484,1.574724,-3.462561,1.735279,-5.222374,2.044213,-2.369075,-4.756443,-7.068129,0.959616,5.659524,5.409338,-4.212955,0.384229,-7.824573,9.233933,-7.561315,8.226040,4.157636,-9.304725,1.232350,-3.309044,0.108460,-5.563043,-3.116797,-3.574743,-2.714790,-7.201285,6.390632,-3.904021,5.591998,6.864588,6.821770,-2.717383,5.386184,-0.759826,-9.012981,7.590398,-9.594702,-2.827436,9.450489,-6.689801,-5.885486,3.067978,-4.092957,6.784196,4.152910,-3.974841,-8.583456,5.713427,1.967828,-9.955530,-8.446334,8.933942,-0.045884,8.315548,-1.191535,0.013166,-4.344334,3.548316,-4.617711,3.164349,3.500455,-4.110499,-5.831045,-6.764635,-0.619973,-6.935311,-4.862023,3.267770,2.320336,-7.328145,-0.530085,-6.316991,-0.748201,-9.954880,4.433579,-7.629650,9.983918,-3.774162,8.707595,3.005516,1.900124,-0.742210,-4.438924,-7.567939,1.417839,5.719782,-0.801465,-7.616731,8.708959,-4.551697,-3.501239,-7.472979,8.396012,-9.790007,3.610685,-6.696757,4.483333,-4.499382,-9.329940,7.676584,4.400893,-0.549932,-7.762290,2.070723,4.024207,-1.250694,-2.082020,5.695882,0.684319,-1.239008,9.484635,-6.517957,-7.736130,-6.184193,1.281304,-7.909445,8.754839,8.265476,6.778324,4.320033,-8.333015,6.764410,-2.096517,-1.317819,-9.371044,-2.311132,-9.407604,-7.384017,0.509883,5.598490,-9.496815,-2.949148,-5.296177,8.173943,-1.575732,-7.543775,6.576308,4.149149,-3.988434,7.663979,1.851221,8.299048,-7.628547,-6.742110,-4.113473,0.917164,1.703788,-3.187368,7.939672,1.936560,9.133917,-6.612634,6.592235,-1.731171,0.998991,-1.571405,-8.176886,-1.341239,1.036325,-1.803686,7.060027,-5.824249,5.872516,-0.986439,8.729947,-0.529982,-7.697116,7.757780,0.288259,6.364126,8.697301,5.305980,0.462551,9.104090,-5.676714,8.087163,6.543803,-3.786326,-7.157408,3.076658,-4.416311,-9.171069,-0.465344,0.702382,-8.199706,-6.575068,-3.087424,6.324907,-6.983690,3.562358,-1.153641,-3.047012,-4.669345,6.741133,1.812433,-4.355544,-1.020002,-3.197364,-2.544210,-8.855139,2.742002,4.415797,-8.930999,0.725395,5.550187,7.922681,7.249569,0.742691,-7.493455,2.819349,1.714911,-4.014092,-3.523650,-5.088829,-6.360467,7.752773,6.213644,5.543815,4.951068,-5.424389,0.089329,8.313590,1.787813,8.019360,4.242627,-6.992753,-6.275087,-6.529403,5.082497,-5.300019,-9.884809,7.646834,-5.854275,3.782281,-8.350816,-3.791004,-6.484453,-6.989902,-3.980812,8.988641,-5.325412,-5.578175,-5.949145,-8.486064,3.718493,3.882533,-3.268356,0.590852,-1.912581,7.389915,1.986677,-9.801625,5.334911,0.307205,-7.649843,3.845382,-1.932580,-3.966776,-3.299326,3.121136,8.876816,2.526440,5.886182,-8.740727,-9.083786,-3.229704,1.522507,6.104147,-0.210940,-8.468754,0.372551,9.500653,5.301670,4.837726,-9.995654,0.082029,3.891226,-0.292536,6.322521,-9.264441,-3.720049,1.980129,-4.319317,-2.222222,-1.142611,1.070278,-2.936867,7.746502,-6.231078,4.869955,1.528175,-4.467838,-4.748658,-9.116490,1.345498,1.869946,4.433942,8.782014,3.605887,-4.865753,-5.505059,6.720486,1.733681,-5.931110,9.720096,-1.655519,-2.684544,-6.916272,2.785080,4.023309,3.996060,-6.322820,1.033350,-9.160164,5.902079,-6.015539,8.232453,-1.843284,3.970783,-0.957826,3.168050,5.738842,-4.468133,-0.813436,-5.014036,-0.974604,-9.629935,0.031379,7.645878,-1.661814,-6.586035,-9.102315,-0.764007,-5.011380,-4.642268,2.143971,-1.860147,8.205395,-2.348628,-3.670492,9.338029,-7.446864,-9.520566,-7.513122,-3.241439,-5.110066,6.815031,-1.518113,-5.011725,1.590019,0.606877,-2.273589,-1.875614,-8.992278,2.724029,5.810333,-2.228676,-4.966597,8.604982,-4.937856,6.061560,6.354415,4.541785,-1.330088,-2.069627,-8.483776,-6.728577,4.433385,0.402313,0.144474,1.634391,7.920226,0.050796,-4.092187,-3.968353,-5.655763,8.470454,3.288944,1.354543,-9.835837,2.590611,0.965180,8.348093,-4.740450,8.398757,8.336703,5.265297,-4.468330,-7.198560,7.928780,6.646219,-1.858512,8.389133,1.168071,-9.057297,7.640732,4.783595,0.408719,1.999847,0.884772,-4.699233,4.429916,8.761491,-0.820037,-1.043844,1.376850,0.839398,6.773417,3.480451,2.345167,-3.727072,2.709306,2.743906,3.649238,4.681589,4.472833,2.177574,9.404937,-3.451242,6.232021,4.113481,-8.262536,-9.921299,-0.028049,7.382246,1.709515,-0.773889,3.496589,-5.646109,-0.854719,9.241378,1.581065,5.350159,5.528744,-3.072879,-5.369796,5.558705,-8.764414,-1.391584,7.205014,-2.125751,-6.092245,-6.925849,-8.702291,-7.983791,-0.648129,8.392643,-8.041035,-3.571580,-1.360365,-1.797767,-2.081130,-0.904265,-2.547146,9.632042,-9.740557,-2.370281,-9.829312,-3.427093,6.851350,-8.557723,-4.750642,3.693504,-5.484822,-1.592920,-5.687477,9.990617,2.882714,9.974169,9.821764,8.653331,-2.526030,-8.269396,-8.182579,-4.723976,5.273254,3.149739,-2.052737,-5.242815,-8.349087,1.324527,-9.771776,-6.862897,-6.881629,3.358135,-5.412131,6.140018,-3.734319,-9.887245,-7.649093,7.839347,8.015053,2.388601,1.513145,-0.619462,4.354490,8.704585,-2.355519,2.459952,2.196719,-9.815859,5.214709,6.875473,7.913147,8.045848,-2.369095,4.068573,2.829084,5.922864,8.244893,2.857731,4.062052,-6.879368,-9.958193,4.951276,-3.143808,8.996371,4.297330,4.645070,-1.544125,6.433078,2.146602,-6.994793,4.575809,-5.447606,1.560193,1.709519,-1.870042,9.440463,1.418357,-5.237645,-1.605278,-2.520791,-6.021068,2.586189,-7.043037,6.390034,1.230303,-0.113173,8.770740,4.687877,-7.974147,-3.786579,-9.470116,5.849098,-3.023667,0.159805,-1.619686,-4.264711,-3.276916,8.667369,-1.835849,-0.853904,5.322123,6.290640,3.767485,8.163054,6.591838,-1.877993,9.963831,-1.985675,-9.025788,8.894882,2.370821,7.512244,0.888070,-5.010212,-9.895112,7.289846,3.971594,-3.441238,-9.739240,9.923244,5.132222,4.749970,1.353212,-9.475749,-1.660310,-5.027896,-5.122968,8.385982,5.689599,4.026115,-4.842044,5.505457,8.841885,2.810343,0.523209,-2.413043,-7.942850,-2.045400,6.993447,6.219356,-5.598842,7.145295,-1.900238,-4.134348,-8.414265,0.495123,-8.767707,-8.547621,-9.135081,4.412414,-0.927106,3.174158,-3.353089,2.068287,-8.913195,8.361355,-4.006125,9.833075,0.749529,-2.484643,-8.757153,-4.239338,-0.492618,-2.783176,-8.444741,8.631453,5.742573,-2.024099,-5.005687,1.051661,-8.653978,5.618788,8.813059,1.543954,-1.169370,-0.356704,8.308658,4.602844,-8.144523,6.454960,-9.253777,8.904481,3.604173,0.174138,6.181518,-9.121918,0.741534,1.558195,3.982114,1.761057,-3.914225,-5.989163,-9.100905,-8.191060,1.695717,-9.485578,-0.040472,-6.816129,4.047961,2.050414,-4.558284,-7.709933,0.074262,0.850816,1.445430,-5.576734,-0.254166,5.991346,-9.384779,4.620441,3.445370,0.087824,-6.974240,8.640456,1.046271,-6.763175,2.443413,0.532921,-4.438596,6.091160,3.800804,-6.716126,-0.832381,7.719705,0.152843,-1.250208,-4.279124,-2.042140,6.722958,-6.569370,-9.622741,2.894492,4.627616,-2.480928,4.712542,1.480598,4.512626,-9.466663,-5.597878,-5.407808,9.384509,-3.340376,9.767863,-6.236965,3.151031,7.016264,4.279069,2.707289,-7.358018,2.883009,3.505247,-4.606312,-4.509515,-8.428655,-7.538178,-6.618066,9.024175,9.890807,7.523195,-9.950685,-3.801638,-0.051885,-0.874353,1.439334,4.165609,-1.381599,1.153203,1.008336,1.047268,-0.476558,-1.100235,8.851453,-8.144642,-5.863304,-1.518395,-8.783762,4.474002,2.759626,-4.116404,-4.437924,7.622176,-1.176259,4.567152,-3.358732,5.579031,6.793937,4.972448,6.552569,3.454747,8.297979,-3.643016,8.410455,-0.071317,7.983434,5.137004,-2.860624,-6.500353,0.842160,-7.837163,6.982339,6.208591,9.716087,0.872286,-0.642300,4.383420,6.786802,5.192672,9.330170,7.030061,-2.610880,-3.390980,1.940827,1.646697,-4.932589,-6.820014,7.317990,-8.334367,-0.677401,5.185537,2.826095,-4.084389,0.155036,5.464497,2.655887,3.301474,3.931759,-7.398843,8.515087,8.145351,8.857629,9.223677,9.787076,5.139788,4.301468,-9.804745,3.886312,8.824119,-5.151478,2.453029,2.007578,0.943359,-0.971598,7.417329,9.374804,-9.187949,-6.283308,4.883519,0.490335,5.972787,-1.421942], dtype = "float32")#candidate|554|(1144,)|const|float32
call_553 = relay.TupleGetItem(func_498_call(relay.reshape(const_554.astype('float32'), [11, 13, 8]), relay.reshape(const_554.astype('float32'), [11, 13, 8]), ), 1)
call_555 = relay.TupleGetItem(func_501_call(relay.reshape(const_554.astype('float32'), [11, 13, 8]), relay.reshape(const_554.astype('float32'), [11, 13, 8]), ), 1)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
call_563 = relay.TupleGetItem(func_498_call(relay.reshape(call_553.astype('float32'), [11, 13, 8]), relay.reshape(const_554.astype('float32'), [11, 13, 8]), ), 0)
call_564 = relay.TupleGetItem(func_501_call(relay.reshape(call_553.astype('float32'), [11, 13, 8]), relay.reshape(const_554.astype('float32'), [11, 13, 8]), ), 0)
uop_573 = relay.sqrt(uop_518.astype('float32')) # shape=(14, 12, 6)
output = relay.Tuple([call_553,const_554,call_563,uop_573,])
output2 = relay.Tuple([call_555,const_554,call_564,uop_573,])
func_582 = relay.Function([var_517,], output)
mod['func_582'] = func_582
mod = relay.transform.InferType()(mod)
mutated_mod['func_582'] = func_582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_583 = relay.var("var_583", dtype = "float32", shape = (14, 12, 6))#candidate|583|(14, 12, 6)|var|float32
func_582_call = mutated_mod.get_global_var('func_582')
call_584 = func_582_call(var_583)
output = call_584
func_585 = relay.Function([var_583], output)
mutated_mod['func_585'] = func_585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1343 = relay.var("var_1343", dtype = "float32", shape = (14, 1, 16))#candidate|1343|(14, 1, 16)|var|float32
uop_1344 = relay.sinh(var_1343.astype('float32')) # shape=(14, 1, 16)
uop_1351 = relay.exp(var_1343.astype('float32')) # shape=(14, 1, 16)
output = relay.Tuple([uop_1344,uop_1351,])
output2 = relay.Tuple([uop_1344,uop_1351,])
func_1362 = relay.Function([var_1343,], output)
mod['func_1362'] = func_1362
mod = relay.transform.InferType()(mod)
mutated_mod['func_1362'] = func_1362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1363 = relay.var("var_1363", dtype = "float32", shape = (14, 1, 16))#candidate|1363|(14, 1, 16)|var|float32
func_1362_call = mutated_mod.get_global_var('func_1362')
call_1364 = func_1362_call(var_1363)
output = call_1364
func_1365 = relay.Function([var_1363], output)
mutated_mod['func_1365'] = func_1365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1375 = relay.var("var_1375", dtype = "float64", shape = (16, 6, 13))#candidate|1375|(16, 6, 13)|var|float64
uop_1376 = relay.erf(var_1375.astype('float64')) # shape=(16, 6, 13)
output = uop_1376
output2 = uop_1376
func_1381 = relay.Function([var_1375,], output)
mod['func_1381'] = func_1381
mod = relay.transform.InferType()(mod)
var_1382 = relay.var("var_1382", dtype = "float64", shape = (16, 6, 13))#candidate|1382|(16, 6, 13)|var|float64
output = func_1381(var_1382)
func_1383 = relay.Function([var_1382], output)
mutated_mod['func_1383'] = func_1383
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1482 = relay.var("var_1482", dtype = "uint8", shape = (3, 4, 8))#candidate|1482|(3, 4, 8)|var|uint8
const_1483 = relay.const([[[-4,-5,9,10,-2,-5,3,4],[10,-3,5,4,-7,-9,1,-3],[3,1,-1,-9,-3,7,4,7],[-1,6,8,-9,2,-10,-6,-8]],[[-2,2,10,-8,8,9,9,5],[-8,-3,-2,-3,-4,9,-7,8],[-8,5,-2,2,-8,-3,9,-4],[2,1,-4,10,9,-8,6,8]],[[-8,1,5,3,4,-8,-5,-8],[-4,3,-7,-5,-10,-3,-1,-10],[1,1,5,-9,10,-2,4,4],[-10,5,7,4,-5,6,7,4]]], dtype = "uint8")#candidate|1483|(3, 4, 8)|const|uint8
bop_1484 = relay.multiply(var_1482.astype('uint8'), relay.reshape(const_1483.astype('uint8'), relay.shape_of(var_1482))) # shape=(3, 4, 8)
var_1488 = relay.var("var_1488", dtype = "uint8", shape = (3, 4, 8))#candidate|1488|(3, 4, 8)|var|uint8
bop_1489 = relay.mod(const_1483.astype('float32'), relay.reshape(var_1488.astype('float32'), relay.shape_of(const_1483))) # shape=(3, 4, 8)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
const_1493 = relay.const([2,-6,3,7,9,5,-2,-4,8,6,2,-10,2,10,-10,7,6,4,-7,-7,6,6,1,-3,-7,-5,-9,-5,-10,8,3,5,-1,7,1,6,-8,-7,10,7,9,6,6,-2,-8,10,8,-9,4,8,-1,-5,5,-7,-2,-4,-8,-10,2,5,-2,1,8,-10,-7,-10,-3,9,-4,4,-3,-8,7,-7,10,10,7,-4,1,-9,-2,-7,3,2,-4,-3,3,10,-9,-2,1,5,-1,-2,2,-1,8,9,7,9,8,-8,5,-4,7,7,5,-3,-8,-1,6,-5,3,8,-5,-9,10,5,-7,4,-2,3,1,-8,-3,-1,2,-3,-10,-4,9,8,-3,7,-10,8,-1,3,-7,3,1,-6,8,9,2,2,9,3,3,-3,-2,-6,2,-5,10,6,9,-6,5,6,-9,1,10,-9,3,-7,5,-5,5,-3,-7,-8,-2,5,10,-5,2,6,-9,5,10,-6,-7,1,1,7,-4,-6,9,-6,-5,-9,-6,-10,-1,6,7,6,2,-6,-1,3,-7,-4,10,-7,-10,1], dtype = "int16")#candidate|1493|(208,)|const|int16
call_1492 = func_114_call(relay.reshape(const_1493.astype('int16'), [16, 13]))
call_1494 = func_114_call(relay.reshape(const_1493.astype('int16'), [16, 13]))
func_479_call = mod.get_global_var('func_479')
func_483_call = mutated_mod.get_global_var('func_483')
const_1505 = relay.const([9,7,-1,-2,4,-7,-3,4,5,7,10,-6,9,6,-2,-7,8,-7,-6,-1,-5,5,-7,10,-6,2,6,6,5,-7,1,-8,-5,-8,-3,3,-9,10,7,8,6,-9,7,8,-7,1,-8,-7,-5,7,-5,-10,9,2,7,-7,-9,7,-2,-8,-9,-7,9,3,-8,-1,-1,1,8,-3,-3,-2,-9,-8,4,-1,6,-2,-3,-8,5,6,-10,-5,-10,7,-1,8,8,2,-4,4,5,7,-3,9,-6,-4,-3], dtype = "int64")#candidate|1505|(99,)|const|int64
const_1506 = relay.const([7,9,-5,-7,-10,2,6,-8,-4,-8,-9,4,1,-2,-9,10,-6,-4,-3,-1,-2,9,-1,-10,1,1,-5,7,-7,2,1,1,-8,-6,8,4,-4,-9,-1,1,6,-3,-9,7,-1,-1,1,-10,7,-10,7,4,-10,-6,1,-4,-1,8,-9,-7,5,5,-10,-5,-2,3,-2,1,-1,4,6,10,4,1,-4,6,-6,5,5,-4,-6,8,-3,1,-8,9,10,-3,-9,10,3,-3,6,-5,-8,9,6,-4,-4,7,10,8,-5,-6,7,10,-1,-1,8,7,-4,10,2,1,8,2,3,-10,10,7,-2,-9,7,-10,-5,3,-3,-1,8,5,-1,-6,4,7,1,-5,-8,-4,4,1,10,1,8,8,-6,-4,9,-1,5,9,9,-7,-10,-3,-6,4,-10,-1,6,6,2,9,1,6,-10,-2,-1,-8,-3,-5,-7,6,5,6,7,-5,4,-2,-4,1,-5,2,3,7,3,6,3,5,-1,1,-5,-9,-8,3,1,-7,8,-10,-1,8,1,4,-10,-1,-4,-9,7,-7,10,1,4,6,9,-3,-5,6,7,-9,1,-7,2,-3,3,6,-7,-3,-4,3,8,-4,8,-8,-10,-3,-7,-5,6,6,7,3,10,5,6,7,-5,-7,-3,-10,-2,-5,3,5,-9,9,6,9,9,-10,-3,10,-10,-1,-4,5,5,-4,-1,10,-4,5,10,-6,8,-3,-2,9,10,4,-2,-9,-10,-7,-3,-2,-7,-9,-1,-5,10,1,3,-4,9,-8,-1,-10,-1,4,6,-3,5,10,-6,8,-7,7,-9,4,3,1,-10,-4,1,-6,-6,-10,2,10,6,-3,-6,-2,3,3,9,-7,6,-9,1,-4,6,-9,-5,-4,6,-4,10,-7,4,-9,7,-4,-9,-2,8,-7,-1,3,-3,8,6,4,-10,9,5,8,5,-5,-5,-5,2,-7,6,10,9,-3,-10,1,7,5,-7,4,-5,6,-5,-2,3,-1,-1,2,-8,5,9,-7,3,10,7,1,10,-1,-10,-1,4,4,2,-5,3,8,5,10,-9,9,-4,-5,8,1,-9,-3,-6,-8,4,-7,-5,-9,-10,8,1,3,-8,10,-6,-5,3,10,6,-8,-3,-7,9,9,-7,1,4,1,-4,-7,-4,-7,-2,-6,5,9,8,8,-2,-1,4,6,5,10,-2,2,-1,3,-6,-2,-5,-2,-6,2,-7,-8,-4,9,-6,3,-9,-4,-5,-6,7,5,6,5,-6,-10,2,4,-4,7,5,6,6,4,6,-2,7,-3,3,-7,-6,3,-6,-6,-1], dtype = "int64")#candidate|1506|(495,)|const|int64
call_1504 = relay.TupleGetItem(func_479_call(relay.reshape(const_1505.astype('int64'), [1, 9, 11]), relay.reshape(const_1506.astype('int64'), [5, 9, 11]), ), 0)
call_1507 = relay.TupleGetItem(func_483_call(relay.reshape(const_1505.astype('int64'), [1, 9, 11]), relay.reshape(const_1506.astype('int64'), [5, 9, 11]), ), 0)
output = relay.Tuple([bop_1484,bop_1489,call_1492,const_1493,call_1504,const_1505,const_1506,])
output2 = relay.Tuple([bop_1484,bop_1489,call_1494,const_1493,call_1507,const_1505,const_1506,])
func_1510 = relay.Function([var_1482,var_1488,], output)
mod['func_1510'] = func_1510
mod = relay.transform.InferType()(mod)
var_1511 = relay.var("var_1511", dtype = "uint8", shape = (3, 4, 8))#candidate|1511|(3, 4, 8)|var|uint8
var_1512 = relay.var("var_1512", dtype = "uint8", shape = (3, 4, 8))#candidate|1512|(3, 4, 8)|var|uint8
output = func_1510(var_1511,var_1512,)
func_1513 = relay.Function([var_1511,var_1512,], output)
mutated_mod['func_1513'] = func_1513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1591 = relay.var("var_1591", dtype = "float64", shape = (8, 5, 11))#candidate|1591|(8, 5, 11)|var|float64
uop_1592 = relay.atanh(var_1591.astype('float64')) # shape=(8, 5, 11)
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
const_1595 = relay.const([6.064737,-5.141689,2.235296,5.455821,8.618030,-1.612743,5.963441,2.996083,9.520236,6.539657,-6.012336,5.757795,-0.251303,4.396196,2.682134,0.186278,2.604000,0.764223,3.790263,5.340271,1.416074,1.670977,3.533491,7.371722,4.228062,-8.054876,-1.815687,-8.139622,-1.688272,5.940840,-1.986974,-4.222907,-9.092478,-3.430586,-4.713782,7.791990,-2.395760,-1.883247,6.242331,-8.269073,8.240848,-9.534015,2.219767,-2.009247,-1.813528,2.823239,-3.697343,-5.514468,2.984848,-1.048448,8.804864,6.438501,-9.647409,4.985061,4.617565,-6.513163,-7.613064,2.358566,-8.661911,9.036857,2.708893,8.739054,-6.891346,-3.500723,8.171240,6.019892,-5.162520,-8.113846,5.774675,-9.231544,2.886849,5.328355,-6.390074,0.953661,-2.774108,9.353027,-3.766347,0.522716,2.605640,-7.224744,-3.323171,5.960861,6.894103,-7.006101,1.705175,1.911048,2.135027,-7.701031,4.541286,-0.825899,-0.274652,0.132979,7.195917,3.954327,6.133339,0.900371,5.908589,-9.593207,-6.739592,7.180060,-6.076345,-9.477368,8.053563,7.295857,2.106887,-0.750834,3.910563,-5.451157,-0.041264,8.154923,3.842264,-5.007856,8.594420,6.008864,5.781619,5.303082,-9.645505,0.627030,-9.984448,-1.835820,0.889514,9.228875,0.174386,5.008284,3.311047,9.341877,8.849953,-1.479619,-6.892266,-3.510061,-2.979047,8.079594,8.460399,6.844069,6.051925,4.295749,-0.784848,-1.111296,-3.217583,-5.663380,-3.744150,7.905542,9.589960,1.519924,9.508281,4.323860,5.722704,-4.736469,1.383796,8.868141,-4.527502,0.884114,7.568426,-1.058772,2.734989,-9.601742,-3.496154,4.297350,7.634077,3.847188,-7.985578,-1.804737,-1.982273,2.073394,-1.391576,-6.633892,4.408682,-2.669346,4.625612,6.930574,6.397100,3.686453,9.556753,2.092604,7.683189,3.738987,8.584541,5.274589,1.236412,8.750547,4.387946,-0.733776,-1.964246,-0.076614,4.494455,-6.684431,7.118679,-3.480519,1.497381,6.307165,-3.845311,-7.893013,-8.070540,8.945756,-7.487460,-6.325760,5.099608,0.537322,1.809822,7.720770,9.165633,7.341990,9.128127,0.756891,0.066017,6.368247,7.271998,6.468251,-4.777067,4.093729,4.740892,-3.770874,-0.931330,-7.896847,2.240638,-5.247084,-4.645343,5.592727,7.350605,-4.458165,7.085948,6.990561,3.666043,0.677964,6.865010,2.105538,-4.128164,1.484097,4.855702,-3.026337,-9.914157,4.490805,-3.797497,-0.477779,5.364529,-4.253510,2.762667,3.313640,-7.816823,-9.437472,-8.195440,-3.668710,5.070714,9.562815,-5.259659,-7.137129,8.235646,7.918902,-9.809644,8.801730,-0.823873,8.893019,3.600175,-7.648654,4.318840,-6.618299,-2.854775,-6.099000,-2.678832,-1.523825,9.096116,8.208950,-3.479194,-0.531870,4.017754,-7.012424,0.162564,6.550804,3.317774,-2.372353,-7.555922,-2.794810,1.193120,-5.617961,-6.509320,-2.614659,1.076461,-3.272409,-9.775334,2.815280,0.899573,7.489541,5.489193,5.365078,1.314347,2.813860,-0.835162,-1.858991,-8.647058,-4.451281,-0.531207,-2.394351,-4.738231,2.368339,6.037825,-9.439628,5.723392,1.608143,-0.653992,0.718415,-8.247010,2.571501,-8.835903,-7.343452,6.887585,7.134241,-1.838248,6.183958,9.883559,6.073740,2.477006,2.974323,-4.483566,8.158748,3.103695,-8.235497,6.520446,2.685833,3.578737,-0.735729,-1.842022,-6.296794,3.526235,8.038448,9.474226,3.313312,1.050477,4.183663,8.847969,-5.142120,6.092486,-4.129871,0.806853,-9.372151,-0.017931,3.362045,-5.196131,0.401473,4.781609,-2.004377,4.387571,-5.479830,-1.806094,-9.434233,-9.141384,4.795471,5.660839,2.500469,2.768766,-2.319352,-2.673122,-7.300155,3.560576,5.311507,-7.954404,2.438969,0.072739,-9.313324,4.460293,-9.092785,-6.950184,0.461505,3.153532,-3.098992,-5.880914,-5.540628,-1.767020,-6.547233,-9.939344,-8.194363,3.620607,8.712774,1.501164,6.791021,-0.032241,5.299528,2.896302,5.016500,9.643356,8.922074,-0.895180,-2.317334,-7.921576,-3.947602,-9.843991,1.093720,8.152072,9.326051,9.448306,8.633772,-9.491970,-2.057731,-7.384469,-1.383588,8.827503,9.899312,-7.952019,-1.852779,-9.897319,8.656962,0.556636,7.398176,4.733331,-3.291687,8.989533,8.058101,-9.474895,6.181198,1.444110,-9.345010,1.306307,-2.734663,4.304763,-5.793787,6.408430,8.641890,-9.721370,4.425978,2.522993,-9.395580,-9.320704,-3.257260,2.578058,6.974884,6.997206,3.563768,4.775583,-6.111639,-8.793141,2.266056,1.211382,6.139498,0.761353,7.285336,-2.639955,8.102739,7.308834,8.061660,1.211788,5.189016,-6.512451,2.126057,-3.586527,-7.637238,-8.129361,8.389418,-0.630905,8.609093,7.303247,-3.413292,0.527830,-5.644960,9.848378,2.517368,-5.618912,-0.744980,-1.623605,6.450269,4.081969,1.723379,2.761224,2.410597,2.556526,1.309316,-1.962044,-6.416190,3.945201,-3.496577,-4.261981,6.538892,1.318131,2.409909,2.345148,-9.810261,1.730704,-8.525545,-1.874816,-7.406042,-7.347115,0.336202,-4.178052,-5.145592,-7.825848,-6.086626,3.759848,-5.574803,5.243953,-7.758755,-5.975490,-9.798374,-7.442636,-1.103435,-2.839446,4.343200,-8.368535,3.374906,-5.733315,-8.559538,3.741499,-6.236232,-8.685324,0.951926,-4.223034,-4.727606,-5.777654,-1.695020,7.248678,-4.036986,-2.670439,-0.323644,-7.965223,3.524474,-6.692456,6.735483,-6.902350,-3.438577,-2.488942,5.655563,0.994892,5.194663,-9.014302,-5.352188,-0.144897,6.031518,-1.776988,5.357103,-8.653978,-2.191983,-2.556856,-5.237554,9.653388,4.674115,-3.886595,-8.931610,-3.845363,6.158226,-9.065191,-0.961002,-2.532023,2.592946,-1.438668,0.041437,7.300368,7.290873,-5.910443,-5.641237,-9.506621,5.618447,-4.007585,-7.766937,-6.094037,3.306035,8.669117,3.965343,-1.471755,6.395894,-5.973009,1.850119,-1.690782,5.460751,-0.982919,-8.492517,-0.137334,1.613410,1.747729,1.300508,0.391388,-8.765350,5.922289,9.744348,-4.059028,-1.120566,6.417293,-4.471686,-9.049582,-3.587608,-0.053131,5.398883,4.430545,1.872979,-2.225742,-6.132275,-0.737379,-2.252194,-7.023196,3.197163,-3.557169,6.565093,0.135215,8.109973,-5.361312,-5.108744,-6.393573,1.042828,-2.373920,3.053609,6.076628,-3.405326,-1.876616,0.311970,-5.381172,-8.886855,-5.132560,1.149617,7.961819,3.767057,-6.026903,-7.367967,2.798870,-1.363149,7.418798,-0.795701,2.346683,-5.458764,-1.675505,5.786261,-0.103470,9.201406,2.401668,-1.385539,-0.214493,-4.657196,5.072094,0.026772,-3.230610,-7.796861,8.826994,1.646111,3.172488,8.448886,8.003799,0.386355,-5.636626,3.672667,8.788665,-3.977762,7.826723,-0.443742,-4.048196,-5.741019,-9.368519,-0.810271,1.714082,-2.350680,1.843714,-3.422131,-1.902437,-8.628955,3.363927,8.967260,6.470881,-7.843559,-3.235075,7.154172,-3.203417,-7.952503,-5.312873,0.903920,-2.961421,-5.238351,2.461937,-2.053797,-1.211878,-3.401919,-7.432015,-3.723806,2.318488,2.120951,-7.183072,-3.141577,-3.494091,7.646845,0.217032,-0.490288,-0.587435,1.118078,-1.806374,-9.144620,-2.382735,-3.694723,-5.301431,-3.400966,7.054182,5.345697,-6.821783,-4.238282,-2.671765,4.629151,-1.698855,4.926292,4.011092,-5.660694,0.608404,-3.042284,4.290549,-3.454283,-2.536612,-0.950473,-2.141619,6.981298,4.589808,5.201590,7.897415,-4.641936,4.302346,-8.812285,-6.057464,-6.579623,5.082844,-5.894358,4.930299,-6.321115,5.359946,2.278569,0.760412,1.287897,-8.303647,-7.766804,6.698676,-0.349631,4.558974,9.673109,6.516558,8.981388,2.458975,-0.289447,-4.524264,-1.773008,8.535324,-6.010773,-9.807981,2.082186,-4.429713,-2.994200,-8.629277,-8.602404,1.454965,-1.963911,5.049914,-5.296417,2.533207,7.929109,5.005741,1.515595,0.153524,7.649942,3.933514,7.287966,6.651811,-6.972635,-9.882798,8.070059,-3.969496,-1.460425,5.618861,-3.637173,4.687629,-8.944569,1.273860,0.373566,4.271924,-8.839218,-4.478795,8.806356,7.868222,6.351290,-5.364166,-6.090224,-1.615523,0.737526,0.626645,-9.407638,6.695038,6.581883,8.729637,-0.275532,-3.880007,3.814598,-6.511365,-6.539297,-1.987552,7.140218,-5.652018,-2.592418,-1.716089,-7.014937,0.527511,8.212234,8.396284,-6.892965,1.761471,-0.865283,0.347435,-0.393090,-3.010585,-0.150228,9.492503,1.070851,9.513596,-0.167682,2.227865,4.131357,-0.095314,-4.578840,2.600936,-4.666621,2.782423,-3.376997,-5.742443,-0.686448,9.809560,-1.158348,-1.792533,-7.259627,8.409016,3.055208,3.154634,2.888711,2.553249,-3.479164,-6.171977,-4.734357,3.103331,8.489432,0.786036,-0.873674,-7.457571,3.790658,-5.413705,-1.722156,2.722426,7.923439,-0.551285,-0.703978,-7.584394,-8.833984,4.521580,-2.680202,-0.958661,-6.822747,1.111018,-3.795118,8.636483,-8.412784,-1.897953,0.329342,-4.465700,-5.335436,-2.879225,4.938607,8.940767,4.995520,-2.854530,3.938351,1.564012,-1.872664,-6.545762,-4.111720,5.575463,-9.452601,1.670458,0.548831,-7.154589,-3.867504,-3.943475,3.804732,-3.464332,-4.539563,-7.571872,9.948401,0.831966,-2.160838,-4.914866,-3.931531,6.996848,0.813190,-5.692987,-4.988639,2.098726,0.901759,-8.358795,9.632170,-3.069541,4.032408,-3.285249,-2.731763,8.132356,3.198422,-7.332360,4.053042,-0.767928,-4.032712,8.850237,1.751672,-4.267891,-5.780875,6.119353,7.183289,4.371746,-6.238520,7.288220,7.182710,9.527442,-9.369460,-8.104458,1.261355,1.103863,-0.666248,7.530598,2.500662,-1.975371,-1.148945,2.915961,1.359174,2.027572,-5.064719,5.634899,0.615520,5.537869,-6.137557,0.867019,-6.004387,1.266610,5.341237,7.554096,-2.935047,-7.188386,3.276737,-6.539642,-9.946199,0.035153,-1.872277,-2.153723,0.369893,-9.320171,-7.609173,-0.423561,-0.808922,1.189238,-5.020576,-2.821489,-5.050441,6.092172,-3.096450,7.575940,9.726110,-0.118361,8.399945,0.605830,-9.504420,-5.011250,3.856001,0.480634,-1.650241,7.894508,7.126915,-4.998729,-5.149727,-4.809259,2.460190,9.171382,-3.667565,6.754379,4.159546,-8.358101,-2.391478,-4.600583,5.194872,3.252044,-6.273184,-4.148882,-1.033770,4.960828,5.971308,3.688551,9.544776,2.199088,-1.499458,6.655174,-6.658333,4.423592,-4.985574,-0.564321,-6.452871,-0.243777,0.364603,-0.204005,2.548157,-4.719157,1.381150,1.080817,7.210024,-4.431646,6.152714,8.643350,-6.895476,-3.045669,-6.806446,-5.052399,-1.411030,8.745233,-8.320049,9.056202,3.142805,-9.800542,-6.075639,-6.211074,-1.733932,0.463695,-7.197963,8.130680,-7.430042,-1.679293,6.748469,3.639288,9.531337,3.954315,-1.017644,5.607638,-6.243333,7.649697,6.071619,-3.207791,-5.321305,-4.006755,-7.851762,3.236461,4.522179,2.499174,8.184511,5.283037,4.484365,-3.422474,1.984877,-9.650238,5.201351,-0.765355,5.388424,-2.379932,8.221948,-2.426706,8.288298,-9.608329,8.865990,6.062064,-4.818362,6.679078,3.033259,5.041116,6.098384,-9.089637,8.870161,-3.431624,-5.328446,7.306210,8.622429,9.293088,6.085361,7.552962,-2.142790,5.265887,7.129525,-8.174821,-4.921907,-8.848455,7.594023,-9.441567,3.724774,3.568363,-0.079890,3.779264,7.725351,-1.864359,-5.334960,5.090560,-4.035241,1.291409,-9.990581,-2.457599,-8.071287,-1.184449,4.210820,-3.600661,3.683475,-5.189364,-1.511369,0.054490,1.499309,4.262899,-6.710589,-4.804997,9.545423,-5.444311,8.112314,3.537742,5.297810,-3.628851,-8.398759,-3.834790,-5.806697,3.382572,-3.509728,-3.863905,-0.935149,-8.610515,5.247197,4.081648,-4.477177,-4.478766,-7.059905,2.122778,4.341113,1.581800,1.123976,-8.555777,-4.628024,-1.416757,-3.427124,-8.589016,-5.874664,8.192350,9.695592,6.850485,8.673060,-5.279477,6.017082,7.742450,5.447844,-7.742970,-7.889639,-9.746096,8.440662,-9.947788,-3.378817,-4.095098,2.475083,-0.439826,3.731194,-1.410401,2.965681,-9.683196,8.649906,0.875956,-5.692721,8.494380,-8.586541,-1.766593,-3.948325,-8.845084,1.450062,-2.893841,-7.723434,-8.870001,-4.008079,-0.784414,1.038175,-7.800334,9.353187,7.328148,6.186772,-7.182626,-7.179739,7.318007,2.431989,3.822522,5.780006,4.239544,-1.860725,8.047020,9.771325,-6.148215,-2.090402,7.009935,0.014390,-0.284910,9.794202,-4.995284,7.684293,-5.443145,5.565734,9.581038,0.211010,2.529265,-0.455233,-6.635233,-0.370877,-1.752135,8.170151,-4.270100,-1.452335,-1.567154,-6.069433,-4.320055,-8.206658,-1.735517,-0.532427,-0.381913,5.375007,-2.500112,-5.018473,0.836829,7.395278,-8.634599,9.694074,5.234162,9.006323,7.782411,8.447198,0.093455,-6.745422,3.221411,8.982959,2.816418,8.036053,2.847288,-5.707475,2.240714,-4.488759,0.255630,-0.259876,-5.035777,-9.715189,3.775609,5.000021,7.381708,9.745694,-4.956326,7.312344,1.688064,3.062546,-8.558834,3.455300,-9.100209,3.716459,6.112267,-0.002320,2.477509,6.137119,-1.011717,1.806760,-4.160942,0.902694,-5.413888,-2.192037,0.117007,-8.794650,-7.994419,2.709577], dtype = "float64")#candidate|1595|(1248,)|const|float64
call_1594 = func_1381_call(relay.reshape(const_1595.astype('float64'), [16, 6, 13]))
call_1596 = func_1381_call(relay.reshape(const_1595.astype('float64'), [16, 6, 13]))
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_1600 = relay.const([6.866543,6.912272,3.619384,9.340566,-9.554212,0.865298,-3.475051,-1.331951,6.513358,-9.596416,2.553563,-0.459634,3.945755,-4.174630,9.608157,1.999120,2.064269,-5.034022,6.448699,-5.513467,-2.869280,-6.310087,-6.162145,4.845558,-8.233281,3.938459,5.943232,0.833885,-3.702332,1.379147,6.451462,4.419653,-5.556231,-4.672560,1.368816,5.135009,-4.070730,-1.638514,-2.610114,-1.981953,-9.190851,8.823607,-9.629271,-3.781725,-8.226943,-7.969797,-9.516044,-6.657283,-3.896899,3.259493,-0.597635,0.235945,-0.212601,2.959042,2.061690,5.475951,3.449283,-7.474006,7.579615,-2.032479,-5.714926,-2.583214,-7.159597,5.416991,0.120264,-0.979013,3.494708,-3.447599,-3.345505,3.145111,-4.828821,8.984801,9.626005,6.869637,-7.180056,-9.955331,-0.771964,0.801962,-7.042182,5.435911,9.026524,3.251782,-4.093113,-3.848697,3.951821,-2.991184,2.669501,6.126894,4.167763,9.890419,-1.264340,1.549682,-0.296389,-0.737314,4.849732,-5.587249,6.656085,-3.078056,-5.436445,-8.180389,-1.333610,3.626525,-1.619139,-0.492177,5.733322,4.815097,0.855848,-0.224902,-5.778958,-5.125147,1.145718,-3.553909,-2.828615,-5.130909,-8.002037,-0.270555,3.782067,-8.887487,-6.727267,-7.963912,-4.684085,-0.089977,-5.631866,-6.410014,9.431687,-0.317096,0.143767,2.974416,9.470117,-3.366695,1.102737,-2.773583,-7.478562,-7.892774,5.575699,-2.554810,4.991093,-6.098109,-5.694774,-8.877199,1.742757,-6.539685,9.713670,5.494006,1.256840,-9.142466,-1.023537,3.493256,5.640974,-1.985883,-1.279734,7.671537,3.540534,7.153635,-0.977699,9.049867,2.924729,-3.472605,7.726172,2.504683,-4.565209,6.130644,4.705469,6.058488,1.583155,1.128733,1.129733,8.682821,-4.106523,-4.848910,-6.407092,0.269254,1.794401,-1.406404,3.159012,2.661730,-9.877745,-5.454854,2.729672,-2.005098,1.796048,4.456523,-0.445763,3.249538,5.841574,0.348880,0.449192,3.965481,8.013515,-6.387768,-6.234364,-5.256365,-4.773321,-5.065145,-2.153834,-0.514337,-7.275300,-2.597773,-5.606312,-3.839621,7.628725,6.873365,-5.277842,5.643198,7.545074,-7.260282,6.560785,-7.688227,8.896714,-4.635956,7.261448,-3.529676,-3.664773,1.851347,-2.168688,-1.093034,9.888659,1.379441,2.709989,9.521101,-9.715197,-1.751755,-1.944005,3.380923,2.659008,-4.417884,8.372494,-8.395632,3.583575,-2.811651,2.171564,-1.003706,0.724954,-5.435127,-4.380193,8.622740,6.364040,9.359731,-9.510078,-5.258117,-2.538338,-9.781238,2.613956,4.473449,-3.797584,-3.488275,-2.581403,9.386859,-9.345270,-3.190903,5.145840,9.296517,2.700254,4.691332,-5.225934,0.361473,-5.454044,-1.927143,4.386528,-2.461410,3.022620,3.366880,2.124748,6.773084,5.304059,4.627743,7.570933,1.558672,4.857073,-6.600370,-2.059871,-2.002622,-4.476390,-5.404359,-6.384917,0.367030,-6.224499,2.320576,6.115885,5.460492,8.347430,-1.623860,-8.504660,0.108536,-8.368981,4.468883,-3.463792,3.213903,-6.350991,-2.051210,-4.805761,-5.696811,-2.972708,1.717330,8.575836,-0.149525,1.154890,1.147636,5.425140,1.176087,3.015359,-2.487630,-0.680073,-5.309207,-2.450032,4.742932,-4.257108,1.885029,2.079087,4.904017,9.757752,7.453864,-5.175499,-7.159930,-2.706329,7.597251,-1.138985,5.541741,0.106944,5.554358,-3.755478,-2.404209,7.991320,2.164187,-0.937142,5.805622,4.208740,-2.635931,5.299321,4.970705,-7.452441,0.501367,-7.680352,3.485925,-9.630601,9.773448,5.639683,-8.628582,5.124543,-1.435952,-2.383028,-2.016065,-1.739731,5.049694,2.307955,8.130965,1.862371,2.719662,5.286619,9.118600,1.994165,-0.875337,-3.087239,3.271144,0.823043,-0.723170,3.127769,6.284617,0.436254,-6.177410,1.532039,7.922943,-6.728146,-8.489318,4.717559,-3.469829,6.372221,-2.942353,1.139263,3.505983,7.747736,-7.711961,-5.451267,-9.094067,-4.081075,3.559434,7.123505,-6.500150,1.023046,2.762996,-0.908836,6.201823,2.066168,2.587721,-7.275513,4.400881,-4.709792,-8.502445,6.287098,3.558985,3.530987,8.901925,3.340340,9.641150,-6.709760,2.968630,-8.310966,-9.778115,-7.405386,-0.091301,7.516621,-5.158390,3.078115,-1.628125,-6.126190,-6.673103,-5.573470,-8.843324,4.801389,-2.477650,-0.682366,-6.774937,4.460258,-7.783366,-9.502797,-8.989259,-8.894198,-4.479325,2.044683,-4.721642,-6.671728,-8.794998,-7.078424,-1.354587,-8.318950,-1.994383,-1.455433,7.489676,0.674100,-1.890884,-0.070952,0.041312,0.917217,-8.904201,5.170830,-8.520591,2.849634,-9.833773,2.050594,6.210936,-3.339078,2.399406,-5.655652,-0.558805,-9.535599,7.565727,0.931952,-9.165330,-7.227825,8.728988,8.796454,6.828496,-2.750871,2.427226,-0.425427,2.907587,-9.032066,-2.198920,3.331613,-7.087000,1.765784,-2.329322,5.753525,6.842984,3.216720,6.522509,5.050102,2.273726,-5.720022,2.856906,6.992814,4.181202,7.894408,-8.184836,-2.307246,3.965899,4.769755,-1.129638,-9.234832,-1.480125,8.366733,-2.094531,5.122256,-1.887784,-5.885916,-8.927128,9.243247,3.039512,0.205727,2.079242,1.109109,1.127336,8.139154,0.141291,-2.432317,8.706368,1.473496,-1.469401,-7.899755,-0.177117,-3.022139,-9.150443,8.925993,9.993810,-2.517681,-9.380039,7.824941,-4.718973,-0.249433,-9.905214,5.130290,-4.356782,9.171075,6.491141,2.994881,1.207598,2.638319,7.149422,4.151711,1.062228,-2.942266,0.571914,-6.008035,-2.129010,8.439793,0.313541,-5.329652,5.473697,-6.486697,3.000243,6.134426,8.289659,8.577257,6.808817,3.577015,-5.291584,-0.552374,4.278033,9.125443,8.674470,-3.815262,3.839960,-5.763243,4.321461,-0.559851,8.798131,8.558390,-9.065562,5.132360,2.280785,-2.206061,-0.716568,-9.998376,4.634254,0.464498,-9.644841,3.964537,0.772673,3.691681,-7.784504,6.541582,3.405757,7.278940,3.285759,0.663755,7.161195,-9.753764,-4.079898,-0.700004,-5.219127,1.012637,3.898311,9.907738,-9.865027,5.330110,-4.861823,-3.773080,6.320047,9.620905,4.663207,-6.705928,-8.050087,-3.534322,7.756602,0.673509,8.321167,-7.018587,9.917218,5.575773,-2.248572,2.914538,4.059035,-4.581107,9.084024,-8.407885,-8.668652,8.266742,1.680566,-1.502795,-8.022092,0.949491,-0.947066,1.456078,0.647207,2.288015,9.416317,-2.557908,6.131120,-6.084478,-0.977163,4.089017,6.624451,4.861738,-6.976123,0.129618,5.592603,-8.640957,-5.415188,-5.288748,-0.910173,-8.239150,-4.983146,9.330184,0.359172,-9.957928,-2.303777,9.888820,-2.002125,-9.795345,-9.384370,-8.426439,-8.371242,1.713974,-6.860843,-0.774928,0.048017,-8.726487,3.561097,4.503576,2.498108,-5.242983,2.025120,8.622510,1.682240,3.520922,6.352025,2.039991,-3.313305,1.222148,-0.501140,-1.282514,-0.295926,3.306248,-5.307231,-7.783113,-0.583610,3.710380,-7.777744,-9.998602,-6.567313,7.732550,7.908825,-6.132061,2.254546,-5.519905,5.018150,-3.525528,4.525398,-5.168222,-5.647288,-7.327699,1.598133,1.712921,-6.125102,9.879412,0.217712,4.326849,-9.566721,-5.644551,1.650433,8.216612,4.777204,-5.234323,-8.064864,-4.909234,1.940616,1.445347,-0.665613,5.575470,-9.707997,-7.214212,4.392779,-6.889256,5.940200,-1.479491,0.406131,4.584017,6.346712,-1.494659,-1.557858,-8.563760,2.483349,6.102320,-2.778838,-0.332667,7.812900,-5.503748,-3.617363,-0.616714,-6.085665,-5.193184,8.900321,-3.959726,0.549306,-5.373427,-8.515498,-0.210530,-9.635108,1.242486,-9.617591,-1.953008,-1.531922,-9.630091,6.654562,-9.320113,6.939131,-6.201133,9.073437,9.516788,3.438323,-3.896474,6.564465,3.836154,-7.493495,-6.426719,-8.949126,9.953800,-0.650416,-2.054113,-7.337647,5.489771,4.302092,-8.770010,-1.497721,-6.162896,0.228376,2.364805,8.282311,7.699702,-3.461235,-1.947241,-3.859949,1.805791,0.018063,-0.088904,2.579234,-6.688390,4.421986,0.709884,-3.358824,3.703175,-9.708950,-2.670092,7.333085,-2.942039,-0.565317,0.749459,-9.252016,8.933811,-6.543879,2.497112,4.063184,-6.231452,1.629162,-9.703347,6.628906,9.745710,7.552704,6.759750,4.230272,-3.208566,-5.325733,-7.313099,-0.315511,1.967616,-1.337349,-2.656910,-8.309377,-8.810926,-8.447061,7.548500,8.913665,-3.074867,8.824374,3.539558,3.247258,-3.382385,1.652691,-0.713101,-9.816303,-7.508917,-7.864530,-2.572012,-0.878861,-0.881611,8.965509,-3.434670,7.573914,1.884567,1.102318,2.744590,-5.003227,-1.468584,0.416930,-2.723130,-3.708685,-0.552915,9.777953,5.600291,8.707717,7.769618,-3.303070,6.526539,-4.528285,-2.503148,-5.954130,-7.452136,5.798869,-2.346126,9.540343,-2.673280,-6.891416,-4.037885,2.644253,8.632172,-3.158316,1.993989,-2.105211,-4.330026,-1.693488,-4.392431,-4.493505,8.427365,-8.114463,-2.148017,-4.798307,6.873684,3.678045,5.136714,-0.494861,-6.257133,1.796398,2.174385,-0.342793,-8.662929,-4.492256,6.068547,3.053440,-0.760426,4.145801,1.363424,8.507391,-6.900593,-2.284910,2.934700,-8.622230,4.945708,7.401742,0.775336,-3.110424,-2.765173,8.025046,-4.657121,7.336514,-0.512620,5.690491,-2.075702,-2.235116,-8.156009,-7.127305,3.295278,7.967612,-1.122548,9.319831,-2.428086,5.151077,-5.671328,2.441052,1.152154,6.528892,9.701571,5.364607,3.111829,-7.299841,9.124807,0.246883,8.725465,4.156610,-5.511593,5.372730,2.081776,5.505926,4.662973,-7.646230,5.002139,-3.962085,-5.102319,8.319678,-1.941572,5.738737,-2.011192,-0.572894,5.727342,-8.325428,9.802181,5.308201,-4.982281,-6.010937,3.645687,1.869295,2.365693,5.736955,7.281209,4.603855,-4.649036,1.314488,-0.603152,-7.722488,-3.093801,0.941376,-6.658308,-5.433852,0.071459,7.202292,0.626939,-6.268666,-2.866131,-6.157949,-6.887042,5.475654,7.506703,1.201171,1.488297,7.558793,-4.323689,3.025312,1.369760,-5.735723,-3.712880,6.850325,-3.957460,-4.806511,5.408577,-0.483012,5.601313,-7.700231,1.563536,-7.205365,2.336595,-1.957656,-8.092462,3.232635,1.758142,-8.182075,2.179049,0.282742,3.374238,-2.846444,-9.333093,-6.677704,8.662434,-7.534659,2.663403,0.227337,3.055575,-9.840753,0.244524,1.170514,1.224420,-9.988427,-3.789498,-1.958263,-3.034272,-7.089614,-3.881374,-6.999241,-5.801866,-1.921399,7.899387,-8.323353,0.912147,-5.144316,-2.655642,7.580913,2.313889,-7.915090,2.647665,-0.111352,-3.811300,-4.947628,5.801462,-3.001574,-0.773509,3.035801,-8.171901,-7.188664,3.582714,-3.898112,-2.949639,1.091214,8.207001,6.280729,2.199586,-2.915073,5.142565,-4.601206,5.573686,-4.817266,2.158813,6.179515,2.356574,4.698889,-8.933114,9.688927,7.132653,5.414332,-8.533610,9.661313,-4.893383,1.877093,-7.896298,-2.294954,-5.786728,5.642112,8.200291,2.236818,-3.237549,6.073637,-5.388232,-3.297582,8.382786,0.638080,-6.537728,5.084567,-9.818242,-6.619743,-6.606742,7.825066,6.653512,-8.555748,4.216556,-5.951106,-2.470126,9.964835,-1.039831,-3.763982,6.217302,8.326247,-9.400531,-9.521356,-8.505000,-9.538136,9.853109,1.318442,-4.112144,6.953162,-6.261085,-8.678616,2.101877,6.097599,9.604982,-5.623097,7.131976,-0.945857,-5.981891,0.590135,-2.763874,-3.356675,0.398076,-2.272874,1.426727,3.947130,6.208105,4.349777,9.881015,-7.411704,-8.292008,1.326611,2.541747,-7.981226,-5.668137,-0.621345,8.439809,6.835020,-9.736460,-8.694231,0.214237,3.867268,5.238025,-9.236707,-6.688744,4.686943,8.008160,-0.480966,1.241606,-6.983063,-6.772309,-3.063017,9.955168,-7.832882,0.981920,-4.999824,7.019610,-8.343787,-7.726599,6.772778,5.089275,1.979858,-6.729321,5.866139,-2.707965,9.596035,-2.935314,-4.914645,2.489140,-7.259777,-2.267307,-5.025750,-5.732662,-0.318522,2.790866,8.613932,1.160677,9.448773,7.828037,9.883571,-2.493349,-0.669550,-1.645520,3.999607,-7.157656,-9.183688,-2.587526,-9.909359], dtype = "float32")#candidate|1600|(1144,)|const|float32
call_1599 = relay.TupleGetItem(func_498_call(relay.reshape(const_1600.astype('float32'), [11, 13, 8]), relay.reshape(const_1600.astype('float32'), [11, 13, 8]), ), 1)
call_1601 = relay.TupleGetItem(func_501_call(relay.reshape(const_1600.astype('float32'), [11, 13, 8]), relay.reshape(const_1600.astype('float32'), [11, 13, 8]), ), 1)
output = relay.Tuple([uop_1592,call_1594,const_1595,call_1599,const_1600,])
output2 = relay.Tuple([uop_1592,call_1596,const_1595,call_1601,const_1600,])
func_1607 = relay.Function([var_1591,], output)
mod['func_1607'] = func_1607
mod = relay.transform.InferType()(mod)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1608 = relay.var("var_1608", dtype = "float64", shape = (8, 5, 11))#candidate|1608|(8, 5, 11)|var|float64
func_1607_call = mutated_mod.get_global_var('func_1607')
call_1609 = func_1607_call(var_1608)
output = call_1609
func_1610 = relay.Function([var_1608], output)
mutated_mod['func_1610'] = func_1610
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2250 = relay.var("var_2250", dtype = "float32", shape = (9, 16, 1))#candidate|2250|(9, 16, 1)|var|float32
uop_2251 = relay.log(var_2250.astype('float32')) # shape=(9, 16, 1)
output = relay.Tuple([uop_2251,])
output2 = relay.Tuple([uop_2251,])
func_2268 = relay.Function([var_2250,], output)
mod['func_2268'] = func_2268
mod = relay.transform.InferType()(mod)
mutated_mod['func_2268'] = func_2268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2269 = relay.var("var_2269", dtype = "float32", shape = (9, 16, 1))#candidate|2269|(9, 16, 1)|var|float32
func_2268_call = mutated_mod.get_global_var('func_2268')
call_2270 = func_2268_call(var_2269)
output = call_2270
func_2271 = relay.Function([var_2269], output)
mutated_mod['func_2271'] = func_2271
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2326 = relay.const([[[-9.637653,-5.543385,9.943161,-7.083177,-1.031774,-7.666447,8.081768],[7.968272,2.291355,8.623334,2.162510,-3.755451,4.350079,6.742505],[-7.820942,-4.829445,9.732346,5.087728,-6.986662,6.812246,-8.387171],[7.827651,-8.853721,-0.480388,5.748943,-7.738203,8.899280,5.739306],[4.072558,4.654022,8.512188,-1.283755,-0.307773,1.981164,8.613905],[-8.324100,6.513618,-7.459433,-8.811521,5.230948,-1.211137,5.468268],[-1.038691,-0.757455,7.935161,5.139779,5.109157,1.492912,-4.159511],[-6.648793,8.530162,7.381471,-9.889943,-3.116189,-9.409540,-5.195402],[-5.072283,2.894687,-9.069680,-9.303845,1.397908,-5.692051,-3.470000],[3.596000,6.857813,-0.323285,-3.399954,0.282072,9.295469,3.715186],[2.860340,-1.655822,3.567125,-4.939993,9.675016,5.564244,-7.718434],[7.888287,4.421048,6.182415,-7.834832,-3.678075,-5.662398,0.354979],[0.770573,3.649390,-2.224935,-2.805372,1.105063,3.390400,-7.496212],[-5.129673,5.662167,7.094453,-5.469333,9.927199,-8.763462,9.826060]],[[2.800737,0.652892,4.491099,1.543498,-5.092064,-9.072693,-3.996956],[2.305832,-3.159239,4.915878,7.637022,2.026565,-4.806221,8.175395],[-0.020617,9.206236,4.234833,-8.068550,1.756208,2.337589,-3.621738],[-1.541287,3.071467,7.048288,8.270552,4.652387,9.919790,-8.530957],[8.580053,-7.548153,-7.797506,1.387901,-3.505296,-4.417523,2.630338],[-2.604124,8.150162,-0.884430,-4.638121,5.204437,5.950092,-0.488976],[1.731149,-5.719224,-4.316995,-8.879100,-3.608132,0.751203,3.965051],[-5.755250,9.552050,-2.958682,5.778776,7.043870,-3.628466,7.036621],[-0.836757,-5.603992,-1.980520,-4.853688,-2.691092,1.089907,5.590284],[1.417464,7.103390,0.873728,-4.961796,3.065901,2.557410,0.939648],[4.751226,2.024118,5.960522,9.629881,-7.945469,-7.176807,-9.589161],[4.110707,-5.334344,0.233986,-2.643735,-4.028901,-1.420376,0.856680],[5.635114,-7.229901,2.222493,-3.570558,1.413015,4.725677,2.440859],[-2.830954,2.467098,1.182625,2.382870,2.604047,-4.470052,-2.008677]],[[-5.355804,-2.762031,8.899629,-9.704838,-4.142787,6.121871,3.237312],[8.486388,-9.597106,-3.551691,7.087391,-5.334738,-6.167281,-4.726980],[6.867785,-5.134326,-1.865504,3.152053,6.244973,3.923671,-9.026487],[9.691220,7.599973,5.227572,7.926233,0.675914,8.147250,8.815330],[-4.051170,-5.056294,-5.593999,3.705438,5.257051,-2.869943,-3.096406],[-7.967493,-1.755772,-2.974813,-1.401839,-9.904248,-9.514645,-1.179436],[9.877887,1.918328,-7.806566,4.612560,-1.866544,7.957763,-8.622457],[-4.772093,6.063896,4.275631,9.581576,1.665427,6.757748,6.460327],[-4.369993,-8.317927,8.881620,3.140485,7.968538,-0.449900,7.265409],[-1.802765,-0.948701,-3.468699,7.742507,7.215455,-5.271558,3.268439],[-6.758831,6.740945,-9.912991,-1.474828,4.665851,7.851933,3.268775],[6.429451,-0.077850,-2.253326,-5.154053,-5.269438,-0.928652,-3.519574],[3.100715,5.956707,-4.398109,-5.444902,-2.153076,-3.202025,-9.863372],[-6.622767,-3.577145,-4.779185,6.727479,2.737600,6.900395,-5.575257]],[[8.423778,-8.929916,-7.084567,6.353811,-2.271312,2.020091,-0.703585],[1.538902,-6.965487,-9.262608,6.144784,7.252035,2.903702,-0.619527],[-0.568880,8.120068,-8.209642,-7.895633,2.996113,1.830876,6.007742],[-4.081229,7.564545,-5.460020,0.035283,-5.733531,8.030511,-2.915168],[-0.791590,-3.753649,2.027971,-0.602319,6.470916,-1.349789,-0.884991],[6.559406,-4.787936,-9.030193,9.163588,5.123703,2.745689,6.371561],[6.952082,-6.888018,-9.167319,7.199978,-2.301661,0.137922,-5.707628],[-6.043528,-6.677446,3.068129,7.148354,-5.321152,-9.062898,9.125290],[9.801213,4.846552,-3.126740,-8.419646,-5.973823,-4.812223,1.872432],[-0.029460,1.911665,6.647197,-4.030063,0.632140,-4.760111,-9.462120],[2.984649,-8.773493,-5.122000,-4.402389,2.290360,-3.022479,-8.752927],[-2.024084,-1.375265,7.132909,1.017803,6.615541,7.487015,3.201604],[-2.074160,8.065126,-6.394152,-0.117353,2.385771,4.066860,4.424316],[-9.812008,8.721511,-5.574450,7.681675,3.543728,-8.347736,8.843412]],[[1.238969,0.613887,-0.274953,-0.844682,-2.652322,-7.248313,3.909784],[5.816653,5.318872,-5.566429,-2.951009,-2.917570,-9.054954,0.792770],[9.522156,4.762271,7.977600,-5.831894,7.877245,-7.470242,-1.753180],[3.001916,6.440185,-9.747436,-6.115661,7.753055,8.106567,-2.745153],[8.362891,-7.661938,-1.546788,-0.881893,-9.279196,-4.757189,3.049472],[-9.073518,8.739615,7.677878,-2.613545,9.254379,-9.768775,9.478642],[-6.510139,6.721178,7.781716,-5.718554,0.794276,-5.220222,-2.796477],[1.856381,7.345053,7.025812,1.883737,1.183820,-7.388088,-8.441197],[3.939438,1.083714,-0.891658,-6.215676,-5.189325,1.377176,9.306761],[-5.740481,-0.586147,8.495658,2.192327,-1.294294,8.071718,-9.194691],[-4.806474,-9.044541,-1.781355,-9.566041,-3.036573,2.015646,4.946278],[0.547869,-9.474794,-4.685191,5.407317,-1.747959,-8.620083,-4.387351],[7.040320,-1.186090,0.484177,9.644022,-8.687257,-9.029661,-3.058309],[2.654753,4.116290,-3.561708,-4.121880,-0.779318,-9.151053,-9.145826]],[[-2.289205,-8.874555,3.796273,4.492295,1.385240,3.588691,-1.898241],[6.402427,5.850212,0.533448,2.982152,-2.016858,-8.289251,4.222712],[3.212173,-0.721934,-0.119848,1.464356,3.224144,0.222276,-6.229020],[-9.847445,-9.672001,2.914171,-7.153768,-7.290631,5.619429,-7.082017],[-0.185780,-5.882865,5.772651,9.586516,-3.007599,-2.362110,7.705242],[-0.330815,-9.337898,8.754312,-0.889019,-1.589786,7.604395,-2.181606],[0.878097,-1.618950,6.102617,9.287103,1.792579,-3.414730,-3.297965],[9.505274,-3.786414,4.114746,-5.242374,-1.882572,8.839860,-1.989700],[6.094557,5.880581,6.175071,-2.899583,9.359141,3.986738,-5.720566],[-6.103583,-8.947798,9.041315,5.136079,0.673263,6.476495,6.508173],[-2.692945,3.633473,-2.309797,-6.753249,-6.878572,-4.598757,3.486736],[6.554909,-6.594869,-5.377509,6.938134,3.153331,-6.875641,4.018595],[-3.756001,-4.379318,-1.704313,0.661160,8.889582,-5.981768,-5.041922],[5.904297,-4.055612,-1.082979,-5.253136,-5.484919,-5.903848,-4.002527]],[[-2.749146,-6.704017,-4.134956,-1.888758,-8.178132,-7.523450,7.426738],[3.195798,8.168303,6.010342,7.967841,-8.884761,-2.093949,-4.663669],[6.358123,4.960091,-3.246724,-0.086173,1.895792,4.127484,-9.477099],[7.329386,-3.251202,-9.832822,0.361947,8.533093,7.947302,-0.263534],[-7.888823,-1.109514,2.094594,-8.473950,1.072399,7.350305,8.941141],[-9.233531,-8.599575,5.189538,-2.586061,-1.622365,-7.236725,0.954560],[-0.788656,2.048527,-6.041105,-5.458037,-0.027724,2.557983,5.565433],[-8.521903,9.055331,6.213853,-9.471125,-1.739403,-9.733531,-9.739628],[-6.909123,-1.022773,4.130756,-5.589261,8.562576,4.384964,6.131934],[5.637446,3.099995,3.976029,-7.250752,-8.303638,0.730217,3.136647],[-1.956084,-5.970323,3.628366,9.477772,0.057046,-7.415285,-4.648454],[-9.424381,-9.217832,-9.679659,5.809449,-4.663676,-3.867020,-6.098301],[2.380063,1.124787,5.334698,8.901542,-9.969236,5.080644,-1.100760],[-7.841691,8.321738,-9.812737,-1.684535,-7.157538,-5.652918,3.542230]],[[1.259597,-7.675790,-4.650642,-2.721527,-8.513805,-5.494943,-3.566403],[-6.895353,-1.149126,2.694134,9.692127,2.626676,9.916220,2.011886],[4.469210,-6.454712,-8.506783,4.088387,5.978595,-9.026899,1.112126],[-3.448648,-8.928271,-6.145586,-1.489203,-3.973273,6.982473,7.465129],[2.254824,-7.242212,-3.921601,-7.021503,-2.069464,4.391815,7.334625],[0.998970,-5.895799,9.617113,-8.555928,0.050296,8.558087,-1.459650],[-2.840739,4.239392,-7.019353,-4.069590,7.674929,3.594082,-5.461352],[7.850250,-6.412601,1.118679,-7.869130,8.049666,-0.315702,7.676523],[-0.892507,7.454999,-8.316425,0.833389,-9.666100,1.858105,-4.008529],[5.595505,6.333874,-0.518975,6.683352,-3.204819,-5.202512,-8.698895],[9.862603,3.490313,3.999485,-3.537747,5.914701,-2.080844,7.181419],[4.521926,-0.568546,-1.100090,1.704509,4.338333,-5.977937,4.589316],[9.546126,-4.602275,4.767924,0.274006,-1.017790,-7.459948,1.097094],[1.545469,-0.798594,-1.388926,-9.492773,-3.661653,1.188547,-4.582505]],[[-1.876475,3.283512,-8.304833,-2.839437,3.173552,-2.459114,5.462118],[8.556385,-9.701825,6.572568,-7.271456,9.037918,-9.824631,-3.852147],[-3.462703,-6.648593,-2.951740,-8.917509,2.480041,9.618902,-1.289225],[-3.885984,-4.115973,-9.744289,-9.728188,-3.057071,6.306386,3.363469],[5.874083,-1.197029,2.203986,-0.533351,-6.309111,-0.410624,5.430007],[-3.597062,1.109036,1.362033,-0.341569,-7.406416,9.688922,0.613723],[2.272194,4.929242,2.345013,-6.149113,-7.115260,-1.848281,7.805702],[-4.809964,-7.837519,6.106805,5.610224,-3.048804,-7.952667,-0.431120],[9.328052,4.597146,4.965002,6.350894,-1.084773,3.420395,4.260435],[2.237287,-1.804263,2.470957,-0.390956,-2.770482,-0.546298,2.162321],[-3.980939,-5.121371,-1.057204,-4.141709,-3.006705,-8.204386,6.002999],[9.354014,9.084814,6.677289,-7.834125,2.676754,1.038607,-4.737009],[-2.390197,5.898147,-3.031914,-3.833989,7.316898,-1.740823,-9.281067],[-8.732796,-4.264635,-3.516808,-0.142711,0.059187,2.656550,5.290799]],[[-8.630458,-6.738406,8.468251,2.523203,5.001184,-0.780584,-7.869304],[4.732908,6.578158,-3.204675,8.921509,-8.703958,3.891382,8.813533],[-6.412992,5.860980,-7.399404,5.740012,0.812911,9.437435,-8.800106],[6.026673,-7.081850,1.219788,-1.822076,6.936622,7.023060,7.793390],[9.855385,6.321078,6.328179,2.468367,-8.659081,-7.166358,8.492725],[-6.120917,6.628697,1.673919,-6.532938,-1.580615,-3.254475,0.641527],[7.047729,-4.272683,9.580395,-7.134363,9.603167,-0.825793,-7.476007],[7.812899,1.617408,9.553169,-8.716668,-2.241798,4.546185,3.054922],[5.517377,9.016007,-0.897249,9.208469,0.355344,-3.207073,6.144958],[-7.599603,7.717898,-3.571793,-8.296898,-4.421412,-6.946875,6.550788],[4.676809,7.308454,1.967890,4.088455,8.347081,3.316052,-5.125042],[1.749903,4.952526,7.392664,4.375229,1.777946,5.279871,-3.056647],[-8.209555,3.444571,2.077686,-4.271346,-7.065261,-8.870003,0.683181],[-3.784839,9.086455,6.831069,-0.194497,-6.055613,-4.578137,0.605139]],[[6.806507,4.007200,4.398215,2.586451,-7.975079,-1.106433,4.731561],[-9.713121,-0.174977,-5.830989,-3.886871,-4.995000,-7.884620,-4.496136],[-1.775685,-1.977766,-7.699902,-0.658171,-0.237544,-2.301989,3.416426],[2.392279,4.622385,5.528625,1.381015,8.786546,-2.720117,-0.722443],[-1.032110,3.555782,-2.525734,-9.264974,-9.878432,-8.277808,-3.521904],[6.012166,2.509955,-8.062117,-6.673072,8.470717,7.966319,9.949083],[-0.172738,-5.905612,-3.186988,-2.791456,4.540186,0.146960,9.339671],[6.193304,-3.927306,6.148713,1.019248,-5.003568,-9.428529,4.259718],[0.130401,6.400313,-1.998391,-3.368318,1.928679,1.031394,-9.822620],[-6.937589,6.815956,7.798042,-1.441569,7.625647,4.467019,4.520374],[5.004548,7.797415,3.864585,5.286538,0.780298,0.491280,-5.717089],[2.888075,1.581681,-9.178940,6.572505,0.530069,-7.272466,-0.628675],[-9.566701,5.069335,-5.651283,-0.526833,0.432110,-9.498719,-6.323142],[-5.449053,-9.810571,1.233619,4.372128,-0.209883,5.967577,3.363598]]], dtype = "float64")#candidate|2326|(11, 14, 7)|const|float64
uop_2327 = relay.sinh(const_2326.astype('float64')) # shape=(11, 14, 7)
output = uop_2327
output2 = uop_2327
func_2337 = relay.Function([], output)
mod['func_2337'] = func_2337
mod = relay.transform.InferType()(mod)
output = func_2337()
func_2338 = relay.Function([], output)
mutated_mod['func_2338'] = func_2338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2341 = relay.var("var_2341", dtype = "float64", shape = (2, 4, 3))#candidate|2341|(2, 4, 3)|var|float64
uop_2342 = relay.rsqrt(var_2341.astype('float64')) # shape=(2, 4, 3)
func_479_call = mod.get_global_var('func_479')
func_483_call = mutated_mod.get_global_var('func_483')
const_2354 = relay.const([1,-6,-6,1,6,10,-10,-8,4,-4,-3,-7,-1,-5,4,-2,7,9,10,3,1,5,8,10,5,-9,8,-9,10,7,-1,10,-10,3,-9,6,-10,1,-6,10,-7,-2,-6,4,-2,-1,-4,2,7,6,2,6,-2,-9,-10,-10,7,-9,-10,8,-6,6,9,-3,-3,-2,8,-6,5,-1,-4,1,2,6,-5,-7,-3,-10,-2,9,-10,2,-7,2,-2,8,-3,-9,8,-8,-10,-3,-7,5,6,5,-5,5,5], dtype = "int64")#candidate|2354|(99,)|const|int64
const_2355 = relay.const([-8,5,1,-8,-9,-4,-1,-2,-2,8,-3,3,1,-1,5,3,10,-5,-2,-3,-9,-10,6,9,-10,-7,9,2,-9,-6,10,6,-7,-4,5,-2,4,3,5,-9,8,-10,7,-8,-7,-9,-2,-1,-9,10,10,-6,-5,4,2,6,1,-8,-10,-5,9,-7,10,-9,-3,-10,-10,-7,9,4,-7,3,6,6,-6,-4,4,7,9,2,-5,-5,1,10,5,3,-4,-10,6,10,-7,-8,-8,-5,-10,-1,1,2,9,-4,-7,6,1,-4,2,-10,8,9,2,-3,3,9,-9,6,2,2,-6,1,-6,4,-8,-6,2,-2,-9,7,10,-6,7,-9,-3,-8,-1,4,-3,5,3,-8,5,9,5,-8,2,-6,-5,5,7,-6,-2,6,-9,5,-2,-6,10,-3,-1,-2,2,-9,-4,-6,8,9,-2,-3,8,4,-10,-7,8,-9,-8,10,-10,8,5,-3,7,3,9,-2,-8,6,-1,-10,2,7,-10,-9,-8,-4,-2,8,-1,1,-10,8,3,4,7,-2,3,9,8,4,7,-1,-5,10,-1,-5,-6,-7,-8,-3,-6,4,-6,-5,-10,-2,-6,-6,1,6,-5,-1,5,9,2,8,9,-9,4,-9,2,-9,-4,7,9,7,6,6,-9,-5,-9,7,5,-2,10,3,-3,-8,7,4,3,-1,-1,-2,-4,-9,2,-2,4,7,-5,5,3,9,-1,4,-6,2,-4,8,-1,-2,7,-1,-7,-6,-7,4,-4,-7,-6,8,-10,9,-5,1,-6,-9,8,-5,-6,-1,1,4,8,10,-6,6,-9,7,4,9,2,4,-8,7,7,9,-3,3,4,-7,-4,-6,10,6,-1,3,-3,-5,5,4,-2,-1,-6,6,10,2,-8,8,10,-1,8,-8,2,-9,7,-10,6,4,6,4,5,3,-4,1,-4,7,-8,-3,10,7,7,6,7,-7,-2,-2,-7,-10,5,-5,4,8,-8,-10,5,6,5,7,-4,8,5,2,-4,-3,4,7,-1,-9,8,-9,-9,6,9,-7,-6,-10,6,3,6,10,-3,7,-3,-4,8,-5,8,-10,-3,-9,-3,-9,3,-8,7,9,4,-3,2,8,-1,-6,4,-8,-4,-5,-8,-5,-8,7,2,5,-2,3,-8,-6,5,7,-10,6,2,3,8,10,-3,-1,-1,-3,7,-8,8,-3,8,4,-7,-5,4,10,8,-9,-4,-7,9,1,5,-10,-5,-8,4,-2,2,1,-5,-9,-10,-5,-1,1,-2,7,-2,-2,1,-10,2,8,-9,-2,-10,9,-1,4,1,-5,8,2,-10], dtype = "int64")#candidate|2355|(495,)|const|int64
call_2353 = relay.TupleGetItem(func_479_call(relay.reshape(const_2354.astype('int64'), [1, 9, 11]), relay.reshape(const_2355.astype('int64'), [5, 9, 11]), ), 0)
call_2356 = relay.TupleGetItem(func_483_call(relay.reshape(const_2354.astype('int64'), [1, 9, 11]), relay.reshape(const_2355.astype('int64'), [5, 9, 11]), ), 0)
var_2395 = relay.var("var_2395", dtype = "float64", shape = (2, 4, 3))#candidate|2395|(2, 4, 3)|var|float64
bop_2396 = relay.power(uop_2342.astype('float32'), relay.reshape(var_2395.astype('float32'), relay.shape_of(uop_2342))) # shape=(2, 4, 3)
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
const_2402 = relay.const([-5.048017,4.391817,7.743956,-3.418767,-1.073412,-1.270808,1.184849,6.520005,9.446393,0.813599,-8.453266,9.584285,-2.570651,-4.806201,2.389634,-9.951704,-9.736451,2.855618,5.340040,1.068208,4.339852,1.255696,-3.624107,-6.172590,-8.061719,9.413478,9.377582,2.118061,-5.198328,-8.012171,-3.154591,3.638737,-8.099918,-9.979447,4.457021,8.794872,3.569745,6.051125,7.770410,2.284890,-7.095936,8.493658,-2.405611,8.365480,-1.498926,-8.792180,-5.661967,7.733100,1.317475,-1.844513,4.881746,6.470374,-2.595347,-0.824970,0.911245,-1.499047,-9.515078,2.890382,-7.661177,9.220500,-4.155541,4.663927,-9.251753,3.570082,-3.360847,-9.772706,6.622271,6.468926,-2.563481,-3.620922,9.331524,7.820365,-2.935739,-7.144635,4.282278,2.685170,-5.037407,-1.396884,9.188570,-0.801639,3.555581,-1.744477,-8.893601,2.025148,5.850984,-1.380432,-1.285718,1.965023,0.224301,9.913236,7.497035,-9.161282,-9.187073,-7.356229,7.436447,4.228135,4.477638,1.742210,7.089963,0.106513,-9.404208,-8.499253,8.944107,9.934443,6.922921,-3.655039,2.114199,-9.077318,8.185490,-4.934291,3.684261,-5.015969,0.144961,1.183769,-8.935380,8.785694,-9.883478,1.263378,8.623239,-5.394872,1.598425,-5.696941,-5.885027,-5.160823,5.255734,-4.577023,5.161164,-9.095186,-2.703119,6.180820,-4.956082,-1.738006,-8.869633,-8.865480,-0.610844,5.534138,6.322033,3.867654,-6.549684,-9.539778,-0.883692,1.259304,9.946559,-5.080468,8.687546,-8.281736,-5.706897,-5.123372,-2.059752,4.380867,-1.105624,-8.577230,-6.194238,4.606995,-0.721514,-4.687658,-7.402634,-1.512373,5.071264,2.192621,-5.591658,-6.205432,-8.951607,-1.917998,-7.384078,-2.100649,-5.429978,-2.640316,-1.965264,9.206099,2.727866,0.030333,4.483957,6.596368,-4.482853,6.117531,-0.218484,4.410506,8.208196,2.670267,3.180394,-6.354553,1.292010,-5.336853,-1.086516,-7.140239,-3.209400,5.794168,5.970656,-0.830679,9.045450,-2.856445,-5.091235,1.014294,0.650415,2.904225,-7.679565,-0.717214,-8.317496,9.820188,1.308648,3.132680,3.190434,0.078240,9.309936,-1.780503,-6.813704,2.295692,-1.893188,-8.256856,4.308753,8.157700,1.856683,3.502540,-6.864790,-7.519608,-9.779816,4.247306,-4.469405,-4.046452,9.809821,-1.310266,-0.863573,-4.657424,-1.973622,-3.904239,-2.535501,2.531425,-4.405896,0.085940,0.683471,-2.695107,1.333755,8.955237,-5.700964,-3.323275,-8.816562,1.049464,-9.262404,-3.848894,-6.354170,-2.615659,-2.356863,-3.239531,7.959237,5.454569,4.188486,-1.177533,-8.473875,-6.967970,-2.132078,-3.265695,-1.671431,0.473329,1.681026,4.997657,-1.507127,-0.411512,-8.485951,6.624908,-2.511287,-7.704329,-1.525227,3.561865,7.088361,-7.561295,-7.172630,-6.179292,-4.943213,6.418873,7.531773,-5.144203,-6.797861,-7.347672,5.556721,-1.395731,2.614921,-0.202858,-4.459058,-5.080853,1.326835,1.247575,1.693175,-2.924839,5.460057,0.165684,4.203061,-5.498915,-9.188888,-3.556295,9.445621,4.385359,8.519580,-9.180486,8.816742,5.387238,9.302883,-4.864815,4.416321,4.078071,-8.087433,1.561598,-8.858516,-9.773195,1.022992,-2.912554,6.458318,9.915684,8.611132,-1.320607,-7.140637,-6.069853,-5.589922,-6.073693,8.971177,-7.721768,-6.902008,6.297121,-7.424907,6.116110,-5.430080,-5.623526,1.862111,2.346921,7.187710,-7.796312,9.415827,-2.306339,7.544499,0.563433,-0.560620,8.144469,-3.267487,0.259409,-6.325932,-7.922143,-1.749504,-5.729032,-5.288614,8.301319,-2.982372,3.756959,-9.809003,0.789609,-2.245654,-5.493555,5.462649,5.297896,6.554177,-9.088840,3.403733,-9.337287,6.848601,8.442580,-5.908490,4.004572,-9.047925,0.232274,-4.511553,4.472457,1.773620,8.210504,8.122785,-3.218505,0.908664,-0.189881,4.443004,3.609904,3.560623,-1.701773,1.976079,-4.264076,-7.246569,-7.407341,6.161584,7.334375,0.388539,0.662507,2.948776,2.720702,-2.323497,1.335543,0.896479,-9.265935,-5.820127,-4.430652,-8.684717,6.662321,-4.440579,-8.221294,0.317083,9.058668,-0.737572,0.813049,-6.845693,5.170864,-3.434793,1.147032,2.247794,4.980219,-8.206738,1.489448,-5.702527,-6.879299,-7.724741,-4.039069,-6.727455,-9.357137,-8.697228,3.531035,8.037436,8.655076,0.258691,7.897099,-4.580682,-5.932731,-5.408864,-9.637006,4.831956,-8.215447,8.033272,1.798298,-9.997609,-9.083735,-0.799771,7.312144,-3.512895,7.644715,5.069696,-1.933708,9.671570,5.479468,-1.978929,5.436410,-9.589774,8.563050,-9.240724,3.169067,6.558470,-8.157664,8.338726,8.001055,-5.925493,-9.836449,0.813490,-3.777563,2.088371,-4.544113,6.482739,4.597004,9.132193,5.150239,-3.355590,-4.637740,-3.567507,5.411488,7.031385,-5.550152,2.138591,9.259430,6.901154,-3.325645,9.073419,7.844872,-9.262931,-4.548910,0.863739,5.794416,1.185562,0.152861,-4.081451,6.974876,6.248772,-8.253831,-3.488798,8.625706,7.177708,2.351959,6.415617,5.551737,1.604016,6.088290,7.206821,-6.443370,9.069778,-4.527000,-2.947768,0.459946,1.327667,4.877913,9.124358,-1.874296,-8.321215,-4.024705,-5.264624,7.482181,7.662243,-7.982490,6.254369,9.143753,3.300217,9.054167,-1.884394,2.528278,-6.898723,8.800327,-4.800001,-8.665979,1.176305,-0.409373,-4.944860,-4.322508,-9.265134,-3.806060,0.953489,-6.871802,3.190809,5.400631,-5.971473,-4.915146,6.168329,4.856036,6.449281,-5.404969,-0.717305,-7.593811,-1.543563,-4.522033,4.359144,-4.279088,1.359068,0.120668,-7.467727,-0.662416,-7.063771,6.939053,-6.770510,0.698335,-2.331540,6.714334,-7.603253,0.022772,-4.899675,9.519866,-9.197459,-5.000447,3.205481,6.145842,-1.433065,-4.171077,-5.744909,-0.746118,-6.342492,-8.042313,9.145217,0.733985,3.895483,-2.667247,4.522595,0.891056,-2.106041,3.874379,-9.543344,5.967675,-6.377807,5.850301,-9.425368,7.726511,3.980015,9.443913,8.077245,-1.453540,-0.888659,-9.962928,-9.792535,6.113233,-8.198688,-3.683060,2.967789,6.788665,-6.768775,-5.483100,1.393240,4.824976,5.239756,6.613725,-8.629895,6.206644,3.110411,-7.204380,-3.636419,-6.294088,-3.095690,5.675504,-8.362588,2.491603,0.750374,4.056790,9.213562,7.727224,-6.503257,-3.449567,-0.733469,4.301177,5.237101,3.376503,0.563851,-5.301763,2.108045,-4.195731,1.846594,-4.337467,4.860803,5.986498,-7.069366,-1.569370,7.468734,4.235280,-6.297496,0.403110,-5.537523,2.982543,-5.068588,6.127508,8.799734,-0.344847,8.976513,3.191686,-7.548585,-5.742324,9.999143,3.103570,4.535786,-1.189959,5.412683,5.001453,4.872003,-6.439493,9.496902,8.103272,4.731391,7.267319,-4.391007,4.541775,7.425764,0.323959,-9.016124,1.537375,-9.337280,-7.366363,-9.352383,3.233263,-5.085010,0.426731,-6.862224,7.306031,-2.199083,-8.968589,4.074668,-2.968063,7.480006,-8.991906,-0.041817,3.062163,1.535778,6.470082,-7.442477,6.091833,-7.717295,-8.149129,7.245337,-6.113757,-2.978532,-0.007342,-6.772244,-0.439522,5.770367,-8.417021,-3.162333,-1.364922,1.066238,9.124275,-7.132434,-8.654927,-0.460373,0.980050,-8.961063,6.514672,0.489957,0.471525,-3.757585,2.690721,-8.103808,-0.226560,-8.337236,-4.258017,-3.686581,2.589474,7.518518,2.170952,-9.117114,4.405820,-6.787353,0.240761,6.186060,3.633821,-2.976763,9.358961,-1.979929,5.641954,-9.410051,-4.332670,-7.646092,9.931559,-4.742364,8.140627,-3.875755,8.929734,7.680705,-2.139275,6.527124,4.721151,-2.646250,-0.020195,-0.940405,4.805691,-1.216328,0.369545,5.054110,-8.414259,4.239457,-5.600283,-3.696984,-3.890829,-4.950870,-7.858915,-3.531657,4.871062,-5.947796,-8.022422,-4.617192,6.527059,9.947787,8.752091,-5.712817,-0.739105,2.042393,4.434094,8.106285,9.039159,-7.506316,8.166045,6.461840,6.803974,8.521880,-7.369836,-5.356935,-2.916179,-8.443025,-0.788634,8.992812,-0.242018,-0.145620,-4.244795,7.302161,9.737803,-6.821898,5.608079,-5.527484,4.189112,-6.857106,4.781890,-1.503907,-7.160068,1.839854,3.284023,-9.252268,5.552366,9.387532,-4.472053,3.577109,-5.969357,-9.583300,-0.767114,-7.949855,-0.117738,7.840803,8.346334,4.101542,5.072796,3.240296,8.899418,-6.316152,-9.635625,0.265252,8.593890,-1.602620,-9.983157,6.083870,8.609127,-1.278855,-0.395791,7.674175,3.221975,8.737398,0.978927,2.549110,-2.077307,9.154625,1.074926,6.290201,-3.670397,-9.685200,5.485153,2.564742,-0.932089,-4.024279,0.386532,-6.245664,6.556995,1.378871,-9.312473,3.699798,5.097906,8.334181,0.802156,6.507991,9.667284,-2.144210,0.053611,5.056213,-4.623528,-7.510456,-5.879587,-8.250052,-0.300849,-5.841595,7.676424,-0.741697,0.466947,2.366159,-3.463714,-4.376401,0.701262,-6.763085,-0.001490,-2.513451,-3.755395,-8.008341,9.459598,-7.087200,6.281392,6.671535,-8.512751,3.389926,0.117294,9.360818,2.834065,0.202252,-5.360510,5.814436,-4.522772,0.489438,-0.579060,0.104073,6.303769,9.283865,-8.168688,8.834868,-7.872007,-8.466552,6.845655,-5.249923,9.133582,8.766945,9.901062,-1.739846,-1.286055,-1.103457,-1.010638,7.476843,1.424964,-1.965720,0.792115,4.002340,-2.971509,2.152577,0.751495,-5.966010,-3.984968,-4.879474,-5.353244,5.518746,1.990722,5.798658,6.178489,5.495044,6.949994,-7.715155,9.647269,5.686815,-4.898942,2.179166,-5.569961,-3.257847,-8.799290,-6.954204,-2.182884,3.798496,-1.910852,7.551164,4.597523,-7.814146,-3.741249,5.100119,-0.983199,9.633806,-4.119972,-2.076056,-9.095989,6.348654,-9.266752,3.129708,0.768386,-5.516998,1.523540,3.708341,-1.741774,8.224631,-8.944547,-8.571229,1.127582,1.426064,-5.712789,-2.265815,4.229907,3.445106,-4.768776,-4.263422,-8.511949,8.069733,-8.834063,-5.354375,-7.288818,0.089470,6.550455,-0.388581,1.876797,-7.085272,3.632063,-0.441204,-6.672300,-7.478041,-2.842799,-1.318925,6.538305,-1.730007,-4.927998,-0.217747,-3.327535,7.431841,7.873790,0.795029,-7.556611,4.545966,-6.915960,-6.292795,4.529359,8.861133,5.307106,-1.666633,8.358887,-2.907218,-3.491188,8.230725,-6.717832,-7.083585,-0.238659,-5.701388,7.227587,-0.192156,4.070232,-4.329442,-0.170667,-3.390467,2.731962,-3.933534,4.811030,-5.697891,-0.274337,-6.149886,-9.392872,-8.726890,-9.608901,2.439875,-8.369448,-9.557684,-0.307678,4.584290,-3.644657,-0.420269,-8.100174,3.327237,2.261100,8.978491,8.114951,-6.583078,-7.310815,-1.508802,4.418702,-2.514327,5.703430,9.623304,8.172888,-3.123885,-8.641069,7.315552,-5.996065,-9.572147,-6.062992,0.344676,-1.923195,-5.212181,-8.479149,5.795092,-9.079738,-5.531408,-9.374135,-0.561247,-8.054358,-3.825763,6.251088,0.267023,-6.070265,-4.414167,-8.817933,-6.339794,4.411526,7.581800,6.031745,-3.180959,2.795136,6.172617,-6.657262,2.680821,5.653720,-2.575283,-1.929794,-4.039124,2.448640,6.155015,-2.490595,-6.037535,-2.415630,5.355552,5.165857,-9.446861,-1.892570,-9.446960,2.930826,8.208223,7.230331,6.023467,-2.098384,-2.822774,-9.334013,8.638061,8.300885,6.685977,5.767545,3.623650,-5.733875,4.175343,-9.066210,2.058069,-2.709629,-9.252489,-2.232361,0.411002,4.653264,7.771227,0.504178,-8.813934,-1.344902,7.522445,-0.243580,-7.406969,-3.190911,-3.248600,-6.587817,-6.024543,-5.815398,-3.096609,-5.354929,1.718314,-0.439746,-2.439454,1.032419,-0.068275,-4.118851,-7.767995,8.969569,8.722111,-6.287575,-9.375610,4.127905,2.611997,6.650521,3.963819,3.896993,1.222991,2.822238,-0.330296,-8.849609,-9.797396,-9.634128,8.296391,-3.676093,1.476372,-4.200861,3.242247,-8.474030,-7.161284,-8.634439,4.972702,-8.395267,4.583612,-8.961220,7.658752,0.874157,7.646064,-4.966058,7.677410,8.403405,0.752037,-1.571875,-5.213256,-1.050853,-5.661758,-6.808607,-2.434124,-2.286967,-7.966340,4.612911,9.800325,7.586746,-5.537679,5.254851,-1.293879,-0.263058,4.929723,-1.197492,0.730597,-7.297414,-8.848476,-6.988754,4.492326,-4.975819,7.906182,1.994693,-9.204916,-2.046957,-5.191935,-0.766963,-2.506574,1.467344,4.439984,8.558754,-9.774313,-9.258991,-1.518328,1.478267,6.462920,5.660723,-2.023095,2.380694,-8.172797,2.461898,-8.758875,6.930793,2.880153,-1.058036,7.617402,6.470417,4.015195,-1.289068,-6.033149,2.942900,9.133748,4.510288,-1.130357,7.950947,-4.367764,4.717956,-2.059139,0.267279,6.334957,3.451974,-2.706614,-1.230329,-2.745116,9.758144,9.436612,9.842894,-1.081422,-9.905023,3.204572,6.882693,-8.439561,-4.947654,8.938217,-0.128518,2.465166,7.538911,3.557564,1.718955,-8.719920,-6.722584,-8.158944,1.427275,-3.490084,6.247272,9.564435,6.947863,8.653299,-5.154413,-1.537790,-4.428777,-3.742461,3.177198,1.210175,-5.659985,2.055460,4.845283,-2.419856,-3.231158,-3.082002,-5.234082,-0.671649,-5.443897,-5.289853,3.987737,8.775516,-3.572409,4.024517,1.283533,9.344184,7.392947], dtype = "float64")#candidate|2402|(1248,)|const|float64
call_2401 = func_1381_call(relay.reshape(const_2402.astype('float64'), [16, 6, 13]))
call_2403 = func_1381_call(relay.reshape(const_2402.astype('float64'), [16, 6, 13]))
output = relay.Tuple([call_2353,const_2354,const_2355,bop_2396,call_2401,const_2402,])
output2 = relay.Tuple([call_2356,const_2354,const_2355,bop_2396,call_2403,const_2402,])
func_2405 = relay.Function([var_2341,var_2395,], output)
mod['func_2405'] = func_2405
mod = relay.transform.InferType()(mod)
var_2406 = relay.var("var_2406", dtype = "float64", shape = (2, 4, 3))#candidate|2406|(2, 4, 3)|var|float64
var_2407 = relay.var("var_2407", dtype = "float64", shape = (2, 4, 3))#candidate|2407|(2, 4, 3)|var|float64
output = func_2405(var_2406,var_2407,)
func_2408 = relay.Function([var_2406,var_2407,], output)
mutated_mod['func_2408'] = func_2408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_2496 = func_2337_call()
call_2497 = func_2337_call()
output = relay.Tuple([call_2496,])
output2 = relay.Tuple([call_2497,])
func_2503 = relay.Function([], output)
mod['func_2503'] = func_2503
mod = relay.transform.InferType()(mod)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2504 = func_2503_call()
output = call_2504
func_2505 = relay.Function([], output)
mutated_mod['func_2505'] = func_2505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_2528 = relay.TupleGetItem(func_2503_call(), 0)
call_2529 = relay.TupleGetItem(func_2505_call(), 0)
func_1607_call = mod.get_global_var('func_1607')
func_1610_call = mutated_mod.get_global_var('func_1610')
const_2536 = relay.const([-4.979579,9.887194,2.373949,-2.872378,-7.830448,-4.487165,-7.565446,8.836176,9.876484,-3.821227,1.643147,0.374939,-8.415260,-9.382888,-6.883871,-0.974554,7.028946,-2.224145,7.727100,-1.788798,1.791463,-8.754136,-5.770455,-6.510870,0.064941,0.480126,8.062161,5.825925,4.142658,6.992912,2.043775,-5.716883,4.945993,3.814735,6.851955,7.973649,-3.372653,-1.240725,0.926522,-2.015499,4.733556,2.972341,-0.337146,-0.503487,-0.811860,5.959063,9.731392,5.146262,-0.859219,-4.445355,-7.386493,-0.681313,2.276618,-9.283501,-3.153073,-1.924832,-6.140082,-8.174209,-1.005714,-0.796306,-6.486997,-7.318175,5.696709,6.660525,3.432430,2.897642,0.434571,-8.818473,-6.083209,3.191298,-6.268071,-3.245404,2.485942,1.099019,-5.442532,2.926889,-1.175225,-1.526244,0.681855,9.942193,3.865639,-1.803052,0.574952,-1.094529,3.919899,-8.224179,8.258811,-7.639350,1.809451,-8.168539,8.817617,-5.565239,4.736631,1.060315,-1.599973,7.371893,6.405132,-7.777409,3.791317,-0.092024,-4.805310,-8.489517,-5.520327,8.586059,-2.047311,8.970710,5.120142,4.976416,-8.299290,9.544656,-6.278827,5.563529,-8.194242,-4.427221,-4.828629,1.308134,6.512073,-8.666177,-0.543330,9.680615,8.229131,0.385843,-1.487380,5.865348,6.304393,-6.888460,-0.907576,-6.602459,0.425867,-0.588190,2.678960,7.490803,6.002990,-4.614246,5.015559,-3.858090,-0.605567,2.350453,7.622484,-1.000941,0.812831,-1.584894,-4.470162,-9.572091,4.440593,0.268530,-6.888304,8.985632,-3.800109,-7.837787,5.222896,-5.478824,-3.071888,-2.164139,-1.007933,-0.665771,0.238696,8.627385,6.089589,-6.477854,-1.561614,-4.709304,-3.967460,-2.838288,4.798336,-6.080318,-3.825872,8.007897,-3.251024,-3.467455,-9.460224,-4.841729,8.181355,8.967080,0.506248,0.309638,4.746556,8.313858,0.229376,-0.728177,-6.951956,9.359167,5.775479,0.310510,-9.207496,-0.324068,-6.420991,7.383180,5.191059,2.036776,-2.830791,-0.887103,-4.001920,3.836421,-6.036931,-4.091929,-9.062027,9.810639,-4.111647,4.996370,-7.198398,9.271429,-5.819910,-4.868302,9.623081,-6.458276,-9.344592,5.057916,-6.795550,-1.935178,-3.053489,2.200172,-0.168332,-9.025312,2.192764,5.223966,-6.816550,0.383634,8.576318,-7.647802,7.443752,-5.417213,8.152281,-4.921941,-3.817630,-8.145286,8.991704,3.388248,-5.336979,9.149539,6.339911,7.173574,4.679420,-5.360276,-4.344420,-1.507089,-0.140155,8.030550,-3.065700,8.013485,-8.708683,-1.178404,-1.815887,3.841936,4.931684,-8.217147,-0.775893,-0.359892,-9.136783,-1.041203,1.853247,-3.846766,-7.680624,-3.438050,8.572567,6.193763,5.667765,-8.988089,-3.416285,9.612224,-3.878829,-0.017363,1.470365,-2.911031,-0.702830,6.154605,9.553209,6.755479,1.545464,5.818865,1.790556,1.212473,-8.608788,-0.993896,6.732533,-2.253577,-4.740003,-1.922783,-5.146097,7.518054,-1.204192,-3.660699,0.786816,0.783992,5.477103,5.942864,5.782341,-8.883131,-7.869776,-4.858700,-6.925759,0.865569,-5.324668,-2.927346,3.988371,7.697507,-2.829249,9.133938,2.429748,0.915433,0.259967,7.307699,8.326988,-9.128900,5.168806,5.487041,-9.672990,-1.371487,2.450766,3.887416,-7.363052,-5.103558,-8.880561,-4.250535,-0.715189,0.911069,9.322687,-4.675661,-3.308671,-8.887067,-1.941070,3.851303,7.885705,3.014638,-1.074149,3.504409,9.926155,-3.962901,2.310374,7.660375,-1.952928,-4.517739,7.255094,-7.318735,9.015602,1.201468,-3.897727,-6.744062,-3.458142,-9.163492,-3.813978,-5.684900,9.648555,-8.546877,2.958993,-2.732844,-8.531730,2.710552,-6.641211,2.086144,7.265811,5.135832,1.601085,2.606007,8.768098,-3.341020,4.454619,4.166353,0.234994,8.371603,6.914545,-0.771772,-0.076624,1.282393,5.475287,9.361959,-7.100468,2.874003,-7.356049,3.016847,-0.280668,-8.941460,-4.200199,8.332433,6.843713,9.913805,-1.277055,-9.946024,5.119184,3.197688,-1.680941,4.645615,8.222804,-2.144553,8.908643,5.825999,0.593980,4.796107,7.015867,-6.838843,-9.226076,4.738131,6.717238,7.364391,-6.306753,-5.164767,4.609575,2.134770,-9.508720,2.505338,0.444157,6.133715,-3.685616,1.008026,1.501982,-0.615496,1.742255,5.669667,8.335259,1.247446,7.329737,-2.096674,-0.936345,-5.922769,2.479768,-4.394860,-9.108725,8.741168,3.184737,8.529387,-8.980962,-8.502519,6.140169,7.905880,-8.761406,-4.323980,-3.882647,4.333703,-4.780029,6.674959,3.277165,1.263649,7.943542,-7.364567,0.465284,-7.294137,8.132686,1.268406,-3.361042,3.657567], dtype = "float64")#candidate|2536|(440,)|const|float64
call_2535 = relay.TupleGetItem(func_1607_call(relay.reshape(const_2536.astype('float64'), [8, 5, 11])), 2)
call_2537 = relay.TupleGetItem(func_1610_call(relay.reshape(const_2536.astype('float64'), [8, 5, 11])), 2)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_2560 = func_2337_call()
call_2561 = func_2337_call()
func_2268_call = mod.get_global_var('func_2268')
func_2271_call = mutated_mod.get_global_var('func_2271')
const_2578 = relay.const([[1.549758,-2.722269,-3.236428,3.078972,7.104249,-2.967245,6.633397,1.267876,-5.886394,-3.371285,-0.325801,-7.878724,-0.614019,8.361328,-0.758792,-2.496552,5.404628,2.116391,-5.052660,4.094507,1.055210,-1.361711,9.115803,-6.186522,5.845794,4.859941,-0.420956,-4.232721,-2.552249,7.919254,-1.627580,-5.885455,9.489013,9.442781,0.411429,4.601092,-2.383086,7.056068,4.013868,-1.625665,5.221029,-4.262585,2.448991,-8.382296,3.486401,-4.252607,8.197572,8.061365,1.881861,-8.083015,-2.681424,2.626227,5.503512,-4.073814,-9.461134,7.240287,2.013536,-8.422440,6.800157,-6.420986,-9.768282,-8.557514,2.169747,-9.088282,-4.903972,9.964849,-3.013659,6.798042,-6.197053,8.791863,-5.889037,-1.653724],[-8.311153,2.486178,0.530041,-6.513634,-3.903886,-7.915164,4.955680,-5.702925,1.573586,-3.483746,8.616586,-7.036289,9.337311,-4.369728,-0.046870,2.955950,8.365237,-0.101073,-0.955058,0.528356,4.858008,5.817753,-1.936161,-8.550806,1.459738,-3.607322,2.012103,-3.172537,-8.038492,-1.264240,8.003536,7.420112,-8.746014,-7.535160,8.247693,-7.407520,7.319746,8.775476,1.465688,9.991754,-8.616244,9.624409,-7.444640,-7.527604,5.797946,-9.182917,0.025934,6.696319,2.392280,-6.287781,2.486006,-4.216960,-4.869960,0.892894,1.809751,7.972022,-3.429768,7.586168,-6.215862,5.404437,3.865349,8.352010,4.638810,-9.457524,-9.610566,9.720766,9.361042,-0.361377,3.265223,-4.270406,-7.827679,-4.925501]], dtype = "float32")#candidate|2578|(2, 72)|const|float32
call_2577 = relay.TupleGetItem(func_2268_call(relay.reshape(const_2578.astype('float32'), [9, 16, 1])), 0)
call_2579 = relay.TupleGetItem(func_2271_call(relay.reshape(const_2578.astype('float32'), [9, 16, 1])), 0)
uop_2593 = relay.sqrt(call_2577.astype('float64')) # shape=(9, 16, 1)
uop_2595 = relay.sqrt(call_2579.astype('float64')) # shape=(9, 16, 1)
bop_2604 = relay.left_shift(uop_2593.astype('uint8'), call_2535.astype('uint8')) # shape=(9, 16, 1248)
bop_2607 = relay.left_shift(uop_2595.astype('uint8'), call_2537.astype('uint8')) # shape=(9, 16, 1248)
output = relay.Tuple([call_2528,const_2536,call_2560,const_2578,bop_2604,])
output2 = relay.Tuple([call_2529,const_2536,call_2561,const_2578,bop_2607,])
func_2613 = relay.Function([], output)
mod['func_2613'] = func_2613
mod = relay.transform.InferType()(mod)
output = func_2613()
func_2614 = relay.Function([], output)
mutated_mod['func_2614'] = func_2614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2613_call = mod.get_global_var('func_2613')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_2683 = relay.TupleGetItem(func_2613_call(), 2)
call_2684 = relay.TupleGetItem(func_2614_call(), 2)
output = call_2683
output2 = call_2684
func_2685 = relay.Function([], output)
mod['func_2685'] = func_2685
mod = relay.transform.InferType()(mod)
output = func_2685()
func_2686 = relay.Function([], output)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2613_call = mod.get_global_var('func_2613')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_2696 = relay.TupleGetItem(func_2613_call(), 0)
call_2697 = relay.TupleGetItem(func_2614_call(), 0)
func_479_call = mod.get_global_var('func_479')
func_483_call = mutated_mod.get_global_var('func_483')
const_2701 = relay.const([[9,-7,3,-3,-9,-2,3,1,1],[-6,1,-8,-6,-9,-8,3,4,-6],[-10,-10,5,9,8,-9,-8,-8,2],[5,10,-8,4,8,1,-7,-4,-1],[8,8,-8,5,-1,-4,8,-10,5],[9,-9,-9,10,3,-2,-2,2,8],[-6,-7,5,1,-5,6,-10,1,-1],[-2,-8,-6,7,3,-9,-3,-4,-3],[6,-4,6,10,4,-7,-2,9,-4],[-10,-2,-2,4,5,8,8,-1,-4],[4,-3,3,-5,-9,-5,-9,3,8]], dtype = "int64")#candidate|2701|(11, 9)|const|int64
var_2702 = relay.var("var_2702", dtype = "int64", shape = (495,))#candidate|2702|(495,)|var|int64
call_2700 = relay.TupleGetItem(func_479_call(relay.reshape(const_2701.astype('int64'), [1, 9, 11]), relay.reshape(var_2702.astype('int64'), [5, 9, 11]), ), 0)
call_2703 = relay.TupleGetItem(func_483_call(relay.reshape(const_2701.astype('int64'), [1, 9, 11]), relay.reshape(var_2702.astype('int64'), [5, 9, 11]), ), 0)
output = relay.Tuple([call_2696,call_2700,const_2701,var_2702,])
output2 = relay.Tuple([call_2697,call_2703,const_2701,var_2702,])
func_2709 = relay.Function([var_2702,], output)
mod['func_2709'] = func_2709
mod = relay.transform.InferType()(mod)
mutated_mod['func_2709'] = func_2709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2710 = relay.var("var_2710", dtype = "int64", shape = (495,))#candidate|2710|(495,)|var|int64
func_2709_call = mutated_mod.get_global_var('func_2709')
call_2711 = func_2709_call(var_2710)
output = call_2711
func_2712 = relay.Function([var_2710], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_2823 = relay.TupleGetItem(func_2503_call(), 0)
call_2824 = relay.TupleGetItem(func_2505_call(), 0)
output = relay.Tuple([call_2823,])
output2 = relay.Tuple([call_2824,])
func_2847 = relay.Function([], output)
mod['func_2847'] = func_2847
mod = relay.transform.InferType()(mod)
mutated_mod['func_2847'] = func_2847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2847_call = mutated_mod.get_global_var('func_2847')
call_2848 = func_2847_call()
output = call_2848
func_2849 = relay.Function([], output)
mutated_mod['func_2849'] = func_2849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_2866 = relay.TupleGetItem(func_2503_call(), 0)
call_2867 = relay.TupleGetItem(func_2505_call(), 0)
func_1362_call = mod.get_global_var('func_1362')
func_1365_call = mutated_mod.get_global_var('func_1365')
const_2869 = relay.const([-6.442602,8.282067,-3.435965,0.738220,7.570204,-6.545868,1.388861,6.041272,-0.945951,0.100893,1.030234,7.811149,-6.002732,9.858595,-7.866634,-7.978796,7.088628,0.056326,5.200073,7.324567,-7.885344,-9.520148,-8.561080,-8.913067,-0.140429,-8.433803,-1.138197,-3.919324,9.728535,-2.265304,7.577908,9.500815,-6.792186,7.924456,2.479733,2.085943,-2.586920,-5.274358,9.126132,-7.518596,-3.471755,2.911898,-2.101928,-7.161334,-8.977954,-1.379506,0.675452,-8.764719,-0.629001,-0.663366,-4.142296,6.314020,1.652521,-3.911765,5.712279,-3.922190,2.855896,-0.657530,6.676899,-5.705615,1.881905,-1.927989,-4.415722,0.167445,-7.864380,-7.677851,1.043132,9.117215,5.252847,6.315109,-9.603839,1.713814,8.372854,-1.635164,-6.608057,-0.697465,3.989895,-8.529320,7.934151,-2.342134,4.163678,5.604140,-7.708160,-4.883612,-7.085274,-3.771030,6.059838,-3.652307,3.960942,-4.342933,7.450379,-0.222643,0.472546,-9.483020,-0.012604,-4.659620,-8.211392,-8.856578,-2.931817,-2.884863,-9.758870,-8.559197,-2.441387,-0.187163,4.933628,3.132914,-4.727059,0.218520,8.752461,-2.062797,-7.887049,7.059437,-7.695240,9.057927,-4.548817,1.693316,9.883135,4.627992,1.173098,8.386706,-9.855157,5.748280,-5.536399,-2.938377,1.039467,8.826211,1.674732,-8.192833,-5.197686,-4.929723,1.689295,7.300899,7.386077,0.609786,1.085145,6.393786,9.082204,-7.620954,1.168738,0.681805,4.204242,-2.544812,-3.045795,1.211869,7.548597,4.169209,6.328573,2.605454,2.060288,0.297729,2.805271,-3.127634,-3.498472,3.786127,3.975012,-3.878670,1.370574,4.828143,9.461620,7.710704,1.955125,1.080518,4.740431,2.798963,0.792568,1.972735,-7.154839,-2.073713,-6.469117,-1.684444,-2.964554,2.528501,-7.169961,6.404742,5.128885,-2.545009,-3.426084,4.482959,-1.031485,-5.590829,-5.413318,-8.443378,-2.890798,3.794600,-5.675923,-0.086638,-4.602865,8.791088,3.685442,-7.960008,9.242413,7.279625,-7.767998,1.699818,5.567430,9.876339,-1.273040,-5.158427,-5.647237,3.909625,-0.512225,7.424959,6.695544,1.555306,-0.506190,2.710109,-6.054138,4.668623,-1.813672,3.413699,-3.038497,1.797052,-8.726901,7.348291,0.452681,-8.858821,1.012331,-0.633361,-7.257378,3.203038,2.087982,-7.725738,7.464965,-2.560959], dtype = "float32")#candidate|2869|(224,)|const|float32
call_2868 = relay.TupleGetItem(func_1362_call(relay.reshape(const_2869.astype('float32'), [14, 1, 16])), 1)
call_2870 = relay.TupleGetItem(func_1365_call(relay.reshape(const_2869.astype('float32'), [14, 1, 16])), 1)
output = relay.Tuple([call_2866,call_2868,const_2869,])
output2 = relay.Tuple([call_2867,call_2870,const_2869,])
func_2878 = relay.Function([], output)
mod['func_2878'] = func_2878
mod = relay.transform.InferType()(mod)
output = func_2878()
func_2879 = relay.Function([], output)
mutated_mod['func_2879'] = func_2879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2893 = relay.var("var_2893", dtype = "int8", shape = (12, 11, 11))#candidate|2893|(12, 11, 11)|var|int8
var_2894 = relay.var("var_2894", dtype = "int8", shape = (12, 11, 11))#candidate|2894|(12, 11, 11)|var|int8
bop_2895 = relay.less_equal(var_2893.astype('bool'), relay.reshape(var_2894.astype('bool'), relay.shape_of(var_2893))) # shape=(12, 11, 11)
output = bop_2895
output2 = bop_2895
func_2902 = relay.Function([var_2893,var_2894,], output)
mod['func_2902'] = func_2902
mod = relay.transform.InferType()(mod)
var_2903 = relay.var("var_2903", dtype = "int8", shape = (12, 11, 11))#candidate|2903|(12, 11, 11)|var|int8
var_2904 = relay.var("var_2904", dtype = "int8", shape = (12, 11, 11))#candidate|2904|(12, 11, 11)|var|int8
output = func_2902(var_2903,var_2904,)
func_2905 = relay.Function([var_2903,var_2904,], output)
mutated_mod['func_2905'] = func_2905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2978 = relay.var("var_2978", dtype = "uint16", shape = ())#candidate|2978|()|var|uint16
var_2979 = relay.var("var_2979", dtype = "uint16", shape = (15, 4, 14))#candidate|2979|(15, 4, 14)|var|uint16
bop_2980 = relay.logical_xor(var_2978.astype('uint16'), var_2979.astype('uint16')) # shape=(15, 4, 14)
func_2405_call = mod.get_global_var('func_2405')
func_2408_call = mutated_mod.get_global_var('func_2408')
var_2988 = relay.var("var_2988", dtype = "float64", shape = (12, 2))#candidate|2988|(12, 2)|var|float64
call_2987 = relay.TupleGetItem(func_2405_call(relay.reshape(var_2988.astype('float64'), [2, 4, 3]), relay.reshape(var_2988.astype('float64'), [2, 4, 3]), ), 5)
call_2989 = relay.TupleGetItem(func_2408_call(relay.reshape(var_2988.astype('float64'), [2, 4, 3]), relay.reshape(var_2988.astype('float64'), [2, 4, 3]), ), 5)
output = relay.Tuple([bop_2980,call_2987,var_2988,])
output2 = relay.Tuple([bop_2980,call_2989,var_2988,])
func_2993 = relay.Function([var_2978,var_2979,var_2988,], output)
mod['func_2993'] = func_2993
mod = relay.transform.InferType()(mod)
var_2994 = relay.var("var_2994", dtype = "uint16", shape = ())#candidate|2994|()|var|uint16
var_2995 = relay.var("var_2995", dtype = "uint16", shape = (15, 4, 14))#candidate|2995|(15, 4, 14)|var|uint16
var_2996 = relay.var("var_2996", dtype = "float64", shape = (12, 2))#candidate|2996|(12, 2)|var|float64
output = func_2993(var_2994,var_2995,var_2996,)
func_2997 = relay.Function([var_2994,var_2995,var_2996,], output)
mutated_mod['func_2997'] = func_2997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_3008 = func_2337_call()
call_3009 = func_2337_call()
var_3020 = relay.var("var_3020", dtype = "float64", shape = (11, 14, 7))#candidate|3020|(11, 14, 7)|var|float64
bop_3021 = relay.logical_or(call_3008.astype('bool'), relay.reshape(var_3020.astype('bool'), relay.shape_of(call_3008))) # shape=(11, 14, 7)
bop_3024 = relay.logical_or(call_3009.astype('bool'), relay.reshape(var_3020.astype('bool'), relay.shape_of(call_3009))) # shape=(11, 14, 7)
func_2268_call = mod.get_global_var('func_2268')
func_2271_call = mutated_mod.get_global_var('func_2271')
const_3026 = relay.const([-4.037590,-5.894118,-0.369875,-2.981724,8.275081,-4.615740,3.534898,7.734160,0.645717,0.711713,4.943142,6.192479,-7.305890,0.921236,-5.913054,5.699252,6.942792,5.619438,-2.655720,-8.307555,-0.753580,-3.935935,1.156572,3.956859,3.408098,-4.792931,8.430685,-0.457375,1.357843,5.793800,-6.172940,0.850791,-2.027276,7.598376,-4.122335,-0.578318,-8.687852,-9.834742,-9.257690,-5.528843,-2.870140,0.789073,-0.462369,2.817845,3.313999,-9.508792,8.825470,5.572479,-0.940704,8.670688,-9.035023,-2.072861,-6.446640,-7.809903,-4.714717,-6.976317,-8.385171,-8.916707,6.648250,-8.878805,-7.825952,-3.267880,-1.308818,0.422571,-1.124722,9.861437,-9.317888,-0.179973,-1.291374,-0.078707,0.577318,2.304243,-3.366211,9.439256,-0.459630,-3.806498,-3.016404,-5.875301,8.922792,9.502449,-0.564175,-5.838014,-1.925167,8.850127,-3.609073,-4.447124,9.663233,0.824365,9.326603,8.431300,-7.823122,3.637627,2.971046,-2.523019,3.889582,-7.643178,-1.471720,2.627974,0.285920,-5.780033,-6.077263,-8.195919,-9.700758,5.192648,-5.274205,6.541946,-0.386721,3.460118,3.335546,-4.536176,2.891664,-9.505327,-8.672188,6.460380,0.405923,3.028810,-5.018222,4.213995,1.471620,-2.251170,0.047561,-4.953802,-7.672987,4.638373,0.589422,2.713461,6.758608,2.229300,1.095572,7.185895,-0.272348,-9.021064,-9.207803,2.063130,-6.573236,3.820876,-0.428754,2.618273,1.472607,-4.155010,8.819641,-3.665705,1.406625,-3.575287], dtype = "float32")#candidate|3026|(144,)|const|float32
call_3025 = relay.TupleGetItem(func_2268_call(relay.reshape(const_3026.astype('float32'), [9, 16, 1])), 0)
call_3027 = relay.TupleGetItem(func_2271_call(relay.reshape(const_3026.astype('float32'), [9, 16, 1])), 0)
uop_3032 = relay.atan(call_3008.astype('float64')) # shape=(11, 14, 7)
uop_3034 = relay.atan(call_3009.astype('float64')) # shape=(11, 14, 7)
output = relay.Tuple([bop_3021,call_3025,const_3026,uop_3032,])
output2 = relay.Tuple([bop_3024,call_3027,const_3026,uop_3034,])
func_3048 = relay.Function([var_3020,], output)
mod['func_3048'] = func_3048
mod = relay.transform.InferType()(mod)
var_3049 = relay.var("var_3049", dtype = "float64", shape = (11, 14, 7))#candidate|3049|(11, 14, 7)|var|float64
output = func_3048(var_3049)
func_3050 = relay.Function([var_3049], output)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2613_call = mod.get_global_var('func_2613')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_3058 = relay.TupleGetItem(func_2613_call(), 3)
call_3059 = relay.TupleGetItem(func_2614_call(), 3)
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
call_3069 = relay.TupleGetItem(func_2847_call(), 0)
call_3070 = relay.TupleGetItem(func_2849_call(), 0)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_3073 = func_2685_call()
call_3074 = func_2685_call()
output = relay.Tuple([call_3058,call_3069,call_3073,])
output2 = relay.Tuple([call_3059,call_3070,call_3074,])
func_3087 = relay.Function([], output)
mod['func_3087'] = func_3087
mod = relay.transform.InferType()(mod)
output = func_3087()
func_3088 = relay.Function([], output)
mutated_mod['func_3088'] = func_3088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2613_call = mod.get_global_var('func_2613')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_3089 = relay.TupleGetItem(func_2613_call(), 2)
call_3090 = relay.TupleGetItem(func_2614_call(), 2)
func_114_call = mod.get_global_var('func_114')
func_116_call = mutated_mod.get_global_var('func_116')
var_3104 = relay.var("var_3104", dtype = "int16", shape = (208,))#candidate|3104|(208,)|var|int16
call_3103 = func_114_call(relay.reshape(var_3104.astype('int16'), [16, 13]))
call_3105 = func_114_call(relay.reshape(var_3104.astype('int16'), [16, 13]))
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_3106 = func_2337_call()
call_3107 = func_2337_call()
var_3118 = relay.var("var_3118", dtype = "int16", shape = (208,))#candidate|3118|(208,)|var|int16
bop_3119 = relay.logical_or(var_3104.astype('bool'), relay.reshape(var_3118.astype('bool'), relay.shape_of(var_3104))) # shape=(208,)
output = relay.Tuple([call_3089,call_3103,call_3106,bop_3119,])
output2 = relay.Tuple([call_3090,call_3105,call_3107,bop_3119,])
func_3126 = relay.Function([var_3104,var_3118,], output)
mod['func_3126'] = func_3126
mod = relay.transform.InferType()(mod)
mutated_mod['func_3126'] = func_3126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mutated_mod.get_global_var('func_3126')
var_3128 = relay.var("var_3128", dtype = "int16", shape = (208,))#candidate|3128|(208,)|var|int16
var_3129 = relay.var("var_3129", dtype = "int16", shape = (208,))#candidate|3129|(208,)|var|int16
call_3127 = func_3126_call(var_3128,var_3129,)
output = call_3127
func_3130 = relay.Function([var_3128,var_3129,], output)
mutated_mod['func_3130'] = func_3130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
call_3250 = relay.TupleGetItem(func_2847_call(), 0)
call_3251 = relay.TupleGetItem(func_2849_call(), 0)
output = relay.Tuple([call_3250,])
output2 = relay.Tuple([call_3251,])
func_3259 = relay.Function([], output)
mod['func_3259'] = func_3259
mod = relay.transform.InferType()(mod)
output = func_3259()
func_3260 = relay.Function([], output)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3298 = relay.var("var_3298", dtype = "float32", shape = (6, 14, 3))#candidate|3298|(6, 14, 3)|var|float32
uop_3299 = relay.acosh(var_3298.astype('float32')) # shape=(6, 14, 3)
output = relay.Tuple([uop_3299,])
output2 = relay.Tuple([uop_3299,])
func_3304 = relay.Function([var_3298,], output)
mod['func_3304'] = func_3304
mod = relay.transform.InferType()(mod)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3305 = relay.var("var_3305", dtype = "float32", shape = (6, 14, 3))#candidate|3305|(6, 14, 3)|var|float32
func_3304_call = mutated_mod.get_global_var('func_3304')
call_3306 = func_3304_call(var_3305)
output = call_3306
func_3307 = relay.Function([var_3305], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_3342 = func_2685_call()
call_3343 = func_2685_call()
output = call_3342
output2 = call_3343
func_3347 = relay.Function([], output)
mod['func_3347'] = func_3347
mod = relay.transform.InferType()(mod)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mutated_mod.get_global_var('func_3347')
call_3348 = func_3347_call()
output = call_3348
func_3349 = relay.Function([], output)
mutated_mod['func_3349'] = func_3349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_3360 = func_3347_call()
call_3361 = func_3347_call()
uop_3390 = relay.asin(call_3360.astype('float32')) # shape=(11, 14, 7)
uop_3392 = relay.asin(call_3361.astype('float32')) # shape=(11, 14, 7)
var_3405 = relay.var("var_3405", dtype = "float32", shape = (11, 14, 7))#candidate|3405|(11, 14, 7)|var|float32
bop_3406 = relay.logical_xor(uop_3390.astype('uint32'), relay.reshape(var_3405.astype('uint32'), relay.shape_of(uop_3390))) # shape=(11, 14, 7)
bop_3409 = relay.logical_xor(uop_3392.astype('uint32'), relay.reshape(var_3405.astype('uint32'), relay.shape_of(uop_3392))) # shape=(11, 14, 7)
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
const_3415 = relay.const([-8,2,6,1,-1,1,10,2,-9,-3,-5,9,-2,3,9,-6,8,-7,5,-10,-5,-8,2,2,-5,4,-8,5,3,-1,-5,1,5,10,6,-8,10,7,4,-3,-4,2,4,-1,-5,-9,-9,6,6,4,5,-4,6,6,1,-10,10,7,9,-9,2,7,-8,-7,-10,-6,-3,-1,-2,-10,8,-9,1,-10,-6,7,9,-1,-8,1,9,4,-10,10,1,6,-9,-10,1,-3,1,6,3,-4,6,-8,3,-7,-6,-4,9,8,2,-10,-8,-1,2,-8,5,-5,-7,5,4,2,9,9,-3,5,7,-10,8,-5,-1,5,-4,6,-1,1,3,7,9,-9,5,10,1,8,-3,10,-7,-9,-3,-4,6,-4,-9,2,-7,2,6,7,-4,-9,-9,1,5,-8,-7,-5,-8,-3,-9,6,-7,-1,10,2,-4,-3,1,-10,-5,7,3,-4,-2,-7,-1,9,1,1,-10,7,6,-7,-3,-3,7,8,-1,-10,-9,-4,-2,-8,-4,6,4,6,-3,-8,1,-5,-3,-8,-5,-7,-7,-5,-5,4,6,3,-5,-1,-3,-5,2,5,-2,10,-1,-4,-10,-7,-3,-6,1,8,-8,6,-10,8,-2,-5,-3,-4,4,5,6,-8,-3,10,4,1,9,-5,-10,-10,5,-9,-2,7,2,7,1,8,2,9,-6,-1,-8,5,-1,-2,-10,-7,5,-8,3,4,-3,-10,-10,2,-9,-2,-1,-9,-2,9,4,-4,-9,8,8,-9,-6,-7,-8,-4,-3,-6,-3,-7,5,-7,-1,2,3,-5,3,3,3,-8,2,9,-8,2,-1,-4,-4,-7,-10,-6,-8,8,-4,-1,-3,-9,-10,-2,5,-8,10,3,1,-10,9,-7,-8,-8,-6,-1,-9,3,9,6,7,10,-5,5,5,8,3,2,-10,8,-3,-2,9,10,1,2,9,7,-7,10,8,-9,-5,6,5,-9,1,9,-9,8,6,-9,-5,10,9,-7,10,-9,9,10,9,10,-3,2,1,-1,1,1,8,-10,-1,-5,-1,6,2,-3,5,1,-6,9,2,-2,2,8,5,7,5,9,-6,7,2,9,5,5,-2,7,-6,6,4,-8,-4,-7,6,-4,-4,10,-10,3,-8,5,5,-1,-10,-1,-3,-5,3,-5,-9,-1,1,-1,8,-4,-4,-4,10,-2,-6,-7,9,5,6,-10,2,-10,-3,-2,4,-7,7,-7,-1,-1,1,6,-2,3,5,-4,5,8,6,-8,5,9,1,1,7,6,10,8,-5,1,-4,-4,9,-6,-1,-5,2,-10,-2,-4,5,-6,4,-8,-3,-10,3,8,6,-9,10,7,10,4,10,-2,10,1,-2,-4,7,-3,-7,-4,-5,-2,-9,-7,-8,-2,1,-5,-1,-4,5,-7,-1,3,-9,3,-2,-9,5,1,-8,-4,-6,-9,-3,-8,-2,-3,5,-3,4,10,-10,-10,-6,-8,3,-1,-9,6,5,4,-10,10,-2,-4,8,4,-5,-1,-5,-3,-1,7,-7,3,10,-9,4,-8,4,-1,-5,10,-9,-9,2,-3,8,-2,-5,-7,4,-5,-7,5,2,4,2,7,5,-6,-8,7,-8,-9,7,8,-1,-2,-6,10,2,7,-5,5,-10,4,-7,2,-1,-8,8,-2,1,-9,-8,6,10,3,-8,5,7,-6,2,2,2,4,8,-2,9,-7,-8,-8,-8,6,-9,-6,2,-5,-1,-8,6,4,7,2,-5,4,2,6,4,8,6,-2,-5,1,-3,-8,2,-1,-7,-4,2,10,9,-3,-9,-6,2,-3,6,-4,4,8,-5,-4,3,-9,-5,6,4,-7,-10,-9,-5,-1,8,-10,9,-10,-6,-9,2,4,4,3,1,4,-7,4,-7,2,2,10,9,-6,-4,-6,10,6,-1,-3,-1,2,1,-9,-2,-4,5,6,1,3,-4,2,10,-7,6,-1,-6,-8,-2,-5,-10,-9,-2,10,-6,9,-1,-3,8,10,-9,-5,-8,3,-10,4,-9,6,9,-7,7,4,-8,9,-4,-3,1,-9,-1,-7,-3,2,6,-5,3,10,7,-8,-9,-10,7,8,-1,7,9,4,6,4,-3,-5,-9,6,8,-1,-2,-10,4,7,2,9,7,-3,-9,-5,6,-1,-6,2,-3,-1,-6,4,-8,7,-4,-3,-10,-5,5,-1,3,-9,9,3,6,8,6,4,-4,5,-7,-2,7,6,-9,-5,1,1,7,3,-9,-5,-5,-8,10,-9,-2,-6,8,2,-2,-2,-3,4,-9,3,-10,-5,-9,-5,6,8,3,-6,-9,-10,7,6,5,10,-9,-3,3,-5,1,-1,-2,-7,-6,-7,3,-8,9,10,1,9,-7,10,-2,-2,3,-2,-4,-3,3,-5,-9,-9,-6,4,1,9,10,7,4,-7,-3,-3,9,7,-6,-10,-7,3,8,-1,5,-6,-1,6,-2,-2,3,2,-3,-6,5,-4,-5,-6,-8,-3,-8,5,3,3,-6,2,2,3,-7,4,7,2,9,-8,-6,-10,-1,4,-8,-3,3,4,-3,9,-8,-10,3,10,2,8,10,-4,3,-6,6,5,-7,5,8,8,8,-4,3,-4,-3,-5,-10,-3,-9,-4,-8,-4,-10,3,-4,-7,-2,-5,6,-2,-2,1,7,5,-10,-1,-1,-3,4,10,-8,8,9,-5,-3,-3,5,6,-7,10,-1,-6,-5,-3,7,-5,-2,5,8,-6,8,-7,3,-6,4,10,6,10,-6,-8,-10,-6,-8,4,10,9,1,-10,9,7,-2,1,-2,9,7,1,-4,10,9,-8,-7,-6,4,5,3,-7,8,3,2,-9,3,6,6,-9,-3,-3,-5,7,6,3,3,-4,-9,-10,-3,9,9,-3,-3,-2,-1,-5,8,8,-3,3,10,-6,6,-9,6,-5,3,-2,2,1,10,2,7,2,-2,7,-2,-10,-8,7,4,9,-10,2,-6,7,-10,-4,10,8,-10,-1,-7,-3,7,10,-2,9,-1,-5,-7,-3,-1,1,-2,1,-3,8,-5,-4,1,-6,-3,4,-9,3,9,-10,-4,2,-1,9,9,-3,-8,-9,-10,-9,-1,9,2,-5,-7,-3,-7,6,-10,-3,4,-3,10,9,-6,-3,3,-8,-5,6,-9,4,6,5,6,-6,1,-3,1,1,2,6,-9,8,7,-5,-3,-4,8,4,7,-4,-9,-9,9,-2,7,6,-4,7,8,-10,2,1,-1,-8,7,7,1,10,8,-2,-2,1,1,-7,-2,4,-1,8,4,-2,-7,8,-7,-7,2,9,8,-10,-8,1,-6,-7,-2,10,-10,6,1,7,-4,-2,6,10,3,-4,-9,-4,10,3,-8,-5,-5,-8,-6,-4,-9,-7,-2,-8,9,8,5,-4,-5,6,-9,-2,1,-9,-2,7,3,-6,-3,10,6,-1,-9,-7,-3,8,3,6,-7,-3,10,-2,-6,-8,3,-2,-5,2,-1,10,2,-5,7,1,6,5,-5,-1,-5,9,-6,-9,-5,8,-1,-9,-8,10,-6,1,4,-10,-3,8,-7,-8,-10,-5,-9,1,1,7,-4,7,5,-4,4,-7,-2,-4,4,3,10,-10,-10,1,3,-3,4,-9,-9,-9,4,1,3,-6,-9,2,4,8,-5,7,6,6,-1,-8,-5,-3,-5,8,10,-4,10,6,-9,10,-5,1,9,1,2,10,8,-8,-8,10,10,-6,-9,-6,9,2,5,5,-1,-3,8,10,-7,-1,-7,-2,3,7,2,-2,-1,7,10,-1,-10,5,8,-4,-6,-9,-5,1,-8,-2,4,-5,10,3,4,10,10,2,3,-2,-2,-3,1,5,-2,2,-10,-1,9,-10,-9,8,8,-5,5,-9,8,2,-3,9,-3,-3], dtype = "int8")#candidate|3415|(1452,)|const|int8
call_3414 = func_2902_call(relay.reshape(const_3415.astype('int8'), [12, 11, 11]), relay.reshape(const_3415.astype('int8'), [12, 11, 11]), )
call_3416 = func_2902_call(relay.reshape(const_3415.astype('int8'), [12, 11, 11]), relay.reshape(const_3415.astype('int8'), [12, 11, 11]), )
output = relay.Tuple([bop_3406,call_3414,const_3415,])
output2 = relay.Tuple([bop_3409,call_3416,const_3415,])
func_3420 = relay.Function([var_3405,], output)
mod['func_3420'] = func_3420
mod = relay.transform.InferType()(mod)
var_3421 = relay.var("var_3421", dtype = "float32", shape = (11, 14, 7))#candidate|3421|(11, 14, 7)|var|float32
output = func_3420(var_3421)
func_3422 = relay.Function([var_3421], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_3444 = func_3347_call()
call_3445 = func_3347_call()
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_3456 = func_2337_call()
call_3457 = func_2337_call()
uop_3458 = relay.atanh(call_3444.astype('float64')) # shape=(11, 14, 7)
uop_3460 = relay.atanh(call_3445.astype('float64')) # shape=(11, 14, 7)
output = relay.Tuple([call_3456,uop_3458,])
output2 = relay.Tuple([call_3457,uop_3460,])
func_3481 = relay.Function([], output)
mod['func_3481'] = func_3481
mod = relay.transform.InferType()(mod)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mutated_mod.get_global_var('func_3481')
call_3482 = func_3481_call()
output = call_3482
func_3483 = relay.Function([], output)
mutated_mod['func_3483'] = func_3483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_3504 = func_3347_call()
call_3505 = func_3347_call()
var_3518 = relay.var("var_3518", dtype = "float64", shape = (11, 14, 7))#candidate|3518|(11, 14, 7)|var|float64
bop_3519 = relay.mod(call_3504.astype('float32'), relay.reshape(var_3518.astype('float32'), relay.shape_of(call_3504))) # shape=(11, 14, 7)
bop_3522 = relay.mod(call_3505.astype('float32'), relay.reshape(var_3518.astype('float32'), relay.shape_of(call_3505))) # shape=(11, 14, 7)
output = bop_3519
output2 = bop_3522
func_3555 = relay.Function([var_3518,], output)
mod['func_3555'] = func_3555
mod = relay.transform.InferType()(mod)
mutated_mod['func_3555'] = func_3555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3556 = relay.var("var_3556", dtype = "float64", shape = (11, 14, 7))#candidate|3556|(11, 14, 7)|var|float64
func_3555_call = mutated_mod.get_global_var('func_3555')
call_3557 = func_3555_call(var_3556)
output = call_3557
func_3558 = relay.Function([var_3556], output)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_3618 = func_2337_call()
call_3619 = func_2337_call()
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_3628 = relay.var("var_3628", dtype = "int8", shape = (1452,))#candidate|3628|(1452,)|var|int8
call_3627 = func_2902_call(relay.reshape(var_3628.astype('int8'), [12, 11, 11]), relay.reshape(var_3628.astype('int8'), [12, 11, 11]), )
call_3629 = func_2902_call(relay.reshape(var_3628.astype('int8'), [12, 11, 11]), relay.reshape(var_3628.astype('int8'), [12, 11, 11]), )
var_3630 = relay.var("var_3630", dtype = "float64", shape = (11, 14, 7))#candidate|3630|(11, 14, 7)|var|float64
bop_3631 = relay.multiply(call_3618.astype('uint64'), relay.reshape(var_3630.astype('uint64'), relay.shape_of(call_3618))) # shape=(11, 14, 7)
bop_3634 = relay.multiply(call_3619.astype('uint64'), relay.reshape(var_3630.astype('uint64'), relay.shape_of(call_3619))) # shape=(11, 14, 7)
output = relay.Tuple([call_3627,var_3628,bop_3631,])
output2 = relay.Tuple([call_3629,var_3628,bop_3634,])
func_3640 = relay.Function([var_3628,var_3630,], output)
mod['func_3640'] = func_3640
mod = relay.transform.InferType()(mod)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mutated_mod.get_global_var('func_3640')
var_3642 = relay.var("var_3642", dtype = "int8", shape = (1452,))#candidate|3642|(1452,)|var|int8
var_3643 = relay.var("var_3643", dtype = "float64", shape = (11, 14, 7))#candidate|3643|(11, 14, 7)|var|float64
call_3641 = func_3640_call(var_3642,var_3643,)
output = call_3641
func_3644 = relay.Function([var_3642,var_3643,], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_3689 = relay.TupleGetItem(func_2503_call(), 0)
call_3690 = relay.TupleGetItem(func_2505_call(), 0)
func_2405_call = mod.get_global_var('func_2405')
func_2408_call = mutated_mod.get_global_var('func_2408')
var_3729 = relay.var("var_3729", dtype = "float64", shape = (24,))#candidate|3729|(24,)|var|float64
call_3728 = relay.TupleGetItem(func_2405_call(relay.reshape(var_3729.astype('float64'), [2, 4, 3]), relay.reshape(var_3729.astype('float64'), [2, 4, 3]), ), 0)
call_3730 = relay.TupleGetItem(func_2408_call(relay.reshape(var_3729.astype('float64'), [2, 4, 3]), relay.reshape(var_3729.astype('float64'), [2, 4, 3]), ), 0)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_3749 = relay.TupleGetItem(func_2503_call(), 0)
call_3750 = relay.TupleGetItem(func_2505_call(), 0)
const_3774 = relay.const([[[-7.127643,-9.196140,-3.318543,-9.930371,2.839183,-9.286664,-6.129454],[3.700726,8.337221,-5.262579,-1.844806,-3.774009,-6.076318,1.839183],[2.267852,1.239769,-5.114549,9.559356,1.977612,-6.112849,-3.864028],[-4.042364,1.381412,6.044938,-3.924567,8.988505,-1.890593,-1.809536],[-1.424074,5.141700,-0.978695,5.649613,-6.567402,7.719747,-6.559779],[-8.631833,-7.955268,5.317798,0.012613,3.719131,3.536750,-1.005312],[-9.095785,-6.833476,2.159696,-7.087522,-8.496504,-0.452594,-7.110327],[-5.289881,5.709168,-0.343090,-5.135083,2.508250,-8.370989,0.764368],[-5.920492,7.805153,-4.647232,9.818770,5.463930,3.166805,1.134058],[6.856865,-7.809614,8.571948,-3.906616,3.317188,6.753644,-9.034032],[6.976458,8.163163,-3.053855,-5.344546,-1.711685,-8.843825,1.012678],[-5.556931,7.634081,1.491140,1.752464,-7.595458,-9.818189,-6.229896],[-8.217448,8.923274,0.882734,2.597649,9.675933,-7.774323,4.434237],[6.058674,4.369436,-0.176101,6.203433,-8.801533,-9.742436,3.724381]],[[-2.095467,-9.456402,-6.007993,1.968294,3.695954,3.123610,-3.289897],[-4.021876,-0.252062,6.695056,0.934361,8.292528,2.631122,-9.424756],[-9.021186,-1.717220,2.318685,0.320691,-1.771266,6.094292,-9.347783],[-2.682666,2.157416,-4.365134,-5.050098,0.190232,2.910449,7.743302],[-1.791659,-5.138942,1.945078,4.949484,-4.442205,-8.361792,7.901162],[-3.136454,7.258139,5.907023,8.200057,-3.196434,6.564844,-3.577590],[-1.964967,3.962366,9.801995,1.293146,-5.255731,4.803784,-4.271843],[6.316342,-3.182504,6.537270,-0.851465,-1.155682,-7.023005,0.650466],[-6.785423,5.043764,4.598390,4.208759,-0.892287,3.752925,8.293966],[6.282784,4.441282,-2.907848,-7.701144,1.974195,-5.121152,3.673113],[-8.027620,-7.471670,-8.424164,-1.240896,-3.703081,-7.159557,-2.192759],[6.403992,-1.611602,0.314650,4.445075,2.518756,6.713910,-3.337478],[-5.655714,6.462669,-8.276768,1.851141,0.180818,7.713894,8.473020],[-7.033835,5.413385,-8.069040,4.972498,1.715942,3.327112,-5.012995]],[[8.976695,-8.119914,-1.572428,5.802148,2.623731,9.616793,-2.192882],[-1.093661,-5.786730,1.891369,-3.886153,-5.730999,-6.684324,-3.871787],[-0.433732,-2.665852,6.960475,-2.559687,-1.188421,-4.847056,-8.360083],[-4.012269,-4.146151,6.852769,-4.601876,2.882790,-0.659044,-0.548641],[7.435586,-9.445080,5.296918,-1.639674,9.768063,1.327140,-4.125869],[2.109416,4.335587,8.687803,-9.151704,4.625185,1.877929,9.295775],[-8.438733,-9.972186,-7.388153,7.676850,-5.003548,-6.960362,-1.780078],[7.076940,3.916629,-1.180820,6.233068,6.549128,-6.105263,-8.321425],[9.392004,6.460914,1.694448,1.953198,-3.760676,2.724780,-4.922838],[-3.182116,7.934291,7.888765,-1.384891,-0.670040,1.156171,2.088659],[-2.333942,-6.281429,8.104271,1.214831,8.250930,-9.629399,5.535419],[-9.357607,1.368446,0.829875,4.289193,4.074774,-4.389807,8.419342],[6.978988,8.721180,-0.311762,0.300049,5.663810,-5.177916,-4.339428],[-4.670190,-1.944419,6.675589,2.412249,2.200161,-5.389332,-0.233443]],[[-2.727597,-8.342941,-5.252139,8.952119,3.935245,-8.314611,8.465246],[-4.010505,3.785892,5.838845,8.192145,4.885592,4.109325,4.991364],[1.230658,-5.059173,8.157356,-2.768048,-2.357875,-4.794935,-7.736888],[-7.277848,1.287345,0.328430,8.853270,5.686269,-8.736193,4.177819],[9.419105,2.847717,-5.859423,-4.029133,-8.471719,2.023104,-2.875134],[2.540453,-0.641076,-0.135916,-1.886349,-4.272550,-8.120723,-2.167227],[-8.179622,4.853269,8.280410,2.504970,-4.929014,6.433965,-3.891421],[-0.367610,7.225497,2.719796,7.392101,2.622922,-0.553140,-2.897492],[9.966470,8.731167,-9.435001,5.437336,2.699042,-5.350258,-0.480470],[-0.399387,-6.579471,3.208120,-3.295883,-3.008608,-7.898688,9.359706],[8.074206,-6.364020,2.485066,8.263882,-6.950903,5.321630,6.842625],[5.120890,4.572409,-6.497203,-1.497961,0.353080,-1.168006,2.263712],[-8.768164,5.034574,-3.901172,-0.304864,1.928247,6.671238,5.420324],[9.416611,-1.491117,-3.616620,6.683629,-8.371096,3.574259,-3.154424]],[[8.444597,-1.754968,6.249024,2.009756,5.527518,9.990730,3.640662],[-3.494345,8.289050,1.848472,0.439704,2.596759,-3.044209,-6.381961],[-6.586986,-8.758266,-0.180070,3.053567,-2.934555,5.084069,-8.175457],[0.114805,-7.466697,-7.324059,5.830731,1.426136,-1.943502,2.844900],[-4.104761,-9.227721,5.999414,-2.982034,2.724844,0.204042,2.345933],[-3.794331,7.633455,7.249121,4.230292,5.901906,-0.160238,3.116411],[6.343918,0.603027,9.808070,-7.350145,-2.682136,-0.661502,-5.547651],[-9.293760,3.870174,-4.931995,-5.389027,-1.983418,1.102689,-8.210049],[-4.329780,-4.013756,2.016280,-2.932746,8.705602,6.392807,6.890610],[-3.001012,0.917113,5.829633,0.010034,6.664936,-0.103595,4.343557],[1.114643,6.586385,-5.880782,7.112133,2.316194,-6.576938,3.664523],[7.822115,0.541251,-1.407922,-5.876175,9.460808,6.593009,0.658950],[-7.079187,-4.770883,-7.482895,-0.776344,7.379300,-7.942786,3.058758],[-9.408239,-9.980768,7.138066,2.071387,-5.584484,-1.257747,8.882314]],[[-0.833728,2.548634,4.562019,-5.419569,6.752885,-5.212238,2.278048],[0.479506,7.784323,6.859997,6.160096,-5.024544,-4.970645,-1.270469],[-6.683813,3.765709,-6.207187,-1.244911,-1.271078,-2.309427,5.295992],[-8.098924,4.986545,4.930991,2.515010,9.933843,9.784422,6.923286],[-8.229592,-9.409474,7.807649,-2.858448,-4.560743,-1.488971,3.705587],[-7.255337,9.770521,3.256843,3.980474,-6.393214,7.813865,0.604017],[5.769749,4.179893,2.105831,-7.088079,7.623005,-5.232790,9.871041],[-8.383390,8.195871,0.468316,7.354352,-4.391461,4.033730,-3.623676],[-1.358411,-1.114010,-8.804926,5.332020,8.525096,6.616069,-1.705742],[7.725982,-1.991375,0.669660,-3.046562,-4.886316,9.143398,-9.072855],[4.997296,-7.050186,6.792095,9.536288,-1.333718,5.075865,8.628666],[-9.152873,-8.827667,4.370242,5.606807,4.248161,-8.542962,2.423791],[-9.047961,-2.363118,-0.197781,9.770184,1.636813,-9.080739,7.291450],[-0.524500,-6.074755,6.201470,-0.348196,7.654232,7.841540,6.146039]],[[-1.379221,9.092448,2.905568,7.858658,-8.595541,6.498164,2.418610],[4.843116,2.327573,9.699786,-3.368784,-3.980740,-9.476059,-3.925238],[-6.233370,2.408992,5.829708,5.141849,-7.665487,-0.979427,2.109123],[6.590562,9.732535,-3.598255,-8.921463,-9.137051,-4.699069,1.888221],[-0.488042,-1.854621,5.702644,-8.253622,-2.968733,0.265240,-0.415791],[-8.197546,6.283285,-5.527683,-0.160988,8.638172,8.943482,-2.188019],[1.819188,-4.683151,1.915052,-6.920946,-5.123272,8.267794,4.850443],[7.097680,8.770800,6.828687,7.043941,2.433977,-5.398367,-9.425913],[5.049043,4.420331,-9.851767,-4.114698,-5.235689,8.104745,0.759016],[-5.822627,6.026381,-8.633674,4.240034,-6.484254,-0.381812,-2.032569],[-9.845986,-0.080427,5.989050,-5.618552,6.669903,-7.001268,-0.437574],[-7.746597,-3.094562,-9.478424,-6.017733,-7.581525,-8.178612,7.110264],[4.050650,-9.420894,-7.944901,4.603272,-8.200789,-1.015338,-4.387217],[-0.164775,-0.399922,5.076186,8.552659,-4.494705,-9.113966,1.095424]],[[3.440577,4.010365,-2.738749,0.031158,-7.633892,7.060296,-8.636272],[-4.497319,-4.405288,4.982103,7.356417,6.482634,-1.298504,3.714249],[0.555539,-6.231639,4.920992,7.414707,4.684045,-9.793129,9.485550],[-8.983536,4.272576,-3.127819,3.922034,-8.609290,-9.685873,3.404512],[-8.356065,-4.479779,3.227349,-0.631465,-2.642429,4.225888,-1.230785],[-2.356001,7.728628,-2.712825,5.962850,-6.548566,-1.537310,-3.958024],[-0.019314,-5.133168,-0.168204,-5.512155,6.322565,-9.730921,-7.673814],[7.572625,8.322925,-7.668334,-8.117852,-8.705271,-7.422158,2.467911],[0.608072,3.404585,1.370986,-4.341649,-2.366175,-1.880545,-0.737328],[-7.311671,-1.567882,7.230133,4.098099,-7.524238,-1.819743,9.198547],[1.883742,-1.558396,-1.233803,-7.171286,1.148501,2.593574,-0.524374],[6.862890,-9.387823,1.081995,3.361465,0.434415,0.393415,-7.265934],[-0.175291,-3.963359,-0.401062,-9.444051,-8.559818,3.352715,-9.626694],[-5.767773,-3.844285,5.341806,5.784402,8.536825,2.751056,6.473042]],[[-1.943671,6.855553,8.089251,-5.675964,-4.282800,7.213709,6.529177],[-2.388188,3.529875,-8.442435,-4.951086,2.157560,2.100754,-1.816674],[5.077742,2.208335,4.890181,-3.522959,-3.116912,2.450093,3.528461],[5.513147,5.338432,-6.351489,-0.054580,-6.689076,-3.431067,-8.842203],[-0.057436,8.572818,-0.210701,5.533730,0.720655,0.432142,-4.925626],[-1.473492,2.484524,-8.598141,5.232655,9.596835,-2.068063,-6.782989],[6.611946,-8.170333,2.518955,0.329806,-0.993035,8.688806,-5.075139],[0.298053,7.122305,4.367294,8.792657,2.889929,-9.971498,7.412836],[-0.918059,-5.216827,-7.455340,9.009287,-7.185309,-6.655919,2.644088],[-7.159812,-1.147297,-4.516154,8.797847,-3.729169,-5.277544,1.866149],[-2.758767,4.631839,-9.461928,8.521500,-8.747718,-6.588268,3.070181],[2.513508,-2.397945,4.047212,5.762873,4.236784,4.174732,2.630429],[2.987991,-6.987968,7.479236,1.314630,8.456781,3.390422,9.134386],[-0.756151,-5.718507,-2.567011,0.886666,1.017810,9.619183,4.428460]],[[-5.521634,-0.771782,6.411869,8.974619,-3.964969,-4.094572,5.809952],[5.369460,3.278365,-5.867396,9.677916,3.969084,-2.331925,9.536401],[7.953894,-3.000922,-0.877418,5.236377,3.183817,-3.164695,6.413089],[-2.753390,-9.710146,-2.189051,5.815502,6.642420,5.312362,-0.034067],[3.097873,0.609168,-4.545893,-5.009572,7.009978,9.021356,8.624531],[-5.561750,-5.175569,2.803248,8.761424,6.315225,-2.567582,5.948410],[9.286689,0.033652,-9.524799,6.801549,-1.637566,6.797802,4.365231],[2.338751,-3.436349,-8.181694,-8.775675,-7.119617,4.349618,-1.089599],[-8.252431,6.272171,1.612617,3.119489,1.135548,7.804830,-1.049456],[5.175971,6.014439,-7.181345,5.111257,-3.010602,4.554713,2.783745],[-4.554221,-7.679227,1.874205,-6.178862,7.707008,-9.373477,-2.152943],[-9.685495,-4.320499,9.530169,-2.621973,-9.351930,-0.140408,0.238504],[4.218109,-7.429024,5.028647,-4.493531,-5.874402,1.080612,-0.906020],[-5.532668,4.485035,-7.246707,4.505564,7.893647,7.863825,2.719901]],[[0.593352,3.258236,1.784180,-7.167218,6.422946,4.953272,-5.589601],[6.544337,5.142655,3.416493,-3.553608,-6.674322,9.056626,-3.177572],[5.296037,-0.712823,-6.178074,7.121961,6.054925,-7.572571,4.028855],[-7.559689,9.740257,-8.799545,-5.316613,4.630755,3.184888,-1.742939],[-8.883608,-8.008928,-2.288237,-4.181013,-5.044080,-0.723026,8.766524],[-2.537060,-8.876748,-8.120930,-4.182167,-8.698672,1.187125,-7.059595],[-8.651716,8.153020,2.527295,-4.483839,7.033728,-3.254904,3.980985],[8.556211,-5.443759,7.464683,3.043695,-2.088290,-9.426434,-0.456862],[-4.572024,4.038943,8.647516,7.693887,-9.508881,-3.654940,-3.739073],[8.277689,9.788538,3.058289,5.564056,-0.942579,-9.241452,-5.032957],[-8.365752,-8.173511,6.766424,6.189667,3.785620,2.294328,-9.701751],[4.344073,7.310764,-3.705443,7.514448,-3.066374,-9.925860,2.242859],[3.758690,-1.225544,-7.905361,-9.483994,-5.286240,-4.328425,2.116027],[0.158697,6.671965,-2.531739,7.742887,8.167064,-0.780987,0.406512]]], dtype = "float64")#candidate|3774|(11, 14, 7)|const|float64
bop_3775 = relay.power(call_3689.astype('float32'), relay.reshape(const_3774.astype('float32'), relay.shape_of(call_3689))) # shape=(11, 14, 7)
bop_3778 = relay.power(call_3690.astype('float32'), relay.reshape(const_3774.astype('float32'), relay.shape_of(call_3690))) # shape=(11, 14, 7)
output = relay.Tuple([call_3728,var_3729,call_3749,bop_3775,])
output2 = relay.Tuple([call_3730,var_3729,call_3750,bop_3778,])
func_3815 = relay.Function([var_3729,], output)
mod['func_3815'] = func_3815
mod = relay.transform.InferType()(mod)
mutated_mod['func_3815'] = func_3815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3816 = relay.var("var_3816", dtype = "float64", shape = (24,))#candidate|3816|(24,)|var|float64
func_3815_call = mutated_mod.get_global_var('func_3815')
call_3817 = func_3815_call(var_3816)
output = call_3817
func_3818 = relay.Function([var_3816], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_3836 = func_2337_call()
call_3837 = func_2337_call()
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_3841 = relay.var("var_3841", dtype = "float32", shape = (1008,))#candidate|3841|(1008,)|var|float32
call_3840 = relay.TupleGetItem(func_582_call(relay.reshape(var_3841.astype('float32'), [14, 12, 6])), 2)
call_3842 = relay.TupleGetItem(func_585_call(relay.reshape(var_3841.astype('float32'), [14, 12, 6])), 2)
output = relay.Tuple([call_3836,call_3840,var_3841,])
output2 = relay.Tuple([call_3837,call_3842,var_3841,])
func_3847 = relay.Function([var_3841,], output)
mod['func_3847'] = func_3847
mod = relay.transform.InferType()(mod)
mutated_mod['func_3847'] = func_3847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3848 = relay.var("var_3848", dtype = "float32", shape = (1008,))#candidate|3848|(1008,)|var|float32
func_3847_call = mutated_mod.get_global_var('func_3847')
call_3849 = func_3847_call(var_3848)
output = call_3849
func_3850 = relay.Function([var_3848], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_3873 = relay.TupleGetItem(func_2503_call(), 0)
call_3874 = relay.TupleGetItem(func_2505_call(), 0)
func_334_call = mod.get_global_var('func_334')
func_338_call = mutated_mod.get_global_var('func_338')
const_3887 = relay.const(4.990823, dtype = "float64")#candidate|3887|()|const|float64
var_3888 = relay.var("var_3888", dtype = "int16", shape = (208,))#candidate|3888|(208,)|var|int16
var_3889 = relay.var("var_3889", dtype = "uint8", shape = (2, 256))#candidate|3889|(2, 256)|var|uint8
call_3886 = relay.TupleGetItem(func_334_call(relay.reshape(const_3887.astype('float64'), []), relay.reshape(var_3888.astype('int16'), [208,]), relay.reshape(var_3889.astype('uint8'), [128, 4]), ), 2)
call_3890 = relay.TupleGetItem(func_338_call(relay.reshape(const_3887.astype('float64'), []), relay.reshape(var_3888.astype('int16'), [208,]), relay.reshape(var_3889.astype('uint8'), [128, 4]), ), 2)
output = relay.Tuple([call_3873,call_3886,const_3887,var_3888,var_3889,])
output2 = relay.Tuple([call_3874,call_3890,const_3887,var_3888,var_3889,])
func_3894 = relay.Function([var_3888,var_3889,], output)
mod['func_3894'] = func_3894
mod = relay.transform.InferType()(mod)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mutated_mod.get_global_var('func_3894')
var_3896 = relay.var("var_3896", dtype = "int16", shape = (208,))#candidate|3896|(208,)|var|int16
var_3897 = relay.var("var_3897", dtype = "uint8", shape = (2, 256))#candidate|3897|(2, 256)|var|uint8
call_3895 = func_3894_call(var_3896,var_3897,)
output = call_3895
func_3898 = relay.Function([var_3896,var_3897,], output)
mutated_mod['func_3898'] = func_3898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_3956 = relay.TupleGetItem(func_2503_call(), 0)
call_3957 = relay.TupleGetItem(func_2505_call(), 0)
uop_3958 = relay.log10(call_3956.astype('float32')) # shape=(11, 14, 7)
uop_3960 = relay.log10(call_3957.astype('float32')) # shape=(11, 14, 7)
uop_3970 = relay.cos(call_3956.astype('float32')) # shape=(11, 14, 7)
uop_3972 = relay.cos(call_3957.astype('float32')) # shape=(11, 14, 7)
output = relay.Tuple([uop_3958,uop_3970,])
output2 = relay.Tuple([uop_3960,uop_3972,])
func_3977 = relay.Function([], output)
mod['func_3977'] = func_3977
mod = relay.transform.InferType()(mod)
output = func_3977()
func_3978 = relay.Function([], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_3981 = relay.TupleGetItem(func_2878_call(), 2)
call_3982 = relay.TupleGetItem(func_2879_call(), 2)
output = call_3981
output2 = call_3982
func_4008 = relay.Function([], output)
mod['func_4008'] = func_4008
mod = relay.transform.InferType()(mod)
mutated_mod['func_4008'] = func_4008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4008_call = mutated_mod.get_global_var('func_4008')
call_4009 = func_4008_call()
output = call_4009
func_4010 = relay.Function([], output)
mutated_mod['func_4010'] = func_4010
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4014 = relay.const([[[1.299461,6.287298,0.855820,5.540791,2.962966,-2.773667,-0.239605,-1.604712,-7.603641],[4.366930,-1.526234,-3.657452,2.847500,-3.502742,-6.470384,-1.848191,-6.076420,1.572903],[-1.001771,-2.103640,-4.532690,-4.149203,5.413949,3.646784,7.840795,5.664559,-4.765161],[1.048299,-9.148266,-4.794606,3.339519,-7.644143,-5.520001,6.569885,-4.146015,-1.213767],[2.198766,-5.808717,5.287070,-7.288602,-5.658187,3.927717,4.390805,8.825471,-5.524518],[8.405337,-9.733136,4.598357,0.999908,8.263153,-6.958846,-6.141985,-7.016681,-9.523868],[-3.855250,2.869553,-5.924251,2.850011,1.879127,0.089027,8.050072,6.097718,-9.099810],[-5.532120,6.567492,-9.933696,-9.968561,8.006690,7.718565,-9.233410,-1.357097,-5.353021]],[[-2.201618,0.872355,-4.684427,8.058874,5.019324,0.708521,-7.510067,6.149464,5.415463],[0.561014,4.215932,5.227989,8.664787,-8.107448,1.893701,-8.240911,4.352182,8.767485],[8.537570,2.416191,5.411833,-6.858175,-6.765163,1.843650,0.782272,4.228332,-1.124476],[4.653239,9.973729,2.101236,5.789860,-2.184469,7.286049,-9.734410,9.807695,8.488681],[2.146820,-7.325849,-7.786635,0.541676,-4.515255,-1.419727,8.080958,-1.702759,5.094458],[9.925238,-6.570704,4.418464,8.345529,-8.092051,6.703502,9.347766,8.817998,2.955819],[-9.373328,-4.177265,3.119200,9.339362,-7.277812,2.275705,2.669909,-8.855628,5.450880],[-9.594720,-5.354040,2.955632,-4.341766,-7.962054,-1.584911,4.879955,-4.663143,4.899642]],[[-9.284782,8.650019,2.412370,0.880507,1.932656,-4.696711,3.607798,-8.372342,5.144482],[-6.308880,-3.218386,4.185484,-8.572000,5.609601,-9.091284,-7.453913,9.070555,-3.284956],[6.578723,-5.519810,2.546791,9.012389,7.489114,-4.919797,3.639965,-3.059417,2.077250],[-9.386440,5.853356,9.122546,-4.557025,-8.527503,0.067404,-0.723031,-9.487152,4.194182],[3.196153,6.423765,-4.914918,6.536632,-5.976950,-6.386898,-2.863086,8.324398,-8.618908],[8.215401,-3.877763,8.634041,-9.769723,-4.374990,-5.170974,9.861172,-0.951160,-2.391243],[-2.699935,-3.326554,8.981844,4.590028,6.736308,8.475142,8.914232,7.728261,8.128053],[4.466917,-7.625406,-6.664973,8.902829,9.580396,-0.576342,4.069253,7.700200,0.458346]],[[-8.862139,-0.936213,0.829143,7.767762,8.985883,0.429657,5.692535,-8.483089,-4.273919],[-2.859292,-3.302150,-6.006023,8.217785,-8.249280,8.109486,-0.629323,-8.215937,-4.295506],[-2.204244,-3.943285,-8.346750,-0.240714,-3.305433,5.446010,-7.929891,-0.187043,2.108292],[1.031592,-9.705519,-3.296417,-0.636176,6.513491,5.154464,-6.671474,-6.341762,1.013176],[-7.253614,-0.554826,6.642003,-7.360882,-1.037980,-7.095825,3.740744,-5.689844,1.458869],[8.439411,9.726476,-2.326375,-5.926542,6.444572,6.142573,4.429886,-2.888746,-1.957757],[-9.633596,6.749277,-1.254616,-9.106566,-8.302433,6.187952,6.917247,6.587031,-6.625283],[-9.544717,-0.214845,9.574500,-4.214014,-6.368935,-0.640872,-3.972504,8.050072,6.108222]],[[-5.733849,5.475709,5.317071,-9.948068,8.578623,6.752531,-6.138117,3.541668,5.939980],[-6.474654,0.874145,5.826246,-7.924821,-4.237203,7.545402,2.109373,-9.049175,-5.053926],[5.920427,-6.468420,-7.499318,-5.725585,8.640022,-6.377512,-7.535436,6.273997,8.255552],[-3.964216,-4.109206,9.768614,-5.726279,5.282508,9.457104,-4.875029,1.274597,7.800324],[9.935903,-4.571984,5.482122,7.586060,4.571428,-7.500303,6.084629,-6.028011,0.577769],[-0.125722,-0.297993,-0.016485,5.882339,9.877025,-3.450845,8.121295,-4.688768,-5.330128],[-2.278550,-4.242081,-3.112173,-6.640824,9.944929,-5.242029,-2.967127,-9.016064,-1.450451],[-7.264133,-7.565174,-5.218833,-3.958899,-6.213111,9.827210,9.602067,-8.678411,-0.026659]],[[-8.375024,7.408699,7.886635,-9.748088,-8.747392,5.315025,-3.850806,-0.355487,2.733765],[7.226474,-5.455705,-7.122415,-6.461344,1.334275,2.773376,-1.974751,-6.644061,7.006831],[0.683879,4.372563,2.252934,-8.523077,-9.048176,-6.432281,-1.256385,-6.661382,0.194933],[-5.682233,-8.900345,-7.362348,6.018456,1.837072,-8.365123,-0.551654,-3.610756,2.032622],[-8.757379,2.622072,7.756907,-4.587383,8.872895,-4.802771,0.173593,0.549081,6.840566],[-1.005033,-9.857703,-5.760718,-9.868314,-4.892093,9.513841,-1.882430,0.940728,-3.256086],[9.213048,-2.001553,0.122340,7.694917,-6.911989,-4.078878,9.295115,-6.615610,-0.658715],[-9.464442,5.215263,-3.799239,1.652489,-1.764159,-5.457233,1.683482,6.130627,3.006057]],[[-2.249092,-3.099044,6.490259,-4.519135,0.593040,-7.209795,-3.219466,-9.091320,9.455845],[-6.535350,-3.441726,2.612195,8.707976,-5.407462,4.850869,-3.741842,0.457831,-9.034066],[0.765927,1.481522,5.564379,1.491833,-2.521363,-7.115452,-7.017718,-3.321295,2.880965],[1.421504,-5.937158,-3.049938,7.002737,-0.266644,1.158698,6.252786,6.834645,2.736515],[-6.125006,-3.454705,-2.984642,-0.513803,4.451992,6.152975,8.201326,-3.308149,7.189164],[7.609083,0.618929,0.925539,-8.348821,3.649690,1.772653,-0.979081,3.107403,-8.471075],[7.113049,-2.330226,-7.786202,-8.095519,6.535848,3.964097,5.363457,6.912361,-8.152034],[9.393965,-6.439694,6.818033,0.716407,4.081374,-3.240122,-8.942611,8.145282,2.525848]],[[0.078440,1.311777,-0.608412,3.831869,9.894943,-3.659131,0.531876,-1.865616,-3.929956],[6.743236,8.596133,9.273230,-1.709585,-7.548924,-6.512667,0.641011,2.027389,-4.071920],[-0.616976,9.803144,0.964788,0.247579,2.069786,-9.506284,9.215769,9.647619,-7.696242],[4.975207,-4.729485,-9.474599,0.074852,-2.542599,-0.633760,-1.108646,-1.390620,-9.502431],[8.984425,-9.866543,5.331383,-2.783460,-2.159714,-5.322846,-1.643529,-8.075945,0.793528],[-6.611292,-2.414910,6.625738,5.584224,3.915039,3.423903,1.547885,-7.908187,6.817972],[-0.327299,-7.976181,7.576174,-0.286888,-4.480194,-5.090349,1.182578,-1.134294,-3.844968],[7.501458,1.880272,0.043111,-0.690045,3.685732,2.475327,6.518166,5.189465,-5.934624]],[[-9.706117,-4.787551,6.120799,-4.579938,7.464319,5.764613,-1.842845,-2.871698,5.223301],[-3.948409,-1.033717,-6.735715,-2.916270,-7.420224,-5.055567,-2.891018,7.857916,5.222636],[6.637756,9.430103,3.991605,-0.688505,4.335927,2.996813,4.722768,8.789396,-6.157729],[9.411753,6.487950,-7.951567,-1.255141,-9.851626,7.521651,2.220310,1.312063,-3.873959],[9.363957,-5.125579,3.892336,9.808392,8.122684,-7.363392,7.305349,-1.200599,7.518972],[-3.493106,8.137468,9.609421,-0.965460,5.649793,-5.157572,-9.086947,2.515728,-9.098140],[0.222772,7.114841,-8.052082,-3.582090,3.658503,-1.822987,0.345395,-8.885161,8.180982],[7.247950,-8.968174,9.095234,-3.242644,-5.521135,-0.700506,-8.807279,3.586331,-0.753409]],[[-2.582144,4.470041,6.473830,-1.815586,-5.557392,1.498316,0.345277,4.200389,-1.695280],[-9.990242,8.644769,-6.679019,4.804665,6.176249,-8.264865,6.481357,-7.993939,-2.467185],[-3.302151,-8.881899,1.298135,9.869452,-2.602646,3.380327,6.973575,-8.765737,-2.591243],[9.473483,8.879754,-9.150895,-1.883812,-9.975795,-7.702560,3.462069,-9.772537,1.983780],[0.506659,-2.105830,-4.270183,-8.925389,6.818492,-3.774735,6.750087,6.953261,-1.651754],[-2.503352,1.667028,8.088057,3.943634,8.407011,-8.968140,-1.793888,9.750514,4.087178],[-1.486775,1.028564,-8.736160,2.862969,1.422985,7.357057,9.096760,1.907975,-1.044208],[-1.271218,9.503363,9.780434,1.019059,1.682305,-6.798012,-6.288494,9.260100,-2.860311]],[[4.236398,5.916704,8.915569,-4.704735,8.406117,3.444790,-0.631139,3.420889,3.330017],[3.369665,-6.110579,0.577758,0.141859,6.401269,-8.763976,8.166806,-1.788741,-6.208233],[8.408578,-0.862317,-7.244167,-0.673421,6.634143,-8.890216,5.354563,7.119153,7.968967],[-5.467602,-1.206846,1.481613,-1.312221,-6.515881,1.460806,-0.681129,3.326482,4.507660],[-4.630927,-3.356756,-8.009735,7.427292,-6.577179,2.407877,8.873023,0.596657,-6.397792],[-0.644089,1.811369,7.951543,-9.000138,8.384855,-9.998795,6.353862,-6.578554,-2.838421],[0.978984,-5.288358,5.987164,4.873102,-6.894340,-9.832015,5.482861,8.919610,-8.602519],[0.021984,-2.743446,-7.392679,-8.929048,0.395150,-8.474216,1.020791,3.832194,0.566707]],[[9.102157,-2.848960,8.322338,-9.806273,3.452021,5.870982,-5.492716,-7.266464,0.838160],[4.405110,6.706236,5.089242,6.445941,4.304854,-3.454597,2.000791,4.097237,9.777330],[-5.606757,2.275651,6.108057,9.579391,3.168658,-7.811758,0.376488,-6.294023,1.814845],[-9.960073,-8.852234,6.794957,-9.424850,7.814840,-8.980360,3.090406,-9.463244,6.672719],[2.838188,-6.266118,-9.580978,-2.766374,-8.008098,-7.277703,-5.503782,-3.705437,-0.371137],[6.417432,-5.900485,-6.771837,-6.907205,-9.318926,-9.865838,-0.614923,-1.146483,9.393983],[-3.493759,-8.253819,-2.405898,-2.472625,3.002692,-0.422140,-7.895682,2.162381,-9.219801],[-2.591788,6.873980,7.803925,-0.815679,0.423424,-0.327376,1.829250,-8.718738,-9.389553]],[[8.369315,1.660588,1.332090,-4.880001,-5.957152,5.327020,-6.741226,5.361951,-5.850143],[7.796507,-7.274040,0.853851,1.593291,2.671066,2.717512,3.169116,-1.560293,9.830117],[-2.518675,-7.811084,8.892033,6.144275,1.137169,2.334611,4.608518,-8.932070,-0.390832],[7.116826,-4.481753,1.718925,-1.198744,-1.965598,-9.150611,-2.111934,-8.444374,4.268466],[-3.765512,8.206851,8.816860,2.788668,6.384783,-5.039815,-5.517614,-7.042166,1.148460],[-9.950887,-5.237280,-8.617432,-4.520814,2.831304,6.516741,4.872014,2.598738,5.735468],[6.490800,7.885683,-2.733059,-5.480435,0.411171,-2.119977,9.585947,-3.335545,3.616548],[-8.791896,-1.456896,-2.881987,-6.544057,9.445139,-3.524455,-9.972143,-1.559561,0.525552]],[[1.451049,2.431635,-4.682481,9.203685,-9.845812,4.678541,5.444315,8.845395,3.862713],[4.354684,8.522692,1.166801,-7.272716,-1.090717,5.118356,6.470392,6.774940,-3.524071],[-7.668714,2.617497,3.754432,5.785318,-3.380599,-4.831160,-5.929452,5.988317,5.288002],[-9.155427,-0.835386,-4.436470,-4.645066,2.094905,-0.597010,9.537282,5.532229,7.022672],[5.539995,4.210724,6.888971,4.045815,-4.514380,-8.020117,9.151182,4.184604,2.812030],[4.768581,7.792941,1.197738,-6.043386,2.051031,-2.327834,3.536640,4.458981,6.749362],[-5.303345,-8.989198,-7.212321,-3.354344,4.305461,8.183585,4.163699,-5.868249,5.872745],[-3.096176,-8.173694,-8.918415,-0.932241,-7.176366,-7.830493,7.730393,-8.608915,2.510050]],[[-0.718041,-4.064157,1.203231,-1.795225,5.721929,-0.566337,-8.283189,-9.191632,-5.925347],[8.637125,-2.172923,-0.626600,-7.926318,-9.228732,2.554454,1.287438,8.788608,-4.551112],[5.134455,-1.962988,8.453144,-2.012836,9.044346,4.697150,9.476735,6.856150,-3.770397],[-8.479632,8.512519,-8.938635,9.718360,-7.411654,8.815537,6.798088,2.212726,0.168834],[-1.409173,-5.221081,4.404892,9.325124,9.454041,-3.220580,-0.365556,-3.937332,0.725761],[1.037320,-4.580363,-6.194181,-9.797294,-2.928915,4.610975,-7.300960,8.016192,7.073910],[-7.182290,4.621197,6.918793,-5.678745,2.520130,8.838377,2.011818,7.164372,-3.216424],[4.808758,4.826590,-0.670513,-2.661695,3.960414,-7.931139,-9.700041,0.328939,-5.479134]],[[5.932415,0.522855,1.218549,-7.339930,0.583020,-7.999968,8.492104,-0.525122,5.258368],[5.972664,9.052066,-2.029052,1.185557,7.429318,-5.792285,-0.654121,-4.781964,-8.148328],[-6.419879,-4.412033,-7.024876,-1.453894,-2.426256,2.025422,4.617181,2.716214,6.302315],[-8.073996,-8.461410,9.493363,5.850375,9.036113,6.874896,0.405427,-5.671507,9.730077],[-5.283799,-5.125483,-5.435807,0.988509,-4.645164,2.779480,-6.720901,-5.524151,9.309870],[5.712712,1.145057,-1.275794,5.384479,3.227835,1.786919,-8.885098,-9.816956,-5.635888],[-5.556681,-4.356594,9.105133,-9.677755,-8.272763,-6.657536,4.785922,-8.211106,-4.012112],[1.196882,2.950571,9.377321,-9.132849,-3.741811,-8.670426,6.481527,-2.057786,3.676524]]], dtype = "float64")#candidate|4014|(16, 8, 9)|const|float64
const_4015 = relay.const([[[2.466359,0.062113,1.168426,-4.055029,5.608292,-7.334021,-1.822411,4.217976,-0.508219],[6.516762,-8.909088,-0.297721,8.426431,-1.997756,-6.741511,-0.819695,2.238890,9.112638],[-2.689498,-4.984526,9.521881,2.172804,-8.790728,6.547937,-3.914183,-2.083311,7.390480],[-3.318463,6.968479,4.424279,0.697926,-8.759616,2.215826,5.991638,8.370644,-6.950415],[1.800871,-7.673483,-4.910789,-4.502616,-6.864896,-4.089995,7.990815,-2.751848,2.750279],[-2.724613,-9.843722,8.470778,4.061692,4.386769,-9.542866,3.981247,8.819943,-1.824478],[9.850598,-7.176255,8.797048,3.769545,-4.744447,6.650181,-3.009928,-4.193439,-9.026737],[-6.095034,-9.281338,-1.348239,4.014441,-0.225146,2.097831,6.888886,-9.172234,9.807163]],[[-5.466556,-1.583277,-3.333614,-0.868374,-1.018847,6.746616,-6.837377,-5.855400,-6.062330],[2.336280,-4.599040,-9.599881,-0.502930,-3.160477,-4.902430,-5.030371,4.018357,2.685464],[3.090318,-0.670073,-3.204907,-9.413053,0.254589,9.516659,-7.554650,-2.236176,2.915808],[-1.729485,-6.146001,-2.764422,-2.532938,0.959076,6.056537,-7.526500,-9.651326,-3.240172],[-4.517899,6.943593,7.044621,5.470965,0.999328,-7.389474,3.332897,1.599625,-1.570009],[-6.635698,-6.226310,-1.186672,-2.622506,-8.244642,5.421592,5.162080,-8.098820,8.986530],[8.913464,2.877140,-3.414399,8.453185,-5.868269,2.051478,-8.617570,-4.559722,6.502369],[2.689213,8.494266,-4.341929,-6.571620,-7.362206,-9.394281,0.611648,8.310416,2.596608]],[[-3.131881,8.003399,1.723293,6.046581,-7.712744,-5.053947,-3.153953,7.735551,-5.936473],[-3.101152,6.873757,4.870251,7.051283,7.178387,7.431077,-6.802969,-7.728407,-1.716066],[8.058743,4.021250,3.293184,7.294234,7.449069,3.090268,2.595868,9.238928,2.454822],[-5.618163,9.749221,6.157372,-9.960208,-7.623297,7.321116,-9.884675,7.053387,-5.052929],[-4.170789,-2.333056,-6.532537,1.116106,-3.062234,-6.327379,7.503505,-1.435802,-8.866344],[7.706967,9.441116,0.756165,-2.136045,8.855929,-4.007201,3.690183,-4.114247,-4.981106],[5.617079,-5.880573,-2.580598,3.282286,6.892792,-5.289302,5.029941,4.815824,-8.921992],[9.479236,-1.246495,-6.590623,-4.624428,8.908689,7.891918,4.204279,1.133904,-5.127015]],[[-2.568022,5.955197,1.358803,-9.137170,6.883070,-1.515814,-4.064858,8.045684,-8.154394],[6.486390,1.043717,9.707025,1.476135,2.072005,-5.873215,-6.065095,-9.312727,4.505740],[-5.398296,-8.728456,2.506309,1.256924,9.989605,-4.068513,-0.883544,-8.246572,4.627351],[-8.413368,8.292344,5.404971,-5.309221,-9.778744,-4.836714,-7.227137,7.903694,-9.514450],[3.178598,4.936241,-8.956140,9.757832,8.701340,-0.679753,1.798056,8.893521,1.936893],[4.048553,8.488978,-6.884073,1.157311,-2.681877,0.900542,3.886678,-6.567752,1.740428],[-3.775880,9.930327,1.601931,-3.224607,-4.987644,9.541712,7.479583,3.444984,-4.782448],[-3.791733,4.345288,3.898748,0.858236,5.369442,7.713549,7.584604,4.061893,1.643885]],[[-9.055398,-5.769673,-2.686093,-9.148384,-4.745415,-7.015053,1.665014,-3.708092,0.975789],[-4.953046,-4.341969,-1.573737,-8.010941,6.122887,-2.556072,-6.038191,7.313996,6.276867],[-2.704736,5.608815,-1.411605,-2.928298,-7.095220,-9.908615,-0.523883,-7.916520,-1.352391],[-6.124540,-0.904970,5.931391,-5.187688,-1.307844,-4.803295,9.545695,4.228193,8.281381],[-8.857845,-9.439497,-7.048576,-3.286152,7.712919,7.569358,5.859390,-7.937507,2.579988],[-5.572965,-2.183869,9.093887,3.154945,6.160127,8.176977,-9.868126,-9.009459,-7.729230],[5.099364,1.976608,-8.807032,-0.058759,-1.916228,8.710014,-0.747208,-9.555849,-7.193144],[9.379379,-9.059923,9.163989,3.422402,-6.364721,-0.699689,-1.924300,1.516682,-4.243796]],[[-2.124623,-0.469082,7.422505,8.153510,8.355248,-3.202878,5.047529,8.472075,3.000981],[-3.915899,-6.873814,-0.438018,0.160344,-1.381455,3.896403,-9.116475,-3.865293,-4.691996],[9.144309,4.750470,0.501279,-8.998603,-9.249938,0.701256,-5.720648,-8.570432,-4.951891],[4.672179,-4.989911,-7.123472,-5.085835,0.883962,5.821737,1.557004,2.335622,-2.384017],[-3.671001,-8.763809,-0.591886,-2.553882,4.877539,-6.468855,-7.943882,4.850175,9.155077],[-4.207554,8.970252,-6.310808,6.067557,7.362496,6.127056,-5.785011,-0.440254,-1.788324],[-9.497747,-8.778671,2.900776,1.078605,-7.261878,-7.735812,-2.696747,-1.851970,0.960585],[3.216224,-3.534137,6.810537,-0.895769,3.763551,-4.896780,7.035271,3.071213,-1.915185]],[[-5.542298,-7.425803,7.481165,4.925574,6.877956,6.951533,-9.810927,2.487809,9.474790],[-0.041328,-2.915269,-6.147138,3.442951,0.746311,8.685040,-4.979147,3.717334,5.955055],[3.152239,3.486064,-8.737887,9.544008,3.975557,3.429883,-3.481344,-9.083442,0.070750],[8.762760,-0.967933,7.371783,3.649233,-6.763633,-3.820833,3.534343,-6.920410,-5.652108],[5.167525,0.017882,1.718160,6.881077,0.915281,-4.633908,-2.558178,9.455949,2.946072],[1.003130,-0.281981,1.839744,5.149560,8.023483,3.876431,-9.141777,3.975812,6.619296],[-3.652372,-6.752989,-0.993275,-0.589043,9.149793,-6.113950,8.408536,8.205789,1.952350],[-5.889655,0.138230,-3.835045,-1.476526,9.844174,-4.400866,-8.372248,6.186376,-6.421818]],[[0.159628,-6.840137,1.759484,8.227702,-4.865547,-8.230328,-9.604286,-9.736292,-7.660124],[-8.619115,8.115277,2.991914,8.409998,-0.860458,-9.881922,-1.891791,-3.283393,-0.928994],[6.232437,-1.491756,-3.278681,1.323928,3.981207,-9.384693,-0.956477,-7.668345,-9.295789],[-0.548714,3.464096,-0.691632,9.897479,-7.101520,-0.860751,8.579178,-8.874774,4.651140],[5.568417,2.696678,8.151986,-0.751152,5.513422,0.714940,-2.127778,3.403264,8.116924],[-1.951627,-9.768545,-7.280142,5.644170,5.263943,6.211917,6.635229,1.605049,4.522458],[-3.179936,6.085151,7.997854,-8.513566,-0.186084,7.185807,6.246901,-3.331168,-0.340960],[-6.192264,5.459302,-7.345629,4.339585,6.995414,-0.339681,0.804305,-9.637303,-7.776678]],[[4.462193,-0.723220,-4.236539,8.760257,3.844596,-3.732280,-7.505994,0.219951,-1.874645],[-3.742971,3.160248,-6.212830,1.432390,0.887058,-4.757574,6.823880,-0.985257,9.383511],[7.970322,-4.758471,3.090082,1.847032,-3.343620,9.541059,-8.148727,-1.893303,6.468915],[9.518823,-1.739200,-2.124107,9.839903,-1.534858,2.761825,-2.276433,1.208958,8.900996],[5.641315,-6.367786,-1.732477,-4.384498,-2.144877,-3.457115,-6.263027,-1.732164,-0.258222],[0.077230,-7.786414,8.224569,-8.598045,-5.230421,1.224440,-9.466032,-3.850114,-3.003590],[-4.497939,3.798662,5.243382,-1.601961,-9.365127,-1.541312,1.912755,-3.236394,2.099444],[-7.650772,0.837896,7.593378,-8.582579,-6.936814,7.780295,7.716991,8.365661,-1.400130]],[[8.541580,-6.719238,2.829399,-6.894871,4.097529,-2.442317,7.309069,-2.170914,4.154820],[2.423305,5.572520,8.336658,-1.026315,-6.290522,8.904691,-9.369755,8.881198,-9.616421],[9.968581,0.267061,8.520888,4.403822,-9.379662,-0.698046,-5.502248,-3.642315,4.092960],[-9.724248,-8.581319,6.752261,0.931635,-4.665831,7.302219,4.647403,-4.521663,4.988159],[-0.593329,-3.837674,-0.793858,-2.685324,-4.017779,-3.652604,-1.262985,0.923787,1.408881],[2.913962,-6.780707,4.914126,-9.850819,-4.413462,9.436722,1.727691,-8.269498,0.195921],[-3.223104,2.569152,-3.199587,-6.342218,-8.520001,7.727532,-3.513262,-5.639408,5.561195],[-3.093563,-0.062717,-7.878893,-0.261492,0.282090,2.540597,8.473327,4.054185,-4.187585]],[[-0.937526,-6.340561,-5.473279,-3.783577,-6.484476,8.476387,-6.103067,-1.964566,-7.947147],[9.235073,-3.521011,7.262449,8.515395,2.700242,-2.513669,-0.474237,-5.541124,8.762344],[-4.963006,5.111517,9.817612,-5.956831,4.610191,-5.533517,2.846898,-1.659287,2.719922],[2.116597,3.311566,1.025634,-6.672466,-7.699680,-2.960643,3.868681,-7.022751,-5.263051],[4.026208,2.149823,1.481644,-4.343857,6.800816,-1.793426,4.062152,7.681597,-9.897487],[-4.478597,-5.121445,7.796645,-2.992682,-3.515153,0.805741,-8.399782,3.545024,3.241094],[-2.312407,-8.165309,7.543567,-4.492107,-8.522089,7.621872,-9.672069,-7.138255,-1.283622],[6.248979,-3.149792,9.736242,-8.062926,0.613041,-4.857940,-8.741198,-5.230620,-2.995472]],[[3.215745,-1.252570,6.936652,-7.789336,0.820345,-2.862516,-0.677435,4.196507,1.887412],[0.840383,-6.910285,-9.386764,4.341431,2.323071,9.999189,6.074534,-7.365219,-0.255187],[1.566334,9.230597,7.351550,3.154184,-5.186095,7.583925,2.038267,4.329678,6.574168],[-9.851295,9.858078,-7.041093,-6.137790,2.451220,-7.585859,-3.090536,8.759871,-8.658781],[7.783256,-9.889688,-5.153980,-0.659654,-4.371615,-0.886156,6.860776,0.635963,-0.984649],[1.704167,0.963143,-4.449510,-1.486545,-0.252714,-1.213447,5.426274,-9.820107,2.284480],[0.082614,-8.454115,-4.061002,4.935686,-0.202510,-2.661647,-3.614172,0.263470,-8.035050],[2.519149,-5.467275,-0.714384,4.473420,-5.128505,-6.089216,-4.453353,5.171026,7.025314]],[[7.970688,9.148784,3.279871,5.158458,5.083831,-2.562940,-6.412086,2.817329,5.845070],[2.403114,0.154823,-9.706284,-3.104646,3.051774,9.718530,7.983953,4.437443,-7.151230],[-8.111406,-9.751348,-6.243593,8.534500,5.573501,6.586719,7.843069,3.214341,4.283997],[-7.901009,-2.289115,2.047489,-9.869724,6.484404,-0.860766,2.347839,0.478680,-3.453241],[-0.956009,-3.527570,-8.435185,-7.061693,-5.535085,-2.595207,3.643568,0.747394,-9.631781],[4.798712,3.243316,-5.996923,9.943880,-1.937796,-8.015417,-7.020029,2.017899,-8.639377],[4.931221,6.635393,-0.912296,4.238116,-8.349668,5.117467,2.157138,3.624400,9.450854],[-1.763708,2.632790,8.788638,-3.379274,-7.166427,-1.649670,5.481154,7.768442,-1.651117]],[[7.184089,0.536493,-3.678409,-0.348811,-7.433603,8.518682,-3.312377,-7.748903,-3.658268],[9.219346,0.928086,-8.768835,-4.273419,8.830953,-0.996242,4.294233,5.983138,9.122182],[4.782873,-0.628323,-0.372680,-9.866811,0.728620,-4.940962,-1.591664,-2.340822,-4.440052],[-4.869613,6.509125,-8.071659,5.514147,6.093646,3.378086,-4.009527,-9.937912,-5.335425],[-5.744739,0.944299,2.407478,-4.280313,9.325202,4.578976,6.795211,-9.697121,-4.223668],[3.846726,-4.401618,-9.891170,8.513591,3.494651,0.274833,-4.811376,-7.365486,-6.239604],[-7.906056,1.704540,7.099859,6.083113,-0.043027,4.246695,-3.412345,-0.868619,5.543713],[-3.802258,-3.249185,5.021777,9.953978,4.169626,2.730418,9.671509,-6.927265,-2.225592]],[[-7.044383,0.667315,4.174916,1.703067,6.155201,5.274794,-3.576957,5.362045,1.073669],[8.017366,8.666031,-7.821064,-3.346025,-1.583278,-4.939526,-2.527955,-3.378107,-8.549119],[7.318535,6.503119,6.536365,4.406871,8.176743,-2.389689,9.504783,1.880793,5.710865],[-5.473838,-7.468895,-9.897595,7.195039,9.420247,-3.535090,3.458010,3.582706,-3.999183],[8.391143,-5.968512,9.481628,3.669475,-5.208719,7.549828,-6.192491,9.663316,-8.476107],[-1.292910,6.992172,3.117541,2.575083,6.993138,9.401522,4.665933,5.477245,0.166410],[2.627511,-0.722036,-1.206696,4.434247,4.164513,2.672782,-1.108493,7.194669,5.307661],[-8.890938,6.183110,5.287742,3.053565,-9.314233,-7.439724,0.617036,-4.441472,-4.101004]],[[2.376260,-8.471327,-0.021632,-4.009403,1.318971,-0.433782,-0.095096,9.721790,-3.087118],[9.729330,3.057467,8.801231,4.078313,7.915058,-9.575961,-0.844240,3.459376,-9.180379],[-6.677473,8.188105,-1.268752,-8.822689,-3.778169,-2.001333,-0.805040,-4.027892,7.510789],[-5.016308,1.899414,4.597189,2.824858,4.636317,-6.877070,-1.399686,8.399837,-2.550231],[-4.992676,-2.071475,-9.083345,0.061905,-6.458048,-9.124239,2.683573,1.674159,8.826918],[-5.451670,-3.963563,6.756636,7.823221,-4.460754,7.515872,-6.842759,9.954672,-1.664865],[-4.156833,0.206730,-2.745802,-7.060189,-4.500291,-8.691091,-6.190461,-6.078503,-8.902574],[9.800256,1.842316,-2.797517,-7.346997,-1.300563,-7.095379,6.504000,9.679555,1.921013]]], dtype = "float64")#candidate|4015|(16, 8, 9)|const|float64
bop_4016 = relay.minimum(const_4014.astype('float64'), relay.reshape(const_4015.astype('float64'), relay.shape_of(const_4014))) # shape=(16, 8, 9)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_4019 = relay.TupleGetItem(func_3259_call(), 0)
call_4020 = relay.TupleGetItem(func_3260_call(), 0)
output = relay.Tuple([bop_4016,call_4019,])
output2 = relay.Tuple([bop_4016,call_4020,])
func_4026 = relay.Function([], output)
mod['func_4026'] = func_4026
mod = relay.transform.InferType()(mod)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mutated_mod.get_global_var('func_4026')
call_4027 = func_4026_call()
output = call_4027
func_4028 = relay.Function([], output)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4008_call = mod.get_global_var('func_4008')
func_4010_call = mutated_mod.get_global_var('func_4010')
call_4031 = func_4008_call()
call_4032 = func_4008_call()
output = call_4031
output2 = call_4032
func_4051 = relay.Function([], output)
mod['func_4051'] = func_4051
mod = relay.transform.InferType()(mod)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4052 = func_4051_call()
output = call_4052
func_4053 = relay.Function([], output)
mutated_mod['func_4053'] = func_4053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_4075 = func_2685_call()
call_4076 = func_2685_call()
output = call_4075
output2 = call_4076
func_4096 = relay.Function([], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mutated_mod.get_global_var('func_4096')
call_4097 = func_4096_call()
output = call_4097
func_4098 = relay.Function([], output)
mutated_mod['func_4098'] = func_4098
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4105 = relay.const([[[-10,4,3,-3,9,4],[7,2,6,-7,4,-9],[-3,-3,-8,-1,-2,-2],[-8,-3,10,2,3,-1],[-3,-3,4,-5,-5,-7],[7,-1,-6,6,-9,2],[6,-1,7,7,8,5],[4,-10,10,3,-9,6],[9,-1,1,-2,-5,-6],[-4,-2,-7,-6,-9,-1],[6,-4,-2,10,2,-2],[5,10,8,4,-10,-6],[-3,9,9,-1,-6,1],[7,9,-5,2,8,1],[9,10,10,-8,8,-7]],[[7,-5,-2,3,10,-9],[-7,-6,-3,3,-10,3],[8,-5,7,7,-9,-9],[9,-8,-3,3,-8,-5],[5,4,10,7,7,8],[5,9,8,-3,-9,-7],[10,2,-8,-10,4,10],[1,4,1,-1,-7,-8],[-10,1,4,2,7,-1],[-3,-10,6,3,-7,-3],[-8,3,-9,-10,4,6],[1,-1,4,-5,-4,5],[5,7,-4,-10,-9,10],[6,4,-3,-5,2,3],[9,-4,1,4,7,9]],[[2,-6,4,8,5,-9],[4,-1,1,2,-1,2],[-8,-9,-8,8,8,10],[9,-2,-9,3,5,10],[9,6,10,2,-6,5],[-9,-3,-9,9,-2,4],[-9,7,-4,-2,10,-3],[-7,10,-7,-7,-10,-3],[3,6,-2,7,9,7],[-2,6,-8,4,-3,-1],[1,-7,8,9,2,7],[8,-7,-9,-8,-5,2],[-3,-1,3,5,9,7],[1,-9,3,-9,9,8],[2,8,10,1,8,-10]],[[-3,7,8,-9,3,-4],[-1,7,-10,-9,-1,-8],[-9,-6,2,-8,-2,6],[2,-1,-1,-9,-9,-4],[1,1,-10,-3,-9,-4],[5,-5,8,9,7,2],[4,-2,-10,-3,-10,3],[5,-7,-8,-7,-4,2],[-8,-3,-10,4,-8,8],[-3,-1,7,-10,-3,-1],[9,-4,2,6,-6,6],[-4,9,-9,2,-7,-4],[8,-9,3,1,-7,7],[-10,1,2,9,10,-7],[-2,10,1,-8,-9,9]],[[-8,-6,-5,8,5,-9],[-9,-2,4,-7,-2,10],[8,-4,6,9,-4,-10],[-9,4,8,-1,-2,5],[6,-4,8,2,3,-2],[-9,-2,-7,4,1,-10],[-1,-5,7,9,-3,-2],[1,6,1,-3,-3,5],[-7,6,9,6,-8,-5],[2,-10,8,-5,-9,-3],[1,1,10,3,-9,5],[8,9,4,-3,-7,1],[-7,6,-9,6,-4,-5],[-7,4,-1,5,2,-5],[8,-3,3,2,-2,5]],[[7,5,-8,-8,1,2],[-2,-1,-9,-1,4,-1],[9,6,2,-5,3,-2],[2,-8,1,3,5,10],[-10,-2,-4,-1,6,6],[-9,7,-3,-4,9,8],[-2,-7,-6,-2,7,-1],[6,-4,1,8,-3,3],[6,-10,9,-8,8,-7],[-2,1,4,-10,5,-1],[-6,-6,8,6,7,8],[6,7,1,10,-5,-3],[-4,9,7,-6,3,-1],[-3,2,6,6,-7,-6],[6,-2,-9,-10,-7,2]]], dtype = "uint64")#candidate|4105|(6, 15, 6)|const|uint64
const_4106 = relay.const([[[-7,-3,-8,6,3,1],[2,1,-10,8,-3,-7],[-9,-5,10,-10,-5,-1],[5,9,3,-3,-3,6],[5,-1,4,-7,6,2],[4,-5,7,1,3,10],[-1,-8,9,-8,-8,5],[6,7,-8,10,-2,-10],[-10,9,-1,7,3,-8],[9,-7,6,1,5,-6],[6,2,10,7,3,3],[-6,-7,8,-3,3,6],[-1,-5,-6,9,8,1],[3,10,-7,-1,-5,-4],[-4,-2,7,8,6,6]],[[4,-5,7,10,6,-6],[-3,6,5,-3,-8,-8],[2,5,-9,1,8,-8],[3,-7,-10,-2,1,-10],[-9,-7,-7,-2,-1,6],[-1,5,-2,4,-3,-4],[3,-3,-5,1,8,-3],[-3,6,3,5,-9,-3],[5,8,-8,8,-10,8],[-8,1,8,-2,10,-4],[10,-7,2,-3,9,5],[-6,1,-6,1,-7,-1],[-8,-6,3,-1,1,-3],[10,-2,-7,-6,-7,-9],[3,8,-6,-7,-4,-3]],[[2,9,2,8,7,-10],[-6,9,3,-8,-2,8],[-5,-2,-5,5,9,-5],[-7,-4,5,-3,10,4],[-2,2,9,1,3,5],[10,-7,6,-9,-7,9],[7,-10,-4,2,7,1],[4,-1,7,6,8,6],[5,8,10,-3,9,-6],[8,-10,-4,2,-1,4],[9,-7,3,-2,9,-2],[7,-6,9,-9,1,-3],[-8,-4,7,1,10,-2],[9,5,4,-7,-3,7],[-6,-10,-6,4,9,7]],[[8,2,3,-2,8,2],[-5,10,5,-1,-4,10],[7,7,3,-9,-1,-2],[-5,-1,-2,-4,6,-6],[-3,-2,1,10,5,1],[1,-3,-3,1,9,-2],[4,7,-1,-1,-3,3],[2,-1,3,8,-4,-8],[-4,-6,10,-4,-5,4],[-8,-2,7,-3,1,7],[8,7,6,10,6,-3],[-3,3,-9,-3,4,-8],[-1,10,-6,7,2,-5],[-1,8,-2,-6,-7,-2],[5,-5,-3,8,3,7]],[[4,-3,-7,-5,-5,6],[4,-2,-10,-9,-4,-4],[7,-10,-1,-10,-8,-3],[3,-3,-3,-6,4,9],[-4,9,-3,2,6,-10],[8,3,-5,3,8,-8],[9,-7,-4,7,5,6],[8,7,2,2,-9,8],[-3,6,10,-2,8,2],[-6,-9,-4,8,-5,-7],[-4,6,5,-1,-6,-2],[9,-5,-3,-8,-5,-9],[-2,-2,-4,3,-9,-3],[-5,-7,-9,7,-4,6],[9,-8,1,-5,6,1]],[[6,8,-4,-2,-5,-2],[-9,-2,-3,-10,-4,-9],[8,9,9,4,5,3],[-2,8,5,2,9,6],[-4,-6,-5,-3,-9,4],[4,5,9,1,-2,-9],[-9,10,-4,-1,3,5],[2,-10,2,-9,4,-8],[-10,4,-9,1,-3,7],[-9,4,-6,9,-8,-9],[3,-9,-1,-9,7,5],[6,4,-8,7,-9,-9],[-3,-5,7,3,1,6],[10,-5,9,-3,-7,-8],[-7,-4,7,3,2,-1]]], dtype = "uint64")#candidate|4106|(6, 15, 6)|const|uint64
bop_4107 = relay.greater_equal(const_4105.astype('bool'), relay.reshape(const_4106.astype('bool'), relay.shape_of(const_4105))) # shape=(6, 15, 6)
output = relay.Tuple([bop_4107,])
output2 = relay.Tuple([bop_4107,])
func_4112 = relay.Function([], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
output = func_4112()
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_4124 = relay.TupleGetItem(func_2878_call(), 0)
call_4125 = relay.TupleGetItem(func_2879_call(), 0)
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
var_4127 = relay.var("var_4127", dtype = "float64", shape = (1248,))#candidate|4127|(1248,)|var|float64
call_4126 = func_1381_call(relay.reshape(var_4127.astype('float64'), [16, 6, 13]))
call_4128 = func_1381_call(relay.reshape(var_4127.astype('float64'), [16, 6, 13]))
output = relay.Tuple([call_4124,call_4126,var_4127,])
output2 = relay.Tuple([call_4125,call_4128,var_4127,])
func_4132 = relay.Function([var_4127,], output)
mod['func_4132'] = func_4132
mod = relay.transform.InferType()(mod)
var_4133 = relay.var("var_4133", dtype = "float64", shape = (1248,))#candidate|4133|(1248,)|var|float64
output = func_4132(var_4133)
func_4134 = relay.Function([var_4133], output)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_4177 = func_2685_call()
call_4178 = func_2685_call()
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
const_4182 = relay.const([[-7,2,-4,10,-2,4,-5,-5,4,-10,-1,-1,10,-5,-1,-7,-1,10,9,3,-8,1,10,4,-1,-6,-7,1,-6,6,-5,-8,2,-4,-10,2,-3,-3,10,8,-2,-4,-3,6,-1,-9,-7,-3,-2,10,1,2,-5,-9,-2,6,3,-1,-5,8,-3,-2,-1,-7,-1,7,-1,8,-3,10,-5,-9,8,-7,-1,9,-9,2,6,-4,-8,-9,-1,-4,-3,2,-5,-8,-3,6,-7,7,5,-7,1,-8,-4,8,5,2,8,-7,4,-6,8,10,6,-5,-9,4,6,6,8,-7,-8,10,-2,-1,-2,-5,10,8,-5,8,7,-1,-1,-5,3,-1,-3,-10,-8,3,-7,-10,6,-2,-3,2,-10,5,1,10,3,8,-2,3,9,-8,6,3,8,-10,8,2,-6,9,8,5,3,-9,10,-5,-10,5,-2,6,6,2,-2,1,-3,7,-2,-3,4,9,4,2,8,-9,-8,4,-3,-7,3,2,8,7,10,4,2,9,-1,9,8,2,5,9,2,-4,2,1,5,-2,8,10,-1,-5,10,4,3,6,-3,7,-1,-2,-7,4,9,-9,-2,-6,-10,7,-6,-9,-6,9,8,-7,-7,1,-2,-7,1,-9,-7,-5,-5,-6,-3,9,8,3,4,-6,-8,6,-1,2,-1,4,5,4,4,-10,4,10,-9,-9,-10,-7,-1,-10,-8,-6,-3,-8,2,10,-1,-4,-2,-7,5,6,-9,8,6,2,-10,4,9,-4,3,8,6,8,-6,1,-9,1,-9,-7,6,-2,6,-4,7,7,-1,5,6,-5,6,-8,-4,2,9,-10,-9,-5,-8,1,6,7,-2,7,6,4,10,1,-4,-7,4,-10,-10,7,2,5,-7,-7,5,-1,-6,6,-9,-9,-10,6,4,7,8,3,-4,-10,-1,2,-9,-8,7,2,-3,-9,-9,-6,-8,8,7,-8,8,-3,-4,-6,7,-9,-9,2,-2,-4,-5,-6,5,9,-5,-4,4,3,-2,1,4,8,1,-7,1,5,-4,-9,7,3,-6,7,4,-9,1,-8,2,-8,7,7,9,-6,-5,3,2,5,3,-9,2,-3,-10,7,6,6,-3,3,-6,-8,-3,-4,9,4,-9,-6,3,-5,-10,-6,8,-2,-4,4,4,-1,-4,-2,4,2,-9,6,8,6,4,6,3,-2,5,-4,-9,-5,-2,4,3,1,4,5,-1,-4,2,-6,10,-1,-5,5,2,6,7,7,-6,3,8,-6,10,1,-1,-8,-4,-7,3,-2,4,-8,8,2,-6,5,-4,10,-10,5,-7,-2,1,1,-3,-1,-10,9,-6,3,-9,-3,-1,6,-3,5,-3,2,-10,2,-7,2,1,7,-4,9,-3,6,-5,-7,5,-2,-3,-4,9,-6,-8,6,-2,9,5,1,10,2,-2,-6,5,5,2,8,-7,10,5,-7,8,2,3,1,-1,-9,-6,-7,-2,-8,4,-8,2,-4,-3,-1,6,4,7,3,2,2,-4,10,3,-10,4,6,5,3,3,-9,-9,10,-10,-5,-4,2,-6,-6,8,4,6,-8,-1,9,4,5,-2,-9,-8,5,-3,-2,9,8,3,-9,-3,2,-7,6,-10,5,5,-4,-2,7,-8,-2,8,-2,3,2,8,8,6,7,6,-7,9,8,-4,5,-5,-9,-9,3,-4,-8,10,10,-1,-1,-10,-1,-2,10,-3,8,-4,-10,9,8,10,-6,1,6,2,2,6,10,-10,5,-7,-1,1,-7,7,-2,1,-7,3,-8,-1,-6,4,8,-10,9,-8,-10,2,-7,-3,5,-8,-6,-8,-5,-5,-9,-1,-2,1,-8,-2,8,-6,-4,-8,2,-3,-7,5,1,7,8,8,8,-3,-8,7,-2,5,-1,-7,8,-3,1,9,7,-4,3,-7,9,7,7,-5,6,-5,2,-10,-9,5,1,4,9,3,7,-3,9,6,-6,3,3,-9,-7,5,-3,10,6,2,-3,7,2,-8,2,7,7,9,7,6,10,3,-4,7,-8,-7,-3,-1,-6,8,-5,5,-6,-3,-4,-8,-10,8,-4,6,-6,-1,9,6,2,-5,-10,8,-5,-8,10,3,-6,6,6,2,-6,10,6,1,1,-3,-6,-6,4,10,-9,3,-4,7,-2,-1,-1,-2,-9,7,10,-3,-2,7,-5,7,-4,1,-1,7,5,-2,10,-7,8,1,3,4,2,-9,-2,3,1,3,2,7,-9,8,-2,8,-9,10,2,-7,-7,5,7,7,-4,1,-10,5,-7,9,-8,-9,-10,8,5,8,4,-3,-3,-8,-9,-1,7,-10,-9,-2,-10,3,-2,-1,6,8,7,10,2,-5,9,1,3,8,4,8,-5,-3,-2,5,-6,-10,4,2,-10,-6,4,4,-3,-9,4,-9,8,5,8,10,3,-8,-1,-3,-7,1,10,-9,8,8,-9,9,10,-9,-4,-4,-10,3,1,4,9,-1,1,-2,10,-8,-8,8,3,-8,-8,-3,3,2,6,-3,-3,3,-4,2,-4,5,-9,10,10,-8,-10,-7,-9,-10,4,9,8,3,7,-10,-8,-3,-7,9,-2,-6,-8,-5,1,-9,9,-4,1,10,5,-7,4,7,4,1,-3,-6,9,5,9,6,-3,6,10,-2,-8,7,10,3,10,-7,10,-3,9,10,-3,7,-9,-9,-10,5,1,-10,-5,-2,9,-9,7,10,9,3,8,-9,-4,9,1,-2,7,-3,4,-9,-7,4,2,9,5,7,-1,-4,5,10,9,-8,3,9,7,2,8,-9,1,-6,-9,4,7,6,3,-10,6,-9,7,8,-7,9,8,10,3,8,8,3,-1,-1,-5,-9,7,1,7,10,-2,1,-5,9,-8,-2,-8,4,-4,-6,-4,-9,4,-6,1,-6,3,1,10,-7,-7,-5,-4,6,3,-4,-8,9,4,4,-9,8,-2,1,-9,2,-7,-2,-7,-6,2,-9,-6,-6,-4,-8,3,-7,3,8,-8,7,-9,-6,-9,7,4,-6,6,3,-2,-5,4,-1,1,10,-4,-5,-10,-9,3,2,6,10,-10,2,-5,-1,2,-10,3,-4,-9,-10,-10,-7,9,-2,9,-4,8,-5,6,4,7,-1,-3,9,-4,10,10,-8,-9,3,-4,-1,5,-5,-9,9,2,6,6,7,4,7,7,4,-6,5,4,-4,9,1,2,-4,1,10,-5,1,-8,-5,4,2,6,1,3,-8,9,-2,9,-5,-6,-2,-4,2,1,-7,-9,-6,8,5,-7,6,2,6,6,6,6,4,-2,4,-6,-10,-1,9,6,-1,-7,-10,6,4,5,3,7,3,-4,3,-9,-6,-1,-2,-1,1,-9,-8,-7,5,2,5,-5,-9,7,-2,6,1,-3,4,3,1,-6,-6,-3,5,1,5,10,7,-7,-6,-7,8,-7,3,10,5,-4,1,4,-3,5,2,-3,5,-8,-10,-9,4,-3,-7,2,10,-2,5,6,10,-5,9,1,-7,6,-5,-8,-10,-9,-5,-8,9,4,6,2,-3,10,7,5,-4,1,-3,-2,9,1,-2,-9,-9,-3,-4,4,-3,9,-8,2,-5,-1,4,-3,-5,-9,3,6,-2,8,-5,3,-7,-8,7,4,4,2,9,1,2,-10,7,-7,-6,-6,7,1,-4,-6,-8,4,-8,-10,-4,10,2,-10,-6,9,-4,-5,6,3,-4,10,-1,-3,-1,-5,-7,-10,5,-9,9,-2,-7,-1,2,1,-5,7,-5,5,7,-10,5,3,-2,-10,4,-3,1,-2,-10,-1,5,-4,-10,6,-9,2,-6,5,-1,8,-8,-4,5,-2,-10,1,-10,-8,4,-10,8,-8,-8,2,-9,-3]], dtype = "int8")#candidate|4182|(1, 1452)|const|int8
call_4181 = relay.TupleGetItem(func_3640_call(relay.reshape(const_4182.astype('int8'), [1452,]), relay.reshape(call_4177.astype('float64'), [11, 14, 7]), ), 2)
call_4183 = relay.TupleGetItem(func_3644_call(relay.reshape(const_4182.astype('int8'), [1452,]), relay.reshape(call_4177.astype('float64'), [11, 14, 7]), ), 2)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_4201 = relay.TupleGetItem(func_3259_call(), 0)
call_4202 = relay.TupleGetItem(func_3260_call(), 0)
output = relay.Tuple([call_4177,call_4181,const_4182,call_4201,])
output2 = relay.Tuple([call_4178,call_4183,const_4182,call_4202,])
func_4212 = relay.Function([], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
output = func_4212()
func_4213 = relay.Function([], output)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_4279 = func_4096_call()
call_4280 = func_4096_call()
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
var_4315 = relay.var("var_4315", dtype = "float64", shape = (1248,))#candidate|4315|(1248,)|var|float64
call_4314 = func_1381_call(relay.reshape(var_4315.astype('float64'), [16, 6, 13]))
call_4316 = func_1381_call(relay.reshape(var_4315.astype('float64'), [16, 6, 13]))
func_2993_call = mod.get_global_var('func_2993')
func_2997_call = mutated_mod.get_global_var('func_2997')
const_4321 = relay.const(9, dtype = "uint16")#candidate|4321|()|const|uint16
var_4322 = relay.var("var_4322", dtype = "uint16", shape = (840,))#candidate|4322|(840,)|var|uint16
const_4323 = relay.const([9.306788,1.182697,4.951887,0.312457,-0.591220,5.522309,1.736190,4.993147,-3.972830,-2.967096,-3.736905,5.192736,7.657865,-5.316731,7.126564,9.247793,1.290961,6.149931,-2.162520,9.919821,1.914341,7.607771,9.050879,-3.955206], dtype = "float64")#candidate|4323|(24,)|const|float64
call_4320 = relay.TupleGetItem(func_2993_call(relay.reshape(const_4321.astype('uint16'), []), relay.reshape(var_4322.astype('uint16'), [15, 4, 14]), relay.reshape(const_4323.astype('float64'), [12, 2]), ), 1)
call_4324 = relay.TupleGetItem(func_2997_call(relay.reshape(const_4321.astype('uint16'), []), relay.reshape(var_4322.astype('uint16'), [15, 4, 14]), relay.reshape(const_4323.astype('float64'), [12, 2]), ), 1)
output = relay.Tuple([call_4279,call_4314,var_4315,call_4320,const_4321,var_4322,const_4323,])
output2 = relay.Tuple([call_4280,call_4316,var_4315,call_4324,const_4321,var_4322,const_4323,])
func_4338 = relay.Function([var_4315,var_4322,], output)
mod['func_4338'] = func_4338
mod = relay.transform.InferType()(mod)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4338_call = mutated_mod.get_global_var('func_4338')
var_4340 = relay.var("var_4340", dtype = "float64", shape = (1248,))#candidate|4340|(1248,)|var|float64
var_4341 = relay.var("var_4341", dtype = "uint16", shape = (840,))#candidate|4341|(840,)|var|uint16
call_4339 = func_4338_call(var_4340,var_4341,)
output = call_4339
func_4342 = relay.Function([var_4340,var_4341,], output)
mutated_mod['func_4342'] = func_4342
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4352 = relay.var("var_4352", dtype = "int64", shape = (5, 6, 12))#candidate|4352|(5, 6, 12)|var|int64
const_4353 = relay.const([[[-7,-7,6,2,1,-5,-8,3,-8,-9,3,-2],[9,4,-5,5,5,4,7,7,5,-6,-4,9],[3,-10,5,-9,-4,-8,-9,-10,-4,-6,-2,10],[-4,10,-7,-9,4,9,3,-8,2,7,8,6],[4,2,6,1,10,9,8,-8,-7,-6,6,9],[-7,-1,-4,6,10,3,-1,9,8,7,-6,-10]],[[1,-7,-9,4,3,-2,2,-6,-5,-10,3,-8],[-7,-9,-9,8,-5,6,1,2,7,2,2,-4],[7,5,-3,-3,9,3,-8,-9,-4,-1,-7,9],[-6,5,-9,5,3,7,3,6,9,2,-8,4],[-6,-9,7,8,10,-1,2,-6,8,-1,-1,-4],[4,-10,7,-8,-9,7,-4,-1,-10,-5,10,9]],[[3,8,-7,-6,8,-5,10,-7,10,-6,1,-1],[10,7,-7,8,6,-6,8,-4,-8,1,-4,-8],[4,-1,3,-8,-9,-3,-1,8,6,-10,6,3],[5,-1,-6,-3,4,5,-9,-10,-8,-7,-3,6],[-1,-6,-10,-8,-6,-4,-9,-1,5,2,-9,-4],[-5,-5,8,-10,8,3,-6,3,-1,2,-7,4]],[[-9,6,9,6,-1,-4,2,5,9,-8,-8,-7],[-9,10,4,-8,2,-2,1,5,-10,-8,-3,4],[10,9,6,-10,6,1,-6,2,10,-9,3,5],[-2,-10,8,7,8,8,1,-9,8,5,-8,3],[3,10,-7,3,-8,4,-7,-5,-6,-8,-1,-4],[-8,6,-7,3,3,10,-10,7,6,-5,-4,-7]],[[-5,7,-6,8,1,-8,-3,2,8,-5,-5,-10],[6,3,8,-10,8,9,-10,8,1,2,10,-1],[6,-9,-8,5,4,4,9,-5,9,3,-10,-1],[-6,6,-8,4,-3,-6,-2,5,-8,-8,-2,8],[-6,3,1,-7,-8,2,-10,-10,9,-3,9,-7],[-8,-8,5,-2,-6,-6,-10,3,-8,3,-1,-2]]], dtype = "int64")#candidate|4353|(5, 6, 12)|const|int64
bop_4354 = relay.less(var_4352.astype('bool'), relay.reshape(const_4353.astype('bool'), relay.shape_of(var_4352))) # shape=(5, 6, 12)
var_4357 = relay.var("var_4357", dtype = "bool", shape = (5, 6, 12))#candidate|4357|(5, 6, 12)|var|bool
bop_4358 = relay.bitwise_or(bop_4354.astype('int16'), relay.reshape(var_4357.astype('int16'), relay.shape_of(bop_4354))) # shape=(5, 6, 12)
uop_4372 = relay.asin(const_4353.astype('float32')) # shape=(5, 6, 12)
uop_4383 = relay.cosh(uop_4372.astype('float32')) # shape=(5, 6, 12)
bop_4393 = relay.logical_xor(uop_4383.astype('int8'), relay.reshape(uop_4372.astype('int8'), relay.shape_of(uop_4383))) # shape=(5, 6, 12)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
var_4402 = relay.var("var_4402", dtype = "float32", shape = (1008,))#candidate|4402|(1008,)|var|float32
call_4401 = relay.TupleGetItem(func_582_call(relay.reshape(var_4402.astype('float32'), [14, 12, 6])), 1)
call_4403 = relay.TupleGetItem(func_585_call(relay.reshape(var_4402.astype('float32'), [14, 12, 6])), 1)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_4408 = relay.TupleGetItem(func_2503_call(), 0)
call_4409 = relay.TupleGetItem(func_2505_call(), 0)
func_3894_call = mod.get_global_var('func_3894')
func_3898_call = mutated_mod.get_global_var('func_3898')
const_4414 = relay.const([-5,1,-6,5,7,4,7,-10,-10,-8,7,8,-4,-2,-1,4,-2,3,-2,-7,-8,6,-9,-10,5,6,2,7,8,-6,-8,7,7,-10,-8,-7,8,-2,8,-9,-2,7,8,-1,-5,7,7,-5,-4,5,-10,8,6,8,-6,8,-2,1,3,6,8,1,-9,-2,-1,-5,-9,-10,7,-8,-7,-10,-3,6,-4,4,-8,-9,-3,-10,-10,-5,1,6,7,2,2,2,-4,3,-3,-2,-2,-7,-6,9,-3,-6,2,-4,-6,3,-8,-3,-5,10,3,-8,7,-2,-6,6,7,-6,4,10,-4,-7,-9,-5,-9,2,-9,9,-10,8,3,-5,-7,-1,-9,-10,5,-5,8,-1,-7,8,-5,-3,-5,-9,6,-9,5,4,3,8,9,-4,-5,5,10,-7,8,10,-10,4,-4,-9,-4,-2,-6,7,-6,-4,8,3,3,-2,2,6,4,-10,-4,-7,1,-5,2,2,-3,-8,-6,-8,1,-9,6,4,7,8,2,-10,-7,-10,7,6,10,2,3,6,1,-6,3,5,-6,9,-8,-3], dtype = "int16")#candidate|4414|(208,)|const|int16
var_4415 = relay.var("var_4415", dtype = "uint8", shape = (512,))#candidate|4415|(512,)|var|uint8
call_4413 = relay.TupleGetItem(func_3894_call(relay.reshape(const_4414.astype('int16'), [208,]), relay.reshape(var_4415.astype('uint8'), [2, 256]), ), 4)
call_4416 = relay.TupleGetItem(func_3898_call(relay.reshape(const_4414.astype('int16'), [208,]), relay.reshape(var_4415.astype('uint8'), [2, 256]), ), 4)
output = relay.Tuple([bop_4358,bop_4393,call_4401,var_4402,call_4408,call_4413,const_4414,var_4415,])
output2 = relay.Tuple([bop_4358,bop_4393,call_4403,var_4402,call_4409,call_4416,const_4414,var_4415,])
func_4422 = relay.Function([var_4352,var_4357,var_4402,var_4415,], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4422_call = mutated_mod.get_global_var('func_4422')
var_4424 = relay.var("var_4424", dtype = "int64", shape = (5, 6, 12))#candidate|4424|(5, 6, 12)|var|int64
var_4425 = relay.var("var_4425", dtype = "bool", shape = (5, 6, 12))#candidate|4425|(5, 6, 12)|var|bool
var_4426 = relay.var("var_4426", dtype = "float32", shape = (1008,))#candidate|4426|(1008,)|var|float32
var_4427 = relay.var("var_4427", dtype = "uint8", shape = (512,))#candidate|4427|(512,)|var|uint8
call_4423 = func_4422_call(var_4424,var_4425,var_4426,var_4427,)
output = call_4423
func_4428 = relay.Function([var_4424,var_4425,var_4426,var_4427,], output)
mutated_mod['func_4428'] = func_4428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_4458 = relay.TupleGetItem(func_3977_call(), 0)
call_4459 = relay.TupleGetItem(func_3978_call(), 0)
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_4474 = relay.TupleGetItem(func_3481_call(), 1)
call_4475 = relay.TupleGetItem(func_3483_call(), 1)
output = relay.Tuple([call_4458,call_4474,])
output2 = relay.Tuple([call_4459,call_4475,])
func_4481 = relay.Function([], output)
mod['func_4481'] = func_4481
mod = relay.transform.InferType()(mod)
output = func_4481()
func_4482 = relay.Function([], output)
mutated_mod['func_4482'] = func_4482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4008_call = mod.get_global_var('func_4008')
func_4010_call = mutated_mod.get_global_var('func_4010')
call_4496 = func_4008_call()
call_4497 = func_4008_call()
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_4501 = relay.TupleGetItem(func_3259_call(), 0)
call_4502 = relay.TupleGetItem(func_3260_call(), 0)
func_479_call = mod.get_global_var('func_479')
func_483_call = mutated_mod.get_global_var('func_483')
const_4510 = relay.const([-3,-7,-8,8,-8,-5,-7,-7,9,2,7,9,10,1,-10,-3,9,-9,-2,8,-1,5,9,3,-6,-8,-2,-10,-4,10,-9,10,7,-6,8,9,6,5,7,-3,-4,-9,-7,9,-2,-7,5,1,-7,-1,9,-4,3,10,9,5,6,2,-3,-7,3,7,1,10,-3,5,-8,-8,-10,10,-4,5,-1,5,9,10,-6,-9,-3,7,9,-1,-2,-9,7,-2,-6,-3,5,10,10,7,7,10,-7,7,10,-5,6], dtype = "int64")#candidate|4510|(99,)|const|int64
const_4511 = relay.const([-5,6,-3,8,-7,-3,10,-2,7,6,-1,-2,-2,-3,10,2,2,-5,-7,2,-5,2,8,10,-5,1,-3,9,9,4,8,3,1,3,-2,3,-4,3,-8,7,-1,-3,3,-10,2,10,-7,9,10,8,-9,-1,6,6,7,9,-4,-4,4,7,-5,7,-9,-2,8,-3,2,1,6,-4,-1,-2,-7,1,-8,7,-7,-9,-9,-7,2,-6,-2,4,4,-2,5,9,-10,-1,-1,4,-3,4,4,10,1,-2,-3,-2,6,-2,-8,1,1,6,2,-2,3,-8,-9,-4,-4,-5,3,-2,1,-10,-4,7,-4,-9,-3,5,9,4,2,10,4,-3,-1,6,10,1,8,1,-10,-2,3,2,9,-10,4,8,-5,7,-5,-8,-8,9,8,9,8,5,-7,3,-3,-8,7,6,-7,8,5,-7,6,2,3,3,3,5,5,9,-5,6,4,-1,-7,3,6,9,-3,5,-2,-9,8,-6,-4,-2,1,10,-2,-4,-10,4,-6,-8,-4,5,5,1,-8,8,-2,-10,8,10,-10,2,-3,8,9,-8,-10,9,7,-1,-8,6,9,5,-5,-1,9,-5,-8,-10,10,2,-1,7,10,4,7,10,-5,5,-9,-4,-8,1,-3,-6,10,-1,6,8,6,-6,1,8,2,-7,8,9,10,5,-10,-4,-7,-1,5,-1,-3,-3,-6,2,4,6,9,-1,5,4,-7,6,-5,8,-10,2,-9,-8,6,10,-9,4,-2,-1,-1,2,1,-1,-7,-8,-10,-10,5,-2,10,-1,-8,9,9,9,-4,5,9,4,5,-2,-2,3,-10,8,-7,-1,5,-9,1,-4,6,-10,9,10,-6,8,7,-5,6,-7,6,10,-9,8,4,2,-5,-7,-4,8,-1,8,-10,5,10,-1,-1,8,9,-7,-9,-6,-1,9,-2,-7,-5,-1,10,3,9,4,4,-9,9,-9,-4,3,8,1,10,2,-3,-2,-10,-2,-8,10,-10,6,-6,-6,-8,6,-2,5,-6,-9,10,3,6,-3,-2,6,-2,1,-5,-8,7,-10,-4,-3,10,1,-5,1,10,8,7,-5,-6,8,-3,-6,-2,-1,9,-9,10,-8,4,8,3,9,-10,10,-3,9,5,-8,2,-5,5,-10,4,2,1,-4,-8,4,-9,5,-3,8,2,4,5,-4,1,-7,-6,-5,-1,-9,3,-6,-10,-4,7,-8,6,-10,-1,-5,-10,9,1,1,2,10,7,-8,7,9,-2,3,-9,2,9,4,10,-7,7,3,-2,-5,-9,6,-4,1,2,-5,7,2,-5,-7,-2], dtype = "int64")#candidate|4511|(495,)|const|int64
call_4509 = relay.TupleGetItem(func_479_call(relay.reshape(const_4510.astype('int64'), [1, 9, 11]), relay.reshape(const_4511.astype('int64'), [5, 9, 11]), ), 0)
call_4512 = relay.TupleGetItem(func_483_call(relay.reshape(const_4510.astype('int64'), [1, 9, 11]), relay.reshape(const_4511.astype('int64'), [5, 9, 11]), ), 0)
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
const_4515 = relay.const([2,5,9,-8,8,-10,-5,-2,7,-5,-1,-7,-6,2,-2,4,-2,-1,10,3,-1,4,2,-8,-1,-1,8,1,-2,7,-7,-7,-9,9,-10,-9,7,-7,-9,-7,6,3,6,7,10,-4,-5,5,1,-5,-8,10,-8,-6,1,-9,3,-10,-9,-9,-3,3,3,-5,-2,5,-5,-5,1,-1,-7,9,2,9,8,-8,10,-2,9,-7,-8,-3,9,-7,9,3,6,-6,-3,2,10,6,-3,-2,6,5,4,-8,-6,-3,10,-3,-2,-9,-1,-10,-10,10,5,-8,-1,-6,3,-10,-8,5,1,-8,-6,-9,7,9,-4,-3,-1,1,-5,9,-10,8,1,7,3,4,10,8,1,-5,6,-5,8,-9,2,1,-6,-9,2,9,-9,7,-6,-7,2,-3,1,-5,3,-1,3,-4,-1,-8,-7,8,-1,7,10,6,7,2,7,-6,5,-5,9,9,-4,-5,-5,-9,10,4,10,-3,1,-5,-5,1,8,8,7,9,6,2,-7,-10,5,-6,-5,-3,4,-5,1,-9,-1,-10,4,-10,5,4,1,10,7,2,-5,-8,-7,10,-10,10,-5,2,10,-2,1,7,-9,9,-3,9,10,-10,2,-6,8,4,4,3,-7,9,2,-2,-4,-8,-4,6,-4,-10,6,-9,-9,10,-10,-9,9,-4,5,3,-7,-6,-7,4,1,-10,-9,3,-1,-1,-7,5,-8,6,-7,3,-9,-6,3,2,3,3,8,-9,-3,9,1,-4,6,-4,-1,8,8,-8,3,7,1,-9,-9,9,9,10,3,8,-7,2,-9,-8,4,8,-8,-3,-6,-8,-1,7,-7,7,-2,-7,9,-7,-10,3,-2,1,-7,-7,-9,8,-3,9,3,-10,-2,3,8,10,-4,-2,-4,-4,-9,4,9,-9,6,-2,3,3,1,-9,-8,7,-1,-8,-3,-8,7,-2,3,-1,-7,-7,7,10,-7,-4,-7,9,-1,-3,-3,-7,-2,-7,10,5,2,-10,3,4,-8,-7,1,-10,-4,7,5,-8,-4,-1,4,2,7,3,-1,-2,-5,-3,-6,9,10,-5,-9,-2,-9,-7,-9,7,10,-8,6,3,10,10,-1,-3,-4,-5,-3,-5,-2,-5,1,6,3,6,5,-3,-5,8,3,-8,2,-1,2,7,-10,2,-4,7,-6,7,2,4,-6,-3,4,7,5,-10,5,1,-2,9,3,3,8,-1,-3,-8,-5,-7,4,-6,-1,-8,-6,4,-1,-3,-10,6,-10,10,9,-2,9,-7,3,-4,10,5,-10,-5,5,-7,-6,-4,-7,-10,2,-5,3,-6,5,-5,3,-2,-10,-3,-7,-9,-3,-1,-9,9,5,6,5,-4,-3,5,8,6,6,-10,-10,-8,-4,-3,2,-6,-7,-4,-4,3,7,3,7,1,1,-6,2,3,-3,-3,-2,9,-3,2,-1,-5,4,4,-9,3,-10,-2,3,10,-6,10,-4,-7,-1,-4,-5,3,-9,1,3,2,2,-6,9,-10,3,-5,10,3,3,6,-8,-9,5,7,-1,3,-2,10,-7,8,-2,-6,-5,4,6,-7,-8,-1,4,4,8,-1,-4,-4,3,2,5,8,7,-9,3,-7,-10,-7,-8,-2,-6,-7,-5,-5,2,-4,5,8,-7,7,1,-2,-2,-7,-9,7,1,-6,-4,5,-8,5,-4,-7,10,-10,8,5,-10,-2,-9,-4,4,7,3,-6,-2,4,5,-4,7,-7,-7,-5,-5,5,6,6,-1,8,6,5,-6,-3,-2,6,-2,-4,-7,5,-6,8,2,-1,-9,-7,2,5,2,-9,-7,-4,7,-8,-7,-6,7,-2,-8,-4,-2,3,2,2,-6,-8,5,1,-10,-8,-4,-9,-10,2,5,-6,6,3,-7,-3,7,3,-3,-5,3,-3,10,2,4,10,9,-10,-7,-6,-9,7,-8,9,-5,8,10,9,-3,1,-4,-9,-9,1,-2,-10,5,7,8,-7,-2,2,-6,1,-3,-7,3,3,4,8,10,7,5,-9,1,7,2,-5,-2,6,-1,4,8,6,1,6,-1,-7,8,-1,-1,-10,8,1,-4,-7,7,-6,9,7,-7,-1,7,-9,3,1,6,7,9,-8,-5,5,-8,-9,5,5,8,-4,-4,-9,1,-1,3,5,-7,2,-9,6,-10,-4,-10,10,-7,-4,-7,5,2,7,5,-7,6,-4,8,4,-2,6,-7,1,-1,4,7,6,-5,-7,8,3,-3,10,-5,-1,1,1,4,-4,9,10,7,-7,10,5,6,-1,4,-2,6,-8,-3,-6,2,-1,-6,-7,7,-7,6,5,7,2,-9,-10,2,-3,8,-3,9,-1,4,-10,-2,10,-7,1,-2,7,9,-6,7,5,9,6,-1,5,-7,-10,1,8,-6,-4,-3,-10,8,3,-3,1,-8,10,-5,7,-9,4,7,-8,2,1,-4,-8,-5,8,-9,2,7,7,6,-8,8,-4,6,8,-7,3,-8,-4,4,-2,4,-10,-7,-4,10,-7,6,5,-5,-9,-10,4,7,-2,1,-2,10,-5,-1,-10,-3,-9,-10,10,-7,-8,3,-6,1,9,-6,8,-5,4,3,6,1,-6,10,-6,5,6,9,6,4,3,-8,-5,-5,-8,-3,8,-10,4,-8,-8,8,9,-10,5,-2,-3,1,-5,6,-7,-8,2,-7,9,-1,-10,-3,-4,6,8,-2,-10,8,9,9,-3,-3,6,-5,7,1,5,-8,8,10,4,6,5,9,10,-4,-6,9,-8,4,10,-5,-1,6,5,-7,8,-2,9,-10,1,1,-10,-9,7,-4,-9,4,9,1,-5,-4,-2,-9,2,-10,-3,10,3,2,3,7,-4,-1,-2,-1,-1,-2,-5,-5,-10,10,6,-7,-9,7,4,5,-6,2,-1,4,10,-6,-7,-10,4,2,-1,-6,-7,-4,8,8,-6,-3,3,-8,3,6,4,1,-7,7,10,-10,-8,-8,2,2,6,6,3,2,9,-8,-5,1,1,-10,3,8,4,2,1,5,-1,7,-6,-2,7,8,-8,-4,8,2,5,5,-7,7,-10,7,5,5,-5,6,6,3,-4,-5,-2,4,-6,-7,5,-2,8,8,5,7,-10,-9,-1,-4,-9,5,-7,-9,7,7,1,7,-9,7,8,-4,-10,-9,-7,-4,-4,-8,-8,-4,-4,-7,10,-8,-10,-5,-8,-9,1,-7,-2,5,-10,7,-1,-2,-3,3,4,-6,-6,-3,7,-3,1,-7,3,-1,4,-2,10,-3,5,-10,-7,1,7,-8,-7,3,2,-3,1,-7,-1,-1,3,7,9,-6,4,-8,3,-5,6,10,-9,1,6,-6,-9,1,-2,1,-8,8,4,2,1,-10,9,-4,-3,-10,-5,10,-5,7,9,-1,-4,-8,-4,-8,10,-1,-9,9,2,-5,-8,-2,-3,-2,-6,9,1,-10,10,9,7,-10,7,-2,-9,-7,-1,-9,9,-1,6,6,-9,-10,4,10,-1,2,2,-4,-3,9,1,2,-1,4,-3,5,-5,-3,-4,2,5,-3,10,-9,10,8,-8,-9,3,8,-4,-10,-8,9,5,-9,-7,-9,-10,9,8,1,-8,-7,-6,7,-6,10,-9,5,-10,4,7,-4,2,6,9,-6,-10,7,5,-7,-2,-6,5,3,-8,-3,-10,1,-10,-10,8,5,-6,-3,10,-4,6,3,1,-7,5,-3,8,-5,-5,-7,-10,9,9,-10,4,3,-4,-3,4,-6,-3,4,-7,10,-5,-2,-1,2,5,-9,6,2,8,-6,7,-1,-5,2,5,1,-8,4,6,-9,6,1,-2,1,-10,4,1,8,2,9,9,-7,4,8,7,-10,-7,-4,-8,1,-4,-5,-2,-2,-10,-4,-10], dtype = "int8")#candidate|4515|(1452,)|const|int8
call_4514 = relay.TupleGetItem(func_3640_call(relay.reshape(const_4515.astype('int8'), [1452,]), relay.reshape(call_4501.astype('float64'), [11, 14, 7]), ), 1)
call_4516 = relay.TupleGetItem(func_3644_call(relay.reshape(const_4515.astype('int8'), [1452,]), relay.reshape(call_4501.astype('float64'), [11, 14, 7]), ), 1)
output = relay.Tuple([call_4496,call_4501,call_4509,const_4510,const_4511,call_4514,const_4515,])
output2 = relay.Tuple([call_4497,call_4502,call_4512,const_4510,const_4511,call_4516,const_4515,])
func_4527 = relay.Function([], output)
mod['func_4527'] = func_4527
mod = relay.transform.InferType()(mod)
output = func_4527()
func_4528 = relay.Function([], output)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4571 = relay.var("var_4571", dtype = "float64", shape = (3, 10, 7))#candidate|4571|(3, 10, 7)|var|float64
uop_4572 = relay.sin(var_4571.astype('float64')) # shape=(3, 10, 7)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
const_4575 = relay.const([[-2.805344],[-9.650564],[1.829726],[-1.360587],[6.690987],[-7.382918],[2.584692],[2.882386],[-0.602433],[8.779207],[3.621694],[2.030534],[-5.403750],[6.475072],[-9.052872],[-9.807826],[-8.640779],[-6.348364],[9.999771],[6.320187],[-4.060743],[-1.647896],[3.767980],[9.656609],[-9.554965],[2.195468],[-0.940129],[3.639937],[8.875291],[1.065798],[8.462367],[-8.861795],[1.858899],[3.228548],[-5.930006],[9.389071],[-3.120689],[-0.285255],[-9.075360],[5.320065],[-8.162918],[-3.977894],[0.972902],[7.206387],[-4.351195],[-5.936896],[3.240280],[1.091304],[1.920783],[0.936814],[2.359716],[4.940551],[-4.408124],[3.274165],[9.959456],[2.670085],[3.584703],[6.339905],[-2.688397],[5.697719],[5.990043],[-9.181356],[-3.654042],[3.333555],[-4.669484],[1.101243],[-6.082688],[7.239486],[8.714799],[0.244840],[0.750647],[-9.651991],[-3.560977],[9.389451],[5.619236],[5.583638],[-1.743398],[9.642784],[4.067255],[-7.614162],[2.518791],[4.081777],[-5.293530],[-5.545631],[8.602647],[6.981948],[6.037208],[6.144126],[6.887132],[-3.935298],[9.868293],[2.048766],[7.863095],[-7.220371],[-7.210575],[-4.175531],[9.466084],[8.641466],[-4.837970],[7.630815],[5.318951],[-4.242066],[-3.177543],[-3.085216],[-5.382108],[-9.598066],[-0.932359],[6.378607],[-7.630592],[-0.292449],[-5.795875],[-6.529116],[-9.102598],[-9.766263],[-6.144079],[-8.171963],[-8.982778],[-3.244565],[-9.301477],[-9.924596],[2.395743],[-4.032102],[-9.590872],[1.472221],[2.212235],[2.894085],[-6.643032],[4.604648],[6.925363],[3.857948],[2.827905],[7.598174],[-0.562604],[4.336991],[-3.538597],[0.039489],[-1.415745],[2.409297],[3.614909],[-4.871474],[-5.933963],[-1.876882],[7.244872],[8.022725],[9.324031],[-0.126594],[-0.831333],[-3.749228],[8.414195],[8.128195],[1.971493],[2.064738],[-2.421955],[9.795970],[7.181752],[4.078234],[0.496296],[-6.287369],[9.316828],[-1.894554],[-5.478258],[-1.502694],[-8.402821],[2.628695],[-1.588169],[-2.027593],[2.925456],[6.109199],[-5.844318],[3.388291],[-8.340314],[-9.063430],[8.347260],[5.827398],[-9.631814],[6.888220],[-0.181589],[-8.849633],[8.299391],[6.638731],[-1.628426],[0.419049],[2.107412],[-9.841765],[8.988289],[-9.381878],[-6.216489],[-9.021656],[0.657930],[-5.782681],[9.473558],[5.284136],[2.346670],[-1.747056],[3.097204],[-2.463171],[6.054619],[-9.891623],[0.549679],[8.082619],[-9.084953],[-0.722362],[-7.442858],[-8.968847],[-4.951194],[8.702740],[6.114593],[-1.062474],[-1.488059],[0.933399],[-1.359726],[-5.488962],[6.082749],[-2.004830],[2.877870],[-4.570759],[3.973238],[-1.937438],[9.054080],[-0.319964],[2.534094],[4.540401],[-1.597821],[-2.151923],[-8.357317],[-0.311629],[9.565320],[0.747728],[4.211560],[4.263526],[4.519420],[9.980520],[7.019816],[-0.163069],[-8.169950],[-2.640508],[-7.192865],[-5.385900],[1.641114],[-3.524969],[-7.518829],[-1.987122],[8.244200],[2.241249],[-4.598191],[4.998501],[-3.816516],[-2.880064],[-6.316048],[-7.427066],[0.472483],[-1.346308],[-1.339101],[-7.968418],[3.050509],[5.955963],[-1.880172],[-2.667869],[9.843878],[-4.579763],[-0.307675],[8.490389],[-8.809537],[-7.917843],[-1.353037],[-9.068061],[-8.977834],[-6.424190],[4.126124],[-4.833935],[8.022603],[1.564889],[-9.224205],[5.681974],[6.523995],[2.847188],[8.109376],[-0.736126],[-2.937755],[-2.036048],[5.712741],[2.781018],[1.015389],[-9.024226],[-1.246230],[-9.257690],[-9.117098],[5.191705],[4.894987],[5.786276],[3.975561],[-2.103683],[1.126214],[-7.401098],[-0.396482],[6.024870],[4.795539],[0.731576],[-6.223807],[-8.528896],[-0.744285],[-4.316284],[-7.007473],[0.802559],[-2.392405],[-1.338965],[3.441234],[-0.566067],[6.290652],[0.062945],[9.703440],[2.605265],[3.030289],[2.202786],[-4.516934],[-0.054391],[-1.947280],[1.746190],[0.507016],[-1.019699],[3.454295],[1.003057],[-9.120860],[-7.583712],[-7.350060],[2.831936],[-3.994711],[1.002863],[0.263895],[9.405517],[-9.094289],[-4.429000],[-7.951374],[6.246341],[2.719739],[1.119822],[-5.986808],[7.495624],[-1.446486],[-3.824958],[0.094833],[-7.805220],[-4.605402],[7.144780],[-1.478088],[0.160170],[9.789389],[-7.068994],[0.139926],[7.532753],[7.693494],[-9.926616],[0.438231],[-0.915847],[1.785191],[-7.022601],[-1.168786],[-8.434757],[-5.850678],[-1.432426],[-8.790067],[1.083419],[-1.820380],[8.099337],[1.966642],[-6.429353],[3.995978],[-9.938681],[-5.260739],[-8.861934],[9.438704],[0.148028],[9.200103],[-6.252442],[3.549549],[-2.148492],[-8.223143],[6.602202],[9.477530],[0.624122],[0.001797],[-6.963866],[-8.054590],[9.995465],[7.235357],[-1.109804],[8.665836],[2.347970],[3.473544],[-2.513609],[-1.961443],[-8.315314],[0.095130],[2.882295],[-6.555764],[0.862777],[-5.329256],[-1.892176],[1.571381],[-9.170260],[9.089494],[4.592475],[-0.787472],[4.643924],[6.443544],[-3.815876],[-6.960015],[-7.055977],[9.493848],[0.063985],[-1.811639],[9.426924],[-7.303801],[2.784529],[-5.195281],[-2.787411],[-0.727245],[-2.891168],[-3.485915],[-6.287998],[7.405858],[-8.030914],[6.401093],[4.562245],[-2.399713],[-4.346244],[-2.740612],[-7.324534],[5.898356],[-2.499863],[7.583205],[7.074850],[-6.825589],[-2.375008],[6.444699],[-6.412948],[8.484032],[1.468533],[-0.188756],[5.184524],[9.344254],[8.881676],[-8.183426],[-6.022756],[-6.439570],[6.525913],[7.175228],[2.262751],[-8.035399],[0.970443],[6.100978],[-3.559576],[-8.080967],[3.524038],[3.204661],[6.642291],[4.570099],[-3.633802],[-9.889430],[3.819926],[3.856648],[-2.680352],[-8.663012],[-1.758388],[5.402296],[-8.092401],[-9.144218],[-5.218860],[-3.028808],[2.200499],[-6.571005],[-7.910825],[5.040962],[2.523405],[3.830600],[-0.691623],[6.831288],[-0.904154],[0.984693],[-4.488070],[-5.751584],[4.791693],[-6.424458],[5.639854],[2.944287],[-5.624126],[8.151661],[4.140886],[1.147496],[7.668754],[-8.209783],[2.580635],[-6.086944],[4.446450],[-6.517855],[0.422115],[-5.660626],[2.617578],[-0.628174],[-7.261464],[6.692343],[7.183941],[4.589483],[-8.931319],[-8.380069],[-9.207372],[7.567947],[-3.155512],[3.803338],[3.335456],[-5.609909],[-0.172590],[7.153265],[0.671937],[-4.669257],[-7.720595],[-4.574418],[-5.406132],[-6.502624],[-9.539146],[-5.518069],[1.860899],[-5.543978],[-8.148874],[9.294923],[5.289676],[-3.198067],[9.573129],[-0.518296],[2.035219],[-5.350241],[-5.691796],[6.305654],[-9.776735],[9.721710],[-6.789368],[8.661147],[-0.942631],[-1.378882],[0.266274],[-7.082529],[5.889883],[-4.936073],[7.099779],[7.416406],[0.171802],[-3.192553],[-8.119851],[3.872550],[0.597597],[9.417063],[-3.977585],[-1.734042],[-2.708868],[7.998614],[-3.471693],[-4.508799],[-7.643422],[-7.331438],[6.477775],[-7.302068],[0.216159],[6.901671],[7.839841],[7.194649],[1.431719],[-9.816570],[2.067907],[-6.396723],[3.798115],[-5.505375],[-2.627045],[1.797989],[4.059376],[-0.147796],[4.761055],[-7.443545],[3.068603],[-2.768083],[-5.351546],[4.978109],[-9.416330],[1.642670],[-5.959145],[9.419548],[-2.748449],[-2.814962],[7.693568],[2.107907],[6.681325],[5.261763],[9.732015],[-2.981047],[7.232730],[9.085158],[-6.402846],[-3.886693],[-6.551535],[-8.102799],[3.255509],[9.986896],[0.343619],[-5.636034],[8.900567],[-5.430412],[3.093144],[-7.557864],[8.127163],[5.203171],[0.640309],[-3.514678],[-1.982946],[0.449084],[-0.329909],[4.745243],[9.456747],[8.614017],[-1.186249],[1.960006],[-4.876417],[1.745522],[-0.864308],[-7.804297],[-0.547066],[-0.488030],[-7.470332],[5.571378],[5.361967],[5.518750],[-3.762103],[-2.910547],[0.376422],[6.244001],[9.444201],[-5.419651],[-9.279877],[-3.318994],[3.223500],[-6.398243],[-6.045890],[6.451580],[1.400152],[2.125767],[8.060355],[-6.120074],[-2.698866],[-4.815172],[9.207907],[3.952154],[-6.721736],[-6.546816],[9.022955],[9.489721],[1.779055],[-9.195746],[2.241713],[-8.542098],[-9.099221],[2.933637],[-6.435882],[-7.205273],[-6.038413],[6.129461],[-1.923694],[5.644391],[-5.228409],[3.663576],[-9.726448],[-0.327115],[-3.713933],[7.059652],[-6.685559],[-3.784099],[-0.297653],[2.716394],[6.102902],[7.303640],[-3.513190],[4.058400],[6.342518],[5.912112],[-1.054398],[-0.091579],[-2.519273],[-5.241847],[8.293459],[-0.551811],[1.628443],[4.863404],[-1.456133],[1.012443],[-8.902773],[-9.644158],[2.742209],[5.315680],[-4.632143],[-8.042492],[8.236083],[1.149134],[2.585580],[-6.800664],[0.170997],[-9.945674],[1.999016],[-0.053921],[-3.006727],[0.893091],[-6.020360],[6.484055],[-4.759841],[6.248499],[-5.050787],[9.463077],[-2.387512],[7.344548],[2.714026],[-2.437524],[-7.879743],[4.642304],[-4.949234],[0.296201],[9.654971],[6.432625],[-0.782288],[6.904417],[1.704824],[3.072551],[-3.184340],[0.493374],[8.116590],[-6.551899],[-4.245343],[-8.672337],[-6.223120],[-8.265525],[6.363875],[7.945100],[4.636116],[1.226153],[-3.303766],[-8.385922],[3.777561],[4.933867],[-6.649056],[-6.445830],[2.861381],[-4.451977],[8.636967],[-9.960321],[7.820366],[1.430437],[-1.098736],[0.977051],[9.721850],[-1.986605],[-5.871900],[-9.461221],[-0.533327],[8.894248],[-1.315825],[6.437320],[3.436141],[-2.973429],[-4.977301],[-1.276271],[6.793491],[-5.927920],[-9.406950],[5.380191],[-5.336818],[0.274821],[-4.999342],[-3.919708],[9.248499],[-1.763933],[0.712665],[0.135909],[2.412120],[-5.276299],[-3.706466],[2.518023],[-5.461974],[-8.708868],[-6.727929],[-3.314683],[7.690686],[3.081313],[5.319090],[-2.716174],[2.125886],[1.824923],[-3.404528],[5.872767],[-6.997047],[3.906212],[-7.672953],[-8.845728],[3.765964],[-8.244115],[5.467355],[-8.827524],[-8.492105],[-7.331264],[-3.403816],[7.369700],[4.635599],[-6.977106],[1.914426],[-8.281016],[8.433368],[9.646869],[-8.067879],[-3.912016],[-9.010710],[6.956934],[-2.857075],[-9.153324],[6.127082],[-0.856242],[7.981182],[-2.822292],[-2.113350],[4.698221],[-7.138844],[2.457599],[5.952939],[-2.867375],[7.173489],[2.075271],[6.432773],[4.399771],[7.882990],[-2.396973],[-0.543593],[-2.929411],[-6.575740],[8.180799],[3.204828],[5.375519],[-0.667839],[-9.138610],[2.324595],[3.073299],[6.897895],[-2.433612],[-0.515086],[-3.112204],[6.012121],[-4.794212],[-3.203102],[5.917285],[1.912245],[1.630693],[4.275459],[2.646341],[-0.745160],[-3.466574],[-9.216510],[-9.102140],[-4.598047],[-5.422742],[-2.170084],[-5.811016],[7.301707],[9.412360],[7.019747],[5.060800],[6.832059],[-1.014010],[5.441406],[-8.616248],[5.927672],[9.972046],[6.866092],[6.450608],[-1.949382],[-3.987962],[9.692077],[-1.953268],[7.102531],[-1.895795],[-5.197693],[-6.436729],[-3.432664],[1.648971],[-9.861086],[4.076827],[-0.680114],[2.074095],[-8.132025],[7.464711],[-4.040396],[5.592529],[8.500393],[-5.277896],[-7.356262],[3.370564],[-6.832487],[-9.631890],[-4.569779],[-1.612770],[-4.588238],[-8.548361],[-6.384017],[-8.079204],[7.685921],[1.349249],[0.177900],[4.351752],[-6.293774],[0.901191],[-2.280273],[-4.075699],[-1.860857],[2.630707],[-4.463160],[5.831462],[-0.566575],[0.501055],[9.963471],[2.328749],[5.450754],[-3.652198],[-2.682586],[6.695690],[-7.182152],[1.005584],[-3.960953],[7.880244],[-7.024270],[9.083199],[0.213847],[9.669969],[7.814541],[-4.430014],[-3.513437],[2.304200],[2.454435],[-3.921942],[0.748820],[-1.573293],[3.296312],[-2.951732],[3.410083],[-7.767937],[-6.921933],[-3.681476],[7.097150],[0.713062],[-3.229736],[4.609841],[-2.013183],[5.646644],[9.923339],[3.495436],[9.937475],[-9.989793],[0.417157],[-4.090047],[-3.813162],[-3.240967],[4.122970],[-7.446449],[7.757733],[9.472243],[-2.931902],[-6.622107],[1.463800],[-3.966619],[-4.452173],[0.287646],[6.784584],[-9.039327],[-4.184547],[-6.580400],[6.209747],[5.096071],[2.834083],[1.935854],[-3.258590],[7.017572],[-3.684060],[2.364321],[4.779066],[-0.414999],[3.244094],[3.450455],[5.868832],[5.756356],[5.539633],[-0.255003],[-8.624868],[1.110114],[-2.215837],[-5.540226],[8.572926],[1.894005],[-2.793826],[4.370352],[-3.752771],[6.514954],[0.238229],[-1.543650],[-0.467965],[-2.914328],[1.751380],[-0.798257],[-5.467825],[-6.203449],[7.303702],[3.608101],[-9.675685],[-1.705609],[1.355010],[-6.166334],[4.560632],[2.897676],[-4.805795],[0.968660],[5.631960],[-8.577682],[-5.377965],[7.523728],[-8.745501],[3.575587],[-7.267698],[-9.242525],[4.558384],[6.924584],[-6.981577],[-5.162090],[3.941020],[-2.217240],[-8.092234],[-3.614280],[6.549493],[-5.951195],[-9.258416],[6.831155],[4.593373],[-4.119883],[2.730314],[-9.062743],[5.511870],[-0.672985],[9.862358],[2.653118],[-3.431692],[3.869659],[9.941625],[7.287416],[-1.369874],[-5.454717],[2.123102],[-4.356024],[9.330104],[-8.175997],[1.250200],[4.948235],[6.567466],[9.349394],[7.224950],[5.579823],[-2.246540],[-8.785719],[4.414236],[6.560127],[4.627194],[-1.355076],[0.866722],[-1.959999],[7.755240],[9.539770],[6.260115],[4.357091],[-5.321906],[-2.750478],[0.121576]], dtype = "float32")#candidate|4575|(1078, 1)|const|float32
call_4574 = relay.TupleGetItem(func_3420_call(relay.reshape(const_4575.astype('float32'), [11, 14, 7])), 0)
call_4576 = relay.TupleGetItem(func_3422_call(relay.reshape(const_4575.astype('float32'), [11, 14, 7])), 0)
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_4589 = relay.var("var_4589", dtype = "int8", shape = (1452,))#candidate|4589|(1452,)|var|int8
call_4588 = func_2902_call(relay.reshape(var_4589.astype('int8'), [12, 11, 11]), relay.reshape(var_4589.astype('int8'), [12, 11, 11]), )
call_4590 = func_2902_call(relay.reshape(var_4589.astype('int8'), [12, 11, 11]), relay.reshape(var_4589.astype('int8'), [12, 11, 11]), )
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_4592 = relay.TupleGetItem(func_2878_call(), 0)
call_4593 = relay.TupleGetItem(func_2879_call(), 0)
output = relay.Tuple([uop_4572,call_4574,const_4575,call_4588,var_4589,call_4592,])
output2 = relay.Tuple([uop_4572,call_4576,const_4575,call_4590,var_4589,call_4593,])
func_4597 = relay.Function([var_4571,var_4589,], output)
mod['func_4597'] = func_4597
mod = relay.transform.InferType()(mod)
var_4598 = relay.var("var_4598", dtype = "float64", shape = (3, 10, 7))#candidate|4598|(3, 10, 7)|var|float64
var_4599 = relay.var("var_4599", dtype = "int8", shape = (1452,))#candidate|4599|(1452,)|var|int8
output = func_4597(var_4598,var_4599,)
func_4600 = relay.Function([var_4598,var_4599,], output)
mutated_mod['func_4600'] = func_4600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_4624 = func_4051_call()
call_4625 = func_4051_call()
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_4626 = func_3347_call()
call_4627 = func_3347_call()
func_3894_call = mod.get_global_var('func_3894')
func_3898_call = mutated_mod.get_global_var('func_3898')
const_4631 = relay.const([-4,-7,1,-9,5,-4,-4,-1,6,8,-4,-5,-5,5,10,10,3,6,3,7,-9,1,1,8,8,5,9,2,-8,7,8,-5,-5,5,8,5,4,1,-2,3,4,-3,-9,-7,3,-8,-3,4,-5,5,-2,1,8,1,10,9,5,7,6,-2,9,-10,4,10,4,3,8,1,-5,-6,-8,10,-7,-7,2,4,1,4,9,-7,1,-8,-3,5,-3,2,7,5,9,-9,-1,-2,10,-10,-4,-3,-4,-4,-1,-6,9,4,-9,10,-10,1,-3,-6,1,-1,10,9,-4,-4,1,9,-5,6,1,4,-4,-5,-7,1,6,4,5,-3,-8,5,-4,-9,-7,-4,10,2,-2,2,-9,-1,4,-2,-1,-9,-9,-10,1,3,-4,-8,5,-8,-8,-8,3,1,-7,6,7,8,-2,-10,-8,10,-8,-8,-8,-1,9,3,-1,9,7,-5,-3,-2,-3,-9,-5,-5,-7,7,-9,2,-10,-10,-1,-8,-4,-5,-7,-3,1,-1,1,9,-9,5,-7,-6,4,-7,-2,-3,7,3,-7,4], dtype = "int16")#candidate|4631|(208,)|const|int16
var_4632 = relay.var("var_4632", dtype = "uint8", shape = (512,))#candidate|4632|(512,)|var|uint8
call_4630 = relay.TupleGetItem(func_3894_call(relay.reshape(const_4631.astype('int16'), [208,]), relay.reshape(var_4632.astype('uint8'), [2, 256]), ), 2)
call_4633 = relay.TupleGetItem(func_3898_call(relay.reshape(const_4631.astype('int16'), [208,]), relay.reshape(var_4632.astype('uint8'), [2, 256]), ), 2)
output = relay.Tuple([call_4624,call_4626,call_4630,const_4631,var_4632,])
output2 = relay.Tuple([call_4625,call_4627,call_4633,const_4631,var_4632,])
func_4646 = relay.Function([var_4632,], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
mutated_mod['func_4646'] = func_4646
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4647 = relay.var("var_4647", dtype = "uint8", shape = (512,))#candidate|4647|(512,)|var|uint8
func_4646_call = mutated_mod.get_global_var('func_4646')
call_4648 = func_4646_call(var_4647)
output = call_4648
func_4649 = relay.Function([var_4647], output)
mutated_mod['func_4649'] = func_4649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_4701 = relay.TupleGetItem(func_3977_call(), 0)
call_4702 = relay.TupleGetItem(func_3978_call(), 0)
func_3420_call = mod.get_global_var('func_3420')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_4703 = relay.TupleGetItem(func_3420_call(relay.reshape(call_4701.astype('float32'), [11, 14, 7])), 0)
call_4704 = relay.TupleGetItem(func_3422_call(relay.reshape(call_4701.astype('float32'), [11, 14, 7])), 0)
output = relay.Tuple([call_4701,call_4703,])
output2 = relay.Tuple([call_4702,call_4704,])
func_4710 = relay.Function([], output)
mod['func_4710'] = func_4710
mod = relay.transform.InferType()(mod)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4710_call = mutated_mod.get_global_var('func_4710')
call_4711 = func_4710_call()
output = call_4711
func_4712 = relay.Function([], output)
mutated_mod['func_4712'] = func_4712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_4731 = relay.TupleGetItem(func_2503_call(), 0)
call_4732 = relay.TupleGetItem(func_2505_call(), 0)
var_4750 = relay.var("var_4750", dtype = "float64", shape = (11, 14, 7))#candidate|4750|(11, 14, 7)|var|float64
bop_4751 = relay.equal(call_4731.astype('bool'), relay.reshape(var_4750.astype('bool'), relay.shape_of(call_4731))) # shape=(11, 14, 7)
bop_4754 = relay.equal(call_4732.astype('bool'), relay.reshape(var_4750.astype('bool'), relay.shape_of(call_4732))) # shape=(11, 14, 7)
output = relay.Tuple([bop_4751,])
output2 = relay.Tuple([bop_4754,])
func_4767 = relay.Function([var_4750,], output)
mod['func_4767'] = func_4767
mod = relay.transform.InferType()(mod)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4768 = relay.var("var_4768", dtype = "float64", shape = (11, 14, 7))#candidate|4768|(11, 14, 7)|var|float64
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4769 = func_4767_call(var_4768)
output = call_4769
func_4770 = relay.Function([var_4768], output)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_4785 = relay.TupleGetItem(func_4527_call(), 4)
call_4786 = relay.TupleGetItem(func_4528_call(), 4)
var_4787 = relay.var("var_4787", dtype = "int64", shape = (495,))#candidate|4787|(495,)|var|int64
bop_4788 = relay.bitwise_xor(call_4785.astype('uint16'), relay.reshape(var_4787.astype('uint16'), relay.shape_of(call_4785))) # shape=(495,)
bop_4791 = relay.bitwise_xor(call_4786.astype('uint16'), relay.reshape(var_4787.astype('uint16'), relay.shape_of(call_4786))) # shape=(495,)
bop_4800 = relay.power(var_4787.astype('float32'), relay.reshape(call_4785.astype('float32'), relay.shape_of(var_4787))) # shape=(495,)
bop_4803 = relay.power(var_4787.astype('float32'), relay.reshape(call_4786.astype('float32'), relay.shape_of(var_4787))) # shape=(495,)
output = relay.Tuple([bop_4788,bop_4800,])
output2 = relay.Tuple([bop_4791,bop_4803,])
func_4812 = relay.Function([var_4787,], output)
mod['func_4812'] = func_4812
mod = relay.transform.InferType()(mod)
mutated_mod['func_4812'] = func_4812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4813 = relay.var("var_4813", dtype = "int64", shape = (495,))#candidate|4813|(495,)|var|int64
func_4812_call = mutated_mod.get_global_var('func_4812')
call_4814 = func_4812_call(var_4813)
output = call_4814
func_4815 = relay.Function([var_4813], output)
mutated_mod['func_4815'] = func_4815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4008_call = mod.get_global_var('func_4008')
func_4010_call = mutated_mod.get_global_var('func_4010')
call_4820 = func_4008_call()
call_4821 = func_4008_call()
func_229_call = mod.get_global_var('func_229')
func_231_call = mutated_mod.get_global_var('func_231')
const_4833 = relay.const([10,8,6,-2,10,8,-5,-9,-2,9,9,-7,-4,-7,7,8,3,-3,2,1,-9,7,3,-6,-3,9,7,-6,-7,5,6,3,-9,-8,6,-4,-10,8,9,6,-7,5,-1,6,-7,-3,-4,2,-5,-6,-10,5,-1,3,4,-5,6,-8,4,-4,7,-4,4,-6,-4,1,5,6,-6,10,-10,-5,-5,-3,9,10,7,-8,-7,1,9,9,-5,-1,-6,4,-6,-2,4,-1,-5,8,4,2,-2,-5,4,-8,3,-3,-10,6,-8,6,6,-4,8,-2,1,4,-6,8,-6,-8,-4,7,7,-10,4,6,3,10,3,-4,5,-10,8,8,2,3,8,-2,3,-8,7,-6,6,-2,9,5,-3,-2,1,-6,-9,-1,-9,10,6,-9,-5,-3,-3,10,-10,-4,10,-5,10,-7,8,-6,2,9,7,9,2,-1,-9,-7,-7,-2,-8,9,-8,-7,-4,-5,8,-4,-3,6,-7,2,-9,-2,7,5,-1,-3,1,-7,-2,3,6,4,-10,-5,-7,-10,-4,-5,8,-8,6,-10,-3,4,-9,5,4,-5,2,-1,6,7,6,5,-2,3,-6,5,-1,-3,7,4,-9,-8,-8,10,-10,6,-9,-10,-3,10,-7,7,5,-8,9,-6,2,9,-2,-6,8,-10,2,-9,-6,-4,-6,-3,-4,3,-3,-2,-4,-7,-2,1,-4,6,-3,-2,-5,-4,-1,4,-5,9,-8,5,3,-8,-4,2,10,-5,-6,3,-7,-2,1,-4,-5,-8,-3,2,-2,9,-9,-5,3,-3,-7,8,-3,-2,8,-3,-6,-5,4,5,10,-2,-6,-8,-7,6,7,-9,8,-5,7,1,-8,4,-4,8,4,-2,8,-9,-1,2,3,-8,-3,9,-10,-7,5,-2,2,-4,1,7,6,-6,-5,6,-10,-8,7,4,6,-8,3,-1,-10,-1,10,2,-6,-4,-7,-8,5,1,-1,-1,-6,-9,1,-6,-6,-3,5,-4,-6,-9,-3,1,2,1,-8,-2,3,7,-5,6,8,-8,9,-3,4,-9,10,6,3,-7,2,-7,-3,1,-7,-9,-10,-7,3,-3,1,-6,1,3,9,-9,1,8,-10,2,-7,2,10,-4,1,-9,-9,-3,7,8,-8,-7,-1,-3,-3,10,-7,-7,4,-9,-9,7,-3,10,-10,6,-3,7,5,9,-6,-7,-3,-10,-8,-4,-7,-6,-5,2,5,3,10,-6,-1,-4,3,-2,6,5,-10,2,10,-2,4,-10,2,9,-5,-9,-1,5,-4,2,8,-5,-4,10,5,-9,-7,-10,-2,3,5,6,-4,-9,6,10,7,-4,2,-7,7,-6,6,-3,6,-8,7,6,-4,10,6,-6,5,8], dtype = "uint8")#candidate|4833|(512,)|const|uint8
call_4832 = relay.TupleGetItem(func_229_call(relay.reshape(const_4833.astype('uint8'), [8, 8, 8])), 1)
call_4834 = relay.TupleGetItem(func_231_call(relay.reshape(const_4833.astype('uint8'), [8, 8, 8])), 1)
func_2268_call = mod.get_global_var('func_2268')
func_2271_call = mutated_mod.get_global_var('func_2271')
const_4845 = relay.const([-0.808550,7.251927,2.118994,-2.341461,6.702407,-9.196898,3.989615,-8.461232,8.349836,2.910580,8.452730,1.560853,-5.384398,0.428748,-8.508815,-1.812643,-8.559400,-0.714807,2.475302,5.206487,-9.174110,-2.992312,-5.685338,3.344217,9.615358,-8.254166,-0.894405,7.912656,-7.990192,-8.540275,9.348551,4.487982,-7.264454,9.553481,8.494702,-2.183032,-6.692074,5.604456,-3.892434,8.561661,4.810974,-3.663293,7.822716,-1.492779,4.212779,-3.465970,6.821319,-1.463304,4.903675,2.376214,-5.170058,0.034755,5.601483,7.783934,0.206436,7.951134,2.570156,-9.337885,4.619157,-9.659625,6.852907,-8.251618,-8.071577,5.234943,-7.459138,-9.443608,-9.819779,-0.860434,-0.088018,0.967258,-1.267097,9.676115,9.122266,-7.982910,-0.080998,2.044278,7.753772,7.455712,-1.344983,9.402558,6.862882,4.854719,7.066896,8.090925,2.910353,4.256272,1.692004,6.983048,-3.748082,-9.596749,-9.373114,0.173170,7.692060,-7.225027,3.585196,-0.253105,9.757907,-1.865403,8.370168,7.357197,3.073093,-5.838421,6.590316,1.888168,0.895805,-4.777847,8.990080,9.470247,-2.511034,-4.414108,-8.950478,1.052154,-7.642990,-7.477036,0.294856,-9.931057,3.599726,-7.744424,1.731337,-7.594091,0.920432,-3.735747,-2.440856,5.133062,3.904913,-7.666319,-8.389562,-3.964740,-3.186398,7.326500,-5.797571,-5.882622,-6.893311,-7.829330,-9.375706,6.116472,2.577768,-7.683503,2.299948,2.469419,1.687278,-6.745580,6.631233,-7.391698], dtype = "float32")#candidate|4845|(144,)|const|float32
call_4844 = relay.TupleGetItem(func_2268_call(relay.reshape(const_4845.astype('float32'), [9, 16, 1])), 0)
call_4846 = relay.TupleGetItem(func_2271_call(relay.reshape(const_4845.astype('float32'), [9, 16, 1])), 0)
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_4851 = relay.var("var_4851", dtype = "int8", shape = (242, 6))#candidate|4851|(242, 6)|var|int8
call_4850 = func_2902_call(relay.reshape(var_4851.astype('int8'), [12, 11, 11]), relay.reshape(var_4851.astype('int8'), [12, 11, 11]), )
call_4852 = func_2902_call(relay.reshape(var_4851.astype('int8'), [12, 11, 11]), relay.reshape(var_4851.astype('int8'), [12, 11, 11]), )
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_4857 = relay.TupleGetItem(func_2878_call(), 1)
call_4858 = relay.TupleGetItem(func_2879_call(), 1)
output = relay.Tuple([call_4820,call_4832,const_4833,call_4844,const_4845,call_4850,var_4851,call_4857,])
output2 = relay.Tuple([call_4821,call_4834,const_4833,call_4846,const_4845,call_4852,var_4851,call_4858,])
func_4859 = relay.Function([var_4851,], output)
mod['func_4859'] = func_4859
mod = relay.transform.InferType()(mod)
mutated_mod['func_4859'] = func_4859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4860 = relay.var("var_4860", dtype = "int8", shape = (242, 6))#candidate|4860|(242, 6)|var|int8
func_4859_call = mutated_mod.get_global_var('func_4859')
call_4861 = func_4859_call(var_4860)
output = call_4861
func_4862 = relay.Function([var_4860], output)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_4880 = func_4096_call()
call_4881 = func_4096_call()
output = call_4880
output2 = call_4881
func_4905 = relay.Function([], output)
mod['func_4905'] = func_4905
mod = relay.transform.InferType()(mod)
output = func_4905()
func_4906 = relay.Function([], output)
mutated_mod['func_4906'] = func_4906
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5005 = relay.const([[[7.020928,-1.579684,-8.584326,-4.908399,-3.944324,-0.862992,5.407934,2.735754,9.030983,2.490451,0.741999,-5.700772,-2.902255],[3.523351,5.147419,-6.613179,7.463290,8.119030,9.782934,-9.160368,7.556077,-0.576471,6.588586,-0.699779,2.766454,-6.035193],[9.830319,-8.582572,-5.379915,4.121308,-3.489707,-4.949793,8.254884,2.949627,7.812580,-1.067217,-9.898865,7.345956,4.652888],[-2.862941,-1.387455,0.400881,8.015073,1.826186,0.793820,0.467275,-4.267105,5.808643,-1.379815,-4.573945,-2.456579,-4.983207],[-0.275734,-6.460449,1.255079,-8.551440,-6.645753,9.697959,6.056685,7.356758,-0.833038,-5.850754,-5.518227,-5.915183,-7.251183],[-0.399000,5.262499,9.288197,-9.939648,0.740778,-2.048067,4.615877,1.132315,-4.341578,0.610711,0.898332,7.740956,8.927484],[0.877658,-3.458141,-6.645959,7.074916,7.341352,5.119007,-3.359498,7.320010,-3.541857,6.515837,8.623901,-9.761929,6.856469],[-7.149917,0.242089,-3.523779,6.485247,-1.767930,1.230405,-5.999678,-0.329144,2.384799,-7.862867,0.364936,2.767051,0.086396],[0.651611,-0.245818,2.322170,4.020284,-7.748076,-1.591758,-9.324713,0.121401,-8.955667,-0.377582,-5.382304,6.525323,-2.356057],[9.225798,-0.916760,-9.985136,4.278648,-3.749231,-2.259001,4.743345,-5.776205,-2.346083,8.236177,-7.580903,2.400620,-7.189211]],[[-6.483032,7.494383,6.668642,7.225416,8.254225,5.835080,-8.275436,5.327903,0.320354,8.137715,-2.404367,-1.555090,5.930741],[8.046826,3.640387,-2.283075,-9.470667,-9.371843,9.099252,3.545154,5.041916,8.813024,-4.190489,-4.126880,2.081948,2.562017],[-5.755311,6.026023,5.042282,-5.600944,8.423101,-5.301042,-5.125377,8.352977,-9.733159,-7.201347,1.162201,5.018214,5.111598],[4.583519,6.375595,-5.058715,-4.693734,-9.792317,9.180120,-7.612924,0.115113,-3.857382,7.214952,4.300020,-4.808705,0.607972],[4.564425,8.351804,0.786098,-1.481960,-9.094453,-6.954752,-3.982970,-0.893392,3.987055,-7.095312,7.204878,4.629818,-1.552720],[7.081538,-5.324924,-1.059664,7.583679,-2.891798,-7.711690,-7.608547,-9.229104,5.763230,5.603138,-7.854075,-9.677225,8.092154],[9.932220,-0.119907,-4.194219,-4.945632,0.464166,-4.596290,-0.142730,6.156534,8.011940,8.062044,-0.725761,4.330163,-2.449289],[-3.929712,-9.470692,2.111253,-0.510594,-2.107491,8.638767,-1.639842,8.250623,6.272392,3.503397,7.960247,-7.109400,-5.128685],[2.028044,-3.449852,6.276633,7.409848,6.274843,3.529781,-5.867676,-7.091389,-0.584404,-8.193703,1.997316,-8.422565,-4.495746],[-1.311906,-3.337471,2.957707,-2.351582,-1.482067,6.531135,7.543317,-9.708163,-9.150808,-9.353754,-6.936147,8.527012,0.005422]]], dtype = "float32")#candidate|5005|(2, 10, 13)|const|float32
uop_5006 = relay.asinh(const_5005.astype('float32')) # shape=(2, 10, 13)
output = uop_5006
output2 = uop_5006
func_5010 = relay.Function([], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
mutated_mod['func_5010'] = func_5010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mutated_mod.get_global_var('func_5010')
call_5011 = func_5010_call()
output = call_5011
func_5012 = relay.Function([], output)
mutated_mod['func_5012'] = func_5012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_5013 = relay.TupleGetItem(func_2878_call(), 2)
call_5014 = relay.TupleGetItem(func_2879_call(), 2)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_5023 = func_2685_call()
call_5024 = func_2685_call()
func_4008_call = mod.get_global_var('func_4008')
func_4010_call = mutated_mod.get_global_var('func_4010')
call_5033 = func_4008_call()
call_5034 = func_4008_call()
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5035 = relay.TupleGetItem(func_4112_call(), 0)
call_5036 = relay.TupleGetItem(func_4113_call(), 0)
func_5010_call = mod.get_global_var('func_5010')
func_5012_call = mutated_mod.get_global_var('func_5012')
call_5069 = func_5010_call()
call_5070 = func_5010_call()
output = relay.Tuple([call_5013,call_5023,call_5033,call_5035,call_5069,])
output2 = relay.Tuple([call_5014,call_5024,call_5034,call_5036,call_5070,])
func_5084 = relay.Function([], output)
mod['func_5084'] = func_5084
mod = relay.transform.InferType()(mod)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5085 = func_5084_call()
output = call_5085
func_5086 = relay.Function([], output)
mutated_mod['func_5086'] = func_5086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5111 = relay.var("var_5111", dtype = "float32", shape = (8, 4, 11))#candidate|5111|(8, 4, 11)|var|float32
uop_5112 = relay.atan(var_5111.astype('float32')) # shape=(8, 4, 11)
func_2503_call = mod.get_global_var('func_2503')
func_2505_call = mutated_mod.get_global_var('func_2505')
call_5114 = relay.TupleGetItem(func_2503_call(), 0)
call_5115 = relay.TupleGetItem(func_2505_call(), 0)
uop_5116 = relay.asin(uop_5112.astype('float32')) # shape=(8, 4, 11)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5128 = relay.TupleGetItem(func_4112_call(), 0)
call_5129 = relay.TupleGetItem(func_4113_call(), 0)
uop_5130 = relay.asinh(uop_5116.astype('float32')) # shape=(8, 4, 11)
uop_5136 = relay.rsqrt(uop_5130.astype('float64')) # shape=(8, 4, 11)
uop_5139 = relay.log10(uop_5130.astype('float64')) # shape=(8, 4, 11)
bop_5146 = relay.logical_xor(uop_5130.astype('uint64'), relay.reshape(var_5111.astype('uint64'), relay.shape_of(uop_5130))) # shape=(8, 4, 11)
output = relay.Tuple([call_5114,call_5128,uop_5136,uop_5139,bop_5146,])
output2 = relay.Tuple([call_5115,call_5129,uop_5136,uop_5139,bop_5146,])
func_5152 = relay.Function([var_5111,], output)
mod['func_5152'] = func_5152
mod = relay.transform.InferType()(mod)
var_5153 = relay.var("var_5153", dtype = "float32", shape = (8, 4, 11))#candidate|5153|(8, 4, 11)|var|float32
output = func_5152(var_5153)
func_5154 = relay.Function([var_5153], output)
mutated_mod['func_5154'] = func_5154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4527_call = mod.get_global_var('func_4527')
func_4528_call = mutated_mod.get_global_var('func_4528')
call_5180 = relay.TupleGetItem(func_4527_call(), 4)
call_5181 = relay.TupleGetItem(func_4528_call(), 4)
var_5211 = relay.var("var_5211", dtype = "int64", shape = (495,))#candidate|5211|(495,)|var|int64
bop_5212 = relay.equal(call_5180.astype('bool'), relay.reshape(var_5211.astype('bool'), relay.shape_of(call_5180))) # shape=(495,)
bop_5215 = relay.equal(call_5181.astype('bool'), relay.reshape(var_5211.astype('bool'), relay.shape_of(call_5181))) # shape=(495,)
output = bop_5212
output2 = bop_5215
func_5216 = relay.Function([var_5211,], output)
mod['func_5216'] = func_5216
mod = relay.transform.InferType()(mod)
var_5217 = relay.var("var_5217", dtype = "int64", shape = (495,))#candidate|5217|(495,)|var|int64
output = func_5216(var_5217)
func_5218 = relay.Function([var_5217], output)
mutated_mod['func_5218'] = func_5218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_5258 = func_4905_call()
call_5259 = func_4905_call()
const_5266 = relay.const([[[-0.362807,2.837847,-4.138057,-0.401802,0.806726,-2.587113,-7.523137],[-0.610631,9.745681,-4.200879,7.366675,-0.829317,-3.524095,0.698548],[-9.451890,2.334562,5.006862,-1.226874,-3.537101,0.862353,6.725206],[-4.232051,-7.858253,-2.013274,-9.156972,-3.689061,4.953526,-0.651815],[8.539167,2.447313,-8.424333,-4.718368,0.735570,-8.253486,-5.324355],[6.982765,6.540680,5.810150,1.761127,8.104441,3.268005,2.411047],[7.058388,-0.729115,0.952053,-5.371879,-5.778347,2.408211,6.636450],[4.903983,-9.020870,8.660789,-3.234187,4.396052,6.091735,-2.121962],[-6.611942,9.900585,1.736409,-2.721434,8.841188,-4.295872,-5.742232],[-2.250238,8.379751,3.177192,-0.490285,-4.872326,8.449191,-1.351434],[-3.805088,2.678787,-5.462090,-8.091057,-3.865321,-0.161286,-2.754870],[5.904435,5.401293,-4.755286,2.210007,-8.189765,2.185392,2.534080],[-3.669857,3.627963,-5.992142,3.677775,1.885964,-7.545366,8.650071],[-5.250259,3.357372,-2.054182,6.997727,-8.860590,-3.717577,-8.327616]],[[6.863611,-5.968509,-6.765594,-0.945211,1.819384,9.527301,-7.134494],[-5.511449,0.006240,2.477841,6.770313,7.929641,-6.620521,3.434305],[-3.790960,-5.305841,6.582637,4.341153,-2.217129,-1.089361,5.781711],[7.172461,5.577680,5.893585,-0.760579,-2.415540,-4.318971,-4.694241],[4.539965,5.673681,3.831642,2.206994,7.030431,-6.212721,-7.022186],[3.766772,6.435379,3.026350,-6.892529,5.342023,3.514165,-0.212732],[0.449862,3.600373,6.887970,-0.645508,-5.640287,3.914521,-0.423760],[-7.893319,5.244181,-1.183929,-5.980577,2.750524,0.968398,1.456961],[-3.068178,-8.852750,-2.844476,-4.778325,5.123487,-1.446477,-8.913127],[9.653116,-3.196452,-9.867551,9.152196,-6.559276,-2.957700,-7.012701],[-1.579797,2.954381,-5.574115,-3.713866,0.891735,-1.969950,4.258325],[-1.779290,-5.189440,-8.218264,9.297301,-8.740886,9.982707,-9.568409],[6.864880,5.050773,-7.037607,-1.937729,9.896314,5.832879,-0.657254],[2.823242,0.139073,2.550290,2.112205,-0.541219,-1.806059,0.384076]],[[5.561075,-3.853273,-4.883771,-7.572221,-9.488140,9.553985,5.638328],[-7.029892,-0.741174,9.104407,6.727280,-3.613571,-2.548236,-2.888676],[5.617683,-0.072395,6.069599,8.501254,7.671514,8.026199,8.589057],[8.177796,1.607073,-1.239795,0.213546,6.625670,-4.776901,9.846333],[-4.949095,-7.165926,9.818212,-1.530600,3.001412,-7.778218,9.331068],[-7.917473,8.338495,3.768116,2.981802,-1.077266,2.898480,1.017278],[9.410542,-5.352823,-5.637530,-8.952009,-9.457608,5.839717,-4.957516],[-1.397782,0.023254,-9.988786,-3.266310,6.571757,0.254172,-3.538440],[-5.551149,7.623336,-4.740743,7.242050,-7.079277,-6.491196,2.983128],[-4.669161,4.829361,4.581745,3.914255,2.870013,-7.350079,3.486455],[7.578981,-6.168631,6.410185,3.875522,-1.895563,7.747276,-9.701463],[6.940027,8.830119,-3.766672,-9.126742,2.328463,2.582542,0.940429],[0.603300,-8.750439,-6.771227,-9.867585,-1.624510,7.333003,9.664114],[4.669526,-3.453355,9.438477,-1.322326,-7.858392,8.880488,-3.577663]],[[3.696068,-5.383265,-0.596111,8.466233,-3.522254,-3.063537,8.516884],[7.742783,-8.557994,1.155679,3.787020,-5.384979,-2.005894,-6.247435],[-3.490635,-8.950963,-8.487918,9.367718,3.460806,1.269572,-5.518282],[-3.200164,5.676957,-3.991677,-6.335287,-9.986871,-4.651668,6.154167],[3.579921,5.442067,-2.988542,4.387965,-0.346147,3.827403,0.089371],[0.869428,0.167583,-6.778396,7.942133,-1.466269,-7.969603,4.935446],[-9.544850,3.363515,-9.302764,3.992851,-2.532757,5.974630,6.237781],[1.545391,1.304456,3.214682,-8.190118,4.805002,-8.555112,-9.505246],[-1.305357,-7.238770,-1.742310,0.315601,-2.013545,-9.748656,3.007031],[0.124259,-7.133539,-8.922483,-5.366686,-1.809515,9.228220,-2.227947],[-1.533951,-7.505844,0.746948,0.650882,-4.431659,-7.515213,7.333891],[4.312571,6.732743,-5.822955,0.593986,6.247654,-4.894482,5.646769],[-9.833228,6.320726,-8.488457,2.497494,-1.565114,9.585324,9.586721],[0.596059,-0.345095,-2.841497,-6.405298,-3.785614,7.012703,8.446157]],[[5.269745,9.101549,-9.490555,-6.020508,-8.894798,-6.505879,-9.226519],[1.370169,-3.678698,4.838718,6.036100,-1.968432,-7.688285,-0.606907],[-7.897259,2.283759,-5.174731,9.247200,4.844486,1.373686,-8.512683],[5.350865,7.968101,-3.441913,3.075628,6.481995,5.434648,-9.547502],[-0.577073,6.409620,-6.190411,-7.001866,6.110955,-0.480894,-4.847888],[-1.171423,1.044100,8.280216,-1.896304,-0.093972,0.077081,0.196761],[9.184108,-8.207403,-0.289378,1.640787,-1.474372,7.597404,4.783793],[9.723296,0.910966,-4.798856,4.117329,0.824741,-8.802211,3.767342],[8.113725,-4.064312,4.671369,-8.762133,3.300654,-5.062652,-4.364935],[5.122598,4.429085,8.252666,3.123463,-9.075282,7.802489,-1.575550],[0.266186,-8.835883,-0.531176,-3.914742,5.585248,1.591101,-9.431567],[4.701612,8.136534,-8.553586,1.563039,8.488793,-2.185833,9.377079],[-8.658949,4.473245,6.245349,-0.026457,-9.385857,9.742948,-6.433069],[-9.816200,9.600875,4.748648,8.557008,1.370517,5.496616,5.883306]],[[-9.769942,2.609346,-1.823427,7.715525,-9.091916,-9.195163,-3.298695],[7.669939,-3.435397,4.733297,2.943142,9.405253,-9.770486,7.397848],[4.551608,4.857098,6.311947,-1.165325,5.203976,6.205338,-5.056732],[4.486809,-9.694770,1.135773,-9.452743,-4.855347,8.757071,-8.522378],[-5.699430,6.010779,-4.854226,-8.645893,2.582756,-8.779033,-9.756767],[4.000518,9.164935,8.247509,5.532150,-8.259088,9.520038,0.211147],[-2.183632,-5.311186,1.237315,0.794150,3.767201,2.605424,-4.030809],[8.165237,7.424424,5.597166,8.458914,-8.247493,9.702352,4.923196],[0.741158,7.896695,-6.262980,2.201102,4.989797,-0.547049,-3.163508],[-1.307763,8.506088,0.296765,-3.212651,4.740047,7.683637,-4.152902],[-6.038416,9.233550,-1.281262,-0.495547,-1.039652,-1.135611,-1.482382],[-1.697828,-0.611806,5.222841,6.078324,-7.584476,-7.795548,2.689150],[-0.261715,-3.075059,8.986009,-8.241982,6.923453,2.582175,-3.876615],[6.363025,-6.951355,7.119867,-7.651583,-3.519448,6.427104,9.037508]],[[-2.392536,3.886750,-9.819225,4.558607,0.637681,2.705813,-7.690519],[8.880571,-3.353964,6.682732,-0.679766,9.592560,-5.740336,-3.933969],[8.933063,9.351700,7.334910,-8.572609,-8.169533,6.371918,9.798914],[-7.668040,1.794958,9.646414,2.111575,-9.423499,8.465834,-4.928881],[7.330192,-2.029054,2.558765,-3.068929,-5.632969,-0.757837,8.024979],[9.114459,2.590852,-3.336944,7.091958,-2.509357,5.540203,-3.436638],[3.584733,-8.433628,-3.035038,4.721157,-8.611857,-9.848527,-8.216339],[6.805977,-5.446899,-4.719025,8.744226,9.728287,-7.052936,0.749790],[-9.916517,2.019947,-3.511585,2.179079,-0.672699,-6.282545,-7.732063],[2.497146,-2.613660,-3.536041,2.257232,-7.672248,-6.954559,7.623190],[8.184017,-4.124786,4.264970,5.548100,7.343579,-2.839360,8.390573],[-0.169287,6.228178,-3.354236,-8.742636,-0.389052,-8.563302,-4.930859],[-3.066452,5.986081,-7.232492,-0.631837,1.548022,-9.908085,-9.388793],[-2.134009,3.416419,7.966998,5.280358,-9.823972,2.945316,8.029663]],[[5.086186,-5.018906,-7.149612,-2.621606,6.590339,-0.291464,-4.196024],[6.974121,2.035753,9.771736,-0.175047,2.754301,-7.175621,9.009386],[-8.429391,6.272647,4.074088,-9.027446,-0.585350,-7.152401,4.859581],[-6.078309,5.781233,-8.865039,-7.307423,-5.262006,-1.764820,-2.164177],[8.188588,-9.659923,-3.957886,-1.796192,0.152521,6.214330,0.222968],[3.185290,-0.836775,-1.511679,1.692776,-2.323457,-3.172316,-5.869734],[-4.796425,-0.770311,4.791123,-2.473759,-9.375485,7.248329,5.436540],[9.201830,-7.486971,7.141943,1.261227,6.107049,-9.861925,-6.860683],[-3.688118,4.887136,7.298898,-5.725246,0.293967,-7.712279,1.111506],[1.360681,1.873917,0.719701,-8.022271,-4.111291,8.083655,-8.858609],[-9.619614,-2.355153,-9.702709,2.171605,2.344382,-9.116269,-8.644042],[5.376148,-8.312848,-9.333590,4.765325,3.656389,-8.460699,7.994555],[9.456299,8.168504,-5.891740,-3.885228,-3.229332,-6.397731,-3.024935],[-0.403206,-4.341882,-1.623928,-1.327755,-1.433751,4.901084,7.649734]],[[4.852685,9.860708,2.458509,-6.563970,-0.209280,-7.596050,1.909038],[2.496239,7.890685,-9.241013,0.724708,-8.523548,-7.381530,2.763336],[-5.155145,3.841959,-1.506354,3.167693,-9.229213,7.056536,-0.984161],[7.905327,8.354453,7.913102,-4.028624,-7.011307,6.983702,6.239378],[2.705780,1.748073,-8.874954,0.723307,9.912930,-2.333585,2.326729],[-5.287230,7.904705,4.798610,-9.246448,6.911590,-3.039618,-2.062815],[-4.877563,3.237912,7.457236,5.341299,-0.231711,-0.995612,8.168931],[2.050589,-2.424039,1.117992,6.713614,-7.069022,5.620487,-7.009337],[2.310987,2.361078,-0.792587,0.310611,7.754546,7.874799,-4.015308],[7.056197,-2.510271,-6.473403,5.565961,-6.295987,-6.679117,-7.877535],[-9.088410,5.616695,-7.844763,6.154365,-1.810220,-8.691292,-7.295929],[5.301812,3.121104,-8.451330,9.773626,-5.577220,-8.301881,5.403685],[-6.910209,0.528149,-4.278424,-7.418877,6.006825,3.729797,8.177788],[-9.848019,-4.302963,-5.423580,-4.939287,4.734794,5.083951,-4.933452]],[[9.518696,-2.032538,-3.021539,-5.303513,-8.927833,5.687362,4.320725],[6.475349,-7.058579,-8.686691,6.464565,-0.951237,2.147664,5.705344],[6.788642,8.208263,5.553239,-5.738306,8.722627,-3.551482,-6.886859],[3.170398,4.944997,-9.017156,-2.327031,-2.917356,6.363763,-4.123396],[-9.425073,6.641472,9.604369,-6.981676,-0.017541,-2.463798,-9.748729],[7.262225,-7.873353,-3.265076,-7.350838,3.543013,7.126918,-2.966070],[-4.987022,6.968102,4.257900,2.709785,4.735628,0.835892,-3.640861],[3.509318,0.624578,7.028499,-6.693817,6.009726,-1.211088,0.809471],[-7.013935,-8.676939,-3.361944,6.331518,-5.834888,7.016811,9.759774],[5.951238,-5.579955,-5.263610,-5.008651,-8.686563,4.067337,2.151405],[-7.698588,1.298692,-6.409655,-8.913991,4.213245,-7.362442,-4.968719],[-2.061331,9.084483,3.836655,-5.058094,8.741061,-0.876707,8.031476],[4.646639,6.396223,-1.778548,-6.499736,4.844477,3.129092,-9.137947],[-0.253693,8.833813,-6.117226,8.657454,4.935429,3.367246,-2.003250]],[[-1.322107,1.386879,-8.650217,9.355251,8.106562,9.042098,-7.310470],[-2.403355,5.331948,5.021030,2.260517,9.803642,-3.308954,-9.073474],[7.945119,2.508761,2.193812,4.495371,5.828569,-2.280200,-3.958179],[7.667322,-5.140453,5.089066,3.113393,9.197935,8.016208,3.905817],[0.171778,1.130041,-6.142856,-8.162893,-4.367687,7.152795,-9.196199],[-5.451347,9.284056,-2.383122,1.732135,2.294676,-2.176538,1.772145],[9.135752,7.982201,4.248385,6.212410,4.112513,8.232850,3.416681],[-7.029874,-1.499764,-4.053886,-4.579254,1.250169,9.093760,-0.984705],[4.872712,4.931368,-0.146862,4.268629,8.616600,1.092756,-6.860294],[-0.968496,3.245094,-5.671038,-7.399513,-0.332570,5.678853,-7.101375],[-4.104525,-8.016171,2.173128,0.329716,7.813299,5.705863,3.873950],[2.187453,4.507733,-2.474574,-4.060786,-5.859040,6.239249,-8.194950],[-2.597080,4.343787,8.933824,3.027262,1.875992,7.445053,0.355207],[-7.735991,8.403917,6.211349,8.310190,-0.493918,-6.126805,-2.787441]]], dtype = "float64")#candidate|5266|(11, 14, 7)|const|float64
bop_5267 = relay.bitwise_and(call_5258.astype('uint64'), relay.reshape(const_5266.astype('uint64'), relay.shape_of(call_5258))) # shape=(11, 14, 7)
bop_5270 = relay.bitwise_and(call_5259.astype('uint64'), relay.reshape(const_5266.astype('uint64'), relay.shape_of(call_5259))) # shape=(11, 14, 7)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5271 = relay.TupleGetItem(func_5084_call(), 2)
call_5272 = relay.TupleGetItem(func_5086_call(), 2)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
const_5286 = relay.const([6.105400,4.086779,-5.653613,-1.266056,5.465141,-0.890592,-6.282536,2.574342,-2.474898,2.839772,6.405405,-0.274172,-0.494510,-6.719261,-4.928730,3.668010,3.569356,-7.858387,-6.336658,8.909526,-7.706360,-1.231285,-7.870768,-6.526832,-9.509172,7.610824,-9.762025,-0.522200,3.276634,3.030219,-1.476325,-5.883600,8.785483,1.094375,9.543878,6.960189,-5.626944,-2.537505,8.986896,5.938126,1.511506,-6.752675,3.549701,-6.242916,6.963641,-3.836078,-2.121749,-8.316327,2.526998,8.067578,-0.265212,-5.472212,-7.144620,6.295916,-1.841151,-7.378573,7.974234,4.914257,1.903106,-9.835825,7.698923,-1.595592,5.313871,-1.273291,0.882722,1.787647,-3.518690,-0.036694,9.423929,3.671852,9.245208,8.516155,-8.695538,8.222177,-7.938553,-1.008640,-8.218020,8.529021,8.067430,-9.408169,-2.349201,5.918839,5.573605,3.302763,8.005484,-3.412198,-7.694138,-8.004879,6.388531,-1.111552,7.430424,0.269520,-5.599776,1.850568,-7.021830,-9.862799,1.135344,-7.055575,3.943819,8.770059,-5.506662,3.798693,4.569453,0.990976,8.069481,-0.567953,-2.708788,-3.200261,7.676834,8.869997,1.168116,-0.845749,8.608262,-3.636721,-5.315506,2.542297,9.124810,-3.554147,-9.658199,5.120609,9.398694,-3.672170,-0.298112,-8.173400,-4.810250,6.463772,9.472659,3.067463,-6.060327,-9.474679,6.532317,6.851305,-1.509479,-0.843046,7.674593,7.414000,0.275260,9.641297,-7.441018,7.021405,3.473822,9.547270,-7.883944,9.234163,-8.863555,-6.635271,0.620667,-8.078130,7.107468,8.241366,0.263453,8.578239,-1.786596,-5.681600,1.101934,-2.062730,-0.317228,9.660635,-1.671627,-1.536250,-9.488273,-9.571198,-2.858712,-3.463839,4.929923,1.636002,-3.701822,-4.840993,9.065681,8.758944,-0.727978,8.114862,3.469893,-5.591417,6.134750,-1.610400,7.412782,4.051048,-4.215608,5.322758,7.427902,-0.516347,3.584508,2.408628,9.385960,4.245130,-3.462906,-7.519494,-9.085294,1.302888,4.194189,4.545141,-1.076399,8.454701,-9.214738,9.760816,5.414943,4.713033,-4.704366,6.025304,-5.513967,5.809070,1.708181,-0.173538,-0.879681,5.224050,-0.178414,-7.616811,8.564883,3.242973,-0.061602,-4.575530,-3.930698,1.125914,-1.168069,-4.685480,5.027842,9.262496,0.179367,-6.206025,6.323319,-9.568461,6.269957,-1.230586,-1.110961,-5.195546,-9.942073,-1.939238,1.608246,1.873384,-8.368342,-4.726413,-5.519098,-3.750308,4.726444,6.514960,-6.986800,-8.034747,1.149619,-2.174515,-6.170287,-9.354008,9.937532,0.825070,-7.006907,-2.720556,-5.870041,6.343572,-7.576654,4.086211,-6.882866,-7.918384,-7.871988,-8.416281,-8.396359,0.480530,-8.518946,6.395672,-2.602181,-3.758210,-5.511288,9.261764,4.643256,8.040659,-0.968900,2.749723,4.502792,3.928538,4.026615,0.346517,-6.610873,-6.738441,3.529447,3.825619,0.151219,-3.478898,-6.821131,-6.182745,-9.412837,-7.913328,-1.707523,-8.508552,8.948974,0.248934,4.484133,-8.811939,3.808376,-5.795488,3.346128,-8.217036,4.267845,-9.753894,-7.070840,3.329152,-2.769075,2.975032,-8.122339,-0.151567,2.726067,-9.988210,3.774717,6.934928,0.520712,7.688354,3.029671,4.817086,-3.269242,-0.114976,8.344623,-1.322969,4.733502,-5.961981,1.930801,-1.749618,9.638727,3.717281,0.904313,7.063242,8.257089,8.733328,5.376457,0.077259,-2.201345,-2.158443,-9.478675,3.409308,8.854517,0.286671,1.770308,8.668328,-0.197764,3.417771,9.892466,-7.404108,1.483358,8.320424,5.247123,-1.835443,4.824504,5.490786,7.830002,6.653244,-0.653041,8.537606,-6.622748,-4.558366,-7.386454,7.924395,8.085178,-2.641095,5.384059,9.569859,-6.626371,1.492314,-8.989077,5.264271,6.931895,-4.696339,8.134808,8.941901,0.009418,-8.817220,8.807507,2.805582,-7.866018,0.860907,-1.299397,-2.176918,6.882988,-0.076685,-9.350654,4.741704,-8.507749,3.013669,-9.510496,-0.684183,7.699712,3.386030,-1.355278,1.674061,-1.431644,-2.369426,0.096874,9.586888,-0.938392,-6.155769,-5.016965,2.737468,-4.904226,-1.540194,4.040934,-2.223639,-3.364490,-4.231700,-7.161056,7.624718,-2.553665,8.653702,-4.514306,-0.524893,-3.069737,8.241451,4.982522,-8.053966,2.575898,-8.315993,3.889765,4.599828,-7.568586,-1.561387,5.114288,0.481335,2.087298,1.219966,0.890972,4.473465,1.755974,-9.080185,7.411597,-3.911816,-4.699694,6.722362,5.541046,8.447463,-7.041935,-9.312328,3.444360,-7.135223,7.060207,-2.011353,9.603497,-8.666566,-9.758037,5.138565,1.409561,-9.557891,-0.307617,4.596114,5.559285,8.323424,-4.518527,6.597782,5.747265,0.386191,-2.517908,-8.570097,4.150079,-1.810705,4.671074,4.715721,3.842825,-4.776764,4.483899,6.288643,-9.762877,8.442593,-7.707575,-8.589592,-6.793872,-2.061032,2.847132,-5.475306,-8.649569,-3.750182,1.644612,-5.705055,-0.836514,-0.224678,2.132090,-8.858956,5.954894,-9.009523,-4.916112,9.545638,-1.003018,5.923662,-9.485420,-3.970813,-1.367877,0.218106,-3.449776,-4.457275,-8.813242,9.245960,-2.312020,-0.105626,5.159108,-6.354745,9.379981,-8.862245,8.884295,-7.432556,3.120310,-4.055761,4.065557,4.533321,-1.637689,-4.911002,4.667871,-3.734437,5.320123,8.888075,4.440762,8.134449,5.273312,4.725412,1.829887,3.705689,-3.248926,4.953306,5.592409,-9.230640,-3.136039,-4.892355,-4.730006,-8.253373,8.281358,-8.818903,5.451599,-5.747263,7.914588,4.047827,9.853906,3.652742,9.515465,6.681138,-4.957953,-2.688567,8.071269,-2.976666,7.781147,4.350722,-8.697523,1.745278,2.381506,-1.294657,9.001210,-6.161101,-7.094775,2.264156,-4.334684,-7.034511,-0.612631,1.289549,-9.231665,3.718501,-3.925312,-8.210208,-1.651116,-1.862420,8.482504,-5.077718,9.591264,4.174086,-6.788192,8.057283,-3.649344,7.470927,-6.073132,-6.575177,-5.820009,-4.664611,-2.217456,3.300542,-1.876360,8.033957,1.925638,0.820711,-2.589682,-8.888958,9.846972,1.536347,-5.623318,-1.176596,4.618225,0.676388,-7.573980,0.391754,-0.744877,6.833739,-5.483636,6.096452,-4.971954,-1.554774,2.119600,3.270773,-9.241720,-0.798751,-5.317801,2.620717,2.472929,7.224370,-7.331876,4.396270,-2.878056,-9.532415,1.222001,-0.474838,-3.609289,-4.928743,4.609340,-0.352116,-6.486028,-4.341764,7.983780,-2.183659,-1.109873,-2.002153,-6.846741,-1.599863,-5.366858,-2.275054,-5.658502,2.688926,5.828432,-3.704152,6.112636,7.755975,-3.090492,-0.997588,1.973277,-1.477943,3.678277,9.489968,-5.043316,-1.901029,-0.886047,-9.671231,9.274644,1.726268,4.262787,5.196533,-3.735866,-4.053991,8.459538,-1.268749,-6.758891,-1.891080,6.449728,7.864997,1.282291,-5.930131,-6.308372,-6.811754,-1.173657,1.758055,-8.602768,-8.639338,0.725615,7.290905,-3.201525,5.769407,-5.354639,-6.792862,0.092113,-6.242356,4.884059,-8.515989,6.667836,5.723068,-3.548999,-4.853882,0.985795,0.076944,2.451430,6.121957,-6.161503,-0.156033,4.988375,-9.661279,8.134652,4.690495,5.481311,-5.444624,5.840544,-0.037583,-8.901130,-9.263630,-8.364994,-8.450071,-0.210801,8.102611,2.686352,8.933900,-5.736156,9.493687,-1.085988,-2.903905,8.197399,6.880036,-4.858223,-0.939717,-7.049610,-9.575696,7.752414,-9.881467,2.595796,-3.058027,-2.007320,4.459828,-4.245861,-9.975317,6.696447,-5.586001,9.517130,5.847435,-8.369246,1.158807,-1.265239,5.816293,-7.301270,6.192253,3.791453,-8.253131,-8.658556,-1.379585,7.027325,1.544759,8.141611,4.414955,3.259311,-3.180786,-0.192144,-4.721103,5.510878,-2.383695,-1.799178,2.202657,-3.104357,9.032943,8.773552,4.077768,-4.466155,-2.866163,-2.163377,-9.209827,-0.406365,8.317895,-9.839926,-1.252682,0.710809,-8.928917,-7.746139,2.381652,1.788836,1.150938,-4.175041,7.916245,-4.448147,-8.580771,5.281995,-0.168029,6.411416,3.422184,-2.454946,-7.906087,-8.248502,9.726992,-1.552477,0.015966,7.174270,0.083005,5.872463,-9.720084,-0.990558,2.918075,1.430069,8.317510,4.330627,1.344603,-3.279828,-9.262184,-4.599177,-0.361000,-5.705863,-1.412511,-6.379479,-0.994032,5.701763,1.566699,0.179493,0.697459,2.059049,-2.751756,2.389972,-5.518750,0.470001,4.024665,-4.926921,-5.125594,7.430397,-1.768753,-4.841348,-2.093340,1.958794,1.713174,-4.107018,8.582800,-0.948779,-5.277506,6.070033,5.929190,1.736931,-9.114697,-2.522414,6.233957,-2.297760,-2.227529,-8.355709,-2.118467,-9.066623,-6.229026,-6.325182,-5.974074,6.351320,5.938979,8.721392,8.891579,4.358817,-4.875620,7.005425,2.926864,5.026023,-2.337097,-8.992355,9.717956,6.150370,7.819534,-2.365253,-7.472315,5.092731,-7.716002,-5.992917,5.018052,-7.504362,-4.632170,6.724655,0.931579,8.697468,-6.667026,-9.272842,-8.257936,-2.675171,3.142701,-5.684368,-3.530109,2.058113,-4.217670,2.620599,2.992655,-1.292106,0.621471,-6.315999,-7.209653,-4.945286,0.018465,2.454867,-2.640563,-7.243992,-6.443858,4.336229,-3.641919,9.382368,7.107632,-3.539830,-5.056209,-9.616190,2.390081,-5.066367,-1.932516,-9.903758,7.686956,1.346244,4.143160,-3.146549,-1.184367,2.345407,-5.657008,-6.977664,6.541960,1.940273,9.334427,8.267953,-4.527014,-5.592345,-0.331453,-6.569165,-7.939368,-3.708504,7.466686,8.696702,-8.212485,-2.770592,-3.124568,-9.687470,-1.502521,1.976918,4.957892,-7.454831,0.413925,-0.637339,4.780434,5.236294,5.417618,-8.007266,-7.459435,-0.854086,-5.972573,-9.683154,2.551154,-5.940805,-7.642191,9.719428,-5.732891,7.157207,4.807964,6.155527,-7.826687,-8.159725,-0.804295,0.322414,0.205956,-8.079003,-5.841463,-5.151693,4.403796,7.968531,-6.487125,-8.919637,-9.014028,-7.814827,2.812904,2.718445,9.466114,2.177226,-4.277244,-6.006047,4.413303,6.695510,3.512540,0.403300,-3.820341,-0.327274,-5.926012,2.884109,-4.081173,-3.823849,0.784192,-8.706638,0.555978,6.275852,-5.886075,4.515509,-9.508244,1.893624,-0.279996,-9.821483,-0.450772,-3.830625,7.197233,4.306393,6.499755,-0.859860,9.968604,2.923429,-9.430908,-5.748170,5.890305,-3.369945,-6.765320,5.756585,3.752401,9.884634,0.427706,-3.999645,6.449422,-8.950462,7.399830,-0.048788,7.604751,9.711848,-6.261557,-6.558007,-3.794452,5.658651,0.437803,1.273034,-3.667083,-6.262698,-4.347806,6.672258,-9.299294,9.422227,-3.110063,8.055715,8.854174,6.954335,-9.734822,0.287765,0.555258,-4.957417,-7.669273,3.330965,-9.415330,-1.927268,-7.451062,5.340083,8.756504,-8.510442,-1.429931,-6.706498,-1.403795,0.080468,6.371188,7.579818,3.100591,7.449252,-7.578658,-1.884681,-5.454485,2.077122,-6.363615,-1.299751,8.982290,0.781330,-1.478730,-5.904246,-3.239765,4.661834,-0.240622,-7.588590,-0.283193,1.843310,-4.207355,-7.553342,-6.706114,8.060424,-8.553131,9.979258,-2.115930,6.279925,-1.593647,3.875614,9.241639,-1.145040,-5.545791,0.076392,0.205739,9.795377,-3.343898,-8.633796,2.233601,-5.339461,4.124470,-9.663374,-6.896895,-3.369954,5.922884,1.455485,0.320167,-2.862339,-4.511799,-8.222802,6.053062,3.676986,4.228853,-9.661014,1.753318,-6.964903,-2.306544,-6.968093,-4.449594,3.399187,9.349035,-2.447661,2.682803,-1.856399,-6.056779,3.437860,-9.250218,-1.099203,-2.380861,-8.065644,0.927396,7.037483,0.663567,-7.847992,-7.893220,6.120256,0.338448,-4.568404,6.680554,-9.887539,-9.215582,8.109353,1.178974,-7.051526,-4.577566,7.121925,-8.110197,-4.854484,1.813528,0.235050,-0.404411,2.787200,0.531479,-7.996400,-7.550366,-9.744555,-1.719400,6.085738,9.478014,-9.000548,-3.866597,5.393936,-8.180691,4.034734,7.576587,1.950190,2.845005,1.592813,8.364754,6.004690,-0.338146,-4.732218,3.630863,-9.172743,6.541132,7.055864,2.007518,-0.984474,-3.043888,0.254381,2.735785,2.191630,5.177077,0.258999,1.621401,-1.172830,-6.915435,-6.232947,-9.697233,9.869120,6.446003,5.809771,2.452437,-6.943201,2.183980,1.370064,9.276825,-0.368744,4.522701,0.270749,-9.651889,4.700910,-5.043106,2.267815,-6.480449,-5.495992,3.968754,-0.790516,-0.131473,-7.121653,-8.058632,-1.625936,-4.486786,-4.784439,-7.664138,-1.626737,3.603073,4.822979,-7.437524,-4.789598,2.578475,-2.742132,2.318758,-0.778145,-6.201338,8.854391,-6.868953,-9.323430,-2.461896,4.752595,-6.313615,-1.839057,4.198585,1.738885,-4.897309,-2.957141,-9.229654,-3.799853,-4.916508,0.831921,5.381198,5.853037,-4.838476,-3.091004,3.167054,7.659570,-5.209565,9.022316,-2.562736,6.427711,3.798370,-8.862552,-1.367844,5.119973,9.138248,2.992730,2.724156,8.147134,-0.084702,9.016065,7.792831,4.415202,-4.859594,6.372682,7.914419,2.353165,-3.676740,9.625564,-2.665954,5.234011,4.371944,-0.637661,-3.495546,7.415258,6.126883,-7.122622,9.039661,-7.191788,-5.006497,-6.299577,-7.407763,-8.843525,-3.798264,-0.694372,-2.030095,-4.107165,-1.091147,5.671298,-0.364587,-7.062177,3.759815,-0.392511,-7.914554,-3.766932,-2.239314], dtype = "float64")#candidate|5286|(1248,)|const|float64
call_5285 = relay.TupleGetItem(func_4132_call(relay.reshape(const_5286.astype('float64'), [1248,])), 0)
call_5287 = relay.TupleGetItem(func_4134_call(relay.reshape(const_5286.astype('float64'), [1248,])), 0)
output = relay.Tuple([bop_5267,call_5271,call_5285,const_5286,])
output2 = relay.Tuple([bop_5270,call_5272,call_5287,const_5286,])
func_5297 = relay.Function([], output)
mod['func_5297'] = func_5297
mod = relay.transform.InferType()(mod)
mutated_mod['func_5297'] = func_5297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5297_call = mutated_mod.get_global_var('func_5297')
call_5298 = func_5297_call()
output = call_5298
func_5299 = relay.Function([], output)
mutated_mod['func_5299'] = func_5299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_5314 = func_2337_call()
call_5315 = func_2337_call()
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_5327 = relay.TupleGetItem(func_3481_call(), 0)
call_5328 = relay.TupleGetItem(func_3483_call(), 0)
func_5216_call = mod.get_global_var('func_5216')
func_5218_call = mutated_mod.get_global_var('func_5218')
var_5344 = relay.var("var_5344", dtype = "int64", shape = (495,))#candidate|5344|(495,)|var|int64
call_5343 = func_5216_call(relay.reshape(var_5344.astype('int64'), [495,]))
call_5345 = func_5216_call(relay.reshape(var_5344.astype('int64'), [495,]))
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5365 = relay.TupleGetItem(func_5084_call(), 0)
call_5366 = relay.TupleGetItem(func_5086_call(), 0)
output = relay.Tuple([call_5314,call_5327,call_5343,var_5344,call_5365,])
output2 = relay.Tuple([call_5315,call_5328,call_5345,var_5344,call_5366,])
func_5371 = relay.Function([var_5344,], output)
mod['func_5371'] = func_5371
mod = relay.transform.InferType()(mod)
mutated_mod['func_5371'] = func_5371
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5372 = relay.var("var_5372", dtype = "int64", shape = (495,))#candidate|5372|(495,)|var|int64
func_5371_call = mutated_mod.get_global_var('func_5371')
call_5373 = func_5371_call(var_5372)
output = call_5373
func_5374 = relay.Function([var_5372], output)
mutated_mod['func_5374'] = func_5374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5386 = relay.var("var_5386", dtype = "float64", shape = (1, 11, 12))#candidate|5386|(1, 11, 12)|var|float64
uop_5387 = relay.asinh(var_5386.astype('float64')) # shape=(1, 11, 12)
uop_5391 = relay.log10(var_5386.astype('float32')) # shape=(1, 11, 12)
output = relay.Tuple([uop_5387,uop_5391,])
output2 = relay.Tuple([uop_5387,uop_5391,])
func_5395 = relay.Function([var_5386,], output)
mod['func_5395'] = func_5395
mod = relay.transform.InferType()(mod)
var_5396 = relay.var("var_5396", dtype = "float64", shape = (1, 11, 12))#candidate|5396|(1, 11, 12)|var|float64
output = func_5395(var_5396)
func_5397 = relay.Function([var_5396], output)
mutated_mod['func_5397'] = func_5397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_5433 = func_4096_call()
call_5434 = func_4096_call()
output = call_5433
output2 = call_5434
func_5438 = relay.Function([], output)
mod['func_5438'] = func_5438
mod = relay.transform.InferType()(mod)
mutated_mod['func_5438'] = func_5438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5438_call = mutated_mod.get_global_var('func_5438')
call_5439 = func_5438_call()
output = call_5439
func_5440 = relay.Function([], output)
mutated_mod['func_5440'] = func_5440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5479 = relay.var("var_5479", dtype = "uint64", shape = ())#candidate|5479|()|var|uint64
var_5480 = relay.var("var_5480", dtype = "uint64", shape = (3, 1, 13))#candidate|5480|(3, 1, 13)|var|uint64
bop_5481 = relay.bitwise_and(var_5479.astype('uint64'), var_5480.astype('uint64')) # shape=(3, 1, 13)
func_2709_call = mod.get_global_var('func_2709')
func_2712_call = mutated_mod.get_global_var('func_2712')
var_5489 = relay.var("var_5489", dtype = "int64", shape = (495,))#candidate|5489|(495,)|var|int64
call_5488 = relay.TupleGetItem(func_2709_call(relay.reshape(var_5489.astype('int64'), [495,])), 2)
call_5490 = relay.TupleGetItem(func_2712_call(relay.reshape(var_5489.astype('int64'), [495,])), 2)
output = relay.Tuple([bop_5481,call_5488,var_5489,])
output2 = relay.Tuple([bop_5481,call_5490,var_5489,])
func_5494 = relay.Function([var_5479,var_5480,var_5489,], output)
mod['func_5494'] = func_5494
mod = relay.transform.InferType()(mod)
var_5495 = relay.var("var_5495", dtype = "uint64", shape = ())#candidate|5495|()|var|uint64
var_5496 = relay.var("var_5496", dtype = "uint64", shape = (3, 1, 13))#candidate|5496|(3, 1, 13)|var|uint64
var_5497 = relay.var("var_5497", dtype = "int64", shape = (495,))#candidate|5497|(495,)|var|int64
output = func_5494(var_5495,var_5496,var_5497,)
func_5498 = relay.Function([var_5495,var_5496,var_5497,], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_5515 = func_3347_call()
call_5516 = func_3347_call()
output = relay.Tuple([call_5515,])
output2 = relay.Tuple([call_5516,])
func_5519 = relay.Function([], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5520 = func_5519_call()
output = call_5520
func_5521 = relay.Function([], output)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5539 = relay.var("var_5539", dtype = "uint16", shape = (10, 8, 2))#candidate|5539|(10, 8, 2)|var|uint16
var_5540 = relay.var("var_5540", dtype = "uint16", shape = (10, 8, 2))#candidate|5540|(10, 8, 2)|var|uint16
bop_5541 = relay.greater(var_5539.astype('bool'), relay.reshape(var_5540.astype('bool'), relay.shape_of(var_5539))) # shape=(10, 8, 2)
output = bop_5541
output2 = bop_5541
func_5560 = relay.Function([var_5539,var_5540,], output)
mod['func_5560'] = func_5560
mod = relay.transform.InferType()(mod)
var_5561 = relay.var("var_5561", dtype = "uint16", shape = (10, 8, 2))#candidate|5561|(10, 8, 2)|var|uint16
var_5562 = relay.var("var_5562", dtype = "uint16", shape = (10, 8, 2))#candidate|5562|(10, 8, 2)|var|uint16
output = func_5560(var_5561,var_5562,)
func_5563 = relay.Function([var_5561,var_5562,], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4710_call = mod.get_global_var('func_4710')
func_4712_call = mutated_mod.get_global_var('func_4712')
call_5603 = relay.TupleGetItem(func_4710_call(), 1)
call_5604 = relay.TupleGetItem(func_4712_call(), 1)
func_3894_call = mod.get_global_var('func_3894')
func_3898_call = mutated_mod.get_global_var('func_3898')
var_5612 = relay.var("var_5612", dtype = "int16", shape = (208,))#candidate|5612|(208,)|var|int16
const_5613 = relay.const([[4],[2],[3],[-2],[1],[-7],[-5],[2],[-1],[4],[-2],[-1],[7],[-1],[3],[-9],[3],[10],[1],[-1],[7],[5],[-9],[7],[2],[10],[-8],[-4],[2],[-3],[-5],[3],[8],[-6],[-5],[-3],[6],[-4],[9],[-5],[-5],[-4],[-7],[5],[6],[-6],[4],[8],[1],[3],[10],[-10],[-6],[-1],[8],[-5],[-2],[5],[9],[-9],[-9],[5],[4],[-5],[7],[3],[-6],[4],[-1],[-6],[-3],[-3],[9],[-4],[-7],[-3],[-10],[10],[-2],[-9],[5],[-6],[8],[2],[5],[10],[8],[-4],[-9],[-5],[-3],[-5],[-7],[-7],[3],[7],[1],[-10],[3],[8],[-9],[-7],[10],[-4],[-10],[-9],[7],[6],[-10],[6],[2],[-1],[7],[1],[3],[-10],[-6],[1],[-8],[8],[4],[-3],[-9],[9],[-5],[-3],[6],[-9],[5],[-5],[-7],[-3],[1],[10],[-9],[-1],[6],[-5],[4],[-6],[-7],[-5],[3],[10],[-4],[-8],[-9],[6],[7],[3],[-6],[10],[-8],[-7],[-1],[1],[-2],[-4],[10],[4],[-8],[-5],[-5],[9],[8],[-9],[-6],[-6],[-8],[-5],[8],[6],[4],[-4],[4],[10],[-10],[1],[7],[7],[-1],[10],[7],[-2],[-9],[-3],[-4],[-4],[9],[-7],[-5],[4],[-2],[-3],[4],[4],[6],[5],[-8],[-10],[5],[-3],[-10],[-1],[6],[-1],[3],[-8],[-10],[-5],[1],[-2],[-3],[-2],[-5],[9],[4],[10],[8],[5],[7],[7],[-3],[8],[6],[-10],[5],[3],[2],[-3],[8],[8],[4],[7],[9],[-8],[-8],[-8],[-9],[-8],[2],[-9],[-1],[-6],[-10],[1],[-1],[-9],[5],[10],[6],[10],[-2],[8],[-7],[-6],[4],[5],[-10],[10],[10],[-7],[8],[-7],[-1],[-9],[-5],[-2],[-9],[8],[-7],[-6],[-2],[8],[-4],[1],[10],[6],[-3],[3],[1],[1],[-2],[3],[-7],[9],[7],[-5],[-8],[8],[-3],[-7],[-8],[-5],[7],[-7],[1],[-6],[-4],[4],[2],[-3],[1],[-6],[5],[3],[7],[-3],[3],[8],[-5],[2],[-2],[8],[-7],[-5],[-8],[-8],[10],[-9],[1],[1],[2],[-3],[-1],[8],[-5],[-9],[-7],[2],[9],[-3],[-10],[9],[-6],[-3],[2],[3],[9],[2],[-8],[-5],[1],[9],[-10],[3],[2],[8],[8],[2],[-8],[1],[10],[-4],[1],[-10],[-6],[-1],[8],[6],[4],[-9],[7],[10],[7],[-1],[6],[2],[5],[8],[4],[6],[-2],[9],[-8],[-8],[-6],[1],[-4],[-1],[1],[-5],[2],[-7],[-5],[-5],[-3],[-9],[8],[5],[-2],[-8],[-1],[2],[-10],[-8],[4],[9],[1],[5],[1],[5],[10],[8],[-3],[-4],[7],[-5],[-3],[-8],[1],[5],[9],[3],[2],[-8],[-1],[6],[8],[-9],[-9],[5],[-9],[8],[9],[-6],[-10],[-8],[-6],[1],[-1],[2],[1],[-3],[-4],[-9],[7],[10],[-6],[9],[-2],[6],[7],[3],[4],[-3],[2],[-9],[3],[-3],[6],[9],[7],[1],[-8],[1],[-7],[-6],[-10],[10],[-2],[3],[10],[8],[-3],[10],[2],[-5],[3],[-2],[-8],[2],[1],[-10],[6],[7],[2],[-1],[-3],[6],[9],[-7],[9],[10],[8],[2],[-7],[9],[-2],[-9],[8],[-6],[7],[5],[-8],[7],[-10],[8],[4],[1],[2],[-8],[-10],[6],[-8],[2],[-2],[-8],[-6],[10],[5],[3]], dtype = "uint8")#candidate|5613|(512, 1)|const|uint8
call_5611 = relay.TupleGetItem(func_3894_call(relay.reshape(var_5612.astype('int16'), [208,]), relay.reshape(const_5613.astype('uint8'), [2, 256]), ), 4)
call_5614 = relay.TupleGetItem(func_3898_call(relay.reshape(var_5612.astype('int16'), [208,]), relay.reshape(const_5613.astype('uint8'), [2, 256]), ), 4)
bop_5629 = relay.minimum(const_5613.astype('int16'), var_5612.astype('int16')) # shape=(512, 208)
var_5632 = relay.var("var_5632", dtype = "uint8", shape = (2, 256))#candidate|5632|(2, 256)|var|uint8
bop_5633 = relay.power(call_5611.astype('float32'), relay.reshape(var_5632.astype('float32'), relay.shape_of(call_5611))) # shape=(2, 256)
bop_5636 = relay.power(call_5614.astype('float32'), relay.reshape(var_5632.astype('float32'), relay.shape_of(call_5614))) # shape=(2, 256)
uop_5639 = relay.sqrt(var_5632.astype('float64')) # shape=(2, 256)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5647 = relay.TupleGetItem(func_5084_call(), 4)
call_5648 = relay.TupleGetItem(func_5086_call(), 4)
func_5216_call = mod.get_global_var('func_5216')
func_5218_call = mutated_mod.get_global_var('func_5218')
var_5651 = relay.var("var_5651", dtype = "int64", shape = (495,))#candidate|5651|(495,)|var|int64
call_5650 = func_5216_call(relay.reshape(var_5651.astype('int64'), [495,]))
call_5652 = func_5216_call(relay.reshape(var_5651.astype('int64'), [495,]))
output = relay.Tuple([call_5603,bop_5629,bop_5633,uop_5639,call_5647,call_5650,var_5651,])
output2 = relay.Tuple([call_5604,bop_5629,bop_5636,uop_5639,call_5648,call_5652,var_5651,])
func_5655 = relay.Function([var_5612,var_5632,var_5651,], output)
mod['func_5655'] = func_5655
mod = relay.transform.InferType()(mod)
var_5656 = relay.var("var_5656", dtype = "int16", shape = (208,))#candidate|5656|(208,)|var|int16
var_5657 = relay.var("var_5657", dtype = "uint8", shape = (2, 256))#candidate|5657|(2, 256)|var|uint8
var_5658 = relay.var("var_5658", dtype = "int64", shape = (495,))#candidate|5658|(495,)|var|int64
output = func_5655(var_5656,var_5657,var_5658,)
func_5659 = relay.Function([var_5656,var_5657,var_5658,], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5664 = relay.const([[[-5,-5,-1,-3,-7,-9,-10,10,5,10,6,5],[-1,10,7,9,-5,4,9,6,-4,-8,-8,-10],[2,3,5,9,-7,1,-4,-6,7,5,-9,3],[8,10,10,8,-1,9,1,3,-8,1,-5,1],[7,7,8,9,-1,-1,2,-2,-2,-10,8,10],[6,-8,-8,-2,-8,3,6,2,-3,-8,-2,-10],[1,7,3,-5,-3,-9,-5,-8,-7,7,-2,-1],[-1,4,9,-10,-3,-10,-8,-5,-2,-2,5,-10],[-8,8,-7,9,-9,-1,-4,-1,-10,3,-9,-7],[-3,6,6,10,4,-7,8,6,8,8,-10,1],[1,8,-2,-1,-3,-3,-2,6,-3,-6,9,-8],[1,1,6,-1,-5,9,5,2,-6,8,8,-5],[-9,9,2,6,-5,5,8,2,-7,1,-8,10],[8,3,4,-4,-6,-2,2,2,-5,-3,-2,-8]],[[-6,1,-2,10,-10,3,-1,-8,1,7,-10,-5],[5,1,2,6,-6,2,7,7,2,-3,6,10],[-5,-3,6,-1,-5,-8,-2,3,-1,-6,-6,8],[-3,-1,-4,8,-9,-4,10,-8,8,2,-2,7],[-1,-4,8,-4,-2,-9,9,-6,8,-5,-5,-3],[-3,-4,1,10,8,10,-5,4,3,-4,1,-1],[9,-9,-3,9,9,-10,-7,-4,-2,1,-3,5],[-10,-8,-8,-2,-7,3,-5,-7,-8,-7,-7,1],[7,7,7,-6,2,10,3,6,4,1,2,2],[-4,6,-1,-1,7,8,1,-2,6,-10,3,8],[-7,-5,-8,10,7,3,1,6,-1,5,-8,2],[7,2,2,-7,2,10,2,-2,-6,-7,-7,8],[-9,10,7,1,6,6,-7,6,7,-9,-6,8],[-6,-10,9,-2,8,-6,-6,1,-4,9,-1,1]],[[1,-9,-1,-8,3,1,-7,-10,7,-1,7,-4],[-10,2,-7,3,1,4,8,-8,-1,3,-1,2],[1,8,5,8,-4,1,3,7,6,5,-3,-5],[1,-10,-10,-10,-6,-10,-10,-10,-1,4,-5,-8],[-2,6,-6,-8,10,-1,2,3,10,1,-4,-2],[2,-8,7,-1,-9,-4,10,3,-2,10,4,4],[-9,-3,3,-7,-3,5,1,1,-3,-4,-9,-2],[-1,-4,8,-8,2,1,9,2,4,-2,-3,4],[7,6,-3,6,-1,-9,-10,-7,10,-10,7,-1],[-1,-6,7,8,-6,-10,5,4,-8,-6,-2,3],[-2,-3,4,1,-6,-8,7,-6,2,-5,-4,4],[4,2,-6,9,5,8,5,-5,-8,-5,10,-1],[7,-1,5,-5,-7,6,-2,-1,7,8,-1,-5],[7,4,-1,-10,-1,1,6,4,5,-7,4,-7]],[[9,5,8,7,-9,-5,-5,9,7,1,-8,-9],[6,-1,5,-3,3,2,-7,-1,1,-9,10,-2],[9,-10,-8,-1,4,5,2,-4,6,-10,-7,3],[4,6,-9,-1,-2,5,-8,4,-2,1,-9,-1],[-1,9,-2,7,4,2,-2,10,-3,-3,5,5],[8,-1,3,1,-7,-3,5,-6,5,-10,4,10],[7,10,-1,-9,-3,6,-6,-9,9,1,3,-3],[-7,5,5,9,-9,5,-6,-10,7,-6,-5,4],[-8,-8,-4,9,-3,3,10,-1,-2,8,1,8],[4,-10,10,2,9,-3,10,4,-8,3,-10,-6],[1,2,-4,9,-6,-8,3,6,-2,6,-3,-7],[-9,9,-5,4,1,-5,8,-4,2,-1,-3,-10],[-8,-7,9,1,4,-9,-5,2,-9,-10,4,-1],[5,3,1,-1,10,-1,3,6,2,-6,-8,-4]],[[9,6,-7,10,-1,9,8,4,-1,-6,-6,2],[8,8,8,3,-5,1,-5,5,-3,9,-6,9],[7,2,8,3,1,9,5,-7,2,4,8,-5],[-4,4,7,-9,-9,-10,-4,2,-6,5,5,-2],[1,-6,5,-1,8,-1,9,3,-1,-4,6,2],[-8,-5,-2,-2,3,3,-1,-9,2,-8,-9,10],[4,9,-1,-3,-8,4,7,3,5,-10,-2,9],[-6,-6,8,9,1,3,8,1,-4,6,-10,-3],[-6,-3,-9,-4,-9,-2,-6,8,-8,9,7,-2],[6,4,10,3,8,8,-6,4,1,-2,-8,4],[1,4,3,9,-7,-7,10,-4,-4,6,3,5],[8,4,-8,-6,2,-7,5,6,10,-8,3,-7],[-4,-9,6,4,-3,-2,7,-2,-7,5,6,5],[-5,4,-6,-5,7,9,7,-9,-2,-3,-8,-7]],[[5,-8,-1,9,-5,4,-8,-2,-2,-8,4,3],[-8,-4,-3,-3,3,1,6,2,5,-5,-6,7],[7,8,3,-1,8,-1,-8,-1,-8,5,-4,-5],[4,9,-6,9,-2,-9,8,9,-5,1,5,-2],[-6,-6,7,-9,-1,2,-7,-3,8,7,1,-6],[-6,-10,10,-5,3,7,5,3,-4,-5,6,1],[1,-3,-4,1,-7,3,4,-2,-1,9,4,-4],[-6,1,-9,9,-8,4,-1,-2,-7,6,4,10],[-10,1,-2,-4,4,-2,8,4,-2,-8,3,-5],[-6,4,2,3,-5,-4,1,-5,3,-9,9,-7],[-2,-7,-6,7,-3,9,-7,5,-9,10,9,5],[5,5,7,-4,-6,4,-3,-3,2,-2,-6,-10],[10,-5,5,2,-5,-1,-6,1,-8,-7,4,7],[-2,2,8,3,1,-6,9,6,5,-6,6,5]],[[2,5,2,1,-3,-3,8,10,7,8,5,2],[3,1,5,3,9,-5,-2,-8,3,7,-1,-1],[-4,-4,2,9,4,-5,9,10,8,3,-4,-6],[-4,6,-3,-2,5,5,4,3,7,8,-7,-8],[-4,8,1,2,-10,-1,-7,-9,-10,10,-10,1],[2,-7,-10,8,5,-9,-2,4,-3,-5,9,-3],[-8,-3,7,-8,-5,-9,-10,-8,-5,-1,-10,-8],[-1,5,7,-9,2,-3,-9,-9,-8,9,7,10],[6,8,-8,1,1,9,4,3,3,-5,1,-7],[2,4,3,3,7,5,10,-7,2,1,6,-1],[1,1,10,8,4,-3,-8,-6,10,2,-9,-10],[-7,-8,4,1,-5,-5,10,9,7,-9,-10,10],[8,9,3,10,-10,-2,-8,-2,-7,10,-2,9],[2,-4,5,-4,8,-2,-5,-2,3,-1,-8,5]],[[-10,3,3,3,2,-10,3,-1,7,5,-10,-7],[8,-5,3,-2,-3,6,6,1,-9,6,5,7],[5,-4,-7,-7,10,-3,-9,5,1,10,-3,7],[2,-5,3,8,6,-2,-4,-9,-10,-7,-9,-5],[-4,-8,-5,-10,-10,-3,1,-10,5,7,2,4],[-8,3,3,-8,2,-7,-2,-2,-4,-7,8,9],[1,3,-5,5,7,-3,-5,-1,-6,2,5,-2],[8,-3,9,10,-1,-1,-1,10,-4,10,3,-6],[8,-8,-1,2,-2,-8,9,10,2,-6,10,10],[-6,-3,2,7,5,-4,8,8,1,10,3,-9],[1,-5,-1,5,5,-8,7,-8,-3,-1,-8,-2],[2,-10,9,-9,7,1,8,7,6,-2,-3,5],[3,-8,4,2,1,2,-3,2,4,-10,-1,-8],[4,-10,-8,-2,3,-4,1,5,-7,-2,8,2]],[[7,-4,1,-5,-10,2,10,-1,-6,-9,10,-9],[-1,-9,4,10,-5,2,-6,3,-2,8,-10,4],[-3,-5,7,9,-4,6,2,-9,-10,-5,8,6],[2,1,-10,-10,-9,5,-8,5,-3,-1,-9,-1],[1,-9,3,-8,-7,9,-5,-10,5,-2,10,-6],[-10,-7,7,-10,-4,-7,4,4,-6,9,-3,6],[6,2,5,10,-6,6,5,-4,-7,-3,-8,-10],[-9,4,8,9,-7,-2,8,-10,9,10,4,-2],[-4,-9,4,-7,-8,7,2,-2,9,-1,-7,3],[-9,-1,-4,-3,10,3,1,8,-2,9,-5,2],[6,10,4,-3,-4,-5,9,-9,2,-4,-1,-4],[9,6,4,-7,1,6,-1,-10,3,-5,5,-1],[5,10,10,-10,7,5,4,-2,9,10,-8,5],[8,-4,-2,-8,2,3,-1,-3,9,-10,9,-7]],[[3,-8,-8,2,1,-8,3,-1,5,-9,9,7],[-1,10,-2,-8,-4,3,7,7,1,2,1,-9],[7,5,9,3,-8,9,10,4,-2,-6,-2,9],[-8,9,6,8,-5,9,-4,5,-7,-1,-4,1],[-3,6,-1,1,8,1,-10,-7,-1,-1,1,8],[-4,7,5,3,4,-5,4,4,-8,6,-5,2],[-1,2,3,-2,-10,-3,6,3,3,6,-4,1],[-7,-9,-2,-2,-6,-5,-6,-3,7,-1,10,-4],[2,2,2,7,2,4,6,5,2,-10,10,-5],[7,-9,-10,2,4,-7,9,6,1,-3,7,9],[-1,-8,-10,7,10,6,10,-1,2,-1,-1,2],[6,-9,5,-4,8,-7,-8,-8,10,-6,4,5],[7,-8,-2,2,-8,-2,-10,-1,-10,-7,-3,-5],[-10,3,2,1,3,-8,10,2,-1,-10,3,-9]]], dtype = "uint64")#candidate|5664|(10, 14, 12)|const|uint64
var_5665 = relay.var("var_5665", dtype = "uint64", shape = (10, 14, 12))#candidate|5665|(10, 14, 12)|var|uint64
bop_5666 = relay.greater(const_5664.astype('bool'), relay.reshape(var_5665.astype('bool'), relay.shape_of(const_5664))) # shape=(10, 14, 12)
var_5670 = relay.var("var_5670", dtype = "uint64", shape = (10, 14, 12))#candidate|5670|(10, 14, 12)|var|uint64
bop_5671 = relay.floor_mod(var_5665.astype('float32'), relay.reshape(var_5670.astype('float32'), relay.shape_of(var_5665))) # shape=(10, 14, 12)
uop_5679 = relay.sinh(const_5664.astype('float64')) # shape=(10, 14, 12)
uop_5682 = relay.asinh(bop_5671.astype('float64')) # shape=(10, 14, 12)
output = relay.Tuple([bop_5666,uop_5679,uop_5682,])
output2 = relay.Tuple([bop_5666,uop_5679,uop_5682,])
func_5710 = relay.Function([var_5665,var_5670,], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mutated_mod.get_global_var('func_5710')
var_5712 = relay.var("var_5712", dtype = "uint64", shape = (10, 14, 12))#candidate|5712|(10, 14, 12)|var|uint64
var_5713 = relay.var("var_5713", dtype = "uint64", shape = (10, 14, 12))#candidate|5713|(10, 14, 12)|var|uint64
call_5711 = func_5710_call(var_5712,var_5713,)
output = call_5711
func_5714 = relay.Function([var_5712,var_5713,], output)
mutated_mod['func_5714'] = func_5714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2847_call = mod.get_global_var('func_2847')
func_2849_call = mutated_mod.get_global_var('func_2849')
call_5723 = relay.TupleGetItem(func_2847_call(), 0)
call_5724 = relay.TupleGetItem(func_2849_call(), 0)
func_5084_call = mod.get_global_var('func_5084')
func_5086_call = mutated_mod.get_global_var('func_5086')
call_5731 = relay.TupleGetItem(func_5084_call(), 3)
call_5732 = relay.TupleGetItem(func_5086_call(), 3)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_5740 = func_3347_call()
call_5741 = func_3347_call()
uop_5757 = relay.rsqrt(call_5731.astype('float32')) # shape=(6, 15, 6)
uop_5759 = relay.rsqrt(call_5732.astype('float32')) # shape=(6, 15, 6)
output = relay.Tuple([call_5723,call_5740,uop_5757,])
output2 = relay.Tuple([call_5724,call_5741,uop_5759,])
func_5769 = relay.Function([], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5769_call = mutated_mod.get_global_var('func_5769')
call_5770 = func_5769_call()
output = call_5770
func_5771 = relay.Function([], output)
mutated_mod['func_5771'] = func_5771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5856 = relay.var("var_5856", dtype = "uint16", shape = ())#candidate|5856|()|var|uint16
var_5857 = relay.var("var_5857", dtype = "uint16", shape = (4, 1, 5))#candidate|5857|(4, 1, 5)|var|uint16
bop_5858 = relay.logical_xor(var_5856.astype('uint16'), var_5857.astype('uint16')) # shape=(4, 1, 5)
output = bop_5858
output2 = bop_5858
func_5879 = relay.Function([var_5856,var_5857,], output)
mod['func_5879'] = func_5879
mod = relay.transform.InferType()(mod)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5879_call = mutated_mod.get_global_var('func_5879')
var_5881 = relay.var("var_5881", dtype = "uint16", shape = ())#candidate|5881|()|var|uint16
var_5882 = relay.var("var_5882", dtype = "uint16", shape = (4, 1, 5))#candidate|5882|(4, 1, 5)|var|uint16
call_5880 = func_5879_call(var_5881,var_5882,)
output = call_5880
func_5883 = relay.Function([var_5881,var_5882,], output)
mutated_mod['func_5883'] = func_5883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_5885 = func_4051_call()
call_5886 = func_4051_call()
output = call_5885
output2 = call_5886
func_5929 = relay.Function([], output)
mod['func_5929'] = func_5929
mod = relay.transform.InferType()(mod)
mutated_mod['func_5929'] = func_5929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mutated_mod.get_global_var('func_5929')
call_5930 = func_5929_call()
output = call_5930
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5985 = relay.var("var_5985", dtype = "float64", shape = (2, 5, 8))#candidate|5985|(2, 5, 8)|var|float64
var_5986 = relay.var("var_5986", dtype = "float64", shape = (2, 5, 8))#candidate|5986|(2, 5, 8)|var|float64
bop_5987 = relay.power(var_5985.astype('float64'), relay.reshape(var_5986.astype('float64'), relay.shape_of(var_5985))) # shape=(2, 5, 8)
output = bop_5987
output2 = bop_5987
func_5993 = relay.Function([var_5985,var_5986,], output)
mod['func_5993'] = func_5993
mod = relay.transform.InferType()(mod)
var_5994 = relay.var("var_5994", dtype = "float64", shape = (2, 5, 8))#candidate|5994|(2, 5, 8)|var|float64
var_5995 = relay.var("var_5995", dtype = "float64", shape = (2, 5, 8))#candidate|5995|(2, 5, 8)|var|float64
output = func_5993(var_5994,var_5995,)
func_5996 = relay.Function([var_5994,var_5995,], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2613_call = mod.get_global_var('func_2613')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_6037 = relay.TupleGetItem(func_2613_call(), 4)
call_6038 = relay.TupleGetItem(func_2614_call(), 4)
output = call_6037
output2 = call_6038
func_6039 = relay.Function([], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6039_call = mutated_mod.get_global_var('func_6039')
call_6040 = func_6039_call()
output = call_6040
func_6041 = relay.Function([], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6070 = relay.var("var_6070", dtype = "int32", shape = ())#candidate|6070|()|var|int32
var_6071 = relay.var("var_6071", dtype = "int32", shape = (7, 1))#candidate|6071|(7, 1)|var|int32
bop_6072 = relay.bitwise_xor(var_6070.astype('int32'), var_6071.astype('int32')) # shape=(7, 1)
func_4422_call = mod.get_global_var('func_4422')
func_4428_call = mutated_mod.get_global_var('func_4428')
var_6081 = relay.var("var_6081", dtype = "int64", shape = (360,))#candidate|6081|(360,)|var|int64
var_6082 = relay.var("var_6082", dtype = "float32", shape = (1008,))#candidate|6082|(1008,)|var|float32
const_6083 = relay.const([[-3,-7,3,7,10,-9,7,-2,9,-9,10,10,10,-8,2,-8,-3,3,-10,-7,10,-5,-2,-2,-6,-9,-10,6,-9,-4,6,-7],[-6,-5,3,-1,10,7,-5,-2,8,9,2,-10,8,1,-4,5,1,10,-9,-4,-7,10,-10,2,4,7,-7,-7,9,-10,-8,-6],[-2,2,7,2,-9,-5,7,-6,-1,6,-10,-4,3,-5,-9,-2,7,-4,-2,-8,1,9,-3,8,1,-1,-9,1,6,-4,7,6],[10,8,-8,-4,-8,-6,1,4,-10,-3,7,-10,10,-10,10,10,-7,3,-3,-4,-3,3,-6,3,1,4,10,2,10,8,7,-1],[6,-8,2,-3,4,-6,-2,-8,-7,-2,-8,8,4,7,3,6,1,-8,7,7,-7,4,4,-6,-4,-9,-3,-10,10,-8,5,-2],[-7,-1,-4,-8,3,-4,-3,7,9,8,10,8,-7,-5,-2,1,7,-6,10,4,5,10,6,-5,-3,6,-3,7,3,-2,-9,4],[5,-9,-3,8,-10,-8,-8,-3,6,-8,6,-8,-7,3,3,4,-7,-3,-7,-2,1,-3,-5,-2,8,1,-5,-2,-9,-10,2,10],[-8,-2,6,-2,-4,-8,5,-1,1,-6,10,1,-5,-4,7,-6,9,-2,2,5,-10,6,-4,8,-8,2,-4,-9,-5,6,7,9],[-2,2,-4,1,-10,1,5,-9,-6,2,7,-3,-2,-4,-2,6,5,-7,3,-7,4,-6,9,-1,8,9,5,-8,10,8,9,4],[-2,-5,9,-9,-7,-4,-2,-3,8,-6,1,-2,9,3,-3,-10,-7,9,4,-1,-1,-1,-9,5,-6,2,6,10,-3,-1,-9,-9],[-7,-4,-4,-6,-1,-10,-9,10,6,5,-8,-7,-8,-5,-1,-7,3,-9,-8,4,2,-10,10,8,-3,-8,-8,10,-5,-4,1,5],[3,-5,-9,-10,4,1,9,-10,4,3,-4,7,10,-6,-3,7,4,-8,-10,5,-8,9,-8,2,-8,-4,-8,4,4,-8,-2,2],[-6,1,1,-1,-4,8,9,4,7,-4,8,-2,9,-9,5,-8,-4,-7,7,-3,10,3,-5,9,-4,6,2,-6,6,-3,-7,-1],[2,-5,8,9,3,-7,2,10,-10,10,4,2,-1,2,6,8,-3,-8,-5,9,1,-6,-4,9,-5,-6,4,1,-5,-3,4,10],[8,-8,-4,-1,-3,-8,-7,2,7,-1,6,-6,2,-3,-3,-6,10,2,-1,9,-3,-4,5,2,-2,2,-4,-10,-8,-5,-5,-9],[-6,-8,-7,-4,3,1,-2,9,6,5,-10,8,-7,8,-5,4,10,-10,-9,7,2,2,-1,-9,2,6,-8,-9,-9,-4,6,8]], dtype = "uint8")#candidate|6083|(16, 32)|const|uint8
call_6080 = relay.TupleGetItem(func_4422_call(relay.reshape(var_6081.astype('int64'), [5, 6, 12]), relay.reshape(var_6081.astype('bool'), [5, 6, 12]), relay.reshape(var_6082.astype('float32'), [1008,]), relay.reshape(const_6083.astype('uint8'), [512,]), ), 6)
call_6084 = relay.TupleGetItem(func_4428_call(relay.reshape(var_6081.astype('int64'), [5, 6, 12]), relay.reshape(var_6081.astype('bool'), [5, 6, 12]), relay.reshape(var_6082.astype('float32'), [1008,]), relay.reshape(const_6083.astype('uint8'), [512,]), ), 6)
var_6085 = relay.var("var_6085", dtype = "int16", shape = (208,))#candidate|6085|(208,)|var|int16
bop_6086 = relay.divide(call_6080.astype('float64'), relay.reshape(var_6085.astype('float64'), relay.shape_of(call_6080))) # shape=(208,)
bop_6089 = relay.divide(call_6084.astype('float64'), relay.reshape(var_6085.astype('float64'), relay.shape_of(call_6084))) # shape=(208,)
bop_6100 = relay.greater(bop_6086.astype('bool'), var_6070.astype('bool')) # shape=(208,)
bop_6103 = relay.greater(bop_6089.astype('bool'), var_6070.astype('bool')) # shape=(208,)
var_6110 = relay.var("var_6110", dtype = "uint8", shape = (16, 32))#candidate|6110|(16, 32)|var|uint8
bop_6111 = relay.less_equal(const_6083.astype('bool'), relay.reshape(var_6110.astype('bool'), relay.shape_of(const_6083))) # shape=(16, 32)
output = relay.Tuple([bop_6072,var_6081,var_6082,bop_6100,bop_6111,])
output2 = relay.Tuple([bop_6072,var_6081,var_6082,bop_6103,bop_6111,])
func_6120 = relay.Function([var_6070,var_6071,var_6081,var_6082,var_6085,var_6110,], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
var_6121 = relay.var("var_6121", dtype = "int32", shape = ())#candidate|6121|()|var|int32
var_6122 = relay.var("var_6122", dtype = "int32", shape = (7, 1))#candidate|6122|(7, 1)|var|int32
var_6123 = relay.var("var_6123", dtype = "int64", shape = (360,))#candidate|6123|(360,)|var|int64
var_6124 = relay.var("var_6124", dtype = "float32", shape = (1008,))#candidate|6124|(1008,)|var|float32
var_6125 = relay.var("var_6125", dtype = "int16", shape = (208,))#candidate|6125|(208,)|var|int16
var_6126 = relay.var("var_6126", dtype = "uint8", shape = (16, 32))#candidate|6126|(16, 32)|var|uint8
output = func_6120(var_6121,var_6122,var_6123,var_6124,var_6125,var_6126,)
func_6127 = relay.Function([var_6121,var_6122,var_6123,var_6124,var_6125,var_6126,], output)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_6156 = func_3347_call()
call_6157 = func_3347_call()
func_5993_call = mod.get_global_var('func_5993')
func_5996_call = mutated_mod.get_global_var('func_5996')
var_6188 = relay.var("var_6188", dtype = "float64", shape = (80,))#candidate|6188|(80,)|var|float64
call_6187 = func_5993_call(relay.reshape(var_6188.astype('float64'), [2, 5, 8]), relay.reshape(var_6188.astype('float64'), [2, 5, 8]), )
call_6189 = func_5993_call(relay.reshape(var_6188.astype('float64'), [2, 5, 8]), relay.reshape(var_6188.astype('float64'), [2, 5, 8]), )
func_4859_call = mod.get_global_var('func_4859')
func_4862_call = mutated_mod.get_global_var('func_4862')
const_6213 = relay.const([7,10,7,5,5,7,-3,-5,7,-2,3,-4,4,-10,-10,-7,-7,2,-10,-1,5,2,10,-6,7,-9,8,3,3,-8,-8,-9,-3,-8,8,-9,9,2,9,8,6,8,1,7,5,-8,-10,8,7,-8,7,-9,-7,6,9,-1,1,10,-1,9,-2,-8,3,-6,4,-7,-1,7,-7,3,-9,4,4,-6,-1,-10,2,-3,-6,7,-5,10,1,4,-4,-8,1,-5,-6,-1,-5,-7,-1,-2,-1,8,5,2,9,8,2,6,-5,-10,1,-7,-6,-3,-5,5,-6,-4,3,9,-3,-3,2,-8,-10,8,-4,10,-9,7,8,2,7,6,-3,9,-1,-10,-2,10,1,-3,-4,4,-6,9,-5,9,-8,-1,2,-8,-2,6,1,6,-5,-8,4,6,5,3,8,-3,8,9,5,5,-10,-1,-8,-4,6,3,3,9,5,-1,5,-9,-9,-5,10,2,-10,10,10,10,-5,7,2,-10,-7,10,-7,8,-9,-2,2,8,5,-7,-3,10,-2,8,2,-3,-10,-4,3,-3,-3,-3,7,5,1,-8,1,-4,6,6,-1,8,1,-6,-3,9,4,-1,5,-6,9,3,-3,-4,-9,8,9,-9,9,7,6,8,-1,-4,6,-3,5,7,-2,-10,1,-1,7,3,9,8,9,9,6,4,-5,-6,-4,-2,-4,-9,2,7,2,-5,-3,8,10,10,3,7,5,-10,-6,9,-7,-7,8,10,6,-5,-10,-1,-10,-8,8,-1,-9,-4,-7,7,1,5,-9,-3,10,-4,-1,-5,-7,-6,-10,-8,1,-8,-4,10,-8,-7,10,2,8,-4,-10,-1,-4,1,-5,-7,-2,-3,-9,-4,-10,5,-10,1,4,6,6,2,4,6,-2,-6,-7,1,-3,-2,-5,-6,6,5,-5,-4,10,-1,-9,4,9,8,-10,-9,-5,10,1,-6,-3,5,-4,7,4,8,2,-5,-3,-6,-1,8,7,5,-3,-5,4,2,-8,1,6,5,1,-10,2,-9,-10,-8,-4,7,6,4,1,-7,5,-2,7,-1,-7,3,5,-4,-1,-4,-7,-4,2,-4,-4,-3,-9,1,10,4,-3,9,-1,4,5,-6,-10,7,8,4,-2,-2,10,9,-5,1,2,-7,3,6,9,2,4,-1,1,-6,-2,6,-2,-4,-7,-5,5,5,-3,-9,5,-4,-1,3,10,-4,10,4,4,10,-5,2,9,1,10,-6,1,6,-3,-3,8,5,7,1,9,3,-6,-7,4,-7,-6,-1,-1,9,6,6,1,-4,-3,8,-4,-8,-7,5,3,-8,-3,7,6,7,-10,-5,-8,-9,-4,3,-9,-10,5,8,5,6,4,3,1,-1,-7,-2,-5,-4,-8,-9,-9,3,-2,2,8,-7,-3,-4,2,-5,-2,-2,6,8,-6,-2,3,8,8,-5,10,-3,-6,-7,-2,7,-9,-5,-8,10,-9,6,-8,9,6,4,-8,1,4,2,2,4,-8,-6,-9,10,-9,-9,-1,-2,-2,5,5,-4,5,7,-3,9,-7,2,1,5,8,-6,-4,-8,-7,8,8,-3,8,-8,-10,-6,2,-6,-8,3,-6,-5,-7,9,-5,-6,-9,-5,10,7,2,8,1,-7,6,5,6,2,-4,-7,-8,-1,5,-5,9,4,7,-5,7,-5,1,5,-1,-3,10,1,5,6,-10,-5,-2,10,3,8,-7,-5,3,8,-8,9,10,-7,-4,5,5,2,-8,-7,-8,-3,7,5,-9,-6,-3,7,6,8,-7,3,2,-1,10,1,2,4,3,3,-4,1,3,1,-1,9,-2,2,-8,2,1,-7,-9,-4,2,-6,-6,6,-2,7,5,-1,-10,9,-4,-7,6,7,5,-8,9,-7,-1,-4,-1,-6,9,-3,10,7,5,-10,8,-6,1,1,-8,-6,-3,-1,3,1,5,-3,6,-1,-3,-1,8,-5,-3,-8,-7,9,-5,4,-10,-2,-9,-9,4,-7,1,-10,-7,-6,3,1,-8,-10,3,-3,-9,7,7,-6,-8,-9,-10,5,-4,-6,-7,-9,-7,10,-2,-2,-7,2,7,-6,-10,-3,6,8,9,8,-2,2,5,1,6,-2,-4,-8,2,-7,1,-1,-8,-8,6,4,3,7,-10,7,4,9,-2,1,1,4,-8,8,7,-2,3,1,3,-4,-6,9,8,10,-4,-6,10,8,9,3,-3,-9,2,2,5,2,-7,-3,-10,-7,-3,1,2,-1,-7,-7,1,9,-3,1,-7,3,-4,8,-9,-10,7,6,-3,2,-1,-4,-4,-8,-4,-9,3,-2,6,3,-7,8,6,-5,2,1,-6,-10,8,9,6,-10,10,8,-3,3,-3,6,-8,-8,-8,-6,4,7,3,-1,-8,9,-4,-3,-7,-9,-9,2,5,8,9,-2,-9,4,-8,2,-5,-1,-8,-7,3,7,-4,1,-9,5,-4,-10,7,-6,8,-9,7,-5,8,-9,-10,5,5,5,5,-1,-6,-2,6,8,-6,-8,-8,-9,7,-7,6,2,8,-3,-5,3,-7,6,3,-7,8,-1,8,-1,9,1,10,5,9,4,-4,9,2,-5,7,3,7,4,-5,2,4,7,7,3,-2,3,-2,7,6,-8,-4,-10,6,-8,-8,-6,4,-6,5,-10,-8,5,5,-5,-6,6,5,-2,-10,3,1,-10,-3,7,-8,7,9,-8,-5,-7,-6,-10,-9,-4,-3,4,-8,-10,-3,-1,3,6,9,8,7,-5,-6,-3,-7,3,6,5,-4,-7,1,5,-5,8,7,7,1,4,-9,2,6,8,-3,-7,10,-1,1,7,-10,-9,-2,8,10,-3,-1,-5,-10,-10,-9,-1,1,2,-1,6,-5,-6,-5,10,-8,-6,-10,5,-5,-5,2,-3,-10,-2,3,2,-7,7,-5,-9,2,10,-6,1,2,8,-4,4,8,-4,-8,-3,7,8,6,4,3,-9,-1,-2,6,4,5,-3,7,-5,4,-1,5,4,5,1,-2,-6,-1,-7,-10,-5,2,-7,-5,-4,-10,3,-4,-1,3,-6,-2,-1,5,-10,-8,2,-4,8,3,10,9,-1,8,-2,3,9,4,-8,7,-4,2,-6,-6,6,8,-3,9,10,7,10,1,5,1,-4,1,7,5,10,10,1,1,-7,-9,8,10,-5,-9,-6,-6,-1,10,2,1,-7,5,-3,1,7,-8,5,2,10,-2,2,-9,-7,-8,4,-9,2,-8,-2,-6,6,-3,1,1,-7,-8,-3,1,-5,8,-10,-10,-3,-7,7,8,-7,-6,-8,-10,2,-3,6,-4,5,-10,-1,5,-1,2,6,-3,9,-3,-6,2,-2,2,1,1,-10,-10,5,6,10,4,-6,-10,6,-1,-6,-2,-2,-8,-2,10,2,-2,5,-3,-4,2,-5,6,-4,6,2,10,-10,-10,9,-4,-9,-8,-6,9,7,1,-4,5,-4,9,7,-1,-10,-1,10,-8,4,3,-6,-2,-6,6,10,7,10,-9,5,-4,-10,4,2,8,9,-8,6,7,-2,1,4,-3,3,-1,-3,-5,-2,4,-10,-10,6,3,7,-5,5,-1,3,3,-8,-4,1,-6,8,-5,-4,9,-4,-3,2,-1,3,6,-8,10,3,-8,5,5,4,6,-8,10,-5,2,1,6,5,-8,9,8,-5,-6,10,8,5,2,6,5,4,-3,-1,9,-9,9,-8,-1,1,3,-3,5,-4,-9,-10,-6,-2,-1,5,8,-6,3,-4,-7,4,-8,3,-2,2,-9,-8,9,1,-4,8,10,1,-10,-8,1,8,-8,3,-10,-5,-7,4,-4,6,1,2,-1,-7,-7,9,10,5,10,9,-3,9,-7,10,7,-1,-1,4,-5,5], dtype = "int8")#candidate|6213|(1452,)|const|int8
call_6212 = relay.TupleGetItem(func_4859_call(relay.reshape(const_6213.astype('int8'), [242, 6])), 1)
call_6214 = relay.TupleGetItem(func_4862_call(relay.reshape(const_6213.astype('int8'), [242, 6])), 1)
var_6224 = relay.var("var_6224", dtype = "int8", shape = (1452,))#candidate|6224|(1452,)|var|int8
bop_6225 = relay.bitwise_and(const_6213.astype('int8'), relay.reshape(var_6224.astype('int8'), relay.shape_of(const_6213))) # shape=(1452,)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_6230 = relay.TupleGetItem(func_3977_call(), 1)
call_6231 = relay.TupleGetItem(func_3978_call(), 1)
output = relay.Tuple([call_6156,call_6187,var_6188,call_6212,bop_6225,call_6230,])
output2 = relay.Tuple([call_6157,call_6189,var_6188,call_6214,bop_6225,call_6231,])
func_6236 = relay.Function([var_6188,var_6224,], output)
mod['func_6236'] = func_6236
mod = relay.transform.InferType()(mod)
var_6237 = relay.var("var_6237", dtype = "float64", shape = (80,))#candidate|6237|(80,)|var|float64
var_6238 = relay.var("var_6238", dtype = "int8", shape = (1452,))#candidate|6238|(1452,)|var|int8
output = func_6236(var_6237,var_6238,)
func_6239 = relay.Function([var_6237,var_6238,], output)
mutated_mod['func_6239'] = func_6239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6275 = func_5929_call()
call_6276 = func_5929_call()
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6291 = func_5929_call()
call_6292 = func_5929_call()
output = relay.Tuple([call_6275,call_6291,])
output2 = relay.Tuple([call_6276,call_6292,])
func_6293 = relay.Function([], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
output = func_6293()
func_6294 = relay.Function([], output)
mutated_mod['func_6294'] = func_6294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_6309 = func_4051_call()
call_6310 = func_4051_call()
output = call_6309
output2 = call_6310
func_6311 = relay.Function([], output)
mod['func_6311'] = func_6311
mod = relay.transform.InferType()(mod)
mutated_mod['func_6311'] = func_6311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6311_call = mutated_mod.get_global_var('func_6311')
call_6312 = func_6311_call()
output = call_6312
func_6313 = relay.Function([], output)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_6314 = relay.TupleGetItem(func_3481_call(), 0)
call_6315 = relay.TupleGetItem(func_3483_call(), 0)
output = relay.Tuple([call_6314,])
output2 = relay.Tuple([call_6315,])
func_6319 = relay.Function([], output)
mod['func_6319'] = func_6319
mod = relay.transform.InferType()(mod)
output = func_6319()
func_6320 = relay.Function([], output)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6393 = relay.TupleGetItem(func_4112_call(), 0)
call_6394 = relay.TupleGetItem(func_4113_call(), 0)
output = relay.Tuple([call_6393,])
output2 = relay.Tuple([call_6394,])
func_6397 = relay.Function([], output)
mod['func_6397'] = func_6397
mod = relay.transform.InferType()(mod)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6397_call = mutated_mod.get_global_var('func_6397')
call_6398 = func_6397_call()
output = call_6398
func_6399 = relay.Function([], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_6411 = func_3347_call()
call_6412 = func_3347_call()
output = relay.Tuple([call_6411,])
output2 = relay.Tuple([call_6412,])
func_6418 = relay.Function([], output)
mod['func_6418'] = func_6418
mod = relay.transform.InferType()(mod)
mutated_mod['func_6418'] = func_6418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6418_call = mutated_mod.get_global_var('func_6418')
call_6419 = func_6418_call()
output = call_6419
func_6420 = relay.Function([], output)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_6444 = func_2337_call()
call_6445 = func_2337_call()
output = relay.Tuple([call_6444,])
output2 = relay.Tuple([call_6445,])
func_6453 = relay.Function([], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
output = func_6453()
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4481_call = mod.get_global_var('func_4481')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_6662 = relay.TupleGetItem(func_4481_call(), 1)
call_6663 = relay.TupleGetItem(func_4482_call(), 1)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_6665 = func_2685_call()
call_6666 = func_2685_call()
func_4859_call = mod.get_global_var('func_4859')
func_4862_call = mutated_mod.get_global_var('func_4862')
var_6679 = relay.var("var_6679", dtype = "int8", shape = (1452,))#candidate|6679|(1452,)|var|int8
call_6678 = relay.TupleGetItem(func_4859_call(relay.reshape(var_6679.astype('int8'), [242, 6])), 7)
call_6680 = relay.TupleGetItem(func_4862_call(relay.reshape(var_6679.astype('int8'), [242, 6])), 7)
var_6685 = relay.var("var_6685", dtype = "float32", shape = (14, 7, 16))#candidate|6685|(14, 7, 16)|var|float32
bop_6686 = relay.floor_divide(call_6678.astype('float64'), var_6685.astype('float64')) # shape=(14, 7, 16)
bop_6689 = relay.floor_divide(call_6680.astype('float64'), var_6685.astype('float64')) # shape=(14, 7, 16)
output = relay.Tuple([call_6662,call_6665,var_6679,bop_6686,])
output2 = relay.Tuple([call_6663,call_6666,var_6679,bop_6689,])
func_6697 = relay.Function([var_6679,var_6685,], output)
mod['func_6697'] = func_6697
mod = relay.transform.InferType()(mod)
var_6698 = relay.var("var_6698", dtype = "int8", shape = (1452,))#candidate|6698|(1452,)|var|int8
var_6699 = relay.var("var_6699", dtype = "float32", shape = (14, 7, 16))#candidate|6699|(14, 7, 16)|var|float32
output = func_6697(var_6698,var_6699,)
func_6700 = relay.Function([var_6698,var_6699,], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_6745 = relay.TupleGetItem(func_3481_call(), 0)
call_6746 = relay.TupleGetItem(func_3483_call(), 0)
output = call_6745
output2 = call_6746
func_6750 = relay.Function([], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6750_call = mutated_mod.get_global_var('func_6750')
call_6751 = func_6750_call()
output = call_6751
func_6752 = relay.Function([], output)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_6775 = relay.TupleGetItem(func_6453_call(), 0)
call_6776 = relay.TupleGetItem(func_6454_call(), 0)
output = relay.Tuple([call_6775,])
output2 = relay.Tuple([call_6776,])
func_6793 = relay.Function([], output)
mod['func_6793'] = func_6793
mod = relay.transform.InferType()(mod)
output = func_6793()
func_6794 = relay.Function([], output)
mutated_mod['func_6794'] = func_6794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_6819 = relay.TupleGetItem(func_2878_call(), 2)
call_6820 = relay.TupleGetItem(func_2879_call(), 2)
output = call_6819
output2 = call_6820
func_6821 = relay.Function([], output)
mod['func_6821'] = func_6821
mod = relay.transform.InferType()(mod)
mutated_mod['func_6821'] = func_6821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6821_call = mutated_mod.get_global_var('func_6821')
call_6822 = func_6821_call()
output = call_6822
func_6823 = relay.Function([], output)
mutated_mod['func_6823'] = func_6823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6311_call = mod.get_global_var('func_6311')
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6827 = func_6311_call()
call_6828 = func_6311_call()
output = relay.Tuple([call_6827,])
output2 = relay.Tuple([call_6828,])
func_6829 = relay.Function([], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
mutated_mod['func_6829'] = func_6829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mutated_mod.get_global_var('func_6829')
call_6830 = func_6829_call()
output = call_6830
func_6831 = relay.Function([], output)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_6840 = relay.TupleGetItem(func_2878_call(), 0)
call_6841 = relay.TupleGetItem(func_2879_call(), 0)
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_6847 = relay.var("var_6847", dtype = "int8", shape = (1452,))#candidate|6847|(1452,)|var|int8
call_6846 = func_2902_call(relay.reshape(var_6847.astype('int8'), [12, 11, 11]), relay.reshape(var_6847.astype('int8'), [12, 11, 11]), )
call_6848 = func_2902_call(relay.reshape(var_6847.astype('int8'), [12, 11, 11]), relay.reshape(var_6847.astype('int8'), [12, 11, 11]), )
func_2337_call = mod.get_global_var('func_2337')
func_2338_call = mutated_mod.get_global_var('func_2338')
call_6849 = func_2337_call()
call_6850 = func_2337_call()
func_4481_call = mod.get_global_var('func_4481')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_6855 = relay.TupleGetItem(func_4481_call(), 0)
call_6856 = relay.TupleGetItem(func_4482_call(), 0)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_6859 = relay.TupleGetItem(func_3977_call(), 0)
call_6860 = relay.TupleGetItem(func_3978_call(), 0)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_6861 = relay.TupleGetItem(func_6829_call(), 0)
call_6862 = relay.TupleGetItem(func_6831_call(), 0)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6880 = relay.TupleGetItem(func_4112_call(), 0)
call_6881 = relay.TupleGetItem(func_4113_call(), 0)
output = relay.Tuple([call_6840,call_6846,var_6847,call_6849,call_6855,call_6859,call_6861,call_6880,])
output2 = relay.Tuple([call_6841,call_6848,var_6847,call_6850,call_6856,call_6860,call_6862,call_6881,])
func_6887 = relay.Function([var_6847,], output)
mod['func_6887'] = func_6887
mod = relay.transform.InferType()(mod)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6888 = relay.var("var_6888", dtype = "int8", shape = (1452,))#candidate|6888|(1452,)|var|int8
func_6887_call = mutated_mod.get_global_var('func_6887')
call_6889 = func_6887_call(var_6888)
output = call_6889
func_6890 = relay.Function([var_6888], output)
mutated_mod['func_6890'] = func_6890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6293_call = mod.get_global_var('func_6293')
func_6294_call = mutated_mod.get_global_var('func_6294')
call_6983 = relay.TupleGetItem(func_6293_call(), 1)
call_6984 = relay.TupleGetItem(func_6294_call(), 1)
output = call_6983
output2 = call_6984
func_7015 = relay.Function([], output)
mod['func_7015'] = func_7015
mod = relay.transform.InferType()(mod)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7015_call = mutated_mod.get_global_var('func_7015')
call_7016 = func_7015_call()
output = call_7016
func_7017 = relay.Function([], output)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mod.get_global_var('func_5519')
func_5521_call = mutated_mod.get_global_var('func_5521')
call_7073 = relay.TupleGetItem(func_5519_call(), 0)
call_7074 = relay.TupleGetItem(func_5521_call(), 0)
func_5152_call = mod.get_global_var('func_5152')
func_5154_call = mutated_mod.get_global_var('func_5154')
var_7087 = relay.var("var_7087", dtype = "float32", shape = (352,))#candidate|7087|(352,)|var|float32
call_7086 = relay.TupleGetItem(func_5152_call(relay.reshape(var_7087.astype('float32'), [8, 4, 11])), 0)
call_7088 = relay.TupleGetItem(func_5154_call(relay.reshape(var_7087.astype('float32'), [8, 4, 11])), 0)
output = relay.Tuple([call_7073,call_7086,var_7087,])
output2 = relay.Tuple([call_7074,call_7088,var_7087,])
func_7091 = relay.Function([var_7087,], output)
mod['func_7091'] = func_7091
mod = relay.transform.InferType()(mod)
var_7092 = relay.var("var_7092", dtype = "float32", shape = (352,))#candidate|7092|(352,)|var|float32
output = func_7091(var_7092)
func_7093 = relay.Function([var_7092], output)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_7099 = relay.TupleGetItem(func_4112_call(), 0)
call_7100 = relay.TupleGetItem(func_4113_call(), 0)
func_5879_call = mod.get_global_var('func_5879')
func_5883_call = mutated_mod.get_global_var('func_5883')
const_7103 = relay.const(9, dtype = "uint16")#candidate|7103|()|const|uint16
var_7104 = relay.var("var_7104", dtype = "uint16", shape = (10, 2))#candidate|7104|(10, 2)|var|uint16
call_7102 = func_5879_call(relay.reshape(const_7103.astype('uint16'), []), relay.reshape(var_7104.astype('uint16'), [4, 1, 5]), )
call_7105 = func_5879_call(relay.reshape(const_7103.astype('uint16'), []), relay.reshape(var_7104.astype('uint16'), [4, 1, 5]), )
uop_7115 = relay.cosh(call_7102.astype('float32')) # shape=(4, 1, 5)
uop_7117 = relay.cosh(call_7105.astype('float32')) # shape=(4, 1, 5)
bop_7140 = relay.power(uop_7115.astype('float64'), const_7103.astype('float64')) # shape=(4, 1, 5)
bop_7143 = relay.power(uop_7117.astype('float64'), const_7103.astype('float64')) # shape=(4, 1, 5)
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7147 = func_7015_call()
call_7148 = func_7015_call()
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
call_7160 = func_3347_call()
call_7161 = func_3347_call()
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_7167 = func_4096_call()
call_7168 = func_4096_call()
output = relay.Tuple([call_7099,var_7104,bop_7140,call_7147,call_7160,call_7167,])
output2 = relay.Tuple([call_7100,var_7104,bop_7143,call_7148,call_7161,call_7168,])
func_7169 = relay.Function([var_7104,], output)
mod['func_7169'] = func_7169
mod = relay.transform.InferType()(mod)
mutated_mod['func_7169'] = func_7169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7170 = relay.var("var_7170", dtype = "uint16", shape = (10, 2))#candidate|7170|(10, 2)|var|uint16
func_7169_call = mutated_mod.get_global_var('func_7169')
call_7171 = func_7169_call(var_7170)
output = call_7171
func_7172 = relay.Function([var_7170], output)
mutated_mod['func_7172'] = func_7172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6039_call = mod.get_global_var('func_6039')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_7177 = func_6039_call()
call_7178 = func_6039_call()
uop_7179 = relay.sin(call_7177.astype('float64')) # shape=(9, 16, 1248)
uop_7181 = relay.sin(call_7178.astype('float64')) # shape=(9, 16, 1248)
output = uop_7179
output2 = uop_7181
func_7189 = relay.Function([], output)
mod['func_7189'] = func_7189
mod = relay.transform.InferType()(mod)
output = func_7189()
func_7190 = relay.Function([], output)
mutated_mod['func_7190'] = func_7190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6829_call = mod.get_global_var('func_6829')
func_6831_call = mutated_mod.get_global_var('func_6831')
call_7191 = relay.TupleGetItem(func_6829_call(), 0)
call_7192 = relay.TupleGetItem(func_6831_call(), 0)
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
const_7194 = relay.const([8.085192,7.255542,-2.377706,-2.037585,9.781973,-3.794695,3.614342,-2.352630,-6.113427,4.642220,-9.293083,6.997082,1.991972,2.355714,-7.763957,4.277158,-9.285085,-7.721925,-2.500566,1.198579,-3.283379,4.229050,-5.835737,5.621793,-1.839279,-0.525825,7.296857,-9.272103,-1.915967,-0.248894,-4.095447,-2.705811,-2.813334,4.310565,5.309462,-0.059478,-9.102102,-0.377316,5.840922,4.825694,-6.326185,-2.227189,6.980747,5.858623,-4.634391,-8.584925,5.883804,3.277292,4.141606,-2.503796,-9.003198,-6.374269,-5.474766,0.075608,-0.892888,-3.542905,-4.353299,1.972507,7.805577,-8.325648,-9.723430,-9.505773,4.955647,0.476766,-8.859092,-5.725952,-1.469563,8.502256,1.357127,7.569928,6.196539,-3.196996,-2.107466,4.477371,-2.668372,-3.855609,1.176396,4.876284,-2.656803,7.736599,-9.836440,1.159233,1.375935,-7.694314,1.729113,-7.783118,2.830443,4.699739,-1.738501,8.248792,-9.176215,4.957243,-7.026555,-7.822283,1.203163,0.983211,1.891822,4.280929,2.556375,4.038450,3.258818,7.539521,1.796872,-8.088585,1.728197,-0.644488,0.517192,9.283854,-3.333140,5.013043,-5.920765,-5.012428,8.872591,-0.198246,5.408217,-7.579213,4.343760,3.123158,-0.491827,4.994620,6.879981,9.144474,3.297306,-6.352224,-5.672920,-9.901354,-1.940275,9.369463,-1.838292,-7.566827,3.820802,-7.885186,-2.040876,8.180826,6.999556,-5.023880,3.016431,-2.605706,5.139916,-4.028370,-6.717035,-2.618823,5.604879,-4.483630,3.731306,0.897774,2.777249,9.888139,2.257571,-7.547609,6.687117,6.987863,-3.410092,-0.381949,-9.100147,-8.128461,3.407596,6.047999,-2.993377,-5.853101,-4.674566,-6.805269,6.761286,5.735041,2.422918,6.291802,6.774143,0.989456,-6.864678,7.030119,-0.354714,4.094394,-9.688451,5.264522,3.569695,-3.280818,3.997009,8.337323,-2.296772,-3.001869,1.512832,9.059092,-4.735897,-2.828061,-2.127775,-8.206615,3.190439,-6.963590,-9.813011,-8.578089,6.144067,-2.669803,-7.601213,8.414191,-4.179893,-6.172903,3.245378,-8.240639,-8.384415,7.107413,-0.186782,4.539484,5.083135,4.467901,7.601601,1.172534,-2.213024,-2.371889,-5.965281,-2.364059,8.416448,-0.026773,-5.502666,-8.647381,4.957448,2.040130,7.592441,-0.606909,-7.342538,5.869950,6.961155,-6.458769,-2.117562,-7.998998,-8.388871,7.502070,2.911887,-9.957676,5.653084,-0.458796,-3.242187,-6.700379,7.079610,4.331135,3.094731,6.734002,3.892367,-8.302590,-1.262206,-6.241321,7.644488,-9.153259,9.421158,-9.144467,-5.259040,-6.595835,-4.607670,-0.429581,5.293786,7.835932,-5.836812,8.296641,-4.418055,7.524883,6.433675,6.569501,-1.396969,4.389156,3.222710,-6.783450,2.064952,-2.657108,5.075751,6.795356,-8.534183,3.126784,5.270880,2.225185,4.374295,6.692631,-0.528419,5.112847,-7.532651,9.415492,1.691755,7.842166,-5.245181,-8.018712,7.048092,-4.529166,8.932020,-7.166748,-5.821350,-6.997465,6.056987,-2.000573,7.418403,-7.007700,7.853224,2.823677,2.258627,9.764710,-5.055457,4.453874,0.157967,-2.060316,-1.110156,2.096831,-7.769514,-9.518910,6.263697,0.334195,-9.610771,9.059811,4.995024,-9.517290,2.693274,-7.184037,-6.947243,4.357706,2.615224,-9.207051,6.853219,4.661341,1.134559,5.617174,-3.408899,2.555345,-5.671603,-1.508608,2.716068,-5.609697,-4.127229,6.606200,-1.475233,-9.720287,-6.772368,5.545614,8.986022,4.645119,-8.195315,9.392101,3.766058,-6.978654,8.640243,-7.848579,5.286047,-6.402690,0.631353,-4.308278,-2.822488,-0.008753,5.100270,-4.555703,-8.990296,-0.795316,-8.856455,9.250587,-3.558108,2.006342,9.601565,0.262562,-4.973230,-0.513647,7.205477,-4.971305,-8.830442,-0.428299,-1.509516,-1.965852,-1.135240,-8.997298,-7.371359,-8.953568,3.377004,8.799904,3.139333,1.023336,-6.425149,-7.440644,0.802173,7.358333,1.794216,8.810323,1.660041,-6.741106,-5.987646,-7.055122,-4.062806,-6.059736,7.178659,-0.962227,-6.820872,-9.577103,-8.188478,-0.110109,4.024904,5.616924,2.650007,2.544012,-9.550068,-4.817817,-5.687843,1.783953,4.913608,-3.927228,7.005063,-6.912797,-0.967472,-3.587800,0.937598,-9.017858,8.851063,1.913361,9.189189,1.649538,-4.887780,-2.640971,-5.944019,9.222583,4.692293,-6.334874,8.852594,-2.684815,-8.535553,-1.072040,6.201480,-2.041841,-7.698920,6.269734,-0.112761,1.500129,-1.295414,1.209204,4.705603,0.440448,-3.655669,-8.459873,-7.073858,-9.799786,9.970741,-4.158874,1.700012,7.124810,-4.651914,9.191066,2.324026,3.121941,7.716470,9.815242,5.911112,0.490376,-5.007408,8.027068,2.340879,0.384478,-8.714301,8.901197,6.759991,0.872081,-4.170410,-9.740662,1.049358,6.447151,6.171808,-2.185141,8.394084,-8.241926,6.603069,-9.960069,5.996784,1.000275,8.540884,-3.058252,-5.844185,-0.065939,-2.920130,-1.994598,-2.220994,-9.736986,-3.959125,0.106880,2.789494,-2.333444,1.902391,3.312454,-4.500643,7.267208,6.426349,-2.763678,6.173261,-0.863563,-1.482300,-8.431228,3.644520,-7.287410,9.435599,1.168737,2.813547,2.483226,8.679080,-3.530350,9.517064,8.123953,1.073486,-9.638051,2.403751,-9.393924,-2.049945,-6.533300,-3.655285,9.183494,-4.455612,-0.252527,-9.059443,1.642686,-6.890046,-1.061814,5.700501,-1.969507,4.457370,5.693502,-6.504982,-4.110806,-1.185469,-8.846251,4.901589,-4.007306,-4.131615,-4.172952,-9.917420,-3.814715,9.562212,4.944895,7.597929,5.049423,-2.994698,6.652003,-6.378542,6.637520,-0.263110,6.414831,-4.770435,-4.079121,-1.417876,5.161870,-2.799397,3.950078,-0.830937,-8.102556,1.238896,2.756537,-9.573507,-0.834106,-6.332143,-4.570331,3.535555,3.188616,8.882410,-2.396873,-2.031660,2.686113,-4.343748,-2.649993,5.423171,-9.589956,-4.028580,-5.037001,-6.582763,8.637312,0.079990,6.586374,-1.997785,-6.053386,-1.813680,2.057304,-0.247029,9.096661,-3.010587,-6.051711,-5.294133,-4.287814,-6.874486,-7.843590,3.394754,1.307181,3.364469,2.809461,1.158999,9.097752,-1.514245,-0.866897,6.217268,5.351839,0.895162,0.753659,-1.449457,-0.453310,2.603268,1.695561,4.670601,6.328127,-5.970897,-8.135251,-8.963143,9.642823,-5.750503,9.454143,-0.061749,9.336589,-2.151803,0.621370,-3.277786,5.514546,-2.758223,-5.305687,-8.768630,-6.944389,-5.790710,-8.347354,8.255240,-7.828829,-2.181329,7.273125,-4.849888,-2.813387,-6.278809,-2.088020,-3.490605,-8.483776,-4.013576,-0.593520,-7.460136,5.711954,4.898303,3.445168,-1.289477,-4.583074,0.151390,8.583237,9.872139,5.976431,5.783291,-2.004157,9.874517,2.120784,-0.994137,-3.424424,-2.211212,7.581077,-1.323724,-9.403542,-4.077500,0.824890,7.165582,-7.374766,-9.367302,-9.474444,7.098200,6.492517,9.433447,-1.634509,-7.984241,-0.409914,4.128714,-4.476461,-1.212695,-7.443688,-6.700897,-3.188351,-2.014356,-2.407207,-6.332816,-9.912210,8.106265,5.121315,-6.036127,-6.998199,-8.014389,-2.391368,1.370674,6.029758,1.127738,-1.404168,7.446381,6.180292,4.722103,4.498465,-6.013025,3.042360,9.099244,-8.216719,2.588119,1.297692,0.957169,8.068819,-7.378077,-7.137088,-4.975070,3.508575,-4.610292,4.835975,-0.703249,2.365934,-5.915604,3.886633,7.294789,-7.765730,-0.059781,8.878067,1.091273,-0.163052,2.900371,4.362075,-0.575064,-1.272664,-5.848753,-8.904935,-3.048895,6.517983,5.894668,-0.478782,0.384427,0.292897,-0.312814,5.190140,4.751634,-2.031326,9.964588,-2.304196,-4.404513,-0.941076,-2.041390,-6.827876,-0.180905,9.954265,-0.748339,1.838951,-4.695165,6.776964,2.340184,-3.926238,6.588329,9.937947,3.817332,-2.111092,-9.943133,-5.210617,6.673674,6.317652,-4.565854,0.552682,8.760415,-4.287752,9.200762,-3.494846,7.369792,3.100136,3.463976,4.824166,-7.154630,9.423752,-5.418739,6.716775,-9.301391,2.969879,-0.601050,1.831767,2.492589,5.099754,7.182595,3.288043,9.112381,1.316714,-0.226181,0.028798,-1.043592,2.059733,-4.492201,3.279316,-6.114388,8.339877,1.508442,-8.824014,5.314718,-0.996745,3.441869,2.491183,-1.345193,-3.834501,1.019260,-1.704504,-4.993350,-9.391002,-4.656422,3.683779,-6.646287,4.119591,1.988593,8.331638,-5.944875,8.418506,5.354997,-1.523374,-5.507333,-8.116349,-2.714021,3.410429,1.379392,4.085023,5.438475,-8.664688,0.563535,-4.350244,4.260379,4.102894,9.490183,2.787765,0.950989,-4.443223,-1.993381,7.492958,6.454838,5.962490,-7.804592,2.898405,1.986975,-6.835108,5.772554,6.999810,-3.311403,-9.549488,-9.797796,-3.207378,4.247883,9.251559,-2.018182,-9.092277,8.720052,-8.161910,-3.877784,-0.475936,7.911114,0.306208,3.878635,0.721317,8.771161,3.693781,5.261095,-3.253059,-8.189345,4.982708,-8.364887,5.565263,6.854754,-5.953164,6.002096,-1.839847,0.655565,3.469636,-0.741757,-0.864506,3.008833,3.588033,9.000349,4.493113,6.050455,-8.398654,0.892496,-6.700617,6.198213,-9.726691,3.501590,9.676187,-4.046932,0.957693,8.853802,7.082861,3.632009,-0.667148,-1.673356,-7.996838,-0.439709,0.121097,-9.711369,-3.982212,-5.601483,-8.659056,8.343166,-6.205799,6.425356,6.411940,2.658149,1.494762,0.910020,-9.654999,8.435209,-0.991313,3.674987,6.136301,3.819456,-6.568605,0.903492,7.224331,-1.209956,-4.767590,6.272031,7.766473,-5.219201,9.699243,-6.747158,9.816780,-9.662987,8.082125,-6.128993,-4.604743,-8.538546,8.801025,1.168965,5.407481,0.834656,1.028090,6.798754,4.607245,7.633210,9.036543,-2.001171,-1.827574,-7.447751,3.929395,-6.525901,-5.765480,-3.625933,-5.525877,-7.777418,7.308997,-1.963156,-3.504831,4.003353,6.615228,-6.129371,-9.810728,-5.474276,-9.606094,-0.344013,7.386651,4.601007,-1.664063,8.955957,7.145308,-1.341878,6.114427,-0.802135,-1.878838,-4.678402,-1.162991,-2.972272,8.312667,1.843912,-7.848623,4.977826,9.621857,4.240410,-8.393405,-0.625112,4.661944,7.046373,7.821458,-6.591012,0.647995,-4.571836,-1.097233,5.023922,1.311105,7.130788,-0.329805,6.575993,7.112214,5.527446,1.679565,7.091552,-2.291415,-9.358135,-8.352904,7.756745,4.942686,-1.420920,6.544309,8.657321,-9.574744,-5.493403,-6.714835,-7.372159,-3.256312,1.543196,-0.066359,-8.292016,1.561890,-2.049997,-6.531985,-7.989517,7.477044,4.798945,-1.841856,0.014144,6.150440,6.936585,5.322391,1.531898,-7.541374,-3.015853,0.755652,4.539496,5.941151,6.534802,-3.392985,3.418280,-0.799462,-0.670359,7.000485,6.306209,0.412914,-2.194080,6.280298,-3.109434,6.930698,-3.446993,-4.598739,5.642281,4.295757,4.297173,-5.687349,-3.464886,2.930656,8.643520,-6.167676,0.933254,-6.648281,6.611468,0.528234,1.010852,-1.961439,5.770178,2.817067,-9.539865,5.639866,-5.338414,-0.388812,-5.635634,4.514766,-4.559218,7.676789,3.431721,-0.165180,7.177704,8.710104,-7.266463,-4.925180,-2.980985,-1.448369,-7.721923,-9.530920,-4.962297,1.096562,-7.717470,-2.689704,9.553835,-8.804834,7.503149,4.419851,-5.688159,1.161592,-9.638163,-0.855002,-6.934359,4.464206,8.846940,2.702966,-6.010508,-6.170068,-7.819152,0.580906,-3.234768,-3.509884,-1.605982,-5.626053,-5.153173,4.556253,0.857096,3.783052,5.597153,2.282607,-4.689606,-3.129949,3.941584,2.801757,8.523852,7.972730,-3.121458,-0.541044,3.916067,5.936460,-0.285321,-0.235723,6.113963,3.967757,-2.843137,1.987039,-2.279125,2.401881,-3.935813,6.014792,-8.093547,-3.621303,-9.778035,2.672534,1.267057,-9.364645,-5.767666,-3.226706,-4.724584,-2.119774,-7.751817,-4.677634,7.525860,-2.895467,-7.304353,0.327199,0.216650,-2.452764,-5.522916,4.521064,-2.593321,-1.873456,0.058648,-0.900535,-6.005629,-6.472351,-5.566874,2.959914,2.566968,-5.857603,6.999764,-4.761264,6.361068,4.647517,-4.932386,9.948969,-6.667991,0.747125,-7.418185,5.976209,-8.829119,8.954154,-1.545651,-6.313161,4.623166,-2.968851,2.865883,4.589279,0.087144,-2.152531,0.661518,-5.060900,6.948127,7.917677,-1.312207,1.004414,6.202948,6.001187,3.350464,5.017752,-2.918900,-6.085888,-5.665321,-8.124144,-3.970341,4.472775,0.426770,7.294222,-3.522329,-2.622750,8.981181,0.864028,5.783530,8.201739,3.553569,7.423090,-0.125070,8.342038,2.322953,-0.589399,-9.714225,2.611831,1.852846,1.503190,-1.168386,-0.114499,9.105285,-6.047606,0.068471,8.837377,-2.531034,-9.239428,-4.434536,8.619231,-4.304961,2.626183,7.536535,-6.269081,4.874791,-6.431224,2.836738,-0.902260,5.718306,0.935783,-3.802639,1.979553,3.396600,4.317008,6.396286,5.641112,-0.036424,-0.941114,-2.201720,-7.334074,-0.240232,3.287668,-9.137722,-6.145476,-0.400383,-7.684359,1.126360,1.018797,1.088718,-9.432433,3.952369,-5.604727,6.716045,0.763345,6.922655,6.082554,6.700607,-3.731859,-6.096835,3.724508,-0.846218,0.022477,3.878027,9.187108,2.836385,1.515031,8.161620,-6.728922,-4.769049,-8.728074,-4.183587,-6.913723], dtype = "float64")#candidate|7194|(1248,)|const|float64
call_7193 = func_1381_call(relay.reshape(const_7194.astype('float64'), [16, 6, 13]))
call_7195 = func_1381_call(relay.reshape(const_7194.astype('float64'), [16, 6, 13]))
func_5993_call = mod.get_global_var('func_5993')
func_5996_call = mutated_mod.get_global_var('func_5996')
var_7205 = relay.var("var_7205", dtype = "float64", shape = (80,))#candidate|7205|(80,)|var|float64
call_7204 = func_5993_call(relay.reshape(var_7205.astype('float64'), [2, 5, 8]), relay.reshape(var_7205.astype('float64'), [2, 5, 8]), )
call_7206 = func_5993_call(relay.reshape(var_7205.astype('float64'), [2, 5, 8]), relay.reshape(var_7205.astype('float64'), [2, 5, 8]), )
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_7207 = func_5929_call()
call_7208 = func_5929_call()
func_2709_call = mod.get_global_var('func_2709')
func_2712_call = mutated_mod.get_global_var('func_2712')
const_7237 = relay.const([-2,3,-1,-2,-5,7,6,5,6,6,9,-9,-8,-5,-7,-3,3,-4,10,-7,10,7,1,-2,9,8,7,-6,-4,-2,-9,-1,-10,7,10,4,-10,-9,-2,-10,8,6,5,-10,3,9,8,4,-4,7,9,-7,-2,-1,-5,3,9,7,-3,3,1,-10,4,7,7,4,-5,4,-7,-2,-8,-6,-6,2,-3,7,-9,-5,1,2,5,-3,-9,8,3,-10,4,-7,2,2,-6,-9,8,-9,5,-8,-9,3,-9,6,10,3,4,8,1,1,-1,-2,4,1,-3,4,-1,8,9,-3,9,-4,-8,-9,2,-6,-10,-3,10,-8,2,-2,8,-4,5,-7,-3,-9,3,10,6,10,4,2,9,6,-1,-8,-10,7,10,-4,-5,4,1,-5,9,4,-3,7,4,5,4,6,6,1,-5,8,6,-10,-5,-3,-2,-10,-3,7,10,5,-7,-8,-2,8,-4,9,-8,8,-4,10,9,-1,6,-10,-3,-2,5,5,1,-9,2,6,7,-5,-6,-8,-6,-7,-10,1,-3,-4,-7,8,-2,4,4,-4,-5,-3,6,7,-4,-4,-1,-8,10,-5,-10,-6,1,-6,1,8,-9,-8,-4,-6,-9,-3,-7,-7,4,5,-6,-6,-8,-3,-2,-4,2,7,7,6,-4,-6,-3,-8,-6,1,-2,10,1,1,-4,4,9,4,5,-3,1,7,-4,-1,6,2,-10,9,6,5,-7,6,10,-3,9,3,-5,6,-5,-10,10,10,4,9,1,10,5,-3,5,2,-10,-8,5,-6,2,5,10,1,-7,6,6,-8,-1,6,5,-1,-2,3,4,10,-7,-7,-2,-1,-1,-9,-4,-6,7,2,-9,-10,4,8,3,4,-5,-7,1,8,-6,9,-3,6,8,-4,10,7,7,4,5,10,-10,9,-6,3,5,3,-6,9,-6,10,5,2,5,2,5,-4,-8,8,9,7,5,1,6,7,3,7,-7,9,-6,-5,-4,8,1,7,9,-3,1,-6,-6,-10,2,-6,-8,-2,8,9,-6,6,-5,7,-5,8,8,5,-9,-10,2,-2,1,-9,3,10,5,7,9,3,8,-1,9,10,-1,-1,-6,-5,8,7,2,-9,5,6,-1,7,-2,6,6,-1,6,-2,-4,-1,-3,-4,-8,-1,-10,-9,5,2,6,-9,6,9,-2,6,10,-10,10,5,8,2,-2,-1,-7,-4,-3,-7,-5,-2,-9,-4,-8,1,10,-5,-1,-6,-8,-10,10,-9,-7,1,-3,10,1,-1,10,-6,-8,-9,-8,2,10,10,-5,2,-5,7,-7], dtype = "int64")#candidate|7237|(495,)|const|int64
call_7236 = relay.TupleGetItem(func_2709_call(relay.reshape(const_7237.astype('int64'), [495,])), 3)
call_7238 = relay.TupleGetItem(func_2712_call(relay.reshape(const_7237.astype('int64'), [495,])), 3)
output = relay.Tuple([call_7191,call_7193,const_7194,call_7204,var_7205,call_7207,call_7236,const_7237,])
output2 = relay.Tuple([call_7192,call_7195,const_7194,call_7206,var_7205,call_7208,call_7238,const_7237,])
func_7252 = relay.Function([var_7205,], output)
mod['func_7252'] = func_7252
mod = relay.transform.InferType()(mod)
mutated_mod['func_7252'] = func_7252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7253 = relay.var("var_7253", dtype = "float64", shape = (80,))#candidate|7253|(80,)|var|float64
func_7252_call = mutated_mod.get_global_var('func_7252')
call_7254 = func_7252_call(var_7253)
output = call_7254
func_7255 = relay.Function([var_7253], output)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5012_call = mutated_mod.get_global_var('func_5012')
call_7265 = func_5010_call()
call_7266 = func_5010_call()
output = call_7265
output2 = call_7266
func_7277 = relay.Function([], output)
mod['func_7277'] = func_7277
mod = relay.transform.InferType()(mod)
mutated_mod['func_7277'] = func_7277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7277_call = mutated_mod.get_global_var('func_7277')
call_7278 = func_7277_call()
output = call_7278
func_7279 = relay.Function([], output)
mutated_mod['func_7279'] = func_7279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_7327 = relay.TupleGetItem(func_4112_call(), 0)
call_7328 = relay.TupleGetItem(func_4113_call(), 0)
output = call_7327
output2 = call_7328
func_7330 = relay.Function([], output)
mod['func_7330'] = func_7330
mod = relay.transform.InferType()(mod)
mutated_mod['func_7330'] = func_7330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7330_call = mutated_mod.get_global_var('func_7330')
call_7331 = func_7330_call()
output = call_7331
func_7332 = relay.Function([], output)
mutated_mod['func_7332'] = func_7332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4026_call = mod.get_global_var('func_4026')
func_4028_call = mutated_mod.get_global_var('func_4028')
call_7335 = relay.TupleGetItem(func_4026_call(), 1)
call_7336 = relay.TupleGetItem(func_4028_call(), 1)
output = call_7335
output2 = call_7336
func_7339 = relay.Function([], output)
mod['func_7339'] = func_7339
mod = relay.transform.InferType()(mod)
output = func_7339()
func_7340 = relay.Function([], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7330_call = mod.get_global_var('func_7330')
func_7332_call = mutated_mod.get_global_var('func_7332')
call_7395 = func_7330_call()
call_7396 = func_7330_call()
func_4481_call = mod.get_global_var('func_4481')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_7397 = relay.TupleGetItem(func_4481_call(), 0)
call_7398 = relay.TupleGetItem(func_4482_call(), 0)
output = relay.Tuple([call_7395,call_7397,])
output2 = relay.Tuple([call_7396,call_7398,])
func_7405 = relay.Function([], output)
mod['func_7405'] = func_7405
mod = relay.transform.InferType()(mod)
mutated_mod['func_7405'] = func_7405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7405_call = mutated_mod.get_global_var('func_7405')
call_7406 = func_7405_call()
output = call_7406
func_7407 = relay.Function([], output)
mutated_mod['func_7407'] = func_7407
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7435 = relay.const([[[0.122140,-0.036672,-1.728652],[-6.690479,6.489860,7.839422],[-8.557694,-9.849039,9.499901],[2.655586,4.944479,-8.997871],[-7.285237,0.277264,1.386052],[4.149884,5.497718,4.336590],[5.426716,-9.377870,2.667345],[-1.639545,-6.580247,1.178108],[2.514541,7.754053,9.733694],[-6.496716,6.514050,7.785749],[7.873200,-3.781245,6.596284],[-7.690353,9.391316,9.574694],[-3.160311,-8.267206,-9.736930],[-5.485919,-5.601089,7.181287],[7.893289,-7.091470,1.234357]],[[-8.336885,-4.784919,-8.150681],[-0.560663,-3.649855,9.074738],[-6.890998,-4.942980,-2.083112],[-3.316126,-6.580500,-5.847192],[-1.254492,-6.167885,-7.594986],[7.323833,-2.427227,1.818554],[1.490417,7.468284,3.517259],[8.735377,-3.107743,-6.748663],[6.657213,-8.358516,-9.467991],[6.996271,-3.394367,1.594569],[8.854358,1.777096,-5.304614],[-2.290386,-4.171138,-2.672286],[-6.963575,6.008080,6.769366],[4.744170,2.505642,-7.113569],[-5.046588,-1.648558,9.180949]],[[-6.498558,-1.397733,-5.417467],[-5.811882,-0.820252,-8.971831],[2.793416,0.242303,-0.360045],[-4.962413,1.421645,2.637292],[2.748896,9.114811,-1.328506],[7.441640,2.464228,2.468805],[3.169353,7.702953,-7.982807],[-0.401137,-0.312221,0.561258],[-2.588530,7.882936,6.891240],[0.432518,-6.717665,-0.821454],[-3.434919,8.799222,-9.874313],[3.674891,3.322483,8.986781],[9.733896,9.112550,8.612634],[-8.814252,-0.418512,6.761183],[-6.706717,8.136619,6.539304]],[[2.620076,9.445853,-3.108472],[4.470596,2.605119,-1.322323],[1.953047,-3.797606,7.261704],[5.911514,6.705045,4.813687],[6.929508,-9.710446,5.303355],[-5.655095,1.777083,1.543279],[6.575692,3.444237,4.945898],[-1.928245,1.954546,8.867532],[-7.445727,-9.512486,6.841707],[1.100508,8.368684,6.359916],[4.594144,-5.404087,1.932248],[-9.886468,-7.523434,-4.405687],[4.989969,-0.099502,4.654670],[-0.896302,-0.549434,-3.402243],[-2.533515,-2.724644,2.547583]],[[-1.404340,-7.187763,9.475955],[2.281265,-0.927335,1.682514],[6.552829,4.092640,-5.247101],[-3.265055,1.026044,6.514906],[-7.532617,3.229973,-6.967134],[-7.839200,6.862546,0.357107],[-2.163220,6.248698,-5.689863],[4.342906,8.908107,-4.361660],[-8.222670,-9.438852,3.671742],[8.980953,-9.099924,5.587257],[2.554032,1.557558,-1.380402],[8.786506,9.684323,7.972561],[8.772527,-9.410599,-1.064178],[-9.724696,0.907990,-4.798588],[7.720344,-5.329864,-4.401634]],[[-1.713715,7.347721,-4.513711],[-0.978798,-5.933171,-2.360377],[8.954056,9.412245,5.787440],[-2.692005,-6.602933,-7.404853],[4.033223,-1.835967,4.808583],[3.627308,-9.773335,-3.214806],[-9.284020,-7.259181,-9.011141],[-5.424396,-0.895668,4.988769],[9.030384,-1.357111,7.997642],[-6.840154,-4.827888,-0.604693],[0.457854,5.652366,-1.153370],[5.092132,-4.336047,-9.978579],[-9.885814,-9.828240,-4.876613],[-7.522594,-8.436173,5.094423],[-7.484297,-6.894344,-2.965492]],[[-4.461283,-9.337261,8.743574],[9.568059,2.782403,-9.636605],[3.522384,-2.148110,7.213220],[6.868468,1.035728,-1.891796],[-9.166485,-2.084630,7.319200],[1.920699,4.054725,3.014806],[0.760497,7.545485,-2.565314],[-8.309137,-1.144825,-6.142131],[5.781826,-4.248600,0.772909],[1.420603,6.138994,-5.050144],[-9.847099,-9.937580,4.789214],[-7.715999,5.485489,3.379524],[8.618847,9.859320,-3.504813],[1.775683,5.563328,-1.332610],[5.953710,-8.294441,-2.025884]],[[3.386568,0.531249,-0.873868],[-6.255970,9.838209,-2.373654],[2.583776,-8.010810,0.604665],[-0.867631,-9.440029,-6.286913],[-5.149989,-7.728191,-8.093088],[1.051592,5.108666,-9.510920],[9.610365,-8.811815,-2.079201],[2.424561,-3.851429,-2.402738],[8.870591,-8.865422,-9.454581],[-0.285705,-4.956456,-8.040528],[0.362084,7.571775,-2.212854],[-3.079584,-2.354486,-8.032002],[4.708616,-4.931386,7.636525],[-6.764527,-6.889084,-4.741743],[2.284368,2.137768,4.254898]],[[2.366684,-8.211053,0.083579],[-8.114113,-6.573448,-7.869153],[9.841669,9.821089,2.038941],[-4.479180,8.640741,-0.264452],[8.559660,-3.503923,-6.972277],[-7.412104,3.553386,-3.325132],[4.068370,-7.331197,4.150027],[-8.452697,3.521063,-2.168733],[-6.895820,-6.409164,2.694575],[6.388869,-0.862491,-0.896833],[8.214898,-4.609209,0.249743],[4.685366,1.385869,-5.183589],[-9.632095,2.937970,-5.737956],[-6.678678,-4.178886,-2.194185],[-7.530521,1.736188,-0.108366]],[[3.992508,-9.942445,-2.360619],[-4.122822,9.323762,7.350410],[-9.767492,-4.256969,2.097377],[5.971956,-0.947419,-8.030998],[-3.816808,-9.036635,-0.125314],[7.967812,8.866385,5.458516],[1.937512,1.041214,-8.520046],[-9.582160,2.590938,-2.483912],[-9.962187,-3.501451,-7.561617],[7.963138,5.529533,-4.389525],[-4.232281,9.266735,8.744924],[3.406969,-0.479481,8.087436],[-9.934675,4.986225,5.849699],[-8.063052,-1.774602,-2.965508],[-3.708040,3.217490,1.964349]],[[3.863569,8.109088,5.318469],[8.526408,4.261371,-8.364995],[-1.034475,-5.906550,-1.437938],[-4.958334,6.708479,3.062163],[9.407244,-3.724346,-3.693345],[-8.718555,1.222467,-0.615319],[-9.190768,-3.564368,-5.824114],[4.138429,3.379613,-5.646698],[5.840228,-7.170006,0.723539],[-3.485798,5.140230,4.444466],[-0.279197,6.582298,2.980446],[6.670271,-7.540771,4.685574],[-5.251190,7.509359,5.715262],[0.941224,-5.427765,1.950409],[1.469842,-5.921014,-7.690243]],[[-9.282806,4.425532,8.073956],[-0.792541,2.120402,-2.085473],[6.100974,7.064003,-7.752725],[-6.521564,3.796504,3.075206],[0.409660,-8.117135,-7.995933],[8.814735,5.073042,-1.439035],[-0.073866,7.732901,4.277915],[-9.826941,-9.435095,-1.746923],[-8.519116,-7.284002,2.349547],[8.835571,5.392293,8.690934],[-6.890165,-3.087261,6.785431],[-0.358277,7.035046,7.835514],[1.614223,2.964680,5.329230],[-9.226102,5.304343,4.290751],[6.427592,0.371376,-4.423894]],[[-4.388634,7.639083,1.454439],[8.022284,-0.942227,5.339161],[-4.127084,-0.192025,4.297022],[7.335563,2.820620,-7.484875],[7.537757,4.435885,-8.263481],[0.051464,8.568628,-5.028669],[-6.487269,-2.598294,-4.016915],[-3.949407,8.446367,6.102345],[5.847302,-5.409460,1.090196],[3.330383,-7.377822,2.398123],[6.313762,2.422485,6.962579],[0.480588,-4.299753,6.833772],[4.788243,0.229653,-2.382309],[8.675670,9.990331,-8.056419],[3.723940,5.441540,1.954329]],[[-8.300522,-9.660377,4.386606],[8.953409,8.930811,-6.095763],[3.311148,-6.647326,-2.146112],[7.867671,-1.776875,-6.555770],[4.529943,4.745901,2.983615],[6.890254,9.932438,-4.785426],[9.647347,2.708650,2.189984],[9.695486,6.118631,7.031421],[-6.813184,-3.038802,7.716835],[-8.413416,-6.908984,3.394507],[-5.960524,7.979076,-4.738307],[-0.995097,-2.576467,-1.175650],[5.471644,-2.242133,-4.748795],[2.000383,-1.850397,9.550027],[-4.052957,-1.140319,6.903742]]], dtype = "float32")#candidate|7435|(14, 15, 3)|const|float32
uop_7436 = relay.log10(const_7435.astype('float32')) # shape=(14, 15, 3)
func_3304_call = mod.get_global_var('func_3304')
func_3307_call = mutated_mod.get_global_var('func_3307')
const_7444 = relay.const([7.808847,-7.409579,7.759644,9.853277,9.187166,-9.172581,-0.989063,2.122294,-7.894182,9.013441,-5.950427,7.498587,-5.171771,9.207935,-1.159985,6.486849,-8.367468,-2.923604,-1.913488,8.532271,1.437506,1.815614,-4.668539,-8.300311,1.117757,2.829256,-4.286020,-3.283773,-0.834460,0.241531,-7.548753,-3.742520,-1.467552,2.353675,-8.666299,-8.098538,-1.308729,8.055429,-5.515990,2.325532,9.946561,9.017293,-3.599247,9.707719,5.782969,1.704908,2.962394,-9.294761,-8.494419,-9.335108,2.353794,-5.611603,-6.328836,-4.357445,9.583697,-8.323327,-4.309728,2.879564,6.534985,4.685489,6.389007,3.292488,-6.937753,-0.338367,7.987091,5.559175,4.190209,-6.872281,-2.571422,-7.073478,-5.337573,-1.961497,-6.598148,2.303901,-2.109433,-4.354601,9.896116,-4.415737,-6.942286,-2.990156,1.024609,-0.890241,6.725817,-5.600820,8.140730,-7.621091,0.679922,-1.221108,-7.381235,-7.359086,2.036651,-0.095634,-0.940493,-2.238889,6.443195,-5.939358,9.008362,7.244282,0.396848,-0.618453,-6.294817,-0.440976,4.858576,6.779221,4.518359,2.093190,-8.112288,9.310722,-3.114774,6.461829,5.424172,4.128388,-8.147438,7.353489,-9.939880,-5.737258,-2.206065,7.892423,-7.835386,8.754684,-8.278256,-8.549237,-5.312177,0.055949,6.951404,-2.096655,-7.469168,2.225369,-3.413637,-5.689974,-2.349232,2.476414,0.372484,8.931159,0.342334,9.863726,6.636250,1.572888,-7.047360,-0.989983,1.542992,-0.441187,-5.392416,6.789259,-6.907709,-9.449108,-8.250876,-6.787569,-9.649321,3.831600,-3.091109,5.571364,-3.120270,-7.285301,7.245082,8.986248,7.119205,-3.683418,2.481064,1.007819,3.489999,2.233042,7.618894,1.489277,8.897387,-6.296638,-7.475789,0.720420,-7.917967,4.797511,-3.568073,-6.583289,-3.715663,-0.200250,-8.955779,3.785845,7.439720,-8.015026,-5.056621,-4.611305,-6.310764,-0.358652,-6.185137,-0.043209,2.850229,-9.054846,-6.653687,8.601303,7.212721,-5.301901,9.076965,9.647358,-6.363472,-3.264830,9.071217,-1.582652,1.826126,-5.408170,-9.170691,-3.468003,-3.535628,-4.281756,8.595746,8.775538,7.378044,8.333804,-6.357294,9.251951,-1.046124,4.388129,-2.031190,0.419404,-2.826202,0.223838,-7.931033,-3.168422,-8.336112,7.828866,4.051145,-4.637761,3.715275,9.963066,-5.493238,-0.076485,-4.016480,-2.538460,-7.930992,-2.916958,-6.753159,4.669282,9.288017,3.026369,-2.235440,-4.108665,-0.153288,-2.408777,-6.707155,1.625454,-5.296012,2.686922,1.696159,0.210811,2.816019,4.570659,3.281214,2.295312,-9.352985,-1.144235,0.520694,-1.423557,3.886517,9.559580], dtype = "float32")#candidate|7444|(252,)|const|float32
call_7443 = relay.TupleGetItem(func_3304_call(relay.reshape(const_7444.astype('float32'), [6, 14, 3])), 0)
call_7445 = relay.TupleGetItem(func_3307_call(relay.reshape(const_7444.astype('float32'), [6, 14, 3])), 0)
bop_7449 = relay.divide(uop_7436.astype('float32'), relay.reshape(const_7435.astype('float32'), relay.shape_of(uop_7436))) # shape=(14, 15, 3)
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7460 = func_7015_call()
call_7461 = func_7015_call()
output = relay.Tuple([call_7443,const_7444,bop_7449,call_7460,])
output2 = relay.Tuple([call_7445,const_7444,bop_7449,call_7461,])
func_7464 = relay.Function([], output)
mod['func_7464'] = func_7464
mod = relay.transform.InferType()(mod)
output = func_7464()
func_7465 = relay.Function([], output)
mutated_mod['func_7465'] = func_7465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7553 = relay.var("var_7553", dtype = "float64", shape = ())#candidate|7553|()|var|float64
var_7554 = relay.var("var_7554", dtype = "float64", shape = (2, 3, 6))#candidate|7554|(2, 3, 6)|var|float64
bop_7555 = relay.greater_equal(var_7553.astype('bool'), var_7554.astype('bool')) # shape=(2, 3, 6)
func_6311_call = mod.get_global_var('func_6311')
func_6313_call = mutated_mod.get_global_var('func_6313')
call_7559 = func_6311_call()
call_7560 = func_6311_call()
output = relay.Tuple([bop_7555,call_7559,])
output2 = relay.Tuple([bop_7555,call_7560,])
func_7565 = relay.Function([var_7553,var_7554,], output)
mod['func_7565'] = func_7565
mod = relay.transform.InferType()(mod)
mutated_mod['func_7565'] = func_7565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7565_call = mutated_mod.get_global_var('func_7565')
var_7567 = relay.var("var_7567", dtype = "float64", shape = ())#candidate|7567|()|var|float64
var_7568 = relay.var("var_7568", dtype = "float64", shape = (2, 3, 6))#candidate|7568|(2, 3, 6)|var|float64
call_7566 = func_7565_call(var_7567,var_7568,)
output = call_7566
func_7569 = relay.Function([var_7567,var_7568,], output)
mutated_mod['func_7569'] = func_7569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mod.get_global_var('func_5519')
func_5521_call = mutated_mod.get_global_var('func_5521')
call_7576 = relay.TupleGetItem(func_5519_call(), 0)
call_7577 = relay.TupleGetItem(func_5521_call(), 0)
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_7583 = func_5929_call()
call_7584 = func_5929_call()
func_4767_call = mod.get_global_var('func_4767')
func_4770_call = mutated_mod.get_global_var('func_4770')
call_7587 = relay.TupleGetItem(func_4767_call(relay.reshape(call_7576.astype('float64'), [11, 14, 7])), 0)
call_7588 = relay.TupleGetItem(func_4770_call(relay.reshape(call_7576.astype('float64'), [11, 14, 7])), 0)
output = relay.Tuple([call_7576,call_7583,call_7587,])
output2 = relay.Tuple([call_7577,call_7584,call_7588,])
func_7609 = relay.Function([], output)
mod['func_7609'] = func_7609
mod = relay.transform.InferType()(mod)
mutated_mod['func_7609'] = func_7609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7609_call = mutated_mod.get_global_var('func_7609')
call_7610 = func_7609_call()
output = call_7610
func_7611 = relay.Function([], output)
mutated_mod['func_7611'] = func_7611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_7620 = func_4905_call()
call_7621 = func_4905_call()
func_7252_call = mod.get_global_var('func_7252')
func_7255_call = mutated_mod.get_global_var('func_7255')
const_7628 = relay.const([-6.521091,-1.051285,3.688239,-1.237235,-9.998501,-4.665582,4.244636,-3.419612,0.277502,4.484793,-1.624237,7.772932,8.790548,-9.471786,-3.291957,-0.277675,2.401292,9.159345,5.267960,8.043499,7.927294,8.973988,5.377321,5.755155,0.525352,4.454433,-1.975784,2.316270,-1.827918,-4.915385,2.371715,9.341955,-7.226507,8.087637,8.304512,1.331586,-9.052227,4.423803,-6.140437,-9.376965,7.084459,8.899537,6.827367,-9.682497,-4.078788,-9.726597,1.658119,-8.931166,-0.344645,5.131264,4.866583,-2.278178,5.458578,7.759066,-3.563683,-8.561889,5.993925,4.968431,-6.221111,1.240565,9.703851,-2.615166,8.362705,-5.050709,-1.080726,5.155849,-0.746086,5.400712,3.337176,8.013252,7.604713,-1.781699,-2.315872,9.568650,0.671727,5.445142,-7.023141,9.860890,6.572648,6.402365], dtype = "float64")#candidate|7628|(80,)|const|float64
call_7627 = relay.TupleGetItem(func_7252_call(relay.reshape(const_7628.astype('float64'), [80,])), 3)
call_7629 = relay.TupleGetItem(func_7255_call(relay.reshape(const_7628.astype('float64'), [80,])), 3)
output = relay.Tuple([call_7620,call_7627,const_7628,])
output2 = relay.Tuple([call_7621,call_7629,const_7628,])
func_7630 = relay.Function([], output)
mod['func_7630'] = func_7630
mod = relay.transform.InferType()(mod)
mutated_mod['func_7630'] = func_7630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7630_call = mutated_mod.get_global_var('func_7630')
call_7631 = func_7630_call()
output = call_7631
func_7632 = relay.Function([], output)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7656 = func_7015_call()
call_7657 = func_7015_call()
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_7662 = relay.TupleGetItem(func_3481_call(), 1)
call_7663 = relay.TupleGetItem(func_3483_call(), 1)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
var_7665 = relay.var("var_7665", dtype = "float32", shape = (11, 104))#candidate|7665|(11, 104)|var|float32
call_7664 = relay.TupleGetItem(func_498_call(relay.reshape(var_7665.astype('float32'), [11, 13, 8]), relay.reshape(var_7665.astype('float32'), [11, 13, 8]), ), 1)
call_7666 = relay.TupleGetItem(func_501_call(relay.reshape(var_7665.astype('float32'), [11, 13, 8]), relay.reshape(var_7665.astype('float32'), [11, 13, 8]), ), 1)
output = relay.Tuple([call_7656,call_7662,call_7664,var_7665,])
output2 = relay.Tuple([call_7657,call_7663,call_7666,var_7665,])
func_7668 = relay.Function([var_7665,], output)
mod['func_7668'] = func_7668
mod = relay.transform.InferType()(mod)
mutated_mod['func_7668'] = func_7668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7669 = relay.var("var_7669", dtype = "float32", shape = (11, 104))#candidate|7669|(11, 104)|var|float32
func_7668_call = mutated_mod.get_global_var('func_7668')
call_7670 = func_7668_call(var_7669)
output = call_7670
func_7671 = relay.Function([var_7669], output)
mutated_mod['func_7671'] = func_7671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7691 = relay.var("var_7691", dtype = "float32", shape = (11, 6, 12))#candidate|7691|(11, 6, 12)|var|float32
uop_7692 = relay.atan(var_7691.astype('float32')) # shape=(11, 6, 12)
uop_7694 = relay.log2(var_7691.astype('float64')) # shape=(11, 6, 12)
bop_7700 = relay.logical_and(var_7691.astype('bool'), relay.reshape(uop_7692.astype('bool'), relay.shape_of(var_7691))) # shape=(11, 6, 12)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_7704 = relay.const([9.844626,-2.977550,-3.862691,-3.119283,5.427707,-1.035142,6.082521,7.451829,-1.556730,0.060130,9.299148,-9.308943,6.616280,-5.303362,5.304447,4.214680,0.631288,1.759380,-7.926784,-6.188229,-5.876217,-8.312129,8.757141,-0.515136,7.557042,-3.009205,-8.932426,-6.202145,9.918676,-4.543376,-9.950369,-1.911671,7.835536,9.483264,5.327280,-8.556057,-8.510619,1.088488,-0.724793,6.309661,2.573077,-7.150894,-7.866062,-1.806563,1.462162,2.600793,-7.718016,-7.684420,6.821804,-7.926792,3.339426,-7.767997,7.335070,-8.341569,9.773158,6.744692,1.285515,-6.120196,-6.581432,-6.594874,-0.498963,5.627872,7.006208,-6.307748,0.639340,9.949799,1.768770,-8.524235,3.939596,-7.071632,4.093181,-2.732690,-5.753041,-1.067700,1.563999,-2.095348,-4.006476,-9.322790,6.362493,-4.089627,0.474719,-1.796283,-4.233030,-7.869610,3.770556,-4.910813,-6.901167,2.076195,-0.365582,-4.457568,-9.930950,1.964184,-4.585767,-5.379227,-3.111776,9.394554,-0.083182,9.091560,-3.243441,9.291157,-4.290973,-5.325661,-2.784372,7.235445,-3.566270,-8.103665,9.053437,5.700414,3.176946,4.900484,7.901047,-0.403588,-0.141507,-4.612739,1.189293,-9.158842,8.256571,-9.451778,6.757764,-1.048068,4.649517,-8.380423,-6.605167,4.348351,-8.468185,-2.506142,7.124155,7.419232,-2.585061,-4.236153,0.265462,2.099676,-1.233589,-7.136002,-0.763859,1.392513,6.214954,-2.699311,9.017749,-3.677644,-6.949111,5.696801,0.627550,-9.107824,-9.901399,1.410225,1.762172,6.022273,-2.040872,5.300361,-1.917593,7.326207,6.410132,-9.226033,5.596727,-9.359253,5.444518,9.627886,-7.617646,-9.050998,-9.770364,8.877796,-9.605812,8.348533,-4.389848,0.640791,7.243919,7.341367,-3.309280,-7.378545,-1.029690,-0.791401,-4.899617,-9.981520,6.962698,-0.504457,-6.324280,7.193628,-3.783846,2.132509,-4.787194,6.668496,9.778383,-7.288844,-1.425177,4.533333,5.197667,-5.468150,3.399351,-2.096003,1.533742,2.814950,-8.778823,3.168110,5.809433,-2.603045,0.476595,-3.514497,-0.259586,2.478842,8.582367,5.026194,-8.763643,-8.733144,-9.150617,-1.925922,0.646892,7.994010,-8.386340,-3.076971,9.810431,1.118268,3.422909,-8.389742,-5.082881,-7.983090,-4.288386,-2.001213,-9.890809,7.005411,-4.124969,-5.240506,7.394581,8.702814,-0.353727,1.550149,-3.254366,8.402973,-5.841117,2.724742,8.449448,-3.238692,6.170189,-0.608670,-9.259664,-0.454919,0.384477,-3.669673,-6.109600,-4.056640,-4.628585,9.196849,1.346083,-1.327056,-9.285645,-9.076953,1.534773,4.426714,-4.896665,-4.447448,5.662017,9.534234,-0.978479,5.280122,8.377315,9.295713,-9.419932,8.278536,9.679588,0.428589,7.263017,6.940152,8.023863,-1.474053,-2.553761,-8.198258,1.683579,-8.338966,0.163346,5.671849,-9.741823,-2.980372,8.933496,-9.974766,1.482522,-1.776493,8.494079,-0.553001,-8.219930,-4.286125,3.056492,9.472582,-8.594621,-8.212700,5.132160,9.851927,0.103050,-4.544107,5.386576,4.663311,0.553664,1.764527,-4.097880,5.836623,-6.093570,2.727355,-6.602118,3.191450,2.666098,-3.459094,3.705342,-1.287176,-0.910574,4.772380,0.539649,-9.061104,-7.693374,4.153717,6.491871,8.454702,5.809258,-7.506224,9.336428,-6.709728,0.357714,-4.184304,-1.269308,1.227230,6.580191,-6.211602,-0.858265,2.062130,1.741183,9.265415,8.796900,-8.784322,6.547191,-6.522159,-5.720604,4.624335,-8.827675,-5.429737,-8.766526,8.493980,-7.198698,-8.247998,-5.535691,2.091926,5.122944,1.981196,-1.681630,4.138333,-0.583793,-1.091839,-8.357641,-4.291777,8.061031,-6.665653,7.735127,-4.846794,1.843192,-5.857832,-1.846983,5.912953,-3.688322,8.507099,6.595100,-1.764639,-7.907736,-0.670351,9.160078,7.891108,-3.965645,-9.888731,8.594192,2.164645,-1.337332,9.351331,-0.754584,-6.006129,8.315165,7.297311,-4.871132,-4.281278,-3.585482,3.874293,7.180689,8.250073,-5.371394,5.486876,-6.764714,3.252763,-7.734120,1.625766,5.187449,3.078637,9.287988,8.327588,8.767323,7.476256,1.621060,8.781866,5.934949,-5.772159,-8.964413,-0.599981,-0.785440,8.658914,-9.247520,9.046130,-1.240790,-7.849388,4.492756,0.137228,1.695812,3.101666,-2.840087,9.224768,8.507778,7.042646,-9.663287,-1.867036,0.742433,3.637065,-9.971391,-3.231260,-3.090160,2.387162,-9.848455,-1.817170,1.463588,-0.927763,-4.227442,0.316258,5.490280,6.525884,-3.009511,8.203845,-2.301463,4.742026,9.558920,2.652183,-2.412691,-5.495827,-9.007504,-0.641926,-0.136613,3.677247,3.800147,-5.095452,9.439246,-3.806945,4.835627,-9.583303,-1.543735,-1.075726,2.920574,5.081190,-3.905268,-8.772322,-0.079360,-0.070540,-8.329495,2.734903,7.415730,-7.284671,-3.587493,-1.291450,-4.471177,3.335902,6.953763,1.799703,0.013848,-0.538772,-7.240876,-4.112973,-2.192411,9.200229,-8.862420,-5.358172,-3.481460,9.829168,6.500718,-6.771877,-2.933576,-5.419571,6.426954,-9.811522,0.071098,2.050461,5.681713,-7.875862,-0.345298,-9.436580,2.682263,-6.285182,-6.317662,-6.063004,-0.802903,4.123777,-6.874808,-4.919709,7.276000,-1.818817,3.038507,-2.968728,-2.967823,-9.344970,-8.079557,6.482282,6.775087,3.838924,9.039302,6.476221,-4.773868,-2.721299,6.301849,0.167282,6.666397,4.273917,6.254266,-5.084801,-5.874297,-3.497086,7.989717,-0.177729,-9.091547,-7.247716,9.573069,1.717658,6.277429,-5.145611,-5.220523,5.914040,-3.056931,-4.593985,0.503607,6.697009,-9.762472,-8.835878,6.762781,-4.348801,2.766540,-5.622188,3.109571,-6.838636,6.179148,4.906530,-6.034828,-1.504783,7.743541,-6.576404,8.717870,-9.138962,-3.535654,9.337514,-6.986408,8.160554,2.053253,-0.393417,3.965495,8.737038,-0.324958,-7.404562,1.571162,9.937455,2.950733,4.653765,4.897153,-1.463988,3.847339,8.110577,-1.956923,3.571738,-1.802142,-5.761131,-4.899613,9.852188,-2.013557,-7.546409,-2.625388,-0.565322,3.976213,-8.943574,9.067569,-3.668044,-6.689624,-6.282376,-3.628814,-8.019579,-7.179390,-6.337661,-5.679669,7.095401,8.662879,2.080227,8.588293,-9.742355,1.568318,8.684578,3.244468,6.811973,9.991583,-0.337239,4.449102,3.034231,1.032358,4.987127,2.396209,-4.504989,-9.114330,-4.495408,1.696713,-6.536470,9.273623,-2.222587,-4.177071,-1.665559,1.517672,5.362647,-1.480902,-0.287981,7.098100,5.462877,-4.850332,8.583650,8.474602,-1.569638,-2.030883,-8.928086,-7.755463,8.013996,-6.596916,3.446141,-4.242652,1.173036,1.935341,3.684011,9.735884,1.591285,-2.602853,-5.580655,-6.679592,4.282543,5.085436,-2.676167,-1.298863,-8.551028,8.948839,-5.864267,4.766400,-5.805635,-4.627595,4.516959,9.454236,5.737373,8.461060,9.978956,9.219445,0.667549,-5.211617,-1.979289,7.562668,-7.940631,-7.116680,-3.019387,-0.769090,-9.021132,-1.419430,-2.499656,-5.885649,-2.229257,8.132345,0.409291,-8.046231,7.741199,-0.544487,8.832757,3.225980,3.340294,-9.264948,9.866750,-5.633710,4.802981,0.549696,-3.960990,-7.414086,2.728644,4.952508,-3.876835,9.784878,-0.013988,5.673318,5.762418,6.773469,0.310777,0.497828,-5.196547,-9.737372,-6.722576,6.819235,-5.496150,8.361442,0.773149,-6.445692,-4.250057,-3.096851,-1.194592,-8.416591,-0.130186,-9.742426,-0.117127,-0.992371,2.655539,-3.002947,-2.707531,2.941901,3.318157,-2.436548,8.452570,-0.952301,1.088795,-3.992664,1.566019,3.447289,6.553743,8.901695,5.988506,-3.216303,-8.885843,0.454945,6.457392,5.067810,1.430780,9.365634,8.273386,3.161938,-7.600067,-0.908443,-2.605675,3.789008,6.586671,8.408097,-8.669466,3.731994,1.662824,3.542802,9.716101,8.752811,4.218570,9.945424,7.004154,7.718258,2.259606,7.261806,6.807306,3.248292,3.552248,-8.430382,-1.902256,-6.411263,-2.887895,-5.972943,1.719363,-2.938717,8.381307,6.057973,-6.844738,-4.786275,-2.199410,-9.811383,4.032360,-1.598142,-9.827263,-5.420925,-5.426540,-3.558039,7.447974,2.771941,6.034849,5.665690,7.656512,7.388273,4.548345,2.589650,2.982512,8.381459,6.334958,6.952879,-7.134700,2.022108,-1.422898,6.093520,-0.896384,-5.305924,0.182904,-4.891048,-8.044763,-4.390723,-8.645168,2.180925,6.883390,-7.943786,-4.040064,9.750596,5.140582,-7.272427,-5.825241,3.915617,-8.047790,-0.478099,3.023991,-4.790020,-4.273967,4.450992,5.434783,-8.917418,-0.562631,8.950887,-5.573925,1.710581,8.429728,-6.422722,-1.706306,2.733914,4.919425,-3.012736,-2.107646,6.899787,8.625991,0.735046,4.157165,-9.135838,-4.846160,2.947630,-4.585696,9.044394,-0.784819,0.468088,3.998118,5.395580,1.876767,-1.273697,-3.275598,-4.379234,-2.050428,-1.939441,-0.715615,3.596557,0.243230,3.585633,-1.777558,7.376298,-6.657719,5.424756,1.182115,6.180961,-1.495980,5.704299,3.711237,-2.327412,7.028879,3.421056,5.557943,0.065801,6.263673,-3.600984,5.135981,-0.649469,2.628802,1.297783,-4.888622,5.754157,-1.978116,-4.514662,-8.774034,-1.852405,8.859058,3.868368,-2.501511,1.724964,-1.745989,5.476409,-0.132378,2.705134,9.815952,-7.425653,3.313403,-8.791547,-1.049804,9.303856,-7.546109,9.294662,-2.355815,-0.948117,2.650127,-8.278059,-0.092629,4.762231,-3.959470,-7.217503,2.103489,2.742308,-5.359973,7.884610,-5.995561,7.816738,-1.629178,1.858178,-6.905944,1.016029,3.587936,1.771581,-7.824100,-8.472808,3.962927,-3.566083,-5.830527,-0.909746,-1.582897,1.075529,-9.471039,9.185328,5.497203,8.338139,-9.297996,1.975266,2.648577,9.743233,3.448288,-8.083325,-5.120177,-9.453516,-6.972102,5.689423,-4.170475,-0.737050,-3.138656,1.571196,-2.117605,4.826247,3.670192,-1.400335,0.777504,-0.970377,-3.863381,2.155562,-1.721403,3.121527,-7.191391,0.009626,0.624511,-0.988439,1.497591,-8.308327,-3.638886,-7.118561,-2.921971,-6.346346,4.013492,3.447558,9.705065,-9.711833,-1.141694,4.456758,1.001671,4.929050,-1.376854,-7.028958,1.670906,4.513077,-3.298997,9.750505,-8.025525,-6.456516,7.352770,3.346099,-1.172994,-0.760596,2.547167,-4.887437,-9.703341,-7.145147,1.880278,-7.724731,0.652310,-4.017554,1.962809,-6.349176,-5.928995,9.571936,-7.370825,-8.373698,0.779318,6.609867,-0.032314,0.525022,6.859105,6.780532,-3.953866,2.860912,5.494151,4.510474,-8.287501,6.691867,-5.904924,-0.588048,8.282201,2.487401,1.969641,-1.799222,-1.293105,-2.432374,1.450290,-6.464679,8.660829,3.206680,-5.014504,9.494632,-4.667335,6.988514,-9.338580,-2.941602,-2.370675,-3.135874,-5.833511,-1.288140,-5.488030,0.252511,-9.896206,8.587622,4.847447,5.656243,7.165963,-1.540550,7.394884,-9.309907,1.147772,3.552548,-5.045009,6.850810,-1.692127,-4.457196,-8.811058,-0.217691,5.066721,-5.365434,-6.806314,-3.963797,4.439825,-2.003951,-8.668632,-3.186866,0.743364,-1.272814,0.692627,-3.763745,7.254211,-4.444342,-3.448763,-2.295992,-3.881189,1.353973,-5.858344,-3.893988,-8.816182,-8.459484,5.917089,3.320859,2.234950,-3.937635,1.807272,-5.605455,9.529999,4.514256,-1.854182,-8.437015,-4.134883,4.489707,6.737754,-6.257499,-5.314778,6.096578,7.852086,-9.955593,-0.205420,5.367195,-4.645231,-2.582100,-3.398604,4.939561,1.933299,2.768873,9.283331,0.935609,-0.204216,2.123275,-9.768348,-5.572589,2.045910,-7.347295,-1.629597,5.960796,-2.156253,-5.414447,5.177129,3.009974,4.613596,9.557261,9.574410,-1.722537,-0.651389,2.763976,-3.124866,7.769663,-0.222441,1.378626,4.873351,4.601672,-3.136875,5.621065,-0.864199,-1.148154,3.392762,-8.834410,-9.826497,9.956139,-3.310677,-1.074063,-8.224553,-2.996801,7.465325,3.826728,5.688821,-0.369236,3.633944,5.465931,-8.840039,6.068639,5.809368,2.989290,-0.485687,9.281175,0.774557,8.458321,6.157201,-2.040752,0.117749,9.002200,8.330219,-7.215382,6.253640,-7.513125,-3.067741], dtype = "float32")#candidate|7704|(1144,)|const|float32
call_7703 = relay.TupleGetItem(func_498_call(relay.reshape(const_7704.astype('float32'), [11, 13, 8]), relay.reshape(const_7704.astype('float32'), [11, 13, 8]), ), 1)
call_7705 = relay.TupleGetItem(func_501_call(relay.reshape(const_7704.astype('float32'), [11, 13, 8]), relay.reshape(const_7704.astype('float32'), [11, 13, 8]), ), 1)
output = relay.Tuple([uop_7694,bop_7700,call_7703,const_7704,])
output2 = relay.Tuple([uop_7694,bop_7700,call_7705,const_7704,])
func_7715 = relay.Function([var_7691,], output)
mod['func_7715'] = func_7715
mod = relay.transform.InferType()(mod)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7716 = relay.var("var_7716", dtype = "float32", shape = (11, 6, 12))#candidate|7716|(11, 6, 12)|var|float32
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7717 = func_7715_call(var_7716)
output = call_7717
func_7718 = relay.Function([var_7716], output)
mutated_mod['func_7718'] = func_7718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2686_call = mutated_mod.get_global_var('func_2686')
call_7740 = func_2685_call()
call_7741 = func_2685_call()
func_6120_call = mod.get_global_var('func_6120')
func_6127_call = mutated_mod.get_global_var('func_6127')
var_7744 = relay.var("var_7744", dtype = "int32", shape = ())#candidate|7744|()|var|int32
var_7745 = relay.var("var_7745", dtype = "int32", shape = (1, 7))#candidate|7745|(1, 7)|var|int32
var_7746 = relay.var("var_7746", dtype = "int64", shape = (6, 60))#candidate|7746|(6, 60)|var|int64
const_7747 = relay.const([4.320498,-2.809816,0.721970,-8.613153,-4.921370,1.758398,3.389875,-5.229763,6.248086,3.661019,5.023408,-2.050182,-9.785056,8.557325,4.283487,-0.535561,-1.443978,-3.172196,4.621806,6.206203,4.045410,-6.896550,-0.946323,-4.707224,-2.530998,9.458200,5.991483,1.870064,-6.664832,-8.272183,4.836990,-7.672002,1.417430,-9.460189,7.501195,-7.241353,-7.813178,2.986152,0.304562,4.419375,3.826417,9.952062,-6.842319,6.346807,-2.261062,-0.868921,-6.663162,8.790918,5.788998,9.277197,5.883234,3.909843,-7.463143,-1.211693,-8.963431,0.995309,-1.579947,0.059429,-2.220942,8.343886,-0.084628,-9.118203,-8.374260,-2.796209,2.444698,-4.995491,4.990958,6.661275,-4.186059,0.857293,0.768929,3.101696,5.280569,-5.425422,8.931214,-0.067362,6.920284,-2.888027,-8.778473,9.060774,-0.940456,-0.410050,5.262916,-9.402210,-8.778887,-0.379223,-0.346930,3.041068,-6.720964,9.544126,-1.148676,1.686125,4.243566,7.873853,-7.190695,3.566135,9.915299,-8.898412,0.262687,-4.612914,-7.640047,3.921616,-1.925200,8.649535,-7.587646,-7.210423,-4.454252,-4.286624,-6.273001,-7.239279,-4.499582,7.079188,7.607675,-0.847536,-0.872839,-0.055939,-4.177159,-6.728468,3.183045,9.613197,-4.857795,-7.485184,-0.279818,-9.221442,-6.752849,8.249020,0.096966,-4.188989,1.438043,9.738370,-9.807875,-2.694667,-7.315328,1.093643,-8.139602,3.496291,7.460035,-9.911946,9.331245,-3.354442,3.246211,-5.371146,-7.746521,8.674703,-8.418859,-3.172618,7.997553,9.314746,3.976618,9.644324,6.534783,-5.803621,-4.718842,-8.992144,-3.761739,2.080703,7.713168,-0.098020,4.321880,0.354816,-1.590244,-2.889107,-7.219942,3.329677,-8.113880,-8.147568,-1.969296,-9.340075,3.108390,-4.516315,9.556433,6.070818,3.541227,4.122426,2.198532,-8.578472,-2.842893,6.400332,-3.128225,-4.230310,5.171347,6.164290,5.938583,-5.000886,-0.544984,-8.525267,0.141504,-7.164593,0.874321,5.918898,-1.845602,8.491661,-3.236456,-1.022950,1.415716,5.693888,7.436987,-1.510803,1.572804,8.093378,3.468872,2.764495,3.683631,-9.927522,0.330156,5.932584,3.740325,-8.697915,-6.012039,8.636323,4.109104,-2.201108,3.454819,-1.930932,-3.993427,-6.676260,4.120847,-9.655641,-9.840758,-3.047772,-8.650011,0.239364,-2.665735,8.340274,-0.771470,-7.282313,1.777917,-2.787138,-9.071721,1.961916,-5.444864,-3.471699,-4.050324,-2.187515,7.169700,-0.778159,2.906066,-4.445936,-2.944723,-5.515206,-6.877011,-6.049238,0.718974,-7.020486,2.240145,-0.836014,8.369327,-1.984671,5.168865,-6.621904,8.698961,-6.309877,0.407809,-7.216364,-9.127406,-6.721644,5.611208,6.982278,-1.183407,-4.838788,5.157952,7.681200,-5.039245,-5.744777,4.761169,-9.559324,-1.818963,7.694297,6.162932,0.582598,-4.806427,-0.471126,-0.351781,-7.959626,9.044667,8.844479,-7.379292,-4.244250,-1.433977,-5.485151,4.628014,-9.349275,-9.480949,8.885333,4.230560,9.846422,0.377723,8.586724,2.190911,-4.856679,5.573536,-0.232038,-3.382326,-8.127326,1.862619,-4.120768,0.047998,-9.827855,-0.243884,-0.376901,-6.732361,6.434673,9.799550,-2.324288,8.791046,-6.776330,-4.728405,-1.168540,2.475185,7.655905,6.686119,3.534347,-0.378442,-4.371646,-7.836553,-7.413395,3.077184,-1.288491,-6.651412,0.253636,9.553094,-6.384261,-0.519088,-0.903072,1.432938,0.062031,-9.548203,-6.711397,-0.208455,2.427443,5.773418,-6.447767,-2.465399,7.917239,8.865516,-7.028560,-3.201476,-4.067255,4.894739,-8.655738,-1.842671,9.933566,5.885574,9.334858,7.531942,-3.599707,-5.573965,7.985155,6.766098,8.454029,6.739422,3.113142,2.743720,4.272560,-2.200534,2.556191,5.335187,2.552420,-1.854839,-1.561027,-0.067205,-9.940433,4.020425,5.770354,5.634383,5.945462,-9.541636,-9.606916,-8.243021,-6.041395,-3.666952,2.634288,-7.598442,-5.785498,1.235991,-4.643132,2.996597,-8.048559,-9.065963,8.813453,6.136212,1.490288,4.262334,6.808512,1.344884,-6.040879,9.432896,2.605783,9.544188,7.136139,-0.605154,-7.532336,-7.009622,7.597238,-1.151982,-2.748532,5.577073,0.351442,-0.486355,8.685572,-2.559501,0.923049,9.105560,0.853930,-6.262490,-7.637540,1.253095,-4.181499,0.663007,-0.183677,-1.657195,2.603368,-4.843303,-5.827029,8.118969,-0.056093,1.314918,-1.533116,-5.672060,8.604225,-2.325016,-1.599815,-5.261701,8.315427,-5.122390,5.547794,0.867759,-7.972684,1.795391,-9.961507,-7.931183,-9.085285,-8.465961,7.943239,2.662125,2.650858,-6.323359,7.152687,-8.940748,-6.391420,-5.362675,6.857305,1.609560,-8.063784,-1.167098,9.123741,5.539660,-3.900295,-2.563168,4.077821,8.021006,5.875240,-6.352606,-0.231321,-8.986552,8.662956,2.000845,-5.873186,-0.776877,8.599955,5.693981,-6.445895,6.330369,-3.347992,-9.412099,0.148085,-7.024759,2.044249,1.290727,1.380526,-8.182769,-1.008814,1.999213,-9.609744,6.221374,-5.971328,3.054138,-8.321894,6.204869,-5.293237,-7.461617,0.745846,9.644652,7.771562,6.130828,-1.854085,9.457556,2.562525,2.188375,-3.996968,1.444887,1.748378,4.035932,1.895330,-0.682981,-2.381918,7.430894,2.212873,-9.240044,6.119089,0.057587,-0.432664,8.232056,4.854171,1.493148,0.552504,-5.736258,4.101768,-5.021906,-8.689700,6.738000,5.407602,5.585128,6.992044,5.447139,0.968191,-0.236996,3.706600,3.424681,-2.778390,6.994582,9.616309,-0.393604,1.310407,-3.751894,3.919180,8.014684,-8.917628,1.457508,-9.753475,5.192889,3.905679,9.327438,3.656558,1.936162,-1.549698,9.170999,-8.788631,-2.822754,3.576509,8.736516,-7.148393,1.337854,0.574234,-9.329027,-8.917501,2.632954,8.096478,-2.533865,0.549510,-3.056195,-8.997853,-0.052859,7.469112,6.738625,3.312610,1.219057,4.320341,-3.312184,8.217512,-9.566334,-4.934841,4.753722,4.738271,-2.295065,4.655421,-3.204368,3.197288,-6.671101,5.813445,8.002062,4.716518,0.894140,3.769999,6.961026,-7.943090,-6.318231,-3.841852,0.137156,-8.292379,-3.557050,-9.334760,4.602547,8.518136,1.854823,0.377225,9.123907,8.251831,2.790395,9.828097,-3.921829,8.572720,-2.504676,-1.516870,9.344348,-6.463819,4.765627,-9.660119,-3.032241,-1.869139,-7.169779,-1.880473,-5.664109,-3.576705,-9.880819,5.631972,-2.613068,-4.532649,-2.983673,-0.633227,3.347182,2.936611,3.124877,9.430360,-1.072419,0.844779,-3.876061,-7.167777,-2.467473,-0.821096,-2.869154,0.750201,-4.768862,-3.949672,-8.315452,-3.595796,9.628664,-7.465752,2.904729,-3.069428,-3.870687,0.232904,8.116785,2.838613,-9.927624,-0.931103,5.493444,2.511083,8.706825,-3.667879,-8.053716,3.847420,2.578881,1.387279,-0.163668,-2.085346,3.089907,1.422019,4.657697,-5.319111,-0.770859,0.831021,-8.141037,-8.580640,-8.863183,-8.144499,3.229989,-5.927879,0.697307,-8.678105,4.948903,-0.914950,-6.815558,5.339513,6.657652,4.178368,-2.671682,8.586993,-4.916636,4.452365,6.948637,9.958025,2.715834,4.121848,3.568640,-8.969994,-1.193365,-6.103649,-3.362661,-9.713525,0.431138,-7.577412,-8.203790,4.156136,0.620282,0.915810,-1.286268,4.349438,-4.032515,-1.100297,-4.598432,-7.071688,-9.848187,1.301232,-5.492723,-1.791158,-6.198908,-8.025563,-9.285986,1.498671,-6.198391,-2.855248,0.465994,-6.278776,-0.927271,-8.305819,-8.586844,6.456738,7.030399,2.833786,0.110689,3.402567,-7.747422,-4.522964,8.487814,-4.417449,6.165336,-7.244456,2.703880,-7.480702,-5.418015,-5.297559,-6.139307,4.017713,1.930028,7.589983,-0.488442,-2.229739,-9.432035,5.166080,-4.796337,8.187358,9.354814,-5.026967,9.816481,-7.434899,8.049436,-2.792551,8.557210,7.477812,-9.488350,0.059317,-7.179507,-7.501605,-9.122934,-7.490654,2.485408,-9.854474,-4.908127,9.394315,-4.908885,5.008357,3.538543,8.630206,7.922070,3.503154,6.386046,-7.107069,-4.764425,3.232912,-3.438713,5.850780,6.100623,-7.480464,-3.894383,8.650600,-3.134381,9.479686,-8.973977,-2.181065,4.511878,-3.111418,-3.628277,-2.782938,6.885366,0.070290,-3.918341,4.076716,2.771556,2.071338,-3.445209,-0.761165,0.682376,-8.412778,-6.203128,7.510875,-4.762419,-8.768553,-8.134985,6.980060,-7.623454,0.353342,0.721200,8.798219,1.655433,-0.376971,3.703529,-7.586203,-1.504770,6.269347,9.647582,4.414811,-0.147177,-4.324939,-7.492336,-4.689497,-6.507134,2.782361,-2.529159,-8.471110,9.731688,3.774481,6.126491,7.288992,-1.079601,-4.761050,5.848543,3.637282,-7.510838,-1.816575,0.123334,2.536729,0.447554,0.917234,1.738186,4.727250,4.524534,-1.267170,-9.215988,-3.789070,-5.362531,-4.922447,-8.188850,9.113353,4.713726,-8.035474,-4.309668,-7.931902,-6.699088,3.116970,-5.481792,7.426309,-5.656998,-6.655278,0.265074,2.407535,-6.770787,-1.898615,-4.241999,0.309242,2.871660,-5.144717,7.381224,5.520944,4.090657,-2.247712,2.757195,2.553811,0.524968,-7.981055,-3.906075,-8.419274,7.621304,-5.430873,-9.552767,9.486964,8.669297,6.628856,1.622273,-2.516397,0.846780,-1.575436,-4.086848,-7.612830,7.383812,4.885433,7.759457,-0.418224,-7.495936,-1.977275,-0.614495,-4.517864,4.639456,5.772179,0.391808,9.511281,-7.135412,6.479869,2.175568,-2.176428,9.855727,3.846471,7.583917,0.675090,-2.751080,-6.293539,-7.968008,-0.874786,-9.764820,-5.140031,8.478826,-8.918928,1.740862,0.639307,-7.483650,3.114477,6.958089,-0.757748,5.323864,-7.981760,8.424434,-2.038357,1.671832,4.741591,-7.840578,5.350262,-1.515730,3.565111,-8.127344,-9.249841,-7.248011,-1.999591,-1.495129,-2.509332,-8.710932,6.838669,4.663440,7.664966,-8.353450,-0.942716,-8.015467,1.584751,-0.500427,-5.697424,5.397704,3.859407,0.307077,7.310106,-6.896559,7.919626,-2.454656,-7.519843,-8.391500,-1.694341,-5.229197,-2.926530,0.408391,5.787303,-0.650505,-7.939722,4.133998,-8.507696,7.277054,-3.534974,0.351372,-9.964353,6.856185,-7.144103,8.984567,-9.381166,8.383210,-1.862546,-4.481751,-7.218994,-1.327454,-3.974265,-8.856526,-6.060522,-7.748158,0.199272,-8.777675,1.113139,-9.248709,7.968802,5.897932,-3.282325,-5.915614,3.793205,-9.583955,-9.921080,-7.430505,-0.815366,3.013729,-6.344857,-8.226560,5.899774,3.887812,-2.415002,-7.724477,8.560612,2.183446,9.849068,1.266932,9.798436,-8.323509,-4.318084,-7.249133,-6.174563,6.805155,-1.630073,-1.351594,-8.373899,-5.058211,-2.197388,-8.564564,-0.063949,3.306302,-1.999116], dtype = "float32")#candidate|7747|(1008,)|const|float32
var_7748 = relay.var("var_7748", dtype = "int16", shape = (1, 208))#candidate|7748|(1, 208)|var|int16
const_7749 = relay.const([[2,1,8,-9,7,-10,-6,-7,3,-9,6,-2,10,-7,-10,2,-10,5,-10,-9,-10,-8,-1,5,-4,9,-4,2,10,10,2,-4],[-4,-2,-5,9,-8,-4,-6,7,5,-10,6,4,9,6,5,8,10,2,-1,-5,-2,1,9,-7,-5,-5,9,7,-3,-1,-4,8],[9,3,4,2,-6,1,-3,2,-7,9,6,4,-10,10,4,-9,-9,-4,10,-9,10,-4,10,1,2,-3,-5,-10,2,10,-5,10],[3,8,-9,-2,9,-2,-3,-8,2,-3,-6,5,-10,-5,-5,-2,-6,-4,9,6,3,9,-2,10,8,-4,-8,-4,3,7,2,-8],[10,-7,-9,9,2,9,4,-7,-5,-7,-9,3,-8,-10,10,1,2,-10,-1,-5,6,-5,3,1,5,3,8,-6,8,9,5,-7],[9,6,-6,-1,4,3,1,9,1,-8,10,7,1,4,-9,-1,-10,-6,-9,-9,4,2,5,1,-3,-6,2,-1,-3,-9,5,9],[-8,-4,-4,1,4,-5,-7,4,5,3,5,-2,-8,-1,10,10,4,6,6,8,-3,8,7,-9,4,-10,7,-9,3,-10,1,3],[-4,5,-6,-2,4,-10,4,3,-3,-8,7,7,-9,-4,-7,-8,-6,2,4,5,-4,10,4,5,-8,-10,-2,6,-4,-4,7,-3],[-4,9,1,-9,6,-2,-3,-10,1,8,6,9,-4,10,-6,6,-10,-10,-6,-5,-8,-5,-5,6,4,1,7,10,4,3,-7,-2],[4,7,2,-2,-10,-3,-1,-10,2,5,-3,3,8,-9,-6,9,2,-10,9,-7,1,3,9,-7,7,2,-10,9,-10,-1,7,6],[8,-6,-8,-6,-2,-2,-4,-4,4,1,1,-10,-8,7,2,7,-7,-7,-7,-5,3,2,8,-8,-3,6,1,-5,6,-4,-5,-8],[-5,9,-1,-1,-4,2,10,-6,-3,9,6,-2,-7,-1,-9,-5,6,-6,-10,1,-9,-8,7,2,-4,-3,-6,-5,5,-3,6,9],[-2,9,10,-6,7,8,7,1,10,4,-2,8,6,10,-1,-6,-5,-5,-6,-4,6,-6,-3,-4,2,-8,6,10,9,-6,10,-3],[6,2,2,5,-7,1,-8,2,3,-6,9,-3,-7,-9,8,4,2,7,1,2,-5,-9,-9,4,-2,-3,6,9,6,10,10,9],[9,7,-10,-9,3,-7,-8,6,-1,3,8,1,-10,7,7,3,4,8,-3,10,-5,-10,-9,-5,7,8,-1,-9,-1,10,-4,8],[7,3,-2,-5,9,-2,-2,-9,-6,-6,7,8,2,10,5,6,-3,-1,2,-4,1,-9,4,4,6,-8,5,-3,-6,-3,-10,-2]], dtype = "uint8")#candidate|7749|(16, 32)|const|uint8
call_7743 = relay.TupleGetItem(func_6120_call(relay.reshape(var_7744.astype('int32'), []), relay.reshape(var_7745.astype('int32'), [7, 1]), relay.reshape(var_7746.astype('int64'), [360,]), relay.reshape(const_7747.astype('float32'), [1008,]), relay.reshape(var_7748.astype('int16'), [208,]), relay.reshape(const_7749.astype('uint8'), [16, 32]), ), 4)
call_7750 = relay.TupleGetItem(func_6127_call(relay.reshape(var_7744.astype('int32'), []), relay.reshape(var_7745.astype('int32'), [7, 1]), relay.reshape(var_7746.astype('int64'), [360,]), relay.reshape(const_7747.astype('float32'), [1008,]), relay.reshape(var_7748.astype('int16'), [208,]), relay.reshape(const_7749.astype('uint8'), [16, 32]), ), 4)
func_5297_call = mod.get_global_var('func_5297')
func_5299_call = mutated_mod.get_global_var('func_5299')
call_7760 = relay.TupleGetItem(func_5297_call(), 0)
call_7761 = relay.TupleGetItem(func_5299_call(), 0)
uop_7768 = relay.atanh(const_7749.astype('float64')) # shape=(16, 32)
bop_7771 = relay.right_shift(uop_7768.astype('int16'), var_7744.astype('int16')) # shape=(16, 32)
bop_7782 = relay.bitwise_or(bop_7771.astype('int8'), var_7744.astype('int8')) # shape=(16, 32)
var_7789 = relay.var("var_7789", dtype = "int64", shape = (6, 60))#candidate|7789|(6, 60)|var|int64
bop_7790 = relay.greater_equal(var_7746.astype('bool'), relay.reshape(var_7789.astype('bool'), relay.shape_of(var_7746))) # shape=(6, 60)
func_7609_call = mod.get_global_var('func_7609')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_7799 = relay.TupleGetItem(func_7609_call(), 2)
call_7800 = relay.TupleGetItem(func_7611_call(), 2)
uop_7801 = relay.acosh(bop_7771.astype('float64')) # shape=(16, 32)
func_2902_call = mod.get_global_var('func_2902')
func_2905_call = mutated_mod.get_global_var('func_2905')
var_7807 = relay.var("var_7807", dtype = "int8", shape = (1452,))#candidate|7807|(1452,)|var|int8
call_7806 = func_2902_call(relay.reshape(var_7807.astype('int8'), [12, 11, 11]), relay.reshape(var_7807.astype('int8'), [12, 11, 11]), )
call_7808 = func_2902_call(relay.reshape(var_7807.astype('int8'), [12, 11, 11]), relay.reshape(var_7807.astype('int8'), [12, 11, 11]), )
func_7189_call = mod.get_global_var('func_7189')
func_7190_call = mutated_mod.get_global_var('func_7190')
call_7811 = func_7189_call()
call_7812 = func_7189_call()
func_7565_call = mod.get_global_var('func_7565')
func_7569_call = mutated_mod.get_global_var('func_7569')
const_7817 = relay.const([[-1.337518,-6.769164,-4.407410,-3.436947],[8.658094,1.269354,5.599798,7.884929],[-9.284404,8.113029,3.472343,4.671091],[-5.320186,-3.851955,-7.771330,8.657641],[-5.348641,7.795112,-8.842547,2.634479],[-9.321363,-6.637862,6.983645,-2.603875],[4.847338,-2.361554,4.886608,-6.401434],[-5.261160,-0.581765,-7.450756,2.959147],[9.624620,4.751951,0.593213,0.075887]], dtype = "float64")#candidate|7817|(9, 4)|const|float64
call_7816 = relay.TupleGetItem(func_7565_call(relay.reshape(var_7744.astype('float64'), []), relay.reshape(const_7817.astype('float64'), [2, 3, 6]), ), 1)
call_7818 = relay.TupleGetItem(func_7569_call(relay.reshape(var_7744.astype('float64'), []), relay.reshape(const_7817.astype('float64'), [2, 3, 6]), ), 1)
func_7715_call = mod.get_global_var('func_7715')
func_7718_call = mutated_mod.get_global_var('func_7718')
var_7824 = relay.var("var_7824", dtype = "float32", shape = (1, 792))#candidate|7824|(1, 792)|var|float32
call_7823 = relay.TupleGetItem(func_7715_call(relay.reshape(var_7824.astype('float32'), [11, 6, 12])), 0)
call_7825 = relay.TupleGetItem(func_7718_call(relay.reshape(var_7824.astype('float32'), [11, 6, 12])), 0)
func_4008_call = mod.get_global_var('func_4008')
func_4010_call = mutated_mod.get_global_var('func_4010')
call_7826 = func_4008_call()
call_7827 = func_4008_call()
output = relay.Tuple([call_7740,call_7743,var_7745,const_7747,var_7748,call_7760,bop_7782,bop_7790,call_7799,uop_7801,call_7806,var_7807,call_7811,call_7816,const_7817,call_7823,var_7824,call_7826,])
output2 = relay.Tuple([call_7741,call_7750,var_7745,const_7747,var_7748,call_7761,bop_7782,bop_7790,call_7800,uop_7801,call_7808,var_7807,call_7812,call_7818,const_7817,call_7825,var_7824,call_7827,])
func_7830 = relay.Function([var_7744,var_7745,var_7746,var_7748,var_7789,var_7807,var_7824,], output)
mod['func_7830'] = func_7830
mod = relay.transform.InferType()(mod)
var_7831 = relay.var("var_7831", dtype = "int32", shape = ())#candidate|7831|()|var|int32
var_7832 = relay.var("var_7832", dtype = "int32", shape = (1, 7))#candidate|7832|(1, 7)|var|int32
var_7833 = relay.var("var_7833", dtype = "int64", shape = (6, 60))#candidate|7833|(6, 60)|var|int64
var_7834 = relay.var("var_7834", dtype = "int16", shape = (1, 208))#candidate|7834|(1, 208)|var|int16
var_7835 = relay.var("var_7835", dtype = "int64", shape = (6, 60))#candidate|7835|(6, 60)|var|int64
var_7836 = relay.var("var_7836", dtype = "int8", shape = (1452,))#candidate|7836|(1452,)|var|int8
var_7837 = relay.var("var_7837", dtype = "float32", shape = (1, 792))#candidate|7837|(1, 792)|var|float32
output = func_7830(var_7831,var_7832,var_7833,var_7834,var_7835,var_7836,var_7837,)
func_7838 = relay.Function([var_7831,var_7832,var_7833,var_7834,var_7835,var_7836,var_7837,], output)
mutated_mod['func_7838'] = func_7838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7015_call = mod.get_global_var('func_7015')
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7912 = func_7015_call()
call_7913 = func_7015_call()
func_6236_call = mod.get_global_var('func_6236')
func_6239_call = mutated_mod.get_global_var('func_6239')
const_7915 = relay.const([-7.200765,-9.747687,-8.634373,9.268561,-0.592267,-4.077873,-9.908620,-4.028166,-1.396573,-5.020285,-2.712994,8.816511,0.373399,-9.257046,-1.136702,-9.410215,-3.471329,-4.996402,-9.789930,-7.244343,-8.526101,0.534394,-4.478476,-9.485092,-1.615728,2.676004,-4.570759,9.285857,-9.268910,-5.778802,-8.326487,-2.905452,2.087412,0.334564,-8.894744,-9.932152,-6.102533,-6.841267,6.858949,3.646435,1.761016,4.702795,-3.763127,7.244792,-5.618988,5.005658,-8.525244,-4.898037,8.069830,-4.405466,6.443070,-4.760577,-4.688230,-8.011496,9.310367,8.899369,-9.279788,-6.501250,-1.070319,-7.798253,1.830923,5.324990,6.454826,7.195754,0.413114,-1.304227,5.348535,-2.534120,5.304230,6.568252,6.251792,-7.405061,3.067766,-2.927295,-8.155253,3.006196,-1.786359,-9.416794,-7.211536,-2.152645], dtype = "float64")#candidate|7915|(80,)|const|float64
const_7916 = relay.const([[-6],[8],[-1],[-8],[-8],[6],[-4],[3],[10],[9],[-8],[-7],[-10],[3],[-4],[8],[-7],[-9],[-9],[-9],[3],[-2],[-2],[7],[9],[-10],[-5],[-5],[1],[-8],[-2],[6],[5],[2],[-4],[8],[-4],[4],[-7],[2],[5],[2],[-6],[-4],[8],[-3],[-10],[-2],[6],[-8],[-2],[-8],[9],[6],[3],[2],[7],[-9],[-5],[-9],[6],[-5],[-1],[-3],[10],[-7],[-10],[-1],[-9],[4],[3],[1],[2],[-3],[2],[9],[-4],[-4],[1],[3],[-1],[-4],[-7],[7],[-1],[9],[7],[-4],[-7],[-5],[10],[5],[-10],[10],[10],[-3],[-4],[-9],[1],[9],[9],[8],[6],[-6],[-8],[2],[-6],[-4],[9],[8],[-9],[-8],[7],[6],[-5],[1],[-2],[1],[-10],[3],[-5],[8],[5],[8],[7],[-3],[6],[-1],[-1],[2],[-3],[2],[-4],[5],[8],[-4],[4],[-6],[7],[3],[9],[-2],[9],[7],[-4],[8],[6],[3],[2],[5],[-8],[5],[-2],[-3],[3],[5],[-3],[-7],[2],[-4],[5],[-4],[-1],[10],[-6],[5],[4],[8],[-9],[7],[6],[-5],[10],[-3],[8],[-1],[-9],[-3],[-3],[-6],[-5],[-7],[-9],[7],[5],[-1],[7],[-1],[-8],[1],[10],[-8],[-8],[-1],[-1],[2],[-8],[-9],[3],[6],[-1],[10],[-2],[4],[3],[-5],[-7],[2],[-1],[8],[10],[2],[-10],[-6],[6],[-2],[6],[4],[1],[8],[-3],[-7],[-6],[-8],[3],[-1],[-8],[2],[3],[-1],[-7],[-5],[-5],[3],[-6],[9],[3],[-2],[4],[6],[-5],[-10],[-7],[1],[10],[8],[-6],[-2],[-1],[-6],[7],[-6],[1],[9],[-7],[-5],[-1],[7],[9],[9],[-3],[9],[-9],[10],[-8],[-7],[-2],[-5],[-3],[10],[-1],[-4],[2],[-2],[1],[-10],[-10],[2],[10],[1],[10],[4],[3],[5],[-8],[-3],[2],[3],[9],[4],[-9],[-4],[3],[-10],[10],[2],[-9],[2],[-8],[5],[-3],[-4],[8],[-8],[-5],[6],[-7],[4],[-6],[3],[-4],[-6],[3],[-5],[4],[-6],[-8],[2],[8],[-2],[-2],[-8],[9],[-9],[8],[1],[-8],[5],[4],[4],[-9],[4],[1],[-3],[6],[3],[-6],[-7],[6],[-9],[7],[-6],[-8],[8],[-10],[9],[3],[9],[9],[-4],[-9],[-3],[1],[-9],[-3],[9],[10],[-4],[-6],[-2],[5],[8],[-7],[1],[-8],[1],[5],[2],[5],[10],[10],[9],[-7],[-2],[-5],[9],[-6],[-7],[3],[8],[-4],[-9],[-6],[-2],[-2],[10],[-6],[-6],[2],[-3],[-10],[7],[1],[-10],[-4],[8],[-9],[7],[-1],[6],[-5],[-7],[-3],[-1],[-1],[-4],[-1],[9],[-6],[8],[9],[-8],[-6],[2],[7],[-1],[4],[1],[-1],[4],[9],[4],[-8],[-1],[4],[-4],[7],[1],[-10],[1],[1],[-8],[-9],[4],[-3],[3],[4],[-3],[-4],[7],[-6],[-1],[5],[-6],[-5],[2],[8],[2],[-1],[9],[-5],[-8],[-2],[1],[7],[-4],[-3],[6],[6],[-2],[-1],[-10],[-4],[-6],[9],[1],[-10],[2],[1],[-7],[-5],[9],[-7],[5],[9],[6],[-2],[8],[-9],[1],[2],[1],[-2],[-3],[10],[1],[-3],[3],[-7],[5],[6],[3],[8],[-5],[8],[6],[-9],[-1],[1],[4],[-5],[7],[7],[-10],[-8],[10],[6],[3],[-9],[-2],[6],[6],[-6],[6],[10],[-9],[7],[5],[-7],[10],[-1],[1],[-8],[-3],[5],[-1],[-5],[6],[-3],[-9],[2],[-1],[5],[5],[-2],[9],[-7],[-1],[7],[1],[1],[-10],[-10],[-8],[-9],[-9],[-6],[-2],[-6],[-2],[3],[-2],[-2],[-7],[-8],[8],[2],[-8],[6],[-7],[-4],[6],[5],[-10],[6],[-1],[-5],[-9],[-7],[5],[-5],[-7],[-5],[-1],[-2],[6],[5],[7],[-1],[-2],[10],[5],[-8],[4],[1],[3],[4],[-4],[4],[8],[4],[-1],[9],[10],[4],[6],[-7],[3],[5],[1],[7],[-1],[3],[-8],[1],[-2],[-3],[3],[-2],[1],[-4],[1],[-9],[-7],[2],[-10],[3],[7],[-7],[2],[4],[-4],[-8],[6],[-9],[-5],[5],[-6],[-2],[9],[-4],[-10],[10],[-10],[6],[-6],[7],[-5],[6],[-4],[-10],[10],[7],[-2],[-3],[-3],[-9],[2],[2],[-10],[-6],[-7],[6],[-10],[7],[7],[-3],[5],[-7],[10],[-7],[4],[6],[9],[2],[8],[-4],[2],[9],[2],[6],[-3],[8],[-2],[4],[-2],[-5],[-9],[6],[10],[-5],[-7],[3],[9],[-3],[-8],[-10],[-9],[-9],[-3],[1],[4],[-4],[8],[10],[10],[-6],[4],[-6],[3],[-6],[8],[4],[-4],[6],[-7],[-5],[-4],[5],[10],[8],[1],[-5],[-5],[-8],[10],[-9],[-9],[6],[7],[-5],[1],[-7],[-8],[5],[-8],[-6],[-8],[5],[-3],[2],[-8],[4],[4],[-5],[3],[5],[-7],[-9],[7],[-2],[6],[5],[10],[9],[-3],[-9],[-2],[10],[-4],[-8],[2],[-1],[8],[-5],[3],[-9],[5],[4],[3],[9],[4],[9],[-10],[3],[4],[10],[-5],[-7],[2],[-7],[9],[-5],[9],[10],[-5],[-8],[-4],[7],[7],[-9],[-1],[7],[2],[8],[-7],[-9],[10],[-1],[-3],[1],[-9],[-7],[7],[8],[-3],[-3],[5],[-10],[-5],[1],[3],[8],[-3],[-2],[-1],[4],[-1],[4],[4],[2],[-10],[2],[8],[-2],[-2],[6],[-4],[1],[-5],[-6],[6],[-8],[-5],[-7],[-6],[-8],[3],[-10],[4],[3],[-7],[-3],[5],[-10],[9],[-7],[-10],[-3],[7],[3],[6],[-10],[3],[-1],[3],[5],[5],[3],[-6],[-10],[-3],[-1],[4],[-7],[4],[6],[5],[-1],[5],[-7],[10],[-10],[-4],[4],[-10],[-6],[-1],[-7],[10],[6],[7],[-6],[-8],[-1],[10],[1],[4],[4],[-6],[9],[-1],[10],[-1],[-9],[-10],[7],[-6],[8],[-1],[-7],[10],[3],[-9],[1],[5],[3],[4],[-10],[-8],[-8],[-5],[-6],[9],[5],[6],[10],[-9],[-8],[-2],[-6],[-9],[-5],[-2],[-8],[3],[1],[-2],[-8],[-2],[8],[6],[3],[-5],[-6],[2],[-3],[2],[-3],[-2],[-9],[8],[2],[-8],[8],[5],[9],[8],[-9],[-5],[-9],[6],[5],[8],[6],[-1],[-5],[-4],[9],[-9],[-5],[7],[-10],[-8],[-7],[1],[-7],[7],[-8],[-1],[5],[9],[1],[8],[7],[-8],[-6],[6],[9],[2],[-4],[-3],[-3],[-2],[5],[5],[-5],[3],[8],[-7],[3],[-7],[10],[4],[7],[7],[-2],[-2],[-1],[5],[-8],[-10],[-7],[-1],[6],[-1],[-5],[7],[-2],[-7],[8],[8],[-6],[-4],[5],[-7],[-4],[-9],[1],[5],[8],[-6],[4],[10],[-6],[-5],[-3],[-4],[-5],[10],[-10],[6],[5],[4],[-5],[-5],[4],[-8],[5],[-6],[-5],[5],[4],[-10],[10],[1],[-8],[-3],[-2],[1],[7],[-10],[7],[1],[4],[-3],[8],[8],[9],[-3],[8],[8],[-2],[-9],[1],[10],[5],[-9],[6],[4],[-9],[10],[5],[1],[3],[-5],[-9],[7],[6],[-4],[5],[5],[3],[-10],[-5],[-10],[1],[4],[-7],[-2],[-9],[3],[9],[-7],[-5],[4],[-6],[10],[4],[-6],[-6],[5],[-6],[3],[-4],[-4],[-3],[-10],[7],[7],[-10],[-10],[1],[-4],[9],[4],[-8],[-3],[10],[8],[5],[6],[8],[-8],[3],[5],[-10],[10],[6],[-6],[5],[2],[-1],[-10],[3],[4],[9],[-3],[3],[-4],[-1],[-2],[5],[-2],[-5],[7],[8],[-5],[-4],[-9],[-2],[-4],[2],[10],[3],[2],[4],[-6],[-5],[9],[7],[-3],[-5],[6],[-3],[6],[-10],[8],[2],[-7],[-5],[-8],[4],[-7],[4],[-10],[2],[-10],[2],[-8],[-2],[2],[-9],[-4],[-2],[3],[-10],[4],[6],[-5],[-7],[-3],[-10],[10],[8],[-9],[-4],[-2],[3],[1],[7],[-3],[-6],[-2],[-10],[5],[4],[10],[1],[-6],[-8],[1],[7],[-5],[9],[8],[-2],[2],[-9],[2],[-1],[-1],[-7],[1],[-3],[-8],[3],[4],[-3],[2],[7],[-8],[10],[6],[-4],[3],[7],[2],[-4],[-1],[1],[7],[9],[4],[2],[-3],[-6],[7],[1],[-7],[4],[-2],[-3],[5],[9],[-6],[5],[6],[5],[-7],[-6],[6],[-3],[9],[-8],[1],[-8],[3],[9],[-3],[-3],[-9],[-2],[-6],[5],[-6],[6],[-4],[-4],[-3],[1],[6],[-6],[3],[8],[4],[-2],[-2],[7],[3],[-1],[-4],[2],[-6],[-3],[1],[-4],[1],[6],[5],[-9],[5],[-1],[-8],[-5],[2],[-2],[3],[-8],[-10],[-9],[-3],[8],[2],[10],[-7],[-4],[2],[1],[6],[3],[-4],[-6],[-8],[-9],[5],[9],[-10],[4],[10],[7],[2],[-2],[-9],[-6],[-3],[-2],[-3],[5],[3],[10],[-1],[-6],[8],[2],[1],[-7],[-3],[9],[6],[-4],[4],[3],[4],[-9],[-3],[7],[-9],[-4],[10],[-5],[7],[7],[-3],[-3],[-2],[5],[5],[-3],[7],[8],[-10],[3],[-5],[-4],[-4],[9],[1],[5],[-4],[10],[-5],[10],[-2],[-1],[-5],[-10],[-3],[4],[-1],[-4],[-9],[8],[10],[-3],[-2],[-10],[7],[-9],[5],[1],[-6],[-4],[-3],[6],[7],[9],[-6],[6],[-2],[2],[-2],[-1],[2],[-2],[-7],[-8],[-2],[-3],[-1],[9],[10],[5],[-8],[-1],[10],[2],[-6],[4],[2],[-7],[-9],[-3],[7],[7],[4],[5],[-5],[9],[-1],[-4],[6],[4],[-1],[-9],[4],[-4],[-3],[5],[-5],[-6],[-8],[5],[3],[-9],[-6],[5],[8],[-1],[-10],[4],[8]], dtype = "int8")#candidate|7916|(1452, 1)|const|int8
call_7914 = relay.TupleGetItem(func_6236_call(relay.reshape(const_7915.astype('float64'), [80,]), relay.reshape(const_7916.astype('int8'), [1452,]), ), 5)
call_7917 = relay.TupleGetItem(func_6239_call(relay.reshape(const_7915.astype('float64'), [80,]), relay.reshape(const_7916.astype('int8'), [1452,]), ), 5)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
var_7926 = relay.var("var_7926", dtype = "float64", shape = (1248,))#candidate|7926|(1248,)|var|float64
call_7925 = relay.TupleGetItem(func_4132_call(relay.reshape(var_7926.astype('float64'), [1248,])), 2)
call_7927 = relay.TupleGetItem(func_4134_call(relay.reshape(var_7926.astype('float64'), [1248,])), 2)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_7930 = relay.TupleGetItem(func_4212_call(), 2)
call_7931 = relay.TupleGetItem(func_4213_call(), 2)
output = relay.Tuple([call_7912,call_7914,const_7915,const_7916,call_7925,var_7926,call_7930,])
output2 = relay.Tuple([call_7913,call_7917,const_7915,const_7916,call_7927,var_7926,call_7931,])
func_7932 = relay.Function([var_7926,], output)
mod['func_7932'] = func_7932
mod = relay.transform.InferType()(mod)
mutated_mod['func_7932'] = func_7932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7933 = relay.var("var_7933", dtype = "float64", shape = (1248,))#candidate|7933|(1248,)|var|float64
func_7932_call = mutated_mod.get_global_var('func_7932')
call_7934 = func_7932_call(var_7933)
output = call_7934
func_7935 = relay.Function([var_7933], output)
mutated_mod['func_7935'] = func_7935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6319_call = mod.get_global_var('func_6319')
func_6320_call = mutated_mod.get_global_var('func_6320')
call_7958 = relay.TupleGetItem(func_6319_call(), 0)
call_7959 = relay.TupleGetItem(func_6320_call(), 0)
output = relay.Tuple([call_7958,])
output2 = relay.Tuple([call_7959,])
func_7962 = relay.Function([], output)
mod['func_7962'] = func_7962
mod = relay.transform.InferType()(mod)
mutated_mod['func_7962'] = func_7962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7962_call = mutated_mod.get_global_var('func_7962')
call_7963 = func_7962_call()
output = call_7963
func_7964 = relay.Function([], output)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_8036 = relay.TupleGetItem(func_3481_call(), 1)
call_8037 = relay.TupleGetItem(func_3483_call(), 1)
func_3894_call = mod.get_global_var('func_3894')
func_3898_call = mutated_mod.get_global_var('func_3898')
const_8039 = relay.const([-4,6,2,-10,-3,1,4,10,-5,-7,-2,-5,-7,8,-6,4,10,9,-4,-4,-5,-10,-6,10,-9,-4,-8,-9,6,1,-10,1,6,2,6,-7,-3,-9,-5,10,6,5,5,-8,-1,2,-3,3,-2,9,3,10,-3,4,-7,-4,-10,-8,-4,7,-7,-7,3,-2,-5,4,7,3,-2,9,-3,6,-3,10,3,3,8,2,1,8,-5,7,6,-1,7,10,5,3,10,-7,3,-3,-3,-6,-9,4,7,-3,9,3,-7,8,-9,-2,-6,-4,-1,4,1,8,-2,-3,4,-2,-1,-1,-8,-10,1,7,-3,8,9,-7,2,2,10,5,-1,-6,-3,-3,-5,-1,-7,4,1,-5,6,1,-1,-5,8,6,-8,4,-9,-6,9,1,-8,-7,6,9,8,-1,-3,-10,8,-10,8,10,10,4,-5,-7,-9,-10,-10,9,9,5,-8,-4,-2,-5,-10,-10,2,2,-8,-10,7,1,1,5,4,3,-6,-10,-5,1,-9,8,4,9,-10,8,-9,5,1,-9,2,8,-10,6,-1,-3], dtype = "int16")#candidate|8039|(208,)|const|int16
const_8040 = relay.const([-2,-2,2,1,1,9,1,6,6,3,5,10,1,10,4,6,8,-8,-9,-2,-1,6,2,4,-1,-2,2,-10,5,-10,7,4,3,-8,5,3,-3,-7,-5,3,-10,4,6,7,-4,-8,-3,6,8,-8,-4,-8,2,-1,8,2,-6,-10,-8,4,5,1,-8,-2,1,-9,3,-1,5,-9,-6,3,-5,6,1,5,2,2,5,6,5,2,-3,10,-6,2,-10,-4,7,10,8,2,5,1,9,7,-1,10,3,3,-1,-9,-8,-9,3,-3,-7,2,-10,-2,-8,-2,8,-4,-4,-10,2,7,2,-6,-5,5,-3,-6,8,1,6,7,-5,-7,-10,5,4,-1,-10,-1,-6,-9,-3,-2,-2,9,6,6,-8,2,9,9,3,-2,-7,-2,-9,-1,-7,-3,6,8,9,5,4,7,-9,7,-6,-7,-1,-5,-9,3,9,-4,10,-9,4,8,5,3,10,6,-8,9,1,2,-8,5,-2,4,-8,3,-1,2,-4,8,5,-10,-8,-6,2,-8,-4,-10,1,-10,-1,3,-4,5,-1,2,8,3,-2,4,7,-6,4,-1,4,-4,-4,4,-3,6,6,10,-3,-2,1,8,-8,3,4,5,-5,2,5,9,-7,-1,-6,-6,3,-3,2,4,-8,1,1,10,4,-7,-8,-8,5,5,-10,8,9,-2,3,-10,-5,2,9,-3,-4,4,9,6,-1,3,1,7,-3,10,6,-8,5,6,4,6,10,-1,-2,-2,7,6,-9,10,3,9,-4,-8,-8,10,4,1,6,2,8,-4,-9,5,-5,-1,6,8,8,-6,10,10,2,7,-5,9,-3,2,-3,-2,-3,5,-5,-1,8,-1,5,-4,5,6,-2,-5,10,-1,-6,9,7,1,8,-7,9,-7,-7,1,4,-2,-6,3,6,-7,6,2,-4,7,2,8,-10,-6,-8,1,-8,-10,1,8,-7,10,3,-9,4,8,-10,1,-1,-8,-6,3,-1,-6,-6,2,1,1,5,-10,-5,-8,3,4,-6,3,1,-6,8,-7,-8,10,-4,-1,2,-9,-8,-4,4,-6,-10,2,6,-6,-10,1,-3,-5,-3,-7,10,1,-4,-10,3,-9,-7,-6,9,-9,4,-6,10,-7,2,7,-1,9,-5,4,-6,-5,-5,6,-3,-4,-5,-8,-4,10,-9,7,9,-5,-6,4,-3,-5,-10,-2,-7,1,-9,-9,-2,-10,-7,-10,4,1,-6,1,4,8,6,6,-10,-7,4,1,-4,8,9,-6,-5,2,1,-3,-9,8,2,-1,1,-1,-4,2,5,-9,-1,-7,3,-10,-3,9,3,-7,1,7,-6,8,1,9,-1,-2,5,-1,-1,5], dtype = "uint8")#candidate|8040|(512,)|const|uint8
call_8038 = relay.TupleGetItem(func_3894_call(relay.reshape(const_8039.astype('int16'), [208,]), relay.reshape(const_8040.astype('uint8'), [2, 256]), ), 2)
call_8041 = relay.TupleGetItem(func_3898_call(relay.reshape(const_8039.astype('int16'), [208,]), relay.reshape(const_8040.astype('uint8'), [2, 256]), ), 2)
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_8049 = func_5929_call()
call_8050 = func_5929_call()
output = relay.Tuple([call_8036,call_8038,const_8039,const_8040,call_8049,])
output2 = relay.Tuple([call_8037,call_8041,const_8039,const_8040,call_8050,])
func_8056 = relay.Function([], output)
mod['func_8056'] = func_8056
mod = relay.transform.InferType()(mod)
output = func_8056()
func_8057 = relay.Function([], output)
mutated_mod['func_8057'] = func_8057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8153 = relay.var("var_8153", dtype = "uint32", shape = (13, 14, 12))#candidate|8153|(13, 14, 12)|var|uint32
var_8154 = relay.var("var_8154", dtype = "uint32", shape = (13, 14, 12))#candidate|8154|(13, 14, 12)|var|uint32
bop_8155 = relay.subtract(var_8153.astype('uint32'), relay.reshape(var_8154.astype('uint32'), relay.shape_of(var_8153))) # shape=(13, 14, 12)
output = bop_8155
output2 = bop_8155
func_8162 = relay.Function([var_8153,var_8154,], output)
mod['func_8162'] = func_8162
mod = relay.transform.InferType()(mod)
mutated_mod['func_8162'] = func_8162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8162_call = mutated_mod.get_global_var('func_8162')
var_8164 = relay.var("var_8164", dtype = "uint32", shape = (13, 14, 12))#candidate|8164|(13, 14, 12)|var|uint32
var_8165 = relay.var("var_8165", dtype = "uint32", shape = (13, 14, 12))#candidate|8165|(13, 14, 12)|var|uint32
call_8163 = func_8162_call(var_8164,var_8165,)
output = call_8163
func_8166 = relay.Function([var_8164,var_8165,], output)
mutated_mod['func_8166'] = func_8166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6821_call = mod.get_global_var('func_6821')
func_6823_call = mutated_mod.get_global_var('func_6823')
call_8193 = func_6821_call()
call_8194 = func_6821_call()
func_6793_call = mod.get_global_var('func_6793')
func_6794_call = mutated_mod.get_global_var('func_6794')
call_8204 = relay.TupleGetItem(func_6793_call(), 0)
call_8205 = relay.TupleGetItem(func_6794_call(), 0)
output = relay.Tuple([call_8193,call_8204,])
output2 = relay.Tuple([call_8194,call_8205,])
func_8213 = relay.Function([], output)
mod['func_8213'] = func_8213
mod = relay.transform.InferType()(mod)
output = func_8213()
func_8214 = relay.Function([], output)
mutated_mod['func_8214'] = func_8214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_8218 = func_4096_call()
call_8219 = func_4096_call()
func_1381_call = mod.get_global_var('func_1381')
func_1383_call = mutated_mod.get_global_var('func_1383')
const_8232 = relay.const([-5.907079,3.227287,-6.290508,-1.993182,2.076203,-3.955052,-3.575461,5.201976,-0.653680,7.662566,9.400926,-9.645049,3.173634,1.383709,-0.860891,-8.162755,3.086994,6.719847,-3.265417,4.498399,-5.767880,-4.508917,-7.130842,0.037682,-4.463385,3.210556,-9.007047,8.699806,-6.737854,-7.694080,-6.293686,9.910959,-9.376721,8.297886,-2.698403,5.883150,-8.302739,5.186675,8.754052,3.334837,9.136231,4.788675,-1.058755,4.294276,-1.500473,-6.228511,6.219575,-2.596322,-1.818957,-8.962135,7.336926,-8.827008,-3.316479,-8.131947,-7.705161,7.056541,-0.958052,1.113166,2.704317,0.440410,-8.044840,-2.229120,1.012671,-7.163015,-9.638185,-6.903652,-4.788193,8.170628,-9.997776,-5.619197,7.679272,2.906256,0.783116,2.520976,3.465343,-2.018739,-2.582668,1.063111,1.029808,6.137976,4.653650,2.119635,-1.664667,-6.891860,6.350489,-6.733509,-8.987511,-5.554090,-7.819068,-7.841392,1.630017,-2.067398,-1.292158,5.179350,3.503447,3.621178,4.061509,-6.894156,-0.812695,-1.621981,5.773459,-3.902322,-8.642960,2.763055,-2.225291,1.367761,-0.610428,8.949267,7.398031,9.800467,-2.667221,6.235591,8.528042,7.282261,-6.649087,6.686980,-8.917588,6.159130,3.268007,-7.852899,9.597862,6.787876,6.100909,-0.208564,5.346386,5.562667,-1.491969,3.591611,-6.757111,0.801861,9.735010,-1.844154,3.634279,-7.208847,7.429827,-1.265232,-2.258955,-8.027132,7.327906,2.789187,-5.601875,-6.711616,1.326083,9.092629,-7.350164,8.870491,6.702001,-6.410261,3.687052,1.799170,7.207317,4.256384,4.042396,9.795266,-6.158989,-1.086752,7.734824,-1.289420,-0.908315,-2.583992,-4.172316,-9.575648,0.979880,-9.476865,-3.265532,0.854547,-7.737497,3.538666,2.441606,-0.134749,2.324101,-8.106189,0.043228,-1.947802,-0.996120,-0.369711,-7.863281,2.069653,7.011845,-0.836901,6.701885,2.881141,4.740522,-6.864134,3.439440,-4.165667,4.765898,0.449541,9.773733,-9.582082,-4.643087,3.353602,-7.155287,6.010693,-5.186141,8.094158,1.056716,7.278863,0.653217,2.246006,-5.192812,-9.286568,2.955795,-1.224225,7.633173,-9.817368,-8.781368,-3.112044,-8.398620,-4.391367,6.563153,1.714488,2.418844,4.012480,-9.953984,0.746370,2.930012,-8.569907,-5.005006,9.085165,5.100484,5.187261,7.385827,-5.896972,0.445372,5.167575,-0.980325,-4.219802,9.565379,9.480820,-6.035160,4.085639,-6.307124,-7.510398,-1.957732,-7.785284,-8.081032,2.629338,5.231942,6.176035,7.392655,0.660963,3.600716,1.905787,-7.121539,-1.067000,8.745789,-2.438932,8.962418,-4.545520,-7.678557,-4.898463,8.719137,6.119950,7.517446,2.403949,7.345444,2.058421,-2.577876,1.424636,8.326258,-5.577839,5.496965,-9.728793,6.493551,1.938429,4.838007,-8.955918,4.106951,1.059239,4.831456,5.906490,0.122474,3.555428,8.156383,-8.420571,5.150538,-6.123998,3.921466,6.263146,7.432200,8.295216,-5.461141,1.255402,6.146429,8.531174,-5.147013,0.698249,1.235841,5.010380,9.917170,9.252557,-0.819458,-6.099512,-7.390192,4.256551,-0.185454,-3.374998,-0.361086,-8.272355,-2.721307,-3.963604,5.845611,-3.061604,6.349366,4.087205,-2.777511,0.448078,-2.807542,-3.138684,8.240733,4.799756,-8.227125,5.957219,2.785941,-8.928905,4.803437,-6.588217,-0.474775,1.507465,8.317467,8.450834,5.616698,-0.376195,-7.460951,-5.195919,-6.806027,1.255515,3.880974,-6.464266,-3.173338,-4.909818,4.953097,-0.131066,2.798257,2.882086,0.505526,-9.951126,6.231385,-6.430527,-0.263558,-2.934492,-8.151143,7.644329,-4.384280,2.444401,0.315387,-3.620322,-7.406270,-2.867173,-3.354542,-8.582468,-9.410371,-5.591425,-4.639194,9.165409,5.858675,9.465447,4.107223,0.412771,-5.875549,8.589994,-2.735952,0.870870,-9.237403,-5.718455,9.012087,-5.568322,-6.768237,-2.131460,-3.248510,3.174081,3.173425,7.055580,4.637904,-0.182347,3.392848,6.629878,2.743380,8.356329,0.177408,-5.808900,-8.205537,-0.275218,7.310692,3.352063,0.363649,3.158778,-8.179073,6.819505,2.029037,0.168101,2.983603,-8.491295,8.945973,8.547990,2.527619,-1.230359,-0.920709,-6.833681,9.864880,7.121873,-1.971799,8.799373,-2.542680,4.184409,-9.015319,-8.264898,1.763781,-0.127673,-5.727598,1.005127,2.733709,-2.218741,4.838887,7.510768,-3.705049,0.382204,8.779484,0.271145,9.861492,3.696441,-5.756469,-1.609182,-2.136300,-5.264257,-7.916012,-0.091607,2.559917,9.697882,-6.865396,2.154836,-0.440947,8.871176,2.488029,0.607107,6.294754,-8.819813,-2.372839,-5.175477,6.082105,-1.700986,-7.593380,5.808079,9.776183,-5.956231,3.345261,-5.335270,-6.995982,1.646942,2.868041,9.391078,0.854180,-0.024834,-0.251174,-9.212190,2.923582,1.006711,-5.648770,-8.098018,0.929065,0.798575,-9.727726,-5.026526,6.054198,6.317081,-0.706144,-9.315365,-9.070200,-0.420711,0.519242,0.935804,5.191452,-3.918101,6.007103,6.291900,-9.723836,-5.154102,-4.786234,5.413574,-1.417323,-5.080091,4.630636,0.388434,8.406694,-4.440961,-6.363145,-7.766607,-2.924392,4.717710,2.941380,8.608327,0.451175,-8.337625,-8.876182,-9.101401,-6.036083,-3.101961,7.137958,-6.275788,8.240387,0.025335,-2.087334,9.464470,-9.944626,-4.049573,8.094233,1.900582,0.408857,-0.445681,-6.264163,0.388593,-1.011673,-0.524059,5.134056,-4.568209,-0.003872,-4.518422,4.845055,6.991318,9.727235,5.235241,3.316684,5.331918,0.668711,5.290249,-3.889875,-3.508099,-5.319344,-0.606508,7.451859,-2.061793,-1.602891,-9.298040,-4.820279,-8.824479,-2.722422,-7.398026,-1.886598,-6.521420,6.279994,2.306863,-5.022318,-8.308731,1.686080,-7.169533,-6.324042,-8.767993,-3.646286,-4.931823,-9.259814,-5.562077,8.846030,8.812510,-5.558436,6.306917,8.049727,-6.937277,-5.700145,-9.159130,4.063155,2.207465,3.296563,1.445369,-3.510398,-6.362166,-8.037950,6.087250,1.114424,5.033735,0.524256,8.775446,-2.298612,-8.144606,5.705002,-7.605788,-4.661955,-9.128325,8.193639,8.742181,3.911118,-2.470072,-6.281798,6.341838,-2.212029,3.581729,8.012597,-3.397645,-8.833591,6.120389,3.909928,6.275194,8.545461,7.373211,0.990718,-3.857097,-1.342672,-7.743185,6.550822,-3.792648,-3.339558,0.897429,8.098753,7.412086,-5.009190,6.486972,-2.023804,9.081653,-5.926429,-4.291063,1.679540,-1.310358,-0.493169,-5.768303,7.813115,0.050727,8.763852,6.189724,2.668017,-5.913983,7.284569,1.341285,-0.802240,8.848199,-4.103333,-6.098166,3.794107,9.564873,4.417357,5.117669,0.443207,1.946296,9.623349,3.374090,5.904707,-9.143623,2.713066,8.552470,8.955568,-8.942281,-1.812792,4.260021,7.858951,3.460928,0.222185,8.433975,-1.416570,9.064341,-6.303699,-4.089285,-2.289246,-2.037721,-6.821990,-7.366590,5.043898,6.841467,9.375947,7.264254,-5.527372,-7.061939,1.612951,-3.581026,-9.664430,2.536338,-1.308561,-0.815539,-2.241508,-2.451580,-2.750683,-6.112269,5.167685,-2.136185,2.126644,8.224279,-2.101838,2.061232,-6.774686,8.730333,3.847159,4.378791,-4.102317,-4.550898,-8.960715,-2.037251,8.307650,-2.548840,-8.427089,-6.902136,-7.559348,6.965472,1.307263,-1.542242,-6.734589,-0.193553,-1.640926,6.404735,8.151621,-4.394630,-6.274446,8.772098,4.595767,-8.144590,-8.216311,1.813828,8.128112,6.687684,6.066039,-4.933018,-0.890342,0.679988,-9.136753,8.623301,9.620236,6.842669,-6.205449,9.492581,0.514177,-8.183217,-1.259026,-4.144737,-4.696731,-6.355611,-9.188378,-4.893005,2.985254,7.305629,-9.951787,-6.204826,-3.576085,-3.103922,-2.835030,8.924123,3.635541,0.540298,2.289188,0.720046,3.233742,-5.642796,-6.942529,-2.300455,-1.183984,9.135533,8.897096,-9.565690,-3.177960,-8.910105,1.938613,-4.735283,5.204508,-2.417429,3.562618,6.292560,-7.575168,-2.654186,-5.894676,-1.108033,2.020107,1.021287,5.973331,-0.624765,-9.141579,-6.475749,-4.846324,1.526867,-1.509014,0.608343,9.414618,8.843258,-6.663460,1.295374,-0.868210,7.591738,5.520623,-7.754053,0.743522,-6.149018,-6.607504,6.010206,2.705587,-7.898177,-3.860700,-9.314836,-7.183657,7.283434,3.352836,5.290861,1.811509,2.946334,-2.371196,0.060078,4.287506,3.659194,9.291817,-9.998523,3.453673,-5.374307,-5.130443,-2.889585,-4.434999,9.522759,-8.039837,-4.318657,-0.888766,-8.088583,7.072007,-1.352386,-2.091470,-0.503745,-1.249630,-1.817218,-2.592284,6.834110,1.995693,3.082897,-2.390251,-5.878861,-8.374364,-9.347059,-5.469284,2.236408,-8.424194,-8.304876,1.352712,-3.446569,-8.410582,-3.735374,-2.217991,6.913562,9.202674,4.623182,-4.318405,-2.948683,-2.261039,3.051981,6.581807,3.750056,-8.957324,-5.430510,-9.437832,8.423628,-0.679216,7.662946,3.996959,-2.902124,-7.773454,-2.052255,0.037386,3.477697,8.904578,8.624737,5.217933,8.422819,-7.030583,4.580035,-9.033817,5.099219,-1.058165,1.210460,-0.381143,-8.301529,-3.692491,7.009058,1.285695,5.009688,6.703598,-2.924560,4.701188,-8.808018,5.364040,2.567160,-3.822550,-9.678074,8.791748,-9.195225,-3.890211,-4.663838,-2.679485,-8.323705,-6.557168,-4.357657,-3.723181,-2.789935,-4.144384,-8.613774,9.274233,-2.856856,-3.695898,-1.456831,-4.539498,6.642293,-1.168806,8.323904,3.938335,-7.345734,-3.116668,4.326446,6.130519,-7.732706,-5.517237,-5.968939,-9.391551,3.411617,7.011697,2.041957,1.798826,-3.136120,-4.173873,-1.160786,-3.251790,-9.327304,3.858205,9.285088,8.282761,4.608915,-4.878101,1.049616,-5.754283,-6.689860,6.897502,2.543939,-1.755082,-7.200892,-2.814038,5.181712,6.961365,9.012696,1.974990,-1.951126,-3.251537,2.015585,0.818973,-3.369491,2.457423,5.442982,-0.563419,8.198991,9.525219,8.611523,-8.236108,-2.959178,-4.224437,6.934401,-2.114056,1.002114,8.240384,-9.373111,5.239090,-4.872309,3.225090,5.898450,-5.075864,-8.007981,-0.435599,5.008291,-6.664221,0.295458,9.769172,9.038368,-9.341907,7.940256,5.716961,-5.973336,-0.794515,4.565178,-0.253957,5.408461,-0.766652,-9.104106,6.486257,6.139640,9.302533,8.002592,7.488520,1.893765,7.453767,4.405252,-7.400756,8.563065,-8.960802,-7.982633,-8.815987,-1.267007,5.924785,8.880835,-8.075953,5.635242,1.611425,6.963286,2.072520,-9.351521,0.242942,6.432960,3.526791,-3.855911,3.842323,3.578531,-2.068330,-9.036756,-1.891152,-8.628167,1.808438,7.710632,-6.928865,9.282138,7.706957,-8.608274,-6.643226,-4.152523,6.767147,3.709855,2.566383,-2.935987,-3.866309,3.012918,-0.330121,-9.639421,1.999764,0.625591,-4.003417,6.815467,-2.317978,-8.278209,4.668430,9.538818,1.050161,-5.748676,9.998151,-5.449402,4.221840,-7.270292,6.704315,2.353844,-6.869320,8.748225,-3.935411,-9.977483,-5.061084,6.445097,0.524334,-8.543164,9.797094,4.921571,1.753252,1.507289,-1.153389,7.494697,-5.775686,-7.759568,7.406589,2.167107,5.396426,-1.174167,-3.501648,8.274602,-2.042764,-6.704272,-7.620677,-9.653720,6.795001,0.174227,-4.908759,1.342333,7.286010,6.567748,9.397243,-2.693740,2.238970,1.279962,-9.607031,6.236663,-1.237920,4.059201,-1.886162,3.238091,5.740568,0.618916,5.347920,-6.067239,-3.609428,1.894534,-2.467575,-4.008204,-6.089396,4.261638,0.365073,-5.988350,-8.590117,-2.989272,0.558877,-1.449776,-7.646953,-6.082816,-2.447951,3.618319,5.856607,7.152453,-5.720768,6.235945,3.159202,-2.059091,3.570614,-8.660112,-9.269838,-1.141832,-6.992218,-8.243688,-1.929508,-8.299248,1.516598,-6.008920,-4.079451,-5.988581,9.560050,-2.877599,-5.817187,5.031519,9.671326,2.439430,7.102339,8.451317,-6.659638,-0.011063,5.677729,1.879017,-3.104725,8.520672,2.801307,-1.289671,4.316050,1.167807,2.595273,2.178046,3.391970,-4.930056,1.931032,-2.085796,9.412839,-8.326209,-0.189963,3.579005,9.330337,1.341210,-3.156260,-1.320447,-2.579879,9.207159,-3.895157,-5.795028,7.722774,-9.153937,9.118358,-1.715431,-2.887430,0.096358,-4.150328,8.393656,5.401495,3.555077,-6.869946,5.934656,3.877984,-9.735270,1.207298,1.811233,2.704859,5.906279,7.841463,0.554724,3.874507,-4.166566,4.505082,2.366468,-9.068741,-5.428673,-3.845491,-7.502402,-4.965133,-7.584414,4.274417,-2.350601,4.681403,5.904510,3.998162,-0.575411,0.655566,3.093727,6.992983,3.607952,0.490517,-8.430069,2.983248,7.940345,-2.890142,-0.646298,-5.378486,-1.627091,-9.500024,-4.795727,7.829861,-7.731865,4.163407,4.011184,2.021006,-7.627737,4.942920,-5.461600,9.859616,-2.702418,0.654320,-1.830571,-3.231872,-0.532180,-8.244399,-9.876369,9.014949,4.828731,-5.787078,7.817410,2.969815,-1.544581,4.410950,-7.448971,5.803112,-6.472709,0.159856,-2.907849,8.961067,-2.993872,8.856463,8.853881,-9.464841,2.685817,-6.656789,-2.378815,-9.119204,-9.948435,2.549798,1.043407,6.657304,-1.244405,-4.406300,-1.975116,9.464730,9.387574,-0.189081,7.868785,0.143061,8.574797], dtype = "float64")#candidate|8232|(1248,)|const|float64
call_8231 = func_1381_call(relay.reshape(const_8232.astype('float64'), [16, 6, 13]))
call_8233 = func_1381_call(relay.reshape(const_8232.astype('float64'), [16, 6, 13]))
func_4905_call = mod.get_global_var('func_4905')
func_4906_call = mutated_mod.get_global_var('func_4906')
call_8243 = func_4905_call()
call_8244 = func_4905_call()
output = relay.Tuple([call_8218,call_8231,const_8232,call_8243,])
output2 = relay.Tuple([call_8219,call_8233,const_8232,call_8244,])
func_8261 = relay.Function([], output)
mod['func_8261'] = func_8261
mod = relay.transform.InferType()(mod)
output = func_8261()
func_8262 = relay.Function([], output)
mutated_mod['func_8262'] = func_8262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_8292 = relay.TupleGetItem(func_3977_call(), 1)
call_8293 = relay.TupleGetItem(func_3978_call(), 1)
output = call_8292
output2 = call_8293
func_8296 = relay.Function([], output)
mod['func_8296'] = func_8296
mod = relay.transform.InferType()(mod)
mutated_mod['func_8296'] = func_8296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8296_call = mutated_mod.get_global_var('func_8296')
call_8297 = func_8296_call()
output = call_8297
func_8298 = relay.Function([], output)
mutated_mod['func_8298'] = func_8298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7330_call = mod.get_global_var('func_7330')
func_7332_call = mutated_mod.get_global_var('func_7332')
call_8349 = func_7330_call()
call_8350 = func_7330_call()
output = relay.Tuple([call_8349,])
output2 = relay.Tuple([call_8350,])
func_8352 = relay.Function([], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
output = func_8352()
func_8353 = relay.Function([], output)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8356 = relay.var("var_8356", dtype = "int64", shape = (9, 8, 11))#candidate|8356|(9, 8, 11)|var|int64
var_8357 = relay.var("var_8357", dtype = "int64", shape = (9, 8, 11))#candidate|8357|(9, 8, 11)|var|int64
bop_8358 = relay.not_equal(var_8356.astype('bool'), relay.reshape(var_8357.astype('bool'), relay.shape_of(var_8356))) # shape=(9, 8, 11)
func_479_call = mod.get_global_var('func_479')
func_483_call = mutated_mod.get_global_var('func_483')
const_8368 = relay.const([3,2,-4,7,-10,-3,3,-3,-8,-6,3,2,-4,-8,10,-8,1,-9,10,-6,6,-7,9,-1,-3,5,-2,5,9,-4,-1,3,4,-6,7,-5,1,6,-1,8,-6,9,-1,6,8,-10,4,-10,5,-3,7,-9,-3,10,-2,8,-3,-5,-1,-6,-3,-5,-10,-5,2,1,-9,10,3,-6,8,2,10,6,10,-10,10,10,-2,-9,5,4,10,6,1,10,-7,-3,-2,8,-2,-7,-6,4,-1,2,3,-10,7], dtype = "int64")#candidate|8368|(99,)|const|int64
var_8369 = relay.var("var_8369", dtype = "int64", shape = (165, 3))#candidate|8369|(165, 3)|var|int64
call_8367 = relay.TupleGetItem(func_479_call(relay.reshape(const_8368.astype('int64'), [1, 9, 11]), relay.reshape(var_8369.astype('int64'), [5, 9, 11]), ), 0)
call_8370 = relay.TupleGetItem(func_483_call(relay.reshape(const_8368.astype('int64'), [1, 9, 11]), relay.reshape(var_8369.astype('int64'), [5, 9, 11]), ), 0)
uop_8379 = relay.sqrt(var_8356.astype('float32')) # shape=(9, 8, 11)
uop_8389 = relay.atanh(bop_8358.astype('float64')) # shape=(9, 8, 11)
const_8391 = relay.const([[[-2.014230,4.891253,-8.899412,8.046435,-0.697837,7.254506,4.399392,-9.371484,-9.929316,-0.682730,-1.022602],[7.097904,-6.867178,-9.113402,7.209919,-7.225665,5.909587,-9.610400,-6.457779,6.570139,2.591714,-7.598518],[6.412318,5.915315,-0.105671,-2.432512,-9.441857,9.917078,-3.721597,1.954302,5.628022,-4.983419,3.146187],[1.687507,-5.649239,-1.734624,4.330846,0.640202,-0.254334,-3.685579,-8.049117,7.167754,-5.132219,5.188665],[-7.250415,-9.360512,6.251693,-1.811251,3.062310,-0.039008,-6.732313,-7.356388,1.117474,2.292587,-4.285740],[-1.755373,-8.218460,-9.745789,-6.903923,4.359549,-2.409692,-0.350977,-7.079312,-3.008449,-4.189338,-7.895682],[-9.669787,-6.370524,-4.677872,2.013512,2.057711,7.056863,9.268656,-0.652069,-7.543595,-9.340393,-4.741114],[-6.929889,-0.412744,-4.573374,4.304343,7.434315,2.967251,9.031180,5.312637,9.000833,-9.520587,-1.221876]],[[-1.537844,6.346787,7.771158,4.033228,-8.116283,-2.421275,-8.222981,-7.160668,8.404414,4.711875,3.254515],[-3.446240,1.408219,-8.222721,4.911004,2.319376,0.897631,-0.351448,2.632780,-4.803280,0.310867,-9.351293],[-7.359549,9.411485,-9.946360,-9.935687,5.491331,8.328779,-9.311754,-0.406973,-6.526479,2.037731,-3.536841],[-8.600338,8.610811,7.929427,-7.376344,8.349830,-5.092389,-7.802825,3.700840,3.717430,-4.084794,-0.046241],[-7.690447,-1.574683,-8.611566,-0.947827,0.928134,-8.440802,-6.777407,5.476492,8.693931,6.724138,7.433376],[0.067178,-7.869429,4.782226,7.203570,-8.163424,-9.204638,-9.610177,-5.020771,9.969139,-3.686956,7.399447],[7.652780,4.083066,4.258003,0.700538,-2.803439,3.860578,0.072909,3.946988,-1.290248,-2.582994,-5.518878],[-2.378151,1.477464,-4.346114,7.446720,-8.178584,-4.139612,-4.994778,-8.198201,-5.691760,-7.325177,-6.277159]],[[-7.883388,-2.451288,9.870009,7.496886,9.442969,-4.640924,9.935877,-2.523997,-1.028746,-6.431725,-3.778286],[-9.702901,-4.372897,-0.103939,9.978381,-1.621191,-8.031967,-8.952087,0.598847,-3.796409,1.714929,0.997402],[6.820697,-7.537513,5.861005,1.532650,6.185816,-2.614393,-4.355131,-4.103799,6.556092,-9.660530,8.571957],[8.261271,-5.603646,4.933465,2.204121,8.310850,2.609036,-0.782800,-9.204676,-7.045080,-9.108559,9.408275],[7.379605,-3.396742,-1.634814,2.805164,2.447844,-7.900713,-5.443571,-1.210553,-4.452401,-8.631393,8.441147],[-2.984562,-4.215289,0.394560,-3.831911,-7.753653,-7.951853,-6.169490,8.275356,-0.050095,3.781383,-8.870443],[-1.173972,4.968487,-2.300889,-3.842818,-0.294110,5.547013,-4.386406,9.770580,6.359788,-0.679669,-2.372117],[-2.038599,-2.130665,6.932144,7.690435,2.679911,-9.348254,4.697191,5.213764,-3.563716,-9.407341,-9.293424]],[[-3.218927,8.053606,8.089583,9.174320,9.147731,7.704928,-5.069707,7.327373,9.587702,4.591041,9.442783],[-9.692255,1.661133,-4.149446,7.090957,-6.015478,1.220485,4.600362,7.114841,-9.276334,8.374601,8.050765],[-3.868789,7.007501,0.390514,3.657427,8.360946,7.370817,-8.203735,2.935427,4.243160,0.976337,6.126618],[5.106222,3.304969,8.986335,-7.493324,-2.196696,5.941794,-1.171377,7.290430,9.603122,7.827403,9.128124],[2.982671,9.202270,-7.181365,4.745499,-3.033480,-0.232600,-8.663951,-4.340686,-9.537294,-3.402278,-6.654385],[9.838025,-9.914911,8.194115,6.053159,-5.264596,1.082793,7.659194,-4.452184,4.166151,-5.603796,9.639862],[-4.440802,8.761014,-0.397900,-3.745788,-9.706774,-9.430950,3.561504,-8.546165,-5.799833,6.475924,1.344871],[9.752894,2.262571,-9.308882,3.403456,-0.514578,3.570999,-0.630246,6.041667,-0.727045,-6.141175,6.341616]],[[-8.939716,5.854873,-8.007401,-9.301043,6.600555,4.344639,7.808215,-4.301303,7.154029,-9.991099,-9.915199],[3.670901,2.270100,6.389937,-0.475969,4.079157,7.729524,-4.948925,9.962072,0.667516,-4.923157,1.814843],[-7.044152,-3.119160,2.596060,-4.922441,-3.281322,6.502432,1.293416,5.934544,8.213601,8.409288,0.304032],[-1.578848,-6.534837,-5.110784,7.274751,-9.104718,9.355451,3.071597,3.275504,0.637095,2.327925,-4.087569],[0.713888,7.666999,-2.456209,0.781421,-6.729644,9.432918,7.307123,8.132619,7.154459,-3.429054,6.253554],[6.907272,6.246138,-6.535347,-6.664057,-7.581035,-2.266205,-4.530018,-9.935114,3.229284,-7.515323,1.893470],[-3.968271,-2.695679,5.077847,-4.223530,-1.852639,3.853467,-0.054277,6.263224,-1.578332,2.367621,1.520140],[-1.360920,1.523984,-8.870914,-1.020733,-7.891976,-6.414923,-7.704287,0.233761,-7.092511,0.773875,-2.136353]],[[7.678083,-0.924626,3.279733,3.208430,7.080093,-0.531783,5.856645,-6.328225,-6.562296,-9.209711,0.879443],[-8.776450,2.377618,9.284585,0.774794,3.774558,5.602383,-7.507383,4.489253,3.946241,1.593856,0.575817],[-2.475816,-3.530204,-8.362421,0.977577,-6.989572,6.592352,7.183614,-1.265918,-0.395192,0.614051,8.761358],[-1.228658,0.617258,4.717272,2.907414,8.309666,2.828120,-5.290567,-6.767434,3.588953,-6.277348,5.088969],[1.451607,-1.591088,1.049873,3.487066,6.584121,6.774617,5.230129,-4.560366,4.691878,-6.349449,4.993376],[4.961745,5.539574,-5.983943,3.104153,4.902834,2.765528,-4.272915,1.153999,2.399932,9.147703,-1.295696],[-3.437598,8.462011,-0.957810,-4.472825,-0.060835,-9.499481,-3.428248,3.709034,-9.725481,7.777246,-9.013523],[-7.976508,4.856120,0.938058,-4.945514,-4.085349,-4.762930,-3.643972,9.219629,-1.338110,-3.585899,9.238154]],[[-4.197918,-2.380955,3.815474,-0.354207,7.862726,-4.489870,5.797059,6.346473,9.975601,-2.091612,3.271140],[-1.264468,4.385310,0.887172,4.603230,-9.318270,5.194559,-5.821416,-5.892207,5.743255,1.697716,4.188984],[6.110602,-0.870028,-4.690624,-2.592519,-9.754138,-0.444579,9.612289,1.088412,4.777669,-5.600763,3.582591],[6.610165,-3.755470,3.808609,-8.265218,-4.544424,-2.666307,-8.240713,3.292504,-6.535002,-8.117737,2.831669],[-0.510098,-0.617677,-2.151204,5.557877,-8.877323,-2.637810,8.620049,-7.221887,-4.350894,8.756190,-1.389743],[0.729423,-0.986752,3.920570,-7.305841,-7.543237,9.676721,-3.064420,-4.965702,1.569155,4.136780,7.115073],[-5.081393,-3.366370,-1.640246,7.581419,-1.272509,-8.582404,-9.955514,7.344179,-7.721500,-6.953560,-2.398386],[0.468700,-8.129337,0.575942,-0.845583,-9.513452,3.402171,8.152030,-9.792875,-4.378366,7.313310,4.164574]],[[-4.927004,8.173530,-7.685699,-8.459702,-4.150464,2.718124,5.264634,-4.329908,0.936375,-1.012118,-8.902178],[-7.683769,-5.744666,2.841124,6.098621,7.709223,7.159433,-9.501582,-4.163576,-1.176093,6.734411,0.609925],[1.331490,-5.244366,-8.821008,5.929986,6.816308,4.763895,-3.453025,1.905091,5.721254,1.811063,3.738147],[0.039215,-8.478863,7.429404,8.011332,-7.525379,-0.269705,-0.474380,4.390061,1.077163,1.005959,-3.490187],[2.259369,-2.145789,4.016354,7.974006,7.892233,-8.236104,7.913016,0.149531,2.126562,2.718417,9.180777],[-6.633279,0.227858,2.207323,0.619290,-3.351766,7.935397,0.203442,-7.847217,-9.493170,2.021014,9.424738],[-6.237167,-8.662741,7.946800,9.863429,5.469656,3.958917,-6.113630,4.095419,8.645247,-6.205772,-6.521654],[0.160451,0.481299,3.276477,-9.819862,1.077708,3.151130,-4.631032,1.959753,1.372093,-1.332143,5.979321]],[[1.502925,-7.309324,-5.029637,-8.543666,-1.071869,1.561812,7.135679,3.569624,3.403918,-1.653523,-7.656718],[7.193261,-0.108026,-4.824997,-5.384595,7.672027,-7.706788,-6.080010,2.239899,-0.471489,-6.625192,2.388372],[-1.644004,7.071386,5.348623,-8.653318,7.525147,2.623171,8.992248,-2.752099,6.900598,7.643608,5.682551],[-8.194505,-9.789832,-3.436492,-4.210480,-2.439256,-3.898752,-2.144554,1.013339,5.627964,4.679392,3.631926],[-3.038738,-8.991398,4.737922,-6.961696,2.256765,0.205208,8.462942,-4.181079,3.432587,-6.766475,-8.883738],[0.136878,0.368824,-6.321774,9.031650,3.808401,0.307971,2.575875,-6.308589,0.609910,-3.605080,9.458525],[2.830212,4.560415,5.828533,-9.463265,2.639047,3.392371,6.566777,3.155788,6.089396,-3.812878,-7.176118],[-2.909610,2.429350,-3.662932,-2.460521,0.379388,3.187819,9.675920,-7.784816,-0.948676,7.816207,3.088204]]], dtype = "float32")#candidate|8391|(9, 8, 11)|const|float32
bop_8392 = relay.bitwise_xor(uop_8379.astype('uint64'), relay.reshape(const_8391.astype('uint64'), relay.shape_of(uop_8379))) # shape=(9, 8, 11)
func_582_call = mod.get_global_var('func_582')
func_585_call = mutated_mod.get_global_var('func_585')
const_8399 = relay.const([-9.115748,-5.492542,-6.376329,8.046084,-1.739606,-3.740964,-5.148905,-1.951320,8.514709,-1.884272,5.293490,-6.829732,9.014170,-9.032178,2.876348,-6.870478,-5.306805,-2.816120,-5.947858,-7.979956,-9.084654,-1.297590,-6.705154,1.338004,0.265155,0.589733,8.133643,-2.177174,-2.057975,2.106276,-8.840068,-7.077350,8.894602,0.536414,-1.690040,-3.442916,9.071037,4.506303,7.289896,0.348910,9.010135,8.036467,-0.560370,4.435578,1.551037,-7.201498,-8.884180,-9.479642,-5.905456,-2.688677,-4.493317,4.779759,3.286131,3.019850,6.468200,2.022863,4.763497,3.576784,-2.617585,5.351958,-5.639990,5.159178,-8.900799,-4.661731,-4.227421,3.487313,5.783164,-8.813036,2.979260,-0.602702,-7.137188,7.963656,-1.080623,7.558795,8.299207,-4.725081,-4.310402,0.271356,-8.768210,7.049057,-4.031676,2.145357,7.705415,-2.214010,6.517408,-1.594080,1.828442,3.448790,-7.815931,-0.163008,0.018871,9.851318,8.451857,-0.096822,-4.225668,-8.408128,-8.208290,8.641492,2.655399,7.165239,-5.585267,-2.297347,0.507891,8.905109,-7.645514,-4.086413,5.979071,7.251791,-9.952192,-3.206976,-8.350653,8.767821,-3.425824,-3.928942,-6.565739,-6.671243,3.033322,-4.044485,-6.049614,7.555408,-7.509808,4.656801,0.281872,-7.748814,-2.451558,9.946305,9.683813,-4.533232,7.175171,2.757930,-2.583781,-7.886654,-7.019364,-4.249692,-1.096980,5.275874,2.723974,-9.822626,7.945026,-2.335596,1.209481,-7.347259,-6.400693,-5.305080,-0.321046,-4.983463,5.488417,-4.375906,1.530639,8.514606,-7.772969,-4.027185,1.321665,1.888857,0.836287,-1.102945,4.186043,8.814493,9.702191,8.868679,6.891639,-1.771075,-8.689847,-6.545183,-8.012760,6.455855,-2.471362,-8.285355,5.178628,3.059922,-4.891176,0.132298,-1.119491,8.917276,4.682981,9.202925,-0.367479,4.431035,9.980580,1.632885,8.763177,-2.372991,-3.905281,1.269869,-3.295058,7.788881,9.365639,-6.990904,5.709044,7.685094,-6.684439,-1.131579,4.876333,1.652141,8.937958,-8.510555,-5.984318,5.931451,3.558611,-2.648179,1.540406,-0.479567,-8.130887,-2.064728,8.595014,-4.069533,0.127019,-9.930298,3.653913,5.541967,-3.021339,1.596018,-8.304201,-9.119620,-2.716599,-4.098146,-2.702536,-7.234167,5.998901,-4.333416,-0.472059,9.373453,3.610264,-0.008237,3.811997,-2.773259,5.676327,-9.091909,-0.254600,-0.358109,0.148772,-5.378627,8.284046,2.177243,2.693728,9.836603,-6.329105,2.665201,5.930278,-2.629969,5.856084,-3.299426,9.561288,1.635921,0.256479,-1.393398,-1.158408,-8.619993,3.910907,-1.659285,-0.724675,-8.108130,-2.868308,-2.044891,-2.217037,3.333689,4.309392,-7.924818,-7.260437,-1.043981,1.779806,3.694727,4.634615,-0.763891,1.869531,-9.708984,-2.269401,-5.802124,-9.133982,-7.468888,-9.443146,8.053132,-5.486659,-8.842875,8.003254,-7.144191,1.787407,-1.114100,-6.339407,5.388401,4.185952,8.402138,-0.786432,2.322900,-4.054298,6.702924,6.010603,1.472172,7.016525,-4.977148,-6.479420,5.160863,-4.355496,0.741157,-4.634415,-9.722411,-5.483368,-6.633956,-2.147250,7.311591,0.861266,7.009054,0.194618,-0.082760,-9.597986,9.081940,-8.468026,-1.155094,-8.046539,7.132051,-1.294489,8.199222,2.944422,8.570903,7.577558,-9.747308,-0.761181,3.169792,-3.021759,-7.417277,-2.081778,-5.511028,-9.830363,-8.472768,-8.488147,-6.966607,0.213505,7.095048,9.444377,-0.617521,4.634376,4.820314,-3.589242,-0.529020,6.590944,4.725859,-8.094083,-2.264546,-5.691838,-1.756390,-4.563052,3.834886,-0.427121,-9.820073,-5.151561,-4.514308,8.722863,8.834478,-4.412044,6.385081,-1.052987,1.337653,-0.094473,4.823379,-7.832615,7.424726,-1.432090,9.381371,8.732144,-2.487517,-6.828651,5.750715,0.082149,-0.555725,-5.341280,8.010803,-6.786111,-1.461726,-9.201467,-3.432441,6.519359,0.390643,-5.285287,-5.008781,-6.618962,0.893250,8.061188,-4.191285,4.864417,-4.800051,-4.537810,-6.907046,-9.434116,4.222080,2.533060,-1.675535,7.623398,-8.255920,-9.978130,2.211145,-8.291861,9.002559,-5.611350,-3.032924,-4.103746,1.120369,-7.797517,-5.011429,-8.012680,9.618872,9.702851,-5.133159,1.234817,-5.184625,1.145591,-5.650290,2.624386,4.168951,4.687803,9.995510,-4.840805,6.922638,5.348406,-5.192429,1.859575,6.978420,9.631284,-1.216273,-0.764473,-4.244000,-7.059710,3.210871,-0.005568,2.486478,-1.876743,-4.085661,-8.689873,5.120376,6.857924,0.558901,7.905164,8.651456,5.655676,2.649464,-7.837045,8.552497,-5.939985,-2.121296,-3.705456,0.002311,0.158670,7.045817,8.677373,3.686247,-2.510591,5.232489,7.371658,-3.731045,-5.432318,-0.956711,9.521502,-2.200985,0.874948,2.015918,-7.864517,-3.723223,-2.827601,3.494055,8.779330,-8.199774,-6.211513,9.746208,-9.632454,-2.137528,-4.267998,4.076607,-6.769828,6.362012,7.556630,5.208111,6.506013,9.928850,-0.489308,2.269299,9.573466,5.520617,-2.531686,3.798116,4.382591,1.184836,-2.789253,5.421355,-8.235597,-3.643893,4.658279,-7.415657,-4.776098,-7.972354,-6.734680,-8.176896,5.798608,2.002357,-6.624621,-2.816214,-4.186730,9.880376,7.191116,-6.185124,-3.876539,6.798538,-6.941725,-8.354095,6.689496,6.174514,0.726992,4.208556,-1.344489,-9.327165,3.341030,-4.564758,-7.027577,-8.973612,-7.244683,-8.232853,-1.024160,3.379160,4.461623,2.710465,-0.374343,-9.046822,-3.702205,5.728350,3.952034,3.036905,-3.324002,-9.221198,-6.350995,-3.535873,0.460198,9.992950,-0.155113,3.913411,-6.108320,-3.974703,5.026866,-3.000058,-1.597250,-7.013461,2.685191,-5.879238,1.945815,3.715000,-0.704836,1.623842,-6.015852,6.878404,8.263388,-4.858913,1.814001,-2.296808,5.102032,-4.523227,-3.057146,4.584412,-0.072640,-7.777864,9.636973,9.249464,8.022377,0.994596,7.606636,3.017757,4.235427,8.940495,-3.707795,-4.192442,-9.121312,-9.484451,8.876254,1.431694,7.565385,-5.589432,8.185849,-5.703989,-2.692063,-9.106122,-7.767727,-6.519733,0.987760,-2.556474,3.246614,4.498432,7.914684,1.390088,-2.736105,3.307752,-4.505047,-6.855993,3.101170,-7.766931,-1.011057,-9.014625,-0.860501,5.182332,-9.416761,-6.208045,-0.232069,4.645757,4.269103,-9.599025,2.743708,2.376009,0.485336,9.582189,2.568935,-3.795686,-9.393869,-1.818938,1.652262,-6.553615,-4.211106,-0.239598,2.059575,-3.999137,-5.378480,-4.113733,-3.022766,7.322993,7.023975,8.227294,-3.418786,-1.434626,-1.824503,-4.818483,-1.671940,3.737831,4.039793,9.172645,1.488700,0.924488,8.570080,-1.092589,0.514641,7.913608,-6.894216,7.095776,2.606348,-7.945729,1.404700,9.026113,9.319094,-8.125195,-6.787626,4.334887,4.849161,6.924197,-1.402066,2.160853,4.099240,-1.571386,7.212589,4.517117,-5.392380,-0.559417,-1.213910,0.903744,-1.403300,-3.151610,-2.166862,-9.011427,-0.699735,-6.070174,2.653473,-8.881859,-9.826714,8.424790,2.290602,-2.354350,-5.124224,4.398683,6.357972,-8.884207,-0.706598,-5.681241,0.051774,-0.547756,8.059673,-4.906102,-6.101446,8.507275,-5.345702,-6.666543,8.315802,2.134220,0.170402,-0.915838,5.786840,-8.991786,8.407368,-8.105931,-6.641998,-7.513997,9.026113,-7.574112,-3.430990,3.523589,-0.340621,-1.386319,-9.320687,7.957033,-3.163354,-9.784637,6.405512,7.722890,-9.505857,3.207265,-9.505970,-0.999257,-5.397799,-8.800556,-6.005807,8.050104,8.863805,7.117953,7.884551,-5.781424,-5.973679,-0.047314,6.851134,6.048433,0.485837,-7.378184,-7.570319,-4.831568,-9.819563,8.872678,-0.239628,1.429115,-6.888867,3.383927,-9.904290,4.990432,9.623421,-1.827246,0.551143,-7.744071,-8.936596,3.434684,6.791448,3.054799,-1.517799,-7.056984,-7.332173,-9.001949,-9.513968,-2.077347,5.246309,-2.376040,2.046657,-4.120468,-8.513024,-8.327767,3.922547,1.006435,1.010582,-5.552248,-9.365556,-0.882042,6.770541,0.271059,-2.403798,-9.145646,-7.499925,-7.399630,1.110836,-3.289317,0.027366,-4.337127,-8.074333,6.824458,-6.126650,3.017525,8.487484,9.688436,7.632321,-8.302886,9.498965,8.847899,3.769654,0.725761,-1.320473,-5.223532,-6.762100,8.013903,7.296992,-1.528949,-7.629144,-1.690522,9.492195,-9.267569,-8.975786,4.996235,0.854311,5.612552,-3.383097,2.880965,5.818385,9.505956,-6.938507,-8.855078,6.410078,-3.223763,1.867944,2.032845,-6.219112,4.399457,3.253821,-3.607934,4.946115,8.783964,3.476355,0.560188,8.734025,-1.412089,4.314510,7.184273,-7.769280,-0.105747,-3.102431,-3.457047,-6.801921,1.021008,-8.127831,-6.895136,-4.755223,-9.539725,9.648309,-4.317357,-2.427117,-5.906630,8.638479,-8.276940,4.706318,4.148371,4.644823,2.825170,1.829670,0.840585,-2.302251,-3.533991,0.001722,-1.950341,-2.162640,8.610612,-7.654345,-3.884846,2.182202,6.542273,8.732127,-1.470962,-0.494007,-9.659733,8.580451,-2.103538,-9.902883,-7.118724,5.614807,-9.271876,7.637392,-7.288210,4.352110,2.604956,4.307655,-2.562631,-5.770142,1.341895,-6.250159,-2.467174,8.773457,3.032134,1.978098,-4.119866,4.182021,-8.782516,-6.862064,-5.035677,0.484681,2.060931,-4.483489,-4.703925,-9.388180,2.160900,8.990783,-3.554497,-5.964498,-7.886121,9.298974,-6.336335,7.262816,3.881330,0.848311,-9.904013,-4.995000,-5.609836,7.834079,1.701258,-6.005477,-1.891099,-9.940885,8.137936,-5.707735,1.829454,-6.039116,-9.898773,-0.422195,3.833591,6.985797,0.253600,0.988794,-9.618553,-5.786637,8.932524,4.851877,-4.187631,-9.213496,-4.599428,-8.731767,2.638260,-3.928196,-7.018751,5.964928,-1.239361,2.276101,-2.443668,8.565802,3.743058,-0.055883,2.776878,-6.698000,-5.368797,9.778400,-0.800373,-9.926245,-1.199688,1.158013,3.335530,-0.589849,-9.931621,0.393106,7.939394,2.319381,-4.204111,2.478112,5.443552,-2.354590,-0.944721,8.508917,8.840262,-2.243462,-5.034055,-8.884100,4.755404,8.465371,6.983414,-0.057069,-6.088686,3.088811,-7.215029,-8.835900,7.268148,7.236287,-7.947071,-5.107570,-7.716467,1.143325,-2.680110,-7.960203,-5.031837,1.829952,2.202079,-5.381115,-3.594926,-9.350155,-9.771369,-6.109411,9.746309,-5.156622,-4.857824,1.520790,6.917043,7.608571,7.164047,6.236104,-8.614777,2.657652,1.436008,5.942781,4.549727,-6.689466,-7.839298,7.469725,-6.805737,4.004764,-0.194190,4.828288,3.199967,-3.262948,-8.616511,-4.618426,-7.064311,-9.292818,-7.954039,3.678931,-8.918177,4.142360,9.904638,-8.867761,-8.206194], dtype = "float32")#candidate|8399|(1008,)|const|float32
call_8398 = relay.TupleGetItem(func_582_call(relay.reshape(const_8399.astype('float32'), [14, 12, 6])), 3)
call_8400 = relay.TupleGetItem(func_585_call(relay.reshape(const_8399.astype('float32'), [14, 12, 6])), 3)
uop_8402 = relay.acos(uop_8389.astype('float64')) # shape=(9, 8, 11)
uop_8406 = relay.log2(bop_8392.astype('float32')) # shape=(9, 8, 11)
func_5371_call = mod.get_global_var('func_5371')
func_5374_call = mutated_mod.get_global_var('func_5374')
call_8412 = relay.TupleGetItem(func_5371_call(relay.reshape(var_8369.astype('int64'), [495,])), 2)
call_8413 = relay.TupleGetItem(func_5374_call(relay.reshape(var_8369.astype('int64'), [495,])), 2)
output = relay.Tuple([call_8367,const_8368,var_8369,call_8398,const_8399,uop_8402,uop_8406,call_8412,])
output2 = relay.Tuple([call_8370,const_8368,var_8369,call_8400,const_8399,uop_8402,uop_8406,call_8413,])
func_8414 = relay.Function([var_8356,var_8357,var_8369,], output)
mod['func_8414'] = func_8414
mod = relay.transform.InferType()(mod)
mutated_mod['func_8414'] = func_8414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8414_call = mutated_mod.get_global_var('func_8414')
var_8416 = relay.var("var_8416", dtype = "int64", shape = (9, 8, 11))#candidate|8416|(9, 8, 11)|var|int64
var_8417 = relay.var("var_8417", dtype = "int64", shape = (9, 8, 11))#candidate|8417|(9, 8, 11)|var|int64
var_8418 = relay.var("var_8418", dtype = "int64", shape = (165, 3))#candidate|8418|(165, 3)|var|int64
call_8415 = func_8414_call(var_8416,var_8417,var_8418,)
output = call_8415
func_8419 = relay.Function([var_8416,var_8417,var_8418,], output)
mutated_mod['func_8419'] = func_8419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4051_call = mod.get_global_var('func_4051')
func_4053_call = mutated_mod.get_global_var('func_4053')
call_8421 = func_4051_call()
call_8422 = func_4051_call()
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_8448 = relay.TupleGetItem(func_3977_call(), 1)
call_8449 = relay.TupleGetItem(func_3978_call(), 1)
func_7830_call = mod.get_global_var('func_7830')
func_7838_call = mutated_mod.get_global_var('func_7838')
const_8458 = relay.const(7, dtype = "int32")#candidate|8458|()|const|int32
const_8459 = relay.const([[-1,-3,-2,-7,9,2,6]], dtype = "int32")#candidate|8459|(1, 7)|const|int32
var_8460 = relay.var("var_8460", dtype = "int64", shape = (360, 1))#candidate|8460|(360, 1)|var|int64
var_8461 = relay.var("var_8461", dtype = "int16", shape = (2, 104))#candidate|8461|(2, 104)|var|int16
var_8462 = relay.var("var_8462", dtype = "int8", shape = (1, 1452))#candidate|8462|(1, 1452)|var|int8
const_8463 = relay.const([6.718008,2.659271,7.882323,-2.087509,7.227659,5.759750,0.093420,-3.572285,-4.407227,-6.144346,9.334260,0.343721,-3.417734,3.016410,1.073634,3.704359,1.361769,-2.297077,-3.888510,-8.624669,-9.804810,8.053409,8.486567,9.656177,-5.472938,3.225881,-1.565464,1.056119,3.100401,-9.421544,3.172667,7.793967,-9.755747,1.496979,-7.949555,6.110429,5.546965,5.146303,-9.429296,-3.479137,-1.594328,-1.382869,-3.040272,2.991575,-1.040990,-6.006626,-2.251140,-0.705750,-5.921384,6.387629,8.491434,3.342476,2.502096,-8.314371,2.366189,-3.587409,-8.805117,-6.990114,-1.352128,5.982518,-8.996299,-0.224698,0.803644,9.283346,-1.221377,6.251256,2.709722,-9.119200,5.915944,-1.987922,-9.465390,-8.970362,1.973213,4.032267,8.663874,-1.064408,8.573242,-7.758926,1.981004,-1.586619,-6.777374,-7.093982,-1.188708,-1.471094,4.272761,-4.573462,9.901544,-2.221852,5.044150,-8.708318,-7.799988,-5.182965,-7.309445,3.544127,2.639469,8.868081,1.669878,5.438636,6.955408,0.092986,9.340002,-9.076677,-9.612589,2.236659,-4.525304,-7.574831,1.547459,-9.267286,2.306122,5.103906,3.973000,-9.479806,-9.315236,-7.813291,1.311451,-6.074028,3.569503,6.890416,-2.588423,-0.811278,0.876974,5.615156,6.345145,-2.030314,4.859390,0.575743,-5.259222,1.708529,-5.110160,-0.547123,9.488388,-2.332132,1.212375,3.326261,-2.685898,9.253491,-0.772452,-0.645670,-2.812966,5.822264,7.572131,8.307822,-0.193956,-1.098208,-4.444246,3.962615,-4.078664,6.319598,2.175730,7.364880,-0.747874,4.748908,3.034459,-0.322671,-7.264949,-3.837355,2.714780,-5.815156,-9.838948,-9.101927,4.227312,5.044096,6.263010,-7.227798,1.587780,-9.009518,-1.012329,-8.443696,-6.998354,3.539719,-9.042574,-3.206242,6.063124,-3.590916,2.681259,8.434272,-2.935655,-1.847192,1.315933,-7.985021,-0.585490,-8.407915,8.184762,3.653291,8.730392,-4.419196,-3.542993,7.833384,5.717399,5.147321,-0.073645,-7.614113,8.931012,-0.140170,7.900676,5.208593,-5.390121,-4.415360,4.165962,0.719131,-0.992335,-4.019187,-9.884880,5.664430,9.072974,-4.321199,0.570909,-7.392759,-9.038588,4.671110,-9.637494,0.042999,-5.386438,-7.361694,9.688344,-2.924188,3.229913,-8.146883,9.874896,-9.285324,5.717564,-4.312514,7.836665,5.426928,-1.888933,1.871740,-4.476452,0.823305,-8.643528,-6.693085,8.053390,1.314999,5.586633,-3.494156,1.969691,-5.763495,1.935739,3.873172,9.872684,-8.123098,1.675099,-1.664642,9.721915,-5.866190,9.624510,8.161600,-3.941165,-2.836387,9.695583,-6.505355,8.602495,7.878398,1.595119,2.764205,7.362322,-3.232225,8.825770,-2.235464,-0.803008,-7.532302,8.830210,-1.274198,-8.977445,-0.740091,2.443785,5.360395,6.744154,-2.933943,3.532562,0.630184,9.621757,-4.589202,8.274174,6.325563,9.208714,7.185726,-0.464827,-6.255910,-6.868728,-8.166836,6.256932,-9.944114,-7.605484,-5.760381,-6.338531,-4.077907,8.709821,-9.114166,-6.845157,4.782313,9.829879,-3.871537,-1.650394,0.870911,5.967274,9.862189,7.806495,2.867833,-4.963549,8.162258,-9.941933,-5.119649,-3.671439,-6.410872,2.152830,9.770546,-1.375804,-0.236233,-3.346542,-3.312591,0.830540,6.940930,0.643780,-4.641966,-0.088199,0.335037,0.810745,-3.716034,-2.560033,-2.178211,-7.165073,9.927261,-8.015900,-1.953552,6.604673,-2.031852,-2.701628,9.473593,4.924374,9.876379,3.312210,-8.658157,-7.526398,3.770069,0.078772,-1.036674,0.696744,-2.318972,3.986985,-0.360817,3.910035,1.376683,-7.916320,-8.945738,-8.034736,1.187643,-5.138338,5.024341,7.218645,1.161794,-3.888880,-8.908243,9.483510,8.631381,6.531315,4.061435,6.823142,-3.860810,1.103431,8.470589,-0.314204,-2.107675,-9.112200,-9.401186,-6.667245,-4.843188,1.407403,-4.136910,3.959339,-4.268756,4.278724,-6.478620,-1.852850,7.301052,5.470043,-6.422965,3.539295,-9.172949,-8.497323,2.615767,-8.459640,3.120729,4.655457,0.141836,-8.986340,4.684220,1.533423,-4.786167,3.860948,-4.035482,-7.335601,-2.163799,8.624379,1.730235,7.188830,-2.144750,-5.893524,-9.454114,4.880908,-3.586845,3.444817,8.273242,6.638834,-9.048083,6.861609,4.197978,8.125667,-7.352552,-0.630470,-8.674304,-1.589662,-0.198944,5.061041,-7.715800,-5.641113,-5.708227,1.874691,-4.428765,3.614726,0.045680,8.338968,-3.974693,-0.290486,3.069952,-2.165688,7.409240,-7.158360,9.368132,-5.866006,-9.467996,-7.809257,-4.741679,8.586041,6.059565,1.010719,8.441525,1.497021,-8.065760,-6.782244,2.440398,7.215017,-2.064010,-2.098058,6.666969,6.843522,5.479601,-1.576712,9.561657,-7.310870,-8.431080,1.395281,1.060934,0.525722,5.957770,2.677353,-9.698051,7.309724,3.898731,-2.604372,-8.244879,-0.201775,-3.993717,4.696727,-7.565023,-5.964320,3.396167,7.125844,-7.900814,-4.269027,-9.537283,-2.178860,5.593771,2.616712,0.205799,7.595630,-8.422834,7.862794,1.894518,-4.853807,2.275724,-1.539678,1.449392,2.096127,4.477010,3.792068,9.064360,-1.923650,3.258267,9.775295,-0.678155,-6.317357,5.189243,9.056802,-6.783318,-2.021300,-5.341271,-1.150900,-0.343669,9.892951,-7.887911,-3.192828,5.420799,-8.031458,-6.436671,3.504598,-9.603209,4.063443,-1.916094,-4.335790,5.705397,-4.615990,-2.520562,3.524733,-8.383074,-4.464440,2.676726,-2.758613,6.067250,2.580671,5.102507,-0.363938,-7.044500,1.518722,-8.575647,9.267709,-9.136779,1.090620,-4.406618,-0.421623,-8.220045,5.160623,9.223511,-9.423635,-4.623369,-9.184051,-1.537243,-7.854714,6.765802,7.108921,1.818596,0.048742,-6.852722,-2.689088,0.088785,5.646847,6.401015,9.329821,0.547523,-8.895320,3.579663,4.944909,5.573617,-6.280116,3.572949,6.010601,-4.408932,-1.522106,5.730367,0.358697,1.951505,-8.232840,-8.165519,3.913859,8.106568,4.954765,1.639557,8.123091,-9.452879,1.129786,3.674443,4.722603,6.574268,6.837655,-8.513861,6.067714,7.249493,3.337216,0.858539,7.743146,-4.937653,7.545757,8.041949,-3.509569,-9.715963,5.166192,-0.622613,6.472750,6.181512,9.535910,5.939161,8.627505,-1.278576,-5.482060,-1.379837,6.793086,0.673962,-1.463123,9.314625,-5.788397,-8.796758,3.189997,-7.151009,-9.747465,7.532695,-4.571297,-9.084034,-5.979649,-8.616423,-6.879157,-1.170810,3.239403,-0.254043,2.060049,-8.608480,4.276460,0.915345,-1.551461,3.856729,4.004260,-5.722384,7.633298,-9.916150,1.877662,0.627744,6.943259,0.540210,8.783250,-0.682126,9.498513,-2.079563,7.508136,-4.290837,-9.676577,-7.394536,-4.762029,5.532639,4.660170,0.021623,-5.941642,-6.196608,6.444657,-4.181127,4.735704,5.442620,3.629819,3.361104,9.991055,-1.461129,8.286339,-8.536297,2.821964,8.879993,6.652929,-8.927988,0.928082,1.802528,-9.262497,6.522219,-9.119032,5.300710,7.265923,-2.205056,-5.206202,-3.752455,3.812974,9.409242,-6.081870,3.743561,-0.606612,6.023413,-8.541405,-3.220645,-1.990468,-1.980322,-1.789846,-8.885715,-7.260826,-4.645362,-1.013399,-5.381098,9.592234,-9.207187,-5.569275,7.518181,8.545923,6.719834,1.912428,3.680065,1.021545,-8.406825,2.521047,6.693334,1.834161,-2.487993,-7.975381,2.083893,-0.789348,8.076991,2.491945,5.432641,7.341774,-1.828040,-5.584951,-8.473517,8.335006,8.525259,-5.629992,-4.637203,8.310952,6.472063,1.228374,1.670733,-9.550274,3.031760,-5.087524,7.235889,9.920095,-2.012275,4.178225,4.279415,-1.692131,0.841400,-9.233906,-7.220319,-0.562642,9.870448,4.999314,5.219906,-4.278149,6.818068,-1.998102,-3.933652,0.741739,3.784594,-7.524570,5.216813,-1.295370,8.857000,8.171382,-8.745729,2.689645,2.412946,-5.782970,-3.992028,4.296457,3.550803,-9.271470,0.885199,1.056929,-5.534129,-9.598204,-3.295333,-3.996013,6.389302,7.658879,7.551769,2.469999,8.818856,-5.025589,-2.453078,-1.216332,3.260532,-2.949551,-7.401586,2.399450,7.373416,-5.089229,-5.473374,6.144720,-6.241787,3.344641,6.490235,6.365863,4.860207,-7.116281,2.586567,7.468963,-4.756301,-8.455348,4.044853,0.746148,7.471503,-2.655416,0.699618,1.186764,0.881091,7.955231,5.841719,9.762749,-3.069664,2.638183,-6.001620], dtype = "float32")#candidate|8463|(792,)|const|float32
call_8457 = relay.TupleGetItem(func_7830_call(relay.reshape(const_8458.astype('int32'), []), relay.reshape(const_8459.astype('int32'), [1, 7]), relay.reshape(var_8460.astype('int64'), [6, 60]), relay.reshape(var_8461.astype('int16'), [1, 208]), relay.reshape(var_8460.astype('int64'), [6, 60]), relay.reshape(var_8462.astype('int8'), [1452,]), relay.reshape(const_8463.astype('float32'), [1, 792]), ), 12)
call_8464 = relay.TupleGetItem(func_7838_call(relay.reshape(const_8458.astype('int32'), []), relay.reshape(const_8459.astype('int32'), [1, 7]), relay.reshape(var_8460.astype('int64'), [6, 60]), relay.reshape(var_8461.astype('int16'), [1, 208]), relay.reshape(var_8460.astype('int64'), [6, 60]), relay.reshape(var_8462.astype('int8'), [1452,]), relay.reshape(const_8463.astype('float32'), [1, 792]), ), 12)
func_7252_call = mod.get_global_var('func_7252')
func_7255_call = mutated_mod.get_global_var('func_7255')
var_8478 = relay.var("var_8478", dtype = "float64", shape = (80,))#candidate|8478|(80,)|var|float64
call_8477 = relay.TupleGetItem(func_7252_call(relay.reshape(var_8478.astype('float64'), [80,])), 2)
call_8479 = relay.TupleGetItem(func_7255_call(relay.reshape(var_8478.astype('float64'), [80,])), 2)
output = relay.Tuple([call_8421,call_8448,call_8457,const_8458,const_8459,var_8460,var_8461,var_8462,const_8463,call_8477,var_8478,])
output2 = relay.Tuple([call_8422,call_8449,call_8464,const_8458,const_8459,var_8460,var_8461,var_8462,const_8463,call_8479,var_8478,])
func_8490 = relay.Function([var_8460,var_8461,var_8462,var_8478,], output)
mod['func_8490'] = func_8490
mod = relay.transform.InferType()(mod)
mutated_mod['func_8490'] = func_8490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8490_call = mutated_mod.get_global_var('func_8490')
var_8492 = relay.var("var_8492", dtype = "int64", shape = (360, 1))#candidate|8492|(360, 1)|var|int64
var_8493 = relay.var("var_8493", dtype = "int16", shape = (2, 104))#candidate|8493|(2, 104)|var|int16
var_8494 = relay.var("var_8494", dtype = "int8", shape = (1, 1452))#candidate|8494|(1, 1452)|var|int8
var_8495 = relay.var("var_8495", dtype = "float64", shape = (80,))#candidate|8495|(80,)|var|float64
call_8491 = func_8490_call(var_8492,var_8493,var_8494,var_8495,)
output = call_8491
func_8496 = relay.Function([var_8492,var_8493,var_8494,var_8495,], output)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mod.get_global_var('func_8352')
func_8353_call = mutated_mod.get_global_var('func_8353')
call_8523 = relay.TupleGetItem(func_8352_call(), 0)
call_8524 = relay.TupleGetItem(func_8353_call(), 0)
func_5929_call = mod.get_global_var('func_5929')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_8530 = func_5929_call()
call_8531 = func_5929_call()
var_8543 = relay.var("var_8543", dtype = "bool", shape = (6, 15, 6))#candidate|8543|(6, 15, 6)|var|bool
bop_8544 = relay.bitwise_xor(call_8523.astype('uint16'), relay.reshape(var_8543.astype('uint16'), relay.shape_of(call_8523))) # shape=(6, 15, 6)
bop_8547 = relay.bitwise_xor(call_8524.astype('uint16'), relay.reshape(var_8543.astype('uint16'), relay.shape_of(call_8524))) # shape=(6, 15, 6)
output = relay.Tuple([call_8530,bop_8544,])
output2 = relay.Tuple([call_8531,bop_8547,])
func_8561 = relay.Function([var_8543,], output)
mod['func_8561'] = func_8561
mod = relay.transform.InferType()(mod)
var_8562 = relay.var("var_8562", dtype = "bool", shape = (6, 15, 6))#candidate|8562|(6, 15, 6)|var|bool
output = func_8561(var_8562)
func_8563 = relay.Function([var_8562], output)
mutated_mod['func_8563'] = func_8563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5769_call = mod.get_global_var('func_5769')
func_5771_call = mutated_mod.get_global_var('func_5771')
call_8609 = relay.TupleGetItem(func_5769_call(), 2)
call_8610 = relay.TupleGetItem(func_5771_call(), 2)
func_5494_call = mod.get_global_var('func_5494')
func_5498_call = mutated_mod.get_global_var('func_5498')
const_8622 = relay.const(2, dtype = "uint64")#candidate|8622|()|const|uint64
var_8623 = relay.var("var_8623", dtype = "uint64", shape = (39,))#candidate|8623|(39,)|var|uint64
var_8624 = relay.var("var_8624", dtype = "int64", shape = (495,))#candidate|8624|(495,)|var|int64
call_8621 = relay.TupleGetItem(func_5494_call(relay.reshape(const_8622.astype('uint64'), []), relay.reshape(var_8623.astype('uint64'), [3, 1, 13]), relay.reshape(var_8624.astype('int64'), [495,]), ), 2)
call_8625 = relay.TupleGetItem(func_5498_call(relay.reshape(const_8622.astype('uint64'), []), relay.reshape(var_8623.astype('uint64'), [3, 1, 13]), relay.reshape(var_8624.astype('int64'), [495,]), ), 2)
output = relay.Tuple([call_8609,call_8621,const_8622,var_8623,var_8624,])
output2 = relay.Tuple([call_8610,call_8625,const_8622,var_8623,var_8624,])
func_8627 = relay.Function([var_8623,var_8624,], output)
mod['func_8627'] = func_8627
mod = relay.transform.InferType()(mod)
mutated_mod['func_8627'] = func_8627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8627_call = mutated_mod.get_global_var('func_8627')
var_8629 = relay.var("var_8629", dtype = "uint64", shape = (39,))#candidate|8629|(39,)|var|uint64
var_8630 = relay.var("var_8630", dtype = "int64", shape = (495,))#candidate|8630|(495,)|var|int64
call_8628 = func_8627_call(var_8629,var_8630,)
output = call_8628
func_8631 = relay.Function([var_8629,var_8630,], output)
mutated_mod['func_8631'] = func_8631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8056_call = mod.get_global_var('func_8056')
func_8057_call = mutated_mod.get_global_var('func_8057')
call_8658 = relay.TupleGetItem(func_8056_call(), 4)
call_8659 = relay.TupleGetItem(func_8057_call(), 4)
func_2993_call = mod.get_global_var('func_2993')
func_2997_call = mutated_mod.get_global_var('func_2997')
var_8676 = relay.var("var_8676", dtype = "uint16", shape = ())#candidate|8676|()|var|uint16
var_8677 = relay.var("var_8677", dtype = "uint16", shape = (60, 14))#candidate|8677|(60, 14)|var|uint16
const_8678 = relay.const([-7.321253,0.907258,0.188555,3.465250,6.307753,-6.773078,8.124023,-4.177687,8.233501,-1.613090,-1.898371,-2.815176,-5.656073,-2.307773,8.283522,-6.498728,-0.995809,-9.916335,9.755735,-2.830957,-3.916828,8.684351,1.119902,-5.328635], dtype = "float64")#candidate|8678|(24,)|const|float64
call_8675 = relay.TupleGetItem(func_2993_call(relay.reshape(var_8676.astype('uint16'), []), relay.reshape(var_8677.astype('uint16'), [15, 4, 14]), relay.reshape(const_8678.astype('float64'), [12, 2]), ), 1)
call_8679 = relay.TupleGetItem(func_2997_call(relay.reshape(var_8676.astype('uint16'), []), relay.reshape(var_8677.astype('uint16'), [15, 4, 14]), relay.reshape(const_8678.astype('float64'), [12, 2]), ), 1)
func_3481_call = mod.get_global_var('func_3481')
func_3483_call = mutated_mod.get_global_var('func_3483')
call_8683 = relay.TupleGetItem(func_3481_call(), 0)
call_8684 = relay.TupleGetItem(func_3483_call(), 0)
func_6039_call = mod.get_global_var('func_6039')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_8695 = func_6039_call()
call_8696 = func_6039_call()
func_6236_call = mod.get_global_var('func_6236')
func_6239_call = mutated_mod.get_global_var('func_6239')
const_8701 = relay.const([-5.542682,-0.633748,-3.819499,6.991483,3.376735,9.120755,-6.958981,-0.344264,1.429747,-3.938311,-1.165371,-6.962011,-9.648850,-1.387494,0.846092,-2.361116,-8.407398,-6.067353,-6.804731,2.400828,8.731322,4.166177,8.477190,1.746146,-8.156874,3.387735,-9.035482,-9.423623,0.192446,-1.959463,-3.387628,-9.723534,-8.991753,-8.315652,-7.011453,-5.805371,-3.989355,-8.691774,-6.349823,-9.483758,4.941431,6.319031,2.040913,-3.249105,-9.234718,4.274905,-5.768736,3.829102,-9.273000,2.044555,-3.866502,-9.642874,-6.488618,-9.358074,-8.189174,2.117679,-0.920390,9.903663,-9.628810,-1.511086,3.005943,7.382151,6.384862,-1.885568,-0.495422,2.193957,8.847639,8.270633,-7.615730,-3.123243,-6.763212,-2.616332,4.297813,-4.178133,0.016094,-2.347197,-5.237752,-6.070913,8.398493,-6.401513], dtype = "float64")#candidate|8701|(80,)|const|float64
const_8702 = relay.const([[2,-9,2,-9,9,-8,-7,5,-3,-3,-6,-9,-6,6,4,7,5,-10,-8,-5,9,10,-6,3,3,6,-5,-6,2,4,-7,4,9,-8,5,7,-9,-9,1,-4,-8,-6,9,-5,-3,9,-1,3,-8,-10,8,-8,-6,2,9,-4,10,9,1,2,-4,-5,5,9,-10,-8,-6,-5,-3,10,5,-8,-1,6,-2,5,1,-3,7,-2,10,-5,-8,9,-7,5,2,-9,-2,-6,-7,-2,-10,-7,-6,-3,-10,-3,7,2,-10,8,-10,-6,3,-1,-2,9,8,8,-6,10,-9,8,6,2,7,-9,-6,-1,6,1,5,-9,-7,-8,-10,-3,-3,5,-1,7,-6,4,1,2,7,5,-3,-6,-3,-7,5,2,-9,9,-3,-7,-3,2,8,1,-7,-7,5,5,8,-1,-10,-4,9,8,-10,-2,7,8,9,-1,8,-9,3,-10,-3,-5,3,3,-3,-5,-7,-7,-2,10,-4,8,-10,6,-10,-4,9,-8,-1,6,4,-8,-10,-5,-1,6,5,9,10,9,-2,-2,4,-5,3,-8,5,-5,-4,9,-5,-1,8,8,-7,-7,9,2,-1,6,-8,-10,2,-8,-8,-4,-4,5,-6,2,-9,-2,2,10,1,-9,2,-2,5,-3,-8,7,-1,-6,5,-10,-8,-3,-8,-6,-8,-8,2,-7,1,-3,-6,-3,-3,5,8,4,-10,8,7,9,-9,-8,-6,-2,-6,5,3,10,-8,6,2,4,5,4,-8,-1,-7,-9,-5,-9,4,-2,2,7,-9,-6,2,-7,-5,-3,1,9,-3,2,-9,-7,-4,2,-3,4,1,-6,-1,2,-5,7,8,-5,-6,9,7,10,8,-5,-2,-6,-10,-8,5,-5,6,8,9,7,10,3,-3,-1,5,-4,7,-2,10,6,-1,-8,4,-2,-9,8,-4,-1,2,-10,7,5,-1,1,-6,-1,-9,-3,6,3,2,-9,4,7,-9,4,10,2,-6,-7,1,7,-8,2,-6,3,8,-6,9,10,-10,-6,6,2,-2,-2,6,2,10,1,-8,-3,4,9,-5,-3,-5,-3,-8,1,-5,-2,4,8,5,1,-2,2,-6,-9,-1,-3,-3,5,5,-3,1,-3,7,-1,1,-8,6,8,10,-2,2,-7,-6,-8,10,-3,-7,8,-8,-8,8,-1,-5,-8,-8,6,-8,7,-5,4,6,-8,4,9,-2,-2,-3,7,-1,1,-3,-9,9,-4,-1,-2,6,2,-4,1,-7,6,-5,6,-6,-5,-5,10,10,-10,2,2,2,7,4,-1,10,-1,-10,9,5,7,-10,-5,2,-5,-9,-4,10,6,9,7,7,-4,-6,-5,9,-10,-2,1,-2,10,-3,2,-6,-9,8,-4,-5,-3,3,1,-1,-3,8,7,-10,3,1,-7,6,4,4,-10,-8,10,-3,3,4,9,10,3,-4,1,2,4,4,3,-8,6,7,7,-9,-8,-8,6,-4,6,-7,-5,7,-8,-7,-8,3,-1,2,-2,10,-5,-6,4,1,-8,-9,7,2,8,6,6,-1,-10,5,-5,4,3,2,10,9,4,-2,-7,-6,-6,2,2,9,8,7,-10,7,9,-3,3,-10,4,-7,10,6,8,8,-3,3,10,7,1,5,3,10,2,2,5,8,5,-9,-2,-4,-3,-6,-8,-7,9,8,2,8,9,-1,-3,8,-3,-2,6,-9,2,-4,-2,-9,2,3,-5,-9,2,1,-9,3,7,-8,-1,4,4,-4,-10,7,10,6,-2,-2,-5,2,-1,7,-2,3,-1,7,-6,4,-5,7,-1,-3,-10,-9,-9,10,-6,9,9,1,8,7,-10,9,-10,-1,1,-7,-10,-7,-7,-8,-3,3,9,-4,-4,3,2,7,10,4,-3,-2,9,-9,-6,1,6,-3,-10,3,10,5,-10,3,-4,1,9,-10,5,-5,10,2,10,10,4,3,1,-5,4,-1,6,8,9,6,-1,5,-6,5,2,-7,9,10,2,1,3,6,5,-7,-4,-8,-3,-4,10,7,5,8,-8,1,6,-7,3,-10,-9,-5,-1,6,6,5,9,7,9,-5,-4,8,10,10,-1,6,-1,-3,-3,-8,-6,4,8,9,-7,-6,-3,-2,4,-6,6,4,-2,10,5,6,-1,-9,2,-6,-2,-3,-9,-8,8,-7,-6,10,10,-5,7,6,-4,9,-3,-6,-9,10,3,-10,-1,-5,-2,9,6,6,-5,-3,9,6,9,7,-10,-8,4,-6,-9,-6,-10,2,8,1,-2,4,-8,-5,2,-9,-8,5,-6,-1,-4,5,-9,-9,-7,-2,-7,-10,7,-6,-7,1,-1,-9,7,-4,-6,-4,8,-4,4,-3,4,-7,-9,2,-7,3,-1,-7,-2,-9,1,-3,-7,-3,-5,-3,10,-2,5,6,8,10,-2,8,-5,4,2,-7,6,-3,8,2,8,-8,-1,-4,4,10,8,-1,7,-1,5,-2,-9,4,3,-3,3,3,-6,2,-9,-5,2,-2,-3,10,2,-1,-8,-6,2,-1,3,-8,1,8,-2,-8,10,3,-4,1,8,-5,-8,7,-10,-4,2,-1,-2,4,-1,8,4,-7,6,-2,-2,1,6,10,6,-9,8,3,9,3,2,3,5,-4,-8,7,1,-9,-6,7,3,-2,5,10,-5,-6,-6,-4,-1,-4,-5,8,-9,-7,6,-6,-9,1,-6,-10,5,9,-6,-4,3,7,-1,6,-2,4,6,-10,-8,8,5,6,-5,3,10,-8,9,1,-10,9,-1,-3,-1,-1,-7,5,-7,2,-6,3,4,8,-9,-3,-7,3,3,4,-1,7,2,-10,2,10,8,-3,5,6,-10,4,-1,-5,5,2,-4,5,-10,-4,-6,-10,8,-7,-3,-8,3,-10,1,3,-7,-1,2,5,-1,-2,-5,-1,6,-9,-2,1,1,2,-9,5,7,-6,-3,1,-2,-1,7,-4,-10,1,-2,-7,-8,-4,-1,-4,6,-9,9,-3,5,1,-5,-7,6,5,2,10,1,6,4,2,8,-8,-1,9,4,10,-5,-4,-4,-10,1,6,-5,-3,2,6,7,6,-5,-6,7,8,-4,4,1,4,-3,5,-3,-6,6,-5,-7,2,10,-1,-5,-10,1,-7,-5,6,5,7,-10,3,4,-8,10,3,8,-8,4,4,-1,10,3,-5,5,-6,-6,10,10,-3,8,2,-1,-10,8,2,4,5,-6,-8,6,-6,5,-2,-4,5,10,-9,-8,6,3,-5,-10,4,5,-6,8,-3,10,7,-2,-5,2,3,-2,-5,-9,-2,5,4,10,10,4,10,-9,-5,1,-3,-5,-2,7,2,10,-6,9,-4,2,6,5,7,3,5,3,5,-6,6,4,3,1,-10,1,-9,6,-8,-1,9,6,-6,-3,8,-7,5,2,9,7,-6,-1,-1,2,2,-4,-5,-6,-1,3,-10,-6,6,-3,3,-2,10,6,4,1,-1,-8,5,-9,-3,-10,5,-8,-5,-3,10,-9,-3,-2,-3,5,-7,-10,7,3,-4,-4,8,-9,4,-1,-9,5,-3,1,1,10,8,-2,-1,-8,-7,-3,6,-6,-4,-5,7,-7,8,-8,3,-6,-10,-10,3,-6,-10,-5,-1,-7,10,-9,1,-1,3,7,-9,-1,-1,-2,8,-7,8,-7,5,-3,-5,3,-8,2,-4,-9,1,-4,2,-1,5,-1,1,10,-3,2,5,1,-2,5,3,10,6,8,-9,10,-8,7,-10,-7,9,-10,-7,-8,-5,4,6,4,8,-10,3,-3,1,-10,6,-6,9,1,-9,4,1,6,1,-7,-1,10,-9,5,-2,2,4,-6,6,-8,8,2,9,-5,5,-9,-3,2,-1,-1,-4,2]], dtype = "int8")#candidate|8702|(1, 1452)|const|int8
call_8700 = relay.TupleGetItem(func_6236_call(relay.reshape(const_8701.astype('float64'), [80,]), relay.reshape(const_8702.astype('int8'), [1452,]), ), 1)
call_8703 = relay.TupleGetItem(func_6239_call(relay.reshape(const_8701.astype('float64'), [80,]), relay.reshape(const_8702.astype('int8'), [1452,]), ), 1)
func_3087_call = mod.get_global_var('func_3087')
func_3088_call = mutated_mod.get_global_var('func_3088')
call_8706 = relay.TupleGetItem(func_3087_call(), 2)
call_8707 = relay.TupleGetItem(func_3088_call(), 2)
var_8708 = relay.var("var_8708", dtype = "uint16", shape = (60, 14))#candidate|8708|(60, 14)|var|uint16
bop_8709 = relay.not_equal(var_8677.astype('bool'), relay.reshape(var_8708.astype('bool'), relay.shape_of(var_8677))) # shape=(60, 14)
output = relay.Tuple([call_8658,call_8675,var_8676,const_8678,call_8683,call_8695,call_8700,const_8701,const_8702,call_8706,bop_8709,])
output2 = relay.Tuple([call_8659,call_8679,var_8676,const_8678,call_8684,call_8696,call_8703,const_8701,const_8702,call_8707,bop_8709,])
func_8713 = relay.Function([var_8676,var_8677,var_8708,], output)
mod['func_8713'] = func_8713
mod = relay.transform.InferType()(mod)
mutated_mod['func_8713'] = func_8713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8713_call = mutated_mod.get_global_var('func_8713')
var_8715 = relay.var("var_8715", dtype = "uint16", shape = ())#candidate|8715|()|var|uint16
var_8716 = relay.var("var_8716", dtype = "uint16", shape = (60, 14))#candidate|8716|(60, 14)|var|uint16
var_8717 = relay.var("var_8717", dtype = "uint16", shape = (60, 14))#candidate|8717|(60, 14)|var|uint16
call_8714 = func_8713_call(var_8715,var_8716,var_8717,)
output = call_8714
func_8718 = relay.Function([var_8715,var_8716,var_8717,], output)
mutated_mod['func_8718'] = func_8718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8728 = relay.var("var_8728", dtype = "uint16", shape = (4, 9, 4))#candidate|8728|(4, 9, 4)|var|uint16
var_8729 = relay.var("var_8729", dtype = "uint16", shape = (4, 9, 4))#candidate|8729|(4, 9, 4)|var|uint16
bop_8730 = relay.less_equal(var_8728.astype('bool'), relay.reshape(var_8729.astype('bool'), relay.shape_of(var_8728))) # shape=(4, 9, 4)
var_8743 = relay.var("var_8743", dtype = "uint16", shape = (4, 9, 4))#candidate|8743|(4, 9, 4)|var|uint16
bop_8744 = relay.not_equal(var_8729.astype('bool'), relay.reshape(var_8743.astype('bool'), relay.shape_of(var_8729))) # shape=(4, 9, 4)
output = relay.Tuple([bop_8730,bop_8744,])
output2 = relay.Tuple([bop_8730,bop_8744,])
func_8752 = relay.Function([var_8728,var_8729,var_8743,], output)
mod['func_8752'] = func_8752
mod = relay.transform.InferType()(mod)
var_8753 = relay.var("var_8753", dtype = "uint16", shape = (4, 9, 4))#candidate|8753|(4, 9, 4)|var|uint16
var_8754 = relay.var("var_8754", dtype = "uint16", shape = (4, 9, 4))#candidate|8754|(4, 9, 4)|var|uint16
var_8755 = relay.var("var_8755", dtype = "uint16", shape = (4, 9, 4))#candidate|8755|(4, 9, 4)|var|uint16
output = func_8752(var_8753,var_8754,var_8755,)
func_8756 = relay.Function([var_8753,var_8754,var_8755,], output)
mutated_mod['func_8756'] = func_8756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7339_call = mod.get_global_var('func_7339')
func_7340_call = mutated_mod.get_global_var('func_7340')
call_8787 = func_7339_call()
call_8788 = func_7339_call()
func_7668_call = mod.get_global_var('func_7668')
func_7671_call = mutated_mod.get_global_var('func_7671')
const_8792 = relay.const([[-8.147825,9.442338],[1.966364,-5.968249],[-2.556858,-9.097318],[-1.610536,-0.813988],[-8.695792,8.544678],[9.420254,-4.533879],[-6.286372,-6.347665],[-3.893679,-4.965857],[6.107442,9.684904],[-7.960417,3.234615],[1.993309,-2.427485],[-0.205042,7.282325],[-6.461200,-6.617328],[0.359540,-0.054178],[-7.119638,-5.774025],[-0.593089,1.549305],[7.557808,-3.133953],[3.946962,-1.621846],[-3.725080,-4.290287],[1.880865,9.896065],[-7.928390,0.292720],[-7.340795,4.450843],[-4.627637,1.957599],[4.461552,7.143167],[1.291238,-9.685363],[8.983886,4.625929],[7.895009,-3.388800],[5.430073,4.125965],[2.454987,2.201679],[-3.493519,-5.580285],[-3.363179,0.086894],[8.981191,-9.124316],[3.038265,6.119431],[7.368738,-6.065705],[-8.271821,3.677676],[-6.275558,0.663660],[4.702647,9.720807],[-2.849766,3.292404],[6.842898,-0.311983],[3.056260,1.867538],[2.288575,9.474191],[3.586411,9.084442],[7.327952,7.667899],[4.811825,5.092339],[6.097144,-8.360625],[0.218052,-3.217292],[9.724757,3.542448],[-0.765714,2.815416],[4.210080,-8.356127],[-4.272137,-0.153006],[7.966085,8.837999],[-1.513686,6.434763],[2.361681,8.577825],[4.339805,8.208469],[-7.003041,6.880144],[9.385271,-9.700182],[-9.475283,7.248214],[9.668431,-3.810298],[7.406476,0.238736],[-2.516696,9.786216],[0.045226,-3.219595],[-2.158609,4.207253],[-4.512201,3.131581],[8.599794,-8.838613],[4.388564,-7.888381],[8.370542,7.404047],[-4.939303,1.924712],[5.461303,-0.765253],[3.300367,-5.957630],[-5.805425,1.254328],[-8.534883,-5.164107],[-7.884115,2.929980],[-5.353658,-3.154261],[-2.669986,-3.596085],[4.865785,-9.424447],[-6.702881,3.558645],[1.761531,1.247142],[4.102887,5.360250],[-2.995410,8.688803],[-1.616806,-5.475282],[-6.483553,0.558370],[-0.369625,8.431474],[9.518127,-1.008796],[-4.003470,0.474276],[6.014979,4.208793],[6.124466,7.007025],[-9.917255,0.703268],[8.249517,5.939036],[-6.425425,7.131219],[-0.520516,-9.326303],[-3.378603,5.876759],[-3.600305,-5.143172],[4.311761,-1.474808],[-0.352116,-4.335470],[-4.488309,-9.238995],[7.150107,8.612380],[-2.939461,-1.652365],[0.749897,-8.347768],[-2.949676,-7.500738],[-9.497587,-1.382483],[-0.143816,5.466112],[-9.772931,2.674172],[2.691936,0.381629],[2.477673,-5.709913],[3.784221,-1.331694],[-3.551585,-6.717715],[-8.501194,1.047523],[3.579341,1.587282],[6.049340,3.254830],[-3.260733,-5.881880],[-7.350668,3.005059],[9.937977,3.965206],[-7.060286,4.092547],[-9.837631,9.889637],[8.324958,1.086461],[6.249159,-8.419136],[6.312823,-1.448872],[7.535867,0.191970],[-7.223583,2.634044],[7.611069,-4.845509],[7.765026,-4.311025],[2.321392,-1.671387],[-7.500922,-6.310655],[-1.894591,-0.636162],[-5.151795,-7.802366],[-4.818390,9.420915],[-2.256363,-8.177494],[4.520789,2.138903],[-6.658305,-4.361636],[-0.699973,-8.507769],[-6.976716,-2.372622],[-1.901772,7.905835],[3.918364,-5.874533],[4.118403,7.034568],[-6.423080,0.610622],[-3.185724,-3.045917],[-7.144554,0.651880],[-7.847572,-4.403100],[-3.853660,5.716910],[6.826922,0.598763],[-2.509506,-3.369972],[3.181353,5.532235],[1.597145,1.304804],[-9.148456,6.267162],[-7.578180,9.489540],[-3.967562,5.078282],[-4.522305,2.845300],[1.546595,-1.332786],[-1.730201,-6.874590],[-4.094554,-5.848412],[-9.687055,-3.802251],[5.792810,-2.085554],[-8.920429,-0.501288],[3.649291,2.137614],[2.571261,0.675949],[3.279788,-2.380823],[0.744676,0.984353],[5.165114,7.930446],[6.640922,-4.317646],[9.004155,-4.505501],[-0.366108,5.310925],[-6.293550,0.289147],[6.756595,6.150394],[-4.076763,2.816920],[-7.833915,-1.895255],[-6.889787,3.607352],[4.050047,-3.283031],[-9.655450,-8.399732],[-6.936337,-7.860108],[-5.467629,-5.115845],[0.169656,-6.963546],[2.355560,7.769630],[-8.525071,0.779673],[4.741442,-0.495010],[-4.888267,-2.228730],[1.895545,9.428916],[-1.686912,-8.205379],[6.058775,-1.185114],[-0.177826,2.750085],[-6.566168,8.827822],[-0.448063,1.422324],[-6.436380,-1.961396],[4.162630,8.699858],[9.087178,-2.719399],[3.833004,-8.150120],[3.274870,6.599212],[6.312579,7.803672],[1.336721,-9.524045],[-7.330315,5.715270],[3.779221,3.581204],[-3.135997,5.555328],[-9.013159,2.790876],[-3.929498,-7.766087],[0.741446,-2.414555],[-3.868285,-5.667454],[-0.061505,3.212022],[4.756643,7.583887],[-7.338143,4.121938],[-9.057144,-1.283324],[-0.665802,-9.553320],[4.424755,-2.006537],[-9.203629,4.832545],[-2.064517,-4.133619],[-6.722302,9.126993],[-6.930836,-4.691876],[-6.706876,-4.824620],[-6.546134,9.521408],[-6.995567,-8.860451],[-2.640814,-2.464397],[6.878185,-6.041525],[-5.520154,-3.681287],[-4.002510,-1.512470],[4.138050,-4.962699],[-8.105470,-4.375172],[2.049211,8.005841],[5.280028,-0.528965],[-0.505631,-5.487231],[-4.183005,8.916902],[2.008533,-1.811905],[-4.120779,-1.672401],[4.544595,1.866957],[0.110798,4.168314],[9.861021,9.882850],[-3.093186,-9.372326],[-4.483826,-9.824992],[0.866550,2.858237],[6.225566,2.675454],[-6.700427,6.917946],[-6.656515,3.306526],[-3.445304,-9.772739],[0.095046,-7.961454],[3.406716,-1.077797],[5.073907,2.065759],[0.051088,7.645284],[-5.897906,-7.003128],[4.569429,-2.476067],[-0.098965,5.736921],[-1.240796,-4.793857],[9.184633,9.536378],[1.976529,0.996113],[-7.240378,-6.399694],[4.421714,9.332713],[-9.567893,6.426692],[3.892668,6.125292],[9.826889,4.019783],[-4.606590,-2.394207],[-2.706850,3.438582],[1.984429,8.239111],[4.315326,7.602402],[8.059963,-0.109407],[-7.191578,4.924212],[7.341623,6.251706],[-9.495477,1.838379],[-2.673267,-1.656126],[5.031827,1.539996],[-2.477352,8.754123],[-5.343302,8.271321],[3.842578,1.265104],[3.515161,1.758974],[5.907515,1.856644],[2.797235,-8.090691],[-5.352638,8.268556],[-2.622300,8.307171],[0.270180,-5.853038],[7.840327,2.743405],[5.712919,6.197436],[-6.419967,-2.371301],[0.100439,1.648267],[-4.967810,3.927764],[-3.025949,-7.743761],[5.191530,-7.863518],[-3.295960,-7.992142],[-9.236784,-4.686435],[-1.116352,-4.039896],[1.306170,-0.171564],[-9.450150,6.089060],[3.704635,-3.022824],[4.444991,7.758055],[-2.016139,6.282667],[-3.755359,-1.753856],[-3.141738,5.211024],[-7.785621,4.180080],[-0.288928,9.016172],[8.329407,3.929023],[9.352441,-1.427866],[-7.837655,2.182642],[5.579171,-3.899538],[-2.023325,-3.093297],[8.242355,6.704006],[9.111669,4.241897],[-6.392862,7.786921],[-1.983361,-7.445101],[-0.132468,-3.715559],[-3.178126,9.370707],[4.989314,-3.605508],[-2.122384,-1.469381],[-5.849458,-5.111605],[-1.717499,9.869256],[-2.996369,-5.457467],[0.659915,-8.604834],[7.186551,-6.109347],[-5.155941,-3.775177],[7.139257,3.721587],[0.422025,-5.718816],[3.945255,-4.917801],[-4.708057,-2.690149],[-0.828957,2.864879],[0.052743,6.995166],[9.442632,7.670678],[0.345388,9.474959],[-4.519116,-5.819049],[-8.894750,4.856045],[2.127106,3.708238],[4.149546,-1.048438],[-1.305612,8.990434],[7.524985,-5.000772],[-3.593947,-2.774200],[8.429454,0.814034],[-6.649907,-0.178657],[-2.167488,-9.706476],[2.241482,8.191440],[1.748821,-5.149657],[-6.684621,-9.241896],[-6.935400,-5.107674],[-5.737198,-5.932963],[-1.546963,2.079375],[7.947712,3.838300],[3.864786,-8.460907],[5.912706,1.600066],[6.397633,-6.494706],[1.267240,-8.669042],[9.951126,-9.829443],[2.213650,-3.889615],[-0.246695,7.392186],[6.578058,6.361332],[-3.587990,3.847128],[-6.893719,5.421926],[-8.956462,3.234056],[-2.541523,9.095230],[-7.931890,9.668964],[-6.739752,1.826914],[8.185070,-9.458325],[3.738829,4.389607],[2.426494,8.038646],[6.187577,-4.439445],[-0.700832,2.667397],[5.229032,-8.126581],[-0.365074,8.480498],[8.749947,-5.344451],[3.085943,6.971389],[-8.511639,8.186267],[0.455192,0.233821],[0.984783,-4.573206],[8.158223,-0.936576],[-5.865550,-6.904040],[-0.129992,8.073057],[-2.990069,-0.695598],[0.708619,-4.717435],[-2.384306,3.242754],[-5.053634,-2.902259],[-0.422461,5.275891],[-3.164253,-2.420159],[7.573007,9.438610],[9.761763,6.460171],[-2.508083,5.596847],[-8.181619,-8.409678],[9.727084,-3.763274],[-0.179232,5.850235],[-3.859852,6.820231],[-9.424027,6.717974],[-5.131362,2.155004],[-9.095948,-8.663492],[-4.383618,-8.866862],[4.257817,2.252199],[-1.685604,8.542793],[-5.543416,-8.283235],[9.924284,0.102019],[6.705897,7.644020],[-6.381446,9.526135],[-3.359174,1.445302],[-0.122540,2.480682],[-4.091124,-6.579207],[-3.662979,-1.052018],[1.388695,2.800216],[-6.784696,-5.286716],[-0.958300,8.124657],[2.023338,6.886461],[-8.504373,-6.393382],[-2.418562,6.572468],[4.481339,1.962102],[9.942998,-8.395827],[-3.023638,2.359077],[7.856046,0.832857],[-4.835078,-4.958790],[8.474446,5.222546],[-2.738917,-6.079626],[8.339373,-7.945526],[-8.016185,-8.754805],[6.359272,-2.294919],[2.044677,-9.565432],[8.850473,-5.556843],[-1.476963,3.494637],[-6.705196,-7.492421],[0.425430,3.484769],[-7.618254,6.277157],[3.502395,-8.344947],[-3.607936,6.197444],[-1.517194,-8.682398],[5.051190,0.601005],[9.192397,4.950704],[3.700814,3.942961],[3.716707,8.042265],[-8.689298,-6.184762],[6.750033,-6.591371],[5.841218,0.139921],[3.272627,5.634802],[-4.313558,-4.786872],[-9.564640,1.930823],[4.171838,-3.302323],[3.765156,-8.718465],[-7.731083,6.034516],[6.005276,5.559255],[4.131301,5.023440],[2.798223,6.809061],[5.623461,4.571184],[-1.174867,-1.408930],[8.561108,-2.075135],[-5.751473,-3.724735],[9.764992,-4.534755],[8.866507,0.541192],[-8.450200,0.559260],[6.360219,7.086426],[5.670863,-5.414096],[7.912181,3.488662],[3.754084,8.134608],[5.034695,-8.516481],[-3.271450,2.155869],[0.852651,-9.877722],[2.352882,2.804705],[4.038918,-0.051008],[4.283054,-0.652282],[9.852543,-7.319367],[2.789017,-7.698132],[6.302324,1.842953],[-1.626005,-3.732049],[9.523522,0.591669],[-1.525874,1.069398],[-9.966925,-5.485870],[0.544640,-7.616966],[2.210196,1.231833],[7.610436,5.153157],[0.818016,-0.465261],[6.893154,0.335074],[4.833834,-0.086951],[5.191827,2.790750],[8.063552,1.546914],[-3.337195,6.637660],[-3.674256,-0.179737],[-8.928223,0.669337],[-7.660515,0.504994],[-4.390421,-0.919984],[-1.558050,8.000031],[3.854707,4.667776],[3.866854,2.796717],[-1.579605,4.311516],[2.255393,-4.222746],[1.862273,7.485797],[7.687012,6.230783],[6.220182,-5.868550],[-4.029576,3.541517],[-1.692787,-2.361285],[-4.743249,-7.836238],[-8.696016,1.619700],[8.176392,-1.155906],[5.364973,7.853623],[-2.295987,-9.264454],[-8.708383,6.958332],[9.007609,-1.403662],[4.501344,1.373393],[-9.379596,7.740003],[1.481036,6.184813],[-9.230582,7.097224],[3.959633,0.135366],[1.846133,-5.857590],[-4.374482,2.703165],[-3.623327,6.603149],[-3.170198,1.418857],[-8.403879,-8.040375],[-7.451083,8.588918],[2.000932,-8.854763],[0.766708,-8.075211],[-9.976977,-7.908354],[9.395856,-1.798501],[-0.270426,4.350822],[-0.438570,1.846599],[7.828686,-6.681272],[6.551322,9.222238],[-4.403673,-3.742152],[1.714554,-5.131614],[5.590729,-7.235356],[-3.429244,-9.344916],[-9.107884,-4.064518],[8.493751,-4.386963],[4.538699,-5.603661],[-4.943127,8.032647],[6.540842,-2.212963],[-8.286579,-3.770005],[9.691741,-8.085545],[5.125717,-5.440019],[9.409521,-2.600125],[6.559444,4.149194],[1.704063,4.297622],[4.315947,-8.576096],[-7.235397,3.242430],[-6.171650,-9.133002],[-7.376855,2.520435],[-2.482239,-1.753673],[-9.438406,-3.664186],[1.285420,-4.356416],[0.454891,-2.311798],[-6.730471,7.698516],[8.608021,-8.623209],[0.196088,8.982549],[0.631807,0.466825],[5.015299,0.736808],[9.218917,0.885706],[-8.689647,8.018824],[7.030448,-7.417422],[0.630205,6.974516],[5.874669,-6.015434],[-0.696525,-6.324762],[-1.581602,9.912055],[0.277434,-1.853394],[-8.586037,6.184326],[7.302877,-4.099836],[-3.536090,8.677971],[5.605563,-3.754550],[-4.320266,2.998540],[9.071591,-2.783635],[8.067880,5.376027],[0.371906,6.572460],[5.972639,-7.756958],[-1.485211,4.257251],[6.403164,-8.643095],[6.536266,1.008127],[1.888332,6.067432],[4.154042,-2.564671],[0.633267,6.560087],[6.539434,5.138275],[-2.369002,-8.354063],[-8.668813,7.692695],[-2.390954,-7.025563],[8.382480,3.304956],[-2.871387,9.135762],[-2.121940,2.312412],[0.581637,-1.509366],[9.475581,0.705747],[3.571824,-2.431410],[2.090161,-3.067963],[5.815982,-4.133047],[-7.325884,7.251475],[-0.801137,-3.569447],[4.942152,-7.055110],[8.978350,3.680542],[-2.797436,-5.591691],[-0.062476,-0.424045],[-9.231202,9.412974],[9.785802,-2.192805],[2.671080,5.655092],[-5.415420,8.669771],[4.907707,-0.146196],[-9.248465,2.487890]], dtype = "float32")#candidate|8792|(572, 2)|const|float32
call_8791 = relay.TupleGetItem(func_7668_call(relay.reshape(const_8792.astype('float32'), [11, 104])), 1)
call_8793 = relay.TupleGetItem(func_7671_call(relay.reshape(const_8792.astype('float32'), [11, 104])), 1)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_8803 = func_4096_call()
call_8804 = func_4096_call()
bop_8826 = relay.not_equal(call_8803.astype('bool'), relay.reshape(call_8791.astype('bool'), relay.shape_of(call_8803))) # shape=(11, 14, 7)
bop_8829 = relay.not_equal(call_8804.astype('bool'), relay.reshape(call_8793.astype('bool'), relay.shape_of(call_8804))) # shape=(11, 14, 7)
output = relay.Tuple([call_8787,const_8792,bop_8826,])
output2 = relay.Tuple([call_8788,const_8792,bop_8829,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

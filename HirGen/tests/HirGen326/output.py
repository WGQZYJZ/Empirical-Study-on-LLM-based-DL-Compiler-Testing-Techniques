import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_67 = relay.const([[[True,False,True,False,False,True,False,False]],[[False,True,False,True,False,False,True,False]],[[True,True,True,False,True,False,False,True]],[[False,False,True,False,False,False,False,True]],[[False,True,False,True,False,False,True,False]],[[True,True,False,True,False,True,True,True]],[[False,False,True,True,False,True,True,False]],[[True,False,False,True,False,False,True,False]],[[True,True,True,True,True,True,False,False]],[[False,False,True,False,True,False,True,False]],[[False,True,True,False,False,False,True,False]],[[False,True,True,False,False,False,True,True]],[[True,False,True,False,True,True,False,False]]], dtype = "bool")#candidate|67|(13, 1, 8)|const|bool
var_68 = relay.var("var_68", dtype = "bool", shape = (13, 12, 8))#candidate|68|(13, 12, 8)|var|bool
bop_69 = relay.logical_and(const_67.astype('bool'), var_68.astype('bool')) # shape=(13, 12, 8)
bop_86 = relay.equal(var_68.astype('bool'), const_67.astype('bool')) # shape=(13, 12, 8)
output = relay.Tuple([bop_69,bop_86,])
output2 = relay.Tuple([bop_69,bop_86,])
func_93 = relay.Function([var_68,], output)
mod['func_93'] = func_93
mod = relay.transform.InferType()(mod)
mutated_mod['func_93'] = func_93
mutated_mod = relay.transform.InferType()(mutated_mod)
var_94 = relay.var("var_94", dtype = "bool", shape = (13, 12, 8))#candidate|94|(13, 12, 8)|var|bool
func_93_call = mutated_mod.get_global_var('func_93')
call_95 = func_93_call(var_94)
output = call_95
func_96 = relay.Function([var_94], output)
mutated_mod['func_96'] = func_96
mutated_mod = relay.transform.InferType()(mutated_mod)
var_98 = relay.var("var_98", dtype = "float64", shape = (15, 3, 13))#candidate|98|(15, 3, 13)|var|float64
uop_99 = relay.exp(var_98.astype('float64')) # shape=(15, 3, 13)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
var_105 = relay.var("var_105", dtype = "bool", shape = (104, 12))#candidate|105|(104, 12)|var|bool
call_104 = relay.TupleGetItem(func_93_call(relay.reshape(var_105.astype('bool'), [13, 12, 8])), 0)
call_106 = relay.TupleGetItem(func_96_call(relay.reshape(var_105.astype('bool'), [13, 12, 8])), 0)
output = relay.Tuple([uop_99,call_104,var_105,])
output2 = relay.Tuple([uop_99,call_106,var_105,])
func_107 = relay.Function([var_98,var_105,], output)
mod['func_107'] = func_107
mod = relay.transform.InferType()(mod)
var_108 = relay.var("var_108", dtype = "float64", shape = (15, 3, 13))#candidate|108|(15, 3, 13)|var|float64
var_109 = relay.var("var_109", dtype = "bool", shape = (104, 12))#candidate|109|(104, 12)|var|bool
output = func_107(var_108,var_109,)
func_110 = relay.Function([var_108,var_109,], output)
mutated_mod['func_110'] = func_110
mutated_mod = relay.transform.InferType()(mutated_mod)
const_212 = relay.const([[[7,10,-7,-10,-10,-9,8,8,-8,-10,6,8,7,8,-5],[-3,-2,-6,-8,3,5,-2,6,5,-8,2,4,-5,-1,-2],[-2,1,-6,5,5,1,2,3,3,9,-2,7,-2,-7,-5],[-1,4,3,3,3,7,-6,-7,-4,-6,4,-7,-5,3,-4],[-1,-9,9,6,-1,-9,-4,5,3,-4,4,10,10,10,5],[4,-9,2,7,1,8,-8,5,6,5,-1,-9,-10,-4,2],[4,-7,3,4,-7,9,5,10,1,7,5,6,-9,-2,-7],[-2,2,-8,9,4,7,5,-1,1,10,-9,-8,-8,-9,9],[5,-1,-3,2,10,-1,-9,10,-9,1,3,-4,-3,9,1],[2,-1,2,1,-5,-10,-2,3,9,5,1,2,-10,-6,-8],[6,4,4,-1,-10,8,5,10,-3,9,-3,-9,-6,9,-7],[10,9,-1,1,-10,10,-2,-9,2,3,4,-2,10,-2,-9],[-8,-2,-6,-1,-5,-8,8,-10,4,3,-3,-5,9,-2,-6]],[[10,3,-2,5,4,4,-4,3,1,6,-7,10,2,9,2],[7,9,6,-7,-5,-10,2,-1,-8,4,-8,-10,3,2,8],[-7,-8,2,-8,-2,1,-9,-7,-10,7,-8,-3,5,-2,1],[-1,-4,-5,-2,7,-3,7,1,-6,-9,-5,8,-5,5,10],[-7,4,-1,-10,-1,8,-5,-8,8,-9,7,-2,-1,9,-4],[4,3,3,-9,6,1,-4,6,-5,7,1,-8,-10,4,7],[-10,9,10,-5,6,7,-5,4,-6,-8,-2,7,-6,1,6],[-5,-8,8,-8,-7,6,2,6,5,-6,4,-1,-10,-8,6],[8,10,8,3,3,-4,3,-10,-3,-10,-7,-7,-5,-7,7],[-7,-5,-2,-5,2,-7,6,-2,1,-3,-4,-7,-1,1,5],[1,4,7,10,-1,9,-9,-7,5,-8,-9,1,7,-8,1],[-6,-5,8,-6,-5,5,4,1,6,-9,6,-1,6,10,8],[-9,-4,5,-6,2,-8,5,10,-3,-4,5,2,9,-5,4]],[[-10,8,-7,6,5,-5,5,-7,10,3,4,-7,5,-6,7],[-2,1,3,-4,-1,8,-2,-10,10,-8,-5,3,9,-8,-6],[3,1,1,-3,-2,-2,2,3,-2,1,8,-10,-8,8,-4],[-2,-4,2,-9,-10,1,3,-7,-5,-9,-7,-6,7,8,1],[-10,8,6,-1,6,5,-5,-1,5,9,6,-3,5,-6,7],[-4,8,5,3,-10,9,-6,-4,-5,5,-4,-2,-3,1,9],[-7,-7,6,-1,-9,-9,6,1,4,-10,-9,-2,-3,7,4],[-4,-8,6,-4,-4,7,9,1,-3,5,-6,8,-7,-2,-7],[-2,-5,-3,-6,-7,-7,-4,-8,-8,1,-4,2,-4,-5,5],[5,4,-10,1,3,8,2,8,-8,1,-10,6,-9,10,1],[7,-3,-3,9,10,-4,9,10,-6,-4,10,1,5,-8,-3],[10,-2,2,-7,1,-10,6,3,-9,-6,5,6,-2,8,-5],[9,-3,-2,10,6,7,-8,-7,10,-9,10,4,2,8,8]],[[-10,-1,-9,8,2,-1,-1,-3,8,-6,-2,1,-4,-4,2],[8,-8,-5,-3,6,-8,-6,6,7,5,-10,-4,4,5,-10],[1,-9,8,6,8,7,-1,-4,4,-10,7,-7,3,8,-3],[-5,8,-3,-9,-6,-3,10,9,8,5,2,9,4,-5,2],[-1,-2,2,-3,-4,-7,-5,-10,2,8,7,-1,1,10,8],[-6,2,7,-1,6,-3,-4,-1,5,-6,1,2,2,9,-1],[-8,7,-5,4,7,3,3,10,-6,7,7,7,-2,-3,3],[-8,-3,2,9,3,-8,-8,6,6,5,1,-1,-1,7,4],[2,-4,-8,10,-4,3,-9,-4,-3,6,4,-1,-6,-10,8],[7,-7,-2,9,10,7,5,8,-1,-2,8,4,10,2,7],[5,8,6,7,-4,-9,2,-6,-5,-1,4,2,-9,-2,-4],[10,2,9,10,3,5,-4,8,-7,-7,-10,10,-2,6,-1],[-10,8,-9,-10,-5,10,5,-6,3,5,-4,2,-9,-4,-8]],[[-3,-3,10,2,-10,5,6,5,-4,-7,-8,-6,-6,5,-9],[-2,1,5,-7,5,3,-9,-3,-3,3,-8,3,-1,10,-7],[-1,3,-4,5,-5,-9,10,1,2,-10,6,-6,-5,-5,5],[4,-1,-7,-7,-6,-1,-5,5,-6,-10,10,6,4,-2,-6],[1,2,9,6,-2,-8,-7,7,9,-9,-8,4,6,5,4],[-7,-1,6,-10,6,5,8,7,4,-7,-4,1,-10,3,-4],[-7,4,2,10,2,-8,9,9,-9,1,-3,10,-10,-10,6],[-2,7,-2,7,2,7,-6,-4,-2,7,9,-8,-3,-9,-3],[-9,1,2,4,7,-1,-6,1,-4,-4,-8,-3,2,-7,9],[10,-7,-3,-4,10,-4,6,-10,1,1,6,-8,6,-3,3],[-4,-1,3,2,2,1,-5,-6,-5,8,10,-7,-1,10,-5],[9,7,-10,7,-10,-4,-2,1,3,-5,-3,-4,-5,3,-2],[-8,10,2,-6,2,7,10,-4,-7,6,-9,-7,9,-10,7]],[[1,-5,-9,-2,6,-2,1,-4,2,3,3,4,5,-4,-6],[-8,-6,-9,-10,1,-5,10,-6,1,6,-5,6,-3,-5,-5],[-7,7,6,10,8,-5,-8,-9,1,-2,3,-8,-7,9,7],[2,-9,-9,6,2,-3,-7,3,-5,7,9,-5,1,7,3],[-4,-10,-3,-7,-10,-2,-7,6,-4,-2,10,-3,10,6,-1],[-3,-5,9,4,6,-6,-1,-9,1,-9,4,-6,-4,-8,6],[-3,-8,4,6,-5,5,3,4,-4,5,10,3,-6,-4,1],[-8,1,-3,-3,-4,-1,10,5,-6,-1,-2,-10,-8,-6,-5],[-2,-1,10,7,-3,2,2,-8,7,5,2,-8,-4,1,9],[-7,10,4,-4,-3,-2,10,6,10,-1,1,4,-8,-6,-10],[-6,5,-7,-5,-10,9,-3,7,-9,3,3,5,-3,-8,3],[-3,-7,6,7,-6,-8,-10,-3,10,-3,-2,-9,4,2,-3],[1,4,4,1,-1,-8,-1,-2,5,-8,7,5,-9,-9,4]],[[-5,-10,3,1,7,1,1,-6,-10,-4,-9,10,-6,4,1],[-9,-1,7,5,7,10,-7,-2,3,-4,-10,-10,7,-1,-3],[-9,9,3,3,2,8,-10,2,-10,3,3,-6,-4,-1,6],[-7,8,4,-2,7,-6,7,-2,9,-7,5,-6,5,6,6],[9,6,1,-9,6,8,-1,-10,-5,4,-1,-4,-1,-8,-4],[-10,10,-2,-5,-6,7,5,-1,2,1,-8,6,-9,10,8],[4,8,-6,-6,9,4,-8,-5,-1,4,2,4,5,-7,-3],[-10,-2,2,9,1,-2,6,-3,8,6,7,4,-8,-7,6],[1,-8,4,-3,7,-1,-8,-10,7,-4,-8,3,-2,-2,7],[10,2,2,-5,-1,10,3,8,-10,9,-8,-7,-10,-3,10],[10,9,-6,-10,-8,5,-2,8,2,-6,2,-10,6,-7,-4],[-2,-5,-8,4,3,-8,1,-7,-1,5,-3,-1,7,5,-8],[-1,5,1,-10,-3,8,1,3,-6,-8,10,-9,6,-10,-2]],[[-2,-9,10,2,5,-2,5,10,-1,2,9,-3,-5,-6,10],[3,10,10,-2,-1,6,-9,7,10,-8,-1,6,-5,3,-8],[-9,6,5,-3,-8,3,8,-6,-1,-4,1,-6,-9,10,2],[6,2,-5,10,1,2,4,6,-8,-8,-6,8,-6,10,-1],[-7,-6,-1,-4,-8,-8,9,-4,-2,1,-5,-9,-6,-1,2],[-3,-1,7,-9,-2,8,-9,4,1,4,-5,7,-3,10,3],[8,-2,4,-10,10,10,-5,-4,-2,4,5,6,-5,8,3],[-7,7,9,-9,-2,4,-9,-3,-8,8,-1,-5,-8,6,-8],[-7,-1,6,-4,10,8,-2,-4,9,-7,8,-3,-5,-5,-7],[1,8,6,1,-9,-10,8,3,4,-6,3,1,6,7,10],[-2,5,2,-6,-5,-7,-3,4,6,9,3,5,8,-3,-3],[-6,-1,-7,-4,7,7,4,-6,5,8,-4,-8,6,-10,-10],[9,10,-10,-4,-9,6,4,5,8,-4,3,-9,8,-6,2]],[[3,-5,5,7,10,2,-1,5,8,3,-2,-1,9,4,-10],[-3,-10,-4,-4,4,-9,1,3,-6,-1,-5,7,-2,7,-4],[-4,10,5,-9,-8,-6,-1,9,-5,7,5,-9,-9,-1,-8],[-5,-1,-8,-2,-9,2,-9,4,-9,2,5,9,2,-4,6],[9,4,-10,-8,9,-3,5,-4,-8,8,-8,-9,-6,6,-7],[3,6,6,10,-8,-1,2,1,-5,-10,10,5,-4,4,2],[-2,5,-2,6,5,5,-5,2,-4,6,9,9,-7,6,4],[-3,2,-6,9,10,-6,-9,-1,-6,9,6,-9,-1,-1,10],[-4,-2,8,-5,-10,10,8,-8,4,4,5,1,-7,10,1],[3,-2,-4,-3,-9,1,-10,1,-10,1,8,3,9,4,-8],[-1,10,6,-4,-2,3,-2,-4,2,-10,9,-8,-7,-2,8],[6,3,-3,-10,9,7,7,6,6,7,-10,4,-9,-8,-4],[5,8,-5,-6,-5,1,6,3,1,-9,-5,-7,10,2,10]]], dtype = "uint64")#candidate|212|(9, 13, 15)|const|uint64
var_213 = relay.var("var_213", dtype = "uint64", shape = (9, 13, 15))#candidate|213|(9, 13, 15)|var|uint64
bop_214 = relay.not_equal(const_212.astype('bool'), relay.reshape(var_213.astype('bool'), relay.shape_of(const_212))) # shape=(9, 13, 15)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
const_218 = relay.const([[False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,False]], dtype = "bool")#candidate|218|(1, 1248)|const|bool
call_217 = relay.TupleGetItem(func_93_call(relay.reshape(const_218.astype('bool'), [13, 12, 8])), 1)
call_219 = relay.TupleGetItem(func_96_call(relay.reshape(const_218.astype('bool'), [13, 12, 8])), 1)
output = relay.Tuple([bop_214,call_217,const_218,])
output2 = relay.Tuple([bop_214,call_219,const_218,])
func_225 = relay.Function([var_213,], output)
mod['func_225'] = func_225
mod = relay.transform.InferType()(mod)
var_226 = relay.var("var_226", dtype = "uint64", shape = (9, 13, 15))#candidate|226|(9, 13, 15)|var|uint64
output = func_225(var_226)
func_227 = relay.Function([var_226], output)
mutated_mod['func_227'] = func_227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_362 = relay.var("var_362", dtype = "float32", shape = (16, 3, 1))#candidate|362|(16, 3, 1)|var|float32
uop_363 = relay.log(var_362.astype('float32')) # shape=(16, 3, 1)
uop_366 = relay.log10(uop_363.astype('float64')) # shape=(16, 3, 1)
bop_371 = relay.bitwise_or(uop_363.astype('int32'), relay.reshape(uop_366.astype('int32'), relay.shape_of(uop_363))) # shape=(16, 3, 1)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
var_376 = relay.var("var_376", dtype = "bool", shape = (1248,))#candidate|376|(1248,)|var|bool
call_375 = relay.TupleGetItem(func_93_call(relay.reshape(var_376.astype('bool'), [13, 12, 8])), 0)
call_377 = relay.TupleGetItem(func_96_call(relay.reshape(var_376.astype('bool'), [13, 12, 8])), 0)
output = relay.Tuple([bop_371,call_375,var_376,])
output2 = relay.Tuple([bop_371,call_377,var_376,])
func_384 = relay.Function([var_362,var_376,], output)
mod['func_384'] = func_384
mod = relay.transform.InferType()(mod)
var_385 = relay.var("var_385", dtype = "float32", shape = (16, 3, 1))#candidate|385|(16, 3, 1)|var|float32
var_386 = relay.var("var_386", dtype = "bool", shape = (1248,))#candidate|386|(1248,)|var|bool
output = func_384(var_385,var_386,)
func_387 = relay.Function([var_385,var_386,], output)
mutated_mod['func_387'] = func_387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_664 = relay.var("var_664", dtype = "int8", shape = ())#candidate|664|()|var|int8
var_665 = relay.var("var_665", dtype = "int8", shape = (10, 1, 3))#candidate|665|(10, 1, 3)|var|int8
bop_666 = relay.add(var_664.astype('int8'), var_665.astype('int8')) # shape=(10, 1, 3)
uop_679 = relay.acos(bop_666.astype('float64')) # shape=(10, 1, 3)
func_107_call = mod.get_global_var('func_107')
func_110_call = mutated_mod.get_global_var('func_110')
const_684 = relay.const([-3.366855,5.371467,2.338859,-7.697117,-1.095785,-0.703867,7.392146,6.149318,4.881158,9.002156,5.119345,5.541471,6.504775,-9.421714,-8.730383,-2.175949,1.486953,-8.946635,-1.462785,0.985634,-9.362002,-0.007667,2.498977,9.040966,1.963776,-1.189215,-6.434946,-9.791851,1.908685,-8.028142,8.397602,0.965066,-1.810698,9.866796,-3.752805,-9.925946,-6.099188,8.831097,-6.539348,-8.868883,8.499410,-9.782785,3.056983,9.651543,0.058565,-1.245205,-1.766192,-6.933502,-2.778883,-7.802894,-2.184670,3.382423,7.540241,-1.133993,6.325584,-8.295879,6.835937,-0.390511,6.521717,6.218404,7.976690,-4.888897,8.809465,9.362895,-8.116860,1.139747,-9.016802,-8.103155,7.605150,0.903749,8.922730,1.275032,-0.908541,9.762711,1.868126,5.243812,6.351567,8.629301,-6.930191,-2.927761,-6.120695,6.805085,-4.720754,-7.839088,-8.969987,1.023983,4.351597,-3.925321,-6.132597,-5.597016,-3.042514,0.217225,4.887928,8.657721,1.905089,-4.502145,8.785303,-3.298293,7.475871,6.778464,-5.887215,-6.319754,9.086817,6.661749,-2.242135,1.696072,7.363495,-6.712231,6.002185,-3.566588,3.539050,-8.524068,-3.202869,0.184924,-1.071574,7.072146,3.577829,-0.408746,-7.809694,-6.335151,5.316566,-2.653334,-2.959033,2.760895,-3.135874,-4.170280,1.980636,-1.369592,2.863533,2.147917,-5.993856,-6.616378,-8.439691,-7.468318,4.274170,-1.249897,-9.847432,2.969752,5.933627,3.343543,7.888955,-8.771585,-7.170913,-1.174804,-6.055071,6.984065,8.727378,-0.235424,7.342101,-3.619985,5.261515,9.563204,0.259318,8.472982,-7.000300,-3.085412,-6.021409,-9.567742,1.851881,9.529971,-2.306817,-7.911018,-8.636759,-6.928864,8.381099,-2.207458,1.885869,3.914910,0.636592,3.323443,5.853272,5.604868,-5.859474,-1.467157,-7.164763,1.325735,1.376534,-6.905146,-4.087794,6.456817,-9.408034,1.093413,3.345266,-0.929153,8.212318,-4.306573,-4.935343,-9.595626,9.715533,-3.512403,-5.846165,4.885973,-0.392923,-8.617854,-7.016352,-7.506910,6.969688,-0.172801,-2.360995,6.236302,-4.527546,-9.486529,2.198149,-5.254805,-1.324740,1.388454,-4.864383,-4.497491,-7.875977,-5.839443,-6.760232,8.186283,-8.504788,-6.217079,1.095896,-9.986885,-3.536566,-5.533058,1.784446,-1.009425,2.858219,0.720449,-1.181492,-8.487311,-7.981543,5.266399,-3.882785,-1.694761,-5.151848,6.823707,2.556485,-4.855672,9.870471,3.781217,5.090439,-0.154068,3.797485,-7.688783,4.462105,4.762295,9.690132,-8.914011,1.008353,-1.562849,4.873318,6.910652,0.050608,-9.578156,-6.641736,-2.412905,-4.407766,1.777274,-6.060278,2.524983,-8.416535,6.254975,-3.449770,5.511210,-5.755976,2.853341,-0.496133,-8.997795,-2.644872,-7.700842,6.330839,-7.116961,4.481397,5.639191,-6.242235,2.389037,5.959013,-0.314606,-3.017850,-6.249471,-8.217916,-0.444815,-1.598558,-6.641311,-8.302425,-2.341882,8.715233,1.354890,-2.541844,-8.897794,2.161674,6.212291,-9.728540,-2.825685,-2.078374,-9.131499,2.545330,7.371780,5.471233,-5.178281,-5.191969,0.009537,-5.669276,-3.581735,-4.825096,8.636172,-3.623390,-0.930298,-2.338640,7.077682,7.290664,7.123466,-3.559955,5.734881,1.560501,6.324279,-2.520072,3.110813,7.013338,0.105098,6.522560,-7.192063,5.771529,-5.882802,4.435772,-8.203887,2.513134,3.661368,-8.219770,-4.587998,5.900246,3.801871,-5.377766,-3.138013,-2.166763,2.200449,-5.426434,1.265072,6.679091,2.135533,5.156663,7.895175,-8.367487,6.047518,1.436689,-4.827314,3.684288,-6.010454,-5.101225,-6.069012,-3.971385,-2.441729,2.629204,7.281355,-8.228231,7.038115,-3.891137,-5.947865,-0.210701,-2.274424,1.815249,-2.392016,-3.898345,3.549655,6.403851,-9.188108,4.145182,-0.433284,-6.927517,8.418821,-7.408014,1.371693,-5.688566,3.255987,3.899546,-5.508724,-9.854825,4.790369,-8.020506,-5.918448,-7.732760,3.872288,6.255587,-2.420718,1.282720,-9.041859,5.754816,9.085280,-1.033407,-1.032118,-3.087254,-7.044181,0.131454,5.024490,-5.985010,1.649525,-5.853585,9.339814,-6.057083,-2.690000,8.354672,6.380525,-2.493403,-1.613261,-2.245958,-9.655792,-6.429182,0.994079,-4.415840,8.720813,-8.594568,-2.917293,4.910070,0.757394,0.305371,-7.926352,-9.487898,2.599039,-2.739661,7.501041,-4.883990,8.084040,9.601639,-4.162494,9.693223,-6.902760,-7.680423,4.134199,-2.621691,0.094945,-3.464480,4.375539,-3.355751,5.193618,-4.271882,1.716720,-5.537587,6.632406,4.264198,4.858498,4.796483,5.359923,-8.978581,-4.181907,9.586622,6.112591,6.601918,-8.519245,0.403591,-4.506955,6.775182,5.539497,-8.263940,8.462849,-0.368798,-7.365285,-9.343877,-4.663240,-2.989146,-7.148760,-2.102619,6.637833,-6.756370,3.963098,4.727900,6.205844,6.607320,-2.620304,-5.106351,-0.196728,5.869400,-6.302091,-2.646711,-3.581377,7.222625,-1.833683,-9.978530,2.244846,0.743483,5.460951,-3.818748,8.201500,3.666192,2.669320,1.972116,-3.862318,3.039650,5.161278,0.492072,-1.008331,-2.177204,9.200494,8.101275,4.246125,8.989578,0.685979,6.037853,-2.628137,8.004720,-9.169690,6.535949,7.063450,-4.457196,-9.664663,-2.717042,-9.135401,6.263321,-8.851241,0.445631,3.361399,-9.575773,-5.704675,-9.103704,-7.989843,6.242488,-5.165453,7.575067,0.308921,-0.988671,-6.176922,-6.211358,0.768300,-2.380488,-3.174258,3.823962,-5.780647,2.574055,-8.774971,1.168210,4.584734,7.899682,7.725759,3.385561,-1.750188,-9.065568,-6.581549,-3.437613,-5.649325,7.693354,-2.966434,2.322277,-5.123350,7.152999,-7.803086,2.170992,1.551326,3.418242,-4.105480,9.173108,9.910124,8.389516,4.784116,7.407727,-3.586342,-9.775626,-2.532407,1.708282,-1.749053,2.074009,-0.390616,-5.519215,1.290085,-0.822791,-7.184407,4.776723,-9.048729,-0.429663,-4.140277,4.034337,-0.927315,2.935317,9.332918,-5.673830,8.215332,-1.945998,-0.189958,-7.660986,5.708509,9.565925,-8.833802,8.278371,3.088042,-1.551748,5.183165,-2.900702,-0.103629,-8.239094,0.794136,6.656118,-8.339309,-8.926282], dtype = "float64")#candidate|684|(585,)|const|float64
const_685 = relay.const([False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True], dtype = "bool")#candidate|685|(1248,)|const|bool
call_683 = relay.TupleGetItem(func_107_call(relay.reshape(const_684.astype('float64'), [15, 3, 13]), relay.reshape(const_685.astype('bool'), [104, 12]), ), 2)
call_686 = relay.TupleGetItem(func_110_call(relay.reshape(const_684.astype('float64'), [15, 3, 13]), relay.reshape(const_685.astype('bool'), [104, 12]), ), 2)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
call_703 = relay.TupleGetItem(func_93_call(relay.reshape(const_685.astype('bool'), [13, 12, 8])), 0)
call_704 = relay.TupleGetItem(func_96_call(relay.reshape(const_685.astype('bool'), [13, 12, 8])), 0)
output = relay.Tuple([uop_679,call_683,const_684,const_685,call_703,])
output2 = relay.Tuple([uop_679,call_686,const_684,const_685,call_704,])
func_707 = relay.Function([var_664,var_665,], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
mutated_mod['func_707'] = func_707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mutated_mod.get_global_var('func_707')
var_709 = relay.var("var_709", dtype = "int8", shape = ())#candidate|709|()|var|int8
var_710 = relay.var("var_710", dtype = "int8", shape = (10, 1, 3))#candidate|710|(10, 1, 3)|var|int8
call_708 = func_707_call(var_709,var_710,)
output = call_708
func_711 = relay.Function([var_709,var_710,], output)
mutated_mod['func_711'] = func_711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_856 = relay.var("var_856", dtype = "float32", shape = (10, 14, 1))#candidate|856|(10, 14, 1)|var|float32
const_857 = relay.const([[[-1.400518],[5.602836],[-6.053479],[5.451436],[-3.897321],[-9.229064],[-8.475016],[9.862929],[4.634265],[-0.699513],[7.563088],[1.952263],[2.991374],[-7.155487]],[[4.036160],[-5.319542],[-5.606772],[5.507286],[-3.613783],[-1.998517],[-2.385065],[1.152354],[0.137267],[4.070375],[2.788817],[9.674249],[4.972770],[9.764454]],[[-7.555404],[5.270034],[1.426645],[9.034698],[-3.636944],[-7.440336],[4.050074],[7.152699],[-8.651125],[-7.501227],[8.055156],[-5.357180],[0.649144],[6.410758]],[[-3.165017],[-4.977553],[-8.735896],[-4.704486],[7.854421],[-4.299249],[-0.855393],[2.551762],[0.517397],[9.011536],[3.290285],[-6.616017],[-7.698089],[0.276851]],[[-1.799585],[-4.332467],[-7.063337],[4.435811],[-5.680569],[-4.891275],[9.735829],[9.614892],[-8.665612],[-8.256970],[9.404494],[0.192791],[9.881612],[7.749404]],[[-3.698848],[-6.267640],[-3.970357],[-3.586131],[0.642038],[6.692816],[3.386853],[3.150009],[-8.040545],[0.854269],[9.298276],[7.696742],[7.444411],[-0.009437]],[[-7.839255],[-8.160457],[-7.809258],[6.264611],[1.443358],[9.454150],[1.412188],[3.925094],[0.766554],[6.421898],[7.697282],[-2.789140],[-6.436019],[-8.838171]],[[-9.633830],[6.056935],[-5.660930],[7.525190],[-8.306675],[9.678068],[-3.223134],[-9.399056],[-3.943367],[2.632072],[-4.734324],[1.188819],[8.785805],[9.204366]],[[4.775232],[7.593903],[-1.035302],[-9.865276],[1.880531],[3.082225],[-4.635830],[4.622211],[-9.041154],[-9.389270],[9.033440],[-5.004136],[5.384746],[-2.790251]],[[7.984030],[-5.804473],[7.408048],[-2.684205],[-9.455301],[-4.464647],[-9.790639],[7.100251],[0.131679],[-1.899097],[-8.037065],[-3.162802],[-9.280665],[-8.632795]]], dtype = "float32")#candidate|857|(10, 14, 1)|const|float32
bop_858 = relay.floor_mod(var_856.astype('float32'), relay.reshape(const_857.astype('float32'), relay.shape_of(var_856))) # shape=(10, 14, 1)
const_869 = relay.const([[[1.417558],[7.942111],[-0.540574],[-9.627645],[-3.013866],[6.415047],[5.118738],[4.396045],[-1.376641],[0.584962],[5.036055],[1.687981],[-5.765044],[5.259898]],[[-7.565188],[9.373044],[-7.209432],[3.997077],[1.991988],[4.842305],[-9.254086],[1.158051],[-4.719025],[-4.790273],[-6.135479],[5.159480],[-9.913143],[-2.974621]],[[8.654057],[-6.524364],[-8.950070],[5.753041],[6.962210],[2.129820],[5.686391],[-0.551423],[-4.807098],[2.296558],[-1.933159],[3.283272],[-7.614977],[-1.511487]],[[6.199262],[8.605062],[2.644686],[-2.319047],[-6.876706],[-2.697863],[0.268473],[-3.470386],[-7.546788],[-2.583858],[-8.699915],[4.441382],[0.970299],[-1.285960]],[[4.939349],[-6.828689],[9.674430],[2.218583],[-0.322221],[-5.002777],[-0.312271],[-6.575842],[5.370100],[-6.545964],[9.957414],[-5.276305],[-5.714544],[3.568261]],[[-0.950520],[4.072253],[-3.103680],[-2.882601],[-1.711233],[-3.284062],[-6.091031],[7.235032],[4.222615],[-5.293023],[-7.824491],[-1.292658],[8.054759],[-1.649661]],[[-7.439443],[1.650458],[0.822500],[1.405147],[-8.381914],[9.165826],[8.982136],[9.216654],[-1.086132],[-7.420295],[-6.806498],[-3.101761],[4.799579],[6.602214]],[[5.851622],[8.297549],[7.774376],[-9.752891],[9.981985],[-7.437691],[-0.835009],[-1.324210],[-1.236371],[2.300811],[-5.566118],[-5.314822],[-0.287921],[-4.203152]],[[-5.527316],[-9.330155],[5.241625],[3.142270],[-1.913815],[2.519464],[7.310216],[0.883824],[5.333133],[-7.587323],[-4.440042],[-9.233287],[1.332257],[8.209650]],[[-8.796714],[-0.523581],[7.970718],[-1.011161],[-3.375122],[3.982298],[-9.071585],[-1.972066],[3.967736],[7.149786],[-2.738046],[-4.319983],[2.349023],[4.025256]]], dtype = "float32")#candidate|869|(10, 14, 1)|const|float32
bop_870 = relay.maximum(var_856.astype('uint16'), relay.reshape(const_869.astype('uint16'), relay.shape_of(var_856))) # shape=(10, 14, 1)
func_225_call = mod.get_global_var('func_225')
func_227_call = mutated_mod.get_global_var('func_227')
var_890 = relay.var("var_890", dtype = "uint64", shape = (1755,))#candidate|890|(1755,)|var|uint64
call_889 = relay.TupleGetItem(func_225_call(relay.reshape(var_890.astype('uint64'), [9, 13, 15])), 2)
call_891 = relay.TupleGetItem(func_227_call(relay.reshape(var_890.astype('uint64'), [9, 13, 15])), 2)
func_384_call = mod.get_global_var('func_384')
func_387_call = mutated_mod.get_global_var('func_387')
const_894 = relay.const([4.761503,-1.359510,2.391017,3.808015,-1.482612,0.286816,-6.680000,-6.281218,-3.691882,8.897403,1.054959,-8.227495,6.932230,-7.371760,-4.547163,4.914140,9.148519,9.002137,-8.870587,2.096133,-1.055703,7.692631,5.436068,2.268194,9.325812,-1.133390,-5.795448,-0.258648,-8.544636,-5.957098,-4.811527,9.964242,4.457865,-5.475118,2.329416,-5.169573,-8.104616,-4.068082,-3.018564,9.995289,-1.883817,-9.090344,4.880667,6.847543,6.378514,-2.022607,7.228919,2.280329], dtype = "float32")#candidate|894|(48,)|const|float32
call_893 = relay.TupleGetItem(func_384_call(relay.reshape(const_894.astype('float32'), [16, 3, 1]), relay.reshape(call_889.astype('bool'), [1248,]), ), 0)
call_895 = relay.TupleGetItem(func_387_call(relay.reshape(const_894.astype('float32'), [16, 3, 1]), relay.reshape(call_889.astype('bool'), [1248,]), ), 0)
output = relay.Tuple([bop_858,bop_870,call_889,var_890,call_893,const_894,])
output2 = relay.Tuple([bop_858,bop_870,call_891,var_890,call_895,const_894,])
func_896 = relay.Function([var_856,var_890,], output)
mod['func_896'] = func_896
mod = relay.transform.InferType()(mod)
var_897 = relay.var("var_897", dtype = "float32", shape = (10, 14, 1))#candidate|897|(10, 14, 1)|var|float32
var_898 = relay.var("var_898", dtype = "uint64", shape = (1755,))#candidate|898|(1755,)|var|uint64
output = func_896(var_897,var_898,)
func_899 = relay.Function([var_897,var_898,], output)
mutated_mod['func_899'] = func_899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_901 = relay.var("var_901", dtype = "float64", shape = (1, 11, 3))#candidate|901|(1, 11, 3)|var|float64
uop_902 = relay.asinh(var_901.astype('float64')) # shape=(1, 11, 3)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
var_906 = relay.var("var_906", dtype = "bool", shape = (1248,))#candidate|906|(1248,)|var|bool
call_905 = relay.TupleGetItem(func_93_call(relay.reshape(var_906.astype('bool'), [13, 12, 8])), 0)
call_907 = relay.TupleGetItem(func_96_call(relay.reshape(var_906.astype('bool'), [13, 12, 8])), 0)
func_896_call = mod.get_global_var('func_896')
func_899_call = mutated_mod.get_global_var('func_899')
var_954 = relay.var("var_954", dtype = "float32", shape = (140, 1))#candidate|954|(140, 1)|var|float32
const_955 = relay.const([5,-8,4,3,-5,4,4,-7,9,-5,2,-9,-2,7,9,1,-6,6,-8,-1,-1,8,-4,2,-5,-2,-4,9,1,8,-1,-3,7,-7,10,7,-5,-7,-1,2,-5,-2,-7,-2,8,8,8,-6,-1,-9,3,2,-10,6,-7,7,5,2,-2,-2,-6,-10,2,-9,-1,3,4,-3,-4,6,-9,5,4,-8,2,7,-10,4,6,-4,2,4,-3,-8,6,-8,9,-1,-1,-9,10,-4,-6,-4,-10,9,8,-5,10,9,9,3,3,1,4,8,8,6,-10,6,1,-1,-9,-9,2,-7,7,9,3,-3,-9,-10,-5,-1,-9,5,2,-8,-2,2,-6,5,8,-1,-5,7,-5,3,5,3,10,-1,-3,5,-7,9,5,-5,1,5,10,10,-9,7,6,8,-9,-8,10,-8,-10,10,-5,10,3,-10,7,2,2,2,9,-3,8,1,-3,-7,-7,8,-2,-6,6,-1,7,-9,-1,6,-10,10,-8,-8,-9,-4,1,-8,4,9,-9,1,4,-4,2,6,-9,-1,-5,-2,3,-1,-9,9,-3,3,1,-10,5,-9,-6,-10,9,-3,-10,1,2,8,-2,-7,7,9,-4,-10,-2,10,4,-2,1,9,2,-5,-3,8,-1,-2,-4,4,-9,1,-3,-9,10,10,-9,-3,9,9,-2,-7,1,9,8,5,8,-9,6,-10,1,8,-8,-5,10,7,9,2,1,7,-7,-9,8,-7,-9,-9,-8,-2,-9,-1,9,10,2,-9,-5,4,-7,-6,4,9,4,-4,6,-7,3,5,-6,9,7,10,-4,-4,1,6,-7,9,-5,-2,-10,-6,-4,2,-6,-7,9,-6,4,-4,2,-10,-6,-8,3,2,6,-4,-10,2,7,10,-7,-1,-6,5,6,5,-6,5,-3,-1,-8,3,3,-8,5,8,-6,-4,-3,-10,-6,-5,10,-2,-8,3,-9,-5,-2,-3,-3,-10,10,-1,4,-4,-8,3,-8,2,9,3,4,10,-3,4,6,4,5,-8,9,-9,10,7,-6,-5,8,3,-8,-9,-6,10,4,-7,-1,10,-7,-9,1,-7,6,-2,-2,8,7,-2,8,-4,-5,-1,-6,-6,-10,-1,10,-9,-2,3,-7,-3,-8,-9,6,-7,4,9,1,-4,10,-5,3,-9,7,6,-4,-10,3,-7,3,-2,-3,9,-6,-8,-6,9,7,6,-1,-1,3,-5,3,7,-7,-4,-2,8,-6,6,-9,3,2,-1,-4,-8,-4,-3,-7,2,1,-6,-1,-3,-1,8,4,6,-3,-1,-1,-3,-1,1,-9,4,1,3,2,-6,4,3,-7,4,-7,-8,3,3,-10,-4,9,8,-7,1,-8,-4,-3,2,5,-2,10,-1,3,-9,-8,1,2,-7,-2,-10,-7,3,-1,-2,1,-9,5,-6,-1,3,-1,-9,2,1,4,4,-6,-1,-4,-3,8,7,-1,-4,-1,4,-1,-4,8,-9,-9,-4,-2,1,-8,2,-6,1,-4,-2,2,-9,-8,6,-8,-8,7,-3,-7,-6,1,-2,5,-6,10,5,3,-7,-7,-7,-9,4,-7,7,-3,10,9,3,-7,6,-5,1,5,1,10,-8,4,-7,1,4,6,-10,-10,-10,9,6,7,6,-5,5,-4,4,-7,9,-6,-5,-1,-7,5,-7,3,2,9,1,2,9,9,6,-6,-7,9,5,5,8,9,-6,-9,10,6,-3,-9,6,10,5,6,8,-4,-5,5,8,-1,6,-3,-9,2,-7,8,9,7,4,8,1,5,8,9,5,2,-1,2,6,-4,2,-8,10,7,-1,5,6,7,-1,-1,6,10,2,9,-5,-3,-7,-10,-8,-8,-1,-10,5,2,-4,4,8,-9,-7,6,-3,9,-2,6,5,9,-9,4,8,9,10,-2,-9,-7,-1,-8,-4,6,-5,5,8,-7,-5,-2,8,-3,-7,5,9,-4,-8,7,-9,-7,-7,6,6,-4,-8,-4,-8,-5,3,2,-5,-2,-9,5,4,-6,-4,-6,-10,1,-7,-4,-1,1,-2,-6,9,8,-1,-10,4,-5,10,9,2,-8,7,3,3,-4,4,10,9,3,-2,6,1,-4,-3,-1,-5,5,10,-9,-9,-8,4,10,7,-5,8,-2,-3,8,-9,2,-7,-5,-4,-10,9,7,5,7,3,-10,3,8,8,1,-6,-3,-1,-9,-5,9,-6,-9,6,-2,10,-9,-6,9,4,3,-5,2,5,1,2,-7,-6,9,4,10,7,-7,6,-7,5,2,-6,-6,-10,2,6,-10,8,6,-3,6,-6,3,10,-4,-7,5,-5,-4,-7,-6,-6,7,8,-5,-10,2,-7,-9,2,2,-2,-5,-7,3,-5,-10,7,-6,1,-5,6,6,-10,-8,8,4,-6,-10,-7,-10,-6,-5,6,-8,-5,-9,-10,-4,-9,7,-4,-1,9,5,6,8,4,3,-7,8,-3,4,-3,8,-3,-3,-5,7,-6,9,8,2,-5,3,-5,5,-9,5,-7,5,-5,7,1,-3,-6,6,4,-5,4,-10,-10,-9,5,-10,7,2,-4,-4,-3,-3,-3,-3,9,-7,-8,2,-3,-5,-6,-1,-2,7,-4,-2,-1,-7,4,-5,-2,5,-9,-5,7,1,9,-6,-8,7,-7,-10,4,7,1,-2,-2,2,4,-4,-9,6,-8,1,7,-8,8,7,9,-1,-5,3,2,1,-3,6,-1,-2,-5,4,10,10,-2,-2,-10,9,-6,5,8,-3,-8,-4,1,7,-8,2,3,-8,9,-5,-10,4,-9,-5,4,7,-7,2,-7,-6,10,-5,-9,9,2,7,-10,-10,-2,5,3,8,3,9,-9,-6,-4,3,3,-1,5,7,-1,-4,3,10,1,7,-10,-3,5,7,10,5,3,8,-6,-5,5,-1,-9,6,9,-4,-4,-7,6,-10,-7,10,1,-9,-7,5,6,-10,-6,-6,2,5,7,-4,-7,1,-9,3,-1,8,-7,-9,10,-7,-6,3,-3,3,-10,4,3,-1,-6,-6,-9,6,9,8,-3,-6,-9,8,-5,1,9,-3,9,-7,-2,-4,9,-8,3,8,2,6,10,3,-4,3,10,-8,-3,5,-9,-8,-9,7,-2,-10,6,8,-2,5,5,-1,-5,-3,-3,-6,9,1,8,-10,10,7,-7,-5,-3,-5,10,3,-5,4,7,2,-1,2,10,2,-3,9,-3,1,5,-6,1,10,8,-6,3,-8,1,-8,3,5,10,-8,-8,-2,-6,-10,8,3,-6,-10,6,-5,-10,-10,-4,1,-8,-8,-9,-1,-9,-9,1,-4,2,-5,-1,-7,-5,6,-3,5,5,10,-4,-6,-2,-9,-1,-9,6,-3,-6,10,1,-3,10,-8,1,-8,6,5,10,-10,-6,6,-7,-9,-1,-6,-4,7,-9,10,2,3,3,-6,2,6,9,10,-10,8,-7,-4,-5,4,7,-2,-1,6,4,8,10,-6,3,2,4,-5,-4,3,-1,3,-2,-6,1,8,2,1,-8,-10,2,4,-1,8,-9,7,9,-9,-5,3,-5,-1,-5,-10,1,5,1,1,10,9,10,3,-6,-10,5,8,4,-8,4,-3,-5,8,8,10,-9,-1,-3,-10,-7,9,-6,2,8,9,8,-7,-10,1,-4,-8,-7,6,1,10,-10,10,8,4,-3,-8,-4,-6,-9,2,9,10,9,8,4,8,9,-8,3,2,6,9,-4,8,-5,7,-10,-1,-3,-9,-9,10,6,-4,3,-4,-8,3,-1,5,1,9,-1,10,-7,2,5,-3,-2,-9,5,-6,-10,4,9,-5,-1,2,5,7,-1,10,-1,-7,10,-9,-3,9,-5,-5,2,5,-6,-7,-6,-5,-3,3,7,-6,9,-3,10,8,-7,-10,-6,-4,9,-3,8,-4,-2,3,-8,-6,4,-9,-3,2,1,7,-4,-10,-6,9,-3,-5,1,-4,-8,-6,-10,-9,-4,-1,2,4,2,-8,-7,2,-2,-6,-4,-2,1,-7,4,3,8,5,-5,5,-3,4,1,-1,-3,-8,9,1,7,-10,7,-1,9,-4,-6,-10,5,-10,-1,1,-10,-1,8,-9,-2,-8,-2,6,6,6,1,3,-3,2,4,6,-2,-4,-10,7,-10,3,-3,-5,-8,-5,10,-5,-10,5,-10,-9,1,-5,6,5,7,10,-4,3,10,3,3,-3,4,-7,10,-1,9,1,7,1,-3,-8,-8,1,6,-7,1,-3,7,-1,6,-7,-7,-2,4,2,8,4,-10,5,-8,-6,2,4,-9,-6,7,4,4,2,-1,7,4,-7,-8,-10,-7,-5,-6,-8,-6,-10,10,8,-9,-3,-5,-2,-2,5,3,6,2,9,-2,10,3,-10,-3,-8,9,3,-4,6,5,-7,5,-6,-7,-4,2,-7,-4,-8,5,7,9,-1,4,10,9,8,3,2,9,-10,-7,-7,-6,-8,-3,9,5,-7,-7,10,4,-1,-4,-8,-6,5,7,-6,7,8,-9,1,6,4,-5,-3,-4,10,5,10,-8,9,-9,10,7,7,6,-9,-8,-8,-9,3,-5,-1,1,-4,-8,-4,-7,2,-6,-1,7,-3,-5,7,3,-7,-5,9,-8,6,-7,3,-9,-8,-4,-5,1,5,10,9,-5,2,-3,-7,5,8,-4,-3,-6,7,-2,-10,-10,-8,-8,-6,3,3,10,-8,-3,-4], dtype = "uint64")#candidate|955|(1755,)|const|uint64
call_953 = relay.TupleGetItem(func_896_call(relay.reshape(var_954.astype('float32'), [10, 14, 1]), relay.reshape(const_955.astype('uint64'), [1755,]), ), 3)
call_956 = relay.TupleGetItem(func_899_call(relay.reshape(var_954.astype('float32'), [10, 14, 1]), relay.reshape(const_955.astype('uint64'), [1755,]), ), 3)
output = relay.Tuple([uop_902,call_905,var_906,call_953,var_954,const_955,])
output2 = relay.Tuple([uop_902,call_907,var_906,call_956,var_954,const_955,])
func_962 = relay.Function([var_901,var_906,var_954,], output)
mod['func_962'] = func_962
mod = relay.transform.InferType()(mod)
var_963 = relay.var("var_963", dtype = "float64", shape = (1, 11, 3))#candidate|963|(1, 11, 3)|var|float64
var_964 = relay.var("var_964", dtype = "bool", shape = (1248,))#candidate|964|(1248,)|var|bool
var_965 = relay.var("var_965", dtype = "float32", shape = (140, 1))#candidate|965|(140, 1)|var|float32
output = func_962(var_963,var_964,var_965,)
func_966 = relay.Function([var_963,var_964,var_965,], output)
mutated_mod['func_966'] = func_966
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1271 = relay.const([[[3.724691,-9.701339,-2.277474],[9.096404,-7.150633,-9.876809],[5.589404,6.986393,4.732509],[2.169338,1.860584,2.422666],[-1.818436,-1.751625,-0.712138],[-2.056336,-6.849578,9.497687],[4.650828,0.052260,-7.274474],[-7.620985,-4.681205,-3.574389],[2.331694,6.779859,0.205460],[2.639471,-3.306018,1.700774],[6.383089,-9.491031,-8.188513],[-3.232687,-6.635659,6.581512]],[[-1.820642,-0.505578,3.139374],[-5.838142,-7.488123,2.996154],[-3.232626,3.495957,5.765707],[6.873531,-2.818693,-7.377565],[8.376562,2.152080,-9.979065],[9.927706,-2.112396,-3.881984],[-0.613902,5.981982,-4.699832],[-6.598388,9.953115,3.904879],[7.708866,8.269233,-6.368555],[-2.797857,8.509643,4.458547],[5.731483,-4.093659,-5.392831],[5.735325,9.741864,-0.508097]],[[-3.301476,-9.898266,-4.351385],[-7.854584,-8.113242,-6.302762],[3.147763,-6.580354,-8.020426],[2.177553,-1.541353,2.021059],[-6.411413,0.751058,2.328569],[0.277835,7.155573,1.176757],[2.468942,6.599962,-6.126503],[-7.251757,-8.279196,-5.526380],[-7.246686,-3.208689,0.385669],[4.062450,2.760305,8.399341],[-9.248976,-5.058837,-3.971555],[-5.212051,8.122752,6.963884]],[[4.706927,6.011114,-7.130695],[-6.493734,9.509718,-8.553412],[-2.606605,-1.467912,-4.910877],[2.430327,-9.769005,-2.528501],[5.589191,-4.807677,-6.294606],[-4.940014,8.808402,-2.569610],[4.379276,-1.890227,1.219845],[4.574687,9.220129,6.405697],[5.293705,-3.827543,-6.107147],[-1.110733,9.530877,-2.379371],[-9.024169,0.095208,3.678592],[-7.966361,-2.280621,1.782506]],[[8.558015,-4.213003,4.273682],[-7.449509,-6.305870,-5.861476],[-8.814037,-0.132966,-8.346244],[9.687113,-6.657285,-2.460726],[-9.743394,-4.386801,-7.854470],[1.795812,3.102693,-5.835263],[6.152771,4.924554,9.602335],[0.348386,9.469272,-6.066149],[-1.706001,-2.625719,-6.633984],[-6.432447,3.089313,-5.623618],[7.231540,3.404944,0.575521],[3.509085,0.403303,-0.419869]],[[-4.702890,-2.170810,7.127251],[8.505975,-6.750191,-5.856859],[6.958030,-0.316372,-0.805851],[-1.522225,-9.232283,-0.633236],[3.496458,-6.168830,-0.193961],[0.083697,-9.131857,-3.249074],[-9.780695,-8.526045,-1.734514],[-7.529566,9.473186,-6.248518],[4.207511,6.149978,0.944747],[5.666500,0.351398,2.249232],[-6.557768,8.257470,-9.156458],[-2.659154,0.097253,5.261686]],[[-2.622017,1.450921,-7.819599],[7.120720,-0.053835,1.567480],[-5.150988,-3.475643,7.839093],[5.475606,3.529020,-0.162747],[4.336820,-4.159785,3.804749],[-6.884742,7.051470,-5.192962],[4.148996,5.786686,-5.906212],[9.538919,1.778403,8.568832],[4.099355,-4.767755,8.839493],[-8.605243,-8.229894,1.275377],[0.205987,4.657118,-9.183823],[-5.627623,2.091195,9.482013]],[[2.726292,-2.497617,2.766921],[7.801609,-8.836008,2.587180],[-7.868245,-1.242820,-3.482854],[3.787853,0.062866,3.963858],[-4.358329,-1.187740,9.295369],[9.093360,-4.276844,-8.503638],[2.646370,9.704520,5.457698],[0.502739,-8.762484,-4.946196],[-6.489616,-8.449590,-5.446284],[7.914657,-0.416459,-9.755410],[6.932718,-7.818088,0.117063],[5.053880,-5.232284,6.651882]],[[0.565691,5.011110,-9.706065],[1.340829,3.515858,1.706126],[0.084527,-8.181722,-8.783171],[1.417177,5.973182,1.776272],[-4.619989,5.986011,0.672501],[8.784610,-7.824373,5.288074],[-7.859461,7.350525,-6.899197],[-8.970737,3.356082,8.840644],[4.527612,1.067057,-9.276614],[-9.874630,-2.222101,3.173589],[-9.128108,-8.246609,-5.558830],[5.467546,-1.656322,-2.924206]],[[2.715424,-3.628065,-8.425312],[-2.066254,0.737759,-6.129911],[1.279436,-1.515741,-0.905629],[7.895587,-5.029775,3.006877],[1.567435,-0.412089,2.997891],[0.975588,7.722152,1.434781],[9.901503,4.192413,-8.000469],[2.548500,-4.237416,2.190535],[8.155184,4.300091,-0.784519],[-3.565777,-4.430919,-6.768429],[-8.761095,-5.699136,8.197866],[7.625541,-6.723658,0.782482]],[[-2.204766,-2.512705,4.320395],[8.560280,-7.369271,-9.068903],[-9.655346,3.769628,1.500531],[-1.557799,0.050606,8.259861],[6.224257,7.123960,-6.225568],[-9.797314,0.200717,7.872964],[-5.321492,-8.074265,-4.435725],[2.732934,6.448792,8.557261],[-1.418845,-0.197987,-2.690173],[8.736275,-2.246722,2.769112],[7.893901,2.637508,-0.723599],[6.991119,-5.589421,-6.333298]],[[6.683008,4.071121,-0.597652],[7.786553,-5.156185,-0.126532],[-1.312526,-0.591641,-9.392940],[5.222092,9.915467,3.762609],[5.339499,-6.798312,-3.718186],[-1.427853,5.738522,-3.531080],[-3.735625,-1.976637,-3.722489],[-7.282843,-8.120311,3.463473],[-0.094493,0.713989,-7.257977],[-0.811745,1.942860,3.496301],[4.964303,0.334115,7.684919],[-1.317544,-0.903465,-6.611478]],[[8.563865,5.061065,-3.105765],[-3.764905,1.185610,-2.545061],[-3.300842,6.496714,-8.290619],[3.078719,9.165033,-8.214106],[0.892801,-6.356706,5.143569],[-6.166743,2.111244,0.427902],[-1.829264,4.458409,0.743625],[2.811896,-0.237195,5.129469],[7.578337,-8.145301,-0.614875],[3.009254,0.801232,1.863887],[8.930840,9.044693,6.340059],[-0.298717,-7.232437,5.949376]],[[6.053148,-0.558274,9.873769],[-3.215808,-7.874901,1.160755],[2.554404,-9.044885,8.519993],[-6.141909,2.395887,0.988418],[-3.197982,0.872452,0.632038],[-5.287848,0.801524,-5.859477],[-5.561044,-4.257930,2.793809],[2.952424,-8.918098,6.888935],[3.072915,-3.829582,6.720467],[1.090725,0.242560,7.861476],[4.558696,-4.531172,-5.528767],[-2.347733,8.761784,9.717192]],[[-1.216012,-2.556068,9.359006],[-2.154388,0.536503,0.068464],[8.810171,-5.213296,1.689422],[7.944616,6.190964,-0.431874],[5.697842,-0.179284,6.983761],[4.355460,0.105383,-7.407807],[-0.767384,5.510752,-2.329057],[-2.238776,-3.779680,-8.909213],[-9.696797,-5.501345,5.452135],[5.609437,5.839849,-9.190943],[-9.913385,9.672484,2.287458],[-4.090695,-9.812218,1.555422]],[[-0.785802,-1.087100,-4.654173],[8.964083,3.700048,-4.123813],[-3.385050,2.481869,8.618576],[-5.860710,6.122049,5.510457],[1.643554,-1.556001,-6.050943],[-5.303016,-9.021010,1.616100],[-7.298724,5.529742,-4.079864],[-9.436858,-3.018830,0.940015],[7.395915,1.178332,3.432901],[7.260611,-9.607029,-2.073320],[7.976686,7.130873,-0.911830],[-4.259851,5.340042,-0.078149]]], dtype = "float64")#candidate|1271|(16, 12, 3)|const|float64
uop_1272 = relay.sigmoid(const_1271.astype('float64')) # shape=(16, 12, 3)
uop_1297 = relay.exp(const_1271.astype('float32')) # shape=(16, 12, 3)
var_1303 = relay.var("var_1303", dtype = "float32", shape = (16, 12, 3))#candidate|1303|(16, 12, 3)|var|float32
bop_1304 = relay.floor_divide(uop_1297.astype('float32'), relay.reshape(var_1303.astype('float32'), relay.shape_of(uop_1297))) # shape=(16, 12, 3)
uop_1322 = relay.atanh(uop_1272.astype('float64')) # shape=(16, 12, 3)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
const_1331 = relay.const([False,False,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True], dtype = "bool")#candidate|1331|(1248,)|const|bool
call_1330 = relay.TupleGetItem(func_93_call(relay.reshape(const_1331.astype('bool'), [13, 12, 8])), 1)
call_1332 = relay.TupleGetItem(func_96_call(relay.reshape(const_1331.astype('bool'), [13, 12, 8])), 1)
uop_1343 = relay.rsqrt(uop_1322.astype('float64')) # shape=(16, 12, 3)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
call_1347 = relay.TupleGetItem(func_93_call(relay.reshape(call_1330.astype('bool'), [13, 12, 8])), 0)
call_1348 = relay.TupleGetItem(func_96_call(relay.reshape(call_1330.astype('bool'), [13, 12, 8])), 0)
bop_1351 = relay.bitwise_xor(uop_1322.astype('int16'), relay.reshape(var_1303.astype('int16'), relay.shape_of(uop_1322))) # shape=(16, 12, 3)
output = relay.Tuple([bop_1304,call_1330,const_1331,uop_1343,call_1347,bop_1351,])
output2 = relay.Tuple([bop_1304,call_1332,const_1331,uop_1343,call_1348,bop_1351,])
func_1357 = relay.Function([var_1303,], output)
mod['func_1357'] = func_1357
mod = relay.transform.InferType()(mod)
mutated_mod['func_1357'] = func_1357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1358 = relay.var("var_1358", dtype = "float32", shape = (16, 12, 3))#candidate|1358|(16, 12, 3)|var|float32
func_1357_call = mutated_mod.get_global_var('func_1357')
call_1359 = func_1357_call(var_1358)
output = call_1359
func_1360 = relay.Function([var_1358], output)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1486 = relay.var("var_1486", dtype = "float32", shape = (12, 16, 16))#candidate|1486|(12, 16, 16)|var|float32
uop_1487 = relay.atanh(var_1486.astype('float32')) # shape=(12, 16, 16)
output = relay.Tuple([uop_1487,])
output2 = relay.Tuple([uop_1487,])
func_1502 = relay.Function([var_1486,], output)
mod['func_1502'] = func_1502
mod = relay.transform.InferType()(mod)
var_1503 = relay.var("var_1503", dtype = "float32", shape = (12, 16, 16))#candidate|1503|(12, 16, 16)|var|float32
output = func_1502(var_1503)
func_1504 = relay.Function([var_1503], output)
mutated_mod['func_1504'] = func_1504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1563 = relay.var("var_1563", dtype = "float64", shape = ())#candidate|1563|()|var|float64
var_1564 = relay.var("var_1564", dtype = "float64", shape = (2, 12, 10))#candidate|1564|(2, 12, 10)|var|float64
bop_1565 = relay.power(var_1563.astype('float64'), var_1564.astype('float64')) # shape=(2, 12, 10)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
const_1569 = relay.const([False,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True], dtype = "bool")#candidate|1569|(1248,)|const|bool
call_1568 = relay.TupleGetItem(func_93_call(relay.reshape(const_1569.astype('bool'), [13, 12, 8])), 1)
call_1570 = relay.TupleGetItem(func_96_call(relay.reshape(const_1569.astype('bool'), [13, 12, 8])), 1)
output = relay.Tuple([bop_1565,call_1568,const_1569,])
output2 = relay.Tuple([bop_1565,call_1570,const_1569,])
func_1577 = relay.Function([var_1563,var_1564,], output)
mod['func_1577'] = func_1577
mod = relay.transform.InferType()(mod)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1577_call = mutated_mod.get_global_var('func_1577')
var_1579 = relay.var("var_1579", dtype = "float64", shape = ())#candidate|1579|()|var|float64
var_1580 = relay.var("var_1580", dtype = "float64", shape = (2, 12, 10))#candidate|1580|(2, 12, 10)|var|float64
call_1578 = func_1577_call(var_1579,var_1580,)
output = call_1578
func_1581 = relay.Function([var_1579,var_1580,], output)
mutated_mod['func_1581'] = func_1581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1845 = relay.var("var_1845", dtype = "float32", shape = (9, 5, 6))#candidate|1845|(9, 5, 6)|var|float32
uop_1846 = relay.cos(var_1845.astype('float32')) # shape=(9, 5, 6)
output = uop_1846
output2 = uop_1846
func_1863 = relay.Function([var_1845,], output)
mod['func_1863'] = func_1863
mod = relay.transform.InferType()(mod)
var_1864 = relay.var("var_1864", dtype = "float32", shape = (9, 5, 6))#candidate|1864|(9, 5, 6)|var|float32
output = func_1863(var_1864)
func_1865 = relay.Function([var_1864], output)
mutated_mod['func_1865'] = func_1865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2191 = relay.var("var_2191", dtype = "float64", shape = (15, 10, 8))#candidate|2191|(15, 10, 8)|var|float64
uop_2192 = relay.acos(var_2191.astype('float64')) # shape=(15, 10, 8)
func_1577_call = mod.get_global_var('func_1577')
func_1581_call = mutated_mod.get_global_var('func_1581')
const_2195 = relay.const(-5.329781, dtype = "float64")#candidate|2195|()|const|float64
var_2196 = relay.var("var_2196", dtype = "float64", shape = (240,))#candidate|2196|(240,)|var|float64
call_2194 = relay.TupleGetItem(func_1577_call(relay.reshape(const_2195.astype('float64'), []), relay.reshape(var_2196.astype('float64'), [2, 12, 10]), ), 2)
call_2197 = relay.TupleGetItem(func_1581_call(relay.reshape(const_2195.astype('float64'), []), relay.reshape(var_2196.astype('float64'), [2, 12, 10]), ), 2)
uop_2205 = relay.tan(uop_2192.astype('float64')) # shape=(15, 10, 8)
output = relay.Tuple([call_2194,const_2195,var_2196,uop_2205,])
output2 = relay.Tuple([call_2197,const_2195,var_2196,uop_2205,])
func_2211 = relay.Function([var_2191,var_2196,], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mutated_mod.get_global_var('func_2211')
var_2213 = relay.var("var_2213", dtype = "float64", shape = (15, 10, 8))#candidate|2213|(15, 10, 8)|var|float64
var_2214 = relay.var("var_2214", dtype = "float64", shape = (240,))#candidate|2214|(240,)|var|float64
call_2212 = func_2211_call(var_2213,var_2214,)
output = call_2212
func_2215 = relay.Function([var_2213,var_2214,], output)
mutated_mod['func_2215'] = func_2215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2373 = relay.var("var_2373", dtype = "float32", shape = (13, 10, 4))#candidate|2373|(13, 10, 4)|var|float32
var_2374 = relay.var("var_2374", dtype = "float32", shape = (13, 10, 4))#candidate|2374|(13, 10, 4)|var|float32
bop_2375 = relay.not_equal(var_2373.astype('bool'), relay.reshape(var_2374.astype('bool'), relay.shape_of(var_2373))) # shape=(13, 10, 4)
func_1863_call = mod.get_global_var('func_1863')
func_1865_call = mutated_mod.get_global_var('func_1865')
var_2386 = relay.var("var_2386", dtype = "float32", shape = (6, 45))#candidate|2386|(6, 45)|var|float32
call_2385 = func_1863_call(relay.reshape(var_2386.astype('float32'), [9, 5, 6]))
call_2387 = func_1863_call(relay.reshape(var_2386.astype('float32'), [9, 5, 6]))
output = relay.Tuple([bop_2375,call_2385,var_2386,])
output2 = relay.Tuple([bop_2375,call_2387,var_2386,])
func_2392 = relay.Function([var_2373,var_2374,var_2386,], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
mutated_mod['func_2392'] = func_2392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2392_call = mutated_mod.get_global_var('func_2392')
var_2394 = relay.var("var_2394", dtype = "float32", shape = (13, 10, 4))#candidate|2394|(13, 10, 4)|var|float32
var_2395 = relay.var("var_2395", dtype = "float32", shape = (13, 10, 4))#candidate|2395|(13, 10, 4)|var|float32
var_2396 = relay.var("var_2396", dtype = "float32", shape = (6, 45))#candidate|2396|(6, 45)|var|float32
call_2393 = func_2392_call(var_2394,var_2395,var_2396,)
output = call_2393
func_2397 = relay.Function([var_2394,var_2395,var_2396,], output)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2661 = relay.var("var_2661", dtype = "uint16", shape = ())#candidate|2661|()|var|uint16
var_2662 = relay.var("var_2662", dtype = "uint16", shape = (2, 13, 2))#candidate|2662|(2, 13, 2)|var|uint16
bop_2663 = relay.greater_equal(var_2661.astype('bool'), var_2662.astype('bool')) # shape=(2, 13, 2)
func_2392_call = mod.get_global_var('func_2392')
func_2397_call = mutated_mod.get_global_var('func_2397')
var_2680 = relay.var("var_2680", dtype = "float32", shape = (520,))#candidate|2680|(520,)|var|float32
const_2681 = relay.const([4.191303,8.187438,-4.551008,-4.631986,-9.901764,4.647775,5.999671,-9.481725,8.042972,6.986459,-0.813851,-8.857370,1.066213,-2.651371,-6.265323,1.267587,7.787371,1.731569,-5.936087,-6.963245,8.594677,-3.083830,8.044098,-9.339245,9.127210,3.687362,3.078730,5.810142,-0.631717,2.224590,9.861577,-5.958504,7.999449,-1.373457,5.693388,2.341066,-7.625134,6.162402,-5.364218,-8.895957,1.391979,8.573730,4.290038,-3.645852,-9.517146,-8.213021,-7.883198,-1.960255,3.319881,6.694561,-1.757448,6.124983,-6.496554,-7.412732,-7.500893,-1.186698,-3.970856,-0.048776,1.906080,1.190093,-9.556443,7.599389,8.838498,6.489430,-8.125632,2.872688,8.435125,4.629941,-1.958481,-2.872868,0.382503,-6.645225,-1.814328,1.078598,3.600994,-7.556321,8.261532,0.715524,2.280968,7.124602,5.451558,-1.878500,3.261999,8.156976,4.217332,7.079111,-6.498654,5.226097,-0.199300,-4.016688,6.238862,-1.386714,-1.139308,1.241440,-9.314922,3.226129,-3.130248,-6.716385,-9.925030,5.716860,5.150894,-4.017496,-6.191985,-6.639698,-3.379100,7.550286,2.697731,-3.799449,3.111831,-4.943655,-0.280810,7.139870,2.837009,3.947724,0.816228,-6.978840,1.264928,7.244920,-5.261559,-1.241690,-1.351441,-9.161198,6.698371,-6.403454,2.864283,-0.808370,-3.678939,-5.617850,5.954609,0.680550,-3.965261,4.190128,-4.507680,5.898392,1.911873,-2.278203,9.854500,5.577652,2.940605,8.409378,-4.588211,7.167413,-5.718186,1.578005,0.174595,-1.231293,-6.922864,0.546426,-6.449044,5.513542,-5.051110,-4.417913,-9.232970,3.696923,9.208128,-7.799986,-5.148772,-6.651749,2.547619,7.360251,0.624221,-5.048206,2.677941,-4.087946,1.366067,9.176967,6.560512,2.897433,-3.076413,-1.194849,-0.546393,4.770960,-0.609495,2.860761,8.856551,-7.749853,-0.131087,-6.762057,-5.019333,-9.176442,-5.541904,8.614024,6.162376,-8.971334,2.928614,0.983910,4.595975,0.207239,-4.739166,-4.199216,1.359990,-5.975806,3.608306,0.936134,-7.601940,4.528832,-2.040423,-8.684855,-8.138288,7.763791,1.810247,8.639488,5.086479,-1.103984,7.478565,-8.627589,4.797953,-6.183773,7.559243,-8.467775,4.600909,1.440430,7.415298,8.662257,-9.053971,3.873875,5.316203,-9.054871,7.133685,2.095868,0.005575,3.954917,-6.035894,-0.118968,-7.194454,3.366573,-6.240173,4.149269,4.400204,2.705080,9.929543,3.637767,3.669150,9.959125,9.683600,3.545554,-3.870162,0.390996,8.049513,9.467984,0.785091,2.485642,6.274565,3.258312,-4.106579,-0.104817,7.438542,-3.447518,7.213524,-9.021653,-7.979759,-3.209680,-0.988975,-5.278704,9.325749,5.611053,-3.278927,-5.709074,3.447033,-4.386894,5.964226,7.921032,3.684175,2.221543,-3.651289,1.563467,-2.488018,6.790233,4.442009,-3.681365], dtype = "float32")#candidate|2681|(270,)|const|float32
call_2679 = relay.TupleGetItem(func_2392_call(relay.reshape(var_2680.astype('float32'), [13, 10, 4]), relay.reshape(var_2680.astype('float32'), [13, 10, 4]), relay.reshape(const_2681.astype('float32'), [6, 45]), ), 2)
call_2682 = relay.TupleGetItem(func_2397_call(relay.reshape(var_2680.astype('float32'), [13, 10, 4]), relay.reshape(var_2680.astype('float32'), [13, 10, 4]), relay.reshape(const_2681.astype('float32'), [6, 45]), ), 2)
func_1863_call = mod.get_global_var('func_1863')
func_1865_call = mutated_mod.get_global_var('func_1865')
call_2684 = func_1863_call(relay.reshape(const_2681.astype('float32'), [9, 5, 6]))
call_2685 = func_1863_call(relay.reshape(const_2681.astype('float32'), [9, 5, 6]))
uop_2711 = relay.asin(var_2680.astype('float64')) # shape=(520,)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
const_2728 = relay.const([1.562753,-4.231023,-8.373577,3.530727,0.742855,-3.981418,5.350637,0.570518,-6.794836,-3.308358,-7.452192,-3.072328,-7.036170,-1.430220,4.372643,4.996979,1.540261,-7.505937,1.253053,-3.115104,6.456644,-2.143951,6.650131,-5.990936,4.697447,5.071305,3.898614,9.455905,-4.483922,-9.966025,-7.616874,-6.741304,2.054674], dtype = "float64")#candidate|2728|(33,)|const|float64
var_2729 = relay.var("var_2729", dtype = "bool", shape = (1248,))#candidate|2729|(1248,)|var|bool
var_2730 = relay.var("var_2730", dtype = "float32", shape = (140,))#candidate|2730|(140,)|var|float32
call_2727 = relay.TupleGetItem(func_962_call(relay.reshape(const_2728.astype('float64'), [1, 11, 3]), relay.reshape(var_2729.astype('bool'), [1248,]), relay.reshape(var_2730.astype('float32'), [140, 1]), ), 5)
call_2731 = relay.TupleGetItem(func_966_call(relay.reshape(const_2728.astype('float64'), [1, 11, 3]), relay.reshape(var_2729.astype('bool'), [1248,]), relay.reshape(var_2730.astype('float32'), [140, 1]), ), 5)
func_2211_call = mod.get_global_var('func_2211')
func_2215_call = mutated_mod.get_global_var('func_2215')
const_2738 = relay.const([[-3.185427,7.752812,7.210526,-7.099775,-4.675291,9.210653,5.064103,1.123441,3.254320,-1.767986,-0.224658,-8.743377,7.459627,3.414866,9.319173,-4.962080,7.331776,-7.282689,2.453077,-1.507702,-9.821608,2.673702,3.082470,-0.601458,1.417221,-6.506565,7.358297,4.643157,-1.224532,-7.964614,-5.296534,5.103697,-1.681504,0.233009,-7.120938,6.042890,4.628315,3.786916,-5.028735,1.630015,-1.724969,7.699983,-9.144825,-1.018547,0.714600,6.345434,3.917348,0.070327,-0.575857,4.513694,-6.112542,6.508470,0.329446,-4.208855,2.169663,5.764084,0.110176,0.993993,1.820923,-8.170023,-9.091945,8.840589,3.365646,-5.860909,6.027889,-5.754129,-9.755129,4.577752,-3.641040,8.637882,-4.890266,-3.249356,7.569665,7.467494,6.454634,-9.157052,5.989005,-5.934174,-6.696117,-8.290499,-4.940003,-5.810491,8.340755,5.528570,4.372465,5.381452,7.894553,-6.294824,0.441545,-6.013408,3.679613,-0.546119,-4.227863,1.004886,5.158349,-3.601629,9.667093,6.222062,-9.147050,-4.563148],[0.152816,6.352622,2.897343,-1.132560,-6.110233,-3.498538,6.915295,-3.925312,5.257699,-2.689870,-3.502098,-0.736727,5.591107,-9.933849,-9.558472,-0.382701,-6.876055,6.188554,3.354312,-5.315666,-8.687421,2.830668,8.896292,2.931740,-0.634483,-8.935808,-6.461839,-5.774858,-7.946897,9.892329,9.323366,-9.927321,-2.146729,-1.111195,2.935456,0.963661,3.330210,2.503999,-0.640311,5.945221,3.840438,9.316352,-6.357372,2.947314,-6.718315,-9.973305,-3.247305,1.397596,-5.082278,-0.889784,-7.250470,2.942264,2.076299,2.361768,4.257979,-8.094202,-7.833257,-2.165252,7.518335,5.952102,-5.070142,2.181955,-3.652113,9.531662,-8.695924,3.255061,1.593415,-6.045950,3.755816,7.031561,-6.139254,0.004188,2.424979,-6.362570,-0.484405,9.920627,2.968236,4.078156,0.296502,-8.265534,6.580136,5.749422,-0.022785,9.265269,3.300327,-7.261431,-0.500880,-6.786556,0.531141,-3.188977,-1.863084,-7.866093,-3.845998,7.226271,6.149814,-2.516151,0.973576,0.658044,6.006545,-7.671045],[4.227921,2.237771,-6.063730,-7.657505,-3.627833,2.189136,-3.855825,-4.317840,-3.568801,-5.675942,1.693723,-0.055029,-4.947757,-8.038221,-4.173913,-4.202790,5.881400,3.810659,6.558394,3.480536,-1.436678,-6.639159,-6.279206,4.365104,1.341902,-3.991247,-0.682835,4.565299,5.692092,2.214528,-2.091551,0.551631,0.568450,-0.097315,-0.470896,-7.650581,-2.475130,8.123277,4.133291,2.561802,6.513595,8.968810,-0.360700,-8.255982,-6.421649,0.804170,-7.069450,-7.942274,1.584339,-8.868172,-0.551804,-5.663098,-8.367648,4.095648,5.473810,-3.452920,7.056559,-8.355053,-5.731999,4.356418,-4.490514,-0.174258,7.775570,-1.978602,9.327510,7.339294,7.187727,-5.200438,2.810379,3.574330,7.270595,7.297489,8.304414,-8.415839,9.379534,-5.100772,7.160525,-1.379578,1.384845,9.466451,5.145477,-9.932455,8.227501,-3.842278,7.985715,9.278784,2.121618,8.802580,-8.893999,2.563632,8.738270,-6.750453,-0.746823,6.372291,0.301445,-7.757300,3.419275,-7.165870,6.489994,-7.013479],[-0.700044,6.950109,-0.070774,6.712299,8.266332,-2.666959,-1.815507,7.346003,7.252840,5.640983,5.323732,-5.779200,-7.292344,8.827295,2.648611,-2.009829,6.320952,-7.863987,-6.668925,1.601067,-7.918335,-3.327194,-1.164386,9.882512,9.657989,-8.750940,-6.124136,0.243710,1.065089,-4.988646,-2.420472,0.944795,8.475674,-8.756285,0.862961,5.109002,5.638310,-9.722658,0.497119,-6.472471,-5.993537,6.079245,3.509121,-2.084334,-8.496962,8.819504,0.461978,-3.015609,-5.609056,4.914179,-0.847450,0.833544,-7.154367,3.049425,8.618564,-1.365305,1.251562,-9.115764,7.469880,0.574159,-2.693855,-8.604914,7.016893,-4.902928,4.332710,2.106686,-3.082669,-7.283556,6.872735,-2.124874,7.349419,-7.955860,-0.206774,3.265950,1.947084,2.899696,0.991118,-8.671257,2.845613,8.263500,-4.032692,-8.031822,6.031692,5.813677,7.374808,-8.555669,2.031880,4.214057,3.156618,2.121899,6.814235,-0.114659,-8.940933,-5.722975,6.358898,9.751663,-7.148721,-1.404256,-9.118367,-7.395745],[6.131415,-7.259128,-0.226610,2.442348,-0.734362,-9.999886,7.137134,-0.303318,4.414567,4.443917,-6.628182,-2.369820,7.091083,2.071962,3.354619,5.881129,-3.088429,1.065978,5.064143,-2.057887,6.516404,0.829269,-2.417685,-0.278302,-6.744435,-6.120694,-2.698578,-2.513723,-4.840914,8.276522,9.880755,-8.233454,-8.257154,-5.053781,-2.147576,9.391347,-6.345822,4.381032,3.761608,-6.371750,1.567349,-4.476939,-9.101720,6.287726,-0.776533,-2.807948,7.837982,3.206310,-9.372555,8.946038,1.439248,-7.402148,-8.092432,-8.287281,7.612866,8.911083,6.397533,3.231234,-1.465789,-2.302451,6.051498,2.237973,-1.982782,4.432221,-1.714283,9.935569,5.220758,4.970264,4.206152,9.556815,1.058764,-9.273834,7.773363,-9.603204,-6.060980,-5.871309,7.982863,9.446633,6.134912,-6.291246,8.258056,3.033836,9.687901,-8.546091,-5.267271,3.940741,7.601945,-9.725353,9.103778,-4.467066,-3.056031,-6.303485,-1.893743,6.221842,-2.378678,-8.289248,2.149046,-4.972650,-4.906979,-1.703154],[3.102878,-7.047179,8.341772,5.312229,8.997341,-2.359018,-1.737374,9.292724,-7.990163,-7.279285,-8.025210,4.223155,-7.363014,-4.045349,-7.375957,4.528379,6.271025,-7.080347,9.839203,1.858711,-6.918227,-0.386468,-5.504594,1.979622,-5.871098,7.206241,-6.660476,-4.025997,2.121832,-9.361430,8.174103,9.016872,7.777803,2.312383,6.142731,-4.190550,4.965023,-1.601102,-2.175150,-5.622683,-4.102290,-0.957161,-5.976998,0.625997,2.019914,-5.536110,-1.337291,1.182829,6.575745,-2.502363,-4.472846,-0.369078,6.994242,4.753783,0.054568,-9.052506,-8.661461,-4.102321,7.549682,-2.528436,1.953636,-4.220149,-7.474407,-9.839243,-2.810264,-2.443019,5.569267,-1.614092,9.999453,-3.492344,-5.501589,-4.784777,0.917841,6.743927,5.010545,-4.202690,-8.636925,-6.537541,-5.633069,2.022911,8.852359,9.912578,-3.205320,5.889997,-2.915767,-1.881552,-4.603238,5.571246,-9.633585,-4.176557,-1.238972,-0.125061,5.159646,4.463955,6.206327,0.343285,-9.730080,9.787596,-1.413821,-4.865316],[2.350652,6.890169,-8.185282,3.365426,-2.197132,-6.396011,-7.500147,9.977604,5.673943,-4.142605,3.969305,2.565177,-1.478222,6.606703,8.379786,8.595882,-6.713486,-2.424559,2.127319,4.847727,0.607224,-8.615793,4.174473,-7.657383,-6.624361,2.195823,-0.163299,3.257833,-4.959845,2.209238,6.884786,-7.025967,-4.511465,-2.446391,-8.754353,0.976201,8.890258,-5.282975,2.850602,4.184324,3.652955,-6.698803,9.236191,-7.988702,-7.645293,1.039203,7.165946,7.553766,-5.239006,8.394653,-6.494223,-3.858061,9.008908,-8.334868,2.528505,-6.943283,-7.528955,-2.288018,8.474873,7.211755,5.740176,7.787136,-0.324247,-2.200803,-6.086709,-9.105584,-4.674790,-9.935386,1.942340,-3.513241,-6.584156,5.788037,8.446487,-3.600929,-4.999747,-3.190491,-2.986269,-7.361643,8.314825,7.059816,2.736131,-8.212607,-1.491350,1.691774,9.863351,2.560319,-1.245751,-2.197942,-9.617386,-3.717990,2.475514,-4.332304,-7.730307,-9.197360,3.678047,1.516577,8.159269,-4.880643,-1.566466,3.838235],[-4.389644,5.147813,2.984879,-1.869259,-1.217155,7.449270,-9.539980,3.591556,-0.255546,-1.899703,9.765389,-6.254009,8.411971,6.167411,-5.403221,7.787831,1.323687,-8.417362,-6.240151,-2.229345,1.214137,-8.768040,-2.199716,0.587389,-0.883057,-8.303763,6.321648,-8.224969,-9.661821,5.350736,2.095562,2.562819,9.436266,6.835897,-0.503983,3.618264,9.973414,3.088147,2.113084,3.563409,-2.803890,-3.207348,-7.211663,-8.220388,-4.389449,-6.354337,-4.396601,-3.821037,4.428927,-3.552032,1.213914,6.304740,8.323861,-5.836646,5.506878,-6.275229,-9.305478,-7.947086,-5.965661,9.395524,-3.049780,-2.832308,7.569047,-7.066877,-1.025630,-3.728158,-4.466786,7.896649,1.756511,3.252035,3.168907,-4.679054,-2.531586,-5.417950,-2.257099,3.686401,9.095260,4.154760,-3.204234,3.052928,-3.590525,-2.702341,-3.755820,6.522000,-3.119738,-6.895246,-0.542258,1.802318,1.610213,8.085394,4.952082,-7.651766,-6.664645,0.568867,-5.344170,-4.770729,-1.737672,8.919842,-6.343523,-5.473233],[9.872387,-4.340488,-6.280601,-0.640810,6.470616,7.294273,-0.694781,-7.464419,0.934795,4.281355,-6.088594,4.820665,4.827730,7.531719,3.619735,-7.480650,8.435510,-8.282881,-4.939352,3.831987,2.965697,-4.176038,9.398718,-7.017622,-4.860803,-3.648209,1.638669,4.692327,-9.109204,-5.061761,9.884712,2.946146,0.910142,-5.775255,-6.881308,-5.177802,-6.126617,-9.830810,5.776867,-6.122649,-1.991484,-6.590296,-2.333013,-2.905953,3.464643,-8.853978,0.101250,9.615540,-9.574108,-1.451881,5.911381,-7.052715,4.480949,2.011367,0.560480,-3.705798,-8.933013,-2.415442,1.708859,-3.351328,4.979881,7.246823,-8.428556,-4.406454,-9.433167,0.121466,0.348193,6.197712,-7.434203,4.425085,-0.894440,-2.770118,-1.381426,-9.463122,0.778506,-4.968497,0.524618,-2.143587,-0.505822,-5.335547,5.856387,7.595933,3.056404,-2.988433,1.322911,-1.698480,1.532663,0.575588,3.822345,9.026646,-1.104163,0.057749,8.797688,5.140267,-8.538461,-6.450719,5.738074,-8.867621,-9.544793,9.597898],[-4.876580,-3.691816,-9.028610,-8.428923,9.433827,-0.804425,7.454928,3.299505,0.487583,2.206201,7.899388,-2.335510,0.585752,4.635436,4.706175,8.794741,-9.236869,4.914929,7.528618,-5.939637,-0.423045,-2.677819,9.013539,-4.648479,-1.553510,-5.785116,-8.289459,2.261775,-6.259970,9.381126,5.975148,0.083401,-2.997493,-7.488531,-3.259684,-2.944497,0.839543,9.621598,6.215112,-1.756689,0.496064,5.249610,8.159885,8.116488,4.879362,2.002255,9.843688,9.488372,9.100887,-7.428063,-5.683475,-0.458754,3.316465,-4.203232,-0.701358,2.304702,-0.669571,9.451880,9.805072,1.882999,7.506755,0.325737,8.620593,5.532356,-2.761848,2.460384,-8.368424,-2.680181,6.451132,-0.158186,0.811264,4.653657,-2.324929,6.338337,3.358308,3.903199,5.395026,1.831543,0.571590,-6.232163,-7.007195,-7.617503,8.492715,6.066992,-7.545394,-2.189206,4.398939,3.728497,-1.430647,5.361950,3.195770,3.368009,6.712540,1.510388,1.980202,-1.340035,6.319208,-4.098844,0.011783,9.913247],[-0.285925,-3.900829,2.254569,1.707908,-8.755782,5.485858,3.568143,1.625772,-3.518503,5.376357,-4.228596,5.502653,0.681493,-2.533357,6.666670,-3.499974,-8.588589,8.600061,-7.865735,0.491327,2.412229,-2.613514,6.551568,1.479284,-1.881121,0.355739,-6.280706,6.140904,7.113996,8.472679,3.617945,-3.808209,-7.670323,-0.798149,-7.221989,1.940606,-0.990595,4.743482,9.510527,8.373257,7.207899,-2.161879,-3.176026,4.562722,-7.547873,-7.652274,-9.147817,7.968767,2.322789,3.815331,5.353714,5.787330,-7.741205,-4.814065,-7.587480,-4.064466,-4.310498,0.506341,-4.509741,-7.976380,0.691336,-4.112096,9.627753,-9.244770,2.697862,7.190654,3.344098,9.058803,3.662209,1.352425,5.854902,1.513067,0.969935,-4.809520,-9.152782,-5.769591,-1.551061,9.876242,-1.792099,-5.903008,-6.265021,-3.282218,-5.034917,4.516724,8.314073,1.271595,-0.120134,2.990776,-5.254642,5.042620,-0.460251,-9.435619,3.685407,5.789155,-4.723593,8.761496,3.293595,-2.902895,6.359567,4.932802],[-8.490412,-2.691371,4.197652,-5.498982,4.740055,-8.802297,6.511517,-4.966141,5.353143,-8.671865,9.823896,-8.119769,-7.553848,1.202242,-1.293286,-4.620678,6.589213,-4.321177,-2.623632,-1.340235,-0.218799,-8.786733,-0.041298,-8.504663,-6.861878,2.542258,9.922832,-6.691536,-4.767909,3.048979,-7.553055,2.624453,-8.746427,-8.821096,5.717168,1.453042,-4.808292,5.049942,-0.640469,-3.450116,0.996282,0.270272,1.912725,-5.935448,5.443160,-3.853289,4.554225,5.301353,3.209816,1.601824,8.826369,9.562170,-9.044777,-1.792620,-8.676705,2.569786,-4.463943,-0.091147,-0.786475,7.828814,3.894709,2.141156,8.327142,-6.025136,-9.284982,6.887229,-2.919631,0.016946,-4.780778,-1.686910,-0.035615,-2.360815,-9.062631,-8.548328,9.239225,-6.595561,-6.041113,1.929368,-6.978806,-3.348879,8.983162,-2.061612,-6.230008,-0.007829,8.002311,-2.781884,-4.480329,-3.397564,0.183954,0.560843,-9.690255,8.315059,4.946359,3.332378,9.144294,0.771734,1.283811,-5.616431,2.937531,-4.200399]], dtype = "float64")#candidate|2738|(12, 100)|const|float64
const_2739 = relay.const([2.117598,-4.078033,-5.280223,7.536126,7.306713,9.550565,-4.075765,7.162921,5.231728,-5.234166,-1.214731,-3.414750,-9.721298,8.069153,7.304229,7.018187,-1.159343,-6.509908,-6.619779,-9.885409,-8.179172,-5.636953,-6.495449,-5.874826,-9.177254,-6.634544,-3.203618,1.056637,-1.883308,-4.202034,2.166785,-9.418316,-2.954854,-1.537397,2.665177,-6.365762,6.373807,-3.364736,-3.448478,0.361642,5.854094,-6.944159,-8.343535,-4.008623,-8.493436,6.554872,2.872181,9.417302,-1.405658,-0.207496,-7.125971,7.089909,3.504391,4.354058,9.110581,3.080662,1.989440,-7.466775,8.512827,-8.701855,9.700359,4.109716,9.169718,-0.252752,-3.347290,4.491717,-0.517824,-3.536449,-4.113966,0.620288,-5.237852,7.496114,-3.590571,-7.582147,-5.268006,2.547870,-0.157125,-3.478106,-4.360687,3.906378,2.555601,3.727937,4.695000,-8.307127,-5.655952,7.094170,-5.668275,-0.711389,-5.003691,-9.047332,7.812317,9.522588,-4.694381,1.344065,-3.137170,9.233630,-3.035464,9.150793,8.422226,6.480077,-3.480530,-1.521999,9.029924,2.582714,4.285350,3.125586,-0.790409,-0.027858,-3.592020,5.853150,-2.804392,1.638161,6.228642,9.142934,-4.241482,-7.409422,0.084878,5.511952,5.750167,3.145663,-1.744100,6.544613,5.989779,6.677482,-8.431341,-8.419640,2.396939,4.054004,3.742890,9.602025,3.626273,-0.417387,4.708793,-3.319658,-1.203216,6.291457,-4.302117,6.907868,3.561102,6.357422,7.331403,-5.734991,2.012178,-8.201494,-6.691822,-1.808368,2.607228,3.170260,-8.539336,-5.210084,9.707497,6.447878,-5.177836,9.348259,9.241105,1.469791,-7.886495,-0.132864,9.051890,-0.398678,-8.765226,-1.325015,2.797225,-2.232401,0.701760,3.200058,4.747660,-9.129697,9.202933,0.768128,-6.781278,-3.096008,-4.326753,1.601015,4.340509,-1.941494,-1.961305,1.906580,-6.699946,-3.169632,-8.389816,-4.428383,-3.306651,-3.546105,-8.035256,3.435384,-7.079372,0.541397,-5.233167,3.776368,8.525785,2.290949,-4.598558,0.683220,7.259103,-9.008185,2.805738,7.340391,3.732837,-7.091313,3.347722,-4.052382,4.948664,-7.835151,-8.238483,2.042572,8.813776,-2.721076,6.711736,-8.210899,8.414401,6.377901,7.603276,-3.501167,-4.096649,-0.093609,-5.208934,1.428372,5.944922,6.821184,2.766948,2.076731,-9.856269,-7.172432,3.667756,-8.244093,5.887059,-3.813447,-8.695978,4.811092,8.204364,-5.929753,6.574203,6.290891,2.718667,-3.775646,7.657910,-4.115254,2.285211,3.790234], dtype = "float64")#candidate|2739|(240,)|const|float64
call_2737 = relay.TupleGetItem(func_2211_call(relay.reshape(const_2738.astype('float64'), [15, 10, 8]), relay.reshape(const_2739.astype('float64'), [240,]), ), 0)
call_2740 = relay.TupleGetItem(func_2215_call(relay.reshape(const_2738.astype('float64'), [15, 10, 8]), relay.reshape(const_2739.astype('float64'), [240,]), ), 0)
func_1502_call = mod.get_global_var('func_1502')
func_1504_call = mutated_mod.get_global_var('func_1504')
var_2777 = relay.var("var_2777", dtype = "float32", shape = (3072,))#candidate|2777|(3072,)|var|float32
call_2776 = relay.TupleGetItem(func_1502_call(relay.reshape(var_2777.astype('float32'), [12, 16, 16])), 0)
call_2778 = relay.TupleGetItem(func_1504_call(relay.reshape(var_2777.astype('float32'), [12, 16, 16])), 0)
output = relay.Tuple([bop_2663,call_2679,const_2681,call_2684,uop_2711,call_2727,const_2728,var_2729,var_2730,call_2737,const_2738,const_2739,call_2776,var_2777,])
output2 = relay.Tuple([bop_2663,call_2682,const_2681,call_2685,uop_2711,call_2731,const_2728,var_2729,var_2730,call_2740,const_2738,const_2739,call_2778,var_2777,])
func_2801 = relay.Function([var_2661,var_2662,var_2680,var_2729,var_2730,var_2777,], output)
mod['func_2801'] = func_2801
mod = relay.transform.InferType()(mod)
var_2802 = relay.var("var_2802", dtype = "uint16", shape = ())#candidate|2802|()|var|uint16
var_2803 = relay.var("var_2803", dtype = "uint16", shape = (2, 13, 2))#candidate|2803|(2, 13, 2)|var|uint16
var_2804 = relay.var("var_2804", dtype = "float32", shape = (520,))#candidate|2804|(520,)|var|float32
var_2805 = relay.var("var_2805", dtype = "bool", shape = (1248,))#candidate|2805|(1248,)|var|bool
var_2806 = relay.var("var_2806", dtype = "float32", shape = (140,))#candidate|2806|(140,)|var|float32
var_2807 = relay.var("var_2807", dtype = "float32", shape = (3072,))#candidate|2807|(3072,)|var|float32
output = func_2801(var_2802,var_2803,var_2804,var_2805,var_2806,var_2807,)
func_2808 = relay.Function([var_2802,var_2803,var_2804,var_2805,var_2806,var_2807,], output)
mutated_mod['func_2808'] = func_2808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2863 = relay.var("var_2863", dtype = "int32", shape = (1, 14, 10))#candidate|2863|(1, 14, 10)|var|int32
var_2864 = relay.var("var_2864", dtype = "int32", shape = (3, 14, 10))#candidate|2864|(3, 14, 10)|var|int32
bop_2865 = relay.greater(var_2863.astype('bool'), var_2864.astype('bool')) # shape=(3, 14, 10)
bop_2874 = relay.add(bop_2865.astype('uint64'), relay.reshape(var_2864.astype('uint64'), relay.shape_of(bop_2865))) # shape=(3, 14, 10)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
var_2886 = relay.var("var_2886", dtype = "bool", shape = (4, 312))#candidate|2886|(4, 312)|var|bool
call_2885 = relay.TupleGetItem(func_93_call(relay.reshape(var_2886.astype('bool'), [13, 12, 8])), 0)
call_2887 = relay.TupleGetItem(func_96_call(relay.reshape(var_2886.astype('bool'), [13, 12, 8])), 0)
output = relay.Tuple([bop_2874,call_2885,var_2886,])
output2 = relay.Tuple([bop_2874,call_2887,var_2886,])
func_2888 = relay.Function([var_2863,var_2864,var_2886,], output)
mod['func_2888'] = func_2888
mod = relay.transform.InferType()(mod)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mutated_mod.get_global_var('func_2888')
var_2890 = relay.var("var_2890", dtype = "int32", shape = (1, 14, 10))#candidate|2890|(1, 14, 10)|var|int32
var_2891 = relay.var("var_2891", dtype = "int32", shape = (3, 14, 10))#candidate|2891|(3, 14, 10)|var|int32
var_2892 = relay.var("var_2892", dtype = "bool", shape = (4, 312))#candidate|2892|(4, 312)|var|bool
call_2889 = func_2888_call(var_2890,var_2891,var_2892,)
output = call_2889
func_2893 = relay.Function([var_2890,var_2891,var_2892,], output)
mutated_mod['func_2893'] = func_2893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3371 = relay.var("var_3371", dtype = "float64", shape = (16, 4, 11))#candidate|3371|(16, 4, 11)|var|float64
var_3372 = relay.var("var_3372", dtype = "float64", shape = (16, 4, 11))#candidate|3372|(16, 4, 11)|var|float64
bop_3373 = relay.floor_divide(var_3371.astype('float64'), relay.reshape(var_3372.astype('float64'), relay.shape_of(var_3371))) # shape=(16, 4, 11)
func_2801_call = mod.get_global_var('func_2801')
func_2808_call = mutated_mod.get_global_var('func_2808')
var_3379 = relay.var("var_3379", dtype = "uint16", shape = ())#candidate|3379|()|var|uint16
const_3380 = relay.const([-6,9,4,-7,7,-1,-1,-9,6,-2,-2,6,-2,10,-2,7,5,-10,-7,1,4,4,-2,10,-3,-7,-9,2,-8,1,7,-9,-3,1,-8,5,-4,-9,10,-6,-4,-9,8,2,-4,-5,2,-3,-5,-6,-9,-6], dtype = "uint16")#candidate|3380|(52,)|const|uint16
var_3381 = relay.var("var_3381", dtype = "float32", shape = (520,))#candidate|3381|(520,)|var|float32
const_3382 = relay.const([False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False], dtype = "bool")#candidate|3382|(1248,)|const|bool
var_3383 = relay.var("var_3383", dtype = "float32", shape = (140,))#candidate|3383|(140,)|var|float32
var_3384 = relay.var("var_3384", dtype = "float32", shape = (3072,))#candidate|3384|(3072,)|var|float32
call_3378 = relay.TupleGetItem(func_2801_call(relay.reshape(var_3379.astype('uint16'), []), relay.reshape(const_3380.astype('uint16'), [2, 13, 2]), relay.reshape(var_3381.astype('float32'), [520,]), relay.reshape(const_3382.astype('bool'), [1248,]), relay.reshape(var_3383.astype('float32'), [140,]), relay.reshape(var_3384.astype('float32'), [3072,]), ), 10)
call_3385 = relay.TupleGetItem(func_2808_call(relay.reshape(var_3379.astype('uint16'), []), relay.reshape(const_3380.astype('uint16'), [2, 13, 2]), relay.reshape(var_3381.astype('float32'), [520,]), relay.reshape(const_3382.astype('bool'), [1248,]), relay.reshape(var_3383.astype('float32'), [140,]), relay.reshape(var_3384.astype('float32'), [3072,]), ), 10)
output = relay.Tuple([bop_3373,call_3378,var_3379,const_3380,var_3381,const_3382,var_3383,var_3384,])
output2 = relay.Tuple([bop_3373,call_3385,var_3379,const_3380,var_3381,const_3382,var_3383,var_3384,])
func_3386 = relay.Function([var_3371,var_3372,var_3379,var_3381,var_3383,var_3384,], output)
mod['func_3386'] = func_3386
mod = relay.transform.InferType()(mod)
mutated_mod['func_3386'] = func_3386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3386_call = mutated_mod.get_global_var('func_3386')
var_3388 = relay.var("var_3388", dtype = "float64", shape = (16, 4, 11))#candidate|3388|(16, 4, 11)|var|float64
var_3389 = relay.var("var_3389", dtype = "float64", shape = (16, 4, 11))#candidate|3389|(16, 4, 11)|var|float64
var_3390 = relay.var("var_3390", dtype = "uint16", shape = ())#candidate|3390|()|var|uint16
var_3391 = relay.var("var_3391", dtype = "float32", shape = (520,))#candidate|3391|(520,)|var|float32
var_3392 = relay.var("var_3392", dtype = "float32", shape = (140,))#candidate|3392|(140,)|var|float32
var_3393 = relay.var("var_3393", dtype = "float32", shape = (3072,))#candidate|3393|(3072,)|var|float32
call_3387 = func_3386_call(var_3388,var_3389,var_3390,var_3391,var_3392,var_3393,)
output = call_3387
func_3394 = relay.Function([var_3388,var_3389,var_3390,var_3391,var_3392,var_3393,], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3415 = relay.var("var_3415", dtype = "float32", shape = (3, 6, 8))#candidate|3415|(3, 6, 8)|var|float32
uop_3416 = relay.rsqrt(var_3415.astype('float32')) # shape=(3, 6, 8)
bop_3419 = relay.logical_xor(uop_3416.astype('int32'), relay.reshape(var_3415.astype('int32'), relay.shape_of(uop_3416))) # shape=(3, 6, 8)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
var_3428 = relay.var("var_3428", dtype = "bool", shape = (4, 312))#candidate|3428|(4, 312)|var|bool
call_3427 = relay.TupleGetItem(func_93_call(relay.reshape(var_3428.astype('bool'), [13, 12, 8])), 0)
call_3429 = relay.TupleGetItem(func_96_call(relay.reshape(var_3428.astype('bool'), [13, 12, 8])), 0)
func_2801_call = mod.get_global_var('func_2801')
func_2808_call = mutated_mod.get_global_var('func_2808')
var_3434 = relay.var("var_3434", dtype = "uint16", shape = ())#candidate|3434|()|var|uint16
const_3435 = relay.const([3,7,1,5,-5,4,10,3,-8,-10,-10,-3,10,4,-8,4,-10,7,9,7,1,-2,-7,-8,-10,9,-5,-6,4,9,-1,-5,-6,-2,6,-8,3,9,7,-2,-6,-4,5,-6,-2,-3,7,-5,2,-7,9,7], dtype = "uint16")#candidate|3435|(52,)|const|uint16
const_3436 = relay.const([[7.529962,-6.310022,-2.816512,-2.631516,7.784274,0.029270,7.913125,-0.501285,-2.023332,-1.824322,5.171965,9.517341,1.649156,-3.020852,3.003428,-5.970451,1.936012,-7.779576,-4.271556,-1.060550,0.423592,-3.677081,7.866368,-4.998843,-6.439900,6.799268,0.459689,-7.929001,4.656174,-4.720792,-5.344609,-6.256016,2.255181,1.942434,7.033582,1.251336,-0.441026,-7.548796,-9.231050,1.486304,7.842469,6.274585,5.342720,9.628374,-3.563683,-2.161372,-2.970815,-0.120994,8.635140,6.166016,-4.656206,8.452722],[1.542488,-0.147069,6.294975,-0.959060,-1.916578,2.490050,-7.054959,-2.852524,-0.799459,9.437599,3.016784,-4.334893,-6.979146,-1.214244,-6.706554,6.972445,8.808343,3.201653,3.128214,9.321393,9.694146,5.444635,2.747851,7.063331,-5.379896,-8.027805,-1.322647,-3.089647,-8.863564,4.943723,6.977845,-4.740538,-1.723417,2.760185,-1.940971,8.673050,6.847151,8.634281,4.662911,-1.417796,1.945637,0.700386,9.213087,-0.278499,-0.456571,-1.874614,-7.017228,-1.376288,-6.321461,-7.987009,-0.949607,7.327906],[3.983999,-5.381606,5.965598,-1.960471,9.418841,-4.226339,-1.939661,8.505700,0.454794,-0.011316,-4.521919,-7.708308,-4.364066,2.713372,4.931633,-2.967502,4.607643,4.346657,5.990882,-8.375914,7.067946,6.125850,4.866200,4.276958,-7.456256,7.456384,-1.016360,6.427277,-9.578180,-6.003852,7.837153,-6.273251,5.616287,2.579070,-9.220660,-1.469913,3.640333,2.208906,-8.963627,5.162676,-3.597845,6.659117,-2.592885,9.897502,-4.398837,-7.786371,-1.705260,-0.309264,-2.965694,-2.099627,9.103569,2.003566],[-6.242443,-8.616334,8.357574,3.430921,-0.934953,-2.327125,1.129658,5.407830,2.530111,-4.177907,2.954794,-7.504203,-0.274097,-8.310651,2.302628,-5.615515,-6.365793,-0.230223,-0.289621,6.698473,-5.832845,-7.817506,3.946423,1.092123,8.941296,-2.280383,0.913715,1.441831,7.126727,7.480746,7.425497,-7.847034,-1.559157,2.413577,-8.205203,9.078382,-5.873633,-3.689699,-3.305937,7.894568,5.551537,-7.339892,-2.395872,2.603886,4.804801,-2.118864,-0.424119,-1.982545,2.890611,-0.188916,-1.705796,-9.663683],[2.457963,-6.729940,8.248294,1.263294,4.195848,6.095076,7.014015,7.382664,0.157746,3.260910,-8.171832,9.389883,8.796743,8.309162,1.446636,9.914936,-7.617138,-6.006452,9.515524,3.442234,8.419757,-7.152567,0.417838,4.576494,7.671211,-6.557980,-7.911673,6.445839,8.606941,6.986626,-7.622447,3.843188,-6.305333,-2.025217,-6.572008,-2.234531,-6.312453,-0.173978,-6.335048,8.146136,4.937966,4.679641,6.539721,4.581253,6.127166,5.226795,0.122795,7.422161,7.175956,8.056799,0.591540,0.492341],[-7.502450,9.791790,-7.230730,-2.850956,-8.036625,6.505921,-3.345876,4.914838,-3.714338,-6.286619,6.354967,8.500224,8.801820,-2.826862,5.121927,4.188320,-9.073668,-8.992507,5.208533,-3.810162,2.661206,5.868770,-8.165457,3.119550,6.784991,9.293764,1.347508,0.521310,1.272707,9.155006,-9.751744,1.777506,9.568504,0.345158,-7.768321,1.433217,2.472697,-5.383769,1.077870,-0.324745,3.785538,9.626746,1.088961,3.991274,4.965054,6.686220,7.851294,-6.717268,-3.472988,4.600915,7.754551,-6.464775],[7.543666,-4.968542,4.343288,-3.863690,-7.826663,2.534571,-5.741732,3.278234,-5.612422,2.902824,2.899207,-3.841866,6.234554,-6.992151,-0.852670,-5.431807,0.571232,-3.620100,3.722853,0.626966,9.199943,1.752704,-2.532627,7.551286,8.732331,-9.167231,-1.371734,2.402001,7.473964,-4.565669,-7.467577,2.680531,4.769805,-9.739786,-5.984622,4.508241,7.067848,-1.204599,1.391592,-4.624275,-4.004066,9.500826,9.552737,3.736134,-6.799424,4.509375,-3.970130,7.080507,-5.365852,-1.855560,0.538443,-9.091039],[9.815822,-0.054152,-3.964945,3.285084,-8.498487,3.819745,0.966355,-0.663055,-1.893118,1.069689,-2.191386,1.287078,-7.264896,-0.366933,0.819737,-9.942271,8.289735,9.686516,5.837414,-2.583243,4.315805,-5.063280,-4.875912,-2.076825,-7.011658,6.563929,-8.418267,5.451330,2.620422,2.132478,2.468545,9.495997,-9.964231,-8.230750,1.551390,5.826791,2.873443,-7.278348,-0.211986,-4.799330,-0.284776,-3.120949,-2.593477,5.862345,1.989728,-5.462659,8.970264,4.539448,-8.023981,7.197334,-3.798601,-7.080480],[-7.802949,-5.890137,-5.619265,1.052032,-2.391558,0.209469,-7.074354,-3.045462,3.953195,-7.883218,-9.937077,7.083126,0.089516,8.866023,3.995642,3.479604,-1.126868,6.280072,6.949782,4.900193,-7.278183,-7.897337,7.191204,-4.717948,-7.592596,4.850026,-0.738642,1.059409,-1.853068,8.338823,4.954204,1.816020,-8.021613,-8.213572,-3.681681,-9.911391,-1.295347,2.577162,4.998631,3.497063,-8.598284,7.035540,1.322656,-0.511992,9.301493,5.927923,5.392148,-2.022579,0.303674,1.100861,-4.237292,-0.423694],[-7.918556,-6.843797,5.090348,5.125754,4.432895,-9.464372,-6.179749,-4.716093,0.801741,-3.602146,-0.015579,-3.870491,9.040313,5.666356,1.587571,-2.597522,8.357992,-5.402500,-9.640333,-6.925194,-4.238927,-6.023968,-1.608784,-4.197225,6.216077,-3.071157,7.309662,7.791862,-5.237223,-5.766278,4.031981,6.431373,3.223161,7.684229,-8.484928,7.666329,8.352052,1.315493,-7.629495,2.118054,-5.986947,-0.018654,-4.837502,-6.259792,-0.399365,2.716627,8.997540,9.497341,-0.476948,1.997576,-6.129744,3.051488]], dtype = "float32")#candidate|3436|(10, 52)|const|float32
const_3437 = relay.const([[-8.830204,-3.072955,6.045441,0.263368,2.822197,3.992060,-1.997709,0.368832,9.429164,4.111053,-5.371235,3.618596,7.669450,0.287612,5.716366,-8.376473,-1.993206,0.773227,8.514308,-2.452143,6.773336,0.126268,-1.380960,-0.308030,2.076513,8.130972,-6.999448,7.076214,-4.519256,0.809669,-7.997726,4.656257,-4.847937,-8.129206,-0.174641,-3.306782,-3.765022,0.581534,-4.380780,6.357234,1.647368,5.822946,6.315229,3.687496,-2.828612,-7.698987,-2.044567,7.284613,-3.693609,-0.424720,-1.253596,-3.136569,-2.626913,1.201763,5.678828,7.231740,-6.283163,-2.792085,5.145321,0.035268,-3.902484,-4.529202,4.947681,3.891164,-5.603202,-5.083528,-4.896219,9.768738,-1.411041,4.409843,5.933969,-2.218127,-6.530528,-8.518998,-5.797381,9.392096,0.591853,5.216942,9.307227,-4.103569,-6.104184,1.001276,9.306729,-0.454730,3.715269,7.651742,-5.805851,-7.531236,-3.938321,-8.399689,-0.034941,4.955260,7.167581,1.150415,4.625957,-9.375589,-8.367850,-2.603333,6.056758,-4.112779,-7.639600,2.460868,4.717514,1.185624,-7.302030,6.788146,7.650516,-3.612961,4.941043,-9.566918,4.461969,1.673181,-0.791679,0.778481,-5.911957,-5.023187,8.822207,4.145557,-4.692448,-9.323171,-9.855651,9.483041,-5.372390,-6.937462,9.792559,-0.336054,-6.947536,1.304773,0.363975,-0.947004,-2.567927,3.536941,-3.984574,-8.460809,9.567113,-8.464871,-0.038807,-2.919439,1.312237,9.860690]], dtype = "float32")#candidate|3437|(1, 140)|const|float32
const_3438 = relay.const([[-2.246909,-9.996509,-8.397936,9.826142,2.734012,-2.588201,-7.399973,-2.502527,4.289042,0.728151,-7.291215,-7.320472,6.021175,8.642745,2.556521,9.006922,-5.577227,-0.660671,-5.726680,-1.071955,-6.736944,-7.350360,-5.327038,1.707142,1.703720,6.345329,0.696990,0.023324,2.870989,-2.355835,9.647597,-5.994452,-1.498526,-1.010583,7.094062,-4.057259,8.004789,-6.295501,7.271062,3.193233,-2.883001,-5.417479,2.461066,1.493349,2.343805,6.489884,2.455121,-7.918699,7.598760,3.216794,6.509854,-8.418369,-6.049455,-4.164281,-6.690388,-4.684617,0.941096,-4.919243,4.231799,8.045037,-6.426727,5.201767,1.387321,5.985312,8.695023,5.893692,-6.123952,8.439976,-0.050959,-8.828849,-3.599434,-3.079424,-0.029861,-5.893672,-0.977144,-9.119900,-2.118175,-2.209510,0.369674,-3.350936,-5.433992,2.660136,5.263244,9.649306,-3.910539,-8.440941,7.495952,-9.234309,-2.967687,8.784708,0.326306,3.577947,1.055438,7.827858,2.843875,4.831755,2.007564,-6.957734,-7.979088,-1.654022,6.620580,9.414939,9.064292,-4.858888,-4.518797,-9.710183,6.776669,2.628017,-8.847155,5.808890,6.771761,5.264399,8.600063,8.481336,-8.502346,5.846586,0.866114,-9.748751,-5.737819,-1.309503,-1.939749,-6.340988,-3.960000,-9.895294,-8.838240,-2.297274,3.979604,-0.081609],[2.179821,-2.018473,-3.619327,0.310287,-5.300221,-2.962036,4.561525,9.209495,-8.486438,8.319696,2.262502,5.799103,-6.504901,7.990610,5.592559,-3.089625,-0.248284,-4.136513,-8.511272,-7.143359,7.510601,-8.123734,9.885629,-3.981952,6.705340,-6.141508,-7.658285,0.315106,4.034619,-8.896190,-7.981606,1.870776,5.880999,0.873595,7.130793,-9.379490,5.769145,7.061468,-1.539830,-9.982184,-2.794427,-2.822638,-7.243007,9.011436,8.163321,-1.033842,-7.076110,-8.527708,-2.068107,-7.657801,4.690769,-8.414297,0.742547,1.706404,-9.883954,8.013415,-9.171434,8.876890,1.571958,-3.025233,-6.484898,9.339820,-3.894731,-5.121545,4.541297,-8.234123,3.770633,0.022094,8.375613,-3.644243,-0.470146,-1.984615,3.810905,6.455938,-4.819504,2.374485,1.763273,8.918883,-8.205077,-2.096047,-1.413905,-6.390514,7.619492,-4.857236,-8.079448,-4.313267,6.894568,8.002803,-1.427209,2.295824,-5.022747,7.217930,0.754115,1.119227,-0.873144,-8.758233,3.410110,-6.298083,-8.896312,2.537880,8.603999,-3.456684,-1.682793,-5.240277,-1.886886,7.732976,-8.308291,-0.662017,4.309588,-4.859833,6.747701,8.028685,6.394383,-8.924113,-5.981208,2.813095,0.506385,-5.410903,4.069280,8.511174,2.999079,4.834753,3.412871,6.488962,3.311794,9.188799,-3.717282,5.557677],[-6.530707,-1.095072,5.213889,1.231225,5.368790,-5.139123,-8.696859,-1.662082,-6.395029,7.930805,-5.489969,0.248352,-4.637911,-9.863299,5.473483,8.668130,3.367014,-3.645290,7.517798,-2.410373,-5.166939,3.219210,-1.049167,-5.821251,8.986360,-3.202064,-1.898858,-6.218187,-1.320093,-3.738845,-5.814872,-7.616945,0.868428,9.197719,-1.447651,0.415991,-2.458536,0.084211,-7.273530,-6.046134,1.956034,3.575985,-4.358867,6.849211,0.090379,-7.651211,5.305059,9.430792,2.908702,7.244946,-7.537212,-2.122507,8.681554,0.071355,5.980208,-7.185561,3.428202,8.511175,7.643580,-5.002983,-8.509699,-5.381757,8.380604,-8.213569,-6.099184,-8.231530,-5.067288,-0.326025,-2.321747,7.042508,9.037208,4.539721,-2.112822,-1.783333,4.604446,-4.641774,2.451547,3.939648,-1.438881,6.271006,3.474410,-0.737105,1.094470,1.824779,-4.438896,7.510325,-6.711206,-6.999984,6.433348,-5.386581,-9.883729,-9.747693,-0.524934,-8.393632,4.124287,9.677053,-3.598076,-5.416459,-6.234288,2.644715,6.989905,-9.577928,7.571699,-0.284230,8.664017,6.644177,2.231965,3.685999,6.660377,-9.231653,-9.119709,4.959593,0.974681,-9.683283,-5.219121,7.314704,-4.446965,5.050674,-9.838869,4.057927,0.022281,9.396848,-2.752668,-7.815713,4.951435,2.204663,-1.284082,-2.757848],[-8.779718,-9.792999,-7.846793,-0.854402,8.300523,5.656546,0.755667,-0.242487,6.096551,8.043444,-5.327834,-7.918026,7.500295,1.780393,-2.317031,5.349310,-1.479528,4.407480,4.233595,-6.306484,-4.098152,0.781058,-4.058181,-5.383750,4.427326,0.866109,6.012886,0.568665,9.346927,-9.801534,-5.703839,5.440436,0.591221,-8.504979,-9.922668,-2.029094,-5.004474,2.675226,1.871455,-2.443765,2.635087,-5.472208,2.970512,5.200770,1.597339,8.456731,-8.787888,-7.363103,1.232991,-3.803343,7.654180,-0.961939,-6.964100,-4.773530,9.343402,9.863256,8.405618,4.994628,1.932595,5.709652,5.790494,4.276717,5.389348,9.521145,-9.710077,1.806680,-5.829226,8.439013,4.093119,-5.253332,-1.678320,1.878686,-8.797576,1.093313,-7.350177,-8.848480,6.998674,4.011617,8.590250,9.083366,-4.643742,-0.051796,5.816739,-8.056543,5.549319,1.997544,-5.474565,1.486728,-5.958178,-8.730070,-2.590579,-1.329204,-8.692553,-2.550622,-7.073114,6.236876,-9.516712,-9.486420,0.380313,-1.840353,0.619244,2.234719,0.158740,-3.543357,1.937079,-7.978334,3.131440,1.919986,-4.189600,-2.557027,7.932020,9.372288,2.350512,1.429490,-2.305849,3.648377,-9.133710,3.296990,-2.422091,0.966817,0.751211,5.691868,-6.437423,-2.469796,-6.243421,0.188784,4.922274,-2.410304],[-5.190677,2.630638,8.417816,0.511074,6.917418,1.839014,-5.726018,9.088640,-4.920358,8.491906,9.636520,9.570400,-5.022841,-2.078681,-6.584626,-7.196043,-6.459370,9.028376,-2.803857,7.258157,-4.037572,7.110163,6.037614,-1.835281,3.280244,-4.324378,6.679509,8.723743,6.844751,7.259890,-5.339242,-6.179900,-7.298663,-2.747299,-4.193795,-3.493143,9.037724,-1.657162,9.139440,-7.335169,-0.082681,5.756533,0.473180,4.031760,-1.236804,-7.951287,-2.086949,-7.903421,-8.772005,9.221511,-4.295317,7.296377,-3.455894,5.808316,-0.625200,-7.206388,-3.612254,4.618856,-7.631420,-7.763341,4.574813,9.036320,-9.914662,-1.549879,6.997785,1.047194,-6.160902,0.565581,-3.342881,-7.010611,-4.163822,0.808563,-5.003098,-3.550915,4.995554,-5.488331,9.456613,-2.524949,9.710665,6.070265,5.266275,-9.296654,5.095024,-3.559536,-0.888966,0.054651,0.027689,-1.360346,0.711984,6.015773,8.664822,2.997525,3.754929,-3.282472,4.926029,1.551585,6.827056,-0.084902,7.875879,-1.431690,0.764398,8.694763,7.813148,-3.370572,-8.938372,5.927140,1.285674,2.341004,2.343404,9.077026,3.505243,1.853613,2.509935,2.513074,-1.566415,-7.246868,4.453938,-3.305979,0.040007,6.315187,-1.499344,-0.846597,-8.847607,8.734598,1.043053,-4.994253,6.961686,4.257165],[7.496677,-4.969329,1.749575,4.278142,-9.099113,1.660108,-7.717763,4.600426,9.788814,5.087003,2.761903,7.034461,3.991855,4.185082,1.800632,0.623160,-2.877211,-8.730985,4.361875,-2.483063,-8.964355,4.324517,6.519998,1.647733,-2.540899,-2.117510,4.887505,3.019365,4.742604,-3.599078,8.372048,0.527009,9.940797,9.960293,9.335952,-0.061066,6.366969,-2.331761,-4.597627,-8.224041,-6.989593,7.116265,-7.525713,7.989079,3.423921,4.217349,0.937865,-7.909937,-7.897294,2.199281,-1.007756,7.101650,-3.418361,-6.917581,-2.613524,0.908869,9.010285,-8.864906,0.819096,1.825299,9.143236,-7.662651,6.350640,8.205565,-9.415951,6.851036,-5.923924,8.780379,-7.521913,-4.207947,-4.451017,-3.044354,-6.988640,0.716386,-8.497661,-2.368624,3.820075,-3.403353,-6.611468,4.415701,3.863329,2.193296,5.660861,-5.498435,-1.561749,-4.345615,-6.515988,-0.303410,-1.287444,5.850287,-0.298261,-0.157584,-8.773742,-2.332098,8.443636,2.028862,-4.092787,-7.450808,2.919888,7.829564,6.157576,-0.171197,-8.192456,-0.397394,2.905016,6.622391,-7.694255,6.264001,6.136074,3.533963,5.266500,5.386059,2.070032,-6.863580,-8.090454,-5.913608,2.918981,0.744120,6.421023,-0.058745,8.460827,-2.026131,-2.047401,-9.232863,6.304779,-8.653354,3.609491,-4.173763],[5.657952,2.668493,-9.705656,-8.596595,4.576119,-3.837720,7.303515,4.840227,-4.641455,-6.977301,9.439184,-6.556968,-2.138253,-9.346283,-9.680625,-9.219724,2.873243,2.148658,8.497616,7.617646,-4.486847,0.284032,3.060541,-7.588692,-6.154355,-1.466886,-0.171429,-2.323269,2.880193,-8.512663,8.043482,2.595512,-1.097220,5.961252,-1.654866,-3.240064,-5.006658,7.514668,-3.731846,2.944437,-8.309046,1.054012,2.879385,-0.372291,-6.567120,-1.106396,4.129388,-8.877734,3.794668,-8.771313,-7.564206,-0.583888,-8.737971,-3.112546,1.875348,-4.410997,5.081295,-0.864589,7.849639,7.131082,3.450438,-1.173806,-9.844733,9.371379,-5.842428,3.299002,-5.322917,9.495586,5.089205,-0.311380,0.724845,0.953458,-5.144447,2.997607,-2.205500,6.977071,1.768331,-6.949405,-0.405266,7.300521,4.768775,2.902206,-4.353284,4.897139,9.358421,-8.770253,-3.981140,3.908353,-6.955555,-7.775249,-0.650640,-3.950943,6.625690,1.942526,-0.907549,-6.432544,8.025367,-8.700519,-3.018506,-0.955874,5.874596,6.227145,-5.709185,-1.429717,0.474831,6.967956,-6.710917,4.638404,-1.660774,1.506503,6.642497,9.763249,6.026658,-2.420035,1.673568,0.781166,-7.019839,-9.027926,-6.234926,8.506718,2.781965,3.835392,-3.316638,-5.098517,9.598452,-8.176459,5.550923,8.161072],[0.858297,4.236158,-1.301385,7.013487,1.292419,8.038988,-0.934874,8.988273,3.845095,5.191528,-2.089122,6.929857,6.929281,-7.709402,0.453679,7.056616,-9.120222,0.639985,-1.675186,1.029375,-4.502360,0.578507,8.713043,-2.602602,2.773031,-2.252693,6.716963,8.561901,7.633438,-7.278899,2.800458,9.743016,-5.691108,2.725109,6.814350,-7.548996,8.245515,-8.811875,-0.129285,-5.320279,-5.949795,8.361249,-4.652665,-4.812592,8.666311,-7.423673,4.021043,-8.539489,-1.188088,-4.002395,-6.484819,4.884818,-8.881794,-7.604101,-2.377090,-1.399713,2.825102,6.980233,-7.728457,-4.012928,-2.195899,-4.446870,-4.214653,4.547520,-8.348754,3.669439,-3.743853,5.406520,-1.655355,2.467245,-6.938139,-8.355602,-8.396789,4.104406,3.640635,-9.782242,-4.772156,4.027906,3.155299,1.454435,-6.532267,-5.582249,9.282092,9.394127,2.927498,-6.245899,-3.179900,2.284903,-7.384700,8.476217,-5.665631,2.383566,0.784973,-1.329627,7.866273,-9.383897,-1.634729,-0.692833,-7.853880,2.471671,4.765592,4.996722,-2.677026,-9.847682,4.490759,3.864274,8.399277,-1.716856,0.285424,1.066041,-4.902261,1.564488,-1.092689,-1.725238,5.069334,-2.895173,-7.785928,7.261168,-1.539342,9.128892,7.604984,-2.579718,-2.879779,2.393584,0.397362,-9.674601,0.430109,-6.640921],[-3.440980,-5.814176,-1.211650,-7.523348,7.339545,-2.366960,7.788750,7.234012,-3.278311,8.991132,4.492236,-3.077213,2.910610,-0.730041,-2.451543,-4.954531,-1.867762,2.980136,5.145973,0.339879,4.483494,-7.244858,2.448549,3.648477,1.915409,-9.910431,-9.122526,8.353004,-5.180509,-7.601507,-6.607787,6.410881,1.657192,-9.741680,-0.440525,2.481268,3.750076,-2.736293,-6.235088,-6.743896,-3.859198,-3.850245,4.911338,-6.435277,6.037949,0.650772,1.455804,-6.233572,0.708667,8.286761,-8.861509,3.670041,-1.441030,7.319458,5.415221,8.507415,-2.770705,-3.263305,1.963649,9.536366,4.790536,0.525810,9.523055,-9.703513,-0.501481,-6.403232,-4.846765,-8.055447,1.017513,8.849749,0.826498,-8.169125,-2.953523,1.356915,8.343136,3.120422,9.248613,6.022113,-6.327613,8.303341,3.283384,-2.671378,0.478685,7.942063,-3.710766,-4.347971,7.747458,0.775808,6.966916,3.289794,-4.104896,-5.622730,1.637645,-3.384024,8.297200,-5.058619,-4.089840,-1.729554,1.134189,-2.866995,3.010914,6.351494,-1.227411,-4.886827,-8.898782,-6.451184,-2.028664,-3.732533,8.178194,-5.870376,0.856895,3.962984,7.212838,0.515108,5.732765,-8.291468,-7.724507,0.609187,-7.554343,2.402015,-1.375403,2.554153,-4.229450,-8.312205,6.248213,-9.585799,-7.286472,-9.143469],[7.883664,-3.115379,1.316120,3.277612,3.199933,-5.013757,0.281681,-0.243793,-3.894611,-3.774800,9.717298,-7.481287,1.196446,7.416062,-2.028169,8.733393,-7.042157,1.914212,-7.546241,3.109152,6.301320,-4.351158,8.262101,-6.462322,-7.132954,-2.928085,-6.724069,-9.437233,9.876602,5.898542,0.987213,-3.538556,-8.061062,-6.103313,-8.652317,-1.669315,2.150681,-1.662803,7.718629,-4.186840,-1.612188,-9.450439,8.267987,-2.101481,-6.785904,4.835031,3.217173,9.247189,9.069101,-5.994697,-3.782605,4.890874,8.006674,-5.996620,4.858815,1.224857,-4.363369,-0.592217,-8.346623,-7.778782,-8.243708,3.844509,3.697204,3.965914,-3.842916,8.553733,5.628724,-0.731997,-3.338456,7.743178,-2.898266,0.138579,-5.975517,-7.137000,0.501451,-1.822578,-5.756291,0.891919,-8.482935,-0.706356,-8.421818,2.070904,6.693496,6.108542,3.751321,6.575587,7.934594,-7.226404,-4.688271,-0.504752,1.560172,1.607104,-9.726526,-6.736842,9.888347,5.273212,-5.642613,5.877792,0.540713,2.374202,-6.505959,-0.043920,-3.820166,6.289385,2.537161,-8.277414,-4.795984,2.120016,-3.078427,-3.897562,-9.951504,4.300541,-6.922583,-7.930169,2.673728,-1.276221,-2.783146,8.973796,5.611412,4.671160,4.505788,-2.512282,1.955764,-0.781211,7.781636,-8.455414,7.717397,-1.573289],[-0.077315,7.707939,-9.642567,7.239959,-0.290926,2.609412,-8.404468,-5.888790,-8.606520,0.428910,-2.157390,2.140568,-8.207489,-1.120419,-5.492686,-6.493388,0.907880,-1.937064,9.077913,9.474233,1.195518,-9.217821,4.420669,7.967892,0.466610,-9.904507,-3.884897,1.214837,2.366149,-1.541580,-2.730450,-4.124082,-2.222542,6.769029,9.565296,3.648969,-7.792849,-6.833818,1.842279,0.574229,-8.091217,-4.959709,-3.701697,-1.379737,8.065345,2.933166,2.245949,-7.920800,-4.882296,8.123834,-7.932454,-8.202986,-2.138309,-7.703716,-8.283889,-3.534565,8.940714,-1.585343,-2.265506,3.501104,4.329320,4.088116,2.115006,9.842282,-5.852511,4.970994,9.792904,9.672486,-7.402546,5.920782,0.836622,4.879956,5.755856,-7.215788,-7.401869,5.711567,-8.769032,-8.316228,-0.942734,-6.230726,1.446806,9.930216,6.561214,-7.878384,8.345062,5.824057,-1.958151,9.454266,-4.075284,5.142204,-5.104093,-0.368040,-7.526307,-5.768775,-2.606396,7.616710,-2.662048,1.391656,1.881310,6.814395,9.247752,8.052756,3.253817,8.156315,3.283168,8.598493,-2.279331,-0.244940,-0.533575,2.473615,7.950148,-4.778552,-8.902309,-6.983001,-8.916937,-4.434271,-1.753557,5.273281,-5.225402,4.252534,4.624183,8.169767,-4.888401,-7.876188,-9.589456,-5.265580,-4.532209,3.395592],[-2.204553,-8.049076,7.792911,-2.272056,2.086395,-4.598666,6.059191,8.998793,-3.364828,-7.807723,-3.872813,5.335039,-1.206827,9.057387,5.476078,9.602578,-3.647013,-7.350001,-6.388809,9.089149,-8.153122,-7.733626,8.493210,-0.056208,-0.125630,-5.527764,-3.110239,-6.819345,4.652519,0.052533,-1.420673,-2.212893,8.126748,4.718268,-1.522537,8.316344,-0.584497,-3.894400,3.626335,5.997716,2.175764,-6.209802,4.714385,-4.693940,-1.560921,6.838041,3.754636,2.617808,-8.187573,-2.663505,6.813158,4.092961,4.283153,2.495404,9.943396,1.735936,8.870490,-8.568923,-0.614886,3.480355,-5.096860,5.905521,3.996187,-8.372678,4.555174,-2.189308,-9.638814,-5.094158,2.501384,-1.246660,-6.597563,0.480514,-0.853140,6.837217,-3.022019,2.621669,9.528446,-0.615437,-8.546670,0.662215,-2.602398,-9.539133,5.680693,-4.976968,7.680285,3.480578,-5.476855,6.521048,-0.399956,5.699967,8.560884,-7.636257,-4.774877,9.591498,4.092543,-7.696410,-5.401306,9.484305,-0.650863,-8.678073,-1.247908,1.882145,-3.646425,4.637454,0.577833,-1.080578,-5.891987,-7.390196,2.553932,0.978946,-4.602748,-6.263138,-6.382552,-8.626024,-9.372533,-3.945835,2.420899,9.781125,-8.503391,-9.144891,-1.902134,4.650118,0.413072,8.761919,0.421468,-3.042943,-3.841287,3.797001],[-4.651212,1.280088,-1.693234,2.430814,-3.911294,-8.292065,-0.287378,-6.318189,0.875619,6.773878,1.652820,0.921491,0.950606,-2.105868,3.277164,-5.982132,-4.393738,-7.140481,-0.572568,-6.866779,-4.217399,0.133702,8.490607,9.590866,7.241063,-4.608011,5.635440,-1.923256,8.360049,5.810139,-9.403273,-1.160374,1.672225,8.651109,-6.094856,-9.449179,-7.389827,0.116686,-4.858293,-9.332757,0.872979,-6.534043,4.800616,4.879037,-7.251014,9.027434,8.616982,7.784147,-4.009634,-2.526376,-1.851531,2.408896,-9.631864,-3.702075,-7.506947,8.259244,9.657263,-0.008724,-4.540830,0.089951,-4.796574,8.287398,-0.466004,1.502009,8.488567,-4.318944,-1.658287,3.241268,-9.509479,1.018658,-5.980216,6.604516,2.967887,-7.155078,2.384073,-8.882023,-8.840663,1.842191,-0.960124,6.277997,-8.421648,8.284456,-5.237290,-3.121416,-2.090640,7.711247,-9.778089,2.957699,-5.150098,4.992049,2.297613,-0.176411,0.179324,7.883540,-2.812142,5.476110,-3.993738,5.279281,8.205827,5.466185,-7.874190,5.335153,8.132910,-5.045790,-1.207937,-2.623338,4.826411,-7.215330,-2.641806,-4.204463,-6.017768,-0.637645,-6.145744,0.008350,4.826850,6.500347,6.966015,-3.115096,4.419982,6.259826,-3.041137,-2.973535,-5.760519,-0.491725,-4.753514,8.691603,-8.054434,6.539647],[8.607843,2.348435,9.184339,-9.544344,4.692004,-0.567036,4.852123,-5.221190,3.882561,8.324445,1.840502,-6.274480,-5.485392,8.124445,1.393517,2.973100,9.351807,4.462888,-5.263316,-6.057831,-3.195522,-4.192383,-1.370298,0.123046,4.270346,4.013159,-1.463126,-9.981363,1.896673,-0.122484,-8.199932,2.372057,-7.353899,6.847235,9.086318,-3.714040,-3.721222,2.358928,8.907815,-3.708590,-1.740832,-3.258416,0.184551,3.261645,-8.320733,-4.381523,-0.574489,-7.442592,-0.986451,7.757972,5.986931,-9.857361,-1.186190,-6.178124,-7.852076,3.654862,-9.845145,-6.019167,-9.362969,-7.234380,3.401677,-7.924945,7.652724,-8.336470,-4.204790,7.925015,1.898718,8.393400,7.021489,1.705882,-5.967457,-0.410611,-1.347009,-3.364716,1.804240,1.893758,2.025211,-5.298633,6.465912,5.050694,-1.446975,0.157840,-2.529615,5.111133,4.883499,7.606534,2.731419,-3.901787,-7.890208,6.566668,-6.376852,-9.132516,-0.150538,-4.284559,5.440822,9.545163,-2.305415,9.647181,0.802323,-7.626850,-7.101265,-8.564042,-2.559848,0.159230,3.429959,-5.844468,-4.891874,-2.729704,3.738538,-1.655655,-4.077488,-4.461109,-4.706479,6.722430,-1.650869,-6.737037,8.540563,1.321182,-1.254027,6.756471,1.877766,5.192651,-5.924743,-0.538082,-1.865344,1.593669,-0.811731,5.848867],[7.930579,-1.048528,-6.972070,-8.833229,5.716047,1.950010,5.904037,2.772213,-8.571165,-0.956764,-8.510799,-9.223507,7.166105,2.853420,0.280926,-7.753108,5.050429,8.215919,-2.795916,-3.757938,3.064549,6.665897,-9.522584,6.344348,3.116827,6.945452,-8.768154,-0.081341,2.047610,6.483059,-2.432582,-1.636560,-3.498968,4.918235,3.638652,-7.426115,-5.150937,4.064416,-2.734927,2.589188,-1.963310,-5.556641,4.724097,-7.089524,-5.211946,5.896343,-4.823355,0.583006,3.459198,7.474589,-2.344364,6.649087,6.375019,7.211343,5.142221,9.773658,7.768314,-5.337282,-0.180692,-3.434978,-6.238329,4.179679,6.353425,8.209027,9.933272,7.624955,-0.898263,-7.228780,-7.043414,-3.191322,2.693230,1.223731,5.737356,1.083638,0.345137,-9.581399,0.588404,-8.819721,-7.837399,-5.345198,-9.026327,1.047508,-2.157350,-6.891069,3.458501,9.602231,-0.754895,-7.263206,-1.375097,8.059133,9.985653,-5.525116,1.683867,5.685765,-8.835265,3.320431,2.715413,-8.608234,8.728038,-4.218854,6.791445,0.569353,7.538881,2.127392,3.170641,5.661992,-8.231242,8.089968,-1.598535,-6.618518,-8.443135,3.122469,-2.276717,-6.552420,-4.463110,3.630016,-5.011257,7.255098,-8.252054,3.601785,4.214462,-2.417692,-8.357474,5.658784,-0.386146,-0.526536,2.281009,-3.095886],[4.951861,2.614034,-8.309501,0.266686,7.326213,-5.782629,1.204294,7.783287,-7.160295,-6.751926,-6.204007,9.056889,8.472189,1.128197,1.615398,8.046898,-6.341021,-9.255263,0.005549,6.433920,-9.327660,-7.171157,-7.209762,-5.334158,6.540848,0.042680,-9.661795,-5.546473,-8.797953,-6.496708,0.872751,-8.330767,3.553621,-3.152880,-5.553693,6.554315,1.666144,-9.485881,-3.021339,-8.825818,-0.477853,1.632794,-3.922584,-2.957300,9.164742,-6.467057,-1.194455,7.833563,4.433820,-9.616932,0.440242,-9.185324,4.049967,-4.876136,7.579340,5.946033,6.996866,-0.728539,-7.575657,-4.435488,-8.473457,2.540137,-7.101137,-2.348804,-4.553833,9.641413,-0.872272,0.177418,2.922926,9.933094,-1.212772,-2.130945,8.964891,-1.642401,7.903236,-4.169324,7.310293,6.490252,-6.987276,-3.242628,-5.540532,-6.150404,6.151839,6.002139,-3.251972,-7.299701,2.193355,-0.041871,0.386432,0.484014,9.119550,-9.482617,2.088976,-2.344574,8.927618,-4.536756,0.185026,4.590068,-6.454971,7.076918,1.527839,-2.925821,-1.536036,-5.700791,1.748151,-2.602357,4.809363,0.073817,-2.586449,-4.391765,-7.336793,-5.072141,3.453983,5.540216,-7.546246,-0.849147,-3.258364,-2.386273,9.268203,-6.541344,-1.378716,-2.088842,-7.000946,-0.595992,8.006036,-2.795675,-7.907451,6.953138],[-3.073259,7.061036,8.305084,4.453346,-5.203936,-2.505165,-8.961250,-3.221673,-2.199781,-0.533282,6.462836,9.361475,0.975597,-5.897493,-6.093751,3.094164,-2.372557,1.132120,5.215691,6.534136,6.091612,1.397133,4.963615,-2.354527,-1.850280,-1.755727,-7.069137,5.112829,4.132389,4.468326,4.028888,3.670138,4.575867,-7.819127,3.991227,3.415559,0.740286,-1.493430,-4.730234,-4.767707,3.281558,-8.992686,7.109373,5.993160,-9.995839,-4.623185,0.602961,9.495219,1.182420,1.857883,-9.811924,7.171591,-8.563975,-2.115355,-6.209877,2.707405,6.298258,4.055970,8.077264,2.276356,2.201258,-7.442306,9.013821,-6.766593,5.559696,0.626857,-4.108595,0.829364,-3.043476,7.107505,8.388638,-4.848429,5.884078,0.424139,-0.275487,-5.306054,-5.971162,0.101121,-2.019717,-0.866376,1.225931,0.208904,-2.468538,-7.361371,-9.410338,-4.477245,2.947674,-8.831846,-1.865033,8.407449,2.157500,8.932736,-3.761189,4.515920,-9.682704,-4.126174,-7.335272,5.074458,7.820320,3.495916,7.775778,3.586466,5.963811,3.793460,9.503376,-0.830801,-5.060138,-0.432587,-1.931012,-0.787135,-3.923081,5.103534,-2.850776,3.068947,-8.761500,-3.083582,-6.503852,-7.996666,7.096466,-6.241127,0.897500,7.339920,-2.913359,-4.695212,-3.991550,2.634034,-6.949712,2.261474],[6.025463,-5.386319,9.410864,4.339203,-8.618607,8.848379,-8.171779,-2.931260,8.710236,2.659793,0.663404,-3.866542,-3.656476,-7.457519,-2.521365,-3.912163,0.088339,-4.885811,3.351739,-7.745738,6.040112,7.460962,4.968479,4.363883,-9.092638,-7.029709,2.624636,7.783263,-7.201060,-7.865559,3.295707,-8.915236,2.874571,6.476225,8.309800,-9.011951,-2.958664,-1.492659,8.457220,-5.395801,-8.497136,0.373706,0.882679,-7.821313,4.559630,4.389944,4.410451,6.998804,-2.980080,3.631952,-8.226497,-2.278078,4.161527,3.266887,7.918686,-6.529139,-6.508304,0.818658,-8.203388,-8.435340,-8.596524,-7.430155,7.912565,-5.763198,6.113640,4.446562,2.317859,-6.077060,-1.302323,5.635219,1.581185,-6.155361,5.427477,4.178967,0.024314,8.193308,9.300218,6.651931,3.316762,-2.804438,6.927969,8.857539,-8.541389,2.356239,5.128665,-0.076606,0.523476,-9.305347,-5.499768,-3.185288,2.610293,5.386792,-9.940619,-5.516508,-3.976829,-2.630328,-1.462783,-2.498484,2.834892,-1.888283,-9.005022,4.516182,5.604554,-4.954985,6.780374,5.941031,0.689917,-0.044908,4.696384,5.750439,2.339496,3.549004,9.560012,-0.808640,3.937230,7.523567,1.491134,4.399327,1.916916,-1.682229,8.350863,6.954451,-2.754357,-2.243487,-4.914394,1.705895,9.315389,-3.130539],[-4.609984,8.727994,7.882331,3.625904,5.697931,7.834676,4.943188,5.733306,5.706068,7.392496,-0.110313,7.228015,0.250660,8.311175,9.713895,-9.292529,-5.251564,9.087135,-6.445113,0.408656,-2.147277,-6.634687,-2.983127,-6.353465,3.391849,-4.334857,0.909233,-3.635954,-8.477073,3.027530,9.880728,-6.756231,2.485014,3.416240,-4.185245,1.902474,0.731667,-6.876959,7.390463,7.354802,-6.295358,2.088684,7.098574,8.569004,9.123905,7.610919,-5.428473,-5.043373,-6.368265,4.985148,-9.852073,9.394521,3.802262,-8.327282,-1.946925,1.427371,2.413508,-0.529704,-8.019645,-0.745318,-0.231564,5.358869,4.772493,-1.979673,4.584185,8.233798,-7.033627,-4.055304,-0.325535,-1.836045,-0.360089,-2.310225,-8.240611,9.765417,-4.964815,-0.887742,5.907955,0.542628,-8.327563,-5.974401,9.812357,1.296920,-9.178431,8.856832,-6.561405,1.220462,0.907974,-6.518906,-3.372957,1.019597,-8.321106,9.871832,8.946789,-3.990410,-6.779293,2.061774,-7.664930,4.176473,-4.679625,-0.148080,7.291183,-7.293477,8.633528,-3.519783,-3.048939,-6.764587,-6.738024,-1.766884,-5.790940,3.100752,-2.687398,-5.846694,0.492753,7.169936,8.988674,9.560834,-2.544982,8.887062,-5.941015,0.286630,1.021281,7.563175,-0.215628,1.929616,0.890197,6.050886,-9.012410,-6.903788],[-9.613999,7.266887,0.889917,-5.110117,-0.920026,1.541020,2.925831,9.767496,-3.494840,-2.541600,4.129066,3.113072,-7.098437,-9.569175,0.023962,4.032215,-0.631484,5.894337,6.274063,1.782682,9.464330,-7.004888,-0.412670,-9.793593,3.906472,4.690624,-1.468256,3.822145,2.119109,7.736810,-7.213338,-8.815574,-7.295860,9.124851,1.638060,5.182215,5.154359,-9.462056,-2.304049,2.886336,4.920441,-3.723695,3.376089,4.265733,7.026101,7.107532,5.077457,-5.972512,7.149323,8.993059,3.930399,-1.465959,-9.158269,-8.514887,9.558428,-3.474798,-5.081573,-3.750513,-2.995854,-1.837034,2.995186,-3.783142,-1.112892,-7.230190,-7.943933,-3.573869,-7.176196,-6.333654,6.954831,5.808321,-6.785062,-4.698238,-5.385772,6.455499,-0.519486,-7.679577,5.248898,-1.650492,-5.635471,-2.096121,-8.332735,-6.579711,2.984572,7.472289,9.056103,2.929344,8.802582,-3.184762,-2.200205,-9.499758,1.814543,-0.663405,1.855864,-3.835519,0.642919,-7.633466,-5.019762,3.508676,-4.314907,-6.335336,2.236810,7.599198,0.067012,5.745088,4.250084,-0.959746,-7.328621,-1.544359,8.659587,4.533924,8.866565,-4.188912,-4.116521,9.361612,3.494802,-2.435025,0.321336,5.497984,6.970707,-5.068138,-0.957855,-1.236040,-7.252164,5.225818,7.425180,-8.454229,-6.997173,-1.304071],[-3.353542,1.184962,-4.684416,1.850712,-5.746872,-1.191582,1.987876,-4.027362,-8.840067,-3.443577,6.068180,-0.290057,4.843010,8.683077,-2.150091,-6.543795,3.139116,-8.057723,-3.984718,4.593443,-0.484624,-9.267947,6.434447,4.233480,3.929312,-0.756488,7.066130,-2.152804,0.907766,3.840710,0.925531,2.373168,1.888785,-7.380342,1.991124,-4.022177,-2.095817,9.321694,-9.418483,3.888769,-9.151361,-6.554342,-0.836425,-9.423106,7.605505,9.259712,-3.696129,7.551152,-3.661887,4.040151,-0.522277,5.971266,-0.761205,-6.660352,-9.565376,0.307697,2.604140,-1.365208,-8.115738,0.103589,-5.806449,-3.240004,3.468168,3.984326,-0.031663,7.586852,-1.164393,0.621255,9.518768,9.348501,0.751582,7.126867,2.743323,-8.580885,-0.275421,2.501301,7.893862,4.869723,2.519916,-4.900933,7.751114,-7.598033,7.601082,4.751929,7.309197,-8.653977,3.476556,7.939526,3.853337,-9.505014,-0.025694,8.216767,3.262336,-3.871430,7.913422,-1.533543,1.659338,-2.763182,-1.264903,9.477665,5.934273,-9.727051,1.727016,3.389551,-4.118891,8.866795,9.500022,-4.875091,1.478193,4.636631,4.667803,-4.140022,5.387372,9.735902,-8.536316,4.133029,-5.701620,-5.423997,-3.960706,1.142449,3.091446,0.262002,4.264922,2.186172,-4.182236,1.216461,8.847919,-4.738927],[-7.394522,-3.266154,6.861990,-1.405654,-1.419044,7.220007,-7.847027,1.131666,4.591063,-3.005763,-8.626123,-2.940464,1.801482,-1.543122,6.955246,2.014879,4.315171,-7.907031,1.836185,-2.230907,2.073832,-2.480988,-1.346108,4.209885,-6.252124,-8.810083,7.433101,-0.872233,-1.715891,4.138499,5.985845,-5.260007,1.813850,0.459625,7.016234,-0.755511,-4.621816,2.758306,-3.097644,-6.350275,-1.280813,7.582001,6.796622,-9.869611,-1.521297,9.539900,-4.587227,-8.097245,-9.339374,5.857355,-1.924001,-9.108987,-4.978860,5.698615,-8.138175,-9.714611,5.401302,3.312475,6.246250,-7.070818,0.865343,5.275815,4.330358,3.332117,-3.931919,-8.698851,-3.773250,0.559721,-3.479695,0.040636,-1.915277,0.628868,0.418105,5.926201,3.568399,8.175465,8.617616,-6.237286,-1.546125,2.599090,-3.761541,2.642800,-0.984075,-5.645143,-0.492343,-5.951938,7.590540,-0.472136,-8.830480,8.014804,2.349808,-2.534275,4.845878,-6.303437,2.627658,-0.777350,8.299083,-0.042467,-8.055423,-4.066365,6.305681,-8.953352,-0.369391,2.333137,-6.334385,-3.367560,4.725483,-6.048019,-7.301362,0.805073,-7.327202,2.821865,7.721171,-8.986615,-5.542478,-0.413223,4.688418,-2.829342,4.768973,-0.862324,-7.729361,-0.993325,8.584771,9.565673,6.422887,7.112712,-5.586305,7.926184],[4.371069,-0.409487,-6.377885,4.457459,9.775158,2.194332,0.347099,-6.540801,0.597740,-0.889503,2.640912,-5.819664,-3.305287,8.197529,-3.373699,-0.502764,-8.114295,-0.298576,-7.643152,-4.572317,2.172608,-7.644458,4.695224,3.905269,6.032285,6.604525,1.276106,6.004478,-1.314114,-8.170850,0.224208,-9.148750,5.492684,-6.767704,-9.354517,5.078529,9.213888,-9.176002,-6.625919,1.987645,1.765204,5.978025,-5.092453,-2.494748,2.629262,5.177250,-0.121407,-5.082183,-8.560554,0.626246,2.002088,3.945665,-7.755358,2.917014,9.905597,9.570889,1.147545,6.925509,8.436090,-7.894710,-4.839443,-9.785043,1.642468,1.007217,1.593358,-6.652764,3.268958,6.702977,-6.581886,8.192694,7.953506,-5.309204,1.435032,-0.754512,-6.138231,7.872553,1.961835,4.974065,-9.518758,-3.803962,9.343495,-2.250053,-8.984504,-1.097077,-9.277011,-0.893811,-0.073656,-0.956187,-7.772217,9.082392,-8.178018,-6.085727,-1.964434,-5.213166,-4.620993,-8.580763,-5.378820,-2.115423,1.821549,2.079396,-2.890911,5.034341,-8.690885,-5.509027,6.778764,2.103707,-9.785741,3.344597,2.674925,2.287734,-7.916062,2.890892,-5.676416,-3.908439,9.498045,3.689840,3.724937,-2.137287,2.345793,9.962204,-6.430408,-4.527098,-8.022833,5.184943,0.206922,9.126066,1.918606,-0.457218],[-1.653053,9.279873,-4.866664,-9.336433,8.674673,-4.313567,1.691307,0.935409,-6.560294,1.062300,2.226502,3.284174,5.446719,6.426332,5.073285,4.414432,-6.458588,1.466047,5.834630,-2.390714,4.063426,4.376822,-8.995867,-6.217714,-7.255210,8.053018,5.525062,4.318380,9.095268,3.624110,-6.424744,9.331779,5.499613,-9.457726,-1.351164,0.516042,5.602198,-1.758767,-8.326537,-4.665939,-4.977763,-8.165460,-0.217648,0.765703,-9.691646,3.655876,0.750227,4.623782,9.630523,5.682190,7.701223,3.485129,-7.028918,-9.474736,7.840872,8.731097,6.495135,5.941156,1.022848,3.345673,7.697394,7.836436,7.219883,6.875873,-3.173307,-7.519589,8.420249,-0.717816,-3.544945,-9.652692,3.790202,5.850736,-3.073044,8.406730,6.543797,3.407161,2.279641,0.133306,-9.843359,1.016019,-2.404452,-3.227442,-8.440891,9.962541,2.336829,-2.187499,0.755029,2.733627,-4.008223,-1.855611,-5.617483,-7.400659,-1.187940,-4.494756,-7.834892,9.362329,-9.180777,-7.867634,-5.707137,6.308584,-8.935488,-1.891735,9.388476,0.702527,-7.073726,-6.434527,2.631802,-4.426864,-4.522768,-0.177474,0.958241,9.745420,0.339339,-8.103439,2.975270,-6.175974,7.701677,-9.699037,-1.836890,-4.359127,4.280187,4.507388,5.802387,-3.807631,4.228337,-5.982774,-4.805303,-8.446897]], dtype = "float32")#candidate|3438|(24, 128)|const|float32
call_3433 = relay.TupleGetItem(func_2801_call(relay.reshape(var_3434.astype('uint16'), []), relay.reshape(const_3435.astype('uint16'), [2, 13, 2]), relay.reshape(const_3436.astype('float32'), [520,]), relay.reshape(call_3427.astype('bool'), [1248,]), relay.reshape(const_3437.astype('float32'), [140,]), relay.reshape(const_3438.astype('float32'), [3072,]), ), 3)
call_3439 = relay.TupleGetItem(func_2808_call(relay.reshape(var_3434.astype('uint16'), []), relay.reshape(const_3435.astype('uint16'), [2, 13, 2]), relay.reshape(const_3436.astype('float32'), [520,]), relay.reshape(call_3427.astype('bool'), [1248,]), relay.reshape(const_3437.astype('float32'), [140,]), relay.reshape(const_3438.astype('float32'), [3072,]), ), 3)
uop_3443 = relay.log2(uop_3416.astype('float32')) # shape=(3, 6, 8)
output = relay.Tuple([bop_3419,call_3427,var_3428,call_3433,var_3434,const_3435,const_3436,const_3437,const_3438,uop_3443,])
output2 = relay.Tuple([bop_3419,call_3429,var_3428,call_3439,var_3434,const_3435,const_3436,const_3437,const_3438,uop_3443,])
func_3450 = relay.Function([var_3415,var_3428,var_3434,], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mutated_mod.get_global_var('func_3450')
var_3452 = relay.var("var_3452", dtype = "float32", shape = (3, 6, 8))#candidate|3452|(3, 6, 8)|var|float32
var_3453 = relay.var("var_3453", dtype = "bool", shape = (4, 312))#candidate|3453|(4, 312)|var|bool
var_3454 = relay.var("var_3454", dtype = "uint16", shape = ())#candidate|3454|()|var|uint16
call_3451 = func_3450_call(var_3452,var_3453,var_3454,)
output = call_3451
func_3455 = relay.Function([var_3452,var_3453,var_3454,], output)
mutated_mod['func_3455'] = func_3455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3523 = relay.var("var_3523", dtype = "float64", shape = (10, 4, 16))#candidate|3523|(10, 4, 16)|var|float64
uop_3524 = relay.asin(var_3523.astype('float64')) # shape=(10, 4, 16)
output = relay.Tuple([uop_3524,])
output2 = relay.Tuple([uop_3524,])
func_3533 = relay.Function([var_3523,], output)
mod['func_3533'] = func_3533
mod = relay.transform.InferType()(mod)
var_3534 = relay.var("var_3534", dtype = "float64", shape = (10, 4, 16))#candidate|3534|(10, 4, 16)|var|float64
output = func_3533(var_3534)
func_3535 = relay.Function([var_3534], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3708 = relay.const([[[-8,-1,8,-10,-1],[-9,-5,-3,-1,8],[-4,-7,-4,2,-8],[1,-4,7,-4,-6],[1,-1,-6,-1,5],[2,-4,8,1,9],[1,-7,4,8,3],[4,9,-10,2,-1],[5,-6,-2,6,-6]],[[-1,6,-3,-4,-2],[-5,10,-4,1,4],[-10,-3,7,-3,-9],[9,-8,-9,-7,2],[-9,6,2,-10,5],[-3,4,-3,3,7],[7,-3,-10,7,-7],[-9,-5,6,6,-10],[-1,-5,-3,9,6]],[[-10,-9,-7,-7,-10],[-3,-1,-3,-8,2],[-9,-5,9,5,-5],[-1,2,-10,-2,-5],[-1,1,-7,-8,5],[-6,-2,-1,8,6],[-6,8,8,-9,7],[3,2,-10,10,7],[8,2,-2,-9,-8]],[[4,4,4,-10,-4],[-8,-4,3,-1,-4],[8,10,1,4,4],[7,-8,2,4,-6],[8,5,4,10,1],[-4,7,1,-7,8],[-7,-1,-7,-6,4],[7,-5,8,10,-3],[-1,2,-2,-5,-7]],[[2,9,8,6,-9],[5,-4,10,-10,-9],[1,-1,-7,-5,-3],[7,-6,-1,-4,-8],[9,1,-6,7,-1],[-8,-8,5,-1,10],[-3,-9,5,3,9],[6,-7,-3,-6,-8],[9,-1,-6,-2,9]],[[2,1,10,3,9],[5,2,-10,6,5],[7,1,-9,-4,-5],[-5,6,-10,5,-10],[-5,-10,8,2,-8],[-9,1,2,-8,-2],[-1,1,6,4,5],[6,10,7,-5,-1],[5,7,1,-5,8]],[[-5,8,-8,7,6],[5,-4,-5,2,-9],[5,4,-8,-1,-7],[10,-10,8,-3,-10],[-9,-8,-2,3,4],[-7,-3,-1,8,-4],[3,-7,-4,-10,1],[5,-7,-4,-9,2],[-8,2,-2,2,7]],[[6,-2,4,9,-5],[8,-2,-7,3,-3],[9,4,3,-4,-7],[-3,-2,8,-2,-4],[9,9,6,-8,-1],[-3,-2,-2,4,-2],[-9,-6,1,-1,-2],[2,-8,3,-8,-4],[-9,9,-4,6,9]],[[9,-2,-2,-10,6],[9,-3,2,2,6],[8,3,-9,-10,-6],[-3,-10,-1,-10,5],[-5,5,-5,6,6],[3,9,3,4,-3],[6,-7,-10,7,9],[5,10,6,8,3],[5,-10,-6,10,-8]],[[-2,8,-1,6,-8],[1,3,-7,9,10],[-9,-1,-7,2,7],[-2,-6,-8,9,-4],[1,4,1,2,5],[1,6,1,-9,5],[-4,-6,-7,7,10],[-5,-9,6,8,-9],[1,7,3,3,4]],[[1,6,8,4,9],[9,3,-3,-9,7],[6,-1,5,2,10],[-9,3,8,7,9],[6,-10,-9,9,3],[-7,4,-3,-3,-1],[10,4,3,7,4],[8,5,10,-10,-1],[5,-2,-7,9,10]],[[3,-2,-5,6,7],[-9,1,-2,9,8],[-4,1,1,3,-8],[-2,4,5,-8,-3],[-5,9,-10,7,-2],[-1,-7,4,-10,9],[-1,6,-6,-7,4],[-1,-6,-4,-3,6],[-5,4,1,1,-7]],[[9,3,3,8,8],[-2,10,-1,-4,5],[-4,9,2,5,3],[-4,-10,-10,8,3],[-2,5,4,-8,4],[8,-4,5,-1,9],[-4,6,2,7,6],[8,-8,9,2,-8],[-1,-6,7,10,4]],[[2,4,2,-4,10],[2,5,2,1,3],[2,-8,-8,-10,3],[-10,1,-2,2,5],[-5,9,-6,6,-6],[-9,-3,-7,-3,9],[-2,-10,-3,-8,-8],[6,-2,5,-9,-7],[10,-5,4,3,-10]]], dtype = "uint8")#candidate|3708|(14, 9, 5)|const|uint8
var_3709 = relay.var("var_3709", dtype = "uint8", shape = (14, 9, 5))#candidate|3709|(14, 9, 5)|var|uint8
bop_3710 = relay.bitwise_xor(const_3708.astype('uint8'), relay.reshape(var_3709.astype('uint8'), relay.shape_of(const_3708))) # shape=(14, 9, 5)
output = bop_3710
output2 = bop_3710
func_3713 = relay.Function([var_3709,], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
mutated_mod['func_3713'] = func_3713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3714 = relay.var("var_3714", dtype = "uint8", shape = (14, 9, 5))#candidate|3714|(14, 9, 5)|var|uint8
func_3713_call = mutated_mod.get_global_var('func_3713')
call_3715 = func_3713_call(var_3714)
output = call_3715
func_3716 = relay.Function([var_3714], output)
mutated_mod['func_3716'] = func_3716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3758 = relay.var("var_3758", dtype = "float64", shape = (4, 4, 11))#candidate|3758|(4, 4, 11)|var|float64
var_3759 = relay.var("var_3759", dtype = "float64", shape = (4, 4, 11))#candidate|3759|(4, 4, 11)|var|float64
bop_3760 = relay.mod(var_3758.astype('float64'), relay.reshape(var_3759.astype('float64'), relay.shape_of(var_3758))) # shape=(4, 4, 11)
func_2211_call = mod.get_global_var('func_2211')
func_2215_call = mutated_mod.get_global_var('func_2215')
const_3765 = relay.const([-5.705804,-1.365001,-3.609986,7.803887,2.560697,9.194150,4.825372,7.629074,-6.258204,7.885258,6.571676,0.717388,4.119585,-8.671590,-9.912542,-6.278745,-7.320382,2.788901,-8.259171,1.584868,-2.852182,9.194039,7.266299,-1.195392,6.738441,2.002163,-7.602351,-6.999524,-5.970215,-4.437031,-5.788141,6.126936,-8.384700,1.304756,8.418985,-2.348256,2.782300,2.036388,6.980959,-5.666630,-3.681181,2.876273,-8.324602,-5.310411,-3.771779,4.392770,-1.820600,4.235933,-9.674877,7.175044,2.167019,9.569119,-1.485076,3.932943,-3.054903,-0.616439,7.497353,4.016475,6.962598,2.789809,5.521046,8.031230,3.048443,-7.913870,9.507771,-8.636153,1.669731,-7.719961,-1.388358,6.536928,7.525806,8.675521,5.858568,3.225854,4.409567,-8.201167,2.030993,-0.827237,-0.140587,-1.028203,-7.447515,-6.598606,-3.562486,4.478199,0.267822,5.711343,-3.990144,3.409158,-4.231954,3.227287,2.357395,-3.221416,4.537185,-1.595223,3.306711,9.242691,7.269989,9.648046,-7.613016,-0.057492,-3.377208,2.537387,4.089460,-5.876097,3.950348,8.856826,-2.453441,9.449228,-8.471493,4.925297,2.836570,2.385423,2.199764,-0.004652,-7.616716,7.418681,8.840324,0.830622,8.661584,-9.728153,6.863182,-9.381665,7.903245,3.565481,5.426122,6.178897,-8.836077,6.164038,5.291351,7.882802,-9.362113,-8.599934,8.848573,-3.357154,-5.351589,1.362702,-6.881909,7.207827,-6.616440,3.781356,2.671348,-7.488632,-4.869220,8.523742,3.375443,4.202115,9.898209,4.771118,3.692700,-4.063737,-2.153384,-0.861836,8.573035,-1.227620,-3.504227,2.192460,-7.133403,0.620134,9.873922,0.217524,-5.555359,-1.739241,-9.614663,-3.370422,-5.980282,3.834650,3.754679,8.693292,8.604631,-3.809651,-8.624376,-2.736665,7.369437,7.691718,-1.100216,7.990322,3.330428,6.136570,-0.794271,8.286274,-9.333161,0.555785,-4.303689,-5.868452,5.729510,-2.788927,-5.204054,-1.094704,-8.981386,-4.620918,-0.016164,6.158502,4.904950,-4.381483,2.407023,-7.685654,-3.819524,0.233575,5.334069,9.562128,-7.886026,-7.396555,-0.532355,-6.917244,-2.035020,0.881090,-5.495193,-3.907112,2.008164,7.935119,-9.412167,-0.163416,-9.194878,-5.956562,3.618139,-4.942013,7.519614,-7.505768,1.827980,-9.578664,9.573238,9.856776,5.261110,-7.843191,-9.888986,7.676894,3.435803,8.928088,8.081417,4.858935,2.381936,-3.107985,-1.329797,-5.658626,4.936068,8.603021,5.469710,-3.910451,-2.863166,5.692905,3.655944,-9.942258,6.014212,-4.188802,7.613370,1.053896,6.939605,1.987609,4.288000,8.146592,-1.344571,0.842041,5.442829,-9.908024,-2.480103,-7.204915,-2.054161,5.058099,1.610230,-0.170266,3.340989,5.489353,4.679696,0.170074,4.815702,8.525400,8.340761,6.197906,6.765969,5.658333,6.651940,5.621789,-5.956894,8.604779,-7.796942,-1.514044,-0.625991,-1.744994,-0.844197,-1.609643,-3.192406,1.086554,-5.397088,0.446073,1.296225,-5.125186,-4.710422,-7.897928,-7.024309,-7.955137,-6.949633,-8.359966,2.589152,-1.581800,-7.264407,0.186401,8.181836,2.194318,4.043132,0.344750,5.410382,8.221485,8.905478,-7.007224,-9.252614,-0.367802,7.637351,8.183903,1.270987,-7.207946,-0.744925,-8.813830,-3.574375,4.356465,-8.601798,-1.389818,-3.676796,-8.698089,-9.630658,3.438119,9.681720,6.167053,9.152251,3.430083,-7.086997,-0.103932,8.822918,-1.024189,-9.652394,5.795737,-1.821468,-2.385660,-1.890177,-8.924197,1.268685,5.177325,7.265388,8.521034,2.077585,0.626677,-5.608299,-3.700410,2.697867,-3.496806,-1.690966,-5.037875,2.704398,-4.669992,1.382304,-9.200387,-9.727974,-1.580281,-9.375602,-1.808710,-2.842819,-0.610890,-5.135145,0.022386,1.601006,2.430990,8.014283,8.043798,8.903293,-3.712108,-7.934327,8.305813,-9.537484,3.930621,-7.311851,-8.270056,3.173284,3.578787,6.342318,4.256934,-1.936554,5.937693,2.469311,7.382753,-8.052306,9.081141,-4.661099,7.033713,-2.890048,-8.576915,0.709044,-0.322945,3.862590,-1.495200,-4.735847,5.470818,-8.549898,-7.237661,4.627875,-3.566042,-4.973478,1.339023,5.776644,4.492213,3.629211,-7.325774,3.232434,6.359880,-3.868777,4.528576,-6.953996,-9.800323,2.794014,-7.984537,-0.914034,-8.923360,-6.555182,6.805903,6.916330,-6.191203,-7.457535,1.130232,2.099419,-5.352265,-2.813514,-6.614000,1.475421,0.978912,5.324196,3.842950,0.788851,-2.925899,3.683016,2.624534,2.527149,6.466284,-3.061900,8.507038,-7.845990,8.211904,3.024124,6.498539,-6.575079,-3.125171,-1.118277,5.364254,4.717671,1.428327,-1.229363,1.706538,-4.509214,8.422125,3.296340,-8.931625,8.394627,-4.344046,6.814517,1.753444,8.297787,-4.026009,4.035953,3.622977,3.612064,-0.751675,6.336841,2.053037,-7.762764,-2.620527,1.986391,4.459449,-1.838435,-3.739542,2.013388,-1.582291,0.858819,-4.932903,-1.110333,2.604837,1.969169,1.348823,-5.386958,-9.630528,-7.090185,-1.620658,-1.738216,-8.530225,-0.869370,-9.896914,-6.046538,-5.574311,1.060268,-1.795436,-0.089573,-1.134796,6.912295,-4.608460,-1.176633,3.813854,4.391573,9.049180,7.918237,-6.643776,-6.541618,-9.212192,4.109848,-8.782467,9.366605,9.151447,-6.165580,1.976336,1.516845,2.876949,3.850506,-7.567591,6.230330,-5.255929,1.794165,-7.121291,1.087821,-0.295455,2.242132,-2.742151,-1.808616,-4.064335,1.075076,-3.967313,6.744426,-0.333745,-0.243308,5.899477,-4.944439,9.245518,-3.311245,6.270947,-9.205930,8.283074,-3.107041,-1.014006,5.271952,-5.541912,1.946563,1.660425,-6.377437,9.095468,0.523274,-1.591953,-7.440161,7.464421,1.274296,-6.038142,1.351751,0.368201,3.099977,-4.063360,-4.006843,7.711446,3.262714,-5.961638,9.186503,1.958797,-5.607290,-6.062685,3.273660,-6.222668,2.000017,-9.355878,-6.901133,-9.200825,6.869623,-8.708660,1.484835,0.806692,-0.851673,8.375142,7.139807,-2.847601,-4.056120,-9.296731,5.268600,6.800282,-2.963958,0.345177,1.410534,-9.226282,-6.944545,7.515171,9.108654,-8.960056,-3.406499,8.948599,-4.303598,-2.801495,-5.841374,-7.410737,7.531901,-1.423890,8.345169,-8.610219,-9.418758,-2.194421,7.499941,-4.986229,-0.637146,-8.056203,-2.154127,4.230557,-5.341884,-4.487777,-0.783589,-5.075184,-4.071011,1.699488,-5.541986,-9.611426,8.695235,4.866121,-2.989754,9.457077,-0.723189,-5.761069,6.079145,-1.770637,2.891444,-7.818743,8.675813,1.226400,-9.741866,-9.878611,-1.277619,7.340411,0.219955,-9.124680,-5.686504,-5.855063,9.813759,-2.584962,-5.444762,-0.096279,7.296746,-1.370607,2.198203,-3.746272,-8.985601,-7.736161,1.229322,-1.723228,-7.306237,4.924343,-6.853080,-1.373553,-0.006979,-8.229815,9.792064,-5.797382,-7.869025,3.136926,-7.939787,8.780630,-3.006976,6.925858,6.591466,-3.072534,-1.314518,-5.020695,-4.696487,-7.674234,4.279568,0.704419,-4.686439,5.171592,-0.322352,-0.608220,-4.051762,-9.459579,-9.192266,0.074192,6.155637,7.725986,6.243169,8.515704,-9.662725,-9.787602,-2.921572,-0.012577,1.891160,1.718799,0.604593,-7.570552,4.466012,-6.379781,-1.796791,8.957340,-7.597383,3.365458,1.835370,8.827941,-0.643999,7.353463,4.144457,9.914590,-8.538990,8.557579,3.532155,6.711516,-5.010456,-3.713200,7.560439,-6.702785,-2.375951,0.808812,-4.594107,-1.410390,-0.835210,-3.973027,1.293520,-8.038157,-1.358362,6.053422,4.800942,8.657340,1.817966,-6.588253,4.282489,-4.146445,-9.806010,3.696140,-1.854660,-8.831581,-3.909499,-6.603032,-7.212762,8.236041,-9.036622,-1.560356,2.433530,1.284304,8.686651,-9.903557,5.541967,2.106082,-9.892045,-2.068058,-2.114798,-9.961225,2.172972,-8.132038,7.255014,7.106691,4.306558,-3.698933,6.307457,1.240032,2.794959,7.633945,-2.679610,6.765560,-1.753330,9.718347,-9.767543,8.189224,-0.467620,8.983832,1.696090,-0.088956,2.163431,6.776859,-7.003430,0.211193,-5.258989,-2.467959,6.189054,-4.916445,-6.662856,-7.660931,9.872320,-3.727590,-5.571665,2.070981,-2.482236,-6.919942,-9.606882,-5.622209,-2.127924,5.388756,0.468116,6.450290,1.346153,-5.983252,0.849427,-0.626449,-6.579032,-9.451828,-1.119636,-1.369041,7.148431,-1.125515,-7.224269,5.196111,7.315524,-9.978125,-6.313667,7.727528,7.259581,1.339334,7.383856,5.615931,1.158869,-0.399570,7.865072,-8.694094,8.050247,6.891607,-0.896840,-7.974341,7.238114,-2.132790,-1.837049,5.174057,6.448593,-4.943050,-8.646552,-4.840651,0.629294,2.834193,7.990530,-8.151921,4.563218,-4.537498,-0.963471,3.040597,0.609000,3.857778,5.054441,4.247125,-8.649362,9.284491,2.296855,-4.225927,-6.025458,-4.643177,5.497198,-9.456020,-8.854690,-5.329792,3.479250,-8.113373,2.847981,-6.384357,-8.759477,4.425847,5.823767,8.628873,-3.504153,-8.560737,7.225709,-9.885448,5.791443,1.985905,-1.314483,-4.699797,2.090717,-2.930377,-1.062475,-8.316455,6.667619,7.512835,-3.255434,8.856237,-7.098270,-7.542925,-3.031102,2.354912,9.239329,9.222541,-9.403287,-1.599471,-5.664707,2.392457,5.665994,2.463981,0.867480,-3.428638,7.735046,5.204605,1.141202,-5.546803,-6.183356,2.738440,-9.259779,3.107455,-0.199257,7.270822,5.501315,8.907467,-5.798977,7.783981,-8.037497,9.948866,3.481499,1.546461,-7.847574,2.353825,0.681973,1.020936,7.628868,4.164727,-2.844689,9.590039,1.579748,-4.966105,5.565157,1.694361,6.597381,-1.588569,8.104779,0.219814,3.901485,6.556366,0.918761,-4.922327,0.495153,-3.072865,-5.467098,8.127794,5.464967,1.187343,9.338578,-0.757725,-6.255034,-9.292429,-0.527749,3.162565,-1.212102,3.544702,9.684343,-4.252195,2.140013,-8.934673,-5.167630,6.450466,-8.016777,4.446468,2.211671,-4.372087,-5.114118,-9.705167,6.733695,-2.960693,-6.953334,4.455842,0.658999,-9.202625,2.870072,0.092412,2.747822,6.900104,2.798290,7.215816,-2.180820,-0.560605,-0.795115,1.005281,6.662215,5.061920,8.465010,6.632214,3.816931,7.867055,5.393126,-9.899075,3.116741,-9.547182,-0.293736,-1.798873,2.066368,9.498962,2.461297,7.629633,-7.383169,-8.959471,-0.764933,3.784325,0.300541,-1.710060,6.196638,3.156502,-0.218916,0.711935,-9.258381,7.654363,2.991318,8.435553,9.044034,6.684088,-8.950242,-7.935000,9.343232,-5.728984,-9.182170,8.944793,0.126595,1.902525,-2.118114,3.974987,-9.427740,5.183652,7.324253,-6.389879,3.594352,3.020641,2.228819,-2.120742,9.768361,9.600678,3.896836,4.750555,-4.110786,-6.031655,8.330589,4.823742,-1.644317,0.298282,0.167584,9.550025,0.602972,-5.597691,-5.640588,-5.488592,8.025339,6.150896,-2.134471,-8.242779,7.357201,-4.969902,-7.219985,-6.790813,-0.608576,-0.991483,8.177313,-9.265677,-5.555641,2.498688,-3.044636,-5.199002,-4.591458,-8.604579,-6.190680,8.611828,-9.416992,9.802059,5.162865,0.254311,9.606157,4.087615,7.161229,-5.843248,9.733221,-9.807548,8.142297,4.505700,7.802856,-6.739177,-4.272721,5.664187,6.949229,2.757925,8.897349,-6.207880,1.943521,2.707399,-3.057872,-9.574436,-3.258756,1.098674,-7.567682,6.314077,-2.321642,7.960305,0.542476,9.901736,5.570947,3.342256,-4.673867,-4.374964,4.732578,-0.629092,4.965338,4.907350,-6.150674,9.603965,-9.679357,-4.224170,-7.896337,1.026917,-2.606609,0.730166,-2.748154,-1.684619,-5.533563,-0.547206,2.158629,6.409592,8.846318,-4.119803,9.154830,-4.557579,-1.850516,8.434928,1.008044,-2.802580,1.952166,5.985052,-7.882712,-9.527191,-3.791436,-6.507106,-8.842466,-3.445374,3.862434,1.188505,-2.944680,-7.199099,-5.779086,-9.020252,-2.227734,6.466823,-8.717528,9.326448,0.185342,9.373414,-7.473034,8.675938,-5.138051,1.399041,-3.482484,-3.771371,-1.908747,6.702030,-7.967154,-8.572687,-1.012371,3.547231,1.829362,4.887962,-0.517852,-3.168376,-9.843177,2.740808,-8.035328,-5.530295,2.899394,8.787673,5.892033,-5.384359,-4.973444,2.644235,9.180531,9.189314,9.635017,7.143817,-4.423481,8.104796,9.414213,3.883678,2.414404,-7.399502,-7.838305,-9.205165,-4.112759,-3.506736,-4.217932,6.508599,-8.644004,-7.552559,5.319177,8.024709,7.419139,-7.106993,-3.692657,-2.061389,-0.076725,-7.588004,5.196309,-4.092045,-6.444616,-5.192382,-2.095150,-2.617077,6.343313,0.353505,-0.442240,-0.024033,5.455674,-1.079470,-0.693546,3.957424,7.907104,5.339956,-0.306403,-6.705345,-3.478562,5.694048,-7.198969,3.838002,-9.579998,-7.971398], dtype = "float64")#candidate|3765|(1200,)|const|float64
var_3766 = relay.var("var_3766", dtype = "float64", shape = (240,))#candidate|3766|(240,)|var|float64
call_3764 = relay.TupleGetItem(func_2211_call(relay.reshape(const_3765.astype('float64'), [15, 10, 8]), relay.reshape(var_3766.astype('float64'), [240,]), ), 3)
call_3767 = relay.TupleGetItem(func_2215_call(relay.reshape(const_3765.astype('float64'), [15, 10, 8]), relay.reshape(var_3766.astype('float64'), [240,]), ), 3)
output = relay.Tuple([bop_3760,call_3764,const_3765,var_3766,])
output2 = relay.Tuple([bop_3760,call_3767,const_3765,var_3766,])
func_3769 = relay.Function([var_3758,var_3759,var_3766,], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mutated_mod.get_global_var('func_3769')
var_3771 = relay.var("var_3771", dtype = "float64", shape = (4, 4, 11))#candidate|3771|(4, 4, 11)|var|float64
var_3772 = relay.var("var_3772", dtype = "float64", shape = (4, 4, 11))#candidate|3772|(4, 4, 11)|var|float64
var_3773 = relay.var("var_3773", dtype = "float64", shape = (240,))#candidate|3773|(240,)|var|float64
call_3770 = func_3769_call(var_3771,var_3772,var_3773,)
output = call_3770
func_3774 = relay.Function([var_3771,var_3772,var_3773,], output)
mutated_mod['func_3774'] = func_3774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3844 = relay.var("var_3844", dtype = "float32", shape = (11, 2, 2))#candidate|3844|(11, 2, 2)|var|float32
const_3845 = relay.const([[[-5.427354,-2.630316],[-9.489294,9.394508]],[[-9.237390,-1.346784],[5.558700,-7.941295]],[[3.963643,-7.122207],[4.931360,-2.807060]],[[7.679379,-5.583310],[9.750776,8.504893]],[[-8.096585,6.850922],[-3.284489,-6.149161]],[[8.384014,0.974709],[2.018835,-7.907213]],[[-1.282048,-0.294705],[-4.367450,-3.393207]],[[-2.676691,-5.819964],[-5.853372,9.258760]],[[9.852104,8.105101],[6.282574,-1.719953]],[[6.579696,-0.255579],[4.957752,0.378598]],[[4.556017,5.086409],[1.785846,1.585832]]], dtype = "float32")#candidate|3845|(11, 2, 2)|const|float32
bop_3846 = relay.power(var_3844.astype('float32'), relay.reshape(const_3845.astype('float32'), relay.shape_of(var_3844))) # shape=(11, 2, 2)
output = relay.Tuple([bop_3846,])
output2 = relay.Tuple([bop_3846,])
func_3849 = relay.Function([var_3844,], output)
mod['func_3849'] = func_3849
mod = relay.transform.InferType()(mod)
mutated_mod['func_3849'] = func_3849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3850 = relay.var("var_3850", dtype = "float32", shape = (11, 2, 2))#candidate|3850|(11, 2, 2)|var|float32
func_3849_call = mutated_mod.get_global_var('func_3849')
call_3851 = func_3849_call(var_3850)
output = call_3851
func_3852 = relay.Function([var_3850], output)
mutated_mod['func_3852'] = func_3852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4100 = relay.var("var_4100", dtype = "float64", shape = (7, 16, 11))#candidate|4100|(7, 16, 11)|var|float64
uop_4101 = relay.cos(var_4100.astype('float64')) # shape=(7, 16, 11)
func_3849_call = mod.get_global_var('func_3849')
func_3852_call = mutated_mod.get_global_var('func_3852')
const_4133 = relay.const([[-3.869434,0.975402,5.093623,-7.837072,-9.023533,-3.611647,-6.577824,0.437058,-4.622675,7.913592,-0.616852,-0.968972,-3.609624,-5.984228,8.417273,-2.762990,7.842170,-9.036394,1.456385,-5.236539,9.959450,1.258559,-7.222503,2.608498,-6.240357,1.931426,3.573751,1.231664,5.027209,-6.923808,8.599553,-2.345962,-2.482130,-4.913906,8.928608,4.349669,7.759087,-7.653500,5.062493,2.183833,5.147645,-3.738729,-8.253203,-7.998269]], dtype = "float32")#candidate|4133|(1, 44)|const|float32
call_4132 = relay.TupleGetItem(func_3849_call(relay.reshape(const_4133.astype('float32'), [11, 2, 2])), 0)
call_4134 = relay.TupleGetItem(func_3852_call(relay.reshape(const_4133.astype('float32'), [11, 2, 2])), 0)
uop_4144 = relay.log10(uop_4101.astype('float64')) # shape=(7, 16, 11)
output = relay.Tuple([call_4132,const_4133,uop_4144,])
output2 = relay.Tuple([call_4134,const_4133,uop_4144,])
func_4146 = relay.Function([var_4100,], output)
mod['func_4146'] = func_4146
mod = relay.transform.InferType()(mod)
mutated_mod['func_4146'] = func_4146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4147 = relay.var("var_4147", dtype = "float64", shape = (7, 16, 11))#candidate|4147|(7, 16, 11)|var|float64
func_4146_call = mutated_mod.get_global_var('func_4146')
call_4148 = func_4146_call(var_4147)
output = call_4148
func_4149 = relay.Function([var_4147], output)
mutated_mod['func_4149'] = func_4149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4386 = relay.var("var_4386", dtype = "float32", shape = (13, 7, 9))#candidate|4386|(13, 7, 9)|var|float32
uop_4387 = relay.acosh(var_4386.astype('float32')) # shape=(13, 7, 9)
uop_4390 = relay.sin(uop_4387.astype('float32')) # shape=(13, 7, 9)
uop_4406 = relay.exp(uop_4390.astype('float32')) # shape=(13, 7, 9)
output = relay.Tuple([uop_4406,])
output2 = relay.Tuple([uop_4406,])
func_4410 = relay.Function([var_4386,], output)
mod['func_4410'] = func_4410
mod = relay.transform.InferType()(mod)
mutated_mod['func_4410'] = func_4410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4411 = relay.var("var_4411", dtype = "float32", shape = (13, 7, 9))#candidate|4411|(13, 7, 9)|var|float32
func_4410_call = mutated_mod.get_global_var('func_4410')
call_4412 = func_4410_call(var_4411)
output = call_4412
func_4413 = relay.Function([var_4411], output)
mutated_mod['func_4413'] = func_4413
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4419 = relay.const(-7.710511, dtype = "float64")#candidate|4419|()|const|float64
const_4420 = relay.const([[-5.778842,8.769138,-9.600769,7.800321,-2.157834,7.154692,2.949425,-1.609797,6.876723,-8.233942,-8.431343,3.717881]], dtype = "float64")#candidate|4420|(1, 12)|const|float64
bop_4421 = relay.less_equal(const_4419.astype('bool'), const_4420.astype('bool')) # shape=(1, 12)
func_3769_call = mod.get_global_var('func_3769')
func_3774_call = mutated_mod.get_global_var('func_3774')
const_4426 = relay.const([[4.086560],[1.105485],[-2.908978],[6.040270],[-2.873849],[-6.979389],[-7.407675],[-5.557350],[1.042891],[-1.770068],[3.320013],[-8.364755],[8.890669],[0.137051],[-6.171022],[-9.709078],[-1.602792],[-8.723552],[0.406258],[-7.230076],[-1.757340],[-1.342337],[4.987972],[-4.152236],[-9.589807],[3.228587],[3.840351],[1.018164],[9.340855],[2.887234],[-6.873328],[4.242697],[4.763811],[-4.498649],[-4.780092],[1.795411],[9.788449],[6.643304],[-8.227204],[-4.300893],[4.286156],[4.518785],[3.337177],[8.553031],[9.310504],[-5.952727],[-5.998331],[-4.647314],[6.933026],[-2.339326],[-9.080228],[-4.823085],[-3.422567],[-6.007594],[5.816187],[1.139608],[-2.525404],[-2.952059],[2.822059],[6.314748],[-8.049750],[-5.050412],[3.648499],[-6.169392],[1.765536],[-3.292199],[-4.775190],[-9.133471],[6.690480],[-2.886364],[9.723007],[0.712005],[-9.233879],[0.861156],[3.662402],[-4.103199],[-6.358389],[-4.059075],[8.013758],[-0.759334],[2.967906],[-8.185002],[2.929867],[-9.306947],[4.428304],[5.453522],[-1.392312],[5.071371],[-8.205948],[-1.520863],[6.432828],[5.827261],[-5.348169],[3.798974],[5.493055],[-9.125214],[5.426721],[-3.073871],[0.560690],[8.819610],[9.515367],[7.236346],[6.522821],[-7.212274],[9.626591],[3.225553],[9.258279],[-1.662805],[-3.377072],[-0.162571],[4.163616],[-0.469096],[1.761037],[0.839900],[-2.435280],[-5.640638],[-1.006603],[0.493023],[-9.328202],[8.669912],[9.636631],[-4.826923],[-9.037449],[-1.162151],[-8.372534],[-9.597000],[8.020939],[-5.876683],[0.778776],[-2.577122],[-2.458683],[-6.071731],[-8.985640],[-3.153503],[3.532462],[9.587079],[-9.565202],[-7.467043],[-0.067849],[2.934813],[3.815107],[9.476604],[2.183093],[8.144231],[9.774990],[-6.180734],[-0.162763],[-4.956644],[-5.195131],[2.134178],[6.660084],[-4.186798],[-9.803849],[-7.274438],[8.049680],[-9.824953],[1.947682],[-4.932193],[4.549745],[5.652290],[1.326515],[1.520490],[-1.801259],[-4.102612],[-9.251847],[1.098217],[-5.678688],[-5.056160],[-9.034124],[-9.557117],[-2.761991],[-0.843381],[-8.580653],[-6.547128],[-8.874407],[-6.798856]], dtype = "float64")#candidate|4426|(176, 1)|const|float64
var_4427 = relay.var("var_4427", dtype = "float64", shape = (240,))#candidate|4427|(240,)|var|float64
call_4425 = relay.TupleGetItem(func_3769_call(relay.reshape(const_4426.astype('float64'), [4, 4, 11]), relay.reshape(const_4426.astype('float64'), [4, 4, 11]), relay.reshape(var_4427.astype('float64'), [240,]), ), 1)
call_4428 = relay.TupleGetItem(func_3774_call(relay.reshape(const_4426.astype('float64'), [4, 4, 11]), relay.reshape(const_4426.astype('float64'), [4, 4, 11]), relay.reshape(var_4427.astype('float64'), [240,]), ), 1)
func_4410_call = mod.get_global_var('func_4410')
func_4413_call = mutated_mod.get_global_var('func_4413')
var_4430 = relay.var("var_4430", dtype = "float32", shape = (273, 3))#candidate|4430|(273, 3)|var|float32
call_4429 = relay.TupleGetItem(func_4410_call(relay.reshape(var_4430.astype('float32'), [13, 7, 9])), 0)
call_4431 = relay.TupleGetItem(func_4413_call(relay.reshape(var_4430.astype('float32'), [13, 7, 9])), 0)
uop_4433 = relay.cosh(var_4430.astype('float64')) # shape=(273, 3)
var_4437 = relay.var("var_4437", dtype = "float32", shape = (273, 3))#candidate|4437|(273, 3)|var|float32
bop_4438 = relay.less_equal(var_4430.astype('bool'), relay.reshape(var_4437.astype('bool'), relay.shape_of(var_4430))) # shape=(273, 3)
const_4442 = relay.const([[2.990638,3.704377,2.732177],[-9.754001,-4.672253,-5.245927],[-9.048682,-6.617003,-6.480679],[-2.318554,5.562415,-6.421454],[3.838287,-5.402760,-6.737222],[0.198630,-8.355719,-5.022081],[8.258392,0.671562,9.381779],[3.247940,-4.494111,7.688032],[-2.705671,4.482414,7.122191],[-2.152391,6.904393,7.788964],[3.428484,1.856143,7.201642],[1.189685,-8.638735,-6.504641],[1.503508,-8.458076,3.700045],[-9.314254,3.603057,5.233549],[5.363680,8.102517,-0.587774],[8.602358,-3.277801,5.401993],[-2.696490,-8.339172,5.201578],[-1.534379,7.980819,-0.637933],[-8.058032,-4.981011,9.703573],[-6.613238,-8.491760,4.881807],[-6.086946,-1.622991,-0.784610],[-9.253867,-9.259370,8.864937],[2.812367,-1.312926,-8.363554],[5.270934,-7.930242,8.537127],[-2.676748,-8.354877,3.923519],[1.078150,-3.218387,-6.060941],[-9.214511,2.483016,-6.732883],[-3.602073,1.363843,-6.238904],[-1.556892,-9.149576,7.176605],[-6.218484,-3.313828,-2.579068],[-4.845935,9.706561,3.810396],[5.305748,7.674870,2.671877],[-7.884937,1.366632,-5.965030],[2.258172,-7.843689,5.287968],[7.582789,4.339486,1.394155],[-0.649178,3.951333,-9.364191],[5.297867,-2.287331,9.848785],[-9.658559,-8.265892,9.359718],[6.198610,7.808930,-4.517817],[-5.375593,-4.023254,6.492314],[2.918430,9.011603,-2.122274],[-0.792875,-7.151235,-9.177663],[-7.604543,9.818530,-5.644464],[3.305030,3.322221,4.309639],[-7.955132,-9.665237,5.716413],[-8.607581,9.581222,-6.673624],[9.963260,3.008479,0.758360],[3.842981,9.936650,-4.213161],[3.361204,3.589036,-5.073498],[1.985212,-4.262684,7.039050],[4.267269,3.727722,-6.631001],[-1.694162,-1.564593,2.411029],[0.598416,6.435009,1.075899],[3.948685,0.765270,7.799474],[0.910446,-2.407883,-5.781331],[-2.876742,5.540700,-1.604404],[2.579823,-9.779910,2.774186],[4.517617,-1.226412,9.029312],[9.124216,1.815453,5.226014],[-0.527440,3.800682,2.116606],[7.999755,1.509146,8.319280],[-3.369392,0.232020,-7.577428],[-1.150158,8.889632,-0.284284],[-3.532286,2.483735,-5.313864],[-7.615486,-6.632646,-1.044506],[-4.757108,9.675993,-1.099642],[1.420904,5.444380,7.189409],[5.763927,8.729851,3.419510],[4.054314,8.358184,8.124336],[-5.663613,4.093077,1.142871],[-8.570746,3.347701,0.226418],[-7.633293,-5.986145,0.760454],[6.657755,6.005511,-8.327725],[-1.125572,-0.720433,-9.827029],[9.176930,7.592137,0.688479],[-2.307312,-4.889460,5.015202],[-7.314007,3.200831,6.151871],[-2.277305,5.918034,-1.963263],[-6.573385,-4.994561,-2.355682],[-2.552087,3.088659,-1.244566],[-6.507860,-1.267239,-4.413419],[3.828063,8.827811,3.288400],[6.568299,6.405663,1.630546],[-7.763322,-3.309047,-5.041560],[-6.108132,-8.882653,4.620251],[-5.678082,-6.919933,-3.137612],[8.919085,4.951093,-2.648951],[6.020682,-2.606557,2.643953],[-1.932008,-2.063655,-5.451926],[-4.148638,9.620619,-9.719779],[2.108306,8.932389,3.631479],[7.346085,9.493259,4.629395],[2.561697,6.451844,1.357526],[-3.575496,9.834061,-9.508645],[5.193756,-6.802098,5.439914],[6.068742,3.713946,-5.008208],[5.176619,8.669759,-0.016282],[-8.150603,-3.201502,-7.507534],[-4.913599,0.864757,7.451062],[0.808211,-0.899380,1.629370],[-8.477113,7.120595,6.692867],[-9.319109,2.147822,5.420025],[-7.537343,0.380780,-8.540723],[-5.802809,-0.387996,-0.199979],[1.176341,6.190095,7.912520],[-8.840654,9.199420,3.886950],[6.018313,3.845728,-6.442768],[8.236904,7.528593,9.781361],[-7.082663,-4.894431,6.086524],[-2.939133,9.302684,2.166523],[-1.894813,-0.644398,9.978994],[8.717844,-4.803748,6.745321],[0.251776,7.654559,5.782800],[-1.753838,0.371094,8.143696],[2.702645,9.646223,4.549796],[5.149406,-8.358712,8.442671],[-2.441580,7.224653,-1.757825],[2.149132,2.576174,-9.837648],[0.636529,-4.149888,3.162997],[7.762678,4.012084,9.491636],[7.505978,-2.127355,5.732310],[1.763555,-8.347787,-8.997156],[0.618183,8.020798,-9.648544],[-9.733828,-2.688052,-5.370487],[-1.153409,5.109715,5.274475],[-8.677443,2.861187,-0.717356],[-0.982396,-5.837440,-6.960763],[0.770087,-8.087307,-9.598562],[-1.681231,-7.679666,4.037607],[3.565702,5.415760,5.937371],[1.550651,4.134378,2.175970],[4.410404,-3.866834,-5.599854],[-4.744133,-2.226780,-4.036542],[-1.348815,1.399326,-5.802046],[0.975784,-6.910738,-5.628670],[2.107422,9.594210,-0.382163],[9.965107,9.299949,-4.170253],[-9.856146,0.668045,7.088671],[-3.032977,7.527477,4.219953],[-7.474914,7.695968,7.926632],[5.740774,7.921102,1.222197],[1.103277,-6.150984,-9.187476],[-3.195628,1.103763,-3.048112],[-3.437165,-3.557337,-3.089774],[3.593206,1.164834,-6.515587],[-8.174229,9.441222,-5.330255],[3.011838,9.921006,-6.955500],[-1.992073,5.819434,9.629335],[1.459794,-7.136124,2.307051],[1.099025,4.037393,2.160938],[7.214577,0.685263,6.394197],[4.715369,3.842657,-7.241788],[4.344023,1.162960,7.633139],[-3.227761,-7.574449,-7.423552],[6.714515,-2.532718,-3.031563],[-0.959872,7.551798,7.324750],[-4.541576,9.255736,2.355250],[8.177807,5.321890,7.470551],[7.609857,2.992786,-9.664907],[7.380722,2.720849,0.822198],[0.217490,3.248898,5.920282],[-9.429681,7.518954,-1.169544],[4.223667,0.269838,-6.284881],[5.112848,-6.295929,9.464495],[4.989860,8.266982,-9.185195],[-3.067403,-5.892143,-2.133679],[-9.730741,9.336127,-4.110455],[6.721666,-7.945318,-1.889023],[3.285942,-6.233904,-6.493257],[4.848397,7.539095,-1.181081],[2.076487,5.621832,-1.040754],[3.407324,-6.741087,3.939412],[-7.279358,2.666119,5.905791],[2.747441,5.165803,0.946716],[0.967438,2.915652,8.372960],[-5.967043,3.611330,-9.009134],[9.979782,-4.227135,5.395082],[0.391787,-1.227528,-8.007562],[-5.874699,8.410144,3.866828],[-6.997180,2.909085,6.887124],[4.577902,2.215098,-7.679854],[4.943876,0.107900,7.105316],[0.576756,1.749344,9.488060],[9.023820,5.168673,-4.619110],[6.691560,-3.681732,-3.570652],[2.789258,1.077745,-4.258862],[1.080749,-1.498727,-8.168581],[7.278140,-9.369942,7.498782],[-3.543837,0.009107,9.471325],[-4.342946,-7.113488,1.216441],[2.572618,6.716448,4.948476],[-5.537996,3.902104,-3.575664],[-0.617385,6.620968,-6.438750],[2.360308,3.356659,-1.057586],[-9.177596,-6.604708,6.910506],[0.726588,-4.476959,-1.365674],[2.661845,-5.528921,6.991180],[-3.784144,-7.820577,-7.559993],[-3.735212,3.096459,-2.403986],[1.245674,5.228983,-0.447918],[5.982213,6.960441,-4.009005],[-3.516469,-7.127156,-5.540059],[6.678540,1.301832,-3.702088],[-7.847890,0.398604,-1.052068],[5.094982,-6.150036,4.324741],[-4.318736,7.459185,3.245313],[0.156027,7.175039,-3.186152],[3.793234,-1.766163,-1.633991],[-7.922536,6.955721,-3.335876],[8.875546,1.058489,-9.380941],[-3.232328,-2.917151,-0.971094],[1.163244,2.139151,0.931148],[-1.426630,4.509555,-3.746478],[2.499477,-5.795909,-1.566775],[4.887096,-7.587338,-4.455969],[6.244952,1.488615,-3.294742],[0.901342,0.061659,-8.210286],[8.593749,9.336578,5.637368],[-1.472973,-7.195135,6.354168],[1.340371,2.132843,-1.029448],[6.902857,-9.758123,5.624774],[-0.820610,3.627271,1.390054],[2.408760,-7.175499,3.245500],[-3.225134,5.219028,-3.164891],[6.914034,9.243008,9.055252],[-0.166194,5.226279,-3.931925],[1.753691,-1.394089,-7.930242],[-4.780284,-6.176863,2.704644],[-6.602138,9.416762,-3.683196],[6.460787,5.293068,-6.131487],[-6.365564,3.314771,-9.771597],[-4.307662,2.801200,-0.587310],[-4.704744,5.694972,4.792111],[-4.210953,-0.015094,4.265965],[3.034941,-9.625609,2.324001],[3.829105,-3.137442,-5.406949],[-2.642871,-9.342280,3.609791],[-4.441909,-3.603405,-4.032570],[-3.152892,8.350134,-2.136127],[9.624088,8.007400,-1.512627],[5.137163,-0.958665,0.741815],[-0.201546,1.041997,8.517344],[6.053591,-3.739180,3.613095],[2.018207,4.578949,-8.724865],[-9.384637,2.852888,5.627661],[-0.868996,-8.812313,-8.167514],[8.706958,4.510174,-7.409146],[5.312386,-0.477576,0.791166],[-6.119494,6.088649,5.753382],[9.977327,-5.704156,-4.323494],[5.209228,-4.823961,3.735653],[2.490885,0.567829,-4.381769],[3.041552,1.298099,9.463769],[6.927877,8.819616,-8.445317],[-4.414704,-4.901385,-7.950327],[-3.717685,-9.142307,2.558303],[-8.095816,-2.514364,-4.789038],[3.664262,7.601619,9.509667],[1.708604,-8.997312,-2.957289],[5.542679,7.186872,6.827623],[-8.921646,4.485686,-5.553707],[0.651277,9.073942,-5.153289],[-6.834920,0.112543,-2.936660],[-4.027989,7.970777,-7.498672],[3.088842,-4.086219,-8.272764],[7.395047,5.402272,4.272970],[4.542704,-0.494166,-9.033716],[-0.446447,-4.356071,-4.766533],[9.879066,-2.902808,-3.282410],[-2.868272,4.668913,-0.662152],[-7.404089,-4.017964,-8.665508],[8.922865,-5.875089,-4.980821],[-9.699483,2.468869,-4.123315]], dtype = "float64")#candidate|4442|(273, 3)|const|float64
bop_4443 = relay.right_shift(uop_4433.astype('int8'), relay.reshape(const_4442.astype('int8'), relay.shape_of(uop_4433))) # shape=(273, 3)
bop_4451 = relay.floor_divide(uop_4433.astype('float32'), relay.reshape(bop_4443.astype('float32'), relay.shape_of(uop_4433))) # shape=(273, 3)
const_4459 = relay.const([[1,8,-8],[5,-3,-8],[-8,1,10],[5,4,2],[-8,-8,5],[6,-8,4],[-9,3,-3],[6,-7,7],[5,-1,-5],[7,-10,-2],[-6,1,-3],[9,1,5],[-4,7,-9],[1,8,1],[4,9,-2],[9,3,2],[-2,-7,3],[-10,2,2],[-4,3,4],[-7,3,-4],[-1,1,-2],[8,-3,8],[-9,-7,-6],[2,2,3],[-1,-8,-8],[-7,3,3],[-2,9,7],[5,8,7],[-1,-5,4],[2,-8,-10],[-1,5,5],[-9,-8,4],[8,1,1],[9,9,-6],[-9,8,7],[4,-5,3],[-9,-8,-3],[-4,4,-6],[-5,9,-8],[-7,-3,6],[3,9,-1],[9,-5,6],[-1,-8,6],[-2,-6,5],[5,-10,-6],[-10,8,-6],[-2,-8,-2],[-4,3,-8],[3,-1,10],[-2,7,5],[10,-2,-5],[-7,1,-3],[-8,-6,6],[-3,5,-7],[-8,-1,-2],[-8,-4,-9],[7,5,1],[-3,-2,1],[6,-6,-6],[7,1,-10],[-6,5,9],[8,-10,-7],[10,10,-2],[9,-5,-6],[-5,6,1],[-9,6,-9],[-8,2,10],[10,1,2],[-1,1,6],[-6,2,-9],[7,2,-1],[-8,-7,-10],[-2,-9,-10],[-8,1,-6],[9,-10,-3],[-4,6,-4],[8,-10,2],[4,-10,-9],[-5,1,6],[-5,-9,-6],[3,-3,-7],[-9,-6,-1],[-9,-6,-1],[9,-2,2],[-8,-5,-1],[9,2,-4],[-8,-5,10],[-5,-5,7],[-6,10,7],[-9,8,-3],[-4,4,4],[-6,-10,7],[9,8,4],[9,-2,-7],[-2,3,10],[-10,8,-4],[-1,7,3],[1,7,-7],[-9,-1,7],[1,6,-1],[9,5,-5],[-4,-9,-10],[-6,-4,2],[-3,10,-3],[4,8,5],[-6,-1,6],[10,-6,8],[1,7,-6],[-9,-4,-5],[-7,9,8],[-5,10,5],[-5,5,-4],[-7,8,10],[-7,-5,7],[-5,8,10],[-10,2,4],[-8,-4,2],[6,3,-5],[10,-2,-4],[6,5,-5],[-1,1,-7],[-1,-8,7],[-3,9,-9],[-8,10,-3],[-1,6,-4],[-1,6,-6],[-1,-5,2],[-8,7,2],[4,4,-2],[-10,7,-10],[-7,-3,5],[3,8,4],[1,6,1],[-3,-10,1],[-3,8,7],[10,9,4],[-5,-1,-8],[-5,-8,9],[1,-4,-9],[6,6,-4],[9,4,9],[3,6,9],[10,-2,-6],[-8,3,9],[-5,-5,-6],[3,-5,5],[-4,8,-2],[-3,-2,1],[-6,-5,8],[-2,-1,-5],[4,-4,6],[2,8,1],[8,2,-1],[-8,-9,7],[-8,-2,3],[-6,9,7],[9,-5,-3],[7,-10,-3],[-10,-9,3],[8,-4,2],[2,-6,8],[-4,7,4],[-6,1,-7],[-9,3,-8],[4,2,10],[5,10,1],[-9,6,6],[3,-10,2],[-9,6,8],[10,4,10],[-6,6,-8],[-5,-3,2],[1,-5,-10],[-10,-7,10],[-2,7,-4],[10,2,5],[4,-9,-3],[8,8,4],[-10,8,-3],[-1,1,-1],[-5,-7,8],[8,-4,-8],[-10,10,10],[6,10,-7],[2,-8,-6],[-10,-3,-7],[-8,2,4],[8,8,9],[-6,10,-9],[-9,-5,-4],[9,1,10],[2,4,2],[7,1,-10],[5,-7,1],[4,-9,-8],[-9,8,8],[9,-7,-5],[-3,1,-8],[-8,8,-2],[3,1,-4],[-4,6,4],[-1,-6,-7],[9,5,-6],[2,8,1],[-9,5,-8],[-8,3,-6],[10,1,6],[-8,10,7],[-6,1,-1],[3,9,-1],[-8,-9,5],[-9,1,-2],[10,5,1],[7,1,3],[-2,-1,4],[-6,-2,-5],[-8,-1,-4],[9,-3,5],[4,-1,-4],[8,-1,-5],[-10,-1,-7],[9,-9,-6],[3,9,10],[10,-10,3],[-7,7,10],[7,4,2],[2,-9,-4],[-6,-2,3],[-10,10,-5],[-1,-1,-2],[-2,-1,-7],[-10,-6,2],[3,7,4],[9,-2,-6],[-9,-1,7],[1,4,-8],[7,-4,6],[-3,5,-6],[7,-4,2],[7,-9,4],[-6,7,-9],[5,-4,8],[-4,-1,-10],[-9,-2,-7],[-5,8,7],[-1,-6,-2],[-3,2,-5],[-9,3,7],[7,-10,9],[3,-2,-7],[2,-1,-6],[5,2,-9],[10,-8,-8],[-6,-1,1],[-4,5,7],[6,-1,10],[-1,-9,6],[2,3,-1],[-4,-5,-5],[-4,-3,6],[2,1,-10],[1,8,6],[5,10,-5],[1,7,-4],[-2,-1,9],[7,3,5],[9,-5,-5],[10,9,9],[2,5,6],[2,-10,-5],[2,10,-9],[9,2,-6],[-6,-8,8]], dtype = "int8")#candidate|4459|(273, 3)|const|int8
bop_4460 = relay.equal(bop_4443.astype('bool'), relay.reshape(const_4459.astype('bool'), relay.shape_of(bop_4443))) # shape=(273, 3)
output = relay.Tuple([bop_4421,call_4425,const_4426,var_4427,call_4429,bop_4438,bop_4451,bop_4460,])
output2 = relay.Tuple([bop_4421,call_4428,const_4426,var_4427,call_4431,bop_4438,bop_4451,bop_4460,])
func_4471 = relay.Function([var_4427,var_4430,var_4437,], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mutated_mod.get_global_var('func_4471')
var_4473 = relay.var("var_4473", dtype = "float64", shape = (240,))#candidate|4473|(240,)|var|float64
var_4474 = relay.var("var_4474", dtype = "float32", shape = (273, 3))#candidate|4474|(273, 3)|var|float32
var_4475 = relay.var("var_4475", dtype = "float32", shape = (273, 3))#candidate|4475|(273, 3)|var|float32
call_4472 = func_4471_call(var_4473,var_4474,var_4475,)
output = call_4472
func_4476 = relay.Function([var_4473,var_4474,var_4475,], output)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4541 = relay.const([[[6.100866],[0.183412],[1.318314],[9.260149],[8.602070],[0.937251],[-1.054176],[-7.805731],[-5.943885]],[[-5.567171],[1.718055],[4.055129],[8.936961],[-7.683461],[9.956257],[-5.335850],[-6.315022],[-6.292260]],[[-7.193047],[3.563827],[-4.670008],[5.957516],[2.983297],[0.823583],[-9.500140],[-6.950133],[9.888128]],[[-7.669436],[2.278134],[9.011932],[1.364673],[4.127433],[4.691215],[2.286898],[5.797813],[2.290505]],[[-4.842353],[-8.551576],[-2.866333],[1.934227],[-1.855156],[-5.899946],[-1.665907],[-9.918684],[-5.902502]],[[-1.957638],[7.492367],[9.440165],[-6.549399],[-8.904246],[4.364975],[5.126674],[-3.870309],[1.687603]],[[-8.402857],[-0.468620],[0.361068],[-2.459332],[3.443275],[0.631102],[-1.112690],[2.372007],[8.353758]],[[-1.598627],[-3.872794],[3.510874],[-1.647626],[5.539920],[4.244933],[-5.893393],[3.123458],[-7.411630]],[[4.875913],[-0.997244],[5.704002],[-8.532464],[-5.971088],[0.827744],[-1.121068],[7.766216],[-6.783735]],[[8.972880],[9.338086],[2.578069],[1.202271],[-2.033280],[-0.915054],[0.583519],[6.631026],[3.167171]],[[7.265886],[-1.407789],[0.427884],[1.289559],[9.798298],[-6.630601],[-3.207343],[5.057937],[-9.594629]],[[-9.167934],[-8.230163],[2.800075],[4.188975],[-7.003234],[-3.577981],[5.049142],[-4.534786],[6.510687]],[[2.280329],[6.682622],[0.938181],[-5.100775],[9.072135],[-7.423456],[-1.762975],[-2.521252],[3.163181]]], dtype = "float32")#candidate|4541|(13, 9, 1)|const|float32
uop_4542 = relay.exp(const_4541.astype('float32')) # shape=(13, 9, 1)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
const_4548 = relay.const([True,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True], dtype = "bool")#candidate|4548|(1248,)|const|bool
call_4547 = relay.TupleGetItem(func_93_call(relay.reshape(const_4548.astype('bool'), [13, 12, 8])), 0)
call_4549 = relay.TupleGetItem(func_96_call(relay.reshape(const_4548.astype('bool'), [13, 12, 8])), 0)
uop_4552 = relay.log2(uop_4542.astype('float64')) # shape=(13, 9, 1)
func_3533_call = mod.get_global_var('func_3533')
func_3535_call = mutated_mod.get_global_var('func_3535')
var_4563 = relay.var("var_4563", dtype = "float64", shape = (320, 2))#candidate|4563|(320, 2)|var|float64
call_4562 = relay.TupleGetItem(func_3533_call(relay.reshape(var_4563.astype('float64'), [10, 4, 16])), 0)
call_4564 = relay.TupleGetItem(func_3535_call(relay.reshape(var_4563.astype('float64'), [10, 4, 16])), 0)
uop_4566 = relay.log(uop_4552.astype('float32')) # shape=(13, 9, 1)
bop_4580 = relay.minimum(uop_4566.astype('int32'), relay.reshape(uop_4542.astype('int32'), relay.shape_of(uop_4566))) # shape=(13, 9, 1)
func_2211_call = mod.get_global_var('func_2211')
func_2215_call = mutated_mod.get_global_var('func_2215')
var_4587 = relay.var("var_4587", dtype = "float64", shape = (12, 100))#candidate|4587|(12, 100)|var|float64
var_4588 = relay.var("var_4588", dtype = "float64", shape = (240,))#candidate|4588|(240,)|var|float64
call_4586 = relay.TupleGetItem(func_2211_call(relay.reshape(var_4587.astype('float64'), [15, 10, 8]), relay.reshape(var_4588.astype('float64'), [240,]), ), 0)
call_4589 = relay.TupleGetItem(func_2215_call(relay.reshape(var_4587.astype('float64'), [15, 10, 8]), relay.reshape(var_4588.astype('float64'), [240,]), ), 0)
func_4410_call = mod.get_global_var('func_4410')
func_4413_call = mutated_mod.get_global_var('func_4413')
const_4601 = relay.const([-8.337415,-3.752492,-4.139096,1.122401,-3.589885,-9.493183,7.685273,-7.363649,-8.226488,4.338055,-9.757461,1.652638,1.519004,7.449344,5.280061,-0.073345,-4.510147,5.939921,-5.223601,-2.789418,0.742134,-6.474150,-2.118659,2.814234,5.046634,2.215799,-9.778091,4.092167,-3.137748,-7.452430,-4.347979,5.298612,-2.224002,0.776243,4.864669,4.664050,-7.508996,6.316465,-2.345364,2.681892,-2.521192,1.581396,9.203425,-8.163149,-7.897119,6.385875,4.423414,8.263119,6.848476,-2.455839,-6.341458,3.295343,1.405199,-4.118655,4.445297,5.932694,-4.054594,1.473928,-8.650526,4.187804,-7.239500,7.763156,-4.847205,4.815093,7.563472,-5.892033,8.689585,5.129280,1.397129,-3.832088,2.562897,-3.253024,6.724055,-2.595026,6.386378,-4.702548,-0.099782,9.330296,-6.381637,8.446667,-9.941992,5.897965,2.471094,-2.484898,-9.814130,-8.961145,4.222078,-2.889689,-3.616545,-5.472026,-0.726038,4.357489,-0.708868,6.240910,-4.747792,-4.995897,8.972174,-1.474955,-8.587450,9.294686,-3.916390,9.355755,-4.320224,-7.434299,-3.726758,-1.763289,5.599803,0.362268,-6.779502,-5.555194,0.446326,6.377014,-2.975732,-6.217831,-8.289040,-3.222562,2.208614,-2.225153,8.682221,-5.432178,8.661683,-9.743367,-9.760009,-3.283952,9.002717,8.351990,-4.964495,5.921244,3.071687,2.966694,8.705224,-5.088238,0.490190,-0.221837,1.413452,-1.965905,3.460288,5.627589,0.002276,-4.184724,-4.759568,0.155577,-8.099098,3.491635,-9.069033,1.856335,-3.402972,-7.845190,7.719829,-7.134360,5.414482,1.270965,-9.512851,9.758582,5.213051,-8.797935,2.605834,-4.656451,-8.859997,5.569817,-3.894748,-0.329689,-6.400977,9.608418,1.422732,-1.022920,-1.091287,2.657860,-4.530984,-3.479519,-4.851055,7.820395,0.644689,7.566669,-4.551051,-1.776470,3.989557,5.462831,-5.191960,2.547629,9.290030,-5.241326,-2.095809,-2.897140,-1.289880,-7.788749,0.110443,7.832653,4.990526,-1.578302,1.844397,-9.185356,5.722965,3.147163,-8.279151,7.782211,-1.993622,-4.970778,6.994567,-9.377256,9.298747,-2.005052,-9.560082,5.138859,-6.292795,2.540781,1.782729,-0.594767,-2.085312,-1.274868,3.482019,-8.886211,1.661798,-9.280659,7.544873,9.161802,9.435343,3.778607,6.648473,5.091797,-9.044111,8.117609,-4.827905,-6.561231,1.692213,-1.312903,-6.681942,7.348464,5.398958,-5.351076,-1.234191,8.427214,1.849616,8.692521,-6.841039,-1.511756,-4.800289,-9.876419,8.072382,4.064636,2.992024,7.097604,-1.962944,5.132908,-3.175313,-9.901027,5.456933,-5.290134,-6.530358,2.061520,-9.477461,1.781075,-0.261569,-2.103300,-1.723629,-2.937729,8.301167,4.700910,-9.619120,9.674242,-3.963698,6.378841,4.561470,-9.489764,-9.639385,-3.911006,9.586488,8.412696,6.099461,7.978879,1.981195,4.749325,-5.093165,-7.682794,-5.619763,4.561864,5.498831,-0.897731,8.100022,-9.562988,4.410690,-0.482289,-1.527511,-0.978043,0.246352,6.542092,0.077047,3.131148,3.282660,3.069086,2.875697,-5.764281,3.162734,-5.564713,7.850300,-4.221420,9.624243,6.199313,-0.085822,-3.190906,3.436421,-2.740988,-4.875215,-7.738847,2.378210,3.099724,4.028521,2.737193,5.382603,2.900222,-2.592790,4.430258,-1.824639,8.707441,-2.286088,4.728907,5.563488,-9.600419,7.274089,7.099041,-1.087289,-7.413737,-7.304898,5.094194,6.137870,-7.663277,-7.019643,5.205660,-5.532924,-7.362538,-5.395061,0.055019,3.203345,-0.706264,-3.647950,-6.478656,-2.272961,-9.728161,-3.370779,-5.574917,-6.743774,-4.947167,-6.399738,-6.098358,-8.083698,6.977410,-1.704503,9.205113,6.280503,-2.629692,6.617334,-8.093564,7.076069,5.388130,-7.786197,3.181920,-3.185821,-2.726660,-0.002578,-1.359130,0.012166,0.271798,-9.950412,4.212194,-0.200086,9.043693,-7.786662,-6.437984,2.680285,-7.455416,4.383265,-6.031081,0.702635,1.064966,6.162692,-0.637860,2.553346,-0.145177,-0.269727,7.739525,-6.509078,1.398850,1.756284,-2.827603,9.861897,-7.615440,0.226986,-1.158687,9.135440,-1.422213,8.277529,8.624000,-1.696098,-1.560155,-8.552853,-2.178817,6.711046,9.370525,5.763689,7.415318,-2.231366,2.086954,-6.506044,-4.057239,4.573750,1.239676,-2.212581,-0.973862,-4.227390,9.207043,-2.839003,9.974304,9.013360,-6.767976,0.906218,4.266677,-8.477222,3.155657,5.396233,-8.364569,-2.989403,4.519719,3.831493,5.001047,3.220237,-8.983672,-1.823052,7.436083,-9.312468,-4.023090,6.855071,-9.986648,5.668730,-7.616833,3.044882,9.825460,-5.774583,-6.667171,-3.589315,-4.669363,6.240927,-1.282000,-7.101698,9.676254,8.145614,-7.372850,-5.174014,-1.887278,-5.433656,-5.313537,-2.566139,2.591554,-4.309981,-6.355774,-3.822527,-0.087363,6.581225,0.696340,-8.320330,-7.175681,0.835739,-3.813628,7.415842,6.436082,-7.015293,-2.157575,8.256726,0.030544,9.791693,9.808846,-5.366368,3.833867,-5.752811,-7.513295,-9.041004,-1.943030,1.421822,7.662947,-9.806438,1.059182,-1.508652,7.085622,6.194551,9.431635,-9.335130,-2.998278,5.677023,-8.238593,1.976174,-2.658733,9.953159,9.873443,-8.061543,-2.734874,3.363144,8.501876,4.920355,3.163999,2.342747,2.560949,6.581405,1.751565,-3.025777,-1.575654,-7.529335,5.754655,-0.713168,-0.857926,1.995169,4.365634,-1.978919,-2.232985,4.762344,2.389739,-3.328193,-5.422768,-6.682101,-8.333492,3.252715,-2.939365,-5.099823,8.123114,-8.587965,9.415245,-0.822100,-5.697204,3.491493,-7.146450,7.683454,6.375223,5.863227,8.918304,2.708844,-7.714582,3.406917,-8.163606,-6.489900,-2.356893,-3.741601,-0.827023,-7.510266,3.893663,6.301002,-9.709433,4.474372,-4.961552,5.131556,4.809612,-4.518710,9.824662,-4.993605,1.342070,0.919566,-4.583849,7.729362,2.721870,7.401425,9.537064,-9.317757,4.564026,3.244029,-9.970537,-3.683280,-3.604598,0.227303,-8.030435,9.656008,-6.651840,9.743308,-4.299123,4.389701,-0.781885,2.913487,6.196395,2.891887,1.421721,7.403623,7.684035,6.334084,-7.223010,5.479326,8.889170,-2.766886,9.334290,-0.277945,-0.395673,2.553721,-9.633980,-4.338213,8.183356,6.473665,-3.486288,-1.015789,-8.886298,5.988569,3.800198,3.061397,-1.639282,-2.175002,7.458376,1.174615,6.819270,-8.684652,8.668144,3.402838,-7.313290,-2.817406,3.538613,-4.056257,-0.749833,-8.193320,-8.536307,-6.520923,9.168262,-6.672102,6.959939,-5.333790,8.206825,9.762207,5.735182,0.846027,2.397122,5.580502,-6.520830,-8.234979,0.831232,-2.692521,-9.395752,-8.963144,-4.780521,-1.165038,6.950723,-6.168411,1.695780,5.541067,-0.161351,-8.522821,-4.924951,1.484635,2.516624,-8.450657,-3.948101,-3.544428,1.809658,5.505079,3.262383,-7.260845,-7.219243,8.811732,-0.262857,6.783212,7.872218,-9.410568,5.797572,8.529213,1.406842,0.013985,-5.436112,-9.416551,4.069904,8.632646,7.176494,5.045506,-2.255640,1.474155,2.959417,-5.446224,-8.303338,5.451405,-3.410711,-7.802451,-3.602618,0.990485,9.341220,-1.587237,3.941711,3.842826,8.932888,7.703675,-5.703210,-8.701136,5.152415,-8.819708,4.319837,2.441530,-8.908965,9.855620,3.383970,-3.249855,-8.510309,5.925074,-4.878605,-7.010561,2.191066,-1.729656,-1.929090,-0.424679,2.132808,1.087660,-9.469652,-7.947406,-2.829399,3.943464,-2.691937,-9.596884,-3.019152,7.396480,1.140222,2.276703,2.534074,-9.049073,-1.549557,7.572351,0.663088,8.565556,6.964958,7.332808,9.647374,1.747865,-9.815693,5.507374,-1.304391,8.413575,-1.858037,-4.747035,-1.098717,-2.969086,0.859240,-3.639988,-3.888988,-8.698694,9.542453,-2.052297,-5.637711,5.835548,3.422049,-0.918087,0.121270,5.012485,-2.568576,6.415684,-9.992281,1.800444,1.130820,7.356973,7.575587,3.762184,2.148027,-3.991778,7.872284,-9.921983,-2.788629,-0.762014,-2.530549,5.532584,-3.431901,-2.623445,-9.177217,-8.683479,9.516771,-4.993347,-3.183466,-1.703259,3.200747,1.652009,-2.341944,7.788112,-8.277409,-9.179599,-1.796910,0.971133,-7.415373,3.948402,-3.815777,-0.679875,7.099911,-1.256326,-7.580543,5.625948,2.067253,-5.304357,-3.760631,-6.783361,-5.998783,-2.549762,3.174364,5.838062,4.910157,-8.913344,-5.701607,9.408193,4.652125,3.880058,-4.736773,2.606962,-0.697075,8.538451,-8.779672,8.272290,-1.898657,6.335471,-8.287258,4.068885,6.922851,7.724981,-1.078941,-3.040496,-6.188771,8.443554,-1.575976,0.838616,0.443731,-3.924268,-7.581403,-7.180808,3.729402,-8.731510,-8.090791,1.978814], dtype = "float32")#candidate|4601|(819,)|const|float32
call_4600 = relay.TupleGetItem(func_4410_call(relay.reshape(const_4601.astype('float32'), [13, 7, 9])), 0)
call_4602 = relay.TupleGetItem(func_4413_call(relay.reshape(const_4601.astype('float32'), [13, 7, 9])), 0)
output = relay.Tuple([call_4547,const_4548,call_4562,var_4563,bop_4580,call_4586,var_4587,var_4588,call_4600,const_4601,])
output2 = relay.Tuple([call_4549,const_4548,call_4564,var_4563,bop_4580,call_4589,var_4587,var_4588,call_4602,const_4601,])
func_4605 = relay.Function([var_4563,var_4587,var_4588,], output)
mod['func_4605'] = func_4605
mod = relay.transform.InferType()(mod)
var_4606 = relay.var("var_4606", dtype = "float64", shape = (320, 2))#candidate|4606|(320, 2)|var|float64
var_4607 = relay.var("var_4607", dtype = "float64", shape = (12, 100))#candidate|4607|(12, 100)|var|float64
var_4608 = relay.var("var_4608", dtype = "float64", shape = (240,))#candidate|4608|(240,)|var|float64
output = func_4605(var_4606,var_4607,var_4608,)
func_4609 = relay.Function([var_4606,var_4607,var_4608,], output)
mutated_mod['func_4609'] = func_4609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4749 = relay.var("var_4749", dtype = "uint32", shape = (13, 13, 15))#candidate|4749|(13, 13, 15)|var|uint32
var_4750 = relay.var("var_4750", dtype = "uint32", shape = (13, 13, 15))#candidate|4750|(13, 13, 15)|var|uint32
bop_4751 = relay.right_shift(var_4749.astype('uint32'), relay.reshape(var_4750.astype('uint32'), relay.shape_of(var_4749))) # shape=(13, 13, 15)
uop_4755 = relay.cosh(var_4749.astype('float64')) # shape=(13, 13, 15)
func_896_call = mod.get_global_var('func_896')
func_899_call = mutated_mod.get_global_var('func_899')
const_4763 = relay.const([0.835585,-1.388299,3.110070,-3.789898,-9.722580,1.501723,-1.174520,7.701776,-4.240531,8.273446,-6.429961,6.071750,-4.226362,-8.799196,7.046888,0.775401,8.044700,4.826227,4.033206,2.872267,-4.139369,-1.515901,0.103525,2.401057,0.441711,-1.092048,4.737517,4.178534,-0.632267,4.320771,-0.250189,-4.100723,3.244235,-4.164192,7.476324,-1.170207,-7.690444,6.849490,-5.500285,4.661638,9.547403,-6.970217,-8.224706,-2.550078,3.610666,-9.521963,4.240829,8.917127,-9.319361,4.070939,5.551839,2.804907,-9.888238,4.919774,3.951934,-7.992866,0.475857,-9.180783,-5.529183,-6.750100,-7.066261,8.968936,-4.846069,-9.253473,-4.207754,-8.610471,-2.182952,-7.695805,-0.847770,6.969390,-9.482492,1.535212,-9.150355,5.601570,-7.044500,-5.399218,-9.260737,-0.140641,-2.418932,6.387048,6.561322,4.189096,-8.269288,-7.953006,1.733511,-8.361375,-6.021459,4.107627,1.558145,1.124950,8.780352,4.881384,-0.568371,-2.484646,-5.202035,8.620281,5.676883,6.205178,-1.379084,1.089528,-5.717685,-5.216328,1.156067,7.549082,-6.679871,-7.698173,9.701873,-4.302744,-2.513789,-0.986954,-1.197433,-9.678334,-8.834023,7.150282,3.152352,4.261149,3.849629,-7.470491,4.217192,2.036251,1.113975,0.843681,9.946080,-5.295614,-6.877274,1.535179,-5.531121,5.734702,1.290944,-6.790186,9.562595,-2.409832,5.467242,1.835027,8.262240,-1.516773,-3.289454,8.938888,4.445671,8.597107], dtype = "float32")#candidate|4763|(140,)|const|float32
var_4764 = relay.var("var_4764", dtype = "uint64", shape = (1755,))#candidate|4764|(1755,)|var|uint64
call_4762 = relay.TupleGetItem(func_896_call(relay.reshape(const_4763.astype('float32'), [10, 14, 1]), relay.reshape(var_4764.astype('uint64'), [1755,]), ), 0)
call_4765 = relay.TupleGetItem(func_899_call(relay.reshape(const_4763.astype('float32'), [10, 14, 1]), relay.reshape(var_4764.astype('uint64'), [1755,]), ), 0)
output = relay.Tuple([bop_4751,uop_4755,call_4762,const_4763,var_4764,])
output2 = relay.Tuple([bop_4751,uop_4755,call_4765,const_4763,var_4764,])
func_4776 = relay.Function([var_4749,var_4750,var_4764,], output)
mod['func_4776'] = func_4776
mod = relay.transform.InferType()(mod)
mutated_mod['func_4776'] = func_4776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4776_call = mutated_mod.get_global_var('func_4776')
var_4778 = relay.var("var_4778", dtype = "uint32", shape = (13, 13, 15))#candidate|4778|(13, 13, 15)|var|uint32
var_4779 = relay.var("var_4779", dtype = "uint32", shape = (13, 13, 15))#candidate|4779|(13, 13, 15)|var|uint32
var_4780 = relay.var("var_4780", dtype = "uint64", shape = (1755,))#candidate|4780|(1755,)|var|uint64
call_4777 = func_4776_call(var_4778,var_4779,var_4780,)
output = call_4777
func_4781 = relay.Function([var_4778,var_4779,var_4780,], output)
mutated_mod['func_4781'] = func_4781
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4873 = relay.const([[[False,False,False,True,False,False,False],[False,True,False,True,True,False,True],[False,False,False,True,False,False,True],[False,True,True,False,True,False,True],[False,False,True,False,False,False,True],[False,False,True,False,True,False,False]],[[False,False,True,False,True,True,True],[True,False,True,False,True,False,False],[False,False,True,False,False,False,False],[False,False,False,False,True,True,True],[False,True,True,True,False,False,True],[True,True,True,False,True,False,False]],[[True,False,False,True,False,True,False],[False,False,False,False,False,False,False],[True,False,True,False,True,False,True],[True,False,False,False,False,True,True],[True,True,True,False,True,False,False],[True,True,False,True,True,False,True]],[[False,True,False,True,True,True,True],[False,False,False,False,False,True,False],[False,False,True,False,False,True,False],[True,True,False,True,False,False,False],[False,True,False,False,False,False,True],[True,True,True,True,True,True,True]],[[False,False,False,False,True,True,False],[True,False,True,False,True,True,True],[False,False,False,False,True,False,False],[True,False,True,False,True,False,True],[True,False,True,True,False,True,True],[True,False,False,False,True,True,True]],[[False,False,False,False,False,False,False],[True,False,False,False,False,False,False],[False,False,False,True,False,True,False],[True,False,True,False,False,True,True],[True,False,False,False,True,False,False],[True,True,True,True,True,True,True]],[[False,True,False,False,False,False,True],[False,True,True,True,True,False,False],[True,False,True,True,False,True,True],[True,True,True,True,False,False,False],[False,False,True,False,True,True,False],[True,True,True,False,False,False,True]],[[True,False,True,True,False,False,False],[True,True,True,False,True,False,True],[True,True,True,True,True,True,True],[False,False,True,False,False,False,False],[False,False,True,False,True,True,True],[True,True,True,False,True,False,True]],[[False,False,False,True,True,False,True],[False,True,False,True,True,False,True],[True,False,True,False,True,False,False],[False,True,True,True,True,False,False],[False,False,True,False,False,True,True],[False,True,False,False,False,True,True]],[[False,True,False,True,True,True,True],[False,False,True,False,True,False,False],[False,False,False,False,False,True,False],[True,False,False,True,False,False,True],[False,True,True,False,False,True,False],[False,True,True,False,True,True,True]]], dtype = "bool")#candidate|4873|(10, 6, 7)|const|bool
var_4874 = relay.var("var_4874", dtype = "bool", shape = (10, 6, 7))#candidate|4874|(10, 6, 7)|var|bool
bop_4875 = relay.logical_or(const_4873.astype('bool'), relay.reshape(var_4874.astype('bool'), relay.shape_of(const_4873))) # shape=(10, 6, 7)
output = bop_4875
output2 = bop_4875
func_4882 = relay.Function([var_4874,], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
var_4883 = relay.var("var_4883", dtype = "bool", shape = (10, 6, 7))#candidate|4883|(10, 6, 7)|var|bool
output = func_4882(var_4883)
func_4884 = relay.Function([var_4883], output)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5031 = relay.var("var_5031", dtype = "int8", shape = (16, 12, 6))#candidate|5031|(16, 12, 6)|var|int8
var_5032 = relay.var("var_5032", dtype = "int8", shape = (16, 12, 6))#candidate|5032|(16, 12, 6)|var|int8
bop_5033 = relay.less_equal(var_5031.astype('bool'), relay.reshape(var_5032.astype('bool'), relay.shape_of(var_5031))) # shape=(16, 12, 6)
uop_5056 = relay.atan(bop_5033.astype('float64')) # shape=(16, 12, 6)
bop_5059 = relay.logical_xor(uop_5056.astype('uint16'), relay.reshape(bop_5033.astype('uint16'), relay.shape_of(uop_5056))) # shape=(16, 12, 6)
bop_5062 = relay.add(uop_5056.astype('float64'), relay.reshape(bop_5033.astype('float64'), relay.shape_of(uop_5056))) # shape=(16, 12, 6)
uop_5068 = relay.acosh(var_5031.astype('float32')) # shape=(16, 12, 6)
func_1502_call = mod.get_global_var('func_1502')
func_1504_call = mutated_mod.get_global_var('func_1504')
const_5075 = relay.const([-9.328990,-7.577362,7.372837,7.594617,-2.265996,-4.373182,-0.961965,-6.600188,3.409682,9.587789,-0.277449,-8.883418,-6.176824,7.217737,5.299228,-7.538618,-6.727245,-4.261231,4.123493,-6.467588,1.934208,-7.299922,-5.618704,8.946220,7.745853,-0.993526,-5.347188,3.196182,6.796451,3.107294,1.196204,-5.172015,-7.564844,7.826952,-7.680052,3.090097,8.620256,-9.070674,-1.581108,8.469942,-9.225340,3.019869,1.733462,-9.421281,-4.934848,3.999433,2.800627,4.057921,1.868388,4.965010,-0.518194,7.897256,2.622084,2.160975,-1.535242,4.476497,-0.447523,0.773032,5.529339,-5.492734,1.194765,1.054540,4.402831,-0.707943,0.523418,3.326697,-6.618472,3.775351,-6.777483,-4.617536,-1.061182,0.931608,-8.416280,-3.761688,-9.242453,2.437380,-3.826197,-5.454465,-6.068337,-5.858261,7.495170,2.463546,1.393423,9.462004,-9.616620,-0.720020,8.578567,6.972054,-6.907121,7.218657,3.546941,0.174774,2.517236,3.557699,-4.120216,9.415533,8.932521,-6.400910,-0.039999,-3.044678,8.732637,4.074240,4.863222,-5.011087,-1.739752,-0.202377,0.504578,0.899212,-2.673603,-7.723844,4.448756,-1.449372,-4.432447,3.198540,-6.582440,7.969989,-1.214641,-9.914940,-7.178950,7.373094,-0.739103,-4.505139,9.141152,-6.506160,-2.735007,2.786878,-4.901817,1.642805,-1.519133,2.316105,-1.661925,-9.349449,4.149417,-5.225294,6.154404,-9.877613,-9.956075,8.486116,1.654730,4.643916,-5.185642,1.134685,-0.499124,-2.312366,1.086584,9.831733,-6.615254,-9.151933,-0.743223,4.650299,-7.006996,8.121301,-3.806277,4.107172,-1.102533,-6.907836,4.524546,1.006379,-9.623907,-6.278169,-3.425145,0.410267,5.030654,-6.609492,6.758497,8.631669,-6.103584,-2.794163,-5.001301,-7.234164,-6.245351,8.687864,-5.864989,0.956048,-7.779082,-8.487837,7.918551,-5.284600,5.812063,-0.455679,-2.762929,-0.594536,-0.435861,-3.838532,-3.008845,0.069335,8.685387,-2.211184,4.401735,-9.009548,0.805626,-8.795057,-0.511689,4.110333,-7.345990,-4.564581,-4.067451,6.393449,4.113690,8.397115,-0.049367,-7.999924,5.567873,5.794540,-7.812362,0.510018,-6.502350,-5.073332,-4.322130,-0.560800,8.822512,1.652673,9.670578,-4.365243,-0.631401,9.932541,-1.889312,-2.858920,-2.636699,5.021703,5.386576,2.896002,-0.157493,7.186551,0.153998,5.673912,-5.718681,-8.288306,3.445665,2.523753,-8.600079,-7.344531,-2.855720,2.748463,-3.382639,-6.977454,3.832669,3.169817,0.687061,-3.852909,-8.032390,-6.113985,-8.424549,5.165490,8.757147,-4.322519,0.857269,2.247726,4.575241,-3.475449,0.943099,-7.010022,-7.885541,-7.938803,-6.253194,9.807219,3.669076,6.050703,-5.093443,1.697244,3.089114,-4.578585,5.953229,3.435124,-7.747165,-2.742012,-7.531518,-3.653725,5.331697,-1.478453,3.231390,-3.262579,9.350326,-8.319262,-3.330125,-6.145335,0.259095,-2.705747,-8.436100,-6.911524,-9.883157,-4.176658,2.699755,2.970375,7.140087,-7.263403,8.440299,7.511039,-4.547146,4.413665,-7.009679,9.074607,-4.485422,-2.711612,2.953306,7.268313,9.955725,-5.558834,-1.157165,3.988044,8.254405,-6.669284,6.678916,-5.900777,7.630764,-7.973427,0.533686,-5.952884,-9.666627,-1.652422,6.353746,1.275158,0.714789,1.341493,6.683349,7.470660,-6.040261,-8.371709,-9.863464,8.528215,-7.719845,1.028184,1.748768,8.050160,-4.829567,0.001380,2.742190,-2.280397,-9.221563,-4.498078,3.228068,6.419343,8.372947,2.314255,-5.771347,7.658667,-7.859557,-6.349378,-3.435221,4.936147,6.406784,-1.680064,4.555184,5.699666,-8.440313,-6.062963,3.345462,2.104881,0.230027,-9.797126,-7.321958,-8.326207,-3.845275,-5.970531,-7.023592,8.199614,6.510430,-7.801483,5.997189,-2.377528,1.429828,8.578666,-0.381126,5.506502,4.818239,4.813080,7.019895,-0.633447,-2.071539,0.442110,7.858818,-2.601740,-3.178674,3.859781,-6.752588,-7.890635,-7.972329,2.706369,-4.037885,-0.214747,-8.393659,6.577708,2.987817,-7.588644,5.534040,-3.671789,-9.704758,3.121867,9.295513,-3.921127,-6.540787,7.127612,-8.007023,-1.616143,3.966232,-7.896989,-8.118808,-1.230577,-3.766877,-4.784772,-4.962629,-0.784631,1.165332,3.030248,-8.238523,3.002794,-8.992254,-5.819668,7.907009,-8.201594,1.313221,-8.383302,-1.996474,-1.773931,2.092743,-6.121522,3.615757,8.194788,-8.862471,-5.799099,-9.054658,-4.027273,-8.316089,-6.982644,1.713341,5.154907,1.244517,-4.828264,-0.085407,-9.056666,5.047071,6.421213,7.827480,-9.036517,1.267313,8.508523,-1.930636,6.230596,-6.401084,-9.164437,-5.924674,-7.868460,5.138602,1.906205,0.535059,-4.252072,7.666827,-2.097943,-2.089179,-3.390795,2.104759,9.930862,5.389314,-6.174312,-0.901169,5.953152,-1.047366,1.012623,1.980020,9.899074,-1.666203,5.126972,3.770408,0.947880,-9.093675,-2.556433,7.502799,6.060836,-5.287251,-3.132693,-8.389535,0.384194,6.472371,9.637826,3.620834,-3.246360,-8.928929,4.453529,4.300227,1.075390,5.123414,2.950049,2.417599,2.580798,-1.997243,0.192084,-5.456069,-8.151567,9.200718,-8.706839,-3.274366,-1.237262,-7.168786,9.225691,-3.616228,-9.214460,-6.200143,-7.666902,-4.548703,3.620235,1.112670,-0.414187,7.489880,-6.915942,-0.050760,0.710375,5.933332,5.150850,-2.856349,0.584672,2.200521,-0.373284,7.924606,0.594811,-8.875713,-0.662650,1.595530,9.084972,7.247691,1.350428,-1.777156,5.198766,6.638368,-8.281260,6.529237,-3.834872,8.300407,-0.714261,-1.845969,-1.018551,-9.235210,-0.402160,8.613827,-9.174199,7.470844,-0.771473,-0.496541,6.270121,-2.696075,2.857066,4.393157,-5.248003,-9.231452,4.922115,0.357786,-1.685452,7.458459,0.771048,-6.264815,0.433032,-6.791379,-4.466120,4.157330,-6.884668,8.627976,1.508610,2.542265,2.491539,-7.646589,-7.384071,-7.783111,6.240029,-9.415857,4.585778,-6.195524,-7.039721,-6.490005,-6.554931,4.389521,-1.061182,-5.643273,1.269649,1.643847,-6.582131,-7.168679,3.872824,3.723825,-5.839325,-2.287491,-0.919976,-4.266961,2.060891,3.802199,0.210744,-1.879071,2.994782,6.130356,-4.432090,1.176149,6.371741,-8.389333,3.547334,4.504638,8.127476,6.191901,5.421135,-5.835231,-2.607606,-4.452544,-3.146809,7.014886,7.602319,3.494666,-1.769930,-7.166676,-8.065183,-6.424691,-7.752585,9.741412,3.542918,-5.729019,-1.125962,9.740460,-0.992184,-0.562478,-2.205620,0.829176,3.894076,-0.505351,4.987721,4.126938,2.059285,0.572597,5.132002,1.039436,1.383637,9.762166,-6.306159,4.856493,-8.752984,-1.231350,5.661979,6.687575,-3.379838,-0.818756,-2.400001,5.314176,-4.605828,-0.712620,0.971593,-5.623635,4.720551,-2.717351,9.056350,-1.446023,-9.383483,-8.242306,-9.168171,-7.181893,2.056120,0.060707,-0.524355,4.400173,1.006347,-5.379251,8.859264,-7.845007,6.692935,2.202909,-8.430745,-8.335329,-2.080373,-1.970394,-5.500539,2.636787,-8.390031,-3.102115,1.103358,7.311982,6.981321,9.115361,-3.496351,7.131820,-7.727397,-4.508673,-7.476642,8.553605,-6.597564,-8.595007,-5.246025,-8.836302,-7.203982,1.532622,8.647509,-1.426055,6.558108,2.748170,8.536708,3.503469,3.192351,-2.491762,-1.937181,-0.237232,-3.176869,-5.843197,-5.331408,8.524925,0.373857,-2.153772,4.433625,0.205810,-6.874419,-3.286438,0.793886,-4.700355,-3.579851,-4.793278,-9.410410,8.634230,5.864882,-8.536464,-6.729943,-1.994017,-2.841799,-4.732238,-7.209699,-9.863786,3.018427,-8.608632,-0.885783,1.238065,-0.532559,-6.454358,5.192476,4.117884,7.340949,-7.311479,2.477685,9.527150,-1.333354,8.191046,9.825414,9.353368,-9.587767,8.898738,-7.398881,2.370797,-1.222905,-9.294242,3.690974,4.337638,7.358628,7.334750,-7.051304,-6.365597,-9.258055,3.011671,-9.417428,-4.368963,6.199994,6.148093,7.330273,-0.883909,-5.187272,6.444667,-2.747313,-3.841243,-2.316951,-7.611491,-8.243396,9.570406,-7.432669,-1.694373,-5.820694,2.756922,-7.729031,6.390550,-2.452862,-7.018757,-6.626439,-1.161861,-5.540848,-8.247896,-5.350417,9.021516,-5.683197,-1.443402,-2.664193,1.333582,1.829039,-5.372717,5.282550,1.837389,0.717396,8.097083,8.286176,-7.660636,-9.172666,4.325739,5.911839,-8.841811,7.858244,-5.996457,8.632333,-7.721182,-6.291890,1.180463,6.222077,6.491441,-2.996035,-2.196607,3.136137,6.641404,-6.515268,-9.468905,8.123418,6.224174,8.194810,-4.994767,4.344025,-2.016297,7.024053,6.931863,-3.816206,2.274334,6.350153,2.887015,-1.286773,6.324917,9.539367,-3.859618,-0.954525,1.661657,5.299010,-4.785322,7.911136,9.527747,-2.502415,4.775012,2.796925,9.826442,-4.341577,0.123564,8.947422,4.884911,7.056181,-0.551278,0.150171,8.498862,0.613959,8.899193,-8.315624,-2.950108,-0.250140,-6.305753,-9.720298,-2.119255,-7.157401,-8.759655,-9.013230,-6.070441,5.809330,2.988593,-9.477942,-6.269400,3.271793,-9.560651,-0.544996,-0.150776,-4.662874,-1.046982,1.637994,-5.812906,0.640131,7.402199,-6.479092,9.751474,-6.529619,0.246915,1.831251,7.011754,3.347116,7.467329,-9.887616,-3.510468,-1.455434,9.470258,-3.501402,7.916020,-1.879810,3.890075,-9.340778,5.789044,-0.979584,6.854763,-6.721349,-9.352626,0.990236,2.579470,2.993219,-1.274307,-7.817622,2.934574,4.197685,-8.475109,-2.780808,0.133524,-5.336785,3.635654,4.562571,6.429533,1.072440,9.094246,7.448922,-7.946985,2.488757,-6.749755,0.251984,-2.641772,-8.796706,-5.384141,-2.252020,8.974905,-8.932416,6.184811,3.835623,0.540670,-6.891033,1.246838,1.147387,6.494254,4.108915,0.097648,3.255975,7.822013,-3.907042,-3.638724,0.274738,-4.146994,9.372501,9.105029,-8.304153,7.481661,-0.517198,-5.721171,2.156237,-2.904849,9.450438,7.403163,4.044064,-1.204220,-8.628206,-8.221380,-1.234509,-6.370291,9.488248,-5.271674,-1.189091,-0.753571,3.995881,3.580452,-6.169469,2.289706,1.826734,6.828181,1.956728,-1.102569,-5.685241,-3.251877,8.717784,-3.730746,-2.149446,-8.450884,3.538942,0.328128,9.747515,2.530316,-0.085369,6.253774,3.439305,-1.235044,-2.853570,-4.045165,-4.184616,0.068597,1.123177,-0.557619,6.836376,3.007119,8.007663,2.696478,3.423077,4.049283,9.180579,3.351041,4.027485,1.676225,-5.851070,-7.748388,-7.948843,9.065158,-4.642314,-7.661334,-6.323871,-3.012960,-5.018276,5.157861,-4.722700,-1.981904,0.965083,-7.312272,4.221093,4.895099,9.449385,-2.221410,7.422394,-7.023574,0.942797,2.724754,-7.762348,-0.454831,7.435550,-2.461938,-4.227261,4.717793,-4.998578,-1.365727,-7.403890,1.375610,5.581769,4.619619,6.907332,-3.325558,-3.722077,7.437425,2.057642,-4.535651,5.973657,-3.358122,3.554336,5.734301,2.998703,8.515300,3.540622,-4.258671,1.490644,-8.114654,8.698771,5.536044,-2.748204,-3.195637,-6.911077,7.603262,7.208109,4.211400,7.295373,-0.231942,-0.208590,-6.924798,-2.509687,1.999964,7.886649,1.307259,-0.952831,-1.346115,1.472186,9.259413,1.947399,3.148632,-9.125891,3.269125,6.980810,6.331848,-6.352823,-3.621385,-0.520941,-3.401194,9.454109,-7.782333,-9.991507,-9.157516,7.585102,-0.982341,-4.782130,5.395535,-1.565019,9.180537,-4.259258,-3.648167,-8.551281,7.524919,-9.880686,-9.168144,9.832316,9.019519,-0.694035,3.627773,0.287386,-5.337897,9.223415,6.103841,1.530669,-3.753144,8.479894,-3.742615,8.583973,-5.109183,2.693266,6.280288,2.917685,-7.032950,-3.881544,8.715665,7.390696,-6.860932,8.815724,0.778847,-7.904114,-5.654289,-3.797333,0.567051,-5.661321,9.208093,5.233271,9.980861,2.517280,-6.837918,4.004431,-3.063939,4.171899,-4.329128,-7.127574,3.175808,6.815134,-0.130713,-8.711154,3.867976,8.882602,-9.772107,3.769312,8.100784,-2.886617,-0.559742,1.442505,-9.404134,6.049388,8.245043,-7.299053,-7.396914,-0.378777,7.083246,3.361427,9.846132,3.183903,2.888003,5.843165,-8.907143,-0.595299,-4.780662,8.752059,-6.466628,0.447754,-9.661951,1.438562,5.294368,7.106597,-7.588644,2.911396,7.670013,-9.622214,1.721391,3.466300,9.630128,-4.395861,3.512735,-0.608263,5.021638,9.266969,-7.935661,-1.638977,-7.951242,-2.175185,-6.636791,-2.866412,6.734328,-5.964046,0.545849,-4.966610,0.042394,-3.416747,-1.897687,7.553948,-8.543534,0.314556,7.637425,-2.952183,4.155676,-5.105044,-9.091983,5.288797,4.626883,-2.163379,0.278225,8.791527,9.425285,6.736724,4.803083,4.951948,2.096522,-7.024657,0.474974,-5.909962,7.860935,-0.073069,6.135398,9.192659,-2.738830,3.975259,-0.610139,-6.304928,-4.017725,7.584590,-1.949942,5.246614,1.304603,-3.311687,-1.817719,0.724659,-0.088488,9.678585,0.802611,-0.266410,-8.129948,9.230070,1.385040,2.154713,4.890521,0.175531,0.085719,6.821539,-2.085481,0.627505,-5.155896,-5.680278,6.432410,9.346332,6.576227,-9.953680,4.645823,-9.636121,0.826874,0.619079,2.283394,4.488314,8.454923,6.062245,-5.926367,3.566013,-6.368405,5.603868,5.462152,-1.238970,6.610344,8.443411,3.943700,7.272105,8.870907,9.378326,2.921875,3.029614,-3.764487,-0.161195,-1.527766,5.369678,3.414477,-8.799217,9.630199,4.489219,7.496383,-7.171091,1.610990,0.094399,-7.246916,3.525539,8.168878,-5.078026,5.175499,8.416229,-0.908534,-9.038234,9.808981,6.782064,-5.281393,4.283202,6.380149,-2.140517,7.114459,7.142762,-0.726239,1.471101,7.262150,0.122194,-3.840200,-9.905385,-5.219450,5.512085,3.421608,-3.833442,9.846799,6.279420,3.534953,3.237139,-5.346750,-3.688762,3.985462,-2.866852,-5.311442,-1.739766,-8.525206,3.409980,2.669108,0.680702,2.550570,-2.199415,4.639142,5.218276,7.335792,-2.489485,0.897690,8.848109,-4.908643,-6.391679,1.710053,-8.134430,6.532059,-4.348812,-4.116914,-3.321501,-8.464871,-0.548520,-1.549669,-6.077820,3.172227,1.490266,-4.704443,7.940472,3.940597,8.601023,-7.075436,-3.045382,8.383785,4.340056,-1.393776,-2.280136,-1.270944,7.055429,-3.787487,7.466767,-2.730678,0.830703,3.382819,4.241433,-0.826443,0.748340,-3.791877,-5.542779,7.347036,4.940184,6.186110,-1.056057,4.810110,9.908781,2.425558,5.731686,4.789672,-4.762948,5.327999,4.490855,-4.750905,8.618906,8.150468,8.437728,4.759162,-1.196914,-1.264057,-7.882515,-9.272412,7.911285,-4.030447,0.843571,9.516394,-7.863426,-2.307593,-3.815958,5.841086,0.867266,-6.992428,1.016116,-7.137543,-9.339362,-8.296339,-4.125429,-9.854492,-3.507091,-6.334241,8.296670,-1.561031,-0.540621,0.113258,4.918760,-2.923024,3.783471,8.000149,-2.847950,5.859669,-1.628729,-5.599816,-3.266855,6.626454,4.244904,6.375103,7.115513,7.276029,-6.412204,1.611937,8.346223,-2.004538,-2.465056,4.836247,7.250581,8.804119,-5.360278,-8.544342,7.607727,3.097305,7.982729,0.892763,-1.335435,4.864017,5.998480,3.992230,-3.264823,-8.557676,0.976696,-3.360423,-6.793123,3.583697,1.420023,9.664554,4.758594,0.171085,3.183286,9.404778,5.401994,-1.172361,5.576669,0.524404,-0.448972,-7.140434,7.589258,-7.863275,0.847176,-2.202626,-6.976853,3.790250,0.284688,-8.838593,1.402957,-9.238747,-8.955221,8.987249,-8.516773,-0.170298,-5.296815,8.900413,1.565150,5.175624,0.082784,7.330082,-0.860511,2.109371,6.935955,-1.247685,2.063935,-8.322259,-5.347446,-0.102992,-6.578202,0.090865,0.566387,8.745428,-4.049478,7.124242,-0.612529,6.712517,1.290449,-2.745070,6.128847,9.119372,-3.605312,-4.690022,-2.564372,8.623940,3.851136,5.191611,4.869338,6.100725,-6.317431,9.754331,6.752531,7.319223,7.652552,-6.103423,-7.669050,-3.462341,3.047186,7.668098,5.718679,-8.283584,3.761445,2.420117,-6.797878,5.503784,-3.355254,-1.086874,4.812849,-7.567252,5.490297,6.914304,2.444191,-8.478438,0.333809,-3.737922,7.187229,2.666645,-0.849878,7.948761,-0.032481,9.827869,-0.843011,-3.677912,9.208309,-6.791792,1.272816,0.631500,5.401226,2.692827,6.576697,3.875214,3.399710,-3.813525,-0.782713,-6.698402,-9.369863,5.712414,7.679097,-5.812160,-3.073511,-8.548438,4.600502,-4.684848,3.553812,7.942876,0.942130,0.992036,9.056733,2.189404,-7.689214,-7.993041,4.652175,3.642908,-2.754030,-0.042363,-3.292796,-5.035926,-7.436691,9.178376,6.683194,-3.638014,3.320094,1.234087,2.556130,-9.085459,-3.392918,-3.371768,-2.509261,9.044560,-2.639403,-9.644493,-7.188144,-2.503923,9.950421,-1.350085,-3.123646,-3.697879,3.871127,-3.217399,-5.768228,-3.667793,-5.210943,-1.269885,-5.417752,1.122022,2.648746,4.995393,-1.059105,-5.360246,9.373503,-9.443137,-2.225840,-7.343130,-1.475339,-9.887767,9.044354,-4.734354,-5.300724,1.284402,-0.820977,9.496801,-9.349427,7.796725,-3.826519,-2.843704,-5.599621,1.922968,9.017224,-6.860516,-0.133677,-4.999716,5.172869,4.085078,-0.092868,-9.410902,6.264583,-3.426254,2.263518,7.775659,-3.457588,9.395239,-3.909574,6.106517,-7.024220,-1.751195,-0.651406,5.707548,5.104665,3.355795,2.966539,-7.151563,3.299481,-6.117572,-0.196678,-6.047930,5.375848,9.872529,-1.144417,-0.401806,3.515556,-0.560549,2.635107,2.166284,-9.168972,-2.752207,2.091100,7.361657,-7.744895,0.713252,9.035725,6.874539,6.164177,-6.251508,4.191330,4.809920,4.810917,-7.944829,5.449451,5.611919,9.603825,5.204412,-8.583073,0.647097,-6.512925,9.646014,0.157037,-8.865116,-0.849725,-7.368677,9.432224,-5.122151,4.578853,-6.851102,-0.068185,1.408684,8.534366,-2.973044,5.570020,-8.314611,-0.439350,5.942285,-0.102399,2.345796,-2.529153,-7.949927,2.298916,7.235998,-5.812088,2.428403,8.664123,-7.006055,1.869792,9.933657,-4.004778,-0.897932,4.789703,-3.625289,2.586939,-1.648693,-5.585357,-4.765969,1.402314,-8.904564,7.764114,2.648624,-4.411850,9.564028,-7.488257,-4.672290,6.431385,-7.754348,-0.259517,-1.548566,-5.330934,-4.466066,-1.124350,-0.638149,-8.660903,6.951795,-9.481301,-3.742596,-4.226044,-6.332507,-8.810075,2.983987,8.999518,2.807617,2.615738,6.277459,-8.881330,-3.056174,-9.072429,1.894653,7.772365,-0.725266,1.983361,2.096303,8.174051,-5.530580,-6.799446,4.773190,5.054220,-8.595235,-1.205025,-8.011742,5.686386,8.491206,4.974235,-2.899193,7.942669,-9.472756,5.272716,-0.292822,2.240511,4.412951,4.591195,8.885322,5.302773,8.517361,-7.827048,-7.626894,-3.746794,8.534376,-2.350942,-8.901246,9.020401,-3.901218,-1.880764,1.643144,-2.813205,-9.480251,9.670621,-9.973275,0.537686,-3.881249,-2.344743,2.386616,2.577626,-8.567394,-2.591672,3.611383,-7.033333,-0.773275,8.832541,-5.761096,-8.921263,1.992089,8.950128,-7.366786,2.401474,-8.397952,-9.276957,-4.794462,-4.017147,5.041107,6.188946,-0.581629,9.390986,5.904979,-9.960738,-0.641983,-9.323016,-7.590488,1.444352,-6.954327,-2.745532,-3.598338,-6.264038,-8.769152,-0.626983,9.284054,-0.090589,8.536853,-1.692634,-1.871105,-5.757088,-9.204047,-1.300405,-5.323547,2.479980,-0.819436,6.296486,-2.696555,2.580133,6.621955,2.102458,-3.207733,-0.200497,5.050353,-7.716012,-9.615761,-1.582202,7.866144,8.321609,-2.084496,-0.333659,-2.734840,-6.123500,3.099568,6.401473,6.611963,7.862524,5.601949,5.351371,-8.885944,-2.571109,-6.557431,2.521642,-2.216969,-7.543353,-2.821249,6.730295,-1.827698,8.288851,-8.018125,-2.951709,6.808510,1.553828,-1.594135,9.477216,-0.803407,6.144381,-8.266530,-5.258035,9.519878,-3.991967,6.720088,3.364174,7.019189,5.300408,9.640600,1.361096,2.108489,1.381666,1.757752,-0.837582,9.293474,-5.794596,9.141714,-4.096744,2.917963,-3.624596,-7.943531,0.984302,-9.903353,0.257556,-2.727308,6.261236,2.437493,5.503673,4.605138,-7.974246,5.270949,4.087340,6.781327,-4.587267,-5.289807,6.714760,-0.628863,-4.867371,1.733945,-4.398667,-3.591897,5.010509,2.174793,-0.540541,3.700966,7.627195,4.574108,3.092119,-4.285684,-0.194252,-4.328255,9.000599,-9.989608,4.003302,-2.923339,4.764676,2.999946,-7.204482,-2.723685,-3.496643,-1.177388,-4.096233,-7.183534,-0.745357,5.876465,7.758191,8.121945,-2.169017,-4.015449,5.112375,-4.070149,7.791167,-8.344373,-0.141247,-7.925319,-4.783330,-6.128527,-1.112190,-6.365569,2.046555,9.833087,1.674456,9.499296,-9.732663,6.274546,-7.469759,4.514608,-6.710161,-3.990321,-1.044745,8.318687,8.911072,8.775552,-7.716117,-9.061276,-5.175118,-9.263716,-1.213941,8.188101,7.623750,1.863162,-0.783500,4.035861,-2.128947,4.379895,-6.947867,1.397590,-2.073504,5.710523,-9.848490,-3.619431,-0.361355,-6.532670,4.886345,1.849341,-9.487138,-2.037069,9.089863,7.449144,5.116459,-0.793326,3.777105,8.660049,1.907499,-4.387046,3.246177,-9.214778,2.371236,-8.948602,-8.523533,0.022656,-0.858089,-2.298415,6.669805,2.434194,-9.737726,-5.495477,4.530904,-1.866447,1.638980,-5.642843,2.381276,-0.426095,2.491589,9.490856,-2.691221,7.415410,6.844342,2.821553,8.021255,9.771817,-0.352234,-8.271321,-8.917124,-8.940222,0.559789,-5.167521,7.287829,-9.314808,3.841699,0.049985,-3.428298,4.766239,-6.338258,1.684998,7.593764,2.736645,-8.976158,-1.870924,-6.888590,-3.354610,6.329443,9.144672,7.154225,-6.541776,6.843710,5.356046,-1.808812,3.159502,3.347703,-5.450746,-8.586000,-3.576612,9.817578,9.397323,-5.849572,-8.610364,-8.730282,-4.519876,6.979190,-5.950815,-4.829992,-5.841326,-0.703305,2.458795,-6.486135,2.126650,-5.676422,-5.024046,-2.927069,6.278582,8.895726,-5.280582,3.551311,-4.341081,2.871093,-9.888190,-5.614915,-2.101634,-1.660928,-4.173957,-6.523901,0.070581,0.598551,-0.587410,6.525237,-2.526858,4.946891,-2.923083,-0.747903,4.369572,-3.848549,2.187245,7.666386,7.246591,-5.957250,-2.170271,7.001918,4.889210,6.941749,-4.401436,9.710885,-9.551887,-9.263769,-0.480232,4.941354,-5.186634,2.201820,-9.368966,-0.207816,-5.829496,3.536506,0.248679,4.484114,2.442379,-7.477568,6.831956,5.284180,9.322329,5.131519,-9.353132,3.332746,-7.046439,-8.863442,0.219325,-1.257485,4.887041,5.916407,0.348648,0.369742,0.958571,-9.082331,-0.896370,-3.583570,6.061992,2.339098,-3.275819,0.660890,4.212041,8.230529,-4.229993,-5.855062,3.461536,-1.111945,-8.692136,-8.349581,1.345314,8.160072,-3.266299,0.502800,7.350082,6.398068,-2.029349,-6.277301,-3.398536,-5.371997,4.354196,2.628331,-6.884365,3.770774,4.442625,5.898184,2.034920,-9.498559,-8.704350,9.496896,-6.860535,-5.898767,9.199356,-3.579397,-4.092117,-8.440704,-6.538582,5.203823,6.715387,6.091092,-0.178178,-8.359248,6.737730,6.272519,-5.954522,1.973846,0.917691,7.275589,-4.900029,-0.463077,8.569194,4.214805,-1.438271,-7.426144,1.340625,3.733581,-6.062180,7.494343,-7.467633,-6.461559,-2.411201,-6.366291,6.961208,-2.620062,3.552032,-0.311106,-9.583099,-0.398505,-0.283968,-6.854143,3.260488,5.420049,3.539515,0.796046,9.625479,9.274401,-4.629046,2.129042,9.946769,0.125580,7.057953,6.846737,1.156006,-8.407317,7.084350,-9.380113,-8.344058,-0.750540,-9.845649,-4.698000,6.601459,9.460013,1.648131,3.741248,0.226849,4.786954,5.064199,-4.097043,2.604052,-9.133011,5.260872,6.409730,5.018923,-2.084932,3.117455,5.903835,-4.874801,-4.315182,-9.077993,-2.237272,7.460233,-1.409655,0.619110,4.751425,3.420770,9.290854,-1.343017,3.102915,-5.498980,-8.242945,-2.215908,4.521296,-5.744957,-0.831652,8.289969,-6.184702,-2.569893,7.968500,5.015845,-3.522115,7.473783,-4.508312,-8.338681,8.688111,8.990605,7.047235,2.685202,-9.139353,-5.180895,-6.112652,7.208922,-9.382530,4.861271,5.791996,3.230087,-6.111304,0.430305,-1.968184,-4.662904,7.740189,8.537205,0.156209,1.033494,4.941513,-5.929082,2.332011,-2.103976,9.091091,-1.208299,1.749717,7.403972,-5.243418,-6.212867,-5.753862,-4.055458,-6.392122,-6.145516,-4.303218,0.286471,-6.434989,-3.631084,7.647452,4.098632,-1.149532,-5.911412,7.060994,3.568445,-9.811889,0.784917,-3.687190,-3.530262,7.826326,-7.346205,-2.026912,0.662357,4.699416,9.047049,6.437725,-5.685691,-1.552178,7.555973,-2.421330,4.365082,-7.821175,9.009493,-5.232583,5.640099,7.582306,6.039913,6.096278,-0.834312,-9.826984,8.273931,-9.820147,-0.026549,-8.392603,3.445096,-9.582974,-5.233032,5.276685,-2.288452,3.073892,9.491311,9.817225,6.759051,-7.787048,-3.766789,9.088481,-4.306257,1.382599,-8.206686,-6.675134,-6.230046,-9.968231,6.353005,-5.730195,2.350738,6.296154,-2.862743,5.184614,7.256558,1.673673,3.399561,6.853461,0.668168,-1.631217,5.268316,2.019214,1.202666,-3.789709,7.640716,-9.423072,-3.034098,8.504268,0.487016,-0.959379,-1.476513,-8.532401,-5.384980,4.857038,-5.851608,8.333033,-7.497348,7.688946,-7.775993,-2.831207,-5.858913,-3.950665,-9.586426,-7.945867,5.194730,-9.197054,-6.007976,1.264318,0.072651,-4.927000,-9.923017,4.289293,-1.331449,-3.149939,-7.020848,-4.460068,-8.120612,0.337817,3.347804,-6.310639,6.920800,-8.787448,1.715837,-4.326520,6.837617,-3.391202,9.045319,-9.919406,-3.278764,-5.314846,-4.606144,8.578698,-9.030246,3.518694,-7.822476,-2.698125,6.816279,-9.819231,-1.661166,1.167760,0.191814,1.444088,5.302866,0.762144,-6.939767,-3.389759,-4.856768,6.972985,-9.668827,-3.906860,-9.095325,-4.448211,-1.857678,-7.933987,-9.072215,-8.800722,3.220979,-2.905800,1.944851,-6.261424,2.750150,-3.215015,8.301374,-2.689272,6.028628,-4.943795,4.681422,3.614492,7.618657,-0.086832,2.234862,-1.888049,-1.675950,7.142789,-7.533064,-2.654954,-5.270395,1.769922,-0.263997,8.556191,8.046876,-1.602066,2.642321,-1.312075,7.219749,-1.569916,1.744168,-4.000024,9.417621,4.066115,1.891393,9.130163,5.495962,7.869590,5.205731,2.186471,1.166127,1.869489,2.505441,0.255787,8.099041,5.076733,-6.282911,-8.470829,2.195334,7.276190,4.368924,-6.270532,-3.709183,8.333520,-8.266387,-8.550333,-0.663540,-3.969815,1.091812,-7.047108,8.743035,1.503973,4.936998,4.306053,8.972061,-8.317251,-8.588727,9.711505,-4.199125,-6.618393,2.797108,-2.426667,-6.102147,3.975765,3.437282,-0.693972,2.435388,-4.594388,-7.180280,9.740395,3.985313,-6.294542,-8.779418,-3.323091,-5.894056,-4.152920,3.285850,1.747389,7.045997,1.839394,9.272584,-2.130910,6.613811,3.405930,-6.097208,5.478838,-1.480900,4.473270,-1.486802,-8.178653,-7.097950,-1.215907,4.658779,-4.111767,8.487492,3.973931,4.865162,4.791302,4.688850,-3.572696,-7.300442,7.573856,-1.328398,2.964212,-0.849330,1.744099,-6.684117,-5.832968,-2.482331,4.900383,-7.948853,-2.895418,-8.584436,-7.116481,-0.258922,6.068723,-3.374603,-9.040027,-9.847269,1.460531,7.500900,9.909788,2.119700,0.363368,-3.095783,3.075714,-9.289123,9.359734,3.945755,-6.772645,-6.469578,-3.602044,-2.637212,8.055962,0.592245,7.892298,-5.420569,-3.453220,-4.347223,8.597800,-2.518007,6.163907,-7.153316,0.217990,-1.003570,5.727716,-4.735674,1.112373,-5.908594,8.452721,-1.689225,-5.618050,0.414213,-4.799247,3.334139,9.244619,-0.143926,-3.845255,0.425919,-2.830450,9.810966,-1.680649,-9.840066,-1.786393,9.430294,-4.513871,-8.198954,-1.466936,3.508794,3.123458,-5.220346,8.798751,9.883304,1.095689,1.730805,-2.618481,5.669475,-1.446546,-7.488336,0.033924,-7.817105,1.986954,-7.333602,2.321392,-2.356276,-6.142812,9.476597,7.426814,4.289267,8.821438,0.048935,8.815980,-1.119812,-1.160463,-4.492151,-2.463756,8.780670,1.770910,6.817368,1.440085,5.122951,-5.597004,7.648498,2.266910,-6.886944,-2.729131,-6.184856,1.538646,6.208392,-8.870574,1.045831,3.797362,-1.489884,-0.027148,2.638497,-6.636681,-5.077401,1.297715,-6.443674,-5.947729,8.486570,-6.306596,7.030405,-5.406722,0.893915,-9.762272,-1.744217,6.472839,5.630991,-9.063067,-6.371710,1.154689,-1.928852,-1.112431,-5.905938,0.853824,4.771060,3.140813,3.713666,-0.164287,-7.437045,4.519163,-9.050550,-2.651527,9.871935,-4.769051,3.352288,-0.792022,-6.318449,-4.682523,8.669256,-7.036252,-6.541079,2.359045,3.534854,-0.600627,4.649959,-1.942065,4.345836,0.571311,-1.258537,-6.803853,9.937226,0.974942,9.327888,-2.733607,7.478935,-6.666188,4.940125,-1.313768,0.078284,-8.960887,-3.495840,-9.196110,6.800845,-2.985015,0.753357,1.787786,3.641087,-1.516055,5.411465,-1.718244,0.565658,-1.927845,-9.883925,9.988910,4.904538,-2.088389,5.732855,0.787091,-7.125133,-5.896832,-8.724864,2.642573,-2.044995,0.997435,-6.800013,-0.529717,-8.069599,-2.042003,1.897701,-4.113756,-6.861181,2.449997,8.467613,-0.595208,-6.671129,3.831092,4.466451,2.774835,-5.449949,6.595951,-9.171099,-3.794177,-8.410773,3.410514,-5.015401,-4.872373,2.023644,-7.901019,9.220893,-2.621436,4.559667,-8.825103,-5.800040,-3.068075,-8.643847,-5.280430,-2.420545,2.520397,0.194356,-9.788268,-6.870085,-2.835623,-6.377237,-4.528791,-6.638500,-0.414940,-2.018189,-2.972989,-2.537603,3.607841,-3.430198,3.287036,-0.106934,6.371986,1.710505,-9.777638,-3.991475,4.599666,9.740378,-6.228411,0.509587,-4.403068,-6.954163,-7.784358,0.888802,8.733686,1.523512,-7.962248,-6.998497,-4.175693,-9.779462,5.507704,1.394526,5.373210,7.505330,-5.742740,-2.731513,-1.856352,5.301580,3.613501,1.372198,-2.309618,4.100801,-2.587248,-5.639312,-9.320886,7.487089,-7.435353,-0.287264,-4.281167,8.163932,-7.009726,5.561922,-1.105061,-8.485303,4.248633,3.245327,-9.314230,6.171193,-1.029495,5.202920,-4.852745,-7.180295,-0.821714,-3.336225,-0.174555,9.105123,-8.046463,-3.918367,-4.958959,-6.468019,-5.888002,3.848081,1.883989,3.956428,0.073245,-8.539357,-2.018128,-2.801423,4.896421,8.881922,-8.146257,5.188020,5.212829,-2.761086,-1.817666,8.272570,-8.953511,6.580836,0.152633,7.266064,-4.534362,-2.312467,-0.690495,5.894319,-9.248153,-8.190237,0.567358,0.201345,7.096135,-1.160172,-6.362727,-5.583881,1.756613,-7.708178,-0.565068,4.742199,7.009609,6.305191,-9.318876,-8.035233,6.501003,8.560494,-3.161502,1.249316,-7.613786,1.473742,-6.373522,1.230807,9.197483,-1.689818,0.770251,-3.973965,-7.433096,3.438622,-1.522362,0.450924,-0.788064,1.830912,1.665284,-9.164386,-2.201228,-3.053710,2.971084,-4.528427,-1.234701,-4.787284,-1.900797,-7.427504,6.133366,6.270059,1.259114,8.205766,-7.476671,-2.065386,-1.792184,3.010253,-1.978314,0.717462,-9.597753,2.829593,-1.343383,-5.440170,-4.970141,6.482095,-4.594869,-6.456287,0.144992,2.121383,-5.317186,7.788979,-2.728632,5.533536,4.220619,-9.651362,3.021748,-7.095591,-9.023921,-3.503713,5.788059,-4.801246,4.318910,-6.232817,-7.531680,-5.725699,1.718724,8.574204,-9.141769,2.060718,3.708039,6.300747,5.529377,4.829555,3.135175,-0.161888,4.668505,-6.968332,3.144808,-5.759807,2.233816,-1.996364,-3.624206,-3.341513,3.306897,-3.095990,-4.564446,2.881906,5.678111,0.796265,-3.237237,-0.338443,-7.192486,-0.538284,1.255466,2.739126,0.663308,5.036260,-0.322607,0.555459,3.161380,-2.101756,3.001604,2.600097,-8.146826,5.995448,7.883942,4.816725,6.843500,0.388329,-6.210261,1.939346,6.203353,4.408226,-7.028623,8.411571,6.165306,5.750761,4.026072,3.637683,8.533105,-3.727812,-4.168925,-0.764586,-6.629588,-2.867871,2.776817,-2.733673,1.724447,-7.849855,-9.203420,9.489895,0.406676,5.569867,-9.671438,0.394860,0.100735,-7.251605,6.497437,4.077057,-1.748270,-6.071025,8.609026,-5.871190,-9.260946,1.798975,-8.550164,-1.178096,6.474326,-3.982531,5.636543,-5.196584,-0.011908,-8.713097,1.013274,3.541815,-7.397435,9.024389,-7.626923,-9.458957,-3.046917,-0.072564,-8.019012,2.181937,-9.548538,2.402630,9.971453,-8.544827,-7.176216,9.559303,5.564053,-8.471816,-9.308788], dtype = "float32")#candidate|5075|(3072,)|const|float32
call_5074 = relay.TupleGetItem(func_1502_call(relay.reshape(const_5075.astype('float32'), [12, 16, 16])), 0)
call_5076 = relay.TupleGetItem(func_1504_call(relay.reshape(const_5075.astype('float32'), [12, 16, 16])), 0)
bop_5079 = relay.greater(const_5075.astype('bool'), relay.reshape(call_5074.astype('bool'), relay.shape_of(const_5075))) # shape=(3072,)
bop_5082 = relay.greater(const_5075.astype('bool'), relay.reshape(call_5076.astype('bool'), relay.shape_of(const_5075))) # shape=(3072,)
func_1357_call = mod.get_global_var('func_1357')
func_1360_call = mutated_mod.get_global_var('func_1360')
const_5093 = relay.const([8.277338,5.371617,-7.302490,7.824441,-0.480718,8.637011,-0.707895,-6.410489,4.081061,3.096517,-6.768548,3.309281,3.185123,-3.191809,0.468706,-6.105266,4.496004,-1.546937,4.528581,-2.444927,6.331929,-7.445979,-1.807005,-5.933417,-2.189724,3.028288,7.704251,-2.629481,2.352284,-5.072960,0.918789,7.458719,-4.706436,-7.794414,5.563263,-9.506603,9.322999,9.717048,2.525076,4.349607,0.717423,-1.001374,-6.008027,8.512070,6.918697,-7.092487,-5.915741,-1.434293,9.382162,-6.631757,9.682034,7.430301,2.923246,-9.781127,-0.425670,6.934553,-0.472677,3.166580,-5.888317,8.031973,-6.115546,-7.213698,7.346462,1.551753,-8.968501,-5.899827,-9.449628,-5.088962,-9.389768,-4.058431,-7.658991,-3.721372,8.524744,1.353758,-3.153627,-0.396442,-8.447312,7.998924,6.645471,-5.291698,-8.777539,8.093913,-9.999130,-5.346105,-6.357149,-9.822930,-6.809933,-8.489704,-4.581350,-5.466677,-3.795103,9.868328,9.548120,-2.553260,7.155961,-5.056211,5.659928,4.527204,0.284922,-1.843841,-4.754372,1.071282,2.472190,3.302204,7.098314,-4.042608,-8.471187,0.120890,-5.311103,-2.667920,-4.458342,9.304119,-4.438367,-8.531372,2.389652,4.293046,9.647183,-6.300861,-8.695969,-1.290285,1.552638,2.897856,-0.473612,-1.501835,8.708863,-2.497993,0.027750,8.401731,-1.701030,-8.134928,1.903194,-7.611135,-0.216149,7.087211,-4.096136,-8.703953,5.715639,6.414360,-6.048647,-3.878582,-6.929044,-7.086818,7.454159,0.736861,0.596369,9.946630,0.614760,1.580155,-4.495179,8.536219,-5.697593,8.222709,1.628152,1.179888,-3.717816,9.241878,-1.008132,-4.757976,-3.955527,-2.885454,9.047313,-4.154397,8.387239,-4.981246,-3.742738,-6.891852,-0.730926,-6.050551,-0.445258,9.448605,-7.191450,5.993955,-5.753921,-5.124921,2.051062,-8.761154,-7.182509,0.001733,-8.184562,6.280306,1.059479,5.552826,4.518882,-0.606390,4.640463,-3.544924,-4.425059,1.234967,-7.403756,8.926899,-9.718313,-5.993383,-7.107340,-2.001908,-7.552158,-6.068226,6.415644,2.578744,5.811629,-1.973245,4.846180,-7.924982,-6.554185,1.616864,0.272443,-2.817754,-1.839453,-0.773286,-6.840429,-3.576974,9.919185,5.322396,-3.775220,1.380496,-3.953585,4.442512,7.403224,6.725223,6.792066,-8.653017,-6.983033,-7.876786,4.834195,3.342651,3.355953,-5.602663,-0.759238,4.136730,-1.026122,9.119461,-4.712470,9.508573,-7.179017,1.979684,7.442664,3.443059,-4.044798,-2.370394,-3.888663,5.920404,9.206855,-9.492180,6.555085,6.423212,3.362537,-0.641211,9.141818,2.339868,0.012880,8.933988,-3.866207,-0.516096,-6.668598,-9.198692,-6.750915,-6.322937,-8.999527,-3.560621,-4.133497,4.333537,-5.869480,1.741569,7.928707,1.324324,6.303393,9.061289,6.340916,-0.428568,7.660671,0.303025,-7.247039,9.195434,-7.643296,0.191741,6.072995,-7.398493,-4.248497,5.099430,-0.654865,-4.899175,6.374399,0.530737,3.978750,-6.801132,2.476279,0.587503,5.449504,-1.697949,-2.708600,-8.017075,-9.953919,2.193885,-9.278465,5.401519,1.925707,-0.867156,5.517999,-8.206859,7.997463,5.255638,-2.727185,1.049091,-5.224410,4.749669,7.600422,-4.428264,6.034293,-1.582915,9.420077,-1.671094,-5.193019,4.614752,5.603607,-6.119509,5.132308,9.062855,-4.469546,3.368859,-5.964815,0.746255,6.524802,7.393450,3.212498,-4.464390,1.393993,-3.957077,-3.768453,-5.538451,2.963714,-8.799869,-3.267303,-5.654294,-0.217317,7.086038,-8.374901,-9.614433,5.125515,-2.651254,-6.473198,9.938626,-0.443971,6.076141,5.615304,-8.697201,-0.644620,6.512806,-0.331133,-9.896636,-9.477895,6.288422,-3.717147,-5.912319,5.836669,9.620064,8.141873,-7.256459,-1.221075,-0.538359,4.856352,-1.114210,-1.734333,-9.515258,7.997316,9.264397,7.734088,-7.162895,6.887119,7.863323,-1.614562,-4.749669,0.020550,4.717507,-4.482209,8.692426,-7.268661,1.870564,-8.209524,8.734730,-3.261273,3.422984,8.205419,-2.755183,-3.311860,4.118176,-2.734901,-9.123405,-0.445430,4.990578,-2.529804,-3.177061,-2.339909,3.682449,-5.521552,-5.303711,1.813084,-2.125481,2.311969,2.280062,-4.085338,-9.484690,-5.510655,-0.094041,-3.977360,5.662656,-3.921832,5.616684,-6.468047,0.204375,4.748904,3.997631,5.259349,5.804882,-7.777411,-4.121116,-6.497164,5.743067,-8.699804,5.302937,5.685431,5.775703,9.334430,-6.365021,9.892340,-2.724702,8.389740,6.897039,9.602896,-6.017552,-5.556451,-1.825403,3.766433,3.681842,8.300126,6.435238,-8.399417,-3.098549,8.576970,1.911908,6.549748,-2.159598,2.281727,4.176011,-6.435285,4.977258,2.104025,3.205732,0.170796,-5.804264,-0.360830,-6.074860,-9.648120,-0.526014,3.796198,-4.304156,1.001887,-0.515461,-2.221118,6.481406,1.910635,9.522976,-2.423944,8.024407,-7.779821,-8.005237,1.259737,4.222388,5.868741,-9.175846,4.577333,1.463398,5.169864,3.113387,-6.615518,-0.690641,9.491021,-5.458928,4.597061,-4.391122,2.810314,-0.970896,4.856092,-3.992129,3.906384,7.114290,2.050834,6.806503,-5.594240,-7.244038,0.350902,-2.392139,4.029037,-2.327691,0.153534,-3.658241,1.432199,9.045058,-1.448620,1.935781,-2.114690,-6.225434,-4.663976,-5.234426,-5.547858,4.758372,-7.050140,9.951998,-8.868449,-7.618587,-3.948683,-1.327629,6.707634,-5.533495,9.714779,3.210736,-0.012376,4.050947,9.469618,-4.226394,-7.931011,5.328894,0.765536,-5.953110,-6.252222,9.291823,0.766104,-6.205942,-3.491490,-9.253629,-6.353643,3.844925,0.815629,4.007277,2.844985,9.049211,2.805390,-2.305444,5.241435,-3.891721,5.168770,-2.086609,8.030160,9.231201,4.889130,6.604123,6.233202,-7.108928,7.496921,3.856467,8.814584,3.423941,0.647422,-0.138501,-6.143436,-4.746787,-4.275924,3.277729,0.609244,3.703359,-8.577910,-2.745965,-9.280342,5.897407,2.171010,-1.979627,3.026093,6.712458,5.200345,5.500656,0.551129,1.959962,-7.693344,7.642014,5.196415,-3.714630,-6.236901,6.158463], dtype = "float32")#candidate|5093|(576,)|const|float32
call_5092 = relay.TupleGetItem(func_1357_call(relay.reshape(const_5093.astype('float32'), [16, 12, 3])), 2)
call_5094 = relay.TupleGetItem(func_1360_call(relay.reshape(const_5093.astype('float32'), [16, 12, 3])), 2)
func_1502_call = mod.get_global_var('func_1502')
func_1504_call = mutated_mod.get_global_var('func_1504')
call_5096 = relay.TupleGetItem(func_1502_call(relay.reshape(bop_5079.astype('float32'), [12, 16, 16])), 0)
call_5097 = relay.TupleGetItem(func_1504_call(relay.reshape(bop_5079.astype('float32'), [12, 16, 16])), 0)
output = relay.Tuple([bop_5059,bop_5062,uop_5068,bop_5079,call_5092,const_5093,call_5096,])
output2 = relay.Tuple([bop_5059,bop_5062,uop_5068,bop_5082,call_5094,const_5093,call_5097,])
func_5099 = relay.Function([var_5031,var_5032,], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
mutated_mod['func_5099'] = func_5099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5099_call = mutated_mod.get_global_var('func_5099')
var_5101 = relay.var("var_5101", dtype = "int8", shape = (16, 12, 6))#candidate|5101|(16, 12, 6)|var|int8
var_5102 = relay.var("var_5102", dtype = "int8", shape = (16, 12, 6))#candidate|5102|(16, 12, 6)|var|int8
call_5100 = func_5099_call(var_5101,var_5102,)
output = call_5100
func_5103 = relay.Function([var_5101,var_5102,], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5281 = relay.var("var_5281", dtype = "float32", shape = ())#candidate|5281|()|var|float32
var_5282 = relay.var("var_5282", dtype = "float32", shape = (16, 6, 9))#candidate|5282|(16, 6, 9)|var|float32
bop_5283 = relay.power(var_5281.astype('float32'), var_5282.astype('float32')) # shape=(16, 6, 9)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
const_5289 = relay.const([[-9.112352],[8.496738],[-8.909356],[8.084871],[-0.584607],[5.317934],[-2.460023],[-7.715327],[-0.973546],[4.503575],[8.886111],[0.173039],[2.744417],[-6.066816],[0.569508],[-5.106026],[7.945709],[5.413050],[-0.350577],[7.785741],[-9.899568],[0.614167],[2.914743],[4.231202],[3.723813],[-9.795430],[-2.184021],[5.084843],[-0.938661],[7.148460],[-1.417416],[1.004072],[8.421192]], dtype = "float64")#candidate|5289|(33, 1)|const|float64
var_5290 = relay.var("var_5290", dtype = "bool", shape = (1248,))#candidate|5290|(1248,)|var|bool
const_5291 = relay.const([[-5.394287,4.034531],[6.303509,2.425028],[1.444401,3.900740],[-7.640888,2.447939],[6.938794,-0.703078],[4.749320,-2.648481],[7.138430,-9.697278],[3.087840,7.188451],[-5.237120,5.572807],[-1.959822,4.778118],[-1.667514,7.199305],[2.729873,9.065765],[-8.238570,-4.680307],[-2.775136,-2.518794],[-7.919154,9.724158],[-8.978191,5.958554],[3.803644,-4.240824],[0.810106,5.215738],[-9.992903,-7.989595],[8.227678,-9.539869],[-8.583020,1.125004],[-0.444650,-5.940370],[-2.365384,-6.965343],[-2.491835,-9.747261],[-9.389597,9.123680],[-5.200228,6.274716],[5.284928,9.505930],[-6.246504,-0.612066],[-1.408953,7.254207],[-7.366378,7.391486],[-5.097238,6.346019],[3.252311,-9.678093],[-5.158941,-8.573317],[6.669782,5.302138],[4.151041,7.217517],[7.562624,-7.690730],[-5.021682,-0.847696],[9.564938,3.912476],[6.964050,-3.169217],[-8.521181,-0.994875],[-4.236666,-0.273407],[7.930684,2.556182],[-5.400563,-9.699810],[-0.056520,6.430499],[-2.502682,9.604582],[8.928635,7.556782],[3.245689,7.049307],[6.662572,-9.441091],[-5.468784,8.417959],[8.461692,3.308722],[0.845657,9.238754],[-6.217053,-2.335663],[-6.826016,3.141033],[2.589994,-7.677137],[-1.178615,-3.574345],[7.921515,-5.538331],[9.327530,5.183641],[-4.562444,-7.269005],[-4.794431,2.475856],[-5.247911,-3.621308],[-7.484660,-5.906516],[-3.385956,-7.410459],[6.935390,-1.470002],[-2.912672,-4.190886],[-3.528301,-7.158443],[-8.097101,6.985707],[-0.109157,-3.050863],[-4.011767,3.538880],[-1.590018,-8.351539],[-2.094883,4.186840]], dtype = "float32")#candidate|5291|(70, 2)|const|float32
call_5288 = relay.TupleGetItem(func_962_call(relay.reshape(const_5289.astype('float64'), [1, 11, 3]), relay.reshape(var_5290.astype('bool'), [1248,]), relay.reshape(const_5291.astype('float32'), [140, 1]), ), 4)
call_5292 = relay.TupleGetItem(func_966_call(relay.reshape(const_5289.astype('float64'), [1, 11, 3]), relay.reshape(var_5290.astype('bool'), [1248,]), relay.reshape(const_5291.astype('float32'), [140, 1]), ), 4)
output = relay.Tuple([bop_5283,call_5288,const_5289,var_5290,const_5291,])
output2 = relay.Tuple([bop_5283,call_5292,const_5289,var_5290,const_5291,])
func_5304 = relay.Function([var_5281,var_5282,var_5290,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
var_5305 = relay.var("var_5305", dtype = "float32", shape = ())#candidate|5305|()|var|float32
var_5306 = relay.var("var_5306", dtype = "float32", shape = (16, 6, 9))#candidate|5306|(16, 6, 9)|var|float32
var_5307 = relay.var("var_5307", dtype = "bool", shape = (1248,))#candidate|5307|(1248,)|var|bool
output = func_5304(var_5305,var_5306,var_5307,)
func_5308 = relay.Function([var_5305,var_5306,var_5307,], output)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5363 = relay.var("var_5363", dtype = "int16", shape = ())#candidate|5363|()|var|int16
var_5364 = relay.var("var_5364", dtype = "int16", shape = (2, 13, 9))#candidate|5364|(2, 13, 9)|var|int16
bop_5365 = relay.less_equal(var_5363.astype('bool'), var_5364.astype('bool')) # shape=(2, 13, 9)
func_3533_call = mod.get_global_var('func_3533')
func_3535_call = mutated_mod.get_global_var('func_3535')
const_5382 = relay.const([9.092386,-2.007465,3.017429,4.263680,-9.863066,-4.876610,6.610823,5.787682,-0.346832,3.120232,-1.470034,-6.145191,7.437144,3.131218,-8.923854,6.610086,6.561826,4.050460,2.459361,-7.257454,-5.931269,-5.746426,-2.917336,-2.939562,2.142174,-6.174007,1.938969,4.266599,-8.192228,6.401520,-6.977286,-2.276500,-1.646178,-2.030325,9.189555,7.328347,-2.874956,7.302845,8.779490,6.811690,6.557396,3.142190,-6.500356,2.791356,9.963730,2.498262,-7.517564,6.963553,5.468917,-6.029075,-4.823968,-7.888870,4.590814,2.605835,-0.967961,-6.619953,7.578363,-6.733649,-5.755695,-8.727202,-8.381286,6.784645,6.849857,8.439875,3.143561,8.661176,-8.638013,-4.911466,-2.580035,-2.204867,-3.528703,-7.723519,-8.369217,-7.877622,1.525732,4.215457,-8.882796,-6.908747,0.934913,9.274621,2.503256,4.911899,-8.621301,-6.746923,3.507017,5.932969,6.084961,8.645644,-6.973521,-3.866699,-1.899451,4.580841,3.398231,3.088704,-1.863826,3.020841,0.429331,7.580963,-1.864717,-9.744564,-7.115495,6.860167,-0.922428,-1.367265,-3.217725,-5.549317,-7.398952,-7.432335,0.366603,-5.566821,-3.969647,5.734570,-6.062709,6.029999,-8.942705,3.607467,-9.006358,-6.750744,1.525680,1.433826,-8.513353,6.297435,-3.084238,-8.031436,9.060658,7.280740,-8.923665,4.779646,7.593271,9.713097,4.264979,-1.060824,5.702205,-8.395885,4.953332,1.060030,3.193238,-2.009732,-3.234551,5.322599,-7.684508,3.223013,6.367101,8.088235,6.473410,6.599008,9.938907,-1.553862,-7.852580,-8.377064,5.605332,7.356381,-2.557767,-9.571267,-0.047157,-4.842394,-0.313869,4.468754,-9.633101,-8.816024,1.918963,-6.869288,3.567820,-6.845352,8.725993,-2.247044,-8.592268,3.845172,4.760532,5.499036,8.556531,-9.946217,6.024020,-1.095712,1.041410,2.111875,-5.455241,1.121710,2.294855,1.609008,-7.647621,7.481478,-3.967780,8.814046,-1.790238,9.474029,-2.693711,9.244210,-1.505827,-3.327001,-4.424462,-9.332078,7.108499,-8.818873,2.187621,-6.425123,2.958689,-7.010626,-9.052976,-5.577296,-4.237321,4.186785,3.895496,-0.327864,-5.461998,0.313711,6.281343,5.595726,-9.349160,4.772499,7.813091,1.892390,3.926898,-2.688388,-4.174146,-9.168513,7.867109,3.669284,-4.117687,-7.049541,-0.563853,0.169810,4.692224,5.855452,-8.595138,-3.356836,-7.215949,4.182192,4.938646,8.601136,-2.601004,5.335817,7.170850,-0.249348,-4.559234,-0.312124,7.780308,-2.388211,-4.728361,-5.461590,-1.122495,2.048204,-6.578218,-2.617759,-5.110661,7.715380,7.234933,-9.484174,-4.636285,-6.246785,3.956828,4.754148,-9.732578,-9.278882,5.452909,-2.400742,1.227720,-8.247799,-8.240841,5.077777,0.213286,6.393309,4.795119,4.848305,-9.514938,4.210560,3.516760,-3.933438,-8.505105,-4.399890,1.287685,-8.980954,-9.532872,2.860855,1.082395,-7.985816,2.158875,-8.148356,9.087189,-1.816310,7.529258,-5.284240,3.228396,4.236815,1.915245,2.794579,-0.752380,2.393872,6.832209,6.332192,8.256078,5.124515,2.982421,-0.393516,3.293822,-6.898425,-2.275519,8.387191,-4.700370,2.803731,4.184737,-4.036314,-3.019997,-0.378972,-1.181918,3.228999,5.213830,4.721770,-9.614630,-9.967206,-5.284324,-9.423703,3.440558,-4.086945,-0.102474,8.264906,0.301057,1.098159,8.489839,8.079235,4.972625,3.046075,7.296966,7.630269,-5.069658,2.239671,9.380342,9.414621,-1.179193,-0.641567,-8.492606,-1.607721,5.578219,4.574301,8.381699,2.491189,1.456861,-9.217446,0.485805,-3.947623,6.001342,-0.755815,-6.366614,4.939667,-0.754077,5.354383,1.858777,-5.373366,-7.350625,6.742842,-2.208441,-1.948955,4.619405,-1.263694,3.194699,9.688687,-4.797359,2.996279,3.900746,4.264561,-0.974463,-0.053900,-4.611720,-3.601996,4.667015,8.119837,-6.393143,9.877356,-0.898726,-6.160293,4.245024,-1.796012,-2.698930,-0.140684,-0.009015,6.737555,-7.540136,-1.033945,-4.238197,9.827624,-1.476833,9.607065,2.656939,-5.164035,-1.766537,1.074794,-8.090698,6.493989,9.639828,0.013886,-7.894290,-3.957644,-0.009829,6.146071,5.282758,-4.056011,1.588143,8.188690,9.100788,-0.998205,-7.252382,4.148532,9.485642,8.250458,-6.207922,-5.642813,3.242437,8.195894,0.312976,-5.802764,-0.614066,-8.031762,-8.450947,-2.491351,-2.572698,5.379776,-7.939548,2.999789,-9.009088,-5.743048,8.032923,9.586074,3.097011,8.363136,6.596413,0.021473,-8.211697,-9.019680,8.133083,-3.771782,2.729481,5.816105,-7.311675,-2.826892,8.773371,5.276757,0.848815,-3.369078,-4.435498,-6.997768,9.637629,2.853551,5.450655,2.894856,-9.895122,-8.215687,6.027540,4.596865,4.818325,-1.459578,-9.086548,2.546826,-0.035583,-2.623792,1.596878,1.475293,-0.811344,0.053741,-7.397927,4.984022,-0.211806,-5.338770,6.949999,-7.989774,4.947029,2.767300,-2.464734,-6.107932,-0.687853,7.571471,6.584208,8.283341,6.382060,9.567615,9.033320,-1.435710,0.873709,5.139056,-9.917166,3.808773,2.460372,3.409102,4.803240,-9.854245,-8.621659,-9.800090,-2.130031,-4.800418,-5.803329,1.109298,-9.577187,0.047049,8.164404,-7.862437,-3.199692,9.079465,-1.028805,-4.811292,-3.900416,-1.675519,-2.138964,-6.124778,-3.744610,9.322364,2.694113,-0.877798,-1.802342,4.034550,-0.653365,-9.738419,5.789692,-9.174083,-8.340413,6.812416,-9.447654,-1.099653,-3.912530,7.891587,6.584088,9.532250,-4.923040,-3.765632,-7.780404,-8.587336,4.569466,9.008471,-3.105295,-0.722064,-0.776785,-5.949262,2.478636,-1.745300,8.346038,-0.223765,-8.617049,0.121452,3.051016,6.113426,7.463249,4.768591,-0.888930,9.849675,-3.911473,-5.683709,-5.624035,7.045078,8.606131,0.444118,-3.323524,8.326905,-1.092455,0.565371,-4.843789,5.002193,-3.444617,-8.732113,5.140660,3.913405,5.403202,3.312370,-2.263241,-7.021830,-4.913236,0.993738,6.315033,6.251366,3.242866,-8.108876,3.678341,-9.779691,-0.645441,2.649584,-1.151533,4.852195,-2.789735,0.751172,-8.448260,-9.350912,-3.342487,2.159504,-2.001271,4.203168,0.649679,1.734460,3.194699,-2.011858,-4.389335,4.036717,-1.878769,-7.031001,3.852531,-3.772621,9.669697,-7.294089,-8.045441,-1.414460,-3.336433,-9.473588,1.154352,2.690498,7.711595,-1.576918,9.490340,4.384036,-8.796615,-9.581871,2.024688,4.380604,5.083047,-6.259422,3.909713,-4.322465,-4.426022,5.739850,-1.749142,-5.853803,-3.732322,7.219551,6.123651,-4.505900,-8.116031,2.847267,2.227645,9.819411,6.243719,-3.235917,-5.992676,-3.620933,1.683179,-6.855577,-5.516136,-2.586246,9.908836,-2.035992,-3.622789,-4.837984,9.514580,-5.583458,5.107368,6.362986], dtype = "float64")#candidate|5382|(640,)|const|float64
call_5381 = relay.TupleGetItem(func_3533_call(relay.reshape(const_5382.astype('float64'), [10, 4, 16])), 0)
call_5383 = relay.TupleGetItem(func_3535_call(relay.reshape(const_5382.astype('float64'), [10, 4, 16])), 0)
output = relay.Tuple([bop_5365,call_5381,const_5382,])
output2 = relay.Tuple([bop_5365,call_5383,const_5382,])
func_5387 = relay.Function([var_5363,var_5364,], output)
mod['func_5387'] = func_5387
mod = relay.transform.InferType()(mod)
var_5388 = relay.var("var_5388", dtype = "int16", shape = ())#candidate|5388|()|var|int16
var_5389 = relay.var("var_5389", dtype = "int16", shape = (2, 13, 9))#candidate|5389|(2, 13, 9)|var|int16
output = func_5387(var_5388,var_5389,)
func_5390 = relay.Function([var_5388,var_5389,], output)
mutated_mod['func_5390'] = func_5390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5516 = relay.var("var_5516", dtype = "float64", shape = (16, 5, 16))#candidate|5516|(16, 5, 16)|var|float64
uop_5517 = relay.sin(var_5516.astype('float64')) # shape=(16, 5, 16)
output = uop_5517
output2 = uop_5517
func_5519 = relay.Function([var_5516,], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5520 = relay.var("var_5520", dtype = "float64", shape = (16, 5, 16))#candidate|5520|(16, 5, 16)|var|float64
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5521 = func_5519_call(var_5520)
output = call_5521
func_5522 = relay.Function([var_5520], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5816 = relay.var("var_5816", dtype = "float32", shape = (1, 14, 10))#candidate|5816|(1, 14, 10)|var|float32
uop_5817 = relay.log(var_5816.astype('float32')) # shape=(1, 14, 10)
func_5304_call = mod.get_global_var('func_5304')
func_5308_call = mutated_mod.get_global_var('func_5308')
var_5825 = relay.var("var_5825", dtype = "float32", shape = ())#candidate|5825|()|var|float32
const_5826 = relay.const([[-7.007116,4.305394,-2.794054,-9.292916,-8.600267,1.223204,-9.185472,-5.856409,1.135458,2.039722,2.939505,3.419030,9.289156,9.221669,5.251973,5.747135,-2.696660,9.374110,-9.841669,7.679338,-7.773042,-6.735978,-1.300117,-8.356384,4.692642,-7.844788,-7.637934,-0.367526,3.079719,-2.298469,2.688421,-2.412549,-6.665495,-8.733300,7.034465,6.127404,7.700161,2.996271,0.989791,6.990849,3.759458,8.908432,8.331833,7.062600,5.225981,-8.193660,6.555107,-9.445237,-5.960298,-1.337386,2.155977,-8.248115,9.474236,-8.849723,4.555130,8.218508,-2.846186,-7.918141,-6.834275,-1.840399,1.116011,-5.156592,5.740978,5.056172,5.742397,6.651114,2.367103,0.681249,1.980249,4.227778,-5.009650,5.726674],[-0.197767,-2.119583,2.486169,-7.183990,0.254221,6.199215,-5.971998,6.732007,-7.904318,-7.561815,-6.598056,-4.817200,0.289545,-2.202083,-9.832307,-3.209407,1.562066,1.228648,7.149007,-2.173297,-3.631501,8.897500,-3.190750,0.031687,-4.254468,-3.389568,3.725007,-6.527439,3.334470,-3.739355,0.264369,-7.523140,-3.473832,9.461203,4.183589,-6.347899,-2.029687,-7.805502,-4.586448,6.516524,1.501581,9.290503,6.792096,-0.185322,-4.658795,-8.522785,0.160981,1.776000,3.439489,-9.955728,-3.467666,-4.117590,-3.040628,0.533061,-5.259906,6.101367,-7.704471,3.576971,6.115694,-4.941423,-8.947192,6.088882,1.757272,2.376473,4.866332,-3.782159,8.679630,-0.154363,5.130395,-4.130977,6.602457,-6.811510],[5.234553,4.495938,2.603624,-0.860295,-8.118862,3.783500,-2.031655,-4.343386,-2.244113,1.567523,-0.435608,-3.227463,1.207530,5.345128,-6.447112,0.256237,1.503598,-7.529333,-8.600725,6.390952,-1.164543,8.545144,8.851962,1.691044,-4.741050,2.233318,-8.726283,-2.879445,4.037761,-3.146674,0.945202,5.680283,-3.100491,5.943161,-4.598713,-8.073118,-1.234274,-9.137737,0.479218,6.405468,-4.956933,-7.586322,-7.995493,4.611493,4.033804,-6.438611,0.778476,6.892582,0.785088,-8.386474,3.670785,6.339869,-7.496759,-2.972943,9.987722,9.086584,-7.836842,-5.235271,5.879995,-5.369561,-6.719963,2.168782,-6.236061,8.542468,-2.520642,-1.072965,-5.586237,9.859562,1.669547,5.320295,3.429206,-3.255383],[-9.274661,0.689415,-2.928834,-7.348062,-5.546296,-5.574312,9.227556,-5.335386,-7.361461,6.056892,-5.623345,0.699291,-2.747072,-6.997883,-4.540853,-4.057556,-2.519659,-7.798765,1.427756,3.941802,-1.314393,3.023851,2.144802,8.535119,-3.242125,3.055116,0.345066,-1.096115,3.225505,-2.102987,1.514921,-4.014254,-8.802429,8.082189,-8.617161,9.929595,-0.993745,-7.784446,-7.890005,9.781978,-3.206303,-0.687584,-7.650768,-5.499862,4.246895,7.459220,8.018126,-9.409757,-2.652796,1.314280,-1.660604,3.095262,6.719840,3.025161,-5.585509,-3.845131,7.000148,-0.164794,9.896014,9.289069,2.441428,-6.353518,-0.955869,-5.752716,-2.793935,7.878712,-5.943892,2.218024,-2.056494,-7.473211,-7.816173,-9.976136],[9.509073,7.237748,9.200907,9.829538,9.918448,7.206760,1.143916,-8.148931,8.108274,-7.202903,-1.319208,-8.341422,-0.926889,6.126345,0.865763,-3.040934,4.458804,-6.438298,-2.990201,0.542689,2.575992,-4.520984,8.991596,-5.695074,-5.468199,-2.692792,-8.884457,-7.698786,4.794285,7.379687,8.789558,2.362009,0.227476,4.454859,-6.613413,5.670814,6.069124,-4.075068,-4.306212,1.940187,0.795401,-9.476830,-8.928968,8.461651,-9.076446,0.795937,-6.298714,-4.838317,-6.718310,-0.845537,4.842689,-8.856035,0.915462,3.205337,0.709089,-4.260109,-3.873975,-6.059021,5.302588,3.024445,2.113292,5.725414,9.164386,0.615101,6.470799,-2.364833,-5.246565,6.242441,2.344880,4.048623,-2.894882,-4.913240],[-9.086841,9.439496,-8.221293,-2.016421,7.299642,7.010068,0.524091,-5.599887,-5.919679,3.105244,0.900044,-8.566112,3.953693,3.728573,-4.736926,3.463617,8.773423,-3.718080,3.619870,9.739105,5.869928,6.853960,9.686505,5.058046,7.479623,-2.042630,-5.450436,5.570868,8.250274,8.010439,-7.485586,-1.239422,9.237235,6.444163,0.475109,-9.603601,-3.152033,-3.039125,1.112537,9.392709,-0.373296,-0.760390,9.703801,6.657891,-2.933486,-7.681105,0.056897,-2.528066,8.041945,7.287946,-0.415526,5.964552,3.089667,3.842547,-0.275883,0.840084,-0.749318,2.156565,-1.274562,-6.282692,2.990607,4.845058,-8.979472,2.607316,-7.373670,-7.542273,-0.819140,8.621247,5.472045,5.961653,7.603125,9.447843],[-5.666482,3.406489,3.573766,9.861383,-9.339889,6.874155,0.922261,5.546373,0.550052,-4.346203,2.013627,6.577860,-4.987315,-5.407410,-0.133709,-0.869254,-3.586773,7.856768,4.635529,-4.702206,7.405258,-3.615801,7.919354,-7.572401,-8.153144,-0.532359,-7.776401,-2.953151,-3.606170,6.690598,-6.459164,2.301380,7.623593,-2.513701,-5.310584,9.628034,-9.818686,-2.827091,8.778945,-3.669600,9.675457,1.550491,2.510178,2.589107,2.879076,-0.827070,-1.181474,-1.268554,-4.779158,-8.762933,-9.640127,-9.221044,-9.973569,-9.904164,-6.146560,8.145848,7.067231,9.096734,-4.010181,8.147662,0.122678,-4.500856,4.310291,-8.601434,5.182001,-8.707404,-0.211870,7.034733,8.073408,-0.102010,-7.548050,-7.405269],[-0.608528,-1.901154,-2.568273,-9.863179,3.843700,4.930492,-3.127854,-2.500899,-8.115084,5.259747,-6.415458,5.423253,-8.787834,9.345723,0.657934,-4.171180,8.589039,1.429803,-6.054602,-1.493381,-6.114433,2.370475,5.039571,-9.981041,-8.439331,-3.095155,-9.622608,0.518054,0.871476,-0.948956,-8.257068,-4.674576,2.461489,4.288467,-6.434812,-2.082102,7.883881,2.979290,4.260743,-1.541083,5.756446,-5.344987,1.217735,-1.466823,-9.793801,9.227509,3.308624,0.179688,2.417502,8.360209,-1.693600,-1.746499,5.806491,-2.246549,-8.194475,-1.924263,2.697128,8.868930,-7.364585,3.512617,-3.088652,3.006243,-5.869322,1.238779,8.629897,7.132724,-7.164953,6.398860,3.621250,-7.826983,7.501214,6.822344],[-3.146662,3.316959,-7.356014,6.081445,7.872541,3.992373,2.783523,-9.129302,8.336165,-3.907684,9.270783,6.070466,2.191544,-6.280634,-6.681624,6.634760,9.859890,-7.531656,6.699742,-6.310461,-1.507374,5.065505,-5.181021,1.369874,3.130212,2.377457,9.080415,-7.829779,5.170723,1.666791,-9.356691,-4.963546,5.970741,-6.290657,-5.275832,-6.925371,-6.030754,9.521562,3.730915,-4.302138,-9.405944,0.702733,-2.911932,5.481498,8.232793,6.919509,6.481302,4.343869,-8.920415,-5.013736,-1.251780,-5.053983,-1.460142,-2.029396,-5.379660,-0.652770,-2.546917,-5.854813,9.071406,-0.220255,0.253768,3.838562,2.286700,7.151182,-2.896735,7.624781,-3.218900,4.826394,3.013838,-3.060178,-8.915432,-4.238245],[2.967307,3.487810,-8.212188,2.752821,6.826627,6.467253,6.496717,3.066505,-5.625164,-4.161941,-1.465833,1.837652,5.310332,4.121884,-8.978241,8.997593,-0.984447,0.502133,-6.102246,-1.339217,4.529694,5.670160,9.936985,-7.158420,6.027612,-2.161554,-2.188791,4.539710,-8.727959,0.554231,-8.003745,-0.128429,1.894661,-7.817210,-3.462947,8.195606,-3.331780,-5.601237,7.943617,0.407046,2.433455,-0.491393,1.741087,-1.291820,-7.601228,-1.155584,-1.834170,-3.143134,-8.084020,8.233868,2.359044,-3.001257,4.869539,7.196534,3.644536,5.741871,4.328054,-9.321234,5.273265,-9.518611,-1.487489,3.582754,4.073790,-0.363510,-5.787031,-1.140505,7.834199,8.271504,9.258344,7.911432,6.908789,4.689928],[7.150340,1.258644,-7.562271,-0.376264,-5.242567,3.962290,1.785200,-2.051228,-0.275546,-1.448858,9.201629,-8.556831,-0.592299,-8.556356,8.238078,-6.902960,9.108299,6.791435,9.087588,2.506824,7.222391,0.379878,-8.172354,-9.720757,-0.401816,-0.747555,-5.403635,-7.825529,2.908047,-6.430626,8.591388,4.779582,-8.151334,-4.218203,-3.439591,-5.736339,0.172060,7.007648,9.103378,-2.242976,-8.927501,9.279855,1.760050,6.272145,-6.249283,8.454941,0.407823,9.835531,-3.709679,2.906195,1.661332,-3.486850,-2.799368,-8.879729,-2.358585,1.636528,-5.691922,2.866464,9.108981,-0.300509,4.342067,3.069156,-5.034172,-0.811488,-9.716894,0.738941,4.373537,-2.491799,1.929087,9.236444,8.167903,-8.698829],[-0.441359,-0.041482,1.636578,6.086877,-3.738624,8.318500,0.768531,0.685108,9.883910,8.316214,4.815193,-3.559430,5.207318,-2.068935,8.693349,-5.123187,-0.973617,7.824528,2.246417,-8.089396,8.050055,-2.446969,-7.162579,-0.978857,-4.666496,-3.957819,-0.420379,6.392300,2.529043,-0.439446,-0.590240,-9.294633,2.533105,-1.158678,-6.879768,7.224827,-8.650022,8.399815,2.866119,5.243855,2.433780,5.037554,-2.748593,5.984366,-0.474672,-6.357114,-2.300224,-7.829113,-9.654442,-2.299070,9.073396,-9.829105,8.236982,-5.909620,-9.350057,4.197820,-2.799119,0.240950,6.393458,-7.640074,-4.164934,-1.317699,8.347242,3.272600,-9.138368,-3.772275,9.285995,0.591815,-2.656966,0.934186,2.491326,1.952072]], dtype = "float32")#candidate|5826|(12, 72)|const|float32
var_5827 = relay.var("var_5827", dtype = "bool", shape = (1248,))#candidate|5827|(1248,)|var|bool
call_5824 = relay.TupleGetItem(func_5304_call(relay.reshape(var_5825.astype('float32'), []), relay.reshape(const_5826.astype('float32'), [16, 6, 9]), relay.reshape(var_5827.astype('bool'), [1248,]), ), 1)
call_5828 = relay.TupleGetItem(func_5308_call(relay.reshape(var_5825.astype('float32'), []), relay.reshape(const_5826.astype('float32'), [16, 6, 9]), relay.reshape(var_5827.astype('bool'), [1248,]), ), 1)
output = relay.Tuple([uop_5817,call_5824,var_5825,const_5826,var_5827,])
output2 = relay.Tuple([uop_5817,call_5828,var_5825,const_5826,var_5827,])
func_5829 = relay.Function([var_5816,var_5825,var_5827,], output)
mod['func_5829'] = func_5829
mod = relay.transform.InferType()(mod)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mutated_mod.get_global_var('func_5829')
var_5831 = relay.var("var_5831", dtype = "float32", shape = (1, 14, 10))#candidate|5831|(1, 14, 10)|var|float32
var_5832 = relay.var("var_5832", dtype = "float32", shape = ())#candidate|5832|()|var|float32
var_5833 = relay.var("var_5833", dtype = "bool", shape = (1248,))#candidate|5833|(1248,)|var|bool
call_5830 = func_5829_call(var_5831,var_5832,var_5833,)
output = call_5830
func_5834 = relay.Function([var_5831,var_5832,var_5833,], output)
mutated_mod['func_5834'] = func_5834
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6155 = relay.const([[[-0.945964,-8.114624,2.948615,1.564632,-8.424087,4.049221,3.280407,3.287360,0.935831,7.853483,7.268075,-1.987013,4.074643,-6.386708],[4.591476,3.489591,-2.534347,9.203880,9.536647,-7.410021,-6.845379,5.422503,-7.566021,-9.671304,6.102532,4.396746,-0.471682,-7.241809],[2.366151,9.389732,-9.281685,-3.547558,6.451102,5.111366,-4.573447,-5.930915,4.457598,-4.779426,-0.601508,2.570944,-5.637006,2.776760],[-6.103867,-4.827732,-1.952113,3.928471,9.391566,-4.172411,2.878473,4.332695,1.574404,-3.177168,-7.725956,-8.882354,7.006425,-7.685216],[6.805933,-8.892412,1.926676,1.358043,9.174029,3.394945,-1.447750,7.062085,6.656861,-8.766558,-0.259147,8.549595,3.719834,-1.882328],[2.654456,9.531871,-9.844317,9.413549,-2.336064,5.592627,5.046274,-2.575208,-5.257182,5.413592,2.201811,-8.523366,-1.917228,-7.475700]],[[-1.085772,-1.166645,7.044482,-4.111220,-3.633823,3.074578,-5.077317,-8.605190,7.192561,3.366084,-5.446943,8.123827,-1.409102,7.786078],[8.543910,3.661625,-1.218821,-5.728817,9.003553,6.512033,-3.524440,-3.389075,-8.847981,-1.785727,-4.064909,2.044651,-8.562472,-3.600377],[3.381188,9.356159,3.760848,-4.465365,-7.748584,0.696151,0.435110,0.885153,4.743860,-8.273555,-1.312556,-7.352381,-8.880312,1.467771],[-7.049586,-3.739887,-9.271012,5.547593,-4.289682,0.985307,-3.934855,-5.908218,-9.521997,5.649627,4.315902,6.913915,-2.753002,-8.601702],[6.828964,3.959775,9.060832,5.197952,2.146924,2.253248,-1.802420,-4.723771,6.207113,-4.582444,3.423765,-8.082692,5.720599,-6.199974],[0.296601,7.852678,1.209946,-6.798234,-3.260405,-8.910997,-3.391502,5.549882,-6.281455,3.972759,-9.674906,1.856625,3.822995,-5.076050]],[[2.053792,-5.815908,-7.517748,-1.311117,-8.443637,-1.287944,-8.810996,-5.086041,6.667681,-2.411468,-0.078631,9.924934,9.146181,-8.953386],[-1.076857,-9.512767,4.260721,-3.447767,-6.587005,3.690568,-6.733574,2.568281,-3.957479,0.096086,5.600655,-9.857123,-2.619284,-2.919491],[-7.394781,-6.941795,7.731169,5.507359,-3.870085,-5.559555,-3.797836,2.934861,-1.182530,1.410192,5.725749,-5.564476,-1.131589,-5.621791],[-4.101823,8.296149,5.737050,-8.004720,-9.544515,6.101293,0.240854,7.645315,-0.519722,-5.214269,4.506911,6.604114,2.556771,4.875332],[-9.377758,-7.490163,-4.727770,-3.025794,4.393530,-3.189797,-7.421727,-2.493065,-7.412179,3.671011,7.169131,2.830843,4.112686,2.913104],[-6.485965,6.644769,-9.211328,8.286083,4.466494,-2.121417,-9.928828,-0.898994,-5.900069,8.833607,-2.416507,2.083612,-8.414316,-8.769863]],[[-8.958728,-7.994841,-0.997316,5.185165,4.286696,0.954671,-0.307231,-8.359149,-0.747284,9.886269,7.393538,6.722068,7.616053,8.739304],[4.599667,-6.725436,9.917055,-2.683410,-0.011983,-4.811879,8.863641,-8.186701,9.106582,-7.611089,6.501013,9.104121,-8.140012,-5.607291],[1.756420,-3.876308,1.726078,-2.735964,4.951995,-7.275137,6.324933,-2.708140,-0.522659,-3.036339,0.071781,8.181939,4.748793,0.772261],[-4.004733,1.740400,-7.112385,-5.478037,-4.809767,-8.051095,-1.589140,7.035016,-8.840724,-2.992426,-9.827216,-5.235487,6.061535,-3.857567],[-3.030554,4.459521,4.845362,9.689263,-6.394757,2.824737,-8.506998,-5.795469,-8.203303,-0.784759,1.476251,0.263150,-1.351761,0.894325],[-8.867335,-7.035698,-8.210530,8.989702,-6.950101,3.995812,-0.442771,-3.057997,-6.967585,0.907887,-1.507245,8.995994,-6.605383,-9.635220]],[[6.313361,0.916949,9.521360,-4.437671,0.984913,-4.754884,-4.372063,-5.979285,-4.351625,-7.659917,3.344032,-8.108068,9.884622,-0.936665],[-8.150072,-7.785911,-7.335081,1.159651,6.308984,5.318747,0.556642,4.007160,0.353219,3.568053,-9.048497,5.657959,8.394333,6.403465],[1.526084,0.291959,-7.733182,4.605308,9.039024,0.570575,9.380979,4.812862,-5.251363,-4.772401,-0.039773,0.894528,7.678854,-4.975407],[-2.002905,-9.194582,6.727704,-0.540743,4.566972,1.450049,-8.227520,-3.816505,0.219717,2.986091,-1.760728,-3.178887,2.859217,6.227528],[-9.544046,2.207817,5.500300,-0.608210,8.208362,4.206304,1.323472,0.960701,1.835471,1.764536,4.613883,-3.901967,-1.506596,-4.211579],[-2.802253,9.548863,-6.675257,-1.344871,-6.461066,-2.166588,6.032517,-4.011058,-2.613137,-2.179835,3.032596,8.516411,-3.449092,-3.170765]],[[-3.878735,-4.905834,-9.596135,4.866692,0.995713,3.948578,-4.324884,8.203456,3.280409,-7.217538,-8.998738,4.311025,-4.141521,-0.496186],[-9.805908,-1.049797,-7.777875,3.836816,-8.151686,0.355737,-3.889020,5.279500,-4.116966,-8.212029,-9.307325,-3.015136,-9.625024,4.788614],[-5.983127,3.659736,-6.059964,3.593481,0.131684,-6.282109,8.776607,3.987852,-6.950730,-3.352477,2.231876,-3.594662,-8.400517,-1.497337],[-3.933402,2.588887,-2.099647,0.336674,-6.287033,3.053316,0.209713,6.292575,4.203602,7.194016,8.579795,-3.951171,-3.545793,0.590735],[0.173290,1.342229,2.796771,-3.475539,-2.946667,-3.977462,-5.265904,-9.664075,1.635492,-6.964745,-0.247220,-3.706315,-5.047641,-1.672887],[1.853597,7.303892,-5.346263,-8.894408,1.272728,0.097019,-2.969767,7.083040,2.591648,4.865193,6.540423,8.550606,0.781993,-3.528111]],[[-5.338301,-2.527683,-5.917798,4.846067,2.802146,-4.188573,-2.452413,-4.071014,8.494967,-5.457833,0.573778,-4.808048,3.733148,-3.673305],[0.407933,-4.031517,7.725435,-4.672954,-2.421503,-6.959142,0.501338,1.676266,-5.128559,5.199868,7.569593,-2.150682,6.855037,9.460669],[-0.027588,1.319775,-0.583867,-3.076604,-3.942487,3.747362,-3.474723,-5.799349,-2.403027,8.257953,0.117436,3.573213,-4.644231,4.082162],[-1.899872,6.458504,-9.937965,-0.181218,-5.561783,3.287617,3.565049,-0.196479,-7.600523,-8.682861,-3.855535,-7.942889,-3.619057,-3.042559],[2.267798,-7.068618,-5.436260,4.578367,-3.804326,-6.553766,-6.679434,9.654660,-9.774330,7.149911,0.065338,-2.568939,4.485928,7.383954],[-3.923244,2.445780,-7.877655,2.450375,9.280650,8.870959,-2.241306,-0.481084,0.737523,2.434436,3.994077,3.249925,-6.186000,-4.252967]],[[-8.192827,3.044185,5.440548,-7.225177,-0.036857,4.555700,-9.530453,1.789615,-5.368170,5.765286,0.988535,8.996676,9.071990,4.795866],[-6.642604,-8.677049,-1.591706,8.733168,-9.043099,1.881321,7.082335,-6.900360,0.950083,7.173082,5.943845,-4.722980,3.449859,-4.885277],[-0.086058,-9.886204,1.928758,1.216327,-6.101765,-4.231987,-2.667153,5.268819,-6.355748,-4.786316,8.215850,9.849375,-6.765628,5.568859],[4.003244,5.968138,-4.375442,9.550443,-5.144500,1.242369,4.025604,9.334002,4.310777,-2.107399,-7.846208,8.540429,-7.913105,-2.767221],[-6.114217,-8.821228,9.201934,2.985169,6.100745,-5.574390,1.433103,-8.724630,6.397911,6.489515,-9.784551,-8.245384,-2.091426,-7.744582],[-8.169919,7.365092,-4.570055,-4.665674,5.401624,8.507621,-0.076962,-2.005551,0.651586,4.911114,-8.560208,1.148184,-8.729187,1.668051]],[[-5.019985,7.897745,0.347247,2.137697,-3.666577,7.866928,-6.425183,-1.176465,-4.918111,-3.106687,8.951857,-7.824310,-8.297768,-0.190717],[9.888358,6.417060,8.542713,-1.417281,-6.910269,-4.523816,-0.707550,-6.481177,6.573084,0.700657,-3.955418,4.671674,6.681386,8.255648],[-8.165833,-5.030122,-6.341595,1.736988,-8.107498,-4.654395,5.556045,3.200209,-9.210140,-4.392956,-6.702990,-9.498650,-7.987022,-0.369926],[7.332118,3.266659,1.729657,-0.602310,-2.644155,3.185158,1.984525,2.617254,7.709231,-5.299167,-1.787084,6.254068,9.365686,0.620924],[2.414545,9.041299,-6.912444,-5.226332,0.914377,0.534305,-3.213259,-2.454921,-8.547820,9.058971,3.483231,4.925286,-1.523579,-8.968578],[-3.965328,7.164375,-6.465728,3.979530,-6.787666,-8.741656,-5.002654,1.990587,7.968303,-1.024632,0.916179,7.763966,-7.316800,-2.269199]],[[6.744719,-1.808690,5.320002,3.173071,-1.535744,-3.613964,9.308934,-1.139200,-8.362659,-2.227627,-0.992921,1.481389,-3.438558,-9.401668],[3.979949,-8.033202,3.480136,0.483260,-0.401872,-2.484390,2.542219,7.714301,-9.130711,-9.597903,3.997844,-4.009030,1.493418,9.169826],[-0.343249,-5.768130,4.197739,-6.689271,8.707394,7.445342,-8.208298,8.024133,-0.976044,-8.347072,-9.068590,9.643823,-0.507616,4.664876],[8.263881,1.791567,-9.874370,9.672259,-2.464078,2.087466,3.635352,-5.590187,-1.940215,7.068610,-7.497857,0.935245,-0.148094,9.239510],[-3.916824,4.289449,9.078580,6.997966,-7.912370,0.298575,-0.104458,9.465367,5.017890,-4.290577,2.013170,-7.683060,2.171764,-8.878626],[-8.947344,-2.986180,2.740807,-6.441535,9.139811,-4.663028,6.871488,-3.713925,-2.563575,7.220197,5.134882,-9.277336,-2.358791,7.226041]],[[-3.756061,5.567482,5.715865,-3.539534,7.180426,9.629726,-6.218350,1.822028,-4.254957,-5.263569,0.533692,-4.402016,5.174131,6.965533],[-7.773353,6.020952,-9.351484,4.501000,5.150744,-5.150914,4.217955,7.424824,-9.986522,5.114921,-0.260988,9.228003,5.446394,6.461706],[-3.363639,-5.559804,8.558713,-2.406786,8.481019,9.369653,8.833253,4.737633,7.761039,-2.007995,5.367666,-5.109606,9.203033,5.073028],[-4.656866,7.720769,6.016646,1.730966,-4.084708,9.272055,4.400216,-9.605348,-0.817351,5.282211,-1.569820,5.156901,7.095367,2.848778],[-2.188008,-3.389277,5.278905,4.950391,2.404360,6.889928,-6.448174,2.514660,3.706566,-7.135078,-3.618695,-4.887038,-0.566192,-7.884600],[9.155925,-1.081976,6.611915,-9.269214,2.690556,6.123567,-9.183766,-1.494674,1.547015,0.148595,5.945226,8.243567,3.747461,-4.006783]],[[8.280154,-6.492523,-6.571209,-4.668007,8.115492,2.209445,4.752407,6.868545,7.702670,-4.021796,-2.209359,-7.594603,-4.475444,5.219707],[2.363616,3.204507,-8.633393,6.982860,-9.021447,-4.544716,3.722412,-5.805613,1.656075,-4.430050,1.909643,7.358071,-0.747116,6.386170],[8.312421,4.182859,-9.627686,-5.737992,-1.239887,-5.320841,9.095317,-7.011778,-0.170379,6.907643,-7.509466,-0.422943,1.644417,1.167889],[2.509896,-5.937919,5.764563,8.385318,-6.273061,3.815509,-6.292234,6.171933,-3.420351,-8.959627,9.686419,-7.588973,5.540613,5.854200],[0.126619,1.274444,-3.727907,3.734194,4.250820,6.069336,-2.216503,-0.247055,-9.639959,7.518158,8.637009,6.236634,3.561216,-6.515217],[2.753546,1.219025,1.634373,2.139897,-6.491490,2.937077,-5.584239,9.796713,1.474176,3.856010,-0.682751,2.961288,-0.286567,-1.072695]],[[-2.332764,-2.153039,-6.050442,-6.536108,-9.009576,0.591104,3.769144,-8.352287,-3.539313,-1.160392,7.980063,5.710878,-4.163086,4.255501],[-7.759404,9.830798,0.098608,-1.665743,6.901134,6.939297,-1.917473,4.361775,3.387509,7.696265,7.232064,-6.720341,7.118135,-3.812514],[-0.268396,-0.303841,6.456569,3.109779,-1.025331,8.377230,2.617971,3.152726,2.202863,6.484298,1.605169,-3.980216,-5.071833,9.026144],[0.437769,-4.322549,-0.042796,-6.573218,-4.771375,-5.050742,1.649693,-7.586802,-1.845103,-7.436023,-4.400408,-6.904413,2.211792,3.835014],[0.774620,4.736716,-3.635484,-3.477903,2.606150,2.891731,2.260420,-5.878250,5.632965,9.302756,-7.122506,0.261147,3.911257,-4.845056],[8.319916,-0.877723,1.753598,7.255765,9.489901,-6.144447,-0.564492,-2.410854,1.980166,-5.256072,-7.172110,-7.685319,2.180414,6.320733]],[[3.421218,0.906913,8.377542,-0.809311,-0.767043,0.114894,8.235953,-2.840385,1.048000,1.594839,5.068984,0.654318,4.380312,-7.369627],[2.474802,3.193016,-7.925099,3.081657,1.252104,-8.632912,3.849174,6.951200,6.145567,-4.807224,8.941044,5.075834,7.715266,-7.762256],[-2.473928,-9.069690,-5.259562,-6.477806,-9.886761,2.251185,1.954634,5.006179,0.835686,-5.792243,-7.627113,6.075537,-9.262715,-3.365889],[1.453573,9.522481,-2.684533,3.207421,9.656916,4.931994,-4.886652,1.994650,-6.019732,-3.546603,-2.851673,-1.589845,-7.065024,-6.012784],[-8.790794,-0.014413,2.702985,8.853703,4.580334,-4.724183,-6.573548,6.809945,-1.404702,8.724336,5.169337,-3.565156,-7.783766,5.478262],[-2.654980,1.921827,-4.629906,-0.708915,6.060554,8.323998,9.956747,-8.529022,6.822265,-6.277775,-7.700663,-7.442168,2.548363,9.983187]],[[2.949112,-9.517305,-8.237734,-7.572014,-2.539086,-2.752116,-1.902285,-7.807003,-4.510781,-2.005213,-0.356521,2.720238,-1.440548,9.803528],[3.532408,3.354026,1.949688,-4.120905,1.580262,-7.187901,-4.817911,-5.883266,5.281271,-9.314678,0.844751,4.820665,6.173427,-3.731541],[9.034872,6.199519,8.670700,4.353784,4.115656,-7.150830,0.167615,-1.526136,-7.382623,-9.098310,0.441523,2.563312,1.855503,0.755256],[4.471790,-0.280141,7.676408,9.697383,-9.264752,2.572182,2.387196,4.919877,-8.441016,-6.369631,-9.954998,-2.552641,9.729986,-9.481262],[4.598020,7.640186,4.087454,6.142145,8.465611,6.150066,2.829251,0.774684,5.723075,2.789384,-7.849452,-8.163294,2.949619,6.759813],[-5.393755,1.939562,9.852764,-3.802158,1.746621,0.647614,6.474043,-1.311729,2.150734,8.968941,-5.445974,-5.551063,-0.129541,3.293388]],[[-3.583913,-4.495252,-2.861575,-9.972122,-6.460453,4.258771,-7.734837,-5.464460,0.610118,-4.705002,7.027576,2.496133,5.297859,-4.250283],[-6.102959,9.636650,-9.333992,0.341472,3.888702,-3.781033,8.690037,5.040266,-1.954270,5.389903,4.462002,-2.608095,4.489416,-0.241738],[-7.345468,-5.778825,6.457491,3.032533,0.542775,-6.481400,-4.182543,-4.453879,-9.581236,5.618233,1.128828,0.325785,-4.807176,9.182167],[8.571570,-7.828780,4.831096,0.837887,-6.590578,-4.311531,4.469259,3.163274,-0.666701,3.977166,5.732314,4.774797,1.168620,4.369688],[7.648522,9.672438,2.273673,-6.928818,-7.306715,7.493693,-8.761846,-3.798060,-5.388896,9.113460,7.354723,-6.632263,9.855589,-0.559355],[-1.805660,-0.463725,-7.450610,-6.050657,-0.975250,-0.993852,-8.908812,9.910712,-3.910195,3.896016,9.683304,6.763857,3.406658,-6.606990]]], dtype = "float32")#candidate|6155|(16, 6, 14)|const|float32
uop_6156 = relay.rsqrt(const_6155.astype('float32')) # shape=(16, 6, 14)
uop_6159 = relay.atanh(const_6155.astype('float32')) # shape=(16, 6, 14)
bop_6166 = relay.less_equal(uop_6156.astype('bool'), relay.reshape(uop_6159.astype('bool'), relay.shape_of(uop_6156))) # shape=(16, 6, 14)
output = relay.Tuple([bop_6166,])
output2 = relay.Tuple([bop_6166,])
func_6177 = relay.Function([], output)
mod['func_6177'] = func_6177
mod = relay.transform.InferType()(mod)
output = func_6177()
func_6178 = relay.Function([], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6185 = relay.TupleGetItem(func_6177_call(), 0)
call_6186 = relay.TupleGetItem(func_6178_call(), 0)
func_2801_call = mod.get_global_var('func_2801')
func_2808_call = mutated_mod.get_global_var('func_2808')
const_6192 = relay.const(8, dtype = "uint16")#candidate|6192|()|const|uint16
var_6193 = relay.var("var_6193", dtype = "uint16", shape = (26, 2))#candidate|6193|(26, 2)|var|uint16
const_6194 = relay.const([-3.571296,0.772571,-6.459338,9.221624,-1.323198,0.002816,1.674649,-4.164441,-3.459611,-2.111585,-3.376249,3.338449,2.163213,8.172321,-2.321396,1.402534,-4.398697,-5.972670,7.543586,-3.835319,0.468398,5.830366,-3.046131,3.963894,-8.641420,-1.210769,-0.960266,4.414398,0.179894,3.424156,3.334616,-6.697723,6.312307,6.970474,-5.842399,-4.160577,3.359538,9.157844,3.091673,-2.629630,-8.839066,-7.724334,-1.279132,-9.377908,-4.688438,-9.950693,-0.860957,-7.681650,2.137811,-3.260459,4.936235,9.671053,-5.797641,-8.326588,4.983998,-6.783724,-5.811740,3.598646,-9.946188,-0.220539,8.959109,7.375283,1.772719,7.720873,6.860000,-2.156166,-6.729183,3.733870,-3.279632,3.404885,-0.881736,1.756210,-4.208346,4.011929,-3.670368,-2.351120,-9.643983,-9.646904,7.424438,3.327809,3.346645,2.532708,1.560679,8.223005,2.056622,-2.492467,-3.856011,-0.904541,-9.968552,9.485866,6.262501,-3.683516,1.825514,1.927025,-6.416922,4.042054,-6.613794,4.591676,9.138879,-0.357102,8.878422,-5.290457,-3.811166,8.972831,4.278925,-3.715749,-8.642515,-7.344497,1.085252,-6.727231,-1.352380,7.932650,-7.762390,9.830411,9.842030,-1.849160,-3.646095,-9.128903,2.512225,6.359663,0.227147,2.795560,-2.075558,1.477062,6.408945,8.336304,-6.068787,2.317571,9.156354,-6.982101,-3.435861,-2.501393,-9.396002,9.754298,-0.682254,-3.148101,-6.664805,7.913184,8.451751,-5.085543,-7.900631,8.170327,6.905033,5.314591,7.660070,9.911215,5.870881,-2.954832,1.940633,0.904698,-4.566368,3.352711,-9.224120,5.218581,2.149821,-9.202335,4.436553,-4.994780,-1.225582,0.940981,-8.752385,8.574179,-1.126033,8.826395,-9.374686,2.689884,-5.720212,8.082873,3.532407,-1.720288,7.569071,-1.311974,-6.453158,7.265381,0.351187,-4.306495,5.687504,7.658824,7.899993,1.665906,0.073000,-3.772453,4.988788,-2.372883,-3.890866,-3.110663,-2.499888,-2.827746,9.001243,6.169636,2.218080,-8.463272,-7.407029,-7.131965,-0.429192,8.135674,3.160031,9.231446,7.523166,1.728034,1.899420,0.792973,8.850774,-5.965304,4.548501,4.379121,-7.508726,-9.587388,8.995412,-9.696054,-5.747849,8.224681,-5.245033,5.088538,8.634358,9.533905,-5.343187,-0.657978,5.936200,-9.439072,-9.107390,1.397573,-8.060413,1.978901,-3.894507,0.273683,5.074934,-4.494219,-7.123916,-0.520425,0.839981,-1.622531,-3.030608,3.715669,2.577778,3.066436,1.203142,-0.588401,-5.215278,5.658404,-9.091327,6.751398,8.887693,6.055265,3.949562,3.221834,7.865935,-4.313862,-5.195495,6.718813,-9.522199,-3.130108,5.413987,4.815179,-1.533564,7.353262,8.201288,1.622217,-8.489364,-5.771770,-1.820781,-0.583342,7.822482,8.887654,-3.130943,-1.657352,2.428326,-7.575147,5.860366,-2.382606,-6.692541,-2.078800,7.171946,7.211384,-1.525331,9.266931,9.765068,9.998835,1.526385,5.411599,6.445921,-6.620658,-1.260813,-7.952443,-1.933731,8.831970,-6.756711,-6.885177,5.910887,9.672330,-8.319877,-7.795977,4.979225,-8.635537,8.894864,-2.541798,0.190362,7.350864,-7.572400,-9.260426,9.113160,6.323004,2.089746,8.227003,4.882542,3.661098,6.584394,-0.116244,5.587674,9.996839,-9.111480,0.201971,-8.636013,6.040191,-0.829991,0.583627,1.255261,9.061992,9.348645,-0.150039,-4.758558,-5.864570,5.358060,-6.268488,7.718296,1.105401,5.028802,-4.714102,-5.820814,-8.195034,5.974759,-4.759504,9.013324,1.726536,-4.668484,8.638444,3.297839,-5.446415,-5.756390,5.539723,9.115185,8.827081,-2.672928,-9.756374,8.432853,7.203666,9.328875,-2.551040,-7.441444,1.741056,4.062600,0.784217,-5.681575,4.255513,-3.377886,-0.070759,-1.409559,-2.839615,1.656004,7.265909,-7.702287,6.178913,-4.669365,-1.889939,-8.923988,9.028410,-7.732980,-4.022621,-7.772876,-9.702604,9.260712,-5.753181,-9.157768,-7.968342,-0.460065,9.289847,-7.588435,-5.998362,-8.395164,4.250422,-8.371323,-6.134218,1.157709,1.300586,-7.029930,-3.907695,-1.524379,2.090576,-0.137911,5.522775,7.726986,1.207549,7.794681,-0.338226,-8.220494,-4.162876,-5.489085,5.341727,-1.174576,-2.022916,-9.545653,-1.158956,7.111127,-8.456571,9.287815,-8.375543,-7.400019,-2.879253,3.300665,4.027001,6.497185,-4.581286,-9.839601,0.450188,-9.162030,2.294323,1.383276,-1.056559,-2.982549,-6.018828,-8.331039,-2.784691,-5.580837,-3.694204,-2.907502,1.745378,-0.079745,4.435470,2.420391,2.281054,-5.970766,7.740581,-3.346564,2.673216,-5.746950,-7.998302,-2.011196,8.770693,1.810883,1.698160,2.944758,8.847995,-3.439205,-7.641241,-7.601679,-9.045298,-0.572993,-3.818877,4.624449,6.614338,5.764974,-6.199212,5.911968,-0.701469,1.333352,-9.732058,-0.616311,-0.871865,-7.880003,-9.643435,-0.008975,-8.513731,-9.145090,6.746314,-0.191593,1.444686,-6.801937,1.733719,1.113763,5.418002,1.145672,7.447784,5.080659,3.456879,-8.824838,-9.842724,-0.186081,-1.111935,1.032055,-2.978224,-2.968910,4.978448,0.168061,-6.070623,-1.232371,2.872046,4.773126,1.595993,1.399887,8.626118,5.761443,-5.537722,-9.727323,-7.815152,0.451687,1.525360,9.724997,-2.775954,9.943979,0.392060,-4.237156,-6.556217,-8.365258,2.668926,-6.644474,8.050467,-7.314376,8.871789,-3.529871,5.089060,-7.651393,-9.773608,7.045692,-6.194016,1.665364,9.833939,-1.189583,-1.119640,8.679808,-7.051126], dtype = "float32")#candidate|6194|(520,)|const|float32
var_6195 = relay.var("var_6195", dtype = "bool", shape = (1248,))#candidate|6195|(1248,)|var|bool
var_6196 = relay.var("var_6196", dtype = "float32", shape = (140,))#candidate|6196|(140,)|var|float32
const_6197 = relay.const([0.517708,6.927241,2.362538,8.955534,8.082595,5.637207,-1.187833,-7.607556,0.978146,4.237594,1.366774,-9.791843,7.024555,-8.357957,-5.359238,-6.500997,0.903071,6.252279,0.588592,-3.340592,8.974775,9.498162,6.382791,2.020344,-8.262733,-9.526782,-4.869149,4.406151,-5.270158,-7.215703,-6.477640,-1.056796,-5.936909,3.206512,-7.611522,-3.216096,1.492713,-6.103097,-7.053107,3.037221,-6.674639,-1.405307,-2.556850,4.062414,3.248610,-1.214697,-6.430798,-5.990436,-1.009400,5.979765,5.163370,-7.756595,4.479689,6.357333,-2.314108,-6.894418,-6.496749,7.321856,6.349767,8.581107,-9.115459,-4.551795,-5.453990,4.199310,-1.950033,5.148453,6.781779,-5.709111,-8.029983,-7.084934,-7.770444,-9.893606,6.399072,-0.724421,-5.143583,8.489411,6.583007,1.446706,-2.094681,-4.094778,6.345856,-7.819130,8.864906,1.371661,-8.137668,-3.159502,0.975310,0.529672,3.549347,0.784189,7.109236,-5.380451,-0.700533,-8.771299,0.915445,-4.294548,8.478268,0.820012,9.561775,-8.640577,-8.738115,0.570297,3.731599,-0.818594,-6.885882,-6.384610,-9.770879,-1.248021,0.922092,-8.993083,2.041646,8.060020,0.021318,5.324052,-4.817431,4.272643,-2.928918,-1.914365,1.406828,-7.837282,-5.042338,-0.660249,-4.737105,0.325090,5.198544,-0.057299,-5.949849,5.414351,-9.518261,4.942688,6.950578,9.808853,1.458191,9.482256,-7.271398,-2.980694,8.986304,0.047618,3.228196,3.037648,-1.326002,1.560132,8.762422,4.647822,2.062428,-8.586816,6.844703,-3.883015,6.447011,1.218813,-1.405577,-0.390154,-3.045067,7.727463,3.172782,0.635504,-6.636783,-3.327562,3.405919,6.808392,-8.017700,2.779458,5.745114,-5.407057,-0.543387,-4.522852,6.924386,-8.019102,-5.810772,8.210430,-3.073213,-2.839596,5.988567,-0.240948,-8.389260,4.857611,-5.804819,-2.698427,9.045703,-1.660677,-6.474035,-5.335411,-5.839726,-2.288608,-2.827793,-2.231675,-1.553225,0.670298,9.655603,-9.902797,1.138628,0.017121,4.279554,0.640104,-4.618936,-4.633101,-2.134119,7.313924,1.459826,8.947531,2.752892,-9.163146,-7.647298,-0.915963,5.903593,3.266065,-1.648058,-5.632649,-8.324915,-8.864133,-3.974341,-6.284285,6.862927,1.020625,5.925092,-1.096738,-3.374468,-4.280322,-9.578217,-9.168802,7.980857,-2.115841,-4.026275,0.044330,-4.954150,-6.379791,-1.751804,1.152964,-6.018848,-2.879994,-1.243136,-1.887720,5.410723,1.748894,3.413621,-1.453058,-7.861423,2.770010,7.088904,8.662137,-3.735284,-1.942349,-0.697707,6.713051,-3.562313,-3.311224,-9.490280,8.975622,4.926819,-4.283334,3.334365,-1.049538,3.917299,-3.648639,-9.997754,2.882154,5.444170,-5.776614,6.330141,-6.284526,1.504794,-6.610699,-5.215890,-1.295420,1.886594,-9.921301,7.558349,-6.712812,-1.097624,4.775434,-6.389549,-0.503782,3.301855,-1.031109,-3.311621,-5.057084,8.023662,5.827819,5.367145,-6.070911,-2.564380,5.692181,0.278424,8.704838,-3.729897,-9.039896,1.499601,6.340439,6.586105,2.705519,-0.733915,-4.147418,7.125677,3.024151,5.498145,7.407760,3.147019,4.373705,-3.007210,-6.468227,4.767372,5.164538,6.727826,8.069202,-7.097481,-0.844459,3.865909,9.342020,1.352814,6.102606,-9.805805,-5.363642,7.990727,-6.802812,-1.577016,-8.697994,4.252366,-6.690983,-0.644127,-7.559682,6.715777,-7.051020,6.091186,0.521669,-9.292184,3.754072,7.608617,-9.305157,9.929498,-5.439859,-7.962741,1.932505,-8.814823,-6.777665,-9.313863,-2.896560,-4.704839,-7.773491,-1.650941,-6.612200,-9.611280,8.719190,9.104886,-6.214347,-8.065662,4.745204,1.318520,-0.150036,-9.882005,8.491211,1.028956,-1.844575,-5.601554,6.325039,-5.247935,8.373314,0.735577,-6.381206,8.999613,5.743796,9.733199,-5.567596,-2.664934,6.116595,4.548413,9.281097,-5.430265,-8.793779,-2.672532,3.127997,4.808050,5.548454,9.827812,-9.165564,-8.986072,-4.111785,-7.087992,-9.264293,9.733024,2.341947,-6.814399,-0.470349,6.295183,8.289493,-0.637347,-6.407417,-1.679557,9.615193,-9.585961,-6.471855,9.517274,-5.605028,0.628651,-4.620016,-5.348646,8.137799,-8.230027,5.121028,3.970292,4.253498,5.675448,7.705124,8.117304,5.346080,-8.341872,-4.529728,-9.273110,5.043375,-0.553088,8.609068,-8.283736,1.826780,-6.092509,-7.994344,-5.154781,0.920667,2.538128,9.196935,7.512360,-0.911029,-4.320864,-6.452620,-4.811651,-8.799645,6.185913,3.667951,-6.220009,0.095260,-9.358757,-2.592919,0.257824,-6.478275,7.032805,-2.915390,1.325420,-1.719882,2.395025,-0.585661,4.540575,-3.576277,-4.318539,-3.535221,4.434624,6.525969,5.298380,-6.611505,-0.347388,9.898874,-9.936814,-5.326325,7.443458,9.570452,8.313346,-4.859166,-3.249046,-4.834735,-7.225297,8.718236,-6.279337,4.616837,2.868779,-7.618501,0.837698,0.832934,3.745425,7.483593,-0.774917,-0.535951,-2.522398,-3.248898,2.939779,-9.299779,6.671593,1.371383,-3.654736,9.746801,-1.339967,6.054947,-0.799660,5.584992,6.517532,-9.550948,9.261678,2.084198,7.168629,-5.247405,-5.100989,-7.848759,9.477261,2.194324,1.167639,5.221703,7.129105,4.810750,8.534665,3.146851,2.146937,-0.963789,-7.921890,-6.078677,-0.749841,6.378426,3.020582,-7.534670,1.424313,1.926401,9.275075,4.600286,7.926548,-4.903102,8.539201,6.904910,3.058097,-8.272631,-5.042754,0.722824,7.752708,3.780712,-2.676461,2.799887,-9.844981,-9.543900,7.182475,-9.043441,-9.363949,6.313799,-0.634287,-6.377997,3.107029,-5.898727,-1.709014,-1.683742,-9.564163,-5.694033,1.605023,-1.381398,-6.247171,9.098700,-1.699201,1.886338,-9.528077,8.017260,9.529304,-3.350375,-5.158772,-9.475590,-9.987114,-9.246660,9.442294,-6.758808,2.281819,-6.990989,7.845335,9.976942,4.032377,0.037135,-4.437322,-7.545426,-5.022446,-1.857751,4.628561,6.531450,8.752564,-5.276923,0.350214,0.962736,-9.255311,-3.957621,-9.771881,7.933327,-7.970119,7.561261,5.188861,3.085554,8.934990,-6.802740,-7.203009,-9.313234,-8.049464,-7.716369,8.993557,-2.832994,6.678704,-5.928142,-3.339132,1.523259,-3.678221,7.520096,8.011093,4.813543,-0.961194,2.881337,-4.645753,-7.680449,1.540451,-3.961138,2.211413,-2.298292,0.587047,-0.487894,-1.540434,0.103001,-5.592329,2.885937,6.194672,-5.641040,-2.279521,-4.073051,-0.435816,0.211191,-9.211457,-8.446913,-3.279891,-5.786469,3.797368,-4.700815,6.945218,-8.807630,-3.661543,4.906866,9.778661,-9.519784,5.612090,-3.867444,9.973860,9.360948,9.565955,0.352481,-0.332717,9.414499,-3.899933,-7.168798,0.891369,-3.977593,-9.925060,6.104946,8.054400,9.674014,0.980163,-9.734488,-3.129648,-7.186572,-8.056561,5.039018,6.263680,-9.012187,-6.347963,2.928291,-5.912949,-5.283312,1.702163,-1.520083,0.217475,-1.685420,6.960778,2.635488,-3.474586,2.987646,-6.934729,-8.970431,3.528079,8.992784,5.657431,-2.404538,-6.803933,-4.170616,-0.397304,6.341954,-9.179302,-1.319446,-5.116041,4.424452,2.013605,0.658156,-8.680418,-4.692744,6.055168,4.942405,-3.956469,-7.982235,-5.677503,9.391807,5.432199,-8.384302,-6.513484,9.504255,3.627429,9.485043,2.825322,-7.529181,-9.147636,5.656617,-4.419212,-5.041483,-2.753434,-2.592843,3.411875,-3.177049,-4.578168,0.711863,6.014076,7.082561,6.622477,-7.043802,-6.899983,-2.402611,5.420374,-9.186170,8.830887,-3.822112,8.095457,-7.894880,-5.058917,4.456001,-4.938615,3.941986,8.370398,-0.366994,-0.999128,1.833982,9.699522,4.714701,8.781419,-5.011112,4.277879,6.406628,6.235929,4.284351,-5.494769,-2.032434,2.686864,-3.211362,2.672360,-3.560529,6.908048,-9.168536,5.692620,1.811211,3.522775,0.476359,3.700652,8.321649,0.916086,-9.446612,4.382532,-2.775406,8.501050,5.190995,4.202110,-5.169280,2.984663,7.662187,-0.568811,8.960963,-0.442302,-9.634049,7.979022,3.245374,7.889093,-4.111631,-3.214957,9.625668,-6.800476,-4.332582,-6.778932,-6.941225,3.797110,5.439988,4.148448,7.251416,4.837098,1.741183,3.387145,8.398818,-4.235751,0.326000,-4.915564,-0.789235,0.321668,-6.480572,6.295580,7.595358,-2.951247,7.568129,-2.472826,-7.028616,-5.646175,-4.444149,-6.649135,-1.865930,-8.239230,7.458867,6.320201,8.889372,7.692318,-2.705082,-7.602312,7.013974,-0.991283,-7.806673,-8.242125,3.698087,-9.141394,-6.368751,4.340978,-9.434576,6.188864,8.816846,1.574360,4.935607,-4.371842,-8.360944,-6.604973,-4.517578,-8.084393,5.885999,6.025126,7.342503,-7.605067,-6.837648,3.274895,7.236299,-9.980928,5.537347,1.107450,-9.016488,-9.612508,0.989305,4.495904,-7.094679,-6.360867,-1.427035,-9.816212,-4.346339,3.387430,-9.355805,0.677266,2.973085,-7.267001,9.976844,-6.523799,-5.006641,-8.886425,7.795945,5.305315,6.631137,9.860734,9.363227,-5.552264,-4.978973,-7.298356,-9.120717,4.047585,5.923007,-0.410056,9.494269,8.041436,1.359822,2.606263,6.748329,-3.168494,5.055234,-1.331043,2.599486,-8.920194,-2.707160,3.669754,-9.420465,8.343629,-2.496844,-6.119237,-0.017158,7.875886,-9.115722,-5.661556,2.105019,-3.077599,-6.591265,4.979621,6.611090,7.879321,-9.360638,-5.618460,6.879538,1.168411,4.839247,-6.044157,6.641164,-0.737337,-4.456047,6.026226,7.799047,-6.160948,-6.938633,-1.418241,0.530959,8.089282,-5.741720,-4.462039,6.456785,8.628681,-8.645267,-6.911250,-4.675854,8.760237,1.770294,-4.866996,-3.405393,-1.514920,8.858770,1.837243,4.070617,-3.590958,-6.259144,9.300927,-5.626905,7.021637,-6.117485,-4.102978,-7.315602,-3.467254,-2.206238,-1.046303,0.621874,0.397876,9.660403,-3.125041,-7.434178,-3.250819,2.628637,-4.709948,7.082446,-6.026434,-4.781757,-9.791702,-9.143566,-3.680626,8.387361,-1.344327,-3.186580,1.040541,-2.780863,-4.829912,3.765598,0.390734,-7.779242,-1.374384,4.595513,-9.656157,-5.177662,-4.464898,6.189971,8.433781,-9.001242,6.998445,-4.456203,-7.784804,-2.064263,6.342324,-0.686538,2.892574,-3.579982,-0.426108,-1.081776,6.217410,1.430596,-2.981748,7.164597,0.644720,9.797365,-2.009592,-5.194352,-0.799484,9.026287,-1.460120,-9.604492,-0.239912,8.609014,1.455658,4.838078,-8.416844,-7.219726,2.577077,1.094677,2.820316,-6.603840,-3.877279,1.621208,6.463165,-1.556399,-5.021223,2.472115,4.447501,2.370383,1.774869,-8.286143,6.640073,-8.738819,-4.113497,3.390652,-3.640599,1.926145,-4.550571,5.516294,3.347503,5.175068,-0.538062,-4.575854,-1.066030,-5.796702,4.003272,3.262669,-5.894736,1.082423,9.651892,-3.529729,-7.069828,-4.435380,-8.002868,5.264723,3.250742,6.030312,9.655039,-8.553982,3.397954,4.327070,4.830092,5.197496,-4.702314,-9.801755,-1.170408,4.809177,-4.436418,9.589164,7.028605,-9.261616,-7.549736,7.608678,1.973122,5.038397,-1.083359,1.440117,6.282208,2.544456,-8.986418,-1.666951,7.363957,7.502354,5.644944,-1.495366,7.209639,-7.049801,8.843444,-9.150128,8.666034,1.213371,-5.385400,8.748824,-8.048172,-0.224067,-5.920003,1.302934,-3.036562,0.538773,8.476994,0.710387,-3.155368,-7.029783,3.280556,-7.456736,-9.635724,-2.787481,8.724284,7.307982,8.707058,-8.283667,-4.185347,5.189394,-2.023083,-2.425987,-2.745884,0.614371,9.882012,-8.684773,-5.377904,8.509426,8.915645,3.502721,3.186227,-3.971195,-1.165395,-7.622881,-5.977558,-4.085482,-3.777874,-6.919797,-4.777046,8.981676,-8.174193,-0.296313,0.536989,8.880114,3.662107,1.977376,7.661631,6.375664,-9.090058,-8.479736,5.618604,4.642579,-4.909859,3.532092,7.103629,-8.833487,-6.313482,-3.319360,5.913733,-1.028270,1.961026,1.696259,9.164797,-3.735094,7.366118,-8.059966,9.225438,-1.180501,-6.967164,-3.954488,5.640805,0.709648,7.791499,9.092491,5.245748,-9.690360,0.155432,-9.682002,-6.178849,-7.815516,4.236575,7.055382,-9.358231,-9.684771,2.877745,5.116549,-2.277546,-1.063201,-7.995942,-7.436545,-3.941736,-9.173975,-0.834361,-8.844559,-0.066311,-8.556363,-3.309747,-5.800849,-0.100155,3.990628,-9.808560,-8.420430,6.232449,-6.890677,-2.116150,5.764650,5.151630,-8.530162,-1.109368,3.654453,5.698994,8.023109,2.973746,-6.386364,-5.951964,7.504476,-8.861626,5.569540,-5.639255,-6.637766,-0.458612,3.423495,4.117205,-3.919754,4.866604,-8.247030,7.111275,-1.903737,-2.165955,-4.156514,-1.162072,1.035068,6.498013,-2.466898,-9.345749,-1.155995,-9.435900,9.997487,1.657340,-2.175324,4.235489,2.592479,-4.043163,1.104954,8.082245,0.817814,7.740952,-6.866549,-6.543031,-7.595031,6.493674,5.046584,8.649960,-7.191954,-7.071316,6.778616,5.374577,8.379633,-9.862160,-1.999162,-6.523872,3.871443,-6.433205,9.513816,-2.739161,-9.024188,-9.883960,9.340131,-1.131567,5.585685,-1.589442,-3.672512,7.883816,0.163423,-6.312874,1.692020,-6.227256,-9.459088,7.926341,9.801886,0.518172,5.887634,7.103772,0.769426,-7.828229,9.172251,9.846305,1.637337,2.516245,-5.561843,-7.292319,-4.206573,-6.967970,-5.322787,-9.953878,2.290216,4.948534,-4.532220,-3.198103,-6.313381,-1.453563,1.652344,1.763226,-4.604019,-5.774578,-3.346756,1.803986,5.080786,3.827421,5.562263,3.945738,7.268488,5.233063,6.625512,-9.615498,1.810525,0.424947,-2.180708,3.631869,2.204687,-3.377109,-4.983631,6.253517,7.812592,4.947377,-2.601504,-4.532577,6.572503,2.792814,9.883448,-1.563897,-7.116160,5.664327,-5.276535,-1.758607,-7.623167,8.639384,-3.283143,-2.263266,6.311979,-9.385590,-2.821738,-3.315963,-3.096706,3.511966,7.078537,-5.582819,9.871657,-2.006598,-3.717934,-4.197370,6.872958,-2.422088,-8.160579,-0.425928,-3.347026,8.683326,6.476522,1.071813,-1.214076,7.927361,-5.155420,4.011907,3.073614,-6.777709,-5.212455,4.293771,-3.004439,1.409127,-5.488898,6.337155,-1.402118,-1.843245,-3.925366,-7.054396,-5.102505,-6.314367,2.572397,-0.979666,6.313168,0.015063,6.468862,-0.303703,-7.549302,-7.981733,2.254977,3.395587,5.219105,7.957028,7.572886,-3.750488,0.289486,4.553651,-4.268527,6.795991,-0.529169,-8.739531,7.048514,5.211674,-0.400331,7.197254,3.948192,-2.381721,-7.185118,-5.515259,6.598368,6.962902,2.189143,9.119439,-1.873692,-1.993486,9.359580,5.264400,3.068078,-9.822289,-0.237902,1.009465,0.396667,-0.529502,2.438309,8.546856,1.753479,5.074306,6.520673,9.709285,5.158528,-8.179627,-2.620217,-3.043984,4.086128,3.697203,-0.827302,6.238479,-0.265556,0.911868,0.936537,-6.458320,2.723184,6.484471,9.349341,-3.983725,-2.366527,1.763758,-8.467114,-7.236261,7.531571,-2.367727,-9.512574,8.447704,2.515691,-4.913903,7.145941,-0.938748,-0.487925,-5.958629,-9.915355,4.409201,2.734233,6.711262,-4.511075,9.712839,9.697981,2.193546,-1.147478,3.888428,5.875199,-1.579616,-9.438013,2.598376,-6.126474,-9.572024,-7.510241,-0.995383,6.855729,-9.050773,5.019104,1.744859,1.192953,3.007724,1.548274,7.563291,-2.433847,1.233280,-9.185582,-8.876491,-7.706602,5.422428,-5.477260,6.600027,4.387305,6.722740,7.522857,-7.806447,3.831346,-7.028103,-8.061033,7.651664,7.485244,8.493295,4.856768,3.799157,1.352311,-3.700740,-6.206172,1.319149,3.108137,-4.404542,9.041011,6.309911,-5.711594,4.374057,-4.791188,-1.154609,5.052491,3.826595,5.536318,5.293330,-2.859872,-8.378399,7.179567,-9.091836,-2.645628,7.000480,5.270445,-2.585023,1.767862,-3.532178,-2.853838,2.292149,9.888561,-3.269532,9.359308,8.192661,6.250948,-3.498759,1.665286,-0.837564,-5.201860,5.164877,-8.179114,3.320109,8.419208,3.937512,-2.822071,2.535764,-4.016996,-4.047277,9.724779,5.332551,9.340764,1.681418,-5.181627,-0.852710,-3.558044,8.861566,4.167972,-4.846592,-6.897503,-5.654033,-3.501016,-5.679478,0.953643,4.828751,-3.033821,-2.262925,-9.223697,-7.700321,6.388650,5.784221,-4.818356,-9.669249,-0.425119,-4.269560,4.278792,4.619079,6.261386,-0.128980,0.091392,5.557807,-0.117470,2.270840,-5.044034,8.695504,5.982293,3.707424,7.933704,9.290145,-7.844071,7.658012,8.439798,1.943210,-2.778144,6.402137,3.285314,-5.220853,-1.143586,5.846472,0.729867,-4.132685,4.040183,2.863624,-2.812795,-8.865167,-2.393654,-5.078482,3.256500,-4.130682,5.341390,7.817881,1.782048,-5.674496,5.856562,-4.499267,-5.517946,7.842969,-0.741101,9.831353,-9.042807,2.302452,6.249261,-4.582418,9.240114,-6.641255,-2.750786,-6.342077,4.893173,-8.553939,-0.774671,-6.283790,5.140843,-6.005418,-8.937093,-4.142142,-0.052075,0.400313,0.922440,-6.075226,8.632072,0.312384,-4.910880,4.826271,-1.587828,-2.200299,-6.906748,-5.023036,2.838370,7.084242,-0.949757,-1.603183,3.849473,-1.168077,2.917002,6.732463,0.642493,-3.041353,-0.957188,-5.384094,2.044831,1.126894,2.018217,-6.249353,4.203651,-8.633267,0.694887,-7.063754,-1.417778,-0.427227,4.205779,-6.259345,-4.256074,-0.515852,-8.175299,-9.472569,5.787570,2.513955,3.329119,2.587431,4.315642,-4.974910,-8.656844,4.536538,4.796293,-7.731689,-2.187194,4.751876,-5.283322,6.134011,-2.102668,-5.821323,-2.631311,-8.026206,8.229209,-2.433169,6.570975,-4.056501,0.120416,8.110102,4.905728,0.846653,-5.469042,-4.385695,-6.243020,-0.833475,7.372285,-1.618064,-7.884861,2.437635,1.683689,8.847840,-5.583863,-3.595731,9.564233,-0.753770,-4.837636,-3.104102,4.871389,5.204550,7.768631,-5.669760,-9.823988,-5.256709,-3.223796,8.025931,4.649632,-9.696444,-9.761630,5.014450,-9.872248,-1.777543,4.940209,-7.784413,5.174653,-9.914506,5.849314,-8.615849,1.199690,-2.678643,-8.929239,4.383327,-8.616250,-3.847177,7.106410,1.448302,9.671849,-3.899075,-2.756646,2.805672,-4.895958,-3.003097,0.618084,0.683144,2.356113,-7.316447,9.881663,2.062639,4.395919,-6.163223,4.844679,9.179275,9.992289,6.823781,-7.103939,-9.330998,-8.947588,-2.774305,1.479801,9.132731,7.883263,-6.730941,0.039826,5.601706,1.237147,2.646310,5.798074,-8.653314,-5.049887,-4.898183,-9.807511,5.532308,-1.370127,-4.912373,-8.082531,-6.973666,0.878351,-4.969577,0.015917,-5.368843,-7.874950,1.105366,-8.753189,-1.232417,-3.073250,8.712520,7.133625,8.579782,-2.898711,3.381460,3.018749,-0.323791,0.333336,-0.331980,-9.207034,3.723824,-8.292579,-6.710979,-6.644369,-1.767706,-1.364855,-6.034599,-5.663546,6.642826,9.764389,0.415965,-1.735788,-2.381243,2.376495,-5.497408,7.399770,-4.455774,0.228794,-5.428188,8.007664,-5.062412,-3.239024,-8.037171,-5.266255,6.809017,-3.116421,4.960527,-0.058916,-8.142359,-5.646653,-8.141142,4.963999,7.281736,7.904904,-0.285195,-3.430308,-5.824105,7.650532,-3.220389,-8.008414,-0.848331,-2.983186,-2.683081,0.453415,-6.484992,5.920534,9.106876,0.234052,0.292892,-3.207564,-2.583289,-4.929397,1.300130,8.103771,-4.027011,8.321320,-7.549999,-8.787436,-0.739812,-0.058469,4.144157,5.702198,-9.000430,8.446615,-2.544079,1.567467,4.325424,1.107506,-3.494116,-6.909071,0.125812,4.648565,1.982717,-8.596285,4.763610,3.965767,-5.241491,9.443792,3.957091,7.620047,-8.919462,-3.384991,-1.263636,-8.839382,-3.039046,6.681448,-7.624999,-7.853554,-2.394465,3.734317,6.962217,-4.962016,-3.231647,-0.186945,3.567813,3.991110,-5.126930,3.989482,2.876237,9.773638,-2.847942,5.303053,1.026852,-3.444730,-8.410959,3.595052,-0.942666,-8.805587,1.063593,2.426370,-3.180224,-2.934172,-7.668747,8.477434,6.157870,-2.969186,-9.816888,-1.919566,7.796726,8.789651,0.385987,0.902063,4.770483,-9.260399,-0.021317,8.903412,-2.428146,9.221680,3.361605,-9.439528,-2.303669,-4.194158,6.697460,-6.269262,9.424894,-0.118745,7.700521,3.870225,2.799299,7.521836,2.426533,-4.485653,6.489270,-3.031615,9.897590,6.362998,4.172735,-7.494358,9.207538,0.427142,-0.199404,4.208079,5.177598,-9.886453,-4.219881,-8.359388,-5.556605,2.166000,6.309558,-8.891217,-6.918298,-1.102274,7.094731,-8.955422,0.576386,-0.014776,-8.570713,6.922186,-2.439056,-7.433749,-4.610566,-6.330125,-6.688715,-3.981129,7.726176,-0.652025,-3.426624,-4.462084,5.780399,-8.891150,-8.526461,-3.264136,-3.380419,7.838951,-6.146224,7.888438,-5.757978,2.402893,0.846386,-1.436596,0.609292,8.518532,4.647716,6.800636,-2.341426,-2.347332,-0.128414,1.529921,-1.898358,2.810482,5.520425,6.924966,-5.683720,-8.280221,-9.102760,1.217177,6.936661,-1.582038,-7.185347,7.945782,2.317321,2.620293,-6.321420,2.156294,1.315816,0.169122,1.517094,4.597609,-6.576136,-4.244876,-2.059599,-2.044211,-4.623036,0.092524,-6.129439,9.368989,-4.129147,-3.508029,-6.405774,2.402973,-8.412491,-6.458164,-4.850189,-7.455966,1.618585,3.330469,-0.555888,8.285771,-7.422581,3.732031,6.419978,9.494152,8.774400,-7.578411,4.846674,-2.337149,2.971210,4.326354,-1.888398,-8.073559,-2.979885,0.103231,9.120494,7.644755,9.076886,-7.858129,-2.054500,-1.600070,1.009871,7.164432,2.593132,0.732553,-1.657166,-7.137493,-0.927695,-4.932326,-3.413040,4.242821,-9.778492,-0.589866,0.335384,-0.221741,-3.142066,5.006683,0.594300,-1.696478,-1.971584,9.290072,-7.141542,6.579929,-0.297720,-0.324663,-6.945768,-5.895590,-1.488113,-4.073460,-3.850250,9.210061,-0.887373,-9.546618,6.234116,-0.786194,-9.044381,-5.843805,3.931095,9.564585,0.914325,-2.296747,2.163599,-6.061503,0.519193,6.079914,0.488837,-2.595842,-7.808394,-1.148128,1.892619,5.239536,-3.913288,1.803742,-3.817208,-9.722260,-7.512250,5.442221,4.581841,8.115059,-9.000527,-1.484783,-8.245863,4.098281,-5.308648,-3.623842,-6.292159,6.443565,-4.466130,-1.144807,-3.338242,-6.761937,-3.032928,-1.420740,-8.092981,-2.311770,5.706304,-7.280205,-7.706383,-6.389994,8.095390,-6.668751,-8.753584,3.678046,-1.910160,1.216547,-2.711564,5.861160,3.750209,-7.305867,-4.378288,2.359908,-5.496435,6.737797,6.786411,8.079639,-3.865615,0.341697,5.580042,8.371800,-0.816219,-0.087321,6.991352,4.770576,-4.304575,-5.419507,7.477370,-2.125391,0.575472,-9.453559,1.743548,-1.023411,9.100916,-8.334126,-6.337683,2.008134,5.596372,9.736454,8.550064,8.030074,-3.137332,-0.229267,2.426453,0.113969,-8.907803,-4.643757,4.827695,-3.253726,-7.262894,-4.908573,-1.514023,1.915150,1.388974,-2.825636,-6.043046,-7.121415,6.215466,-0.108454,8.423303,-9.790479,3.817282,5.907485,5.838756,1.319595,8.386498,-2.315374,8.282558,8.607285,-5.474558,-5.770834,9.426986,9.061967,6.615531,-8.287406,-4.576235,5.190910,6.544195,-9.444668,-2.865898,-1.518127,9.179291,5.494499,-6.210274,-4.369924,1.835259,2.318634,9.953772,0.584505,-2.793427,-4.262355,-0.762611,-2.576785,-2.741656,-6.081327,7.992544,-7.103956,5.332867,9.763598,-3.703825,-1.257904,-2.948200,5.512603,9.696771,9.857120,-3.965294,-4.320938,3.389720,-0.788237,9.203278,-2.189096,0.751738,-0.654746,-4.108440,-0.944293,0.904686,-0.324979,3.602299,7.460219,0.492577,-5.978384,-2.386001,-5.440428,-1.920468,-2.389657,-0.081588,-7.817672,3.251547,-8.367911,-4.852038,4.448048,-4.882369,-6.168470,5.922908,-4.747718,-5.458587,-2.042788,2.791226,-2.362881,2.460493,8.168730,6.061872,3.972080,-1.518488,-9.158925,-3.588002,-9.994124,-3.867572,-5.028772,7.251467,-2.803444,-8.969877,-5.757104,0.172424,8.726542,9.136898,-1.771287,-2.766921,-4.366933,-7.042753,0.087656,-0.664804,0.035743,-8.588320,-2.996573,-1.370263,6.144256,5.565080,-8.972420,-1.113027,4.226561,-6.411884,-0.175674,6.941333,-2.963314,-8.700705,-4.678037,8.508787,9.301912,-8.345734,0.296988,-5.172553,2.563515,5.061268,-5.814037,4.544864,0.140589,-0.892319,-2.214168,-2.273126,1.011998,-0.422734,0.181578,1.639128,-0.419103,-4.603076,-8.729958,-1.498422,-3.143661,5.635411,-6.715553,-0.487617,-0.355054,2.265492,-5.745995,1.628848,-2.315101,-7.012997,-4.271160,-3.477253,3.497843,-1.655899,3.610962,3.378195,-2.974632,4.162744,8.022115,5.292420,-3.312730,-6.661818,-4.094496,-7.509063,7.104632,2.247058,-0.484878,-5.520405,-3.938811,2.345876,-4.030568,-5.581532,3.118366,1.750065,9.747410,-3.228624,5.213651,2.715194,3.334306,9.551963,-3.620458,-7.702580,-1.364550,-2.007625,1.296550,1.140674,-0.571492,2.423598,1.943822,-1.606820,3.736854,-2.059616,2.198737,-1.230543,8.929875,3.122132,-6.240548,-6.609694,1.759372,-5.709941,-8.131405,-8.385916,6.760499,-0.028376,-8.976727,1.283988,6.382763,-1.825988,5.535262,9.054792,-7.403076,-0.038113,-8.939650,-8.504986,7.487400,2.203341,-0.594013,-2.749014,4.657755,-4.378547,5.282705,3.005570,2.157805,8.600207,-7.502493,2.626077,-8.062980,-2.013384,-7.622214,-7.977702,8.229872,8.654626,0.792512,8.257364,-3.924106,-3.862500,6.572128,-6.265269,8.644978,-1.504739,7.630668,4.383391,6.145363,-8.111712,-4.931070,-7.711921,-8.911642,2.907076,4.586904,-7.722317,-8.894675,-6.386159,-4.506045,-4.023235,-2.653060,-8.925963,-1.461276,7.914453,3.180404,3.184643,-2.961305,2.302536,2.768322,-5.891570,2.953857,-1.253968,1.387480,4.619386,7.307456,-1.931697,-4.962327,5.137646,-7.656592,6.636694,1.873222,5.688467,-2.545919,-4.300243,1.987499,-4.181995,-0.488953,-2.373406,1.386256,4.531274,7.624066,5.312986,-3.831098,-9.943334,7.550990,-0.639381,-0.971382,5.451006,-0.582940,-2.413590,-1.024802,-9.623378,3.682575,9.056863,1.673721,2.537537,-3.568218,-1.539707,-4.136294,3.365086,-6.909656,-2.433465,9.726928,2.634655,7.829753,5.673883,1.853388,-5.602845,-2.202569,2.721545,4.146490,-7.866526,6.913363,-7.462664,5.426890,-2.203569,-4.369805,-6.816332,-4.900731,7.117807,2.027785,8.642251,7.561202,3.059316,0.029268,3.780723,1.362561,-4.953794,-0.154844,-2.635000,-6.258309,-1.049972,1.004076,-6.064401,-9.270224,-8.648333,-1.288973,-5.382007,9.898624,7.686521,4.427368,2.929925,-2.911621,3.336665,7.345937,-0.066221,-6.148705,-8.479948,3.223585,6.952601,-5.924263,4.626333,-4.104554,-9.490793,8.737979,-8.134954,-4.260034,-3.624351,-8.276682,-6.776538,8.654707,2.475733,2.283403,-4.876736,2.642665,-1.970645,7.479580,-1.055613,-3.372621,0.999744,2.433186,-6.018345,-2.467352,-3.745721,-6.380667,-2.137841,-7.912449,-4.010339,6.843201,-4.429254,-7.121359,-8.473429,2.126128,0.379166,-4.740496,3.278665,2.131830,3.425677,-8.998492,-5.898744,-6.112958,0.701809,-4.443454,-6.423460,-4.656498,-1.462232,-6.914509,-7.323502,-0.905375,4.168307,-9.658073,-1.769927,-0.217711,5.767266,4.567003,5.963886,-0.383567,-9.727039,-9.033671,-9.779021,-0.510155,-4.314081,-8.940632,-9.227386,-9.882368,3.132109,-5.369899,-8.637108,4.259924,-2.499570,6.151711,0.823711,-9.894487,8.458084,-1.588723,4.586274,-6.369887,4.538411,-6.801220,4.879872,2.044530,8.806513,-0.306501,-9.446806,-8.590481,0.130179,9.545385,7.113431,-0.237066,-0.176424,4.797153,5.514173,5.444264,-6.471675,-9.123476,9.222333,-8.869222,-2.615661,-4.687834,-2.330321,3.374847,4.147441,-8.871167,-8.278867,1.284269,-8.437157,-7.080799,-6.602633,-1.916971,5.613097,7.217470,0.457199,3.292811,-4.641683,-4.374746,-3.625307,-4.673209,-1.177402,8.940367,-3.533590,-1.751923,4.533753,-5.614054,-9.634897,-4.357253,-4.941718,-0.147805,4.780392,2.588500,-9.986579,-4.150664,2.624767,-7.738702,-3.872051,-1.000494,-7.737993,4.852915,4.989223,2.458477,-3.443778,8.526049,6.976465,-5.070781,4.354469,8.191316,-5.787408,6.575125,-7.112428,2.122520,8.171097,0.669968,-3.347468,3.147701,2.184614,-0.583146,-4.605467,-7.607435,7.548199,-2.351884,-6.782636,-7.906516,4.375595,-7.053501,9.646181,-2.288247,0.784965,-6.905531,-4.053552,0.634198,1.414747,-7.659704,2.862057,2.547540,8.712070,5.791237,8.164092,-3.470337,1.890097,3.922603,3.106375,4.136156,1.069602,-0.899395,4.839696,9.011698,5.435260,-4.099207,-6.550967,-9.847337,7.075157,9.684053,8.281380,-4.522546,-3.787877,-5.567858,2.466605,-5.639844,4.025608,2.953984,-6.395529,4.306461,-8.587614,-7.442292,-0.672081,-0.888569,7.041990,-5.867183,-8.237986,9.949291,-5.745823,-1.634669,-4.630802,3.733341,3.423049,-4.477942,3.186734,-9.609449,-1.803396,1.051016,8.702928,-4.126453,0.477742,0.736021,9.058962,2.605289,-9.476294,-2.456834,-9.850613,3.061435,-8.696359,-5.489962,8.382795,6.862775,6.279357,-8.102259,-7.462801,5.836556,-6.918618,2.849829,-6.910218,5.835143,-5.564409,6.070579,4.537103,8.806423,-1.707180,-7.288614,-4.219993,5.020813,-3.328945,-1.456120,8.588825,-3.284726,-9.803857,9.737445,-3.660791,-6.017909,-1.617304,-8.110654,-9.852150,0.916076,2.036219,-2.227180,0.829987,8.536265,-7.656031,3.384556,-2.847534,8.336755,5.789753,5.399491,2.445640,2.863426,6.404939,-9.678167,2.647972,-4.469261,7.700493,-3.457715,5.723897,-7.479856,5.797415,8.904370,9.069253,-8.370968,6.752608,5.509519,5.100682,9.997359,-2.344801,-1.270821,4.410516,-7.734517,-8.241882,-8.214360,-3.265910,1.077389,-1.812086,8.136917,1.941387,-1.528255,8.267138,8.989593,-0.716234,7.163200,-3.512486,-8.381943,4.227515,-3.347586,4.036786,3.941670,0.715395,5.552684,0.896803,-4.662385,7.446536,0.498245,-5.122356,7.959223,9.772746,4.133260,0.258176,-2.588301,-2.250727,-6.892615,9.033527,0.267371,-1.325913,-8.631438,-5.067850,-2.244656,3.694797,-4.561376,-1.310934,0.287217,1.390494,-1.210876,-9.210055,2.196764,2.456295,3.462077,5.663264,-9.951253,9.394697,4.866892,2.536492,5.266418,7.830959,-5.441135,-9.011587,-1.119831,-1.672461,-1.285846,8.131486,0.986171,1.406481,1.060005,7.892161,-7.954167,-6.502512,-2.266853,0.486687,-0.911324,-6.254801,-3.686603,-4.211168,-0.079454,7.623023,-2.474014,-3.675775,-1.780383,-2.668678,-1.585320,2.995946,-3.960482,-7.525439,9.501428,4.171480,-3.050246,-0.491181,-6.446103,6.799083,1.004685,4.953791,3.488404,0.584649,0.204296,7.878602,4.590962,-7.202785,-0.685114,5.242750,-4.682423,-8.110732,-9.728375,1.699890,5.101334,0.321280,-1.263130,-2.519728,-2.611478,5.535844,1.256743,4.379088,0.318583,2.856020,-7.112541,4.080148,3.515742,8.347863,-3.899229,-7.604317,-9.082557,-1.453959,-5.590847,-1.273119,-5.088529,-9.517893,0.916846,-1.491165,2.762253,-8.064584,-9.136643,-5.520123,5.962308,4.988638,-5.141018,-9.089135,5.547643,9.134595,9.619164,-8.303371,5.189393,-9.819271,-2.109459,9.449484,-8.919511,3.471222,9.389042,-6.287208,-3.781229,-4.178355,4.632940,0.266346,9.464311,-4.026908,-2.818703,-5.492200,3.633638,-0.816137,-1.087229,1.826729,-5.894892,1.316348,-4.368911,-4.688313,-5.031259,5.955368,8.331449,-3.064834,-0.124078,-7.584184,-0.610897,-2.453372,2.891766,9.484583,1.459276,-6.683151,-7.964190,6.829117,6.829547,8.288972,5.065753,7.424127,8.907746,4.569961,-8.829761,-8.633381,3.649947,-0.273055,-0.202029,-2.199799,-4.564145,6.022704,-1.009578,7.385070,-9.097768,9.865478,0.877673,5.367605,5.452303,-8.904776,-1.957497,-5.030706,-5.237599,-2.741352,-1.086841,-0.147575,9.452840,1.226937,-9.087432,6.618887,6.495490,-9.265341,7.981406,0.314356,3.445782,-0.155855,2.457533,8.478597,9.837154,-3.094810,-6.554222,-8.524418,-9.426872,4.898061,-5.102959,9.131119,-5.309876,-2.059027,9.695420,-8.498998,-4.865022,-5.445341,0.921139,1.244594,1.266496,-9.477242,-5.218035,4.444865,1.270843,5.602683,6.761825,0.562297,1.495651,6.762129,-7.106468,8.127700,-3.891549,-2.899543,8.098579,-2.857514,2.580614,-8.701333,1.090116,-6.005061,-6.742785,-5.319582,-3.537937,9.595247,-4.106718,0.142116,-5.192410,2.695038,-9.794597,-0.939948,5.909584,4.997502,-9.567897,-1.017926,9.565398,-4.684759,-7.689897,-0.252915,-7.825251], dtype = "float32")#candidate|6197|(3072,)|const|float32
call_6191 = relay.TupleGetItem(func_2801_call(relay.reshape(const_6192.astype('uint16'), []), relay.reshape(var_6193.astype('uint16'), [2, 13, 2]), relay.reshape(const_6194.astype('float32'), [520,]), relay.reshape(var_6195.astype('bool'), [1248,]), relay.reshape(var_6196.astype('float32'), [140,]), relay.reshape(const_6197.astype('float32'), [3072,]), ), 11)
call_6198 = relay.TupleGetItem(func_2808_call(relay.reshape(const_6192.astype('uint16'), []), relay.reshape(var_6193.astype('uint16'), [2, 13, 2]), relay.reshape(const_6194.astype('float32'), [520,]), relay.reshape(var_6195.astype('bool'), [1248,]), relay.reshape(var_6196.astype('float32'), [140,]), relay.reshape(const_6197.astype('float32'), [3072,]), ), 11)
bop_6206 = relay.add(var_6193.astype('uint16'), const_6192.astype('uint16')) # shape=(26, 2)
func_2392_call = mod.get_global_var('func_2392')
func_2397_call = mutated_mod.get_global_var('func_2397')
var_6211 = relay.var("var_6211", dtype = "float32", shape = (270,))#candidate|6211|(270,)|var|float32
call_6210 = relay.TupleGetItem(func_2392_call(relay.reshape(const_6194.astype('float32'), [13, 10, 4]), relay.reshape(const_6194.astype('float32'), [13, 10, 4]), relay.reshape(var_6211.astype('float32'), [6, 45]), ), 1)
call_6212 = relay.TupleGetItem(func_2397_call(relay.reshape(const_6194.astype('float32'), [13, 10, 4]), relay.reshape(const_6194.astype('float32'), [13, 10, 4]), relay.reshape(var_6211.astype('float32'), [6, 45]), ), 1)
bop_6216 = relay.bitwise_and(bop_6206.astype('uint32'), relay.reshape(var_6193.astype('uint32'), relay.shape_of(bop_6206))) # shape=(26, 2)
func_3849_call = mod.get_global_var('func_3849')
func_3852_call = mutated_mod.get_global_var('func_3852')
var_6246 = relay.var("var_6246", dtype = "float32", shape = (44,))#candidate|6246|(44,)|var|float32
call_6245 = relay.TupleGetItem(func_3849_call(relay.reshape(var_6246.astype('float32'), [11, 2, 2])), 0)
call_6247 = relay.TupleGetItem(func_3852_call(relay.reshape(var_6246.astype('float32'), [11, 2, 2])), 0)
uop_6255 = relay.sqrt(const_6197.astype('float32')) # shape=(3072,)
output = relay.Tuple([call_6185,call_6191,const_6194,var_6195,var_6196,call_6210,var_6211,bop_6216,call_6245,var_6246,uop_6255,])
output2 = relay.Tuple([call_6186,call_6198,const_6194,var_6195,var_6196,call_6212,var_6211,bop_6216,call_6247,var_6246,uop_6255,])
func_6262 = relay.Function([var_6193,var_6195,var_6196,var_6211,var_6246,], output)
mod['func_6262'] = func_6262
mod = relay.transform.InferType()(mod)
var_6263 = relay.var("var_6263", dtype = "uint16", shape = (26, 2))#candidate|6263|(26, 2)|var|uint16
var_6264 = relay.var("var_6264", dtype = "bool", shape = (1248,))#candidate|6264|(1248,)|var|bool
var_6265 = relay.var("var_6265", dtype = "float32", shape = (140,))#candidate|6265|(140,)|var|float32
var_6266 = relay.var("var_6266", dtype = "float32", shape = (270,))#candidate|6266|(270,)|var|float32
var_6267 = relay.var("var_6267", dtype = "float32", shape = (44,))#candidate|6267|(44,)|var|float32
output = func_6262(var_6263,var_6264,var_6265,var_6266,var_6267,)
func_6268 = relay.Function([var_6263,var_6264,var_6265,var_6266,var_6267,], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6300 = relay.TupleGetItem(func_6177_call(), 0)
call_6301 = relay.TupleGetItem(func_6178_call(), 0)
var_6316 = relay.var("var_6316", dtype = "bool", shape = (16, 6, 14))#candidate|6316|(16, 6, 14)|var|bool
bop_6317 = relay.maximum(call_6300.astype('float32'), relay.reshape(var_6316.astype('float32'), relay.shape_of(call_6300))) # shape=(16, 6, 14)
bop_6320 = relay.maximum(call_6301.astype('float32'), relay.reshape(var_6316.astype('float32'), relay.shape_of(call_6301))) # shape=(16, 6, 14)
output = relay.Tuple([bop_6317,])
output2 = relay.Tuple([bop_6320,])
func_6328 = relay.Function([var_6316,], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6329 = relay.var("var_6329", dtype = "bool", shape = (16, 6, 14))#candidate|6329|(16, 6, 14)|var|bool
func_6328_call = mutated_mod.get_global_var('func_6328')
call_6330 = func_6328_call(var_6329)
output = call_6330
func_6331 = relay.Function([var_6329], output)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6343 = relay.TupleGetItem(func_6177_call(), 0)
call_6344 = relay.TupleGetItem(func_6178_call(), 0)
uop_6345 = relay.atan(call_6343.astype('float32')) # shape=(16, 6, 14)
uop_6347 = relay.atan(call_6344.astype('float32')) # shape=(16, 6, 14)
func_1502_call = mod.get_global_var('func_1502')
func_1504_call = mutated_mod.get_global_var('func_1504')
var_6352 = relay.var("var_6352", dtype = "float32", shape = (3072,))#candidate|6352|(3072,)|var|float32
call_6351 = relay.TupleGetItem(func_1502_call(relay.reshape(var_6352.astype('float32'), [12, 16, 16])), 0)
call_6353 = relay.TupleGetItem(func_1504_call(relay.reshape(var_6352.astype('float32'), [12, 16, 16])), 0)
output = relay.Tuple([uop_6345,call_6351,var_6352,])
output2 = relay.Tuple([uop_6347,call_6353,var_6352,])
func_6372 = relay.Function([var_6352,], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
var_6373 = relay.var("var_6373", dtype = "float32", shape = (3072,))#candidate|6373|(3072,)|var|float32
output = func_6372(var_6373)
func_6374 = relay.Function([var_6373], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6389 = relay.TupleGetItem(func_6177_call(), 0)
call_6390 = relay.TupleGetItem(func_6178_call(), 0)
uop_6391 = relay.tan(call_6389.astype('float64')) # shape=(16, 6, 14)
uop_6393 = relay.tan(call_6390.astype('float64')) # shape=(16, 6, 14)
func_3450_call = mod.get_global_var('func_3450')
func_3455_call = mutated_mod.get_global_var('func_3455')
const_6395 = relay.const([-0.161943,-2.144213,6.287091,5.263704,-0.681087,8.262464,2.764980,-9.669542,-5.191761,-7.620586,1.739520,-5.650586,-3.109730,7.986775,8.132863,2.651359,0.044904,-5.806541,7.747975,-5.273406,2.438946,-9.857335,4.085360,0.832830,-7.770955,5.120170,2.264397,-9.557162,2.482403,6.017639,0.580917,-5.575025,5.050246,6.902630,-3.257354,-9.347676,4.144937,-5.014034,-1.470531,-8.905816,-0.551953,-6.119877,2.162520,9.128538,4.982080,0.469081,0.941137,4.055963,-5.693943,9.243000,-1.608235,4.774828,-4.298355,-0.650585,4.027688,-4.568495,-3.703646,-9.651804,2.810298,-8.423768,-2.927768,5.693450,-7.872468,-9.549320,8.505745,1.135689,-0.735066,1.651557,5.989819,5.536578,6.040029,-3.285394,-0.115116,4.345104,-6.038917,-2.536712,-6.588855,5.812737,-6.773040,4.237636,2.632598,-3.648028,6.889416,8.792521,1.880064,-1.795661,-6.119291,5.890119,2.631387,-2.347738,-1.156254,-8.260511,7.535860,7.902428,-4.931621,4.915830,-7.420766,5.037622,-3.432145,-5.925948,8.226960,-8.644383,2.794358,-2.329792,-8.475309,-6.249668,-1.518944,9.375171,-7.161661,9.950310,-8.663295,1.250506,-1.986585,-5.863741,8.655012,1.950437,9.463023,-4.182666,4.531723,2.111591,1.956928,-4.412021,6.582103,6.506750,3.805587,-6.819054,-2.273669,-4.629341,-8.121071,6.272980,9.795560,-8.656002,-3.066405,5.653286,0.833330,4.052771,-4.084802,-1.484821,-0.199730,-2.091910,8.270925,3.338520,-0.217965,-5.416054], dtype = "float32")#candidate|6395|(144,)|const|float32
var_6396 = relay.var("var_6396", dtype = "bool", shape = (2, 624))#candidate|6396|(2, 624)|var|bool
const_6397 = relay.const(-1, dtype = "uint16")#candidate|6397|()|const|uint16
call_6394 = relay.TupleGetItem(func_3450_call(relay.reshape(const_6395.astype('float32'), [3, 6, 8]), relay.reshape(var_6396.astype('bool'), [4, 312]), relay.reshape(const_6397.astype('uint16'), []), ), 4)
call_6398 = relay.TupleGetItem(func_3455_call(relay.reshape(const_6395.astype('float32'), [3, 6, 8]), relay.reshape(var_6396.astype('bool'), [4, 312]), relay.reshape(const_6397.astype('uint16'), []), ), 4)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6402 = relay.TupleGetItem(func_6177_call(), 0)
call_6403 = relay.TupleGetItem(func_6178_call(), 0)
bop_6413 = relay.logical_or(call_6402.astype('bool'), call_6394.astype('bool')) # shape=(16, 6, 14)
bop_6416 = relay.logical_or(call_6403.astype('bool'), call_6398.astype('bool')) # shape=(16, 6, 14)
output = relay.Tuple([uop_6391,const_6395,var_6396,const_6397,bop_6413,])
output2 = relay.Tuple([uop_6393,const_6395,var_6396,const_6397,bop_6416,])
func_6421 = relay.Function([var_6396,], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
var_6422 = relay.var("var_6422", dtype = "bool", shape = (2, 624))#candidate|6422|(2, 624)|var|bool
output = func_6421(var_6422)
func_6423 = relay.Function([var_6422], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6425 = relay.TupleGetItem(func_6177_call(), 0)
call_6426 = relay.TupleGetItem(func_6178_call(), 0)
output = relay.Tuple([call_6425,])
output2 = relay.Tuple([call_6426,])
func_6430 = relay.Function([], output)
mod['func_6430'] = func_6430
mod = relay.transform.InferType()(mod)
output = func_6430()
func_6431 = relay.Function([], output)
mutated_mod['func_6431'] = func_6431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6507 = relay.TupleGetItem(func_6177_call(), 0)
call_6508 = relay.TupleGetItem(func_6178_call(), 0)
func_5099_call = mod.get_global_var('func_5099')
func_5103_call = mutated_mod.get_global_var('func_5103')
var_6521 = relay.var("var_6521", dtype = "int8", shape = (96, 12))#candidate|6521|(96, 12)|var|int8
call_6520 = relay.TupleGetItem(func_5099_call(relay.reshape(var_6521.astype('int8'), [16, 12, 6]), relay.reshape(var_6521.astype('int8'), [16, 12, 6]), ), 1)
call_6522 = relay.TupleGetItem(func_5103_call(relay.reshape(var_6521.astype('int8'), [16, 12, 6]), relay.reshape(var_6521.astype('int8'), [16, 12, 6]), ), 1)
output = relay.Tuple([call_6507,call_6520,var_6521,])
output2 = relay.Tuple([call_6508,call_6522,var_6521,])
func_6523 = relay.Function([var_6521,], output)
mod['func_6523'] = func_6523
mod = relay.transform.InferType()(mod)
var_6524 = relay.var("var_6524", dtype = "int8", shape = (96, 12))#candidate|6524|(96, 12)|var|int8
output = func_6523(var_6524)
func_6525 = relay.Function([var_6524], output)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6610 = relay.TupleGetItem(func_6177_call(), 0)
call_6611 = relay.TupleGetItem(func_6178_call(), 0)
output = call_6610
output2 = call_6611
func_6612 = relay.Function([], output)
mod['func_6612'] = func_6612
mod = relay.transform.InferType()(mod)
mutated_mod['func_6612'] = func_6612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6612_call = mutated_mod.get_global_var('func_6612')
call_6613 = func_6612_call()
output = call_6613
func_6614 = relay.Function([], output)
mutated_mod['func_6614'] = func_6614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6658 = relay.var("var_6658", dtype = "float64", shape = (8, 15, 2))#candidate|6658|(8, 15, 2)|var|float64
var_6659 = relay.var("var_6659", dtype = "float64", shape = (8, 15, 2))#candidate|6659|(8, 15, 2)|var|float64
bop_6660 = relay.greater(var_6658.astype('bool'), relay.reshape(var_6659.astype('bool'), relay.shape_of(var_6658))) # shape=(8, 15, 2)
output = bop_6660
output2 = bop_6660
func_6666 = relay.Function([var_6658,var_6659,], output)
mod['func_6666'] = func_6666
mod = relay.transform.InferType()(mod)
mutated_mod['func_6666'] = func_6666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6666_call = mutated_mod.get_global_var('func_6666')
var_6668 = relay.var("var_6668", dtype = "float64", shape = (8, 15, 2))#candidate|6668|(8, 15, 2)|var|float64
var_6669 = relay.var("var_6669", dtype = "float64", shape = (8, 15, 2))#candidate|6669|(8, 15, 2)|var|float64
call_6667 = func_6666_call(var_6668,var_6669,)
output = call_6667
func_6670 = relay.Function([var_6668,var_6669,], output)
mutated_mod['func_6670'] = func_6670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6612_call = mod.get_global_var('func_6612')
func_6614_call = mutated_mod.get_global_var('func_6614')
call_6715 = func_6612_call()
call_6716 = func_6612_call()
output = relay.Tuple([call_6715,])
output2 = relay.Tuple([call_6716,])
func_6733 = relay.Function([], output)
mod['func_6733'] = func_6733
mod = relay.transform.InferType()(mod)
output = func_6733()
func_6734 = relay.Function([], output)
mutated_mod['func_6734'] = func_6734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6735 = relay.TupleGetItem(func_6177_call(), 0)
call_6736 = relay.TupleGetItem(func_6178_call(), 0)
uop_6737 = relay.sqrt(call_6735.astype('float32')) # shape=(16, 6, 14)
uop_6739 = relay.sqrt(call_6736.astype('float32')) # shape=(16, 6, 14)
output = uop_6737
output2 = uop_6739
func_6746 = relay.Function([], output)
mod['func_6746'] = func_6746
mod = relay.transform.InferType()(mod)
mutated_mod['func_6746'] = func_6746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mutated_mod.get_global_var('func_6746')
call_6747 = func_6746_call()
output = call_6747
func_6748 = relay.Function([], output)
mutated_mod['func_6748'] = func_6748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6752 = relay.var("var_6752", dtype = "uint8", shape = ())#candidate|6752|()|var|uint8
var_6753 = relay.var("var_6753", dtype = "uint8", shape = (6, 6, 15))#candidate|6753|(6, 6, 15)|var|uint8
bop_6754 = relay.less(var_6752.astype('bool'), var_6753.astype('bool')) # shape=(6, 6, 15)
output = relay.Tuple([bop_6754,])
output2 = relay.Tuple([bop_6754,])
func_6762 = relay.Function([var_6752,var_6753,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
var_6763 = relay.var("var_6763", dtype = "uint8", shape = ())#candidate|6763|()|var|uint8
var_6764 = relay.var("var_6764", dtype = "uint8", shape = (6, 6, 15))#candidate|6764|(6, 6, 15)|var|uint8
output = func_6762(var_6763,var_6764,)
func_6765 = relay.Function([var_6763,var_6764,], output)
mutated_mod['func_6765'] = func_6765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_6822 = relay.TupleGetItem(func_6430_call(), 0)
call_6823 = relay.TupleGetItem(func_6431_call(), 0)
output = relay.Tuple([call_6822,])
output2 = relay.Tuple([call_6823,])
func_6839 = relay.Function([], output)
mod['func_6839'] = func_6839
mod = relay.transform.InferType()(mod)
output = func_6839()
func_6840 = relay.Function([], output)
mutated_mod['func_6840'] = func_6840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_6841 = relay.TupleGetItem(func_6177_call(), 0)
call_6842 = relay.TupleGetItem(func_6178_call(), 0)
var_6845 = relay.var("var_6845", dtype = "bool", shape = (16, 6, 14))#candidate|6845|(16, 6, 14)|var|bool
bop_6846 = relay.divide(call_6841.astype('float32'), relay.reshape(var_6845.astype('float32'), relay.shape_of(call_6841))) # shape=(16, 6, 14)
bop_6849 = relay.divide(call_6842.astype('float32'), relay.reshape(var_6845.astype('float32'), relay.shape_of(call_6842))) # shape=(16, 6, 14)
func_3713_call = mod.get_global_var('func_3713')
func_3716_call = mutated_mod.get_global_var('func_3716')
var_6862 = relay.var("var_6862", dtype = "uint8", shape = (630,))#candidate|6862|(630,)|var|uint8
call_6861 = func_3713_call(relay.reshape(var_6862.astype('uint8'), [14, 9, 5]))
call_6863 = func_3713_call(relay.reshape(var_6862.astype('uint8'), [14, 9, 5]))
uop_6866 = relay.tan(call_6861.astype('float64')) # shape=(14, 9, 5)
uop_6868 = relay.tan(call_6863.astype('float64')) # shape=(14, 9, 5)
func_2392_call = mod.get_global_var('func_2392')
func_2397_call = mutated_mod.get_global_var('func_2397')
const_6882 = relay.const([8.960583,1.824845,9.836495,-2.736340,-0.606425,-2.622319,4.397606,4.642227,-2.236351,1.031539,-3.876635,-5.113074,0.058180,5.207284,5.417318,-5.591056,-1.836200,-8.295284,5.343118,2.632254,-0.781709,2.507992,4.161722,-6.919532,-6.956179,-8.622135,1.176788,0.494049,-3.824050,3.626599,-6.664129,1.000082,6.193616,9.199125,-5.742978,-4.930229,-9.720186,5.863260,-5.454976,2.467245,9.006021,4.127401,-7.673960,7.322633,-8.940892,-8.708797,3.424205,0.127211,-1.278755,8.383887,5.740653,2.655714,-0.762709,-5.177644,7.852547,5.338583,3.689418,0.121678,5.418905,0.362078,6.005233,4.064571,6.496193,9.456401,5.149020,-3.426711,5.856331,-8.226967,-7.040001,-0.164746,4.358997,7.566246,8.554489,-8.883794,5.679810,-0.407761,-2.908637,6.113072,-0.153401,6.613664,-6.996899,-4.094323,0.043472,9.944382,6.369296,1.496485,4.212724,-4.413392,5.328747,-5.240000,-7.504751,9.717134,-8.374201,-2.600536,-8.114655,-8.372905,3.762007,-8.786726,2.115469,5.630225,4.823895,4.113899,9.054604,1.876476,9.039963,7.331464,-4.534610,-9.624256,-3.402898,8.014470,-9.181373,3.318747,3.457056,-5.856905,8.367362,1.747682,6.514061,0.994516,-7.517686,2.240803,-1.822561,5.909037,-8.321301,8.343756,-0.396083,0.329985,-9.620092,4.690815,-1.368712,5.917568,4.134979,-2.691028,0.656962,2.385835,2.002319,6.668107,8.335302,-5.815133,-3.131935,-8.135935,3.123553,5.663094,-2.990208,4.971610,2.636634,-8.429801,9.166674,9.154061,4.196863,5.014088,5.207480,-8.947326,8.893821,-0.486354,4.977629,9.460512,-1.275408,-4.370102,1.759305,6.856788,-1.648327,1.620726,7.672569,6.634215,8.544212,9.958342,1.981428,3.001183,-4.296218,2.161484,2.320273,-4.603474,6.272556,-0.377190,-6.557656,9.646634,-3.612689,3.346429,5.871833,-4.834334,4.188211,-8.497486,6.462582,6.644749,7.085528,7.982411,0.512941,3.859454,3.792203,9.332985,3.804288,-3.640683,4.498561,7.870748,-0.015407,5.710153,6.740142,5.995072,-7.679975,3.715569,8.252849,-9.189129,-5.665996,7.243465,2.092661,-7.690942,-4.677700,-4.126676,-3.707232,-1.592462,9.134424,-5.076320,9.563145,-9.482997,-0.548372,-2.501812,-3.916257,2.768287,-8.573906,-6.520993,4.035050,-8.706391,-9.125960,-6.708847,6.823139,9.313015,-2.625810,1.285976,6.498810,5.014818,4.952247,9.866703,-0.735928,7.742934,-8.098806,7.675640,-8.353614,2.920284,-9.126623,2.951316,-7.410101,9.944531,-2.705571,0.398131,-8.047619,1.566171,-4.106338,1.278991,8.831226,2.099561,3.851369,-0.589820,-1.473431,-2.158639,1.148397,-6.734835,-1.904411,-7.752772,3.133538,9.316642,9.489981,9.815432,7.753819,-3.505049,2.602381,-2.802463,-6.226994,-2.979832,-8.757001,-5.152054,-3.327074,-3.533830,-1.074790,3.335069,-4.126539,0.090949,-5.103220,1.970343,7.940949,-2.576777,9.333727,1.774884,2.677946,-1.173959,-8.145309,8.267758,-7.924142,-7.457084,0.659968,-6.498018,-2.595104,6.977934,-6.472819,-8.958689,-2.174163,0.076203,-0.930778,-8.667277,-8.347437,4.188404,0.375420,-5.713106,-5.656230,-1.658567,-2.938972,9.368363,-9.092893,0.752536,1.860117,-6.565415,8.186706,8.484937,6.068872,1.604704,7.059869,-6.647008,-7.043530,-0.162638,0.614946,-0.072817,9.827505,-1.434173,-5.275909,-6.610703,-6.529229,2.532626,-6.860133,2.443199,-1.708936,-7.909895,7.297305,-0.300564,1.606371,9.600525,5.489742,-6.871403,9.096926,-0.565886,3.913460,-8.538925,-7.439296,8.916248,-9.942834,-8.727519,1.549226,-9.341997,9.084360,-0.472806,2.811555,-0.508035,7.689724,1.299709,8.496505,-1.809193,7.592269,-3.499413,3.923799,-2.255750,-3.135506,-3.178031,6.323965,3.427543,-4.999821,0.469792,3.485630,-2.745174,2.948515,3.577170,-6.073738,8.838235,-5.530338,4.447542,6.954758,-4.795280,-4.762734,2.682203,5.735072,-8.473658,9.098216,-8.688863,6.972300,3.735246,-3.015069,-8.830724,1.484149,-1.353436,9.363199,6.544646,-1.394392,6.445573,-8.464567,-1.528079,9.022909,3.617404,1.901620,7.431093,4.706389,5.768908,5.350424,-8.700849,2.913300,5.301413,-4.296999,1.258034,-4.649622,3.862418,0.361383,-5.655330,-9.451539,9.886049,8.490802,6.318761,-5.815555,8.274353,-5.308874,-6.050723,-9.789431,-7.344145,-7.036717,3.209234,-1.497527,1.540675,3.339049,-8.154611,-4.900914,0.729041,-5.614398,-5.805731,3.606659,8.616365,7.404444,0.160964,9.886801,-1.684921,2.622997,-5.827237,-7.036010,2.274199,2.443767,3.035961,-3.866343,-8.277929,3.056142,3.313105,-0.500107,-8.089017,-3.005587,0.534544,-6.720050,2.825233,-3.503807,8.380351,2.728884,-7.263851,4.020255,-2.232917,-3.902777,-2.077371,4.259905,-6.805839,-2.410483,7.037853,-9.142340,-2.907931,-3.767065,-1.707169,9.931035,7.865065,-3.815551,-0.638005,-7.923075,7.040734,9.304589,-9.787585,0.402839,-5.990352,-4.183065,-4.858383,-0.345284,0.325582,-7.633227,8.220319,6.815916,6.982264,-6.002461,4.200892,-5.369166,6.435103,9.974352,7.584533,-7.271192,-9.034161,7.124416,8.056538,-4.074385,4.096376,-5.976206,-4.423576,4.840033,-1.276532,6.993876,-4.200600,-8.639240,8.538655,-3.649225,7.968177,-0.145875,0.335246,-3.304982,-1.684717,6.490220,-4.480079,-3.207058,1.115873,-2.804897,-2.755603,-5.940158,8.472356,-8.288614,-6.424217], dtype = "float32")#candidate|6882|(520,)|const|float32
var_6883 = relay.var("var_6883", dtype = "float32", shape = (270,))#candidate|6883|(270,)|var|float32
call_6881 = relay.TupleGetItem(func_2392_call(relay.reshape(const_6882.astype('float32'), [13, 10, 4]), relay.reshape(const_6882.astype('float32'), [13, 10, 4]), relay.reshape(var_6883.astype('float32'), [6, 45]), ), 0)
call_6884 = relay.TupleGetItem(func_2397_call(relay.reshape(const_6882.astype('float32'), [13, 10, 4]), relay.reshape(const_6882.astype('float32'), [13, 10, 4]), relay.reshape(var_6883.astype('float32'), [6, 45]), ), 0)
uop_6886 = relay.sinh(uop_6866.astype('float32')) # shape=(14, 9, 5)
uop_6888 = relay.sinh(uop_6868.astype('float32')) # shape=(14, 9, 5)
output = relay.Tuple([bop_6846,var_6862,call_6881,const_6882,var_6883,uop_6886,])
output2 = relay.Tuple([bop_6849,var_6862,call_6884,const_6882,var_6883,uop_6888,])
func_6891 = relay.Function([var_6845,var_6862,var_6883,], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
var_6892 = relay.var("var_6892", dtype = "bool", shape = (16, 6, 14))#candidate|6892|(16, 6, 14)|var|bool
var_6893 = relay.var("var_6893", dtype = "uint8", shape = (630,))#candidate|6893|(630,)|var|uint8
var_6894 = relay.var("var_6894", dtype = "float32", shape = (270,))#candidate|6894|(270,)|var|float32
output = func_6891(var_6892,var_6893,var_6894,)
func_6895 = relay.Function([var_6892,var_6893,var_6894,], output)
mutated_mod['func_6895'] = func_6895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6840_call = mutated_mod.get_global_var('func_6840')
call_6902 = relay.TupleGetItem(func_6839_call(), 0)
call_6903 = relay.TupleGetItem(func_6840_call(), 0)
func_5304_call = mod.get_global_var('func_5304')
func_5308_call = mutated_mod.get_global_var('func_5308')
var_6917 = relay.var("var_6917", dtype = "float32", shape = ())#candidate|6917|()|var|float32
var_6918 = relay.var("var_6918", dtype = "float32", shape = (864,))#candidate|6918|(864,)|var|float32
const_6919 = relay.const([True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False], dtype = "bool")#candidate|6919|(1248,)|const|bool
call_6916 = relay.TupleGetItem(func_5304_call(relay.reshape(var_6917.astype('float32'), []), relay.reshape(var_6918.astype('float32'), [16, 6, 9]), relay.reshape(const_6919.astype('bool'), [1248,]), ), 4)
call_6920 = relay.TupleGetItem(func_5308_call(relay.reshape(var_6917.astype('float32'), []), relay.reshape(var_6918.astype('float32'), [16, 6, 9]), relay.reshape(const_6919.astype('bool'), [1248,]), ), 4)
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_6946 = relay.TupleGetItem(func_6430_call(), 0)
call_6947 = relay.TupleGetItem(func_6431_call(), 0)
output = relay.Tuple([call_6902,call_6916,var_6917,var_6918,const_6919,call_6946,])
output2 = relay.Tuple([call_6903,call_6920,var_6917,var_6918,const_6919,call_6947,])
func_6948 = relay.Function([var_6917,var_6918,], output)
mod['func_6948'] = func_6948
mod = relay.transform.InferType()(mod)
var_6949 = relay.var("var_6949", dtype = "float32", shape = ())#candidate|6949|()|var|float32
var_6950 = relay.var("var_6950", dtype = "float32", shape = (864,))#candidate|6950|(864,)|var|float32
output = func_6948(var_6949,var_6950,)
func_6951 = relay.Function([var_6949,var_6950,], output)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6612_call = mod.get_global_var('func_6612')
func_6614_call = mutated_mod.get_global_var('func_6614')
call_7006 = func_6612_call()
call_7007 = func_6612_call()
output = relay.Tuple([call_7006,])
output2 = relay.Tuple([call_7007,])
func_7022 = relay.Function([], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
output = func_7022()
func_7023 = relay.Function([], output)
mutated_mod['func_7023'] = func_7023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6840_call = mutated_mod.get_global_var('func_6840')
call_7045 = relay.TupleGetItem(func_6839_call(), 0)
call_7046 = relay.TupleGetItem(func_6840_call(), 0)
output = call_7045
output2 = call_7046
func_7050 = relay.Function([], output)
mod['func_7050'] = func_7050
mod = relay.transform.InferType()(mod)
output = func_7050()
func_7051 = relay.Function([], output)
mutated_mod['func_7051'] = func_7051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6840_call = mutated_mod.get_global_var('func_6840')
call_7061 = relay.TupleGetItem(func_6839_call(), 0)
call_7062 = relay.TupleGetItem(func_6840_call(), 0)
uop_7070 = relay.log(call_7061.astype('float64')) # shape=(16, 6, 14)
uop_7072 = relay.log(call_7062.astype('float64')) # shape=(16, 6, 14)
func_3386_call = mod.get_global_var('func_3386')
func_3394_call = mutated_mod.get_global_var('func_3394')
var_7080 = relay.var("var_7080", dtype = "float64", shape = (1, 704))#candidate|7080|(1, 704)|var|float64
var_7081 = relay.var("var_7081", dtype = "uint16", shape = ())#candidate|7081|()|var|uint16
const_7082 = relay.const([1.371447,9.916922,-8.634448,3.618199,2.413660,-9.789435,-2.620342,-1.661839,6.926129,-1.805144,-1.142815,-3.987692,-7.382549,0.415606,-9.334931,-0.652314,9.984614,-4.442557,-8.925770,-5.008604,2.382570,-9.861690,-0.037475,-6.046082,6.225345,-3.964792,-8.476323,2.120895,1.073636,2.635148,-5.738937,1.781998,7.489262,5.518415,-5.319525,4.621335,-4.457199,0.884173,-1.728331,8.176497,-1.369750,3.646936,-5.459430,6.835117,-5.195680,4.300892,-9.457969,-8.695741,4.212072,6.839074,7.389190,4.319268,7.848733,1.240079,-3.978703,2.099338,-5.662522,1.569959,-6.868333,-6.996733,6.549849,4.846231,1.186238,6.801703,5.025189,-8.222813,9.529926,-6.791694,-3.788526,-4.876505,-7.449192,-4.484987,4.078086,-3.703793,-3.529703,-1.489442,-4.662039,-1.718149,9.943052,-5.671338,-7.496187,9.638572,-4.068578,-9.387115,4.012750,0.746259,2.586026,-3.806693,-9.469470,-3.949117,-3.177529,-8.964989,-5.895608,-1.358491,6.735750,-0.290416,8.941975,2.908999,6.224487,-9.793297,9.045260,0.645513,2.347777,3.713605,-0.999057,5.127245,-0.841501,2.505140,-1.659502,-0.394832,3.907892,7.353839,-8.275053,-4.602080,0.154199,0.307935,8.478147,2.609534,-2.598002,-6.293076,-2.737276,8.872768,9.429939,3.729498,-3.177862,7.894559,-7.668747,-9.786072,-6.296555,-3.035970,-7.024822,-4.666275,-3.978985,-3.156233,-7.511378,1.477796,-4.176824,6.998331,-4.962190,4.139848,-4.840337,-8.206411,-2.819362,9.568945,3.924306,-3.946936,4.018818,4.047825,-5.285926,0.717984,-4.226692,6.007339,3.241471,0.932216,3.142392,2.505624,1.864289,-6.862683,-5.682385,-4.488666,0.682248,5.304916,6.293272,4.073746,9.157916,-5.129296,0.914535,-9.545880,-0.642430,-8.395600,0.715350,0.852218,7.226633,-1.958015,-3.092473,-8.968768,0.620735,-9.442478,-0.303184,-4.378531,-7.246166,-5.562673,-9.730597,3.823635,-9.374587,-7.346850,1.048517,-9.552615,9.849128,-4.783665,-0.839687,9.741979,9.049746,-3.266738,2.455261,9.779290,-6.647156,-9.027466,-0.535141,9.169914,0.937927,-1.587318,-6.736195,-2.316626,2.270221,7.224321,2.877724,2.044575,-8.937241,-5.847183,-9.776214,-1.185283,8.668296,0.995108,-1.089859,-3.770608,-5.745701,-8.802428,-0.735694,-6.461453,2.107059,8.232960,0.230888,7.898574,-9.646980,8.436234,4.654846,8.172970,-8.524450,1.290146,-7.408259,3.691035,-3.036726,0.468025,-9.994966,0.099186,0.755364,-9.718289,8.477567,-5.423752,7.491287,0.099866,7.294988,-0.967073,9.300228,-7.444542,5.186044,8.293758,1.050591,-5.294183,-4.661020,-6.620039,-9.399732,-2.017143,-5.976104,-8.148619,2.126585,5.100320,-4.126150,-8.958466,0.989356,7.963471,-4.145566,-2.953150,4.802418,2.054500,-0.379690,6.633564,-4.354108,3.819971,4.531055,3.022865,3.099628,7.604459,-6.498846,4.270618,1.561556,-4.150358,4.258594,7.876120,-6.967338,0.743151,-9.215665,7.254712,-7.187914,-9.330277,-1.893344,-7.733846,-9.573483,-5.840495,-9.873706,-9.088617,-9.110316,9.441369,3.167208,4.308837,-0.694008,9.165211,7.329373,8.404477,6.443489,6.168782,5.731888,3.676708,-2.806033,-3.148027,6.401082,-1.012878,-1.894067,-5.855717,-9.416757,8.591325,-3.440346,-3.808678,7.982606,2.381754,0.952956,9.275242,7.132303,-9.630585,-0.308539,-4.791334,6.210959,5.424315,-7.423682,9.207015,3.627294,0.719601,8.863164,-1.035179,-7.608318,9.978722,-3.907867,-8.006377,8.034121,4.403305,-5.714861,-1.553836,-3.091156,7.849971,5.752775,-8.573171,1.384565,-7.909651,8.223575,6.799537,-1.919340,0.816970,0.643878,-2.630362,-4.901560,-8.193149,9.383143,-5.250539,5.243637,4.649084,-4.500021,2.059286,0.369387,4.727020,-2.076306,-1.374187,8.852558,-7.924583,-7.780667,-9.495705,-0.147847,1.566491,0.921761,-8.367740,2.287682,9.064401,4.720497,7.410581,-7.818079,9.683596,6.444031,2.980135,6.991169,-0.006711,3.332461,-4.487827,0.307114,3.049453,6.603594,2.434146,9.472324,-7.152068,-1.769725,-0.906581,-6.728680,8.923039,9.313460,2.275595,-4.749278,-9.873649,-9.570700,-7.945567,-7.275765,-7.772616,4.657893,-3.667389,-0.958128,6.091862,-1.985522,1.236994,8.625216,3.011480,1.108738,7.999014,-6.701856,6.938116,-9.443603,-4.813317,-7.171231,-6.885004,9.730550,-9.131776,4.095324,-1.475806,0.440264,3.122615,-3.054714,-7.459518,8.033540,-1.899712,9.858606,-9.783144,9.903190,8.001256,2.574398,4.369885,-1.872008,-0.592685,9.026204,-1.652485,-7.611337,6.779221,-4.295220,-0.017546,9.182620,2.956516,8.854245,-5.404698,-0.613645,-3.292864,6.070968,-5.800941,3.957899,9.110437,5.243358,-7.978954,6.203056,7.997745,6.545328,6.393272,-8.518900,2.071692,-5.271382,-1.298118,4.649764,-4.008964,-3.412881,0.177948,0.318929,-1.115471,-5.132970,-0.768328,-4.239900,2.620122,-7.593664,-5.675734,7.927065,-5.664904,5.436237,-1.578848,5.294051,9.745061,-2.185947,1.356464,9.908857,-4.583270,-2.671008,-0.926766,-9.510726,-4.405597,-9.928372,1.512902,4.375700,-6.441776,-8.285935,2.841556,6.090364,9.247022,4.805328,-4.355083,-6.774329,-2.006920,5.681923,3.597533,-0.891337,-9.849102,-6.282556,-2.269504,5.903447,-5.947417,-6.271056,1.285891,-2.854223,5.045520,-8.879579,5.537973,-2.896764,4.386544,-1.179741,-5.664620,9.054882,7.909849,-8.023385,5.476777], dtype = "float32")#candidate|7082|(520,)|const|float32
var_7083 = relay.var("var_7083", dtype = "float32", shape = (5, 28))#candidate|7083|(5, 28)|var|float32
const_7084 = relay.const([-7.381932,-1.620474,-6.646928,3.416246,-0.024631,-1.834374,8.612592,-6.716999,-3.961996,-7.240527,-6.712607,2.838475,0.297843,7.082478,5.466192,1.406061,-0.020224,3.580166,5.921497,-2.756975,-6.237704,-9.886617,-6.609498,-7.990009,8.136431,-3.903906,-1.679966,-5.244396,4.551899,-1.773090,-4.616331,-9.838008,0.357044,8.942525,-7.423460,-9.126177,-1.332482,-0.306046,9.105181,2.520473,-0.710573,7.754155,-7.316408,-4.822422,7.916249,-6.947356,3.188262,-0.931277,-8.928674,5.252190,8.332218,5.960416,-5.463052,7.302138,-3.987183,-1.383896,-2.176049,3.175357,-1.131860,-4.902809,-7.605039,6.427846,9.230829,-9.550013,3.061337,3.036219,-7.133281,-5.926938,-2.646775,-7.211032,8.507438,6.541887,-6.219186,-4.258063,6.015704,-9.405195,0.201516,6.555748,5.769555,-7.600243,1.463198,-2.259563,-9.514927,-6.104908,-4.749962,5.368496,5.081021,4.862240,-5.139003,-5.386942,3.525266,9.681199,-2.383133,0.879570,7.523725,-4.609338,6.209096,-1.316855,-8.879102,5.469330,5.755385,-3.626282,4.104455,6.877268,2.659081,9.523007,-2.901889,3.786886,6.084896,8.770039,-5.711104,4.475325,-5.133834,1.503152,-1.717033,8.531579,4.753722,7.337070,8.804935,-2.130650,-8.380783,0.350970,6.776650,-2.121847,-6.932350,9.602864,8.088686,-6.695166,-2.911678,-6.437156,-6.885294,-0.009177,0.085349,9.611458,-2.119214,5.936429,1.046344,-6.397280,8.894603,-8.743874,-8.535597,-1.800289,-3.309098,5.843561,-3.976904,-8.498659,3.066829,6.921220,-4.210143,5.580017,-5.864479,4.333559,-6.601758,-8.233847,-5.651557,0.893564,-2.076905,8.819583,-3.634092,2.548256,-7.167273,-3.578181,1.173448,4.665254,-8.572433,-0.091062,3.005477,-8.397468,5.636442,-7.542637,7.297288,-6.908005,1.490261,2.175693,-9.174438,6.399068,-4.159756,-8.584669,6.236892,6.139969,3.145128,-8.424896,2.233211,-3.310524,-2.327023,4.861806,-0.357869,9.623737,4.739186,1.910814,-4.437320,-8.438107,-6.443407,-1.830425,-9.398415,7.977445,2.476512,0.175955,1.647880,-1.993120,-8.191881,4.924439,8.779398,-9.651620,8.807203,4.428143,-5.935007,-7.330621,-1.667238,-1.752200,-0.541274,-2.637516,-0.542639,1.382698,8.570810,5.949545,3.534790,-4.552339,7.623733,5.772392,7.428582,-9.212928,-9.220519,-9.463269,1.788320,-2.741602,8.577235,-2.582445,-0.759229,8.602075,5.756789,0.831255,9.062121,5.682891,-3.147593,-2.573094,2.224577,-2.116892,2.878597,7.573174,8.225362,6.230531,-1.210986,-6.021687,9.053171,7.777294,-0.895081,8.014495,-1.386698,8.020047,9.793353,-7.736352,-9.961965,-2.890473,-2.572905,1.657749,9.372843,-3.822006,-3.816115,-2.417262,-3.577248,-1.780129,-0.836691,-5.196082,-6.425287,-6.434851,7.518461,0.987756,2.602796,-3.547838,1.343300,6.367610,-1.054127,-4.296939,4.476469,-7.393660,-1.845387,-8.190968,-9.580673,-9.856894,-6.984895,-5.393979,5.304543,-5.408346,9.401346,-1.889249,-0.113502,-1.940536,6.365903,8.397582,2.031366,-7.289489,-8.366377,9.981228,-5.077811,4.338031,-7.288412,-2.347993,6.496750,-7.343447,3.996831,2.333599,-3.188200,-9.660910,6.034514,-1.056715,8.673220,-9.839467,-4.789492,-4.027871,0.003967,1.874677,0.331157,-7.102503,-7.211883,-9.826064,3.782836,3.227226,6.539713,-9.606443,4.504172,2.801017,7.201848,-3.599785,2.445092,-7.128719,6.094257,-1.227732,-1.177568,0.114678,9.754830,-3.971175,-7.823485,4.411026,-6.215177,-6.397738,-0.432758,-1.482876,9.811871,0.113886,-8.406024,-6.038006,-7.825039,-0.246146,1.339841,7.321465,7.844413,5.710728,-3.038512,7.632791,-3.464929,-9.375729,-4.053926,6.873464,-6.385162,-0.541716,-2.216510,-3.348504,-3.453488,2.864014,-0.386398,-9.509713,4.565318,1.950951,-3.895057,-7.245706,-6.091450,-4.176441,7.077008,4.220947,-3.049526,-2.618828,-5.254828,8.508377,-3.206279,-3.301547,-6.905416,-7.315428,-2.703465,0.295373,6.361847,-7.292105,-9.695518,-4.745771,-5.822124,4.820280,6.310035,9.260710,-9.232967,-4.803082,-7.508039,-3.681483,-3.022533,-4.939059,-1.210785,7.494928,3.482984,-9.279765,-8.832070,8.019162,-6.859657,-7.331721,5.633334,4.820724,-0.289586,-2.451099,-7.269480,8.646804,5.855912,0.264529,5.063627,7.732047,-2.874544,9.319625,-8.806281,0.099593,7.660573,5.193603,-2.726888,6.309594,-1.878701,5.468375,-8.907010,7.937997,-0.623460,1.688208,-6.414524,-0.752852,-1.599456,1.629464,-7.086299,5.564381,-6.314465,-7.011655,4.109326,-6.269697,1.960844,-2.557058,-5.222705,-4.065508,6.437740,0.340600,-5.957780,-4.443904,4.342170,-0.613414,8.775504,1.682215,-0.798038,-6.938263,9.567327,7.002403,-6.964860,-5.248960,-4.503832,0.293993,5.882282,8.882578,-4.020367,-0.624875,5.238622,8.824456,7.861871,5.120122,5.973931,1.855877,-2.273943,9.591421,9.929994,2.523484,-5.465994,1.776868,4.328878,-2.407526,-1.043992,8.428300,0.711166,-3.704377,-5.874660,-4.816637,9.963335,-1.219884,-3.725263,-0.846401,-5.261527,4.595087,-9.565887,-8.959246,3.987642,5.003045,1.704490,-6.106759,-6.937382,7.114226,-1.177371,-2.547904,-3.897244,8.681449,-4.838536,-2.446182,7.083010,-7.008840,-4.018761,-8.424579,8.501154,4.980967,-5.223982,5.541085,6.402076,4.353544,-6.290998,9.838798,9.533002,7.253923,9.024852,-2.082348,-3.472746,-1.367235,7.290267,-8.910893,6.541198,5.684506,8.494503,-6.322461,-0.732082,-5.841338,9.422984,7.114102,-6.789661,-7.647519,-3.802580,0.533808,2.481503,3.894125,-5.528247,3.850156,4.449106,2.248398,6.445768,3.215979,-1.102595,-9.273866,-9.865551,-6.883269,0.272159,-3.726902,4.855235,-3.569745,3.856889,6.316653,9.005868,7.390717,6.074619,-7.158370,-6.189632,-9.425123,7.995151,-7.969569,-3.920652,0.764173,-9.740563,5.656042,7.254897,-8.942237,8.294724,-2.184006,0.924074,-1.987565,-7.849829,8.529020,-3.674000,2.382718,3.060110,5.320652,-4.265760,0.630297,-0.326303,-4.335184,-1.047865,3.997140,-3.643097,-4.925005,1.035947,3.412787,5.778218,3.536560,-9.207596,-0.079346,-5.899303,-0.906230,-1.337275,2.149512,-0.491637,-7.927433,7.054442,4.207913,9.288441,1.794565,-6.702191,-0.929411,9.656388,2.752384,9.654937,2.733352,-6.920891,-6.015898,8.310391,2.683209,-7.842586,-2.251128,4.878727,5.469054,-2.698320,-6.090967,4.196026,-6.787167,-8.137450,7.565078,6.430674,4.581391,-5.417449,-5.146215,-0.630572,4.083008,6.606323,-7.121757,4.531676,8.735640,-3.452893,-0.343811,5.910977,-4.626051,6.253052,5.283881,8.231319,-4.868109,-2.936405,0.748945,-1.333128,3.051344,0.416602,9.088636,-6.500378,-6.891152,-1.217053,-3.626687,6.770890,9.161115,-0.438093,-6.922324,4.939346,2.996919,4.545844,-8.211957,-6.866545,-5.834443,1.288884,-9.607933,-1.452842,-6.263036,-5.723123,-8.458044,-4.935309,-8.909032,-4.735087,-1.945888,8.439411,-9.319590,-3.317496,-4.229357,-2.783522,-6.855140,-9.034850,7.944774,0.242144,3.847416,8.541340,-9.885645,4.466317,-7.252079,6.707687,-7.909015,3.406561,7.013370,1.522459,-0.251224,-7.530302,-6.847379,1.742742,-1.625018,7.905276,-4.354355,4.993982,-7.994425,9.919737,6.736483,2.862874,9.451779,-5.992604,7.628896,5.362087,0.835123,-0.060037,-3.500724,-2.691729,0.410823,9.024910,-4.842863,-7.934282,4.572168,1.931708,-0.695365,-3.513384,0.929245,-0.312183,2.938154,-6.281665,-6.666416,-3.561334,3.943149,7.645165,-6.131456,-7.773423,2.558812,-0.858162,0.139112,0.156956,-3.547694,3.094402,-6.343727,-5.662627,2.328553,9.606721,-9.896000,2.658300,-6.875219,-9.507501,4.686616,5.537867,2.613511,5.207844,2.729888,-6.483989,8.211334,-6.276761,8.274865,0.884734,5.279924,-0.470311,-9.896226,9.198502,-3.866133,1.620511,1.733337,7.412433,-6.683136,0.606978,7.151652,-4.037973,3.176540,8.378906,8.130823,-3.181352,8.083397,-3.195770,-1.801698,-6.541321,7.448968,-1.286818,-4.077861,9.851692,-7.114732,-2.893087,-5.378041,-2.028529,6.216498,4.004686,-2.874850,-2.181283,-8.517598,6.372290,-3.103780,-6.049015,-0.040137,-3.605086,-9.598491,6.243727,-4.182675,-0.612013,-1.212698,5.438085,-5.575904,7.700504,-1.596928,-1.827509,-2.695774,6.171796,3.233075,5.601765,-5.017341,-4.604034,0.602753,9.788664,-7.492396,1.072977,4.033697,-1.117868,6.916491,-5.254336,3.305305,-2.298547,0.989277,1.362178,7.865073,-4.807569,-1.246981,-2.194931,-4.437746,-4.679560,-3.811938,-9.296657,-2.368484,2.795415,-1.136741,9.540693,9.811121,7.771412,0.426005,0.809059,3.047770,-5.585936,0.275759,-2.658161,-9.624680,-0.366717,-2.482485,-4.695486,4.148386,-8.600440,-8.680156,-8.522456,7.695420,-9.867265,-0.895101,-9.743967,5.474433,0.446653,2.714112,-8.863666,-3.581813,-8.601152,8.513892,2.917223,4.069943,-1.316201,0.040439,5.051611,8.671853,1.539230,4.964974,5.523994,-4.051890,8.220322,-0.795011,-0.371272,-1.798593,4.670941,4.261740,6.141322,-8.221805,-8.317886,-6.446848,1.635514,0.719408,2.506768,-1.027038,8.253472,6.861987,-1.577422,3.648963,8.816017,-1.222563,1.575213,1.568926,-7.557905,9.038244,-8.617459,-6.362567,9.066279,-1.653704,-5.778643,0.563762,-1.849657,8.229670,2.806901,4.454985,-2.306436,9.430757,5.163033,-3.781028,3.433502,7.507993,6.109442,2.806153,4.372511,9.234344,-1.125193,-1.758446,-4.413190,3.973219,-9.574388,-8.560823,-3.900074,-4.909168,-4.605413,2.030147,-3.849854,0.696366,-2.305624,-7.782351,7.068720,-7.778613,4.366326,-1.604981,-7.726955,5.627209,-0.053201,2.702795,6.809496,-6.818645,4.613278,3.216144,-8.452208,9.911124,5.933673,5.689796,-3.318002,-4.275805,-6.475429,7.313023,5.719476,9.317016,-0.523274,-1.993555,-1.753526,3.087299,3.053835,-2.127139,-7.296837,-9.431806,1.361128,-5.517088,6.057276,7.274630,3.979334,-3.319952,7.778206,-6.958953,1.683986,-6.716086,4.136798,7.082013,-0.128395,2.735528,0.044203,7.390492,6.713677,-7.132212,-5.833034,-1.416179,-1.605655,-5.410335,-5.440073,6.234499,-0.860779,4.084067,-9.422688,-0.005792,-7.272741,7.555719,7.709574,0.319172,-5.014982,-5.515831,7.360920,-5.232489,1.515902,-4.336581,5.483154,2.831646,5.683232,5.200978,9.778027,-5.587894,9.400822,-7.386593,-8.899027,1.019662,7.149467,-8.890192,-7.188858,5.134860,3.679364,2.385466,9.320108,-9.856103,-5.584526,-6.594999,4.629194,0.725896,-1.057931,-9.347099,5.240966,1.310192,0.550129,-8.258397,-0.548644,5.769097,4.384914,-6.509267,-3.157194,5.645081,0.554172,-9.934423,-1.702547,4.823392,4.848646,-3.343206,-5.529466,-4.233692,7.941288,7.396860,-0.016262,0.930639,-2.100138,-9.425782,0.593215,7.339425,-4.487111,7.381639,2.205319,1.636777,-2.019941,-9.972487,-4.826202,-5.804407,2.810847,2.568890,2.091169,9.026776,8.786226,-5.780954,2.324522,7.604083,2.888808,-6.561632,3.849685,-5.769441,2.875023,-2.086297,1.761785,9.872123,4.414592,-5.427005,-7.002501,-4.299474,4.758995,-2.587348,-9.975890,-1.089482,-9.951151,-2.182399,1.118817,-8.829524,4.555500,-6.457762,9.700733,1.388720,-4.658330,7.468544,8.640608,-8.888538,-0.853465,3.094851,-9.124091,4.227773,9.395673,0.434786,-6.557607,3.158960,-1.425708,-6.166021,-9.947194,-1.556932,3.717051,5.150214,3.823353,9.805505,-9.629764,-7.750906,8.272807,9.672137,-1.940240,7.896630,-7.224063,-2.155806,-1.413055,5.118674,9.292400,8.872924,8.580411,7.621617,3.671355,1.427120,-5.671312,-1.358981,6.057855,-7.531301,-8.442160,-1.944264,-8.161311,-4.915558,2.422414,4.853116,0.454106,6.399779,8.619583,-5.724440,7.934524,-5.918851,1.236338,6.407101,6.817409,-2.160347,2.986303,-0.272186,-6.554091,-9.371585,-7.083791,-0.690372,8.476354,3.031714,-3.758213,8.200356,2.512359,0.201697,-6.206768,3.613764,-0.772794,-3.964975,-8.176600,-4.962984,0.479393,-0.012384,-8.663424,8.101568,-5.954571,8.530529,-7.354147,-1.634632,-9.466781,0.078830,5.877384,-8.867967,-1.904817,3.165950,-5.528848,9.583145,8.666184,3.710820,-4.925235,5.394049,5.031011,-5.379040,1.763089,6.274870,-1.735787,-5.998687,4.837112,-9.856312,9.274443,-5.721555,7.160875,0.249533,8.372359,-0.974460,-3.589876,-7.008178,-6.263502,3.592376,-2.752377,-5.147054,5.147651,-2.417444,7.390384,2.694283,-2.053986,-4.123174,7.617919,-4.187090,2.463256,3.024639,-2.125410,6.731797,-6.617139,-3.348897,-4.653300,2.907584,-0.467798,-1.523484,-1.144648,-8.867642,-0.008862,-4.509715,2.088268,-3.010115,-1.160016,-1.319942,-4.469190,8.497220,-8.007788,7.219100,-0.024536,5.823085,-0.867697,9.554996,8.037396,1.570016,-6.585356,0.388826,6.193274,-9.620203,6.183378,-7.564143,5.001638,-7.163400,-7.997693,-0.133236,0.651576,7.623097,5.255215,-1.686882,-3.282722,-1.270422,-6.731215,-5.375853,-4.267883,8.923940,5.928728,5.332183,2.081224,5.149671,6.612041,5.398579,2.053525,-4.420545,5.162435,7.266225,-0.203921,-8.978343,8.048939,-9.509238,-8.910662,-2.713508,-0.315836,-5.642061,9.148284,0.412249,6.356530,7.901945,2.846113,8.951734,5.009294,-7.196038,3.360413,-9.583895,-0.135492,-7.960009,-6.027847,-6.092045,-6.526589,-7.939560,-8.849526,-2.940284,-5.636224,-8.630951,2.358753,-9.212120,-5.906543,-3.945919,-0.613493,1.551419,-9.801491,4.790719,-7.864463,0.113804,-6.219188,-4.149118,7.812799,-7.286497,5.676550,1.427128,-7.976290,2.862249,-1.293622,-9.756121,-2.283901,0.180512,1.968877,4.626045,7.933694,-0.232313,-0.428861,-7.740786,2.554869,-7.661695,-7.438186,4.223528,8.244496,7.971695,0.820061,-0.653801,7.600243,-4.399701,-0.132737,-4.404505,-3.842851,2.076399,-9.371276,-0.757090,-3.973668,-0.756967,-1.138168,-3.172640,-8.513285,6.900076,7.986663,0.577417,-2.031582,-3.412767,0.059750,-1.028362,5.590888,-9.374663,7.165371,-8.245953,6.525919,-4.445769,-4.316842,-2.779666,8.806334,-6.647777,2.910807,6.969794,3.885525,0.984086,1.523735,-4.343393,3.238958,-2.062406,6.448116,7.092099,7.190403,-1.326989,-9.664346,-9.272719,0.647118,-3.035918,-1.194842,-5.909672,3.573346,-4.396790,4.842404,-0.903540,4.097854,0.499364,2.537973,-2.115576,2.777635,-2.719906,9.599812,5.842316,-1.500818,4.465304,9.876573,-1.988714,9.826468,0.889593,-5.653056,-7.391538,-1.048551,-2.526342,-7.553842,-0.298522,-9.722535,5.263063,7.013164,-4.852151,-3.283536,-8.601747,5.209646,0.027154,0.562593,1.909528,-0.592199,-0.334307,1.151627,-6.490757,7.053205,5.423653,0.522027,6.092367,5.203594,-7.700935,4.080578,-2.723294,-0.009759,-8.224790,-5.778295,3.044038,3.089688,-7.045590,-2.950917,-0.773479,7.287630,3.036894,-0.103709,-2.749236,-2.388043,4.852539,8.611449,-0.863830,9.469354,-5.167696,-9.145730,-2.715515,1.090524,3.301459,5.441512,9.058203,0.456219,-6.623813,7.180138,-4.222796,8.918604,7.888486,3.589990,-3.231698,-4.576277,-8.166754,-6.195793,-3.789621,9.537628,-0.863132,7.278026,-1.381184,-5.954520,-8.474707,3.749420,-8.012692,7.339432,2.693072,3.050433,0.923814,-0.164722,0.404129,3.224283,-2.631044,8.252182,8.918890,-0.868130,4.434762,-3.467230,-4.289085,-2.104829,7.793711,1.513017,-7.291690,-3.304111,-2.069658,-2.222042,-6.245936,-8.976634,-4.358047,9.283484,-3.902959,9.650797,-0.852295,-2.801353,2.569324,7.902234,-7.299169,-6.862290,-1.359784,-6.530425,6.015389,-8.481086,-8.780337,5.177995,-4.148739,2.554955,-6.015988,-3.664957,-7.642133,-1.601018,-0.309116,-2.560620,-7.343891,4.585314,-3.315127,2.527226,-4.636216,4.715302,-7.358301,-3.441974,0.273298,-0.500410,-3.366077,-2.963791,4.079314,6.364435,7.300065,-0.123590,-6.446812,-7.382117,7.029054,-6.763060,6.410639,9.282265,-7.164402,-6.647173,1.494870,-4.948623,5.216380,-7.049873,2.296199,-2.315882,-0.917185,-1.833844,7.331228,8.319112,-3.884088,-9.058760,7.146695,-7.002715,2.415371,1.615117,6.813915,7.848707,-4.513520,5.483034,8.673022,-0.572167,-4.153664,-7.949939,7.746432,-0.294746,8.808305,0.744327,-4.753838,7.881057,-3.204199,-7.825715,-0.339449,3.713296,-8.969826,-2.470111,-4.728546,0.520476,7.789964,-8.807753,6.451194,-8.429901,-6.587355,9.766025,7.989234,-5.242734,8.429707,9.629400,-1.184792,-9.366501,0.779024,-6.512878,-2.051717,-9.699288,3.900261,-7.489157,-3.603307,-4.485905,5.502839,2.338386,-8.303046,-4.980116,6.737952,9.728089,-2.790358,-4.299488,-1.248512,-8.832175,-9.697045,-5.729245,0.395807,-4.708805,1.470575,-6.470970,-6.613237,-5.831416,-1.912017,-9.565032,-6.665044,6.985186,0.044370,9.807355,8.929215,-4.300871,-7.476097,6.895443,-9.383162,4.539192,-5.291969,-6.115647,-6.796959,4.093838,1.396447,-1.371589,4.028331,6.494872,7.080692,-6.143430,-1.284710,-1.964770,4.157117,-0.984957,1.042325,-2.035652,-0.088398,-9.174744,5.722388,6.083498,9.536436,-4.487720,4.860918,0.159783,-0.086346,0.713316,6.121861,-9.222423,-2.584092,-3.195134,-2.803254,2.678398,9.725379,0.822284,-2.781748,6.308914,-7.387495,-3.028686,8.876884,-4.505965,-1.191931,-8.965688,8.570990,-4.047985,-7.557262,3.654990,3.931635,2.040867,-4.989435,3.178831,0.265997,-9.884302,9.644989,5.803274,8.063457,-6.185654,-8.374248,1.727217,7.777612,4.935189,-8.908643,3.724522,5.138605,-6.278565,3.528337,-0.562239,-9.228314,7.073889,-1.025174,3.709057,-9.542823,7.638063,-5.312329,7.389289,-3.880712,2.407489,1.884944,2.225225,2.496657,7.692436,6.226132,4.654204,-6.670480,3.586483,-2.028095,-5.613995,4.065023,2.965873,-3.992839,0.568515,5.738847,2.529761,1.047693,8.569747,-1.067639,-5.572300,4.114585,-2.722533,-6.122766,-2.932090,-8.866844,3.901703,-1.986962,8.315625,3.718468,8.739246,-5.574059,-8.698899,7.701885,-3.958812,-2.401513,-2.888985,6.155657,7.041023,-6.497492,-9.892643,3.470386,-4.649940,-9.780519,-4.662493,7.329223,-4.116272,9.027898,4.402353,-9.138972,-0.195879,-5.436527,-7.243200,1.081315,5.312574,8.442937,-1.403258,-8.486576,-4.383997,2.702014,-4.393838,2.644150,-5.717415,8.299899,1.316639,5.597962,-8.734778,-8.419915,8.500986,3.847088,-9.922990,-7.179194,9.190126,4.397165,0.455248,-2.800694,3.032045,-4.237525,-7.330994,-8.980277,-0.095843,-0.083099,1.093569,2.594862,-7.804099,-9.510427,-1.494690,-6.415625,9.896600,8.567386,-3.740396,-9.642873,7.726217,1.571822,3.653330,-1.621582,5.984067,-0.965081,5.483052,-4.408385,-6.700791,-3.790668,5.198536,-2.002326,5.471425,-6.622603,-0.441595,1.291403,2.764929,0.401672,-2.957695,-9.292703,-7.824465,3.983393,9.908434,-4.853249,-8.793283,-3.087694,6.641448,-4.117036,-8.540831,-3.141479,0.224652,9.089267,-9.828549,8.274114,-5.101001,-2.380772,5.799764,-2.293661,3.633326,-0.651836,-4.543179,-2.133444,-3.573982,-9.161307,1.073695,4.882993,-2.181472,8.007512,0.293049,-9.112874,5.311695,1.515598,-2.114575,5.720562,-2.192749,9.958547,-3.229284,-1.112982,-8.454610,1.817369,7.017246,-8.267313,0.982102,-9.403375,5.924111,-0.713405,5.112417,1.510136,-5.712019,-7.173327,-6.444723,8.759270,4.653597,7.442234,-8.287344,4.068488,8.581268,6.023637,2.920739,-1.187169,-0.105847,7.797932,-4.365291,1.707945,3.177198,0.235054,8.127494,-2.382851,-2.582815,-5.949500,3.328138,-2.529274,-1.951555,0.881629,3.797434,-9.414735,2.763045,9.394017,-2.714028,-3.155198,-6.786245,2.333686,-2.991412,-6.924168,-8.436622,3.876494,-5.461355,-1.175232,8.536995,6.421852,3.809731,3.083751,7.898091,-2.353918,5.695118,-0.746426,-9.717626,-7.465539,7.228227,8.836346,8.114134,7.338530,-1.476132,-8.811051,-4.755241,-3.550839,6.122359,-6.671516,5.490544,-9.108674,3.192356,-3.093641,8.623070,-1.211628,-6.920118,-1.065895,-3.688767,4.038897,3.175077,-0.744780,3.423332,-6.870213,-0.285520,-3.289035,0.399240,3.421043,7.697030,2.445641,-1.756505,9.473274,1.577837,-5.111896,-9.198340,1.837746,-1.190277,4.383431,-8.581641,-2.939766,-7.498632,-8.294102,-2.231714,-4.597548,-5.792608,-6.013098,6.429887,8.929723,3.645004,-9.426307,4.035337,8.068631,7.258664,-8.034910,-4.255304,0.985558,6.237004,4.605075,7.305329,8.149641,6.670182,-7.600530,5.198941,0.753433,7.719021,-8.956639,1.869833,-5.084669,-9.762625,0.734861,-5.538998,2.581276,-9.386359,3.687589,-1.293056,8.054320,-5.949514,-7.969793,6.394199,-5.086657,5.321186,-7.697695,-1.389415,-2.336629,7.503354,-5.858950,-1.544309,0.681514,-4.285863,-4.510072,0.574628,-6.767524,7.911971,5.896543,-5.771632,6.423810,7.250450,8.247592,9.763133,-4.104159,7.208651,-3.952678,5.346778,-9.393508,-8.576944,-9.080356,2.613613,3.041501,-8.382910,9.005778,-6.990225,-6.670183,-9.634196,1.329695,2.749086,-9.318012,-6.428989,-0.933904,-4.658128,7.050217,2.632890,-9.311299,-1.929617,7.543754,2.209856,-3.319997,-7.143921,6.456029,-8.191809,-0.871806,-2.971397,-3.326772,2.787646,-3.222364,5.802373,-9.714505,-1.088026,5.979248,-2.071360,8.107981,-3.474185,0.940884,-1.678175,3.417167,7.804039,7.805426,4.504346,5.947915,-3.129265,-6.447552,6.648959,5.935625,-2.157424,2.534938,7.518785,-9.895927,-6.543159,-2.285350,-6.991562,5.521342,7.406039,8.920511,-7.861005,7.542665,8.206451,-9.175826,-2.997243,-5.620332,7.643466,3.315509,-7.336299,-5.559317,8.262189,7.120987,-1.718705,-6.055665,6.500356,-8.460847,-0.685586,8.624760,-1.126875,-6.966321,7.816816,6.154771,-2.547817,5.086597,-7.820066,2.024901,0.057583,4.986211,2.136713,7.051797,4.696233,-3.111398,-8.569460,7.147460,-1.431892,9.539101,-8.104487,-5.829584,-9.618966,3.732494,7.712858,-8.441134,-7.296190,-7.109711,3.927264,-7.187537,-5.776406,-5.982089,-6.095702,0.069004,-7.527457,-9.927876,5.780870,8.376311,2.638373,-4.367589,-2.688274,7.677419,-7.148448,-6.292234,8.123420,-2.013086,-8.616491,-8.832125,1.662946,1.948056,4.708772,-2.161085,-7.929008,-8.772594,3.997130,-7.554939,9.447247,-1.987673,6.262236,-5.764981,1.984147,-7.365687,9.138882,0.518743,-8.652650,-6.352255,-8.254045,-2.313423,6.909832,-8.269003,4.112990,-8.380057,-7.456754,-6.919062,5.037028,1.169715,-6.026837,-8.010730,-7.295430,-4.661052,-1.185543,-8.083928,8.776961,7.484014,4.333511,8.685035,-5.110528,-2.059157,-6.037858,6.519559,7.378222,0.645495,-6.132258,3.546131,3.719227,-9.699871,2.209211,-3.786842,8.365814,0.735876,-2.866317,-6.513449,-9.171108,2.981152,1.788445,-3.677653,5.023684,-8.323981,-7.254080,6.053044,0.709797,2.811287,-1.244918,-9.087121,-6.595639,7.156299,-5.896207,0.149598,-7.236581,-1.647502,5.649724,-6.457619,-0.428850,5.803461,-6.146558,-6.648618,-7.740815,-6.691740,3.548222,-1.804337,-1.841047,-2.541621,3.908481,3.169730,2.074631,-1.389429,4.031767,7.272351,5.072157,-6.347117,7.968365,-9.687522,-6.807479,0.167086,3.765211,4.700937,5.845729,-2.064014,-7.906903,-9.761347,4.359721,-1.736867,4.468455,-4.786828,-4.370820,-3.915975,0.573960,8.896580,-8.418801,-7.676221,8.936862,2.812966,8.824074,0.696897,-0.755792,3.159796,-0.985902,-7.119936,-4.764855,1.049187,1.651462,-3.284455,-9.040135,-4.437782,-1.033629,-8.678979,6.991615,-2.422671,3.115180,-4.410967,2.535776,-0.757283,2.237994,9.382175,9.845971,9.526425,0.532506,-4.437487,6.964070,-5.075432,2.989896,2.581873,-1.894760,6.756830,-4.022164,7.795691,-5.061014,0.118439,-0.854565,6.310722,7.844714,-1.148604,-8.158379,-1.146807,-1.496385,-1.590997,6.598519,-9.256778,2.756394,-3.526913,3.289294,-8.078613,8.290803,7.765277,-0.733472,9.361294,0.852235,-8.590827,-0.669232,-9.955269,8.052437,-6.771657,-3.739212,7.758277,2.478862,0.798849,5.474754,-5.935674,-4.339074,9.942806,-4.205511,-2.398062,-6.041832,4.358275,-0.232755,4.567619,-4.829655,-1.100134,-3.551353,3.472027,3.781747,-4.616806,-9.897176,7.957323,2.822825,3.083662,-6.784564,3.613505,3.600413,8.664191,-0.123774,0.846316,1.522856,-3.217774,0.270755,4.412904,-6.907559,-4.868080,-6.290302,5.268456,-4.749037,9.115615,5.777915,4.534519,3.104363,-5.359244,-7.728297,9.297980,4.399395,3.173046,4.729491,-5.982169,0.974070,-3.455961,-6.665023,4.063475,-9.347959,9.532965,8.949319,-8.974665,-5.827702,7.901123,4.081507,-1.290806,-9.037320,9.652779,-8.038062,7.644859,-0.389781,2.263002,-3.925514,7.880794,4.337695,-3.024518,-7.272512,7.236952,4.731652,4.205968,7.451794,1.412332,3.206105,6.969532,-8.344470,5.729238,-6.486666,-9.562043,9.444035,-8.237917,-7.853200,-8.814540,8.603689,6.125521,-4.406124,9.739735,-0.398163,2.878664,-0.786745,6.567697,8.539012,8.374723,9.415012,-9.965019,-9.572326,0.778585,8.373974,2.117503,-4.714980,7.519526,4.571967,-5.549082,-8.110275,0.698987,1.860289,1.714373,-9.576098,-5.099826,-9.099836,-1.142862,5.883933,-0.991735,9.022849,-2.430239,-0.465635,-8.170380,-6.165033,-9.391046,-3.118262,3.802689,-6.389826,6.892983,-5.986170,9.025446,-3.653719,4.784973,5.919680,6.583490,5.241551,-0.704065,9.156154,4.246896,-7.219637,-4.708432,6.622103,-4.479543,4.218677,-0.348821,5.674635,-1.195376,-0.722855,-0.219742,4.731443,-1.861171,3.243348,8.853724,-8.861321,-6.847997,-7.582952,0.613164,4.888276,2.852549,7.943058,-9.750243,2.288040,5.737358,-5.874491,-3.889412,6.579514,-9.910922,6.511170,9.034726,-9.016729,-6.370717,3.577041,-4.776056,0.742896,3.205882,-7.447348,-0.230673,-5.596047,8.975216,4.032500,0.671221,-9.546967,3.010396,4.875116,3.612805,-8.308998,-1.735688,-3.782300,-2.380252,-2.478971,-1.363042,2.999775,8.852400,-3.726159,-4.399309,-6.593835,-8.335854,3.828166,-1.179016,9.281136,-3.395947,-5.581253,6.830431,-7.911693,-7.047168,6.902330,9.641528,8.905315,-6.994755,2.805156,3.461653,-1.286452,-4.554582,5.236856,-8.804960,3.659965,5.179428,5.133322,-0.282635,-2.899451,7.574618,0.341040,7.606562,0.326718,0.700676,-8.200430,-8.963470,-3.491814,6.689760,0.841678,-0.460640,-3.348067,-3.447795,-9.306832,5.201635,-0.839789,-8.473350,5.046339,-2.155892,-2.280610,1.136552,6.278607,9.265023,6.586466,5.324699,4.671149,4.537170,6.552969,0.835865,-8.467015,5.864300,2.343416,-4.184947,1.164521,1.248309,-7.928192,-4.914349,-5.996844,-7.516452,-4.601399,7.285965,0.095069,-8.409958,-8.692237,8.869537,-9.527270,5.034009,-2.495383,1.422278,8.177784,9.761079,9.963167,6.748604,-4.922276,5.823496,4.182621,-0.792490,7.419060,-7.866784,-2.910299,-5.373983,-2.363982,1.386746,-5.037022,-2.733283,7.553180,6.792250,9.244470,9.424011,-3.446990,7.537544,4.291559,3.030865,-9.382559,-9.243916,9.852978,0.060895,3.031323,-0.290098,9.269302,6.246033,6.364745,-0.419914,7.467840,-9.039675,-5.143806,8.089312,8.399697,1.604557,-6.853743,-9.043173,-0.246075,6.881856,-5.155578,2.095601,-1.944520,4.903979,-9.312632,1.577550,1.452336,6.579536,2.598598,9.078674,9.421483,-5.670161,-9.115662,1.386032,-3.763409,-5.379515,5.927175,9.883448,-2.823646,5.268407,-1.968424,-4.139798,-4.911295,7.206413,4.793879,-1.060964,3.651784,-9.287703,3.357700,9.046928,3.423523,7.844971,2.313459,-5.133059,7.073911,-9.722726,-8.129729,8.778160,2.399267,-3.349375,5.181426,2.479879,3.867605,-3.588142,-3.025305,6.428359,-0.667815,-9.505971,7.793893,9.552005,-9.067705,-0.774603,2.708117,8.365858,-4.732778,2.204244,-2.287949,5.915830,-2.452156,-5.807205,7.211137,-9.083915,-7.321925,2.466928,-2.143808,-1.041390,0.040270,2.648962,-7.268110,0.215298,9.019542,-8.782992,6.917047,2.421231,-3.102489,-8.627281,6.977550,2.371018,3.631320,4.854621,4.538482,-4.695467,-8.788353,3.489739,-2.097411,-4.059436,5.574746,7.560054,-6.079517,4.100697,4.332648,-8.752210,-2.987835,-7.781543,-9.799347,4.582057,-9.465312,-8.005162,-0.241110,6.081559,-7.917330,-9.772568,0.981788,6.671328,-0.688011,-1.294988,-5.112653,5.594256,-6.705733,6.878271,0.577887,-8.280830,-5.525524,6.565970,9.460414,-5.005626,-5.753234,5.213775,-2.179644,4.646312,3.592208,-6.065647,-7.154427,1.474582,-8.219165,4.263956,8.694645,8.651703,2.827465,-2.567586,6.179380,-7.397994,3.282624,5.008474,-9.264249,8.822297,-8.645918,-9.334275,0.500363,6.384610,-9.558084,1.998128,9.137060,7.031784,4.494335,6.012106,-3.113803,-6.407444,6.302563,-0.074098,-3.625978,-4.182869,1.296619,5.380902,-2.231357,-5.512669,-2.685493,-4.970209,-3.481694,-9.496945,-7.443394,5.931835,0.074306,-0.101418,3.067899,1.659716,-9.802545,4.197287,-3.999331,-8.741285,3.634442,6.639631,0.149488,9.718951,8.202893,4.245246,8.806611,9.870883,6.751158,-2.814779,-6.064212,-9.015929,6.897134,-3.363250,3.688353,-1.670674,-2.756048,-9.593584,9.229108,6.316723,8.534893,-3.432346,1.870966,9.856803,-5.224298,-4.978397,8.705556,3.333278,-6.602735,-5.212149,4.393190,-7.314241,-2.459381,4.948671,9.387872,1.758298,7.514977,7.691685,2.689706,7.499246,-9.533240,-6.352281,3.343391,-9.993792,1.891865,8.553861,7.386739,-0.573896,-6.365841,-8.191000,7.272905,-1.990902,7.432524,5.447862,-4.355938,-9.800194,-4.937339,2.190677,8.404602,9.124047,-9.063565,9.315662,4.896606,-8.703178,1.313084,4.265147,-7.341947,8.294147,4.668375,-3.012762,-6.618024,1.991174,9.038344,-4.275135,-4.721866,3.970979,-1.560833,1.799920,8.951976,6.944964,-0.619187,5.606104,-8.718760,-9.484634,6.831284,3.940019,-9.906775,8.817737,8.653734,-3.681826,8.466410,8.797489,-2.644528,1.349477,-3.761312,-4.449363,2.330211,0.412952,-5.999673,-9.793041,-1.369703,8.833412,-1.435788,-2.809750,-8.305861,3.425108,-4.016122,0.799713,7.453455,-4.006432,7.391182,-6.369023,-1.590675,-7.691704,-3.237208,9.207472,6.466081,4.026262,3.214904,1.509176,-3.191600,4.499615,4.995114,4.526081,-7.406074,-2.024385,-1.022306,-6.311126,-7.454426,6.025123,4.539700,2.626303,-8.730572,-6.362080,-9.884354,0.539187,8.204769,-0.257930,-2.167451,4.165213,8.426527,-3.502886,1.149557,7.650344,-9.060431,-9.481658,8.627307,-9.070609,-6.146382,1.235886,-4.465345,2.012714,7.173417,7.293009,5.104166,-3.955017,-5.478713,-6.866476,-1.993685,-5.428592,-5.730739,-4.670121,-9.045385,8.134060,-1.082121,-7.920558,-7.900719,-3.036388,2.075397,1.454028,-8.770851,2.944533,-2.169083,-0.886313,9.699749,4.023388,9.216422,8.398852,-2.128142,-9.320116,5.099077,-5.400279,-1.290830,-8.717929,-8.520138,-8.314783,2.887300,3.418481,1.784185,-8.668877,-6.531351,2.380328,-0.659483,-8.244176,5.114821,9.073863,6.331125,-4.875252,-8.173587,7.407254,-7.991098,5.409639,2.618086,-7.583085,6.168017,-9.334297,-7.292014,7.679285,-3.091202,-6.880596,4.584167,1.680118,0.190048,-5.743036,-4.332714,-3.996050,-2.548438,-8.290598,-2.688832,-0.344000,-1.872683,-9.437441,-4.538855,9.002142,1.521735,5.124717,9.935441,4.067752,-8.782421,-8.622537,4.185564,-6.735031,-7.582118,2.883534,0.819553,-3.452803,-2.903039,-4.595411,7.313061,-2.984081,3.756828,7.948991,-3.655165,3.937011,-8.966524,1.780210,-5.570801,2.482754,-0.944225,-4.196287,5.459891,3.120542,1.661576,-2.821006,3.344593,9.496594,-2.371121,4.141955,0.899999,-8.610244,-8.644138,8.306826,4.073582,-4.344486,2.052633,0.144931,8.942411,2.194268,-5.572848,0.523266,-9.600046,6.473934,1.303524,7.005236,5.235920,4.906489,7.917580,9.695599,9.397943,-4.750711,-1.780807,1.675825,8.433397,-1.530969,4.497031,0.108206], dtype = "float32")#candidate|7084|(3072,)|const|float32
call_7079 = relay.TupleGetItem(func_3386_call(relay.reshape(var_7080.astype('float64'), [16, 4, 11]), relay.reshape(var_7080.astype('float64'), [16, 4, 11]), relay.reshape(var_7081.astype('uint16'), []), relay.reshape(const_7082.astype('float32'), [520,]), relay.reshape(var_7083.astype('float32'), [140,]), relay.reshape(const_7084.astype('float32'), [3072,]), ), 1)
call_7085 = relay.TupleGetItem(func_3394_call(relay.reshape(var_7080.astype('float64'), [16, 4, 11]), relay.reshape(var_7080.astype('float64'), [16, 4, 11]), relay.reshape(var_7081.astype('uint16'), []), relay.reshape(const_7082.astype('float32'), [520,]), relay.reshape(var_7083.astype('float32'), [140,]), relay.reshape(const_7084.astype('float32'), [3072,]), ), 1)
output = relay.Tuple([uop_7070,call_7079,var_7080,var_7081,const_7082,var_7083,const_7084,])
output2 = relay.Tuple([uop_7072,call_7085,var_7080,var_7081,const_7082,var_7083,const_7084,])
func_7086 = relay.Function([var_7080,var_7081,var_7083,], output)
mod['func_7086'] = func_7086
mod = relay.transform.InferType()(mod)
var_7087 = relay.var("var_7087", dtype = "float64", shape = (1, 704))#candidate|7087|(1, 704)|var|float64
var_7088 = relay.var("var_7088", dtype = "uint16", shape = ())#candidate|7088|()|var|uint16
var_7089 = relay.var("var_7089", dtype = "float32", shape = (5, 28))#candidate|7089|(5, 28)|var|float32
output = func_7086(var_7087,var_7088,var_7089,)
func_7090 = relay.Function([var_7087,var_7088,var_7089,], output)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_7158 = relay.TupleGetItem(func_6430_call(), 0)
call_7159 = relay.TupleGetItem(func_6431_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
var_7168 = relay.var("var_7168", dtype = "int8", shape = ())#candidate|7168|()|var|int8
const_7169 = relay.const([3,-3,7,9,-10,-7,-6,9,7,3,6,6,-1,-8,-1,-4,-8,-7,5,-4,-7,-9,5,10,-9,-3,-4,-7,-2,-9], dtype = "int8")#candidate|7169|(30,)|const|int8
call_7167 = relay.TupleGetItem(func_707_call(relay.reshape(var_7168.astype('int8'), []), relay.reshape(const_7169.astype('int8'), [10, 1, 3]), ), 3)
call_7170 = relay.TupleGetItem(func_711_call(relay.reshape(var_7168.astype('int8'), []), relay.reshape(const_7169.astype('int8'), [10, 1, 3]), ), 3)
func_707_call = mod.get_global_var('func_707')
func_711_call = mutated_mod.get_global_var('func_711')
call_7175 = relay.TupleGetItem(func_707_call(relay.reshape(var_7168.astype('int8'), []), relay.reshape(const_7169.astype('int8'), [10, 1, 3]), ), 3)
call_7176 = relay.TupleGetItem(func_711_call(relay.reshape(var_7168.astype('int8'), []), relay.reshape(const_7169.astype('int8'), [10, 1, 3]), ), 3)
output = relay.Tuple([call_7158,call_7167,var_7168,const_7169,call_7175,])
output2 = relay.Tuple([call_7159,call_7170,var_7168,const_7169,call_7176,])
func_7196 = relay.Function([var_7168,], output)
mod['func_7196'] = func_7196
mod = relay.transform.InferType()(mod)
var_7197 = relay.var("var_7197", dtype = "int8", shape = ())#candidate|7197|()|var|int8
output = func_7196(var_7197)
func_7198 = relay.Function([var_7197], output)
mutated_mod['func_7198'] = func_7198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_7203 = relay.TupleGetItem(func_6430_call(), 0)
call_7204 = relay.TupleGetItem(func_6431_call(), 0)
func_3713_call = mod.get_global_var('func_3713')
func_3716_call = mutated_mod.get_global_var('func_3716')
var_7217 = relay.var("var_7217", dtype = "uint8", shape = (630,))#candidate|7217|(630,)|var|uint8
call_7216 = func_3713_call(relay.reshape(var_7217.astype('uint8'), [14, 9, 5]))
call_7218 = func_3713_call(relay.reshape(var_7217.astype('uint8'), [14, 9, 5]))
output = relay.Tuple([call_7203,call_7216,var_7217,])
output2 = relay.Tuple([call_7204,call_7218,var_7217,])
func_7226 = relay.Function([var_7217,], output)
mod['func_7226'] = func_7226
mod = relay.transform.InferType()(mod)
mutated_mod['func_7226'] = func_7226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7227 = relay.var("var_7227", dtype = "uint8", shape = (630,))#candidate|7227|(630,)|var|uint8
func_7226_call = mutated_mod.get_global_var('func_7226')
call_7228 = func_7226_call(var_7227)
output = call_7228
func_7229 = relay.Function([var_7227], output)
mutated_mod['func_7229'] = func_7229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mod.get_global_var('func_6746')
func_6748_call = mutated_mod.get_global_var('func_6748')
call_7239 = func_6746_call()
call_7240 = func_6746_call()
output = call_7239
output2 = call_7240
func_7257 = relay.Function([], output)
mod['func_7257'] = func_7257
mod = relay.transform.InferType()(mod)
mutated_mod['func_7257'] = func_7257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mutated_mod.get_global_var('func_7257')
call_7258 = func_7257_call()
output = call_7258
func_7259 = relay.Function([], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mod.get_global_var('func_7050')
func_7051_call = mutated_mod.get_global_var('func_7051')
call_7305 = func_7050_call()
call_7306 = func_7050_call()
output = relay.Tuple([call_7305,])
output2 = relay.Tuple([call_7306,])
func_7313 = relay.Function([], output)
mod['func_7313'] = func_7313
mod = relay.transform.InferType()(mod)
mutated_mod['func_7313'] = func_7313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7313_call = mutated_mod.get_global_var('func_7313')
call_7314 = func_7313_call()
output = call_7314
func_7315 = relay.Function([], output)
mutated_mod['func_7315'] = func_7315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7313_call = mod.get_global_var('func_7313')
func_7315_call = mutated_mod.get_global_var('func_7315')
call_7322 = relay.TupleGetItem(func_7313_call(), 0)
call_7323 = relay.TupleGetItem(func_7315_call(), 0)
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_7326 = relay.TupleGetItem(func_6430_call(), 0)
call_7327 = relay.TupleGetItem(func_6431_call(), 0)
func_3533_call = mod.get_global_var('func_3533')
func_3535_call = mutated_mod.get_global_var('func_3535')
const_7339 = relay.const([-8.409761,8.210538,-3.535804,8.005382,5.913960,4.701366,9.565088,7.280859,4.061697,-5.162902,-5.074095,-9.081717,9.288208,2.986790,6.053548,-2.087075,9.372372,-5.722457,8.789774,-0.677633,2.189276,1.989215,4.087263,3.675524,-8.877052,-8.118729,-9.114441,-2.079982,9.905821,6.217878,-2.360510,-1.218538,3.807249,0.996305,-2.352500,7.429816,-0.698145,-1.965789,-9.502304,-9.983372,0.568961,4.991638,6.080839,0.764627,7.330817,-8.653862,-7.773322,0.897323,6.691731,4.601045,-9.528109,9.638825,2.568534,7.761814,6.579872,3.787703,-8.551243,9.966210,-0.859936,-3.453652,5.516961,4.120761,4.792333,5.902535,-5.253456,8.617545,4.642980,5.877939,-2.430802,-8.095007,-9.903901,1.031552,7.556623,-9.605149,9.704131,6.595689,4.420437,0.862242,-2.590178,-7.383807,4.838186,7.993868,-9.213114,1.573591,8.747574,8.975601,4.265397,6.662110,1.084562,-0.429672,-8.000475,9.332919,5.561570,2.370141,1.786894,-2.414021,9.190888,0.120730,-4.327431,-6.229165,3.559712,2.465018,-5.473538,2.636873,-1.927983,4.597016,4.197296,0.371359,1.568538,-7.688272,-9.604448,6.818872,6.188135,1.413811,0.830254,3.906611,5.359667,-5.887589,8.812659,3.990302,7.638801,7.587010,1.968619,9.637620,7.493149,3.847244,-3.064975,4.010670,-3.394161,7.598172,-7.096902,-4.207805,6.993026,-3.137296,-9.015253,8.018722,-2.854462,-7.848185,8.660431,-0.629245,-6.789173,-3.744863,-2.177688,-4.880918,-5.956770,-0.590873,-4.918822,7.020096,6.353310,3.072281,4.982470,-0.158397,8.033578,-9.543558,-0.875216,5.943908,-9.697337,-8.612998,3.527833,8.006612,-1.736183,-6.889324,-7.319174,8.853299,2.751165,9.290355,6.983335,-1.065329,2.008813,6.297897,2.970301,-4.438950,-6.305407,-9.898096,0.177645,5.526158,-9.625947,-6.036191,8.774226,-2.643925,-8.027319,-3.988295,5.187374,-9.843247,5.846997,4.407722,-2.936853,-1.618944,-0.129663,-3.026573,1.105438,1.722093,-5.209590,-9.576474,4.786164,-7.615586,2.910259,5.131080,-9.928170,6.349654,8.972955,-6.216691,-9.009507,-2.884973,-1.287976,-6.201272,2.292099,1.400976,6.399372,1.702787,-6.303080,5.866447,-1.347305,0.797589,-9.398050,-2.531944,6.589749,-4.569889,-1.724664,-7.113642,4.354855,-0.607855,-6.995005,-0.015921,3.626943,4.176417,-3.790586,3.237190,0.771867,9.696032,0.010261,-4.600864,-7.360408,-9.261932,4.594237,3.462434,2.268823,9.766687,6.571176,-7.024981,-4.481229,1.426854,-6.016044,5.299296,2.980597,9.988157,0.194971,3.217485,-3.160417,-9.987114,-2.280613,2.994955,0.818099,5.622286,-0.582530,8.863623,4.540819,6.758319,-4.800159,-1.381825,1.736775,-9.922374,1.860479,1.758782,-7.647628,6.337015,3.067238,-7.154933,-3.218304,-7.424021,5.789887,2.144259,-6.018125,-8.692311,1.279908,-3.894831,5.206656,2.916506,-8.718799,-9.080617,-7.287392,3.033700,-2.338142,-7.642874,7.094922,-0.822995,8.418064,-8.956197,-0.677782,-8.733919,1.622801,4.085036,2.260386,8.263132,2.949436,-6.315244,9.645557,9.779154,-0.480207,-3.282248,-8.761740,-8.314358,-1.331872,6.910752,-2.305784,8.340256,-3.055919,-7.679107,0.563228,8.960577,2.433074,7.454926,6.066951,3.745267,-0.706419,-7.097540,-6.371616,-5.071402,9.058790,3.711930,7.987755,1.834531,8.967782,-6.376538,2.193901,7.824100,2.095083,9.394292,-5.562368,-8.537443,2.618823,2.495032,-6.465658,-9.941554,-5.661393,8.086754,-0.306979,8.661574,-0.819387,3.559449,-1.563642,-3.164973,5.047737,-8.500114,-0.150464,-3.191185,2.212077,0.434835,-1.967138,4.389520,-7.579012,-7.063905,5.118708,-3.743050,5.702687,0.767400,8.339120,-8.566816,-6.548806,-1.044107,4.253679,-9.576142,-3.851982,-0.982924,9.784795,6.899442,-4.324679,4.885105,-6.870536,3.087742,7.650717,5.129707,3.392175,9.862068,-3.532846,-0.788052,-2.329924,6.105550,4.310677,8.534646,3.690831,-7.475607,1.027889,-7.000397,4.662945,3.010875,-1.328737,8.997645,-5.517471,8.342178,-1.013815,1.993340,-7.912948,-2.227416,-6.519406,7.152538,-4.286951,-8.365638,7.725104,7.728658,-5.006855,6.165116,3.299921,-2.847126,4.964739,0.753041,-9.342067,-2.720331,2.778759,-0.317247,6.160064,9.824323,4.253833,9.362295,-7.837141,0.105381,2.463926,-6.968579,-7.889810,7.647972,-8.803144,8.299970,9.841030,-8.696000,-8.501724,-9.702428,-8.714728,-4.965190,2.038093,-5.034096,-2.940481,4.320972,-4.147722,7.598230,-5.409237,-6.864625,7.579518,2.512551,8.453263,1.412230,-6.365877,9.377141,3.687432,-8.276285,3.119027,7.933225,3.849050,-1.826139,-9.751895,-4.393748,-7.076322,1.921127,-8.947134,-8.573868,-6.610582,-0.780257,0.801317,2.034030,1.708254,-5.703268,-1.441506,-5.321153,-2.130179,9.542031,-3.210596,7.728062,-8.838079,-5.018379,-1.459527,2.919014,-3.577840,3.104730,6.129025,0.340658,1.025095,-2.557577,3.120389,1.208201,5.308285,-2.735644,-0.474269,-6.423145,-7.053326,8.354090,0.839441,-9.180922,-2.526124,1.942751,-6.854939,-0.373057,-4.039869,-5.265054,-2.142878,1.835422,-9.504021,2.967683,-0.539409,-3.751634,4.349960,0.450599,-4.513099,-1.724982,0.551002,-7.774040,-6.747490,3.210373,0.510934,-8.050481,2.664297,7.383585,1.803836,-9.669453,-2.817291,0.604203,5.292340,-9.684477,-6.655941,-2.699202,0.234185,5.366020,-5.449987,-2.027502,-4.644772,2.418578,9.706718,-2.724685,8.318101,-6.749565,8.232896,0.952202,-5.748017,-0.102698,3.797726,-2.551225,1.636043,-1.690868,2.143078,-0.574978,-2.157488,7.888019,-6.397764,-0.735662,4.484860,-2.297436,-1.806292,3.815120,4.746236,2.518445,-9.455895,6.451251,-8.116228,0.686705,1.985532,7.848437,2.599241,2.417308,-8.318271,-9.632132,-2.395209,-7.077971,-2.401241,5.432200,7.813078,-5.559350,-8.559867,-9.239243,-4.496268,-7.327752,8.558597,4.964730,5.163514,-9.242570,-0.641005,2.868221,2.457137,-0.934174,4.762130,-6.939347,-8.367051,-1.452293,-6.984232,6.477454,0.208268,-2.617411,-6.700973,3.751514,-1.343847,7.915780,-0.885248,5.479601,8.860144,-9.548522,2.220742,9.285986,2.163501,5.431220,-4.571195,-3.134825,-5.023129,-7.714869,-6.135251,-6.239462,-2.065787,-4.413603,-7.599505,-9.542507,1.376866,-5.850348,4.924803,-3.289024,-2.674732,8.117790,4.813650,-7.597982,-9.084290,-7.941734,-7.468894,-0.055975,-9.551322,-1.275465,-9.489641,-0.275570,4.806685,8.742735,0.332726,0.048882,8.945166,-8.988259,6.712104,-5.565298,-5.578441,-5.099957,-2.295432,1.280055,3.766579,5.928985,-5.786246,7.667547,1.844823,2.109296], dtype = "float64")#candidate|7339|(640,)|const|float64
call_7338 = relay.TupleGetItem(func_3533_call(relay.reshape(const_7339.astype('float64'), [10, 4, 16])), 0)
call_7340 = relay.TupleGetItem(func_3535_call(relay.reshape(const_7339.astype('float64'), [10, 4, 16])), 0)
func_3713_call = mod.get_global_var('func_3713')
func_3716_call = mutated_mod.get_global_var('func_3716')
var_7345 = relay.var("var_7345", dtype = "uint8", shape = (630, 1))#candidate|7345|(630, 1)|var|uint8
call_7344 = func_3713_call(relay.reshape(var_7345.astype('uint8'), [14, 9, 5]))
call_7346 = func_3713_call(relay.reshape(var_7345.astype('uint8'), [14, 9, 5]))
func_5304_call = mod.get_global_var('func_5304')
func_5308_call = mutated_mod.get_global_var('func_5308')
const_7350 = relay.const(-3.022130, dtype = "float32")#candidate|7350|()|const|float32
const_7351 = relay.const([[7.847759,-4.118965,8.822175,9.639765],[-2.691589,-1.595947,8.144954,1.644351],[5.880166,-1.417201,-4.601211,-2.879561],[6.892733,-0.824007,3.156178,-0.411052],[-9.571074,-0.808466,1.175613,-6.670005],[-9.836233,6.884584,-2.927080,4.813587],[7.458456,-9.928957,-4.406041,-2.927965],[-4.124570,8.158929,-2.366247,-5.231401],[-2.126683,2.453700,-0.616026,4.144541],[-8.459415,-0.783461,7.364129,2.074240],[6.870854,-0.828645,-5.086256,4.650024],[-8.378238,-8.977181,-1.745736,1.919612],[7.952442,-8.871746,7.290536,-8.507069],[-6.383280,-1.256610,2.018380,-3.054115],[2.450948,-0.335327,-2.024296,-6.499457],[-4.890242,8.553909,1.459418,7.622018],[9.669704,-3.028878,5.854003,6.668085],[4.642850,4.514096,9.948791,-6.123130],[8.973150,-8.902219,-9.556807,-7.804535],[8.533347,-9.778265,-9.902534,4.077530],[2.855271,-1.412901,5.255372,1.139229],[-9.172448,1.808923,-6.539337,-4.061517],[-1.082006,2.152496,-4.959475,7.998189],[-2.595967,-9.436824,1.425370,-2.251492],[-5.302378,0.282259,-8.556171,-3.483363],[9.893909,-6.447971,1.192008,0.976747],[7.270224,7.236837,-1.945450,9.433910],[-7.847044,-9.646753,-6.783665,-8.696641],[2.286621,-2.253874,-0.325730,-8.293171],[-3.401016,-5.286691,-9.068927,7.075298],[-8.185211,3.659566,0.707734,8.945137],[-0.914341,3.647976,8.556758,8.863501],[6.606111,-1.274207,5.325012,9.057876],[-8.124806,8.070619,-7.213767,-6.253275],[4.072515,8.551596,0.434546,-6.745244],[-6.052852,-7.347094,-2.921073,2.276217],[3.126792,5.554883,-2.582080,-7.705064],[-0.222416,2.522142,-4.646159,-5.009874],[6.195544,-1.859902,-8.152390,7.761265],[-4.620135,-0.109176,2.655049,-5.064932],[-4.671703,3.079545,-5.994337,7.091378],[-4.765911,0.823824,-6.853533,-9.452050],[-0.305272,-9.914454,-8.156251,3.676020],[3.507834,5.356863,3.322356,2.240803],[8.721517,2.590461,-7.508907,9.982359],[9.707491,9.080424,-3.978330,-7.069779],[-1.270584,1.174445,-5.365265,8.682729],[1.921954,-6.790521,-6.094581,-5.479579],[9.549479,-2.133540,-6.694319,-6.298424],[-9.720205,1.951834,8.748149,2.779086],[7.062964,-2.384506,-9.820860,0.665137],[-6.907779,-0.784091,-7.373139,9.965048],[-5.844296,3.244076,7.831036,9.642518],[-4.467892,-2.977370,-4.533355,6.308948],[-2.606484,0.193069,-2.482631,-1.811467],[-4.841621,4.626209,2.197015,-2.243762],[-9.442594,-7.857679,1.153348,-1.290425],[8.856723,-3.295571,-2.334069,5.011945],[9.351184,9.522468,7.593980,3.324119],[0.444684,-1.469423,9.709295,-7.853723],[4.225106,4.835350,-3.664064,-8.120030],[-7.510151,9.367283,-6.986060,9.607759],[5.875209,8.418115,6.127069,9.250377],[-8.097303,4.483689,-4.516510,0.815652],[6.047305,1.283706,-8.737494,1.901884],[-2.849725,-9.685701,3.469322,-7.133889],[-6.929313,0.036425,-5.929842,-0.557939],[9.806008,-1.953009,-9.234541,6.265005],[-1.401437,8.452285,-2.465518,9.263647],[-8.381435,2.470516,-6.471447,-3.992415],[-1.598038,-9.876477,-7.146730,8.059634],[-8.019537,-1.372504,4.823204,-2.655923],[-1.058441,4.220532,-7.938097,2.835196],[-2.810289,-4.569057,-0.352969,1.775510],[1.864110,-8.256227,8.096367,6.252901],[4.020457,-3.294660,5.847731,3.161141],[-3.586795,-5.123145,8.719892,0.574076],[-1.350906,-5.318023,5.668710,4.883522],[2.298347,-4.629042,3.355675,4.871662],[1.182599,-5.068446,-9.828255,-5.695943],[-6.028767,-8.843253,-5.650994,0.123777],[9.566345,-1.459889,7.016523,6.383272],[7.613897,5.866293,8.117000,7.940000],[-7.770427,3.557572,2.322166,-9.117141],[-4.219608,-9.695626,-7.493089,-6.575394],[2.028677,-9.940400,-0.810284,-6.542701],[-0.025451,8.588876,-5.933811,-9.780838],[-1.272572,3.846969,-1.826130,2.971121],[-4.739786,4.865259,2.404008,5.191270],[-8.514002,1.466665,0.048575,-9.064240],[-0.142965,-9.089681,2.108604,9.508418],[-0.357513,3.037612,-2.225573,-5.867140],[-4.333374,-4.607837,2.527324,2.089722],[1.998527,-5.124404,-8.824080,-1.883038],[-7.088557,3.402044,-2.920479,9.143851],[0.890340,0.319241,5.712409,9.288617],[9.743164,0.452622,7.186194,9.744678],[-9.746878,3.405951,-1.177196,6.647259],[-0.092733,-0.616438,0.940299,-3.408676],[0.034644,5.840466,0.304470,-1.490067],[-0.950934,9.260538,-6.346499,-7.673319],[-9.135838,6.128756,-1.793776,-7.666614],[2.031071,8.234962,-9.790723,-1.051632],[0.531400,2.974226,-1.226758,7.882157],[9.579052,-0.828428,6.392102,-8.306437],[-8.570059,8.904990,-4.570581,-8.618713],[-2.087227,2.414966,6.049783,-4.198079],[2.073124,8.779437,-7.910659,-6.293903],[8.817331,4.089232,1.271146,-2.899513],[-5.338399,-8.663257,5.085915,-9.687942],[-5.738375,0.222077,8.215156,-5.210232],[4.982176,-6.804192,0.316864,9.091733],[2.815772,4.688679,3.023893,2.342913],[0.165452,-7.620446,-1.130157,9.025366],[-5.053812,-0.760896,-0.262189,-7.489245],[-8.520662,9.822126,9.781413,-0.502359],[-4.827818,-3.834178,2.225912,4.746278],[2.327726,-8.397129,-1.132842,8.162529],[-9.995227,5.608707,-6.252790,-6.583404],[-5.523741,-0.405163,-6.970199,6.289071],[2.291692,-1.537883,2.813546,9.973835],[-2.690807,-4.586103,4.691529,2.676637],[7.437202,6.151872,0.503725,-9.152344],[6.324195,0.800053,9.127787,-8.407118],[-9.675641,6.100346,-0.553142,3.723740],[-6.678772,-5.009800,5.811672,0.232418],[-9.255545,-3.401596,-6.125071,6.093166],[-5.802022,-4.420395,4.972367,-1.373764],[7.256685,6.914689,-6.130954,-3.172664],[-0.045578,3.323696,9.921058,-4.313263],[5.498271,5.790991,7.486398,4.026510],[7.694511,2.311310,7.573284,1.075703],[-7.907379,-0.680285,7.294418,0.003533],[9.094805,0.386594,-0.738868,-4.115554],[-2.885504,2.106310,3.121671,5.480342],[-1.843870,4.316804,-5.540890,7.977180],[-7.111095,-8.839003,-9.224601,7.243856],[-4.164906,-1.183185,5.141667,-6.668843],[-2.311237,1.423138,-1.715500,2.531336],[-4.939845,-5.843051,7.419373,5.408417],[-9.446179,2.427866,9.668142,-0.264459],[8.253961,-3.835216,-4.761702,-3.889486],[0.414529,-0.387859,9.079167,-0.700897],[-8.137624,-5.654519,-2.092364,5.917036],[0.401925,-0.826319,-3.898816,-6.201675],[9.089830,-3.053470,6.272724,6.321759],[-6.524726,5.208824,1.818415,9.271965],[-2.777395,9.931230,0.696206,4.059507],[6.074117,-1.832828,1.421598,0.773064],[8.228837,-3.798107,-7.343645,3.910310],[1.354916,-9.038420,3.087076,-6.349078],[-0.939322,-6.982875,3.053247,-0.379961],[1.387967,-6.319322,-7.462983,-9.507834],[9.296554,-2.691726,-2.825122,-1.168396],[-2.148116,-1.507117,4.089879,-7.458461],[-6.257922,0.725154,-4.306953,-2.075045],[-6.947239,-4.926941,-3.231509,9.551074],[5.579668,7.566286,2.652168,9.298696],[3.425862,0.632353,4.430425,-7.592731],[1.258210,2.298214,2.106085,8.181936],[-4.719867,-5.387000,-5.799861,-1.345617],[-5.032149,0.682109,0.225402,1.843288],[-4.304392,2.833363,-8.311453,3.318041],[-4.632096,-4.717069,-0.020153,5.961784],[8.872699,5.262219,7.319559,-0.618449],[-8.778693,-1.071236,-9.535981,-7.862016],[-6.416362,-1.764684,7.751741,-1.774281],[-2.436713,7.957973,5.019906,2.778023],[5.317778,-9.576116,-5.900496,-2.083604],[5.257755,4.428388,-3.439241,-0.318381],[7.127641,-0.241705,9.666458,-0.950429],[2.526589,-9.727703,0.792941,6.698999],[9.474156,9.458704,-0.211568,-9.547080],[-4.910541,-8.220488,8.840411,-0.703338],[3.145407,7.308330,6.356107,1.954271],[3.460913,6.706041,1.036294,7.412908],[5.787751,1.650324,-4.974290,2.453580],[0.703514,-2.965828,-1.491895,9.100207],[7.414890,-4.993891,7.446380,1.142267],[-8.284189,7.320223,5.552462,-3.895790],[5.385466,1.562992,6.798289,3.675738],[-5.769010,4.656258,-1.455207,-6.922437],[0.343810,-5.391644,-2.142496,1.907386],[8.101921,6.143966,-1.351015,0.453739],[5.334974,9.021574,2.480299,8.724675],[-1.722276,-9.684147,6.215725,-3.726346],[-6.275941,8.560741,-1.383350,1.550175],[1.052510,4.156915,-0.262211,-5.092781],[5.766867,-1.159783,-4.053676,-0.254174],[-4.830596,4.819417,1.331337,-3.414846],[-8.143060,0.417259,-0.380145,-1.494796],[0.597623,3.714277,-7.276527,0.540868],[-0.833822,-1.937569,4.012238,1.177170],[-7.925974,7.594480,9.782104,0.035705],[-6.390990,-9.951296,5.549850,-8.097943],[-1.511932,-6.248571,4.682127,-7.562588],[9.351657,-9.844663,4.731090,-7.357017],[-0.145664,-8.574109,3.793202,-0.686408],[-4.098799,-8.494269,8.369979,-1.087531],[0.941337,6.788047,-4.078776,-4.532729],[-2.416083,-2.719781,-3.052361,6.874642],[-3.651899,-7.260809,1.778969,1.696445],[-8.029090,1.422204,9.192053,9.340631],[-4.880940,8.389463,2.944614,-8.000362],[9.272620,3.892846,5.492585,-9.781638],[-5.679559,9.012778,5.136358,8.474678],[1.297724,-5.931453,-9.260664,4.450725],[-5.002335,2.828559,-1.738934,1.409550],[-6.238635,3.271804,-4.299405,-8.570034],[7.070555,-8.034360,-0.131742,-9.146166],[7.435044,-6.099273,-8.842277,-8.586099],[7.861382,-9.003128,-9.206715,2.386176],[0.681973,-6.469083,-1.450728,-3.691157],[8.265967,3.035245,0.228480,6.289140],[-0.418021,-7.338439,3.741566,3.075741],[4.539137,-6.281334,0.350625,-5.571871]], dtype = "float32")#candidate|7351|(216, 4)|const|float32
var_7352 = relay.var("var_7352", dtype = "bool", shape = (1248,))#candidate|7352|(1248,)|var|bool
call_7349 = relay.TupleGetItem(func_5304_call(relay.reshape(const_7350.astype('float32'), []), relay.reshape(const_7351.astype('float32'), [16, 6, 9]), relay.reshape(var_7352.astype('bool'), [1248,]), ), 0)
call_7353 = relay.TupleGetItem(func_5308_call(relay.reshape(const_7350.astype('float32'), []), relay.reshape(const_7351.astype('float32'), [16, 6, 9]), relay.reshape(var_7352.astype('bool'), [1248,]), ), 0)
func_6948_call = mod.get_global_var('func_6948')
func_6951_call = mutated_mod.get_global_var('func_6951')
call_7360 = relay.TupleGetItem(func_6948_call(relay.reshape(const_7350.astype('float32'), []), relay.reshape(const_7351.astype('float32'), [864,]), ), 3)
call_7361 = relay.TupleGetItem(func_6951_call(relay.reshape(const_7350.astype('float32'), []), relay.reshape(const_7351.astype('float32'), [864,]), ), 3)
output = relay.Tuple([call_7322,call_7326,call_7338,const_7339,call_7344,var_7345,call_7349,const_7350,const_7351,var_7352,call_7360,])
output2 = relay.Tuple([call_7323,call_7327,call_7340,const_7339,call_7346,var_7345,call_7353,const_7350,const_7351,var_7352,call_7361,])
func_7364 = relay.Function([var_7345,var_7352,], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
var_7365 = relay.var("var_7365", dtype = "uint8", shape = (630, 1))#candidate|7365|(630, 1)|var|uint8
var_7366 = relay.var("var_7366", dtype = "bool", shape = (1248,))#candidate|7366|(1248,)|var|bool
output = func_7364(var_7365,var_7366,)
func_7367 = relay.Function([var_7365,var_7366,], output)
mutated_mod['func_7367'] = func_7367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_7383 = relay.TupleGetItem(func_6177_call(), 0)
call_7384 = relay.TupleGetItem(func_6178_call(), 0)
func_7050_call = mod.get_global_var('func_7050')
func_7051_call = mutated_mod.get_global_var('func_7051')
call_7387 = func_7050_call()
call_7388 = func_7050_call()
func_5099_call = mod.get_global_var('func_5099')
func_5103_call = mutated_mod.get_global_var('func_5103')
const_7392 = relay.const([-4,-2,-7,-4,3,-2,2,8,-10,3,5,4,-2,-5,8,-6,4,-9,-4,3,-10,10,9,-8,-6,-4,9,-10,-4,-6,10,7,10,6,-9,-3,4,-9,-3,3,7,10,-7,5,-7,6,-2,1,8,-6,-6,4,-2,4,9,5,-9,2,-7,-1,-7,-10,-1,3,-10,-6,7,8,-4,-7,4,-1,-8,8,9,8,6,6,-8,-7,-7,-7,-5,-4,-9,-4,-4,3,7,5,-3,-3,-10,-8,-10,-9,2,-1,-10,7,-7,-2,5,3,1,9,1,-4,-1,-1,9,-7,-7,7,-7,-9,-5,-5,8,-4,8,-2,-5,9,-9,8,2,9,6,-7,10,7,-4,-6,4,1,3,-8,10,-6,-10,6,-10,1,3,-10,1,8,4,2,-6,-8,6,9,7,-6,-10,9,9,7,-10,-5,-8,8,9,-10,3,-7,-7,-7,-2,1,5,-1,2,6,-8,-2,-6,-10,2,-3,1,-6,-4,3,5,-7,4,5,-9,9,-4,6,3,6,-8,-2,8,-7,2,10,4,8,-9,-7,3,-8,6,10,1,-7,-6,-10,-7,-7,-9,-6,6,2,-6,4,2,8,-7,7,4,-9,-3,5,5,10,-10,-6,10,-2,6,6,9,6,-4,-5,9,9,2,3,-7,-1,1,1,-5,10,10,-9,-1,4,10,-6,-3,2,-8,-3,1,-1,-3,-6,7,10,-3,6,-6,1,-10,-6,1,-8,-4,-3,-5,7,-7,6,10,-1,9,-7,10,2,5,4,-7,-5,3,5,-2,-6,7,7,2,-10,-7,-7,-7,8,-8,-5,5,5,10,6,4,3,7,-1,-9,-1,10,-3,6,10,-4,-8,-7,-6,3,-8,-7,-10,-2,5,-2,6,-4,-10,2,6,-4,-4,-9,5,4,1,-4,-6,-2,6,7,5,-2,-6,4,10,-8,9,7,-9,7,4,1,-8,3,6,-9,-3,-5,-7,1,-6,-4,-4,1,3,5,9,-9,8,4,-2,-2,-4,-2,-7,8,1,10,-4,1,9,5,2,9,-6,2,6,2,5,2,-8,7,4,-7,8,-6,-3,-7,4,5,-6,7,2,-3,3,9,6,3,3,6,5,10,-4,-3,10,-10,4,10,7,3,7,-3,7,-10,-3,2,10,-8,-9,-3,-10,7,10,-9,9,7,3,-8,6,-1,-6,-1,-6,-1,1,-4,-6,-4,-6,-1,5,2,2,10,-10,8,-7,2,-9,8,8,-10,3,-1,9,6,4,3,8,3,-8,5,2,-9,-2,-1,-9,7,7,10,9,-9,6,8,-9,3,2,3,5,4,-8,-10,-8,-10,-4,-10,-8,8,4,7,5,-1,8,-10,3,-2,9,-10,8,1,-10,-7,-3,-10,2,-10,-7,-5,-4,-8,9,2,2,4,-1,4,-7,10,9,-6,-9,-8,-9,3,-10,-4,3,-6,7,-8,4,-8,4,-8,9,-4,2,7,6,5,-3,4,5,2,9,-8,2,3,-5,-1,-7,-3,8,10,-9,10,6,-5,-6,-2,-7,-8,-8,4,-4,-8,-1,-9,8,-3,-6,9,10,10,-3,9,-3,-8,9,-4,7,3,-10,7,4,7,6,10,9,10,-4,-1,-7,8,1,1,2,7,8,4,-5,-2,8,-7,-5,1,7,6,1,1,4,1,6,1,-2,-8,5,-10,-3,10,-3,7,2,-5,7,-4,-8,10,1,-7,-4,3,-4,-4,1,7,4,-5,9,-9,6,9,8,-5,1,-5,-9,-6,-3,-2,-6,-8,4,9,3,-2,-3,10,-2,-10,1,10,4,-2,8,-1,2,-7,3,2,5,-3,-6,-10,2,-1,-7,-2,7,-10,-6,9,10,-6,1,-9,1,7,-8,4,-8,4,4,-10,8,5,-1,-3,10,6,-5,-8,-6,4,3,-6,2,8,-4,8,8,-7,8,2,9,-9,-10,3,-3,3,-2,7,-7,-2,5,4,-3,-2,2,9,9,-6,-7,8,5,-6,-10,-2,9,-9,-4,-8,3,8,-4,-7,-6,-6,3,5,-5,4,5,2,10,10,4,10,10,5,8,-6,8,-9,8,-10,6,-8,-9,-9,-4,4,-9,-5,4,-10,3,-7,10,3,-10,10,-6,9,1,-8,-6,-2,7,-1,-9,-5,9,-5,-10,8,3,7,8,-7,-3,5,7,2,5,7,8,-8,6,7,-6,-7,5,-8,-10,-4,-10,-10,-6,-5,10,7,-5,-5,2,8,-9,5,-9,-6,10,9,9,-8,-6,6,-4,5,1,2,-4,-1,3,8,1,-10,4,-2,1,-5,-3,-4,-7,-10,-9,-2,-1,7,-9,8,8,2,7,4,3,8,2,7,-1,10,9,4,-4,-6,7,-4,1,-7,-9,-8,-2,-10,-8,-6,2,-10,7,-1,-8,-6,2,-2,-8,-3,1,1,8,8,6,7,-9,1,3,-8,10,6,6,6,8,-10,1,-2,3,-6,-5,9,10,-1,3,-3,-3,-8,8,2,-3,5,-6,-2,-9,7,9,-8,-9,1,-6,6,5,8,-8,-9,3,-3,-1,7,3,-1,-4,-3,-8,5,-1,5,7,-7,-2,-3,10,-5,5,10,7,-2,2,4,-4,-6,-1,8,2,10,2,10,-3,5,-6,6,10,-4,5,-2,6,3,9,-5,9,-7,-3,4,-4,2,6,5,7,-8,-7,1,-10,-3,8,-10,-7,7,-5,-6,2,1,7,1,5,-6,10,8,-4,9,-10,8,-7,9,-7,-3,4,-4,9,-3,-5,-5,-8,4,-5,-5,-1,4,7,-2,-8,-3,8,-3,3,9,7,-4,8,-9,9,8,9,10,5,2,6,8,-3,8,7,7,-1,10,-6,-2,5,7,-2,-9,10,4,7,7,-3,7,4,3,-2,7,-4,-5,9,-2,-10,9,2,-5,5,8,-8,-7,10,10,-5,-4,-3,9,-2,2,1,3,7,2,-1,-10,-9,1,-1,3,-7,-6,-5,-2,-5,8,-6,-7,8,-4,10,-8,-5,10,2,-3,-10,9,3,4,-4,1,-5,4,8,2,4,-10,-3,-6,-4], dtype = "int8")#candidate|7392|(1152,)|const|int8
call_7391 = relay.TupleGetItem(func_5099_call(relay.reshape(const_7392.astype('int8'), [16, 12, 6]), relay.reshape(const_7392.astype('int8'), [16, 12, 6]), ), 0)
call_7393 = relay.TupleGetItem(func_5103_call(relay.reshape(const_7392.astype('int8'), [16, 12, 6]), relay.reshape(const_7392.astype('int8'), [16, 12, 6]), ), 0)
uop_7423 = relay.exp(call_7391.astype('float64')) # shape=(16, 12, 6)
uop_7425 = relay.exp(call_7393.astype('float64')) # shape=(16, 12, 6)
func_4776_call = mod.get_global_var('func_4776')
func_4781_call = mutated_mod.get_global_var('func_4781')
const_7428 = relay.const([6,9,7,-2,2,-8,2,2,8,-10,-4,-5,-7,-10,1,-2,3,3,-5,10,10,-6,2,10,-2,2,-5,8,-10,-6,-6,-7,10,-9,-4,-2,-9,-7,-6,10,7,-6,1,-6,-2,1,1,-9,8,9,8,-6,-10,7,-10,-6,1,1,3,2,-2,-5,10,7,3,10,5,-6,9,-3,-10,-7,-8,-2,8,10,6,-2,-1,-6,2,4,2,-6,-5,1,7,-8,-6,8,4,-3,-3,-9,-1,9,-9,-3,-2,5,8,-3,-5,10,1,7,-5,-8,-3,-5,9,10,-6,2,-3,-5,4,6,1,1,5,1,-6,10,-5,-6,8,4,-2,-4,-3,8,9,7,1,3,-5,7,3,-3,-4,-3,-6,8,3,-2,3,6,-3,1,10,-1,-8,8,-10,10,-1,-10,-9,-6,-2,-1,-10,6,-9,-9,-3,-3,3,-4,4,6,-6,2,-7,-10,-9,-4,9,2,9,6,-2,-6,-2,-7,-6,-2,1,10,4,-7,-2,-10,2,-6,3,-6,-2,-1,3,-1,-3,1,-8,-4,-10,3,-5,-10,7,10,9,9,6,-8,-10,-8,-3,-10,10,3,-6,-4,1,6,4,-10,-1,6,2,8,6,-6,-5,-2,-10,-6,1,-5,-6,10,10,2,-2,-1,-6,-6,-7,3,-1,-6,8,-9,-4,1,9,9,-5,1,3,2,2,-2,-2,-10,10,8,-10,8,1,-3,3,10,-6,5,-4,9,-7,-7,-7,-4,3,-2,-8,6,-10,-2,2,2,4,9,6,-5,2,2,9,4,-9,-6,9,-10,2,3,-5,-5,-2,-4,4,-1,-1,4,10,-5,-4,-8,4,1,2,-3,-9,-4,3,-9,-9,-1,-3,2,3,-2,10,-2,-10,2,9,8,4,-10,10,-3,-10,-9,1,6,-9,-3,-2,3,9,5,3,-5,3,-5,7,-2,-6,9,2,-3,8,10,-10,4,-10,-7,-2,1,10,-10,6,1,3,-1,-9,-6,8,-7,-8,-10,-9,3,-1,-9,-10,7,3,10,-10,-2,3,6,-5,4,3,4,-2,7,1,4,7,9,-9,-7,-10,-8,1,8,6,-1,-7,2,4,-3,-5,6,6,3,6,4,3,1,-7,-9,-3,3,7,-9,5,4,9,-6,-5,2,-1,7,10,7,1,10,8,5,-1,4,8,-7,-8,-4,2,-6,4,-8,-3,2,4,-7,-7,6,9,-3,-10,4,5,-2,-5,1,-4,-2,7,1,7,-2,2,-2,1,-8,8,-10,-1,10,-3,-5,-2,-3,2,8,4,6,1,-7,-7,-3,8,-10,6,-6,2,5,8,-5,-4,4,5,5,9,-8,6,3,-3,-4,-2,-1,2,8,-5,-2,6,-8,5,-8,-5,3,6,-7,7,-1,2,3,7,5,4,3,-3,-4,-4,5,7,-1,1,5,9,-7,7,6,1,7,7,7,1,-10,-4,-4,-10,5,1,9,5,3,-6,-5,8,-4,4,-7,-5,-9,10,9,6,-1,-3,1,6,9,2,-9,-7,-7,6,-5,-1,-7,10,2,9,5,4,1,9,-4,-5,-1,-7,5,-4,-4,7,-7,7,-2,-3,-2,4,-10,3,-6,-8,1,7,1,-6,-6,6,9,3,4,10,-2,7,-9,-6,9,2,-3,5,10,-9,-4,10,-2,5,-6,2,-9,-1,-1,3,-3,9,-6,10,-4,2,5,3,4,3,-5,9,-4,-4,7,5,2,4,6,6,4,-10,-10,6,3,4,-2,1,3,-1,3,-10,9,5,-7,-7,-8,10,2,-4,3,2,-4,3,10,-8,1,-10,-2,-6,-7,-10,10,5,-7,-8,10,8,-6,-1,-7,1,-5,-8,7,5,-7,-7,8,2,2,6,1,-5,-6,-3,-5,3,-7,-6,7,6,-10,-4,6,4,5,1,-5,-2,5,4,-2,-10,9,1,1,9,-10,-2,6,-6,5,6,-6,-10,4,10,2,4,8,-7,-1,-2,9,7,9,8,-1,-3,5,-9,-9,4,1,-5,3,9,8,7,5,-5,-9,10,9,8,-9,2,8,-1,6,-7,8,5,9,-5,9,-1,-3,8,-4,-6,7,-3,6,1,2,2,-8,-5,-2,5,10,-10,9,-7,-6,6,-2,8,4,3,9,-5,-6,-6,-3,-10,9,8,-7,10,9,-7,-6,-1,4,4,1,4,10,-4,3,5,-3,9,-7,3,5,-9,5,-1,3,-6,-5,-2,10,-9,1,4,-7,1,-10,-10,-4,-7,-8,-10,4,-7,-4,-5,8,-9,7,2,6,8,8,2,6,3,-10,8,6,-4,-6,-9,4,-1,1,3,-9,-5,8,10,-9,-9,-3,4,2,-4,-6,3,10,10,-9,1,3,-4,-3,8,-5,-2,4,2,1,-6,-8,8,-5,1,1,-4,8,-7,2,5,-2,8,1,6,5,-3,-3,2,9,-3,-7,-5,7,-6,-9,6,7,1,-3,2,-1,10,-5,-1,8,-5,5,10,3,-8,-6,-8,-8,1,-8,-9,7,2,-4,4,-10,-6,8,4,-3,-8,7,-2,-6,6,7,4,5,-5,8,-10,8,-1,4,-2,10,-6,7,-1,2,-9,-5,2,-7,-8,4,-3,-5,-3,-2,6,4,-8,-1,-5,10,-1,-7,2,7,2,7,-8,-2,1,-3,-7,-10,-9,7,3,8,-10,-6,2,6,7,-7,-6,-5,4,-8,6,-7,-9,8,2,8,2,6,-9,8,-8,2,-6,2,4,1,8,-6,-2,10,4,-6,4,-10,6,1,-3,-9,10,10,-1,-6,1,-7,10,-7,-7,-1,-8,-6,-9,10,9,-2,1,3,-3,3,2,-6,-9,-7,9,9,-8,-2,3,-10,9,1,4,-2,-2,-2,4,7,3,2,-1,-7,-8,-6,3,3,-8,4,6,-8,10,5,7,9,-5,4,-2,4,2,-10,4,6,8,3,-5,-4,-2,-1,2,-1,-1,-4,-7,-4,6,3,1,-1,1,-5,-6,3,10,9,6,-9,-6,-3,-1,10,-4,7,-4,2,-2,-4,-8,6,-3,-9,6,9,3,3,-10,9,-7,7,5,-7,-8,7,7,5,-10,-10,-4,-8,-2,1,3,-6,-10,-2,-4,-4,-9,10,8,-8,10,5,-9,-3,4,-5,-7,7,-5,4,7,2,1,-2,7,-7,9,3,7,-1,3,9,-6,-7,7,-10,9,2,4,-1,5,-8,-2,-2,-6,-9,8,8,6,7,-9,8,9,-10,-4,-3,-10,3,9,-10,-8,-5,9,-2,-1,6,6,-9,-4,7,1,6,9,3,5,-5,2,-9,3,6,8,5,-6,8,-5,-7,-3,8,-2,-1,4,-10,-6,-9,-8,-7,5,-2,-8,10,-5,10,9,9,-10,-10,6,3,7,-5,7,3,3,2,6,-3,-10,-9,4,4,-10,-2,-2,-10,-9,6,-4,7,-6,9,2,5,8,4,-3,7,1,-10,4,-6,5,-8,-2,-8,-3,-10,-10,8,-8,9,-1,5,-6,6,8,-5,-5,4,8,-6,1,-8,3,-9,8,-2,-4,2,-5,4,-2,6,1,-5,-4,-2,8,-7,5,2,4,4,-5,10,7,-3,4,-6,-1,-6,1,1,-7,10,4,7,6,-6,10,-10,9,-3,5,7,-10,3,10,-1,-2,-9,1,-2,9,-9,-3,5,-6,-6,10,7,8,-1,3,5,1,2,4,-10,-2,-2,-9,9,-7,-6,-8,-7,2,5,8,-3,-8,10,8,4,8,-7,5,4,-10,-1,3,7,3,-5,5,-9,-2,6,-8,2,-8,-5,-4,9,7,-4,-5,8,-4,1,10,2,-9,-1,-9,-3,1,-4,-4,1,-10,-2,8,4,-2,1,7,3,4,-10,-9,3,-10,-5,7,-6,2,3,1,-2,-4,-4,-8,6,-2,-8,1,1,6,8,3,-2,3,5,-5,-6,1,2,8,3,4,9,1,-7,-7,2,-10,-4,-10,-8,5,-5,-5,-6,-3,-2,-10,-2,-2,-10,5,-8,-6,7,-1,-2,8,-5,-2,-7,9,2,2,-2,5,3,6,5,4,-10,7,-3,9,2,-8,6,8,-9,-4,-7,7,-8,-1,-6,7,4,-8,-10,7,-8,-1,-4,-6,1,6,-8,-8,-5,-1,8,7,-1,8,-3,5,10,10,7,9,-6,6,7,2,4,4,-3,-3,9,-10,-6,8,3,10,-3,-9,-3,5,-10,-5,-2,8,2,-2,3,-5,-6,-5,-2,8,3,6,-4,-7,10,1,-10,7,-10,-5,10,-2,-5,-5,1,2,-3,-1,9,-3,1,-1,3,-5,9,-6,9,7,-2,-1,-10,-8,-9,-1,-6,-9,8,-9,8,-6,3,-9,-1,-8,-1,-7,-10,-3,3,-1,-10,-7,10,1,-10,-6,10,-7,2,-3,4,3,4,-7,1,7,8,-10,-10,6,-10,4,10,1,9,-4,-6,1,4,-9,5,8,10,2,1,-3,-4,2,-10,-3,-9,-4,-5,-4,-2,-6,9,-2,2,-10,-6,5,-9,2,-10,-8,2,-3,-6,6,2,-7,-5,-1,-5,-1,3,8,3,-3,5,-1,5,5,-2,9,2,4,-5,6,5,8,3,4,-8,-8,-10,1,2,-7,7,-8,-4,-10,-7,-8,4,-2,3,-5,-1,-3,4,6,-10,-2,-9,-9,3,1,-6,2,-4,-10,-8,-10,-10,2,7,-1,1,7,4,-2,-5,-6,-1,-4,-3,-3,-9,-2,8,-4,1,3,9,-9,-5,-9,-3,3,3,10,10,-7,-8,10,2,-2,-9,5,4,10,-7,10,-6,-6,8,7,1,9,-4,7,4,10,-2,-3,1,6,4,7,-8,-9,9,6,-1,-1,-5,2,6,3,7,6,9,5,9,3,5,6,9,3,-7,4,3,-1,8,-6,-10,-2,-4,2,8,-1,-9,-6,8,-6,-6,-9,6,7,-4,8,7,2,-6,-7,10,-7,4,7,7,-9,6,1,9,-6,2,6,-2,1,5,-4,5,-5,-7,2,-8,6,-10,5,-6,4,-3,-7,1,6,-7,10,-2,-2,-5,-10,7,6,2,9,-4,-7,-3,3,4,7,-10,3,10,-8,10,-10,5,-4,-9,6,-4,-2,9,1,7,-5,3,-6,3,-9,-5,10,7,8,5,-1,6,7,9,9,4,-2,1,-3,3,9,-1,9,-1,3,-10,8,-8,-1,1,-2,5,-5,1,5,9,3,1,9,-8,1,-7,-3,-3,1,-6,2,-6,-10,-4,2,-8,-5,-8,4,-7,3,5,-8,-10,-4,-3,-10,3,7,-6,5,7,-5,-4,-10,-4,-4,8,-9,4,-7,-10,-7,8,4,-4,-9,9,-5,-3,-4,9,7,-4,6,-10,5,1,-6,-6,6,-7,3,9,9,-5,2,-2,3,-7,-4,-3,8,-2,4,5,10,-5,10,-10,-7,-3,-1,1,-1,-5,7,7,-4,10,-7,-8,-8,9,-6,-6,-6,-3,4,-2,-2,1,7,-7,-6,-6,3,-9,6,9,-7,-4,-4,9,-5,-2,-8,-6,-10,3,-9,1,5,-3,8,-1,-6,7,6,-7,-6,7,3,-8,-8,1,4,-1,9,-7,5,3,7,-5,-5,3,1,-5,5,9,8,1,9,-10,6,-9,-9,6,10,8,-2,-7,1,9,-9,9,6,1,10,8,-1,8,-7,6,4,5,5,10,3,-1,-8,2,-10,3,-4,-7,8,-5,-8,4,-2,-7,-8,2,6,6,6,10,-8,-10,-4,7,2,6,-2,-1,7,1,7,-9,-1,-9,-2,6,1,-2,3,-6,-3,5,3,10,-6,-7,6,-5,10,3,2,4,5,8,-5,-3,7,4,7,-1,-4,-5,-6,-7,-4,-10,2,-10,10,-7,2,-5,-9,2,10,-9,4,7,4,-8,-8,5,-2,9,4,-7,5,9,1,-7,5,-7,10,10,-10,2,-7,-6,-3,1,10,-4,-1,8,-4,-3,3,-9,4,6,-8,-9,-9,-3,1,-10,1,-5,-8,-4,-10,-3,-7,-5,-4,4,-1,-6,-2,-3,-5,4,-10,8,-4,10,9,6,-8,8,1,-3,-7,-3,1,1,-8,10,6,5,2,3,-1,-9,9,2,-9,10,-5,4,8,10,2,5,-1,9,8,-7,2,-7,-3,-9,-5,8,-4,5,-10,10,-6,2,-5,-3,3,-9,3,-6,-8,-9,-5,-10,3,-1,-2,-7,-5,-8,-7,1,-8,-5,-10,-9,7,9,9,1,7,-5,4,-9,-8,-9,-7,-5,3,-8,-2,-1,-7,10,-4,-7,4,9,-3,-9,7,-6,-2,-9,-2,10,-6,-2,3,-10,-3,-7,-1,7,9,5,-7,8,3,-4,6,10,7,6,3,9,7,3,6,-9,9,1,-6,-5,6,-5,-5,6,-4,4,-2,-3,10,-4,7,1,9,2,-1,-4,6,1,2,-3,-2,6,-9,3,-5,6,-2,8,9,7,-6,-8,10,-4,-9,-3,-4,-6,-9,4,6,8,9,9,5,-1,-9,-5,-8,-3,8,1,6,6,-6,9,-2,-2,-2,-2,-7,10,-2,4,4,1,5,3,-7,9,1,9,-5,-6,-2,-4,1,-6,8,5,1,-3,5,-10,-5,10,-6,-9,10,8,6,-4,7,-2,-1,-9,4,-9,-8,-3,-9,-10,2,6,9,-5,-7,3,-8,-10,-3,-1,3,-8,-10,-7,-6,4,8,-1,3,3,-6,5,-3,-4,6,-5,-5,1,4,6,4], dtype = "uint32")#candidate|7428|(2535,)|const|uint32
var_7429 = relay.var("var_7429", dtype = "uint64", shape = (1755,))#candidate|7429|(1755,)|var|uint64
call_7427 = relay.TupleGetItem(func_4776_call(relay.reshape(const_7428.astype('uint32'), [13, 13, 15]), relay.reshape(const_7428.astype('uint32'), [13, 13, 15]), relay.reshape(var_7429.astype('uint64'), [1755,]), ), 1)
call_7430 = relay.TupleGetItem(func_4781_call(relay.reshape(const_7428.astype('uint32'), [13, 13, 15]), relay.reshape(const_7428.astype('uint32'), [13, 13, 15]), relay.reshape(var_7429.astype('uint64'), [1755,]), ), 1)
bop_7436 = relay.floor_mod(call_7383.astype('float32'), relay.reshape(call_7387.astype('float32'), relay.shape_of(call_7383))) # shape=(16, 6, 14)
bop_7439 = relay.floor_mod(call_7384.astype('float32'), relay.reshape(call_7388.astype('float32'), relay.shape_of(call_7384))) # shape=(16, 6, 14)
var_7440 = relay.var("var_7440", dtype = "bool", shape = (16, 6, 14))#candidate|7440|(16, 6, 14)|var|bool
bop_7441 = relay.logical_and(call_7387.astype('bool'), relay.reshape(var_7440.astype('bool'), relay.shape_of(call_7387))) # shape=(16, 6, 14)
bop_7444 = relay.logical_and(call_7388.astype('bool'), relay.reshape(var_7440.astype('bool'), relay.shape_of(call_7388))) # shape=(16, 6, 14)
uop_7448 = relay.atanh(uop_7423.astype('float32')) # shape=(16, 12, 6)
uop_7450 = relay.atanh(uop_7425.astype('float32')) # shape=(16, 12, 6)
uop_7452 = relay.erf(uop_7448.astype('float32')) # shape=(16, 12, 6)
uop_7454 = relay.erf(uop_7450.astype('float32')) # shape=(16, 12, 6)
func_4146_call = mod.get_global_var('func_4146')
func_4149_call = mutated_mod.get_global_var('func_4149')
var_7457 = relay.var("var_7457", dtype = "float64", shape = (1232,))#candidate|7457|(1232,)|var|float64
call_7456 = relay.TupleGetItem(func_4146_call(relay.reshape(var_7457.astype('float64'), [7, 16, 11])), 2)
call_7458 = relay.TupleGetItem(func_4149_call(relay.reshape(var_7457.astype('float64'), [7, 16, 11])), 2)
func_1502_call = mod.get_global_var('func_1502')
func_1504_call = mutated_mod.get_global_var('func_1504')
const_7466 = relay.const([-8.516831,4.685970,-7.368307,6.786250,6.766028,1.736045,-6.493617,-8.537913,-7.922046,-4.171108,9.255228,4.806995,0.441470,8.083521,3.238792,-2.463528,-7.800685,2.353529,2.013352,-3.249127,7.523075,-7.777669,4.888229,-3.928400,-1.133283,-2.331108,-3.159344,9.096079,-4.999221,-6.755999,-6.965063,7.590109,-5.462993,1.412466,8.702670,-1.451264,3.410571,-2.469132,5.343022,-8.369594,7.059522,-0.885779,-4.077284,4.065910,-2.024893,8.574350,-3.214296,0.142293,2.637210,-7.231780,3.830471,-7.793080,-8.354771,1.300780,2.016360,6.815084,-1.198863,-8.223742,-5.087716,2.023221,-1.300854,1.887080,7.594880,6.530813,2.490782,0.181094,1.996197,0.370258,-2.642260,9.678358,0.867192,-8.227421,-0.637658,-1.242281,-4.391842,-6.500238,-2.714244,-6.905119,-1.435610,0.711888,7.277417,-0.984281,-9.912400,-1.976102,0.506670,-5.968626,6.414908,-0.759919,-9.137772,-9.154331,3.052010,1.011995,-5.930875,4.488355,2.974289,-2.169007,-1.740183,8.212285,-7.438940,7.642961,-1.231280,-6.753464,6.759003,3.703924,-3.377653,-1.700613,-3.278968,2.987190,9.210525,-6.762381,9.612235,-2.706999,5.969140,-5.869218,6.114493,9.232486,-6.686408,9.758802,8.085389,9.329620,-9.328677,0.589623,9.772977,2.333434,3.340388,4.819956,-2.697100,-8.058598,-1.883631,-6.636284,2.410862,2.423268,9.024765,9.501066,8.426322,-1.206673,-0.156112,8.108908,0.904463,6.255853,-9.325468,5.423587,-7.042204,-1.112353,1.406236,-4.924304,7.680233,-2.041252,0.533280,0.778041,-5.844315,-9.669819,9.459533,-4.591888,6.767730,5.531362,-8.464208,-6.556498,0.811068,8.413447,2.380523,7.990070,7.903814,-8.553858,6.653216,-9.674771,2.046414,-6.953477,-5.260040,3.140687,-2.565492,7.029850,-8.913885,4.951136,-4.641066,-9.838078,2.624120,-2.572716,8.602100,2.967365,-4.060669,-0.020701,-2.467619,-5.137549,7.554927,-0.733428,7.567519,-1.227122,-3.716321,3.732420,0.626874,-4.818438,9.105301,3.327087,3.045660,1.994572,-5.359226,-1.686947,-0.242792,5.268067,-5.901766,-7.075890,6.283902,4.078635,-1.368901,2.324931,-0.982666,-3.137079,-7.909920,-0.011023,-4.054676,-1.020347,9.577225,-9.080577,8.763496,7.363405,1.844954,9.630929,6.432579,-3.282315,0.622977,5.285737,-5.881174,9.897807,7.760882,-2.788387,6.103706,4.166399,2.521444,3.930719,0.780217,0.440445,-4.956997,-3.822318,4.933835,6.889482,-4.890390,6.156186,7.545075,4.514992,-0.920501,-2.696009,-8.218823,8.025082,8.406147,7.619499,7.721497,-4.055406,9.337163,9.178433,2.857579,-0.218545,2.376879,-8.317912,-7.354377,-3.262329,-1.405004,6.937404,-5.536186,-0.310400,1.904619,-3.684024,-7.058525,-8.484004,8.445058,6.760646,-4.782707,-1.379981,1.644888,-7.517252,8.785983,-2.613950,-5.805348,-5.361509,-7.840430,-8.649291,-0.405711,6.165535,7.116944,9.855258,3.896651,-8.327204,-7.993361,-1.276368,7.402617,7.471380,5.387800,-4.436390,8.852770,-2.452366,-9.697124,1.575243,6.216196,8.654172,-3.723154,-5.905346,5.776184,-0.847170,7.481622,6.504806,3.928515,6.132695,5.112708,-8.921092,3.666506,-8.651827,-8.732699,-2.683928,-6.977296,-3.625992,-5.773582,8.573438,4.029936,9.918705,-4.093870,-7.850235,-7.884757,-0.720624,4.598774,-6.117023,3.920560,-8.876191,7.340519,3.676510,7.024981,-2.799784,-5.511851,4.483196,7.455401,3.184207,-0.399838,-3.137035,7.307321,-1.083076,4.668795,5.022892,4.941056,-5.315685,3.916054,6.058983,-8.405305,-6.014162,0.370377,-9.271954,2.431897,-0.232484,8.047801,-0.933522,7.806730,-5.604195,5.793769,1.017712,2.718243,3.254639,3.220981,7.202686,6.581486,3.803023,-8.239006,6.042018,4.072687,0.820485,-8.053174,4.913983,-4.830968,3.574049,-7.604244,-1.078944,-7.317457,-5.985253,-2.325926,3.181068,2.700764,-8.699617,9.222521,5.183854,8.117754,1.047433,-7.071767,4.710456,-8.104922,1.683465,7.868188,6.091054,5.222301,-4.228460,5.665852,2.100715,-3.528148,-1.074841,-0.444904,-7.587807,-2.183485,0.971784,-5.000478,2.265782,7.376302,9.422700,2.538479,4.042959,-1.958569,-6.299510,8.384863,4.206270,-7.901680,0.051838,3.365452,-1.979784,-5.561941,3.898911,2.599050,4.246452,8.302380,1.468012,3.721065,2.365193,-1.503285,-8.532999,-0.771063,1.672922,3.532062,5.694959,-5.268590,4.056103,4.165200,-4.789752,2.548941,-7.973234,-8.719550,0.975015,-5.281951,-5.089518,2.447485,-4.496130,-1.066240,-2.733086,1.824771,-4.430854,8.543090,-7.983248,-4.828072,4.930586,-8.699552,-0.029845,-4.475263,0.358411,5.393569,4.571417,-0.106444,-1.322304,-5.018374,-3.380042,-9.759164,3.777528,-0.881737,-3.598234,-9.170042,5.766139,3.521410,-8.868911,5.848438,-5.223769,2.742793,8.118749,-0.727480,-5.863580,-3.230045,-1.449453,7.499820,2.516557,9.203779,8.702832,5.849644,-9.153573,-9.816815,-1.373026,-7.392373,-5.556611,8.361184,7.915994,9.370115,-1.142150,4.346097,-6.670650,-5.421204,-6.377729,-8.858633,-7.385872,-4.975433,-5.174275,3.469301,6.808278,-8.739268,7.412940,4.852457,6.093829,-2.879254,6.395356,-0.224069,-3.666720,8.605190,-6.576203,-2.882541,1.655900,2.299053,-0.498609,4.682538,8.319463,4.768182,6.038147,4.536734,-0.737980,-1.068021,0.580932,6.991582,4.746541,1.558248,-7.184380,-1.766516,-4.356056,-0.623778,-7.638795,-6.603036,0.241467,-8.453358,3.727333,0.062783,1.238830,6.785869,-2.030811,7.544028,6.850743,1.413226,-4.186362,3.285878,9.994960,6.813588,6.239413,1.613428,-5.267307,6.077481,-8.183960,1.856977,-4.728616,-7.477444,0.615713,3.024045,-7.782954,2.552626,-8.422951,-2.038571,-9.746736,-6.464151,8.957172,-3.137161,0.061642,1.509808,-1.613802,-5.818973,8.873042,0.286369,-2.816866,3.657145,4.131468,2.883610,-2.180237,7.153304,-1.824644,-6.848133,-6.318227,8.446083,1.906321,5.941882,1.614621,-7.720265,-7.263913,3.243527,-3.586238,-7.901202,8.322395,-4.553102,0.098453,-7.146316,6.520841,1.616778,7.302746,4.315939,-1.702936,-2.059115,-7.693809,-8.842002,-3.223386,7.119007,2.803648,-4.646425,-7.027948,-9.290973,4.997588,1.888643,3.943232,-3.399798,9.681665,9.863863,-1.968069,6.274075,9.714151,1.386697,3.803113,-8.660536,-8.173005,-4.145183,6.299551,-5.143010,2.535176,5.851755,9.593284,-0.651652,-1.455091,-7.071768,5.321311,1.201318,2.986491,4.469117,-7.564161,1.502809,-1.280856,2.408541,-5.660373,-6.614143,5.633794,9.433476,8.941719,8.371061,2.821324,-9.427340,9.248416,8.856912,0.060498,7.253166,3.591119,-6.531512,-2.847225,0.402223,-9.598448,8.915648,-4.574025,-7.991293,-4.934747,0.627216,9.061953,-4.037224,2.317080,1.001843,-1.129237,-5.746418,-4.070502,-5.667316,-4.586045,5.137438,6.234461,-6.410497,6.677780,-3.108267,-1.072864,-4.287484,0.752884,-3.754762,-5.452411,7.133903,6.886703,-2.658755,3.708322,-3.000596,6.312144,-1.271683,-8.155834,-2.096870,9.945876,8.470953,-0.659438,5.521001,7.406193,-6.453980,7.996840,-2.125280,-2.261460,-6.796212,1.221014,1.207550,8.443569,-1.272335,3.416599,6.957229,7.472047,-0.896069,-2.381511,5.149298,-9.922587,-9.221727,-0.839521,-0.309185,1.164584,-4.256485,9.761831,2.558070,4.081595,4.981347,-7.437665,1.392601,1.651923,2.050196,6.894215,3.981369,3.136424,7.901135,0.777763,-4.184425,8.874150,2.012869,-9.094113,1.445434,-6.651673,-8.343726,2.548091,-7.585614,-4.011773,2.568976,3.774844,1.824293,-9.858912,-1.435594,-4.130807,-7.635212,1.123456,-2.066449,6.258890,7.062319,-2.355812,-5.269180,2.194076,7.428958,4.529906,5.586867,6.301895,4.393723,3.473049,8.742154,-2.076945,0.725633,-3.444614,5.024820,6.362719,4.957406,3.446131,-9.554601,7.083456,-7.851392,-4.468561,0.271978,-5.870063,8.161332,-6.586380,5.451208,-1.707731,-8.784684,-1.943460,-6.646859,-2.595038,-9.318715,-9.165064,-4.610471,-4.391323,-3.050614,-7.279495,-6.376540,-5.011676,-6.007293,5.706508,5.198900,1.416878,-0.944346,1.888616,9.655892,-1.224862,9.172132,-3.552085,-6.022674,-7.837349,0.536456,-8.851896,9.062235,4.424274,9.623838,7.412376,8.664964,-0.423436,3.586545,-0.125194,9.064951,-0.308204,5.963127,-2.458165,0.746674,-7.261708,0.557320,-0.984917,1.913546,3.442208,-4.265685,4.996134,0.472561,6.947237,-9.544377,4.837590,0.560774,-1.513720,0.688689,-4.962617,-3.171040,2.461305,-2.000067,-4.238461,-6.738992,-8.105824,4.156076,-9.175532,-4.152383,3.257993,3.016754,-0.323593,-4.245737,-5.263627,-2.555619,-8.642070,3.211822,-1.119562,4.122335,-0.248581,-4.397323,3.128201,-4.007934,-4.529461,3.961227,9.000270,4.292280,4.776223,0.714505,9.458899,4.758309,-2.282541,9.607892,-8.318321,6.070022,-1.780769,9.823213,6.428285,3.577481,-2.301438,8.521789,-1.164743,-1.795136,-0.193556,7.713722,4.395092,9.852826,7.805647,-3.969335,-5.237188,-1.291941,-7.219715,-8.502301,-4.226232,4.187723,-1.652799,-4.533797,0.486379,0.441433,-0.141494,6.939719,6.064245,7.984809,-6.279141,-4.865080,-4.570744,4.028507,-3.407330,-0.779549,-1.502990,-0.034060,3.147380,2.868716,6.644576,-3.214438,2.123148,3.894974,1.177352,1.240500,-2.548299,-2.607892,4.640536,2.584192,5.953799,-8.088840,-1.868556,-7.145975,2.649602,-1.572207,-3.379772,1.474496,9.318637,-0.689275,0.494386,-5.471676,9.234611,-3.648854,-7.516948,4.644452,-0.757219,7.050103,-3.486176,-9.352324,1.475967,-8.102419,2.184312,7.080104,-5.976560,9.308483,-4.646167,9.143566,-9.923076,-7.489348,-5.590749,-7.743650,8.390017,8.855227,-4.592497,7.482641,-1.877076,5.225059,6.362955,-8.020320,7.646907,-1.462358,5.968249,8.442733,4.328179,6.307343,0.834756,-6.488308,2.166855,-6.137076,1.188099,-7.822479,3.853336,-7.477482,-2.536156,-8.708064,-7.983833,2.984256,9.390719,-1.264607,-6.877024,-9.833467,0.092179,-8.470274,-3.862304,-2.237154,5.157139,9.747190,0.109567,6.366737,6.137758,9.922542,-5.463229,7.736415,5.477453,3.631196,6.250871,-8.318858,-7.401268,-6.638634,9.320543,9.128623,7.102120,-0.868642,-2.966718,-5.810294,9.761858,1.502390,0.910082,3.415810,-4.989000,-4.404117,-8.134891,4.709853,-9.433865,2.713741,-6.123631,-1.353501,-7.950764,-6.226456,-0.906175,-4.623022,-8.387114,-1.562234,-9.104343,5.828641,-0.376533,7.316420,-0.627712,9.349115,-7.092359,-4.832388,4.920945,-7.568723,2.163884,-0.635384,3.289426,-8.527303,1.438987,0.231666,-0.967615,-1.962924,0.396353,-7.190734,-1.612773,-4.001797,-9.682028,-3.031666,7.253325,7.463713,5.563750,-7.675235,-2.259387,0.136273,8.986371,-8.974701,4.848046,-9.910968,-5.449508,-5.581681,6.749677,8.296370,9.571827,4.380637,-1.124638,-2.969196,8.917512,-6.192450,9.752506,6.094484,0.845007,-5.815025,-0.153145,2.953892,6.825128,-7.986756,-0.334623,8.832924,1.486081,-9.457445,5.486722,2.921040,8.533248,6.658939,9.809822,-4.603065,-3.865020,8.190110,6.780062,2.990591,-5.098396,1.877628,8.786166,8.170119,-7.715275,-9.160213,-8.717702,-1.353601,4.398520,-0.551402,-5.125172,8.457839,3.292785,1.723662,8.626862,-4.662419,-4.852389,-0.377848,-4.532902,-9.385404,4.060886,-8.863120,1.880499,-9.676014,-5.602470,4.029494,2.338756,6.625331,-8.041380,9.678193,4.405186,9.116218,-4.285283,9.358240,3.738682,9.917029,-2.710609,-6.526127,-6.706495,9.452023,1.782392,1.695770,2.966467,-2.855393,8.592074,-7.013132,0.491461,6.046157,7.981342,-6.424601,-2.626966,-0.092655,5.045494,-7.052430,5.515911,2.557915,4.091579,1.681091,4.201809,-7.554271,5.154436,-3.925703,-5.987088,-8.619488,-9.647742,1.562277,-2.694014,-7.523931,-0.560309,2.879474,-7.807976,5.110994,5.761212,-1.592960,-4.612683,-9.000263,5.422454,-0.110210,-8.589303,-8.194438,6.439358,3.979831,1.844340,0.474625,7.087219,8.063588,8.469073,4.074918,6.197724,-8.163078,-6.984996,1.678727,8.599350,1.119882,4.670459,-8.799595,0.650821,-9.565672,1.935931,8.480615,9.840000,-7.250787,6.064563,6.571675,-2.928977,-8.790646,-3.522448,-8.741318,4.818188,1.313110,7.339676,6.883845,-0.178299,2.564015,2.936238,-3.140986,1.852270,-8.547761,-9.976488,0.467329,6.610216,4.890774,-8.552488,1.150892,5.056812,-7.284282,-5.296883,-1.677722,3.296579,1.551459,-4.513130,3.777168,-4.561745,-6.620815,-3.484095,8.471824,9.360237,5.515663,6.692908,1.617276,-9.309185,7.979151,7.839124,9.170847,-0.664474,3.366185,-1.986053,-0.383147,-3.738221,4.735925,1.937803,-1.685068,8.955988,-7.532926,-5.635702,4.274065,3.410619,-9.524122,-8.675470,7.724907,-3.637508,6.702248,-9.118266,6.613887,-6.268686,9.036069,-5.858273,-5.925374,1.966082,-1.323806,-3.772439,-4.955437,-7.242133,-5.816550,-5.402678,9.182152,1.099881,6.558767,8.525589,-5.168315,4.793482,3.566774,-3.892881,9.507674,-3.946218,2.273345,-7.766721,-5.273408,-6.346543,3.142714,-5.635630,2.573553,-1.269733,6.628698,-9.167438,0.887122,5.850741,4.678021,0.754311,-8.727813,-5.772448,-2.159923,2.548511,3.628080,-0.973844,3.772104,-9.058965,-4.732018,9.092000,-3.287833,0.532682,-3.427884,-7.156473,-3.722573,-2.112379,4.484061,6.652953,4.220245,-1.053600,-9.979544,-5.435726,1.275880,1.625720,8.971862,-1.205890,-3.292755,7.280843,-9.852428,-1.283933,2.725139,5.671201,0.846390,1.163559,-3.480439,1.993368,-4.118745,-2.411672,-6.864560,8.174358,-0.748187,7.411650,4.276390,2.570827,-0.877844,4.915936,6.653543,-8.988171,1.207115,2.693742,9.921260,-1.792282,-6.705435,-6.357219,-0.200298,-3.539107,9.813957,5.403808,9.244809,-2.025704,-7.929023,6.203036,6.237826,-5.034775,9.429753,-9.479581,5.936018,-4.817748,8.895772,-8.710197,-5.529271,-6.899044,7.505974,7.968781,6.211471,-6.669253,1.008471,9.160535,-5.448753,9.322787,6.430004,-9.751217,-7.996092,9.727477,5.281282,-9.112158,-5.383400,3.599809,-3.508968,-9.279492,4.118651,-4.900783,6.087102,9.413762,0.009034,4.372311,-5.829155,9.182729,7.798814,-5.925541,7.380107,-2.601241,4.916162,6.165782,-3.474182,7.624995,-3.820742,-4.327343,1.955945,3.375467,-4.163343,-3.320155,4.192091,-4.742730,-4.761213,2.968842,4.413020,2.224738,-3.608606,-1.303310,4.083322,-3.797500,3.171074,8.385910,-4.540519,-6.341865,7.945770,3.902872,-4.604222,0.483077,-4.219256,-7.950112,7.797861,-6.214753,-5.085537,-3.532034,7.177993,-5.967489,-5.557109,3.915067,-6.956464,9.576014,-7.781418,-1.006467,-7.038016,0.801357,4.615393,-2.456686,-8.248928,-3.879344,-2.616526,-3.424478,3.180044,-7.436601,-9.881738,-3.893830,6.169775,-7.519348,-3.554829,4.650726,2.436168,7.870166,-4.669532,9.415079,-5.188195,-4.605631,-0.584911,-7.168431,8.247766,6.593938,1.414264,-8.057828,-3.370031,-4.504756,-0.054443,9.467508,7.091425,-8.358846,8.213636,-6.003770,4.513740,-7.692498,2.858498,3.541043,1.974358,-7.871624,-7.095714,-4.910107,2.209564,1.016571,-8.392092,8.092884,5.701299,0.432613,2.722749,-7.781530,-0.986760,5.384974,-5.509087,-0.261626,0.940389,-1.452028,-3.969766,-9.125030,2.319479,1.418993,6.419239,3.463628,-5.275871,4.113341,-5.343454,-7.228354,-2.397759,-9.102340,-4.479301,-2.754465,9.269920,2.985707,9.063468,-8.261017,3.084686,-8.229876,-6.671765,0.629374,0.201008,8.396435,-8.395724,-8.045397,3.049961,4.927578,-3.119734,9.742869,-2.680310,0.967428,3.627657,1.913006,4.727968,2.686734,1.663506,-1.495360,6.429603,9.591541,6.338295,-1.560183,-4.800088,-9.664586,7.561367,6.544396,-4.844606,-4.138604,-6.574970,-6.012575,5.472839,2.012767,-2.888547,2.698047,5.279334,6.293532,6.469138,2.027820,-8.882859,-1.420656,-8.960847,0.457458,-2.014504,-1.503051,7.729169,-5.271604,-9.771033,-6.592462,5.301484,-1.697987,-4.460975,3.445739,3.027949,2.374242,-8.008062,8.014028,8.679227,2.266234,-8.270988,-7.809784,-1.707604,4.561462,0.694723,8.636924,5.391498,4.014130,9.743683,4.670236,-2.287026,-7.795356,-9.939613,7.517783,8.997230,0.934613,-6.875500,2.296234,-3.790414,5.816635,-6.753327,-7.318168,-8.161944,5.606882,-9.117161,-4.070581,-1.184741,4.971869,-3.096848,-0.408873,2.954121,-3.809254,-9.398965,-6.093053,-2.746041,-1.506526,-9.611066,-6.494947,-7.575073,3.503467,1.631986,5.083577,-7.569321,-1.782704,2.321886,-6.080254,6.155744,-1.190469,8.720297,-9.445819,-2.277928,-2.249946,-1.085831,8.106018,4.217683,0.196688,-9.160734,-4.137311,-4.597794,-3.379844,9.719868,-9.030184,6.419866,-1.543885,-9.302786,-1.661768,9.149099,0.973393,4.555073,2.176930,6.332219,1.071493,6.090449,1.566376,9.427914,-2.885721,-6.987591,6.210499,8.012489,-9.601903,-5.231056,8.414745,-2.920612,4.211615,0.172839,-4.227351,-3.624879,8.150435,7.632933,7.267557,-9.127489,8.264917,-3.061701,-7.317354,3.428442,1.826921,3.083873,8.893137,-7.342534,1.202912,9.846430,-1.590475,-8.295322,-7.411770,-9.222513,-9.398512,9.018810,-6.383018,-6.670907,8.592843,2.183623,1.092888,0.623985,-6.842841,-5.884949,-6.139955,6.157236,4.043379,-6.742582,8.307244,5.398481,2.819195,-5.123953,-0.833776,-9.579252,-7.643562,6.956508,-8.161201,-8.439080,-1.865167,-6.543513,4.834152,6.490904,9.389427,-8.271262,5.215590,-9.761763,-7.044339,-0.507901,3.158086,-2.418234,-8.287067,-4.726318,6.758169,-9.376013,2.547082,-8.317495,-1.645788,3.754079,2.845597,9.236335,5.493850,2.403663,-6.656980,-5.093442,-4.737363,7.462550,-1.383647,0.525537,-6.807583,5.694385,-2.175765,-7.258554,-1.225449,5.218820,2.511955,-8.278986,-2.325427,-6.194633,2.107625,4.800730,-7.699767,-8.894110,-1.949598,-9.665567,3.330554,-8.132287,5.198278,1.422877,-6.010861,5.294924,8.116273,-1.741340,4.372584,-5.070871,4.506071,-7.783124,-9.475067,3.620129,-4.562251,6.958166,6.721819,7.994561,4.687832,-8.974562,7.415949,5.921021,2.103563,6.506604,7.349157,4.797840,1.226472,-2.463069,7.317771,-4.616650,1.243757,8.260335,3.531359,5.169341,4.828360,-7.074103,2.543576,8.594687,7.589667,9.074453,-9.475774,3.409952,-9.090035,3.721435,2.932004,7.714950,-1.200518,-4.939367,1.675861,-8.943046,7.822307,-5.024650,-9.152334,-6.454524,-3.091764,-9.025162,-9.281015,-9.450979,5.123707,-1.962654,7.618472,4.528718,0.369435,6.185973,7.785944,5.792050,-6.759691,5.136791,-2.277779,-1.490144,5.117936,9.777318,-7.347238,-7.758391,-6.450942,4.744378,-4.648516,2.861239,-1.040162,3.068524,-9.737229,-4.227891,-0.752253,7.845421,7.668301,2.478066,2.450563,4.674070,-5.868801,4.085785,-8.153470,-5.575761,-7.863156,-5.724891,-2.967915,-2.725128,5.409443,1.921568,6.591291,-0.850901,-3.236600,0.999973,-7.703438,7.435347,5.232665,1.804477,8.130756,-3.223289,5.022299,-3.412946,-3.454699,-3.766968,-6.449390,0.221102,4.215958,-3.414955,1.786807,6.980148,-4.839089,-2.330133,1.458320,-5.490493,4.191322,-6.716673,1.251382,-4.744144,-7.350865,0.385055,-7.794697,-3.572368,-1.801305,6.417969,-1.000936,-0.692716,-7.622152,-7.795791,-5.580527,-0.473065,-9.639583,1.965877,-4.613331,9.762310,-3.221626,1.104913,-7.191402,-1.348316,-3.561384,-7.028154,-2.990844,-4.201403,-8.440000,4.515743,7.532134,-8.972911,-9.274877,2.670821,-0.824588,8.367648,-5.340968,7.916971,-7.622629,7.924925,-8.789006,-8.228412,-9.233552,2.553073,2.511316,-7.831158,-2.576988,-4.672245,-0.062277,0.133834,2.768192,9.539138,8.072903,-4.337575,7.642702,2.674944,2.869559,-9.071567,-6.809646,-8.958028,-9.861176,-3.006953,-5.361295,-2.378677,-2.023372,1.642035,-4.478099,7.690411,2.889504,-8.393301,-1.665443,-3.341280,6.508056,1.512406,-9.984096,6.305975,-3.947699,-3.856789,1.112253,4.680704,-6.841357,7.694891,-3.143370,1.049871,-7.436977,-5.126142,9.363146,-2.306364,3.627638,-7.836768,-4.144253,3.943334,4.243216,8.314936,-9.184046,-6.566279,8.636527,6.497724,1.063149,4.919006,-5.509076,-1.671304,9.451806,-0.519193,-6.825158,-5.616360,1.824872,-6.979125,6.644891,4.628622,-0.852303,8.036517,7.528364,1.705538,2.744194,-8.392805,-7.264139,2.358192,3.878561,8.898508,-5.327110,-2.047910,5.574067,-9.199610,-6.819996,-2.292866,9.959759,-3.506521,-9.835400,1.299335,0.329304,-7.189240,-9.323453,6.424972,8.701158,-6.792686,-1.293514,4.166528,6.262290,9.225549,2.128871,-8.015850,5.883982,3.205331,3.176643,9.876373,-3.096060,-9.789361,7.215440,0.545696,-6.388851,-7.172859,-3.950444,-1.227691,4.815345,-4.256069,0.378018,7.403565,4.554673,6.486197,-1.439182,5.957202,-2.270609,3.110522,7.527926,-3.484218,-1.981026,2.714102,6.600409,-9.901951,7.694002,8.652229,-6.411001,3.792169,-1.076470,-4.783432,2.315291,4.414271,4.381245,9.671779,4.842555,8.434554,-3.884361,2.729094,-4.928285,-5.081732,-9.081941,4.500941,-9.778694,-5.801762,7.972097,8.362382,0.181344,-9.191920,-8.998939,6.547943,4.793288,7.750103,0.208974,1.625713,6.999294,1.429620,-4.678035,-0.157436,7.531295,9.753679,0.750102,8.093629,4.433064,5.181733,6.224774,-2.195413,0.831829,-5.893078,-8.818792,2.122059,9.751636,3.680337,4.638040,3.997577,-2.142479,6.815872,4.574867,-2.459697,-0.496450,-6.048157,4.187361,-7.849106,4.042433,1.481317,0.011442,2.951807,-4.590205,-2.288638,-2.265642,-6.234241,-1.268964,-5.040318,2.577120,-8.750390,-4.246347,9.738653,4.224157,1.609314,0.161395,-6.816296,5.993386,1.416411,-3.792172,4.818361,3.354224,-5.573186,1.707621,-0.614108,4.485365,-0.227984,2.842260,0.832002,5.942502,5.106811,-8.799982,8.439301,1.945888,1.917191,-4.600312,-1.817665,-8.871287,1.682302,4.066798,-6.199650,6.125904,6.940349,2.040635,3.423383,4.221255,1.904567,9.889507,8.140621,1.175548,-8.965279,4.188522,-3.308624,9.954493,7.375021,7.614490,-8.299797,-4.984497,2.191652,-2.284731,-3.062307,-1.607101,4.273665,1.569567,-8.182157,3.544322,-6.315379,-4.992190,5.835658,7.039047,-3.140007,-3.185399,3.835518,-2.851054,-7.178876,9.998692,-8.313565,-3.404499,8.080992,-7.866332,5.292729,3.733357,-5.274580,-6.001027,3.183760,-4.201465,-0.193702,-7.848889,2.365721,-2.362488,-7.844405,6.801835,3.944232,-2.102723,0.034132,6.283266,4.302927,-4.717782,-4.484821,0.367431,-5.339783,0.458039,-3.935406,-1.760466,9.578469,-9.899657,0.808314,-5.533167,0.898015,1.646156,-4.513429,6.178128,5.260935,0.688102,-6.293694,-7.830206,8.503938,6.964843,9.171433,6.266664,7.381795,-2.702641,0.140085,4.941954,-1.695243,4.261798,3.637451,-5.369554,0.546355,-9.407906,-1.001736,-0.510704,1.004003,4.742905,-0.744852,7.924361,-5.788040,-7.603085,-1.250384,6.444301,-2.195225,4.657410,5.858463,1.729406,-8.598245,2.488147,-8.257170,-5.598554,5.947212,-8.505588,-1.455273,7.931063,-6.971941,1.051446,-0.933231,6.895705,4.549525,-4.464926,-7.064358,8.631762,-3.713728,2.143845,4.461981,-2.393147,5.395119,-6.816665,-4.403626,3.048614,6.070367,8.617956,4.030211,-5.555536,-8.497051,9.796460,-8.606479,1.817939,6.886949,6.514626,-7.209703,-1.545768,6.839777,3.694990,-7.847858,-8.828281,0.871384,9.957105,-5.757720,-7.988064,2.103909,7.390026,-3.566441,-2.014550,2.044790,-8.583324,7.088176,1.395202,6.539400,-4.242397,2.303799,7.924116,-9.263056,7.562852,9.549202,3.821127,-7.143886,-9.551969,8.231704,-6.747448,7.497254,-5.691508,8.735928,3.836936,7.635893,1.375165,-4.075015,2.222435,5.312063,1.021847,-2.071541,6.932504,0.263873,-7.601476,-1.873422,1.542809,8.896728,-8.995493,3.364111,-3.977980,2.919818,-5.660291,-3.213098,5.759185,-0.055806,-1.102350,1.985403,2.792380,-7.564087,-4.925335,6.146093,-4.956139,7.437280,7.843041,-8.373087,7.793588,3.564006,4.876483,-6.460254,-3.964863,4.484003,1.894770,-4.838173,1.636674,-0.279648,-7.416357,2.414303,0.635034,5.318078,7.990733,-7.440577,-9.239286,-0.311022,7.820604,-2.952188,-7.263085,2.479963,-5.926853,-0.262575,-6.422994,2.867894,-5.424152,9.445364,-4.836449,0.414244,-4.374110,-4.291520,8.780303,-4.545290,4.085174,-1.117966,-1.199378,-5.831801,-5.855447,-9.293980,6.867151,5.569434,-5.494874,3.320353,0.887019,-7.535655,-6.994216,-0.603631,-2.394910,5.218230,1.922526,7.625802,9.170564,9.202917,-9.401512,-0.801067,7.122884,-1.522352,-4.672520,-6.331797,-1.386650,1.418054,-2.826308,-0.585386,-7.151301,-4.830461,-4.070652,5.502734,3.628563,1.445290,-2.998432,-4.607210,4.781691,7.366055,-2.105113,2.981931,-6.827903,-9.435639,5.155449,2.633003,-9.237770,1.342639,9.977233,-2.261053,2.174466,0.316073,2.131555,-8.335090,-8.706979,-1.072350,8.427009,9.999245,-1.947481,-7.129817,-1.529374,5.282477,-2.331543,7.318388,0.328737,-2.171807,8.289741,-5.584109,5.232659,4.007055,-9.907309,8.343457,-5.462777,9.060320,-5.932053,-4.800952,-4.786288,4.128856,-9.819978,-7.573240,-7.042882,9.200426,-9.987259,-6.952065,-0.480617,8.808044,9.923227,-2.461849,8.231027,-8.923577,-8.652855,6.410571,-2.338264,3.572952,3.747451,-8.514932,-5.421962,-0.727879,4.994900,2.575149,-6.966760,-1.895472,1.276175,3.961820,-5.359366,-6.250011,-5.601649,7.144853,-6.983925,-4.323548,4.439770,7.813950,-6.317569,-3.302261,-8.206502,4.733240,1.583872,-3.602151,-7.262859,7.925209,3.103642,8.873751,2.749956,-0.377803,8.679018,-1.948324,7.877200,1.126546,1.618841,6.670443,7.652165,-9.815790,-8.037233,4.244952,8.338583,7.211695,-0.706037,-9.638803,-7.548628,8.911078,0.937841,-2.035917,9.144249,-4.535528,8.472325,-2.002747,-4.623920,0.403124,8.374825,-7.523875,-4.171949,9.568784,-7.860203,-1.606417,-8.013506,9.417697,0.438954,-3.728052,4.550153,8.860145,-1.863972,8.585560,4.107159,6.775423,4.491081,4.619401,0.701343,-7.579162,-3.058307,-5.075436,-5.433296,8.160590,5.707042,-4.830518,-5.463496,-4.713116,9.756259,-6.542057,-2.240505,0.280385,3.377881,5.009139,7.220545,-7.859846,7.274813,-2.836200,-9.133235,9.893810,8.313389,-6.847173,-6.688801,-3.653881,-1.450128,-0.499380,-1.486043,-9.382774,-2.590413,-7.636948,8.001073,0.155246,-0.468291,-1.375391,4.232695,-5.369649,0.508485,6.101690,7.952574,4.233669,-5.282347,2.350855,6.941482,-1.551767,4.438633,2.502773,5.141146,2.573742,-2.174774,3.368115,-0.914790,-0.354467,-1.150217,0.281619,7.784699,-1.272884,-1.239080,-1.475746,1.181888,3.187440,-5.727981,-3.157549,8.907179,9.251328,1.972135,-2.123014,-2.206579,-4.529567,-4.374587,2.698780,-0.094773,8.319720,7.194568,1.077960,-4.929079,7.844668,0.166674,-3.058831,-2.425370,9.860887,-4.845417,4.148513,-3.626744,-5.463254,3.379537,8.585470,1.436642,-6.389718,-5.202163,2.262988,-9.806014,2.117587,-4.551241,-6.566257,0.345994,4.627253,0.281719,9.922994,-8.293936,-8.645678,9.664635,0.235064,-5.981500,6.192295,8.754344,6.310858,3.977676,-7.339947,8.103627,-6.096370,-0.806657,-4.920420,-7.617731,2.123353,3.007105,-3.504598,8.985372,4.980081,1.013356,2.431761,-7.281619,-6.275778,8.822464,6.661862,-7.449796,-0.461408,8.303226,-4.984603,-6.364413,-0.966533,-8.609311,-2.142974,1.329591,5.518976,-9.473189,0.369448,-3.519252,-0.991546,-0.170424,-3.142614,-9.330692,0.925210,6.138903,0.620281,-0.462980,-5.644710,1.334496,-8.854652,-7.367794,6.779596,-4.336804,0.387319,0.525908,8.854081,-7.793392,-9.120911,-6.134248,-4.332131,8.396349,6.896787,-9.685885,-4.879489,-4.601321,-1.280403,2.374516,0.245450,-6.380608,-1.636840,-8.444785,-4.627808,0.777021,4.879885,-1.701322,6.473906,-4.471749,8.114157,-8.976495,-9.012730,3.848005,-5.505423,-7.146355,-2.996228,-9.984366,-3.381730,-8.597051,1.138093,5.862653,6.578008,0.195645,-2.128525,8.046814,-2.438183,7.672271,-8.262394,8.172246,1.601971,-2.755953,-0.990296,-1.280881,-7.488059,5.033216,-8.253706,-1.755077,8.238101,6.889911,8.746627,6.249069,-3.869761,-5.818388,3.302071,3.261924,-3.592819,4.921506,3.039833,4.964937,-1.366732,9.831474,-9.940721,3.837001,8.715513,3.462334,2.061312,-3.995747,5.382092,1.870301,-2.076932,-2.420154,-8.907750,-4.463063,2.795697,6.005939,-5.574425,1.556583,1.423415,-1.525564,5.770669,2.637218,9.557724,-2.499244,3.887725,9.500671,6.011322,-3.121189,2.143885,2.266427,-9.176257,7.880039,9.562529,1.729893,9.752545,-2.863998,2.521663,8.435181,6.303710,-8.575466,0.247881,5.744649,7.256044,0.811882,-2.036508,9.467187,7.633022,6.590160,2.225264,6.605749,6.152597,5.489287,-7.431113,0.978197,2.076247,-0.441164,8.766294,1.339584,3.418931,-5.215097,3.922494,-0.419002,-6.121489,3.957441,4.485826,-8.732922,-3.489617,8.209563,-8.388059,8.230660,-7.797449,8.419623,5.523098,-9.030693,3.132588,-2.087221,4.242856,3.138082,-1.799704,8.119136,-7.891772,-9.189688,-8.503656,9.503771,-0.375651,-8.063588,-5.322185,1.547082,-9.524025,-3.082479,-6.650066,-7.581103,6.760382,5.597437,-7.737077,3.678709,-6.119927,-2.701724,-9.664222,3.519026,-2.634289,0.214873,0.349375,-6.261354,7.813041,1.821000,8.243836,3.891408,-9.893996,-8.377201,4.416315,7.262605,-5.949475,-9.597752,2.921915,1.558920,8.702627,-6.561744,5.273896,-1.801416,3.260875,-2.780501,2.037369,9.977787,-1.581956,1.738198,-8.585471,2.254994,-2.635566,5.359797,-8.966637,7.625487,8.062998,-5.801184,-8.825364,6.883828,4.169336,-1.237812,0.747461,-4.018625,6.451509,-0.297617,-8.491469,-1.290019,1.556363,-1.547075,4.009720,-0.919389,4.287620,7.670068,3.464066,3.530990,3.235656,-1.308542,5.775967,-0.918846,-9.464984,-7.500015,6.806659,1.387195,-7.974985,-0.819419,4.941711,1.736985,6.970070,-8.847088,6.720669,2.244783,4.711529,-0.387443,-2.184600,4.391356,3.874044,8.056513,7.159098,0.045744,-1.287500,0.525224,-1.203556,-6.303596,1.846615,2.780767,-0.980432,3.233338,-4.558234,6.221104,1.861911,3.983195,-6.461300,6.064346,2.800666,-3.162408,-3.389320,4.472499,-9.780240,-1.222788,-3.128649,-9.666912,8.591741,-7.037456,8.954634,-2.517155,-6.925757,8.377285,0.660802,-7.056212,-6.218778,-9.481549,-5.606462,7.416643,-6.026114,6.442424,3.173804,8.358622,0.976416,-1.446983,4.177488,9.926301,-0.162038,8.866777,6.555585,-1.268602,-1.842122,-1.394386,-9.897138,1.463256,-0.290883,9.418151,-8.563356,-7.154477,-8.134637,2.314214,4.390821,-9.181546,5.906151,2.025546,3.429914,-3.845792,6.594940,6.623127,5.525415,-6.577550,0.407760,0.991148,-1.227660,6.518850,5.800051,4.362223,-5.339642,-9.624387,2.007630,-5.089052,-6.376782,-9.498218,-9.332961,8.905702,-8.955991,5.018235,-3.185913,7.436090,-0.827111,1.710285,4.811692,-6.364947,-1.108405,-5.314127,9.584525,0.005107,7.367324,1.201016,1.043580,8.196588,-5.111613,2.357715,-0.528295,0.401096,5.932881,-8.466248,7.004860,-6.202979,1.968255,4.837516,-0.943747,-3.098065,-5.310071,8.160621,5.945213,2.161313,9.626912,-4.833540,-0.439718,-4.434565,-9.614642,-0.085962,4.559307,-9.611518,0.691468,9.253180,-0.751400,-9.012809,7.477935,-4.706820,-5.775084,-5.264173,-9.513183,6.309801,2.097370,-4.684407,-9.561050,5.463726,-4.576603,1.784430,-9.116857,0.099394,-1.283036,3.702107,1.906139,-0.967612,-6.539000,6.027588,6.941489,9.659931,-2.668917,9.023428,-2.442838,-4.475573,-8.584534,6.587738,5.093695,7.536570,-7.514442,3.445605,-1.038924,1.947179,3.535206,6.509856], dtype = "float32")#candidate|7466|(3072,)|const|float32
call_7465 = relay.TupleGetItem(func_1502_call(relay.reshape(const_7466.astype('float32'), [12, 16, 16])), 0)
call_7467 = relay.TupleGetItem(func_1504_call(relay.reshape(const_7466.astype('float32'), [12, 16, 16])), 0)
func_6733_call = mod.get_global_var('func_6733')
func_6734_call = mutated_mod.get_global_var('func_6734')
call_7478 = relay.TupleGetItem(func_6733_call(), 0)
call_7479 = relay.TupleGetItem(func_6734_call(), 0)
bop_7480 = relay.right_shift(uop_7452.astype('int16'), relay.reshape(uop_7423.astype('int16'), relay.shape_of(uop_7452))) # shape=(16, 12, 6)
bop_7483 = relay.right_shift(uop_7454.astype('int16'), relay.reshape(uop_7425.astype('int16'), relay.shape_of(uop_7454))) # shape=(16, 12, 6)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
var_7486 = relay.var("var_7486", dtype = "float64", shape = (33,))#candidate|7486|(33,)|var|float64
const_7487 = relay.const([False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,False], dtype = "bool")#candidate|7487|(1248,)|const|bool
var_7488 = relay.var("var_7488", dtype = "float32", shape = (140,))#candidate|7488|(140,)|var|float32
call_7485 = relay.TupleGetItem(func_962_call(relay.reshape(var_7486.astype('float64'), [1, 11, 3]), relay.reshape(const_7487.astype('bool'), [1248,]), relay.reshape(var_7488.astype('float32'), [140, 1]), ), 5)
call_7489 = relay.TupleGetItem(func_966_call(relay.reshape(var_7486.astype('float64'), [1, 11, 3]), relay.reshape(const_7487.astype('bool'), [1248,]), relay.reshape(var_7488.astype('float32'), [140, 1]), ), 5)
output = relay.Tuple([const_7392,call_7427,const_7428,var_7429,bop_7436,bop_7441,call_7456,var_7457,call_7465,const_7466,call_7478,bop_7480,call_7485,var_7486,const_7487,var_7488,])
output2 = relay.Tuple([const_7392,call_7430,const_7428,var_7429,bop_7439,bop_7444,call_7458,var_7457,call_7467,const_7466,call_7479,bop_7483,call_7489,var_7486,const_7487,var_7488,])
func_7499 = relay.Function([var_7429,var_7440,var_7457,var_7486,var_7488,], output)
mod['func_7499'] = func_7499
mod = relay.transform.InferType()(mod)
mutated_mod['func_7499'] = func_7499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7499_call = mutated_mod.get_global_var('func_7499')
var_7501 = relay.var("var_7501", dtype = "uint64", shape = (1755,))#candidate|7501|(1755,)|var|uint64
var_7502 = relay.var("var_7502", dtype = "bool", shape = (16, 6, 14))#candidate|7502|(16, 6, 14)|var|bool
var_7503 = relay.var("var_7503", dtype = "float64", shape = (1232,))#candidate|7503|(1232,)|var|float64
var_7504 = relay.var("var_7504", dtype = "float64", shape = (33,))#candidate|7504|(33,)|var|float64
var_7505 = relay.var("var_7505", dtype = "float32", shape = (140,))#candidate|7505|(140,)|var|float32
call_7500 = func_7499_call(var_7501,var_7502,var_7503,var_7504,var_7505,)
output = call_7500
func_7506 = relay.Function([var_7501,var_7502,var_7503,var_7504,var_7505,], output)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6746_call = mod.get_global_var('func_6746')
func_6748_call = mutated_mod.get_global_var('func_6748')
call_7627 = func_6746_call()
call_7628 = func_6746_call()
func_6372_call = mod.get_global_var('func_6372')
func_6374_call = mutated_mod.get_global_var('func_6374')
var_7633 = relay.var("var_7633", dtype = "float32", shape = (384, 8))#candidate|7633|(384, 8)|var|float32
call_7632 = relay.TupleGetItem(func_6372_call(relay.reshape(var_7633.astype('float32'), [3072,])), 1)
call_7634 = relay.TupleGetItem(func_6374_call(relay.reshape(var_7633.astype('float32'), [3072,])), 1)
output = relay.Tuple([call_7627,call_7632,var_7633,])
output2 = relay.Tuple([call_7628,call_7634,var_7633,])
func_7635 = relay.Function([var_7633,], output)
mod['func_7635'] = func_7635
mod = relay.transform.InferType()(mod)
var_7636 = relay.var("var_7636", dtype = "float32", shape = (384, 8))#candidate|7636|(384, 8)|var|float32
output = func_7635(var_7636)
func_7637 = relay.Function([var_7636], output)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7678 = relay.var("var_7678", dtype = "float32", shape = (12, 13, 11))#candidate|7678|(12, 13, 11)|var|float32
uop_7679 = relay.rsqrt(var_7678.astype('float32')) # shape=(12, 13, 11)
output = uop_7679
output2 = uop_7679
func_7685 = relay.Function([var_7678,], output)
mod['func_7685'] = func_7685
mod = relay.transform.InferType()(mod)
var_7686 = relay.var("var_7686", dtype = "float32", shape = (12, 13, 11))#candidate|7686|(12, 13, 11)|var|float32
output = func_7685(var_7686)
func_7687 = relay.Function([var_7686], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mod.get_global_var('func_7022')
func_7023_call = mutated_mod.get_global_var('func_7023')
call_7723 = relay.TupleGetItem(func_7022_call(), 0)
call_7724 = relay.TupleGetItem(func_7023_call(), 0)
output = relay.Tuple([call_7723,])
output2 = relay.Tuple([call_7724,])
func_7726 = relay.Function([], output)
mod['func_7726'] = func_7726
mod = relay.transform.InferType()(mod)
mutated_mod['func_7726'] = func_7726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7726_call = mutated_mod.get_global_var('func_7726')
call_7727 = func_7726_call()
output = call_7727
func_7728 = relay.Function([], output)
mutated_mod['func_7728'] = func_7728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7737 = relay.var("var_7737", dtype = "uint32", shape = (11, 14, 7))#candidate|7737|(11, 14, 7)|var|uint32
var_7738 = relay.var("var_7738", dtype = "uint32", shape = (11, 14, 7))#candidate|7738|(11, 14, 7)|var|uint32
bop_7739 = relay.bitwise_or(var_7737.astype('uint32'), relay.reshape(var_7738.astype('uint32'), relay.shape_of(var_7737))) # shape=(11, 14, 7)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
const_7760 = relay.const([True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True], dtype = "bool")#candidate|7760|(1248,)|const|bool
call_7759 = relay.TupleGetItem(func_93_call(relay.reshape(const_7760.astype('bool'), [13, 12, 8])), 0)
call_7761 = relay.TupleGetItem(func_96_call(relay.reshape(const_7760.astype('bool'), [13, 12, 8])), 0)
bop_7767 = relay.bitwise_and(call_7759.astype('int64'), relay.reshape(const_7760.astype('int64'), relay.shape_of(call_7759))) # shape=(13, 12, 8)
bop_7770 = relay.bitwise_and(call_7761.astype('int64'), relay.reshape(const_7760.astype('int64'), relay.shape_of(call_7761))) # shape=(13, 12, 8)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_7775 = func_7257_call()
call_7776 = func_7257_call()
output = relay.Tuple([bop_7739,bop_7767,call_7775,])
output2 = relay.Tuple([bop_7739,bop_7770,call_7776,])
func_7797 = relay.Function([var_7737,var_7738,], output)
mod['func_7797'] = func_7797
mod = relay.transform.InferType()(mod)
var_7798 = relay.var("var_7798", dtype = "uint32", shape = (11, 14, 7))#candidate|7798|(11, 14, 7)|var|uint32
var_7799 = relay.var("var_7799", dtype = "uint32", shape = (11, 14, 7))#candidate|7799|(11, 14, 7)|var|uint32
output = func_7797(var_7798,var_7799,)
func_7800 = relay.Function([var_7798,var_7799,], output)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mod.get_global_var('func_7050')
func_7051_call = mutated_mod.get_global_var('func_7051')
call_7816 = func_7050_call()
call_7817 = func_7050_call()
output = relay.Tuple([call_7816,])
output2 = relay.Tuple([call_7817,])
func_7844 = relay.Function([], output)
mod['func_7844'] = func_7844
mod = relay.transform.InferType()(mod)
output = func_7844()
func_7845 = relay.Function([], output)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6612_call = mod.get_global_var('func_6612')
func_6614_call = mutated_mod.get_global_var('func_6614')
call_7862 = func_6612_call()
call_7863 = func_6612_call()
func_1577_call = mod.get_global_var('func_1577')
func_1581_call = mutated_mod.get_global_var('func_1581')
var_7865 = relay.var("var_7865", dtype = "float64", shape = ())#candidate|7865|()|var|float64
var_7866 = relay.var("var_7866", dtype = "float64", shape = (240,))#candidate|7866|(240,)|var|float64
call_7864 = relay.TupleGetItem(func_1577_call(relay.reshape(var_7865.astype('float64'), []), relay.reshape(var_7866.astype('float64'), [2, 12, 10]), ), 1)
call_7867 = relay.TupleGetItem(func_1581_call(relay.reshape(var_7865.astype('float64'), []), relay.reshape(var_7866.astype('float64'), [2, 12, 10]), ), 1)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
call_7893 = relay.TupleGetItem(func_93_call(relay.reshape(call_7864.astype('bool'), [13, 12, 8])), 1)
call_7894 = relay.TupleGetItem(func_96_call(relay.reshape(call_7864.astype('bool'), [13, 12, 8])), 1)
func_4146_call = mod.get_global_var('func_4146')
func_4149_call = mutated_mod.get_global_var('func_4149')
const_7896 = relay.const([1.907966,4.714308,1.794915,-7.247436,9.752123,-5.318942,9.775993,5.824187,-7.985637,6.860649,-8.191264,5.341172,-9.967499,6.337157,0.476804,-9.460797,-9.738413,5.913842,2.200707,7.635921,-9.153571,3.215775,1.372697,8.110393,3.502835,-5.935117,4.665806,9.392474,-2.462380,6.052717,8.359326,-3.700634,9.647225,-6.295589,5.292588,4.583382,7.711052,2.258150,7.416063,2.598346,8.700175,-9.693447,4.954819,-6.400418,6.718381,3.214739,3.729735,-7.147593,-5.243605,7.972672,-1.909253,8.707949,-9.956397,8.029551,4.883900,-6.036770,-8.917076,0.415446,-0.512950,-8.730800,2.767462,2.575897,1.811828,1.627358,-9.383675,-1.399609,4.183378,-9.295441,-3.930848,0.966157,-4.427334,7.221524,6.723077,2.741604,-9.021994,5.929804,6.247209,4.666049,-5.847845,-3.223679,7.696656,-9.282618,-1.079861,-9.717528,-7.341036,-1.457370,6.918046,2.021399,-2.649030,9.517347,-8.856645,-3.198273,7.454804,0.456178,-6.710935,-4.352185,-4.256553,-8.882561,0.950834,5.917113,8.416029,5.010962,8.434519,4.318255,7.799369,1.034215,4.584084,8.555013,7.844633,-9.027670,0.222786,7.140191,1.231491,-1.492514,2.642549,-1.289830,-3.924089,8.055552,3.456793,1.204248,1.476089,-2.095344,4.441011,7.977382,-8.706889,-6.935483,-4.009727,8.280221,-3.506439,3.795125,-1.659986,-0.035123,2.355810,-2.880652,-3.358671,4.462064,-4.800688,-8.439335,2.919820,-1.285499,3.041107,4.412253,5.053242,-1.826569,7.147580,8.240925,0.088424,-6.628261,0.994926,7.883743,-0.131664,-5.678381,1.441240,-1.282581,-3.359938,-1.312830,-3.215021,-7.780810,0.952830,2.499302,-5.038551,-4.471139,-9.936170,-4.138170,6.254998,1.502109,-9.279366,7.394932,-2.702605,-1.220541,-7.272341,-1.118080,3.338790,-2.293941,5.796169,6.268079,-6.736354,-5.971469,-7.585448,6.442029,-8.389615,1.092535,-6.894484,-7.586222,8.609279,6.101881,-8.576473,-8.822123,-7.785346,-9.925201,-6.584793,9.663478,4.747536,2.568994,-5.310632,3.275235,2.966238,6.745178,6.107165,-2.143427,1.239127,7.352704,5.556164,7.552753,-8.598477,-3.480653,3.906978,-2.944467,1.982630,-5.056125,-2.402607,-5.350157,-3.975634,0.074370,-9.559955,-2.425987,2.225201,0.992353,5.187590,7.532603,-3.333138,-4.175008,4.640603,-1.585813,-8.834837,3.823934,-0.423461,-9.891802,1.480124,3.278627,6.330272,1.082633,7.321727,-3.955578,3.407709,-2.828791,9.995233,9.105418,6.529192,5.624590,-8.062881,-8.841945,-2.149170,-7.410607,-9.323594,9.727475,1.459598,6.919468,9.124962,-2.395217,3.579145,-4.094428,8.395203,0.897739,3.981625,7.304530,2.296750,0.211436,-2.707927,-0.203486,3.933962,6.124796,-5.181778,7.308711,-5.143888,7.511806,-0.985435,-1.602618,1.743774,4.933617,-2.846704,6.325912,-8.648835,8.394855,-9.638164,-3.956844,-0.012830,-4.146173,-1.233312,-9.951760,6.000622,-3.705960,-8.722927,-4.423621,-2.237057,-5.739625,-8.281628,6.891487,-8.197637,9.329125,-7.694625,-3.004644,6.486719,2.094142,-5.333145,-4.657510,9.329725,-8.345633,9.048597,-6.848505,-8.943851,-5.295632,-9.530249,0.751710,7.606352,8.958999,-2.206160,-2.754999,-4.736693,7.401989,0.637799,6.345899,-6.033102,-5.280410,-7.796784,-7.737614,-5.239422,7.169192,-5.504676,3.864190,4.688502,5.191734,4.388057,-6.648624,5.104944,-7.002633,4.686795,-0.723803,9.512375,-5.166445,0.819697,-1.196276,3.884731,-3.182546,6.581898,6.824577,-9.016192,-4.143485,-6.256327,9.166925,4.785578,9.248193,3.737223,-2.836388,-3.655652,-7.650183,5.682047,9.631908,-4.679576,-2.770139,-7.630031,1.737382,-9.130631,-3.479002,-1.762397,0.473059,7.173539,-2.821493,-0.522137,-1.471441,2.637285,-1.230029,3.328988,-6.633364,1.015371,0.952649,-6.877428,-2.027130,6.675205,-5.584900,-3.430503,3.514346,-9.819367,2.638996,-6.806060,3.760666,-3.594053,3.792420,-4.893439,-0.893130,-2.769562,3.374255,-1.732562,-8.203003,-8.057379,6.718063,-2.892542,-4.868428,-1.409945,1.051413,6.143188,8.655893,-6.820233,-4.262255,-5.338657,-6.740018,-5.179466,3.033555,1.771422,-2.834553,-5.560488,-2.520696,-8.473480,2.509269,-8.923048,-2.311644,-9.950616,-1.297504,-9.378037,8.119622,5.848916,1.283190,2.023391,-3.955646,-1.528879,-7.760981,-4.330086,2.629604,0.236781,1.786948,3.287724,-5.511705,5.415479,-0.084698,0.014813,-1.652411,9.096272,-3.150127,6.761555,1.380462,-6.326271,-3.157944,5.823016,4.955488,7.283082,-2.414403,-6.283328,-3.954010,3.698755,3.672212,-2.066781,5.224113,-2.593264,-5.511912,-2.261854,6.440357,8.914640,2.910625,-7.644886,0.317260,-2.508386,-1.693325,-1.926325,-4.650640,-4.678476,-5.567838,-7.934405,-4.241465,-1.250941,-1.723019,8.844048,4.187455,8.782186,0.369151,9.032217,8.359464,-6.326126,4.020220,-3.636674,6.303649,8.137277,2.152176,8.026458,-4.567998,-5.350137,4.789294,0.133379,-6.165481,9.939087,-6.951260,6.297246,-8.297601,0.085201,-3.202869,-4.143075,-6.290406,-8.775101,1.505636,-9.457083,3.132112,-7.431702,-2.955274,4.287877,-9.323020,-0.767728,1.327391,1.438912,5.553299,7.427828,-4.430399,1.083803,-7.986606,8.854402,-3.699654,1.773943,-1.984330,-4.184844,4.255863,-9.277728,-7.596669,-3.780903,-6.555928,-5.476429,4.590767,1.179941,2.603510,-0.855311,-1.174101,9.529199,1.843919,-6.594387,-9.528735,-7.454272,-0.319875,2.155494,9.746975,7.308536,4.914867,-4.802592,0.046639,3.412548,-6.447938,-7.529953,4.726416,8.342169,8.502350,-4.496587,-9.669459,9.832987,1.411191,-9.196610,1.673021,-3.198324,1.443362,9.328678,4.256461,7.572950,-9.442932,-7.107297,3.849184,4.920658,-0.069124,-3.815881,-1.425671,9.445939,-9.194472,9.657753,8.743172,9.160439,-6.469947,-7.933646,3.916759,7.743121,0.724355,3.186190,-5.956607,5.179402,-9.833665,3.284295,-4.157656,1.682412,-0.129104,-1.349503,-8.770347,-1.006332,-0.098895,-0.882356,-3.385025,5.600230,-3.846371,-6.214997,8.580305,9.439397,4.463059,6.271191,0.259828,5.310949,1.969102,-3.036771,0.903606,-6.865491,5.220753,2.692664,-3.920670,0.203088,7.635374,4.535617,-0.536135,-9.603916,-1.494581,2.917436,-3.731731,6.276884,-6.010554,-6.173355,9.067728,7.129806,2.787108,-2.187402,9.617763,-1.655859,-3.865796,-9.823592,-4.595156,-6.362789,-2.744618,9.794559,-0.754047,-5.583157,-9.345286,-7.454777,3.810841,-0.178701,-8.884324,-6.675568,-9.663384,-7.668908,6.108689,6.199965,-7.595714,-9.220366,6.091761,0.285177,-1.921444,-1.623982,-9.397191,-5.410983,-1.465791,4.560402,-0.381253,1.455202,-5.740022,9.780501,-1.482279,-3.416597,-0.321295,0.410456,-3.891942,-9.975640,-5.531019,0.152299,9.637057,-8.195584,-5.585751,2.038340,8.302559,2.610313,-0.585114,8.526683,-0.702922,6.331301,-8.910080,-7.778401,-6.633953,-4.081420,-5.726972,5.860398,3.640895,0.310676,4.358371,-6.789015,5.745233,7.385077,-4.994664,-8.339392,-3.163176,-7.137676,-5.987222,2.582618,9.043033,9.095591,8.309784,0.495165,-4.007401,-4.970568,4.513287,9.574005,-9.216335,5.036727,3.375392,9.042563,8.797200,8.062216,0.435611,-2.476023,-3.106014,-7.019296,2.047193,-5.729428,-4.716410,7.869681,-6.472138,3.124504,5.982775,3.722176,-9.356904,-7.439193,-5.144867,-8.900616,-1.237180,-8.369075,-9.884572,-9.454058,4.804230,-6.163805,8.581912,5.671766,-1.602996,3.786722,1.900678,-1.500386,9.443096,-0.836348,-7.664075,2.495380,3.128476,2.647003,-7.710712,7.364856,0.027140,-2.031062,-8.201357,-8.721167,-7.252372,-4.093617,-8.683017,6.968191,-2.605396,-2.505562,-3.359022,6.088041,5.050219,-1.617507,8.830495,4.211815,0.724723,2.712395,-7.695940,-8.286781,6.369263,-7.767556,2.966057,-8.364321,7.201368,2.594773,-7.376469,-3.968728,7.964981,-0.684034,-0.837265,5.224054,0.164977,4.769492,-0.222291,-3.381409,3.227490,-5.505535,-1.090984,-7.559708,6.414579,-3.668650,-0.446395,3.346212,4.868585,-3.242673,-9.341937,1.499902,8.532238,6.119676,-4.276823,2.581578,-9.812568,-9.256604,-2.773619,4.940072,-6.765255,-3.588303,-8.044088,8.185622,2.886505,7.971723,4.378678,4.886093,-1.235926,1.647764,-2.797459,-0.710150,-2.364109,2.396011,6.726040,-7.522842,-7.226598,-8.540293,-4.901871,-9.881068,-6.664283,7.359624,-5.963450,-4.788139,5.682410,1.022668,-5.588419,5.605617,1.939161,-9.829237,3.275565,-9.932602,3.513534,-9.905519,-0.702292,0.649552,-0.318981,6.079710,9.658909,7.571205,3.375980,-3.387399,-2.125822,-5.303947,-2.865849,-8.562473,2.666693,-3.455472,-5.100425,-6.519184,2.265658,9.141302,7.559675,9.279637,-3.707495,9.568111,2.990098,1.067237,6.860757,1.789907,-8.243253,2.253727,9.736060,-7.472529,-9.012531,-4.250140,-6.039136,-4.946941,-1.970048,-6.244047,-8.971468,-1.966271,0.071307,-8.592109,4.376784,5.615341,2.260274,6.008105,-9.570264,-1.687012,3.114840,-4.375252,-2.064200,0.541341,-2.408440,5.433469,8.716243,6.716550,-6.637879,-5.941233,2.498890,5.426138,-6.116162,0.467246,4.356928,-8.469312,5.341891,-0.676234,5.834679,-3.785457,-1.695951,-2.931192,-7.633274,-3.051080,6.667134,-3.377870,-0.329550,-1.061552,7.035373,9.266433,6.060451,7.306248,1.191859,1.092737,9.133151,-4.687678,6.826047,7.782453,-9.513210,-1.856450,-7.270742,0.336356,1.081539,-3.786587,7.531330,1.100845,2.795483,0.030984,-1.558134,4.453363,6.809679,7.884589,-5.125261,-6.759768,4.192004,4.237933,1.690251,-1.428037,-2.475953,4.112021,6.959604,-7.264223,3.784633,4.657220,-0.895136,2.495411,-6.538007,6.080598,-2.159596,-5.708345,-8.997720,8.418061,-2.188070,-8.300651,-0.502077,-6.644729,-5.923560,-9.520261,9.455687,-6.166632,-5.055816,9.435508,-0.553308,-9.543201,-3.227715,-5.092332,-1.627328,-7.259211,-5.463446,4.424018,6.594875,-8.686584,-1.541681,8.581651,-4.204724,-3.671253,-8.028709,1.803976,-7.978110,8.331649,-5.026285,6.306450,8.735868,7.672715,0.306821,7.290823,2.355735,-0.128336,-8.946954,2.291939,4.861137,-9.585002,6.309470,8.353219,9.785887,-7.122192,-6.905648,-3.840381,8.521061,1.295751,-2.696205,9.539248,-1.413533,5.819250,-3.098303,7.521267,-7.416314,2.669559,-2.337819,9.455085,2.704587,8.638457,-0.561691,3.608323,-7.136495,-0.894766,8.394910,-7.383915,0.384844,1.740929,-5.556128,-7.004463,-8.042901,-9.585599,-4.185712,-7.997172,7.609517,6.770335,2.158584,4.983400,-7.774979,-9.607740,-5.410312,1.973179,-3.761181,9.969920,-3.018039,-2.763243,5.341400,8.244274,-7.990653,1.146514,2.452912,8.051093,0.859158,-2.159793,-8.879027,-6.145330,1.276469,3.093083,-6.794112,-8.788388,-6.278184,9.937921,1.578578,5.068925,-5.936474,9.384942,1.507977,-2.113486,-0.358035,-2.763496,2.670869,0.815994,2.072737,-3.696139,1.430829,-5.372722,9.803287,8.946862,-4.479429,4.740211,3.232412,-5.713721,3.874200,2.074278,-6.057596,8.250656,-0.732041,-7.571141,1.565591,0.586966,-6.968013,-0.045379,8.637607,-1.526872,-3.060993,-1.124184,2.739725,-4.585939,5.750566,-3.781395,-7.670374,6.111806,-3.674385,-6.956405,9.641906,-0.570349,9.350452,1.910467,-5.653105,-2.389160,8.881637,-1.126883,7.781531,-3.726382,-9.449759,-2.462321,-0.555212,-8.187676,-9.956541,-8.624240,-4.465369,4.521035,1.222361,7.343665,-6.574632,-9.813913,-7.409683,-3.356622,5.177860,2.694023,8.987213,-9.723181,3.768773,-2.580819,8.116187,9.523733,8.478656,8.395111,-9.073751,-9.038008,-5.616861,-0.299419,5.862276,0.455784,4.110075,7.976630,-6.109994,-7.426253,-3.429013,2.342249,1.151597,7.739634,2.804871,9.593047,8.884142,9.884334,-8.426007,0.525977,-6.389248,5.523606,1.895439,7.729756,-4.010729,5.852339,-1.015100,8.951409,-8.101524,5.069551,1.403036,7.946402,-9.212780,6.486850,-3.070387,7.271075,7.408162,0.813559,1.046937,-3.125483,-0.333385,-9.478289,7.829379,2.100997,-2.209141,3.142650,7.910889,0.507132,6.331104,8.956502,7.118599,9.368616,6.154808,8.780193,7.264063,-7.635180,8.563942,-7.103869,-5.526733,-9.966758,-3.971045,2.468854,-0.554876,-3.687415,4.384752,-0.130335,-6.501533,5.213586,-8.340503,-4.222192,-8.922221,5.686241,9.133999,-7.356589,5.210704,-6.402911,5.393215,-3.049967,-1.107189,9.498072,-4.640608,-4.846315,3.936614,-4.759895,-4.341822,5.824075,6.875072,4.223905,6.365534,5.281319,-5.342261,-3.718971,6.248224,-2.736394,4.831196,6.622971,9.544896,-3.106237,8.396503,-7.311382,7.321275,-6.819663,-5.625554,1.532491,-8.396688,7.140725,8.586666,-4.923008,-1.010023,-9.246183,-8.493070,5.773600,-8.356269,0.532548,-5.672603,1.557051,0.746270], dtype = "float64")#candidate|7896|(1232,)|const|float64
call_7895 = relay.TupleGetItem(func_4146_call(relay.reshape(const_7896.astype('float64'), [7, 16, 11])), 1)
call_7897 = relay.TupleGetItem(func_4149_call(relay.reshape(const_7896.astype('float64'), [7, 16, 11])), 1)
output = relay.Tuple([call_7862,call_7864,var_7865,var_7866,call_7893,call_7895,const_7896,])
output2 = relay.Tuple([call_7863,call_7867,var_7865,var_7866,call_7894,call_7897,const_7896,])
func_7898 = relay.Function([var_7865,var_7866,], output)
mod['func_7898'] = func_7898
mod = relay.transform.InferType()(mod)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7898_call = mutated_mod.get_global_var('func_7898')
var_7900 = relay.var("var_7900", dtype = "float64", shape = ())#candidate|7900|()|var|float64
var_7901 = relay.var("var_7901", dtype = "float64", shape = (240,))#candidate|7901|(240,)|var|float64
call_7899 = func_7898_call(var_7900,var_7901,)
output = call_7899
func_7902 = relay.Function([var_7900,var_7901,], output)
mutated_mod['func_7902'] = func_7902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7978 = relay.var("var_7978", dtype = "float32", shape = (1, 14))#candidate|7978|(1, 14)|var|float32
uop_7979 = relay.sinh(var_7978.astype('float32')) # shape=(1, 14)
output = uop_7979
output2 = uop_7979
func_7987 = relay.Function([var_7978,], output)
mod['func_7987'] = func_7987
mod = relay.transform.InferType()(mod)
var_7988 = relay.var("var_7988", dtype = "float32", shape = (1, 14))#candidate|7988|(1, 14)|var|float32
output = func_7987(var_7988)
func_7989 = relay.Function([var_7988], output)
mutated_mod['func_7989'] = func_7989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7050_call = mod.get_global_var('func_7050')
func_7051_call = mutated_mod.get_global_var('func_7051')
call_8014 = func_7050_call()
call_8015 = func_7050_call()
output = call_8014
output2 = call_8015
func_8025 = relay.Function([], output)
mod['func_8025'] = func_8025
mod = relay.transform.InferType()(mod)
mutated_mod['func_8025'] = func_8025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8025_call = mutated_mod.get_global_var('func_8025')
call_8026 = func_8025_call()
output = call_8026
func_8027 = relay.Function([], output)
mutated_mod['func_8027'] = func_8027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mod.get_global_var('func_7022')
func_7023_call = mutated_mod.get_global_var('func_7023')
call_8044 = relay.TupleGetItem(func_7022_call(), 0)
call_8045 = relay.TupleGetItem(func_7023_call(), 0)
output = call_8044
output2 = call_8045
func_8046 = relay.Function([], output)
mod['func_8046'] = func_8046
mod = relay.transform.InferType()(mod)
mutated_mod['func_8046'] = func_8046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mutated_mod.get_global_var('func_8046')
call_8047 = func_8046_call()
output = call_8047
func_8048 = relay.Function([], output)
mutated_mod['func_8048'] = func_8048
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8076 = relay.const([[[-3.936669,-7.301703,5.155829,5.708468,4.193210,2.313093,4.202632,-5.424241,-4.118317,-9.729089,-8.876151,-5.156253],[-2.202993,0.548270,9.909122,-9.903974,6.296300,-9.665458,-8.759072,-5.132726,2.943755,6.857718,-2.376175,9.423986],[3.257636,8.563738,-2.942899,0.292338,2.575958,7.277192,-3.939301,-8.936401,-4.610820,-9.594613,7.132455,5.734612],[-9.208406,1.389201,-9.022682,-2.104861,1.786021,1.479139,0.155776,-5.041522,-9.322621,5.864221,2.757669,-3.981971],[0.476746,4.667532,0.188730,5.794658,8.687475,-7.378878,1.401032,7.872365,-9.967980,-6.337171,-6.642488,-1.250077]],[[6.529956,9.429906,-4.042983,-5.040702,-9.047780,-8.277306,-1.278238,-8.741554,-9.655744,4.561265,9.191030,-5.355570],[-0.434722,6.030839,5.965819,0.003674,-3.971272,-0.341745,-1.962289,-7.984485,-7.409494,7.756330,-3.253639,-0.805780],[-7.761421,-7.495857,-4.513441,-6.193741,9.327193,9.706340,1.030605,2.496979,9.092939,-5.983384,3.510349,6.541294],[0.648143,-7.795775,-5.978319,3.893488,5.025738,-3.340849,-2.832366,-1.458108,-8.262673,7.343414,-4.735263,1.355618],[-3.092026,1.291520,-0.929065,1.479141,1.621645,4.023495,-5.893277,5.102486,-1.359654,9.574066,-8.513410,6.880684]],[[-3.092330,-3.186926,0.910552,-9.775061,-2.166434,9.735471,-2.543061,-4.625503,5.492259,2.599378,-2.657551,1.084023],[-7.671444,-9.602499,-5.476491,-6.046942,-4.542834,4.127004,-3.508681,2.063413,9.029046,-6.068537,1.986169,-5.247863],[-7.405717,-0.300647,-4.552678,-9.863381,-7.301033,0.847561,-4.172650,1.900905,-6.126108,-6.334004,5.197429,0.434212],[0.493248,-3.586203,7.997727,6.662041,2.555673,-3.723679,9.885653,-0.485810,0.364121,-3.392459,4.863667,-9.533661],[-9.177326,4.485511,-8.540420,-1.959125,-1.191454,-1.855751,4.601294,2.176907,1.319433,-3.694737,-2.521064,2.619898]],[[-0.112346,3.148397,7.396818,-3.916092,3.310151,7.988321,-9.081293,4.524084,1.613509,-0.905006,5.897298,7.724786],[-2.249338,4.217965,-6.009859,-9.826538,-9.927597,4.877823,-7.271725,3.761086,4.771087,6.555668,-3.248651,-3.620381],[7.920800,2.477446,-6.837192,8.031540,-4.575646,-9.746837,2.548543,-3.616112,-1.929059,-1.578364,5.404789,-7.449356],[-5.069941,-2.910856,-7.323852,-5.788778,-1.604590,-6.891148,-7.426577,0.019597,-2.911652,-5.807856,-2.843515,9.282553],[-0.612964,9.127028,8.642438,-6.777104,-8.024938,6.538359,3.949568,-4.060741,1.063694,-7.907554,-7.184351,-0.456700]],[[7.924811,9.956021,0.324951,6.889833,-3.416103,2.602588,-7.607375,3.535032,6.741917,-8.241186,5.329612,-6.515515],[8.679039,-3.175941,-3.777657,7.058828,0.922807,3.044106,5.720982,-5.254817,-0.408600,-0.571559,8.077789,3.119120],[-0.039534,2.104773,-0.662183,-5.904579,5.628710,1.580925,4.291525,7.865218,1.767712,-2.026922,4.346429,-2.851031],[-4.552223,8.065633,4.198581,-8.277521,-3.215226,5.963561,7.336863,-7.643182,-2.239937,-5.505708,-7.132728,5.751768],[4.066785,9.072815,-0.964859,-5.262505,-8.501254,2.376293,-0.795695,4.504688,8.571822,9.265461,-9.545295,7.055374]],[[7.154454,-8.696187,-3.212253,-6.356350,7.024280,-6.687556,7.837789,1.839560,-7.768556,3.807353,-4.514160,0.188402],[4.680126,7.504409,6.357791,5.038599,-5.361315,-0.044940,2.621566,-0.170847,-0.219523,-8.038502,6.971182,5.553313],[-9.320775,-2.921008,9.444609,8.295226,-8.343855,-8.046597,7.516088,8.097750,-9.460852,-9.525568,-7.924447,-4.383050],[-7.007407,-5.304407,-1.474768,3.805668,3.088226,-7.602206,-6.782192,4.013749,-3.600922,-3.023890,5.188146,2.030044],[7.890444,7.596817,2.105868,3.508773,3.925980,0.003188,5.360507,-9.031335,7.916983,-6.389001,-8.037307,-3.861754]],[[0.528796,7.174911,-2.819441,-3.148638,-9.255580,8.513770,-3.253936,8.687797,2.630099,4.589013,-0.449477,2.493957],[-9.207664,8.067858,5.372422,1.258814,-4.237605,-9.997296,-0.635961,-7.876109,-5.047768,-8.424247,-9.459391,-7.958088],[-5.748054,5.097628,-5.979132,-6.140431,-5.590375,3.717036,-0.520883,-9.599392,4.760679,8.028451,-7.565027,2.383238],[-6.686740,1.888936,4.807051,-6.523283,9.902799,-6.787738,-5.095349,6.949649,-1.512477,-4.767068,0.909448,0.829432],[9.465689,-7.917639,0.336726,9.352530,8.454261,-0.666282,-4.389766,0.107610,-8.985324,0.485961,-8.823214,0.769895]],[[-3.859678,9.596313,2.368431,-0.682073,-8.995388,-4.746873,-9.007731,6.808279,-0.227885,6.641675,-7.421491,-2.501688],[-4.530982,2.170345,-7.647243,-0.305119,-8.324166,0.460103,-7.120946,9.489144,-6.241843,-6.464236,5.854226,8.108496],[-5.682003,-8.253814,3.515386,7.768985,9.935453,-2.441388,-6.407547,-8.833340,6.555091,-3.393330,3.126248,-3.921334],[7.877771,9.503940,-5.933279,-5.744249,8.834799,0.743607,3.902382,-9.691043,4.191551,2.766880,7.616968,-5.895868],[5.199028,0.137956,-5.899014,-0.314255,-1.239939,-6.955144,-7.119729,6.931959,-9.765817,-3.122301,-6.638979,-2.075890]],[[-9.480222,3.799587,6.625857,-3.754388,-8.682472,2.642663,8.370242,-1.608874,1.978498,-0.858304,3.159478,6.697632],[-1.403428,9.467784,9.762211,-2.911108,3.321539,2.401807,1.560092,8.712751,2.976719,0.337446,3.726851,6.310618],[-7.830944,-4.749162,2.372701,3.169199,-6.456628,-6.729524,-0.911362,0.578948,-0.069681,-2.111635,-2.772006,2.742927],[6.710679,-1.955150,-7.287087,2.850924,6.004000,-8.599054,-6.016542,-8.374149,2.128966,-4.136106,4.852865,3.897783],[-2.939535,3.614028,-8.510828,4.471291,5.950642,-2.345639,1.247689,1.265566,0.825383,1.004855,5.518299,-1.063528]]], dtype = "float32")#candidate|8076|(9, 5, 12)|const|float32
var_8077 = relay.var("var_8077", dtype = "float32", shape = (9, 5, 12))#candidate|8077|(9, 5, 12)|var|float32
bop_8078 = relay.floor_mod(const_8076.astype('float32'), relay.reshape(var_8077.astype('float32'), relay.shape_of(const_8076))) # shape=(9, 5, 12)
func_5304_call = mod.get_global_var('func_5304')
func_5308_call = mutated_mod.get_global_var('func_5308')
const_8100 = relay.const(1.835553, dtype = "float32")#candidate|8100|()|const|float32
const_8101 = relay.const([4.405427,7.501962,-7.675895,9.817640,2.062546,3.104097,5.256194,-0.426763,5.369965,9.735545,-2.818848,0.795727,-6.284952,4.244346,-9.816069,0.596214,-8.326034,-7.069429,9.534828,2.677213,8.056419,4.748773,-7.726754,-0.350930,-7.439009,6.841642,-1.697956,-4.733773,5.975853,-3.841195,-6.474823,5.124014,-9.071118,5.372360,0.024408,-7.221602,-7.253927,9.894966,7.346224,-7.657290,-0.531820,-7.800218,-1.586858,0.150070,8.031599,7.677571,-4.160974,-3.029473,-4.840030,-8.657234,-1.997803,1.104208,-4.369459,0.273804,-4.484109,8.005109,8.339747,3.585507,-5.051027,-4.930191,-9.164369,1.324163,-8.255413,1.419023,-8.877279,5.313392,-0.800622,6.494728,5.512810,-2.213289,-3.266931,-4.012783,-1.174166,6.280006,6.749640,-6.873199,-5.336524,-2.603276,6.344242,1.416902,7.216847,-3.066825,3.341303,-5.816429,-3.295769,0.516046,5.286165,-2.850010,2.949379,-2.680645,1.205968,8.775746,7.705411,8.394374,2.764340,-1.232797,5.663154,4.711198,-3.407415,7.232945,-4.618551,2.806596,9.795086,7.246701,7.962681,2.547405,-5.451165,-8.937564,-3.748219,-8.618051,0.951294,-8.202615,8.458320,8.302462,8.078779,-4.169725,7.167051,6.692416,-3.407187,-6.041731,5.249594,-9.803989,-2.101632,8.759585,-0.775796,-0.229005,-1.588137,-2.676515,-0.839376,8.930951,0.109117,-8.259129,0.057288,0.321239,-9.903438,5.963063,4.473427,-6.567180,9.617510,-1.449799,3.286819,4.772315,9.578000,-3.503529,0.867328,0.325906,6.878925,-9.105589,-2.604469,-7.721348,4.076479,-5.481557,-2.446117,-1.117810,-5.032592,4.557314,3.338971,0.911403,3.041739,0.515513,6.416885,9.901499,-2.445911,1.864020,6.015545,3.556017,2.270607,8.750679,-3.742799,5.016085,-4.490344,5.574448,0.429235,-5.851372,-4.829390,-1.379625,-6.102627,-9.880448,6.763478,1.974436,-3.168714,6.504297,-4.626775,1.012017,-5.038980,0.453721,8.681256,-8.468920,9.460033,8.687052,-1.646463,6.665007,4.986918,4.536537,9.101621,4.694511,-7.303708,-9.938528,8.320595,6.715702,-3.435289,-2.128377,1.044861,3.499853,2.759571,-2.316228,-2.257867,3.521342,-1.925013,-7.277242,2.767382,8.918356,-2.804652,6.506269,2.380447,0.352400,5.481237,8.968092,-4.455087,-7.333252,-6.904587,-1.108303,-1.840823,-3.644093,-0.977207,2.357397,6.379650,4.699448,-1.499281,8.797312,-5.071405,7.961259,4.518932,-2.577370,5.535827,3.317247,-0.447562,-6.906465,5.891893,1.139092,1.958067,-6.104239,7.772558,-6.587386,-6.011554,8.704352,-1.547456,-2.424471,7.395309,-8.931107,7.076781,-7.558769,7.935968,0.233767,-5.952846,-0.991618,7.248996,-3.320871,5.101364,-8.527350,-9.625550,-2.038470,-3.954369,-8.890171,9.015493,5.963543,3.717941,-0.218688,-6.069198,8.303270,-6.979038,5.231405,-9.154956,-5.122211,-9.666841,8.406136,-5.832972,-5.393323,1.898525,6.778067,5.254486,2.306629,-1.414292,1.238922,8.853825,5.841149,-3.212379,4.481942,-6.364578,-0.493851,-2.693094,-8.084027,6.595377,-7.395997,7.379326,-1.877016,-4.169856,8.425218,5.071058,6.659198,-4.107438,5.944695,3.078634,0.735286,-7.516350,1.479106,-9.750192,-0.049071,-2.109944,-6.704091,-7.395589,-1.544415,-8.200189,9.545201,-0.123681,2.683571,-1.227909,1.654030,1.195219,3.869092,9.278054,5.534828,-0.955568,7.534589,-0.403051,6.170648,-6.486812,7.579157,9.412719,4.400415,4.575461,-3.621904,9.228214,-0.860895,9.585603,-2.596349,-5.382124,-1.019067,3.996253,8.637187,6.995115,-5.416801,-0.257042,-7.181379,4.250061,8.384759,-4.385057,-1.674279,3.080749,6.109501,-8.132804,4.559839,6.170260,-2.748017,-5.207703,-1.634678,-2.915347,1.286518,-0.797701,-2.043315,2.969137,-6.870867,-4.874409,8.210706,8.115259,-6.154917,9.452398,-5.290368,0.623113,8.102832,-1.079941,3.924785,9.493654,1.029710,-5.361222,2.229906,0.280627,-6.299196,-6.721437,-2.225412,-9.914561,9.153466,-3.676205,-7.328218,-4.667439,1.122644,6.796285,7.358028,-0.141732,-4.350120,5.586910,-7.747589,3.846872,-1.877391,0.834378,-0.110917,1.234766,0.249388,8.777174,6.883624,7.840590,1.696470,6.272321,8.289146,1.160696,-7.190542,2.243159,-6.526016,7.491026,-7.636686,7.623373,-4.424573,9.632865,-6.958022,2.488658,-2.648645,4.676408,6.711601,7.806221,-0.480575,-9.345767,4.917725,6.680501,8.878033,-9.712954,5.109063,-2.017514,-0.910624,6.347783,-9.938930,-0.339894,-1.258411,-3.663148,-3.739137,-3.966659,2.033250,9.608028,5.504187,-3.145036,-9.923723,-1.952718,-7.761568,1.553229,-7.914399,5.709329,-7.612628,-5.760107,1.341147,-5.907767,-4.739221,-3.819042,-2.382175,-3.012138,8.964822,-5.261019,3.886359,2.540127,5.457653,-6.185478,-0.751109,-0.865240,8.176801,4.075830,-3.829705,-9.064453,-7.686060,-7.972887,-5.220730,-6.622477,5.537268,4.970887,-3.404241,-7.225811,-9.758313,0.658569,-2.545732,5.133041,-0.266897,4.874372,-1.612794,6.240736,-9.147752,4.779475,-2.569721,-8.196267,-6.096754,-3.471119,6.544249,-8.364126,0.557275,-5.297958,-9.940484,2.172268,-3.611536,0.992760,-1.599113,3.088084,-2.473007,-0.337188,3.797982,-7.163554,-1.697211,-4.377226,1.802628,2.474078,-3.496526,-5.084662,2.329018,-1.071201,-7.635725,2.365491,-0.306699,-8.209805,8.157833,-3.119792,2.627600,9.431223,7.220716,3.546600,-7.576876,-7.534050,-7.634897,4.052281,-6.987843,8.380037,7.307657,-5.024727,-1.344531,-5.937211,3.102709,-4.089807,9.255723,-2.050998,8.981803,3.093964,8.548980,-5.800102,6.619457,1.018009,4.038152,-6.490255,9.845066,2.531154,8.616659,-1.956283,-4.365301,-8.465441,-2.207672,-8.730232,-1.689326,4.323372,1.637187,-2.476617,-4.405038,3.822648,-9.026914,-4.714534,-8.019586,1.465608,-7.425815,-2.465090,-9.295196,-8.226470,7.176794,-3.838463,5.464203,5.480938,-8.140810,6.205486,-5.486644,-4.966832,-1.905000,-9.444417,-4.357251,1.739461,3.441812,6.701291,-3.688330,-2.587191,1.054291,9.444656,9.657971,7.747784,-9.762706,-0.418092,9.973565,-8.172719,4.010871,-8.354156,-6.844366,-5.640210,6.811023,-6.736173,-4.312698,-3.094184,6.136763,-9.805372,-2.992516,-6.338590,-6.455520,7.026068,-8.453247,3.000371,3.813412,0.812266,5.857526,9.574949,-6.417106,-1.563852,4.980099,-1.496598,5.519645,6.699237,-8.563596,-0.333896,-5.189279,1.754239,3.335862,-4.054630,-2.797228,3.924489,-4.390496,7.285640,-7.572544,5.595138,-2.897700,-6.987580,-4.089662,0.305608,-5.075036,7.497147,-5.264759,0.720051,3.057445,-3.583923,1.321473,-1.458154,-4.345540,-7.936454,1.908084,-9.539301,4.424315,5.613460,-5.273240,9.871615,9.667907,7.997400,7.102040,7.841997,6.372456,-4.745340,3.701194,-8.767800,-7.365498,-8.661755,-1.534883,6.456569,-2.351157,4.561807,-1.606571,3.954610,8.810189,1.233821,8.302656,2.353607,-2.847708,6.506531,-8.870803,7.651793,8.104481,1.106547,5.951959,8.757565,5.852213,-9.043992,0.212471,5.321397,9.898817,0.987828,-0.595960,9.646600,5.946788,-5.436362,-7.719706,-8.006003,-0.859064,0.492955,8.128947,5.966686,3.405437,-0.229355,0.776196,5.416243,-2.049898,6.646320,3.726729,0.818276,1.355752,0.852016,6.834885,9.839689,8.381883,2.746588,-1.884425,3.166751,2.570164,-9.961390,-0.912117,0.046942,4.410666,3.578467,8.292050,6.333350,-0.516667,-8.692902,-5.859412,0.748424,-5.246109,-3.266118,8.686655,-7.822278,3.576460,7.480683,-2.316717,-0.539847,1.679214,-2.549961,-6.890823,-7.363000,-4.504177,6.446354,-1.412383,-5.913405,0.342166,5.665560,5.383979,2.594161,6.660872,-8.827273,3.497196,6.551222,-2.579424,4.110482,9.214810,7.122796,-0.042325,-9.739621,-2.389411,7.518411,-3.259634,-3.305196,-3.671996,-2.643952,9.661120,3.443169,-7.302084,8.468182,8.659892,8.985988,-8.564421,-6.684004,4.647328,-8.541659,-1.920978,-2.909223,-8.557001,-8.475046,-9.314493,-5.803550,4.035992,5.858316,-1.683970,-5.077979,2.188932,-2.349263,-6.531319,3.936249,-0.636116,7.714197,4.453131,4.539244,5.006948,1.880685,-5.702744,8.354197,2.222318,6.203395,3.871003,0.660173,-9.893833,9.373868,2.319733,-6.226364,-8.491104,-3.592687,2.147694,2.205450,3.383021,7.628193,3.844444,0.217457,1.187722,-3.171641,-7.574391,8.054685,-0.621409,6.094086,7.542263,5.401544,-8.708275,-6.125913,4.245606,-8.588992,-3.099655,-2.573983,-1.041201,-0.545659,6.109224,-2.802394,2.633114,-9.867465,-2.740293,9.438902,4.328502,8.272704,-2.567362,-5.881070,-7.048576,-6.532858,-8.664025,-4.910805,-9.212832,-2.664049,6.329473,9.590081,-7.031053,-1.623460,3.267847,4.599683,-5.784657,-6.557351,-2.666056,-1.264603,6.370447,2.630283,-5.969852,-6.423902,-2.875911,-3.480056,-3.351815,-2.123257,3.491054,3.343126,-8.541039,0.045250,-0.866190,4.418980,-3.766834,0.281106,-7.984110,6.152641,-0.418703,7.632683,-1.345169], dtype = "float32")#candidate|8101|(864,)|const|float32
var_8102 = relay.var("var_8102", dtype = "bool", shape = (1248,))#candidate|8102|(1248,)|var|bool
call_8099 = relay.TupleGetItem(func_5304_call(relay.reshape(const_8100.astype('float32'), []), relay.reshape(const_8101.astype('float32'), [16, 6, 9]), relay.reshape(var_8102.astype('bool'), [1248,]), ), 1)
call_8103 = relay.TupleGetItem(func_5308_call(relay.reshape(const_8100.astype('float32'), []), relay.reshape(const_8101.astype('float32'), [16, 6, 9]), relay.reshape(var_8102.astype('bool'), [1248,]), ), 1)
func_4471_call = mod.get_global_var('func_4471')
func_4476_call = mutated_mod.get_global_var('func_4476')
var_8147 = relay.var("var_8147", dtype = "float64", shape = (1, 240))#candidate|8147|(1, 240)|var|float64
var_8148 = relay.var("var_8148", dtype = "float32", shape = (819,))#candidate|8148|(819,)|var|float32
call_8146 = relay.TupleGetItem(func_4471_call(relay.reshape(var_8147.astype('float64'), [240,]), relay.reshape(var_8148.astype('float32'), [273, 3]), relay.reshape(var_8148.astype('float32'), [273, 3]), ), 0)
call_8149 = relay.TupleGetItem(func_4476_call(relay.reshape(var_8147.astype('float64'), [240,]), relay.reshape(var_8148.astype('float32'), [273, 3]), relay.reshape(var_8148.astype('float32'), [273, 3]), ), 0)
bop_8169 = relay.left_shift(var_8148.astype('int8'), const_8100.astype('int8')) # shape=(819,)
func_93_call = mod.get_global_var('func_93')
func_96_call = mutated_mod.get_global_var('func_96')
call_8172 = relay.TupleGetItem(func_93_call(relay.reshape(var_8102.astype('bool'), [13, 12, 8])), 0)
call_8173 = relay.TupleGetItem(func_96_call(relay.reshape(var_8102.astype('bool'), [13, 12, 8])), 0)
func_6523_call = mod.get_global_var('func_6523')
func_6525_call = mutated_mod.get_global_var('func_6525')
var_8200 = relay.var("var_8200", dtype = "int8", shape = (288, 4))#candidate|8200|(288, 4)|var|int8
call_8199 = relay.TupleGetItem(func_6523_call(relay.reshape(var_8200.astype('int8'), [96, 12])), 0)
call_8201 = relay.TupleGetItem(func_6525_call(relay.reshape(var_8200.astype('int8'), [96, 12])), 0)
uop_8202 = relay.acos(bop_8078.astype('float64')) # shape=(9, 5, 12)
func_7086_call = mod.get_global_var('func_7086')
func_7090_call = mutated_mod.get_global_var('func_7090')
var_8210 = relay.var("var_8210", dtype = "float64", shape = (176, 4))#candidate|8210|(176, 4)|var|float64
call_8209 = relay.TupleGetItem(func_7086_call(relay.reshape(var_8210.astype('float64'), [1, 704]), relay.reshape(const_8100.astype('uint16'), []), relay.reshape(call_8099.astype('float32'), [5, 28]), ), 5)
call_8211 = relay.TupleGetItem(func_7090_call(relay.reshape(var_8210.astype('float64'), [1, 704]), relay.reshape(const_8100.astype('uint16'), []), relay.reshape(call_8099.astype('float32'), [5, 28]), ), 5)
func_4471_call = mod.get_global_var('func_4471')
func_4476_call = mutated_mod.get_global_var('func_4476')
call_8213 = relay.TupleGetItem(func_4471_call(relay.reshape(var_8147.astype('float64'), [240,]), relay.reshape(bop_8169.astype('float32'), [273, 3]), relay.reshape(var_8148.astype('float32'), [273, 3]), ), 4)
call_8214 = relay.TupleGetItem(func_4476_call(relay.reshape(var_8147.astype('float64'), [240,]), relay.reshape(bop_8169.astype('float32'), [273, 3]), relay.reshape(var_8148.astype('float32'), [273, 3]), ), 4)
output = relay.Tuple([call_8099,const_8101,var_8102,call_8146,var_8147,bop_8169,call_8172,call_8199,var_8200,uop_8202,call_8209,var_8210,call_8213,])
output2 = relay.Tuple([call_8103,const_8101,var_8102,call_8149,var_8147,bop_8169,call_8173,call_8201,var_8200,uop_8202,call_8211,var_8210,call_8214,])
func_8238 = relay.Function([var_8077,var_8102,var_8147,var_8148,var_8200,var_8210,], output)
mod['func_8238'] = func_8238
mod = relay.transform.InferType()(mod)
mutated_mod['func_8238'] = func_8238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8238_call = mutated_mod.get_global_var('func_8238')
var_8240 = relay.var("var_8240", dtype = "float32", shape = (9, 5, 12))#candidate|8240|(9, 5, 12)|var|float32
var_8241 = relay.var("var_8241", dtype = "bool", shape = (1248,))#candidate|8241|(1248,)|var|bool
var_8242 = relay.var("var_8242", dtype = "float64", shape = (1, 240))#candidate|8242|(1, 240)|var|float64
var_8243 = relay.var("var_8243", dtype = "float32", shape = (819,))#candidate|8243|(819,)|var|float32
var_8244 = relay.var("var_8244", dtype = "int8", shape = (288, 4))#candidate|8244|(288, 4)|var|int8
var_8245 = relay.var("var_8245", dtype = "float64", shape = (176, 4))#candidate|8245|(176, 4)|var|float64
call_8239 = func_8238_call(var_8240,var_8241,var_8242,var_8243,var_8244,var_8245,)
output = call_8239
func_8246 = relay.Function([var_8240,var_8241,var_8242,var_8243,var_8244,var_8245,], output)
mutated_mod['func_8246'] = func_8246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6733_call = mod.get_global_var('func_6733')
func_6734_call = mutated_mod.get_global_var('func_6734')
call_8269 = relay.TupleGetItem(func_6733_call(), 0)
call_8270 = relay.TupleGetItem(func_6734_call(), 0)
uop_8271 = relay.sinh(call_8269.astype('float64')) # shape=(16, 6, 14)
uop_8273 = relay.sinh(call_8270.astype('float64')) # shape=(16, 6, 14)
output = uop_8271
output2 = uop_8273
func_8280 = relay.Function([], output)
mod['func_8280'] = func_8280
mod = relay.transform.InferType()(mod)
output = func_8280()
func_8281 = relay.Function([], output)
mutated_mod['func_8281'] = func_8281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7022_call = mod.get_global_var('func_7022')
func_7023_call = mutated_mod.get_global_var('func_7023')
call_8311 = relay.TupleGetItem(func_7022_call(), 0)
call_8312 = relay.TupleGetItem(func_7023_call(), 0)
func_5519_call = mod.get_global_var('func_5519')
func_5522_call = mutated_mod.get_global_var('func_5522')
const_8342 = relay.const([5.483717,-9.115869,-4.710144,-3.653828,-8.169300,-7.945550,8.529802,-4.358698,-7.976855,-1.039773,-9.999706,-3.852548,7.980414,6.734969,-6.625421,-8.079894,-2.053658,3.027782,-9.629049,1.402162,6.161362,5.106950,-7.977576,-6.466876,-1.679108,2.175248,4.441863,9.031760,-8.127853,8.311290,-7.744498,-0.831869,2.950136,6.646301,6.460483,-1.512761,-4.310384,-7.143325,2.465746,7.060165,4.078440,-6.719800,9.811420,9.732785,-2.703328,-7.757063,-7.585516,7.183347,-4.183436,-1.628662,5.794367,-3.008876,-5.177166,8.006842,7.228260,0.308814,9.612217,3.284736,-2.967242,-8.789218,8.394707,6.003412,7.198889,7.394856,3.291279,3.166953,-0.111227,3.495167,-5.008206,3.915856,9.066127,-8.994503,-8.261427,6.984662,-4.658712,-9.877180,-5.301198,-5.622907,-6.656510,9.909485,0.394917,4.597990,-0.212912,-0.323944,5.303442,-0.555938,7.275419,3.257809,-2.943701,-7.737426,-8.362160,3.229758,-7.409319,-4.805129,6.452867,-8.306621,-7.126343,4.614503,-7.005949,-7.654475,5.699797,7.935445,6.780962,-7.585420,6.052288,9.398955,4.067805,5.075150,-3.499619,2.232960,6.932290,-8.392938,3.790639,4.925225,0.530368,1.284719,-2.450564,4.620384,5.616607,-3.943201,-9.912258,-8.629917,-1.476947,4.613259,0.655782,-2.423702,4.378387,-5.442608,-3.931807,-9.654709,2.739363,-8.855362,-0.034050,-0.168123,-1.364736,8.265935,-0.439323,-5.554311,2.013185,9.531803,-5.603461,2.187026,-3.805563,-0.029335,1.410130,-8.808217,-6.515444,3.737393,8.307642,-3.631999,-4.292549,-1.566216,9.399879,5.008953,0.452299,5.441933,-0.239072,7.128603,1.904519,-8.197183,-2.509285,7.836050,0.394606,-5.257393,-4.479909,-9.430249,-5.757060,8.488923,-1.372536,-8.998863,4.702193,5.326320,-2.726424,-0.285927,0.314394,6.029139,-8.712116,-5.778238,7.640000,-3.130140,-5.189993,-9.901418,6.947920,-9.743525,-4.095375,3.198167,3.675274,2.548151,8.377463,6.904805,-6.185409,0.024395,3.900189,7.259893,-5.936834,9.350430,-0.003061,1.884698,7.098363,1.748930,-4.630559,-1.099116,-0.223732,4.190688,6.894767,-8.618057,7.054562,-6.916645,8.359572,0.605551,0.936045,-5.361303,-4.445470,-4.318549,-8.367133,8.204384,-0.432297,-4.050528,-1.793289,0.833975,-4.609665,3.856034,8.022694,-2.076823,5.866619,-2.845774,-0.577107,3.376499,-4.451661,6.390575,2.719757,3.466107,-0.282271,-9.255895,1.949207,-5.250806,0.861647,-4.597316,-0.195845,-7.608429,-3.022582,-7.844030,5.463034,-0.459431,2.574810,-6.955122,-9.693056,7.967919,6.649439,4.736619,1.406503,-0.822102,-0.048714,3.453529,-3.701926,-8.512453,-4.493710,3.604240,-1.202438,3.391791,3.274412,5.438248,9.950304,-6.538652,-4.049840,5.972604,-8.884625,4.395269,-6.168718,3.669807,-6.777749,-4.676796,-5.179174,-2.623337,1.266990,8.307332,-8.641059,-1.020463,0.683990,-8.725136,5.610398,5.847105,-6.200668,-6.122821,5.520441,5.087171,7.745663,-5.979453,7.098613,3.928933,-7.757540,-8.179970,3.327557,-0.751816,6.795708,-6.088201,-7.978669,-3.550670,-1.256447,-4.198046,-7.352660,7.811262,8.504215,-2.829594,0.881877,5.173342,-1.260771,-8.380469,-7.438030,-7.912933,7.558296,-0.032637,-6.803420,-8.497166,8.881676,-2.020274,-8.667681,-5.208870,8.970657,3.536672,-2.016280,-5.340327,-3.234060,-2.515186,0.913995,-3.161287,8.357137,-4.851787,-1.081364,4.215513,0.733813,7.470008,9.761155,5.515739,-6.903577,5.139817,5.775230,1.924896,-8.170811,1.356254,-5.566072,3.304044,-0.086915,6.445697,-3.632739,9.144960,-5.250007,-2.407096,-5.248445,-9.396400,-6.887793,9.440784,4.628290,8.073681,-5.532433,0.599816,-9.735480,-6.763171,5.056613,1.392704,-0.045541,0.208000,-0.136109,1.170275,-9.312300,0.289730,8.318502,-2.219287,-5.419598,2.115856,-1.390119,1.889855,6.165562,-4.807419,-9.349558,-4.396084,-0.663138,8.261663,4.731029,6.344945,0.272099,-4.783564,7.744492,8.729702,-7.298813,-6.827217,-4.191967,-8.267654,1.614833,-8.113584,-5.144710,9.943647,-4.909172,0.047112,1.810137,1.191532,-6.511621,0.181414,2.675347,3.088596,6.096253,-1.335831,1.482850,1.713254,2.449161,-8.835381,9.460287,-0.960864,5.478390,6.527995,-4.297190,5.713204,4.037790,-1.558708,7.374104,-0.201777,9.434839,-2.723567,6.309109,-2.141701,6.101643,1.740716,-8.495684,2.829560,2.298461,-4.985213,9.062613,-1.051829,-1.516553,7.855385,-2.873807,6.753722,9.926036,3.334742,4.176130,2.772085,-4.579863,4.101537,4.518320,-4.862027,-1.101918,-7.329496,-6.562118,-2.797375,-4.282674,3.707102,8.169799,-7.064498,-5.226233,-2.515574,7.269489,9.835894,-8.504593,-6.376448,8.588383,-4.530110,2.580942,0.336358,-1.542021,9.930842,-8.234333,5.748652,7.853676,-5.920550,5.502091,1.061873,-6.915196,1.845801,-2.789468,-5.489908,-5.874215,3.481699,-0.765691,-4.285745,-6.609234,3.864481,-1.376604,-7.455307,-5.317727,6.248270,8.063067,0.408861,2.704377,-2.275638,-9.547967,2.258048,-6.664812,1.155973,-0.715771,5.633839,8.341952,5.712025,5.615810,3.928348,-5.662785,-2.832402,7.077984,9.251217,-7.619791,-8.461098,3.486388,3.924567,-8.040958,-2.810953,-6.372657,3.272081,-7.097617,4.608929,7.726617,6.681492,-4.184046,3.536187,3.295572,-9.724507,6.953028,5.265044,7.393313,-9.957793,5.947043,-0.815687,-2.270268,6.280840,-7.782136,-1.030502,8.058663,1.289655,7.897774,6.530030,8.043526,-0.031928,0.687047,4.951745,3.690969,-5.714746,-4.866457,-3.456682,4.035937,7.961690,0.615488,7.051930,-9.505449,-5.329372,6.616920,-0.241622,4.353068,7.715846,-4.572496,2.611216,-4.018693,-9.613077,-4.509562,5.459346,-6.619670,5.071783,6.890064,-2.995687,5.640125,9.962023,8.122552,-1.485250,5.377314,0.312458,-6.567328,2.493025,-8.012197,-9.782144,-8.665894,-4.653265,-7.347083,-4.042438,-2.529836,4.249916,2.092348,3.030115,7.550513,-7.589679,0.363679,-6.124724,-8.454439,4.345352,-4.736382,-1.839971,5.597806,7.806670,-3.234821,6.819724,3.001857,2.972317,-9.150549,9.014217,-3.721696,-2.993799,0.158266,2.497279,-7.274678,-5.702650,-6.029128,6.182185,-0.432817,-0.473049,1.938696,4.727672,-8.364126,1.820623,3.477829,-9.311195,-1.998325,-0.010480,-8.567275,-0.662230,-9.086815,8.736879,8.107987,-9.484937,8.325221,-4.516443,1.481483,4.242980,-6.706580,-2.958075,4.988996,2.146376,5.544936,1.250076,-7.726923,-7.930116,6.658901,5.806314,-6.077502,-1.849325,-8.721911,-2.270072,-6.885044,-3.342337,8.859817,8.010275,7.840364,-0.681709,-3.552682,-8.134736,7.696062,3.054585,-1.590964,6.299003,-1.372610,4.089991,5.862409,-6.596415,7.032189,-7.732450,1.889182,-2.440069,2.528465,3.141431,-0.350104,-0.863746,-1.818995,-0.204853,-3.332179,-0.956674,1.639193,-8.699094,4.139401,0.878490,9.579722,0.447457,3.107961,9.106825,8.286986,-9.178479,2.682395,6.791056,-5.938453,-5.110867,-0.164020,8.245793,-9.914810,-4.047488,0.850080,0.420260,1.177955,7.118864,-3.082897,2.259503,-6.591017,4.206904,-3.263301,7.366316,5.611692,-8.285588,-8.488259,9.843141,9.852860,6.627826,4.283128,9.906913,1.353224,9.233107,7.070882,1.802391,-2.715503,5.683180,-9.069191,2.360959,7.624097,5.161453,-8.432874,-7.654167,-7.033545,-0.092331,-5.858644,-8.778471,-4.006432,8.311187,4.649895,1.931275,-0.213311,-2.211659,-0.134652,-4.789145,5.373372,0.986796,-6.603542,3.476672,6.065752,1.275478,3.079283,-5.249142,6.248790,-1.180932,-2.372572,4.781169,-9.012015,7.114394,5.503268,-1.231439,1.764078,-5.589898,-3.339454,-3.027864,8.420867,0.541373,-4.570019,1.103653,-5.724056,-3.708431,4.296184,8.115452,5.684812,-6.311919,-3.869466,-5.876287,4.580155,0.067145,-7.887161,8.503055,8.604504,2.962160,-7.275946,-1.821462,-9.490223,-1.443569,-1.971230,8.628486,-2.333378,-6.498193,6.375705,8.600092,-2.025379,-5.130900,-9.161081,-8.339744,-0.002298,7.658146,-8.677632,3.786385,-7.065848,9.034594,4.117239,9.259112,-1.562438,-4.034874,-8.235367,-1.193841,1.452845,1.147373,3.681630,0.485136,4.833618,-4.788672,-5.759353,-6.020747,1.527420,5.258404,3.070438,9.233854,8.744280,4.045696,7.050202,-2.650077,-3.416923,-8.261204,7.770965,4.731445,0.483411,0.923455,-3.325951,-6.056527,7.175729,-7.122918,-8.424367,-5.859681,-7.139474,6.609101,-1.804185,-6.305735,-9.492952,-6.031386,-1.367139,-1.440449,4.143203,-4.836267,-2.813759,-3.527321,-6.219287,-7.307669,-9.882111,-6.012353,-4.946552,-7.213888,4.867145,9.488219,7.568878,-8.580272,4.697651,4.381123,-9.410422,-1.000397,1.708682,-0.618370,-3.370870,-6.639134,6.296405,7.560692,7.084896,-8.831025,-8.913846,-7.491851,1.077242,5.843244,8.316770,-3.502681,-7.424364,-0.731643,4.467282,-8.317320,0.430380,-1.425852,5.260005,-7.518208,4.681283,-5.184184,-0.512890,8.105543,3.180249,3.583040,-9.364766,-9.751619,-0.747191,-8.271935,3.433723,3.196862,4.766607,1.886420,0.222670,9.538877,6.628960,-0.846349,-9.190164,0.898203,2.970995,2.453863,-3.216795,-3.304727,-0.224469,-7.652658,3.944232,3.238307,9.957878,-2.689393,-7.979886,0.852375,5.753817,-3.467422,-1.485119,8.980110,-6.904390,7.468457,-6.149459,9.676794,-7.413512,-1.803653,-2.705398,-7.897759,-3.890580,-8.220018,4.439832,-3.564220,-9.484193,-3.965965,8.198482,-7.442138,-3.071641,-3.153816,6.313696,-7.008444,-7.239575,-6.551329,-4.582303,-6.682293,2.277239,2.960698,6.894951,5.016543,-8.277496,-8.736787,3.740460,4.659852,-6.310241,-1.463893,-7.487736,2.473211,7.091236,6.142719,-0.854057,-1.489369,-7.974015,-1.771531,-5.195256,3.660291,-3.289760,-6.282857,-6.581481,6.085813,4.050744,8.243672,-8.508262,-6.133233,-2.133787,7.840433,-4.815750,-0.293689,-6.473370,-3.517238,-5.427306,8.417216,8.620096,-8.659943,-6.769969,-3.574646,1.928597,1.503671,-2.442829,4.601117,3.153328,1.463337,-4.114496,-1.406962,9.876644,6.975657,7.916999,-5.432146,-0.576306,-7.120161,-6.030040,8.612228,-3.359631,-8.891826,-4.076397,2.750600,-4.449847,8.555057,-4.575221,4.528271,-2.329766,2.705774,-3.417869,-0.467214,-3.517891,1.783307,8.725694,-4.714934,0.932848,-8.191133,-9.155607,8.948089,0.302191,-8.458058,-3.503011,8.093718,-7.379110,-8.415009,-1.105349,-7.614635,-5.568995,0.856370,-1.247236,6.149473,-3.917176,9.395694,-3.827246,-8.843090,-9.655373,8.580920,-3.827359,5.471338,-3.178051,9.726188,4.377265,9.180131,2.302563,2.578534,3.425147,4.905420,2.755849,-3.091251,3.766868,9.640112,3.162845,5.659164,5.662553,0.422110,-1.690617,-5.232627,-0.091650,8.180530,-8.555796,2.862348,-4.288690,-8.615489,1.265573,9.949399,5.783177,-8.155883,4.584525,-1.394776,1.220858,-5.515147,6.724041,9.447597,6.973562,9.567255,5.866981,6.728770,-1.797059,7.734640,-0.557914,-6.277384,3.267294,4.465422,-2.197160,6.117168,2.179816,-3.419529,-7.620396,-6.898621,-1.612265,-6.183743,-5.637397,8.378551,1.441090,-8.500275,8.604038,9.969845,-9.103441,-5.949299,-2.175426,-6.740743,4.164744,-7.575433,-7.037529,9.344473,7.672425,-5.286218,7.838478,-6.379943,8.053128,7.778265,6.531840,5.106134,5.154609,2.659651,-6.450777,0.151424,-8.777668,1.476689,-7.968309,5.119304,-7.412550,8.317141,-3.469965,-6.704629,-6.500059,-7.176070,-8.389724,5.128373,1.560457,-4.450078,-1.345382,-7.993082,4.534530,5.949172,-5.824374,8.009205,6.277196,6.885813,-9.504286,5.423512,2.642408,8.575949,8.655434,5.749397,7.423335,-0.147229,7.983498,-1.035774,7.022547,-8.070290,-0.938537,-4.896127,-9.218546,0.363593,-8.501793,0.849696,3.800353,4.257166,-7.271308,0.451928,-2.064253,1.633812,-8.048820,1.185931,-8.314350,-8.187799,9.585848,-0.340838,-0.668097,5.793718,-7.434338,-2.471157,5.983042,-1.978615,-7.965708,1.232720,-4.974915,-7.246604,-3.645507,-1.934476,3.425286,9.817616,1.616250,-0.089261,-3.713448,-0.109261,-9.231938,-0.542867,8.202474,8.329313,-2.682107,-8.683546,-1.452398,-2.803905,-4.343929,0.340786,4.787362,7.904800,-7.648301,-0.869892,4.180548,0.234579,4.842096,2.466766,-3.533809,-6.351992,0.161184,1.021645,5.164898,-0.122060,-5.974838,8.276473,-8.282614,7.424612,-2.989340,0.043494,-4.217349,1.961765,-6.849426,-6.007696,-3.639722,-3.132719,-4.582460,0.181271,4.336367,3.353038,2.512539,9.858708,7.219617,-2.654473,-2.664220,7.062085,-0.134307,-1.698476,3.953236,0.247890,9.285204,9.296428,-0.091695,6.096124,-9.243514,4.398618,6.894602,-3.458228,8.796650,-3.301493,-8.681331,4.096543,-4.327399,-0.105869,-7.278711,2.189065,1.714105,4.481517,2.449658,1.545683,-3.623214,8.067670,6.691130,-1.880668,-2.764442,-0.353811,7.138998,0.883988,3.503818,3.923972,-2.626866,1.229143,-8.752432,7.513990,0.699102,0.828234,6.190584,6.718614,-1.320226,-3.191025,-5.958763,-3.829802,-8.601224,0.561492,0.705511,0.073194,-3.542519,9.039492,-3.152169,-7.678683,5.507070,1.035218,7.811092,7.909858,-2.720649,-2.591859,-5.884670,-2.984743,6.561511,-5.613510,2.155340,-0.581641,-4.927435,-8.740916,-9.328676,-5.970516], dtype = "float64")#candidate|8342|(1280,)|const|float64
call_8341 = func_5519_call(relay.reshape(const_8342.astype('float64'), [16, 5, 16]))
call_8343 = func_5519_call(relay.reshape(const_8342.astype('float64'), [16, 5, 16]))
func_6430_call = mod.get_global_var('func_6430')
func_6431_call = mutated_mod.get_global_var('func_6431')
call_8346 = relay.TupleGetItem(func_6430_call(), 0)
call_8347 = relay.TupleGetItem(func_6431_call(), 0)
output = relay.Tuple([call_8311,call_8341,const_8342,call_8346,])
output2 = relay.Tuple([call_8312,call_8343,const_8342,call_8347,])
func_8351 = relay.Function([], output)
mod['func_8351'] = func_8351
mod = relay.transform.InferType()(mod)
output = func_8351()
func_8352 = relay.Function([], output)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mod.get_global_var('func_8046')
func_8048_call = mutated_mod.get_global_var('func_8048')
call_8590 = func_8046_call()
call_8591 = func_8046_call()
output = relay.Tuple([call_8590,])
output2 = relay.Tuple([call_8591,])
func_8613 = relay.Function([], output)
mod['func_8613'] = func_8613
mod = relay.transform.InferType()(mod)
output = func_8613()
func_8614 = relay.Function([], output)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6733_call = mod.get_global_var('func_6733')
func_6734_call = mutated_mod.get_global_var('func_6734')
call_8620 = relay.TupleGetItem(func_6733_call(), 0)
call_8621 = relay.TupleGetItem(func_6734_call(), 0)
output = call_8620
output2 = call_8621
func_8642 = relay.Function([], output)
mod['func_8642'] = func_8642
mod = relay.transform.InferType()(mod)
output = func_8642()
func_8643 = relay.Function([], output)
mutated_mod['func_8643'] = func_8643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mod.get_global_var('func_8046')
func_8048_call = mutated_mod.get_global_var('func_8048')
call_8659 = func_8046_call()
call_8660 = func_8046_call()
func_1357_call = mod.get_global_var('func_1357')
func_1360_call = mutated_mod.get_global_var('func_1360')
const_8670 = relay.const([-7.400630,6.204060,-6.807879,-5.831135,9.798082,-9.142878,6.538121,2.578178,-1.898100,-1.877545,-3.055733,-3.135050,-0.506971,9.185237,2.606484,-4.778971,9.544959,7.846246,1.556098,7.825320,7.274074,-9.830641,-8.813742,2.820274,-2.325262,6.888827,-4.063770,2.231831,6.947877,-0.425193,-3.308829,-3.868615,-7.967956,0.232272,8.339842,7.833432,4.086358,-4.759342,8.350139,-4.924079,4.894937,7.302729,-8.324576,-3.162009,6.442147,-8.700274,-5.738815,-7.197000,8.954458,-5.089358,-3.182627,9.728640,0.655154,1.347941,4.531066,-7.032843,-7.227748,3.959446,5.882090,-4.938719,-8.724609,-0.138218,-8.267339,-7.537076,0.107861,-7.460093,-8.535509,7.873375,2.679610,-1.993907,-2.113437,-3.271010,-6.902784,0.548285,4.432537,0.779533,5.720670,-7.641838,-9.326340,3.190939,4.008193,5.480778,9.538787,0.024444,8.963759,-7.784808,5.628754,-8.683963,-1.590796,9.523204,-3.620118,9.951772,-9.251001,6.987178,-5.617827,-5.011201,-5.456292,2.378512,-8.743559,8.791104,2.827310,-8.486152,-0.914888,-8.799613,-2.740155,-4.321566,-0.874645,-9.037023,-0.151300,4.706608,-6.293055,-5.505009,3.659651,0.722487,7.436116,-3.712043,-2.286317,4.258697,5.665735,7.658962,6.346089,-8.102243,5.787782,-4.136840,-2.101643,4.381642,-3.819667,-4.771793,9.931157,8.040427,-2.762408,2.064912,-3.173623,9.686686,7.555995,-9.900101,-3.003272,-8.157792,7.155320,5.999580,7.073743,0.690341,8.020093,1.467742,9.181816,5.643638,-6.369840,-5.972606,8.536884,1.095937,-9.263691,8.565501,-9.343495,-2.968494,-8.167877,-0.242442,-1.893092,3.353286,0.048373,1.403466,-6.054567,-5.063187,6.616941,2.435276,-4.146402,1.597510,-2.854801,4.416673,7.449356,4.727490,-9.905721,0.656989,6.938879,-4.026475,5.127968,7.640062,-5.255544,9.234806,-4.526273,-9.172008,3.617741,4.003493,-4.511086,-2.980213,-2.268153,8.231104,1.643779,-8.089997,-8.147617,5.788274,-6.116801,3.558997,-1.475609,-5.711181,1.964751,5.602685,6.879138,6.248122,-9.005741,1.104470,4.235673,6.206349,8.346880,3.827240,-3.768518,9.544739,1.031544,4.429243,4.604983,-5.636826,-5.419326,3.610389,-9.472971,4.920935,7.290483,0.467345,1.145589,5.468429,-2.772784,-9.634124,-6.600863,5.662986,-4.843864,2.529326,7.302983,3.557186,-0.306825,1.802592,7.651196,7.285213,4.218263,8.303571,0.297941,9.120887,9.577694,-9.682691,9.117275,5.932120,-8.370612,-6.218112,-1.289731,4.410668,-9.921051,4.814468,7.770730,-5.947523,6.473797,6.017539,2.093634,4.209444,2.452512,-6.627418,5.371942,-5.420245,-3.348152,9.842171,-2.070122,7.966121,4.430974,-7.175264,1.029790,4.514191,-2.671814,1.594462,6.395119,-1.370159,-5.606823,-0.207064,-1.207936,2.325004,2.701268,5.068566,6.645266,-7.070359,6.878726,4.870469,-7.344634,-2.004337,-7.027335,-5.048000,-0.179875,-8.565474,7.174708,-5.450131,2.868606,-8.834947,6.071464,3.473656,9.478706,8.362401,-1.271879,8.297574,-8.260088,-8.289355,-0.474830,-5.058341,4.670926,1.799074,6.265013,9.415492,-3.802553,5.557485,7.338346,-0.640869,6.331939,-1.523767,6.192111,-4.639690,2.487157,-1.741493,8.575208,-9.886448,3.971094,9.060620,6.245798,2.199338,-3.588179,4.845201,3.898962,-6.009710,-7.738320,4.491875,3.423433,3.038607,-9.368696,-4.064316,-7.188059,-8.148643,-2.402412,8.122737,-6.164006,8.438625,4.787735,4.760476,8.656392,1.056879,-7.711749,0.167520,-0.441297,-9.620420,-0.853006,-5.506693,6.224269,-5.482604,-3.117843,2.765520,-8.533415,-7.603361,-5.992257,4.592708,0.050319,1.364829,2.222677,1.118387,6.204472,-0.992136,-1.817973,-2.324942,8.429347,-0.244665,-3.982799,0.072229,-7.960907,0.564845,1.782663,-4.876649,4.618516,-0.020906,-5.106635,8.127531,2.817782,8.329653,-8.113010,7.343019,-5.053564,-8.530078,1.296020,-2.782285,9.617361,-4.998741,-7.235192,0.168385,-2.374998,-5.957274,-7.825815,-0.183932,6.973128,1.428830,-3.541635,5.778980,-9.994837,4.035763,4.362871,-3.836489,7.324399,6.366528,4.433839,-9.495297,-1.465430,3.444243,-3.288216,-7.017380,4.950100,9.201508,-7.269006,6.360439,-9.872273,1.674086,-0.121435,-9.790612,-2.295542,4.512292,7.075531,-7.141199,-6.396188,-6.252291,2.116518,-0.610803,-9.681140,-2.842552,-5.943991,-0.058497,4.275924,7.001167,6.128383,9.553744,0.830249,0.983871,-2.046367,1.794918,4.248710,9.006780,-2.279769,-9.448565,-4.108627,-9.024505,-2.631443,6.182886,-0.835039,3.851421,5.504288,4.736078,3.528880,8.163742,-0.083764,-7.877727,-5.601522,6.399290,5.138069,7.542249,-3.142529,-1.497455,-2.598691,-9.138123,-1.856684,-2.116614,5.643245,5.915669,2.631108,-4.787477,7.039642,5.912456,0.073666,-4.443737,-9.176237,-9.455188,9.977588,4.771917,-1.626333,-3.354263,5.797716,-9.700057,8.273571,4.730732,-4.218589,-1.538229,-8.404966,1.806908,-6.525363,-6.886711,-9.714212,-5.769927,-1.629698,9.900723,8.211802,2.353511,4.300154,3.921912,1.301881,2.261370,8.356391,9.479981,6.233596,1.457914,4.876931,8.457907,-7.388926,2.752780,8.539500,5.935904,3.522313,-9.721911,8.378250,2.725664,-2.068605,-9.636651,-2.717345,-1.733697,2.293484,-0.896363,9.005598,-0.140811,8.025702,-9.306218,-9.569015,9.784507,2.125063,-0.629554,-1.725556,4.258127,-0.511789,-9.956558,-7.957179,8.659104,-3.845957,-2.188087,2.012565,2.747153,-3.701729,5.189275,3.734974,-2.279628,-4.743065,9.616376,-9.974491,-9.669153,8.630159,-8.007292,5.551598,3.979851,3.346867,4.310205,-6.325446,6.578272,6.047074,9.090527,9.526087,3.530421,2.871257,-9.881574,0.227985,-6.096361,6.682245,-4.042830,-7.521984,-3.934542,5.500757,-3.156047,-5.500355,8.187323,7.581049,7.786609,-6.120455,-8.906383,4.877092,-3.476173,2.856901,2.411643,2.877027,1.420541,7.382688,7.341695,-5.917271,-1.282038,9.520522,-8.264875], dtype = "float32")#candidate|8670|(576,)|const|float32
call_8669 = relay.TupleGetItem(func_1357_call(relay.reshape(const_8670.astype('float32'), [16, 12, 3])), 4)
call_8671 = relay.TupleGetItem(func_1360_call(relay.reshape(const_8670.astype('float32'), [16, 12, 3])), 4)
func_6177_call = mod.get_global_var('func_6177')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_8702 = relay.TupleGetItem(func_6177_call(), 0)
call_8703 = relay.TupleGetItem(func_6178_call(), 0)
func_7797_call = mod.get_global_var('func_7797')
func_7800_call = mutated_mod.get_global_var('func_7800')
const_8744 = relay.const([-5,-8,-6,-1,-3,-10,2,-9,-9,-1,-10,-7,-4,-9,4,-6,-4,5,9,7,-8,3,8,-3,2,-5,7,-5,7,-5,6,10,-6,-2,-3,-8,-7,3,6,-2,9,3,9,7,2,5,-5,-9,-1,9,9,-7,10,-10,5,5,9,-10,-5,-2,-2,6,3,-10,8,8,-7,-4,4,-3,7,-5,-7,-5,-3,-1,6,-4,-5,-1,6,-10,4,-1,-9,-9,4,3,10,-6,-4,10,4,-9,10,4,9,8,10,-6,-6,5,1,-1,-5,6,4,9,1,1,-8,-9,2,4,9,-3,5,4,6,-8,4,2,1,-8,-1,-6,-5,-8,2,-1,2,-5,1,-4,5,-10,6,-7,-5,-9,-5,7,-10,8,-7,-3,10,7,-5,10,4,9,4,-7,10,-5,-3,-4,7,4,-9,-4,-7,2,-3,4,-2,7,8,5,2,-10,2,7,-5,5,10,-3,-2,10,7,5,8,5,8,3,-2,4,-8,3,-1,-5,10,9,7,1,5,5,-10,1,-2,1,-7,8,-5,7,1,-1,4,-5,1,-4,4,2,-10,5,7,-6,10,-10,-6,4,-2,10,-5,6,-3,-2,2,4,-7,5,-4,10,6,-2,8,-2,1,6,-9,1,7,-10,9,10,-4,2,10,3,-2,10,10,-10,-6,-4,3,6,9,8,3,-6,4,4,-9,-2,1,-1,-4,10,1,4,1,3,-7,10,8,-6,1,8,6,-1,2,7,-6,5,-3,9,-8,-4,1,6,9,4,3,-1,10,5,5,7,9,7,10,7,-10,4,4,-1,-3,2,6,4,-5,-9,10,-4,-7,-4,8,-6,10,-10,-9,7,7,-7,-3,9,1,10,4,-2,-4,-10,8,1,-4,-4,1,9,3,10,-9,5,9,-1,9,5,-2,8,-9,-7,9,9,5,7,-2,-5,8,-10,7,-9,5,-2,7,4,-10,-10,-4,-8,-5,-10,-3,-9,-5,7,10,-10,10,-9,-3,-4,8,1,-2,-3,-5,-5,8,-3,-5,-6,-8,10,-8,6,4,4,3,5,4,4,1,-2,-5,3,-5,5,-7,3,3,-7,-7,-10,8,-8,3,4,9,-4,-2,4,-10,-3,1,-2,-3,-1,2,3,-7,2,10,6,3,6,9,-3,9,5,9,-6,6,5,1,8,8,5,-6,-9,-1,2,-7,10,-10,7,4,-2,-3,10,4,9,8,1,-7,4,-7,1,-1,1,-7,1,-4,-2,1,-8,-8,8,-2,-1,-1,-8,-1,-2,9,-6,-2,6,3,2,7,-10,8,2,-8,9,-8,-6,6,-3,-1,-1,-7,10,4,3,-1,-10,-10,-9,5,-6,6,2,-9,-9,4,-5,9,-9,5,-6,-5,-5,9,3,-3,9,-10,3,7,-2,-2,-2,-2,3,4,-8,-8,-4,-7,2,-6,1,-5,-7,-4,3,-8,6,9,1,-3,-2,2,-9,-3,-10,4,-4,6,1,-10,8,3,-10,-5,6,8,10,-4,-10,10,3,-3,-4,8,-7,-4,-6,8,9,-7,-3,1,-6,2,9,7,-9,10,-7,1,-5,-2,-1,-9,6,-3,10,4,-10,-1,10,2,-8,3,1,3,2,-8,-6,3,-10,2,-4,-5,3,-3,6,2,-10,-1,-2,6,2,7,3,-3,-8,-5,1,7,6,9,-7,-5,-10,5,-5,-6,-9,6,-4,-4,-3,-5,9,-10,-1,-6,-4,5,-7,7,-5,8,7,3,10,6,-6,-8,4,-9,-1,-5,-6,-8,-3,5,-10,-10,-7,-8,2,-2,6,5,-10,-5,9,-5,-8,-8,-7,-9,-7,4,1,3,-8,4,-7,-4,-3,-5,6,-7,-2,-7,9,-6,4,2,-5,-1,-2,-7,-1,-3,9,-9,9,-1,-1,1,-4,-8,-8,6,-5,-6,-9,5,5,6,-7,9,1,8,10,-3,6,-5,-2,-10,5,6,-1,5,9,8,-6,-2,8,-10,9,3,5,-4,8,-5,-1,8,-2,-6,6,-6,2,1,10,-8,-5,6,10,8,-3,-10,4,6,3,-6,7,-1,-2,1,-4,-4,-10,2,2,8,4,10,8,-5,-10,-9,-5,-8,-3,-10,5,-9,-4,-5,-2,2,2,4,-1,-10,10,-8,10,-3,-4,-1,8,-4,-2,1,-3,-9,-6,-5,-4,8,4,10,-3,-6,-5,-3,-8,7,9,3,-10,5,5,-5,-4,-2,8,-2,-4,-7,7,4,-9,3,-9,-10,-9,5,4,3,-2,8,-7,-2,-9,10,8,-9,-2,-7,-1,10,-1,-3,6,4,-1,7,-3,6,7,-7,-9,4,-3,4,5,3,10,2,4,-3,10,-2,10,-4,8,-4,10,-10,-6,-6,-8,-8,6,4,7,6,9,8,-10,6,4,2,-7,-6,7,-5,-10,5,2,8,9,7,-2,7,9,-9,-3,-8,3,3,-5,-7,1,3,-3,5,4,10,-6,9,2,8,-1,8,-10,4,-9,-2,-4,6,-5,7,-10,7,-6,1,6,-3,-6,1,-2,-1,7,-3,-8,6,9,-3,2,7,8,-8,-9,-9,4,3,4,-8,9,2,10,1,3,10,-3,5,-7,6,-6,3,7,-5,-9,-4,6,-6,-5,-8,10,-6,-7,8,6,1,1,9,9,-10,8,-9,-1,-1,-3,-5,-8,-9,3,-8,1,10,-3,-1,4,-3,7,-7,10,-7,10,5,4,-3,-1,-6,2,4,5,-10,-7,3,8,2,-9,-8,-10,7,8,3,-10,-2,4,-10,1,10,-4,2,3,7,-3,-3,9,-1,9,-8,2,3,-6,-5,-4,5,-7,7,2,-6,-10,-2,-8,-10,4,9,-8,9,7,2,-10,7,-5], dtype = "uint32")#candidate|8744|(1078,)|const|uint32
call_8743 = relay.TupleGetItem(func_7797_call(relay.reshape(const_8744.astype('uint32'), [11, 14, 7]), relay.reshape(const_8744.astype('uint32'), [11, 14, 7]), ), 0)
call_8745 = relay.TupleGetItem(func_7800_call(relay.reshape(const_8744.astype('uint32'), [11, 14, 7]), relay.reshape(const_8744.astype('uint32'), [11, 14, 7]), ), 0)
bop_8750 = relay.greater_equal(const_8744.astype('bool'), relay.reshape(call_8743.astype('bool'), relay.shape_of(const_8744))) # shape=(1078,)
bop_8753 = relay.greater_equal(const_8744.astype('bool'), relay.reshape(call_8745.astype('bool'), relay.shape_of(const_8744))) # shape=(1078,)
output = relay.Tuple([call_8659,call_8669,const_8670,call_8702,bop_8750,])
output2 = relay.Tuple([call_8660,call_8671,const_8670,call_8703,bop_8753,])
func_8760 = relay.Function([], output)
mod['func_8760'] = func_8760
mod = relay.transform.InferType()(mod)
output = func_8760()
func_8761 = relay.Function([], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8805 = relay.var("var_8805", dtype = "int64", shape = (10, 13, 14))#candidate|8805|(10, 13, 14)|var|int64
const_8806 = relay.const([[[-4,-4,5,-1,9,4,5,-5,4,6,1,8,5,-6],[-6,-4,3,3,7,9,-5,-5,-9,-1,-10,-2,-10,-6],[6,-1,-1,3,2,6,-1,-7,-7,9,5,-8,-8,5],[5,-4,3,3,2,-10,1,-6,-8,-3,7,3,-3,-8],[3,8,7,1,9,6,8,-8,9,-5,8,3,9,9],[7,2,3,2,-4,-9,-6,6,8,-5,7,7,-10,-3],[6,-1,-1,7,-3,-1,-1,-1,5,1,9,-2,9,-6],[-10,8,-2,3,9,5,-8,-10,9,3,7,9,3,-6],[3,-9,-10,-2,-5,-4,-2,8,-9,6,10,-4,-7,-6],[-8,-3,4,-7,1,5,-2,-2,-1,-4,-1,-10,4,-9],[-1,-3,7,4,-8,-6,-10,-4,-1,9,-9,2,-7,-10],[-8,-4,-5,-10,3,-4,2,-1,-10,-7,3,2,-10,3],[-7,-10,3,-4,3,1,-7,-8,-4,1,5,-4,3,2]],[[10,-3,-8,4,7,10,-3,5,-7,-8,1,6,7,-6],[-5,6,-4,4,1,5,-7,7,7,7,4,-4,5,3],[-9,-6,9,-2,2,7,4,-3,-7,1,2,-8,5,3],[2,-6,7,9,-6,9,7,-3,-9,3,7,-2,4,-5],[-1,-1,-4,-8,-8,7,6,-4,-3,5,3,10,2,9],[9,4,-2,-5,-3,7,7,-7,-1,7,10,-6,10,5],[5,7,-7,5,10,-8,-2,2,1,4,10,4,3,-3],[7,4,-1,7,6,7,-4,6,-2,-7,10,4,5,2],[-9,1,-2,-7,8,2,8,9,-6,9,-5,-10,-2,-5],[-2,4,-1,-7,-10,7,-8,1,10,-9,-4,2,-7,-2],[-7,-5,-5,10,4,10,-10,3,8,6,-3,-4,-5,4],[-1,10,-7,-6,-6,8,-2,5,7,-1,-1,5,-4,-10],[-5,1,-3,3,8,10,-4,7,9,9,1,5,1,-7]],[[-8,1,1,9,-5,-4,2,8,-6,-3,8,-3,3,10],[-7,-6,3,-8,1,10,2,10,10,9,4,1,3,8],[1,10,6,4,-7,-4,4,6,-10,9,4,-7,1,8],[-1,1,-8,-3,1,4,2,8,-3,-1,1,-4,9,3],[9,-3,2,6,7,4,7,-7,5,-4,-10,-3,4,-5],[-1,10,-2,2,-8,-1,8,-4,3,-5,-5,-1,1,-7],[3,7,-10,4,1,-5,-4,6,4,-8,-9,7,9,10],[-2,-6,-9,-9,-9,3,10,-1,-4,8,-4,5,9,-9],[8,2,-8,-4,-1,-8,-7,2,-6,-2,7,8,-6,7],[5,-4,9,10,4,6,9,8,4,-1,-1,3,-3,-3],[6,-4,8,-1,-6,6,-6,-7,-6,-1,3,3,7,5],[-8,8,-8,4,-2,3,-7,8,-1,10,-10,-10,-5,8],[-8,1,-1,2,1,5,3,1,-7,5,4,7,-8,-6]],[[1,-2,-6,7,-2,-7,6,-6,10,-9,6,6,3,1],[-4,2,-10,-4,-7,-4,-9,2,2,4,-5,8,-1,1],[-2,3,1,9,2,-10,4,8,6,1,-9,-8,10,-8],[-2,4,5,-10,-5,-8,4,-3,-3,-6,-4,6,1,-10],[2,3,10,10,5,2,2,-4,-9,7,-2,10,1,9],[-10,5,8,-5,-5,2,6,-9,-5,5,2,5,-6,-7],[-8,8,-5,9,-1,2,9,4,-9,4,-8,5,10,3],[2,2,8,10,-3,7,-5,-7,-2,-2,6,4,-4,3],[8,1,-5,1,-2,-7,4,-8,2,5,-8,6,2,7],[8,1,5,-5,4,-4,-1,-3,4,1,-9,-1,-3,3],[6,3,-10,-7,6,-5,-9,1,9,-2,7,8,-2,-5],[5,-2,9,-4,-10,6,-2,10,-10,-1,7,4,9,-2],[-3,5,6,-1,-5,-6,6,4,-2,1,-7,3,-6,-8]],[[10,-5,8,3,9,10,8,10,-7,4,-9,3,9,-10],[4,-9,9,-1,6,-2,9,1,-10,-3,-5,10,4,-8],[1,8,-5,2,-3,-10,7,5,7,-5,-7,8,5,-4],[1,-2,1,10,8,-1,-4,-1,-6,-9,2,-10,2,1],[-5,-8,10,-1,-1,8,-2,4,9,-1,2,7,-3,5],[4,5,-2,8,-5,2,9,-7,6,-10,-7,-1,10,6],[-7,-1,6,2,8,-9,-10,-9,8,3,9,2,-4,-8],[-3,2,-3,10,-10,9,-6,-1,7,7,-9,-9,4,6],[-6,-4,7,6,-8,3,-3,-6,-9,5,-8,-1,-3,-5],[4,6,-6,-9,-6,-4,3,10,10,-5,4,6,4,-9],[10,5,7,-5,2,7,9,2,-1,-10,-10,-1,-6,-6],[-4,9,-3,9,-6,7,8,-7,9,9,-4,2,-5,-8],[-10,3,-3,10,-7,-8,-7,10,-8,2,-6,7,1,4]],[[2,1,10,8,6,-1,-10,5,-3,1,-4,1,6,-2],[9,5,9,5,-9,5,2,-8,7,10,-10,5,5,-6],[6,-8,-3,10,10,-3,10,-4,-6,-7,-8,4,7,4],[7,-3,-5,10,5,-9,-5,3,2,10,-2,2,-1,1],[-8,-1,4,-8,4,-6,7,-1,-8,10,2,8,4,-5],[8,6,-1,-9,-9,-4,6,-2,-5,-7,-7,-5,-6,4],[-4,-6,5,8,-9,10,3,-2,6,-2,-9,6,-8,7],[-7,-6,10,-5,4,-2,8,2,8,10,10,-6,5,-6],[-4,-8,4,4,-6,10,10,-4,5,-10,1,-8,-6,-9],[6,-5,-8,3,-5,-5,-4,10,4,2,1,2,-6,5],[5,-4,-1,3,-9,1,-1,-4,9,9,-1,5,-5,-6],[-7,2,6,3,4,-7,2,7,-4,10,-7,9,2,-10],[10,7,-6,1,6,1,4,2,-6,1,2,-5,10,6]],[[7,8,-3,-9,5,-3,8,10,-2,7,-3,-1,-8,5],[10,2,9,-9,7,3,9,-5,-2,8,9,-5,4,9],[-2,-3,-8,-2,-7,3,-8,-5,6,6,7,3,1,-10],[4,8,8,10,6,-6,10,6,8,7,-3,2,-6,8],[5,-2,-1,-6,-4,4,-8,-5,-10,6,-4,1,-5,7],[-8,-7,-5,3,-1,-5,-7,5,1,-4,10,-8,5,2],[-2,9,6,-6,-7,6,-10,-3,10,-2,9,-2,6,-3],[-1,8,6,7,7,2,2,2,-9,-1,-4,-1,-7,-1],[-3,5,-1,-9,-2,8,10,3,-10,-4,-1,-1,7,7],[-5,8,-7,3,-6,5,-9,-9,-5,-10,9,-5,8,5],[-7,1,5,9,-2,7,7,10,-7,6,3,-6,-10,3],[6,-5,-2,-5,8,8,8,-2,9,10,10,5,-2,6],[-1,-1,-6,-10,-5,-7,8,-2,3,9,5,8,-7,-1]],[[-6,-10,5,-6,10,-1,-8,7,-2,-2,5,8,3,7],[1,-1,-4,-5,-4,10,-4,10,-9,-10,10,-7,5,4],[1,10,-7,8,3,2,2,-3,3,2,4,3,6,-6],[-5,-1,-2,-6,-3,2,-10,3,-6,-10,-4,1,6,10],[3,-3,6,3,-8,-7,-7,-6,3,9,-10,8,-1,9],[-2,9,5,-4,-7,-9,7,-5,4,9,5,-7,-9,8],[-4,9,-6,-1,-10,1,1,-4,5,5,3,9,4,-2],[2,2,6,2,-10,4,8,-9,7,-9,3,6,-8,5],[-2,4,6,8,7,-8,4,7,1,-1,9,3,-4,9],[3,-5,-2,6,6,4,7,10,-5,-1,5,5,4,8],[-8,-1,3,-5,-6,5,-7,5,8,-5,-4,-9,10,3],[-3,-3,1,1,3,-9,7,1,10,9,-3,2,3,-8],[-7,-9,3,-1,-10,-8,-6,-2,-10,8,10,1,2,-5]],[[-7,7,4,-6,10,1,2,2,8,-3,-8,-10,6,4],[-7,2,1,-1,7,-4,-7,-8,-4,-6,-4,-3,-10,1],[-6,-4,5,10,7,-1,-1,1,9,8,10,8,-3,-6],[-5,10,3,6,-10,-4,-6,-1,-9,6,2,1,-7,5],[1,-4,-8,6,8,9,-8,7,7,2,10,4,-9,-1],[-6,-6,-8,1,-3,-7,-9,-1,9,-1,-3,10,1,5],[-9,-4,-3,-1,-1,8,9,6,-2,-5,4,5,10,-1],[1,9,-2,-6,5,7,8,-3,1,-5,8,-3,-7,-10],[-8,-8,-8,-1,-1,-7,-4,6,10,-1,1,-5,5,3],[-8,8,5,5,2,4,-4,-2,5,-10,-7,7,6,-7],[10,4,-5,4,-8,-3,-6,4,8,-8,-3,-10,-1,8],[-9,-10,-7,10,5,-1,-4,5,-5,-2,6,8,10,2],[4,-9,-7,5,3,3,9,3,2,7,-7,-10,9,-4]],[[5,2,-6,-4,10,-6,-7,3,4,-1,-1,2,7,3],[-10,-7,-5,-6,-10,5,-2,-4,-9,-4,10,9,-6,-1],[5,-1,3,9,6,10,-8,7,3,8,8,-6,1,-10],[-8,-2,-9,7,-2,1,-4,6,-5,9,-4,-1,-10,1],[-2,-8,5,3,-6,5,7,-8,6,-2,-8,-10,-7,-7],[8,8,-10,-2,10,-7,6,-4,8,3,-7,7,-5,10],[-8,10,-4,7,9,-6,-5,-3,7,-3,1,-10,-10,-6],[6,10,4,1,10,-1,-9,8,-4,-4,-10,7,-2,2],[6,10,5,-5,10,6,-3,-1,-7,-4,-1,1,5,5],[-7,-3,4,-4,-1,-7,-2,-1,1,7,2,-1,2,-4],[-10,-6,5,-9,-1,9,1,-5,8,-7,-9,-1,8,1],[3,-6,-6,1,2,-2,2,-6,-7,5,-6,-8,-9,-5],[-8,8,4,4,8,3,5,2,-9,10,7,1,10,-8]]], dtype = "int64")#candidate|8806|(10, 13, 14)|const|int64
bop_8807 = relay.minimum(var_8805.astype('int64'), relay.reshape(const_8806.astype('int64'), relay.shape_of(var_8805))) # shape=(10, 13, 14)
func_7635_call = mod.get_global_var('func_7635')
func_7637_call = mutated_mod.get_global_var('func_7637')
const_8816 = relay.const([-2.940202,1.893176,0.828467,2.335542,-3.071062,-5.658437,-4.997437,-4.267420,-3.764636,1.526491,-6.964733,8.995546,3.375038,4.715966,-8.711334,-7.142123,-4.007659,1.222162,8.195282,7.101345,8.871104,-3.054112,3.409501,-6.369239,-6.123098,6.535397,-6.523284,-8.060669,8.627788,-0.113598,-8.376788,-5.670802,-6.492194,8.361465,2.272944,6.785194,-5.503336,-8.666678,-5.840434,4.540609,-2.723428,-6.382658,0.253489,7.761402,-6.205701,6.306717,-9.667084,-1.453009,9.554604,0.901242,-0.091986,-3.060722,-8.737872,-9.658850,4.556253,7.950957,-1.776012,-3.062767,-7.457775,-2.630514,-2.302272,-7.866464,-1.063543,9.360562,-8.334762,-6.642477,-1.394225,4.615446,2.621255,3.176684,-0.289297,2.532072,-3.074707,-7.286840,0.860382,-5.444145,-7.027105,-4.726836,8.504880,7.554495,-9.192584,-9.698880,-4.257381,8.348202,-9.465054,-6.158165,-3.672382,8.524435,1.216328,6.472240,9.810167,-8.327307,-3.190582,-1.020921,4.252162,1.408742,0.053412,-3.524376,-4.383432,5.737643,-4.630799,1.782619,1.996777,-0.999040,-9.863835,6.714838,9.794965,-7.807227,0.372975,0.692472,-5.665947,-0.937313,-6.581916,2.446358,9.019518,4.128163,-2.366102,-0.136013,-5.436030,-3.450335,-7.831419,-4.565888,-6.806036,-2.151267,9.418601,-8.920980,-8.616981,8.201390,1.463995,3.779895,8.116307,-4.847191,7.920559,-0.367836,0.180182,2.325604,-3.479393,7.476818,-0.330800,-7.417323,3.276540,8.938844,-7.880961,6.032982,1.810982,-3.585571,9.937887,-9.292027,1.583603,-2.474650,1.662716,-8.680129,1.931011,-5.505236,5.052920,1.730277,8.006261,2.667946,8.496069,4.513094,0.878742,-7.702033,5.520443,-3.678189,0.663354,4.716854,-7.372084,-8.602926,-7.348906,9.136621,-0.334382,-0.467789,3.795467,7.079072,-8.149438,0.829469,-6.903609,8.145725,-4.530862,-4.656015,-2.013943,-3.573519,9.221134,2.759673,-3.427144,-5.877463,6.076360,-5.519962,-8.039296,-6.338032,2.841013,-8.841465,1.008370,9.183380,1.487729,6.103317,4.790417,-6.275709,-1.003886,-0.082367,-3.766141,4.313867,-6.631401,-0.315246,7.026055,7.912214,-7.109712,-3.544248,0.477344,3.571257,6.462957,0.863935,8.885521,-3.727160,6.800575,-2.876380,7.866923,7.186060,9.905813,-7.084204,-4.398566,6.627963,4.463361,-2.744110,4.741958,-1.509566,-0.802663,-9.166953,7.813771,-2.522684,4.408028,0.551788,-3.010962,-0.093088,-2.675386,1.303329,8.650130,-8.014977,-5.746372,4.895114,-7.334534,5.622712,8.987786,-0.283896,-8.258935,4.235719,1.439809,-4.066037,-5.619598,-8.703139,7.866327,1.116344,-7.555053,9.274548,9.687165,5.486194,-9.302691,-8.727108,-8.693309,3.908583,3.743463,-2.613099,0.391484,6.298049,-9.717915,-6.915284,1.853536,-0.520474,6.667239,-6.307850,-0.327624,8.747608,-0.441994,9.744622,-3.182507,6.044811,9.537956,6.104254,-2.203391,-4.518329,-5.869841,-0.013037,9.078609,4.974844,0.603164,5.656782,5.094465,-3.311511,-9.667197,-8.273628,-2.385394,8.189831,-8.891819,-5.251412,6.221895,3.371097,-5.757867,3.621953,-5.235604,-8.167428,-6.848173,9.457364,-4.950045,-6.188603,3.031564,-6.676090,-2.247180,-1.014564,-4.946284,-9.061065,0.117105,9.708261,7.978723,0.510810,1.785106,4.918493,4.212207,-2.187268,1.131006,9.452584,1.762519,-3.470697,2.585902,-3.607119,-4.623011,2.715705,-0.032162,3.479470,3.301420,5.186394,-9.817267,-4.712976,-8.203541,-9.947584,5.728492,-9.658818,7.124972,4.033958,8.206493,-5.013195,-9.828650,-8.824462,-7.735688,-6.250014,-2.596176,-7.924858,8.447609,3.188254,6.561988,8.550858,9.361705,-4.203714,-6.882710,5.611388,0.118683,2.452434,4.584772,9.509647,4.301037,7.741978,6.746317,8.667998,-2.706498,-2.907711,-8.101963,7.222957,-6.139407,-0.737534,7.248198,-3.000093,2.800643,-3.863874,7.230803,-5.000809,6.658781,9.431786,4.348166,1.407044,2.409815,-6.895417,5.298326,2.311501,6.215353,1.346220,0.765731,0.915233,2.038606,0.493674,0.966580,-5.441149,9.773264,-8.376058,-4.075232,-9.635894,9.222468,6.663210,-9.173146,-9.136436,-4.523284,-2.116241,-2.161882,-3.480479,8.519115,-2.844500,7.226308,-2.839123,-2.325760,4.862394,-8.671990,-4.948286,-6.333717,8.853744,-6.975246,-5.741193,4.763545,-7.063985,5.769666,0.451948,-0.592116,2.588212,-9.337986,-1.391492,-6.770556,7.909857,-0.955799,1.839627,5.380938,3.430126,-7.205685,-6.148782,4.814340,0.365118,5.393382,5.509829,7.433075,5.238565,-9.386044,-5.902155,-7.348426,-8.904776,-0.016618,0.823416,-4.873561,8.200993,3.675572,-1.362198,2.553491,1.731316,-8.550036,-5.715995,3.733642,-5.688314,-3.940683,1.141893,-3.798540,1.690490,4.939600,9.673579,6.167003,-7.370276,-0.475553,1.048442,1.510448,8.416641,-1.006755,3.313406,6.713518,9.689754,-0.776211,-2.512403,-9.244362,6.529299,4.545428,3.424550,-1.392731,8.263806,-9.738610,-0.761526,0.475833,-9.033186,7.814818,2.969810,0.336692,-3.624030,2.985462,-6.761969,-6.254590,2.572158,-6.692240,8.974268,5.902018,-3.774054,0.639552,4.195094,-2.689880,-9.843526,6.933757,-8.314673,6.209469,-5.187551,-9.856342,-0.759011,8.062771,-3.903655,0.380250,-9.119844,-2.684419,-1.540904,7.382460,-4.324417,8.659429,1.597041,-2.415748,8.181840,8.493791,4.272760,6.176876,-8.650134,2.308512,-2.591852,-1.236490,5.018575,4.126111,1.287408,3.223855,-2.525657,-8.330326,0.355765,-1.515447,-4.628375,9.697681,3.886712,-6.383347,8.760660,-1.185523,-5.995885,-2.431690,9.835292,4.874982,-3.220549,-3.673182,-4.827649,-1.565133,2.272700,-9.303780,-5.885221,8.197710,-4.839785,-0.111391,-7.747633,-0.170366,7.727587,-9.513432,-6.153345,6.707468,2.176499,-5.776766,7.770984,8.545974,4.633171,-2.225331,1.348615,9.601172,5.329360,0.777022,-0.307819,-6.168493,-5.696448,-5.583313,1.775052,8.531947,4.956221,-2.762090,8.398862,7.285403,5.796075,-5.941200,-3.994363,4.499975,9.266426,5.374152,-2.674723,-5.689371,-8.298736,0.151083,-4.905426,-2.425194,-2.116052,-7.662953,2.917037,-5.859159,-0.172493,3.803921,-2.242397,-0.525734,-5.349855,0.061439,-4.064859,2.221445,-5.686072,-0.640439,-0.973688,-7.375854,0.434477,-9.677794,2.466416,2.976637,0.400949,-5.794689,6.028629,-2.986787,-2.152410,-7.140130,6.839478,4.523821,6.710643,-5.710376,7.608796,-6.609119,-5.285190,2.061812,-0.683875,5.087160,3.626732,8.694619,-4.953795,-3.069232,-2.871992,2.756552,0.189472,7.644427,-1.718437,-3.495863,9.470942,-1.619513,0.951216,8.284511,1.801840,6.273979,-9.187193,5.034491,-6.146063,0.951426,5.301745,-7.811105,3.546966,9.606451,-2.766075,4.005089,-6.305798,1.509397,4.148739,6.750390,9.181554,-5.733743,-5.608230,-8.867626,1.989765,5.904950,7.051768,3.002622,5.720670,-5.495196,-2.698513,5.381044,-5.449599,-1.242443,0.567178,-1.867747,8.932690,-3.587468,-8.032496,-6.465489,-4.889599,-3.419131,-0.778690,6.628462,-6.971807,6.727684,0.697802,-6.498807,8.691181,-8.224999,-4.612625,5.740166,2.258273,2.064475,-2.286367,0.669639,9.007139,-6.367402,-4.400275,-4.463049,-0.138050,4.296328,-3.082344,6.565010,7.614563,6.968622,-1.141858,2.719161,-9.869570,7.688216,-4.754100,-0.929432,4.118837,1.126095,-6.540961,-3.749913,8.339790,-8.262346,1.885987,3.409237,3.270402,9.045737,9.761845,2.303831,5.323275,0.891470,-6.997647,-3.553150,-7.315988,1.117034,4.865386,0.390436,3.581865,-5.536225,1.907435,4.288745,-1.076008,-0.507432,0.461691,-4.249372,1.463580,5.247322,0.355268,5.525696,3.134620,-2.220261,-7.075073,-5.037084,6.262715,4.265717,-3.765499,-6.153301,0.214129,6.599400,-5.728100,5.888971,8.282702,0.886857,-8.879099,-0.439076,1.238874,-3.044981,9.654614,-1.066643,-8.614515,5.142207,-8.127423,4.183194,8.207495,0.329078,-5.474459,6.010900,6.413184,-9.842719,7.813737,0.884093,1.547361,-0.518618,-5.493402,-7.803987,-7.165911,-5.682301,7.466461,-7.435816,-2.502257,-3.007883,7.756365,-1.195506,3.086639,-0.575844,8.900951,8.124251,-0.992048,1.658895,-6.635502,6.761912,-0.206106,-9.551994,1.826133,-9.902720,-3.311696,1.647217,-1.063188,-2.693728,-2.276954,-9.117068,-8.478319,9.083782,9.600208,-3.866497,-0.596360,8.461391,6.672882,-1.263958,-4.607956,-3.571599,2.210327,-9.549779,8.483805,6.423469,-6.808070,2.740732,-9.428475,1.265435,-5.290227,7.639490,2.664393,8.618953,-0.171750,0.805828,-6.880749,1.545645,4.965981,4.529086,-8.956389,9.198093,-7.524991,-3.564036,7.450779,-2.311583,6.236717,-9.860076,-9.025919,5.571861,2.573168,-9.147609,-3.851848,7.189494,9.493227,-1.611171,-0.411182,-0.277630,-6.112364,3.247235,-8.152413,3.181577,6.609421,-5.623806,0.010981,4.150160,0.757344,-6.598527,4.286260,3.366740,-8.885191,9.962072,0.232909,3.148274,-0.458741,2.944777,9.318446,-4.667302,-1.229997,-6.263826,-8.734776,-6.620727,3.492617,1.725712,2.914619,-3.757258,-0.495994,-2.061643,6.382705,4.094082,-2.598984,3.527119,-8.645200,-8.385014,-2.423082,-7.388760,-7.726229,-6.549818,-1.164947,8.263977,9.157302,9.482008,5.341263,0.529093,-3.672845,-1.959605,-0.915758,-5.598035,2.726484,0.896618,7.777696,-5.551420,1.979865,-3.847019,-5.870084,3.195711,8.456947,0.458135,-4.315606,5.252897,5.929306,9.318549,2.946534,-6.208396,-3.017776,9.143188,-9.605550,-8.344963,-0.045087,8.919198,-2.749230,-2.311278,4.351353,-8.153289,0.586185,-3.380506,2.192035,-8.604287,7.073201,8.046910,-4.819728,-5.822693,-4.231564,-3.178675,3.197261,8.591636,-1.042648,4.809392,3.362276,3.060490,9.432225,0.029294,0.035031,-1.484207,7.926914,2.239680,-1.970386,-5.319360,-7.662173,5.650010,-1.965395,1.393531,1.039981,-5.525493,-7.561672,4.681390,-6.225209,-8.216832,-0.566775,-2.430194,-4.796591,9.980330,1.188791,3.613212,7.721058,0.683206,4.228320,-6.013463,0.459098,9.294969,8.451606,-6.792989,6.112049,3.616565,9.009608,4.918485,8.431140,-6.938008,-1.626966,-4.185317,-6.090612,3.627317,-5.272214,-9.497627,6.298988,2.587290,-1.743611,-1.569603,-1.453586,0.923585,5.407112,1.093721,-0.609265,-8.644244,0.407028,-5.030198,-3.352575,9.803407,0.703785,7.221732,2.077190,8.399100,-1.093511,-0.250892,-0.653858,-9.621693,-2.650666,-5.331341,9.643101,-2.707903,-8.307707,-0.397041,-2.545092,1.918356,-3.213748,-3.299409,-8.212054,1.272561,9.899275,5.539818,-3.816049,-0.315731,-4.656276,4.239127,4.734648,-8.784185,-9.415932,-0.881321,7.462885,-4.959965,-1.883947,4.421362,1.573150,9.988252,-6.296148,-4.832546,-6.850222,-5.397009,2.300867,-7.694296,3.096707,-1.223915,-9.751256,-9.353385,4.197681,4.207206,-0.373853,-7.439882,3.674194,-0.518852,-1.282923,-0.609675,6.155105,7.287041,-4.032482,3.191038,2.632355,6.416704,3.441115,2.166114,8.557258,-1.673555,4.683633,1.916141,4.139051,0.148731,-8.473400,-1.077590,-0.099347,-4.747958,-8.996671,-7.407107,-0.149045,4.652203,3.820136,-1.334644,9.417708,-8.164308,1.441346,9.953721,-1.607214,-1.346038,6.209101,-6.584536,4.257942,-4.160520,9.316144,5.414469,5.273309,8.364733,9.598986,0.384058,-6.958921,6.440164,7.621584,-8.287904,0.194761,-4.716545,-2.873949,-6.353821,2.282237,6.702496,9.787089,-4.997408,3.967808,-8.821487,2.084894,7.705733,4.113133,6.219022,5.235638,-6.312552,4.588863,5.255976,-9.855877,3.698468,2.140796,-7.859757,4.344987,2.407491,-7.140998,0.626616,2.422266,6.913212,4.797945,9.531749,2.703087,-0.832608,-1.759039,-8.085016,1.090113,-5.738631,-6.504279,-2.102712,-2.347678,-2.961362,6.023686,-1.490276,-9.224604,5.622196,2.331879,-8.376489,0.752080,4.206560,7.134939,-6.723061,0.645934,6.140172,8.657374,4.588948,9.930229,-8.429524,6.474948,7.959632,-1.421181,2.054118,1.056986,-4.933360,-4.255428,-4.035038,1.139010,2.525340,6.619662,-0.221496,-4.662114,-8.389892,2.208601,-6.393918,-4.499102,-4.979498,-0.306801,-0.281651,-2.592245,-4.722146,-1.606010,-7.615325,2.284914,-1.543398,-5.414518,1.585609,-4.857039,-7.918900,-2.265456,-7.686673,-0.940298,-6.352702,-5.830637,-9.128209,0.457033,-3.457947,0.955231,-7.180611,-5.597332,4.697774,4.491502,5.796322,9.860075,-7.639064,-6.784083,-7.731770,9.143869,2.118331,7.779723,-0.105454,3.936438,-4.721096,2.237958,6.044895,7.601110,-0.538828,-0.675505,-6.573435,5.010299,3.409797,3.536975,-7.780988,-7.099006,-8.129827,5.124721,3.989038,3.772575,8.415197,-2.604067,-1.607046,-4.684880,-6.246908,-9.950270,-5.394490,0.302500,3.330380,4.675064,-0.483949,-2.058262,0.611631,7.988486,-7.592462,-0.050348,-1.894318,-2.874533,-4.725417,4.374442,1.206213,5.583935,-6.000788,-2.294376,9.252594,6.817582,8.485648,-8.695863,-2.756325,4.655302,9.216449,-1.476109,-9.844600,-7.035543,5.219929,-0.995650,-7.718198,-0.259686,-9.695033,-7.033140,-3.894462,4.273841,5.316845,-5.409475,-7.811218,-0.046185,9.728417,9.754434,-8.766019,-3.061327,0.118649,-2.774971,-9.845463,-4.082887,0.645818,-4.451577,5.390947,-7.091636,-6.481220,-0.943759,-6.495933,-6.823283,4.249157,-4.057187,1.365863,-3.589905,3.771517,-6.877880,6.014405,-3.793074,-1.474129,1.989650,0.221384,-5.303300,-6.593894,-0.498800,-2.659816,2.436811,-7.514115,1.533267,-4.810493,-7.709674,-0.419854,-0.708893,-7.428687,0.149298,7.577141,-6.378687,-9.167498,-0.628964,6.310958,7.201907,3.546484,4.629195,-9.013202,-5.660618,-8.304890,-2.805445,8.981385,9.173735,-9.118982,-1.886583,6.194732,-2.193082,-1.570178,-1.279297,0.676951,1.626322,-9.133827,-3.275396,5.014610,-1.805200,9.592867,-9.927805,7.988776,-4.031257,-1.498193,6.944255,7.986001,3.975737,0.250006,4.608848,-4.712031,5.198868,-3.604657,4.369265,-9.320517,8.880059,3.159469,2.409511,9.221209,-9.382845,-5.475702,7.071277,8.260854,8.978306,5.813118,4.524642,2.489452,-1.250009,-9.858166,6.277914,1.007637,-6.819382,4.659158,5.973881,-6.292058,-9.527658,-2.460253,-7.873311,2.177622,-8.369015,7.732936,-3.792394,-7.994946,-4.351546,-7.663169,-8.494230,-5.764797,-0.760504,-2.636575,9.349888,7.726097,2.830429,4.969527,8.943427,-5.966641,1.567315,4.442513,-5.560037,4.656324,-9.673596,3.834851,5.046976,-4.575596,6.488153,-1.796578,0.572442,-2.881427,4.447421,-5.787254,-7.047411,-8.204744,-1.984519,4.781710,0.308569,3.047165,4.356644,-9.172321,2.155379,-6.488463,4.922365,7.031543,0.246871,-1.985033,0.332149,9.994191,5.888515,-0.919565,-2.893491,-9.826248,-9.137941,1.348873,-0.489517,-6.762053,-3.725050,-3.110651,4.096396,-5.015620,-5.230916,5.956801,-8.134301,8.834943,-9.506364,9.452999,-3.512259,3.658995,-3.396541,-9.453790,-6.938945,-1.753971,3.292565,6.533229,-4.690892,1.744359,-5.108318,-1.482849,-7.540721,-3.111732,0.311551,4.613723,5.980492,-3.568751,2.354503,9.251684,-1.473535,2.150897,-8.784002,-2.766864,-6.230832,0.947911,9.532379,0.369627,-9.920741,-3.342789,-1.967936,6.188917,-6.390535,0.764472,-3.538908,-3.363440,-7.238122,-0.126025,-4.497261,2.581203,3.363030,1.477022,-4.114815,-4.314455,-4.395552,4.114735,-0.761974,-5.404078,-2.238291,-4.248502,-8.022927,5.631244,-0.938905,-2.717742,8.492803,-1.391634,-4.040567,2.120053,-8.662253,5.280081,-0.686756,4.970531,3.015047,-4.467878,9.104013,-0.161449,1.584856,-0.693239,-8.291896,-9.564463,-7.329087,-8.025415,-4.603694,-8.675154,4.325689,9.654123,-0.660861,-8.653446,-6.549203,8.979095,0.693247,-4.534194,-1.292635,7.998448,4.750982,-3.464930,-3.377096,-3.826262,-7.002413,1.092620,6.194432,4.548893,-4.813807,0.457185,-7.251900,-9.384980,1.070018,-6.805483,-9.086957,-5.001321,6.729016,3.713230,6.949842,-4.098354,-2.250346,3.919461,-0.092775,1.073828,-5.332907,-6.920754,-1.735496,-8.566957,2.551381,0.871216,-5.746346,0.594787,-2.142761,1.609664,-1.345928,0.697053,-3.101340,-6.384684,8.235694,2.585866,5.143933,0.375877,-5.166319,8.871609,-7.683564,7.551147,-9.309568,4.914161,-7.402552,-3.185933,-6.934877,5.290795,-7.644358,-1.114814,-9.034328,0.560783,4.382551,1.605210,-7.279813,6.486254,3.705757,-0.231119,5.994911,-0.157889,-0.867174,-1.934627,-7.488225,9.077718,-3.007359,-7.819414,3.556107,-8.594944,-5.770233,4.697239,-1.319508,-8.093258,4.951156,6.274348,-5.773801,-8.494003,-5.944948,7.292809,7.312329,3.012930,-0.932188,-8.904758,8.453721,-5.675693,-9.128135,-9.164606,-3.510509,-5.138792,3.354485,-0.075731,5.122764,0.359314,-5.768077,-2.006254,9.749651,5.171925,8.094752,-4.110218,-1.173966,7.833481,-5.584449,8.146839,-8.588345,-0.857324,9.591388,7.350788,-7.274019,-1.011977,0.769087,-9.216084,-3.630135,2.019589,1.283200,-9.104585,-3.327953,-8.075493,4.345315,-4.859306,7.086278,-2.966660,0.067802,4.748234,-1.663345,-1.916464,-7.925577,-2.043836,-0.439352,-8.441236,8.543656,3.517780,-7.184936,-0.839951,5.261693,6.855400,-2.570147,5.292627,8.814830,3.687075,-1.112004,-8.053961,-2.690232,5.079964,-5.186516,-0.760497,-3.504416,4.307400,8.863916,9.800113,-5.513915,0.947737,-3.782140,0.801232,9.174805,3.386428,-3.023895,-0.492342,-9.999410,-1.987142,5.807512,5.665771,-2.564593,6.577085,-1.944275,1.219858,8.298678,4.537855,2.759505,-6.103877,4.827389,2.135337,5.511135,-5.559313,7.091955,-4.379327,2.664801,4.748919,-3.960174,9.175113,0.776488,-0.740908,8.382907,-7.974172,-0.945406,7.055139,-8.946350,2.852346,-6.416155,5.032172,-9.566381,3.628427,3.849591,-4.474727,8.025928,4.587297,-0.943437,0.964033,5.435158,-1.841293,-0.526418,-6.674389,-5.556357,-9.208842,0.923884,1.388701,4.600599,-3.011771,0.721047,5.981327,-7.534646,5.500994,-0.034528,3.448818,-1.841685,6.874628,1.841171,6.339223,2.362664,4.068653,7.761631,6.250446,2.885124,-0.251271,-3.565227,9.485043,-7.429844,4.471253,5.801366,-3.232671,-4.372705,9.695826,8.624601,-2.411976,-3.822170,-4.077524,-6.611034,9.240854,8.098912,-5.080368,5.992660,-7.338043,-7.424000,-6.006322,-9.797136,8.541825,-3.583118,4.311021,7.563283,-2.972011,7.055086,0.952674,-0.043320,3.837726,-7.035966,6.541071,2.405627,2.679749,1.753725,8.454275,1.908173,3.767207,8.620291,1.446662,-7.016348,3.088034,-7.198897,1.183073,1.851720,-4.347733,-6.073307,8.333298,-2.126731,5.657051,-8.921501,2.699290,6.843123,8.491194,1.419510,4.084201,-8.995020,8.879661,1.961752,-2.359513,5.675234,2.080782,-3.273174,5.787056,1.464194,4.152481,-5.186314,7.771515,6.551115,-2.862026,-9.516823,-4.913238,-0.485300,4.442833,-3.700482,-5.118518,6.602141,6.775995,-0.705746,-6.240947,2.565705,9.253514,-6.945274,8.192020,6.503124,0.226817,0.406044,0.170498,6.250277,8.467061,-2.795722,-1.737143,7.209316,4.613557,-8.601343,-5.255477,5.102590,6.890834,-7.244542,0.498138,5.602918,7.352607,-6.507102,-0.114164,-1.002120,8.800200,-7.045196,-2.560440,2.403483,7.279367,5.557965,0.839564,-6.628244,-2.216704,2.258203,-6.241135,-0.802408,8.924421,-6.731816,7.653283,-8.865072,4.129780,-6.625997,-8.374650,-4.050283,1.708791,7.163994,-2.718100,-4.374452,2.949821,7.312340,-3.588655,0.970445,-3.988979,4.813903,-3.047076,2.297169,-2.484992,5.709696,3.354444,4.804814,1.809873,-3.813474,-7.227086,0.399477,-3.679674,6.536220,-6.628418,3.373636,8.059981,-1.596494,-5.494684,2.846731,1.574966,1.152841,-7.346840,-7.467562,-9.616549,-3.976034,5.737523,-2.236598,-6.884656,-4.359065,-5.149931,6.501418,-5.118280,-5.081973,1.762955,-6.174685,-6.995221,-0.062857,-8.991626,6.880995,2.217804,3.310010,9.176266,-1.906858,4.255191,-6.678259,-3.605210,9.406777,-6.733599,8.119172,-7.544171,-6.368937,-7.991075,0.448393,3.451186,6.496124,-2.061129,5.628358,-5.045981,9.871244,-8.249146,9.131142,-5.764156,-2.418309,-5.398239,-7.142026,6.509371,-8.292872,8.183409,-4.559489,-6.460797,5.331468,-7.727112,-5.083928,4.524348,-4.806824,8.003646,-4.522310,9.318115,-2.807087,6.130568,-0.675114,-2.943025,-8.996214,-6.565621,-2.578958,-3.309399,-4.411523,7.600358,0.806569,-7.241279,-6.573625,1.666376,5.867760,2.032434,8.945348,6.874514,3.786333,-4.741558,5.537150,-8.089199,2.762813,-2.368749,0.680057,-4.981279,-5.575129,5.778831,-6.016191,2.370612,0.617273,-9.572556,5.398171,-9.962916,8.597022,-6.033903,2.963833,-7.524268,0.985662,-4.961530,-7.554308,4.252175,-7.951285,-5.512626,-2.634707,-9.531833,-1.046319,-1.074109,-9.616173,7.250379,9.923286,2.635635,-4.359997,6.998326,-7.085694,0.113888,-4.592530,3.226487,7.883287,7.635721,0.469026,5.392487,-7.232950,-1.470176,-8.008628,-4.896921,9.891307,-3.601556,-7.907886,-7.350781,-9.738708,8.091553,-5.514452,1.940080,-0.122739,5.762364,-1.972785,-9.001204,-2.035719,-5.253018,-8.310626,-5.540884,-8.579564,3.639648,-9.621731,0.209160,9.868669,4.208480,2.761337,5.099141,-6.438805,2.684777,4.736036,2.005196,-6.879449,-5.790954,4.167727,7.168991,-3.419797,-2.426285,-9.110230,3.127967,-2.825998,6.882212,0.361639,-6.254545,-0.029278,-0.723101,1.983068,2.999411,7.031573,-8.169733,7.389589,-9.425593,-6.446921,-3.046914,-9.354882,1.181772,5.899722,-0.345127,6.457573,-5.341336,8.408765,-7.820179,-2.604973,-9.789157,8.853846,-8.711739,-7.942067,-6.658612,0.474982,9.601336,-7.977102,4.400469,-0.870888,-1.855361,-3.487711,7.183175,-9.596219,-1.392639,9.222171,-0.975745,3.043701,3.615476,-3.463847,-7.436663,9.138041,6.291390,-5.305148,4.871924,8.416466,8.671128,-0.211813,7.138138,-5.304238,7.560251,-1.853977,-3.263321,4.974621,-3.032575,-2.629604,3.783825,-4.082169,7.457076,9.634115,5.027347,9.515912,-0.747899,1.757002,-4.051777,8.830310,-4.920357,7.640669,6.329148,-6.385576,-0.462111,1.843207,-9.573477,1.741937,-6.156514,-3.947745,8.596076,-2.165867,4.229128,9.034634,3.237211,-1.998748,-8.288501,8.970435,-8.059319,5.529649,-7.256202,-9.527828,0.412387,-0.621513,7.045824,7.681809,-0.867435,-9.458704,-8.144033,5.498258,5.169709,3.973448,-3.562638,8.555636,-3.928576,5.520550,3.791939,-6.898201,7.809364,2.044276,7.452634,6.343286,-9.861627,-9.770766,0.526479,5.531833,0.215195,1.863396,7.035606,-5.129762,4.935250,-1.454058,4.658893,5.549010,2.932447,6.041976,-5.648534,2.277904,1.442896,1.473320,6.829370,8.659954,0.486453,-7.761953,3.410024,-9.713003,0.022417,-4.637025,8.800714,5.243062,-0.451090,-7.552854,-1.690195,3.978944,1.379730,-0.718427,0.470270,7.733216,-6.135935,7.734197,-6.834539,0.345832,-8.923195,-2.182675,7.301114,3.204125,8.539763,-8.879084,3.692242,0.131605,-7.381433,8.371290,0.953182,-6.694459,8.769521,2.760182,-1.875551,0.391603,-0.421605,-7.919703,2.522823,2.050534,1.695112,-8.199102,-1.278962,0.996793,-2.410812,-0.057076,0.358511,2.551292,1.594938,-3.252645,0.304682,-6.029531,-2.856238,-5.942714,-8.309828,-6.431917,4.454335,-0.474450,-6.016821,5.288227,3.500109,-9.232440,-4.517170,0.566130,-3.416089,1.681159,5.808707,-6.826678,6.109017,8.359555,-1.611475,9.072680,4.989355,0.472050,-6.239393,-0.848859,7.536473,-8.500646,-9.949707,7.586845,-1.823906,3.880908,-5.899787,0.121227,-6.645458,-3.153429,-1.441401,-7.514014,2.394966,0.875426,-7.609148,1.443715,-7.187353,-2.931924,2.101090,8.827163,-2.698290,0.192203,-8.006716,-0.570926,-9.380325,-6.534374,2.161774,-0.669938,-5.241018,-5.632326,1.760993,-0.288837,8.596955,-8.676343,-5.351237,-0.598501,-2.699976,-1.776378,-2.287755,9.882488,0.686806,8.328122,1.561049,9.752881,3.823632,-2.156301,-3.327696,-2.504005,8.611826,-3.167742,5.244899,8.550546,1.801453,-8.478080,-7.406097,-3.743343,0.824522,-9.872698,4.651063,7.300696,5.410450,0.093913,-0.306917,-6.207768,-6.664822,-2.318712,6.584421,-1.126227,0.679561,3.578162,-2.859376,1.874964,8.540282,-6.280462,9.651389,-6.439877,-7.037242,-6.105282,2.465137,-8.640089,-5.048898,2.335121,-1.222454,-7.066808,2.632826,-2.127834,8.596080,1.802858,4.498757,7.413615,0.636986,-6.472022,6.366955,5.319873,1.997951,-8.237690,-9.376785,2.808791,8.636091,-2.892482,1.419792,3.606590,-9.393996,-9.514926,-7.246482,-0.673027,0.380535,2.245327,-7.752011,8.061316,9.708618,5.437751,-3.787618,-4.311545,-8.662519,-9.191422,0.580727,-4.697912,-8.916321,-0.600204,-6.500841,0.535823,6.191392,-7.411949,2.965144,2.272268,0.277196,-0.987685,8.269344,-6.463740,7.093968,-0.702173,-3.149725,-3.030984,7.274912,0.336364,9.166373,6.831420,-9.926998,-7.115815,0.374160,-4.620908,-5.224619,-4.179275,6.023243,0.395024,9.118134,-7.154985,-1.864190,0.813169,7.963654,7.843290,5.017301,0.974646,-6.869830,3.964900,5.841710,4.803084,-0.225062,4.306513,-3.607193,-0.317649,-7.328211,7.145054,5.980445,-0.002133,3.197698,6.775462,-9.193596,-0.615346,4.937026,7.770530,5.905908,-1.032216,-3.776383,-2.316020,8.175495,7.915022,0.968007,-5.176937,1.391595,4.891337,7.617265,6.585124,2.159965,-3.693350,9.315233,0.590857,-8.791216,-8.216043,9.896292,2.897345,9.515246,7.420581,9.263895,3.173546,-8.100660,-5.135814,1.958944,-4.113749,3.853848,9.328978,-6.688396,-5.613918,8.704322,1.533257,0.265380,7.167658,8.769822,0.875169,-4.280376,2.800825,5.632531,-0.586322,0.588013,8.952496,-9.705506,8.979188,1.196226,7.727765,-3.985233,7.785880,-8.393452,-3.259655,0.776052,-0.868633,-6.275401,1.706822,4.372207,9.061047,-9.360974,-3.268092,1.233335,6.540055,6.947735,9.816786,4.773720,3.679300,0.427541,-5.574871,4.063524,1.759107,-4.084625,4.522056,-6.030892,3.458064,8.318391,1.764050,8.503081,6.936365,-0.448159,4.525179,7.336650,7.866753,-2.629113,-4.339506,-2.903688,-6.813013,-0.081216,9.268155,-6.769768,6.796304,-1.909425,-0.409535,4.641699,-9.872682,2.683314,4.342356,-6.903662,3.448862,-2.311089,-1.152965,0.813296,-6.845747,-9.267744,5.255948,-0.399288,-1.842168,2.335711,-3.092790,-5.947269,-7.256179,-2.526368,-0.629724,-5.435548,-1.811470,2.754689,-5.100275,7.948755,-0.095951,-5.818784,-2.620456,-4.017624,4.693972,8.158855,-1.170435,-4.992306,6.499871,4.752961,8.050937,-5.532269,-5.145352,-7.523645,-4.676981,5.119606,6.471988,-7.821863,-6.450733,-9.057473,7.288851,-0.048010,6.544155,-3.382367,2.407695,-0.383811,-6.738402,-0.311493,1.580608,0.734673,-9.410058,-9.272418,-1.689540,5.360012,-5.079479,-4.097082,-9.577733,4.386854,7.391072,-1.537794,7.109055,3.671298,6.935572,3.350412,-1.577476,1.972197,7.252222,-6.347613,-8.503216,1.766870,7.257244,-0.202286,-7.189844,3.843631,-8.833649,-2.192146,-6.461677,2.644230,-1.564888,-0.050891,2.898757,6.394387,-6.711369,-0.895936,-3.495400,5.275683,5.744074,1.139679,1.431991,7.115508,-9.750361,-4.449732,2.458530,5.827219,-4.266999,-2.447317,2.012972,-0.959723,7.287841,-6.879963,-5.977563,0.958233,-2.366438,3.514461,9.364694,1.129107,4.354947,-9.897702,0.288826,-7.602645,-2.874547,6.685691,-6.752942,1.255631,-6.430600,7.590849,3.746402,-8.671089,4.688307,8.462855,-8.315167,2.648007,-6.470415,-3.957841,3.935838,3.994441,0.961638,2.145540,2.720633,4.359869,-3.966816,-0.782800,8.450598,8.827216,9.439228,9.057342,5.295179,3.417409,-1.827914,9.835828,-1.191494,2.930850,6.952021,0.345424,4.177676,-6.168547,-6.361221,4.391820,6.202241,-7.519833,-0.495366,-8.258054,-9.241368,9.745740,6.201520,-6.209613,-5.945909,6.531667,-6.826083,-9.797253,3.624588,-6.110148,3.145410,4.644767,-5.783694,3.151951,6.382744,2.896148,1.224613,5.664305,6.879031,-2.677091,7.404681,-3.236382,6.497144,-1.868184,9.770772,-8.780916,-7.490509,-7.719903,3.699970,2.114340,4.992588,3.273107,-3.189064,-5.109996,-4.682387,1.169561,-9.543056,-7.788031,-0.645420,9.377763,9.556980,-8.035021,1.412127,-9.119387,0.904962,-6.658221,-3.217366,5.690797,-1.398889,0.934467,2.902486,-0.968478,-6.102779,7.362008,3.716912,-8.953237,-7.484562,2.077217,2.470212,-3.963375,4.323930,-1.266548,-6.651616,-9.812418,5.599718,-3.645060,-4.399697,-6.359048,9.982811,8.193267,-8.395549,5.740700,6.520725,9.138268,-0.551472,4.921603,-4.957093,-0.780918,7.230801,1.855220,-0.019099,3.434452,-7.240143,7.946614,4.168988,8.947473,-0.368665,-3.407028,5.538096,8.930743,-0.636246,7.722245,-3.170746,1.590309,9.743671,-6.629490,-3.613088,-1.376321,7.846494,-4.574347,8.194780,0.952513,-1.832868,7.143205,4.237819,-9.079321,9.088080,-0.566421,5.322086,6.882680,-6.213198,-6.161197,-7.539282,4.516990,-0.933913,-4.913222,2.092793,4.427300,-8.336297,4.361378,4.800637,7.229422,-3.658833,-2.439446,0.466982,-3.412637,3.218111,5.295574,8.770989,-1.675553,-8.842991,2.718152,-9.555175,-0.192492,9.302998,-9.860259,5.879155,2.888285,4.283844,9.624385,-1.433621,-4.419836,-0.643519,0.780304,-4.499560,2.775946,-8.809324,6.827555,9.709340,2.086169,8.764106,-9.786001,2.504821,-4.242696,9.172631,-6.317317,5.688317,-1.832546,-1.855342,-1.051241,7.158021,6.346263,-3.034190,-8.808883,-3.323888,7.374487,5.668216,-9.356687,7.989053,9.533963,-9.804788,-0.572587,-9.973383,1.740681,-9.376490,2.622267,0.897674,-1.397608,0.319035,-2.274579,-9.029567,-4.013372,8.150176,5.218091,4.873085,1.700862,-5.867176,-6.892515,-3.259778,4.435160,5.414551,-6.456868,3.968555,-0.536420,3.716328,6.309532,-7.108809,1.477014,-5.117892,5.724536,6.648264,-4.304410,-6.979117,-9.679045,-9.954235,-6.926106,1.801030,8.497059,9.630437,2.622830,-8.429969,-5.452571,-1.416483,-0.359751,-7.509324,5.200332,-2.891974,1.600302,-4.745904,-4.219232,1.880207,-1.261590,7.385163,-8.372815,0.285564,-2.025668,-3.247811,9.275924,-7.322182,1.510815,4.397027,9.615797,-8.134044,-9.796479,-8.318487,-7.981233,6.407509,-0.710005,-7.845114,4.576102,7.482746,9.384924,5.207810,-9.773357,-5.935551,-4.121167,-3.774842,6.247864,8.233215,3.281067,-0.386353,7.694850,-0.389876,2.326111,-1.917773,8.474628,-9.706677,1.545930,1.294542,7.362457,-3.078096,3.808931,4.245295,4.555826,-1.669959,4.077213,-4.680205,9.076366,-3.842167,1.018028,3.107846,-3.154024,4.062990,6.337107,-0.907118,-5.886778,6.714116,9.542390,4.604358,9.463595,-6.071711,-7.035728,3.768173,0.007073,-7.494563,3.422952,5.461937,9.996611,6.956888,2.258383,-9.092060,-5.800365,6.283552,-7.607881,0.812783,2.032492,-0.163102,-6.976473,3.704039,-3.628461,4.998055,5.034297,0.025604,3.315755,-4.281937,-7.995838,4.272751,-5.301988,6.669311,4.353513,-1.363047,-4.504935,-3.887163,-6.573604,-9.755186,-1.969640,-2.605666,3.613770,-7.800932,9.568427,0.780617,6.455327,-1.439092,-6.249550,7.268353,-3.861794,-7.923074,-6.577154,-1.143104,-5.327301,4.984349,-8.451790,-5.492055,-3.869177,-0.731907,4.045610,2.463871,-5.933873,-0.451823,9.603008,-9.409889,7.585964,-4.150131,-3.231875,8.973129,-7.362289,6.035852,-1.953573,-8.310800,-7.865707,-7.363831,-8.843048,8.348989,-9.829036,7.353193,1.907157,5.229930,-5.476093,-2.293501,-9.825320,9.183702,5.135323,1.804326,1.087571,-2.524738,7.101903,1.011368,-8.050266,-8.673133,6.075193,3.373416,-1.495176,1.873070,-4.903400,4.931750,9.792765,8.713279,0.643987,8.595850,-2.565815,-0.595872,-5.353524,-2.700161,-4.703383,3.159905,-9.066303,-0.493216], dtype = "float32")#candidate|8816|(3072,)|const|float32
call_8815 = relay.TupleGetItem(func_7635_call(relay.reshape(const_8816.astype('float32'), [384, 8])), 0)
call_8817 = relay.TupleGetItem(func_7637_call(relay.reshape(const_8816.astype('float32'), [384, 8])), 0)
output = relay.Tuple([bop_8807,call_8815,const_8816,])
output2 = relay.Tuple([bop_8807,call_8817,const_8816,])
func_8822 = relay.Function([var_8805,], output)
mod['func_8822'] = func_8822
mod = relay.transform.InferType()(mod)
var_8823 = relay.var("var_8823", dtype = "int64", shape = (10, 13, 14))#candidate|8823|(10, 13, 14)|var|int64
output = func_8822(var_8823)
func_8824 = relay.Function([var_8823], output)
mutated_mod['func_8824'] = func_8824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8846 = relay.var("var_8846", dtype = "float32", shape = (11, 12, 2))#candidate|8846|(11, 12, 2)|var|float32
uop_8847 = relay.asinh(var_8846.astype('float32')) # shape=(11, 12, 2)
output = uop_8847
output2 = uop_8847
func_8849 = relay.Function([var_8846,], output)
mod['func_8849'] = func_8849
mod = relay.transform.InferType()(mod)
var_8850 = relay.var("var_8850", dtype = "float32", shape = (11, 12, 2))#candidate|8850|(11, 12, 2)|var|float32
output = func_8849(var_8850)
func_8851 = relay.Function([var_8850], output)
mutated_mod['func_8851'] = func_8851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7726_call = mod.get_global_var('func_7726')
func_7728_call = mutated_mod.get_global_var('func_7728')
call_8859 = relay.TupleGetItem(func_7726_call(), 0)
call_8860 = relay.TupleGetItem(func_7728_call(), 0)
output = relay.Tuple([call_8859,])
output2 = relay.Tuple([call_8860,])
func_8866 = relay.Function([], output)
mod['func_8866'] = func_8866
mod = relay.transform.InferType()(mod)
mutated_mod['func_8866'] = func_8866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8866_call = mutated_mod.get_global_var('func_8866')
call_8867 = func_8866_call()
output = call_8867
func_8868 = relay.Function([], output)
mutated_mod['func_8868'] = func_8868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8046_call = mod.get_global_var('func_8046')
func_8048_call = mutated_mod.get_global_var('func_8048')
call_8876 = func_8046_call()
call_8877 = func_8046_call()
output = call_8876
output2 = call_8877
func_8880 = relay.Function([], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
output = func_8880()
func_8881 = relay.Function([], output)
mutated_mod['func_8881'] = func_8881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6839_call = mod.get_global_var('func_6839')
func_6840_call = mutated_mod.get_global_var('func_6840')
call_8889 = relay.TupleGetItem(func_6839_call(), 0)
call_8890 = relay.TupleGetItem(func_6840_call(), 0)
output = relay.Tuple([call_8889,])
output2 = relay.Tuple([call_8890,])
func_8901 = relay.Function([], output)
mod['func_8901'] = func_8901
mod = relay.transform.InferType()(mod)
mutated_mod['func_8901'] = func_8901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8901_call = mutated_mod.get_global_var('func_8901')
call_8902 = func_8901_call()
output = call_8902
func_8903 = relay.Function([], output)
mutated_mod['func_8903'] = func_8903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8613_call = mod.get_global_var('func_8613')
func_8614_call = mutated_mod.get_global_var('func_8614')
call_8904 = relay.TupleGetItem(func_8613_call(), 0)
call_8905 = relay.TupleGetItem(func_8614_call(), 0)
output = relay.Tuple([call_8904,])
output2 = relay.Tuple([call_8905,])
func_8934 = relay.Function([], output)
mod['func_8934'] = func_8934
mod = relay.transform.InferType()(mod)
mutated_mod['func_8934'] = func_8934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8934_call = mutated_mod.get_global_var('func_8934')
call_8935 = func_8934_call()
output = call_8935
func_8936 = relay.Function([], output)
mutated_mod['func_8936'] = func_8936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mod.get_global_var('func_7257')
func_7259_call = mutated_mod.get_global_var('func_7259')
call_9005 = func_7257_call()
call_9006 = func_7257_call()
uop_9010 = relay.sigmoid(call_9005.astype('float32')) # shape=(16, 6, 14)
uop_9012 = relay.sigmoid(call_9006.astype('float32')) # shape=(16, 6, 14)
bop_9030 = relay.left_shift(uop_9010.astype('int16'), relay.reshape(call_9005.astype('int16'), relay.shape_of(uop_9010))) # shape=(16, 6, 14)
bop_9033 = relay.left_shift(uop_9012.astype('int16'), relay.reshape(call_9006.astype('int16'), relay.shape_of(uop_9012))) # shape=(16, 6, 14)
output = bop_9030
output2 = bop_9033
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

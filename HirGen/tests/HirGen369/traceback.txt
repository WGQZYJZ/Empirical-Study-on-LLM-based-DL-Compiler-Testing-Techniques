==========mod==========
#[version = "0.0.5"]
def @func_1268() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %0 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %2 = reshape(%1, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %3 = @func_1112(%2) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %4 = %0.0;
  %5 = %3.0;
  (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(130), float32] */)
}

def @func_4635(%var_4617: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), uint16]) {
  %6 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  %7 = cast(%var_4617, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 9, 6), float32] */, dtype="uint16") /* ty=Tensor[(7, 9, 6), uint16] */;
  %12 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%6, dtype="uint16") /* ty=Tensor[(7, 9, 6), uint16] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %15 = power(%9, %10) /* ty=Tensor[(7, 9, 6), float32] */;
  %16 = bitwise_xor(%13, %14) /* ty=Tensor[(7, 9, 6), uint16] */;
  (%15, %16)
}

def @func_8008() -> Tensor[(7, 9, 6), float32] {
  %17 = @func_4860() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %17.0
}

def @func_2940() -> (Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) {
  %18 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int16") /* ty=Tensor[(3, 13, 14), int16] */;
  %19 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int16") /* ty=Tensor[(3, 13, 14), int16] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %22 = left_shift(%20, %21) /* ty=Tensor[(3, 13, 14), int16] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 13, 14), int16] */, dtype="uint32") /* ty=Tensor[(3, 13, 14), uint32] */;
  %25 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 13, 14), int16] */, dtype="uint32") /* ty=Tensor[(3, 13, 14), uint32] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %28 = cosh(%23) /* ty=Tensor[(3, 13, 14), float64] */;
  %29 = multiply(%26, %27) /* ty=Tensor[(3, 13, 14), uint32] */;
  (%28, %29)
}

def @func_5738() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %30 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
  %31 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %32 = %30.1;
  %33 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  %34 = %31.3;
  (%32, %33, %34)
}

def @func_7368(%var_7314: Tensor[(11, 8, 7), float32], %var_7315: Tensor[(11, 8, 7), float32]) -> Tensor[(11, 8, 7), int16] {
  %35 = cast(%var_7315, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
  %36 = shape_of(%var_7314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%var_7314, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %39 = power(%37, %38) /* ty=Tensor[(11, 8, 7), float32] */;
  %40 = cast(%var_7314, dtype="int16") /* ty=Tensor[(11, 8, 7), int16] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="int16") /* ty=Tensor[(11, 8, 7), int16] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%42, %43) /* ty=Tensor[(11, 8, 7), int16] */
}

def @func_9070(%var_9067: Tensor[(6, 10, 10), float64]) -> Tensor[(6, 10, 10), float64] {
  %44 = cast(%var_9067, dtype="float64") /* ty=Tensor[(6, 10, 10), float64] */;
  sigmoid(%44) /* ty=Tensor[(6, 10, 10), float64] */
}

def @func_5676() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) {
  %45 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %47 = reshape(%46, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %48 = @func_4568(%47) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) */;
  %49 = cast(meta[relay.Constant][5] /* ty=Tensor[(45, 2), float32] */, dtype="float32") /* ty=Tensor[(45, 2), float32] */;
  %50 = reshape(%49, newshape=[15, 6, 1]) /* ty=Tensor[(15, 6, 1), float32] */;
  %51 = @func_3943(%50) /* ty=(Tensor[(15, 6, 1), float32],) */;
  %52 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %53 = reshape(%52, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %54 = @func_3151(%53) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %55 = %54.2;
  %56 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), float32] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(1), int32] */;
  %58 = cast(%55, dtype="float64") /* ty=Tensor[(130), float64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?), float64] */;
  %60 = power(%58, %59) /* ty=Tensor[(130), float64] */;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(130), float32] */;
  %62 = %45.1;
  %63 = %48.4;
  %64 = %51.0;
  %65 = acosh(%61) /* ty=Tensor[(130), float32] */;
  (%62, %63, meta[relay.Constant][4] /* ty=Tensor[(60), float32] */, %64, meta[relay.Constant][5] /* ty=Tensor[(45, 2), float32] */, %65)
}

def @func_6881() -> (Tensor[(7, 9, 6), float32],) {
  %66 = @func_6222() /* ty=Tensor[(7, 9, 6), float32] */;
  (%66,)
}

def @func_7591() -> (Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %67 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %68 = @func_5676() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) */;
  %69 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %70 = %67.0;
  %71 = %68.4;
  %72 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %73 = %69.0;
  (%70, %71, %72, %73)
}

def @func_10649() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %74 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %75 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %76 = %74.0;
  %77 = %75.0;
  (%76, %77)
}

def @func_2711() -> (Tensor[(7, 9, 6), float32],) {
  %78 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %79 = %78.0;
  (%79,)
}

def @func_7812() -> (Tensor[(130), float32],) {
  %80 = @func_3053() /* ty=Tensor[(130), float32] */;
  (%80,)
}

def @func_4314(%var_4261: Tensor[(1, 6, 9), float64], %var_4262: Tensor[(10, 6, 9), float64], %var_4278: Tensor[(880), float64], %var_4280: Tensor[(384), float64]) -> (Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) {
  %81 = cast(%var_4261, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
  %82 = cast(%var_4262, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %83 = floor_divide(%81, %82) /* ty=Tensor[(10, 6, 9), float64] */;
  %84 = cast(%var_4262, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %88 = cast(%var_4278, dtype="float64") /* ty=Tensor[(880), float64] */;
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %90 = cast(%var_4280, dtype="float64") /* ty=Tensor[(384), float64] */;
  %91 = reshape(%88, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %92 = reshape(%89, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %93 = reshape(%90, newshape=[1, 384]) /* ty=Tensor[(1, 384), float64] */;
  %94 = @func_3505(%91, %92, %93) /* ty=(Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) */;
  %95 = %94.4;
  %96 = cast(%95, dtype="uint32") /* ty=Tensor[(7, 9, 6), uint32] */;
  %97 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(378), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(378), float32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %100 = floor_mod(%86, %87) /* ty=Tensor[(10, 6, 9), float64] */;
  %101 = logical_xor(%98, %99) /* ty=Tensor[(378), uint32] */;
  (%100, %var_4278, %var_4280, %101)
}

def @func_2533() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %102 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %103 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %104 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %105 = %102.0;
  %106 = %103.0;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_6509(%var_6497: Tensor[(40, 22), float64]) -> (Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) {
  %108 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %109 = cast(%var_6497, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %110 = reshape(%109, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %111 = @func_510(%110) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %112 = %108.2;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(130), float32] */;
  %114 = reshape(%113, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %115 = @func_398(%114) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %116 = cast(%var_6497, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %117 = cosh(%116) /* ty=Tensor[(40, 22), float64] */;
  %118 = cast(%117, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %119 = %111.1;
  %120 = %115.3;
  %121 = asinh(%118) /* ty=Tensor[(40, 22), float64] */;
  (%112, %119, %120, %121)
}

def @func_4148() -> (Tensor[(7, 9, 6), float32],) {
  %122 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  (%122,)
}

def @func_9334(%var_9323: Tensor[(54), float64], %var_9324: Tensor[(540), float64], %var_9325: Tensor[(384, 1), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(40, 22), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(880), float64], Tensor[(54), float64], Tensor[(540), float64], Tensor[(384, 1), float64]) {
  %123 = @func_9196() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %124 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
  %125 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %126 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
  %127 = cast(%var_9323, dtype="float64") /* ty=Tensor[(54), float64] */;
  %128 = cast(%var_9324, dtype="float64") /* ty=Tensor[(540), float64] */;
  %129 = %124.2;
  %130 = cast(%129, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %131 = cast(%var_9325, dtype="float64") /* ty=Tensor[(384, 1), float64] */;
  %132 = reshape(%127, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float64] */;
  %133 = reshape(%128, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %134 = reshape(%130, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %135 = reshape(%131, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %136 = @func_4314(%132, %133, %134, %135) /* ty=(Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) */;
  %137 = %123.0;
  %138 = %125.0;
  %139 = %126.1;
  %140 = %136.1;
  (%137, %129, %138, %139, %140, %var_9323, %var_9324, %var_9325)
}

def @func_108() -> Tensor[(7, 9, 6), float32] {
  %141 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 9, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  tan(%141) /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1356(%var_1330: Tensor[(4, 12, 9), float64], %var_1331: Tensor[(4, 12, 9), float64]) -> (Tensor[(4, 12, 9), int64],) {
  %142 = cast(%var_1331, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %143 = shape_of(%var_1330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%var_1330, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %146 = divide(%144, %145) /* ty=Tensor[(4, 12, 9), float64] */;
  %147 = cast(%146, dtype="int64") /* ty=Tensor[(4, 12, 9), int64] */;
  %148 = shape_of(%var_1331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_1331, dtype="int64") /* ty=Tensor[(4, 12, 9), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %151 = bitwise_xor(%149, %150) /* ty=Tensor[(4, 12, 9), int64] */;
  (%151,)
}

def @func_7083(%var_7069: Tensor[(1, 130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(1, 130), float32]) {
  %152 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %153 = cast(%var_7069, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %154 = reshape(%153, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %155 = @func_3554(%154) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %156 = %152.0;
  %157 = %155.2;
  (%156, %157, %var_7069)
}

def @func_9036(%var_9022: Tensor[(616), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(11, 8, 7), int16], Tensor[(616), float32], Tensor[(432), float64], Tensor[(60), float32], Tensor[(130), float32]) {
  %158 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %159 = @func_8872() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %160 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %161 = cast(%var_9022, dtype="float32") /* ty=Tensor[(616), float32] */;
  %162 = cast(%var_9022, dtype="float32") /* ty=Tensor[(616), float32] */;
  %163 = reshape(%161, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float32] */;
  %164 = reshape(%162, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float32] */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %166 = cast(meta[relay.Constant][10] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %167 = reshape(%165, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %168 = reshape(%166, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %169 = @func_2095(%167, %168) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %170 = %158.1;
  %171 = %159.1;
  %172 = %160.0;
  %173 = @func_7368(%163, %164) /* ty=Tensor[(11, 8, 7), int16] */;
  %174 = %169.1;
  (%170, %171, %172, %173, %var_9022, %174, meta[relay.Constant][9] /* ty=Tensor[(60), float32] */, meta[relay.Constant][10] /* ty=Tensor[(130), float32] */)
}

def @func_5197() -> Tensor[(7, 9, 6), float32] {
  %175 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %175.1
}

def @func_5379() -> (Tensor[(130, 1), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
  %176 = cast(meta[relay.Constant][11] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %177 = reshape(%176, newshape=[192, 2]) /* ty=Tensor[(192, 2), float64] */;
  %178 = @func_2786(%177) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) */;
  %179 = @func_3828() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %180 = %179.0;
  %181 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %182 = %181.0;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %184 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%180, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %187 = %178.3;
  %188 = floor_divide(%185, %186) /* ty=Tensor[(7, 9, 6), float32] */;
  (%187, meta[relay.Constant][11] /* ty=Tensor[(384), float64] */, %188)
}

def @func_7701(%var_7691: Tensor[(880), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
  %189 = @func_7591() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %190 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %191 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %192 = cast(%var_7691, dtype="float32") /* ty=Tensor[(880), float32] */;
  %193 = cast(%var_7691, dtype="float32") /* ty=Tensor[(880), float32] */;
  %194 = reshape(%192, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %195 = reshape(%193, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
  %196 = %189.0;
  %197 = %190.1;
  %198 = %191.0;
  %199 = @func_6756(%194, %195) /* ty=Tensor[(11, 10, 8), float32] */;
  (%196, %197, %198, %199, %var_7691)
}

def @func_9847(%var_9811: Tensor[(880), float64], %var_9814: Tensor[(130), float32]) -> (Tensor[(5, 16, 11), float32], Tensor[(880), float64], Tensor[(130), bool], Tensor[(130), float64]) {
  %200 = cast(%var_9811, dtype="float64") /* ty=Tensor[(880), float64] */;
  %201 = reshape(%200, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %202 = @func_510(%201) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %203 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %204 = %203.0;
  %205 = cast(%var_9814, dtype="bool") /* ty=Tensor[(130), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(1), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(130), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?), bool] */;
  %209 = cast(%var_9814, dtype="float32") /* ty=Tensor[(130), float32] */;
  %210 = rsqrt(%209) /* ty=Tensor[(130), float32] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(130), float64] */;
  %212 = %202.1;
  %213 = less_equal(%207, %208) /* ty=Tensor[(130), bool] */;
  %214 = cos(%211) /* ty=Tensor[(130), float64] */;
  (%212, %var_9811, %213, %214)
}

def @func_5896(%var_5833: Tensor[(960), float64], %var_5834: Tensor[(384), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(6, 8, 8), bool], Tensor[(960), float64], Tensor[(384), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %215 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %216 = cast(%var_5833, dtype="float64") /* ty=Tensor[(960), float64] */;
  %217 = cast(%var_5834, dtype="float32") /* ty=Tensor[(384), float32] */;
  %218 = reshape(%216, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %219 = reshape(%217, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %220 = @func_5291(%218, %219) /* ty=(Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) */;
  %221 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %222 = %215.0;
  %223 = %220.5;
  %224 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %225 = %221.2;
  (%222, %223, %var_5833, %var_5834, %224, %225)
}

def @func_571() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %226 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %227 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%226, %227)
}

def @func_6898() -> (Tensor[(7, 9, 6), float32],) {
  %228 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %229 = %228.0;
  (%229,)
}

def @func_1472() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %230 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %231 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %232 = %231.0;
  %233 = cast(%232, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %234 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %235 = %230.0;
  %236 = log2(%233) /* ty=Tensor[(7, 9, 6), float64] */;
  %237 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %238 = %234.1;
  (%235, %236, %237, %238)
}

def @func_2581() -> (Tensor[(7, 9, 6), float32],) {
  %239 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %240 = %239.1;
  (%240,)
}

def @func_6222() -> Tensor[(7, 9, 6), float32] {
  @func_3028() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_3828() -> (Tensor[(7, 9, 6), float32],) {
  %241 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  (%241,)
}

def @func_9990() -> (Tensor[(130), float32],) {
  %242 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %243 = %242.3;
  (%243,)
}

def @func_8410() -> (Tensor[(7, 9, 6), float32],) {
  %244 = @func_7591() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %245 = %244.0;
  (%245,)
}

def @func_10192() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %246 = @func_9440() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) */;
  %247 = @func_7282() /* ty=Tensor[(7, 9, 6), float32] */;
  %248 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  %249 = %246.1;
  (%247, %248, %249)
}

def @func_6805(%var_6769: Tensor[(14, 5, 16), int64], %var_6770: Tensor[(14, 5, 16), int64]) -> (Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %250 = cast(%var_6770, dtype="int64") /* ty=Tensor[(14, 5, 16), int64] */;
  %251 = shape_of(%var_6769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_6769, dtype="int64") /* ty=Tensor[(14, 5, 16), int64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %254 = minimum(%252, %253) /* ty=Tensor[(14, 5, 16), int64] */;
  %255 = @func_6222() /* ty=Tensor[(7, 9, 6), float32] */;
  %256 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%254, %255, %256)
}

def @func_9534() -> (Tensor[(7, 9, 6), float32], Tensor[(130), float64]) {
  %257 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %258 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %259 = %258.0;
  %260 = cast(%259, dtype="float64") /* ty=Tensor[(130), float64] */;
  %261 = %257.0;
  %262 = atan(%260) /* ty=Tensor[(130), float64] */;
  (%261, %262)
}

def @func_2887() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) {
  %263 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %264 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %265 = cast(meta[relay.Constant][12] /* ty=Tensor[(39), float64] */, dtype="float64") /* ty=Tensor[(39), float64] */;
  %266 = reshape(%265, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %267 = @func_2235(%266) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %268 = %263.0;
  %269 = %264.0;
  %270 = %267.1;
  (%268, %269, %270, meta[relay.Constant][12] /* ty=Tensor[(39), float64] */)
}

def @func_8470() -> Tensor[(7, 9, 6), float32] {
  %271 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %271.1
}

def @func_8538() -> Tensor[(7, 9, 6), float32] {
  %272 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %272.0
}

def @func_2998(%var_2984: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %273 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %274 = cast(%var_2984, dtype="float64") /* ty=Tensor[(39), float64] */;
  %275 = reshape(%274, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %276 = @func_2235(%275) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %277 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %278 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %279 = %273.1;
  %280 = %276.2;
  %281 = %277.1;
  %282 = %278.1;
  (%279, %280, %var_2984, %281, %282)
}

def @func_3276(%var_3242: Tensor[(14, 2, 4), bool], %var_3243: Tensor[(14, 2, 4), bool]) -> (Tensor[(14, 2, 4), float32],) {
  %283 = cast(%var_3243, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %284 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%var_3242, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = logical_and(%285, %286) /* ty=Tensor[(14, 2, 4), bool] */;
  %288 = cast(%287, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %289 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_3242, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %292 = bitwise_and(%290, %291) /* ty=Tensor[(14, 2, 4), int32] */;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %294 = sigmoid(%293) /* ty=Tensor[(14, 2, 4), float32] */;
  (%294,)
}

def @func_8955() -> (Tensor[(7, 9, 6), int32], Tensor[(130), float32]) {
  %295 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %296 = @func_5328() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %297 = %295.0;
  %298 = %296.3;
  (%297, %298)
}

def @func_6020() -> (Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) {
  %299 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %300 = cast(meta[relay.Constant][13] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %301 = reshape(%300, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %302 = @func_57(%301) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %303 = %299.0;
  %304 = %302.0;
  (%303, %304, meta[relay.Constant][13] /* ty=Tensor[(384), float64] */)
}

def @func_10501() -> (Tensor[(7, 9, 6), float32],) {
  %305 = @func_9196() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %306 = %305.0;
  (%306,)
}

def @func_1139() -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
  %307 = cast(meta[relay.Constant][14] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %308 = reshape(%307, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %309 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %310 = @func_83(%308) /* ty=Tensor[(13, 5, 2), float32] */;
  %311 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  (%309, %310, meta[relay.Constant][14] /* ty=Tensor[(130), float32] */, %311)
}

def @func_7837() -> (Tensor[(7, 9, 6), float32],) {
  %312 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  (%312,)
}

def @func_9661() -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) {
  %313 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 117), float64] */, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
  %314 = reshape(%313, newshape=[702]) /* ty=Tensor[(702), float64] */;
  %315 = @func_7012(%314) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) */;
  %316 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
  %317 = %315.1;
  (%316, %317, meta[relay.Constant][15] /* ty=Tensor[(6, 117), float64] */)
}

def @func_1112(%var_1106: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
  %318 = cast(%var_1106, dtype="float32") /* ty=Tensor[(130), float32] */;
  %319 = reshape(%318, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %320 = @func_398(%319) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %321 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %322 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %323 = %320.4;
  (%321, %322, %323, %var_1106)
}

def @func_7012(%var_7007: Tensor[(702), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) {
  %324 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %325 = cast(%var_7007, dtype="float64") /* ty=Tensor[(702), float64] */;
  %326 = reshape(%325, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), float64] */;
  %327 = @func_5550(%326) /* ty=(Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) */;
  %328 = %324.0;
  %329 = %327.2;
  (%328, %329, %var_7007)
}

def @func_830() -> (Tensor[(7, 9, 6), float32],) {
  %330 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  (%330,)
}

def @func_2309(%var_2279: Tensor[(378), float64], %var_2288: Tensor[(384), float64]) -> (Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
  %331 = @func_2187() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) */;
  %332 = cast(%var_2279, dtype="float64") /* ty=Tensor[(378), float64] */;
  %333 = reshape(%332, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %334 = @func_883(%333) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %335 = %331.0;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(130), float32] */;
  %337 = cast(%var_2288, dtype="float64") /* ty=Tensor[(384), float64] */;
  %338 = reshape(%336, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %339 = reshape(%337, newshape=[6, 64]) /* ty=Tensor[(6, 64), float64] */;
  %340 = @func_1241(%338, %339) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) */;
  %341 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %342 = %334.0;
  %343 = %340.5;
  %344 = %341.3;
  (%335, %342, %var_2279, %343, %var_2288, %344)
}

def @func_8238(%var_8229: Tensor[(8, 15, 13), int16], %var_8230: Tensor[(8, 15, 13), int16], %var_8235: Tensor[(13, 10), float32]) -> (Tensor[(8, 15, 13), bool], Tensor[(7, 9, 6), float32], Tensor[(13, 10), float32]) {
  %345 = cast(%var_8230, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %346 = shape_of(%var_8229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%var_8229, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = cast(%var_8235, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
  %350 = reshape(%349, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %351 = @func_3554(%350) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %352 = greater(%347, %348) /* ty=Tensor[(8, 15, 13), bool] */;
  %353 = %351.1;
  (%352, %353, %var_8235)
}

def @func_3733(%var_3714: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), int8]) {
  %354 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %355 = %354.0;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %357 = sinh(%356) /* ty=Tensor[(7, 9, 6), float32] */;
  %358 = cast(%var_3714, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %362 = cast(%357, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %363 = reshape(%362, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %364 = @func_883(%363) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %365 = multiply(%360, %361) /* ty=Tensor[(7, 9, 6), int8] */;
  %366 = %364.0;
  (%365, %366)
}

def @func_4860() -> (Tensor[(7, 9, 6), float32],) {
  %367 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %368 = %367.0;
  (%368,)
}

def @func_6958() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1120), int64]) {
  %369 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %370 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %371 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %372 = reshape(%370, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), int64] */;
  %373 = reshape(%371, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), int64] */;
  %374 = @func_6805(%372, %373) /* ty=(Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %375 = %369.1;
  %376 = %374.2;
  (%375, %376, meta[relay.Constant][16] /* ty=Tensor[(1120), int64] */)
}

def @func_672() -> Tensor[(7, 9, 6), float32] {
  @func_546() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_3505(%var_3470: Tensor[(880), float64], %var_3490: Tensor[(7, 9, 6), float32], %var_3498: Tensor[(1, 384), float64]) -> (Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) {
  %377 = cast(%var_3470, dtype="float64") /* ty=Tensor[(880), float64] */;
  %378 = reshape(%377, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %379 = @func_3197(%378) /* ty=(Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) */;
  %380 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %381 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  %382 = cast(%var_3490, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = not_equal(%384, %385) /* ty=Tensor[(7, 9, 6), bool] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %388 = cast(%var_3498, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
  %389 = reshape(%387, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %390 = reshape(%388, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %391 = @func_2309(%389, %390) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
  %392 = %379.2;
  %393 = %380.0;
  %394 = %391.3;
  (%392, %var_3470, %393, %386, %394, %var_3498)
}

def @func_1845() -> (Tensor[(7, 9, 6), float32],) {
  %395 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  (%395,)
}

def @func_9144(%var_9101: Tensor[(8, 4, 5), uint32], %var_9102: Tensor[(8, 4, 5), uint32]) -> (Tensor[(8, 4, 5), int64], Tensor[(7, 9, 6), float32], Tensor[(8, 4, 5), bool]) {
  %396 = cast(%var_9102, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %397 = shape_of(%var_9101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_9101, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = not_equal(%398, %399) /* ty=Tensor[(8, 4, 5), bool] */;
  %401 = cast(%400, dtype="int64") /* ty=Tensor[(8, 4, 5), int64] */;
  %402 = shape_of(%var_9101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%var_9101, dtype="int64") /* ty=Tensor[(8, 4, 5), int64] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %405 = @func_8263() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
  %406 = cast(%var_9101, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %407 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%400, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %410 = bitwise_and(%403, %404) /* ty=Tensor[(8, 4, 5), int64] */;
  %411 = %405.0;
  %412 = less(%408, %409) /* ty=Tensor[(8, 4, 5), bool] */;
  (%410, %411, %412)
}

def @func_8030() -> Tensor[(7, 9, 6), int32] {
  %413 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
  %413.0
}

def @func_10638(%var_10625: Tensor[(3, 6, 1), int32], %var_10626: Tensor[(3, 6, 6), int32]) -> (Tensor[(3, 6, 6), int32], Tensor[(40, 22), float64]) {
  %414 = cast(%var_10625, dtype="int32") /* ty=Tensor[(3, 6, 1), int32] */;
  %415 = cast(%var_10626, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
  %416 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
  %417 = right_shift(%414, %415) /* ty=Tensor[(3, 6, 6), int32] */;
  %418 = %416.2;
  (%417, %418)
}

def @func_6294() -> Tensor[(7, 9, 6), float32] {
  %419 = @func_3828() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %419.0
}

def @func_10429() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(96, 4), float64]) {
  %420 = @func_9873() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %421 = cast(meta[relay.Constant][17] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %422 = cast(meta[relay.Constant][18] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %423 = reshape(%421, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %424 = reshape(%422, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %425 = @func_190(%423, %424) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %426 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
  %427 = %420.0;
  %428 = @func_2824() /* ty=Tensor[(7, 9, 6), float32] */;
  %429 = %425.3;
  (%426, %427, %428, %429, meta[relay.Constant][17] /* ty=Tensor[(130), float32] */, meta[relay.Constant][18] /* ty=Tensor[(96, 4), float64] */)
}

def @func_1694(%var_1664: Tensor[(7, 9, 6), float32], %var_1673: Tensor[(40, 22), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) {
  %430 = @func_1649() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %431 = %430.0;
  %432 = cast(%var_1664, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(3), int32] */;
  %434 = cast(%431, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %436 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %437 = cast(%var_1673, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %438 = reshape(%437, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %439 = @func_510(%438) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %442 = shape_of(%var_1673, dtype="int32") /* ty=Tensor[(2), int32] */;
  %443 = cast(%var_1673, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %445 = %436.0;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %447 = reshape(%446, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %448 = @func_883(%447) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %449 = maximum(%434, %435) /* ty=Tensor[(7, 9, 6), int8] */;
  %450 = less_equal(%443, %444) /* ty=Tensor[(40, 22), bool] */;
  %451 = %448.0;
  (%449, %445, %450, %451)
}

def @func_6580() -> (Tensor[(7, 9, 6), float32],) {
  %452 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %453 = %452.0;
  (%453,)
}

def @func_1832() -> (Tensor[(7, 9, 6), float32],) {
  %454 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %455 = %454.0;
  (%455,)
}

def @func_3197(%var_3185: Tensor[(880), float64]) -> (Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) {
  %456 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 1), float64] */;
  %457 = cast(%var_3185, dtype="float64") /* ty=Tensor[(880), float64] */;
  %458 = reshape(%457, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %459 = @func_510(%458) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %460 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %461 = acosh(%456) /* ty=Tensor[(13, 2, 1), float64] */;
  %462 = %459.0;
  %463 = %460.1;
  (%461, %462, %var_3185, %463)
}

def @func_4799(%var_4778: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) {
  %464 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %465 = %464.0;
  %466 = cast(%var_4778, dtype="int16") /* ty=Tensor[(7, 9, 6), int16] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%465, dtype="int16") /* ty=Tensor[(7, 9, 6), int16] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %470 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %471 = bitwise_and(%468, %469) /* ty=Tensor[(7, 9, 6), int16] */;
  %472 = %470.0;
  (%471, %472)
}

def @func_3904() -> Tensor[(7, 9, 6), float32] {
  %473 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %473.0
}

def @func_6598(%var_6590: Tensor[(13, 2, 8), uint32]) -> Tensor[(13, 2, 8), bool] {
  %474 = cast(%var_6590, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
  %475 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 2, 8), uint32] */, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%476, %477) /* ty=Tensor[(13, 2, 8), bool] */
}

def @func_3151(%var_3118: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
  %478 = cast(%var_3118, dtype="float32") /* ty=Tensor[(130), float32] */;
  %479 = reshape(%478, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %480 = @func_398(%479) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %481 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %482 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  %483 = %480.0;
  %484 = %481.2;
  (%482, %483, %var_3118, %484)
}

def @func_10544() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %485 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %486 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %487 = %485.0;
  %488 = %486.2;
  (%487, %488)
}

def @func_7487() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) {
  %489 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %490 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
  %491 = cast(meta[relay.Constant][21] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
  %492 = reshape(%491, newshape=[40, 22]) /* ty=Tensor[(40, 22), float64] */;
  %493 = @func_6509(%492) /* ty=(Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) */;
  %494 = %489.1;
  %495 = %490.0;
  %496 = %493.3;
  (%494, %495, %496, meta[relay.Constant][21] /* ty=Tensor[(880), float64] */)
}

def @func_10308(%var_10292: Tensor[(12, 13), float32], %var_10306: Tensor[(384), float64]) -> (Tensor[(12, 13), float32], Tensor[(7, 9, 6), float32], Tensor[(378), float64], Tensor[(384), float64]) {
  %497 = cast(%var_10292, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
  %498 = cast(meta[relay.Constant][22] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %499 = cast(%var_10306, dtype="float64") /* ty=Tensor[(384), float64] */;
  %500 = reshape(%498, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %501 = reshape(%499, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %502 = @func_2309(%500, %501) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
  %503 = sigmoid(%497) /* ty=Tensor[(12, 13), float32] */;
  %504 = %502.3;
  (%503, %504, meta[relay.Constant][22] /* ty=Tensor[(378), float64] */, %var_10306)
}

def @func_10218(%var_10204: Tensor[(6, 6, 10), float64]) -> Tensor[(6, 6, 10), float64] {
  %505 = cast(%var_10204, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
  rsqrt(%505) /* ty=Tensor[(6, 6, 10), float64] */
}

def @func_2095(%var_2036: Tensor[(1, 10, 6), float32], %var_2084: Tensor[(130), float32]) -> (Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) {
  %506 = cast(meta[relay.Constant][23] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %507 = cast(meta[relay.Constant][23] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %508 = reshape(%506, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), float64] */;
  %509 = reshape(%507, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), float64] */;
  %510 = @func_1356(%508, %509) /* ty=(Tensor[(4, 12, 9), int64],) */;
  %511 = cast(%var_2084, dtype="float32") /* ty=Tensor[(130), float32] */;
  %512 = reshape(%511, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %513 = @func_1112(%512) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %514 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %515 = cast(%var_2036, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %516 = atan(%515) /* ty=Tensor[(1, 10, 6), float32] */;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %518 = cosh(%517) /* ty=Tensor[(1, 10, 6), float32] */;
  %519 = cast(%518, dtype="int64") /* ty=Tensor[(1, 10, 6), int64] */;
  %520 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%516, dtype="int64") /* ty=Tensor[(1, 10, 6), int64] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %523 = left_shift(%521, %522) /* ty=Tensor[(?, 10, 6), int64] */;
  %524 = cast(%523, dtype="bool") /* ty=Tensor[(?, 10, 6), bool] */;
  %525 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%516, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = %510.0;
  %529 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %530 = %513.3;
  %531 = %514.0;
  %532 = equal(%526, %527) /* ty=Tensor[(?, 10, 6), bool] */;
  (%528, meta[relay.Constant][23] /* ty=Tensor[(432), float64] */, %529, %530, %var_2084, %531, %532)
}

def @func_5550(%var_5535: Tensor[(13, 6, 9), float64]) -> (Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) {
  %533 = cast(%var_5535, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %534 = cast(meta[relay.Constant][24] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %535 = reshape(%534, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %536 = @func_4799(%535) /* ty=(Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) */;
  %537 = sigmoid(%533) /* ty=Tensor[(13, 6, 9), float64] */;
  %538 = %536.1;
  (%537, %538, meta[relay.Constant][24] /* ty=Tensor[(378), float32] */)
}

def @func_10523() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %539 = @func_8263() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
  %540 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %541 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %542 = %539.0;
  %543 = %540.0;
  %544 = %541.0;
  (%542, %543, %544)
}

def @func_3459() -> (Tensor[(7, 9, 6), float32],) {
  %545 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %546 = %545.0;
  (%546,)
}

def @func_1592() -> (Tensor[(7, 9, 6), float32],) {
  %547 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%547,)
}

def @func_4134() -> Tensor[(130), float32] {
  %548 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %548.0
}

def @func_1649() -> (Tensor[(7, 9, 6), float32],) {
  %549 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%549,)
}

def @func_5012(%var_4988: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) {
  %550 = cast(%var_4988, dtype="float64") /* ty=Tensor[(39), float64] */;
  %551 = reshape(%550, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %552 = @func_2235(%551) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %553 = @func_3053() /* ty=Tensor[(130), float32] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(130), float32] */;
  %555 = %552.1;
  %556 = acos(%554) /* ty=Tensor[(130), float32] */;
  (%555, %var_4988, %556)
}

def @func_8145(%var_8132: Tensor[(1, 12, 8), float64]) -> (Tensor[(1, 12, 8), float32], Tensor[(130), float32]) {
  %557 = cast(%var_8132, dtype="float64") /* ty=Tensor[(1, 12, 8), float64] */;
  %558 = cos(%557) /* ty=Tensor[(1, 12, 8), float64] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(1, 12, 8), float32] */;
  %560 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %561 = log10(%559) /* ty=Tensor[(1, 12, 8), float32] */;
  %562 = %560.0;
  (%561, %562)
}

def @func_9407(%var_9398: Tensor[(130), float32]) -> (Tensor[(130), float32],) {
  %563 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %564 = %563.0;
  %565 = cast(%var_9398, dtype="float32") /* ty=Tensor[(130), float32] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(1), int32] */;
  %567 = cast(%564, dtype="float32") /* ty=Tensor[(130), float32] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?), float32] */;
  %569 = floor_mod(%567, %568) /* ty=Tensor[(130), float32] */;
  (%569,)
}

def @func_3925() -> (Tensor[(130), float32],) {
  %570 = @func_3053() /* ty=Tensor[(130), float32] */;
  (%570,)
}

def @func_5528() -> (Tensor[(7, 9, 6), float32],) {
  %571 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  (%571,)
}

def @func_4379() -> Tensor[(12, 5, 10), float32] {
  %572 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %573 = %572.1;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  exp(%574) /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_2786(%var_2773: Tensor[(192, 2), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) {
  %575 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %576 = cast(meta[relay.Constant][25] /* ty=Tensor[(130, 1), float32] */, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %577 = cast(%var_2773, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %578 = reshape(%576, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %579 = reshape(%577, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %580 = @func_190(%578, %579) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %581 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %582 = %575.0;
  %583 = %580.5;
  (%581, %582, %583, meta[relay.Constant][25] /* ty=Tensor[(130, 1), float32] */, %var_2773)
}

def @func_510(%var_500: Tensor[(5, 16, 11), float64]) -> (Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) {
  %584 = cast(%var_500, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %585 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 16, 11), float64] */, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %586 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_500, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %589 = sigmoid(%584) /* ty=Tensor[(5, 16, 11), float64] */;
  %590 = floor_divide(%587, %588) /* ty=Tensor[(5, 16, 11), float32] */;
  (%589, %590)
}

def @func_8872() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %591 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %592 = @func_8688() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %593 = %591.2;
  %594 = %592.0;
  (%593, %594)
}

def @func_6756(%var_6738: Tensor[(11, 10, 8), float32], %var_6739: Tensor[(11, 10, 8), float32]) -> Tensor[(11, 10, 8), float32] {
  %595 = cast(%var_6739, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %596 = shape_of(%var_6738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%var_6738, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%597, %598) /* ty=Tensor[(11, 10, 8), float32] */
}

def @func_8635() -> Tensor[(130), float32] {
  %599 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
  %599.0
}

def @func_9873() -> (Tensor[(7, 9, 6), int8],) {
  %600 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %601 = %600.0;
  (%601,)
}

def @func_83(%var_70: Tensor[(13, 5, 2), float32]) -> Tensor[(13, 5, 2), float32] {
  %602 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %603 = shape_of(%var_70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%var_70, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%604, %605) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_7060() -> (Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 11, 3), float64], Tensor[(16, 3, 8), float64]) {
  %606 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %609 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %610 = reshape(%608, newshape=[378]) /* ty=Tensor[(378), float64] */;
  %611 = reshape(%609, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %612 = @func_2309(%610, %611) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
  %613 = @func_5428() /* ty=(Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) */;
  %614 = @func_6020() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) */;
  %615 = %612.4;
  %616 = %613.0;
  %617 = %614.1;
  (%607, %615, meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, %616, %617)
}

def @func_5108() -> Tensor[(7, 9, 6), float32] {
  %618 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %618.2
}

def @func_2399() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %619 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %620 = %619.1;
  %621 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  (%620, %621)
}

def @func_3042() -> Tensor[(1, 1, 8), float64] {
  %622 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 8), float64] */;
  log10(%622) /* ty=Tensor[(1, 1, 8), float64] */
}

def @func_6488() -> Tensor[(7, 9, 6), float32] {
  %623 = @func_3459() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %623.0
}

def @func_3028() -> Tensor[(7, 9, 6), float32] {
  %624 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %624.1
}

def @func_8084() -> (Tensor[(130), float32], Tensor[(130), float32]) {
  %625 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %626 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
  %627 = %625.0;
  %628 = %626.0;
  (%627, %628)
}

def @func_10453() -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %629 = @func_4860() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %630 = @func_6419() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %631 = %629.0;
  %632 = %630.2;
  (%631, %632)
}

def @func_1430() -> (Tensor[(7, 9, 6), float32],) {
  %633 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  (%633,)
}

def @func_1074() -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) {
  %634 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %635 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 9, 6), float32] */, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(%634, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %639 = right_shift(%637, %638) /* ty=Tensor[(7, 9, 6), int8] */;
  %640 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%639, %640)
}

def @func_2490() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %641 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %642 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %643 = cast(meta[relay.Constant][31] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %644 = reshape(%643, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %645 = @func_398(%644) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %646 = %641.0;
  %647 = %642.0;
  %648 = %645.0;
  (%646, %647, %648, meta[relay.Constant][31] /* ty=Tensor[(130), float32] */)
}

def @func_10085(%var_10068: Tensor[(6, 117), float32]) -> (Tensor[(6, 117), float32], Tensor[(6, 117), float64]) {
  %649 = @func_9661() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) */;
  %650 = %649.2;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %652 = sinh(%651) /* ty=Tensor[(6, 117), float32] */;
  %653 = cast(%650, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %655 = cast(%652, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %657 = cast(%var_10068, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
  %658 = shape_of(%652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %659 = cast(%652, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %661 = floor_mod(%655, %656) /* ty=Tensor[(6, 117), float32] */;
  %662 = divide(%659, %660) /* ty=Tensor[(6, 117), float64] */;
  (%661, %662)
}

def @func_8367(%var_8340: Tensor[(594), bool], %var_8344: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(9, 11, 6), bool], Tensor[(594), bool], Tensor[(13, 3, 1), float64], Tensor[(39), float32]) {
  %663 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %664 = cast(%var_8340, dtype="bool") /* ty=Tensor[(594), bool] */;
  %665 = reshape(%664, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), bool] */;
  %666 = @func_6820(%665) /* ty=(Tensor[(9, 11, 6), bool],) */;
  %667 = cast(%var_8344, dtype="float64") /* ty=Tensor[(39), float64] */;
  %668 = reshape(%667, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %669 = @func_2235(%668) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %670 = cast(%var_8344, dtype="float32") /* ty=Tensor[(39), float32] */;
  %671 = %663.1;
  %672 = %666.0;
  %673 = %669.0;
  %674 = sigmoid(%670) /* ty=Tensor[(39), float32] */;
  (%671, %672, %var_8340, %673, %674)
}

def @func_3298() -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) {
  %675 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %676 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %677 = %675.0;
  %678 = %676.0;
  %679 = @func_3042() /* ty=Tensor[(1, 1, 8), float64] */;
  (%677, %678, %679)
}

def @func_190(%var_150: Tensor[(130), float32], %var_165: Tensor[(384), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) {
  %680 = cast(%var_150, dtype="float32") /* ty=Tensor[(130), float32] */;
  %681 = reshape(%680, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %682 = cast(%var_165, dtype="float64") /* ty=Tensor[(384), float64] */;
  %683 = reshape(%682, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %684 = @func_57(%683) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %685 = @func_83(%681) /* ty=Tensor[(13, 5, 2), float32] */;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %687 = reshape(%686, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %688 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %689 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %690 = %684.0;
  %691 = @func_83(%687) /* ty=Tensor[(13, 5, 2), float32] */;
  (%688, %685, %var_150, %689, %690, %var_165, %691)
}

def @func_7766() -> (Tensor[(7, 9, 6), float32],) {
  %692 = @func_3635() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %693 = %692.0;
  (%693,)
}

def @func_2187() -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) {
  %694 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %695 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %696 = %694.2;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(130), float32] */;
  %698 = cast(meta[relay.Constant][32] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %699 = reshape(%697, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %700 = reshape(%698, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %701 = @func_190(%699, %700) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %702 = %695.0;
  %703 = %701.0;
  (%696, %702, %703, meta[relay.Constant][32] /* ty=Tensor[(96, 4), float64] */)
}

def @func_9720(%var_9713: Tensor[(546), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 13, 14), uint16], Tensor[(546), float64]) {
  %704 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %705 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %706 = cast(%var_9713, dtype="float64") /* ty=Tensor[(546), float64] */;
  %707 = reshape(%706, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float64] */;
  %708 = @func_4214(%707) /* ty=(Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) */;
  %709 = %704.0;
  %710 = %705.3;
  %711 = %708.0;
  (%709, %710, %711, %var_9713)
}

def @func_6419() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %712 = @func_4148() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %713 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %714 = reshape(%713, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %715 = @func_1112(%714) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %716 = %712.0;
  %717 = %715.1;
  (%716, %717, meta[relay.Constant][33] /* ty=Tensor[(130), float32] */)
}

def @func_4964(%var_4948: Tensor[(130), float32]) -> (Tensor[(130), float32], Tensor[(880), float64], Tensor[(40, 22), float64]) {
  %718 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %719 = %718.2;
  %720 = cast(%var_4948, dtype="float32") /* ty=Tensor[(130), float32] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(1), int32] */;
  %722 = cast(%719, dtype="float32") /* ty=Tensor[(130), float32] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?), float32] */;
  %724 = cast(meta[relay.Constant][34] /* ty=Tensor[(40, 22), float64] */, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %725 = reshape(%724, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %726 = @func_3197(%725) /* ty=(Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) */;
  %727 = divide(%722, %723) /* ty=Tensor[(130), float32] */;
  %728 = %726.2;
  (%727, %728, meta[relay.Constant][34] /* ty=Tensor[(40, 22), float64] */)
}

def @func_5428() -> (Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) {
  %729 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
  %730 = log2(%729) /* ty=Tensor[(15, 11, 3), float64] */;
  %731 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
  %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%730, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %735 = mod(%733, %734) /* ty=Tensor[(15, 11, 3), float64] */;
  %736 = @func_4379() /* ty=Tensor[(12, 5, 10), float32] */;
  (%735, %736)
}

def @func_1969() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %737 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %738 = @func_1472() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %739 = %737.0;
  %740 = %738.3;
  (%739, %740)
}

def @func_3660() -> Tensor[(7, 9, 6), int32] {
  %741 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %741.0
}

def @func_10469() -> (Tensor[(7, 9, 6), float32],) {
  %742 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  (%742,)
}

def @func_3554(%var_3543: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %743 = @func_2887() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) */;
  %744 = cast(%var_3543, dtype="float32") /* ty=Tensor[(130), float32] */;
  %745 = reshape(%744, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %746 = @func_1112(%745) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %747 = %743.0;
  %748 = %746.0;
  (%747, %748, %var_3543)
}

def @func_9196() -> (Tensor[(7, 9, 6), float32],) {
  %749 = @func_6294() /* ty=Tensor[(7, 9, 6), float32] */;
  (%749,)
}

def @func_3797(%var_3794: Tensor[(15, 8, 5), float32]) -> Tensor[(15, 8, 5), float32] {
  %750 = cast(%var_3794, dtype="float32") /* ty=Tensor[(15, 8, 5), float32] */;
  asin(%750) /* ty=Tensor[(15, 8, 5), float32] */
}

def @func_2659() -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %751 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %752 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %753 = %751.3;
  %754 = %752.0;
  %755 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  (%753, %754, %755)
}

def @func_9225() -> Tensor[(7, 9, 6), float32] {
  @func_546() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_9183() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %756 = @func_1832() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %757 = @func_1649() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %758 = %756.0;
  %759 = %757.0;
  (%758, %759)
}

def @func_4568(%var_4551: Tensor[(3, 20), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) {
  %760 = cast(%var_4551, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %761 = cast(meta[relay.Constant][36] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %762 = reshape(%760, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %763 = reshape(%761, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %764 = @func_2095(%762, %763) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %765 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
  %766 = reshape(%765, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), int64] */;
  %767 = @func_3330(%766) /* ty=(Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) */;
  %768 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  %769 = %764.2;
  %770 = %767.1;
  (%768, %769, %var_4551, meta[relay.Constant][36] /* ty=Tensor[(130), float32] */, %770, meta[relay.Constant][37] /* ty=Tensor[(504), int64] */)
}

def @func_6685() -> Tensor[(7, 9, 6), float32] {
  @func_6294() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_5328() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %771 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %772 = %771.1;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %774 = reshape(%773, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %775 = @func_883(%774) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %776 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %777 = @func_3925() /* ty=(Tensor[(130), float32],) */;
  %778 = %775.0;
  %779 = %776.2;
  %780 = %777.0;
  (%772, %778, %779, %780)
}

def @func_1729() -> Tensor[(7, 9, 6), float32] {
  %781 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %781.0
}

def @func_2824() -> Tensor[(7, 9, 6), float32] {
  %782 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %782.0
}

def @func_9942(%var_9933: Tensor[(60), float32]) -> (Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1, 130), float32], Tensor[(384), float64], Tensor[(130), float32], Tensor[(60), float32]) {
  %783 = @func_9391() /* ty=(Tensor[(7, 9, 6), float64],) */;
  %784 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %785 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %786 = cast(meta[relay.Constant][39] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %787 = reshape(%785, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %788 = reshape(%786, newshape=[6, 64]) /* ty=Tensor[(6, 64), float64] */;
  %789 = @func_1241(%787, %788) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) */;
  %790 = cast(%var_9933, dtype="float32") /* ty=Tensor[(60), float32] */;
  %791 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %792 = reshape(%790, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %793 = reshape(%791, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %794 = @func_2095(%792, %793) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %795 = %783.0;
  %796 = %784.0;
  %797 = %789.5;
  %798 = %794.4;
  (%795, %796, %797, meta[relay.Constant][38] /* ty=Tensor[(1, 130), float32] */, meta[relay.Constant][39] /* ty=Tensor[(384), float64] */, %798, %var_9933)
}

def @func_4214(%var_4199: Tensor[(3, 13, 14), float64]) -> (Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) {
  %799 = @func_3593() /* ty=(Tensor[(3, 13, 14), float64],) */;
  %800 = %799.0;
  %801 = cast(%var_4199, dtype="uint16") /* ty=Tensor[(3, 13, 14), uint16] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="uint16") /* ty=Tensor[(3, 13, 14), uint16] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %805 = cast(%var_4199, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %806 = right_shift(%803, %804) /* ty=Tensor[(3, 13, 14), uint16] */;
  %807 = acos(%805) /* ty=Tensor[(3, 13, 14), float32] */;
  (%806, %807)
}

def @func_10728() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %808 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
  %809 = @func_5197() /* ty=Tensor[(7, 9, 6), float32] */;
  (%808, %809)
}

def @func_8688() -> (Tensor[(7, 9, 6), float32],) {
  %810 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %811 = %810.0;
  (%811,)
}

def @func_4502() -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) {
  %812 = @func_3298() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) */;
  %813 = @func_2887() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) */;
  %814 = %812.0;
  %815 = %813.0;
  (%814, %815)
}

def @func_7002() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
  %816 = @func_6898() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %817 = cast(meta[relay.Constant][40] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %818 = reshape(%817, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %819 = @func_398(%818) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %820 = %816.0;
  %821 = @func_6657() /* ty=Tensor[(7, 9, 6), float32] */;
  %822 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
  %823 = %819.4;
  (%820, %821, %822, %823, meta[relay.Constant][40] /* ty=Tensor[(130), float32] */)
}

def @func_8299() -> Tensor[(7, 9, 6), float32] {
  @func_5197() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_2635() -> (Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) {
  %824 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %825 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 5, 10), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %826 = log(%824) /* ty=Tensor[(12, 5, 10), float32] */;
  %827 = asin(%825) /* ty=Tensor[(12, 5, 10), float64] */;
  %828 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%826, %827, %828)
}

def @func_8581() -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %829 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %830 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %831 = %829.0;
  %832 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_1744() -> (Tensor[(7, 9, 6), float32],) {
  %834 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %835 = %834.3;
  (%835,)
}

def @func_4706() -> (Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) {
  %836 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %837 = @func_4379() /* ty=Tensor[(12, 5, 10), float32] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %839 = %836.0;
  %840 = atan(%838) /* ty=Tensor[(12, 5, 10), float64] */;
  %841 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
  (%839, %840, %841)
}

def @func_9274() -> (Tensor[(7, 9, 6), float32],) {
  %842 = @func_8661() /* ty=Tensor[(7, 9, 6), float32] */;
  (%842,)
}

def @func_3593() -> (Tensor[(3, 13, 14), float64],) {
  %843 = @func_2940() /* ty=(Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) */;
  %844 = %843.0;
  (%844,)
}

def @func_6820(%var_6814: Tensor[(9, 11, 6), bool]) -> (Tensor[(9, 11, 6), bool],) {
  %845 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 11, 6), bool] */, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %846 = shape_of(%var_6814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_6814, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %849 = logical_and(%847, %848) /* ty=Tensor[(9, 11, 6), bool] */;
  (%849,)
}

def @func_6469(%var_6435: Tensor[(96, 4), float64]) -> (Tensor[(96, 4), bool], Tensor[(7, 9, 6), int16], Tensor[(378, 1), float32], Tensor[(96, 4), float64]) {
  %850 = @func_2187() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) */;
  %851 = %850.3;
  %852 = cast(%var_6435, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(2), int32] */;
  %854 = cast(%851, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %856 = cast(meta[relay.Constant][43] /* ty=Tensor[(378, 1), float32] */, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
  %857 = reshape(%856, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %858 = @func_4799(%857) /* ty=(Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) */;
  %859 = cast(%var_6435, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %860 = logical_or(%854, %855) /* ty=Tensor[(96, 4), bool] */;
  %861 = %858.0;
  %862 = asinh(%859) /* ty=Tensor[(96, 4), float64] */;
  (%860, %861, meta[relay.Constant][43] /* ty=Tensor[(378, 1), float32] */, %862)
}

def @func_10783(%var_10764: Tensor[(600), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 10, 10), float64], Tensor[(600), float64], Tensor[(7, 9, 6), float32]) {
  %863 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %864 = cast(%var_10764, dtype="float64") /* ty=Tensor[(600), float64] */;
  %865 = reshape(%864, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %866 = @func_8581() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %867 = %863.0;
  %868 = @func_9225() /* ty=Tensor[(7, 9, 6), float32] */;
  %869 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
  %870 = @func_9070(%865) /* ty=Tensor[(6, 10, 10), float64] */;
  %871 = %866.1;
  (%867, %868, %869, %870, %var_10764, %871)
}

def @func_4139() -> Tensor[(7, 9, 6), float32] {
  %872 = @func_3459() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %872.0
}

def @func_6657() -> Tensor[(7, 9, 6), float32] {
  %873 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %873.1
}

def @func_1241(%var_1151: Tensor[(130), float32], %var_1223: Tensor[(6, 64), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) {
  %874 = cast(%var_1151, dtype="float32") /* ty=Tensor[(130), float32] */;
  %875 = reshape(%874, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %876 = @func_1112(%875) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %877 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %878 = cast(%var_1151, dtype="float32") /* ty=Tensor[(130), float32] */;
  %879 = cast(%var_1223, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %880 = reshape(%878, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %881 = reshape(%879, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %882 = @func_190(%880, %881) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %883 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %884 = %876.1;
  %885 = %877.0;
  %886 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %887 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %888 = %882.3;
  (%883, %884, %var_1151, %885, %886, %887, %888, %var_1223)
}

def @func_3635() -> (Tensor[(7, 9, 6), float32],) {
  %889 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %890 = %889.0;
  (%890,)
}

def @func_6035() -> (Tensor[(7, 9, 6), int8],) {
  %891 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %892 = %891.0;
  (%892,)
}

def @func_1908() -> (Tensor[(7, 9, 6), int32],) {
  %893 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %894 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %895 = %894.1;
  %896 = cast(%895, dtype="int32") /* ty=Tensor[(7, 9, 6), int32] */;
  %897 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%893, dtype="int32") /* ty=Tensor[(7, 9, 6), int32] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %900 = bitwise_or(%898, %899) /* ty=Tensor[(7, 9, 6), int32] */;
  (%900,)
}

def @func_5291(%var_5249: Tensor[(12, 10, 8), float64], %var_5281: Tensor[(6, 8, 8), float32]) -> (Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) {
  %901 = @func_3042() /* ty=Tensor[(1, 1, 8), float64] */;
  %902 = cast(%901, dtype="float64") /* ty=Tensor[(1, 1, 8), float64] */;
  %903 = cast(%901, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %904 = cast(%var_5249, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  %905 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %906 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %907 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %908 = cast(%901, dtype="float32") /* ty=Tensor[(1, 1, 8), float32] */;
  %909 = acosh(%908) /* ty=Tensor[(1, 1, 8), float32] */;
  %910 = cast(%909, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %911 = cast(%var_5281, dtype="bool") /* ty=Tensor[(6, 8, 8), bool] */;
  %912 = rsqrt(%902) /* ty=Tensor[(1, 1, 8), float64] */;
  %913 = less(%903, %904) /* ty=Tensor[(12, 10, 8), bool] */;
  %914 = %905.0;
  %915 = %906.0;
  %916 = %907.0;
  %917 = logical_and(%910, %911) /* ty=Tensor[(6, 8, 8), bool] */;
  (%912, %913, %914, %915, %916, %917)
}

def @func_9955() -> Tensor[(7, 9, 6), float32] {
  @func_8470() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_546() -> Tensor[(7, 9, 6), float32] {
  @func_108() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_2235(%var_2209: Tensor[(13, 3, 1), float64]) -> (Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) {
  %918 = cast(%var_2209, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
  %919 = log10(%918) /* ty=Tensor[(13, 3, 1), float64] */;
  %920 = cast(%919, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
  %921 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %922 = cast(%var_2209, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %923 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%919, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %926 = floor_mod(%924, %925) /* ty=Tensor[(13, 3, ?), float32] */;
  %927 = cast(%var_2209, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%926, dtype="float32") /* ty=Tensor[(13, 3, ?), float32] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %931 = log2(%920) /* ty=Tensor[(13, 3, 1), float64] */;
  %932 = %921.0;
  %933 = floor_divide(%929, %930) /* ty=Tensor[(13, 3, ?), float32] */;
  (%931, %932, %933)
}

def @func_398(%var_340: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) {
  %934 = cast(%var_340, dtype="float32") /* ty=Tensor[(130), float32] */;
  %935 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 64), float64] */, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %936 = reshape(%934, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %937 = reshape(%935, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %938 = @func_190(%936, %937) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %939 = %938.5;
  %940 = cast(%939, dtype="float64") /* ty=Tensor[(384), float64] */;
  %941 = reshape(%940, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %942 = @func_57(%941) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %943 = %942.0;
  %944 = cast(%939, dtype="int32") /* ty=Tensor[(384), int32] */;
  %945 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 64), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %946 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 64), float64] */, dtype="int32") /* ty=Tensor[(6, 64), int32] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %948 = bitwise_xor(%946, %947) /* ty=Tensor[(6, 64), int32] */;
  %949 = cast(%948, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %950 = shape_of(%943, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%943, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %953 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 64), float64] */, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %954 = asin(%953) /* ty=Tensor[(6, 64), float32] */;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %956 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %957 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %958 = divide(%951, %952) /* ty=Tensor[(16, 3, 8), float64] */;
  %959 = acos(%955) /* ty=Tensor[(6, 64), float32] */;
  (%956, %var_340, %957, %958, %959)
}

def @func_4903() -> (Tensor[(130), float32], Tensor[(7, 9, 6), int32]) {
  %960 = @func_3925() /* ty=(Tensor[(130), float32],) */;
  %961 = %960.0;
  %962 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
  (%961, %962)
}

def @func_8661() -> Tensor[(7, 9, 6), float32] {
  @func_6222() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_3330(%var_3316: Tensor[(4, 9, 14), int64]) -> (Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) {
  %963 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 9, 14), int64] */, dtype="int64") /* ty=Tensor[(4, 9, 14), int64] */;
  %964 = shape_of(%var_3316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%var_3316, dtype="int64") /* ty=Tensor[(4, 9, 14), int64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %967 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %968 = bitwise_xor(%965, %966) /* ty=Tensor[(4, 9, 14), int64] */;
  %969 = %967.0;
  (%968, %969)
}

def @func_1533() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %970 = @func_1472() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %971 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %972 = %970.2;
  %973 = %971.0;
  (%972, %973)
}

def @func_10369(%var_10363: Tensor[(2, 1, 9), uint64], %var_10364: Tensor[(2, 1, 9), uint64]) -> Tensor[(2, ?, 9), bool] {
  %974 = cast(%var_10364, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %975 = shape_of(%var_10363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_10363, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%976, %977) /* ty=Tensor[(2, ?, 9), bool] */
}

def @func_10580(%var_10559: Tensor[(16, 11, 11), uint32], %var_10560: Tensor[(16, 11, 11), uint32], %var_10572: Tensor[(39, 1), float64]) -> (Tensor[(16, 11, 11), bool], Tensor[(13, 3, ?), float32], Tensor[(39, 1), float64]) {
  %978 = cast(%var_10560, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %979 = shape_of(%var_10559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%var_10559, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %982 = cast(%var_10572, dtype="float64") /* ty=Tensor[(39, 1), float64] */;
  %983 = reshape(%982, newshape=[39]) /* ty=Tensor[(39), float64] */;
  %984 = @func_2998(%983) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %985 = equal(%980, %981) /* ty=Tensor[(16, 11, 11), bool] */;
  %986 = %984.1;
  (%985, %986, %var_10572)
}

def @main(%var_10895: Tensor[(10, 11, 6), int16], %var_10896: Tensor[(10, 11, 6), int16]) -> Tensor[(10, 11, 6), bool] {
  %987 = cast(%var_10896, dtype="int16") /* ty=Tensor[(10, 11, 6), int16] */;
  %988 = shape_of(%var_10895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%var_10895, dtype="int16") /* ty=Tensor[(10, 11, 6), int16] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %991 = logical_xor(%989, %990) /* ty=Tensor[(10, 11, 6), int16] */;
  %992 = cast(%991, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %993 = shape_of(%var_10896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%var_10896, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%994, %995) /* ty=Tensor[(10, 11, 6), bool] */
}

def @func_3943(%var_3928: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32],) {
  %996 = cast(%var_3928, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %997 = log2(%996) /* ty=Tensor[(15, 6, 1), float32] */;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %999 = atan(%998) /* ty=Tensor[(15, 6, 1), float32] */;
  %1000 = cast(%999, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %1001 = atanh(%1000) /* ty=Tensor[(15, 6, 1), float32] */;
  (%1001,)
}

def @func_7753(%var_7715: Tensor[(13, 3), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(39), float64], Tensor[(13, 3), float64], Tensor[(14, 2, 4), float32], Tensor[(112), bool], Tensor[(7, 9, 6), float32]) {
  %1002 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %1003 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1004 = cast(%var_7715, dtype="float64") /* ty=Tensor[(13, 3), float64] */;
  %1005 = reshape(%1004, newshape=[39]) /* ty=Tensor[(39), float64] */;
  %1006 = @func_5012(%1005) /* ty=(Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) */;
  %1007 = cast(meta[relay.Constant][46] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1008 = cast(meta[relay.Constant][46] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1009 = reshape(%1007, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), bool] */;
  %1010 = reshape(%1008, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), bool] */;
  %1011 = @func_3276(%1009, %1010) /* ty=(Tensor[(14, 2, 4), float32],) */;
  %1012 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1013 = %1002.0;
  %1014 = %1003.0;
  %1015 = %1006.1;
  %1016 = %1011.0;
  %1017 = %1012.1;
  (%1013, %1014, %1015, %var_7715, %1016, meta[relay.Constant][46] /* ty=Tensor[(112), bool] */, %1017)
}

def @func_9440() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) {
  %1018 = @func_1832() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1019 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1020 = @func_9391() /* ty=(Tensor[(7, 9, 6), float64],) */;
  %1021 = %1018.0;
  %1022 = %1019.0;
  %1023 = %1020.0;
  (%1021, %1022, %1023)
}

def @func_3053() -> Tensor[(130), float32] {
  %1024 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1024.0
}

def @func_8263() -> (Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
  %1025 = cast(meta[relay.Constant][47] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1026 = reshape(%1025, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %1027 = @func_7701(%1026) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
  %1028 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
  %1029 = %1027.3;
  (%1028, %1029, meta[relay.Constant][47] /* ty=Tensor[(880), float32] */)
}

def @func_8816() -> Tensor[(12, 5, 10), float64] {
  %1030 = @func_4706() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) */;
  %1030.1
}

def @func_9391() -> (Tensor[(7, 9, 6), float64],) {
  %1031 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1032 = %1031.1;
  %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %1034 = sin(%1033) /* ty=Tensor[(7, 9, 6), float64] */;
  (%1034,)
}

def @func_883(%var_872: Tensor[(7, 9, 6), float64]) -> (Tensor[(7, 9, 6), int8],) {
  %1035 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %1037 = exp(%1036) /* ty=Tensor[(7, 9, 6), float64] */;
  %1038 = cast(%var_872, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1042 = minimum(%1040, %1041) /* ty=Tensor[(7, 9, 6), int8] */;
  (%1042,)
}

def @func_5936() -> (Tensor[(130), float32],) {
  %1043 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_9614() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %1045 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1046 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1047 = %1045.0;
  %1048 = %1046.0;
  (%1047, %1048)
}

def @func_9770(%var_9749: Tensor[(4, 220), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 6, 9), float64], Tensor[(702), float64], Tensor[(7, 9, 6), int8], Tensor[(4, 220), float64], Tensor[(7, 9, 6), float32]) {
  %1049 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1050 = cast(meta[relay.Constant][48] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %1051 = reshape(%1050, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), float64] */;
  %1052 = @func_5550(%1051) /* ty=(Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) */;
  %1053 = %1049.2;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %1055 = cast(%var_9749, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %1056 = reshape(%1054, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %1057 = reshape(%1055, newshape=[40, 22]) /* ty=Tensor[(40, 22), float64] */;
  %1058 = @func_1694(%1056, %1057) /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) */;
  %1059 = @func_8688() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1060 = %1052.0;
  %1061 = %1058.0;
  %1062 = %1059.0;
  (%1053, %1060, meta[relay.Constant][48] /* ty=Tensor[(702), float64] */, %1061, %var_9749, %1062)
}

def @func_57(%var_36: Tensor[(16, 3, 8), float64]) -> (Tensor[(16, 3, 8), float64],) {
  %1063 = cast(%var_36, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %1064 = exp(%1063) /* ty=Tensor[(16, 3, 8), float64] */;
  (%1064,)
}

def @func_7282() -> Tensor[(7, 9, 6), float32] {
  %1065 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %1065.0
}

def @func_5992() -> Tensor[(7, 9, 6), int32] {
  %1066 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %1066.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6900() -> (Tensor[(7, 9, 6), float32],) {
  @func_6898() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_6420() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %6 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
    %0 = @func_4148() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %2 = reshape(%1, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %3 = @func_1112(%2) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
    %4 = %0.0;
    %5 = %3.1;
    (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(130), float32] */)
  };
  %6() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_9198() -> (Tensor[(7, 9, 6), float32],) {
  @func_9196() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_3636() -> (Tensor[(7, 9, 6), float32],) {
  %9 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %7 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %8 = %7.0;
    (%8,)
  };
  %9() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_8147(%var_8146: Tensor[(1, 12, 8), float64]) -> (Tensor[(1, 12, 8), float32], Tensor[(130), float32]) {
  %16 = fn (%var_8132: Tensor[(1, 12, 8), float64]) -> (Tensor[(1, 12, 8), float32], Tensor[(130), float32]) {
    %10 = cast(%var_8132, dtype="float64") /* ty=Tensor[(1, 12, 8), float64] */;
    %11 = cos(%10) /* ty=Tensor[(1, 12, 8), float64] */;
    %12 = cast(%11, dtype="float32") /* ty=Tensor[(1, 12, 8), float32] */;
    %13 = @func_5936() /* ty=(Tensor[(130), float32],) */;
    %14 = log10(%12) /* ty=Tensor[(1, 12, 8), float32] */;
    %15 = %13.0;
    (%14, %15)
  };
  %16(%var_8146) /* ty=(Tensor[(1, 12, 8), float32], Tensor[(130), float32]) */
}

def @func_85(%var_84: Tensor[(13, 5, 2), float32]) -> Tensor[(13, 5, 2), float32] {
  %21 = fn (%var_70: Tensor[(13, 5, 2), float32]) -> Tensor[(13, 5, 2), float32] {
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %18 = shape_of(%var_70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%var_70, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    minimum(%19, %20) /* ty=Tensor[(13, 5, 2), float32] */
  };
  %21(%var_84) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_8816() -> Tensor[(12, 5, 10), float64] {
  %22 = @func_4706() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) */;
  %22.1
}

def @func_1431() -> (Tensor[(7, 9, 6), float32],) {
  %24 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %23 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
    (%23,)
  };
  %24() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_5938() -> (Tensor[(130), float32],) {
  @func_5936() /* ty=(Tensor[(130), float32],) */
}

def @func_1359(%var_1357: Tensor[(4, 12, 9), float64], %var_1358: Tensor[(4, 12, 9), float64]) -> (Tensor[(4, 12, 9), int64],) {
  %35 = fn (%var_1330: Tensor[(4, 12, 9), float64], %var_1331: Tensor[(4, 12, 9), float64]) -> (Tensor[(4, 12, 9), int64],) {
    %25 = cast(%var_1331, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
    %26 = shape_of(%var_1330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%var_1330, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %29 = divide(%27, %28) /* ty=Tensor[(4, 12, 9), float64] */;
    %30 = cast(%29, dtype="int64") /* ty=Tensor[(4, 12, 9), int64] */;
    %31 = shape_of(%var_1331, dtype="int32") /* ty=Tensor[(3), int32] */;
    %32 = cast(%var_1331, dtype="int64") /* ty=Tensor[(4, 12, 9), int64] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %34 = bitwise_xor(%32, %33) /* ty=Tensor[(4, 12, 9), int64] */;
    (%34,)
  };
  %35(%var_1357, %var_1358) /* ty=(Tensor[(4, 12, 9), int64],) */
}

def @func_190(%var_150: Tensor[(130), float32], %var_165: Tensor[(384), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) {
  %36 = cast(%var_150, dtype="float32") /* ty=Tensor[(130), float32] */;
  %37 = reshape(%36, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %38 = cast(%var_165, dtype="float64") /* ty=Tensor[(384), float64] */;
  %39 = reshape(%38, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %40 = @func_57(%39) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %41 = @func_83(%37) /* ty=Tensor[(13, 5, 2), float32] */;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %43 = reshape(%42, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %44 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %45 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %46 = %40.0;
  %47 = @func_83(%43) /* ty=Tensor[(13, 5, 2), float32] */;
  (%44, %41, %var_150, %45, %46, %var_165, %47)
}

def @func_8242(%var_8239: Tensor[(8, 15, 13), int16], %var_8240: Tensor[(8, 15, 13), int16], %var_8241: Tensor[(13, 10), float32]) -> (Tensor[(8, 15, 13), bool], Tensor[(7, 9, 6), float32], Tensor[(13, 10), float32]) {
  %57 = fn (%var_8229: Tensor[(8, 15, 13), int16], %var_8230: Tensor[(8, 15, 13), int16], %var_8235: Tensor[(13, 10), float32]) -> (Tensor[(8, 15, 13), bool], Tensor[(7, 9, 6), float32], Tensor[(13, 10), float32]) {
    %48 = cast(%var_8230, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
    %49 = shape_of(%var_8229, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_8229, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %52 = cast(%var_8235, dtype="float32") /* ty=Tensor[(13, 10), float32] */;
    %53 = reshape(%52, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %54 = @func_3554(%53) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
    %55 = greater(%50, %51) /* ty=Tensor[(8, 15, 13), bool] */;
    %56 = %54.1;
    (%55, %56, %var_8235)
  };
  %57(%var_8239, %var_8240, %var_8241) /* ty=(Tensor[(8, 15, 13), bool], Tensor[(7, 9, 6), float32], Tensor[(13, 10), float32]) */
}

def @func_6958() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1120), int64]) {
  %58 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %61 = reshape(%59, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), int64] */;
  %62 = reshape(%60, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), int64] */;
  %63 = @func_6805(%61, %62) /* ty=(Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %64 = %58.1;
  %65 = %63.2;
  (%64, %65, meta[relay.Constant][2] /* ty=Tensor[(1120), int64] */)
}

def @func_1112(%var_1106: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
  %66 = cast(%var_1106, dtype="float32") /* ty=Tensor[(130), float32] */;
  %67 = reshape(%66, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %68 = @func_398(%67) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %69 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %70 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %71 = %68.4;
  (%69, %70, %71, %var_1106)
}

def @func_2635() -> (Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) {
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 5, 10), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 5, 10), float32] */, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
  %74 = log(%72) /* ty=Tensor[(12, 5, 10), float32] */;
  %75 = asin(%73) /* ty=Tensor[(12, 5, 10), float64] */;
  %76 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%74, %75, %76)
}

def @func_6037() -> (Tensor[(7, 9, 6), int8],) {
  @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */
}

def @func_6820(%var_6814: Tensor[(9, 11, 6), bool]) -> (Tensor[(9, 11, 6), bool],) {
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 11, 6), bool] */, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %78 = shape_of(%var_6814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_6814, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = logical_and(%79, %80) /* ty=Tensor[(9, 11, 6), bool] */;
  (%81,)
}

def @func_8583() -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_8581() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_9942(%var_9933: Tensor[(60), float32]) -> (Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1, 130), float32], Tensor[(384), float64], Tensor[(130), float32], Tensor[(60), float32]) {
  %82 = @func_9391() /* ty=(Tensor[(7, 9, 6), float64],) */;
  %83 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %86 = reshape(%84, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %87 = reshape(%85, newshape=[6, 64]) /* ty=Tensor[(6, 64), float64] */;
  %88 = @func_1241(%86, %87) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) */;
  %89 = cast(%var_9933, dtype="float32") /* ty=Tensor[(60), float32] */;
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %91 = reshape(%89, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %92 = reshape(%90, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %93 = @func_2095(%91, %92) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %94 = %82.0;
  %95 = %83.0;
  %96 = %88.5;
  %97 = %93.4;
  (%94, %95, %96, meta[relay.Constant][5] /* ty=Tensor[(1, 130), float32] */, meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, %97, %var_9933)
}

def @func_2661() -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_10503() -> (Tensor[(7, 9, 6), float32],) {
  @func_10501() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_7814() -> (Tensor[(130), float32],) {
  @func_7812() /* ty=(Tensor[(130), float32],) */
}

def @func_3030() -> Tensor[(7, 9, 6), float32] {
  @func_3028() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1744() -> (Tensor[(7, 9, 6), float32],) {
  %98 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %99 = %98.3;
  (%99,)
}

def @func_3151(%var_3118: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
  %100 = cast(%var_3118, dtype="float32") /* ty=Tensor[(130), float32] */;
  %101 = reshape(%100, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %102 = @func_398(%101) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
  %103 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %104 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  %105 = %102.0;
  %106 = %103.2;
  (%104, %105, %var_3118, %106)
}

def @func_3280(%var_3278: Tensor[(14, 2, 4), bool], %var_3279: Tensor[(14, 2, 4), bool]) -> (Tensor[(14, 2, 4), float32],) {
  @func_3276(%var_3278, %var_3279) /* ty=(Tensor[(14, 2, 4), float32],) */
}

def @func_6686() -> Tensor[(7, 9, 6), float32] {
  %107 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_6294() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %107() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1694(%var_1664: Tensor[(7, 9, 6), float32], %var_1673: Tensor[(40, 22), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) {
  %108 = @func_1649() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %109 = %108.0;
  %110 = cast(%var_1664, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %114 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %115 = cast(%var_1673, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %116 = reshape(%115, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %117 = @func_510(%116) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(5, 16, 11), bool] */;
  %120 = shape_of(%var_1673, dtype="int32") /* ty=Tensor[(2), int32] */;
  %121 = cast(%var_1673, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %123 = %114.0;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %125 = reshape(%124, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %126 = @func_883(%125) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %127 = maximum(%112, %113) /* ty=Tensor[(7, 9, 6), int8] */;
  %128 = less_equal(%121, %122) /* ty=Tensor[(40, 22), bool] */;
  %129 = %126.0;
  (%127, %123, %128, %129)
}

def @func_9770(%var_9749: Tensor[(4, 220), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 6, 9), float64], Tensor[(702), float64], Tensor[(7, 9, 6), int8], Tensor[(4, 220), float64], Tensor[(7, 9, 6), float32]) {
  %130 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %131 = cast(meta[relay.Constant][7] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %132 = reshape(%131, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), float64] */;
  %133 = @func_5550(%132) /* ty=(Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) */;
  %134 = %130.2;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %136 = cast(%var_9749, dtype="float64") /* ty=Tensor[(4, 220), float64] */;
  %137 = reshape(%135, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %138 = reshape(%136, newshape=[40, 22]) /* ty=Tensor[(40, 22), float64] */;
  %139 = @func_1694(%137, %138) /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) */;
  %140 = @func_8688() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %141 = %133.0;
  %142 = %139.0;
  %143 = %140.0;
  (%134, %141, meta[relay.Constant][7] /* ty=Tensor[(702), float64] */, %142, %var_9749, %143)
}

def @func_1698(%var_1696: Tensor[(7, 9, 6), float32], %var_1697: Tensor[(40, 22), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) {
  @func_1694(%var_1696, %var_1697) /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(40, 22), bool], Tensor[(7, 9, 6), int8]) */
}

def @func_3200(%var_3198: Tensor[(880), float64]) -> (Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) {
  @func_3197(%var_3198) /* ty=(Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_110() -> Tensor[(7, 9, 6), float32] {
  @func_108() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7591() -> (Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %144 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %145 = @func_5676() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) */;
  %146 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %147 = %144.0;
  %148 = %145.4;
  %149 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %150 = %146.0;
  (%147, %148, %149, %150)
}

def @func_10194() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_10192() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_9992() -> (Tensor[(130), float32],) {
  @func_9990() /* ty=(Tensor[(130), float32],) */
}

def @func_8873() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %155 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %151 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %152 = @func_8688() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %153 = %151.2;
    %154 = %152.0;
    (%153, %154)
  };
  %155() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_6883() -> (Tensor[(7, 9, 6), float32],) {
  @func_6881() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_10085(%var_10068: Tensor[(6, 117), float32]) -> (Tensor[(6, 117), float32], Tensor[(6, 117), float64]) {
  %156 = @func_9661() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) */;
  %157 = %156.2;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %159 = sinh(%158) /* ty=Tensor[(6, 117), float32] */;
  %160 = cast(%157, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(2), int32] */;
  %162 = cast(%159, dtype="float32") /* ty=Tensor[(6, 117), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %164 = cast(%var_10068, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
  %165 = shape_of(%159, dtype="int32") /* ty=Tensor[(2), int32] */;
  %166 = cast(%159, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %168 = floor_mod(%162, %163) /* ty=Tensor[(6, 117), float32] */;
  %169 = divide(%166, %167) /* ty=Tensor[(6, 117), float64] */;
  (%168, %169)
}

def @func_3197(%var_3185: Tensor[(880), float64]) -> (Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) {
  %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 1), float64] */;
  %171 = cast(%var_3185, dtype="float64") /* ty=Tensor[(880), float64] */;
  %172 = reshape(%171, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
  %173 = @func_510(%172) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
  %174 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %175 = acosh(%170) /* ty=Tensor[(13, 2, 1), float64] */;
  %176 = %173.0;
  %177 = %174.1;
  (%175, %176, %var_3185, %177)
}

def @func_3044() -> Tensor[(1, 1, 8), float64] {
  @func_3042() /* ty=Tensor[(1, 1, 8), float64] */
}

def @func_1075() -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) {
  %185 = fn () -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) {
    %178 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
    %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 9, 6), float32] */, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
    %180 = shape_of(%178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%178, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %183 = right_shift(%181, %182) /* ty=Tensor[(7, 9, 6), int8] */;
    %184 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */
}

def @func_5740() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_8370(%var_8368: Tensor[(594), bool], %var_8369: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(9, 11, 6), bool], Tensor[(594), bool], Tensor[(13, 3, 1), float64], Tensor[(39), float32]) {
  %198 = fn (%var_8340: Tensor[(594), bool], %var_8344: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(9, 11, 6), bool], Tensor[(594), bool], Tensor[(13, 3, 1), float64], Tensor[(39), float32]) {
    %186 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %187 = cast(%var_8340, dtype="bool") /* ty=Tensor[(594), bool] */;
    %188 = reshape(%187, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), bool] */;
    %189 = @func_6820(%188) /* ty=(Tensor[(9, 11, 6), bool],) */;
    %190 = cast(%var_8344, dtype="float64") /* ty=Tensor[(39), float64] */;
    %191 = reshape(%190, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
    %192 = @func_2235(%191) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
    %193 = cast(%var_8344, dtype="float32") /* ty=Tensor[(39), float32] */;
    %194 = %186.1;
    %195 = %189.0;
    %196 = %192.0;
    %197 = sigmoid(%193) /* ty=Tensor[(39), float32] */;
    (%194, %195, %var_8340, %196, %197)
  };
  %198(%var_8368, %var_8369) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(9, 11, 6), bool], Tensor[(594), bool], Tensor[(13, 3, 1), float64], Tensor[(39), float32]) */
}

def @func_7812() -> (Tensor[(130), float32],) {
  %199 = @func_3053() /* ty=Tensor[(130), float32] */;
  (%199,)
}

def @func_1270() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_6581() -> (Tensor[(7, 9, 6), float32],) {
  %202 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %200 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_3028() -> Tensor[(7, 9, 6), float32] {
  %203 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %203.1
}

def @func_3946(%var_3944: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32],) {
  @func_3943(%var_3944) /* ty=(Tensor[(15, 6, 1), float32],) */
}

def @func_1268() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %204 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %205 = cast(meta[relay.Constant][10] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %206 = reshape(%205, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %207 = @func_1112(%206) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %208 = %204.0;
  %209 = %207.0;
  (%208, %209, meta[relay.Constant][10] /* ty=Tensor[(130), float32] */)
}

def @func_3733(%var_3714: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), int8]) {
  %210 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  %213 = sinh(%212) /* ty=Tensor[(7, 9, 6), float32] */;
  %214 = cast(%var_3714, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %218 = cast(%213, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %219 = reshape(%218, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %220 = @func_883(%219) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %221 = multiply(%216, %217) /* ty=Tensor[(7, 9, 6), int8] */;
  %222 = %220.0;
  (%221, %222)
}

def @func_2312(%var_2310: Tensor[(378), float64], %var_2311: Tensor[(384), float64]) -> (Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
  %237 = fn (%var_2279: Tensor[(378), float64], %var_2288: Tensor[(384), float64]) -> (Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
    %223 = @func_2187() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) */;
    %224 = cast(%var_2279, dtype="float64") /* ty=Tensor[(378), float64] */;
    %225 = reshape(%224, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
    %226 = @func_883(%225) /* ty=(Tensor[(7, 9, 6), int8],) */;
    %227 = %223.0;
    %228 = cast(%227, dtype="float32") /* ty=Tensor[(130), float32] */;
    %229 = cast(%var_2288, dtype="float64") /* ty=Tensor[(384), float64] */;
    %230 = reshape(%228, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %231 = reshape(%229, newshape=[6, 64]) /* ty=Tensor[(6, 64), float64] */;
    %232 = @func_1241(%230, %231) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) */;
    %233 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
    %234 = %226.0;
    %235 = %232.5;
    %236 = %233.3;
    (%227, %234, %var_2279, %235, %var_2288, %236)
  };
  %237(%var_2310, %var_2311) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_2491() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %246 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
    %238 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %239 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %240 = cast(meta[relay.Constant][11] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %241 = reshape(%240, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %242 = @func_398(%241) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
    %243 = %238.0;
    %244 = %239.0;
    %245 = %242.0;
    (%243, %244, %245, meta[relay.Constant][11] /* ty=Tensor[(130), float32] */)
  };
  %246() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_3509(%var_3506: Tensor[(880), float64], %var_3507: Tensor[(7, 9, 6), float32], %var_3508: Tensor[(1, 384), float64]) -> (Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) {
  %265 = fn (%var_3470: Tensor[(880), float64], %var_3490: Tensor[(7, 9, 6), float32], %var_3498: Tensor[(1, 384), float64]) -> (Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) {
    %247 = cast(%var_3470, dtype="float64") /* ty=Tensor[(880), float64] */;
    %248 = reshape(%247, newshape=[880]) /* ty=Tensor[(880), float64] */;
    %249 = @func_3197(%248) /* ty=(Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) */;
    %250 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %251 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
    %252 = cast(%var_3490, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
    %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(%251, dtype="bool") /* ty=Tensor[(7, 9, 6), bool] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %256 = not_equal(%254, %255) /* ty=Tensor[(7, 9, 6), bool] */;
    %257 = cast(%256, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
    %258 = cast(%var_3498, dtype="float64") /* ty=Tensor[(1, 384), float64] */;
    %259 = reshape(%257, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %260 = reshape(%258, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %261 = @func_2309(%259, %260) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
    %262 = %249.2;
    %263 = %250.0;
    %264 = %261.3;
    (%262, %var_3470, %263, %256, %264, %var_3498)
  };
  %265(%var_3506, %var_3507, %var_3508) /* ty=(Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) */
}

def @func_1834() -> (Tensor[(7, 9, 6), float32],) {
  @func_1832() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_9536() -> (Tensor[(7, 9, 6), float32], Tensor[(130), float64]) {
  @func_9534() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float64]) */
}

def @func_6881() -> (Tensor[(7, 9, 6), float32],) {
  %266 = @func_6222() /* ty=Tensor[(7, 9, 6), float32] */;
  (%266,)
}

def @func_9039(%var_9037: Tensor[(616), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(11, 8, 7), int16], Tensor[(616), float32], Tensor[(432), float64], Tensor[(60), float32], Tensor[(130), float32]) {
  @func_9036(%var_9037) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(11, 8, 7), int16], Tensor[(616), float32], Tensor[(432), float64], Tensor[(60), float32], Tensor[(130), float32]) */
}

def @func_1970() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %271 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %267 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %268 = @func_1472() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %269 = %267.0;
    %270 = %268.3;
    (%269, %270)
  };
  %271() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_3557(%var_3555: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  @func_3554(%var_3555) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_6490() -> Tensor[(7, 9, 6), float32] {
  @func_6488() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7839() -> (Tensor[(7, 9, 6), float32],) {
  @func_7837() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_59(%var_58: Tensor[(16, 3, 8), float64]) -> (Tensor[(16, 3, 8), float64],) {
  %274 = fn (%var_36: Tensor[(16, 3, 8), float64]) -> (Tensor[(16, 3, 8), float64],) {
    %272 = cast(%var_36, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
    %273 = exp(%272) /* ty=Tensor[(16, 3, 8), float64] */;
    (%273,)
  };
  %274(%var_58) /* ty=(Tensor[(16, 3, 8), float64],) */
}

def @func_398(%var_340: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) {
  %275 = cast(%var_340, dtype="float32") /* ty=Tensor[(130), float32] */;
  %276 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 64), float64] */, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %277 = reshape(%275, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %278 = reshape(%276, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %279 = @func_190(%277, %278) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %280 = %279.5;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(384), float64] */;
  %282 = reshape(%281, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %283 = @func_57(%282) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %284 = %283.0;
  %285 = cast(%280, dtype="int32") /* ty=Tensor[(384), int32] */;
  %286 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 64), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %287 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 64), float64] */, dtype="int32") /* ty=Tensor[(6, 64), int32] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %289 = bitwise_xor(%287, %288) /* ty=Tensor[(6, 64), int32] */;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %291 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%284, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 64), float64] */, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %295 = asin(%294) /* ty=Tensor[(6, 64), float32] */;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %297 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %298 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %299 = divide(%292, %293) /* ty=Tensor[(16, 3, 8), float64] */;
  %300 = acos(%296) /* ty=Tensor[(6, 64), float32] */;
  (%297, %var_340, %298, %299, %300)
}

def @func_10454() -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %305 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
    %301 = @func_4860() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %302 = @func_6419() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
    %303 = %301.0;
    %304 = %302.2;
    (%303, %304)
  };
  %305() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_10584(%var_10581: Tensor[(16, 11, 11), uint32], %var_10582: Tensor[(16, 11, 11), uint32], %var_10583: Tensor[(39, 1), float64]) -> (Tensor[(16, 11, 11), bool], Tensor[(13, 3, ?), float32], Tensor[(39, 1), float64]) {
  %315 = fn (%var_10559: Tensor[(16, 11, 11), uint32], %var_10560: Tensor[(16, 11, 11), uint32], %var_10572: Tensor[(39, 1), float64]) -> (Tensor[(16, 11, 11), bool], Tensor[(13, 3, ?), float32], Tensor[(39, 1), float64]) {
    %306 = cast(%var_10560, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
    %307 = shape_of(%var_10559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%var_10559, dtype="bool") /* ty=Tensor[(16, 11, 11), bool] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %310 = cast(%var_10572, dtype="float64") /* ty=Tensor[(39, 1), float64] */;
    %311 = reshape(%310, newshape=[39]) /* ty=Tensor[(39), float64] */;
    %312 = @func_2998(%311) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %313 = equal(%308, %309) /* ty=Tensor[(16, 11, 11), bool] */;
    %314 = %312.1;
    (%313, %314, %var_10572)
  };
  %315(%var_10581, %var_10582, %var_10583) /* ty=(Tensor[(16, 11, 11), bool], Tensor[(13, 3, ?), float32], Tensor[(39, 1), float64]) */
}

def @func_10544() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %316 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %317 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %318 = %316.0;
  %319 = %317.2;
  (%318, %319)
}

def @func_1140() -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
  %325 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
    %320 = cast(meta[relay.Constant][13] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %321 = reshape(%320, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %322 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
    %323 = @func_83(%321) /* ty=Tensor[(13, 5, 2), float32] */;
    %324 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
    (%322, %323, meta[relay.Constant][13] /* ty=Tensor[(130), float32] */, %324)
  };
  %325() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_2998(%var_2984: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %326 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %327 = cast(%var_2984, dtype="float64") /* ty=Tensor[(39), float64] */;
  %328 = reshape(%327, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %329 = @func_2235(%328) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %330 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %331 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %332 = %326.1;
  %333 = %329.2;
  %334 = %330.1;
  %335 = %331.1;
  (%332, %333, %var_2984, %334, %335)
}

def @func_9720(%var_9713: Tensor[(546), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 13, 14), uint16], Tensor[(546), float64]) {
  %336 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %337 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %338 = cast(%var_9713, dtype="float64") /* ty=Tensor[(546), float64] */;
  %339 = reshape(%338, newshape=[3, 13, 14]) /* ty=Tensor[(3, 13, 14), float64] */;
  %340 = @func_4214(%339) /* ty=(Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) */;
  %341 = %336.0;
  %342 = %337.3;
  %343 = %340.0;
  (%341, %342, %343, %var_9713)
}

def @func_5992() -> Tensor[(7, 9, 6), int32] {
  %344 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %344.0
}

def @func_6488() -> Tensor[(7, 9, 6), float32] {
  %345 = @func_3459() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %345.0
}

def @func_194(%var_192: Tensor[(130), float32], %var_193: Tensor[(384), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) {
  @func_190(%var_192, %var_193) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */
}

def @func_401(%var_399: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) {
  @func_398(%var_399) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */
}

def @func_9144(%var_9101: Tensor[(8, 4, 5), uint32], %var_9102: Tensor[(8, 4, 5), uint32]) -> (Tensor[(8, 4, 5), int64], Tensor[(7, 9, 6), float32], Tensor[(8, 4, 5), bool]) {
  %346 = cast(%var_9102, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %347 = shape_of(%var_9101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_9101, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = not_equal(%348, %349) /* ty=Tensor[(8, 4, 5), bool] */;
  %351 = cast(%350, dtype="int64") /* ty=Tensor[(8, 4, 5), int64] */;
  %352 = shape_of(%var_9101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_9101, dtype="int64") /* ty=Tensor[(8, 4, 5), int64] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %355 = @func_8263() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
  %356 = cast(%var_9101, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %357 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%350, dtype="bool") /* ty=Tensor[(8, 4, 5), bool] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %360 = bitwise_and(%353, %354) /* ty=Tensor[(8, 4, 5), int64] */;
  %361 = %355.0;
  %362 = less(%358, %359) /* ty=Tensor[(8, 4, 5), bool] */;
  (%360, %361, %362)
}

def @func_10729() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %365 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %363 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
    %364 = @func_5197() /* ty=Tensor[(7, 9, 6), float32] */;
    (%363, %364)
  };
  %365() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_2637() -> (Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) {
  @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_6471(%var_6470: Tensor[(96, 4), float64]) -> (Tensor[(96, 4), bool], Tensor[(7, 9, 6), int16], Tensor[(378, 1), float32], Tensor[(96, 4), float64]) {
  %379 = fn (%var_6435: Tensor[(96, 4), float64]) -> (Tensor[(96, 4), bool], Tensor[(7, 9, 6), int16], Tensor[(378, 1), float32], Tensor[(96, 4), float64]) {
    %366 = @func_2187() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) */;
    %367 = %366.3;
    %368 = cast(%var_6435, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
    %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(2), int32] */;
    %370 = cast(%367, dtype="bool") /* ty=Tensor[(96, 4), bool] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %372 = cast(meta[relay.Constant][14] /* ty=Tensor[(378, 1), float32] */, dtype="float32") /* ty=Tensor[(378, 1), float32] */;
    %373 = reshape(%372, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
    %374 = @func_4799(%373) /* ty=(Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) */;
    %375 = cast(%var_6435, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %376 = logical_or(%370, %371) /* ty=Tensor[(96, 4), bool] */;
    %377 = %374.0;
    %378 = asinh(%375) /* ty=Tensor[(96, 4), float64] */;
    (%376, %377, meta[relay.Constant][14] /* ty=Tensor[(378, 1), float32] */, %378)
  };
  %379(%var_6470) /* ty=(Tensor[(96, 4), bool], Tensor[(7, 9, 6), int16], Tensor[(378, 1), float32], Tensor[(96, 4), float64]) */
}

def @func_1650() -> (Tensor[(7, 9, 6), float32],) {
  %381 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %380 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
    (%380,)
  };
  %381() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_6022() -> (Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) {
  @func_6020() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) */
}

def @func_9391() -> (Tensor[(7, 9, 6), float64],) {
  %382 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %383 = %382.1;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %385 = sin(%384) /* ty=Tensor[(7, 9, 6), float64] */;
  (%385,)
}

def @func_2888() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) {
  %394 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) {
    %386 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %387 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %388 = cast(meta[relay.Constant][15] /* ty=Tensor[(39), float64] */, dtype="float64") /* ty=Tensor[(39), float64] */;
    %389 = reshape(%388, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
    %390 = @func_2235(%389) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
    %391 = %386.0;
    %392 = %387.0;
    %393 = %390.1;
    (%391, %392, %393, meta[relay.Constant][15] /* ty=Tensor[(39), float64] */)
  };
  %394() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) */
}

def @func_4314(%var_4261: Tensor[(1, 6, 9), float64], %var_4262: Tensor[(10, 6, 9), float64], %var_4278: Tensor[(880), float64], %var_4280: Tensor[(384), float64]) -> (Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) {
  %395 = cast(%var_4261, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
  %396 = cast(%var_4262, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %397 = floor_divide(%395, %396) /* ty=Tensor[(10, 6, 9), float64] */;
  %398 = cast(%var_4262, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %402 = cast(%var_4278, dtype="float64") /* ty=Tensor[(880), float64] */;
  %403 = cast(meta[relay.Constant][16] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %404 = cast(%var_4280, dtype="float64") /* ty=Tensor[(384), float64] */;
  %405 = reshape(%402, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %406 = reshape(%403, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %407 = reshape(%404, newshape=[1, 384]) /* ty=Tensor[(1, 384), float64] */;
  %408 = @func_3505(%405, %406, %407) /* ty=(Tensor[(880), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), bool], Tensor[(7, 9, 6), float32], Tensor[(1, 384), float64]) */;
  %409 = %408.4;
  %410 = cast(%409, dtype="uint32") /* ty=Tensor[(7, 9, 6), uint32] */;
  %411 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(378), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %412 = cast(meta[relay.Constant][16] /* ty=Tensor[(378), float32] */, dtype="uint32") /* ty=Tensor[(378), uint32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %414 = floor_mod(%400, %401) /* ty=Tensor[(10, 6, 9), float64] */;
  %415 = logical_xor(%412, %413) /* ty=Tensor[(378), uint32] */;
  (%414, %var_4278, %var_4280, %415)
}

def @func_4217(%var_4215: Tensor[(3, 13, 14), float64]) -> (Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) {
  @func_4214(%var_4215) /* ty=(Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) */
}

def @func_7368(%var_7314: Tensor[(11, 8, 7), float32], %var_7315: Tensor[(11, 8, 7), float32]) -> Tensor[(11, 8, 7), int16] {
  %416 = cast(%var_7315, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
  %417 = shape_of(%var_7314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%var_7314, dtype="float32") /* ty=Tensor[(11, 8, 7), float32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %420 = power(%418, %419) /* ty=Tensor[(11, 8, 7), float32] */;
  %421 = cast(%var_7314, dtype="int16") /* ty=Tensor[(11, 8, 7), int16] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="int16") /* ty=Tensor[(11, 8, 7), int16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%423, %424) /* ty=Tensor[(11, 8, 7), int16] */
}

def @func_571() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %425 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %426 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  (%425, %426)
}

def @func_10471() -> (Tensor[(7, 9, 6), float32],) {
  @func_10469() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_1731() -> Tensor[(7, 9, 6), float32] {
  @func_1729() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7014(%var_7013: Tensor[(702), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) {
  %433 = fn (%var_7007: Tensor[(702), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) {
    %427 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %428 = cast(%var_7007, dtype="float64") /* ty=Tensor[(702), float64] */;
    %429 = reshape(%428, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), float64] */;
    %430 = @func_5550(%429) /* ty=(Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) */;
    %431 = %427.0;
    %432 = %430.2;
    (%431, %432, %var_7007)
  };
  %433(%var_7013) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) */
}

def @func_7282() -> Tensor[(7, 9, 6), float32] {
  %434 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %434.0
}

def @func_4568(%var_4551: Tensor[(3, 20), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) {
  %435 = cast(%var_4551, dtype="float32") /* ty=Tensor[(3, 20), float32] */;
  %436 = cast(meta[relay.Constant][17] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %437 = reshape(%435, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %438 = reshape(%436, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %439 = @func_2095(%437, %438) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %440 = cast(meta[relay.Constant][18] /* ty=Tensor[(504), int64] */, dtype="int64") /* ty=Tensor[(504), int64] */;
  %441 = reshape(%440, newshape=[4, 9, 14]) /* ty=Tensor[(4, 9, 14), int64] */;
  %442 = @func_3330(%441) /* ty=(Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) */;
  %443 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  %444 = %439.2;
  %445 = %442.1;
  (%443, %444, %var_4551, meta[relay.Constant][17] /* ty=Tensor[(130), float32] */, %445, meta[relay.Constant][18] /* ty=Tensor[(504), int64] */)
}

def @func_9442() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) {
  @func_9440() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) */
}

def @func_4150() -> (Tensor[(7, 9, 6), float32],) {
  @func_4148() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_5676() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) {
  %446 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %447 = cast(meta[relay.Constant][19] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %448 = reshape(%447, newshape=[3, 20]) /* ty=Tensor[(3, 20), float32] */;
  %449 = @func_4568(%448) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) */;
  %450 = cast(meta[relay.Constant][20] /* ty=Tensor[(45, 2), float32] */, dtype="float32") /* ty=Tensor[(45, 2), float32] */;
  %451 = reshape(%450, newshape=[15, 6, 1]) /* ty=Tensor[(15, 6, 1), float32] */;
  %452 = @func_3943(%451) /* ty=(Tensor[(15, 6, 1), float32],) */;
  %453 = cast(meta[relay.Constant][21] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %454 = reshape(%453, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %455 = @func_3151(%454) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %456 = %455.2;
  %457 = cast(meta[relay.Constant][21] /* ty=Tensor[(130), float32] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(1), int32] */;
  %459 = cast(%456, dtype="float64") /* ty=Tensor[(130), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?), float64] */;
  %461 = power(%459, %460) /* ty=Tensor[(130), float64] */;
  %462 = cast(%461, dtype="float32") /* ty=Tensor[(130), float32] */;
  %463 = %446.1;
  %464 = %449.4;
  %465 = %452.0;
  %466 = acosh(%462) /* ty=Tensor[(130), float32] */;
  (%463, %464, meta[relay.Constant][19] /* ty=Tensor[(60), float32] */, %465, meta[relay.Constant][20] /* ty=Tensor[(45, 2), float32] */, %466)
}

def @func_9534() -> (Tensor[(7, 9, 6), float32], Tensor[(130), float64]) {
  %467 = @func_7766() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %468 = @func_5936() /* ty=(Tensor[(130), float32],) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(130), float64] */;
  %471 = %467.0;
  %472 = atan(%470) /* ty=Tensor[(130), float64] */;
  (%471, %472)
}

def @func_8471() -> Tensor[(7, 9, 6), float32] {
  %474 = fn () -> Tensor[(7, 9, 6), float32] {
    %473 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %473.1
  };
  %474() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_9148(%var_9146: Tensor[(8, 4, 5), uint32], %var_9147: Tensor[(8, 4, 5), uint32]) -> (Tensor[(8, 4, 5), int64], Tensor[(7, 9, 6), float32], Tensor[(8, 4, 5), bool]) {
  @func_9144(%var_9146, %var_9147) /* ty=(Tensor[(8, 4, 5), int64], Tensor[(7, 9, 6), float32], Tensor[(8, 4, 5), bool]) */
}

def @func_108() -> Tensor[(7, 9, 6), float32] {
  %475 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 9, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
  tan(%475) /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7703(%var_7702: Tensor[(880), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
  %487 = fn (%var_7691: Tensor[(880), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
    %476 = @func_7591() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %477 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %478 = @func_5936() /* ty=(Tensor[(130), float32],) */;
    %479 = cast(%var_7691, dtype="float32") /* ty=Tensor[(880), float32] */;
    %480 = cast(%var_7691, dtype="float32") /* ty=Tensor[(880), float32] */;
    %481 = reshape(%479, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
    %482 = reshape(%480, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), float32] */;
    %483 = %476.0;
    %484 = %477.1;
    %485 = %478.0;
    %486 = @func_6756(%481, %482) /* ty=Tensor[(11, 10, 8), float32] */;
    (%483, %484, %485, %486, %var_7691)
  };
  %487(%var_7702) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */
}

def @func_3829() -> (Tensor[(7, 9, 6), float32],) {
  %489 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %488 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
    (%488,)
  };
  %489() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_10369(%var_10363: Tensor[(2, 1, 9), uint64], %var_10364: Tensor[(2, 1, 9), uint64]) -> Tensor[(2, ?, 9), bool] {
  %490 = cast(%var_10364, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %491 = shape_of(%var_10363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_10363, dtype="bool") /* ty=Tensor[(2, 1, 9), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%492, %493) /* ty=Tensor[(2, ?, 9), bool] */
}

def @func_3332(%var_3331: Tensor[(4, 9, 14), int64]) -> (Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) {
  %501 = fn (%var_3316: Tensor[(4, 9, 14), int64]) -> (Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) {
    %494 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 9, 14), int64] */, dtype="int64") /* ty=Tensor[(4, 9, 14), int64] */;
    %495 = shape_of(%var_3316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %496 = cast(%var_3316, dtype="int64") /* ty=Tensor[(4, 9, 14), int64] */;
    %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %498 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %499 = bitwise_xor(%496, %497) /* ty=Tensor[(4, 9, 14), int64] */;
    %500 = %498.0;
    (%499, %500)
  };
  %501(%var_3331) /* ty=(Tensor[(4, 9, 14), int64], Tensor[(7, 9, 6), float32]) */
}

def @func_10220(%var_10219: Tensor[(6, 6, 10), float64]) -> Tensor[(6, 6, 10), float64] {
  %503 = fn (%var_10204: Tensor[(6, 6, 10), float64]) -> Tensor[(6, 6, 10), float64] {
    %502 = cast(%var_10204, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
    rsqrt(%502) /* ty=Tensor[(6, 6, 10), float64] */
  };
  %503(%var_10219) /* ty=Tensor[(6, 6, 10), float64] */
}

def @func_1472() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %504 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %505 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %506 = %505.0;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %508 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %509 = %504.0;
  %510 = log2(%507) /* ty=Tensor[(7, 9, 6), float64] */;
  %511 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
  %512 = %508.1;
  (%509, %510, %511, %512)
}

def @func_3276(%var_3242: Tensor[(14, 2, 4), bool], %var_3243: Tensor[(14, 2, 4), bool]) -> (Tensor[(14, 2, 4), float32],) {
  %513 = cast(%var_3243, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %514 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_3242, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = logical_and(%515, %516) /* ty=Tensor[(14, 2, 4), bool] */;
  %518 = cast(%517, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %519 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%var_3242, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %522 = bitwise_and(%520, %521) /* ty=Tensor[(14, 2, 4), int32] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(14, 2, 4), float32] */;
  %524 = sigmoid(%523) /* ty=Tensor[(14, 2, 4), float32] */;
  (%524,)
}

def @func_6823(%var_6821: Tensor[(9, 11, 6), bool]) -> (Tensor[(9, 11, 6), bool],) {
  @func_6820(%var_6821) /* ty=(Tensor[(9, 11, 6), bool],) */
}

def @func_1593() -> (Tensor[(7, 9, 6), float32],) {
  %526 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %525 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
    (%525,)
  };
  %526() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_5936() -> (Tensor[(130), float32],) {
  %527 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
  %528 = %527.0;
  (%528,)
}

def @func_7488() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) {
  %537 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) {
    %529 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %530 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
    %531 = cast(meta[relay.Constant][24] /* ty=Tensor[(880), float64] */, dtype="float64") /* ty=Tensor[(880), float64] */;
    %532 = reshape(%531, newshape=[40, 22]) /* ty=Tensor[(40, 22), float64] */;
    %533 = @func_6509(%532) /* ty=(Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) */;
    %534 = %529.1;
    %535 = %530.0;
    %536 = %533.3;
    (%534, %535, %536, meta[relay.Constant][24] /* ty=Tensor[(880), float64] */)
  };
  %537() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */
}

def @func_2400() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %541 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %538 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
    %539 = %538.1;
    %540 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_10088(%var_10086: Tensor[(6, 117), float32]) -> (Tensor[(6, 117), float32], Tensor[(6, 117), float64]) {
  @func_10085(%var_10086) /* ty=(Tensor[(6, 117), float32], Tensor[(6, 117), float64]) */
}

def @func_6223() -> Tensor[(7, 9, 6), float32] {
  %542 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_3028() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %542() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_4320(%var_4316: Tensor[(1, 6, 9), float64], %var_4317: Tensor[(10, 6, 9), float64], %var_4318: Tensor[(880), float64], %var_4319: Tensor[(384), float64]) -> (Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) {
  @func_4314(%var_4316, %var_4317, %var_4318, %var_4319) /* ty=(Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) */
}

def @func_8031() -> Tensor[(7, 9, 6), int32] {
  %544 = fn () -> Tensor[(7, 9, 6), int32] {
    %543 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
    %543.0
  };
  %544() /* ty=Tensor[(7, 9, 6), int32] */
}

def @func_9874() -> (Tensor[(7, 9, 6), int8],) {
  %547 = fn () -> (Tensor[(7, 9, 6), int8],) {
    %545 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(7, 9, 6), int8],) */
}

def @func_4148() -> (Tensor[(7, 9, 6), float32],) {
  %548 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  (%548,)
}

def @func_2099(%var_2097: Tensor[(1, 10, 6), float32], %var_2098: Tensor[(130), float32]) -> (Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) {
  @func_2095(%var_2097, %var_2098) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */
}

def @func_4381() -> Tensor[(12, 5, 10), float32] {
  @func_4379() /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_5198() -> Tensor[(7, 9, 6), float32] {
  %550 = fn () -> Tensor[(7, 9, 6), float32] {
    %549 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %549.1
  };
  %550() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1474() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_1472() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_9409(%var_9408: Tensor[(130), float32]) -> (Tensor[(130), float32],) {
  %558 = fn (%var_9398: Tensor[(130), float32]) -> (Tensor[(130), float32],) {
    %551 = @func_5936() /* ty=(Tensor[(130), float32],) */;
    %552 = %551.0;
    %553 = cast(%var_9398, dtype="float32") /* ty=Tensor[(130), float32] */;
    %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(1), int32] */;
    %555 = cast(%552, dtype="float32") /* ty=Tensor[(130), float32] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?), float32] */;
    %557 = floor_mod(%555, %556) /* ty=Tensor[(130), float32] */;
    (%557,)
  };
  %558(%var_9408) /* ty=(Tensor[(130), float32],) */
}

def @func_5110() -> Tensor[(7, 9, 6), float32] {
  @func_5108() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1241(%var_1151: Tensor[(130), float32], %var_1223: Tensor[(6, 64), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) {
  %559 = cast(%var_1151, dtype="float32") /* ty=Tensor[(130), float32] */;
  %560 = reshape(%559, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %561 = @func_1112(%560) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %562 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %563 = cast(%var_1151, dtype="float32") /* ty=Tensor[(130), float32] */;
  %564 = cast(%var_1223, dtype="float64") /* ty=Tensor[(6, 64), float64] */;
  %565 = reshape(%563, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %566 = reshape(%564, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %567 = @func_190(%565, %566) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %568 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %569 = %561.1;
  %570 = %562.0;
  %571 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %572 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %573 = %567.3;
  (%568, %569, %var_1151, %570, %571, %572, %573, %var_1223)
}

def @func_9662() -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) {
  %579 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) {
    %574 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 117), float64] */, dtype="float64") /* ty=Tensor[(6, 117), float64] */;
    %575 = reshape(%574, newshape=[702]) /* ty=Tensor[(702), float64] */;
    %576 = @func_7012(%575) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(702), float64]) */;
    %577 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
    %578 = %576.1;
    (%577, %578, meta[relay.Constant][25] /* ty=Tensor[(6, 117), float64] */)
  };
  %579() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(378), float32], Tensor[(6, 117), float64]) */
}

def @func_3154(%var_3152: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) {
  @func_3151(%var_3152) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_3943(%var_3928: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32],) {
  %580 = cast(%var_3928, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %581 = log2(%580) /* ty=Tensor[(15, 6, 1), float32] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %583 = atan(%582) /* ty=Tensor[(15, 6, 1), float32] */;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %585 = atanh(%584) /* ty=Tensor[(15, 6, 1), float32] */;
  (%585,)
}

def @func_10311(%var_10309: Tensor[(12, 13), float32], %var_10310: Tensor[(384), float64]) -> (Tensor[(12, 13), float32], Tensor[(7, 9, 6), float32], Tensor[(378), float64], Tensor[(384), float64]) {
  %594 = fn (%var_10292: Tensor[(12, 13), float32], %var_10306: Tensor[(384), float64]) -> (Tensor[(12, 13), float32], Tensor[(7, 9, 6), float32], Tensor[(378), float64], Tensor[(384), float64]) {
    %586 = cast(%var_10292, dtype="float32") /* ty=Tensor[(12, 13), float32] */;
    %587 = cast(meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %588 = cast(%var_10306, dtype="float64") /* ty=Tensor[(384), float64] */;
    %589 = reshape(%587, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %590 = reshape(%588, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %591 = @func_2309(%589, %590) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
    %592 = sigmoid(%586) /* ty=Tensor[(12, 13), float32] */;
    %593 = %591.3;
    (%592, %593, meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, %var_10306)
  };
  %594(%var_10309, %var_10310) /* ty=(Tensor[(12, 13), float32], Tensor[(7, 9, 6), float32], Tensor[(378), float64], Tensor[(384), float64]) */
}

def @func_7284() -> Tensor[(7, 9, 6), float32] {
  @func_7282() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7061() -> (Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 11, 3), float64], Tensor[(16, 3, 8), float64]) {
  %607 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 11, 3), float64], Tensor[(16, 3, 8), float64]) {
    %595 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %596 = %595.0;
    %597 = cast(%596, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
    %598 = cast(meta[relay.Constant][27] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %599 = reshape(%597, newshape=[378]) /* ty=Tensor[(378), float64] */;
    %600 = reshape(%598, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %601 = @func_2309(%599, %600) /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(378), float64], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */;
    %602 = @func_5428() /* ty=(Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) */;
    %603 = @func_6020() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) */;
    %604 = %601.4;
    %605 = %602.0;
    %606 = %603.1;
    (%596, %604, meta[relay.Constant][27] /* ty=Tensor[(384), float64] */, %605, %606)
  };
  %607() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 11, 3), float64], Tensor[(16, 3, 8), float64]) */
}

def @func_3905() -> Tensor[(7, 9, 6), float32] {
  %609 = fn () -> Tensor[(7, 9, 6), float32] {
    %608 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %608.0
  };
  %609() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_6600(%var_6599: Tensor[(13, 2, 8), uint32]) -> Tensor[(13, 2, 8), bool] {
  %614 = fn (%var_6590: Tensor[(13, 2, 8), uint32]) -> Tensor[(13, 2, 8), bool] {
    %610 = cast(%var_6590, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
    %611 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 2, 8), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 2, 8), uint32] */, dtype="bool") /* ty=Tensor[(13, 2, 8), bool] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%612, %613) /* ty=Tensor[(13, 2, 8), bool] */
  };
  %614(%var_6599) /* ty=Tensor[(13, 2, 8), bool] */
}

def @func_2237(%var_2236: Tensor[(13, 3, 1), float64]) -> (Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) {
  %631 = fn (%var_2209: Tensor[(13, 3, 1), float64]) -> (Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) {
    %615 = cast(%var_2209, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
    %616 = log10(%615) /* ty=Tensor[(13, 3, 1), float64] */;
    %617 = cast(%616, dtype="float64") /* ty=Tensor[(13, 3, 1), float64] */;
    %618 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
    %619 = cast(%var_2209, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
    %620 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%616, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %623 = floor_mod(%621, %622) /* ty=Tensor[(13, 3, ?), float32] */;
    %624 = cast(%var_2209, dtype="float32") /* ty=Tensor[(13, 3, 1), float32] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="float32") /* ty=Tensor[(13, 3, ?), float32] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %628 = log2(%617) /* ty=Tensor[(13, 3, 1), float64] */;
    %629 = %618.0;
    %630 = floor_divide(%626, %627) /* ty=Tensor[(13, 3, ?), float32] */;
    (%628, %629, %630)
  };
  %631(%var_2236) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */
}

def @func_6020() -> (Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64]) {
  %632 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %633 = cast(meta[relay.Constant][29] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %634 = reshape(%633, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float64] */;
  %635 = @func_57(%634) /* ty=(Tensor[(16, 3, 8), float64],) */;
  %636 = %632.0;
  %637 = %635.0;
  (%636, %637, meta[relay.Constant][29] /* ty=Tensor[(384), float64] */)
}

def @func_1909() -> (Tensor[(7, 9, 6), int32],) {
  %646 = fn () -> (Tensor[(7, 9, 6), int32],) {
    %638 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
    %639 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %640 = %639.1;
    %641 = cast(%640, dtype="int32") /* ty=Tensor[(7, 9, 6), int32] */;
    %642 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%638, dtype="int32") /* ty=Tensor[(7, 9, 6), int32] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %645 = bitwise_or(%643, %644) /* ty=Tensor[(7, 9, 6), int32] */;
    (%645,)
  };
  %646() /* ty=(Tensor[(7, 9, 6), int32],) */
}

def @func_2534() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %653 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %647 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
    %648 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %649 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %650 = %647.0;
    %651 = %648.0;
    %652 = %649.0;
    (%650, %651, %652)
  };
  %653() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_5429() -> (Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) {
  %662 = fn () -> (Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) {
    %654 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
    %655 = log2(%654) /* ty=Tensor[(15, 11, 3), float64] */;
    %656 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 11, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
    %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
    %658 = cast(%655, dtype="float64") /* ty=Tensor[(15, 11, 3), float64] */;
    %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %660 = mod(%658, %659) /* ty=Tensor[(15, 11, 3), float64] */;
    %661 = @func_4379() /* ty=Tensor[(12, 5, 10), float32] */;
    (%660, %661)
  };
  %662() /* ty=(Tensor[(15, 11, 3), float64], Tensor[(12, 5, 10), float32]) */
}

def @func_5015(%var_5013: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) {
  @func_5012(%var_5013) /* ty=(Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) */
}

def @func_8264() -> (Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
  %668 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) {
    %663 = cast(meta[relay.Constant][31] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %664 = reshape(%663, newshape=[880]) /* ty=Tensor[(880), float32] */;
    %665 = @func_7701(%664) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
    %666 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
    %667 = %665.3;
    (%666, %667, meta[relay.Constant][31] /* ty=Tensor[(880), float32] */)
  };
  %668() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */
}

def @func_9274() -> (Tensor[(7, 9, 6), float32],) {
  %669 = @func_8661() /* ty=Tensor[(7, 9, 6), float32] */;
  (%669,)
}

def @func_6808(%var_6806: Tensor[(14, 5, 16), int64], %var_6807: Tensor[(14, 5, 16), int64]) -> (Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %677 = fn (%var_6769: Tensor[(14, 5, 16), int64], %var_6770: Tensor[(14, 5, 16), int64]) -> (Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %670 = cast(%var_6770, dtype="int64") /* ty=Tensor[(14, 5, 16), int64] */;
    %671 = shape_of(%var_6769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %672 = cast(%var_6769, dtype="int64") /* ty=Tensor[(14, 5, 16), int64] */;
    %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %674 = minimum(%672, %673) /* ty=Tensor[(14, 5, 16), int64] */;
    %675 = @func_6222() /* ty=Tensor[(7, 9, 6), float32] */;
    %676 = @func_108() /* ty=Tensor[(7, 9, 6), float32] */;
    (%674, %675, %676)
  };
  %677(%var_6806, %var_6807) /* ty=(Tensor[(14, 5, 16), int64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_9723(%var_9721: Tensor[(546), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 13, 14), uint16], Tensor[(546), float64]) {
  @func_9720(%var_9721) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 13, 14), uint16], Tensor[(546), float64]) */
}

def @func_9227() -> Tensor[(7, 9, 6), float32] {
  @func_9225() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_6759(%var_6757: Tensor[(11, 10, 8), float32], %var_6758: Tensor[(11, 10, 8), float32]) -> Tensor[(11, 10, 8), float32] {
  %682 = fn (%var_6738: Tensor[(11, 10, 8), float32], %var_6739: Tensor[(11, 10, 8), float32]) -> Tensor[(11, 10, 8), float32] {
    %678 = cast(%var_6739, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
    %679 = shape_of(%var_6738, dtype="int32") /* ty=Tensor[(3), int32] */;
    %680 = cast(%var_6738, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%680, %681) /* ty=Tensor[(11, 10, 8), float32] */
  };
  %682(%var_6757, %var_6758) /* ty=Tensor[(11, 10, 8), float32] */
}

def @func_547() -> Tensor[(7, 9, 6), float32] {
  %683 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_108() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %683() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_8300() -> Tensor[(7, 9, 6), float32] {
  %684 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_5197() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %684() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_5012(%var_4988: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) {
  %685 = cast(%var_4988, dtype="float64") /* ty=Tensor[(39), float64] */;
  %686 = reshape(%685, newshape=[13, 3, 1]) /* ty=Tensor[(13, 3, 1), float64] */;
  %687 = @func_2235(%686) /* ty=(Tensor[(13, 3, 1), float64], Tensor[(7, 9, 6), int32], Tensor[(13, 3, ?), float32]) */;
  %688 = @func_3053() /* ty=Tensor[(130), float32] */;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(130), float32] */;
  %690 = %687.1;
  %691 = acos(%689) /* ty=Tensor[(130), float32] */;
  (%690, %var_4988, %691)
}

def @func_510(%var_500: Tensor[(5, 16, 11), float64]) -> (Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) {
  %692 = cast(%var_500, dtype="float64") /* ty=Tensor[(5, 16, 11), float64] */;
  %693 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 16, 11), float64] */, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %694 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_500, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %697 = sigmoid(%692) /* ty=Tensor[(5, 16, 11), float64] */;
  %698 = floor_divide(%695, %696) /* ty=Tensor[(5, 16, 11), float32] */;
  (%697, %698)
}

def @func_8085() -> (Tensor[(130), float32], Tensor[(130), float32]) {
  %703 = fn () -> (Tensor[(130), float32], Tensor[(130), float32]) {
    %699 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %700 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
    %701 = %699.0;
    %702 = %700.0;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(130), float32], Tensor[(130), float32]) */
}

def @main(%var_10895: Tensor[(10, 11, 6), int16], %var_10896: Tensor[(10, 11, 6), int16]) -> Tensor[(10, 11, 6), bool] {
  %704 = cast(%var_10896, dtype="int16") /* ty=Tensor[(10, 11, 6), int16] */;
  %705 = shape_of(%var_10895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%var_10895, dtype="int16") /* ty=Tensor[(10, 11, 6), int16] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %708 = logical_xor(%706, %707) /* ty=Tensor[(10, 11, 6), int16] */;
  %709 = cast(%708, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %710 = shape_of(%var_10896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_10896, dtype="bool") /* ty=Tensor[(10, 11, 6), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%711, %712) /* ty=Tensor[(10, 11, 6), bool] */
}

def @func_5553(%var_5551: Tensor[(13, 6, 9), float64]) -> (Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) {
  @func_5550(%var_5551) /* ty=(Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) */
}

def @func_3460() -> (Tensor[(7, 9, 6), float32],) {
  %715 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %713 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %714 = %713.0;
    (%714,)
  };
  %715() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_7003() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
  %724 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
    %716 = @func_6898() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %717 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %718 = reshape(%717, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %719 = @func_398(%718) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
    %720 = %716.0;
    %721 = @func_6657() /* ty=Tensor[(7, 9, 6), float32] */;
    %722 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
    %723 = %719.4;
    (%720, %721, %722, %723, meta[relay.Constant][33] /* ty=Tensor[(130), float32] */)
  };
  %724() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 64), float32], Tensor[(130), float32]) */
}

def @func_8410() -> (Tensor[(7, 9, 6), float32],) {
  %725 = @func_7591() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %726 = %725.0;
  (%726,)
}

def @func_8818() -> Tensor[(12, 5, 10), float64] {
  @func_8816() /* ty=Tensor[(12, 5, 10), float64] */
}

def @func_10501() -> (Tensor[(7, 9, 6), float32],) {
  %727 = @func_9196() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %728 = %727.0;
  (%728,)
}

def @func_8412() -> (Tensor[(7, 9, 6), float32],) {
  @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_3299() -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) {
  %734 = fn () -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) {
    %729 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
    %730 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %731 = %729.0;
    %732 = %730.0;
    %733 = @func_3042() /* ty=Tensor[(1, 1, 8), float64] */;
    (%731, %732, %733)
  };
  %734() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) */
}

def @func_9393() -> (Tensor[(7, 9, 6), float64],) {
  @func_9391() /* ty=(Tensor[(7, 9, 6), float64],) */
}

def @func_2188() -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) {
  %745 = fn () -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) {
    %735 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
    %736 = @func_1969() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %737 = %735.2;
    %738 = cast(%737, dtype="float32") /* ty=Tensor[(130), float32] */;
    %739 = cast(meta[relay.Constant][34] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %740 = reshape(%738, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %741 = reshape(%739, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %742 = @func_190(%740, %741) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
    %743 = %736.0;
    %744 = %742.0;
    (%737, %743, %744, meta[relay.Constant][34] /* ty=Tensor[(96, 4), float64] */)
  };
  %745() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(96, 4), float64]) */
}

def @func_1847() -> (Tensor[(7, 9, 6), float32],) {
  @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_9338(%var_9335: Tensor[(54), float64], %var_9336: Tensor[(540), float64], %var_9337: Tensor[(384, 1), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(40, 22), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(880), float64], Tensor[(54), float64], Tensor[(540), float64], Tensor[(384, 1), float64]) {
  %764 = fn (%var_9323: Tensor[(54), float64], %var_9324: Tensor[(540), float64], %var_9325: Tensor[(384, 1), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(40, 22), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(880), float64], Tensor[(54), float64], Tensor[(540), float64], Tensor[(384, 1), float64]) {
    %746 = @func_9196() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %747 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
    %748 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %749 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
    %750 = cast(%var_9323, dtype="float64") /* ty=Tensor[(54), float64] */;
    %751 = cast(%var_9324, dtype="float64") /* ty=Tensor[(540), float64] */;
    %752 = %747.2;
    %753 = cast(%752, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
    %754 = cast(%var_9325, dtype="float64") /* ty=Tensor[(384, 1), float64] */;
    %755 = reshape(%750, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float64] */;
    %756 = reshape(%751, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
    %757 = reshape(%753, newshape=[880]) /* ty=Tensor[(880), float64] */;
    %758 = reshape(%754, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %759 = @func_4314(%755, %756, %757, %758) /* ty=(Tensor[(10, 6, 9), float64], Tensor[(880), float64], Tensor[(384), float64], Tensor[(378), uint32]) */;
    %760 = %746.0;
    %761 = %748.0;
    %762 = %749.1;
    %763 = %759.1;
    (%760, %752, %761, %762, %763, %var_9323, %var_9324, %var_9325)
  };
  %764(%var_9335, %var_9336, %var_9337) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(40, 22), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(880), float64], Tensor[(54), float64], Tensor[(540), float64], Tensor[(384, 1), float64]) */
}

def @func_8956() -> (Tensor[(7, 9, 6), int32], Tensor[(130), float32]) {
  %769 = fn () -> (Tensor[(7, 9, 6), int32], Tensor[(130), float32]) {
    %765 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
    %766 = @func_5328() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
    %767 = %765.0;
    %768 = %766.3;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(130), float32]) */
}

def @func_10546() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_10544() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_2825() -> Tensor[(7, 9, 6), float32] {
  %771 = fn () -> Tensor[(7, 9, 6), float32] {
    %770 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %770.0
  };
  %771() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_2659() -> (Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %772 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %773 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %774 = %772.3;
  %775 = %773.0;
  %776 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
  (%774, %775, %776)
}

def @func_3925() -> (Tensor[(130), float32],) {
  %777 = @func_3053() /* ty=Tensor[(130), float32] */;
  (%777,)
}

def @func_9850(%var_9848: Tensor[(880), float64], %var_9849: Tensor[(130), float32]) -> (Tensor[(5, 16, 11), float32], Tensor[(880), float64], Tensor[(130), bool], Tensor[(130), float64]) {
  %793 = fn (%var_9811: Tensor[(880), float64], %var_9814: Tensor[(130), float32]) -> (Tensor[(5, 16, 11), float32], Tensor[(880), float64], Tensor[(130), bool], Tensor[(130), float64]) {
    %778 = cast(%var_9811, dtype="float64") /* ty=Tensor[(880), float64] */;
    %779 = reshape(%778, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %780 = @func_510(%779) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
    %781 = @func_5936() /* ty=(Tensor[(130), float32],) */;
    %782 = %781.0;
    %783 = cast(%var_9814, dtype="bool") /* ty=Tensor[(130), bool] */;
    %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(1), int32] */;
    %785 = cast(%782, dtype="bool") /* ty=Tensor[(130), bool] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?), bool] */;
    %787 = cast(%var_9814, dtype="float32") /* ty=Tensor[(130), float32] */;
    %788 = rsqrt(%787) /* ty=Tensor[(130), float32] */;
    %789 = cast(%788, dtype="float64") /* ty=Tensor[(130), float64] */;
    %790 = %780.1;
    %791 = less_equal(%785, %786) /* ty=Tensor[(130), bool] */;
    %792 = cos(%789) /* ty=Tensor[(130), float64] */;
    (%790, %var_9811, %791, %792)
  };
  %793(%var_9848, %var_9849) /* ty=(Tensor[(5, 16, 11), float32], Tensor[(880), float64], Tensor[(130), bool], Tensor[(130), float64]) */
}

def @func_4964(%var_4948: Tensor[(130), float32]) -> (Tensor[(130), float32], Tensor[(880), float64], Tensor[(40, 22), float64]) {
  %794 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %795 = %794.2;
  %796 = cast(%var_4948, dtype="float32") /* ty=Tensor[(130), float32] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(1), int32] */;
  %798 = cast(%795, dtype="float32") /* ty=Tensor[(130), float32] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?), float32] */;
  %800 = cast(meta[relay.Constant][35] /* ty=Tensor[(40, 22), float64] */, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
  %801 = reshape(%800, newshape=[880]) /* ty=Tensor[(880), float64] */;
  %802 = @func_3197(%801) /* ty=(Tensor[(13, 2, 1), float64], Tensor[(5, 16, 11), float64], Tensor[(880), float64], Tensor[(7, 9, 6), float32]) */;
  %803 = divide(%798, %799) /* ty=Tensor[(130), float32] */;
  %804 = %802.2;
  (%803, %804, meta[relay.Constant][35] /* ty=Tensor[(40, 22), float64] */)
}

def @func_9990() -> (Tensor[(130), float32],) {
  %805 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %806 = %805.3;
  (%806,)
}

def @func_8009() -> Tensor[(7, 9, 6), float32] {
  %808 = fn () -> Tensor[(7, 9, 6), float32] {
    %807 = @func_4860() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %807.0
  };
  %808() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_5738() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %809 = @func_4502() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */;
  %810 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
  %811 = %809.1;
  %812 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  %813 = %810.3;
  (%811, %812, %813)
}

def @func_1115(%var_1113: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) {
  @func_1112(%var_1113) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */
}

def @func_8538() -> Tensor[(7, 9, 6), float32] {
  %814 = @func_1430() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %814.0
}

def @func_7756(%var_7754: Tensor[(13, 3), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(39), float64], Tensor[(13, 3), float64], Tensor[(14, 2, 4), float32], Tensor[(112), bool], Tensor[(7, 9, 6), float32]) {
  @func_7753(%var_7754) /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(39), float64], Tensor[(13, 3), float64], Tensor[(14, 2, 4), float32], Tensor[(112), bool], Tensor[(7, 9, 6), float32]) */
}

def @func_3554(%var_3543: Tensor[(130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %815 = @func_2887() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) */;
  %816 = cast(%var_3543, dtype="float32") /* ty=Tensor[(130), float32] */;
  %817 = reshape(%816, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %818 = @func_1112(%817) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %819 = %815.0;
  %820 = %818.0;
  (%819, %820, %var_3543)
}

def @func_2942() -> (Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) {
  @func_2940() /* ty=(Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) */
}

def @func_3927() -> (Tensor[(130), float32],) {
  @func_3925() /* ty=(Tensor[(130), float32],) */
}

def @func_9036(%var_9022: Tensor[(616), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(11, 8, 7), int16], Tensor[(616), float32], Tensor[(432), float64], Tensor[(60), float32], Tensor[(130), float32]) {
  %821 = @func_2490() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %822 = @func_8872() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %823 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %824 = cast(%var_9022, dtype="float32") /* ty=Tensor[(616), float32] */;
  %825 = cast(%var_9022, dtype="float32") /* ty=Tensor[(616), float32] */;
  %826 = reshape(%824, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float32] */;
  %827 = reshape(%825, newshape=[11, 8, 7]) /* ty=Tensor[(11, 8, 7), float32] */;
  %828 = cast(meta[relay.Constant][36] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %829 = cast(meta[relay.Constant][37] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %830 = reshape(%828, newshape=[1, 10, 6]) /* ty=Tensor[(1, 10, 6), float32] */;
  %831 = reshape(%829, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %832 = @func_2095(%830, %831) /* ty=(Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) */;
  %833 = %821.1;
  %834 = %822.1;
  %835 = %823.0;
  %836 = @func_7368(%826, %827) /* ty=Tensor[(11, 8, 7), int16] */;
  %837 = %832.1;
  (%833, %834, %835, %836, %var_9022, %837, meta[relay.Constant][36] /* ty=Tensor[(60), float32] */, meta[relay.Constant][37] /* ty=Tensor[(130), float32] */)
}

def @func_5330() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  @func_5328() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_7593() -> (Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_7591() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(45, 2), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_4571(%var_4569: Tensor[(3, 20), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) {
  @func_4568(%var_4569) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(3, 20), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(504), int64]) */
}

def @func_5678() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) {
  @func_5676() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(60), float32], Tensor[(15, 6, 1), float32], Tensor[(45, 2), float32], Tensor[(130), float32]) */
}

def @func_7372(%var_7370: Tensor[(11, 8, 7), float32], %var_7371: Tensor[(11, 8, 7), float32]) -> Tensor[(11, 8, 7), int16] {
  @func_7368(%var_7370, %var_7371) /* ty=Tensor[(11, 8, 7), int16] */
}

def @func_4136() -> Tensor[(130), float32] {
  @func_4134() /* ty=Tensor[(130), float32] */
}

def @func_5896(%var_5833: Tensor[(960), float64], %var_5834: Tensor[(384), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(6, 8, 8), bool], Tensor[(960), float64], Tensor[(384), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %838 = @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %839 = cast(%var_5833, dtype="float64") /* ty=Tensor[(960), float64] */;
  %840 = cast(%var_5834, dtype="float32") /* ty=Tensor[(384), float32] */;
  %841 = reshape(%839, newshape=[12, 10, 8]) /* ty=Tensor[(12, 10, 8), float64] */;
  %842 = reshape(%840, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %843 = @func_5291(%841, %842) /* ty=(Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) */;
  %844 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %845 = %838.0;
  %846 = %843.5;
  %847 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  %848 = %844.2;
  (%845, %846, %var_5833, %var_5834, %847, %848)
}

def @func_7753(%var_7715: Tensor[(13, 3), float64]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(39), float64], Tensor[(13, 3), float64], Tensor[(14, 2, 4), float32], Tensor[(112), bool], Tensor[(7, 9, 6), float32]) {
  %849 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %850 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %851 = cast(%var_7715, dtype="float64") /* ty=Tensor[(13, 3), float64] */;
  %852 = reshape(%851, newshape=[39]) /* ty=Tensor[(39), float64] */;
  %853 = @func_5012(%852) /* ty=(Tensor[(7, 9, 6), int32], Tensor[(39), float64], Tensor[(130), float32]) */;
  %854 = cast(meta[relay.Constant][38] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %855 = cast(meta[relay.Constant][38] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %856 = reshape(%854, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), bool] */;
  %857 = reshape(%855, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), bool] */;
  %858 = @func_3276(%856, %857) /* ty=(Tensor[(14, 2, 4), float32],) */;
  %859 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %860 = %849.0;
  %861 = %850.0;
  %862 = %853.1;
  %863 = %858.0;
  %864 = %859.1;
  (%860, %861, %862, %var_7715, %863, meta[relay.Constant][38] /* ty=Tensor[(112), bool] */, %864)
}

def @func_9276() -> (Tensor[(7, 9, 6), float32],) {
  @func_9274() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_4637(%var_4636: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), uint16]) {
  %876 = fn (%var_4617: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), uint16]) {
    %865 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
    %866 = cast(%var_4617, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
    %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
    %868 = cast(%865, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
    %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %870 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 9, 6), float32] */, dtype="uint16") /* ty=Tensor[(7, 9, 6), uint16] */;
    %871 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(%865, dtype="uint16") /* ty=Tensor[(7, 9, 6), uint16] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %874 = power(%868, %869) /* ty=Tensor[(7, 9, 6), float32] */;
    %875 = bitwise_xor(%872, %873) /* ty=Tensor[(7, 9, 6), uint16] */;
    (%874, %875)
  };
  %876(%var_4636) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), uint16]) */
}

def @func_4801(%var_4800: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) {
  %886 = fn (%var_4778: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) {
    %877 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
    %878 = %877.0;
    %879 = cast(%var_4778, dtype="int16") /* ty=Tensor[(7, 9, 6), int16] */;
    %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %881 = cast(%878, dtype="int16") /* ty=Tensor[(7, 9, 6), int16] */;
    %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %883 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %884 = bitwise_and(%881, %882) /* ty=Tensor[(7, 9, 6), int16] */;
    %885 = %883.0;
    (%884, %885)
  };
  %886(%var_4800) /* ty=(Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) */
}

def @func_9196() -> (Tensor[(7, 9, 6), float32],) {
  %887 = @func_6294() /* ty=Tensor[(7, 9, 6), float32] */;
  (%887,)
}

def @func_3800(%var_3798: Tensor[(15, 8, 5), float32]) -> Tensor[(15, 8, 5), float32] {
  @func_3797(%var_3798) /* ty=Tensor[(15, 8, 5), float32] */
}

def @func_5295(%var_5293: Tensor[(12, 10, 8), float64], %var_5294: Tensor[(6, 8, 8), float32]) -> (Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) {
  @func_5291(%var_5293, %var_5294) /* ty=(Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) */
}

def @func_6511(%var_6510: Tensor[(40, 22), float64]) -> (Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) {
  %902 = fn (%var_6497: Tensor[(40, 22), float64]) -> (Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) {
    %888 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
    %889 = cast(%var_6497, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
    %890 = reshape(%889, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float64] */;
    %891 = @func_510(%890) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */;
    %892 = %888.2;
    %893 = cast(%892, dtype="float32") /* ty=Tensor[(130), float32] */;
    %894 = reshape(%893, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %895 = @func_398(%894) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(6, 64), float32]) */;
    %896 = cast(%var_6497, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
    %897 = cosh(%896) /* ty=Tensor[(40, 22), float64] */;
    %898 = cast(%897, dtype="float64") /* ty=Tensor[(40, 22), float64] */;
    %899 = %891.1;
    %900 = %895.3;
    %901 = asinh(%898) /* ty=Tensor[(40, 22), float64] */;
    (%892, %899, %900, %901)
  };
  %902(%var_6510) /* ty=(Tensor[(130), float32], Tensor[(5, 16, 11), float32], Tensor[(16, 3, 8), float64], Tensor[(40, 22), float64]) */
}

def @func_3736(%var_3734: Tensor[(7, 9, 6), float32]) -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), int8]) {
  @func_3733(%var_3734) /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), int8]) */
}

def @func_7837() -> (Tensor[(7, 9, 6), float32],) {
  %903 = @func_4139() /* ty=Tensor[(7, 9, 6), float32] */;
  (%903,)
}

def @func_4707() -> (Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) {
  %910 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) {
    %904 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %905 = @func_4379() /* ty=Tensor[(12, 5, 10), float32] */;
    %906 = cast(%905, dtype="float64") /* ty=Tensor[(12, 5, 10), float64] */;
    %907 = %904.0;
    %908 = atan(%906) /* ty=Tensor[(12, 5, 10), float64] */;
    %909 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
    (%907, %908, %909)
  };
  %910() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), int32]) */
}

def @func_6035() -> (Tensor[(7, 9, 6), int8],) {
  %911 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
  %912 = %911.0;
  (%912,)
}

def @func_8689() -> (Tensor[(7, 9, 6), float32],) {
  %915 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %913 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %914 = %913.0;
    (%914,)
  };
  %915() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_573() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_4379() -> Tensor[(12, 5, 10), float32] {
  %916 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %917 = %916.1;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(12, 5, 10), float32] */;
  exp(%918) /* ty=Tensor[(12, 5, 10), float32] */
}

def @func_9773(%var_9771: Tensor[(4, 220), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 6, 9), float64], Tensor[(702), float64], Tensor[(7, 9, 6), int8], Tensor[(4, 220), float64], Tensor[(7, 9, 6), float32]) {
  @func_9770(%var_9771) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 6, 9), float64], Tensor[(702), float64], Tensor[(7, 9, 6), int8], Tensor[(4, 220), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_5550(%var_5535: Tensor[(13, 6, 9), float64]) -> (Tensor[(13, 6, 9), float64], Tensor[(7, 9, 6), float32], Tensor[(378), float32]) {
  %919 = cast(%var_5535, dtype="float64") /* ty=Tensor[(13, 6, 9), float64] */;
  %920 = cast(meta[relay.Constant][40] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %921 = reshape(%920, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float32] */;
  %922 = @func_4799(%921) /* ty=(Tensor[(7, 9, 6), int16], Tensor[(7, 9, 6), float32]) */;
  %923 = sigmoid(%919) /* ty=Tensor[(13, 6, 9), float64] */;
  %924 = %922.1;
  (%923, %924, meta[relay.Constant][40] /* ty=Tensor[(378), float32] */)
}

def @func_10469() -> (Tensor[(7, 9, 6), float32],) {
  %925 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  (%925,)
}

def @func_3595() -> (Tensor[(3, 13, 14), float64],) {
  @func_3593() /* ty=(Tensor[(3, 13, 14), float64],) */
}

def @func_10431() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(96, 4), float64]) {
  @func_10429() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(96, 4), float64]) */
}

def @func_1729() -> Tensor[(7, 9, 6), float32] {
  %926 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %926.0
}

def @func_8581() -> (Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %927 = @func_6035() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %928 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %929 = %927.0;
  %930 = @func_8538() /* ty=Tensor[(7, 9, 6), float32] */;
  %931 = %928.0;
  (%929, %930, %931)
}

def @func_10785(%var_10784: Tensor[(600), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 10, 10), float64], Tensor[(600), float64], Tensor[(7, 9, 6), float32]) {
  %941 = fn (%var_10764: Tensor[(600), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 10, 10), float64], Tensor[(600), float64], Tensor[(7, 9, 6), float32]) {
    %932 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %933 = cast(%var_10764, dtype="float64") /* ty=Tensor[(600), float64] */;
    %934 = reshape(%933, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
    %935 = @func_8581() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %936 = %932.0;
    %937 = @func_9225() /* ty=Tensor[(7, 9, 6), float32] */;
    %938 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
    %939 = @func_9070(%934) /* ty=Tensor[(6, 10, 10), float64] */;
    %940 = %935.1;
    (%936, %937, %938, %939, %var_10764, %940)
  };
  %941(%var_10784) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 10, 10), float64], Tensor[(600), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_832() -> (Tensor[(7, 9, 6), float32],) {
  @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_3001(%var_2999: Tensor[(39), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  @func_2998(%var_2999) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 3, ?), float32], Tensor[(39), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_3797(%var_3794: Tensor[(15, 8, 5), float32]) -> Tensor[(15, 8, 5), float32] {
  %942 = cast(%var_3794, dtype="float32") /* ty=Tensor[(15, 8, 5), float32] */;
  asin(%942) /* ty=Tensor[(15, 8, 5), float32] */
}

def @func_10192() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %943 = @func_9440() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) */;
  %944 = @func_7282() /* ty=Tensor[(7, 9, 6), float32] */;
  %945 = @func_3904() /* ty=Tensor[(7, 9, 6), float32] */;
  %946 = %943.1;
  (%944, %945, %946)
}

def @func_9615() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %951 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %947 = @func_5528() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %948 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %949 = %947.0;
    %950 = %948.0;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_10373(%var_10371: Tensor[(2, 1, 9), uint64], %var_10372: Tensor[(2, 1, 9), uint64]) -> Tensor[(2, ?, 9), bool] {
  @func_10369(%var_10371, %var_10372) /* ty=Tensor[(2, ?, 9), bool] */
}

def @func_5900(%var_5898: Tensor[(960), float64], %var_5899: Tensor[(384), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(6, 8, 8), bool], Tensor[(960), float64], Tensor[(384), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  @func_5896(%var_5898, %var_5899) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(6, 8, 8), bool], Tensor[(960), float64], Tensor[(384), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */
}

def @func_2582() -> (Tensor[(7, 9, 6), float32],) {
  %954 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %952 = @func_1074() /* ty=(Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32]) */;
    %953 = %952.1;
    (%953,)
  };
  %954() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_1845() -> (Tensor[(7, 9, 6), float32],) {
  %955 = @func_546() /* ty=Tensor[(7, 9, 6), float32] */;
  (%955,)
}

def @func_2940() -> (Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) {
  %956 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int16") /* ty=Tensor[(3, 13, 14), int16] */;
  %957 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int16") /* ty=Tensor[(3, 13, 14), int16] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %960 = left_shift(%958, %959) /* ty=Tensor[(3, 13, 14), int16] */;
  %961 = cast(%960, dtype="float64") /* ty=Tensor[(3, 13, 14), float64] */;
  %962 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 13, 14), int16] */, dtype="uint32") /* ty=Tensor[(3, 13, 14), uint32] */;
  %963 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(3, 13, 14), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 13, 14), int16] */, dtype="uint32") /* ty=Tensor[(3, 13, 14), uint32] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %966 = cosh(%961) /* ty=Tensor[(3, 13, 14), float64] */;
  %967 = multiply(%964, %965) /* ty=Tensor[(3, 13, 14), uint32] */;
  (%966, %967)
}

def @func_2711() -> (Tensor[(7, 9, 6), float32],) {
  %968 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %969 = %968.0;
  (%969,)
}

def @func_9945(%var_9943: Tensor[(60), float32]) -> (Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1, 130), float32], Tensor[(384), float64], Tensor[(130), float32], Tensor[(60), float32]) {
  @func_9942(%var_9943) /* ty=(Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1, 130), float32], Tensor[(384), float64], Tensor[(130), float32], Tensor[(60), float32]) */
}

def @func_6898() -> (Tensor[(7, 9, 6), float32],) {
  %970 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %971 = %970.0;
  (%971,)
}

def @func_6659() -> Tensor[(7, 9, 6), float32] {
  @func_6657() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_673() -> Tensor[(7, 9, 6), float32] {
  %972 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_546() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %972() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_5291(%var_5249: Tensor[(12, 10, 8), float64], %var_5281: Tensor[(6, 8, 8), float32]) -> (Tensor[(1, 1, 8), float64], Tensor[(12, 10, 8), bool], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(6, 8, 8), bool]) {
  %973 = @func_3042() /* ty=Tensor[(1, 1, 8), float64] */;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(1, 1, 8), float64] */;
  %975 = cast(%973, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %976 = cast(%var_5249, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  %977 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %978 = @func_1268() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
  %979 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
  %980 = cast(%973, dtype="float32") /* ty=Tensor[(1, 1, 8), float32] */;
  %981 = acosh(%980) /* ty=Tensor[(1, 1, 8), float32] */;
  %982 = cast(%981, dtype="bool") /* ty=Tensor[(1, 1, 8), bool] */;
  %983 = cast(%var_5281, dtype="bool") /* ty=Tensor[(6, 8, 8), bool] */;
  %984 = rsqrt(%974) /* ty=Tensor[(1, 1, 8), float64] */;
  %985 = less(%975, %976) /* ty=Tensor[(12, 10, 8), bool] */;
  %986 = %977.0;
  %987 = %978.0;
  %988 = %979.0;
  %989 = logical_and(%982, %983) /* ty=Tensor[(6, 8, 8), bool] */;
  (%984, %985, %986, %987, %988, %989)
}

def @func_830() -> (Tensor[(7, 9, 6), float32],) {
  %990 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  (%990,)
}

def @func_9072(%var_9071: Tensor[(6, 10, 10), float64]) -> Tensor[(6, 10, 10), float64] {
  %992 = fn (%var_9067: Tensor[(6, 10, 10), float64]) -> Tensor[(6, 10, 10), float64] {
    %991 = cast(%var_9067, dtype="float64") /* ty=Tensor[(6, 10, 10), float64] */;
    sigmoid(%991) /* ty=Tensor[(6, 10, 10), float64] */
  };
  %992(%var_9071) /* ty=Tensor[(6, 10, 10), float64] */
}

def @func_5108() -> Tensor[(7, 9, 6), float32] {
  %993 = @func_2635() /* ty=(Tensor[(12, 5, 10), float32], Tensor[(12, 5, 10), float64], Tensor[(7, 9, 6), float32]) */;
  %993.2
}

def @func_1832() -> (Tensor[(7, 9, 6), float32],) {
  %994 = @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %995 = %994.0;
  (%995,)
}

def @func_8540() -> Tensor[(7, 9, 6), float32] {
  @func_8538() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_6295() -> Tensor[(7, 9, 6), float32] {
  %997 = fn () -> Tensor[(7, 9, 6), float32] {
    %996 = @func_3828() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %996.0
  };
  %997() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_4214(%var_4199: Tensor[(3, 13, 14), float64]) -> (Tensor[(3, 13, 14), uint16], Tensor[(3, 13, 14), float32]) {
  %998 = @func_3593() /* ty=(Tensor[(3, 13, 14), float64],) */;
  %999 = %998.0;
  %1000 = cast(%var_4199, dtype="uint16") /* ty=Tensor[(3, 13, 14), uint16] */;
  %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%999, dtype="uint16") /* ty=Tensor[(3, 13, 14), uint16] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1004 = cast(%var_4199, dtype="float32") /* ty=Tensor[(3, 13, 14), float32] */;
  %1005 = right_shift(%1002, %1003) /* ty=Tensor[(3, 13, 14), uint16] */;
  %1006 = acos(%1004) /* ty=Tensor[(3, 13, 14), float32] */;
  (%1005, %1006)
}

def @func_3054() -> Tensor[(130), float32] {
  %1008 = fn () -> Tensor[(130), float32] {
    %1007 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1007.0
  };
  %1008() /* ty=Tensor[(130), float32] */
}

def @func_513(%var_511: Tensor[(5, 16, 11), float64]) -> (Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) {
  @func_510(%var_511) /* ty=(Tensor[(5, 16, 11), float64], Tensor[(5, 16, 11), float32]) */
}

def @func_886(%var_884: Tensor[(7, 9, 6), float64]) -> (Tensor[(7, 9, 6), int8],) {
  @func_883(%var_884) /* ty=(Tensor[(7, 9, 6), int8],) */
}

def @func_2788(%var_2787: Tensor[(192, 2), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) {
  %1018 = fn (%var_2773: Tensor[(192, 2), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) {
    %1009 = @func_1139() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32]) */;
    %1010 = cast(meta[relay.Constant][43] /* ty=Tensor[(130, 1), float32] */, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
    %1011 = cast(%var_2773, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %1012 = reshape(%1010, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %1013 = reshape(%1011, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %1014 = @func_190(%1012, %1013) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
    %1015 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
    %1016 = %1009.0;
    %1017 = %1014.5;
    (%1015, %1016, %1017, meta[relay.Constant][43] /* ty=Tensor[(130, 1), float32] */, %var_2773)
  };
  %1018(%var_2787) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) */
}

def @func_3042() -> Tensor[(1, 1, 8), float64] {
  %1019 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 1, 8), float64] */;
  log10(%1019) /* ty=Tensor[(1, 1, 8), float64] */
}

def @func_8662() -> Tensor[(7, 9, 6), float32] {
  %1020 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_6222() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %1020() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_1245(%var_1243: Tensor[(130), float32], %var_1244: Tensor[(6, 64), float64]) -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) {
  @func_1241(%var_1243, %var_1244) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float64]) */
}

def @func_4861() -> (Tensor[(7, 9, 6), float32],) {
  %1023 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %1021 = @func_1592() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1022 = %1021.0;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_10642(%var_10640: Tensor[(3, 6, 1), int32], %var_10641: Tensor[(3, 6, 6), int32]) -> (Tensor[(3, 6, 6), int32], Tensor[(40, 22), float64]) {
  @func_10638(%var_10640, %var_10641) /* ty=(Tensor[(3, 6, 6), int32], Tensor[(40, 22), float64]) */
}

def @func_5328() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) {
  %1024 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1025 = %1024.1;
  %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %1027 = reshape(%1026, newshape=[7, 9, 6]) /* ty=Tensor[(7, 9, 6), float64] */;
  %1028 = @func_883(%1027) /* ty=(Tensor[(7, 9, 6), int8],) */;
  %1029 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1030 = @func_3925() /* ty=(Tensor[(130), float32],) */;
  %1031 = %1028.0;
  %1032 = %1029.2;
  %1033 = %1030.0;
  (%1025, %1031, %1032, %1033)
}

def @func_6960() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1120), int64]) {
  @func_6958() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(1120), int64]) */
}

def @func_3593() -> (Tensor[(3, 13, 14), float64],) {
  %1034 = @func_2940() /* ty=(Tensor[(3, 13, 14), float64], Tensor[(3, 13, 14), uint32]) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_9184() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %1040 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %1036 = @func_1832() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1037 = @func_1649() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1038 = %1036.0;
    %1039 = %1037.0;
    (%1038, %1039)
  };
  %1040() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_4134() -> Tensor[(130), float32] {
  %1041 = @func_2659() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1041.0
}

def @func_3661() -> Tensor[(7, 9, 6), int32] {
  %1043 = fn () -> Tensor[(7, 9, 6), int32] {
    %1042 = @func_1908() /* ty=(Tensor[(7, 9, 6), int32],) */;
    %1042.0
  };
  %1043() /* ty=Tensor[(7, 9, 6), int32] */
}

def @func_9956() -> Tensor[(7, 9, 6), float32] {
  %1044 = fn () -> Tensor[(7, 9, 6), float32] {
    @func_8470() /* ty=Tensor[(7, 9, 6), float32] */
  };
  %1044() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_7767() -> (Tensor[(7, 9, 6), float32],) {
  %1047 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %1045 = @func_3635() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1046 = %1045.0;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_10650() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %1052 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %1048 = @func_5738() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1049 = @func_1533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1050 = %1048.0;
    %1051 = %1049.0;
    (%1050, %1051)
  };
  %1052() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_1534() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %1057 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %1053 = @func_1472() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1054 = @func_571() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1055 = %1053.2;
    %1056 = %1054.0;
    (%1055, %1056)
  };
  %1057() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_10524() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
  %1064 = fn () -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) {
    %1058 = @func_8263() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(11, 10, 8), float32], Tensor[(880), float32]) */;
    %1059 = @func_2399() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
    %1060 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1061 = %1058.0;
    %1062 = %1059.0;
    %1063 = %1060.0;
    (%1061, %1062, %1063)
  };
  %1064() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */
}

def @func_6657() -> Tensor[(7, 9, 6), float32] {
  %1065 = @func_2533() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32]) */;
  %1065.1
}

def @func_5380() -> (Tensor[(130, 1), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
  %1079 = fn () -> (Tensor[(130, 1), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) {
    %1066 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1067 = reshape(%1066, newshape=[192, 2]) /* ty=Tensor[(192, 2), float64] */;
    %1068 = @func_2786(%1067) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(384), float64], Tensor[(130, 1), float32], Tensor[(192, 2), float64]) */;
    %1069 = @func_3828() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1070 = %1069.0;
    %1071 = @func_1845() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1072 = %1071.0;
    %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
    %1074 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1075 = cast(%1070, dtype="float32") /* ty=Tensor[(7, 9, 6), float32] */;
    %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1077 = %1068.3;
    %1078 = floor_divide(%1075, %1076) /* ty=Tensor[(7, 9, 6), float32] */;
    (%1077, meta[relay.Constant][45] /* ty=Tensor[(384), float64] */, %1078)
  };
  %1079() /* ty=(Tensor[(130, 1), float32], Tensor[(384), float64], Tensor[(7, 9, 6), float32]) */
}

def @func_4140() -> Tensor[(7, 9, 6), float32] {
  %1081 = fn () -> Tensor[(7, 9, 6), float32] {
    %1080 = @func_3459() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_4503() -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) {
  %1086 = fn () -> (Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) {
    %1082 = @func_3298() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32], Tensor[(1, 1, 8), float64]) */;
    %1083 = @func_2887() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(39), float64]) */;
    %1084 = %1082.0;
    %1085 = %1083.0;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(7, 9, 6), int32], Tensor[(7, 9, 6), float32]) */
}

def @func_10638(%var_10625: Tensor[(3, 6, 1), int32], %var_10626: Tensor[(3, 6, 6), int32]) -> (Tensor[(3, 6, 6), int32], Tensor[(40, 22), float64]) {
  %1087 = cast(%var_10625, dtype="int32") /* ty=Tensor[(3, 6, 1), int32] */;
  %1088 = cast(%var_10626, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
  %1089 = @func_7487() /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int32], Tensor[(40, 22), float64], Tensor[(880), float64]) */;
  %1090 = right_shift(%1087, %1088) /* ty=Tensor[(3, 6, 6), int32] */;
  %1091 = %1089.2;
  (%1090, %1091)
}

def @func_8636() -> Tensor[(130), float32] {
  %1093 = fn () -> Tensor[(130), float32] {
    %1092 = @func_4903() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */;
    %1092.0
  };
  %1093() /* ty=Tensor[(130), float32] */
}

def @func_10429() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), int8], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(96, 4), float64]) {
  %1094 = @func_9873() /* ty=(Tensor[(7, 9, 6), int8],) */;
  %1095 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1096 = cast(meta[relay.Constant][47] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %1097 = reshape(%1095, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %1098 = reshape(%1096, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %1099 = @func_190(%1097, %1098) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(13, 5, 2), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float64], Tensor[(13, 5, 2), float32]) */;
  %1100 = @func_6488() /* ty=Tensor[(7, 9, 6), float32] */;
  %1101 = %1094.0;
  %1102 = @func_2824() /* ty=Tensor[(7, 9, 6), float32] */;
  %1103 = %1099.3;
  (%1100, %1101, %1102, %1103, meta[relay.Constant][46] /* ty=Tensor[(130), float32] */, meta[relay.Constant][47] /* ty=Tensor[(96, 4), float64] */)
}

def @func_4967(%var_4965: Tensor[(130), float32]) -> (Tensor[(130), float32], Tensor[(880), float64], Tensor[(40, 22), float64]) {
  @func_4964(%var_4965) /* ty=(Tensor[(130), float32], Tensor[(880), float64], Tensor[(40, 22), float64]) */
}

def @func_9225() -> Tensor[(7, 9, 6), float32] {
  @func_546() /* ty=Tensor[(7, 9, 6), float32] */
}

def @func_9440() -> (Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float64]) {
  %1104 = @func_1832() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1105 = @func_8410() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1106 = @func_9391() /* ty=(Tensor[(7, 9, 6), float64],) */;
  %1107 = %1104.0;
  %1108 = %1105.0;
  %1109 = %1106.0;
  (%1107, %1108, %1109)
}

def @func_4904() -> (Tensor[(130), float32], Tensor[(7, 9, 6), int32]) {
  %1113 = fn () -> (Tensor[(130), float32], Tensor[(7, 9, 6), int32]) {
    %1110 = @func_3925() /* ty=(Tensor[(130), float32],) */;
    %1111 = %1110.0;
    %1112 = @func_3660() /* ty=Tensor[(7, 9, 6), int32] */;
    (%1111, %1112)
  };
  %1113() /* ty=(Tensor[(130), float32], Tensor[(7, 9, 6), int32]) */
}

def @func_7085(%var_7084: Tensor[(1, 130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(1, 130), float32]) {
  %1120 = fn (%var_7069: Tensor[(1, 130), float32]) -> (Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(1, 130), float32]) {
    %1114 = @func_2581() /* ty=(Tensor[(7, 9, 6), float32],) */;
    %1115 = cast(%var_7069, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
    %1116 = reshape(%1115, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %1117 = @func_3554(%1116) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(130), float32]) */;
    %1118 = %1114.0;
    %1119 = %1117.2;
    (%1118, %1119, %var_7069)
  };
  %1120(%var_7084) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(1, 130), float32]) */
}

def @func_2713() -> (Tensor[(7, 9, 6), float32],) {
  @func_2711() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_883(%var_872: Tensor[(7, 9, 6), float64]) -> (Tensor[(7, 9, 6), int8],) {
  %1121 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %1122 = cast(%1121, dtype="float64") /* ty=Tensor[(7, 9, 6), float64] */;
  %1123 = exp(%1122) /* ty=Tensor[(7, 9, 6), float64] */;
  %1124 = cast(%var_872, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%1123, dtype="int8") /* ty=Tensor[(7, 9, 6), int8] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1128 = minimum(%1126, %1127) /* ty=Tensor[(7, 9, 6), int8] */;
  (%1128,)
}

def @func_5994() -> Tensor[(7, 9, 6), int32] {
  @func_5992() /* ty=Tensor[(7, 9, 6), int32] */
}

def @func_1746() -> (Tensor[(7, 9, 6), float32],) {
  @func_1744() /* ty=(Tensor[(7, 9, 6), float32],) */
}

def @func_2095(%var_2036: Tensor[(1, 10, 6), float32], %var_2084: Tensor[(130), float32]) -> (Tensor[(4, 12, 9), int64], Tensor[(432), float64], Tensor[(7, 9, 6), float32], Tensor[(130), float32], Tensor[(130), float32], Tensor[(7, 9, 6), float32], Tensor[(?, 10, 6), bool]) {
  %1129 = cast(meta[relay.Constant][48] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %1130 = cast(meta[relay.Constant][48] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %1131 = reshape(%1129, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), float64] */;
  %1132 = reshape(%1130, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), float64] */;
  %1133 = @func_1356(%1131, %1132) /* ty=(Tensor[(4, 12, 9), int64],) */;
  %1134 = cast(%var_2084, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1135 = reshape(%1134, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %1136 = @func_1112(%1135) /* ty=(Tensor[(7, 9, 6), float32], Tensor[(7, 9, 6), float32], Tensor[(6, 64), float32], Tensor[(130), float32]) */;
  %1137 = @func_830() /* ty=(Tensor[(7, 9, 6), float32],) */;
  %1138 = cast(%var_2036, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %1139 = atan(%1138) /* ty=Tensor[(1, 10, 6), float32] */;
  %1140 = cast(%1139, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %1141 = cosh(%1140) /* ty=Tensor[(1, 10, 6), float32] */;
  %1142 = cast(%1141, dtype="int64") /* ty=Tensor[(1, 10, 6), int64] */;
  %1143 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1144 = cast(%1139, dtype="int64") /* ty=Tensor[(1, 10, 6), int64] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1146 = left_shift(%1144, %1145) /* ty=Tensor[(?, 10, 6), int64] */;
  %1147 = cast(%1146, dtype="bool") /* ty=Tensor[(?, 10, 6), bool] */;
  %1148 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1149 = cast(%1139, dtype="bool") /* ty=Tensor[(1, 10, 6), bool] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1151 = %1133.0;
  %1152 = @func_672() /* ty=Tensor[(7, 9, 6), float32] */;
  %1153 = %1136.3;
  %1154 = %1137.0;
  %1155 = equal(%1149, %1150) /* ty=Tensor[(?, 10, 6), bool] */;
  (%1151, meta[relay.Constant][48] /* ty=Tensor[(432), float64] */, %1152, %1153, %var_2084, %1154, %1155)
}

def @func_5529() -> (Tensor[(7, 9, 6), float32],) {
  %1157 = fn () -> (Tensor[(7, 9, 6), float32],) {
    %1156 = @func_1729() /* ty=Tensor[(7, 9, 6), float32] */;
    (%1156,)
  };
  %1157() /* ty=(Tensor[(7, 9, 6), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen369/build/output.py:3638: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen369/build/output.py", line 3643, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(660) tvmgen_default_fused_cast_reshape_logical_xor_cast_reshape_greater_kernel0(signed char* __restrict__ T_greater, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_greater[(((int)threadIdx.x))] = ((signed char)(((bool)(placeholder[(((int)threadIdx.x))] ^ placeholder1[(((int)threadIdx.x))])) < ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


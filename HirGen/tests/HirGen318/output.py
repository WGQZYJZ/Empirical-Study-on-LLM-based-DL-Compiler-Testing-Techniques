import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_66 = relay.var("var_66", dtype = "float32", shape = (13, 16, 9))#candidate|66|(13, 16, 9)|var|float32
uop_67 = relay.rsqrt(var_66.astype('float32')) # shape=(13, 16, 9)
bop_69 = relay.mod(uop_67.astype('float64'), relay.reshape(var_66.astype('float64'), relay.shape_of(uop_67))) # shape=(13, 16, 9)
output = relay.Tuple([bop_69,])
output2 = relay.Tuple([bop_69,])
func_79 = relay.Function([var_66,], output)
mod['func_79'] = func_79
mod = relay.transform.InferType()(mod)
var_80 = relay.var("var_80", dtype = "float32", shape = (13, 16, 9))#candidate|80|(13, 16, 9)|var|float32
output = func_79(var_80)
func_81 = relay.Function([var_80], output)
mutated_mod['func_81'] = func_81
mutated_mod = relay.transform.InferType()(mutated_mod)
var_410 = relay.var("var_410", dtype = "float64", shape = (9, 5, 10))#candidate|410|(9, 5, 10)|var|float64
const_411 = relay.const([[[8.127720,-0.945197,-3.635075,1.094829,1.980125,5.967419,-5.158277,-8.023317,-8.100107,-0.706800],[-1.681643,-8.562479,-8.657804,-4.939745,-4.976181,-5.656573,3.387755,-1.212557,-5.409443,-5.375552],[-1.016811,-0.093530,-8.647190,-5.213879,9.926391,3.245705,-1.294419,2.485139,5.544412,9.944828],[9.033250,7.148203,9.223045,9.784934,1.691834,1.481476,2.378086,-3.399396,6.112630,-6.408017],[9.717150,-4.093686,6.245794,-0.823537,0.068439,-5.195966,7.971115,-2.325137,9.655886,-3.880583]],[[0.848829,2.790945,-7.162994,-5.432528,-7.091227,-3.604864,2.411870,3.217541,-8.592967,0.715378],[4.639142,1.131981,2.842533,1.813731,8.667440,4.673389,-6.648093,2.082196,-5.778386,-0.952109],[-2.343931,-2.672247,8.046669,-3.306272,4.297907,-7.794354,-8.557092,7.380490,1.212479,-7.710128],[-8.946421,6.243388,-7.245372,1.103919,-9.200979,9.852666,-5.750145,-9.758334,4.487066,-1.486876],[-8.601042,-4.624208,-5.310115,-0.931009,-5.620418,-8.493433,-1.425198,1.402414,-6.796327,4.555795]],[[-4.200339,9.434838,-8.746064,7.521485,-0.880509,-3.003977,-7.852483,7.818454,-0.635967,-1.941101],[3.959460,-0.307332,-1.616061,-5.228436,-3.746060,6.787221,6.794377,-7.779179,6.423750,4.430752],[9.238458,-4.791339,-4.644405,-3.776964,-4.302244,-3.215455,4.567705,7.371008,-8.970391,-5.437796],[-3.272040,-3.854438,-0.531288,8.719290,-5.466154,5.824373,6.199601,5.060187,-9.189297,-4.432077],[-6.155272,-9.554516,5.579747,1.634239,0.830633,5.948852,5.497943,9.261381,-2.925804,6.933176]],[[-7.353754,-5.450646,5.155025,2.646386,7.226038,-0.717793,-9.286451,7.707091,-3.655196,-0.857882],[-1.269769,6.821889,7.997983,6.961179,-2.534155,-1.894923,6.337385,-0.424978,-6.325458,-4.327926],[4.304809,7.596002,7.977928,-6.649333,6.943591,-4.551605,-9.703895,5.124880,-9.556728,3.082573],[-3.800615,8.794434,-8.999465,-0.841717,-8.003951,-5.595708,8.512040,9.259959,-6.327576,-8.408265],[-3.752253,6.375668,4.462149,-1.186764,2.168330,-4.691126,6.519900,7.172794,1.272072,-9.656256]],[[0.228540,5.057756,-1.842190,2.469423,-7.400709,-1.503730,-3.061810,4.680101,5.087381,-1.703460],[1.876294,-1.074357,-8.234088,-2.163329,1.819558,1.540180,5.829318,4.141539,-1.009714,-8.313470],[-8.827818,3.228661,-0.201959,-8.908570,1.579185,-9.785456,7.349442,0.678258,6.308770,7.772143],[9.447476,6.739707,-0.910379,-6.070848,7.697090,3.482122,-6.760975,2.026802,-0.090729,-4.784323],[-9.948886,-6.034101,6.874562,5.012061,-2.454365,2.103382,-5.722735,-9.024692,2.183585,5.161983]],[[-1.129653,-1.353570,1.736580,5.713117,-2.680883,7.549749,0.702557,-1.186140,-4.554994,3.217027],[0.909990,-4.730836,8.503716,-0.792840,5.849600,4.998471,-4.380242,-5.284616,3.679138,9.037188],[8.245986,-9.248985,1.666160,3.882719,1.153776,-9.069244,2.868557,-4.918661,8.790743,9.697742],[-0.679865,-5.203926,2.523555,-6.416037,1.486238,-0.786853,9.189276,2.062094,1.476571,-2.284037],[4.317664,0.890015,4.157600,4.834568,-8.682519,3.970336,9.404672,-2.355021,0.634336,-5.663927]],[[-5.269930,6.231369,6.406626,-0.698662,-3.393364,4.712056,0.189399,-0.612116,-6.947565,-1.841331],[7.354302,1.430176,0.700520,2.038869,3.116802,5.475560,-5.114667,1.673980,3.848419,-0.189021],[-9.659843,1.155311,5.517186,-4.023266,0.555845,-9.842906,-7.015677,-9.132075,6.310133,-5.188778],[2.670239,5.417354,8.691401,3.529090,-6.098952,-9.883470,-2.734240,6.954985,2.360282,7.231806],[-0.957116,4.891664,-9.365073,-3.093763,4.331727,-5.242122,5.705179,-8.264958,-8.657218,7.786724]],[[-2.332628,0.827967,-5.995116,-1.588238,-0.650210,-2.757390,8.559941,6.670024,9.794375,-3.790061],[7.800786,6.741437,-1.368380,8.565489,-1.764729,8.826018,-5.618947,0.291705,3.217694,-4.926532],[4.344360,-8.876933,7.499253,-2.921565,-9.871216,1.343229,3.704610,-5.322634,2.746249,-4.797322],[-3.218373,-7.378494,-0.355883,2.995183,6.781189,9.892021,3.036092,9.824592,-3.113304,6.333206],[-8.816271,-3.936929,-3.525112,1.921944,-5.164447,3.033638,-8.736023,9.404604,1.127422,-8.314810]],[[-0.429816,8.633106,-5.639285,-7.559153,0.345853,9.756609,1.939187,7.332777,-4.776801,5.359126],[4.519172,3.608113,-9.419832,-5.168755,-2.786684,-2.467785,8.755053,-0.136525,-1.100630,-4.587462],[-6.037235,-5.647354,5.619784,6.474460,-1.673864,-5.554885,1.679812,9.625339,-6.334741,3.840614],[0.717722,8.332364,-1.718908,-7.448841,3.721735,-0.118456,-3.803582,3.692586,-4.936141,4.075139],[5.367078,-9.275240,0.866337,-0.972339,-5.534927,-9.540831,2.177242,-8.817775,9.315839,-2.325304]]], dtype = "float64")#candidate|411|(9, 5, 10)|const|float64
bop_412 = relay.multiply(var_410.astype('float64'), relay.reshape(const_411.astype('float64'), relay.shape_of(var_410))) # shape=(9, 5, 10)
bop_429 = relay.power(const_411.astype('float64'), relay.reshape(var_410.astype('float64'), relay.shape_of(const_411))) # shape=(9, 5, 10)
var_440 = relay.var("var_440", dtype = "float64", shape = (9, 5, 10))#candidate|440|(9, 5, 10)|var|float64
bop_441 = relay.logical_xor(bop_429.astype('int8'), relay.reshape(var_440.astype('int8'), relay.shape_of(bop_429))) # shape=(9, 5, 10)
output = relay.Tuple([bop_412,bop_441,])
output2 = relay.Tuple([bop_412,bop_441,])
func_453 = relay.Function([var_410,var_440,], output)
mod['func_453'] = func_453
mod = relay.transform.InferType()(mod)
mutated_mod['func_453'] = func_453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_453_call = mutated_mod.get_global_var('func_453')
var_455 = relay.var("var_455", dtype = "float64", shape = (9, 5, 10))#candidate|455|(9, 5, 10)|var|float64
var_456 = relay.var("var_456", dtype = "float64", shape = (9, 5, 10))#candidate|456|(9, 5, 10)|var|float64
call_454 = func_453_call(var_455,var_456,)
output = call_454
func_457 = relay.Function([var_455,var_456,], output)
mutated_mod['func_457'] = func_457
mutated_mod = relay.transform.InferType()(mutated_mod)
var_504 = relay.var("var_504", dtype = "float64", shape = (14, 9, 4))#candidate|504|(14, 9, 4)|var|float64
var_505 = relay.var("var_505", dtype = "float64", shape = (14, 9, 4))#candidate|505|(14, 9, 4)|var|float64
bop_506 = relay.multiply(var_504.astype('float64'), relay.reshape(var_505.astype('float64'), relay.shape_of(var_504))) # shape=(14, 9, 4)
output = bop_506
output2 = bop_506
func_510 = relay.Function([var_504,var_505,], output)
mod['func_510'] = func_510
mod = relay.transform.InferType()(mod)
mutated_mod['func_510'] = func_510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mutated_mod.get_global_var('func_510')
var_512 = relay.var("var_512", dtype = "float64", shape = (14, 9, 4))#candidate|512|(14, 9, 4)|var|float64
var_513 = relay.var("var_513", dtype = "float64", shape = (14, 9, 4))#candidate|513|(14, 9, 4)|var|float64
call_511 = func_510_call(var_512,var_513,)
output = call_511
func_514 = relay.Function([var_512,var_513,], output)
mutated_mod['func_514'] = func_514
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1065 = relay.const([[[0.675669,7.273974,1.574213,-9.880166,4.462901,-7.104409,-4.780106],[0.193450,-6.980375,-5.392521,2.030305,-2.438922,-5.515285,7.256974],[9.342193,3.430145,-2.534877,2.612919,-6.805940,2.885830,-5.111622],[-9.895749,-2.709458,-4.961106,-3.554876,3.260955,2.445990,8.114847],[3.061494,-9.834746,-2.204189,6.151098,-6.516990,-2.262529,-1.242185],[-6.738894,7.044457,5.963353,-0.011359,9.788978,-0.158127,-9.479511],[-7.324174,1.496795,2.712682,-5.404323,-2.509870,-1.439561,-4.728541]],[[1.706379,-8.505682,6.074100,-7.826875,9.092879,-7.471669,2.025162],[1.554018,1.321948,-7.225320,6.092465,-4.747971,1.419784,1.128662],[9.581552,-2.264844,-4.909106,8.157499,-9.848486,-4.981037,-5.752048],[-3.430617,-5.159067,-8.019294,3.916648,-9.396421,-8.320541,-9.414213],[7.539874,8.626686,-0.930320,9.735900,-5.018037,-9.512369,0.410156],[-7.217739,-0.623940,6.844109,4.475794,-7.624081,-2.354659,7.650734],[8.463165,-5.885747,-5.363476,7.514780,5.001413,5.623740,1.814063]],[[2.017793,7.158061,1.818485,-0.243398,-1.191438,-4.119394,8.942029],[2.015045,2.620683,-5.201604,-7.758276,1.451927,2.053338,-5.801785],[-0.315283,7.805961,-8.506324,1.779909,-8.079521,2.934398,6.090153],[1.789366,-5.477196,-2.117516,4.805706,-9.287571,6.870275,0.238197],[-9.748048,5.667665,-8.114206,-5.584033,5.265234,-3.813623,-9.834447],[-8.414301,6.896770,-9.531135,2.340829,6.516812,8.237191,-1.088281],[8.956246,-0.133409,0.213960,-1.262843,-8.377191,5.633653,-3.660941]],[[9.395406,4.121824,5.690584,1.195720,-1.017476,-8.425689,2.337711],[1.581036,-9.042528,8.046937,9.953951,-6.791834,-0.245388,-1.989048],[1.769644,8.862414,8.754997,-9.226851,1.836574,-6.587565,-2.838791],[2.886182,5.023095,0.070804,8.834926,-2.208280,-4.107950,-1.086574],[1.467710,-0.831047,-7.965850,1.796939,-2.831403,-4.647252,4.159229],[0.224680,9.897821,2.986107,-1.635278,-7.740198,4.465260,-6.124947],[0.864329,0.584161,3.326253,8.327208,0.370584,-2.356081,3.173942]],[[-6.553146,3.820866,-0.366482,-3.285201,5.847846,4.317339,1.872025],[-6.546662,-3.693765,-9.491251,-7.364526,3.112082,8.214114,-9.470744],[-4.116102,-4.432179,-7.840892,-8.903215,-2.814861,-8.794506,6.625184],[3.143341,3.678283,-3.579833,-4.800807,1.327447,0.030151,-4.958317],[3.825584,-6.235070,-2.403346,-1.111190,-6.975126,-4.249958,-0.798089],[8.395955,-0.355159,-9.262987,-3.142427,0.808346,0.949891,-4.100865],[8.539797,-6.115744,9.782620,-8.959190,5.821760,1.981148,9.253536]],[[8.103024,-0.495857,-0.779097,6.970991,-5.474074,7.334514,-8.271147],[-7.005491,7.374660,-5.247333,3.953948,-5.023831,2.111078,-3.615133],[-5.573588,-9.502367,9.022781,-3.650193,8.394363,-2.233295,0.102778],[2.272189,1.518279,-9.336148,8.309094,-0.476236,6.193902,-9.403523],[-5.196625,3.476478,4.592955,-1.352135,-2.729653,-5.733380,0.103934],[-5.029990,-6.796499,-3.873579,9.469836,7.514834,8.509070,3.979148],[-4.005067,-3.747258,6.730678,1.768308,9.649017,4.298331,-5.439511]]], dtype = "float64")#candidate|1065|(6, 7, 7)|const|float64
uop_1066 = relay.asin(const_1065.astype('float64')) # shape=(6, 7, 7)
output = relay.Tuple([uop_1066,])
output2 = relay.Tuple([uop_1066,])
func_1071 = relay.Function([], output)
mod['func_1071'] = func_1071
mod = relay.transform.InferType()(mod)
mutated_mod['func_1071'] = func_1071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1071_call = mutated_mod.get_global_var('func_1071')
call_1072 = func_1071_call()
output = call_1072
func_1073 = relay.Function([], output)
mutated_mod['func_1073'] = func_1073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1077 = relay.var("var_1077", dtype = "float32", shape = (12, 8, 3))#candidate|1077|(12, 8, 3)|var|float32
uop_1078 = relay.acosh(var_1077.astype('float32')) # shape=(12, 8, 3)
func_510_call = mod.get_global_var('func_510')
func_514_call = mutated_mod.get_global_var('func_514')
var_1081 = relay.var("var_1081", dtype = "float64", shape = (504,))#candidate|1081|(504,)|var|float64
call_1080 = func_510_call(relay.reshape(var_1081.astype('float64'), [14, 9, 4]), relay.reshape(var_1081.astype('float64'), [14, 9, 4]), )
call_1082 = func_510_call(relay.reshape(var_1081.astype('float64'), [14, 9, 4]), relay.reshape(var_1081.astype('float64'), [14, 9, 4]), )
func_453_call = mod.get_global_var('func_453')
func_457_call = mutated_mod.get_global_var('func_457')
const_1085 = relay.const([-0.635455,-2.686597,-7.792606,-4.134475,-3.389331,-6.071308,2.289026,-7.167314,-8.844726,8.140999,3.429251,-1.410205,-1.528330,-3.896579,-2.997677,-9.231585,-7.398345,3.170691,-9.136711,0.866551,9.447047,-0.435165,4.855876,-5.109634,-4.332617,8.463925,-5.119911,-5.027198,-0.458318,-1.688295,4.546401,3.519731,6.071412,-5.227354,-5.047146,-0.495879,-0.760683,8.507953,-7.379546,6.245810,0.966149,-1.892739,-7.431188,7.335085,-9.863506,7.222044,-0.304348,7.947454,-6.035824,0.741335,8.353133,-4.651790,6.540711,2.639399,6.056945,-2.781919,-7.467123,-8.313116,0.260637,8.753762,-6.404780,7.918043,-1.087264,-2.258524,8.286599,9.616828,-3.314118,-7.454555,1.516603,9.233300,-6.539074,-4.429676,-4.151782,-7.496656,-0.943598,1.535721,-3.899681,8.085876,7.852248,7.492687,6.263400,-4.910225,-7.009816,3.258938,-1.049733,-6.958503,7.448395,0.706805,-5.948545,6.680444,-3.858769,8.073492,-0.357323,5.817198,-6.937317,-2.815535,1.404854,9.803933,2.689940,-9.845808,9.370226,-9.219582,1.898024,8.489640,8.303488,-3.860063,8.667040,4.871871,-2.077968,-6.762174,5.654750,-9.008624,3.818275,7.375419,5.186895,-0.180124,-6.437917,4.498601,4.154982,0.048208,4.976753,-2.129793,0.431468,-7.730613,-0.944063,8.536393,6.564201,-8.205955,5.740418,8.472528,9.775711,-6.238182,5.947593,2.046291,-8.726560,5.273398,-7.933268,-6.262798,9.761478,4.199679,7.019074,-1.612202,4.407883,7.361612,-4.723160,7.596701,8.220369,0.615263,3.311948,5.159460,-5.604997,9.703886,-3.695029,-2.369583,7.766823,7.520900,-2.478626,3.954961,-5.390876,0.285342,-2.537556,7.266997,-8.768937,-8.000898,0.045657,0.909182,-1.612422,1.719202,-6.839061,0.900617,2.346313,4.076658,-7.953097,4.404856,5.542718,4.482222,9.792116,9.989488,4.444409,8.225667,3.752167,-9.158241,-6.177036,-8.592261,-3.624781,-9.689855,-5.990924,1.593522,-3.513992,-1.387147,0.005440,8.064657,-1.708180,-4.334441,-9.966544,-5.896449,-7.525815,-6.013811,-3.219555,-0.260132,-4.335435,6.699474,-1.246667,9.600070,9.607078,-2.890841,8.248007,-1.592635,7.241112,4.081404,-9.704759,0.552616,5.623038,0.975330,7.326916,-2.111609,-0.720313,-6.348100,-5.693369,-4.237302,8.769340,4.282758,-0.080964,-4.164254,-4.376826,-0.307494,-0.420668,-4.566078,0.145441,4.068418,6.883405,-7.098528,6.595007,-8.153241,-8.457863,-9.232758,9.736144,-0.167059,9.852120,2.871308,-8.183863,-2.283024,-2.484090,-8.395948,5.365939,-0.427941,7.839833,-9.594063,7.659429,0.524546,1.816791,-4.222468,8.894801,8.994250,6.858634,-7.730485,-2.500150,-8.534926,2.352263,-8.661524,7.175682,6.859904,1.217728,8.782224,-9.180209,-7.465952,-1.511178,4.936906,2.609593,-8.123323,1.388520,-7.966032,-3.661129,-4.496647,-2.836688,-8.517156,4.853170,-4.419436,2.795238,-6.951655,-6.161627,-0.040158,5.427040,-2.285691,-2.367591,0.960930,-2.301143,4.487445,9.871553,-4.118696,-7.430567,3.096216,9.899586,-8.099610,0.966680,-2.438958,8.203236,1.455809,-3.247774,4.479429,-8.721920,7.379712,-4.078939,8.357165,-0.438591,2.554378,-5.132753,2.354237,7.193873,5.539103,-8.695669,-9.849103,-7.629204,-8.530128,-9.655722,9.585261,-8.551474,1.294324,0.981851,-0.183195,-8.531665,-1.982661,-4.780476,-0.941679,1.457012,1.771248,-0.651881,7.997417,2.264582,2.100142,8.473558,-0.378609,4.048999,-1.092190,5.893881,5.492658,0.461262,-5.857314,3.638909,0.292846,-4.558760,-9.322336,-1.321893,7.288942,4.402015,6.094299,7.342781,-2.443394,4.182497,8.056002,-4.657247,0.708376,-1.081845,2.644888,-3.753574,-6.695071,0.384639,9.939377,-1.807501,9.089283,-4.915714,-9.156821,8.612632,-2.461570,-1.951078,5.446610,-8.314270,-5.692276,-2.132495,-8.450364,-3.280815,-0.508359,2.734584,6.173577,-0.281223,1.953661,-8.587295,3.824414,0.362057,-5.191765,2.452051,-9.685328,-9.239123,1.184993,-3.285349,-2.913255,-1.952983,9.475175,-5.826011,-9.267966,0.082931,9.513651,4.416044,8.089220,4.880971,-2.260145,7.562757,-5.179399,0.381116,2.015344,-0.540345,-3.541953,-3.089258,-9.399735,9.380089,2.267243,1.131693,-2.256970,6.475957,2.679068,5.254990,-4.089276,-7.048870,7.021702,-3.256340,7.098153,-9.361520,1.625668,4.100240,2.319385,-5.992329,-4.899094,-1.450926,6.315318,-1.726858,-8.659623,-9.762696,2.580108,1.662383,4.233930,5.969532,-3.306509,-5.036360,-2.166714,-0.230287,-0.947485,-3.885184,-6.639308,1.815111,5.164023,-1.502242,-4.579241,-5.089784,9.005889,-6.251630,3.050470,6.430300,6.012158,9.512318,-7.899253], dtype = "float64")#candidate|1085|(450,)|const|float64
call_1084 = relay.TupleGetItem(func_453_call(relay.reshape(const_1085.astype('float64'), [9, 5, 10]), relay.reshape(const_1085.astype('float64'), [9, 5, 10]), ), 1)
call_1086 = relay.TupleGetItem(func_457_call(relay.reshape(const_1085.astype('float64'), [9, 5, 10]), relay.reshape(const_1085.astype('float64'), [9, 5, 10]), ), 1)
output = relay.Tuple([uop_1078,call_1080,var_1081,call_1084,const_1085,])
output2 = relay.Tuple([uop_1078,call_1082,var_1081,call_1086,const_1085,])
func_1108 = relay.Function([var_1077,var_1081,], output)
mod['func_1108'] = func_1108
mod = relay.transform.InferType()(mod)
mutated_mod['func_1108'] = func_1108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1108_call = mutated_mod.get_global_var('func_1108')
var_1110 = relay.var("var_1110", dtype = "float32", shape = (12, 8, 3))#candidate|1110|(12, 8, 3)|var|float32
var_1111 = relay.var("var_1111", dtype = "float64", shape = (504,))#candidate|1111|(504,)|var|float64
call_1109 = func_1108_call(var_1110,var_1111,)
output = call_1109
func_1112 = relay.Function([var_1110,var_1111,], output)
mutated_mod['func_1112'] = func_1112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_1138 = relay.TupleGetItem(func_1071_call(), 0)
call_1139 = relay.TupleGetItem(func_1073_call(), 0)
output = relay.Tuple([call_1138,])
output2 = relay.Tuple([call_1139,])
func_1140 = relay.Function([], output)
mod['func_1140'] = func_1140
mod = relay.transform.InferType()(mod)
output = func_1140()
func_1141 = relay.Function([], output)
mutated_mod['func_1141'] = func_1141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_1147 = relay.TupleGetItem(func_1071_call(), 0)
call_1148 = relay.TupleGetItem(func_1073_call(), 0)
uop_1150 = relay.asinh(call_1147.astype('float32')) # shape=(6, 7, 7)
uop_1152 = relay.asinh(call_1148.astype('float32')) # shape=(6, 7, 7)
bop_1168 = relay.floor_mod(uop_1150.astype('float32'), relay.reshape(call_1147.astype('float32'), relay.shape_of(uop_1150))) # shape=(6, 7, 7)
bop_1171 = relay.floor_mod(uop_1152.astype('float32'), relay.reshape(call_1148.astype('float32'), relay.shape_of(uop_1152))) # shape=(6, 7, 7)
func_79_call = mod.get_global_var('func_79')
func_81_call = mutated_mod.get_global_var('func_81')
const_1180 = relay.const([-8.740644,-0.256232,9.496609,1.073722,5.712751,-5.080441,8.699939,7.230958,-0.005067,-0.671115,-1.707976,0.620477,0.042462,7.817219,-0.056811,3.849604,1.304530,6.691319,-7.695336,0.307711,0.001324,2.694706,-7.396502,8.658349,6.531209,0.787779,-6.925554,7.052364,-8.745415,-5.949867,-3.636756,7.069270,-5.655612,9.203398,-3.550747,-7.623755,-3.626559,-8.270687,-5.314555,7.945944,8.173855,-0.107006,9.151741,2.218835,-2.142089,5.722410,7.923919,-6.647578,9.839770,-4.300355,-2.498469,0.935889,-9.798900,-5.573313,-3.026890,-3.942409,-0.682087,4.280571,-7.530447,4.118284,-3.717718,-4.119622,-7.568384,7.805356,-9.642451,9.535663,1.018090,2.890083,-8.670437,-3.424522,3.799222,-9.358468,9.881099,-8.628223,-6.165890,-9.885028,-4.986326,-8.449684,-7.624012,-4.460835,6.552124,4.964192,6.625467,-1.342742,-8.530649,-2.678762,6.140290,-1.615363,-9.972853,-2.165606,-5.599973,4.042334,4.015379,9.407022,-0.878630,-8.397174,7.836177,-8.426458,-1.422050,-9.446840,2.654205,2.597859,7.855336,-0.552665,-6.303546,-8.022158,1.372444,2.012544,4.953995,-1.077225,-0.047360,8.367669,1.344821,-1.937821,-9.761158,-2.509890,2.298787,-8.445863,6.102496,-8.192570,-7.163570,6.260081,7.977892,-0.716451,7.408375,-8.582094,-9.236383,-5.817649,3.271876,4.124946,0.119317,9.183813,5.684699,-9.593342,-8.213714,-1.385916,9.929057,7.673744,-2.736948,-3.644824,-1.203973,-2.136644,-0.208500,-5.187368,7.686642,-3.238285,-3.061521,-9.376638,5.418096,-2.369381,4.115058,-6.324014,-1.644472,0.417209,-6.214740,1.410522,-5.196616,4.745293,-2.574857,-6.916281,7.710592,-6.227196,1.760925,-2.346354,2.521762,-5.606996,4.838242,-4.709636,-1.861450,0.640094,4.608551,-9.464810,-9.470777,-6.206580,5.602112,-5.263456,5.548525,-7.697255,7.558942,-8.600908,-7.739143,-2.547320,8.183729,0.790150,-8.787692,-5.643326,8.279397,-3.426728,-4.445476,-9.129799,1.907982,4.325635,-9.987891,6.977674,-8.035920,-2.608047,4.537691,-7.299882,4.818716,-4.505894,-6.614563,5.247556,4.355280,4.958173,8.693527,-1.803616,0.106558,2.687351,8.303943,3.242965,-8.215227,-0.012338,-7.380719,4.045754,4.320124,-3.849955,-4.250951,9.731403,4.062656,-6.595596,3.819771,4.557476,-5.850024,-5.405070,-3.040638,6.560036,4.025665,-5.959450,-4.216720,-8.873437,4.230204,-2.450068,-1.789101,-2.344141,-8.786603,-4.894625,0.121972,-7.473961,7.079951,3.018017,1.388315,-6.079658,6.851669,-9.616264,-9.408919,4.826538,5.543461,-6.976162,1.531588,5.960299,5.360683,1.743611,-3.826810,-7.260172,-5.472794,8.831227,-5.524049,7.440514,-3.081868,1.508800,-7.254641,-4.365825,-5.940704,7.377929,4.666298,-5.795630,4.435428,7.986165,5.278258,7.896859,-0.189270,6.596405,-7.652944,-2.177990,8.529476,-3.020103,-4.485430,1.562075,4.428616,-4.137577,-6.718645,4.009668,2.293969,4.680351,-0.951451,-0.231799,4.926294,6.803032,-1.088565,-4.545818,0.793893,1.562948,9.490891,5.611646,-7.884483,-3.763221,-6.996251,-4.306458,-7.177742,-6.425317,-2.519922,3.658323,5.067973,8.463816,-0.638025,0.813042,-9.827790,0.987259,9.591336,-5.225548,5.698185,-5.881425,-1.818133,8.074124,-1.387783,0.151686,-6.699719,-9.851999,5.696413,-3.253421,1.754756,-1.789688,-4.590958,-4.521984,-9.653576,4.672816,7.158616,6.658204,-4.012358,-1.640822,-8.399539,6.696210,8.777903,-3.908659,-6.068910,-9.158165,-9.934210,0.640787,3.145946,4.411174,9.941714,7.816781,-7.092224,-7.163473,4.429395,-1.036186,4.613141,-0.128519,2.928289,4.526814,2.960469,-8.303272,-0.407861,1.052695,4.552390,0.125936,2.398771,9.199255,8.785698,4.243088,-1.297323,4.453591,3.049554,-2.259874,-8.777124,-3.110896,-9.511357,-1.693372,7.282342,-4.179243,-6.604508,3.459824,-5.439673,3.901161,-2.732328,-0.248690,-4.515775,-0.491642,0.041610,4.629659,9.732535,-8.855063,-1.758645,-7.088893,-5.106751,-3.056273,2.940659,-7.782287,-3.871219,8.290623,-3.582928,9.780433,7.814045,2.612884,4.088797,7.173399,-8.053386,-5.897508,-1.339388,-5.010202,3.193951,0.442562,-8.712724,-7.236050,5.432889,-6.649176,3.059214,9.877657,0.927851,9.029234,9.542967,1.370542,-0.387495,-2.352763,8.727631,1.996569,7.685144,8.644378,7.780640,-0.889867,2.927247,-8.596707,-6.273225,-3.291344,-8.285183,-2.963965,-6.791425,-6.838192,9.223057,4.669139,9.834640,8.273702,0.359551,3.300474,-3.541950,2.447139,-0.648011,-3.622270,2.510534,-1.601874,3.472629,7.135054,3.129493,-9.579563,-4.968830,1.847395,6.453534,-6.224084,2.561359,5.409854,0.544069,2.478150,-6.894799,1.514972,-9.006572,-5.733975,-8.738359,7.282220,6.373119,0.462630,0.903307,1.517827,5.812210,6.894732,7.229191,4.668927,-9.660902,-9.548404,-2.983782,-2.184267,-6.136972,-8.447118,7.167313,-3.639733,-2.553811,-3.310215,-4.324735,-5.607214,-8.343808,-8.118264,-0.617319,-9.042261,-6.758910,8.620337,-9.467141,-7.358434,-2.758413,-3.708835,-2.578854,-3.517369,-3.510443,5.976130,2.645667,-9.352738,2.363121,3.045406,-4.767960,-6.790273,8.142009,-1.755907,-8.365235,-8.613453,4.608663,-1.315295,6.583184,-2.757993,8.923143,-9.041076,1.280002,-1.680340,5.630381,-0.464291,-1.913482,-7.439655,1.759562,0.984464,9.591752,-9.045069,-1.963803,3.624885,-8.767411,5.417066,3.359570,-6.688845,2.587634,0.360382,-5.689702,-8.385713,9.650491,-8.357195,7.168465,-9.095193,2.571708,-8.233667,7.138711,1.229510,4.982886,5.078807,-6.818970,-1.748217,0.967237,-7.984115,2.909481,-2.472041,-5.800343,8.834020,-9.777541,-8.142158,3.297261,-3.542518,-3.457300,-1.742996,-5.344962,-3.827643,7.439009,-8.676105,1.655244,-6.158678,-7.138466,9.813735,-5.090416,-5.530707,-7.298994,-2.026318,3.669959,-3.778268,2.173802,-3.387782,-4.466825,-3.930226,4.510667,-6.385841,-6.417113,4.788658,4.548402,9.692561,-4.592340,1.962038,-6.559846,-9.229260,-5.686589,-5.598401,6.995377,6.745574,0.051856,6.846716,0.815074,7.653046,-9.262673,-1.159385,4.370890,3.677928,1.946407,-6.210619,8.191046,-6.207490,0.534100,1.825096,3.650895,9.421052,-5.789471,2.305265,-6.094629,7.556961,6.113264,4.058565,6.965045,-8.632503,8.156379,8.082264,8.577161,-8.566197,-1.424117,7.398325,-6.901196,-8.647413,1.424319,-9.926579,7.191432,8.324860,4.586492,8.351030,8.200416,-3.434071,1.527592,7.376341,4.190557,8.406709,8.021898,0.727698,0.521872,8.671447,9.278234,9.278731,5.968677,6.134817,1.180380,-9.074801,8.464553,0.637452,-2.131924,6.315892,-4.615051,2.475557,-4.728836,7.391631,-3.017708,-3.166439,6.807627,-3.189079,-4.699847,6.829616,7.642431,8.244946,-3.993256,0.088693,1.893057,-5.388739,4.244062,-2.627279,-1.639911,-3.424459,-2.659888,-1.200646,-1.044766,-6.293431,5.133465,-9.023980,3.585022,8.218186,-4.298664,-2.054132,7.417348,6.869690,-5.328475,-1.548822,9.200186,-5.092932,-4.313917,4.181438,8.741335,3.507339,-5.540534,6.582794,5.122789,9.721495,5.326409,-3.709994,4.291434,-8.462927,2.817286,-5.145728,7.693136,-6.213497,-7.345148,-8.671267,1.813887,-8.176410,4.744195,-1.818489,-2.187627,-0.872894,8.853264,-0.243446,-0.505427,6.409461,-2.132050,-8.423236,-4.573027,7.817866,5.778361,-5.709413,3.107493,-6.014436,6.517351,-0.998458,-3.009934,8.724726,6.449521,-3.597477,-0.574036,9.898797,-4.325958,-9.126560,-2.045902,6.283246,0.745665,-4.144488,-9.925086,7.512862,7.867163,2.560814,-5.626825,-5.554117,-8.867292,7.887544,-0.556290,6.412205,2.700966,1.824930,5.446693,3.599640,-5.279997,-8.453816,-7.724772,-3.124921,7.266330,6.463654,5.499774,4.044796,4.078967,-0.627744,5.737959,-5.264773,-6.691377,-8.480593,-2.394969,-6.485884,3.417137,4.640047,9.425382,-1.362847,4.104339,-4.662230,7.493906,-5.630376,7.745130,-7.758844,0.501772,3.748726,-1.682387,9.860764,0.076862,6.484640,-5.839832,-5.804915,2.685198,-3.104596,-8.712128,4.678431,-8.687349,-5.856503,-2.600827,-7.979312,4.916114,1.014807,3.392991,-8.951897,8.533547,-0.818392,-5.329909,8.241141,8.096799,-3.885673,-4.596511,6.204052,-4.265713,-6.844279,-7.505889,-0.324691,-2.268971,9.418377,-6.366543,-9.512193,9.897238,-4.282718,9.957555,3.533653,5.361927,0.622001,9.141980,6.969707,-4.288193,6.948149,-9.231327,6.031749,7.402502,7.338290,-3.246057,8.768378,-0.929581,-2.162722,6.532640,-5.342183,1.774682,3.757845,-7.790674,-7.499758,-1.057228,1.107045,5.445699,-6.340024,1.248300,7.206619,6.839942,0.120585,-8.823763,-4.024743,-3.420159,-5.464139,-8.225625,-0.160145,-0.577497,8.116508,-2.296865,-3.507500,8.009049,0.960927,-5.817165,5.754176,3.102052,5.462353,-3.540219,-9.301049,-5.092744,-8.421635,-0.020921,3.657703,-8.848511,2.064584,2.150251,-4.520352,-6.101883,3.876246,-3.425610,1.349859,5.135246,1.141411,-7.762545,-6.167090,2.153383,2.036371,-7.752542,-7.107442,9.631218,1.606306,4.014474,-3.429745,2.432127,-1.292556,-8.260368,-1.769045,-0.109249,4.226875,8.477931,3.444241,-8.388171,-8.791795,1.229304,8.007370,-3.637607,5.364610,2.629278,-8.411444,0.593573,-4.074702,-1.761505,-7.866078,9.771040,5.714842,6.312773,7.324741,4.724524,-1.506591,-3.248832,4.877325,3.561344,6.713921,-5.619475,2.199330,-7.971828,7.453481,-0.114373,-9.190632,5.923417,-8.013746,-8.940372,4.742842,3.715885,1.788783,5.540740,6.607673,4.617211,9.567550,-3.595831,-7.350285,9.614504,8.250097,7.127956,8.155996,5.104491,1.851467,4.021683,8.366863,4.700536,-7.294457,2.644831,2.833636,-7.349034,5.270073,1.416336,-0.119945,3.652898,2.221465,3.032196,-0.585563,-4.009959,-3.791070,-2.846958,8.293394,-5.042383,-9.838240,1.310988,9.550888,5.048438,-3.812570,-0.018658,1.251878,-0.023896,-8.930936,5.614979,-2.115573,-3.205334,7.477002,-2.525390,-1.551678,-3.551769,-8.573391,-6.586332,-2.494350,-8.644539,2.399176,3.854984,6.154980,6.395883,6.769853,-2.454785,-3.181393,-6.850743,0.334571,-0.073871,-7.680663,-9.417259,-8.211474,-2.508929,-5.411084,9.756679,7.210164,-8.983426,-6.114038,-4.583471,-9.262144,5.721002,0.014747,-3.498053,-8.771089,1.332686,-9.811810,-9.183006,-0.944290,3.372981,6.926839,-6.081747,1.736824,7.341274,-6.590015,2.518722,-8.726221,-6.948489,-6.033029,-5.856304,0.686591,3.774854,-6.480334,2.080884,-3.618748,6.504617,3.746674,-1.461108,9.096085,3.019860,5.367880,-1.467442,6.962563,-5.275553,-0.427047,5.654461,-9.709342,4.343242,-9.922768,5.555129,9.278667,-7.941327,6.772367,8.639222,0.196122,-1.539719,7.668233,-8.829859,3.519552,-6.508904,-1.188667,-4.072733,9.981531,1.480367,-5.638387,-5.732723,5.241277,-4.905791,-9.835989,8.314398,-5.152502,-9.827046,0.820226,0.037290,6.279353,-7.312284,1.512102,-4.854020,-9.748410,-0.289718,2.576387,-4.412018,4.412798,2.510238,-1.488984,6.772375,-6.161658,-5.802395,5.549035,0.791619,4.638179,-3.298634,-0.382935,0.655130,-7.661247,2.486738,3.167358,-6.964004,-0.673001,-6.523849,5.898303,-0.991460,0.836440,4.576291,-7.022498,-7.230277,-4.525114,-9.101988,2.901300,7.692880,5.300756,8.698406,-6.494676,0.026456,8.958045,3.949381,-2.487916,1.439391,-9.697736,-4.014860,4.671911,-0.952646,4.821047,-6.789626,6.137716,-4.525241,-7.103223,0.966603,2.048285,2.775749,-8.462715,0.851692,-7.794621,-7.824162,8.844025,9.663266,8.507640,-2.526342,-4.181940,-4.579767,-8.234839,-0.057952,-9.623243,4.764088,9.158467,6.645272,7.754199,-7.543188,2.947753,-6.886395,5.994743,4.660143,-9.409439,2.037818,-4.103195,-4.770626,-4.350745,3.600632,-9.068354,-7.626919,3.201212,4.477380,7.519971,1.089288,-7.182999,0.655503,1.394105,2.784676,2.051299,3.410935,-6.834468,-3.872679,-0.519384,6.263260,9.659474,-9.392063,5.248437,3.866168,6.135796,7.335457,5.183730,2.346820,1.168419,-5.193829,6.239185,-8.182488,0.883254,-7.124604,-8.114634,-8.950593,-3.442859,8.814210,-7.869423,-1.199638,9.253347,9.629612,-0.408571,8.326815,4.324023,-7.828836,0.451295,-9.353603,-6.815962,1.749010,2.897136,-9.635203,-9.513917,3.620447,-9.398989,9.342565,-8.877682,-9.178991,2.057020,-8.033056,4.314105,-1.190313,-1.878795,6.676816,3.235642,6.077093,-0.961637,-4.663041,1.405259,8.664052,5.179061,1.026328,-6.355410,3.881891,-5.534910,-0.793035,-9.780827,-4.027614,-9.026103,1.973042,-1.918641,-4.376277,-3.573747,-0.970981,-1.713233,-3.195749,-8.496190,7.346416,5.781010,-8.274883,6.814387,-0.854614,2.698541,-5.787372,-9.777303,-8.584889,-4.902850,-5.292902,5.646019,5.160343,-3.160950,-3.974980,6.796242,4.197084,-1.303994,-4.601551,8.093856,0.603857,-2.939997,-2.379303,-8.105863,5.620663,5.392421,6.878010,-6.891414,-7.659458,-8.903161,8.311436,9.321265,9.591343,1.403595,5.521380,-3.655425,8.820855,-2.920118,8.066392,-9.523362,7.840567,-1.251553,1.900206,2.998256,-9.495812,-6.158126,-3.356661,-1.073599,9.538946,1.501092,-4.465177,9.835426,-8.803923,0.558699,-1.267853,1.826093,9.271719,7.421798,-6.064572,9.562815,-2.456020,5.559000,3.436889,-6.420467,5.952312,1.160300,8.591749,9.838436,-1.465421,-6.766761,6.025640,-9.586013,0.865885,3.169065,9.983116,-1.476473,-1.069591,-5.111568,-5.954062,-0.100630,-7.421747,4.734202,-5.931683,-0.860605,-5.414890,-2.255007,-9.715809,-5.348309,-5.117730,1.218325,-0.550135,7.721777,9.505189,-8.467085,8.234267,7.481569,-4.660096,4.964204,-6.678704,8.494796,-9.150782,-1.393931,0.140433,2.332875,-7.938517,0.753710,-8.819743,5.822226,-7.827924,8.391453,-1.564352,5.280060,-2.719013,7.209206,-6.881055,7.397101,-3.119507,3.340476,-9.597175,5.173295,-9.363292,-7.682636,-6.681824,-0.735975,0.772659,-0.050900,7.970104,7.296976,-7.246154,-0.590150,8.110631,-3.448261,0.899921,3.826225,-3.233174,-7.188370,7.690344,4.713369,-2.227067,-1.181279,-0.305599,2.437110,2.099484,1.872280,1.678967,-1.109816,8.258741,5.371791,6.839977,-8.281042,4.861384,-6.115085,0.650520,-1.575160,6.562868,-8.590084,2.735557,4.168325,-5.601583,1.909987,-1.736059,-5.454796,-3.208377,-3.646633,7.853930,8.926418,5.221738,2.750080,3.891414,-5.446518,5.873828,-1.227503,-7.667972,6.423156,-1.003330,0.754871,-0.214099,-7.486307,5.286797,-6.918488,-6.016199,3.192581,3.720487,-6.033527,3.597796,-7.509657,4.142956,5.449082,-5.576339,-6.927992,6.439532,-1.435264,-0.524805,-9.714765,3.415039,-1.383772,-1.759994,-0.422932,-9.555426,4.342147,2.154834,-5.694070,-6.943706,4.750699,-9.301754,-1.243198,7.300932,-5.548609,4.684380,2.906390,9.847521,-9.475729,3.258610,-4.728032,-9.398019,2.543993,7.519906,-8.740596,-8.571753,-2.948936,-6.334457,-1.297559,1.394777,6.536554,-0.885072,-0.156309,-4.195122,0.960380,7.258777,1.192400,3.304575,1.340412,0.626021,2.563683,5.420375,-3.779968,-7.457986,4.440626,0.435985,-5.195427,8.492383,-2.631654,-4.037693,-5.825692,3.455602,2.257106,-3.471056,4.238087,-5.625529,3.315629,-5.983895,1.025147,1.320720,7.459226,0.554301,-4.541256,-7.061949,-2.051682,-8.696962,-2.722700,7.699274,9.971181,-7.357335,2.631742,5.504168,3.324554,-0.075743,-0.062384,4.299986,2.860520,6.126110,-2.468655,-8.703285,-0.072659,2.774725,-3.015121,-1.940092,-7.647734,-7.348284,-9.965498,0.207410,6.290294,-4.858754,1.730807,9.554271,0.092731,-0.479839,-0.966586,-4.482538,3.475558,4.785537,-0.594783,2.801180,1.831337,-5.819193,8.843361,9.099559,-5.068435,-7.647050,7.817404,-0.969737,3.756222,-0.474452,7.940865,-0.762976,-0.752195,-0.542696,-6.542043,-6.913526,1.101475,9.020987,-4.807487,4.483376,-6.140958,-9.535292,-6.342084,-8.502339,9.730360,0.843460,-1.634703,5.902074,-1.306931,3.009766,-7.057652,-1.340832,7.010465,-5.618765,-1.240401,-6.744776,-3.166776,-9.778186,2.988946,-5.143143,-6.761904,5.143894,9.051114,6.403795,-4.227145,-2.886969,-4.197982,-1.524259,-2.936932,0.396855,-2.857815,-7.139931,-7.264500,8.018790,4.731124,-4.287071,-7.945554,-4.762757,5.948119,7.121614,4.597316,-9.862821,-8.529922,3.799502,4.775303,1.701678,-0.167458,-4.925835,-7.739957,-5.824019,6.735059,1.375631,-6.536907,-9.405514,-6.862726,7.380324,4.395591,1.601398,-7.456110,3.461634,-0.917298,3.795483,-5.020955,0.020227,-2.052544,-6.988428,8.274857,5.264237,-2.760484,7.907409,0.552177,-6.401468,-1.524539,-7.620531,-9.735343,-3.681436,-6.047722,8.397747,-9.005841,6.711919,-4.912989,-1.223924,-8.397774,2.668570,2.914241,8.269662,1.253321,-3.565449,6.731785,-1.517856,-2.674551,-4.018213,-6.449126,2.474638,8.692192,7.921527,-5.337003,1.421835,1.529912,0.081264,8.046345,8.250688,-3.467522,-6.457225,-1.789264,4.568961,6.135278,3.285277,8.820439,-4.266822,-2.670667,-6.104369,-2.546344,4.102606,-4.483485,-2.327638,0.909669,-3.855775,6.612248,9.530589,8.254909,-9.169775,4.327849,1.955511,-6.855927,6.771209,2.168454,-6.501455,0.493610,-7.070430,-4.723341,8.721510,-8.812893,-9.807646,-9.529150,-1.718106,-8.195301,-8.349809,-2.946944,8.342573,-2.579320,0.334539,-7.118156,9.955723,0.218829,-6.084809,-3.895278,6.394649,1.908632,0.965966,-3.396592,-2.306597,-8.432952,-4.798220,-4.147255,-8.630107,-6.627150,-5.486905,9.121747,-1.537652,0.783276,-2.403834,-4.996224,1.917088,1.104988,0.799157,-4.272151,7.203919,-5.852522,5.103840,0.991300,7.462490,-8.353862,-2.116515,8.773831,-2.830666,0.231639,8.004732,0.229955,-1.939985,8.157906,-7.964391,6.066902,-1.703794,8.029075,-8.549093,1.028449,-3.812211,9.309921,8.830122,7.266086,-3.761963,6.596978,-9.127727,-6.866889,6.637170,-7.041989,4.853275,9.351739,6.637751,0.043787,2.536308,-7.008688,-8.844766,7.460939,-5.986987,-4.123571,7.184695,-5.249121,-1.012499,-1.837554,-3.658235,3.568998,-0.870569,-9.613695,4.681983,8.018333,-9.975674,-9.708093,-0.042038,4.598839,-2.148787,4.457362,0.145035,9.053510,-3.960363,2.460280,-4.472670,-9.450397,-4.633450,-3.080533,-0.998399,-4.455343,7.621769,-4.013348,-6.851171,9.068318,9.502179,4.891310,-5.722973,-5.792806,-5.530394,-8.310864,-2.246084,-7.901720,3.076044,-4.938292,-0.450179,-6.970144,7.380591,1.512735,-0.981116,-3.569392,6.784088,-0.397444,-3.947914,-3.779442,5.354873,1.325761,8.559536,-3.533260,-1.465546,9.690952,2.879818,1.219078,-6.942483,9.513812,5.059999,-5.527225,3.554758,-4.347720,5.265472,-8.516997,7.996896,-3.369368,1.761178,9.069168,7.873086,1.121998,1.213421,0.378666,0.237155,-4.799879,-0.593267,-6.185243,-2.957396,5.402478,0.126271,-0.582613,6.167352,-9.386185,2.143102,-6.427599,-8.449934,0.894289,-1.679540,7.723867,2.514979,-3.649109,-0.258491,6.442902,-0.426328,-5.641152,6.824704,-0.300974,1.243741,5.847585,0.071429,6.085877,5.057545,8.867624,9.778898,-3.929279,-8.802343,-7.827096,6.001313,1.874719,-6.050849,4.281625,-7.020156,-8.322234,-9.369844,-6.352081,5.674256,3.206376,7.476547,4.338415,7.153158,3.717468,-9.812730,-5.136201,-1.716802,5.520551,3.275817,-2.177440,2.771926,6.510960], dtype = "float32")#candidate|1180|(1872,)|const|float32
call_1179 = relay.TupleGetItem(func_79_call(relay.reshape(const_1180.astype('float32'), [13, 16, 9])), 0)
call_1181 = relay.TupleGetItem(func_81_call(relay.reshape(const_1180.astype('float32'), [13, 16, 9])), 0)
uop_1193 = relay.acos(bop_1168.astype('float32')) # shape=(6, 7, 7)
uop_1195 = relay.acos(bop_1171.astype('float32')) # shape=(6, 7, 7)
output = relay.Tuple([call_1179,const_1180,uop_1193,])
output2 = relay.Tuple([call_1181,const_1180,uop_1195,])
func_1205 = relay.Function([], output)
mod['func_1205'] = func_1205
mod = relay.transform.InferType()(mod)
mutated_mod['func_1205'] = func_1205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mutated_mod.get_global_var('func_1205')
call_1206 = func_1205_call()
output = call_1206
func_1207 = relay.Function([], output)
mutated_mod['func_1207'] = func_1207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_1220 = relay.TupleGetItem(func_1140_call(), 0)
call_1221 = relay.TupleGetItem(func_1141_call(), 0)
func_453_call = mod.get_global_var('func_453')
func_457_call = mutated_mod.get_global_var('func_457')
const_1228 = relay.const([[-4.391881,-6.188030,-0.619850,3.092182,-7.709792,0.649098,-7.743890,5.569607,-5.356814,-4.622528,4.497395,-7.752469,0.783662,8.652732,6.327823,-7.722200,6.064514,-8.052156,3.026248,-2.055962,9.469609,-7.698106,0.754816,-1.958371,-5.418113,-0.964520,-5.189859,3.254909,-7.783067,3.531779,-4.006477,8.670292,-9.936308,8.653715,-0.497440,-6.028080,-3.970220,3.911559,-6.038634,7.752022,8.828188,1.041215,-5.762162,1.634963,2.194134,2.132155,-6.247512,5.618240,-3.071187,-2.245313,6.256587,-8.128260,5.100617,9.151849,3.863389,3.516334,-7.540006,-4.552486,3.654252,-5.789456,-5.697693,4.448820,-4.159965,-4.240091,5.030775,6.603610,7.807276,-9.528118,-2.752612,-4.972080,8.327668,-0.252995,-7.906115,-2.128608,-9.650578,-3.411173,-1.864562,-2.066293,5.776740,8.485237,9.811827,4.337900,-5.203971,-8.407472,6.382679,5.676019,-0.845256,-1.484569,-7.717337,-8.705493],[8.769509,-6.997079,-6.395358,4.547459,2.251659,3.798411,8.353861,1.130342,-2.190916,-2.567031,-6.942815,-8.801993,6.931372,-1.984091,-8.420388,5.571842,9.358806,0.138466,-7.287105,8.050823,-3.930486,-6.321512,3.321312,0.616794,7.061608,1.630954,0.684915,-1.186518,5.930363,1.461208,-9.189804,4.764490,-1.133525,4.379589,0.429692,-4.083262,2.908510,-5.592945,-2.617004,1.661395,5.422522,0.988179,-3.648620,-3.280254,-0.256408,1.057733,-1.545013,1.218725,-9.628470,9.995314,6.002766,3.704175,-4.254608,-5.417086,3.601001,2.130206,-6.956233,-4.037120,-1.519738,-9.919158,-4.240947,4.624439,2.264970,0.400474,-2.193458,0.166388,-3.966078,-7.797079,-3.976868,1.285214,-5.771286,4.717283,1.514318,-8.021413,-6.344833,9.943974,-2.631116,6.884388,2.265207,3.175750,9.544204,1.525411,0.103852,-1.184066,-4.046006,-7.408663,-2.779259,-8.606161,4.859406,-7.264319],[1.876271,-9.746673,-7.054495,0.468534,-1.361798,9.337182,-3.232872,0.264493,0.129454,7.645092,1.040909,-6.693007,8.755347,0.517836,2.234176,-1.717333,7.821522,5.240062,-0.322470,2.733127,1.149433,-8.470522,-1.169315,-6.998026,-3.193040,4.283434,3.701509,5.396306,-9.352884,7.289824,-7.381520,5.824836,-7.804168,-3.171614,2.049183,5.878435,-6.166548,-3.149927,8.251052,-2.768240,3.473752,4.894171,-0.052517,2.806313,7.675588,-6.901505,0.594418,-3.618200,-3.907095,-1.688970,-0.452586,0.427114,-3.822965,2.795892,-6.569987,5.176603,-1.559116,-6.520254,0.923174,9.374635,-7.936233,8.238098,4.180639,8.902772,-6.710165,-9.107189,9.492394,8.151009,0.958673,9.024670,6.126523,9.031453,6.994639,-6.291670,-3.765750,4.678873,1.477128,-5.460911,-2.705125,0.903172,4.156678,-5.969548,8.530102,-7.573167,-0.572242,-6.428398,-9.900912,3.051102,9.108510,0.749082],[-0.652627,-7.849286,9.123732,-2.942726,-9.952627,-9.628489,1.009835,-3.525917,-9.789569,-4.841205,-9.456016,-5.421298,-4.089684,-9.899481,9.850706,7.650759,-4.593063,-2.832034,-2.676643,-0.929082,-5.876904,6.922937,4.023022,-9.439405,-6.635148,-9.388932,1.237374,-7.375402,6.048725,1.083153,-5.516851,-3.950839,-1.366886,-6.208197,8.845640,6.161566,1.393675,-1.825494,-6.443085,-9.312284,9.865775,7.961190,-5.539816,-0.710074,-9.387384,-7.733013,2.264545,1.226189,0.244411,-0.534686,-9.680558,-5.166219,-4.953044,-4.515376,8.956661,-8.601970,-0.492383,9.427756,1.164974,-4.278736,7.745248,-1.780118,3.924592,-7.812462,3.737223,2.183746,-7.908170,0.525919,-1.296634,7.942106,-5.956123,-3.875645,3.801148,8.669032,-6.329896,-6.043659,9.027112,-5.584012,3.605007,2.147095,6.965768,-4.524432,5.011709,6.946435,-7.721364,8.913663,-7.299357,5.109374,-2.594602,-3.703432],[-7.815854,-1.300623,5.308347,-1.244507,-0.241345,6.191891,-3.011036,4.180642,7.698282,-3.540423,-3.809965,-0.149190,9.447011,-4.450153,4.307945,-0.507739,-0.699741,7.651647,1.166842,-4.569194,8.851245,-9.081211,1.862094,0.495639,-9.881903,-7.373376,-8.610099,8.019907,-7.461401,8.753602,-1.097832,8.153419,-0.783435,-1.693995,-8.486922,2.659721,-3.163359,-7.918377,-8.183072,-2.236170,8.649924,1.100781,4.588712,4.401560,-5.111075,2.226974,0.885144,2.635622,1.630453,6.201048,-9.695587,-1.083503,-7.944099,2.351384,-4.610877,6.226033,-7.917161,9.752960,7.316192,-2.400695,6.903889,-8.781484,-1.713147,6.437421,3.724039,-4.332752,7.715086,-5.540987,8.484485,-9.857336,8.752228,3.874546,-6.786856,-2.073932,9.278161,-5.623379,-3.928340,0.296561,-7.924054,0.149247,-6.139196,-4.721063,-0.760572,0.213962,-6.921305,4.086125,-8.686541,0.655549,-6.137923,-1.201264]], dtype = "float64")#candidate|1228|(5, 90)|const|float64
call_1227 = relay.TupleGetItem(func_453_call(relay.reshape(const_1228.astype('float64'), [9, 5, 10]), relay.reshape(const_1228.astype('float64'), [9, 5, 10]), ), 1)
call_1229 = relay.TupleGetItem(func_457_call(relay.reshape(const_1228.astype('float64'), [9, 5, 10]), relay.reshape(const_1228.astype('float64'), [9, 5, 10]), ), 1)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_1239 = relay.TupleGetItem(func_1071_call(), 0)
call_1240 = relay.TupleGetItem(func_1073_call(), 0)
func_510_call = mod.get_global_var('func_510')
func_514_call = mutated_mod.get_global_var('func_514')
const_1243 = relay.const([-9.152377,-4.707602,7.193953,3.089988,-6.733903,-8.185665,7.487244,6.367416,3.766931,8.872841,-5.665571,-9.299079,2.434630,9.950912,-0.705576,7.587074,-3.876410,2.617885,-3.663140,-8.316053,-0.265877,6.755506,2.595708,-0.623876,-5.840515,-7.399475,-7.774427,1.112728,3.325539,1.634523,-6.242014,-7.659638,-9.195947,-6.621679,3.708601,-0.258977,3.619350,3.486701,-0.653793,3.568350,-7.925842,1.227057,-8.020641,-0.057842,-6.667162,-5.519523,-0.199794,3.831008,-7.637367,5.842627,0.054104,4.219097,4.794606,8.263265,9.384839,-1.516589,2.494389,-5.426623,-3.937859,7.201216,-0.647768,-6.928106,-5.045165,-9.306854,2.257456,-3.175136,2.777922,-9.828357,1.539285,-2.392138,-3.983587,-1.615880,-4.919683,-2.864522,1.474312,1.405696,7.666218,-4.838698,-8.144986,-5.739525,-9.200817,-8.586260,-3.268007,-7.194563,-0.192577,-9.433242,-9.587443,-8.433795,-3.879288,2.528526,-6.694627,8.524581,-1.713168,-1.673408,-1.918717,5.973544,9.623488,-6.664401,-4.230767,6.373842,5.121830,9.027476,-2.239168,7.652346,-4.150546,-3.625051,3.287669,-7.322456,6.399271,-1.205274,9.007872,-8.834549,0.519438,6.586338,-7.364574,0.738632,-8.695000,6.450605,-5.041813,0.805051,5.390141,-5.153024,-5.672898,6.281656,4.910845,6.049622,7.181474,6.260643,2.101065,-5.850086,-3.392794,7.617911,-7.604562,7.042333,3.192696,-6.150759,8.421665,-4.700782,2.448216,6.361920,1.430986,-3.030124,5.840207,-7.812194,-9.244109,-2.440003,-0.431179,2.060195,-2.077103,2.833801,-5.619927,-6.093330,-8.134418,1.498632,-7.786915,-9.293168,1.022231,-7.342152,4.061425,1.550792,5.795400,-5.159234,-7.293445,8.673795,-4.726656,-2.512168,-0.321957,-0.943322,6.251527,-3.289511,5.170877,-8.312091,9.946759,1.096765,3.085310,-0.983114,-9.387835,-9.289618,4.204549,4.248502,-5.677293,-4.151608,-3.955216,-9.456184,-2.726901,-9.109007,1.825483,-6.494257,9.369990,4.779169,2.340510,-7.410506,-9.995569,-4.664227,-5.302541,-1.576606,6.354721,0.609258,9.870670,-0.210500,-7.116723,7.609518,9.331640,4.148033,0.751130,5.188774,-3.514065,-1.777803,-7.857589,-0.861220,-1.751037,6.229675,0.094046,-7.138981,-1.716660,-7.949985,0.680038,1.972945,-5.597098,2.296870,8.945295,-8.977167,-2.712563,8.950424,9.887336,4.783850,-0.347561,1.101569,0.685944,-2.589212,-5.834897,0.272228,3.574853,-0.309283,3.664116,7.379475,-8.447740,-1.289952,6.584390,3.329438,-8.044202,-4.733207,-3.166081,-3.132440,9.100157,1.260275,-0.017125,3.359138,4.522576,0.444768,-8.293410,-4.121437,-8.227632,1.288627,-6.508269,-3.977955,-6.479715,4.773839,-5.912809,-7.262127,-8.210807,-1.269478,-1.970808,-2.374436,5.361313,-6.712102,4.800537,5.464022,-8.598082,9.924776,1.393850,8.044104,-7.473212,-5.427256,-4.072231,1.424937,5.884020,6.511014,4.138839,5.079540,0.066510,-7.373283,-9.507159,-8.347704,0.331707,9.223352,3.725856,-1.974195,6.327276,4.439054,8.133657,6.960329,-9.227725,4.583755,-3.319322,-2.924181,-5.136519,-2.405933,-4.622405,8.243814,-0.963751,8.797728,7.020403,-0.463836,-2.492100,4.790138,-7.251282,-3.497731,2.388902,-0.064799,5.673697,-6.589283,-9.915101,-2.941922,3.722478,-0.332019,7.308526,-9.441282,5.565295,4.783774,-6.442406,3.166435,8.642966,7.542099,0.893237,1.419653,-0.522683,1.386803,-1.241364,-8.067593,0.137655,-1.074984,-9.222345,-2.621104,2.933680,1.791744,-0.870783,-9.163347,8.058287,-7.692341,1.938573,9.294200,0.635763,-0.085683,-4.909070,-4.749523,5.141168,-6.995515,5.707395,4.697295,7.818461,-6.260782,-6.311889,8.186481,-0.589605,-0.708628,7.261389,4.452154,-8.985251,4.116604,-7.277307,6.721992,-8.360431,5.142532,-2.850675,-5.509477,-4.113374,4.472194,0.929191,-4.670504,-6.135083,5.051278,-6.884060,0.637046,7.096875,3.532587,-8.059826,8.676634,0.192969,-6.758963,-2.624294,9.701801,5.579441,1.597720,5.489494,-8.226472,-2.533679,-6.025113,-7.199964,-2.978185,-7.685455,-0.565743,-9.528942,6.462195,-6.145077,1.378583,-4.675203,0.660708,7.756926,-2.895437,-6.061470,-8.331504,-5.798115,4.597760,-1.742143,-7.754714,-8.105989,4.780464,1.281532,-2.265828,-4.165232,-0.155451,-7.081287,-5.327103,-3.863197,-5.988128,2.000779,3.443085,4.474406,3.564241,-9.824611,-8.115442,-3.495946,5.406795,-0.454410,5.496281,4.437497,7.605854,-1.703112,0.277047,-7.648449,1.967753,4.821835,-3.977806,-5.937672,-9.389356,1.651938,6.948084,2.541121,9.430020,-5.629570,-1.841910,-6.497219,9.915399,-0.374697,8.485636,-8.156772,-8.320902,-9.604627,8.602599,-3.720529,8.024642,-5.805611,5.369672,-2.520101,-5.579123,-9.156156,-3.493048,-6.555937,7.113064,4.650057,-6.845662,1.191251,3.754601,4.052770,-7.956316,-3.902058,9.591289,-8.769676,-1.623938,-0.910509,7.294321,-7.873370,6.972538,6.562120,3.213509,-3.724046,6.968823,-9.191271,7.636655,5.237494,-2.752711,3.734537,-4.746119,-4.142609,-9.645284,2.118848,8.553881,-7.005386,4.466000,5.915202,-9.959918,-7.214832,-2.448276,-4.770446,-3.944162,7.815780,6.727010,-4.222220,1.523654,8.237346,5.580015,3.989920,-6.027261], dtype = "float64")#candidate|1243|(504,)|const|float64
call_1242 = func_510_call(relay.reshape(const_1243.astype('float64'), [14, 9, 4]), relay.reshape(const_1243.astype('float64'), [14, 9, 4]), )
call_1244 = func_510_call(relay.reshape(const_1243.astype('float64'), [14, 9, 4]), relay.reshape(const_1243.astype('float64'), [14, 9, 4]), )
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_1248 = relay.TupleGetItem(func_1071_call(), 0)
call_1249 = relay.TupleGetItem(func_1073_call(), 0)
uop_1251 = relay.atan(const_1228.astype('float64')) # shape=(5, 90)
output = relay.Tuple([call_1220,call_1227,call_1239,call_1242,const_1243,call_1248,uop_1251,])
output2 = relay.Tuple([call_1221,call_1229,call_1240,call_1244,const_1243,call_1249,uop_1251,])
func_1280 = relay.Function([], output)
mod['func_1280'] = func_1280
mod = relay.transform.InferType()(mod)
mutated_mod['func_1280'] = func_1280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1280_call = mutated_mod.get_global_var('func_1280')
call_1281 = func_1280_call()
output = call_1281
func_1282 = relay.Function([], output)
mutated_mod['func_1282'] = func_1282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1307 = relay.TupleGetItem(func_1280_call(), 0)
call_1308 = relay.TupleGetItem(func_1282_call(), 0)
output = relay.Tuple([call_1307,])
output2 = relay.Tuple([call_1308,])
func_1311 = relay.Function([], output)
mod['func_1311'] = func_1311
mod = relay.transform.InferType()(mod)
mutated_mod['func_1311'] = func_1311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mutated_mod.get_global_var('func_1311')
call_1312 = func_1311_call()
output = call_1312
func_1313 = relay.Function([], output)
mutated_mod['func_1313'] = func_1313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1397 = relay.TupleGetItem(func_1311_call(), 0)
call_1398 = relay.TupleGetItem(func_1313_call(), 0)
func_79_call = mod.get_global_var('func_79')
func_81_call = mutated_mod.get_global_var('func_81')
const_1401 = relay.const([-4.067063,4.984099,7.171830,6.213402,-4.222069,-0.193448,-7.464662,7.440370,1.105506,3.706980,-7.754092,-3.238327,-8.669283,8.237987,-5.023470,3.186342,-3.212716,9.991840,4.660861,-4.517181,7.572858,-8.682038,-6.258058,-5.079013,1.252288,-2.504694,-2.186205,-8.233026,8.999978,-8.036860,-8.655975,-1.803613,5.574120,-4.842686,6.256752,-9.129039,-1.783196,-5.330889,-2.336896,-2.450700,-1.579154,-0.796435,4.153560,5.830595,-6.021884,3.009318,-8.526003,7.550444,2.491139,-8.465138,-7.541663,6.526881,2.005958,6.083898,6.153754,4.497620,3.321138,-9.803125,7.925251,9.299679,9.833211,-4.512002,-8.459443,6.775140,-8.556017,-8.358993,-0.939528,6.269936,-5.950709,-3.498586,-2.310150,1.371199,4.790382,4.168989,-9.662599,-4.716319,1.157049,9.849325,4.161192,2.103330,-3.863582,-3.146454,5.984482,5.792040,2.059750,5.762943,9.488818,2.469545,-7.922120,3.740357,4.678331,9.910914,2.694678,-0.267484,0.314397,-5.185421,-9.185164,7.475973,-5.649914,9.173474,-7.671314,5.271523,3.401932,-5.019412,7.763342,-9.506716,6.224339,6.198023,-2.458516,4.140360,2.839070,-7.199528,8.715567,-4.496296,-7.948415,1.598096,-8.642832,-2.536071,3.708438,-2.230257,5.954317,3.119057,-5.119795,8.580062,-1.197295,-1.174653,-4.406831,8.934903,-3.292103,8.715521,8.658022,8.152930,7.446028,-0.391912,-4.221141,-9.461578,3.610647,7.312237,-5.413377,0.828173,9.965238,6.191475,-2.248727,8.489534,-6.633568,9.684085,7.216721,4.699400,-7.201633,1.727056,-6.190090,-1.631783,9.160669,5.580128,-9.304385,2.292445,5.156987,3.170463,3.580452,-1.391321,0.604786,-6.646274,4.645364,-2.346889,4.549740,-0.610469,4.696719,0.899719,-8.456129,-7.340137,2.691381,0.136574,-7.826944,-5.980457,2.005612,2.937412,-6.457085,-1.762624,-7.746302,-8.958819,-7.253101,6.098199,7.216497,3.551141,-8.601648,9.278965,1.207833,-8.778387,1.445824,3.609542,7.104128,-5.350657,-7.456367,1.209506,1.932368,-9.147309,5.673724,7.084730,0.032667,-8.137557,-5.770311,0.256694,-2.350712,-2.119984,8.409266,3.001862,-4.085561,-2.857318,-6.500361,8.349704,4.170810,0.707625,-8.003408,-8.191000,7.388935,5.080404,-5.331549,9.221966,-1.506917,-4.318840,-1.494152,-7.789511,1.128938,3.332822,1.571849,4.954460,1.030763,5.670809,4.150119,3.888103,-3.973521,5.287540,3.830454,-5.827275,-7.369668,6.218749,-3.614915,0.510141,5.671601,2.403261,-2.787661,8.368015,0.395939,6.166966,-4.422639,-2.750084,3.504267,9.366574,-1.787241,-3.266373,5.256695,0.517882,0.265220,2.044052,-3.945079,6.503625,-3.437144,-0.484297,6.915488,-6.684018,-6.726850,3.239244,-5.410577,-2.745413,-5.829087,2.482753,8.611202,3.691638,-3.815410,9.607929,3.526605,4.485085,0.552459,2.764548,5.548907,9.461517,-9.501999,9.202537,2.294543,-5.249954,-3.375462,6.380820,-1.610042,-8.031038,-5.293648,3.625503,2.370839,8.227255,-8.832907,4.345167,-2.652250,4.247992,4.672315,-5.457278,1.230698,-5.694657,-7.295196,6.172740,-4.988051,4.226311,7.184233,-6.555466,4.192729,5.532997,1.129515,1.328141,8.936431,-6.393351,0.463042,-0.732018,6.448876,-4.563064,-9.861091,5.618127,-9.209999,1.814007,7.278402,-2.277991,7.461485,0.754632,-2.304789,4.980155,0.745233,4.871420,-3.408876,1.884535,-0.716760,0.328834,1.767114,-3.359106,-2.523301,1.968184,1.739498,-3.691543,-5.186580,7.983721,9.554065,-6.876317,5.074250,2.967271,6.063414,8.004444,1.811175,0.556204,5.194186,-0.506911,6.099824,-6.623923,6.626156,-6.165176,-6.520044,-7.563823,-4.485922,-6.980950,-3.990204,3.446920,6.105773,-1.034639,1.214163,2.206874,4.080099,-7.280549,-3.228088,1.520807,-5.049376,9.039060,-4.306991,-0.695081,-7.945065,-2.017924,-3.424650,6.501955,-5.031238,-4.438684,8.657344,7.159737,1.973930,4.789670,-0.434090,6.813275,-5.695035,3.474540,3.503248,5.937093,-3.033611,-7.005078,3.802451,-6.707090,8.510665,-3.254008,7.190949,7.996335,7.535230,-3.863170,-8.568939,-1.724395,-5.284471,1.015764,0.347513,1.572446,-7.042062,3.846416,1.436781,7.074531,-4.888711,5.766486,7.197504,4.176880,-8.683579,-4.687895,6.166253,8.347455,-7.554134,1.103333,-0.930594,-3.783885,3.015961,-4.188723,5.343006,1.241970,4.972836,7.470788,-4.517600,-5.652922,-0.126046,0.067748,0.443240,1.262833,8.525617,-1.825390,-0.201865,-8.537762,-4.666671,-5.958577,-4.585497,1.431412,0.999682,8.332712,2.567185,-0.369963,-3.830847,-3.651498,-1.795716,-0.876387,-0.593335,7.836508,1.926513,-8.174539,6.853651,6.333535,0.757360,3.244326,-1.267151,-4.052158,-0.872857,6.641555,-3.058490,9.699479,-3.943290,-8.014699,-7.943308,7.802142,9.513711,5.140480,-6.156077,-8.212177,0.187531,-6.004064,-2.757301,-4.322842,4.618021,-1.955530,0.616015,7.224288,0.633542,-4.138815,6.467424,1.518806,-3.894967,4.382598,4.243636,-5.676553,-9.409069,-7.225978,5.408153,8.804437,2.986266,-6.699176,6.969705,-9.100734,7.838224,-8.428960,-6.004795,1.171142,-1.199262,2.620440,-4.428206,9.627736,8.077874,-0.906243,-5.535995,7.484755,6.511440,-2.947449,9.683018,4.730525,3.813641,-7.395651,5.755641,-4.290065,-0.210052,5.834002,8.645939,6.680170,2.896088,1.377955,-7.662784,5.922432,-9.113881,-6.753241,-8.930933,-8.331034,-1.352329,0.236719,-0.823378,7.224185,9.641862,-2.558508,9.241725,7.567797,3.480490,-4.904592,-4.727615,5.119857,7.965267,-4.282396,6.229171,-0.712405,9.111464,3.602974,3.278034,8.824754,3.937059,-6.773409,8.105722,3.271801,-0.337052,-3.195187,7.932253,-1.707043,-0.042246,-2.968189,5.405433,4.577493,-4.799554,4.029871,4.552347,5.629501,-7.086033,-1.752250,6.672683,-7.270725,5.398101,-4.519770,-5.735904,-4.126973,-2.069613,-7.569588,6.448339,-6.281088,-2.758340,0.955076,-4.795757,-1.142148,-2.189241,6.877549,0.555594,-3.249457,-5.022094,6.077237,2.345483,1.530066,5.730350,5.149039,2.711185,-8.024844,8.529887,-6.894390,-0.818768,-9.013486,2.606181,2.159664,1.398482,6.096695,-3.159197,-7.052967,-7.756985,2.395153,1.837268,-6.242895,4.110010,-5.884432,2.693325,-6.535963,-9.265364,-6.552714,-5.028886,-2.181844,2.237059,-9.382669,-7.999001,8.088381,-2.532228,-2.588399,-7.875270,6.448756,-5.167854,-7.511268,-5.836012,5.780229,-4.908415,-7.169960,2.575058,-1.343535,-2.435335,9.028741,-6.081893,-8.069040,7.145024,-8.169512,0.373243,3.926447,-5.027527,5.222387,4.475860,1.936434,4.085156,-5.969842,-9.467930,6.324164,8.693117,2.024529,-8.137318,1.479100,3.803049,8.494764,7.118338,-6.461159,-6.555531,-4.757580,-5.675203,9.545849,7.398843,6.884567,7.727444,-2.594949,7.894914,-0.491315,8.513946,1.875424,4.009505,-0.999825,-1.195879,-7.506531,-3.383258,-5.246591,-5.536027,-4.072259,3.941133,9.993351,9.680014,-7.909815,-5.599459,-0.564943,-6.116463,-2.011423,-6.197390,-3.949543,0.662179,6.671110,1.812525,-9.194977,-7.819650,5.933578,-4.988626,-8.780298,-6.792797,-1.792657,1.512111,4.483760,6.126793,8.467744,-2.218760,-8.856532,4.610720,5.662099,1.131458,-5.958320,6.364824,4.912218,9.599522,9.476734,-4.894877,-3.359365,-9.932349,8.595104,2.213040,9.368670,-8.814804,7.491022,5.041760,-2.365203,-7.937443,-4.971345,-3.240367,-3.819383,6.275151,-0.224332,9.187076,7.458247,-7.266879,8.522979,-4.496574,3.352983,-7.952261,-4.077172,4.162998,-3.498603,6.641570,8.900381,8.909960,7.977771,3.915220,-7.977646,-9.484859,-5.002094,1.445043,-5.003723,-7.964704,-8.298477,-4.065795,3.301025,-4.977313,-2.433895,-3.384598,5.153395,9.262933,3.129945,-4.494374,2.077705,9.368962,8.954077,-1.829473,-9.993397,1.009975,7.906535,4.123510,-6.537113,9.962796,-5.577590,-0.150128,6.471250,-8.174033,7.008098,-9.157711,-9.507181,-0.600259,-2.488470,2.660714,-2.000690,-9.881740,9.236846,-0.666524,7.516613,-6.742261,0.203001,2.691983,-7.537750,4.903039,2.617447,-7.943199,-1.265089,6.984977,5.477575,8.315461,-6.768954,-7.263585,-0.223629,5.733901,-0.962884,9.321584,-2.631267,-2.123106,-0.002719,-0.752971,7.513600,9.474791,-2.408057,3.841897,-5.256771,4.534081,-3.569234,-2.445192,-3.547526,-4.494237,6.424811,-7.879445,-8.615111,-5.411223,6.088443,-8.384467,5.225364,-0.241301,6.981499,-1.698876,-6.384049,-0.223300,4.898028,6.216849,-2.280283,-3.019180,0.839497,1.224706,4.543030,8.084540,1.659345,1.092449,7.593892,-4.312973,7.885230,-6.817634,-3.736802,-0.721290,3.952026,5.278677,7.636444,8.704322,-8.008773,1.054205,-4.794742,-6.372901,-2.250062,7.302890,3.931886,-8.227552,-5.598490,6.032510,6.780619,-5.313154,3.544514,-2.212064,4.410430,-3.629553,2.720090,2.950440,-5.642388,8.310528,0.028145,-8.426382,-8.558759,-7.908681,-5.739332,9.692120,7.784415,-9.582978,7.375479,-4.995828,0.268338,-0.168228,-5.162150,-6.730404,-7.780922,4.120561,-1.558963,-0.829587,6.583352,0.394471,-6.903768,5.407960,-8.007305,7.828007,5.606313,-1.631101,-1.702963,0.510656,-4.204472,6.498971,2.131521,0.830641,-2.288524,-2.883051,-7.446508,0.447364,-1.123233,-4.541759,9.072065,-3.345594,7.618225,7.009439,5.617820,-0.514920,-0.298549,-6.987162,7.567369,-9.773072,-4.506046,0.824679,-4.874519,9.988177,3.426596,-6.865979,6.848087,8.059739,4.523449,-3.122390,3.394721,7.103435,-1.634168,0.488196,5.865010,-7.995694,-6.837867,-0.667866,-3.035168,3.616014,9.247070,-9.942379,-8.020910,-5.717590,-9.429904,5.639252,6.842352,-4.754361,-7.961624,2.930205,2.620801,0.119443,5.091962,-5.074361,-1.424697,-0.807632,6.102051,-9.520298,-8.519243,-2.151830,-7.916448,6.904441,-0.941198,3.175827,6.486734,-6.486373,-9.242892,9.463661,8.344686,-9.860388,8.485232,7.384768,7.812465,8.078499,-9.096133,9.836095,6.541587,6.230786,-2.054502,-4.156504,1.650412,-4.434088,8.556683,-7.318435,5.169225,-6.858799,2.680108,-1.666547,2.332409,-2.977789,2.954228,-4.901770,-4.219586,-7.276097,4.144481,4.486776,2.960218,-0.435107,4.367019,5.308251,1.816846,7.093114,1.019323,-9.435270,5.117114,0.116002,-2.240766,5.488220,2.056516,4.848217,3.896035,9.342219,-2.698245,6.166871,-7.284924,-6.495179,-0.471212,-8.428121,4.808105,-1.245699,-1.592448,0.589283,-2.356307,2.499184,-1.630799,-7.418384,1.046504,-0.335655,0.785320,2.987875,-8.997394,-7.778642,-2.748213,9.488112,6.194027,-5.543692,0.021949,-5.923753,6.961762,6.586213,-6.431417,1.647087,2.656186,3.380364,2.518637,2.446084,-6.417376,-8.742419,-2.716257,4.446127,9.371225,5.835373,2.985251,-9.586800,-8.550186,9.715600,8.787380,-4.118898,-0.756435,-9.768284,6.163137,-6.661177,1.782745,-7.030715,-0.581763,2.979826,9.463048,-8.716573,-7.550745,3.501530,-6.448134,7.862357,3.656680,-2.699759,1.193219,5.309464,-4.155909,-0.560099,-2.591007,-5.361698,-6.487147,2.639160,-2.174360,4.975792,-7.379739,6.993033,9.854990,8.095210,9.077880,-9.809773,-5.080296,1.913497,7.425456,-1.602689,-3.206173,-2.742263,-7.777139,-0.753436,1.255298,7.640254,1.700382,-3.056393,5.710030,3.762614,-3.791126,0.788646,-4.576942,5.689614,-6.167313,9.871052,-5.724226,-3.763909,3.288876,-8.841024,-1.645361,3.964575,-7.130588,-6.811719,6.331459,-2.825501,9.331804,-9.427115,-0.114514,-8.646273,6.550378,5.576325,4.622882,-4.113976,6.220765,-5.150423,-3.317759,0.383360,5.445546,-9.344433,1.240233,-4.054273,-3.398442,-8.071065,3.870880,4.988842,2.684022,-7.721932,-8.706562,0.726927,8.751434,9.106962,1.392912,8.210595,-2.128517,9.670728,-6.502265,3.974371,-2.938503,-0.270962,-5.475438,-0.753339,-1.491084,-1.094191,9.084162,-5.485486,8.438563,-8.482968,-5.006391,-0.557722,2.681878,7.218076,2.345344,-9.551299,-0.329753,6.998867,8.133064,-5.458879,6.380028,-0.011742,8.195033,9.887046,4.321997,1.278870,0.589958,-3.566208,-3.570275,5.093392,-3.286048,5.104467,-7.992221,0.577588,2.021318,3.458222,9.194897,6.080695,3.738838,0.096654,1.804406,-1.195784,-2.328400,2.317072,-2.960389,0.870228,3.600703,-1.702185,1.291634,7.940492,9.060309,8.421763,-8.946604,6.403038,-5.707684,-5.218368,-1.725976,-0.150751,-9.644068,2.438268,-6.961358,6.982929,9.061485,4.207486,-7.741376,6.507743,-6.263365,-3.326525,-5.780270,-0.867021,-1.278501,-2.998412,4.498758,-2.558237,-8.484085,3.425843,-2.209136,-6.221068,-2.171402,-8.112345,-3.677776,-4.100075,3.530723,-0.695818,1.902736,-0.457008,5.089158,-0.489555,9.200849,-4.189313,-7.739259,8.635932,7.209594,-0.484234,1.181742,-0.717925,1.145606,-4.788787,5.025870,-9.463622,3.865488,-8.952873,5.064200,-9.482215,5.310451,-0.309988,-8.916065,-1.324569,-9.562023,1.028348,-2.521130,5.547443,-8.228647,-7.790737,-4.691250,-0.434763,7.236285,5.624974,2.196582,6.388319,-8.855339,-2.448382,8.255524,-5.327969,-6.434312,-4.648289,4.733628,-8.356532,6.937538,1.222752,6.763149,-5.418196,3.567606,9.882918,3.916791,6.435344,-4.594788,-2.064844,2.521433,7.520359,-6.503760,-4.598881,-6.638605,7.944296,0.841748,2.278271,7.767025,4.533642,3.462867,5.383923,6.212778,3.683350,5.575227,-4.049041,-0.986911,-5.056781,2.199154,8.327007,1.861543,0.906565,9.182481,1.048997,-1.321695,3.106317,6.328981,-7.944216,-8.121669,-9.214128,8.945655,-5.201160,1.050334,-2.771710,0.340172,-8.009557,3.464748,4.716423,-9.521018,1.909470,0.643349,9.572844,9.135131,6.291592,9.914501,4.685874,-6.826826,-2.932419,-2.446706,-7.378820,-7.187939,-4.414605,7.916189,1.806079,-9.602308,-9.504862,7.159653,-4.357268,-8.514535,-3.713013,-1.985413,-8.763657,1.310797,-0.733971,-6.639833,7.847286,3.730208,-6.637663,2.981990,-2.779656,-3.751443,7.756508,-7.423530,-0.993970,-8.262740,-2.468600,8.999098,6.949503,-7.624442,-5.099823,7.680116,8.983547,-2.306489,9.241413,9.785917,8.010555,-7.057510,-7.977175,6.197887,7.081617,3.242289,-4.768544,5.931731,-2.554448,1.374632,-1.311684,-2.077875,9.115981,8.392234,2.970621,-6.377484,-2.000495,1.889305,-5.590820,9.961062,-3.899777,2.421908,4.105971,7.842096,-0.205353,8.878771,7.604206,6.850084,-9.934956,8.671535,9.223789,-2.226938,-5.950406,-4.208661,-2.354457,5.951649,0.143339,2.619956,0.464756,-7.960570,2.033874,-6.334692,7.024576,7.127193,-6.087508,1.446262,3.414765,2.895599,-2.299413,-5.405346,5.725765,5.460594,-7.631541,-7.632631,5.118505,-6.761108,-8.240950,2.325341,-7.298760,8.276851,9.485138,-3.797995,-9.576668,1.286301,-3.956801,-0.863952,2.851086,-5.586747,-8.973881,0.135634,0.413022,7.215198,-1.479165,3.234369,5.207772,2.561032,-5.353423,7.562277,5.640457,5.968366,-0.922525,6.728427,3.200495,-8.674061,-8.356138,-4.774963,7.177030,4.345554,-8.813281,-3.272707,2.400582,3.864869,7.082132,0.493490,7.068281,-6.261732,-9.812741,7.917013,4.169241,3.524827,8.616996,6.857977,1.560068,-8.070053,-4.413638,-3.020693,-0.333251,6.638562,-7.660323,-1.598524,3.479144,-5.553396,-6.044975,1.621635,1.759289,-3.733690,-8.616479,5.033366,-9.504764,-3.635513,-2.022848,7.895597,-1.422083,-4.818503,8.640400,-4.965838,-4.063771,-1.374495,-1.680298,-4.783192,-8.283830,-8.670004,3.799817,2.144352,1.410240,-6.185942,-7.105465,-2.748023,-7.441763,9.705867,9.848829,-4.398638,-0.939031,-5.327941,-4.797579,-3.992447,2.416381,-7.732781,-5.570419,8.714269,8.822535,3.251416,5.457667,-8.854323,9.251346,1.218589,1.694941,-2.570762,-4.268132,-8.380045,2.701669,0.142998,7.281753,5.497633,7.627662,3.041492,-4.743194,-2.478765,-3.542224,7.838644,9.227890,-4.095691,-6.429382,-1.115870,6.762475,-3.987604,-5.407144,-8.962775,0.327472,0.030241,-1.011661,8.847887,-8.694195,-2.967846,-9.693490,-3.153272,-8.215827,-4.256911,4.470790,0.737946,2.168214,4.223807,6.310104,7.035835,-1.455107,-1.117446,4.054677,5.966626,1.610913,-3.864624,-1.336079,1.317200,2.591692,3.446466,4.429966,8.028605,-6.605542,-5.526029,-7.563818,-0.667638,-5.629242,0.744237,-0.997488,4.035255,-7.973301,5.846303,-1.468407,9.867841,-3.248852,-0.216896,2.037815,-4.166403,9.839467,-7.032432,-1.061677,-7.886589,1.938960,-3.175076,-6.048131,1.254390,1.591406,0.065541,-3.451548,0.910509,-5.506743,-1.313907,-7.350398,2.201285,9.839216,6.512387,8.923307,-1.327510,-0.583151,-7.203607,2.461347,3.719564,2.755740,-7.617776,-9.154847,-2.303215,-7.752659,-7.268025,-7.958586,-9.008012,0.781153,8.585060,5.630418,7.427731,1.994133,-9.165033,-5.763697,3.533536,1.017878,1.029713,-1.478586,-3.254463,-1.650692,5.427258,-7.083816,-5.202806,0.716858,-7.192717,7.116483,-6.324821,-3.949149,9.156466,4.716470,-8.951886,6.357345,-9.695626,2.389847,-5.574403,0.298935,-7.501366,0.231858,-2.503091,0.852643,1.117671,-4.630338,9.434539,-9.928174,7.782945,6.298658,-3.425837,6.106880,-5.775911,2.033122,-1.569745,-5.657260,9.835930,4.173572,2.529971,-2.069886,-3.037735,-9.230916,3.069587,-2.792486,-9.006606,-6.262846,-6.309443,7.659709,8.103440,5.841889,-2.434637,-5.870359,8.959627,1.012505,-7.657852,7.442449,-1.449572,-7.183076,8.455518,3.453153,0.438235,-2.893113,9.692332,-3.641952,7.192834,8.435721,-4.408025,5.073434,4.187853,-4.158813,-1.556737,-0.904573,7.145656,8.847557,-4.685361,3.881356,-9.323122,1.823288,4.225160,-7.529458,-9.697400,-6.065368,-8.800123,-2.029164,-1.073616,0.857583,1.199616,-1.995937,9.199554,4.232475,-7.460080,8.692798,-9.898513,-6.736531,-2.078519,-4.865596,-1.884169,3.897971,-1.368367,5.234460,-9.142779,-7.693191,-6.282017,6.535374,-3.913583,2.703357,4.623285,0.465902,-5.750188,5.642752,9.474879,0.236364,4.016489,-9.095451,-4.016749,-8.624299,-8.201179,-5.182403,7.548116,-3.413906,-8.130404,-7.232702,-7.632580,-9.087761,-2.343089,-3.161719,3.453112,5.576099,-3.857954,9.808020,7.292739,-7.511586,-9.362660,4.563364,-0.029689,8.686915,2.216537,-1.743540,1.260362,-6.940835,-6.809844,1.001886,-6.687703,-2.831772,-9.129307,-2.431378,-6.164362,-3.361748,9.853318,-3.156181,0.163444,3.625713,-4.889528,3.819811,-8.021713,2.329700,-5.206843,-0.240739,4.604101,7.392082,-7.917343,-7.074287,-2.247524,5.851996,-5.450888,9.132784,8.312203,-5.594490,-1.706313,-8.545768,-5.232170,-2.971964,-3.668889,7.117018,5.990626,-7.479346,-6.377882,-6.408134,7.125902,4.032771,-6.742051,9.365750,9.819168,3.528039,3.808915,-7.537814,7.947745,-7.019385,1.568299,9.644192,1.847881,6.225065,-2.561506,-8.269067,4.859976,7.809651,6.079973,-4.969245,8.106501,-1.592072,2.352021,-2.443884,1.479872,-2.628512,-5.408561,-3.907674,9.766942,-9.451829,8.652144,8.915409,-8.629542,-2.409416,-5.433823,-7.453803,-4.889778,-4.114158,3.690238,-2.723675,-4.082081,7.028495,9.307778,-4.312616,4.139313,-4.738559,4.001323,-7.580991,8.753523,4.951982,1.124009,9.312773,6.684159,2.905755,-6.626459,8.431206,-9.013483,0.796100,-5.442281,9.817893,-3.122086,8.350539,7.258854,6.974962,-3.202178,-4.828945,-4.905381,-1.995869,-3.214675,-0.621890,2.593086], dtype = "float32")#candidate|1401|(1872,)|const|float32
call_1400 = relay.TupleGetItem(func_79_call(relay.reshape(const_1401.astype('float32'), [13, 16, 9])), 0)
call_1402 = relay.TupleGetItem(func_81_call(relay.reshape(const_1401.astype('float32'), [13, 16, 9])), 0)
output = relay.Tuple([call_1397,call_1400,const_1401,])
output2 = relay.Tuple([call_1398,call_1402,const_1401,])
func_1407 = relay.Function([], output)
mod['func_1407'] = func_1407
mod = relay.transform.InferType()(mod)
output = func_1407()
func_1408 = relay.Function([], output)
mutated_mod['func_1408'] = func_1408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1475 = relay.TupleGetItem(func_1311_call(), 0)
call_1476 = relay.TupleGetItem(func_1313_call(), 0)
var_1494 = relay.var("var_1494", dtype = "float64", shape = (6, 7, 7))#candidate|1494|(6, 7, 7)|var|float64
bop_1495 = relay.left_shift(call_1475.astype('uint16'), relay.reshape(var_1494.astype('uint16'), relay.shape_of(call_1475))) # shape=(6, 7, 7)
bop_1498 = relay.left_shift(call_1476.astype('uint16'), relay.reshape(var_1494.astype('uint16'), relay.shape_of(call_1476))) # shape=(6, 7, 7)
uop_1503 = relay.tan(var_1494.astype('float32')) # shape=(6, 7, 7)
output = relay.Tuple([bop_1495,uop_1503,])
output2 = relay.Tuple([bop_1498,uop_1503,])
func_1506 = relay.Function([var_1494,], output)
mod['func_1506'] = func_1506
mod = relay.transform.InferType()(mod)
mutated_mod['func_1506'] = func_1506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1507 = relay.var("var_1507", dtype = "float64", shape = (6, 7, 7))#candidate|1507|(6, 7, 7)|var|float64
func_1506_call = mutated_mod.get_global_var('func_1506')
call_1508 = func_1506_call(var_1507)
output = call_1508
func_1509 = relay.Function([var_1507], output)
mutated_mod['func_1509'] = func_1509
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1528 = relay.const([[[-3.580470,7.987495,1.508338,2.202759,8.268767,2.980702,-3.740218,-9.815766,-3.423368,4.760491,8.067715]],[[-4.836284,6.434334,-1.018569,-0.910752,2.944218,2.209864,6.616739,3.990514,0.467957,-9.215843,-4.165705]],[[-7.180052,-9.218667,6.585550,2.554648,5.769870,-7.095870,-3.298407,-8.673530,3.303891,2.080630,-2.620683]],[[8.297182,0.013329,-6.720980,6.526079,-7.196798,-9.029329,-3.936490,-2.169369,-8.335256,4.054687,-1.633279]],[[2.238330,-4.529993,3.108346,-7.692475,8.157205,9.047917,-4.045336,-0.179437,-4.696135,2.596131,2.887486]],[[-3.233213,-5.538603,9.577621,-3.415062,5.426818,-6.386450,-2.006925,2.865932,-1.447705,-9.868811,8.881115]],[[5.399022,-3.941040,3.409878,-4.732794,2.859292,-9.781397,-0.401812,-2.570877,-8.823534,-8.006579,7.499746]],[[-9.075026,9.467140,9.811069,-6.400243,8.914265,-7.368945,0.336697,5.420112,-2.068697,5.666023,-8.444948]],[[6.308010,-9.808743,-2.214287,-8.552337,5.894977,-1.755738,3.179934,-5.290029,3.061255,-8.036667,1.728930]],[[6.944551,9.217347,8.424085,-2.182739,-3.280877,-0.267979,1.267226,-7.860776,8.868591,-8.516179,-6.894700]]], dtype = "float32")#candidate|1528|(10, 1, 11)|const|float32
uop_1529 = relay.erf(const_1528.astype('float32')) # shape=(10, 1, 11)
output = relay.Tuple([uop_1529,])
output2 = relay.Tuple([uop_1529,])
func_1537 = relay.Function([], output)
mod['func_1537'] = func_1537
mod = relay.transform.InferType()(mod)
output = func_1537()
func_1538 = relay.Function([], output)
mutated_mod['func_1538'] = func_1538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1558 = relay.var("var_1558", dtype = "float64", shape = (5, 12, 4))#candidate|1558|(5, 12, 4)|var|float64
const_1559 = relay.const([[[-8.764215,-0.385733,6.239108,-2.353861],[3.585844,-4.563205,5.266242,-5.596828],[0.933828,-0.813348,-3.592625,-1.633862],[0.096461,-2.146836,5.454299,8.729170],[-4.049216,3.492704,-9.041772,-3.347304],[-1.809625,0.024585,0.115807,-2.652465],[-4.839653,0.996627,2.868028,1.920141],[-1.163056,5.471088,6.703258,6.152051],[3.197492,3.702699,-9.934356,3.764780],[-0.591462,2.446957,-9.135807,-0.487620],[-8.634781,1.820958,-9.938098,-7.474884],[-7.194634,-5.273115,7.523881,6.274094]],[[-1.372837,-2.639948,-5.309057,8.165837],[0.518794,9.256782,-5.999061,-1.730380],[9.168936,-2.320279,-7.190067,-1.470143],[2.645113,-0.900809,-3.843317,2.097431],[-0.694680,1.523595,1.383255,9.051514],[8.526830,2.405905,0.002916,-5.257540],[8.069594,-4.392456,-3.966527,6.114337],[1.404598,-3.431333,0.029806,-6.433078],[7.972401,8.804447,-2.167681,7.729421],[6.442750,8.122659,-5.530131,3.069083],[4.315756,4.123189,-8.885256,0.903200],[-5.113030,7.218762,5.699752,2.582755]],[[8.489590,9.784817,-7.321327,-0.830862],[8.783756,-1.701413,5.462979,-3.621883],[6.376330,-0.550970,-8.112533,9.883496],[7.026139,-9.616448,-6.284488,-3.023834],[-1.427111,2.620600,-4.924921,-2.374641],[9.688884,-6.440683,-2.971878,5.019418],[-7.208430,8.250198,9.633857,-1.096475],[0.240350,5.051432,-0.291578,-3.863973],[-3.694442,5.932296,2.896543,-5.978894],[-9.894779,4.560781,1.055457,-0.274370],[0.337548,-5.881574,-7.759799,1.454959],[-1.805244,0.047177,-7.772391,2.467965]],[[8.789423,-1.723102,8.652786,-4.100229],[5.664589,-2.530779,-3.012905,-9.587120],[2.954500,5.581497,8.104796,1.081727],[6.158553,2.988699,-7.208281,-9.601004],[6.402809,-5.502346,-9.568194,4.810576],[8.812365,-5.481486,-5.924966,3.955418],[-5.430980,-3.173841,0.514054,5.678607],[-6.938228,6.777748,7.714937,0.538315],[-4.356989,6.830812,-6.102051,-5.206070],[4.903304,7.679002,4.497783,2.359989],[5.269376,-3.257645,1.216857,-0.212248],[-4.441085,3.714364,4.483270,-2.004021]],[[-4.900483,-4.217861,-5.099518,-8.585704],[-2.464647,-9.657857,-6.599299,7.164151],[1.593296,3.550004,8.586239,-6.446585],[2.000357,4.493502,-7.868590,-8.642222],[-5.800718,5.092630,0.820989,-3.507603],[-2.963393,4.196246,-6.101517,-4.606369],[-6.819862,-9.268933,1.975062,1.911424],[-5.438812,-9.209107,1.722745,-4.445873],[1.186601,-9.998179,4.073129,-7.904753],[1.865138,5.687340,-8.749933,5.874573],[0.883764,-0.042062,1.757827,5.354991],[1.231365,-7.688765,-8.811236,-2.317415]]], dtype = "float64")#candidate|1559|(5, 12, 4)|const|float64
bop_1560 = relay.divide(var_1558.astype('float64'), relay.reshape(const_1559.astype('float64'), relay.shape_of(var_1558))) # shape=(5, 12, 4)
output = relay.Tuple([bop_1560,])
output2 = relay.Tuple([bop_1560,])
func_1570 = relay.Function([var_1558,], output)
mod['func_1570'] = func_1570
mod = relay.transform.InferType()(mod)
var_1571 = relay.var("var_1571", dtype = "float64", shape = (5, 12, 4))#candidate|1571|(5, 12, 4)|var|float64
output = func_1570(var_1571)
func_1572 = relay.Function([var_1571], output)
mutated_mod['func_1572'] = func_1572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1576 = relay.TupleGetItem(func_1311_call(), 0)
call_1577 = relay.TupleGetItem(func_1313_call(), 0)
const_1603 = relay.const([[[-3.356449,-8.160540,1.923165,-6.507738,-6.464785,-9.081810,4.115089],[0.937692,-7.156038,2.580692,-6.925665,-8.041411,-3.021940,9.960513],[8.873639,7.510382,-6.429434,6.830605,-4.761949,-4.235217,-3.906734],[-0.084747,-5.933015,1.415146,-8.215971,1.857013,-0.019912,-8.855060],[3.577611,-4.639002,-9.366123,-6.128463,3.909296,7.087576,-4.097122],[-1.168592,-8.576346,-9.500649,-6.822582,5.463870,-3.446274,4.166115],[-9.427491,-1.933354,2.638545,-1.591214,-9.993240,-2.529839,6.295373]],[[3.792023,-6.628365,-1.137862,-8.931446,4.394549,-2.165231,2.676295],[3.945666,-8.673804,0.203178,-5.438766,9.270665,-5.918370,6.228605],[9.696881,-1.200001,-3.574508,-9.901335,7.337200,2.979759,9.792964],[3.818773,7.734119,-0.632700,-3.645676,-6.370904,-7.896064,-5.303184],[4.062132,-9.715521,-3.678533,6.373525,9.961473,7.914970,-7.405116],[6.738865,-5.569229,4.620363,-3.033114,2.410891,5.913610,0.657189],[1.415394,-6.771666,3.246794,3.546936,-9.783779,0.071523,-8.299530]],[[-3.304134,1.830647,8.970719,6.247212,2.517293,-2.850617,-3.369977],[-8.748000,4.740662,8.354940,-9.443566,-2.789749,-6.693011,-0.359221],[-6.753596,-1.765977,-9.079694,4.133648,-9.855035,-8.408566,-4.241539],[-1.384436,-8.930095,-5.969793,2.017342,2.508059,-6.330657,3.646480],[-2.282448,-5.840663,2.720138,-9.655433,3.551997,2.160187,-0.596571],[5.771369,-2.789098,5.798268,1.406284,-1.778789,-2.173500,-1.452402],[-4.209208,1.632521,-0.181148,4.340265,1.111183,8.289406,3.969190]],[[-1.345950,-0.026416,-5.678628,8.389855,9.517354,7.512060,8.061428],[1.449337,0.424301,-8.702030,1.321641,-9.108350,-8.670410,-3.185852],[-0.682420,-4.325789,1.077099,3.075824,5.405315,9.321875,3.872193],[-8.698541,-8.225021,-5.155841,9.486776,9.969909,7.285149,-2.330194],[4.024630,0.528835,-2.858569,-2.184160,-9.972397,-9.743622,-5.301199],[-6.629414,-1.945487,6.877827,1.747784,-9.117565,-5.415623,7.362729],[-8.802365,0.882124,-7.368083,9.045322,-6.665143,-6.536103,6.659618]],[[-6.274768,-3.453323,5.758805,1.426799,-0.383732,3.186054,-1.952149],[-5.874431,2.822062,9.836102,-7.220581,-1.431435,-8.967896,5.905041],[1.526185,2.622362,-6.768173,5.576205,2.472463,-9.718370,4.484166],[-6.273019,9.825694,0.455485,7.577138,1.203490,-5.610875,-6.630763],[-0.215007,9.180401,-1.808196,1.680947,-5.942242,0.534182,-1.768512],[3.052363,8.891383,2.886414,-7.382956,6.494726,5.137933,3.106773],[-0.113057,-0.680578,9.095261,5.366437,7.250078,4.046240,1.522830]],[[1.374079,-1.583685,9.761104,-6.037917,2.281158,1.651186,1.525315],[4.353760,-1.460783,-1.139773,0.205969,-3.179379,3.244751,0.093921],[0.370188,7.520494,-1.183143,-8.616212,7.515261,-1.106093,9.838298],[-7.511282,-0.766228,-5.544151,7.389293,-1.361932,-5.127220,0.702582],[-1.228513,-8.888473,9.782799,-6.418806,-8.506234,2.106864,9.509306],[-0.955702,1.126061,6.249747,-2.792237,-0.013593,-5.123624,-1.116743],[7.179311,4.595198,7.093324,-2.971677,6.459341,-2.027155,8.891013]]], dtype = "float64")#candidate|1603|(6, 7, 7)|const|float64
bop_1604 = relay.bitwise_and(call_1576.astype('uint16'), relay.reshape(const_1603.astype('uint16'), relay.shape_of(call_1576))) # shape=(6, 7, 7)
bop_1607 = relay.bitwise_and(call_1577.astype('uint16'), relay.reshape(const_1603.astype('uint16'), relay.shape_of(call_1577))) # shape=(6, 7, 7)
output = relay.Tuple([bop_1604,])
output2 = relay.Tuple([bop_1607,])
func_1620 = relay.Function([], output)
mod['func_1620'] = func_1620
mod = relay.transform.InferType()(mod)
mutated_mod['func_1620'] = func_1620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mutated_mod.get_global_var('func_1620')
call_1621 = func_1620_call()
output = call_1621
func_1622 = relay.Function([], output)
mutated_mod['func_1622'] = func_1622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1643 = relay.var("var_1643", dtype = "int32", shape = ())#candidate|1643|()|var|int32
var_1644 = relay.var("var_1644", dtype = "int32", shape = (10, 8, 16))#candidate|1644|(10, 8, 16)|var|int32
bop_1645 = relay.add(var_1643.astype('int32'), var_1644.astype('int32')) # shape=(10, 8, 16)
uop_1652 = relay.atan(bop_1645.astype('float64')) # shape=(10, 8, 16)
output = uop_1652
output2 = uop_1652
func_1675 = relay.Function([var_1643,var_1644,], output)
mod['func_1675'] = func_1675
mod = relay.transform.InferType()(mod)
mutated_mod['func_1675'] = func_1675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1675_call = mutated_mod.get_global_var('func_1675')
var_1677 = relay.var("var_1677", dtype = "int32", shape = ())#candidate|1677|()|var|int32
var_1678 = relay.var("var_1678", dtype = "int32", shape = (10, 8, 16))#candidate|1678|(10, 8, 16)|var|int32
call_1676 = func_1675_call(var_1677,var_1678,)
output = call_1676
func_1679 = relay.Function([var_1677,var_1678,], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_1706 = relay.TupleGetItem(func_1620_call(), 0)
call_1707 = relay.TupleGetItem(func_1622_call(), 0)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_1709 = relay.TupleGetItem(func_1205_call(), 2)
call_1710 = relay.TupleGetItem(func_1207_call(), 2)
var_1718 = relay.var("var_1718", dtype = "float32", shape = (6, 7, 7))#candidate|1718|(6, 7, 7)|var|float32
bop_1719 = relay.logical_xor(call_1709.astype('uint16'), relay.reshape(var_1718.astype('uint16'), relay.shape_of(call_1709))) # shape=(6, 7, 7)
bop_1722 = relay.logical_xor(call_1710.astype('uint16'), relay.reshape(var_1718.astype('uint16'), relay.shape_of(call_1710))) # shape=(6, 7, 7)
uop_1745 = relay.cosh(call_1709.astype('float64')) # shape=(6, 7, 7)
uop_1747 = relay.cosh(call_1710.astype('float64')) # shape=(6, 7, 7)
bop_1764 = relay.equal(call_1706.astype('bool'), relay.reshape(bop_1719.astype('bool'), relay.shape_of(call_1706))) # shape=(6, 7, 7)
bop_1767 = relay.equal(call_1707.astype('bool'), relay.reshape(bop_1722.astype('bool'), relay.shape_of(call_1707))) # shape=(6, 7, 7)
output = relay.Tuple([uop_1745,bop_1764,])
output2 = relay.Tuple([uop_1747,bop_1767,])
func_1769 = relay.Function([var_1718,], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
var_1770 = relay.var("var_1770", dtype = "float32", shape = (6, 7, 7))#candidate|1770|(6, 7, 7)|var|float32
output = func_1769(var_1770)
func_1771 = relay.Function([var_1770], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_1789 = relay.TupleGetItem(func_1620_call(), 0)
call_1790 = relay.TupleGetItem(func_1622_call(), 0)
output = relay.Tuple([call_1789,])
output2 = relay.Tuple([call_1790,])
func_1792 = relay.Function([], output)
mod['func_1792'] = func_1792
mod = relay.transform.InferType()(mod)
output = func_1792()
func_1793 = relay.Function([], output)
mutated_mod['func_1793'] = func_1793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1794 = relay.TupleGetItem(func_1311_call(), 0)
call_1795 = relay.TupleGetItem(func_1313_call(), 0)
output = relay.Tuple([call_1794,])
output2 = relay.Tuple([call_1795,])
func_1798 = relay.Function([], output)
mod['func_1798'] = func_1798
mod = relay.transform.InferType()(mod)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mutated_mod.get_global_var('func_1798')
call_1799 = func_1798_call()
output = call_1799
func_1800 = relay.Function([], output)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_1870 = relay.TupleGetItem(func_1792_call(), 0)
call_1871 = relay.TupleGetItem(func_1793_call(), 0)
func_1140_call = mod.get_global_var('func_1140')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_1873 = relay.TupleGetItem(func_1140_call(), 0)
call_1874 = relay.TupleGetItem(func_1141_call(), 0)
bop_1876 = relay.floor_divide(call_1873.astype('float64'), relay.reshape(call_1870.astype('float64'), relay.shape_of(call_1873))) # shape=(6, 7, 7)
bop_1879 = relay.floor_divide(call_1874.astype('float64'), relay.reshape(call_1871.astype('float64'), relay.shape_of(call_1874))) # shape=(6, 7, 7)
uop_1881 = relay.sin(call_1873.astype('float64')) # shape=(6, 7, 7)
uop_1883 = relay.sin(call_1874.astype('float64')) # shape=(6, 7, 7)
func_1675_call = mod.get_global_var('func_1675')
func_1679_call = mutated_mod.get_global_var('func_1679')
var_1885 = relay.var("var_1885", dtype = "int32", shape = ())#candidate|1885|()|var|int32
const_1886 = relay.const([[2],[6],[-4],[-4],[4],[6],[3],[8],[-4],[7],[-3],[8],[9],[-5],[-1],[-7],[1],[-8],[-10],[9],[-8],[-4],[5],[-1],[2],[-6],[10],[-6],[9],[6],[-10],[-4],[8],[-8],[-4],[-10],[2],[-3],[8],[5],[-2],[5],[-4],[-1],[-2],[-4],[1],[5],[-1],[8],[10],[10],[-6],[8],[-7],[-3],[5],[-10],[-1],[-1],[-9],[-7],[-6],[-2],[7],[-2],[1],[-10],[5],[10],[4],[-10],[3],[7],[3],[7],[6],[6],[10],[9],[-9],[-6],[-3],[9],[8],[-9],[-5],[1],[-10],[-2],[-10],[-7],[-4],[-8],[-1],[2],[8],[-4],[8],[-8],[-5],[9],[7],[-5],[-2],[-10],[-7],[9],[-7],[6],[4],[2],[7],[2],[9],[2],[-8],[-3],[-2],[-9],[-5],[-7],[3],[-4],[2],[2],[9],[7],[-8],[-1],[-10],[1],[5],[2],[2],[4],[-10],[2],[8],[6],[7],[8],[-2],[3],[-6],[6],[-9],[-4],[1],[-4],[7],[2],[10],[1],[-1],[9],[-6],[5],[-4],[5],[3],[7],[-10],[-6],[7],[6],[5],[-1],[4],[-4],[10],[-7],[2],[2],[10],[-7],[-3],[-5],[-5],[6],[9],[8],[-1],[-1],[-3],[-4],[-10],[-9],[2],[-10],[3],[5],[2],[-8],[1],[9],[-5],[-3],[7],[3],[-1],[-5],[7],[5],[7],[2],[-5],[-5],[7],[3],[7],[-7],[8],[1],[4],[-5],[1],[7],[-4],[-7],[-2],[-1],[6],[-5],[1],[-2],[-2],[3],[6],[7],[-5],[8],[2],[4],[-2],[9],[10],[2],[-7],[-2],[8],[7],[10],[2],[-1],[10],[3],[4],[5],[-3],[10],[10],[1],[-9],[-2],[-9],[4],[2],[5],[2],[5],[5],[-9],[-5],[-8],[-1],[8],[2],[7],[10],[-2],[-2],[4],[-10],[8],[-6],[-3],[-4],[10],[9],[6],[10],[-3],[-7],[-4],[2],[5],[-4],[-7],[-7],[-6],[1],[4],[2],[-3],[-3],[10],[6],[4],[6],[10],[5],[1],[4],[2],[5],[4],[7],[-9],[1],[-7],[4],[-6],[3],[-4],[9],[8],[-9],[1],[-8],[-5],[-1],[9],[7],[7],[2],[2],[3],[6],[9],[4],[4],[-10],[-10],[-4],[-6],[-1],[10],[-6],[-8],[8],[-9],[7],[10],[8],[3],[-7],[-6],[8],[10],[6],[5],[-4],[7],[-3],[-5],[6],[1],[5],[-7],[1],[9],[-5],[-5],[-2],[-6],[-10],[4],[-5],[5],[6],[9],[1],[-5],[3],[3],[2],[-2],[-8],[-1],[-3],[-9],[-10],[-8],[-3],[-5],[1],[3],[5],[-10],[10],[4],[7],[10],[-2],[-6],[-9],[-7],[-7],[6],[-8],[-3],[6],[-10],[-3],[-1],[8],[-6],[9],[8],[8],[8],[8],[-8],[2],[7],[4],[8],[-3],[1],[3],[-1],[-7],[-3],[5],[-10],[7],[2],[-5],[2],[-4],[-9],[6],[-10],[-8],[-7],[3],[9],[8],[-6],[7],[-8],[6],[-2],[2],[-10],[3],[-7],[-5],[-8],[-8],[-3],[6],[2],[-5],[-7],[-6],[7],[-6],[-5],[-2],[-7],[2],[-4],[2],[1],[8],[4],[-5],[-7],[7],[-3],[8],[-7],[8],[7],[6],[-7],[-9],[-7],[-4],[5],[-10],[7],[5],[8],[-8],[5],[10],[4],[-3],[-9],[4],[-5],[-8],[6],[-1],[-5],[1],[-8],[8],[8],[-6],[3],[4],[-3],[-6],[-6],[-10],[-3],[-3],[2],[1],[-7],[-3],[-9],[-3],[-4],[2],[5],[5],[-3],[-10],[-1],[-9],[-3],[-5],[-8],[-4],[1],[4],[-8],[-10],[7],[2],[-6],[-10],[7],[-7],[4],[-3],[10],[-2],[8],[-7],[-5],[2],[-9],[-8],[2],[8],[4],[-8],[-10],[9],[5],[-1],[-4],[5],[-10],[3],[-5],[-1],[-5],[1],[-6],[7],[9],[-4],[2],[-2],[-7],[-2],[-5],[5],[1],[-3],[10],[9],[2],[3],[10],[-1],[-5],[7],[8],[6],[2],[8],[-7],[7],[10],[-2],[-3],[-6],[-2],[-4],[-8],[9],[-7],[5],[-8],[5],[-9],[1],[8],[1],[7],[6],[6],[-4],[2],[-9],[2],[6],[-6],[7],[1],[6],[-4],[7],[-3],[10],[4],[10],[10],[6],[-2],[10],[5],[-5],[6],[9],[-3],[9],[-1],[1],[-5],[-6],[7],[-6],[-1],[-6],[-9],[9],[4],[-9],[6],[-10],[-2],[-8],[7],[9],[-8],[-10],[-10],[-9],[1],[6],[-4],[8],[-8],[10],[4],[3],[-1],[10],[-10],[-10],[3],[-3],[-8],[-6],[10],[3],[-6],[1],[7],[-8],[-1],[6],[3],[10],[5],[10],[-1],[1],[-7],[-10],[-8],[8],[3],[9],[-1],[10],[9],[-4],[4],[-4],[5],[4],[-8],[7],[1],[-10],[-10],[4],[8],[-1],[10],[10],[9],[-10],[9],[9],[1],[-2],[-10],[6],[-6],[-2],[-7],[-10],[-10],[5],[-4],[9],[-9],[6],[6],[-4],[1],[-8],[6],[-4],[-10],[-1],[-5],[-3],[3],[6],[5],[1],[-8],[-3],[-2],[-1],[-4],[-4],[1],[-3],[4],[-10],[-4],[-7],[3],[6],[-1],[-1],[6],[3],[-1],[-1],[-3],[7],[2],[-7],[-3],[-9],[-9],[6],[10],[-7],[9],[-1],[-2],[-2],[-1],[9],[-7],[8],[-6],[8],[-9],[8],[1],[-10],[-4],[-5],[-7],[-7],[-1],[3],[2],[-5],[-8],[-10],[5],[6],[5],[4],[8],[1],[4],[-6],[-2],[-9],[3],[-6],[4],[6],[2],[8],[6],[-3],[-10],[10],[-2],[-9],[-7],[-5],[-7],[2],[6],[5],[-7],[4],[8],[7],[10],[6],[-7],[-5],[7],[3],[-10],[-3],[-5],[-6],[-2],[3],[-3],[1],[2],[7],[9],[9],[10],[-5],[1],[-1],[10],[-7],[8],[8],[-8],[9],[9],[-5],[7],[-3],[5],[-4],[-10],[-4],[-9],[-2],[-8],[4],[4],[-5],[-2],[-4],[-4],[3],[2],[10],[10],[6],[3],[8],[4],[10],[9],[-9],[-5],[-5],[-1],[-7],[-1],[10],[6],[3],[-6],[-5],[7],[-2],[3],[7],[6],[-7],[10],[-8],[-3],[8],[5],[7],[10],[7],[-7],[4],[6],[-8],[-7],[-1],[9],[-4],[9],[4],[6],[6],[-9],[-3],[3],[4],[10],[5],[-3],[-7],[6],[-5],[-5],[7],[-2],[-8],[2],[10],[-8],[-2],[-10],[-10],[-4],[8],[-8],[2],[-4],[-10],[-8],[5],[-8],[8],[8],[1],[10],[-5],[-10],[5],[-2],[5],[-10],[3],[-4],[3],[9],[-1],[10],[9],[9],[3],[5],[-2],[-5],[-1],[9],[-4],[-3],[-3],[1],[8],[-3],[-9],[8],[2],[-9],[-9],[-5],[9],[5],[6],[8],[-5],[8],[-9],[-1],[10],[-5],[6],[8],[3],[2],[-10],[-2],[-6],[1],[-2],[-3],[-3],[2],[-1],[8],[-6],[2],[-6],[-9],[8],[10],[8],[-8],[-10],[-8],[1],[7],[2],[3],[-4],[-5],[-4],[4],[7],[-9],[-7],[-2],[-3],[-1],[1],[-5],[-9],[-4],[4],[6],[-10],[2],[-8],[-2],[-2],[-10],[3],[3],[-2],[1],[6],[-4],[10],[7],[7],[4],[4],[9],[-2],[7],[-5],[-2],[6],[-6],[-2],[2],[3],[-4],[-5],[-9],[-4],[-10],[-10],[-10],[-4],[-6],[-1],[9],[4],[8],[2],[-5],[-7],[10],[-9],[4],[1],[-2],[7],[-3],[9],[9],[-8],[1],[-2],[9],[10],[-3],[-2],[-9],[-1],[6],[9],[2],[2],[-4],[-5],[-2],[1],[-6],[-4],[-9],[8],[9],[4],[-2],[-1],[4],[6],[3],[-3],[8],[-1],[-2],[6],[5],[10],[4],[5],[-9],[1],[1],[-2],[3],[5],[8],[4],[6],[8],[6],[-4],[4],[5],[4],[-1],[-9],[8],[8],[7],[10],[7],[9],[-3],[7],[-3],[-7],[-3],[2],[1],[8],[-1],[-6],[-8],[-9],[-6],[-8],[6],[-6],[-2],[-2],[5],[-1],[2],[-6],[9],[5],[-2],[-1],[7],[-7],[8],[8],[3],[-4],[-7],[2],[-8],[10],[-6],[3],[10],[-7],[10],[5],[7],[-2],[7],[10],[-4],[-7],[-3],[-2],[-1],[2],[-9],[-5],[6],[-3],[10],[-4],[10],[-2],[6],[9],[6],[-10],[6],[-3],[6],[-6],[-2],[-6],[-3],[-5],[-9],[-7],[-4],[7],[1],[-9],[-3],[-10],[-5],[-8],[8],[-8],[5],[1],[4],[-2],[-4],[5],[-10],[-10],[-10],[9],[-2],[-4],[2],[7],[-6],[-10],[-8],[-10],[6],[7],[-2],[2],[7],[-4],[2],[2],[-4],[8],[10],[4],[10],[-8],[9],[-1],[1],[7],[-2],[-7],[10],[6],[5],[-6],[6],[-5]], dtype = "int32")#candidate|1886|(1280, 1)|const|int32
call_1884 = func_1675_call(relay.reshape(var_1885.astype('int32'), []), relay.reshape(const_1886.astype('int32'), [10, 8, 16]), )
call_1887 = func_1675_call(relay.reshape(var_1885.astype('int32'), []), relay.reshape(const_1886.astype('int32'), [10, 8, 16]), )
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_1888 = relay.TupleGetItem(func_1280_call(), 4)
call_1889 = relay.TupleGetItem(func_1282_call(), 4)
output = relay.Tuple([bop_1876,uop_1881,call_1884,var_1885,const_1886,call_1888,])
output2 = relay.Tuple([bop_1879,uop_1883,call_1887,var_1885,const_1886,call_1889,])
func_1897 = relay.Function([var_1885,], output)
mod['func_1897'] = func_1897
mod = relay.transform.InferType()(mod)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1898 = relay.var("var_1898", dtype = "int32", shape = ())#candidate|1898|()|var|int32
func_1897_call = mutated_mod.get_global_var('func_1897')
call_1899 = func_1897_call(var_1898)
output = call_1899
func_1900 = relay.Function([var_1898], output)
mutated_mod['func_1900'] = func_1900
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1902 = relay.const(4.450498, dtype = "float64")#candidate|1902|()|const|float64
var_1903 = relay.var("var_1903", dtype = "float64", shape = (1, 2, 10))#candidate|1903|(1, 2, 10)|var|float64
bop_1904 = relay.subtract(const_1902.astype('float64'), var_1903.astype('float64')) # shape=(1, 2, 10)
output = bop_1904
output2 = bop_1904
func_1907 = relay.Function([var_1903,], output)
mod['func_1907'] = func_1907
mod = relay.transform.InferType()(mod)
var_1908 = relay.var("var_1908", dtype = "float64", shape = (1, 2, 10))#candidate|1908|(1, 2, 10)|var|float64
output = func_1907(var_1908)
func_1909 = relay.Function([var_1908], output)
mutated_mod['func_1909'] = func_1909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_2047 = relay.TupleGetItem(func_1407_call(), 1)
call_2048 = relay.TupleGetItem(func_1408_call(), 1)
const_2049 = relay.const([[[6.039727,0.987518,0.945133,5.917723,8.869301,6.190425,9.428896,-0.094408,-9.080216],[-7.491608,-0.070292,4.385342,0.094074,0.054113,4.923117,-9.136256,9.264418,-8.093428],[8.493009,-6.644822,-4.207377,4.076348,4.021932,4.522867,-4.158958,-0.460030,9.048253],[-5.920411,8.421296,-8.724979,-9.131845,9.120051,-8.233558,-2.166607,1.910611,-8.366103],[-1.171142,-7.077861,6.573941,9.368029,8.609220,8.345824,0.342152,-7.107604,8.784767],[4.370182,9.099993,6.632947,-3.508346,-3.813872,5.286772,6.510187,-8.828235,0.111277],[-7.260250,5.945113,-0.024999,-3.985808,-3.765149,-6.437130,9.487047,5.802946,-8.367667],[-8.093463,-1.118919,5.196083,7.799566,7.260591,-5.591011,-6.352772,6.848495,-8.729730],[-0.186190,7.484906,2.467151,-7.266884,-6.714186,-8.022881,-5.760888,8.169727,9.836191],[-3.576364,-7.084432,-2.627553,-6.960670,7.469756,4.545936,7.243637,-9.811118,-2.948479],[-5.715815,8.535581,0.111263,-9.955429,-7.372048,-3.557688,-7.114217,8.256385,1.146627],[1.262735,-7.580411,1.684789,-2.442704,8.097798,-6.351907,5.179085,-7.447622,8.384583],[-3.034685,3.498630,1.650379,-1.382909,2.980550,-6.594738,4.027092,-7.709946,-1.690375],[9.555712,1.460589,-1.118375,4.120148,-1.713575,-4.131608,5.511614,1.686179,0.957527],[-3.101794,-0.466232,1.711054,-2.270020,-3.573751,-4.422325,1.284924,-7.752760,-2.325826],[-4.176188,-4.722204,4.993526,-0.762633,7.294292,-6.901416,-3.423620,-7.191649,-1.227601]],[[-7.680112,-6.298931,0.829135,1.911842,6.361958,3.113615,-9.186477,8.577562,3.343965],[9.690729,8.706671,8.762997,-6.030034,-5.000710,8.355764,-1.868730,-0.139367,-0.865321],[-1.924879,-9.314901,3.651031,1.295637,0.126188,-3.390095,-2.077402,-2.520373,-4.494637],[3.546570,6.809713,7.751572,-5.113569,-1.026190,0.930531,-0.638832,2.306640,4.366231],[6.486108,-0.381223,7.406775,6.652640,4.187447,1.053064,7.503806,-0.416587,-4.878290],[0.160582,9.303290,3.875136,5.707536,-3.294909,-7.868296,5.524647,3.352031,-8.712869],[2.637019,-0.939771,2.014492,-5.773066,-4.734835,-8.321379,5.970627,5.135367,2.639075],[2.237920,-6.164815,9.468884,6.049947,-5.772133,9.300073,5.646734,-7.975987,9.207115],[1.935379,0.381589,-4.102462,-9.386439,1.914293,-3.308037,4.494761,9.241517,-1.733315],[-9.109569,-8.536310,-2.904785,-8.551433,-5.168242,9.885258,-4.796413,2.962078,-6.587362],[7.591565,7.867314,-3.962342,-7.819872,6.453470,2.677854,-5.159273,0.551958,7.536376],[-6.349560,7.421079,-3.140148,-4.630321,7.883228,-0.861187,5.422531,1.512506,8.553478],[3.830469,4.456572,5.519921,-3.971796,-5.152811,-1.007273,0.276025,4.290340,5.702075],[5.405867,6.464672,-8.023025,-5.235350,5.484719,-2.972506,7.519203,-5.647521,1.615313],[0.662089,-0.977266,0.489268,1.697891,2.345203,-8.022255,7.507702,8.313368,-0.052910],[-4.125084,2.232229,-6.201482,-6.503927,9.379477,-8.323763,7.723619,-5.285223,-4.432011]],[[-1.651560,-7.006074,-0.336542,6.261773,-4.496977,-0.860433,-7.909016,4.456283,8.672790],[3.217990,2.860608,-2.950345,2.665086,-5.673584,8.466071,-9.009255,-5.158962,-1.593707],[5.905477,-2.156970,-2.900265,-5.517914,-2.475931,-4.966477,-1.907809,6.908526,6.081503],[6.009856,4.793209,-5.231325,-1.378926,9.995161,-7.219123,-6.395938,6.603637,2.860238],[2.765072,-4.374020,-5.801509,9.574720,-8.822050,-1.063278,6.998537,3.358744,4.800935],[0.910299,-4.600280,8.788117,-9.030924,-9.757330,-2.120496,9.445770,0.999010,6.165081],[8.984585,-9.973103,-0.599104,5.267783,2.569608,-6.200921,-1.483606,-4.907278,-9.478989],[9.467753,8.585424,-7.711949,-4.574972,-8.612684,5.810543,4.880734,-0.139821,0.701628],[-0.878912,-8.848487,4.272394,4.995128,8.978171,-9.732307,7.787796,-7.798784,2.780320],[-5.610227,3.150626,5.291149,0.467463,5.578844,7.367200,-6.572707,0.201603,9.362493],[7.532627,-6.530357,-4.072785,2.771003,1.808926,3.577765,-6.598999,-8.570127,-8.136023],[3.796900,-8.936281,3.292011,2.118087,6.834246,9.830235,6.950875,8.100576,1.940720],[-0.820508,6.583667,-9.898637,-0.165973,5.392518,-3.831361,-9.291331,3.440835,-3.376640],[-7.744286,-8.821377,-8.816880,-8.244124,-3.402244,-7.524014,-2.790314,-8.367021,-2.618026],[-7.207560,-4.649949,6.448730,4.024295,-6.312620,-5.655304,7.637582,-1.795238,-0.050042],[7.067015,-8.685228,1.048247,8.082386,1.118474,7.702749,7.514855,-6.697248,3.871136]],[[-6.194526,3.076397,4.456426,-1.938059,7.638300,-0.630250,1.935579,-7.324186,-4.228564],[-0.450535,1.529025,6.456651,9.515825,-6.164532,-2.350826,9.966800,-9.960507,3.381633],[-1.353549,8.223129,-5.992436,-0.701487,8.885104,5.059820,-2.587957,-9.667726,6.543933],[-2.314065,-3.698368,-6.061624,5.583417,8.840647,2.073880,1.297009,-2.982476,4.461788],[7.271766,0.283435,-2.054700,-7.979239,-0.583839,7.469653,-8.950975,5.168462,-9.599728],[-0.601905,8.573230,-1.754636,-4.577667,4.868259,-7.331850,-3.356134,-2.169216,-7.519928],[-3.440436,0.561027,9.938972,3.005750,-5.734953,-5.669941,-5.168723,-6.859929,1.846881],[-6.165130,1.729305,-1.468963,-6.591262,0.520857,-5.442089,-1.660195,-3.139982,-5.438777],[-0.668536,1.626041,-8.979272,2.364514,-9.055201,-2.884747,-7.507781,-5.496165,-4.732158],[7.686216,9.959930,5.005914,7.883571,-4.632672,8.381270,7.565864,-7.237456,3.158147],[3.725562,-4.783067,-5.687515,4.937340,6.109725,-4.153898,-2.943051,6.408843,-3.374548],[-4.163877,-6.477804,3.434938,1.247906,7.430751,-3.764783,-2.805641,0.820009,6.133968],[6.444420,2.058399,-4.159371,9.847415,8.706363,-8.706278,8.474843,0.667583,-7.034707],[-8.080980,-6.128684,7.839377,-6.361946,-5.076829,-1.601231,4.807676,-1.895782,0.541969],[9.800988,1.998801,7.233129,-3.493789,-2.717057,-8.383463,1.024063,-2.435703,-8.567918],[-4.570311,6.049842,-9.660184,-8.183380,-3.925077,-4.234060,-7.762721,-2.989789,9.228820]],[[4.581650,-9.191229,4.074900,-7.682371,7.611039,-2.097016,0.312546,-9.304361,0.834308],[-9.868474,6.263192,-8.890604,-8.175386,1.155267,3.157769,-2.044571,-5.748336,-9.315062],[1.769086,-8.165981,-8.453162,-5.095910,4.446569,-4.833888,-4.864223,8.246181,9.636047],[8.569061,-8.547712,-1.714092,3.524091,-0.531461,-3.133782,-4.695702,-1.448198,-0.447984],[7.629440,-6.507172,-3.589928,-2.447674,3.616576,-8.348791,3.963503,7.422092,-0.258847],[0.296097,-4.650091,1.096084,3.444307,6.965481,3.698076,-0.108202,-6.432949,8.982760],[8.988152,3.875559,1.252198,-3.714217,-7.649229,-4.455950,4.995087,-2.137184,-4.349382],[-6.162484,0.128071,3.978001,-1.139913,-6.186667,-2.707721,4.707901,7.700315,-5.111309],[-6.923616,1.767645,-5.241057,5.931312,-6.120703,-5.498338,4.152121,-1.455996,-1.555392],[4.206496,8.093282,7.499615,-9.642600,0.754140,-9.438220,-4.292743,-8.993508,8.012304],[-4.668453,3.331214,-1.555926,2.966946,-0.266509,6.138706,3.832172,8.149495,-2.575576],[-4.554947,8.118081,-7.695050,6.372786,-4.648484,-1.039397,2.755253,-4.653182,5.538350],[-2.429263,8.064417,-2.664419,3.862485,0.745139,-4.087416,8.476412,-1.549257,9.738254],[-0.697898,-0.810198,-4.563116,-4.276788,3.784491,-8.588695,-0.245008,5.805472,-3.645740],[-0.869688,5.371266,-6.599572,5.024063,-8.707826,4.450552,-6.142360,-1.331926,-9.147627],[7.329710,-1.139637,-0.587377,-4.928521,2.868830,-5.602981,0.341669,7.400682,-6.428095]],[[0.369488,-6.987776,-7.491596,6.460004,3.409502,9.230373,-8.358268,5.492957,8.918515],[-5.193883,-6.483193,8.805842,4.329672,0.305431,1.518755,-6.506529,9.873891,-0.797075],[-1.545742,-1.663252,2.464364,-0.868250,-6.108912,6.951420,0.129706,7.967948,5.097082],[-4.994936,-4.709235,-2.976244,7.651174,-2.251427,2.896089,-3.328645,-9.006787,4.876913],[-4.356668,0.631840,9.552275,-8.581405,-7.490990,-0.230344,-0.511431,-3.265225,-7.221933],[-6.918660,-0.555711,-2.615818,6.073222,9.343310,2.722958,-8.510672,-4.822120,6.315093],[-3.508077,-2.665575,0.681408,-0.082907,3.011648,-6.826169,5.162792,-0.553168,1.199621],[9.398264,1.897549,-6.110537,-8.104239,1.780340,8.631862,-6.633002,-0.645590,-3.058025],[-3.800238,-1.141603,-6.426010,8.024968,2.824406,4.440570,9.489504,-5.302106,2.447563],[1.308348,6.683495,3.212612,8.595023,-6.675047,-3.354387,-2.175809,8.405805,0.365224],[6.042572,-7.045973,-5.950751,-6.273921,-3.693660,-2.731453,0.264716,2.068842,-1.599278],[6.620046,3.841514,-3.353699,0.629893,-0.563147,5.798421,-4.772263,-1.192458,6.995323],[-4.815138,-4.841066,-3.048424,-3.522673,3.282588,-5.800190,-5.248746,6.733070,3.848897],[-3.790286,-1.446789,-8.836313,-4.568650,0.731508,8.175729,9.898451,-7.523029,-2.908371],[-0.058162,-9.690166,3.713497,-1.517326,4.749959,9.874876,2.733255,9.564584,-3.217528],[2.024780,-9.651845,5.353767,5.474834,5.220302,6.799834,4.601613,-1.278104,1.196473]],[[-1.845751,-6.924572,5.890970,4.523819,5.574731,3.784631,-1.982213,-1.013858,9.637891],[-8.488268,-1.338774,-4.593614,5.641091,7.071467,7.041772,5.948409,-9.462040,0.733503],[4.584713,-8.562878,5.112183,-5.633988,-8.656209,-2.229562,7.682777,0.050129,-3.359637],[2.214047,5.197930,-0.932442,4.549075,-2.459362,4.210567,5.250486,-0.119491,9.319899],[3.340304,7.796164,-5.932655,6.388968,-2.609676,8.133126,-4.717688,5.985382,1.788324],[1.074879,4.133832,4.565620,6.880475,-4.942389,-5.517280,-3.397783,2.773947,-2.695629],[0.817218,7.045685,-6.808148,7.209878,3.968818,-2.889466,-5.855966,0.959808,3.269905],[-3.751105,-8.600327,0.191719,-7.362135,-1.545060,3.841628,2.418632,6.343492,4.584551],[1.742697,-4.127416,0.743003,4.933419,-7.448624,8.482995,3.977974,1.187441,-3.265973],[4.685785,-0.594148,6.223238,-5.736839,-8.512233,3.115128,3.133247,-1.506602,-9.012401],[-7.539101,2.690165,-2.562274,-2.210553,-4.203255,5.916120,-5.880305,8.908018,0.815942],[8.685836,4.209009,1.480216,8.952967,7.912739,-3.984568,1.086177,-1.091419,-3.255533],[9.299803,-7.476369,-8.160592,2.922973,-2.062428,2.764361,7.088727,5.694257,-1.828474],[0.110131,9.202863,-3.588591,-1.485848,-6.690942,-1.932734,-6.620643,-5.811396,-4.289811],[-1.326304,0.614850,-6.965771,-1.579668,0.348165,9.648716,-0.515674,5.880794,6.515255],[-2.562154,6.599541,-7.437944,1.354716,-9.513614,-7.158517,-3.570117,-5.314196,6.240707]],[[-3.155933,-1.383697,-4.890842,2.958165,-4.992603,-8.196357,-1.034404,-3.011908,-6.595113],[-9.624749,7.964683,3.416693,3.205945,-3.613240,3.604654,-3.279693,-4.258029,-6.322273],[-9.132362,6.632238,-7.978492,2.233428,-1.641571,6.122441,-7.261603,-1.318027,-4.381428],[1.364731,1.013168,1.193600,-6.616553,-3.828534,-5.741088,5.840724,7.395441,1.611571],[-9.560118,-8.406909,-0.745048,7.639827,7.886384,-2.359088,2.278050,4.918153,-9.159933],[-4.459093,1.883929,7.196595,6.800263,-0.439062,0.657060,-5.199281,-7.881338,3.072426],[-9.859940,-0.972860,-4.150495,0.248031,-6.803727,9.313944,8.118900,1.801508,-3.417282],[-4.447791,2.525629,-9.301423,4.758489,0.939184,-6.485874,-8.789742,8.419613,-2.526501],[-2.663435,-5.133420,5.121903,9.887758,2.010288,8.337505,8.951451,1.935600,-5.077605],[2.338762,-2.276551,-0.418883,4.231228,-3.126663,3.813446,7.679056,-0.850969,-1.679368],[2.804147,0.323896,6.347746,-1.911565,-1.652095,7.192244,-0.892134,-2.530754,7.954939],[1.607304,-2.316675,-4.873695,-1.016496,4.599684,2.662223,-3.250932,0.660721,2.547395],[-1.969815,0.757206,7.859526,-8.001302,2.498215,-0.510543,1.568782,-6.749809,5.650157],[2.095992,-6.960639,1.821731,-5.494855,-2.538157,1.758628,-3.765519,6.348267,-0.921821],[6.138746,-9.854394,-3.625676,7.780848,-7.439476,6.737277,-7.795097,-3.156109,1.123797],[-7.868137,7.108455,1.150439,-3.003539,3.680638,7.006652,-9.867870,-0.323795,7.500766]],[[-7.758812,-2.561168,-0.286338,-3.348697,-2.680666,5.807010,-2.394301,5.229342,-1.211048],[-3.756192,6.012226,5.639188,-8.904225,7.751048,-5.154767,3.087697,9.405804,-7.999980],[3.709398,0.618880,4.955338,2.984637,-2.221264,2.790172,8.302797,-1.042310,2.197606],[5.240822,5.038664,-6.365576,2.770790,-3.371219,4.865695,5.621914,-0.053589,-3.668815],[1.353639,5.414339,4.756501,7.278968,5.351038,1.738997,6.475196,-9.923603,6.034456],[-4.217553,-5.962555,0.284913,9.680881,-6.856640,0.835054,0.135004,-5.222555,6.713092],[-5.227130,-5.691334,-8.627001,-2.920464,-8.471115,-2.368548,-2.381259,-5.181268,-3.363358],[-8.930568,-2.860650,8.822269,-9.873738,1.065038,1.165491,-9.119205,8.424938,9.598253],[-0.710141,5.928465,-0.801072,-1.021632,-1.329702,8.733071,-6.995017,8.514214,-8.797016],[4.940555,2.779192,0.303144,8.903439,-3.511035,-3.610005,-9.482479,-3.621847,7.998545],[6.062790,3.090844,8.103273,-8.468499,-6.263858,-1.948343,-3.162459,1.204436,-3.728722],[2.396545,-6.199055,-2.887648,8.536698,7.586700,-0.908748,6.338996,-9.400555,-0.071771],[0.933726,-9.392009,-3.001906,1.187844,-1.551487,-3.679917,4.047387,-5.093807,-6.120637],[5.414278,9.188602,2.999950,3.542710,2.774293,3.122784,8.786449,2.060481,-5.587099],[4.959232,-7.001407,7.679195,-9.583628,-0.950996,-0.449955,-7.007194,9.317113,6.401184],[7.802222,0.673012,-3.194097,-6.296211,4.566791,5.201054,1.960580,6.574465,-3.992496]],[[6.029862,-9.359745,0.945154,-9.421509,-3.358330,5.188289,-8.446232,-0.114743,-1.023731],[-3.958980,6.870853,-9.385128,7.762473,4.471994,9.310159,5.842285,-8.881771,2.492279],[9.364477,3.914363,8.867167,2.149458,-9.213708,1.658676,-1.072347,9.639802,1.021394],[0.092914,-7.884405,-2.716812,-3.062486,-8.947312,8.898682,3.919569,5.391773,-6.862960],[6.120917,-9.453414,9.913695,-9.148808,5.122617,1.979651,9.375938,8.567257,1.640162],[-9.719307,-5.835568,5.323722,-5.499463,-9.302511,6.430409,-1.964234,-6.009981,-6.771047],[-0.188605,7.641235,8.481867,-1.694947,6.504392,-1.932990,9.631583,3.666049,0.819555],[6.975696,1.198042,5.798888,-1.252338,7.668480,-8.414682,8.576664,0.925763,-5.677202],[5.873447,2.567416,-9.875167,-5.936204,-7.544430,4.111407,-0.577320,5.433318,-7.982574],[-8.389037,-2.392230,7.903370,-3.757349,0.401157,-2.399994,-5.493487,0.126567,-6.696884],[8.272126,0.422054,-6.674223,2.453440,-2.218627,-6.596891,4.927296,7.384815,8.891613],[-1.820408,7.008302,3.384155,6.329456,-7.372153,3.256548,-3.663752,3.289660,6.995348],[9.628463,-8.701480,5.427197,-5.942911,9.598622,4.681211,1.381345,-3.380311,6.944154],[-1.838954,7.179963,8.160999,5.875741,4.178796,-2.400277,7.263825,7.612463,3.586661],[-5.921895,5.286448,3.727696,-3.146011,-7.237086,-5.915600,-9.057782,-6.999331,5.601125],[7.657303,-7.251070,9.604771,3.797201,-0.351992,-2.821987,5.778446,5.137973,-5.096803]],[[6.815560,0.262928,-3.043976,-2.855561,-4.350344,-8.789783,-0.573423,7.021842,5.579040],[4.264440,8.473161,1.991539,7.904634,-2.190322,-1.737141,-3.554136,-3.985991,4.053683],[5.561435,3.594936,6.925220,4.699356,4.638050,-4.133580,5.914156,0.302018,3.093592],[-8.553324,-5.459866,6.863996,1.157091,-5.467866,-7.881077,-4.367299,0.529237,9.498072],[-3.225649,1.860218,7.191225,-4.029323,8.493769,5.156772,-1.581813,-7.107029,3.659695],[0.644679,2.238233,-7.900591,-8.268186,7.991399,-7.462830,-6.699714,5.624518,9.555026],[6.623437,0.408684,5.569678,6.154974,-4.349225,-7.125907,4.728390,-1.844145,-5.317148],[-5.539862,-9.181414,-3.311071,3.938290,9.890658,-1.970253,7.559745,-5.456834,2.960260],[-5.025103,7.669967,-5.232879,-9.003964,-8.280762,-2.927210,0.703282,4.468431,-0.947327],[-7.050646,-6.908920,-5.315130,-0.603597,-1.937802,-1.792006,4.816992,-4.196107,1.931309],[-1.673721,-5.741850,-3.491145,4.739810,-3.619068,9.229688,3.241934,-0.786278,2.227358],[-8.193704,-8.803737,-0.925729,-7.334797,7.639308,5.505942,7.393769,-8.449600,-0.345464],[-4.732028,-6.853791,-6.124408,4.919203,-2.757164,9.750389,-6.344882,6.793413,-9.348654],[9.427156,9.448689,7.806462,1.127835,6.350303,-0.665896,5.197108,7.964374,1.408843],[0.112877,9.353518,-4.237018,-0.098422,6.767802,-6.510283,8.947705,-0.896614,-9.823057],[4.060108,8.135945,-5.437409,-8.886997,-4.356889,2.551092,7.805074,3.424126,-8.333332]],[[8.721597,-8.428182,0.482856,-6.777074,0.509921,9.087935,-0.714717,1.512269,7.238122],[-9.584325,7.263772,-6.394288,-8.320637,-1.443580,-7.384804,-2.233812,0.037585,-6.294061],[4.517639,5.649773,-7.119258,-8.210293,-4.199220,-3.382415,9.520808,9.119467,1.387717],[-6.358296,-0.957432,2.495289,4.789997,-4.308656,0.184588,6.716121,-4.882516,3.538388],[-3.045317,1.631454,0.272246,-3.043547,-7.830309,-5.705695,5.975884,-0.105608,7.776702],[9.905059,0.209921,9.619270,-3.143167,2.130163,2.521267,5.825330,-3.881972,-4.881270],[-1.890300,4.762354,8.007912,6.239739,-8.236717,-0.662255,2.207757,-7.171748,9.982239],[1.097176,2.640537,-0.372348,7.611885,-5.720439,6.273282,-4.309854,4.361160,-6.936640],[8.525773,-4.888297,8.442316,1.803422,-3.974799,9.083639,2.361073,5.074586,1.740103],[9.025670,-9.219382,4.061399,7.763779,7.779361,2.960858,6.926228,8.364241,-8.181256],[-8.362790,-2.008769,5.003195,-9.717720,-6.043601,7.466999,-5.413528,6.175323,-5.488742],[-8.747461,-1.851691,8.934414,9.163882,-9.900656,-2.699227,-0.910614,-9.659943,2.294484],[-0.871383,-1.892276,2.281486,1.005862,-6.819832,-3.905097,7.163923,-3.893715,3.455494],[4.655261,-6.579492,6.899800,-3.615456,5.188023,-5.907680,-5.842050,2.872893,-9.521229],[2.858910,-3.363043,-6.240402,-0.224982,3.493968,4.938163,-3.794482,3.768785,-8.481973],[7.554430,-8.719121,4.783420,6.310821,-3.181113,-7.037648,-6.812315,-5.603861,7.044795]],[[0.102910,-0.852629,5.971337,2.568162,-3.144325,-4.313063,-1.969099,7.128619,7.156184],[4.526700,-7.361681,0.576306,-2.824494,-7.543844,-6.871456,3.535075,-4.475522,-9.079510],[2.932313,9.241666,-8.229026,-9.090988,-9.103329,-0.170431,-8.183229,-4.757300,7.425472],[2.377102,3.565134,-6.148388,-2.461949,-5.534274,8.955255,-5.226358,-8.336725,-1.736478],[8.239931,3.809276,-5.462999,6.960890,-7.942005,5.619768,6.260506,7.126358,3.216196],[-6.253068,-2.171414,-0.167892,1.730800,-7.716923,-4.478124,3.121932,-0.424191,7.535161],[-0.189037,0.986728,0.521979,-1.391488,-9.991433,4.319156,7.098011,4.528166,-6.054923],[0.444369,-8.034823,-6.725852,-8.275604,-3.637766,-1.260791,7.007161,9.813612,5.415033],[9.165510,5.237661,-8.977325,7.707555,8.519954,2.024968,-6.649115,6.312902,-5.027249],[-5.475796,1.958166,0.553111,-0.367873,-9.154112,-2.176261,-3.170789,8.571107,8.932866],[8.296751,1.236811,2.522215,-9.694984,1.912880,-5.216457,7.332032,-5.087917,4.761283],[8.549900,-4.833511,5.693997,0.340526,9.372194,-5.803106,-7.611861,6.330738,-2.577453],[-9.618873,6.199307,-7.613889,-5.379215,-8.240344,3.233330,-3.447975,1.035137,-6.614884],[7.605489,3.876628,6.632767,5.160871,1.118561,2.743362,9.396395,-0.465925,-6.824336],[-9.959352,4.536295,8.778517,4.782246,0.943190,2.145939,1.186677,6.889424,1.405883],[-3.828306,3.950781,8.869473,5.494324,-6.902440,2.150743,0.269611,2.824307,-4.092565]]], dtype = "float64")#candidate|2049|(13, 16, 9)|const|float64
bop_2050 = relay.multiply(call_2047.astype('int8'), relay.reshape(const_2049.astype('int8'), relay.shape_of(call_2047))) # shape=(13, 16, 9)
bop_2053 = relay.multiply(call_2048.astype('int8'), relay.reshape(const_2049.astype('int8'), relay.shape_of(call_2048))) # shape=(13, 16, 9)
output = relay.Tuple([bop_2050,])
output2 = relay.Tuple([bop_2053,])
func_2067 = relay.Function([], output)
mod['func_2067'] = func_2067
mod = relay.transform.InferType()(mod)
mutated_mod['func_2067'] = func_2067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mutated_mod.get_global_var('func_2067')
call_2068 = func_2067_call()
output = call_2068
func_2069 = relay.Function([], output)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_2090 = relay.TupleGetItem(func_1205_call(), 1)
call_2091 = relay.TupleGetItem(func_1207_call(), 1)
output = relay.Tuple([call_2090,])
output2 = relay.Tuple([call_2091,])
func_2092 = relay.Function([], output)
mod['func_2092'] = func_2092
mod = relay.transform.InferType()(mod)
output = func_2092()
func_2093 = relay.Function([], output)
mutated_mod['func_2093'] = func_2093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_2236 = relay.TupleGetItem(func_1311_call(), 0)
call_2237 = relay.TupleGetItem(func_1313_call(), 0)
const_2247 = relay.const([[[8.109081,9.675034,5.637763,8.288844,-2.841316,-9.528065,4.028123],[4.352607,6.197928,9.490299,-6.931807,5.326822,-8.137009,-3.185579],[4.702180,-6.452161,-6.942649,-1.416143,-6.689245,2.845135,-0.642991],[4.218906,-7.007271,1.228253,-5.803297,0.027913,4.207939,-4.385085],[-0.774690,3.467891,5.805277,7.284013,-2.414484,6.155743,8.559434],[0.651917,3.184837,7.202824,3.226890,2.524348,-2.441006,8.699620],[9.537024,8.561203,-5.452296,6.028333,5.122036,1.774154,-8.798154]],[[-5.689558,7.017808,5.422802,8.551020,-8.559641,1.421963,-8.317745],[-0.077159,-0.466721,-8.001966,-6.963325,-9.196455,-6.609997,-1.933095],[9.802569,-1.439302,-1.785697,6.592401,-9.183613,-3.676486,-7.449830],[-1.302253,3.268062,-5.905790,3.113644,-0.509673,1.141527,9.979077],[-5.582704,7.876718,9.541976,3.708987,-4.421337,0.363941,1.139311],[6.171811,-4.253921,5.848147,1.679029,1.716348,-9.327781,-8.593641],[-6.497277,6.681554,4.285162,8.365520,-3.896174,-0.374958,5.716386]],[[-8.590208,7.016578,-5.863951,5.115438,-5.770946,1.630763,0.300027],[7.432658,6.504707,-9.394673,-8.688487,-9.700965,-0.109765,-4.064938],[7.847006,-0.357650,1.578366,2.376658,8.659829,3.135748,4.803291],[7.279717,-7.697399,-4.803422,3.982200,-5.613060,-7.878135,6.143560],[4.737795,6.998527,4.776568,-8.040985,-8.850420,9.825903,8.766535],[6.915685,0.186899,6.709285,2.996314,-6.190925,-7.782421,-0.820693],[2.548678,0.967114,6.331189,1.785462,0.630223,3.708797,2.957000]],[[5.241676,2.932298,-9.247126,-3.220310,-9.780780,5.247242,-9.358302],[8.523379,4.231269,-6.893580,-3.672120,3.686427,-1.226830,9.801889],[-4.250622,-1.766807,6.233571,-7.762722,6.446892,-0.530666,-8.021895],[-3.853614,9.329327,7.498643,-1.346248,-5.115678,-1.456540,-8.625551],[-5.788176,-4.365587,-2.619406,-1.834494,1.308796,5.506910,6.935952],[-9.088861,-1.823252,-6.069827,2.394135,-1.947647,0.338262,-1.977985],[-8.407312,2.860094,-8.459481,-6.966144,-1.018322,4.295992,7.854191]],[[-9.784270,-8.065047,6.978849,2.895301,-8.503563,1.628398,-8.935572],[3.078797,-7.844105,5.544730,-0.091937,-7.558330,1.295262,-8.283284],[-8.743141,6.180472,-4.437394,2.444845,-9.933009,-5.606863,6.305386],[6.152455,-9.882234,-1.850127,0.174168,-4.847008,-2.623901,-3.006157],[-8.764866,-2.217943,-7.652634,0.721969,3.824752,-8.468300,-6.251463],[-8.402117,7.548573,0.049133,2.031513,-1.984248,-8.130627,-5.228965],[2.882696,-8.054540,4.283781,-7.901742,-5.522243,6.212234,9.148934]],[[-6.276474,-4.755294,2.971208,-5.119832,5.643022,5.883905,-3.434740],[5.594902,-8.679758,6.263019,-9.184590,5.319622,3.923824,-4.063129],[3.627153,-5.131952,2.873746,-8.973989,-8.705527,-2.018901,-4.609197],[-2.786680,9.516979,-5.193666,-4.390602,-6.492982,-0.674980,-6.432795],[2.717601,-1.803180,-0.194814,-1.589510,3.275956,-7.703649,-0.528930],[-8.567524,-5.766540,8.826719,-2.419391,7.900900,-6.205592,0.328672],[9.543773,-5.263830,-7.123079,1.734859,7.646760,6.216317,0.776608]]], dtype = "float64")#candidate|2247|(6, 7, 7)|const|float64
bop_2248 = relay.multiply(call_2236.astype('float64'), relay.reshape(const_2247.astype('float64'), relay.shape_of(call_2236))) # shape=(6, 7, 7)
bop_2251 = relay.multiply(call_2237.astype('float64'), relay.reshape(const_2247.astype('float64'), relay.shape_of(call_2237))) # shape=(6, 7, 7)
uop_2253 = relay.atan(call_2236.astype('float32')) # shape=(6, 7, 7)
uop_2255 = relay.atan(call_2237.astype('float32')) # shape=(6, 7, 7)
output = relay.Tuple([bop_2248,uop_2253,])
output2 = relay.Tuple([bop_2251,uop_2255,])
func_2265 = relay.Function([], output)
mod['func_2265'] = func_2265
mod = relay.transform.InferType()(mod)
output = func_2265()
func_2266 = relay.Function([], output)
mutated_mod['func_2266'] = func_2266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_2282 = relay.TupleGetItem(func_1537_call(), 0)
call_2283 = relay.TupleGetItem(func_1538_call(), 0)
var_2287 = relay.var("var_2287", dtype = "float32", shape = (10, 14, 11))#candidate|2287|(10, 14, 11)|var|float32
bop_2288 = relay.divide(call_2282.astype('float64'), var_2287.astype('float64')) # shape=(10, 14, 11)
bop_2291 = relay.divide(call_2283.astype('float64'), var_2287.astype('float64')) # shape=(10, 14, 11)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_2292 = relay.TupleGetItem(func_1407_call(), 2)
call_2293 = relay.TupleGetItem(func_1408_call(), 2)
output = relay.Tuple([bop_2288,call_2292,])
output2 = relay.Tuple([bop_2291,call_2293,])
func_2294 = relay.Function([var_2287,], output)
mod['func_2294'] = func_2294
mod = relay.transform.InferType()(mod)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2295 = relay.var("var_2295", dtype = "float32", shape = (10, 14, 11))#candidate|2295|(10, 14, 11)|var|float32
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2296 = func_2294_call(var_2295)
output = call_2296
func_2297 = relay.Function([var_2295], output)
mutated_mod['func_2297'] = func_2297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_2304 = relay.TupleGetItem(func_1407_call(), 0)
call_2305 = relay.TupleGetItem(func_1408_call(), 0)
func_1570_call = mod.get_global_var('func_1570')
func_1572_call = mutated_mod.get_global_var('func_1572')
const_2311 = relay.const([[7.424584],[-6.417612],[6.589526],[2.183536],[7.885814],[-8.868401],[1.320251],[-7.809469],[6.100524],[-9.479537],[-4.062754],[-8.277319],[5.088719],[-5.190728],[8.770116],[-0.794555],[-0.232674],[4.935147],[-4.819740],[-1.680720],[-9.230910],[1.422649],[7.882663],[5.857583],[-9.441390],[4.786296],[4.496016],[-3.235424],[1.483729],[-4.104287],[-3.828017],[5.444247],[-3.141840],[-0.569910],[-3.160424],[-0.164096],[-5.480486],[-5.391746],[6.311846],[-3.450130],[3.012700],[-1.291394],[2.796732],[-7.191303],[-9.735694],[7.314236],[5.419282],[7.359641],[5.577331],[-3.605417],[-3.384961],[-8.708438],[-3.275322],[-0.345322],[0.426895],[-1.097627],[-4.072434],[5.534651],[2.930681],[0.215722],[3.640907],[-9.498923],[2.876869],[-9.623629],[-7.070985],[-0.491263],[4.817889],[3.384390],[-4.720752],[6.563548],[-6.854602],[-2.197960],[-7.098687],[-1.200041],[3.448025],[8.879609],[-8.262900],[1.325691],[2.529256],[-3.487279],[1.242273],[-2.151504],[-8.180833],[-0.701805],[-3.808621],[-8.981252],[0.894381],[0.265062],[-5.176522],[-9.898622],[7.016679],[-5.894709],[3.454605],[-0.101042],[5.439296],[-0.580963],[9.086229],[1.345823],[-0.541673],[-7.134459],[9.514196],[8.924926],[-7.489193],[7.529660],[-1.310711],[-4.604046],[5.273330],[3.936714],[4.048121],[-6.817254],[0.214389],[4.078859],[1.911193],[-7.937311],[-6.396555],[-3.575585],[9.717164],[8.981884],[1.845725],[-3.085922],[-8.020447],[4.170808],[-9.801483],[-4.917151],[-0.048420],[-2.058721],[-1.314504],[8.440580],[3.707528],[3.874587],[-4.380546],[4.230443],[-4.147340],[6.167699],[4.219078],[7.998636],[4.527545],[-7.801366],[-4.180752],[8.931056],[6.242550],[-1.125736],[4.374808],[2.275542],[8.014522],[-7.177368],[9.120160],[2.183071],[-9.981414],[4.833893],[-1.425296],[8.300310],[3.842195],[1.783941],[1.105725],[5.821076],[7.816712],[-5.243105],[6.050771],[1.156514],[-5.796950],[-8.308446],[1.449680],[4.279035],[3.975735],[-3.172390],[-6.488290],[5.579243],[0.926429],[9.442650],[5.771073],[1.920010],[-0.765219],[9.249232],[3.721762],[-8.339349],[-7.646907],[1.074034],[-7.096107],[-6.221630],[9.044439],[8.624198],[-4.666380],[-4.784979],[-7.712670],[-8.970939],[-4.991551],[-4.583065],[2.095507],[-2.746137],[-2.595126],[1.531248],[1.197807],[-9.049277],[1.422513],[7.300126],[9.652282],[-1.041815],[5.312863],[9.647525],[-3.061125],[9.279634],[0.214575],[4.879423],[5.208208],[-7.846691],[-3.068058],[1.304125],[-4.029150],[0.267235],[-8.137232],[9.592558],[-3.199094],[7.916788],[-1.684588],[6.320620],[5.867712],[3.035152],[-7.186791],[4.503391],[-2.050201],[1.571341],[6.101760],[-0.700884],[-7.348569],[-4.856261],[1.294980],[1.832013],[9.890898],[7.979502],[6.497118],[3.396056],[-5.804683],[-8.451021],[3.370338],[-8.235767],[2.661432],[6.002788],[-5.333789],[-6.911540]], dtype = "float64")#candidate|2311|(240, 1)|const|float64
call_2310 = relay.TupleGetItem(func_1570_call(relay.reshape(const_2311.astype('float64'), [5, 12, 4])), 0)
call_2312 = relay.TupleGetItem(func_1572_call(relay.reshape(const_2311.astype('float64'), [5, 12, 4])), 0)
const_2315 = relay.const([[[-0.707201,-5.168099,0.728113,-4.075249,-7.836918,6.696016,-1.162401],[7.922983,-3.146565,9.168890,4.655026,-7.875839,8.920401,-5.898078],[-1.063978,6.384546,5.105873,1.998934,8.505214,-0.275992,-9.879852],[-5.183439,7.845454,-9.041026,8.545549,-7.398684,-5.259107,3.775829],[-8.141900,7.680111,9.645851,0.471413,-4.510168,9.796984,8.785999],[5.222903,-0.620533,-8.655397,-4.440923,2.452340,-2.924316,-6.160436],[4.198455,-4.223239,5.195560,-6.999218,2.490546,5.889767,-1.595278]],[[8.288822,-6.885954,7.661641,-8.588521,-9.296000,8.338086,-1.565874],[-4.373670,-7.264701,7.291076,0.464545,-4.667319,9.809509,-4.085253],[2.280852,-2.094194,-4.955729,4.517909,6.057035,5.137280,-0.224721],[4.174144,8.639883,5.353070,0.772105,-4.879604,-3.707099,-2.184765],[-2.974308,-0.799791,-4.154610,-9.079066,-5.094146,-2.862249,-6.781604],[0.953382,-0.316313,1.663440,-1.472130,2.270964,2.758080,0.730863],[-1.605249,-5.662922,-2.351941,-4.565391,5.485302,6.976103,5.746508]],[[0.104232,8.899364,-5.369327,1.194357,9.397946,1.592987,-9.072593],[3.563412,-1.932896,7.314968,-6.023492,7.025278,-6.964164,-2.080997],[-2.480015,-3.475064,6.583507,9.360544,1.317806,3.425558,-5.398308],[-0.069072,-3.766722,-5.762078,4.864644,2.899817,0.215638,1.752759],[3.379307,2.121089,5.328753,6.420831,-9.920549,-6.330139,7.192785],[-8.421963,-0.059328,-8.437951,-2.787033,7.576524,7.811332,-6.201763],[-1.118177,-2.659400,8.625989,4.689822,1.203615,1.183901,8.188780]],[[-7.309796,8.434794,6.665508,7.840864,-5.088935,-8.725270,2.168153],[-1.255376,7.529654,3.092551,-5.886017,5.969347,8.160914,-1.016915],[-2.142409,6.062678,9.624167,-3.679309,-0.578006,-3.518100,6.161839],[8.961601,-5.134146,-8.136293,-8.635203,-0.897787,-1.530655,-3.091764],[-5.178753,-6.173906,3.579490,2.506608,3.493199,3.722086,4.843799],[-3.088921,-5.575966,-5.225931,-8.819387,-5.483694,-1.010859,1.857781],[8.769910,3.312043,3.844586,-4.708107,4.495143,6.983400,6.034870]],[[-4.916507,-4.464296,-4.207085,-5.650284,-2.544304,2.969870,2.798098],[9.593485,0.616246,9.022614,-2.283351,-2.058629,8.014256,2.107485],[-2.235867,8.642582,5.193335,-9.675649,-7.599474,-9.518561,2.974940],[-5.810769,-1.043859,6.320114,-4.178587,-0.386309,9.638705,5.965353],[-4.542997,5.076594,-6.248796,1.971868,7.428953,3.092038,6.605367],[-1.303489,7.039860,7.934316,-1.351423,8.466308,8.832617,7.451696],[0.560310,9.900581,2.577031,-4.628101,0.228101,-9.716169,1.841635]],[[1.649686,7.507416,9.320720,-5.577854,-9.064366,-5.504944,1.217912],[3.410472,-3.584207,3.965084,-1.518264,9.493029,-7.114126,6.329757],[8.492532,-6.914479,8.132774,-0.109196,3.941143,4.682363,5.662303],[4.438122,-0.152539,2.273096,6.081132,-6.694759,-1.990364,0.086723],[6.938667,1.657859,3.797895,6.569102,1.904636,-8.251325,-2.320697],[8.521935,2.969276,-8.485846,4.299852,-9.661893,-5.203909,6.154027],[-8.092553,-6.709782,8.720588,-1.973840,7.641961,3.594354,0.627636]]], dtype = "float64")#candidate|2315|(6, 7, 7)|const|float64
bop_2316 = relay.less(call_2304.astype('bool'), relay.reshape(const_2315.astype('bool'), relay.shape_of(call_2304))) # shape=(6, 7, 7)
bop_2319 = relay.less(call_2305.astype('bool'), relay.reshape(const_2315.astype('bool'), relay.shape_of(call_2305))) # shape=(6, 7, 7)
output = relay.Tuple([call_2310,const_2311,bop_2316,])
output2 = relay.Tuple([call_2312,const_2311,bop_2319,])
func_2323 = relay.Function([], output)
mod['func_2323'] = func_2323
mod = relay.transform.InferType()(mod)
mutated_mod['func_2323'] = func_2323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mutated_mod.get_global_var('func_2323')
call_2324 = func_2323_call()
output = call_2324
func_2325 = relay.Function([], output)
mutated_mod['func_2325'] = func_2325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_2338 = relay.TupleGetItem(func_1140_call(), 0)
call_2339 = relay.TupleGetItem(func_1141_call(), 0)
output = call_2338
output2 = call_2339
func_2346 = relay.Function([], output)
mod['func_2346'] = func_2346
mod = relay.transform.InferType()(mod)
output = func_2346()
func_2347 = relay.Function([], output)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_2408 = relay.TupleGetItem(func_1311_call(), 0)
call_2409 = relay.TupleGetItem(func_1313_call(), 0)
output = relay.Tuple([call_2408,])
output2 = relay.Tuple([call_2409,])
func_2413 = relay.Function([], output)
mod['func_2413'] = func_2413
mod = relay.transform.InferType()(mod)
output = func_2413()
func_2414 = relay.Function([], output)
mutated_mod['func_2414'] = func_2414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_2445 = relay.TupleGetItem(func_1280_call(), 1)
call_2446 = relay.TupleGetItem(func_1282_call(), 1)
output = relay.Tuple([call_2445,])
output2 = relay.Tuple([call_2446,])
func_2447 = relay.Function([], output)
mod['func_2447'] = func_2447
mod = relay.transform.InferType()(mod)
output = func_2447()
func_2448 = relay.Function([], output)
mutated_mod['func_2448'] = func_2448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_2449 = relay.TupleGetItem(func_1798_call(), 0)
call_2450 = relay.TupleGetItem(func_1800_call(), 0)
var_2456 = relay.var("var_2456", dtype = "float64", shape = (6, 7, 7))#candidate|2456|(6, 7, 7)|var|float64
bop_2457 = relay.not_equal(call_2449.astype('bool'), relay.reshape(var_2456.astype('bool'), relay.shape_of(call_2449))) # shape=(6, 7, 7)
bop_2460 = relay.not_equal(call_2450.astype('bool'), relay.reshape(var_2456.astype('bool'), relay.shape_of(call_2450))) # shape=(6, 7, 7)
output = relay.Tuple([bop_2457,])
output2 = relay.Tuple([bop_2460,])
func_2461 = relay.Function([var_2456,], output)
mod['func_2461'] = func_2461
mod = relay.transform.InferType()(mod)
var_2462 = relay.var("var_2462", dtype = "float64", shape = (6, 7, 7))#candidate|2462|(6, 7, 7)|var|float64
output = func_2461(var_2462)
func_2463 = relay.Function([var_2462], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_2488 = relay.TupleGetItem(func_2067_call(), 0)
call_2489 = relay.TupleGetItem(func_2069_call(), 0)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_2495 = relay.TupleGetItem(func_1620_call(), 0)
call_2496 = relay.TupleGetItem(func_1622_call(), 0)
func_2461_call = mod.get_global_var('func_2461')
func_2463_call = mutated_mod.get_global_var('func_2463')
call_2502 = relay.TupleGetItem(func_2461_call(relay.reshape(call_2495.astype('float64'), [6, 7, 7])), 0)
call_2503 = relay.TupleGetItem(func_2463_call(relay.reshape(call_2495.astype('float64'), [6, 7, 7])), 0)
output = relay.Tuple([call_2488,call_2495,call_2502,])
output2 = relay.Tuple([call_2489,call_2496,call_2503,])
func_2506 = relay.Function([], output)
mod['func_2506'] = func_2506
mod = relay.transform.InferType()(mod)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2506_call = mutated_mod.get_global_var('func_2506')
call_2507 = func_2506_call()
output = call_2507
func_2508 = relay.Function([], output)
mutated_mod['func_2508'] = func_2508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2413_call = mod.get_global_var('func_2413')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2601 = relay.TupleGetItem(func_2413_call(), 0)
call_2602 = relay.TupleGetItem(func_2414_call(), 0)
output = call_2601
output2 = call_2602
func_2609 = relay.Function([], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mutated_mod.get_global_var('func_2609')
call_2610 = func_2609_call()
output = call_2610
func_2611 = relay.Function([], output)
mutated_mod['func_2611'] = func_2611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_2612 = relay.TupleGetItem(func_1311_call(), 0)
call_2613 = relay.TupleGetItem(func_1313_call(), 0)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_2617 = func_2346_call()
call_2618 = func_2346_call()
bop_2630 = relay.logical_or(call_2612.astype('bool'), relay.reshape(call_2617.astype('bool'), relay.shape_of(call_2612))) # shape=(6, 7, 7)
bop_2633 = relay.logical_or(call_2613.astype('bool'), relay.reshape(call_2618.astype('bool'), relay.shape_of(call_2613))) # shape=(6, 7, 7)
output = relay.Tuple([bop_2630,])
output2 = relay.Tuple([bop_2633,])
func_2634 = relay.Function([], output)
mod['func_2634'] = func_2634
mod = relay.transform.InferType()(mod)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2635 = func_2634_call()
output = call_2635
func_2636 = relay.Function([], output)
mutated_mod['func_2636'] = func_2636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2647 = relay.var("var_2647", dtype = "bool", shape = (6, 1, 4))#candidate|2647|(6, 1, 4)|var|bool
var_2648 = relay.var("var_2648", dtype = "bool", shape = (6, 9, 4))#candidate|2648|(6, 9, 4)|var|bool
bop_2649 = relay.logical_and(var_2647.astype('bool'), var_2648.astype('bool')) # shape=(6, 9, 4)
output = relay.Tuple([bop_2649,])
output2 = relay.Tuple([bop_2649,])
func_2657 = relay.Function([var_2647,var_2648,], output)
mod['func_2657'] = func_2657
mod = relay.transform.InferType()(mod)
var_2658 = relay.var("var_2658", dtype = "bool", shape = (6, 1, 4))#candidate|2658|(6, 1, 4)|var|bool
var_2659 = relay.var("var_2659", dtype = "bool", shape = (6, 9, 4))#candidate|2659|(6, 9, 4)|var|bool
output = func_2657(var_2658,var_2659,)
func_2660 = relay.Function([var_2658,var_2659,], output)
mutated_mod['func_2660'] = func_2660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_2678 = relay.TupleGetItem(func_1280_call(), 4)
call_2679 = relay.TupleGetItem(func_1282_call(), 4)
func_1506_call = mod.get_global_var('func_1506')
func_1509_call = mutated_mod.get_global_var('func_1509')
var_2685 = relay.var("var_2685", dtype = "float64", shape = (294,))#candidate|2685|(294,)|var|float64
call_2684 = relay.TupleGetItem(func_1506_call(relay.reshape(var_2685.astype('float64'), [6, 7, 7])), 1)
call_2686 = relay.TupleGetItem(func_1509_call(relay.reshape(var_2685.astype('float64'), [6, 7, 7])), 1)
output = relay.Tuple([call_2678,call_2684,var_2685,])
output2 = relay.Tuple([call_2679,call_2686,var_2685,])
func_2689 = relay.Function([var_2685,], output)
mod['func_2689'] = func_2689
mod = relay.transform.InferType()(mod)
var_2690 = relay.var("var_2690", dtype = "float64", shape = (294,))#candidate|2690|(294,)|var|float64
output = func_2689(var_2690)
func_2691 = relay.Function([var_2690], output)
mutated_mod['func_2691'] = func_2691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2636_call = mutated_mod.get_global_var('func_2636')
call_2705 = relay.TupleGetItem(func_2634_call(), 0)
call_2706 = relay.TupleGetItem(func_2636_call(), 0)
output = relay.Tuple([call_2705,])
output2 = relay.Tuple([call_2706,])
func_2715 = relay.Function([], output)
mod['func_2715'] = func_2715
mod = relay.transform.InferType()(mod)
output = func_2715()
func_2716 = relay.Function([], output)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2739 = relay.var("var_2739", dtype = "uint64", shape = ())#candidate|2739|()|var|uint64
var_2740 = relay.var("var_2740", dtype = "uint64", shape = (4, 8, 10))#candidate|2740|(4, 8, 10)|var|uint64
bop_2741 = relay.not_equal(var_2739.astype('bool'), var_2740.astype('bool')) # shape=(4, 8, 10)
uop_2746 = relay.asinh(var_2740.astype('float32')) # shape=(4, 8, 10)
uop_2751 = relay.asin(uop_2746.astype('float32')) # shape=(4, 8, 10)
output = relay.Tuple([bop_2741,uop_2751,])
output2 = relay.Tuple([bop_2741,uop_2751,])
func_2754 = relay.Function([var_2739,var_2740,], output)
mod['func_2754'] = func_2754
mod = relay.transform.InferType()(mod)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2754_call = mutated_mod.get_global_var('func_2754')
var_2756 = relay.var("var_2756", dtype = "uint64", shape = ())#candidate|2756|()|var|uint64
var_2757 = relay.var("var_2757", dtype = "uint64", shape = (4, 8, 10))#candidate|2757|(4, 8, 10)|var|uint64
call_2755 = func_2754_call(var_2756,var_2757,)
output = call_2755
func_2758 = relay.Function([var_2756,var_2757,], output)
mutated_mod['func_2758'] = func_2758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2760 = relay.var("var_2760", dtype = "uint16", shape = (15, 4, 11))#candidate|2760|(15, 4, 11)|var|uint16
var_2761 = relay.var("var_2761", dtype = "uint16", shape = (15, 4, 11))#candidate|2761|(15, 4, 11)|var|uint16
bop_2762 = relay.right_shift(var_2760.astype('uint16'), relay.reshape(var_2761.astype('uint16'), relay.shape_of(var_2760))) # shape=(15, 4, 11)
func_2634_call = mod.get_global_var('func_2634')
func_2636_call = mutated_mod.get_global_var('func_2636')
call_2772 = relay.TupleGetItem(func_2634_call(), 0)
call_2773 = relay.TupleGetItem(func_2636_call(), 0)
var_2788 = relay.var("var_2788", dtype = "uint16", shape = (15, 4, 11))#candidate|2788|(15, 4, 11)|var|uint16
bop_2789 = relay.minimum(var_2760.astype('uint8'), relay.reshape(var_2788.astype('uint8'), relay.shape_of(var_2760))) # shape=(15, 4, 11)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_2793 = relay.TupleGetItem(func_1620_call(), 0)
call_2794 = relay.TupleGetItem(func_1622_call(), 0)
func_2265_call = mod.get_global_var('func_2265')
func_2266_call = mutated_mod.get_global_var('func_2266')
call_2799 = relay.TupleGetItem(func_2265_call(), 0)
call_2800 = relay.TupleGetItem(func_2266_call(), 0)
func_1570_call = mod.get_global_var('func_1570')
func_1572_call = mutated_mod.get_global_var('func_1572')
var_2803 = relay.var("var_2803", dtype = "float64", shape = (120, 2))#candidate|2803|(120, 2)|var|float64
call_2802 = relay.TupleGetItem(func_1570_call(relay.reshape(var_2803.astype('float64'), [5, 12, 4])), 0)
call_2804 = relay.TupleGetItem(func_1572_call(relay.reshape(var_2803.astype('float64'), [5, 12, 4])), 0)
func_1108_call = mod.get_global_var('func_1108')
func_1112_call = mutated_mod.get_global_var('func_1112')
var_2809 = relay.var("var_2809", dtype = "float32", shape = (288,))#candidate|2809|(288,)|var|float32
var_2810 = relay.var("var_2810", dtype = "float64", shape = (36, 14))#candidate|2810|(36, 14)|var|float64
call_2808 = relay.TupleGetItem(func_1108_call(relay.reshape(var_2809.astype('float32'), [12, 8, 3]), relay.reshape(var_2810.astype('float64'), [504,]), ), 1)
call_2811 = relay.TupleGetItem(func_1112_call(relay.reshape(var_2809.astype('float32'), [12, 8, 3]), relay.reshape(var_2810.astype('float64'), [504,]), ), 1)
func_453_call = mod.get_global_var('func_453')
func_457_call = mutated_mod.get_global_var('func_457')
const_2813 = relay.const([[4.213385,5.057899,-9.376780,5.991955,8.478180,-3.041204,2.251514,-5.268258,6.966692,-3.165860,-5.826200,-4.784844,7.579074,-4.274540,8.142622,5.860171,-5.475842,-9.291340,3.886557,-6.635075,0.969681,0.359023,4.752472,-7.698788,-7.944813,3.104397,-3.931648,4.348928,-8.291400,3.895110,-3.946286,-9.215174,4.980660,-5.871552,-5.696182,-3.150160,6.317000,-4.771790,2.575543,0.303830,-1.870903,-2.402908,-4.850771,-3.342390,9.589632,2.436161,-2.747647,-5.248889,-1.871249,-8.041278,8.192386,-8.333341,-2.033899,-5.554647,1.742552,1.400910,-3.479792,-7.559875,-9.779863,7.128674,-9.915809,2.179651,-1.305537,8.229115,-2.946106,1.355466,-9.489001,-0.944446,8.532693,-5.223206,-3.743782,-1.347553,1.762568,-0.390246,0.654557,8.506620,-3.366222,1.879143,-4.370022,5.140405,-8.549824,-9.570645,-4.895798,-3.509108,9.294575,-7.126292,-2.145726,0.083469,-8.629489,7.349067],[9.666941,8.275912,-7.943445,9.282772,3.183700,4.314852,0.721032,-1.654980,9.416855,4.565810,5.150931,-6.834683,-1.679156,0.368120,2.020587,9.801053,7.948416,-0.397769,3.511699,-3.565098,-9.399186,-3.075016,-0.712444,2.143058,5.259792,-7.609993,2.975616,5.977963,-0.947485,-7.028332,5.917717,8.066777,-3.770181,-9.082254,7.643781,7.916306,8.556091,4.898677,-8.193743,6.226070,-7.422336,3.718763,-9.789556,3.346637,0.183941,7.918980,7.811155,-5.425945,-7.460903,9.894559,6.794832,-7.479684,2.872690,-4.785918,-0.976504,8.381726,-1.128787,-6.785065,8.152363,4.480074,8.605355,-4.421665,5.441602,2.216779,5.190699,2.718793,8.626192,9.765667,-8.266738,-8.225831,5.493707,9.591476,-2.238376,6.696697,4.665314,6.825790,4.009404,-6.264670,-6.030295,-7.786467,-1.948238,-0.224304,5.728592,-6.893593,-6.889098,2.633725,0.650659,2.344868,-1.540247,9.248304],[2.406030,2.615421,-6.238425,-5.658201,2.098425,7.690977,-7.487110,6.202444,2.403874,7.680579,-8.023641,-3.391896,5.463651,-7.020327,-2.909368,-5.845680,-9.458852,-2.400731,6.535748,1.119080,4.668849,-8.905178,-5.480273,-0.854077,-8.111368,6.160643,-0.466297,-2.243601,2.919091,4.891946,-4.188368,-1.142303,8.734784,-7.970956,2.843994,0.995751,-6.032632,-2.078077,6.070286,-6.896532,4.900309,0.029065,7.666806,7.752225,-2.369958,-2.596480,-9.178910,0.024425,6.712167,-2.051642,8.944531,-4.853030,-8.334459,-1.536829,8.122352,7.348265,7.291308,-3.455773,-8.640060,9.054063,-9.675551,1.349919,-6.741831,9.782983,-4.376390,-6.176647,8.868133,9.827550,-9.916124,-0.597987,6.708686,-3.565976,-8.891061,7.178244,-9.836038,5.404043,9.032157,-8.728804,7.701421,9.147725,0.636956,4.565582,-6.076383,-8.617089,-2.737597,-2.111001,-4.806092,-0.075803,0.642458,6.969563],[3.869838,9.574819,-7.705372,-3.548654,4.334381,7.872726,-5.730307,1.266638,-0.078050,1.701111,-6.814254,-7.646445,-6.465797,9.918921,-3.921915,2.354192,9.854759,-4.908267,-0.829858,1.252778,6.169826,9.766144,7.554885,-7.026968,-1.157617,1.188818,-6.508849,-5.128849,-7.747322,-7.269598,-2.047566,-6.277541,-2.766927,5.005728,-0.544970,-6.358776,-7.688017,2.445791,6.465364,0.546839,5.175586,-5.971375,-5.670215,-0.873779,7.668329,2.710920,-3.650249,9.824472,9.451594,-9.290650,-4.600862,9.442499,-7.820358,-9.665441,-9.939021,8.653158,-1.120680,0.296602,-5.956272,-3.148380,3.209400,-6.174330,5.054270,-1.061821,-4.787916,-9.029523,-2.522261,7.953922,-6.951893,-1.297116,4.769290,-4.799961,4.943692,-1.620339,2.962897,7.625610,1.582342,4.436818,-8.968328,8.016457,-5.600607,0.956973,4.832419,1.629198,-8.960652,-1.518018,0.885777,-9.610123,2.106952,6.503249],[9.464092,2.105675,-8.001965,7.756306,-6.763430,5.248030,1.664272,0.388380,-5.443381,-0.524236,-8.493646,-4.767582,-7.898823,3.892760,-5.911970,-0.650999,7.989485,-4.832168,-3.701111,-3.561926,-0.418470,7.603908,-8.927427,-4.466315,0.671924,-6.431206,9.919239,-6.218410,4.180692,2.216499,-5.417930,0.615797,8.227493,8.261272,4.625194,3.607243,3.595620,6.170993,0.947173,-6.574537,4.985802,7.460047,-8.776909,-9.139093,1.858170,8.820446,9.589990,8.937011,-0.122981,7.394192,1.117717,4.899504,6.314048,-6.445414,-0.351477,-9.718089,4.067010,-2.437410,3.520930,5.182097,5.834564,-9.014982,9.865120,2.851882,-9.340949,-9.341089,9.513524,-3.240290,-9.118758,-9.611235,-0.646941,-2.074011,-8.316302,1.483910,7.736870,-2.690318,7.530245,-1.393239,-0.257402,-6.429607,-2.113790,-1.164097,-8.423250,-3.228029,-9.408601,5.903639,4.280924,-6.001395,-7.069064,2.392453]], dtype = "float64")#candidate|2813|(5, 90)|const|float64
call_2812 = relay.TupleGetItem(func_453_call(relay.reshape(const_2813.astype('float64'), [9, 5, 10]), relay.reshape(const_2813.astype('float64'), [9, 5, 10]), ), 1)
call_2814 = relay.TupleGetItem(func_457_call(relay.reshape(const_2813.astype('float64'), [9, 5, 10]), relay.reshape(const_2813.astype('float64'), [9, 5, 10]), ), 1)
var_2816 = relay.var("var_2816", dtype = "float64", shape = (5, 90))#candidate|2816|(5, 90)|var|float64
bop_2817 = relay.right_shift(const_2813.astype('int16'), relay.reshape(var_2816.astype('int16'), relay.shape_of(const_2813))) # shape=(5, 90)
uop_2820 = relay.erf(call_2812.astype('float32')) # shape=(9, 5, 10)
uop_2822 = relay.erf(call_2814.astype('float32')) # shape=(9, 5, 10)
output = relay.Tuple([bop_2762,call_2772,bop_2789,call_2793,call_2799,call_2802,var_2803,call_2808,var_2809,var_2810,bop_2817,uop_2820,])
output2 = relay.Tuple([bop_2762,call_2773,bop_2789,call_2794,call_2800,call_2804,var_2803,call_2811,var_2809,var_2810,bop_2817,uop_2822,])
func_2824 = relay.Function([var_2760,var_2761,var_2788,var_2803,var_2809,var_2810,var_2816,], output)
mod['func_2824'] = func_2824
mod = relay.transform.InferType()(mod)
var_2825 = relay.var("var_2825", dtype = "uint16", shape = (15, 4, 11))#candidate|2825|(15, 4, 11)|var|uint16
var_2826 = relay.var("var_2826", dtype = "uint16", shape = (15, 4, 11))#candidate|2826|(15, 4, 11)|var|uint16
var_2827 = relay.var("var_2827", dtype = "uint16", shape = (15, 4, 11))#candidate|2827|(15, 4, 11)|var|uint16
var_2828 = relay.var("var_2828", dtype = "float64", shape = (120, 2))#candidate|2828|(120, 2)|var|float64
var_2829 = relay.var("var_2829", dtype = "float32", shape = (288,))#candidate|2829|(288,)|var|float32
var_2830 = relay.var("var_2830", dtype = "float64", shape = (36, 14))#candidate|2830|(36, 14)|var|float64
var_2831 = relay.var("var_2831", dtype = "float64", shape = (5, 90))#candidate|2831|(5, 90)|var|float64
output = func_2824(var_2825,var_2826,var_2827,var_2828,var_2829,var_2830,var_2831,)
func_2832 = relay.Function([var_2825,var_2826,var_2827,var_2828,var_2829,var_2830,var_2831,], output)
mutated_mod['func_2832'] = func_2832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_2929 = relay.TupleGetItem(func_2323_call(), 1)
call_2930 = relay.TupleGetItem(func_2325_call(), 1)
uop_2944 = relay.sin(call_2929.astype('float32')) # shape=(240, 1)
uop_2946 = relay.sin(call_2930.astype('float32')) # shape=(240, 1)
bop_2952 = relay.logical_xor(uop_2944.astype('uint8'), relay.reshape(call_2929.astype('uint8'), relay.shape_of(uop_2944))) # shape=(240, 1)
bop_2955 = relay.logical_xor(uop_2946.astype('uint8'), relay.reshape(call_2930.astype('uint8'), relay.shape_of(uop_2946))) # shape=(240, 1)
bop_2978 = relay.bitwise_or(bop_2952.astype('uint64'), relay.reshape(call_2929.astype('uint64'), relay.shape_of(bop_2952))) # shape=(240, 1)
bop_2981 = relay.bitwise_or(bop_2955.astype('uint64'), relay.reshape(call_2930.astype('uint64'), relay.shape_of(bop_2955))) # shape=(240, 1)
func_2413_call = mod.get_global_var('func_2413')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_2992 = relay.TupleGetItem(func_2413_call(), 0)
call_2993 = relay.TupleGetItem(func_2414_call(), 0)
bop_2996 = relay.multiply(bop_2952.astype('int32'), relay.reshape(call_2929.astype('int32'), relay.shape_of(bop_2952))) # shape=(240, 1)
bop_2999 = relay.multiply(bop_2955.astype('int32'), relay.reshape(call_2930.astype('int32'), relay.shape_of(bop_2955))) # shape=(240, 1)
uop_3007 = relay.tan(bop_2996.astype('float32')) # shape=(240, 1)
uop_3009 = relay.tan(bop_2999.astype('float32')) # shape=(240, 1)
output = relay.Tuple([bop_2978,call_2992,uop_3007,])
output2 = relay.Tuple([bop_2981,call_2993,uop_3009,])
func_3017 = relay.Function([], output)
mod['func_3017'] = func_3017
mod = relay.transform.InferType()(mod)
output = func_3017()
func_3018 = relay.Function([], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_3035 = relay.TupleGetItem(func_1792_call(), 0)
call_3036 = relay.TupleGetItem(func_1793_call(), 0)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_3039 = relay.TupleGetItem(func_1071_call(), 0)
call_3040 = relay.TupleGetItem(func_1073_call(), 0)
output = relay.Tuple([call_3035,call_3039,])
output2 = relay.Tuple([call_3036,call_3040,])
func_3046 = relay.Function([], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3047 = func_3046_call()
output = call_3047
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_3052 = relay.TupleGetItem(func_1407_call(), 0)
call_3053 = relay.TupleGetItem(func_1408_call(), 0)
output = call_3052
output2 = call_3053
func_3054 = relay.Function([], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3055 = func_3054_call()
output = call_3055
func_3056 = relay.Function([], output)
mutated_mod['func_3056'] = func_3056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_3069 = relay.TupleGetItem(func_2323_call(), 1)
call_3070 = relay.TupleGetItem(func_2325_call(), 1)
uop_3071 = relay.cosh(call_3069.astype('float64')) # shape=(240, 1)
uop_3073 = relay.cosh(call_3070.astype('float64')) # shape=(240, 1)
output = relay.Tuple([uop_3071,])
output2 = relay.Tuple([uop_3073,])
func_3075 = relay.Function([], output)
mod['func_3075'] = func_3075
mod = relay.transform.InferType()(mod)
mutated_mod['func_3075'] = func_3075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3075_call = mutated_mod.get_global_var('func_3075')
call_3076 = func_3075_call()
output = call_3076
func_3077 = relay.Function([], output)
mutated_mod['func_3077'] = func_3077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_3080 = relay.TupleGetItem(func_1205_call(), 0)
call_3081 = relay.TupleGetItem(func_1207_call(), 0)
const_3082 = relay.const([[[5.992142,-1.702024,-7.844211,0.176810,1.237098,-6.853015,-1.856775,-4.216317,0.945320],[1.629773,2.236712,-4.748312,0.825085,8.273687,0.526757,7.921137,6.303782,5.706573],[-6.323386,2.452997,2.005647,7.450475,-5.862696,-3.442688,8.574304,-2.064776,5.332667],[-4.418526,-8.991191,0.910248,-6.917958,-2.684030,-4.147110,3.245712,1.013581,-9.375921],[-7.434844,-9.510297,2.243281,-7.416057,2.010139,9.881282,-6.983970,7.474812,4.303085],[-4.116609,6.855742,5.111066,-6.955960,4.392807,0.907596,-1.271402,1.343188,7.630821],[7.525221,8.296118,-6.737546,7.955283,-4.392401,9.822015,3.613835,5.025085,1.275407],[-2.710955,-1.361058,7.111868,9.023012,3.053020,-3.477488,3.408057,8.438163,-8.830306],[-2.599512,-9.913126,8.051531,-5.679376,6.290794,1.599272,4.913981,3.511561,6.150446],[5.182903,-5.849920,-2.679046,2.724183,8.513073,-0.591094,-4.196482,0.933563,-3.767866],[9.582829,-1.157830,-8.388952,3.282477,5.352895,6.502631,5.363234,-3.809468,-3.990676],[-2.692822,-8.573910,-1.839868,-2.581887,9.183466,4.450541,-0.869311,4.921709,0.909935],[-7.806615,1.805566,1.758517,9.046424,0.943709,0.636902,-2.801445,-4.654614,1.152730],[6.902352,0.990947,4.609347,-3.170414,5.663268,-1.743512,-2.846280,0.852818,3.369111],[-9.896500,8.151510,-8.756617,2.189643,6.959586,3.649842,-5.861530,-1.991687,-2.607997],[-2.239324,5.657803,-1.879380,1.020676,-5.221042,-5.059845,7.882489,-0.555156,-8.344741]],[[9.194071,9.487562,1.351616,2.604461,-8.752075,-0.563870,-8.961663,1.145437,-8.173924],[3.068167,-9.098605,6.648750,1.261770,-0.716963,7.935522,-3.440613,-1.066111,1.849389],[7.818116,-5.003465,-3.343149,-6.120548,3.501375,-8.205575,1.391874,6.311090,-0.195789],[-7.710503,-4.077347,1.794957,6.178353,-8.200987,-1.082312,-1.589998,8.191248,8.631148],[2.679675,-2.566515,2.766674,-3.184989,-5.924301,2.686600,-1.946372,9.593558,-6.512692],[9.547847,-8.199279,2.918615,1.776101,-1.543429,-5.818269,4.921363,5.241451,8.919384],[-0.820433,5.434727,9.836620,7.343271,-1.867966,-9.501286,-8.994623,1.163113,-0.768992],[9.063115,-7.263483,-0.567690,3.358921,-2.205513,4.371309,9.670528,4.279739,-4.238837],[4.830313,6.297218,-5.372896,-7.180427,6.411569,-0.035922,9.630065,5.617751,8.966286],[-8.163066,3.895968,-2.795463,-8.976430,3.019403,-0.026662,5.293942,9.666424,-9.623042],[-3.441600,-5.881383,-3.796506,7.665022,-6.889247,9.834404,-2.941925,-0.683383,-1.416223],[-5.535877,1.701991,-9.958808,-5.454265,1.069649,-7.290821,4.157144,0.118551,-6.799617],[-2.896570,7.418963,7.119311,7.544798,-3.089908,8.085416,-7.313279,-6.462954,2.045405],[0.052382,-3.858913,-2.742617,-4.809549,7.944315,0.461093,5.541118,-9.296195,4.351069],[4.720013,2.580495,-1.030238,-9.588286,8.679593,-1.761917,-9.539608,-6.696372,8.312320],[4.482189,-4.025676,3.196668,1.999883,-6.916979,2.938664,2.456393,-8.391206,-1.682760]],[[7.672725,0.312878,2.685878,-9.151808,7.755704,-6.491884,6.067259,4.347714,6.186866],[3.502382,9.802601,-9.279027,0.591474,-9.742311,-4.290944,7.463928,7.955067,-5.047640],[-8.068639,-8.942909,2.591434,-1.698897,1.458745,7.411227,-9.731854,6.537825,-5.376891],[-4.419128,1.314092,0.982776,-5.851549,2.073249,7.753421,-6.107230,-4.952448,9.864437],[-9.445445,-8.945112,8.395980,-4.930617,3.772478,-2.329200,8.111544,4.717876,8.172780],[-8.042032,0.325309,7.637457,-2.351018,3.892773,3.990581,-0.787057,-3.649573,6.865148],[-4.494276,-7.232224,3.586764,3.676800,3.059742,7.924251,6.078500,-6.653676,5.529509],[4.422531,-1.417372,1.034390,-1.059260,2.462528,-2.342930,-9.170365,-4.590005,-2.738951],[1.868396,-5.647494,2.776038,0.700768,9.649246,1.208034,-2.686725,-0.195324,3.900628],[-6.417274,-8.061527,3.809297,-9.524385,4.676764,-7.036051,-6.646710,-9.203447,-2.519000],[-8.124258,-9.555900,-9.217039,-9.275775,4.263813,5.815056,-7.944756,-9.751073,7.774560],[-7.209668,0.169342,-1.415882,3.596159,-5.609497,6.842249,1.488171,-4.467894,7.542649],[-9.000178,0.196376,0.382931,-2.485899,-9.920769,-6.619289,-6.450407,8.976108,-8.835585],[7.766591,-5.882192,1.776294,0.632582,9.921901,3.958789,-5.912714,9.836065,8.883019],[-5.270767,-4.190299,-7.768119,-5.974549,5.060458,-8.533349,3.634099,-6.241950,1.593370],[3.038500,-2.998695,5.356419,7.648836,4.442990,9.296653,0.408406,3.565596,0.545469]],[[-7.073243,-0.283222,0.525020,-9.540530,9.988975,6.511229,-6.599337,6.791381,0.593914],[-6.567353,-6.347828,2.773352,-9.644801,7.594770,8.142631,1.255640,-3.386014,2.808298],[2.103993,-1.654317,-6.734596,8.023856,-4.417587,-0.622101,5.526975,-6.382265,-4.742748],[-8.637388,3.516294,-4.132023,-3.529915,-9.480916,-5.361310,-5.760957,3.279539,-2.172080],[-7.332300,5.660878,-0.440568,4.110584,-6.887521,7.878008,1.737134,-8.980615,1.983504],[0.888380,-6.954608,-3.704282,-2.064414,-2.757348,5.146286,9.278802,6.122220,-5.398616],[-6.721159,6.353206,5.972262,-0.615902,-9.170345,1.242459,2.142777,3.439075,6.666838],[-4.669704,5.941500,4.475267,1.572734,-8.818824,4.719558,-8.510870,-5.215182,1.442483],[-8.067202,6.540313,-7.625484,-0.735484,4.760678,9.868102,8.538560,-2.637140,7.599412],[4.097595,7.949960,3.410993,-6.228219,-2.291071,8.944442,5.710900,4.104670,9.484876],[7.477362,-7.454983,9.880092,7.699742,7.865709,9.088315,-0.897260,-9.248175,5.162667],[-4.683775,5.077378,-3.565977,-6.973776,1.852613,-9.388935,8.559747,-9.699204,6.295174],[-9.610454,9.933278,-7.377712,-6.145197,1.713592,-9.545301,-0.790507,8.769822,-5.425608],[-5.113719,3.823453,-3.736395,-0.582903,6.915299,7.152657,9.001156,-8.942200,-6.201565],[3.987028,8.094806,9.724556,1.352560,-0.782811,2.973195,3.474337,-3.418602,5.903088],[-2.855086,-6.188782,4.356493,-4.244514,5.903409,1.069575,-3.750259,-9.046524,6.029002]],[[8.681659,7.840889,7.883061,-9.017365,6.867777,0.213735,-8.005633,-9.924334,-4.896903],[-3.470343,-2.112113,2.800973,4.980084,6.723438,2.474527,4.400876,4.522651,-8.248822],[-3.242805,2.756063,6.641118,-6.373402,2.128766,8.074360,-8.681263,-7.863491,5.131549],[-4.276243,9.093499,1.654488,1.118333,-4.313371,5.035307,3.703672,1.268336,9.818767],[-9.283837,-7.507624,0.869131,7.991450,-7.538006,-2.432498,0.611858,-0.732679,-8.497549],[0.158378,0.008140,9.936210,-1.362357,-3.767100,8.252771,0.219465,2.048446,1.330549],[7.627861,4.253405,4.386739,1.782284,-0.861230,2.569996,4.031853,-5.864047,-3.068389],[-8.439391,8.021981,9.513759,-2.561042,-0.521161,-4.081773,-3.654407,-9.025161,8.847160],[-7.241979,-2.696783,0.171068,7.354160,-5.448339,2.647574,9.921239,3.994579,-7.064062],[-5.513095,1.882682,-3.317236,-6.999207,7.216661,-4.243253,-6.263364,-0.750729,-1.524521],[3.665585,-0.834388,6.067741,-9.805754,8.297430,8.471986,-1.536542,9.959861,-1.626560],[-4.794452,-7.580730,1.913753,-9.475324,5.779578,-4.281325,-4.156916,-5.783625,1.579803],[-2.645043,-4.938030,-6.895918,6.249105,9.358795,-9.006811,7.838089,2.575722,7.745037],[-8.842465,-0.861420,-0.702914,6.731933,-2.821142,8.817593,-2.363551,-1.338858,-5.949984],[-4.647068,4.813999,-2.870016,-7.267488,-5.631107,1.843118,-0.025205,-0.669843,-3.336544],[-9.017668,4.121711,9.788300,-2.266201,7.815971,-0.120794,4.897231,7.272543,9.035141]],[[5.959087,7.112550,1.541415,2.514110,0.984151,-3.093015,-5.131582,3.864860,-0.887442],[-4.655023,-5.173295,9.433969,3.326933,-7.928483,3.186350,-0.284072,3.477060,2.064951],[1.555571,-8.349153,-9.583769,-5.498973,5.168635,-4.986464,-4.439745,9.584677,-0.372810],[0.336996,5.186602,0.367321,1.762923,2.547998,6.763298,3.757705,7.909619,1.978627],[7.713843,-0.854033,-2.174695,-4.123289,-6.125404,3.885623,-1.819124,-1.763963,-8.787005],[-1.105806,-8.869454,-7.758293,-9.270819,-5.224665,-2.692113,2.054462,6.342441,-4.111121],[0.032067,-9.739766,-6.671710,-6.534396,-6.756126,0.544935,-3.476664,9.453768,7.383908],[9.393629,8.991012,-1.154895,2.585589,7.500837,1.251709,-0.632527,-5.620048,-3.277821],[6.635334,4.244611,-0.351949,-8.850839,0.341861,1.819907,-0.257279,-9.944356,-7.150026],[2.379013,9.915762,-1.269314,-5.870305,2.294923,5.665102,-6.126749,-2.862632,-8.187991],[-4.061950,-5.768790,-7.597460,-1.356953,-2.581574,0.482876,1.301472,-3.181219,5.364221],[-1.280119,-3.619857,3.095362,4.529825,-7.359475,4.290990,-0.110069,1.873159,7.993012],[-1.660773,-4.437908,2.231431,2.571942,-6.168373,6.726416,-4.660771,-4.602478,7.886868],[-9.967787,9.086160,-4.166900,-8.564899,-4.284415,3.948731,7.011285,9.243958,-7.871580],[3.260230,-7.455929,-5.107224,-8.412759,1.398659,9.352591,-7.092446,4.858076,-2.582657],[-7.047322,3.922482,-8.019200,2.349846,-5.316024,-6.139964,1.972574,0.249162,8.794709]],[[4.679655,-4.832429,-1.002604,6.532566,-5.462320,-9.622413,-4.366656,3.598892,8.838079],[0.307682,1.691495,-8.832598,-9.622758,-9.999854,0.098169,4.546029,3.061250,0.929987],[7.238849,-2.816507,7.697657,-8.654801,0.276241,9.906989,-6.002707,0.501209,3.991515],[7.996066,7.416871,5.661047,3.513575,6.512986,-5.807802,2.878659,5.927309,6.384115],[-9.866797,7.993426,7.945361,5.760483,2.251498,-9.130518,-4.055205,-9.874288,6.684841],[-0.158379,7.375990,9.410069,-5.420412,8.714941,-1.207321,-9.083472,5.877873,-0.050559],[5.020736,-7.898161,5.994796,9.517933,-8.382309,3.175347,1.987180,-8.393900,-8.084629],[-6.567186,-1.365120,-3.248335,0.716870,-5.789256,-4.207741,8.521219,-5.383402,-7.243501],[-7.816495,7.048343,-4.058680,-5.238017,-3.006283,-5.538822,-5.469073,1.467971,-7.947660],[2.740201,-7.381798,-8.895423,7.932557,-2.315446,1.549106,5.857625,-9.611330,-5.776699],[0.921158,-9.918804,-5.595570,-8.448286,-9.172211,0.290633,-8.162459,-6.741543,-4.645183],[0.310590,-3.191463,9.743472,4.306129,-4.804146,2.785844,-8.088784,7.577651,-5.537237],[9.287287,6.218656,-6.513827,-4.945494,0.903539,-6.217562,-0.336821,9.769533,8.400289],[-3.253281,0.495416,1.942138,-3.973951,-6.123931,-8.380302,1.094435,1.791100,3.303178],[6.177564,-5.183545,-5.098549,2.364240,6.015802,-1.076057,8.752112,6.573810,5.355074],[-3.302628,-2.398418,4.399394,9.595179,-9.674121,3.884871,5.520625,2.309960,-6.682067]],[[-0.386906,-2.825588,-0.113309,-4.462908,-9.126225,6.420670,-9.024425,4.734938,-8.471490],[-6.747900,2.191323,-7.502935,-2.769435,7.876789,-4.881093,-4.942528,3.431874,-0.414417],[7.375792,-7.450428,-9.154743,4.661288,4.316725,8.079784,8.597430,5.931092,-6.137664],[-3.216117,0.309253,-1.335604,3.328439,-5.911573,-1.996361,-6.027589,-9.427159,5.301698],[-5.854134,0.809571,6.488396,1.423267,-5.895931,9.345207,4.258441,-1.354058,4.785899],[-2.751120,1.744824,-0.830561,8.555924,0.294530,8.141790,-3.583574,7.434392,1.288015],[-3.952557,4.607906,3.393111,0.902468,-5.171586,-5.225073,-7.761248,-7.390007,9.809993],[2.669155,-9.215314,-1.560315,4.183924,2.121734,7.190582,5.801838,-2.418748,-4.568258],[1.518781,-7.106549,4.257201,-2.516179,6.944898,7.151395,8.425274,2.686689,0.050505],[1.504774,-7.027895,4.337916,9.998193,9.262991,-5.435218,8.370565,6.735371,6.042538],[-6.519405,-9.731632,8.493930,2.274145,3.932527,-1.374348,-9.606830,7.265354,-5.674471],[-5.164539,-4.556063,5.356618,-2.435249,-3.863993,-8.080527,-3.212956,1.277302,-6.911161],[7.264595,2.798622,-1.389359,3.084437,5.626408,8.116849,-2.876468,2.757687,7.271963],[1.212811,-7.120832,3.365391,6.125906,8.776593,6.018220,4.314899,7.211981,0.272405],[-2.405216,6.977842,5.626149,-8.161121,-9.958006,-4.197114,-9.570693,6.650221,-3.224184],[-2.978454,7.745932,-4.626592,0.338061,6.263547,3.240254,3.512973,5.944333,0.417065]],[[5.293945,-5.830228,-9.374687,-8.271445,-4.866450,2.105511,-1.160202,3.038614,6.795847],[-3.938893,7.550611,-1.384052,-7.460394,0.817540,-7.073904,4.659079,-0.098946,5.431796],[-5.103066,7.486667,-3.461045,3.773097,-4.715187,-6.463100,2.451839,2.584212,-5.751849],[2.272157,5.428426,-2.825871,4.193888,3.287508,-1.498883,-6.708084,-0.842034,8.100507],[-1.546856,-0.915590,1.714597,1.329926,1.048227,-8.897539,-6.781692,8.186674,-2.330147],[5.333742,1.574452,7.830618,0.861371,-3.073951,4.721668,-4.677496,9.811492,4.657034],[2.476000,5.609547,1.745769,-6.442796,8.464136,5.456050,-1.343460,1.969990,4.281150],[5.496036,7.393387,0.907846,4.728942,-5.472064,-4.898739,-2.938141,-9.509727,-7.980735],[3.462204,1.546770,-3.203614,-6.022045,3.376494,-3.021451,-6.352440,-7.538885,-8.850473],[-1.242185,4.538015,-7.825194,-7.476456,-8.917251,-4.328368,-7.793593,9.001393,-5.684533],[-3.744777,-5.199272,-3.454069,3.931235,-6.671228,-0.523996,9.240563,4.855498,-0.982672],[-1.692907,-2.156097,0.518977,5.412427,-4.702688,-2.234104,2.237466,1.344012,-8.567565],[-5.422909,-1.635300,6.769437,1.317052,9.296269,-7.760270,-4.879341,6.479409,6.038464],[5.393496,-7.677995,1.460487,-1.215637,-3.271695,5.504636,-3.859234,-3.964183,-5.524787],[2.995734,-6.467898,-8.883581,-7.931711,6.632121,7.410330,0.774410,6.791433,-4.354341],[-1.777899,1.738020,-4.440467,3.120202,9.390328,4.229204,-9.004969,9.606329,-4.008052]],[[7.854886,7.923087,-5.036781,3.863686,0.522112,9.132190,4.028498,0.788082,-8.302209],[1.557258,-2.424906,7.673803,1.415049,-2.930784,-8.743941,-6.120377,-7.606798,-7.898556],[2.837957,-0.953644,7.576131,-6.444251,7.793969,3.583439,-2.876817,9.457207,6.499923],[-9.852749,-2.664425,-6.701100,6.312582,-4.035771,-5.570731,-0.146350,-9.877730,-4.052610],[1.991467,8.996805,-0.778620,-4.719855,2.058085,5.869126,4.289596,6.721021,5.998204],[-7.099068,2.213457,-9.682351,-4.773207,1.560665,8.319816,-1.720124,-1.329459,0.970343],[-3.223937,7.181284,2.576128,6.247979,3.588912,0.998334,-9.991009,8.609955,-1.381193],[3.998279,0.458207,-9.741482,-6.734691,4.181555,-7.466893,-4.295883,-6.933702,-2.584590],[-6.487141,-6.697306,1.120432,-1.366820,-4.111734,5.857271,3.234023,4.867487,0.994588],[3.396591,-1.965148,-4.454596,6.564084,8.333634,1.413586,-8.163697,6.527822,6.503654],[-7.107260,-9.927434,2.083824,1.673036,-5.433720,5.077744,-9.511408,-0.083724,3.385576],[2.298694,6.859505,0.487722,7.885957,-4.576725,-6.368271,1.438048,-9.022766,8.474025],[6.785617,-0.278784,5.356629,0.556282,5.100030,-7.822506,-3.626941,4.888631,2.795003],[-2.354829,-7.489361,5.902179,-3.337361,8.598973,3.061504,5.810578,-7.147318,-9.295372],[7.311925,4.086011,0.843019,-2.697533,-5.284880,6.318916,-6.180794,-8.214720,2.566930],[9.105211,-8.127219,-1.278002,-7.344975,-9.926275,6.748151,-3.566957,-8.917247,1.349086]],[[-0.658319,1.031003,-0.097489,-6.967346,2.072295,1.742813,-7.708238,-6.123987,-3.904022],[-0.643345,-9.610543,2.129338,-1.403688,4.638984,8.850281,-4.163996,-8.558095,-0.098525],[8.918580,8.107401,1.935897,2.999009,0.389658,-2.651649,-4.285952,-9.096246,0.546614],[-1.998962,-4.471009,-4.429300,8.632308,7.491528,7.039625,-0.040952,-5.831509,9.499956],[-0.619682,8.262204,-7.456874,5.740297,0.027762,-0.527813,9.127983,-1.421568,-9.789794],[-3.006597,4.478875,2.243677,3.385331,7.615786,6.819762,-9.079749,3.008420,9.175480],[6.600749,-8.185542,5.682011,-0.701517,-4.710045,-9.675247,4.368483,-6.973301,-3.408380],[6.275833,1.137771,4.775887,3.422762,-8.245956,4.988114,6.183838,0.554018,6.869397],[-1.979556,9.359733,-2.606365,5.843401,-5.548580,9.164810,4.279742,4.064102,8.612470],[8.845765,-0.044838,-0.227187,1.689057,-8.501736,5.794599,8.003467,4.173821,-5.058847],[-4.487935,-2.600527,9.095477,4.280952,-0.103580,6.630112,3.850979,6.398257,7.155097],[-4.963320,4.282542,0.503564,-6.082108,-8.423298,8.457889,-5.218164,-3.025326,2.552270],[-1.701377,-5.459010,2.590279,-2.387553,-9.645375,-7.694545,3.314410,-7.358509,1.195375],[-8.154717,7.248775,-5.440481,2.513446,-0.782202,4.932557,-9.502601,6.170945,-7.263023],[-8.731419,6.723570,-4.366622,-7.706867,-1.454787,-8.090412,-8.980369,-3.800701,8.838924],[9.222042,8.635461,-3.471672,6.314618,-1.552811,4.288862,8.697740,7.113222,-9.909164]],[[-7.401761,-1.663568,-7.670163,-6.070297,6.720688,-3.092942,0.221236,3.493218,9.459472],[1.561700,-4.578673,4.038152,5.859626,-1.427515,-4.528789,-4.580801,4.721679,9.203159],[-6.185007,1.556411,-3.687286,-6.769186,9.588456,-5.713742,-6.776792,2.338343,6.041189],[-9.089282,2.342548,-0.849980,-4.374616,-8.264072,9.723360,0.737498,9.681540,4.158100],[-2.195404,-9.042661,3.208596,-3.508350,-2.933691,6.341660,7.379038,-5.281611,-9.848857],[-9.752417,-3.808853,-6.500413,-9.758636,0.789058,-7.341192,-8.212245,-2.889142,-6.423155],[3.188960,4.501513,-0.880260,-1.129932,5.825231,-7.529758,5.690204,-0.612068,1.602708],[1.513889,-4.505538,-8.502312,3.546066,9.694629,0.654045,4.089135,-4.623699,-1.335882],[7.509748,-9.203387,-8.348555,-4.322077,8.506200,2.208752,-7.219893,8.672491,4.110823],[5.697365,-9.234535,-0.285289,1.864617,-7.287646,9.915101,-0.692829,7.713143,4.162783],[-5.810590,5.659402,-9.528666,-7.601505,2.905861,2.847772,2.417984,0.718146,2.363179],[6.930721,-5.400459,-6.839156,8.215011,-4.569896,-3.975945,-0.742577,-8.152961,-0.979070],[-5.069693,2.509390,-2.749853,-4.606697,6.715287,6.463354,2.642362,9.666780,3.397276],[6.681237,5.952429,2.731849,3.657057,-6.157723,-5.429396,-3.644703,0.253556,-3.315534],[-8.220077,-9.154813,9.466766,-1.218486,-0.225160,-9.310360,-6.133424,-5.851171,2.533239],[5.725956,5.807525,-2.010850,-6.475374,-0.419553,-6.206633,-5.999961,4.391463,5.647783]],[[-1.504768,-1.840287,0.819007,-6.890521,-1.955253,5.312218,1.016864,9.310180,-5.277217],[-3.807660,-7.812942,1.102211,1.304236,-4.313992,-2.900917,1.816153,4.611583,2.698122],[-1.457802,-2.808462,2.806016,9.690699,-7.992508,5.933081,-3.733688,-9.792504,4.210883],[-3.137994,8.734577,5.541683,-1.844791,-7.517106,-9.881740,-9.517637,-3.095710,-3.547094],[4.948283,-1.992949,-6.375899,-6.117536,2.991645,4.488620,-3.335154,9.075173,-9.109172],[4.435980,-0.226748,3.271228,-7.562737,7.190658,-7.981273,-0.970550,1.990625,-3.068612],[-7.036297,8.593785,3.827923,-8.653503,-1.503980,8.055261,2.567443,6.001476,-3.221145],[-1.822820,-2.082375,1.663663,2.367990,-0.625391,-6.747325,-7.583250,-4.272377,-6.409524],[9.878020,8.024968,3.666348,-9.370768,-7.492244,-1.885571,-9.649865,5.029355,-2.737575],[-6.863858,-5.460635,2.907616,4.408135,2.445394,3.410142,2.043411,2.023015,-2.688376],[5.220188,3.906803,-2.823884,-3.066477,-9.280089,4.007780,5.933750,9.772599,6.749898],[-5.871466,-8.355225,-2.167207,-4.791418,-6.694143,-9.060163,-3.485031,-5.728189,4.045817],[4.563977,3.058010,2.822258,-5.683132,-1.909635,-6.397775,-8.643214,-5.494455,8.424834],[-9.827839,-1.474511,3.299931,3.799785,-3.966313,0.077142,-9.071413,-7.834825,-9.428716],[4.023411,-0.987623,-5.809534,6.234814,2.243854,-9.114782,-1.710010,-8.674035,6.527527],[2.908628,5.756531,-3.389562,-5.306709,0.404957,5.448743,-2.298948,7.493425,-8.490588]]], dtype = "float64")#candidate|3082|(13, 16, 9)|const|float64
bop_3083 = relay.logical_or(call_3080.astype('bool'), relay.reshape(const_3082.astype('bool'), relay.shape_of(call_3080))) # shape=(13, 16, 9)
bop_3086 = relay.logical_or(call_3081.astype('bool'), relay.reshape(const_3082.astype('bool'), relay.shape_of(call_3081))) # shape=(13, 16, 9)
func_1792_call = mod.get_global_var('func_1792')
func_1793_call = mutated_mod.get_global_var('func_1793')
call_3089 = relay.TupleGetItem(func_1792_call(), 0)
call_3090 = relay.TupleGetItem(func_1793_call(), 0)
output = relay.Tuple([bop_3083,call_3089,])
output2 = relay.Tuple([bop_3086,call_3090,])
func_3104 = relay.Function([], output)
mod['func_3104'] = func_3104
mod = relay.transform.InferType()(mod)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3105 = func_3104_call()
output = call_3105
func_3106 = relay.Function([], output)
mutated_mod['func_3106'] = func_3106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_3107 = relay.TupleGetItem(func_1205_call(), 0)
call_3108 = relay.TupleGetItem(func_1207_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_3113 = relay.TupleGetItem(func_2715_call(), 0)
call_3114 = relay.TupleGetItem(func_2716_call(), 0)
output = relay.Tuple([call_3107,call_3113,])
output2 = relay.Tuple([call_3108,call_3114,])
func_3118 = relay.Function([], output)
mod['func_3118'] = func_3118
mod = relay.transform.InferType()(mod)
output = func_3118()
func_3119 = relay.Function([], output)
mutated_mod['func_3119'] = func_3119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_3185 = relay.TupleGetItem(func_1407_call(), 2)
call_3186 = relay.TupleGetItem(func_1408_call(), 2)
func_2265_call = mod.get_global_var('func_2265')
func_2266_call = mutated_mod.get_global_var('func_2266')
call_3213 = relay.TupleGetItem(func_2265_call(), 1)
call_3214 = relay.TupleGetItem(func_2266_call(), 1)
var_3225 = relay.var("var_3225", dtype = "float32", shape = (1872,))#candidate|3225|(1872,)|var|float32
bop_3226 = relay.power(call_3185.astype('float64'), relay.reshape(var_3225.astype('float64'), relay.shape_of(call_3185))) # shape=(1872,)
bop_3229 = relay.power(call_3186.astype('float64'), relay.reshape(var_3225.astype('float64'), relay.shape_of(call_3186))) # shape=(1872,)
func_3017_call = mod.get_global_var('func_3017')
func_3018_call = mutated_mod.get_global_var('func_3018')
call_3235 = relay.TupleGetItem(func_3017_call(), 2)
call_3236 = relay.TupleGetItem(func_3018_call(), 2)
func_2506_call = mod.get_global_var('func_2506')
func_2508_call = mutated_mod.get_global_var('func_2508')
call_3240 = relay.TupleGetItem(func_2506_call(), 1)
call_3241 = relay.TupleGetItem(func_2508_call(), 1)
output = relay.Tuple([call_3213,bop_3226,call_3235,call_3240,])
output2 = relay.Tuple([call_3214,bop_3229,call_3236,call_3241,])
func_3244 = relay.Function([var_3225,], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
var_3245 = relay.var("var_3245", dtype = "float32", shape = (1872,))#candidate|3245|(1872,)|var|float32
output = func_3244(var_3245)
func_3246 = relay.Function([var_3245], output)
mutated_mod['func_3246'] = func_3246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_3288 = func_2346_call()
call_3289 = func_2346_call()
var_3296 = relay.var("var_3296", dtype = "float64", shape = (6, 7, 7))#candidate|3296|(6, 7, 7)|var|float64
bop_3297 = relay.less_equal(call_3288.astype('bool'), relay.reshape(var_3296.astype('bool'), relay.shape_of(call_3288))) # shape=(6, 7, 7)
bop_3300 = relay.less_equal(call_3289.astype('bool'), relay.reshape(var_3296.astype('bool'), relay.shape_of(call_3289))) # shape=(6, 7, 7)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_3313 = relay.TupleGetItem(func_2323_call(), 1)
call_3314 = relay.TupleGetItem(func_2325_call(), 1)
output = relay.Tuple([bop_3297,call_3313,])
output2 = relay.Tuple([bop_3300,call_3314,])
func_3315 = relay.Function([var_3296,], output)
mod['func_3315'] = func_3315
mod = relay.transform.InferType()(mod)
mutated_mod['func_3315'] = func_3315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3316 = relay.var("var_3316", dtype = "float64", shape = (6, 7, 7))#candidate|3316|(6, 7, 7)|var|float64
func_3315_call = mutated_mod.get_global_var('func_3315')
call_3317 = func_3315_call(var_3316)
output = call_3317
func_3318 = relay.Function([var_3316], output)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2636_call = mutated_mod.get_global_var('func_2636')
call_3439 = relay.TupleGetItem(func_2634_call(), 0)
call_3440 = relay.TupleGetItem(func_2636_call(), 0)
var_3444 = relay.var("var_3444", dtype = "bool", shape = (6, 7, 7))#candidate|3444|(6, 7, 7)|var|bool
bop_3445 = relay.logical_and(call_3439.astype('bool'), relay.reshape(var_3444.astype('bool'), relay.shape_of(call_3439))) # shape=(6, 7, 7)
bop_3448 = relay.logical_and(call_3440.astype('bool'), relay.reshape(var_3444.astype('bool'), relay.shape_of(call_3440))) # shape=(6, 7, 7)
uop_3463 = relay.rsqrt(var_3444.astype('float64')) # shape=(6, 7, 7)
func_2824_call = mod.get_global_var('func_2824')
func_2832_call = mutated_mod.get_global_var('func_2832')
const_3466 = relay.const([[5,-6,7,8,-2,7,9,5,-2,-6,-6,9,-2,8,10,8,5,-8,1,4,-3,5,3,-6,8,1,10,4,4,3,-8,-1,6,-9,-7,10,-6,-2,4,-5,1,-10,5,-2,-6,2,7,-10,3,9,4,10,6,-8,-9,7,-8,-10,3,-1,8,-2,7,9,3,1,-9,5,2,-8,-6,-2,3,9,-5,-4,2,-9,10,-8,-6,-8,10,10,7,-7,-4,1,-3,3,9,-1,5,-1,-8,8,9,-8,-1,3,8,-3,10,-2,-4,-1,4,7,3,-4,8,4,-8,-8,-1,-7,10,-1,-5,3,10,4,7,-1,9,3,7,-7,-10,-4,-6,9],[-4,-8,3,-8,-7,-7,6,-9,3,-4,-9,-7,-8,9,-3,-1,9,6,3,7,10,6,-1,-1,-7,7,10,5,5,1,2,-5,-5,5,6,-8,3,2,-9,10,-10,1,9,9,10,1,3,-3,6,-6,9,1,-8,-7,6,4,-2,-7,1,-6,5,4,-3,8,-4,-4,-8,4,5,-6,7,-6,-5,4,8,-8,5,-3,-7,-10,5,4,8,-1,9,6,7,9,-5,-7,-10,8,-7,4,1,-6,7,-2,-8,-9,-2,5,7,1,-4,6,5,9,-4,7,8,-2,3,-1,-6,-8,-5,8,-6,5,7,-3,-5,6,7,5,-5,2,10,9,-6,-4],[1,-5,9,8,-1,-2,-5,-6,-10,-10,7,-2,-7,-10,-9,8,-6,-10,4,3,-1,4,3,-10,10,-5,4,-1,-10,6,7,1,8,10,-9,9,-10,-8,2,4,-10,8,-8,-4,2,-10,-7,-4,-4,7,7,-5,-9,-8,3,-3,-2,-4,10,1,-2,-2,-3,4,-9,1,8,-3,-9,8,-4,2,3,-8,-7,-6,-1,-8,5,10,-4,1,6,-1,-6,6,1,8,7,-7,-7,3,-9,2,4,7,-4,-2,-2,-7,1,8,3,-5,2,-5,5,6,-1,-8,-2,-5,-5,9,1,8,1,-3,2,7,10,-2,9,8,10,-7,3,1,10,-7,-7,-2],[-1,-3,2,6,1,6,-9,2,-10,-4,-2,5,4,-4,7,9,2,2,3,8,9,6,6,-9,-8,3,5,-5,-10,-2,-6,6,5,5,-7,4,5,-3,-9,-1,-3,-8,-10,9,-3,-6,2,-10,-9,6,6,-1,-9,5,-7,4,1,-10,6,-1,-10,1,-1,10,-4,8,-6,2,-3,3,3,10,1,5,9,10,2,-5,10,3,-4,3,-9,-3,-4,-2,4,-3,2,-6,-3,-4,6,8,-7,-2,-3,8,2,4,-10,4,-8,2,-4,-5,-5,-2,8,-8,2,-5,5,-4,-9,-4,5,-4,7,-3,4,-8,6,-9,1,-1,-7,7,-4,-10,1,1],[-6,-7,8,-5,-9,-1,-4,-3,-8,-7,3,-9,-5,9,7,-2,-2,7,2,-4,7,-7,-6,6,-5,10,-9,4,-8,-1,-10,7,1,-5,5,3,-7,-5,-1,8,5,3,-5,-9,-9,-9,1,-2,-1,5,-8,-10,-1,7,-5,5,1,6,-6,-2,-5,-3,-8,-1,3,4,6,-6,8,-8,-8,-5,-2,8,5,-2,-10,9,9,-4,-7,4,4,-2,-3,7,5,2,-4,5,8,-4,-2,6,-4,-6,1,-6,-1,-9,-9,8,10,-1,-10,-8,4,9,-4,9,-3,8,-4,9,3,10,4,-7,-7,3,-7,-8,-2,8,1,-3,-4,-10,-7,6,7,-5]], dtype = "uint16")#candidate|3466|(5, 132)|const|uint16
const_3467 = relay.const([2.464515,1.191748,7.441392,2.171274,-9.830400,-8.739282,-3.403912,7.627780,3.402074,7.260708,9.461673,-3.991203,4.874767,0.649680,5.200913,7.691859,1.760323,-1.271512,-1.447327,6.831478,-3.466632,5.318615,-6.890666,-2.606539,8.764854,-4.607441,1.183303,8.785388,9.499382,-2.671142,6.657986,1.797105,-7.293425,-4.511139,1.236445,-2.057771,2.169424,-8.912577,-8.083495,-9.114994,3.769133,9.423563,6.225161,1.660621,3.455263,1.635607,7.500737,0.435956,-3.132909,-1.416678,-7.775479,2.336106,-4.140017,5.319325,-2.209132,-7.781298,-5.956372,1.097355,-5.735040,4.111431,-1.677636,1.024330,5.559690,6.274238,-8.286292,-4.237120,-4.418780,-8.921518,7.972965,-6.792211,9.008984,0.915505,-9.405201,2.040403,-9.741316,-1.859627,2.368248,-1.020460,1.345653,3.143754,-6.462131,-3.098855,6.890617,1.826320,-4.231082,2.905053,7.784127,9.431610,4.380882,-1.430801,9.855588,-2.672509,-4.306940,-4.955983,-4.423114,9.673200,6.005153,-0.872396,6.808711,7.296959,5.404537,2.600351,-5.424859,-1.311556,-5.885276,8.029699,2.175102,-7.505358,-1.190848,3.550489,-0.877257,3.942044,-2.881151,2.972995,-4.398440,9.975500,0.843625,-7.924998,-2.477891,9.156707,0.167594,-1.158750,-8.481430,5.856477,5.985917,1.577516,4.305143,3.024105,-4.002819,7.091586,-5.203959,-1.449435,-7.899914,1.113151,5.884603,5.479833,5.875355,-4.388775,-2.893928,-3.090605,-9.154465,-6.465890,5.230446,-0.563586,-4.206600,-3.829183,-7.374508,-0.353812,7.440729,0.269288,-9.498185,5.620314,4.430082,1.700559,4.542143,9.363512,4.122516,-1.810354,-7.474063,0.466181,-5.701294,2.183166,-4.634250,9.220966,4.209803,9.513756,1.000595,1.430604,-0.703318,2.791215,-5.862594,0.523249,-5.466136,-1.380567,-8.846358,4.160459,5.409027,-6.664953,-4.128049,9.879740,-8.030793,7.707737,-2.917589,-0.874044,9.272578,-2.316481,7.606135,3.178716,4.564535,-0.503466,2.262599,9.694141,-8.275732,0.906558,6.113618,-4.265440,7.104622,-2.734564,-3.234863,-1.971991,-3.291545,2.325239,-8.863859,1.835088,2.469153,-0.577485,7.430484,9.840003,4.733186,-8.526453,-7.825852,-1.305581,-6.996044,5.681639,-8.135479,-7.327607,-8.311408,-7.404879,-7.408009,3.827844,9.767400,3.058494,4.450504,-8.614572,5.942785,5.208042,0.327649,8.675106,-7.937198,-5.747964,-3.661939,1.011377,-8.407062,7.857759,3.307667,-3.027695,-8.896599,0.875344,1.116489,-7.527511], dtype = "float64")#candidate|3467|(240,)|const|float64
var_3468 = relay.var("var_3468", dtype = "float32", shape = (288,))#candidate|3468|(288,)|var|float32
var_3469 = relay.var("var_3469", dtype = "float64", shape = (504,))#candidate|3469|(504,)|var|float64
var_3470 = relay.var("var_3470", dtype = "float64", shape = (450,))#candidate|3470|(450,)|var|float64
call_3465 = relay.TupleGetItem(func_2824_call(relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3467.astype('float64'), [120, 2]), relay.reshape(var_3468.astype('float32'), [288,]), relay.reshape(var_3469.astype('float64'), [36, 14]), relay.reshape(var_3470.astype('float64'), [5, 90]), ), 1)
call_3471 = relay.TupleGetItem(func_2832_call(relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3466.astype('uint16'), [15, 4, 11]), relay.reshape(const_3467.astype('float64'), [120, 2]), relay.reshape(var_3468.astype('float32'), [288,]), relay.reshape(var_3469.astype('float64'), [36, 14]), relay.reshape(var_3470.astype('float64'), [5, 90]), ), 1)
func_2634_call = mod.get_global_var('func_2634')
func_2636_call = mutated_mod.get_global_var('func_2636')
call_3483 = relay.TupleGetItem(func_2634_call(), 0)
call_3484 = relay.TupleGetItem(func_2636_call(), 0)
output = relay.Tuple([bop_3445,uop_3463,call_3465,const_3466,const_3467,var_3468,var_3469,var_3470,call_3483,])
output2 = relay.Tuple([bop_3448,uop_3463,call_3471,const_3466,const_3467,var_3468,var_3469,var_3470,call_3484,])
func_3491 = relay.Function([var_3444,var_3468,var_3469,var_3470,], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
mutated_mod['func_3491'] = func_3491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mutated_mod.get_global_var('func_3491')
var_3493 = relay.var("var_3493", dtype = "bool", shape = (6, 7, 7))#candidate|3493|(6, 7, 7)|var|bool
var_3494 = relay.var("var_3494", dtype = "float32", shape = (288,))#candidate|3494|(288,)|var|float32
var_3495 = relay.var("var_3495", dtype = "float64", shape = (504,))#candidate|3495|(504,)|var|float64
var_3496 = relay.var("var_3496", dtype = "float64", shape = (450,))#candidate|3496|(450,)|var|float64
call_3492 = func_3491_call(var_3493,var_3494,var_3495,var_3496,)
output = call_3492
func_3497 = relay.Function([var_3493,var_3494,var_3495,var_3496,], output)
mutated_mod['func_3497'] = func_3497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2447_call = mod.get_global_var('func_2447')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3513 = relay.TupleGetItem(func_2447_call(), 0)
call_3514 = relay.TupleGetItem(func_2448_call(), 0)
uop_3520 = relay.log10(call_3513.astype('float64')) # shape=(9, 5, 10)
uop_3522 = relay.log10(call_3514.astype('float64')) # shape=(9, 5, 10)
output = relay.Tuple([uop_3520,])
output2 = relay.Tuple([uop_3522,])
func_3531 = relay.Function([], output)
mod['func_3531'] = func_3531
mod = relay.transform.InferType()(mod)
mutated_mod['func_3531'] = func_3531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3531_call = mutated_mod.get_global_var('func_3531')
call_3532 = func_3531_call()
output = call_3532
func_3533 = relay.Function([], output)
mutated_mod['func_3533'] = func_3533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2092_call = mod.get_global_var('func_2092')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_3536 = relay.TupleGetItem(func_2092_call(), 0)
call_3537 = relay.TupleGetItem(func_2093_call(), 0)
uop_3543 = relay.erf(call_3536.astype('float64')) # shape=(1872,)
uop_3545 = relay.erf(call_3537.astype('float64')) # shape=(1872,)
output = relay.Tuple([uop_3543,])
output2 = relay.Tuple([uop_3545,])
func_3556 = relay.Function([], output)
mod['func_3556'] = func_3556
mod = relay.transform.InferType()(mod)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3556_call = mutated_mod.get_global_var('func_3556')
call_3557 = func_3556_call()
output = call_3557
func_3558 = relay.Function([], output)
mutated_mod['func_3558'] = func_3558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_3573 = relay.TupleGetItem(func_1140_call(), 0)
call_3574 = relay.TupleGetItem(func_1141_call(), 0)
var_3577 = relay.var("var_3577", dtype = "float64", shape = (6, 7, 7))#candidate|3577|(6, 7, 7)|var|float64
bop_3578 = relay.greater(call_3573.astype('bool'), relay.reshape(var_3577.astype('bool'), relay.shape_of(call_3573))) # shape=(6, 7, 7)
bop_3581 = relay.greater(call_3574.astype('bool'), relay.reshape(var_3577.astype('bool'), relay.shape_of(call_3574))) # shape=(6, 7, 7)
uop_3582 = relay.sqrt(var_3577.astype('float32')) # shape=(6, 7, 7)
output = relay.Tuple([bop_3578,uop_3582,])
output2 = relay.Tuple([bop_3581,uop_3582,])
func_3592 = relay.Function([var_3577,], output)
mod['func_3592'] = func_3592
mod = relay.transform.InferType()(mod)
var_3593 = relay.var("var_3593", dtype = "float64", shape = (6, 7, 7))#candidate|3593|(6, 7, 7)|var|float64
output = func_3592(var_3593)
func_3594 = relay.Function([var_3593], output)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_3596 = func_2609_call()
call_3597 = func_2609_call()
output = call_3596
output2 = call_3597
func_3598 = relay.Function([], output)
mod['func_3598'] = func_3598
mod = relay.transform.InferType()(mod)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3598_call = mutated_mod.get_global_var('func_3598')
call_3599 = func_3598_call()
output = call_3599
func_3600 = relay.Function([], output)
mutated_mod['func_3600'] = func_3600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_3609 = relay.TupleGetItem(func_1620_call(), 0)
call_3610 = relay.TupleGetItem(func_1622_call(), 0)
func_1897_call = mod.get_global_var('func_1897')
func_1900_call = mutated_mod.get_global_var('func_1900')
var_3629 = relay.var("var_3629", dtype = "int32", shape = ())#candidate|3629|()|var|int32
call_3628 = relay.TupleGetItem(func_1897_call(relay.reshape(var_3629.astype('int32'), [])), 3)
call_3630 = relay.TupleGetItem(func_1900_call(relay.reshape(var_3629.astype('int32'), [])), 3)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_3646 = relay.TupleGetItem(func_1620_call(), 0)
call_3647 = relay.TupleGetItem(func_1622_call(), 0)
func_3118_call = mod.get_global_var('func_3118')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_3653 = relay.TupleGetItem(func_3118_call(), 1)
call_3654 = relay.TupleGetItem(func_3119_call(), 1)
func_2506_call = mod.get_global_var('func_2506')
func_2508_call = mutated_mod.get_global_var('func_2508')
call_3656 = relay.TupleGetItem(func_2506_call(), 1)
call_3657 = relay.TupleGetItem(func_2508_call(), 1)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_3660 = func_2346_call()
call_3661 = func_2346_call()
output = relay.Tuple([call_3609,call_3628,var_3629,call_3646,call_3653,call_3656,call_3660,])
output2 = relay.Tuple([call_3610,call_3630,var_3629,call_3647,call_3654,call_3657,call_3661,])
func_3669 = relay.Function([var_3629,], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3670 = relay.var("var_3670", dtype = "int32", shape = ())#candidate|3670|()|var|int32
func_3669_call = mutated_mod.get_global_var('func_3669')
call_3671 = func_3669_call(var_3670)
output = call_3671
func_3672 = relay.Function([var_3670], output)
mutated_mod['func_3672'] = func_3672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_3685 = relay.TupleGetItem(func_2323_call(), 2)
call_3686 = relay.TupleGetItem(func_2325_call(), 2)
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_3703 = relay.TupleGetItem(func_3556_call(), 0)
call_3704 = relay.TupleGetItem(func_3558_call(), 0)
output = relay.Tuple([call_3685,call_3703,])
output2 = relay.Tuple([call_3686,call_3704,])
func_3734 = relay.Function([], output)
mod['func_3734'] = func_3734
mod = relay.transform.InferType()(mod)
output = func_3734()
func_3735 = relay.Function([], output)
mutated_mod['func_3735'] = func_3735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1311_call = mod.get_global_var('func_1311')
func_1313_call = mutated_mod.get_global_var('func_1313')
call_3746 = relay.TupleGetItem(func_1311_call(), 0)
call_3747 = relay.TupleGetItem(func_1313_call(), 0)
output = relay.Tuple([call_3746,])
output2 = relay.Tuple([call_3747,])
func_3749 = relay.Function([], output)
mod['func_3749'] = func_3749
mod = relay.transform.InferType()(mod)
mutated_mod['func_3749'] = func_3749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mutated_mod.get_global_var('func_3749')
call_3750 = func_3749_call()
output = call_3750
func_3751 = relay.Function([], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_3774 = relay.TupleGetItem(func_2067_call(), 0)
call_3775 = relay.TupleGetItem(func_2069_call(), 0)
func_1506_call = mod.get_global_var('func_1506')
func_1509_call = mutated_mod.get_global_var('func_1509')
var_3783 = relay.var("var_3783", dtype = "float64", shape = (294,))#candidate|3783|(294,)|var|float64
call_3782 = relay.TupleGetItem(func_1506_call(relay.reshape(var_3783.astype('float64'), [6, 7, 7])), 0)
call_3784 = relay.TupleGetItem(func_1509_call(relay.reshape(var_3783.astype('float64'), [6, 7, 7])), 0)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_3790 = func_2346_call()
call_3791 = func_2346_call()
var_3794 = relay.var("var_3794", dtype = "int8", shape = (13, 16, 9))#candidate|3794|(13, 16, 9)|var|int8
bop_3795 = relay.logical_and(call_3774.astype('bool'), relay.reshape(var_3794.astype('bool'), relay.shape_of(call_3774))) # shape=(13, 16, 9)
bop_3798 = relay.logical_and(call_3775.astype('bool'), relay.reshape(var_3794.astype('bool'), relay.shape_of(call_3775))) # shape=(13, 16, 9)
output = relay.Tuple([call_3782,var_3783,call_3790,bop_3795,])
output2 = relay.Tuple([call_3784,var_3783,call_3791,bop_3798,])
func_3805 = relay.Function([var_3783,var_3794,], output)
mod['func_3805'] = func_3805
mod = relay.transform.InferType()(mod)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3805_call = mutated_mod.get_global_var('func_3805')
var_3807 = relay.var("var_3807", dtype = "float64", shape = (294,))#candidate|3807|(294,)|var|float64
var_3808 = relay.var("var_3808", dtype = "int8", shape = (13, 16, 9))#candidate|3808|(13, 16, 9)|var|int8
call_3806 = func_3805_call(var_3807,var_3808,)
output = call_3806
func_3809 = relay.Function([var_3807,var_3808,], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_3857 = relay.TupleGetItem(func_2715_call(), 0)
call_3858 = relay.TupleGetItem(func_2716_call(), 0)
var_3874 = relay.var("var_3874", dtype = "bool", shape = (6, 7, 7))#candidate|3874|(6, 7, 7)|var|bool
bop_3875 = relay.power(call_3857.astype('float32'), relay.reshape(var_3874.astype('float32'), relay.shape_of(call_3857))) # shape=(6, 7, 7)
bop_3878 = relay.power(call_3858.astype('float32'), relay.reshape(var_3874.astype('float32'), relay.shape_of(call_3858))) # shape=(6, 7, 7)
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_3881 = relay.TupleGetItem(func_3556_call(), 0)
call_3882 = relay.TupleGetItem(func_3558_call(), 0)
output = relay.Tuple([bop_3875,call_3881,])
output2 = relay.Tuple([bop_3878,call_3882,])
func_3885 = relay.Function([var_3874,], output)
mod['func_3885'] = func_3885
mod = relay.transform.InferType()(mod)
mutated_mod['func_3885'] = func_3885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3886 = relay.var("var_3886", dtype = "bool", shape = (6, 7, 7))#candidate|3886|(6, 7, 7)|var|bool
func_3885_call = mutated_mod.get_global_var('func_3885')
call_3887 = func_3885_call(var_3886)
output = call_3887
func_3888 = relay.Function([var_3886], output)
mutated_mod['func_3888'] = func_3888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_3938 = relay.TupleGetItem(func_1537_call(), 0)
call_3939 = relay.TupleGetItem(func_1538_call(), 0)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_3940 = relay.TupleGetItem(func_1071_call(), 0)
call_3941 = relay.TupleGetItem(func_1073_call(), 0)
output = relay.Tuple([call_3938,call_3940,])
output2 = relay.Tuple([call_3939,call_3941,])
func_3944 = relay.Function([], output)
mod['func_3944'] = func_3944
mod = relay.transform.InferType()(mod)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mutated_mod.get_global_var('func_3944')
call_3945 = func_3944_call()
output = call_3945
func_3946 = relay.Function([], output)
mutated_mod['func_3946'] = func_3946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_3964 = relay.TupleGetItem(func_1205_call(), 1)
call_3965 = relay.TupleGetItem(func_1207_call(), 1)
var_3967 = relay.var("var_3967", dtype = "float32", shape = (1872,))#candidate|3967|(1872,)|var|float32
bop_3968 = relay.subtract(call_3964.astype('uint16'), relay.reshape(var_3967.astype('uint16'), relay.shape_of(call_3964))) # shape=(1872,)
bop_3971 = relay.subtract(call_3965.astype('uint16'), relay.reshape(var_3967.astype('uint16'), relay.shape_of(call_3965))) # shape=(1872,)
bop_3972 = relay.logical_or(call_3964.astype('bool'), relay.reshape(var_3967.astype('bool'), relay.shape_of(call_3964))) # shape=(1872,)
bop_3975 = relay.logical_or(call_3965.astype('bool'), relay.reshape(var_3967.astype('bool'), relay.shape_of(call_3965))) # shape=(1872,)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_3987 = relay.TupleGetItem(func_1537_call(), 0)
call_3988 = relay.TupleGetItem(func_1538_call(), 0)
uop_3993 = relay.cosh(bop_3972.astype('float32')) # shape=(1872,)
uop_3995 = relay.cosh(bop_3975.astype('float32')) # shape=(1872,)
func_79_call = mod.get_global_var('func_79')
func_81_call = mutated_mod.get_global_var('func_81')
call_4001 = relay.TupleGetItem(func_79_call(relay.reshape(var_3967.astype('float32'), [13, 16, 9])), 0)
call_4002 = relay.TupleGetItem(func_81_call(relay.reshape(var_3967.astype('float32'), [13, 16, 9])), 0)
func_2824_call = mod.get_global_var('func_2824')
func_2832_call = mutated_mod.get_global_var('func_2832')
var_4005 = relay.var("var_4005", dtype = "uint16", shape = (660, 1))#candidate|4005|(660, 1)|var|uint16
const_4006 = relay.const([-4.201795,-7.318297,2.099590,-2.618525,-8.924760,-3.467599,7.121267,-4.389145,1.987091,1.801236,-6.326673,-2.809866,7.147677,-3.585233,-1.533984,-4.333437,-7.469453,9.083158,4.661314,0.689145,5.814066,-9.912601,5.625986,4.115719,4.803802,1.558133,-4.563173,2.861324,-4.013654,6.991944,9.186530,2.745136,-0.377471,9.816450,-8.538852,-8.918716,1.118097,-0.539704,5.299668,9.825064,-8.560755,7.215216,-7.615347,-3.559948,-4.916424,8.251041,-2.767632,7.111247,-6.474847,-3.191516,8.845653,-9.775847,0.731210,-1.010089,4.856810,7.473384,-5.388467,-6.630641,1.887126,8.726241,-2.922063,7.735046,-6.703053,-4.383364,-5.151531,9.019196,6.278105,-3.575731,1.900992,0.235696,-6.286392,-4.145553,9.052527,1.768083,-2.043480,-3.354326,9.323774,1.968006,8.807932,-5.426837,-7.349600,5.657483,-1.493240,-1.169547,-0.361898,-6.050057,-6.806754,4.429687,6.146345,-4.232022,-1.133484,2.894966,0.243753,5.876051,-4.826740,-7.978758,0.261324,-9.217751,2.406786,1.717999,-1.066796,-1.379236,0.811462,5.180687,-9.618066,-7.252783,-8.289679,-7.071111,-5.375020,-3.426440,-5.352394,4.826340,5.829454,1.298604,-1.716342,-6.008089,-9.219721,2.048127,8.257295,-4.572115,-6.976602,-5.811891,-1.230256,-2.933828,-0.575286,5.165056,7.183805,-8.795226,-8.266072,4.510390,4.846125,-9.116517,-0.161848,5.942455,-6.250848,4.183751,-3.127472,6.299076,8.131796,2.383187,5.782806,-6.053111,0.256594,8.888070,-1.776070,-0.229185,-0.218057,2.781187,-2.526051,-5.347233,-9.614042,3.968579,2.265882,-1.607024,8.874036,-0.835091,-1.934918,8.714267,-0.964906,-3.190583,-0.577729,-8.819353,4.682319,8.330467,-9.394946,-6.777984,-6.152561,2.359322,-5.235693,-6.276235,6.947583,-9.491875,5.495596,6.794584,-4.602304,-5.883789,-0.623984,-2.784260,-7.234826,4.154783,0.197495,2.226954,4.082403,-2.389889,-8.635550,9.117751,5.750281,-8.316098,-7.008028,-2.576419,5.647595,3.337631,8.635231,6.528656,5.576181,-1.884623,-5.474187,-3.073060,-3.452134,3.463129,2.655133,-7.665190,1.368852,6.041109,-5.000697,-7.617685,-4.037714,5.583772,2.067764,7.647038,2.483747,-5.130906,-9.569552,-7.478334,7.131341,3.386650,-2.285482,7.451278,-3.031443,1.939452,1.048244,-4.380076,5.010384,6.185575,-4.506088,-2.308581,6.803409,9.243096,7.412894,-8.543735,-0.163375,-0.299740,-3.448567,-8.774864,-7.596749,6.501687,0.470061,-1.642183,-0.599919,-4.501975], dtype = "float64")#candidate|4006|(240,)|const|float64
var_4007 = relay.var("var_4007", dtype = "float32", shape = (144, 2))#candidate|4007|(144, 2)|var|float32
const_4008 = relay.const([3.795693,-9.981543,6.977978,1.684907,5.220436,7.897486,5.804739,4.542356,-5.162616,-5.062975,-9.418824,1.292792,-7.562324,9.008367,7.404488,3.687949,-2.980226,-9.114608,-1.017822,4.837422,-2.315442,4.261587,3.446138,8.994909,-4.239875,-9.947930,-7.856820,0.530474,-1.658126,9.984023,-2.414252,-7.838483,-0.952909,-4.854999,8.636133,-6.515290,-3.316431,0.424037,-7.197891,4.886439,-3.114513,-1.674384,1.600249,5.097588,-7.271038,-6.091713,-6.582756,2.381678,8.731702,6.023403,1.970785,-9.856691,3.218038,3.059105,-3.247966,-2.314702,2.811886,-6.557591,3.921230,-6.549382,-4.819591,-6.603009,-6.787941,4.025743,5.410520,-6.277650,-6.560137,-3.506048,-2.783138,-2.455653,7.240400,-5.399393,6.083744,8.943033,-1.614247,-4.453501,-7.719760,1.797407,-0.418246,5.696590,-9.962401,-7.236837,-2.178235,-5.870575,-1.213620,-1.087181,-9.026540,-3.838073,2.490476,-0.728619,-7.223136,-8.443577,6.184834,1.160369,-6.835348,2.286466,-6.763838,9.844975,-4.471249,6.200539,-1.703867,-0.074570,-6.370304,-8.989718,3.207454,-1.030244,7.461623,-4.271140,-1.941485,-3.003077,-3.917369,1.342441,0.102567,-6.152593,5.031035,1.342330,9.836711,-8.621795,-1.825912,0.334723,5.007788,2.624928,-8.800944,5.402211,6.735508,9.562138,0.973536,-5.364558,1.791325,-0.602530,5.898472,8.065085,-1.542119,-0.805648,-4.248008,-4.181417,4.209451,2.210333,5.091446,1.857798,-3.305124,7.965196,4.284981,3.603277,-4.087288,5.182009,8.256990,-4.190862,-8.629237,-0.177548,-0.526426,-8.514180,3.584166,3.924399,-8.605219,9.677594,1.709108,-7.546629,5.756381,6.514678,-4.255511,8.237609,4.837810,3.483056,-8.693378,0.964190,-0.202974,0.981720,2.722030,-0.912563,6.618855,-9.968050,-5.454492,0.015063,-6.282052,2.118291,-1.466725,-7.165699,-4.697719,1.499704,-3.016538,0.945396,6.352502,-3.683999,7.683914,-1.016165,-0.164013,3.379508,-2.683576,-0.315130,-0.846844,6.844232,-4.625215,-4.598882,0.265271,-8.422645,-8.087161,-5.761674,-3.550085,-4.297624,0.229604,-8.357292,-6.602882,6.957514,-6.521310,7.356859,5.751719,5.555256,2.435024,9.438886,-2.487809,-8.857504,2.462018,-0.933433,2.192797,-5.247487,9.238137,-5.015801,-6.423477,-5.846055,-6.786815,0.661289,-8.253189,3.732469,1.218914,-3.535296,-3.683079,-5.014631,3.853224,0.779919,-8.043276,-2.834971,-1.351648,1.070042,-1.631185,-9.626365,3.520156,-5.490186,-7.444487,5.278811,-9.304403,5.389847,-3.076211,1.749285,-1.991491,-3.878884,-5.359027,2.253266,-9.614756,1.261618,-3.342902,5.347522,-7.653060,-2.199380,7.141239,-0.470397,9.448877,2.691762,0.007420,-5.621075,3.864382,-2.262743,7.008670,5.000736,-3.137672,-6.918740,-9.683641,5.878020,8.054742,4.024897,9.183729,2.549017,-2.933553,3.347671,6.642265,3.220218,-3.410304,-9.777659,0.844104,3.400586,-0.010055,3.576472,8.340307,0.371707,-4.537584,-0.651917,-9.484234,-4.461037,-8.777546,3.969251,9.277603,-5.844860,-9.055162,6.518720,-7.515426,-4.278199,-9.930005,0.281484,-4.992328,4.629609,-4.096110,-6.327813,6.579565,4.778362,-9.852176,6.963562,1.383791,-9.358749,-2.095778,-8.723824,-1.303566,3.224853,-9.881202,8.396481,-7.887126,2.853212,-6.194461,6.733294,-4.240425,1.301328,2.237556,7.043670,-1.086368,1.194630,7.934953,-0.528880,-5.949355,2.245313,-7.637300,2.598852,6.669413,5.784705,-0.911427,6.157719,9.505194,-3.524455,9.551830,-5.028504,7.085696,-3.998174,3.878809,-6.759547,-1.614272,-0.111073,-9.359745,6.046832,-8.151584,1.090048,-0.294232,8.216403,3.356092,-5.781020,0.739943,4.878762,-1.652848,-2.615148,-5.514522,0.638158,-3.728227,5.796768,8.308955,-3.020368,-4.272411,3.031151,-5.691594,-2.887428,-8.090573,-9.369471,9.059089,-5.752532,0.702639,4.315197,1.160637,-2.109115,-8.518215,3.436054,9.231093,5.348417,6.288211,-7.677778,-5.859779,-9.606081,8.395543,-9.050329,-6.528787,9.816133,5.452874,3.271562,6.312456,-8.581588,2.358412,-6.530809,7.710982,-5.999551,-3.583186,-2.950062,-1.906577,8.506388,8.468903,-9.157460,-4.537718,8.467190,2.260619,-7.683977,1.944735,-8.228775,-3.460732,6.136029,5.917152,7.438776,-3.397364,-7.852772,-8.370985,-2.698711,2.322547,4.750864,-1.888576,-0.599185,1.370270,5.330229,3.356718,1.902709,-6.217525,-0.946051,5.545066,0.362595,8.728622,-9.231358,0.561459,-3.764158,6.856882,-3.681095,-5.631218,4.050132,4.757183,-0.338100,9.126317,9.306439,-4.152212,2.263336,6.517943,0.608557,-2.453544,-4.501135,4.306608,-3.216246,-7.768153,-6.914331,1.959661,-9.534784,-1.017295,-0.741388,-1.727518,3.742231,8.807122,-1.486224,4.449373,6.543609,0.507229,8.128157,-1.038640,-8.790485,-0.986808,-8.285753,-9.319122,8.970154,0.390803,-9.740211,4.833386,2.443615,-0.469479,2.779201,1.633200,9.320226,-9.318185,0.850139,6.945711,2.296946,7.046242,8.037839,-9.133136,-4.583805,-9.609658,5.305570,3.073093,-8.600103,1.193004,2.216164,8.136300,4.379290,-4.466581,-5.146852,-2.782058,3.752149,4.372886,-3.984666,4.642482,-0.802284,2.119877,0.302711,-5.769679,8.172469,1.982639,-3.776579], dtype = "float64")#candidate|4008|(504,)|const|float64
const_4009 = relay.const([[5.752625,-8.013790,1.395532,-4.470103,4.233514,-7.922843,3.020107,-0.562121,-8.072278,8.129873,-8.880565,9.810516,0.670002,-3.033422,-2.478220,-4.524698,-0.161071,-1.321839,3.436277,8.361464,8.524768,-7.961461,6.822149,7.260208,0.840946,1.140334,-0.706945,-2.349929,-0.142415,5.829483,-9.960878,-1.912491,2.768147,-7.431042,9.599488,1.527578,-1.800671,-1.031045,-2.408115,2.635330,-8.339138,9.476509,1.689401,-9.674489,4.841186,-2.443603,7.281321,-3.419809,-6.775258,0.522451,-8.165128,-9.863460,-2.381760,-2.377286,-3.704399,-9.655051,1.302269,6.394291,-7.396004,-5.914559,-8.995871,4.259676,7.208568,-1.534004,4.206090,-0.351102,-9.663146,-3.188315,5.371593,-2.884166,-4.797437,-8.483023,-1.850345,9.203892,4.593046,-4.252593,-9.406498,3.396487,0.796137,5.957305,-7.550863,-8.526375,-4.895862,4.441537,-3.904749,-1.682963,9.357253,-8.533207,-8.867109,-8.237460,2.151221,5.386233,-0.164937,4.247905,-2.089297,-2.765218,-0.652308,-9.917325,3.124401,-9.249180,8.894635,2.998125,9.641438,-8.567361,4.409911,8.794683,-9.862008,-4.770873,-4.957167,-0.164560,9.713814,2.931994,-2.754293,-9.734333,6.194342,7.866381,7.915029,4.212779,-3.458227,1.825016,-3.019513,-5.660446,8.342960,-0.527238,-7.394858,8.034777,2.513815,-3.415387,-5.933362,-6.212641,7.776798,-9.599682,-5.741452,-2.097299,7.077253,-4.166492,-8.297191,-6.600554,3.153127,4.761360,-9.392097,0.458840,5.123871,3.452815,0.262469,-8.324339,1.979444,9.221373,-8.016159,-1.877553,4.393396,-3.194158,3.794435,-7.709788,3.825625,-1.611991,-1.400442,8.802801,0.177287,9.853994,-9.653637,-4.741970,-4.827405,0.395094,8.031171,-7.753330,-9.220081,-6.348009,-0.592191,1.312506,4.898900,4.147917,6.413730,4.426408,5.008582,7.853603,-9.176657,6.743194,-4.753390,-1.171165,-8.610686,-0.687675,2.601169,-9.644842,4.183573,5.765090,9.904708,-9.226923,6.044997,-2.607559,-8.142227,7.343367,8.836566,2.650873,0.791641,8.944291,5.290314,1.297676,-9.804223,-6.185805,5.194675,-8.106736,-5.003357,7.185222,0.849103,-1.565045,-6.563662,-0.001184,-5.459736,9.833742,1.177690,6.438760,-0.033219,7.086844,-0.537239,1.896573,2.649168,-1.571397,-4.783467,-7.498299,7.566563,-6.783421,-0.827501,8.542651,-2.431978,-4.114248,4.805644,-2.671687,-6.352036,5.056090,5.321694,-9.084550,-9.074243,-4.790661,7.305507,-7.270064,7.038124,-0.427322,-5.645050,-3.432577,-9.250431,-4.600220,-2.446900,0.009800,0.198888,4.730271,2.746193,2.810929,1.072557,7.116450,-4.987252,4.997778,-0.487348,9.597084,-5.988936,0.325778,9.539778,-4.165252,4.654475,-0.488735,-2.481956,9.531131,-3.096457,-3.989878,8.915882,-4.865710,9.751927,1.208911,2.528671,-7.708430,3.116252,-7.166185,-3.554386,-6.709997,-7.817913,-9.052868,9.916641,2.850172,-8.701226,7.558415,1.192039,-4.195753,4.258267,-2.306602,-5.199168,-5.768907,-0.489475,-7.317932,-4.192168,-6.111220,-6.336215,5.386599,3.324886,7.800390,-3.534357,6.378595,-6.379283,2.819668,5.582072,-9.866862,-5.497465,3.240772,5.001294,7.051684,9.694341,-4.362003,-6.151876,7.025087,-0.214454,-2.858418,7.422197,-5.984885,6.248254,6.067446,5.260606,-2.957571,9.457820,7.364996,-8.703024,-4.845950,-2.308722,1.121377,-9.024187,-9.532274,9.439030,-7.497910,-3.720954,-8.382812,-4.949477,3.115423,4.670783,4.109617,6.564633,6.386528,-1.535645,1.234865,-8.058259,1.676310,0.984135,-8.396079,-7.102713,4.681480,0.980468,-5.174825,-5.213369,-4.795024,-3.388710,-5.178251,-3.527598,3.717177,1.203738,3.408595,7.071175,-5.385494,6.814304,8.707500,7.975869,-3.631112,-6.358524,-9.461400,-4.206032,-5.157033,7.092041,4.516046,-3.630417,-3.830691,0.121837,9.608126,-0.597049,-4.970383,-8.933721,-6.091213,-0.445193,5.457837,9.216033,1.008127,-6.525563,-3.648387,-3.695008,2.554361,-9.361704,-1.057015,4.140584,-3.095506,-3.527369,7.722639,-1.834624,-9.616941,4.187671,9.531498,-3.993601,-6.917309,-9.630703,-6.332957,-7.811351,4.452394,3.176145,4.845346,-0.353837,-8.374594,-1.698204,1.440080,8.343045,4.532081,4.923234,-0.633283,-8.676930,-7.161823,1.980579,1.847160,-6.422759,2.895950,0.132881,8.759967,-8.775063,-3.590981,0.211191,-7.378337,6.263555,5.425186,-9.683666,-3.340768,3.553756,-6.390242,5.508012,-0.418675,-2.738079,6.534907,-6.364889,6.826641,9.507354,6.011486,-1.684852,3.188103,-1.647451,-8.821204,-4.940053,6.077055,-8.595005,4.396220,3.915754,0.114707,4.914749,7.439176,8.012858,-8.761352,-0.780788,-8.961028,0.827644,9.016056]], dtype = "float64")#candidate|4009|(1, 450)|const|float64
call_4004 = relay.TupleGetItem(func_2824_call(relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(const_4006.astype('float64'), [120, 2]), relay.reshape(var_4007.astype('float32'), [288,]), relay.reshape(const_4008.astype('float64'), [36, 14]), relay.reshape(const_4009.astype('float64'), [5, 90]), ), 2)
call_4010 = relay.TupleGetItem(func_2832_call(relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(var_4005.astype('uint16'), [15, 4, 11]), relay.reshape(const_4006.astype('float64'), [120, 2]), relay.reshape(var_4007.astype('float32'), [288,]), relay.reshape(const_4008.astype('float64'), [36, 14]), relay.reshape(const_4009.astype('float64'), [5, 90]), ), 2)
output = relay.Tuple([bop_3968,call_3987,uop_3993,call_4001,call_4004,var_4005,const_4006,var_4007,const_4008,const_4009,])
output2 = relay.Tuple([bop_3971,call_3988,uop_3995,call_4002,call_4010,var_4005,const_4006,var_4007,const_4008,const_4009,])
func_4013 = relay.Function([var_3967,var_4005,var_4007,], output)
mod['func_4013'] = func_4013
mod = relay.transform.InferType()(mod)
var_4014 = relay.var("var_4014", dtype = "float32", shape = (1872,))#candidate|4014|(1872,)|var|float32
var_4015 = relay.var("var_4015", dtype = "uint16", shape = (660, 1))#candidate|4015|(660, 1)|var|uint16
var_4016 = relay.var("var_4016", dtype = "float32", shape = (144, 2))#candidate|4016|(144, 2)|var|float32
output = func_4013(var_4014,var_4015,var_4016,)
func_4017 = relay.Function([var_4014,var_4015,var_4016,], output)
mutated_mod['func_4017'] = func_4017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_4055 = relay.TupleGetItem(func_1620_call(), 0)
call_4056 = relay.TupleGetItem(func_1622_call(), 0)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4080 = relay.TupleGetItem(func_3749_call(), 0)
call_4081 = relay.TupleGetItem(func_3751_call(), 0)
func_3669_call = mod.get_global_var('func_3669')
func_3672_call = mutated_mod.get_global_var('func_3672')
const_4084 = relay.const(-2, dtype = "int32")#candidate|4084|()|const|int32
call_4083 = relay.TupleGetItem(func_3669_call(relay.reshape(const_4084.astype('int32'), [])), 5)
call_4085 = relay.TupleGetItem(func_3672_call(relay.reshape(const_4084.astype('int32'), [])), 5)
output = relay.Tuple([call_4055,call_4080,call_4083,const_4084,])
output2 = relay.Tuple([call_4056,call_4081,call_4085,const_4084,])
func_4087 = relay.Function([], output)
mod['func_4087'] = func_4087
mod = relay.transform.InferType()(mod)
output = func_4087()
func_4088 = relay.Function([], output)
mutated_mod['func_4088'] = func_4088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3075_call = mod.get_global_var('func_3075')
func_3077_call = mutated_mod.get_global_var('func_3077')
call_4145 = relay.TupleGetItem(func_3075_call(), 0)
call_4146 = relay.TupleGetItem(func_3077_call(), 0)
output = call_4145
output2 = call_4146
func_4160 = relay.Function([], output)
mod['func_4160'] = func_4160
mod = relay.transform.InferType()(mod)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mutated_mod.get_global_var('func_4160')
call_4161 = func_4160_call()
output = call_4161
func_4162 = relay.Function([], output)
mutated_mod['func_4162'] = func_4162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_4194 = relay.TupleGetItem(func_1620_call(), 0)
call_4195 = relay.TupleGetItem(func_1622_call(), 0)
func_2824_call = mod.get_global_var('func_2824')
func_2832_call = mutated_mod.get_global_var('func_2832')
var_4202 = relay.var("var_4202", dtype = "uint16", shape = (660,))#candidate|4202|(660,)|var|uint16
const_4203 = relay.const([[9.465128,-6.699968,-7.354431,7.785236,4.535217,4.001701,-7.937641,-1.192538,8.707700,-1.364383],[-4.110142,3.356179,5.377048,-2.874059,-2.888117,0.593424,-7.184970,5.082286,-1.062585,0.730898],[0.473272,-6.376624,-9.909534,-9.473490,5.874958,4.315017,-6.468903,-6.103878,5.951963,7.029372],[-2.090584,-1.200919,-2.859810,0.194137,-8.594857,7.829715,7.354820,-1.627318,-7.230684,6.800572],[3.839004,9.941440,-6.183372,5.569838,8.392411,1.881186,0.645162,-9.561467,8.110859,-0.180130],[-5.327092,1.110969,-9.557907,1.246964,-7.625313,-4.365397,-9.142493,8.443815,4.678260,-7.364334],[6.399054,-4.174375,2.445997,9.146226,4.555473,9.744215,7.669624,7.936001,-3.304960,-5.583602],[-8.245525,-3.752016,6.854263,7.500750,-1.668816,5.902142,6.865580,-1.905977,-2.945223,2.957331],[-2.675038,6.382863,3.207220,4.141151,3.768753,-7.018742,-9.869330,-6.903911,-2.145013,7.183330],[-4.812601,-2.633418,-7.132321,-8.991175,-1.600355,-1.299196,-0.251646,-3.545772,1.629969,8.818787],[-8.444359,-6.840496,-3.886294,-4.986950,-3.578876,8.178780,-9.682491,-4.455252,5.916715,1.627450],[-4.926154,-7.958873,3.850060,-3.214940,-1.096036,3.110792,7.027549,4.436491,1.790052,-7.846317],[5.749157,-5.542624,6.025850,7.409343,7.701535,7.886427,-7.789986,5.067244,-1.638300,-9.838199],[6.843334,4.909479,9.918453,3.157021,-1.392933,-9.205634,4.187585,9.113570,4.036246,8.043373],[3.667371,-2.464569,-0.032769,6.655359,7.963452,0.235460,-4.923334,8.173641,-9.158692,-7.291711],[-8.580979,-5.111164,3.477223,5.244059,-7.667577,9.774305,0.436320,-7.319479,8.482190,-1.234811],[3.562020,-4.323040,5.502781,-3.040114,-1.833786,-0.067249,2.155350,-2.630269,3.882133,-6.839853],[8.911725,4.670867,9.179394,-8.879180,-1.750349,-4.025692,1.559502,6.569413,-9.817468,-4.693498],[-8.026411,-0.900056,8.467962,-2.465664,-1.302423,1.914792,-5.544404,-2.563750,-6.685455,1.123396],[1.152938,-5.028510,-8.234290,3.909682,8.269108,1.386899,7.042762,-2.760804,-6.398584,7.434396],[7.712368,-8.203054,6.550317,3.470767,-3.209729,-7.536239,-2.901917,-3.158018,-1.896362,-9.019710],[4.135015,5.065601,2.096181,4.130701,-3.270973,-5.427547,0.456230,-5.358986,3.963427,-2.066332],[-7.509000,5.986332,-0.214516,4.913632,-8.979413,-9.807937,9.120051,-6.902086,0.910930,-0.062003],[-5.231226,4.572843,-0.980401,-1.267697,-8.501156,1.649781,-3.817962,4.075957,-2.172075,0.158863]], dtype = "float64")#candidate|4203|(24, 10)|const|float64
var_4204 = relay.var("var_4204", dtype = "float32", shape = (288,))#candidate|4204|(288,)|var|float32
var_4205 = relay.var("var_4205", dtype = "float64", shape = (36, 14))#candidate|4205|(36, 14)|var|float64
const_4206 = relay.const([1.509557,-2.891423,0.745535,-6.239643,2.521434,-1.598647,6.114938,2.044922,3.056890,1.170430,3.883112,-0.748423,7.028882,2.623238,1.689180,-3.135779,-1.385171,-4.855764,6.954919,-3.678901,1.097129,3.866148,0.502938,-0.320208,2.376171,-1.090342,9.080952,-4.738654,8.273335,4.188910,7.824468,2.968687,8.269986,0.767669,7.748142,3.173941,-8.799527,6.237515,-2.492832,-9.883893,0.093899,-4.295164,5.198627,-0.361515,-4.015258,7.943203,4.557805,6.834052,1.031569,1.846235,-3.495297,0.746513,1.942572,-9.635785,-8.552338,1.097241,7.656229,-0.177986,2.033575,-9.638413,7.707126,8.353055,-1.277791,2.925111,0.784298,-8.756760,8.904172,2.032860,6.040376,-7.919196,-8.215430,7.278516,-8.181714,4.363172,-6.267889,0.441957,0.135321,-4.587744,-3.802558,1.680662,-0.817737,7.577079,-1.433212,6.065922,4.324401,4.973804,1.429302,6.806578,4.229573,5.171738,-3.223841,6.855853,3.740585,-1.344818,6.686920,-1.357706,9.283322,3.016720,-6.428089,9.847113,1.315359,1.069870,-6.652647,-5.432584,0.091794,3.694221,-1.600885,-8.369238,5.125970,7.249987,-8.476781,-6.781385,-4.346873,8.554893,-3.775521,-0.034066,-6.093010,6.597752,-5.101137,-2.262782,4.009240,-9.822417,-9.843689,-1.619783,9.031633,-6.422473,1.560638,7.733767,-0.465955,-2.066299,-2.339876,-8.338699,-2.986136,0.134943,6.631087,9.976591,9.202375,5.812795,-1.479061,6.056340,2.697385,5.235369,5.445920,-2.659764,-3.033869,-9.505800,0.530720,6.367143,-5.067110,8.453757,-5.206269,0.037927,-7.826858,8.625551,-5.397290,-2.786964,-8.058955,-1.085614,-2.132093,7.764002,2.625480,3.348321,8.937850,-0.435661,8.657960,2.367871,-9.724335,-0.573677,5.637489,6.468570,-5.110355,-7.610414,-9.812150,-3.081582,3.437950,9.660467,-5.513422,-4.352653,5.650087,0.904662,-0.687216,-4.048199,9.673900,9.068690,-4.150742,-4.743469,-6.570782,5.651233,6.184388,8.186009,6.133087,3.790933,-0.660213,6.317585,5.935033,-7.495482,-6.474370,-1.030675,0.374618,-7.571096,9.287172,3.993238,9.108272,-6.755999,-6.336584,-1.540744,-3.018152,5.270778,6.579497,-9.788787,-7.640200,-9.705952,4.635024,-0.949278,-6.077068,-1.488517,-4.304019,3.735936,-0.168262,-6.529275,7.655038,-4.880057,5.523001,-5.208539,3.675581,3.202211,-1.449885,-8.252936,-7.164658,-1.753412,0.866291,-3.156499,-4.086639,-2.440989,3.126398,-8.765730,7.011022,-6.906229,-5.070653,3.442610,6.795802,5.591667,-5.459565,1.009491,7.432031,6.129232,-6.771430,-4.394240,0.351344,7.823147,6.694203,5.017667,8.348569,8.602774,9.136897,3.401078,7.128193,-0.988506,-0.920482,7.113461,7.682150,-1.734409,-5.295504,1.570896,9.976377,7.690643,-1.583262,0.352445,-8.869076,2.344898,3.784919,8.720880,-8.156441,-8.785480,4.989969,-7.168550,-2.536225,4.756872,8.775463,-3.944044,6.986873,1.814493,7.251288,5.832860,-8.934139,7.816237,8.194058,-5.949509,-5.993528,-7.029809,-8.019521,-9.395365,-0.307982,-8.759517,-9.048773,-9.980804,-1.051435,2.763493,8.880448,1.296684,-9.322066,9.781887,8.231372,2.117559,3.150231,-3.898536,-4.543567,-6.504501,-9.467779,-5.566411,-8.199454,-0.013749,-3.846379,-0.932642,7.184118,9.109507,-8.473448,2.558042,0.809960,8.305136,8.290554,-6.085771,-2.222144,-5.629912,3.870121,-3.493333,5.677754,-6.484661,-3.452426,1.048743,0.037291,1.078683,-7.802523,2.561432,6.607653,-3.872534,-6.282964,-0.668086,7.531269,3.982520,2.132815,-8.892620,3.891633,7.918427,8.488853,9.844528,2.560568,-9.277797,2.021613,3.711303,-3.085802,1.265536,6.509830,-2.877953,-5.638220,0.611695,1.416021,6.398958,1.158919,-3.701504,3.803852,2.284682,6.077440,-9.993657,8.379962,5.046755,9.209332,4.366141,7.635669,-4.402192,1.253775,1.000301,0.843692,1.748497,1.169945,-4.506646,9.398776,-9.198046,4.472348,-7.245670,-4.866167,7.312564,-1.849905,-7.229747,-1.238971,-5.513517,0.465311,-1.356782,-4.240117,6.321191,8.952987,-3.013196,0.413874,1.423203,-0.825990,8.705986,-5.475805,-9.845401,8.399809,-7.066593,5.213489,-3.295140,-2.281899,-1.169738,-0.833191,8.118766,7.612107,0.253651,-6.512820,0.521313,-9.710795,8.548738,8.638807,3.611562,7.738058,-5.300134,-6.249529,2.791691,8.550025,2.438157,8.668711,-0.861604,6.323876,6.608748,-4.531131,-9.812623,4.802944,4.898656,8.181056,-6.409596,-1.367275,-7.501281,8.890631,-3.219641,1.198893,-8.724799,-3.317671,7.743112,-7.886863,8.360276,9.076737,8.810936,8.189762,-3.154254,-3.309370,3.765775,7.205447,9.678021,3.549454,-9.433999], dtype = "float64")#candidate|4206|(450,)|const|float64
call_4201 = relay.TupleGetItem(func_2824_call(relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(const_4203.astype('float64'), [120, 2]), relay.reshape(var_4204.astype('float32'), [288,]), relay.reshape(var_4205.astype('float64'), [36, 14]), relay.reshape(const_4206.astype('float64'), [5, 90]), ), 5)
call_4207 = relay.TupleGetItem(func_2832_call(relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(var_4202.astype('uint16'), [15, 4, 11]), relay.reshape(const_4203.astype('float64'), [120, 2]), relay.reshape(var_4204.astype('float32'), [288,]), relay.reshape(var_4205.astype('float64'), [36, 14]), relay.reshape(const_4206.astype('float64'), [5, 90]), ), 5)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4208 = func_2609_call()
call_4209 = func_2609_call()
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_4211 = relay.TupleGetItem(func_1537_call(), 0)
call_4212 = relay.TupleGetItem(func_1538_call(), 0)
output = relay.Tuple([call_4194,call_4201,var_4202,const_4203,var_4204,var_4205,const_4206,call_4208,call_4211,])
output2 = relay.Tuple([call_4195,call_4207,var_4202,const_4203,var_4204,var_4205,const_4206,call_4209,call_4212,])
func_4235 = relay.Function([var_4202,var_4204,var_4205,], output)
mod['func_4235'] = func_4235
mod = relay.transform.InferType()(mod)
var_4236 = relay.var("var_4236", dtype = "uint16", shape = (660,))#candidate|4236|(660,)|var|uint16
var_4237 = relay.var("var_4237", dtype = "float32", shape = (288,))#candidate|4237|(288,)|var|float32
var_4238 = relay.var("var_4238", dtype = "float64", shape = (36, 14))#candidate|4238|(36, 14)|var|float64
output = func_4235(var_4236,var_4237,var_4238,)
func_4239 = relay.Function([var_4236,var_4237,var_4238,], output)
mutated_mod['func_4239'] = func_4239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_4253 = relay.TupleGetItem(func_2715_call(), 0)
call_4254 = relay.TupleGetItem(func_2716_call(), 0)
output = call_4253
output2 = call_4254
func_4260 = relay.Function([], output)
mod['func_4260'] = func_4260
mod = relay.transform.InferType()(mod)
output = func_4260()
func_4261 = relay.Function([], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_4262 = relay.TupleGetItem(func_2715_call(), 0)
call_4263 = relay.TupleGetItem(func_2716_call(), 0)
func_2413_call = mod.get_global_var('func_2413')
func_2414_call = mutated_mod.get_global_var('func_2414')
call_4281 = relay.TupleGetItem(func_2413_call(), 0)
call_4282 = relay.TupleGetItem(func_2414_call(), 0)
func_2657_call = mod.get_global_var('func_2657')
func_2660_call = mutated_mod.get_global_var('func_2660')
const_4291 = relay.const([[False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False]], dtype = "bool")#candidate|4291|(1, 24)|const|bool
const_4292 = relay.const([True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False], dtype = "bool")#candidate|4292|(216,)|const|bool
call_4290 = relay.TupleGetItem(func_2657_call(relay.reshape(const_4291.astype('bool'), [6, 1, 4]), relay.reshape(const_4292.astype('bool'), [6, 9, 4]), ), 0)
call_4293 = relay.TupleGetItem(func_2660_call(relay.reshape(const_4291.astype('bool'), [6, 1, 4]), relay.reshape(const_4292.astype('bool'), [6, 9, 4]), ), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3600_call = mutated_mod.get_global_var('func_3600')
call_4299 = func_3598_call()
call_4300 = func_3598_call()
func_3556_call = mod.get_global_var('func_3556')
func_3558_call = mutated_mod.get_global_var('func_3558')
call_4311 = relay.TupleGetItem(func_3556_call(), 0)
call_4312 = relay.TupleGetItem(func_3558_call(), 0)
output = relay.Tuple([call_4262,call_4281,call_4290,const_4291,const_4292,call_4299,call_4311,])
output2 = relay.Tuple([call_4263,call_4282,call_4293,const_4291,const_4292,call_4300,call_4312,])
func_4313 = relay.Function([], output)
mod['func_4313'] = func_4313
mod = relay.transform.InferType()(mod)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mutated_mod.get_global_var('func_4313')
call_4314 = func_4313_call()
output = call_4314
func_4315 = relay.Function([], output)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_4354 = func_2346_call()
call_4355 = func_2346_call()
func_1907_call = mod.get_global_var('func_1907')
func_1909_call = mutated_mod.get_global_var('func_1909')
var_4357 = relay.var("var_4357", dtype = "float64", shape = (20,))#candidate|4357|(20,)|var|float64
call_4356 = func_1907_call(relay.reshape(var_4357.astype('float64'), [1, 2, 10]))
call_4358 = func_1907_call(relay.reshape(var_4357.astype('float64'), [1, 2, 10]))
func_1907_call = mod.get_global_var('func_1907')
func_1909_call = mutated_mod.get_global_var('func_1909')
call_4371 = func_1907_call(relay.reshape(call_4356.astype('float64'), [1, 2, 10]))
call_4372 = func_1907_call(relay.reshape(call_4356.astype('float64'), [1, 2, 10]))
bop_4378 = relay.maximum(call_4356.astype('int32'), relay.reshape(call_4371.astype('int32'), relay.shape_of(call_4356))) # shape=(1, 2, 10)
bop_4381 = relay.maximum(call_4358.astype('int32'), relay.reshape(call_4372.astype('int32'), relay.shape_of(call_4358))) # shape=(1, 2, 10)
output = relay.Tuple([call_4354,var_4357,bop_4378,])
output2 = relay.Tuple([call_4355,var_4357,bop_4381,])
func_4389 = relay.Function([var_4357,], output)
mod['func_4389'] = func_4389
mod = relay.transform.InferType()(mod)
var_4390 = relay.var("var_4390", dtype = "float64", shape = (20,))#candidate|4390|(20,)|var|float64
output = func_4389(var_4390)
func_4391 = relay.Function([var_4390], output)
mutated_mod['func_4391'] = func_4391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_4465 = relay.TupleGetItem(func_2067_call(), 0)
call_4466 = relay.TupleGetItem(func_2069_call(), 0)
output = relay.Tuple([call_4465,])
output2 = relay.Tuple([call_4466,])
func_4490 = relay.Function([], output)
mod['func_4490'] = func_4490
mod = relay.transform.InferType()(mod)
output = func_4490()
func_4491 = relay.Function([], output)
mutated_mod['func_4491'] = func_4491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_4511 = func_3054_call()
call_4512 = func_3054_call()
uop_4529 = relay.acosh(call_4511.astype('float32')) # shape=(6, 7, 7)
uop_4531 = relay.acosh(call_4512.astype('float32')) # shape=(6, 7, 7)
uop_4533 = relay.sigmoid(uop_4529.astype('float32')) # shape=(6, 7, 7)
uop_4535 = relay.sigmoid(uop_4531.astype('float32')) # shape=(6, 7, 7)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4540 = relay.TupleGetItem(func_1798_call(), 0)
call_4541 = relay.TupleGetItem(func_1800_call(), 0)
uop_4543 = relay.atanh(uop_4533.astype('float32')) # shape=(6, 7, 7)
uop_4545 = relay.atanh(uop_4535.astype('float32')) # shape=(6, 7, 7)
output = relay.Tuple([call_4540,uop_4543,])
output2 = relay.Tuple([call_4541,uop_4545,])
func_4568 = relay.Function([], output)
mod['func_4568'] = func_4568
mod = relay.transform.InferType()(mod)
output = func_4568()
func_4569 = relay.Function([], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4601 = relay.const([[[-7.375846,8.016006,-1.792402,7.586406,-3.932244,9.033683,-1.061174,8.551710,-6.156959,-7.781452,2.510747],[6.018235,-9.612082,1.750499,-5.084659,-9.434700,-7.065152,5.674021,3.985168,9.853063,1.628782,7.204621],[-2.069308,-8.052418,-1.366926,-6.827586,6.529853,3.278505,-9.338395,1.984741,7.906596,-7.022734,8.252430],[-6.084722,-0.165360,-8.430009,-4.480110,6.539083,3.954509,4.302268,-5.995488,0.949759,-7.087239,-9.529828],[3.454431,7.088144,3.891946,-8.171178,2.209645,6.429658,-0.961002,8.682716,3.309813,2.400048,6.726216],[-4.123399,6.544511,5.364136,3.792096,-0.296595,-2.806547,3.019502,0.930806,-7.472822,3.794152,3.259095],[-5.140640,-0.362307,8.335453,-3.971249,9.814724,7.013710,-2.392538,-8.661148,-2.944938,-8.927886,-7.439197],[-0.268542,7.923458,-0.068148,-6.271421,-5.389806,-7.363666,-9.466360,9.098823,-8.411541,7.067802,7.081991],[6.548258,4.412534,-4.897435,-4.974691,-1.334491,6.140919,4.468448,-0.426777,2.869999,-9.593220,7.555328],[7.459918,2.425966,3.082587,4.944512,-3.116162,-2.189378,-6.420252,3.215050,6.315605,7.535959,0.500110],[-9.182555,-0.939555,4.235462,-2.380425,9.670518,6.212359,1.618204,-6.124486,4.975846,0.340344,-6.979985]],[[-4.131558,-7.455966,9.373526,-4.798900,5.713119,-4.933877,-1.537381,-6.021084,9.588058,5.093243,7.808843],[2.434438,6.604074,-5.986713,0.616530,5.939589,7.081925,8.799351,8.811866,8.071852,8.181592,4.845939],[7.567536,-7.104740,1.563890,6.774208,-7.558019,-6.139774,6.839644,8.416210,-9.786103,5.266688,-6.396101],[-1.534197,-7.283305,-0.718601,-6.438455,-4.012365,-5.005133,-6.434870,-9.943715,-3.866920,-6.638109,-2.122778],[8.427381,-7.367720,-6.766494,4.740382,0.435498,0.444835,-3.796916,3.445899,6.942493,-8.450936,-7.631969],[4.462958,7.682774,3.856118,4.415515,5.281227,0.693339,-7.314647,9.792581,2.645630,9.661949,4.384105],[-3.419666,-6.934012,-1.345446,8.573239,4.458251,5.199513,-6.608513,1.068417,-0.048817,6.024952,-4.046829],[-6.511278,6.009843,-1.075334,-4.667290,-5.092062,-9.227267,-1.860656,-4.491896,1.253628,-4.425554,-2.610417],[-3.516778,-2.965910,-7.328632,-8.819861,4.761067,0.490713,-8.067946,-2.813650,3.327724,-4.035459,8.684600],[-7.448689,-0.515259,-0.613780,-4.144949,-5.361021,-3.406178,4.325547,-4.274885,0.467928,-2.399334,-3.073102],[7.086138,1.312499,-6.439955,-8.286629,-6.195198,4.683074,9.487529,-1.721394,-9.312701,-3.960532,7.021832]]], dtype = "float64")#candidate|4601|(2, 11, 11)|const|float64
uop_4602 = relay.acos(const_4601.astype('float64')) # shape=(2, 11, 11)
output = relay.Tuple([uop_4602,])
output2 = relay.Tuple([uop_4602,])
func_4608 = relay.Function([], output)
mod['func_4608'] = func_4608
mod = relay.transform.InferType()(mod)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mutated_mod.get_global_var('func_4608')
call_4609 = func_4608_call()
output = call_4609
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_4634 = relay.TupleGetItem(func_3046_call(), 0)
call_4635 = relay.TupleGetItem(func_3048_call(), 0)
output = call_4634
output2 = call_4635
func_4638 = relay.Function([], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
output = func_4638()
func_4639 = relay.Function([], output)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_4660 = relay.TupleGetItem(func_1798_call(), 0)
call_4661 = relay.TupleGetItem(func_1800_call(), 0)
output = call_4660
output2 = call_4661
func_4670 = relay.Function([], output)
mod['func_4670'] = func_4670
mod = relay.transform.InferType()(mod)
output = func_4670()
func_4671 = relay.Function([], output)
mutated_mod['func_4671'] = func_4671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_4704 = func_2609_call()
call_4705 = func_2609_call()
output = relay.Tuple([call_4704,])
output2 = relay.Tuple([call_4705,])
func_4711 = relay.Function([], output)
mod['func_4711'] = func_4711
mod = relay.transform.InferType()(mod)
mutated_mod['func_4711'] = func_4711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4711_call = mutated_mod.get_global_var('func_4711')
call_4712 = func_4711_call()
output = call_4712
func_4713 = relay.Function([], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4568_call = mod.get_global_var('func_4568')
func_4569_call = mutated_mod.get_global_var('func_4569')
call_4722 = relay.TupleGetItem(func_4568_call(), 1)
call_4723 = relay.TupleGetItem(func_4569_call(), 1)
func_1907_call = mod.get_global_var('func_1907')
func_1909_call = mutated_mod.get_global_var('func_1909')
const_4731 = relay.const([3.889619,-8.256668,3.808073,6.687020,-7.202904,7.714008,9.809650,4.604530,-1.629946,-4.593224,-1.425979,6.033034,8.402838,-1.721920,5.247623,-3.647882,6.926785,-9.268103,-1.724094,-6.003288], dtype = "float64")#candidate|4731|(20,)|const|float64
call_4730 = func_1907_call(relay.reshape(const_4731.astype('float64'), [1, 2, 10]))
call_4732 = func_1907_call(relay.reshape(const_4731.astype('float64'), [1, 2, 10]))
func_3885_call = mod.get_global_var('func_3885')
func_3888_call = mutated_mod.get_global_var('func_3888')
call_4734 = relay.TupleGetItem(func_3885_call(relay.reshape(call_4722.astype('bool'), [6, 7, 7])), 1)
call_4735 = relay.TupleGetItem(func_3888_call(relay.reshape(call_4722.astype('bool'), [6, 7, 7])), 1)
output = relay.Tuple([call_4722,call_4730,const_4731,call_4734,])
output2 = relay.Tuple([call_4723,call_4732,const_4731,call_4735,])
func_4739 = relay.Function([], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
output = func_4739()
func_4740 = relay.Function([], output)
mutated_mod['func_4740'] = func_4740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4260_call = mod.get_global_var('func_4260')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4760 = func_4260_call()
call_4761 = func_4260_call()
output = call_4760
output2 = call_4761
func_4762 = relay.Function([], output)
mod['func_4762'] = func_4762
mod = relay.transform.InferType()(mod)
mutated_mod['func_4762'] = func_4762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4762_call = mutated_mod.get_global_var('func_4762')
call_4763 = func_4762_call()
output = call_4763
func_4764 = relay.Function([], output)
mutated_mod['func_4764'] = func_4764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4808 = relay.TupleGetItem(func_3749_call(), 0)
call_4809 = relay.TupleGetItem(func_3751_call(), 0)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_4826 = relay.TupleGetItem(func_1407_call(), 1)
call_4827 = relay.TupleGetItem(func_1408_call(), 1)
output = relay.Tuple([call_4808,call_4826,])
output2 = relay.Tuple([call_4809,call_4827,])
func_4851 = relay.Function([], output)
mod['func_4851'] = func_4851
mod = relay.transform.InferType()(mod)
output = func_4851()
func_4852 = relay.Function([], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_4905 = func_4670_call()
call_4906 = func_4670_call()
func_3118_call = mod.get_global_var('func_3118')
func_3119_call = mutated_mod.get_global_var('func_3119')
call_4920 = relay.TupleGetItem(func_3118_call(), 1)
call_4921 = relay.TupleGetItem(func_3119_call(), 1)
output = relay.Tuple([call_4905,call_4920,])
output2 = relay.Tuple([call_4906,call_4921,])
func_4928 = relay.Function([], output)
mod['func_4928'] = func_4928
mod = relay.transform.InferType()(mod)
mutated_mod['func_4928'] = func_4928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4928_call = mutated_mod.get_global_var('func_4928')
call_4929 = func_4928_call()
output = call_4929
func_4930 = relay.Function([], output)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4087_call = mod.get_global_var('func_4087')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_4942 = relay.TupleGetItem(func_4087_call(), 2)
call_4943 = relay.TupleGetItem(func_4088_call(), 2)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
call_4975 = relay.TupleGetItem(func_2323_call(), 1)
call_4976 = relay.TupleGetItem(func_2325_call(), 1)
uop_4981 = relay.erf(call_4975.astype('float64')) # shape=(240, 1)
uop_4983 = relay.erf(call_4976.astype('float64')) # shape=(240, 1)
bop_4994 = relay.divide(uop_4981.astype('float32'), relay.reshape(call_4975.astype('float32'), relay.shape_of(uop_4981))) # shape=(240, 1)
bop_4997 = relay.divide(uop_4983.astype('float32'), relay.reshape(call_4976.astype('float32'), relay.shape_of(uop_4983))) # shape=(240, 1)
output = relay.Tuple([call_4942,bop_4994,])
output2 = relay.Tuple([call_4943,bop_4997,])
func_5003 = relay.Function([], output)
mod['func_5003'] = func_5003
mod = relay.transform.InferType()(mod)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5003_call = mutated_mod.get_global_var('func_5003')
call_5004 = func_5003_call()
output = call_5004
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5019 = relay.var("var_5019", dtype = "float64", shape = (9, 12, 3))#candidate|5019|(9, 12, 3)|var|float64
var_5020 = relay.var("var_5020", dtype = "float64", shape = (9, 12, 3))#candidate|5020|(9, 12, 3)|var|float64
bop_5021 = relay.divide(var_5019.astype('float64'), relay.reshape(var_5020.astype('float64'), relay.shape_of(var_5019))) # shape=(9, 12, 3)
output = relay.Tuple([bop_5021,])
output2 = relay.Tuple([bop_5021,])
func_5029 = relay.Function([var_5019,var_5020,], output)
mod['func_5029'] = func_5029
mod = relay.transform.InferType()(mod)
var_5030 = relay.var("var_5030", dtype = "float64", shape = (9, 12, 3))#candidate|5030|(9, 12, 3)|var|float64
var_5031 = relay.var("var_5031", dtype = "float64", shape = (9, 12, 3))#candidate|5031|(9, 12, 3)|var|float64
output = func_5029(var_5030,var_5031,)
func_5032 = relay.Function([var_5030,var_5031,], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5037 = relay.var("var_5037", dtype = "float64", shape = (1, 8, 10))#candidate|5037|(1, 8, 10)|var|float64
var_5038 = relay.var("var_5038", dtype = "float64", shape = (8, 8, 10))#candidate|5038|(8, 8, 10)|var|float64
bop_5039 = relay.not_equal(var_5037.astype('bool'), var_5038.astype('bool')) # shape=(8, 8, 10)
uop_5043 = relay.log10(var_5038.astype('float32')) # shape=(8, 8, 10)
output = relay.Tuple([bop_5039,uop_5043,])
output2 = relay.Tuple([bop_5039,uop_5043,])
func_5049 = relay.Function([var_5037,var_5038,], output)
mod['func_5049'] = func_5049
mod = relay.transform.InferType()(mod)
var_5050 = relay.var("var_5050", dtype = "float64", shape = (1, 8, 10))#candidate|5050|(1, 8, 10)|var|float64
var_5051 = relay.var("var_5051", dtype = "float64", shape = (8, 8, 10))#candidate|5051|(8, 8, 10)|var|float64
output = func_5049(var_5050,var_5051,)
func_5052 = relay.Function([var_5050,var_5051,], output)
mutated_mod['func_5052'] = func_5052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2346_call = mod.get_global_var('func_2346')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_5109 = func_2346_call()
call_5110 = func_2346_call()
func_4711_call = mod.get_global_var('func_4711')
func_4713_call = mutated_mod.get_global_var('func_4713')
call_5115 = relay.TupleGetItem(func_4711_call(), 0)
call_5116 = relay.TupleGetItem(func_4713_call(), 0)
output = relay.Tuple([call_5109,call_5115,])
output2 = relay.Tuple([call_5110,call_5116,])
func_5124 = relay.Function([], output)
mod['func_5124'] = func_5124
mod = relay.transform.InferType()(mod)
mutated_mod['func_5124'] = func_5124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5124_call = mutated_mod.get_global_var('func_5124')
call_5125 = func_5124_call()
output = call_5125
func_5126 = relay.Function([], output)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2447_call = mod.get_global_var('func_2447')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_5154 = relay.TupleGetItem(func_2447_call(), 0)
call_5155 = relay.TupleGetItem(func_2448_call(), 0)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_5163 = relay.TupleGetItem(func_2715_call(), 0)
call_5164 = relay.TupleGetItem(func_2716_call(), 0)
func_2609_call = mod.get_global_var('func_2609')
func_2611_call = mutated_mod.get_global_var('func_2611')
call_5173 = func_2609_call()
call_5174 = func_2609_call()
func_5124_call = mod.get_global_var('func_5124')
func_5126_call = mutated_mod.get_global_var('func_5126')
call_5182 = relay.TupleGetItem(func_5124_call(), 1)
call_5183 = relay.TupleGetItem(func_5126_call(), 1)
output = relay.Tuple([call_5154,call_5163,call_5173,call_5182,])
output2 = relay.Tuple([call_5155,call_5164,call_5174,call_5183,])
func_5185 = relay.Function([], output)
mod['func_5185'] = func_5185
mod = relay.transform.InferType()(mod)
output = func_5185()
func_5186 = relay.Function([], output)
mutated_mod['func_5186'] = func_5186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_5216 = func_4160_call()
call_5217 = func_4160_call()
const_5226 = relay.const([[-2.591303,-2.707586,2.914270,-7.573140,7.951514,-3.222296,1.504259,-8.893833,-8.853315,-1.196223,9.842991],[4.034859,-1.844394,8.890879,-4.771614,0.644670,5.371309,5.219445,-7.203197,6.561694,6.537226,-8.053802],[-3.923826,-0.729333,-2.852061,9.090257,0.517939,1.939384,-0.574110,1.130055,-2.840510,-3.349849,2.050434],[-0.632362,4.821147,0.257934,1.794402,7.732148,-1.642498,2.779528,5.552303,9.927627,3.353517,-7.708658],[9.914633,-1.432922,9.725205,-8.925518,-6.202968,-1.026737,-8.363255,-5.098446,4.554024,-6.792404,-4.640603],[-7.314554,-0.373971,-1.911587,-1.852089,1.535227,-9.179947,1.083293,-7.023880,-5.694118,-0.817994,9.687901],[-4.249795,0.500612,7.050273,-8.206218,3.025464,7.067466,-7.408670,6.112054,6.924242,-1.025715,-4.260891],[9.152999,8.788526,3.433877,-1.115308,8.141632,5.947492,-6.365781,-7.754514,-4.633327,4.073534,3.030347],[2.264716,-4.275533,9.092353,-1.277747,1.581542,3.004878,-2.698620,-4.911960,5.706969,2.428122,-4.869143],[3.486237,-0.224666,-2.450958,-2.452713,0.515223,-7.667398,-6.757281,3.823697,5.424436,-6.729248,4.945154],[-7.435568,7.972347,6.584670,-6.573388,-1.302232,-3.201193,0.987806,-4.118350,-5.652331,6.540847,9.707289],[4.039045,-5.279981,9.764502,2.197926,3.234384,3.764647,6.469911,-3.743531,-1.106934,4.747103,6.658810],[-1.147812,-8.788069,-7.844686,4.233379,4.467032,-9.348160,-5.999830,-3.496910,-4.903821,0.644259,-5.017309],[1.324505,-2.066351,3.180802,-7.054438,-0.003575,-7.746650,-3.831680,-8.302178,7.359919,-3.221125,3.953640],[2.281854,-9.034570,-1.024001,6.535674,-6.329525,3.664289,8.507269,-7.091721,3.765674,-6.401698,-8.175776],[-5.634697,-6.338310,-2.176104,8.266062,0.682022,-8.026885,0.761242,1.039034,2.419064,6.991441,-8.817583],[-6.615757,-1.932092,1.648094,6.058931,4.036783,-8.119815,5.734932,-1.060877,1.553327,-3.444917,8.122663],[-1.095787,-1.479389,-2.549430,-6.323830,-3.115961,-6.458442,-6.567619,7.091695,4.792829,-0.075739,8.941723],[-0.822956,-2.892371,5.374256,6.449768,-1.812876,-6.685584,-4.010429,-1.824747,5.505808,2.267493,-9.977947],[-5.319012,5.395245,-2.879109,8.272798,-6.405383,-9.178681,7.313921,2.034622,-4.117707,-4.686875,-1.232408],[-4.153249,5.183970,-9.667507,6.123577,9.098284,-3.835284,6.121626,-0.477854,-7.815732,-7.074021,8.134659],[7.643654,9.287927,6.189346,-0.285793,-0.938589,-4.996189,-0.041114,-4.672733,3.816893,1.859524,-6.960890],[2.945693,-0.881756,2.603189,-4.616293,-3.100274,7.059025,1.563162,-5.551920,9.002082,-1.910383,-6.291652],[-3.889739,-0.270110,-3.764788,8.697538,-7.568067,2.242662,2.645049,-6.710111,-3.045786,7.185970,-4.764216],[-2.797488,-3.565968,9.607267,1.892893,8.828060,-6.138466,-5.941640,-2.419834,3.714616,-4.684290,9.169933],[-1.546609,4.908865,-6.054852,-4.127891,8.839752,3.736228,-3.620686,5.611438,9.570610,3.318264,-9.847651],[-0.253936,-9.914040,-3.730613,3.940383,-4.212592,4.479347,-1.469212,-6.540407,-4.068277,6.903331,8.317395],[-7.691341,1.852778,2.639551,9.400562,-1.961435,-7.875572,4.514610,2.334582,-1.116003,-0.661947,5.531185],[-5.945056,-2.828078,-8.716123,-4.247040,5.049265,-9.640566,-0.997746,-9.897136,4.671353,-2.860100,4.019387],[-1.741226,-4.679566,-2.033186,-8.623834,3.475890,2.607489,3.008022,6.522148,6.215426,-0.553839,2.488085],[8.502665,-1.372562,4.155748,8.554293,2.381236,9.348821,-2.116177,-2.008339,-5.705820,0.876996,0.363160],[1.703842,2.602528,-6.893028,-5.946637,-5.475203,1.048586,-5.211681,2.866653,5.098737,-8.460619,-1.541019],[-6.283293,0.181637,-4.545995,-9.019899,-6.006145,-3.346592,-1.051612,1.805374,5.094203,-9.262305,9.885089],[6.659613,-7.163254,4.396978,7.780543,-3.624292,-0.218369,-6.801056,-4.735408,7.775481,-2.230276,-0.485500],[-9.980879,9.740642,-7.251040,-9.717950,3.939240,-6.029163,-4.139681,-1.347461,-2.371428,3.378056,-9.159842],[3.583065,-1.703322,6.188293,8.060940,9.035284,-7.296689,2.638935,-1.772579,-4.705674,4.645447,-3.306198],[-9.409900,9.889060,3.065052,6.500132,3.492661,-8.084105,0.497715,-7.897885,-0.503224,-6.899931,9.287696],[1.526382,2.323795,2.113894,-0.332264,-4.606956,-3.072539,4.631107,-0.962004,4.074403,-8.619128,9.868891],[-5.775921,-4.762904,3.703881,1.079088,-5.429885,1.639408,-2.548021,-8.646864,-1.468520,5.311337,-2.835980],[-5.336887,5.983834,-4.288095,4.318792,-3.640669,-3.403719,-4.893940,1.714333,-6.037461,-3.049845,-8.826452],[-3.482099,-4.795879,8.221164,0.147232,-2.038113,5.087713,9.722492,8.909967,7.736424,-8.125443,-6.042885],[-9.876398,-3.214068,6.638769,-4.149473,2.433199,-6.235840,1.480395,1.182373,-3.256717,-2.927292,-5.862315],[0.243278,-1.809934,5.899033,-9.192471,-0.924065,9.586256,5.714893,4.350136,-1.064770,-8.270244,-4.092484],[8.849113,-4.952077,-5.218115,5.079434,8.402875,-1.500232,8.783285,-5.661688,-8.114590,-2.178126,-9.687232],[-7.785437,1.967702,-1.057533,-5.281180,1.759107,0.406102,7.345662,-5.416271,-5.025477,1.478141,-9.554457],[-7.944791,3.160032,4.134995,-6.461909,9.398331,6.261964,-6.937071,9.573610,5.873710,-5.510818,-1.798142],[-0.428070,-0.284046,-5.096882,8.873480,-3.037311,-6.793942,-4.049028,-4.257267,5.121554,-3.142885,-0.250155],[-8.042347,5.284055,8.613491,-3.661806,1.640491,-4.918521,0.817805,1.971650,6.518207,-2.356574,8.502054],[9.317832,-8.504739,-3.608664,-4.426456,0.584202,-8.931295,-8.723241,-1.754628,7.704342,7.832695,1.004676],[9.914871,5.790847,-5.765893,-5.400579,8.144307,4.450247,-1.804218,-6.888873,9.167169,5.511830,-4.618137],[0.232478,0.731878,-5.832120,-2.105176,7.904383,-9.869115,8.857136,5.198616,3.131779,7.429785,-4.143147],[-0.617309,-5.366418,-5.898296,7.215504,1.512852,5.732806,1.918539,0.766809,4.316779,1.788963,-0.111455],[-1.580095,-1.696174,-7.675008,6.779302,4.156185,4.273918,9.751610,-2.423802,-1.852426,7.390560,-4.437159],[5.502869,-1.836181,-6.441593,-5.328884,-3.240482,-1.688303,-9.390260,8.591834,0.867762,8.930330,-8.436821],[-2.581148,6.882983,7.896015,-8.871964,-2.738266,1.789211,-8.947955,-9.562266,-4.789349,-6.646192,-2.673013],[2.508305,-2.189961,-0.919936,3.903190,-7.749353,7.749176,-4.989682,-5.363266,-0.894973,-9.394489,1.694548],[-6.463773,-3.104458,3.747964,0.983765,7.486014,1.719439,-3.993873,-4.659482,-5.755453,7.250434,-2.835320],[-2.173640,5.324950,8.860360,3.829256,-8.834178,9.408116,-6.791725,0.240834,-0.602291,6.407939,-6.711824],[6.691174,1.275367,3.784568,-7.229989,8.419990,-9.085802,7.743467,-4.512606,0.370166,-9.565659,6.481776],[2.751225,3.240927,-3.283290,9.304363,-1.961900,3.122323,-4.195799,-6.848164,-3.354579,-5.906623,-8.661962],[3.961508,-4.775579,-9.772974,0.551774,9.289691,-8.350207,-5.525870,3.930809,-4.561877,-0.914145,-1.407792],[-1.041315,3.615964,-7.079852,-8.445570,-9.655629,5.245141,-8.510810,5.296277,-8.671300,-8.661857,3.940278],[4.288121,-8.808834,-9.068461,1.634985,8.958898,-7.119983,-1.240282,-2.527175,8.898201,-8.766286,7.314404],[-5.435118,-5.269999,-0.419795,-1.160630,7.621702,-2.931909,0.600374,2.675459,4.659384,-4.289091,3.732762],[-7.998854,3.033554,-7.848911,5.092473,-9.583522,3.642730,-8.798904,2.937017,1.716604,-6.913120,-4.073040],[2.601471,-3.973936,3.742356,-0.815025,5.365908,-3.659002,-0.136816,7.218517,6.015839,-3.262658,-0.417071],[-0.736769,7.669479,4.586177,9.416420,3.462780,6.195484,-7.748298,-0.475418,7.274700,1.313589,3.667227],[0.608225,1.070122,-8.127525,4.788672,-9.417329,9.855552,1.664129,4.266419,-9.308064,7.505905,-2.466257],[-3.063565,-7.103585,5.663020,-1.310455,-1.503637,7.559124,-1.346515,4.858178,-1.951923,5.555297,5.526614],[-5.209261,0.417052,0.491586,-1.642090,-1.067732,-9.919485,0.034714,3.469647,-6.248857,6.849738,7.066064],[-5.071083,8.699868,9.791698,-0.178382,8.030182,7.708073,9.401958,-8.723558,3.679109,5.651112,8.101374],[5.306414,-5.030396,-0.251127,1.672399,4.185366,-1.276546,-7.801430,9.082926,-3.799992,-9.208741,2.549176],[-9.026992,0.553334,2.861302,-9.570589,7.981793,8.485572,1.075070,9.365154,9.796860,-3.341368,8.964406],[2.461644,8.916755,-9.002940,-8.909039,-7.263479,2.437696,-9.551384,-4.217299,6.416900,-1.817419,9.492703],[8.510037,-5.556975,3.197843,-7.840762,0.079438,4.918166,-2.332360,-1.462910,3.978675,5.178516,9.196414],[5.560411,-6.835054,3.690303,5.754178,5.803106,-2.720570,-8.660089,-3.108608,-8.528615,-3.853652,9.167026],[5.664947,9.929192,-2.756340,9.148787,-8.035181,4.310874,-8.073993,0.358009,5.186600,-2.646378,-1.232172],[7.691320,5.673436,4.688102,5.199834,-8.084384,-1.670584,9.064863,2.072438,-2.517250,-0.942775,-9.278746],[9.284810,-2.318423,-6.364459,-5.246689,8.437231,-3.154525,4.150010,9.752307,-2.555473,-4.019060,4.974488],[5.319642,-5.720997,2.519246,9.588128,8.345080,3.348566,3.294914,-1.904752,5.582420,5.565210,6.072441],[1.176910,7.385315,-7.956167,-3.619217,7.544285,-3.621477,-8.388555,-0.787910,-9.449939,-9.246203,-4.376573],[8.481428,6.336988,-8.120230,-9.063180,7.599721,-6.637936,2.131910,-0.781951,3.837837,0.242929,-4.149065],[4.448133,0.412918,-0.057686,5.497364,4.070311,-3.882438,6.850942,3.300900,-3.245261,4.415504,6.933362],[9.296895,0.515214,-1.024727,8.109849,-1.635303,5.764337,-1.054013,2.302303,-3.393126,-9.284036,3.874625],[-7.742999,-0.972756,4.120253,6.358767,-7.727460,5.405473,9.234970,4.492547,-1.078027,8.271587,8.546896],[7.710237,-5.310874,-5.709582,-1.516439,-5.014783,-1.789302,2.566007,2.607645,2.037693,-4.851074,1.124406],[-6.687788,-8.560821,-6.943716,-5.397080,3.512609,-9.857159,-2.094676,-3.955748,-6.998226,6.017824,2.922242],[-7.422102,3.153409,4.769686,-9.296912,-6.630819,5.471061,0.585709,-0.316128,9.251536,-7.403059,0.531957],[-0.975130,0.001552,8.773722,-2.302952,-5.259400,3.800071,-9.843595,1.676566,0.855800,2.877926,-8.328175],[-7.297475,-4.457684,-9.868671,0.208633,7.301203,2.161043,-2.900710,7.226023,-8.791265,3.273180,-1.818367],[-6.088608,0.734471,7.354500,-2.939121,6.135528,-0.006264,-6.489112,-7.744991,3.271651,-1.645967,4.927713],[4.237457,0.167265,-0.763917,3.408185,-3.694351,-6.208389,1.689302,-3.840328,2.876420,-9.047855,1.152868],[-8.421783,-7.019375,-1.455693,-5.895864,1.641295,-0.377718,5.084243,1.282121,0.129384,-9.308768,2.057812],[2.375808,6.743344,-1.293076,6.700428,2.648018,7.704370,2.889316,-3.824021,1.068822,9.715929,-7.533268],[-7.984812,0.039674,3.770025,8.020165,7.047922,-8.541749,5.263989,-4.609664,-7.650027,-4.220474,4.862477],[9.236852,-7.565583,4.854214,9.352331,-0.325100,2.257704,0.062983,-5.758997,-9.000955,-0.728105,-6.907575],[5.451981,-1.783279,-4.835532,2.214073,-9.148221,6.379895,-8.739133,-0.012605,-9.773148,1.552146,-6.979912],[-8.797727,-4.467914,-3.825448,2.808238,-1.565119,8.984684,5.582304,-7.192155,6.331047,2.317439,1.552858],[9.391701,1.006704,-5.023241,8.354516,-3.378725,2.453971,-6.199239,4.503402,1.648230,-7.320837,-7.680373],[-0.061633,6.102569,5.575706,5.032461,-3.076142,-1.526794,-4.934104,-5.090504,4.414552,-4.882672,6.888437],[-6.912132,-2.293220,4.076487,-6.535994,-4.357921,-0.437311,-8.156705,3.061158,-7.205182,-9.019029,6.940431],[3.836861,-7.278811,-9.499205,-3.486027,-4.381136,-8.091051,-6.367019,1.863025,7.419586,1.274425,9.193753],[9.138293,0.053985,-8.554258,-4.623762,1.366946,-3.797267,-4.710232,-7.506881,-9.007464,5.888248,7.207368],[-1.053298,-9.822662,1.367237,5.486659,3.620280,4.154333,-5.455543,-7.067486,4.577607,4.092428,-7.810521],[4.755713,-9.589357,3.449492,-4.349518,2.607450,4.484079,7.446028,0.013438,-5.407844,0.518562,-3.029290],[6.841210,0.306766,-4.948706,-3.979817,-6.095983,4.909524,-1.963092,7.694298,3.058086,2.953808,-9.464373],[5.018482,-8.093735,2.485372,3.720637,0.658251,-9.535946,-4.820757,7.546185,5.938158,-4.613097,-9.093634],[1.664418,6.353248,-8.607434,-9.951072,2.060452,0.670488,8.861507,-0.361018,-2.210941,5.995471,-5.834604],[3.854434,8.280397,9.285898,9.306329,-8.813667,2.535524,1.058380,-9.677292,8.398746,-9.871266,0.475628],[4.576720,-8.887928,-8.831780,-3.691877,9.635434,-0.103250,2.186880,-4.277704,-1.517734,7.104513,1.297622],[7.107699,-7.596735,9.150360,4.659279,-7.541568,-8.860617,-1.003514,6.823868,9.765842,-6.609471,4.588581],[-7.469962,-3.729156,-5.909906,-6.391319,1.745283,7.938732,-3.214193,-3.036490,-9.788430,-0.133707,2.317101],[0.642242,-5.904021,-4.341702,-1.691425,-1.607087,6.170655,8.532952,-9.638059,9.135910,-7.055226,-3.302664],[-9.073247,-9.259381,6.363987,9.830864,-4.696375,7.091774,-9.582186,5.644752,9.227998,7.736877,5.300268],[-1.574284,-9.975709,2.066139,6.921054,-2.739412,-1.185374,-4.182042,0.826574,-5.634807,-5.680006,-0.303053],[2.126106,8.722243,5.698363,-5.339303,-3.462289,3.618696,-0.203393,6.661186,-7.826941,5.967461,-7.576685],[-8.076671,-5.161043,3.324384,7.007427,9.766081,-4.488481,7.437573,9.529805,-6.699292,8.391435,-1.615267],[-7.605352,4.151333,8.220555,0.618300,-6.641331,-2.019905,-5.662624,5.407963,6.121907,7.268444,6.674505],[-5.668119,-8.705893,-0.202581,-7.788295,3.289657,-4.945008,6.808258,-0.582844,-6.231661,-4.875563,1.343453],[-8.410533,-7.952900,7.714556,1.664667,0.456683,7.169165,-2.775866,4.689656,-3.673659,7.437888,9.387342],[6.946700,9.653308,-8.286647,-7.842697,7.223148,-8.513036,-2.998449,1.097857,-5.816321,6.131048,-5.297291],[-3.334613,-5.566311,-0.698502,2.003336,-8.072557,7.039837,-0.044664,-3.967891,0.875097,-3.977314,7.660936],[6.001516,-2.950042,3.598048,4.382723,-0.763959,4.096082,5.488529,-3.189572,9.375831,4.948037,0.859389],[-8.305182,-5.662452,7.426065,6.199095,1.333188,1.712582,7.622235,-7.061590,-4.559942,-5.974585,2.947522],[2.995729,-9.601045,2.684913,-5.783087,-9.742007,-8.275528,-8.136156,1.111018,-5.770164,1.916432,-6.461276],[6.530142,2.801978,8.924415,1.924767,8.855930,2.424184,-4.407618,9.672997,7.549408,1.792612,-4.765942],[8.670442,-0.830953,4.977013,0.927771,-8.033422,-3.801299,-1.097363,8.753095,-5.562027,-9.673780,-6.322965],[-0.091856,2.115591,6.961885,9.359745,8.264560,8.797377,7.593454,9.345829,6.745835,3.509846,1.335695],[9.673586,5.423577,-0.589748,7.310915,-1.192122,-2.464484,5.946695,5.675085,-6.172767,8.943733,-9.633267],[-3.759820,4.679914,3.668020,9.293723,-1.904509,1.293465,-8.847546,-1.055502,-0.395329,-5.328266,-2.308581],[6.420161,-7.836729,-3.613239,5.663037,-7.143716,-5.453385,8.888634,-5.486299,3.192756,-6.319726,6.585718],[-3.746580,-3.687671,-0.665503,1.714621,3.632386,-0.396995,-2.209811,8.274302,2.598676,4.172132,-9.475491],[2.393280,2.715319,7.591672,0.123942,3.837396,-6.992533,5.653751,-4.202788,-8.989943,2.680363,6.962312],[4.689932,6.259914,8.508414,5.556506,-7.699798,-4.323656,8.072806,5.653290,-9.889236,-0.662322,-5.556733],[-6.671827,-9.521777,-3.353185,9.792382,-0.221353,5.345062,-6.420516,-8.491491,-8.078656,-8.631045,1.068544],[-2.197309,5.780318,2.302849,-9.941737,6.918322,-3.378172,2.062354,5.119330,-2.324091,3.205879,1.759123],[-1.285418,4.500298,-3.654203,-8.646490,1.481005,-7.755760,8.642529,-8.999849,-1.478813,-1.759491,-8.117428],[8.041700,1.334846,7.093961,4.080446,-3.864634,-0.063312,-8.605774,1.135406,-1.059594,-8.032971,4.181653],[-7.029683,1.187532,1.362807,3.903672,0.505680,4.018674,0.074973,8.164615,-7.770628,-2.736339,-8.188478],[1.231222,2.877461,-9.584878,4.045947,-4.768788,-8.848644,-2.016354,8.332914,6.771007,-9.239300,9.576385],[3.274340,1.298264,-4.743191,-0.316150,-7.405697,6.621433,-5.727098,5.714669,5.870948,5.785466,8.112373],[-5.677645,-7.482924,5.247939,-0.859298,-7.346055,-7.238726,3.541834,9.023125,9.247507,-6.132117,-1.733061],[-9.638119,-4.810087,7.875054,7.487877,0.857115,5.659320,0.705358,-9.947616,-3.161204,4.768110,-8.674498],[1.523576,6.462410,-2.952546,3.523563,-8.223918,-1.391708,-8.721795,-1.671479,5.173063,8.853570,9.462295],[4.912563,-4.916089,-5.662513,-4.319482,0.698606,5.361608,-1.965811,-1.196482,-4.496618,-7.885358,4.858896],[-4.276967,-2.286011,1.928038,-8.411625,3.177312,-8.171465,8.233904,7.289879,-9.439750,-7.153618,5.074244],[5.190990,-9.762019,-0.358546,-4.834918,7.480047,-1.532050,-1.520436,3.950820,-8.937427,8.715200,3.498735],[-1.673550,-6.568984,9.213735,-8.819868,-3.202470,-9.851986,4.347590,3.185470,-1.250778,-1.578348,-9.168283],[-5.278938,7.194973,-3.264241,3.498584,-2.565164,0.398003,-1.190519,8.368467,8.462961,-9.382452,-4.497704],[5.357335,-2.700865,1.680655,-7.339618,4.539469,6.313757,0.662508,9.968896,7.743769,-7.960089,9.433654],[0.637705,5.276250,-8.951743,-0.089630,7.500015,-9.413303,5.514281,-8.287304,5.906433,-4.833928,2.575539],[8.822247,9.257815,-9.404462,4.913074,-6.371771,-8.828156,2.538778,-3.058067,6.885585,2.166063,5.016772],[0.143311,-8.741883,2.941116,-6.367137,0.940695,-8.531456,-6.189330,-8.815152,-1.328727,1.945666,8.405632],[6.522856,-1.432727,2.489093,-2.518563,3.768708,6.302234,-0.622686,-6.741600,3.457203,-9.718733,-6.680557],[-7.358740,-2.088154,-4.900992,9.918151,0.075722,7.145813,8.572206,8.971660,2.800413,-4.661224,2.708316],[6.028649,3.097439,2.087612,-4.215688,-4.601891,-5.318823,7.797580,-3.901215,-9.072442,0.993319,-5.421678],[7.063778,-6.262947,-8.674844,4.561098,-4.493438,0.106881,1.562789,1.264761,5.182859,-6.750679,0.170024],[-8.207911,-4.681523,5.324442,-6.745265,-9.946231,1.545801,-3.205410,0.803583,5.344688,-3.772177,2.149984],[7.056727,-7.648546,2.705058,4.583894,-0.416879,-0.817539,-9.469570,9.395563,4.945674,-1.128827,-8.035555],[-3.369802,-9.558009,8.178748,5.950972,-3.639823,-3.256635,0.731228,4.612453,-7.708002,-1.421593,-8.139364],[-2.162321,8.790373,-8.218407,-5.362458,-5.025714,-1.151893,8.345630,5.731524,0.319406,1.541199,-1.628615],[6.937206,8.479294,-7.238650,-3.044131,7.449389,-6.089874,1.622590,-8.994595,1.673677,-9.781099,-9.817789],[-9.295871,-7.416356,0.015547,2.121139,-2.445443,-9.828686,-4.632919,7.611792,1.901715,5.699834,9.379420],[-0.839371,-2.743614,-9.234826,-1.262645,-1.392082,1.374543,-9.528226,9.101722,-2.951631,-3.253427,2.051988],[0.502222,5.158204,8.730805,-3.007422,3.357001,5.876452,6.929675,0.689071,-3.523134,-7.278477,-6.218010],[-0.730279,-3.763517,-2.863571,7.457755,0.279365,-2.378371,-5.824812,3.312223,5.284279,0.293564,-9.940507],[-1.784127,-6.542566,-4.642794,-8.885587,5.203862,-4.290282,-3.561063,-9.318281,-4.435124,-2.279012,0.415299],[4.628697,-9.628918,5.630723,0.280953,-5.121964,6.405320,-9.070710,6.214682,9.990448,5.678130,-6.021902],[-2.288402,-0.206987,-5.479554,1.878125,4.078982,-7.738636,6.808685,2.679493,3.852655,1.511431,1.851866],[-8.991185,-4.754389,1.512558,3.826432,0.752719,4.413502,0.235978,1.602065,5.300475,2.796587,-9.850081],[1.575001,3.131871,3.741874,-0.497232,-1.184532,6.926309,-0.743747,-3.345601,-1.594158,6.521455,5.678315],[1.567037,2.319729,1.803443,-7.538303,-6.515875,-4.784384,-1.830034,-9.021461,-2.711770,-3.340357,9.618725],[-3.426510,-5.910420,-8.097186,-6.357447,-6.278866,-9.514110,-3.269436,-3.096252,1.555532,2.873724,-7.235774],[3.997093,-7.212777,9.292230,6.492794,6.801746,2.089746,-5.902009,4.385298,8.679884,-2.492051,2.118836],[-2.856357,5.736171,-0.131228,8.985125,-8.344979,5.921665,-7.990113,9.302252,-4.032337,6.461262,9.499988],[5.703681,8.902938,-4.014442,-9.771682,-7.854446,-7.501924,-8.201157,-1.803404,2.023279,-1.121257,9.906639],[-2.511499,-3.212559,8.190307,-1.447010,9.288936,9.027635,-2.787495,-0.431148,-6.209798,1.055998,-6.723939],[7.014825,4.542892,9.119083,-2.005725,-8.764957,-4.661873,0.180556,2.144082,-9.250866,6.773981,1.488858],[6.338605,-6.783034,-8.414512,-7.651845,9.474426,-9.886625,2.847349,-0.798921,-5.233980,-9.312119,2.335745],[8.926012,8.057284,8.574387,9.645229,-1.796031,-5.015689,-3.270579,5.960159,0.867710,7.775141,0.934688],[0.956111,-9.770901,9.126909,-7.217443,-1.954818,1.644310,5.005842,-1.851486,3.870624,-2.808881,3.176964],[-9.214788,8.422450,6.757505,1.423488,8.379160,-9.162661,8.158681,-9.177699,-9.098351,3.329743,-0.930935],[-3.146594,9.089996,-0.266418,3.047594,1.954841,-7.501862,2.752898,8.149996,-5.325246,9.942177,-8.591551],[-5.032216,2.600956,7.968331,-4.715738,9.047893,-3.567357,-8.142856,-0.495941,-0.563801,-7.338592,8.536027],[-7.853623,-8.353228,6.606013,8.327531,-4.893461,5.967877,-4.037343,-5.920629,-8.877981,5.594028,6.431172],[7.752875,2.778125,7.373542,-3.492628,0.773642,2.057784,-2.264471,6.525234,-8.521737,0.725019,8.821154],[-9.619618,2.120958,-2.893017,7.423303,-4.456172,3.630186,-6.993856,9.666733,9.654312,8.909222,5.143213],[-9.739468,3.047795,-4.350445,-3.079778,-6.162265,-6.724137,9.425713,-6.343839,-1.894644,-6.057627,-3.273294],[-6.088327,8.959566,-9.898336,-0.773560,-7.922466,-1.660924,3.554375,8.854369,8.406019,-4.134288,2.331046],[-1.185474,-3.636174,-0.028015,-0.131237,8.506286,1.250171,0.349375,7.939985,0.326449,-2.230860,8.286337],[-7.907286,0.652898,-7.908426,3.153945,3.108258,7.632253,-3.650280,-3.932540,-3.700491,2.695492,8.786029],[2.108252,-1.565528,-1.124526,-0.765824,-4.127732,-7.527199,-4.719054,5.466936,-1.886272,0.108553,-9.041693],[-2.705620,4.733369,-7.516786,-5.296819,1.976201,-6.778225,-5.172525,-3.216740,-2.787548,3.541603,-9.955007],[9.948431,-1.013934,-7.634353,0.598612,0.071585,-5.205368,-8.177541,-9.596660,-7.268107,-2.177520,3.533681],[5.289260,-7.126091,7.966160,2.743566,4.569955,5.392809,-3.680095,-2.569462,2.690252,2.936338,-0.421942],[-4.420516,-2.831487,-9.544039,-7.676733,1.532999,5.832456,3.416080,-0.645747,-3.411003,-2.943286,1.092871],[6.676578,-3.527210,8.046386,-1.476199,-8.838389,-6.931451,7.283330,8.366347,5.525393,-0.129645,-5.077501],[6.920353,-9.163967,0.708110,1.768142,3.911787,-2.252638,5.313010,-0.695273,7.511484,0.726010,5.926523],[-2.265405,-1.406405,-3.761150,-8.419032,-8.718138,7.455263,4.161885,4.170820,5.676750,9.990721,7.833668],[7.955908,4.824289,-8.040536,8.757314,4.307702,-1.488336,5.695128,-3.526718,-8.520086,6.978832,4.879837],[-7.412658,2.588184,-7.910233,4.165407,-3.352316,6.197755,1.143611,-8.212722,5.645188,-1.840186,7.253978],[-6.995384,8.411265,-3.308481,-4.262673,2.380194,0.267235,-0.878482,5.249076,4.008545,6.306881,7.952454],[-5.774096,6.087415,-5.319218,0.452769,9.095449,1.887840,-6.769889,6.426052,-8.043492,8.811533,8.679314],[0.249895,5.537842,-7.109426,9.214277,7.860841,6.879756,6.303428,-5.440475,0.755175,4.017264,-0.195718],[5.101777,-5.278269,-9.885133,2.484815,-9.823040,8.971287,2.550335,-2.532690,9.657334,-3.372493,-3.586575],[-3.844905,-8.502492,-3.556852,4.035499,-0.716618,-9.499751,-4.643365,-9.164431,-5.810898,-9.641132,5.198673],[-9.407371,-2.954082,2.771388,-7.237382,-1.299413,8.390164,7.801089,-1.352300,-5.125796,1.469702,-5.219493],[-3.983049,3.177591,5.904098,-1.966908,6.125787,-4.773419,-0.889981,-8.262611,6.353342,-7.820618,9.332934],[-5.108569,-5.343244,-2.075052,1.913404,2.803947,-8.225175,-2.841880,-9.034369,-6.768336,1.071200,0.465151],[-5.182976,7.540166,-8.963695,-6.333607,3.046857,-0.261611,-3.018686,9.897586,8.809950,4.455599,6.712656],[4.684202,-5.570762,9.237985,-7.289549,5.849292,-8.229214,-9.214662,-9.481910,-5.421972,6.638724,7.802332],[-5.312120,3.265720,3.368133,9.335615,-2.042806,-8.778960,-8.214105,0.903976,-5.684613,6.190862,3.749624],[-1.359743,7.281882,1.438693,6.475162,-7.268851,5.399063,3.348719,-6.664311,0.282244,7.810276,1.911443],[0.662275,-4.530095,8.922885,-6.306887,8.168638,7.309511,6.362406,0.939334,3.752073,-4.849811,3.973922],[-0.415047,-9.079529,-5.963444,6.525097,0.869216,-6.875079,3.244306,-4.116891,-9.570190,-5.724042,-2.435406],[-3.155666,-4.583863,8.383442,-0.591818,-0.952144,-2.861477,-7.291191,-0.830292,-1.906450,-7.871906,8.203509],[-3.505155,0.334095,3.559061,-3.194865,-2.564916,2.633931,7.237137,0.842830,3.568417,-9.540579,1.040109],[-4.071132,-9.424230,1.826491,-9.746436,-6.489349,-7.916220,2.630704,1.463188,8.701935,7.396834,-8.174944],[6.455356,-9.149711,1.868089,-4.885577,-9.451257,-7.407641,5.034817,0.531281,-5.080777,4.105240,-1.680145],[-6.850237,-1.137177,2.004699,-1.210465,-0.642253,7.021975,-9.994485,9.339978,2.020569,-4.663927,1.339180],[-4.145548,0.582490,-0.205941,7.767363,6.439450,0.383146,-5.709585,8.429112,-3.058380,-6.836934,7.047811],[6.483975,-7.552537,-7.439571,-5.503570,-1.734968,-5.323063,-1.017363,-1.826782,5.615309,4.645794,-1.579138],[4.633544,5.989860,3.814348,-5.993002,-0.448170,-2.145785,-5.252047,0.439525,-2.759137,4.164405,6.067098],[2.591162,-4.960255,-9.437129,0.850807,8.906994,-1.848514,0.426879,-9.184512,-8.145367,2.546801,1.055375],[9.206761,-7.379887,7.996041,7.006832,5.671346,-9.610433,6.244113,-2.749866,9.205976,-2.729149,-0.531510],[-8.575979,2.539215,4.040736,5.232159,-6.603512,-2.041636,-3.889578,7.254785,-4.145364,-3.623446,-6.083191],[6.149224,5.225729,-3.631604,9.882512,9.268023,2.293445,-6.981146,6.788547,-4.243331,7.860042,-6.110018],[-5.073678,5.328666,8.871405,3.493771,4.097755,-6.061595,-3.867306,-4.119964,8.376977,5.973808,-8.956512],[9.394962,0.038053,-6.590433,-3.133702,-5.476208,-0.795093,-1.656986,7.733305,3.511890,-9.061888,3.730799],[-7.389037,-3.082442,1.962314,-7.744215,-5.035879,4.250385,3.661851,-1.998652,9.766844,-7.002439,-4.291044],[2.286195,0.675955,-2.299624,-1.102278,-9.110346,-5.981088,-0.890119,-3.728840,3.098512,-7.798866,-4.468848],[-6.915464,-6.948502,1.230218,6.523632,1.055194,2.712302,6.935859,-8.205552,-1.558944,-2.453255,-7.022100],[-7.153814,-9.719908,0.901785,4.943785,-3.762945,-6.645385,6.036661,-2.335165,9.233839,9.511945,-6.974312],[-5.080181,-4.264380,4.900194,4.148413,1.879933,-5.739025,-6.223082,-8.680999,6.968669,9.769768,2.135600],[0.431378,-5.739878,5.402185,3.909372,-5.540073,4.208884,-9.035362,-2.500793,-7.883199,-5.938810,4.709869],[-6.040877,-7.774545,-9.195405,6.228587,-5.510710,8.033498,8.226481,-3.249644,-7.045084,-8.637634,8.921621],[-2.129591,1.018021,4.872852,1.975752,-4.436161,-5.585793,1.700603,-3.931169,6.013559,2.736321,9.379273],[7.006519,-9.439531,2.029144,8.431278,7.334914,-9.240917,-5.801902,-0.997273,-1.436512,3.325980,0.210529],[6.058784,8.621256,-6.063071,-4.193020,6.042057,8.487649,5.955617,3.120536,1.292518,0.145638,9.677082],[2.431598,4.829367,-8.098036,0.682214,-4.655819,1.206324,5.562485,-2.534283,-2.424189,3.905135,6.267030]], dtype = "float64")#candidate|5226|(240, 11)|const|float64
bop_5227 = relay.maximum(call_5216.astype('int8'), const_5226.astype('int8')) # shape=(240, 11)
bop_5230 = relay.maximum(call_5217.astype('int8'), const_5226.astype('int8')) # shape=(240, 11)
func_2067_call = mod.get_global_var('func_2067')
func_2069_call = mutated_mod.get_global_var('func_2069')
call_5240 = relay.TupleGetItem(func_2067_call(), 0)
call_5241 = relay.TupleGetItem(func_2069_call(), 0)
output = relay.Tuple([bop_5227,call_5240,])
output2 = relay.Tuple([bop_5230,call_5241,])
func_5244 = relay.Function([], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
output = func_5244()
func_5245 = relay.Function([], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3056_call = mutated_mod.get_global_var('func_3056')
call_5259 = func_3054_call()
call_5260 = func_3054_call()
output = call_5259
output2 = call_5260
func_5285 = relay.Function([], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
mutated_mod['func_5285'] = func_5285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mutated_mod.get_global_var('func_5285')
call_5286 = func_5285_call()
output = call_5286
func_5287 = relay.Function([], output)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4608_call = mod.get_global_var('func_4608')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_5321 = relay.TupleGetItem(func_4608_call(), 0)
call_5322 = relay.TupleGetItem(func_4610_call(), 0)
func_4762_call = mod.get_global_var('func_4762')
func_4764_call = mutated_mod.get_global_var('func_4764')
call_5325 = func_4762_call()
call_5326 = func_4762_call()
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_5330 = func_4670_call()
call_5331 = func_4670_call()
bop_5339 = relay.maximum(call_5325.astype('uint8'), relay.reshape(call_5330.astype('uint8'), relay.shape_of(call_5325))) # shape=(6, 7, 7)
bop_5342 = relay.maximum(call_5326.astype('uint8'), relay.reshape(call_5331.astype('uint8'), relay.shape_of(call_5326))) # shape=(6, 7, 7)
output = relay.Tuple([call_5321,bop_5339,])
output2 = relay.Tuple([call_5322,bop_5342,])
func_5359 = relay.Function([], output)
mod['func_5359'] = func_5359
mod = relay.transform.InferType()(mod)
output = func_5359()
func_5360 = relay.Function([], output)
mutated_mod['func_5360'] = func_5360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5365 = relay.var("var_5365", dtype = "float64", shape = (7, 5, 6))#candidate|5365|(7, 5, 6)|var|float64
var_5366 = relay.var("var_5366", dtype = "float64", shape = (7, 5, 6))#candidate|5366|(7, 5, 6)|var|float64
bop_5367 = relay.mod(var_5365.astype('float64'), relay.reshape(var_5366.astype('float64'), relay.shape_of(var_5365))) # shape=(7, 5, 6)
output = bop_5367
output2 = bop_5367
func_5376 = relay.Function([var_5365,var_5366,], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
var_5377 = relay.var("var_5377", dtype = "float64", shape = (7, 5, 6))#candidate|5377|(7, 5, 6)|var|float64
var_5378 = relay.var("var_5378", dtype = "float64", shape = (7, 5, 6))#candidate|5378|(7, 5, 6)|var|float64
output = func_5376(var_5377,var_5378,)
func_5379 = relay.Function([var_5377,var_5378,], output)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4851_call = mod.get_global_var('func_4851')
func_4852_call = mutated_mod.get_global_var('func_4852')
call_5394 = relay.TupleGetItem(func_4851_call(), 1)
call_5395 = relay.TupleGetItem(func_4852_call(), 1)
func_1769_call = mod.get_global_var('func_1769')
func_1771_call = mutated_mod.get_global_var('func_1771')
const_5399 = relay.const([-5.371407,-5.510080,-7.639041,-1.758311,0.229186,3.880231,-8.522476,9.640202,-6.116804,7.688846,5.995884,2.449039,-3.199079,-1.379387,-7.205377,-5.669003,9.956334,-9.818837,-6.467314,1.376361,-2.714600,4.976916,5.381347,4.083790,9.346743,-2.795148,-2.835034,-5.841720,-7.041982,-6.453522,3.284918,7.509999,6.774792,-3.205508,-5.258635,1.814875,-3.083079,2.294840,1.716078,2.807263,-1.696628,6.163967,5.839457,2.441516,-5.031872,-7.622520,-2.569291,-2.980720,0.025447,8.612548,-7.680655,-8.461218,-2.112488,2.452226,2.988035,-1.192202,-3.185591,-4.355725,-2.515047,2.324705,1.298905,-0.516776,5.232676,-7.993075,-7.261394,-3.779680,-9.312415,7.469404,-2.676022,8.094274,-3.526647,0.993626,5.011545,-8.821660,1.030982,3.120850,-4.168396,-8.610672,-5.497112,-1.691845,7.243089,-5.847616,-8.282741,-7.868499,-8.662143,-1.143869,0.401358,7.454731,5.065231,-5.360919,1.687964,7.421985,-1.756360,6.569247,-1.532138,7.961363,-2.582203,-4.602189,1.702604,9.457395,-7.406257,-8.939214,-7.143794,-3.510291,-8.114526,-5.398872,-3.554704,8.599887,-6.366707,-6.135015,-2.514468,-5.802854,9.474820,2.440697,7.093344,-5.735523,-2.458473,1.022141,-7.133311,-2.170420,3.814817,-0.122701,3.982925,-2.899776,-0.233506,-9.304436,-7.425464,0.509070,2.627141,-0.148815,4.068411,-3.620532,-3.092052,-3.747771,-4.111770,8.592717,-2.677453,4.209552,1.719638,9.039701,-3.038424,-7.844430,-0.723653,-8.270660,1.997613,-9.428925,5.254384,-3.745383,-9.844894,-1.717128,-2.721410,-4.077693,5.834852,-2.781511,1.239156,-7.069508,4.311414,-3.014919,-9.084158,-9.368863,-5.497228,7.898334,7.721688,1.962606,-1.538208,-2.661062,2.681776,3.813671,0.143910,1.537952,3.997403,-6.779313,-6.499951,-0.844951,-3.629009,-7.489663,1.453684,-3.069832,-1.920386,2.575380,-2.167294,7.244370,-0.721105,-0.982960,-8.142969,5.582360,-4.085761,-7.467701,-5.148216,4.771866,8.290275,7.415799,5.059947,-6.204478,7.240096,2.641223,9.787320,8.643982,8.640880,0.330415,3.668553,-1.929479,0.646258,3.981537,0.682465,-2.508311,-9.530857,-8.374700,3.013099,2.085183,-6.343232,-1.148439,8.885906,4.773970,-0.044717,-8.078510,0.172434,9.298906,-6.958993,4.189943,5.421043,-9.748559,3.303935,-4.010932,2.256130,-6.578821,-9.055868,-5.749965,-0.429653,-3.241503,-5.052105,1.890519,7.261984,-0.839382,4.483588,-4.802924,2.086331,-0.402356,7.924484,-1.438045,1.172806,-1.704892,7.188304,9.124828,-5.595958,-9.042070,7.468794,1.685486,-5.740800,-3.089831,4.959345,6.695090,5.636898,4.280925,-5.665116,-5.766751,-6.377480,9.602126,1.330386,-5.267644,-7.361214,-4.149005,-1.513133,1.674568,-7.336395,-3.274280,-5.934991,-4.776379,5.119195,-2.179472,3.412743,4.553136,3.862232,-5.855565,-9.873960,-4.295900,5.194938,-9.095797,-3.128439,0.552556,2.192421,-5.236842,4.046192,9.761783,5.964927,-4.281961,-0.932981,-9.995143,-1.591325,-5.177029,7.948698,7.938593,-5.799672,-0.943870], dtype = "float32")#candidate|5399|(294,)|const|float32
call_5398 = relay.TupleGetItem(func_1769_call(relay.reshape(const_5399.astype('float32'), [6, 7, 7])), 0)
call_5400 = relay.TupleGetItem(func_1771_call(relay.reshape(const_5399.astype('float32'), [6, 7, 7])), 0)
func_453_call = mod.get_global_var('func_453')
func_457_call = mutated_mod.get_global_var('func_457')
var_5410 = relay.var("var_5410", dtype = "float64", shape = (450,))#candidate|5410|(450,)|var|float64
call_5409 = relay.TupleGetItem(func_453_call(relay.reshape(var_5410.astype('float64'), [9, 5, 10]), relay.reshape(var_5410.astype('float64'), [9, 5, 10]), ), 1)
call_5411 = relay.TupleGetItem(func_457_call(relay.reshape(var_5410.astype('float64'), [9, 5, 10]), relay.reshape(var_5410.astype('float64'), [9, 5, 10]), ), 1)
bop_5412 = relay.greater(call_5409.astype('bool'), relay.reshape(var_5410.astype('bool'), relay.shape_of(call_5409))) # shape=(9, 5, 10)
bop_5415 = relay.greater(call_5411.astype('bool'), relay.reshape(var_5410.astype('bool'), relay.shape_of(call_5411))) # shape=(9, 5, 10)
func_2294_call = mod.get_global_var('func_2294')
func_2297_call = mutated_mod.get_global_var('func_2297')
var_5417 = relay.var("var_5417", dtype = "float32", shape = (1540,))#candidate|5417|(1540,)|var|float32
call_5416 = relay.TupleGetItem(func_2294_call(relay.reshape(var_5417.astype('float32'), [10, 14, 11])), 0)
call_5418 = relay.TupleGetItem(func_2297_call(relay.reshape(var_5417.astype('float32'), [10, 14, 11])), 0)
func_1897_call = mod.get_global_var('func_1897')
func_1900_call = mutated_mod.get_global_var('func_1900')
const_5425 = relay.const(9, dtype = "int32")#candidate|5425|()|const|int32
call_5424 = relay.TupleGetItem(func_1897_call(relay.reshape(const_5425.astype('int32'), [])), 3)
call_5426 = relay.TupleGetItem(func_1900_call(relay.reshape(const_5425.astype('int32'), [])), 3)
output = relay.Tuple([call_5394,call_5398,const_5399,bop_5412,call_5416,var_5417,call_5424,const_5425,])
output2 = relay.Tuple([call_5395,call_5400,const_5399,bop_5415,call_5418,var_5417,call_5426,const_5425,])
func_5429 = relay.Function([var_5410,var_5417,], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
var_5430 = relay.var("var_5430", dtype = "float64", shape = (450,))#candidate|5430|(450,)|var|float64
var_5431 = relay.var("var_5431", dtype = "float32", shape = (1540,))#candidate|5431|(1540,)|var|float32
output = func_5429(var_5430,var_5431,)
func_5432 = relay.Function([var_5430,var_5431,], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1071_call = mod.get_global_var('func_1071')
func_1073_call = mutated_mod.get_global_var('func_1073')
call_5445 = relay.TupleGetItem(func_1071_call(), 0)
call_5446 = relay.TupleGetItem(func_1073_call(), 0)
output = relay.Tuple([call_5445,])
output2 = relay.Tuple([call_5446,])
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5472 = relay.var("var_5472", dtype = "uint16", shape = ())#candidate|5472|()|var|uint16
const_5473 = relay.const([[[10,6,-1,-1,-1,-5]],[[-9,1,2,10,9,-8]]], dtype = "uint16")#candidate|5473|(2, 1, 6)|const|uint16
bop_5474 = relay.bitwise_xor(var_5472.astype('uint16'), const_5473.astype('uint16')) # shape=(2, 1, 6)
output = bop_5474
output2 = bop_5474
func_5480 = relay.Function([var_5472,], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
var_5481 = relay.var("var_5481", dtype = "uint16", shape = ())#candidate|5481|()|var|uint16
output = func_5480(var_5481)
func_5482 = relay.Function([var_5481], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3598_call = mod.get_global_var('func_3598')
func_3600_call = mutated_mod.get_global_var('func_3600')
call_5484 = func_3598_call()
call_5485 = func_3598_call()
output = call_5484
output2 = call_5485
func_5526 = relay.Function([], output)
mod['func_5526'] = func_5526
mod = relay.transform.InferType()(mod)
output = func_5526()
func_5527 = relay.Function([], output)
mutated_mod['func_5527'] = func_5527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5003_call = mod.get_global_var('func_5003')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5528 = relay.TupleGetItem(func_5003_call(), 1)
call_5529 = relay.TupleGetItem(func_5005_call(), 1)
output = relay.Tuple([call_5528,])
output2 = relay.Tuple([call_5529,])
func_5533 = relay.Function([], output)
mod['func_5533'] = func_5533
mod = relay.transform.InferType()(mod)
output = func_5533()
func_5534 = relay.Function([], output)
mutated_mod['func_5534'] = func_5534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_5566 = relay.TupleGetItem(func_5185_call(), 2)
call_5567 = relay.TupleGetItem(func_5186_call(), 2)
output = call_5566
output2 = call_5567
func_5577 = relay.Function([], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
output = func_5577()
func_5578 = relay.Function([], output)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_5643 = relay.TupleGetItem(func_3046_call(), 0)
call_5644 = relay.TupleGetItem(func_3048_call(), 0)
output = call_5643
output2 = call_5644
func_5657 = relay.Function([], output)
mod['func_5657'] = func_5657
mod = relay.transform.InferType()(mod)
output = func_5657()
func_5658 = relay.Function([], output)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_5691 = relay.TupleGetItem(func_1620_call(), 0)
call_5692 = relay.TupleGetItem(func_1622_call(), 0)
func_5049_call = mod.get_global_var('func_5049')
func_5052_call = mutated_mod.get_global_var('func_5052')
const_5704 = relay.const([-4.429384,-3.547069,-9.409458,1.896337,6.921441,-3.982366,-0.742320,-9.358416,-6.871840,-0.037600,1.025874,-8.166989,-2.955910,1.872429,-7.623389,-9.617573,6.552857,8.155013,6.287647,-9.965906,-4.049153,3.160075,0.763487,-7.099577,2.432980,8.027730,-3.016613,7.879700,-0.184107,2.797259,0.718005,6.704919,-5.348750,-7.521196,-3.841637,4.261039,-0.995973,3.504801,-6.423748,0.345712,-6.670314,-0.825937,-3.075725,-0.264208,0.982067,8.275388,3.073885,9.537396,-0.348174,5.295223,-7.726923,6.259839,5.906553,7.187196,8.939484,-6.700334,4.595956,-5.846929,-2.538947,3.091835,-2.945955,-7.330129,8.110946,-9.023955,-7.850465,-2.517652,-3.939287,2.618094,-0.980842,5.355200,3.139162,-2.267023,-9.551551,-7.286058,7.108899,-2.670326,9.273089,4.026562,3.778455,-0.528475], dtype = "float64")#candidate|5704|(80,)|const|float64
var_5705 = relay.var("var_5705", dtype = "float64", shape = (2, 320))#candidate|5705|(2, 320)|var|float64
call_5703 = relay.TupleGetItem(func_5049_call(relay.reshape(const_5704.astype('float64'), [1, 8, 10]), relay.reshape(var_5705.astype('float64'), [8, 8, 10]), ), 1)
call_5706 = relay.TupleGetItem(func_5052_call(relay.reshape(const_5704.astype('float64'), [1, 8, 10]), relay.reshape(var_5705.astype('float64'), [8, 8, 10]), ), 1)
output = relay.Tuple([call_5691,call_5703,const_5704,var_5705,])
output2 = relay.Tuple([call_5692,call_5706,const_5704,var_5705,])
func_5710 = relay.Function([var_5705,], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
var_5711 = relay.var("var_5711", dtype = "float64", shape = (2, 320))#candidate|5711|(2, 320)|var|float64
output = func_5710(var_5711)
func_5712 = relay.Function([var_5711], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5533_call = mod.get_global_var('func_5533')
func_5534_call = mutated_mod.get_global_var('func_5534')
call_5717 = relay.TupleGetItem(func_5533_call(), 0)
call_5718 = relay.TupleGetItem(func_5534_call(), 0)
const_5719 = relay.constdtype = "float32")#candidate|5719|(240, 12)|const|float32
bop_5720 = relay.bitwise_xor(call_5717.astype('int16'), const_5719.astype('int16')) # shape=(240, 12)
bop_5723 = relay.bitwise_xor(call_5718.astype('int16'), const_5719.astype('int16')) # shape=(240, 12)
func_4087_call = mod.get_global_var('func_4087')
func_4088_call = mutated_mod.get_global_var('func_4088')
call_5727 = relay.TupleGetItem(func_4087_call(), 0)
call_5728 = relay.TupleGetItem(func_4088_call(), 0)
func_5359_call = mod.get_global_var('func_5359')
func_5360_call = mutated_mod.get_global_var('func_5360')
call_5741 = relay.TupleGetItem(func_5359_call(), 1)
call_5742 = relay.TupleGetItem(func_5360_call(), 1)
bop_5743 = relay.minimum(bop_5720.astype('uint32'), relay.reshape(const_5719.astype('uint32'), relay.shape_of(bop_5720))) # shape=(240, 12)
bop_5746 = relay.minimum(bop_5723.astype('uint32'), relay.reshape(const_5719.astype('uint32'), relay.shape_of(bop_5723))) # shape=(240, 12)
output = relay.Tuple([call_5727,call_5741,bop_5743,])
output2 = relay.Tuple([call_5728,call_5742,bop_5746,])
func_5747 = relay.Function([], output)
mod['func_5747'] = func_5747
mod = relay.transform.InferType()(mod)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5747_call = mutated_mod.get_global_var('func_5747')
call_5748 = func_5747_call()
output = call_5748
func_5749 = relay.Function([], output)
mutated_mod['func_5749'] = func_5749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_5755 = relay.TupleGetItem(func_1620_call(), 0)
call_5756 = relay.TupleGetItem(func_1622_call(), 0)
output = relay.Tuple([call_5755,])
output2 = relay.Tuple([call_5756,])
func_5762 = relay.Function([], output)
mod['func_5762'] = func_5762
mod = relay.transform.InferType()(mod)
mutated_mod['func_5762'] = func_5762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5762_call = mutated_mod.get_global_var('func_5762')
call_5763 = func_5762_call()
output = call_5763
func_5764 = relay.Function([], output)
mutated_mod['func_5764'] = func_5764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_5784 = relay.TupleGetItem(func_5449_call(), 0)
call_5785 = relay.TupleGetItem(func_5451_call(), 0)
func_5429_call = mod.get_global_var('func_5429')
func_5432_call = mutated_mod.get_global_var('func_5432')
const_5792 = relay.const([[1.472726],[-9.658141],[2.853960],[0.798575],[2.795539],[2.957685],[-2.905117],[-1.162413],[1.635732],[-4.634456],[-7.246482],[8.030521],[-7.849483],[5.167691],[-0.166828],[-3.263386],[-1.731748],[8.495775],[-5.532774],[9.685450],[7.911895],[-6.442323],[4.657808],[-6.408863],[-5.092045],[3.029888],[-0.954939],[-7.623227],[-5.820199],[7.667406],[4.861628],[-2.992333],[-3.540252],[4.204256],[-8.245862],[1.009153],[-9.629659],[8.725112],[-9.274705],[-8.496460],[6.864605],[6.355597],[-3.835849],[-5.811209],[-9.888640],[-8.862637],[9.886898],[8.780118],[-7.540808],[7.998200],[6.520040],[2.612394],[-5.192247],[3.398847],[-3.339297],[8.821468],[4.429666],[2.687577],[-1.542620],[-6.540035],[-9.066380],[-6.832767],[7.513580],[3.365125],[6.004347],[5.453855],[6.713896],[-8.088738],[1.586009],[-1.079960],[8.588926],[0.196909],[1.394977],[6.455932],[4.266985],[-1.454350],[-9.600955],[2.686455],[-5.136158],[2.772247],[3.334493],[-4.502079],[7.461309],[-5.109769],[-7.916204],[-5.261555],[-2.052297],[-4.619290],[5.237791],[3.050256],[-4.474222],[-2.277480],[1.705636],[-5.925822],[-0.208490],[0.574864],[-5.625200],[6.670687],[-5.248908],[3.374074],[-6.828973],[-4.722469],[3.590920],[-4.891402],[-1.201657],[1.697136],[5.553461],[7.828755],[-6.359156],[-9.096056],[-8.000221],[-7.888145],[8.030298],[-6.565843],[-3.495589],[-9.830840],[-2.791555],[1.164561],[-9.023692],[-1.947136],[-8.453904],[9.221336],[6.152452],[-4.314809],[-8.899223],[-6.135886],[-3.207024],[-3.154585],[-8.008662],[3.206785],[-7.238139],[-7.905740],[-8.521615],[-5.763752],[5.391989],[-0.499056],[8.796770],[-8.351900],[-3.272646],[-8.153514],[9.374136],[7.174816],[8.802239],[-3.448162],[9.947307],[-3.437509],[7.493603],[-7.625038],[5.886137],[-4.364349],[0.342120],[-0.293637],[-5.061784],[1.111900],[2.411334],[-6.978653],[-3.059832],[-7.398180],[1.390784],[-8.206668],[-2.931696],[-9.507192],[4.566717],[5.781220],[7.724726],[0.322643],[-3.600392],[3.164246],[-4.499017],[-0.927381],[-3.545538],[7.046305],[-7.474841],[6.996525],[-9.728821],[-1.700523],[-3.198142],[-2.839498],[8.645908],[-5.087663],[-3.127960],[3.199496],[9.927324],[7.492306],[2.023341],[2.454970],[-1.495051],[6.252361],[-8.596427],[-5.746564],[-3.603072],[8.770333],[8.559853],[-3.763002],[-2.785386],[-6.386144],[-7.977652],[7.849728],[-8.730377],[-8.331395],[-5.458248],[-8.522641],[-0.403957],[-5.931164],[-3.766278],[3.458691],[6.990436],[9.399787],[-1.546613],[-3.925445],[5.326701],[0.964209],[-8.493721],[0.652925],[-0.753480],[6.164005],[-8.434350],[5.917076],[3.988004],[0.768233],[2.111091],[-2.398111],[-7.123692],[6.209644],[8.389437],[6.265405],[-7.212198],[-2.681837],[8.631424],[-9.744255],[7.523230],[0.388340],[9.658677],[-6.522364],[-9.045769],[-6.304143],[-9.396675],[-1.733263],[-0.476049],[-4.313487],[2.908474],[-2.764328],[-3.214023],[6.883577],[5.559387],[3.322429],[0.042649],[-8.030769],[-8.755433],[2.473669],[-2.041942],[-4.989303],[-1.208390],[1.437661],[-1.466290],[-7.228625],[4.835732],[-0.588453],[8.222143],[-3.258201],[9.200732],[-8.626698],[-2.809727],[0.898495],[6.992007],[5.457621],[-8.120624],[1.554985],[-5.710455],[0.357032],[-4.194339],[4.365625],[0.269289],[4.655285],[2.767094],[1.985822],[-6.143209],[6.868267],[-0.813750],[5.860897],[4.406191],[1.878181],[-7.322017],[-9.779127],[-2.961224],[9.753623],[8.455680],[-1.889631],[-7.823982],[6.716240],[1.330294],[-3.678927],[-9.451726],[-8.338836],[-9.386225],[7.479657],[-5.962627],[4.622312],[5.694054],[-9.890926],[-0.317122],[-0.509055],[-9.496792],[-9.575425],[-8.810979],[-1.780064],[-3.132380],[8.046962],[-8.558664],[0.107170],[5.727257],[-7.922240],[2.933132],[-1.283068],[2.285229],[-2.423806],[8.615291],[7.790777],[-5.662508],[-6.477240],[0.583164],[-8.380511],[-7.894678],[9.119515],[-2.694111],[9.559945],[4.082431],[5.329461],[-9.239196],[3.946776],[-8.003987],[1.629050],[-4.609288],[5.646853],[-3.185562],[1.083730],[-9.883238],[1.188724],[-5.315197],[6.448920],[7.698918],[-0.898773],[-5.503883],[7.756838],[-2.233831],[-3.972163],[5.302907],[-9.942637],[-1.563860],[-4.399461],[7.675061],[6.109644],[1.465327],[-7.961511],[4.371352],[-5.603840],[9.948540],[3.458156],[6.618598],[-2.174067],[5.505977],[-1.170394],[-7.081874],[-2.802544],[0.508807],[1.348380],[-8.476211],[-1.002969],[4.510616],[1.691766],[6.393062],[7.405576],[8.830350],[-2.076965],[5.326150],[-0.340529],[-6.409900],[8.986339],[1.279347],[6.899607],[-5.214506],[3.125303],[2.132985],[1.161041],[5.284615],[5.203722],[-9.154464],[2.325127],[6.136375],[-3.380146],[-9.626117],[3.122233],[-5.224326],[8.433931],[-6.826281],[-7.112077],[8.880075],[-2.291141],[8.514445],[7.876230],[-9.068361],[1.703891],[7.817936],[-5.490151],[7.858436],[5.713044],[4.537984],[-4.605377],[-5.195575],[2.136212],[-9.191981],[0.815550],[-1.977085],[0.250053],[3.046295],[-9.701027],[1.036886],[4.692456],[-6.558955],[-0.975084],[-6.420867],[8.562761],[-7.965958],[9.501227],[6.083854],[-3.753540],[-3.755621],[7.930526],[6.926410],[6.972230],[7.505669],[-6.424172],[9.413455],[5.614616],[-5.503856],[5.901023],[4.791564],[-0.086467],[-0.160888],[-3.002054],[7.730489],[-8.705084],[6.943668],[-8.867135],[-9.393263],[4.881010],[2.930455],[-0.437517],[4.561582],[-6.037387]], dtype = "float64")#candidate|5792|(450, 1)|const|float64
const_5793 = relay.const([-9.189969,8.646146,3.990262,-6.036648,-6.245837,3.367523,-8.905191,-0.676640,2.774967,-0.731707,5.582116,3.978235,-0.467943,-1.961174,-2.641966,-1.448506,-6.177059,7.473071,-9.502773,-0.446466,-1.321657,-2.569197,2.823398,9.276945,-1.176180,1.511005,0.599382,0.276779,-5.713036,7.203540,1.977494,1.457229,4.208428,3.343956,-5.868102,-8.491249,9.359977,3.439557,6.746963,6.908629,-6.245734,-5.961977,-9.426771,6.408297,6.021313,1.204327,-7.879283,-8.710425,6.848112,7.747131,9.840581,1.135540,-8.272547,5.438998,9.406404,-1.220720,2.311704,5.591720,-4.145853,-7.045294,-5.035417,-0.712635,-2.648899,-9.499099,-1.167389,6.297602,-9.025005,6.625125,6.005991,-7.507743,3.027622,-6.244922,7.649099,-2.804748,-4.471046,-1.245974,-7.700500,-5.005528,6.289997,1.642709,-1.390733,-4.256759,1.080492,-5.184190,-2.342914,8.457075,3.474446,7.488186,-8.428461,-0.701051,-6.847603,7.088159,6.353169,-3.155806,-4.308194,-1.659354,-3.328480,7.291038,-6.855528,5.649295,6.844778,2.959423,-1.065173,1.015328,-6.580124,-0.110088,-1.200848,-4.917043,2.643022,5.870525,-5.489304,-4.702724,-9.174351,-3.840897,9.206141,3.227742,-0.332201,0.954349,6.860013,1.353086,-6.590789,2.527633,7.935578,-0.465206,-1.586937,9.818295,-9.711391,9.605002,5.836795,2.824474,7.371222,9.230350,9.922436,1.401736,-1.016752,3.628543,-3.756487,9.470317,-6.601052,-3.857960,4.625526,8.802610,3.678486,-2.570037,-5.553170,-9.608872,7.585767,0.185160,-8.303114,3.475453,-8.238892,-7.918976,4.105887,-2.057865,1.599008,-4.747670,-9.912274,-5.655791,2.244500,9.137298,2.821384,8.713638,1.361927,1.747220,2.855135,-2.862352,5.167572,-0.635859,0.938467,-3.518158,2.277366,0.790308,-5.860814,-6.781970,0.530471,1.010812,7.555489,0.027002,-7.617368,-5.731081,3.492621,8.351499,2.805952,-5.888958,-4.104646,-2.130812,8.104322,-7.706344,9.912145,5.143976,-1.012368,8.970340,-2.990249,-8.360018,-9.283530,-2.883883,-3.571416,-1.199917,-0.784944,-5.184994,-6.204019,-9.722139,-0.532646,0.992001,5.962541,-4.691184,-9.702033,4.491461,-0.629447,5.348340,4.476491,2.976206,6.818987,4.721253,-2.366885,-9.087057,-2.798762,-2.857368,3.741934,8.416181,6.762272,-2.707119,7.545538,-4.960237,-5.078390,-9.851956,5.482176,6.583789,-9.328316,-6.135788,-3.974323,0.177656,-7.608937,1.000754,9.712607,-2.737664,8.311623,-8.632288,3.871226,-7.465124,-6.301525,2.523752,-5.942443,-7.560891,7.500209,5.938207,-1.431811,1.251078,8.672030,-3.151594,8.591967,2.381397,-0.327853,4.034424,-5.029129,9.305311,6.063051,-9.665192,0.028268,-6.151285,-6.479377,-0.675956,-1.818025,3.885882,-4.590117,-4.605364,-4.457981,-3.188831,-8.699445,-8.646396,-0.597923,0.183054,-5.351932,8.571308,7.866190,2.550262,-5.117136,-9.738301,6.037197,-9.496443,4.589192,8.341875,-7.691526,-7.757181,8.300200,2.031517,-2.473910,3.681449,-3.566577,-2.142066,-7.656785,5.647821,4.297177,7.630706,5.543167,3.330302,7.925972,3.751612,-8.822541,-3.987069,-9.371986,9.962641,-4.386230,-1.712564,-2.823104,-3.368347,-4.194149,4.261675,6.233978,-3.604717,-3.359782,-6.003150,-9.970427,7.238002,8.612022,-3.411277,7.528248,4.304385,9.795392,-8.257007,-5.109212,-1.154227,5.942372,7.436943,5.563234,3.595529,4.153827,0.190721,7.297985,-4.148600,-5.479117,0.182642,1.006126,0.064493,-7.975535,-3.124197,9.624730,8.877925,-9.072349,2.568960,-6.348810,8.065951,-7.049547,4.665407,7.262581,8.831918,-0.685146,3.820585,0.126299,-3.186430,-0.392761,-0.532991,-6.863224,-4.448976,-5.372408,-7.592312,9.340863,-0.854995,-2.211195,4.548507,-5.051323,3.026356,1.356950,-9.584869,1.570587,-6.453781,5.121772,3.716504,-0.724776,-4.789152,-4.148852,0.891158,-9.973540,2.623283,1.202151,-2.761503,8.680628,8.702325,-2.386108,8.656272,-8.897247,7.180188,1.151999,0.373799,2.171613,-1.152194,-4.242436,6.546567,-4.885448,5.060298,1.059403,8.643737,6.298965,-9.298874,-1.176815,-5.805488,8.526285,-7.671056,-6.810942,8.727193,0.089128,2.065474,1.427529,-0.972264,-8.895759,-8.171787,7.610669,-7.785507,-5.594307,-3.335797,2.884072,1.656512,-0.307644,6.026871,-9.109376,-2.568294,-0.088217,8.619283,-0.033358,4.816718,-8.318392,1.891132,2.161117,-1.778316,-3.473355,-0.516118,0.924829,-7.306460,6.169700,3.638652,-3.307345,6.124651,2.152997,2.322949,-6.553382,-1.387696,-1.305349,-3.489853,-1.788800,9.051294,7.328538,-6.512192,7.576141,2.378895,-0.114559,-4.627199,-0.382780,8.007453,5.468738,-6.032963,-5.170538,-1.733134,-7.385407,-2.220066,2.927155,2.722595,-4.775301,-1.703837,-8.336486,-9.807904,-5.742090,-4.318619,0.677082,-9.872505,-9.825697,-7.146933,-8.864380,0.629987,-1.389744,3.558004,1.787030,-1.342674,-0.933286,6.373194,-7.127033,9.641692,9.374301,-7.975259,2.645339,9.470889,4.080047,-7.026199,-1.948459,-4.479883,-3.953738,-7.146310,-0.477796,0.998721,9.457424,8.128272,-9.599758,-5.744867,-8.194415,-6.607829,-5.882279,9.171997,-9.709251,8.669384,7.157232,1.333842,1.321714,6.397047,-4.500956,-9.700663,-9.948764,-7.879160,-7.453456,-2.175505,7.747425,-4.521295,-9.074219,8.305505,-4.113664,7.938223,-7.354299,5.139635,-9.262549,8.347727,4.135487,9.090575,3.114587,-4.288936,-4.027800,5.747714,-0.329060,6.027172,8.436661,3.037019,1.284591,-5.822707,2.900272,1.557402,-9.721460,-0.456425,-6.459679,5.605300,4.633837,0.103802,-2.473647,8.097528,6.823405,9.325951,7.134760,-0.118712,2.154821,-2.031985,-9.169536,9.286409,-9.525387,-9.923266,5.773260,0.595081,9.752173,-4.398376,4.880914,-3.321268,9.080306,2.375057,-4.399050,4.577916,-3.669773,-2.441598,-3.401579,-8.714628,-3.984889,4.546318,-2.423363,-9.841324,-7.481717,-6.698470,1.093552,-2.106283,-7.714271,3.243828,9.712921,0.858411,2.222965,-1.044290,8.373174,-7.931407,6.794424,0.637250,-0.701481,7.279759,-9.983011,-0.804989,1.870918,-7.883698,1.430458,-9.705323,5.714912,-4.792929,-0.486162,-8.921517,1.827195,4.078160,-9.355436,0.116269,-5.690391,4.668896,-4.729795,-3.319381,-8.352648,4.292082,7.682092,-1.836411,6.503668,8.344996,7.218512,7.672691,-6.482958,2.680484,6.063612,-2.539499,-9.267650,3.939892,4.867660,-3.587735,-1.397572,5.399931,4.098364,-6.623964,1.290380,-9.780531,8.486407,8.179449,-8.366264,3.481666,7.137530,-1.075806,8.124763,-2.581456,7.071337,3.738640,1.713748,2.094641,-0.028782,8.304915,5.959318,2.970262,-5.151399,9.318993,4.396725,-7.927067,-7.633454,-7.040820,-3.689862,-2.036371,7.159820,-1.836892,1.173563,-5.261988,1.726932,2.150460,1.818079,-3.429626,8.104642,7.790807,-4.082416,-5.284136,-4.379055,-5.027735,1.354774,-0.151194,-4.497681,1.859123,9.056933,-7.501587,-3.311346,1.481449,-5.202340,1.106679,5.710699,-8.942897,-1.257582,-8.811613,-4.416440,-8.957349,-8.647173,-9.792395,5.096792,-4.033021,9.295332,0.821783,-7.323088,-8.274445,-9.902397,-1.544717,-3.142619,0.743749,5.287021,7.184391,5.982992,-4.061663,-6.889902,-7.317182,-7.314806,-7.843570,3.371652,8.395190,9.966642,-4.573011,7.055577,2.436716,-1.660918,6.733681,8.143644,2.770045,-1.760728,-2.976284,-7.559241,-7.040229,9.045226,8.571194,-9.329724,-5.146608,-1.494634,-6.820956,1.798564,4.706360,-2.919851,-2.769768,2.094339,-9.216821,2.454782,-0.711073,-7.444284,-3.553240,-6.562198,-0.022629,0.701251,-4.318645,-9.157825,4.861648,-6.812039,5.366805,4.930517,-9.246045,2.233428,-6.321190,5.957047,-1.199841,1.533805,5.239195,-7.018793,8.249618,-0.698824,5.828644,-9.712871,8.058335,6.888945,4.244023,-5.309663,0.221374,9.219712,-3.502738,4.158075,-6.404180,6.107677,-9.589384,0.812624,8.368592,8.435983,-4.507532,-9.252665,-1.219319,-0.884197,-8.132742,-3.390553,-7.021977,-8.235189,-6.185756,-7.847491,-5.035178,4.935758,5.601618,-3.626743,-8.083057,-6.752197,4.217979,-2.484995,-0.899777,-7.179179,1.936379,6.981700,-2.902963,-0.952548,5.167211,3.220607,9.193095,-0.270310,5.364037,3.385462,-8.753907,5.887651,-4.958165,3.040735,-7.271556,-0.047613,-8.847421,-9.798549,3.391495,-4.112150,4.690175,-4.804305,-3.356911,8.903079,-6.428551,9.606455,-1.034175,-6.513466,0.471710,-6.528576,6.504529,2.943724,-0.281708,-7.398593,7.512337,-0.986021,-1.563044,7.107205,3.501817,9.625373,3.024215,-2.058061,6.027902,7.497400,-9.260261,-7.264976,-9.558368,-8.532552,6.822175,-3.919770,0.030714,4.902122,1.034340,-7.564548,-3.040660,-4.398135,-7.636037,6.609753,-4.652785,-4.847016,-8.284068,-7.869083,8.252212,7.956472,-5.146211,5.592781,-9.606091,9.288424,0.459896,-2.936176,6.935715,6.381713,0.022506,7.938701,5.505714,5.932663,6.385286,-9.479124,-6.481375,2.101818,9.116198,-7.603691,-5.937741,-4.134940,2.414682,8.559004,9.025371,-6.375968,2.118066,-8.690827,-5.678988,6.215478,-7.772628,-8.680441,2.338281,4.159833,-9.459803,9.431300,7.433978,-0.460754,-3.303975,-3.171779,-7.721616,1.600558,-1.294987,5.868767,5.722160,-1.438374,-9.558149,-6.688011,4.985950,6.791975,1.990959,-3.878020,-5.023259,2.547623,-7.846310,-3.491766,-8.142777,-0.721799,-7.248300,4.655635,-9.082793,4.840434,-4.409295,7.663518,2.663268,4.833200,3.876820,3.145500,-9.850247,-1.380776,-9.929880,-4.980240,-5.681701,-1.195623,-2.999903,-6.854652,1.250893,0.948868,0.856151,3.813477,8.632731,5.467008,-9.483577,-6.066932,9.505287,0.140147,-2.047882,2.825574,5.869441,2.291218,4.304816,-3.685894,4.260084,6.109493,-2.782747,8.576400,8.806664,-6.698476,7.569290,2.158018,-0.820992,0.087627,-5.063535,0.870294,-5.911545,9.761268,0.345411,-5.189577,6.423060,3.791881,9.660573,-9.305842,-0.081989,-7.243669,3.229353,-2.145469,5.992997,-4.069596,-6.978648,7.972837,-0.769280,2.604605,-1.371005,-8.793102,7.617262,-1.392053,-3.184527,0.119729,1.356918,1.156313,7.893602,-6.709158,6.430489,-6.020591,1.025223,-0.263480,-2.860546,5.861026,8.760560,8.889547,2.606648,4.285955,-6.151652,-2.959981,8.115183,-5.735115,-3.076811,2.732771,-3.805541,6.319687,4.391134,6.908907,1.949928,-8.982292,6.287409,5.607210,3.829558,-6.467911,-3.169021,-6.928270,-5.903438,-1.946394,8.224464,-0.585815,-0.591688,6.544346,7.611372,4.406784,2.997113,-6.244403,9.424017,-7.697762,-2.444175,-0.353362,7.447636,-2.120002,-3.149492,-1.550313,-6.183530,1.357399,8.073597,-4.454526,6.622465,6.859042,-8.345601,5.109739,-2.251524,-5.249237,8.367801,1.751593,9.503885,-5.818118,-4.272513,-0.758486,-7.180552,3.716742,-5.052678,-8.520389,-5.747227,3.894207,2.555036,-3.037910,-5.792476,6.153223,-7.767786,-8.731513,-6.231154,4.773956,-7.085872,-3.525872,2.579889,-1.816431,2.437403,7.447366,-5.128205,-8.915486,-2.225451,5.085422,-5.903695,-2.013515,3.715697,-7.178693,1.572896,4.719847,2.218172,-5.902645,4.796661,6.789802,-2.553996,-3.178454,9.639334,-9.041499,-6.077966,-5.250864,-3.994542,3.628493,8.805921,-5.638762,2.133138,-5.481657,3.127314,4.745688,5.372214,6.728477,6.057953,6.363892,2.455594,-2.746541,9.767173,-8.088183,3.094612,-2.519679,3.535744,-9.545711,-1.965414,-7.417294,6.461506,-4.694524,-6.604685,-0.010768,-6.135636,-9.091284,-0.071907,0.374679,2.730517,4.692310,3.091257,1.573931,-6.905141,4.489600,4.595872,-4.935089,8.840875,1.000794,5.482542,8.112824,0.282325,3.385359,1.297239,-2.762565,-8.616870,7.222487,5.383851,-9.660819,-3.266509,-1.353731,8.563790,3.848841,2.528808,-8.954568,-7.706528,-8.893831,4.314335,3.205015,-9.141128,3.168228,-8.690923,-0.920830,-7.434644,3.849337,-2.781720,-8.756208,6.679263,-4.338532,-2.466839,5.026435,5.019999,5.545287,9.785808,2.531002,-8.689432,-2.266287,2.490813,-7.836755,3.318031,3.639582,8.594824,-7.307878,0.385065,1.980306,8.346683,-9.208862,8.253676,-9.268074,9.359318,-7.782693,-4.004174,-4.269024,-5.649386,9.024390,-3.095635,3.311382,-4.328711,-4.844611,0.802521,-4.433520,-2.142516,6.673357,-7.312912,-2.382705,5.273127,8.546118,1.055374,9.338158,-9.594296,-1.081640,4.726925,-5.661935,6.910146,8.623774,-6.552933,7.189002,6.124715,-9.575668,-9.528196,7.904435,-8.475640,-8.260504,-1.654924,4.997125,-8.137351,1.877611,6.604506,-9.120262,1.550315,7.882533,1.470464,-8.935627,9.250533,-0.816703,-4.941071,4.667987,-8.906038,-0.079036,-1.435947,4.562516,9.580954,-6.937901,-5.375504,4.400102,0.625522,6.957187,-7.876033,9.174829,8.103191,3.201066,3.078196,-9.596780,-1.137542,-7.918081,-8.881080,-4.601781,-8.205310,-7.067433,0.273845,-4.235596,4.278886,5.941527,-0.565449,1.716293,-8.475408,6.952810,-4.912390,6.965739,-8.330826,4.511927,3.664101,4.174115,-9.413020,-0.982190,0.416636,-4.157252,-9.224748,-8.541006,-8.470111,-7.428735,1.111862,-7.079908,5.327309,-9.138646,7.098997,-6.142487,5.125007,6.018829,-3.737846,7.922448,-6.695204,-4.553923,5.384436,6.884705,-7.007724,-8.682308,7.870147,4.233081,-3.230691,6.297684,7.335768,-6.190607,8.962844,8.872935,7.046980,5.611873,-7.480211,9.926465,1.528299,-5.215627,-7.129698,6.235567,1.309534,9.330887,-3.191193,-6.500628,-1.919306,2.697540,-2.239107,8.946810,7.382217,1.295939,-4.784578,-9.804203,-6.408408,-2.545068,8.995553,-5.052565,-3.758692,4.131149,-8.021492,1.997946,-4.546617,-3.180057,3.669292,2.351234,8.822352,-3.632212,6.060733,3.627937,9.740527,-1.404799,3.775248,-1.602032,-1.809323,-6.522772,6.330277,-3.007767,-0.410362,-7.892328,-3.712852,7.989712,-1.485053,-8.403643,-6.488091,3.854234,5.289440,-0.872164,5.814341,-9.253532,-0.108211,-8.219264,-3.664621,-2.326665,-4.709867,-7.205518,-7.570525,-2.986165,-0.188776,-8.635301,-6.788791,-7.039296,6.338083,-4.421739,4.235263,2.032483,8.558777,7.014867,-8.182749,1.929945,-5.262233,4.126290,7.441469,-6.002691,-4.529579,-0.114207,-9.083362,-1.014728,3.690073,-3.473827,-8.304713,7.206053,-1.676168,5.050197,-7.666700,1.969411,4.425579,9.130470,-9.121077,-7.717117,-2.384111,3.034468,4.761650,-4.803576,-6.858154,-1.887682,-5.690763,-5.684002,-1.399954,1.083166,-9.063108,-0.847145,-9.365837,-7.304572,0.593511,5.841621,4.632878,-9.431753,6.488611,-0.580000,-9.949505,-0.496712,-9.844802,9.473239,-2.188529,7.501872,2.398034,-4.681240,2.161342,-9.409205,5.212138,-1.050032,-0.500661,-8.357804,4.460854,7.312320,0.356512,2.124759,-8.124853,-5.098172,6.063937,-8.466457,0.661807,-3.193271,3.735931,7.632495,0.889445,-7.653725,1.785043,1.666268,7.925017,-5.341446,-9.364541,-6.867407,-4.425762,5.047471,-9.701375,-2.512372,4.877849,-3.295538,5.375554,3.202604,0.654891,-3.913978,-7.910256,0.422204,-4.185822,-2.920641,9.099091,6.197117,-7.219760,-8.643874,-3.565999,-4.246567,3.730508,9.048206,0.543345,5.352066,-9.207272,8.833470,7.366641,-4.724718,-7.709394,-7.861764,2.344267,4.249248,4.815598,-6.184705,-7.316773,3.652794,2.962114,-1.664851,5.888497,7.564430,6.775667,6.395640,7.015395,-0.833297,-3.934491,-7.137997,-4.497667,3.143873,2.355661,-7.893837,6.620154,9.409198,-9.755527,3.960215,-9.759465,7.511238,3.419358,-7.428545,-6.328100,-1.223184,-0.203874,-8.885788,-0.207783,-2.140184,8.812248,1.543883,-0.513609,2.791210,-2.738436,-5.477791,7.669565,-8.184147,-6.103663,6.560662,1.580200,-5.582131,-4.068513,-6.349952,-3.571860,-0.073987,9.396264,-7.518876,8.200397,-1.384752,-3.063827,-0.185535,-7.705167,-0.559121,5.201865,4.630278,1.029018,-0.824611,-2.089165,-6.479918,2.519557,-1.617475,-3.717261,-7.955546,-9.375451,9.751064,-0.094197,-9.003325,-2.015939,3.774457,5.955406], dtype = "float32")#candidate|5793|(1540,)|const|float32
call_5791 = relay.TupleGetItem(func_5429_call(relay.reshape(const_5792.astype('float64'), [450,]), relay.reshape(const_5793.astype('float32'), [1540,]), ), 4)
call_5794 = relay.TupleGetItem(func_5432_call(relay.reshape(const_5792.astype('float64'), [450,]), relay.reshape(const_5793.astype('float32'), [1540,]), ), 4)
func_3734_call = mod.get_global_var('func_3734')
func_3735_call = mutated_mod.get_global_var('func_3735')
call_5803 = relay.TupleGetItem(func_3734_call(), 0)
call_5804 = relay.TupleGetItem(func_3735_call(), 0)
output = relay.Tuple([call_5784,call_5791,const_5792,const_5793,call_5803,])
output2 = relay.Tuple([call_5785,call_5794,const_5792,const_5793,call_5804,])
func_5807 = relay.Function([], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mutated_mod.get_global_var('func_5807')
call_5808 = func_5807_call()
output = call_5808
func_5809 = relay.Function([], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5812 = relay.var("var_5812", dtype = "float32", shape = (13, 15, 2))#candidate|5812|(13, 15, 2)|var|float32
uop_5813 = relay.rsqrt(var_5812.astype('float32')) # shape=(13, 15, 2)
func_3244_call = mod.get_global_var('func_3244')
func_3246_call = mutated_mod.get_global_var('func_3246')
const_5816 = relay.const([[-7.480201],[8.958380],[-3.632550],[-8.158879],[-5.828109],[1.775659],[-4.018117],[9.710850],[4.917608],[6.807112],[6.610954],[4.953263],[4.063414],[-7.755661],[5.407026],[8.871634],[1.151423],[5.208786],[-5.201503],[4.274385],[2.854002],[2.406627],[-5.952206],[-0.999034],[1.622083],[4.436074],[0.604270],[-3.914110],[7.887540],[-2.302344],[9.253241],[-4.636821],[-1.374854],[-0.446713],[8.101672],[-9.283981],[-0.338620],[-6.781483],[-4.133847],[-1.310310],[-3.000862],[-0.148247],[4.625715],[-5.409155],[-9.273862],[9.888855],[-6.641994],[-4.941550],[2.295674],[-6.958471],[-0.526286],[4.387016],[-7.756605],[-5.350680],[-3.218302],[-6.206129],[-7.559562],[-6.867203],[4.760473],[-5.999655],[-9.280997],[6.813810],[9.927945],[6.518468],[8.527368],[4.223218],[-1.184853],[-9.032785],[-9.010977],[1.922336],[-3.814940],[-9.005758],[7.911004],[-4.722198],[8.564129],[-4.323512],[-4.730353],[8.760550],[8.100377],[-4.476606],[-5.769864],[2.826733],[-6.377284],[1.663020],[-6.968469],[2.810596],[-6.222597],[1.767999],[0.235227],[-0.538703],[-1.026761],[-3.875970],[-5.647106],[-4.590260],[-8.187067],[-7.195249],[-3.515726],[-3.207423],[-6.845992],[2.724363],[-9.879864],[1.302737],[-0.221402],[-9.344393],[-1.589761],[5.801899],[2.848735],[4.643939],[9.311108],[-8.264108],[-4.413634],[-5.273977],[-7.613603],[9.667368],[-6.440543],[1.761596],[4.506249],[9.491686],[5.768242],[6.548506],[-5.317461],[-1.644602],[-3.441966],[3.426723],[7.198925],[-2.482614],[3.584097],[-9.827685],[1.009140],[-4.589156],[-3.708013],[-5.651575],[-8.305405],[-0.496897],[-8.290583],[2.501945],[-8.634248],[-7.602131],[3.507194],[-1.713126],[2.835709],[-7.998524],[5.893872],[-0.558163],[-6.174769],[-3.884018],[-3.848448],[-0.103990],[-3.357822],[-6.331535],[9.784909],[7.868472],[9.564668],[-2.684519],[7.681945],[6.573088],[9.369601],[3.133154],[-3.455508],[7.651634],[-8.422915],[-3.314560],[9.871210],[2.035650],[2.914893],[-1.094089],[4.350322],[-8.393149],[3.105999],[7.792125],[8.468692],[-0.709150],[-3.544845],[1.549388],[5.515247],[9.144034],[-9.509277],[7.819707],[0.037589],[6.556018],[-1.366458],[8.585685],[0.341360],[5.823500],[-3.415713],[7.596293],[9.362915],[5.328012],[-9.469937],[4.104563],[2.658857],[2.547855],[-1.424063],[6.361425],[-9.276223],[-7.760744],[-1.208010],[-6.281780],[4.084670],[2.755136],[8.262706],[3.794181],[-7.608671],[-1.643901],[5.327778],[-8.670807],[0.796920],[-5.011298],[-4.789280],[8.511791],[-5.333874],[-3.499280],[1.485405],[-5.147651],[-4.861308],[-4.640899],[-2.536799],[-8.586890],[-3.382818],[4.549779],[-8.673554],[2.714273],[-9.663008],[1.596388],[1.573373],[7.350342],[-0.182742],[7.565573],[-7.423023],[-9.609661],[2.048405],[-8.478966],[-1.286170],[-9.594989],[-4.558428],[-8.077619],[2.356556],[-2.932578],[1.873531],[4.513567],[-3.706274],[-8.397511],[-8.162017],[-0.855525],[1.236783],[8.574820],[0.775169],[7.839167],[-6.090740],[0.712386],[3.571159],[-6.834979],[5.912838],[-1.693811],[-7.423497],[3.752801],[-2.033901],[-8.742719],[1.233279],[-8.979503],[6.502767],[7.666688],[5.411215],[9.026734],[-2.214145],[-1.095573],[-9.455045],[4.942347],[9.495555],[5.971809],[7.689308],[-7.682058],[-0.636614],[-9.380391],[8.683775],[5.620358],[-8.994183],[-0.240641],[7.490606],[4.595838],[-3.967079],[6.585198],[-1.308430],[-2.445510],[3.353741],[-5.725863],[-8.046237],[-8.485750],[9.622008],[8.895908],[8.063816],[1.019953],[0.450643],[-8.992639],[2.272087],[6.735573],[4.582380],[1.480751],[0.519827],[-8.037347],[7.709905],[3.378493],[8.354914],[-8.788925],[-6.725157],[-6.660672],[-7.117511],[5.125329],[7.478196],[-3.616303],[2.316125],[-0.707720],[8.972279],[1.389629],[1.603490],[0.214400],[-2.658906],[-2.144834],[-2.224578],[-1.360197],[-3.194859],[9.814185],[-9.189394],[5.749442],[-4.876383],[9.009630],[4.795655],[-4.672885],[8.024366],[1.875137],[0.915496],[5.642211],[1.381759],[-3.728262],[-2.627434],[-7.048008],[7.342839],[-7.292145],[-7.339874],[6.338935],[2.813981],[-9.577148],[-6.232539],[4.558543],[-3.318189],[-0.384424],[8.973775],[0.452240],[7.724404],[3.686017],[-5.007767],[0.294036],[8.709651],[-2.689981],[0.473849],[-8.897923],[-9.023568],[8.674153],[8.516510],[-6.539620],[6.597294],[-3.298000],[-0.475877],[6.353484],[7.266424],[3.988398],[-4.398919],[0.092922],[-3.294103],[2.107902],[7.369559],[7.977410],[-1.362115],[-2.153547],[3.290686],[-4.408893],[5.305912],[-7.395879],[-2.581752],[2.213532],[-1.265826],[-3.263629],[1.346378],[-3.362179],[5.744513],[1.890595],[0.765614],[-5.104236],[3.598582],[9.245495],[9.078851],[7.436843],[-8.953178],[-3.675179],[9.642279],[-3.256622],[-9.640672],[-3.926160],[-4.735330],[-4.099590],[-8.876958],[-5.570784],[-6.853246],[-1.272164],[2.540363],[-1.702449],[9.774625],[0.292030],[9.563704],[-9.085902],[-6.325829],[-7.609852],[2.644989],[-4.578729],[1.069692],[2.095934],[6.292692],[7.297694],[-2.221436],[5.132629],[-8.257732],[-7.803447],[-3.760086],[8.546138],[1.216156],[-8.570953],[8.336315],[3.351889],[-5.620062],[-6.589534],[-7.703715],[8.987908],[-6.970088],[3.092052],[-1.556859],[-7.138415],[-2.553257],[-5.550994],[1.615986],[3.154004],[-7.129683],[-9.251815],[-1.625942],[-9.000781],[6.944855],[9.079630],[1.574927],[5.553858],[7.220511],[-2.242297],[-7.214255],[-7.535864],[-8.687376],[6.392345],[5.459670],[-3.985300],[-4.678167],[1.226171],[-1.199276],[9.340931],[-2.988311],[2.362542],[-1.665336],[0.297634],[1.782977],[4.682693],[5.698201],[2.574127],[9.003235],[7.866541],[5.748270],[-1.562071],[-6.764363],[-6.132253],[1.098688],[-7.879556],[-3.751124],[2.877435],[9.163719],[1.937750],[5.298798],[-9.653199],[-6.747077],[-7.897511],[-6.247467],[-3.013152],[9.594440],[8.484548],[-5.581118],[8.592581],[-3.272486],[-7.814914],[2.800839],[1.288968],[-0.039559],[-5.186253],[7.929178],[-4.344708],[-9.135146],[4.813735],[-7.487600],[-7.302124],[-3.332730],[6.661706],[4.846421],[6.871713],[6.031068],[9.770856],[0.131616],[0.955875],[2.924394],[3.236012],[-2.228460],[-6.046244],[-7.615249],[5.535005],[-8.890844],[1.703840],[1.052243],[5.664478],[7.870685],[-9.002225],[-1.974557],[9.450967],[-6.206842],[-3.311778],[-5.299726],[9.237577],[1.693781],[7.821384],[2.220617],[4.505254],[-6.083609],[1.044039],[7.561670],[9.884745],[5.179442],[9.273345],[4.216227],[9.210390],[2.299809],[1.586684],[-9.288539],[-6.358586],[-6.409578],[6.477245],[-0.066352],[7.526507],[5.544868],[2.354663],[-3.905218],[2.666607],[-0.588110],[9.387157],[-4.787548],[-3.336514],[-0.006008],[3.400215],[-5.915239],[9.532423],[-8.922942],[-3.928068],[9.956918],[6.920340],[-8.954850],[6.166152],[4.777256],[-7.914116],[-1.740323],[3.709250],[6.150036],[-6.571492],[0.992799],[-0.042207],[-7.104021],[9.269404],[-1.456238],[4.117550],[4.541142],[3.109769],[3.479171],[-5.141941],[1.733968],[4.598922],[8.409626],[-3.637434],[-0.351575],[-8.579628],[3.060551],[5.969950],[-2.974033],[-4.063289],[-4.770322],[-8.097948],[-3.695134],[-8.458300],[6.909381],[0.581154],[0.003371],[-5.754268],[7.322431],[9.875103],[0.353397],[-4.770729],[-9.174148],[-2.748817],[-8.364030],[-3.285104],[5.625889],[-4.627851],[-3.876593],[6.466676],[-0.495284],[-3.695118],[4.826182],[-7.798589],[-7.993519],[-0.069197],[9.664956],[-8.196809],[-3.622694],[1.830092],[6.819253],[-4.620733],[-7.438117],[-8.005573],[1.592502],[-1.403933],[-4.884647],[3.493617],[0.511901],[5.382759],[-1.325478],[-5.008765],[-5.061945],[6.777877],[6.539696],[3.929978],[-6.627948],[7.470063],[-0.429394],[3.945332],[-5.191433],[9.879919],[3.628109],[-2.622289],[-3.458218],[-3.173951],[-0.055773],[3.863772],[3.471904],[3.938402],[8.833593],[5.366634],[-0.892468],[-8.608109],[-5.417650],[-6.520035],[-0.068555],[-8.923204],[1.322011],[-0.743106],[-4.787634],[-3.520103],[6.961630],[5.645595],[-5.663886],[-9.237137],[8.300618],[-9.928296],[-3.277107],[-4.616230],[-6.498744],[9.529342],[5.767066],[-0.043911],[1.682285],[-1.407241],[9.766921],[-5.191990],[-2.110702],[2.679727],[-7.331355],[-6.616463],[2.762539],[-1.037340],[-9.216924],[0.347223],[6.544253],[1.072360],[-7.033451],[5.086045],[-0.327707],[4.655943],[-9.102299],[6.374876],[3.031208],[-8.593144],[-3.385523],[3.302783],[7.373505],[3.178981],[-6.974754],[-8.025898],[-0.675113],[-2.920878],[-1.226660],[-2.119306],[-6.370216],[-0.184169],[3.715112],[3.487528],[6.991297],[-2.559355],[8.014050],[2.844900],[8.285996],[-0.190049],[7.304707],[-7.779407],[-6.634166],[-5.075232],[-0.828546],[4.109905],[-1.233321],[-7.254573],[5.393113],[-6.798087],[6.203947],[-5.004345],[-1.750101],[0.040913],[1.371862],[-3.870006],[-5.618533],[-9.066388],[6.533646],[4.398186],[6.550877],[-4.149627],[3.876690],[2.296773],[7.903038],[0.939443],[-0.377845],[9.981848],[2.215724],[9.197383],[-8.449609],[-7.212560],[-8.698571],[3.794702],[3.461522],[8.763987],[9.849531],[7.453220],[-8.238680],[-5.114272],[-5.437248],[-1.674605],[2.324625],[-0.997985],[-1.830380],[8.374343],[0.083667],[-3.282816],[-5.739479],[8.316430],[-0.120266],[-1.688652],[8.474727],[-9.533600],[-7.379702],[4.479395],[-5.196676],[-1.950039],[6.858989],[3.411383],[-6.063122],[-5.813360],[-5.666533],[3.081059],[-4.096492],[-8.230908],[1.009255],[-2.232149],[-2.208351],[7.587996],[4.223082],[-0.886028],[-7.187587],[-4.969121],[3.508155],[-9.527437],[-3.758520],[0.184344],[4.070375],[-8.292203],[8.340211],[-2.781580],[7.845190],[0.144739],[-4.541904],[1.823259],[2.591793],[4.495816],[-2.156932],[8.990148],[5.791708],[2.701719],[-2.419864],[-7.128573],[9.644006],[2.384919],[-3.894549],[0.466248],[9.542966],[1.361457],[5.652295],[1.682672],[-0.453720],[1.318801],[-8.505938],[-4.731184],[-1.949456],[-5.800156],[-6.415048],[-0.750788],[2.056970],[1.505988],[1.825843],[9.265803],[2.124997],[-9.269364],[9.871328],[-8.937466],[0.777264],[-7.867451],[-8.656048],[9.515573],[-0.503899],[-5.989510],[5.407782],[-0.347291],[-3.828729],[-5.040887],[9.598763],[-4.750339],[-0.352104],[9.497901],[6.527538],[-4.922350],[5.824843],[-1.144505],[9.974731],[-6.017421],[5.131199],[5.610645],[6.954789],[4.748045],[9.564560],[-8.608334],[-7.745060],[6.266557],[7.192862],[-7.139594],[-3.380557],[1.510561],[-4.602511],[-6.047206],[-0.356165],[6.210070],[0.410711],[-0.002101],[0.411680],[-2.902984],[0.871965],[3.313254],[-1.242340],[-7.108591],[5.106870],[-5.406351],[9.926375],[-5.214934],[6.913648],[-1.403289],[8.712337],[-5.711924],[-2.616887],[-1.073746],[-5.687392],[-4.751073],[6.358795],[8.921127],[-8.948863],[3.294820],[2.312898],[-0.565066],[-6.515177],[-1.824876],[1.109030],[4.697294],[-8.934042],[3.852067],[-0.549565],[-7.715446],[-4.000837],[-7.941992],[-3.235723],[0.163180],[6.621538],[7.399754],[-1.936859],[-5.613582],[-5.373682],[5.509982],[2.744853],[-5.698610],[-4.883097],[-6.473582],[0.219796],[5.311051],[0.481624],[9.871657],[-1.627980],[-2.420392],[-2.813951],[-5.583922],[3.492178],[6.786170],[0.430550],[6.279635],[0.308486],[-2.026105],[4.210513],[-6.163046],[-7.322928],[9.047222],[1.471126],[4.656563],[3.806639],[4.944136],[1.146636],[4.712459],[-5.188379],[-1.834630],[1.055224],[-5.751160],[-8.576305],[-9.415872],[0.958017],[-8.685854],[-3.420551],[0.525179],[6.645715],[9.054862],[2.982047],[-2.762560],[-0.278800],[9.927047],[-5.612939],[-2.219368],[-7.777841],[-1.550653],[-5.261543],[-6.265621],[2.639633],[4.628870],[-7.771061],[8.501136],[1.749512],[0.830284],[2.377430],[-3.453134],[1.338166],[6.901945],[6.878803],[3.793831],[-2.189136],[-1.201688],[-8.622844],[8.075049],[-5.218463],[1.229689],[6.686915],[-7.371073],[-9.366929],[4.494268],[5.719862],[2.825199],[-9.476214],[-6.244843],[9.459467],[6.038751],[0.099949],[-5.516051],[-6.704110],[6.256139],[-3.289969],[-1.710109],[8.275432],[-6.830663],[-3.476097],[6.663820],[0.034992],[-1.576856],[5.850984],[-9.710563],[-5.427524],[8.837942],[8.915079],[9.022782],[0.682856],[-9.529957],[3.274881],[0.781042],[0.501357],[-5.001788],[-2.191241],[7.488434],[4.485950],[2.145121],[-8.170937],[2.679469],[1.845405],[-1.716636],[-4.933416],[-9.821387],[-7.787217],[1.809131],[9.370056],[-9.937027],[-0.728836],[-3.964911],[7.367635],[9.076562],[0.159658],[5.046172],[-6.682973],[-8.682576],[4.342560],[-0.252162],[-3.401743],[3.213966],[-4.001527],[2.871828],[-0.997783],[-2.564280],[-4.431185],[4.965956],[4.619499],[-3.514031],[2.191564],[-9.319641],[-0.195556],[2.241544],[-5.641149],[4.139363],[-6.481682],[7.463271],[7.193351],[2.725492],[2.583251],[1.832850],[-7.157143],[3.554461],[2.982652],[0.714313],[6.784462],[-5.655115],[-4.087873],[-0.521052],[1.500770],[-4.329156],[-9.599541],[-5.481098],[-2.036199],[5.759562],[-8.443128],[9.265088],[2.352069],[-0.906065],[0.971603],[2.105469],[1.687211],[-0.255893],[7.567981],[-0.870835],[7.420037],[9.424287],[0.628824],[9.933398],[1.205382],[0.014030],[6.684488],[-3.925432],[0.588454],[7.700191],[-8.885325],[7.554273],[-1.496299],[-3.058411],[-7.849031],[3.425548],[2.661999],[-8.746460],[-9.108027],[-0.927756],[-7.780619],[1.731789],[-5.581064],[8.523335],[-7.484795],[-0.529627],[7.020169],[2.206306],[-8.390747],[-1.795835],[-7.475826],[-7.320483],[-3.667048],[-5.445828],[-8.710490],[-8.579031],[-3.737636],[5.456772],[1.699764],[-2.270616],[3.619309],[2.672646],[5.187239],[1.988548],[-2.830236],[-1.880998],[7.380632],[-4.646602],[8.306398],[-2.639138],[6.608247],[7.982277],[8.652257],[-9.851004],[4.497426],[-5.866584],[-3.258430],[8.639660],[-9.460033],[7.591977],[-9.370874],[-5.625353],[-0.646128],[8.393729],[2.097452],[4.461124],[-9.791081],[4.860286],[0.493923],[1.226185],[-8.626440],[-2.622545],[5.783559],[-0.014292],[-1.879518],[-1.683573],[-3.045187],[-4.381236],[4.357470],[-0.960018],[8.516435],[1.502901],[-0.779257],[5.444823],[-5.386332],[-8.823631],[5.605505],[5.931365],[3.363005],[-3.181824],[5.281245],[-3.989432],[2.102136],[-8.372999],[6.558907],[-3.751276],[5.844915],[-1.418678],[-4.813368],[5.151936],[-0.590816],[2.609163],[-6.684847],[-8.587149],[3.275107],[6.075318],[8.654257],[-5.243240],[-8.339861],[5.235173],[0.811508],[4.758174],[4.686031],[6.536493],[6.183336],[2.631825],[-2.895934],[0.956163],[4.402201],[-5.544835],[3.383178],[-2.277069],[-5.877634],[9.751863],[8.933158],[-7.777865],[-6.900234],[1.902327],[6.755861],[6.269540],[-4.081642],[8.783718],[-8.958001],[8.044400],[-8.231530],[-2.226143],[-7.585472],[1.435090],[6.260940],[5.973916],[8.147612],[7.142481],[4.626514],[-7.794253],[6.663039],[-4.201169],[-2.398918],[9.694155],[-5.190746],[-9.423616],[-5.227150],[-6.663867],[9.117249],[4.906306],[3.183366],[-4.509087],[-9.234003],[-0.223649],[-1.015607],[9.333450],[6.998749],[8.273349],[4.041902],[-9.351680],[-5.744170],[-0.161248],[0.456779],[3.053961],[-9.924720],[2.067630],[4.442429],[1.906533],[7.387395],[-3.163519],[-8.947143],[-0.732810],[5.853596],[2.434855],[-9.710847],[-4.775710],[-5.416733],[3.885872],[-2.785276],[1.385417],[-1.206670],[-8.134474],[-6.159675],[2.047575],[6.236679],[5.175292],[0.913306],[3.726020],[-6.538465],[9.846360],[-8.231446],[0.869354],[7.482934],[-2.970955],[8.787155],[-7.517213],[-2.700296],[3.323544],[-2.382488],[0.164714],[-6.379403],[5.056545],[-9.980933],[-2.403541],[1.326554],[0.577911],[-6.962706],[3.120207],[5.188655],[1.789515],[9.204815],[-9.127627],[-1.808789],[-1.106027],[5.073449],[-8.317450],[-4.919937],[7.899109],[8.836528],[1.118194],[-1.824402],[-8.355201],[9.541638],[-5.593864],[-8.739430],[7.520575],[7.135695],[3.344901],[-1.250988],[3.437044],[1.299585],[5.706209],[0.850124],[-3.703812],[4.539764],[-4.609811],[-9.529756],[-6.960802],[-6.888780],[0.598595],[-8.867754],[-9.036322],[-1.548270],[8.715930],[8.386286],[-0.703315],[-0.330044],[-2.050596],[2.546887],[-9.150873],[4.500259],[-2.725240],[-6.763181],[0.592021],[4.830078],[6.470334],[-6.121859],[3.858587],[2.015737],[2.542746],[4.975684],[-2.998223],[6.439809],[-4.101495],[9.717505],[8.613796],[9.062868],[5.038128],[-0.281121],[-1.386572],[2.796321],[6.537136],[5.309780],[-6.460793],[3.985767],[3.063561],[-4.049161],[9.329402],[-5.477017],[-8.571720],[-6.006758],[-3.535440],[9.623409],[3.342752],[2.604424],[7.040027],[2.685579],[-5.598882],[1.808021],[-7.117904],[-5.659807],[-0.219366],[7.597691],[-7.251628],[5.107412],[2.674765],[3.753540],[7.924941],[1.851787],[-1.385234],[-7.240451],[5.012334],[3.169529],[-4.981124],[6.327450],[4.429774],[-5.273544],[-5.965924],[5.660683],[7.723163],[6.752431],[0.008579],[4.539515],[9.196097],[4.833064],[0.825217],[3.123912],[-6.735538],[-1.539270],[7.574002],[1.530242],[2.360203],[-1.936098],[9.233159],[-3.036106],[-8.241437],[5.678257],[-2.158332],[-5.030001],[-2.212151],[-1.948076],[4.531506],[-2.890370],[-6.029246],[-0.762562],[-4.053629],[-5.282719],[2.560425],[0.464432],[5.455084],[-8.573292],[8.257028],[4.005300],[-1.900903],[7.841681],[2.590963],[-7.966763],[0.831876],[-8.373014],[7.052891],[-2.501767],[-7.635624],[4.729853],[2.129934],[-8.724652],[-8.568150],[0.824078],[1.688702],[-5.077840],[-9.809668],[-1.946272],[4.931677],[7.598061],[3.170056],[-7.753203],[-3.392079],[2.642622],[3.959935],[3.865042],[5.294715],[8.182471],[-7.491415],[-3.042542],[7.627099],[8.723831],[-4.927820],[-6.500824],[-9.761700],[7.328987],[7.751604],[-8.821764],[-4.049561],[3.014382],[-5.252833],[-8.072225],[-3.454072],[1.775840],[-3.918559],[-1.636646],[-4.125880],[-6.757565],[9.273720],[-2.659966],[-5.743322],[-4.483975],[5.648772],[1.456834],[-1.915170],[-1.373595],[3.201869],[-4.671812],[-2.860797],[-3.799344],[2.058051],[6.173461],[-0.222297],[4.641859],[-0.951570],[9.545326],[7.465986],[-8.558495],[-9.375029],[-3.432999],[-6.392520],[4.725149],[1.228953],[-2.066529],[-2.721321],[1.871065],[9.548124],[4.515965],[-1.060861],[-1.404952],[6.022216],[6.345011],[6.808757],[0.196962],[3.307248],[-8.078328],[-4.491800],[-4.679098],[3.705351],[-7.244442],[1.724205],[-8.638480],[-4.367713],[6.061321],[-4.110844],[1.391512],[8.294710],[-0.217608],[-3.125715],[9.868937],[2.411805],[-9.603817],[1.934714],[2.724047],[3.336192],[-0.702168],[3.721102],[8.836648],[2.282640],[-9.094196],[-4.038622],[2.557137],[-7.952202],[-1.971040],[0.048313],[9.803396],[8.453903],[8.827135],[-0.092133],[-8.929268],[-7.553057],[-4.795013],[4.127973],[7.056938],[-3.970437],[-2.304146],[3.185110],[7.161356],[1.705291],[-1.921814],[9.890199],[3.639171],[7.271994],[0.668217],[2.011817],[4.541277],[8.273865],[-5.738655],[-0.130161],[0.080965],[0.211837],[8.826324],[0.159164],[6.998141],[6.792084],[5.312123],[1.759735],[3.960822],[2.961829],[-6.724874],[-0.355216],[-1.237402],[0.081292],[-3.470599],[-6.861882],[0.105719],[5.447434],[-4.334546],[5.232263],[0.554010],[-8.409296],[2.262140],[0.891398],[-2.088971],[1.336144],[-8.443996],[3.705149],[8.334715],[5.590265],[-1.049407],[6.055389],[9.860001],[-4.486150],[5.128736],[8.717456],[-5.495379],[-2.500223],[2.697167],[2.724605],[-1.453866],[-0.356893],[-8.286525],[-1.082939],[5.392128],[-0.786030],[8.236355],[0.846101],[-1.187472],[3.902052],[6.854757],[4.106512],[-7.596381],[8.826176],[4.946047],[1.661131],[5.530640],[-7.188088],[8.503788],[-2.452538],[-3.309927],[-8.804628],[-5.238163],[0.446880],[-7.302312],[3.236196],[7.892481],[8.807177],[-6.360449],[-1.608200],[2.355039],[7.504138],[9.108800],[7.511814],[-3.678569],[6.245317],[-7.255718],[5.154460],[1.840165],[7.881443],[9.823795],[9.637508],[1.567977],[-6.233260],[3.236919],[-9.532347],[-9.582985],[-6.718000],[3.340432],[3.354459],[0.364846],[1.886655],[-8.797789],[-4.615062],[8.389167],[1.317320],[-9.482735],[0.037129],[-1.950975],[7.760611],[-6.845884],[-9.528760],[-4.857284],[8.878350],[-6.489219],[0.648125],[1.952068],[0.268805],[1.047939],[-2.832072],[-2.381003],[5.277184],[-6.560704],[-8.545773],[-2.538963],[0.207225],[5.221692],[-5.769135],[-1.480691],[-4.903724],[-0.274647],[-5.450382],[-9.174117],[3.066275],[4.111314],[-1.808432],[-9.434823],[1.350100],[-1.792510],[1.381880],[1.622846],[-2.419056],[-2.201781],[-9.175066],[-6.037623],[-3.679179],[8.724582],[-9.301426],[-4.416495],[2.544396],[5.191443],[6.721193],[-0.208687],[8.289873],[9.078064],[1.148233],[8.467364],[4.741090],[-3.100324],[-0.654777],[-6.096918],[1.124598],[3.827282],[6.968934],[-0.117497],[7.196728],[-6.641112],[9.826528],[7.731268],[-6.962843],[7.505976],[-7.007515],[8.233953],[-3.830414],[3.129456],[-2.800415],[9.940813],[2.425320],[1.061905],[3.377375],[-5.405505],[-0.095373],[7.870074],[2.031591],[-0.620169],[9.742709],[6.847022],[-9.552963],[-7.998099],[6.459706],[5.663543],[3.706269],[5.244183],[8.610498],[-9.823460],[-4.433892],[8.544569],[8.372443],[-3.766447],[-1.780181],[-0.749972],[-8.543131],[3.031680],[-1.779939],[-5.967818],[9.392572],[6.690812],[-5.835325],[-8.571485],[-7.916843],[-8.848297],[3.514634],[2.739129],[9.595333],[1.233590],[-2.629007],[2.782364],[9.512218],[2.107693],[-3.210216],[0.819836],[6.786631],[7.023898],[-7.604079],[2.560214],[-4.846425],[0.669228],[1.717507],[-5.925576],[9.754512],[-3.991074],[-0.286724],[-8.969737],[-1.546872],[9.127114],[9.448344],[0.246503],[-8.048593],[6.168090],[-6.086109],[0.826879],[-3.760222],[-5.416843],[1.226133],[-0.667820],[-1.204929],[-4.285346],[7.380153],[-4.516022],[-7.279696],[-1.459402],[1.021345],[-3.084308],[-4.843440],[-4.215452],[-7.872834],[8.505261],[-8.553029],[-8.295635],[7.321565],[-5.556058],[-2.424305],[-4.601631],[-5.579210],[6.862534],[-6.993653],[-0.120938],[8.494166],[1.602636],[-4.508924],[-3.646355],[0.269356],[-9.280299],[0.141292],[6.409309],[0.257084],[-8.688179],[-5.794446],[8.046212],[-4.924427],[5.485538],[5.289220],[-6.853042],[-3.661690],[-9.590095],[5.813512],[4.074756],[7.692920],[-9.003459],[5.396918],[1.486355],[-7.799597],[-8.954864],[-4.299638],[9.144134],[-3.953316],[3.826935],[-5.484301],[4.643659],[-8.086326],[-6.630316],[-6.335288],[-0.935910],[1.664258],[2.780514],[5.299172],[6.496766],[-1.367944]], dtype = "float32")#candidate|5816|(1872, 1)|const|float32
call_5815 = relay.TupleGetItem(func_3244_call(relay.reshape(const_5816.astype('float32'), [1872,])), 3)
call_5817 = relay.TupleGetItem(func_3246_call(relay.reshape(const_5816.astype('float32'), [1872,])), 3)
output = relay.Tuple([uop_5813,call_5815,const_5816,])
output2 = relay.Tuple([uop_5813,call_5817,const_5816,])
func_5820 = relay.Function([var_5812,], output)
mod['func_5820'] = func_5820
mod = relay.transform.InferType()(mod)
var_5821 = relay.var("var_5821", dtype = "float32", shape = (13, 15, 2))#candidate|5821|(13, 15, 2)|var|float32
output = func_5820(var_5821)
func_5822 = relay.Function([var_5821], output)
mutated_mod['func_5822'] = func_5822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3531_call = mod.get_global_var('func_3531')
func_3533_call = mutated_mod.get_global_var('func_3533')
call_5834 = relay.TupleGetItem(func_3531_call(), 0)
call_5835 = relay.TupleGetItem(func_3533_call(), 0)
output = relay.Tuple([call_5834,])
output2 = relay.Tuple([call_5835,])
func_5848 = relay.Function([], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5848_call = mutated_mod.get_global_var('func_5848')
call_5849 = func_5848_call()
output = call_5849
func_5850 = relay.Function([], output)
mutated_mod['func_5850'] = func_5850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1798_call = mod.get_global_var('func_1798')
func_1800_call = mutated_mod.get_global_var('func_1800')
call_5851 = relay.TupleGetItem(func_1798_call(), 0)
call_5852 = relay.TupleGetItem(func_1800_call(), 0)
uop_5858 = relay.erf(call_5851.astype('float32')) # shape=(6, 7, 7)
uop_5860 = relay.erf(call_5852.astype('float32')) # shape=(6, 7, 7)
output = uop_5858
output2 = uop_5860
func_5863 = relay.Function([], output)
mod['func_5863'] = func_5863
mod = relay.transform.InferType()(mod)
output = func_5863()
func_5864 = relay.Function([], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2265_call = mod.get_global_var('func_2265')
func_2266_call = mutated_mod.get_global_var('func_2266')
call_5885 = relay.TupleGetItem(func_2265_call(), 0)
call_5886 = relay.TupleGetItem(func_2266_call(), 0)
output = relay.Tuple([call_5885,])
output2 = relay.Tuple([call_5886,])
func_5891 = relay.Function([], output)
mod['func_5891'] = func_5891
mod = relay.transform.InferType()(mod)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5891_call = mutated_mod.get_global_var('func_5891')
call_5892 = func_5891_call()
output = call_5892
func_5893 = relay.Function([], output)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mod.get_global_var('func_4313')
func_4315_call = mutated_mod.get_global_var('func_4315')
call_5954 = relay.TupleGetItem(func_4313_call(), 3)
call_5955 = relay.TupleGetItem(func_4315_call(), 3)
output = call_5954
output2 = call_5955
func_5956 = relay.Function([], output)
mod['func_5956'] = func_5956
mod = relay.transform.InferType()(mod)
mutated_mod['func_5956'] = func_5956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5956_call = mutated_mod.get_global_var('func_5956')
call_5957 = func_5956_call()
output = call_5957
func_5958 = relay.Function([], output)
mutated_mod['func_5958'] = func_5958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5747_call = mod.get_global_var('func_5747')
func_5749_call = mutated_mod.get_global_var('func_5749')
call_5959 = relay.TupleGetItem(func_5747_call(), 1)
call_5960 = relay.TupleGetItem(func_5749_call(), 1)
output = relay.Tuple([call_5959,])
output2 = relay.Tuple([call_5960,])
func_5962 = relay.Function([], output)
mod['func_5962'] = func_5962
mod = relay.transform.InferType()(mod)
mutated_mod['func_5962'] = func_5962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5962_call = mutated_mod.get_global_var('func_5962')
call_5963 = func_5962_call()
output = call_5963
func_5964 = relay.Function([], output)
mutated_mod['func_5964'] = func_5964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5185_call = mod.get_global_var('func_5185')
func_5186_call = mutated_mod.get_global_var('func_5186')
call_5965 = relay.TupleGetItem(func_5185_call(), 1)
call_5966 = relay.TupleGetItem(func_5186_call(), 1)
output = relay.Tuple([call_5965,])
output2 = relay.Tuple([call_5966,])
func_5980 = relay.Function([], output)
mod['func_5980'] = func_5980
mod = relay.transform.InferType()(mod)
mutated_mod['func_5980'] = func_5980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5980_call = mutated_mod.get_global_var('func_5980')
call_5981 = func_5980_call()
output = call_5981
func_5982 = relay.Function([], output)
mutated_mod['func_5982'] = func_5982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_6016 = relay.TupleGetItem(func_4739_call(), 2)
call_6017 = relay.TupleGetItem(func_4740_call(), 2)
output = call_6016
output2 = call_6017
func_6030 = relay.Function([], output)
mod['func_6030'] = func_6030
mod = relay.transform.InferType()(mod)
mutated_mod['func_6030'] = func_6030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6030_call = mutated_mod.get_global_var('func_6030')
call_6031 = func_6030_call()
output = call_6031
func_6032 = relay.Function([], output)
mutated_mod['func_6032'] = func_6032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_6069 = relay.TupleGetItem(func_1537_call(), 0)
call_6070 = relay.TupleGetItem(func_1538_call(), 0)
output = relay.Tuple([call_6069,])
output2 = relay.Tuple([call_6070,])
func_6080 = relay.Function([], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6080_call = mutated_mod.get_global_var('func_6080')
call_6081 = func_6080_call()
output = call_6081
func_6082 = relay.Function([], output)
mutated_mod['func_6082'] = func_6082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5526_call = mod.get_global_var('func_5526')
func_5527_call = mutated_mod.get_global_var('func_5527')
call_6086 = func_5526_call()
call_6087 = func_5526_call()
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_6094 = relay.TupleGetItem(func_3046_call(), 1)
call_6095 = relay.TupleGetItem(func_3048_call(), 1)
func_4739_call = mod.get_global_var('func_4739')
func_4740_call = mutated_mod.get_global_var('func_4740')
call_6097 = relay.TupleGetItem(func_4739_call(), 3)
call_6098 = relay.TupleGetItem(func_4740_call(), 3)
output = relay.Tuple([call_6086,call_6094,call_6097,])
output2 = relay.Tuple([call_6087,call_6095,call_6098,])
func_6112 = relay.Function([], output)
mod['func_6112'] = func_6112
mod = relay.transform.InferType()(mod)
output = func_6112()
func_6113 = relay.Function([], output)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_6173 = relay.TupleGetItem(func_3749_call(), 0)
call_6174 = relay.TupleGetItem(func_3751_call(), 0)
output = relay.Tuple([call_6173,])
output2 = relay.Tuple([call_6174,])
func_6195 = relay.Function([], output)
mod['func_6195'] = func_6195
mod = relay.transform.InferType()(mod)
mutated_mod['func_6195'] = func_6195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6195_call = mutated_mod.get_global_var('func_6195')
call_6196 = func_6195_call()
output = call_6196
func_6197 = relay.Function([], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6218 = relay.var("var_6218", dtype = "float64", shape = (14, 12, 15))#candidate|6218|(14, 12, 15)|var|float64
uop_6219 = relay.log2(var_6218.astype('float64')) # shape=(14, 12, 15)
output = uop_6219
output2 = uop_6219
func_6225 = relay.Function([var_6218,], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
var_6226 = relay.var("var_6226", dtype = "float64", shape = (14, 12, 15))#candidate|6226|(14, 12, 15)|var|float64
output = func_6225(var_6226)
func_6227 = relay.Function([var_6226], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6270 = relay.const([[[5.178885,6.110122,8.892567,-9.151856,-9.563412,6.612545,7.393536,5.255767,-4.383418,-6.980611,5.234671,-5.613395,7.934224,-1.960150],[-1.477774,-9.664592,-3.351676,-1.663190,8.290569,9.335659,-4.773593,-8.524349,-6.043896,9.254692,-8.411641,9.740632,7.565176,-1.281778],[-1.979097,-6.911799,-7.007483,6.854474,7.104364,-7.496459,-2.803209,-0.358372,-8.726625,-0.072359,-1.229484,0.538066,5.426084,-5.513385],[-6.163124,8.534810,-2.461984,7.700096,-1.332351,8.378986,-4.437246,-5.378169,6.742453,-6.265296,5.868490,0.952076,-7.896222,-1.319914],[8.878501,-7.157148,4.154148,-7.332711,-6.394678,-7.130898,-7.444400,-5.756150,-5.088480,4.498505,3.133361,5.854417,-2.014161,7.254323],[-5.076244,-1.665641,-7.226235,7.694232,-1.533668,3.840430,-7.834995,7.176900,8.184303,3.566532,-9.954256,-4.473260,-7.723812,7.340705],[-5.323798,-7.832351,-7.098132,-5.935154,9.783687,4.807247,6.081494,-4.422987,-0.144014,8.887899,5.581655,9.436713,2.753751,-2.745195],[-6.065581,8.486448,-4.650631,3.965800,-3.993585,5.084593,4.689430,-0.290818,-2.454820,-7.006304,-9.692443,-4.891287,3.693195,-9.344329],[0.863535,-7.232089,-2.723078,-4.632633,9.260390,9.402597,9.488712,-4.338096,5.864815,-7.531084,6.253069,1.794100,-9.384841,-1.470611],[5.851761,-1.490216,8.793598,-3.522561,-5.905398,-8.247770,-6.941873,-1.742357,-1.392934,1.243204,5.086001,9.705532,-4.096941,-3.250220],[3.470676,-9.796692,8.494147,9.715241,-2.389884,-6.824424,3.031362,-5.904454,6.624599,7.576896,7.781584,9.901553,-3.608877,-1.606924],[5.335580,4.813089,5.839265,-8.259554,6.129594,3.113202,5.149576,-3.604624,-3.610351,5.645688,6.209212,9.559817,1.936176,2.820059]],[[-7.338796,-3.857909,7.562121,-3.450639,-7.217165,7.069203,-6.990683,4.498845,4.757282,-4.398414,-3.150420,0.775359,4.942097,6.585220],[9.413918,-4.486973,-0.991081,-9.276465,2.766074,-7.600269,7.451779,2.365341,-9.321785,2.808134,-8.527642,4.621696,5.404668,9.301263],[7.627414,2.596611,7.141791,-9.558484,8.543913,2.649953,3.134220,-1.550621,-3.035107,8.518307,-7.250902,-0.557327,-8.496588,9.535312],[-5.281987,-0.743650,7.063600,-6.431796,-3.164082,-4.083453,9.635163,-8.785965,8.899323,7.145656,-0.089529,-0.600196,-8.996085,9.597795],[-4.751847,-9.428551,2.881729,2.289285,7.608460,-4.018712,-1.213984,0.282402,-5.136181,1.523539,-0.387018,5.453499,7.898608,9.405318],[-9.687539,-5.285503,5.638006,0.399710,-5.949871,-6.973477,1.605874,7.337426,5.884601,9.171385,-5.411229,-9.693118,-1.660233,7.641398],[6.614052,7.737587,5.929732,7.512874,-0.116754,-7.274078,5.001376,-4.661407,3.635410,-5.591114,-9.319197,-3.414529,-0.808193,3.226703],[3.883845,-3.686472,5.321643,-5.081930,-9.359812,-3.761282,6.347882,3.650618,3.327248,2.992610,0.044585,4.915606,1.770022,-1.750536],[-7.260194,-0.782499,-4.425497,2.953140,-6.957407,-3.708520,0.243525,-1.473623,0.908875,7.189496,3.996926,3.357170,-0.106324,4.211716],[8.120826,-5.142558,4.909127,6.642054,6.109460,-2.944918,-6.336897,-9.851709,0.443549,-9.984895,-1.147599,9.080695,-9.265435,-1.351927],[9.848818,2.113952,7.499574,6.691945,-9.307844,-7.213409,3.509351,-3.410090,-1.398481,1.257044,2.139270,-3.914096,0.600262,4.776911],[9.711159,-3.094582,5.540590,0.047860,5.924718,-8.790190,7.173657,-0.158709,6.673162,-1.921262,7.119299,2.372269,-7.278756,4.254437]],[[7.700131,0.540812,-8.601506,4.044720,1.238149,7.816682,4.757260,9.644890,-5.503322,4.696031,-3.160032,6.448090,1.459891,-9.047653],[1.968889,3.177395,-0.579900,5.959213,3.960314,9.864055,3.905661,0.610330,-8.553116,0.511987,-7.532817,-1.840365,-7.327632,3.198052],[-5.913389,6.578960,6.695085,-8.220030,-0.091651,-7.152063,-1.639114,-7.450022,-2.786391,9.180609,-4.493635,-3.829866,5.950862,9.840976],[-6.663989,-7.520264,-8.566811,-5.173731,-2.091501,-5.606512,-6.116364,-5.805181,-4.713957,-7.361194,2.490670,8.056627,-8.076790,-9.226368],[-7.825774,-6.583904,-5.403460,6.019194,-6.500119,-8.285700,-3.579193,0.222144,-4.013183,2.256497,6.961319,0.272172,9.870812,-6.135577],[-8.025977,-9.755143,6.195882,-7.724223,2.634882,-4.050990,9.365098,-4.573759,2.674202,5.893711,-6.839008,-2.599026,-6.569658,-5.979650],[-2.146251,-7.081042,7.659871,3.799387,4.724317,7.962567,3.177172,-9.786199,-2.361648,-0.750583,0.620762,5.712235,7.894108,6.850655],[-3.965898,1.556355,-9.925246,6.891089,-3.615130,-0.286008,-0.933044,-2.137328,-0.089670,0.203070,-9.882975,-6.950822,6.371780,8.066235],[-2.270236,-3.649164,-3.114422,0.274603,9.385892,-0.750643,-3.562502,9.799629,-1.241083,-1.001648,6.180921,-9.501376,-8.073175,4.415498],[-5.029969,-2.111185,0.318886,7.299624,-8.998683,-2.032835,-3.446123,-6.853989,-6.135109,7.810508,7.056829,2.384898,0.724385,-9.140290],[-6.326823,3.249448,-1.723418,9.186760,5.945813,7.847800,-4.765510,4.133268,5.800586,1.473499,-7.947222,-4.762118,-7.978796,-2.298544],[7.092084,1.908249,-4.507485,8.248644,-3.387890,-1.388133,6.420804,-3.718505,6.368426,-9.247567,9.048253,-4.814857,3.822895,8.029061]],[[-8.342863,9.945128,0.095503,-0.561933,-0.458688,-5.888640,-1.501895,-3.665220,6.209848,2.256605,-1.378400,6.580506,8.357868,0.804732],[-0.813400,8.300419,-6.363296,1.117714,9.135699,7.796203,6.448255,6.637649,-7.168716,8.911744,-4.550517,5.857550,2.278009,-4.376618],[-3.817906,4.211654,-7.409768,-5.322130,2.391274,-2.205039,5.698858,-2.583259,-2.954938,-0.246204,6.969293,-0.209473,7.168862,2.705234],[-0.786655,3.953723,3.406226,1.514555,3.433741,3.378353,4.784800,-5.770233,2.594411,6.962065,-9.307959,7.837868,-1.440860,9.240259],[6.248975,-6.233854,-2.915561,-0.379015,-5.590220,1.468189,0.329005,-5.078405,4.261046,6.393034,-7.995745,-9.885501,7.876406,-6.779777],[3.612007,3.239135,-6.038181,-9.714177,3.546746,5.340286,-2.781361,-7.935457,0.141343,3.098052,1.324128,2.148024,7.905915,-2.507019],[0.129913,-4.524097,-3.763948,1.956450,0.050919,2.140141,4.992521,-4.974982,5.499139,4.183228,-5.600146,5.527687,-9.683961,9.211421],[-9.568644,-0.497259,-2.114402,-7.554527,-5.764036,-5.761776,7.730249,-6.569090,-8.865284,1.396739,2.608107,-1.836570,1.322527,3.366339],[-6.273223,8.209820,-5.164262,3.742651,0.951501,1.991529,5.229303,2.940570,2.118344,7.832745,8.325784,-1.569999,-9.588398,-2.139561],[-0.737730,5.786698,-2.514704,-1.293865,-5.703063,8.038446,3.509245,0.052716,-5.395802,-4.212015,-2.730911,1.139672,-6.890841,2.760482],[-9.124729,-7.647666,7.869526,-6.565671,-1.366355,6.721454,-0.333877,-0.100965,1.143507,-8.600706,6.693647,-9.302283,0.389552,9.580676],[2.869637,-2.754682,-3.774379,-9.137155,-1.216815,1.553360,9.979636,7.742153,6.775011,-0.664969,2.139479,3.689011,6.093551,-8.378228]],[[4.357806,-5.372791,-1.521682,6.135376,1.365160,6.822522,-6.319916,-7.944483,6.881505,4.306673,-5.632232,9.809829,-8.594638,-0.588345],[-9.130296,-0.575212,-6.694648,-6.911689,3.538476,3.962184,-7.355369,-7.819174,9.604481,-3.903011,-1.019999,0.566765,7.390232,-5.270610],[5.102333,5.127288,-2.423969,-6.798042,-3.691170,4.218531,-5.493848,-2.784759,3.938966,2.071560,-8.447214,3.562833,6.225543,2.982228],[-9.907987,-5.304144,-3.146926,4.471400,-2.072723,6.209634,6.493885,-3.211079,8.178336,-2.093232,-0.695930,4.601957,4.720954,7.768263],[2.133488,-3.569028,8.425960,-0.812781,-6.368792,-7.402292,0.308405,-2.417432,-9.267413,-5.249245,4.039620,7.638611,-1.551208,-5.428542],[0.618341,-6.161690,-5.705939,-9.274480,9.328199,5.548666,1.921599,-3.114358,1.028635,8.077937,-8.408924,5.272064,-9.292775,8.722721],[3.495630,-1.178786,5.354881,-8.521904,7.958557,3.146409,5.512154,6.794954,-8.382957,1.871366,-2.816238,-0.012250,-7.924100,-7.276292],[-6.959393,5.219938,-6.299579,-1.686354,-0.657142,5.815733,-5.161449,-5.294146,-9.598052,-6.155605,-7.867972,-6.360470,-6.602027,0.339611],[1.900762,6.401820,0.835627,2.837361,-8.547631,8.578939,-1.596258,8.726400,-7.833388,-0.568145,9.443966,6.190927,-9.641280,-5.681103],[-5.810839,5.729973,2.960601,0.022690,1.070483,-4.213942,2.124152,-2.620042,8.414404,-2.907510,-0.125061,-2.284819,3.071379,5.463268],[3.765616,-6.539635,0.119174,5.281220,-9.906875,5.802569,-0.354916,0.857369,5.480466,5.334154,8.560587,-2.133582,0.318287,8.263378],[1.792601,-5.532479,-2.227589,-5.093758,3.010855,7.089851,0.774426,6.758689,-2.451668,2.928999,1.560262,-3.867433,-3.002641,-2.902392]],[[6.547089,-8.246492,-9.733828,-2.702152,6.279379,-1.975901,-8.355980,-7.932527,-3.005383,7.071997,-0.780551,-4.919258,-4.805167,1.637558],[-7.595294,-2.099661,9.279805,-5.074588,5.056594,9.761333,9.739345,1.311074,0.128436,5.384798,-2.064010,-7.408779,8.294394,-5.159047],[-4.790946,-1.028308,7.334713,-1.277068,9.424286,-7.743582,8.103737,4.302289,3.286635,9.746109,-6.493302,-7.658600,5.560878,-2.911258],[5.060284,-9.435600,-9.143996,-1.233360,1.485436,-3.996829,2.318211,-0.272435,-6.592944,-2.270979,-8.181627,-0.428590,-5.609701,0.372294],[-0.685236,3.474215,-4.575800,7.465635,-4.248554,-4.749687,-0.518303,7.271019,4.725760,1.178411,3.916386,0.235816,7.567809,6.548329],[-3.414974,0.317137,-9.486507,2.264663,9.046080,8.691012,-7.258308,3.551767,-1.362043,3.559187,-8.919740,-1.249366,-7.838272,-2.220069],[0.014770,5.297783,-6.294914,-3.386511,2.052882,-6.590149,-7.738193,6.622757,3.798959,-6.831987,5.485400,-9.520829,-5.409749,8.100965],[-9.857230,-0.803472,3.235584,-1.749068,-4.135684,-7.861406,-1.229030,-7.995523,-1.779336,5.212493,1.240568,-2.811453,1.962879,-7.440266],[1.595201,-9.356625,5.478673,3.949699,8.834339,5.608318,4.682288,4.120039,-5.656281,-0.698985,3.785919,-4.623256,9.423591,1.971058],[9.588892,-9.447481,-7.262382,0.655874,9.767473,-6.766316,-3.011233,2.405228,-2.604132,5.328500,-0.817358,2.300066,3.799270,-9.292585],[-2.237490,-0.054465,-0.623885,-2.304408,5.444934,-1.206098,1.759643,0.441630,-0.461559,7.758135,-5.347848,8.705575,-1.106133,-6.892558],[0.893825,0.748781,2.522042,2.459995,-3.449069,-0.556934,0.512305,9.674709,4.809203,-7.571737,9.589204,-6.315510,-5.283381,-2.338156]],[[8.136592,2.246192,-0.378379,-3.244960,-6.144789,4.741778,-9.424979,-3.473177,-9.496311,-0.385317,2.826215,-6.715886,-6.075887,-0.691262],[-0.788794,5.656746,6.554274,-9.088464,8.605956,2.257785,8.259299,9.145408,-3.071807,6.780577,1.394116,5.185387,2.070286,2.988586],[-3.397729,-2.858974,-2.360288,-7.951150,-8.870150,9.844982,-7.230037,8.092707,4.542295,8.307343,2.825595,4.877128,-6.396343,4.677168],[-5.785048,1.151284,-7.732578,2.676762,2.034238,-2.319281,8.504051,-7.666545,7.931368,3.129924,-0.484242,-3.528493,9.931704,-1.464169],[-2.649866,1.162601,-6.060227,-2.492812,0.444673,6.160353,3.547966,-1.427452,-7.744427,-1.605281,7.038688,-4.365836,-9.430434,0.728976],[-8.695902,6.656613,1.656035,0.250957,9.597332,-2.496284,-1.742248,-6.750347,6.664808,-3.639003,0.945551,1.704031,-5.035596,-2.964958],[4.804323,-8.564414,7.230639,-4.744239,9.853524,-5.526355,9.874518,7.210686,-3.596942,-4.736897,-3.262070,2.667778,9.105459,-6.990342],[4.706419,2.834733,-6.190052,-9.548056,8.849665,-6.780491,7.619564,-7.560111,0.487538,-3.338366,1.352694,-7.478613,7.399562,5.902459],[-9.184873,-8.139803,-8.821944,-3.582206,2.630885,-0.972014,-6.470951,3.368837,1.688674,-4.063062,6.254436,-1.716356,6.855623,2.612482],[0.835653,-2.386631,-3.243546,5.308605,-8.555186,-3.545460,-1.355029,-5.946987,3.051620,-8.386546,8.780993,-0.749096,8.481045,9.422723],[2.024991,2.050301,5.204430,-8.345442,-5.769163,-8.985566,-2.877171,3.291303,0.197586,9.501033,8.118328,7.221598,-3.671507,-8.696161],[7.159250,9.353224,-7.397819,1.234920,-8.098456,1.843640,3.625673,9.966491,-4.419386,-8.446210,-6.215838,0.537762,-9.324767,6.244551]]], dtype = "float64")#candidate|6270|(7, 12, 14)|const|float64
var_6271 = relay.var("var_6271", dtype = "float64", shape = (7, 12, 14))#candidate|6271|(7, 12, 14)|var|float64
bop_6272 = relay.divide(const_6270.astype('float64'), relay.reshape(var_6271.astype('float64'), relay.shape_of(const_6270))) # shape=(7, 12, 14)
bop_6276 = relay.add(const_6270.astype('uint32'), relay.reshape(bop_6272.astype('uint32'), relay.shape_of(const_6270))) # shape=(7, 12, 14)
bop_6284 = relay.multiply(bop_6272.astype('int32'), relay.reshape(bop_6276.astype('int32'), relay.shape_of(bop_6272))) # shape=(7, 12, 14)
output = relay.Tuple([bop_6284,])
output2 = relay.Tuple([bop_6284,])
func_6290 = relay.Function([var_6271,], output)
mod['func_6290'] = func_6290
mod = relay.transform.InferType()(mod)
var_6291 = relay.var("var_6291", dtype = "float64", shape = (7, 12, 14))#candidate|6291|(7, 12, 14)|var|float64
output = func_6290(var_6291)
func_6292 = relay.Function([var_6291], output)
mutated_mod['func_6292'] = func_6292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3017_call = mod.get_global_var('func_3017')
func_3018_call = mutated_mod.get_global_var('func_3018')
call_6340 = relay.TupleGetItem(func_3017_call(), 1)
call_6341 = relay.TupleGetItem(func_3018_call(), 1)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_6350 = relay.TupleGetItem(func_1205_call(), 1)
call_6351 = relay.TupleGetItem(func_1207_call(), 1)
func_2657_call = mod.get_global_var('func_2657')
func_2660_call = mutated_mod.get_global_var('func_2660')
var_6379 = relay.var("var_6379", dtype = "bool", shape = (12, 2))#candidate|6379|(12, 2)|var|bool
var_6380 = relay.var("var_6380", dtype = "bool", shape = (216,))#candidate|6380|(216,)|var|bool
call_6378 = relay.TupleGetItem(func_2657_call(relay.reshape(var_6379.astype('bool'), [6, 1, 4]), relay.reshape(var_6380.astype('bool'), [6, 9, 4]), ), 0)
call_6381 = relay.TupleGetItem(func_2660_call(relay.reshape(var_6379.astype('bool'), [6, 1, 4]), relay.reshape(var_6380.astype('bool'), [6, 9, 4]), ), 0)
output = relay.Tuple([call_6340,call_6350,call_6378,var_6379,var_6380,])
output2 = relay.Tuple([call_6341,call_6351,call_6381,var_6379,var_6380,])
func_6384 = relay.Function([var_6379,var_6380,], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6384_call = mutated_mod.get_global_var('func_6384')
var_6386 = relay.var("var_6386", dtype = "bool", shape = (12, 2))#candidate|6386|(12, 2)|var|bool
var_6387 = relay.var("var_6387", dtype = "bool", shape = (216,))#candidate|6387|(216,)|var|bool
call_6385 = func_6384_call(var_6386,var_6387,)
output = call_6385
func_6388 = relay.Function([var_6386,var_6387,], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6595 = relay.const(-2, dtype = "uint8")#candidate|6595|()|const|uint8
const_6596 = relay.const([[[-1,-8,-5,10,7,5,-8,-1,-3,-2,4,2,-8,8,2,-3]],[[-7,4,6,-1,-1,-4,-7,-3,2,3,1,1,-2,3,7,8]],[[4,7,-7,-2,7,7,-9,-6,6,-10,7,-6,-2,-4,2,-2]],[[8,-8,-10,-7,-6,-10,-5,-7,8,-7,1,-3,-4,-2,2,5]],[[-5,-9,5,9,10,-8,8,7,-5,8,-10,10,1,-10,-6,-5]],[[10,-4,-7,6,-4,2,2,-7,-4,6,7,7,6,3,2,2]],[[1,5,-1,-5,7,-9,9,-9,-1,6,-9,-8,-8,-8,8,-2]],[[-6,-6,10,-3,1,8,-8,-2,10,-8,10,-7,-8,9,-2,2]],[[-8,4,2,-4,7,-2,7,-5,1,-9,1,1,10,5,1,-10]]], dtype = "uint8")#candidate|6596|(9, 1, 16)|const|uint8
bop_6597 = relay.right_shift(const_6595.astype('uint8'), const_6596.astype('uint8')) # shape=(9, 1, 16)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_6602 = relay.TupleGetItem(func_1537_call(), 0)
call_6603 = relay.TupleGetItem(func_1538_call(), 0)
output = relay.Tuple([bop_6597,call_6602,])
output2 = relay.Tuple([bop_6597,call_6603,])
func_6617 = relay.Function([], output)
mod['func_6617'] = func_6617
mod = relay.transform.InferType()(mod)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6617_call = mutated_mod.get_global_var('func_6617')
call_6618 = func_6617_call()
output = call_6618
func_6619 = relay.Function([], output)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5848_call = mod.get_global_var('func_5848')
func_5850_call = mutated_mod.get_global_var('func_5850')
call_6630 = relay.TupleGetItem(func_5848_call(), 0)
call_6631 = relay.TupleGetItem(func_5850_call(), 0)
func_2657_call = mod.get_global_var('func_2657')
func_2660_call = mutated_mod.get_global_var('func_2660')
var_6633 = relay.var("var_6633", dtype = "bool", shape = (24,))#candidate|6633|(24,)|var|bool
const_6634 = relay.const([True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,False], dtype = "bool")#candidate|6634|(216,)|const|bool
call_6632 = relay.TupleGetItem(func_2657_call(relay.reshape(var_6633.astype('bool'), [6, 1, 4]), relay.reshape(const_6634.astype('bool'), [6, 9, 4]), ), 0)
call_6635 = relay.TupleGetItem(func_2660_call(relay.reshape(var_6633.astype('bool'), [6, 1, 4]), relay.reshape(const_6634.astype('bool'), [6, 9, 4]), ), 0)
func_5747_call = mod.get_global_var('func_5747')
func_5749_call = mutated_mod.get_global_var('func_5749')
call_6690 = relay.TupleGetItem(func_5747_call(), 1)
call_6691 = relay.TupleGetItem(func_5749_call(), 1)
output = relay.Tuple([call_6630,call_6632,var_6633,const_6634,call_6690,])
output2 = relay.Tuple([call_6631,call_6635,var_6633,const_6634,call_6691,])
func_6706 = relay.Function([var_6633,], output)
mod['func_6706'] = func_6706
mod = relay.transform.InferType()(mod)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6707 = relay.var("var_6707", dtype = "bool", shape = (24,))#candidate|6707|(24,)|var|bool
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6708 = func_6706_call(var_6707)
output = call_6708
func_6709 = relay.Function([var_6707], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2092_call = mod.get_global_var('func_2092')
func_2093_call = mutated_mod.get_global_var('func_2093')
call_6714 = relay.TupleGetItem(func_2092_call(), 0)
call_6715 = relay.TupleGetItem(func_2093_call(), 0)
func_3669_call = mod.get_global_var('func_3669')
func_3672_call = mutated_mod.get_global_var('func_3672')
var_6744 = relay.var("var_6744", dtype = "int32", shape = ())#candidate|6744|()|var|int32
call_6743 = relay.TupleGetItem(func_3669_call(relay.reshape(var_6744.astype('int32'), [])), 2)
call_6745 = relay.TupleGetItem(func_3672_call(relay.reshape(var_6744.astype('int32'), [])), 2)
output = relay.Tuple([call_6714,call_6743,var_6744,])
output2 = relay.Tuple([call_6715,call_6745,var_6744,])
func_6748 = relay.Function([var_6744,], output)
mod['func_6748'] = func_6748
mod = relay.transform.InferType()(mod)
mutated_mod['func_6748'] = func_6748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6749 = relay.var("var_6749", dtype = "int32", shape = ())#candidate|6749|()|var|int32
func_6748_call = mutated_mod.get_global_var('func_6748')
call_6750 = func_6748_call(var_6749)
output = call_6750
func_6751 = relay.Function([var_6749], output)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5762_call = mod.get_global_var('func_5762')
func_5764_call = mutated_mod.get_global_var('func_5764')
call_6771 = relay.TupleGetItem(func_5762_call(), 0)
call_6772 = relay.TupleGetItem(func_5764_call(), 0)
output = relay.Tuple([call_6771,])
output2 = relay.Tuple([call_6772,])
func_6775 = relay.Function([], output)
mod['func_6775'] = func_6775
mod = relay.transform.InferType()(mod)
mutated_mod['func_6775'] = func_6775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6775_call = mutated_mod.get_global_var('func_6775')
call_6776 = func_6775_call()
output = call_6776
func_6777 = relay.Function([], output)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1407_call = mod.get_global_var('func_1407')
func_1408_call = mutated_mod.get_global_var('func_1408')
call_6826 = relay.TupleGetItem(func_1407_call(), 0)
call_6827 = relay.TupleGetItem(func_1408_call(), 0)
output = relay.Tuple([call_6826,])
output2 = relay.Tuple([call_6827,])
func_6845 = relay.Function([], output)
mod['func_6845'] = func_6845
mod = relay.transform.InferType()(mod)
output = func_6845()
func_6846 = relay.Function([], output)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6080_call = mod.get_global_var('func_6080')
func_6082_call = mutated_mod.get_global_var('func_6082')
call_6883 = relay.TupleGetItem(func_6080_call(), 0)
call_6884 = relay.TupleGetItem(func_6082_call(), 0)
output = call_6883
output2 = call_6884
func_6887 = relay.Function([], output)
mod['func_6887'] = func_6887
mod = relay.transform.InferType()(mod)
output = func_6887()
func_6888 = relay.Function([], output)
mutated_mod['func_6888'] = func_6888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6893 = relay.var("var_6893", dtype = "bool", shape = (15, 6, 12))#candidate|6893|(15, 6, 12)|var|bool
const_6894 = relay.const([[[False,True,False,False,True,False,True,True,True,False,True,False],[True,False,True,True,False,False,True,False,False,False,True,False],[True,True,False,False,False,False,False,True,True,True,True,False],[True,False,True,True,False,False,True,False,False,True,True,True],[True,False,True,True,True,True,False,False,False,False,False,False],[True,False,True,False,True,False,True,True,True,False,False,True]],[[True,True,True,True,False,True,False,False,True,False,True,False],[True,True,False,True,False,False,True,True,True,True,True,False],[True,False,True,False,True,True,False,False,True,True,True,True],[False,False,True,False,False,True,False,True,False,True,False,False],[True,True,True,False,False,True,True,False,True,False,False,False],[False,False,False,True,False,False,False,False,False,False,False,False]],[[True,True,True,True,False,True,False,True,False,True,False,True],[False,True,True,False,True,True,False,True,False,True,False,False],[True,True,False,True,True,True,True,False,False,False,True,False],[True,True,True,True,True,True,False,True,False,True,True,False],[True,False,True,True,True,False,True,False,True,True,True,False],[False,False,False,False,False,True,False,True,True,False,False,False]],[[True,True,True,False,False,True,False,True,True,True,False,False],[True,True,False,False,True,True,False,True,True,False,False,True],[False,False,False,True,False,False,True,False,True,False,False,False],[True,False,True,False,True,False,False,True,True,False,True,False],[True,False,False,False,False,False,True,False,False,True,True,True],[False,False,True,True,True,True,True,False,True,True,True,False]],[[True,True,True,False,False,True,True,True,True,True,False,True],[True,True,False,True,True,True,False,True,False,True,False,True],[False,False,True,True,True,False,False,False,False,True,False,False],[False,True,True,True,False,True,True,True,True,True,True,False],[False,True,True,False,True,True,True,True,True,True,True,False],[True,True,False,True,False,True,True,True,False,True,False,True]],[[False,True,False,True,False,True,True,True,True,False,True,False],[False,True,True,True,False,False,False,True,True,False,True,False],[True,False,True,False,True,True,True,False,True,True,True,True],[True,True,False,False,True,False,False,True,True,True,True,True],[False,True,False,True,True,True,True,True,False,False,True,True],[False,False,True,True,True,True,False,False,False,True,False,True]],[[True,False,True,False,False,False,True,False,True,True,True,False],[True,True,True,True,True,False,False,True,False,False,False,False],[True,True,False,True,False,True,False,True,True,True,True,True],[True,False,True,False,True,True,True,False,False,False,True,True],[True,False,True,True,False,True,True,True,False,False,False,False],[True,False,True,False,False,False,False,True,False,True,False,False]],[[False,True,False,False,True,False,False,False,False,True,False,False],[False,True,True,True,True,True,True,False,True,True,True,True],[True,True,True,False,False,True,False,True,False,False,True,True],[False,True,False,False,False,False,False,True,True,True,False,True],[False,True,True,False,False,False,True,False,True,False,False,False],[True,False,True,True,False,False,True,True,False,True,True,False]],[[True,False,True,False,True,True,True,False,True,True,False,True],[True,True,True,True,False,True,True,True,True,False,True,False],[False,False,True,False,True,False,True,False,False,False,False,False],[False,False,False,True,True,False,False,False,True,False,True,True],[True,False,True,True,False,False,True,True,False,False,True,True],[False,False,True,True,True,True,True,True,True,True,False,False]],[[True,False,True,False,False,False,False,False,True,True,True,True],[True,False,False,True,False,False,False,False,False,True,True,True],[False,False,False,False,True,False,False,False,True,True,True,True],[False,True,True,True,False,False,False,True,False,True,False,False],[True,False,True,True,True,False,True,True,True,True,True,False],[False,False,True,True,True,False,False,True,True,False,False,True]],[[False,True,False,True,False,False,True,True,False,False,False,True],[True,True,False,False,True,False,False,True,False,True,False,True],[True,False,True,False,False,True,True,True,False,True,False,False],[True,True,True,True,False,False,False,True,True,True,True,False],[True,True,True,True,True,True,False,False,False,True,True,False],[True,False,True,True,False,True,False,True,True,True,True,True]],[[True,True,False,True,False,True,True,True,False,True,False,True],[False,True,False,False,False,True,True,True,True,False,True,True],[False,True,True,True,False,False,False,False,True,False,True,False],[True,False,True,True,True,False,True,False,True,True,False,True],[False,True,True,True,False,False,True,False,True,False,True,True],[False,True,True,True,True,False,True,False,True,True,True,False]],[[True,False,False,False,True,True,True,True,False,False,True,False],[False,False,False,True,False,True,True,False,False,False,True,True],[True,True,True,False,False,True,False,True,True,True,True,True],[False,False,False,False,True,True,True,True,True,True,True,True],[True,False,True,True,False,True,True,True,False,False,True,False],[True,False,True,True,True,False,False,True,False,False,True,True]],[[False,False,True,True,False,False,True,True,False,False,False,False],[True,True,False,True,False,True,True,True,True,False,False,False],[False,False,True,True,True,True,False,True,True,True,False,True],[True,True,False,True,False,True,False,True,False,False,True,False],[True,False,False,True,True,False,True,True,True,True,False,False],[False,True,True,True,False,True,True,False,True,True,True,True]],[[False,True,False,True,True,True,True,True,False,True,False,True],[False,True,False,True,False,True,True,False,False,False,False,False],[True,True,False,False,False,False,True,True,True,False,False,True],[True,True,False,True,True,False,False,True,True,True,False,False],[False,True,False,False,True,False,False,False,True,True,True,False],[True,False,True,False,False,True,True,False,False,True,True,True]]], dtype = "bool")#candidate|6894|(15, 6, 12)|const|bool
bop_6895 = relay.logical_or(var_6893.astype('bool'), relay.reshape(const_6894.astype('bool'), relay.shape_of(var_6893))) # shape=(15, 6, 12)
func_2657_call = mod.get_global_var('func_2657')
func_2660_call = mutated_mod.get_global_var('func_2660')
const_6905 = relay.const([False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True], dtype = "bool")#candidate|6905|(24,)|const|bool
var_6906 = relay.var("var_6906", dtype = "bool", shape = (216,))#candidate|6906|(216,)|var|bool
call_6904 = relay.TupleGetItem(func_2657_call(relay.reshape(const_6905.astype('bool'), [6, 1, 4]), relay.reshape(var_6906.astype('bool'), [6, 9, 4]), ), 0)
call_6907 = relay.TupleGetItem(func_2660_call(relay.reshape(const_6905.astype('bool'), [6, 1, 4]), relay.reshape(var_6906.astype('bool'), [6, 9, 4]), ), 0)
func_5577_call = mod.get_global_var('func_5577')
func_5578_call = mutated_mod.get_global_var('func_5578')
call_6918 = func_5577_call()
call_6919 = func_5577_call()
output = relay.Tuple([bop_6895,call_6904,const_6905,var_6906,call_6918,])
output2 = relay.Tuple([bop_6895,call_6907,const_6905,var_6906,call_6919,])
func_6920 = relay.Function([var_6893,var_6906,], output)
mod['func_6920'] = func_6920
mod = relay.transform.InferType()(mod)
mutated_mod['func_6920'] = func_6920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6920_call = mutated_mod.get_global_var('func_6920')
var_6922 = relay.var("var_6922", dtype = "bool", shape = (15, 6, 12))#candidate|6922|(15, 6, 12)|var|bool
var_6923 = relay.var("var_6923", dtype = "bool", shape = (216,))#candidate|6923|(216,)|var|bool
call_6921 = func_6920_call(var_6922,var_6923,)
output = call_6921
func_6924 = relay.Function([var_6922,var_6923,], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5526_call = mod.get_global_var('func_5526')
func_5527_call = mutated_mod.get_global_var('func_5527')
call_6937 = func_5526_call()
call_6938 = func_5526_call()
uop_6941 = relay.log2(call_6937.astype('float64')) # shape=(6, 7, 7)
uop_6943 = relay.log2(call_6938.astype('float64')) # shape=(6, 7, 7)
func_6384_call = mod.get_global_var('func_6384')
func_6388_call = mutated_mod.get_global_var('func_6388')
const_6948 = relay.const([True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False], dtype = "bool")#candidate|6948|(24,)|const|bool
var_6949 = relay.var("var_6949", dtype = "bool", shape = (216,))#candidate|6949|(216,)|var|bool
call_6947 = relay.TupleGetItem(func_6384_call(relay.reshape(const_6948.astype('bool'), [12, 2]), relay.reshape(var_6949.astype('bool'), [216,]), ), 4)
call_6950 = relay.TupleGetItem(func_6388_call(relay.reshape(const_6948.astype('bool'), [12, 2]), relay.reshape(var_6949.astype('bool'), [216,]), ), 4)
func_1205_call = mod.get_global_var('func_1205')
func_1207_call = mutated_mod.get_global_var('func_1207')
call_6955 = relay.TupleGetItem(func_1205_call(), 2)
call_6956 = relay.TupleGetItem(func_1207_call(), 2)
func_453_call = mod.get_global_var('func_453')
func_457_call = mutated_mod.get_global_var('func_457')
var_6967 = relay.var("var_6967", dtype = "float64", shape = (450,))#candidate|6967|(450,)|var|float64
call_6966 = relay.TupleGetItem(func_453_call(relay.reshape(var_6967.astype('float64'), [9, 5, 10]), relay.reshape(var_6967.astype('float64'), [9, 5, 10]), ), 1)
call_6968 = relay.TupleGetItem(func_457_call(relay.reshape(var_6967.astype('float64'), [9, 5, 10]), relay.reshape(var_6967.astype('float64'), [9, 5, 10]), ), 1)
output = relay.Tuple([uop_6941,call_6947,const_6948,var_6949,call_6955,call_6966,var_6967,])
output2 = relay.Tuple([uop_6943,call_6950,const_6948,var_6949,call_6956,call_6968,var_6967,])
func_6980 = relay.Function([var_6949,var_6967,], output)
mod['func_6980'] = func_6980
mod = relay.transform.InferType()(mod)
mutated_mod['func_6980'] = func_6980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6980_call = mutated_mod.get_global_var('func_6980')
var_6982 = relay.var("var_6982", dtype = "bool", shape = (216,))#candidate|6982|(216,)|var|bool
var_6983 = relay.var("var_6983", dtype = "float64", shape = (450,))#candidate|6983|(450,)|var|float64
call_6981 = func_6980_call(var_6982,var_6983,)
output = call_6981
func_6984 = relay.Function([var_6982,var_6983,], output)
mutated_mod['func_6984'] = func_6984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1280_call = mod.get_global_var('func_1280')
func_1282_call = mutated_mod.get_global_var('func_1282')
call_6992 = relay.TupleGetItem(func_1280_call(), 0)
call_6993 = relay.TupleGetItem(func_1282_call(), 0)
func_2265_call = mod.get_global_var('func_2265')
func_2266_call = mutated_mod.get_global_var('func_2266')
call_6996 = relay.TupleGetItem(func_2265_call(), 1)
call_6997 = relay.TupleGetItem(func_2266_call(), 1)
const_7027 = relay.const([[[-4.913220,7.843437,-0.354545,-7.223348,-9.086957,-5.131269,-7.990885],[-6.936001,8.084787,2.244630,1.055950,2.902860,5.647939,-4.096464],[-0.457011,-4.559753,-6.767625,6.994267,-1.291998,7.615754,-8.494967],[-3.997227,2.740687,-0.679161,-1.334286,-2.191275,6.756323,-2.365474],[-9.770145,-1.040850,-6.304758,4.481637,-5.617915,3.113652,-8.361961],[6.232982,1.879612,4.329868,-8.240418,4.404372,-7.394554,-2.665527],[4.587116,-6.857026,-8.863109,-4.100268,8.000130,4.372266,-4.235951]],[[-0.557389,1.329792,4.931007,4.764208,-3.243202,-3.720056,-9.534128],[1.563942,-1.703731,-9.770581,-0.260577,2.663130,4.286212,-9.101838],[-0.382848,-1.503613,7.632496,-0.612278,-0.618287,-2.261761,7.864381],[-9.659918,0.872819,3.548629,-4.763928,-1.541156,-1.963925,6.322575],[1.918613,-7.922782,0.781544,-7.718397,9.678819,1.501448,2.050024],[-1.421501,4.318397,-0.091499,-8.008449,-6.393681,8.506952,-5.488018],[9.503327,-6.091075,4.719644,-7.246671,5.707638,-7.234935,-8.220513]],[[-5.363291,4.420429,-2.480535,1.293347,5.090071,-3.009930,-9.319795],[-6.296339,9.681671,-9.854071,-9.254588,4.664734,-3.396856,-1.608886],[0.426437,8.217936,-4.523992,-8.214563,4.794113,6.408414,2.336935],[-0.345982,-6.104347,-4.585631,-2.282161,9.910661,1.007293,-1.347947],[4.141166,-5.907507,3.070561,-7.221690,-9.991739,-5.861353,-0.732344],[-3.974582,-6.999620,5.515380,9.072349,-8.105280,-4.673142,4.446799],[-7.737269,-1.735390,-9.165157,-9.987795,-4.832040,5.949823,2.384415]],[[-0.238501,1.406339,-4.978486,5.568951,-5.103282,9.428812,0.070083],[-7.215017,0.324721,-1.782661,-0.693125,-5.769179,-9.719858,1.246403],[3.230491,7.304432,-3.474793,-8.783317,-8.159181,-8.763691,7.285957],[-7.900034,-9.888510,4.866805,5.797219,9.176121,-4.635348,4.059317],[-4.207055,-7.959808,8.936894,4.715377,-2.324998,-5.515548,3.216974],[-3.220678,3.069737,9.353816,1.244346,3.553944,-3.679468,6.523146],[5.712977,3.677167,1.648931,2.407522,-6.792615,6.262358,0.002140]],[[8.940341,-0.410047,1.143704,-9.230004,6.012604,9.252920,9.862660],[2.059918,-0.517338,5.074351,-2.003836,5.311558,9.109421,-4.223814],[-9.558976,1.809746,4.843981,7.819713,3.717212,6.617871,-1.099456],[4.458553,4.894282,-8.743439,2.147633,3.754834,-1.867500,-8.784670],[-9.585156,-9.009802,-7.966350,6.308597,-7.172506,-0.126945,-6.680144],[-9.686092,-3.675661,-7.171505,0.010516,3.349226,-6.550641,-9.820440],[8.286339,4.128283,-0.468485,-2.742929,3.256545,-6.109228,2.880775]],[[2.137325,-4.006212,-6.416507,1.368773,-0.612787,5.588044,-2.549913],[4.156668,-1.077480,0.046522,-0.673208,-8.818145,-0.109605,-1.981899],[7.319544,8.531994,-7.679751,-5.544722,-2.597429,9.891354,-8.568910],[-5.501862,6.691584,-0.290707,-1.838536,7.769389,7.324193,1.192232],[6.744892,-7.444928,1.618427,1.416477,5.627404,-2.442068,2.303370],[8.374025,-2.211052,-4.562176,6.356176,-9.599396,-6.905861,-5.893920],[4.572894,7.307927,-3.314487,6.341298,1.653748,7.823281,-6.451313]]], dtype = "float32")#candidate|7027|(6, 7, 7)|const|float32
bop_7028 = relay.divide(call_6996.astype('float32'), relay.reshape(const_7027.astype('float32'), relay.shape_of(call_6996))) # shape=(6, 7, 7)
bop_7031 = relay.divide(call_6997.astype('float32'), relay.reshape(const_7027.astype('float32'), relay.shape_of(call_6997))) # shape=(6, 7, 7)
func_5848_call = mod.get_global_var('func_5848')
func_5850_call = mutated_mod.get_global_var('func_5850')
call_7036 = relay.TupleGetItem(func_5848_call(), 0)
call_7037 = relay.TupleGetItem(func_5850_call(), 0)
func_4670_call = mod.get_global_var('func_4670')
func_4671_call = mutated_mod.get_global_var('func_4671')
call_7042 = func_4670_call()
call_7043 = func_4670_call()
output = relay.Tuple([call_6992,bop_7028,call_7036,call_7042,])
output2 = relay.Tuple([call_6993,bop_7031,call_7037,call_7043,])
func_7044 = relay.Function([], output)
mod['func_7044'] = func_7044
mod = relay.transform.InferType()(mod)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7045 = func_7044_call()
output = call_7045
func_7046 = relay.Function([], output)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7047 = relay.var("var_7047", dtype = "float64", shape = (12, 3, 10))#candidate|7047|(12, 3, 10)|var|float64
uop_7048 = relay.asinh(var_7047.astype('float64')) # shape=(12, 3, 10)
func_1140_call = mod.get_global_var('func_1140')
func_1141_call = mutated_mod.get_global_var('func_1141')
call_7055 = relay.TupleGetItem(func_1140_call(), 0)
call_7056 = relay.TupleGetItem(func_1141_call(), 0)
uop_7058 = relay.sqrt(uop_7048.astype('float32')) # shape=(12, 3, 10)
func_6290_call = mod.get_global_var('func_6290')
func_6292_call = mutated_mod.get_global_var('func_6292')
const_7097 = relay.const([0.179303,-4.645088,-5.079885,7.585527,-4.909651,-3.796255,-0.001946,-9.766040,8.729929,0.723678,-7.023004,-7.840968,2.136109,8.691092,-9.045283,-6.444341,-9.976821,-6.060893,9.419320,8.489282,6.048398,4.399416,-0.178138,2.018566,8.106592,-5.728929,7.998677,-2.549145,8.818631,-9.914281,9.534553,8.962901,4.460759,-2.316330,8.722257,-9.484586,-6.100497,2.930670,-0.005073,-4.530706,6.178870,4.554653,7.051934,0.768984,0.805843,-3.903189,-7.621208,-8.507022,6.944316,-0.663506,-4.342598,-4.164558,-6.947486,6.559027,-3.760747,-6.532194,4.511084,1.556042,-5.547425,3.642950,-9.911810,-8.886913,-2.401193,-8.704406,3.786455,-0.856992,-9.852455,-1.372784,-0.017325,5.831427,8.779974,-2.816616,3.623820,-1.345584,-7.239598,-3.182658,2.765758,3.409508,4.162960,-1.180706,-2.659915,5.205407,9.969639,6.615667,7.328655,-7.889557,2.016482,6.788004,-9.283582,-0.517167,-8.494965,1.817628,2.030158,7.537985,4.361088,5.445270,-8.553363,-6.261347,2.221835,-8.090637,-2.189365,8.814222,4.411939,-9.854388,-6.265607,4.538090,7.260653,8.665164,2.637009,-5.953166,-0.009910,6.677326,-1.208174,-6.324322,2.119729,-7.842017,9.542324,8.847202,8.209740,2.499816,-8.971423,-4.149936,3.644425,-2.092919,-1.660122,5.159999,8.547186,2.281585,-3.270473,4.705340,-3.515914,6.682826,3.366082,5.530444,3.758216,5.067777,9.295528,6.442053,7.118960,4.934488,-3.127539,-9.856513,9.336872,0.135886,6.266294,-0.329063,5.756879,0.157578,-0.488663,9.944214,1.802619,-4.115520,-2.681215,-6.973291,7.050801,0.039083,-2.991800,9.314425,0.418636,-1.703785,7.266426,2.661540,-4.873506,-4.760925,6.787110,-9.479620,-2.846436,1.961759,4.122229,-5.065898,7.861876,-6.748771,8.629244,-8.021286,4.051419,8.612082,0.770862,4.990482,0.737380,-3.915294,5.678100,-4.856731,7.495484,-2.114208,2.058810,-6.629193,-7.783951,-1.036023,-5.911506,-5.964727,5.465776,4.181372,-6.183085,4.984074,-0.542314,-9.101736,-1.661371,6.517729,-9.236024,-6.149318,-3.931467,1.831377,-9.352916,-6.795518,-8.986837,-1.485468,-5.013990,-7.431314,-7.221866,-6.258835,9.554157,-6.891684,7.021109,-3.715677,3.490180,6.681629,5.981593,-4.873575,6.664455,-5.873555,4.273086,7.972825,-2.653105,2.305737,2.922448,4.833086,-0.872898,9.220220,2.210266,-1.113112,-6.345240,-8.018234,-3.507615,1.397181,0.358625,8.851725,-2.200455,-8.419873,-2.544631,5.928522,-0.416853,-4.644807,-8.788897,-5.099529,5.119119,-6.087623,5.190792,5.091302,0.130542,9.902133,7.755956,-9.797245,7.796768,-0.303249,-1.171829,-7.886531,2.342409,0.202003,-1.547527,9.963994,-6.361305,1.868745,1.055162,8.498733,-7.425676,6.467906,0.881654,6.308484,0.951535,-3.003961,-0.201600,-9.497883,-7.040896,0.081010,2.140168,-2.279594,4.125429,1.529602,1.628024,7.855604,1.301813,1.859852,-5.717729,-8.456994,-9.360194,2.129584,6.538312,-9.060981,-4.563987,-8.601092,0.759061,9.152308,-8.271777,8.799186,-0.339669,1.750262,9.120094,-3.700140,-9.677844,0.148640,-4.726091,1.068275,-8.456633,2.347519,6.572463,9.888332,-3.750462,7.069824,4.209538,-4.749183,-5.833411,-6.912748,-9.730116,4.137212,7.394453,-6.986651,-3.456057,9.992840,0.395461,6.816365,-2.636585,7.339594,0.683224,1.835157,1.055319,-1.268161,-4.028697,-7.746175,-4.903725,4.022287,-4.555315,1.724741,3.231151,-6.898156,6.262174,9.077287,-6.689742,-0.191060,-6.152016,-3.649655,-2.786938,7.172778,8.830464,4.963196,5.309922,5.886986,-4.629683,-8.059277,7.483238,8.782820,-0.586881,-2.656118,7.012806,8.944192,9.996320,-1.631100,-1.660804,-7.877644,2.365607,2.473361,-6.647893,-7.478288,5.641934,-2.137301,2.175875,6.979794,-8.513249,-1.602072,6.650446,6.815594,-1.066431,-6.248567,4.000284,-1.678875,-7.321864,-8.639914,5.700777,-7.411130,4.187235,1.719509,-7.128847,4.100184,1.863117,-2.647709,9.655349,0.459949,3.113713,-7.108833,-0.983744,1.155992,1.778930,1.497218,3.673849,3.601355,-3.401629,4.595088,-1.445051,2.591423,6.414526,-0.926402,-2.961490,-8.544682,4.386525,-9.797966,2.837830,-8.550452,7.723305,3.461804,4.879773,-8.587497,-1.857190,-3.882862,-1.597421,-3.021526,-2.581979,-6.054739,-0.155991,-1.830756,9.461590,4.860699,5.354996,9.059278,6.305598,1.722214,-4.563880,-6.243889,8.742349,2.095032,-8.434232,4.330513,-5.922239,3.050958,-2.733932,-4.688041,4.412005,1.114912,7.657709,1.319916,4.759638,-0.022646,-5.854180,-4.590162,5.015958,9.013070,7.254363,-3.702010,-1.787638,-6.936839,-7.404809,0.112136,-4.602932,-2.830413,5.238785,-0.413269,-3.223900,-6.906990,1.278229,-5.139999,-0.233191,7.960442,4.715683,2.204558,5.641528,-3.068709,-4.019910,4.198241,-9.701554,6.986218,-7.978419,2.512393,-5.526096,1.852711,-8.478744,-7.590955,-9.079443,1.722960,-1.768167,1.984288,-4.110524,8.991594,3.007860,-8.685871,-1.699998,-1.552725,5.091390,6.344449,3.146450,-1.480701,-9.703401,5.172366,-2.963432,-4.955844,1.021431,-7.224394,-0.827354,0.005753,9.963544,9.285120,8.177795,-6.183078,8.511044,-5.239636,-7.403504,9.280659,3.186615,8.277641,7.684613,-8.510262,-9.011754,-2.319343,-4.833649,-0.766677,2.484398,4.461582,7.607757,-3.056269,0.839884,-0.131422,0.727971,3.423569,-2.377175,-1.724834,-3.297062,-3.061176,4.125805,4.355449,-6.380640,7.824493,-4.538379,-6.204626,-8.544027,-9.419502,9.013604,-6.609871,-8.182724,-6.850691,-9.473895,-2.116103,7.906496,8.789288,-6.951340,2.094078,6.147813,-6.015705,7.763950,8.634261,9.510116,-1.982991,-4.834813,2.430114,-2.422192,1.154087,-4.032479,1.691715,4.415598,8.289750,-5.009449,-9.529998,7.599802,8.576831,-0.089570,2.969744,-5.902913,-6.648531,-9.836457,-2.855057,5.596545,2.599230,5.083707,-6.071887,-3.169485,-9.715666,-1.736903,-0.900105,-3.667539,-4.537200,-4.560489,-0.605017,4.486794,-7.041564,1.740519,-0.281523,-0.547026,-2.832295,5.183282,-2.283013,-1.392141,-1.204514,-8.399524,7.254819,-5.936659,5.600395,1.296477,8.548034,-7.911173,-0.737939,-4.395096,8.254573,-7.995400,3.286127,-7.479990,1.062576,-6.009811,1.344916,-4.251794,0.788841,-7.364509,-1.942134,9.209532,0.712505,5.707353,5.313811,-0.815445,-9.369859,-4.306445,-0.934488,-3.767012,-8.470469,1.103370,4.965908,-6.572766,-7.317330,1.822031,-5.817389,1.781644,-0.787070,3.741503,-7.475678,-5.968290,-1.953868,-2.773074,0.023333,2.938475,-1.305881,2.264967,-6.540111,-0.085747,2.558184,3.958087,-7.805778,5.030418,2.810384,-5.857977,-6.097850,2.972038,-0.264517,-4.024338,-2.640392,5.659034,-4.065694,-6.161381,-4.354331,-5.212729,-9.619788,2.650468,-2.739607,8.071292,5.743838,5.302224,1.095668,-4.439816,3.925160,1.656454,-4.070497,-7.798763,-2.805681,-3.374801,1.966777,-4.684565,-1.083654,3.775449,-1.983398,0.110515,-3.289645,2.609859,3.778237,4.795307,-6.796079,-5.629196,7.568586,-2.079977,2.697477,-4.091064,6.019002,-6.512782,-1.204952,-0.819223,-8.059370,-4.596351,-6.171617,-5.940700,-4.984869,-1.978781,0.382284,7.751299,3.288469,-8.299762,-5.829953,-1.066314,3.507463,-5.112202,-9.646492,-7.190575,-8.006971,3.742534,-2.972221,-4.426332,-5.524487,-4.569446,7.406562,-8.237245,2.715955,6.518034,-9.619734,4.074252,-2.778997,9.116019,-6.058023,0.346596,2.572528,7.756842,7.146487,-1.777867,6.953777,4.624304,-6.292548,3.311270,-3.172079,-1.158750,-2.043509,-2.573048,5.064261,0.125261,8.790654,-1.726044,-1.051313,-5.370089,3.443738,8.995349,1.741257,8.667825,-4.689177,5.834668,7.994664,4.840966,1.591932,-6.743660,-8.453973,-1.611012,-1.715259,-2.255025,8.783695,-5.096841,0.192266,7.028148,-3.344198,-9.726276,2.817145,3.111030,7.012220,0.167687,-1.099408,1.989436,1.037798,-4.881458,-1.750698,-6.624471,-2.195181,-9.964829,-4.153453,-3.353438,-8.746495,-1.815288,4.774221,-0.768271,-6.851178,2.039200,0.128953,0.826725,7.907860,1.731507,-3.223390,4.594194,-9.770677,-2.990774,5.251608,-3.102127,-0.709368,9.197713,-2.238739,-9.535854,9.027157,-1.445837,9.028981,-6.893751,8.289540,-4.332598,3.102829,-3.196212,-1.580151,4.347541,-6.777346,9.322382,-0.849952,-1.082452,5.151004,1.021406,-8.070116,2.441876,-3.267542,-4.159161,7.313182,0.160297,-7.243750,8.044554,8.332151,-3.028717,-5.881522,-1.343187,5.526831,2.935297,9.499425,8.626192,-6.073397,9.385322,-4.539215,8.903956,5.438151,0.535293,-0.127182,-2.941153,1.372720,4.353586,-1.380818,-8.322018,-4.781421,-8.886754,-8.524142,-1.243447,1.321035,5.887975,1.056619,1.531350,-7.826113,7.795203,7.858966,-5.246447,-3.390774,-9.283677,2.643677,-5.183746,7.690594,7.472212,1.892483,-5.833548,-8.338501,-2.574803,-2.044658,-9.793038,-9.978899,-7.060832,7.908211,-4.814000,-9.591219,-7.259279,9.457837,-8.574081,-6.536612,2.110366,1.585196,-0.701364,4.617575,5.342548,-3.304986,-6.462181,9.014678,2.559760,1.972743,9.527605,-4.160814,0.642803,-3.836050,-3.696896,-8.605380,-0.806931,-0.940012,9.766943,-7.321990,3.169331,-9.838806,2.331433,-2.390313,-6.280965,9.732008,-4.272175,2.583930,8.078254,6.801198,-1.256378,1.286025,0.249017,2.105929,-1.480247,7.620076,0.749315,1.597932,-1.257584,0.898698,-1.711167,-5.011927,-7.734286,-3.552170,2.000489,-1.394770,0.472090,0.955185,4.410676,4.388414,-6.682266,7.794719,-5.832175,-2.706094,3.225225,9.945182,-4.483625,-3.663572,-9.938068,3.101522,-6.072748,7.094055,3.272743,-5.742973,-7.237741,-7.630473,-2.977921,-1.703529,2.987464,8.404366,-8.963948,-1.172467,-4.476703,9.341675,6.409253,3.819258,-8.551436,-0.732902,8.400314,-3.419672,-3.301301,-2.878829,7.183938,-0.376211,8.945048,2.752373,-1.803372,8.915167,-2.439676,7.558957,3.117153,7.407352,-3.237397,5.476516,-4.169727,9.643609,7.923414,2.034862,-7.887867,8.597888,-9.839139,6.205215,-5.699369,8.692728,4.719651,-3.140742,1.265381,4.746796,2.341405,0.758676,-2.535595,9.007228,-1.788033,-4.669216,-8.217769,1.766552,-1.263020,1.524128,9.648563,6.501000,-3.147985,8.458370,9.067276,3.277115,3.485289,-3.653683,1.392483,5.567991,3.476581,-8.694680,0.492001,-9.669600,-7.565569,-4.487788,-2.567608,-3.697059,-9.138513,5.234824,-7.512509,-3.266767,7.663722,-3.582728,-7.358382,1.333526,3.024679,7.602157,4.351009,6.175875,-2.492271,3.410563,0.473305,9.806329,7.853268,-7.665623,4.277960,4.478230,4.148632,3.864661,-6.632586,1.936642,-4.102974,-6.962810,-9.230927,3.045756,-7.589083,-7.822168,-4.292030,2.492113,-2.142978,-8.307556,-9.346793,-5.281475,7.025534,-8.559652,-5.360779,4.515587,-5.683828,-4.461086,5.095918,7.580476,-3.014870,-2.874882,8.375423,-0.876170,4.274114,5.175181,6.081229,8.302713,6.009570,-0.710855,-3.367068,-9.744625,4.734356,5.144849,-7.037792,-6.501671,-4.732588,-3.927575,-2.658601,5.058768,0.852101,-2.134590,8.997567,5.443743,3.043403,-5.666962,7.114589,-3.637643,-6.015355,-2.114881,7.611866,4.271517,0.851391,4.442752,8.817101,3.270406,-2.899544,4.864852,5.888090,-7.293723,-9.597325,-3.702467,-9.241245,-3.539053,5.716605,9.956624,-9.053914,-1.690069,-7.724495,5.681253,4.701709,-4.590262,-7.235550,7.457851,-7.036478,-9.538393,-8.795085,0.287924,-2.716820,7.004128,-3.709795,-3.965134,-4.599383,-2.498220,-7.163109,-6.276403,-3.746981,4.094856,-8.271661,-3.315108,5.638895,5.369218,-8.001506,-2.997546,-9.750870,-7.203311,-8.612961,2.823424,4.214832,-4.443977,-6.750235,2.510515,2.888684,7.347514,3.771296,6.433572,2.910109,0.596805,3.086061,-8.339447,9.692807,-6.347648,3.266397,-1.785918,7.231846,-2.109893,4.561567,-6.602371,1.630553,-1.722747,2.027060,8.964957,-3.828795,-2.252598,-4.763462,-7.384077,5.777709,0.723535,-9.202939,-8.746794,-6.241020,0.317552,-0.371198,8.139200,-1.252066,8.201421,4.377141,-5.085586,4.968568,1.916186,1.010528,0.101433,-1.016322,5.878136,7.811704,-4.043837,-5.443714,7.641564], dtype = "float64")#candidate|7097|(1176,)|const|float64
call_7096 = relay.TupleGetItem(func_6290_call(relay.reshape(const_7097.astype('float64'), [7, 12, 14])), 0)
call_7098 = relay.TupleGetItem(func_6292_call(relay.reshape(const_7097.astype('float64'), [7, 12, 14])), 0)
uop_7102 = relay.log(uop_7048.astype('float32')) # shape=(12, 3, 10)
bop_7105 = relay.greater(uop_7102.astype('bool'), relay.reshape(uop_7058.astype('bool'), relay.shape_of(uop_7102))) # shape=(12, 3, 10)
uop_7115 = relay.rsqrt(call_7096.astype('float32')) # shape=(7, 12, 14)
uop_7117 = relay.rsqrt(call_7098.astype('float32')) # shape=(7, 12, 14)
output = relay.Tuple([call_7055,const_7097,bop_7105,uop_7115,])
output2 = relay.Tuple([call_7056,const_7097,bop_7105,uop_7117,])
func_7122 = relay.Function([var_7047,], output)
mod['func_7122'] = func_7122
mod = relay.transform.InferType()(mod)
mutated_mod['func_7122'] = func_7122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7123 = relay.var("var_7123", dtype = "float64", shape = (12, 3, 10))#candidate|7123|(12, 3, 10)|var|float64
func_7122_call = mutated_mod.get_global_var('func_7122')
call_7124 = func_7122_call(var_7123)
output = call_7124
func_7125 = relay.Function([var_7123], output)
mutated_mod['func_7125'] = func_7125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5245_call = mutated_mod.get_global_var('func_5245')
call_7136 = relay.TupleGetItem(func_5244_call(), 1)
call_7137 = relay.TupleGetItem(func_5245_call(), 1)
var_7139 = relay.var("var_7139", dtype = "int8", shape = (13, 16, 9))#candidate|7139|(13, 16, 9)|var|int8
bop_7140 = relay.greater_equal(call_7136.astype('bool'), relay.reshape(var_7139.astype('bool'), relay.shape_of(call_7136))) # shape=(13, 16, 9)
bop_7143 = relay.greater_equal(call_7137.astype('bool'), relay.reshape(var_7139.astype('bool'), relay.shape_of(call_7137))) # shape=(13, 16, 9)
bop_7144 = relay.not_equal(call_7136.astype('bool'), relay.reshape(var_7139.astype('bool'), relay.shape_of(call_7136))) # shape=(13, 16, 9)
bop_7147 = relay.not_equal(call_7137.astype('bool'), relay.reshape(var_7139.astype('bool'), relay.shape_of(call_7137))) # shape=(13, 16, 9)
output = relay.Tuple([bop_7140,bop_7144,])
output2 = relay.Tuple([bop_7143,bop_7147,])
func_7151 = relay.Function([var_7139,], output)
mod['func_7151'] = func_7151
mod = relay.transform.InferType()(mod)
var_7152 = relay.var("var_7152", dtype = "int8", shape = (13, 16, 9))#candidate|7152|(13, 16, 9)|var|int8
output = func_7151(var_7152)
func_7153 = relay.Function([var_7152], output)
mutated_mod['func_7153'] = func_7153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2715_call = mod.get_global_var('func_2715')
func_2716_call = mutated_mod.get_global_var('func_2716')
call_7241 = relay.TupleGetItem(func_2715_call(), 0)
call_7242 = relay.TupleGetItem(func_2716_call(), 0)
output = call_7241
output2 = call_7242
func_7262 = relay.Function([], output)
mod['func_7262'] = func_7262
mod = relay.transform.InferType()(mod)
output = func_7262()
func_7263 = relay.Function([], output)
mutated_mod['func_7263'] = func_7263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5956_call = mod.get_global_var('func_5956')
func_5958_call = mutated_mod.get_global_var('func_5958')
call_7266 = func_5956_call()
call_7267 = func_5956_call()
output = call_7266
output2 = call_7267
func_7271 = relay.Function([], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
output = func_7271()
func_7272 = relay.Function([], output)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7324 = relay.const(True, dtype = "bool")#candidate|7324|()|const|bool
var_7325 = relay.var("var_7325", dtype = "bool", shape = (5, 5, 1))#candidate|7325|(5, 5, 1)|var|bool
bop_7326 = relay.logical_and(const_7324.astype('bool'), var_7325.astype('bool')) # shape=(5, 5, 1)
bop_7329 = relay.bitwise_or(bop_7326.astype('uint64'), const_7324.astype('uint64')) # shape=(5, 5, 1)
uop_7334 = relay.tan(bop_7326.astype('float64')) # shape=(5, 5, 1)
func_4762_call = mod.get_global_var('func_4762')
func_4764_call = mutated_mod.get_global_var('func_4764')
call_7341 = func_4762_call()
call_7342 = func_4762_call()
bop_7344 = relay.bitwise_xor(uop_7334.astype('int32'), relay.reshape(bop_7326.astype('int32'), relay.shape_of(uop_7334))) # shape=(5, 5, 1)
bop_7348 = relay.floor_divide(uop_7334.astype('float64'), relay.reshape(var_7325.astype('float64'), relay.shape_of(uop_7334))) # shape=(5, 5, 1)
uop_7352 = relay.asinh(bop_7348.astype('float64')) # shape=(5, 5, 1)
output = relay.Tuple([bop_7329,call_7341,bop_7344,uop_7352,])
output2 = relay.Tuple([bop_7329,call_7342,bop_7344,uop_7352,])
F = relay.Function([var_7325,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7325,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

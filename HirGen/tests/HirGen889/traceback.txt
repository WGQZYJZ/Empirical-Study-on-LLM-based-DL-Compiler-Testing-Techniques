==========mod==========
#[version = "0.0.5"]
def @func_6111(%var_6093: uint32, %var_6094: Tensor[(1, 13, 9), uint32]) -> Tensor[(1, 13, 9), uint32] {
  %0 = cast(%var_6093, dtype="uint32") /* ty=uint32 */;
  %1 = cast(%var_6094, dtype="uint32") /* ty=Tensor[(1, 13, 9), uint32] */;
  bitwise_xor(%0, %1) /* ty=Tensor[(1, 13, 9), uint32] */
}

def @func_9779() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
  %2 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %3 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %4 = %2.1;
  (%3, %4)
}

def @func_15485() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %5 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %6 = %5.0;
  %7 = @func_12880() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%6, %7)
}

def @func_14716() -> (Tensor[(6, 7, 8), float64],) {
  %8 = @func_13926() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %9 = %8.0;
  (%9,)
}

def @func_14688() -> (Tensor[(6, 7, 8), uint8],) {
  %10 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %11 = %10.0;
  (%11,)
}

def @func_1425(%var_1413: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), uint8],) {
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 7, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %13 = shape_of(%var_1413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_1413, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %16 = left_shift(%14, %15) /* ty=Tensor[(6, 7, 8), uint8] */;
  (%16,)
}

def @func_7142() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %17 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %18 = @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_13163(%var_13160: Tensor[(8, 13, 11), float64]) -> Tensor[(8, 13, 11), float64] {
  %20 = cast(%var_13160, dtype="float64") /* ty=Tensor[(8, 13, 11), float64] */;
  sigmoid(%20) /* ty=Tensor[(8, 13, 11), float64] */
}

def @func_16040() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) {
  %21 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %22 = @func_11911() /* ty=Tensor[(3, 13, 4), int64] */;
  %23 = %21.0;
  (%22, %23)
}

def @func_8138(%var_8090: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
  %24 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %25 = %24.0;
  %26 = cast(%var_8090, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %31 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %32 = greater(%28, %29) /* ty=Tensor[(6, 7, 8), bool] */;
  %33 = %30.0;
  %34 = %31.0;
  (%32, %33, %34)
}

def @func_8987(%var_8982: Tensor[(6, 7, 8), uint8]) -> Tensor[(6, 7, 8), int8] {
  %35 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
  %36 = cast(%var_8982, dtype="int8") /* ty=Tensor[(6, 7, 8), int8] */;
  %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%35, dtype="int8") /* ty=Tensor[(6, 7, 8), int8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%38, %39) /* ty=Tensor[(6, 7, 8), int8] */
}

def @func_10727(%var_10706: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) {
  %40 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %41 = %40.0;
  %42 = cast(%var_10706, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %47 = reshape(%46, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %48 = @func_6463(%47) /* ty=(Tensor[(14, 7, 11), float32],) */;
  %49 = divide(%44, %45) /* ty=Tensor[(3, 13, 4), float32] */;
  %50 = %48.0;
  (%49, %50, meta[relay.Constant][1] /* ty=Tensor[(539, 2), float32] */)
}

def @func_11875() -> Tensor[(6, 7, 8), float32] {
  @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_12653() -> Tensor[(6, 7, 8), uint8] {
  %51 = @func_10778() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %51.1
}

def @func_17595() -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
  %52 = @func_8254() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %53 = %52.1;
  %54 = @func_16835() /* ty=Tensor[(3, 13, 4), int64] */;
  (%53, %54)
}

def @func_15468(%var_15444: Tensor[(7, 6, 7), bool], %var_15463: Tensor[(208), float64]) -> (Tensor[(7, 6, 7), uint8], Tensor[(3, 13, 4), float32], Tensor[(1280), int64], Tensor[(208), float64], Tensor[(1280, 1), int64], Tensor[(2912), float64]) {
  %55 = @func_11787() /* ty=(Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) */;
  %56 = %55.0;
  %57 = cast(%var_15444, dtype="uint8") /* ty=Tensor[(7, 6, 7), uint8] */;
  %58 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%56, dtype="uint8") /* ty=Tensor[(7, 6, 7), uint8] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %61 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %62 = cast(%var_15463, dtype="float64") /* ty=Tensor[(208), float64] */;
  %63 = cast(meta[relay.Constant][2] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
  %64 = %61.0;
  %65 = cast(%64, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %66 = cast(meta[relay.Constant][3] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %67 = reshape(%62, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %68 = reshape(%63, newshape=[1280]) /* ty=Tensor[(1280), int64] */;
  %69 = reshape(%65, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %70 = reshape(%66, newshape=[728, 4]) /* ty=Tensor[(728, 4), float64] */;
  %71 = @func_9378(%67, %68, %69, %70) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) */;
  %72 = add(%59, %60) /* ty=Tensor[(7, 6, 7), uint8] */;
  %73 = %71.5;
  (%72, %64, %73, %var_15463, meta[relay.Constant][2] /* ty=Tensor[(1280, 1), int64] */, meta[relay.Constant][3] /* ty=Tensor[(2912), float64] */)
}

def @func_15756() -> Tensor[(6, 7, 8), float64] {
  %74 = @func_14232() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %74.0
}

def @func_15233(%var_15204: Tensor[(13, 2, 12), float32], %var_15223: Tensor[(420, 2), float64]) -> (Tensor[(13, 2, 12), float32], Tensor[(336), uint8], Tensor[(6, 7, 8), uint8], Tensor[(420, 2), float64], Tensor[(6, 7, 8), float64]) {
  %75 = cast(%var_15204, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
  %76 = @func_14786() /* ty=(Tensor[(336), uint8],) */;
  %77 = cast(%var_15223, dtype="float64") /* ty=Tensor[(420, 2), float64] */;
  %78 = reshape(%77, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
  %79 = @func_7636(%78) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) */;
  %80 = @func_14405() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %81 = acosh(%75) /* ty=Tensor[(13, 2, 12), float32] */;
  %82 = %76.0;
  %83 = %79.2;
  %84 = %80.0;
  (%81, %82, %83, %var_15223, %84)
}

def @func_16192() -> (Tensor[(336), uint8], Tensor[(6, 7, 8), uint8]) {
  %85 = @func_14786() /* ty=(Tensor[(336), uint8],) */;
  %86 = @func_15580() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) */;
  %87 = %85.0;
  %88 = %86.6;
  (%87, %88)
}

def @func_8619() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  %89 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %90 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %91 = %89.0;
  %92 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  %93 = %90.0;
  %94 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%91, %92, %93, %94)
}

def @func_9079() -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %95 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %96 = @func_7857() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %99 = asinh(%98) /* ty=Tensor[(?, 15, 13), float32] */;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  %101 = %95.1;
  %102 = sqrt(%100) /* ty=Tensor[(?, 15, 13), float64] */;
  %103 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%101, %102, %103)
}

def @func_8724() -> Tensor[(6, 7, 8), uint8] {
  %104 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %104.1
}

def @func_15358() -> Tensor[(?, 15, 13), float64] {
  %105 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %105.1
}

def @func_11162() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %106 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %107 = %106.1;
  %108 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%107, %108)
}

def @func_10841(%var_10827: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) {
  %109 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %110 = %109.0;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %112 = cast(%var_10827, dtype="int8") /* ty=Tensor[(3, 13, 4), int8] */;
  %113 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%110, dtype="int8") /* ty=Tensor[(3, 13, 4), int8] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %116 = asin(%111) /* ty=Tensor[(3, 13, 4), float64] */;
  %117 = bitwise_xor(%114, %115) /* ty=Tensor[(3, 13, 4), int8] */;
  (%116, %117)
}

def @func_12969() -> (Tensor[(6, 7, 8), float64],) {
  %118 = @func_8788() /* ty=Tensor[(6, 7, 8), float64] */;
  (%118,)
}

def @func_9684() -> (Tensor[(6, 7, 8), float64],) {
  %119 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  (%119,)
}

def @func_16782() -> Tensor[(6, 7, 8), float32] {
  @func_7900() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_15415() -> (Tensor[(6, 7, 8), float64],) {
  %120 = @func_13838() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %121 = %120.1;
  (%121,)
}

def @func_10403() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %122 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %123 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %124 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %126 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %127 = %122.5;
  %128 = %123.0;
  %129 = cosh(%125) /* ty=Tensor[(6, 7, 8), float64] */;
  %130 = %126.0;
  (%127, %128, %129, %130)
}

def @func_6964() -> Tensor[(?, 15, 13), float64] {
  %131 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %132 = %131.2;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  %134 = sin(%133) /* ty=Tensor[(?, 15, 13), float64] */;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  sigmoid(%135) /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_19051() -> Tensor[(6, 7, 8), uint8] {
  @func_12880() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_6609() -> (Tensor[(6, 7, 8), uint8],) {
  %136 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%136,)
}

def @func_19974() -> (Tensor[(6, 7, 8), uint8], Tensor[(16, 16, 1), float32]) {
  %137 = @func_17595() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %138 = @func_19902() /* ty=(Tensor[(16, 16, 1), float32],) */;
  %139 = %137.0;
  %140 = %138.0;
  (%139, %140)
}

def @func_19260() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %141 = @func_11491() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %142 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
  %143 = @func_14232() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %144 = %141.0;
  %145 = %142.4;
  %146 = %143.0;
  (%144, %145, %146)
}

def @func_19879(%var_19858: Tensor[(360, 2), float64], %var_19861: Tensor[(156), int64]) -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(360, 2), float64], Tensor[(6, 7, 8), uint8], Tensor[(156), int64]) {
  %147 = @func_19647() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %148 = cast(%var_19858, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
  %149 = reshape(%148, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
  %150 = @func_10055(%149) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %151 = cast(%var_19861, dtype="int64") /* ty=Tensor[(156), int64] */;
  %152 = reshape(%151, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %153 = @func_6226(%152) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %154 = %147.1;
  %155 = %150.2;
  %156 = %153.0;
  (%154, %155, %var_19858, %156, %var_19861)
}

def @func_17092(%var_17041: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) {
  %157 = @func_12228() /* ty=(Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) */;
  %158 = cast(meta[relay.Constant][4] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %159 = reshape(%158, newshape=[572]) /* ty=Tensor[(572), float64] */;
  %160 = @func_16393(%159) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) */;
  %161 = @func_14740() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %162 = cast(%var_17041, dtype="float32") /* ty=Tensor[(572), float32] */;
  %163 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(572), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %164 = cast(meta[relay.Constant][4] /* ty=Tensor[(572), float64] */, dtype="float32") /* ty=Tensor[(572), float32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?), float32] */;
  %166 = power(%164, %165) /* ty=Tensor[(572), float32] */;
  %167 = cast(%166, dtype="bool") /* ty=Tensor[(572), bool] */;
  %168 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(572), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %169 = cast(meta[relay.Constant][4] /* ty=Tensor[(572), float64] */, dtype="bool") /* ty=Tensor[(572), bool] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?), bool] */;
  %171 = %157.0;
  %172 = %160.3;
  %173 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  %174 = %161.0;
  %175 = logical_or(%169, %170) /* ty=Tensor[(572), bool] */;
  %176 = @func_8724() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%171, %172, %173, %174, %175, %176)
}

def @func_12101() -> Tensor[(6, 7, 8), uint8] {
  %177 = @func_11847() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %177.1
}

def @func_19983() -> (Tensor[(1, 336), float64], Tensor[(?, 15, 13), float64], Tensor[(572), float64]) {
  %178 = cast(meta[relay.Constant][5] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %179 = reshape(%178, newshape=[572]) /* ty=Tensor[(572), float64] */;
  %180 = @func_17092(%179) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) */;
  %181 = @func_18376() /* ty=Tensor[(1, 336), float64] */;
  %182 = %180.2;
  (%181, %182, meta[relay.Constant][5] /* ty=Tensor[(572), float64] */)
}

def @func_13227() -> Tensor[(6, 7, 8), uint8] {
  @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18307() -> (Tensor[(?, 15, 13), float64], uint64) {
  %183 = @func_13249() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %184 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %185 = %183.0;
  %186 = %184.3;
  (%185, %186)
}

def @func_13493() -> (Tensor[(6, 7, 8), float32],) {
  %187 = @func_12057() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %188 = %187.7;
  (%188,)
}

def @func_11642(%var_11632: Tensor[(16, 4, 3), uint16], %var_11633: Tensor[(16, 4, 3), uint16]) -> (Tensor[(16, 4, 3), uint16],) {
  %189 = cast(%var_11633, dtype="uint16") /* ty=Tensor[(16, 4, 3), uint16] */;
  %190 = shape_of(%var_11632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%var_11632, dtype="uint16") /* ty=Tensor[(16, 4, 3), uint16] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %193 = minimum(%191, %192) /* ty=Tensor[(16, 4, 3), uint16] */;
  (%193,)
}

def @func_16800() -> Tensor[(6, 7, 8), uint8] {
  @func_8851() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7636(%var_7603: Tensor[(12, 10, 7), float64]) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) {
  %194 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %195 = @func_7348() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %196 = cast(-7.37711f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %197 = reshape(%196, newshape=[]) /* ty=float64 */;
  %198 = @func_4408(%197) /* ty=(Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) */;
  %199 = %198.0;
  %200 = cast(%var_7603, dtype="int32") /* ty=Tensor[(12, 10, 7), int32] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%199, dtype="int32") /* ty=Tensor[(12, 10, 7), int32] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %204 = multiply(%202, %203) /* ty=Tensor[(12, 10, 7), int32] */;
  %205 = cast(%204, dtype="bool") /* ty=Tensor[(12, 10, 7), bool] */;
  %206 = shape_of(%var_7603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_7603, dtype="bool") /* ty=Tensor[(12, 10, 7), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = %194.0;
  %210 = %195.0;
  %211 = logical_or(%207, %208) /* ty=Tensor[(12, 10, 7), bool] */;
  (%209, -7.37711f64 /* ty=float64 */, %210, %211)
}

def @func_12228() -> (Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) {
  %212 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %213 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %214 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %215 = %214.1;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
  %217 = %212.1;
  %218 = %213.3;
  %219 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %220 = asin(%216) /* ty=Tensor[(1, 336), float64] */;
  (%217, %218, %219, %220)
}

def @func_15508() -> Tensor[(6, 7, 8), uint8] {
  %221 = @func_11083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %221.0
}

def @func_12397() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  %222 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %223 = @func_11999() /* ty=Tensor[(6, 7, 8), float64] */;
  %224 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  %225 = %222.0;
  (%223, %224, %225)
}

def @func_18445() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %226 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %227 = @func_11417() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %230 = reshape(%229, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %231 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
  %232 = %226.0;
  %233 = @func_8987(%230) /* ty=Tensor[(6, 7, 8), int8] */;
  %234 = %231.1;
  (%232, %228, %233, %234)
}

def @func_19801(%var_19796: Tensor[(8, 4, 8), float64]) -> Tensor[(8, 4, 8), float64] {
  %235 = cast(%var_19796, dtype="float64") /* ty=Tensor[(8, 4, 8), float64] */;
  atanh(%235) /* ty=Tensor[(8, 4, 8), float64] */
}

def @func_19672() -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
  %236 = @func_7857() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %237 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %238 = %236.0;
  %239 = %237.0;
  (%238, %239)
}

def @func_18376() -> Tensor[(1, 336), float64] {
  %240 = @func_15949() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) */;
  %240.1
}

def @func_1149(%var_1101: Tensor[(14, 13, 16), float64], %var_1113: float64, %var_1114: Tensor[(99), float64], %var_1135: Tensor[(672), float32]) -> (Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) {
  %241 = cast(%var_1113, dtype="float64") /* ty=float64 */;
  %242 = cast(%var_1114, dtype="float64") /* ty=Tensor[(99), float64] */;
  %243 = reshape(%241, newshape=[]) /* ty=float64 */;
  %244 = reshape(%242, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %245 = @func_700(%243, %244) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %246 = cast(%var_1113, dtype="float64") /* ty=float64 */;
  %247 = %245.0;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
  %249 = reshape(%246, newshape=[]) /* ty=float64 */;
  %250 = reshape(%248, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %251 = @func_700(%249, %250) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %252 = cast(%var_1101, dtype="float64") /* ty=Tensor[(14, 13, 16), float64] */;
  %253 = asinh(%252) /* ty=Tensor[(14, 13, 16), float64] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(14, 13, 16), float64] */;
  %255 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %256 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %257 = reshape(%255, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %258 = reshape(%256, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %259 = @func_413(%257, %258) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %260 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %261 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %262 = reshape(%260, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %263 = reshape(%261, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %264 = @func_413(%262, %263) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %265 = %251.0;
  %266 = log(%254) /* ty=Tensor[(14, 13, 16), float64] */;
  %267 = %259.0;
  %268 = %264.0;
  (%247, %var_1113, %var_1114, %265, %266, %267, %var_1135, %268)
}

def @func_9485(%var_9467: Tensor[(12, 4, 7), bool], %var_9468: Tensor[(12, 4, 7), bool]) -> (Tensor[(12, 4, 7), bool],) {
  %269 = cast(%var_9468, dtype="bool") /* ty=Tensor[(12, 4, 7), bool] */;
  %270 = shape_of(%var_9467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_9467, dtype="bool") /* ty=Tensor[(12, 4, 7), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = logical_and(%271, %272) /* ty=Tensor[(12, 4, 7), bool] */;
  (%273,)
}

def @func_7054(%var_7031: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) {
  %274 = cast(%var_7031, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
  %275 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %277 = rsqrt(%274) /* ty=Tensor[(6, 2, 16), float64] */;
  %278 = exp(%276) /* ty=Tensor[(6, 7, 8), float32] */;
  (%277, %278)
}

def @func_7156() -> Tensor[(6, 7, 8), uint8] {
  @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_16603() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float32]) {
  %279 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %280 = @func_7799() /* ty=Tensor[(6, 7, 8), float32] */;
  %281 = %279.1;
  (%280, %281)
}

def @func_6463(%var_6453: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32],) {
  %282 = cast(%var_6453, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
  %283 = atan(%282) /* ty=Tensor[(14, 7, 11), float32] */;
  (%283,)
}

def @func_8404(%var_8345: Tensor[(2912), float64], %var_8348: Tensor[(672), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(99), float64], Tensor[(3072), float64], float64, Tensor[(99), float64], Tensor[(672), float32], Tensor[(2912), float32], Tensor[(6, 7, 8), float32]) {
  %284 = @func_7348() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %285 = cast(meta[relay.Constant][6] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %286 = cast(%var_8345, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %287 = cast(-5.69927f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %288 = cast(meta[relay.Constant][7] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %289 = cast(%var_8348, dtype="float32") /* ty=Tensor[(672), float32] */;
  %290 = reshape(%285, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
  %291 = reshape(%286, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %292 = reshape(%287, newshape=[]) /* ty=float64 */;
  %293 = reshape(%288, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %294 = reshape(%289, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %295 = @func_5137(%290, %291, %292, %293, %294) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
  %296 = cast(%var_8345, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %297 = %284.0;
  %298 = %295.2;
  %299 = sqrt(%296) /* ty=Tensor[(2912), float32] */;
  %300 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  (%297, %298, meta[relay.Constant][6] /* ty=Tensor[(3072), float64] */, -5.69927f64 /* ty=float64 */, meta[relay.Constant][7] /* ty=Tensor[(99), float64] */, %var_8348, %299, %300)
}

def @func_6765() -> Tensor[(6, 7, 8), uint8] {
  @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19150(%var_19127: Tensor[(192), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32], Tensor[(192), float64], Tensor[(?, 15, 13), float64]) {
  %301 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %302 = cast(%var_19127, dtype="float64") /* ty=Tensor[(192), float64] */;
  %303 = reshape(%302, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %304 = @func_7054(%303) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) */;
  %305 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %306 = %301.1;
  %307 = %304.1;
  %308 = %305.0;
  (%306, %307, %var_19127, %308)
}

def @func_8470() -> (Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) {
  %309 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %310 = cast(meta[relay.Constant][8] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %311 = reshape(%310, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %312 = @func_3378(%311) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %313 = %309.0;
  %314 = %312.1;
  (%313, %314, meta[relay.Constant][8] /* ty=Tensor[(572), float64] */)
}

def @func_14357() -> Tensor[(6, 7, 8), uint8] {
  %315 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %315.0
}

def @func_7348() -> (Tensor[(6, 7, 8), uint8],) {
  %316 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %317 = %316.0;
  (%317,)
}

def @func_14629() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
  %318 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %319 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %320 = cast(meta[relay.Constant][9] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %321 = reshape(%320, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %322 = @func_10841(%321) /* ty=(Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) */;
  %323 = %318.0;
  %324 = %319.0;
  %325 = %322.1;
  (%323, %324, %325, meta[relay.Constant][9] /* ty=Tensor[(156), int64] */)
}

def @func_10675(%var_10628: uint32) -> (Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) {
  %326 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %327 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %328 = cast(%var_10628, dtype="uint32") /* ty=uint32 */;
  %329 = cast(meta[relay.Constant][10] /* ty=Tensor[(117), uint32] */, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %330 = reshape(%328, newshape=[]) /* ty=uint32 */;
  %331 = reshape(%329, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
  %332 = @func_6111(%330, %331) /* ty=Tensor[(1, 13, 9), uint32] */;
  %333 = cast(meta[relay.Constant][10] /* ty=Tensor[(117), uint32] */, dtype="int64") /* ty=Tensor[(117), int64] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="int64") /* ty=Tensor[(1, 13, 9), int64] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %337 = @func_9804() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %338 = %326.0;
  %339 = %327.1;
  %340 = left_shift(%335, %336) /* ty=Tensor[(?, 13, 9), int64] */;
  %341 = %337.0;
  (%338, %var_10628, %339, %340, %341)
}

def @func_16948() -> (Tensor[(8, 13, 2), int32], Tensor[(8, 13, 2), bool], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %342 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 13, 2), int32] */;
  %343 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 13, 2), int32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %346 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(8, 13, 2), bool] */;
  %347 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(8, 13, 2), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = @func_14439() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %351 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %352 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %353 = bitwise_xor(%344, %345) /* ty=Tensor[(8, 13, 2), int32] */;
  %354 = less(%348, %349) /* ty=Tensor[(8, 13, 2), bool] */;
  %355 = %350.0;
  %356 = %351.0;
  %357 = %352.0;
  (%353, %354, %355, %356, %357)
}

def @func_20040() -> (Tensor[(6, 7, 8), float32],) {
  %358 = @func_15153() /* ty=Tensor[(6, 7, 8), float32] */;
  (%358,)
}

def @func_8254() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %359 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %360 = %359.0;
  %361 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%360, %361)
}

def @func_7524() -> (Tensor[(6, 7, 8), float64],) {
  %362 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %363 = %362.0;
  (%363,)
}

def @func_11107() -> Tensor[(6, 7, 8), uint8] {
  %364 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %364.1
}

def @func_15257() -> (Tensor[(6, 7, 8), int8],) {
  %365 = @func_10299() /* ty=(Tensor[(6, 7, 8), int8],) */;
  %366 = %365.0;
  (%366,)
}

def @func_17952() -> (Tensor[(6, 7, 8), float32],) {
  %367 = @func_17913() /* ty=(Tensor[(6, 7, 8), float32],) */;
  %368 = %367.0;
  (%368,)
}

def @func_413(%var_398: Tensor[(6, 8, 14), float32], %var_399: Tensor[(6, 8, 14), float32]) -> (Tensor[(6, 8, 14), float32],) {
  %369 = cast(%var_399, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
  %370 = shape_of(%var_398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_398, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %373 = mod(%371, %372) /* ty=Tensor[(6, 8, 14), float32] */;
  (%373,)
}

def @func_16990() -> Tensor[(6, 7, 8), uint8] {
  @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_6672() -> Tensor[(6, 7, 8), uint8] {
  %374 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %375 = %374.0;
  %376 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 7, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%375, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%378, %379) /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7857() -> (Tensor[(?, 15, 13), float64],) {
  %380 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  (%380,)
}

def @func_11502() -> (Tensor[(6, 7, 8), uint8],) {
  %381 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%381,)
}

def @func_20267() -> Tensor[(6, 7, 8), uint8] {
  @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_8965() -> (Tensor[(3, 13, 4), int64],) {
  %382 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %383 = %382.0;
  (%383,)
}

def @func_18644(%var_18637: Tensor[(7, 6, 15), float64]) -> (Tensor[(7, 6, 15), bool],) {
  %384 = cast(%var_18637, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
  %385 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(7, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 6, 15), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %388 = equal(%386, %387) /* ty=Tensor[(7, 6, 15), bool] */;
  (%388,)
}

def @func_7918() -> Tensor[(6, 7, 8), uint8] {
  %389 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %389.0
}

def @func_9245() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) {
  %390 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %393 = reshape(%392, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %394 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %395 = cast(meta[relay.Constant][15] /* ty=Tensor[(60, 14), float64] */, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %396 = reshape(%395, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
  %397 = @func_7636(%396) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) */;
  %398 = %397.3;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(12, 10, 7), float64] */;
  %400 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(60, 14), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %401 = cast(meta[relay.Constant][15] /* ty=Tensor[(60, 14), float64] */, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %403 = @func_8987(%393) /* ty=Tensor[(6, 7, 8), int8] */;
  %404 = %394.1;
  %405 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  %406 = floor_mod(%401, %402) /* ty=Tensor[(60, 14), float64] */;
  (%391, %403, %404, %405, %406)
}

def @func_8851() -> Tensor[(6, 7, 8), uint8] {
  @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_11727() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %407 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %408 = @func_11019() /* ty=Tensor[(6, 7, 8), float64] */;
  %409 = %407.0;
  (%408, %409)
}

def @func_15834() -> Tensor[(6, 7, 8), float64] {
  %410 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %410.0
}

def @func_9034() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %411 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %412 = %411.2;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %414 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %415 = cos(%413) /* ty=Tensor[(6, 7, 8), float64] */;
  %416 = %414.0;
  (%415, %416)
}

def @func_10985() -> (Tensor[(6, 7, 8), float64],) {
  %417 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  (%417,)
}

def @func_12534() -> Tensor[(6, 7, 8), float64] {
  @func_11999() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_7083() -> (Tensor[(6, 7, 8), uint8],) {
  %418 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%418,)
}

def @func_10140(%var_10133: Tensor[(360), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
  %419 = cast(%var_10133, dtype="float32") /* ty=Tensor[(360), float32] */;
  %420 = reshape(%419, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %421 = @func_9300(%420) /* ty=(Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) */;
  %422 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  %423 = @func_7799() /* ty=Tensor[(6, 7, 8), float32] */;
  %424 = %421.0;
  (%422, %423, %424, %var_10133)
}

def @func_15904() -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
  %425 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %426 = @func_11296() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %427 = %425.1;
  %428 = %426.0;
  (%427, %428)
}

def @func_14130() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
  %429 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %430 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %431 = %429.0;
  %432 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
  %433 = @func_11875() /* ty=Tensor[(6, 7, 8), float32] */;
  (%430, %431, %432, %433)
}

def @func_6581() -> Tensor[(6, 7, 8), uint8] {
  %434 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %434.0
}

def @func_17009() -> Tensor[(7, 6, 7), bool] {
  %435 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %435.2
}

def @func_19315() -> Tensor[(6, 7, 8), uint8] {
  @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_6903(%var_6864: Tensor[(156), int64], %var_6881: Tensor[(196), float64], %var_6896: Tensor[(208), float64], %var_6899: float64) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) {
  %436 = cast(%var_6864, dtype="int64") /* ty=Tensor[(156), int64] */;
  %437 = reshape(%436, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %438 = @func_6226(%437) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %439 = cast(%var_6881, dtype="float64") /* ty=Tensor[(196), float64] */;
  %440 = cast(meta[relay.Constant][16] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %441 = cast(meta[relay.Constant][17] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %442 = reshape(%439, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %443 = reshape(%440, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %444 = reshape(%441, newshape=[2, 336]) /* ty=Tensor[(2, 336), float32] */;
  %445 = @func_4640(%442, %443, %444) /* ty=(Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) */;
  %446 = cast(%var_6896, dtype="float64") /* ty=Tensor[(208), float64] */;
  %447 = reshape(%446, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %448 = @func_5350(%447) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %449 = cast(meta[relay.Constant][16] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %450 = cast(%var_6899, dtype="float64") /* ty=float64 */;
  %451 = cast(meta[relay.Constant][18] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %452 = cast(meta[relay.Constant][17] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %453 = reshape(%449, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %454 = reshape(%450, newshape=[]) /* ty=float64 */;
  %455 = reshape(%451, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %456 = reshape(%452, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %457 = @func_1149(%453, %454, %455, %456) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %458 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %459 = %438.1;
  %460 = %445.5;
  %461 = %448.0;
  %462 = %457.6;
  (%458, %459, %var_6864, %460, %var_6881, meta[relay.Constant][16] /* ty=Tensor[(2912), float64] */, meta[relay.Constant][17] /* ty=Tensor[(672), float32] */, %461, %var_6896, %462, %var_6899, meta[relay.Constant][18] /* ty=Tensor[(99), float64] */)
}

def @func_7900() -> Tensor[(6, 7, 8), float32] {
  @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_6159() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %463 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 336), uint8] */, dtype="uint8") /* ty=Tensor[(1, 336), uint8] */;
  %464 = reshape(%463, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %465 = @func_1425(%464) /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %466 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 13), float64] */;
  %467 = asin(%466) /* ty=Tensor[(1, 15, 13), float64] */;
  %468 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 15, 13), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 13), bool] */;
  %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%467, dtype="bool") /* ty=Tensor[(1, 15, 13), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %472 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %473 = cast(meta[relay.Constant][21] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %474 = reshape(%472, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %475 = reshape(%473, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %476 = %465.0;
  %477 = not_equal(%470, %471) /* ty=Tensor[(?, 15, 13), bool] */;
  %478 = @func_4467(%474, %475) /* ty=Tensor[(3, 13, 4), int64] */;
  (%476, meta[relay.Constant][19] /* ty=Tensor[(1, 336), uint8] */, %477, %478, meta[relay.Constant][21] /* ty=Tensor[(156), int64] */)
}

def @func_12487() -> (Tensor[(6, 7, 8), float64],) {
  %479 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %480 = %479.0;
  (%480,)
}

def @func_7310(%var_7305: Tensor[(156), int64], %var_7306: Tensor[(196, 1), float64], %var_7307: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) {
  %481 = cast(%var_7305, dtype="int64") /* ty=Tensor[(156), int64] */;
  %482 = cast(%var_7306, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %483 = cast(%var_7307, dtype="float64") /* ty=Tensor[(208), float64] */;
  %484 = cast(-9.352f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %485 = reshape(%481, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %486 = reshape(%482, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %487 = reshape(%483, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %488 = reshape(%484, newshape=[]) /* ty=float64 */;
  %489 = @func_6903(%485, %486, %487, %488) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %490 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %491 = %489.9;
  (%490, %491, %var_7305, %var_7306, %var_7307, -9.352f64 /* ty=float64 */)
}

def @func_14232() -> (Tensor[(6, 7, 8), float64],) {
  %492 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %493 = %492.0;
  (%493,)
}

def @func_18499() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %494 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %495 = @func_18053() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %496 = %494.0;
  %497 = @func_17906() /* ty=Tensor[(6, 7, 8), int8] */;
  %498 = %495.0;
  (%496, %497, %498)
}

def @func_5496(%var_5488: int32, %var_5489: Tensor[(1, 10, 16), int32]) -> (Tensor[(1, 10, 16), int32],) {
  %499 = cast(%var_5488, dtype="int32") /* ty=int32 */;
  %500 = cast(%var_5489, dtype="int32") /* ty=Tensor[(1, 10, 16), int32] */;
  %501 = multiply(%499, %500) /* ty=Tensor[(1, 10, 16), int32] */;
  (%501,)
}

def @func_17205() -> (Tensor[(6, 7, 8), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %502 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %503 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %504 = reshape(%502, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %505 = reshape(%503, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %506 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  %507 = @func_4467(%504, %505) /* ty=Tensor[(3, 13, 4), int64] */;
  (%506, %507, meta[relay.Constant][22] /* ty=Tensor[(156), int64] */)
}

def @func_10589() -> (Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
  %508 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %509 = %508.0;
  %510 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  (%509, %510)
}

def @func_13891() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %511 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %513 = sin(%512) /* ty=Tensor[(6, 7, 8), float32] */;
  %514 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%513, %514)
}

def @func_11071(%var_11063: Tensor[(8, 2, 6), float32]) -> (Tensor[(8, 2, 6), float32],) {
  %515 = cast(%var_11063, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %516 = sin(%515) /* ty=Tensor[(8, 2, 6), float32] */;
  (%516,)
}

def @func_13111() -> Tensor[(?, 15, 13), uint8] {
  %517 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %518 = %517.3;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  %520 = cosh(%519) /* ty=Tensor[(?, 15, 13), float64] */;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %522 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%518, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %525 = floor_mod(%523, %524) /* ty=Tensor[(?, 15, 13), float32] */;
  %526 = cast(%520, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%525, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %530 = divide(%528, %529) /* ty=Tensor[(?, 15, 13), float32] */;
  %531 = cast(%525, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%530, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%533, %534) /* ty=Tensor[(?, 15, 13), uint8] */
}

def @func_11019() -> Tensor[(6, 7, 8), float64] {
  %535 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %535.0
}

def @func_15343() -> (Tensor[(6, 7, 8), uint8],) {
  %536 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%536,)
}

def @func_14439() -> (Tensor[(?, 15, 13), float64],) {
  %537 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %538 = %537.0;
  (%538,)
}

def @func_15376() -> Tensor[(6, 7, 8), float64] {
  %539 = @func_14716() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %539.0
}

def @func_8158() -> Tensor[(6, 7, 8), uint8] {
  %540 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %540.0
}

def @func_18012() -> (Tensor[(6, 7, 8), uint8],) {
  %541 = @func_13197() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%541,)
}

def @func_10055(%var_10026: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %542 = cast(%var_10026, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
  %543 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %544 = tan(%542) /* ty=Tensor[(4, 15, 12), float64] */;
  %545 = %543.1;
  %546 = @func_8724() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%544, %545, %546)
}

def @func_18990(%var_18882: Tensor[(14, 3, 11), float64], %var_18893: Tensor[(11, 104), float64]) -> (Tensor[(14, 3, 11), float64], Tensor[(6, 7, 8), float64], Tensor[(8, 13, 11), float64], Tensor[(11, 104), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(11, 104), float64], Tensor[(11, 104), float64]) {
  %547 = cast(%var_18882, dtype="float64") /* ty=Tensor[(14, 3, 11), float64] */;
  %548 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %549 = reshape(%548, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), float64] */;
  %550 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %551 = @func_9779() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
  %552 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %553 = atanh(%552) /* ty=Tensor[(11, 104), float64] */;
  %554 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 104), float64] */, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(2), int32] */;
  %556 = cast(%553, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %558 = cast(%553, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %559 = acos(%547) /* ty=Tensor[(14, 3, 11), float64] */;
  %560 = @func_17807() /* ty=Tensor[(6, 7, 8), float64] */;
  %561 = @func_13163(%549) /* ty=Tensor[(8, 13, 11), float64] */;
  %562 = acosh(%550) /* ty=Tensor[(11, 104), float64] */;
  %563 = @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */;
  %564 = %551.1;
  %565 = power(%556, %557) /* ty=Tensor[(11, 104), float64] */;
  %566 = sqrt(%558) /* ty=Tensor[(11, 104), float64] */;
  (%559, %560, %561, %562, %563, %564, %565, %566)
}

def @func_8517() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %567 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  %568 = cast(%567, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %569 = reshape(%568, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %570 = @func_1425(%569) /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %571 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %572 = %570.0;
  %573 = %571.0;
  (%567, %572, %573)
}

def @func_16090() -> Tensor[(6, 7, 8), uint8] {
  @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18830() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], uint32) {
  %574 = @func_15772() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %575 = @func_16040() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) */;
  %576 = cast(meta[relay.Constant][24] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %577 = reshape(%576, newshape=[]) /* ty=uint32 */;
  %578 = @func_10675(%577) /* ty=(Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) */;
  %579 = %574.1;
  %580 = %575.1;
  %581 = %578.3;
  (%579, %580, %581, meta[relay.Constant][24] /* ty=uint32 */)
}

def @func_5350(%var_5337: Tensor[(1, 16, 13), float64]) -> (Tensor[(1, 16, 13), float64],) {
  %582 = cast(%var_5337, dtype="float64") /* ty=Tensor[(1, 16, 13), float64] */;
  %583 = tan(%582) /* ty=Tensor[(1, 16, 13), float64] */;
  (%583,)
}

def @func_13197() -> Tensor[(6, 7, 8), uint8] {
  %584 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %584.0
}

def @func_12817() -> (Tensor[(156), int64],) {
  %585 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %586 = %585.4;
  (%586,)
}

def @func_16714(%var_16695: Tensor[(9, 16, 11), uint64], %var_16696: Tensor[(9, 16, 11), uint64]) -> (Tensor[(9, 16, 11), uint64],) {
  %587 = cast(%var_16696, dtype="uint64") /* ty=Tensor[(9, 16, 11), uint64] */;
  %588 = shape_of(%var_16695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%var_16695, dtype="uint64") /* ty=Tensor[(9, 16, 11), uint64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %591 = minimum(%589, %590) /* ty=Tensor[(9, 16, 11), uint64] */;
  (%591,)
}

def @func_19377(%var_19347: Tensor[(12, 6, 9), float64]) -> (Tensor[(12, 6, 9), float64], Tensor[(6, 7, 8), uint8], uint32, Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), float64]) {
  %592 = cast(%var_19347, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
  %593 = cast(meta[relay.Constant][25] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %594 = reshape(%593, newshape=[]) /* ty=uint32 */;
  %595 = @func_10675(%594) /* ty=(Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) */;
  %596 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %597 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
  %598 = tan(%592) /* ty=Tensor[(12, 6, 9), float64] */;
  %599 = %595.2;
  %600 = %596.0;
  %601 = %597.4;
  (%598, %599, meta[relay.Constant][25] /* ty=uint32 */, %600, %601)
}

def @func_19429() -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), uint8]) {
  %602 = @func_17247() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %603 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %604 = %602.0;
  %605 = %603.0;
  (%604, %605)
}

def @func_9300(%var_9275: Tensor[(8, 15, 3), float32]) -> (Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) {
  %606 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %607 = shape_of(%var_9275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_9275, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %610 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %611 = shape_of(%var_9275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%var_9275, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %614 = mod(%608, %609) /* ty=Tensor[(8, 15, 3), float32] */;
  %615 = multiply(%612, %613) /* ty=Tensor[(8, 15, 3), float32] */;
  (%614, %615)
}

def @func_12623() -> Tensor[(6, 7, 8), float64] {
  %616 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %616.0
}

def @func_14786() -> (Tensor[(336), uint8],) {
  %617 = @func_11256() /* ty=Tensor[(336), uint8] */;
  (%617,)
}

def @func_17778() -> (Tensor[(?, 15, 13), bool], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(360), float32], Tensor[(6, 7, 8), uint8]) {
  %618 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %619 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %620 = reshape(%619, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %621 = @func_10140(%620) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %622 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %623 = %618.2;
  %624 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %625 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %626 = %621.1;
  %627 = %622.0;
  (%623, %624, %625, %626, meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, %627)
}

def @func_19586() -> (Tensor[(8, 15, 13), uint8],) {
  %628 = @func_13111() /* ty=Tensor[(?, 15, 13), uint8] */;
  %629 = cast(%628, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %630 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 15, 13), uint8] */, dtype="uint8") /* ty=Tensor[(8, 15, 13), uint8] */;
  %631 = minimum(%629, %630) /* ty=Tensor[(8, 15, 13), uint8] */;
  (%631,)
}

def @func_10898() -> Tensor[(6, 7, 8), uint8] {
  @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7263() -> Tensor[(6, 7, 8), uint8] {
  %632 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %632.0
}

def @func_19452() -> Tensor[(6, 7, 8), uint8] {
  @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18583() -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(78, 2), int64], Tensor[(208), float64]) {
  %633 = @func_8995() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %634 = cast(meta[relay.Constant][29] /* ty=Tensor[(78, 2), int64] */, dtype="int64") /* ty=Tensor[(78, 2), int64] */;
  %635 = cast(meta[relay.Constant][30] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %636 = reshape(%634, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %637 = reshape(%635, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %638 = @func_11969(%636, %637) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) */;
  %639 = %633.0;
  %640 = %638.6;
  (%639, %640, meta[relay.Constant][29] /* ty=Tensor[(78, 2), int64] */, meta[relay.Constant][30] /* ty=Tensor[(208), float64] */)
}

def @func_11768() -> (Tensor[(6, 7, 8), uint8],) {
  %641 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%641,)
}

def @func_4640(%var_4607: Tensor[(2, 14, 7), float64], %var_4625: Tensor[(2912), float64], %var_4628: Tensor[(2, 336), float32]) -> (Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) {
  %642 = cast(%var_4607, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
  %643 = cast(%var_4625, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %644 = cast(1.6943f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %645 = cast(meta[relay.Constant][31] /* ty=Tensor[(33, 3), float64] */, dtype="float64") /* ty=Tensor[(33, 3), float64] */;
  %646 = cast(%var_4628, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %647 = reshape(%643, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %648 = reshape(%644, newshape=[]) /* ty=float64 */;
  %649 = reshape(%645, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %650 = reshape(%646, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %651 = @func_1149(%647, %648, %649, %650) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %652 = cast(1.6943f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %653 = %651.0;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
  %655 = reshape(%652, newshape=[]) /* ty=float64 */;
  %656 = reshape(%654, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %657 = @func_700(%655, %656) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %658 = sigmoid(%642) /* ty=Tensor[(2, 14, 7), float64] */;
  %659 = %657.0;
  (%658, %653, %var_4625, 1.6943f64 /* ty=float64 */, meta[relay.Constant][31] /* ty=Tensor[(33, 3), float64] */, %var_4628, %659)
}

def @func_20313() -> Tensor[(6, 7, 8), uint8] {
  %660 = @func_11083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %660.0
}

def @func_10299() -> (Tensor[(6, 7, 8), int8],) {
  %661 = @func_9245() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) */;
  %662 = %661.1;
  (%662,)
}

def @func_11911() -> Tensor[(3, 13, 4), int64] {
  %663 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %663.0
}

def @func_12498() -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) {
  %664 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %665 = @func_11417() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) */;
  %666 = %664.0;
  %667 = %665.0;
  (%666, %667)
}

def @func_4467(%var_4454: Tensor[(3, 13, 4), int64], %var_4455: Tensor[(3, 13, 4), int64]) -> Tensor[(3, 13, 4), int64] {
  %668 = cast(%var_4455, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %669 = shape_of(%var_4454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_4454, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%670, %671) /* ty=Tensor[(3, 13, 4), int64] */
}

def @func_18704() -> (Tensor[(6, 7, 8), int8],) {
  %672 = @func_18445() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %673 = %672.2;
  (%673,)
}

def @func_19647() -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %674 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %675 = @func_13150() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %676 = @func_14439() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %677 = @func_18053() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %678 = %674.0;
  %679 = %675.0;
  %680 = %676.0;
  %681 = %677.1;
  (%678, %679, %680, %681)
}

def @func_19102() -> (Tensor[(6, 7, 8), uint8],) {
  %682 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %683 = %682.0;
  (%683,)
}

def @func_7511() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %684 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %685 = @func_7142() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %686 = %685.0;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %688 = %684.0;
  %689 = tan(%687) /* ty=Tensor[(6, 7, 8), float32] */;
  %690 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%688, %689, %690)
}

def @func_14740() -> (Tensor[(6, 7, 8), uint8],) {
  %691 = @func_11847() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %692 = %691.1;
  (%692,)
}

def @func_15051() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %693 = @func_10299() /* ty=(Tensor[(6, 7, 8), int8],) */;
  %694 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  %695 = %693.0;
  %696 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%694, %695, %696)
}

def @func_19269() -> Tensor[(6, 7, 8), float64] {
  %697 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %697.0
}

def @func_6226(%var_6223: Tensor[(156), int64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %698 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %699 = cast(%var_6223, dtype="int64") /* ty=Tensor[(156), int64] */;
  %700 = cast(%var_6223, dtype="int64") /* ty=Tensor[(156), int64] */;
  %701 = reshape(%699, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %702 = reshape(%700, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %703 = %698.0;
  %704 = @func_4467(%701, %702) /* ty=Tensor[(3, 13, 4), int64] */;
  (%703, %704, %var_6223)
}

def @func_700(%var_691: float64, %var_692: Tensor[(11, 3, 3), float64]) -> (Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) {
  %705 = cast(%var_691, dtype="float64") /* ty=float64 */;
  %706 = cast(%var_692, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
  %707 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %708 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %709 = reshape(%707, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %710 = reshape(%708, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %711 = @func_413(%709, %710) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %712 = mod(%705, %706) /* ty=Tensor[(11, 3, 3), float64] */;
  %713 = %711.0;
  (%712, %713, meta[relay.Constant][32] /* ty=Tensor[(672), float32] */)
}

def @func_8030(%var_8022: Tensor[(196), float64], %var_8023: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) {
  %714 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %715 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 156), int64] */, dtype="int64") /* ty=Tensor[(1, 156), int64] */;
  %716 = reshape(%715, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %717 = @func_6226(%716) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %718 = %717.1;
  %719 = cast(%718, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %720 = cast(%var_8022, dtype="float64") /* ty=Tensor[(196), float64] */;
  %721 = cast(%var_8023, dtype="float64") /* ty=Tensor[(208), float64] */;
  %722 = reshape(%719, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %723 = reshape(%720, newshape=[196, 1]) /* ty=Tensor[(196, 1), float64] */;
  %724 = reshape(%721, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %725 = @func_7310(%722, %723, %724) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) */;
  %726 = %714.0;
  %727 = %725.5;
  (%726, %718, meta[relay.Constant][33] /* ty=Tensor[(1, 156), int64] */, %727, %var_8022, %var_8023)
}

def @func_7196(%var_7177: Tensor[(9, 6, 4), uint16], %var_7178: Tensor[(9, 6, 4), uint16], %var_7188: Tensor[(99), float64], %var_7189: Tensor[(672), float32]) -> (Tensor[(9, 6, 4), bool], Tensor[(4, 168), bool], Tensor[(4, 728), float64], Tensor[(99), float64], Tensor[(672), float32], Tensor[(3072), uint64]) {
  %728 = cast(%var_7178, dtype="bool") /* ty=Tensor[(9, 6, 4), bool] */;
  %729 = shape_of(%var_7177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_7177, dtype="bool") /* ty=Tensor[(9, 6, 4), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = cast(meta[relay.Constant][34] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %733 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 728), float64] */, dtype="float64") /* ty=Tensor[(4, 728), float64] */;
  %734 = cast(-6.66509f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %735 = cast(%var_7188, dtype="float64") /* ty=Tensor[(99), float64] */;
  %736 = cast(%var_7189, dtype="float32") /* ty=Tensor[(672), float32] */;
  %737 = reshape(%732, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
  %738 = reshape(%733, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %739 = reshape(%734, newshape=[]) /* ty=float64 */;
  %740 = reshape(%735, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %741 = reshape(%736, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %742 = @func_5137(%737, %738, %739, %740, %741) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
  %743 = cast(-6.66509f64 /* ty=float64 */, dtype="uint64") /* ty=uint64 */;
  %744 = cast(meta[relay.Constant][34] /* ty=Tensor[(3072), float64] */, dtype="uint64") /* ty=Tensor[(3072), uint64] */;
  %745 = less(%730, %731) /* ty=Tensor[(9, 6, 4), bool] */;
  %746 = %742.3;
  %747 = multiply(%743, %744) /* ty=Tensor[(3072), uint64] */;
  (%745, %746, meta[relay.Constant][35] /* ty=Tensor[(4, 728), float64] */, %var_7188, %var_7189, %747)
}

def @func_11787() -> (Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) {
  %748 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %749 = %748.2;
  %750 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%749, %750)
}

def @func_8995() -> (Tensor[(6, 7, 8), uint8],) {
  %751 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%751,)
}

def @func_13926() -> (Tensor[(6, 7, 8), float64],) {
  %752 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %753 = %752.0;
  (%753,)
}

def @func_17166() -> (Tensor[(6, 7, 8), uint8],) {
  %754 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%754,)
}

def @func_11999() -> Tensor[(6, 7, 8), float64] {
  %755 = @func_10778() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %755.0
}

def @func_12733() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %756 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %757 = %756.0;
  %758 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%757, %758)
}

def @func_14405() -> (Tensor[(6, 7, 8), float64],) {
  %759 = @func_12487() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %760 = %759.0;
  (%760,)
}

def @func_17913() -> (Tensor[(6, 7, 8), float32],) {
  %761 = @func_11162() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %762 = %761.0;
  (%762,)
}

def @func_6334(%var_6260: uint32, %var_6261: Tensor[(117), uint32]) -> (Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) {
  %763 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %764 = cast(meta[relay.Constant][36] /* ty=Tensor[(208, 1), float64] */, dtype="float64") /* ty=Tensor[(208, 1), float64] */;
  %765 = reshape(%764, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %766 = @func_5350(%765) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %767 = cast(%var_6260, dtype="uint32") /* ty=uint32 */;
  %768 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %769 = reshape(%767, newshape=[]) /* ty=uint32 */;
  %770 = reshape(%768, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
  %771 = %766.0;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(1, 16, 13), float64] */;
  %773 = reshape(%772, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %774 = @func_5350(%773) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %775 = cast(meta[relay.Constant][37] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %776 = reshape(%775, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %777 = @func_3378(%776) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %778 = cast(%var_6260, dtype="uint32") /* ty=uint32 */;
  %779 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %780 = reshape(%778, newshape=[]) /* ty=uint32 */;
  %781 = reshape(%779, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
  %782 = cast(%var_6260, dtype="uint64") /* ty=uint64 */;
  %783 = reshape(%782, newshape=[]) /* ty=uint64 */;
  %784 = @func_4597(%783) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) */;
  %785 = %763.1;
  %786 = @func_6111(%769, %770) /* ty=Tensor[(1, 13, 9), uint32] */;
  %787 = %774.0;
  %788 = %777.1;
  %789 = @func_6111(%780, %781) /* ty=Tensor[(1, 13, 9), uint32] */;
  %790 = %784.2;
  (%785, %771, meta[relay.Constant][36] /* ty=Tensor[(208, 1), float64] */, %786, %var_6260, %var_6261, %787, %788, meta[relay.Constant][37] /* ty=Tensor[(572), float64] */, %789, %790)
}

def @func_16624() -> Tensor[(6, 7, 8), float64] {
  @func_8788() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_3378(%var_3360: Tensor[(13, 4, 11), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) {
  %791 = cast(meta[relay.Constant][38] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %792 = reshape(%791, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %793 = @func_1425(%792) /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %794 = cast(%var_3360, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %795 = acos(%794) /* ty=Tensor[(13, 4, 11), float64] */;
  %796 = cast(%var_3360, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %800 = %793.0;
  %801 = greater(%798, %799) /* ty=Tensor[(13, 4, 11), bool] */;
  (%800, meta[relay.Constant][38] /* ty=Tensor[(336), uint8] */, %801)
}

def @func_13434() -> Tensor[(6, 7, 8), float64] {
  %802 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %802.0
}

def @func_11441() -> (Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) {
  %803 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %804 = cast(7.16466f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %805 = reshape(%804, newshape=[]) /* ty=float64 */;
  %806 = @func_8201(%805) /* ty=(Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) */;
  %807 = %803.1;
  %808 = %806.3;
  (%807, %808, 7.16466f64 /* ty=float64 */)
}

def @func_15153() -> Tensor[(6, 7, 8), float32] {
  @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_15949() -> (Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
  %809 = @func_14405() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %810 = @func_12228() /* ty=(Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) */;
  %811 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %812 = reshape(%811, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %813 = @func_10841(%812) /* ty=(Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) */;
  %814 = %809.0;
  %815 = %810.3;
  %816 = %813.1;
  (%814, %815, %816, meta[relay.Constant][39] /* ty=Tensor[(156), int64] */)
}

def @func_16835() -> Tensor[(3, 13, 4), int64] {
  %817 = @func_11296() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %817.0
}

def @func_11417() -> (Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) {
  %818 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  %819 = cast(%818, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
  %820 = cast(%818, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
  %821 = reshape(%819, newshape=[12, 4, 7]) /* ty=Tensor[(12, 4, 7), bool] */;
  %822 = reshape(%820, newshape=[12, 4, 7]) /* ty=Tensor[(12, 4, 7), bool] */;
  %823 = @func_9485(%821, %822) /* ty=(Tensor[(12, 4, 7), bool],) */;
  %824 = %823.0;
  (%818, %824)
}

def @func_11256() -> Tensor[(336), uint8] {
  %825 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %825.1
}

def @main() -> (Tensor[(8, 15, 13), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), float32]) {
  %826 = @func_19586() /* ty=(Tensor[(8, 15, 13), uint8],) */;
  %827 = @func_18499() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %828 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %829 = %828.0;
  %830 = cast(%829, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %831 = %826.0;
  %832 = @func_19315() /* ty=Tensor[(6, 7, 8), uint8] */;
  %833 = %827.2;
  %834 = asinh(%830) /* ty=Tensor[(3, 13, 4), float32] */;
  (%831, %832, %833, %834)
}

def @func_7556(%var_7553: Tensor[(99), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
  %835 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %836 = cast(5.09483f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %837 = cast(%var_7553, dtype="float64") /* ty=Tensor[(99), float64] */;
  %838 = reshape(%836, newshape=[]) /* ty=float64 */;
  %839 = reshape(%837, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %840 = @func_700(%838, %839) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %841 = %835.0;
  %842 = %840.0;
  (%841, %842, 5.09483f64 /* ty=float64 */, %var_7553)
}

def @func_4597(%var_4577: uint64) -> (Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) {
  %843 = cast(%var_4577, dtype="bool") /* ty=bool */;
  %844 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 6, 7), uint64] */, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
  %845 = cast(%var_4577, dtype="float64") /* ty=float64 */;
  %846 = cast(meta[relay.Constant][41] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %847 = reshape(%845, newshape=[]) /* ty=float64 */;
  %848 = reshape(%846, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %849 = @func_700(%847, %848) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %850 = not_equal(%843, %844) /* ty=Tensor[(7, 6, 7), bool] */;
  %851 = %849.2;
  (%850, %851, meta[relay.Constant][41] /* ty=Tensor[(99), float64] */)
}

def @func_17981() -> Tensor[(6, 7, 8), uint8] {
  %852 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %852.0
}

def @func_17487() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  %853 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %854 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %855 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  %856 = %853.0;
  %857 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %858 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  %859 = %854.1;
  (%855, %856, %857, %858, %859)
}

def @func_11296() -> (Tensor[(3, 13, 4), int64],) {
  %860 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %861 = %860.0;
  (%861,)
}

def @func_15202() -> (Tensor[(16, 16, 1), float32],) {
  %862 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
  %863 = log2(%862) /* ty=Tensor[(16, 16, 1), float32] */;
  (%863,)
}

def @func_14591() -> (Tensor[(3, 13, 4), int64],) {
  %864 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %865 = %864.0;
  (%865,)
}

def @func_12284() -> (Tensor[(3, 13, 4), float32],) {
  %866 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %867 = %866.0;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %869 = sinh(%868) /* ty=Tensor[(3, 13, 4), float32] */;
  (%869,)
}

def @func_13838() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %870 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  %871 = @func_9619() /* ty=Tensor[(6, 7, 8), float64] */;
  %872 = @func_12101() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%870, %871, %872)
}

def @func_19207() -> (Tensor[(6, 7, 8), float64],) {
  %873 = @func_14130() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
  %874 = %873.1;
  (%874,)
}

def @func_18548() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %875 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %876 = %875.1;
  %877 = @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%876, %877)
}

def @func_13249() -> (Tensor[(?, 15, 13), float64],) {
  %878 = @func_9804() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %879 = %878.0;
  (%879,)
}

def @func_13725(%var_13687: Tensor[(10, 6, 14), int64]) -> Tensor[(10, 6, 14), bool] {
  %880 = cast(%var_13687, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %881 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(10, 6, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%882, %883) /* ty=Tensor[(10, 6, 14), bool] */
}

def @func_7654() -> Tensor[(6, 7, 8), uint8] {
  @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19066() -> Tensor[(12, 9, 2), bool] {
  @func_14209() /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_13150() -> (Tensor[(?, 15, 13), float64],) {
  %884 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%884,)
}

def @func_17148(%var_17128: Tensor[(1, 12, 3), float32]) -> (Tensor[(1, 12, 3), float32], Tensor[(13, 4, 11), bool], Tensor[(572), float64]) {
  %885 = cast(%var_17128, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
  %886 = cast(meta[relay.Constant][44] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %887 = reshape(%886, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %888 = @func_3378(%887) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %889 = exp(%885) /* ty=Tensor[(1, 12, 3), float32] */;
  %890 = %888.2;
  (%889, %890, meta[relay.Constant][44] /* ty=Tensor[(572), float64] */)
}

def @func_14209() -> Tensor[(12, 9, 2), bool] {
  %891 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %892 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%893, %894) /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_18053() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  %895 = @func_10476() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %896 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
  %897 = %895.0;
  %898 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%896, %897, %898)
}

def @func_7842() -> Tensor[(?, 15, 13), float64] {
  @func_6964() /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_4408(%var_4403: float64) -> (Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
  %899 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 7), float64] */;
  %900 = cast(%var_4403, dtype="float64") /* ty=float64 */;
  %901 = cast(meta[relay.Constant][48] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %902 = reshape(%900, newshape=[]) /* ty=float64 */;
  %903 = reshape(%901, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %904 = @func_700(%902, %903) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %905 = acosh(%899) /* ty=Tensor[(12, 10, 7), float64] */;
  %906 = %904.0;
  (%905, %906, %var_4403, meta[relay.Constant][48] /* ty=Tensor[(99), float64] */)
}

def @func_8201(%var_8190: float64) -> (Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) {
  %907 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %908 = cast(%var_8190, dtype="float64") /* ty=float64 */;
  %909 = cast(meta[relay.Constant][49] /* ty=Tensor[(99, 1), float64] */, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %910 = reshape(%908, newshape=[]) /* ty=float64 */;
  %911 = reshape(%909, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %912 = @func_700(%910, %911) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %913 = %907.4;
  %914 = %912.1;
  (%913, %914, %var_8190, meta[relay.Constant][49] /* ty=Tensor[(99, 1), float64] */)
}

def @func_8690(%var_8644: Tensor[(4, 168), float32], %var_8654: Tensor[(6, 7, 8), uint8]) -> (Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(6, 8, 14), float32], Tensor[(4, 168), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32]) {
  %915 = cast(meta[relay.Constant][50] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %916 = cast(meta[relay.Constant][51] /* ty=Tensor[(117), uint32] */, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %917 = reshape(%915, newshape=[]) /* ty=uint32 */;
  %918 = reshape(%916, newshape=[117]) /* ty=Tensor[(117), uint32] */;
  %919 = @func_6334(%917, %918) /* ty=(Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) */;
  %920 = cast(%var_8644, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %921 = cast(%var_8644, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %922 = reshape(%920, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %923 = reshape(%921, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %924 = @func_413(%922, %923) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %925 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %926 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %927 = %926.0;
  %928 = cast(%var_8654, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = %919.9;
  %933 = %924.0;
  %934 = %925.0;
  %935 = power(%930, %931) /* ty=Tensor[(6, 7, 8), float32] */;
  (%932, meta[relay.Constant][50] /* ty=uint32 */, meta[relay.Constant][51] /* ty=Tensor[(117), uint32] */, %933, %var_8644, %934, %935)
}

def @func_16216() -> (Tensor[(6, 7, 8), float64],) {
  %936 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %937 = %936.0;
  (%937,)
}

def @func_16162(%var_16118: Tensor[(550), float32], %var_16142: Tensor[(96), float32]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 5, 10), float32], Tensor[(550), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(6, 7, 8), uint8]) {
  %938 = @func_14561() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) */;
  %939 = cast(%var_16118, dtype="float32") /* ty=Tensor[(550), float32] */;
  %940 = reshape(%939, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), float32] */;
  %941 = @func_8946(%940) /* ty=(Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %942 = @func_14561() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) */;
  %943 = cast(%var_16142, dtype="float32") /* ty=Tensor[(96), float32] */;
  %944 = reshape(%943, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
  %945 = @func_11071(%944) /* ty=(Tensor[(8, 2, 6), float32],) */;
  %946 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %947 = %938.5;
  %948 = %941.3;
  %949 = %942.2;
  %950 = @func_11256() /* ty=Tensor[(336), uint8] */;
  %951 = %945.0;
  %952 = %946.0;
  (%947, %948, %var_16118, %949, %950, %951, %var_16142, %952)
}

def @func_7702() -> (Tensor[(6, 7, 8), uint8],) {
  %953 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%953,)
}

def @func_15647() -> (Tensor[(12, 9, 2), float32],) {
  %954 = @func_14209() /* ty=Tensor[(12, 9, 2), bool] */;
  %955 = cast(%954, dtype="float32") /* ty=Tensor[(12, 9, 2), float32] */;
  %956 = atan(%955) /* ty=Tensor[(12, 9, 2), float32] */;
  (%956,)
}

def @func_17413() -> (Tensor[(6, 7, 8), uint8],) {
  %957 = @func_12733() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %958 = %957.0;
  (%958,)
}

def @func_15580() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) {
  %959 = cast(meta[relay.Constant][52] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %960 = cast(meta[relay.Constant][53] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %961 = cast(meta[relay.Constant][54] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %962 = cast(5.8987f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %963 = reshape(%959, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %964 = reshape(%960, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %965 = reshape(%961, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %966 = reshape(%962, newshape=[]) /* ty=float64 */;
  %967 = @func_6903(%963, %964, %965, %966) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %968 = @func_11768() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %969 = @func_15508() /* ty=Tensor[(6, 7, 8), uint8] */;
  %970 = %967.7;
  %971 = %968.0;
  (%969, %970, meta[relay.Constant][52] /* ty=Tensor[(156), int64] */, meta[relay.Constant][53] /* ty=Tensor[(196), float64] */, meta[relay.Constant][54] /* ty=Tensor[(208), float64] */, 5.8987f64 /* ty=float64 */, %971)
}

def @func_10476() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %972 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %973 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %974 = %972.0;
  %975 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %976 = %973.0;
  (%974, %975, %976)
}

def @func_19524() -> (Tensor[(16, 16, 1), float32],) {
  %977 = @func_15202() /* ty=(Tensor[(16, 16, 1), float32],) */;
  %978 = %977.0;
  (%978,)
}

def @func_11083() -> (Tensor[(6, 7, 8), uint8],) {
  %979 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %980 = %979.0;
  (%980,)
}

def @func_13414(%var_13397: Tensor[(196), float64], %var_13398: Tensor[(208), float64], %var_13399: float64, %var_13402: Tensor[(3072), float64], %var_13403: Tensor[(2912), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(156), int64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(99), float64], Tensor[(3072), float64], Tensor[(2912), float64], Tensor[(11, 9), float64], Tensor[(672), float32]) {
  %981 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %982 = cast(meta[relay.Constant][55] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %983 = cast(%var_13397, dtype="float64") /* ty=Tensor[(196), float64] */;
  %984 = cast(%var_13398, dtype="float64") /* ty=Tensor[(208), float64] */;
  %985 = cast(%var_13399, dtype="float64") /* ty=float64 */;
  %986 = reshape(%982, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %987 = reshape(%983, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %988 = reshape(%984, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %989 = reshape(%985, newshape=[]) /* ty=float64 */;
  %990 = @func_6903(%986, %987, %988, %989) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %991 = cast(%var_13402, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %992 = cast(%var_13403, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %993 = cast(%var_13399, dtype="float64") /* ty=float64 */;
  %994 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 9), float64] */;
  %995 = cast(meta[relay.Constant][57] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %996 = reshape(%991, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
  %997 = reshape(%992, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %998 = reshape(%993, newshape=[]) /* ty=float64 */;
  %999 = reshape(%994, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %1000 = reshape(%995, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %1001 = @func_5137(%996, %997, %998, %999, %1000) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
  %1002 = %981.0;
  %1003 = %990.2;
  %1004 = %1001.2;
  (%1002, %1003, meta[relay.Constant][55] /* ty=Tensor[(156), int64] */, %var_13397, %var_13398, %var_13399, %1004, %var_13402, %var_13403, meta[relay.Constant][56] /* ty=Tensor[(11, 9), float64] */, meta[relay.Constant][57] /* ty=Tensor[(672), float32] */)
}

def @func_18877() -> (Tensor[(3, 13, 4), int64],) {
  %1005 = @func_11911() /* ty=Tensor[(3, 13, 4), int64] */;
  (%1005,)
}

def @func_12837() -> (Tensor[(6, 7, 8), uint8],) {
  %1006 = @func_8995() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1007 = %1006.0;
  (%1007,)
}

def @func_8788() -> Tensor[(6, 7, 8), float64] {
  %1008 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1009 = %1008.0;
  %1010 = cast(%1009, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  log10(%1010) /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_14059() -> (Tensor[(6, 7, 8), uint8],) {
  %1011 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1012 = %1011.0;
  (%1012,)
}

def @func_9980(%var_9946: float64) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(99, 1), float64], Tensor[(6, 7, 8), float64]) {
  %1013 = cast(%var_9946, dtype="float64") /* ty=float64 */;
  %1014 = reshape(%1013, newshape=[]) /* ty=float64 */;
  %1015 = @func_8201(%1014) /* ty=(Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) */;
  %1016 = %1015.3;
  %1017 = cast(%1016, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %1018 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1019 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1020 = sigmoid(%1017) /* ty=Tensor[(99, 1), float64] */;
  %1021 = %1018.0;
  (%1019, %var_9946, %1020, %1021)
}

def @func_7329() -> (Tensor[(6, 7, 8), float64],) {
  %1022 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1023 = %1022.0;
  %1024 = cast(%1023, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %1025 = asinh(%1024) /* ty=Tensor[(6, 7, 8), float64] */;
  (%1025,)
}

def @func_7728() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %1026 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  %1027 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1026, %1027)
}

def @func_5668(%var_5602: Tensor[(16, 10, 8), int64], %var_5625: Tensor[(156), int64], %var_5634: Tensor[(2912), float64]) -> (Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) {
  %1028 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1029 = cast(%var_5602, dtype="int64") /* ty=Tensor[(16, 10, 8), int64] */;
  %1030 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %1031 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %1032 = reshape(%1030, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1033 = reshape(%1031, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1034 = @func_413(%1032, %1033) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %1035 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1036 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1037 = reshape(%1035, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1038 = reshape(%1036, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1039 = cast(%var_5634, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1040 = cast(-7 /* ty=int64 */, dtype="float64") /* ty=float64 */;
  %1041 = cast(meta[relay.Constant][59] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1042 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %1043 = reshape(%1039, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %1044 = reshape(%1040, newshape=[]) /* ty=float64 */;
  %1045 = reshape(%1041, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %1046 = reshape(%1042, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1047 = @func_1149(%1043, %1044, %1045, %1046) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %1048 = cast(meta[relay.Constant][60] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %1049 = reshape(%1048, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %1050 = @func_3378(%1049) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %1051 = @func_4467(%1037, %1038) /* ty=Tensor[(3, 13, 4), int64] */;
  %1052 = cast(%1051, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1053 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1054 = reshape(%1052, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1055 = reshape(%1053, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1056 = cast(meta[relay.Constant][61] /* ty=Tensor[(196, 1), float64] */, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %1057 = cast(%var_5634, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1058 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %1059 = reshape(%1056, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %1060 = reshape(%1057, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %1061 = reshape(%1058, newshape=[2, 336]) /* ty=Tensor[(2, 336), float32] */;
  %1062 = @func_4640(%1059, %1060, %1061) /* ty=(Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) */;
  %1063 = @func_4467(%1054, %1055) /* ty=Tensor[(3, 13, 4), int64] */;
  %1064 = cast(%1063, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1065 = cast(%1051, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1066 = reshape(%1064, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1067 = reshape(%1065, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1068 = @func_4467(%1066, %1067) /* ty=Tensor[(3, 13, 4), int64] */;
  %1069 = cast(%1068, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1070 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1071 = reshape(%1069, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1072 = reshape(%1070, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1073 = logical_xor(%1028, %1029) /* ty=Tensor[(16, 10, 8), int64] */;
  %1074 = %1034.0;
  %1075 = %1047.0;
  %1076 = %1050.1;
  %1077 = %1062.5;
  %1078 = @func_4467(%1071, %1072) /* ty=Tensor[(3, 13, 4), int64] */;
  (%1073, %1074, meta[relay.Constant][58] /* ty=Tensor[(2, 336), float32] */, %1051, %var_5625, %1075, %var_5634, meta[relay.Constant][59] /* ty=Tensor[(99), float64] */, %1076, meta[relay.Constant][60] /* ty=Tensor[(572), float64] */, %1063, %1077, meta[relay.Constant][61] /* ty=Tensor[(196, 1), float64] */, %1068, %1078)
}

def @func_17247() -> (Tensor[(3, 13, 4), float32],) {
  %1079 = @func_12057() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1080 = %1079.3;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %1082 = exp(%1081) /* ty=Tensor[(3, 13, 4), float64] */;
  %1083 = cast(%1082, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %1084 = erf(%1083) /* ty=Tensor[(3, 13, 4), float32] */;
  (%1084,)
}

def @func_8946(%var_8867: Tensor[(11, 5, 10), float32]) -> (Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %1085 = cast(%var_8867, dtype="float64") /* ty=Tensor[(11, 5, 10), float64] */;
  %1086 = cast(meta[relay.Constant][62] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1087 = reshape(%1086, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %1088 = @func_5350(%1087) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %1089 = cast(%var_8867, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
  %1090 = log2(%1089) /* ty=Tensor[(11, 5, 10), float32] */;
  %1091 = cast(%1090, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
  %1092 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1093 = acos(%1085) /* ty=Tensor[(11, 5, 10), float64] */;
  %1094 = %1088.0;
  %1095 = acosh(%1091) /* ty=Tensor[(11, 5, 10), float32] */;
  %1096 = %1092.0;
  %1097 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1093, %1094, meta[relay.Constant][62] /* ty=Tensor[(208), float64] */, %1095, %1096, %1097)
}

def @func_7466() -> (Tensor[(3, 13, 4), int64],) {
  %1098 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %1099 = %1098.3;
  (%1099,)
}

def @func_17906() -> Tensor[(6, 7, 8), int8] {
  %1100 = @func_15257() /* ty=(Tensor[(6, 7, 8), int8],) */;
  %1100.0
}

def @func_9804() -> (Tensor[(?, 15, 13), float64],) {
  %1101 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %1102 = %1101.0;
  (%1102,)
}

def @func_11847() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1103 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1104 = %1103.0;
  %1105 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1104, %1105)
}

def @func_17807() -> Tensor[(6, 7, 8), float64] {
  %1106 = @func_12487() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1106.0
}

def @func_9885() -> (Tensor[(6, 7, 8), float64],) {
  %1107 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  (%1107,)
}

def @func_20000() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1108 = @func_18499() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %1109 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1110 = %1108.2;
  (%1109, %1110)
}

def @func_19902() -> (Tensor[(16, 16, 1), float32],) {
  %1111 = @func_15202() /* ty=(Tensor[(16, 16, 1), float32],) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_20224(%var_20167: Tensor[(3, 9, 5), float32], %var_20198: Tensor[(78, 2), int64]) -> (Tensor[(3, 9, 5), bool], Tensor[(3, 13, 4), int64], Tensor[(78, 2), int64], Tensor[(156), int64], Tensor[(6, 7, 8), uint8]) {
  %1113 = cast(%var_20167, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %1114 = acosh(%1113) /* ty=Tensor[(3, 9, 5), float32] */;
  %1115 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 9, 5), float32] */, dtype="bool") /* ty=Tensor[(3, 9, 5), bool] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(3, 9, 5), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1119 = cast(%var_20198, dtype="int64") /* ty=Tensor[(78, 2), int64] */;
  %1120 = reshape(%1119, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1121 = @func_6226(%1120) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %1122 = @func_12817() /* ty=(Tensor[(156), int64],) */;
  %1123 = less_equal(%1117, %1118) /* ty=Tensor[(3, 9, 5), bool] */;
  %1124 = %1121.1;
  %1125 = %1122.0;
  %1126 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1123, %1124, %var_20198, %1125, %1126)
}

def @func_5137(%var_5102: Tensor[(16, 16, 12), float64], %var_5116: Tensor[(2912), float64], %var_5117: float64, %var_5118: Tensor[(99), float64], %var_5119: Tensor[(4, 168), float32]) -> (Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) {
  %1127 = cast(%var_5116, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1128 = cast(%var_5117, dtype="float64") /* ty=float64 */;
  %1129 = cast(%var_5118, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1130 = cast(%var_5119, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %1131 = reshape(%1127, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %1132 = reshape(%1128, newshape=[]) /* ty=float64 */;
  %1133 = reshape(%1129, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %1134 = reshape(%1130, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1135 = @func_1149(%1131, %1132, %1133, %1134) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %1136 = cast(%var_5119, dtype="bool") /* ty=Tensor[(4, 168), bool] */;
  %1137 = cast(%var_5117, dtype="bool") /* ty=bool */;
  %1138 = cast(%var_5102, dtype="float64") /* ty=Tensor[(16, 16, 12), float64] */;
  %1139 = log10(%1138) /* ty=Tensor[(16, 16, 12), float64] */;
  %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(16, 16, 12), float64] */;
  %1141 = %1135.3;
  %1142 = not_equal(%1136, %1137) /* ty=Tensor[(4, 168), bool] */;
  %1143 = asin(%1140) /* ty=Tensor[(16, 16, 12), float64] */;
  (%1141, %var_5116, %var_5118, %1142, %1143)
}

def @func_11969(%var_11924: Tensor[(156), int64], %var_11926: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) {
  %1144 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1145 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1146 = cast(%var_11924, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1147 = cast(meta[relay.Constant][64] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %1148 = cast(%var_11926, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1149 = cast(-3.52081f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1150 = reshape(%1146, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1151 = reshape(%1147, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %1152 = reshape(%1148, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %1153 = reshape(%1149, newshape=[]) /* ty=float64 */;
  %1154 = @func_6903(%1150, %1151, %1152, %1153) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %1155 = %1144.0;
  %1156 = %1145.0;
  %1157 = %1154.4;
  (%1155, %1156, %1157, %var_11924, meta[relay.Constant][64] /* ty=Tensor[(196), float64] */, %var_11926, -3.52081f64 /* ty=float64 */)
}

def @func_18112() -> (Tensor[(3, 13, 4), float32], Tensor[(3, 13, 4), int16], Tensor[(2912), float64], Tensor[(1280), int64], Tensor[(2912), float64]) {
  %1158 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %1159 = %1158.0;
  %1160 = cast(%1159, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %1161 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 13, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 13, 4), int16] */;
  %1162 = shape_of(%1159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%1159, dtype="int16") /* ty=Tensor[(3, 13, 4), int16] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1165 = cast(meta[relay.Constant][66] /* ty=Tensor[(1280), int64] */, dtype="int64") /* ty=Tensor[(1280), int64] */;
  %1166 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 13, 4), float32] */, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1167 = cast(meta[relay.Constant][67] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1168 = reshape(%1165, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), int64] */;
  %1169 = reshape(%1166, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1170 = reshape(%1167, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %1171 = @func_5668(%1168, %1169, %1170) /* ty=(Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) */;
  %1172 = sqrt(%1160) /* ty=Tensor[(3, 13, 4), float32] */;
  %1173 = add(%1163, %1164) /* ty=Tensor[(3, 13, 4), int16] */;
  %1174 = %1171.6;
  (%1172, %1173, %1174, meta[relay.Constant][66] /* ty=Tensor[(1280), int64] */, meta[relay.Constant][67] /* ty=Tensor[(2912), float64] */)
}

def @func_17667(%var_17644: Tensor[(9, 15, 7), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(9, 15, 7), float32]) {
  %1175 = cast(%var_17644, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %1176 = erf(%1175) /* ty=Tensor[(9, 15, 7), float32] */;
  %1177 = cast(%var_17644, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %1178 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1176, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1181 = @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1182 = divide(%1179, %1180) /* ty=Tensor[(9, 15, 7), float32] */;
  (%1181, %1182)
}

def @func_15311() -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(?, 15, 13), float64]) {
  %1183 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1184 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %1185 = @func_13249() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %1186 = %1183.0;
  %1187 = %1184.0;
  %1188 = %1185.0;
  (%1186, %1187, %1188)
}

def @func_12880() -> Tensor[(6, 7, 8), uint8] {
  %1189 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %1189.1
}

def @func_11491() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %1190 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %1191 = %1190.0;
  %1192 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1191, %1192)
}

def @func_9859() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
  %1193 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %1194 = cast(meta[relay.Constant][68] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1195 = reshape(%1194, newshape=[]) /* ty=uint64 */;
  %1196 = @func_4597(%1195) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) */;
  %1197 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1198 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %1199 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1200 = %1193.1;
  %1201 = %1196.0;
  %1202 = %1197.0;
  %1203 = %1198.0;
  (%1199, %1200, %1201, meta[relay.Constant][68] /* ty=uint64 */, %1202, %1203)
}

def @func_10778() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %1204 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1205 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1206 = %1204.0;
  %1207 = %1205.0;
  (%1206, %1207)
}

def @func_15772() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1208 = @func_13838() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %1209 = @func_14357() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1210 = %1208.2;
  (%1209, %1210)
}

def @func_16393(%var_16383: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) {
  %1211 = @func_13891() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1212 = @func_10476() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %1213 = cast(%var_16383, dtype="float64") /* ty=Tensor[(572), float64] */;
  %1214 = reshape(%1213, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %1215 = @func_3378(%1214) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %1216 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1217 = @func_16090() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1218 = %1211.1;
  %1219 = %1212.1;
  %1220 = %1215.0;
  (%1216, %1217, %1218, %1219, %1220, %var_16383)
}

def @func_6973() -> Tensor[(6, 7, 8), uint8] {
  @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19744() -> (Tensor[(12, 9, 2), bool], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %1221 = @func_14716() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1222 = @func_19066() /* ty=Tensor[(12, 9, 2), bool] */;
  %1223 = @func_13434() /* ty=Tensor[(6, 7, 8), float64] */;
  %1224 = %1221.0;
  (%1222, %1223, %1224)
}

def @func_12057() -> (Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %1225 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %1226 = @func_11441() /* ty=(Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) */;
  %1227 = %1226.0;
  %1228 = cast(%1227, dtype="uint8") /* ty=Tensor[(1, 336), uint8] */;
  %1229 = reshape(%1228, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %1230 = @func_8138(%1229) /* ty=(Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %1231 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %1232 = cast(meta[relay.Constant][69] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1233 = reshape(%1232, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %1234 = @func_7054(%1233) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) */;
  %1235 = @func_9779() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
  %1236 = %1225.3;
  %1237 = %1230.0;
  %1238 = %1231.0;
  %1239 = %1234.0;
  %1240 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1241 = %1235.1;
  %1242 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1236, %1227, %1237, %1238, %1239, meta[relay.Constant][69] /* ty=Tensor[(192), float64] */, %1240, %1241, %1242)
}

def @func_9378(%var_9334: Tensor[(208), float64], %var_9353: Tensor[(1280), int64], %var_9354: Tensor[(156), int64], %var_9363: Tensor[(728, 4), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) {
  %1243 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1244 = cast(meta[relay.Constant][70] /* ty=Tensor[(196, 1), float64] */, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %1245 = cast(%var_9334, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1246 = reshape(%1244, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %1247 = reshape(%1245, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %1248 = @func_8030(%1246, %1247) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) */;
  %1249 = cast(%var_9353, dtype="int64") /* ty=Tensor[(1280), int64] */;
  %1250 = cast(%var_9354, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1251 = cast(meta[relay.Constant][71] /* ty=Tensor[(728, 4), float64] */, dtype="float64") /* ty=Tensor[(728, 4), float64] */;
  %1252 = reshape(%1249, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), int64] */;
  %1253 = reshape(%1250, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1254 = reshape(%1251, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %1255 = @func_5668(%1252, %1253, %1254) /* ty=(Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) */;
  %1256 = cast(%var_9363, dtype="int16") /* ty=Tensor[(728, 4), int16] */;
  %1257 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(728, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1258 = cast(meta[relay.Constant][71] /* ty=Tensor[(728, 4), float64] */, dtype="int16") /* ty=Tensor[(728, 4), int16] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1260 = %1243.0;
  %1261 = %1248.5;
  %1262 = %1255.10;
  %1263 = add(%1258, %1259) /* ty=Tensor[(728, 4), int16] */;
  (%1260, %1261, meta[relay.Constant][70] /* ty=Tensor[(196, 1), float64] */, %var_9334, %1262, %var_9353, %var_9354, %1263)
}

def @func_7799() -> Tensor[(6, 7, 8), float32] {
  %1264 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1265 = %1264.2;
  %1266 = cast(%1265, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  sinh(%1266) /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_9619() -> Tensor[(6, 7, 8), float64] {
  %1267 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1267.0
}

def @func_9127() -> Tensor[(6, 7, 8), float64] {
  %1268 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1268.0
}

def @func_14913() -> (Tensor[(3, 13, 4), float32], float64, Tensor[(3, 13, 4), uint8]) {
  %1269 = @func_12498() /* ty=(Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) */;
  %1270 = %1269.0;
  %1271 = cast(%1270, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %1272 = reshape(%1271, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1273 = @func_10727(%1272) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) */;
  %1274 = @func_11441() /* ty=(Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) */;
  %1275 = cast(%1270, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %1276 = tan(%1275) /* ty=Tensor[(3, 13, 4), float64] */;
  %1277 = cast(%1270, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %1278 = shape_of(%1276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1279 = cast(%1276, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1281 = power(%1279, %1280) /* ty=Tensor[(3, 13, 4), float64] */;
  %1282 = cast(meta[relay.Constant][72] /* ty=Tensor[(3, 13, 4), float64] */, dtype="uint8") /* ty=Tensor[(3, 13, 4), uint8] */;
  %1283 = shape_of(%1281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1284 = cast(%1281, dtype="uint8") /* ty=Tensor[(3, 13, 4), uint8] */;
  %1285 = dyn.reshape(%1282, %1283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1286 = %1273.0;
  %1287 = %1274.2;
  %1288 = bitwise_and(%1284, %1285) /* ty=Tensor[(3, 13, 4), uint8] */;
  (%1286, %1287, %1288)
}

def @func_18719() -> Tensor[(6, 7, 8), uint8] {
  @func_15508() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_14561() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) {
  %1289 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %1290 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1291 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1292 = cast(meta[relay.Constant][73] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1293 = reshape(%1292, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %1294 = @func_9300(%1293) /* ty=(Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) */;
  %1295 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1296 = %1289.3;
  %1297 = %1290.0;
  %1298 = %1291.0;
  %1299 = %1294.0;
  %1300 = %1295.0;
  (%1296, %1297, %1298, %1299, meta[relay.Constant][73] /* ty=Tensor[(360), float32] */, %1300)
}

def @func_7019() -> (Tensor[(6, 7, 8), float64],) {
  %1301 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1302 = cast(%1301, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %1303 = sigmoid(%1302) /* ty=Tensor[(6, 7, 8), float64] */;
  (%1303,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5499(%var_5497: int32, %var_5498: Tensor[(1, 10, 16), int32]) -> (Tensor[(1, 10, 16), int32],) {
  %3 = fn (%var_5488: int32, %var_5489: Tensor[(1, 10, 16), int32]) -> (Tensor[(1, 10, 16), int32],) {
    %0 = cast(%var_5488, dtype="int32") /* ty=int32 */;
    %1 = cast(%var_5489, dtype="int32") /* ty=Tensor[(1, 10, 16), int32] */;
    %2 = multiply(%0, %1) /* ty=Tensor[(1, 10, 16), int32] */;
    (%2,)
  };
  %3(%var_5497, %var_5498) /* ty=(Tensor[(1, 10, 16), int32],) */
}

def @func_7314(%var_7311: Tensor[(156), int64], %var_7312: Tensor[(196, 1), float64], %var_7313: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) {
  %15 = fn (%var_7305: Tensor[(156), int64], %var_7306: Tensor[(196, 1), float64], %var_7307: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) {
    %4 = cast(%var_7305, dtype="int64") /* ty=Tensor[(156), int64] */;
    %5 = cast(%var_7306, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
    %6 = cast(%var_7307, dtype="float64") /* ty=Tensor[(208), float64] */;
    %7 = cast(-9.352f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %8 = reshape(%4, newshape=[156]) /* ty=Tensor[(156), int64] */;
    %9 = reshape(%5, newshape=[196]) /* ty=Tensor[(196), float64] */;
    %10 = reshape(%6, newshape=[208]) /* ty=Tensor[(208), float64] */;
    %11 = reshape(%7, newshape=[]) /* ty=float64 */;
    %12 = @func_6903(%8, %9, %10, %11) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
    %13 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
    %14 = %12.9;
    (%13, %14, %var_7305, %var_7306, %var_7307, -9.352f64 /* ty=float64 */)
  };
  %15(%var_7311, %var_7312, %var_7313) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) */
}

def @func_8518() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %23 = fn () -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
    %16 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
    %17 = cast(%16, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %18 = reshape(%17, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
    %19 = @func_1425(%18) /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %20 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %21 = %19.0;
    %22 = %20.0;
    (%16, %21, %22)
  };
  %23() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @main() -> (Tensor[(8, 15, 13), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), float32]) {
  %24 = @func_19588() /* ty=(Tensor[(8, 15, 13), uint8],) */;
  %25 = @func_18500() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %26 = @func_12285() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %27 = %26.0;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %29 = %24.0;
  %30 = @func_19315() /* ty=Tensor[(6, 7, 8), uint8] */;
  %31 = %25.2;
  %32 = asinh(%28) /* ty=Tensor[(3, 13, 4), float32] */;
  (%29, %30, %31, %32)
}

def @func_17807() -> Tensor[(6, 7, 8), float64] {
  %33 = @func_12487() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %33.0
}

def @func_20268() -> Tensor[(6, 7, 8), uint8] {
  %34 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %34() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18548() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %35 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %36 = %35.1;
  %37 = @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%36, %37)
}

def @func_6338(%var_6336: uint32, %var_6337: Tensor[(117), uint32]) -> (Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) {
  @func_6334(%var_6336, %var_6337) /* ty=(Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) */
}

def @func_19454() -> Tensor[(6, 7, 8), uint8] {
  @func_19452() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_8694(%var_8692: Tensor[(4, 168), float32], %var_8693: Tensor[(6, 7, 8), uint8]) -> (Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(6, 8, 14), float32], Tensor[(4, 168), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32]) {
  @func_8690(%var_8692, %var_8693) /* ty=(Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(6, 8, 14), float32], Tensor[(4, 168), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32]) */
}

def @func_14407() -> (Tensor[(6, 7, 8), float64],) {
  @func_14405() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_7056(%var_7055: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) {
  %43 = fn (%var_7031: Tensor[(6, 2, 16), float64]) -> (Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) {
    %38 = cast(%var_7031, dtype="float64") /* ty=Tensor[(6, 2, 16), float64] */;
    %39 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
    %40 = cast(%39, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
    %41 = rsqrt(%38) /* ty=Tensor[(6, 2, 16), float64] */;
    %42 = exp(%40) /* ty=Tensor[(6, 7, 8), float32] */;
    (%41, %42)
  };
  %43(%var_7055) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) */
}

def @func_14358() -> Tensor[(6, 7, 8), uint8] {
  %45 = fn () -> Tensor[(6, 7, 8), uint8] {
    %44 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
    %44.0
  };
  %45() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19052() -> Tensor[(6, 7, 8), uint8] {
  %46 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_12880() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %46() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19066() -> Tensor[(12, 9, 2), bool] {
  @func_14209() /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_19315() -> Tensor[(6, 7, 8), uint8] {
  @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_13150() -> (Tensor[(?, 15, 13), float64],) {
  %47 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%47,)
}

def @func_9620() -> Tensor[(6, 7, 8), float64] {
  %49 = fn () -> Tensor[(6, 7, 8), float64] {
    %48 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %48.0
  };
  %49() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_17669(%var_17668: Tensor[(9, 15, 7), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(9, 15, 7), float32]) {
  %58 = fn (%var_17644: Tensor[(9, 15, 7), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(9, 15, 7), float32]) {
    %50 = cast(%var_17644, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %51 = erf(%50) /* ty=Tensor[(9, 15, 7), float32] */;
    %52 = cast(%var_17644, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%51, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %56 = @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */;
    %57 = divide(%54, %55) /* ty=Tensor[(9, 15, 7), float32] */;
    (%56, %57)
  };
  %58(%var_17668) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(9, 15, 7), float32]) */
}

def @func_8030(%var_8022: Tensor[(196), float64], %var_8023: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) {
  %59 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %60 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 156), int64] */, dtype="int64") /* ty=Tensor[(1, 156), int64] */;
  %61 = reshape(%60, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %62 = @func_6226(%61) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %63 = %62.1;
  %64 = cast(%63, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %65 = cast(%var_8022, dtype="float64") /* ty=Tensor[(196), float64] */;
  %66 = cast(%var_8023, dtype="float64") /* ty=Tensor[(208), float64] */;
  %67 = reshape(%64, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %68 = reshape(%65, newshape=[196, 1]) /* ty=Tensor[(196, 1), float64] */;
  %69 = reshape(%66, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %70 = @func_7310(%67, %68, %69) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(672), float32], Tensor[(156), int64], Tensor[(196, 1), float64], Tensor[(208), float64], float64) */;
  %71 = %59.0;
  %72 = %70.5;
  (%71, %63, meta[relay.Constant][0] /* ty=Tensor[(1, 156), int64] */, %72, %var_8022, %var_8023)
}

def @func_15417() -> (Tensor[(6, 7, 8), float64],) {
  @func_15415() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_12880() -> Tensor[(6, 7, 8), uint8] {
  %73 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %73.1
}

def @func_11969(%var_11924: Tensor[(156), int64], %var_11926: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) {
  %74 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %75 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %76 = cast(%var_11924, dtype="int64") /* ty=Tensor[(156), int64] */;
  %77 = cast(meta[relay.Constant][1] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %78 = cast(%var_11926, dtype="float64") /* ty=Tensor[(208), float64] */;
  %79 = cast(-3.52081f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %80 = reshape(%76, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %81 = reshape(%77, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %82 = reshape(%78, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %83 = reshape(%79, newshape=[]) /* ty=float64 */;
  %84 = @func_6903(%80, %81, %82, %83) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %85 = %74.0;
  %86 = %75.0;
  %87 = %84.4;
  (%85, %86, %87, %var_11924, meta[relay.Constant][1] /* ty=Tensor[(196), float64] */, %var_11926, -3.52081f64 /* ty=float64 */)
}

def @func_18719() -> Tensor[(6, 7, 8), uint8] {
  @func_15508() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_11729() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  @func_11727() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_8140(%var_8139: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
  %99 = fn (%var_8090: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
    %88 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %89 = %88.0;
    %90 = cast(%var_8090, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
    %91 = shape_of(%89, dtype="int32") /* ty=Tensor[(3), int32] */;
    %92 = cast(%89, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
    %93 = dyn.reshape(%90, %91, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %94 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %95 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %96 = greater(%92, %93) /* ty=Tensor[(6, 7, 8), bool] */;
    %97 = %94.0;
    %98 = %95.0;
    (%96, %97, %98)
  };
  %99(%var_8139) /* ty=(Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */
}

def @func_9079() -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %100 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %101 = @func_7857() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %102 = %101.0;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %104 = asinh(%103) /* ty=Tensor[(?, 15, 13), float32] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  %106 = %100.1;
  %107 = sqrt(%105) /* ty=Tensor[(?, 15, 13), float64] */;
  %108 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%106, %107, %108)
}

def @func_12230() -> (Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) {
  @func_12228() /* ty=(Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) */
}

def @func_19429() -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), uint8]) {
  %109 = @func_17247() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %110 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %111 = %109.0;
  %112 = %110.0;
  (%111, %112)
}

def @func_16625() -> Tensor[(6, 7, 8), float64] {
  %113 = fn () -> Tensor[(6, 7, 8), float64] {
    @func_8788() /* ty=Tensor[(6, 7, 8), float64] */
  };
  %113() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_13493() -> (Tensor[(6, 7, 8), float32],) {
  %114 = @func_12057() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %115 = %114.7;
  (%115,)
}

def @func_12285() -> (Tensor[(3, 13, 4), float32],) {
  %120 = fn () -> (Tensor[(3, 13, 4), float32],) {
    %116 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %117 = %116.0;
    %118 = cast(%117, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
    %119 = sinh(%118) /* ty=Tensor[(3, 13, 4), float32] */;
    (%119,)
  };
  %120() /* ty=(Tensor[(3, 13, 4), float32],) */
}

def @func_15904() -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
  %121 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %122 = @func_11296() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %123 = %121.1;
  %124 = %122.0;
  (%123, %124)
}

def @func_19983() -> (Tensor[(1, 336), float64], Tensor[(?, 15, 13), float64], Tensor[(572), float64]) {
  %125 = cast(meta[relay.Constant][2] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %126 = reshape(%125, newshape=[572]) /* ty=Tensor[(572), float64] */;
  %127 = @func_17092(%126) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) */;
  %128 = @func_18376() /* ty=Tensor[(1, 336), float64] */;
  %129 = %127.2;
  (%128, %129, meta[relay.Constant][2] /* ty=Tensor[(572), float64] */)
}

def @func_19804(%var_19802: Tensor[(8, 4, 8), float64]) -> Tensor[(8, 4, 8), float64] {
  @func_19801(%var_19802) /* ty=Tensor[(8, 4, 8), float64] */
}

def @func_4599(%var_4598: uint64) -> (Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) {
  %139 = fn (%var_4577: uint64) -> (Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) {
    %130 = cast(%var_4577, dtype="bool") /* ty=bool */;
    %131 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 6, 7), uint64] */, dtype="bool") /* ty=Tensor[(7, 6, 7), bool] */;
    %132 = cast(%var_4577, dtype="float64") /* ty=float64 */;
    %133 = cast(meta[relay.Constant][4] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %134 = reshape(%132, newshape=[]) /* ty=float64 */;
    %135 = reshape(%133, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
    %136 = @func_700(%134, %135) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
    %137 = not_equal(%130, %131) /* ty=Tensor[(7, 6, 7), bool] */;
    %138 = %136.2;
    (%137, %138, meta[relay.Constant][4] /* ty=Tensor[(99), float64] */)
  };
  %139(%var_4598) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) */
}

def @func_15311() -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(?, 15, 13), float64]) {
  %140 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %141 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %142 = @func_13249() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %143 = %140.0;
  %144 = %141.0;
  %145 = %142.0;
  (%143, %144, %145)
}

def @func_9081() -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_12102() -> Tensor[(6, 7, 8), uint8] {
  %147 = fn () -> Tensor[(6, 7, 8), uint8] {
    %146 = @func_11847() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %146.1
  };
  %147() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_12058() -> (Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %166 = fn () -> (Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
    %148 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
    %149 = @func_11441() /* ty=(Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) */;
    %150 = %149.0;
    %151 = cast(%150, dtype="uint8") /* ty=Tensor[(1, 336), uint8] */;
    %152 = reshape(%151, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
    %153 = @func_8138(%152) /* ty=(Tensor[(6, 7, 8), bool], Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
    %154 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
    %155 = cast(meta[relay.Constant][5] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %156 = reshape(%155, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
    %157 = @func_7054(%156) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) */;
    %158 = @func_9779() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
    %159 = %148.3;
    %160 = %153.0;
    %161 = %154.0;
    %162 = %157.0;
    %163 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
    %164 = %158.1;
    %165 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%159, %150, %160, %161, %162, meta[relay.Constant][5] /* ty=Tensor[(192), float64] */, %163, %164, %165)
  };
  %166() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_7157() -> Tensor[(6, 7, 8), uint8] {
  %167 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %167() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_6226(%var_6223: Tensor[(156), int64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %168 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %169 = cast(%var_6223, dtype="int64") /* ty=Tensor[(156), int64] */;
  %170 = cast(%var_6223, dtype="int64") /* ty=Tensor[(156), int64] */;
  %171 = reshape(%169, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %172 = reshape(%170, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %173 = %168.0;
  %174 = @func_4467(%171, %172) /* ty=Tensor[(3, 13, 4), int64] */;
  (%173, %174, %var_6223)
}

def @func_7083() -> (Tensor[(6, 7, 8), uint8],) {
  %175 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%175,)
}

def @func_14405() -> (Tensor[(6, 7, 8), float64],) {
  %176 = @func_12487() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %177 = %176.0;
  (%177,)
}

def @func_6909(%var_6905: Tensor[(156), int64], %var_6906: Tensor[(196), float64], %var_6907: Tensor[(208), float64], %var_6908: float64) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) {
  @func_6903(%var_6905, %var_6906, %var_6907, %var_6908) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */
}

def @func_19068() -> Tensor[(12, 9, 2), bool] {
  @func_19066() /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_7329() -> (Tensor[(6, 7, 8), float64],) {
  %178 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %181 = asinh(%180) /* ty=Tensor[(6, 7, 8), float64] */;
  (%181,)
}

def @func_14440() -> (Tensor[(?, 15, 13), float64],) {
  %184 = fn () -> (Tensor[(?, 15, 13), float64],) {
    %182 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %183 = %182.0;
    (%183,)
  };
  %184() /* ty=(Tensor[(?, 15, 13), float64],) */
}

def @func_14688() -> (Tensor[(6, 7, 8), uint8],) {
  %185 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %186 = %185.0;
  (%186,)
}

def @func_15648() -> (Tensor[(12, 9, 2), float32],) {
  %190 = fn () -> (Tensor[(12, 9, 2), float32],) {
    %187 = @func_14209() /* ty=Tensor[(12, 9, 2), bool] */;
    %188 = cast(%187, dtype="float32") /* ty=Tensor[(12, 9, 2), float32] */;
    %189 = atan(%188) /* ty=Tensor[(12, 9, 2), float32] */;
    (%189,)
  };
  %190() /* ty=(Tensor[(12, 9, 2), float32],) */
}

def @func_18014() -> (Tensor[(6, 7, 8), uint8],) {
  @func_18012() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_11257() -> Tensor[(336), uint8] {
  %192 = fn () -> Tensor[(336), uint8] {
    %191 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
    %191.1
  };
  %192() /* ty=Tensor[(336), uint8] */
}

def @func_14210() -> Tensor[(12, 9, 2), bool] {
  %197 = fn () -> Tensor[(12, 9, 2), bool] {
    %193 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
    %194 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 9, 2), uint32] */, dtype="bool") /* ty=Tensor[(12, 9, 2), bool] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%195, %196) /* ty=Tensor[(12, 9, 2), bool] */
  };
  %197() /* ty=Tensor[(12, 9, 2), bool] */
}

def @func_8788() -> Tensor[(6, 7, 8), float64] {
  %198 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %199 = %198.0;
  %200 = cast(%199, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  log10(%200) /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_15360() -> Tensor[(?, 15, 13), float64] {
  @func_15358() /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_8256() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  @func_8254() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_19260() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %201 = @func_11491() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %202 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
  %203 = @func_14232() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %204 = %201.0;
  %205 = %202.4;
  %206 = %203.0;
  (%204, %205, %206)
}

def @func_15415() -> (Tensor[(6, 7, 8), float64],) {
  %207 = @func_13838() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %208 = %207.1;
  (%208,)
}

def @func_17596() -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
  %212 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
    %209 = @func_8254() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %210 = %209.1;
    %211 = @func_16835() /* ty=Tensor[(3, 13, 4), int64] */;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */
}

def @func_15835() -> Tensor[(6, 7, 8), float64] {
  %214 = fn () -> Tensor[(6, 7, 8), float64] {
    %213 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %213.0
  };
  %214() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_11727() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %215 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %216 = @func_11019() /* ty=Tensor[(6, 7, 8), float64] */;
  %217 = %215.0;
  (%216, %217)
}

def @func_13927() -> (Tensor[(6, 7, 8), float64],) {
  %220 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %218 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %219 = %218.0;
    (%219,)
  };
  %220() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_13893() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  @func_13891() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_20000() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %221 = @func_18499() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %222 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
  %223 = %221.2;
  (%222, %223)
}

def @func_8621() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */
}

def @func_6673() -> Tensor[(6, 7, 8), uint8] {
  %230 = fn () -> Tensor[(6, 7, 8), uint8] {
    %224 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %225 = %224.0;
    %226 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 7, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%225, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    right_shift(%228, %229) /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %230() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_12839() -> (Tensor[(6, 7, 8), uint8],) {
  @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_7020() -> (Tensor[(6, 7, 8), float64],) {
  %234 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %231 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
    %232 = cast(%231, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
    %233 = sigmoid(%232) /* ty=Tensor[(6, 7, 8), float64] */;
    (%233,)
  };
  %234() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_8472() -> (Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) {
  @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */
}

def @func_18550() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  @func_18548() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_19150(%var_19127: Tensor[(192), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32], Tensor[(192), float64], Tensor[(?, 15, 13), float64]) {
  %235 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %236 = cast(%var_19127, dtype="float64") /* ty=Tensor[(192), float64] */;
  %237 = reshape(%236, newshape=[6, 2, 16]) /* ty=Tensor[(6, 2, 16), float64] */;
  %238 = @func_7054(%237) /* ty=(Tensor[(6, 2, 16), float64], Tensor[(6, 7, 8), float32]) */;
  %239 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %240 = %235.1;
  %241 = %238.1;
  %242 = %239.0;
  (%240, %241, %var_19127, %242)
}

def @func_17487() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  %243 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %244 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
  %245 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  %246 = %243.0;
  %247 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %248 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  %249 = %244.1;
  (%245, %246, %247, %248, %249)
}

def @func_17809() -> Tensor[(6, 7, 8), float64] {
  @func_17807() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_6159() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %250 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 336), uint8] */, dtype="uint8") /* ty=Tensor[(1, 336), uint8] */;
  %251 = reshape(%250, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %252 = @func_1425(%251) /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %253 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 15, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 15, 13), float64] */;
  %254 = asin(%253) /* ty=Tensor[(1, 15, 13), float64] */;
  %255 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 15, 13), float64] */, dtype="bool") /* ty=Tensor[(1, 15, 13), bool] */;
  %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%254, dtype="bool") /* ty=Tensor[(1, 15, 13), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = cast(meta[relay.Constant][11] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %260 = cast(meta[relay.Constant][11] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %261 = reshape(%259, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %262 = reshape(%260, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %263 = %252.0;
  %264 = not_equal(%257, %258) /* ty=Tensor[(?, 15, 13), bool] */;
  %265 = @func_4467(%261, %262) /* ty=Tensor[(3, 13, 4), int64] */;
  (%263, meta[relay.Constant][9] /* ty=Tensor[(1, 336), uint8] */, %264, %265, meta[relay.Constant][11] /* ty=Tensor[(156), int64] */)
}

def @func_12488() -> (Tensor[(6, 7, 8), float64],) {
  %268 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %266 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %267 = %266.0;
    (%267,)
  };
  %268() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_6975() -> Tensor[(6, 7, 8), uint8] {
  @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_9859() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
  %269 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %270 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %271 = reshape(%270, newshape=[]) /* ty=uint64 */;
  %272 = @func_4597(%271) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) */;
  %273 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %274 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %275 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %276 = %269.1;
  %277 = %272.0;
  %278 = %273.0;
  %279 = %274.0;
  (%275, %276, %277, meta[relay.Constant][12] /* ty=uint64 */, %278, %279)
}

def @func_15313() -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(?, 15, 13), float64]) {
  @func_15311() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(?, 15, 13), float64]) */
}

def @func_19588() -> (Tensor[(8, 15, 13), uint8],) {
  @func_19586() /* ty=(Tensor[(8, 15, 13), uint8],) */
}

def @func_18993(%var_18991: Tensor[(14, 3, 11), float64], %var_18992: Tensor[(11, 104), float64]) -> (Tensor[(14, 3, 11), float64], Tensor[(6, 7, 8), float64], Tensor[(8, 13, 11), float64], Tensor[(11, 104), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(11, 104), float64], Tensor[(11, 104), float64]) {
  %300 = fn (%var_18882: Tensor[(14, 3, 11), float64], %var_18893: Tensor[(11, 104), float64]) -> (Tensor[(14, 3, 11), float64], Tensor[(6, 7, 8), float64], Tensor[(8, 13, 11), float64], Tensor[(11, 104), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(11, 104), float64], Tensor[(11, 104), float64]) {
    %280 = cast(%var_18882, dtype="float64") /* ty=Tensor[(14, 3, 11), float64] */;
    %281 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %282 = reshape(%281, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), float64] */;
    %283 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %284 = @func_9779() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
    %285 = cast(%var_18893, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %286 = atanh(%285) /* ty=Tensor[(11, 104), float64] */;
    %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 104), float64] */, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(2), int32] */;
    %289 = cast(%286, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %291 = cast(%286, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
    %292 = acos(%280) /* ty=Tensor[(14, 3, 11), float64] */;
    %293 = @func_17807() /* ty=Tensor[(6, 7, 8), float64] */;
    %294 = @func_13163(%282) /* ty=Tensor[(8, 13, 11), float64] */;
    %295 = acosh(%283) /* ty=Tensor[(11, 104), float64] */;
    %296 = @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */;
    %297 = %284.1;
    %298 = power(%289, %290) /* ty=Tensor[(11, 104), float64] */;
    %299 = sqrt(%291) /* ty=Tensor[(11, 104), float64] */;
    (%292, %293, %294, %295, %296, %297, %298, %299)
  };
  %300(%var_18991, %var_18992) /* ty=(Tensor[(14, 3, 11), float64], Tensor[(6, 7, 8), float64], Tensor[(8, 13, 11), float64], Tensor[(11, 104), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(11, 104), float64], Tensor[(11, 104), float64]) */
}

def @func_11973(%var_11971: Tensor[(156), int64], %var_11972: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) {
  @func_11969(%var_11971, %var_11972) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) */
}

def @func_12734() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %304 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
    %301 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %302 = %301.0;
    %303 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%302, %303)
  };
  %304() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_17249() -> (Tensor[(3, 13, 4), float32],) {
  @func_17247() /* ty=(Tensor[(3, 13, 4), float32],) */
}

def @func_15487() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  @func_15485() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_18053() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  %305 = @func_10476() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %306 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
  %307 = %305.0;
  %308 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%306, %307, %308)
}

def @func_7085() -> (Tensor[(6, 7, 8), uint8],) {
  @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_7801() -> Tensor[(6, 7, 8), float32] {
  @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_5673(%var_5670: Tensor[(16, 10, 8), int64], %var_5671: Tensor[(156), int64], %var_5672: Tensor[(2912), float64]) -> (Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) {
  @func_5668(%var_5670, %var_5671, %var_5672) /* ty=(Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) */
}

def @func_12882() -> Tensor[(6, 7, 8), uint8] {
  @func_12880() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_11073(%var_11072: Tensor[(8, 2, 6), float32]) -> (Tensor[(8, 2, 6), float32],) {
  %311 = fn (%var_11063: Tensor[(8, 2, 6), float32]) -> (Tensor[(8, 2, 6), float32],) {
    %309 = cast(%var_11063, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
    %310 = sin(%309) /* ty=Tensor[(8, 2, 6), float32] */;
    (%310,)
  };
  %311(%var_11072) /* ty=(Tensor[(8, 2, 6), float32],) */
}

def @func_15756() -> Tensor[(6, 7, 8), float64] {
  %312 = @func_14232() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %312.0
}

def @func_6229(%var_6227: Tensor[(156), int64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  @func_6226(%var_6227) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */
}

def @func_13113() -> Tensor[(?, 15, 13), uint8] {
  @func_13111() /* ty=Tensor[(?, 15, 13), uint8] */
}

def @func_18583() -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(78, 2), int64], Tensor[(208), float64]) {
  %313 = @func_8995() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %314 = cast(meta[relay.Constant][14] /* ty=Tensor[(78, 2), int64] */, dtype="int64") /* ty=Tensor[(78, 2), int64] */;
  %315 = cast(meta[relay.Constant][15] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %316 = reshape(%314, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %317 = reshape(%315, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %318 = @func_11969(%316, %317) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(196), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64) */;
  %319 = %313.0;
  %320 = %318.6;
  (%319, %320, meta[relay.Constant][14] /* ty=Tensor[(78, 2), int64] */, meta[relay.Constant][15] /* ty=Tensor[(208), float64] */)
}

def @func_8470() -> (Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) {
  %321 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %322 = cast(meta[relay.Constant][16] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %323 = reshape(%322, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %324 = @func_3378(%323) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %325 = %321.0;
  %326 = %324.1;
  (%325, %326, meta[relay.Constant][16] /* ty=Tensor[(572), float64] */)
}

def @func_13495() -> (Tensor[(6, 7, 8), float32],) {
  @func_13493() /* ty=(Tensor[(6, 7, 8), float32],) */
}

def @func_19209() -> (Tensor[(6, 7, 8), float64],) {
  @func_19207() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_20313() -> Tensor[(6, 7, 8), uint8] {
  %327 = @func_11083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %327.0
}

def @func_7196(%var_7177: Tensor[(9, 6, 4), uint16], %var_7178: Tensor[(9, 6, 4), uint16], %var_7188: Tensor[(99), float64], %var_7189: Tensor[(672), float32]) -> (Tensor[(9, 6, 4), bool], Tensor[(4, 168), bool], Tensor[(4, 728), float64], Tensor[(99), float64], Tensor[(672), float32], Tensor[(3072), uint64]) {
  %328 = cast(%var_7178, dtype="bool") /* ty=Tensor[(9, 6, 4), bool] */;
  %329 = shape_of(%var_7177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%var_7177, dtype="bool") /* ty=Tensor[(9, 6, 4), bool] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %332 = cast(meta[relay.Constant][17] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %333 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 728), float64] */, dtype="float64") /* ty=Tensor[(4, 728), float64] */;
  %334 = cast(-6.66509f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %335 = cast(%var_7188, dtype="float64") /* ty=Tensor[(99), float64] */;
  %336 = cast(%var_7189, dtype="float32") /* ty=Tensor[(672), float32] */;
  %337 = reshape(%332, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
  %338 = reshape(%333, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %339 = reshape(%334, newshape=[]) /* ty=float64 */;
  %340 = reshape(%335, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %341 = reshape(%336, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %342 = @func_5137(%337, %338, %339, %340, %341) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
  %343 = cast(-6.66509f64 /* ty=float64 */, dtype="uint64") /* ty=uint64 */;
  %344 = cast(meta[relay.Constant][17] /* ty=Tensor[(3072), float64] */, dtype="uint64") /* ty=Tensor[(3072), uint64] */;
  %345 = less(%330, %331) /* ty=Tensor[(9, 6, 4), bool] */;
  %346 = %342.3;
  %347 = multiply(%343, %344) /* ty=Tensor[(3072), uint64] */;
  (%345, %346, meta[relay.Constant][18] /* ty=Tensor[(4, 728), float64] */, %var_7188, %var_7189, %347)
}

def @func_20002() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  @func_20000() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_5668(%var_5602: Tensor[(16, 10, 8), int64], %var_5625: Tensor[(156), int64], %var_5634: Tensor[(2912), float64]) -> (Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) {
  %348 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %349 = cast(%var_5602, dtype="int64") /* ty=Tensor[(16, 10, 8), int64] */;
  %350 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %351 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %352 = reshape(%350, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %353 = reshape(%351, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %354 = @func_413(%352, %353) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %355 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %356 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %357 = reshape(%355, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %358 = reshape(%356, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %359 = cast(%var_5634, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %360 = cast(-7 /* ty=int64 */, dtype="float64") /* ty=float64 */;
  %361 = cast(meta[relay.Constant][20] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %362 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %363 = reshape(%359, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %364 = reshape(%360, newshape=[]) /* ty=float64 */;
  %365 = reshape(%361, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %366 = reshape(%362, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %367 = @func_1149(%363, %364, %365, %366) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %369 = reshape(%368, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %370 = @func_3378(%369) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %371 = @func_4467(%357, %358) /* ty=Tensor[(3, 13, 4), int64] */;
  %372 = cast(%371, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %373 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %374 = reshape(%372, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %375 = reshape(%373, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(196, 1), float64] */, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %377 = cast(%var_5634, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 336), float32] */, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %379 = reshape(%376, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %380 = reshape(%377, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %381 = reshape(%378, newshape=[2, 336]) /* ty=Tensor[(2, 336), float32] */;
  %382 = @func_4640(%379, %380, %381) /* ty=(Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) */;
  %383 = @func_4467(%374, %375) /* ty=Tensor[(3, 13, 4), int64] */;
  %384 = cast(%383, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %385 = cast(%371, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %386 = reshape(%384, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %387 = reshape(%385, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %388 = @func_4467(%386, %387) /* ty=Tensor[(3, 13, 4), int64] */;
  %389 = cast(%388, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %390 = cast(%var_5625, dtype="int64") /* ty=Tensor[(156), int64] */;
  %391 = reshape(%389, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %392 = reshape(%390, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %393 = logical_xor(%348, %349) /* ty=Tensor[(16, 10, 8), int64] */;
  %394 = %354.0;
  %395 = %367.0;
  %396 = %370.1;
  %397 = %382.5;
  %398 = @func_4467(%391, %392) /* ty=Tensor[(3, 13, 4), int64] */;
  (%393, %394, meta[relay.Constant][19] /* ty=Tensor[(2, 336), float32] */, %371, %var_5625, %395, %var_5634, meta[relay.Constant][20] /* ty=Tensor[(99), float64] */, %396, meta[relay.Constant][21] /* ty=Tensor[(572), float64] */, %383, %397, meta[relay.Constant][22] /* ty=Tensor[(196, 1), float64] */, %388, %398)
}

def @func_17247() -> (Tensor[(3, 13, 4), float32],) {
  %399 = @func_12057() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(1, 336), uint8], Tensor[(6, 7, 8), bool], Tensor[(3, 13, 4), int64], Tensor[(6, 2, 16), float64], Tensor[(192), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %400 = %399.3;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
  %402 = exp(%401) /* ty=Tensor[(3, 13, 4), float64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %404 = erf(%403) /* ty=Tensor[(3, 13, 4), float32] */;
  (%404,)
}

def @func_17009() -> Tensor[(7, 6, 7), bool] {
  %405 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %405.2
}

def @func_8851() -> Tensor[(6, 7, 8), uint8] {
  @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_13725(%var_13687: Tensor[(10, 6, 14), int64]) -> Tensor[(10, 6, 14), bool] {
  %406 = cast(%var_13687, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %407 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(10, 6, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 6, 14), int64] */, dtype="bool") /* ty=Tensor[(10, 6, 14), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%408, %409) /* ty=Tensor[(10, 6, 14), bool] */
}

def @func_14131() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
  %415 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
    %410 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %411 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
    %412 = %410.0;
    %413 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
    %414 = @func_11875() /* ty=Tensor[(6, 7, 8), float32] */;
    (%411, %412, %413, %414)
  };
  %415() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */
}

def @func_18877() -> (Tensor[(3, 13, 4), int64],) {
  %416 = @func_11911() /* ty=Tensor[(3, 13, 4), int64] */;
  (%416,)
}

def @func_9780() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
  %420 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) {
    %417 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
    %418 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
    %419 = %417.1;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */
}

def @func_16605() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float32]) {
  @func_16603() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float32]) */
}

def @func_17954() -> (Tensor[(6, 7, 8), float32],) {
  @func_17952() /* ty=(Tensor[(6, 7, 8), float32],) */
}

def @func_11912() -> Tensor[(3, 13, 4), int64] {
  %422 = fn () -> Tensor[(3, 13, 4), int64] {
    %421 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %421.0
  };
  %422() /* ty=Tensor[(3, 13, 4), int64] */
}

def @func_11847() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %423 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %424 = %423.0;
  %425 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%424, %425)
}

def @func_6973() -> Tensor[(6, 7, 8), uint8] {
  @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7512() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %433 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
    %426 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %427 = @func_7142() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %428 = %427.0;
    %429 = cast(%428, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
    %430 = %426.0;
    %431 = tan(%429) /* ty=Tensor[(6, 7, 8), float32] */;
    %432 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%430, %431, %432)
  };
  %433() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_11296() -> (Tensor[(3, 13, 4), int64],) {
  %434 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %435 = %434.0;
  (%435,)
}

def @func_7703() -> (Tensor[(6, 7, 8), uint8],) {
  %437 = fn () -> (Tensor[(6, 7, 8), uint8],) {
    %436 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%436,)
  };
  %437() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_13152() -> (Tensor[(?, 15, 13), float64],) {
  @func_13150() /* ty=(Tensor[(?, 15, 13), float64],) */
}

def @func_16800() -> Tensor[(6, 7, 8), uint8] {
  @func_8851() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7558(%var_7557: Tensor[(99), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
  %446 = fn (%var_7553: Tensor[(99), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
    %438 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %439 = cast(5.09483f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %440 = cast(%var_7553, dtype="float64") /* ty=Tensor[(99), float64] */;
    %441 = reshape(%439, newshape=[]) /* ty=float64 */;
    %442 = reshape(%440, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
    %443 = @func_700(%441, %442) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
    %444 = %438.0;
    %445 = %443.0;
    (%444, %445, 5.09483f64 /* ty=float64 */, %var_7553)
  };
  %446(%var_7557) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) */
}

def @func_18308() -> (Tensor[(?, 15, 13), float64], uint64) {
  %451 = fn () -> (Tensor[(?, 15, 13), float64], uint64) {
    %447 = @func_13249() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %448 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
    %449 = %447.0;
    %450 = %448.3;
    (%449, %450)
  };
  %451() /* ty=(Tensor[(?, 15, 13), float64], uint64) */
}

def @func_17415() -> (Tensor[(6, 7, 8), uint8],) {
  @func_17413() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_13728(%var_13726: Tensor[(10, 6, 14), int64]) -> Tensor[(10, 6, 14), bool] {
  @func_13725(%var_13726) /* ty=Tensor[(10, 6, 14), bool] */
}

def @func_11770() -> (Tensor[(6, 7, 8), uint8],) {
  @func_11768() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_9128() -> Tensor[(6, 7, 8), float64] {
  %453 = fn () -> Tensor[(6, 7, 8), float64] {
    %452 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %452.0
  };
  %453() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_10727(%var_10706: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) {
  %454 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %455 = %454.0;
  %456 = cast(%var_10706, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %460 = cast(meta[relay.Constant][24] /* ty=Tensor[(539, 2), float32] */, dtype="float32") /* ty=Tensor[(539, 2), float32] */;
  %461 = reshape(%460, newshape=[14, 7, 11]) /* ty=Tensor[(14, 7, 11), float32] */;
  %462 = @func_6463(%461) /* ty=(Tensor[(14, 7, 11), float32],) */;
  %463 = divide(%458, %459) /* ty=Tensor[(3, 13, 4), float32] */;
  %464 = %462.0;
  (%463, %464, meta[relay.Constant][24] /* ty=Tensor[(539, 2), float32] */)
}

def @func_11502() -> (Tensor[(6, 7, 8), uint8],) {
  %465 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%465,)
}

def @func_10677(%var_10676: uint32) -> (Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) {
  %482 = fn (%var_10628: uint32) -> (Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) {
    %466 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %467 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %468 = cast(%var_10628, dtype="uint32") /* ty=uint32 */;
    %469 = cast(meta[relay.Constant][25] /* ty=Tensor[(117), uint32] */, dtype="uint32") /* ty=Tensor[(117), uint32] */;
    %470 = reshape(%468, newshape=[]) /* ty=uint32 */;
    %471 = reshape(%469, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
    %472 = @func_6111(%470, %471) /* ty=Tensor[(1, 13, 9), uint32] */;
    %473 = cast(meta[relay.Constant][25] /* ty=Tensor[(117), uint32] */, dtype="int64") /* ty=Tensor[(117), int64] */;
    %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%472, dtype="int64") /* ty=Tensor[(1, 13, 9), int64] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %477 = @func_9804() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %478 = %466.0;
    %479 = %467.1;
    %480 = left_shift(%475, %476) /* ty=Tensor[(?, 13, 9), int64] */;
    %481 = %477.0;
    (%478, %var_10628, %479, %480, %481)
  };
  %482(%var_10676) /* ty=(Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) */
}

def @func_9384(%var_9380: Tensor[(208), float64], %var_9381: Tensor[(1280), int64], %var_9382: Tensor[(156), int64], %var_9383: Tensor[(728, 4), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) {
  @func_9378(%var_9380, %var_9381, %var_9382, %var_9383) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) */
}

def @func_15378() -> Tensor[(6, 7, 8), float64] {
  @func_15376() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_16717(%var_16715: Tensor[(9, 16, 11), uint64], %var_16716: Tensor[(9, 16, 11), uint64]) -> (Tensor[(9, 16, 11), uint64],) {
  %488 = fn (%var_16695: Tensor[(9, 16, 11), uint64], %var_16696: Tensor[(9, 16, 11), uint64]) -> (Tensor[(9, 16, 11), uint64],) {
    %483 = cast(%var_16696, dtype="uint64") /* ty=Tensor[(9, 16, 11), uint64] */;
    %484 = shape_of(%var_16695, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%var_16695, dtype="uint64") /* ty=Tensor[(9, 16, 11), uint64] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %487 = minimum(%485, %486) /* ty=Tensor[(9, 16, 11), uint64] */;
    (%487,)
  };
  %488(%var_16715, %var_16716) /* ty=(Tensor[(9, 16, 11), uint64],) */
}

def @func_16165(%var_16163: Tensor[(550), float32], %var_16164: Tensor[(96), float32]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 5, 10), float32], Tensor[(550), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(6, 7, 8), uint8]) {
  %504 = fn (%var_16118: Tensor[(550), float32], %var_16142: Tensor[(96), float32]) -> (Tensor[(6, 7, 8), float64], Tensor[(11, 5, 10), float32], Tensor[(550), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(6, 7, 8), uint8]) {
    %489 = @func_14561() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) */;
    %490 = cast(%var_16118, dtype="float32") /* ty=Tensor[(550), float32] */;
    %491 = reshape(%490, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), float32] */;
    %492 = @func_8946(%491) /* ty=(Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
    %493 = @func_14561() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) */;
    %494 = cast(%var_16142, dtype="float32") /* ty=Tensor[(96), float32] */;
    %495 = reshape(%494, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float32] */;
    %496 = @func_11071(%495) /* ty=(Tensor[(8, 2, 6), float32],) */;
    %497 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %498 = %489.5;
    %499 = %492.3;
    %500 = %493.2;
    %501 = @func_11256() /* ty=Tensor[(336), uint8] */;
    %502 = %496.0;
    %503 = %497.0;
    (%498, %499, %var_16118, %500, %501, %502, %var_16142, %503)
  };
  %504(%var_16163, %var_16164) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(11, 5, 10), float32], Tensor[(550), float32], Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(8, 2, 6), float32], Tensor[(96), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_7655() -> Tensor[(6, 7, 8), uint8] {
  %505 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %505() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_15758() -> Tensor[(6, 7, 8), float64] {
  @func_15756() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_7919() -> Tensor[(6, 7, 8), uint8] {
  %507 = fn () -> Tensor[(6, 7, 8), uint8] {
    %506 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %506.0
  };
  %507() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_16091() -> Tensor[(6, 7, 8), uint8] {
  %508 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_13227() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %508() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_10477() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %514 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
    %509 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %510 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
    %511 = %509.0;
    %512 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
    %513 = %510.0;
    (%511, %512, %513)
  };
  %514() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_18114() -> (Tensor[(3, 13, 4), float32], Tensor[(3, 13, 4), int16], Tensor[(2912), float64], Tensor[(1280), int64], Tensor[(2912), float64]) {
  @func_18112() /* ty=(Tensor[(3, 13, 4), float32], Tensor[(3, 13, 4), int16], Tensor[(2912), float64], Tensor[(1280), int64], Tensor[(2912), float64]) */
}

def @func_7467() -> (Tensor[(3, 13, 4), int64],) {
  %517 = fn () -> (Tensor[(3, 13, 4), int64],) {
    %515 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %516 = %515.3;
    (%516,)
  };
  %517() /* ty=(Tensor[(3, 13, 4), int64],) */
}

def @func_14690() -> (Tensor[(6, 7, 8), uint8],) {
  @func_14688() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_12971() -> (Tensor[(6, 7, 8), float64],) {
  @func_12969() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_14232() -> (Tensor[(6, 7, 8), float64],) {
  %518 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_10843(%var_10842: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) {
  %529 = fn (%var_10827: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) {
    %520 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %521 = %520.0;
    %522 = cast(%521, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
    %523 = cast(%var_10827, dtype="int8") /* ty=Tensor[(3, 13, 4), int8] */;
    %524 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
    %525 = cast(%521, dtype="int8") /* ty=Tensor[(3, 13, 4), int8] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %527 = asin(%522) /* ty=Tensor[(3, 13, 4), float64] */;
    %528 = bitwise_xor(%525, %526) /* ty=Tensor[(3, 13, 4), int8] */;
    (%527, %528)
  };
  %529(%var_10842) /* ty=(Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) */
}

def @func_5353(%var_5351: Tensor[(1, 16, 13), float64]) -> (Tensor[(1, 16, 13), float64],) {
  @func_5350(%var_5351) /* ty=(Tensor[(1, 16, 13), float64],) */
}

def @func_15236(%var_15234: Tensor[(13, 2, 12), float32], %var_15235: Tensor[(420, 2), float64]) -> (Tensor[(13, 2, 12), float32], Tensor[(336), uint8], Tensor[(6, 7, 8), uint8], Tensor[(420, 2), float64], Tensor[(6, 7, 8), float64]) {
  %540 = fn (%var_15204: Tensor[(13, 2, 12), float32], %var_15223: Tensor[(420, 2), float64]) -> (Tensor[(13, 2, 12), float32], Tensor[(336), uint8], Tensor[(6, 7, 8), uint8], Tensor[(420, 2), float64], Tensor[(6, 7, 8), float64]) {
    %530 = cast(%var_15204, dtype="float32") /* ty=Tensor[(13, 2, 12), float32] */;
    %531 = @func_14786() /* ty=(Tensor[(336), uint8],) */;
    %532 = cast(%var_15223, dtype="float64") /* ty=Tensor[(420, 2), float64] */;
    %533 = reshape(%532, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
    %534 = @func_7636(%533) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) */;
    %535 = @func_14405() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %536 = acosh(%530) /* ty=Tensor[(13, 2, 12), float32] */;
    %537 = %531.0;
    %538 = %534.2;
    %539 = %535.0;
    (%536, %537, %538, %var_15223, %539)
  };
  %540(%var_15234, %var_15235) /* ty=(Tensor[(13, 2, 12), float32], Tensor[(336), uint8], Tensor[(6, 7, 8), uint8], Tensor[(420, 2), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_7331() -> (Tensor[(6, 7, 8), float64],) {
  @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_8853() -> Tensor[(6, 7, 8), uint8] {
  @func_8851() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_14629() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
  %541 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %542 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %543 = cast(meta[relay.Constant][26] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %544 = reshape(%543, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %545 = @func_10841(%544) /* ty=(Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) */;
  %546 = %541.0;
  %547 = %542.0;
  %548 = %545.1;
  (%546, %547, %548, meta[relay.Constant][26] /* ty=Tensor[(156), int64] */)
}

def @func_12399() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  @func_12397() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */
}

def @func_17778() -> (Tensor[(?, 15, 13), bool], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(360), float32], Tensor[(6, 7, 8), uint8]) {
  %549 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %550 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %551 = reshape(%550, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %552 = @func_10140(%551) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */;
  %553 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %554 = %549.2;
  %555 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %556 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  %557 = %552.1;
  %558 = %553.0;
  (%554, %555, %556, %557, meta[relay.Constant][27] /* ty=Tensor[(360), float32] */, %558)
}

def @func_17981() -> Tensor[(6, 7, 8), uint8] {
  %559 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %559.0
}

def @func_19745() -> (Tensor[(12, 9, 2), bool], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %564 = fn () -> (Tensor[(12, 9, 2), bool], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
    %560 = @func_14716() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %561 = @func_19066() /* ty=Tensor[(12, 9, 2), bool] */;
    %562 = @func_13434() /* ty=Tensor[(6, 7, 8), float64] */;
    %563 = %560.0;
    (%561, %562, %563)
  };
  %564() /* ty=(Tensor[(12, 9, 2), bool], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_19431() -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), uint8]) {
  @func_19429() /* ty=(Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_18445() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %565 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %566 = @func_11417() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) */;
  %567 = %566.0;
  %568 = cast(%567, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
  %569 = reshape(%568, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %570 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
  %571 = %565.0;
  %572 = @func_8987(%569) /* ty=Tensor[(6, 7, 8), int8] */;
  %573 = %570.1;
  (%571, %567, %572, %573)
}

def @func_7265() -> Tensor[(6, 7, 8), uint8] {
  @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_11876() -> Tensor[(6, 7, 8), float32] {
  %574 = fn () -> Tensor[(6, 7, 8), float32] {
    @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
  };
  %574() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_19673() -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
  %579 = fn () -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
    %575 = @func_7857() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %576 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
    %577 = %575.0;
    %578 = %576.0;
    (%577, %578)
  };
  %579() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) */
}

def @func_18706() -> (Tensor[(6, 7, 8), int8],) {
  @func_18704() /* ty=(Tensor[(6, 7, 8), int8],) */
}

def @func_18500() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %585 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
    %580 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %581 = @func_18053() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
    %582 = %580.0;
    %583 = @func_17906() /* ty=Tensor[(6, 7, 8), int8] */;
    %584 = %581.0;
    (%582, %583, %584)
  };
  %585() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */
}

def @func_6465(%var_6464: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32],) {
  %588 = fn (%var_6453: Tensor[(14, 7, 11), float32]) -> (Tensor[(14, 7, 11), float32],) {
    %586 = cast(%var_6453, dtype="float32") /* ty=Tensor[(14, 7, 11), float32] */;
    %587 = atan(%586) /* ty=Tensor[(14, 7, 11), float32] */;
    (%587,)
  };
  %588(%var_6464) /* ty=(Tensor[(14, 7, 11), float32],) */
}

def @func_14060() -> (Tensor[(6, 7, 8), uint8],) {
  %591 = fn () -> (Tensor[(6, 7, 8), uint8],) {
    %589 = @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %590 = %589.0;
    (%590,)
  };
  %591() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_15259() -> (Tensor[(6, 7, 8), int8],) {
  @func_15257() /* ty=(Tensor[(6, 7, 8), int8],) */
}

def @func_17151(%var_17149: Tensor[(1, 12, 3), float32]) -> (Tensor[(1, 12, 3), float32], Tensor[(13, 4, 11), bool], Tensor[(572), float64]) {
  @func_17148(%var_17149) /* ty=(Tensor[(1, 12, 3), float32], Tensor[(13, 4, 11), bool], Tensor[(572), float64]) */
}

def @func_7263() -> Tensor[(6, 7, 8), uint8] {
  %592 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %592.0
}

def @func_18721() -> Tensor[(6, 7, 8), uint8] {
  @func_18719() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_9378(%var_9334: Tensor[(208), float64], %var_9353: Tensor[(1280), int64], %var_9354: Tensor[(156), int64], %var_9363: Tensor[(728, 4), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) {
  %593 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %594 = cast(meta[relay.Constant][28] /* ty=Tensor[(196, 1), float64] */, dtype="float64") /* ty=Tensor[(196, 1), float64] */;
  %595 = cast(%var_9334, dtype="float64") /* ty=Tensor[(208), float64] */;
  %596 = reshape(%594, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %597 = reshape(%595, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %598 = @func_8030(%596, %597) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) */;
  %599 = cast(%var_9353, dtype="int64") /* ty=Tensor[(1280), int64] */;
  %600 = cast(%var_9354, dtype="int64") /* ty=Tensor[(156), int64] */;
  %601 = cast(meta[relay.Constant][29] /* ty=Tensor[(728, 4), float64] */, dtype="float64") /* ty=Tensor[(728, 4), float64] */;
  %602 = reshape(%599, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), int64] */;
  %603 = reshape(%600, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %604 = reshape(%601, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %605 = @func_5668(%602, %603, %604) /* ty=(Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) */;
  %606 = cast(%var_9363, dtype="int16") /* ty=Tensor[(728, 4), int16] */;
  %607 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(728, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %608 = cast(meta[relay.Constant][29] /* ty=Tensor[(728, 4), float64] */, dtype="int16") /* ty=Tensor[(728, 4), int16] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %610 = %593.0;
  %611 = %598.5;
  %612 = %605.10;
  %613 = add(%608, %609) /* ty=Tensor[(728, 4), int16] */;
  (%610, %611, meta[relay.Constant][28] /* ty=Tensor[(196, 1), float64] */, %var_9334, %612, %var_9353, %var_9354, %613)
}

def @func_15376() -> Tensor[(6, 7, 8), float64] {
  %614 = @func_14716() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %614.0
}

def @func_19262() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  @func_19260() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_18831() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], uint32) {
  %623 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], uint32) {
    %615 = @func_15772() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %616 = @func_16040() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) */;
    %617 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %618 = reshape(%617, newshape=[]) /* ty=uint32 */;
    %619 = @func_10675(%618) /* ty=(Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) */;
    %620 = %615.1;
    %621 = %616.1;
    %622 = %619.3;
    (%620, %621, %622, meta[relay.Constant][30] /* ty=uint32 */)
  };
  %623() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], uint32) */
}

def @func_14788() -> (Tensor[(336), uint8],) {
  @func_14786() /* ty=(Tensor[(336), uint8],) */
}

def @func_15051() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  %624 = @func_10299() /* ty=(Tensor[(6, 7, 8), int8],) */;
  %625 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  %626 = %624.0;
  %627 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%625, %626, %627)
}

def @func_17011() -> Tensor[(7, 6, 7), bool] {
  @func_17009() /* ty=Tensor[(7, 6, 7), bool] */
}

def @func_10591() -> (Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
  @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */
}

def @func_19985() -> (Tensor[(1, 336), float64], Tensor[(?, 15, 13), float64], Tensor[(572), float64]) {
  @func_19983() /* ty=(Tensor[(1, 336), float64], Tensor[(?, 15, 13), float64], Tensor[(572), float64]) */
}

def @func_14631() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
  @func_14629() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) */
}

def @func_10730(%var_10728: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) {
  @func_10727(%var_10728) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) */
}

def @func_13165(%var_13164: Tensor[(8, 13, 11), float64]) -> Tensor[(8, 13, 11), float64] {
  %629 = fn (%var_13160: Tensor[(8, 13, 11), float64]) -> Tensor[(8, 13, 11), float64] {
    %628 = cast(%var_13160, dtype="float64") /* ty=Tensor[(8, 13, 11), float64] */;
    sigmoid(%628) /* ty=Tensor[(8, 13, 11), float64] */
  };
  %629(%var_13164) /* ty=Tensor[(8, 13, 11), float64] */
}

def @func_14591() -> (Tensor[(3, 13, 4), int64],) {
  %630 = @func_8470() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(336), uint8], Tensor[(572), float64]) */;
  %631 = %630.0;
  (%631,)
}

def @func_7857() -> (Tensor[(?, 15, 13), float64],) {
  %632 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  (%632,)
}

def @func_12969() -> (Tensor[(6, 7, 8), float64],) {
  %633 = @func_8788() /* ty=Tensor[(6, 7, 8), float64] */;
  (%633,)
}

def @func_9034() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %634 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %635 = %634.2;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %637 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %638 = cos(%636) /* ty=Tensor[(6, 7, 8), float64] */;
  %639 = %637.0;
  (%638, %639)
}

def @func_15053() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  @func_15051() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */
}

def @func_15906() -> (Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) {
  @func_15904() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(3, 13, 4), int64]) */
}

def @func_17148(%var_17128: Tensor[(1, 12, 3), float32]) -> (Tensor[(1, 12, 3), float32], Tensor[(13, 4, 11), bool], Tensor[(572), float64]) {
  %640 = cast(%var_17128, dtype="float32") /* ty=Tensor[(1, 12, 3), float32] */;
  %641 = cast(meta[relay.Constant][31] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %642 = reshape(%641, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %643 = @func_3378(%642) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %644 = exp(%640) /* ty=Tensor[(1, 12, 3), float32] */;
  %645 = %643.2;
  (%644, %645, meta[relay.Constant][31] /* ty=Tensor[(572), float64] */)
}

def @func_1427(%var_1426: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), uint8],) {
  %651 = fn (%var_1413: Tensor[(6, 7, 8), uint8]) -> (Tensor[(6, 7, 8), uint8],) {
    %646 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 7, 8), uint8] */, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %647 = shape_of(%var_1413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %648 = cast(%var_1413, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %650 = left_shift(%648, %649) /* ty=Tensor[(6, 7, 8), uint8] */;
    (%650,)
  };
  %651(%var_1426) /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_15950() -> (Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
  %660 = fn () -> (Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) {
    %652 = @func_14405() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %653 = @func_12228() /* ty=(Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) */;
    %654 = cast(meta[relay.Constant][33] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
    %655 = reshape(%654, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
    %656 = @func_10841(%655) /* ty=(Tensor[(3, 13, 4), float64], Tensor[(3, 13, 4), int8]) */;
    %657 = %652.0;
    %658 = %653.3;
    %659 = %656.1;
    (%657, %658, %659, meta[relay.Constant][33] /* ty=Tensor[(156), int64] */)
  };
  %660() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) */
}

def @func_7799() -> Tensor[(6, 7, 8), float32] {
  %661 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %662 = %661.2;
  %663 = cast(%662, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  sinh(%663) /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_7844() -> Tensor[(?, 15, 13), float64] {
  @func_7842() /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_7350() -> (Tensor[(6, 7, 8), uint8],) {
  @func_7348() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_13838() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %664 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
  %665 = @func_9619() /* ty=Tensor[(6, 7, 8), float64] */;
  %666 = @func_12101() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%664, %665, %666)
}

def @func_12623() -> Tensor[(6, 7, 8), float64] {
  %667 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %667.0
}

def @func_5143(%var_5138: Tensor[(16, 16, 12), float64], %var_5139: Tensor[(2912), float64], %var_5140: float64, %var_5141: Tensor[(99), float64], %var_5142: Tensor[(4, 168), float32]) -> (Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) {
  %685 = fn (%var_5102: Tensor[(16, 16, 12), float64], %var_5116: Tensor[(2912), float64], %var_5117: float64, %var_5118: Tensor[(99), float64], %var_5119: Tensor[(4, 168), float32]) -> (Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) {
    %668 = cast(%var_5116, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %669 = cast(%var_5117, dtype="float64") /* ty=float64 */;
    %670 = cast(%var_5118, dtype="float64") /* ty=Tensor[(99), float64] */;
    %671 = cast(%var_5119, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
    %672 = reshape(%668, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
    %673 = reshape(%669, newshape=[]) /* ty=float64 */;
    %674 = reshape(%670, newshape=[99]) /* ty=Tensor[(99), float64] */;
    %675 = reshape(%671, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %676 = @func_1149(%672, %673, %674, %675) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
    %677 = cast(%var_5119, dtype="bool") /* ty=Tensor[(4, 168), bool] */;
    %678 = cast(%var_5117, dtype="bool") /* ty=bool */;
    %679 = cast(%var_5102, dtype="float64") /* ty=Tensor[(16, 16, 12), float64] */;
    %680 = log10(%679) /* ty=Tensor[(16, 16, 12), float64] */;
    %681 = cast(%680, dtype="float64") /* ty=Tensor[(16, 16, 12), float64] */;
    %682 = %676.3;
    %683 = not_equal(%677, %678) /* ty=Tensor[(4, 168), bool] */;
    %684 = asin(%681) /* ty=Tensor[(16, 16, 12), float64] */;
    (%682, %var_5116, %var_5118, %683, %684)
  };
  %685(%var_5138, %var_5139, %var_5140, %var_5141, %var_5142) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */
}

def @func_17915() -> (Tensor[(6, 7, 8), float32],) {
  @func_17913() /* ty=(Tensor[(6, 7, 8), float32],) */
}

def @func_15471(%var_15469: Tensor[(7, 6, 7), bool], %var_15470: Tensor[(208), float64]) -> (Tensor[(7, 6, 7), uint8], Tensor[(3, 13, 4), float32], Tensor[(1280), int64], Tensor[(208), float64], Tensor[(1280, 1), int64], Tensor[(2912), float64]) {
  %705 = fn (%var_15444: Tensor[(7, 6, 7), bool], %var_15463: Tensor[(208), float64]) -> (Tensor[(7, 6, 7), uint8], Tensor[(3, 13, 4), float32], Tensor[(1280), int64], Tensor[(208), float64], Tensor[(1280, 1), int64], Tensor[(2912), float64]) {
    %686 = @func_11787() /* ty=(Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) */;
    %687 = %686.0;
    %688 = cast(%var_15444, dtype="uint8") /* ty=Tensor[(7, 6, 7), uint8] */;
    %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
    %690 = cast(%687, dtype="uint8") /* ty=Tensor[(7, 6, 7), uint8] */;
    %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %692 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
    %693 = cast(%var_15463, dtype="float64") /* ty=Tensor[(208), float64] */;
    %694 = cast(meta[relay.Constant][34] /* ty=Tensor[(1280, 1), int64] */, dtype="int64") /* ty=Tensor[(1280, 1), int64] */;
    %695 = %692.0;
    %696 = cast(%695, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
    %697 = cast(meta[relay.Constant][35] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %698 = reshape(%693, newshape=[208]) /* ty=Tensor[(208), float64] */;
    %699 = reshape(%694, newshape=[1280]) /* ty=Tensor[(1280), int64] */;
    %700 = reshape(%696, newshape=[156]) /* ty=Tensor[(156), int64] */;
    %701 = reshape(%697, newshape=[728, 4]) /* ty=Tensor[(728, 4), float64] */;
    %702 = @func_9378(%698, %699, %700, %701) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(208), float64], Tensor[(196, 1), float64], Tensor[(208), float64], Tensor[(3, 13, 4), int64], Tensor[(1280), int64], Tensor[(156), int64], Tensor[(728, 4), int16]) */;
    %703 = add(%690, %691) /* ty=Tensor[(7, 6, 7), uint8] */;
    %704 = %702.5;
    (%703, %695, %704, %var_15463, meta[relay.Constant][34] /* ty=Tensor[(1280, 1), int64] */, meta[relay.Constant][35] /* ty=Tensor[(2912), float64] */)
  };
  %705(%var_15469, %var_15470) /* ty=(Tensor[(7, 6, 7), uint8], Tensor[(3, 13, 4), float32], Tensor[(1280), int64], Tensor[(208), float64], Tensor[(1280, 1), int64], Tensor[(2912), float64]) */
}

def @func_8690(%var_8644: Tensor[(4, 168), float32], %var_8654: Tensor[(6, 7, 8), uint8]) -> (Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(6, 8, 14), float32], Tensor[(4, 168), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32]) {
  %706 = cast(meta[relay.Constant][36] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %707 = cast(meta[relay.Constant][37] /* ty=Tensor[(117), uint32] */, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %708 = reshape(%706, newshape=[]) /* ty=uint32 */;
  %709 = reshape(%707, newshape=[117]) /* ty=Tensor[(117), uint32] */;
  %710 = @func_6334(%708, %709) /* ty=(Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) */;
  %711 = cast(%var_8644, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %712 = cast(%var_8644, dtype="float32") /* ty=Tensor[(4, 168), float32] */;
  %713 = reshape(%711, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %714 = reshape(%712, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %715 = @func_413(%713, %714) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %716 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %717 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %718 = %717.0;
  %719 = cast(%var_8654, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%718, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %723 = %710.9;
  %724 = %715.0;
  %725 = %716.0;
  %726 = power(%721, %722) /* ty=Tensor[(6, 7, 8), float32] */;
  (%723, meta[relay.Constant][36] /* ty=uint32 */, meta[relay.Constant][37] /* ty=Tensor[(117), uint32] */, %724, %var_8644, %725, %726)
}

def @func_18646(%var_18645: Tensor[(7, 6, 15), float64]) -> (Tensor[(7, 6, 15), bool],) {
  %732 = fn (%var_18637: Tensor[(7, 6, 15), float64]) -> (Tensor[(7, 6, 15), bool],) {
    %727 = cast(%var_18637, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
    %728 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %729 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 6, 15), float64] */, dtype="bool") /* ty=Tensor[(7, 6, 15), bool] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %731 = equal(%729, %730) /* ty=Tensor[(7, 6, 15), bool] */;
    (%731,)
  };
  %732(%var_18645) /* ty=(Tensor[(7, 6, 15), bool],) */
}

def @func_11020() -> Tensor[(6, 7, 8), float64] {
  %734 = fn () -> Tensor[(6, 7, 8), float64] {
    %733 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %733.0
  };
  %734() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_15343() -> (Tensor[(6, 7, 8), uint8],) {
  %735 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%735,)
}

def @func_16218() -> (Tensor[(6, 7, 8), float64],) {
  @func_16216() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_12655() -> Tensor[(6, 7, 8), uint8] {
  @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18055() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  @func_18053() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */
}

def @func_3378(%var_3360: Tensor[(13, 4, 11), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) {
  %736 = cast(meta[relay.Constant][39] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %737 = reshape(%736, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
  %738 = @func_1425(%737) /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %739 = cast(%var_3360, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %740 = acos(%739) /* ty=Tensor[(13, 4, 11), float64] */;
  %741 = cast(%var_3360, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %745 = %738.0;
  %746 = greater(%743, %744) /* ty=Tensor[(13, 4, 11), bool] */;
  (%745, meta[relay.Constant][39] /* ty=Tensor[(336), uint8] */, %746)
}

def @func_19648() -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %755 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
    %747 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %748 = @func_13150() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %749 = @func_14439() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %750 = @func_18053() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
    %751 = %747.0;
    %752 = %748.0;
    %753 = %749.0;
    %754 = %750.1;
    (%751, %752, %753, %754)
  };
  %755() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_19153(%var_19151: Tensor[(192), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32], Tensor[(192), float64], Tensor[(?, 15, 13), float64]) {
  @func_19150(%var_19151) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float32], Tensor[(192), float64], Tensor[(?, 15, 13), float64]) */
}

def @func_16192() -> (Tensor[(336), uint8], Tensor[(6, 7, 8), uint8]) {
  %756 = @func_14786() /* ty=(Tensor[(336), uint8],) */;
  %757 = @func_15580() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) */;
  %758 = %756.0;
  %759 = %757.6;
  (%758, %759)
}

def @func_11164() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  @func_11162() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_11492() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %763 = fn () -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
    %760 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %761 = %760.0;
    %762 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_13840() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  @func_13838() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_19270() -> Tensor[(6, 7, 8), float64] {
  %765 = fn () -> Tensor[(6, 7, 8), float64] {
    %764 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %764.0
  };
  %765() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_14234() -> (Tensor[(6, 7, 8), float64],) {
  @func_14232() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_16040() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) {
  %766 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %767 = @func_11911() /* ty=Tensor[(3, 13, 4), int64] */;
  %768 = %766.0;
  (%767, %768)
}

def @func_6334(%var_6260: uint32, %var_6261: Tensor[(117), uint32]) -> (Tensor[(1, 336), uint8], Tensor[(1, 16, 13), float64], Tensor[(208, 1), float64], Tensor[(1, 13, 9), uint32], uint32, Tensor[(117), uint32], Tensor[(1, 16, 13), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(1, 13, 9), uint32], Tensor[(99), float64]) {
  %769 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %770 = cast(meta[relay.Constant][40] /* ty=Tensor[(208, 1), float64] */, dtype="float64") /* ty=Tensor[(208, 1), float64] */;
  %771 = reshape(%770, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %772 = @func_5350(%771) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %773 = cast(%var_6260, dtype="uint32") /* ty=uint32 */;
  %774 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %775 = reshape(%773, newshape=[]) /* ty=uint32 */;
  %776 = reshape(%774, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
  %777 = %772.0;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(1, 16, 13), float64] */;
  %779 = reshape(%778, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %780 = @func_5350(%779) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %781 = cast(meta[relay.Constant][41] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
  %782 = reshape(%781, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %783 = @func_3378(%782) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %784 = cast(%var_6260, dtype="uint32") /* ty=uint32 */;
  %785 = cast(%var_6261, dtype="uint32") /* ty=Tensor[(117), uint32] */;
  %786 = reshape(%784, newshape=[]) /* ty=uint32 */;
  %787 = reshape(%785, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), uint32] */;
  %788 = cast(%var_6260, dtype="uint64") /* ty=uint64 */;
  %789 = reshape(%788, newshape=[]) /* ty=uint64 */;
  %790 = @func_4597(%789) /* ty=(Tensor[(7, 6, 7), bool], Tensor[(672), float32], Tensor[(99), float64]) */;
  %791 = %769.1;
  %792 = @func_6111(%775, %776) /* ty=Tensor[(1, 13, 9), uint32] */;
  %793 = %780.0;
  %794 = %783.1;
  %795 = @func_6111(%786, %787) /* ty=Tensor[(1, 13, 9), uint32] */;
  %796 = %790.2;
  (%791, %777, meta[relay.Constant][40] /* ty=Tensor[(208, 1), float64] */, %792, %var_6260, %var_6261, %793, %794, meta[relay.Constant][41] /* ty=Tensor[(572), float64] */, %795, %796)
}

def @func_16783() -> Tensor[(6, 7, 8), float32] {
  %797 = fn () -> Tensor[(6, 7, 8), float32] {
    @func_7900() /* ty=Tensor[(6, 7, 8), float32] */
  };
  %797() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_10779() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %802 = fn () -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
    %798 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %799 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %800 = %798.0;
    %801 = %799.0;
    (%800, %801)
  };
  %802() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_16194() -> (Tensor[(336), uint8], Tensor[(6, 7, 8), uint8]) {
  @func_16192() /* ty=(Tensor[(336), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_13250() -> (Tensor[(?, 15, 13), float64],) {
  %805 = fn () -> (Tensor[(?, 15, 13), float64],) {
    %803 = @func_9804() /* ty=(Tensor[(?, 15, 13), float64],) */;
    %804 = %803.0;
    (%804,)
  };
  %805() /* ty=(Tensor[(?, 15, 13), float64],) */
}

def @func_7902() -> Tensor[(6, 7, 8), float32] {
  @func_7900() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_6115(%var_6113: uint32, %var_6114: Tensor[(1, 13, 9), uint32]) -> Tensor[(1, 13, 9), uint32] {
  @func_6111(%var_6113, %var_6114) /* ty=Tensor[(1, 13, 9), uint32] */
}

def @func_13111() -> Tensor[(?, 15, 13), uint8] {
  %806 = @func_8619() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) */;
  %807 = %806.3;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
  %809 = cosh(%808) /* ty=Tensor[(?, 15, 13), float64] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %811 = shape_of(%807, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%807, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %814 = floor_mod(%812, %813) /* ty=Tensor[(?, 15, 13), float32] */;
  %815 = cast(%809, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="float32") /* ty=Tensor[(?, 15, 13), float32] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %819 = divide(%817, %818) /* ty=Tensor[(?, 15, 13), float32] */;
  %820 = cast(%814, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%819, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%822, %823) /* ty=Tensor[(?, 15, 13), uint8] */
}

def @func_17780() -> (Tensor[(?, 15, 13), bool], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(360), float32], Tensor[(6, 7, 8), uint8]) {
  @func_17778() /* ty=(Tensor[(?, 15, 13), bool], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(360), float32], Tensor[(6, 7, 8), uint8]) */
}

def @func_8204(%var_8202: float64) -> (Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) {
  @func_8201(%var_8202) /* ty=(Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) */
}

def @func_19586() -> (Tensor[(8, 15, 13), uint8],) {
  %824 = @func_13111() /* ty=Tensor[(?, 15, 13), uint8] */;
  %825 = cast(%824, dtype="uint8") /* ty=Tensor[(?, 15, 13), uint8] */;
  %826 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 15, 13), uint8] */, dtype="uint8") /* ty=Tensor[(8, 15, 13), uint8] */;
  %827 = minimum(%825, %826) /* ty=Tensor[(8, 15, 13), uint8] */;
  (%827,)
}

def @func_12653() -> Tensor[(6, 7, 8), uint8] {
  %828 = @func_10778() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
  %828.1
}

def @func_10987() -> (Tensor[(6, 7, 8), float64],) {
  @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_16948() -> (Tensor[(8, 13, 2), int32], Tensor[(8, 13, 2), bool], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %829 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 13, 2), int32] */;
  %830 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(8, 13, 2), int32] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %833 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(8, 13, 2), bool] */;
  %834 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(8, 13, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 13, 2), int32] */, dtype="bool") /* ty=Tensor[(8, 13, 2), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %837 = @func_14439() /* ty=(Tensor[(?, 15, 13), float64],) */;
  %838 = @func_10985() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %839 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %840 = bitwise_xor(%831, %832) /* ty=Tensor[(8, 13, 2), int32] */;
  %841 = less(%835, %836) /* ty=Tensor[(8, 13, 2), bool] */;
  %842 = %837.0;
  %843 = %838.0;
  %844 = %839.0;
  (%840, %841, %842, %843, %844)
}

def @func_6582() -> Tensor[(6, 7, 8), uint8] {
  %846 = fn () -> Tensor[(6, 7, 8), uint8] {
    %845 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %845.0
  };
  %846() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_17489() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */
}

def @func_20041() -> (Tensor[(6, 7, 8), float32],) {
  %848 = fn () -> (Tensor[(6, 7, 8), float32],) {
    %847 = @func_15153() /* ty=Tensor[(6, 7, 8), float32] */;
    (%847,)
  };
  %848() /* ty=(Tensor[(6, 7, 8), float32],) */
}

def @func_13421(%var_13416: Tensor[(196), float64], %var_13417: Tensor[(208), float64], %var_13418: float64, %var_13419: Tensor[(3072), float64], %var_13420: Tensor[(2912), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(156), int64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(99), float64], Tensor[(3072), float64], Tensor[(2912), float64], Tensor[(11, 9), float64], Tensor[(672), float32]) {
  @func_13414(%var_13416, %var_13417, %var_13418, %var_13419, %var_13420) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(156), int64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(99), float64], Tensor[(3072), float64], Tensor[(2912), float64], Tensor[(11, 9), float64], Tensor[(672), float32]) */
}

def @func_19801(%var_19796: Tensor[(8, 4, 8), float64]) -> Tensor[(8, 4, 8), float64] {
  %849 = cast(%var_19796, dtype="float64") /* ty=Tensor[(8, 4, 8), float64] */;
  atanh(%849) /* ty=Tensor[(8, 4, 8), float64] */
}

def @func_17907() -> Tensor[(6, 7, 8), int8] {
  %851 = fn () -> Tensor[(6, 7, 8), int8] {
    %850 = @func_15257() /* ty=(Tensor[(6, 7, 8), int8],) */;
    %850.0
  };
  %851() /* ty=Tensor[(6, 7, 8), int8] */
}

def @func_15509() -> Tensor[(6, 7, 8), uint8] {
  %853 = fn () -> Tensor[(6, 7, 8), uint8] {
    %852 = @func_11083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %852.0
  };
  %853() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18377() -> Tensor[(1, 336), float64] {
  %855 = fn () -> Tensor[(1, 336), float64] {
    %854 = @func_15949() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(1, 336), float64], Tensor[(3, 13, 4), int8], Tensor[(156), int64]) */;
    %854.1
  };
  %855() /* ty=Tensor[(1, 336), float64] */
}

def @func_12837() -> (Tensor[(6, 7, 8), uint8],) {
  %856 = @func_8995() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %857 = %856.0;
  (%857,)
}

def @func_9982(%var_9981: float64) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(99, 1), float64], Tensor[(6, 7, 8), float64]) {
  %867 = fn (%var_9946: float64) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(99, 1), float64], Tensor[(6, 7, 8), float64]) {
    %858 = cast(%var_9946, dtype="float64") /* ty=float64 */;
    %859 = reshape(%858, newshape=[]) /* ty=float64 */;
    %860 = @func_8201(%859) /* ty=(Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) */;
    %861 = %860.3;
    %862 = cast(%861, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
    %863 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %864 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
    %865 = sigmoid(%862) /* ty=Tensor[(99, 1), float64] */;
    %866 = %863.0;
    (%864, %var_9946, %865, %866)
  };
  %867(%var_9981) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(99, 1), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_11645(%var_11643: Tensor[(16, 4, 3), uint16], %var_11644: Tensor[(16, 4, 3), uint16]) -> (Tensor[(16, 4, 3), uint16],) {
  %873 = fn (%var_11632: Tensor[(16, 4, 3), uint16], %var_11633: Tensor[(16, 4, 3), uint16]) -> (Tensor[(16, 4, 3), uint16],) {
    %868 = cast(%var_11633, dtype="uint16") /* ty=Tensor[(16, 4, 3), uint16] */;
    %869 = shape_of(%var_11632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %870 = cast(%var_11632, dtype="uint16") /* ty=Tensor[(16, 4, 3), uint16] */;
    %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %872 = minimum(%870, %871) /* ty=Tensor[(16, 4, 3), uint16] */;
    (%872,)
  };
  %873(%var_11643, %var_11644) /* ty=(Tensor[(16, 4, 3), uint16],) */
}

def @func_11768() -> (Tensor[(6, 7, 8), uint8],) {
  %874 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%874,)
}

def @func_5350(%var_5337: Tensor[(1, 16, 13), float64]) -> (Tensor[(1, 16, 13), float64],) {
  %875 = cast(%var_5337, dtype="float64") /* ty=Tensor[(1, 16, 13), float64] */;
  %876 = tan(%875) /* ty=Tensor[(1, 16, 13), float64] */;
  (%876,)
}

def @func_18112() -> (Tensor[(3, 13, 4), float32], Tensor[(3, 13, 4), int16], Tensor[(2912), float64], Tensor[(1280), int64], Tensor[(2912), float64]) {
  %877 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
  %878 = %877.0;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(3, 13, 4), float32] */;
  %880 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 13, 4), float32] */, dtype="int16") /* ty=Tensor[(3, 13, 4), int16] */;
  %881 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(%878, dtype="int16") /* ty=Tensor[(3, 13, 4), int16] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %884 = cast(meta[relay.Constant][46] /* ty=Tensor[(1280), int64] */, dtype="int64") /* ty=Tensor[(1280), int64] */;
  %885 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 13, 4), float32] */, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
  %886 = cast(meta[relay.Constant][47] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %887 = reshape(%884, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), int64] */;
  %888 = reshape(%885, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %889 = reshape(%886, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %890 = @func_5668(%887, %888, %889) /* ty=(Tensor[(16, 10, 8), int64], Tensor[(6, 8, 14), float32], Tensor[(2, 336), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(336), uint8], Tensor[(572), float64], Tensor[(3, 13, 4), int64], Tensor[(2, 336), float32], Tensor[(196, 1), float64], Tensor[(3, 13, 4), int64], Tensor[(3, 13, 4), int64]) */;
  %891 = sqrt(%879) /* ty=Tensor[(3, 13, 4), float32] */;
  %892 = add(%882, %883) /* ty=Tensor[(3, 13, 4), int16] */;
  %893 = %890.6;
  (%891, %892, %893, meta[relay.Constant][46] /* ty=Tensor[(1280), int64] */, meta[relay.Constant][47] /* ty=Tensor[(2912), float64] */)
}

def @func_10405() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_7202(%var_7198: Tensor[(9, 6, 4), uint16], %var_7199: Tensor[(9, 6, 4), uint16], %var_7200: Tensor[(99), float64], %var_7201: Tensor[(672), float32]) -> (Tensor[(9, 6, 4), bool], Tensor[(4, 168), bool], Tensor[(4, 728), float64], Tensor[(99), float64], Tensor[(672), float32], Tensor[(3072), uint64]) {
  @func_7196(%var_7198, %var_7199, %var_7200, %var_7201) /* ty=(Tensor[(9, 6, 4), bool], Tensor[(4, 168), bool], Tensor[(4, 728), float64], Tensor[(99), float64], Tensor[(672), float32], Tensor[(3072), uint64]) */
}

def @func_8201(%var_8190: float64) -> (Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) {
  %894 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %895 = cast(%var_8190, dtype="float64") /* ty=float64 */;
  %896 = cast(meta[relay.Constant][48] /* ty=Tensor[(99, 1), float64] */, dtype="float64") /* ty=Tensor[(99, 1), float64] */;
  %897 = reshape(%895, newshape=[]) /* ty=float64 */;
  %898 = reshape(%896, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %899 = @func_700(%897, %898) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %900 = %894.4;
  %901 = %899.1;
  (%900, %901, %var_8190, meta[relay.Constant][48] /* ty=Tensor[(99, 1), float64] */)
}

def @func_8725() -> Tensor[(6, 7, 8), uint8] {
  %903 = fn () -> Tensor[(6, 7, 8), uint8] {
    %902 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %902.1
  };
  %903() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19379(%var_19378: Tensor[(12, 6, 9), float64]) -> (Tensor[(12, 6, 9), float64], Tensor[(6, 7, 8), uint8], uint32, Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), float64]) {
  %914 = fn (%var_19347: Tensor[(12, 6, 9), float64]) -> (Tensor[(12, 6, 9), float64], Tensor[(6, 7, 8), uint8], uint32, Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), float64]) {
    %904 = cast(%var_19347, dtype="float64") /* ty=Tensor[(12, 6, 9), float64] */;
    %905 = cast(meta[relay.Constant][49] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %906 = reshape(%905, newshape=[]) /* ty=uint32 */;
    %907 = @func_10675(%906) /* ty=(Tensor[(3, 13, 4), int64], uint32, Tensor[(6, 7, 8), uint8], Tensor[(?, 13, 9), int64], Tensor[(?, 15, 13), float64]) */;
    %908 = @func_8965() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %909 = @func_17487() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) */;
    %910 = tan(%904) /* ty=Tensor[(12, 6, 9), float64] */;
    %911 = %907.2;
    %912 = %908.0;
    %913 = %909.4;
    (%910, %911, meta[relay.Constant][49] /* ty=uint32 */, %912, %913)
  };
  %914(%var_19378) /* ty=(Tensor[(12, 6, 9), float64], Tensor[(6, 7, 8), uint8], uint32, Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), float64]) */
}

def @func_6111(%var_6093: uint32, %var_6094: Tensor[(1, 13, 9), uint32]) -> Tensor[(1, 13, 9), uint32] {
  %915 = cast(%var_6093, dtype="uint32") /* ty=uint32 */;
  %916 = cast(%var_6094, dtype="uint32") /* ty=Tensor[(1, 13, 9), uint32] */;
  bitwise_xor(%915, %916) /* ty=Tensor[(1, 13, 9), uint32] */
}

def @func_8619() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64]) {
  %917 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %918 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %919 = %917.0;
  %920 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
  %921 = %918.0;
  %922 = @func_7842() /* ty=Tensor[(?, 15, 13), float64] */;
  (%919, %920, %921, %922)
}

def @func_8034(%var_8032: Tensor[(196), float64], %var_8033: Tensor[(208), float64]) -> (Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) {
  @func_8030(%var_8032, %var_8033) /* ty=(Tensor[(6, 7, 8), float64], Tensor[(3, 13, 4), int64], Tensor[(1, 156), int64], float64, Tensor[(196), float64], Tensor[(208), float64]) */
}

def @func_12817() -> (Tensor[(156), int64],) {
  %923 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %924 = %923.4;
  (%924,)
}

def @func_9886() -> (Tensor[(6, 7, 8), float64],) {
  %926 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %925 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
    (%925,)
  };
  %926() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_10300() -> (Tensor[(6, 7, 8), int8],) {
  %929 = fn () -> (Tensor[(6, 7, 8), int8],) {
    %927 = @func_9245() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) */;
    %928 = %927.1;
    (%928,)
  };
  %929() /* ty=(Tensor[(6, 7, 8), int8],) */
}

def @func_8966() -> (Tensor[(3, 13, 4), int64],) {
  %932 = fn () -> (Tensor[(3, 13, 4), int64],) {
    %930 = @func_7466() /* ty=(Tensor[(3, 13, 4), int64],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(3, 13, 4), int64],) */
}

def @func_13198() -> Tensor[(6, 7, 8), uint8] {
  %934 = fn () -> Tensor[(6, 7, 8), uint8] {
    %933 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %933.0
  };
  %934() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_14742() -> (Tensor[(6, 7, 8), uint8],) {
  @func_14740() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_13228() -> Tensor[(6, 7, 8), uint8] {
  %935 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %935() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_16216() -> (Tensor[(6, 7, 8), float64],) {
  %936 = @func_10589() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) */;
  %937 = %936.0;
  (%937,)
}

def @func_17167() -> (Tensor[(6, 7, 8), uint8],) {
  %939 = fn () -> (Tensor[(6, 7, 8), uint8],) {
    %938 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%938,)
  };
  %939() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_15358() -> Tensor[(?, 15, 13), float64] {
  %940 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %940.1
}

def @func_17913() -> (Tensor[(6, 7, 8), float32],) {
  %941 = @func_11162() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %942 = %941.0;
  (%942,)
}

def @func_11107() -> Tensor[(6, 7, 8), uint8] {
  %943 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %943.1
}

def @func_8790() -> Tensor[(6, 7, 8), float64] {
  @func_8788() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_9805() -> (Tensor[(?, 15, 13), float64],) {
  %946 = fn () -> (Tensor[(?, 15, 13), float64],) {
    %944 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %945 = %944.0;
    (%945,)
  };
  %946() /* ty=(Tensor[(?, 15, 13), float64],) */
}

def @func_11443() -> (Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) {
  @func_11441() /* ty=(Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) */
}

def @func_416(%var_414: Tensor[(6, 8, 14), float32], %var_415: Tensor[(6, 8, 14), float32]) -> (Tensor[(6, 8, 14), float32],) {
  %952 = fn (%var_398: Tensor[(6, 8, 14), float32], %var_399: Tensor[(6, 8, 14), float32]) -> (Tensor[(6, 8, 14), float32],) {
    %947 = cast(%var_399, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
    %948 = shape_of(%var_398, dtype="int32") /* ty=Tensor[(3), int32] */;
    %949 = cast(%var_398, dtype="float32") /* ty=Tensor[(6, 8, 14), float32] */;
    %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %951 = mod(%949, %950) /* ty=Tensor[(6, 8, 14), float32] */;
    (%951,)
  };
  %952(%var_414, %var_415) /* ty=(Tensor[(6, 8, 14), float32],) */
}

def @func_7729() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
  %955 = fn () -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) {
    %953 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
    %954 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%953, %954)
  };
  %955() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_13414(%var_13397: Tensor[(196), float64], %var_13398: Tensor[(208), float64], %var_13399: float64, %var_13402: Tensor[(3072), float64], %var_13403: Tensor[(2912), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(156), int64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(99), float64], Tensor[(3072), float64], Tensor[(2912), float64], Tensor[(11, 9), float64], Tensor[(672), float32]) {
  %956 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %957 = cast(meta[relay.Constant][50] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %958 = cast(%var_13397, dtype="float64") /* ty=Tensor[(196), float64] */;
  %959 = cast(%var_13398, dtype="float64") /* ty=Tensor[(208), float64] */;
  %960 = cast(%var_13399, dtype="float64") /* ty=float64 */;
  %961 = reshape(%957, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %962 = reshape(%958, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %963 = reshape(%959, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %964 = reshape(%960, newshape=[]) /* ty=float64 */;
  %965 = @func_6903(%961, %962, %963, %964) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %966 = cast(%var_13402, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %967 = cast(%var_13403, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %968 = cast(%var_13399, dtype="float64") /* ty=float64 */;
  %969 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 9), float64] */;
  %970 = cast(meta[relay.Constant][52] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %971 = reshape(%966, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
  %972 = reshape(%967, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %973 = reshape(%968, newshape=[]) /* ty=float64 */;
  %974 = reshape(%969, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %975 = reshape(%970, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
  %976 = @func_5137(%971, %972, %973, %974, %975) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
  %977 = %956.0;
  %978 = %965.2;
  %979 = %976.2;
  (%977, %978, meta[relay.Constant][50] /* ty=Tensor[(156), int64] */, %var_13397, %var_13398, %var_13399, %979, %var_13402, %var_13403, meta[relay.Constant][51] /* ty=Tensor[(11, 9), float64] */, meta[relay.Constant][52] /* ty=Tensor[(672), float32] */)
}

def @func_9036() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_9302(%var_9301: Tensor[(8, 15, 3), float32]) -> (Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) {
  %990 = fn (%var_9275: Tensor[(8, 15, 3), float32]) -> (Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) {
    %980 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %981 = shape_of(%var_9275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %982 = cast(%var_9275, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %984 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 15, 3), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %985 = shape_of(%var_9275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %986 = cast(%var_9275, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %988 = mod(%982, %983) /* ty=Tensor[(8, 15, 3), float32] */;
    %989 = multiply(%986, %987) /* ty=Tensor[(8, 15, 3), float32] */;
    (%988, %989)
  };
  %990(%var_9301) /* ty=(Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) */
}

def @func_8407(%var_8405: Tensor[(2912), float64], %var_8406: Tensor[(672), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(99), float64], Tensor[(3072), float64], float64, Tensor[(99), float64], Tensor[(672), float32], Tensor[(2912), float32], Tensor[(6, 7, 8), float32]) {
  %1008 = fn (%var_8345: Tensor[(2912), float64], %var_8348: Tensor[(672), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(99), float64], Tensor[(3072), float64], float64, Tensor[(99), float64], Tensor[(672), float32], Tensor[(2912), float32], Tensor[(6, 7, 8), float32]) {
    %991 = @func_7348() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %992 = cast(meta[relay.Constant][54] /* ty=Tensor[(3072), float64] */, dtype="float64") /* ty=Tensor[(3072), float64] */;
    %993 = cast(%var_8345, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %994 = cast(-5.69927f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %995 = cast(meta[relay.Constant][55] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %996 = cast(%var_8348, dtype="float32") /* ty=Tensor[(672), float32] */;
    %997 = reshape(%992, newshape=[16, 16, 12]) /* ty=Tensor[(16, 16, 12), float64] */;
    %998 = reshape(%993, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
    %999 = reshape(%994, newshape=[]) /* ty=float64 */;
    %1000 = reshape(%995, newshape=[99]) /* ty=Tensor[(99), float64] */;
    %1001 = reshape(%996, newshape=[4, 168]) /* ty=Tensor[(4, 168), float32] */;
    %1002 = @func_5137(%997, %998, %999, %1000, %1001) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(2912), float64], Tensor[(99), float64], Tensor[(4, 168), bool], Tensor[(16, 16, 12), float64]) */;
    %1003 = cast(%var_8345, dtype="float32") /* ty=Tensor[(2912), float32] */;
    %1004 = %991.0;
    %1005 = %1002.2;
    %1006 = sqrt(%1003) /* ty=Tensor[(2912), float32] */;
    %1007 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
    (%1004, %1005, meta[relay.Constant][54] /* ty=Tensor[(3072), float64] */, -5.69927f64 /* ty=float64 */, meta[relay.Constant][55] /* ty=Tensor[(99), float64] */, %var_8348, %1006, %1007)
  };
  %1008(%var_8405, %var_8406) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(99), float64], Tensor[(3072), float64], float64, Tensor[(99), float64], Tensor[(672), float32], Tensor[(2912), float32], Tensor[(6, 7, 8), float32]) */
}

def @func_17207() -> (Tensor[(6, 7, 8), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  @func_17205() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */
}

def @func_19452() -> Tensor[(6, 7, 8), uint8] {
  @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_11788() -> (Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) {
  %1012 = fn () -> (Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) {
    %1009 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
    %1010 = %1009.2;
    %1011 = @func_10898() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1010, %1011)
  };
  %1012() /* ty=(Tensor[(7, 6, 7), bool], Tensor[(6, 7, 8), uint8]) */
}

def @func_11109() -> Tensor[(6, 7, 8), uint8] {
  @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_15257() -> (Tensor[(6, 7, 8), int8],) {
  %1013 = @func_10299() /* ty=(Tensor[(6, 7, 8), int8],) */;
  %1014 = %1013.0;
  (%1014,)
}

def @func_6965() -> Tensor[(?, 15, 13), float64] {
  %1020 = fn () -> Tensor[(?, 15, 13), float64] {
    %1015 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %1016 = %1015.2;
    %1017 = cast(%1016, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
    %1018 = sin(%1017) /* ty=Tensor[(?, 15, 13), float64] */;
    %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(?, 15, 13), float64] */;
    sigmoid(%1019) /* ty=Tensor[(?, 15, 13), float64] */
  };
  %1020() /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_17983() -> Tensor[(6, 7, 8), uint8] {
  @func_17981() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_15582() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) {
  @func_15580() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) */
}

def @func_8159() -> Tensor[(6, 7, 8), uint8] {
  %1022 = fn () -> Tensor[(6, 7, 8), uint8] {
    %1021 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1021.0
  };
  %1022() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_9489(%var_9487: Tensor[(12, 4, 7), bool], %var_9488: Tensor[(12, 4, 7), bool]) -> (Tensor[(12, 4, 7), bool],) {
  @func_9485(%var_9487, %var_9488) /* ty=(Tensor[(12, 4, 7), bool],) */
}

def @func_700(%var_691: float64, %var_692: Tensor[(11, 3, 3), float64]) -> (Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) {
  %1023 = cast(%var_691, dtype="float64") /* ty=float64 */;
  %1024 = cast(%var_692, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
  %1025 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1026 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1027 = reshape(%1025, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1028 = reshape(%1026, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1029 = @func_413(%1027, %1028) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %1030 = mod(%1023, %1024) /* ty=Tensor[(11, 3, 3), float64] */;
  %1031 = %1029.0;
  (%1030, %1031, meta[relay.Constant][56] /* ty=Tensor[(672), float32] */)
}

def @func_14914() -> (Tensor[(3, 13, 4), float32], float64, Tensor[(3, 13, 4), uint8]) {
  %1052 = fn () -> (Tensor[(3, 13, 4), float32], float64, Tensor[(3, 13, 4), uint8]) {
    %1032 = @func_12498() /* ty=(Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) */;
    %1033 = %1032.0;
    %1034 = cast(%1033, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
    %1035 = reshape(%1034, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
    %1036 = @func_10727(%1035) /* ty=(Tensor[(3, 13, 4), float32], Tensor[(14, 7, 11), float32], Tensor[(539, 2), float32]) */;
    %1037 = @func_11441() /* ty=(Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) */;
    %1038 = cast(%1033, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
    %1039 = tan(%1038) /* ty=Tensor[(3, 13, 4), float64] */;
    %1040 = cast(%1033, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
    %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1042 = cast(%1039, dtype="float64") /* ty=Tensor[(3, 13, 4), float64] */;
    %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1044 = power(%1042, %1043) /* ty=Tensor[(3, 13, 4), float64] */;
    %1045 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 13, 4), float64] */, dtype="uint8") /* ty=Tensor[(3, 13, 4), uint8] */;
    %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1047 = cast(%1044, dtype="uint8") /* ty=Tensor[(3, 13, 4), uint8] */;
    %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1049 = %1036.0;
    %1050 = %1037.2;
    %1051 = bitwise_and(%1047, %1048) /* ty=Tensor[(3, 13, 4), uint8] */;
    (%1049, %1050, %1051)
  };
  %1052() /* ty=(Tensor[(3, 13, 4), float32], float64, Tensor[(3, 13, 4), uint8]) */
}

def @func_17952() -> (Tensor[(6, 7, 8), float32],) {
  %1053 = @func_17913() /* ty=(Tensor[(6, 7, 8), float32],) */;
  %1054 = %1053.0;
  (%1054,)
}

def @func_17205() -> (Tensor[(6, 7, 8), float32], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  %1055 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1056 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1057 = reshape(%1055, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1058 = reshape(%1056, newshape=[3, 13, 4]) /* ty=Tensor[(3, 13, 4), int64] */;
  %1059 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  %1060 = @func_4467(%1057, %1058) /* ty=Tensor[(3, 13, 4), int64] */;
  (%1059, %1060, meta[relay.Constant][58] /* ty=Tensor[(156), int64] */)
}

def @func_20315() -> Tensor[(6, 7, 8), uint8] {
  @func_20313() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_8254() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1061 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1062 = %1061.0;
  %1063 = @func_7654() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1062, %1063)
}

def @func_6161() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) {
  @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */
}

def @func_14593() -> (Tensor[(3, 13, 4), int64],) {
  @func_14591() /* ty=(Tensor[(3, 13, 4), int64],) */
}

def @func_15773() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1067 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
    %1064 = @func_13838() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
    %1065 = @func_14357() /* ty=Tensor[(6, 7, 8), uint8] */;
    %1066 = %1064.2;
    (%1065, %1066)
  };
  %1067() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_14562() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) {
  %1080 = fn () -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) {
    %1068 = @func_10403() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %1069 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1070 = @func_12837() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1071 = cast(meta[relay.Constant][59] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1072 = reshape(%1071, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %1073 = @func_9300(%1072) /* ty=(Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) */;
    %1074 = @func_9885() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %1075 = %1068.3;
    %1076 = %1069.0;
    %1077 = %1070.0;
    %1078 = %1073.0;
    %1079 = %1074.0;
    (%1075, %1076, %1077, %1078, meta[relay.Constant][59] /* ty=Tensor[(360), float32] */, %1079)
  };
  %1080() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(8, 15, 3), float32], Tensor[(360), float32], Tensor[(6, 7, 8), float64]) */
}

def @func_3381(%var_3379: Tensor[(13, 4, 11), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) {
  @func_3378(%var_3379) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */
}

def @func_4644(%var_4641: Tensor[(2, 14, 7), float64], %var_4642: Tensor[(2912), float64], %var_4643: Tensor[(2, 336), float32]) -> (Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) {
  %1099 = fn (%var_4607: Tensor[(2, 14, 7), float64], %var_4625: Tensor[(2912), float64], %var_4628: Tensor[(2, 336), float32]) -> (Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) {
    %1081 = cast(%var_4607, dtype="float64") /* ty=Tensor[(2, 14, 7), float64] */;
    %1082 = cast(%var_4625, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %1083 = cast(1.6943f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1084 = cast(meta[relay.Constant][60] /* ty=Tensor[(33, 3), float64] */, dtype="float64") /* ty=Tensor[(33, 3), float64] */;
    %1085 = cast(%var_4628, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
    %1086 = reshape(%1082, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
    %1087 = reshape(%1083, newshape=[]) /* ty=float64 */;
    %1088 = reshape(%1084, newshape=[99]) /* ty=Tensor[(99), float64] */;
    %1089 = reshape(%1085, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %1090 = @func_1149(%1086, %1087, %1088, %1089) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
    %1091 = cast(1.6943f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1092 = %1090.0;
    %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
    %1094 = reshape(%1091, newshape=[]) /* ty=float64 */;
    %1095 = reshape(%1093, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
    %1096 = @func_700(%1094, %1095) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
    %1097 = sigmoid(%1081) /* ty=Tensor[(2, 14, 7), float64] */;
    %1098 = %1096.0;
    (%1097, %1092, %var_4625, 1.6943f64 /* ty=float64 */, meta[relay.Constant][60] /* ty=Tensor[(33, 3), float64] */, %var_4628, %1098)
  };
  %1099(%var_4641, %var_4642, %var_4643) /* ty=(Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) */
}

def @func_8989(%var_8988: Tensor[(6, 7, 8), uint8]) -> Tensor[(6, 7, 8), int8] {
  %1105 = fn (%var_8982: Tensor[(6, 7, 8), uint8]) -> Tensor[(6, 7, 8), int8] {
    %1100 = @func_7156() /* ty=Tensor[(6, 7, 8), uint8] */;
    %1101 = cast(%var_8982, dtype="int8") /* ty=Tensor[(6, 7, 8), int8] */;
    %1102 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1103 = cast(%1100, dtype="int8") /* ty=Tensor[(6, 7, 8), int8] */;
    %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    minimum(%1103, %1104) /* ty=Tensor[(6, 7, 8), int8] */
  };
  %1105(%var_8988) /* ty=Tensor[(6, 7, 8), int8] */
}

def @func_12397() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64]) {
  %1106 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1107 = @func_11999() /* ty=Tensor[(6, 7, 8), float64] */;
  %1108 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1109 = %1106.0;
  (%1107, %1108, %1109)
}

def @func_16835() -> Tensor[(3, 13, 4), int64] {
  %1110 = @func_11296() /* ty=(Tensor[(3, 13, 4), int64],) */;
  %1110.0
}

def @func_7525() -> (Tensor[(6, 7, 8), float64],) {
  %1113 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %1111 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %1112 = %1111.0;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_19207() -> (Tensor[(6, 7, 8), float64],) {
  %1114 = @func_14130() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32]) */;
  %1115 = %1114.1;
  (%1115,)
}

def @func_18447() -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) {
  @func_18445() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */
}

def @func_14786() -> (Tensor[(336), uint8],) {
  %1116 = @func_11256() /* ty=Tensor[(336), uint8] */;
  (%1116,)
}

def @func_11849() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  @func_11847() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_12625() -> Tensor[(6, 7, 8), float64] {
  @func_12623() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_9861() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) {
  @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */
}

def @func_7842() -> Tensor[(?, 15, 13), float64] {
  @func_6964() /* ty=Tensor[(?, 15, 13), float64] */
}

def @func_10403() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  %1117 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %1118 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1119 = @func_7900() /* ty=Tensor[(6, 7, 8), float32] */;
  %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(6, 7, 8), float64] */;
  %1121 = @func_7019() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1122 = %1117.5;
  %1123 = %1118.0;
  %1124 = cosh(%1120) /* ty=Tensor[(6, 7, 8), float64] */;
  %1125 = %1121.0;
  (%1122, %1123, %1124, %1125)
}

def @func_18704() -> (Tensor[(6, 7, 8), int8],) {
  %1126 = @func_18445() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), uint8]) */;
  %1127 = %1126.2;
  (%1127,)
}

def @func_13891() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %1128 = @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1129 = cast(%1128, dtype="float32") /* ty=Tensor[(6, 7, 8), float32] */;
  %1130 = sin(%1129) /* ty=Tensor[(6, 7, 8), float32] */;
  %1131 = @func_6765() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1130, %1131)
}

def @func_10142(%var_10141: Tensor[(360), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
  %1138 = fn (%var_10133: Tensor[(360), float32]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) {
    %1132 = cast(%var_10133, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1133 = reshape(%1132, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %1134 = @func_9300(%1133) /* ty=(Tensor[(8, 15, 3), float32], Tensor[(8, 15, 3), float32]) */;
    %1135 = @func_7263() /* ty=Tensor[(6, 7, 8), uint8] */;
    %1136 = @func_7799() /* ty=Tensor[(6, 7, 8), float32] */;
    %1137 = %1134.0;
    (%1135, %1136, %1137, %var_10133)
  };
  %1138(%var_10141) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(8, 15, 3), float32], Tensor[(360), float32]) */
}

def @func_16393(%var_16383: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) {
  %1139 = @func_13891() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1140 = @func_10476() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %1141 = cast(%var_16383, dtype="float64") /* ty=Tensor[(572), float64] */;
  %1142 = reshape(%1141, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), float64] */;
  %1143 = @func_3378(%1142) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(336), uint8], Tensor[(13, 4, 11), bool]) */;
  %1144 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1145 = @func_16090() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1146 = %1139.1;
  %1147 = %1140.1;
  %1148 = %1143.0;
  (%1144, %1145, %1146, %1147, %1148, %var_16383)
}

def @func_9685() -> (Tensor[(6, 7, 8), float64],) {
  %1150 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %1149 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
    (%1149,)
  };
  %1150() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_19104() -> (Tensor[(6, 7, 8), uint8],) {
  @func_19102() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_11085() -> (Tensor[(6, 7, 8), uint8],) {
  @func_11083() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_12534() -> Tensor[(6, 7, 8), float64] {
  @func_11999() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_19882(%var_19880: Tensor[(360, 2), float64], %var_19881: Tensor[(156), int64]) -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(360, 2), float64], Tensor[(6, 7, 8), uint8], Tensor[(156), int64]) {
  %1161 = fn (%var_19858: Tensor[(360, 2), float64], %var_19861: Tensor[(156), int64]) -> (Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(360, 2), float64], Tensor[(6, 7, 8), uint8], Tensor[(156), int64]) {
    %1151 = @func_19647() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
    %1152 = cast(%var_19858, dtype="float64") /* ty=Tensor[(360, 2), float64] */;
    %1153 = reshape(%1152, newshape=[4, 15, 12]) /* ty=Tensor[(4, 15, 12), float64] */;
    %1154 = @func_10055(%1153) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %1155 = cast(%var_19861, dtype="int64") /* ty=Tensor[(156), int64] */;
    %1156 = reshape(%1155, newshape=[156]) /* ty=Tensor[(156), int64] */;
    %1157 = @func_6226(%1156) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %1158 = %1151.1;
    %1159 = %1154.2;
    %1160 = %1157.0;
    (%1158, %1159, %var_19858, %1160, %var_19861)
  };
  %1161(%var_19880, %var_19881) /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(360, 2), float64], Tensor[(6, 7, 8), uint8], Tensor[(156), int64]) */
}

def @func_10985() -> (Tensor[(6, 7, 8), float64],) {
  %1162 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
  (%1162,)
}

def @func_11441() -> (Tensor[(1, 336), uint8], Tensor[(99, 1), float64], float64) {
  %1163 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %1164 = cast(7.16466f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1165 = reshape(%1164, newshape=[]) /* ty=float64 */;
  %1166 = @func_8201(%1165) /* ty=(Tensor[(156), int64], Tensor[(6, 8, 14), float32], float64, Tensor[(99, 1), float64]) */;
  %1167 = %1163.1;
  %1168 = %1166.3;
  (%1167, %1168, 7.16466f64 /* ty=float64 */)
}

def @func_1155(%var_1151: Tensor[(14, 13, 16), float64], %var_1152: float64, %var_1153: Tensor[(99), float64], %var_1154: Tensor[(672), float32]) -> (Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) {
  @func_1149(%var_1151, %var_1152, %var_1153, %var_1154) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */
}

def @func_11083() -> (Tensor[(6, 7, 8), uint8],) {
  %1169 = @func_7702() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1170 = %1169.0;
  (%1170,)
}

def @func_6766() -> Tensor[(6, 7, 8), uint8] {
  %1171 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %1171() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_18585() -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(78, 2), int64], Tensor[(208), float64]) {
  @func_18583() /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(78, 2), int64], Tensor[(208), float64]) */
}

def @func_18012() -> (Tensor[(6, 7, 8), uint8],) {
  %1172 = @func_13197() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1172,)
}

def @func_15580() -> (Tensor[(6, 7, 8), uint8], Tensor[(1, 16, 13), float64], Tensor[(156), int64], Tensor[(196), float64], Tensor[(208), float64], float64, Tensor[(6, 7, 8), uint8]) {
  %1173 = cast(meta[relay.Constant][61] /* ty=Tensor[(156), int64] */, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1174 = cast(meta[relay.Constant][62] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %1175 = cast(meta[relay.Constant][63] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1176 = cast(5.8987f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1177 = reshape(%1173, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1178 = reshape(%1174, newshape=[196]) /* ty=Tensor[(196), float64] */;
  %1179 = reshape(%1175, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %1180 = reshape(%1176, newshape=[]) /* ty=float64 */;
  %1181 = @func_6903(%1177, %1178, %1179, %1180) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) */;
  %1182 = @func_11768() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1183 = @func_15508() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1184 = %1181.7;
  %1185 = %1182.0;
  (%1183, %1184, meta[relay.Constant][61] /* ty=Tensor[(156), int64] */, meta[relay.Constant][62] /* ty=Tensor[(196), float64] */, meta[relay.Constant][63] /* ty=Tensor[(208), float64] */, 5.8987f64 /* ty=float64 */, %1185)
}

def @func_16802() -> Tensor[(6, 7, 8), uint8] {
  @func_16800() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_7638(%var_7637: Tensor[(12, 10, 7), float64]) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) {
  %1204 = fn (%var_7603: Tensor[(12, 10, 7), float64]) -> (Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) {
    %1186 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1187 = @func_7348() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1188 = cast(-7.37711f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1189 = reshape(%1188, newshape=[]) /* ty=float64 */;
    %1190 = @func_4408(%1189) /* ty=(Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) */;
    %1191 = %1190.0;
    %1192 = cast(%var_7603, dtype="int32") /* ty=Tensor[(12, 10, 7), int32] */;
    %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1194 = cast(%1191, dtype="int32") /* ty=Tensor[(12, 10, 7), int32] */;
    %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1196 = multiply(%1194, %1195) /* ty=Tensor[(12, 10, 7), int32] */;
    %1197 = cast(%1196, dtype="bool") /* ty=Tensor[(12, 10, 7), bool] */;
    %1198 = shape_of(%var_7603, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1199 = cast(%var_7603, dtype="bool") /* ty=Tensor[(12, 10, 7), bool] */;
    %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1201 = %1186.0;
    %1202 = %1187.0;
    %1203 = logical_or(%1199, %1200) /* ty=Tensor[(12, 10, 7), bool] */;
    (%1201, -7.37711f64 /* ty=float64 */, %1202, %1203)
  };
  %1204(%var_7637) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) */
}

def @func_11418() -> (Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) {
  %1212 = fn () -> (Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) {
    %1205 = @func_9127() /* ty=Tensor[(6, 7, 8), float64] */;
    %1206 = cast(%1205, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
    %1207 = cast(%1205, dtype="bool") /* ty=Tensor[(6, 7, 8), bool] */;
    %1208 = reshape(%1206, newshape=[12, 4, 7]) /* ty=Tensor[(12, 4, 7), bool] */;
    %1209 = reshape(%1207, newshape=[12, 4, 7]) /* ty=Tensor[(12, 4, 7), bool] */;
    %1210 = @func_9485(%1208, %1209) /* ty=(Tensor[(12, 4, 7), bool],) */;
    %1211 = %1210.0;
    (%1205, %1211)
  };
  %1212() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) */
}

def @func_12228() -> (Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) {
  %1213 = @func_7728() /* ty=(Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %1214 = @func_9859() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(7, 6, 7), bool], uint64, Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
  %1215 = @func_6159() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(1, 336), uint8], Tensor[(?, 15, 13), bool], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %1216 = %1215.1;
  %1217 = cast(%1216, dtype="float64") /* ty=Tensor[(1, 336), float64] */;
  %1218 = %1213.1;
  %1219 = %1214.3;
  %1220 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1221 = asin(%1217) /* ty=Tensor[(1, 336), float64] */;
  (%1218, %1219, %1220, %1221)
}

def @func_16991() -> Tensor[(6, 7, 8), uint8] {
  %1222 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_12653() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %1222() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_19903() -> (Tensor[(16, 16, 1), float32],) {
  %1225 = fn () -> (Tensor[(16, 16, 1), float32],) {
    %1223 = @func_15202() /* ty=(Tensor[(16, 16, 1), float32],) */;
    %1224 = %1223.0;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(16, 16, 1), float32],) */
}

def @func_15345() -> (Tensor[(6, 7, 8), uint8],) {
  @func_15343() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_19525() -> (Tensor[(16, 16, 1), float32],) {
  %1228 = fn () -> (Tensor[(16, 16, 1), float32],) {
    %1226 = @func_15202() /* ty=(Tensor[(16, 16, 1), float32],) */;
    %1227 = %1226.0;
    (%1227,)
  };
  %1228() /* ty=(Tensor[(16, 16, 1), float32],) */
}

def @func_19317() -> Tensor[(6, 7, 8), uint8] {
  @func_19315() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_16396(%var_16394: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) {
  @func_16393(%var_16394) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) */
}

def @func_1149(%var_1101: Tensor[(14, 13, 16), float64], %var_1113: float64, %var_1114: Tensor[(99), float64], %var_1135: Tensor[(672), float32]) -> (Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) {
  %1229 = cast(%var_1113, dtype="float64") /* ty=float64 */;
  %1230 = cast(%var_1114, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1231 = reshape(%1229, newshape=[]) /* ty=float64 */;
  %1232 = reshape(%1230, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %1233 = @func_700(%1231, %1232) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %1234 = cast(%var_1113, dtype="float64") /* ty=float64 */;
  %1235 = %1233.0;
  %1236 = cast(%1235, dtype="float64") /* ty=Tensor[(11, 3, 3), float64] */;
  %1237 = reshape(%1234, newshape=[]) /* ty=float64 */;
  %1238 = reshape(%1236, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
  %1239 = @func_700(%1237, %1238) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
  %1240 = cast(%var_1101, dtype="float64") /* ty=Tensor[(14, 13, 16), float64] */;
  %1241 = asinh(%1240) /* ty=Tensor[(14, 13, 16), float64] */;
  %1242 = cast(%1241, dtype="float64") /* ty=Tensor[(14, 13, 16), float64] */;
  %1243 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1244 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1245 = reshape(%1243, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1246 = reshape(%1244, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1247 = @func_413(%1245, %1246) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %1248 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1249 = cast(%var_1135, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1250 = reshape(%1248, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1251 = reshape(%1249, newshape=[6, 8, 14]) /* ty=Tensor[(6, 8, 14), float32] */;
  %1252 = @func_413(%1250, %1251) /* ty=(Tensor[(6, 8, 14), float32],) */;
  %1253 = %1239.0;
  %1254 = log(%1242) /* ty=Tensor[(14, 13, 16), float64] */;
  %1255 = %1247.0;
  %1256 = %1252.0;
  (%1235, %var_1113, %var_1114, %1253, %1254, %1255, %var_1135, %1256)
}

def @func_9246() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) {
  %1274 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) {
    %1257 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1258 = %1257.0;
    %1259 = cast(%1258, dtype="uint8") /* ty=Tensor[(6, 7, 8), uint8] */;
    %1260 = reshape(%1259, newshape=[6, 7, 8]) /* ty=Tensor[(6, 7, 8), uint8] */;
    %1261 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %1262 = cast(meta[relay.Constant][64] /* ty=Tensor[(60, 14), float64] */, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
    %1263 = reshape(%1262, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
    %1264 = @func_7636(%1263) /* ty=(Tensor[(6, 7, 8), uint8], float64, Tensor[(6, 7, 8), uint8], Tensor[(12, 10, 7), bool]) */;
    %1265 = %1264.3;
    %1266 = cast(%1265, dtype="float64") /* ty=Tensor[(12, 10, 7), float64] */;
    %1267 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(60, 14), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1268 = cast(meta[relay.Constant][64] /* ty=Tensor[(60, 14), float64] */, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
    %1269 = dyn.reshape(%1266, %1267, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1270 = @func_8987(%1260) /* ty=Tensor[(6, 7, 8), int8] */;
    %1271 = %1261.1;
    %1272 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
    %1273 = floor_mod(%1268, %1269) /* ty=Tensor[(60, 14), float64] */;
    (%1258, %1270, %1271, %1272, %1273)
  };
  %1274() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), int8], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8], Tensor[(60, 14), float64]) */
}

def @func_12499() -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) {
  %1279 = fn () -> (Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) {
    %1275 = @func_12284() /* ty=(Tensor[(3, 13, 4), float32],) */;
    %1276 = @func_11417() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(12, 4, 7), bool]) */;
    %1277 = %1275.0;
    %1278 = %1276.0;
    (%1277, %1278)
  };
  %1279() /* ty=(Tensor[(3, 13, 4), float32], Tensor[(6, 7, 8), float64]) */
}

def @func_19975() -> (Tensor[(6, 7, 8), uint8], Tensor[(16, 16, 1), float32]) {
  %1284 = fn () -> (Tensor[(6, 7, 8), uint8], Tensor[(16, 16, 1), float32]) {
    %1280 = @func_17595() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64]) */;
    %1281 = @func_19902() /* ty=(Tensor[(16, 16, 1), float32],) */;
    %1282 = %1280.0;
    %1283 = %1281.0;
    (%1282, %1283)
  };
  %1284() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(16, 16, 1), float32]) */
}

def @func_4470(%var_4468: Tensor[(3, 13, 4), int64], %var_4469: Tensor[(3, 13, 4), int64]) -> Tensor[(3, 13, 4), int64] {
  %1289 = fn (%var_4454: Tensor[(3, 13, 4), int64], %var_4455: Tensor[(3, 13, 4), int64]) -> Tensor[(3, 13, 4), int64] {
    %1285 = cast(%var_4455, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
    %1286 = shape_of(%var_4454, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1287 = cast(%var_4454, dtype="int64") /* ty=Tensor[(3, 13, 4), int64] */;
    %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    logical_xor(%1287, %1288) /* ty=Tensor[(3, 13, 4), int64] */
  };
  %1289(%var_4468, %var_4469) /* ty=Tensor[(3, 13, 4), int64] */
}

def @func_18879() -> (Tensor[(3, 13, 4), int64],) {
  @func_18877() /* ty=(Tensor[(3, 13, 4), int64],) */
}

def @func_19102() -> (Tensor[(6, 7, 8), uint8],) {
  %1290 = @func_9079() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8]) */;
  %1291 = %1290.0;
  (%1291,)
}

def @func_11162() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) {
  %1292 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1293 = %1292.1;
  %1294 = @func_11107() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1293, %1294)
}

def @func_7348() -> (Tensor[(6, 7, 8), uint8],) {
  %1295 = @func_6609() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1296 = %1295.0;
  (%1296,)
}

def @func_17094(%var_17093: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) {
  %1317 = fn (%var_17041: Tensor[(572), float64]) -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) {
    %1297 = @func_12228() /* ty=(Tensor[(6, 7, 8), uint8], uint64, Tensor[(6, 7, 8), uint8], Tensor[(1, 336), float64]) */;
    %1298 = cast(meta[relay.Constant][65] /* ty=Tensor[(572), float64] */, dtype="float64") /* ty=Tensor[(572), float64] */;
    %1299 = reshape(%1298, newshape=[572]) /* ty=Tensor[(572), float64] */;
    %1300 = @func_16393(%1299) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(572), float64]) */;
    %1301 = @func_14740() /* ty=(Tensor[(6, 7, 8), uint8],) */;
    %1302 = cast(%var_17041, dtype="float32") /* ty=Tensor[(572), float32] */;
    %1303 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(572), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1304 = cast(meta[relay.Constant][65] /* ty=Tensor[(572), float64] */, dtype="float32") /* ty=Tensor[(572), float32] */;
    %1305 = dyn.reshape(%1302, %1303, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1306 = power(%1304, %1305) /* ty=Tensor[(572), float32] */;
    %1307 = cast(%1306, dtype="bool") /* ty=Tensor[(572), bool] */;
    %1308 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(572), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1309 = cast(meta[relay.Constant][65] /* ty=Tensor[(572), float64] */, dtype="bool") /* ty=Tensor[(572), bool] */;
    %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1311 = %1297.0;
    %1312 = %1300.3;
    %1313 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
    %1314 = %1301.0;
    %1315 = logical_or(%1309, %1310) /* ty=Tensor[(572), bool] */;
    %1316 = @func_8724() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1311, %1312, %1313, %1314, %1315, %1316)
  };
  %1317(%var_17093) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), uint8], Tensor[(572), bool], Tensor[(6, 7, 8), uint8]) */
}

def @func_704(%var_702: float64, %var_703: Tensor[(11, 3, 3), float64]) -> (Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) {
  @func_700(%var_702, %var_703) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */
}

def @func_4410(%var_4409: float64) -> (Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
  %1326 = fn (%var_4403: float64) -> (Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) {
    %1318 = cast(meta[relay.Constant][66] /* ty=Tensor[(12, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 7), float64] */;
    %1319 = cast(%var_4403, dtype="float64") /* ty=float64 */;
    %1320 = cast(meta[relay.Constant][67] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
    %1321 = reshape(%1319, newshape=[]) /* ty=float64 */;
    %1322 = reshape(%1320, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float64] */;
    %1323 = @func_700(%1321, %1322) /* ty=(Tensor[(11, 3, 3), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32]) */;
    %1324 = acosh(%1318) /* ty=Tensor[(12, 10, 7), float64] */;
    %1325 = %1323.0;
    (%1324, %1325, %var_4403, meta[relay.Constant][67] /* ty=Tensor[(99), float64] */)
  };
  %1326(%var_4409) /* ty=(Tensor[(12, 10, 7), float64], Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64]) */
}

def @func_8996() -> (Tensor[(6, 7, 8), uint8],) {
  %1328 = fn () -> (Tensor[(6, 7, 8), uint8],) {
    %1327 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1327,)
  };
  %1328() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_12536() -> Tensor[(6, 7, 8), float64] {
  @func_12534() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_12819() -> (Tensor[(156), int64],) {
  @func_12817() /* ty=(Tensor[(156), int64],) */
}

def @func_6903(%var_6864: Tensor[(156), int64], %var_6881: Tensor[(196), float64], %var_6896: Tensor[(208), float64], %var_6899: float64) -> (Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64], Tensor[(2, 336), float32], Tensor[(196), float64], Tensor[(2912), float64], Tensor[(672), float32], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(672), float32], float64, Tensor[(99), float64]) {
  %1329 = cast(%var_6864, dtype="int64") /* ty=Tensor[(156), int64] */;
  %1330 = reshape(%1329, newshape=[156]) /* ty=Tensor[(156), int64] */;
  %1331 = @func_6226(%1330) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
  %1332 = cast(%var_6881, dtype="float64") /* ty=Tensor[(196), float64] */;
  %1333 = cast(meta[relay.Constant][68] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1334 = cast(meta[relay.Constant][69] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1335 = reshape(%1332, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float64] */;
  %1336 = reshape(%1333, newshape=[2912]) /* ty=Tensor[(2912), float64] */;
  %1337 = reshape(%1334, newshape=[2, 336]) /* ty=Tensor[(2, 336), float32] */;
  %1338 = @func_4640(%1335, %1336, %1337) /* ty=(Tensor[(2, 14, 7), float64], Tensor[(11, 3, 3), float64], Tensor[(2912), float64], float64, Tensor[(33, 3), float64], Tensor[(2, 336), float32], Tensor[(11, 3, 3), float64]) */;
  %1339 = cast(%var_6896, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1340 = reshape(%1339, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
  %1341 = @func_5350(%1340) /* ty=(Tensor[(1, 16, 13), float64],) */;
  %1342 = cast(meta[relay.Constant][68] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %1343 = cast(%var_6899, dtype="float64") /* ty=float64 */;
  %1344 = cast(meta[relay.Constant][70] /* ty=Tensor[(99), float64] */, dtype="float64") /* ty=Tensor[(99), float64] */;
  %1345 = cast(meta[relay.Constant][69] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1346 = reshape(%1342, newshape=[14, 13, 16]) /* ty=Tensor[(14, 13, 16), float64] */;
  %1347 = reshape(%1343, newshape=[]) /* ty=float64 */;
  %1348 = reshape(%1344, newshape=[99]) /* ty=Tensor[(99), float64] */;
  %1349 = reshape(%1345, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %1350 = @func_1149(%1346, %1347, %1348, %1349) /* ty=(Tensor[(11, 3, 3), float64], float64, Tensor[(99), float64], Tensor[(11, 3, 3), float64], Tensor[(14, 13, 16), float64], Tensor[(6, 8, 14), float32], Tensor[(672), float32], Tensor[(6, 8, 14), float32]) */;
  %1351 = @func_6672() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1352 = %1331.1;
  %1353 = %1338.5;
  %1354 = %1341.0;
  %1355 = %1350.6;
  (%1351, %1352, %var_6864, %1353, %var_6881, meta[relay.Constant][68] /* ty=Tensor[(2912), float64] */, meta[relay.Constant][69] /* ty=Tensor[(672), float32] */, %1354, %var_6896, %1355, %var_6899, meta[relay.Constant][70] /* ty=Tensor[(99), float64] */)
}

def @func_15154() -> Tensor[(6, 7, 8), float32] {
  %1356 = fn () -> Tensor[(6, 7, 8), float32] {
    @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
  };
  %1356() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_7900() -> Tensor[(6, 7, 8), float32] {
  @func_7799() /* ty=Tensor[(6, 7, 8), float32] */
}

def @func_7859() -> (Tensor[(?, 15, 13), float64],) {
  @func_7857() /* ty=(Tensor[(?, 15, 13), float64],) */
}

def @func_6610() -> (Tensor[(6, 7, 8), uint8],) {
  %1358 = fn () -> (Tensor[(6, 7, 8), uint8],) {
    %1357 = @func_6581() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1357,)
  };
  %1358() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_16950() -> (Tensor[(8, 13, 2), int32], Tensor[(8, 13, 2), bool], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) {
  @func_16948() /* ty=(Tensor[(8, 13, 2), int32], Tensor[(8, 13, 2), bool], Tensor[(?, 15, 13), float64], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */
}

def @func_11298() -> (Tensor[(3, 13, 4), int64],) {
  @func_11296() /* ty=(Tensor[(3, 13, 4), int64],) */
}

def @func_14740() -> (Tensor[(6, 7, 8), uint8],) {
  %1359 = @func_11847() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %1360 = %1359.1;
  (%1360,)
}

def @func_8948(%var_8947: Tensor[(11, 5, 10), float32]) -> (Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %1374 = fn (%var_8867: Tensor[(11, 5, 10), float32]) -> (Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
    %1361 = cast(%var_8867, dtype="float64") /* ty=Tensor[(11, 5, 10), float64] */;
    %1362 = cast(meta[relay.Constant][71] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %1363 = reshape(%1362, newshape=[1, 16, 13]) /* ty=Tensor[(1, 16, 13), float64] */;
    %1364 = @func_5350(%1363) /* ty=(Tensor[(1, 16, 13), float64],) */;
    %1365 = cast(%var_8867, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
    %1366 = log2(%1365) /* ty=Tensor[(11, 5, 10), float32] */;
    %1367 = cast(%1366, dtype="float32") /* ty=Tensor[(11, 5, 10), float32] */;
    %1368 = @func_7524() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %1369 = acos(%1361) /* ty=Tensor[(11, 5, 10), float64] */;
    %1370 = %1364.0;
    %1371 = acosh(%1367) /* ty=Tensor[(11, 5, 10), float32] */;
    %1372 = %1368.0;
    %1373 = @func_8158() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1369, %1370, meta[relay.Constant][71] /* ty=Tensor[(208), float64] */, %1371, %1372, %1373)
  };
  %1374(%var_8947) /* ty=(Tensor[(11, 5, 10), float64], Tensor[(1, 16, 13), float64], Tensor[(208), float64], Tensor[(11, 5, 10), float32], Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */
}

def @func_20227(%var_20225: Tensor[(3, 9, 5), float32], %var_20226: Tensor[(78, 2), int64]) -> (Tensor[(3, 9, 5), bool], Tensor[(3, 13, 4), int64], Tensor[(78, 2), int64], Tensor[(156), int64], Tensor[(6, 7, 8), uint8]) {
  %1389 = fn (%var_20167: Tensor[(3, 9, 5), float32], %var_20198: Tensor[(78, 2), int64]) -> (Tensor[(3, 9, 5), bool], Tensor[(3, 13, 4), int64], Tensor[(78, 2), int64], Tensor[(156), int64], Tensor[(6, 7, 8), uint8]) {
    %1375 = cast(%var_20167, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %1376 = acosh(%1375) /* ty=Tensor[(3, 9, 5), float32] */;
    %1377 = cast(meta[relay.Constant][72] /* ty=Tensor[(3, 9, 5), float32] */, dtype="bool") /* ty=Tensor[(3, 9, 5), bool] */;
    %1378 = shape_of(%1376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1379 = cast(%1376, dtype="bool") /* ty=Tensor[(3, 9, 5), bool] */;
    %1380 = dyn.reshape(%1377, %1378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1381 = cast(%var_20198, dtype="int64") /* ty=Tensor[(78, 2), int64] */;
    %1382 = reshape(%1381, newshape=[156]) /* ty=Tensor[(156), int64] */;
    %1383 = @func_6226(%1382) /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(3, 13, 4), int64], Tensor[(156), int64]) */;
    %1384 = @func_12817() /* ty=(Tensor[(156), int64],) */;
    %1385 = less_equal(%1379, %1380) /* ty=Tensor[(3, 9, 5), bool] */;
    %1386 = %1383.1;
    %1387 = %1384.0;
    %1388 = @func_7918() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1385, %1386, %var_20198, %1387, %1388)
  };
  %1389(%var_20225, %var_20226) /* ty=(Tensor[(3, 9, 5), bool], Tensor[(3, 13, 4), int64], Tensor[(78, 2), int64], Tensor[(156), int64], Tensor[(6, 7, 8), uint8]) */
}

def @func_10589() -> (Tensor[(6, 7, 8), float64], Tensor[(?, 15, 13), float64]) {
  %1390 = @func_9684() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1391 = %1390.0;
  %1392 = @func_6964() /* ty=Tensor[(?, 15, 13), float64] */;
  (%1391, %1392)
}

def @func_7144() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  @func_7142() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_9485(%var_9467: Tensor[(12, 4, 7), bool], %var_9468: Tensor[(12, 4, 7), bool]) -> (Tensor[(12, 4, 7), bool],) {
  %1393 = cast(%var_9468, dtype="bool") /* ty=Tensor[(12, 4, 7), bool] */;
  %1394 = shape_of(%var_9467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1395 = cast(%var_9467, dtype="bool") /* ty=Tensor[(12, 4, 7), bool] */;
  %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1397 = logical_and(%1395, %1396) /* ty=Tensor[(12, 4, 7), bool] */;
  (%1397,)
}

def @func_12000() -> Tensor[(6, 7, 8), float64] {
  %1399 = fn () -> Tensor[(6, 7, 8), float64] {
    %1398 = @func_10778() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) */;
    %1398.0
  };
  %1399() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_15203() -> (Tensor[(16, 16, 1), float32],) {
  %1402 = fn () -> (Tensor[(16, 16, 1), float32],) {
    %1400 = cast(meta[relay.Constant][73] /* ty=Tensor[(16, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
    %1401 = log2(%1400) /* ty=Tensor[(16, 16, 1), float32] */;
    (%1401,)
  };
  %1402() /* ty=(Tensor[(16, 16, 1), float32],) */
}

def @func_13435() -> Tensor[(6, 7, 8), float64] {
  %1404 = fn () -> Tensor[(6, 7, 8), float64] {
    %1403 = @func_9034() /* ty=(Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), float64]) */;
    %1403.0
  };
  %1404() /* ty=Tensor[(6, 7, 8), float64] */
}

def @func_15485() -> (Tensor[(6, 7, 8), float64], Tensor[(6, 7, 8), uint8]) {
  %1405 = @func_7329() /* ty=(Tensor[(6, 7, 8), float64],) */;
  %1406 = %1405.0;
  %1407 = @func_12880() /* ty=Tensor[(6, 7, 8), uint8] */;
  (%1406, %1407)
}

def @func_14717() -> (Tensor[(6, 7, 8), float64],) {
  %1410 = fn () -> (Tensor[(6, 7, 8), float64],) {
    %1408 = @func_13926() /* ty=(Tensor[(6, 7, 8), float64],) */;
    %1409 = %1408.0;
    (%1409,)
  };
  %1410() /* ty=(Tensor[(6, 7, 8), float64],) */
}

def @func_7142() -> (Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1411 = @func_7083() /* ty=(Tensor[(6, 7, 8), uint8],) */;
  %1412 = @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */;
  %1413 = %1411.0;
  (%1412, %1413)
}

def @func_10057(%var_10056: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
  %1419 = fn (%var_10026: Tensor[(4, 15, 12), float64]) -> (Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) {
    %1414 = cast(%var_10026, dtype="float64") /* ty=Tensor[(4, 15, 12), float64] */;
    %1415 = @func_8517() /* ty=(Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
    %1416 = tan(%1414) /* ty=Tensor[(4, 15, 12), float64] */;
    %1417 = %1415.1;
    %1418 = @func_8724() /* ty=Tensor[(6, 7, 8), uint8] */;
    (%1416, %1417, %1418)
  };
  %1419(%var_10056) /* ty=(Tensor[(4, 15, 12), float64], Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */
}

def @func_11504() -> (Tensor[(6, 7, 8), uint8],) {
  @func_11502() /* ty=(Tensor[(6, 7, 8), uint8],) */
}

def @func_16603() -> (Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), float32]) {
  %1420 = @func_7511() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), float32], Tensor[(6, 7, 8), uint8]) */;
  %1421 = @func_7799() /* ty=Tensor[(6, 7, 8), float32] */;
  %1422 = %1420.1;
  (%1421, %1422)
}

def @func_16837() -> Tensor[(3, 13, 4), int64] {
  @func_16835() /* ty=Tensor[(3, 13, 4), int64] */
}

def @func_10899() -> Tensor[(6, 7, 8), uint8] {
  %1423 = fn () -> Tensor[(6, 7, 8), uint8] {
    @func_6973() /* ty=Tensor[(6, 7, 8), uint8] */
  };
  %1423() /* ty=Tensor[(6, 7, 8), uint8] */
}

def @func_17413() -> (Tensor[(6, 7, 8), uint8],) {
  %1424 = @func_12733() /* ty=(Tensor[(6, 7, 8), uint8], Tensor[(6, 7, 8), uint8]) */;
  %1425 = %1424.0;
  (%1425,)
}

def @func_16042() -> (Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) {
  @func_16040() /* ty=(Tensor[(3, 13, 4), int64], Tensor[(6, 7, 8), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen889/build/output.py", line 4871, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:37:57] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


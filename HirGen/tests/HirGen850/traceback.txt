==========mod==========
#[version = "0.0.5"]
def @func_7059(%var_6994: Tensor[(12, 15, 16), float64], %var_6995: Tensor[(12, 15, 16), float64], %var_7032: Tensor[(1296), uint64]) -> (Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) {
  %0 = cast(%var_6995, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %1 = shape_of(%var_6994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_6994, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = cast(%var_6995, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %6 = reshape(%5, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %7 = cast(meta[relay.Constant][1] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %8 = cast(%var_7032, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %9 = reshape(%7, newshape=[]) /* ty=uint64 */;
  %10 = reshape(%8, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %11 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(704, 1), float32] */, dtype="float32") /* ty=Tensor[(704, 1), float32] */;
  %13 = reshape(%12, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %14 = @func_6200(%13) /* ty=(Tensor[(704), float32], Tensor[(704), float32]) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(297), uint8] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %16 = mod(%2, %3) /* ty=Tensor[(12, 15, 16), float64] */;
  %17 = log10(%4) /* ty=Tensor[(12, 15, 16), float32] */;
  %18 = @func_1101(%6) /* ty=Tensor[(3, 9, 11), uint8] */;
  %19 = @func_417(%9, %10) /* ty=Tensor[(16, 9, 9), float32] */;
  %20 = %11.0;
  %21 = %14.1;
  %22 = log10(%15) /* ty=Tensor[(297), float32] */;
  (%16, %17, %18, %19, meta[relay.Constant][1] /* ty=uint64 */, %var_7032, %20, %21, meta[relay.Constant][2] /* ty=Tensor[(704, 1), float32] */, %22)
}

def @func_1254(%var_1214: Tensor[(297), uint8], %var_1221: uint64) -> (Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %23 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
  %24 = cast(%var_1214, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %25 = reshape(%24, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %26 = cast(%var_1221, dtype="uint64") /* ty=uint64 */;
  %27 = cast(meta[relay.Constant][4] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %28 = reshape(%26, newshape=[]) /* ty=uint64 */;
  %29 = reshape(%27, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %30 = cast(meta[relay.Constant][5] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %31 = reshape(%30, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
  %32 = sinh(%23) /* ty=Tensor[(5, 12, 5), float32] */;
  %33 = @func_1101(%25) /* ty=Tensor[(3, 9, 11), uint8] */;
  %34 = @func_417(%28, %29) /* ty=Tensor[(16, 9, 9), float32] */;
  %35 = @func_1079(%31) /* ty=Tensor[(8, 11, 8), float32] */;
  (%32, %33, %var_1214, %34, %var_1221, meta[relay.Constant][4] /* ty=Tensor[(1296), uint64] */, %35, meta[relay.Constant][5] /* ty=Tensor[(704), float32] */)
}

def @func_5349(%var_5324: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], uint32, Tensor[(192, 1), uint32], Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
  %36 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %37 = cast(%var_5324, dtype="uint32") /* ty=uint32 */;
  %38 = cast(meta[relay.Constant][6] /* ty=Tensor[(192, 1), uint32] */, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
  %39 = reshape(%37, newshape=[]) /* ty=uint32 */;
  %40 = reshape(%38, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %41 = @func_4817(%39, %40) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %42 = cast(meta[relay.Constant][7] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %43 = reshape(%42, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %44 = @func_3445(%43) /* ty=(Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %45 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %46 = %36.1;
  %47 = %41.1;
  %48 = %44.2;
  %49 = %45.0;
  (%46, %47, %var_5324, meta[relay.Constant][6] /* ty=Tensor[(192, 1), uint32] */, %48, meta[relay.Constant][7] /* ty=Tensor[(704), float32] */, %49)
}

def @func_11930() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %50 = @func_9586() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %51 = %50.0;
  %52 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%51, %52)
}

def @func_8989(%var_8985: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(297), uint8]) {
  %53 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %54 = cast(meta[relay.Constant][8] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %55 = cast(%var_8985, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %56 = reshape(%54, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %57 = reshape(%55, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %58 = @func_3633(%56, %57) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) */;
  %59 = %53.0;
  %60 = %58.4;
  (%59, %60, meta[relay.Constant][8] /* ty=Tensor[(24), float32] */, %var_8985)
}

def @func_8654(%var_8634: Tensor[(36, 36), uint64], %var_8637: Tensor[(54, 2), uint8], %var_8647: Tensor[(54, 2), uint8]) -> (Tensor[(16, 9, 9), float32], uint64, Tensor[(36, 36), uint64], Tensor[(54, 2), int32], Tensor[(54, 2), int8]) {
  %61 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %62 = cast(%var_8634, dtype="uint64") /* ty=Tensor[(36, 36), uint64] */;
  %63 = reshape(%61, newshape=[]) /* ty=uint64 */;
  %64 = reshape(%62, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %65 = @func_7937() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) */;
  %66 = %65.2;
  %67 = cast(meta[relay.Constant][10] /* ty=Tensor[(54, 2), float64] */, dtype="uint8") /* ty=Tensor[(54, 2), uint8] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
  %69 = cast(%66, dtype="uint8") /* ty=Tensor[(54, 2), uint8] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %71 = add(%69, %70) /* ty=Tensor[(54, 2), uint8] */;
  %72 = cast(%var_8637, dtype="int32") /* ty=Tensor[(54, 2), int32] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(%71, dtype="int32") /* ty=Tensor[(54, 2), int32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %76 = cast(%var_8647, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
  %77 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(%71, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %80 = @func_417(%63, %64) /* ty=Tensor[(16, 9, 9), float32] */;
  %81 = left_shift(%74, %75) /* ty=Tensor[(54, 2), int32] */;
  %82 = logical_xor(%78, %79) /* ty=Tensor[(54, 2), int8] */;
  (%80, meta[relay.Constant][9] /* ty=uint64 */, %var_8634, %81, %82)
}

def @func_12750() -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) {
  %83 = cast(meta[relay.Constant][11] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %84 = reshape(%83, newshape=[]) /* ty=uint32 */;
  %85 = @func_12506(%84) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) */;
  %86 = @func_3297() /* ty=Tensor[(10), int16] */;
  %87 = @func_9986() /* ty=Tensor[(12, 9, 11), float32] */;
  %88 = %85.1;
  (%86, %87, %88, meta[relay.Constant][11] /* ty=uint32 */)
}

def @func_3633(%var_3604: Tensor[(24), float32], %var_3611: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) {
  %89 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %90 = cast(meta[relay.Constant][12] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %91 = reshape(%90, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %92 = @func_3491(%91) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %93 = cast(-2.07478f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %94 = cast(%var_3604, dtype="float32") /* ty=Tensor[(24), float32] */;
  %95 = reshape(%93, newshape=[]) /* ty=float32 */;
  %96 = reshape(%94, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %97 = cast(%var_3611, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %98 = cast(-2.07478f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
  %99 = reshape(%97, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %100 = reshape(%98, newshape=[]) /* ty=uint64 */;
  %101 = @func_1254(%99, %100) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %102 = %89.0;
  %103 = @func_3297() /* ty=Tensor[(10), int16] */;
  %104 = %92.1;
  %105 = @func_2449(%95, %96) /* ty=Tensor[(2, 2, 6), float32] */;
  %106 = %101.7;
  (%102, %103, %104, meta[relay.Constant][12] /* ty=Tensor[(704), float32] */, %105, -2.07478f /* ty=float32 */, %var_3604, %106, %var_3611)
}

def @func_12604() -> (Tensor[(12, 9, 1), float64],) {
  %107 = @func_10234() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %108 = %107.0;
  (%108,)
}

def @func_8038(%var_8033: Tensor[(704), float32]) -> (Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) {
  %109 = cast(meta[relay.Constant][13] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %110 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(4, 2), uint8] */;
  %111 = reshape(%109, newshape=[]) /* ty=uint8 */;
  %112 = reshape(%110, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %113 = @func_4504(%111, %112) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %114 = cast(meta[relay.Constant][13] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %115 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12), float32] */;
  %116 = reshape(%114, newshape=[]) /* ty=float32 */;
  %117 = reshape(%115, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %118 = cast(%var_8033, dtype="float32") /* ty=Tensor[(704), float32] */;
  %119 = reshape(%118, newshape=[2, 352]) /* ty=Tensor[(2, 352), float32] */;
  %120 = @func_7295(%119) /* ty=(Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) */;
  %121 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %122 = %113.0;
  %123 = @func_2449(%116, %117) /* ty=Tensor[(2, 2, 6), float32] */;
  %124 = %120.2;
  (%121, %122, meta[relay.Constant][13] /* ty=uint8 */, meta[relay.Constant][14] /* ty=Tensor[(4, 2), uint8] */, %123, meta[relay.Constant][15] /* ty=Tensor[(2, 12), float32] */, %124, %var_8033)
}

def @func_5054(%var_4998: uint32, %var_5000: Tensor[(270, 2), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %125 = cast(%var_4998, dtype="uint32") /* ty=uint32 */;
  %126 = cast(meta[relay.Constant][16] /* ty=Tensor[(96, 2), uint32] */, dtype="uint32") /* ty=Tensor[(96, 2), uint32] */;
  %127 = cast(%var_5000, dtype="int8") /* ty=Tensor[(270, 2), int8] */;
  %128 = reshape(%125, newshape=[]) /* ty=uint32 */;
  %129 = reshape(%126, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %130 = reshape(%127, newshape=[540, 1]) /* ty=Tensor[(540, 1), int8] */;
  %131 = @func_3836(%128, %129, %130) /* ty=(Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) */;
  %132 = cast(meta[relay.Constant][17] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %133 = reshape(%132, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
  %134 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %135 = %131.4;
  %136 = @func_1079(%133) /* ty=Tensor[(8, 11, 8), float32] */;
  (%134, %135, %var_4998, meta[relay.Constant][16] /* ty=Tensor[(96, 2), uint32] */, %var_5000, %136, meta[relay.Constant][17] /* ty=Tensor[(704), float32] */)
}

def @func_13030() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float32]) {
  %137 = @func_10211() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %138 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
  %139 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %140 = %139.2;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %142 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%138, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %145 = %137.0;
  %146 = minimum(%143, %144) /* ty=Tensor[(12, 9, ?), float32] */;
  (%145, %146)
}

def @func_2449(%var_2443: float32, %var_2444: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), float32] {
  %147 = cast(%var_2443, dtype="float32") /* ty=float32 */;
  %148 = cast(%var_2444, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  maximum(%147, %148) /* ty=Tensor[(2, 2, 6), float32] */
}

def @func_13480(%var_13467: Tensor[(6, 4), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(6, 4), float64], Tensor[(704), float32]) {
  %149 = cast(%var_13467, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
  %150 = reshape(%149, newshape=[1, 24]) /* ty=Tensor[(1, 24), float64] */;
  %151 = @func_9473(%150) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) */;
  %152 = @func_9421() /* ty=(Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) */;
  %153 = @func_8997() /* ty=Tensor[(12, 9, 1), float64] */;
  %154 = %151.5;
  %155 = %152.0;
  (%153, %154, %var_13467, %155)
}

def @func_11817() -> Tensor[(12, 9, 1), float64] {
  %156 = @func_7937() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) */;
  %156.1
}

def @func_4881() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %157 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %158 = @func_3291() /* ty=Tensor[(12, 9, 1), float64] */;
  %159 = %157.0;
  %160 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%158, %159, %160)
}

def @func_11882() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %161 = @func_10234() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %162 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %163 = @func_10919() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %164 = %161.0;
  %165 = %162.0;
  %166 = %163.0;
  (%164, %165, %166)
}

def @func_5975() -> (Tensor[(704), float32],) {
  %167 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %168 = %167.0;
  (%168,)
}

def @func_1687(%var_1682: int16, %var_1683: Tensor[(1, 10, 1), int16]) -> Tensor[(1, 10, 1), int16] {
  %169 = cast(%var_1682, dtype="int16") /* ty=int16 */;
  %170 = cast(%var_1683, dtype="int16") /* ty=Tensor[(1, 10, 1), int16] */;
  bitwise_xor(%169, %170) /* ty=Tensor[(1, 10, 1), int16] */
}

def @func_7295(%var_7280: Tensor[(2, 352), float32]) -> (Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) {
  %171 = cast(%var_7280, dtype="float32") /* ty=Tensor[(2, 352), float32] */;
  %172 = reshape(%171, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %173 = @func_3491(%172) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %174 = cast(meta[relay.Constant][18] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %175 = reshape(%174, newshape=[1, 297]) /* ty=Tensor[(1, 297), uint8] */;
  %176 = @func_5185(%175) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) */;
  %177 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 8), float64] */;
  %178 = cosh(%177) /* ty=Tensor[(14, 11, 8), float64] */;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
  %180 = %173.0;
  %181 = %176.1;
  %182 = acos(%179) /* ty=Tensor[(14, 11, 8), float32] */;
  (%180, %var_7280, %181, meta[relay.Constant][18] /* ty=Tensor[(297), uint8] */, %182)
}

def @func_7793(%var_7763: Tensor[(6, 5, 15), float64], %var_7764: Tensor[(6, 5, 15), float64], %var_7769: Tensor[(12, 2), float32]) -> (Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) {
  %183 = cast(%var_7764, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
  %184 = shape_of(%var_7763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%var_7763, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %187 = cast(%var_7769, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
  %188 = reshape(%187, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %189 = @func_4689(%188) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) */;
  %190 = floor_mod(%185, %186) /* ty=Tensor[(6, 5, 15), float64] */;
  %191 = %189.1;
  (%190, %191, %var_7769)
}

def @func_7331(%var_7326: Tensor[(704), float32]) -> Tensor[(704), bool] {
  %192 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(704), float32] */;
  %195 = atan(%194) /* ty=Tensor[(704), float32] */;
  %196 = cast(%var_7326, dtype="bool") /* ty=Tensor[(704), bool] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(1), int32] */;
  %198 = cast(%195, dtype="bool") /* ty=Tensor[(704), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?), bool] */;
  not_equal(%198, %199) /* ty=Tensor[(704), bool] */
}

def @func_5891() -> (Tensor[(12, 9, 1), float64],) {
  %200 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %201 = %200.0;
  (%201,)
}

def @func_10455(%var_10430: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64], Tensor[(12, 9, 1), float64], Tensor[(2, 352), float32], Tensor[(176, 4), float32], Tensor[(12, 9, 1), float64]) {
  %202 = cast(%var_10430, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
  %203 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %204 = cast(meta[relay.Constant][20] /* ty=Tensor[(176, 4), float32] */, dtype="float32") /* ty=Tensor[(176, 4), float32] */;
  %205 = reshape(%204, newshape=[2, 352]) /* ty=Tensor[(2, 352), float32] */;
  %206 = @func_7295(%205) /* ty=(Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) */;
  %207 = tan(%202) /* ty=Tensor[(10, 4, 10), float64] */;
  %208 = %203.0;
  %209 = %206.1;
  %210 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  (%207, %208, %209, meta[relay.Constant][20] /* ty=Tensor[(176, 4), float32] */, %210)
}

def @func_2959(%var_2944: float32, %var_2945: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) {
  %211 = cast(%var_2944, dtype="float32") /* ty=float32 */;
  %212 = cast(%var_2945, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %213 = cast(%var_2944, dtype="uint32") /* ty=uint32 */;
  %214 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 192), uint32] */, dtype="uint32") /* ty=Tensor[(1, 192), uint32] */;
  %215 = cast(meta[relay.Constant][22] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %216 = reshape(%213, newshape=[]) /* ty=uint32 */;
  %217 = reshape(%214, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %218 = reshape(%215, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %219 = @func_2049(%216, %217, %218) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %220 = power(%211, %212) /* ty=Tensor[(16, 7, 15), float32] */;
  %221 = %219.1;
  (%220, %221, meta[relay.Constant][21] /* ty=Tensor[(1, 192), uint32] */, meta[relay.Constant][22] /* ty=Tensor[(540), int8] */)
}

def @func_9334() -> (Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  %222 = cast(-2.97481f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %223 = cast(meta[relay.Constant][23] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %224 = reshape(%222, newshape=[]) /* ty=float32 */;
  %225 = reshape(%223, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %226 = cast(meta[relay.Constant][24] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %227 = reshape(%226, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %228 = @func_1466(%227) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %229 = @func_9171() /* ty=Tensor[(12, 9, 704), bool] */;
  %230 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
  %231 = @func_2449(%224, %225) /* ty=Tensor[(2, 2, 6), float32] */;
  %232 = %228.0;
  (%229, %230, %231, -2.97481f /* ty=float32 */, meta[relay.Constant][23] /* ty=Tensor[(24), float32] */, %232, meta[relay.Constant][24] /* ty=Tensor[(540), int8] */)
}

def @func_6833() -> (Tensor[(12, 9, 1), float64],) {
  %233 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %234 = %233.0;
  (%234,)
}

def @func_13213() -> Tensor[(12, 9, 1), float64] {
  %235 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %235.0
}

def @func_2674(%var_2669: Tensor[(297), uint8]) -> (Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) {
  %236 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
  %237 = cast(%var_2669, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %238 = reshape(%237, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %239 = log(%236) /* ty=Tensor[(6, 11, 15), float64] */;
  %240 = @func_1101(%238) /* ty=Tensor[(3, 9, 11), uint8] */;
  (%239, %240, %var_2669)
}

def @func_6991() -> Tensor[(12, 9, 1), float64] {
  @func_4847() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_13546() -> (Tensor[(10), int16],) {
  %241 = @func_3297() /* ty=Tensor[(10), int16] */;
  (%241,)
}

def @func_3445(%var_3443: Tensor[(704), float32]) -> (Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %242 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
  %243 = cast(%var_3443, dtype="float32") /* ty=Tensor[(704), float32] */;
  %244 = reshape(%243, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
  %245 = %242.2;
  %246 = @func_1079(%244) /* ty=Tensor[(8, 11, 8), float32] */;
  (%245, %246, %var_3443)
}

def @func_12905(%var_12880: bool) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(2, 8), bool]) {
  %247 = @func_11882() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %248 = cast(%var_12880, dtype="bool") /* ty=bool */;
  %249 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 8), bool] */;
  %250 = reshape(%248, newshape=[]) /* ty=bool */;
  %251 = reshape(%249, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
  %252 = @func_5853(%250, %251) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
  %253 = %247.0;
  %254 = %252.1;
  (%253, %254, %var_12880, meta[relay.Constant][26] /* ty=Tensor[(2, 8), bool] */)
}

def @func_1466(%var_1460: Tensor[(9, 4, 15), int8]) -> (Tensor[(9, 4, 15), int8],) {
  %255 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 4, 15), int8] */, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
  %256 = shape_of(%var_1460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%var_1460, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %259 = subtract(%257, %258) /* ty=Tensor[(9, 4, 15), int8] */;
  (%259,)
}

def @func_5185(%var_5179: Tensor[(1, 297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) {
  %260 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %261 = cast(meta[relay.Constant][28] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %262 = reshape(%261, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %263 = @func_4242(%262) /* ty=Tensor[(13, 5, 14), float64] */;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %265 = cast(%var_5179, dtype="uint8") /* ty=Tensor[(1, 297), uint8] */;
  %266 = reshape(%265, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %267 = %260.0;
  %268 = atanh(%264) /* ty=Tensor[(13, 5, 14), float64] */;
  %269 = @func_1101(%266) /* ty=Tensor[(3, 9, 11), uint8] */;
  (%267, meta[relay.Constant][28] /* ty=Tensor[(910), float64] */, %268, %269, %var_5179)
}

def @func_3836(%var_3822: uint32, %var_3823: Tensor[(192), uint32], %var_3824: Tensor[(540, 1), int8]) -> (Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) {
  %270 = cast(%var_3822, dtype="uint32") /* ty=uint32 */;
  %271 = cast(%var_3823, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %272 = cast(%var_3824, dtype="int8") /* ty=Tensor[(540, 1), int8] */;
  %273 = reshape(%270, newshape=[]) /* ty=uint32 */;
  %274 = reshape(%271, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %275 = reshape(%272, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %276 = @func_2049(%273, %274, %275) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %277 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
  %278 = @func_3297() /* ty=Tensor[(10), int16] */;
  %279 = %276.0;
  %280 = %277.1;
  (%278, %279, %var_3822, %var_3823, %var_3824, %280)
}

def @func_9970() -> (Tensor[(12, 9, 1), float64],) {
  %281 = @func_9622() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %282 = %281.0;
  (%282,)
}

def @func_2049(%var_2030: uint32, %var_2031: Tensor[(12, 1, 16), uint32], %var_2038: Tensor[(540), int8]) -> (Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) {
  %283 = cast(%var_2030, dtype="uint32") /* ty=uint32 */;
  %284 = cast(%var_2031, dtype="uint32") /* ty=Tensor[(12, 1, 16), uint32] */;
  %285 = cast(%var_2038, dtype="int8") /* ty=Tensor[(540), int8] */;
  %286 = reshape(%285, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %287 = @func_1466(%286) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
  %290 = maximum(%283, %284) /* ty=Tensor[(12, 1, 16), uint32] */;
  %291 = acosh(%289) /* ty=Tensor[(9, 4, 15), float32] */;
  (%290, %var_2038, %291)
}

def @func_6694() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  %292 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %293 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %294 = %292.1;
  %295 = %293.0;
  (%294, %295)
}

def @func_9622() -> (Tensor[(12, 9, 1), float64],) {
  %296 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%296,)
}

def @func_10512() -> (uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) {
  %297 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %298 = %297.5;
  %299 = cast(%298, dtype="uint8") /* ty=uint8 */;
  %300 = cast(meta[relay.Constant][29] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %301 = reshape(%299, newshape=[]) /* ty=uint8 */;
  %302 = reshape(%300, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %303 = @func_4504(%301, %302) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %304 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %305 = %303.0;
  %306 = %304.0;
  (%298, %305, meta[relay.Constant][29] /* ty=Tensor[(8), uint8] */, %306)
}

def @func_5853(%var_5798: bool, %var_5799: Tensor[(1, 8, 2), bool]) -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) {
  %307 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %308 = cast(%var_5798, dtype="bool") /* ty=bool */;
  %309 = cast(%var_5799, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %310 = logical_and(%308, %309) /* ty=Tensor[(1, 8, 2), bool] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %312 = log(%311) /* ty=Tensor[(1, 8, 2), float32] */;
  %313 = cast(%var_5798, dtype="bool") /* ty=bool */;
  %314 = cast(%312, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %315 = @func_3297() /* ty=Tensor[(10), int16] */;
  %316 = %307.0;
  %317 = greater_equal(%313, %314) /* ty=Tensor[(1, 8, 2), bool] */;
  (%315, %316, %317)
}

def @func_9986() -> Tensor[(12, 9, 11), float32] {
  %318 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %318.0
}

def @func_7761() -> Tensor[(12, 9, 11), float32] {
  %319 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %319.0
}

def @func_8824() -> (Tensor[(12, 9, ?), float32],) {
  %320 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(12, 9, ?), float32] */;
  %323 = log(%322) /* ty=Tensor[(12, 9, ?), float32] */;
  (%323,)
}

def @func_7263(%var_7191: Tensor[(12, 9, 1), float64], %var_7198: Tensor[(297), uint8], %var_7234: Tensor[(18, 30), int8]) -> (Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) {
  %324 = cast(meta[relay.Constant][30] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %325 = reshape(%324, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %326 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %327 = %326.0;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %329 = reshape(%328, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
  %330 = @func_3745(%329) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) */;
  %331 = cast(%var_7191, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %332 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%327, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %335 = cast(%var_7198, dtype="float32") /* ty=Tensor[(297), float32] */;
  %336 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(297), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %337 = cast(meta[relay.Constant][30] /* ty=Tensor[(297), uint8] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?), float32] */;
  %339 = cast(%var_7198, dtype="bool") /* ty=Tensor[(297), bool] */;
  %340 = cast(%327, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %341 = cast(meta[relay.Constant][31] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %342 = reshape(%341, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %343 = @func_3491(%342) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %344 = cast(%var_7234, dtype="int8") /* ty=Tensor[(18, 30), int8] */;
  %345 = reshape(%344, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %346 = @func_1466(%345) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %347 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %348 = @func_1101(%325) /* ty=Tensor[(3, 9, 11), uint8] */;
  %349 = %330.2;
  %350 = mod(%333, %334) /* ty=Tensor[(12, 9, ?), float64] */;
  %351 = divide(%337, %338) /* ty=Tensor[(297), float32] */;
  %352 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %353 = less(%339, %340) /* ty=Tensor[(12, 9, 297), bool] */;
  %354 = %343.2;
  %355 = %346.0;
  %356 = %347.0;
  (%348, %349, %350, %351, %352, %353, %354, meta[relay.Constant][31] /* ty=Tensor[(704), float32] */, %355, %var_7234, %356)
}

def @func_9421() -> (Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) {
  %357 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %358 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %359 = %357.0;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(704), float32] */;
  %361 = reshape(%360, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %362 = @func_8038(%361) /* ty=(Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) */;
  %363 = %358.5;
  %364 = %362.5;
  (%359, %363, %364)
}

def @func_10234() -> (Tensor[(12, 9, 1), float64],) {
  %365 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %366 = %365.0;
  (%366,)
}

def @func_13609(%var_13592: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), uint32],) {
  %367 = cast(%var_13592, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %368 = acosh(%367) /* ty=Tensor[(2, 12, 6), float64] */;
  %369 = cast(%368, dtype="uint32") /* ty=Tensor[(2, 12, 6), uint32] */;
  %370 = shape_of(%var_13592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%var_13592, dtype="uint32") /* ty=Tensor[(2, 12, 6), uint32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %373 = add(%371, %372) /* ty=Tensor[(2, 12, 6), uint32] */;
  (%373,)
}

def @func_13179(%var_13092: Tensor[(12, 9, 1), float64], %var_13157: uint32, %var_13158: Tensor[(192), uint32]) -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(540), int8], uint32, Tensor[(192), uint32], Tensor[(1, 540), int8], Tensor[(12, 15, 16), float64], Tensor[(2880), float64]) {
  %374 = @func_3291() /* ty=Tensor[(12, 9, 1), float64] */;
  %375 = cast(%var_13092, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %379 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %380 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %381 = cast(%var_13157, dtype="uint32") /* ty=uint32 */;
  %382 = cast(%var_13158, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %383 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 540), int8] */, dtype="int8") /* ty=Tensor[(1, 540), int8] */;
  %384 = reshape(%381, newshape=[]) /* ty=uint32 */;
  %385 = reshape(%382, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %386 = reshape(%383, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %387 = @func_2049(%384, %385, %386) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %388 = cast(meta[relay.Constant][33] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %389 = reshape(%388, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %390 = @func_12682(%389) /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) */;
  %391 = logical_or(%377, %378) /* ty=Tensor[(12, 9, ?), bool] */;
  %392 = %379.0;
  %393 = %380.1;
  %394 = %387.1;
  %395 = %390.2;
  (%391, %392, %393, %394, %var_13157, %var_13158, meta[relay.Constant][32] /* ty=Tensor[(1, 540), int8] */, %395, meta[relay.Constant][33] /* ty=Tensor[(2880), float64] */)
}

def @func_7508() -> Tensor[(12, 9, 1), float64] {
  @func_3291() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_8997() -> Tensor[(12, 9, 1), float64] {
  %396 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %396.0
}

def @func_9529() -> (Tensor[(12, 9, 1), float64],) {
  %397 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %398 = %397.0;
  (%398,)
}

def @func_10777(%var_10757: Tensor[(9, 7, 5), uint16]) -> (Tensor[(9, 7, 5), bool], Tensor[(12, 9, 1), float64]) {
  %399 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 1, 5), uint16] */, dtype="bool") /* ty=Tensor[(9, 1, 5), bool] */;
  %400 = cast(%var_10757, dtype="bool") /* ty=Tensor[(9, 7, 5), bool] */;
  %401 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %402 = equal(%399, %400) /* ty=Tensor[(9, 7, 5), bool] */;
  %403 = %401.0;
  (%402, %403)
}

def @func_13734() -> Tensor[(12, 9, 11), float32] {
  %404 = @func_13340() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
  %404.0
}

def @func_4273() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  %405 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %406 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %407 = %405.0;
  %408 = %406.1;
  (%407, %408)
}

def @func_13903(%var_13900: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), bool], Tensor[(297), uint8]) {
  %409 = cast(%var_13900, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %410 = reshape(%409, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %411 = @func_8581(%410) /* ty=(Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) */;
  %412 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %413 = %411.3;
  (%412, %413, %var_13900)
}

def @func_11664() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 704), bool]) {
  %414 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %415 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %416 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
  %417 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %418 = %417.1;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %420 = cast(%418, dtype="bool") /* ty=Tensor[(704), bool] */;
  %421 = %414.2;
  %422 = %415.0;
  %423 = @func_6991() /* ty=Tensor[(12, 9, 1), float64] */;
  %424 = equal(%419, %420) /* ty=Tensor[(12, 9, 704), bool] */;
  (%421, %422, %423, %424)
}

def @func_11555(%var_11533: Tensor[(2, 14, 4), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(12, 9, 1), float64]) {
  %425 = cast(%var_11533, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
  %426 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %427 = exp(%425) /* ty=Tensor[(2, 14, 4), float64] */;
  %428 = %426.0;
  (%427, %428)
}

def @func_4242(%var_4223: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %429 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %430 = shape_of(%var_4223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_4223, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%431, %432) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_4689(%var_4676: Tensor[(24), float32]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) {
  %433 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %434 = cast(-2.63688f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %435 = cast(%var_4676, dtype="float32") /* ty=Tensor[(24), float32] */;
  %436 = reshape(%434, newshape=[]) /* ty=float32 */;
  %437 = reshape(%435, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %438 = %433.0;
  %439 = @func_2449(%436, %437) /* ty=Tensor[(2, 2, 6), float32] */;
  (%438, %439, -2.63688f /* ty=float32 */, %var_4676)
}

def @func_6505() -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
  %440 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %441 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %442 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %443 = %440.0;
  %444 = %441.0;
  (%442, %443, %444)
}

def @func_5305(%var_5296: float64) -> (Tensor[(1, 11, 2), bool],) {
  %445 = cast(%var_5296, dtype="bool") /* ty=bool */;
  %446 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(1, 11, 2), bool] */;
  %447 = less_equal(%445, %446) /* ty=Tensor[(1, 11, 2), bool] */;
  (%447,)
}

def @func_7131(%var_7088: uint64, %var_7102: Tensor[(4, 48), uint32]) -> (Tensor[(12, 9, ?), int64], Tensor[(12, 9, 1), float64], uint64, Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], Tensor[(4, 48), uint32], Tensor[(704), float32]) {
  %448 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %449 = %448.0;
  %450 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 9, 1), float64] */, dtype="int64") /* ty=Tensor[(12, 9, 1), int64] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="int64") /* ty=Tensor[(12, 9, 1), int64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %454 = cast(%var_7088, dtype="uint64") /* ty=uint64 */;
  %455 = reshape(%454, newshape=[]) /* ty=uint64 */;
  %456 = @func_4200(%455) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %457 = cast(%var_7088, dtype="uint32") /* ty=uint32 */;
  %458 = cast(%var_7102, dtype="uint32") /* ty=Tensor[(4, 48), uint32] */;
  %459 = reshape(%457, newshape=[]) /* ty=uint32 */;
  %460 = reshape(%458, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %461 = @func_4817(%459, %460) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %462 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %463 = left_shift(%452, %453) /* ty=Tensor[(12, 9, ?), int64] */;
  %464 = %456.3;
  %465 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  %466 = %461.1;
  %467 = %462.1;
  (%463, %464, %var_7088, %465, %466, %var_7102, %467)
}

def @func_9018() -> Tensor[(12, 9, 1), float64] {
  %468 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %468.0
}

def @func_8317() -> (Tensor[(12, 9, 11), float32],) {
  %469 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %470 = %469.0;
  (%470,)
}

def @func_10102() -> Tensor[(12, 9, 1), float64] {
  @func_9383() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_10377() -> (Tensor[(1296), uint64],) {
  %471 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %472 = %471.3;
  (%472,)
}

def @func_9111(%var_9101: Tensor[(150, 3), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) {
  %473 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
  %474 = cast(%var_9101, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
  %475 = cast(%var_9101, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
  %476 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %477 = reshape(%474, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %478 = reshape(%475, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
  %479 = reshape(%476, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
  %480 = @func_7793(%477, %478, %479) /* ty=(Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) */;
  %481 = %473.1;
  %482 = %480.1;
  (%481, %482, %var_9101, meta[relay.Constant][38] /* ty=Tensor[(6, 4), float32] */)
}

def @func_3681() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) {
  %483 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %484 = cast(meta[relay.Constant][39] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %485 = reshape(%484, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %486 = @func_3445(%485) /* ty=(Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %487 = %483.0;
  %488 = %486.2;
  (%487, %488, meta[relay.Constant][39] /* ty=Tensor[(704), float32] */)
}

def @func_13271() -> Tensor[(12, 9, ?), float32] {
  @func_3945() /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_11018() -> Tensor[(12, 9, 1), float64] {
  @func_6991() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_12389() -> (Tensor[(704), float32],) {
  %489 = @func_9724() /* ty=(Tensor[(704), float32],) */;
  %490 = %489.0;
  (%490,)
}

def @func_13201() -> (Tensor[(12, 9, 1), float64],) {
  %491 = @func_8259() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %492 = %491.1;
  (%492,)
}

def @func_11986() -> Tensor[(12, 9, 1), float64] {
  %493 = @func_8484() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %493.0
}

def @func_3945() -> Tensor[(12, 9, ?), float32] {
  %494 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %497 = sin(%496) /* ty=Tensor[(12, 9, 1), float64] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %499 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%495, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%500, %501) /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_6029(%var_5991: float32) -> (Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 24), int8], Tensor[(24), float64], Tensor[(704), float32], Tensor[(12, 9, 1), uint32]) {
  %502 = cast(%var_5991, dtype="float32") /* ty=float32 */;
  %503 = cast(meta[relay.Constant][40] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %504 = reshape(%502, newshape=[]) /* ty=float32 */;
  %505 = reshape(%503, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %506 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %507 = cast(meta[relay.Constant][40] /* ty=Tensor[(24), float32] */, dtype="int8") /* ty=Tensor[(24), int8] */;
  %508 = cast(%506, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
  %509 = @func_2449(%504, %505) /* ty=Tensor[(2, 2, 6), float32] */;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
  %511 = cast(meta[relay.Constant][41] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %512 = cast(%var_5991, dtype="uint8") /* ty=uint8 */;
  %513 = reshape(%510, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %514 = reshape(%511, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
  %515 = reshape(%512, newshape=[]) /* ty=uint8 */;
  %516 = @func_5579(%513, %514, %515) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
  %517 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
  %518 = maximum(%507, %508) /* ty=Tensor[(12, 9, 24), int8] */;
  %519 = %516.3;
  %520 = %517.2;
  (%509, %var_5991, %518, %519, meta[relay.Constant][41] /* ty=Tensor[(704), float32] */, %520)
}

def @func_10063(%var_10043: bool) -> (Tensor[(704), float32], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool]) {
  %521 = cast(%var_10043, dtype="bool") /* ty=bool */;
  %522 = cast(meta[relay.Constant][42] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
  %523 = reshape(%521, newshape=[]) /* ty=bool */;
  %524 = reshape(%522, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
  %525 = @func_5853(%523, %524) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
  %526 = @func_6083() /* ty=Tensor[(704), float32] */;
  %527 = %525.1;
  (%526, %527, %var_10043, meta[relay.Constant][42] /* ty=Tensor[(16), bool] */)
}

def @func_11214(%var_11170: Tensor[(450), float64], %var_11206: float32) -> (Tensor[(6, 4), float32], Tensor[(450), float64], Tensor[(12, 9, 704), bool], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 1), float64]) {
  %528 = cast(%var_11170, dtype="float64") /* ty=Tensor[(450), float64] */;
  %529 = reshape(%528, newshape=[150, 3]) /* ty=Tensor[(150, 3), float64] */;
  %530 = @func_9111(%529) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) */;
  %531 = @func_8146() /* ty=Tensor[(12, 9, 704), float64] */;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(12, 9, 704), float32] */;
  %533 = tan(%532) /* ty=Tensor[(12, 9, 704), float32] */;
  %534 = @func_10832() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %535 = %534.0;
  %536 = cast(%533, dtype="bool") /* ty=Tensor[(12, 9, 704), bool] */;
  %537 = cast(%535, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %538 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %539 = cast(%var_11206, dtype="float32") /* ty=float32 */;
  %540 = %530.3;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
  %542 = reshape(%539, newshape=[]) /* ty=float32 */;
  %543 = reshape(%541, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %544 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %545 = greater(%536, %537) /* ty=Tensor[(12, 9, 704), bool] */;
  %546 = %538.0;
  %547 = @func_2449(%542, %543) /* ty=Tensor[(2, 2, 6), float32] */;
  %548 = %544.0;
  (%540, %var_11170, %545, %546, %547, %var_11206, %548)
}

def @func_11742() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
  %549 = @func_11014() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */;
  %550 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  %551 = %549.1;
  (%550, %551)
}

def @func_7584() -> (Tensor[(12, 9, 1), float64],) {
  %552 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%552,)
}

def @func_10569() -> (Tensor[(704), float32],) {
  %553 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %554 = %553.0;
  (%554,)
}

def @func_4610(%var_4598: Tensor[(8, 1, 3), float64]) -> (Tensor[(8, 1, 3), float64],) {
  %555 = cast(%var_4598, dtype="float64") /* ty=Tensor[(8, 1, 3), float64] */;
  %556 = cos(%555) /* ty=Tensor[(8, 1, 3), float64] */;
  (%556,)
}

def @func_8076() -> (Tensor[(12, 9, 11), float32],) {
  %557 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %558 = %557.0;
  (%558,)
}

def @func_521(%var_490: Tensor[(2, 7, 16), float64], %var_497: Tensor[(12, 108), uint64]) -> (Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) {
  %559 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %560 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_490, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %564 = cast(%var_497, dtype="uint64") /* ty=Tensor[(12, 108), uint64] */;
  %565 = reshape(%563, newshape=[]) /* ty=uint64 */;
  %566 = reshape(%564, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %567 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %568 = cast(%var_497, dtype="float32") /* ty=Tensor[(12, 108), float32] */;
  %569 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %570 = cast(%var_497, dtype="uint64") /* ty=Tensor[(12, 108), uint64] */;
  %571 = reshape(%569, newshape=[]) /* ty=uint64 */;
  %572 = reshape(%570, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %573 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %574 = @func_417(%565, %566) /* ty=Tensor[(16, 9, 9), float32] */;
  %575 = cast(%574, dtype="uint64") /* ty=Tensor[(16, 9, 9), uint64] */;
  %576 = reshape(%573, newshape=[]) /* ty=uint64 */;
  %577 = reshape(%575, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %578 = floor_mod(%561, %562) /* ty=Tensor[(2, 7, 16), float64] */;
  %579 = divide(%567, %568) /* ty=Tensor[(12, 108), float32] */;
  %580 = @func_417(%571, %572) /* ty=Tensor[(16, 9, 9), float32] */;
  %581 = @func_417(%576, %577) /* ty=Tensor[(16, 9, 9), float32] */;
  (%578, %574, %579, %580, %581)
}

def @func_10080() -> Tensor[(12, 9, 1), float64] {
  %582 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %582.0
}

def @func_7937() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) {
  %583 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %584 = cast(meta[relay.Constant][45] /* ty=Tensor[(54, 2), float64] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %585 = reshape(%584, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
  %586 = @func_3745(%585) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) */;
  %587 = cast(meta[relay.Constant][46] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %588 = reshape(%587, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), float64] */;
  %589 = @func_6614(%588) /* ty=(Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) */;
  %590 = %583.0;
  %591 = %586.2;
  %592 = %589.8;
  (%590, %591, meta[relay.Constant][45] /* ty=Tensor[(54, 2), float64] */, %592, meta[relay.Constant][46] /* ty=Tensor[(216), float64] */)
}

def @func_6406() -> (Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) {
  %593 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %594 = cast(-8.02695f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %595 = reshape(%594, newshape=[]) /* ty=float64 */;
  %596 = @func_5305(%595) /* ty=(Tensor[(1, 11, 2), bool],) */;
  %597 = %593.0;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(704), float32] */;
  %599 = reshape(%598, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %600 = @func_4973(%599) /* ty=(Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
  %601 = %596.0;
  %602 = %600.0;
  (%597, %601, -8.02695f64 /* ty=float64 */, %602)
}

def @func_11248() -> (Tensor[(12, 9, 1), float64],) {
  %603 = @func_9018() /* ty=Tensor[(12, 9, 1), float64] */;
  (%603,)
}

def @func_4504(%var_4480: uint8, %var_4481: Tensor[(4, 2, 1), uint8]) -> (Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) {
  %604 = cast(%var_4480, dtype="uint8") /* ty=uint8 */;
  %605 = cast(%var_4481, dtype="uint8") /* ty=Tensor[(4, 2, 1), uint8] */;
  %606 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %607 = bitwise_or(%604, %605) /* ty=Tensor[(4, 2, 1), uint8] */;
  %608 = %606.0;
  (%607, %608)
}

def @func_12096() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) {
  %609 = @func_9529() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %610 = @func_6406() /* ty=(Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) */;
  %611 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  %612 = %609.0;
  %613 = %610.1;
  %614 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  (%611, %612, %613, %614)
}

def @func_13070() -> (Tensor[(1296), uint64],) {
  %615 = @func_10377() /* ty=(Tensor[(1296), uint64],) */;
  %616 = %615.0;
  (%616,)
}

def @func_10979() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %617 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %618 = @func_9383() /* ty=Tensor[(12, 9, 1), float64] */;
  %619 = %617.0;
  (%618, %619)
}

def @func_12844(%var_12786: int16, %var_12787: Tensor[(16, 16, 13), int16]) -> (Tensor[(16, 16, 13), int16], Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], Tensor[(10, 910), bool], Tensor[(12, 9, ?), float32], Tensor[(10, 910), float64]) {
  %620 = cast(%var_12786, dtype="int16") /* ty=int16 */;
  %621 = cast(%var_12787, dtype="int16") /* ty=Tensor[(16, 16, 13), int16] */;
  %622 = @func_7584() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %623 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 910), float64] */, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
  %624 = reshape(%623, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %625 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 910), float64] */, dtype="bool") /* ty=Tensor[(1, 910), bool] */;
  %626 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 910), float64] */, dtype="bool") /* ty=Tensor[(10, 910), bool] */;
  %627 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %628 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 910), float64] */, dtype="float64") /* ty=Tensor[(10, 910), float64] */;
  %629 = left_shift(%620, %621) /* ty=Tensor[(16, 16, 13), int16] */;
  %630 = %622.0;
  %631 = @func_4242(%624) /* ty=Tensor[(13, 5, 14), float64] */;
  %632 = greater_equal(%625, %626) /* ty=Tensor[(10, 910), bool] */;
  %633 = %627.0;
  %634 = asin(%628) /* ty=Tensor[(10, 910), float64] */;
  (%629, %630, %631, %632, %633, %634)
}

def @func_13361() -> (Tensor[(12, 9, 11), float32],) {
  %635 = @func_12170() /* ty=Tensor[(12, 9, 11), float32] */;
  (%635,)
}

def @func_11085() -> Tensor[(12, 9, 1), float64] {
  %636 = @func_8484() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %636.0
}

def @func_5737(%var_5673: Tensor[(704), float32], %var_5718: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(704), uint16], Tensor[(12, 9, 1), float64], uint32, uint32, Tensor[(540), int8]) {
  %637 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %638 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %639 = %638.1;
  %640 = cast(%var_5673, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %641 = shape_of(%639, dtype="int32") /* ty=Tensor[(1), int32] */;
  %642 = cast(%639, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %644 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %645 = cast(%var_5718, dtype="uint32") /* ty=uint32 */;
  %646 = cast(meta[relay.Constant][49] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %647 = reshape(%645, newshape=[]) /* ty=uint32 */;
  %648 = reshape(%646, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
  %649 = @func_5054(%647, %648) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %650 = %637.0;
  %651 = add(%642, %643) /* ty=Tensor[(704), uint16] */;
  %652 = %644.0;
  %653 = %649.2;
  (%650, %651, %652, %653, %var_5718, meta[relay.Constant][49] /* ty=Tensor[(540), int8] */)
}

def @func_3120() -> (Tensor[(12, 9, 1), float64],) {
  %654 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %655 = rsqrt(%654) /* ty=Tensor[(12, 9, 1), float64] */;
  (%655,)
}

def @func_8484() -> (Tensor[(12, 9, 1), float64],) {
  %656 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  (%656,)
}

def @func_3491(%var_3475: Tensor[(704), float32]) -> (Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %657 = cast(%var_3475, dtype="float32") /* ty=Tensor[(704), float32] */;
  %658 = reshape(%657, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
  %659 = @func_3297() /* ty=Tensor[(10), int16] */;
  %660 = @func_1079(%658) /* ty=Tensor[(8, 11, 8), float32] */;
  (%659, %660, %var_3475)
}

def @func_10211() -> (Tensor[(12, 9, 1), float64],) {
  %661 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %662 = %661.0;
  (%662,)
}

def @func_9473(%var_9456: Tensor[(1, 24), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) {
  %663 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %664 = cast(meta[relay.Constant][51] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %665 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %666 = reshape(%664, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %667 = reshape(%665, newshape=[]) /* ty=uint8 */;
  %668 = @func_5437(%666, %667) /* ty=(Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) */;
  %669 = cast(meta[relay.Constant][53] /* ty=Tensor[(910), float64] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %670 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(910), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %671 = cast(meta[relay.Constant][51] /* ty=Tensor[(910), float64] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %673 = cast(meta[relay.Constant][54] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %674 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %675 = cast(meta[relay.Constant][55] /* ty=Tensor[(270, 2), int8] */, dtype="int8") /* ty=Tensor[(270, 2), int8] */;
  %676 = reshape(%673, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %677 = reshape(%674, newshape=[]) /* ty=uint32 */;
  %678 = reshape(%675, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %679 = @func_6890(%676, %677, %678) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) */;
  %680 = cast(%var_9456, dtype="float64") /* ty=Tensor[(1, 24), float64] */;
  %681 = cast(meta[relay.Constant][54] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %682 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %683 = reshape(%680, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %684 = reshape(%681, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
  %685 = reshape(%682, newshape=[]) /* ty=uint8 */;
  %686 = @func_5579(%683, %684, %685) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
  %687 = %686.5;
  %688 = cast(meta[relay.Constant][55] /* ty=Tensor[(270, 2), int8] */, dtype="uint8") /* ty=Tensor[(270, 2), uint8] */;
  %689 = cast(%687, dtype="uint8") /* ty=uint8 */;
  %690 = %663.2;
  %691 = %668.0;
  %692 = minimum(%671, %672) /* ty=Tensor[(910), uint16] */;
  %693 = %679.3;
  %694 = bitwise_xor(%688, %689) /* ty=Tensor[(270, 2), uint8] */;
  (%690, %691, meta[relay.Constant][52] /* ty=uint8 */, %692, %693, meta[relay.Constant][54] /* ty=Tensor[(704), float32] */, %var_9456, %694)
}

def @func_12575(%var_12570: Tensor[(704), float32]) -> (Tensor[(704), uint8],) {
  %695 = @func_10569() /* ty=(Tensor[(704), float32],) */;
  %696 = %695.0;
  %697 = cast(%var_12570, dtype="uint8") /* ty=Tensor[(704), uint8] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(1), int32] */;
  %699 = cast(%696, dtype="uint8") /* ty=Tensor[(704), uint8] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %701 = subtract(%699, %700) /* ty=Tensor[(704), uint8] */;
  (%701,)
}

def @func_6823(%var_6751: Tensor[(12, 9, 1), float32], %var_6797: bool) -> (Tensor[(12, 9, ?), bool], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool], Tensor[(16, 7, 15), float32], Tensor[(1680), float32], Tensor[(12, 9, 704), uint32]) {
  %702 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %705 = sigmoid(%704) /* ty=Tensor[(12, 9, 1), float32] */;
  %706 = cast(%var_6751, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%705, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %710 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %711 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %712 = cast(%var_6797, dtype="bool") /* ty=bool */;
  %713 = cast(meta[relay.Constant][56] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
  %714 = reshape(%712, newshape=[]) /* ty=bool */;
  %715 = reshape(%713, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
  %716 = @func_5853(%714, %715) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
  %717 = cast(%var_6797, dtype="float32") /* ty=float32 */;
  %718 = cast(meta[relay.Constant][57] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %719 = reshape(%717, newshape=[]) /* ty=float32 */;
  %720 = reshape(%718, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), float32] */;
  %721 = @func_2959(%719, %720) /* ty=(Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) */;
  %722 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %723 = %722.0;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(704), float32] */;
  %725 = sqrt(%724) /* ty=Tensor[(704), float32] */;
  %726 = cast(%703, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
  %727 = cast(%725, dtype="uint32") /* ty=Tensor[(704), uint32] */;
  %728 = greater(%708, %709) /* ty=Tensor[(12, 9, ?), bool] */;
  %729 = %710.1;
  %730 = %711.0;
  %731 = %716.1;
  %732 = %721.0;
  %733 = bitwise_or(%726, %727) /* ty=Tensor[(12, 9, 704), uint32] */;
  (%728, %729, %730, %731, %var_6797, meta[relay.Constant][56] /* ty=Tensor[(16), bool] */, %732, meta[relay.Constant][57] /* ty=Tensor[(1680), float32] */, %733)
}

def @func_12438() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), float32]) {
  %734 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %735 = @func_11014() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */;
  %736 = %735.0;
  %737 = @func_10586() /* ty=Tensor[(12, 9, 1), float64] */;
  %738 = cast(%736, dtype="float64") /* ty=Tensor[(704), float64] */;
  %739 = cast(%737, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %740 = floor_divide(%738, %739) /* ty=Tensor[(12, 9, 704), float64] */;
  %741 = cast(%740, dtype="float32") /* ty=Tensor[(12, 9, 704), float32] */;
  %742 = cast(%737, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %743 = %734.0;
  %744 = divide(%741, %742) /* ty=Tensor[(12, 9, 704), float32] */;
  (%743, %744)
}

def @func_8146() -> Tensor[(12, 9, 704), float64] {
  %745 = @func_4593() /* ty=(Tensor[(704), float32],) */;
  %746 = %745.0;
  %747 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
  %748 = cast(%746, dtype="float64") /* ty=Tensor[(704), float64] */;
  %749 = cast(%747, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  maximum(%748, %749) /* ty=Tensor[(12, 9, 704), float64] */
}

def @func_10615() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), bool]) {
  %750 = @func_8076() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %751 = %750.0;
  %752 = @func_9171() /* ty=Tensor[(12, 9, 704), bool] */;
  (%751, %752)
}

def @func_8259() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %753 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %754 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %755 = %753.0;
  %756 = %754.0;
  (%755, %756)
}

def @func_12506(%var_12491: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) {
  %757 = cast(%var_12491, dtype="uint32") /* ty=uint32 */;
  %758 = cast(meta[relay.Constant][58] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %759 = reshape(%757, newshape=[]) /* ty=uint32 */;
  %760 = reshape(%758, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %761 = @func_4817(%759, %760) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %762 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
  %763 = %761.0;
  (%762, %763, %var_12491, meta[relay.Constant][58] /* ty=Tensor[(192), uint32] */)
}

def @func_5579(%var_5517: Tensor[(24), float64], %var_5531: Tensor[(1, 704), float32], %var_5547: uint8) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) {
  %764 = cast(%var_5517, dtype="float64") /* ty=Tensor[(24), float64] */;
  %765 = reshape(%764, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), float64] */;
  %766 = @func_4610(%765) /* ty=(Tensor[(8, 1, 3), float64],) */;
  %767 = cast(%var_5531, dtype="float32") /* ty=Tensor[(1, 704), float32] */;
  %768 = reshape(%767, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %769 = @func_3491(%768) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %770 = cast(%var_5547, dtype="uint8") /* ty=uint8 */;
  %771 = cast(meta[relay.Constant][59] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %772 = reshape(%770, newshape=[]) /* ty=uint8 */;
  %773 = reshape(%771, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %774 = @func_4504(%772, %773) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %775 = %774.0;
  %776 = cast(%var_5531, dtype="uint64") /* ty=Tensor[(1, 704), uint64] */;
  %777 = cast(%775, dtype="uint64") /* ty=Tensor[(4, 2, 1), uint64] */;
  %778 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %779 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %780 = %766.0;
  %781 = %769.0;
  %782 = bitwise_and(%776, %777) /* ty=Tensor[(4, 2, 704), uint64] */;
  (%778, %779, %780, %var_5517, %781, %var_5547, meta[relay.Constant][59] /* ty=Tensor[(8), uint8] */, %782)
}

def @func_4002() -> (Tensor[(12, 9, 1), float64],) {
  %783 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%783,)
}

def @func_4817(%var_4797: uint32, %var_4798: Tensor[(24, 8), uint32]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) {
  %784 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %785 = cast(%var_4797, dtype="uint32") /* ty=uint32 */;
  %786 = cast(%var_4798, dtype="uint32") /* ty=Tensor[(24, 8), uint32] */;
  %787 = cast(meta[relay.Constant][60] /* ty=Tensor[(54, 10), int8] */, dtype="int8") /* ty=Tensor[(54, 10), int8] */;
  %788 = reshape(%785, newshape=[]) /* ty=uint32 */;
  %789 = reshape(%786, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %790 = reshape(%787, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %791 = @func_2049(%788, %789, %790) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %792 = %784.0;
  %793 = %791.2;
  (%792, %793, %var_4797, %var_4798, meta[relay.Constant][60] /* ty=Tensor[(54, 10), int8] */)
}

def @func_3210() -> (Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) {
  %794 = cast(meta[relay.Constant][61] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %795 = cast(meta[relay.Constant][62] /* ty=Tensor[(10), int16] */, dtype="int16") /* ty=Tensor[(10), int16] */;
  %796 = reshape(%794, newshape=[]) /* ty=int16 */;
  %797 = reshape(%795, newshape=[1, 10, 1]) /* ty=Tensor[(1, 10, 1), int16] */;
  %798 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
  %801 = cast(meta[relay.Constant][61] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %802 = @func_1687(%796, %797) /* ty=Tensor[(1, 10, 1), int16] */;
  %803 = add(%800, %801) /* ty=Tensor[(12, 9, 1), uint32] */;
  (%802, meta[relay.Constant][62] /* ty=Tensor[(10), int16] */, %803)
}

def @func_9171() -> Tensor[(12, 9, 704), bool] {
  %804 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  %805 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %806 = %805.0;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %808 = cast(%806, dtype="bool") /* ty=Tensor[(704), bool] */;
  greater_equal(%807, %808) /* ty=Tensor[(12, 9, 704), bool] */
}

def @func_7551() -> (Tensor[(12, 9, 11), float32],) {
  %809 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %810 = %809.0;
  (%810,)
}

def @func_3291() -> Tensor[(12, 9, 1), float64] {
  %811 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %811.0
}

def @func_10552() -> (Tensor[(12, 9, 1), float64],) {
  %812 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %813 = %812.0;
  (%813,)
}

def @func_6083() -> Tensor[(704), float32] {
  %814 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %814.1
}

def @func_10832() -> (Tensor[(12, 9, 1), float64],) {
  %815 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %816 = %815.0;
  (%816,)
}

def @func_5437(%var_5379: Tensor[(910), float64], %var_5431: uint8) -> (Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) {
  %817 = cast(%var_5379, dtype="float64") /* ty=Tensor[(910), float64] */;
  %818 = reshape(%817, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %819 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %820 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %823 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%819, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %826 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %827 = cast(%var_5431, dtype="uint8") /* ty=uint8 */;
  %828 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 1), uint8] */, dtype="uint8") /* ty=Tensor[(8, 1), uint8] */;
  %829 = reshape(%827, newshape=[]) /* ty=uint8 */;
  %830 = reshape(%828, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %831 = @func_4504(%829, %830) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %832 = @func_4242(%818) /* ty=Tensor[(13, 5, 14), float64] */;
  %833 = divide(%824, %825) /* ty=Tensor[(12, 9, ?), float64] */;
  %834 = %826.0;
  %835 = %831.1;
  (%832, %var_5379, %833, %834, %835, %var_5431, meta[relay.Constant][63] /* ty=Tensor[(8, 1), uint8] */)
}

def @func_4419() -> (Tensor[(12, 9, 11), float32],) {
  %836 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %837 = %836.0;
  %838 = cast(%837, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %839 = cast(meta[relay.Constant][64] /* ty=Tensor[(12, 9, 11), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %840 = floor_divide(%838, %839) /* ty=Tensor[(12, 9, 11), float32] */;
  (%840,)
}

def @func_13705() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) {
  %841 = @func_12389() /* ty=(Tensor[(704), float32],) */;
  %842 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %843 = @func_10512() /* ty=(uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) */;
  %844 = %841.0;
  %845 = %842.0;
  %846 = %843.1;
  (%844, %845, %846)
}

def @func_12170() -> Tensor[(12, 9, 11), float32] {
  %847 = @func_12096() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) */;
  %847.0
}

def @func_4358() -> (Tensor[(704), float32],) {
  %848 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %849 = %848.1;
  (%849,)
}

def @func_1079(%var_1067: Tensor[(8, 11, 8), float32]) -> Tensor[(8, 11, 8), float32] {
  %850 = cast(%var_1067, dtype="float32") /* ty=Tensor[(8, 11, 8), float32] */;
  log2(%850) /* ty=Tensor[(8, 11, 8), float32] */
}

def @func_9252(%var_9245: Tensor[(1, 10, 4), float32]) -> (Tensor[(1, 10, 4), float32], Tensor[(12, 9, 1), float64]) {
  %851 = cast(%var_9245, dtype="float32") /* ty=Tensor[(1, 10, 4), float32] */;
  %852 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %853 = atanh(%851) /* ty=Tensor[(1, 10, 4), float32] */;
  %854 = %852.0;
  (%853, %854)
}

def @func_1101(%var_1096: Tensor[(3, 9, 11), uint8]) -> Tensor[(3, 9, 11), uint8] {
  %855 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(3, 9, 11), uint8] */;
  %856 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(3, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 9, 11), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 11), uint8] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%857, %858) /* ty=Tensor[(3, 9, 11), uint8] */
}

def @func_3745(%var_3717: Tensor[(12, 9, 1), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) {
  %859 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %862 = cast(%var_3717, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %863 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%860, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %866 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %867 = atan(%861) /* ty=Tensor[(12, 9, 1), float64] */;
  %868 = logical_xor(%864, %865) /* ty=Tensor[(12, 9, ?), uint8] */;
  %869 = %866.0;
  %870 = @func_3297() /* ty=Tensor[(10), int16] */;
  (%867, %868, %869, %870)
}

def @func_9724() -> (Tensor[(704), float32],) {
  %871 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %872 = %871.0;
  (%872,)
}

def @func_9279(%var_9276: float64) -> (Tensor[(1296), uint64], Tensor[(1, 11, 2), bool], float64) {
  %873 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %874 = cast(%var_9276, dtype="float64") /* ty=float64 */;
  %875 = reshape(%874, newshape=[]) /* ty=float64 */;
  %876 = @func_5305(%875) /* ty=(Tensor[(1, 11, 2), bool],) */;
  %877 = %873.3;
  %878 = %876.0;
  (%877, %878, %var_9276)
}

def @func_7875() -> (Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) {
  %879 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %880 = %879.0;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %882 = cast(meta[relay.Constant][66] /* ty=Tensor[(12, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %883 = divide(%881, %882) /* ty=Tensor[(12, 9, 16), float32] */;
  %884 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  (%883, %884)
}

def @func_13632() -> (float32,) {
  %885 = @func_9334() /* ty=(Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
  %886 = %885.3;
  (%886,)
}

def @func_8372(%var_8345: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(2, 2, 6), float32]) {
  %887 = cast(%var_8345, dtype="float32") /* ty=float32 */;
  %888 = cast(meta[relay.Constant][67] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %889 = reshape(%887, newshape=[]) /* ty=float32 */;
  %890 = reshape(%888, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %891 = @func_2449(%889, %890) /* ty=Tensor[(2, 2, 6), float32] */;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  %893 = cast(%var_8345, dtype="float32") /* ty=float32 */;
  %894 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  %895 = divide(%892, %893) /* ty=Tensor[(2, 2, 6), float32] */;
  (%894, meta[relay.Constant][67] /* ty=Tensor[(24), float32] */, %895)
}

def @func_4306() -> (Tensor[(12, 9, 1), float64],) {
  %896 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %897 = %896.0;
  (%897,)
}

def @func_10350(%var_10304: uint64, %var_10311: Tensor[(540), int8], %var_10314: Tensor[(1, 1296), uint64]) -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(10), int16], uint64, Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint16], Tensor[(540), int8], Tensor[(16, 9, 9), float32], Tensor[(1, 1296), uint64], Tensor[(704), float32], Tensor[(910), float64], Tensor[(297), uint8]) {
  %898 = @func_9622() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %899 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %900 = cast(%var_10304, dtype="uint64") /* ty=uint64 */;
  %901 = reshape(%900, newshape=[]) /* ty=uint64 */;
  %902 = @func_4200(%901) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %903 = cast(meta[relay.Constant][68] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %904 = cast(%var_10311, dtype="int8") /* ty=Tensor[(540), int8] */;
  %905 = reshape(%903, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %906 = reshape(%904, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %907 = @func_8880(%905, %906) /* ty=(Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) */;
  %908 = cast(%var_10304, dtype="uint64") /* ty=uint64 */;
  %909 = cast(%var_10314, dtype="uint64") /* ty=Tensor[(1, 1296), uint64] */;
  %910 = reshape(%908, newshape=[]) /* ty=uint64 */;
  %911 = reshape(%909, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %912 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %913 = cast(meta[relay.Constant][69] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %914 = cast(%var_10304, dtype="uint8") /* ty=uint8 */;
  %915 = reshape(%913, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %916 = reshape(%914, newshape=[]) /* ty=uint8 */;
  %917 = @func_5437(%915, %916) /* ty=(Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) */;
  %918 = %917.5;
  %919 = cast(%918, dtype="uint8") /* ty=uint8 */;
  %920 = cast(meta[relay.Constant][68] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %921 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %922 = %898.0;
  %923 = %899.0;
  %924 = %902.7;
  %925 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %926 = %907.4;
  %927 = @func_417(%910, %911) /* ty=Tensor[(16, 9, 9), float32] */;
  %928 = %912.2;
  %929 = multiply(%919, %920) /* ty=Tensor[(297), uint8] */;
  (%921, %922, %923, %924, %var_10304, %925, %926, %var_10311, %927, %var_10314, %928, meta[relay.Constant][69] /* ty=Tensor[(910), float64] */, %929)
}

def @func_8581(%var_8545: Tensor[(297), uint8]) -> (Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) {
  %930 = cast(meta[relay.Constant][70] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %931 = reshape(%930, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %932 = @func_4973(%931) /* ty=(Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
  %933 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %936 = cos(%935) /* ty=Tensor[(12, 9, 16), float32] */;
  %937 = cast(%936, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
  %938 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%934, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %941 = cast(meta[relay.Constant][70] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %942 = reshape(%941, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %943 = cast(%var_8545, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %944 = cast(meta[relay.Constant][71] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %945 = reshape(%943, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %946 = reshape(%944, newshape=[]) /* ty=uint64 */;
  %947 = @func_1254(%945, %946) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %948 = %947.4;
  %949 = cast(%948, dtype="uint32") /* ty=uint32 */;
  %950 = %932.1;
  %951 = cast(%950, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
  %952 = reshape(%949, newshape=[]) /* ty=uint32 */;
  %953 = reshape(%951, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
  %954 = @func_5054(%952, %953) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %955 = not_equal(%939, %940) /* ty=Tensor[(12, 9, 16), bool] */;
  %956 = @func_7331(%942) /* ty=Tensor[(704), bool] */;
  %957 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
  %958 = %954.0;
  (%950, meta[relay.Constant][70] /* ty=Tensor[(704), float32] */, %955, %956, %957, %948, %var_8545, meta[relay.Constant][71] /* ty=uint64 */, %958)
}

def @func_12113() -> Tensor[(12, 9, 1), float64] {
  %959 = @func_8997() /* ty=Tensor[(12, 9, 1), float64] */;
  %960 = cast(%959, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  exp(%960) /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_12541() -> Tensor[(12, 9, 1), float64] {
  %961 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %961.0
}

def @func_6890(%var_6872: Tensor[(704), float32], %var_6884: uint32, %var_6886: Tensor[(540), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) {
  %962 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %963 = cast(meta[relay.Constant][72] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %964 = reshape(%963, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %965 = @func_4689(%964) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) */;
  %966 = cast(meta[relay.Constant][72] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %967 = rsqrt(%966) /* ty=Tensor[(24, 1), float32] */;
  %968 = cast(%967, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
  %969 = @func_6083() /* ty=Tensor[(704), float32] */;
  %970 = cast(%var_6872, dtype="uint8") /* ty=Tensor[(704), uint8] */;
  %971 = shape_of(%969, dtype="int32") /* ty=Tensor[(1), int32] */;
  %972 = cast(%969, dtype="uint8") /* ty=Tensor[(704), uint8] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %974 = cast(%var_6884, dtype="uint32") /* ty=uint32 */;
  %975 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 96), uint32] */, dtype="uint32") /* ty=Tensor[(2, 96), uint32] */;
  %976 = cast(%var_6886, dtype="int8") /* ty=Tensor[(540), int8] */;
  %977 = reshape(%974, newshape=[]) /* ty=uint32 */;
  %978 = reshape(%975, newshape=[192]) /* ty=Tensor[(192), uint32] */;
  %979 = reshape(%976, newshape=[540, 1]) /* ty=Tensor[(540, 1), int8] */;
  %980 = @func_3836(%977, %978, %979) /* ty=(Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) */;
  %981 = %962.0;
  %982 = %965.3;
  %983 = atan(%968) /* ty=Tensor[(24, 1), float64] */;
  %984 = logical_xor(%972, %973) /* ty=Tensor[(704), uint8] */;
  %985 = %980.2;
  (%981, %982, %983, %984, %985, %var_6884, meta[relay.Constant][73] /* ty=Tensor[(2, 96), uint32] */, %var_6886)
}

def @func_9586() -> (Tensor[(12, 9, 1), float64],) {
  %986 = @func_9529() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %987 = %986.0;
  (%987,)
}

def @func_6328() -> (Tensor[(704), float32],) {
  %988 = @func_4593() /* ty=(Tensor[(704), float32],) */;
  %989 = %988.0;
  (%989,)
}

def @func_8724() -> (Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) {
  %990 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %991 = cast(meta[relay.Constant][74] /* ty=Tensor[(112, 2), float64] */, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %992 = cast(meta[relay.Constant][75] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %993 = reshape(%991, newshape=[2, 7, 16]) /* ty=Tensor[(2, 7, 16), float64] */;
  %994 = reshape(%992, newshape=[12, 108]) /* ty=Tensor[(12, 108), uint64] */;
  %995 = @func_521(%993, %994) /* ty=(Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) */;
  %996 = cast(meta[relay.Constant][76] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %997 = %995.1;
  %998 = cast(%997, dtype="uint64") /* ty=Tensor[(16, 9, 9), uint64] */;
  %999 = reshape(%996, newshape=[]) /* ty=uint64 */;
  %1000 = reshape(%998, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %1001 = %990.0;
  %1002 = @func_417(%999, %1000) /* ty=Tensor[(16, 9, 9), float32] */;
  (%1001, %997, meta[relay.Constant][74] /* ty=Tensor[(112, 2), float64] */, meta[relay.Constant][75] /* ty=Tensor[(1296), uint64] */, %1002, meta[relay.Constant][76] /* ty=uint64 */)
}

def @func_12284(%var_12245: uint64) -> (Tensor[(1, 11, 2), bool], Tensor[(704), float32], uint64, Tensor[(12, 9, 11), float32]) {
  %1003 = @func_12096() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) */;
  %1004 = cast(%var_12245, dtype="uint64") /* ty=uint64 */;
  %1005 = reshape(%1004, newshape=[]) /* ty=uint64 */;
  %1006 = @func_4200(%1005) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %1007 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1008 = %1003.2;
  %1009 = %1006.0;
  %1010 = %1007.0;
  (%1008, %1009, %var_12245, %1010)
}

def @func_4200(%var_4187: uint64) -> (Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) {
  %1011 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %1012 = %1011.1;
  %1013 = cast(%1012, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1014 = reshape(%1013, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %1015 = @func_3491(%1014) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %1016 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1017 = cast(%var_4187, dtype="uint64") /* ty=uint64 */;
  %1018 = cast(meta[relay.Constant][77] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %1019 = reshape(%1017, newshape=[]) /* ty=uint64 */;
  %1020 = reshape(%1018, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %1021 = cast(meta[relay.Constant][77] /* ty=Tensor[(1296), uint64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %1022 = %1015.2;
  %1023 = %1016.0;
  %1024 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %1025 = @func_417(%1019, %1020) /* ty=Tensor[(16, 9, 9), float32] */;
  %1026 = sigmoid(%1021) /* ty=Tensor[(1296), float64] */;
  %1027 = @func_3297() /* ty=Tensor[(10), int16] */;
  (%1012, %1022, %1023, %1024, %1025, %var_4187, %1026, %1027)
}

def @func_6614(%var_6571: Tensor[(12, 9, 2), float64]) -> (Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) {
  %1028 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1029 = %1028.0;
  %1030 = cast(%1029, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %1031 = cast(%var_6571, dtype="float64") /* ty=Tensor[(12, 9, 2), float64] */;
  %1032 = cast(meta[relay.Constant][78] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %1033 = reshape(%1032, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %1034 = cast(meta[relay.Constant][79] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %1035 = reshape(%1034, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %1036 = @func_2674(%1035) /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) */;
  %1037 = cast(meta[relay.Constant][80] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1038 = cast(meta[relay.Constant][81] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %1039 = reshape(%1037, newshape=[]) /* ty=uint32 */;
  %1040 = reshape(%1038, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
  %1041 = @func_5054(%1039, %1040) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %1042 = cast(meta[relay.Constant][80] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1043 = %1041.3;
  %1044 = cast(%1043, dtype="uint32") /* ty=Tensor[(96, 2), uint32] */;
  %1045 = reshape(%1042, newshape=[]) /* ty=uint32 */;
  %1046 = reshape(%1044, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %1047 = @func_4817(%1045, %1046) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %1048 = floor_divide(%1030, %1031) /* ty=Tensor[(12, 9, 2), float64] */;
  %1049 = @func_4242(%1033) /* ty=Tensor[(13, 5, 14), float64] */;
  %1050 = %1036.2;
  %1051 = %1047.0;
  (%1048, %1049, meta[relay.Constant][78] /* ty=Tensor[(910), float64] */, %1050, meta[relay.Constant][79] /* ty=Tensor[(297), uint8] */, %1043, meta[relay.Constant][80] /* ty=uint32 */, meta[relay.Constant][81] /* ty=Tensor[(540), int8] */, %1051)
}

def @func_12042(%var_12013: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24, 1), float32]) {
  %1052 = cast(%var_12013, dtype="float32") /* ty=float32 */;
  %1053 = cast(meta[relay.Constant][82] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %1054 = reshape(%1052, newshape=[]) /* ty=float32 */;
  %1055 = reshape(%1053, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %1056 = @func_9383() /* ty=Tensor[(12, 9, 1), float64] */;
  %1057 = @func_2449(%1054, %1055) /* ty=Tensor[(2, 2, 6), float32] */;
  (%1056, %1057, %var_12013, meta[relay.Constant][82] /* ty=Tensor[(24, 1), float32] */)
}

def @func_4973(%var_4959: Tensor[(704), float32]) -> (Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  %1058 = @func_4593() /* ty=(Tensor[(704), float32],) */;
  %1059 = %1058.0;
  %1060 = cast(%var_4959, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1062 = cast(%1059, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1064 = cast(meta[relay.Constant][83] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %1065 = reshape(%1064, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %1066 = @func_1466(%1065) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %1067 = divide(%1062, %1063) /* ty=Tensor[(704), float64] */;
  %1068 = %1066.0;
  (%1067, %1068, meta[relay.Constant][83] /* ty=Tensor[(540), int8] */)
}

def @func_12682(%var_12666: Tensor[(2880), float64]) -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) {
  %1069 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %1070 = cast(meta[relay.Constant][84] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1071 = cast(meta[relay.Constant][84] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1072 = cast(meta[relay.Constant][85] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %1073 = reshape(%1070, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float64] */;
  %1074 = reshape(%1071, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float64] */;
  %1075 = reshape(%1072, newshape=[1296]) /* ty=Tensor[(1296), uint64] */;
  %1076 = @func_7059(%1073, %1074, %1075) /* ty=(Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) */;
  %1077 = cast(meta[relay.Constant][84] /* ty=Tensor[(2880), float64] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1078 = cast(%var_12666, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %1079 = shape_of(meta[relay.Constant][84] /* ty=Tensor[(2880), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1080 = cast(meta[relay.Constant][84] /* ty=Tensor[(2880), float64] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1082 = %1069.0;
  %1083 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %1084 = %1076.0;
  %1085 = acosh(%1077) /* ty=Tensor[(2880), float32] */;
  %1086 = bitwise_xor(%1080, %1081) /* ty=Tensor[(2880), int32] */;
  (%1082, %1083, %1084, meta[relay.Constant][85] /* ty=Tensor[(1296), uint64] */, %1085, %1086)
}

def @func_8880(%var_8858: Tensor[(297), uint8], %var_8859: Tensor[(540), int8]) -> (Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) {
  %1087 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %1088 = cast(meta[relay.Constant][86] /* ty=Tensor[(12, 9, 1), float32] */, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
  %1089 = shape_of(%1087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%1087, dtype="uint32") /* ty=Tensor[(12, 9, ?), uint32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1092 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1093 = %1092.0;
  %1094 = cast(%1093, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %1095 = cast(%var_8858, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %1096 = cast(%var_8859, dtype="int8") /* ty=Tensor[(540), int8] */;
  %1097 = reshape(%1094, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
  %1098 = reshape(%1095, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %1099 = reshape(%1096, newshape=[18, 30]) /* ty=Tensor[(18, 30), int8] */;
  %1100 = @func_7263(%1097, %1098, %1099) /* ty=(Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) */;
  %1101 = %1100.1;
  %1102 = cast(meta[relay.Constant][86] /* ty=Tensor[(12, 9, 1), float32] */, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
  %1103 = shape_of(%1101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(%1101, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1106 = maximum(%1090, %1091) /* ty=Tensor[(12, 9, ?), uint32] */;
  %1107 = subtract(%1104, %1105) /* ty=Tensor[(12, 9, ?), uint16] */;
  (%1106, %1093, %var_8858, %var_8859, %1107)
}

def @func_6200(%var_6191: Tensor[(704), float32]) -> (Tensor[(704), float32], Tensor[(704), float32]) {
  %1108 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %1109 = %1108.2;
  %1110 = cast(%var_6191, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1111 = shape_of(%1109, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1112 = cast(%1109, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1114 = floor_divide(%1112, %1113) /* ty=Tensor[(704), float32] */;
  %1115 = @func_6083() /* ty=Tensor[(704), float32] */;
  (%1114, %1115)
}

def @func_10742() -> (Tensor[(704), float32], Tensor[(12, 9, 16), float32], Tensor[(12, 9, 1), float64]) {
  %1116 = @func_4593() /* ty=(Tensor[(704), float32],) */;
  %1117 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
  %1118 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1119 = %1116.0;
  %1120 = %1117.0;
  %1121 = %1118.0;
  (%1119, %1120, %1121)
}

def @func_13774() -> Tensor[(12, 9, 11), float32] {
  @func_12170() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_10919() -> (Tensor[(12, 9, 1), float64],) {
  %1122 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_12864() -> (Tensor[(4, 2, 1), uint8],) {
  %1124 = @func_10512() /* ty=(uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) */;
  %1125 = %1124.1;
  (%1125,)
}

def @func_13892(%var_13856: Tensor[(12, 9, 15), float64]) -> (Tensor[(12, 9, 15), bool],) {
  %1126 = @func_13705() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) */;
  %1127 = %1126.1;
  %1128 = cast(%1127, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %1129 = cast(%var_13856, dtype="bool") /* ty=Tensor[(12, 9, 15), bool] */;
  %1130 = less_equal(%1128, %1129) /* ty=Tensor[(12, 9, 15), bool] */;
  (%1130,)
}

def @func_10586() -> Tensor[(12, 9, 1), float64] {
  %1131 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1131.0
}

def @func_3800() -> Tensor[(12, 9, 1), float64] {
  %1132 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1132.0
}

def @func_11014() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
  %1133 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1134 = @func_6083() /* ty=Tensor[(704), float32] */;
  %1135 = %1133.0;
  (%1134, %1135)
}

def @func_6530(%var_6528: uint8) -> (Tensor[(704), float64], Tensor[(12, 9, 1), float64], Tensor[(24), float64], uint8) {
  %1136 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %1137 = %1136.0;
  %1138 = cast(%1137, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1139 = cast(meta[relay.Constant][87] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1140 = cast(%1137, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1141 = cast(%var_6528, dtype="uint8") /* ty=uint8 */;
  %1142 = reshape(%1139, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %1143 = reshape(%1140, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
  %1144 = reshape(%1141, newshape=[]) /* ty=uint8 */;
  %1145 = @func_5579(%1142, %1143, %1144) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
  %1146 = sigmoid(%1138) /* ty=Tensor[(704), float64] */;
  %1147 = %1145.1;
  (%1146, %1147, meta[relay.Constant][87] /* ty=Tensor[(24), float64] */, %var_6528)
}

def @func_11417() -> (Tensor[(12, 9, ?), float32],) {
  %1148 = @func_8824() /* ty=(Tensor[(12, 9, ?), float32],) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_4847() -> Tensor[(12, 9, 1), float64] {
  %1150 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %1150.0
}

def @func_13439() -> (Tensor[(704), bool], Tensor[(12, 9, 1), float64]) {
  %1151 = @func_9421() /* ty=(Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) */;
  %1152 = %1151.1;
  %1153 = @func_9724() /* ty=(Tensor[(704), float32],) */;
  %1154 = %1153.0;
  %1155 = cast(%1152, dtype="bool") /* ty=bool */;
  %1156 = cast(%1154, dtype="bool") /* ty=Tensor[(704), bool] */;
  %1157 = greater(%1155, %1156) /* ty=Tensor[(704), bool] */;
  %1158 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  (%1157, %1158)
}

def @func_9383() -> Tensor[(12, 9, 1), float64] {
  %1159 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %1159.2
}

def @func_7838(%var_7825: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64], Tensor[(704), float32]) {
  %1160 = cast(%var_7825, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
  %1161 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %1162 = sinh(%1160) /* ty=Tensor[(1, 15, 1), float64] */;
  %1163 = %1161.0;
  (%1162, %1163)
}

def @func_13340() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %1164 = @func_12750() /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) */;
  %1165 = @func_9986() /* ty=Tensor[(12, 9, 11), float32] */;
  %1166 = %1164.2;
  (%1165, %1166)
}

def @main(%var_13929: Tensor[(14, 12, 8), float64]) -> (Tensor[(704), float32], Tensor[(1, 10, 1), int16], Tensor[(14, 12, 8), float32]) {
  %1167 = @func_9724() /* ty=(Tensor[(704), float32],) */;
  %1168 = @func_10428() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) */;
  %1169 = cast(%var_13929, dtype="float64") /* ty=Tensor[(14, 12, 8), float64] */;
  %1170 = acos(%1169) /* ty=Tensor[(14, 12, 8), float64] */;
  %1171 = cast(%1170, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %1172 = %1167.0;
  %1173 = %1168.1;
  %1174 = log10(%1171) /* ty=Tensor[(14, 12, 8), float32] */;
  (%1172, %1173, %1174)
}

def @func_417(%var_376: uint64, %var_377: Tensor[(16, 9, 9), uint64]) -> Tensor[(16, 9, 9), float32] {
  %1175 = cast(%var_376, dtype="bool") /* ty=bool */;
  %1176 = cast(%var_377, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %1177 = greater(%1175, %1176) /* ty=Tensor[(16, 9, 9), bool] */;
  %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
  tan(%1178) /* ty=Tensor[(16, 9, 9), float32] */
}

def @func_4593() -> (Tensor[(704), float32],) {
  %1179 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %1180 = %1179.2;
  (%1180,)
}

def @func_3667() -> (Tensor[(12, 9, 1), float64],) {
  %1181 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_4079() -> (Tensor[(12, 9, 1), float64],) {
  %1183 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1184 = %1183.0;
  (%1184,)
}

def @func_3297() -> Tensor[(10), int16] {
  %1185 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
  %1185.1
}

def @func_9775(%var_9764: Tensor[(8, 7, 12), int32]) -> (Tensor[(8, 7, 12), int32], Tensor[(8, 1, 12), float32], Tensor[(12, 9, ?), float32]) {
  %1186 = cast(meta[relay.Constant][88] /* ty=Tensor[(8, 1, 12), int32] */, dtype="int32") /* ty=Tensor[(8, 1, 12), int32] */;
  %1187 = cast(%var_9764, dtype="int32") /* ty=Tensor[(8, 7, 12), int32] */;
  %1188 = cast(meta[relay.Constant][88] /* ty=Tensor[(8, 1, 12), int32] */, dtype="float32") /* ty=Tensor[(8, 1, 12), float32] */;
  %1189 = @func_8824() /* ty=(Tensor[(12, 9, ?), float32],) */;
  %1190 = bitwise_and(%1186, %1187) /* ty=Tensor[(8, 7, 12), int32] */;
  %1191 = cosh(%1188) /* ty=Tensor[(8, 1, 12), float32] */;
  %1192 = %1189.0;
  (%1190, %1191, %1192)
}

def @func_10428() -> (Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) {
  %1193 = @func_8259() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %1194 = cast(meta[relay.Constant][89] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1195 = cast(meta[relay.Constant][90] /* ty=Tensor[(5, 2), int16] */, dtype="int16") /* ty=Tensor[(5, 2), int16] */;
  %1196 = reshape(%1194, newshape=[]) /* ty=int16 */;
  %1197 = reshape(%1195, newshape=[1, 10, 1]) /* ty=Tensor[(1, 10, 1), int16] */;
  %1198 = %1193.0;
  %1199 = @func_1687(%1196, %1197) /* ty=Tensor[(1, 10, 1), int16] */;
  (%1198, %1199, meta[relay.Constant][89] /* ty=int16 */, meta[relay.Constant][90] /* ty=Tensor[(5, 2), int16] */)
}

def @func_11480() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %1200 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1201 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1202 = %1200.0;
  %1203 = %1201.0;
  %1204 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  (%1202, %1203, %1204)
}

def @func_12767(%var_12755: Tensor[(14, 10, 12), uint16], %var_12756: Tensor[(14, 10, 12), uint16], %var_12764: Tensor[(24), float32]) -> (Tensor[(14, 10, 12), uint16], Tensor[(297), uint8], Tensor[(24), float32], Tensor[(297), uint8]) {
  %1205 = cast(%var_12756, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
  %1206 = shape_of(%var_12755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%var_12755, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1209 = cast(%var_12764, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1210 = cast(meta[relay.Constant][91] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %1211 = reshape(%1209, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %1212 = reshape(%1210, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %1213 = @func_3633(%1211, %1212) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) */;
  %1214 = bitwise_or(%1207, %1208) /* ty=Tensor[(14, 10, 12), uint16] */;
  %1215 = %1213.8;
  (%1214, %1215, %var_12764, meta[relay.Constant][91] /* ty=Tensor[(297), uint8] */)
}

def @func_5763() -> (Tensor[(12, 9, 11), float32],) {
  %1216 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1217 = %1216.0;
  (%1217,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9588() -> (Tensor[(12, 9, 1), float64],) {
  @func_9586() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_3945() -> Tensor[(12, 9, ?), float32] {
  %0 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %3 = sin(%2) /* ty=Tensor[(12, 9, 1), float64] */;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %5 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%1, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%6, %7) /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_11250() -> (Tensor[(12, 9, 1), float64],) {
  @func_11248() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_3292() -> Tensor[(12, 9, 1), float64] {
  %9 = fn () -> Tensor[(12, 9, 1), float64] {
    %8 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %8.0
  };
  %9() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_13361() -> (Tensor[(12, 9, 11), float32],) {
  %10 = @func_12170() /* ty=Tensor[(12, 9, 11), float32] */;
  (%10,)
}

def @func_7334(%var_7332: Tensor[(704), float32]) -> Tensor[(704), bool] {
  @func_7331(%var_7332) /* ty=Tensor[(704), bool] */
}

def @func_3947() -> Tensor[(12, 9, ?), float32] {
  @func_3945() /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_12685(%var_12683: Tensor[(2880), float64]) -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) {
  @func_12682(%var_12683) /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) */
}

def @func_6694() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  %11 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %12 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %13 = %11.1;
  %14 = %12.0;
  (%13, %14)
}

def @func_12506(%var_12491: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) {
  %15 = cast(%var_12491, dtype="uint32") /* ty=uint32 */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %17 = reshape(%15, newshape=[]) /* ty=uint32 */;
  %18 = reshape(%16, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %19 = @func_4817(%17, %18) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %20 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
  %21 = %19.0;
  (%20, %21, %var_12491, meta[relay.Constant][0] /* ty=Tensor[(192), uint32] */)
}

def @func_6696() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */
}

def @func_6407() -> (Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) {
  %32 = fn () -> (Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) {
    %22 = @func_6328() /* ty=(Tensor[(704), float32],) */;
    %23 = cast(-8.02695f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %24 = reshape(%23, newshape=[]) /* ty=float64 */;
    %25 = @func_5305(%24) /* ty=(Tensor[(1, 11, 2), bool],) */;
    %26 = %22.0;
    %27 = cast(%26, dtype="float32") /* ty=Tensor[(704), float32] */;
    %28 = reshape(%27, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %29 = @func_4973(%28) /* ty=(Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
    %30 = %25.0;
    %31 = %29.0;
    (%26, %30, -8.02695f64 /* ty=float64 */, %31)
  };
  %32() /* ty=(Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) */
}

def @func_11555(%var_11533: Tensor[(2, 14, 4), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(12, 9, 1), float64]) {
  %33 = cast(%var_11533, dtype="float64") /* ty=Tensor[(2, 14, 4), float64] */;
  %34 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %35 = exp(%33) /* ty=Tensor[(2, 14, 4), float64] */;
  %36 = %34.0;
  (%35, %36)
}

def @func_2053(%var_2050: uint32, %var_2051: Tensor[(12, 1, 16), uint32], %var_2052: Tensor[(540), int8]) -> (Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) {
  %46 = fn (%var_2030: uint32, %var_2031: Tensor[(12, 1, 16), uint32], %var_2038: Tensor[(540), int8]) -> (Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) {
    %37 = cast(%var_2030, dtype="uint32") /* ty=uint32 */;
    %38 = cast(%var_2031, dtype="uint32") /* ty=Tensor[(12, 1, 16), uint32] */;
    %39 = cast(%var_2038, dtype="int8") /* ty=Tensor[(540), int8] */;
    %40 = reshape(%39, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
    %41 = @func_1466(%40) /* ty=(Tensor[(9, 4, 15), int8],) */;
    %42 = %41.0;
    %43 = cast(%42, dtype="float32") /* ty=Tensor[(9, 4, 15), float32] */;
    %44 = maximum(%37, %38) /* ty=Tensor[(12, 1, 16), uint32] */;
    %45 = acosh(%43) /* ty=Tensor[(9, 4, 15), float32] */;
    (%44, %var_2038, %45)
  };
  %46(%var_2050, %var_2051, %var_2052) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */
}

def @func_3297() -> Tensor[(10), int16] {
  %47 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
  %47.1
}

def @func_3840(%var_3837: uint32, %var_3838: Tensor[(192), uint32], %var_3839: Tensor[(540, 1), int8]) -> (Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) {
  %59 = fn (%var_3822: uint32, %var_3823: Tensor[(192), uint32], %var_3824: Tensor[(540, 1), int8]) -> (Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) {
    %48 = cast(%var_3822, dtype="uint32") /* ty=uint32 */;
    %49 = cast(%var_3823, dtype="uint32") /* ty=Tensor[(192), uint32] */;
    %50 = cast(%var_3824, dtype="int8") /* ty=Tensor[(540, 1), int8] */;
    %51 = reshape(%48, newshape=[]) /* ty=uint32 */;
    %52 = reshape(%49, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
    %53 = reshape(%50, newshape=[540]) /* ty=Tensor[(540), int8] */;
    %54 = @func_2049(%51, %52, %53) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
    %55 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
    %56 = @func_3297() /* ty=Tensor[(10), int16] */;
    %57 = %54.0;
    %58 = %55.1;
    (%56, %57, %var_3822, %var_3823, %var_3824, %58)
  };
  %59(%var_3837, %var_3838, %var_3839) /* ty=(Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) */
}

def @func_3682() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) {
  %66 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) {
    %60 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %61 = cast(meta[relay.Constant][1] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %62 = reshape(%61, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %63 = @func_3445(%62) /* ty=(Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %64 = %60.0;
    %65 = %63.2;
    (%64, %65, meta[relay.Constant][1] /* ty=Tensor[(704), float32] */)
  };
  %66() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */
}

def @func_7840(%var_7839: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64], Tensor[(704), float32]) {
  %71 = fn (%var_7825: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64], Tensor[(704), float32]) {
    %67 = cast(%var_7825, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
    %68 = @func_6328() /* ty=(Tensor[(704), float32],) */;
    %69 = sinh(%67) /* ty=Tensor[(1, 15, 1), float64] */;
    %70 = %68.0;
    (%69, %70)
  };
  %71(%var_7839) /* ty=(Tensor[(1, 15, 1), float64], Tensor[(704), float32]) */
}

def @func_3800() -> Tensor[(12, 9, 1), float64] {
  %72 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %72.0
}

def @func_7586() -> (Tensor[(12, 9, 1), float64],) {
  @func_7584() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_4200(%var_4187: uint64) -> (Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) {
  %73 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %74 = %73.1;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(704), float32] */;
  %76 = reshape(%75, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %77 = @func_3491(%76) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %78 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %79 = cast(%var_4187, dtype="uint64") /* ty=uint64 */;
  %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %81 = reshape(%79, newshape=[]) /* ty=uint64 */;
  %82 = reshape(%80, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(1296), uint64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %84 = %77.2;
  %85 = %78.0;
  %86 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %87 = @func_417(%81, %82) /* ty=Tensor[(16, 9, 9), float32] */;
  %88 = sigmoid(%83) /* ty=Tensor[(1296), float64] */;
  %89 = @func_3297() /* ty=Tensor[(10), int16] */;
  (%74, %84, %85, %86, %87, %var_4187, %88, %89)
}

def @func_1254(%var_1214: Tensor[(297), uint8], %var_1221: uint64) -> (Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 12, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
  %91 = cast(%var_1214, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %92 = reshape(%91, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
  %93 = cast(%var_1221, dtype="uint64") /* ty=uint64 */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %95 = reshape(%93, newshape=[]) /* ty=uint64 */;
  %96 = reshape(%94, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %98 = reshape(%97, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
  %99 = sinh(%90) /* ty=Tensor[(5, 12, 5), float32] */;
  %100 = @func_1101(%92) /* ty=Tensor[(3, 9, 11), uint8] */;
  %101 = @func_417(%95, %96) /* ty=Tensor[(16, 9, 9), float32] */;
  %102 = @func_1079(%98) /* ty=Tensor[(8, 11, 8), float32] */;
  (%99, %100, %var_1214, %101, %var_1221, meta[relay.Constant][4] /* ty=Tensor[(1296), uint64] */, %102, meta[relay.Constant][5] /* ty=Tensor[(704), float32] */)
}

def @func_8658(%var_8655: Tensor[(36, 36), uint64], %var_8656: Tensor[(54, 2), uint8], %var_8657: Tensor[(54, 2), uint8]) -> (Tensor[(16, 9, 9), float32], uint64, Tensor[(36, 36), uint64], Tensor[(54, 2), int32], Tensor[(54, 2), int8]) {
  %125 = fn (%var_8634: Tensor[(36, 36), uint64], %var_8637: Tensor[(54, 2), uint8], %var_8647: Tensor[(54, 2), uint8]) -> (Tensor[(16, 9, 9), float32], uint64, Tensor[(36, 36), uint64], Tensor[(54, 2), int32], Tensor[(54, 2), int8]) {
    %103 = cast(meta[relay.Constant][6] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %104 = cast(%var_8634, dtype="uint64") /* ty=Tensor[(36, 36), uint64] */;
    %105 = reshape(%103, newshape=[]) /* ty=uint64 */;
    %106 = reshape(%104, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %107 = @func_7937() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) */;
    %108 = %107.2;
    %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(54, 2), float64] */, dtype="uint8") /* ty=Tensor[(54, 2), uint8] */;
    %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(2), int32] */;
    %111 = cast(%108, dtype="uint8") /* ty=Tensor[(54, 2), uint8] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %113 = add(%111, %112) /* ty=Tensor[(54, 2), uint8] */;
    %114 = cast(%var_8637, dtype="int32") /* ty=Tensor[(54, 2), int32] */;
    %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(2), int32] */;
    %116 = cast(%113, dtype="int32") /* ty=Tensor[(54, 2), int32] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %118 = cast(%var_8647, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
    %119 = shape_of(%113, dtype="int32") /* ty=Tensor[(2), int32] */;
    %120 = cast(%113, dtype="int8") /* ty=Tensor[(54, 2), int8] */;
    %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %122 = @func_417(%105, %106) /* ty=Tensor[(16, 9, 9), float32] */;
    %123 = left_shift(%116, %117) /* ty=Tensor[(54, 2), int32] */;
    %124 = logical_xor(%120, %121) /* ty=Tensor[(54, 2), int8] */;
    (%122, meta[relay.Constant][6] /* ty=uint64 */, %var_8634, %123, %124)
  };
  %125(%var_8655, %var_8656, %var_8657) /* ty=(Tensor[(16, 9, 9), float32], uint64, Tensor[(36, 36), uint64], Tensor[(54, 2), int32], Tensor[(54, 2), int8]) */
}

def @func_10616() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), bool]) {
  %129 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), bool]) {
    %126 = @func_8076() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %127 = %126.0;
    %128 = @func_9171() /* ty=Tensor[(12, 9, 704), bool] */;
    (%127, %128)
  };
  %129() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), bool]) */
}

def @func_6530(%var_6528: uint8) -> (Tensor[(704), float64], Tensor[(12, 9, 1), float64], Tensor[(24), float64], uint8) {
  %130 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(704), float64] */;
  %133 = cast(meta[relay.Constant][8] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %134 = cast(%131, dtype="float32") /* ty=Tensor[(704), float32] */;
  %135 = cast(%var_6528, dtype="uint8") /* ty=uint8 */;
  %136 = reshape(%133, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %137 = reshape(%134, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
  %138 = reshape(%135, newshape=[]) /* ty=uint8 */;
  %139 = @func_5579(%136, %137, %138) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
  %140 = sigmoid(%132) /* ty=Tensor[(704), float64] */;
  %141 = %139.1;
  (%140, %141, meta[relay.Constant][8] /* ty=Tensor[(24), float64] */, %var_6528)
}

def @func_4275() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */
}

def @func_4358() -> (Tensor[(704), float32],) {
  %142 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %143 = %142.1;
  (%143,)
}

def @func_8147() -> Tensor[(12, 9, 704), float64] {
  %149 = fn () -> Tensor[(12, 9, 704), float64] {
    %144 = @func_4593() /* ty=(Tensor[(704), float32],) */;
    %145 = %144.0;
    %146 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
    %147 = cast(%145, dtype="float64") /* ty=Tensor[(704), float64] */;
    %148 = cast(%146, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    maximum(%147, %148) /* ty=Tensor[(12, 9, 704), float64] */
  };
  %149() /* ty=Tensor[(12, 9, 704), float64] */
}

def @func_4360() -> (Tensor[(704), float32],) {
  @func_4358() /* ty=(Tensor[(704), float32],) */
}

def @func_12171() -> Tensor[(12, 9, 11), float32] {
  %151 = fn () -> Tensor[(12, 9, 11), float32] {
    %150 = @func_12096() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) */;
    %150.0
  };
  %151() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_9777(%var_9776: Tensor[(8, 7, 12), int32]) -> (Tensor[(8, 7, 12), int32], Tensor[(8, 1, 12), float32], Tensor[(12, 9, ?), float32]) {
  %159 = fn (%var_9764: Tensor[(8, 7, 12), int32]) -> (Tensor[(8, 7, 12), int32], Tensor[(8, 1, 12), float32], Tensor[(12, 9, ?), float32]) {
    %152 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 1, 12), int32] */, dtype="int32") /* ty=Tensor[(8, 1, 12), int32] */;
    %153 = cast(%var_9764, dtype="int32") /* ty=Tensor[(8, 7, 12), int32] */;
    %154 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 1, 12), int32] */, dtype="float32") /* ty=Tensor[(8, 1, 12), float32] */;
    %155 = @func_8824() /* ty=(Tensor[(12, 9, ?), float32],) */;
    %156 = bitwise_and(%152, %153) /* ty=Tensor[(8, 7, 12), int32] */;
    %157 = cosh(%154) /* ty=Tensor[(8, 1, 12), float32] */;
    %158 = %155.0;
    (%156, %157, %158)
  };
  %159(%var_9776) /* ty=(Tensor[(8, 7, 12), int32], Tensor[(8, 1, 12), float32], Tensor[(12, 9, ?), float32]) */
}

def @func_9252(%var_9245: Tensor[(1, 10, 4), float32]) -> (Tensor[(1, 10, 4), float32], Tensor[(12, 9, 1), float64]) {
  %160 = cast(%var_9245, dtype="float32") /* ty=Tensor[(1, 10, 4), float32] */;
  %161 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %162 = atanh(%160) /* ty=Tensor[(1, 10, 4), float32] */;
  %163 = %161.0;
  (%162, %163)
}

def @func_6031(%var_6030: float32) -> (Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 24), int8], Tensor[(24), float64], Tensor[(704), float32], Tensor[(12, 9, 1), uint32]) {
  %183 = fn (%var_5991: float32) -> (Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 24), int8], Tensor[(24), float64], Tensor[(704), float32], Tensor[(12, 9, 1), uint32]) {
    %164 = cast(%var_5991, dtype="float32") /* ty=float32 */;
    %165 = cast(meta[relay.Constant][10] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %166 = reshape(%164, newshape=[]) /* ty=float32 */;
    %167 = reshape(%165, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %168 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    %169 = cast(meta[relay.Constant][10] /* ty=Tensor[(24), float32] */, dtype="int8") /* ty=Tensor[(24), int8] */;
    %170 = cast(%168, dtype="int8") /* ty=Tensor[(12, 9, 1), int8] */;
    %171 = @func_2449(%166, %167) /* ty=Tensor[(2, 2, 6), float32] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(2, 2, 6), float64] */;
    %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %174 = cast(%var_5991, dtype="uint8") /* ty=uint8 */;
    %175 = reshape(%172, newshape=[24]) /* ty=Tensor[(24), float64] */;
    %176 = reshape(%173, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
    %177 = reshape(%174, newshape=[]) /* ty=uint8 */;
    %178 = @func_5579(%175, %176, %177) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
    %179 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
    %180 = maximum(%169, %170) /* ty=Tensor[(12, 9, 24), int8] */;
    %181 = %178.3;
    %182 = %179.2;
    (%171, %var_5991, %180, %181, meta[relay.Constant][11] /* ty=Tensor[(704), float32] */, %182)
  };
  %183(%var_6030) /* ty=(Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 24), int8], Tensor[(24), float64], Tensor[(704), float32], Tensor[(12, 9, 1), uint32]) */
}

def @func_7552() -> (Tensor[(12, 9, 11), float32],) {
  %186 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %184 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %185 = %184.0;
    (%185,)
  };
  %186() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_11087() -> Tensor[(12, 9, 1), float64] {
  @func_11085() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_524(%var_522: Tensor[(2, 7, 16), float64], %var_523: Tensor[(12, 108), uint64]) -> (Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) {
  %210 = fn (%var_490: Tensor[(2, 7, 16), float64], %var_497: Tensor[(12, 108), uint64]) -> (Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) {
    %187 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
    %188 = shape_of(%var_490, dtype="int32") /* ty=Tensor[(3), int32] */;
    %189 = cast(%var_490, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
    %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %191 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %192 = cast(%var_497, dtype="uint64") /* ty=Tensor[(12, 108), uint64] */;
    %193 = reshape(%191, newshape=[]) /* ty=uint64 */;
    %194 = reshape(%192, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %195 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
    %196 = cast(%var_497, dtype="float32") /* ty=Tensor[(12, 108), float32] */;
    %197 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %198 = cast(%var_497, dtype="uint64") /* ty=Tensor[(12, 108), uint64] */;
    %199 = reshape(%197, newshape=[]) /* ty=uint64 */;
    %200 = reshape(%198, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %201 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %202 = @func_417(%193, %194) /* ty=Tensor[(16, 9, 9), float32] */;
    %203 = cast(%202, dtype="uint64") /* ty=Tensor[(16, 9, 9), uint64] */;
    %204 = reshape(%201, newshape=[]) /* ty=uint64 */;
    %205 = reshape(%203, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %206 = floor_mod(%189, %190) /* ty=Tensor[(2, 7, 16), float64] */;
    %207 = divide(%195, %196) /* ty=Tensor[(12, 108), float32] */;
    %208 = @func_417(%199, %200) /* ty=Tensor[(16, 9, 9), float32] */;
    %209 = @func_417(%204, %205) /* ty=Tensor[(16, 9, 9), float32] */;
    (%206, %202, %207, %208, %209)
  };
  %210(%var_522, %var_523) /* ty=(Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) */
}

def @func_12391() -> (Tensor[(704), float32],) {
  @func_12389() /* ty=(Tensor[(704), float32],) */
}

def @func_6617(%var_6615: Tensor[(12, 9, 2), float64]) -> (Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) {
  @func_6614(%var_6615) /* ty=(Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) */
}

def @func_5440(%var_5438: Tensor[(910), float64], %var_5439: uint8) -> (Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) {
  %230 = fn (%var_5379: Tensor[(910), float64], %var_5431: uint8) -> (Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) {
    %211 = cast(%var_5379, dtype="float64") /* ty=Tensor[(910), float64] */;
    %212 = reshape(%211, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
    %213 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    %214 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %215 = %214.0;
    %216 = cast(%215, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %217 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%213, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %220 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
    %221 = cast(%var_5431, dtype="uint8") /* ty=uint8 */;
    %222 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 1), uint8] */, dtype="uint8") /* ty=Tensor[(8, 1), uint8] */;
    %223 = reshape(%221, newshape=[]) /* ty=uint8 */;
    %224 = reshape(%222, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
    %225 = @func_4504(%223, %224) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
    %226 = @func_4242(%212) /* ty=Tensor[(13, 5, 14), float64] */;
    %227 = divide(%218, %219) /* ty=Tensor[(12, 9, ?), float64] */;
    %228 = %220.0;
    %229 = %225.1;
    (%226, %var_5379, %227, %228, %229, %var_5431, meta[relay.Constant][14] /* ty=Tensor[(8, 1), uint8] */)
  };
  %230(%var_5438, %var_5439) /* ty=(Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) */
}

def @func_7135(%var_7133: uint64, %var_7134: Tensor[(4, 48), uint32]) -> (Tensor[(12, 9, ?), int64], Tensor[(12, 9, 1), float64], uint64, Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], Tensor[(4, 48), uint32], Tensor[(704), float32]) {
  @func_7131(%var_7133, %var_7134) /* ty=(Tensor[(12, 9, ?), int64], Tensor[(12, 9, 1), float64], uint64, Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], Tensor[(4, 48), uint32], Tensor[(704), float32]) */
}

def @func_12284(%var_12245: uint64) -> (Tensor[(1, 11, 2), bool], Tensor[(704), float32], uint64, Tensor[(12, 9, 11), float32]) {
  %231 = @func_12096() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) */;
  %232 = cast(%var_12245, dtype="uint64") /* ty=uint64 */;
  %233 = reshape(%232, newshape=[]) /* ty=uint64 */;
  %234 = @func_4200(%233) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %235 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %236 = %231.2;
  %237 = %234.0;
  %238 = %235.0;
  (%236, %237, %var_12245, %238)
}

def @func_4242(%var_4223: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %239 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 5, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %240 = shape_of(%var_4223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_4223, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%241, %242) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_9624() -> (Tensor[(12, 9, 1), float64],) {
  @func_9622() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_10833() -> (Tensor[(12, 9, 1), float64],) {
  %245 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %243 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %244 = %243.0;
    (%244,)
  };
  %245() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_12750() -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) {
  %246 = cast(meta[relay.Constant][16] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %247 = reshape(%246, newshape=[]) /* ty=uint32 */;
  %248 = @func_12506(%247) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) */;
  %249 = @func_3297() /* ty=Tensor[(10), int16] */;
  %250 = @func_9986() /* ty=Tensor[(12, 9, 11), float32] */;
  %251 = %248.1;
  (%249, %250, %251, meta[relay.Constant][16] /* ty=uint32 */)
}

def @func_12543() -> Tensor[(12, 9, 1), float64] {
  @func_12541() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_12439() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), float32]) {
  %263 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), float32]) {
    %252 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %253 = @func_11014() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */;
    %254 = %253.0;
    %255 = @func_10586() /* ty=Tensor[(12, 9, 1), float64] */;
    %256 = cast(%254, dtype="float64") /* ty=Tensor[(704), float64] */;
    %257 = cast(%255, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %258 = floor_divide(%256, %257) /* ty=Tensor[(12, 9, 704), float64] */;
    %259 = cast(%258, dtype="float32") /* ty=Tensor[(12, 9, 704), float32] */;
    %260 = cast(%255, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %261 = %252.0;
    %262 = divide(%259, %260) /* ty=Tensor[(12, 9, 704), float32] */;
    (%261, %262)
  };
  %263() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 704), float32]) */
}

def @func_8078() -> (Tensor[(12, 9, 11), float32],) {
  @func_8076() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_2676(%var_2675: Tensor[(297), uint8]) -> (Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) {
  %269 = fn (%var_2669: Tensor[(297), uint8]) -> (Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) {
    %264 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(6, 11, 15), float64] */;
    %265 = cast(%var_2669, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %266 = reshape(%265, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
    %267 = log(%264) /* ty=Tensor[(6, 11, 15), float64] */;
    %268 = @func_1101(%266) /* ty=Tensor[(3, 9, 11), uint8] */;
    (%267, %268, %var_2669)
  };
  %269(%var_2675) /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) */
}

def @func_12865() -> (Tensor[(4, 2, 1), uint8],) {
  %272 = fn () -> (Tensor[(4, 2, 1), uint8],) {
    %270 = @func_10512() /* ty=(uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) */;
    %271 = %270.1;
    (%271,)
  };
  %272() /* ty=(Tensor[(4, 2, 1), uint8],) */
}

def @func_4419() -> (Tensor[(12, 9, 11), float32],) {
  %273 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
  %276 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 9, 11), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 11), float32] */;
  %277 = floor_divide(%275, %276) /* ty=Tensor[(12, 9, 11), float32] */;
  (%277,)
}

def @func_10429() -> (Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) {
  %285 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) {
    %278 = @func_8259() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %279 = cast(meta[relay.Constant][19] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %280 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 2), int16] */, dtype="int16") /* ty=Tensor[(5, 2), int16] */;
    %281 = reshape(%279, newshape=[]) /* ty=int16 */;
    %282 = reshape(%280, newshape=[1, 10, 1]) /* ty=Tensor[(1, 10, 1), int16] */;
    %283 = %278.0;
    %284 = @func_1687(%281, %282) /* ty=Tensor[(1, 10, 1), int16] */;
    (%283, %284, meta[relay.Constant][19] /* ty=int16 */, meta[relay.Constant][20] /* ty=Tensor[(5, 2), int16] */)
  };
  %285() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) */
}

def @func_6533(%var_6531: uint8) -> (Tensor[(704), float64], Tensor[(12, 9, 1), float64], Tensor[(24), float64], uint8) {
  @func_6530(%var_6531) /* ty=(Tensor[(704), float64], Tensor[(12, 9, 1), float64], Tensor[(24), float64], uint8) */
}

def @func_10981() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  @func_10979() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_9336() -> (Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  @func_9334() /* ty=(Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */
}

def @func_4883() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_8725() -> (Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) {
  %299 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) {
    %286 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %287 = cast(meta[relay.Constant][21] /* ty=Tensor[(112, 2), float64] */, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
    %288 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %289 = reshape(%287, newshape=[2, 7, 16]) /* ty=Tensor[(2, 7, 16), float64] */;
    %290 = reshape(%288, newshape=[12, 108]) /* ty=Tensor[(12, 108), uint64] */;
    %291 = @func_521(%289, %290) /* ty=(Tensor[(2, 7, 16), float64], Tensor[(16, 9, 9), float32], Tensor[(12, 108), float32], Tensor[(16, 9, 9), float32], Tensor[(16, 9, 9), float32]) */;
    %292 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %293 = %291.1;
    %294 = cast(%293, dtype="uint64") /* ty=Tensor[(16, 9, 9), uint64] */;
    %295 = reshape(%292, newshape=[]) /* ty=uint64 */;
    %296 = reshape(%294, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %297 = %286.0;
    %298 = @func_417(%295, %296) /* ty=Tensor[(16, 9, 9), float32] */;
    (%297, %293, meta[relay.Constant][21] /* ty=Tensor[(112, 2), float64] */, meta[relay.Constant][22] /* ty=Tensor[(1296), uint64] */, %298, meta[relay.Constant][23] /* ty=uint64 */)
  };
  %299() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */
}

def @func_10355(%var_10352: uint64, %var_10353: Tensor[(540), int8], %var_10354: Tensor[(1, 1296), uint64]) -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(10), int16], uint64, Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint16], Tensor[(540), int8], Tensor[(16, 9, 9), float32], Tensor[(1, 1296), uint64], Tensor[(704), float32], Tensor[(910), float64], Tensor[(297), uint8]) {
  @func_10350(%var_10352, %var_10353, %var_10354) /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(10), int16], uint64, Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint16], Tensor[(540), int8], Tensor[(16, 9, 9), float32], Tensor[(1, 1296), uint64], Tensor[(704), float32], Tensor[(910), float64], Tensor[(297), uint8]) */
}

def @func_13482(%var_13481: Tensor[(6, 4), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(6, 4), float64], Tensor[(704), float32]) {
  %307 = fn (%var_13467: Tensor[(6, 4), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(6, 4), float64], Tensor[(704), float32]) {
    %300 = cast(%var_13467, dtype="float64") /* ty=Tensor[(6, 4), float64] */;
    %301 = reshape(%300, newshape=[1, 24]) /* ty=Tensor[(1, 24), float64] */;
    %302 = @func_9473(%301) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) */;
    %303 = @func_9421() /* ty=(Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) */;
    %304 = @func_8997() /* ty=Tensor[(12, 9, 1), float64] */;
    %305 = %302.5;
    %306 = %303.0;
    (%304, %305, %var_13467, %306)
  };
  %307(%var_13481) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(6, 4), float64], Tensor[(704), float32]) */
}

def @func_1687(%var_1682: int16, %var_1683: Tensor[(1, 10, 1), int16]) -> Tensor[(1, 10, 1), int16] {
  %308 = cast(%var_1682, dtype="int16") /* ty=int16 */;
  %309 = cast(%var_1683, dtype="int16") /* ty=Tensor[(1, 10, 1), int16] */;
  bitwise_xor(%308, %309) /* ty=Tensor[(1, 10, 1), int16] */
}

def @func_11558(%var_11556: Tensor[(2, 14, 4), float64]) -> (Tensor[(2, 14, 4), float64], Tensor[(12, 9, 1), float64]) {
  @func_11555(%var_11556) /* ty=(Tensor[(2, 14, 4), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_4610(%var_4598: Tensor[(8, 1, 3), float64]) -> (Tensor[(8, 1, 3), float64],) {
  %310 = cast(%var_4598, dtype="float64") /* ty=Tensor[(8, 1, 3), float64] */;
  %311 = cos(%310) /* ty=Tensor[(8, 1, 3), float64] */;
  (%311,)
}

def @func_8825() -> (Tensor[(12, 9, ?), float32],) {
  %316 = fn () -> (Tensor[(12, 9, ?), float32],) {
    %312 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
    %313 = %312.0;
    %314 = cast(%313, dtype="float32") /* ty=Tensor[(12, 9, ?), float32] */;
    %315 = log(%314) /* ty=Tensor[(12, 9, ?), float32] */;
    (%315,)
  };
  %316() /* ty=(Tensor[(12, 9, ?), float32],) */
}

def @func_10743() -> (Tensor[(704), float32], Tensor[(12, 9, 16), float32], Tensor[(12, 9, 1), float64]) {
  %323 = fn () -> (Tensor[(704), float32], Tensor[(12, 9, 16), float32], Tensor[(12, 9, 1), float64]) {
    %317 = @func_4593() /* ty=(Tensor[(704), float32],) */;
    %318 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
    %319 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %320 = %317.0;
    %321 = %318.0;
    %322 = %319.0;
    (%320, %321, %322)
  };
  %323() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 16), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_13070() -> (Tensor[(1296), uint64],) {
  %324 = @func_10377() /* ty=(Tensor[(1296), uint64],) */;
  %325 = %324.0;
  (%325,)
}

def @func_10979() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %326 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %327 = @func_9383() /* ty=Tensor[(12, 9, 1), float64] */;
  %328 = %326.0;
  (%327, %328)
}

def @func_4594() -> (Tensor[(704), float32],) {
  %331 = fn () -> (Tensor[(704), float32],) {
    %329 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
    %330 = %329.2;
    (%330,)
  };
  %331() /* ty=(Tensor[(704), float32],) */
}

def @func_8041(%var_8039: Tensor[(704), float32]) -> (Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) {
  @func_8038(%var_8039) /* ty=(Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) */
}

def @func_7876() -> (Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) {
  %338 = fn () -> (Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) {
    %332 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %333 = %332.0;
    %334 = cast(%333, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %335 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
    %336 = divide(%334, %335) /* ty=Tensor[(12, 9, 16), float32] */;
    %337 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_8038(%var_8033: Tensor[(704), float32]) -> (Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) {
  %339 = cast(meta[relay.Constant][25] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %340 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 2), uint8] */, dtype="uint8") /* ty=Tensor[(4, 2), uint8] */;
  %341 = reshape(%339, newshape=[]) /* ty=uint8 */;
  %342 = reshape(%340, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %343 = @func_4504(%341, %342) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %344 = cast(meta[relay.Constant][25] /* ty=uint8 */, dtype="float32") /* ty=float32 */;
  %345 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12), float32] */;
  %346 = reshape(%344, newshape=[]) /* ty=float32 */;
  %347 = reshape(%345, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %348 = cast(%var_8033, dtype="float32") /* ty=Tensor[(704), float32] */;
  %349 = reshape(%348, newshape=[2, 352]) /* ty=Tensor[(2, 352), float32] */;
  %350 = @func_7295(%349) /* ty=(Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) */;
  %351 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %352 = %343.0;
  %353 = @func_2449(%346, %347) /* ty=Tensor[(2, 2, 6), float32] */;
  %354 = %350.2;
  (%351, %352, meta[relay.Constant][25] /* ty=uint8 */, meta[relay.Constant][26] /* ty=Tensor[(4, 2), uint8] */, %353, meta[relay.Constant][27] /* ty=Tensor[(2, 12), float32] */, %354, %var_8033)
}

def @func_12113() -> Tensor[(12, 9, 1), float64] {
  %355 = @func_8997() /* ty=Tensor[(12, 9, 1), float64] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  exp(%356) /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_9529() -> (Tensor[(12, 9, 1), float64],) {
  %357 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
  %358 = %357.0;
  (%358,)
}

def @func_11085() -> Tensor[(12, 9, 1), float64] {
  %359 = @func_8484() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %359.0
}

def @func_6614(%var_6571: Tensor[(12, 9, 2), float64]) -> (Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) {
  %360 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %361 = %360.0;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %363 = cast(%var_6571, dtype="float64") /* ty=Tensor[(12, 9, 2), float64] */;
  %364 = cast(meta[relay.Constant][28] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %365 = reshape(%364, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %366 = cast(meta[relay.Constant][29] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %367 = reshape(%366, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %368 = @func_2674(%367) /* ty=(Tensor[(6, 11, 15), float64], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8]) */;
  %369 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %370 = cast(meta[relay.Constant][31] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %371 = reshape(%369, newshape=[]) /* ty=uint32 */;
  %372 = reshape(%370, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
  %373 = @func_5054(%371, %372) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %374 = cast(meta[relay.Constant][30] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %375 = %373.3;
  %376 = cast(%375, dtype="uint32") /* ty=Tensor[(96, 2), uint32] */;
  %377 = reshape(%374, newshape=[]) /* ty=uint32 */;
  %378 = reshape(%376, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %379 = @func_4817(%377, %378) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %380 = floor_divide(%362, %363) /* ty=Tensor[(12, 9, 2), float64] */;
  %381 = @func_4242(%365) /* ty=Tensor[(13, 5, 14), float64] */;
  %382 = %368.2;
  %383 = %379.0;
  (%380, %381, meta[relay.Constant][28] /* ty=Tensor[(910), float64] */, %382, meta[relay.Constant][29] /* ty=Tensor[(297), uint8] */, %375, meta[relay.Constant][30] /* ty=uint32 */, meta[relay.Constant][31] /* ty=Tensor[(540), int8] */, %383)
}

def @func_11666() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 704), bool]) {
  @func_11664() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 704), bool]) */
}

def @func_11931() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %387 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
    %384 = @func_9586() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %385 = %384.0;
    %386 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_10103() -> Tensor[(12, 9, 1), float64] {
  %388 = fn () -> Tensor[(12, 9, 1), float64] {
    @func_9383() /* ty=Tensor[(12, 9, 1), float64] */
  };
  %388() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_11986() -> Tensor[(12, 9, 1), float64] {
  %389 = @func_8484() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %389.0
}

def @func_8883(%var_8881: Tensor[(297), uint8], %var_8882: Tensor[(540), int8]) -> (Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) {
  %411 = fn (%var_8858: Tensor[(297), uint8], %var_8859: Tensor[(540), int8]) -> (Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) {
    %390 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
    %391 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 9, 1), float32] */, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
    %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(%390, dtype="uint32") /* ty=Tensor[(12, 9, ?), uint32] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %395 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %396 = %395.0;
    %397 = cast(%396, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %398 = cast(%var_8858, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %399 = cast(%var_8859, dtype="int8") /* ty=Tensor[(540), int8] */;
    %400 = reshape(%397, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
    %401 = reshape(%398, newshape=[297]) /* ty=Tensor[(297), uint8] */;
    %402 = reshape(%399, newshape=[18, 30]) /* ty=Tensor[(18, 30), int8] */;
    %403 = @func_7263(%400, %401, %402) /* ty=(Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) */;
    %404 = %403.1;
    %405 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 9, 1), float32] */, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
    %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(%404, dtype="uint16") /* ty=Tensor[(12, 9, 1), uint16] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %409 = maximum(%393, %394) /* ty=Tensor[(12, 9, ?), uint32] */;
    %410 = subtract(%407, %408) /* ty=Tensor[(12, 9, ?), uint16] */;
    (%409, %396, %var_8858, %var_8859, %410)
  };
  %411(%var_8881, %var_8882) /* ty=(Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) */
}

def @func_13363() -> (Tensor[(12, 9, 11), float32],) {
  @func_13361() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_12389() -> (Tensor[(704), float32],) {
  %412 = @func_9724() /* ty=(Tensor[(704), float32],) */;
  %413 = %412.0;
  (%413,)
}

def @func_8583(%var_8582: Tensor[(297), uint8]) -> (Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) {
  %443 = fn (%var_8545: Tensor[(297), uint8]) -> (Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) {
    %414 = cast(meta[relay.Constant][33] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %415 = reshape(%414, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %416 = @func_4973(%415) /* ty=(Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
    %417 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
    %418 = %417.0;
    %419 = cast(%418, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
    %420 = cos(%419) /* ty=Tensor[(12, 9, 16), float32] */;
    %421 = cast(%420, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
    %422 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %423 = cast(%418, dtype="bool") /* ty=Tensor[(12, 9, 16), bool] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %425 = cast(meta[relay.Constant][33] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %426 = reshape(%425, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %427 = cast(%var_8545, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %428 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %429 = reshape(%427, newshape=[297]) /* ty=Tensor[(297), uint8] */;
    %430 = reshape(%428, newshape=[]) /* ty=uint64 */;
    %431 = @func_1254(%429, %430) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %432 = %431.4;
    %433 = cast(%432, dtype="uint32") /* ty=uint32 */;
    %434 = %416.1;
    %435 = cast(%434, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
    %436 = reshape(%433, newshape=[]) /* ty=uint32 */;
    %437 = reshape(%435, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
    %438 = @func_5054(%436, %437) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %439 = not_equal(%423, %424) /* ty=Tensor[(12, 9, 16), bool] */;
    %440 = @func_7331(%426) /* ty=Tensor[(704), bool] */;
    %441 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
    %442 = %438.0;
    (%434, meta[relay.Constant][33] /* ty=Tensor[(704), float32] */, %439, %440, %441, %432, %var_8545, meta[relay.Constant][34] /* ty=uint64 */, %442)
  };
  %443(%var_8582) /* ty=(Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) */
}

def @func_8485() -> (Tensor[(12, 9, 1), float64],) {
  %445 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %444 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
    (%444,)
  };
  %445() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_10569() -> (Tensor[(704), float32],) {
  %446 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %447 = %446.0;
  (%447,)
}

def @func_10213() -> (Tensor[(12, 9, 1), float64],) {
  @func_10211() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_12509(%var_12507: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) {
  @func_12506(%var_12507) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], uint32, Tensor[(192), uint32]) */
}

def @func_12097() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) {
  %454 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) {
    %448 = @func_9529() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %449 = @func_6406() /* ty=(Tensor[(704), float32], Tensor[(1, 11, 2), bool], float64, Tensor[(704), float64]) */;
    %450 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
    %451 = %448.0;
    %452 = %449.1;
    %453 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
    (%450, %451, %452, %453)
  };
  %454() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64], Tensor[(1, 11, 2), bool], Tensor[(12, 9, 11), float32]) */
}

def @func_3493(%var_3492: Tensor[(704), float32]) -> (Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %459 = fn (%var_3475: Tensor[(704), float32]) -> (Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
    %455 = cast(%var_3475, dtype="float32") /* ty=Tensor[(704), float32] */;
    %456 = reshape(%455, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
    %457 = @func_3297() /* ty=Tensor[(10), int16] */;
    %458 = @func_1079(%456) /* ty=Tensor[(8, 11, 8), float32] */;
    (%457, %458, %var_3475)
  };
  %459(%var_3492) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */
}

def @func_13612(%var_13610: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), uint32],) {
  @func_13609(%var_13610) /* ty=(Tensor[(2, 12, 6), uint32],) */
}

def @func_13895(%var_13893: Tensor[(12, 9, 15), float64]) -> (Tensor[(12, 9, 15), bool],) {
  @func_13892(%var_13893) /* ty=(Tensor[(12, 9, 15), bool],) */
}

def @func_10065(%var_10064: bool) -> (Tensor[(704), float32], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool]) {
  %467 = fn (%var_10043: bool) -> (Tensor[(704), float32], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool]) {
    %460 = cast(%var_10043, dtype="bool") /* ty=bool */;
    %461 = cast(meta[relay.Constant][35] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
    %462 = reshape(%460, newshape=[]) /* ty=bool */;
    %463 = reshape(%461, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
    %464 = @func_5853(%462, %463) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
    %465 = @func_6083() /* ty=Tensor[(704), float32] */;
    %466 = %464.1;
    (%465, %466, %var_10043, meta[relay.Constant][35] /* ty=Tensor[(16), bool] */)
  };
  %467(%var_10064) /* ty=(Tensor[(704), float32], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool]) */
}

def @func_13072() -> (Tensor[(1296), uint64],) {
  @func_13070() /* ty=(Tensor[(1296), uint64],) */
}

def @func_4613(%var_4611: Tensor[(8, 1, 3), float64]) -> (Tensor[(8, 1, 3), float64],) {
  @func_4610(%var_4611) /* ty=(Tensor[(8, 1, 3), float64],) */
}

def @func_9726() -> (Tensor[(704), float32],) {
  @func_9724() /* ty=(Tensor[(704), float32],) */
}

def @func_13273() -> Tensor[(12, 9, ?), float32] {
  @func_13271() /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_12541() -> Tensor[(12, 9, 1), float64] {
  %468 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %468.0
}

def @func_5857(%var_5855: bool, %var_5856: Tensor[(1, 8, 2), bool]) -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) {
  @func_5853(%var_5855, %var_5856) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */
}

def @func_12844(%var_12786: int16, %var_12787: Tensor[(16, 16, 13), int16]) -> (Tensor[(16, 16, 13), int16], Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], Tensor[(10, 910), bool], Tensor[(12, 9, ?), float32], Tensor[(10, 910), float64]) {
  %469 = cast(%var_12786, dtype="int16") /* ty=int16 */;
  %470 = cast(%var_12787, dtype="int16") /* ty=Tensor[(16, 16, 13), int16] */;
  %471 = @func_7584() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %472 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 910), float64] */, dtype="float64") /* ty=Tensor[(1, 910), float64] */;
  %473 = reshape(%472, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %474 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 910), float64] */, dtype="bool") /* ty=Tensor[(1, 910), bool] */;
  %475 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 910), float64] */, dtype="bool") /* ty=Tensor[(10, 910), bool] */;
  %476 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %477 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 910), float64] */, dtype="float64") /* ty=Tensor[(10, 910), float64] */;
  %478 = left_shift(%469, %470) /* ty=Tensor[(16, 16, 13), int16] */;
  %479 = %471.0;
  %480 = @func_4242(%473) /* ty=Tensor[(13, 5, 14), float64] */;
  %481 = greater_equal(%474, %475) /* ty=Tensor[(10, 910), bool] */;
  %482 = %476.0;
  %483 = asin(%477) /* ty=Tensor[(10, 910), float64] */;
  (%478, %479, %480, %481, %482, %483)
}

def @func_11742() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
  %484 = @func_11014() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */;
  %485 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
  %486 = %484.1;
  (%485, %486)
}

def @func_1466(%var_1460: Tensor[(9, 4, 15), int8]) -> (Tensor[(9, 4, 15), int8],) {
  %487 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 4, 15), int8] */, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
  %488 = shape_of(%var_1460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%var_1460, dtype="int8") /* ty=Tensor[(9, 4, 15), int8] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %491 = subtract(%489, %490) /* ty=Tensor[(9, 4, 15), int8] */;
  (%491,)
}

def @func_9531() -> (Tensor[(12, 9, 1), float64],) {
  @func_9529() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_9255(%var_9253: Tensor[(1, 10, 4), float32]) -> (Tensor[(1, 10, 4), float32], Tensor[(12, 9, 1), float64]) {
  @func_9252(%var_9253) /* ty=(Tensor[(1, 10, 4), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_3122() -> (Tensor[(12, 9, 1), float64],) {
  @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_2449(%var_2443: float32, %var_2444: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), float32] {
  %492 = cast(%var_2443, dtype="float32") /* ty=float32 */;
  %493 = cast(%var_2444, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
  maximum(%492, %493) /* ty=Tensor[(2, 2, 6), float32] */
}

def @func_4080() -> (Tensor[(12, 9, 1), float64],) {
  %496 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %494 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %495 = %494.0;
    (%495,)
  };
  %496() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_4245(%var_4243: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  @func_4242(%var_4243) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_9476(%var_9474: Tensor[(1, 24), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) {
  @func_9473(%var_9474) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) */
}

def @func_13775() -> Tensor[(12, 9, 11), float32] {
  %497 = fn () -> Tensor[(12, 9, 11), float32] {
    @func_12170() /* ty=Tensor[(12, 9, 11), float32] */
  };
  %497() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_6826(%var_6824: Tensor[(12, 9, 1), float32], %var_6825: bool) -> (Tensor[(12, 9, ?), bool], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool], Tensor[(16, 7, 15), float32], Tensor[(1680), float32], Tensor[(12, 9, 704), uint32]) {
  %530 = fn (%var_6751: Tensor[(12, 9, 1), float32], %var_6797: bool) -> (Tensor[(12, 9, ?), bool], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool], Tensor[(16, 7, 15), float32], Tensor[(1680), float32], Tensor[(12, 9, 704), uint32]) {
    %498 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %499 = %498.0;
    %500 = cast(%499, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %501 = sigmoid(%500) /* ty=Tensor[(12, 9, 1), float32] */;
    %502 = cast(%var_6751, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %504 = cast(%501, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %506 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %507 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %508 = cast(%var_6797, dtype="bool") /* ty=bool */;
    %509 = cast(meta[relay.Constant][39] /* ty=Tensor[(16), bool] */, dtype="bool") /* ty=Tensor[(16), bool] */;
    %510 = reshape(%508, newshape=[]) /* ty=bool */;
    %511 = reshape(%509, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
    %512 = @func_5853(%510, %511) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
    %513 = cast(%var_6797, dtype="float32") /* ty=float32 */;
    %514 = cast(meta[relay.Constant][40] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %515 = reshape(%513, newshape=[]) /* ty=float32 */;
    %516 = reshape(%514, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), float32] */;
    %517 = @func_2959(%515, %516) /* ty=(Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) */;
    %518 = @func_4358() /* ty=(Tensor[(704), float32],) */;
    %519 = %518.0;
    %520 = cast(%519, dtype="float32") /* ty=Tensor[(704), float32] */;
    %521 = sqrt(%520) /* ty=Tensor[(704), float32] */;
    %522 = cast(%499, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
    %523 = cast(%521, dtype="uint32") /* ty=Tensor[(704), uint32] */;
    %524 = greater(%504, %505) /* ty=Tensor[(12, 9, ?), bool] */;
    %525 = %506.1;
    %526 = %507.0;
    %527 = %512.1;
    %528 = %517.0;
    %529 = bitwise_or(%522, %523) /* ty=Tensor[(12, 9, 704), uint32] */;
    (%524, %525, %526, %527, %var_6797, meta[relay.Constant][39] /* ty=Tensor[(16), bool] */, %528, meta[relay.Constant][40] /* ty=Tensor[(1680), float32] */, %529)
  };
  %530(%var_6824, %var_6825) /* ty=(Tensor[(12, 9, ?), bool], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(16), bool], Tensor[(16, 7, 15), float32], Tensor[(1680), float32], Tensor[(12, 9, 704), uint32]) */
}

def @func_13892(%var_13856: Tensor[(12, 9, 15), float64]) -> (Tensor[(12, 9, 15), bool],) {
  %531 = @func_13705() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) */;
  %532 = %531.1;
  %533 = cast(%532, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %534 = cast(%var_13856, dtype="bool") /* ty=Tensor[(12, 9, 15), bool] */;
  %535 = less_equal(%533, %534) /* ty=Tensor[(12, 9, 15), bool] */;
  (%535,)
}

def @func_7939() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) {
  @func_7937() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) */
}

def @func_11664() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 704), bool]) {
  %536 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %537 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %538 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
  %539 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %540 = %539.1;
  %541 = cast(%538, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %542 = cast(%540, dtype="bool") /* ty=Tensor[(704), bool] */;
  %543 = %536.2;
  %544 = %537.0;
  %545 = @func_6991() /* ty=Tensor[(12, 9, 1), float64] */;
  %546 = equal(%541, %542) /* ty=Tensor[(12, 9, 704), bool] */;
  (%543, %544, %545, %546)
}

def @func_13706() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) {
  %553 = fn () -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) {
    %547 = @func_12389() /* ty=(Tensor[(704), float32],) */;
    %548 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %549 = @func_10512() /* ty=(uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) */;
    %550 = %547.0;
    %551 = %548.0;
    %552 = %549.1;
    (%550, %551, %552)
  };
  %553() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(4, 2, 1), uint8]) */
}

def @func_13271() -> Tensor[(12, 9, ?), float32] {
  @func_3945() /* ty=Tensor[(12, 9, ?), float32] */
}

def @func_1079(%var_1067: Tensor[(8, 11, 8), float32]) -> Tensor[(8, 11, 8), float32] {
  %554 = cast(%var_1067, dtype="float32") /* ty=Tensor[(8, 11, 8), float32] */;
  log2(%554) /* ty=Tensor[(8, 11, 8), float32] */
}

def @func_9423() -> (Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) {
  @func_9421() /* ty=(Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) */
}

def @func_10571() -> (Tensor[(704), float32],) {
  @func_10569() /* ty=(Tensor[(704), float32],) */
}

def @func_10211() -> (Tensor[(12, 9, 1), float64],) {
  %555 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %556 = %555.0;
  (%556,)
}

def @func_9622() -> (Tensor[(12, 9, 1), float64],) {
  %557 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%557,)
}

def @func_3447(%var_3446: Tensor[(704), float32]) -> (Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %563 = fn (%var_3443: Tensor[(704), float32]) -> (Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
    %558 = @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */;
    %559 = cast(%var_3443, dtype="float32") /* ty=Tensor[(704), float32] */;
    %560 = reshape(%559, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
    %561 = %558.2;
    %562 = @func_1079(%560) /* ty=Tensor[(8, 11, 8), float32] */;
    (%561, %562, %var_3443)
  };
  %563(%var_3446) /* ty=(Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */
}

def @func_1103(%var_1102: Tensor[(3, 9, 11), uint8]) -> Tensor[(3, 9, 11), uint8] {
  %568 = fn (%var_1096: Tensor[(3, 9, 11), uint8]) -> Tensor[(3, 9, 11), uint8] {
    %564 = cast(%var_1096, dtype="uint8") /* ty=Tensor[(3, 9, 11), uint8] */;
    %565 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(3, 9, 11), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 9, 11), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 11), uint8] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_and(%566, %567) /* ty=Tensor[(3, 9, 11), uint8] */
  };
  %568(%var_1102) /* ty=Tensor[(3, 9, 11), uint8] */
}

def @func_12045(%var_12043: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24, 1), float32]) {
  @func_12042(%var_12043) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24, 1), float32]) */
}

def @func_9173() -> Tensor[(12, 9, 704), bool] {
  @func_9171() /* ty=Tensor[(12, 9, 704), bool] */
}

def @func_11015() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
  %572 = fn () -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
    %569 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %570 = @func_6083() /* ty=Tensor[(704), float32] */;
    %571 = %569.0;
    (%570, %571)
  };
  %572() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_2963(%var_2961: float32, %var_2962: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) {
  @func_2959(%var_2961, %var_2962) /* ty=(Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) */
}

def @func_4003() -> (Tensor[(12, 9, 1), float64],) {
  %574 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %573 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    (%573,)
  };
  %574() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_9113(%var_9112: Tensor[(150, 3), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) {
  %585 = fn (%var_9101: Tensor[(150, 3), float64]) -> (Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) {
    %575 = @func_7875() /* ty=(Tensor[(12, 9, 16), float32], Tensor[(12, 9, 11), float32]) */;
    %576 = cast(%var_9101, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
    %577 = cast(%var_9101, dtype="float64") /* ty=Tensor[(150, 3), float64] */;
    %578 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 4), float32] */, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
    %579 = reshape(%576, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
    %580 = reshape(%577, newshape=[6, 5, 15]) /* ty=Tensor[(6, 5, 15), float64] */;
    %581 = reshape(%578, newshape=[12, 2]) /* ty=Tensor[(12, 2), float32] */;
    %582 = @func_7793(%579, %580, %581) /* ty=(Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) */;
    %583 = %575.1;
    %584 = %582.1;
    (%583, %584, %var_9101, meta[relay.Constant][42] /* ty=Tensor[(6, 4), float32] */)
  };
  %585(%var_9112) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) */
}

def @func_9971() -> (Tensor[(12, 9, 1), float64],) {
  %588 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %586 = @func_9622() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %587 = %586.0;
    (%587,)
  };
  %588() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_10779(%var_10778: Tensor[(9, 7, 5), uint16]) -> (Tensor[(9, 7, 5), bool], Tensor[(12, 9, 1), float64]) {
  %594 = fn (%var_10757: Tensor[(9, 7, 5), uint16]) -> (Tensor[(9, 7, 5), bool], Tensor[(12, 9, 1), float64]) {
    %589 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 1, 5), uint16] */, dtype="bool") /* ty=Tensor[(9, 1, 5), bool] */;
    %590 = cast(%var_10757, dtype="bool") /* ty=Tensor[(9, 7, 5), bool] */;
    %591 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %592 = equal(%589, %590) /* ty=Tensor[(9, 7, 5), bool] */;
    %593 = %591.0;
    (%592, %593)
  };
  %594(%var_10778) /* ty=(Tensor[(9, 7, 5), bool], Tensor[(12, 9, 1), float64]) */
}

def @func_12767(%var_12755: Tensor[(14, 10, 12), uint16], %var_12756: Tensor[(14, 10, 12), uint16], %var_12764: Tensor[(24), float32]) -> (Tensor[(14, 10, 12), uint16], Tensor[(297), uint8], Tensor[(24), float32], Tensor[(297), uint8]) {
  %595 = cast(%var_12756, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
  %596 = shape_of(%var_12755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%var_12755, dtype="uint16") /* ty=Tensor[(14, 10, 12), uint16] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %599 = cast(%var_12764, dtype="float32") /* ty=Tensor[(24), float32] */;
  %600 = cast(meta[relay.Constant][44] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %601 = reshape(%599, newshape=[24]) /* ty=Tensor[(24), float32] */;
  %602 = reshape(%600, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %603 = @func_3633(%601, %602) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) */;
  %604 = bitwise_or(%597, %598) /* ty=Tensor[(14, 10, 12), uint16] */;
  %605 = %603.8;
  (%604, %605, %var_12764, meta[relay.Constant][44] /* ty=Tensor[(297), uint8] */)
}

def @func_6833() -> (Tensor[(12, 9, 1), float64],) {
  %606 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %607 = %606.0;
  (%607,)
}

def @func_7584() -> (Tensor[(12, 9, 1), float64],) {
  %608 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%608,)
}

def @func_2453(%var_2451: float32, %var_2452: Tensor[(2, 2, 6), float32]) -> Tensor[(2, 2, 6), float32] {
  @func_2449(%var_2451, %var_2452) /* ty=Tensor[(2, 2, 6), float32] */
}

def @func_13215() -> Tensor[(12, 9, 1), float64] {
  @func_13213() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_10553() -> (Tensor[(12, 9, 1), float64],) {
  %611 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %609 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %610 = %609.0;
    (%610,)
  };
  %611() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_8374(%var_8373: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(2, 2, 6), float32]) {
  %621 = fn (%var_8345: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(2, 2, 6), float32]) {
    %612 = cast(%var_8345, dtype="float32") /* ty=float32 */;
    %613 = cast(meta[relay.Constant][45] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %614 = reshape(%612, newshape=[]) /* ty=float32 */;
    %615 = reshape(%613, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %616 = @func_2449(%614, %615) /* ty=Tensor[(2, 2, 6), float32] */;
    %617 = cast(%616, dtype="float32") /* ty=Tensor[(2, 2, 6), float32] */;
    %618 = cast(%var_8345, dtype="float32") /* ty=float32 */;
    %619 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
    %620 = divide(%617, %618) /* ty=Tensor[(2, 2, 6), float32] */;
    (%619, meta[relay.Constant][45] /* ty=Tensor[(24), float32] */, %620)
  };
  %621(%var_8373) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(2, 2, 6), float32]) */
}

def @func_12605() -> (Tensor[(12, 9, 1), float64],) {
  %624 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %622 = @func_10234() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %623 = %622.0;
    (%623,)
  };
  %624() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_7797(%var_7794: Tensor[(6, 5, 15), float64], %var_7795: Tensor[(6, 5, 15), float64], %var_7796: Tensor[(12, 2), float32]) -> (Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) {
  %634 = fn (%var_7763: Tensor[(6, 5, 15), float64], %var_7764: Tensor[(6, 5, 15), float64], %var_7769: Tensor[(12, 2), float32]) -> (Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) {
    %625 = cast(%var_7764, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
    %626 = shape_of(%var_7763, dtype="int32") /* ty=Tensor[(3), int32] */;
    %627 = cast(%var_7763, dtype="float64") /* ty=Tensor[(6, 5, 15), float64] */;
    %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %629 = cast(%var_7769, dtype="float32") /* ty=Tensor[(12, 2), float32] */;
    %630 = reshape(%629, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %631 = @func_4689(%630) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) */;
    %632 = floor_mod(%627, %628) /* ty=Tensor[(6, 5, 15), float64] */;
    %633 = %631.1;
    (%632, %633, %var_7769)
  };
  %634(%var_7794, %var_7795, %var_7796) /* ty=(Tensor[(6, 5, 15), float64], Tensor[(2, 2, 6), float32], Tensor[(12, 2), float32]) */
}

def @func_9384() -> Tensor[(12, 9, 1), float64] {
  %636 = fn () -> Tensor[(12, 9, 1), float64] {
    %635 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %635.2
  };
  %636() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_9171() -> Tensor[(12, 9, 704), bool] {
  %637 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  %638 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %639 = %638.0;
  %640 = cast(%637, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %641 = cast(%639, dtype="bool") /* ty=Tensor[(704), bool] */;
  greater_equal(%640, %641) /* ty=Tensor[(12, 9, 704), bool] */
}

def @func_5975() -> (Tensor[(704), float32],) {
  %642 = @func_4358() /* ty=(Tensor[(704), float32],) */;
  %643 = %642.0;
  (%643,)
}

def @func_10513() -> (uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) {
  %654 = fn () -> (uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) {
    %644 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
    %645 = %644.5;
    %646 = cast(%645, dtype="uint8") /* ty=uint8 */;
    %647 = cast(meta[relay.Constant][46] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
    %648 = reshape(%646, newshape=[]) /* ty=uint8 */;
    %649 = reshape(%647, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
    %650 = @func_4504(%648, %649) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
    %651 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %652 = %650.0;
    %653 = %651.0;
    (%645, %652, meta[relay.Constant][46] /* ty=Tensor[(8), uint8] */, %653)
  };
  %654() /* ty=(uint64, Tensor[(4, 2, 1), uint8], Tensor[(8), uint8], Tensor[(12, 9, 1), float64]) */
}

def @func_13735() -> Tensor[(12, 9, 11), float32] {
  %656 = fn () -> Tensor[(12, 9, 11), float32] {
    %655 = @func_13340() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */;
    %655.0
  };
  %656() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_7762() -> Tensor[(12, 9, 11), float32] {
  %658 = fn () -> Tensor[(12, 9, 11), float32] {
    %657 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %657.0
  };
  %658() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_6084() -> Tensor[(704), float32] {
  %660 = fn () -> Tensor[(704), float32] {
    %659 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
    %659.1
  };
  %660() /* ty=Tensor[(704), float32] */
}

def @func_10350(%var_10304: uint64, %var_10311: Tensor[(540), int8], %var_10314: Tensor[(1, 1296), uint64]) -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(10), int16], uint64, Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint16], Tensor[(540), int8], Tensor[(16, 9, 9), float32], Tensor[(1, 1296), uint64], Tensor[(704), float32], Tensor[(910), float64], Tensor[(297), uint8]) {
  %661 = @func_9622() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %662 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %663 = cast(%var_10304, dtype="uint64") /* ty=uint64 */;
  %664 = reshape(%663, newshape=[]) /* ty=uint64 */;
  %665 = @func_4200(%664) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %666 = cast(meta[relay.Constant][47] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %667 = cast(%var_10311, dtype="int8") /* ty=Tensor[(540), int8] */;
  %668 = reshape(%666, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %669 = reshape(%667, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %670 = @func_8880(%668, %669) /* ty=(Tensor[(12, 9, ?), uint32], Tensor[(12, 9, 1), float64], Tensor[(297), uint8], Tensor[(540), int8], Tensor[(12, 9, ?), uint16]) */;
  %671 = cast(%var_10304, dtype="uint64") /* ty=uint64 */;
  %672 = cast(%var_10314, dtype="uint64") /* ty=Tensor[(1, 1296), uint64] */;
  %673 = reshape(%671, newshape=[]) /* ty=uint64 */;
  %674 = reshape(%672, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
  %675 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %676 = cast(meta[relay.Constant][48] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %677 = cast(%var_10304, dtype="uint8") /* ty=uint8 */;
  %678 = reshape(%676, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %679 = reshape(%677, newshape=[]) /* ty=uint8 */;
  %680 = @func_5437(%678, %679) /* ty=(Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) */;
  %681 = %680.5;
  %682 = cast(%681, dtype="uint8") /* ty=uint8 */;
  %683 = cast(meta[relay.Constant][47] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %684 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
  %685 = %661.0;
  %686 = %662.0;
  %687 = %665.7;
  %688 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %689 = %670.4;
  %690 = @func_417(%673, %674) /* ty=Tensor[(16, 9, 9), float32] */;
  %691 = %675.2;
  %692 = multiply(%682, %683) /* ty=Tensor[(297), uint8] */;
  (%684, %685, %686, %687, %var_10304, %688, %689, %var_10311, %690, %var_10314, %691, meta[relay.Constant][48] /* ty=Tensor[(910), float64] */, %692)
}

def @func_9279(%var_9276: float64) -> (Tensor[(1296), uint64], Tensor[(1, 11, 2), bool], float64) {
  %693 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %694 = cast(%var_9276, dtype="float64") /* ty=float64 */;
  %695 = reshape(%694, newshape=[]) /* ty=float64 */;
  %696 = @func_5305(%695) /* ty=(Tensor[(1, 11, 2), bool],) */;
  %697 = %693.3;
  %698 = %696.0;
  (%697, %698, %var_9276)
}

def @func_11217(%var_11215: Tensor[(450), float64], %var_11216: float32) -> (Tensor[(6, 4), float32], Tensor[(450), float64], Tensor[(12, 9, 704), bool], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 1), float64]) {
  %720 = fn (%var_11170: Tensor[(450), float64], %var_11206: float32) -> (Tensor[(6, 4), float32], Tensor[(450), float64], Tensor[(12, 9, 704), bool], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 1), float64]) {
    %699 = cast(%var_11170, dtype="float64") /* ty=Tensor[(450), float64] */;
    %700 = reshape(%699, newshape=[150, 3]) /* ty=Tensor[(150, 3), float64] */;
    %701 = @func_9111(%700) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(2, 2, 6), float32], Tensor[(150, 3), float64], Tensor[(6, 4), float32]) */;
    %702 = @func_8146() /* ty=Tensor[(12, 9, 704), float64] */;
    %703 = cast(%702, dtype="float32") /* ty=Tensor[(12, 9, 704), float32] */;
    %704 = tan(%703) /* ty=Tensor[(12, 9, 704), float32] */;
    %705 = @func_10832() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %706 = %705.0;
    %707 = cast(%704, dtype="bool") /* ty=Tensor[(12, 9, 704), bool] */;
    %708 = cast(%706, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %709 = @func_6328() /* ty=(Tensor[(704), float32],) */;
    %710 = cast(%var_11206, dtype="float32") /* ty=float32 */;
    %711 = %701.3;
    %712 = cast(%711, dtype="float32") /* ty=Tensor[(6, 4), float32] */;
    %713 = reshape(%710, newshape=[]) /* ty=float32 */;
    %714 = reshape(%712, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
    %715 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %716 = greater(%707, %708) /* ty=Tensor[(12, 9, 704), bool] */;
    %717 = %709.0;
    %718 = @func_2449(%713, %714) /* ty=Tensor[(2, 2, 6), float32] */;
    %719 = %715.0;
    (%711, %var_11170, %716, %717, %718, %var_11206, %719)
  };
  %720(%var_11215, %var_11216) /* ty=(Tensor[(6, 4), float32], Tensor[(450), float64], Tensor[(12, 9, 704), bool], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(12, 9, 1), float64]) */
}

def @func_1082(%var_1080: Tensor[(8, 11, 8), float32]) -> Tensor[(8, 11, 8), float32] {
  @func_1079(%var_1080) /* ty=Tensor[(8, 11, 8), float32] */
}

def @func_7508() -> Tensor[(12, 9, 1), float64] {
  @func_3291() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_3210() -> (Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) {
  %721 = cast(meta[relay.Constant][49] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %722 = cast(meta[relay.Constant][50] /* ty=Tensor[(10), int16] */, dtype="int16") /* ty=Tensor[(10), int16] */;
  %723 = reshape(%721, newshape=[]) /* ty=int16 */;
  %724 = reshape(%722, newshape=[1, 10, 1]) /* ty=Tensor[(1, 10, 1), int16] */;
  %725 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %726 = %725.0;
  %727 = cast(%726, dtype="uint32") /* ty=Tensor[(12, 9, 1), uint32] */;
  %728 = cast(meta[relay.Constant][49] /* ty=int16 */, dtype="uint32") /* ty=uint32 */;
  %729 = @func_1687(%723, %724) /* ty=Tensor[(1, 10, 1), int16] */;
  %730 = add(%727, %728) /* ty=Tensor[(12, 9, 1), uint32] */;
  (%729, meta[relay.Constant][50] /* ty=Tensor[(10), int16] */, %730)
}

def @func_10457(%var_10456: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64], Tensor[(12, 9, 1), float64], Tensor[(2, 352), float32], Tensor[(176, 4), float32], Tensor[(12, 9, 1), float64]) {
  %740 = fn (%var_10430: Tensor[(10, 4, 10), float64]) -> (Tensor[(10, 4, 10), float64], Tensor[(12, 9, 1), float64], Tensor[(2, 352), float32], Tensor[(176, 4), float32], Tensor[(12, 9, 1), float64]) {
    %731 = cast(%var_10430, dtype="float64") /* ty=Tensor[(10, 4, 10), float64] */;
    %732 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %733 = cast(meta[relay.Constant][51] /* ty=Tensor[(176, 4), float32] */, dtype="float32") /* ty=Tensor[(176, 4), float32] */;
    %734 = reshape(%733, newshape=[2, 352]) /* ty=Tensor[(2, 352), float32] */;
    %735 = @func_7295(%734) /* ty=(Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) */;
    %736 = tan(%731) /* ty=Tensor[(10, 4, 10), float64] */;
    %737 = %732.0;
    %738 = %735.1;
    %739 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
    (%736, %737, %738, meta[relay.Constant][51] /* ty=Tensor[(176, 4), float32] */, %739)
  };
  %740(%var_10456) /* ty=(Tensor[(10, 4, 10), float64], Tensor[(12, 9, 1), float64], Tensor[(2, 352), float32], Tensor[(176, 4), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_3669() -> (Tensor[(12, 9, 1), float64],) {
  @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_6894(%var_6891: Tensor[(704), float32], %var_6892: uint32, %var_6893: Tensor[(540), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) {
  %765 = fn (%var_6872: Tensor[(704), float32], %var_6884: uint32, %var_6886: Tensor[(540), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) {
    %741 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %742 = cast(meta[relay.Constant][52] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
    %743 = reshape(%742, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %744 = @func_4689(%743) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) */;
    %745 = cast(meta[relay.Constant][52] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
    %746 = rsqrt(%745) /* ty=Tensor[(24, 1), float32] */;
    %747 = cast(%746, dtype="float64") /* ty=Tensor[(24, 1), float64] */;
    %748 = @func_6083() /* ty=Tensor[(704), float32] */;
    %749 = cast(%var_6872, dtype="uint8") /* ty=Tensor[(704), uint8] */;
    %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(1), int32] */;
    %751 = cast(%748, dtype="uint8") /* ty=Tensor[(704), uint8] */;
    %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %753 = cast(%var_6884, dtype="uint32") /* ty=uint32 */;
    %754 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 96), uint32] */, dtype="uint32") /* ty=Tensor[(2, 96), uint32] */;
    %755 = cast(%var_6886, dtype="int8") /* ty=Tensor[(540), int8] */;
    %756 = reshape(%753, newshape=[]) /* ty=uint32 */;
    %757 = reshape(%754, newshape=[192]) /* ty=Tensor[(192), uint32] */;
    %758 = reshape(%755, newshape=[540, 1]) /* ty=Tensor[(540, 1), int8] */;
    %759 = @func_3836(%756, %757, %758) /* ty=(Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) */;
    %760 = %741.0;
    %761 = %744.3;
    %762 = atan(%747) /* ty=Tensor[(24, 1), float64] */;
    %763 = logical_xor(%751, %752) /* ty=Tensor[(704), uint8] */;
    %764 = %759.2;
    (%760, %761, %762, %763, %764, %var_6884, meta[relay.Constant][53] /* ty=Tensor[(2, 96), uint32] */, %var_6886)
  };
  %765(%var_6891, %var_6892, %var_6893) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) */
}

def @func_10080() -> Tensor[(12, 9, 1), float64] {
  %766 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %766.0
}

def @func_11418() -> (Tensor[(12, 9, ?), float32],) {
  %769 = fn () -> (Tensor[(12, 9, ?), float32],) {
    %767 = @func_8824() /* ty=(Tensor[(12, 9, ?), float32],) */;
    %768 = %767.0;
    (%768,)
  };
  %769() /* ty=(Tensor[(12, 9, ?), float32],) */
}

def @func_10379() -> (Tensor[(1296), uint64],) {
  @func_10377() /* ty=(Tensor[(1296), uint64],) */
}

def @func_10920() -> (Tensor[(12, 9, 1), float64],) {
  %772 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %770 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_4307() -> (Tensor[(12, 9, 1), float64],) {
  %775 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %773 = @func_4079() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %774 = %773.0;
    (%774,)
  };
  %775() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_5737(%var_5673: Tensor[(704), float32], %var_5718: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(704), uint16], Tensor[(12, 9, 1), float64], uint32, uint32, Tensor[(540), int8]) {
  %776 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %777 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %778 = %777.1;
  %779 = cast(%var_5673, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(1), int32] */;
  %781 = cast(%778, dtype="uint16") /* ty=Tensor[(704), uint16] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %783 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %784 = cast(%var_5718, dtype="uint32") /* ty=uint32 */;
  %785 = cast(meta[relay.Constant][54] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %786 = reshape(%784, newshape=[]) /* ty=uint32 */;
  %787 = reshape(%785, newshape=[270, 2]) /* ty=Tensor[(270, 2), int8] */;
  %788 = @func_5054(%786, %787) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %789 = %776.0;
  %790 = add(%781, %782) /* ty=Tensor[(704), uint16] */;
  %791 = %783.0;
  %792 = %788.2;
  (%789, %790, %791, %792, %var_5718, meta[relay.Constant][54] /* ty=Tensor[(540), int8] */)
}

def @func_10377() -> (Tensor[(1296), uint64],) {
  %793 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %794 = %793.3;
  (%794,)
}

def @func_7131(%var_7088: uint64, %var_7102: Tensor[(4, 48), uint32]) -> (Tensor[(12, 9, ?), int64], Tensor[(12, 9, 1), float64], uint64, Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], Tensor[(4, 48), uint32], Tensor[(704), float32]) {
  %795 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %796 = %795.0;
  %797 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 9, 1), float64] */, dtype="int64") /* ty=Tensor[(12, 9, 1), int64] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="int64") /* ty=Tensor[(12, 9, 1), int64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %801 = cast(%var_7088, dtype="uint64") /* ty=uint64 */;
  %802 = reshape(%801, newshape=[]) /* ty=uint64 */;
  %803 = @func_4200(%802) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */;
  %804 = cast(%var_7088, dtype="uint32") /* ty=uint32 */;
  %805 = cast(%var_7102, dtype="uint32") /* ty=Tensor[(4, 48), uint32] */;
  %806 = reshape(%804, newshape=[]) /* ty=uint32 */;
  %807 = reshape(%805, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
  %808 = @func_4817(%806, %807) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
  %809 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %810 = left_shift(%799, %800) /* ty=Tensor[(12, 9, ?), int64] */;
  %811 = %803.3;
  %812 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
  %813 = %808.1;
  %814 = %809.1;
  (%810, %811, %var_7088, %812, %813, %var_7102, %814)
}

def @func_2959(%var_2944: float32, %var_2945: Tensor[(16, 7, 15), float32]) -> (Tensor[(16, 7, 15), float32], Tensor[(540), int8], Tensor[(1, 192), uint32], Tensor[(540), int8]) {
  %815 = cast(%var_2944, dtype="float32") /* ty=float32 */;
  %816 = cast(%var_2945, dtype="float32") /* ty=Tensor[(16, 7, 15), float32] */;
  %817 = cast(%var_2944, dtype="uint32") /* ty=uint32 */;
  %818 = cast(meta[relay.Constant][56] /* ty=Tensor[(1, 192), uint32] */, dtype="uint32") /* ty=Tensor[(1, 192), uint32] */;
  %819 = cast(meta[relay.Constant][57] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %820 = reshape(%817, newshape=[]) /* ty=uint32 */;
  %821 = reshape(%818, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %822 = reshape(%819, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %823 = @func_2049(%820, %821, %822) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %824 = power(%815, %816) /* ty=Tensor[(16, 7, 15), float32] */;
  %825 = %823.1;
  (%824, %825, meta[relay.Constant][56] /* ty=Tensor[(1, 192), uint32] */, meta[relay.Constant][57] /* ty=Tensor[(540), int8] */)
}

def @func_9473(%var_9456: Tensor[(1, 24), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], uint8, Tensor[(910), uint16], Tensor[(704), uint8], Tensor[(704), float32], Tensor[(1, 24), float64], Tensor[(270, 2), uint8]) {
  %826 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
  %827 = cast(meta[relay.Constant][58] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %828 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %829 = reshape(%827, newshape=[910]) /* ty=Tensor[(910), float64] */;
  %830 = reshape(%828, newshape=[]) /* ty=uint8 */;
  %831 = @func_5437(%829, %830) /* ty=(Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(12, 9, ?), float64], Tensor[(12, 9, 1), float64], Tensor[(704), float32], uint8, Tensor[(8, 1), uint8]) */;
  %832 = cast(meta[relay.Constant][60] /* ty=Tensor[(910), float64] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %833 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(910), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %834 = cast(meta[relay.Constant][58] /* ty=Tensor[(910), float64] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %836 = cast(meta[relay.Constant][61] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %837 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %838 = cast(meta[relay.Constant][62] /* ty=Tensor[(270, 2), int8] */, dtype="int8") /* ty=Tensor[(270, 2), int8] */;
  %839 = reshape(%836, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %840 = reshape(%837, newshape=[]) /* ty=uint32 */;
  %841 = reshape(%838, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %842 = @func_6890(%839, %840, %841) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(24), float32], Tensor[(24, 1), float64], Tensor[(704), uint8], uint32, uint32, Tensor[(2, 96), uint32], Tensor[(540), int8]) */;
  %843 = cast(%var_9456, dtype="float64") /* ty=Tensor[(1, 24), float64] */;
  %844 = cast(meta[relay.Constant][61] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %845 = cast(meta[relay.Constant][59] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %846 = reshape(%843, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %847 = reshape(%844, newshape=[1, 704]) /* ty=Tensor[(1, 704), float32] */;
  %848 = reshape(%845, newshape=[]) /* ty=uint8 */;
  %849 = @func_5579(%846, %847, %848) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */;
  %850 = %849.5;
  %851 = cast(meta[relay.Constant][62] /* ty=Tensor[(270, 2), int8] */, dtype="uint8") /* ty=Tensor[(270, 2), uint8] */;
  %852 = cast(%850, dtype="uint8") /* ty=uint8 */;
  %853 = %826.2;
  %854 = %831.0;
  %855 = minimum(%834, %835) /* ty=Tensor[(910), uint16] */;
  %856 = %842.3;
  %857 = bitwise_xor(%851, %852) /* ty=Tensor[(270, 2), uint8] */;
  (%853, %854, meta[relay.Constant][59] /* ty=uint8 */, %855, %856, meta[relay.Constant][61] /* ty=Tensor[(704), float32] */, %var_9456, %857)
}

def @func_9586() -> (Tensor[(12, 9, 1), float64],) {
  %858 = @func_9529() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %859 = %858.0;
  (%859,)
}

def @func_3299() -> Tensor[(10), int16] {
  @func_3297() /* ty=Tensor[(10), int16] */
}

def @func_4273() -> (Tensor[(12, 9, 1), float64], Tensor[(704), float32]) {
  %860 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %861 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
  %862 = %860.0;
  %863 = %861.1;
  (%862, %863)
}

def @func_10587() -> Tensor[(12, 9, 1), float64] {
  %865 = fn () -> Tensor[(12, 9, 1), float64] {
    %864 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %864.0
  };
  %865() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_4203(%var_4201: uint64) -> (Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) {
  @func_4200(%var_4201) /* ty=(Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), float64], Tensor[(10), int16]) */
}

def @func_12115() -> Tensor[(12, 9, 1), float64] {
  @func_12113() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_12752() -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) {
  @func_12750() /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) */
}

def @func_12772(%var_12769: Tensor[(14, 10, 12), uint16], %var_12770: Tensor[(14, 10, 12), uint16], %var_12771: Tensor[(24), float32]) -> (Tensor[(14, 10, 12), uint16], Tensor[(297), uint8], Tensor[(24), float32], Tensor[(297), uint8]) {
  @func_12767(%var_12769, %var_12770, %var_12771) /* ty=(Tensor[(14, 10, 12), uint16], Tensor[(297), uint8], Tensor[(24), float32], Tensor[(297), uint8]) */
}

def @func_10235() -> (Tensor[(12, 9, 1), float64],) {
  %868 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %866 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %867 = %866.0;
    (%867,)
  };
  %868() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_7267(%var_7264: Tensor[(12, 9, 1), float64], %var_7265: Tensor[(297), uint8], %var_7266: Tensor[(18, 30), int8]) -> (Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) {
  %902 = fn (%var_7191: Tensor[(12, 9, 1), float64], %var_7198: Tensor[(297), uint8], %var_7234: Tensor[(18, 30), int8]) -> (Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) {
    %869 = cast(meta[relay.Constant][63] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %870 = reshape(%869, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
    %871 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %872 = %871.0;
    %873 = cast(%872, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %874 = reshape(%873, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
    %875 = @func_3745(%874) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) */;
    %876 = cast(%var_7191, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %877 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%872, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %880 = cast(%var_7198, dtype="float32") /* ty=Tensor[(297), float32] */;
    %881 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(297), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %882 = cast(meta[relay.Constant][63] /* ty=Tensor[(297), uint8] */, dtype="float32") /* ty=Tensor[(297), float32] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?), float32] */;
    %884 = cast(%var_7198, dtype="bool") /* ty=Tensor[(297), bool] */;
    %885 = cast(%872, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %886 = cast(meta[relay.Constant][64] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %887 = reshape(%886, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %888 = @func_3491(%887) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %889 = cast(%var_7234, dtype="int8") /* ty=Tensor[(18, 30), int8] */;
    %890 = reshape(%889, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
    %891 = @func_1466(%890) /* ty=(Tensor[(9, 4, 15), int8],) */;
    %892 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %893 = @func_1101(%870) /* ty=Tensor[(3, 9, 11), uint8] */;
    %894 = %875.2;
    %895 = mod(%878, %879) /* ty=Tensor[(12, 9, ?), float64] */;
    %896 = divide(%882, %883) /* ty=Tensor[(297), float32] */;
    %897 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    %898 = less(%884, %885) /* ty=Tensor[(12, 9, 297), bool] */;
    %899 = %888.2;
    %900 = %891.0;
    %901 = %892.0;
    (%893, %894, %895, %896, %897, %898, %899, meta[relay.Constant][64] /* ty=Tensor[(704), float32] */, %900, %var_7234, %901)
  };
  %902(%var_7264, %var_7265, %var_7266) /* ty=(Tensor[(3, 9, 11), uint8], Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float64], Tensor[(297), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 297), bool], Tensor[(704), float32], Tensor[(704), float32], Tensor[(9, 4, 15), int8], Tensor[(18, 30), int8], Tensor[(12, 9, 1), float64]) */
}

def @func_11882() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %903 = @func_10234() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %904 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %905 = @func_10919() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %906 = %903.0;
  %907 = %904.0;
  %908 = %905.0;
  (%906, %907, %908)
}

def @func_3802() -> Tensor[(12, 9, 1), float64] {
  @func_3800() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_7063(%var_7060: Tensor[(12, 15, 16), float64], %var_7061: Tensor[(12, 15, 16), float64], %var_7062: Tensor[(1296), uint64]) -> (Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) {
  %932 = fn (%var_6994: Tensor[(12, 15, 16), float64], %var_6995: Tensor[(12, 15, 16), float64], %var_7032: Tensor[(1296), uint64]) -> (Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) {
    %909 = cast(%var_6995, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %910 = shape_of(%var_6994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %911 = cast(%var_6994, dtype="float64") /* ty=Tensor[(12, 15, 16), float64] */;
    %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %913 = cast(%var_6995, dtype="float32") /* ty=Tensor[(12, 15, 16), float32] */;
    %914 = cast(meta[relay.Constant][65] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %915 = reshape(%914, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
    %916 = cast(meta[relay.Constant][66] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %917 = cast(%var_7032, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
    %918 = reshape(%916, newshape=[]) /* ty=uint64 */;
    %919 = reshape(%917, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint64] */;
    %920 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %921 = cast(meta[relay.Constant][67] /* ty=Tensor[(704, 1), float32] */, dtype="float32") /* ty=Tensor[(704, 1), float32] */;
    %922 = reshape(%921, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %923 = @func_6200(%922) /* ty=(Tensor[(704), float32], Tensor[(704), float32]) */;
    %924 = cast(meta[relay.Constant][65] /* ty=Tensor[(297), uint8] */, dtype="float32") /* ty=Tensor[(297), float32] */;
    %925 = mod(%911, %912) /* ty=Tensor[(12, 15, 16), float64] */;
    %926 = log10(%913) /* ty=Tensor[(12, 15, 16), float32] */;
    %927 = @func_1101(%915) /* ty=Tensor[(3, 9, 11), uint8] */;
    %928 = @func_417(%918, %919) /* ty=Tensor[(16, 9, 9), float32] */;
    %929 = %920.0;
    %930 = %923.1;
    %931 = log10(%924) /* ty=Tensor[(297), float32] */;
    (%925, %926, %927, %928, meta[relay.Constant][66] /* ty=uint64 */, %var_7032, %929, %930, meta[relay.Constant][67] /* ty=Tensor[(704, 1), float32] */, %931)
  };
  %932(%var_7060, %var_7061, %var_7062) /* ty=(Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) */
}

def @func_6835() -> (Tensor[(12, 9, 1), float64],) {
  @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_9282(%var_9280: float64) -> (Tensor[(1296), uint64], Tensor[(1, 11, 2), bool], float64) {
  @func_9279(%var_9280) /* ty=(Tensor[(1296), uint64], Tensor[(1, 11, 2), bool], float64) */
}

def @func_4817(%var_4797: uint32, %var_4798: Tensor[(24, 8), uint32]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) {
  %933 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %934 = cast(%var_4797, dtype="uint32") /* ty=uint32 */;
  %935 = cast(%var_4798, dtype="uint32") /* ty=Tensor[(24, 8), uint32] */;
  %936 = cast(meta[relay.Constant][68] /* ty=Tensor[(54, 10), int8] */, dtype="int8") /* ty=Tensor[(54, 10), int8] */;
  %937 = reshape(%934, newshape=[]) /* ty=uint32 */;
  %938 = reshape(%935, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %939 = reshape(%936, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %940 = @func_2049(%937, %938, %939) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %941 = %933.0;
  %942 = %940.2;
  (%941, %942, %var_4797, %var_4798, meta[relay.Constant][68] /* ty=Tensor[(54, 10), int8] */)
}

def @func_11988() -> Tensor[(12, 9, 1), float64] {
  @func_11986() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_4692(%var_4690: Tensor[(24), float32]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) {
  @func_4689(%var_4690) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) */
}

def @func_5579(%var_5517: Tensor[(24), float64], %var_5531: Tensor[(1, 704), float32], %var_5547: uint8) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) {
  %943 = cast(%var_5517, dtype="float64") /* ty=Tensor[(24), float64] */;
  %944 = reshape(%943, newshape=[8, 1, 3]) /* ty=Tensor[(8, 1, 3), float64] */;
  %945 = @func_4610(%944) /* ty=(Tensor[(8, 1, 3), float64],) */;
  %946 = cast(%var_5531, dtype="float32") /* ty=Tensor[(1, 704), float32] */;
  %947 = reshape(%946, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %948 = @func_3491(%947) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %949 = cast(%var_5547, dtype="uint8") /* ty=uint8 */;
  %950 = cast(meta[relay.Constant][69] /* ty=Tensor[(8), uint8] */, dtype="uint8") /* ty=Tensor[(8), uint8] */;
  %951 = reshape(%949, newshape=[]) /* ty=uint8 */;
  %952 = reshape(%950, newshape=[4, 2, 1]) /* ty=Tensor[(4, 2, 1), uint8] */;
  %953 = @func_4504(%951, %952) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */;
  %954 = %953.0;
  %955 = cast(%var_5531, dtype="uint64") /* ty=Tensor[(1, 704), uint64] */;
  %956 = cast(%954, dtype="uint64") /* ty=Tensor[(4, 2, 1), uint64] */;
  %957 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %958 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  %959 = %945.0;
  %960 = %948.0;
  %961 = bitwise_and(%955, %956) /* ty=Tensor[(4, 2, 704), uint64] */;
  (%957, %958, %959, %var_5517, %960, %var_5547, meta[relay.Constant][69] /* ty=Tensor[(8), uint8] */, %961)
}

def @func_12848(%var_12846: int16, %var_12847: Tensor[(16, 16, 13), int16]) -> (Tensor[(16, 16, 13), int16], Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], Tensor[(10, 910), bool], Tensor[(12, 9, ?), float32], Tensor[(10, 910), float64]) {
  @func_12844(%var_12846, %var_12847) /* ty=(Tensor[(16, 16, 13), int16], Tensor[(12, 9, 1), float64], Tensor[(13, 5, 14), float64], Tensor[(10, 910), bool], Tensor[(12, 9, ?), float32], Tensor[(10, 910), float64]) */
}

def @func_13031() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float32]) {
  %972 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float32]) {
    %962 = @func_10211() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %963 = @func_11018() /* ty=Tensor[(12, 9, 1), float64] */;
    %964 = @func_6505() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */;
    %965 = %964.2;
    %966 = cast(%965, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %967 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
    %968 = cast(%963, dtype="float32") /* ty=Tensor[(12, 9, 1), float32] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %970 = %962.0;
    %971 = minimum(%968, %969) /* ty=Tensor[(12, 9, ?), float32] */;
    (%970, %971)
  };
  %972() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), float32]) */
}

def @func_11481() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %978 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
    %973 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %974 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %975 = %973.0;
    %976 = %974.0;
    %977 = @func_7761() /* ty=Tensor[(12, 9, 11), float32] */;
    (%975, %976, %977)
  };
  %978() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */
}

def @func_9724() -> (Tensor[(704), float32],) {
  %979 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %980 = %979.0;
  (%980,)
}

def @func_12682(%var_12666: Tensor[(2880), float64]) -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) {
  %981 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %982 = cast(meta[relay.Constant][70] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %983 = cast(meta[relay.Constant][70] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %984 = cast(meta[relay.Constant][71] /* ty=Tensor[(1296), uint64] */, dtype="uint64") /* ty=Tensor[(1296), uint64] */;
  %985 = reshape(%982, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float64] */;
  %986 = reshape(%983, newshape=[12, 15, 16]) /* ty=Tensor[(12, 15, 16), float64] */;
  %987 = reshape(%984, newshape=[1296]) /* ty=Tensor[(1296), uint64] */;
  %988 = @func_7059(%985, %986, %987) /* ty=(Tensor[(12, 15, 16), float64], Tensor[(12, 15, 16), float32], Tensor[(3, 9, 11), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(12, 9, 11), float32], Tensor[(704), float32], Tensor[(704, 1), float32], Tensor[(297), float32]) */;
  %989 = cast(meta[relay.Constant][70] /* ty=Tensor[(2880), float64] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %990 = cast(%var_12666, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %991 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(2880), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %992 = cast(meta[relay.Constant][70] /* ty=Tensor[(2880), float64] */, dtype="int32") /* ty=Tensor[(2880), int32] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?), int32] */;
  %994 = %981.0;
  %995 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %996 = %988.0;
  %997 = acosh(%989) /* ty=Tensor[(2880), float32] */;
  %998 = bitwise_xor(%992, %993) /* ty=Tensor[(2880), int32] */;
  (%994, %995, %996, meta[relay.Constant][71] /* ty=Tensor[(1296), uint64] */, %997, %998)
}

def @func_8076() -> (Tensor[(12, 9, 11), float32],) {
  %999 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1000 = %999.0;
  (%1000,)
}

def @func_11744() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
  @func_11742() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_5057(%var_5055: uint32, %var_5056: Tensor[(270, 2), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  %1013 = fn (%var_4998: uint32, %var_5000: Tensor[(270, 2), int8]) -> (Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
    %1001 = cast(%var_4998, dtype="uint32") /* ty=uint32 */;
    %1002 = cast(meta[relay.Constant][72] /* ty=Tensor[(96, 2), uint32] */, dtype="uint32") /* ty=Tensor[(96, 2), uint32] */;
    %1003 = cast(%var_5000, dtype="int8") /* ty=Tensor[(270, 2), int8] */;
    %1004 = reshape(%1001, newshape=[]) /* ty=uint32 */;
    %1005 = reshape(%1002, newshape=[192]) /* ty=Tensor[(192), uint32] */;
    %1006 = reshape(%1003, newshape=[540, 1]) /* ty=Tensor[(540, 1), int8] */;
    %1007 = @func_3836(%1004, %1005, %1006) /* ty=(Tensor[(10), int16], Tensor[(12, 1, 16), uint32], uint32, Tensor[(192), uint32], Tensor[(540, 1), int8], Tensor[(10), int16]) */;
    %1008 = cast(meta[relay.Constant][73] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %1009 = reshape(%1008, newshape=[8, 11, 8]) /* ty=Tensor[(8, 11, 8), float32] */;
    %1010 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
    %1011 = %1007.4;
    %1012 = @func_1079(%1009) /* ty=Tensor[(8, 11, 8), float32] */;
    (%1010, %1011, %var_4998, meta[relay.Constant][72] /* ty=Tensor[(96, 2), uint32] */, %var_5000, %1012, meta[relay.Constant][73] /* ty=Tensor[(704), float32] */)
  };
  %1013(%var_5055, %var_5056) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(540, 1), int8], uint32, Tensor[(96, 2), uint32], Tensor[(270, 2), int8], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */
}

def @func_1469(%var_1467: Tensor[(9, 4, 15), int8]) -> (Tensor[(9, 4, 15), int8],) {
  @func_1466(%var_1467) /* ty=(Tensor[(9, 4, 15), int8],) */
}

def @func_11819() -> Tensor[(12, 9, 1), float64] {
  @func_11817() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_5853(%var_5798: bool, %var_5799: Tensor[(1, 8, 2), bool]) -> (Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) {
  %1014 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
  %1015 = cast(%var_5798, dtype="bool") /* ty=bool */;
  %1016 = cast(%var_5799, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %1017 = logical_and(%1015, %1016) /* ty=Tensor[(1, 8, 2), bool] */;
  %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(1, 8, 2), float32] */;
  %1019 = log(%1018) /* ty=Tensor[(1, 8, 2), float32] */;
  %1020 = cast(%var_5798, dtype="bool") /* ty=bool */;
  %1021 = cast(%1019, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %1022 = @func_3297() /* ty=Tensor[(10), int16] */;
  %1023 = %1014.0;
  %1024 = greater_equal(%1020, %1021) /* ty=Tensor[(1, 8, 2), bool] */;
  (%1022, %1023, %1024)
}

def @func_11817() -> Tensor[(12, 9, 1), float64] {
  %1025 = @func_7937() /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) */;
  %1025.1
}

def @func_12042(%var_12013: float32) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24, 1), float32]) {
  %1026 = cast(%var_12013, dtype="float32") /* ty=float32 */;
  %1027 = cast(meta[relay.Constant][74] /* ty=Tensor[(24, 1), float32] */, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %1028 = reshape(%1026, newshape=[]) /* ty=float32 */;
  %1029 = reshape(%1027, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %1030 = @func_9383() /* ty=Tensor[(12, 9, 1), float64] */;
  %1031 = @func_2449(%1028, %1029) /* ty=Tensor[(2, 2, 6), float32] */;
  (%1030, %1031, %var_12013, meta[relay.Constant][74] /* ty=Tensor[(24, 1), float32] */)
}

def @func_11248() -> (Tensor[(12, 9, 1), float64],) {
  %1032 = @func_9018() /* ty=Tensor[(12, 9, 1), float64] */;
  (%1032,)
}

def @func_3120() -> (Tensor[(12, 9, 1), float64],) {
  %1033 = cast(meta[relay.Constant][75] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %1034 = rsqrt(%1033) /* ty=Tensor[(12, 9, 1), float64] */;
  (%1034,)
}

def @func_10082() -> Tensor[(12, 9, 1), float64] {
  @func_10080() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_13202() -> (Tensor[(12, 9, 1), float64],) {
  %1037 = fn () -> (Tensor[(12, 9, 1), float64],) {
    %1035 = @func_8259() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %1036 = %1035.1;
    (%1036,)
  };
  %1037() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_13903(%var_13900: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), bool], Tensor[(297), uint8]) {
  %1038 = cast(%var_13900, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %1039 = reshape(%1038, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %1040 = @func_8581(%1039) /* ty=(Tensor[(9, 4, 15), int8], Tensor[(704), float32], Tensor[(12, 9, 16), bool], Tensor[(704), bool], Tensor[(12, 9, 1), float64], uint64, Tensor[(297), uint8], uint64, Tensor[(12, 9, 1), float64]) */;
  %1041 = @func_10102() /* ty=Tensor[(12, 9, 1), float64] */;
  %1042 = %1040.3;
  (%1041, %1042, %var_13900)
}

def @func_9019() -> Tensor[(12, 9, 1), float64] {
  %1044 = fn () -> Tensor[(12, 9, 1), float64] {
    %1043 = @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1043.0
  };
  %1044() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_6202(%var_6201: Tensor[(704), float32]) -> (Tensor[(704), float32], Tensor[(704), float32]) {
  %1053 = fn (%var_6191: Tensor[(704), float32]) -> (Tensor[(704), float32], Tensor[(704), float32]) {
    %1045 = @func_3681() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(704), float32]) */;
    %1046 = %1045.2;
    %1047 = cast(%var_6191, dtype="float32") /* ty=Tensor[(704), float32] */;
    %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1049 = cast(%1046, dtype="float32") /* ty=Tensor[(704), float32] */;
    %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1051 = floor_divide(%1049, %1050) /* ty=Tensor[(704), float32] */;
    %1052 = @func_6083() /* ty=Tensor[(704), float32] */;
    (%1051, %1052)
  };
  %1053(%var_6201) /* ty=(Tensor[(704), float32], Tensor[(704), float32]) */
}

def @func_13213() -> Tensor[(12, 9, 1), float64] {
  %1054 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1054.0
}

def @func_4976(%var_4974: Tensor[(704), float32]) -> (Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  @func_4973(%var_4974) /* ty=(Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */
}

def @func_13634() -> (float32,) {
  @func_13632() /* ty=(float32,) */
}

def @func_6329() -> (Tensor[(704), float32],) {
  %1057 = fn () -> (Tensor[(704), float32],) {
    %1055 = @func_4593() /* ty=(Tensor[(704), float32],) */;
    %1056 = %1055.0;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(704), float32],) */
}

def @func_9421() -> (Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) {
  %1058 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %1059 = @func_8724() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(16, 9, 9), float32], Tensor[(112, 2), float64], Tensor[(1296), uint64], Tensor[(16, 9, 9), float32], uint64) */;
  %1060 = %1058.0;
  %1061 = cast(%1060, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1062 = reshape(%1061, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %1063 = @func_8038(%1062) /* ty=(Tensor[(12, 9, ?), float32], Tensor[(4, 2, 1), uint8], uint8, Tensor[(4, 2), uint8], Tensor[(2, 2, 6), float32], Tensor[(2, 12), float32], Tensor[(910), float64], Tensor[(704), float32]) */;
  %1064 = %1059.5;
  %1065 = %1063.5;
  (%1060, %1064, %1065)
}

def @func_13632() -> (float32,) {
  %1066 = @func_9334() /* ty=(Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) */;
  %1067 = %1066.3;
  (%1067,)
}

def @func_5741(%var_5739: Tensor[(704), float32], %var_5740: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(704), uint16], Tensor[(12, 9, 1), float64], uint32, uint32, Tensor[(540), int8]) {
  @func_5737(%var_5739, %var_5740) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), uint16], Tensor[(12, 9, 1), float64], uint32, uint32, Tensor[(540), int8]) */
}

def @func_4973(%var_4959: Tensor[(704), float32]) -> (Tensor[(704), float64], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  %1068 = @func_4593() /* ty=(Tensor[(704), float32],) */;
  %1069 = %1068.0;
  %1070 = cast(%var_4959, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1071 = shape_of(%1069, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1072 = cast(%1069, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1074 = cast(meta[relay.Constant][76] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %1075 = reshape(%1074, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %1076 = @func_1466(%1075) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %1077 = divide(%1072, %1073) /* ty=Tensor[(704), float64] */;
  %1078 = %1076.0;
  (%1077, %1078, meta[relay.Constant][76] /* ty=Tensor[(540), int8] */)
}

def @func_12577(%var_12576: Tensor[(704), float32]) -> (Tensor[(704), uint8],) {
  %1086 = fn (%var_12570: Tensor[(704), float32]) -> (Tensor[(704), uint8],) {
    %1079 = @func_10569() /* ty=(Tensor[(704), float32],) */;
    %1080 = %1079.0;
    %1081 = cast(%var_12570, dtype="uint8") /* ty=Tensor[(704), uint8] */;
    %1082 = shape_of(%1080, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1083 = cast(%1080, dtype="uint8") /* ty=Tensor[(704), uint8] */;
    %1084 = dyn.reshape(%1081, %1082, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1085 = subtract(%1083, %1084) /* ty=Tensor[(704), uint8] */;
    (%1085,)
  };
  %1086(%var_12576) /* ty=(Tensor[(704), uint8],) */
}

def @func_3633(%var_3604: Tensor[(24), float32], %var_3611: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) {
  %1087 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1088 = cast(meta[relay.Constant][77] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1089 = reshape(%1088, newshape=[704]) /* ty=Tensor[(704), float32] */;
  %1090 = @func_3491(%1089) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %1091 = cast(-2.07478f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1092 = cast(%var_3604, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1093 = reshape(%1091, newshape=[]) /* ty=float32 */;
  %1094 = reshape(%1092, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %1095 = cast(%var_3611, dtype="uint8") /* ty=Tensor[(297), uint8] */;
  %1096 = cast(-2.07478f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
  %1097 = reshape(%1095, newshape=[297]) /* ty=Tensor[(297), uint8] */;
  %1098 = reshape(%1096, newshape=[]) /* ty=uint64 */;
  %1099 = @func_1254(%1097, %1098) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
  %1100 = %1087.0;
  %1101 = @func_3297() /* ty=Tensor[(10), int16] */;
  %1102 = %1090.1;
  %1103 = @func_2449(%1093, %1094) /* ty=Tensor[(2, 2, 6), float32] */;
  %1104 = %1099.7;
  (%1100, %1101, %1102, meta[relay.Constant][77] /* ty=Tensor[(704), float32] */, %1103, -2.07478f /* ty=float32 */, %var_3604, %1104, %var_3611)
}

def @func_13906(%var_13904: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(704), bool], Tensor[(297), uint8]) {
  @func_13903(%var_13904) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), bool], Tensor[(297), uint8]) */
}

def @func_6993() -> Tensor[(12, 9, 1), float64] {
  @func_6991() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_8998() -> Tensor[(12, 9, 1), float64] {
  %1106 = fn () -> Tensor[(12, 9, 1), float64] {
    %1105 = @func_4002() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1105.0
  };
  %1106() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_3212() -> (Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) {
  @func_3210() /* ty=(Tensor[(1, 10, 1), int16], Tensor[(10), int16], Tensor[(12, 9, 1), uint32]) */
}

def @func_7937() -> (Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(54, 2), float64], Tensor[(12, 9, 11), float32], Tensor[(216), float64]) {
  %1107 = @func_5975() /* ty=(Tensor[(704), float32],) */;
  %1108 = cast(meta[relay.Constant][78] /* ty=Tensor[(54, 2), float64] */, dtype="float64") /* ty=Tensor[(54, 2), float64] */;
  %1109 = reshape(%1108, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), float64] */;
  %1110 = @func_3745(%1109) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) */;
  %1111 = cast(meta[relay.Constant][79] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1112 = reshape(%1111, newshape=[12, 9, 2]) /* ty=Tensor[(12, 9, 2), float64] */;
  %1113 = @func_6614(%1112) /* ty=(Tensor[(12, 9, 2), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(297), uint8], Tensor[(96, 2), uint32], uint32, Tensor[(540), int8], Tensor[(12, 9, 11), float32]) */;
  %1114 = %1107.0;
  %1115 = %1110.2;
  %1116 = %1113.8;
  (%1114, %1115, meta[relay.Constant][78] /* ty=Tensor[(54, 2), float64] */, %1116, meta[relay.Constant][79] /* ty=Tensor[(216), float64] */)
}

def @func_4881() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %1117 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1118 = @func_3291() /* ty=Tensor[(12, 9, 1), float64] */;
  %1119 = %1117.0;
  %1120 = @func_3800() /* ty=Tensor[(12, 9, 1), float64] */;
  (%1118, %1119, %1120)
}

def @func_7510() -> Tensor[(12, 9, 1), float64] {
  @func_7508() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_5584(%var_5581: Tensor[(24), float64], %var_5582: Tensor[(1, 704), float32], %var_5583: uint8) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) {
  @func_5579(%var_5581, %var_5582, %var_5583) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(8, 1, 3), float64], Tensor[(24), float64], Tensor[(10), int16], uint8, Tensor[(8), uint8], Tensor[(4, 2, 704), uint64]) */
}

def @func_1691(%var_1689: int16, %var_1690: Tensor[(1, 10, 1), int16]) -> Tensor[(1, 10, 1), int16] {
  @func_1687(%var_1689, %var_1690) /* ty=Tensor[(1, 10, 1), int16] */
}

def @func_4689(%var_4676: Tensor[(24), float32]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32]) {
  %1121 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1122 = cast(-2.63688f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1123 = cast(%var_4676, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1124 = reshape(%1122, newshape=[]) /* ty=float32 */;
  %1125 = reshape(%1123, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %1126 = %1121.0;
  %1127 = @func_2449(%1124, %1125) /* ty=Tensor[(2, 2, 6), float32] */;
  (%1126, %1127, -2.63688f /* ty=float32 */, %var_4676)
}

def @func_13179(%var_13092: Tensor[(12, 9, 1), float64], %var_13157: uint32, %var_13158: Tensor[(192), uint32]) -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(540), int8], uint32, Tensor[(192), uint32], Tensor[(1, 540), int8], Tensor[(12, 15, 16), float64], Tensor[(2880), float64]) {
  %1128 = @func_3291() /* ty=Tensor[(12, 9, 1), float64] */;
  %1129 = cast(%var_13092, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%1128, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1133 = @func_9970() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1134 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %1135 = cast(%var_13157, dtype="uint32") /* ty=uint32 */;
  %1136 = cast(%var_13158, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1137 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 540), int8] */, dtype="int8") /* ty=Tensor[(1, 540), int8] */;
  %1138 = reshape(%1135, newshape=[]) /* ty=uint32 */;
  %1139 = reshape(%1136, newshape=[12, 1, 16]) /* ty=Tensor[(12, 1, 16), uint32] */;
  %1140 = reshape(%1137, newshape=[540]) /* ty=Tensor[(540), int8] */;
  %1141 = @func_2049(%1138, %1139, %1140) /* ty=(Tensor[(12, 1, 16), uint32], Tensor[(540), int8], Tensor[(9, 4, 15), float32]) */;
  %1142 = cast(meta[relay.Constant][81] /* ty=Tensor[(2880), float64] */, dtype="float64") /* ty=Tensor[(2880), float64] */;
  %1143 = reshape(%1142, newshape=[2880]) /* ty=Tensor[(2880), float64] */;
  %1144 = @func_12682(%1143) /* ty=(Tensor[(704), float32], Tensor[(12, 9, 1), float64], Tensor[(12, 15, 16), float64], Tensor[(1296), uint64], Tensor[(2880), float32], Tensor[(2880), int32]) */;
  %1145 = logical_or(%1131, %1132) /* ty=Tensor[(12, 9, ?), bool] */;
  %1146 = %1133.0;
  %1147 = %1134.1;
  %1148 = %1141.1;
  %1149 = %1144.2;
  (%1145, %1146, %1147, %1148, %var_13157, %var_13158, meta[relay.Constant][80] /* ty=Tensor[(1, 540), int8] */, %1149, meta[relay.Constant][81] /* ty=Tensor[(2880), float64] */)
}

def @func_12287(%var_12285: uint64) -> (Tensor[(1, 11, 2), bool], Tensor[(704), float32], uint64, Tensor[(12, 9, 11), float32]) {
  @func_12284(%var_12285) /* ty=(Tensor[(1, 11, 2), bool], Tensor[(704), float32], uint64, Tensor[(12, 9, 11), float32]) */
}

def @func_4421() -> (Tensor[(12, 9, 11), float32],) {
  @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @main(%var_13929: Tensor[(14, 12, 8), float64]) -> (Tensor[(704), float32], Tensor[(1, 10, 1), int16], Tensor[(14, 12, 8), float32]) {
  %1150 = @func_9726() /* ty=(Tensor[(704), float32],) */;
  %1151 = @func_10429() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(1, 10, 1), int16], int16, Tensor[(5, 2), int16]) */;
  %1152 = cast(%var_13929, dtype="float64") /* ty=Tensor[(14, 12, 8), float64] */;
  %1153 = acos(%1152) /* ty=Tensor[(14, 12, 8), float64] */;
  %1154 = cast(%1153, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %1155 = %1150.0;
  %1156 = %1151.1;
  %1157 = log10(%1154) /* ty=Tensor[(14, 12, 8), float32] */;
  (%1155, %1156, %1157)
}

def @func_9987() -> Tensor[(12, 9, 11), float32] {
  %1159 = fn () -> Tensor[(12, 9, 11), float32] {
    %1158 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %1158.0
  };
  %1159() /* ty=Tensor[(12, 9, 11), float32] */
}

def @func_5891() -> (Tensor[(12, 9, 1), float64],) {
  %1160 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_11019() -> Tensor[(12, 9, 1), float64] {
  %1162 = fn () -> Tensor[(12, 9, 1), float64] {
    @func_6991() /* ty=Tensor[(12, 9, 1), float64] */
  };
  %1162() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_11884() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  @func_11882() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_13609(%var_13592: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), uint32],) {
  %1163 = cast(%var_13592, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %1164 = acosh(%1163) /* ty=Tensor[(2, 12, 6), float64] */;
  %1165 = cast(%1164, dtype="uint32") /* ty=Tensor[(2, 12, 6), uint32] */;
  %1166 = shape_of(%var_13592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(%var_13592, dtype="uint32") /* ty=Tensor[(2, 12, 6), uint32] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1169 = add(%1167, %1168) /* ty=Tensor[(2, 12, 6), uint32] */;
  (%1169,)
}

def @func_6506() -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
  %1175 = fn () -> (Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) {
    %1170 = @func_5763() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %1171 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1172 = @func_3945() /* ty=Tensor[(12, 9, ?), float32] */;
    %1173 = %1170.0;
    %1174 = %1171.0;
    (%1172, %1173, %1174)
  };
  %1175() /* ty=(Tensor[(12, 9, ?), float32], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_13547() -> (Tensor[(10), int16],) {
  %1177 = fn () -> (Tensor[(10), int16],) {
    %1176 = @func_3297() /* ty=Tensor[(10), int16] */;
    (%1176,)
  };
  %1177() /* ty=(Tensor[(10), int16],) */
}

def @func_13184(%var_13181: Tensor[(12, 9, 1), float64], %var_13182: uint32, %var_13183: Tensor[(192), uint32]) -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(540), int8], uint32, Tensor[(192), uint32], Tensor[(1, 540), int8], Tensor[(12, 15, 16), float64], Tensor[(2880), float64]) {
  @func_13179(%var_13181, %var_13182, %var_13183) /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64], Tensor[(704), float32], Tensor[(540), int8], uint32, Tensor[(192), uint32], Tensor[(1, 540), int8], Tensor[(12, 15, 16), float64], Tensor[(2880), float64]) */
}

def @func_5351(%var_5350: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], uint32, Tensor[(192, 1), uint32], Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
  %1192 = fn (%var_5324: uint32) -> (Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], uint32, Tensor[(192, 1), uint32], Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64]) {
    %1178 = @func_4881() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %1179 = cast(%var_5324, dtype="uint32") /* ty=uint32 */;
    %1180 = cast(meta[relay.Constant][82] /* ty=Tensor[(192, 1), uint32] */, dtype="uint32") /* ty=Tensor[(192, 1), uint32] */;
    %1181 = reshape(%1179, newshape=[]) /* ty=uint32 */;
    %1182 = reshape(%1180, newshape=[24, 8]) /* ty=Tensor[(24, 8), uint32] */;
    %1183 = @func_4817(%1181, %1182) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */;
    %1184 = cast(meta[relay.Constant][83] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
    %1185 = reshape(%1184, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %1186 = @func_3445(%1185) /* ty=(Tensor[(12, 9, 1), uint32], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %1187 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1188 = %1178.1;
    %1189 = %1183.1;
    %1190 = %1186.2;
    %1191 = %1187.0;
    (%1188, %1189, %var_5324, meta[relay.Constant][82] /* ty=Tensor[(192, 1), uint32] */, %1190, meta[relay.Constant][83] /* ty=Tensor[(704), float32] */, %1191)
  };
  %1192(%var_5350) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(9, 4, 15), float32], uint32, Tensor[(192, 1), uint32], Tensor[(704), float32], Tensor[(704), float32], Tensor[(12, 9, 1), float64]) */
}

def @func_5893() -> (Tensor[(12, 9, 1), float64],) {
  @func_5891() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_9334() -> (Tensor[(12, 9, 704), bool], Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(9, 4, 15), int8], Tensor[(540), int8]) {
  %1193 = cast(-2.97481f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1194 = cast(meta[relay.Constant][84] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1195 = reshape(%1193, newshape=[]) /* ty=float32 */;
  %1196 = reshape(%1194, newshape=[2, 2, 6]) /* ty=Tensor[(2, 2, 6), float32] */;
  %1197 = cast(meta[relay.Constant][85] /* ty=Tensor[(540), int8] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %1198 = reshape(%1197, newshape=[9, 4, 15]) /* ty=Tensor[(9, 4, 15), int8] */;
  %1199 = @func_1466(%1198) /* ty=(Tensor[(9, 4, 15), int8],) */;
  %1200 = @func_9171() /* ty=Tensor[(12, 9, 704), bool] */;
  %1201 = @func_7508() /* ty=Tensor[(12, 9, 1), float64] */;
  %1202 = @func_2449(%1195, %1196) /* ty=Tensor[(2, 2, 6), float32] */;
  %1203 = %1199.0;
  (%1200, %1201, %1202, -2.97481f /* ty=float32 */, meta[relay.Constant][84] /* ty=Tensor[(24), float32] */, %1203, meta[relay.Constant][85] /* ty=Tensor[(540), int8] */)
}

def @func_1258(%var_1256: Tensor[(297), uint8], %var_1257: uint64) -> (Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) {
  @func_1254(%var_1256, %var_1257) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(3, 9, 11), uint8], Tensor[(297), uint8], Tensor[(16, 9, 9), float32], uint64, Tensor[(1296), uint64], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */
}

def @func_6991() -> Tensor[(12, 9, 1), float64] {
  @func_4847() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_420(%var_418: uint64, %var_419: Tensor[(16, 9, 9), uint64]) -> Tensor[(16, 9, 9), float32] {
  %1208 = fn (%var_376: uint64, %var_377: Tensor[(16, 9, 9), uint64]) -> Tensor[(16, 9, 9), float32] {
    %1204 = cast(%var_376, dtype="bool") /* ty=bool */;
    %1205 = cast(%var_377, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
    %1206 = greater(%1204, %1205) /* ty=Tensor[(16, 9, 9), bool] */;
    %1207 = cast(%1206, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
    tan(%1207) /* ty=Tensor[(16, 9, 9), float32] */
  };
  %1208(%var_418, %var_419) /* ty=Tensor[(16, 9, 9), float32] */
}

def @func_3637(%var_3635: Tensor[(24), float32], %var_3636: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) {
  @func_3633(%var_3635, %var_3636) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) */
}

def @func_12907(%var_12906: bool) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(2, 8), bool]) {
  %1217 = fn (%var_12880: bool) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(2, 8), bool]) {
    %1209 = @func_11882() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */;
    %1210 = cast(%var_12880, dtype="bool") /* ty=bool */;
    %1211 = cast(meta[relay.Constant][86] /* ty=Tensor[(2, 8), bool] */, dtype="bool") /* ty=Tensor[(2, 8), bool] */;
    %1212 = reshape(%1210, newshape=[]) /* ty=bool */;
    %1213 = reshape(%1211, newshape=[1, 8, 2]) /* ty=Tensor[(1, 8, 2), bool] */;
    %1214 = @func_5853(%1212, %1213) /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(1, 8, 2), bool]) */;
    %1215 = %1209.0;
    %1216 = %1214.1;
    (%1215, %1216, %var_12880, meta[relay.Constant][86] /* ty=Tensor[(2, 8), bool] */)
  };
  %1217(%var_12906) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 11), float32], bool, Tensor[(2, 8), bool]) */
}

def @func_13440() -> (Tensor[(704), bool], Tensor[(12, 9, 1), float64]) {
  %1226 = fn () -> (Tensor[(704), bool], Tensor[(12, 9, 1), float64]) {
    %1218 = @func_9421() /* ty=(Tensor[(704), float32], uint64, Tensor[(2, 12), float32]) */;
    %1219 = %1218.1;
    %1220 = @func_9724() /* ty=(Tensor[(704), float32],) */;
    %1221 = %1220.0;
    %1222 = cast(%1219, dtype="bool") /* ty=bool */;
    %1223 = cast(%1221, dtype="bool") /* ty=Tensor[(704), bool] */;
    %1224 = greater(%1222, %1223) /* ty=Tensor[(704), bool] */;
    %1225 = @func_4847() /* ty=Tensor[(12, 9, 1), float64] */;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(704), bool], Tensor[(12, 9, 1), float64]) */
}

def @func_3747(%var_3746: Tensor[(12, 9, 1), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) {
  %1239 = fn (%var_3717: Tensor[(12, 9, 1), float64]) -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) {
    %1227 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1228 = %1227.0;
    %1229 = cast(%1228, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
    %1230 = cast(%var_3717, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %1231 = shape_of(%1228, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1232 = cast(%1228, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1234 = @func_3667() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1235 = atan(%1229) /* ty=Tensor[(12, 9, 1), float64] */;
    %1236 = logical_xor(%1232, %1233) /* ty=Tensor[(12, 9, ?), uint8] */;
    %1237 = %1234.0;
    %1238 = @func_3297() /* ty=Tensor[(10), int16] */;
    (%1235, %1236, %1237, %1238)
  };
  %1239(%var_3746) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, ?), uint8], Tensor[(12, 9, 1), float64], Tensor[(10), int16]) */
}

def @func_5764() -> (Tensor[(12, 9, 11), float32],) {
  %1242 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %1240 = @func_4419() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %1241 = %1240.0;
    (%1241,)
  };
  %1242() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_7297(%var_7296: Tensor[(2, 352), float32]) -> (Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) {
  %1255 = fn (%var_7280: Tensor[(2, 352), float32]) -> (Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) {
    %1243 = cast(%var_7280, dtype="float32") /* ty=Tensor[(2, 352), float32] */;
    %1244 = reshape(%1243, newshape=[704]) /* ty=Tensor[(704), float32] */;
    %1245 = @func_3491(%1244) /* ty=(Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32]) */;
    %1246 = cast(meta[relay.Constant][87] /* ty=Tensor[(297), uint8] */, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %1247 = reshape(%1246, newshape=[1, 297]) /* ty=Tensor[(1, 297), uint8] */;
    %1248 = @func_5185(%1247) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) */;
    %1249 = cast(meta[relay.Constant][88] /* ty=Tensor[(14, 11, 8), float64] */, dtype="float64") /* ty=Tensor[(14, 11, 8), float64] */;
    %1250 = cosh(%1249) /* ty=Tensor[(14, 11, 8), float64] */;
    %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(14, 11, 8), float32] */;
    %1252 = %1245.0;
    %1253 = %1248.1;
    %1254 = acos(%1251) /* ty=Tensor[(14, 11, 8), float32] */;
    (%1252, %var_7280, %1253, meta[relay.Constant][87] /* ty=Tensor[(297), uint8] */, %1254)
  };
  %1255(%var_7296) /* ty=(Tensor[(10), int16], Tensor[(2, 352), float32], Tensor[(910), float64], Tensor[(297), uint8], Tensor[(14, 11, 8), float32]) */
}

def @func_8991(%var_8990: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(297), uint8]) {
  %1264 = fn (%var_8985: Tensor[(297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(297), uint8]) {
    %1256 = @func_6694() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %1257 = cast(meta[relay.Constant][89] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
    %1258 = cast(%var_8985, dtype="uint8") /* ty=Tensor[(297), uint8] */;
    %1259 = reshape(%1257, newshape=[24]) /* ty=Tensor[(24), float32] */;
    %1260 = reshape(%1258, newshape=[297]) /* ty=Tensor[(297), uint8] */;
    %1261 = @func_3633(%1259, %1260) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(10), int16], Tensor[(8, 11, 8), float32], Tensor[(704), float32], Tensor[(2, 2, 6), float32], float32, Tensor[(24), float32], Tensor[(704), float32], Tensor[(297), uint8]) */;
    %1262 = %1256.0;
    %1263 = %1261.4;
    (%1262, %1263, meta[relay.Constant][89] /* ty=Tensor[(24), float32] */, %var_8985)
  };
  %1264(%var_8990) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(2, 2, 6), float32], Tensor[(24), float32], Tensor[(297), uint8]) */
}

def @func_4849() -> Tensor[(12, 9, 1), float64] {
  @func_4847() /* ty=Tensor[(12, 9, 1), float64] */
}

def @func_4821(%var_4819: uint32, %var_4820: Tensor[(24, 8), uint32]) -> (Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) {
  @func_4817(%var_4819, %var_4820) /* ty=(Tensor[(12, 9, 11), float32], Tensor[(9, 4, 15), float32], uint32, Tensor[(24, 8), uint32], Tensor[(54, 10), int8]) */
}

def @func_7331(%var_7326: Tensor[(704), float32]) -> Tensor[(704), bool] {
  %1265 = @func_6328() /* ty=(Tensor[(704), float32],) */;
  %1266 = %1265.0;
  %1267 = cast(%1266, dtype="float32") /* ty=Tensor[(704), float32] */;
  %1268 = atan(%1267) /* ty=Tensor[(704), float32] */;
  %1269 = cast(%var_7326, dtype="bool") /* ty=Tensor[(704), bool] */;
  %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1271 = cast(%1268, dtype="bool") /* ty=Tensor[(704), bool] */;
  %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?), bool] */;
  not_equal(%1271, %1272) /* ty=Tensor[(704), bool] */
}

def @func_4847() -> Tensor[(12, 9, 1), float64] {
  %1273 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
  %1273.0
}

def @func_8318() -> (Tensor[(12, 9, 11), float32],) {
  %1276 = fn () -> (Tensor[(12, 9, 11), float32],) {
    %1274 = @func_7551() /* ty=(Tensor[(12, 9, 11), float32],) */;
    %1275 = %1274.0;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(12, 9, 11), float32],) */
}

def @func_3667() -> (Tensor[(12, 9, 1), float64],) {
  %1277 = @func_3120() /* ty=(Tensor[(12, 9, 1), float64],) */;
  %1278 = %1277.0;
  (%1278,)
}

def @func_5307(%var_5306: float64) -> (Tensor[(1, 11, 2), bool],) {
  %1282 = fn (%var_5296: float64) -> (Tensor[(1, 11, 2), bool],) {
    %1279 = cast(%var_5296, dtype="bool") /* ty=bool */;
    %1280 = cast(meta[relay.Constant][90] /* ty=Tensor[(1, 11, 2), float64] */, dtype="bool") /* ty=Tensor[(1, 11, 2), bool] */;
    %1281 = less_equal(%1279, %1280) /* ty=Tensor[(1, 11, 2), bool] */;
    (%1281,)
  };
  %1282(%var_5306) /* ty=(Tensor[(1, 11, 2), bool],) */
}

def @func_5977() -> (Tensor[(704), float32],) {
  @func_5975() /* ty=(Tensor[(704), float32],) */
}

def @func_4507(%var_4505: uint8, %var_4506: Tensor[(4, 2, 1), uint8]) -> (Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) {
  %1288 = fn (%var_4480: uint8, %var_4481: Tensor[(4, 2, 1), uint8]) -> (Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) {
    %1283 = cast(%var_4480, dtype="uint8") /* ty=uint8 */;
    %1284 = cast(%var_4481, dtype="uint8") /* ty=Tensor[(4, 2, 1), uint8] */;
    %1285 = @func_4358() /* ty=(Tensor[(704), float32],) */;
    %1286 = bitwise_or(%1283, %1284) /* ty=Tensor[(4, 2, 1), uint8] */;
    %1287 = %1285.0;
    (%1286, %1287)
  };
  %1288(%var_4505, %var_4506) /* ty=(Tensor[(4, 2, 1), uint8], Tensor[(704), float32]) */
}

def @func_8260() -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
  %1293 = fn () -> (Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) {
    %1289 = @func_6833() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1290 = @func_4306() /* ty=(Tensor[(12, 9, 1), float64],) */;
    %1291 = %1289.0;
    %1292 = %1290.0;
    (%1291, %1292)
  };
  %1293() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(12, 9, 1), float64]) */
}

def @func_5187(%var_5186: Tensor[(1, 297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) {
  %1304 = fn (%var_5179: Tensor[(1, 297), uint8]) -> (Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) {
    %1294 = @func_4273() /* ty=(Tensor[(12, 9, 1), float64], Tensor[(704), float32]) */;
    %1295 = cast(meta[relay.Constant][91] /* ty=Tensor[(910), float64] */, dtype="float64") /* ty=Tensor[(910), float64] */;
    %1296 = reshape(%1295, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
    %1297 = @func_4242(%1296) /* ty=Tensor[(13, 5, 14), float64] */;
    %1298 = cast(%1297, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
    %1299 = cast(%var_5179, dtype="uint8") /* ty=Tensor[(1, 297), uint8] */;
    %1300 = reshape(%1299, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), uint8] */;
    %1301 = %1294.0;
    %1302 = atanh(%1298) /* ty=Tensor[(13, 5, 14), float64] */;
    %1303 = @func_1101(%1300) /* ty=Tensor[(3, 9, 11), uint8] */;
    (%1301, meta[relay.Constant][91] /* ty=Tensor[(910), float64] */, %1302, %1303, %var_5179)
  };
  %1304(%var_5186) /* ty=(Tensor[(12, 9, 1), float64], Tensor[(910), float64], Tensor[(13, 5, 14), float64], Tensor[(3, 9, 11), uint8], Tensor[(1, 297), uint8]) */
}

def @func_13341() -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
  %1308 = fn () -> (Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) {
    %1305 = @func_12750() /* ty=(Tensor[(10), int16], Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32], uint32) */;
    %1306 = @func_9986() /* ty=Tensor[(12, 9, 11), float32] */;
    %1307 = %1305.2;
    (%1306, %1307)
  };
  %1308() /* ty=(Tensor[(12, 9, 11), float32], Tensor[(12, 9, 11), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

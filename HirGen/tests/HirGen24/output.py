import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_66 = relay.var("var_66", dtype = "uint64", shape = (2, 7, 11))#candidate|66|(2, 7, 11)|var|uint64
const_67 = relay.const([[[2,-6,8,10,-4,-7,-3,9,7,1,-7],[8,5,6,3,7,-3,8,1,-9,-6,-10],[-1,4,4,-10,8,4,-4,-9,-2,4,1],[7,9,9,-10,-4,-9,-9,-2,5,-6,5],[-9,7,-3,7,3,6,-7,7,5,8,-10],[8,-3,5,-1,-9,7,4,-5,3,-4,-1],[-5,10,-10,3,-5,-5,5,-8,-10,-9,-3]],[[6,3,-5,10,9,4,3,-8,-7,1,-1],[-10,3,8,-7,-4,-8,-4,-5,10,-8,-3],[-10,9,-6,-7,-9,8,9,3,-6,10,-5],[8,7,-3,-2,-7,-1,-10,-9,6,8,-9],[1,-4,8,-2,10,-4,-7,1,-7,-2,7],[5,-8,1,4,-4,1,-3,-4,3,-4,1],[5,-3,-2,-1,6,2,-7,-2,4,-8,-4]]], dtype = "uint64")#candidate|67|(2, 7, 11)|const|uint64
bop_68 = relay.not_equal(var_66.astype('bool'), relay.reshape(const_67.astype('bool'), relay.shape_of(var_66))) # shape=(2, 7, 11)
output = bop_68
output2 = bop_68
func_88 = relay.Function([var_66,], output)
mod['func_88'] = func_88
mod = relay.transform.InferType()(mod)
mutated_mod['func_88'] = func_88
mutated_mod = relay.transform.InferType()(mutated_mod)
var_89 = relay.var("var_89", dtype = "uint64", shape = (2, 7, 11))#candidate|89|(2, 7, 11)|var|uint64
func_88_call = mutated_mod.get_global_var('func_88')
call_90 = func_88_call(var_89)
output = call_90
func_91 = relay.Function([var_89], output)
mutated_mod['func_91'] = func_91
mutated_mod = relay.transform.InferType()(mutated_mod)
var_287 = relay.var("var_287", dtype = "float32", shape = (11, 3, 10))#candidate|287|(11, 3, 10)|var|float32
uop_288 = relay.exp(var_287.astype('float32')) # shape=(11, 3, 10)
bop_291 = relay.not_equal(var_287.astype('bool'), relay.reshape(uop_288.astype('bool'), relay.shape_of(var_287))) # shape=(11, 3, 10)
output = relay.Tuple([bop_291,])
output2 = relay.Tuple([bop_291,])
func_302 = relay.Function([var_287,], output)
mod['func_302'] = func_302
mod = relay.transform.InferType()(mod)
mutated_mod['func_302'] = func_302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_303 = relay.var("var_303", dtype = "float32", shape = (11, 3, 10))#candidate|303|(11, 3, 10)|var|float32
func_302_call = mutated_mod.get_global_var('func_302')
call_304 = func_302_call(var_303)
output = call_304
func_305 = relay.Function([var_303], output)
mutated_mod['func_305'] = func_305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_456 = relay.var("var_456", dtype = "float32", shape = (14, 13, 6))#candidate|456|(14, 13, 6)|var|float32
const_457 = relay.const([[[4.103229,2.198003,-8.334949,-4.177754,-9.001703,6.939411],[6.305224,5.127392,-4.840005,-9.451548,-2.638341,-4.129285],[-7.893728,8.921619,-4.962983,9.827793,9.384342,4.584584],[0.826147,3.416045,1.313530,0.090453,-4.157546,-0.703114],[-0.726314,6.285950,1.159738,5.424042,-4.361721,-5.553925],[7.304693,-9.000355,-0.104970,-2.210519,-4.073916,-3.815759],[8.757733,-0.568912,-6.378494,-0.207365,8.002173,3.999078],[6.826318,-8.972160,5.858571,-5.313486,1.366101,2.608636],[-8.308762,9.006036,-4.572123,1.551209,8.327983,4.455246],[-1.708260,-7.334748,4.222927,1.501963,-6.957833,-7.218559],[-3.513578,-5.442346,-2.074819,5.516412,-2.009710,1.336453],[-4.263819,-1.584353,-5.820813,8.932585,6.277735,7.265300],[-8.802057,-8.215634,-5.193334,-6.981370,1.392332,-3.221091]],[[1.806817,6.411981,-5.942803,-7.030459,1.504597,-3.221876],[-1.376642,-6.349542,-0.165939,-4.862777,-5.145646,4.892479],[1.406547,9.320514,0.475691,-7.350048,-3.941296,-5.422659],[-1.630673,8.506513,3.482795,-9.741292,-4.321797,4.465801],[-5.627338,4.643819,-0.123488,5.443510,-5.266927,8.773871],[6.643800,-4.482039,7.520382,-9.946854,7.669677,4.694707],[-3.663180,-2.934153,-4.413650,3.441542,8.863673,-0.157077],[9.093323,-1.888825,-8.601926,6.543583,3.169637,7.693690],[-4.277985,5.392038,-4.958223,-3.356595,-7.868468,5.773247],[2.306494,5.531941,3.626022,-0.388160,9.772739,-0.950762],[-7.376950,0.175886,-1.796230,-9.301287,7.880458,-3.849635],[-4.155928,-3.127515,-7.657857,-6.607519,-0.994814,-2.406798],[7.998612,-5.515268,4.012042,-9.631394,9.012790,-5.768088]],[[2.421509,-8.800104,-7.042332,-4.383208,-1.432695,1.397128],[-6.755514,-7.944006,4.652822,-5.766847,0.730560,2.604069],[8.088672,9.731156,-9.211844,-5.844746,-3.128413,-1.497639],[-3.492689,-3.733517,5.281042,3.915921,9.866861,-0.235229],[-6.922301,0.781862,4.724012,5.691967,-2.194856,0.990569],[-4.559362,-5.199704,3.836268,1.503690,6.442869,-9.856234],[0.481864,-4.715354,6.116334,3.766274,7.313725,1.477419],[3.314062,-8.021515,6.328969,-0.041815,6.207319,4.789090],[3.008957,-7.642265,-8.019813,6.211507,-6.153379,-0.663318],[-8.902899,-6.276358,-6.739206,4.855690,-7.423955,9.249252],[7.437853,3.048048,7.045773,8.629855,2.517367,5.269748],[-6.667317,7.062536,7.732819,-8.579222,7.790875,1.144403],[1.334418,7.602238,-7.548526,8.914040,5.492949,9.458789]],[[4.796386,3.956194,-9.784306,-2.411183,-1.481362,-8.100180],[8.090680,4.826181,8.490908,-7.770115,1.378438,-9.474536],[1.316572,-0.855349,-7.397797,8.167887,-1.889790,-3.640022],[8.000200,-1.666105,-3.845607,1.619971,6.525480,-5.378545],[-6.049059,4.005474,-4.574326,7.550611,-1.870593,-2.949434],[2.100822,-7.338427,4.376904,9.133029,-1.694977,-8.299317],[-5.685147,-1.907684,-7.994882,-6.817187,-1.054191,8.861322],[7.833573,-5.091013,-3.612071,-0.366383,-0.231692,7.363068],[6.555868,-1.966060,-3.520036,-7.321078,0.941174,7.477605],[1.493063,-7.616318,4.436938,-2.566939,-2.682239,-9.980813],[-5.664617,8.923895,-1.659715,-8.650777,7.997411,2.417857],[5.343200,-3.201265,-8.267003,-7.900357,5.182186,6.010833],[-3.963859,1.970532,-4.522261,0.035438,-5.780468,4.264408]],[[-0.482128,-7.442429,5.032947,5.657144,5.132012,0.215517],[0.107556,7.562078,-6.076670,-4.213579,-4.939416,1.559238],[6.557419,4.902934,8.889245,-0.639680,-8.081151,9.828724],[-7.073193,-7.263969,-8.688370,-1.077051,-6.042783,-2.054195],[-6.157302,6.399334,-2.840587,-7.580775,-0.016052,6.298835],[-8.561270,6.134807,-2.054819,-7.389073,8.012682,-1.064864],[-3.800578,-2.661981,-6.446693,5.704936,1.113604,-3.831824],[-8.907164,4.793024,-0.784116,-7.359560,9.139489,-2.632939],[2.110676,-0.646588,4.611108,-9.143377,6.283982,-0.219318],[-1.840190,2.968543,2.719354,3.747693,-1.522441,-8.936783],[-7.344345,0.175639,-8.504643,0.796702,8.607076,-7.330048],[0.813919,-7.127609,5.728234,-0.769952,6.156756,9.414104],[8.845393,-4.643661,-8.071980,4.925748,7.066282,-8.074494]],[[-7.084475,0.330137,1.068312,-3.058050,9.459728,-1.831748],[-5.339170,-0.576329,-5.729996,-3.880497,-4.995879,0.670873],[1.896290,5.751767,2.782042,-8.124718,-1.756035,0.320024],[4.097690,-2.250659,3.120579,-3.523333,6.157861,3.674582],[-6.961904,-5.018848,-6.719228,3.960215,-0.704666,-9.233757],[-9.150850,4.665287,0.329639,4.605770,-9.750977,6.056706],[-2.158918,9.166219,-2.146602,2.073084,-3.026562,9.674312],[5.631488,-3.755418,-9.446990,6.478227,0.694028,5.610863],[-7.140651,-6.143485,-0.697699,-7.894538,5.716863,-0.095320],[-7.278667,-4.702966,7.445129,8.821721,3.602006,-7.995979],[-8.250183,-1.989545,-4.304501,-3.668255,-2.491685,-4.839433],[-2.736574,2.568774,-6.994299,1.935441,3.096742,-8.811807],[-6.789370,7.803346,9.864516,5.276647,-0.644477,-6.349686]],[[0.227151,0.835461,7.816961,-0.102034,-2.916697,0.754023],[1.178667,1.233216,-3.446862,-8.640826,0.798259,-5.508252],[3.093284,-9.685039,-1.079899,5.476310,-8.417411,0.745885],[-4.381029,4.144722,-9.579409,0.361865,-8.035650,-2.786718],[-7.435884,2.553559,5.047134,9.766452,2.193053,-1.918815],[-8.190003,0.003373,-6.351340,-0.785869,-2.664765,6.620925],[-7.274610,-6.654889,5.773455,2.994915,5.520484,9.436018],[5.420968,-6.727459,-6.911054,-3.731941,-7.075875,5.258070],[-1.204363,5.158938,-0.107821,0.451638,6.090134,0.900502],[2.833320,5.404230,7.871044,6.561320,1.736854,5.166065],[-1.579518,-2.033446,1.881079,7.554138,8.117654,-7.604231],[3.748935,-5.718259,5.427838,7.024267,-3.317721,-4.597660],[2.912531,-3.896198,8.606812,-4.119137,2.095345,-3.358929]],[[2.909163,2.602381,-9.939922,-4.595824,1.450256,-2.499777],[-6.964219,1.969607,-5.390047,-9.135168,5.858453,-9.262492],[-3.254327,-4.253881,0.505598,-5.166645,-9.798292,9.765136],[0.574775,-3.672702,-3.880041,7.588755,-3.283090,-5.581633],[-4.470610,-3.304244,1.970889,-4.349170,-0.326783,-6.378485],[0.651887,-4.874705,-3.434639,-9.366751,2.677207,-0.890775],[-9.505458,-1.374967,9.411551,7.928867,6.098870,8.044707],[1.601000,-5.458880,8.034983,4.981899,8.481456,-3.003239],[-7.658186,4.658127,-2.234087,3.583714,4.423750,4.364618],[-0.255305,5.913948,0.821587,8.145893,-6.914870,-1.707688],[-0.334011,4.871407,1.113119,3.116445,-4.965164,6.616325],[-5.270614,9.611498,-9.401038,-5.220582,-8.089153,-0.427216],[2.260076,-3.916981,7.832206,5.144317,-8.559500,1.227452]],[[-8.014863,7.626705,6.137343,8.073097,-9.164582,8.073494],[-6.752426,4.696832,8.204344,-5.389090,1.845800,0.466987],[4.748350,-7.897257,8.793375,7.257764,-5.176599,-9.064432],[0.061948,-1.159960,1.619915,-6.814163,7.329805,-8.336753],[8.158078,9.769316,2.289387,4.849959,9.908534,-9.259017],[2.488079,2.753016,9.513647,8.359397,5.617631,-5.570291],[4.470993,-5.835584,-6.858747,-0.010728,5.919660,7.159420],[-2.763448,1.828875,-7.083285,-1.034946,8.095905,-5.330935],[8.852727,8.257864,8.998186,5.670990,-7.842396,0.728464],[-8.447095,-2.772363,-4.759016,-2.618045,-0.625633,-2.291842],[-4.302017,-4.111632,-3.156699,-6.048423,-1.464620,8.979030],[7.236451,3.536253,-2.845759,-5.340241,-3.075984,3.311793],[-3.951761,7.005074,5.578053,-4.040130,-0.213902,-0.988289]],[[7.306011,-4.536320,-5.977644,8.292349,4.632369,-2.888249],[7.717084,-6.554238,4.442854,-5.512880,-5.073134,0.165547],[-5.930942,9.826458,-1.458829,5.387201,-5.093723,-7.722606],[9.544523,-6.436107,-8.950720,5.723852,6.418549,1.189779],[7.660775,8.702628,5.186631,7.564133,-1.664177,-0.862246],[-3.229014,-6.044709,0.128931,-6.900481,-7.546403,9.312185],[9.953230,-2.816330,2.270658,5.081491,-2.186800,-3.362848],[2.353435,0.146746,-5.103781,6.227288,4.477919,8.759809],[-7.061537,-7.738024,-5.792806,4.700013,-6.821215,-7.054800],[9.395804,-0.792174,-1.453316,0.980788,-5.309681,5.098291],[-2.926342,-2.544190,-7.950927,-5.667320,3.171568,2.391413],[7.972993,6.602819,3.007575,6.436015,5.387046,-6.043305],[-1.347556,-8.850158,-0.649278,7.655867,-3.904778,-6.841829]],[[3.682418,1.996009,5.748126,-1.861797,5.091561,-9.642468],[6.571012,4.595425,8.958744,6.853492,3.284333,7.203781],[2.605795,-2.554594,-7.988202,0.754256,8.758617,-1.510635],[0.823722,6.310774,-0.595590,1.196401,9.092400,-6.897507],[-5.903914,-9.359074,7.962916,2.151855,-4.569408,-8.458568],[0.790478,-2.292322,-1.031392,7.437297,9.635791,-2.635960],[8.396317,-8.631129,-4.674824,8.652891,-0.878793,-5.815078],[7.738563,-5.947579,7.039425,-8.562748,-6.767591,-2.148468],[2.768994,8.133287,-5.764479,-7.226964,7.827886,8.448374],[-9.784342,2.509602,-8.456638,-1.315623,1.592453,-8.468299],[-2.186193,9.292264,5.151104,4.118019,-9.419761,-6.955564],[8.666306,-7.188293,4.608913,-2.908052,-4.650383,-2.629080],[-1.937280,1.464664,5.199974,-8.420636,-6.028951,2.711796]],[[8.897884,5.053339,9.185703,9.234981,-9.673747,5.499816],[1.958742,9.013998,7.463322,-6.297773,4.350044,-0.988390],[7.473711,-1.252339,-7.057509,-5.626146,-3.796338,9.476655],[8.066517,-1.316011,-4.700629,3.263310,-1.928125,-2.746597],[-6.477589,0.542915,-8.374035,-8.368268,-9.894996,3.112881],[-4.614959,9.326829,3.267962,-0.218487,3.659093,9.681263],[0.521450,8.528499,3.261107,7.530344,-1.831455,5.308970],[-7.527315,4.894090,-4.956395,-0.933487,-9.384171,-5.414323],[-8.190768,-9.768402,4.740988,-8.414766,-2.696241,-2.886093],[4.319159,3.376891,-6.978162,-1.610352,-6.790705,-1.587944],[-6.531520,-9.155145,-6.279347,7.596060,3.243899,-3.705196],[6.023249,9.491343,-4.561738,3.867633,-0.186450,2.301005],[-5.913275,1.635286,5.856880,4.266732,-0.607220,-7.503687]],[[-5.470567,-5.381989,7.887703,8.577675,1.611313,-7.106631],[-4.392349,8.996097,-7.613843,-5.567558,-6.874215,-7.654525],[8.532380,1.600526,4.813725,-9.873683,9.644599,0.498475],[8.539907,1.271416,-1.281528,-1.946091,-0.906905,9.169954],[-8.541463,0.155844,0.252884,1.248537,1.828691,6.893214],[-2.506897,7.061900,-3.757995,6.781158,3.874179,-0.132489],[-0.311961,-0.379156,-4.486111,-2.800688,0.286271,5.333403],[9.003994,1.894946,8.817691,8.907485,-3.838024,-2.663251],[9.971703,-6.917503,-3.268810,-7.926348,3.313960,5.049000],[-8.625069,8.641189,4.110493,3.359718,6.988298,-6.580631],[8.576293,-4.721647,-8.580463,-7.426003,-0.365930,-4.115326],[9.794475,-8.522467,1.266260,-7.384235,0.309710,-6.582104],[-6.489783,0.920548,-5.210297,-5.201816,1.135530,-0.677652]],[[6.355781,9.668844,6.230074,2.983763,4.927785,-8.440297],[3.214464,-2.128501,-4.507459,-0.537428,-7.766842,-2.927874],[5.369991,-0.003048,0.535080,-9.891243,7.459967,7.027900],[5.304028,9.450795,-3.790642,5.915987,-7.256566,-1.042642],[-8.679432,5.871122,-3.206193,-0.121839,0.644106,-6.213813],[7.041495,7.605654,-9.128752,4.496470,7.988801,-0.408896],[-6.302639,-6.150946,-1.152564,8.636043,8.388330,0.078911],[-1.504163,8.211443,2.445800,7.189958,-1.089193,4.753751],[3.725447,-0.780334,-1.187908,-7.619120,-8.089622,4.009981],[2.964050,-8.232003,-6.471138,-8.179415,5.946138,-5.292668],[7.039594,3.790302,-2.706362,-3.270970,2.623556,4.717000],[-8.789784,7.625908,-1.462045,4.048795,2.154463,-0.039549],[6.887300,8.591288,-3.837839,4.860948,3.476218,4.244340]]], dtype = "float32")#candidate|457|(14, 13, 6)|const|float32
bop_458 = relay.greater_equal(var_456.astype('bool'), relay.reshape(const_457.astype('bool'), relay.shape_of(var_456))) # shape=(14, 13, 6)
output = relay.Tuple([bop_458,])
output2 = relay.Tuple([bop_458,])
func_461 = relay.Function([var_456,], output)
mod['func_461'] = func_461
mod = relay.transform.InferType()(mod)
mutated_mod['func_461'] = func_461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_462 = relay.var("var_462", dtype = "float32", shape = (14, 13, 6))#candidate|462|(14, 13, 6)|var|float32
func_461_call = mutated_mod.get_global_var('func_461')
call_463 = func_461_call(var_462)
output = call_463
func_464 = relay.Function([var_462], output)
mutated_mod['func_464'] = func_464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_591 = relay.var("var_591", dtype = "float64", shape = (6, 2, 6))#candidate|591|(6, 2, 6)|var|float64
uop_592 = relay.erf(var_591.astype('float64')) # shape=(6, 2, 6)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
const_596 = relay.const([3.450172,-8.567259,0.426110,-8.467045,0.569326,8.267252,-2.173152,4.051247,9.331810,5.891396,4.818706,-2.751684,0.332936,-7.678289,-1.156647,-6.067782,-5.418610,6.267561,6.256075,6.842413,6.254584,8.396797,0.697736,1.859568,-4.690497,5.207888,9.961781,-2.160318,6.965389,-5.241825,-8.506425,1.802596,9.501935,-9.157794,6.795225,-2.244152,-3.152325,-4.625998,-5.170936,8.079813,7.818889,-7.273755,-7.534483,4.529153,-9.814516,-5.925576,-2.446337,6.869813,-3.227868,-5.684574,3.977416,-3.848186,-1.351491,9.711395,-4.295013,4.508791,-1.083587,9.344147,-4.274737,-4.123811,-3.347140,-2.260558,6.058074,-5.775194,1.526742,7.207731,6.807653,6.067793,-6.525638,1.230450,0.735276,-9.365342,-8.242358,-7.693077,-3.176244,2.875859,2.676521,9.715150,3.690839,3.862535,-4.194926,9.638717,-1.071847,9.704902,-2.340608,-9.189899,-9.675822,5.703057,-0.193416,1.961606,-4.267803,8.086511,-0.191236,-5.703286,-9.681315,5.705515,-5.333402,3.352854,3.994125,-0.712466,0.455199,9.032245,7.883460,-1.462024,-5.604106,6.203251,0.895617,7.323215,0.421076,1.402010,2.497504,2.992614,-6.090729,-5.131766,8.638361,8.670376,8.606955,-5.593742,7.840997,-2.075530,0.786671,-8.386392,-9.552142,-9.188372,-0.393876,-1.927785,-1.218328,2.842045,-4.020648,-0.341320,-8.923299,-0.317252,-1.287071,2.223357,4.357800,-8.331243,5.988674,0.204787,-0.086557,3.662499,-4.698959,-2.733611,5.899189,4.602641,8.268237,-4.428537,0.653276,-2.794703,5.672885,1.743501,7.413860,8.474719,-2.608636,2.302559,1.253234,1.899253,-1.527174,-8.113413,-8.986820,5.951764,-4.416955,0.058242,-7.963221,1.094546,3.206233,-7.300308,-8.666769,2.672847,6.116092,2.767298,-2.593662,-5.634632,-2.272661,-8.944167,-0.833478,7.184387,2.762828,-3.375016,-9.963253,-3.181192,-8.862457,-7.127985,-3.306375,3.331753,-8.694348,-3.455595,-2.476908,4.913702,-6.739307,7.741697,8.643786,6.947396,8.853769,-7.170451,1.504729,-0.788414,-3.390305,6.586019,-1.553544,-0.329139,1.329469,0.259785,3.802498,6.731268,5.186745,-0.180289,6.646388,9.270763,2.841217,-2.106951,-7.313626,-1.318395,5.035908,-5.941339,-9.021435,4.214777,5.330687,7.190908,3.137275,-8.652061,3.783398,-9.227713,-8.607831,-9.187706,5.271864,6.554167,7.064668,-6.282166,5.474531,-3.319414,1.666127,5.563125,4.458725,2.108219,5.420352,3.634352,-4.516413,0.792836,8.345776,-3.061731,-9.845125,0.796059,6.715125,3.696308,-1.226884,7.488737,8.740194,-0.975907,4.031282,3.374080,-6.626334,-9.209068,-2.767681,5.969874,4.203610,5.321501,3.690119,1.195854,-1.797399,5.085264,-0.675523,1.202859,-4.508998,-4.283201,8.103413,-7.397199,-4.690381,4.987446,3.050382,3.328695,-6.951517,-9.854353,5.495025,8.960604,-7.834682,-0.885096,7.854721,-3.090465,0.071950,0.928707,9.193005,-7.855632,-7.960530,-1.579263,3.787629,-4.313762,-2.641533,8.801245,-6.582068,-3.314951,-1.022676,-2.979336,-6.492630,0.530216,9.455063,-0.893762,-0.764098,7.212476,-4.624238,-9.757052,1.091382,-7.344709,-7.364588,6.407002,-9.297481,2.163493,-6.273623,-5.998387,5.961432,-1.907446,-2.291138,1.940520,-0.144491,-2.346959,-5.154947,-0.321281,9.760121,-8.045625,-8.146441,1.734388,0.980373,8.863249,-5.556053,-8.206782,6.643166,-7.009891,2.376673,6.863280,-4.414326,8.493685,-2.494329,-9.695343,-0.179577,1.883210,-2.402350,8.101624,-2.749973,0.488861,-8.281581,-3.356790,4.259667,3.308258,-6.040988,-5.966898,-8.824997,4.086153,8.314887,7.759462,-1.412341,-9.610564,3.207683,-8.900200,3.329755,-7.169973,6.608987,6.321363,6.040821,-1.665637,1.284720,8.523493,-4.585233,0.784573,-6.025015,0.136989,1.571121,-0.937387,0.067839,-1.367636,-3.158548,-4.391404,2.591031,-8.123274,-6.151627,-9.088422,6.960666,-4.617409,9.974653,4.993242,-5.001580,-7.797416,7.489124,-0.768344,-9.179880,5.763300,6.437972,-5.172209,5.967859,3.482232,7.729237,-2.668012,2.115090,-4.853723,-7.369672,2.407633,-3.113486,-8.095774,-5.153658,-6.074096,-5.819176,5.279107,8.875019,-8.042096,5.509760,3.700152,-8.777788,1.292623,-1.114652,-1.175703,-4.502819,3.234622,9.669005,-1.364886,-4.302233,-8.657011,-6.656867,-7.049293,-4.598141,-9.298925,-4.845755,-8.431429,5.320125,8.506294,-2.336607,-5.796930,7.255259,1.809819,-0.119747,-2.040380,8.275952,5.182138,-3.978132,4.661761,-5.203425,-6.106069,8.095611,8.475523,1.856556,-3.437905,-7.234001,-3.102641,-7.451979,6.150196,4.845223,8.262601,-6.645692,-6.890414,-6.211546,4.389911,4.481999,-0.279380,9.558749,-5.075906,-1.747082,-5.733872,8.458527,-6.778151,-2.558825,-5.388377,5.107342,-4.338501,-6.645279,-1.591431,7.609087,-3.161445,-0.814583,4.366968,-6.706874,-9.973570,5.487542,-9.108101,7.045942,-8.467450,-3.174335,7.762192,6.599112,0.485536,-6.978193,-5.651835,-8.525587,-2.322639,0.410995,-1.994233,5.748557,-8.135160,4.559498,-4.273289,7.019745,-4.310435,4.752150,8.287136,-8.417204,3.923494,4.730542,-0.030172,-8.444169,-0.250010,-6.426595,3.266621,9.710243,-2.982740,-9.695048,5.953739,-7.880634,8.213631,9.623838,-2.827658,-5.444637,-8.773104,6.317571,8.952671,7.798290,-8.371315,-0.586206,-9.893234,9.425586,-0.225569,5.122610,-6.692343,6.945149,3.245234,-0.743251,-2.141697,9.281191,-0.474780,9.912298,-3.680487,2.505099,2.404449,5.982748,3.145102,-6.372547,-6.787310,5.184957,7.900501,9.873464,0.736022,-3.469638,-2.004106,-5.421604,0.613986,-1.351955,9.513586,-2.431216,9.177345,-6.021811,-7.617668,-9.385832,-0.821648,9.080573,-3.224508,-1.383663,3.145460,-8.038376,2.345787,-3.477454,-7.196117,-4.964101,2.276883,-5.073181,-6.702416,6.444682,-5.554295,-5.440179,-6.528062,-8.202318,-1.079314,-5.841246,-9.763443,8.325390,-7.587531,-7.877767,-4.275761,-7.146039,8.020329,-9.380431,7.571210,-7.586836,7.420594,-6.158277,7.016421,-3.174486,6.674591,9.757774,0.455305,0.007869,-6.642617,9.613147,3.352757,-8.474636,-0.662573,-5.215435,7.557475,6.745542,8.185207,-2.486395,9.243910,-9.435866,2.725197,-8.976573,-3.170938,-6.759106,4.259736,8.533694,0.238184,0.654739,-6.038920,3.692594,-0.231831,-7.668988,-5.428770,-6.091244,-0.324498,6.264513,-0.987939,-1.426886,6.489541,-0.007187,-5.118465,0.889815,5.866577,-0.821579,7.976282,3.769049,-3.309192,0.636755,-0.023900,-2.406393,7.164768,1.905203,2.486396,-0.920025,-7.192153,4.182970,7.170531,1.754346,9.235193,-4.000652,4.168284,1.982704,-3.557776,8.682491,-9.657812,0.518165,1.722388,-2.220590,-9.374886,1.627695,0.538001,-0.327847,-7.447912,3.860443,8.866371,-8.905775,-1.699706,-8.521090,-4.977013,5.578851,-8.523800,-4.104539,8.446774,-3.868742,-4.213646,6.339908,4.888541,-8.046173,4.195567,0.563608,3.366956,4.759828,0.907620,-9.499290,0.903727,4.775424,-5.856348,0.813248,-9.405148,-1.559551,-2.314384,-1.432007,8.787647,0.235015,-1.616374,2.839009,-3.056145,7.502022,-9.011288,2.431797,-0.935838,9.795675,4.302657,-2.867672,3.574447,-3.640702,-4.934425,5.787907,1.581556,-3.820010,0.177242,7.307158,8.765082,-2.919026,2.721273,8.550887,-6.323867,-1.904927,-8.051246,0.254783,9.737170,8.653479,-7.728539,4.032365,1.828924,6.903680,2.232067,-5.954250,-7.169447,2.162921,-0.878768,3.337577,4.893798,-9.567367,-5.279369,5.311562,0.969769,-3.325619,0.364671,3.430505,1.172219,-8.072065,-4.208364,4.039531,8.672825,-8.016689,-0.718074,-2.056470,4.777837,0.602774,-0.007775,-5.432280,8.556837,9.686505,-3.256557,3.945339,2.773099,4.545412,-5.892482,-6.138186,0.587645,9.485060,-5.271913,8.508406,4.692463,-5.952113,-0.996872,8.490244,1.981435,-6.362938,-1.454984,8.686309,9.016983,6.654062,-8.705480,0.305153,-8.331505,0.346565,-5.487230,-4.185296,6.058555,8.721637,2.319592,1.091463,2.416910,3.124700,9.756743,-3.710961,2.255469,-9.662866,0.656423,9.084285,-5.620493,4.981543,5.510199,-5.361505,-1.896906,-8.801064,4.391998,-1.814708,-1.282140,-6.409970,-9.820149,-3.454330,-0.345081,6.799309,6.636322,6.136440,7.822010,-5.806113,-8.254913,8.375936,3.132925,0.058279,4.623950,2.489454,8.718220,7.742097,-2.301938,5.427695,-1.221654,1.540424,7.848741,-5.676045,4.955255,3.470750,8.269086,-8.694740,3.250827,1.125969,2.905040,-6.124114,-8.726411,-9.722101,5.900996,2.066903,0.075764,8.841477,2.576696,9.750152,9.256449,8.599730,-8.341883,5.047190,9.383677,-3.474578,7.133183,3.540561,9.750035,2.910620,2.353137,-6.071644,3.037261,4.500523,1.964848,9.883249,0.667099,-2.856783,-0.950093,3.143114,-2.947801,-8.042218,-2.515827,-5.275553,2.231335,4.033700,-0.523849,7.487954,3.237239,1.164352,-0.941286,5.184376,8.502558,8.007238,1.279012,3.638176,-5.188868,-8.753501,0.041230,-2.567455,-3.292465,1.413670,-0.610543,-0.393950,1.992542,-0.333589,-5.207047,5.078004,2.762302,9.907381,-7.905870,1.225718,-0.437271,2.085772,-4.422525,-8.640838,9.329296,3.546437,9.119768,-9.300126,7.227955,-5.500295,-9.956800,6.815249,-3.126878,6.997262,4.478563,5.335410,-0.481140,4.278934,2.704085,3.682979,6.716955,-4.589912,-1.804457,9.267159,1.304350,2.989067,-0.616060,-6.525460,1.404770,1.993769,-9.668015,-3.743686,6.288455,0.321246,2.095781,-6.532894,3.964650,5.816538,2.654054,-0.118206,-8.072254,-2.766478,-0.735294,0.273191,-7.661521,7.450590,-3.460371,7.115930,0.509424,-3.667470,4.590727,-3.816809,8.503538,-0.196290,-3.460680,1.105317,-5.268005,3.388376,-4.881173,-1.953372,8.171857,0.635975,2.259805,-4.277074,9.980484,-6.706895,0.073361,-5.038669,-0.746497,0.106427,2.043583,-8.936475,-4.100658,-6.759357,-4.960296,-0.765899,-8.432786,2.637952,-7.169366,6.176484,-8.235423,4.227957,-8.042536,-2.327277,-0.869584,3.436240,3.563258,-5.348850,-7.265645,-0.334773,5.713633,-5.877682,4.986969,-0.784016,2.576003,0.400379,3.676033,8.439972,-3.178295,-7.845360,7.382626,-7.403865,8.854755,0.962653,-4.155825,7.834260,-8.523289,0.157101,4.275369,7.884099,7.402790,9.697061,4.845241,-2.577932,-1.760813,1.200121,5.221749,-4.630391,-6.242297,-8.453981,-3.650148,-5.968098,4.910519,-0.096382,3.448922,-1.279195,-0.673082,0.591899,-9.212667,-1.007305,0.787082,6.301150,7.249106,7.932190,0.762700,-5.599259,8.390456,-9.098900,2.157659,-1.865607,-2.601695,1.740709,-5.238126,0.060698,0.999018,9.120697,0.150450,1.392830,3.018353,-2.183034,-1.438169,-1.484744,4.406326,-1.692999,7.034449,-2.923356,1.782235,-5.716345,-3.687092,9.645337,3.397164,-7.116607,7.828234,-1.292055,0.548072,1.980437,6.770259,1.699511,-0.629502,5.001451,-4.019510,1.462435,-7.434406,7.125269,1.732972,-3.383965,-0.206140,9.372017,-0.334737,-6.427257,-1.017933,2.777927,4.837313,6.230642,-4.755226,6.042961,-2.300823,2.790525,-6.602153,9.218715,8.090756,0.188801,3.119287,2.370338,-4.921063,7.416116,3.986209,-3.467938,8.234542,-5.967608,6.798158,1.473956,-5.436410,-8.411711,7.602649,3.532863,8.231151,-1.115216,7.149080,-7.272888,7.271704,9.582793,-3.954324], dtype = "float32")#candidate|596|(1092,)|const|float32
call_595 = relay.TupleGetItem(func_461_call(relay.reshape(const_596.astype('float32'), [14, 13, 6])), 0)
call_597 = relay.TupleGetItem(func_464_call(relay.reshape(const_596.astype('float32'), [14, 13, 6])), 0)
bop_598 = relay.floor_divide(uop_592.astype('float64'), relay.reshape(var_591.astype('float64'), relay.shape_of(uop_592))) # shape=(6, 2, 6)
uop_612 = relay.log10(uop_592.astype('float32')) # shape=(6, 2, 6)
uop_615 = relay.sin(uop_612.astype('float64')) # shape=(6, 2, 6)
func_302_call = mod.get_global_var('func_302')
func_305_call = mutated_mod.get_global_var('func_305')
const_620 = relay.const([[9.884093,8.680822,-3.283509,-1.087268,-9.617056,-8.112143,-8.010032,-6.740164,-3.450917,-7.137773,1.719978,-6.011185,8.588188,7.873666,4.089192,2.446775,-2.613655,6.594819,-7.561020,9.577900,5.651910,6.232874,-4.888003,6.682769,4.516397,-3.233096,-6.963932,9.486162,8.674103,5.625475,-0.276419,2.811007,5.754771,6.575280,-0.486114,-2.253122,7.818587,-6.053702,7.039603,-7.485855,0.131735,-9.272371,3.489722,-8.822143,-1.293337,3.289145,-7.584123,2.806904,1.284404,-8.908512,2.639258,5.355583,-1.559433,4.838056,6.063031,-2.324754,-8.590185,-5.830326,-4.867748,-4.116206,2.665371,7.648985,4.311184,8.262865,9.638614,-2.501978,5.736932,3.431948,7.242736,0.921349,-4.521324,-4.721350,-9.478221,-5.484130,2.337575,0.691318,-6.612941,-2.685435,2.372510,3.351650,8.182831,-2.998504,5.935407,-3.885003,-8.565397,-0.169090,8.652086,4.085520,5.766086,-4.560279,8.745756,1.908398,-7.640347,3.571760,-7.780614,7.044614,-3.840667,-5.044555,8.339222,1.995136,-7.242258,2.308566,-8.843199,-1.187610,-1.736093,-4.173755,-8.904342,-5.183342,9.470315,4.496023,-0.954768,-4.646274,-0.523136,-1.071814,0.927600,1.981370,6.283911,-1.434719,6.642247,-8.092618,6.891871,8.523270,-7.316526,6.636899,7.231571,9.667438,7.367720,1.679007,-9.815648,5.772102,1.635600,-9.709612,3.006078,-4.142782,5.776942,9.666589,7.148446,-0.634549,-0.501835,2.121293,-3.270817,6.180408,-6.552238,7.769131,-5.790781,2.069729,3.818882,9.369397,-1.774902,-1.392025,-0.223219,-7.931567,-7.752192,1.747547,-8.979051,2.952247,-6.132453,-0.220883,6.852095,3.370358,9.466675,3.669234,-6.011852,7.834817,-0.947205,-4.115802,8.517920,-2.131110,-0.072429,-7.921632,-6.938582,7.515699,-2.393003,-2.179446,-4.828749,-8.404019,-1.650600,-2.859581,-6.611770,1.826582,8.374772,4.800165,-8.087848,1.446477,9.718823,-8.969573,8.128067,-5.550308,7.542749,8.631312,1.146162,1.328240,5.694070,-1.639173,-1.232229,-4.708378,-9.802367,-7.158862,7.501543,7.634722,-8.191106,-9.759103,8.923123,1.033163,0.575354,-9.688146,-7.149274,-2.085733,-5.207033,0.859507,-0.095997,-4.558432,4.312355,-8.658808,-9.266656,-2.570795,4.723708,-6.523196,6.654171,3.915571,-0.197411,2.971904,-7.349813,-1.731096,1.515353,2.678755,6.339091,-7.572261,-3.283008,3.470693,-6.271995,2.087609,8.512522,-6.199869,-1.059584,1.129273,-8.496292,5.505249,7.640631,1.077665,-5.637844,-7.834616,-0.277943,-5.814240,9.398541,-9.666569,9.113789,9.882500,1.399864,-3.498770,-7.697264,9.125100,-2.153603,1.262509,-2.669153,-7.811114,6.454442,8.113360,0.999902,-4.326968,8.628193,-1.839194,4.192666,5.837343,-5.388485,-5.498795,-1.131082,8.850411,-4.639215,-4.590243,3.987498,2.774200,2.398030,-1.590427,8.703356,-4.395161,5.385206,6.544124,-3.267750,-1.082616,-4.310656,7.469449,-6.887503,-7.937984,9.894863,6.886662,9.565941,6.396649,4.610542,-6.151737,5.840617,-5.979078,6.486003,4.526470,-9.183105,-9.655541,-1.677042,7.672642,-4.870932,9.664025,-7.103669,-5.695723,-9.331298,3.566667,-7.279364,-6.821370,-7.221149,-3.694642,-0.495520,9.554770,3.721500,-4.042527,-5.757399,-1.732128,3.644772,-1.067118,8.301473,4.768080,0.868921,8.904050,-2.187060,8.515680,-2.541724,3.366455,0.546683,-6.985709,-9.295396,-6.811105,-7.657284,-3.259773]], dtype = "float32")#candidate|620|(1, 330)|const|float32
call_619 = relay.TupleGetItem(func_302_call(relay.reshape(const_620.astype('float32'), [11, 3, 10])), 0)
call_621 = relay.TupleGetItem(func_305_call(relay.reshape(const_620.astype('float32'), [11, 3, 10])), 0)
uop_628 = relay.acosh(uop_615.astype('float32')) # shape=(6, 2, 6)
output = relay.Tuple([call_595,const_596,bop_598,call_619,const_620,uop_628,])
output2 = relay.Tuple([call_597,const_596,bop_598,call_621,const_620,uop_628,])
func_635 = relay.Function([var_591,], output)
mod['func_635'] = func_635
mod = relay.transform.InferType()(mod)
mutated_mod['func_635'] = func_635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_636 = relay.var("var_636", dtype = "float64", shape = (6, 2, 6))#candidate|636|(6, 2, 6)|var|float64
func_635_call = mutated_mod.get_global_var('func_635')
call_637 = func_635_call(var_636)
output = call_637
func_638 = relay.Function([var_636], output)
mutated_mod['func_638'] = func_638
mutated_mod = relay.transform.InferType()(mutated_mod)
const_694 = relay.const([[[-8,4,-7,9,-5,-8,4,7,-8,5,-7,-2,8,3]],[[9,-3,-6,-2,3,-6,-8,1,6,6,-1,6,1,6]],[[-7,-3,8,1,4,4,-5,-8,-7,-5,-4,-8,9,4]],[[2,-1,7,-5,-9,1,-2,-1,-7,1,7,-8,-4,-8]],[[10,7,4,-3,2,-7,4,4,-3,4,3,6,9,3]],[[-8,-10,-4,2,-7,-10,3,-1,7,5,-2,2,4,7]],[[1,1,-10,-10,10,-4,-9,7,6,-10,-5,7,-6,3]],[[8,-7,10,8,9,-6,-2,-7,9,-4,3,-1,1,-6]],[[-8,10,10,5,-3,2,3,-10,-2,-7,-2,7,-2,-4]],[[6,-3,2,8,-9,4,8,-4,7,5,3,-2,10,10]],[[10,9,5,-10,-3,9,-3,-6,2,-9,5,8,-5,-5]]], dtype = "int16")#candidate|694|(11, 1, 14)|const|int16
var_695 = relay.var("var_695", dtype = "int16", shape = (11, 12, 14))#candidate|695|(11, 12, 14)|var|int16
bop_696 = relay.right_shift(const_694.astype('int16'), var_695.astype('int16')) # shape=(11, 12, 14)
output = relay.Tuple([bop_696,])
output2 = relay.Tuple([bop_696,])
func_703 = relay.Function([var_695,], output)
mod['func_703'] = func_703
mod = relay.transform.InferType()(mod)
var_704 = relay.var("var_704", dtype = "int16", shape = (11, 12, 14))#candidate|704|(11, 12, 14)|var|int16
output = func_703(var_704)
func_705 = relay.Function([var_704], output)
mutated_mod['func_705'] = func_705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_927 = relay.var("var_927", dtype = "float32", shape = (9, 7))#candidate|927|(9, 7)|var|float32
var_928 = relay.var("var_928", dtype = "float32", shape = (9, 7))#candidate|928|(9, 7)|var|float32
bop_929 = relay.power(var_927.astype('float32'), relay.reshape(var_928.astype('float32'), relay.shape_of(var_927))) # shape=(9, 7)
func_703_call = mod.get_global_var('func_703')
func_705_call = mutated_mod.get_global_var('func_705')
const_933 = relay.const([8,5,6,5,-8,-8,8,8,4,3,-1,9,3,6,-8,3,2,-9,3,-6,-8,9,-8,5,-9,1,-5,7,6,5,2,-2,-7,3,-7,-3,3,-3,9,4,6,-9,-6,8,-10,5,-4,-8,-8,-3,10,-3,7,6,4,5,-7,-3,-1,-4,8,4,-8,3,3,-2,1,8,1,-6,-5,-9,7,7,6,10,-3,-6,-7,7,-6,-1,-4,4,4,-4,-3,5,-4,-8,4,-4,4,-7,2,9,5,-2,-10,6,-8,-4,3,9,-2,10,8,-4,-8,1,7,6,3,-2,-6,-8,-1,3,4,1,-2,-3,-9,-1,9,4,6,-9,10,4,10,-10,6,4,9,9,10,-2,-10,3,8,9,-1,-3,-10,7,-10,-10,4,8,1,5,-1,8,9,-3,3,1,10,5,10,9,-10,-8,-5,8,-6,-7,7,10,-9,2,-7,-5,6,5,3,6,5,10,10,5,-10,-3,-6,-2,6,-8,-7,-9,3,9,-10,-1,-8,-4,-8,6,-9,-6,2,3,-4,-2,-4,-3,7,-4,6,-3,-8,-5,-5,-6,-2,3,-10,3,-7,-4,7,1,9,2,-3,-2,-1,-9,9,-5,8,4,-4,2,3,-6,3,-4,-3,10,1,-8,10,-1,3,-10,3,10,1,3,-8,-4,-4,-5,-7,2,-8,10,-8,-7,-8,3,-8,-3,5,-5,-4,-7,-9,7,9,4,2,3,7,-2,-6,-6,-7,7,4,-6,1,7,8,-6,5,-4,3,6,9,5,-10,2,-2,1,9,4,-3,-9,-7,7,4,9,-9,7,1,-3,-5,-10,6,-2,-1,6,-9,6,-2,8,-4,-3,-1,3,4,-5,-3,-5,10,-3,-6,-6,5,-9,-5,-3,3,4,-6,-6,-2,-9,-7,5,6,8,-8,4,-4,-10,-1,10,9,-6,8,7,-4,-7,3,-8,-10,10,1,-3,7,8,6,-2,9,-2,-1,-10,-7,7,9,-10,4,-10,4,-1,-7,-8,4,-10,1,3,2,8,10,-9,1,-9,9,-7,3,3,7,-4,3,-6,-9,6,-2,-1,10,-3,-1,-3,4,-3,-9,8,10,-9,-8,-9,5,8,-2,4,-1,10,-1,-4,4,-1,-4,1,3,-6,6,-7,1,-2,6,-2,3,1,-6,9,10,4,-1,7,6,4,-7,7,-8,-10,5,1,5,-3,7,-2,4,-1,3,-8,9,3,2,-5,-8,-5,4,-2,10,-9,-7,-3,9,5,-10,-10,-2,-7,10,-7,7,-1,9,-2,-1,5,-4,-9,2,2,7,-3,3,-5,3,1,-5,-1,-10,-7,-3,-8,-3,-7,-3,9,1,8,3,8,7,-8,-4,9,1,2,8,-1,9,6,-1,1,-6,-7,-4,6,4,6,-2,-9,-10,-9,5,9,-9,7,1,-1,8,-5,3,-6,7,3,4,2,-7,4,10,7,10,1,-3,-8,2,-5,-7,2,-10,1,8,-10,4,-10,-9,6,-2,-1,-9,8,-2,-6,4,3,2,-10,9,9,3,-8,6,-2,-10,3,-3,3,-4,6,-7,-3,-7,1,-2,1,-8,10,4,-2,6,-4,-8,4,-5,1,-1,1,7,6,-2,5,-6,8,6,6,7,10,-6,9,-7,5,5,8,10,1,10,6,10,8,1,-7,4,4,-4,-3,-3,10,4,2,-1,6,9,-7,-5,5,7,-6,9,-10,5,5,2,8,1,-8,2,-2,-7,8,-4,-7,4,1,-5,8,6,8,7,2,5,-10,5,6,3,-3,6,7,5,-5,2,-10,7,4,3,3,7,5,-9,5,6,10,-10,-1,-6,-7,10,-7,-3,-2,-7,4,-10,6,-1,-3,9,-8,10,-5,-6,7,10,-4,4,-9,2,-5,-4,4,-9,10,-10,-8,8,7,8,9,-7,-8,8,2,-3,-2,5,10,-3,-4,9,-3,7,-10,-5,2,-1,-3,-10,-8,-9,9,8,-9,-10,-4,-7,7,-7,1,-7,4,-5,-8,3,7,-8,-7,6,7,-1,8,-8,-3,3,8,7,9,-10,-7,4,-6,-2,1,1,5,-1,-9,9,5,-8,-1,9,-6,-8,-4,7,-9,3,9,1,5,7,2,-7,-8,-2,-7,1,-9,-6,-5,3,6,-5,-7,6,-8,-7,1,-7,-7,9,1,-9,1,3,2,2,-1,10,-5,1,3,4,-10,-2,4,-4,1,5,-1,-2,4,1,-2,5,-9,-3,-2,6,-9,-10,-2,-8,-8,-7,-1,1,4,3,5,5,2,-8,-4,8,-5,-8,1,-9,7,9,6,5,4,-8,-4,2,-9,-2,-5,8,-9,4,-10,-10,-1,-7,8,7,-10,10,-7,1,3,1,-6,-9,-5,6,7,4,-2,5,3,-2,8,-8,-6,-1,6,8,-10,8,1,-1,-9,-6,-6,-3,-2,3,-8,-5,1,3,7,-1,10,2,-1,-10,8,1,5,-6,-8,-9,1,1,1,1,-7,4,-10,-7,-1,-3,-2,-4,10,-6,-10,-5,2,-3,9,-8,6,2,-10,1,7,-10,-10,-6,6,-9,8,7,1,2,6,6,3,10,-8,-5,-6,-4,3,9,3,-6,-3,2,3,-1,3,2,5,9,4,-10,1,1,5,5,-7,10,4,-1,5,7,-9,-4,-3,-2,9,9,10,-5,-9,5,-1,-3,9,3,6,-4,9,3,-2,-8,9,-10,9,-3,6,-2,3,2,-9,-5,-3,2,-6,-3,-10,-9,10,5,5,-6,6,-7,-5,-2,-2,-1,-8,10,-10,2,5,8,-1,5,-2,8,-2,8,4,4,-7,-4,10,8,-6,-1,-4,-6,-1,-2,3,1,-6,3,-9,7,-1,-10,2,2,-10,9,-9,10,6,-5,3,2,-6,-9,-1,-10,7,3,10,7,8,4,9,-9,8,-3,1,10,10,4,-8,-6,-8,4,4,-8,7,10,-5,-2,5,6,1,-7,7,-4,8,2,9,-4,9,-7,-3,4,-8,-3,-2,-10,4,5,9,-8,9,4,6,-3,9,1,9,-10,-2,9,-1,-6,-6,-6,-2,1,4,9,3,-5,4,-2,3,-9,6,-8,8,-10,9,-9,-2,-2,8,-8,-5,-3,1,1,9,1,-9,2,5,2,-10,4,-3,-8,-8,-2,-1,2,-2,8,-5,9,-7,1,-3,-7,4,-4,-8,8,1,8,4,-6,7,10,-4,-7,-7,5,3,-2,-5,-6,9,10,-3,-1,-10,-5,-2,8,1,-9,6,-8,-7,-8,7,7,7,5,6,8,7,-3,-6,7,8,8,9,3,-6,-10,6,-10,-7,-6,3,8,-7,8,-2,3,-10,-4,-6,-7,-1,-7,6,-1,-2,-7,10,4,-6,1,9,10,4,8,-4,-2,4,9,7,-5,6,4,9,1,2,5,-7,-1,-10,3,-6,6,-4,-1,6,2,10,-8,-5,4,3,1,6,-5,10,10,-2,-7,-5,9,-6,5,-8,7,-2,-5,10,-8,-7,-3,-10,-5,3,-9,2,-2,-1,-6,-8,6,-4,8,6,-10,-9,-10,-10,-1,8,-1,-10,-9,-8,3,8,7,-2,-7,10,-1,-2,10,-7,5,3,-6,-7,-7,1,-2,-1,2,5,-2,-9,-8,6,-3,8,-10,1,5,2,4,2,-2,-4,-4,6,-6,1,-3,1,-3,3,-2,-1,4,-1,-5,-4,-5,5,-9,-7,3,-10,-8,4,10,7,4,2,-1,6,-5,-7,1,10,-1,7,-7,-2,-8,8,-4,3,-3,5,6,-2,-4,-1,-8,-6,-10,-3,-10,3,1,-7,6,-4,2,3,-3,-1,1,-3,-5,-8,-10,3,3,-9,7,1,3,-2,-7,7,9,8,-1,9,-9,-2,-5,10,-3,6,4,-3,3,6,-10,9,-10,-9,9,7,-4,-7,-6,-9,-8,8,2,-1,-5,-4,-7,-4,3,7,9,10,-5,-2,-5,-1,-8,7,8,-5,-4,-10,4,-9,5,-7,-2,-8,5,9,3,-5,6,-10,-9,-9,-6,7,1,4,-3,-10,9,3,10,-4,-9,5,-10,-2,-2,3,10,-5,-7,6,-2,-5,6,7,-10,-10,-1,-6,10,9,9,-9,3,7,-2,9,1,7,2,3,6,-10,-6,7,4,-7,9,9,9,1,3,9,4,9,-1,-9,-6,3,7,10,-5,6,5,5,3,7,-4,10,-4,7,3,-2,6,3,-3,-7,-3,2,8,4,-3,-9,-9,6,-8,-9,-8,-2,-8,8,-9,2,7,2,1,-7,6,1,3,-1,2,-3,-2,-5,-9,2,7,2,7,-9,9,-3,2,-2,-3,7,2,-4,-3,7,-3,2,4,-5,-7,9,2,10,-6,-10,-5,2,7,4,-8,-3,-1,-10,10,-3,-10,2,-4,6,7,9,-5,1,-1,-3,9,8,3,-2,5,-10,10,9,-8,-6,-2,-9,7,6,-9,5,-5,6,2,10,7,-2,-4,3,-3,7,5,2,-7,10,-7,4,7,-9,9,-4,-9,-3,5,-5,6,-6,9,3,-6,2,7,7,-5,2,-8,-10,5,10,-3,10,8,-2,-6,2,7,5,-1,7,1,-10,8,-5,-5,-2,-1,-10,10,5,9,8,-5,-10,-7,10,10,4,2,-2,-4,7,-9,-4,1,5,-1,5,-7,-10,-6,10,-4,4,4,5,2,-3,1,2,-1,1,1,9,3,-2,-4,2,9,-2,-6,2,8,-9,-7,2,-7,1,9,7,1,-10,4,-1,-2,7,-9,-3,6,-10,2,-10,-5,10,3,7,-7,-7,10,5,10,-9,-10,-7,-4,-1,9,9,4,-9,7,9,4,6,-3,-6,-2,3,7,10,9,2,-3,-1,10,-2,-5,-10,8,-2,4,3,3,10,5,1,-1,1,4,1,-1,1,-5,-4], dtype = "int16")#candidate|933|(1848,)|const|int16
call_932 = relay.TupleGetItem(func_703_call(relay.reshape(const_933.astype('int16'), [11, 12, 14])), 0)
call_934 = relay.TupleGetItem(func_705_call(relay.reshape(const_933.astype('int16'), [11, 12, 14])), 0)
output = relay.Tuple([bop_929,call_932,const_933,])
output2 = relay.Tuple([bop_929,call_934,const_933,])
func_941 = relay.Function([var_927,var_928,], output)
mod['func_941'] = func_941
mod = relay.transform.InferType()(mod)
var_942 = relay.var("var_942", dtype = "float32", shape = (9, 7))#candidate|942|(9, 7)|var|float32
var_943 = relay.var("var_943", dtype = "float32", shape = (9, 7))#candidate|943|(9, 7)|var|float32
output = func_941(var_942,var_943,)
func_944 = relay.Function([var_942,var_943,], output)
mutated_mod['func_944'] = func_944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1160 = relay.var("var_1160", dtype = "uint32", shape = (11, 8, 10))#candidate|1160|(11, 8, 10)|var|uint32
var_1161 = relay.var("var_1161", dtype = "uint32", shape = (11, 8, 10))#candidate|1161|(11, 8, 10)|var|uint32
bop_1162 = relay.bitwise_and(var_1160.astype('uint32'), relay.reshape(var_1161.astype('uint32'), relay.shape_of(var_1160))) # shape=(11, 8, 10)
bop_1165 = relay.right_shift(bop_1162.astype('uint32'), relay.reshape(var_1160.astype('uint32'), relay.shape_of(bop_1162))) # shape=(11, 8, 10)
uop_1172 = relay.atanh(var_1160.astype('float32')) # shape=(11, 8, 10)
func_88_call = mod.get_global_var('func_88')
func_91_call = mutated_mod.get_global_var('func_91')
var_1177 = relay.var("var_1177", dtype = "uint64", shape = (154,))#candidate|1177|(154,)|var|uint64
call_1176 = func_88_call(relay.reshape(var_1177.astype('uint64'), [2, 7, 11]))
call_1178 = func_88_call(relay.reshape(var_1177.astype('uint64'), [2, 7, 11]))
output = relay.Tuple([bop_1165,uop_1172,call_1176,var_1177,])
output2 = relay.Tuple([bop_1165,uop_1172,call_1178,var_1177,])
func_1181 = relay.Function([var_1160,var_1161,var_1177,], output)
mod['func_1181'] = func_1181
mod = relay.transform.InferType()(mod)
var_1182 = relay.var("var_1182", dtype = "uint32", shape = (11, 8, 10))#candidate|1182|(11, 8, 10)|var|uint32
var_1183 = relay.var("var_1183", dtype = "uint32", shape = (11, 8, 10))#candidate|1183|(11, 8, 10)|var|uint32
var_1184 = relay.var("var_1184", dtype = "uint64", shape = (154,))#candidate|1184|(154,)|var|uint64
output = func_1181(var_1182,var_1183,var_1184,)
func_1185 = relay.Function([var_1182,var_1183,var_1184,], output)
mutated_mod['func_1185'] = func_1185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1419 = relay.var("var_1419", dtype = "uint8", shape = (6, 7))#candidate|1419|(6, 7)|var|uint8
const_1420 = relay.const([[-3,1,2,5,8,1,-10],[3,-9,-10,2,-9,-4,6],[-3,7,-5,-3,10,1,2],[3,9,4,10,-6,2,1],[4,-6,-2,-6,3,-3,7],[-2,-6,-3,-2,-4,-8,7]], dtype = "uint8")#candidate|1420|(6, 7)|const|uint8
bop_1421 = relay.not_equal(var_1419.astype('bool'), relay.reshape(const_1420.astype('bool'), relay.shape_of(var_1419))) # shape=(6, 7)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
const_1425 = relay.const([2.759257,-4.469929,-9.907421,-9.966762,3.831299,7.729460,-4.969792,-5.494222,-4.550870,0.997038,-1.679055,-1.997102,-5.338807,8.833039,8.896952,-0.923169,-9.208477,6.143087,3.215942,-5.645997,-1.429609,9.177144,3.229796,-6.280848,8.726300,-7.753180,-4.646138,-7.172162,-3.843279,6.086642,-0.359336,-7.614069,-3.879154,-9.884751,-7.289611,5.679821,-0.753506,9.069958,-7.054010,1.233868,0.181598,7.432687,-4.172647,9.000715,-5.312946,8.902891,-5.696486,7.475751,1.760040,9.388853,-8.230804,-6.447176,6.556285,-0.350192,5.413714,5.561872,6.215283,-7.059934,8.707413,4.045922,-0.763142,-7.157851,-3.353494,-7.750274,7.379073,5.442756,-2.385353,-1.172224,-0.072200,7.152255,8.789896,-6.732042,4.020896,-6.155151,-4.265613,-4.667289,-6.368802,-8.547176,2.362883,-4.296972,-3.202981,-5.193035,9.300266,-3.236095,-1.773028,4.490508,-3.064654,-0.617767,7.718449,-5.518832,-8.439806,-1.590951,-2.557590,-4.232795,3.987589,-2.506416,-1.231014,-8.402460,-6.738474,5.600146,-1.176847,-5.043063,7.922073,5.986699,8.798492,-7.553472,-6.743355,1.674507,3.134133,-2.343826,-0.877960,-8.357891,-9.209412,5.331031,5.440384,8.106006,7.969747,4.377540,-8.686751,2.488926,-5.905859,-8.062493,7.764852,7.279278,5.109546,1.413908,7.376054,-7.421404,7.958385,-8.268751,0.744922,-1.443624,5.068733,8.767339,-5.927962,7.116970,-3.567149,-6.378199,9.067540,3.340063,7.047679,5.491735,-7.974571,-0.329387,7.772561,2.541421,-2.213089,0.747098,2.953640,-8.572727,-9.675059,-0.177819,3.502102,-5.880228,9.133036,9.602972,-3.312513,0.617870,-8.170337,-6.724838,-3.578673,-0.298616,-0.764850,-1.844477,-3.625568,0.584283,-6.486508,-0.641321,-8.755471,1.217773,-4.241611,5.388705,6.651402,3.249256,-9.984645,5.241740,5.673381,-9.095231,5.950247,8.472806,9.694703,-7.662672,1.154931,7.837616,5.861201,4.834974,1.851001,7.973089,6.822815,-6.148198,-1.113986,-4.082323,-4.216780,4.309661,3.369694,3.522040,-1.589472,-7.835110,-9.720871,8.664052,-8.973612,3.728883,2.556594,-9.342363,-6.014515,3.460266,-6.169308,-5.327477,-3.405491,2.040032,3.537272,-8.282873,-0.774755,5.601866,-7.248111,0.219156,5.071584,-3.732572,5.124996,1.687786,5.616925,-4.874284,-8.066616,-5.362027,4.084352,-7.204256,8.434196,-5.864319,0.092935,-1.362182,-6.057936,2.555982,2.357272,8.715744,-6.379355,-9.077206,6.317653,-2.157391,6.305899,-8.318927,-1.065968,6.458983,2.727402,5.642992,4.278913,-6.581961,6.294537,8.695824,0.522279,7.720444,7.231054,3.429117,7.763687,-5.791969,0.274872,3.146971,5.492030,9.891286,-2.393462,-4.546716,-8.724505,8.843769,-4.265718,-3.874744,6.508089,8.667244,3.063009,3.835027,-8.384394,-3.999753,-2.613557,9.202553,-9.768651,-9.655096,-6.455905,5.705768,2.428542,-6.612728,2.008100,5.338299,5.380470,-7.043980,-4.007475,2.061034,9.995381,-5.113606,0.713187,-8.785482,-1.839116,-9.653750,6.716309,7.514784,-6.740559,-7.819099,1.074555,5.849733,-8.638882,9.066194,6.478497,-4.053519,-6.679970,8.988244,-5.278494,-8.105492,-0.538997,1.584271,-7.572409,1.444461,3.781794,-1.946021,5.371715,8.796003,3.687548,-6.492289,4.879861,-9.492275,8.599890,2.816117,6.088363,-9.103563,-3.542610,2.694531,9.991649,3.571111,-3.640486,9.187949,3.342930,0.845615,6.993722,-0.058534,-6.271840,1.970538,-5.087504,-1.560961,-7.675528,7.167872,-6.258487,8.661622,2.183598,-9.255227,-8.818985,-7.250442,-4.432194,8.681663,5.745296,-2.744868,-6.028803,-3.157534,-9.810476,-4.403455,6.070447,0.887169,-4.004735,6.542563,-2.028519,2.583826,9.245239,-1.424267,4.341289,-4.320702,8.968501,1.985633,-7.400081,-6.994455,-4.015217,2.550380,1.669274,4.383293,4.451274,1.355205,6.601956,-7.082583,-2.439292,-0.972137,-5.847003,3.849822,-4.996726,0.108916,-6.343308,4.873794,-3.295997,-5.040136,-5.871385,7.327189,9.198274,4.176725,9.373097,8.877517,-4.722745,-3.054720,-5.371340,5.255346,-9.332642,3.460482,-1.260673,7.075814,2.264957,-3.987345,6.151490,3.571064,7.261634,4.314177,1.798479,-0.544517,3.461809,-4.705844,-9.174319,-6.831009,2.490117,7.335728,-6.992992,-9.857367,0.523336,4.068159,6.951930,7.440167,5.875629,2.532583,9.173522,4.211140,-9.697826,2.846254,6.258130,5.345059,4.334790,-1.429699,0.338202,-4.371424,-7.140280,-6.619931,-8.892862,-1.013106,-0.401360,-1.655336,5.151496,-4.405097,-1.563527,0.725016,0.070782,-1.899308,9.714358,0.123653,5.630270,3.780436,4.148862,5.004922,8.591396,-2.365655,-6.860317,-8.527934,-5.900164,7.175064,-2.155096,-0.086209,-6.436240,-5.770514,9.264654,-4.041887,5.911199,-5.313497,7.058785,6.514754,6.391953,1.725770,-0.335946,-9.496469,-3.162470,8.342894,-9.112641,5.744758,-2.259741,-2.724388,4.678827,2.169929,7.462558,1.659223,4.047950,8.907648,-1.342164,-2.358871,-7.704208,1.573468,3.602976,0.832484,-6.717264,-6.407501,4.574093,0.785316,6.742747,5.144528,-5.680566,-3.712080,1.069816,9.973137,-4.154128,3.646046,-4.741008,0.485579,3.935948,3.291957,3.816299,0.196426,-8.331374,8.973393,6.285129,-6.779210,-1.849045,7.211896,8.404343,5.079582,3.234916,-9.840150,-6.119697,0.840290,6.736995,5.192599,-0.383123,0.816040,9.868477,-9.183587,4.277184,3.049936,6.317773,-4.559173,0.081193,-8.380648,-7.336779,-8.113862,2.370623,-4.914626,-9.355117,2.604240,-9.562116,5.587575,-7.563841,-6.558204,2.781654,1.703060,0.368400,7.283034,4.215393,9.334738,-7.476359,-1.293446,9.132136,-7.689322,4.369163,-9.825458,-0.573005,5.936303,9.003705,5.557316,1.389711,-6.455992,-0.526952,2.790350,7.137905,4.450814,-1.473070,6.401152,-5.836996,5.713979,-6.144064,-4.833387,-4.210287,0.375773,8.965666,-8.625066,3.718671,8.648315,-4.323067,8.548152,0.810007,0.253068,4.581982,0.874370,8.574594,0.842532,-0.787780,-9.965359,0.966285,3.136855,-1.694327,-3.548637,-4.361356,8.040123,-5.028605,-6.028521,7.595735,-0.141892,8.909795,0.248148,-7.920338,-2.462118,-3.625935,4.557821,-8.524176,-7.023585,-4.166521,-0.675782,4.457337,1.895152,-3.088477,8.711094,-0.688901,-4.712384,-2.601643,-8.981081,-3.224130,9.757128,3.835142,9.368409,8.976396,6.394770,-9.108784,-3.293045,3.195970,5.380376,-1.626703,-0.623779,-3.327527,-0.969267,-9.059166,-6.640327,8.872885,2.002539,-1.270227,-3.113631,-1.644715,-3.267779,9.834989,-4.988690,-2.848407,-0.762980,7.978229,7.669341,-7.931627,-9.782090,-7.861661,3.465742,-4.219553,0.719557,2.028605,3.526846,1.919731,-9.668266,-5.972624,9.043503,7.161141,6.923688,-1.218040,-7.060759,-5.089517,7.246658,4.964923,-1.865610,1.846717,5.449635,0.655867,1.503184,-6.033992,4.748234,-6.059602,1.130735,1.122596,-5.497707,-7.155678,-7.060559,2.531559,9.201959,-9.886246,0.898207,4.538895,6.575246,9.040550,5.640084,-8.199666,-5.374259,-2.980661,-3.915484,3.624943,6.851995,-3.220079,-0.203389,-5.830027,-2.658847,-6.161796,-3.973520,-3.630581,-8.995124,-9.096645,4.762357,5.286695,-4.507648,-3.163777,3.080592,6.201658,2.418064,-8.128888,-6.742497,8.405822,2.509764,-1.606384,-5.528309,1.336303,-4.286427,-8.917537,0.696227,0.567362,3.655692,-0.081906,9.150265,-8.679726,3.280911,2.039762,1.832798,3.112804,-6.674745,-2.382606,-2.619047,3.438315,-1.355241,3.316471,9.729927,5.294338,-4.423899,6.405922,4.625495,-2.919953,-0.559538,-6.199037,-2.978748,4.334661,2.594265,6.733770,5.122988,-8.230780,9.527332,6.224631,8.691989,6.886774,1.526304,0.338518,-1.835197,0.297837,5.906983,-2.707883,8.754248,-4.184003,-2.225170,1.407978,0.495103,6.585827,4.360320,7.062616,8.316773,-3.201778,-9.193983,1.095953,0.126886,0.014453,7.410799,-3.445471,3.165425,0.698315,9.256689,-5.968483,8.104513,0.328100,-1.713457,5.847615,5.634770,-3.873336,4.518343,0.414954,0.531810,-6.042255,-8.699949,2.022635,1.976395,5.268218,4.228814,2.979497,6.646151,3.822039,-0.910006,9.957734,-4.446064,9.807621,-3.008071,-2.115802,3.887932,-5.037251,-4.655481,-2.823152,-4.239302,-1.244666,8.304139,-3.199185,-5.064539,-0.152911,-9.152403,-2.294028,-1.163102,4.756751,-3.643086,-3.643066,-5.801602,-4.877008,-4.054600,-6.947592,-4.428577,8.365347,9.539155,4.342398,6.161052,-5.707557,2.610064,7.047155,-8.213758,-3.326725,-4.339793,-5.462982,0.288868,2.232131,4.603855,9.299462,-7.454085,0.617972,-1.452858,9.601881,2.516920,-4.930427,2.095929,-9.980413,-4.127856,-4.747561,0.747961,8.004640,0.539458,-5.247917,-5.619041,5.062223,-2.896578,-1.934032,0.668759,6.388164,5.768377,2.696081,4.616176,-8.233549,0.613280,-3.117042,-0.592994,4.378414,8.944951,-7.559988,6.984522,-2.758795,8.054161,1.081354,3.008234,6.410138,-2.417135,5.178881,-9.551401,6.514823,-9.588219,-2.595668,8.362211,7.043456,6.425793,-5.804928,9.254334,4.377158,-0.851350,3.106200,1.959391,-0.025384,3.347027,9.602497,-8.189483,9.867023,-6.547938,9.060380,-7.314714,-8.595930,-6.313092,-9.258949,-0.966270,-1.308453,-4.305602,-3.997246,-1.282360,5.248340,-2.511448,1.438584,4.879899,3.765048,-8.084377,3.755487,9.403261,3.229289,8.647522,4.314547,0.778224,-7.045695,9.866700,5.977458,0.880918,-2.383511,3.809980,-8.972429,-1.261971,-0.255716,-7.196240,7.773030,-9.521801,-3.070032,9.453890,8.641794,0.221382,-4.675217,-4.203039,0.351249,9.536645,4.043031,7.224716,4.938613,6.442650,9.091229,-2.296083,-2.856386,4.212700,-1.144443,-1.435630,6.003767,1.581969,6.960706,8.207003,1.282610,-6.413060,4.148509,1.571020,3.640413,-6.416861,-1.634863,-2.179821,5.362170,3.760063,-4.659571,2.021074,-2.753399,7.890244,-3.314979,-7.117999,8.072522,-3.014663,-3.239470,-5.692168,3.863865,-2.631158,3.787599,-5.678854,-0.526311,-0.821987,6.823739,-1.615759,-8.194476,1.337729,-0.902614,-2.733947,-9.766612,-0.753514,-6.568139,2.710230,-8.060898,-8.742528,-7.170398,-8.880933,-1.293115,7.973750,5.412123,5.672867,6.327472,-9.884337,-2.901279,-6.926054,-2.791298,-2.868285,2.909575,-3.859508,8.885123,5.574215,3.129910,2.339848,-7.929967,2.546709,-1.832049,3.049557,-6.821635,-0.543799,-2.443186,5.370669,4.279233,-5.635833,8.591858,-9.030467,8.247484,-7.121470,-5.187732,-6.773162,-4.666491,-4.158279,6.970244,4.437372,3.996872,-7.782258,-5.436505,-2.364839,5.778041,-3.203774,3.757184,-6.397699,-6.009989,3.293387,-5.180511,0.077809,-9.627882,1.129408,4.457746,2.228989,-0.848182,-4.793220,9.048354,0.647999,5.276265,-1.097238,-4.675185,3.852224,4.363611,0.671144,3.392853,1.278845,-8.661989,1.993234,0.270050,5.188845,-0.005216,-1.182199,-4.886608,6.382688,0.399672,0.715967,-6.904934,-3.882069,5.753424,0.710967,-8.813452,-8.802186,1.971817,-7.841934,-6.705957,1.677550,4.058555,4.198221,6.281433,-2.896427,-8.931560,-2.897796,-2.322078,-0.100517,6.548226,-7.022800,-2.251063,-7.124421,-3.603288,-9.145631,-9.040320,-7.998716,4.646207,-5.864685,-4.220505,4.822115,-2.487173,6.695776,-9.093773,-0.292090,9.935813,1.343635,-0.420230,9.522342], dtype = "float32")#candidate|1425|(1092,)|const|float32
call_1424 = relay.TupleGetItem(func_461_call(relay.reshape(const_1425.astype('float32'), [14, 13, 6])), 0)
call_1426 = relay.TupleGetItem(func_464_call(relay.reshape(const_1425.astype('float32'), [14, 13, 6])), 0)
output = relay.Tuple([bop_1421,call_1424,const_1425,])
output2 = relay.Tuple([bop_1421,call_1426,const_1425,])
func_1437 = relay.Function([var_1419,], output)
mod['func_1437'] = func_1437
mod = relay.transform.InferType()(mod)
var_1438 = relay.var("var_1438", dtype = "uint8", shape = (6, 7))#candidate|1438|(6, 7)|var|uint8
output = func_1437(var_1438)
func_1439 = relay.Function([var_1438], output)
mutated_mod['func_1439'] = func_1439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1622 = relay.var("var_1622", dtype = "float32", shape = (7, 1, 13))#candidate|1622|(7, 1, 13)|var|float32
uop_1623 = relay.cos(var_1622.astype('float32')) # shape=(7, 1, 13)
output = relay.Tuple([uop_1623,])
output2 = relay.Tuple([uop_1623,])
func_1630 = relay.Function([var_1622,], output)
mod['func_1630'] = func_1630
mod = relay.transform.InferType()(mod)
var_1631 = relay.var("var_1631", dtype = "float32", shape = (7, 1, 13))#candidate|1631|(7, 1, 13)|var|float32
output = func_1630(var_1631)
func_1632 = relay.Function([var_1631], output)
mutated_mod['func_1632'] = func_1632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1693 = relay.var("var_1693", dtype = "float64", shape = (15, 11, 14))#candidate|1693|(15, 11, 14)|var|float64
uop_1694 = relay.atan(var_1693.astype('float64')) # shape=(15, 11, 14)
output = relay.Tuple([uop_1694,])
output2 = relay.Tuple([uop_1694,])
func_1701 = relay.Function([var_1693,], output)
mod['func_1701'] = func_1701
mod = relay.transform.InferType()(mod)
var_1702 = relay.var("var_1702", dtype = "float64", shape = (15, 11, 14))#candidate|1702|(15, 11, 14)|var|float64
output = func_1701(var_1702)
func_1703 = relay.Function([var_1702], output)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1793 = relay.var("var_1793", dtype = "float32", shape = (3, 14))#candidate|1793|(3, 14)|var|float32
uop_1794 = relay.cosh(var_1793.astype('float32')) # shape=(3, 14)
output = relay.Tuple([uop_1794,])
output2 = relay.Tuple([uop_1794,])
func_1839 = relay.Function([var_1793,], output)
mod['func_1839'] = func_1839
mod = relay.transform.InferType()(mod)
var_1840 = relay.var("var_1840", dtype = "float32", shape = (3, 14))#candidate|1840|(3, 14)|var|float32
output = func_1839(var_1840)
func_1841 = relay.Function([var_1840], output)
mutated_mod['func_1841'] = func_1841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2041 = relay.var("var_2041", dtype = "float32", shape = (7, 15, 13))#candidate|2041|(7, 15, 13)|var|float32
uop_2042 = relay.acos(var_2041.astype('float32')) # shape=(7, 15, 13)
func_703_call = mod.get_global_var('func_703')
func_705_call = mutated_mod.get_global_var('func_705')
const_2052 = relay.const([[-10,6,4,9,-9,-8,-1,9,10,-4,-5,-9,-8,10,-10,1,-9,-5,-3,9,-7,10,-1,-6,4,-5,8,1,5,-10,-8,-7,10,-9,6,-4,4,3,-4,6,10,-4,5,4,7,-7,7,-3,5,1,-2,4,-10,1,5,1,-9,4,2,-6,-2,-7,6,-5,4,10,-2,1,-3,-5,2,-4,2,-6,5,-5,-4,7,4,1,-9,-1,-7,-2,-7,-1,-4,-1,-4,-3,9,-8,-2,-3,9,4,6,9,-10,-4,-10,5,1,-2,-2,-3,-7,-6,-8,-7,4,4,-7,-1,-6,5,1,1,7,-6,10,-4,2,6,-8,6,-2,-1,-5,-9,1,-8,5,4,-3,-3,-10,8,6,10,6,-7,10,9,-10,8,-2,4,6,-1,8,9,-10,8],[2,-9,5,7,4,1,-6,-7,-5,-8,-9,-9,-3,-3,-7,1,10,-8,-8,2,-4,-7,-4,-1,-5,10,-7,9,9,-7,4,4,7,-8,-8,8,3,-2,-10,-6,3,-9,6,4,-1,-10,6,8,7,-10,-6,8,-6,4,5,-10,-5,1,-8,-7,-4,5,-10,-7,9,-3,-8,2,-1,-1,-8,5,2,7,10,3,10,8,-1,8,-2,4,-3,-5,5,-1,7,-8,-5,-10,-8,1,-1,7,-3,3,-7,-7,-5,5,8,-3,-3,3,8,4,-6,-2,-5,-10,-6,-6,-2,-1,7,7,1,10,2,3,7,-6,4,2,8,10,7,-7,10,5,4,-3,-3,3,6,-7,-5,8,2,-9,-3,4,-6,10,9,-1,9,-9,7,-10,-8,-6,10,4],[-5,10,-3,-2,5,3,9,-6,10,-3,-7,-9,-9,-10,2,-9,-7,7,-5,-1,2,4,-9,-2,-6,-5,-7,8,1,5,1,10,-2,10,-7,8,4,-5,-2,2,-3,1,-3,-7,6,-8,3,5,-7,5,-7,-7,6,-3,-8,-6,-2,-2,5,-9,-9,-6,-7,2,-9,9,-1,-6,-8,-7,4,9,2,2,1,8,10,-6,8,-10,4,-10,8,4,-5,-2,8,-6,3,8,1,5,2,8,-7,5,-10,10,3,3,7,-8,7,5,-3,-3,1,-8,9,-4,-6,10,6,-3,-6,-6,2,-9,-7,8,-9,6,8,2,-10,4,5,-2,-5,-1,-1,-5,-10,-9,-9,1,-9,6,1,-7,-6,6,6,-4,3,4,-4,-7,3,3,5,10,1,3],[5,4,2,5,-10,-1,-6,-8,-5,-7,3,10,6,-3,-5,-10,8,-2,-5,-8,-7,9,7,-6,-4,-1,-4,4,3,6,4,10,9,-2,-10,1,-3,-3,-2,3,1,-3,-6,-5,-6,9,-9,4,1,-4,8,10,-8,10,-3,5,8,9,7,-5,6,-3,-10,-3,-4,-4,2,2,7,9,-8,4,-4,-9,10,4,-5,1,5,-10,10,-9,-8,-4,6,6,10,9,-6,5,-10,10,-5,5,-6,6,9,-10,-10,-3,-10,10,9,-5,6,1,-8,-3,3,-2,-3,6,-6,8,-3,-2,-7,4,-10,3,7,-3,-6,-8,4,-7,-10,8,9,4,6,4,8,3,5,3,-1,-8,3,-5,6,8,5,4,4,6,3,3,-10,-9,-2,8,1,10],[2,2,7,3,-6,8,4,9,-7,-9,9,-1,-2,-6,-5,-6,-4,-6,-8,5,-8,5,-10,-9,7,4,-8,8,-4,-3,-3,-7,-9,9,1,-3,-8,1,1,5,-10,3,-1,-9,7,5,3,8,6,9,-1,8,-1,9,1,-9,10,10,-4,10,5,1,1,1,-7,5,-3,9,-2,-5,2,-3,-7,-8,5,2,5,-7,-5,2,-9,1,-1,-5,9,-5,3,5,-2,10,-1,7,-8,-10,3,4,-10,3,7,4,7,9,9,7,-7,9,9,-1,10,-7,-3,6,-10,-5,-6,-5,10,2,-1,3,6,-5,-9,10,-2,-4,-10,10,-9,8,-6,10,-10,7,1,-9,-3,-10,5,-2,8,1,4,7,6,1,-8,-10,-1,-10,-7,9,-3,2],[8,-4,8,4,5,-7,9,-5,-7,7,-1,10,6,-10,8,-7,-6,5,-6,-7,-2,-4,-10,-8,-3,5,-2,4,8,-6,-5,-5,6,4,10,-3,-6,5,-3,3,8,9,-6,-7,-6,1,6,4,-7,-1,2,3,-10,-3,1,-10,7,10,-2,-8,-10,4,6,-7,8,1,-4,7,-5,9,-10,9,-8,-9,-8,1,-5,-5,4,-3,1,-4,2,-3,4,3,8,-1,2,7,8,-7,6,3,3,-2,-2,3,8,1,5,7,-7,-2,-8,-7,10,9,-6,-3,8,5,-4,6,-6,5,2,-7,-10,-5,9,-5,6,2,-6,-2,4,6,8,9,8,5,4,8,2,-2,-5,-9,-9,-4,-10,9,4,10,-9,7,-1,-7,8,-10,-9,1,-9,5],[-5,-5,5,-7,-1,-4,7,8,-6,6,-2,-4,9,5,10,-8,-10,10,-6,6,-5,10,4,2,4,-3,4,-9,5,-1,-5,9,-1,-3,-5,6,1,-4,5,6,3,8,-9,2,-3,10,-1,5,8,-9,-7,5,-3,5,-6,-7,-10,-8,-4,-2,3,-6,1,-4,-7,1,10,-4,-4,8,9,1,-4,6,-7,-4,-2,-5,-2,-1,-4,5,-8,-6,7,4,-3,5,4,-3,2,1,10,7,7,-10,-10,-6,3,3,-7,-8,-2,6,-4,6,10,4,-5,1,8,-4,6,9,1,-1,-10,9,-2,9,5,4,5,5,-8,4,8,6,-6,-7,-8,-5,5,-10,8,3,-5,7,6,9,-8,1,1,-4,-4,-5,-7,-1,-4,-1,2,-6,-4,6],[4,-5,-10,-10,8,9,-3,6,-7,-4,10,5,-1,7,-3,5,-10,-2,9,-3,-6,-10,-7,10,-3,-4,2,-5,10,10,6,-5,-8,-7,10,5,-2,-6,-1,-2,-1,-7,6,7,3,1,5,-6,-2,-1,4,-8,-2,5,9,8,-4,6,-7,7,-2,-9,-4,-9,9,9,-5,8,-1,1,-2,1,-3,7,-2,8,-5,-9,2,-7,8,-4,5,2,-7,-6,-1,-5,6,2,8,-1,9,-4,-10,3,9,4,-9,9,-9,-3,4,3,-3,9,7,6,10,6,-1,9,-4,3,9,-9,7,-7,1,-10,-6,-6,8,6,2,-9,3,-4,-1,10,8,-8,-3,-7,-6,-9,-5,5,8,1,-5,4,8,-5,-4,-9,-6,1,-4,6,-5,-4,1,-4],[-3,9,-7,6,-1,-6,-9,1,-4,7,-1,7,7,6,1,8,-9,1,-10,-1,1,-7,-4,8,-1,5,-7,5,6,-3,-5,2,-8,10,-2,-8,-10,-5,-3,2,9,3,-10,3,2,-2,7,-3,-6,4,5,5,6,10,5,1,-9,-2,-5,-6,1,5,3,4,10,1,1,-1,-6,-6,4,4,4,-4,-1,7,10,1,-10,5,4,-5,2,1,6,-8,7,-6,10,-1,2,-4,-1,-8,-3,-3,8,3,6,9,-3,2,1,-4,-8,5,-4,2,5,8,-2,-4,-1,-2,2,8,-8,-7,10,3,6,-8,6,-6,10,10,5,2,-2,-4,6,10,-4,-3,8,-2,4,7,-4,3,-6,-5,7,-10,4,3,-6,3,2,4,-4,6,-8,9],[7,5,-5,6,-2,2,10,5,10,4,4,2,6,-5,5,8,6,-5,6,2,8,3,1,2,3,-1,-5,2,-5,6,9,-1,-9,-5,-6,2,-2,1,-10,3,10,8,-1,7,-9,5,10,4,-2,4,-7,3,-9,5,9,5,-3,7,5,-1,10,4,-2,7,7,-2,-8,-4,-1,-8,-8,-2,-6,-7,6,7,4,5,-8,-9,-6,9,-8,-2,-3,-9,-3,-2,-1,-4,-6,2,10,5,-2,5,7,-3,-7,2,-5,-1,-2,-1,-3,-10,6,9,9,-6,-10,10,-4,-2,6,-1,7,-3,-6,-3,-9,-7,5,3,-4,7,-1,-1,8,4,-9,8,6,4,6,-10,-10,-2,-7,-9,7,4,2,10,1,5,10,6,5,-9,-7,7,-8,-10],[-7,5,-6,-9,4,-10,5,5,-9,3,-10,4,-1,-3,-4,-3,6,5,5,-2,-5,-6,-8,-10,-3,-10,5,-8,-6,5,-8,9,4,-5,7,-10,10,7,-8,-2,7,-3,5,-9,4,1,2,-3,-5,5,-8,6,-2,5,-9,-10,10,-9,5,-7,3,1,9,10,-6,6,2,1,7,6,2,2,-1,8,10,7,3,-7,-3,6,5,-3,-6,-3,-10,-6,-6,6,-1,3,10,-7,7,-7,2,-4,-5,-4,-1,3,7,-8,10,-8,8,4,-1,-5,4,3,-5,-3,-3,-3,-3,10,6,10,-1,6,-4,-9,1,5,6,-1,6,3,-8,-6,1,-10,-3,4,3,-3,-10,1,-8,7,6,-5,2,2,2,-3,-3,1,-7,9,-5,-6,7,-8],[-6,7,5,-6,9,8,-7,8,8,-5,-6,-5,-9,8,8,8,-3,8,8,6,2,-1,-9,-9,10,-1,10,-9,-7,-4,-3,1,-7,5,-10,3,8,-1,6,-1,-5,3,8,-4,-9,2,-1,9,1,-3,8,5,3,1,5,6,-6,-5,10,-1,-10,-2,-7,10,6,1,3,-8,-1,6,10,-5,-2,1,2,1,-7,4,4,2,-9,-2,10,-9,-8,6,-8,6,-3,-1,1,8,5,-1,-6,-10,7,-9,3,-9,-4,3,-8,-9,-8,-6,2,-6,-6,9,10,-10,1,-6,-7,7,2,5,-9,-10,7,-5,-2,8,-5,-3,-8,6,2,6,-8,3,3,9,4,-8,-9,-10,1,10,-6,-5,-6,4,4,9,2,-2,-2,8,4,5,-8,-4]], dtype = "int16")#candidate|2052|(12, 154)|const|int16
call_2051 = relay.TupleGetItem(func_703_call(relay.reshape(const_2052.astype('int16'), [11, 12, 14])), 0)
call_2053 = relay.TupleGetItem(func_705_call(relay.reshape(const_2052.astype('int16'), [11, 12, 14])), 0)
uop_2056 = relay.atanh(var_2041.astype('float32')) # shape=(7, 15, 13)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
const_2065 = relay.const([2.795569,-6.517954,7.102952,4.889160,-2.770172,7.876460,6.391365,-4.044197,-4.134871,-3.762175,-1.358410,-1.210155,8.254673,-2.462745,-2.805082,-0.260487,-2.377666,4.358859,-6.133127,6.095869,8.969495,-3.128565,4.007840,-1.097960,0.785983,5.424813,9.275959,0.781220,-7.474320,-0.442178,6.454640,5.762294,4.009261,5.396360,3.560563,9.817930,6.253683,-9.898065,-9.199437,4.552677,4.254777,-3.306601,-8.783241,2.525936,7.243448,1.564011,3.292584,-7.355438,-7.299426,-0.951053,-9.218431,-8.947796,4.612512,-3.050134,2.720286,6.550852,5.098950,-4.356628,-9.920119,-3.052261,5.559973,-8.129496,-3.273700,3.257503,-1.233111,9.524864,3.902180,6.208509,-0.883378,4.190968,0.461158,-6.893436,-0.499595,-5.660453,4.468718,-4.976790,-4.676981,1.819193,3.414898,7.986293,-3.733609,9.038313,-1.582649,0.697800,-7.256068,1.456578,0.358201,-0.693947,-1.625834,-9.119623,-6.009680,-5.500928,0.422421,1.206038,-2.200965,0.467679,7.495299,2.841963,6.755861,-1.209523,8.532489,8.542442,-4.723812,-4.462360,-2.808691,-7.539807,7.360418,8.618459,-1.422903,1.972080,-3.682996,3.769547,9.167160,0.679339,5.113173,3.080498,6.162258,-2.173471,-8.794053,-2.331626,3.338167,7.555194,7.139878,-8.570036,-5.384051,6.550362,-7.308959,-6.943298,7.646721,-5.324295,-4.806088,5.511963,-1.916355,5.817529,-9.241767,3.741671,-9.267699,-0.536404,6.516531,8.592819,-1.496751,-3.571570,4.137773,3.400337,9.202494,-7.669492,2.026115,1.140464,9.796782,-2.871117,1.217510,4.816263,1.255281,8.055707,-5.656249,-4.235094,2.079150,1.614949,2.090395,2.769910,-4.033547,-3.102596,3.162404,9.348754,-1.907000,-3.690578,0.026427,4.726106,6.267737,-3.383719,6.606842,3.211711,6.485872,-8.533574,3.505379,5.116954,6.079107,7.515741,-4.758974,9.587746,-1.776962,-3.326390,1.755228,-5.077505,-1.459635,1.786672,7.772916,8.129306,7.737479,-1.974829,4.140816,5.068346,9.629852,-3.636480,4.973565,5.498085,8.924600,-4.880454,1.403300,-8.785236,2.791663,-1.267602,-8.883283,6.866981,5.327964,-7.015136,-0.080291,2.680933,-2.378882,5.707646,0.300791,3.582511,-8.065632,0.464781,7.222694,7.064358,8.197439,7.916895,1.985110,-0.696067,-2.246011,-9.787831,-4.556068,1.373343,7.653750,-6.259786,7.723987,9.457547,7.409909,8.066953,-2.120772,6.857284,-9.658518,2.938439,-9.481383,-8.913693,-4.059692,0.558704,-7.326825,8.712645,7.895414,-4.443019,-1.336992,-6.268570,2.054702,-8.163541,-5.193183,2.788446,-5.202533,9.893969,-0.945042,-1.535831,-4.166104,3.831464,-7.196172,-3.135231,1.501541,-1.040802,-6.041067,6.603473,-9.602757,-6.930621,-8.211084,-8.181081,-4.274945,6.151289,3.285140,-5.277593,1.293232,8.800472,-9.744029,1.825040,-9.319298,8.559009,-5.761064,-7.154227,-1.680232,9.188368,5.363107,-5.524579,0.926161,-7.749332,4.841158,-2.151326,7.650427,-5.840007,7.035145,6.601529,0.410476,2.492406,2.899384,-2.849134,-5.693293,-7.302668,7.776065,5.951303,-5.816206,-6.564899,-1.603834,-3.776901,-1.698922,-4.444435,-1.411063,9.443286,-3.487376,7.462613,0.501111,-6.457498,-1.697687,7.092187,0.147507,-0.845513,-3.536091,2.713326,-3.171851,-4.323331,-9.722069,-1.773941,-9.726523,-6.826844,-6.439990,1.823411,1.311532,2.010719,-3.747426,-3.341215,-2.635491,-4.193129,0.504710,3.629411,8.821479,-8.516946,-0.264815,0.856724,-5.109109,-3.532744,5.543118,-5.770531,1.272223,-4.519153,-5.085547,6.614680,-5.371673,-7.084203,5.613924,7.176415,4.638227,-4.206043,-9.029706,8.965847,4.829372,-4.886116,8.988904,8.620474,-6.574848,-7.198208,-6.415995,2.610118,1.190877,-5.405499,-9.842308,-8.224647,5.534903,6.703481,-9.900312,2.963517,-4.116550,-5.235819,-5.408475,-6.783391,-5.396350,-8.291169,-6.340302,1.392002,1.606757,-0.914635,2.423473,7.312579,9.442899,-8.891927,0.318152,2.421671,3.274766,0.484266,-2.287558,8.346439,7.969412,1.047309,2.785451,4.398940,4.928830,-1.341438,-6.378414,3.685438,0.238935,2.601160,7.162920,-7.027563,5.809500,1.207956,-1.100788,-1.659868,-8.808284,4.419745,-8.653051,-2.579665,1.903298,-6.711594,-7.800330,5.156921,4.528017,9.790125,-1.773884,-8.585341,7.969420,0.182823,-4.871246,0.125905,6.422393,-5.137526,-2.220979,2.372764,-8.272269,2.448168,-0.679464,-8.993115,-2.626697,-6.255685,1.230624,-5.942068,-4.467334,-4.737229,1.926788,2.369878,0.332223,-0.244961,-0.427887,1.026642,6.337896,-1.511901,7.719045,1.611274,-7.023752,-0.578097,-3.718784,-6.936590,-5.113782,0.693874,2.167234,6.634527,8.729658,-7.967373,6.200206,-9.544269,-1.089925,-2.042999,2.135957,8.310410,-8.449394,0.294865,-3.280308,2.759992,7.310811,-1.821291,-5.809714,5.208259,9.245940,9.305025,8.844941,8.503807,-5.610885,3.967990,-7.363801,3.711486,4.761079,1.556226,6.370501,-9.074794,-7.220153,7.065743,-9.240461,-6.104800,-4.028998,9.679947,3.716188,4.866334,-9.902453,3.590419,-3.036767,8.685333,8.387181,5.837984,-1.073953,2.897276,1.175872,0.322357,4.003057,6.810115,1.949737,8.091370,-8.355325,6.042844,-3.856153,3.344165,7.390423,-2.498524,1.818974,7.645195,8.983212,-8.736258,4.213090,7.521226,3.651593,-9.158965,7.612084,4.484077,9.644474,-2.059841,8.388300,-6.150943,7.828678,-7.125620,-0.840246,-2.461446,-8.745179,-4.208263,-7.185524,5.118856,4.007868,-1.723346,6.637159,-6.002329,-1.524045,-0.446013,-6.180355,8.034685,6.329431,-6.679565,3.891298,-2.046351,-8.810249,-7.555634,-9.318060,-0.937987,1.154608,-9.390209,1.759044,8.628958,7.292453,2.066079,-5.183271,7.800174,-9.769479,-9.136659,-6.527254,-5.308829,5.011421,9.297249,-7.666218,0.787287,0.544861,-9.704994,-7.534595,-8.487826,-2.575889,5.139446,-9.828911,-7.598161,8.834108,3.288714,6.893827,-4.097520,-9.260020,-4.846484,9.402019,-0.534063,5.376201,5.159907,0.430988,-7.570558,-6.143420,-0.391618,-1.115342,7.405950,1.240390,-9.295000,-1.053224,-2.223339,-7.775644,3.389727,-1.485623,-4.358191,3.703751,-9.806203,-5.868883,-8.190985,-3.761209,7.559949,1.991423,-5.481977,4.415963,-4.240094,6.668563,-0.162995,7.499387,-1.994865,-0.983413,-6.015736,-3.858151,-8.104571,9.694327,9.429994,9.434197,-1.316895,-6.147272,-9.762946,4.672206,4.100343,0.283039,9.158432,-7.191008,-1.101401,-0.740810,-3.610743,2.105299,4.620524,5.766213,6.905395,-7.387466,6.289592,-6.386877,-5.416500,-0.092481,4.659322,-0.540464,0.667478,-5.856974,6.407100,-4.895720,2.945033,-1.930085,-4.258696,-7.169503,-6.817393,9.769529,7.138531,2.416619,-0.101090,8.771917,5.958023,-8.109900,-4.795807,2.585814,3.468102,4.521609,4.493202,-6.279688,9.274766,7.339767,4.133014,-4.587908,3.094958,-1.612905,8.859687,6.132337,5.346738,8.155792,-2.870491,3.452230,-9.576290,-2.985216,-9.497709,4.650646,1.244402,-6.757381,-9.479974,1.570833,-8.242934,2.333871,-5.057292,9.690875,-8.482090,2.809740,3.857493,-0.237829,-8.360902,4.611979,1.375654,-3.823873,-9.702922,6.194873,2.847940,-5.969093,4.622306,-9.893119,-4.550211,4.043549,-4.291868,4.447804,-1.617574,-8.244893,-8.884802,5.242544,-3.538367,5.530618,-4.231412,7.528375,9.062050,-0.427658,0.640080,-8.145633,-6.389899,-7.297885,3.257087,-4.983046,-8.910204,-3.058521,-3.150851,-4.219363,9.006318,8.617311,3.567327,-5.803851,-1.557031,2.290907,4.129901,5.060947,5.986236,-0.701858,2.304289,-0.421813,9.371661,5.078083,8.659584,1.120973,5.677769,-6.385072,2.519655,9.117507,0.949144,-8.628795,2.199581,-9.283779,7.401168,1.045126,1.929987,-6.427281,-4.689080,2.059865,-2.536317,-4.169226,5.779422,-2.275392,5.305906,3.500147,-5.367688,5.126589,0.945028,-5.441886,8.961479,-5.254412,-3.670192,2.417532,-4.715910,-1.310024,9.543290,-3.169196,4.993119,-9.826677,-7.792913,-2.326110,8.583285,-1.525316,5.487332,4.876644,-1.456723,-7.266988,5.150300,6.619663,-2.844345,-8.810742,0.963289,-1.897502,3.619357,6.586334,-6.038326,-6.658418,-3.924595,2.416533,3.317431,-3.347236,-3.187434,-2.971227,-3.165636,1.657140,1.861335,3.175192,-0.156960,-0.927207,-6.517649,7.915091,1.141848,-2.548942,9.470576,7.793873,-8.410973,-8.987574,-3.097520,-7.174562,3.105393,2.719020,5.883278,4.803319,6.927119,4.638255,1.624359,-9.936729,-3.502612,-2.958922,-4.990382,1.150526,7.661143,6.130937,-2.842819,1.734645,1.467710,0.821479,8.776626,-3.233259,-1.121153,-2.876730,2.315344,-0.912284,2.292225,2.111003,-8.314926,-1.502134,-6.550030,-5.430193,-3.891665,-8.802423,-2.351901,-6.639784,-3.557650,-2.003985,1.023203,8.470247,-6.487200,-8.164665,-8.621654,5.080682,-8.661357,5.777334,-5.143742,-5.111154,2.063826,-4.281000,-4.637089,1.781557,-4.496501,5.941604,-3.235683,-9.048929,-7.459007,-4.759004,-9.914456,5.727503,4.671448,1.628154,-6.525805,-8.707768,7.659976,-4.640398,-3.593719,-2.752954,8.879123,-6.844212,-9.591827,-7.327524,1.270017,-1.184649,9.246681,9.135356,-9.639973,-0.324742,-5.176405,-4.862727,7.020574,1.007610,-1.834086,-7.425437,9.061819,1.919419,2.722666,-9.032284,-0.076553,-4.341777,-9.946635,-1.205427,6.138098,-8.442083,-4.084732,2.742965,1.259061,9.670869,-2.260744,0.654746,-8.066658,-4.115233,5.801337,-0.851582,5.882219,9.647340,-1.395949,-9.842790,-3.928991,3.099615,1.817993,-5.790683,3.204724,-6.448721,-5.805759,9.148704,-6.655002,-5.834479,-8.266210,7.179080,-8.521574,-1.734269,-7.222428,-0.905609,9.610093,6.617055,-9.229338,9.570907,7.233798,6.847451,2.769431,-9.659944,-6.391624,4.559294,-4.777572,-3.521344,4.020845,6.241536,4.436024,-9.161902,-9.438175,0.721009,-0.446291,-0.366739,-0.044452,3.723169,4.984169,4.881453,-6.379425,-6.465975,5.969478,0.633326,3.255680,4.990427,-2.098978,1.788257,7.025877,6.281469,1.815880,-5.302251,-8.018000,-9.149217,7.056795,1.679589,-7.978315,-9.906999,3.324929,5.001520,1.287534,6.517984,-6.347480,-8.183091,-2.900730,3.601080,5.792710,5.988036,4.672982,1.074740,-5.168421,3.659396,2.859143,-8.554709,8.590455,5.811458,-3.016160,8.256893,-6.035491,3.387932,2.979243,-4.047238,-3.095179,-8.150976,3.601223,-0.620824,4.642395,1.528889,-7.140916,9.786610,1.363260,-9.145436,4.714028,-2.470103,1.898335,-1.311249,2.300282,8.982697,6.766780,6.526256,-5.524549,-9.591178,8.297913,-7.174780,9.735497,-2.914209,-6.704363,6.601942,-3.319202,4.568999,9.326735,-1.771741,5.404129,-0.163580,-5.575164,0.084074,2.473402,-7.614139,6.242888,-2.433412,-3.707123,6.639169,1.939894,-4.276911,2.203970,8.130446,-8.314679,9.934749,-9.849873,-1.293187,0.010879,2.536073,1.440720,-6.534109,-1.564746,9.560533,3.522519,0.322002,2.072384,-9.406540,-9.045632,1.731492,6.637075,-2.360987,-8.345376,-5.859648,-6.131655,3.472218,1.701020,8.012229,-7.241105,-9.349066,8.325785,9.759625,-4.822236,2.279988,3.576139,3.078130,0.423550,-6.222968,-8.299028,-7.557580,-0.379573,-6.129634,1.996337,8.159337,-5.632155,3.731724,-4.515597,1.637485,-8.952706,2.677848,8.550714,-6.226316,-5.879955,2.621856,-9.269203], dtype = "float32")#candidate|2065|(1092,)|const|float32
call_2064 = relay.TupleGetItem(func_461_call(relay.reshape(const_2065.astype('float32'), [14, 13, 6])), 0)
call_2066 = relay.TupleGetItem(func_464_call(relay.reshape(const_2065.astype('float32'), [14, 13, 6])), 0)
uop_2069 = relay.log(uop_2056.astype('float32')) # shape=(7, 15, 13)
output = relay.Tuple([uop_2042,call_2051,const_2052,call_2064,const_2065,uop_2069,])
output2 = relay.Tuple([uop_2042,call_2053,const_2052,call_2066,const_2065,uop_2069,])
func_2072 = relay.Function([var_2041,], output)
mod['func_2072'] = func_2072
mod = relay.transform.InferType()(mod)
var_2073 = relay.var("var_2073", dtype = "float32", shape = (7, 15, 13))#candidate|2073|(7, 15, 13)|var|float32
output = func_2072(var_2073)
func_2074 = relay.Function([var_2073], output)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2147 = relay.const([[[2.899447,-5.281548,6.586492,-9.355333,-9.270895],[-4.253087,-5.866189,4.943890,-7.954873,8.503322],[-2.952808,8.256655,4.734135,-3.880526,-2.357882],[-9.285655,-9.629442,-3.960655,-2.788617,-6.781132],[8.847582,9.339082,-6.256954,4.150699,-6.458905],[6.917537,-1.707432,3.234755,-8.300322,-0.008393],[2.665109,6.361898,3.509811,-5.552776,-7.254432],[1.860620,7.346095,9.257491,4.835961,-8.002649],[8.386502,0.995506,-5.991739,0.300331,-9.608782],[8.216242,3.383279,7.571178,-7.673374,-4.602779],[-4.214483,-0.398526,8.852435,8.099408,3.716845],[-2.879676,-4.801094,-9.064244,-1.528133,5.965017],[-7.639394,2.021061,0.899845,-3.575159,-2.392338],[2.244606,-2.388231,-2.269838,4.769496,0.862813],[8.687288,-6.107251,0.462399,-7.184778,-1.226815],[-6.172718,-8.077868,-6.160953,2.205031,5.023451]],[[-3.037864,-2.532565,-0.495513,-3.059709,8.664214],[-0.822813,8.565067,-9.414260,-4.456615,2.907270],[-1.564961,6.845924,7.117004,4.512959,-0.468645],[-4.391870,2.478608,-6.314754,6.457649,9.778044],[-5.469722,8.159610,-3.183747,-4.548212,-8.166327],[-8.725635,2.620407,4.149820,8.216784,0.783170],[7.864758,-0.922042,6.385831,-5.493544,1.864949],[7.818383,-9.694367,-8.130891,-4.089948,0.816601],[-7.457834,5.454682,0.284400,-9.120817,0.679161],[-9.857251,4.768843,1.339216,8.477152,6.974997],[-5.050119,-3.238626,8.994843,6.199427,3.827306],[-6.456407,-6.358285,-3.428506,-3.136368,9.428755],[-3.459722,-7.905225,-2.741326,-5.091328,2.143840],[6.896792,-2.843292,-8.014372,-5.532222,6.057678],[-6.392217,2.107561,-2.037278,-2.244449,-3.018993],[-9.513246,-2.680890,-4.533639,8.284506,-7.109406]],[[-2.730902,-5.389100,-2.004235,-7.075359,-9.146346],[-3.853071,8.024210,-6.141505,7.611208,-9.668539],[-4.995536,4.801167,1.479259,3.444076,-4.208914],[6.249757,4.772301,-5.713537,9.045917,-6.249760],[-6.609096,-2.724664,-1.799294,7.525035,-7.249964],[2.143561,1.408655,1.452206,-8.596837,4.183696],[-1.264118,0.291371,-1.424806,3.987882,-4.491177],[4.526790,9.038241,-2.218163,-0.849156,9.302081],[7.044554,0.622667,4.081197,1.933440,-7.603507],[6.644082,-8.278762,-6.848366,-6.759216,-9.064743],[-2.518174,5.179555,6.670591,7.667085,-1.988430],[-1.420630,-1.021597,-0.559262,-8.603379,3.554139],[-4.638752,-4.620031,-3.568901,9.713989,-8.983628],[1.838526,7.824444,-3.571806,1.319684,2.271560],[3.990121,8.593210,1.619835,2.519602,-8.433626],[-2.704376,5.950792,7.462451,-9.601198,-4.896802]],[[-2.630600,5.683650,0.259600,-4.933444,5.512540],[-0.052897,-3.331523,-7.167635,7.072354,8.318434],[6.944856,-3.304255,-2.165216,-6.115943,-4.503100],[-7.738551,-6.524131,-3.488569,9.067025,-3.500008],[-8.225410,8.539406,5.973438,5.099761,-5.315051],[-9.928374,-4.736942,-3.000244,-3.579015,8.751261],[-9.653486,2.330393,7.761085,-3.923961,-9.750665],[-0.567348,8.156291,9.401380,9.615030,0.996174],[-2.178043,0.470440,-7.855180,4.422895,-6.429181],[5.510292,-3.837061,-0.748264,-8.449526,0.569948],[3.597694,-0.532483,7.288595,6.861025,-4.744679],[-4.720480,-8.408983,7.631931,-5.331560,0.318802],[-5.951226,1.598001,7.026766,-3.959082,-8.255199],[6.972688,6.197353,-3.650362,9.937177,-2.349007],[-9.493696,-0.864389,-2.417620,1.734311,7.557591],[-0.830251,8.705187,-1.221800,5.754484,-0.484158]],[[-8.064115,2.387128,8.353229,6.550013,-7.980057],[-4.279185,-8.255644,7.872942,5.475305,7.850107],[-4.914601,-9.957911,4.653752,-1.880761,4.818482],[-6.465848,-7.958165,-7.519247,0.605658,8.387868],[4.574427,-2.156843,-3.072273,-7.432808,-2.501885],[-3.869905,5.895047,-5.276157,-4.028734,4.497383],[-5.665631,4.437413,-1.956876,-0.585396,4.299792],[9.488463,-3.636565,1.004169,1.074783,-5.733412],[7.490705,-1.531266,7.413088,-1.268118,-9.169418],[9.287036,9.084385,9.500129,-2.307064,-4.932839],[0.592052,-0.921936,2.028957,8.060257,-6.961113],[0.697572,-5.762650,-0.343228,-0.724610,7.887490],[1.918321,2.369943,-4.505365,-9.550576,4.797681],[-3.881361,-7.800222,-9.011783,-1.982920,-4.544371],[8.835337,1.077016,-7.433490,4.249567,-6.343930],[8.872199,7.229959,-2.814607,7.735032,9.127755]],[[8.594029,-4.723498,-9.243691,-6.446702,-2.103404],[1.848600,-2.117121,1.775809,2.513726,5.504499],[-5.315072,7.830509,-1.242586,4.373696,-8.509165],[-5.929554,-4.721128,5.971566,4.983164,-9.364906],[-8.080311,3.471977,-4.295194,9.229722,8.870417],[4.897495,3.288848,7.225776,-9.695408,-4.826474],[9.198364,8.803229,3.907778,4.329746,-6.265877],[-0.048222,1.817694,3.068685,-1.111123,8.120786],[5.840932,6.864789,6.715605,-8.843581,4.175035],[-2.573738,4.128027,9.020968,-0.460739,3.438377],[-8.322766,-7.349560,7.476332,7.504267,-9.355845],[1.657399,3.063011,0.018885,-0.854326,-1.205299],[-2.372620,-1.459022,-5.091921,-3.890453,-5.017166],[2.251482,0.601373,9.476008,0.871076,-8.095706],[7.157124,-5.571395,8.365020,-3.041793,0.627632],[3.690143,7.784412,-3.974658,7.624125,7.215116]],[[-2.113300,-5.001097,-7.615254,9.683383,-4.979419],[1.339619,5.063922,-2.523944,7.196064,-2.863214],[-2.436904,-0.319021,-2.045336,0.847119,7.115609],[5.578032,-0.545375,1.421149,4.745863,-0.297884],[8.621673,-1.694914,5.256686,8.580652,4.510569],[-9.678328,0.648823,4.021358,0.289753,-8.178243],[2.885312,-5.200861,3.802296,-2.981123,-7.158117],[0.753784,8.986836,7.390839,-1.406242,4.603533],[-8.131975,7.445415,5.850374,1.512584,-5.264208],[5.904217,-9.751728,9.057301,-6.943431,-3.931487],[-6.942937,-8.189760,7.107303,0.722243,-5.304809],[1.964828,-3.090299,-0.272245,-1.424763,-2.310195],[7.618311,-0.739220,3.919946,-9.879071,-4.191216],[2.757340,-9.794991,-9.283549,3.874841,7.279498],[-4.746345,-5.138204,-7.287727,-4.734046,3.138269],[8.600962,2.816638,-5.842480,3.615319,-9.550750]],[[5.597568,-7.751921,4.667993,-7.853959,-7.383335],[-2.265583,-6.276187,4.209627,0.236593,0.137199],[-4.309834,-2.963399,8.722503,4.316950,5.198927],[-1.286394,3.000227,-1.347800,2.588942,8.141058],[-2.145416,-2.859680,-6.225250,5.790384,-4.958859],[-2.981936,9.947210,-0.962237,6.226076,5.604094],[4.621413,-3.143190,5.717409,9.734991,7.858243],[-3.743138,-1.665419,-2.859594,4.971566,-5.124675],[5.124664,-0.875970,4.502396,5.603554,-3.077225],[4.191113,-9.457609,-0.168522,-7.366077,-8.244166],[-2.660062,-9.125975,7.773242,-8.147237,-1.657414],[-1.516315,9.347278,3.313575,4.567757,-4.642049],[2.884744,2.915987,3.237774,8.463501,2.638123],[9.651790,7.226099,-0.801709,-5.566656,8.306139],[-0.371622,-9.309177,-2.193062,-8.211024,-4.314895],[-9.121854,8.613547,4.345323,6.836003,-0.692253]],[[-1.464993,0.186244,2.136030,3.809401,-8.707924],[4.505732,-5.457923,-8.772645,5.842004,4.620949],[9.216368,0.826612,3.133727,9.720822,-1.061746],[-1.075254,6.241148,-3.796958,8.171818,0.435985],[-3.923185,-9.879292,-8.969271,6.280560,-0.718110],[-6.654963,-3.507201,-4.579778,-7.221948,2.196145],[2.723538,-0.033493,1.993789,-4.702035,-1.396453],[-3.548720,-7.146513,5.062680,5.954238,-7.268095],[2.135453,-8.103573,-0.055487,-8.636662,-7.253495],[3.348574,7.118972,4.593530,-5.924400,8.250526],[9.101786,7.997844,4.553982,-6.811882,-7.461020],[-2.142725,8.344587,9.537602,0.295993,7.063640],[5.665462,7.101699,-9.190931,1.361366,-7.540026],[8.054033,-0.980037,6.900317,6.212156,9.546418],[-3.469483,-7.885121,-9.710719,-4.789405,8.709181],[9.097540,-7.303391,9.180027,1.244025,-9.917994]],[[0.835570,6.943557,-7.321817,7.410390,2.997800],[3.913046,-7.439197,6.276270,-6.000221,-5.057365],[5.214116,-4.768908,6.817862,-2.399945,0.447519],[-3.588739,-3.904022,-5.817707,4.023089,3.999177],[-9.969789,-6.401690,-8.840610,1.215494,5.514849],[-1.191537,-0.228992,6.556140,-7.858828,-7.513009],[-5.113596,-7.616104,5.260940,9.064165,6.488148],[7.623992,-3.056386,-8.595212,9.673103,9.334426],[-9.968980,-9.184785,-7.878561,-3.569655,1.136420],[-7.229444,1.636511,5.012237,-9.593930,8.013124],[3.003445,5.793483,6.287003,-6.298093,-1.618374],[3.059264,7.716622,7.743291,4.439530,-3.095809],[-2.218528,-7.486035,4.718400,-8.293033,7.276729],[5.234831,-5.103173,-8.822009,5.019170,2.042560],[-6.337033,-2.650061,-4.636656,9.656053,1.127487],[-0.960453,4.299378,3.356729,-5.968711,-0.970068]],[[-9.464245,-2.258109,-5.805921,-7.419548,7.413226],[5.583282,-0.588113,5.106293,3.020897,1.159890],[-9.458198,8.738719,-6.613769,6.721307,-7.232615],[-5.790777,3.720703,-2.002325,0.587778,8.829885],[-8.268898,-1.992524,-4.079665,2.851308,9.269017],[-9.822452,-0.650749,1.448907,6.056592,-1.118227],[-9.573617,-4.917578,7.640613,5.933842,1.353573],[-3.232652,-8.567939,-6.584499,-2.730761,-7.653083],[-6.230799,-0.601396,-5.376643,-6.780871,-1.959016],[-7.779263,8.523175,-9.609092,2.548872,-5.340996],[1.624839,-1.762079,0.885193,-7.647478,-6.353197],[0.922854,-1.279044,1.977250,1.218624,-5.450872],[-9.580299,-8.498688,5.330866,5.353971,4.254051],[2.086601,-6.589034,-5.773258,-3.093061,8.602160],[0.653442,-4.103799,-6.552342,9.164348,8.163714],[7.916886,-3.750555,6.689525,6.116508,-0.267395]]], dtype = "float32")#candidate|2147|(11, 16, 5)|const|float32
uop_2148 = relay.asin(const_2147.astype('float32')) # shape=(11, 16, 5)
bop_2154 = relay.bitwise_xor(const_2147.astype('int8'), relay.reshape(uop_2148.astype('int8'), relay.shape_of(const_2147))) # shape=(11, 16, 5)
uop_2165 = relay.tan(const_2147.astype('float64')) # shape=(11, 16, 5)
bop_2168 = relay.bitwise_and(const_2147.astype('uint32'), relay.reshape(bop_2154.astype('uint32'), relay.shape_of(const_2147))) # shape=(11, 16, 5)
func_302_call = mod.get_global_var('func_302')
func_305_call = mutated_mod.get_global_var('func_305')
const_2176 = relay.const([-6.137751,-6.581478,7.831238,-1.793646,-8.321516,2.575899,2.999988,5.496852,7.242121,-5.832118,4.406113,-1.661065,8.079227,3.034263,-0.503287,-1.710356,4.981649,7.521660,3.501186,-8.525845,-6.453742,4.779038,6.206057,-2.327416,0.017824,4.772670,7.515399,-1.200763,3.806958,7.761164,-5.062917,-5.756670,-7.733480,-4.811900,4.755283,7.371055,-1.612516,3.655578,9.212241,1.847797,-5.209142,9.764965,-8.748534,5.917027,2.681244,-9.527177,-2.288514,0.082551,-7.780314,-4.464262,-4.437035,4.675525,8.040417,-6.333350,-8.951424,2.105255,-2.278212,-4.539869,-8.587828,-3.647512,-3.773774,2.275531,7.309755,0.442932,6.533602,-1.308936,3.771484,-9.545274,-5.130342,3.903511,-4.743021,-0.865681,7.939221,-1.864618,-5.551262,1.808560,1.519215,4.000053,5.681768,-7.480605,-6.671434,2.549956,-8.603677,-6.937074,-1.871236,5.697005,-6.043316,-3.529401,-3.041052,1.917038,2.868095,4.612539,-8.276329,-1.499671,2.637283,-9.409905,2.539006,5.840802,1.505769,-8.678385,7.243000,2.729331,4.290043,9.787805,-4.404350,-5.237419,8.656393,-5.235691,-0.002151,9.482168,4.818245,-4.419793,1.204539,-3.476717,5.012620,5.439986,-8.023555,6.129357,-9.289000,8.038285,6.503748,-5.269095,4.471845,-3.646724,4.516363,7.422163,2.190042,8.703602,2.055036,-7.963588,8.747910,4.770754,-4.083366,0.217816,4.931271,5.658785,5.266996,6.070311,-7.404114,-5.260084,4.762116,-7.972866,2.104523,-3.497232,1.155602,-6.470639,-2.585698,-4.602523,-8.587369,9.452094,-4.829148,-3.702734,-6.515233,-3.495718,-0.165459,6.457905,-3.610850,-3.674295,5.807128,-6.657024,4.648223,0.331800,-7.572239,-0.093083,-1.412901,-1.119048,-7.914327,-3.351191,-5.940200,7.347811,9.199995,-0.531989,-3.521547,-3.610774,2.919153,-9.873569,8.505186,-5.585211,6.057439,-9.030525,-6.793326,-9.106864,5.909334,-9.713986,5.979646,-1.608194,-3.372410,-7.011060,-9.681711,-5.764452,4.656364,-2.107333,9.606768,-4.193083,-6.808340,-5.431538,2.418295,1.521496,0.868639,-4.746980,-1.463249,0.333776,-5.179056,4.622192,-6.259146,-7.484803,2.459558,-0.317315,-0.138411,0.041005,9.826744,1.993115,0.423967,-3.473902,-5.465872,7.879018,8.916543,4.887497,8.768209,-3.199587,4.243920,5.290448,-7.289384,9.931601,6.041050,5.203925,-3.755448,0.730823,6.683166,-0.763336,9.508397,-8.320430,-0.938685,-0.410713,9.548518,-3.205809,7.343461,6.523621,4.170943,-0.983434,3.509215,-7.399220,8.728674,8.045153,2.266658,-8.644445,-0.688830,7.740745,2.135250,-3.804665,2.320656,0.392792,-0.702180,-3.445940,6.137704,-6.255917,-8.462123,-5.368459,9.745084,-5.669417,0.526414,1.363102,-6.985872,-0.839206,-1.732296,-8.002724,8.891895,-7.424701,-8.596799,-4.783686,-3.321726,-7.722881,7.185921,-4.533987,4.489059,9.420804,3.201153,-3.474270,3.938228,0.293545,1.763583,7.833088,0.743294,-4.135936,-1.540260,4.736549,-8.492412,6.190407,-7.836237,-7.057610,6.248541,-3.726714,-2.850911,-4.093826,-5.753374,2.139869,1.134669,-8.683211,-2.562698,-6.062962,2.306830,2.563049,3.803140,8.173431,-7.733857,4.007095,3.626525,3.604171,-6.183943,-2.282725,8.740553,-2.548878,-0.600692,-2.866452,-5.211733,-0.865135,-7.108939,9.998144,-5.525632,-5.081746,-2.674596,-2.637231,1.293179,2.047585,1.105836,-4.375207,7.806651,7.914598,-4.135993,-0.586983], dtype = "float32")#candidate|2176|(330,)|const|float32
call_2175 = relay.TupleGetItem(func_302_call(relay.reshape(const_2176.astype('float32'), [11, 3, 10])), 0)
call_2177 = relay.TupleGetItem(func_305_call(relay.reshape(const_2176.astype('float32'), [11, 3, 10])), 0)
bop_2179 = relay.subtract(bop_2154.astype('int16'), relay.reshape(bop_2168.astype('int16'), relay.shape_of(bop_2154))) # shape=(11, 16, 5)
uop_2205 = relay.exp(const_2176.astype('float64')) # shape=(330,)
func_635_call = mod.get_global_var('func_635')
func_638_call = mutated_mod.get_global_var('func_638')
var_2210 = relay.var("var_2210", dtype = "float64", shape = (72,))#candidate|2210|(72,)|var|float64
call_2209 = relay.TupleGetItem(func_635_call(relay.reshape(var_2210.astype('float64'), [6, 2, 6])), 2)
call_2211 = relay.TupleGetItem(func_638_call(relay.reshape(var_2210.astype('float64'), [6, 2, 6])), 2)
const_2220 = relay.const([[[-5,8,8,5,-3],[10,6,6,5,-3],[8,1,10,-4,-9],[-6,-3,-8,-6,-2],[7,-1,-7,1,2],[3,3,-1,-5,-7],[9,1,-10,2,9],[7,8,-7,4,7],[3,5,5,-10,-3],[7,10,4,4,-6],[-2,8,-10,6,-4],[-9,4,4,1,10],[-1,-8,2,9,-7],[-8,9,-10,-3,-2],[-1,6,6,-7,-6],[-3,-3,-7,10,-2]],[[2,-10,7,9,-8],[7,-3,-7,4,6],[-10,-6,9,-7,-9],[7,-10,-2,7,-5],[4,6,-8,6,6],[4,10,-8,-3,-9],[-5,-4,3,10,-9],[7,-10,9,-6,1],[-7,-8,5,10,-3],[10,5,-3,-4,-2],[-9,-4,-2,8,-8],[-1,-2,-5,-5,6],[-2,-3,2,7,10],[-9,-8,9,-6,9],[-6,2,-9,6,2],[1,-8,-2,2,-8]],[[-7,-3,-2,7,1],[-3,-8,4,1,-3],[-4,6,-1,-4,-6],[-7,-1,-1,5,10],[-6,3,-5,-5,-9],[-9,5,4,-4,10],[1,4,-10,-5,-5],[-10,-8,-6,10,-1],[-10,-1,-6,2,3],[1,-1,-8,-1,5],[9,-6,-8,2,-2],[8,-5,-8,6,-2],[-1,-5,-9,-5,-9],[4,-8,7,-3,-8],[5,-6,7,-3,3],[3,8,8,2,-8]],[[4,1,4,-9,-8],[-9,-3,3,-10,-4],[-4,7,-7,-1,-8],[2,-1,-5,-2,10],[-1,2,8,5,-4],[1,6,-9,-2,-3],[-9,4,7,-7,-2],[-10,-7,-9,10,3],[3,-3,1,-3,4],[5,1,5,7,-9],[-8,5,1,-10,-10],[-6,-4,-3,1,-10],[-3,8,6,-4,-5],[5,-3,-9,-4,7],[2,6,-10,-5,-8],[6,1,7,-7,-2]],[[5,-6,-6,5,5],[-6,3,5,3,-6],[6,-2,8,-4,-2],[9,-4,8,-9,-1],[-4,1,9,5,-7],[-2,-5,-10,6,9],[-2,7,-1,-5,-7],[5,1,1,4,-1],[6,-4,10,5,-7],[5,-3,5,-7,-6],[-7,8,-9,-8,-4],[3,-4,3,10,9],[-2,-9,7,1,-4],[-8,8,-9,-6,9],[7,2,-9,-5,-4],[-6,-9,1,9,-9]],[[9,-4,-7,5,1],[5,-7,9,-3,5],[-9,6,-6,-5,1],[9,-5,-8,-5,6],[-8,-4,-8,-3,5],[10,8,3,5,10],[6,-5,-2,3,-5],[-3,-10,9,10,-10],[-9,1,6,-1,4],[6,-3,-10,3,2],[2,2,4,9,3],[-9,10,10,-5,-9],[-6,-10,-6,-4,6],[7,-3,10,-2,1],[8,10,1,-4,-4],[-7,7,-9,-10,2]],[[-9,5,-7,1,-6],[7,-4,2,8,4],[-10,-2,2,10,2],[-9,-10,-5,1,-8],[-8,-1,-3,-10,10],[5,-8,-8,6,-2],[9,-9,6,-6,8],[4,-3,10,7,-9],[5,8,8,-4,4],[-3,7,-10,6,10],[3,3,8,-2,-3],[-3,-2,2,6,4],[-1,-1,-1,-3,-8],[-2,-6,5,-8,8],[-7,-10,1,10,-7],[7,3,8,10,10]],[[4,-9,9,-4,-2],[-8,7,-7,-9,8],[-1,-8,3,-8,-9],[1,4,-4,5,-10],[4,5,6,-10,10],[5,-2,-6,10,8],[-6,-1,-8,-1,-6],[-9,9,-2,7,-3],[9,-8,10,-6,2],[10,-10,6,7,-10],[-10,-3,-4,-5,-6],[-9,6,-8,3,-9],[-5,-5,-9,4,10],[-10,4,9,-10,-10],[-5,-5,-6,9,4],[-8,-6,-7,-4,4]],[[-6,2,10,9,-8],[-10,8,3,-6,-5],[10,-3,-6,5,3],[2,6,1,-5,-9],[9,-5,-3,-1,1],[-3,-1,9,-7,5],[-6,9,-1,9,1],[1,5,7,2,-9],[3,-6,-8,-2,-3],[-5,6,-10,-6,-4],[-7,7,1,-2,-1],[8,2,-10,10,5],[1,-2,-6,3,-3],[7,4,-2,7,7],[-6,1,10,-10,3],[6,7,-8,-2,5]],[[2,5,-7,10,-10],[1,2,6,3,-4],[3,-10,-8,5,3],[-5,-1,8,5,1],[5,-5,-6,-2,-9],[9,6,2,10,-4],[-7,-8,7,-6,6],[-2,-3,-9,-8,-10],[-7,8,-8,7,-10],[-1,-10,-5,6,1],[-3,10,-10,5,-10],[-6,5,10,6,1],[8,3,2,-5,1],[8,-9,-10,-1,-10],[1,10,9,9,-7],[9,4,-3,10,-5]],[[-4,-5,-5,-5,-1],[7,-10,-7,-7,2],[9,-9,-5,-1,10],[6,-3,10,-7,4],[9,-9,10,-8,4],[-3,3,-10,-2,-3],[-1,8,-1,3,3],[-5,3,-3,-10,2],[-1,1,-4,-4,3],[1,-8,7,-9,-9],[-8,-5,6,3,-9],[4,-9,7,5,4],[-1,-10,-5,-2,7],[-7,4,7,-1,10],[7,-1,-8,-2,2],[-10,2,-5,9,1]]], dtype = "int16")#candidate|2220|(11, 16, 5)|const|int16
bop_2221 = relay.logical_and(bop_2179.astype('bool'), relay.reshape(const_2220.astype('bool'), relay.shape_of(bop_2179))) # shape=(11, 16, 5)
output = relay.Tuple([uop_2165,call_2175,uop_2205,call_2209,var_2210,bop_2221,])
output2 = relay.Tuple([uop_2165,call_2177,uop_2205,call_2211,var_2210,bop_2221,])
func_2231 = relay.Function([var_2210,], output)
mod['func_2231'] = func_2231
mod = relay.transform.InferType()(mod)
mutated_mod['func_2231'] = func_2231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2232 = relay.var("var_2232", dtype = "float64", shape = (72,))#candidate|2232|(72,)|var|float64
func_2231_call = mutated_mod.get_global_var('func_2231')
call_2233 = func_2231_call(var_2232)
output = call_2233
func_2234 = relay.Function([var_2232], output)
mutated_mod['func_2234'] = func_2234
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2374 = relay.const([[-6.465383,-4.944578,3.880773,-1.918272,-6.906389,-0.822553],[3.624103,7.309709,4.572345,9.055186,1.066847,7.584396],[3.156489,-9.043832,3.901499,-5.222206,8.304183,3.788043],[0.438676,-5.689831,-2.314727,-7.272028,-4.016276,2.054534],[6.941051,3.237581,6.850563,8.049885,6.653765,-7.227303],[-9.334305,9.631834,2.272461,-0.945573,-2.068532,4.777680],[-2.971266,-0.160225,4.281124,-2.534190,-1.501365,-6.545952],[-0.074878,9.094951,0.023397,-1.335117,-7.696859,6.389873],[-2.721397,7.034310,2.797473,4.214615,-3.595543,-3.123720],[7.984598,6.509973,1.685596,3.998273,9.928986,0.171986],[-6.733273,-2.493224,7.889069,8.946482,-8.543774,-8.581272],[8.256808,6.268421,-5.148776,9.047039,-1.993458,5.051880],[-5.161021,4.749295,2.307956,-7.706012,-1.590771,1.079298]], dtype = "float32")#candidate|2374|(13, 6)|const|float32
uop_2375 = relay.sinh(const_2374.astype('float32')) # shape=(13, 6)
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_2389 = relay.var("var_2389", dtype = "float32", shape = (91,))#candidate|2389|(91,)|var|float32
call_2388 = relay.TupleGetItem(func_1630_call(relay.reshape(var_2389.astype('float32'), [7, 1, 13])), 0)
call_2390 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2389.astype('float32'), [7, 1, 13])), 0)
output = relay.Tuple([uop_2375,call_2388,var_2389,])
output2 = relay.Tuple([uop_2375,call_2390,var_2389,])
func_2391 = relay.Function([var_2389,], output)
mod['func_2391'] = func_2391
mod = relay.transform.InferType()(mod)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2392 = relay.var("var_2392", dtype = "float32", shape = (91,))#candidate|2392|(91,)|var|float32
func_2391_call = mutated_mod.get_global_var('func_2391')
call_2393 = func_2391_call(var_2392)
output = call_2393
func_2394 = relay.Function([var_2392], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2471 = relay.var("var_2471", dtype = "uint32", shape = (9, 4, 9))#candidate|2471|(9, 4, 9)|var|uint32
var_2472 = relay.var("var_2472", dtype = "uint32", shape = (9, 4, 9))#candidate|2472|(9, 4, 9)|var|uint32
bop_2473 = relay.left_shift(var_2471.astype('uint32'), relay.reshape(var_2472.astype('uint32'), relay.shape_of(var_2471))) # shape=(9, 4, 9)
output = relay.Tuple([bop_2473,])
output2 = relay.Tuple([bop_2473,])
func_2479 = relay.Function([var_2471,var_2472,], output)
mod['func_2479'] = func_2479
mod = relay.transform.InferType()(mod)
var_2480 = relay.var("var_2480", dtype = "uint32", shape = (9, 4, 9))#candidate|2480|(9, 4, 9)|var|uint32
var_2481 = relay.var("var_2481", dtype = "uint32", shape = (9, 4, 9))#candidate|2481|(9, 4, 9)|var|uint32
output = func_2479(var_2480,var_2481,)
func_2482 = relay.Function([var_2480,var_2481,], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2513 = relay.var("var_2513", dtype = "float32", shape = (9, 15, 4))#candidate|2513|(9, 15, 4)|var|float32
var_2514 = relay.var("var_2514", dtype = "float32", shape = (9, 15, 4))#candidate|2514|(9, 15, 4)|var|float32
bop_2515 = relay.add(var_2513.astype('float32'), relay.reshape(var_2514.astype('float32'), relay.shape_of(var_2513))) # shape=(9, 15, 4)
output = bop_2515
output2 = bop_2515
func_2525 = relay.Function([var_2513,var_2514,], output)
mod['func_2525'] = func_2525
mod = relay.transform.InferType()(mod)
mutated_mod['func_2525'] = func_2525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2525_call = mutated_mod.get_global_var('func_2525')
var_2527 = relay.var("var_2527", dtype = "float32", shape = (9, 15, 4))#candidate|2527|(9, 15, 4)|var|float32
var_2528 = relay.var("var_2528", dtype = "float32", shape = (9, 15, 4))#candidate|2528|(9, 15, 4)|var|float32
call_2526 = func_2525_call(var_2527,var_2528,)
output = call_2526
func_2529 = relay.Function([var_2527,var_2528,], output)
mutated_mod['func_2529'] = func_2529
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2535 = relay.const([[[-0.815320,-8.315657,-0.741673,-9.434664,4.383545,7.751350,3.367253,0.853846,-4.567482,7.573645,-8.744146,-0.641850,8.189776,-7.714127,-8.527708],[5.231931,7.840232,9.110959,-8.743244,-7.704983,2.115997,8.412705,-4.700464,0.897859,-4.814910,6.368081,-0.903756,-2.432973,-3.761947,9.202783],[0.860733,8.315369,-2.804230,-5.768969,1.982387,-3.086287,-6.411021,5.678520,6.321312,-0.615543,5.004893,-5.829329,7.183317,1.756860,1.807889],[-0.422383,0.198575,7.736146,-6.272124,-7.886019,-0.411860,-9.801749,-1.491564,4.850139,-8.677965,-7.925501,-5.526597,-1.728205,4.335590,5.077991],[-4.020577,4.723013,-0.322573,6.056373,9.843428,-3.288521,1.675491,-7.148770,-8.501028,8.324238,4.749439,-5.479718,-9.961183,6.616273,-0.439124],[-3.661320,-5.295159,-4.461216,2.821045,8.727128,-1.834064,-6.740792,6.409202,5.439197,1.275302,-4.450842,-1.481450,-4.255605,1.336395,3.711197]],[[-1.834044,-9.851629,2.636198,9.393011,4.934045,1.059771,-4.029755,9.956358,3.702183,5.030498,1.238566,5.248305,-0.501289,-9.622416,-3.737922],[3.930190,4.059469,2.984247,1.705591,0.067090,-0.732821,-8.642585,8.152510,-9.982559,-2.764301,1.766822,6.420745,-5.258647,-2.842874,-2.350670],[-4.886891,3.781977,9.812491,-9.052760,-0.908577,2.267996,1.929783,1.200560,4.341666,6.000464,-4.046936,3.177366,3.988558,5.190563,-9.808214],[-6.640252,-0.673480,3.797053,4.521635,-0.571501,3.024960,-4.239645,2.831124,7.064784,3.732660,-2.497797,3.742910,5.715971,8.457555,-2.459451],[-3.744012,-5.524868,0.956110,4.089478,-6.248097,-4.647879,3.362205,-9.243562,-9.383719,-6.646364,-6.605179,8.588353,-3.572725,-2.608086,-5.012076],[-4.897456,-3.940698,8.415864,-3.933506,-2.393499,-3.686542,-3.358301,3.631776,-2.213278,7.755936,7.201503,6.378349,2.128530,8.892741,-6.284304]],[[5.326945,7.847372,8.531137,9.062984,9.313113,-3.605199,-5.147932,2.346912,9.269033,3.701892,-9.499013,-6.338580,-0.874038,-6.813641,-5.345939],[6.830820,7.764189,4.737161,2.874849,-6.743007,-1.787881,-5.886403,6.766483,-5.011207,0.297083,0.603715,-2.911356,8.442616,-6.049375,-6.870880],[-3.925821,-4.015985,-4.266590,0.384036,-0.754654,-6.316807,-1.209714,0.628066,3.294367,4.328301,5.451660,-8.103027,-7.095681,-9.140339,8.553919],[5.439060,-8.793681,5.006153,3.539781,-5.138442,-6.785326,-4.055927,9.940208,2.219580,6.109190,6.706967,2.663641,-4.146559,-7.150633,-9.392109],[-2.354391,0.147045,4.454696,6.018363,8.336899,-6.964604,8.349007,4.416189,-2.893557,9.527523,0.119623,6.028591,-9.269616,-3.181762,-6.793285],[6.237126,5.523612,-6.949315,7.743095,0.416939,2.817854,3.057142,2.946025,-5.984255,2.326214,3.662832,-4.969943,7.528890,0.496203,9.922492]],[[3.931495,-1.913015,-1.949237,2.486485,-0.391283,-7.698063,2.051538,-1.816046,-2.305904,-0.045510,-3.888562,-9.829235,-5.574509,-4.893711,-7.182652],[-7.368029,-0.625904,-1.738732,9.048097,-9.381325,-0.754063,9.593176,-3.887009,-3.487954,-4.116633,-6.060994,9.965929,-8.112533,0.522387,0.952731],[-3.459960,5.374721,-5.741899,3.208487,2.161412,3.063073,5.837444,4.074105,4.381960,-3.626747,2.736560,-1.723668,-0.132057,-1.159038,3.623779],[5.103191,6.439292,-4.389951,-1.619377,8.971651,-3.078582,3.340415,-4.010390,2.375934,5.017199,5.152111,8.788674,8.037805,-2.150134,7.631082],[1.857829,-6.506273,6.682019,-2.840990,-2.593385,3.075596,-4.184180,-5.420328,-1.766427,-3.163964,-4.512993,-3.261904,-5.362849,6.671166,6.875883],[-5.644784,2.802027,-8.699374,-6.541155,-5.352369,-3.874426,3.401813,-5.678175,7.887013,3.513042,-9.261309,-4.080694,5.498390,-8.139441,0.008136]],[[4.123505,-4.622655,-7.136357,7.367974,2.499604,-7.269175,-4.806938,3.268451,0.877387,9.958166,-0.937889,-3.958392,-4.130165,5.622027,-0.226659],[-8.061045,3.351874,-9.287442,5.824473,-9.377518,2.587774,2.355754,-0.038025,4.860436,9.512487,-8.221790,-1.634672,-6.211617,6.749820,-6.302842],[6.755967,4.762865,1.919109,-8.548577,-5.211710,-6.894059,0.715681,2.094913,-9.036894,-7.829644,1.613082,6.621359,5.794092,-4.250740,-2.126049],[7.097049,6.349241,-0.131384,-1.404893,-0.968642,2.559599,4.235428,-0.766153,-3.486140,2.091345,-4.396381,8.515113,-2.656834,-6.741524,4.780929],[8.523532,-6.756835,-6.754130,-9.516194,2.864262,4.828260,8.917702,-7.181250,1.412725,-4.609820,9.025426,8.220785,-6.798464,1.438349,-2.710802],[9.228957,8.867309,-6.722577,-0.725222,0.411300,0.999969,-3.105708,5.239945,-5.485400,2.835946,3.875587,-2.546962,-6.104359,-6.773253,8.177207]],[[-8.177520,9.063944,-2.896048,9.629540,-0.003048,-6.168846,3.906488,-6.522290,1.568396,9.733270,6.098005,4.657133,3.559027,-0.967380,-1.758642],[-5.169145,8.646302,-5.762266,-4.840513,-1.372704,-7.868421,-9.583210,-6.490403,-7.290576,-2.203729,-4.238562,-4.929520,8.079442,5.282862,-9.227187],[8.032585,5.031791,-2.061455,-2.532211,9.314890,8.375219,1.363279,-5.060079,-2.862198,-0.239672,-7.703861,-1.416665,-1.244380,4.390595,1.451466],[4.014688,-3.149235,6.534804,7.419147,4.789127,1.459182,-2.133630,8.774237,-3.873747,-8.399025,-4.758320,0.626880,7.644422,-7.714915,-5.464616],[-5.055423,-8.945646,-1.515772,5.166426,6.906214,-4.609892,0.546668,8.545141,2.126723,-0.760648,-3.226112,9.400327,3.341392,-2.522829,2.111095],[-6.717653,-7.140409,-4.751427,-7.150729,-4.172277,7.143552,-2.834049,-5.149126,0.236783,5.528060,2.989621,-6.343801,-7.790318,9.805897,2.553749]],[[5.503390,5.404367,-0.561754,-1.038534,5.522674,-3.218722,3.863557,-9.025580,-1.854046,-6.008010,2.509060,-8.983792,-0.046545,-3.507412,3.442840],[-0.833903,4.030230,-9.495416,1.527748,-8.043129,-0.170256,1.088598,-7.338237,6.560972,2.360601,-1.136797,4.040213,-8.559603,0.526084,3.896022],[-5.842614,5.678760,1.324254,2.610237,-4.246170,-3.071916,-3.045774,9.538303,9.465124,-8.977228,-6.677886,0.764860,5.687040,9.116955,-8.117736],[4.351608,-7.062532,-3.479772,-6.891861,-1.903337,-4.893360,3.441743,5.183584,7.810616,2.618085,1.250671,-9.302968,8.030194,8.587402,9.795000],[-9.664941,-1.398524,9.328383,-0.227470,6.747113,8.968190,4.393699,-4.194584,3.790339,3.152342,1.263170,-0.116951,-7.230377,2.345207,-7.014947],[5.210274,1.440399,9.577410,3.454433,4.682848,-2.864558,-6.144876,7.377166,-3.573672,-6.292753,-5.844542,4.991417,4.753581,-2.818299,1.574860]],[[8.709393,3.902981,-3.701170,-6.505346,8.841444,-0.398751,-6.430046,1.668034,-3.842368,-1.463158,-2.809237,-5.835241,9.926740,0.329074,5.096316],[-2.315769,1.960435,9.615227,-5.113642,2.558047,9.276048,0.868626,-2.945603,-9.111818,9.960342,1.133287,2.639006,9.847439,-5.291107,-3.927050],[0.646931,-6.023919,3.244683,-3.474038,0.340748,7.160246,-1.199199,-3.324698,2.718376,7.461041,0.941340,-1.477732,-0.893020,0.315843,-9.611718],[-7.767605,-6.948452,3.709177,2.987419,6.956641,1.614904,1.793177,-3.396933,8.923727,-7.427037,-0.036561,0.784383,-7.024646,-2.607841,-8.460110],[-9.155636,-6.085869,-6.914504,-3.796095,3.629393,-4.830211,-9.113314,-8.213008,-8.594192,-8.358636,-8.362531,-4.202522,-3.271791,-4.590579,2.088592],[7.064104,4.900177,-0.653925,1.756047,4.935799,9.938275,-0.750569,-4.369270,-7.303916,-0.108193,3.041035,9.597810,-8.006134,2.358270,-8.256737]],[[-5.927592,-2.959128,4.581654,1.056008,0.390204,6.992113,-7.320279,-3.418485,3.880336,5.487800,0.145969,-5.400009,6.992882,-6.960769,0.254469],[3.163069,3.014858,-3.353859,-0.383181,9.900491,-2.632229,-2.725062,-4.203131,5.966025,8.888330,7.348790,-6.534230,1.541085,4.127699,-0.245766],[-1.265256,-5.684128,9.792968,-6.142544,-4.114856,8.978389,3.240695,3.963530,-1.582261,6.821420,-2.355775,-1.008749,-1.337013,-0.410553,-0.653820],[4.084933,-8.084854,-1.244618,-1.431829,4.914001,-3.172537,7.878725,0.498656,-1.384952,-8.415216,9.742206,-3.844862,2.989894,-9.957698,-3.130484],[-1.368246,7.380163,9.400826,-1.303831,7.180003,-1.437058,-7.964017,6.468455,3.280339,7.612630,6.468046,-4.849654,-2.100868,-3.323387,7.475775],[0.201700,-0.621901,-4.118386,-5.109466,5.628506,-9.410031,-6.453063,-2.456802,-8.059639,3.508907,1.268862,4.351789,-1.843784,2.883889,-7.618058]],[[-2.606848,-1.769768,-5.595678,-4.728423,0.979415,-7.520675,-2.577377,-9.745944,-4.441496,-3.968865,-2.542413,-4.768533,5.836619,3.168955,-7.108189],[4.536938,-7.306052,1.503611,-1.203592,7.839586,-5.429643,0.359906,-8.903258,5.697887,7.793468,-6.762226,3.328776,9.064798,-8.679558,4.699017],[-8.330326,3.938322,-9.295726,4.466194,-4.660079,-3.433089,9.732290,5.267619,0.556168,-9.432423,-6.410198,-8.368363,-1.608739,-0.580176,-6.976880],[3.165487,-1.627569,5.191834,7.804114,2.505825,-3.272214,-9.840120,-3.476040,2.603466,-5.216882,-9.861077,8.389710,-9.423427,-5.854843,-4.107205],[-7.955795,0.069211,-4.766691,7.059154,9.953551,5.412184,-8.525614,3.589086,-4.238404,-8.237959,3.486868,4.448998,9.681394,-6.279277,1.042210],[1.291945,-1.145255,-8.749008,4.583845,-2.588066,2.940342,-6.396492,-2.492138,-6.694381,2.103335,6.855432,4.320133,7.760279,7.968988,-2.103735]],[[-0.001851,-1.062039,-7.637761,6.604169,6.733195,-2.518827,4.651623,-4.518565,1.353181,-3.859023,-6.442662,0.964120,4.354963,-9.080631,-3.943402],[2.725986,-6.110050,2.679934,-1.512434,9.317858,-6.175743,-1.856584,-2.522666,8.717360,6.454364,-9.051995,-9.153405,5.629335,-8.380737,-2.134153],[-1.989617,6.031654,0.463020,2.694670,1.024144,8.897424,1.218820,-8.285409,0.081212,5.906228,2.552237,-1.041236,7.477256,3.381506,7.996331],[-0.721399,3.145156,3.611231,-1.482423,4.713009,5.245305,1.686625,-1.644948,-0.194301,-6.929235,7.829912,-2.011201,1.709715,6.473384,1.933471],[-7.982158,4.145775,-9.656284,-9.205546,6.036593,-3.460433,8.722669,2.099617,7.274122,1.440070,3.633356,-7.835648,-7.839222,3.142288,-7.997601],[-5.882504,-3.693672,6.315317,-9.699053,2.459765,7.470501,-5.448397,-0.299130,-1.564674,-6.758098,4.762334,-6.920083,8.992079,4.599061,0.133070]],[[9.339112,-3.487435,7.633405,-3.418370,4.559779,1.882657,-4.320215,6.463184,-1.750410,-0.859138,6.591071,-9.922872,9.937602,-4.990482,8.112117],[3.727295,-0.413767,-6.186216,0.991613,9.081010,2.843525,0.232447,2.357488,-8.399966,-3.068211,-6.079533,-9.664885,-5.563932,-3.902994,-1.430565],[-6.870969,-7.591664,4.774669,-3.593846,-7.137529,3.915260,-5.375540,3.157960,-7.858201,3.478246,-9.890145,-1.135133,1.700794,4.069129,-8.933927],[9.445161,1.609838,4.890080,-5.081270,6.284635,1.025421,-0.884935,2.471799,2.678189,6.755807,-2.147434,-0.649406,-9.471315,2.582588,4.706073],[4.182729,-9.795926,6.393162,7.571503,5.062250,-7.095552,-7.114251,8.897569,-8.321091,5.543650,2.636388,3.339679,-0.468501,9.217813,5.202213],[8.349334,0.876497,6.738229,4.175484,9.046932,7.881723,-2.512222,-4.440315,7.083420,-4.856176,3.555568,1.507184,-3.410170,-1.055294,0.074673]],[[-8.786315,9.688403,8.087758,-0.407932,4.603882,0.973561,7.321015,-0.520326,8.074310,-1.642512,-7.171895,-5.440778,3.315446,-7.668102,-1.816222],[1.160823,-7.441813,3.245250,-7.461270,6.824549,7.441544,-6.751804,-0.340191,-4.026753,1.791055,3.924680,-5.079717,1.195336,-7.733900,-2.633934],[8.425986,-9.614498,-7.951419,6.183521,0.783559,-2.851030,-5.189440,-7.173720,-0.642568,-0.632286,3.422673,6.335229,1.499324,5.743248,-9.472779],[6.290164,-2.646968,-9.922538,2.170687,1.706439,-7.189357,3.001608,-1.609880,0.876750,-8.077894,-2.852642,4.516554,-0.397477,-2.780113,2.361551],[2.406176,4.567915,-8.096253,-1.023612,2.766631,-6.607505,6.301175,-3.151782,3.956701,-3.868527,-1.536340,-4.759686,1.946804,-6.897369,-9.606317],[-9.436789,-8.168908,0.088307,9.646057,-1.664555,2.423990,-5.202625,-8.184662,2.151454,-3.008758,-7.071789,-6.772843,5.793633,7.615380,-6.517888]]], dtype = "float32")#candidate|2535|(13, 6, 15)|const|float32
uop_2536 = relay.tan(const_2535.astype('float32')) # shape=(13, 6, 15)
uop_2545 = relay.log10(const_2535.astype('float64')) # shape=(13, 6, 15)
bop_2549 = relay.right_shift(uop_2545.astype('uint64'), relay.reshape(uop_2536.astype('uint64'), relay.shape_of(uop_2545))) # shape=(13, 6, 15)
output = bop_2549
output2 = bop_2549
func_2554 = relay.Function([], output)
mod['func_2554'] = func_2554
mod = relay.transform.InferType()(mod)
mutated_mod['func_2554'] = func_2554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mutated_mod.get_global_var('func_2554')
call_2555 = func_2554_call()
output = call_2555
func_2556 = relay.Function([], output)
mutated_mod['func_2556'] = func_2556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2563 = func_2554_call()
call_2564 = func_2554_call()
uop_2565 = relay.erf(call_2563.astype('float32')) # shape=(13, 6, 15)
uop_2567 = relay.erf(call_2564.astype('float32')) # shape=(13, 6, 15)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2586 = func_2554_call()
call_2587 = func_2554_call()
uop_2590 = relay.asinh(call_2563.astype('float32')) # shape=(13, 6, 15)
uop_2592 = relay.asinh(call_2564.astype('float32')) # shape=(13, 6, 15)
output = relay.Tuple([uop_2565,call_2586,uop_2590,])
output2 = relay.Tuple([uop_2567,call_2587,uop_2592,])
func_2594 = relay.Function([], output)
mod['func_2594'] = func_2594
mod = relay.transform.InferType()(mod)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mutated_mod.get_global_var('func_2594')
call_2595 = func_2594_call()
output = call_2595
func_2596 = relay.Function([], output)
mutated_mod['func_2596'] = func_2596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2676 = func_2554_call()
call_2677 = func_2554_call()
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
const_2680 = relay.const([-0.499235,1.008554,7.079032,-3.373730,4.901890,3.232935,9.374216,-0.078679,-7.614882,7.507405,-2.108785,5.441323,-3.873651,6.411246,-8.614491,4.200157,4.636977,9.597390,3.621185,-2.505779,9.504857,-8.010415,-1.553233,2.073876,5.577303,5.849953,-5.712821,-8.921916,0.862776,-6.585108,-0.004990,-7.227955,-3.710978,-6.568297,3.017244,-3.430495,-2.542068,4.629968,4.615713,7.058908,-9.663901,-4.574959,3.995272,4.045941,-5.444255,-5.423715,6.359638,7.270976,-8.603424,9.710186,-1.567621,-8.560685,-5.049454,3.016371,-1.181895,2.453636,0.089361,2.634023,-0.376743,7.624778,-5.583270,7.134803,-0.351746,4.993132,-3.153737,-2.712160,6.058991,0.137972,7.952958,1.106962,5.454526,-0.720960], dtype = "float64")#candidate|2680|(72,)|const|float64
call_2679 = relay.TupleGetItem(func_2231_call(relay.reshape(const_2680.astype('float64'), [72,])), 0)
call_2681 = relay.TupleGetItem(func_2234_call(relay.reshape(const_2680.astype('float64'), [72,])), 0)
func_88_call = mod.get_global_var('func_88')
func_91_call = mutated_mod.get_global_var('func_91')
const_2694 = relay.const([-1,8,8,-9,-8,3,-6,4,-9,-10,1,5,-1,9,2,-8,-7,-3,4,6,-6,-4,4,-10,-1,2,-4,-10,-1,10,-8,-8,-7,-10,3,-6,6,1,2,-3,-2,4,5,10,2,-7,2,-5,-6,-1,10,-8,-7,-6,-10,1,7,7,-7,8,-1,-2,-2,-2,-2,7,-10,8,-2,8,7,-4,-3,6,2,-1,-1,-5,-10,1,-10,3,3,-9,6,-9,-7,7,5,-1,-9,9,-7,-3,1,-10,4,5,5,-4,-1,5,-7,-7,-8,-9,-3,9,5,1,-9,9,4,-3,-7,-1,-10,-6,9,-9,-4,-7,9,8,-9,-9,10,4,-3,-3,1,-9,-8,-8,-10,5,-5,2,-10,7,-9,-10,6,3,8,-8,-7,2,3,4,8,9,4,9], dtype = "uint64")#candidate|2694|(154,)|const|uint64
call_2693 = func_88_call(relay.reshape(const_2694.astype('uint64'), [2, 7, 11]))
call_2695 = func_88_call(relay.reshape(const_2694.astype('uint64'), [2, 7, 11]))
bop_2706 = relay.mod(call_2693.astype('float32'), relay.reshape(const_2694.astype('float32'), relay.shape_of(call_2693))) # shape=(2, 7, 11)
bop_2709 = relay.mod(call_2695.astype('float32'), relay.reshape(const_2694.astype('float32'), relay.shape_of(call_2695))) # shape=(2, 7, 11)
uop_2710 = relay.acos(call_2676.astype('float64')) # shape=(13, 6, 15)
uop_2712 = relay.acos(call_2677.astype('float64')) # shape=(13, 6, 15)
func_941_call = mod.get_global_var('func_941')
func_944_call = mutated_mod.get_global_var('func_944')
var_2718 = relay.var("var_2718", dtype = "float32", shape = (63,))#candidate|2718|(63,)|var|float32
call_2717 = relay.TupleGetItem(func_941_call(relay.reshape(var_2718.astype('float32'), [9, 7]), relay.reshape(var_2718.astype('float32'), [9, 7]), ), 2)
call_2719 = relay.TupleGetItem(func_944_call(relay.reshape(var_2718.astype('float32'), [9, 7]), relay.reshape(var_2718.astype('float32'), [9, 7]), ), 2)
output = relay.Tuple([call_2679,const_2680,bop_2706,uop_2710,call_2717,var_2718,])
output2 = relay.Tuple([call_2681,const_2680,bop_2709,uop_2712,call_2719,var_2718,])
func_2725 = relay.Function([var_2718,], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
var_2726 = relay.var("var_2726", dtype = "float32", shape = (63,))#candidate|2726|(63,)|var|float32
output = func_2725(var_2726)
func_2727 = relay.Function([var_2726], output)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_2731 = relay.TupleGetItem(func_2594_call(), 1)
call_2732 = relay.TupleGetItem(func_2596_call(), 1)
var_2757 = relay.var("var_2757", dtype = "uint64", shape = (13, 6, 15))#candidate|2757|(13, 6, 15)|var|uint64
bop_2758 = relay.not_equal(call_2731.astype('bool'), relay.reshape(var_2757.astype('bool'), relay.shape_of(call_2731))) # shape=(13, 6, 15)
bop_2761 = relay.not_equal(call_2732.astype('bool'), relay.reshape(var_2757.astype('bool'), relay.shape_of(call_2732))) # shape=(13, 6, 15)
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_2771 = relay.var("var_2771", dtype = "float64", shape = (72,))#candidate|2771|(72,)|var|float64
call_2770 = relay.TupleGetItem(func_2231_call(relay.reshape(var_2771.astype('float64'), [72,])), 2)
call_2772 = relay.TupleGetItem(func_2234_call(relay.reshape(var_2771.astype('float64'), [72,])), 2)
output = relay.Tuple([bop_2758,call_2770,var_2771,])
output2 = relay.Tuple([bop_2761,call_2772,var_2771,])
func_2780 = relay.Function([var_2757,var_2771,], output)
mod['func_2780'] = func_2780
mod = relay.transform.InferType()(mod)
var_2781 = relay.var("var_2781", dtype = "uint64", shape = (13, 6, 15))#candidate|2781|(13, 6, 15)|var|uint64
var_2782 = relay.var("var_2782", dtype = "float64", shape = (72,))#candidate|2782|(72,)|var|float64
output = func_2780(var_2781,var_2782,)
func_2783 = relay.Function([var_2781,var_2782,], output)
mutated_mod['func_2783'] = func_2783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2887 = func_2554_call()
call_2888 = func_2554_call()
uop_2889 = relay.cos(call_2887.astype('float32')) # shape=(13, 6, 15)
uop_2891 = relay.cos(call_2888.astype('float32')) # shape=(13, 6, 15)
bop_2898 = relay.less(uop_2889.astype('bool'), relay.reshape(call_2887.astype('bool'), relay.shape_of(uop_2889))) # shape=(13, 6, 15)
bop_2901 = relay.less(uop_2891.astype('bool'), relay.reshape(call_2888.astype('bool'), relay.shape_of(uop_2891))) # shape=(13, 6, 15)
output = bop_2898
output2 = bop_2901
func_2912 = relay.Function([], output)
mod['func_2912'] = func_2912
mod = relay.transform.InferType()(mod)
output = func_2912()
func_2913 = relay.Function([], output)
mutated_mod['func_2913'] = func_2913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_2926 = func_2912_call()
call_2927 = func_2912_call()
output = relay.Tuple([call_2926,])
output2 = relay.Tuple([call_2927,])
func_2933 = relay.Function([], output)
mod['func_2933'] = func_2933
mod = relay.transform.InferType()(mod)
output = func_2933()
func_2934 = relay.Function([], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_2937 = func_2554_call()
call_2938 = func_2554_call()
output = call_2937
output2 = call_2938
func_2939 = relay.Function([], output)
mod['func_2939'] = func_2939
mod = relay.transform.InferType()(mod)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mutated_mod.get_global_var('func_2939')
call_2940 = func_2939_call()
output = call_2940
func_2941 = relay.Function([], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mod.get_global_var('func_2939')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_2942 = func_2939_call()
call_2943 = func_2939_call()
output = relay.Tuple([call_2942,])
output2 = relay.Tuple([call_2943,])
func_2947 = relay.Function([], output)
mod['func_2947'] = func_2947
mod = relay.transform.InferType()(mod)
mutated_mod['func_2947'] = func_2947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2947_call = mutated_mod.get_global_var('func_2947')
call_2948 = func_2947_call()
output = call_2948
func_2949 = relay.Function([], output)
mutated_mod['func_2949'] = func_2949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_3020 = func_2554_call()
call_3021 = func_2554_call()
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
var_3023 = relay.var("var_3023", dtype = "float32", shape = (63,))#candidate|3023|(63,)|var|float32
call_3022 = relay.TupleGetItem(func_2725_call(relay.reshape(var_3023.astype('float32'), [63,])), 0)
call_3024 = relay.TupleGetItem(func_2727_call(relay.reshape(var_3023.astype('float32'), [63,])), 0)
func_1839_call = mod.get_global_var('func_1839')
func_1841_call = mutated_mod.get_global_var('func_1841')
var_3028 = relay.var("var_3028", dtype = "float32", shape = (42,))#candidate|3028|(42,)|var|float32
call_3027 = relay.TupleGetItem(func_1839_call(relay.reshape(var_3028.astype('float32'), [3, 14])), 0)
call_3029 = relay.TupleGetItem(func_1841_call(relay.reshape(var_3028.astype('float32'), [3, 14])), 0)
uop_3030 = relay.log(var_3028.astype('float64')) # shape=(42,)
output = relay.Tuple([call_3020,call_3022,var_3023,call_3027,uop_3030,])
output2 = relay.Tuple([call_3021,call_3024,var_3023,call_3029,uop_3030,])
func_3053 = relay.Function([var_3023,var_3028,], output)
mod['func_3053'] = func_3053
mod = relay.transform.InferType()(mod)
mutated_mod['func_3053'] = func_3053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3053_call = mutated_mod.get_global_var('func_3053')
var_3055 = relay.var("var_3055", dtype = "float32", shape = (63,))#candidate|3055|(63,)|var|float32
var_3056 = relay.var("var_3056", dtype = "float32", shape = (42,))#candidate|3056|(42,)|var|float32
call_3054 = func_3053_call(var_3055,var_3056,)
output = call_3054
func_3057 = relay.Function([var_3055,var_3056,], output)
mutated_mod['func_3057'] = func_3057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_3109 = func_2912_call()
call_3110 = func_2912_call()
output = relay.Tuple([call_3109,])
output2 = relay.Tuple([call_3110,])
func_3111 = relay.Function([], output)
mod['func_3111'] = func_3111
mod = relay.transform.InferType()(mod)
output = func_3111()
func_3112 = relay.Function([], output)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_3161 = func_2554_call()
call_3162 = func_2554_call()
const_3169 = relay.const([[[-6,-4,3,6,9,7,-10,-8,-6,-1,2,8,-2,-6,-9],[-10,3,8,4,-1,-1,6,1,2,-4,6,-2,3,-1,7],[-7,-7,-3,-8,6,-1,-8,-10,1,-6,-5,-3,7,1,7],[7,6,-4,-8,5,2,5,-3,8,-5,10,-7,6,-1,3],[4,-1,6,9,-10,2,-4,-1,-9,10,-5,3,7,7,6],[-5,-10,1,4,9,-8,-7,5,-9,10,8,2,-7,-3,-7]],[[2,1,10,7,-6,1,7,-6,9,9,-5,-3,10,-7,4],[-6,-8,8,1,-6,-2,-10,-7,3,2,-3,9,-3,8,6],[6,8,-10,-3,-2,9,6,-4,8,8,9,6,-9,-1,-10],[7,-10,9,-1,-5,3,-8,-5,-1,2,-2,3,1,6,-1],[10,10,2,1,4,-10,-10,-6,-3,-8,8,-5,6,5,9],[-8,-3,-10,10,2,-9,-10,9,4,5,-6,-1,-4,-7,9]],[[-4,-7,-5,-3,10,10,-6,-8,8,-8,5,-6,4,-3,10],[9,1,4,-2,-3,-2,2,5,6,4,-6,7,5,-1,-2],[-4,-8,6,-3,9,-3,-10,1,-8,9,-1,1,7,9,8],[-1,-2,-7,1,9,7,10,-8,5,10,-8,-8,-8,6,-3],[1,-7,2,-3,6,-4,-5,-10,-7,-1,-8,-9,9,-9,7],[9,5,10,10,2,-7,-8,-1,5,3,7,4,-8,-3,8]],[[-9,9,5,-1,5,2,10,-2,8,10,-5,5,-3,2,9],[8,-7,2,-6,-8,8,3,-9,10,-6,1,7,1,-8,-6],[3,7,-2,-3,-5,1,10,-3,3,-6,-2,-10,-2,9,-4],[-1,10,8,-8,-10,1,-6,7,9,3,-9,-2,-3,10,8],[-8,10,6,10,8,-7,-1,-9,2,-8,-3,9,-6,2,8],[-9,-9,-4,6,9,6,-4,-10,-7,2,9,-2,3,-5,-3]],[[6,-9,10,10,-9,-9,-6,2,-5,8,4,-3,6,-6,2],[3,-9,3,-6,-5,-1,-10,7,-2,-10,-10,-10,3,-8,8],[-8,7,3,-7,2,-4,8,1,5,-8,6,1,2,3,-3],[-1,1,-8,-8,3,-9,-3,10,-2,9,-2,-1,-2,-7,4],[-7,-2,-5,-5,9,2,-5,-7,-1,2,3,7,-6,-9,-6],[-4,-10,-1,1,9,-4,-10,-8,-5,-7,8,-10,-6,-4,9]],[[7,-10,2,-1,9,-2,3,-5,-8,9,-7,7,-10,4,-7],[-3,-4,9,-8,8,-2,-2,2,-5,8,-8,-9,-4,8,-4],[-9,-7,-1,1,-1,-7,-7,8,-8,10,7,3,-2,8,3],[7,10,-6,-2,-10,-4,-6,10,2,8,-6,-9,4,5,3],[5,-1,2,8,4,7,-9,-1,-8,6,5,3,-2,5,-1],[7,-6,3,-10,4,-2,-2,-7,-7,5,10,-7,6,-2,-9]],[[9,10,-8,5,-7,2,3,8,6,-4,-3,5,-9,-1,9],[-7,8,4,-2,2,10,-9,-7,-3,-6,-7,1,-1,2,3],[-4,10,8,5,-4,3,2,-7,1,-3,-4,8,-4,-8,-2],[8,1,-7,-3,-1,1,3,6,-2,9,-7,-8,10,5,6],[9,5,-3,9,5,3,5,-7,5,1,-7,-8,-3,-6,-6],[-8,-8,5,5,7,7,4,-7,5,2,-9,4,3,8,8]],[[6,1,8,7,-3,5,-6,3,2,9,-4,3,8,5,-9],[-1,8,-9,9,2,-2,-1,-6,4,-2,1,3,-4,-2,-8],[2,4,-9,-6,10,-10,7,-1,-6,10,-1,-2,7,-7,6],[7,-3,6,5,10,-4,-8,-2,3,-5,3,-5,10,2,-10],[3,6,10,7,8,3,-10,2,-3,9,1,3,1,-10,3],[3,7,1,3,-5,9,-10,10,-2,-10,-8,-5,9,-8,-10]],[[8,6,-3,3,7,5,-5,-7,-1,-5,-2,-2,-5,4,9],[-6,-9,10,-1,8,-10,-6,-9,7,3,-1,-6,3,-3,7],[-3,6,-5,-2,1,4,2,-8,4,1,9,2,6,-7,2],[-10,6,5,-4,10,6,9,-6,10,-4,9,4,9,5,-8],[1,-2,-4,10,5,-5,4,10,5,-1,-1,-10,-2,-5,-4],[-5,-1,-2,5,4,2,10,7,7,10,-9,-10,7,10,10]],[[5,9,-4,10,4,9,3,-3,1,-10,-10,3,-10,4,2],[-3,9,2,2,-5,4,-2,3,-7,5,-7,-6,7,-1,-5],[-2,2,10,-7,4,1,-5,-4,8,5,9,-10,-2,-3,5],[8,6,-3,1,-1,3,10,-2,-8,-6,-6,5,-1,1,10],[2,7,5,6,-9,1,-6,-2,7,-1,-3,9,-2,-4,4],[3,1,4,10,-6,-7,-3,-7,-3,4,-9,-2,-4,-7,-9]],[[4,7,-4,3,-2,-2,-5,-2,-9,9,9,-2,-4,-5,-7],[-4,-8,6,1,-5,10,2,4,8,-8,-9,-4,-6,-7,1],[-5,5,-5,5,-10,-1,-10,6,8,9,4,1,-1,6,5],[-2,-4,4,-7,7,1,-10,10,7,3,-4,-4,-2,-9,2],[10,6,10,3,-3,7,-8,-7,4,-8,9,-1,-4,-7,5],[-1,-5,9,9,5,2,-5,8,9,-5,-6,-9,-7,-1,-8]],[[-4,-9,5,6,-2,5,-10,4,-2,9,-2,-2,-1,-3,-3],[-9,9,-8,8,8,5,-1,4,5,10,5,-9,4,8,-4],[-8,8,1,-2,1,8,-3,-1,6,-7,7,10,-1,-8,2],[9,-5,9,-4,6,3,1,2,-5,5,-7,-5,8,3,-4],[8,-7,2,-2,9,4,-1,-7,5,3,3,-2,-9,6,-6],[9,6,8,3,8,7,1,-7,3,10,1,8,-4,4,10]],[[-10,6,6,6,8,-1,-6,-5,3,-4,-5,-8,10,3,2],[6,4,-10,7,-10,-1,-10,-5,1,-4,-1,-2,6,-1,-6],[2,-4,3,7,-3,-7,-1,-3,-3,-4,-1,-7,-6,-5,-10],[7,-2,-8,-9,6,-5,-6,9,3,-6,-8,4,10,-6,4],[-5,-10,5,1,-5,6,8,-6,-3,-1,-6,6,2,-9,-10],[-6,7,3,4,-6,10,8,-3,-7,1,-5,-4,-8,-6,9]]], dtype = "uint64")#candidate|3169|(13, 6, 15)|const|uint64
bop_3170 = relay.subtract(call_3161.astype('uint16'), relay.reshape(const_3169.astype('uint16'), relay.shape_of(call_3161))) # shape=(13, 6, 15)
bop_3173 = relay.subtract(call_3162.astype('uint16'), relay.reshape(const_3169.astype('uint16'), relay.shape_of(call_3162))) # shape=(13, 6, 15)
output = relay.Tuple([bop_3170,])
output2 = relay.Tuple([bop_3173,])
func_3174 = relay.Function([], output)
mod['func_3174'] = func_3174
mod = relay.transform.InferType()(mod)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3175 = func_3174_call()
output = call_3175
func_3176 = relay.Function([], output)
mutated_mod['func_3176'] = func_3176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3191 = relay.var("var_3191", dtype = "float64", shape = (1, 11, 2))#candidate|3191|(1, 11, 2)|var|float64
uop_3192 = relay.log10(var_3191.astype('float64')) # shape=(1, 11, 2)
uop_3200 = relay.rsqrt(uop_3192.astype('float64')) # shape=(1, 11, 2)
uop_3216 = relay.log2(uop_3192.astype('float64')) # shape=(1, 11, 2)
output = relay.Tuple([uop_3200,uop_3216,])
output2 = relay.Tuple([uop_3200,uop_3216,])
func_3229 = relay.Function([var_3191,], output)
mod['func_3229'] = func_3229
mod = relay.transform.InferType()(mod)
mutated_mod['func_3229'] = func_3229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3230 = relay.var("var_3230", dtype = "float64", shape = (1, 11, 2))#candidate|3230|(1, 11, 2)|var|float64
func_3229_call = mutated_mod.get_global_var('func_3229')
call_3231 = func_3229_call(var_3230)
output = call_3231
func_3232 = relay.Function([var_3230], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3111_call = mod.get_global_var('func_3111')
func_3112_call = mutated_mod.get_global_var('func_3112')
call_3344 = relay.TupleGetItem(func_3111_call(), 0)
call_3345 = relay.TupleGetItem(func_3112_call(), 0)
output = call_3344
output2 = call_3345
func_3351 = relay.Function([], output)
mod['func_3351'] = func_3351
mod = relay.transform.InferType()(mod)
output = func_3351()
func_3352 = relay.Function([], output)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2947_call = mod.get_global_var('func_2947')
func_2949_call = mutated_mod.get_global_var('func_2949')
call_3376 = relay.TupleGetItem(func_2947_call(), 0)
call_3377 = relay.TupleGetItem(func_2949_call(), 0)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3378 = func_3351_call()
call_3379 = func_3351_call()
output = relay.Tuple([call_3376,call_3378,])
output2 = relay.Tuple([call_3377,call_3379,])
func_3381 = relay.Function([], output)
mod['func_3381'] = func_3381
mod = relay.transform.InferType()(mod)
mutated_mod['func_3381'] = func_3381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3381_call = mutated_mod.get_global_var('func_3381')
call_3382 = func_3381_call()
output = call_3382
func_3383 = relay.Function([], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_3392 = relay.TupleGetItem(func_2594_call(), 0)
call_3393 = relay.TupleGetItem(func_2596_call(), 0)
var_3399 = relay.var("var_3399", dtype = "float32", shape = (13, 6, 15))#candidate|3399|(13, 6, 15)|var|float32
bop_3400 = relay.power(call_3392.astype('float32'), relay.reshape(var_3399.astype('float32'), relay.shape_of(call_3392))) # shape=(13, 6, 15)
bop_3403 = relay.power(call_3393.astype('float32'), relay.reshape(var_3399.astype('float32'), relay.shape_of(call_3393))) # shape=(13, 6, 15)
output = relay.Tuple([bop_3400,])
output2 = relay.Tuple([bop_3403,])
func_3412 = relay.Function([var_3399,], output)
mod['func_3412'] = func_3412
mod = relay.transform.InferType()(mod)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3413 = relay.var("var_3413", dtype = "float32", shape = (13, 6, 15))#candidate|3413|(13, 6, 15)|var|float32
func_3412_call = mutated_mod.get_global_var('func_3412')
call_3414 = func_3412_call(var_3413)
output = call_3414
func_3415 = relay.Function([var_3413], output)
mutated_mod['func_3415'] = func_3415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_3434 = func_2554_call()
call_3435 = func_2554_call()
func_1701_call = mod.get_global_var('func_1701')
func_1703_call = mutated_mod.get_global_var('func_1703')
var_3460 = relay.var("var_3460", dtype = "float64", shape = (2310,))#candidate|3460|(2310,)|var|float64
call_3459 = relay.TupleGetItem(func_1701_call(relay.reshape(var_3460.astype('float64'), [15, 11, 14])), 0)
call_3461 = relay.TupleGetItem(func_1703_call(relay.reshape(var_3460.astype('float64'), [15, 11, 14])), 0)
uop_3466 = relay.rsqrt(call_3459.astype('float64')) # shape=(15, 11, 14)
uop_3468 = relay.rsqrt(call_3461.astype('float64')) # shape=(15, 11, 14)
const_3474 = relay.const([[[10,-4,-9,-5,-8,-3,-4,-10,8,-2,6,-8,2,-5,-7],[-3,-6,1,-2,2,-1,2,9,-6,1,5,-1,8,-10,-10],[-9,2,-8,1,-9,-9,-9,8,4,-4,-4,-10,3,-8,-10],[10,9,-5,6,8,-10,-8,7,-8,9,-6,2,-6,6,7],[-2,7,10,-10,-7,-2,7,-5,-3,7,-4,5,-1,-10,4],[-4,6,-8,3,-3,-10,7,-2,-2,-7,8,-2,-7,3,1]],[[-5,-4,6,7,3,2,-4,9,-3,-2,-9,-2,-3,-7,6],[-4,3,-2,-9,10,9,-5,3,9,-4,6,1,-8,7,-1],[-1,2,2,-5,-4,-2,7,6,-1,7,5,-1,-1,3,2],[9,-6,7,6,8,7,3,-9,-5,3,6,-5,-4,-5,4],[-10,1,5,-5,-10,-3,7,2,-4,-8,8,4,-2,2,7],[3,9,5,-3,-5,5,1,-3,-8,1,3,-2,5,-5,-9]],[[2,-10,-7,-3,5,-3,-7,10,7,-6,-6,10,-3,-1,-3],[-1,-2,4,-3,-10,-8,-9,-5,-4,9,-3,-8,-2,-9,1],[3,4,2,7,-8,6,-9,-10,5,9,5,-10,6,-4,-5],[4,7,-5,10,6,8,4,6,2,-10,-5,4,6,7,2],[6,-2,-7,-4,9,-5,-2,6,4,1,-8,7,-4,-9,-6],[5,-8,5,-5,4,-8,3,-9,2,-7,-7,9,-7,10,6]],[[-9,-8,-9,4,-1,-8,-7,-1,-1,2,-5,-3,5,-9,-7],[1,-5,5,-1,8,7,-2,-8,-3,-7,-7,3,9,1,3],[3,4,-2,-4,7,-6,7,-9,3,3,6,-2,-9,7,9],[8,5,-9,-10,-1,-4,-1,4,-7,-1,-7,-10,6,-10,-1],[-2,-10,-10,5,4,9,2,1,10,-5,8,-10,2,10,-8],[8,10,8,-7,-2,-8,10,-10,7,9,-3,-5,7,-10,7]],[[8,9,-5,1,-7,-4,-5,4,-5,5,5,3,2,5,-7],[-9,2,-6,-4,-9,-10,-5,-9,-10,2,-8,-3,6,1,7],[-6,6,4,-4,-6,9,-8,-9,-5,-1,4,3,2,-5,1],[-2,10,-6,9,3,3,-1,8,9,-9,-8,10,4,-1,5],[-3,-10,7,7,5,9,-6,10,10,-5,10,6,7,3,9],[1,-7,4,6,-7,-5,-1,-9,-5,2,2,7,5,-7,1]],[[6,-7,4,4,5,1,2,-1,6,-1,-7,-2,8,8,6],[1,-3,3,-10,-7,2,6,-1,4,4,8,8,-6,9,-4],[-3,-5,5,-6,-6,-1,1,2,-6,-1,-4,2,1,2,1],[-3,5,3,-7,-7,1,1,7,6,-2,4,8,-1,3,8],[-1,10,-10,-6,-3,-10,-10,8,4,1,-3,-3,-10,-1,-10],[-8,-4,9,-3,-3,-7,-3,-5,6,-5,7,-3,-10,-7,-7]],[[1,-7,4,-1,10,-5,6,-6,7,2,1,9,-2,-9,1],[5,1,-7,6,4,-1,-5,-7,9,4,-7,3,-1,6,-3],[3,-8,-9,-1,-4,-1,4,-3,-6,6,-6,-7,8,5,9],[8,7,8,3,-1,2,2,-7,-8,9,-4,-6,5,2,-7],[-9,3,-3,10,-8,-2,4,-8,-7,5,-10,-3,4,2,10],[-5,6,-5,-6,-6,-7,-7,-10,-1,1,5,6,10,5,-4]],[[-1,6,-6,8,-5,8,-1,-2,-10,-8,-10,4,2,-6,6],[-4,10,4,-8,-9,7,6,2,6,2,5,-8,7,-5,-7],[-2,7,10,7,-6,-2,4,8,9,-8,-10,2,-1,10,-2],[6,7,-8,-9,-6,1,-7,-7,3,-2,6,5,2,8,4],[8,-6,5,3,-8,8,-6,-6,-1,6,1,5,-1,-2,8],[1,-5,-10,-2,4,-1,-1,7,-9,-8,4,-8,-3,-8,10]],[[-10,2,1,-6,7,2,2,5,5,-10,1,-2,2,10,2],[-6,2,-10,9,3,-5,6,-2,-9,-4,-10,2,4,9,6],[3,-6,9,7,1,6,8,-5,2,9,-2,1,-3,10,10],[-7,-9,9,8,-7,-9,-9,4,7,-6,4,-7,4,1,-4],[-3,3,6,9,9,5,9,-4,7,-9,-10,-3,-7,9,-2],[-8,-5,-6,-6,-5,8,-2,5,2,-9,-5,3,8,-6,9]],[[-9,4,1,-5,4,1,-9,1,-8,5,3,8,9,-9,2],[-4,6,-3,7,-1,7,5,4,1,8,-1,8,-10,-7,2],[8,8,-4,-10,-10,-4,-2,4,-4,9,-3,-6,2,-5,-6],[6,-5,-5,-7,1,-7,-6,-3,-4,-5,2,5,-6,3,-4],[10,-10,-6,3,-1,3,-9,-6,7,-1,5,10,-1,-7,-2],[1,2,-9,10,4,-6,1,3,-10,-9,5,-6,4,-5,-10]],[[-1,-9,6,-3,-9,8,-1,-5,-8,7,7,3,-10,9,-7],[2,-1,3,8,4,3,5,2,-10,-4,-8,-2,-4,-8,-8],[3,-7,1,-4,7,6,-9,-6,10,1,-5,-7,-2,9,-6],[-6,-5,5,-4,4,-4,-3,-5,6,-7,1,8,8,1,-1],[-2,-7,-2,4,-9,1,-3,10,3,3,-5,-1,4,-4,-5],[-1,-1,-6,1,1,10,-7,6,9,3,1,-6,-10,2,-5]],[[-6,5,-5,2,-1,-7,-7,-4,-2,-4,4,-3,-6,1,7],[-4,-2,-2,-2,-4,9,5,-6,1,-1,2,-10,8,-8,-5],[-6,-7,8,7,6,-4,-3,-3,6,-8,8,-4,7,-4,2],[-7,8,9,3,-7,-7,4,-8,2,10,4,-2,-6,-2,-1],[2,5,3,-8,-1,-7,-6,10,-9,-1,-2,9,-3,2,-7],[-4,-2,1,-4,-4,-5,-3,2,-6,-6,2,-10,-4,5,-2]],[[9,-5,4,4,4,3,9,-10,-7,-1,-1,-3,-3,-8,10],[-3,6,10,4,8,-2,-7,4,1,6,-6,-7,10,5,8],[-7,-6,1,-5,-2,2,5,-6,-1,-2,-10,-3,-9,-9,-2],[4,10,-4,-8,5,-3,3,-8,-7,-5,-5,-9,-4,-1,7],[-9,-3,-2,9,8,-7,1,-7,8,-2,-2,8,5,-2,-4],[-10,-9,-4,-3,-1,7,10,-8,10,10,9,-7,5,-10,8]]], dtype = "uint64")#candidate|3474|(13, 6, 15)|const|uint64
bop_3475 = relay.bitwise_or(call_3434.astype('uint64'), relay.reshape(const_3474.astype('uint64'), relay.shape_of(call_3434))) # shape=(13, 6, 15)
bop_3478 = relay.bitwise_or(call_3435.astype('uint64'), relay.reshape(const_3474.astype('uint64'), relay.shape_of(call_3435))) # shape=(13, 6, 15)
output = relay.Tuple([var_3460,uop_3466,bop_3475,])
output2 = relay.Tuple([var_3460,uop_3468,bop_3478,])
func_3484 = relay.Function([var_3460,], output)
mod['func_3484'] = func_3484
mod = relay.transform.InferType()(mod)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3485 = relay.var("var_3485", dtype = "float64", shape = (2310,))#candidate|3485|(2310,)|var|float64
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3486 = func_3484_call(var_3485)
output = call_3486
func_3487 = relay.Function([var_3485], output)
mutated_mod['func_3487'] = func_3487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_3554 = relay.TupleGetItem(func_2594_call(), 1)
call_3555 = relay.TupleGetItem(func_2596_call(), 1)
func_635_call = mod.get_global_var('func_635')
func_638_call = mutated_mod.get_global_var('func_638')
var_3564 = relay.var("var_3564", dtype = "float64", shape = (72,))#candidate|3564|(72,)|var|float64
call_3563 = relay.TupleGetItem(func_635_call(relay.reshape(var_3564.astype('float64'), [6, 2, 6])), 0)
call_3565 = relay.TupleGetItem(func_638_call(relay.reshape(var_3564.astype('float64'), [6, 2, 6])), 0)
func_2939_call = mod.get_global_var('func_2939')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_3569 = func_2939_call()
call_3570 = func_2939_call()
output = relay.Tuple([call_3554,call_3563,var_3564,call_3569,])
output2 = relay.Tuple([call_3555,call_3565,var_3564,call_3570,])
func_3576 = relay.Function([var_3564,], output)
mod['func_3576'] = func_3576
mod = relay.transform.InferType()(mod)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3577 = relay.var("var_3577", dtype = "float64", shape = (72,))#candidate|3577|(72,)|var|float64
func_3576_call = mutated_mod.get_global_var('func_3576')
call_3578 = func_3576_call(var_3577)
output = call_3578
func_3579 = relay.Function([var_3577], output)
mutated_mod['func_3579'] = func_3579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3606 = relay.var("var_3606", dtype = "int8", shape = (14, 7, 10))#candidate|3606|(14, 7, 10)|var|int8
var_3607 = relay.var("var_3607", dtype = "int8", shape = (14, 7, 10))#candidate|3607|(14, 7, 10)|var|int8
bop_3608 = relay.left_shift(var_3606.astype('int8'), relay.reshape(var_3607.astype('int8'), relay.shape_of(var_3606))) # shape=(14, 7, 10)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
var_3617 = relay.var("var_3617", dtype = "float32", shape = (1092,))#candidate|3617|(1092,)|var|float32
call_3616 = relay.TupleGetItem(func_461_call(relay.reshape(var_3617.astype('float32'), [14, 13, 6])), 0)
call_3618 = relay.TupleGetItem(func_464_call(relay.reshape(var_3617.astype('float32'), [14, 13, 6])), 0)
output = relay.Tuple([bop_3608,call_3616,var_3617,])
output2 = relay.Tuple([bop_3608,call_3618,var_3617,])
func_3619 = relay.Function([var_3606,var_3607,var_3617,], output)
mod['func_3619'] = func_3619
mod = relay.transform.InferType()(mod)
var_3620 = relay.var("var_3620", dtype = "int8", shape = (14, 7, 10))#candidate|3620|(14, 7, 10)|var|int8
var_3621 = relay.var("var_3621", dtype = "int8", shape = (14, 7, 10))#candidate|3621|(14, 7, 10)|var|int8
var_3622 = relay.var("var_3622", dtype = "float32", shape = (1092,))#candidate|3622|(1092,)|var|float32
output = func_3619(var_3620,var_3621,var_3622,)
func_3623 = relay.Function([var_3620,var_3621,var_3622,], output)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mod.get_global_var('func_3174')
func_3176_call = mutated_mod.get_global_var('func_3176')
call_3632 = relay.TupleGetItem(func_3174_call(), 0)
call_3633 = relay.TupleGetItem(func_3176_call(), 0)
output = relay.Tuple([call_3632,])
output2 = relay.Tuple([call_3633,])
func_3642 = relay.Function([], output)
mod['func_3642'] = func_3642
mod = relay.transform.InferType()(mod)
output = func_3642()
func_3643 = relay.Function([], output)
mutated_mod['func_3643'] = func_3643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_3671 = relay.TupleGetItem(func_3642_call(), 0)
call_3672 = relay.TupleGetItem(func_3643_call(), 0)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_3676 = relay.TupleGetItem(func_3381_call(), 1)
call_3677 = relay.TupleGetItem(func_3383_call(), 1)
uop_3683 = relay.asin(call_3671.astype('float32')) # shape=(13, 6, 15)
uop_3685 = relay.asin(call_3672.astype('float32')) # shape=(13, 6, 15)
output = relay.Tuple([call_3676,uop_3683,])
output2 = relay.Tuple([call_3677,uop_3685,])
func_3686 = relay.Function([], output)
mod['func_3686'] = func_3686
mod = relay.transform.InferType()(mod)
output = func_3686()
func_3687 = relay.Function([], output)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_3709 = func_2554_call()
call_3710 = func_2554_call()
output = relay.Tuple([call_3709,])
output2 = relay.Tuple([call_3710,])
func_3713 = relay.Function([], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
output = func_3713()
func_3714 = relay.Function([], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mod.get_global_var('func_2933')
func_2934_call = mutated_mod.get_global_var('func_2934')
call_3723 = relay.TupleGetItem(func_2933_call(), 0)
call_3724 = relay.TupleGetItem(func_2934_call(), 0)
output = relay.Tuple([call_3723,])
output2 = relay.Tuple([call_3724,])
func_3751 = relay.Function([], output)
mod['func_3751'] = func_3751
mod = relay.transform.InferType()(mod)
output = func_3751()
func_3752 = relay.Function([], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3753 = relay.var("var_3753", dtype = "float32", shape = (13, 16, 16))#candidate|3753|(13, 16, 16)|var|float32
uop_3754 = relay.asin(var_3753.astype('float32')) # shape=(13, 16, 16)
bop_3757 = relay.mod(uop_3754.astype('float32'), relay.reshape(var_3753.astype('float32'), relay.shape_of(uop_3754))) # shape=(13, 16, 16)
output = bop_3757
output2 = bop_3757
func_3766 = relay.Function([var_3753,], output)
mod['func_3766'] = func_3766
mod = relay.transform.InferType()(mod)
var_3767 = relay.var("var_3767", dtype = "float32", shape = (13, 16, 16))#candidate|3767|(13, 16, 16)|var|float32
output = func_3766(var_3767)
func_3768 = relay.Function([var_3767], output)
mutated_mod['func_3768'] = func_3768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2912_call = mod.get_global_var('func_2912')
func_2913_call = mutated_mod.get_global_var('func_2913')
call_3891 = func_2912_call()
call_3892 = func_2912_call()
output = call_3891
output2 = call_3892
func_3918 = relay.Function([], output)
mod['func_3918'] = func_3918
mod = relay.transform.InferType()(mod)
output = func_3918()
func_3919 = relay.Function([], output)
mutated_mod['func_3919'] = func_3919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3930 = relay.TupleGetItem(func_3686_call(), 0)
call_3931 = relay.TupleGetItem(func_3687_call(), 0)
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
const_3967 = relay.const([-3.142644,4.589787,8.082446,-8.944130,5.671286,-2.225750,3.065677,0.046174,6.751303,-5.119738,-9.170001,-9.709514,-0.641999,-1.409644,-7.926422,-6.403385,0.673017,-8.269898,1.233247,-8.023526,2.452681,-9.316061], dtype = "float64")#candidate|3967|(22,)|const|float64
call_3966 = relay.TupleGetItem(func_3229_call(relay.reshape(const_3967.astype('float64'), [1, 11, 2])), 1)
call_3968 = relay.TupleGetItem(func_3232_call(relay.reshape(const_3967.astype('float64'), [1, 11, 2])), 1)
output = relay.Tuple([call_3930,call_3966,const_3967,])
output2 = relay.Tuple([call_3931,call_3968,const_3967,])
func_3969 = relay.Function([], output)
mod['func_3969'] = func_3969
mod = relay.transform.InferType()(mod)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mutated_mod.get_global_var('func_3969')
call_3970 = func_3969_call()
output = call_3970
func_3971 = relay.Function([], output)
mutated_mod['func_3971'] = func_3971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3972 = func_3351_call()
call_3973 = func_3351_call()
var_3981 = relay.var("var_3981", dtype = "bool", shape = (13, 6, 15))#candidate|3981|(13, 6, 15)|var|bool
bop_3982 = relay.minimum(call_3972.astype('int8'), relay.reshape(var_3981.astype('int8'), relay.shape_of(call_3972))) # shape=(13, 6, 15)
bop_3985 = relay.minimum(call_3973.astype('int8'), relay.reshape(var_3981.astype('int8'), relay.shape_of(call_3973))) # shape=(13, 6, 15)
output = relay.Tuple([bop_3982,])
output2 = relay.Tuple([bop_3985,])
func_3993 = relay.Function([var_3981,], output)
mod['func_3993'] = func_3993
mod = relay.transform.InferType()(mod)
var_3994 = relay.var("var_3994", dtype = "bool", shape = (13, 6, 15))#candidate|3994|(13, 6, 15)|var|bool
output = func_3993(var_3994)
func_3995 = relay.Function([var_3994], output)
mutated_mod['func_3995'] = func_3995
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4002 = relay.const([[[-9.280864,6.499354,9.010311,-2.393175,-6.046324,1.284946],[5.435598,-3.996367,-9.047454,-8.311823,-3.900467,-4.272667],[-3.742373,0.996441,4.750505,-4.348217,2.719086,-4.096309],[-4.988648,2.076658,2.400659,-9.144918,6.654356,-5.113123],[7.048144,-5.625141,1.366575,-6.311491,6.225329,-4.056531],[-5.706506,-7.251359,-5.903818,0.004796,2.564202,-8.698700],[5.219968,3.895430,5.497023,-2.521022,-6.734682,-9.435305],[-6.430486,-2.283337,-1.135315,-0.322896,1.877720,-1.512156]]], dtype = "float32")#candidate|4002|(1, 8, 6)|const|float32
uop_4003 = relay.asinh(const_4002.astype('float32')) # shape=(1, 8, 6)
output = relay.Tuple([uop_4003,])
output2 = relay.Tuple([uop_4003,])
func_4014 = relay.Function([], output)
mod['func_4014'] = func_4014
mod = relay.transform.InferType()(mod)
mutated_mod['func_4014'] = func_4014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4014_call = mutated_mod.get_global_var('func_4014')
call_4015 = func_4014_call()
output = call_4015
func_4016 = relay.Function([], output)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mod.get_global_var('func_3174')
func_3176_call = mutated_mod.get_global_var('func_3176')
call_4053 = relay.TupleGetItem(func_3174_call(), 0)
call_4054 = relay.TupleGetItem(func_3176_call(), 0)
uop_4059 = relay.log2(call_4053.astype('float32')) # shape=(13, 6, 15)
uop_4061 = relay.log2(call_4054.astype('float32')) # shape=(13, 6, 15)
output = uop_4059
output2 = uop_4061
func_4084 = relay.Function([], output)
mod['func_4084'] = func_4084
mod = relay.transform.InferType()(mod)
mutated_mod['func_4084'] = func_4084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4084_call = mutated_mod.get_global_var('func_4084')
call_4085 = func_4084_call()
output = call_4085
func_4086 = relay.Function([], output)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4089 = relay.TupleGetItem(func_3751_call(), 0)
call_4090 = relay.TupleGetItem(func_3752_call(), 0)
output = call_4089
output2 = call_4090
func_4091 = relay.Function([], output)
mod['func_4091'] = func_4091
mod = relay.transform.InferType()(mod)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4091_call = mutated_mod.get_global_var('func_4091')
call_4092 = func_4091_call()
output = call_4092
func_4093 = relay.Function([], output)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4156 = relay.TupleGetItem(func_3969_call(), 1)
call_4157 = relay.TupleGetItem(func_3971_call(), 1)
const_4160 = relay.const([[[2.271291,-7.055637],[-4.486274,0.341893],[5.556316,7.039749],[8.687924,2.912789],[8.969226,6.433086],[2.476113,-4.335566],[7.995328,-8.356825],[9.132855,-6.377265],[-9.067461,-0.312248],[4.069512,5.928411],[8.348782,3.616431]],[[1.718873,-7.873093],[-0.949049,-1.668756],[6.975130,5.180123],[-2.735466,-9.348873],[4.836945,-6.818115],[-3.550509,-2.498295],[-0.702150,-0.843376],[6.995530,1.231520],[-5.476527,3.939164],[8.063544,7.872389],[-4.043036,7.628787]],[[-0.659483,-0.453159],[4.996669,9.535514],[6.590186,9.999949],[4.226004,5.950463],[-7.362980,9.998324],[4.353697,2.249802],[8.452862,4.862259],[6.846758,-2.085952],[2.835581,3.816681],[8.149780,-2.848923],[3.334517,-0.575240]],[[1.024834,1.239181],[-3.542642,8.338858],[2.372131,2.153205],[1.207677,0.808723],[4.948584,-0.486490],[-9.069009,1.096343],[-5.384527,0.755358],[-0.575041,-9.788714],[4.517549,5.864624],[-8.001589,9.666407],[5.723752,-0.675437]],[[-3.509401,1.646904],[6.840821,-7.006856],[9.786828,1.857880],[2.522199,6.891090],[9.665257,0.430919],[6.336103,-6.176270],[3.447425,-7.671473],[-7.418175,1.549104],[-9.991913,9.397155],[-9.121099,2.262091],[2.700289,9.324249]],[[8.053257,-7.114258],[-9.217292,-6.395918],[-5.405214,-6.363906],[-5.394394,-1.595529],[0.670803,2.631495],[-9.908270,-7.699238],[-3.019568,0.738717],[-8.565533,-2.665265],[6.108833,-5.164855],[0.952402,-2.622983],[-9.399210,0.529705]],[[5.485954,6.830772],[-9.429194,-7.909862],[1.047498,7.792043],[-0.803352,-3.581143],[-9.446666,7.089702],[7.021824,2.900550],[-2.027838,9.139410],[-9.651505,6.935448],[-5.074693,1.792269],[-6.821615,-6.878777],[-3.528303,4.516845]],[[-6.824099,0.518239],[2.286450,-6.587116],[1.164279,7.681232],[5.733081,-1.527567],[6.273451,0.866487],[-3.216121,-9.021242],[-8.331806,6.002803],[8.580319,-8.922767],[-3.851631,-3.059709],[-1.534590,-2.512314],[-0.173986,1.910197]],[[-4.970861,-5.987809],[5.167991,-2.760379],[-2.651591,-9.409435],[9.301413,9.765030],[0.254535,-6.108999],[6.465023,3.199468],[5.755297,0.171586],[7.852653,-5.246207],[-3.271198,5.411471],[-8.500438,-1.730829],[1.345087,-2.882348]],[[-4.504989,4.392072],[0.285824,1.613803],[-8.136050,-0.914439],[-2.588162,9.717898],[-2.450149,-3.133915],[-1.713326,-1.190894],[5.422093,2.782144],[-5.453520,7.595076],[2.951800,-6.042724],[-5.773182,-7.733114],[-1.749790,-8.528022]]], dtype = "float64")#candidate|4160|(10, 11, 2)|const|float64
bop_4161 = relay.maximum(call_4156.astype('int32'), const_4160.astype('int32')) # shape=(10, 11, 2)
bop_4164 = relay.maximum(call_4157.astype('int32'), const_4160.astype('int32')) # shape=(10, 11, 2)
func_3576_call = mod.get_global_var('func_3576')
func_3579_call = mutated_mod.get_global_var('func_3579')
var_4167 = relay.var("var_4167", dtype = "float64", shape = (3, 24))#candidate|4167|(3, 24)|var|float64
call_4166 = relay.TupleGetItem(func_3576_call(relay.reshape(var_4167.astype('float64'), [72,])), 3)
call_4168 = relay.TupleGetItem(func_3579_call(relay.reshape(var_4167.astype('float64'), [72,])), 3)
bop_4175 = relay.less(const_4160.astype('bool'), call_4156.astype('bool')) # shape=(10, 11, 2)
bop_4178 = relay.less(const_4160.astype('bool'), call_4157.astype('bool')) # shape=(10, 11, 2)
output = relay.Tuple([bop_4161,call_4166,var_4167,bop_4175,])
output2 = relay.Tuple([bop_4164,call_4168,var_4167,bop_4178,])
func_4181 = relay.Function([var_4167,], output)
mod['func_4181'] = func_4181
mod = relay.transform.InferType()(mod)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4182 = relay.var("var_4182", dtype = "float64", shape = (3, 24))#candidate|4182|(3, 24)|var|float64
func_4181_call = mutated_mod.get_global_var('func_4181')
call_4183 = func_4181_call(var_4182)
output = call_4183
func_4184 = relay.Function([var_4182], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4226 = relay.var("var_4226", dtype = "uint32", shape = (5, 9, 13))#candidate|4226|(5, 9, 13)|var|uint32
const_4227 = relay.const([[[8,-2,9,-9,6,5,8,-1,-9,1,10,7,-6],[-4,-4,8,10,10,-6,6,8,5,-1,-10,-3,-6],[-3,-6,8,1,-7,-6,2,6,-5,-2,-6,-9,-5],[9,4,-4,-6,5,8,-10,8,2,1,10,10,1],[10,5,10,5,1,10,-10,3,-2,3,-8,8,2],[-7,1,-2,-7,8,3,1,5,-1,-6,-10,-7,8],[9,5,3,8,8,-7,-5,4,8,-1,-7,-7,7],[3,2,7,7,-5,-4,6,-10,-8,-8,4,8,-9],[8,-9,-3,8,4,-7,7,-3,4,4,-4,9,-7]],[[-6,-8,9,2,10,-10,3,6,-5,3,-6,9,8],[-6,-3,-10,5,7,4,2,7,6,4,-1,5,-8],[10,4,-1,7,-1,-5,6,10,1,8,4,7,6],[-10,3,-3,-5,5,7,-10,-10,7,-6,8,1,-5],[-9,-4,4,5,1,-2,-7,4,10,4,-10,-6,10],[-6,-1,7,-7,5,6,-7,-10,-5,8,2,-5,8],[9,-4,9,9,2,9,8,9,4,3,6,10,9],[-10,10,10,1,6,3,-1,5,2,-6,9,6,-3],[-2,-6,6,-5,-5,4,8,-7,9,-4,10,8,-7]],[[-5,1,-5,2,5,-9,-4,5,2,2,-4,9,-7],[-4,-2,-4,-3,-4,9,2,-4,6,7,8,7,-9],[2,7,-7,-4,1,6,4,-4,6,9,-1,9,-8],[-7,8,-6,-6,-8,3,1,-2,9,9,-9,3,4],[-4,-4,-10,9,-9,-8,5,7,10,5,-5,7,10],[-8,7,9,-4,6,-3,4,8,-6,-10,3,9,5],[4,7,-10,-7,6,8,8,-8,7,-3,-5,-9,2],[-8,-2,6,-5,-10,-9,-3,4,6,5,2,-7,-10],[6,1,1,-8,2,-9,-8,-3,-7,-1,-8,-2,5]],[[9,-3,-6,8,6,5,-4,-1,-4,-3,5,3,-10],[4,-4,-10,-3,-1,3,-4,-9,-6,-8,8,-5,10],[1,-5,-2,5,-10,-10,9,1,3,2,8,4,4],[-9,3,8,-3,-4,-3,-3,-5,7,-8,-7,-4,2],[-8,10,-8,-8,8,-4,-8,8,-7,-8,5,8,4],[4,-6,-1,-3,-4,-8,2,10,-9,-4,2,7,4],[5,-7,9,6,8,-10,6,1,-8,-4,-9,-7,-9],[4,10,1,-2,-2,-10,6,6,6,-10,8,10,-6],[-4,-1,3,10,-5,-9,-9,-8,9,-6,2,7,-1]],[[-1,6,1,2,2,7,-1,4,9,-10,2,-3,-6],[-2,-6,-9,-3,6,-4,6,-8,-9,7,-8,5,-5],[9,9,2,10,4,7,-4,-1,-1,-6,4,-7,-7],[7,-5,2,10,-1,3,-2,-3,-4,10,-7,6,2],[-7,9,6,-7,-2,-6,10,-7,-3,10,6,2,1],[10,3,7,3,-5,4,1,-2,-8,-6,-7,-4,4],[-1,7,-6,-1,-1,8,-4,2,-4,4,9,10,9],[-4,-2,-4,-5,-9,9,9,-8,-3,-1,-10,7,-10],[-10,-2,8,3,-4,-5,7,1,3,8,-8,-4,6]]], dtype = "uint32")#candidate|4227|(5, 9, 13)|const|uint32
bop_4228 = relay.greater_equal(var_4226.astype('bool'), relay.reshape(const_4227.astype('bool'), relay.shape_of(var_4226))) # shape=(5, 9, 13)
const_4261 = relay.const([[[9,6,1,4,-4,6,10,8,2,-5,-9,-2,-6],[6,6,-3,9,4,-1,-5,7,-4,-9,-4,-8,-1],[8,1,2,5,-7,-5,-2,-8,7,10,7,10,-6],[6,-3,-10,2,-6,1,2,-2,6,-6,-6,10,-7],[-2,2,1,-2,6,-7,3,1,-5,-2,2,10,2],[10,-4,10,6,-3,-1,5,-7,4,-6,-4,9,-9],[-3,8,-6,9,7,-5,-3,-2,-3,2,9,-10,2],[-5,9,10,4,-9,-6,10,10,-8,4,-9,-9,9],[-8,1,4,-3,-2,4,10,-4,-2,2,2,8,10]],[[-4,-10,-6,-1,-10,-5,-7,5,10,-5,-4,1,-2],[5,-10,7,5,7,6,8,-3,1,9,3,3,-4],[-6,2,9,-8,-6,2,-2,5,-9,6,-8,-3,-2],[6,4,-2,-8,-2,6,5,5,-5,8,-5,-5,-10],[7,-9,10,6,-9,6,-5,-6,8,-4,1,-8,-9],[8,5,6,1,-2,-3,5,-9,1,9,4,9,10],[7,-10,2,-10,-6,-10,-2,-8,-3,8,5,-5,-9],[4,8,1,-4,2,1,-5,-8,5,-9,4,-5,-3],[6,-5,-8,-6,-2,2,7,6,-5,4,7,-3,4]],[[8,2,10,-9,6,5,-4,6,-5,-9,1,-1,7],[-6,-6,-8,10,6,-1,-6,-2,6,7,1,4,-2],[-4,-2,5,-1,-8,5,-10,-7,-8,5,-3,-6,-2],[-2,-7,-3,-1,1,-5,-5,1,3,1,-2,5,8],[8,-8,-3,9,7,2,-9,4,-5,-8,-8,-10,1],[7,9,3,9,8,-4,-3,-10,-10,8,-4,-2,-1],[-3,9,-3,9,-2,-1,-6,5,7,2,1,-8,-8],[1,-7,2,5,4,-6,2,-5,-10,-2,-2,1,8],[-8,2,-3,7,7,-9,-1,-2,6,-6,7,-2,9]],[[9,8,3,-6,-5,9,-8,-1,1,-10,10,5,8],[10,-2,-4,10,-8,1,1,4,7,-6,-1,-10,-10],[-10,6,8,8,4,10,-5,10,-4,-1,9,-4,-6],[-4,9,-7,-8,5,-9,-5,-6,-1,-3,6,-10,-8],[4,-5,-9,7,2,5,6,-5,4,2,-3,10,1],[-5,-2,1,-9,6,-7,3,6,-9,-1,-9,-4,-2],[3,-5,7,-7,-7,7,-7,3,6,3,-6,-6,9],[-2,8,2,-6,-6,-8,-6,-3,2,-7,-2,-3,-5],[-9,5,-6,-1,-3,-6,9,-5,-6,4,5,-7,-3]],[[7,6,-4,-3,-3,8,-5,-6,-9,4,-1,-5,10],[-3,4,8,1,-3,10,-3,-9,8,3,5,-8,8],[-9,-6,-4,-8,4,-10,-1,-7,-3,6,5,-5,10],[10,1,7,2,-1,-10,-5,-2,-9,-9,5,-1,3],[-7,-2,-8,-4,2,-9,3,-1,8,1,-2,-4,-9],[5,10,-3,6,-1,-10,3,6,-6,-3,-4,-2,10],[5,7,3,-1,-9,7,2,10,-2,-5,5,7,-10],[-7,-8,-8,-3,7,8,6,-2,3,-2,7,-3,2],[6,6,-2,8,-1,3,3,7,-5,9,7,-3,-4]]], dtype = "uint32")#candidate|4261|(5, 9, 13)|const|uint32
bop_4262 = relay.bitwise_and(var_4226.astype('int64'), relay.reshape(const_4261.astype('int64'), relay.shape_of(var_4226))) # shape=(5, 9, 13)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
const_4270 = relay.const([7,10,-5,-4,-2,2,10,9,-9,-9,1,10,-8,-6,-7,3,-10,6,1,-4,-2,9,10,-3,4,-3,-10,4,-10,-6,-1,10,2,-9,-6,8,-1,10,-4,10,7,-4], dtype = "uint8")#candidate|4270|(42,)|const|uint8
call_4269 = relay.TupleGetItem(func_1437_call(relay.reshape(const_4270.astype('uint8'), [6, 7])), 1)
call_4271 = relay.TupleGetItem(func_1439_call(relay.reshape(const_4270.astype('uint8'), [6, 7])), 1)
func_3053_call = mod.get_global_var('func_3053')
func_3057_call = mutated_mod.get_global_var('func_3057')
var_4275 = relay.var("var_4275", dtype = "float32", shape = (63,))#candidate|4275|(63,)|var|float32
call_4274 = relay.TupleGetItem(func_3053_call(relay.reshape(var_4275.astype('float32'), [63,]), relay.reshape(const_4270.astype('float32'), [42,]), ), 1)
call_4276 = relay.TupleGetItem(func_3057_call(relay.reshape(var_4275.astype('float32'), [63,]), relay.reshape(const_4270.astype('float32'), [42,]), ), 1)
uop_4296 = relay.sigmoid(call_4274.astype('float64')) # shape=(11, 16, 5)
uop_4298 = relay.sigmoid(call_4276.astype('float64')) # shape=(11, 16, 5)
func_2933_call = mod.get_global_var('func_2933')
func_2934_call = mutated_mod.get_global_var('func_2934')
call_4306 = relay.TupleGetItem(func_2933_call(), 0)
call_4307 = relay.TupleGetItem(func_2934_call(), 0)
bop_4322 = relay.logical_xor(uop_4296.astype('uint64'), relay.reshape(call_4274.astype('uint64'), relay.shape_of(uop_4296))) # shape=(11, 16, 5)
bop_4325 = relay.logical_xor(uop_4298.astype('uint64'), relay.reshape(call_4276.astype('uint64'), relay.shape_of(uop_4298))) # shape=(11, 16, 5)
output = relay.Tuple([bop_4228,bop_4262,call_4269,const_4270,var_4275,call_4306,bop_4322,])
output2 = relay.Tuple([bop_4228,bop_4262,call_4271,const_4270,var_4275,call_4307,bop_4325,])
func_4336 = relay.Function([var_4226,var_4275,], output)
mod['func_4336'] = func_4336
mod = relay.transform.InferType()(mod)
var_4337 = relay.var("var_4337", dtype = "uint32", shape = (5, 9, 13))#candidate|4337|(5, 9, 13)|var|uint32
var_4338 = relay.var("var_4338", dtype = "float32", shape = (63,))#candidate|4338|(63,)|var|float32
output = func_4336(var_4337,var_4338,)
func_4339 = relay.Function([var_4337,var_4338,], output)
mutated_mod['func_4339'] = func_4339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4350 = relay.TupleGetItem(func_3686_call(), 0)
call_4351 = relay.TupleGetItem(func_3687_call(), 0)
uop_4361 = relay.sin(call_4350.astype('float32')) # shape=(13, 6, 15)
uop_4363 = relay.sin(call_4351.astype('float32')) # shape=(13, 6, 15)
func_2479_call = mod.get_global_var('func_2479')
func_2482_call = mutated_mod.get_global_var('func_2482')
var_4402 = relay.var("var_4402", dtype = "uint32", shape = (324,))#candidate|4402|(324,)|var|uint32
call_4401 = relay.TupleGetItem(func_2479_call(relay.reshape(var_4402.astype('uint32'), [9, 4, 9]), relay.reshape(var_4402.astype('uint32'), [9, 4, 9]), ), 0)
call_4403 = relay.TupleGetItem(func_2482_call(relay.reshape(var_4402.astype('uint32'), [9, 4, 9]), relay.reshape(var_4402.astype('uint32'), [9, 4, 9]), ), 0)
func_3053_call = mod.get_global_var('func_3053')
func_3057_call = mutated_mod.get_global_var('func_3057')
const_4422 = relay.const([-1.480084,-5.039646,6.332906,-2.079056,8.156877,1.227400,6.353713,-8.216022,-5.501771,6.125081,-9.217906,-3.529545,-6.150483,-2.734369,4.416644,4.241314,4.503535,1.916869,-9.418939,-2.058870,-0.435393,-1.941219,-6.314428,-9.573391,1.137921,9.502805,7.555263,-9.147548,2.140631,5.375320,4.575474,-5.179075,-8.311337,4.502973,3.488438,-4.532620,-1.039302,7.344741,7.215911,7.419962,-2.389618,5.489591,-9.008806,6.146673,-6.417900,5.384530,5.601183,-2.986468,9.068809,-3.064810,9.677228,5.130383,4.534806,0.779004,-1.816452,-4.743201,5.407696,-9.526160,6.782238,4.210685,-2.201231,6.797519,-7.827843], dtype = "float32")#candidate|4422|(63,)|const|float32
const_4423 = relay.const([3.101175,-6.151097,4.817639,0.398121,-1.394461,7.650444,-9.964258,-6.760234,5.954709,6.049902,-1.555302,6.472701,9.547758,1.639931,6.647492,1.630545,-6.752142,7.881730,1.471867,-5.870955,-5.456201,-1.562755,-9.513774,9.430776,6.096071,-8.771281,-1.711369,3.537440,0.628289,-2.668260,-7.297901,5.728497,3.307308,-6.545633,-9.544444,3.403798,2.243394,7.614833,-6.210075,8.763837,7.865121,7.905591], dtype = "float32")#candidate|4423|(42,)|const|float32
call_4421 = relay.TupleGetItem(func_3053_call(relay.reshape(const_4422.astype('float32'), [63,]), relay.reshape(const_4423.astype('float32'), [42,]), ), 1)
call_4424 = relay.TupleGetItem(func_3057_call(relay.reshape(const_4422.astype('float32'), [63,]), relay.reshape(const_4423.astype('float32'), [42,]), ), 1)
bop_4426 = relay.bitwise_or(var_4402.astype('int16'), relay.reshape(call_4401.astype('int16'), relay.shape_of(var_4402))) # shape=(324,)
bop_4429 = relay.bitwise_or(var_4402.astype('int16'), relay.reshape(call_4403.astype('int16'), relay.shape_of(var_4402))) # shape=(324,)
func_2525_call = mod.get_global_var('func_2525')
func_2529_call = mutated_mod.get_global_var('func_2529')
const_4433 = relay.const([8.928446,-1.947013,3.990188,8.551425,-6.446293,5.571155,0.604147,8.083680,9.694316,9.973603,-8.203224,-0.817828,-7.492415,6.070740,-6.029706,2.661577,-4.662663,0.757529,8.394678,6.378382,7.367337,-9.961784,-2.446552,-5.961405,9.621155,-2.394983,-7.261431,8.152672,6.670080,-7.078512,3.980050,1.275931,4.748645,-6.863807,-4.935577,-1.710431,-1.432664,-0.098168,-7.933629,-1.224875,5.372457,8.024688,-5.201952,-6.344512,3.876564,4.770598,-9.225117,2.311524,-7.064641,-2.543094,0.954283,-6.336650,-4.172840,2.658695,-2.565651,-0.298489,-2.611708,1.904773,-7.025734,-5.907271,-4.740526,-6.141967,-4.897561,-5.808067,5.006471,6.898069,6.901463,-0.012115,8.426653,1.170723,-3.016695,1.810026,3.769112,9.697096,-2.587194,-4.441242,3.789175,1.984992,-0.022135,-4.493564,-1.020449,-6.113391,-1.310149,3.457138,-8.759485,8.530919,-3.720412,1.248821,9.632911,8.782539,-9.042153,-5.419147,4.104282,-8.748730,1.370489,1.386347,-0.904813,5.061485,8.449643,-8.191146,0.362606,-2.983049,-2.231409,-5.765779,-0.196060,0.064935,4.475546,-2.793258,1.583012,-1.029094,-0.628889,5.983038,1.135523,2.327731,9.683907,7.947251,0.470113,5.892054,5.862019,3.674060,7.431613,6.062216,-1.861384,5.428598,-0.414096,-1.797686,-4.455960,0.389674,-4.448219,-7.127096,7.172877,5.612299,2.972666,-7.639782,-0.719446,-9.663195,7.927752,-7.742454,7.595324,2.508042,6.418147,-1.883573,6.440661,7.441640,-2.071670,-6.771140,2.692226,-3.254856,-8.158415,-4.382122,-1.653933,-6.590129,-0.781921,3.992841,2.730137,2.733855,-6.061639,-9.629665,5.969890,-7.682490,0.067179,4.426306,-0.858891,3.808437,7.141154,9.978563,-6.951114,9.038303,-9.910210,-5.998920,2.233702,-5.773502,-7.584791,-3.465938,-4.150501,9.452530,5.385876,2.293594,8.894249,-0.769371,-2.269975,-3.531880,2.160495,2.136181,3.558674,2.417598,6.644932,-6.383977,-6.147443,5.682117,5.217786,-6.524286,-1.665522,-8.693241,-4.215978,-2.871796,-0.282104,4.468227,-0.132473,0.983423,6.110582,-9.956438,-8.391131,-2.874854,3.788641,-6.976365,-1.814969,7.067305,-8.945085,-6.816084,-1.028849,1.893135,-3.714149,2.515261,2.301069,-8.625905,7.015376,3.015419,9.515236,9.452269,3.060669,-8.828353,-6.707318,-8.568332,5.944790,-6.656479,9.926108,7.444807,-3.876867,-0.374423,8.816718,-0.524348,-0.827009,3.248012,0.662641,-7.214313,-1.983306,7.620710,4.778346,5.572586,-7.642781,-8.857505,3.383216,8.069726,-9.186932,0.151713,-6.161187,2.417227,2.051171,4.773798,5.903721,4.247529,-0.791571,-7.093998,5.451751,-8.291041,5.878618,9.471853,-7.534779,4.951095,9.388608,7.837946,-8.067889,-9.657434,0.140914,0.687116,8.267349,-0.463442,6.277239,0.746948,-1.583473,-0.814245,8.350665,-8.956968,5.492622,-5.079609,-4.273327,-6.785886,-3.275643,-6.746100,-1.134335,-8.589011,-7.310686,1.079887,-8.716738,-9.048892,9.975156,-5.609098,1.377126,-3.234181,-3.011824,1.078964,-6.539136,-9.723893,-9.028584,-8.667004,-8.196938,-0.979858,7.658650,-5.714419,9.645147,-3.075495,9.773566,4.303227,6.413059,8.808907,-6.850915,-1.665214,0.676599,-6.000436,3.204089,-0.416528,6.536623,2.789866,9.559148,-3.890101,-0.598527,0.933442,-5.122392,-8.287586,-1.257139,6.375754,-0.903102,-5.300214,-3.804406,0.275143,6.396314,4.750123,8.272526,-6.747800,-6.546086,3.386075,3.685063,9.514192,2.114010,-9.993268,5.440336,-3.803852,6.862665,8.898840,8.629622,-1.198629,5.493121,-3.826813,-8.533514,6.816685,0.155226,9.109621,5.965098,-4.035808,6.035860,-2.014399,7.090285,-2.041991,1.886205,-7.987110,3.500251,-3.572548,1.617337,0.703754,6.730326,-6.916224,5.450005,7.267626,-2.690652,6.682580,-2.212036,4.217753,-3.662800,5.552209,9.957333,8.947469,-9.904237,6.121408,-8.354679,3.928821,6.187698,-0.133416,5.101280,4.676633,-3.729647,6.717909,0.237426,-6.522550,2.413175,4.190592,0.813473,4.104786,-8.830667,5.589829,5.999749,-5.142476,6.640385,0.007248,2.605739,-4.799797,8.563161,-6.462241,-8.050216,-4.083378,-8.004259,6.208220,-5.821866,3.523712,2.039188,9.409747,6.007238,-9.191927,1.966487,-7.415036,-5.609729,-5.668739,-5.575152,-6.405831,5.819665,-1.306520,3.069008,8.135840,-3.245715,-8.997996,-9.297409,-7.935762,-5.273786,-3.733275,-8.485357,-7.961171,0.532098,-7.261051,8.438919,2.552946,-7.583201,7.718299,1.073192,5.785171,5.971784,8.976134,-4.492438,-7.442824,-4.999399,-9.956563,2.842513,-0.630112,4.566798,-6.859643,2.684986,9.638587,-9.871992,8.608518,0.551507,9.053759,6.929787,-3.647304,4.266002,-9.363281,1.287202,-7.994954,2.292497,-3.361667,-3.073019,2.522601,-3.246642,5.023230,7.486563,-2.854126,4.613227,-0.164856,-1.165416,-5.680774,2.041266,-4.457806,9.880010,4.951036,3.064407,8.618331,-8.518140,5.120366,9.591132,0.242386,-4.456692,-4.761604,-5.824843,-3.294211,8.224662,-5.790756,5.862670,-4.836105,8.607978,5.673771,0.130495,-6.479343,3.232452,-5.770748,-1.141798,-9.901199,1.459935,7.644922,9.599370,-5.830414,-4.290157,8.692605,6.676587,1.494958,6.746163,0.331992,3.038791,-2.262831,-1.072374,-3.316746,5.817519,0.560165,3.528220,-6.517445,-9.125357,9.901868,1.565270,-2.211056,-9.874819,9.284460,-9.359749,-2.095289,1.221195,-2.868737,2.370670,-8.411539,8.050899,6.176970,-0.320133,1.823847,6.015700,-2.285158,7.514067,5.892249,-4.451461,3.714009,-2.776786,-0.296606,9.066579,1.874435,7.195207,4.538685], dtype = "float32")#candidate|4433|(540,)|const|float32
call_4432 = func_2525_call(relay.reshape(const_4433.astype('float32'), [9, 15, 4]), relay.reshape(const_4433.astype('float32'), [9, 15, 4]), )
call_4434 = func_2525_call(relay.reshape(const_4433.astype('float32'), [9, 15, 4]), relay.reshape(const_4433.astype('float32'), [9, 15, 4]), )
func_4181_call = mod.get_global_var('func_4181')
func_4184_call = mutated_mod.get_global_var('func_4184')
var_4443 = relay.var("var_4443", dtype = "float64", shape = (72,))#candidate|4443|(72,)|var|float64
call_4442 = relay.TupleGetItem(func_4181_call(relay.reshape(var_4443.astype('float64'), [3, 24])), 3)
call_4444 = relay.TupleGetItem(func_4184_call(relay.reshape(var_4443.astype('float64'), [3, 24])), 3)
output = relay.Tuple([uop_4361,call_4421,const_4422,const_4423,bop_4426,call_4432,const_4433,call_4442,var_4443,])
output2 = relay.Tuple([uop_4363,call_4424,const_4422,const_4423,bop_4429,call_4434,const_4433,call_4444,var_4443,])
func_4448 = relay.Function([var_4402,var_4443,], output)
mod['func_4448'] = func_4448
mod = relay.transform.InferType()(mod)
var_4449 = relay.var("var_4449", dtype = "uint32", shape = (324,))#candidate|4449|(324,)|var|uint32
var_4450 = relay.var("var_4450", dtype = "float64", shape = (72,))#candidate|4450|(72,)|var|float64
output = func_4448(var_4449,var_4450,)
func_4451 = relay.Function([var_4449,var_4450,], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4478 = relay.TupleGetItem(func_3751_call(), 0)
call_4479 = relay.TupleGetItem(func_3752_call(), 0)
var_4510 = relay.var("var_4510", dtype = "bool", shape = (13, 6, 15))#candidate|4510|(13, 6, 15)|var|bool
bop_4511 = relay.equal(call_4478.astype('bool'), relay.reshape(var_4510.astype('bool'), relay.shape_of(call_4478))) # shape=(13, 6, 15)
bop_4514 = relay.equal(call_4479.astype('bool'), relay.reshape(var_4510.astype('bool'), relay.shape_of(call_4479))) # shape=(13, 6, 15)
output = bop_4511
output2 = bop_4514
func_4522 = relay.Function([var_4510,], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4523 = relay.var("var_4523", dtype = "bool", shape = (13, 6, 15))#candidate|4523|(13, 6, 15)|var|bool
func_4522_call = mutated_mod.get_global_var('func_4522')
call_4524 = func_4522_call(var_4523)
output = call_4524
func_4525 = relay.Function([var_4523], output)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4527 = relay.TupleGetItem(func_3686_call(), 1)
call_4528 = relay.TupleGetItem(func_3687_call(), 1)
output = call_4527
output2 = call_4528
func_4531 = relay.Function([], output)
mod['func_4531'] = func_4531
mod = relay.transform.InferType()(mod)
mutated_mod['func_4531'] = func_4531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mutated_mod.get_global_var('func_4531')
call_4532 = func_4531_call()
output = call_4532
func_4533 = relay.Function([], output)
mutated_mod['func_4533'] = func_4533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_4554 = relay.TupleGetItem(func_3642_call(), 0)
call_4555 = relay.TupleGetItem(func_3643_call(), 0)
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
const_4594 = relay.const([-4.943386,6.313506,7.091919,1.500676,9.376918,-3.108660,-7.214867,4.362921,-0.986714,-2.588254,-4.547381,5.590961,-3.989590,-4.148377,-0.875638,3.951875,9.810444,7.977105,2.777167,2.173310,1.438039,3.659279], dtype = "float64")#candidate|4594|(22,)|const|float64
call_4593 = relay.TupleGetItem(func_3229_call(relay.reshape(const_4594.astype('float64'), [1, 11, 2])), 0)
call_4595 = relay.TupleGetItem(func_3232_call(relay.reshape(const_4594.astype('float64'), [1, 11, 2])), 0)
bop_4597 = relay.bitwise_and(call_4593.astype('uint16'), relay.reshape(const_4594.astype('uint16'), relay.shape_of(call_4593))) # shape=(1, 11, 2)
bop_4600 = relay.bitwise_and(call_4595.astype('uint16'), relay.reshape(const_4594.astype('uint16'), relay.shape_of(call_4595))) # shape=(1, 11, 2)
var_4614 = relay.var("var_4614", dtype = "float64", shape = (22,))#candidate|4614|(22,)|var|float64
bop_4615 = relay.bitwise_and(const_4594.astype('uint16'), relay.reshape(var_4614.astype('uint16'), relay.shape_of(const_4594))) # shape=(22,)
output = relay.Tuple([call_4554,bop_4597,bop_4615,])
output2 = relay.Tuple([call_4555,bop_4600,bop_4615,])
func_4618 = relay.Function([var_4614,], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
var_4619 = relay.var("var_4619", dtype = "float64", shape = (22,))#candidate|4619|(22,)|var|float64
output = func_4618(var_4619)
func_4620 = relay.Function([var_4619], output)
mutated_mod['func_4620'] = func_4620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4624 = relay.var("var_4624", dtype = "int64", shape = (2, 16, 4))#candidate|4624|(2, 16, 4)|var|int64
const_4625 = relay.const([[[8,-5,-8,10],[-9,-7,3,2],[10,-5,-6,-8],[1,-2,1,-2],[-7,1,-5,-9],[3,-1,-8,10],[-8,4,-3,5],[-2,-10,-4,1],[-7,-7,3,-7],[2,3,-10,5],[7,3,4,4],[6,-9,4,4],[-2,6,-6,2],[-2,5,-7,9],[2,3,-10,1],[1,-10,10,8]],[[4,-9,-8,8],[7,1,6,7],[-2,5,9,9],[8,5,-3,1],[-1,-6,3,-9],[9,-4,10,4],[-4,-5,9,-3],[5,-6,-2,-4],[9,-4,-5,-3],[-2,9,10,5],[6,-7,4,-9],[-7,-7,-2,-4],[10,5,10,10],[-5,-6,-6,-9],[1,-5,-3,5],[-1,-10,1,8]]], dtype = "int64")#candidate|4625|(2, 16, 4)|const|int64
bop_4626 = relay.minimum(var_4624.astype('int64'), relay.reshape(const_4625.astype('int64'), relay.shape_of(var_4624))) # shape=(2, 16, 4)
output = relay.Tuple([bop_4626,])
output2 = relay.Tuple([bop_4626,])
func_4631 = relay.Function([var_4624,], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4632 = relay.var("var_4632", dtype = "int64", shape = (2, 16, 4))#candidate|4632|(2, 16, 4)|var|int64
func_4631_call = mutated_mod.get_global_var('func_4631')
call_4633 = func_4631_call(var_4632)
output = call_4633
func_4634 = relay.Function([var_4632], output)
mutated_mod['func_4634'] = func_4634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4645 = relay.var("var_4645", dtype = "uint32", shape = (8, 5, 15))#candidate|4645|(8, 5, 15)|var|uint32
var_4646 = relay.var("var_4646", dtype = "uint32", shape = (8, 5, 15))#candidate|4646|(8, 5, 15)|var|uint32
bop_4647 = relay.bitwise_and(var_4645.astype('uint32'), relay.reshape(var_4646.astype('uint32'), relay.shape_of(var_4645))) # shape=(8, 5, 15)
output = bop_4647
output2 = bop_4647
func_4669 = relay.Function([var_4645,var_4646,], output)
mod['func_4669'] = func_4669
mod = relay.transform.InferType()(mod)
var_4670 = relay.var("var_4670", dtype = "uint32", shape = (8, 5, 15))#candidate|4670|(8, 5, 15)|var|uint32
var_4671 = relay.var("var_4671", dtype = "uint32", shape = (8, 5, 15))#candidate|4671|(8, 5, 15)|var|uint32
output = func_4669(var_4670,var_4671,)
func_4672 = relay.Function([var_4670,var_4671,], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mod.get_global_var('func_3918')
func_3919_call = mutated_mod.get_global_var('func_3919')
call_4676 = func_3918_call()
call_4677 = func_3918_call()
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_4687 = func_3351_call()
call_4688 = func_3351_call()
output = relay.Tuple([call_4676,call_4687,])
output2 = relay.Tuple([call_4677,call_4688,])
func_4702 = relay.Function([], output)
mod['func_4702'] = func_4702
mod = relay.transform.InferType()(mod)
output = func_4702()
func_4703 = relay.Function([], output)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_4723 = func_2554_call()
call_4724 = func_2554_call()
output = call_4723
output2 = call_4724
func_4725 = relay.Function([], output)
mod['func_4725'] = func_4725
mod = relay.transform.InferType()(mod)
output = func_4725()
func_4726 = relay.Function([], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3686_call = mod.get_global_var('func_3686')
func_3687_call = mutated_mod.get_global_var('func_3687')
call_4731 = relay.TupleGetItem(func_3686_call(), 0)
call_4732 = relay.TupleGetItem(func_3687_call(), 0)
func_3993_call = mod.get_global_var('func_3993')
func_3995_call = mutated_mod.get_global_var('func_3995')
call_4738 = relay.TupleGetItem(func_3993_call(relay.reshape(call_4731.astype('bool'), [13, 6, 15])), 0)
call_4739 = relay.TupleGetItem(func_3995_call(relay.reshape(call_4731.astype('bool'), [13, 6, 15])), 0)
func_3111_call = mod.get_global_var('func_3111')
func_3112_call = mutated_mod.get_global_var('func_3112')
call_4740 = relay.TupleGetItem(func_3111_call(), 0)
call_4741 = relay.TupleGetItem(func_3112_call(), 0)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_4743 = relay.TupleGetItem(func_2594_call(), 2)
call_4744 = relay.TupleGetItem(func_2596_call(), 2)
output = relay.Tuple([call_4731,call_4738,call_4740,call_4743,])
output2 = relay.Tuple([call_4732,call_4739,call_4741,call_4744,])
func_4747 = relay.Function([], output)
mod['func_4747'] = func_4747
mod = relay.transform.InferType()(mod)
output = func_4747()
func_4748 = relay.Function([], output)
mutated_mod['func_4748'] = func_4748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4725_call = mod.get_global_var('func_4725')
func_4726_call = mutated_mod.get_global_var('func_4726')
call_4819 = func_4725_call()
call_4820 = func_4725_call()
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
const_4833 = relay.const([4.427283,2.520469,-1.401979,4.802331,6.258335,4.268590,-6.621277,-8.141438,-8.405120,-5.523955,-0.292002,-7.448154,-5.705374,-4.824795,4.049191,-1.947451,-9.536954,-8.498835,-7.415070,-4.472306,7.899482,3.425220,2.001405,5.946060,-5.247113,-0.905339,5.956723,-3.967736,-3.420331,3.690158,-5.253398,-4.068107,7.100190,7.294388,-9.731859,-0.398517,-7.323655,9.015749,2.728779,9.302225,-4.042313,-8.770267,-4.996103,1.015002,6.385057,-9.208853,-7.856477,-8.686458,-2.721480,0.412062,3.788227,-1.616696,-4.388049,6.993014,3.324994,6.013361,-2.588012,8.670847,8.490836,7.528078,-7.713540,-5.336945,-1.197285,-7.685087,-9.281864,6.532191,4.672432,4.621158,7.763436,6.368832,2.068180,-0.104513,-6.557802,3.529740,8.613248,-6.494712,-0.553690,-6.707357,3.115553,9.777080,0.057460,8.996932,1.028821,-3.032621,1.336408,2.549737,-6.942441,1.478422,3.336231,-0.154595,8.373594], dtype = "float32")#candidate|4833|(91,)|const|float32
call_4832 = relay.TupleGetItem(func_1630_call(relay.reshape(const_4833.astype('float32'), [7, 1, 13])), 0)
call_4834 = relay.TupleGetItem(func_1632_call(relay.reshape(const_4833.astype('float32'), [7, 1, 13])), 0)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_4841 = relay.TupleGetItem(func_2594_call(), 0)
call_4842 = relay.TupleGetItem(func_2596_call(), 0)
output = relay.Tuple([call_4819,call_4832,const_4833,call_4841,])
output2 = relay.Tuple([call_4820,call_4834,const_4833,call_4842,])
func_4849 = relay.Function([], output)
mod['func_4849'] = func_4849
mod = relay.transform.InferType()(mod)
output = func_4849()
func_4850 = relay.Function([], output)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4864 = relay.var("var_4864", dtype = "float32", shape = (5, 16, 10))#candidate|4864|(5, 16, 10)|var|float32
var_4865 = relay.var("var_4865", dtype = "float32", shape = (5, 16, 10))#candidate|4865|(5, 16, 10)|var|float32
bop_4866 = relay.floor_mod(var_4864.astype('float32'), relay.reshape(var_4865.astype('float32'), relay.shape_of(var_4864))) # shape=(5, 16, 10)
uop_4889 = relay.acosh(bop_4866.astype('float32')) # shape=(5, 16, 10)
output = uop_4889
output2 = uop_4889
func_4892 = relay.Function([var_4864,var_4865,], output)
mod['func_4892'] = func_4892
mod = relay.transform.InferType()(mod)
var_4893 = relay.var("var_4893", dtype = "float32", shape = (5, 16, 10))#candidate|4893|(5, 16, 10)|var|float32
var_4894 = relay.var("var_4894", dtype = "float32", shape = (5, 16, 10))#candidate|4894|(5, 16, 10)|var|float32
output = func_4892(var_4893,var_4894,)
func_4895 = relay.Function([var_4893,var_4894,], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_4901 = func_2554_call()
call_4902 = func_2554_call()
func_4522_call = mod.get_global_var('func_4522')
func_4525_call = mutated_mod.get_global_var('func_4525')
call_4907 = func_4522_call(relay.reshape(call_4901.astype('bool'), [13, 6, 15]))
call_4908 = func_4522_call(relay.reshape(call_4901.astype('bool'), [13, 6, 15]))
func_4618_call = mod.get_global_var('func_4618')
func_4620_call = mutated_mod.get_global_var('func_4620')
var_4912 = relay.var("var_4912", dtype = "float64", shape = (11, 2))#candidate|4912|(11, 2)|var|float64
call_4911 = relay.TupleGetItem(func_4618_call(relay.reshape(var_4912.astype('float64'), [22,])), 2)
call_4913 = relay.TupleGetItem(func_4620_call(relay.reshape(var_4912.astype('float64'), [22,])), 2)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_4915 = relay.TupleGetItem(func_3969_call(), 1)
call_4916 = relay.TupleGetItem(func_3971_call(), 1)
output = relay.Tuple([call_4901,call_4907,call_4911,var_4912,call_4915,])
output2 = relay.Tuple([call_4902,call_4908,call_4913,var_4912,call_4916,])
func_4946 = relay.Function([var_4912,], output)
mod['func_4946'] = func_4946
mod = relay.transform.InferType()(mod)
var_4947 = relay.var("var_4947", dtype = "float64", shape = (11, 2))#candidate|4947|(11, 2)|var|float64
output = func_4946(var_4947)
func_4948 = relay.Function([var_4947], output)
mutated_mod['func_4948'] = func_4948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4849_call = mod.get_global_var('func_4849')
func_4850_call = mutated_mod.get_global_var('func_4850')
call_4950 = relay.TupleGetItem(func_4849_call(), 1)
call_4951 = relay.TupleGetItem(func_4850_call(), 1)
output = relay.Tuple([call_4950,])
output2 = relay.Tuple([call_4951,])
func_4969 = relay.Function([], output)
mod['func_4969'] = func_4969
mod = relay.transform.InferType()(mod)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4969_call = mutated_mod.get_global_var('func_4969')
call_4970 = func_4969_call()
output = call_4970
func_4971 = relay.Function([], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4972 = relay.var("var_4972", dtype = "int32", shape = (4, 7, 12))#candidate|4972|(4, 7, 12)|var|int32
var_4973 = relay.var("var_4973", dtype = "int32", shape = (4, 7, 12))#candidate|4973|(4, 7, 12)|var|int32
bop_4974 = relay.greater_equal(var_4972.astype('bool'), relay.reshape(var_4973.astype('bool'), relay.shape_of(var_4972))) # shape=(4, 7, 12)
uop_4983 = relay.acosh(var_4973.astype('float32')) # shape=(4, 7, 12)
func_4091_call = mod.get_global_var('func_4091')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_4992 = func_4091_call()
call_4993 = func_4091_call()
func_3484_call = mod.get_global_var('func_3484')
func_3487_call = mutated_mod.get_global_var('func_3487')
var_5019 = relay.var("var_5019", dtype = "float64", shape = (2310,))#candidate|5019|(2310,)|var|float64
call_5018 = relay.TupleGetItem(func_3484_call(relay.reshape(var_5019.astype('float64'), [2310,])), 1)
call_5020 = relay.TupleGetItem(func_3487_call(relay.reshape(var_5019.astype('float64'), [2310,])), 1)
output = relay.Tuple([bop_4974,uop_4983,call_4992,call_5018,var_5019,])
output2 = relay.Tuple([bop_4974,uop_4983,call_4993,call_5020,var_5019,])
func_5025 = relay.Function([var_4972,var_4973,var_5019,], output)
mod['func_5025'] = func_5025
mod = relay.transform.InferType()(mod)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5025_call = mutated_mod.get_global_var('func_5025')
var_5027 = relay.var("var_5027", dtype = "int32", shape = (4, 7, 12))#candidate|5027|(4, 7, 12)|var|int32
var_5028 = relay.var("var_5028", dtype = "int32", shape = (4, 7, 12))#candidate|5028|(4, 7, 12)|var|int32
var_5029 = relay.var("var_5029", dtype = "float64", shape = (2310,))#candidate|5029|(2310,)|var|float64
call_5026 = func_5025_call(var_5027,var_5028,var_5029,)
output = call_5026
func_5030 = relay.Function([var_5027,var_5028,var_5029,], output)
mutated_mod['func_5030'] = func_5030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4091_call = mod.get_global_var('func_4091')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_5071 = func_4091_call()
call_5072 = func_4091_call()
output = relay.Tuple([call_5071,])
output2 = relay.Tuple([call_5072,])
func_5074 = relay.Function([], output)
mod['func_5074'] = func_5074
mod = relay.transform.InferType()(mod)
output = func_5074()
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5089 = relay.const([[[-3,-8],[-3,3],[2,-6],[-8,-10],[8,9],[2,-5]],[[10,-1],[1,1],[-4,3],[7,-3],[-3,-5],[-2,8]],[[-3,-9],[-5,-9],[8,-8],[-1,5],[9,3],[5,-4]],[[-6,1],[-3,5],[-8,-4],[-1,-5],[-3,10],[-3,9]],[[4,-9],[-7,7],[-3,-9],[-7,-6],[-1,7],[-3,2]],[[7,-10],[-8,4],[9,1],[8,7],[-8,10],[5,2]],[[6,9],[-2,-3],[-3,-1],[2,-3],[1,-6],[5,2]],[[2,-9],[-8,2],[-10,1],[-1,1],[9,-5],[9,1]],[[3,9],[-3,-1],[3,-3],[-3,-4],[7,5],[4,-2]],[[-9,-2],[-4,-8],[-2,-4],[10,-9],[7,5],[-8,-3]],[[8,3],[-5,3],[-9,-4],[-9,1],[-3,-4],[2,7]],[[7,7],[3,-10],[-9,3],[7,10],[10,-10],[-8,10]],[[-8,6],[2,-7],[-7,6],[-6,3],[1,-1],[-1,-4]]], dtype = "int8")#candidate|5089|(13, 6, 2)|const|int8
const_5090 = relay.const([[[6,6],[-3,-4],[6,-1],[-3,-6],[6,6],[-3,5]],[[-2,-9],[-10,2],[2,-3],[7,-3],[3,1],[-5,-7]],[[-6,-6],[-5,-6],[-6,3],[-5,1],[3,10],[3,10]],[[-9,4],[-9,4],[3,6],[-3,-8],[9,-6],[-6,-2]],[[2,8],[7,-5],[-10,8],[-9,7],[-4,-3],[7,-7]],[[-3,-9],[-9,10],[4,9],[8,6],[3,9],[10,-6]],[[-9,3],[-10,-2],[-1,-4],[3,4],[-5,-9],[-4,-3]],[[10,-9],[-8,-5],[5,4],[-6,10],[7,-10],[9,-8]],[[-6,7],[1,-7],[4,3],[2,-2],[6,4],[-2,3]],[[-8,2],[8,4],[-6,-4],[-3,-9],[-8,10],[10,8]],[[-7,10],[-5,-1],[-6,2],[2,8],[9,6],[-2,2]],[[7,9],[-3,5],[-9,9],[8,9],[-2,9],[-9,1]],[[-8,3],[-2,-9],[4,-8],[7,6],[10,10],[-7,3]]], dtype = "int8")#candidate|5090|(13, 6, 2)|const|int8
bop_5091 = relay.bitwise_or(const_5089.astype('int8'), relay.reshape(const_5090.astype('int8'), relay.shape_of(const_5089))) # shape=(13, 6, 2)
func_4892_call = mod.get_global_var('func_4892')
func_4895_call = mutated_mod.get_global_var('func_4895')
const_5098 = relay.const([[0.002292,-5.283767,-2.007028,5.358556,-3.914612,0.680624,-5.432520,-4.117666,0.038589,2.364161,4.680796,-1.747984,5.658934,-7.322373,-5.058229,5.360619,-4.346763,8.453391,-8.808903,-8.473816,-8.577003,4.556563,3.075619,4.625082,-0.141675,6.033150,-0.380196,-5.044254,-9.742656,1.159286,-4.472581,-1.259870,-4.226070,5.692341,-6.147957,-9.156368,8.066659,9.477969,5.365425,3.935351,3.750977,0.390981,-1.899913,-2.142555,-9.262790,-6.049838,-3.257540,-3.103055,-0.024360,7.946554,4.650639,0.811243,3.380116,1.776377,0.959275,4.657170,0.791752,7.870074,-6.220213,-0.586807,2.633051,3.047684,1.030969,9.333663,5.823315,5.701867,-5.848647,2.483088,4.623116,-1.579167,0.834527,-2.841114,7.283370,7.953803,4.862701,-3.676032,-9.022133,-8.764040,3.286504,7.123315,9.139124,6.134682,0.676870,3.505178,5.679942,-6.195974,2.653467,-2.097525,-2.390493,-8.681142,2.352444,-4.588239,-1.331397,-2.294855,-0.620004,-7.398871,-3.097601,1.284741,-1.158759,-6.958041,6.556693,6.984811,3.622036,9.042093,8.997270,9.063974,-5.366956,-8.064830,1.276837,6.549200,-5.592323,8.016952,3.330266,-9.494224,8.313366,-9.865331,0.827482,-3.806515,2.312744,-1.488915,0.613717,7.690386,-5.885294,5.193549,-8.971302,1.159500,-9.174168,1.323861,-2.534995,-7.732800,5.005384,-0.248674,-7.640504,3.106913,-2.322407,-1.787972,-0.751070,1.258289,9.485071,-0.717999,2.408013,-4.537117,-5.805594,-4.930456,9.573691,-5.700842,0.750775,-9.773382,6.440561,3.885336,3.744651,-7.864022,7.695809,-7.140040,-8.071448,8.050968,0.306104,7.721906,7.443951,-6.860924,-1.339751,3.246891,6.101276,3.072188,-6.434228,-4.609392,-0.227401,5.982905,-9.426535,-2.511988,-9.485476,9.803213,5.588971,7.340205,-7.993225,-8.018462,-6.242509,-1.148951,2.529516,4.733541,-5.584892,7.549477,-8.724175,-3.093453,1.695546,4.776902,-2.321436,7.888379,4.976553,0.348601,-5.152750,5.742368,1.518879,-2.803669,3.565825,-9.774933,7.845923,8.778268,-6.164285,-4.369396,-3.599631,3.636518,-6.277805,4.849371,7.816728,3.042310,-6.640594,0.712769,-7.853783,-1.394869,7.992075,5.103567,-2.717995,-8.090712,1.131330,-1.183393,-8.635645,-3.490330,-6.994716,-9.455047,-4.849953,0.540631,-1.503025,3.750614,-7.490790,7.807031,-0.835550,-8.117103,6.942903,-1.189711,-5.129244,-9.380904,-5.921178,5.039623,-5.685653,1.642231,-4.265465,4.017936,3.497754,3.487042,-2.912857,8.423895,-2.672258,-5.166495,-1.089046,-9.396670,3.329788,5.285720,8.822612,7.111397,-7.686052,0.058018,0.383750,-9.474263,2.501102,0.178282,-0.508632,-1.114040,-2.490033,-2.856625,5.922937,5.636968,3.228435,4.889868,-0.005119,0.223287,6.631369,7.301273,7.993506,6.874003,0.722087,6.655369,5.671161,-6.136522,-8.030873,-9.189577,9.975070,-9.760181,-1.228509,-1.726375,-3.416630,6.117195,-2.176816,8.606353,-8.314500,-1.017134,5.917852,5.584489,8.133729,-0.522217,-6.173792,-0.562669,2.095657,9.683111,-5.873303,-8.301382,5.778677,-9.435402,-2.280493,9.689646,-7.536144,-4.534031,9.858063,-1.106352,-0.441911,-9.511351,0.855017,-2.791235,-4.195701,-1.831529,8.916420,2.631996,-9.671104,-9.434099,6.666442,-7.380396,2.454354,1.667037,-9.103642,-6.791186,5.015209,-5.712665,9.242056,0.677736,-9.285629,-6.426441,-8.782749,-8.687323,7.943013,6.679408,-1.831238,-4.250712,-8.318450,5.970180,5.996321,0.336394,-4.925671,6.483394,7.180972,1.213464,-1.397653,0.908131,-0.687519,6.483546,1.789902,-0.408746,-1.299159,4.476380,9.269492,-8.637097,-7.169367,6.331670,9.513577,-1.622324,3.568337,-7.802343,8.058908,-0.880327,2.119597,5.406176,-4.634160,-9.769753,-8.575605,7.728864,-3.592302,-9.119453,-3.767131,-4.350420,-4.800053,-1.893170,-7.435937,0.029150,-8.421730,7.777261,-1.791116,-0.377024,9.974954,7.324527,9.694242,2.691691,-6.091664,-8.638629,3.502624,-0.932115,-3.462302,8.916511,1.635922,-3.431642,-8.942724,4.500952,9.432190,6.657887,2.683733,-7.236446,1.780900,-6.238061,-8.276056,-7.603890,9.425558,1.570329,4.798311,7.644358,-5.261941,2.819298,6.090035,2.749012,-4.806780,4.772476,7.991274,-5.852714,4.940500,9.820900,-1.132202,5.652961,-1.620616,1.829335,3.034635,5.400299,-8.312250,-9.954947,4.614852,-4.777018,-7.238545,4.059616,-8.456328,4.028906,2.370017,6.425158,-6.310538,1.165921,7.174655,8.323548,4.684519,-1.476596,2.597341,-1.229419,-3.448473,-7.615521,-2.549552,7.623028,-8.905496,3.512210,2.762316,3.463159,1.601664,-5.106578,5.513728,-5.005472,-2.925266,-7.168527,3.893347,6.211469,-9.110750,3.700653,8.269025,2.416601,6.838309,1.082151,7.091448,-9.121220,-7.124018,0.018956,-9.934682,-2.344488,0.851347,-3.173861,1.732792,-3.130825,-1.912353,2.556347,-1.922448,1.962201,6.902738,-3.366853,9.165038,4.820029,-7.318641,1.092480,-0.534666,8.664514,-3.013047,5.772233,1.308191,7.557229,7.655878,-8.236660,2.485471,6.031684,-9.735643,7.994514,-2.463254,6.880760,-2.092402,-8.069354,7.990574,-4.720873,8.033702,1.535904,2.767266,-3.822614,8.222389,8.707426,-4.237776,1.211202,-3.113370,-4.791899,-0.189072,6.652199,-1.555437,9.449506,-2.365317,-9.382660,4.449325,-4.520188,-7.121915,4.499381,0.251674,3.303625,7.204100,9.836226,5.200864,7.928191,3.009265,-9.128300,-3.302592,5.034393,1.842693,-7.838292,-5.986809,-3.053461,-4.774834,-3.451659,-6.420955,9.444895,0.786403,4.134823,6.710359,-3.868195,-0.403445,-2.092657,-2.625804,3.573032,7.689770,6.212579,-3.900844,2.325267,4.602979,3.371173,0.238747,-0.484525,7.311217,5.724466,-6.019763,9.112341,7.198246,6.050564,-4.883345,7.734834,-5.439899,1.350651,-7.188215,6.816034,-2.704528,8.316830,-1.630732,-9.473757,-9.890014,-4.078692,2.976537,5.807875,7.391850,8.118901,0.008166,-7.438801,8.446414,-6.469232,-7.209997,6.899930,-4.321669,-4.336609,-3.279961,-8.952577,-3.374615,5.855281,3.734452,-5.134406,1.653228,-6.021190,5.778296,8.079072,-8.918857,-7.321460,3.463877,2.428476,8.731684,-4.385128,6.392788,-6.671997,5.775411,7.512443,-2.038502,-6.245193,4.562479,-2.205304,0.538468,5.242192,0.343060,-6.559919,-3.732584,9.484152,3.187804,6.327180,-6.378120,-3.617172,-4.017240,-8.728153,-8.652486,-9.152241,8.310313,-5.127881,-2.368279,-3.372719,0.564569,4.395011,4.508091,3.948065,-1.812129,3.989193,-1.936470,6.755800,2.428195,1.846357,-2.932377,-3.254884,-1.252828,-2.112073,-2.661796,6.576642,7.027626,3.489729,9.854646,5.284568,-4.979631,-8.230786,-1.051324,8.972921,-5.354731,1.593254,-8.110382,-1.258387,-2.119626,-0.635599,-9.816821,3.107801,-6.958352,-2.697617,0.506586,6.084283,-1.798150,2.713447,5.243045,-6.467242,1.852251,-0.540861,6.743912,9.929493,5.322213,1.986836,1.031726,5.023928,5.243920,2.111211,7.810618,-3.955563,-8.374224,1.934217,-3.437224,7.321163,1.550736,-2.340221,1.157764,4.563190,9.360908,-4.161971,3.706411,-4.864772,3.387282,6.943998,-2.636280,-4.625461,3.338674,7.136119,1.820338,-8.237512,-3.313690,-8.953773,-1.812027,5.953524,-2.195408,-9.422196,1.008831,-9.654383,-3.789346,-3.353265,-9.128491,8.432489,-4.788542,6.064755,-0.932668,-8.464756,-1.752596,-4.548411,-3.692456,-6.802626,1.852051,-2.083117,2.559630,9.444564,3.321023,2.950565,-2.486827,4.186936,6.632193,-2.119926,-5.394210,-0.985479,3.504304,7.213114,-6.381547,-9.184004,-1.088528,0.655315,-7.591701,9.989252,-1.282285,4.042240,-0.647707,8.311283,5.324282,5.803278,-4.881365,0.721228,-0.340024,-8.524218,-7.257670,-0.780637,2.095857,8.621253,-2.417779,6.024762,0.380178,2.554777,-5.103573,9.181435,-3.736249,7.309658,-4.915923,9.418806,-1.782306,-6.650950,-3.069016,2.540531,-2.436565,5.158660,-2.654634,3.965514,4.379239,6.559565,3.321181,-3.888999,9.914111,-5.180669,-0.592118,-5.938048,1.777330,8.094043,6.620522,-5.281783,3.045332,-0.406168,-3.643419,5.539695,-3.371001,6.851234,9.593402,2.413865,-7.321869,8.437372,6.579783,8.379923,-2.428796,6.669463,5.482801,7.906596,2.143652,-5.389246,5.392513,-9.464069,-9.907873,8.514939]], dtype = "float32")#candidate|5098|(1, 800)|const|float32
call_5097 = func_4892_call(relay.reshape(const_5098.astype('float32'), [5, 16, 10]), relay.reshape(const_5098.astype('float32'), [5, 16, 10]), )
call_5099 = func_4892_call(relay.reshape(const_5098.astype('float32'), [5, 16, 10]), relay.reshape(const_5098.astype('float32'), [5, 16, 10]), )
uop_5100 = relay.atan(const_5090.astype('float32')) # shape=(13, 6, 2)
bop_5108 = relay.less_equal(uop_5100.astype('bool'), relay.reshape(bop_5091.astype('bool'), relay.shape_of(uop_5100))) # shape=(13, 6, 2)
bop_5113 = relay.logical_or(uop_5100.astype('bool'), relay.reshape(bop_5108.astype('bool'), relay.shape_of(uop_5100))) # shape=(13, 6, 2)
func_4084_call = mod.get_global_var('func_4084')
func_4086_call = mutated_mod.get_global_var('func_4086')
call_5116 = func_4084_call()
call_5117 = func_4084_call()
output = relay.Tuple([call_5097,const_5098,bop_5113,call_5116,])
output2 = relay.Tuple([call_5099,const_5098,bop_5113,call_5117,])
func_5124 = relay.Function([], output)
mod['func_5124'] = func_5124
mod = relay.transform.InferType()(mod)
output = func_5124()
func_5125 = relay.Function([], output)
mutated_mod['func_5125'] = func_5125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4091_call = mod.get_global_var('func_4091')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_5152 = func_4091_call()
call_5153 = func_4091_call()
func_2231_call = mod.get_global_var('func_2231')
func_2234_call = mutated_mod.get_global_var('func_2234')
var_5181 = relay.var("var_5181", dtype = "float64", shape = (72,))#candidate|5181|(72,)|var|float64
call_5180 = relay.TupleGetItem(func_2231_call(relay.reshape(var_5181.astype('float64'), [72,])), 4)
call_5182 = relay.TupleGetItem(func_2234_call(relay.reshape(var_5181.astype('float64'), [72,])), 4)
func_2525_call = mod.get_global_var('func_2525')
func_2529_call = mutated_mod.get_global_var('func_2529')
const_5188 = relay.const([[1.934571],[-6.003345],[-5.077429],[6.678739],[6.201570],[5.209091],[-5.005771],[7.332735],[-6.521090],[-4.251109],[-1.255381],[4.885814],[2.152337],[-6.274801],[3.473637],[-7.608617],[3.907767],[8.383603],[-1.542104],[-3.774918],[-5.458729],[-5.415159],[7.194002],[-2.405915],[0.611792],[-0.717645],[-7.365569],[1.815859],[-7.802760],[-7.663996],[-6.234989],[-3.808141],[7.955168],[9.882720],[-9.782388],[2.289538],[0.064743],[0.932949],[-6.580650],[-5.950414],[7.359895],[5.331430],[-8.584055],[0.131309],[-3.390863],[7.298853],[-1.241747],[7.000829],[9.883782],[4.535748],[-9.390881],[9.498419],[0.177481],[-4.943700],[-9.527781],[7.175219],[9.980817],[7.562349],[4.857375],[-6.400118],[-1.601738],[-1.338206],[2.353174],[7.172290],[-2.851711],[-8.672868],[0.943834],[3.368600],[-7.772671],[-7.905174],[-4.987494],[-9.824284],[-2.928160],[-2.587900],[-0.872478],[-4.101587],[-5.614611],[-5.906514],[-3.640967],[-1.085732],[-1.761253],[0.408323],[-3.044493],[-8.382130],[-4.185613],[6.967830],[2.017953],[-3.657148],[-5.939431],[3.674851],[4.531874],[7.154227],[9.932361],[3.960247],[6.981281],[-7.961504],[-9.663630],[-6.453243],[-3.432225],[8.427697],[2.781020],[-7.702620],[9.007083],[4.983871],[0.556604],[-7.833859],[-7.201468],[-7.724619],[0.597291],[5.886935],[2.132229],[3.966166],[3.589776],[8.482611],[-2.139038],[-2.524816],[9.912974],[-6.494069],[6.671615],[-4.331335],[8.228983],[5.067599],[7.413491],[9.475182],[5.194859],[8.108473],[-3.790635],[-2.850013],[-0.303696],[-1.695825],[-9.883626],[9.895734],[0.903692],[-1.645476],[6.751601],[1.299012],[-6.166381],[-9.351418],[-9.754890],[-1.471238],[-3.026649],[-9.374978],[-4.309174],[-8.681053],[-3.436635],[-6.995114],[1.351814],[3.442105],[1.852768],[1.853327],[-3.223710],[4.596150],[5.390896],[-9.625274],[3.753074],[1.357421],[4.915462],[8.097551],[-3.791630],[-7.149350],[-1.598200],[5.494423],[-6.376154],[-9.003191],[3.697908],[-7.309899],[-0.605742],[-9.737094],[7.792891],[1.376552],[7.881936],[-5.403015],[-7.743205],[7.704689],[3.152370],[-1.993093],[-1.861554],[9.461928],[-8.493642],[-8.605361],[9.266537],[9.054976],[3.272609],[1.757924],[1.606382],[6.950781],[0.017058],[2.764941],[9.647039],[-3.927276],[-3.502546],[-5.117769],[4.129773],[-9.550814],[9.263877],[2.330806],[9.366934],[-9.869248],[-0.466685],[-8.689954],[-5.692547],[-9.900910],[0.157589],[-9.462648],[-7.690365],[-7.179685],[7.738588],[1.739055],[-2.875466],[-1.189833],[1.736000],[8.419062],[-0.444101],[3.745699],[8.813068],[-9.925119],[8.270889],[-9.676181],[-5.543582],[-5.685103],[1.928066],[-0.432404],[3.003076],[9.360356],[8.276233],[-6.874294],[0.327501],[3.506479],[5.275704],[-5.472922],[-9.565969],[6.201828],[-6.731821],[8.502202],[-8.310564],[0.275685],[-5.046735],[-9.689104],[-6.173114],[6.866854],[4.092560],[-3.317018],[7.365642],[-7.058385],[-1.988933],[-2.488620],[-9.001608],[-7.244771],[0.135277],[4.266314],[0.843355],[9.547150],[-1.502189],[-9.131735],[-0.236056],[-7.491303],[2.199473],[-4.467927],[1.214775],[2.843526],[-8.628991],[-1.561659],[3.928867],[6.090758],[-9.158274],[-7.322641],[7.161709],[4.844728],[6.027983],[-4.778320],[-5.891284],[5.753796],[9.326728],[-1.609136],[9.616088],[-3.287271],[6.060955],[-2.657388],[-3.158748],[3.645517],[-4.545629],[-4.964481],[-8.823646],[-7.481498],[2.922604],[6.020506],[0.870555],[2.840443],[-1.012053],[2.536669],[-8.336536],[8.636388],[4.933722],[-1.955790],[4.207982],[-5.049503],[-6.160657],[-4.536785],[3.818459],[-7.142775],[0.445160],[-3.970263],[2.367430],[-8.227906],[5.432261],[8.137199],[9.080022],[-9.783496],[-4.266041],[-2.144344],[-3.143422],[3.604835],[-9.079823],[3.143483],[-7.365875],[-7.461671],[0.875888],[8.581351],[6.141270],[0.439239],[9.618213],[-8.495746],[0.945337],[6.072233],[7.970684],[-5.409327],[2.811549],[-4.512859],[2.689137],[4.071424],[-1.140211],[0.683831],[-2.028419],[-0.088295],[-3.623752],[-1.486792],[-2.727544],[5.485910],[3.482162],[1.192286],[-9.548939],[9.643699],[1.719522],[6.035155],[7.449530],[1.214888],[1.176665],[-3.426668],[4.939557],[2.124171],[-2.008355],[6.637143],[-0.201107],[-6.698760],[-2.689938],[-9.817018],[6.074936],[-0.128405],[-5.531194],[3.240096],[-0.186229],[8.309143],[-1.893802],[1.141549],[-0.493739],[5.004620],[-0.494159],[2.611609],[4.650752],[1.050747],[0.926455],[1.323105],[3.676760],[2.371013],[6.072725],[4.700326],[0.579534],[9.333677],[-7.255620],[2.243305],[3.830708],[2.936850],[-8.561926],[-5.160990],[4.272059],[3.794788],[-9.721200],[9.529659],[-0.095395],[5.653455],[-0.517549],[6.971994],[5.501662],[9.790471],[2.438393],[-6.543228],[9.422970],[-5.673809],[-5.339999],[-1.714538],[-2.321686],[-4.270110],[-3.179546],[-4.322242],[-6.317632],[-0.615154],[8.086791],[8.593360],[3.085492],[-5.036121],[3.426304],[7.900447],[8.422330],[-6.738132],[4.697702],[6.530743],[-1.983489],[-2.874313],[7.779492],[2.675760],[-4.163518],[-0.179221],[7.485353],[-4.708931],[-5.783142],[1.890189],[4.163250],[3.655214],[4.426718],[-1.780326],[-4.879520],[-8.169914],[0.373120],[2.483065],[-3.430912],[-6.128248],[-9.183694],[-0.238881],[-8.850977],[-9.699973],[6.391971],[3.570483],[4.973629],[2.969324],[-2.859794],[5.933042],[1.120035],[-0.653865],[-5.644164],[-6.148760],[-6.959826],[8.195357],[2.770953],[0.940529],[-4.637987],[6.504657],[7.476100],[-5.190457],[2.141600],[6.775586],[1.478653],[-1.943370],[7.772902],[1.869612],[-7.299458],[-1.869678],[-0.023875],[6.204327],[1.327219],[-3.996199],[5.631703],[0.297997],[-3.267069],[9.930036],[-8.921263],[8.489603],[8.391225],[-3.655973],[-6.627136],[-7.809571],[9.425802],[-2.536857],[-3.644406],[-0.067420],[-2.361543],[1.221409],[-7.992220],[-5.892172],[-0.372188],[-4.236166],[3.704201],[-4.173216],[6.954461],[1.845220],[-2.318108],[-8.367713],[-5.204191],[4.288968],[-2.842059],[-0.252138],[-9.234295],[-9.715843],[-6.296508],[7.486408],[-9.033022],[8.620212],[-7.258708],[-7.149465],[8.120946],[7.170723],[7.403356],[9.798489],[-9.391265],[-3.848752],[-7.707217],[8.328126],[-3.419467],[8.474406],[3.471978],[8.191746],[-3.938482],[7.356523],[-0.279855],[-0.585504],[2.818024],[1.187352],[7.461664],[-8.482090],[-5.590983],[3.946660],[4.518240],[9.577807],[-7.590427],[-2.751052],[-8.319039],[-7.466501],[0.845306],[4.221376],[0.326831],[7.156596]], dtype = "float32")#candidate|5188|(540, 1)|const|float32
call_5187 = func_2525_call(relay.reshape(const_5188.astype('float32'), [9, 15, 4]), relay.reshape(const_5188.astype('float32'), [9, 15, 4]), )
call_5189 = func_2525_call(relay.reshape(const_5188.astype('float32'), [9, 15, 4]), relay.reshape(const_5188.astype('float32'), [9, 15, 4]), )
func_4631_call = mod.get_global_var('func_4631')
func_4634_call = mutated_mod.get_global_var('func_4634')
const_5192 = relay.const([7,6,1,-8,-7,-9,-4,-3,-6,-10,-9,4,6,3,-1,-7,-4,-4,-2,-10,-7,-8,-1,-1,-3,7,4,6,-1,5,1,-10,-5,-4,9,4,10,-9,4,9,1,-9,-7,4,6,-2,1,4,8,-1,-9,-3,10,1,3,3,-5,-8,-9,-2,4,-2,8,1,3,3,10,2,-9,3,-6,-6,9,5,8,3,-3,-7,2,-9,9,-8,7,6,-6,9,-5,4,1,-4,-9,1,3,-5,5,1,-5,2,10,1,10,9,-7,1,-2,-8,-1,5,8,-10,-5,8,1,-3,9,10,-3,5,2,7,1,7,4,-8,1,7,1,5], dtype = "int64")#candidate|5192|(128,)|const|int64
call_5191 = relay.TupleGetItem(func_4631_call(relay.reshape(const_5192.astype('int64'), [2, 16, 4])), 0)
call_5193 = relay.TupleGetItem(func_4634_call(relay.reshape(const_5192.astype('int64'), [2, 16, 4])), 0)
func_5124_call = mod.get_global_var('func_5124')
func_5125_call = mutated_mod.get_global_var('func_5125')
call_5201 = relay.TupleGetItem(func_5124_call(), 2)
call_5202 = relay.TupleGetItem(func_5125_call(), 2)
uop_5204 = relay.atan(var_5181.astype('float64')) # shape=(72,)
output = relay.Tuple([call_5152,call_5180,call_5187,const_5188,call_5191,const_5192,call_5201,uop_5204,])
output2 = relay.Tuple([call_5153,call_5182,call_5189,const_5188,call_5193,const_5192,call_5202,uop_5204,])
func_5206 = relay.Function([var_5181,], output)
mod['func_5206'] = func_5206
mod = relay.transform.InferType()(mod)
var_5207 = relay.var("var_5207", dtype = "float64", shape = (72,))#candidate|5207|(72,)|var|float64
output = func_5206(var_5207)
func_5208 = relay.Function([var_5207], output)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_5221 = func_3351_call()
call_5222 = func_3351_call()
output = relay.Tuple([call_5221,])
output2 = relay.Tuple([call_5222,])
func_5231 = relay.Function([], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
output = func_5231()
func_5232 = relay.Function([], output)
mutated_mod['func_5232'] = func_5232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_5298 = func_3351_call()
call_5299 = func_3351_call()
func_3229_call = mod.get_global_var('func_3229')
func_3232_call = mutated_mod.get_global_var('func_3232')
const_5315 = relay.const([9.696979,7.286849,-8.804461,-7.307776,2.750734,5.958616,7.249005,5.389616,4.786647,-4.704640,3.694659,-5.595922,9.668658,-6.216153,-9.833269,2.692759,-5.476340,0.645115,8.057015,5.666155,-7.972096,-9.584154], dtype = "float64")#candidate|5315|(22,)|const|float64
call_5314 = relay.TupleGetItem(func_3229_call(relay.reshape(const_5315.astype('float64'), [1, 11, 2])), 1)
call_5316 = relay.TupleGetItem(func_3232_call(relay.reshape(const_5315.astype('float64'), [1, 11, 2])), 1)
bop_5325 = relay.left_shift(call_5314.astype('uint32'), relay.reshape(const_5315.astype('uint32'), relay.shape_of(call_5314))) # shape=(1, 11, 2)
bop_5328 = relay.left_shift(call_5316.astype('uint32'), relay.reshape(const_5315.astype('uint32'), relay.shape_of(call_5316))) # shape=(1, 11, 2)
output = relay.Tuple([call_5298,bop_5325,])
output2 = relay.Tuple([call_5299,bop_5328,])
func_5330 = relay.Function([], output)
mod['func_5330'] = func_5330
mod = relay.transform.InferType()(mod)
mutated_mod['func_5330'] = func_5330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5330_call = mutated_mod.get_global_var('func_5330')
call_5331 = func_5330_call()
output = call_5331
func_5332 = relay.Function([], output)
mutated_mod['func_5332'] = func_5332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_5366 = relay.TupleGetItem(func_3381_call(), 0)
call_5367 = relay.TupleGetItem(func_3383_call(), 0)
uop_5386 = relay.exp(call_5366.astype('float32')) # shape=(13, 6, 15)
uop_5388 = relay.exp(call_5367.astype('float32')) # shape=(13, 6, 15)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_5391 = relay.TupleGetItem(func_3751_call(), 0)
call_5392 = relay.TupleGetItem(func_3752_call(), 0)
func_2391_call = mod.get_global_var('func_2391')
func_2394_call = mutated_mod.get_global_var('func_2394')
const_5394 = relay.const([-4.287604,7.120791,-7.690087,8.116715,6.064229,-7.285406,9.823444,-0.158224,5.464040,7.625845,8.939850,6.833995,-9.846901,9.190730,3.313858,5.084011,3.032746,8.549945,-6.542087,2.432981,0.897465,-5.202952,-7.447299,-2.275664,4.901717,-6.456984,2.366122,-2.595227,-4.730831,4.179574,9.672195,0.171273,2.769776,-8.152167,1.130320,1.084643,4.668963,-8.399657,9.321818,2.000949,-2.132619,7.973402,8.476497,2.890311,-7.537390,6.678163,0.549845,-5.500989,2.418296,-1.171562,-6.982178,0.143147,6.877772,5.488377,-0.563458,5.694472,8.514263,5.036263,2.714112,-9.941570,8.761024,3.209706,-2.813676,-1.640393,-2.857186,0.203413,-2.159824,-2.929729,-7.875132,-0.169013,-7.093130,5.195332,6.416520,-0.358966,8.345045,-7.366047,-4.730041,-9.111079,3.016161,-9.966450,9.099568,-1.466224,-0.564727,-5.662158,1.905279,-4.976154,-2.421528,9.458293,-6.454311,-3.022458,-1.814568], dtype = "float32")#candidate|5394|(91,)|const|float32
call_5393 = relay.TupleGetItem(func_2391_call(relay.reshape(const_5394.astype('float32'), [91,])), 2)
call_5395 = relay.TupleGetItem(func_2394_call(relay.reshape(const_5394.astype('float32'), [91,])), 2)
func_4669_call = mod.get_global_var('func_4669')
func_4672_call = mutated_mod.get_global_var('func_4672')
const_5400 = relay.const([[-2,-3],[3,5],[-1,-4],[-1,-4],[4,-4],[4,-8],[-1,4],[2,-8],[-2,9],[2,-3],[-10,-7],[-7,9],[-6,-10],[7,7],[-8,-3],[-8,5],[1,-5],[9,-9],[5,9],[-7,-3],[-3,5],[3,-5],[-6,3],[3,-6],[-3,9],[-1,10],[4,-9],[-10,-6],[-5,3],[7,-1],[10,9],[-4,-8],[-5,9],[-5,3],[-10,2],[5,3],[3,10],[-7,2],[-6,1],[-5,-7],[7,-6],[4,-4],[4,-4],[-6,-8],[6,8],[10,-1],[1,8],[-4,-6],[-10,-5],[-4,1],[-7,-6],[2,9],[-4,1],[6,-2],[-7,-3],[-5,2],[-3,-2],[-8,-6],[7,-5],[6,9],[10,5],[4,-3],[10,-2],[6,10],[10,8],[-6,2],[-4,4],[-2,1],[-5,-8],[-6,1],[-10,10],[-6,-7],[4,-6],[-8,6],[7,6],[-5,9],[-5,-10],[-1,-6],[-4,7],[7,-8],[-7,-3],[-5,1],[-9,9],[-5,-5],[-9,-1],[5,-9],[2,-7],[-10,-9],[-9,4],[-9,4],[-3,3],[3,-8],[2,1],[7,-4],[-8,5],[6,-4],[6,9],[-6,-5],[-7,-7],[-6,-5],[6,-6],[7,-9],[3,-2],[-10,5],[6,-1],[-8,1],[3,-8],[-5,-9],[-10,-2],[-5,4],[9,-6],[-2,-2],[5,-1],[8,-8],[2,-1],[-10,9],[-5,9],[-4,-9],[-6,-1],[-6,-9],[6,5],[5,-8],[1,5],[-10,-1],[7,-9],[10,-5],[3,-7],[9,-1],[7,1],[-7,-1],[10,10],[-10,7],[1,-10],[3,9],[9,4],[-3,5],[9,4],[-6,-6],[10,-6],[-9,10],[8,10],[5,-7],[5,-4],[-6,-10],[6,-3],[-8,-9],[-7,1],[-8,5],[-10,9],[-4,2],[8,8],[5,-9],[2,3],[4,-10],[-7,-8],[-1,2],[10,7],[-8,3],[-4,-1],[3,-2],[-3,6],[-7,10],[-7,-10],[3,-2],[-3,-7],[9,-6],[5,4],[7,-2],[2,-10],[4,4],[8,2],[4,-2],[-4,-8],[1,7],[-1,-3],[-6,-1],[-2,-7],[10,-10],[3,-10],[7,-4],[3,3],[5,-9],[1,-7],[6,5],[-8,4],[6,-8],[7,8],[10,-4],[-5,6],[-9,8],[-8,8],[2,9],[10,10],[7,-4],[6,8],[-3,8],[1,8],[10,9],[1,-1],[3,-5],[-3,-6],[2,7],[-2,-5],[-7,-5],[-8,6],[10,-5],[5,6],[-8,-10],[5,-3],[7,-7],[5,8],[-5,-8],[-9,-1],[2,-2],[4,4],[8,-4],[1,1],[7,1],[-2,-4],[1,1],[6,10],[10,4],[1,-7],[-3,3],[-8,4],[-4,9],[-3,4],[5,-5],[-5,-1],[-7,10],[-5,9],[8,2],[6,-1],[-10,-6],[-3,8],[-4,-1],[7,8],[6,-4],[-5,-9],[-2,-8],[6,9],[-2,-10],[7,-5],[10,-2],[5,-3],[-7,2],[-9,-6],[-3,-1],[8,6],[7,6],[-5,-7],[-4,-1],[8,-10],[10,-9],[-4,-2],[-9,-7],[-5,6],[-10,-7],[3,9],[2,6],[4,9],[1,-5],[-2,3],[1,10],[-2,9],[-1,6],[-10,-1],[5,-6],[-7,-2],[-2,-5],[-3,-6],[8,-10],[4,-2],[-6,9],[3,10],[-1,-6],[-9,7],[7,-6],[10,-7],[-9,9],[-8,10],[-9,-10],[3,2],[-6,2],[-1,9],[-1,-10],[-8,-7],[6,2],[-7,6],[3,10],[-7,10],[3,1],[1,1],[6,2],[8,2],[-5,8],[9,10],[1,10],[4,-3],[1,2]], dtype = "uint32")#candidate|5400|(300, 2)|const|uint32
call_5399 = func_4669_call(relay.reshape(const_5400.astype('uint32'), [8, 5, 15]), relay.reshape(const_5400.astype('uint32'), [8, 5, 15]), )
call_5401 = func_4669_call(relay.reshape(const_5400.astype('uint32'), [8, 5, 15]), relay.reshape(const_5400.astype('uint32'), [8, 5, 15]), )
func_635_call = mod.get_global_var('func_635')
func_638_call = mutated_mod.get_global_var('func_638')
var_5417 = relay.var("var_5417", dtype = "float64", shape = (72,))#candidate|5417|(72,)|var|float64
call_5416 = relay.TupleGetItem(func_635_call(relay.reshape(var_5417.astype('float64'), [6, 2, 6])), 5)
call_5418 = relay.TupleGetItem(func_638_call(relay.reshape(var_5417.astype('float64'), [6, 2, 6])), 5)
output = relay.Tuple([uop_5386,call_5391,call_5393,const_5394,call_5399,const_5400,call_5416,var_5417,])
output2 = relay.Tuple([uop_5388,call_5392,call_5395,const_5394,call_5401,const_5400,call_5418,var_5417,])
func_5431 = relay.Function([var_5417,], output)
mod['func_5431'] = func_5431
mod = relay.transform.InferType()(mod)
var_5432 = relay.var("var_5432", dtype = "float64", shape = (72,))#candidate|5432|(72,)|var|float64
output = func_5431(var_5432)
func_5433 = relay.Function([var_5432], output)
mutated_mod['func_5433'] = func_5433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_5456 = func_3351_call()
call_5457 = func_3351_call()
output = relay.Tuple([call_5456,])
output2 = relay.Tuple([call_5457,])
func_5471 = relay.Function([], output)
mod['func_5471'] = func_5471
mod = relay.transform.InferType()(mod)
mutated_mod['func_5471'] = func_5471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5471_call = mutated_mod.get_global_var('func_5471')
call_5472 = func_5471_call()
output = call_5472
func_5473 = relay.Function([], output)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2554_call = mod.get_global_var('func_2554')
func_2556_call = mutated_mod.get_global_var('func_2556')
call_5476 = func_2554_call()
call_5477 = func_2554_call()
output = relay.Tuple([call_5476,])
output2 = relay.Tuple([call_5477,])
func_5478 = relay.Function([], output)
mod['func_5478'] = func_5478
mod = relay.transform.InferType()(mod)
mutated_mod['func_5478'] = func_5478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5478_call = mutated_mod.get_global_var('func_5478')
call_5479 = func_5478_call()
output = call_5479
func_5480 = relay.Function([], output)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4533_call = mutated_mod.get_global_var('func_4533')
call_5493 = func_4531_call()
call_5494 = func_4531_call()
output = relay.Tuple([call_5493,])
output2 = relay.Tuple([call_5494,])
func_5519 = relay.Function([], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5520 = func_5519_call()
output = call_5520
func_5521 = relay.Function([], output)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5330_call = mod.get_global_var('func_5330')
func_5332_call = mutated_mod.get_global_var('func_5332')
call_5588 = relay.TupleGetItem(func_5330_call(), 1)
call_5589 = relay.TupleGetItem(func_5332_call(), 1)
uop_5590 = relay.asin(call_5588.astype('float64')) # shape=(1, 11, 2)
uop_5592 = relay.asin(call_5589.astype('float64')) # shape=(1, 11, 2)
uop_5606 = relay.exp(uop_5590.astype('float32')) # shape=(1, 11, 2)
uop_5608 = relay.exp(uop_5592.astype('float32')) # shape=(1, 11, 2)
output = relay.Tuple([uop_5606,])
output2 = relay.Tuple([uop_5608,])
func_5620 = relay.Function([], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
output = func_5620()
func_5621 = relay.Function([], output)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2933_call = mod.get_global_var('func_2933')
func_2934_call = mutated_mod.get_global_var('func_2934')
call_5634 = relay.TupleGetItem(func_2933_call(), 0)
call_5635 = relay.TupleGetItem(func_2934_call(), 0)
func_1630_call = mod.get_global_var('func_1630')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_5644 = relay.var("var_5644", dtype = "float32", shape = (91,))#candidate|5644|(91,)|var|float32
call_5643 = relay.TupleGetItem(func_1630_call(relay.reshape(var_5644.astype('float32'), [7, 1, 13])), 0)
call_5645 = relay.TupleGetItem(func_1632_call(relay.reshape(var_5644.astype('float32'), [7, 1, 13])), 0)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_5659 = relay.TupleGetItem(func_3381_call(), 1)
call_5660 = relay.TupleGetItem(func_3383_call(), 1)
uop_5667 = relay.asin(var_5644.astype('float64')) # shape=(91,)
output = relay.Tuple([call_5634,call_5643,call_5659,uop_5667,])
output2 = relay.Tuple([call_5635,call_5645,call_5660,uop_5667,])
func_5671 = relay.Function([var_5644,], output)
mod['func_5671'] = func_5671
mod = relay.transform.InferType()(mod)
var_5672 = relay.var("var_5672", dtype = "float32", shape = (91,))#candidate|5672|(91,)|var|float32
output = func_5671(var_5672)
func_5673 = relay.Function([var_5672], output)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3969_call = mod.get_global_var('func_3969')
func_3971_call = mutated_mod.get_global_var('func_3971')
call_5675 = relay.TupleGetItem(func_3969_call(), 2)
call_5676 = relay.TupleGetItem(func_3971_call(), 2)
var_5682 = relay.var("var_5682", dtype = "float64", shape = (22,))#candidate|5682|(22,)|var|float64
bop_5683 = relay.subtract(call_5675.astype('float32'), relay.reshape(var_5682.astype('float32'), relay.shape_of(call_5675))) # shape=(22,)
bop_5686 = relay.subtract(call_5676.astype('float32'), relay.reshape(var_5682.astype('float32'), relay.shape_of(call_5676))) # shape=(22,)
bop_5694 = relay.mod(call_5675.astype('float64'), relay.reshape(var_5682.astype('float64'), relay.shape_of(call_5675))) # shape=(22,)
bop_5697 = relay.mod(call_5676.astype('float64'), relay.reshape(var_5682.astype('float64'), relay.shape_of(call_5676))) # shape=(22,)
output = relay.Tuple([bop_5683,bop_5694,])
output2 = relay.Tuple([bop_5686,bop_5697,])
func_5701 = relay.Function([var_5682,], output)
mod['func_5701'] = func_5701
mod = relay.transform.InferType()(mod)
mutated_mod['func_5701'] = func_5701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5702 = relay.var("var_5702", dtype = "float64", shape = (22,))#candidate|5702|(22,)|var|float64
func_5701_call = mutated_mod.get_global_var('func_5701')
call_5703 = func_5701_call(var_5702)
output = call_5703
func_5704 = relay.Function([var_5702], output)
mutated_mod['func_5704'] = func_5704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2939_call = mod.get_global_var('func_2939')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5711 = func_2939_call()
call_5712 = func_2939_call()
output = relay.Tuple([call_5711,])
output2 = relay.Tuple([call_5712,])
func_5719 = relay.Function([], output)
mod['func_5719'] = func_5719
mod = relay.transform.InferType()(mod)
mutated_mod['func_5719'] = func_5719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5719_call = mutated_mod.get_global_var('func_5719')
call_5720 = func_5719_call()
output = call_5720
func_5721 = relay.Function([], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4014_call = mod.get_global_var('func_4014')
func_4016_call = mutated_mod.get_global_var('func_4016')
call_5881 = relay.TupleGetItem(func_4014_call(), 0)
call_5882 = relay.TupleGetItem(func_4016_call(), 0)
uop_5891 = relay.erf(call_5881.astype('float64')) # shape=(1, 8, 6)
uop_5893 = relay.erf(call_5882.astype('float64')) # shape=(1, 8, 6)
var_5901 = relay.var("var_5901", dtype = "float64", shape = (15, 8, 6))#candidate|5901|(15, 8, 6)|var|float64
bop_5902 = relay.logical_xor(uop_5891.astype('uint16'), var_5901.astype('uint16')) # shape=(15, 8, 6)
bop_5905 = relay.logical_xor(uop_5893.astype('uint16'), var_5901.astype('uint16')) # shape=(15, 8, 6)
bop_5914 = relay.greater(bop_5902.astype('bool'), relay.reshape(var_5901.astype('bool'), relay.shape_of(bop_5902))) # shape=(15, 8, 6)
bop_5917 = relay.greater(bop_5905.astype('bool'), relay.reshape(var_5901.astype('bool'), relay.shape_of(bop_5905))) # shape=(15, 8, 6)
output = relay.Tuple([bop_5914,])
output2 = relay.Tuple([bop_5917,])
func_5927 = relay.Function([var_5901,], output)
mod['func_5927'] = func_5927
mod = relay.transform.InferType()(mod)
var_5928 = relay.var("var_5928", dtype = "float64", shape = (15, 8, 6))#candidate|5928|(15, 8, 6)|var|float64
output = func_5927(var_5928)
func_5929 = relay.Function([var_5928], output)
mutated_mod['func_5929'] = func_5929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3918_call = mod.get_global_var('func_3918')
func_3919_call = mutated_mod.get_global_var('func_3919')
call_5956 = func_3918_call()
call_5957 = func_3918_call()
func_4522_call = mod.get_global_var('func_4522')
func_4525_call = mutated_mod.get_global_var('func_4525')
call_5964 = func_4522_call(relay.reshape(call_5956.astype('bool'), [13, 6, 15]))
call_5965 = func_4522_call(relay.reshape(call_5956.astype('bool'), [13, 6, 15]))
output = relay.Tuple([call_5956,call_5964,])
output2 = relay.Tuple([call_5957,call_5965,])
func_5967 = relay.Function([], output)
mod['func_5967'] = func_5967
mod = relay.transform.InferType()(mod)
mutated_mod['func_5967'] = func_5967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5967_call = mutated_mod.get_global_var('func_5967')
call_5968 = func_5967_call()
output = call_5968
func_5969 = relay.Function([], output)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mod.get_global_var('func_3174')
func_3176_call = mutated_mod.get_global_var('func_3176')
call_5982 = relay.TupleGetItem(func_3174_call(), 0)
call_5983 = relay.TupleGetItem(func_3176_call(), 0)
func_5074_call = mod.get_global_var('func_5074')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_5984 = relay.TupleGetItem(func_5074_call(), 0)
call_5985 = relay.TupleGetItem(func_5075_call(), 0)
uop_6002 = relay.sqrt(call_5984.astype('float32')) # shape=(13, 6, 15)
uop_6004 = relay.sqrt(call_5985.astype('float32')) # shape=(13, 6, 15)
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
const_6033 = relay.const([2.295339,3.015944,6.677380,-6.087518,0.954193,8.387369,0.148078,-2.387779,-6.821924,-8.887066,-2.257979,-6.384322,-1.796424,3.777012,-4.559357,0.540644,5.476292,-9.380967,-6.489481,3.624725,7.956500,-4.868460,2.257487,-9.046616,-4.522795,-2.223654,-4.407155,-9.061535,-7.667175,-6.596823,-7.271430,-6.998589,-7.268610,-4.293713,-0.077917,-2.851667,-6.048096,-0.172980,9.997979,9.357383,8.258297,-9.920338,-6.020560,4.008912,-6.546546,-1.289908,2.133067,-7.597237,6.147265,-6.087273,-7.813786,2.245165,-3.664172,-9.000119,-7.387568,2.731508,1.297300,-2.029339,-8.200282,6.984627,7.471542,5.611747,-7.182147], dtype = "float32")#candidate|6033|(63,)|const|float32
call_6032 = relay.TupleGetItem(func_2725_call(relay.reshape(const_6033.astype('float32'), [63,])), 0)
call_6034 = relay.TupleGetItem(func_2727_call(relay.reshape(const_6033.astype('float32'), [63,])), 0)
output = relay.Tuple([call_5982,uop_6002,call_6032,const_6033,])
output2 = relay.Tuple([call_5983,uop_6004,call_6034,const_6033,])
func_6042 = relay.Function([], output)
mod['func_6042'] = func_6042
mod = relay.transform.InferType()(mod)
mutated_mod['func_6042'] = func_6042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6042_call = mutated_mod.get_global_var('func_6042')
call_6043 = func_6042_call()
output = call_6043
func_6044 = relay.Function([], output)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5519_call = mod.get_global_var('func_5519')
func_5521_call = mutated_mod.get_global_var('func_5521')
call_6078 = relay.TupleGetItem(func_5519_call(), 0)
call_6079 = relay.TupleGetItem(func_5521_call(), 0)
output = relay.Tuple([call_6078,])
output2 = relay.Tuple([call_6079,])
func_6089 = relay.Function([], output)
mod['func_6089'] = func_6089
mod = relay.transform.InferType()(mod)
mutated_mod['func_6089'] = func_6089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6089_call = mutated_mod.get_global_var('func_6089')
call_6090 = func_6089_call()
output = call_6090
func_6091 = relay.Function([], output)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mod.get_global_var('func_5620')
func_5621_call = mutated_mod.get_global_var('func_5621')
call_6176 = relay.TupleGetItem(func_5620_call(), 0)
call_6177 = relay.TupleGetItem(func_5621_call(), 0)
output = call_6176
output2 = call_6177
func_6186 = relay.Function([], output)
mod['func_6186'] = func_6186
mod = relay.transform.InferType()(mod)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mutated_mod.get_global_var('func_6186')
call_6187 = func_6186_call()
output = call_6187
func_6188 = relay.Function([], output)
mutated_mod['func_6188'] = func_6188
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6193 = relay.var("var_6193", dtype = "uint16", shape = (16, 1, 7))#candidate|6193|(16, 1, 7)|var|uint16
const_6194 = relay.const([[[-3,-7,9,-7,10,7,-7],[-8,8,2,-7,-4,-2,-8]],[[-3,8,-1,-10,-4,1,1],[4,5,-4,-3,8,-9,-4]],[[-9,5,-5,9,-7,4,5],[7,-5,3,2,-2,-6,-4]],[[-3,6,-3,5,2,-1,4],[-2,1,5,10,-4,7,-7]],[[8,-8,4,-2,-4,2,-2],[7,-8,-5,8,-3,-9,-1]],[[4,-1,-3,-3,4,-1,-4],[-8,-6,4,-6,3,2,4]],[[-4,10,-5,2,10,5,3],[-4,-1,-5,9,-2,-10,-1]],[[-10,4,10,-2,4,6,-1],[10,9,3,8,6,9,2]],[[-3,-2,8,7,-9,-4,4],[1,-1,9,6,-9,-10,-2]],[[2,-6,7,-10,-3,4,7],[-9,7,8,8,7,9,-8]],[[10,-6,6,-1,-2,-7,-9],[1,8,-9,-7,-7,4,10]],[[-2,2,10,8,2,8,-10],[2,-7,-5,2,-2,-1,-7]],[[2,6,-8,8,8,4,3],[7,7,3,2,-9,-2,-7]],[[-1,-7,2,9,-4,7,-10],[2,-3,7,8,-5,7,-7]],[[6,-3,-8,2,-4,1,-7],[-7,-1,10,-8,5,-8,8]],[[-6,-6,1,-1,-10,1,5],[1,2,9,-9,-7,-8,4]]], dtype = "uint16")#candidate|6194|(16, 2, 7)|const|uint16
bop_6195 = relay.right_shift(var_6193.astype('uint16'), const_6194.astype('uint16')) # shape=(16, 2, 7)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
const_6208 = relay.const([-4.420973,1.838821,-3.672404,2.819406,7.823540,6.991895,-0.654445,0.952829,-6.642505,-8.437564,6.164110,-9.143997,9.585532,-9.541056,-5.470167,7.558277,7.430730,-8.309003,5.485987,9.031415,9.174581,-9.413136,-8.989777,5.853306,1.248178,5.109812,6.202732,-3.526696,-7.495275,8.445678,-9.965163,7.356354,7.957616,6.289487,5.808964,7.035624,9.090962,-1.219643,-0.277163,5.409502,0.735204,-1.827064,-2.860162,9.727222,6.905333,5.719698,1.085155,-9.930585,2.967554,-3.722088,-9.992331,0.617505,2.435646,7.947398,1.987411,-5.012194,6.074330,5.866767,0.807307,-4.382529,8.812491,6.433279,-4.579639,1.881865,6.035335,-7.549838,-6.072173,-9.801613,-2.524206,2.752839,-4.650940,-5.599114,-6.055904,3.595651,8.062301,3.496181,3.382112,6.379031,-2.581300,6.274323,-2.974524,4.898533,-8.381166,3.826961,5.971052,-0.183593,-6.758511,3.899814,6.817076,-2.844256,9.190161,8.725226,-5.821385,-4.949369,-1.761067,0.404645,-4.520657,0.557018,-6.671270,4.283383,6.801434,9.561471,-6.384575,-0.647369,9.618708,-4.998496,-8.856063,9.786166,4.342028,9.968920,-5.100622,-3.031171,1.562162,2.548966,-5.676624,8.902400,-6.369261,8.899588,-5.441224,-1.616509,0.290308,-2.524754,1.097730,-1.418789,4.811676,-6.373896,-6.012785,-8.327939,-0.222139,1.617577,-2.704388,-2.340706,1.058113,-1.141389,6.736512,7.925843,0.519631,4.897797,-4.697569,4.757101,9.622489,3.545658,0.444531,-0.895699,0.683321,-2.152513,-5.044491,-6.599552,9.313151,1.860589,-1.347695,2.165916,-8.216940,-1.394910,-5.043085,1.338685,5.179984,-0.656141,-0.216874,-1.556944,-6.393065,-7.475987,1.155065,1.825478,3.961789,4.967360,3.463300,6.786636,8.490070,-6.356385,-6.404410,-9.274328,-9.537542,-4.099229,4.125379,-3.443247,1.978307,-2.514876,-6.115277,3.219814,2.850141,1.668635,0.366873,-3.553100,-9.344734,5.735742,-6.541026,-3.776134,-7.199292,-8.390855,5.820795,3.075299,2.237753,1.294775,1.872163,3.287307,7.817701,-7.145032,6.225266,-7.795644,4.619552,-6.401615,5.210021,6.041290,0.494403,6.535777,-5.875874,-6.856301,-3.685986,5.622322,-9.273155,-3.715160,7.528964,7.340575,-0.974330,-4.806655,6.520108,5.557102,6.365779,-1.898470,-9.908288,1.978549,-4.813209,-8.454953,3.381465,1.719441,-1.311734,-7.556131,-7.319779,4.323396,3.388614,-8.673229,-4.539767,6.764208,-6.947474,1.305658,0.723159,-9.808721,-9.841235,-0.116514,-5.908541,8.371354,-1.458979,1.293978,8.812882,4.310031,-7.906706,9.930106,8.362931,9.812178,-5.955837,9.888692,2.967411,-9.934605,-4.924019,-9.271920,-7.452265,-5.807264,9.031040,4.277416,-2.313353,6.464434,-5.499974,9.099537,6.598536,-1.398468,1.338078,2.861096,5.518768,-6.043952,-2.168135,-2.016533,4.564228,1.108207,-3.825925,4.364543,9.705913,-3.470641,-3.867174,-0.883458,-6.743105,5.072168,-7.766113,-1.098325,-3.126935,6.302063,3.714420,6.404748,-8.318526,1.485043,8.306843,5.082471,4.928386,4.715322,-6.957333,8.146472,-0.788224,-3.388453,1.886624,-4.159403,-4.772303,8.576294,0.237756,-8.765111,3.298537,8.054863,-9.226965,-0.331330,-5.506138,8.596578,4.530840,1.637772,-2.645867,-6.126970,-7.189436,8.339130,-1.753188,0.360083,-4.749185,-3.418682,5.521762,-3.309406,-7.699475,-2.633064,-6.894435,5.714090,-5.196322,8.840446,5.087104,2.812802,-6.999680,-8.537130,5.279423,7.641963,4.352456,2.374444,2.809931,-7.408823,-2.377402,-2.770891,4.804278,-4.981022,-6.743101,-9.212720,2.201746,8.702336,-9.711650,6.489791,0.672414,1.665968,-8.621642,-1.687305,1.423042,8.376857,5.993797,-9.829375,-7.331679,-3.425139,4.489268,-6.815238,-0.489700,-1.703756,7.299027,-4.722123,-2.242931,5.989012,4.581497,-5.246384,-7.494384,-2.613424,0.560330,-5.647310,-1.549472,-5.551768,6.644910,-3.567611,7.145454,1.677723,-7.606385,2.732832,3.097023,3.668715,-2.780599,9.626832,-6.036328,-0.442215,6.176912,5.155006,-9.782516,0.234054,-8.284562,6.418625,-8.811327,-5.645454,1.257594,-0.185691,-4.456921,3.645246,4.928284,6.052667,-9.423534,-0.793896,1.554997,2.657651,3.661418,3.852815,1.044384,5.410509,8.145675,-6.918694,-3.694876,-2.900352,4.243656,3.376499,-4.278194,-1.727031,6.179734,-4.313462,-9.779261,-8.812358,-5.534315,9.788982,-7.551443,-6.354177,-8.770770,-4.203115,6.781178,2.937866,-9.243939,9.832931,4.185280,-2.216320,-7.688867,2.161496,-1.275165,9.557755,-7.892032,-1.950376,5.907641,-6.612187,-3.965573,-4.986684,0.129438,-9.169960,2.605635,1.641996,8.628911,9.097374,-8.967962,-8.486898,-8.642906,-5.485072,-3.362117,8.543611,5.249333,3.002384,0.315741,1.169541,2.780450,-5.810818,2.757841,6.701216,7.561174,3.875643,-2.163720,1.160644,7.198741,5.946745,-9.096948,4.829387,-0.354402,8.348463,5.785380,3.914628,-7.962325,3.473483,5.667856,-9.983832,3.277455,-5.466702,4.458198,-9.447139,6.080439,-1.332796,-9.124979,5.694278,-8.362383,-7.681758,6.212039,-5.933350,-6.726409,-0.903539,2.646438,-1.940663,-3.779282,-9.918920,-4.285569,-0.711574,-3.026977,-3.081619,-1.387366,3.534848,-2.947070,-6.076596,5.089649,-5.049684,-8.714318,4.261648,6.181230,-5.469481,9.720330,-0.642793,7.335401,6.030518,0.005805,6.516995,-9.207012,1.689882,-8.285597,-1.199594,-7.714041,3.776135,0.875008,-4.982285,3.894262,-6.516779,3.504475,-1.260502,8.737216,-9.170777,0.312074,4.406731,4.630643,1.515675,-7.708650,5.786955,-8.644614,-0.777736,-4.489242,-4.842148,8.954699,-9.139870,0.583273,-3.457400,-0.194360,-2.485269,-5.263001,1.610300,-7.242165,5.715435,6.881147,2.896066,-7.164038,3.561840,9.765076,-6.374401,0.597989,9.467959,9.162255,7.570054,7.454666,-4.197331,1.664085,8.789352,-6.967699,0.434900,2.947480,6.560359,-0.736383,-7.468330,-2.958424,-6.196892,3.584057,7.555354,1.892965,5.114632,-6.509567,-8.011432,8.346542,9.027633,0.058451,7.593520,0.639623,-2.212877,-5.907252,8.857434,2.495521,-7.314907,-5.296093,4.635410,-7.392305,-0.308835,-7.852608,9.000915,-3.294577,2.860207,7.153599,-9.193777,8.537710,-7.528713,-0.875521,9.534469,4.671880,-7.666683,9.087416,-5.163699,-6.568968,-1.203464,5.281030,4.671882,-5.454740,1.872145,1.685829,-1.276370,-4.110293,-6.174952,3.636777,-3.504424,7.227201,-5.424802,0.935657,5.311498,5.622042,-5.925214,6.708738,-4.421343,2.641554,5.007821,9.061396,0.018585,-0.043145,-6.065890,4.871225,-2.226492,-7.077456,7.196697,9.443459,2.984674,-8.967502,-1.487344,1.312056,2.983558,-0.837695,-3.336399,8.302109,-2.460044,8.404802,2.075759,3.738436,-9.276261,-4.640035,8.381255,-1.991988,-3.721679,8.086634,-6.904352,0.201778,0.330562,-4.294592,6.447736,2.905485,4.006663,0.321607,-7.959924,-6.554746,-4.046400,-5.099523,4.096192,-1.677967,-0.622437,-1.577077,6.690981,-5.022606,0.009606,-2.339520,-8.910155,-9.333620,-5.446089,-3.070576,3.347953,5.584164,4.159807,3.087831,-0.467531,-6.410932,2.955496,7.741648,-3.397443,1.815941,-3.544642,7.639503,-4.555918,-8.942856,2.713133,3.045661,-2.797865,-7.048708,-1.255554,-6.568934,8.659601,5.647002,5.569124,6.511435,3.646103,4.353325,-5.972919,-0.218902,5.637646,-8.892772,-2.725934,1.537003,-1.414500,-1.290330,3.594786,-4.896262,-6.346419,-3.896441,-2.698815,8.077194,-3.396508,-3.899584,7.658342,8.731684,6.230232,8.855870,7.223614,-2.111467,-0.007448,5.880077,5.917307,1.319469,7.418752,8.393259,9.197949,1.024714,-0.120783,3.972626,4.847579,-6.909277,-2.674439,-2.493451,-1.414722,6.704814,7.481944,-6.856817,-1.220619,-2.973895,9.565252,-6.100701,8.616277,2.129504,9.794122,7.210753,9.101944,6.353600,-2.484584,-7.501356,2.875829,8.977393,-1.063381,9.303340,6.577962,-1.430489,-2.148829,-8.888472,0.610842,2.050549,-9.178684,0.099895,-2.105286,2.567397,-5.316056,8.635350,9.144630,-2.766804,-6.799641,9.092778,-7.514506,0.644922,-1.201504,-7.344472,5.336537,-8.055732,-1.713517,0.568140,-0.355528,6.051480,-1.180369,-8.584147,-3.929484,6.916578,5.741084,-8.805633,0.350201,-2.842454,2.233212,2.555403,-7.161595,-6.625066,0.763146,6.573307,-2.552863,-7.277400,5.386548,3.141620,7.878000,-3.392790,7.634052,-5.180119,-2.284099,-0.278415,5.522623,-2.274290,8.805424,4.310705,3.037287,-4.629996,2.531674,-5.216617,-6.000530,-4.380030,9.191712,-6.959604,-9.642684,6.545961,8.545062,-4.021872,0.379822,-6.493046,-5.501003,6.266377,-4.635949,5.175105,-9.409224,-4.106355,8.802297,-2.244541,7.840108,0.503929,-4.478766,6.659181,-3.530888,-1.817304,-1.978464,-2.253510,-5.929759,-3.973399,-6.432333,1.948564,-8.607260,3.054573,-5.379054,-8.729085,-4.388558,2.950221,-6.248272,-7.546652,7.374076,-6.020827,7.911599,-7.337522,-5.588852,-9.833500,-6.234918,5.348508,6.279679,8.054463,-4.460990,6.390581,7.085143,6.076462,8.083895,0.038318,1.833620,7.235871,-1.676895,-9.858028,-2.510867,9.675911,-0.182787,9.250393,7.684654,-5.366779,-3.816796,-0.357521,-6.809546,7.050431,4.572193,-5.673310,-6.943378,9.573894,3.337635,7.918426,-6.594772,6.615129,2.707572,-2.379643,8.692594,0.762230,7.193676,4.919313,4.209658,9.909958,8.326246,8.300864,3.647556,2.069600,5.477613,3.183136,2.375023,-8.733207,7.322088,-0.990785,0.457614,5.918014,7.974637,3.335378,6.470065,-9.065838,-3.645634,5.630394,-7.597823,2.228700,3.165535,-9.895070,9.160822,-3.174074,4.292127,0.642390,-4.115745,0.107105,8.714542,-7.091977,-2.662067,-0.232923,6.882876,-1.424935,-7.200851,9.399618,-4.711593,-0.974239,-5.017148,7.891627,2.589898,3.273971,4.714687,-1.688451,7.397921,0.890677,6.786805,-6.585559,9.408738,-1.652605,-5.985519,-3.915015,9.906108,-8.654483,2.026165,-9.688491,-9.465030,-3.847676,-0.590471,4.321634,8.060363,6.958378,-0.597239,8.879357,3.792108,2.656054,6.865901,-9.172239,-1.566582,2.098608,-3.468591,6.831629,9.025248,-1.428073,-4.625982,1.009650,2.129177,-9.613901,-6.286494,5.606819,4.319091,-1.122162,-1.173736,-7.666241,7.205130,-5.362121,6.098266,3.012143,2.134467,-2.057681,4.621123,-1.898117,9.030858,-6.486877,-5.438563,7.169659,-4.059118,9.068231,-7.482211,4.774399,3.837434,-5.299525,9.739165,6.653283,2.051804,-3.968358,1.124249,9.983662,4.229378,-6.129936,-3.760989,-1.163799,6.146972,3.707541,5.957652,-4.103561,3.806778,9.492484,-8.599503,1.699773,-2.021672,-4.723059,-5.324192,-7.209755,7.755987,-0.209913,-3.181216,-6.436153,-2.272112,-8.078715,-9.316576,-5.827684,0.804500,6.828380,-3.022665,3.894655,-2.442175,-2.231422,-0.617774,8.001779,3.587417,0.396588,-1.403828,-6.692174,5.275676,-3.188715,9.749427,5.679732,-7.495890,-0.460640,-1.077502,9.588381,6.442476,3.764559,4.159797,7.235615,-2.561854,-7.527556,-6.547957,9.008976,0.574364,6.297334,-4.455843,2.297745,9.098997,7.194890,-5.017944,1.229407,-2.350512,3.430106,5.615999,5.773803,5.601702,-9.835033,-9.535457,2.233577,7.202514,-8.368134,-4.980979,-1.640666,5.045079,6.101592,-0.872689,6.470530,6.162328,-8.237967,9.647416,9.006791,-9.095807], dtype = "float32")#candidate|6208|(1092,)|const|float32
call_6207 = relay.TupleGetItem(func_461_call(relay.reshape(const_6208.astype('float32'), [14, 13, 6])), 0)
call_6209 = relay.TupleGetItem(func_464_call(relay.reshape(const_6208.astype('float32'), [14, 13, 6])), 0)
func_461_call = mod.get_global_var('func_461')
func_464_call = mutated_mod.get_global_var('func_464')
call_6214 = relay.TupleGetItem(func_461_call(relay.reshape(const_6208.astype('float32'), [14, 13, 6])), 0)
call_6215 = relay.TupleGetItem(func_464_call(relay.reshape(const_6208.astype('float32'), [14, 13, 6])), 0)
output = relay.Tuple([bop_6195,call_6207,const_6208,call_6214,])
output2 = relay.Tuple([bop_6195,call_6209,const_6208,call_6215,])
func_6221 = relay.Function([var_6193,], output)
mod['func_6221'] = func_6221
mod = relay.transform.InferType()(mod)
mutated_mod['func_6221'] = func_6221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6222 = relay.var("var_6222", dtype = "uint16", shape = (16, 1, 7))#candidate|6222|(16, 1, 7)|var|uint16
func_6221_call = mutated_mod.get_global_var('func_6221')
call_6223 = func_6221_call(var_6222)
output = call_6223
func_6224 = relay.Function([var_6222], output)
mutated_mod['func_6224'] = func_6224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3111_call = mod.get_global_var('func_3111')
func_3112_call = mutated_mod.get_global_var('func_3112')
call_6228 = relay.TupleGetItem(func_3111_call(), 0)
call_6229 = relay.TupleGetItem(func_3112_call(), 0)
output = relay.Tuple([call_6228,])
output2 = relay.Tuple([call_6229,])
func_6272 = relay.Function([], output)
mod['func_6272'] = func_6272
mod = relay.transform.InferType()(mod)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6272_call = mutated_mod.get_global_var('func_6272')
call_6273 = func_6272_call()
output = call_6273
func_6274 = relay.Function([], output)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mod.get_global_var('func_5620')
func_5621_call = mutated_mod.get_global_var('func_5621')
call_6280 = relay.TupleGetItem(func_5620_call(), 0)
call_6281 = relay.TupleGetItem(func_5621_call(), 0)
func_3174_call = mod.get_global_var('func_3174')
func_3176_call = mutated_mod.get_global_var('func_3176')
call_6286 = relay.TupleGetItem(func_3174_call(), 0)
call_6287 = relay.TupleGetItem(func_3176_call(), 0)
output = relay.Tuple([call_6280,call_6286,])
output2 = relay.Tuple([call_6281,call_6287,])
func_6302 = relay.Function([], output)
mod['func_6302'] = func_6302
mod = relay.transform.InferType()(mod)
mutated_mod['func_6302'] = func_6302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6302_call = mutated_mod.get_global_var('func_6302')
call_6303 = func_6302_call()
output = call_6303
func_6304 = relay.Function([], output)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5719_call = mod.get_global_var('func_5719')
func_5721_call = mutated_mod.get_global_var('func_5721')
call_6317 = relay.TupleGetItem(func_5719_call(), 0)
call_6318 = relay.TupleGetItem(func_5721_call(), 0)
output = call_6317
output2 = call_6318
func_6325 = relay.Function([], output)
mod['func_6325'] = func_6325
mod = relay.transform.InferType()(mod)
mutated_mod['func_6325'] = func_6325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6325_call = mutated_mod.get_global_var('func_6325')
call_6326 = func_6325_call()
output = call_6326
func_6327 = relay.Function([], output)
mutated_mod['func_6327'] = func_6327
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6330 = relay.var("var_6330", dtype = "float64", shape = (15, 4, 4))#candidate|6330|(15, 4, 4)|var|float64
uop_6331 = relay.exp(var_6330.astype('float64')) # shape=(15, 4, 4)
output = relay.Tuple([uop_6331,])
output2 = relay.Tuple([uop_6331,])
func_6340 = relay.Function([var_6330,], output)
mod['func_6340'] = func_6340
mod = relay.transform.InferType()(mod)
var_6341 = relay.var("var_6341", dtype = "float64", shape = (15, 4, 4))#candidate|6341|(15, 4, 4)|var|float64
output = func_6340(var_6341)
func_6342 = relay.Function([var_6341], output)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6347 = relay.const(-9, dtype = "uint32")#candidate|6347|()|const|uint32
var_6348 = relay.var("var_6348", dtype = "uint32", shape = (14, 12, 11))#candidate|6348|(14, 12, 11)|var|uint32
bop_6349 = relay.add(const_6347.astype('uint32'), var_6348.astype('uint32')) # shape=(14, 12, 11)
output = bop_6349
output2 = bop_6349
func_6359 = relay.Function([var_6348,], output)
mod['func_6359'] = func_6359
mod = relay.transform.InferType()(mod)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6360 = relay.var("var_6360", dtype = "uint32", shape = (14, 12, 11))#candidate|6360|(14, 12, 11)|var|uint32
func_6359_call = mutated_mod.get_global_var('func_6359')
call_6361 = func_6359_call(var_6360)
output = call_6361
func_6362 = relay.Function([var_6360], output)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6371 = relay.var("var_6371", dtype = "int32", shape = (13, 16, 14))#candidate|6371|(13, 16, 14)|var|int32
var_6372 = relay.var("var_6372", dtype = "int32", shape = (13, 16, 14))#candidate|6372|(13, 16, 14)|var|int32
bop_6373 = relay.bitwise_xor(var_6371.astype('int32'), relay.reshape(var_6372.astype('int32'), relay.shape_of(var_6371))) # shape=(13, 16, 14)
output = bop_6373
output2 = bop_6373
func_6384 = relay.Function([var_6371,var_6372,], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6384_call = mutated_mod.get_global_var('func_6384')
var_6386 = relay.var("var_6386", dtype = "int32", shape = (13, 16, 14))#candidate|6386|(13, 16, 14)|var|int32
var_6387 = relay.var("var_6387", dtype = "int32", shape = (13, 16, 14))#candidate|6387|(13, 16, 14)|var|int32
call_6385 = func_6384_call(var_6386,var_6387,)
output = call_6385
func_6388 = relay.Function([var_6386,var_6387,], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mod.get_global_var('func_6186')
func_6188_call = mutated_mod.get_global_var('func_6188')
call_6390 = func_6186_call()
call_6391 = func_6186_call()
uop_6401 = relay.atanh(call_6390.astype('float64')) # shape=(1, 11, 2)
uop_6403 = relay.atanh(call_6391.astype('float64')) # shape=(1, 11, 2)
bop_6407 = relay.bitwise_xor(uop_6401.astype('int64'), relay.reshape(call_6390.astype('int64'), relay.shape_of(uop_6401))) # shape=(1, 11, 2)
bop_6410 = relay.bitwise_xor(uop_6403.astype('int64'), relay.reshape(call_6391.astype('int64'), relay.shape_of(uop_6403))) # shape=(1, 11, 2)
uop_6411 = relay.sqrt(call_6390.astype('float64')) # shape=(1, 11, 2)
uop_6413 = relay.sqrt(call_6391.astype('float64')) # shape=(1, 11, 2)
uop_6417 = relay.log(call_6390.astype('float64')) # shape=(1, 11, 2)
uop_6419 = relay.log(call_6391.astype('float64')) # shape=(1, 11, 2)
uop_6429 = relay.asinh(uop_6401.astype('float32')) # shape=(1, 11, 2)
uop_6431 = relay.asinh(uop_6403.astype('float32')) # shape=(1, 11, 2)
output = relay.Tuple([bop_6407,uop_6411,uop_6417,uop_6429,])
output2 = relay.Tuple([bop_6410,uop_6413,uop_6419,uop_6431,])
func_6432 = relay.Function([], output)
mod['func_6432'] = func_6432
mod = relay.transform.InferType()(mod)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6432_call = mutated_mod.get_global_var('func_6432')
call_6433 = func_6432_call()
output = call_6433
func_6434 = relay.Function([], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6486 = relay.var("var_6486", dtype = "float32", shape = (6, 15, 14))#candidate|6486|(6, 15, 14)|var|float32
uop_6487 = relay.cosh(var_6486.astype('float32')) # shape=(6, 15, 14)
func_3619_call = mod.get_global_var('func_3619')
func_3623_call = mutated_mod.get_global_var('func_3623')
const_6490 = relay.const([7,4,-4,-3,-9,7,-9,5,-4,4,5,-9,8,1,7,4,10,7,-8,-10,1,-6,10,-4,8,6,10,2,-5,5,-5,-7,-9,-10,7,4,7,8,-5,2,2,9,-5,8,-4,-3,-2,-5,-5,7,-4,9,5,1,-2,3,2,6,3,-9,-6,9,1,8,10,9,6,-7,9,-1,2,-7,-6,-4,-6,7,3,8,9,-3,1,2,2,-10,-9,4,-5,-8,3,-7,4,10,9,3,-6,-6,8,6,-9,-3,-7,4,9,10,-3,-2,2,-6,2,8,4,6,-2,-4,-1,1,-5,8,6,-3,-7,-8,6,10,3,-7,2,9,-8,-4,1,6,10,-7,2,-5,-6,7,-9,2,-5,-9,4,10,2,-2,-7,6,-10,4,-2,10,6,-9,-6,-6,-2,7,-2,8,1,4,8,-7,-2,2,-2,3,-4,2,5,-1,1,-3,-5,5,-2,-5,-9,-1,-3,-9,7,-2,6,1,10,-8,-9,3,3,1,-9,6,-9,10,-9,-7,-1,-9,3,-10,-1,-5,9,-6,10,-8,6,-6,10,-6,-7,7,-4,-6,-4,1,5,6,7,-6,3,-3,-7,-5,9,6,-6,5,-7,6,-7,9,-4,8,10,6,8,-2,2,-10,9,-6,-8,5,-4,-9,10,5,-6,5,6,9,3,-9,-9,6,6,2,-3,-9,10,9,9,-3,-6,-1,10,-6,-1,7,-5,-5,5,5,4,6,-6,-3,-1,-10,-5,-9,10,7,2,1,-7,8,-4,9,-1,-4,-1,1,-5,9,3,4,-3,7,5,3,-4,3,6,-10,8,-3,2,3,7,5,9,-5,10,-8,-2,8,-1,-6,4,3,9,-3,10,-6,7,6,3,-8,5,-10,6,3,-9,-4,4,-5,3,-1,5,9,1,9,7,6,3,1,2,-7,-2,1,10,6,-7,6,6,-5,-1,8,-2,-1,10,4,-5,-2,4,4,1,-9,9,-10,1,2,10,1,6,-6,-6,-8,-3,-10,4,-1,4,-5,7,7,-1,-9,9,-4,2,1,2,10,8,2,-4,8,5,10,-9,10,-4,-2,1,-9,-7,2,8,5,-2,1,-4,-1,-4,-2,7,-4,3,5,-3,-6,3,-10,-9,-10,-5,-4,-9,7,7,-6,-1,5,-6,5,-3,10,10,8,8,-10,-8,-10,-1,-2,-6,3,1,-1,-6,-8,9,6,1,-1,-3,-10,7,-2,8,-9,4,-4,-9,2,1,-6,-10,-10,-6,8,1,-2,1,-9,8,5,-1,7,-2,-5,8,3,-4,7,-5,-1,4,-7,9,-3,-5,9,7,-7,-4,4,-4,8,-2,-9,-1,-3,6,-9,5,2,-2,7,-8,8,7,-1,-1,-10,-7,7,-1,-4,-10,2,7,-7,-6,8,-1,5,10,-10,9,3,-10,4,1,-8,1,8,3,-8,-2,-4,-5,-2,7,8,-5,-1,-1,6,-3,7,-4,3,-2,10,-7,8,5,7,-3,1,-5,-3,-9,2,-5,7,4,1,-9,10,7,-8,-8,-6,1,1,10,-6,-4,3,7,-3,10,-7,-4,6,4,6,10,-5,9,-1,-9,-10,-5,-4,-2,3,8,-10,-6,-6,10,-2,-3,-3,2,-3,-1,4,5,8,3,-7,3,7,-6,10,4,6,9,-2,-3,2,8,-10,3,10,1,-1,7,-2,1,-8,-3,4,6,-5,-9,-3,-2,-1,10,5,1,4,3,10,9,9,-4,4,-9,9,5,-6,-6,5,8,-9,-5,-6,10,-2,-8,9,-6,-2,-3,4,4,4,-6,-7,-9,3,9,4,-7,-8,-1,-7,-1,1,-1,-1,-4,-8,-6,-5,9,-10,-7,-10,3,9,5,1,6,-10,-9,-5,-8,5,6,-8,8,-5,-4,-9,-1,3,6,-3,-5,1,-6,9,9,-7,-4,2,-6,-4,2,-9,6,10,-5,-6,8,6,-6,-7,9,-8,10,2,6,6,3,-2,9,-3,-7,-5,-6,10,-8,-5,-2,9,-4,9,10,8,3,2,-2,-4,-2,3,-2,2,-9,-4,-1,-4,-5,-4,8,-8,-4,3,-5,-4,-6,7,-9,5,-7,2,3,2,8,-2,-10,7,1,9,-7,-3,1,2,-10,-9,-7,4,6,9,-3,-10,3,8,-7,10,-1,8,6,3,6,-2,2,6,-3,10,10,-1,-9,-9,-8,-2,-5,-3,10,-6,8,3,7,6,6,3,9,-9,3,-5,-8,-1,7,1,-10,6,-8,-5,-10,-2,-10,4,-1,6,-10,6,-7,-10,-3,-2,9,-8,-10,-9,-8,9,-8,-7,-6,4,3,-6,8,-5,-5,1,-6,1,6,6,-1,-1,-6,7,-1,-9,-2,5,1,9,4,1,3,-5,2,-2,-6,1,1,-5,-2,5,9,3,9,-7,-4,-4,-8,5,-2,-2,-9,-10,2,1,2,-7,-9,3,2,2,6,-2,-6,-4,-5,-7,-9,5,4,5,-5,9,3,-1,-3,1,-10,4,2,-4,-6,3,8,9,7,8,-8,-7,10,-4,-2,2,7,-8,6,8,-3,-7,3,10,2,4,-4,9,-1,-7,-5,7,-5,-3,-8,-4,3,9,9,-6], dtype = "int8")#candidate|6490|(980,)|const|int8
const_6491 = relay.const([9.318996,-2.939807,7.019920,6.821341,-0.379628,-4.444401,5.809124,-4.577284,-4.948059,1.304722,-9.059855,-2.418107,5.692267,8.339926,-8.198368,-2.300081,-4.735900,9.541647,5.209675,-6.150883,-2.766046,8.683076,-0.556252,-8.182781,-6.646004,-5.395986,3.010943,5.531894,9.498772,0.213210,4.767066,4.639452,3.570703,1.604624,0.719625,-1.559460,-0.749421,-4.211863,6.344190,4.995903,-3.314736,-9.601507,0.514026,-8.612066,-0.042785,-2.399563,5.063481,-7.473722,9.645302,8.328052,8.670020,-0.831836,-1.362388,-2.390858,6.850344,7.654165,-4.021904,-4.183436,0.213875,-5.681967,-7.715716,-3.357842,-3.199323,-5.456308,-8.751972,-3.681321,-4.361899,-2.586607,6.529839,-7.224425,-5.230956,-9.486458,-8.653331,-5.883725,4.475463,8.885710,-4.338294,7.265745,-6.378201,-4.398704,-4.582990,-0.037873,5.860909,9.738770,-7.626947,7.494589,6.939923,4.065866,-4.693283,0.615901,-1.512302,-6.088986,-2.497644,4.025247,3.988265,-9.052925,-0.405305,-2.011297,2.301249,3.662453,-2.311580,-1.407235,-0.602911,7.994402,-8.804715,8.654018,0.263463,2.479058,1.809560,2.542785,-2.127058,-3.542246,-9.969965,-1.507883,-7.900320,0.789686,-7.434100,-3.094902,7.276630,-5.997406,1.664506,-7.917397,4.690183,-0.866555,-9.809668,1.096119,2.118013,-3.500000,8.877251,2.682110,-2.409280,-2.404060,6.637254,5.482712,-6.679530,-8.951348,6.159115,-7.940746,-1.689841,-4.871425,-5.249116,3.634757,8.986744,-2.830634,-2.725472,6.184797,-8.520946,0.198197,-2.727175,9.946391,-6.628084,-9.944629,-9.442784,-0.234950,-1.792568,-5.486661,9.703357,-9.974142,7.533508,7.399261,0.162741,-7.691099,-6.361553,2.644407,-2.521998,0.597147,-8.734114,6.943684,-3.080887,5.150572,-1.414846,-2.622304,1.178495,-0.915544,4.828927,-7.198764,-5.797845,-8.053133,-9.734142,-7.782155,-8.196207,-8.330111,6.620791,-3.602180,5.892863,-5.267005,0.005766,8.750995,-3.266080,3.999776,1.722501,-0.171388,-0.397414,-9.693318,-4.197363,8.651550,-1.548910,2.694928,4.789929,-2.183271,6.143406,-4.632849,4.564755,6.192501,-6.719695,4.465215,-1.976155,9.532823,-2.359894,6.377356,-6.134089,-5.590681,-5.143092,0.612424,8.956527,8.677510,-5.856670,6.955335,0.831164,5.320715,8.684521,-8.509907,-0.848308,-3.785043,6.223196,2.588128,-6.775786,7.595035,5.113393,7.520909,-5.420758,2.239220,-7.712875,-6.709513,7.002232,3.392731,-1.346982,-7.249405,-9.889985,2.659567,1.847350,2.291689,-1.698240,-1.364525,7.131370,-2.386500,-7.467201,4.303664,-7.191306,8.508986,9.892055,-1.263545,-7.102411,2.705301,1.652644,-7.409369,2.455613,5.962663,-2.774383,-8.762364,9.369761,7.560574,-7.456467,-3.224344,-2.864791,7.311489,1.176415,1.468018,-2.505747,-7.308002,-6.605611,-6.253778,-4.856662,0.902199,-4.039648,4.007803,6.767931,2.564163,5.582524,-5.572461,7.277445,6.592788,-7.602560,-4.215153,3.622854,-3.755212,-3.726458,-3.594739,-0.518369,1.499809,8.769464,-7.429344,-9.788325,-5.553348,-1.709996,7.866408,-9.456506,-2.912906,-8.074236,-9.346370,1.435087,1.982502,6.448436,-7.931998,5.997210,-0.553871,-2.391024,6.655585,4.537527,-6.851232,6.185658,5.525333,0.101622,-3.605989,8.842927,2.473354,5.940995,-0.803826,-0.379330,9.795410,-2.747647,-5.553114,-9.767940,1.936475,-7.637074,1.133135,-1.752496,1.776070,-2.776921,2.623154,-8.765209,-3.168614,2.524360,2.062421,-2.534981,4.126050,-9.880187,5.360786,-8.699471,-1.810603,3.301893,-5.050474,0.138256,8.045889,9.875048,4.006758,9.961604,4.673567,-6.247487,5.399845,8.543146,6.851855,-4.342197,0.253605,-0.181628,2.050215,9.052704,7.822387,-9.061795,1.102311,9.235392,2.340913,-8.917880,4.682729,3.035700,9.159877,5.528101,9.760683,-6.678990,-5.691009,-0.309453,-7.782364,5.019753,-7.396400,-5.850831,1.701416,-6.754250,-0.456455,-2.517846,6.076769,-1.511666,-4.435117,-3.149746,-2.641800,-5.139146,6.298374,-6.840685,6.609059,9.816360,1.084166,0.695614,3.923483,-0.844704,-3.566527,8.204433,-3.219566,6.751237,3.755677,-0.590787,-3.554231,7.084780,-2.973566,6.811246,2.870690,8.616062,-9.737415,-8.800480,3.913612,2.814838,6.964575,6.435864,3.239164,-7.696426,-9.522660,-3.268835,-9.964136,-2.278069,1.907130,-5.546418,-5.176853,-4.029568,-5.471885,-0.788733,0.207670,2.662330,-4.946213,-2.549439,4.636639,1.310227,-2.367134,-8.299660,5.735298,9.687812,-0.406091,0.543502,1.901754,7.605716,-6.230873,0.345780,-9.889389,-4.871170,-1.704420,-7.807669,-7.101280,9.407530,8.881611,6.858755,0.531618,0.010299,-2.142136,-4.145674,-3.665979,4.125738,-9.162929,-4.012146,1.033425,7.237080,-6.059742,-3.887024,7.972920,1.487003,2.586133,4.858960,1.852692,1.647963,-2.214324,0.936630,6.918564,5.291155,-5.080382,-2.342834,2.301137,6.914896,0.903151,-8.413856,7.470981,7.385349,-3.709622,2.615679,-2.215001,7.997154,9.255506,9.030738,6.425364,-8.306504,8.190193,5.486447,-6.443515,-4.682052,-4.114424,8.479476,-1.586011,4.573669,8.809324,-0.387942,3.968277,-9.996352,-2.042721,4.466462,6.409330,5.802937,4.925746,9.670737,0.955412,3.210769,-1.156829,-9.832541,-1.480838,4.645072,-2.056415,5.724078,4.181174,-5.504028,9.566890,9.689417,6.568330,6.603330,4.851199,3.831350,-9.600730,0.382781,5.226959,1.274768,3.575424,2.602708,-1.347754,5.984690,4.215147,-4.315121,9.845762,5.840971,-7.366192,0.110868,9.806938,9.414419,-0.612339,-8.248086,-7.584690,1.460761,-7.258761,2.086365,6.426484,-0.129650,4.652171,8.178454,-2.169584,3.110353,-3.804834,-5.612631,5.606740,6.616966,-7.090295,6.305073,-4.632073,-2.433466,-2.504312,9.778231,-6.517516,-1.595064,-4.615650,0.764319,-4.546545,-3.939331,6.257883,-3.885059,-0.990187,-4.835763,5.698947,4.080085,-7.790857,-3.754685,4.371023,-7.189977,0.103844,0.264981,3.282714,-7.957096,-1.194290,-7.066619,1.824880,-9.538874,-7.554844,5.842557,4.401439,1.440524,-2.333348,-2.577502,-3.150331,-3.007101,3.559999,6.226498,-5.961290,-6.500829,-2.380264,-7.216852,9.929896,5.020274,-9.414575,8.237790,4.321472,2.226838,-8.111594,-2.105687,2.514972,-1.949382,-0.596126,9.001028,7.267132,8.037181,-2.099822,4.752571,0.138931,7.159911,0.684294,3.925744,-1.508060,4.428863,-8.879257,9.898667,-7.107874,-5.407181,9.648745,6.738646,1.695384,5.165763,-3.913835,2.810404,0.752996,9.474067,6.065572,-4.214606,-8.947268,-0.056486,0.796438,-1.843872,1.733536,-8.998915,-0.508067,9.313104,4.218881,3.408423,0.966673,8.544997,8.755634,-0.718219,7.322168,-0.031062,-9.307402,-5.673491,-6.688719,1.709713,4.554763,7.024661,3.497772,3.520215,8.588594,-5.165113,8.275162,1.891675,2.139349,3.136397,-7.003562,-7.974209,-9.201698,-3.851378,2.380654,-5.566486,-0.156484,-4.818915,-0.468315,-7.518501,-9.528728,-3.070630,-5.445289,-2.488971,6.219964,-6.019664,-9.795673,-1.339868,6.637618,3.276573,-3.325411,5.433993,9.967600,-5.861651,7.841613,5.987069,-6.013119,9.864246,-0.031703,-8.594691,3.146754,0.692754,3.381822,-6.293201,1.690132,1.675433,1.576458,-5.227982,-5.698273,-8.876969,4.107980,0.665697,2.283989,-7.681366,-8.220057,-7.028567,5.248640,4.669166,6.738677,6.741604,-8.168693,3.242327,7.541282,-0.212395,-5.986966,8.060262,0.737816,8.776864,5.426708,-5.551827,-0.193804,6.240238,-5.529012,-5.513643,-9.709013,-8.167141,-5.256442,-6.358526,4.885976,0.070717,6.243112,0.408538,5.867397,4.095107,-7.122510,0.770302,-6.782585,-1.751404,7.779607,4.197910,-8.306330,-0.262656,3.757027,-8.955310,-7.695964,-3.031613,-4.630304,-8.931307,1.748152,-9.514083,0.271215,-5.996667,-4.641997,-3.591882,-4.297011,1.845370,-7.805497,3.546484,-4.263678,-6.667533,-4.013388,-1.499901,3.927603,-1.117708,3.638776,-2.955112,-1.054262,-8.726620,-2.330304,9.787621,-0.425746,2.636878,-4.921323,-1.457087,5.635469,0.821688,-0.249469,-8.554665,-0.654356,-3.855055,-5.348687,-0.150448,7.117039,9.770592,-8.248182,-0.692793,-5.015777,5.010968,0.425529,4.351875,-9.967745,-6.320434,5.859249,-0.463414,6.417837,1.574568,-5.545575,2.870937,-2.148086,9.494894,2.385459,-1.949311,2.656952,-2.433672,2.818042,2.349220,5.807879,-9.892167,6.087144,-7.216482,9.694651,-6.233127,-7.352005,-8.887341,-1.575944,8.755140,9.429863,8.542546,5.241861,0.128590,-8.009966,-6.424171,-9.383032,-2.684919,-6.306557,7.572805,-9.994323,1.898733,6.014339,7.686659,1.108055,8.250273,-2.939311,2.500668,-6.708986,6.935841,-3.003610,-8.514279,-9.861422,-5.540649,-0.355448,6.487113,2.496900,6.567978,-1.849658,-6.826272,2.433363,-9.130879,4.989412,6.809864,4.631093,-5.027282,-0.377452,-3.552127,1.304097,5.820859,-6.102881,-0.811639,9.428026,-2.473221,-1.586176,8.977424,-5.449718,-7.889865,-7.749119,-1.598957,-6.335484,8.584957,3.885544,4.088855,-0.320472,-2.608042,9.190211,-3.884920,-9.980905,-5.771387,1.339385,-1.865585,-0.375049,5.297735,-7.351909,-1.113079,-9.582470,-9.339570,0.067786,-2.668463,-6.081919,8.509183,1.438478,8.164989,-1.427878,2.159207,9.142593,-2.393953,-2.915900,-7.936912,2.048803,8.431157,-7.540183,1.452368,8.491009,9.028997,8.580155,-5.788047,-8.369434,-8.020720,7.719560,0.914889,-8.282387,-4.804586,4.270953,5.079351,8.023470,6.715525,-3.013880,-1.011073,-4.849668,-1.212893,-2.172808,9.346437,-8.219622,4.415316,5.246519,-0.140113,-4.464378,-9.382317,-7.311062,-5.848520,-1.871457,8.119887,0.587659,-5.430178,-4.704462,5.115789,0.568766,5.909732,-2.155228,-7.343281,9.929978,8.911244,8.690347,-2.694764,-5.689324,-4.830238,-2.628446,7.529838,8.805692,3.340405,-2.873860,-6.507105,6.373049,1.912982,-0.755321,9.470595,8.838738,-7.313888,-5.825574,-5.901109,5.056682,6.495080,-0.401797,4.152550,3.566829,1.289484,2.355308,9.887595,-5.408222,2.484212,-6.093791,-6.692787,0.175467,9.817659,5.319657,-3.264277,-0.460468,-8.781056,4.521213,-1.718321,3.071684,-2.931264,5.725332,8.728386,9.605597,-1.390429,-0.156649,6.218997,9.547652,8.316697,-1.566135,-4.036834,-6.299822,9.152240,-4.071707,-0.271906,-7.410317,8.817697,-5.287044,6.080115,6.089137,-8.181683,-1.172424,7.339421,-9.292132,6.178730,6.630464,1.472008,-0.535242,0.682220,-8.953439,-9.281204,-5.262202,-3.577524,5.519937,-6.230166,5.800201,-2.024181,-8.825825,-9.207501,-2.457134,9.052014,2.045197,3.006169,-7.721343,-6.758398,-4.476489,2.401005,-3.857730,-9.588945,8.901925,-5.762482,9.524470,-5.763632,4.876506,-0.954932,-3.393452,8.787065,-9.777309,-5.979906,5.461997,9.339838,4.513566,-1.712934,-5.188323,4.174176,-6.167465,-7.171914,-6.036941,0.777215,5.254200,-3.646833,-5.582090,0.130658,-8.169098,0.054908,0.700082,-6.721321,7.571726,-8.628991,4.484571,3.470743,-7.705483,9.432061,-5.726451,-2.764432,-7.177115,-2.111175,-6.946056,3.821638,2.789055,-8.339322,7.050598,2.708704,6.555221,-9.799360,-6.221835,-3.084753,3.566003,2.890079,9.757569,-9.640031,-3.535155,-7.223579,-7.378667,-2.573904,-3.963472,-3.357065,2.709503,-4.619947,-0.352328,6.941370,-5.289268], dtype = "float32")#candidate|6491|(1092,)|const|float32
call_6489 = relay.TupleGetItem(func_3619_call(relay.reshape(const_6490.astype('int8'), [14, 7, 10]), relay.reshape(const_6490.astype('int8'), [14, 7, 10]), relay.reshape(const_6491.astype('float32'), [1092,]), ), 0)
call_6492 = relay.TupleGetItem(func_3623_call(relay.reshape(const_6490.astype('int8'), [14, 7, 10]), relay.reshape(const_6490.astype('int8'), [14, 7, 10]), relay.reshape(const_6491.astype('float32'), [1092,]), ), 0)
output = relay.Tuple([uop_6487,call_6489,const_6490,const_6491,])
output2 = relay.Tuple([uop_6487,call_6492,const_6490,const_6491,])
func_6493 = relay.Function([var_6486,], output)
mod['func_6493'] = func_6493
mod = relay.transform.InferType()(mod)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6494 = relay.var("var_6494", dtype = "float32", shape = (6, 15, 14))#candidate|6494|(6, 15, 14)|var|float32
func_6493_call = mutated_mod.get_global_var('func_6493')
call_6495 = func_6493_call(var_6494)
output = call_6495
func_6496 = relay.Function([var_6494], output)
mutated_mod['func_6496'] = func_6496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3643_call = mutated_mod.get_global_var('func_3643')
call_6519 = relay.TupleGetItem(func_3642_call(), 0)
call_6520 = relay.TupleGetItem(func_3643_call(), 0)
output = call_6519
output2 = call_6520
func_6525 = relay.Function([], output)
mod['func_6525'] = func_6525
mod = relay.transform.InferType()(mod)
output = func_6525()
func_6526 = relay.Function([], output)
mutated_mod['func_6526'] = func_6526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4531_call = mod.get_global_var('func_4531')
func_4533_call = mutated_mod.get_global_var('func_4533')
call_6567 = func_4531_call()
call_6568 = func_4531_call()
output = call_6567
output2 = call_6568
func_6594 = relay.Function([], output)
mod['func_6594'] = func_6594
mod = relay.transform.InferType()(mod)
output = func_6594()
func_6595 = relay.Function([], output)
mutated_mod['func_6595'] = func_6595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4091_call = mod.get_global_var('func_4091')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_6652 = func_4091_call()
call_6653 = func_4091_call()
output = call_6652
output2 = call_6653
func_6661 = relay.Function([], output)
mod['func_6661'] = func_6661
mod = relay.transform.InferType()(mod)
output = func_6661()
func_6662 = relay.Function([], output)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4969_call = mod.get_global_var('func_4969')
func_4971_call = mutated_mod.get_global_var('func_4971')
call_6663 = relay.TupleGetItem(func_4969_call(), 0)
call_6664 = relay.TupleGetItem(func_4971_call(), 0)
output = relay.Tuple([call_6663,])
output2 = relay.Tuple([call_6664,])
func_6685 = relay.Function([], output)
mod['func_6685'] = func_6685
mod = relay.transform.InferType()(mod)
output = func_6685()
func_6686 = relay.Function([], output)
mutated_mod['func_6686'] = func_6686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mod.get_global_var('func_5231')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_6702 = relay.TupleGetItem(func_5231_call(), 0)
call_6703 = relay.TupleGetItem(func_5232_call(), 0)
output = call_6702
output2 = call_6703
func_6706 = relay.Function([], output)
mod['func_6706'] = func_6706
mod = relay.transform.InferType()(mod)
mutated_mod['func_6706'] = func_6706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6706_call = mutated_mod.get_global_var('func_6706')
call_6707 = func_6706_call()
output = call_6707
func_6708 = relay.Function([], output)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6042_call = mod.get_global_var('func_6042')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_6735 = relay.TupleGetItem(func_6042_call(), 0)
call_6736 = relay.TupleGetItem(func_6044_call(), 0)
func_4747_call = mod.get_global_var('func_4747')
func_4748_call = mutated_mod.get_global_var('func_4748')
call_6767 = relay.TupleGetItem(func_4747_call(), 0)
call_6768 = relay.TupleGetItem(func_4748_call(), 0)
func_6272_call = mod.get_global_var('func_6272')
func_6274_call = mutated_mod.get_global_var('func_6274')
call_6771 = relay.TupleGetItem(func_6272_call(), 0)
call_6772 = relay.TupleGetItem(func_6274_call(), 0)
output = relay.Tuple([call_6735,call_6767,call_6771,])
output2 = relay.Tuple([call_6736,call_6768,call_6772,])
func_6795 = relay.Function([], output)
mod['func_6795'] = func_6795
mod = relay.transform.InferType()(mod)
mutated_mod['func_6795'] = func_6795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6795_call = mutated_mod.get_global_var('func_6795')
call_6796 = func_6795_call()
output = call_6796
func_6797 = relay.Function([], output)
mutated_mod['func_6797'] = func_6797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4747_call = mod.get_global_var('func_4747')
func_4748_call = mutated_mod.get_global_var('func_4748')
call_6823 = relay.TupleGetItem(func_4747_call(), 3)
call_6824 = relay.TupleGetItem(func_4748_call(), 3)
func_5967_call = mod.get_global_var('func_5967')
func_5969_call = mutated_mod.get_global_var('func_5969')
call_6844 = relay.TupleGetItem(func_5967_call(), 0)
call_6845 = relay.TupleGetItem(func_5969_call(), 0)
func_3351_call = mod.get_global_var('func_3351')
func_3352_call = mutated_mod.get_global_var('func_3352')
call_6864 = func_3351_call()
call_6865 = func_3351_call()
output = relay.Tuple([call_6823,call_6844,call_6864,])
output2 = relay.Tuple([call_6824,call_6845,call_6865,])
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
output = func_6871()
func_6872 = relay.Function([], output)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4702_call = mod.get_global_var('func_4702')
func_4703_call = mutated_mod.get_global_var('func_4703')
call_6880 = relay.TupleGetItem(func_4702_call(), 1)
call_6881 = relay.TupleGetItem(func_4703_call(), 1)
uop_6883 = relay.cosh(call_6880.astype('float64')) # shape=(13, 6, 15)
uop_6885 = relay.cosh(call_6881.astype('float64')) # shape=(13, 6, 15)
output = relay.Tuple([uop_6883,])
output2 = relay.Tuple([uop_6885,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_410() -> Tensor[(4, 6, 6), bool] {
  %0 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %0.0
}

def @func_10910() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) {
  %1 = cast(-2.48252f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %2 = reshape(%1, newshape=[]) /* ty=float32 */;
  %3 = @func_2239(%2) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
  %4 = @func_10888() /* ty=Tensor[(4, 6, 6), bool] */;
  %5 = %3.3;
  %6 = @func_9733() /* ty=Tensor[(4, 6, 6), float64] */;
  (%4, %5, -2.48252f /* ty=float32 */, %6)
}

def @func_4421() -> Tensor[(4, 6, 6), bool] {
  %7 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %7.0
}

def @func_1059() -> Tensor[(4, 6, 6), bool] {
  %8 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %8.1
}

def @func_2851() -> Tensor[(4, 6, 6), float64] {
  %9 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %9.1
}

def @func_7537() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) {
  %10 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %11 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %12 = %10.0;
  %13 = @func_7025() /* ty=Tensor[(4, 6, 6), float64] */;
  (%11, %12, %13)
}

def @func_10695() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %14 = @func_8028() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %15 = %14.0;
  %16 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  (%15, %16)
}

def @func_8871() -> (Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) {
  %17 = @func_8290() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %18 = @func_8638() /* ty=Tensor[(3, 15, 2), float64] */;
  %19 = %17.1;
  (%18, %19)
}

def @func_9756() -> Tensor[(4, 6, 6), bool] {
  %20 = @func_8580() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
  %20.0
}

def @func_8466() -> Tensor[(4, 6, 6), bool] {
  %21 = @func_6978() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %21.1
}

def @func_8850(%var_8821: Tensor[(16, 15, 15), bool], %var_8822: Tensor[(16, 15, 15), bool]) -> (Tensor[(16, 15, 15), bool], Tensor[(16, 15, 15), float64]) {
  %22 = cast(%var_8822, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
  %23 = shape_of(%var_8821, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_8821, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = logical_and(%24, %25) /* ty=Tensor[(16, 15, 15), bool] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 15, 15), bool] */, dtype="int64") /* ty=Tensor[(16, 15, 15), int64] */;
  %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%26, dtype="int64") /* ty=Tensor[(16, 15, 15), int64] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %31 = bitwise_and(%29, %30) /* ty=Tensor[(16, 15, 15), int64] */;
  %32 = cast(%31, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
  %33 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%26, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %36 = cast(%26, dtype="float64") /* ty=Tensor[(16, 15, 15), float64] */;
  %37 = less_equal(%34, %35) /* ty=Tensor[(16, 15, 15), bool] */;
  %38 = acosh(%36) /* ty=Tensor[(16, 15, 15), float64] */;
  (%37, %38)
}

def @func_3517() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) {
  %39 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %40 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %41 = %39.0;
  %42 = %40.0;
  (%41, %42)
}

def @func_6378() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %43 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %44 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
  %45 = %43.2;
  (%44, %45)
}

def @func_7158() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) {
  %46 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %47 = @func_4013() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %48 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %49 = @func_6036() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) */;
  %50 = %49.0;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %53 = reshape(%52, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %54 = @func_1329(%53) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) */;
  %55 = %46.0;
  %56 = %47.0;
  %57 = %48.0;
  %58 = asin(%51) /* ty=Tensor[(6, 7, 2), float32] */;
  %59 = %54.5;
  (%55, %56, %57, %58, %59, meta[relay.Constant][1] /* ty=Tensor[(1120), uint32] */)
}

def @func_6184() -> Tensor[(4, 6, 6), bool] {
  %60 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
  %60.0
}

def @func_11932() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %61 = @func_10199() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) */;
  %62 = @func_9937() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %63 = %61.2;
  %64 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %65 = %62.0;
  (%63, %64, %65)
}

def @func_9957() -> Tensor[(14, 10, 3), bool] {
  %66 = @func_9258() /* ty=(Tensor[(14, 10, 3), bool],) */;
  %66.0
}

def @func_6273(%var_6269: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) {
  %67 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %68 = cast(%var_6269, dtype="float32") /* ty=float32 */;
  %69 = reshape(%68, newshape=[]) /* ty=float32 */;
  %70 = @func_3646(%69) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) */;
  %71 = %67.1;
  %72 = %70.2;
  (%71, %72, %var_6269)
}

def @func_10127(%var_10066: Tensor[(6, 7, 2), bool]) -> (Tensor[(6, 7, 2), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %73 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %74 = %73.2;
  %75 = cast(%var_10066, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%74, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %79 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %80 = equal(%77, %78) /* ty=Tensor[(6, 7, 2), bool] */;
  %81 = @func_2100() /* ty=Tensor[(4, 6, 6), bool] */;
  %82 = %79.1;
  (%80, %81, %82)
}

def @func_7893() -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %83 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %84 = @func_2959() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %85 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %86 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %87 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %88 = %83.0;
  %89 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
  %90 = %84.0;
  %91 = %85.0;
  %92 = %86.0;
  %93 = %87.1;
  (%88, %89, %90, %91, %92, %93)
}

def @func_667() -> (Tensor[(4, 6, 6), bool],) {
  %94 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %95 = %94.0;
  (%95,)
}

def @func_1372(%var_1366: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) {
  %96 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %97 = %96.0;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %99 = cos(%98) /* ty=Tensor[(4, 6, 6), float32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%99, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %104 = cast(%var_1366, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %105 = cast(%var_1366, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %106 = reshape(%104, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %107 = reshape(%105, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %108 = @func_1149(%106, %107) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %109 = logical_and(%102, %103) /* ty=Tensor[(4, 6, 6), bool] */;
  %110 = %108.0;
  (%109, %110, %var_1366)
}

def @func_9438() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %111 = @func_5831() /* ty=Tensor[(4, 6, 6), bool] */;
  %112 = cast(%111, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %113 = reshape(%112, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
  %114 = @func_1195(%113) /* ty=(Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) */;
  %115 = %114.1;
  (%111, %115)
}

def @func_138() -> (Tensor[(4, 6, 6), bool],) {
  %116 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %117 = %116.0;
  (%117,)
}

def @func_4321() -> Tensor[(4, 6, 6), bool] {
  %118 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %118.0
}

def @func_1475(%var_1463: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) {
  %119 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %122 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %123 = reshape(%122, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %124 = @func_1372(%123) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) */;
  %125 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %126 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %127 = reshape(%125, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %128 = reshape(%126, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %129 = @func_1149(%127, %128) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %130 = log2(%121) /* ty=Tensor[(4, 6, 6), float32] */;
  %131 = %124.0;
  %132 = %129.0;
  (%130, %131, %var_1463, %132)
}

def @func_1757(%var_1721: Tensor[(2, 5, 4), float32], %var_1751: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) {
  %133 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %134 = cast(%var_1721, dtype="float32") /* ty=Tensor[(2, 5, 4), float32] */;
  %135 = exp(%134) /* ty=Tensor[(2, 5, 4), float32] */;
  %136 = cast(%var_1721, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%135, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %140 = cast(%var_1751, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %141 = reshape(%140, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
  %142 = @func_829(%141) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
  %143 = %133.0;
  %144 = power(%138, %139) /* ty=Tensor[(2, 5, 4), float64] */;
  %145 = %142.0;
  (%143, %144, %145, %var_1751)
}

def @func_2689() -> Tensor[(4, 6, 6), bool] {
  @func_410() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4235() -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %146 = @func_2851() /* ty=Tensor[(4, 6, 6), float64] */;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %148 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %149 = @func_4013() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %150 = acosh(%147) /* ty=Tensor[(4, 6, 6), float64] */;
  %151 = %148.0;
  %152 = %149.0;
  (%150, %151, %152)
}

def @func_8580() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %153 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %154 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %155 = %153.1;
  %156 = %154.0;
  (%155, %156)
}

def @func_2375(%var_2346: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32], Tensor[(40), float32], Tensor[(40), float32], Tensor[(280, 4), float64], Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool]) {
  %157 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %158 = cast(meta[relay.Constant][2] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %159 = reshape(%158, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %160 = @func_2012(%159) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %161 = cast(meta[relay.Constant][3] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %162 = cast(%var_2346, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %163 = reshape(%161, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %164 = reshape(%162, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float64] */;
  %165 = @func_2282(%163, %164) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) */;
  %166 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %167 = cast(%var_2346, dtype="uint32") /* ty=Tensor[(280, 4), uint32] */;
  %168 = reshape(%167, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %169 = @func_1475(%168) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) */;
  %170 = %157.0;
  %171 = %160.1;
  %172 = %165.2;
  %173 = %166.0;
  %174 = %169.3;
  (%170, %171, meta[relay.Constant][2] /* ty=Tensor[(420), float32] */, %172, meta[relay.Constant][3] /* ty=Tensor[(40), float32] */, %var_2346, %173, %174)
}

def @func_10544() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) {
  %175 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %176 = @func_7639() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %177 = %175.2;
  %178 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  %179 = %176.0;
  (%177, %178, %179)
}

def @func_686(%var_671: Tensor[(16, 4, 14), float64]) -> (Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %180 = cast(%var_671, dtype="float64") /* ty=Tensor[(16, 4, 14), float64] */;
  %181 = acosh(%180) /* ty=Tensor[(16, 4, 14), float64] */;
  %182 = cast(%181, dtype="float64") /* ty=Tensor[(16, 4, 14), float64] */;
  %183 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %184 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %185 = acos(%182) /* ty=Tensor[(16, 4, 14), float64] */;
  %186 = %183.0;
  %187 = %184.0;
  (%185, %186, %187)
}

def @func_6784() -> Tensor[(4, 6, 6), bool] {
  %188 = @func_4366() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %188.0
}

def @func_3372() -> Tensor[(4, 6, 6), bool] {
  %189 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %189.1
}

def @func_3359(%var_3349: Tensor[(10, 11, 11), uint8], %var_3350: Tensor[(10, 11, 11), uint8]) -> Tensor[(10, 11, 11), bool] {
  %190 = cast(%var_3350, dtype="bool") /* ty=Tensor[(10, 11, 11), bool] */;
  %191 = shape_of(%var_3349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_3349, dtype="bool") /* ty=Tensor[(10, 11, 11), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%192, %193) /* ty=Tensor[(10, 11, 11), bool] */
}

def @func_9390() -> Tensor[(4, 6, 6), bool] {
  @func_4203() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_10867() -> (Tensor[(4, 6, 6), bool],) {
  %194 = @func_10544() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) */;
  %195 = %194.0;
  (%195,)
}

def @func_2539() -> (Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) {
  %196 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %197 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %198 = log10(%196) /* ty=Tensor[(4, 13, 15), float64] */;
  %199 = %197.0;
  (%198, %199)
}

def @func_8334() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %200 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %201 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %202 = %200.0;
  %203 = %201.0;
  %204 = @func_7407() /* ty=Tensor[(4, 6, 6), bool] */;
  (%202, %203, %204)
}

def @func_4963() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %205 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
  %206 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %207 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %208 = %205.1;
  %209 = %206.0;
  %210 = %207.0;
  (%208, %209, %210)
}

def @func_4401(%var_4380: Tensor[(4, 1, 1), float32], %var_4392: Tensor[(1, 1120), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) {
  %211 = cast(%var_4392, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %212 = reshape(%211, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
  %213 = @func_829(%212) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
  %214 = cast(%var_4380, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
  %215 = exp(%214) /* ty=Tensor[(4, 1, 1), float32] */;
  %216 = cast(%var_4392, dtype="float32") /* ty=Tensor[(1, 1120), float32] */;
  %217 = cast(%215, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
  %218 = %213.0;
  %219 = power(%216, %217) /* ty=Tensor[(4, 1, 1120), float32] */;
  (%218, %219)
}

def @func_11775() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %220 = @func_10854() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %221 = @func_4321() /* ty=Tensor[(4, 6, 6), bool] */;
  %222 = %220.0;
  (%221, %222)
}

def @func_4013() -> (Tensor[(4, 6, 6), bool],) {
  %223 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  (%223,)
}

def @func_2100() -> Tensor[(4, 6, 6), bool] {
  %224 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %224.0
}

def @func_8098() -> (Tensor[(4, 6, 6), bool],) {
  %225 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %226 = %225.0;
  (%226,)
}

def @func_380(%var_243: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
  %227 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %228 = %227.0;
  %229 = cast(%var_243, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %233 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %234 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %235 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %236 = %235.0;
  %237 = cast(%var_243, dtype="int32") /* ty=Tensor[(4, 6, 6), int32] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="int32") /* ty=Tensor[(4, 6, 6), int32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %241 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %242 = %241.0;
  %243 = cast(%242, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %244 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %245 = power(%231, %232) /* ty=Tensor[(4, 6, 6), float64] */;
  %246 = %233.0;
  %247 = %234.0;
  %248 = bitwise_xor(%239, %240) /* ty=Tensor[(4, 6, 6), int32] */;
  %249 = asin(%243) /* ty=Tensor[(4, 6, 6), float64] */;
  %250 = %244.0;
  (%245, %246, %247, %248, %249, %250)
}

def @func_432() -> Tensor[(4, 6, 6), bool] {
  %251 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %251.0
}

def @func_4979(%var_4971: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), float64],) {
  %252 = cast(%var_4971, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %253 = cosh(%252) /* ty=Tensor[(13, 8, 9), float64] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %255 = acosh(%254) /* ty=Tensor[(13, 8, 9), float64] */;
  (%255,)
}

def @func_5632(%var_5620: Tensor[(9, 14, 5), uint16], %var_5621: Tensor[(9, 14, 5), uint16]) -> Tensor[(9, 14, 5), uint16] {
  %256 = cast(%var_5621, dtype="uint16") /* ty=Tensor[(9, 14, 5), uint16] */;
  %257 = shape_of(%var_5620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%var_5620, dtype="uint16") /* ty=Tensor[(9, 14, 5), uint16] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%258, %259) /* ty=Tensor[(9, 14, 5), uint16] */
}

def @func_8169() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %260 = @func_7893() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %261 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %262 = %260.2;
  %263 = %261.0;
  (%262, %263)
}

def @func_6250() -> (Tensor[(4, 6, 6), bool],) {
  %264 = @func_2754() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %265 = %264.0;
  (%265,)
}

def @func_2198() -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %266 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %267 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %268 = %266.0;
  %269 = %267.0;
  (%268, %269)
}

def @func_9615(%var_9603: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float32],) {
  %270 = cast(%var_9603, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  %271 = sqrt(%270) /* ty=Tensor[(10, 3, 9), float32] */;
  (%271,)
}

def @func_10199() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) {
  %272 = cast(meta[relay.Constant][5] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %273 = reshape(%272, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %274 = @func_5558(%273) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
  %275 = @func_4421() /* ty=Tensor[(4, 6, 6), bool] */;
  %276 = %274.0;
  (%275, %276, meta[relay.Constant][5] /* ty=Tensor[(1120), uint32] */)
}

def @func_7663() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %277 = @func_7328() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %278 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %279 = %277.0;
  %280 = %278.0;
  (%279, %280)
}

def @func_10461() -> (Tensor[(4, 6, 6), bool],) {
  %281 = @func_9937() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %282 = %281.0;
  (%282,)
}

def @func_10030() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 12, 2), float32], Tensor[(4, 6, 6), bool], float32, float32) {
  %283 = @func_8098() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %284 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %285 = %284.1;
  %286 = cast(%285, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %287 = reshape(%286, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint32] */;
  %288 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %289 = cast(-7.53009f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %290 = reshape(%289, newshape=[]) /* ty=float32 */;
  %291 = @func_6273(%290) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) */;
  %292 = %283.0;
  %293 = @func_5342(%287) /* ty=Tensor[(6, 12, 2), float32] */;
  %294 = %288.0;
  %295 = %291.2;
  (%292, %285, %293, %294, %295, -7.53009f /* ty=float32 */)
}

def @func_10854() -> (Tensor[(4, 6, 6), bool],) {
  %296 = @func_8290() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %297 = %296.1;
  (%297,)
}

def @func_2139() -> (Tensor[(6, 7, 2), uint16],) {
  %298 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %299 = %298.0;
  (%299,)
}

def @func_10937() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(420), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %300 = @func_3863() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %301 = cast(meta[relay.Constant][6] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %302 = reshape(%301, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %303 = @func_2012(%302) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %304 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %305 = %300.0;
  %306 = %303.0;
  %307 = @func_9647() /* ty=Tensor[(4, 6, 6), bool] */;
  %308 = %304.0;
  (%305, %306, meta[relay.Constant][6] /* ty=Tensor[(420), float32] */, %307, %308)
}

def @func_536() -> (Tensor[(4, 6, 6), float64],) {
  %309 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %310 = %309.0;
  %311 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %313 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%310, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %316 = mod(%314, %315) /* ty=Tensor[(4, 6, 6), float64] */;
  (%316,)
}

def @func_11055() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %317 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %318 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
  %319 = %317.0;
  (%318, %319)
}

def @func_12172(%var_12120: Tensor[(1, 40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(1, 40), float32], Tensor[(6, 7, 2), float64]) {
  %320 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %321 = cast(%var_12120, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %322 = reshape(%321, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %323 = @func_5921(%322) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) */;
  %324 = %323.4;
  %325 = cast(%324, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %326 = %320.2;
  %327 = log(%325) /* ty=Tensor[(6, 7, 2), float64] */;
  (%326, %var_12120, %327)
}

def @func_3339(%var_3321: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), float64],) {
  %328 = cast(%var_3321, dtype="float64") /* ty=Tensor[(9, 8, 4), float64] */;
  %329 = log(%328) /* ty=Tensor[(9, 8, 4), float64] */;
  (%329,)
}

def @func_2993() -> (Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
  %330 = cast(meta[relay.Constant][7] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %331 = reshape(%330, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %332 = @func_1372(%331) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) */;
  %333 = @func_2851() /* ty=Tensor[(4, 6, 6), float64] */;
  %334 = %332.2;
  (%333, %334, meta[relay.Constant][7] /* ty=Tensor[(1120), uint32] */)
}

def @func_6036() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) {
  %335 = @func_3517() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) */;
  %336 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %337 = %336.0;
  %338 = @func_5597() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
  %339 = %338.1;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %341 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%337, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %344 = floor_divide(%342, %343) /* ty=Tensor[(4, 6, 6), float32] */;
  %345 = cast(%344, dtype="uint8") /* ty=Tensor[(4, 6, 6), uint8] */;
  %346 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%337, dtype="uint8") /* ty=Tensor[(4, 6, 6), uint8] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %349 = %335.0;
  %350 = bitwise_or(%347, %348) /* ty=Tensor[(4, 6, 6), uint8] */;
  (%349, %350)
}

def @func_7599() -> (Tensor[(4, 6, 6), bool],) {
  %351 = @func_6784() /* ty=Tensor[(4, 6, 6), bool] */;
  (%351,)
}

def @func_6134(%var_6104: Tensor[(15, 8, 6), float32]) -> (Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) {
  %352 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %353 = cast(%var_6104, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %354 = acosh(%353) /* ty=Tensor[(15, 8, 6), float32] */;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %356 = %352.0;
  %357 = sinh(%355) /* ty=Tensor[(15, 8, 6), float32] */;
  (%356, %357)
}

def @func_9175() -> Tensor[(4, 6, 6), bool] {
  @func_8466() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_3212() -> (Tensor[(3, 2, 3), float64],) {
  %358 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 3), float64] */;
  %359 = asinh(%358) /* ty=Tensor[(3, 2, 3), float64] */;
  (%359,)
}

def @func_3481() -> (Tensor[(4, 6, 6), bool],) {
  %360 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  (%360,)
}

def @func_8400() -> Tensor[(7, 8, 2), float32] {
  %361 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
  erf(%361) /* ty=Tensor[(7, 8, 2), float32] */
}

def @func_7639() -> (Tensor[(6, 7, 2), uint16],) {
  %362 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %363 = %362.0;
  (%363,)
}

def @func_11103() -> (Tensor[(4, 6, 6), bool],) {
  %364 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %365 = %364.2;
  (%365,)
}

def @func_8755(%var_8732: int64, %var_8733: Tensor[(15, 6, 14), int64]) -> (Tensor[(15, 6, 14), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %366 = cast(%var_8732, dtype="bool") /* ty=bool */;
  %367 = cast(%var_8733, dtype="bool") /* ty=Tensor[(15, 6, 14), bool] */;
  %368 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %369 = less(%366, %367) /* ty=Tensor[(15, 6, 14), bool] */;
  %370 = %368.0;
  %371 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  (%369, %370, %371)
}

def @func_10287() -> (Tensor[(4, 6, 6), bool],) {
  %372 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %373 = %372.0;
  (%373,)
}

def @func_4582(%var_4554: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(6, 7, 2), float64]) {
  %374 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %375 = cast(%var_4554, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %376 = reshape(%375, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %377 = @func_1329(%376) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) */;
  %378 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %379 = %374.0;
  %380 = %377.4;
  %381 = %378.0;
  (%379, %380, %var_4554, %381)
}

def @func_1149(%var_1128: Tensor[(16, 10, 7), uint32], %var_1129: Tensor[(16, 10, 7), uint32]) -> (Tensor[(16, 10, 7), bool],) {
  %382 = cast(%var_1129, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %383 = shape_of(%var_1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_1128, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = not_equal(%384, %385) /* ty=Tensor[(16, 10, 7), bool] */;
  (%386,)
}

def @func_5921(%var_5890: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) {
  %387 = @func_4366() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %388 = cast(%var_5890, dtype="float32") /* ty=Tensor[(40), float32] */;
  %389 = cast(meta[relay.Constant][10] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %390 = reshape(%388, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
  %391 = reshape(%389, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %392 = @func_1757(%390, %391) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
  %393 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %394 = %393.2;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %396 = %387.0;
  %397 = %392.0;
  %398 = sinh(%395) /* ty=Tensor[(6, 7, 2), float64] */;
  (%396, %397, %var_5890, meta[relay.Constant][10] /* ty=Tensor[(1120), float64] */, %398)
}

def @func_2239(%var_2210: float32) -> (Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %399 = cast(%var_2210, dtype="float32") /* ty=float32 */;
  %400 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 2, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %401 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %402 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %403 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %404 = subtract(%399, %400) /* ty=Tensor[(1, 2, 7), float32] */;
  %405 = %401.1;
  %406 = %402.0;
  %407 = %403.0;
  (%404, %405, %406, %407)
}

def @func_9688() -> Tensor[(4, 6, 6), bool] {
  %408 = @func_7685() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) */;
  %408.0
}

def @func_1661() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %409 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %410 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %411 = %409.0;
  %412 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_714() -> (Tensor[(4, 6, 6), bool],) {
  %414 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %415 = %414.0;
  (%415,)
}

def @func_4600() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
  %416 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %417 = @func_3129() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) */;
  %418 = %416.2;
  %419 = %417.2;
  (%418, %419)
}

def @func_1907() -> (Tensor[(4, 6, 6), bool],) {
  %420 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %421 = %420.0;
  (%421,)
}

def @func_5251(%var_5197: Tensor[(6, 10, 10), int8], %var_5198: Tensor[(6, 10, 10), int8]) -> (Tensor[(6, 10, 10), int8], Tensor[(4, 6, 6), bool]) {
  %422 = cast(%var_5198, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
  %423 = shape_of(%var_5197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_5197, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %426 = @func_5185() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %427 = bitwise_and(%424, %425) /* ty=Tensor[(6, 10, 10), int8] */;
  %428 = %426.0;
  (%427, %428)
}

def @func_11866(%var_11837: Tensor[(4, 15, 1), uint64]) -> (Tensor[(4, 15, ?), uint64], Tensor[(4, 15, 1), float32]) {
  %429 = cast(%var_11837, dtype="uint64") /* ty=Tensor[(4, 15, 1), uint64] */;
  %430 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(4, 15, 1), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 15, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 15, 1), uint64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %433 = cast(%var_11837, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %434 = bitwise_and(%431, %432) /* ty=Tensor[(4, 15, ?), uint64] */;
  %435 = erf(%433) /* ty=Tensor[(4, 15, 1), float32] */;
  (%434, %435)
}

def @func_4862() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %436 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %437 = @func_2473() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %438 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %439 = %438.0;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %441 = @func_4421() /* ty=Tensor[(4, 6, 6), bool] */;
  %442 = %436.0;
  %443 = %437.0;
  %444 = atanh(%440) /* ty=Tensor[(6, 7, 2), float64] */;
  (%441, %442, %443, %444)
}

def @func_9733() -> Tensor[(4, 6, 6), float64] {
  %445 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
  %445.0
}

def @func_7407() -> Tensor[(4, 6, 6), bool] {
  @func_6291() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11657() -> Tensor[(4, 6, 6), bool] {
  @func_9756() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_2453(%var_2415: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), uint64], Tensor[(4, 6, 6), bool]) {
  %446 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %447 = %446.0;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %449 = sigmoid(%448) /* ty=Tensor[(4, 6, 6), float64] */;
  %450 = cast(%var_2415, dtype="uint64") /* ty=Tensor[(4, 6, 6), uint64] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="uint64") /* ty=Tensor[(4, 6, 6), uint64] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %454 = subtract(%452, %453) /* ty=Tensor[(4, 6, 6), uint64] */;
  %455 = @func_2100() /* ty=Tensor[(4, 6, 6), bool] */;
  (%454, %455)
}

def @func_2306() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %456 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %457 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %458 = %456.0;
  %459 = %457.0;
  (%458, %459)
}

def @func_11079() -> (Tensor[(4, 6, 6), bool],) {
  %460 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %461 = %460.0;
  (%461,)
}

def @func_9293(%var_9291: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  %462 = cast(%var_9291, dtype="float32") /* ty=Tensor[(420), float32] */;
  %463 = reshape(%462, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %464 = @func_2012(%463) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %465 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %466 = %464.1;
  (%465, %466, %var_9291)
}

def @func_5342(%var_5331: Tensor[(6, 12, 2), uint32]) -> Tensor[(6, 12, 2), float32] {
  %467 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 12, 2), uint32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %468 = shape_of(%var_5331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_5331, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %471 = greater(%469, %470) /* ty=Tensor[(6, 12, 2), bool] */;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  acosh(%472) /* ty=Tensor[(6, 12, 2), float32] */
}

def @func_1881() -> (Tensor[(4, 6, 6), bool],) {
  %473 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %474 = %473.0;
  (%474,)
}

def @func_1525() -> (Tensor[(4, 6, 6), bool],) {
  %475 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %476 = %475.0;
  (%476,)
}

def @func_12233(%var_12221: Tensor[(5, 11, 9), float32]) -> Tensor[(5, 11, 9), float32] {
  %477 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 9), float32] */;
  %478 = shape_of(%var_12221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_12221, dtype="float32") /* ty=Tensor[(5, 11, 9), float32] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%479, %480) /* ty=Tensor[(5, 11, 9), float32] */
}

def @func_4203() -> Tensor[(4, 6, 6), bool] {
  @func_3947() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_878() -> (Tensor[(6, 7, 2), float64],) {
  %481 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %482 = log10(%481) /* ty=Tensor[(6, 7, 2), float64] */;
  (%482,)
}

def @func_9258() -> (Tensor[(14, 10, 3), bool],) {
  %483 = @func_6062() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */;
  %484 = %483.3;
  (%484,)
}

def @func_10749(%var_10709: Tensor[(5, 1, 6), float32], %var_10741: Tensor[(5, 13, 6), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(5, ?, 6), uint32], Tensor[(5, 13, 6), float32]) {
  %485 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %486 = cast(%var_10709, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %487 = exp(%486) /* ty=Tensor[(5, 1, 6), float32] */;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %489 = sinh(%488) /* ty=Tensor[(5, 1, 6), float32] */;
  %490 = cast(%var_10709, dtype="uint32") /* ty=Tensor[(5, 1, 6), uint32] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint32") /* ty=Tensor[(5, 1, 6), uint32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %494 = cast(%487, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %495 = asin(%494) /* ty=Tensor[(5, 1, 6), float64] */;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %497 = rsqrt(%496) /* ty=Tensor[(5, 1, 6), float64] */;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %499 = cast(%var_10741, dtype="float64") /* ty=Tensor[(5, 13, 6), float64] */;
  %500 = mod(%498, %499) /* ty=Tensor[(5, 13, 6), float64] */;
  %501 = cast(%500, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %502 = %485.0;
  %503 = right_shift(%492, %493) /* ty=Tensor[(5, ?, 6), uint32] */;
  %504 = acos(%501) /* ty=Tensor[(5, 13, 6), float32] */;
  (%502, %503, %504)
}

def @func_2473() -> (Tensor[(4, 6, 6), bool],) {
  %505 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  (%505,)
}

def @func_5831() -> Tensor[(4, 6, 6), bool] {
  %506 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %506.0
}

def @func_6978() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %507 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %508 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_11360() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %511 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %512 = @func_9756() /* ty=Tensor[(4, 6, 6), bool] */;
  %513 = %511.0;
  (%512, %513)
}

def @func_8595() -> Tensor[(4, 6, 6), bool] {
  %514 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %514.1
}

def @func_3272() -> (Tensor[(4, 6, 6), bool],) {
  %515 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  (%515,)
}

def @func_5558(%var_5546: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
  %516 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %517 = @func_5280() /* ty=(Tensor[(896), float32],) */;
  %518 = cast(%var_5546, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %519 = reshape(%518, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %520 = @func_1475(%519) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) */;
  %521 = %516.0;
  %522 = %517.0;
  %523 = %520.2;
  %524 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  (%521, %522, %523, %var_5546, %524)
}

def @func_7328() -> (Tensor[(4, 6, 6), bool],) {
  %525 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %526 = %525.0;
  (%526,)
}

def @func_5185() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %527 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %528 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %529 = %527.2;
  (%528, %529)
}

def @func_9064() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool], Tensor[(6, 7, 2), float32]) {
  %530 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %531 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
  %534 = @func_7368() /* ty=Tensor[(4, 6, 6), bool] */;
  %535 = %530.2;
  %536 = rsqrt(%533) /* ty=Tensor[(6, 7, 2), float32] */;
  (%534, %535, %536)
}

def @func_11133(%var_11121: Tensor[(9, 13, 9), float64]) -> Tensor[(9, 13, 9), float64] {
  %537 = cast(%var_11121, dtype="float64") /* ty=Tensor[(9, 13, 9), float64] */;
  atanh(%537) /* ty=Tensor[(9, 13, 9), float64] */
}

def @func_8527() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
  %538 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %539 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
  %540 = @func_7158() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) */;
  %541 = %538.1;
  %542 = @func_7407() /* ty=Tensor[(4, 6, 6), bool] */;
  %543 = %539.0;
  %544 = %540.5;
  (%541, %542, %543, %544)
}

def @func_11589(%var_11539: Tensor[(1, 1120), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4), float32], Tensor[(1, 1120), float64], Tensor[(1120), uint32], Tensor[(4, 1, 1120), float64], Tensor[(4, 1, 1120), float64]) {
  %545 = @func_7537() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) */;
  %546 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %547 = cast(meta[relay.Constant][16] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %548 = cast(%var_11539, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %549 = reshape(%547, newshape=[4, 1, 1]) /* ty=Tensor[(4, 1, 1), float32] */;
  %550 = reshape(%548, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
  %551 = @func_4401(%549, %550) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) */;
  %552 = %551.1;
  %553 = cast(%552, dtype="float64") /* ty=Tensor[(4, 1, 1120), float64] */;
  %554 = cast(meta[relay.Constant][16] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %555 = %546.1;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %557 = reshape(%554, newshape=[4, 1, 1]) /* ty=Tensor[(4, 1, 1), float32] */;
  %558 = reshape(%556, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
  %559 = @func_4401(%557, %558) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) */;
  %560 = %559.1;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(4, 1, 1120), float64] */;
  %562 = %545.2;
  %563 = @func_6184() /* ty=Tensor[(4, 6, 6), bool] */;
  %564 = sin(%553) /* ty=Tensor[(4, 1, 1120), float64] */;
  %565 = acos(%561) /* ty=Tensor[(4, 1, 1120), float64] */;
  (%562, %563, meta[relay.Constant][16] /* ty=Tensor[(4), float32] */, %var_11539, %555, %564, %565)
}

def @func_8481() -> Tensor[(6, 7, 2), bool] {
  %566 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %566.2
}

def @func_8638() -> Tensor[(3, 15, 2), float64] {
  %567 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
  %568 = atanh(%567) /* ty=Tensor[(3, 15, 2), float64] */;
  %569 = cast(%568, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
  %570 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %573 = logical_or(%571, %572) /* ty=Tensor[(3, 15, 2), bool] */;
  %574 = cast(%573, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
  %575 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %578 = floor_divide(%576, %577) /* ty=Tensor[(3, 15, 2), float64] */;
  %579 = cast(%578, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
  exp(%579) /* ty=Tensor[(3, 15, 2), float64] */
}

def @func_9533() -> (Tensor[(4, 6, 6), bool],) {
  %580 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %581 = %580.2;
  (%581,)
}

def @func_10888() -> Tensor[(4, 6, 6), bool] {
  %582 = @func_10650() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) */;
  %582.0
}

def @func_5472() -> (Tensor[(4, 6, 6), bool],) {
  %583 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  (%583,)
}

def @func_3607() -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %584 = @func_2959() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %585 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %586 = %584.3;
  %587 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %588 = %585.0;
  (%586, %587, %588)
}

def @func_555() -> (Tensor[(4, 6, 6), bool],) {
  %589 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %590 = %589.0;
  (%590,)
}

def @func_8119() -> Tensor[(4, 6, 6), bool] {
  %591 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %591.0
}

def @func_7368() -> Tensor[(4, 6, 6), bool] {
  %592 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %592.1
}

def @func_2959() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
  %593 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %594 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %595 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %596 = %594.1;
  %597 = cast(%596, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %598 = reshape(%597, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
  %599 = @func_380(%598) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
  %600 = %593.0;
  %601 = %595.1;
  %602 = %599.0;
  (%600, %596, %601, %602)
}

def @func_11314() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %603 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %604 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %605 = %603.0;
  %606 = %604.0;
  (%605, %606)
}

def @func_4366() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %607 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %608 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  (%607, %608)
}

def @func_10650() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) {
  %609 = @func_8169() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %610 = @func_6036() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) */;
  %611 = %609.0;
  %612 = @func_8119() /* ty=Tensor[(4, 6, 6), bool] */;
  %613 = %610.1;
  (%611, %612, %613)
}

def @func_10973() -> Tensor[(4, 6, 6), bool] {
  %614 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %614.1
}

def @func_11207(%var_11167: Tensor[(4, 6, 6), bool], %var_11203: Tensor[(2, 468), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 468), float64]) {
  %615 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %616 = %615.0;
  %617 = cast(%var_11167, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = cast(%var_11203, dtype="float64") /* ty=Tensor[(2, 468), float64] */;
  %622 = reshape(%621, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %623 = @func_7271(%622) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) */;
  %624 = less_equal(%619, %620) /* ty=Tensor[(4, 6, 6), bool] */;
  %625 = @func_9798() /* ty=Tensor[(4, 6, 6), float32] */;
  %626 = @func_8466() /* ty=Tensor[(4, 6, 6), bool] */;
  %627 = %623.0;
  (%624, %625, %626, %627, %var_11203)
}

def @func_11389() -> Tensor[(4, 6, 6), bool] {
  @func_7407() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11988() -> (Tensor[(4, 6, 6), bool],) {
  %628 = @func_6784() /* ty=Tensor[(4, 6, 6), bool] */;
  (%628,)
}

def @func_3646(%var_3617: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) {
  %629 = cast(%var_3617, dtype="float32") /* ty=float32 */;
  %630 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %631 = floor_mod(%629, %630) /* ty=Tensor[(9, 12, 1), float32] */;
  %632 = cast(%var_3617, dtype="uint64") /* ty=uint64 */;
  %633 = cast(%631, dtype="uint64") /* ty=Tensor[(9, 12, 1), uint64] */;
  %634 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %635 = sinh(%634) /* ty=Tensor[(9, 12, 1), float32] */;
  %636 = cast(%631, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %641 = bitwise_or(%632, %633) /* ty=Tensor[(9, 12, 1), uint64] */;
  %642 = logical_or(%638, %639) /* ty=Tensor[(9, 12, ?), bool] */;
  (%640, %641, %642)
}

def @func_5692(%var_5655: Tensor[(1120), float64]) -> (Tensor[(896), float32], Tensor[(2, 5, 4), float64], Tensor[(20, 2), float32], Tensor[(1120), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32]) {
  %643 = @func_5280() /* ty=(Tensor[(896), float32],) */;
  %644 = cast(meta[relay.Constant][19] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %645 = cast(%var_5655, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %646 = reshape(%644, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
  %647 = reshape(%645, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %648 = @func_1757(%646, %647) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
  %649 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %650 = @func_5280() /* ty=(Tensor[(896), float32],) */;
  %651 = %643.0;
  %652 = %648.1;
  %653 = %649.0;
  %654 = %650.0;
  (%651, %652, meta[relay.Constant][19] /* ty=Tensor[(20, 2), float32] */, %var_5655, %653, %654)
}

def @func_3844() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) {
  %655 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %656 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %657 = @func_3212() /* ty=(Tensor[(3, 2, 3), float64],) */;
  %658 = @func_2539() /* ty=(Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) */;
  %659 = %655.2;
  %660 = %656.0;
  %661 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %662 = %657.0;
  %663 = %658.0;
  (%659, %660, %661, %662, %663)
}

def @func_79() -> (Tensor[(4, 6, 6), bool],) {
  %664 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %665 = %664.0;
  (%665,)
}

def @func_9596(%var_9557: Tensor[(2, 448), float64], %var_9565: Tensor[(2, 448), float64], %var_9589: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 448), int16], Tensor[(420), float32], Tensor[(420), float32], Tensor[(2, 448), float32]) {
  %666 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %667 = cast(%var_9557, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %668 = reshape(%667, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
  %669 = @func_686(%668) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %670 = cast(%var_9565, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %671 = shape_of(%var_9557, dtype="int32") /* ty=Tensor[(2), int32] */;
  %672 = cast(%var_9557, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %674 = cast(%var_9589, dtype="float32") /* ty=Tensor[(420), float32] */;
  %675 = reshape(%674, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %676 = @func_9293(%675) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */;
  %677 = cast(%var_9565, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %678 = erf(%677) /* ty=Tensor[(2, 448), float64] */;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(2, 448), float32] */;
  %680 = %666.0;
  %681 = %669.2;
  %682 = subtract(%672, %673) /* ty=Tensor[(2, 448), int16] */;
  %683 = %676.2;
  %684 = sinh(%679) /* ty=Tensor[(2, 448), float32] */;
  (%680, %681, %682, %683, %var_9589, %684)
}

def @func_2754() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %685 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %686 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %687 = %685.0;
  %688 = %686.0;
  (%687, %688)
}

def @func_3863() -> (Tensor[(4, 6, 6), bool],) {
  %689 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %690 = %689.0;
  (%690,)
}

def @func_11453(%var_11403: Tensor[(15, 16, 10), float32], %var_11440: Tensor[(15, 16, 10), float64], %var_11447: Tensor[(15, 16, 10), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(15, 16, 10), bool]) {
  %691 = cast(%var_11403, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %692 = acos(%691) /* ty=Tensor[(15, 16, 10), float32] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %694 = shape_of(%var_11403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_11403, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %697 = subtract(%695, %696) /* ty=Tensor[(15, 16, 10), float64] */;
  %698 = cast(%var_11440, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %702 = cast(%var_11447, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %703 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%697, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = greater_equal(%700, %701) /* ty=Tensor[(15, 16, 10), bool] */;
  %707 = less(%704, %705) /* ty=Tensor[(15, 16, 10), bool] */;
  (%706, %707)
}

def @func_2282(%var_2266: Tensor[(40), float32], %var_2267: Tensor[(1120, 1), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) {
  %708 = @func_1907() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %709 = cast(%var_2266, dtype="float32") /* ty=Tensor[(40), float32] */;
  %710 = cast(%var_2267, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %711 = reshape(%709, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
  %712 = reshape(%710, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %713 = @func_1757(%711, %712) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
  %714 = %708.0;
  %715 = %713.0;
  (%714, %715, %var_2266, %var_2267)
}

def @func_2712() -> (Tensor[(4, 6, 6), bool],) {
  %716 = @func_1907() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %717 = %716.0;
  (%717,)
}

def @func_2012(%var_1999: Tensor[(14, 10, 3), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) {
  %718 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %719 = cast(%var_1999, dtype="float32") /* ty=Tensor[(14, 10, 3), float32] */;
  %720 = sin(%719) /* ty=Tensor[(14, 10, 3), float32] */;
  %721 = cast(%var_1999, dtype="bool") /* ty=Tensor[(14, 10, 3), bool] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="bool") /* ty=Tensor[(14, 10, 3), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = %718.0;
  %726 = less_equal(%723, %724) /* ty=Tensor[(14, 10, 3), bool] */;
  (%725, %726)
}

def @func_11803() -> Tensor[(1120), uint32] {
  %727 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
  %727.0
}

def @func_6062() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  %728 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %729 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %730 = cast(meta[relay.Constant][20] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %731 = reshape(%730, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %732 = @func_2012(%731) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %733 = %728.0;
  %734 = %729.0;
  %735 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %736 = %732.1;
  (%733, %734, %735, %736, meta[relay.Constant][20] /* ty=Tensor[(420), float32] */)
}

def @func_3947() -> Tensor[(4, 6, 6), bool] {
  %737 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %737.0
}

def @func_11679() -> Tensor[(4, 6, 6), bool] {
  %738 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %738.2
}

def @func_8290() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %739 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %740 = %739.1;
  %741 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
  %742 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  (%740, %741, %742)
}

def @func_5870() -> Tensor[(4, 6, 6), uint32] {
  %743 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %744 = %743.2;
  %745 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %746 = cast(%745, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %747 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%744, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%748, %749) /* ty=Tensor[(4, 6, 6), uint32] */
}

def @func_6695() -> (Tensor[(1120), uint32],) {
  %750 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %751 = %750.1;
  (%751,)
}

def @func_2633(%var_2577: Tensor[(6, 10, 8), float64], %var_2578: Tensor[(6, 10, 8), float64], %var_2629: Tensor[(896), float64]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16], Tensor[(6, 10, 8), float64], Tensor[(16, 4, 14), float64], Tensor[(896), float64]) {
  %752 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %753 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %754 = cast(%var_2578, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %755 = shape_of(%var_2577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%var_2577, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %758 = floor_divide(%756, %757) /* ty=Tensor[(6, 10, 8), float64] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %760 = cast(%var_2629, dtype="float64") /* ty=Tensor[(896), float64] */;
  %761 = reshape(%760, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
  %762 = @func_686(%761) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %763 = %752.0;
  %764 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %765 = %753.0;
  %766 = log10(%759) /* ty=Tensor[(6, 10, 8), float64] */;
  %767 = %762.0;
  (%763, %764, %765, %766, %767, %var_2629)
}

def @func_6884() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %768 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %769 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %770 = %768.0;
  %771 = %769.0;
  (%770, %771)
}

def @func_1225() -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) {
  %772 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %773 = %772.0;
  %774 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 7, 2), float64] */, dtype="uint16") /* ty=Tensor[(6, 7, 2), uint16] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="uint16") /* ty=Tensor[(6, 7, 2), uint16] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %778 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %779 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 7, 2), float64] */, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %780 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%773, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %783 = subtract(%776, %777) /* ty=Tensor[(6, 7, 2), uint16] */;
  %784 = %778.0;
  %785 = logical_or(%781, %782) /* ty=Tensor[(6, 7, 2), bool] */;
  (%783, %784, %785)
}

def @func_1329(%var_1299: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) {
  %786 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
  %787 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %788 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %789 = reshape(%787, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %790 = reshape(%788, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %791 = @func_1149(%789, %790) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %792 = %791.0;
  %793 = cast(%792, dtype="uint32") /* ty=Tensor[(16, 10, 7), uint32] */;
  %794 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %795 = reshape(%793, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %796 = reshape(%794, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %797 = @func_1149(%795, %796) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %798 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %799 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %800 = %799.0;
  %801 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 7, 2), float64] */, dtype="uint64") /* ty=Tensor[(6, 7, 2), uint64] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="uint64") /* ty=Tensor[(6, 7, 2), uint64] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %805 = %786.0;
  %806 = %797.0;
  %807 = %798.0;
  %808 = bitwise_and(%803, %804) /* ty=Tensor[(6, 7, 2), uint64] */;
  (%805, %792, %var_1299, %806, %807, %808)
}

def @func_8795() -> Tensor[(4, 6, 6), bool] {
  %809 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %809.2
}

def @func_5845() -> (Tensor[(4, 6, 6), bool],) {
  %810 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
  (%810,)
}

def @func_4729() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %811 = @func_2754() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %812 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %813 = %811.1;
  %814 = %812.2;
  (%813, %814)
}

def @func_3780() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) {
  %815 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %816 = cast(meta[relay.Constant][23] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
  %817 = reshape(%816, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
  %818 = @func_686(%817) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %819 = cast(meta[relay.Constant][23] /* ty=Tensor[(896), float64] */, dtype="float32") /* ty=Tensor[(896), float32] */;
  %820 = @func_2473() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %821 = %815.0;
  %822 = %818.1;
  %823 = erf(%819) /* ty=Tensor[(896), float32] */;
  %824 = %820.0;
  (%821, %822, %823, %824)
}

def @func_6925() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %825 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
  %826 = @func_5472() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %827 = %825.2;
  %828 = %826.0;
  (%827, %828)
}

def @func_11647(%var_11616: uint16, %var_11617: Tensor[(13, 13, 16), uint16]) -> (Tensor[(13, 13, 16), uint16], float32) {
  %829 = cast(%var_11616, dtype="uint16") /* ty=uint16 */;
  %830 = cast(%var_11617, dtype="uint16") /* ty=Tensor[(13, 13, 16), uint16] */;
  %831 = @func_10910() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) */;
  %832 = multiply(%829, %830) /* ty=Tensor[(13, 13, 16), uint16] */;
  %833 = %831.2;
  (%832, %833)
}

def @func_10276() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %834 = @func_7663() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %835 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %836 = @func_8580() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
  %837 = @func_8871() /* ty=(Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) */;
  %838 = %834.0;
  %839 = %835.0;
  %840 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
  %841 = %836.1;
  %842 = %837.1;
  (%838, %839, %840, %841, %842)
}

def @func_10146() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %843 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %844 = %843.0;
  %845 = @func_9798() /* ty=Tensor[(4, 6, 6), float32] */;
  (%844, %845)
}

def @func_3129() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) {
  %846 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %847 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1120), float64] */, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %848 = reshape(%847, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
  %849 = @func_829(%848) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
  %850 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  %851 = cast(%850, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %852 = reshape(%851, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
  %853 = @func_1195(%852) /* ty=(Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) */;
  %854 = %846.0;
  %855 = @func_2689() /* ty=Tensor[(4, 6, 6), bool] */;
  %856 = %849.0;
  %857 = %853.0;
  (%854, %855, %850, %856, meta[relay.Constant][24] /* ty=Tensor[(1, 1120), float64] */, %857)
}

def @func_635() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
  %858 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %859 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %862 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
  %863 = %858.0;
  %864 = atanh(%861) /* ty=Tensor[(4, 6, 6), float64] */;
  %865 = %862.0;
  (%863, %864, %865)
}

def @func_5597() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %866 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %867 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %868 = %866.0;
  %869 = %867.0;
  (%868, %869)
}

def @func_6543() -> (Tensor[(4, 7, 4), int8],) {
  %870 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 4), int8] */;
  %871 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 4), int8] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %874 = maximum(%872, %873) /* ty=Tensor[(4, 7, 4), int8] */;
  (%874,)
}

def @func_9268() -> Tensor[(6, 7, 2), bool] {
  @func_8481() /* ty=Tensor[(6, 7, 2), bool] */
}

def @func_4702(%var_4674: int32, %var_4675: Tensor[(11, 7, 10), int32]) -> (Tensor[(11, 7, 10), bool], Tensor[(4, 6, 6), bool]) {
  %875 = cast(%var_4674, dtype="bool") /* ty=bool */;
  %876 = cast(%var_4675, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
  %877 = cast(%var_4674, dtype="float32") /* ty=float32 */;
  %878 = reshape(%877, newshape=[]) /* ty=float32 */;
  %879 = @func_3646(%878) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) */;
  %880 = greater_equal(%875, %876) /* ty=Tensor[(11, 7, 10), bool] */;
  %881 = %879.0;
  (%880, %881)
}

def @func_6332() -> Tensor[(4, 6, 6), bool] {
  @func_2100() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_7554() -> Tensor[(4, 6, 6), bool] {
  %882 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %882.1
}

def @func_9153() -> (Tensor[(4, 6, 6), bool],) {
  %883 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %884 = %883.0;
  (%884,)
}

def @func_1942() -> (Tensor[(4, 6, 6), bool],) {
  %885 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %886 = %885.0;
  (%886,)
}

def @func_9937() -> (Tensor[(4, 6, 6), bool],) {
  %887 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  (%887,)
}

def @func_43() -> (Tensor[(4, 6, 6), bool],) {
  %888 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %889 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %890 = logical_or(%888, %889) /* ty=Tensor[(4, 6, 6), bool] */;
  (%890,)
}

def @func_9647() -> Tensor[(4, 6, 6), bool] {
  %891 = @func_9357() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %891.0
}

def @func_807() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %892 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %893 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %894 = %892.0;
  %895 = %893.0;
  (%894, %895)
}

def @func_6509(%var_6409: Tensor[(4, 6, 6), bool], %var_6468: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), int64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120, 1), float64], Tensor[(40), float32], Tensor[(2, 560), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(6, 7, 2), float64]) {
  %896 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
  %897 = %896.0;
  %898 = cast(%var_6409, dtype="int64") /* ty=Tensor[(4, 6, 6), int64] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="int64") /* ty=Tensor[(4, 6, 6), int64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %902 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %903 = cast(%var_6468, dtype="float32") /* ty=Tensor[(40), float32] */;
  %904 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 560), float64] */, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %905 = reshape(%903, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %906 = reshape(%904, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float64] */;
  %907 = @func_2282(%905, %906) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) */;
  %908 = @func_5280() /* ty=(Tensor[(896), float32],) */;
  %909 = @func_3129() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) */;
  %910 = add(%900, %901) /* ty=Tensor[(4, 6, 6), int64] */;
  %911 = %902.0;
  %912 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  %913 = %907.3;
  %914 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
  %915 = %908.0;
  %916 = %909.0;
  (%910, %911, %912, %913, %var_6468, meta[relay.Constant][28] /* ty=Tensor[(2, 560), float64] */, %914, %915, %916)
}

def @func_829(%var_815: Tensor[(10, 16, 7), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
  %917 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 16, 7), float64] */, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %918 = shape_of(%var_815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_815, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %921 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %922 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %923 = greater_equal(%919, %920) /* ty=Tensor[(10, 16, 7), bool] */;
  %924 = %921.2;
  %925 = %922.0;
  (%923, %924, %925)
}

def @func_8028() -> (Tensor[(4, 6, 6), bool],) {
  %926 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %927 = %926.1;
  (%927,)
}

def @func_7685() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) {
  %928 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %929 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 360), float32] */, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %930 = reshape(%929, newshape=[15, 8, 6]) /* ty=Tensor[(15, 8, 6), float32] */;
  %931 = @func_6134(%930) /* ty=(Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) */;
  %932 = %928.0;
  %933 = %931.0;
  (%932, %933, meta[relay.Constant][30] /* ty=Tensor[(2, 360), float32] */)
}

def @func_1610(%var_1603: uint64, %var_1604: Tensor[(11, 16, 15), uint64]) -> (Tensor[(11, 16, 15), uint64],) {
  %934 = cast(%var_1603, dtype="uint64") /* ty=uint64 */;
  %935 = cast(%var_1604, dtype="uint64") /* ty=Tensor[(11, 16, 15), uint64] */;
  %936 = maximum(%934, %935) /* ty=Tensor[(11, 16, 15), uint64] */;
  (%936,)
}

def @func_7025() -> Tensor[(4, 6, 6), float64] {
  %937 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
  %938 = %937.1;
  %939 = cast(%938, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  tan(%939) /* ty=Tensor[(4, 6, 6), float64] */
}

def @func_12066() -> Tensor[(4, 6, 6), bool] {
  @func_6784() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11522(%var_11485: Tensor[(14, 11, 7), float64]) -> (Tensor[(14, 11, 7), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %940 = cast(%var_11485, dtype="float64") /* ty=Tensor[(14, 11, 7), float64] */;
  %941 = @func_3863() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %942 = @func_10867() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %943 = sigmoid(%940) /* ty=Tensor[(14, 11, 7), float64] */;
  %944 = %941.0;
  %945 = %942.0;
  (%943, %944, %945)
}

def @func_5280() -> (Tensor[(896), float32],) {
  %946 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
  %947 = %946.2;
  (%947,)
}

def @func_8723(%var_8718: Tensor[(16, 12, 3), float64], %var_8719: Tensor[(16, 12, 3), float64]) -> Tensor[(16, 12, 3), float64] {
  %948 = cast(%var_8719, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
  %949 = shape_of(%var_8718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_8718, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%950, %951) /* ty=Tensor[(16, 12, 3), float64] */
}

def @func_9357() -> (Tensor[(4, 6, 6), bool],) {
  %952 = @func_6291() /* ty=Tensor[(4, 6, 6), bool] */;
  (%952,)
}

def @func_1704() -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %953 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  %954 = cast(%953, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %955 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %956 = log10(%954) /* ty=Tensor[(4, 6, 6), float32] */;
  %957 = %955.0;
  (%956, %957)
}

def @func_1093() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %958 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %959 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %960 = %958.0;
  (%959, %960)
}

def @func_8081() -> (Tensor[(4, 6, 6), bool],) {
  %961 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %962 = %961.0;
  (%962,)
}

def @func_8042(%var_8038: Tensor[(36, 26), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(936), float64], Tensor[(36, 26), float64]) {
  %963 = cast(%var_8038, dtype="float64") /* ty=Tensor[(36, 26), float64] */;
  %964 = reshape(%963, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %965 = @func_7271(%964) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) */;
  %966 = @func_6291() /* ty=Tensor[(4, 6, 6), bool] */;
  %967 = %965.2;
  (%966, %967, %var_8038)
}

def @main(%var_12261: Tensor[(9, 12, 11), float64]) -> Tensor[(9, 12, 11), float64] {
  %968 = cast(-4.15319f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %969 = cast(%var_12261, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  maximum(%968, %969) /* ty=Tensor[(9, 12, 11), float64] */
}

def @func_9798() -> Tensor[(4, 6, 6), float32] {
  %970 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %970.0
}

def @func_5378() -> Tensor[(4, 6, 6), bool] {
  %971 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
  %971.1
}

def @func_7271(%var_7234: Tensor[(936), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) {
  %972 = cast(%var_7234, dtype="float64") /* ty=Tensor[(936), float64] */;
  %973 = reshape(%972, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
  %974 = @func_4979(%973) /* ty=(Tensor[(13, 8, 9), float64],) */;
  %975 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %976 = %974.0;
  (%975, %976, %var_7234)
}

def @func_6291() -> Tensor[(4, 6, 6), bool] {
  %977 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %977.0
}

def @func_1195(%var_1179: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) {
  %978 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %979 = %978.0;
  %980 = cast(%var_1179, dtype="int16") /* ty=Tensor[(4, 6, 6), int16] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%979, dtype="int16") /* ty=Tensor[(4, 6, 6), int16] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %984 = right_shift(%982, %983) /* ty=Tensor[(4, 6, 6), int16] */;
  %985 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  (%984, %985)
}

def @func_11610() -> (Tensor[(6, 7, 2), uint16],) {
  %986 = @func_7639() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %987 = %986.0;
  (%987,)
}

def @func_10785(%var_10781: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 8, 8), bool]) {
  %988 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %989 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 8), float32] */;
  %990 = tan(%989) /* ty=Tensor[(4, 1, 8), float32] */;
  %991 = cast(%990, dtype="bool") /* ty=Tensor[(4, 1, 8), bool] */;
  %992 = cast(%var_10781, dtype="bool") /* ty=Tensor[(4, 8, 8), bool] */;
  %993 = %988.0;
  %994 = less(%991, %992) /* ty=Tensor[(4, 8, 8), bool] */;
  (%993, %994)
}

def @func_11272() -> (Tensor[(4, 6, 6), bool],) {
  %995 = @func_9175() /* ty=Tensor[(4, 6, 6), bool] */;
  (%995,)
}

def @func_4065() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %996 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %997 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %998 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %999 = %996.0;
  %1000 = %997.0;
  %1001 = %998.0;
  (%999, %1000, %1001)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11458(%var_11455: Tensor[(15, 16, 10), float32], %var_11456: Tensor[(15, 16, 10), float64], %var_11457: Tensor[(15, 16, 10), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(15, 16, 10), bool]) {
  @func_11453(%var_11455, %var_11456, %var_11457) /* ty=(Tensor[(15, 16, 10), bool], Tensor[(15, 16, 10), bool]) */
}

def @func_11315() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %4 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %0 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %1 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %2 = %0.0;
    %3 = %1.0;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_11657() -> Tensor[(4, 6, 6), bool] {
  @func_9756() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11647(%var_11616: uint16, %var_11617: Tensor[(13, 13, 16), uint16]) -> (Tensor[(13, 13, 16), uint16], float32) {
  %5 = cast(%var_11616, dtype="uint16") /* ty=uint16 */;
  %6 = cast(%var_11617, dtype="uint16") /* ty=Tensor[(13, 13, 16), uint16] */;
  %7 = @func_10910() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) */;
  %8 = multiply(%5, %6) /* ty=Tensor[(13, 13, 16), uint16] */;
  %9 = %7.2;
  (%8, %9)
}

def @func_12174(%var_12173: Tensor[(1, 40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(1, 40), float32], Tensor[(6, 7, 2), float64]) {
  %18 = fn (%var_12120: Tensor[(1, 40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(1, 40), float32], Tensor[(6, 7, 2), float64]) {
    %10 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %11 = cast(%var_12120, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
    %12 = reshape(%11, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %13 = @func_5921(%12) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) */;
    %14 = %13.4;
    %15 = cast(%14, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
    %16 = %10.2;
    %17 = log(%15) /* ty=Tensor[(6, 7, 2), float64] */;
    (%16, %var_12120, %17)
  };
  %18(%var_12173) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(1, 40), float32], Tensor[(6, 7, 2), float64]) */
}

def @func_9392() -> Tensor[(4, 6, 6), bool] {
  @func_9390() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_2375(%var_2346: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32], Tensor[(40), float32], Tensor[(40), float32], Tensor[(280, 4), float64], Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool]) {
  %19 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %21 = reshape(%20, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %22 = @func_2012(%21) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %24 = cast(%var_2346, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %25 = reshape(%23, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %26 = reshape(%24, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float64] */;
  %27 = @func_2282(%25, %26) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) */;
  %28 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %29 = cast(%var_2346, dtype="uint32") /* ty=Tensor[(280, 4), uint32] */;
  %30 = reshape(%29, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %31 = @func_1475(%30) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) */;
  %32 = %19.0;
  %33 = %22.1;
  %34 = %27.2;
  %35 = %28.0;
  %36 = %31.3;
  (%32, %33, meta[relay.Constant][0] /* ty=Tensor[(420), float32] */, %34, meta[relay.Constant][1] /* ty=Tensor[(40), float32] */, %var_2346, %35, %36)
}

def @func_4404(%var_4402: Tensor[(4, 1, 1), float32], %var_4403: Tensor[(1, 1120), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) {
  %46 = fn (%var_4380: Tensor[(4, 1, 1), float32], %var_4392: Tensor[(1, 1120), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) {
    %37 = cast(%var_4392, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %38 = reshape(%37, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
    %39 = @func_829(%38) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
    %40 = cast(%var_4380, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
    %41 = exp(%40) /* ty=Tensor[(4, 1, 1), float32] */;
    %42 = cast(%var_4392, dtype="float32") /* ty=Tensor[(1, 1120), float32] */;
    %43 = cast(%41, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
    %44 = %39.0;
    %45 = power(%42, %43) /* ty=Tensor[(4, 1, 1120), float32] */;
    (%44, %45)
  };
  %46(%var_4402, %var_4403) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) */
}

def @func_10911() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) {
  %53 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) {
    %47 = cast(-2.48252f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %48 = reshape(%47, newshape=[]) /* ty=float32 */;
    %49 = @func_2239(%48) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
    %50 = @func_10888() /* ty=Tensor[(4, 6, 6), bool] */;
    %51 = %49.3;
    %52 = @func_9733() /* ty=Tensor[(4, 6, 6), float64] */;
    (%50, %51, -2.48252f /* ty=float32 */, %52)
  };
  %53() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], float32, Tensor[(4, 6, 6), float64]) */
}

def @func_10788(%var_10786: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 8, 8), bool]) {
  @func_10785(%var_10786) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 8, 8), bool]) */
}

def @func_714() -> (Tensor[(4, 6, 6), bool],) {
  %54 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %55 = %54.0;
  (%55,)
}

def @func_688(%var_687: Tensor[(16, 4, 14), float64]) -> (Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %64 = fn (%var_671: Tensor[(16, 4, 14), float64]) -> (Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %56 = cast(%var_671, dtype="float64") /* ty=Tensor[(16, 4, 14), float64] */;
    %57 = acosh(%56) /* ty=Tensor[(16, 4, 14), float64] */;
    %58 = cast(%57, dtype="float64") /* ty=Tensor[(16, 4, 14), float64] */;
    %59 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %60 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %61 = acos(%58) /* ty=Tensor[(16, 4, 14), float64] */;
    %62 = %59.0;
    %63 = %60.0;
    (%61, %62, %63)
  };
  %64(%var_687) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_432() -> Tensor[(4, 6, 6), bool] {
  %65 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %65.0
}

def @func_10546() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) {
  @func_10544() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) */
}

def @func_2139() -> (Tensor[(6, 7, 2), uint16],) {
  %66 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %67 = %66.0;
  (%67,)
}

def @func_556() -> (Tensor[(4, 6, 6), bool],) {
  %70 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %68 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %69 = %68.0;
    (%69,)
  };
  %70() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_3212() -> (Tensor[(3, 2, 3), float64],) {
  %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 2, 3), float64] */;
  %72 = asinh(%71) /* ty=Tensor[(3, 2, 3), float64] */;
  (%72,)
}

def @func_1477(%var_1476: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) {
  %87 = fn (%var_1463: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) {
    %73 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
    %74 = %73.0;
    %75 = cast(%74, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
    %76 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %77 = reshape(%76, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
    %78 = @func_1372(%77) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) */;
    %79 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %80 = cast(%var_1463, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %81 = reshape(%79, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
    %82 = reshape(%80, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
    %83 = @func_1149(%81, %82) /* ty=(Tensor[(16, 10, 7), bool],) */;
    %84 = log2(%75) /* ty=Tensor[(4, 6, 6), float32] */;
    %85 = %78.0;
    %86 = %83.0;
    (%84, %85, %var_1463, %86)
  };
  %87(%var_1476) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) */
}

def @func_3949() -> Tensor[(4, 6, 6), bool] {
  @func_3947() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_5872() -> Tensor[(4, 6, 6), uint32] {
  @func_5870() /* ty=Tensor[(4, 6, 6), uint32] */
}

def @func_8044(%var_8043: Tensor[(36, 26), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(936), float64], Tensor[(36, 26), float64]) {
  %93 = fn (%var_8038: Tensor[(36, 26), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(936), float64], Tensor[(36, 26), float64]) {
    %88 = cast(%var_8038, dtype="float64") /* ty=Tensor[(36, 26), float64] */;
    %89 = reshape(%88, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %90 = @func_7271(%89) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) */;
    %91 = @func_6291() /* ty=Tensor[(4, 6, 6), bool] */;
    %92 = %90.2;
    (%91, %92, %var_8038)
  };
  %93(%var_8043) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(936), float64], Tensor[(36, 26), float64]) */
}

def @func_1332(%var_1330: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) {
  @func_1329(%var_1330) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) */
}

def @func_2960() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
  %104 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
    %94 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
    %95 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %96 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %97 = %95.1;
    %98 = cast(%97, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
    %99 = reshape(%98, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
    %100 = @func_380(%99) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
    %101 = %94.0;
    %102 = %96.1;
    %103 = %100.0;
    (%101, %97, %102, %103)
  };
  %104() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */
}

def @func_5281() -> (Tensor[(896), float32],) {
  %107 = fn () -> (Tensor[(896), float32],) {
    %105 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
    %106 = %105.2;
    (%106,)
  };
  %107() /* ty=(Tensor[(896), float32],) */
}

def @func_8528() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
  %115 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
    %108 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %109 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
    %110 = @func_7158() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) */;
    %111 = %108.1;
    %112 = @func_7407() /* ty=Tensor[(4, 6, 6), bool] */;
    %113 = %109.0;
    %114 = %110.5;
    (%111, %112, %113, %114)
  };
  %115() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(1120), uint32]) */
}

def @func_9535() -> (Tensor[(4, 6, 6), bool],) {
  @func_9533() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_6251() -> (Tensor[(4, 6, 6), bool],) {
  %118 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %116 = @func_2754() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %117 = %116.0;
    (%117,)
  };
  %118() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8082() -> (Tensor[(4, 6, 6), bool],) {
  %121 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %119 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %120 = %119.0;
    (%120,)
  };
  %121() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2633(%var_2577: Tensor[(6, 10, 8), float64], %var_2578: Tensor[(6, 10, 8), float64], %var_2629: Tensor[(896), float64]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16], Tensor[(6, 10, 8), float64], Tensor[(16, 4, 14), float64], Tensor[(896), float64]) {
  %122 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %123 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %124 = cast(%var_2578, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %125 = shape_of(%var_2577, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_2577, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = floor_divide(%126, %127) /* ty=Tensor[(6, 10, 8), float64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %130 = cast(%var_2629, dtype="float64") /* ty=Tensor[(896), float64] */;
  %131 = reshape(%130, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
  %132 = @func_686(%131) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %133 = %122.0;
  %134 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %135 = %123.0;
  %136 = log10(%129) /* ty=Tensor[(6, 10, 8), float64] */;
  %137 = %132.0;
  (%133, %134, %135, %136, %137, %var_2629)
}

def @func_10032() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 12, 2), float32], Tensor[(4, 6, 6), bool], float32, float32) {
  @func_10030() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 12, 2), float32], Tensor[(4, 6, 6), bool], float32, float32) */
}

def @func_1525() -> (Tensor[(4, 6, 6), bool],) {
  %138 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %139 = %138.0;
  (%139,)
}

def @func_4706(%var_4704: int32, %var_4705: Tensor[(11, 7, 10), int32]) -> (Tensor[(11, 7, 10), bool], Tensor[(4, 6, 6), bool]) {
  @func_4702(%var_4704, %var_4705) /* ty=(Tensor[(11, 7, 10), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_11207(%var_11167: Tensor[(4, 6, 6), bool], %var_11203: Tensor[(2, 468), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 468), float64]) {
  %140 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %141 = %140.0;
  %142 = cast(%var_11167, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %146 = cast(%var_11203, dtype="float64") /* ty=Tensor[(2, 468), float64] */;
  %147 = reshape(%146, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %148 = @func_7271(%147) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) */;
  %149 = less_equal(%144, %145) /* ty=Tensor[(4, 6, 6), bool] */;
  %150 = @func_9798() /* ty=Tensor[(4, 6, 6), float32] */;
  %151 = @func_8466() /* ty=Tensor[(4, 6, 6), bool] */;
  %152 = %148.0;
  (%149, %150, %151, %152, %var_11203)
}

def @func_1061() -> Tensor[(4, 6, 6), bool] {
  @func_1059() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11776() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %156 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %153 = @func_10854() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %154 = @func_4321() /* ty=Tensor[(4, 6, 6), bool] */;
    %155 = %153.0;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_9959() -> Tensor[(14, 10, 3), bool] {
  @func_9957() /* ty=Tensor[(14, 10, 3), bool] */
}

def @func_5870() -> Tensor[(4, 6, 6), uint32] {
  %157 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %158 = %157.2;
  %159 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %160 = cast(%159, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %161 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%158, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%162, %163) /* ty=Tensor[(4, 6, 6), uint32] */
}

def @func_7894() -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %175 = fn () -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %164 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
    %165 = @func_2959() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %166 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %167 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %168 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %169 = %164.0;
    %170 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
    %171 = %165.0;
    %172 = %166.0;
    %173 = %167.0;
    %174 = %168.1;
    (%169, %170, %171, %172, %173, %174)
  };
  %175() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_8335() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %181 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %176 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %177 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %178 = %176.0;
    %179 = %177.0;
    %180 = @func_7407() /* ty=Tensor[(4, 6, 6), bool] */;
    (%178, %179, %180)
  };
  %181() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_10277() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %191 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
    %182 = @func_7663() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %183 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %184 = @func_8580() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
    %185 = @func_8871() /* ty=(Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) */;
    %186 = %182.0;
    %187 = %183.0;
    %188 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
    %189 = %184.1;
    %190 = %185.1;
    (%186, %187, %188, %189, %190)
  };
  %191() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */
}

def @func_7537() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) {
  %192 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %193 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %194 = %192.0;
  %195 = @func_7025() /* ty=Tensor[(4, 6, 6), float64] */;
  (%193, %194, %195)
}

def @func_6696() -> (Tensor[(1120), uint32],) {
  %198 = fn () -> (Tensor[(1120), uint32],) {
    %196 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
    %197 = %196.1;
    (%197,)
  };
  %198() /* ty=(Tensor[(1120), uint32],) */
}

def @func_10544() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) {
  %199 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %200 = @func_7639() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %201 = %199.2;
  %202 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  %203 = %200.0;
  (%201, %202, %203)
}

def @func_10753(%var_10751: Tensor[(5, 1, 6), float32], %var_10752: Tensor[(5, 13, 6), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(5, ?, 6), uint32], Tensor[(5, 13, 6), float32]) {
  @func_10749(%var_10751, %var_10752) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(5, ?, 6), uint32], Tensor[(5, 13, 6), float32]) */
}

def @func_9939() -> (Tensor[(4, 6, 6), bool],) {
  @func_9937() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_7407() -> Tensor[(4, 6, 6), bool] {
  @func_6291() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4066() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %210 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %204 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %205 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %206 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %207 = %204.0;
    %208 = %205.0;
    %209 = %206.0;
    (%207, %208, %209)
  };
  %210() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_4582(%var_4554: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(6, 7, 2), float64]) {
  %211 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %212 = cast(%var_4554, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %213 = reshape(%212, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %214 = @func_1329(%213) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) */;
  %215 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %216 = %211.0;
  %217 = %214.4;
  %218 = %215.0;
  (%216, %217, %var_4554, %218)
}

def @func_8723(%var_8718: Tensor[(16, 12, 3), float64], %var_8719: Tensor[(16, 12, 3), float64]) -> Tensor[(16, 12, 3), float64] {
  %219 = cast(%var_8719, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
  %220 = shape_of(%var_8718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%var_8718, dtype="float64") /* ty=Tensor[(16, 12, 3), float64] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%221, %222) /* ty=Tensor[(16, 12, 3), float64] */
}

def @func_2712() -> (Tensor[(4, 6, 6), bool],) {
  %223 = @func_1907() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %224 = %223.0;
  (%224,)
}

def @func_5599() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  @func_5597() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */
}

def @func_4013() -> (Tensor[(4, 6, 6), bool],) {
  %225 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  (%225,)
}

def @func_3518() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) {
  %230 = fn () -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) {
    %226 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
    %227 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
    %228 = %226.0;
    %229 = %227.0;
    (%228, %229)
  };
  %230() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) */
}

def @func_11932() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %231 = @func_10199() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) */;
  %232 = @func_9937() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %233 = %231.2;
  %234 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %235 = %232.0;
  (%233, %234, %235)
}

def @func_9258() -> (Tensor[(14, 10, 3), bool],) {
  %236 = @func_6062() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */;
  %237 = %236.3;
  (%237,)
}

def @func_9688() -> Tensor[(4, 6, 6), bool] {
  %238 = @func_7685() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) */;
  %238.0
}

def @func_2012(%var_1999: Tensor[(14, 10, 3), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) {
  %239 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %240 = cast(%var_1999, dtype="float32") /* ty=Tensor[(14, 10, 3), float32] */;
  %241 = sin(%240) /* ty=Tensor[(14, 10, 3), float32] */;
  %242 = cast(%var_1999, dtype="bool") /* ty=Tensor[(14, 10, 3), bool] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="bool") /* ty=Tensor[(14, 10, 3), bool] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %246 = %239.0;
  %247 = less_equal(%244, %245) /* ty=Tensor[(14, 10, 3), bool] */;
  (%246, %247)
}

def @func_1944() -> (Tensor[(4, 6, 6), bool],) {
  @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_10201() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) {
  @func_10199() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) */
}

def @func_1942() -> (Tensor[(4, 6, 6), bool],) {
  %248 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %249 = %248.0;
  (%249,)
}

def @func_5187() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_5185() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_7639() -> (Tensor[(6, 7, 2), uint16],) {
  %250 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %251 = %250.0;
  (%251,)
}

def @func_11591(%var_11590: Tensor[(1, 1120), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4), float32], Tensor[(1, 1120), float64], Tensor[(1120), uint32], Tensor[(4, 1, 1120), float64], Tensor[(4, 1, 1120), float64]) {
  %273 = fn (%var_11539: Tensor[(1, 1120), float64]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4), float32], Tensor[(1, 1120), float64], Tensor[(1120), uint32], Tensor[(4, 1, 1120), float64], Tensor[(4, 1, 1120), float64]) {
    %252 = @func_7537() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) */;
    %253 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
    %254 = cast(meta[relay.Constant][3] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %255 = cast(%var_11539, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %256 = reshape(%254, newshape=[4, 1, 1]) /* ty=Tensor[(4, 1, 1), float32] */;
    %257 = reshape(%255, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
    %258 = @func_4401(%256, %257) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) */;
    %259 = %258.1;
    %260 = cast(%259, dtype="float64") /* ty=Tensor[(4, 1, 1120), float64] */;
    %261 = cast(meta[relay.Constant][3] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %262 = %253.1;
    %263 = cast(%262, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %264 = reshape(%261, newshape=[4, 1, 1]) /* ty=Tensor[(4, 1, 1), float32] */;
    %265 = reshape(%263, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
    %266 = @func_4401(%264, %265) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 1, 1120), float32]) */;
    %267 = %266.1;
    %268 = cast(%267, dtype="float64") /* ty=Tensor[(4, 1, 1120), float64] */;
    %269 = %252.2;
    %270 = @func_6184() /* ty=Tensor[(4, 6, 6), bool] */;
    %271 = sin(%260) /* ty=Tensor[(4, 1, 1120), float64] */;
    %272 = acos(%268) /* ty=Tensor[(4, 1, 1120), float64] */;
    (%269, %270, meta[relay.Constant][3] /* ty=Tensor[(4), float32] */, %var_11539, %262, %271, %272)
  };
  %273(%var_11590) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4), float32], Tensor[(1, 1120), float64], Tensor[(1120), uint32], Tensor[(4, 1, 1120), float64], Tensor[(4, 1, 1120), float64]) */
}

def @func_3373() -> Tensor[(4, 6, 6), bool] {
  %275 = fn () -> Tensor[(4, 6, 6), bool] {
    %274 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %274.1
  };
  %275() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_5379() -> Tensor[(4, 6, 6), bool] {
  %277 = fn () -> Tensor[(4, 6, 6), bool] {
    %276 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
    %276.1
  };
  %277() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9798() -> Tensor[(4, 6, 6), float32] {
  %278 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %278.0
}

def @func_538() -> (Tensor[(4, 6, 6), float64],) {
  @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */
}

def @func_11611() -> (Tensor[(6, 7, 2), uint16],) {
  %281 = fn () -> (Tensor[(6, 7, 2), uint16],) {
    %279 = @func_7639() /* ty=(Tensor[(6, 7, 2), uint16],) */;
    %280 = %279.0;
    (%280,)
  };
  %281() /* ty=(Tensor[(6, 7, 2), uint16],) */
}

def @func_10130(%var_10128: Tensor[(6, 7, 2), bool]) -> (Tensor[(6, 7, 2), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_10127(%var_10128) /* ty=(Tensor[(6, 7, 2), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_1882() -> (Tensor[(4, 6, 6), bool],) {
  %284 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %282 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %283 = %282.0;
    (%283,)
  };
  %284() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_5597() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %285 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %286 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %287 = %285.0;
  %288 = %286.0;
  (%287, %288)
}

def @func_4964() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %295 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %289 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
    %290 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %291 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %292 = %289.1;
    %293 = %290.0;
    %294 = %291.0;
    (%292, %293, %294)
  };
  %295() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_4601() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
  %300 = fn () -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
    %296 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
    %297 = @func_3129() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) */;
    %298 = %296.2;
    %299 = %297.2;
    (%298, %299)
  };
  %300() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */
}

def @func_7554() -> Tensor[(4, 6, 6), bool] {
  %301 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %301.1
}

def @func_808() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %306 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %302 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %303 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %304 = %302.0;
    %305 = %303.0;
    (%304, %305)
  };
  %306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_3214() -> (Tensor[(3, 2, 3), float64],) {
  @func_3212() /* ty=(Tensor[(3, 2, 3), float64],) */
}

def @func_11080() -> (Tensor[(4, 6, 6), bool],) {
  %309 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %307 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %308 = %307.0;
    (%308,)
  };
  %309() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_43() -> (Tensor[(4, 6, 6), bool],) {
  %310 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %311 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %312 = logical_or(%310, %311) /* ty=Tensor[(4, 6, 6), bool] */;
  (%312,)
}

def @func_2689() -> Tensor[(4, 6, 6), bool] {
  @func_410() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4236() -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %320 = fn () -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %313 = @func_2851() /* ty=Tensor[(4, 6, 6), float64] */;
    %314 = cast(%313, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    %315 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %316 = @func_4013() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %317 = acosh(%314) /* ty=Tensor[(4, 6, 6), float64] */;
    %318 = %315.0;
    %319 = %316.0;
    (%317, %318, %319)
  };
  %320() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_3339(%var_3321: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), float64],) {
  %321 = cast(%var_3321, dtype="float64") /* ty=Tensor[(9, 8, 4), float64] */;
  %322 = log(%321) /* ty=Tensor[(9, 8, 4), float64] */;
  (%322,)
}

def @func_6925() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %323 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
  %324 = @func_5472() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %325 = %323.2;
  %326 = %324.0;
  (%325, %326)
}

def @func_8873() -> (Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) {
  @func_8871() /* ty=(Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) */
}

def @func_12066() -> Tensor[(4, 6, 6), bool] {
  @func_6784() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4731() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_4729() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_10785(%var_10781: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 8, 8), bool]) {
  %327 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %328 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 8), float32] */;
  %329 = tan(%328) /* ty=Tensor[(4, 1, 8), float32] */;
  %330 = cast(%329, dtype="bool") /* ty=Tensor[(4, 1, 8), bool] */;
  %331 = cast(%var_10781, dtype="bool") /* ty=Tensor[(4, 8, 8), bool] */;
  %332 = %327.0;
  %333 = less(%330, %331) /* ty=Tensor[(4, 8, 8), bool] */;
  (%332, %333)
}

def @func_10889() -> Tensor[(4, 6, 6), bool] {
  %335 = fn () -> Tensor[(4, 6, 6), bool] {
    %334 = @func_10650() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) */;
    %334.0
  };
  %335() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6544() -> (Tensor[(4, 7, 4), int8],) {
  %341 = fn () -> (Tensor[(4, 7, 4), int8],) {
    %336 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 4), int8] */;
    %337 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %338 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(4, 7, 4), int8] */;
    %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %340 = maximum(%338, %339) /* ty=Tensor[(4, 7, 4), int8] */;
    (%340,)
  };
  %341() /* ty=(Tensor[(4, 7, 4), int8],) */
}

def @func_4423() -> Tensor[(4, 6, 6), bool] {
  @func_4421() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4205() -> Tensor[(4, 6, 6), bool] {
  @func_4203() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9390() -> Tensor[(4, 6, 6), bool] {
  @func_4203() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_7685() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) {
  %342 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %343 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 360), float32] */, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %344 = reshape(%343, newshape=[15, 8, 6]) /* ty=Tensor[(15, 8, 6), float32] */;
  %345 = @func_6134(%344) /* ty=(Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) */;
  %346 = %342.0;
  %347 = %345.0;
  (%346, %347, meta[relay.Constant][8] /* ty=Tensor[(2, 360), float32] */)
}

def @func_1197(%var_1196: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) {
  %356 = fn (%var_1179: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) {
    %348 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %349 = %348.0;
    %350 = cast(%var_1179, dtype="int16") /* ty=Tensor[(4, 6, 6), int16] */;
    %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %352 = cast(%349, dtype="int16") /* ty=Tensor[(4, 6, 6), int16] */;
    %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %354 = right_shift(%352, %353) /* ty=Tensor[(4, 6, 6), int16] */;
    %355 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
    (%354, %355)
  };
  %356(%var_1196) /* ty=(Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) */
}

def @func_9957() -> Tensor[(14, 10, 3), bool] {
  %357 = @func_9258() /* ty=(Tensor[(14, 10, 3), bool],) */;
  %357.0
}

def @func_9617(%var_9616: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float32],) {
  %360 = fn (%var_9603: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float32],) {
    %358 = cast(%var_9603, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
    %359 = sqrt(%358) /* ty=Tensor[(10, 3, 9), float32] */;
    (%359,)
  };
  %360(%var_9616) /* ty=(Tensor[(10, 3, 9), float32],) */
}

def @func_5921(%var_5890: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) {
  %361 = @func_4366() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %362 = cast(%var_5890, dtype="float32") /* ty=Tensor[(40), float32] */;
  %363 = cast(meta[relay.Constant][9] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %364 = reshape(%362, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
  %365 = reshape(%363, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %366 = @func_1757(%364, %365) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
  %367 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %368 = %367.2;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %370 = %361.0;
  %371 = %366.0;
  %372 = sinh(%369) /* ty=Tensor[(6, 7, 2), float64] */;
  (%370, %371, %var_5890, meta[relay.Constant][9] /* ty=Tensor[(1120), float64] */, %372)
}

def @func_2539() -> (Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) {
  %373 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %374 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %375 = log10(%373) /* ty=Tensor[(4, 13, 15), float64] */;
  %376 = %374.0;
  (%375, %376)
}

def @func_2851() -> Tensor[(4, 6, 6), float64] {
  %377 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
  %377.1
}

def @func_10650() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) {
  %378 = @func_8169() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %379 = @func_6036() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) */;
  %380 = %378.0;
  %381 = @func_8119() /* ty=Tensor[(4, 6, 6), bool] */;
  %382 = %379.1;
  (%380, %381, %382)
}

def @func_1527() -> (Tensor[(4, 6, 6), bool],) {
  @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_9177() -> Tensor[(4, 6, 6), bool] {
  @func_9175() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_3844() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) {
  %383 = @func_2993() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */;
  %384 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %385 = @func_3212() /* ty=(Tensor[(3, 2, 3), float64],) */;
  %386 = @func_2539() /* ty=(Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) */;
  %387 = %383.2;
  %388 = %384.0;
  %389 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %390 = %385.0;
  %391 = %386.0;
  (%387, %388, %389, %390, %391)
}

def @func_7687() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) {
  @func_7685() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64], Tensor[(2, 360), float32]) */
}

def @func_10652() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) {
  @func_10650() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), uint8]) */
}

def @func_11104() -> (Tensor[(4, 6, 6), bool],) {
  %394 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %392 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %393 = %392.2;
    (%393,)
  };
  %394() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_4585(%var_4583: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(6, 7, 2), float64]) {
  @func_4582(%var_4583) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(6, 7, 2), float64]) */
}

def @func_2015(%var_2013: Tensor[(14, 10, 3), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) {
  @func_2012(%var_2013) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */
}

def @func_2456(%var_2454: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), uint64], Tensor[(4, 6, 6), bool]) {
  @func_2453(%var_2454) /* ty=(Tensor[(4, 6, 6), uint64], Tensor[(4, 6, 6), bool]) */
}

def @func_411() -> Tensor[(4, 6, 6), bool] {
  %396 = fn () -> Tensor[(4, 6, 6), bool] {
    %395 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %395.0
  };
  %396() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9438() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %397 = @func_5831() /* ty=Tensor[(4, 6, 6), bool] */;
  %398 = cast(%397, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
  %399 = reshape(%398, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
  %400 = @func_1195(%399) /* ty=(Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) */;
  %401 = %400.1;
  (%397, %401)
}

def @func_9734() -> Tensor[(4, 6, 6), float64] {
  %403 = fn () -> Tensor[(4, 6, 6), float64] {
    %402 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
    %402.0
  };
  %403() /* ty=Tensor[(4, 6, 6), float64] */
}

def @func_382(%var_381: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
  %428 = fn (%var_243: Tensor[(4, 6, 6), bool]) -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
    %404 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %405 = %404.0;
    %406 = cast(%var_243, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    %407 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %408 = cast(%405, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %410 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %411 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %412 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %413 = %412.0;
    %414 = cast(%var_243, dtype="int32") /* ty=Tensor[(4, 6, 6), int32] */;
    %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %416 = cast(%413, dtype="int32") /* ty=Tensor[(4, 6, 6), int32] */;
    %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %418 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %419 = %418.0;
    %420 = cast(%419, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    %421 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %422 = power(%408, %409) /* ty=Tensor[(4, 6, 6), float64] */;
    %423 = %410.0;
    %424 = %411.0;
    %425 = bitwise_xor(%416, %417) /* ty=Tensor[(4, 6, 6), int32] */;
    %426 = asin(%420) /* ty=Tensor[(4, 6, 6), float64] */;
    %427 = %421.0;
    (%422, %423, %424, %425, %426, %427)
  };
  %428(%var_381) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), int32], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */
}

def @func_10868() -> (Tensor[(4, 6, 6), bool],) {
  %431 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %429 = @func_10544() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16]) */;
    %430 = %429.0;
    (%430,)
  };
  %431() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8099() -> (Tensor[(4, 6, 6), bool],) {
  %434 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %432 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %433 = %432.0;
    (%433,)
  };
  %434() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_10147() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %438 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
    %435 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %436 = %435.0;
    %437 = @func_9798() /* ty=Tensor[(4, 6, 6), float32] */;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */
}

def @func_1153(%var_1151: Tensor[(16, 10, 7), uint32], %var_1152: Tensor[(16, 10, 7), uint32]) -> (Tensor[(16, 10, 7), bool],) {
  @func_1149(%var_1151, %var_1152) /* ty=(Tensor[(16, 10, 7), bool],) */
}

def @func_10854() -> (Tensor[(4, 6, 6), bool],) {
  %439 = @func_8290() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %440 = %439.1;
  (%440,)
}

def @func_536() -> (Tensor[(4, 6, 6), float64],) {
  %441 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %442 = %441.0;
  %443 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %445 = shape_of(%442, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%442, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %448 = mod(%446, %447) /* ty=Tensor[(4, 6, 6), float64] */;
  (%448,)
}

def @func_1226() -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) {
  %463 = fn () -> (Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) {
    %449 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
    %450 = %449.0;
    %451 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 7, 2), float64] */, dtype="uint16") /* ty=Tensor[(6, 7, 2), uint16] */;
    %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %453 = cast(%450, dtype="uint16") /* ty=Tensor[(6, 7, 2), uint16] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %455 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %456 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 7, 2), float64] */, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
    %457 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%450, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %460 = subtract(%453, %454) /* ty=Tensor[(6, 7, 2), uint16] */;
    %461 = %455.0;
    %462 = logical_or(%458, %459) /* ty=Tensor[(6, 7, 2), bool] */;
    (%460, %461, %462)
  };
  %463() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */
}

def @func_2141() -> (Tensor[(6, 7, 2), uint16],) {
  @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */
}

def @func_8290() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %464 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %465 = %464.1;
  %466 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
  %467 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  (%465, %466, %467)
}

def @func_11211(%var_11209: Tensor[(4, 6, 6), bool], %var_11210: Tensor[(2, 468), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 468), float64]) {
  @func_11207(%var_11209, %var_11210) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 468), float64]) */
}

def @func_6513(%var_6511: Tensor[(4, 6, 6), bool], %var_6512: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), int64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120, 1), float64], Tensor[(40), float32], Tensor[(2, 560), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(6, 7, 2), float64]) {
  @func_6509(%var_6511, %var_6512) /* ty=(Tensor[(4, 6, 6), int64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120, 1), float64], Tensor[(40), float32], Tensor[(2, 560), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(6, 7, 2), float64]) */
}

def @func_1329(%var_1299: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) {
  %468 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
  %469 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %470 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %471 = reshape(%469, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %472 = reshape(%470, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %473 = @func_1149(%471, %472) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="uint32") /* ty=Tensor[(16, 10, 7), uint32] */;
  %476 = cast(%var_1299, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %477 = reshape(%475, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %478 = reshape(%476, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
  %479 = @func_1149(%477, %478) /* ty=(Tensor[(16, 10, 7), bool],) */;
  %480 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %481 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %482 = %481.0;
  %483 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 7, 2), float64] */, dtype="uint64") /* ty=Tensor[(6, 7, 2), uint64] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="uint64") /* ty=Tensor[(6, 7, 2), uint64] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %487 = %468.0;
  %488 = %479.0;
  %489 = %480.0;
  %490 = bitwise_and(%485, %486) /* ty=Tensor[(6, 7, 2), uint64] */;
  (%487, %474, %var_1299, %488, %489, %490)
}

def @func_11272() -> (Tensor[(4, 6, 6), bool],) {
  %491 = @func_9175() /* ty=Tensor[(4, 6, 6), bool] */;
  (%491,)
}

def @func_3781() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) {
  %502 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) {
    %492 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
    %493 = cast(meta[relay.Constant][13] /* ty=Tensor[(896), float64] */, dtype="float64") /* ty=Tensor[(896), float64] */;
    %494 = reshape(%493, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
    %495 = @func_686(%494) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %496 = cast(meta[relay.Constant][13] /* ty=Tensor[(896), float64] */, dtype="float32") /* ty=Tensor[(896), float32] */;
    %497 = @func_2473() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %498 = %492.0;
    %499 = %495.1;
    %500 = erf(%496) /* ty=Tensor[(896), float32] */;
    %501 = %497.0;
    (%498, %499, %500, %501)
  };
  %502() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */
}

def @func_3481() -> (Tensor[(4, 6, 6), bool],) {
  %503 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  (%503,)
}

def @func_10939() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(420), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_10937() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(420), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_2241(%var_2240: float32) -> (Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %513 = fn (%var_2210: float32) -> (Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
    %504 = cast(%var_2210, dtype="float32") /* ty=float32 */;
    %505 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 2, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
    %506 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
    %507 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %508 = @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
    %509 = subtract(%504, %505) /* ty=Tensor[(1, 2, 7), float32] */;
    %510 = %506.1;
    %511 = %507.0;
    %512 = %508.0;
    (%509, %510, %511, %512)
  };
  %513(%var_2240) /* ty=(Tensor[(1, 2, 7), float32], Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */
}

def @func_6379() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %517 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %514 = @func_4235() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %515 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
    %516 = %514.2;
    (%515, %516)
  };
  %517() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_7641() -> (Tensor[(6, 7, 2), uint16],) {
  @func_7639() /* ty=(Tensor[(6, 7, 2), uint16],) */
}

def @func_11453(%var_11403: Tensor[(15, 16, 10), float32], %var_11440: Tensor[(15, 16, 10), float64], %var_11447: Tensor[(15, 16, 10), float64]) -> (Tensor[(15, 16, 10), bool], Tensor[(15, 16, 10), bool]) {
  %518 = cast(%var_11403, dtype="float32") /* ty=Tensor[(15, 16, 10), float32] */;
  %519 = acos(%518) /* ty=Tensor[(15, 16, 10), float32] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %521 = shape_of(%var_11403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_11403, dtype="float64") /* ty=Tensor[(15, 16, 10), float64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %524 = subtract(%522, %523) /* ty=Tensor[(15, 16, 10), float64] */;
  %525 = cast(%var_11440, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %529 = cast(%var_11447, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %530 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%524, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = greater_equal(%527, %528) /* ty=Tensor[(15, 16, 10), bool] */;
  %534 = less(%531, %532) /* ty=Tensor[(15, 16, 10), bool] */;
  (%533, %534)
}

def @func_6509(%var_6409: Tensor[(4, 6, 6), bool], %var_6468: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), int64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120, 1), float64], Tensor[(40), float32], Tensor[(2, 560), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(6, 7, 2), float64]) {
  %535 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
  %536 = %535.0;
  %537 = cast(%var_6409, dtype="int64") /* ty=Tensor[(4, 6, 6), int64] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="int64") /* ty=Tensor[(4, 6, 6), int64] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %541 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %542 = cast(%var_6468, dtype="float32") /* ty=Tensor[(40), float32] */;
  %543 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 560), float64] */, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %544 = reshape(%542, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %545 = reshape(%543, newshape=[1120, 1]) /* ty=Tensor[(1120, 1), float64] */;
  %546 = @func_2282(%544, %545) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) */;
  %547 = @func_5280() /* ty=(Tensor[(896), float32],) */;
  %548 = @func_3129() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) */;
  %549 = add(%539, %540) /* ty=Tensor[(4, 6, 6), int64] */;
  %550 = %541.0;
  %551 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  %552 = %546.3;
  %553 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
  %554 = %547.0;
  %555 = %548.0;
  (%549, %550, %551, %552, %var_6468, meta[relay.Constant][15] /* ty=Tensor[(2, 560), float64] */, %553, %554, %555)
}

def @func_6038() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) {
  @func_6036() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) */
}

def @func_3272() -> (Tensor[(4, 6, 6), bool],) {
  %556 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
  (%556,)
}

def @func_7159() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) {
  %571 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) {
    %557 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %558 = @func_4013() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %559 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %560 = @func_6036() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) */;
    %561 = %560.0;
    %562 = cast(%561, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
    %563 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %564 = reshape(%563, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
    %565 = @func_1329(%564) /* ty=(Tensor[(4, 6, 6), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint64]) */;
    %566 = %557.0;
    %567 = %558.0;
    %568 = %559.0;
    %569 = asin(%562) /* ty=Tensor[(6, 7, 2), float32] */;
    %570 = %565.5;
    (%566, %567, %568, %569, %570, meta[relay.Constant][16] /* ty=Tensor[(1120), uint32] */)
  };
  %571() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float32], Tensor[(6, 7, 2), uint64], Tensor[(1120), uint32]) */
}

def @func_7368() -> Tensor[(4, 6, 6), bool] {
  %572 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %572.1
}

def @func_9800() -> Tensor[(4, 6, 6), float32] {
  @func_9798() /* ty=Tensor[(4, 6, 6), float32] */
}

def @func_2282(%var_2266: Tensor[(40), float32], %var_2267: Tensor[(1120, 1), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) {
  %573 = @func_1907() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %574 = cast(%var_2266, dtype="float32") /* ty=Tensor[(40), float32] */;
  %575 = cast(%var_2267, dtype="float64") /* ty=Tensor[(1120, 1), float64] */;
  %576 = reshape(%574, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
  %577 = reshape(%575, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %578 = @func_1757(%576, %577) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
  %579 = %573.0;
  %580 = %578.0;
  (%579, %580, %var_2266, %var_2267)
}

def @func_8170() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %585 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %581 = @func_7893() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %582 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %583 = %581.2;
    %584 = %582.0;
    (%583, %584)
  };
  %585() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_11659() -> Tensor[(4, 6, 6), bool] {
  @func_11657() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_3649(%var_3647: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) {
  @func_3646(%var_3647) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) */
}

def @func_6785() -> Tensor[(4, 6, 6), bool] {
  %587 = fn () -> Tensor[(4, 6, 6), bool] {
    %586 = @func_4366() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %586.0
  };
  %587() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6184() -> Tensor[(4, 6, 6), bool] {
  %588 = @func_3780() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(4, 6, 6), bool]) */;
  %588.0
}

def @func_434() -> Tensor[(4, 6, 6), bool] {
  @func_432() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9293(%var_9291: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  %589 = cast(%var_9291, dtype="float32") /* ty=Tensor[(420), float32] */;
  %590 = reshape(%589, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %591 = @func_2012(%590) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %592 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %593 = %591.1;
  (%592, %593, %var_9291)
}

def @func_1761(%var_1759: Tensor[(2, 5, 4), float32], %var_1760: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) {
  @func_1757(%var_1759, %var_1760) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */
}

def @func_9601(%var_9598: Tensor[(2, 448), float64], %var_9599: Tensor[(2, 448), float64], %var_9600: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 448), int16], Tensor[(420), float32], Tensor[(420), float32], Tensor[(2, 448), float32]) {
  @func_9596(%var_9598, %var_9599, %var_9600) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 448), int16], Tensor[(420), float32], Tensor[(420), float32], Tensor[(2, 448), float32]) */
}

def @func_8402() -> Tensor[(7, 8, 2), float32] {
  @func_8400() /* ty=Tensor[(7, 8, 2), float32] */
}

def @func_12068() -> Tensor[(4, 6, 6), bool] {
  @func_12066() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9596(%var_9557: Tensor[(2, 448), float64], %var_9565: Tensor[(2, 448), float64], %var_9589: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(2, 448), int16], Tensor[(420), float32], Tensor[(420), float32], Tensor[(2, 448), float32]) {
  %594 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %595 = cast(%var_9557, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %596 = reshape(%595, newshape=[16, 4, 14]) /* ty=Tensor[(16, 4, 14), float64] */;
  %597 = @func_686(%596) /* ty=(Tensor[(16, 4, 14), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %598 = cast(%var_9565, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %599 = shape_of(%var_9557, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(%var_9557, dtype="int16") /* ty=Tensor[(2, 448), int16] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %602 = cast(%var_9589, dtype="float32") /* ty=Tensor[(420), float32] */;
  %603 = reshape(%602, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %604 = @func_9293(%603) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */;
  %605 = cast(%var_9565, dtype="float64") /* ty=Tensor[(2, 448), float64] */;
  %606 = erf(%605) /* ty=Tensor[(2, 448), float64] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(2, 448), float32] */;
  %608 = %594.0;
  %609 = %597.2;
  %610 = subtract(%600, %601) /* ty=Tensor[(2, 448), int16] */;
  %611 = %604.2;
  %612 = sinh(%607) /* ty=Tensor[(2, 448), float32] */;
  (%608, %609, %610, %611, %var_9589, %612)
}

def @func_10287() -> (Tensor[(4, 6, 6), bool],) {
  %613 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %614 = %613.0;
  (%614,)
}

def @func_1613(%var_1611: uint64, %var_1612: Tensor[(11, 16, 15), uint64]) -> (Tensor[(11, 16, 15), uint64],) {
  %618 = fn (%var_1603: uint64, %var_1604: Tensor[(11, 16, 15), uint64]) -> (Tensor[(11, 16, 15), uint64],) {
    %615 = cast(%var_1603, dtype="uint64") /* ty=uint64 */;
    %616 = cast(%var_1604, dtype="uint64") /* ty=Tensor[(11, 16, 15), uint64] */;
    %617 = maximum(%615, %616) /* ty=Tensor[(11, 16, 15), uint64] */;
    (%617,)
  };
  %618(%var_1611, %var_1612) /* ty=(Tensor[(11, 16, 15), uint64],) */
}

def @func_9155() -> (Tensor[(4, 6, 6), bool],) {
  @func_9153() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2453(%var_2415: Tensor[(4, 6, 6), float64]) -> (Tensor[(4, 6, 6), uint64], Tensor[(4, 6, 6), bool]) {
  %619 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %620 = %619.0;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
  %622 = sigmoid(%621) /* ty=Tensor[(4, 6, 6), float64] */;
  %623 = cast(%var_2415, dtype="uint64") /* ty=Tensor[(4, 6, 6), uint64] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="uint64") /* ty=Tensor[(4, 6, 6), uint64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %627 = subtract(%625, %626) /* ty=Tensor[(4, 6, 6), uint64] */;
  %628 = @func_2100() /* ty=Tensor[(4, 6, 6), bool] */;
  (%627, %628)
}

def @func_1662() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %634 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %629 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %630 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %631 = %629.0;
    %632 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
    %633 = %630.0;
    (%631, %632, %633)
  };
  %634() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_9359() -> (Tensor[(4, 6, 6), bool],) {
  @func_9357() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8758(%var_8756: int64, %var_8757: Tensor[(15, 6, 14), int64]) -> (Tensor[(15, 6, 14), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %641 = fn (%var_8732: int64, %var_8733: Tensor[(15, 6, 14), int64]) -> (Tensor[(15, 6, 14), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %635 = cast(%var_8732, dtype="bool") /* ty=bool */;
    %636 = cast(%var_8733, dtype="bool") /* ty=Tensor[(15, 6, 14), bool] */;
    %637 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %638 = less(%635, %636) /* ty=Tensor[(15, 6, 14), bool] */;
    %639 = %637.0;
    %640 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
    (%638, %639, %640)
  };
  %641(%var_8756, %var_8757) /* ty=(Tensor[(15, 6, 14), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_10289() -> (Tensor[(4, 6, 6), bool],) {
  @func_10287() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2200() -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  @func_2198() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */
}

def @func_7370() -> Tensor[(4, 6, 6), bool] {
  @func_7368() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_4366() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %642 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
  %643 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  (%642, %643)
}

def @func_8796() -> Tensor[(4, 6, 6), bool] {
  %645 = fn () -> Tensor[(4, 6, 6), bool] {
    %644 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %644.2
  };
  %645() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_3646(%var_3617: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) {
  %646 = cast(%var_3617, dtype="float32") /* ty=float32 */;
  %647 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %648 = floor_mod(%646, %647) /* ty=Tensor[(9, 12, 1), float32] */;
  %649 = cast(%var_3617, dtype="uint64") /* ty=uint64 */;
  %650 = cast(%648, dtype="uint64") /* ty=Tensor[(9, 12, 1), uint64] */;
  %651 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 12, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %652 = sinh(%651) /* ty=Tensor[(9, 12, 1), float32] */;
  %653 = cast(%648, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%652, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %657 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
  %658 = bitwise_or(%649, %650) /* ty=Tensor[(9, 12, 1), uint64] */;
  %659 = logical_or(%655, %656) /* ty=Tensor[(9, 12, ?), bool] */;
  (%657, %658, %659)
}

def @func_2306() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %660 = @func_1881() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %661 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %662 = %660.0;
  %663 = %661.0;
  (%662, %663)
}

def @func_9175() -> Tensor[(4, 6, 6), bool] {
  @func_8466() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9260() -> (Tensor[(14, 10, 3), bool],) {
  @func_9258() /* ty=(Tensor[(14, 10, 3), bool],) */
}

def @func_10127(%var_10066: Tensor[(6, 7, 2), bool]) -> (Tensor[(6, 7, 2), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %664 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
  %665 = %664.2;
  %666 = cast(%var_10066, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %667 = shape_of(%665, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%665, dtype="bool") /* ty=Tensor[(6, 7, 2), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %671 = equal(%668, %669) /* ty=Tensor[(6, 7, 2), bool] */;
  %672 = @func_2100() /* ty=Tensor[(4, 6, 6), bool] */;
  %673 = %670.1;
  (%671, %672, %673)
}

def @func_8400() -> Tensor[(7, 8, 2), float32] {
  %674 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 2), float32] */;
  erf(%674) /* ty=Tensor[(7, 8, 2), float32] */
}

def @func_2198() -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %675 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
  %676 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %677 = %675.0;
  %678 = %676.0;
  (%677, %678)
}

def @func_5831() -> Tensor[(4, 6, 6), bool] {
  %679 = @func_667() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %679.0
}

def @func_3483() -> (Tensor[(4, 6, 6), bool],) {
  @func_3481() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_11651(%var_11649: uint16, %var_11650: Tensor[(13, 13, 16), uint16]) -> (Tensor[(13, 13, 16), uint16], float32) {
  @func_11647(%var_11649, %var_11650) /* ty=(Tensor[(13, 13, 16), uint16], float32) */
}

def @func_10937() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(420), float32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %680 = @func_3863() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %681 = cast(meta[relay.Constant][19] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %682 = reshape(%681, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %683 = @func_2012(%682) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %684 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %685 = %680.0;
  %686 = %683.0;
  %687 = @func_9647() /* ty=Tensor[(4, 6, 6), bool] */;
  %688 = %684.0;
  (%685, %686, meta[relay.Constant][19] /* ty=Tensor[(420), float32] */, %687, %688)
}

def @func_4368() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_4366() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_716() -> (Tensor[(4, 6, 6), bool],) {
  @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_4015() -> (Tensor[(4, 6, 6), bool],) {
  @func_4013() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_7329() -> (Tensor[(4, 6, 6), bool],) {
  %691 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %689 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %690 = %689.0;
    (%690,)
  };
  %691() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_11361() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %695 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %692 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %693 = @func_9756() /* ty=Tensor[(4, 6, 6), bool] */;
    %694 = %692.0;
    (%693, %694)
  };
  %695() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_636() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
  %704 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) {
    %696 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %697 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
    %698 = %697.0;
    %699 = cast(%698, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    %700 = @func_536() /* ty=(Tensor[(4, 6, 6), float64],) */;
    %701 = %696.0;
    %702 = atanh(%699) /* ty=Tensor[(4, 6, 6), float64] */;
    %703 = %700.0;
    (%701, %702, %703)
  };
  %704() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */
}

def @func_12233(%var_12221: Tensor[(5, 11, 9), float32]) -> Tensor[(5, 11, 9), float32] {
  %705 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 11, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 9), float32] */;
  %706 = shape_of(%var_12221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%var_12221, dtype="float32") /* ty=Tensor[(5, 11, 9), float32] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%707, %708) /* ty=Tensor[(5, 11, 9), float32] */
}

def @func_3342(%var_3340: Tensor[(9, 8, 4), float64]) -> (Tensor[(9, 8, 4), float64],) {
  @func_3339(%var_3340) /* ty=(Tensor[(9, 8, 4), float64],) */
}

def @func_3846() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) {
  @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */
}

def @func_5694(%var_5693: Tensor[(1120), float64]) -> (Tensor[(896), float32], Tensor[(2, 5, 4), float64], Tensor[(20, 2), float32], Tensor[(1120), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32]) {
  %721 = fn (%var_5655: Tensor[(1120), float64]) -> (Tensor[(896), float32], Tensor[(2, 5, 4), float64], Tensor[(20, 2), float32], Tensor[(1120), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32]) {
    %709 = @func_5280() /* ty=(Tensor[(896), float32],) */;
    %710 = cast(meta[relay.Constant][21] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %711 = cast(%var_5655, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %712 = reshape(%710, newshape=[2, 5, 4]) /* ty=Tensor[(2, 5, 4), float32] */;
    %713 = reshape(%711, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
    %714 = @func_1757(%712, %713) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) */;
    %715 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %716 = @func_5280() /* ty=(Tensor[(896), float32],) */;
    %717 = %709.0;
    %718 = %714.1;
    %719 = %715.0;
    %720 = %716.0;
    (%717, %718, meta[relay.Constant][21] /* ty=Tensor[(20, 2), float32] */, %var_5655, %719, %720)
  };
  %721(%var_5693) /* ty=(Tensor[(896), float32], Tensor[(2, 5, 4), float64], Tensor[(20, 2), float32], Tensor[(1120), float64], Tensor[(4, 6, 6), bool], Tensor[(896), float32]) */
}

def @func_7556() -> Tensor[(4, 6, 6), bool] {
  @func_7554() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11389() -> Tensor[(4, 6, 6), bool] {
  @func_7407() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9065() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool], Tensor[(6, 7, 2), float32]) {
  %729 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool], Tensor[(6, 7, 2), float32]) {
    %722 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
    %723 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
    %724 = %723.0;
    %725 = cast(%724, dtype="float32") /* ty=Tensor[(6, 7, 2), float32] */;
    %726 = @func_7368() /* ty=Tensor[(4, 6, 6), bool] */;
    %727 = %722.2;
    %728 = rsqrt(%725) /* ty=Tensor[(6, 7, 2), float32] */;
    (%726, %727, %728)
  };
  %729() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool], Tensor[(6, 7, 2), float32]) */
}

def @func_1757(%var_1721: Tensor[(2, 5, 4), float32], %var_1751: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(2, 5, 4), float64], Tensor[(10, 16, 7), bool], Tensor[(280, 4), float64]) {
  %730 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %731 = cast(%var_1721, dtype="float32") /* ty=Tensor[(2, 5, 4), float32] */;
  %732 = exp(%731) /* ty=Tensor[(2, 5, 4), float32] */;
  %733 = cast(%var_1721, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
  %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%732, dtype="float64") /* ty=Tensor[(2, 5, 4), float64] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %737 = cast(%var_1751, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %738 = reshape(%737, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
  %739 = @func_829(%738) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
  %740 = %730.0;
  %741 = power(%735, %736) /* ty=Tensor[(2, 5, 4), float64] */;
  %742 = %739.0;
  (%740, %741, %742, %var_1751)
}

def @func_668() -> (Tensor[(4, 6, 6), bool],) {
  %745 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %743 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %744 = %743.0;
    (%744,)
  };
  %745() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_1374(%var_1373: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) {
  %761 = fn (%var_1366: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) {
    %746 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %747 = %746.0;
    %748 = cast(%747, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
    %749 = cos(%748) /* ty=Tensor[(4, 6, 6), float32] */;
    %750 = cast(%747, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
    %751 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %752 = cast(%749, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %754 = cast(%var_1366, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %755 = cast(%var_1366, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %756 = reshape(%754, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
    %757 = reshape(%755, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), uint32] */;
    %758 = @func_1149(%756, %757) /* ty=(Tensor[(16, 10, 7), bool],) */;
    %759 = logical_and(%752, %753) /* ty=Tensor[(4, 6, 6), bool] */;
    %760 = %758.0;
    (%759, %760, %var_1366)
  };
  %761(%var_1373) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) */
}

def @func_6062() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  %762 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %763 = @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %764 = cast(meta[relay.Constant][22] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %765 = reshape(%764, newshape=[14, 10, 3]) /* ty=Tensor[(14, 10, 3), float32] */;
  %766 = @func_2012(%765) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool]) */;
  %767 = %762.0;
  %768 = %763.0;
  %769 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  %770 = %766.1;
  (%767, %768, %769, %770, meta[relay.Constant][22] /* ty=Tensor[(420), float32] */)
}

def @func_5924(%var_5922: Tensor[(40), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) {
  @func_5921(%var_5922) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120), float64], Tensor[(6, 7, 2), float64]) */
}

def @func_8727(%var_8725: Tensor[(16, 12, 3), float64], %var_8726: Tensor[(16, 12, 3), float64]) -> Tensor[(16, 12, 3), float64] {
  @func_8723(%var_8725, %var_8726) /* ty=Tensor[(16, 12, 3), float64] */
}

def @func_4982(%var_4980: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), float64],) {
  @func_4979(%var_4980) /* ty=(Tensor[(13, 8, 9), float64],) */
}

def @func_7664() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %775 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %771 = @func_7328() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %772 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %773 = %771.0;
    %774 = %772.0;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_5185() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %776 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %777 = @func_3372() /* ty=Tensor[(4, 6, 6), bool] */;
  %778 = %776.2;
  (%777, %778)
}

def @func_1059() -> Tensor[(4, 6, 6), bool] {
  %779 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %779.1
}

def @func_10749(%var_10709: Tensor[(5, 1, 6), float32], %var_10741: Tensor[(5, 13, 6), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(5, ?, 6), uint32], Tensor[(5, 13, 6), float32]) {
  %780 = @func_1661() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %781 = cast(%var_10709, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %782 = exp(%781) /* ty=Tensor[(5, 1, 6), float32] */;
  %783 = cast(%782, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %784 = sinh(%783) /* ty=Tensor[(5, 1, 6), float32] */;
  %785 = cast(%var_10709, dtype="uint32") /* ty=Tensor[(5, 1, 6), uint32] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="uint32") /* ty=Tensor[(5, 1, 6), uint32] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %789 = cast(%782, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %790 = asin(%789) /* ty=Tensor[(5, 1, 6), float64] */;
  %791 = cast(%790, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %792 = rsqrt(%791) /* ty=Tensor[(5, 1, 6), float64] */;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  %794 = cast(%var_10741, dtype="float64") /* ty=Tensor[(5, 13, 6), float64] */;
  %795 = mod(%793, %794) /* ty=Tensor[(5, 13, 6), float64] */;
  %796 = cast(%795, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %797 = %780.0;
  %798 = right_shift(%787, %788) /* ty=Tensor[(5, ?, 6), uint32] */;
  %799 = acos(%796) /* ty=Tensor[(5, 13, 6), float32] */;
  (%797, %798, %799)
}

def @func_4729() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %800 = @func_2754() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %801 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %802 = %800.1;
  %803 = %801.2;
  (%802, %803)
}

def @func_4862() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %804 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %805 = @func_2473() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %806 = @func_2139() /* ty=(Tensor[(6, 7, 2), uint16],) */;
  %807 = %806.0;
  %808 = cast(%807, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %809 = @func_4421() /* ty=Tensor[(4, 6, 6), bool] */;
  %810 = %804.0;
  %811 = %805.0;
  %812 = atanh(%808) /* ty=Tensor[(6, 7, 2), float64] */;
  (%809, %810, %811, %812)
}

def @func_3864() -> (Tensor[(4, 6, 6), bool],) {
  %815 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %813 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %814 = %813.0;
    (%814,)
  };
  %815() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_4979(%var_4971: Tensor[(13, 8, 9), float64]) -> (Tensor[(13, 8, 9), float64],) {
  %816 = cast(%var_4971, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %817 = cosh(%816) /* ty=Tensor[(13, 8, 9), float64] */;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(13, 8, 9), float64] */;
  %819 = acosh(%818) /* ty=Tensor[(13, 8, 9), float64] */;
  (%819,)
}

def @func_7026() -> Tensor[(4, 6, 6), float64] {
  %823 = fn () -> Tensor[(4, 6, 6), float64] {
    %820 = @func_4600() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
    %821 = %820.1;
    %822 = cast(%821, dtype="float64") /* ty=Tensor[(4, 6, 6), float64] */;
    tan(%822) /* ty=Tensor[(4, 6, 6), float64] */
  };
  %823() /* ty=Tensor[(4, 6, 6), float64] */
}

def @func_9153() -> (Tensor[(4, 6, 6), bool],) {
  %824 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
  %825 = %824.0;
  (%825,)
}

def @func_7273(%var_7272: Tensor[(936), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) {
  %831 = fn (%var_7234: Tensor[(936), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) {
    %826 = cast(%var_7234, dtype="float64") /* ty=Tensor[(936), float64] */;
    %827 = reshape(%826, newshape=[13, 8, 9]) /* ty=Tensor[(13, 8, 9), float64] */;
    %828 = @func_4979(%827) /* ty=(Tensor[(13, 8, 9), float64],) */;
    %829 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
    %830 = %828.0;
    (%829, %830, %var_7234)
  };
  %831(%var_7272) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(13, 8, 9), float64], Tensor[(936), float64]) */
}

def @func_7539() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) {
  @func_7537() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64]) */
}

def @func_6186() -> Tensor[(4, 6, 6), bool] {
  @func_6184() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_5833() -> Tensor[(4, 6, 6), bool] {
  @func_5831() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6334() -> Tensor[(4, 6, 6), bool] {
  @func_6332() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_2378(%var_2376: Tensor[(280, 4), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32], Tensor[(40), float32], Tensor[(40), float32], Tensor[(280, 4), float64], Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool]) {
  @func_2375(%var_2376) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32], Tensor[(40), float32], Tensor[(40), float32], Tensor[(280, 4), float64], Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool]) */
}

def @func_8871() -> (Tensor[(3, 15, 2), float64], Tensor[(4, 6, 6), bool]) {
  %832 = @func_8290() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %833 = @func_8638() /* ty=Tensor[(3, 15, 2), float64] */;
  %834 = %832.1;
  (%833, %834)
}

def @func_8596() -> Tensor[(4, 6, 6), bool] {
  %836 = fn () -> Tensor[(4, 6, 6), bool] {
    %835 = @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %835.1
  };
  %836() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9649() -> Tensor[(4, 6, 6), bool] {
  @func_9647() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11135(%var_11134: Tensor[(9, 13, 9), float64]) -> Tensor[(9, 13, 9), float64] {
  %838 = fn (%var_11121: Tensor[(9, 13, 9), float64]) -> Tensor[(9, 13, 9), float64] {
    %837 = cast(%var_11121, dtype="float64") /* ty=Tensor[(9, 13, 9), float64] */;
    atanh(%837) /* ty=Tensor[(9, 13, 9), float64] */
  };
  %838(%var_11134) /* ty=Tensor[(9, 13, 9), float64] */
}

def @func_9690() -> Tensor[(4, 6, 6), bool] {
  @func_9688() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11934() -> (Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_11932() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_9533() -> (Tensor[(4, 6, 6), bool],) {
  %839 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %840 = %839.2;
  (%840,)
}

def @func_4702(%var_4674: int32, %var_4675: Tensor[(11, 7, 10), int32]) -> (Tensor[(11, 7, 10), bool], Tensor[(4, 6, 6), bool]) {
  %841 = cast(%var_4674, dtype="bool") /* ty=bool */;
  %842 = cast(%var_4675, dtype="bool") /* ty=Tensor[(11, 7, 10), bool] */;
  %843 = cast(%var_4674, dtype="float32") /* ty=float32 */;
  %844 = reshape(%843, newshape=[]) /* ty=float32 */;
  %845 = @func_3646(%844) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) */;
  %846 = greater_equal(%841, %842) /* ty=Tensor[(11, 7, 10), bool] */;
  %847 = %845.0;
  (%846, %847)
}

def @func_11524(%var_11523: Tensor[(14, 11, 7), float64]) -> (Tensor[(14, 11, 7), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %854 = fn (%var_11485: Tensor[(14, 11, 7), float64]) -> (Tensor[(14, 11, 7), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %848 = cast(%var_11485, dtype="float64") /* ty=Tensor[(14, 11, 7), float64] */;
    %849 = @func_3863() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %850 = @func_10867() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %851 = sigmoid(%848) /* ty=Tensor[(14, 11, 7), float64] */;
    %852 = %849.0;
    %853 = %850.0;
    (%851, %852, %853)
  };
  %854(%var_11523) /* ty=(Tensor[(14, 11, 7), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_5845() -> (Tensor[(4, 6, 6), bool],) {
  %855 = @func_3947() /* ty=Tensor[(4, 6, 6), bool] */;
  (%855,)
}

def @func_6064() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  @func_6062() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */
}

def @func_9757() -> Tensor[(4, 6, 6), bool] {
  %857 = fn () -> Tensor[(4, 6, 6), bool] {
    %856 = @func_8580() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
    %856.0
  };
  %857() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_10856() -> (Tensor[(4, 6, 6), bool],) {
  @func_10854() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2308() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_2306() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_3608() -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %863 = fn () -> (Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %858 = @func_2959() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %859 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %860 = %858.3;
    %861 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
    %862 = %859.0;
    (%860, %861, %862)
  };
  %863() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_11805() -> Tensor[(1120), uint32] {
  @func_11803() /* ty=Tensor[(1120), uint32] */
}

def @func_8853(%var_8851: Tensor[(16, 15, 15), bool], %var_8852: Tensor[(16, 15, 15), bool]) -> (Tensor[(16, 15, 15), bool], Tensor[(16, 15, 15), float64]) {
  %881 = fn (%var_8821: Tensor[(16, 15, 15), bool], %var_8822: Tensor[(16, 15, 15), bool]) -> (Tensor[(16, 15, 15), bool], Tensor[(16, 15, 15), float64]) {
    %864 = cast(%var_8822, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
    %865 = shape_of(%var_8821, dtype="int32") /* ty=Tensor[(3), int32] */;
    %866 = cast(%var_8821, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
    %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %868 = logical_and(%866, %867) /* ty=Tensor[(16, 15, 15), bool] */;
    %869 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 15, 15), bool] */, dtype="int64") /* ty=Tensor[(16, 15, 15), int64] */;
    %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%868, dtype="int64") /* ty=Tensor[(16, 15, 15), int64] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %873 = bitwise_and(%871, %872) /* ty=Tensor[(16, 15, 15), int64] */;
    %874 = cast(%873, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
    %875 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %876 = cast(%868, dtype="bool") /* ty=Tensor[(16, 15, 15), bool] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %878 = cast(%868, dtype="float64") /* ty=Tensor[(16, 15, 15), float64] */;
    %879 = less_equal(%876, %877) /* ty=Tensor[(16, 15, 15), bool] */;
    %880 = acosh(%878) /* ty=Tensor[(16, 15, 15), float64] */;
    (%879, %880)
  };
  %881(%var_8851, %var_8852) /* ty=(Tensor[(16, 15, 15), bool], Tensor[(16, 15, 15), float64]) */
}

def @func_2714() -> (Tensor[(4, 6, 6), bool],) {
  @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8639() -> Tensor[(3, 15, 2), float64] {
  %895 = fn () -> Tensor[(3, 15, 2), float64] {
    %882 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
    %883 = atanh(%882) /* ty=Tensor[(3, 15, 2), float64] */;
    %884 = cast(%883, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
    %885 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 2), float64] */, dtype="bool") /* ty=Tensor[(3, 15, 2), bool] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %888 = logical_or(%886, %887) /* ty=Tensor[(3, 15, 2), bool] */;
    %889 = cast(%888, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
    %890 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %891 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %893 = floor_divide(%891, %892) /* ty=Tensor[(3, 15, 2), float64] */;
    %894 = cast(%893, dtype="float64") /* ty=Tensor[(3, 15, 2), float64] */;
    exp(%894) /* ty=Tensor[(3, 15, 2), float64] */
  };
  %895() /* ty=Tensor[(3, 15, 2), float64] */
}

def @func_3947() -> Tensor[(4, 6, 6), bool] {
  %896 = @func_1942() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %896.0
}

def @func_6292() -> Tensor[(4, 6, 6), bool] {
  %898 = fn () -> Tensor[(4, 6, 6), bool] {
    %897 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %897.0
  };
  %898() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6927() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_6925() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_9357() -> (Tensor[(4, 6, 6), bool],) {
  %899 = @func_6291() /* ty=Tensor[(4, 6, 6), bool] */;
  (%899,)
}

def @func_2541() -> (Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) {
  @func_2539() /* ty=(Tensor[(4, 13, 15), float64], Tensor[(4, 6, 6), bool]) */
}

def @func_11803() -> Tensor[(1120), uint32] {
  %900 = @func_3844() /* ty=(Tensor[(1120), uint32], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(3, 2, 3), float64], Tensor[(4, 13, 15), float64]) */;
  %900.0
}

def @func_9296(%var_9294: Tensor[(420), float32]) -> (Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) {
  @func_9293(%var_9294) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(14, 10, 3), bool], Tensor[(420), float32]) */
}

def @func_8581() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
  %905 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) {
    %901 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %902 = @func_1704() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */;
    %903 = %901.1;
    %904 = %902.0;
    (%903, %904)
  };
  %905() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */
}

def @func_8482() -> Tensor[(6, 7, 2), bool] {
  %907 = fn () -> Tensor[(6, 7, 2), bool] {
    %906 = @func_1225() /* ty=(Tensor[(6, 7, 2), uint16], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), bool]) */;
    %906.2
  };
  %907() /* ty=Tensor[(6, 7, 2), bool] */
}

def @func_11868(%var_11867: Tensor[(4, 15, 1), uint64]) -> (Tensor[(4, 15, ?), uint64], Tensor[(4, 15, 1), float32]) {
  %915 = fn (%var_11837: Tensor[(4, 15, 1), uint64]) -> (Tensor[(4, 15, ?), uint64], Tensor[(4, 15, 1), float32]) {
    %908 = cast(%var_11837, dtype="uint64") /* ty=Tensor[(4, 15, 1), uint64] */;
    %909 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(4, 15, 1), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %910 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 15, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 15, 1), uint64] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %912 = cast(%var_11837, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
    %913 = bitwise_and(%910, %911) /* ty=Tensor[(4, 15, ?), uint64] */;
    %914 = erf(%912) /* ty=Tensor[(4, 15, 1), float32] */;
    (%913, %914)
  };
  %915(%var_11867) /* ty=(Tensor[(4, 15, ?), uint64], Tensor[(4, 15, 1), float32]) */
}

def @func_11391() -> Tensor[(4, 6, 6), bool] {
  @func_11389() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9937() -> (Tensor[(4, 6, 6), bool],) {
  %916 = @func_6332() /* ty=Tensor[(4, 6, 6), bool] */;
  (%916,)
}

def @func_6885() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %921 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %917 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %918 = @func_555() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %919 = %917.0;
    %920 = %918.0;
    (%919, %920)
  };
  %921() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_8468() -> Tensor[(4, 6, 6), bool] {
  @func_8466() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_138() -> (Tensor[(4, 6, 6), bool],) {
  %922 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %923 = %922.0;
  (%923,)
}

def @func_4322() -> Tensor[(4, 6, 6), bool] {
  %925 = fn () -> Tensor[(4, 6, 6), bool] {
    %924 = @func_2712() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %924.0
  };
  %925() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6275(%var_6274: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) {
  %932 = fn (%var_6269: float32) -> (Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) {
    %926 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %927 = cast(%var_6269, dtype="float32") /* ty=float32 */;
    %928 = reshape(%927, newshape=[]) /* ty=float32 */;
    %929 = @func_3646(%928) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, 1), uint64], Tensor[(9, 12, ?), bool]) */;
    %930 = %926.1;
    %931 = %929.2;
    (%930, %931, %var_6269)
  };
  %932(%var_6274) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) */
}

def @func_2691() -> Tensor[(4, 6, 6), bool] {
  @func_2689() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_1909() -> (Tensor[(4, 6, 6), bool],) {
  @func_1907() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8121() -> Tensor[(4, 6, 6), bool] {
  @func_8119() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11679() -> Tensor[(4, 6, 6), bool] {
  %933 = @func_4065() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %933.2
}

def @func_10462() -> (Tensor[(4, 6, 6), bool],) {
  %936 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %934 = @func_9937() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %935 = %934.0;
    (%935,)
  };
  %936() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_878() -> (Tensor[(6, 7, 2), float64],) {
  %937 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 7, 2), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 2), float64] */;
  %938 = log10(%937) /* ty=Tensor[(6, 7, 2), float64] */;
  (%938,)
}

def @func_1149(%var_1128: Tensor[(16, 10, 7), uint32], %var_1129: Tensor[(16, 10, 7), uint32]) -> (Tensor[(16, 10, 7), bool],) {
  %939 = cast(%var_1129, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %940 = shape_of(%var_1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%var_1128, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %943 = not_equal(%941, %942) /* ty=Tensor[(16, 10, 7), bool] */;
  (%943,)
}

def @func_5635(%var_5633: Tensor[(9, 14, 5), uint16], %var_5634: Tensor[(9, 14, 5), uint16]) -> Tensor[(9, 14, 5), uint16] {
  %948 = fn (%var_5620: Tensor[(9, 14, 5), uint16], %var_5621: Tensor[(9, 14, 5), uint16]) -> Tensor[(9, 14, 5), uint16] {
    %944 = cast(%var_5621, dtype="uint16") /* ty=Tensor[(9, 14, 5), uint16] */;
    %945 = shape_of(%var_5620, dtype="int32") /* ty=Tensor[(3), int32] */;
    %946 = cast(%var_5620, dtype="uint16") /* ty=Tensor[(9, 14, 5), uint16] */;
    %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    logical_xor(%946, %947) /* ty=Tensor[(9, 14, 5), uint16] */
  };
  %948(%var_5633, %var_5634) /* ty=Tensor[(9, 14, 5), uint16] */
}

def @func_8028() -> (Tensor[(4, 6, 6), bool],) {
  %949 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %950 = %949.1;
  (%950,)
}

def @func_2755() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %955 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %951 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %952 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %953 = %951.0;
    %954 = %952.0;
    (%953, %954)
  };
  %955() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_6332() -> Tensor[(4, 6, 6), bool] {
  @func_2100() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_11056() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %959 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
    %956 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
    %957 = @func_5378() /* ty=Tensor[(4, 6, 6), bool] */;
    %958 = %956.0;
    (%957, %958)
  };
  %959() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */
}

def @func_80() -> (Tensor[(4, 6, 6), bool],) {
  %962 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %960 = @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %961 = %960.0;
    (%961,)
  };
  %962() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @main(%var_12261: Tensor[(9, 12, 11), float64]) -> Tensor[(9, 12, 11), float64] {
  %963 = cast(-4.15319f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %964 = cast(%var_12261, dtype="float64") /* ty=Tensor[(9, 12, 11), float64] */;
  maximum(%963, %964) /* ty=Tensor[(9, 12, 11), float64] */
}

def @func_3274() -> (Tensor[(4, 6, 6), bool],) {
  @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_880() -> (Tensor[(6, 7, 2), float64],) {
  @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */
}

def @func_3362(%var_3360: Tensor[(10, 11, 11), uint8], %var_3361: Tensor[(10, 11, 11), uint8]) -> Tensor[(10, 11, 11), bool] {
  %969 = fn (%var_3349: Tensor[(10, 11, 11), uint8], %var_3350: Tensor[(10, 11, 11), uint8]) -> Tensor[(10, 11, 11), bool] {
    %965 = cast(%var_3350, dtype="bool") /* ty=Tensor[(10, 11, 11), bool] */;
    %966 = shape_of(%var_3349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %967 = cast(%var_3349, dtype="bool") /* ty=Tensor[(10, 11, 11), bool] */;
    %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%967, %968) /* ty=Tensor[(10, 11, 11), bool] */
  };
  %969(%var_3360, %var_3361) /* ty=Tensor[(10, 11, 11), bool] */
}

def @func_6134(%var_6104: Tensor[(15, 8, 6), float32]) -> (Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) {
  %970 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
  %971 = cast(%var_6104, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %972 = acosh(%971) /* ty=Tensor[(15, 8, 6), float32] */;
  %973 = cast(%972, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %974 = %970.0;
  %975 = sinh(%973) /* ty=Tensor[(15, 8, 6), float32] */;
  (%974, %975)
}

def @func_11681() -> Tensor[(4, 6, 6), bool] {
  @func_11679() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_2475() -> (Tensor[(4, 6, 6), bool],) {
  @func_2473() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_8466() -> Tensor[(4, 6, 6), bool] {
  %976 = @func_6978() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %976.1
}

def @func_5473() -> (Tensor[(4, 6, 6), bool],) {
  %978 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %977 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
    (%977,)
  };
  %978() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2473() -> (Tensor[(4, 6, 6), bool],) {
  %979 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
  (%979,)
}

def @func_10975() -> Tensor[(4, 6, 6), bool] {
  @func_10973() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_7409() -> Tensor[(4, 6, 6), bool] {
  @func_7407() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_9647() -> Tensor[(4, 6, 6), bool] {
  %980 = @func_9357() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %980.0
}

def @func_10030() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 12, 2), float32], Tensor[(4, 6, 6), bool], float32, float32) {
  %981 = @func_8098() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %982 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %983 = %982.1;
  %984 = cast(%983, dtype="uint32") /* ty=Tensor[(4, 6, 6), uint32] */;
  %985 = reshape(%984, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint32] */;
  %986 = @func_6378() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %987 = cast(-7.53009f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %988 = reshape(%987, newshape=[]) /* ty=float32 */;
  %989 = @func_6273(%988) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(9, 12, ?), bool], float32) */;
  %990 = %981.0;
  %991 = @func_5342(%985) /* ty=Tensor[(6, 12, 2), float32] */;
  %992 = %986.0;
  %993 = %989.2;
  (%990, %983, %991, %992, %993, -7.53009f /* ty=float32 */)
}

def @func_1705() -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
  %999 = fn () -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) {
    %994 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
    %995 = cast(%994, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
    %996 = @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %997 = log10(%995) /* ty=Tensor[(4, 6, 6), float32] */;
    %998 = %996.0;
    (%997, %998)
  };
  %999() /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool]) */
}

def @func_5847() -> (Tensor[(4, 6, 6), bool],) {
  @func_5845() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_6036() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), uint8]) {
  %1000 = @func_3517() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), float64]) */;
  %1001 = @func_3272() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %1002 = %1001.0;
  %1003 = @func_5597() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float32]) */;
  %1004 = %1003.1;
  %1005 = cast(%1004, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %1006 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1002, dtype="float32") /* ty=Tensor[(4, 6, 6), float32] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1009 = floor_divide(%1007, %1008) /* ty=Tensor[(4, 6, 6), float32] */;
  %1010 = cast(%1009, dtype="uint8") /* ty=Tensor[(4, 6, 6), uint8] */;
  %1011 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1012 = cast(%1002, dtype="uint8") /* ty=Tensor[(4, 6, 6), uint8] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1014 = %1000.0;
  %1015 = bitwise_or(%1012, %1013) /* ty=Tensor[(4, 6, 6), uint8] */;
  (%1014, %1015)
}

def @func_10973() -> Tensor[(4, 6, 6), bool] {
  %1016 = @func_3607() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %1016.1
}

def @func_8119() -> Tensor[(4, 6, 6), bool] {
  %1017 = @func_1525() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %1017.0
}

def @func_45() -> (Tensor[(4, 6, 6), bool],) {
  @func_43() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_3130() -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) {
  %1030 = fn () -> (Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) {
    %1018 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
    %1019 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 1120), float64] */, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %1020 = reshape(%1019, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), float64] */;
    %1021 = @func_829(%1020) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */;
    %1022 = @func_432() /* ty=Tensor[(4, 6, 6), bool] */;
    %1023 = cast(%1022, dtype="bool") /* ty=Tensor[(4, 6, 6), bool] */;
    %1024 = reshape(%1023, newshape=[4, 6, 6]) /* ty=Tensor[(4, 6, 6), bool] */;
    %1025 = @func_1195(%1024) /* ty=(Tensor[(4, 6, 6), int16], Tensor[(4, 6, 6), bool]) */;
    %1026 = %1018.0;
    %1027 = @func_2689() /* ty=Tensor[(4, 6, 6), bool] */;
    %1028 = %1021.0;
    %1029 = %1025.0;
    (%1026, %1027, %1022, %1028, meta[relay.Constant][27] /* ty=Tensor[(1, 1120), float64] */, %1029)
  };
  %1030() /* ty=(Tensor[(6, 7, 2), float64], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(10, 16, 7), bool], Tensor[(1, 1120), float64], Tensor[(4, 6, 6), int16]) */
}

def @func_140() -> (Tensor[(4, 6, 6), bool],) {
  @func_138() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_5251(%var_5197: Tensor[(6, 10, 10), int8], %var_5198: Tensor[(6, 10, 10), int8]) -> (Tensor[(6, 10, 10), int8], Tensor[(4, 6, 6), bool]) {
  %1031 = cast(%var_5198, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
  %1032 = shape_of(%var_5197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%var_5197, dtype="int8") /* ty=Tensor[(6, 10, 10), int8] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1035 = @func_5185() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %1036 = bitwise_and(%1033, %1034) /* ty=Tensor[(6, 10, 10), int8] */;
  %1037 = %1035.0;
  (%1036, %1037)
}

def @func_2853() -> Tensor[(4, 6, 6), float64] {
  @func_2851() /* ty=Tensor[(4, 6, 6), float64] */
}

def @func_7600() -> (Tensor[(4, 6, 6), bool],) {
  %1039 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %1038 = @func_6784() /* ty=Tensor[(4, 6, 6), bool] */;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_9269() -> Tensor[(6, 7, 2), bool] {
  %1040 = fn () -> Tensor[(6, 7, 2), bool] {
    @func_8481() /* ty=Tensor[(6, 7, 2), bool] */
  };
  %1040() /* ty=Tensor[(6, 7, 2), bool] */
}

def @func_12236(%var_12234: Tensor[(5, 11, 9), float32]) -> Tensor[(5, 11, 9), float32] {
  @func_12233(%var_12234) /* ty=Tensor[(5, 11, 9), float32] */
}

def @func_1094() -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  %1044 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
    %1041 = @func_878() /* ty=(Tensor[(6, 7, 2), float64],) */;
    %1042 = @func_1059() /* ty=Tensor[(4, 6, 6), bool] */;
    %1043 = %1041.0;
    (%1042, %1043)
  };
  %1044() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */
}

def @func_8292() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_8290() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_2286(%var_2284: Tensor[(40), float32], %var_2285: Tensor[(1120, 1), float64]) -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) {
  @func_2282(%var_2284, %var_2285) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(40), float32], Tensor[(1120, 1), float64]) */
}

def @func_11989() -> (Tensor[(4, 6, 6), bool],) {
  %1046 = fn () -> (Tensor[(4, 6, 6), bool],) {
    %1045 = @func_6784() /* ty=Tensor[(4, 6, 6), bool] */;
    (%1045,)
  };
  %1046() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_4864() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) {
  @func_4862() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */
}

def @func_5344(%var_5343: Tensor[(6, 12, 2), uint32]) -> Tensor[(6, 12, 2), float32] {
  %1053 = fn (%var_5331: Tensor[(6, 12, 2), uint32]) -> Tensor[(6, 12, 2), float32] {
    %1047 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 12, 2), uint32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
    %1048 = shape_of(%var_5331, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1049 = cast(%var_5331, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
    %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1051 = greater(%1049, %1050) /* ty=Tensor[(6, 12, 2), bool] */;
    %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
    acosh(%1052) /* ty=Tensor[(6, 12, 2), float32] */
  };
  %1053(%var_5343) /* ty=Tensor[(6, 12, 2), float32] */
}

def @func_1907() -> (Tensor[(4, 6, 6), bool],) {
  %1054 = @func_807() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
  %1055 = %1054.0;
  (%1055,)
}

def @func_2101() -> Tensor[(4, 6, 6), bool] {
  %1057 = fn () -> Tensor[(4, 6, 6), bool] {
    %1056 = @func_1093() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), float64]) */;
    %1056.0
  };
  %1057() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_831(%var_830: Tensor[(10, 16, 7), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
  %1067 = fn (%var_815: Tensor[(10, 16, 7), float64]) -> (Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) {
    %1058 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 16, 7), float64] */, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
    %1059 = shape_of(%var_815, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1060 = cast(%var_815, dtype="bool") /* ty=Tensor[(10, 16, 7), bool] */;
    %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1062 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %1063 = @func_79() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %1064 = greater_equal(%1060, %1061) /* ty=Tensor[(10, 16, 7), bool] */;
    %1065 = %1062.2;
    %1066 = %1063.0;
    (%1064, %1065, %1066)
  };
  %1067(%var_830) /* ty=(Tensor[(10, 16, 7), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), bool]) */
}

def @func_4203() -> Tensor[(4, 6, 6), bool] {
  @func_3947() /* ty=Tensor[(4, 6, 6), bool] */
}

def @func_6137(%var_6135: Tensor[(15, 8, 6), float32]) -> (Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) {
  @func_6134(%var_6135) /* ty=(Tensor[(6, 7, 2), float64], Tensor[(15, 8, 6), float32]) */
}

def @func_6979() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %1072 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %1068 = @func_6250() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %1069 = @func_635() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), float64], Tensor[(4, 6, 6), float64]) */;
    %1070 = %1068.0;
    %1071 = %1069.0;
    (%1070, %1071)
  };
  %1072() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_5560(%var_5559: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
  %1082 = fn (%var_5546: Tensor[(1120), uint32]) -> (Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) {
    %1073 = @func_4963() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */;
    %1074 = @func_5280() /* ty=(Tensor[(896), float32],) */;
    %1075 = cast(%var_5546, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %1076 = reshape(%1075, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
    %1077 = @func_1475(%1076) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32], Tensor[(16, 10, 7), bool]) */;
    %1078 = %1073.0;
    %1079 = %1074.0;
    %1080 = %1077.2;
    %1081 = @func_4203() /* ty=Tensor[(4, 6, 6), bool] */;
    (%1078, %1079, %1080, %var_5546, %1081)
  };
  %1082(%var_5559) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */
}

def @func_10199() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool], Tensor[(1120), uint32]) {
  %1083 = cast(meta[relay.Constant][30] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
  %1084 = reshape(%1083, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
  %1085 = @func_5558(%1084) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(896), float32], Tensor[(1120), uint32], Tensor[(1120), uint32], Tensor[(4, 6, 6), bool]) */;
  %1086 = @func_4421() /* ty=Tensor[(4, 6, 6), bool] */;
  %1087 = %1085.0;
  (%1086, %1087, meta[relay.Constant][30] /* ty=Tensor[(1120), uint32] */)
}

def @func_9440() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  @func_9438() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

def @func_4421() -> Tensor[(4, 6, 6), bool] {
  %1088 = @func_714() /* ty=(Tensor[(4, 6, 6), bool],) */;
  %1088.0
}

def @func_8030() -> (Tensor[(4, 6, 6), bool],) {
  @func_8028() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_5255(%var_5253: Tensor[(6, 10, 10), int8], %var_5254: Tensor[(6, 10, 10), int8]) -> (Tensor[(6, 10, 10), int8], Tensor[(4, 6, 6), bool]) {
  @func_5251(%var_5253, %var_5254) /* ty=(Tensor[(6, 10, 10), int8], Tensor[(4, 6, 6), bool]) */
}

def @func_11274() -> (Tensor[(4, 6, 6), bool],) {
  @func_11272() /* ty=(Tensor[(4, 6, 6), bool],) */
}

def @func_2638(%var_2635: Tensor[(6, 10, 8), float64], %var_2636: Tensor[(6, 10, 8), float64], %var_2637: Tensor[(896), float64]) -> (Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16], Tensor[(6, 10, 8), float64], Tensor[(16, 4, 14), float64], Tensor[(896), float64]) {
  @func_2633(%var_2635, %var_2636, %var_2637) /* ty=(Tensor[(4, 6, 6), float32], Tensor[(4, 6, 6), bool], Tensor[(6, 7, 2), uint16], Tensor[(6, 10, 8), float64], Tensor[(16, 4, 14), float64], Tensor[(896), float64]) */
}

def @func_2994() -> (Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
  %1094 = fn () -> (Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) {
    %1089 = cast(meta[relay.Constant][31] /* ty=Tensor[(1120), uint32] */, dtype="uint32") /* ty=Tensor[(1120), uint32] */;
    %1090 = reshape(%1089, newshape=[1120]) /* ty=Tensor[(1120), uint32] */;
    %1091 = @func_1372(%1090) /* ty=(Tensor[(4, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), uint32]) */;
    %1092 = @func_2851() /* ty=Tensor[(4, 6, 6), float64] */;
    %1093 = %1091.2;
    (%1092, %1093, meta[relay.Constant][31] /* ty=Tensor[(1120), uint32] */)
  };
  %1094() /* ty=(Tensor[(4, 6, 6), float64], Tensor[(1120), uint32], Tensor[(1120), uint32]) */
}

def @func_10696() -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
  %1098 = fn () -> (Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) {
    %1095 = @func_8028() /* ty=(Tensor[(4, 6, 6), bool],) */;
    %1096 = %1095.0;
    %1097 = @func_410() /* ty=Tensor[(4, 6, 6), bool] */;
    (%1096, %1097)
  };
  %1098() /* ty=(Tensor[(4, 6, 6), bool], Tensor[(4, 6, 6), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen519/build/output.py:3967: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen519/build/output.py", line 3972, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_maximum_kernel0(double* __restrict__ T_maximum, double* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1188) {
    T_maximum[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = max(-4.153186e+00, placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_3062(%var_3058: Tensor[(756), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) {
  %0 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %1 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %2 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %3 = cast(%var_3058, dtype="float64") /* ty=Tensor[(756), float64] */;
  %4 = reshape(%3, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %5 = @func_2120(%4) /* ty=(Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %6 = %0.2;
  %7 = %1.0;
  %8 = %2.0;
  %9 = %5.1;
  (%6, %7, %8, %9, %var_3058)
}

def @func_5855() -> (Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) {
  %10 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %11 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %12 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  %13 = %10.2;
  %14 = %11.2;
  (%12, %13, %14)
}

def @func_6962() -> Tensor[(10, 14, 1), float64] {
  %15 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %15.0
}

def @func_5393() -> Tensor[(10, 14, 756), uint64] {
  %16 = @func_5102() /* ty=(Tensor[(10, 14, 756), float64],) */;
  %17 = %16.0;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 14, 756), float64] */, dtype="uint64") /* ty=Tensor[(10, 14, 756), uint64] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%17, dtype="uint64") /* ty=Tensor[(10, 14, 756), uint64] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%20, %21) /* ty=Tensor[(10, 14, 756), uint64] */
}

def @func_2289(%var_2286: Tensor[(990), float32]) -> (Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %22 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %23 = %22.0;
  %24 = cast(%23, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %25 = cast(%var_2286, dtype="float32") /* ty=Tensor[(990), float32] */;
  %26 = reshape(%25, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %27 = @func_1929(%26) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %28 = exp(%24) /* ty=Tensor[(10, 14, 1), float32] */;
  %29 = %27.3;
  (%28, %29, %var_2286)
}

def @func_2464() -> (Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %30 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %32 = reshape(%31, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %33 = @func_2289(%32) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %34 = %30.0;
  %35 = %33.1;
  (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(990), float32] */)
}

def @func_1810() -> Tensor[(10, 14, 1), float64] {
  %36 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %36.4
}

def @func_4899(%var_4867: Tensor[(16, 9, 2), uint16], %var_4868: Tensor[(16, 9, 2), uint16], %var_4873: Tensor[(16, 9, 2), uint16], %var_4882: Tensor[(84), float64]) -> (Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) {
  %37 = cast(%var_4868, dtype="uint16") /* ty=Tensor[(16, 9, 2), uint16] */;
  %38 = shape_of(%var_4867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_4867, dtype="uint16") /* ty=Tensor[(16, 9, 2), uint16] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %41 = add(%39, %40) /* ty=Tensor[(16, 9, 2), uint16] */;
  %42 = cast(%var_4873, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %46 = cast(%var_4868, dtype="int8") /* ty=Tensor[(16, 9, 2), int8] */;
  %47 = shape_of(%var_4873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_4873, dtype="int8") /* ty=Tensor[(16, 9, 2), int8] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %50 = cast(%var_4882, dtype="float64") /* ty=Tensor[(84), float64] */;
  %51 = reshape(%50, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
  %52 = @func_3200(%51) /* ty=(Tensor[(14, 6, ?), int32],) */;
  %53 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %54 = floor_divide(%44, %45) /* ty=Tensor[(16, 9, 2), float32] */;
  %55 = subtract(%48, %49) /* ty=Tensor[(16, 9, 2), int8] */;
  %56 = %52.0;
  %57 = %53.0;
  (%54, %55, %56, %var_4882, %57)
}

def @func_5068() -> (Tensor[(756, ?), uint8], Tensor[(10, 14, 1), float64], Tensor[(756, ?), bool], Tensor[(756, 1), float32]) {
  %58 = @func_3660() /* ty=Tensor[(756, 1), float64] */;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(756, 1), float32] */;
  %60 = cosh(%59) /* ty=Tensor[(756, 1), float32] */;
  %61 = cast(%60, dtype="uint8") /* ty=Tensor[(756, 1), uint8] */;
  %62 = shape_of(%58, dtype="int32") /* ty=Tensor[(2), int32] */;
  %63 = cast(%58, dtype="uint8") /* ty=Tensor[(756, 1), uint8] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %65 = cast(%58, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %66 = shape_of(%60, dtype="int32") /* ty=Tensor[(2), int32] */;
  %67 = cast(%60, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %69 = cast(%60, dtype="float32") /* ty=Tensor[(756, 1), float32] */;
  %70 = right_shift(%63, %64) /* ty=Tensor[(756, ?), uint8] */;
  %71 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  %72 = equal(%67, %68) /* ty=Tensor[(756, ?), bool] */;
  %73 = log10(%69) /* ty=Tensor[(756, 1), float32] */;
  (%70, %71, %72, %73)
}

def @func_6074() -> (Tensor[(10, 14, 1), float32],) {
  %74 = @func_4954() /* ty=Tensor[(10, 14, 1), float64] */;
  %75 = cast(%74, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %76 = tan(%75) /* ty=Tensor[(10, 14, 1), float32] */;
  (%76,)
}

def @func_3458() -> Tensor[(3, 3, 15), float64] {
  %77 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %77.1
}

def @func_5492(%var_5473: Tensor[(3, 3, 15), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) {
  %78 = cast(%var_5473, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %79 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %80 = %79.0;
  %81 = cast(%var_5473, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%80, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %85 = maximum(%83, %84) /* ty=Tensor[(3, 3, 15), int64] */;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(3, 3, 15), float32] */;
  %87 = cosh(%78) /* ty=Tensor[(3, 3, 15), float64] */;
  %88 = exp(%86) /* ty=Tensor[(3, 3, 15), float32] */;
  (%87, %88)
}

def @func_4397(%var_4362: float32) -> (Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) {
  %89 = cast(%var_4362, dtype="float32") /* ty=float32 */;
  %90 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 3), float32] */;
  %91 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %92 = floor_divide(%89, %90) /* ty=Tensor[(2, 11, 3), float32] */;
  %93 = %91.0;
  %94 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  (%92, %93, %94)
}

def @func_6611() -> (Tensor[(10, 14, ?), float32],) {
  %95 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %96 = %95.0;
  %97 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 14, 1), float64] */, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %101 = power(%99, %100) /* ty=Tensor[(10, 14, ?), float32] */;
  (%101,)
}

def @func_7043() -> (Tensor[(10, 14, 1), float64],) {
  %102 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  (%102,)
}

def @func_2254() -> (Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) {
  %103 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %104 = cast(meta[relay.Constant][4] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %105 = reshape(%104, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %106 = @func_1669(%105) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %107 = %103.2;
  %108 = %106.0;
  (%107, %108, meta[relay.Constant][4] /* ty=Tensor[(140), float64] */)
}

def @func_2120(%var_2106: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %109 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %110 = cast(%var_2106, dtype="float64") /* ty=Tensor[(756), float64] */;
  %111 = reshape(%110, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %112 = @func_1897(%111) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %113 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %115 = reshape(%114, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %116 = @func_1929(%115) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %117 = %109.1;
  %118 = %112.0;
  %119 = %113.0;
  %120 = %116.4;
  (%117, %118, %var_2106, %119, %120, meta[relay.Constant][5] /* ty=Tensor[(990), float32] */)
}

def @func_2617() -> (Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) {
  %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 16, 1), int16] */, dtype="int16") /* ty=Tensor[(16, 16, 1), int16] */;
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 16, 13), int16] */, dtype="int16") /* ty=Tensor[(16, 16, 13), int16] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %124 = reshape(%123, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %125 = @func_1929(%124) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %126 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 16, 1), int16] */, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
  %127 = acosh(%126) /* ty=Tensor[(16, 16, 1), float32] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(16, 16, 1), float64] */;
  %129 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
  %130 = bitwise_and(%121, %122) /* ty=Tensor[(16, 16, 13), int16] */;
  %131 = %125.0;
  %132 = rsqrt(%128) /* ty=Tensor[(16, 16, 1), float64] */;
  %133 = %129.2;
  (%130, %131, meta[relay.Constant][8] /* ty=Tensor[(990), float32] */, %132, %133)
}

def @func_2499() -> Tensor[(10, 14, 1), float64] {
  %134 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %134.0
}

def @func_3402() -> (Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) {
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %136 = cast(meta[relay.Constant][10] /* ty=Tensor[(294), uint64] */, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %137 = reshape(%135, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %138 = reshape(%136, newshape=[294, 1]) /* ty=Tensor[(294, 1), uint64] */;
  %139 = @func_3305(%137, %138) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) */;
  %140 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %141 = cast(meta[relay.Constant][9] /* ty=Tensor[(756), float64] */, dtype="int16") /* ty=Tensor[(756), int16] */;
  %142 = cast(%140, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %143 = subtract(%141, %142) /* ty=Tensor[(10, 14, 756), int16] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %145 = %139.1;
  %146 = log2(%144) /* ty=Tensor[(10, 14, 756), float64] */;
  (%145, meta[relay.Constant][10] /* ty=Tensor[(294), uint64] */, %146)
}

def @func_2152() -> (Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %147 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %148 = %147.0;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %150 = cos(%149) /* ty=Tensor[(10, 14, 1), float64] */;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %152 = reshape(%151, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %153 = @func_1669(%152) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %154 = %153.2;
  (%150, %154)
}

def @func_2866(%var_2841: Tensor[(4, 14, 3), float64], %var_2853: Tensor[(165), float32], %var_2859: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(165), float32], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(4, 14, 3), float32]) {
  %155 = cast(%var_2853, dtype="float32") /* ty=Tensor[(165), float32] */;
  %156 = reshape(%155, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
  %157 = @func_2233(%156) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
  %158 = cast(%var_2859, dtype="float64") /* ty=Tensor[(756), float64] */;
  %159 = reshape(%158, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %160 = @func_1897(%159) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %161 = cast(%var_2841, dtype="float64") /* ty=Tensor[(4, 14, 3), float64] */;
  %162 = log10(%161) /* ty=Tensor[(4, 14, 3), float64] */;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(4, 14, 3), float32] */;
  %164 = %157.2;
  %165 = %160.0;
  %166 = acosh(%163) /* ty=Tensor[(4, 14, 3), float32] */;
  (%164, %var_2853, %165, %var_2859, %166)
}

def @func_5293() -> (Tensor[(140), float64],) {
  %167 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %168 = %167.1;
  (%168,)
}

def @func_1833() -> (Tensor[(10, 14, 1), float64],) {
  %169 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  (%169,)
}

def @func_7433(%var_7361: Tensor[(105840), float64], %var_7385: Tensor[(462), float64]) -> (Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) {
  %170 = cast(%var_7361, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %171 = reshape(%170, newshape=[10, 14, 756]) /* ty=Tensor[(10, 14, 756), float64] */;
  %172 = @func_3909(%171) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) */;
  %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %174 = reshape(%173, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
  %175 = @func_3713(%174) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
  %176 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %177 = %176.1;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(140), float64] */;
  %179 = reshape(%178, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %180 = @func_2811(%179) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) */;
  %181 = cast(%var_7361, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %182 = reshape(%181, newshape=[52920, 2]) /* ty=Tensor[(52920, 2), float64] */;
  %183 = @func_5730(%182) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) */;
  %184 = cast(%var_7385, dtype="float64") /* ty=Tensor[(462), float64] */;
  %185 = reshape(%184, newshape=[3, 11, 14]) /* ty=Tensor[(3, 11, 14), float64] */;
  %186 = @func_5250(%185) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) */;
  %187 = %186.1;
  %188 = cast(%177, dtype="bool") /* ty=Tensor[(140), bool] */;
  %189 = cast(%187, dtype="bool") /* ty=Tensor[(16, 16, 1), bool] */;
  %190 = @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %191 = @func_6013() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %192 = %172.1;
  %193 = %175.0;
  %194 = %180.3;
  %195 = %183.1;
  %196 = greater_equal(%188, %189) /* ty=Tensor[(16, 16, 140), bool] */;
  %197 = %190.0;
  %198 = %191.0;
  (%192, %var_7361, %193, meta[relay.Constant][11] /* ty=Tensor[(1120), float64] */, %var_7385, %194, %195, %196, %197, %198)
}

def @func_18(%var_2: Tensor[(3, 3, 15), float64]) -> Tensor[(3, 3, 15), float64] {
  %199 = cast(%var_2, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  log2(%199) /* ty=Tensor[(3, 3, 15), float64] */
}

def @func_5161() -> Tensor[(756, 6), bool] {
  %200 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
  %201 = cast(%200, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %202 = cast(meta[relay.Constant][12] /* ty=Tensor[(756, 6), float64] */, dtype="bool") /* ty=Tensor[(756, 6), bool] */;
  greater(%201, %202) /* ty=Tensor[(756, 6), bool] */
}

def @func_2811(%var_2792: Tensor[(140), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) {
  %203 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %204 = %203.4;
  %205 = cast(%204, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %206 = reshape(%205, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %207 = cast(%var_2792, dtype="float64") /* ty=Tensor[(140), float64] */;
  %208 = reshape(%207, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %209 = @func_1669(%208) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %210 = %209.1;
  %211 = cast(%var_2792, dtype="bool") /* ty=Tensor[(140), bool] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %216 = @func_18(%206) /* ty=Tensor[(3, 3, 15), float64] */;
  %217 = less_equal(%213, %214) /* ty=Tensor[(10, 14, ?), bool] */;
  %218 = %215.2;
  (%204, %216, %217, %218)
}

def @func_6194(%var_6180: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), bool], Tensor[(10, 14, 1), float32]) {
  %219 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %220 = cast(%219, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %221 = cast(%var_6180, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %222 = cast(%219, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %223 = not_equal(%220, %221) /* ty=Tensor[(10, 14, 7), bool] */;
  %224 = log2(%222) /* ty=Tensor[(10, 14, 1), float32] */;
  (%223, %224)
}

def @func_2745() -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %225 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %226 = %225.0;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %228 = reshape(%227, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %229 = @func_1669(%228) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %230 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  %231 = %229.2;
  (%230, %226, %231)
}

def @func_4954() -> Tensor[(10, 14, 1), float64] {
  %232 = @func_4283() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %232.0
}

def @func_4262(%var_4249: Tensor[(14, 6, 140), float32]) -> (Tensor[(84), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(294), uint64], Tensor[(14, 6, 140), float64], Tensor[(14, 6, 140), int16], Tensor[(10, 14, 1), float64], Tensor[(1400), float64], Tensor[(11, 2, 13), float64]) {
  %233 = cast(meta[relay.Constant][14] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %234 = reshape(%233, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %235 = @func_1929(%234) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %236 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %237 = %236.1;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(140), float64] */;
  %239 = reshape(%238, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
  %240 = @func_818(%239) /* ty=(Tensor[(10, 14, 1), float64],) */;
  %241 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %242 = cast(meta[relay.Constant][13] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %243 = reshape(%242, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
  %244 = @func_3200(%243) /* ty=(Tensor[(14, 6, ?), int32],) */;
  %245 = %244.0;
  %246 = cast(%245, dtype="int16") /* ty=Tensor[(14, 6, ?), int16] */;
  %247 = cast(%237, dtype="int16") /* ty=Tensor[(140), int16] */;
  %248 = bitwise_xor(%246, %247) /* ty=Tensor[(14, 6, 140), int16] */;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(14, 6, 140), float32] */;
  %250 = cosh(%249) /* ty=Tensor[(14, 6, 140), float32] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(14, 6, 140), float64] */;
  %252 = cast(%var_4249, dtype="int16") /* ty=Tensor[(14, 6, 140), int16] */;
  %253 = shape_of(%250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%250, dtype="int16") /* ty=Tensor[(14, 6, 140), int16] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %256 = cast(meta[relay.Constant][15] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %257 = reshape(%256, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %258 = @func_3799(%257) /* ty=(Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) */;
  %259 = %235.4;
  %260 = %240.0;
  %261 = %241.1;
  %262 = sqrt(%251) /* ty=Tensor[(14, 6, 140), float64] */;
  %263 = maximum(%254, %255) /* ty=Tensor[(14, 6, 140), int16] */;
  %264 = %258.1;
  %265 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  (meta[relay.Constant][13] /* ty=Tensor[(84), float64] */, %259, meta[relay.Constant][14] /* ty=Tensor[(990), float32] */, %260, %261, %262, %263, %264, meta[relay.Constant][15] /* ty=Tensor[(1400), float64] */, %265)
}

def @func_5829() -> (Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  %266 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %267 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %268 = reshape(%267, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %269 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %270 = %266.0;
  %271 = @func_2343(%268) /* ty=Tensor[(10, 14, 8), bool] */;
  %272 = %269.0;
  (%270, %271, meta[relay.Constant][16] /* ty=Tensor[(1120), float64] */, %272)
}

def @func_1566() -> (Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %273 = cast(meta[relay.Constant][17] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %274 = reshape(%273, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
  %275 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
  %276 = sin(%275) /* ty=Tensor[(9, 6, 10), float64] */;
  %277 = cast(%276, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
  %278 = cast(meta[relay.Constant][17] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %279 = reshape(%278, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
  %280 = cast(meta[relay.Constant][19] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %281 = reshape(%280, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
  %282 = @func_818(%281) /* ty=(Tensor[(10, 14, 1), float64],) */;
  %283 = @func_984(%274) /* ty=Tensor[(8, 7, 11), bool] */;
  %284 = exp(%277) /* ty=Tensor[(9, 6, 10), float32] */;
  %285 = @func_984(%279) /* ty=Tensor[(8, 7, 11), bool] */;
  %286 = %282.0;
  (%283, meta[relay.Constant][17] /* ty=Tensor[(56), int64] */, %284, %285, %286, meta[relay.Constant][19] /* ty=Tensor[(140), float64] */)
}

def @func_2700(%var_2694: Tensor[(1, 14, 7), uint64], %var_2695: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), bool] {
  %287 = cast(%var_2694, dtype="bool") /* ty=Tensor[(1, 14, 7), bool] */;
  %288 = cast(%var_2695, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
  less_equal(%287, %288) /* ty=Tensor[(3, 14, 7), bool] */
}

def @func_4438(%var_4418: Tensor[(756, 6), float64]) -> (Tensor[(756, 6), bool], Tensor[(140), float64]) {
  %289 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
  %290 = cast(%289, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %291 = cast(%var_4418, dtype="bool") /* ty=Tensor[(756, 6), bool] */;
  %292 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %293 = logical_or(%290, %291) /* ty=Tensor[(756, 6), bool] */;
  %294 = %292.2;
  (%293, %294)
}

def @func_7278(%var_7266: Tensor[(195, 3), int64]) -> (Tensor[(10, 14, 1), float64], Tensor[(9, 5, 13), bool], int64, Tensor[(195, 3), int64], Tensor[(3, 3, 15), float32], Tensor[(45, 3), float64]) {
  %295 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %296 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %297 = cast(%var_7266, dtype="int64") /* ty=Tensor[(195, 3), int64] */;
  %298 = %295.0;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %300 = reshape(%296, newshape=[]) /* ty=int64 */;
  %301 = reshape(%297, newshape=[9, 5, 13]) /* ty=Tensor[(9, 5, 13), int64] */;
  %302 = reshape(%299, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %303 = @func_6700(%300, %301, %302) /* ty=(Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) */;
  %304 = cast(meta[relay.Constant][20] /* ty=Tensor[(45, 3), float64] */, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
  %305 = reshape(%304, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %306 = @func_5492(%305) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) */;
  %307 = %303.0;
  %308 = %306.1;
  (%298, %307, -6 /* ty=int64 */, %var_7266, %308, meta[relay.Constant][20] /* ty=Tensor[(45, 3), float64] */)
}

def @main(%var_7541: Tensor[(165), float32]) -> (Tensor[(10, 14, 1), float64], Tensor[(16, 16, 1), float64], Tensor[(140), float64], Tensor[(15, ?, 11), bool]) {
  %309 = @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %310 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %311 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %312 = cast(%var_7541, dtype="float32") /* ty=Tensor[(165), float32] */;
  %313 = reshape(%312, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
  %314 = @func_2233(%313) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
  %315 = %314.0;
  %316 = cast(%315, dtype="float64") /* ty=Tensor[(15, 1, 11), float64] */;
  %317 = acos(%316) /* ty=Tensor[(15, 1, 11), float64] */;
  %318 = cast(%var_7541, dtype="bool") /* ty=Tensor[(165), bool] */;
  %319 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%315, dtype="bool") /* ty=Tensor[(15, 1, 11), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = equal(%320, %321) /* ty=Tensor[(15, ?, 11), bool] */;
  %323 = cast(%322, dtype="bool") /* ty=Tensor[(15, ?, 11), bool] */;
  %324 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%317, dtype="bool") /* ty=Tensor[(15, 1, 11), bool] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %327 = %309.0;
  %328 = %310.3;
  %329 = %311.1;
  %330 = logical_and(%325, %326) /* ty=Tensor[(15, ?, 11), bool] */;
  (%327, %328, %329, %330)
}

def @func_5555() -> (Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) {
  %331 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 99), float32] */, dtype="float32") /* ty=Tensor[(10, 99), float32] */;
  %332 = reshape(%331, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %333 = @func_1929(%332) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %334 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 99), float32] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
  %335 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %337 = %333.3;
  %338 = rsqrt(%334) /* ty=Tensor[(10, 99), float64] */;
  %339 = atan(%336) /* ty=Tensor[(11, 2, 13), float32] */;
  (%337, %338, %339)
}

def @func_3200(%var_3176: Tensor[(14, 6, 1), float64]) -> (Tensor[(14, 6, ?), int32],) {
  %340 = cast(%var_3176, dtype="float64") /* ty=Tensor[(14, 6, 1), float64] */;
  %341 = sqrt(%340) /* ty=Tensor[(14, 6, 1), float64] */;
  %342 = cast(%var_3176, dtype="int32") /* ty=Tensor[(14, 6, 1), int32] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="int32") /* ty=Tensor[(14, 6, 1), int32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %346 = maximum(%344, %345) /* ty=Tensor[(14, 6, ?), int32] */;
  (%346,)
}

def @func_4736(%var_4710: Tensor[(10, 14, 756), int32]) -> (Tensor[(10, 14, 756), uint32], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  %347 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %348 = %347.0;
  %349 = cast(%var_4710, dtype="uint32") /* ty=Tensor[(10, 14, 756), uint32] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="uint32") /* ty=Tensor[(10, 14, 756), uint32] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %353 = cast(meta[relay.Constant][22] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %354 = reshape(%353, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %355 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %356 = minimum(%351, %352) /* ty=Tensor[(10, 14, 756), uint32] */;
  %357 = @func_2343(%354) /* ty=Tensor[(10, 14, 8), bool] */;
  %358 = %355.0;
  (%356, %357, meta[relay.Constant][22] /* ty=Tensor[(1120), float64] */, %358)
}

def @func_5655() -> (Tensor[(10, 14, 1), float64],) {
  %359 = @func_4483() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %360 = %359.0;
  (%360,)
}

def @func_1929(%var_1908: Tensor[(11, 10, 9), float32]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) {
  %361 = cast(meta[relay.Constant][23] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %362 = reshape(%361, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %363 = cast(%var_1908, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %364 = erf(%363) /* ty=Tensor[(11, 10, 9), float32] */;
  %365 = cast(%364, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %366 = @func_18(%362) /* ty=Tensor[(3, 3, 15), float64] */;
  %367 = cast(%366, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %368 = reshape(%367, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %369 = cast(%366, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %370 = reshape(%369, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %371 = sin(%365) /* ty=Tensor[(11, 10, 9), float32] */;
  %372 = @func_18(%368) /* ty=Tensor[(3, 3, 15), float64] */;
  %373 = @func_18(%370) /* ty=Tensor[(3, 3, 15), float64] */;
  (%366, meta[relay.Constant][23] /* ty=Tensor[(135), float64] */, %371, %372, %373)
}

def @func_2995() -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64]) {
  %374 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %375 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %376 = %374.2;
  %377 = %375.0;
  (%376, %377)
}

def @func_6140() -> (Tensor[(10, 14, 1), float64],) {
  %378 = @func_5855() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) */;
  %379 = %378.0;
  (%379,)
}

def @func_984(%var_977: Tensor[(8, 7, 1), int64]) -> Tensor[(8, 7, 11), bool] {
  %380 = cast(%var_977, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %381 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 7, 11), int64] */, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  greater_equal(%380, %381) /* ty=Tensor[(8, 7, 11), bool] */
}

def @func_3412() -> Tensor[(756, 1), float64] {
  %382 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  sqrt(%384) /* ty=Tensor[(756, 1), float64] */
}

def @func_6889() -> (Tensor[(10, 14, 1), float64],) {
  %385 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %386 = %385.0;
  (%386,)
}

def @func_3553() -> (Tensor[(3, 3, 15), float64], Tensor[(140), float64]) {
  %387 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %388 = @func_3458() /* ty=Tensor[(3, 3, 15), float64] */;
  %389 = %387.1;
  (%388, %389)
}

def @func_3713(%var_3676: Tensor[(56, 20), float64]) -> (Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) {
  %390 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %391 = cast(%var_3676, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
  %392 = reshape(%391, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %393 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %394 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
  %395 = acosh(%390) /* ty=Tensor[(6, 10, 8), float64] */;
  %396 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
  %397 = @func_2343(%392) /* ty=Tensor[(10, 14, 8), bool] */;
  %398 = %393.0;
  %399 = %394.3;
  (%395, %396, %397, %var_3676, %398, %399)
}

def @func_2065() -> (Tensor[(10, 14, 1), float64],) {
  %400 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %401 = %400.0;
  (%401,)
}

def @func_5730(%var_5710: Tensor[(52920, 2), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) {
  %402 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %403 = cast(%var_5710, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %404 = reshape(%403, newshape=[420, 252]) /* ty=Tensor[(420, 252), float64] */;
  %405 = @func_4773(%404) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) */;
  %406 = cast(%var_5710, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %407 = sigmoid(%406) /* ty=Tensor[(52920, 2), float64] */;
  %408 = cast(%407, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %409 = asinh(%408) /* ty=Tensor[(52920, 2), float32] */;
  %410 = cast(%407, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(2), int32] */;
  %412 = cast(%409, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %414 = cast(%409, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %415 = %402.2;
  %416 = %405.1;
  %417 = floor_divide(%412, %413) /* ty=Tensor[(52920, 2), float32] */;
  %418 = asin(%414) /* ty=Tensor[(52920, 2), float64] */;
  (%415, %416, %417, %418)
}

def @func_7338(%var_7318: Tensor[(140), float64]) -> (Tensor[(140), float32], Tensor[(8, 7, 11), bool]) {
  %419 = @func_5293() /* ty=(Tensor[(140), float64],) */;
  %420 = %419.0;
  %421 = cast(%var_7318, dtype="float32") /* ty=Tensor[(140), float32] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(1), int32] */;
  %423 = cast(%420, dtype="float32") /* ty=Tensor[(140), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?), float32] */;
  %425 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %426 = mod(%423, %424) /* ty=Tensor[(140), float32] */;
  %427 = %425.0;
  (%426, %427)
}

def @func_4483() -> (Tensor[(10, 14, 1), float64],) {
  %428 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  (%428,)
}

def @func_6786() -> Tensor[(8, 7, 11), bool] {
  %429 = @func_6460() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) */;
  %429.1
}

def @func_5361() -> (Tensor[(3, 3, 15), float64],) {
  %430 = @func_3458() /* ty=Tensor[(3, 3, 15), float64] */;
  (%430,)
}

def @func_4557(%var_4535: Tensor[(1120), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64]) {
  %431 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %432 = %431.4;
  %433 = cast(%432, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %434 = cast(%var_4535, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %435 = reshape(%434, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %436 = acos(%433) /* ty=Tensor[(3, 3, 15), float64] */;
  %437 = @func_2343(%435) /* ty=Tensor[(10, 14, 8), bool] */;
  (%436, %437, %var_4535)
}

def @func_6460() -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) {
  %438 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %439 = cast(2.48387f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %440 = reshape(%439, newshape=[]) /* ty=float32 */;
  %441 = @func_4397(%440) /* ty=(Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) */;
  %442 = %441.1;
  %443 = cast(%442, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %444 = cast(2.48387f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %445 = equal(%443, %444) /* ty=Tensor[(10, 14, 1), bool] */;
  %446 = cast(meta[relay.Constant][26] /* ty=Tensor[(84), float64] */, dtype="bool") /* ty=Tensor[(84), bool] */;
  %447 = cast(%445, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %448 = cast(meta[relay.Constant][26] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %449 = reshape(%448, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
  %450 = @func_3200(%449) /* ty=(Tensor[(14, 6, ?), int32],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(14, 6, ?), float64] */;
  %453 = @func_4987() /* ty=Tensor[(140), float64] */;
  %454 = %438.1;
  %455 = greater(%446, %447) /* ty=Tensor[(10, 14, 84), bool] */;
  %456 = log(%452) /* ty=Tensor[(14, 6, ?), float64] */;
  (%453, %454, %455, %456)
}

def @func_2267() -> (Tensor[(10, 14, 1), float64],) {
  %457 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %458 = %457.0;
  (%458,)
}

def @func_3799(%var_3771: Tensor[(10, 14, 10), float64]) -> (Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) {
  %459 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %460 = %459.0;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %462 = cast(%var_3771, dtype="float32") /* ty=Tensor[(10, 14, 10), float32] */;
  %463 = mod(%461, %462) /* ty=Tensor[(10, 14, 10), float32] */;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(10, 14, 10), float32] */;
  %465 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %466 = log10(%464) /* ty=Tensor[(10, 14, 10), float32] */;
  %467 = %465.0;
  (%466, %467)
}

def @func_3660() -> Tensor[(756, 1), float64] {
  @func_3412() /* ty=Tensor[(756, 1), float64] */
}

def @func_5271() -> (Tensor[(10, 14, 1), float64],) {
  %468 = @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %469 = %468.0;
  (%469,)
}

def @func_6700(%var_6619: int64, %var_6620: Tensor[(9, 5, 13), int64], %var_6626: Tensor[(140), float64]) -> (Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) {
  %470 = cast(%var_6619, dtype="bool") /* ty=bool */;
  %471 = cast(%var_6620, dtype="bool") /* ty=Tensor[(9, 5, 13), bool] */;
  %472 = cast(meta[relay.Constant][27] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %473 = reshape(%472, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %474 = @func_2289(%473) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %475 = %474.0;
  %476 = cast(%var_6626, dtype="float64") /* ty=Tensor[(140), float64] */;
  %477 = reshape(%476, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %478 = @func_1669(%477) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %479 = %478.2;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(140), float32] */;
  %481 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%475, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %484 = greater_equal(%470, %471) /* ty=Tensor[(9, 5, 13), bool] */;
  %485 = divide(%482, %483) /* ty=Tensor[(10, 14, ?), float32] */;
  (%484, %var_6626, meta[relay.Constant][27] /* ty=Tensor[(990), float32] */, %485)
}

def @func_6861() -> (Tensor[(10, 14, 1), float64], Tensor[(8, 7, 11), float32]) {
  %486 = @func_6786() /* ty=Tensor[(8, 7, 11), bool] */;
  %487 = cast(%486, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %488 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  %489 = cosh(%487) /* ty=Tensor[(8, 7, 11), float32] */;
  (%488, %489)
}

def @func_7184() -> (Tensor[(3, 3, 15), float64],) {
  %490 = @func_5361() /* ty=(Tensor[(3, 3, 15), float64],) */;
  %491 = %490.0;
  (%491,)
}

def @func_6047(%var_6044: Tensor[(288), uint16], %var_6045: Tensor[(3, 28), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(288), uint16], Tensor[(3, 28), float64]) {
  %492 = @func_4283() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %493 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %494 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %495 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %496 = cast(%var_6045, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
  %497 = reshape(%493, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %498 = reshape(%494, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %499 = reshape(%495, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %500 = reshape(%496, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %501 = @func_4899(%497, %498, %499, %500) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) */;
  %502 = %492.0;
  %503 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  %504 = %501.4;
  (%502, %503, %504, %var_6044, %var_6045)
}

def @func_6324(%var_6289: Tensor[(10, 14, 12), float64]) -> (Tensor[(10, 14, 12), bool], Tensor[(140), float64], Tensor[(105840), float64], Tensor[(10, 14, 756), float64]) {
  %505 = @func_4954() /* ty=Tensor[(10, 14, 1), float64] */;
  %506 = cast(%505, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %507 = cast(%var_6289, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
  %508 = cast(meta[relay.Constant][28] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %509 = reshape(%508, newshape=[52920, 2]) /* ty=Tensor[(52920, 2), float64] */;
  %510 = @func_5730(%509) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) */;
  %511 = @func_5437() /* ty=(Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) */;
  %512 = logical_and(%506, %507) /* ty=Tensor[(10, 14, 12), bool] */;
  %513 = %510.0;
  %514 = %511.0;
  (%512, %513, meta[relay.Constant][28] /* ty=Tensor[(105840), float64] */, %514)
}

def @func_6810() -> (Tensor[(10, 14, 1), float32], Tensor[(11, 2, 13), float64], float32) {
  %515 = @func_6074() /* ty=(Tensor[(10, 14, 1), float32],) */;
  %516 = cast(-3.56444f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %517 = reshape(%516, newshape=[]) /* ty=float32 */;
  %518 = @func_4397(%517) /* ty=(Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) */;
  %519 = %515.0;
  %520 = %518.2;
  (%519, %520, -3.56444f /* ty=float32 */)
}

def @func_2343(%var_2329: Tensor[(10, 14, 8), float64]) -> Tensor[(10, 14, 8), bool] {
  %521 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %522 = %521.0;
  %523 = cast(%522, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %524 = cast(%var_2329, dtype="bool") /* ty=Tensor[(10, 14, 8), bool] */;
  not_equal(%523, %524) /* ty=Tensor[(10, 14, 8), bool] */
}

def @func_4666(%var_4644: Tensor[(135), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) {
  %525 = cast(%var_4644, dtype="float64") /* ty=Tensor[(135), float64] */;
  %526 = reshape(%525, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %527 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %528 = %527.1;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(140), float64] */;
  %530 = @func_18(%526) /* ty=Tensor[(3, 3, 15), float64] */;
  %531 = atanh(%529) /* ty=Tensor[(140), float64] */;
  (%530, %var_4644, %531)
}

def @func_4987() -> Tensor[(140), float64] {
  %532 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %532.1
}

def @func_5437() -> (Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) {
  %533 = @func_5102() /* ty=(Tensor[(10, 14, 756), float64],) */;
  %534 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %535 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %536 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %537 = cast(meta[relay.Constant][30] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %538 = reshape(%534, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %539 = reshape(%535, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %540 = reshape(%536, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %541 = reshape(%537, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %542 = @func_4899(%538, %539, %540, %541) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) */;
  %543 = %533.0;
  %544 = %542.0;
  (%543, %544, meta[relay.Constant][29] /* ty=Tensor[(288), uint16] */, meta[relay.Constant][30] /* ty=Tensor[(42, 2), float64] */)
}

def @func_5329() -> (Tensor[(9, 6, 10), float32], Tensor[(10, 14, 1), float64], Tensor[(140), float64], Tensor[(135), float64]) {
  %545 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %546 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %547 = cast(meta[relay.Constant][31] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %548 = reshape(%547, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %549 = @func_4666(%548) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) */;
  %550 = %545.0;
  %551 = %546.0;
  %552 = %549.2;
  (%550, %551, %552, meta[relay.Constant][31] /* ty=Tensor[(135), float64] */)
}

def @func_4610(%var_4602: Tensor[(756), float64], %var_4603: Tensor[(294), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(756), float64], Tensor[(294), uint64]) {
  %553 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %554 = cast(%var_4602, dtype="float64") /* ty=Tensor[(756), float64] */;
  %555 = cast(%var_4603, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %556 = reshape(%554, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %557 = reshape(%555, newshape=[294, 1]) /* ty=Tensor[(294, 1), uint64] */;
  %558 = @func_3305(%556, %557) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) */;
  %559 = %553.1;
  %560 = %558.1;
  (%559, %560, %var_4602, %var_4603)
}

def @func_6584(%var_6537: Tensor[(10, 14, 756), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 756), float64], Tensor[(10, 14, 756), bool], Tensor[(11, 15), float32], Tensor[(10, 14, 756), float32]) {
  %561 = @func_5829() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) */;
  %562 = @func_5437() /* ty=(Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %565 = tan(%564) /* ty=Tensor[(10, 14, 756), float64] */;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %567 = exp(%566) /* ty=Tensor[(10, 14, 756), float64] */;
  %568 = cast(%var_6537, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %572 = cast(%563, dtype="uint16") /* ty=Tensor[(10, 14, 756), uint16] */;
  %573 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%567, dtype="uint16") /* ty=Tensor[(10, 14, 756), uint16] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %576 = bitwise_or(%574, %575) /* ty=Tensor[(10, 14, 756), uint16] */;
  %577 = cast(%var_6537, dtype="uint8") /* ty=Tensor[(10, 14, 756), uint8] */;
  %578 = shape_of(%565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%565, dtype="uint8") /* ty=Tensor[(10, 14, 756), uint8] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %581 = bitwise_and(%579, %580) /* ty=Tensor[(10, 14, 756), uint8] */;
  %582 = cast(%581, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %583 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%576, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = @func_5627() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) */;
  %587 = cast(%581, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %588 = %561.0;
  %589 = divide(%570, %571) /* ty=Tensor[(10, 14, 756), float64] */;
  %590 = equal(%584, %585) /* ty=Tensor[(10, 14, 756), bool] */;
  %591 = %586.2;
  %592 = log(%587) /* ty=Tensor[(10, 14, 756), float32] */;
  (%588, %589, %590, %591, %592)
}

def @func_1991() -> (Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) {
  %593 = cast(meta[relay.Constant][32] /* ty=Tensor[(756, 1), float64] */, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  %594 = reshape(%593, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %595 = @func_1897(%594) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %596 = %595.0;
  %597 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
  %600 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%596, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %603 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %604 = reshape(%603, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %605 = @func_1929(%604) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %606 = cast(meta[relay.Constant][33] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %607 = reshape(%606, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %608 = @func_1929(%607) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %609 = multiply(%601, %602) /* ty=Tensor[(10, 14, ?), uint8] */;
  %610 = %605.3;
  %611 = %608.2;
  (meta[relay.Constant][32] /* ty=Tensor[(756, 1), float64] */, %609, %610, meta[relay.Constant][33] /* ty=Tensor[(990), float32] */, %611)
}

def @func_3259() -> (Tensor[(10, 14, 1), float64],) {
  %612 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %613 = %612.0;
  (%613,)
}

def @func_5102() -> (Tensor[(10, 14, 756), float64],) {
  %614 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %615 = %614.2;
  (%615,)
}

def @func_2233(%var_2218: Tensor[(15, 1, 11), float32]) -> (Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) {
  %616 = cast(%var_2218, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
  %617 = cast(meta[relay.Constant][34] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %618 = reshape(%617, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
  %619 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %620 = exp(%616) /* ty=Tensor[(15, 1, 11), float32] */;
  %621 = @func_984(%618) /* ty=Tensor[(8, 7, 11), bool] */;
  %622 = %619.0;
  (%620, %621, meta[relay.Constant][34] /* ty=Tensor[(56), int64] */, %622)
}

def @func_5627() -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) {
  %623 = cast(meta[relay.Constant][35] /* ty=Tensor[(11, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15), float32] */;
  %624 = reshape(%623, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
  %625 = @func_2233(%624) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
  %626 = @func_4987() /* ty=Tensor[(140), float64] */;
  %627 = %625.1;
  (%626, %627, meta[relay.Constant][35] /* ty=Tensor[(11, 15), float32] */)
}

def @func_6928() -> Tensor[(3, 3, 15), float64] {
  %628 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %628.4
}

def @func_4773(%var_4766: Tensor[(420, 252), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) {
  %629 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %630 = cast(%var_4766, dtype="float64") /* ty=Tensor[(420, 252), float64] */;
  %631 = reshape(%630, newshape=[10, 14, 756]) /* ty=Tensor[(10, 14, 756), float64] */;
  %632 = @func_3909(%631) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) */;
  %633 = %629.2;
  %634 = %632.0;
  (%633, %634, %var_4766)
}

def @func_1897(%var_1869: Tensor[(6, 9, 14), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) {
  %635 = cast(%var_1869, dtype="float64") /* ty=Tensor[(6, 9, 14), float64] */;
  %636 = acosh(%635) /* ty=Tensor[(6, 9, 14), float64] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(6, 9, 14), bool] */;
  %638 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_1869, dtype="bool") /* ty=Tensor[(6, 9, 14), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %642 = greater_equal(%639, %640) /* ty=Tensor[(6, 9, 14), bool] */;
  (%641, %642)
}

def @func_4283() -> (Tensor[(10, 14, 1), float64],) {
  %643 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  (%643,)
}

def @func_5250(%var_5206: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) {
  %644 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %645 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %646 = cast(%var_5206, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
  %647 = log10(%646) /* ty=Tensor[(3, 11, 14), float64] */;
  %648 = cast(%647, dtype="float32") /* ty=Tensor[(3, 11, 14), float32] */;
  %649 = %644.1;
  %650 = %645.3;
  %651 = exp(%648) /* ty=Tensor[(3, 11, 14), float32] */;
  (%649, %650, %651)
}

def @func_3305(%var_3273: Tensor[(756), float64], %var_3287: Tensor[(294, 1), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) {
  %652 = cast(%var_3273, dtype="float64") /* ty=Tensor[(756), float64] */;
  %653 = reshape(%652, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %654 = @func_1897(%653) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %655 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %658 = cast(%var_3273, dtype="int32") /* ty=Tensor[(756), int32] */;
  %659 = cast(meta[relay.Constant][36] /* ty=Tensor[(98), uint64] */, dtype="uint64") /* ty=Tensor[(98), uint64] */;
  %660 = cast(%var_3287, dtype="uint64") /* ty=Tensor[(294, 1), uint64] */;
  %661 = reshape(%659, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), uint64] */;
  %662 = reshape(%660, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), uint64] */;
  %663 = %654.0;
  %664 = left_shift(%657, %658) /* ty=Tensor[(10, 14, 756), int32] */;
  %665 = @func_2700(%661, %662) /* ty=Tensor[(3, 14, 7), bool] */;
  (%663, %664, %665, meta[relay.Constant][36] /* ty=Tensor[(98), uint64] */, %var_3287)
}

def @func_1669(%var_1667: Tensor[(140), float64]) -> (Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %666 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %667 = cast(%var_1667, dtype="float64") /* ty=Tensor[(140), float64] */;
  %668 = reshape(%667, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
  %669 = @func_818(%668) /* ty=(Tensor[(10, 14, 1), float64],) */;
  %670 = %666.3;
  %671 = %669.0;
  (%670, %671, %var_1667)
}

def @func_818(%var_814: Tensor[(10, 14, 1), float64]) -> (Tensor[(10, 14, 1), float64],) {
  %672 = cast(%var_814, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %673 = acosh(%672) /* ty=Tensor[(10, 14, 1), float64] */;
  (%673,)
}

def @func_3815() -> Tensor[(11, 2, 13), float64] {
  %674 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  %675 = exp(%674) /* ty=Tensor[(11, 2, 13), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
  tan(%676) /* ty=Tensor[(11, 2, 13), float64] */
}

def @func_6774(%var_6750: Tensor[(10, 14, 756), float32]) -> (Tensor[(990), float32], Tensor[(990, 1), float32], Tensor[(10, 14, 756), bool], Tensor[(10, 14, 756), bool]) {
  %677 = cast(meta[relay.Constant][38] /* ty=Tensor[(990, 1), float32] */, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %678 = reshape(%677, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %679 = @func_2289(%678) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %680 = @func_5393() /* ty=Tensor[(10, 14, 756), uint64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %682 = atan(%681) /* ty=Tensor[(10, 14, 756), float64] */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %684 = cosh(%683) /* ty=Tensor[(10, 14, 756), float32] */;
  %685 = cast(%var_6750, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = cast(%682, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %690 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%684, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = %679.2;
  %694 = greater(%687, %688) /* ty=Tensor[(10, 14, 756), bool] */;
  %695 = greater_equal(%691, %692) /* ty=Tensor[(10, 14, 756), bool] */;
  (%693, meta[relay.Constant][38] /* ty=Tensor[(990, 1), float32] */, %694, %695)
}

def @func_7015(%var_6998: Tensor[(4, 14, 8), float64], %var_7011: Tensor[(98), uint64]) -> (Tensor[(4, 14, 8), float64], Tensor[(3, 3, 15), float64], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294), uint64]) {
  %696 = cast(%var_6998, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
  %697 = @func_5555() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) */;
  %698 = cast(%var_7011, dtype="uint64") /* ty=Tensor[(98), uint64] */;
  %699 = cast(meta[relay.Constant][39] /* ty=Tensor[(294), uint64] */, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %700 = reshape(%698, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), uint64] */;
  %701 = reshape(%699, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), uint64] */;
  %702 = log10(%696) /* ty=Tensor[(4, 14, 8), float64] */;
  %703 = %697.0;
  %704 = @func_2700(%700, %701) /* ty=Tensor[(3, 14, 7), bool] */;
  (%702, %703, %704, %var_7011, meta[relay.Constant][39] /* ty=Tensor[(294), uint64] */)
}

def @func_3909(%var_3890: Tensor[(10, 14, 756), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) {
  %705 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %706 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %707 = %706.2;
  %708 = cast(%var_3890, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %712 = logical_or(%710, %711) /* ty=Tensor[(10, 14, 756), bool] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %714 = shape_of(%var_3890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%var_3890, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %717 = %705.1;
  %718 = mod(%715, %716) /* ty=Tensor[(10, 14, 756), float32] */;
  (%717, %718)
}

def @func_7290() -> (Tensor[(10, 14, 756), int32],) {
  %719 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %720 = %719.0;
  (%720,)
}

def @func_7507(%var_7500: Tensor[(105840), float64]) -> (Tensor[(462), float64], Tensor[(10, 14, 1120), int32], Tensor[(105840), int64], Tensor[(105840), float64]) {
  %721 = cast(meta[relay.Constant][41] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %722 = cast(meta[relay.Constant][40] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %723 = reshape(%721, newshape=[105840]) /* ty=Tensor[(105840), float64] */;
  %724 = reshape(%722, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %725 = @func_7433(%723, %724) /* ty=(Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) */;
  %726 = %725.3;
  %727 = @func_6140() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %728 = %727.0;
  %729 = cast(%726, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %730 = cast(%728, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %731 = cast(%var_7500, dtype="int64") /* ty=Tensor[(105840), int64] */;
  %732 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(105840), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %733 = cast(meta[relay.Constant][41] /* ty=Tensor[(105840), float64] */, dtype="int64") /* ty=Tensor[(105840), int64] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?), int64] */;
  %735 = cast(meta[relay.Constant][41] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %736 = minimum(%729, %730) /* ty=Tensor[(10, 14, 1120), int32] */;
  %737 = add(%733, %734) /* ty=Tensor[(105840), int64] */;
  %738 = acos(%735) /* ty=Tensor[(105840), float64] */;
  (meta[relay.Constant][40] /* ty=Tensor[(462), float64] */, %736, %737, %738)
}

def @func_4471(%var_4443: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), float64]) {
  %739 = cast(%var_4443, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %740 = cast(%var_4443, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
  %741 = sin(%739) /* ty=Tensor[(4, 7, 6), float32] */;
  %742 = atanh(%740) /* ty=Tensor[(4, 7, 6), float64] */;
  (%741, %742)
}

def @func_5782(%var_5749: Tensor[(756), float64], %var_5777: Tensor[(1, 1120), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 10), float32], Tensor[(100, 14), float64], Tensor[(756), float32], Tensor[(10, 14, 8), bool], Tensor[(1, 1120), float64]) {
  %743 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
  %744 = cast(%var_5749, dtype="float64") /* ty=Tensor[(756), float64] */;
  %745 = reshape(%744, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %746 = @func_3062(%745) /* ty=(Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) */;
  %747 = cast(meta[relay.Constant][42] /* ty=Tensor[(100, 14), float64] */, dtype="float64") /* ty=Tensor[(100, 14), float64] */;
  %748 = reshape(%747, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %749 = @func_3799(%748) /* ty=(Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) */;
  %750 = cast(%var_5749, dtype="float32") /* ty=Tensor[(756), float32] */;
  %751 = cast(%var_5777, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %752 = reshape(%751, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
  %753 = @func_3713(%752) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
  %754 = %743.3;
  %755 = %746.3;
  %756 = %749.0;
  %757 = asin(%750) /* ty=Tensor[(756), float32] */;
  %758 = %753.2;
  (%754, %755, %756, meta[relay.Constant][42] /* ty=Tensor[(100, 14), float64] */, %757, %758, %var_5777)
}

def @func_6013() -> (Tensor[(10, 14, 1), float64],) {
  %759 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %760 = %759.0;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %762 = acos(%761) /* ty=Tensor[(10, 14, 1), float64] */;
  (%762,)
}

def @func_2000() -> (Tensor[(10, 14, 1), float64],) {
  %763 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %764 = %763.0;
  (%764,)
}

def @func_7230(%var_7214: Tensor[(1120), float64], %var_7218: Tensor[(756, 1), float64]) -> (Tensor[(11, 2, 13), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(756, 1), float64], Tensor[(140), float64], Tensor[(10, 14, 1120), float32]) {
  %765 = cast(%var_7214, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %766 = reshape(%765, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
  %767 = @func_3713(%766) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
  %768 = cast(%var_7218, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  %769 = reshape(%768, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %770 = @func_2120(%769) /* ty=(Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %771 = @func_5293() /* ty=(Tensor[(140), float64],) */;
  %772 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %773 = cast(%var_7214, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %774 = cast(%772, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %775 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  %776 = %767.4;
  %777 = %770.5;
  %778 = %771.0;
  %779 = subtract(%773, %774) /* ty=Tensor[(10, 14, 1120), float32] */;
  (%775, %776, %777, %var_7218, %778, %779)
}

def @func_3734(%var_3723: Tensor[(5, 8, 3), float32]) -> (Tensor[(5, 8, 3), float32],) {
  %780 = cast(%var_3723, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
  %781 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(5, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %784 = floor_mod(%782, %783) /* ty=Tensor[(5, 8, 3), float32] */;
  (%784,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5555() -> (Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 99), float32] */, dtype="float32") /* ty=Tensor[(10, 99), float32] */;
  %1 = reshape(%0, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %2 = @func_1929(%1) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 99), float32] */, dtype="float64") /* ty=Tensor[(10, 99), float64] */;
  %4 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %6 = %2.3;
  %7 = rsqrt(%3) /* ty=Tensor[(10, 99), float64] */;
  %8 = atan(%5) /* ty=Tensor[(11, 2, 13), float32] */;
  (%6, %7, %8)
}

def @func_6891() -> (Tensor[(10, 14, 1), float64],) {
  @func_6889() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_3555() -> (Tensor[(3, 3, 15), float64], Tensor[(140), float64]) {
  @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */
}

def @func_6928() -> Tensor[(3, 3, 15), float64] {
  %9 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %9.4
}

def @func_1568() -> (Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */
}

def @func_7507(%var_7500: Tensor[(105840), float64]) -> (Tensor[(462), float64], Tensor[(10, 14, 1120), int32], Tensor[(105840), int64], Tensor[(105840), float64]) {
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(462), float64] */, dtype="float64") /* ty=Tensor[(462), float64] */;
  %12 = reshape(%10, newshape=[105840]) /* ty=Tensor[(105840), float64] */;
  %13 = reshape(%11, newshape=[462]) /* ty=Tensor[(462), float64] */;
  %14 = @func_7433(%12, %13) /* ty=(Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) */;
  %15 = %14.3;
  %16 = @func_6140() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %17 = %16.0;
  %18 = cast(%15, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %19 = cast(%17, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %20 = cast(%var_7500, dtype="int64") /* ty=Tensor[(105840), int64] */;
  %21 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(105840), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(105840), float64] */, dtype="int64") /* ty=Tensor[(105840), int64] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), int64] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
  %25 = minimum(%18, %19) /* ty=Tensor[(10, 14, 1120), int32] */;
  %26 = add(%22, %23) /* ty=Tensor[(105840), int64] */;
  %27 = acos(%24) /* ty=Tensor[(105840), float64] */;
  (meta[relay.Constant][1] /* ty=Tensor[(462), float64] */, %25, %26, %27)
}

def @func_2269() -> (Tensor[(10, 14, 1), float64],) {
  @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_2289(%var_2286: Tensor[(990), float32]) -> (Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %28 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %29 = %28.0;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %31 = cast(%var_2286, dtype="float32") /* ty=Tensor[(990), float32] */;
  %32 = reshape(%31, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %33 = @func_1929(%32) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %34 = exp(%30) /* ty=Tensor[(10, 14, 1), float32] */;
  %35 = %33.3;
  (%34, %35, %var_2286)
}

def @func_3799(%var_3771: Tensor[(10, 14, 10), float64]) -> (Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) {
  %36 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %39 = cast(%var_3771, dtype="float32") /* ty=Tensor[(10, 14, 10), float32] */;
  %40 = mod(%38, %39) /* ty=Tensor[(10, 14, 10), float32] */;
  %41 = cast(%40, dtype="float32") /* ty=Tensor[(10, 14, 10), float32] */;
  %42 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %43 = log10(%41) /* ty=Tensor[(10, 14, 10), float32] */;
  %44 = %42.0;
  (%43, %44)
}

def @func_2001() -> (Tensor[(10, 14, 1), float64],) {
  %47 = fn () -> (Tensor[(10, 14, 1), float64],) {
    %45 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_4773(%var_4766: Tensor[(420, 252), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) {
  %48 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %49 = cast(%var_4766, dtype="float64") /* ty=Tensor[(420, 252), float64] */;
  %50 = reshape(%49, newshape=[10, 14, 756]) /* ty=Tensor[(10, 14, 756), float64] */;
  %51 = @func_3909(%50) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) */;
  %52 = %48.2;
  %53 = %51.0;
  (%52, %53, %var_4766)
}

def @func_4776(%var_4774: Tensor[(420, 252), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) {
  @func_4773(%var_4774) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) */
}

def @func_2703(%var_2701: Tensor[(1, 14, 7), uint64], %var_2702: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), bool] {
  %56 = fn (%var_2694: Tensor[(1, 14, 7), uint64], %var_2695: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), bool] {
    %54 = cast(%var_2694, dtype="bool") /* ty=Tensor[(1, 14, 7), bool] */;
    %55 = cast(%var_2695, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
    less_equal(%54, %55) /* ty=Tensor[(3, 14, 7), bool] */
  };
  %56(%var_2701, %var_2702) /* ty=Tensor[(3, 14, 7), bool] */
}

def @func_5856() -> (Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) {
  %62 = fn () -> (Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) {
    %57 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
    %58 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
    %59 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
    %60 = %57.2;
    %61 = %58.2;
    (%59, %60, %61)
  };
  %62() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) */
}

def @func_6787() -> Tensor[(8, 7, 11), bool] {
  %64 = fn () -> Tensor[(8, 7, 11), bool] {
    %63 = @func_6460() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) */;
    %63.1
  };
  %64() /* ty=Tensor[(8, 7, 11), bool] */
}

def @func_3309(%var_3307: Tensor[(756), float64], %var_3308: Tensor[(294, 1), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) {
  @func_3305(%var_3307, %var_3308) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) */
}

def @func_5655() -> (Tensor[(10, 14, 1), float64],) {
  %65 = @func_4483() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %66 = %65.0;
  (%66,)
}

def @func_4904(%var_4900: Tensor[(16, 9, 2), uint16], %var_4901: Tensor[(16, 9, 2), uint16], %var_4902: Tensor[(16, 9, 2), uint16], %var_4903: Tensor[(84), float64]) -> (Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) {
  %88 = fn (%var_4867: Tensor[(16, 9, 2), uint16], %var_4868: Tensor[(16, 9, 2), uint16], %var_4873: Tensor[(16, 9, 2), uint16], %var_4882: Tensor[(84), float64]) -> (Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) {
    %67 = cast(%var_4868, dtype="uint16") /* ty=Tensor[(16, 9, 2), uint16] */;
    %68 = shape_of(%var_4867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %69 = cast(%var_4867, dtype="uint16") /* ty=Tensor[(16, 9, 2), uint16] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %71 = add(%69, %70) /* ty=Tensor[(16, 9, 2), uint16] */;
    %72 = cast(%var_4873, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
    %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
    %74 = cast(%71, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
    %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %76 = cast(%var_4868, dtype="int8") /* ty=Tensor[(16, 9, 2), int8] */;
    %77 = shape_of(%var_4873, dtype="int32") /* ty=Tensor[(3), int32] */;
    %78 = cast(%var_4873, dtype="int8") /* ty=Tensor[(16, 9, 2), int8] */;
    %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %80 = cast(%var_4882, dtype="float64") /* ty=Tensor[(84), float64] */;
    %81 = reshape(%80, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
    %82 = @func_3200(%81) /* ty=(Tensor[(14, 6, ?), int32],) */;
    %83 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %84 = floor_divide(%74, %75) /* ty=Tensor[(16, 9, 2), float32] */;
    %85 = subtract(%78, %79) /* ty=Tensor[(16, 9, 2), int8] */;
    %86 = %82.0;
    %87 = %83.0;
    (%84, %85, %86, %var_4882, %87)
  };
  %88(%var_4900, %var_4901, %var_4902, %var_4903) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) */
}

def @func_21(%var_19: Tensor[(3, 3, 15), float64]) -> Tensor[(3, 3, 15), float64] {
  @func_18(%var_19) /* ty=Tensor[(3, 3, 15), float64] */
}

def @func_7278(%var_7266: Tensor[(195, 3), int64]) -> (Tensor[(10, 14, 1), float64], Tensor[(9, 5, 13), bool], int64, Tensor[(195, 3), int64], Tensor[(3, 3, 15), float32], Tensor[(45, 3), float64]) {
  %89 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %90 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %91 = cast(%var_7266, dtype="int64") /* ty=Tensor[(195, 3), int64] */;
  %92 = %89.0;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %94 = reshape(%90, newshape=[]) /* ty=int64 */;
  %95 = reshape(%91, newshape=[9, 5, 13]) /* ty=Tensor[(9, 5, 13), int64] */;
  %96 = reshape(%93, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %97 = @func_6700(%94, %95, %96) /* ty=(Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) */;
  %98 = cast(meta[relay.Constant][3] /* ty=Tensor[(45, 3), float64] */, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
  %99 = reshape(%98, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %100 = @func_5492(%99) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) */;
  %101 = %97.0;
  %102 = %100.1;
  (%92, %101, -6 /* ty=int64 */, %var_7266, %102, meta[relay.Constant][3] /* ty=Tensor[(45, 3), float64] */)
}

def @func_5730(%var_5710: Tensor[(52920, 2), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) {
  %103 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %104 = cast(%var_5710, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %105 = reshape(%104, newshape=[420, 252]) /* ty=Tensor[(420, 252), float64] */;
  %106 = @func_4773(%105) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(420, 252), float64]) */;
  %107 = cast(%var_5710, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %108 = sigmoid(%107) /* ty=Tensor[(52920, 2), float64] */;
  %109 = cast(%108, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %110 = asinh(%109) /* ty=Tensor[(52920, 2), float32] */;
  %111 = cast(%108, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %113 = cast(%110, dtype="float32") /* ty=Tensor[(52920, 2), float32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %115 = cast(%110, dtype="float64") /* ty=Tensor[(52920, 2), float64] */;
  %116 = %103.2;
  %117 = %106.1;
  %118 = floor_divide(%113, %114) /* ty=Tensor[(52920, 2), float32] */;
  %119 = asin(%115) /* ty=Tensor[(52920, 2), float64] */;
  (%116, %117, %118, %119)
}

def @func_3203(%var_3201: Tensor[(14, 6, 1), float64]) -> (Tensor[(14, 6, ?), int32],) {
  @func_3200(%var_3201) /* ty=(Tensor[(14, 6, ?), int32],) */
}

def @func_1835() -> (Tensor[(10, 14, 1), float64],) {
  @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_7043() -> (Tensor[(10, 14, 1), float64],) {
  %120 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  (%120,)
}

def @func_3259() -> (Tensor[(10, 14, 1), float64],) {
  %121 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %122 = %121.0;
  (%122,)
}

def @func_5785(%var_5783: Tensor[(756), float64], %var_5784: Tensor[(1, 1120), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 10), float32], Tensor[(100, 14), float64], Tensor[(756), float32], Tensor[(10, 14, 8), bool], Tensor[(1, 1120), float64]) {
  %139 = fn (%var_5749: Tensor[(756), float64], %var_5777: Tensor[(1, 1120), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 10), float32], Tensor[(100, 14), float64], Tensor[(756), float32], Tensor[(10, 14, 8), bool], Tensor[(1, 1120), float64]) {
    %123 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
    %124 = cast(%var_5749, dtype="float64") /* ty=Tensor[(756), float64] */;
    %125 = reshape(%124, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %126 = @func_3062(%125) /* ty=(Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) */;
    %127 = cast(meta[relay.Constant][4] /* ty=Tensor[(100, 14), float64] */, dtype="float64") /* ty=Tensor[(100, 14), float64] */;
    %128 = reshape(%127, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
    %129 = @func_3799(%128) /* ty=(Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) */;
    %130 = cast(%var_5749, dtype="float32") /* ty=Tensor[(756), float32] */;
    %131 = cast(%var_5777, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %132 = reshape(%131, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
    %133 = @func_3713(%132) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
    %134 = %123.3;
    %135 = %126.3;
    %136 = %129.0;
    %137 = asin(%130) /* ty=Tensor[(756), float32] */;
    %138 = %133.2;
    (%134, %135, %136, meta[relay.Constant][4] /* ty=Tensor[(100, 14), float64] */, %137, %138, %var_5777)
  };
  %139(%var_5783, %var_5784) /* ty=(Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 10), float32], Tensor[(100, 14), float64], Tensor[(756), float32], Tensor[(10, 14, 8), bool], Tensor[(1, 1120), float64]) */
}

def @func_5495(%var_5493: Tensor[(3, 3, 15), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) {
  @func_5492(%var_5493) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) */
}

def @func_7234(%var_7232: Tensor[(1120), float64], %var_7233: Tensor[(756, 1), float64]) -> (Tensor[(11, 2, 13), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(756, 1), float64], Tensor[(140), float64], Tensor[(10, 14, 1120), float32]) {
  @func_7230(%var_7232, %var_7233) /* ty=(Tensor[(11, 2, 13), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(756, 1), float64], Tensor[(140), float64], Tensor[(10, 14, 1120), float32]) */
}

def @func_1810() -> Tensor[(10, 14, 1), float64] {
  %140 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %140.4
}

def @func_3404() -> (Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) {
  @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */
}

def @func_2871(%var_2868: Tensor[(4, 14, 3), float64], %var_2869: Tensor[(165), float32], %var_2870: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(165), float32], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(4, 14, 3), float32]) {
  @func_2866(%var_2868, %var_2869, %var_2870) /* ty=(Tensor[(56), int64], Tensor[(165), float32], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(4, 14, 3), float32]) */
}

def @func_1900(%var_1898: Tensor[(6, 9, 14), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) {
  @func_1897(%var_1898) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */
}

def @func_3912(%var_3910: Tensor[(10, 14, 756), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) {
  @func_3909(%var_3910) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) */
}

def @func_821(%var_819: Tensor[(10, 14, 1), float64]) -> (Tensor[(10, 14, 1), float64],) {
  @func_818(%var_819) /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_6587(%var_6585: Tensor[(10, 14, 756), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 756), float64], Tensor[(10, 14, 756), bool], Tensor[(11, 15), float32], Tensor[(10, 14, 756), float32]) {
  @func_6584(%var_6585) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 756), float64], Tensor[(10, 14, 756), bool], Tensor[(11, 15), float32], Tensor[(10, 14, 756), float32]) */
}

def @func_1833() -> (Tensor[(10, 14, 1), float64],) {
  %141 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  (%141,)
}

def @func_2256() -> (Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) {
  @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */
}

def @func_2619() -> (Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) {
  @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */
}

def @func_5330() -> (Tensor[(9, 6, 10), float32], Tensor[(10, 14, 1), float64], Tensor[(140), float64], Tensor[(135), float64]) {
  %150 = fn () -> (Tensor[(9, 6, 10), float32], Tensor[(10, 14, 1), float64], Tensor[(140), float64], Tensor[(135), float64]) {
    %142 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
    %143 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %144 = cast(meta[relay.Constant][5] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %145 = reshape(%144, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %146 = @func_4666(%145) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) */;
    %147 = %142.0;
    %148 = %143.0;
    %149 = %146.2;
    (%147, %148, %149, meta[relay.Constant][5] /* ty=Tensor[(135), float64] */)
  };
  %150() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(10, 14, 1), float64], Tensor[(140), float64], Tensor[(135), float64]) */
}

def @func_7019(%var_7017: Tensor[(4, 14, 8), float64], %var_7018: Tensor[(98), uint64]) -> (Tensor[(4, 14, 8), float64], Tensor[(3, 3, 15), float64], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294), uint64]) {
  @func_7015(%var_7017, %var_7018) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(3, 3, 15), float64], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294), uint64]) */
}

def @func_1931(%var_1930: Tensor[(11, 10, 9), float32]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) {
  %164 = fn (%var_1908: Tensor[(11, 10, 9), float32]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) {
    %151 = cast(meta[relay.Constant][6] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %152 = reshape(%151, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
    %153 = cast(%var_1908, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
    %154 = erf(%153) /* ty=Tensor[(11, 10, 9), float32] */;
    %155 = cast(%154, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
    %156 = @func_18(%152) /* ty=Tensor[(3, 3, 15), float64] */;
    %157 = cast(%156, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
    %158 = reshape(%157, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
    %159 = cast(%156, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
    %160 = reshape(%159, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
    %161 = sin(%155) /* ty=Tensor[(11, 10, 9), float32] */;
    %162 = @func_18(%158) /* ty=Tensor[(3, 3, 15), float64] */;
    %163 = @func_18(%160) /* ty=Tensor[(3, 3, 15), float64] */;
    (%156, meta[relay.Constant][6] /* ty=Tensor[(135), float64] */, %161, %162, %163)
  };
  %164(%var_1930) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */
}

def @func_6197(%var_6195: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), bool], Tensor[(10, 14, 1), float32]) {
  @func_6194(%var_6195) /* ty=(Tensor[(10, 14, 7), bool], Tensor[(10, 14, 1), float32]) */
}

def @main(%var_7541: Tensor[(165), float32]) -> (Tensor[(10, 14, 1), float64], Tensor[(16, 16, 1), float64], Tensor[(140), float64], Tensor[(15, ?, 11), bool]) {
  %165 = @func_2269() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %166 = @func_2619() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
  %167 = @func_3555() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %168 = cast(%var_7541, dtype="float32") /* ty=Tensor[(165), float32] */;
  %169 = reshape(%168, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
  %170 = @func_2235(%169) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
  %171 = %170.0;
  %172 = cast(%171, dtype="float64") /* ty=Tensor[(15, 1, 11), float64] */;
  %173 = acos(%172) /* ty=Tensor[(15, 1, 11), float64] */;
  %174 = cast(%var_7541, dtype="bool") /* ty=Tensor[(165), bool] */;
  %175 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%171, dtype="bool") /* ty=Tensor[(15, 1, 11), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = equal(%176, %177) /* ty=Tensor[(15, ?, 11), bool] */;
  %179 = cast(%178, dtype="bool") /* ty=Tensor[(15, ?, 11), bool] */;
  %180 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%173, dtype="bool") /* ty=Tensor[(15, 1, 11), bool] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %183 = %165.0;
  %184 = %166.3;
  %185 = %167.1;
  %186 = logical_and(%181, %182) /* ty=Tensor[(15, ?, 11), bool] */;
  (%183, %184, %185, %186)
}

def @func_6811() -> (Tensor[(10, 14, 1), float32], Tensor[(11, 2, 13), float64], float32) {
  %193 = fn () -> (Tensor[(10, 14, 1), float32], Tensor[(11, 2, 13), float64], float32) {
    %187 = @func_6074() /* ty=(Tensor[(10, 14, 1), float32],) */;
    %188 = cast(-3.56444f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %189 = reshape(%188, newshape=[]) /* ty=float32 */;
    %190 = @func_4397(%189) /* ty=(Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) */;
    %191 = %187.0;
    %192 = %190.2;
    (%191, %192, -3.56444f /* ty=float32 */)
  };
  %193() /* ty=(Tensor[(10, 14, 1), float32], Tensor[(11, 2, 13), float64], float32) */
}

def @func_7230(%var_7214: Tensor[(1120), float64], %var_7218: Tensor[(756, 1), float64]) -> (Tensor[(11, 2, 13), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(756, 1), float64], Tensor[(140), float64], Tensor[(10, 14, 1120), float32]) {
  %194 = cast(%var_7214, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %195 = reshape(%194, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
  %196 = @func_3713(%195) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
  %197 = cast(%var_7218, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
  %198 = reshape(%197, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %199 = @func_2120(%198) /* ty=(Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %200 = @func_5293() /* ty=(Tensor[(140), float64],) */;
  %201 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %202 = cast(%var_7214, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %203 = cast(%201, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %204 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  %205 = %196.4;
  %206 = %199.5;
  %207 = %200.0;
  %208 = subtract(%202, %203) /* ty=Tensor[(10, 14, 1120), float32] */;
  (%204, %205, %206, %var_7218, %207, %208)
}

def @func_7290() -> (Tensor[(10, 14, 756), int32],) {
  %209 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %210 = %209.0;
  (%210,)
}

def @func_3200(%var_3176: Tensor[(14, 6, 1), float64]) -> (Tensor[(14, 6, ?), int32],) {
  %211 = cast(%var_3176, dtype="float64") /* ty=Tensor[(14, 6, 1), float64] */;
  %212 = sqrt(%211) /* ty=Tensor[(14, 6, 1), float64] */;
  %213 = cast(%var_3176, dtype="int32") /* ty=Tensor[(14, 6, 1), int32] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="int32") /* ty=Tensor[(14, 6, 1), int32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %217 = maximum(%215, %216) /* ty=Tensor[(14, 6, ?), int32] */;
  (%217,)
}

def @func_3553() -> (Tensor[(3, 3, 15), float64], Tensor[(140), float64]) {
  %218 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %219 = @func_3458() /* ty=Tensor[(3, 3, 15), float64] */;
  %220 = %218.1;
  (%219, %220)
}

def @func_7510(%var_7508: Tensor[(105840), float64]) -> (Tensor[(462), float64], Tensor[(10, 14, 1120), int32], Tensor[(105840), int64], Tensor[(105840), float64]) {
  @func_7507(%var_7508) /* ty=(Tensor[(462), float64], Tensor[(10, 14, 1120), int32], Tensor[(105840), int64], Tensor[(105840), float64]) */
}

def @func_5831() -> (Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  @func_5829() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) */
}

def @func_4666(%var_4644: Tensor[(135), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) {
  %221 = cast(%var_4644, dtype="float64") /* ty=Tensor[(135), float64] */;
  %222 = reshape(%221, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
  %223 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %224 = %223.1;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(140), float64] */;
  %226 = @func_18(%222) /* ty=Tensor[(3, 3, 15), float64] */;
  %227 = atanh(%225) /* ty=Tensor[(140), float64] */;
  (%226, %var_4644, %227)
}

def @func_6014() -> (Tensor[(10, 14, 1), float64],) {
  %232 = fn () -> (Tensor[(10, 14, 1), float64],) {
    %228 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %229 = %228.0;
    %230 = cast(%229, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %231 = acos(%230) /* ty=Tensor[(10, 14, 1), float64] */;
    (%231,)
  };
  %232() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_6141() -> (Tensor[(10, 14, 1), float64],) {
  %235 = fn () -> (Tensor[(10, 14, 1), float64],) {
    %233 = @func_5855() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(990), float32], Tensor[(990), float32]) */;
    %234 = %233.0;
    (%234,)
  };
  %235() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_7185() -> (Tensor[(3, 3, 15), float64],) {
  %238 = fn () -> (Tensor[(3, 3, 15), float64],) {
    %236 = @func_5361() /* ty=(Tensor[(3, 3, 15), float64],) */;
    %237 = %236.0;
    (%237,)
  };
  %238() /* ty=(Tensor[(3, 3, 15), float64],) */
}

def @func_2464() -> (Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %239 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %240 = cast(meta[relay.Constant][7] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %241 = reshape(%240, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %242 = @func_2289(%241) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %243 = %239.0;
  %244 = %242.1;
  (%243, %244, meta[relay.Constant][7] /* ty=Tensor[(990), float32] */)
}

def @func_2292(%var_2290: Tensor[(990), float32]) -> (Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  @func_2289(%var_2290) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */
}

def @func_5657() -> (Tensor[(10, 14, 1), float64],) {
  @func_5655() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_3660() -> Tensor[(756, 1), float64] {
  @func_3412() /* ty=Tensor[(756, 1), float64] */
}

def @func_5271() -> (Tensor[(10, 14, 1), float64],) {
  %245 = @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %246 = %245.0;
  (%246,)
}

def @func_4736(%var_4710: Tensor[(10, 14, 756), int32]) -> (Tensor[(10, 14, 756), uint32], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  %247 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %248 = %247.0;
  %249 = cast(%var_4710, dtype="uint32") /* ty=Tensor[(10, 14, 756), uint32] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%248, dtype="uint32") /* ty=Tensor[(10, 14, 756), uint32] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %253 = cast(meta[relay.Constant][8] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %254 = reshape(%253, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %255 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %256 = minimum(%251, %252) /* ty=Tensor[(10, 14, 756), uint32] */;
  %257 = @func_2343(%254) /* ty=Tensor[(10, 14, 8), bool] */;
  %258 = %255.0;
  (%256, %257, meta[relay.Constant][8] /* ty=Tensor[(1120), float64] */, %258)
}

def @func_5102() -> (Tensor[(10, 14, 756), float64],) {
  %259 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %260 = %259.2;
  (%260,)
}

def @func_5362() -> (Tensor[(3, 3, 15), float64],) {
  %262 = fn () -> (Tensor[(3, 3, 15), float64],) {
    %261 = @func_3458() /* ty=Tensor[(3, 3, 15), float64] */;
    (%261,)
  };
  %262() /* ty=(Tensor[(3, 3, 15), float64],) */
}

def @func_2813(%var_2812: Tensor[(140), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) {
  %279 = fn (%var_2792: Tensor[(140), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) {
    %263 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
    %264 = %263.4;
    %265 = cast(%264, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
    %266 = reshape(%265, newshape=[3, 3, 15]) /* ty=Tensor[(3, 3, 15), float64] */;
    %267 = cast(%var_2792, dtype="float64") /* ty=Tensor[(140), float64] */;
    %268 = reshape(%267, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %269 = @func_1669(%268) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %270 = %269.1;
    %271 = cast(%var_2792, dtype="bool") /* ty=Tensor[(140), bool] */;
    %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(%270, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %275 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %276 = @func_18(%266) /* ty=Tensor[(3, 3, 15), float64] */;
    %277 = less_equal(%273, %274) /* ty=Tensor[(10, 14, ?), bool] */;
    %278 = %275.2;
    (%264, %276, %277, %278)
  };
  %279(%var_2812) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) */
}

def @func_3909(%var_3890: Tensor[(10, 14, 756), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) {
  %280 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %281 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %282 = %281.2;
  %283 = cast(%var_3890, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = logical_or(%285, %286) /* ty=Tensor[(10, 14, 756), bool] */;
  %288 = cast(%287, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %289 = shape_of(%var_3890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%var_3890, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %292 = %280.1;
  %293 = mod(%290, %291) /* ty=Tensor[(10, 14, 756), float32] */;
  (%292, %293)
}

def @func_7015(%var_6998: Tensor[(4, 14, 8), float64], %var_7011: Tensor[(98), uint64]) -> (Tensor[(4, 14, 8), float64], Tensor[(3, 3, 15), float64], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294), uint64]) {
  %294 = cast(%var_6998, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
  %295 = @func_5555() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) */;
  %296 = cast(%var_7011, dtype="uint64") /* ty=Tensor[(98), uint64] */;
  %297 = cast(meta[relay.Constant][9] /* ty=Tensor[(294), uint64] */, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %298 = reshape(%296, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), uint64] */;
  %299 = reshape(%297, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), uint64] */;
  %300 = log10(%294) /* ty=Tensor[(4, 14, 8), float64] */;
  %301 = %295.0;
  %302 = @func_2700(%298, %299) /* ty=Tensor[(3, 14, 7), bool] */;
  (%300, %301, %302, %var_7011, meta[relay.Constant][9] /* ty=Tensor[(294), uint64] */)
}

def @func_818(%var_814: Tensor[(10, 14, 1), float64]) -> (Tensor[(10, 14, 1), float64],) {
  %303 = cast(%var_814, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
  %304 = acosh(%303) /* ty=Tensor[(10, 14, 1), float64] */;
  (%304,)
}

def @func_6777(%var_6775: Tensor[(10, 14, 756), float32]) -> (Tensor[(990), float32], Tensor[(990, 1), float32], Tensor[(10, 14, 756), bool], Tensor[(10, 14, 756), bool]) {
  @func_6774(%var_6775) /* ty=(Tensor[(990), float32], Tensor[(990, 1), float32], Tensor[(10, 14, 756), bool], Tensor[(10, 14, 756), bool]) */
}

def @func_2997() -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64]) {
  @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */
}

def @func_4954() -> Tensor[(10, 14, 1), float64] {
  %305 = @func_4283() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %305.0
}

def @func_5557() -> (Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) {
  @func_5555() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(10, 99), float64], Tensor[(11, 2, 13), float32]) */
}

def @func_6774(%var_6750: Tensor[(10, 14, 756), float32]) -> (Tensor[(990), float32], Tensor[(990, 1), float32], Tensor[(10, 14, 756), bool], Tensor[(10, 14, 756), bool]) {
  %306 = cast(meta[relay.Constant][10] /* ty=Tensor[(990, 1), float32] */, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %307 = reshape(%306, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %308 = @func_2289(%307) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %309 = @func_5393() /* ty=Tensor[(10, 14, 756), uint64] */;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %311 = atan(%310) /* ty=Tensor[(10, 14, 756), float64] */;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %313 = cosh(%312) /* ty=Tensor[(10, 14, 756), float32] */;
  %314 = cast(%var_6750, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = cast(%311, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %319 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%313, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = %308.2;
  %323 = greater(%316, %317) /* ty=Tensor[(10, 14, 756), bool] */;
  %324 = greater_equal(%320, %321) /* ty=Tensor[(10, 14, 756), bool] */;
  (%322, meta[relay.Constant][10] /* ty=Tensor[(990, 1), float32] */, %323, %324)
}

def @func_1897(%var_1869: Tensor[(6, 9, 14), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) {
  %325 = cast(%var_1869, dtype="float64") /* ty=Tensor[(6, 9, 14), float64] */;
  %326 = acosh(%325) /* ty=Tensor[(6, 9, 14), float64] */;
  %327 = cast(%326, dtype="bool") /* ty=Tensor[(6, 9, 14), bool] */;
  %328 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_1869, dtype="bool") /* ty=Tensor[(6, 9, 14), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %331 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %332 = greater_equal(%329, %330) /* ty=Tensor[(6, 9, 14), bool] */;
  (%331, %332)
}

def @func_2122(%var_2121: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  %345 = fn (%var_2106: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
    %333 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %334 = cast(%var_2106, dtype="float64") /* ty=Tensor[(756), float64] */;
    %335 = reshape(%334, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
    %336 = @func_1897(%335) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
    %337 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %338 = cast(meta[relay.Constant][11] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %339 = reshape(%338, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
    %340 = @func_1929(%339) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
    %341 = %333.1;
    %342 = %336.0;
    %343 = %337.0;
    %344 = %340.4;
    (%341, %342, %var_2106, %343, %344, meta[relay.Constant][11] /* ty=Tensor[(990), float32] */)
  };
  %345(%var_2121) /* ty=(Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */
}

def @func_5733(%var_5731: Tensor[(52920, 2), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) {
  @func_5730(%var_5731) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) */
}

def @func_3802(%var_3800: Tensor[(10, 14, 10), float64]) -> (Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) {
  @func_3799(%var_3800) /* ty=(Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) */
}

def @func_5492(%var_5473: Tensor[(3, 3, 15), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float32]) {
  %346 = cast(%var_5473, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %347 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %348 = %347.0;
  %349 = cast(%var_5473, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %353 = maximum(%351, %352) /* ty=Tensor[(3, 3, 15), int64] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(3, 3, 15), float32] */;
  %355 = cosh(%346) /* ty=Tensor[(3, 3, 15), float64] */;
  %356 = exp(%354) /* ty=Tensor[(3, 3, 15), float32] */;
  (%355, %356)
}

def @func_4559(%var_4558: Tensor[(1120), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64]) {
  %364 = fn (%var_4535: Tensor[(1120), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64]) {
    %357 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
    %358 = %357.4;
    %359 = cast(%358, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
    %360 = cast(%var_4535, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %361 = reshape(%360, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
    %362 = acos(%359) /* ty=Tensor[(3, 3, 15), float64] */;
    %363 = @func_2343(%361) /* ty=Tensor[(10, 14, 8), bool] */;
    (%362, %363, %var_4535)
  };
  %364(%var_4558) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64]) */
}

def @func_3736(%var_3735: Tensor[(5, 8, 3), float32]) -> (Tensor[(5, 8, 3), float32],) {
  %370 = fn (%var_3723: Tensor[(5, 8, 3), float32]) -> (Tensor[(5, 8, 3), float32],) {
    %365 = cast(%var_3723, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
    %366 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(5, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 3), float32] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %369 = floor_mod(%367, %368) /* ty=Tensor[(5, 8, 3), float32] */;
    (%369,)
  };
  %370(%var_3735) /* ty=(Tensor[(5, 8, 3), float32],) */
}

def @func_1671(%var_1670: Tensor[(140), float64]) -> (Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %377 = fn (%var_1667: Tensor[(140), float64]) -> (Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
    %371 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %372 = cast(%var_1667, dtype="float64") /* ty=Tensor[(140), float64] */;
    %373 = reshape(%372, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
    %374 = @func_818(%373) /* ty=(Tensor[(10, 14, 1), float64],) */;
    %375 = %371.3;
    %376 = %374.0;
    (%375, %376, %var_1667)
  };
  %377(%var_1670) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */
}

def @func_6584(%var_6537: Tensor[(10, 14, 756), float64]) -> (Tensor[(140), float64], Tensor[(10, 14, 756), float64], Tensor[(10, 14, 756), bool], Tensor[(11, 15), float32], Tensor[(10, 14, 756), float32]) {
  %378 = @func_5829() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) */;
  %379 = @func_5437() /* ty=(Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %382 = tan(%381) /* ty=Tensor[(10, 14, 756), float64] */;
  %383 = cast(%382, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %384 = exp(%383) /* ty=Tensor[(10, 14, 756), float64] */;
  %385 = cast(%var_6537, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %389 = cast(%380, dtype="uint16") /* ty=Tensor[(10, 14, 756), uint16] */;
  %390 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%384, dtype="uint16") /* ty=Tensor[(10, 14, 756), uint16] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %393 = bitwise_or(%391, %392) /* ty=Tensor[(10, 14, 756), uint16] */;
  %394 = cast(%var_6537, dtype="uint8") /* ty=Tensor[(10, 14, 756), uint8] */;
  %395 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%382, dtype="uint8") /* ty=Tensor[(10, 14, 756), uint8] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %398 = bitwise_and(%396, %397) /* ty=Tensor[(10, 14, 756), uint8] */;
  %399 = cast(%398, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %400 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%393, dtype="bool") /* ty=Tensor[(10, 14, 756), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = @func_5627() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) */;
  %404 = cast(%398, dtype="float32") /* ty=Tensor[(10, 14, 756), float32] */;
  %405 = %378.0;
  %406 = divide(%387, %388) /* ty=Tensor[(10, 14, 756), float64] */;
  %407 = equal(%401, %402) /* ty=Tensor[(10, 14, 756), bool] */;
  %408 = %403.2;
  %409 = log(%404) /* ty=Tensor[(10, 14, 756), float32] */;
  (%405, %406, %407, %408, %409)
}

def @func_2466() -> (Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) {
  @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */
}

def @func_6461() -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) {
  %429 = fn () -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) {
    %410 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
    %411 = cast(2.48387f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %412 = reshape(%411, newshape=[]) /* ty=float32 */;
    %413 = @func_4397(%412) /* ty=(Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) */;
    %414 = %413.1;
    %415 = cast(%414, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %416 = cast(2.48387f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %417 = equal(%415, %416) /* ty=Tensor[(10, 14, 1), bool] */;
    %418 = cast(meta[relay.Constant][13] /* ty=Tensor[(84), float64] */, dtype="bool") /* ty=Tensor[(84), bool] */;
    %419 = cast(%417, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %420 = cast(meta[relay.Constant][13] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %421 = reshape(%420, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
    %422 = @func_3200(%421) /* ty=(Tensor[(14, 6, ?), int32],) */;
    %423 = %422.0;
    %424 = cast(%423, dtype="float64") /* ty=Tensor[(14, 6, ?), float64] */;
    %425 = @func_4987() /* ty=Tensor[(140), float64] */;
    %426 = %410.1;
    %427 = greater(%418, %419) /* ty=Tensor[(10, 14, 84), bool] */;
    %428 = log(%424) /* ty=Tensor[(14, 6, ?), float64] */;
    (%425, %426, %427, %428)
  };
  %429() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 84), bool], Tensor[(14, 6, ?), float64]) */
}

def @func_6705(%var_6702: int64, %var_6703: Tensor[(9, 5, 13), int64], %var_6704: Tensor[(140), float64]) -> (Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) {
  @func_6700(%var_6702, %var_6703, %var_6704) /* ty=(Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) */
}

def @func_2499() -> Tensor[(10, 14, 1), float64] {
  %430 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %430.0
}

def @func_5395() -> Tensor[(10, 14, 756), uint64] {
  @func_5393() /* ty=Tensor[(10, 14, 756), uint64] */
}

def @func_6326(%var_6325: Tensor[(10, 14, 12), float64]) -> (Tensor[(10, 14, 12), bool], Tensor[(140), float64], Tensor[(105840), float64], Tensor[(10, 14, 756), float64]) {
  %441 = fn (%var_6289: Tensor[(10, 14, 12), float64]) -> (Tensor[(10, 14, 12), bool], Tensor[(140), float64], Tensor[(105840), float64], Tensor[(10, 14, 756), float64]) {
    %431 = @func_4954() /* ty=Tensor[(10, 14, 1), float64] */;
    %432 = cast(%431, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %433 = cast(%var_6289, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
    %434 = cast(meta[relay.Constant][14] /* ty=Tensor[(105840), float64] */, dtype="float64") /* ty=Tensor[(105840), float64] */;
    %435 = reshape(%434, newshape=[52920, 2]) /* ty=Tensor[(52920, 2), float64] */;
    %436 = @func_5730(%435) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) */;
    %437 = @func_5437() /* ty=(Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) */;
    %438 = logical_and(%432, %433) /* ty=Tensor[(10, 14, 12), bool] */;
    %439 = %436.0;
    %440 = %437.0;
    (%438, %439, meta[relay.Constant][14] /* ty=Tensor[(105840), float64] */, %440)
  };
  %441(%var_6325) /* ty=(Tensor[(10, 14, 12), bool], Tensor[(140), float64], Tensor[(105840), float64], Tensor[(10, 14, 756), float64]) */
}

def @func_5393() -> Tensor[(10, 14, 756), uint64] {
  %442 = @func_5102() /* ty=(Tensor[(10, 14, 756), float64],) */;
  %443 = %442.0;
  %444 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 14, 756), float64] */, dtype="uint64") /* ty=Tensor[(10, 14, 756), uint64] */;
  %445 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%443, dtype="uint64") /* ty=Tensor[(10, 14, 756), uint64] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%446, %447) /* ty=Tensor[(10, 14, 756), uint64] */
}

def @func_984(%var_977: Tensor[(8, 7, 1), int64]) -> Tensor[(8, 7, 11), bool] {
  %448 = cast(%var_977, dtype="bool") /* ty=Tensor[(8, 7, 1), bool] */;
  %449 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 7, 11), int64] */, dtype="bool") /* ty=Tensor[(8, 7, 11), bool] */;
  greater_equal(%448, %449) /* ty=Tensor[(8, 7, 11), bool] */
}

def @func_3261() -> (Tensor[(10, 14, 1), float64],) {
  @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_6611() -> (Tensor[(10, 14, ?), float32],) {
  %450 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %451 = %450.0;
  %452 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 14, 1), float64] */, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %456 = power(%454, %455) /* ty=Tensor[(10, 14, ?), float32] */;
  (%456,)
}

def @func_4988() -> Tensor[(140), float64] {
  %458 = fn () -> Tensor[(140), float64] {
    %457 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
    %457.1
  };
  %458() /* ty=Tensor[(140), float64] */
}

def @func_2345(%var_2344: Tensor[(10, 14, 8), float64]) -> Tensor[(10, 14, 8), bool] {
  %463 = fn (%var_2329: Tensor[(10, 14, 8), float64]) -> Tensor[(10, 14, 8), bool] {
    %459 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %460 = %459.0;
    %461 = cast(%460, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
    %462 = cast(%var_2329, dtype="bool") /* ty=Tensor[(10, 14, 8), bool] */;
    not_equal(%461, %462) /* ty=Tensor[(10, 14, 8), bool] */
  };
  %463(%var_2344) /* ty=Tensor[(10, 14, 8), bool] */
}

def @func_4483() -> (Tensor[(10, 14, 1), float64],) {
  %464 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
  (%464,)
}

def @func_6050(%var_6048: Tensor[(288), uint16], %var_6049: Tensor[(3, 28), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(288), uint16], Tensor[(3, 28), float64]) {
  %478 = fn (%var_6044: Tensor[(288), uint16], %var_6045: Tensor[(3, 28), float64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(288), uint16], Tensor[(3, 28), float64]) {
    %465 = @func_4283() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %466 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %467 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %468 = cast(%var_6044, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %469 = cast(%var_6045, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
    %470 = reshape(%466, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
    %471 = reshape(%467, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
    %472 = reshape(%468, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
    %473 = reshape(%469, newshape=[84]) /* ty=Tensor[(84), float64] */;
    %474 = @func_4899(%470, %471, %472, %473) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) */;
    %475 = %465.0;
    %476 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
    %477 = %474.4;
    (%475, %476, %477, %var_6044, %var_6045)
  };
  %478(%var_6048, %var_6049) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(288), uint16], Tensor[(3, 28), float64]) */
}

def @func_2995() -> (Tensor[(140), float64], Tensor[(10, 14, 1), float64]) {
  %479 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %480 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %481 = %479.2;
  %482 = %480.0;
  (%481, %482)
}

def @func_3662() -> Tensor[(756, 1), float64] {
  @func_3660() /* ty=Tensor[(756, 1), float64] */
}

def @func_4956() -> Tensor[(10, 14, 1), float64] {
  @func_4954() /* ty=Tensor[(10, 14, 1), float64] */
}

def @func_3413() -> Tensor[(756, 1), float64] {
  %486 = fn () -> Tensor[(756, 1), float64] {
    %483 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
    %484 = %483.0;
    %485 = cast(%484, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
    sqrt(%485) /* ty=Tensor[(756, 1), float64] */
  };
  %486() /* ty=Tensor[(756, 1), float64] */
}

def @func_4614(%var_4612: Tensor[(756), float64], %var_4613: Tensor[(294), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(756), float64], Tensor[(294), uint64]) {
  @func_4610(%var_4612, %var_4613) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(756), float64], Tensor[(294), uint64]) */
}

def @func_2235(%var_2234: Tensor[(15, 1, 11), float32]) -> (Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) {
  %494 = fn (%var_2218: Tensor[(15, 1, 11), float32]) -> (Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) {
    %487 = cast(%var_2218, dtype="float32") /* ty=Tensor[(15, 1, 11), float32] */;
    %488 = cast(meta[relay.Constant][18] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
    %489 = reshape(%488, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
    %490 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %491 = exp(%487) /* ty=Tensor[(15, 1, 11), float32] */;
    %492 = @func_984(%489) /* ty=Tensor[(8, 7, 11), bool] */;
    %493 = %490.0;
    (%491, %492, meta[relay.Constant][18] /* ty=Tensor[(56), int64] */, %493)
  };
  %494(%var_2234) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */
}

def @func_2866(%var_2841: Tensor[(4, 14, 3), float64], %var_2853: Tensor[(165), float32], %var_2859: Tensor[(756), float64]) -> (Tensor[(56), int64], Tensor[(165), float32], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(4, 14, 3), float32]) {
  %495 = cast(%var_2853, dtype="float32") /* ty=Tensor[(165), float32] */;
  %496 = reshape(%495, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
  %497 = @func_2233(%496) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
  %498 = cast(%var_2859, dtype="float64") /* ty=Tensor[(756), float64] */;
  %499 = reshape(%498, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %500 = @func_1897(%499) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %501 = cast(%var_2841, dtype="float64") /* ty=Tensor[(4, 14, 3), float64] */;
  %502 = log10(%501) /* ty=Tensor[(4, 14, 3), float64] */;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(4, 14, 3), float32] */;
  %504 = %497.2;
  %505 = %500.0;
  %506 = acosh(%503) /* ty=Tensor[(4, 14, 3), float32] */;
  (%504, %var_2853, %505, %var_2859, %506)
}

def @func_5829() -> (Tensor[(140), float64], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  %507 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %508 = cast(meta[relay.Constant][19] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %509 = reshape(%508, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
  %510 = @func_2745() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %511 = %507.0;
  %512 = @func_2343(%509) /* ty=Tensor[(10, 14, 8), bool] */;
  %513 = %510.0;
  (%511, %512, meta[relay.Constant][19] /* ty=Tensor[(1120), float64] */, %513)
}

def @func_4471(%var_4443: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), float64]) {
  %514 = cast(%var_4443, dtype="float32") /* ty=Tensor[(4, 7, 6), float32] */;
  %515 = cast(%var_4443, dtype="float64") /* ty=Tensor[(4, 7, 6), float64] */;
  %516 = sin(%514) /* ty=Tensor[(4, 7, 6), float32] */;
  %517 = atanh(%515) /* ty=Tensor[(4, 7, 6), float64] */;
  (%516, %517)
}

def @func_6613() -> (Tensor[(10, 14, ?), float32],) {
  @func_6611() /* ty=(Tensor[(10, 14, ?), float32],) */
}

def @func_2254() -> (Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) {
  %518 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %519 = cast(meta[relay.Constant][20] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %520 = reshape(%519, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %521 = @func_1669(%520) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %522 = %518.2;
  %523 = %521.0;
  (%522, %523, meta[relay.Constant][20] /* ty=Tensor[(140), float64] */)
}

def @func_5069() -> (Tensor[(756, ?), uint8], Tensor[(10, 14, 1), float64], Tensor[(756, ?), bool], Tensor[(756, 1), float32]) {
  %540 = fn () -> (Tensor[(756, ?), uint8], Tensor[(10, 14, 1), float64], Tensor[(756, ?), bool], Tensor[(756, 1), float32]) {
    %524 = @func_3660() /* ty=Tensor[(756, 1), float64] */;
    %525 = cast(%524, dtype="float32") /* ty=Tensor[(756, 1), float32] */;
    %526 = cosh(%525) /* ty=Tensor[(756, 1), float32] */;
    %527 = cast(%526, dtype="uint8") /* ty=Tensor[(756, 1), uint8] */;
    %528 = shape_of(%524, dtype="int32") /* ty=Tensor[(2), int32] */;
    %529 = cast(%524, dtype="uint8") /* ty=Tensor[(756, 1), uint8] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %531 = cast(%524, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
    %532 = shape_of(%526, dtype="int32") /* ty=Tensor[(2), int32] */;
    %533 = cast(%526, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
    %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %535 = cast(%526, dtype="float32") /* ty=Tensor[(756, 1), float32] */;
    %536 = right_shift(%529, %530) /* ty=Tensor[(756, ?), uint8] */;
    %537 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
    %538 = equal(%533, %534) /* ty=Tensor[(756, ?), bool] */;
    %539 = log10(%535) /* ty=Tensor[(756, 1), float32] */;
    (%536, %537, %538, %539)
  };
  %540() /* ty=(Tensor[(756, ?), uint8], Tensor[(10, 14, 1), float64], Tensor[(756, ?), bool], Tensor[(756, 1), float32]) */
}

def @func_3305(%var_3273: Tensor[(756), float64], %var_3287: Tensor[(294, 1), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) {
  %541 = cast(%var_3273, dtype="float64") /* ty=Tensor[(756), float64] */;
  %542 = reshape(%541, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
  %543 = @func_1897(%542) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
  %544 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %545 = %544.0;
  %546 = cast(%545, dtype="int32") /* ty=Tensor[(10, 14, 1), int32] */;
  %547 = cast(%var_3273, dtype="int32") /* ty=Tensor[(756), int32] */;
  %548 = cast(meta[relay.Constant][21] /* ty=Tensor[(98), uint64] */, dtype="uint64") /* ty=Tensor[(98), uint64] */;
  %549 = cast(%var_3287, dtype="uint64") /* ty=Tensor[(294, 1), uint64] */;
  %550 = reshape(%548, newshape=[1, 14, 7]) /* ty=Tensor[(1, 14, 7), uint64] */;
  %551 = reshape(%549, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), uint64] */;
  %552 = %543.0;
  %553 = left_shift(%546, %547) /* ty=Tensor[(10, 14, 756), int32] */;
  %554 = @func_2700(%550, %551) /* ty=Tensor[(3, 14, 7), bool] */;
  (%552, %553, %554, meta[relay.Constant][21] /* ty=Tensor[(98), uint64] */, %var_3287)
}

def @func_4284() -> (Tensor[(10, 14, 1), float64],) {
  %556 = fn () -> (Tensor[(10, 14, 1), float64],) {
    %555 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
    (%555,)
  };
  %556() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_4438(%var_4418: Tensor[(756, 6), float64]) -> (Tensor[(756, 6), bool], Tensor[(140), float64]) {
  %557 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
  %558 = cast(%557, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %559 = cast(%var_4418, dtype="bool") /* ty=Tensor[(756, 6), bool] */;
  %560 = @func_2254() /* ty=(Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(140), float64]) */;
  %561 = logical_or(%558, %559) /* ty=Tensor[(756, 6), bool] */;
  %562 = %560.2;
  (%561, %562)
}

def @func_6889() -> (Tensor[(10, 14, 1), float64],) {
  %563 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %564 = %563.0;
  (%564,)
}

def @func_4474(%var_4472: Tensor[(4, 7, 6), float32]) -> (Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), float64]) {
  @func_4471(%var_4472) /* ty=(Tensor[(4, 7, 6), float32], Tensor[(4, 7, 6), float64]) */
}

def @func_1992() -> (Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) {
  %584 = fn () -> (Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) {
    %565 = cast(meta[relay.Constant][22] /* ty=Tensor[(756, 1), float64] */, dtype="float64") /* ty=Tensor[(756, 1), float64] */;
    %566 = reshape(%565, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float64] */;
    %567 = @func_1897(%566) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(6, 9, 14), bool]) */;
    %568 = %567.0;
    %569 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %570 = %569.0;
    %571 = cast(%570, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
    %572 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %573 = cast(%568, dtype="uint8") /* ty=Tensor[(10, 14, 1), uint8] */;
    %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %575 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %576 = reshape(%575, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
    %577 = @func_1929(%576) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
    %578 = cast(meta[relay.Constant][23] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
    %579 = reshape(%578, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
    %580 = @func_1929(%579) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
    %581 = multiply(%573, %574) /* ty=Tensor[(10, 14, ?), uint8] */;
    %582 = %577.3;
    %583 = %580.2;
    (meta[relay.Constant][22] /* ty=Tensor[(756, 1), float64] */, %581, %582, meta[relay.Constant][23] /* ty=Tensor[(990), float32] */, %583)
  };
  %584() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */
}

def @func_3459() -> Tensor[(3, 3, 15), float64] {
  %586 = fn () -> Tensor[(3, 3, 15), float64] {
    %585 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
    %585.1
  };
  %586() /* ty=Tensor[(3, 3, 15), float64] */
}

def @func_7292() -> (Tensor[(10, 14, 756), int32],) {
  @func_7290() /* ty=(Tensor[(10, 14, 756), int32],) */
}

def @func_7338(%var_7318: Tensor[(140), float64]) -> (Tensor[(140), float32], Tensor[(8, 7, 11), bool]) {
  %587 = @func_5293() /* ty=(Tensor[(140), float64],) */;
  %588 = %587.0;
  %589 = cast(%var_7318, dtype="float32") /* ty=Tensor[(140), float32] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(1), int32] */;
  %591 = cast(%588, dtype="float32") /* ty=Tensor[(140), float32] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?), float32] */;
  %593 = @func_1566() /* ty=(Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %594 = mod(%591, %592) /* ty=Tensor[(140), float32] */;
  %595 = %593.0;
  (%594, %595)
}

def @func_7436(%var_7434: Tensor[(105840), float64], %var_7435: Tensor[(462), float64]) -> (Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) {
  %625 = fn (%var_7361: Tensor[(105840), float64], %var_7385: Tensor[(462), float64]) -> (Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) {
    %596 = cast(%var_7361, dtype="float64") /* ty=Tensor[(105840), float64] */;
    %597 = reshape(%596, newshape=[10, 14, 756]) /* ty=Tensor[(10, 14, 756), float64] */;
    %598 = @func_3909(%597) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), float32]) */;
    %599 = cast(meta[relay.Constant][24] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %600 = reshape(%599, newshape=[56, 20]) /* ty=Tensor[(56, 20), float64] */;
    %601 = @func_3713(%600) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */;
    %602 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
    %603 = %602.1;
    %604 = cast(%603, dtype="float64") /* ty=Tensor[(140), float64] */;
    %605 = reshape(%604, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %606 = @func_2811(%605) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64], Tensor[(10, 14, ?), bool], Tensor[(140), float64]) */;
    %607 = cast(%var_7361, dtype="float64") /* ty=Tensor[(105840), float64] */;
    %608 = reshape(%607, newshape=[52920, 2]) /* ty=Tensor[(52920, 2), float64] */;
    %609 = @func_5730(%608) /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(52920, 2), float32], Tensor[(52920, 2), float64]) */;
    %610 = cast(%var_7385, dtype="float64") /* ty=Tensor[(462), float64] */;
    %611 = reshape(%610, newshape=[3, 11, 14]) /* ty=Tensor[(3, 11, 14), float64] */;
    %612 = @func_5250(%611) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) */;
    %613 = %612.1;
    %614 = cast(%603, dtype="bool") /* ty=Tensor[(140), bool] */;
    %615 = cast(%613, dtype="bool") /* ty=Tensor[(16, 16, 1), bool] */;
    %616 = @func_2267() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %617 = @func_6013() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %618 = %598.1;
    %619 = %601.0;
    %620 = %606.3;
    %621 = %609.1;
    %622 = greater_equal(%614, %615) /* ty=Tensor[(16, 16, 140), bool] */;
    %623 = %616.0;
    %624 = %617.0;
    (%618, %var_7361, %619, meta[relay.Constant][24] /* ty=Tensor[(1120), float64] */, %var_7385, %620, %621, %622, %623, %624)
  };
  %625(%var_7434, %var_7435) /* ty=(Tensor[(10, 14, 756), float32], Tensor[(105840), float64], Tensor[(6, 10, 8), float64], Tensor[(1120), float64], Tensor[(462), float64], Tensor[(140), float64], Tensor[(10, 14, 1), float64], Tensor[(16, 16, 140), bool], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64]) */
}

def @func_6862() -> (Tensor[(10, 14, 1), float64], Tensor[(8, 7, 11), float32]) {
  %630 = fn () -> (Tensor[(10, 14, 1), float64], Tensor[(8, 7, 11), float32]) {
    %626 = @func_6786() /* ty=Tensor[(8, 7, 11), bool] */;
    %627 = cast(%626, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
    %628 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
    %629 = cosh(%627) /* ty=Tensor[(8, 7, 11), float32] */;
    (%628, %629)
  };
  %630() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(8, 7, 11), float32]) */
}

def @func_18(%var_2: Tensor[(3, 3, 15), float64]) -> Tensor[(3, 3, 15), float64] {
  %631 = cast(%var_2, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  log2(%631) /* ty=Tensor[(3, 3, 15), float64] */
}

def @func_6194(%var_6180: Tensor[(10, 14, 7), float64]) -> (Tensor[(10, 14, 7), bool], Tensor[(10, 14, 1), float32]) {
  %632 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %633 = cast(%632, dtype="bool") /* ty=Tensor[(10, 14, 1), bool] */;
  %634 = cast(%var_6180, dtype="bool") /* ty=Tensor[(10, 14, 7), bool] */;
  %635 = cast(%632, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %636 = not_equal(%633, %634) /* ty=Tensor[(10, 14, 7), bool] */;
  %637 = log2(%635) /* ty=Tensor[(10, 14, 1), float32] */;
  (%636, %637)
}

def @func_5294() -> (Tensor[(140), float64],) {
  %640 = fn () -> (Tensor[(140), float64],) {
    %638 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %639 = %638.1;
    (%639,)
  };
  %640() /* ty=(Tensor[(140), float64],) */
}

def @func_4265(%var_4263: Tensor[(14, 6, 140), float32]) -> (Tensor[(84), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(294), uint64], Tensor[(14, 6, 140), float64], Tensor[(14, 6, 140), int16], Tensor[(10, 14, 1), float64], Tensor[(1400), float64], Tensor[(11, 2, 13), float64]) {
  @func_4262(%var_4263) /* ty=(Tensor[(84), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(294), uint64], Tensor[(14, 6, 140), float64], Tensor[(14, 6, 140), int16], Tensor[(10, 14, 1), float64], Tensor[(1400), float64], Tensor[(11, 2, 13), float64]) */
}

def @func_4441(%var_4439: Tensor[(756, 6), float64]) -> (Tensor[(756, 6), bool], Tensor[(140), float64]) {
  @func_4438(%var_4439) /* ty=(Tensor[(756, 6), bool], Tensor[(140), float64]) */
}

def @func_5437() -> (Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) {
  %641 = @func_5102() /* ty=(Tensor[(10, 14, 756), float64],) */;
  %642 = cast(meta[relay.Constant][25] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %643 = cast(meta[relay.Constant][25] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %644 = cast(meta[relay.Constant][25] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %645 = cast(meta[relay.Constant][26] /* ty=Tensor[(42, 2), float64] */, dtype="float64") /* ty=Tensor[(42, 2), float64] */;
  %646 = reshape(%642, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %647 = reshape(%643, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %648 = reshape(%644, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), uint16] */;
  %649 = reshape(%645, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %650 = @func_4899(%646, %647, %648, %649) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(16, 9, 2), int8], Tensor[(14, 6, ?), int32], Tensor[(84), float64], Tensor[(10, 14, 1), float64]) */;
  %651 = %641.0;
  %652 = %650.0;
  (%651, %652, meta[relay.Constant][25] /* ty=Tensor[(288), uint16] */, meta[relay.Constant][26] /* ty=Tensor[(42, 2), float64] */)
}

def @func_3402() -> (Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) {
  %653 = cast(meta[relay.Constant][27] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %654 = cast(meta[relay.Constant][28] /* ty=Tensor[(294), uint64] */, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %655 = reshape(%653, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %656 = reshape(%654, newshape=[294, 1]) /* ty=Tensor[(294, 1), uint64] */;
  %657 = @func_3305(%655, %656) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) */;
  %658 = @func_1810() /* ty=Tensor[(10, 14, 1), float64] */;
  %659 = cast(meta[relay.Constant][27] /* ty=Tensor[(756), float64] */, dtype="int16") /* ty=Tensor[(756), int16] */;
  %660 = cast(%658, dtype="int16") /* ty=Tensor[(10, 14, 1), int16] */;
  %661 = subtract(%659, %660) /* ty=Tensor[(10, 14, 756), int16] */;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(10, 14, 756), float64] */;
  %663 = %657.1;
  %664 = log2(%662) /* ty=Tensor[(10, 14, 756), float64] */;
  (%663, meta[relay.Constant][28] /* ty=Tensor[(294), uint64] */, %664)
}

def @func_3064(%var_3063: Tensor[(756), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) {
  %675 = fn (%var_3058: Tensor[(756), float64]) -> (Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) {
    %665 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
    %666 = @func_2152() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %667 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %668 = cast(%var_3058, dtype="float64") /* ty=Tensor[(756), float64] */;
    %669 = reshape(%668, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %670 = @func_2120(%669) /* ty=(Tensor[(56), int64], Tensor[(10, 14, 1), float64], Tensor[(756), float64], Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
    %671 = %665.2;
    %672 = %666.0;
    %673 = %667.0;
    %674 = %670.1;
    (%671, %672, %673, %674, %var_3058)
  };
  %675(%var_3063) /* ty=(Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(756), float64]) */
}

def @func_4399(%var_4398: float32) -> (Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) {
  %682 = fn (%var_4362: float32) -> (Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) {
    %676 = cast(%var_4362, dtype="float32") /* ty=float32 */;
    %677 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(2, 11, 3), float32] */;
    %678 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %679 = floor_divide(%676, %677) /* ty=Tensor[(2, 11, 3), float32] */;
    %680 = %678.0;
    %681 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
    (%679, %680, %681)
  };
  %682(%var_4398) /* ty=(Tensor[(2, 11, 3), float32], Tensor[(10, 14, 1), float64], Tensor[(11, 2, 13), float64]) */
}

def @func_2617() -> (Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) {
  %683 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 16, 1), int16] */, dtype="int16") /* ty=Tensor[(16, 16, 1), int16] */;
  %684 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 16, 13), int16] */, dtype="int16") /* ty=Tensor[(16, 16, 13), int16] */;
  %685 = cast(meta[relay.Constant][32] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %686 = reshape(%685, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %687 = @func_1929(%686) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %688 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 16, 1), int16] */, dtype="float32") /* ty=Tensor[(16, 16, 1), float32] */;
  %689 = acosh(%688) /* ty=Tensor[(16, 16, 1), float32] */;
  %690 = cast(%689, dtype="float64") /* ty=Tensor[(16, 16, 1), float64] */;
  %691 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
  %692 = bitwise_and(%683, %684) /* ty=Tensor[(16, 16, 13), int16] */;
  %693 = %687.0;
  %694 = rsqrt(%690) /* ty=Tensor[(16, 16, 1), float64] */;
  %695 = %691.2;
  (%692, %693, meta[relay.Constant][32] /* ty=Tensor[(990), float32] */, %694, %695)
}

def @func_4262(%var_4249: Tensor[(14, 6, 140), float32]) -> (Tensor[(84), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(10, 14, 1), float64], Tensor[(294), uint64], Tensor[(14, 6, 140), float64], Tensor[(14, 6, 140), int16], Tensor[(10, 14, 1), float64], Tensor[(1400), float64], Tensor[(11, 2, 13), float64]) {
  %696 = cast(meta[relay.Constant][34] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %697 = reshape(%696, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float32] */;
  %698 = @func_1929(%697) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(11, 10, 9), float32], Tensor[(3, 3, 15), float64], Tensor[(3, 3, 15), float64]) */;
  %699 = @func_3553() /* ty=(Tensor[(3, 3, 15), float64], Tensor[(140), float64]) */;
  %700 = %699.1;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(140), float64] */;
  %702 = reshape(%701, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
  %703 = @func_818(%702) /* ty=(Tensor[(10, 14, 1), float64],) */;
  %704 = @func_3402() /* ty=(Tensor[(10, 14, 756), int32], Tensor[(294), uint64], Tensor[(10, 14, 756), float64]) */;
  %705 = cast(meta[relay.Constant][33] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %706 = reshape(%705, newshape=[14, 6, 1]) /* ty=Tensor[(14, 6, 1), float64] */;
  %707 = @func_3200(%706) /* ty=(Tensor[(14, 6, ?), int32],) */;
  %708 = %707.0;
  %709 = cast(%708, dtype="int16") /* ty=Tensor[(14, 6, ?), int16] */;
  %710 = cast(%700, dtype="int16") /* ty=Tensor[(140), int16] */;
  %711 = bitwise_xor(%709, %710) /* ty=Tensor[(14, 6, 140), int16] */;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(14, 6, 140), float32] */;
  %713 = cosh(%712) /* ty=Tensor[(14, 6, 140), float32] */;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(14, 6, 140), float64] */;
  %715 = cast(%var_4249, dtype="int16") /* ty=Tensor[(14, 6, 140), int16] */;
  %716 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%713, dtype="int16") /* ty=Tensor[(14, 6, 140), int16] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %719 = cast(meta[relay.Constant][35] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %720 = reshape(%719, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %721 = @func_3799(%720) /* ty=(Tensor[(10, 14, 10), float32], Tensor[(10, 14, 1), float64]) */;
  %722 = %698.4;
  %723 = %703.0;
  %724 = %704.1;
  %725 = sqrt(%714) /* ty=Tensor[(14, 6, 140), float64] */;
  %726 = maximum(%717, %718) /* ty=Tensor[(14, 6, 140), int16] */;
  %727 = %721.1;
  %728 = @func_3815() /* ty=Tensor[(11, 2, 13), float64] */;
  (meta[relay.Constant][33] /* ty=Tensor[(84), float64] */, %722, meta[relay.Constant][34] /* ty=Tensor[(990), float32] */, %723, %724, %725, %726, %727, meta[relay.Constant][35] /* ty=Tensor[(1400), float64] */, %728)
}

def @func_1812() -> Tensor[(10, 14, 1), float64] {
  @func_1810() /* ty=Tensor[(10, 14, 1), float64] */
}

def @func_2153() -> (Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %737 = fn () -> (Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
    %729 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %730 = %729.0;
    %731 = cast(%730, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %732 = cos(%731) /* ty=Tensor[(10, 14, 1), float64] */;
    %733 = cast(%732, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %734 = reshape(%733, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %735 = @func_1669(%734) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %736 = %735.2;
    (%732, %736)
  };
  %737() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */
}

def @func_5628() -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) {
  %743 = fn () -> (Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) {
    %738 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15), float32] */;
    %739 = reshape(%738, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), float32] */;
    %740 = @func_2233(%739) /* ty=(Tensor[(15, 1, 11), float32], Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(10, 14, 1), float64]) */;
    %741 = @func_4987() /* ty=Tensor[(140), float64] */;
    %742 = %740.1;
    (%741, %742, meta[relay.Constant][36] /* ty=Tensor[(11, 15), float32] */)
  };
  %743() /* ty=(Tensor[(140), float64], Tensor[(8, 7, 11), bool], Tensor[(11, 15), float32]) */
}

def @func_4610(%var_4602: Tensor[(756), float64], %var_4603: Tensor[(294), uint64]) -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(756), float64], Tensor[(294), uint64]) {
  %744 = @func_2995() /* ty=(Tensor[(140), float64], Tensor[(10, 14, 1), float64]) */;
  %745 = cast(%var_4602, dtype="float64") /* ty=Tensor[(756), float64] */;
  %746 = cast(%var_4603, dtype="uint64") /* ty=Tensor[(294), uint64] */;
  %747 = reshape(%745, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %748 = reshape(%746, newshape=[294, 1]) /* ty=Tensor[(294, 1), uint64] */;
  %749 = @func_3305(%747, %748) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 756), int32], Tensor[(3, 14, 7), bool], Tensor[(98), uint64], Tensor[(294, 1), uint64]) */;
  %750 = %744.1;
  %751 = %749.1;
  (%750, %751, %var_4602, %var_4603)
}

def @func_1566() -> (Tensor[(8, 7, 11), bool], Tensor[(56), int64], Tensor[(9, 6, 10), float32], Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %752 = cast(meta[relay.Constant][37] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %753 = reshape(%752, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
  %754 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 6, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
  %755 = sin(%754) /* ty=Tensor[(9, 6, 10), float64] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
  %757 = cast(meta[relay.Constant][37] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %758 = reshape(%757, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), int64] */;
  %759 = cast(meta[relay.Constant][39] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %760 = reshape(%759, newshape=[10, 14, 1]) /* ty=Tensor[(10, 14, 1), float64] */;
  %761 = @func_818(%760) /* ty=(Tensor[(10, 14, 1), float64],) */;
  %762 = @func_984(%753) /* ty=Tensor[(8, 7, 11), bool] */;
  %763 = exp(%756) /* ty=Tensor[(9, 6, 10), float32] */;
  %764 = @func_984(%758) /* ty=Tensor[(8, 7, 11), bool] */;
  %765 = %761.0;
  (%762, meta[relay.Constant][37] /* ty=Tensor[(56), int64] */, %763, %764, %765, meta[relay.Constant][39] /* ty=Tensor[(140), float64] */)
}

def @func_3816() -> Tensor[(11, 2, 13), float64] {
  %769 = fn () -> Tensor[(11, 2, 13), float64] {
    %766 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 2, 13), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
    %767 = exp(%766) /* ty=Tensor[(11, 2, 13), float64] */;
    %768 = cast(%767, dtype="float64") /* ty=Tensor[(11, 2, 13), float64] */;
    tan(%768) /* ty=Tensor[(11, 2, 13), float64] */
  };
  %769() /* ty=Tensor[(11, 2, 13), float64] */
}

def @func_2501() -> Tensor[(10, 14, 1), float64] {
  @func_2499() /* ty=Tensor[(10, 14, 1), float64] */
}

def @func_7281(%var_7279: Tensor[(195, 3), int64]) -> (Tensor[(10, 14, 1), float64], Tensor[(9, 5, 13), bool], int64, Tensor[(195, 3), int64], Tensor[(3, 3, 15), float32], Tensor[(45, 3), float64]) {
  @func_7278(%var_7279) /* ty=(Tensor[(10, 14, 1), float64], Tensor[(9, 5, 13), bool], int64, Tensor[(195, 3), int64], Tensor[(3, 3, 15), float32], Tensor[(45, 3), float64]) */
}

def @func_7341(%var_7339: Tensor[(140), float64]) -> (Tensor[(140), float32], Tensor[(8, 7, 11), bool]) {
  @func_7338(%var_7339) /* ty=(Tensor[(140), float32], Tensor[(8, 7, 11), bool]) */
}

def @func_6963() -> Tensor[(10, 14, 1), float64] {
  %771 = fn () -> Tensor[(10, 14, 1), float64] {
    %770 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %770.0
  };
  %771() /* ty=Tensor[(10, 14, 1), float64] */
}

def @func_5439() -> (Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) {
  @func_5437() /* ty=(Tensor[(10, 14, 756), float64], Tensor[(16, 9, 2), float32], Tensor[(288), uint16], Tensor[(42, 2), float64]) */
}

def @func_2746() -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
  %779 = fn () -> (Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) {
    %772 = @func_2065() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %773 = %772.0;
    %774 = cast(%773, dtype="float64") /* ty=Tensor[(10, 14, 1), float64] */;
    %775 = reshape(%774, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %776 = @func_1669(%775) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
    %777 = @func_2499() /* ty=Tensor[(10, 14, 1), float64] */;
    %778 = %776.2;
    (%777, %773, %778)
  };
  %779() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */
}

def @func_3715(%var_3714: Tensor[(56, 20), float64]) -> (Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) {
  %790 = fn (%var_3676: Tensor[(56, 20), float64]) -> (Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) {
    %780 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
    %781 = cast(%var_3676, dtype="float64") /* ty=Tensor[(56, 20), float64] */;
    %782 = reshape(%781, newshape=[10, 14, 8]) /* ty=Tensor[(10, 14, 8), float64] */;
    %783 = @func_3259() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %784 = @func_1991() /* ty=(Tensor[(756, 1), float64], Tensor[(10, 14, ?), uint8], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(11, 10, 9), float32]) */;
    %785 = acosh(%780) /* ty=Tensor[(6, 10, 8), float64] */;
    %786 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
    %787 = @func_2343(%782) /* ty=Tensor[(10, 14, 8), bool] */;
    %788 = %783.0;
    %789 = %784.3;
    (%785, %786, %787, %var_3676, %788, %789)
  };
  %790(%var_3714) /* ty=(Tensor[(6, 10, 8), float64], Tensor[(756, 1), float64], Tensor[(10, 14, 8), bool], Tensor[(56, 20), float64], Tensor[(10, 14, 1), float64], Tensor[(990), float32]) */
}

def @func_5273() -> (Tensor[(10, 14, 1), float64],) {
  @func_5271() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_987(%var_985: Tensor[(8, 7, 1), int64]) -> Tensor[(8, 7, 11), bool] {
  @func_984(%var_985) /* ty=Tensor[(8, 7, 11), bool] */
}

def @func_4669(%var_4667: Tensor[(135), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) {
  @func_4666(%var_4667) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(135), float64], Tensor[(140), float64]) */
}

def @func_4485() -> (Tensor[(10, 14, 1), float64],) {
  @func_4483() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_6930() -> Tensor[(3, 3, 15), float64] {
  @func_6928() /* ty=Tensor[(3, 3, 15), float64] */
}

def @func_6700(%var_6619: int64, %var_6620: Tensor[(9, 5, 13), int64], %var_6626: Tensor[(140), float64]) -> (Tensor[(9, 5, 13), bool], Tensor[(140), float64], Tensor[(990), float32], Tensor[(10, 14, ?), float32]) {
  %791 = cast(%var_6619, dtype="bool") /* ty=bool */;
  %792 = cast(%var_6620, dtype="bool") /* ty=Tensor[(9, 5, 13), bool] */;
  %793 = cast(meta[relay.Constant][42] /* ty=Tensor[(990), float32] */, dtype="float32") /* ty=Tensor[(990), float32] */;
  %794 = reshape(%793, newshape=[990]) /* ty=Tensor[(990), float32] */;
  %795 = @func_2289(%794) /* ty=(Tensor[(10, 14, 1), float32], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
  %796 = %795.0;
  %797 = cast(%var_6626, dtype="float64") /* ty=Tensor[(140), float64] */;
  %798 = reshape(%797, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %799 = @func_1669(%798) /* ty=(Tensor[(8, 7, 11), bool], Tensor[(10, 14, 1), float64], Tensor[(140), float64]) */;
  %800 = %799.2;
  %801 = cast(%800, dtype="float32") /* ty=Tensor[(140), float32] */;
  %802 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%796, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %805 = greater_equal(%791, %792) /* ty=Tensor[(9, 5, 13), bool] */;
  %806 = divide(%803, %804) /* ty=Tensor[(10, 14, ?), float32] */;
  (%805, %var_6626, meta[relay.Constant][42] /* ty=Tensor[(990), float32] */, %806)
}

def @func_7045() -> (Tensor[(10, 14, 1), float64],) {
  @func_7043() /* ty=(Tensor[(10, 14, 1), float64],) */
}

def @func_5104() -> (Tensor[(10, 14, 756), float64],) {
  @func_5102() /* ty=(Tensor[(10, 14, 756), float64],) */
}

def @func_5252(%var_5251: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) {
  %815 = fn (%var_5206: Tensor[(3, 11, 14), float64]) -> (Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) {
    %807 = @func_2464() /* ty=(Tensor[(10, 14, 1), float64], Tensor[(3, 3, 15), float64], Tensor[(990), float32]) */;
    %808 = @func_2617() /* ty=(Tensor[(16, 16, 13), int16], Tensor[(3, 3, 15), float64], Tensor[(990), float32], Tensor[(16, 16, 1), float64], Tensor[(3, 3, 15), float64]) */;
    %809 = cast(%var_5206, dtype="float64") /* ty=Tensor[(3, 11, 14), float64] */;
    %810 = log10(%809) /* ty=Tensor[(3, 11, 14), float64] */;
    %811 = cast(%810, dtype="float32") /* ty=Tensor[(3, 11, 14), float32] */;
    %812 = %807.1;
    %813 = %808.3;
    %814 = exp(%811) /* ty=Tensor[(3, 11, 14), float32] */;
    (%812, %813, %814)
  };
  %815(%var_5251) /* ty=(Tensor[(3, 3, 15), float64], Tensor[(16, 16, 1), float64], Tensor[(3, 11, 14), float32]) */
}

def @func_6075() -> (Tensor[(10, 14, 1), float32],) {
  %819 = fn () -> (Tensor[(10, 14, 1), float32],) {
    %816 = @func_4954() /* ty=Tensor[(10, 14, 1), float64] */;
    %817 = cast(%816, dtype="float32") /* ty=Tensor[(10, 14, 1), float32] */;
    %818 = tan(%817) /* ty=Tensor[(10, 14, 1), float32] */;
    (%818,)
  };
  %819() /* ty=(Tensor[(10, 14, 1), float32],) */
}

def @func_4739(%var_4737: Tensor[(10, 14, 756), int32]) -> (Tensor[(10, 14, 756), uint32], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) {
  @func_4736(%var_4737) /* ty=(Tensor[(10, 14, 756), uint32], Tensor[(10, 14, 8), bool], Tensor[(1120), float64], Tensor[(10, 14, 1), float64]) */
}

def @func_2267() -> (Tensor[(10, 14, 1), float64],) {
  %820 = @func_1833() /* ty=(Tensor[(10, 14, 1), float64],) */;
  %821 = %820.0;
  (%821,)
}

def @func_5161() -> Tensor[(756, 6), bool] {
  %822 = @func_3412() /* ty=Tensor[(756, 1), float64] */;
  %823 = cast(%822, dtype="bool") /* ty=Tensor[(756, 1), bool] */;
  %824 = cast(meta[relay.Constant][43] /* ty=Tensor[(756, 6), float64] */, dtype="bool") /* ty=Tensor[(756, 6), bool] */;
  greater(%823, %824) /* ty=Tensor[(756, 6), bool] */
}

def @func_5163() -> Tensor[(756, 6), bool] {
  @func_5161() /* ty=Tensor[(756, 6), bool] */
}

def @func_2066() -> (Tensor[(10, 14, 1), float64],) {
  %827 = fn () -> (Tensor[(10, 14, 1), float64],) {
    %825 = @func_2000() /* ty=(Tensor[(10, 14, 1), float64],) */;
    %826 = %825.0;
    (%826,)
  };
  %827() /* ty=(Tensor[(10, 14, 1), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

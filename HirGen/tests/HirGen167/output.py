import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_138 = relay.var("var_138", dtype = "float64", shape = (11, 2, 2))#candidate|138|(11, 2, 2)|var|float64
uop_139 = relay.log10(var_138.astype('float64')) # shape=(11, 2, 2)
uop_162 = relay.asinh(var_138.astype('float64')) # shape=(11, 2, 2)
uop_164 = relay.cosh(uop_162.astype('float64')) # shape=(11, 2, 2)
output = relay.Tuple([uop_139,uop_164,])
output2 = relay.Tuple([uop_139,uop_164,])
func_179 = relay.Function([var_138,], output)
mod['func_179'] = func_179
mod = relay.transform.InferType()(mod)
mutated_mod['func_179'] = func_179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_180 = relay.var("var_180", dtype = "float64", shape = (11, 2, 2))#candidate|180|(11, 2, 2)|var|float64
func_179_call = mutated_mod.get_global_var('func_179')
call_181 = func_179_call(var_180)
output = call_181
func_182 = relay.Function([var_180], output)
mutated_mod['func_182'] = func_182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_366 = relay.var("var_366", dtype = "float64", shape = ())#candidate|366|()|var|float64
const_367 = relay.constdtype = "float64")#candidate|367|(11, 15, 11)|const|float64
bop_368 = relay.mod(var_366.astype('float64'), const_367.astype('float64')) # shape=(11, 15, 11)
output = bop_368
output2 = bop_368
func_380 = relay.Function([var_366,], output)
mod['func_380'] = func_380
mod = relay.transform.InferType()(mod)
var_381 = relay.var("var_381", dtype = "float64", shape = ())#candidate|381|()|var|float64
output = func_380(var_381)
func_382 = relay.Function([var_381], output)
mutated_mod['func_382'] = func_382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_500 = relay.var("var_500", dtype = "float32", shape = (10, 3, 12))#candidate|500|(10, 3, 12)|var|float32
uop_501 = relay.sqrt(var_500.astype('float32')) # shape=(10, 3, 12)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
const_508 = relay.const([3.293993,0.606373,4.504300,-5.812177,8.229072,2.615574,-2.989807,-1.833759,0.123434,4.467166,-3.329802,-3.397227,1.717024,-2.560294,-4.636703,-7.270297,-4.621404,-8.988646,-8.488386,0.459827,-2.302463,5.565649,-4.179280,4.981429,-1.601138,9.199598,-4.153643,-1.665462,-4.719423,-5.744168,2.746669,1.505613,-9.991152,4.258457,-2.689844,-6.778420,9.450118,3.535063,-0.682510,-8.345452,-9.545173,3.708559,1.107462,-8.692275], dtype = "float64")#candidate|508|(44,)|const|float64
call_507 = relay.TupleGetItem(func_179_call(relay.reshape(const_508.astype('float64'), [11, 2, 2])), 1)
call_509 = relay.TupleGetItem(func_182_call(relay.reshape(const_508.astype('float64'), [11, 2, 2])), 1)
func_380_call = mod.get_global_var('func_380')
func_382_call = mutated_mod.get_global_var('func_382')
const_513 = relay.const(7.477602, dtype = "float64")#candidate|513|()|const|float64
call_512 = func_380_call(relay.reshape(const_513.astype('float64'), []))
call_514 = func_380_call(relay.reshape(const_513.astype('float64'), []))
uop_522 = relay.atan(uop_501.astype('float32')) # shape=(10, 3, 12)
uop_524 = relay.sinh(uop_522.astype('float64')) # shape=(10, 3, 12)
func_380_call = mod.get_global_var('func_380')
func_382_call = mutated_mod.get_global_var('func_382')
call_527 = func_380_call(relay.reshape(const_513.astype('float64'), []))
call_528 = func_380_call(relay.reshape(const_513.astype('float64'), []))
uop_529 = relay.atanh(uop_524.astype('float64')) # shape=(10, 3, 12)
func_380_call = mod.get_global_var('func_380')
func_382_call = mutated_mod.get_global_var('func_382')
call_532 = func_380_call(relay.reshape(const_513.astype('float64'), []))
call_533 = func_380_call(relay.reshape(const_513.astype('float64'), []))
uop_553 = relay.acosh(uop_524.astype('float32')) # shape=(10, 3, 12)
output = relay.Tuple([call_507,const_508,call_512,const_513,call_527,uop_529,call_532,uop_553,])
output2 = relay.Tuple([call_509,const_508,call_514,const_513,call_528,uop_529,call_533,uop_553,])
func_560 = relay.Function([var_500,], output)
mod['func_560'] = func_560
mod = relay.transform.InferType()(mod)
var_561 = relay.var("var_561", dtype = "float32", shape = (10, 3, 12))#candidate|561|(10, 3, 12)|var|float32
output = func_560(var_561)
func_562 = relay.Function([var_561], output)
mutated_mod['func_562'] = func_562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_797 = relay.var("var_797", dtype = "uint32", shape = (4, 13, 10))#candidate|797|(4, 13, 10)|var|uint32
const_798 = relay.const([[[-8,6,1,-6,3,-7,4,5,-10,-4],[-7,5,-4,-2,9,-8,2,-7,-9,8],[-1,-6,-5,-4,-4,-10,-9,8,9,-6],[-7,9,10,2,9,1,7,4,-10,8],[9,5,-4,3,5,4,-4,1,7,3],[-5,5,-4,3,9,8,-9,8,-7,7],[-10,4,-1,10,-8,5,9,-5,-9,5],[-10,-6,9,4,-4,-10,1,-8,8,-2],[3,2,-5,3,7,-2,4,-8,3,-8],[3,9,1,6,-9,8,4,-2,-6,5],[-6,10,6,-2,10,-5,-8,-8,-4,-10],[3,-5,-5,9,3,-5,-10,8,3,-6],[9,-9,-6,8,1,2,-4,-4,5,2]],[[-7,6,10,-5,3,-7,3,-1,-10,8],[7,-7,7,1,5,10,10,9,-2,-4],[-6,-9,-4,-7,-9,8,-4,-8,8,-5],[-5,-3,2,7,-6,9,10,10,-8,10],[1,3,7,-6,-3,8,-5,4,-2,-1],[2,2,-8,7,1,-3,-7,8,10,-1],[-5,2,9,-9,-7,-1,2,10,-8,-6],[-4,3,-5,-7,5,7,-4,-3,-5,6],[-3,-10,2,5,-6,-1,9,-2,-5,7],[-7,-1,3,6,4,-9,-10,-4,-10,-4],[-9,5,-9,2,7,5,6,-5,-7,7],[2,2,5,-4,-6,-1,3,5,-4,7],[6,3,5,-1,8,6,3,2,6,3]],[[4,7,2,9,-8,-5,-8,8,-8,-8],[6,8,3,-7,8,9,6,7,-9,-1],[-3,-3,7,-4,10,-1,5,-6,-9,-5],[5,-9,1,8,-2,-7,9,4,3,1],[8,-2,1,-1,-2,-7,10,7,-2,1],[8,-7,-8,-3,8,4,5,-9,5,7],[6,-4,2,10,-8,5,7,-5,4,-7],[1,8,-7,-2,-9,-10,5,-3,-5,10],[-4,-3,1,-7,5,5,5,-2,2,-7],[-5,8,-10,6,6,3,2,-2,-4,-8],[-2,7,-8,-2,-4,-5,-5,-8,6,2],[-1,3,-1,-8,3,-5,1,-2,10,-1],[-2,-3,1,-4,7,-10,-3,4,7,10]],[[-8,-7,-5,-9,-3,-1,-9,6,6,-7],[-7,1,-8,-7,-7,-7,2,-5,2,-5],[-6,-2,9,-5,9,9,-6,8,-5,3],[4,6,-1,-6,-7,-10,5,8,-1,2],[4,5,-2,-8,-2,7,-10,-3,-8,-5],[-9,-7,-8,-10,-9,-10,4,7,-2,10],[-5,-9,4,7,2,6,-7,-6,8,-8],[10,2,-5,9,3,1,-10,2,-4,-5],[-10,-8,4,6,9,10,1,-5,-10,-6],[-6,10,9,10,-10,-10,6,9,-1,3],[-6,3,-5,-6,3,-10,8,6,4,3],[-1,-6,2,-8,-10,-4,3,6,6,-5],[-5,-9,-6,2,-3,6,7,-2,7,1]]], dtype = "uint32")#candidate|798|(4, 13, 10)|const|uint32
bop_799 = relay.equal(var_797.astype('bool'), relay.reshape(const_798.astype('bool'), relay.shape_of(var_797))) # shape=(4, 13, 10)
var_809 = relay.var("var_809", dtype = "uint32", shape = (4, 13, 10))#candidate|809|(4, 13, 10)|var|uint32
bop_810 = relay.bitwise_xor(const_798.astype('int64'), relay.reshape(var_809.astype('int64'), relay.shape_of(const_798))) # shape=(4, 13, 10)
uop_823 = relay.rsqrt(bop_799.astype('float32')) # shape=(4, 13, 10)
output = relay.Tuple([bop_810,uop_823,])
output2 = relay.Tuple([bop_810,uop_823,])
func_832 = relay.Function([var_797,var_809,], output)
mod['func_832'] = func_832
mod = relay.transform.InferType()(mod)
var_833 = relay.var("var_833", dtype = "uint32", shape = (4, 13, 10))#candidate|833|(4, 13, 10)|var|uint32
var_834 = relay.var("var_834", dtype = "uint32", shape = (4, 13, 10))#candidate|834|(4, 13, 10)|var|uint32
output = func_832(var_833,var_834,)
func_835 = relay.Function([var_833,var_834,], output)
mutated_mod['func_835'] = func_835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1007 = relay.var("var_1007", dtype = "uint8", shape = (6, 4, 9))#candidate|1007|(6, 4, 9)|var|uint8
var_1008 = relay.var("var_1008", dtype = "uint8", shape = (6, 4, 9))#candidate|1008|(6, 4, 9)|var|uint8
bop_1009 = relay.bitwise_and(var_1007.astype('uint8'), relay.reshape(var_1008.astype('uint8'), relay.shape_of(var_1007))) # shape=(6, 4, 9)
bop_1012 = relay.less(var_1007.astype('bool'), relay.reshape(var_1008.astype('bool'), relay.shape_of(var_1007))) # shape=(6, 4, 9)
bop_1021 = relay.minimum(var_1008.astype('int32'), relay.reshape(var_1007.astype('int32'), relay.shape_of(var_1008))) # shape=(6, 4, 9)
var_1025 = relay.var("var_1025", dtype = "uint8", shape = (6, 4, 9))#candidate|1025|(6, 4, 9)|var|uint8
bop_1026 = relay.subtract(var_1007.astype('int64'), relay.reshape(var_1025.astype('int64'), relay.shape_of(var_1007))) # shape=(6, 4, 9)
output = relay.Tuple([bop_1009,bop_1012,bop_1021,bop_1026,])
output2 = relay.Tuple([bop_1009,bop_1012,bop_1021,bop_1026,])
func_1033 = relay.Function([var_1007,var_1008,var_1025,], output)
mod['func_1033'] = func_1033
mod = relay.transform.InferType()(mod)
mutated_mod['func_1033'] = func_1033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1033_call = mutated_mod.get_global_var('func_1033')
var_1035 = relay.var("var_1035", dtype = "uint8", shape = (6, 4, 9))#candidate|1035|(6, 4, 9)|var|uint8
var_1036 = relay.var("var_1036", dtype = "uint8", shape = (6, 4, 9))#candidate|1036|(6, 4, 9)|var|uint8
var_1037 = relay.var("var_1037", dtype = "uint8", shape = (6, 4, 9))#candidate|1037|(6, 4, 9)|var|uint8
call_1034 = func_1033_call(var_1035,var_1036,var_1037,)
output = call_1034
func_1038 = relay.Function([var_1035,var_1036,var_1037,], output)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1360 = relay.var("var_1360", dtype = "float32", shape = (12, 7, 2))#candidate|1360|(12, 7, 2)|var|float32
uop_1361 = relay.log(var_1360.astype('float32')) # shape=(12, 7, 2)
output = uop_1361
output2 = uop_1361
func_1369 = relay.Function([var_1360,], output)
mod['func_1369'] = func_1369
mod = relay.transform.InferType()(mod)
mutated_mod['func_1369'] = func_1369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1370 = relay.var("var_1370", dtype = "float32", shape = (12, 7, 2))#candidate|1370|(12, 7, 2)|var|float32
func_1369_call = mutated_mod.get_global_var('func_1369')
call_1371 = func_1369_call(var_1370)
output = call_1371
func_1372 = relay.Function([var_1370], output)
mutated_mod['func_1372'] = func_1372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1399 = relay.var("var_1399", dtype = "float32", shape = (16, 14, 10))#candidate|1399|(16, 14, 10)|var|float32
uop_1400 = relay.atan(var_1399.astype('float32')) # shape=(16, 14, 10)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
const_1405 = relay.const([-2.707876,7.104313,-0.601692,-2.696616,6.212051,2.551887,-7.976177,-2.077850,7.422762,7.687969,-7.162965,9.154136,8.974766,-2.618455,-2.204964,0.101173,-6.198192,9.671569,1.440313,-0.554827,-9.184116,-6.238651,-3.227652,-5.499081,1.518373,0.025731,-7.213029,2.516127,-3.279388,-9.776789,-7.082167,2.295445,-8.775209,3.980198,-8.543249,-6.804258,-2.864523,5.062907,-1.513717,-5.985962,9.826019,4.994568,8.137386,8.326697], dtype = "float64")#candidate|1405|(44,)|const|float64
call_1404 = relay.TupleGetItem(func_179_call(relay.reshape(const_1405.astype('float64'), [11, 2, 2])), 1)
call_1406 = relay.TupleGetItem(func_182_call(relay.reshape(const_1405.astype('float64'), [11, 2, 2])), 1)
output = relay.Tuple([uop_1400,call_1404,const_1405,])
output2 = relay.Tuple([uop_1400,call_1406,const_1405,])
func_1416 = relay.Function([var_1399,], output)
mod['func_1416'] = func_1416
mod = relay.transform.InferType()(mod)
var_1417 = relay.var("var_1417", dtype = "float32", shape = (16, 14, 10))#candidate|1417|(16, 14, 10)|var|float32
output = func_1416(var_1417)
func_1418 = relay.Function([var_1417], output)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1607 = relay.var("var_1607", dtype = "float32", shape = (15, 13, 13))#candidate|1607|(15, 13, 13)|var|float32
uop_1608 = relay.sin(var_1607.astype('float32')) # shape=(15, 13, 13)
output = relay.Tuple([uop_1608,])
output2 = relay.Tuple([uop_1608,])
func_1611 = relay.Function([var_1607,], output)
mod['func_1611'] = func_1611
mod = relay.transform.InferType()(mod)
mutated_mod['func_1611'] = func_1611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1612 = relay.var("var_1612", dtype = "float32", shape = (15, 13, 13))#candidate|1612|(15, 13, 13)|var|float32
func_1611_call = mutated_mod.get_global_var('func_1611')
call_1613 = func_1611_call(var_1612)
output = call_1613
func_1614 = relay.Function([var_1612], output)
mutated_mod['func_1614'] = func_1614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1683 = relay.var("var_1683", dtype = "int32", shape = (2, 4, 10))#candidate|1683|(2, 4, 10)|var|int32
const_1684 = relay.const([[[7,-8,-7,8,1,-8,5,-4,3,-4],[3,-5,-6,9,-2,-9,-4,-7,-6,-2],[4,2,10,-4,9,-10,-9,-7,-6,7],[9,-8,-1,-6,1,3,-10,5,-3,10]],[[6,-6,7,-10,-4,-2,4,-5,-6,-1],[-9,-4,-3,8,7,-10,10,-8,1,-1],[-8,7,-4,7,3,10,-4,10,3,-5],[-6,3,-1,4,-2,9,9,-10,-10,6]]], dtype = "int32")#candidate|1684|(2, 4, 10)|const|int32
bop_1685 = relay.bitwise_or(var_1683.astype('int32'), relay.reshape(const_1684.astype('int32'), relay.shape_of(var_1683))) # shape=(2, 4, 10)
uop_1688 = relay.sqrt(bop_1685.astype('float64')) # shape=(2, 4, 10)
output = uop_1688
output2 = uop_1688
func_1690 = relay.Function([var_1683,], output)
mod['func_1690'] = func_1690
mod = relay.transform.InferType()(mod)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1691 = relay.var("var_1691", dtype = "int32", shape = (2, 4, 10))#candidate|1691|(2, 4, 10)|var|int32
func_1690_call = mutated_mod.get_global_var('func_1690')
call_1692 = func_1690_call(var_1691)
output = call_1692
func_1693 = relay.Function([var_1691], output)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1978 = relay.var("var_1978", dtype = "float64", shape = (6, 13, 3))#candidate|1978|(6, 13, 3)|var|float64
uop_1979 = relay.sinh(var_1978.astype('float64')) # shape=(6, 13, 3)
func_1369_call = mod.get_global_var('func_1369')
func_1372_call = mutated_mod.get_global_var('func_1372')
const_1985 = relay.const([-3.761398,-8.195340,0.462731,-3.471649,-4.543127,-3.092027,-3.622429,7.430529,5.944515,-2.121986,6.025868,-5.967177,7.743778,5.514667,-5.332582,-2.148228,7.648471,-0.061446,-4.357999,8.590218,7.396044,9.576744,-0.168705,-4.754448,9.327299,3.569091,-6.255433,-2.506256,8.156535,-7.213596,9.106895,-0.962199,8.287964,-2.780292,2.402164,-0.322043,8.938898,-0.453787,-4.222248,3.098022,4.363620,5.595078,-8.984257,7.209622,8.300031,6.080167,9.089248,-5.643876,-9.429451,-2.291479,-3.740751,-9.868111,8.352944,-9.731078,7.392878,9.083081,-3.025443,8.280894,-3.525805,-4.163109,-0.083046,1.050303,9.157779,3.808609,-3.468147,6.833749,-2.359185,-5.265466,-5.052086,-3.701801,-2.325864,-9.403259,-9.696032,5.691913,7.206552,-4.750359,8.396002,9.581114,0.411907,-9.352348,-4.555200,1.984491,7.097791,-9.202735,-4.157278,-7.334893,6.737918,7.966636,-1.046665,-3.603509,-6.012495,6.597216,-1.199601,-5.708706,1.802566,4.758466,-0.082336,0.177134,-2.264372,3.657748,-8.140695,0.573243,-3.620015,7.903576,7.574012,-4.980938,-0.918541,7.024186,-8.863673,9.391628,-6.082492,-2.013403,2.378021,5.326237,5.686489,-4.766582,-5.516787,9.898182,-0.879008,9.003877,2.477185,7.508507,2.351019,-4.093357,-2.403116,-9.743075,0.222290,2.358011,-3.473045,-6.992202,4.385802,0.377934,3.581115,-3.896893,8.597372,3.113330,-5.183667,-1.233256,-4.084235,4.460985,-3.099382,1.587775,-8.512006,-6.417887,3.712882,6.818939,7.942150,-4.484156,8.415099,-1.901551,-2.381970,5.900472,-6.915969,5.999102,5.235250,2.372373,-1.846160,9.240472,6.844748,7.857541,-8.141331,1.248781,4.610443,-5.604993,8.882279,0.627825,3.788373,-5.868936], dtype = "float32")#candidate|1985|(168,)|const|float32
call_1984 = func_1369_call(relay.reshape(const_1985.astype('float32'), [12, 7, 2]))
call_1986 = func_1369_call(relay.reshape(const_1985.astype('float32'), [12, 7, 2]))
func_1033_call = mod.get_global_var('func_1033')
func_1038_call = mutated_mod.get_global_var('func_1038')
var_1988 = relay.var("var_1988", dtype = "uint8", shape = (216,))#candidate|1988|(216,)|var|uint8
call_1987 = relay.TupleGetItem(func_1033_call(relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), ), 3)
call_1989 = relay.TupleGetItem(func_1038_call(relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), relay.reshape(var_1988.astype('uint8'), [6, 4, 9]), ), 3)
output = relay.Tuple([uop_1979,call_1984,const_1985,call_1987,var_1988,])
output2 = relay.Tuple([uop_1979,call_1986,const_1985,call_1989,var_1988,])
func_1998 = relay.Function([var_1978,var_1988,], output)
mod['func_1998'] = func_1998
mod = relay.transform.InferType()(mod)
mutated_mod['func_1998'] = func_1998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1998_call = mutated_mod.get_global_var('func_1998')
var_2000 = relay.var("var_2000", dtype = "float64", shape = (6, 13, 3))#candidate|2000|(6, 13, 3)|var|float64
var_2001 = relay.var("var_2001", dtype = "uint8", shape = (216,))#candidate|2001|(216,)|var|uint8
call_1999 = func_1998_call(var_2000,var_2001,)
output = call_1999
func_2002 = relay.Function([var_2000,var_2001,], output)
mutated_mod['func_2002'] = func_2002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2133 = relay.var("var_2133", dtype = "uint64", shape = (3, 9, 13))#candidate|2133|(3, 9, 13)|var|uint64
var_2134 = relay.var("var_2134", dtype = "uint64", shape = (3, 9, 13))#candidate|2134|(3, 9, 13)|var|uint64
bop_2135 = relay.minimum(var_2133.astype('uint64'), relay.reshape(var_2134.astype('uint64'), relay.shape_of(var_2133))) # shape=(3, 9, 13)
bop_2144 = relay.logical_and(var_2133.astype('bool'), relay.reshape(var_2134.astype('bool'), relay.shape_of(var_2133))) # shape=(3, 9, 13)
bop_2154 = relay.greater(bop_2144.astype('bool'), relay.reshape(var_2134.astype('bool'), relay.shape_of(bop_2144))) # shape=(3, 9, 13)
output = relay.Tuple([bop_2135,bop_2154,])
output2 = relay.Tuple([bop_2135,bop_2154,])
func_2171 = relay.Function([var_2133,var_2134,], output)
mod['func_2171'] = func_2171
mod = relay.transform.InferType()(mod)
mutated_mod['func_2171'] = func_2171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2171_call = mutated_mod.get_global_var('func_2171')
var_2173 = relay.var("var_2173", dtype = "uint64", shape = (3, 9, 13))#candidate|2173|(3, 9, 13)|var|uint64
var_2174 = relay.var("var_2174", dtype = "uint64", shape = (3, 9, 13))#candidate|2174|(3, 9, 13)|var|uint64
call_2172 = func_2171_call(var_2173,var_2174,)
output = call_2172
func_2175 = relay.Function([var_2173,var_2174,], output)
mutated_mod['func_2175'] = func_2175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2407 = relay.var("var_2407", dtype = "uint16", shape = (13, 5, 4))#candidate|2407|(13, 5, 4)|var|uint16
var_2408 = relay.var("var_2408", dtype = "uint16", shape = (13, 5, 4))#candidate|2408|(13, 5, 4)|var|uint16
bop_2409 = relay.less_equal(var_2407.astype('bool'), relay.reshape(var_2408.astype('bool'), relay.shape_of(var_2407))) # shape=(13, 5, 4)
output = bop_2409
output2 = bop_2409
func_2413 = relay.Function([var_2407,var_2408,], output)
mod['func_2413'] = func_2413
mod = relay.transform.InferType()(mod)
mutated_mod['func_2413'] = func_2413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2413_call = mutated_mod.get_global_var('func_2413')
var_2415 = relay.var("var_2415", dtype = "uint16", shape = (13, 5, 4))#candidate|2415|(13, 5, 4)|var|uint16
var_2416 = relay.var("var_2416", dtype = "uint16", shape = (13, 5, 4))#candidate|2416|(13, 5, 4)|var|uint16
call_2414 = func_2413_call(var_2415,var_2416,)
output = call_2414
func_2417 = relay.Function([var_2415,var_2416,], output)
mutated_mod['func_2417'] = func_2417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2421 = relay.var("var_2421", dtype = "float32", shape = (3, 8, 12))#candidate|2421|(3, 8, 12)|var|float32
var_2422 = relay.var("var_2422", dtype = "float32", shape = (3, 8, 12))#candidate|2422|(3, 8, 12)|var|float32
bop_2423 = relay.minimum(var_2421.astype('float32'), relay.reshape(var_2422.astype('float32'), relay.shape_of(var_2421))) # shape=(3, 8, 12)
output = bop_2423
output2 = bop_2423
func_2430 = relay.Function([var_2421,var_2422,], output)
mod['func_2430'] = func_2430
mod = relay.transform.InferType()(mod)
var_2431 = relay.var("var_2431", dtype = "float32", shape = (3, 8, 12))#candidate|2431|(3, 8, 12)|var|float32
var_2432 = relay.var("var_2432", dtype = "float32", shape = (3, 8, 12))#candidate|2432|(3, 8, 12)|var|float32
output = func_2430(var_2431,var_2432,)
func_2433 = relay.Function([var_2431,var_2432,], output)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2473 = relay.var("var_2473", dtype = "uint64", shape = (3, 16, 10))#candidate|2473|(3, 16, 10)|var|uint64
const_2474 = relay.const([[[-5,-4,-7,-6,-7,-7,-1,-8,-5,-3],[-5,-9,-9,-2,9,8,-6,8,3,2],[4,-6,6,7,-3,4,-7,2,-5,3],[-2,5,5,-3,7,10,-7,-10,10,-4],[-8,-2,-3,-10,-1,-10,4,-10,9,7],[9,9,4,10,-9,-9,-3,1,-5,2],[-4,8,-8,-6,2,-4,3,-8,3,2],[-2,-8,-2,-1,-1,-5,-7,-4,-1,-3],[4,-3,-1,3,-1,-7,-6,6,-7,6],[-1,-5,-4,-5,-9,-8,-6,-9,4,-4],[-7,-5,-7,10,9,-5,7,-9,1,7],[-2,3,8,6,6,-6,-2,-5,-4,-4],[10,-3,1,7,-6,10,-9,-6,8,8],[4,6,-7,-7,-5,5,-10,2,10,3],[-4,-4,7,2,5,-9,6,-5,6,3],[2,-9,-6,-6,-2,2,2,-3,-9,-4]],[[4,1,9,-2,-7,8,-3,-4,2,5],[8,2,-7,-1,-9,-9,6,-5,-8,-10],[6,-6,9,-9,-1,4,4,-1,10,-7],[5,-6,-8,8,9,-2,-7,3,-10,6],[-7,-1,8,-3,-2,-9,-10,9,-5,-5],[4,1,-8,9,9,7,6,8,-10,4],[5,10,-10,3,-8,2,-6,3,-9,9],[-10,3,-8,1,4,-1,-9,-4,2,6],[6,1,-1,7,9,-6,-4,-4,-10,10],[10,-4,-6,2,8,7,-6,-7,5,8],[9,4,5,-6,4,-10,1,7,-4,5],[-7,-5,3,1,-3,-5,-5,6,8,4],[1,-10,7,10,-8,-3,-9,9,8,1],[9,4,4,3,-3,8,10,-6,7,10],[1,2,10,2,-1,1,-9,-3,4,-9],[-2,3,-6,3,-7,1,-6,9,-6,8]],[[-6,-9,-4,9,10,-7,6,-6,-2,-6],[-2,10,3,8,2,7,4,4,8,-6],[-3,1,-4,2,6,7,-6,-7,-8,-8],[-2,-10,-1,-2,8,-7,10,10,5,-2],[-1,-10,-5,8,4,6,1,2,-10,2],[10,-1,-7,6,3,4,6,1,-3,-7],[-4,-4,-8,-8,-9,-6,-2,-1,8,-3],[-5,6,-3,5,7,4,4,8,-4,-2],[-9,-6,-7,-9,6,7,3,3,2,3],[-9,-1,-6,-6,-5,5,-9,4,8,3],[9,7,5,7,9,5,8,-2,-6,7],[9,7,3,-5,7,6,10,-6,-5,-10],[-7,-4,-4,-1,5,2,-10,-5,10,-3],[-10,1,-4,4,-3,4,1,7,4,-6],[6,4,-6,-6,-1,-1,9,10,2,1],[-8,5,2,-7,-10,5,10,1,-10,-4]]], dtype = "uint64")#candidate|2474|(3, 16, 10)|const|uint64
bop_2475 = relay.multiply(var_2473.astype('uint64'), relay.reshape(const_2474.astype('uint64'), relay.shape_of(var_2473))) # shape=(3, 16, 10)
output = bop_2475
output2 = bop_2475
func_2487 = relay.Function([var_2473,], output)
mod['func_2487'] = func_2487
mod = relay.transform.InferType()(mod)
mutated_mod['func_2487'] = func_2487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2488 = relay.var("var_2488", dtype = "uint64", shape = (3, 16, 10))#candidate|2488|(3, 16, 10)|var|uint64
func_2487_call = mutated_mod.get_global_var('func_2487')
call_2489 = func_2487_call(var_2488)
output = call_2489
func_2490 = relay.Function([var_2488], output)
mutated_mod['func_2490'] = func_2490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2527 = relay.var("var_2527", dtype = "int8", shape = (6, 1, 4))#candidate|2527|(6, 1, 4)|var|int8
var_2528 = relay.var("var_2528", dtype = "int8", shape = (6, 14, 4))#candidate|2528|(6, 14, 4)|var|int8
bop_2529 = relay.minimum(var_2527.astype('int8'), var_2528.astype('int8')) # shape=(6, 14, 4)
output = relay.Tuple([bop_2529,])
output2 = relay.Tuple([bop_2529,])
func_2532 = relay.Function([var_2527,var_2528,], output)
mod['func_2532'] = func_2532
mod = relay.transform.InferType()(mod)
mutated_mod['func_2532'] = func_2532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2532_call = mutated_mod.get_global_var('func_2532')
var_2534 = relay.var("var_2534", dtype = "int8", shape = (6, 1, 4))#candidate|2534|(6, 1, 4)|var|int8
var_2535 = relay.var("var_2535", dtype = "int8", shape = (6, 14, 4))#candidate|2535|(6, 14, 4)|var|int8
call_2533 = func_2532_call(var_2534,var_2535,)
output = call_2533
func_2536 = relay.Function([var_2534,var_2535,], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2600 = relay.const([[[True]],[[False]],[[False]],[[False]],[[True]],[[True]],[[True]],[[False]],[[True]],[[True]],[[True]],[[True]],[[False]],[[False]],[[True]]], dtype = "bool")#candidate|2600|(15, 1, 1)|const|bool
const_2601 = relay.const([[[False,False,False,False,True,False,False,True,True,False],[True,True,True,False,False,True,False,True,False,True],[False,False,True,True,True,True,True,False,False,False],[False,False,True,True,True,False,True,True,True,False],[False,True,False,True,True,False,False,False,True,True],[True,True,True,False,True,False,False,False,True,False],[True,True,False,False,False,True,False,True,True,False],[False,True,True,False,False,False,False,False,False,True],[True,False,True,False,False,False,True,False,False,False]],[[False,True,True,True,True,False,False,False,True,True],[False,True,False,True,True,False,True,True,True,False],[True,False,False,False,True,False,False,False,True,False],[False,True,False,True,False,True,True,True,True,True],[False,True,False,True,False,False,True,False,True,False],[False,False,True,False,False,False,False,False,False,True],[True,False,True,True,True,True,False,True,False,False],[False,True,True,False,False,False,False,True,False,False],[False,False,False,True,False,True,True,False,True,True]],[[False,False,True,True,True,False,False,False,True,True],[False,True,False,True,False,False,True,False,True,True],[False,True,True,True,False,True,False,True,False,True],[False,False,False,True,True,True,False,True,True,True],[False,True,True,False,True,True,False,False,True,False],[False,False,True,True,True,False,True,True,True,True],[False,False,True,False,True,False,False,True,True,True],[True,False,True,False,False,False,True,True,False,False],[True,False,False,False,False,True,False,True,False,False]],[[False,True,False,True,True,True,True,True,True,False],[True,False,False,False,False,True,False,True,False,False],[True,True,True,False,True,True,True,False,False,False],[False,False,True,False,True,False,True,False,False,False],[False,True,False,True,True,False,False,True,True,False],[True,True,True,False,True,False,True,False,False,True],[False,False,True,True,False,False,False,False,False,False],[False,True,True,True,False,False,True,False,True,True],[False,False,False,True,True,True,True,False,True,False]],[[False,False,False,True,True,True,False,True,True,False],[True,True,True,False,False,True,False,False,True,True],[True,True,False,True,False,True,False,False,True,True],[False,True,True,False,True,True,True,True,False,False],[True,False,False,True,False,False,False,True,False,False],[False,True,True,False,False,False,True,False,False,True],[False,False,False,True,False,True,False,False,False,True],[False,False,True,False,True,True,True,True,False,True],[True,True,True,True,True,True,True,True,False,True]],[[False,False,True,False,True,True,False,False,True,False],[True,False,False,False,False,True,True,True,True,False],[True,False,True,False,True,False,True,False,True,True],[True,True,True,False,False,True,False,False,True,True],[False,False,True,True,False,False,False,True,True,True],[True,False,False,False,False,True,True,False,False,False],[True,True,False,True,False,False,False,False,False,True],[True,False,True,True,True,True,True,False,False,False],[True,False,True,True,False,True,True,True,True,True]],[[False,True,False,False,False,False,False,False,False,False],[True,False,False,False,True,False,True,False,False,True],[False,True,True,True,True,False,True,False,True,False],[True,True,True,True,True,True,False,True,True,False],[True,False,False,False,False,True,False,True,True,False],[True,False,True,False,True,False,False,False,False,False],[True,True,True,False,True,True,False,True,False,True],[True,False,False,False,False,False,True,False,False,True],[False,True,True,True,True,False,False,False,True,False]],[[False,False,False,True,False,True,False,False,False,True],[False,True,True,False,True,True,False,True,True,False],[False,True,True,True,False,True,True,False,True,False],[True,True,False,True,False,True,False,True,True,False],[False,True,True,True,True,True,False,False,False,True],[False,False,False,False,True,False,True,False,True,False],[True,False,True,True,True,True,False,True,False,False],[True,False,True,False,True,True,True,True,True,True],[False,True,True,False,True,False,True,False,True,False]],[[False,False,False,True,True,True,True,False,False,True],[False,True,False,True,True,True,False,True,True,True],[False,True,True,False,False,False,False,True,True,True],[True,True,True,True,True,True,False,False,True,False],[True,True,True,True,False,False,True,True,True,False],[False,False,True,True,False,True,False,False,False,True],[False,True,False,True,False,True,False,False,True,True],[False,True,False,True,False,True,False,True,False,True],[True,False,True,True,False,True,False,False,False,True]],[[True,False,False,True,True,True,True,False,True,False],[True,False,True,False,True,False,True,True,True,True],[True,True,True,False,False,True,False,False,True,False],[True,False,False,False,False,True,True,True,True,False],[True,True,False,True,True,False,True,False,True,False],[True,False,True,False,True,True,False,True,False,True],[True,True,False,True,True,False,False,False,True,False],[True,False,True,True,True,False,True,False,False,True],[True,True,True,False,True,False,False,True,True,False]],[[True,False,True,True,True,True,True,False,True,False],[False,False,False,True,False,False,True,True,False,True],[False,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,False,False,False,False,False],[False,False,False,False,True,False,False,False,False,True],[True,False,False,True,False,False,False,True,False,True],[True,False,True,True,False,False,True,False,False,True],[False,False,True,True,True,False,True,True,False,True],[False,True,False,True,False,False,True,True,True,False]],[[False,False,False,False,False,False,False,True,True,True],[True,True,True,False,False,False,True,False,False,True],[True,False,True,True,True,True,False,True,False,True],[True,True,False,True,True,False,False,True,True,True],[False,False,False,False,True,True,False,False,True,False],[True,False,True,False,False,False,False,False,True,False],[True,False,True,True,False,False,True,False,False,True],[True,False,True,True,False,False,False,True,False,True],[True,False,False,False,False,False,True,False,False,False]],[[True,True,True,False,True,True,True,False,True,True],[True,False,True,True,True,False,True,False,True,False],[True,False,False,True,True,False,True,False,True,True],[False,False,True,True,False,False,False,True,False,True],[False,False,True,False,True,True,False,False,True,True],[False,False,True,False,False,False,True,True,False,False],[True,True,False,False,False,False,False,True,False,False],[False,False,False,False,False,True,True,False,False,False],[True,False,False,True,True,False,True,False,False,False]],[[False,True,True,False,True,True,False,True,False,False],[True,True,True,False,True,True,True,False,False,True],[False,True,False,False,False,True,True,False,True,True],[False,True,False,True,True,True,False,True,False,True],[False,True,False,True,True,True,False,True,True,False],[False,True,False,False,True,False,True,False,False,False],[True,False,True,True,True,False,False,False,False,False],[True,False,False,True,True,True,False,True,False,True],[False,True,False,False,True,True,False,True,False,True]],[[True,True,True,True,True,True,True,True,True,True],[False,False,True,False,True,False,True,True,False,False],[False,False,True,False,False,False,True,False,True,True],[True,True,True,True,False,False,False,True,True,True],[True,True,True,False,True,False,True,True,True,True],[True,True,True,False,True,True,False,False,True,False],[False,True,True,True,False,True,True,False,False,False],[True,True,False,False,False,True,False,True,False,True],[False,True,False,True,True,True,False,False,True,True]]], dtype = "bool")#candidate|2601|(15, 9, 10)|const|bool
bop_2602 = relay.logical_or(const_2600.astype('bool'), const_2601.astype('bool')) # shape=(15, 9, 10)
func_2487_call = mod.get_global_var('func_2487')
func_2490_call = mutated_mod.get_global_var('func_2490')
var_2611 = relay.var("var_2611", dtype = "uint64", shape = (240, 2))#candidate|2611|(240, 2)|var|uint64
call_2610 = func_2487_call(relay.reshape(var_2611.astype('uint64'), [3, 16, 10]))
call_2612 = func_2487_call(relay.reshape(var_2611.astype('uint64'), [3, 16, 10]))
var_2614 = relay.var("var_2614", dtype = "uint64", shape = (240, 2))#candidate|2614|(240, 2)|var|uint64
bop_2615 = relay.floor_divide(var_2611.astype('float64'), relay.reshape(var_2614.astype('float64'), relay.shape_of(var_2611))) # shape=(240, 2)
uop_2621 = relay.atanh(bop_2615.astype('float64')) # shape=(240, 2)
func_2532_call = mod.get_global_var('func_2532')
func_2536_call = mutated_mod.get_global_var('func_2536')
const_2625 = relay.const([-9,8,2,10,5,-7,-8,2,-5,-9,-4,-3,-9,-8,-10,-4,-9,4,-8,-5,10,7,-4,-9], dtype = "int8")#candidate|2625|(24,)|const|int8
const_2626 = relay.const([1,9,2,5,-8,-6,-8,5,-8,-6,7,-6,6,-3,-1,5,4,8,-3,7,-9,-6,-1,9,-5,4,-5,-8,2,-7,-2,5,-8,1,7,5,-4,-5,3,4,-2,-1,1,-7,-1,-6,-9,-10,-5,10,-10,1,7,8,-1,7,-3,8,10,-6,2,-7,-6,-7,7,-4,4,10,1,-1,-10,-6,9,-6,-1,-1,8,-3,-4,-5,10,7,-5,7,-4,-8,7,9,10,-4,-10,2,-4,2,5,-8,-7,1,3,-7,4,-3,-1,-6,10,2,8,9,8,9,-9,10,-3,5,9,-5,9,-6,2,1,-4,5,-8,-6,-6,-2,4,-8,-5,5,6,6,7,6,-6,3,-10,3,-3,-4,6,3,-10,-6,-3,-8,10,4,8,9,7,-3,2,-6,-7,-3,8,2,6,-2,1,-8,4,10,-2,-5,3,-5,-5,10,-1,4,9,-7,4,-4,9,-5,5,-4,-4,-5,6,2,3,5,2,-5,-5,-6,4,-5,-3,8,8,7,3,-1,-6,-4,4,4,9,7,-4,5,4,-10,4,6,-4,-6,-7,-7,1,-3,-9,10,-6,3,9,-7,10,9,7,-6,10,-7,-10,-1,4,-3,-1,-2,-10,-5,3,-4,-9,-6,10,-9,-3,-1,-1,-5,8,-9,-1,-6,-7,1,-2,2,-10,2,-8,2,7,8,6,2,-1,3,-5,-4,9,-10,-2,4,9,-2,9,2,-7,-4,2,-7,9,5,-6,-6,-6,-7,9,10,9,8,-8,-4,9,-8,-3,5,4,8,1,-6,-10,-5,4,8,-9,-1,-7,2,2,8,-6,9,-5,1,-3,-2,1,4,5,1,10,-1,-9,-4,4,6,7,9,4,-7,-8,-10,6,-4,-7,5,9,6], dtype = "int8")#candidate|2626|(336,)|const|int8
call_2624 = relay.TupleGetItem(func_2532_call(relay.reshape(const_2625.astype('int8'), [6, 1, 4]), relay.reshape(const_2626.astype('int8'), [6, 14, 4]), ), 0)
call_2627 = relay.TupleGetItem(func_2536_call(relay.reshape(const_2625.astype('int8'), [6, 1, 4]), relay.reshape(const_2626.astype('int8'), [6, 14, 4]), ), 0)
output = relay.Tuple([bop_2602,call_2610,uop_2621,call_2624,const_2625,const_2626,])
output2 = relay.Tuple([bop_2602,call_2612,uop_2621,call_2627,const_2625,const_2626,])
func_2628 = relay.Function([var_2611,var_2614,], output)
mod['func_2628'] = func_2628
mod = relay.transform.InferType()(mod)
var_2629 = relay.var("var_2629", dtype = "uint64", shape = (240, 2))#candidate|2629|(240, 2)|var|uint64
var_2630 = relay.var("var_2630", dtype = "uint64", shape = (240, 2))#candidate|2630|(240, 2)|var|uint64
output = func_2628(var_2629,var_2630,)
func_2631 = relay.Function([var_2629,var_2630,], output)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2644 = relay.const([[[-7.679835,-5.855831,5.440782,4.183603,7.480199,-8.449540,-6.173137,7.952823,6.687836,0.746249,5.556727,9.073704,4.360448,-1.045482],[5.824526,-8.506385,-7.243660,4.246918,-9.464018,8.877880,-8.065832,-3.415451,6.063285,-0.368829,-8.135051,-8.988418,-1.404972,4.574850],[3.598881,6.579742,9.515728,-2.226383,-9.898680,3.329560,3.978151,-3.338328,-1.707786,-4.010629,4.580222,-0.564415,2.660206,2.111771],[-1.971098,1.596914,3.535954,5.934414,-1.187076,-3.055273,4.040347,-8.369633,-8.327223,-4.388647,4.547690,-2.514506,5.067613,-6.790174],[-8.829627,-7.234681,-2.597998,-3.843187,6.137461,-7.444205,8.856834,-1.005708,-1.892999,7.038260,-0.919015,4.813244,7.470156,-9.731966],[7.759365,9.153204,-6.075681,-5.009928,4.340507,-8.380817,-4.010301,2.194323,0.985144,-2.252110,-7.611080,3.528660,0.648516,-7.681146],[-8.260069,-2.520820,-5.960440,1.852263,8.520198,3.899479,-5.204991,5.766185,1.664255,6.628875,9.273120,-0.523156,4.327281,-3.389723],[0.870674,0.838749,4.138512,6.710179,3.637242,-9.205373,-1.571821,-3.316074,-4.658861,-8.551599,-6.822558,-1.108776,3.427776,8.296696],[-8.178436,-6.622202,-3.766356,-6.836289,5.473341,7.926068,-9.518646,3.466014,-7.779142,-3.540105,-6.764704,-1.776985,-9.730208,-7.530568],[7.957207,-3.432401,9.096091,1.791690,2.855009,1.486494,8.286346,1.744194,-6.420828,5.030056,-5.984650,0.589690,-6.831212,9.104596],[2.507931,-8.285293,9.765436,-4.341857,7.902935,5.692397,9.171834,7.770166,6.021295,2.804497,-4.811611,-5.761131,-2.814535,3.710400],[5.863748,8.389394,-6.703544,-8.997596,-9.861341,-3.976724,-1.093999,-1.375541,-9.415970,7.406581,4.564646,6.115721,1.298793,-2.050327],[-2.979997,-2.075726,2.965404,-8.394850,7.789623,0.740361,8.832595,-4.835987,1.365179,-5.308059,-0.881764,-1.076674,-1.246323,2.497129],[8.851337,5.180388,4.301924,-7.804644,1.858576,-8.675902,0.632744,-5.011118,1.574697,-9.457581,-2.487594,-2.997081,-4.543933,-3.711239],[8.643056,-9.272718,3.835943,-5.312855,1.605486,7.488844,1.536861,-4.749282,-0.169938,1.968201,3.568420,-4.271381,-8.692568,-1.117843]],[[1.248898,4.644167,3.123126,-5.412856,6.979911,4.481586,5.077495,4.974348,3.097042,2.646354,9.042318,6.055299,-6.269034,-3.738882],[2.231531,-1.986819,8.938658,6.465128,7.484535,5.095021,-0.229334,-8.103524,-5.490248,-3.657552,6.558354,2.747730,-8.637311,3.989979],[-6.204854,-2.969091,-7.056725,1.178159,-9.021748,-8.582291,-2.519296,8.716350,6.834809,-6.635103,7.722965,0.046301,-3.796264,5.437072],[8.810220,4.230897,-3.731635,2.637227,-3.408949,-5.508953,4.115596,5.107485,2.931688,-6.001739,-4.199632,-9.892742,7.302387,-4.509941],[-9.703586,0.480960,-6.842426,0.812783,-5.512741,7.673498,3.637178,0.661442,2.160654,-5.901110,2.737967,2.961069,7.530459,-6.878573],[7.490232,-0.285622,-9.864803,0.400519,8.982120,-8.098254,-7.836751,-8.726087,0.050972,-4.899560,-8.559166,3.796541,-3.694605,9.338178],[-8.193419,-2.788784,-7.178365,6.777869,-6.795154,3.334539,-1.329813,5.742016,-7.363031,-4.954708,-9.704527,-3.325366,-4.262547,-5.580512],[-5.830181,-0.173362,0.905321,-3.137689,-3.214026,2.114852,-0.757953,-3.279750,-9.732284,9.662856,3.490859,-9.392231,2.688410,9.789901],[7.704953,-2.895723,2.108227,-3.728728,8.046525,5.936828,4.651094,9.989059,9.766936,-0.283750,1.694657,-8.415314,0.570582,-2.550596],[8.548559,-2.940670,-9.060311,-0.772894,-3.151178,-7.962579,1.563526,3.483411,-8.989037,1.254694,-7.892825,4.908595,0.991168,-0.570230],[8.426152,1.527685,-7.939461,9.100818,-2.016062,2.040747,-8.975449,7.604583,0.659685,-2.092841,0.487832,2.426162,1.502337,1.346569],[4.856960,-2.126410,5.472582,6.249879,8.759962,-0.822022,1.525529,-4.976122,9.493284,8.421299,-0.529787,7.272755,2.136385,8.903324],[7.056417,-9.504721,1.692065,0.308101,-0.062423,-0.195928,2.514780,-7.231531,-2.622377,1.816506,-8.040896,-1.678861,-1.204047,-2.799863],[1.768949,7.742702,-1.873066,7.578946,-4.582972,-9.071697,5.657797,-2.436843,4.856721,2.529368,-9.322694,-7.675678,-9.364954,0.644862],[-6.136053,-6.961219,-6.902605,-0.324388,7.663582,-9.281961,3.122060,2.806149,3.284013,7.575367,-7.123643,3.529505,9.391562,0.117993]],[[-3.274901,4.336431,-4.870993,-9.360259,7.772245,4.207144,-6.350194,-2.975460,2.812910,4.978864,0.290779,3.067926,2.808765,-1.653488],[-2.203166,-3.701849,1.161047,1.187293,-0.571657,-6.863104,5.105959,-5.730398,4.735470,4.540127,-0.636710,3.813715,7.090284,4.811897],[0.610038,-3.376615,4.932620,7.851428,-3.737125,-0.911422,-1.092364,-4.798308,5.236447,-7.086593,3.392069,8.851203,-5.571191,1.909655],[9.446473,-8.202299,2.403456,4.899473,-0.347430,8.197784,0.206130,9.835350,-0.538043,2.408747,-5.083082,-8.924414,7.917124,-5.836873],[-6.754617,-0.959292,-2.428322,4.585985,3.277656,3.279127,3.434061,-5.117061,-3.914529,-6.073676,2.800693,-9.595251,6.350937,9.141952],[-1.282437,-1.803303,0.625266,7.259146,-0.258553,6.363393,3.001224,9.078453,6.355472,7.294800,4.239964,-3.037321,-0.025501,-0.271949],[6.891597,-1.791916,8.383918,1.301360,2.705823,2.864136,1.894619,5.318146,5.764348,0.040766,-7.881436,-7.345233,-9.024419,-5.110507],[-1.782933,5.048375,-6.564266,6.145549,-7.727320,7.812241,9.263723,6.230632,2.560442,8.689165,1.876383,-0.508120,-5.386537,9.425236],[2.505544,7.406383,1.224669,-5.866931,-9.254062,7.591056,-5.742671,7.119181,6.826442,-2.754731,6.985480,7.325794,-0.382975,4.923527],[3.072849,1.708321,-9.142567,-3.162602,3.872384,-4.698498,-2.253064,7.407224,-1.284910,4.998135,9.343956,-5.849114,4.827108,-3.271098],[7.235721,-7.980523,-8.799837,-7.884064,-7.711543,-9.309459,4.926257,-0.214701,8.291162,-6.767162,-3.967873,9.777290,3.304555,-7.801605],[-0.790009,-4.514124,-7.857942,-3.154566,-7.998482,-3.055597,7.956762,8.247230,2.504032,-5.804483,7.190217,-0.907295,-4.984176,1.106814],[8.431038,2.809805,-1.985600,-6.265237,-5.795852,-9.221365,5.636309,-5.673156,2.351399,5.712854,5.938581,0.907716,-1.633002,-1.998033],[-1.392341,-0.340119,0.733205,5.984601,8.797316,4.371379,-5.150515,-4.662383,-1.404311,-8.319093,-4.264258,-7.255550,2.304328,-8.337215],[5.516823,6.523501,8.046989,9.761113,8.425008,-2.445756,-1.725660,-2.656473,7.928931,-1.912715,6.475652,-0.405386,-4.688647,9.739626]],[[-7.614952,4.116871,-8.479120,5.338648,-0.894893,7.023178,2.470956,-4.876419,4.762278,-0.473179,-3.884089,-6.988993,2.823859,1.462441],[2.889979,-5.308820,1.590080,6.677017,-7.672350,1.483800,0.136084,-3.195450,-7.148039,7.079873,6.374015,2.203371,-4.247897,-6.278033],[-2.521979,-9.533240,-2.318408,9.090154,-0.226184,-9.573018,-2.535267,-8.591365,-4.289238,-1.974653,1.449555,-3.831098,-4.070148,-6.210577],[7.314493,-0.878044,5.101921,5.665323,7.754443,8.318239,0.017932,-8.412154,3.333777,1.901542,5.934529,-6.225465,4.298166,-4.904066],[-3.008986,4.079531,5.125400,9.397821,-3.959317,-9.340981,-1.672435,6.324427,2.045715,3.281128,-1.215523,-7.371909,-8.148682,1.840930],[3.596164,1.490466,-3.215488,3.506424,5.271633,-8.270657,7.477915,5.797410,-1.265584,2.360849,8.044439,-8.687021,-2.803553,8.815548],[-9.171156,-4.220082,-5.235061,6.704316,-6.421884,-0.189704,-6.704274,7.482605,-9.970341,8.930181,-1.486136,-6.103471,6.750784,0.722213],[-5.972895,-4.036318,0.070084,-7.900857,7.159384,6.274051,0.350163,5.194646,-1.124080,2.361254,2.706077,-2.330909,-6.974059,3.431456],[9.607100,5.407648,-1.785965,-4.291568,-9.063197,0.109248,2.450924,-9.858122,8.732928,-6.038738,-9.551780,-1.932242,-6.965929,7.127684],[2.869163,-0.001427,-3.576097,-1.881004,4.726411,-9.263100,-3.543094,1.939578,-7.621315,-0.165099,9.473145,-6.997073,-1.384538,-3.082290],[1.321627,2.770750,-2.740637,6.126581,3.298146,1.273907,8.445693,6.684510,-9.946183,2.784541,-6.284131,-4.829732,-4.934425,0.316466],[6.264520,5.214402,-7.190928,0.675685,-2.267296,3.524955,7.229586,-6.116363,-1.129660,-5.492526,9.900366,-9.998868,2.747191,8.044901],[5.051273,-9.839249,-1.568248,4.535452,9.937883,-2.953429,7.659307,4.743531,-6.407888,5.558111,0.679200,6.554812,4.867707,-7.946976],[-3.636489,-3.041910,3.980053,-2.203077,-7.786600,-9.151551,2.461025,0.737792,-4.251517,7.858445,0.096372,8.348026,-9.600887,1.381105],[-2.714027,-5.231047,4.002281,-6.347838,5.658651,9.180531,-0.413431,8.407708,-5.527817,0.315944,-0.803114,3.229203,9.229105,-1.158579]],[[-2.077447,-6.024134,-7.074056,7.688362,2.613510,-2.293146,4.550221,8.878792,5.698329,6.354679,4.492585,-4.407241,9.456410,6.830023],[-6.543219,-6.218956,2.366150,-0.226616,2.601127,-4.750710,8.332552,2.990867,-5.127004,6.613633,-3.999654,9.073905,1.856216,1.370925],[0.648894,9.948933,-4.686361,-7.737637,-1.663710,1.289967,2.177737,2.609944,-1.606413,4.883450,4.892050,-3.230566,0.397403,0.395417],[1.875270,3.654624,-0.942034,1.042421,-5.339438,-6.543478,-1.331807,-7.310432,5.915869,-2.184173,-8.316595,-1.898055,-0.333682,5.952632],[-6.112164,-8.360067,9.641372,6.565451,7.455746,9.449606,-7.291190,-4.839783,2.739754,-2.317935,-6.968424,9.951138,-1.288912,-5.231799],[-4.934902,-7.430822,7.642526,3.262003,-4.011826,-5.178907,0.336322,7.210649,1.521223,-6.843577,-5.901967,-8.280108,8.604611,-6.983975],[9.792525,4.457765,-3.932495,8.075641,-9.065691,6.677125,5.453491,-6.158114,9.047190,-8.626331,-9.255286,6.407951,-1.723408,2.290780],[1.241827,1.070786,4.044888,6.403835,0.190366,3.996187,7.028877,-2.373437,-7.007556,2.125331,4.657759,-0.828048,-4.868743,-8.149694],[0.487787,-0.329728,5.646678,-9.387819,-0.091768,1.774005,-5.797569,-4.566225,0.429092,-7.008479,1.587710,5.073903,4.125934,-0.759591],[3.760417,-9.871232,7.675497,-1.019205,3.958947,5.002926,-1.771099,8.240756,8.053462,-2.177946,-8.325990,-4.749279,-4.895949,-2.304902],[3.951124,3.167095,-1.779049,-0.820214,-9.167599,-3.015049,7.203368,-6.139943,-6.206222,-2.488480,9.949200,-2.123627,0.839675,4.846352],[-9.416726,9.992566,6.271601,2.902543,7.089869,0.044624,-3.844386,0.438513,4.750034,1.610871,1.160551,0.139145,-1.164253,-3.138246],[-7.311008,5.859337,-9.385346,-4.452389,6.406694,1.346590,3.198961,-9.309779,-3.317009,6.547745,0.329152,-7.325411,-9.550042,2.159542],[0.139306,-0.357133,-0.958404,4.978134,9.848366,-7.955116,6.916929,3.337457,-5.242103,-5.752293,1.698713,-3.597341,-6.081507,1.217939],[-4.616667,1.880489,-6.780915,8.825890,9.542071,7.183172,-7.018563,8.908090,6.280807,8.283624,-0.829874,1.755923,4.249321,0.109395]],[[-3.337167,7.075382,2.261688,-7.741347,-1.587190,-7.265915,-7.653075,-1.391914,1.579849,-8.659260,-0.951340,-0.485618,0.701186,-2.476164],[3.336666,-1.456515,-8.487174,-5.776396,-1.814861,-0.660438,-7.357324,-4.303348,-6.015806,-2.427520,-6.386852,3.360200,-5.337065,-4.611914],[9.202268,-5.046704,-0.499271,-7.206114,-5.928843,-0.651803,0.817751,-6.248753,-8.649260,8.452460,3.830421,-8.029931,-3.565143,3.024854],[-2.258383,2.356968,-3.234980,-9.026617,-6.026068,-0.519353,-9.455741,-5.493461,9.384051,4.975517,0.737974,-0.073674,-8.371143,5.728967],[-6.380634,2.324707,-9.540342,-6.219434,4.070030,4.463852,3.286943,-7.402566,-1.318491,-4.098066,8.508337,2.771924,-4.745436,-1.839512],[2.459768,8.421207,-8.758685,-6.604559,4.149409,7.417207,6.674898,8.794307,-5.677040,-8.892591,-9.452173,-0.476586,4.067664,-7.892846],[-7.351146,-1.284764,-3.052219,2.195708,4.156709,3.997435,1.866535,5.971487,1.101803,5.782250,-3.666988,2.682187,-7.958505,6.780707],[9.298153,5.470006,-7.670851,9.391290,-8.964321,6.243924,-0.494794,-0.623939,1.915710,8.329388,-2.090490,3.859563,-6.726274,2.148068],[-1.412186,-9.527062,7.179656,8.018495,-2.144291,-2.515265,-7.959672,-7.920088,6.096188,-6.953134,-6.446016,4.705743,-0.144857,4.427109],[8.363846,-4.309224,4.618029,-6.461959,-1.016810,-0.681113,-0.204591,2.449503,-0.829517,-1.962728,7.611338,0.829848,-0.685862,-2.033822],[6.392432,8.235867,7.095565,-6.969327,3.896929,1.654738,7.950830,-4.943332,-1.907827,-1.733897,4.530902,-2.983233,1.679783,-0.324995],[3.663250,-2.739079,-9.238664,1.800579,0.423865,9.811217,-9.005223,2.016094,-3.958933,-8.857107,4.225273,-0.259395,9.422836,5.263726],[-4.459981,-0.972712,0.013243,-3.084580,-7.813406,3.758811,2.752123,-3.636828,1.660352,6.054716,9.545671,-5.606709,-0.233671,4.406644],[-7.687817,-4.193699,-9.695470,-9.581404,-4.267877,-4.394684,-9.181656,-8.698177,-5.916054,-7.157826,-3.162015,8.125162,7.905088,5.770202],[-3.694514,5.058935,1.338291,9.952828,-9.597225,1.092410,-7.202523,6.472383,7.424834,8.041432,9.391887,5.885982,9.496887,6.858842]],[[1.174734,4.721325,-1.657895,-6.251328,-6.264455,6.126981,9.867486,9.549941,-8.903347,-2.910031,6.008423,1.152094,4.396298,-7.411254],[-5.664230,3.388902,-0.504139,9.023268,4.641645,8.156020,-7.290255,-5.977966,1.730950,9.369582,1.891019,-8.396133,6.979736,0.332188],[-0.159076,-4.763190,9.599017,-3.272428,-0.322906,-3.675551,2.120152,2.121477,3.598424,2.747547,-0.682319,-1.812704,7.242098,-5.636398],[7.904358,9.750086,8.985182,-3.083619,-2.600535,3.196396,-9.423780,-4.769167,3.891958,7.719313,-6.304667,1.903447,-3.560971,-6.934572],[-8.052277,-8.214941,-0.507868,-3.581728,6.787888,-4.379542,7.192164,-8.800133,-2.035558,-3.583389,3.762625,-7.708320,-3.617352,-5.959436],[9.442183,-4.588113,8.927840,8.752530,4.267018,5.474749,-7.762928,-9.974190,4.177688,-0.286830,2.649456,6.549804,-1.561834,-1.881241],[-0.665063,7.577734,6.407776,5.132099,3.171618,-0.238893,-9.168082,1.059083,-0.348404,7.976780,9.877265,4.914346,-1.825396,1.604830],[-5.425966,6.105144,-1.021285,-3.975961,5.037761,-0.106467,4.715609,3.907563,-0.696342,-3.090503,-2.379873,6.814970,8.394734,-6.100768],[1.231878,2.712315,-9.830556,-8.197748,5.992481,-7.270577,9.770684,9.268597,-9.831495,-8.694133,-8.224314,3.372038,-9.389596,-7.009107],[4.923220,5.755335,-8.699491,-6.227043,-8.868715,3.870921,4.352832,-5.249514,-4.893472,0.992799,-7.239115,4.591609,1.124854,4.661262],[8.790545,0.156154,-7.891036,-0.234546,1.548974,2.735848,4.903089,-1.250913,2.562783,4.884179,-4.574176,-9.357263,8.910180,7.759419],[-5.190784,-9.430130,-7.673584,-4.557750,3.790646,7.737480,1.866010,-0.974436,1.540844,4.409358,0.779307,-4.715470,-8.514580,-7.018412],[1.557204,-0.154522,-9.887412,0.265937,-5.288185,5.880846,-1.304768,5.528270,-6.244421,6.157794,-7.028252,-0.219689,9.319177,6.769460],[4.682162,1.110088,-9.116990,-5.950585,5.835444,6.878174,7.815689,8.194239,-3.342044,0.375956,-2.881914,-8.441022,7.882262,-7.939020],[-2.979295,-3.867479,2.120124,-7.994645,5.109887,-7.564248,-5.140461,3.225557,-6.369064,-0.129037,8.974355,3.674178,-3.546014,-1.830915]],[[-7.781128,-0.325949,-2.245012,-1.028565,9.621311,7.952440,4.232638,8.327327,-4.017360,2.941986,3.054217,5.572689,8.138668,-4.799770],[-2.057944,-0.895293,9.897733,5.554980,4.108903,8.874167,-3.600093,-4.391711,-6.925541,-2.612492,-7.437346,9.858995,4.338055,-0.993216],[-6.539892,-5.695736,7.069064,6.670247,5.676244,-0.326560,2.443588,8.970351,1.799606,4.001207,0.430842,-5.212757,-7.119178,5.517729],[-1.310279,-6.048625,-0.521260,8.897092,4.328970,-9.326062,-0.762574,-0.061152,-0.112064,5.523099,4.561783,8.525110,-6.269761,-8.418857],[-4.070914,-1.931519,4.595784,2.395256,5.265422,3.958086,2.035884,-3.301383,-4.623981,0.464094,-0.805450,-7.278310,-4.201715,2.430887],[8.798327,0.064249,7.511586,-0.130335,-8.070693,8.585061,3.801470,5.646596,-6.825851,-3.853550,-8.477785,-3.198951,-8.726512,-0.726094],[-2.971153,-8.944390,5.851894,2.259961,5.676213,1.707048,3.821141,-7.767942,6.038929,-8.581370,8.837759,-0.575275,-9.866930,-4.181199],[-0.037187,4.838875,-8.804836,-1.314443,4.754460,1.105402,-6.216625,4.490468,5.206325,-9.516575,9.528881,-5.897022,1.805913,-4.150772],[5.275161,-2.842310,4.122304,3.810819,5.510857,9.830102,9.854862,-0.603025,4.978030,-5.680683,6.880527,8.743980,0.480204,5.375884],[-1.888364,-1.579018,-3.139519,6.690008,0.839856,-6.411602,4.886055,3.964058,-7.291892,-7.929444,0.575196,-3.601007,4.014340,2.448863],[5.958344,8.728849,-9.535497,-9.388763,-4.974667,-6.527902,-7.990038,9.416139,-0.961134,-9.896495,-2.076885,-9.996055,8.269482,-5.239305],[-5.180436,5.222501,-1.421832,-3.809139,0.685908,8.157442,-8.725890,4.293396,-0.736426,-1.251270,5.385327,9.912125,4.485946,-7.694243],[-7.533198,3.354449,-9.882325,1.380235,2.870921,-1.769808,-2.997199,4.884846,3.222461,9.793334,0.358272,3.303185,-4.516399,-1.503114],[-4.528957,3.349841,6.469475,-0.468302,5.533267,-4.225475,1.446194,5.900665,-1.269607,-1.469903,1.014245,-6.379610,-0.776750,-9.314405],[-5.044909,-9.317002,0.027673,-8.030983,3.610726,-9.791673,-4.209258,1.083571,2.828446,8.144172,9.491290,-5.377560,0.498879,3.605705]],[[-1.267113,-4.097389,-2.473698,0.998867,-5.893835,-1.005863,-3.704184,4.066681,5.534014,-4.802092,6.811087,6.269942,-1.431048,-7.431319],[-1.321577,4.688479,0.146844,2.489716,-7.047500,6.236497,-6.421877,-4.101979,-8.737568,3.233428,3.035061,4.436989,6.279896,7.841120],[-3.244544,0.476986,-8.032338,6.789802,5.898015,0.128192,7.389170,-6.199406,7.981491,9.978571,-5.848077,2.737395,-2.731580,3.463664],[4.871637,0.752595,-0.319707,-9.482450,4.988759,-5.221950,6.922198,0.664936,-3.560514,-6.427017,-7.711480,2.393321,5.797619,-7.129607],[6.103146,8.122871,8.488174,-2.957024,-2.532301,-2.039343,-7.440347,-9.923627,-6.939310,0.731855,9.698867,-0.771741,9.190192,6.354690],[7.420510,-2.416663,1.727157,9.629856,2.336585,-2.780014,2.021823,9.229983,9.554139,9.450026,6.733137,-7.983879,-3.566221,7.351685],[-1.158827,-8.617490,-3.789323,8.257972,7.195547,-2.108499,-0.412466,-0.165149,7.624254,-9.139150,5.984011,2.925581,-1.462607,2.073619],[-5.176769,-4.529590,6.460726,-3.135001,2.934659,0.865036,8.329378,4.336474,-6.531036,6.448492,-0.797428,-5.446229,5.817213,-1.778326],[2.588497,-2.214785,-9.537634,7.775790,-8.209514,-6.426861,9.599220,-1.120733,9.385165,-8.980381,6.326273,-4.185255,7.611778,0.345356],[-8.697608,-5.684732,6.516468,4.194577,5.888148,-3.543039,0.661476,-3.786048,-1.609475,6.740288,-9.804681,-4.855900,1.613950,7.974975],[8.819420,5.402912,6.204384,-6.548290,-9.364801,-2.017122,-1.763326,7.981505,7.056411,-8.284356,-1.294271,-4.678236,2.240980,-9.084672],[2.457748,-0.225855,-0.782637,-8.120786,7.802234,2.470357,-7.742299,-5.553686,-7.937591,-3.294421,1.219333,2.363360,-8.191070,-2.486844],[-4.025119,-0.248434,8.113311,5.784329,-9.021082,7.255901,-1.894446,-5.342561,-5.202593,4.722304,-4.461275,0.882319,-9.924371,-1.567468],[-7.431227,-5.394982,2.709817,-7.704263,7.626582,3.066413,8.811210,-1.712922,7.595593,-3.846733,3.464043,-8.176127,-8.508112,1.988859],[-0.796868,7.729089,-2.490041,-9.379608,8.927232,-5.186766,-3.791908,-8.068778,-4.420336,3.292259,0.201437,-0.302808,7.045525,9.221186]],[[-4.682743,-8.887456,-6.845022,3.713973,6.357626,-7.813836,-2.725131,-4.960435,-8.588366,-6.291624,5.712396,-5.335044,5.409690,4.937072],[5.415371,-9.215772,5.414301,7.869731,3.019852,-8.195201,-7.896841,2.634199,-1.433438,7.618989,-4.621771,2.872925,2.266463,9.847435],[-6.138773,7.885421,6.662180,8.517206,-8.340038,-2.695028,0.523322,-6.082084,1.170404,-2.244465,1.327156,3.214520,9.306596,7.583845],[-1.324514,-1.001116,0.336985,1.014412,2.926294,4.905003,2.762791,3.243520,8.669538,-0.255038,8.359339,-5.854786,-4.592172,1.858796],[-4.626556,-3.679820,4.051664,-9.010360,-6.301529,0.077699,-2.754392,3.985603,-8.028595,2.683338,-1.680317,-5.847912,-3.227002,3.700382],[-1.276740,3.835402,7.599141,-2.911434,-6.677996,-1.725719,-2.023124,-1.885062,-5.179756,-5.179884,6.304351,-9.289536,4.520112,6.972730],[4.564257,-0.519531,9.463322,1.043653,5.859765,5.445288,-8.534423,-4.954995,4.229600,8.447614,-9.002128,-4.826018,9.031035,6.425282],[-1.775557,9.051628,2.505280,1.064390,0.848070,-9.390968,-1.164692,-6.849214,8.071295,3.962009,6.117758,-3.799704,-1.469042,8.448169],[-9.524410,-5.375203,-9.008723,-8.264493,0.365711,-3.105761,-8.483048,3.724914,8.442831,9.262208,-2.933633,8.509142,-6.987191,2.748111],[4.625484,-1.177048,-6.789694,-7.888347,-4.654776,-8.995285,-0.505759,-9.753155,2.130662,-8.449467,3.116486,2.880435,-8.157785,-5.114437],[5.756087,-2.903533,-8.735167,-3.338147,4.063760,4.651602,3.342117,-6.407729,0.648341,6.251904,-4.247636,8.281241,0.256162,-6.354255],[0.825371,-4.132719,-0.191363,7.354897,-1.024681,3.195524,-7.734794,5.364702,3.105436,-9.040200,5.062963,6.965338,9.626694,0.144028],[-8.782503,-2.030387,-5.519984,-0.041976,9.859463,-7.651284,1.899695,-0.256720,-6.010360,8.881695,7.626415,-4.450186,2.021054,-5.374532],[-7.407980,-3.874188,4.082091,7.410647,3.081024,1.970971,1.612588,-2.642905,0.464258,2.074695,0.660549,5.782246,-3.912615,2.556927],[-6.935053,-5.700276,8.374498,9.246191,7.457365,5.913661,-4.214162,-6.638861,-2.560964,-6.801776,0.904336,4.585668,-0.635236,4.937132]],[[8.616010,2.364558,-2.303876,-1.879594,-9.510436,8.371851,-8.324962,-8.502988,9.215526,0.389919,-2.707952,6.578807,5.707437,-0.133776],[-0.016340,-1.699595,-5.627258,3.518424,5.276672,-8.477477,9.792249,6.757567,-8.484827,-2.843397,-2.363029,2.484818,1.140149,-2.274027],[-0.302446,-2.448830,-8.940961,-5.630081,-0.384004,-0.533221,3.915595,2.747355,-9.297296,0.041536,0.899019,-8.845804,3.133421,-6.388831],[-0.872344,8.540965,0.720260,6.640676,-3.626303,-2.797968,0.692548,-2.897201,5.458608,2.185710,-2.796902,3.202382,-5.584105,-5.913953],[2.651332,-2.685710,8.873440,-2.780844,-8.388313,1.992632,4.427794,6.448234,-0.577551,-4.178403,-8.298792,0.169552,-8.370368,-9.399986],[-4.474509,-7.249597,5.570046,5.108530,-2.627789,3.180921,-2.942956,1.146974,-4.871916,-9.864391,-1.242549,-1.442057,9.022722,1.650967],[-2.005581,-8.336028,-9.455259,4.918180,-1.671573,8.437104,-8.282238,9.812420,4.505747,1.153525,9.679276,-1.942045,-2.149590,-4.637373],[-3.637132,2.194389,0.721717,1.118968,-2.670888,2.628103,1.995512,7.950875,4.613615,-7.421907,9.048637,-5.135559,-9.237781,-3.345146],[-1.205953,-4.479570,-8.132622,0.773019,6.213783,-1.981734,7.135647,-9.470032,-6.894271,2.925735,-1.411152,-4.101201,5.520309,1.413741],[0.368355,-6.704987,-9.504745,-3.351613,-1.992534,6.619244,-3.585319,7.345198,5.891722,-1.044464,5.088086,-8.390085,-3.336183,6.317329],[2.570505,4.265121,-0.532143,-6.946972,-2.043195,9.847957,8.276062,-0.985099,-3.427881,4.213654,-1.098621,8.541610,8.120387,6.624805],[-9.564695,0.488925,7.245250,-8.436567,-0.503985,3.493577,1.654737,5.337001,5.197128,-5.919292,6.802177,0.422846,-7.035281,3.181459],[-6.071974,2.973187,5.083590,7.080033,8.737596,-6.860816,-5.098645,-8.058673,7.213720,-5.978409,8.139742,-3.929129,6.287355,-8.805345],[9.303261,7.013062,1.358337,-2.592411,-2.580825,8.899260,-6.801534,5.201035,3.558693,-5.991228,-2.673517,1.672042,-9.238738,-7.791909],[-0.018296,9.604327,4.155571,3.519034,0.131591,5.329043,8.959573,4.375762,4.843809,2.203680,-9.979742,6.637727,-7.713241,-2.473496]],[[-4.908837,-8.311001,-6.500068,-4.990593,6.796000,-4.488365,-9.923012,-4.589716,-4.768960,3.310776,-6.977003,6.611584,-0.324845,8.137696],[1.063057,0.863239,1.663757,-0.038590,4.047318,0.030598,1.017009,0.287134,2.215600,0.885913,8.759806,3.925602,8.959590,-5.108291],[9.360942,4.503796,-6.942653,3.879382,-7.329117,8.203213,-6.552753,-7.273740,-2.244005,8.935314,4.769128,4.520547,2.720822,4.967567],[7.988129,7.279784,2.554568,-8.322652,5.831177,0.708172,8.650977,-0.023380,6.810645,3.205844,-7.128398,-3.483603,-3.176964,6.970780],[-9.416125,-4.432850,-8.762605,5.713054,-1.256684,7.332111,0.134246,-1.033077,6.132390,-0.961130,8.832846,-3.739299,1.313663,-6.087878],[7.375889,6.747634,-1.494658,9.288523,7.290530,-5.573595,-6.405147,-4.311060,6.318606,8.934000,0.552675,0.835857,2.920765,-9.481693],[-8.113368,-6.195418,-7.350949,-0.327660,-1.192969,-6.256137,-3.369286,1.211400,-7.448833,-0.908811,-5.084648,9.562771,5.865832,5.659259],[-9.517761,6.273553,-6.210627,-3.943174,-2.836891,1.355343,2.369322,-7.982851,-7.137151,-7.009587,4.946244,-6.742050,-3.511764,8.165623],[0.249202,1.970089,1.982524,-3.391537,-6.486289,-1.272705,7.750312,8.702752,4.396854,-1.012104,-5.924744,4.354458,0.595266,7.731219],[2.069651,-0.826557,6.576253,-1.227133,-9.205887,-3.833251,-1.520341,7.668450,-3.527206,-6.663136,4.329608,-8.115341,6.810263,8.926486],[3.385316,1.946175,-9.576844,7.528218,9.322710,-2.263572,8.500743,-2.344061,0.822942,1.706976,9.109121,-8.981444,5.084837,-2.928290],[-9.640809,8.675883,-7.527102,-1.910858,-8.733433,2.920042,0.611166,-3.642739,-4.090656,-6.377603,-8.929748,-1.447503,6.727208,-2.158635],[0.742836,-2.250785,9.996130,0.895076,-2.622935,-3.499780,-5.052337,-1.578986,4.329743,-6.589541,1.184323,6.208005,-4.109101,2.002354],[-2.492937,-4.345089,-3.071507,4.034997,1.251930,-0.453524,-9.156776,-2.654070,-9.697689,5.407940,3.189784,8.129624,-0.509774,2.910998],[-6.307106,5.804177,-2.722950,-0.394535,-9.668093,-9.711135,4.348739,2.055759,8.161263,-2.213985,-6.492391,1.494870,1.260517,-1.697995]]], dtype = "float32")#candidate|2644|(12, 15, 14)|const|float32
uop_2645 = relay.atan(const_2644.astype('float32')) # shape=(12, 15, 14)
const_2650 = relay.const([[[-9.477077,-3.309568,8.143712,-4.013087,-6.433314,9.651888,7.543214,0.377309,-3.030314,8.871162,-3.106929,4.784912,-1.792097,-1.138352],[1.269356,5.493865,-5.140838,-3.224093,-1.412382,-0.028250,7.262311,0.351104,-1.628619,8.068513,-7.534572,-4.307925,9.456492,5.527480],[5.185716,4.250729,1.517943,-4.047741,-6.687701,0.059833,0.118116,3.641342,-9.311802,0.198097,5.137066,7.545454,0.686505,3.769675],[7.943923,6.457768,-8.114341,7.435459,7.648429,5.812574,2.276439,6.706112,7.802629,0.808762,8.763033,-9.670043,1.623140,-0.374795],[9.700254,-6.374087,-8.642267,4.368271,-1.857992,-2.847396,8.813808,-1.942803,3.284417,1.017176,-1.167864,-5.473536,-4.292247,7.471363],[-0.322446,-0.378504,6.703804,-3.909232,-8.681269,-9.206737,-6.416916,7.055170,3.219762,-6.038054,6.620481,0.187627,-0.467898,1.560764],[-6.290152,6.388574,-4.191889,-9.698173,-5.638103,0.601656,-9.701939,0.397169,-7.455428,-1.776191,-7.128465,-2.389998,5.955491,-4.763989],[7.717361,-1.780191,-0.812365,-0.472122,7.960841,-0.651298,2.079802,9.961805,0.751801,9.097931,9.120502,9.050512,-2.715054,2.089793],[6.309616,-3.877278,8.815310,-8.305589,-7.770347,-4.841322,6.139448,2.695841,-9.326697,7.826109,9.772336,7.532152,-2.088419,1.896529],[2.201470,-2.552487,-4.179917,0.341367,6.289433,2.690214,2.885346,-4.391311,-8.887978,2.940777,-5.132807,-9.389693,6.401778,-9.880118],[5.142393,0.322939,-9.049841,9.832944,-4.935900,-5.169451,3.717010,5.473586,4.234593,6.100206,6.016861,-4.116240,0.922687,1.019630],[-2.613689,5.911919,1.531871,-5.105246,-7.620412,-7.951784,6.040928,0.005617,-9.282172,7.096496,-8.456072,2.149474,9.261911,4.121496],[9.014193,-1.160091,-8.663457,9.723225,-9.728819,5.747950,1.839986,1.449937,-5.817901,9.940187,0.424680,-6.638227,-4.472939,2.208129],[5.405117,-3.983411,4.958626,-3.714463,-7.348956,-7.338220,-7.361000,-4.184429,5.789443,-2.566190,-6.094748,3.439350,-7.753707,5.369433],[1.067186,-0.676273,6.935203,5.882697,2.567899,-0.919879,3.302493,-2.985062,-4.846884,-7.713877,-7.503260,1.757220,-4.046263,-5.180719]],[[-3.572072,2.267474,-0.338110,-1.818197,5.727942,0.381953,2.852155,-7.207468,-8.104692,-2.846671,4.356538,-6.121783,6.426449,-0.904514],[-9.568949,-9.182265,-2.979450,5.496338,-3.148421,-4.385681,7.088048,-6.320219,0.070837,-1.103333,-6.633409,-2.835657,5.021518,4.581040],[-0.217049,-0.658939,9.306855,3.086466,7.519724,-9.557992,-1.724595,1.430990,-0.375454,5.331848,-8.422849,8.494520,-1.085160,6.285486],[8.656366,7.747135,-0.756256,-6.779790,-7.853720,-7.618418,-0.307332,5.276589,7.066449,2.182091,8.708451,-9.677642,-1.610544,-7.278444],[1.376309,-8.792050,-2.993753,5.926250,9.373790,-6.819153,7.878955,9.710577,-1.773463,6.390348,6.945259,2.316537,9.998263,0.951731],[-7.290735,-4.738597,7.720224,-2.872806,-0.313906,-5.519057,1.799761,-1.923849,2.370671,9.876653,-8.676415,-0.039826,0.765998,-4.214168],[6.777256,-1.961590,4.449915,2.086991,2.354158,0.171048,9.660786,5.651692,-1.273136,-6.814303,-6.679038,2.870505,-0.329673,-9.260320],[-8.575960,-2.872078,-4.970673,5.373962,1.368127,-9.916778,-4.541886,9.390418,-7.207059,-3.476514,-4.835687,-8.665365,-5.795543,2.719486],[7.287185,-2.057263,6.531744,9.176271,7.923502,6.104321,-2.241724,5.926197,3.374874,-8.255356,-9.473529,0.703343,1.624894,0.153624],[5.099963,-2.871731,-2.983758,-1.168131,5.586509,-4.213843,-5.361348,-7.565127,2.287978,4.988550,-1.759734,-2.863693,6.993519,3.364968],[-0.562720,-3.142085,4.789500,-9.986857,-3.772369,3.802062,4.474518,-7.738313,-4.015547,-0.718749,4.000005,-1.158347,8.017868,-1.801412],[-2.407329,-6.536292,-1.598728,8.318348,9.734612,4.857645,-0.406317,-3.045339,-7.365887,-9.792182,6.962804,0.365962,-8.881312,-6.836089],[-2.611294,-8.195119,-8.388799,3.312906,-7.914593,-4.319426,7.400477,0.159996,0.542664,1.762508,-0.338828,-5.589293,-8.794764,-9.242646],[9.845256,-5.573826,5.953562,8.707915,3.733972,-3.019251,8.277299,-5.620089,8.727768,-4.958153,5.406289,-7.374135,6.287676,3.956551],[-9.373065,8.057412,-5.290835,-4.809779,-1.834842,4.092224,-8.204678,8.851221,-7.546858,-4.508415,5.982061,-2.206318,-3.707312,7.405701]],[[1.424312,9.015266,-1.673276,-0.094955,0.216540,2.750870,-0.208155,2.953459,-2.880629,-6.048626,-6.530878,-5.761847,3.718590,-0.650916],[-0.882475,-8.021348,-4.221746,5.273154,-6.587944,9.834722,-1.925655,3.102847,2.090078,-4.169287,-4.851452,5.800306,2.627450,-4.972957],[-3.053920,3.955921,-2.017251,3.367489,8.189499,-9.263742,-8.791560,0.256883,-1.192672,8.196313,-9.492886,4.473035,-1.590264,5.535423],[2.037829,-9.012583,8.630843,-9.316138,6.192266,-3.056302,-3.688817,-5.236426,0.804295,-2.959558,0.571568,2.912289,5.998138,-9.732624],[1.018344,1.745256,4.653125,6.359471,1.987354,6.350121,5.541160,-5.480850,-9.369056,-0.453038,-6.718422,5.190298,-0.448975,8.868251],[8.371442,3.148757,-1.349941,1.160492,-6.480308,-4.180442,-7.222544,0.256228,0.743597,-2.660252,-8.817530,2.211111,4.013986,-2.472893],[-7.570754,7.403084,3.437644,-8.463101,9.617152,-1.678361,-8.752534,-0.686166,-5.136125,-4.889332,6.995210,7.821924,8.262381,-1.947192],[0.389166,-2.070658,5.449792,4.556381,-3.482852,-8.770173,-7.695291,-0.263059,3.227967,7.644574,-8.304387,5.972217,-4.818350,3.348652],[-6.505818,-1.557029,3.403336,4.423261,-2.786505,5.018062,-0.358832,5.005067,-5.947364,-8.698946,-7.623097,1.871353,2.298721,-3.068836],[1.595756,-6.134417,0.330253,3.917975,8.562543,1.706547,-6.170886,7.915406,-7.507724,9.331077,-5.866544,-9.394036,8.147442,2.922119],[7.544603,3.139619,5.769515,-4.688777,-3.347631,4.493714,-9.576043,-0.989415,-1.670040,8.133461,-4.497798,0.671743,-9.238437,6.744798],[-8.858255,4.876006,-5.058930,-2.964594,-6.649442,-3.407243,6.276031,-6.207283,0.347077,-7.931829,-9.129377,-4.016092,-3.774423,8.864615],[-2.381913,-4.639334,9.278761,-0.832507,-6.084539,-0.214832,4.743197,-6.004222,-6.625770,-1.230157,0.286829,3.680907,-4.776097,-9.804892],[-6.833791,-8.869006,-3.068747,0.226146,-0.386169,8.286782,-0.261151,1.411290,-4.719447,-1.490314,-4.272877,-6.919654,4.008423,-8.504092],[-6.620506,-2.142563,-4.232655,0.815850,-0.252543,1.759549,-1.401471,1.578731,-0.757615,-7.280449,-3.528683,5.106920,2.663498,-2.531718]],[[-0.120914,-9.441677,9.521594,9.503788,5.842993,-0.010391,2.691039,-2.983923,-0.901503,-1.827625,-5.209173,-2.771370,-2.655751,-8.460761],[5.307317,-8.519058,6.134192,-5.634552,-0.717838,-6.804927,-6.292010,6.240289,-2.772715,7.135549,1.121403,3.201511,-4.431233,6.076099],[-7.495703,-7.836562,-5.169279,0.745885,-5.060587,9.421912,2.352172,-5.323999,-3.074580,8.522211,-7.717011,-3.704422,-2.292307,8.314632],[0.750909,3.345168,-8.646702,5.326678,2.690299,-9.448276,8.106935,-6.384266,-7.232243,-6.324950,-6.238705,4.760523,6.085380,-3.774511],[-4.133606,-9.681243,-8.705845,5.923268,-8.517250,-8.308010,6.758684,8.142963,-1.675013,3.292957,-6.257549,7.283802,8.860234,7.517201],[-3.908843,-7.630511,-3.192331,-0.733691,5.208550,2.712562,4.920650,0.255693,9.796085,1.018679,-1.300436,-7.824587,-9.242878,4.631141],[-4.953136,-9.435268,-8.496642,0.160172,-0.436589,-3.791410,7.989787,4.796706,0.216089,8.454413,0.243434,-5.974955,1.126906,-5.557538],[-1.477925,8.245401,7.983519,-1.238729,9.040460,-4.380095,3.289103,9.821362,-2.112184,4.492052,8.813845,-8.508631,8.292900,-1.131709],[7.382070,7.321986,-2.592526,8.381740,-9.763839,8.320583,8.634322,6.938812,-1.954977,-2.931023,2.650131,-6.882735,-2.097079,8.939503],[5.600682,7.458747,2.614732,7.124239,4.171830,6.062655,-5.374726,0.931199,-2.510831,-5.412818,6.471269,3.710035,0.687588,1.773294],[7.332135,8.173823,-9.679035,3.610790,6.110593,4.203719,3.442275,7.620650,-2.043604,-6.138589,1.929281,1.576321,1.037372,-0.821873],[8.523573,-7.621267,-6.119820,0.641050,-1.636861,-0.756811,9.021533,9.150229,-0.314991,-4.468508,8.543577,9.449603,-5.470642,-8.684074],[-2.957574,-8.762915,-1.813054,-1.028941,-4.892493,-7.326918,-4.792742,0.696197,-5.053293,2.867799,6.673235,7.969276,-3.315716,7.956965],[-3.267510,-9.641747,-5.329543,-4.174279,3.387069,-9.553596,-6.859799,2.295555,9.401007,9.318108,2.916357,8.926007,-7.882226,0.061344],[4.144016,6.331239,-8.061279,-2.335906,-8.161204,-4.019276,5.568079,-5.598374,9.901291,4.485473,-3.564075,-7.260757,0.768570,-5.706121]],[[8.407352,-7.021164,-4.795191,-9.110042,3.822227,-6.314596,1.801700,7.245021,1.100871,-4.487582,4.520246,2.063809,-6.736518,4.697124],[6.232296,-7.864411,-2.517917,-3.477379,-0.955523,3.761666,1.513584,-6.754578,-6.342649,-1.063833,0.612062,-8.131209,-1.340529,-0.091212],[-4.890724,-1.882507,9.808006,-1.913411,2.182395,-1.539954,3.529320,7.168684,8.963823,8.480226,6.307043,8.894560,-1.288949,-1.106932],[-4.322878,-7.610947,-9.559690,-7.739478,0.990654,2.140810,9.954646,-5.004245,-6.501080,-3.322579,1.806448,5.389325,4.022299,4.516186],[4.365663,-7.984123,-5.953372,-3.878489,3.751323,-8.230227,8.839332,2.005904,-8.482398,8.801547,5.276794,-2.939467,0.708123,0.019671],[2.163531,-2.831190,-7.483732,-0.169603,2.301976,-9.842110,2.475867,7.455438,-1.157992,-8.818168,5.462823,7.916059,2.360969,6.369482],[-2.961474,0.224996,-7.639641,-7.173581,-3.059763,4.968902,1.142146,-7.946744,7.970700,8.540539,-0.890176,-4.482636,4.771475,-9.885720],[3.167438,9.787923,-8.251381,5.819964,-4.333614,-1.464819,-0.518371,5.812845,7.496217,9.190292,1.188445,-6.040391,-9.005455,6.140992],[4.041401,-9.056539,-1.485827,-2.340809,-6.121622,5.488720,9.237914,2.549806,5.533802,8.811503,-8.192622,9.443337,3.438525,2.410780],[-5.656181,8.805607,-6.670018,0.346820,1.279843,8.942607,8.701540,-3.702549,-6.858276,9.882260,-2.633928,-6.346071,1.993828,7.605761],[-5.924031,-8.453164,4.866717,-6.543944,3.496039,-0.236394,7.315065,-1.233032,-0.455253,6.036189,-8.691635,5.008653,1.899512,1.305394],[4.883333,0.946777,8.047799,4.476084,2.463094,-6.760380,2.479908,8.386021,-4.818321,9.107974,-5.270334,-6.779696,4.456873,-6.253858],[1.581626,7.844613,-0.896264,-8.336330,-0.755730,-8.979640,9.659421,-2.687495,-3.737220,9.723964,2.833280,3.708277,6.275463,-5.903307],[4.528226,1.218924,-2.966688,-6.141440,0.907654,-7.890804,-6.718179,7.387646,0.664755,-3.908038,8.711992,6.164460,-9.533993,9.734808],[-6.360179,5.221416,-5.416748,-3.530165,6.747085,3.984659,-3.277328,8.738021,-2.481844,-7.727271,-5.045310,4.597526,7.531243,0.518872]],[[-4.659615,1.587297,-8.952149,-8.035565,-1.782960,-4.347666,4.290448,-8.954013,6.956461,-4.446953,8.035779,-5.653551,5.292129,8.919566],[-5.367278,9.430073,4.917697,8.019740,6.140900,-3.286993,-6.982676,6.921418,-1.388248,7.967416,1.157130,-7.598845,7.868349,9.792561],[-0.313025,5.574550,1.266566,3.806760,6.877120,-2.601775,0.238180,-3.783754,0.841359,5.004052,-5.767905,-8.003040,5.700328,-4.886951],[6.878364,0.395974,-4.469681,-6.350524,9.209424,0.011637,-5.281680,6.785245,-0.774725,7.672891,-7.217172,-9.298670,-6.547184,-1.315225],[2.668346,-9.589352,-9.378597,-9.616407,-3.885527,-4.670102,6.036965,-5.230992,-0.506457,3.427530,-5.031552,-5.534762,3.741307,4.076714],[6.828039,9.546341,-1.454805,7.485171,-7.866686,9.886155,-2.776252,-9.115312,6.543731,3.745962,6.146142,6.158018,-3.986231,-9.272607],[-3.125931,2.166666,6.494039,-2.508129,-2.605189,9.612652,5.716104,5.684425,-2.907191,0.729884,-8.183835,7.455919,1.825881,1.941691],[4.386360,-5.663970,5.639321,3.493618,-9.032653,-9.521575,-2.027069,8.505351,3.955506,7.935125,6.204475,0.845117,-8.540457,1.451279],[9.590702,3.818501,-0.937284,-3.018305,7.568554,-4.461590,5.770903,-4.223695,-4.205689,-1.271074,-2.698238,-4.899661,-7.495614,2.780896],[-6.540928,7.906348,-6.463685,-3.144654,-9.495417,-8.010744,1.868888,4.866926,-5.280500,-3.859128,-9.724775,-0.151333,-8.732964,-5.393760],[-6.290106,1.502068,-9.860581,3.640115,2.378658,1.890639,-0.329709,9.384451,-9.292570,9.716823,-8.361956,-1.374773,-6.740336,4.606070],[3.062446,2.848851,-5.146471,-4.461641,3.571610,4.188274,-7.878509,-8.600315,-6.255663,-7.569935,4.851284,7.194694,1.005053,-3.004959],[-4.020066,-2.792048,9.225710,-6.406901,0.323240,-3.234436,-4.071096,6.199093,-4.419177,7.072526,-4.535681,3.763259,2.728613,2.762691],[-9.905816,-3.092200,-9.747363,-9.224360,6.559733,1.863714,-7.780478,4.992457,7.587564,1.745821,4.512684,-5.687689,-4.663502,5.926079],[4.343505,-2.429892,-3.011596,-0.971810,7.514701,-8.054623,5.666170,0.062112,6.187334,-5.632413,-8.575944,-5.459846,2.468371,8.935925]],[[-4.110437,5.509541,2.973292,-6.463091,0.650828,-2.128650,9.516170,8.680425,-3.144682,-5.256231,7.474122,-1.384773,-1.620694,9.046991],[-9.054709,6.074648,7.359025,-6.505864,-0.136313,-4.252718,5.306929,9.216399,3.319069,-9.911298,8.310631,9.077697,9.081046,-8.803902],[-0.136978,8.517454,-7.359356,-2.823107,-4.631785,4.597812,3.009045,-3.622910,-1.112401,5.403514,-2.850930,-2.932891,1.458378,-0.451409],[8.824373,-9.284884,6.389591,-0.979231,4.734416,4.620005,8.274619,-3.463020,6.190142,-5.492815,-9.528923,6.944729,8.397458,5.109223],[-5.289781,5.870748,-7.744222,0.195712,-2.174938,-1.575762,-2.338244,7.121252,-8.708744,-7.517199,-8.148279,3.568290,5.047408,7.133160],[-5.313404,6.999264,-6.423782,5.692809,-3.289731,-7.919922,-7.181664,-4.697780,9.990967,3.604520,-3.252846,2.056656,-9.589059,9.614746],[4.951611,-7.943973,2.284966,-8.588657,-7.437622,3.309804,7.991385,8.035280,-7.689111,-3.176080,7.890118,7.511313,-9.985590,-9.986970],[4.971378,-5.674774,-3.658272,1.364809,-4.178860,-0.658232,1.980449,7.557871,8.591870,-3.540086,3.745389,2.357123,-9.467674,-4.769433],[5.990726,2.742005,-5.363176,-5.979490,-9.534270,7.265093,5.272905,-8.139205,4.658192,8.851147,-5.481464,-4.387483,4.717687,6.333919],[-8.108326,-1.664030,-7.317965,-5.280586,1.269480,-3.368708,-4.082034,-7.983600,5.865580,-1.448898,-6.378803,5.079137,-9.335726,-9.052275],[-5.911222,9.574002,3.052471,-9.411092,-4.227861,9.802147,0.493580,4.149137,7.220773,-4.426739,-1.882255,2.766159,-4.625554,-6.123135],[-1.874133,-7.700568,-5.663777,8.797822,4.035532,8.892308,-0.588003,5.664963,-2.842009,-1.508038,-2.834942,-4.752973,3.404171,-1.807056],[7.576911,-0.573335,4.306877,-6.523084,3.453785,-8.351405,9.396363,-8.794131,-8.988861,-9.757937,-7.009206,-1.315307,8.567923,-3.624886],[-5.764016,-1.794529,1.544452,6.190101,-0.679214,-2.067908,0.478408,-1.771839,-3.830562,-9.065830,6.879580,-0.090966,8.352701,-9.110455],[2.319199,-1.735894,9.798384,1.599858,6.144577,-1.828478,-6.596629,7.829791,4.612888,2.900817,-1.563275,-3.126128,-7.913526,-5.740966]],[[2.062318,-7.793315,5.225507,-2.780898,0.403458,3.404786,-7.598333,-0.950685,-1.042561,-0.450848,-2.611095,8.369965,7.416121,-2.329220],[-0.802531,-7.733234,3.792119,8.232771,3.268432,-2.421740,0.468551,4.546531,1.164367,7.834253,-5.060759,0.941216,8.332079,1.849479],[-6.826411,-3.594878,-7.840096,-8.002227,0.137311,-0.209143,8.068974,0.919499,-7.834378,-1.788826,4.128411,1.423400,3.511493,-2.848925],[-0.845094,2.735881,0.477317,6.096397,-1.870688,3.326817,4.515142,-7.472010,-5.572464,-1.037227,5.260782,-8.111146,-3.982510,-5.566540],[-1.966089,-3.755831,-5.322418,9.352768,4.151909,-8.331729,-9.053964,4.232378,7.048550,-7.372293,7.754863,1.683935,3.396555,8.848672],[5.551234,2.869588,-1.563568,-6.329739,-3.459246,-8.728473,4.794007,4.881944,2.909304,6.860172,7.439066,-0.036022,-9.412997,6.847809],[-9.238696,1.338985,-7.566849,2.662012,-1.785550,3.059563,-7.586307,-6.761757,-0.054053,8.795472,-3.106683,7.256356,3.062655,3.736434],[9.873694,3.323475,4.437685,5.851744,-1.039331,2.581155,1.793564,5.905102,-0.869263,5.544833,4.187924,-9.400751,8.873263,6.171523],[-5.555459,7.755177,0.681987,7.281126,5.142067,-7.441694,4.474820,6.553816,4.906686,-5.418847,-1.118027,-2.679070,4.742948,-0.024667],[-1.836896,3.339769,-5.112255,-0.213668,6.079591,-2.439469,2.073694,-5.177304,-8.874741,4.969344,-5.106568,-9.946266,3.705283,6.703658],[6.348997,7.144464,4.107903,-0.438973,5.060547,-1.490865,-8.849102,-9.262809,7.175920,9.532568,-6.499594,6.291812,-4.215431,8.436238],[2.125219,-6.183990,-3.212257,-5.449167,-5.957007,9.312823,-1.344928,5.189037,3.452315,-4.132666,-9.218114,-4.228284,-2.170758,-3.614503],[3.331006,-4.331348,-0.580857,-4.366831,-5.776981,-9.937759,1.125043,1.135779,1.306311,1.763677,-0.223093,-4.447669,8.244193,6.009838],[-9.018985,-0.070058,3.452302,-2.967375,-8.583759,4.200926,-1.236679,5.500298,1.404674,6.065436,8.370476,3.463047,-8.134571,5.242037],[6.153630,5.714055,-3.224335,2.385190,-7.168533,6.528534,-0.771740,7.732175,-6.632510,0.029178,7.918234,0.730119,2.276291,-3.514119]],[[-0.259492,6.627538,-8.748612,7.777899,-3.862776,6.692480,4.383339,1.212015,3.840033,-0.636708,-1.851028,5.000918,-9.555977,-0.639096],[-9.057517,2.846786,-3.544422,-5.053175,7.923503,7.117308,-8.780076,-0.144760,6.926132,-6.134393,-7.896322,8.128618,-8.725683,4.893540],[5.788740,-9.838300,-8.169863,-5.609379,-3.878809,-6.575677,-2.984269,6.685033,-5.587452,-6.278243,-5.375045,-2.032768,3.756472,9.129171],[-7.327786,-6.421755,-1.263440,9.488268,-9.512375,-3.535068,-3.912577,-3.425524,-4.701099,-9.608655,3.151383,7.810517,4.268453,7.559863],[8.427743,-1.190987,5.793064,3.451604,7.063577,-6.142079,-2.396467,-8.753807,4.265733,7.440121,-6.321522,-1.007512,4.898218,6.143878],[6.550225,2.905974,7.259670,7.620650,9.379265,1.689707,1.213508,-1.262209,-1.223327,6.977704,-1.357862,8.620186,-8.351828,-0.103631],[9.878505,-9.942814,-6.425289,9.413187,6.524062,-9.355398,3.978751,0.948919,-9.037563,-6.191349,-5.452499,-5.822200,4.982159,5.120904],[-6.867152,4.161625,-7.598211,-9.637347,2.744981,-9.282724,-4.479265,7.613630,-9.060995,4.247206,0.460176,2.376202,6.815191,-3.373150],[-3.034683,-6.307152,3.577809,-1.310281,7.420680,9.857995,5.325708,3.873789,-0.799748,9.873073,5.146713,3.133892,2.679040,-6.920049],[3.429481,5.771144,-5.462987,-1.898706,9.431614,9.229922,5.649337,7.186317,1.337723,6.811531,-1.873090,-4.350472,5.064345,-0.817143],[9.090440,7.890878,3.478271,-5.496083,-1.887931,1.105410,8.361795,-8.574579,5.570023,4.601518,-3.686493,8.502972,-0.895130,-4.953656],[5.074501,-9.277430,2.327686,4.671581,-7.116780,-5.013164,-0.036201,-5.311781,4.891327,6.462552,-1.570004,4.480256,4.701960,6.258782],[-4.376478,3.803316,-2.042599,-4.406196,7.468814,-6.115242,5.720252,-6.593672,0.496832,-6.237448,5.750468,9.832295,-6.538105,-9.165425],[7.320459,8.541236,5.748953,-5.091656,-3.952085,1.540543,-5.416220,9.941742,-0.693375,-3.390874,-1.816951,-6.747578,-5.736907,-8.956027],[-2.676089,-2.251238,-3.763390,-2.190151,-2.033109,-4.640238,9.570972,-8.946910,0.018708,-1.228604,3.335905,2.917782,6.729374,5.891674]],[[-1.218311,-9.534493,-1.244637,-6.159889,3.788410,-2.980302,0.917443,-8.061194,-1.849276,4.276938,7.923807,5.173144,-3.011590,-6.735777],[1.074125,6.195062,4.946544,-5.914056,-3.118592,1.599431,1.796189,0.283446,-0.364996,-1.229441,-3.722536,-0.338315,4.816350,-3.225701],[4.028702,4.042185,-6.998781,-7.318168,-4.513948,4.726227,2.641287,-5.057574,-4.373785,-8.975679,-9.046670,9.225501,-6.769592,-5.383583],[3.060909,7.459212,9.613841,7.392418,3.356861,-0.257147,4.430562,-7.421886,-8.461471,2.449713,-5.784217,5.675337,-5.997584,0.756212],[-2.380254,-6.737237,-1.264317,-4.447195,-4.103046,6.151173,0.024746,-8.507018,1.958019,-8.432424,0.826456,-7.178992,4.097627,-6.167646],[-0.987658,-9.310690,3.782232,-0.655530,-1.986705,-9.885196,0.769801,-4.019933,3.835499,5.790501,1.299980,-8.789184,1.662165,-3.138610],[-6.422498,7.888436,-1.724968,9.072590,-7.244360,3.006929,8.260695,-6.144167,1.990012,0.417240,5.488691,1.953014,-1.636342,4.079976],[-5.848469,-0.847882,3.680693,2.424546,1.920700,7.926605,-1.676813,-0.342079,-0.410893,-8.956517,2.526205,-4.807859,-2.529891,6.959537],[3.494190,2.823684,-5.338927,-1.487042,6.969326,3.555700,5.103603,-6.443163,5.328105,7.882225,6.930945,4.188555,1.476081,1.293687],[4.760779,8.495129,-6.560782,-3.698800,-4.387259,-7.478442,-8.254332,3.949576,-3.133787,-7.867986,-0.309665,-1.872471,4.045082,5.622081],[9.434645,1.414591,2.189693,-4.572224,9.507880,8.656827,3.500816,3.489748,2.124358,2.141199,-1.526545,-7.538341,9.120305,4.650517],[-4.813751,-6.359870,6.799500,6.409164,-7.739224,-9.427802,-9.614350,4.103279,3.084321,-7.729063,7.731256,0.989436,4.887323,6.304148],[-8.966766,9.918631,4.322368,-9.604845,1.558251,7.321051,3.505184,9.322861,1.370767,-5.399236,9.745851,-4.565751,-2.140812,1.555954],[1.526610,2.686574,3.568022,-0.398268,-6.317021,7.458624,-0.032952,9.809087,5.924482,-7.654694,2.086213,6.339655,0.197918,-3.375869],[2.167111,1.606072,-8.752863,-4.423316,3.678469,-5.181630,-8.720827,-3.692277,-7.699587,-1.510906,-9.094144,4.326010,3.746753,8.270462]],[[-8.133461,0.312499,5.055952,-0.684890,6.369765,4.136031,0.848158,-3.625369,1.258726,4.062803,-3.326857,5.266016,-0.868091,-8.287935],[-0.472767,-3.656322,9.227773,-7.403820,-4.609240,-0.364201,-5.139330,-7.177958,2.279353,6.317545,9.841934,0.909778,-3.298357,5.847093],[8.752381,3.129896,6.375713,-7.419915,2.595103,6.983534,0.829216,2.303435,2.401178,7.454414,-7.812285,6.798030,3.663629,9.390458],[-9.548750,-1.923080,-2.728990,3.256653,7.246733,5.549263,-6.529721,-5.291807,-5.561927,9.558732,-7.852169,1.640057,9.508887,-5.692981],[9.048110,8.259172,-3.657133,6.492594,6.852401,-0.658118,-2.555736,1.080381,-9.075760,-8.093211,2.846776,-3.915328,-2.330346,-2.572450],[4.161352,8.072479,-7.195580,-7.706808,-8.598504,9.464164,-7.265257,1.181967,0.978197,0.832360,-6.082090,5.065092,-9.835241,9.279801],[0.191985,-7.983532,0.658367,5.734882,-4.858282,-5.268687,6.771814,-3.214944,-2.794147,-1.019745,-4.764036,3.459991,1.094990,-5.036072],[2.345620,-9.341237,1.684533,8.750777,-4.518066,-6.867670,-4.487370,-8.286095,9.319857,8.408974,-3.600248,7.666882,9.553590,1.009041],[7.224126,-7.930329,-5.176908,4.434890,-2.255781,-2.558287,8.170544,6.467037,3.739944,1.440901,2.407509,-5.874192,-7.238091,-2.403720],[5.121041,-1.566199,-2.657310,6.330648,-4.024987,-7.256721,0.470312,9.445116,-1.613683,-7.680130,-3.336206,-2.048887,-0.771924,1.268273],[-8.411661,-6.390273,-7.443590,1.812486,-2.298004,2.817259,1.342440,7.386310,-2.341243,-3.847871,6.810285,-7.065486,-8.454683,8.300199],[-0.293078,-6.723397,3.154232,-2.117336,3.623524,-4.528168,-1.508255,-6.263213,7.660725,-2.782505,5.375991,-6.438535,4.133369,-2.953070],[5.076091,-4.808695,5.695133,5.665050,3.671151,-1.478728,5.597215,-0.255677,-9.422106,1.038422,-1.848031,0.171164,-0.658409,7.304675],[-3.023278,-7.951481,0.757857,7.898458,4.888175,7.373102,-4.240786,6.232877,-9.765327,8.216575,8.467973,0.708835,-4.413113,4.672069],[-3.833985,-6.725972,-2.209292,7.529534,1.711071,-7.145836,8.287660,-5.926042,0.191175,4.966524,4.812152,-8.009128,4.239737,2.007224]],[[-8.730636,2.543115,6.823040,-0.708605,-2.514544,3.775949,-3.627301,-7.592853,-9.850008,-9.264813,-2.681217,6.448845,-4.372888,-0.578073],[3.807438,-9.547707,-6.779543,6.304599,1.314248,-3.397404,9.557388,-0.865288,4.492070,3.530473,7.910658,-9.494797,9.107809,1.688847],[6.297016,6.621460,0.955466,5.220576,5.417078,8.633201,-3.451872,-0.765440,-7.130500,0.510117,8.259331,7.580216,-6.392038,2.004144],[9.021431,-4.131566,-9.879910,-2.636383,9.943606,-9.084742,-8.826279,6.672357,3.861290,-0.824130,-9.372774,8.597068,-7.672072,-0.515245],[-4.157868,-0.453009,5.484476,1.756030,-1.495501,5.467666,5.285737,3.443232,-5.079922,-8.803528,-8.710711,1.618448,-6.154805,0.958859],[0.249902,-6.842962,2.336117,0.530590,1.774384,-4.418268,-3.577323,2.721150,7.613201,6.250511,6.743392,2.230734,-9.235939,4.154860],[-8.402344,2.928971,-3.787967,8.887759,-1.332277,-3.284957,4.981560,-7.852312,8.267242,7.548812,-5.646929,-2.021500,-3.969183,7.540239],[-5.586011,-4.349933,1.264941,-9.901004,7.818126,7.634151,-9.708852,1.147028,4.506122,-3.778438,7.941915,1.921005,-3.977581,6.763244],[-0.873139,-9.951797,4.144969,1.894366,-7.043235,3.179976,0.900028,-9.519868,-5.990739,-5.620605,9.805526,-9.518461,-5.052912,-9.312463],[3.333892,-2.147000,-9.002337,-2.764686,7.603968,2.423919,4.403818,7.892924,2.990486,5.946851,7.911826,5.888450,-7.555759,5.148393],[-0.679118,3.990046,8.580580,2.604073,-3.577775,-4.959872,3.797198,-3.502702,-2.560826,9.356568,0.581234,3.583034,-6.775033,1.392110],[3.134246,-8.928257,-0.730003,7.612629,2.921412,1.772699,2.273009,1.593464,2.117869,7.789826,2.231888,-7.407847,0.360996,0.699069],[-2.001758,-5.442216,1.343815,9.883733,4.025970,8.212526,5.143952,-8.973328,-5.902927,7.632673,7.225985,1.225070,-2.982416,1.324465],[-0.173707,2.675517,6.979886,-1.422953,-4.434964,-7.994805,-2.399500,-7.667440,6.963079,-3.296448,-5.023634,2.696240,0.347775,-4.845146],[-7.844871,2.896647,-7.708204,-8.337408,1.755273,-2.556844,-3.146657,3.812148,6.624563,4.633946,-1.797686,-0.382434,4.528650,9.084697]]], dtype = "float32")#candidate|2650|(12, 15, 14)|const|float32
bop_2651 = relay.logical_xor(const_2644.astype('int32'), relay.reshape(const_2650.astype('int32'), relay.shape_of(const_2644))) # shape=(12, 15, 14)
bop_2663 = relay.maximum(uop_2645.astype('uint8'), relay.reshape(bop_2651.astype('uint8'), relay.shape_of(uop_2645))) # shape=(12, 15, 14)
func_2430_call = mod.get_global_var('func_2430')
func_2433_call = mutated_mod.get_global_var('func_2433')
var_2667 = relay.var("var_2667", dtype = "float32", shape = (288,))#candidate|2667|(288,)|var|float32
call_2666 = func_2430_call(relay.reshape(var_2667.astype('float32'), [3, 8, 12]), relay.reshape(var_2667.astype('float32'), [3, 8, 12]), )
call_2668 = func_2430_call(relay.reshape(var_2667.astype('float32'), [3, 8, 12]), relay.reshape(var_2667.astype('float32'), [3, 8, 12]), )
output = relay.Tuple([bop_2663,call_2666,var_2667,])
output2 = relay.Tuple([bop_2663,call_2668,var_2667,])
func_2676 = relay.Function([var_2667,], output)
mod['func_2676'] = func_2676
mod = relay.transform.InferType()(mod)
var_2677 = relay.var("var_2677", dtype = "float32", shape = (288,))#candidate|2677|(288,)|var|float32
output = func_2676(var_2677)
func_2678 = relay.Function([var_2677], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2941 = relay.const([[[-9.857199,0.440362],[2.166164,-2.736939],[3.077604,-7.072384]],[[6.343190,6.288195],[-7.087376,-2.920983],[-0.466862,-4.375990]]], dtype = "float32")#candidate|2941|(2, 3, 2)|const|float32
uop_2942 = relay.erf(const_2941.astype('float32')) # shape=(2, 3, 2)
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
const_2945 = relay.const([-4.034716,8.587314,5.688810,3.516183,9.404326,-2.651150,7.118038,-4.156742,-0.929366,6.388652,-1.078984,2.300195,4.429398,-6.247627,-0.106824,9.020900,8.686287,-2.776175,-9.907498,6.860459,-5.907699,-0.310281,5.855345,-6.602045,3.911887,-5.642963,4.636121,-0.756659,-9.343850,8.098950,4.914372,8.032125,8.391999,9.245703,-9.830499,0.747854,-6.914142,-0.604734,-7.689563,1.123113,-9.568271,-0.856373,-5.540822,7.332022,5.477985,4.586235,6.332382,5.338567,-7.357164,3.199711,-7.887646,0.854797,-2.434352,-4.024756,-5.602205,-9.996518,2.996194,-7.421109,1.353487,-1.249458,-2.566841,3.548822,-1.970689,-7.582858,3.730975,0.952891,-9.130520,-9.174304,9.540372,-3.415097,0.244926,-2.769602,5.455068,-4.848388,-8.386053,4.736484,-4.285721,1.485541,2.581841,7.493271,3.908139,-8.622348,2.515700,-7.406164,2.666713,3.589604,1.212442,9.996883,-1.806030,4.011570,-0.940978,-2.171555,3.459590,-4.641970,1.367066,9.867730,-7.228406,8.181840,-1.378548,-3.059257,-9.611297,-1.413526,-5.258701,-6.116598,0.777069,6.455149,-0.017153,-1.013639,6.881457,-7.895066,-3.468626,8.766129,-2.624069,4.377344,-0.793339,-8.885444,2.214579,-4.144295,2.618680,-7.856891,-5.289883,-0.043050,0.875762,-9.865788,5.475994,-4.940966,-1.387304,4.170730,-5.252323,-7.570433,-2.390002,2.793571,4.971438,4.716744,-4.170948,-1.744236,-0.081713,0.948592,7.070298,-6.447159,-7.037425,2.339603,6.048793,9.563554,6.103638,-6.442356,6.030174,0.546123,-6.321228,0.695372,-7.322385,7.874352,-8.932959,9.102775,4.771181,9.201065,-2.978350,-1.720049,3.313397,9.934995,5.971813,-6.830569,1.411047,-4.752823,7.443756,-6.086216,8.648724,-0.136297,-5.887331,1.908931,5.075090,2.864369,5.990217,4.225887,-7.949913,4.140411,1.342942,-5.536877,3.953115,-7.855345,-2.984491,8.426811,-6.820241,3.008583,6.820554,-2.095308,0.535793,-8.714966,-7.241020,1.705234,-9.367855,-0.762268,1.962726,-6.964873,9.756947,3.475959,9.910762,2.237502,-1.207536,-8.719524,-1.332869,-3.167951,-9.739495,-9.428388,6.491386,7.505814,2.396897,7.712932,-1.092834,0.735053,-6.508280,3.398702,1.353723,1.083544,-2.300226,9.511458,0.972321,-8.306859,-8.940980,-8.188222,4.007801,9.742345,1.253828,2.344954,-0.815830,-8.643081,2.132158,-5.221302,-9.237461,-2.668335,6.117023,8.834324,1.677279,5.663232,4.359680,9.235300,6.970465,2.697836,0.265454,4.682467,5.590206,-3.778209,2.969327,-4.180912,7.737357,-8.262973,-9.393297,6.848574,-1.691177,-2.460102,-0.218531,-4.091390,-7.185334,-3.350455,-1.088526,-7.152801,0.071122,-1.879486,3.936823,9.976904,0.675997,-7.063543,5.436432,1.533207,-7.421116,0.529471,-7.857082,-0.978722,4.731876,-2.337274,-5.495286,-2.824054,-1.882476,7.408884,6.249982,-4.651720,-5.526007,-2.954313,-8.679440,7.000127,4.833524,6.870610,-5.066080,4.656154,-4.786297,9.044995,-4.783921,5.108436], dtype = "float32")#candidate|2945|(288,)|const|float32
call_2944 = relay.TupleGetItem(func_2676_call(relay.reshape(const_2945.astype('float32'), [288,])), 0)
call_2946 = relay.TupleGetItem(func_2678_call(relay.reshape(const_2945.astype('float32'), [288,])), 0)
uop_2972 = relay.log2(const_2941.astype('float64')) # shape=(2, 3, 2)
output = relay.Tuple([uop_2942,call_2944,const_2945,uop_2972,])
output2 = relay.Tuple([uop_2942,call_2946,const_2945,uop_2972,])
func_2978 = relay.Function([], output)
mod['func_2978'] = func_2978
mod = relay.transform.InferType()(mod)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mutated_mod.get_global_var('func_2978')
call_2979 = func_2978_call()
output = call_2979
func_2980 = relay.Function([], output)
mutated_mod['func_2980'] = func_2980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_2989 = relay.TupleGetItem(func_2978_call(), 0)
call_2990 = relay.TupleGetItem(func_2980_call(), 0)
output = relay.Tuple([call_2989,])
output2 = relay.Tuple([call_2990,])
func_2995 = relay.Function([], output)
mod['func_2995'] = func_2995
mod = relay.transform.InferType()(mod)
output = func_2995()
func_2996 = relay.Function([], output)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_2999 = relay.TupleGetItem(func_2995_call(), 0)
call_3000 = relay.TupleGetItem(func_2996_call(), 0)
uop_3020 = relay.cosh(call_2999.astype('float64')) # shape=(2, 3, 2)
uop_3022 = relay.cosh(call_3000.astype('float64')) # shape=(2, 3, 2)
func_2171_call = mod.get_global_var('func_2171')
func_2175_call = mutated_mod.get_global_var('func_2175')
var_3024 = relay.var("var_3024", dtype = "uint64", shape = (351,))#candidate|3024|(351,)|var|uint64
call_3023 = relay.TupleGetItem(func_2171_call(relay.reshape(var_3024.astype('uint64'), [3, 9, 13]), relay.reshape(var_3024.astype('uint64'), [3, 9, 13]), ), 1)
call_3025 = relay.TupleGetItem(func_2175_call(relay.reshape(var_3024.astype('uint64'), [3, 9, 13]), relay.reshape(var_3024.astype('uint64'), [3, 9, 13]), ), 1)
func_380_call = mod.get_global_var('func_380')
func_382_call = mutated_mod.get_global_var('func_382')
const_3029 = relay.const(-1.485595, dtype = "float64")#candidate|3029|()|const|float64
call_3028 = func_380_call(relay.reshape(const_3029.astype('float64'), []))
call_3030 = func_380_call(relay.reshape(const_3029.astype('float64'), []))
func_832_call = mod.get_global_var('func_832')
func_835_call = mutated_mod.get_global_var('func_835')
var_3034 = relay.var("var_3034", dtype = "uint32", shape = (520,))#candidate|3034|(520,)|var|uint32
call_3033 = relay.TupleGetItem(func_832_call(relay.reshape(var_3034.astype('uint32'), [4, 13, 10]), relay.reshape(var_3034.astype('uint32'), [4, 13, 10]), ), 1)
call_3035 = relay.TupleGetItem(func_835_call(relay.reshape(var_3034.astype('uint32'), [4, 13, 10]), relay.reshape(var_3034.astype('uint32'), [4, 13, 10]), ), 1)
output = relay.Tuple([uop_3020,call_3023,var_3024,call_3028,const_3029,call_3033,var_3034,])
output2 = relay.Tuple([uop_3022,call_3025,var_3024,call_3030,const_3029,call_3035,var_3034,])
func_3055 = relay.Function([var_3024,var_3034,], output)
mod['func_3055'] = func_3055
mod = relay.transform.InferType()(mod)
var_3056 = relay.var("var_3056", dtype = "uint64", shape = (351,))#candidate|3056|(351,)|var|uint64
var_3057 = relay.var("var_3057", dtype = "uint32", shape = (520,))#candidate|3057|(520,)|var|uint32
output = func_3055(var_3056,var_3057,)
func_3058 = relay.Function([var_3056,var_3057,], output)
mutated_mod['func_3058'] = func_3058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_3083 = relay.TupleGetItem(func_2978_call(), 1)
call_3084 = relay.TupleGetItem(func_2980_call(), 1)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_3088 = relay.var("var_3088", dtype = "float64", shape = (44,))#candidate|3088|(44,)|var|float64
call_3087 = relay.TupleGetItem(func_179_call(relay.reshape(var_3088.astype('float64'), [11, 2, 2])), 0)
call_3089 = relay.TupleGetItem(func_182_call(relay.reshape(var_3088.astype('float64'), [11, 2, 2])), 0)
output = relay.Tuple([call_3083,call_3087,var_3088,])
output2 = relay.Tuple([call_3084,call_3089,var_3088,])
func_3095 = relay.Function([var_3088,], output)
mod['func_3095'] = func_3095
mod = relay.transform.InferType()(mod)
var_3096 = relay.var("var_3096", dtype = "float64", shape = (44,))#candidate|3096|(44,)|var|float64
output = func_3095(var_3096)
func_3097 = relay.Function([var_3096], output)
mutated_mod['func_3097'] = func_3097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3206 = relay.TupleGetItem(func_2995_call(), 0)
call_3207 = relay.TupleGetItem(func_2996_call(), 0)
var_3236 = relay.var("var_3236", dtype = "float32", shape = (2, 3, 2))#candidate|3236|(2, 3, 2)|var|float32
bop_3237 = relay.logical_or(call_3206.astype('bool'), relay.reshape(var_3236.astype('bool'), relay.shape_of(call_3206))) # shape=(2, 3, 2)
bop_3240 = relay.logical_or(call_3207.astype('bool'), relay.reshape(var_3236.astype('bool'), relay.shape_of(call_3207))) # shape=(2, 3, 2)
bop_3246 = relay.add(bop_3237.astype('uint16'), relay.reshape(call_3206.astype('uint16'), relay.shape_of(bop_3237))) # shape=(2, 3, 2)
bop_3249 = relay.add(bop_3240.astype('uint16'), relay.reshape(call_3207.astype('uint16'), relay.shape_of(bop_3240))) # shape=(2, 3, 2)
output = relay.Tuple([bop_3246,])
output2 = relay.Tuple([bop_3249,])
func_3253 = relay.Function([var_3236,], output)
mod['func_3253'] = func_3253
mod = relay.transform.InferType()(mod)
var_3254 = relay.var("var_3254", dtype = "float32", shape = (2, 3, 2))#candidate|3254|(2, 3, 2)|var|float32
output = func_3253(var_3254)
func_3255 = relay.Function([var_3254], output)
mutated_mod['func_3255'] = func_3255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3287 = relay.TupleGetItem(func_2995_call(), 0)
call_3288 = relay.TupleGetItem(func_2996_call(), 0)
func_1690_call = mod.get_global_var('func_1690')
func_1693_call = mutated_mod.get_global_var('func_1693')
var_3295 = relay.var("var_3295", dtype = "int32", shape = (80,))#candidate|3295|(80,)|var|int32
call_3294 = func_1690_call(relay.reshape(var_3295.astype('int32'), [2, 4, 10]))
call_3296 = func_1690_call(relay.reshape(var_3295.astype('int32'), [2, 4, 10]))
func_1998_call = mod.get_global_var('func_1998')
func_2002_call = mutated_mod.get_global_var('func_2002')
const_3308 = relay.const([[0.418391,-5.327996,0.413696,-4.260443,-3.363427,7.911814,-9.428322,-4.509239,-7.501229,0.708160,7.663852,-0.029517,0.021192,9.591340,-1.624782,-0.940458,1.057843,2.987519,-7.033405,-7.284211,7.399493,8.872617,-3.208170,5.956843,7.410037,4.628957,-8.249721,-5.709052,8.468909,8.802353,-0.118097,1.659079,-0.052084,-2.108970,-2.683393,-9.435057,-5.866448,4.279921,6.123791,0.642717,3.190268,1.420510,-3.782089,2.289278,2.552711,6.921323,-6.927431,7.071778,9.947411,9.922545,6.643604,6.242574,-8.650179,-5.484121,7.752235,-8.221414,-3.557286,4.200450,2.592099,0.466954,9.013884,-3.228681,1.453486,0.756759,8.545958,8.250602,-6.742115,-9.547751,5.055199,-8.721027,-0.597504,-8.348846,-3.652615,1.517545,-7.786681,-3.518073,6.740748,-0.383171,2.072678,5.683231,-9.332316,9.069597,9.737292,1.365582,-4.280226,-2.004035,5.396094,1.238803,-2.973148,7.634674,5.399450,-6.215538,0.208622,-8.521706,-3.686752,8.511237,-4.633112,7.481514,6.516252,-7.224601,-7.050782,-7.666321,4.225860,9.550882,0.088884,5.575061,5.185668,4.894954,-0.187988,9.192770,-8.245202,4.252246,4.011790,-0.289435,-8.915539,-1.369974,6.664383,-6.823090,-9.581281,-8.257704,-3.223745,5.398195,-6.703474,-9.243465,-1.760346,8.741286,7.886974,3.416080,-9.755673,7.398313,-7.411019,2.806092,-2.560851,8.685771,-4.696245,-3.686572,7.282571,-3.772469,8.029723,-9.603645,-4.452415,-8.868337,-3.645624,-4.044009,5.336414,6.749709,5.156490,-5.487280,-9.499129,-0.617655,5.845183,-3.539339,-2.798747,-5.822029,2.837733,7.731708,5.154391,8.415740,0.780829,-8.030092,6.052148,4.266450,-3.815477,4.312421,6.899221,7.188422,-3.723132,9.886024,-5.620139,-2.667520,-5.560657,3.554372,3.351770,0.975409,-3.466392,-6.035133,-7.980616,-4.037547,9.835033,1.761712,-6.110858,6.298266,-1.751157,3.748128,6.070762,0.256523,-4.875938,3.710733,2.184720,-9.929919,-0.032264,-7.700018,-5.743701,6.400738,-9.760435,-9.845229,-7.839566,7.112501,-0.146244,2.901067,1.875182,6.594791,-5.214403,4.426124,-5.851511,8.745520,-8.485907,4.414277,6.680169,-1.406514,1.914359,-6.293644,7.740850,4.974664,-8.121000,0.567771,1.110143,8.711489,8.082336,7.655743,8.721721,-9.341794,-6.752601,-0.637070,-3.610835,3.622978,-1.192890,5.481157,-0.265669,2.764752,-2.532274,-4.303643,-6.592525,4.279855]], dtype = "float64")#candidate|3308|(1, 234)|const|float64
var_3309 = relay.var("var_3309", dtype = "uint8", shape = (216,))#candidate|3309|(216,)|var|uint8
call_3307 = relay.TupleGetItem(func_1998_call(relay.reshape(const_3308.astype('float64'), [6, 13, 3]), relay.reshape(var_3309.astype('uint8'), [216,]), ), 1)
call_3310 = relay.TupleGetItem(func_2002_call(relay.reshape(const_3308.astype('float64'), [6, 13, 3]), relay.reshape(var_3309.astype('uint8'), [216,]), ), 1)
output = relay.Tuple([call_3287,call_3294,var_3295,call_3307,const_3308,var_3309,])
output2 = relay.Tuple([call_3288,call_3296,var_3295,call_3310,const_3308,var_3309,])
func_3313 = relay.Function([var_3295,var_3309,], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mutated_mod.get_global_var('func_3313')
var_3315 = relay.var("var_3315", dtype = "int32", shape = (80,))#candidate|3315|(80,)|var|int32
var_3316 = relay.var("var_3316", dtype = "uint8", shape = (216,))#candidate|3316|(216,)|var|uint8
call_3314 = func_3313_call(var_3315,var_3316,)
output = call_3314
func_3317 = relay.Function([var_3315,var_3316,], output)
mutated_mod['func_3317'] = func_3317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3319 = relay.TupleGetItem(func_2995_call(), 0)
call_3320 = relay.TupleGetItem(func_2996_call(), 0)
func_2430_call = mod.get_global_var('func_2430')
func_2433_call = mutated_mod.get_global_var('func_2433')
const_3322 = relay.const([-2.507759,-5.426699,2.602087,2.717752,-2.234293,-1.595874,7.343239,-6.120251,-4.472031,0.832864,9.155321,-9.974104,-3.258444,-1.111758,-4.195840,-6.076697,6.783181,-2.671121,6.825384,-6.322483,5.987758,6.874135,-4.672405,6.655547,-8.664603,-8.087058,3.885597,7.926891,-7.163835,-0.854082,-3.439048,6.952779,8.545075,-3.606026,7.566496,2.108364,4.340252,5.400753,-1.674492,-3.161178,2.356089,-1.803896,6.590595,-6.884043,8.275763,-4.486588,7.890946,7.769581,4.417123,-6.191021,9.763737,8.437013,-8.350912,-4.662724,5.754251,1.899841,1.899993,1.215724,1.559684,-2.329801,-8.470687,-0.887035,-6.541757,6.717481,4.296910,-8.597074,4.320553,2.086285,1.919139,-5.120596,-6.707789,4.334222,4.093335,-2.727882,4.966343,-3.363685,5.785535,0.109616,-6.140636,5.298124,-3.832598,-0.594551,8.922369,8.131358,-2.664924,8.888317,-4.933269,-6.799009,-6.657093,-8.549003,-6.002865,9.023846,-1.897958,5.996665,9.887948,-8.901986,9.848823,0.887411,3.153783,2.863789,-5.109456,-3.652529,7.677890,1.509510,-7.524917,5.776335,-1.720880,-8.096204,-2.346668,2.850358,4.410439,4.719838,1.708612,7.951285,-9.226249,-9.744905,-6.710202,2.393551,2.833953,2.902678,-5.715723,-2.746957,5.441299,1.974892,7.042849,-7.593111,3.227175,4.316259,-6.093938,8.287533,9.807750,-9.567376,-8.682467,6.322659,-0.239480,7.216134,-1.649821,6.886114,6.586859,1.253498,8.145732,7.875528,5.916317,3.055578,7.311877,-4.353396,-1.147783,-4.735614,-8.617400,9.448018,-7.831176,-1.319793,-1.807738,4.823261,-0.300048,-2.108470,-6.476883,-6.545888,-0.370702,0.055555,-5.413550,-8.299114,-6.725442,-0.530303,3.892263,6.187094,-0.897450,-9.384623,7.242169,-1.554847,-6.354952,-4.089862,-4.925646,-8.945631,-0.775512,7.944606,-1.682583,-0.600560,-2.778883,6.010176,-0.215990,-0.910010,-0.251280,6.596421,-3.068443,-4.954227,3.359016,1.452257,5.849244,-7.919126,1.602843,1.439199,-0.278593,7.952954,-5.062763,-9.285575,5.482997,1.345165,8.045023,-5.555867,2.330544,-2.591587,3.625642,-4.422216,5.272435,-0.416351,-0.268939,-2.015108,7.410982,-7.442730,7.041106,-8.284611,9.692592,-6.924108,7.775305,-3.294764,5.936784,0.145622,-7.242226,-0.244724,-6.108502,-3.525412,-4.277131,7.155061,-2.804155,5.292861,-8.376609,5.521075,1.183570,-8.398398,-3.295945,0.528937,1.470503,-7.789194,2.204560,-4.313571,8.246420,-7.165137,0.428831,-0.618098,4.790407,6.101911,8.880655,6.061859,8.120512,7.333626,-4.055418,5.124903,2.425441,5.909246,-8.110515,1.807289,5.276575,4.625784,3.288083,-7.662016,0.851200,4.428712,-2.280894,-3.428672,-6.657144,8.518581,-9.399288,3.984315,-2.270357,-4.973936,-4.944470,8.346362,-7.738026,-7.061639,-6.438851,-5.076795,2.465298,-4.018409,3.724724,7.235601,1.641665,-5.289223,9.131349,8.133581,9.323144,9.318500,5.647120,1.914053,6.709486,-7.849672,-9.597319,-2.126205], dtype = "float32")#candidate|3322|(288,)|const|float32
call_3321 = func_2430_call(relay.reshape(const_3322.astype('float32'), [3, 8, 12]), relay.reshape(const_3322.astype('float32'), [3, 8, 12]), )
call_3323 = func_2430_call(relay.reshape(const_3322.astype('float32'), [3, 8, 12]), relay.reshape(const_3322.astype('float32'), [3, 8, 12]), )
func_3253_call = mod.get_global_var('func_3253')
func_3255_call = mutated_mod.get_global_var('func_3255')
call_3326 = relay.TupleGetItem(func_3253_call(relay.reshape(call_3319.astype('float32'), [2, 3, 2])), 0)
call_3327 = relay.TupleGetItem(func_3255_call(relay.reshape(call_3319.astype('float32'), [2, 3, 2])), 0)
output = relay.Tuple([call_3319,call_3321,const_3322,call_3326,])
output2 = relay.Tuple([call_3320,call_3323,const_3322,call_3327,])
func_3330 = relay.Function([], output)
mod['func_3330'] = func_3330
mod = relay.transform.InferType()(mod)
mutated_mod['func_3330'] = func_3330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3330_call = mutated_mod.get_global_var('func_3330')
call_3331 = func_3330_call()
output = call_3331
func_3332 = relay.Function([], output)
mutated_mod['func_3332'] = func_3332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3346 = relay.TupleGetItem(func_2995_call(), 0)
call_3347 = relay.TupleGetItem(func_2996_call(), 0)
output = call_3346
output2 = call_3347
func_3356 = relay.Function([], output)
mod['func_3356'] = func_3356
mod = relay.transform.InferType()(mod)
mutated_mod['func_3356'] = func_3356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mutated_mod.get_global_var('func_3356')
call_3357 = func_3356_call()
output = call_3357
func_3358 = relay.Function([], output)
mutated_mod['func_3358'] = func_3358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mod.get_global_var('func_3356')
func_3358_call = mutated_mod.get_global_var('func_3358')
call_3390 = func_3356_call()
call_3391 = func_3356_call()
func_2676_call = mod.get_global_var('func_2676')
func_2678_call = mutated_mod.get_global_var('func_2678')
const_3441 = relay.const([[8.777102,4.424541,-1.956399,-9.836352,1.632267,-4.990361,1.693778,6.644587,-2.544640,8.116445,-3.521498,9.130566,-0.975862,-2.657226,-8.903776,9.265228,-6.265840,9.770978,1.852664,-9.054292,1.395386,5.157340,-5.321673,-0.626758,2.454832,-9.214459,-0.271859,3.191860,-8.552604,0.835275,-8.115288,-4.645748,-9.209973,3.127357,-8.736479,-4.563674],[-0.332319,-9.969072,-4.421326,-4.974838,-7.436673,3.627893,-3.990701,4.966215,-5.815041,3.468944,5.178055,2.103623,6.767199,9.567796,1.304607,-6.372268,-8.321321,-0.454863,8.321736,-0.347144,-6.873398,-4.199640,-0.275283,8.023935,2.822882,7.319118,3.156748,-6.250659,9.398324,-6.940202,9.962296,6.776247,7.144858,-3.712808,-1.816497,-2.968056],[-7.713187,5.339098,-6.780550,5.676291,-4.799247,8.865948,-0.538182,-0.808549,3.443003,-4.958605,7.451414,-9.351825,0.344482,8.538543,6.652279,-5.892075,8.446543,-2.353102,2.803134,8.552700,-1.208779,0.881620,-1.850574,1.167955,-4.889841,-1.734397,0.561580,-3.294523,1.068055,-3.230480,5.078761,-6.072648,-7.327645,-6.580361,-0.319601,8.608929],[-5.444120,1.375678,2.386456,7.877393,-0.677766,4.933278,-1.490898,6.648970,-2.260017,4.069891,-1.192923,-8.951310,-0.412709,-3.715694,-4.250536,-2.208600,-6.961036,2.762471,-4.586754,2.305559,-1.015560,-3.484599,-7.595502,-8.692530,9.216833,-8.267753,0.668195,-3.636655,-8.097158,-3.891718,9.307564,3.020648,4.274946,2.103721,9.229810,-8.722467],[6.062486,7.230148,-0.745485,-1.134524,4.792006,-5.091255,5.384058,-6.903868,9.828218,-9.685698,0.760790,2.607769,-1.315890,-4.647795,7.339768,0.123375,1.264682,2.012721,-7.042042,5.709094,-3.152863,-5.347132,7.496850,0.568364,-4.462167,7.648473,-4.174461,-3.240203,9.766713,-1.304410,9.214307,0.788662,-1.056255,0.233506,8.644543,-4.316859],[-5.351478,4.394423,-4.081356,-8.017163,4.757482,-1.459478,-4.936358,-0.438637,-8.952737,6.372248,8.460378,-7.189890,9.599982,-8.314325,5.904808,-2.191248,-9.762992,7.177035,4.057667,8.501458,5.856737,-7.176641,-5.843603,7.928931,3.417525,-2.626915,5.227260,5.620285,-1.630119,7.705753,-6.385229,3.767769,-2.826133,9.493449,7.799289,-7.054280],[1.136392,-5.139985,7.253861,-5.192203,-6.755141,8.288226,8.565001,-6.113900,3.593211,0.559953,-6.037838,-6.106041,5.397936,-3.939535,-7.818540,9.001704,3.476849,1.415323,9.604885,4.804104,-5.733784,-6.941482,1.767093,-2.710664,-7.279515,8.188986,-0.399763,4.904128,7.334216,-8.479881,-0.477314,2.399421,-5.056044,3.075982,-8.406349,8.259476],[2.415165,5.044860,7.821334,8.146117,9.958232,-7.465138,-8.180125,-7.376820,5.110165,3.120633,-3.381496,9.424931,8.682073,1.841853,9.471514,4.198514,-1.228092,-3.332903,-0.605125,2.177888,-4.543700,4.465508,-9.920626,-9.723572,7.892063,3.224770,1.971989,-2.024896,4.671872,-6.276751,-8.275241,-3.968424,-1.595214,-3.849130,-6.995326,7.482204]], dtype = "float32")#candidate|3441|(8, 36)|const|float32
call_3440 = relay.TupleGetItem(func_2676_call(relay.reshape(const_3441.astype('float32'), [288,])), 1)
call_3442 = relay.TupleGetItem(func_2678_call(relay.reshape(const_3441.astype('float32'), [288,])), 1)
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
const_3456 = relay.const([[0.554412,-3.970217,7.428597,-8.690631,-9.353632,-8.053703,-4.625753,-9.135565],[2.671469,-0.115828,-9.634031,-7.770170,9.850802,6.717773,3.426622,8.964097],[5.089461,-6.982283,-6.275813,1.998604,-3.235840,8.092296,-5.591429,-4.602326],[4.195877,-2.131420,5.403661,-5.438785,-9.989181,-1.222934,-0.362574,-7.105583],[-0.294820,-8.803970,4.287869,5.240503,8.827972,-1.178945,-9.502093,-5.624411],[-5.692298,6.063011,1.809461,-1.305669,-8.653123,-9.534347,-7.376011,-7.164492],[5.271303,0.982990,6.359836,0.058914,5.235213,-1.959356,-6.774008,8.515294],[0.988667,-3.740357,7.005627,-3.736961,9.186327,-9.580214,2.492115,-2.395078],[9.580383,-3.813087,-8.675151,-2.089578,4.460789,9.972207,4.942356,-3.689255],[-9.647385,4.002891,-8.342297,1.478950,-3.973759,0.447089,-5.642383,9.219052],[-3.444298,-8.830406,0.123523,-4.925113,-8.330635,-0.490833,3.570465,-6.606943],[6.833622,4.032552,-8.342835,0.708575,-5.855928,-6.990694,9.016958,-0.347585],[4.186216,-5.175999,2.188209,-0.061996,0.081138,4.007061,6.057578,-1.604294],[-1.582295,-9.111170,-3.243392,7.620290,6.034397,5.729330,3.648959,-4.015622],[4.249212,6.027440,3.841644,-7.335364,-5.360800,5.612874,8.395385,-7.595676],[0.332501,-5.486708,2.248872,-2.606892,-2.434197,0.971807,-4.033752,-7.499611],[-7.376182,-1.846626,6.034930,-9.877121,2.036495,-2.934259,5.605574,-2.776706],[3.521290,-7.072419,-2.373051,8.023631,8.005869,8.310450,-7.230872,5.112885],[6.657730,4.726405,-9.977387,2.970128,0.584348,-9.050075,-1.250563,-4.356272],[-1.670275,-0.029918,1.677254,0.768835,-8.294627,-5.938229,-5.666102,-8.257845],[-0.477826,0.007491,1.557069,-9.837830,-5.359274,-1.747887,2.399213,-3.292766],[5.153081,-3.072828,2.707985,8.034073,-6.052450,-9.142065,8.127178,4.641317],[-5.705887,-3.094466,4.017550,6.527414,-1.353566,-3.444037,-6.520432,9.372252],[-5.711926,-3.703509,5.794271,5.331206,-5.856764,-7.526135,-6.241085,3.550681],[-6.736752,7.161712,-1.830715,0.576840,-9.396650,-5.542389,6.901126,-0.325018],[3.772770,5.558260,3.189299,4.214120,-4.169383,6.698222,1.684205,-6.071331],[7.502466,1.722370,-9.982242,-6.006767,-8.954618,0.659184,-1.441136,8.623875],[-7.073253,-1.970932,-2.291302,8.161213,7.635575,1.469828,4.830829,7.387559],[3.749813,-2.439735,2.958672,-6.851286,9.229674,4.480546,-7.563586,-9.832125],[0.203330,-3.097466,-0.283309,0.830181,-9.615563,-3.304513,-8.879750,-7.999579],[-6.018848,3.240112,2.650615,7.592573,5.698179,-1.744598,-9.569915,-4.852084],[4.217273,0.073359,5.760841,-5.636345,6.634490,0.590795,-7.081415,-9.360704],[8.743373,-5.357737,5.538943,0.465807,7.634512,-9.267576,-3.746328,5.372104],[7.376815,4.717514,6.547374,6.877560,-0.690264,-1.892707,-3.062942,7.771440],[-2.991596,3.134588,-8.946998,-2.709608,-7.760241,5.658999,-8.682681,6.692182],[1.505195,-7.084359,-3.049820,3.797177,-3.452900,6.348835,-9.460556,-0.002266],[-9.017676,5.746880,6.075377,-5.472747,-4.843729,-6.296890,4.041400,0.668879],[1.710274,8.269308,6.946934,-9.602103,1.080146,-8.739402,4.315400,-1.081903],[-3.324510,-3.213264,-7.702470,-5.355845,-3.594180,3.370181,-5.580040,-4.436546],[-2.825059,1.877269,-7.439771,7.547472,1.151319,-1.836740,6.135950,-7.184634],[-5.846331,6.166118,-9.068553,0.877227,-3.193065,-9.000558,8.299406,-6.736449],[-8.871394,4.229527,-6.346975,-8.223980,4.797798,-8.041949,-0.425961,-7.763004],[9.824119,1.006504,1.851612,-3.217763,1.330708,-2.423187,5.207148,-8.720400],[-2.306328,-0.456221,-4.144907,-2.853329,5.531113,-8.263091,-2.380660,-6.529965],[-1.329939,5.569006,0.886918,-5.397590,-4.758902,3.793257,6.663531,9.087163],[-8.028561,-3.685751,9.601082,-4.350751,2.519292,-8.745256,6.222730,9.222338],[-7.255954,-7.609850,-7.690483,-5.980042,1.374727,-0.589629,3.710890,8.034818],[-4.515332,-2.287354,-7.636222,-7.332704,-6.331195,7.858657,-8.940705,6.421448],[6.577318,-7.957668,-5.349053,-8.032621,-2.796906,2.948647,8.447878,9.011947],[-3.115911,4.549456,-7.575794,8.279841,-9.073222,0.393778,9.623616,8.036180],[-4.904291,6.313870,-8.569358,-1.453603,-4.216228,-0.182479,-9.843247,0.428306],[6.547947,-6.094214,0.865743,-4.937213,-9.644210,-7.261263,7.456111,2.555876],[0.699450,-4.701895,-3.150373,-6.581868,-4.022789,-1.622216,1.899930,-0.208646],[-2.735083,-1.610713,-8.618264,3.333581,-7.994617,-7.452960,7.386196,3.690445],[-2.060963,-9.218039,2.658777,-1.209973,9.116768,-2.240588,-2.622979,-2.996373],[0.058252,-5.157787,8.089255,7.297871,0.080330,5.080077,7.301350,9.689670],[9.087983,-5.629419,4.905088,-8.938647,-8.059209,1.620922,0.580901,7.159120],[-2.335140,-0.882838,-9.941401,-5.850818,-4.576399,-8.421418,-8.144238,2.877584],[-5.519540,-7.050229,-3.017427,-2.777073,-6.258687,-5.641811,4.543755,-3.257879],[8.791666,-5.722289,-5.950870,-3.434222,-8.171538,-9.233121,-3.846323,-8.877907],[-5.468245,-8.639905,-1.125458,7.644472,-7.818880,-3.308492,1.936040,-7.380724],[-6.344617,-5.899247,8.569426,0.771748,-1.450037,-4.586651,9.653323,1.267472],[-8.497874,3.262308,-9.818668,2.544093,-2.289057,4.459798,-5.613318,-2.345678],[-8.866626,-9.235724,9.375188,2.965846,0.355435,8.248540,8.068165,-7.226238],[-3.017157,-5.647817,-7.356538,-3.745977,1.110719,5.390783,0.410818,-8.259065],[-1.539797,0.405344,-9.979995,2.399394,-8.091944,3.582062,8.612740,1.326260],[4.624953,2.396391,6.140019,-8.338172,6.588910,8.385964,2.137043,-6.776816],[-6.804177,-7.731399,-8.831430,-6.946152,-6.231736,-9.394593,-2.459211,7.160210],[1.483142,4.152609,-0.586788,-7.690277,6.993242,-4.281240,5.073959,7.493969],[-9.579383,9.203233,1.396299,-8.179578,8.948509,-7.226103,-4.083957,8.220497],[-6.515549,3.437742,-1.255294,-9.433984,6.843821,-3.818220,2.999041,-4.090224],[6.246948,-2.696586,4.363434,-1.874698,-6.903088,-9.761881,9.292614,-5.534700],[0.865734,-0.193556,2.401851,0.144198,-3.743852,-8.148244,8.920984,3.716113],[-7.003793,-2.426705,-4.586291,-2.308219,8.445671,-0.853618,-6.006463,-5.391531],[-7.179441,4.730548,3.314899,-8.153433,-2.013430,1.341789,3.746766,3.666072],[-9.022130,8.015271,-1.368678,2.397490,3.011206,-1.920489,2.030653,6.242242],[-6.077229,6.550218,5.455328,0.067034,-5.762116,-6.814402,2.309651,6.529430],[9.983443,1.715525,-1.383231,0.441419,-9.291283,3.416342,-1.888571,4.141172],[6.556509,-0.683125,-8.896823,3.575833,-4.078375,-7.526875,3.038801,7.617468],[-4.368519,-2.401023,-8.435476,-3.401884,-3.981858,-8.378655,-4.440314,0.677612],[-6.131566,2.927563,9.621972,-8.941195,-6.367836,9.558261,-5.345397,-2.361925],[3.003421,-3.669089,-2.344040,-2.584739,-4.316417,9.896023,-1.675886,3.550375],[-6.323269,8.344242,2.422290,2.567015,-2.393882,0.717974,2.777028,-3.113341],[-3.756631,-1.135642,4.116734,9.426804,3.774467,8.129970,5.804949,8.742781],[9.335897,3.379004,-4.393337,-1.482724,-6.600963,7.367459,9.168105,-1.627798],[-9.515790,-7.841540,-3.058221,-8.668991,-3.962761,5.000219,-7.614575,3.637245],[-0.695242,-3.728109,7.624976,6.098182,-2.374236,4.841021,-7.355273,2.822952],[3.459882,6.288397,-6.253660,0.489336,5.839826,-5.535474,3.518507,0.663077],[4.498969,-3.777219,-0.528759,-5.450261,7.233639,-4.649763,5.699000,-1.365305],[7.585556,-8.325737,0.888654,-1.048698,3.272520,-9.547395,-4.540741,-4.554214],[1.547757,-2.738099,-2.197559,-7.641801,-4.266375,-2.919298,4.378981,-7.912385],[-4.277869,-4.818016,6.801891,-4.388803,4.748229,9.539561,-2.924123,6.491614],[8.632824,0.516633,-1.384036,5.255327,-2.051010,2.351321,-2.314125,-2.763624],[-5.324747,4.136726,7.702463,-1.117652,-5.086562,-9.818396,9.931599,0.656090],[1.455342,2.366568,-7.510628,-8.539704,-9.517469,-5.791067,-6.159693,3.718090],[8.603393,-4.825817,-3.746435,-2.297539,-0.575219,4.228872,-4.617468,-3.179027],[2.409852,-5.288911,-8.216328,-3.187567,-5.492897,-0.332796,2.169218,7.417785],[-6.633226,2.799106,2.855208,0.170071,-1.294091,6.606196,9.443940,-0.423941],[3.117111,0.528467,8.313818,-9.649124,-6.176831,-0.858459,-3.336928,3.705165],[2.761562,3.416474,-0.453500,7.672025,4.934750,1.354362,-0.707400,4.639542],[-4.200084,-9.256415,-0.082737,6.928280,6.326557,-2.338303,-4.523326,-1.856910],[-0.326827,-3.687729,-8.231350,3.136236,-4.750401,2.131664,-7.636030,8.947912],[1.737023,1.172144,-2.548168,-0.428923,-8.233717,-5.182431,-8.897347,9.982363],[-9.157693,8.151557,2.035757,2.326204,-4.063750,-5.398249,5.302313,5.772794],[5.504602,1.467100,-3.509957,0.890604,-8.847722,3.599916,-5.741671,-5.206845],[-5.781506,-0.768152,-5.359211,6.543053,-0.684583,-8.709605,9.051040,-3.672068],[-6.028695,3.323954,7.867253,6.919808,-9.801561,0.022378,3.598294,6.232766],[3.466965,3.607388,4.498979,-5.043018,5.919283,-8.775178,2.208728,6.205615],[-4.734585,-6.742567,-4.871105,7.586549,-9.132790,3.487664,-4.293683,7.397803],[-5.511553,-0.734368,2.289343,6.007496,9.040094,-9.320176,-4.665670,-1.764328],[-5.260827,8.610321,-8.380250,3.247336,4.141805,4.010512,8.554909,0.285842],[5.188316,-6.765081,7.884400,1.769815,1.676946,9.784982,-9.396421,-0.114401],[-5.568499,8.169661,-8.285661,1.490218,1.311191,-1.231158,3.691126,3.019495],[4.423123,9.706149,9.962988,0.884717,-1.507456,3.512138,-8.612699,1.765565],[9.204365,6.900732,7.951809,0.354173,6.987133,-5.520398,3.223893,-9.789650],[0.752154,8.197379,-1.592737,0.228869,5.863257,0.267512,-6.719503,-7.766607],[9.020810,6.306164,-5.581980,-5.246495,-1.138142,-0.918163,-1.180260,-1.463857],[8.166117,-2.405650,-6.957416,-1.880707,-9.550409,3.774533,9.867836,-9.236076],[-3.794351,7.268214,-9.785976,-3.890445,-4.771062,8.355785,5.022899,-8.292031],[5.435038,3.702628,-4.691435,-8.592898,5.381351,0.390993,4.011549,-5.160761],[-2.675406,0.185958,4.211182,0.333603,-0.056953,-3.027621,0.372731,-6.283581],[8.648751,-3.064583,-4.065801,2.238375,9.479043,-9.786056,-3.056491,-4.438797],[-8.726725,-9.181083,5.150191,-7.677997,-2.715401,-8.482870,4.954308,-4.877989],[-5.561270,2.754711,0.818630,-2.850482,2.660433,-4.779239,0.453000,-7.366778],[-8.610317,2.718349,8.319051,9.469836,-4.321423,0.897628,1.763168,0.487531],[-3.341685,-5.724921,2.620289,-1.189237,3.694036,-7.969973,6.120549,-2.054385],[3.998294,-7.326108,4.305634,-2.494120,9.793699,-1.468228,-1.182087,-1.186752],[-2.636198,-1.004951,1.118803,-5.774569,2.899590,-2.798121,-1.947345,-8.852188],[-9.550903,-5.909827,3.625588,-4.579346,-1.200935,0.770489,-7.869745,7.647214],[-1.653662,-1.846974,1.696177,-1.425002,6.123993,3.750202,6.250386,-4.801697],[-3.899083,-0.540986,8.917958,-7.794749,3.439869,-8.030595,0.496847,-7.601443],[-5.484697,-1.590317,2.993915,-3.959983,9.205525,-5.928900,-9.159565,-6.146893],[4.096776,-5.990123,6.452902,-9.478802,-5.788417,-7.599304,9.773759,4.753852],[6.038855,3.373246,-6.731300,-5.909809,2.919591,-4.850309,3.331494,8.786302],[5.864537,1.723875,-9.055030,6.089127,6.861561,0.383667,-2.262304,-9.105792],[-0.305215,7.318441,6.366679,-3.455054,-3.296978,-5.575595,9.459155,9.188482],[0.171716,-2.070261,-0.288294,-3.186657,6.041494,-8.824490,-6.489980,-6.616300],[-7.624111,9.803962,1.595850,4.233042,5.545056,6.492521,3.941973,8.319088],[8.448119,-2.884850,-0.509822,6.904521,-0.217900,3.668874,-0.377428,0.847061],[9.015188,2.322088,-4.608193,2.368355,-2.103220,1.187924,6.174646,3.411680],[-4.597402,-7.382556,-8.427706,-9.094988,-2.676173,-3.315351,0.263161,1.998503],[-0.861609,5.641762,6.641669,-5.649072,3.733210,9.092470,4.312773,-0.251813],[0.150522,-1.464611,-8.466224,-9.408505,-6.849056,-0.710861,3.593912,4.416489],[-3.118532,-3.027524,0.248456,0.759535,-1.957584,2.288020,1.331468,3.417937],[-2.944796,3.146292,2.665562,2.388885,-4.875463,5.322771,-4.430945,2.431128],[-2.053529,-7.115021,7.534542,-0.984773,4.617511,6.804138,1.285752,6.307312],[-6.790510,1.121406,-9.655105,1.247564,-3.750625,-6.535104,3.372418,1.783656],[-9.472788,4.404805,1.143130,9.023547,6.275756,-0.662948,-8.449129,6.563706],[-9.440209,-2.414442,7.313228,5.105758,-7.970765,-6.809608,6.317475,4.099971],[-1.020983,5.585506,9.499353,-4.899475,6.435677,4.289747,-4.706485,-0.385788],[1.770593,6.195639,4.794217,-2.355096,3.928714,3.382170,-9.246621,-8.277381],[-4.707176,9.290876,-5.292123,-3.120989,-8.954100,6.907983,-9.596938,6.600630],[-3.500468,1.089166,8.725709,-5.013896,-2.416077,9.417769,-1.277037,3.443386],[-0.504273,-3.313442,-9.525684,-6.435173,9.324040,8.383007,-5.759328,6.964943],[-7.238029,-3.706025,2.450414,-3.661766,-1.069539,-4.209126,9.633590,6.155480],[-3.556100,-7.393978,1.754287,1.706916,6.075001,-0.698349,0.471018,-8.612808],[-0.457139,1.684279,4.698170,-5.844352,-0.262288,4.179574,-9.142675,8.343306],[-0.785503,-3.844479,-7.758229,-6.419801,-8.449931,1.661801,4.043448,1.099083],[-5.148333,3.016174,-6.626626,-1.248556,-8.377470,-1.591491,-6.576183,-2.434269],[-9.509409,-6.102382,-3.146459,-1.558666,-2.090257,9.191069,3.540730,8.778900],[0.989192,-1.313652,-2.282329,-9.246177,-0.086513,-3.983082,-8.324842,8.562250],[0.586150,-5.684735,6.042060,-5.477656,-7.104945,9.783157,3.237818,-3.656876],[9.119306,-5.071447,3.102805,-9.113065,-6.833380,-1.006249,5.849726,6.080102],[-6.832828,1.610228,-3.024797,1.609326,7.271050,-3.467736,3.307096,6.397994],[0.454127,8.180975,0.628133,-2.770649,-0.106059,-4.617688,9.220985,-0.205435],[7.045749,8.331674,1.005412,1.469339,2.534988,4.247091,-4.428113,0.828137],[3.667986,-9.915615,-8.958786,-2.929382,1.735234,7.179678,-0.006330,-4.307149],[9.316178,2.807749,-8.050530,1.105503,-2.224125,5.385882,0.820554,6.969253],[4.988924,5.263240,-3.540418,-9.682778,6.965771,-2.423416,6.562715,1.297846],[-8.872631,0.825167,0.680027,-9.180792,-3.640303,-2.681890,-2.419291,-8.387986],[2.785952,-6.673410,8.609235,-8.114403,-1.012908,-7.405638,1.486203,-9.239215],[-3.072146,8.491400,-6.365916,8.908683,6.030477,-2.629749,2.596999,4.179594],[8.847992,0.054055,-6.186664,7.068085,-5.473382,-2.150507,4.560980,-8.366024],[-7.959168,-2.801254,6.835907,5.941242,1.524254,6.713563,-4.766429,-0.156460],[-8.190090,-3.802933,4.638599,0.107596,7.157419,8.286632,-6.120309,-7.570066],[6.366106,3.992169,2.408794,5.532113,-9.133239,0.390168,2.275955,-7.385738],[9.203230,-6.387037,-3.384987,0.626166,1.852711,2.896621,-7.212625,1.525403],[-2.259411,-1.779122,6.897822,-6.632704,-3.467886,3.955293,0.794993,5.773857],[-1.650570,8.458119,3.320852,2.693440,-9.825459,-3.776061,-7.780873,-4.887241],[-8.515930,-0.344634,4.847005,-7.365030,6.832309,4.252897,8.904604,6.673624],[4.573952,4.246330,5.360252,9.442407,9.781774,-3.167789,8.102395,-5.483432],[-6.124248,-0.376335,7.715818,4.510224,-5.509241,-7.947102,-3.761868,1.768870],[-6.452067,-8.032369,7.490293,8.819088,-0.363095,1.419248,2.208626,1.156293],[-3.052591,6.964709,-8.666922,-6.262986,4.990666,6.715302,1.735099,3.664598],[3.767677,3.897092,-5.068568,2.526440,0.826140,-8.735952,-0.136608,-4.227915],[0.807936,-5.630781,-0.159556,-8.074517,0.098634,4.939758,0.287880,5.685278],[8.660058,1.311678,5.333790,-8.908816,3.433844,2.865545,-4.805936,0.465340],[9.978111,-5.117357,-2.960565,-5.156994,-9.690715,-2.937266,-7.229154,-6.634041],[7.416481,3.470010,-4.049573,4.784108,0.511598,7.086618,-1.370647,7.384651],[-9.045906,7.031859,3.817640,1.200408,-0.661581,4.013562,2.356768,-4.056346],[4.037263,0.200927,8.281156,-4.260368,-0.380652,-1.327177,-2.483720,-2.975698],[8.139872,4.528094,7.558480,-6.935299,1.196189,7.950306,4.270332,2.196633],[6.055226,-3.266146,3.247391,3.374566,-1.863288,-0.256764,-5.069294,-4.833425],[-6.818597,-0.069981,-8.111347,2.413345,-5.464829,-5.803375,-7.062557,-4.045455],[-9.851266,-2.910384,8.595947,6.397824,-3.287611,-7.440583,4.187910,-2.647287],[0.558407,9.324753,-8.218269,7.980256,5.523309,-0.662065,1.779022,-5.166199],[-1.905543,5.013402,-7.615057,0.786174,-6.752982,2.432117,-9.355369,0.731838],[-6.955268,4.774133,-4.800473,2.798770,-6.481712,4.859868,6.626430,-7.208017],[2.567577,8.091542,-7.999850,-8.121034,5.026405,-6.288537,8.662363,3.696812],[2.503057,-2.837625,0.460613,0.221609,-0.604659,4.160746,-9.133821,7.834453],[2.982398,-7.214807,4.113588,-5.274075,-2.494667,0.397642,-9.948053,-0.135813],[3.708078,1.730685,-9.067998,7.392710,-5.396399,-6.476020,-7.766202,-6.885914],[6.922953,1.930053,4.896265,0.647735,5.978438,1.206782,6.734161,9.033067],[3.380176,3.634272,6.962380,-1.828358,6.825659,6.983653,-6.603532,4.501215],[-7.299815,-7.565071,-1.989475,0.831769,-6.323549,9.605589,-2.878402,8.934949],[-4.491250,-0.574361,4.201329,3.528789,5.666492,-8.233718,-4.658508,4.172791],[-4.218106,-1.885287,9.774346,-6.353753,-6.557870,3.159563,-6.652683,-8.553712],[1.134811,6.848699,8.456390,1.267970,4.215924,-7.979866,9.033995,-6.668825],[-8.520473,-6.967834,-3.834074,4.983842,0.486413,-2.983413,6.929868,-8.689938],[1.874649,3.967941,-6.823770,2.600712,-1.564712,1.315850,-4.123340,-7.362530],[-1.314951,-5.349496,5.079082,4.124404,2.073181,7.614240,9.498537,9.920026],[5.649738,2.300963,-5.866256,0.920484,4.839179,-2.712251,-7.788091,-6.217097],[-7.617620,9.363094,-3.510835,-0.783430,-7.064401,5.964514,8.200889,-7.592883],[0.827740,-8.938829,4.468947,2.068651,-7.052887,-4.558507,-5.212373,3.383496],[3.154818,-1.401028,9.144435,0.379140,-6.688841,8.717657,-8.851326,-1.610857],[-8.685821,7.266851,-0.651814,-0.451137,-3.732225,2.737148,7.031830,5.363409],[-7.931294,-8.439309,-8.827174,8.485573,-4.670660,-8.501077,5.936591,1.706061],[5.127925,3.349164,5.845132,-9.572088,-4.728503,-0.954570,-0.360697,-4.400101],[5.379368,1.476660,9.051666,3.130908,5.165849,-9.752315,-6.363153,-5.981730],[-4.525855,-8.419043,1.120536,5.178757,-3.808589,2.975339,-8.661134,1.039127],[2.466148,0.368655,-4.731731,-1.383212,2.774252,-7.639143,-8.152586,3.982003],[-6.483031,-8.008419,6.405970,7.088301,0.104931,-6.536037,-5.432273,-6.713671],[-6.952182,-3.694278,-3.798068,4.725694,3.056368,9.042634,-3.784325,-1.550147],[-5.982181,1.412294,7.753109,-9.977007,1.113679,-2.025149,-3.256014,4.397796],[-2.689596,3.661888,7.054999,-6.050927,-6.885997,-7.075150,9.955989,3.686076],[-0.454975,0.266896,8.147491,-1.116289,-2.067970,0.945442,3.664505,-7.591016],[-0.691486,-4.517507,-3.708540,3.626796,6.335638,1.759660,-7.020487,-9.385646],[0.039264,-2.793703,7.884962,-7.763257,0.693113,6.860264,-4.577084,4.738853],[3.686752,-1.583943,-3.679779,1.059336,-3.977845,-1.022681,5.117801,8.975572],[-7.266729,-4.701877,-8.153241,-6.196255,-4.703246,0.146910,7.799031,6.816575],[-3.525979,-7.870395,2.407867,-6.619420,-8.570802,5.587064,-4.657727,6.354975],[-7.835250,-4.020162,-5.355769,8.626497,-8.316811,6.797312,4.505732,2.383017],[6.742543,-5.393704,9.490228,-2.691095,-5.596908,9.683019,-2.629432,1.400676],[-7.638574,1.433683,-9.723007,8.840136,0.515228,-6.299168,-4.903498,2.699517],[1.420759,-3.256750,-2.835293,4.688175,-3.346125,8.257395,2.667084,-5.448968],[6.671877,-4.024261,-3.009594,-7.422904,-3.569789,-1.770925,-1.178683,-1.371915],[3.819279,-5.696450,9.537041,-8.258309,5.421363,-9.042825,3.755163,-6.151987],[2.156331,-5.450051,0.827198,5.019351,-7.789004,-4.524735,4.457774,-1.759690],[4.496102,0.721477,-4.951155,9.154262,7.577672,-7.117267,-3.897249,8.312612],[9.126420,8.405849,3.498338,0.765988,-5.454251,-4.734314,-7.278900,-2.992076],[-8.028927,2.193424,-2.338786,-5.694232,-4.328060,-4.830405,0.034204,-3.147717],[9.715240,9.829090,5.013866,-5.229375,-6.769037,0.317973,-5.321055,3.819727],[8.465027,0.284111,4.503206,-4.977661,3.539623,-2.500777,-3.259764,2.156930],[-3.187764,-5.549572,3.412274,0.243704,-9.297448,5.319095,-7.421706,2.246777],[9.963568,0.467934,-2.133939,-6.528551,-5.591273,-6.012179,-2.452486,3.707966],[6.536635,-0.666566,-8.947809,-8.292156,-1.503448,6.987768,-3.970183,3.497222],[-2.745011,-5.878324,-3.582566,-5.142392,5.733685,4.350085,-7.022083,-8.008542],[6.383226,3.216898,-8.407666,-7.412734,3.755921,-7.595183,-7.099560,6.724257],[-1.991745,4.958264,-9.839222,-3.629035,-3.141294,3.906826,-4.085129,-7.751703],[-7.072675,1.583441,-3.971410,-1.126197,-1.948924,8.972621,-6.480234,9.843026],[7.228122,8.818138,-8.612247,0.519768,0.483678,8.805938,3.368458,1.883146],[7.354037,-6.539905,-7.454409,9.796683,2.826766,9.515151,1.530125,7.777128],[7.873415,5.735239,-3.237159,2.373621,9.266833,0.639787,-4.430162,2.203258],[0.536887,8.609000,-6.948384,-9.269462,-9.406872,8.109930,-9.472992,-8.776187],[1.951469,2.692156,-9.823913,9.729858,-8.415352,-9.431591,-1.045316,-0.266336],[-8.050914,4.218208,8.379464,-0.357375,-2.150204,3.386336,-1.267823,-5.686871],[7.250977,3.322520,-7.821727,-3.540595,5.472241,-4.970791,-1.120096,-1.336985],[-3.471635,6.524526,4.939159,4.191488,9.032377,5.812502,-2.200564,9.495958],[3.014208,-4.059106,3.265398,-4.543125,5.651012,-8.262377,-0.888785,-5.382897],[7.484159,-7.034477,-3.318077,-4.862578,-5.902062,6.670805,6.069102,8.170486],[-0.272225,0.812758,-2.352397,-6.329078,-7.223657,3.598695,9.042109,3.353040],[3.870176,-4.257180,-5.533690,3.497557,-3.514800,6.756118,6.801041,-8.945905],[-1.541826,1.672120,-6.684887,2.715699,0.446007,1.419365,-3.128617,9.118993],[-0.051276,4.643183,-0.401270,8.397593,-4.152455,-5.770736,5.538715,5.463174],[-7.694353,-7.384205,-5.894180,4.893717,-9.677618,9.341416,-2.482838,-4.428209],[-2.786569,8.519424,-5.990839,7.586257,0.650646,-3.466898,-8.469615,0.028583],[5.816810,3.777442,3.095882,7.335291,9.334190,-5.972937,2.866254,-2.538936],[7.092065,-9.466873,8.672394,-8.685176,5.554295,6.273136,-6.510866,0.941411],[0.677350,1.773739,4.012699,-2.221030,3.117558,-0.918691,-6.171968,-1.649486],[-8.837839,2.001133,-2.701350,3.753765,4.336650,-0.458569,9.463839,9.424651],[-9.372219,1.413897,4.940080,3.469544,-1.260318,6.499681,-4.668964,-5.257702],[-0.514905,-9.022273,7.068427,-8.159586,7.920882,-2.330155,-0.289579,5.441585],[5.060721,0.040648,-3.316101,1.682078,-2.567247,0.348595,5.783266,-4.271028],[-1.365345,-6.051378,-4.659660,-1.441039,7.596523,-0.846796,-9.238689,9.426057],[-8.724955,-8.827821,2.524131,5.162148,-0.790691,-3.077352,8.405776,0.933111],[-7.570618,4.294203,-2.653101,-3.777460,1.803030,-1.884146,-8.776128,5.196706],[-4.752689,4.454971,5.677683,8.874647,-6.177887,4.281612,-7.016032,7.936042],[3.790035,5.331928,-5.130376,6.601523,-2.236805,7.269947,7.433245,5.324455],[-6.739871,4.538089,-6.194097,6.898510,5.347420,-8.040782,6.393612,-1.059182],[-4.564006,-2.637298,1.365378,-8.976072,8.466344,-9.470319,-1.140124,-9.905002]], dtype = "float32")#candidate|3456|(280, 8)|const|float32
call_3455 = relay.TupleGetItem(func_1416_call(relay.reshape(const_3456.astype('float32'), [16, 14, 10])), 2)
call_3457 = relay.TupleGetItem(func_1418_call(relay.reshape(const_3456.astype('float32'), [16, 14, 10])), 2)
func_2171_call = mod.get_global_var('func_2171')
func_2175_call = mutated_mod.get_global_var('func_2175')
const_3460 = relay.const([-6,-2,10,7,10,5,-3,6,-4,5,5,6,1,-10,-1,8,-1,4,4,7,1,-7,-2,6,-9,-9,-6,-8,2,8,1,3,-8,5,10,7,1,-8,9,10,-4,-2,-4,9,-8,-3,3,-1,3,-7,8,-8,8,-4,7,6,-3,-4,-1,-4,10,-8,-3,7,6,3,-6,5,-5,2,2,-7,-8,-3,4,6,7,8,-4,8,-9,-4,-1,2,9,-2,-3,6,-8,8,8,-7,-9,-5,-1,3,-3,8,9,2,3,-6,2,8,3,-3,4,-4,-6,8,-1,9,1,1,-7,-5,-8,-7,-5,2,10,6,7,7,-8,-3,5,6,1,-5,10,-9,10,-9,-8,10,-8,4,-8,-9,5,7,5,-7,1,-5,1,-9,9,-6,1,-8,2,-4,-2,-7,6,8,-9,8,-6,-1,8,-8,10,-5,-9,1,5,-4,-8,-4,6,6,9,-5,10,4,8,6,-7,10,-5,9,-6,-7,-5,1,-4,-9,4,2,2,3,-1,7,-1,3,-7,8,-5,-10,-7,-4,-7,-6,8,6,-5,9,9,3,10,7,-8,1,-9,4,9,7,-2,10,2,-2,-4,-4,-7,-2,-2,-4,-4,-4,5,9,7,-3,-8,10,8,8,3,2,10,4,-3,-2,5,-9,1,6,3,-6,-2,-2,8,-2,-3,-8,-8,-5,-5,9,-1,2,-6,2,8,2,-6,-10,-6,7,7,-2,-2,-8,-6,-6,-5,10,7,-1,-4,4,-7,8,9,3,-1,-2,4,9,-5,8,5,1,4,6,-7,9,9,7,1,3,-7,-8,-5,4,3,-1,-9,-2,-6,-10,1,9,7,9,8,-3,-6,-9,-7,2,2,-8,-6,6,9,7,7,1,1,-3,3,-5,4,-2,6,1,-7,-1,-1,7,4,3,1,7,-5,3,8], dtype = "uint64")#candidate|3460|(351,)|const|uint64
call_3459 = relay.TupleGetItem(func_2171_call(relay.reshape(const_3460.astype('uint64'), [3, 9, 13]), relay.reshape(const_3460.astype('uint64'), [3, 9, 13]), ), 0)
call_3461 = relay.TupleGetItem(func_2175_call(relay.reshape(const_3460.astype('uint64'), [3, 9, 13]), relay.reshape(const_3460.astype('uint64'), [3, 9, 13]), ), 0)
const_3463 = relay.const([-0.109020,-0.378930,0.428134,0.315299,-0.242891,-8.854955,-2.638065,-5.715597,-3.864963,-3.370553,-9.612909,7.703498,4.671181,5.323277,6.751674,-7.662169,2.829859,-4.827004,5.939257,0.365627,-2.703479,-5.808053,-4.509535,5.369067,5.185956,7.781247,-8.985474,0.105265,-7.258378,-2.616491,7.257118,8.833149,-7.704832,-7.868760,1.481695,8.251014,0.826427,-3.097321,0.136147,-3.930250,-0.542762,-5.928193,-2.002759,-4.251227], dtype = "float64")#candidate|3463|(44,)|const|float64
bop_3464 = relay.subtract(call_3455.astype('uint64'), relay.reshape(const_3463.astype('uint64'), relay.shape_of(call_3455))) # shape=(44,)
bop_3467 = relay.subtract(call_3457.astype('uint64'), relay.reshape(const_3463.astype('uint64'), relay.shape_of(call_3457))) # shape=(44,)
bop_3468 = relay.multiply(call_3455.astype('uint32'), relay.reshape(bop_3464.astype('uint32'), relay.shape_of(call_3455))) # shape=(44,)
bop_3471 = relay.multiply(call_3457.astype('uint32'), relay.reshape(bop_3467.astype('uint32'), relay.shape_of(call_3457))) # shape=(44,)
output = relay.Tuple([call_3390,call_3440,const_3441,const_3456,call_3459,const_3460,bop_3468,])
output2 = relay.Tuple([call_3391,call_3442,const_3441,const_3456,call_3461,const_3460,bop_3471,])
func_3483 = relay.Function([], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
mutated_mod['func_3483'] = func_3483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mutated_mod.get_global_var('func_3483')
call_3484 = func_3483_call()
output = call_3484
func_3485 = relay.Function([], output)
mutated_mod['func_3485'] = func_3485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3601 = relay.TupleGetItem(func_3483_call(), 2)
call_3602 = relay.TupleGetItem(func_3485_call(), 2)
func_1416_call = mod.get_global_var('func_1416')
func_1418_call = mutated_mod.get_global_var('func_1418')
const_3604 = relay.const([-1.881186,6.156778,-0.197987,8.284586,4.159246,-6.784026,-0.021438,9.421426,-3.875725,2.562616,-0.054286,8.775102,4.490768,-6.807375,1.849872,-0.084962,-4.513681,-4.068159,-8.332949,4.523772,-7.052894,5.039335,-7.962555,-3.336927,9.317448,1.210988,-9.231141,8.634540,3.831966,-2.130378,6.185991,6.738225,-4.572938,-7.705705,9.342123,3.637878,-4.719145,-9.942665,1.012996,6.360179,-2.572984,-8.880057,-0.704071,-1.860365,6.278136,-1.307698,1.202857,-6.602867,4.334018,-0.504951,7.150257,-8.626946,-3.895474,-0.763819,6.871062,-5.334546,9.503576,8.071719,-3.761030,8.092817,-4.690200,8.609818,5.310704,-1.089785,-3.159752,0.881107,-2.752002,1.985034,-0.535070,-4.864926,-3.014155,5.894435,5.305944,3.977701,-1.082858,4.840851,-3.319025,-2.548106,-9.947578,-1.130585,1.677719,-2.346394,5.787892,3.633040,-7.218245,-9.244024,-4.975781,-2.129611,-8.310868,-7.331112,-4.384751,7.694972,-8.703440,7.177724,-9.046211,0.731193,5.529903,6.895686,-1.276726,9.171059,-9.795529,6.963102,3.019858,-8.276472,7.798917,0.173613,-8.212310,-0.245787,-4.208554,-1.880776,5.008448,8.126151,8.713197,6.775236,4.182246,-2.488960,-0.106931,-8.588733,5.284026,2.957001,0.840051,7.881807,-7.739628,-5.390670,2.154502,5.284304,6.690056,0.390265,-0.004197,-7.137969,3.116813,3.068506,-6.457557,-5.150599,7.732376,-6.310033,-9.237704,-1.603358,7.439591,3.400496,0.423424,8.711936,1.528275,-8.269674,5.703596,6.774213,7.034997,5.933712,6.191159,-2.574434,5.371907,7.406952,-9.289446,-2.458240,7.431390,-8.760922,2.254217,0.876713,-3.618577,-8.252458,-6.325246,5.936705,-6.444584,9.343153,-4.258443,-8.985243,-7.493835,6.320556,-4.565173,-6.401192,2.753079,-5.966077,-0.441832,-1.653104,2.027142,-6.017024,-8.846549,-7.961286,-5.677665,-2.806359,7.648974,3.762581,0.570294,-9.181119,-1.030349,8.925550,7.860840,-3.798880,8.831577,-5.836252,5.056827,-9.500023,-9.909551,1.508838,-9.869969,8.463612,-6.043070,3.222299,3.701032,7.112350,-6.939401,-4.735169,3.568600,7.433665,3.285057,2.790106,-8.153568,-7.797790,-2.044036,-9.028093,-2.106949,-4.369213,-0.728456,-7.412802,2.775939,0.830679,-2.405301,4.930444,2.376407,-9.553218,0.412705,4.426974,8.266054,-7.484879,2.713505,-9.157669,0.727050,9.176053,-0.696340,1.965713,5.788093,4.804655,-9.486460,4.201960,4.596483,-1.938651,-0.302280,-2.379788,-3.557630,2.219569,2.936026,5.593468,4.890084,-3.282501,-4.699676,6.212753,9.723825,7.086181,-1.949945,4.870540,-7.712909,-6.327618,6.815474,-1.627154,9.341363,-5.273156,1.695480,0.663366,-7.853846,-5.169546,-2.307391,-0.655583,-3.463822,0.137119,7.903481,-0.617385,9.262150,-0.039297,0.840876,-4.847189,-9.765805,-5.756135,-3.061764,-1.129873,8.331848,7.506782,7.931333,9.475603,5.269436,-2.745939,8.198798,-1.508949,1.978048,-4.254143,9.430105,7.875601,3.819072,1.442774,-5.661700,-2.493455,-2.673518,4.054065,7.758594,0.666027,4.392258,7.745377,-1.722888,1.302746,-7.930872,-1.513120,-5.391131,-1.242262,6.390349,8.298649,0.611041,-5.063255,4.067843,0.144975,-9.827568,9.240155,-7.906326,1.347574,-9.782151,-9.234265,-2.870562,-5.550056,7.550700,-7.200918,-2.667520,-7.781916,0.542227,9.510486,-8.019889,6.364008,1.963018,-1.889040,-3.644223,-6.266119,7.534991,3.520993,-8.213884,-7.027515,-3.489796,-5.450417,2.509020,1.708076,5.321967,7.323146,5.104395,8.218435,-7.279212,6.124310,0.881529,0.222658,-8.545235,-8.395751,3.492058,-1.829324,3.850754,-7.337238,1.736989,9.009378,2.520238,-4.324628,5.172996,2.081163,-0.641695,-0.761925,5.614682,-0.621972,1.377335,-7.953532,9.499353,-7.990659,1.934372,6.360125,-2.075164,-0.252171,-1.035070,5.816418,-3.680279,2.664367,9.000866,-2.231072,8.550541,-7.173660,6.507236,3.786614,-2.301215,7.204996,4.746690,-9.057287,4.381729,8.825719,-6.879094,9.213881,9.242081,2.358081,1.365780,1.111271,-5.187851,5.941052,-9.687177,-3.842116,-5.681262,5.893112,9.820364,-6.437984,-3.828099,-1.830098,-7.266002,1.915428,-8.543146,-0.109918,-5.224879,-0.571805,6.602045,-6.055692,1.147800,-9.655949,-7.212213,7.229007,-6.804176,-4.254247,1.324871,5.723705,-0.018280,2.670995,9.879544,-9.773393,-4.239956,-6.584886,-2.123920,3.741934,2.880164,-7.021181,3.718612,3.954195,2.697123,-4.081024,-0.727935,-7.107558,-6.225897,1.478664,9.212642,8.745328,5.805765,1.579141,-4.872700,4.265502,8.926807,2.782437,3.250443,-0.782248,-1.435234,6.239524,-6.749441,-3.170235,8.716079,-2.367109,7.493075,-0.277747,5.595953,4.355262,4.397555,2.529011,-0.937493,3.464559,-7.057552,-3.533961,4.884195,6.765871,3.735559,-9.695532,-3.629010,0.753410,9.445673,-0.584273,6.759278,-3.603191,-7.049244,3.351699,6.753471,-4.877545,-6.436465,-5.577478,-0.212588,4.692674,6.586689,-4.929393,-6.016206,-7.437758,-6.606273,-5.973677,-2.576040,-0.535707,4.824554,6.809077,-8.049345,-4.582337,-1.763390,-4.775168,-7.403166,-2.343010,-7.225121,7.082139,-6.992078,-6.708932,-6.328308,-5.865727,9.513689,0.201042,7.103770,7.370433,-5.118367,-5.630967,9.627367,5.263043,7.264313,3.482534,0.988916,-9.535527,-8.158942,-1.303339,-6.684022,0.325909,8.598845,-3.952222,7.308676,-1.391690,0.267603,-0.720180,-6.148418,-9.952487,8.539906,7.029657,5.770288,-3.020022,-6.645326,-9.421129,-4.140123,-5.488049,6.746532,-2.216535,8.869510,-3.639157,4.343781,9.578315,7.604689,8.351121,8.314106,8.267007,2.991420,1.025315,-7.708610,-9.037924,3.016439,-3.754608,9.707870,-2.967624,1.164975,6.639401,6.706590,-6.030788,-6.300982,-5.909823,-5.423976,-8.004423,8.273290,0.769441,-6.077883,-9.126448,5.250411,-5.929765,9.210543,5.282429,3.070187,-0.831068,3.276500,6.268837,-9.016558,1.759785,4.080459,-8.440962,1.727497,-0.286547,2.574123,-5.678210,5.578859,9.656396,8.625180,-7.359409,7.009759,4.418873,4.262299,8.365368,-3.790902,7.942282,-4.663999,7.110601,3.583972,3.045707,-5.735600,5.919029,-6.745334,2.956315,1.205874,2.220398,-2.650831,1.447804,2.699569,8.396638,-3.533539,-3.491577,2.075505,-2.359250,1.904853,0.850896,3.056550,-1.244611,-6.401273,6.899749,4.981166,-3.451129,-7.960863,6.269776,-7.070531,3.634791,1.038961,-5.063324,3.490609,-6.678314,-3.571221,6.391351,-5.642999,-4.666915,2.919272,2.614173,-8.906317,-7.177600,6.925678,-2.820679,-9.372288,-1.026851,2.966587,-1.592949,-9.432659,-5.303339,9.758155,-9.424710,9.674174,-1.896281,5.422779,8.681410,1.181473,-1.619258,2.645697,1.498236,-8.407028,-8.430961,-8.652814,4.881444,7.047137,6.904054,8.992112,-5.786082,-3.844967,3.620111,-1.420644,3.216882,-9.374744,6.081874,6.575299,9.636490,-3.381305,4.789871,2.174528,8.433538,-9.597595,5.247655,0.255421,-5.772101,-0.072632,9.448346,-9.059780,-2.513460,-6.239289,4.261081,-8.173686,2.820938,-8.781102,1.717779,7.150933,-9.015360,-8.735550,7.234149,2.925586,7.528918,7.856815,8.689290,-4.998039,-7.157535,5.773595,-1.734004,9.254375,-1.063351,-6.248834,5.059732,1.013029,-9.143309,4.679641,9.513768,3.529615,-0.445580,7.041844,3.713160,1.983502,-7.618811,9.117010,6.435155,-9.423991,-1.160657,1.561397,3.114531,4.826495,-4.815680,2.292940,8.561339,4.169614,-0.760587,1.801693,-7.787713,3.813851,3.143412,7.899316,1.860628,7.732781,-9.605785,1.352521,6.144785,7.988621,7.153268,6.832984,-4.508722,-1.917543,6.045551,-7.626069,0.078328,-8.028481,-2.835005,9.747790,0.693640,3.836451,0.926097,9.253002,7.304643,0.922097,-5.507051,4.550016,3.972462,9.236274,-6.188198,-1.774094,5.251172,-8.064495,-2.776734,-1.709907,-8.271464,5.522482,-3.618174,-0.667043,-6.072710,9.073909,-0.239690,8.693334,-2.398035,-9.677176,-9.828665,-7.871879,5.767009,3.739091,-7.097749,-7.065614,1.752295,8.129028,-2.246731,4.836504,9.182426,7.818890,1.351919,1.860877,1.678378,-8.887258,-8.358934,-2.352397,-0.048662,7.920833,5.528516,7.731474,0.750067,-1.044847,4.178252,-5.866238,-3.273351,-4.638223,-3.146643,-2.666675,-0.085196,9.605803,1.469217,-9.239394,7.709196,0.345600,1.652048,9.742125,3.711863,5.348473,8.023492,1.161982,4.312545,-1.854391,4.549318,-0.337623,6.444895,-0.654183,5.122357,-7.806008,-9.198614,4.877632,4.113107,-6.328096,-4.471451,2.385187,-3.162906,-0.660355,-3.006091,3.999595,6.064396,3.650630,-7.176748,4.268806,2.811617,-6.919760,0.188568,1.073153,7.073807,4.601107,6.285299,7.428675,6.726761,-1.214269,-1.296520,0.470968,2.605554,0.901784,-3.370744,6.970873,-1.142644,8.779364,6.083240,-6.833649,8.227828,-4.679090,-8.943041,-9.677163,4.387310,-5.937550,-6.935949,4.479672,-6.749005,5.042262,-0.299625,-4.753204,1.639368,-8.064240,1.292043,7.324244,5.676869,6.506048,5.434331,8.174674,-2.347090,8.543779,-7.108150,-3.302061,1.845003,6.862461,-5.570268,-0.646956,-7.078228,-8.196875,-5.530042,-2.023531,-5.809048,9.335446,3.864880,-0.174082,-2.202524,-7.817207,6.984494,-6.202972,2.091943,-1.424229,0.409679,1.846341,3.650862,7.980823,8.583394,3.703348,-9.782894,7.366886,-8.297241,8.847511,2.079483,2.503623,9.447411,8.912619,9.145035,-1.986875,0.642549,-1.519324,-9.985246,-8.339801,0.284997,2.174205,-0.680702,4.608883,-6.799849,-8.824676,7.646875,-5.617737,6.909853,0.167540,3.103805,6.473333,6.720657,-3.632656,-9.293354,8.466468,-7.773182,0.393821,3.821346,3.931458,5.329011,-4.393762,6.957931,8.623340,-6.747967,-5.023419,6.352477,-7.324355,5.185286,-0.060340,6.086480,-8.842751,-7.582083,7.838910,-6.979884,8.223871,-6.481601,-8.964613,7.676719,-8.791751,-8.667853,4.912863,-7.047534,-2.020151,-1.722068,1.980364,-7.006128,-8.700806,2.972892,7.110035,-0.305097,-5.825846,-2.727411,1.117262,-1.788552,9.843994,-4.100758,-4.941686,8.363510,-6.953932,2.791234,2.871287,9.118509,-0.865985,0.354490,5.998731,6.881215,-6.893472,-8.803012,2.239584,5.614403,-2.320149,3.113614,9.822059,2.167920,8.124641,7.844550,9.441908,-2.141328,-1.069880,1.983040,3.204071,3.033918,-9.447637,7.927646,-3.579836,-3.779334,-3.313956,-9.215867,-4.123531,-6.100651,-9.393406,7.632627,-8.114525,-9.018489,5.617361,-9.263625,-8.048942,8.269058,-0.714111,-3.206903,5.492144,6.986326,-0.885930,6.514159,9.643675,-2.982442,-1.988838,7.826158,7.337170,8.854660,2.855731,-3.603052,2.316184,-5.771776,-4.782062,-7.496725,-1.598324,-7.047619,8.457955,0.446250,1.084560,5.922330,7.193819,-4.961372,-7.598630,-5.849701,-8.994206,1.918823,-4.893780,0.069385,-2.301276,-9.517721,8.861924,8.858690,7.836765,6.184706,3.545832,-1.010171,-4.193561,3.840476,-5.885205,-1.622222,-6.834320,-9.708157,-4.836338,-4.480955,5.856618,4.122583,5.845074,-6.779741,1.040824,4.194310,-5.613604,-3.838350,-0.600830,7.168589,8.695850,8.022206,9.196534,-7.887033,8.926524,-6.895865,1.377766,6.240549,-3.267077,4.793456,-5.393135,-7.672204,-9.022592,1.461669,4.499044,8.697743,-1.790325,-3.000181,-0.127582,9.543752,8.495921,8.177405,8.213848,6.419198,-7.732570,-1.748604,6.026777,0.835126,2.247753,2.856507,6.982531,0.366989,2.664769,1.378257,-2.626146,-5.939436,-9.958230,-3.129972,-1.490993,2.505226,2.722330,6.337215,4.183697,-2.352314,5.769875,8.687105,9.200296,3.681922,-3.264545,-9.983101,2.084451,4.211831,-3.011633,-9.071017,7.304555,4.037699,9.864285,-0.785699,8.078919,2.208648,-9.459505,2.913990,4.813877,-8.399714,7.840250,-4.795420,5.343254,-3.894447,0.318692,6.708115,6.934504,7.796055,3.869906,8.043680,8.861419,-6.204832,5.636820,2.643321,-3.171960,-1.695900,-4.718892,-4.787514,-1.135381,-3.445383,7.501578,9.745058,-9.047004,7.951372,-0.989277,2.346312,0.516250,3.551903,3.377546,8.332978,-6.234497,-4.857960,-4.640806,7.567996,9.667941,7.010489,3.329378,5.849226,4.940090,5.523482,9.213479,4.024567,-5.627733,0.344415,7.961778,9.246764,6.905667,0.080346,4.286602,-8.063603,-5.210992,7.287940,-1.116442,5.728503,-7.856999,8.563583,6.194042,-1.699333,2.959575,-5.166377,2.572199,9.582377,3.079025,-8.209445,2.745002,7.734681,-9.985629,7.318649,-8.413806,3.732725,2.834723,-8.113200,0.352591,4.527550,6.154428,-7.701602,0.739306,7.694557,-7.488549,1.620073,-4.317927,6.667180,-0.927745,-3.307691,5.017728,3.729780,-4.737292,-2.304244,-9.583231,2.288016,0.691263,-1.991730,0.384030,8.957061,-8.742327,2.700109,8.936018,8.437669,3.273259,-1.556499,9.362110,5.757431,-2.553561,-5.971805,7.771920,-7.588025,3.121415,-7.590096,-6.847161,-2.682022,-5.906069,9.448732,-4.220896,9.578864,-6.121183,-3.781896,5.485239,-7.491899,1.975496,9.467259,-5.901845,9.934740,-6.270895,-7.006629,0.148216,6.924209,-7.641631,-3.355484,-3.422499,-3.895051,9.294960,-8.932367,-5.275705,-0.883110,8.426653,3.106471,4.339978,3.537995,-1.465669,-3.200319,-7.885920,5.212702,5.452017,6.552602,-1.326073,-7.707326,3.164830,-0.310855,1.316055,8.924680,-6.580352,-3.387050,-4.199006,-7.089333,1.004660,-0.799218,-1.868141,-4.984627,8.253576,9.101657,7.826722,-4.453123,6.546365,0.210320,2.930454,6.565902,4.653347,-4.186715,-0.200552,-4.394926,5.197117,7.574917,-9.070804,1.961004,-4.239712,9.484449,9.454402,-7.087553,9.125811,2.562191,-4.132689,-8.065392,4.166960,0.619019,7.052486,9.824726,5.498460,4.975293,2.638650,6.964618,8.552613,9.284441,-0.845310,6.584763,6.382147,8.538733,-5.514831,1.166501,-8.547230,4.879131,-3.149234,-9.778374,1.940090,-9.055796,2.689919,-2.485139,-3.001409,1.365596,3.659021,-1.952174,2.025241,1.306716,-4.295351,5.877449,0.501406,-4.930356,-8.032523,9.724454,-5.994143,-1.518198,-3.359227,3.062282,-4.744425,0.447171,4.096010,0.684207,3.445399,-5.376539,1.095044,-7.852752,-2.051425,3.977546,-5.207314,7.719244,-1.487459,-8.921716,-8.307944,2.472005,-9.546327,0.139846,3.821023,-6.118398,9.858460,-0.901406,2.020892,1.245489,2.766221,-2.263130,-9.282272,7.119012,8.806666,3.401741,7.340367,-6.827458,0.814776,4.159351,-8.637748,-7.396268,4.847911,4.132570,7.864531,-9.341589,0.648783,-8.834863,-6.479357,-1.247090,0.271886,-6.166001,-3.555668,-2.277384,-2.812095,-2.517135,-3.576667,-7.383483,5.032801,-6.380452,-3.019107,-7.334612,6.385495,3.497411,-8.043605,8.716647,1.932589,-8.154821,-7.321938,-9.453236,-2.132916,-9.010406,3.634226,-5.690999,-1.035476,3.040924,-6.906677,-0.392182,5.432723,6.106710,9.445077,8.013231,-5.029549,-7.945695,6.573593,6.930605,-2.419454,-8.488751,-5.810808,-8.913137,6.992591,-1.709556,8.255693,7.630639,-6.285506,-7.179035,7.018962,4.927558,4.737527,-0.858803,-1.317470,8.538411,4.515829,-7.470030,-2.254900,-8.196817,-8.563295,2.547891,1.470247,-5.359137,-9.470696,7.264914,8.132358,7.710497,2.717383,0.013998,-2.996207,-6.385420,-7.800832,5.867153,3.393993,-8.704261,-4.003943,-1.618174,-6.991722,-8.596104,4.619403,-2.217151,-9.440613,-0.124056,9.986691,1.696616,-1.451802,-0.304160,-7.150536,6.712703,5.468092,2.239518,-5.356255,-8.245767,4.295298,5.620269,-8.155726,8.474711,5.094449,-3.738140,6.591208,-3.869848,2.455485,-9.005914,3.920615,-6.401495,9.988110,-5.803452,7.124145,-2.188135,9.384250,4.724474,2.522321,-3.949716,-3.278967,7.913428,-4.100719,6.860866,-5.532788,6.524339,-9.077977,3.461428,-1.046763,1.187237,-5.334467,-8.080479,8.387077,1.174163,-0.402386,8.887172,0.779351,-9.919979,5.667390,7.512181,1.878273,0.338078,-8.330376,0.743119,-6.970214,-5.068504,-6.257596,0.579284,4.771645,-1.786247,-0.530448,-2.185446,-2.611972,-3.281297,8.270751,-9.128518,-6.219256,-0.446198,-2.786118,4.071061,-0.308165,0.768413,-0.069206,-6.131372,0.396780,8.605116,-3.297048,5.719071,-2.763799,-9.978055,-6.579496,-8.372023,-7.022440,5.389458,-5.890793,-0.681609,8.071658,0.471363,-8.722911,5.067613,-2.420621,2.118106,-3.184473,-1.954931,-2.959075,-7.599749,1.870339,-3.063979,3.584417,-2.530619,-4.589323,-4.664756,-9.133563,-4.099540,4.309779,-5.400745,-8.267522,5.332593,9.489402,-5.282068,-9.612900,-0.919058,7.228549,-3.724298,-2.499255,6.045422,9.945160,-9.575267,8.468764,-2.413715,-9.692620,0.135480,-3.311716,-4.120765,-8.208398,-7.802633,7.693868,-0.585755,5.247688,-8.471415,2.318661,-5.131401,2.398721,-2.245323,3.655919,-7.355631,7.306295,9.604901,-4.557722,5.010896,-5.061904,4.999362,-1.939251,-4.609347,-6.744485,-5.214496,-4.898381,-3.366476,5.808729,5.601210,1.314756,2.841552,2.726872,6.145635,-5.545349,-1.350501,-2.562673,-3.894684,4.104565,-7.270587,9.440871,0.322886,2.238400,-5.331653,-5.509193,-2.420723,3.373712,-3.053867,-1.594024,-7.470946,3.966524,3.434056,-7.421831,-6.311929,-7.084840,-8.105641,2.769986,-8.373431,4.777255,-6.315612,-1.795669,-3.134871,-2.782311,-6.527913,-2.274764,1.603857,6.816965,6.786471,-5.322113,7.043293,-2.292842,9.165851,0.597753,-1.670906,-9.177309,-4.971933,6.331831,-9.404807,0.808655,-9.842007,6.077794,9.914766,-9.453637,-5.196946,4.291160,-6.290001,1.434778,0.798198,4.513913,-6.852273,-7.788823,-8.245764,8.015727,7.180950,3.350293,-8.249447,1.128705,4.436712,-9.199615,9.290128,9.206918,9.574134,4.538633,1.661348,-0.797484,-8.665217,-9.449201,4.821972,7.096365,-5.386858,-1.141695,6.540583,7.654166,-1.326404,-6.831169,3.259186,0.495261,2.617060,7.481771,3.983754,-7.168654,4.951093,-8.184554,-5.097767,1.073024,-1.355307,0.848655,-4.953273,-3.452162,-3.235797,-5.968495,-8.145410,-8.654918,-4.807715,-6.004196,6.216962,7.993353,7.718852,2.686825,8.177921,-4.598181,8.802246,0.394939,-3.356079,-4.153799,-2.155374,-7.865863,-0.407041,-9.435531,7.268731,-2.641765,6.732671,2.928663,3.500146,-3.798838,5.278650,-6.551727,-2.451423,-1.511689,4.136256,2.578927,3.509871,-3.499429,-7.005666,-4.450277,5.428596,6.152970,-9.771935,7.500565,4.971769,-5.999057,-9.470871,7.161247,-8.283230,-9.901722,-5.887284,-2.015882,8.291427,1.898995,1.627712,0.444226,-5.943391,-3.682746,3.911080,-3.568420,2.952221,-8.887097,4.374926,6.021262,6.932403,9.601817,8.725649,-3.503832,-9.251242,6.904667,1.927745,-1.849614,7.953592,2.814860,-5.811436,2.354757,-1.164344,-0.623001,-7.844396,-6.094351,5.610517,3.905808,8.733494,0.705337,-1.842000,9.285090,-2.507585,5.352784,-6.321474,-7.651570,3.980283,5.948269,4.184272,0.212091,8.207838,-2.900090,-3.023891,9.679750,6.491436,0.288085,6.785344,2.315181,8.605528,9.037542,6.649462,-4.345802,-1.725909,8.306437,1.061887,0.795256,-3.105101,8.935496,4.362185,-1.573376,-7.143025,-5.787560,-1.978650,4.976870,1.108613,-3.318193,-0.111465,6.146236,-7.806703,4.787058,2.849298,-4.427545,-4.150653,-7.853321,-4.006113,-3.548339,5.083253,9.652339,-9.013187,5.452511,1.805569,4.647693,-3.416938,-8.390490,3.930489,9.667377,-8.430608,-2.373775,3.213613,2.620004,0.010474,-6.925957,-1.763227,-0.308403,-0.629193,-7.741055,1.692334,-2.983473,-8.005631,-6.926791,-7.585219,5.814128,7.111969,8.760942,-7.858023,3.633272,-0.819272,-4.402249,6.610846,2.451955,-0.702517,0.336289,6.020173,-7.062349,0.599855,5.453421,-5.905977,-4.662031,-3.178499,-1.855363,-3.822783,-6.140465,-0.511343,-1.411047,-8.468517,6.447347,1.758694,-0.620206,-9.038140,5.915650,-4.429388,5.783359,1.256052,-0.165575,6.905308,-3.974931,-8.515665,-1.521580,-0.912967,-8.101249,9.949557,7.999662,4.445786,6.368394,-7.305685,5.154728,-2.570353,5.827093,-7.328411,8.972878,8.463921,-6.023450,3.205015,-2.096003,7.519604,-8.255349,-7.357964,0.494471,6.398091,-3.057509,1.778788,-8.097935,-3.955059,1.884333,-9.632736,7.103974,6.663169,2.028762,-3.207065,-0.089894,0.084101,-1.373180,-1.893770,2.047094,4.751906,-3.895804,9.492868,-5.221191,-6.158724,-7.865727,-9.713862,-8.449818,4.536839,-6.176089,6.007584,9.443233,8.065406,3.733114,-4.120817,-0.871507,-1.115280,-9.973767,9.867000,4.641461,4.478360,-2.521299,2.768094,4.266826,9.253168,2.280810,-9.078211,6.138480,-4.481947,4.942720,5.924107,-0.590298,-9.311033,5.819313,6.851960,-0.643859,-6.337765,1.270254,0.967806,8.931996,-5.486825,-8.256538,4.415504,3.205459,-3.507112,-0.805895,-4.242995,4.194092,-2.601110,-1.161835,1.332963,-4.777641,-4.916067,-9.112321,-7.611985,-9.768384,-0.512891,5.616631,-3.824519,4.852460,6.443057,-5.296741,4.840658,7.138515,-1.804882,0.768493,-6.502967,3.298121,3.274649,-2.369806,2.044235,5.785994,9.502082,-1.760633,8.914884,-8.868998,6.414923,-6.373058,-9.651025,-2.367457,0.887260,4.423685,1.057721,-2.256455,-8.517903,-2.845339,2.789411,5.019382,-0.130652,-1.393678,4.829712,6.254871,3.969294,5.868616,3.378760,-2.715145,-8.590188,-5.286838,1.394334,-2.268932,4.939178,2.939518,-6.175060,-7.596212,-9.646921,-2.852948,5.658147,7.858474,5.566133,4.765543,-4.098879,-1.074975,9.793537,9.869720,9.774225,-9.237634,-6.345830,-2.364202,-5.784550,-9.593934,1.634513,-2.185546,-6.094128,-9.346967,2.159735,-1.102106,9.869326,-5.147731,1.155428,2.173133,7.852352,8.120549,-0.545856,1.637562,-9.773354,3.593940,-3.597890,3.574983,6.576866,3.791514,9.023740,4.372422,-5.536427,6.935877,0.942669,-9.592156,-2.244278,-6.318445,0.283803,4.614475,0.146712,-4.743042,-2.414971,-5.010861,8.439056,-0.902328,8.842627,9.404750,5.272881,6.486897,-8.565759,-2.127277,-7.849626,3.060918,-0.977768,6.475836,9.900345,8.748275,1.733093,-2.446861,5.704532,7.434767,-7.371734,-3.659290,6.632986,-6.594857,-4.522486,-6.309701,4.417370,-9.588561,-7.160874,-3.240359,4.823301,-8.538895,4.211152,9.577100,0.110975,-7.435319,-7.681990,-6.786570,-3.371430,1.919521,7.209025,8.543317,4.214086,-1.993495,-7.982618,0.671632,-9.155124,-2.414676,-6.208942,3.107074,6.843193,4.511070,-7.094572,7.441769,-6.892442,6.528469,4.544632,6.055168,5.146367,-7.177659,-8.200892,2.464576,8.388867,-5.170295,-9.052863,-3.756633,3.093507,0.432310,9.113599,1.406067,9.318746,2.252836,3.780220,3.500907,-4.494873,-4.209425,9.600833,5.050511,-3.991954,7.773704,4.487796,-6.457230,6.132348,5.333558,-5.858581,1.002553,9.999972,-2.178425,8.847524,9.086204,-7.842606,-5.785529,-9.288994,-4.024304,9.482149,6.504562,4.282481,-5.065328,3.523284,2.123426,-2.234724,3.394761,3.410228,-3.570366,1.259471,-2.253771,-7.330543,4.649135,3.970231,5.991472,7.734499,2.509622,-0.059287,-3.316554,6.661542,4.296923,-0.172503,-7.107857,2.771695,-3.233479,-5.739197,-3.426371,2.456988,2.157168,0.387532,0.734817,8.807613,-1.407575,-9.958351,4.990625,-2.564653,4.335726,6.413312,5.011256,3.876203], dtype = "float32")#candidate|3604|(2240,)|const|float32
call_3603 = relay.TupleGetItem(func_1416_call(relay.reshape(const_3604.astype('float32'), [16, 14, 10])), 0)
call_3605 = relay.TupleGetItem(func_1418_call(relay.reshape(const_3604.astype('float32'), [16, 14, 10])), 0)
output = relay.Tuple([call_3601,call_3603,const_3604,])
output2 = relay.Tuple([call_3602,call_3605,const_3604,])
func_3620 = relay.Function([], output)
mod['func_3620'] = func_3620
mod = relay.transform.InferType()(mod)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3620_call = mutated_mod.get_global_var('func_3620')
call_3621 = func_3620_call()
output = call_3621
func_3622 = relay.Function([], output)
mutated_mod['func_3622'] = func_3622
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3628 = relay.const([[[-1,1,-7,-5,-7,5,3,-9,-7,-6,-10],[-5,-6,7,7,7,-2,-1,1,6,-2,-1],[10,-6,4,8,-4,-8,7,8,3,3,6],[-6,1,-6,-3,-10,8,8,7,-8,10,-3],[1,-2,-1,-2,10,-5,-10,-5,-7,-5,-2],[-8,10,10,-4,-8,6,-1,-6,3,3,-8],[10,-7,2,-3,7,-1,-9,-9,-4,8,-9],[-9,4,-1,-2,3,6,-9,3,1,3,-7],[3,-7,-2,-10,-4,6,-1,-8,-7,6,-10],[-10,-7,1,4,-4,3,-5,6,6,4,-1],[-8,-9,7,-8,10,-10,-2,-9,-8,-3,-4],[-7,-4,2,2,5,2,7,-1,6,5,-8],[-6,1,-10,8,5,-6,-6,-8,-4,10,-9],[5,4,-1,9,5,-8,3,3,4,5,-8]],[[2,1,1,2,-10,1,-2,2,4,7,6],[-10,1,8,5,7,3,3,-1,5,-4,7],[1,-7,9,-6,4,-3,-9,-1,8,-2,-5],[-7,10,10,-10,-9,-6,-7,10,9,9,-9],[6,5,-7,7,9,-10,5,2,9,-8,8],[2,-9,2,-7,-8,-8,-7,7,-6,-7,5],[8,-9,9,-2,5,6,6,-1,8,6,-2],[2,-6,-8,-7,-4,10,-4,3,7,1,-1],[1,10,1,7,10,5,-10,-8,5,3,-9],[6,2,-1,9,10,4,-1,-7,-10,-10,4],[7,-6,-7,-8,4,8,9,7,-1,-10,-8],[-4,1,-1,-1,10,8,-10,5,-9,2,-4],[-9,1,-7,-7,-3,-9,6,-9,4,3,-7],[5,1,-10,-3,7,5,-2,-10,9,-1,-2]],[[-10,-4,-10,6,-1,7,9,8,4,-4,3],[3,-8,-9,-1,-5,-1,5,5,-7,6,-10],[-5,-7,-2,-8,-10,2,-3,6,-1,-5,10],[-4,-3,3,8,4,-10,2,5,-10,-9,10],[3,-6,-7,-9,-2,3,-5,-7,-10,6,-4],[-3,-8,-2,3,-1,-10,-1,9,-3,2,-8],[-2,1,8,1,8,10,7,5,6,8,-4],[-2,-10,5,2,-10,10,6,9,-7,3,2],[-9,-10,10,10,9,-6,8,-1,-7,-7,-2],[-5,2,7,1,-3,-6,-7,3,2,-1,10],[-2,-2,-4,7,1,7,6,-7,3,7,-5],[8,4,-1,-10,6,4,2,6,3,1,-9],[4,-4,-7,10,7,-1,8,8,7,-10,4],[10,-1,-7,3,-9,-3,-7,4,-4,3,-2]],[[1,1,-3,-10,2,7,5,6,-2,-6,-6],[5,10,10,7,6,-1,-6,7,3,8,-1],[-4,2,1,-10,2,-8,-9,6,2,3,-9],[2,-7,-3,5,-9,-2,6,8,10,-3,2],[9,-7,-10,-6,1,4,3,4,-5,6,3],[-1,-7,-3,-1,4,5,-3,-4,-3,-9,5],[-8,9,-4,-9,6,-2,-10,7,1,1,5],[-10,-5,5,2,3,1,-3,6,3,-1,6],[9,-3,5,6,-8,-10,-1,-4,-7,5,8],[2,-8,-7,-10,-10,-6,-1,7,-2,6,-9],[-9,2,-1,-3,-2,6,-9,-1,-5,6,-4],[-4,-4,9,10,-7,-2,-4,-5,-5,-1,-9],[1,7,-2,7,2,8,-10,8,-4,1,-3],[10,-4,-4,-3,5,-4,-10,-9,-4,-10,9]],[[-1,2,-3,3,1,-5,-8,2,-4,5,-1],[-6,-4,3,5,6,2,-3,-4,-10,-2,10],[4,3,-10,7,5,-4,-4,-5,-3,-6,2],[10,8,10,7,-1,-1,10,-3,3,-8,9],[5,2,-8,1,-8,5,-2,-7,5,9,-2],[-9,4,5,8,8,1,-3,8,8,-6,-3],[7,5,-8,10,-5,-5,9,-3,-5,4,2],[-2,1,8,4,-4,-3,-3,-7,-3,9,1],[9,9,-6,-9,-8,9,-2,7,-10,6,-3],[-8,-9,-3,10,-8,-10,4,-10,6,-5,-9],[4,2,-8,9,5,-4,-8,-5,-10,9,10],[6,4,7,-9,-6,-4,-8,9,6,7,-10],[-6,5,-8,6,8,9,5,1,4,-6,-10],[-3,-2,-2,-10,3,-7,-3,-5,-6,-10,2]],[[1,-9,5,-5,8,3,-10,8,-7,-7,-3],[1,1,8,-2,-9,8,-10,-1,-7,5,-10],[2,5,1,6,-4,2,6,-7,10,1,-1],[-10,-6,-3,6,-5,3,10,2,10,2,-1],[9,7,1,-7,1,-9,6,-7,7,-3,-2],[6,8,1,-7,-10,-10,8,-5,8,-4,-2],[-8,3,2,8,10,9,-8,-1,5,-3,-6],[-8,6,8,2,-2,-8,-8,4,6,7,-3],[-10,-2,-6,9,6,5,-3,3,3,-6,4],[-3,9,2,7,-5,-10,1,1,-7,7,-8],[5,6,9,-8,7,1,1,3,7,-6,-4],[2,-8,2,-1,6,4,-1,-3,5,-10,-7],[10,-2,8,3,-6,-7,3,10,10,7,7],[8,-9,-1,1,-2,7,-7,4,7,4,4]],[[3,-9,-9,6,4,-7,9,2,7,-9,9],[-1,6,5,-2,-5,-5,8,3,-2,-10,-2],[9,8,-9,2,1,-1,1,-6,6,-8,8],[-5,-3,-9,-7,1,4,-4,6,-1,9,-3],[7,-3,-3,-4,-8,1,7,4,3,-2,7],[-10,-3,-10,-2,-5,4,-3,-1,-7,7,8],[-10,-2,8,-9,-3,7,-9,-10,-2,1,-5],[1,3,-4,-8,8,5,-10,-3,7,8,-2],[1,-8,-9,8,-5,-1,-9,-9,-7,4,7],[4,-4,8,5,1,-5,10,1,-9,7,5],[7,2,2,-6,1,-1,-3,9,2,-5,-2],[-3,2,-7,4,-2,5,6,9,8,-4,-5],[1,-6,-5,-10,-5,-9,-6,6,10,2,-2],[-5,-10,1,4,-8,1,8,4,-2,-10,8]],[[9,6,9,-7,6,-4,-6,8,-2,-3,-2],[-8,8,7,-2,3,-8,5,9,-10,3,-9],[10,9,8,2,2,6,1,7,10,-9,3],[8,3,6,2,6,-5,-4,6,2,-6,-9],[4,2,-8,-4,2,-2,8,2,-5,3,-5],[2,-3,-1,-5,-5,8,4,-8,-8,8,5],[8,-7,-10,-3,-7,8,1,8,2,4,-3],[-8,5,-1,-6,1,6,8,-10,8,-8,-9],[8,5,-5,9,-7,8,3,-5,6,4,5],[5,-5,-5,1,-3,5,8,7,7,6,-6],[-5,-9,-8,-2,-9,10,-3,-6,-1,5,7],[4,-3,-5,-6,-2,-3,-3,-6,-6,3,-8],[1,3,2,-7,-1,10,2,5,-8,1,9],[-4,1,9,-6,-2,-10,-8,-1,9,6,8]],[[-9,-7,1,10,-6,-5,6,10,-3,-10,5],[5,-3,-10,8,-6,-4,-3,5,-6,-2,5],[-7,2,7,-4,10,-2,6,1,-1,-10,-3],[3,8,6,-10,-10,8,-8,-5,-9,2,9],[3,-3,-8,3,-7,9,4,7,-8,3,-10],[3,5,-10,3,-6,-1,3,1,-1,10,6],[-5,10,-10,1,7,-5,6,-9,7,5,2],[7,4,2,8,-8,10,10,4,-2,-3,-1],[-4,-8,-4,9,1,-1,-6,6,10,-10,-3],[-2,2,-8,-1,-4,9,-8,-4,-1,6,7],[5,-7,1,-7,8,3,-3,4,10,-1,-1],[4,-9,-10,8,-7,5,8,-1,-10,4,6],[-2,1,8,3,-2,-7,-1,-8,-6,-2,10],[7,-4,-10,-10,-6,-7,-4,-9,-6,-3,6]],[[2,5,-10,1,8,1,4,-2,8,-7,-5],[1,10,-6,10,1,3,-2,-6,3,10,7],[5,-8,-7,7,-8,5,6,2,-1,-10,10],[9,4,9,-8,-7,8,-6,-2,7,1,-7],[3,-3,-4,-3,4,10,4,9,8,4,3],[10,-3,5,-1,1,4,10,-8,2,-5,-9],[4,2,5,-5,-8,-6,-4,-4,-7,-8,-10],[9,-3,1,5,-10,7,-10,-10,5,-2,6],[3,-10,7,-1,10,7,3,5,6,-1,-7],[-9,8,4,6,7,-2,-10,-6,-7,3,2],[-10,7,2,2,9,-6,-5,10,-10,1,-5],[-2,3,9,-3,-3,-10,10,-10,-1,4,-9],[-8,10,-7,2,1,-5,5,-2,9,-3,8],[10,8,7,9,-10,-5,6,1,-6,-4,-7]],[[-6,-9,-4,3,6,10,-3,5,-4,-10,5],[-3,-6,9,9,-10,6,-2,-2,4,8,-3],[2,-6,2,5,10,6,-6,-5,-4,2,6],[10,-10,-7,10,-3,7,9,3,-1,-2,10],[-5,-3,-4,8,-10,8,-5,-10,7,5,3],[5,8,3,-4,-7,2,7,6,5,-4,-8],[10,-1,-3,10,2,6,-3,1,-3,-8,2],[-10,1,-6,8,3,4,-2,-2,-7,-10,-8],[3,2,-2,1,-8,-2,-6,-3,2,4,-9],[3,1,-10,4,-3,9,-2,-10,3,-6,6],[-3,8,-6,-9,9,8,5,-10,-8,-5,2],[8,-10,9,-7,-10,3,-6,-2,-6,9,10],[4,3,7,-8,5,3,8,3,-5,6,3],[-1,-6,-4,10,1,8,-7,1,-7,3,4]],[[-10,-9,-10,-6,-8,5,-1,1,7,-7,-9],[1,2,-8,6,8,-7,-2,3,-9,5,7],[3,9,-1,4,-1,-9,4,7,9,5,-4],[2,-5,10,-3,5,-4,-7,-1,4,9,-4],[-3,3,10,-8,7,4,9,3,9,-1,2],[-10,10,-6,9,9,5,-4,2,-9,-9,2],[-7,3,2,-10,1,-1,4,-9,-7,5,-2],[7,8,-2,9,9,8,-3,-6,-9,1,-8],[-5,-7,5,6,-10,1,1,7,9,7,7],[-10,-2,-8,6,7,-2,6,6,-5,7,4],[-3,-9,6,10,5,-6,6,10,-1,5,-1],[1,7,4,5,-3,1,-1,-7,2,-10,6],[6,9,-3,1,7,3,-1,9,7,6,-1],[6,-9,-9,1,-6,3,4,-2,-2,-10,-3]]], dtype = "uint8")#candidate|3628|(12, 14, 11)|const|uint8
var_3629 = relay.var("var_3629", dtype = "uint8", shape = (12, 14, 11))#candidate|3629|(12, 14, 11)|var|uint8
bop_3630 = relay.not_equal(const_3628.astype('bool'), relay.reshape(var_3629.astype('bool'), relay.shape_of(const_3628))) # shape=(12, 14, 11)
const_3644 = relay.const([[[True,True,False,False,False,False,True,True,False,False,False],[True,False,True,False,True,False,False,False,False,True,False],[False,True,False,False,True,False,False,False,False,False,True],[True,False,True,True,True,True,False,False,True,True,False],[False,True,True,True,True,True,True,False,False,False,False],[False,False,True,False,False,False,True,False,True,False,False],[True,True,False,False,True,False,True,False,False,False,True],[False,True,False,True,False,True,True,False,True,True,False],[False,False,True,False,True,True,False,True,False,True,False],[False,True,False,False,False,False,False,False,False,False,True],[False,False,False,True,True,False,False,True,True,True,True],[False,True,False,True,True,True,True,False,True,True,True],[True,True,False,False,False,False,False,False,False,False,False],[False,False,False,False,False,True,True,True,False,True,True]],[[False,True,False,True,False,True,False,False,False,False,True],[False,False,True,True,False,False,True,False,False,True,False],[False,True,True,True,True,False,True,False,True,True,True],[False,False,False,True,True,False,True,True,True,False,True],[True,True,True,True,False,True,True,True,False,False,False],[True,True,True,True,True,False,True,False,True,True,True],[True,False,False,True,True,True,True,True,False,False,False],[True,True,False,False,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,False,False,True],[False,False,False,True,True,False,True,True,False,False,False],[True,True,False,False,True,True,False,True,True,False,False],[False,True,False,True,False,True,False,True,False,False,True],[False,False,False,False,True,True,True,False,True,False,True],[True,False,False,False,True,True,True,True,True,True,False]],[[True,True,True,False,True,False,False,True,True,True,True],[True,True,True,False,False,True,True,False,False,False,True],[False,True,False,False,False,True,True,False,True,True,True],[False,True,False,False,False,True,True,True,True,False,False],[False,False,True,True,True,True,True,False,False,True,True],[False,True,True,True,True,True,True,False,False,True,True],[False,False,True,False,True,False,True,False,True,True,False],[False,False,False,True,True,False,False,False,True,False,False],[False,False,True,False,True,True,False,False,False,True,False],[False,True,False,False,False,False,True,True,False,True,True],[False,True,False,False,True,False,True,True,False,False,True],[True,False,False,False,False,True,True,True,True,True,False],[True,True,False,True,True,True,False,False,False,False,True],[False,True,False,True,False,False,True,False,True,True,False]],[[False,True,True,True,False,False,False,True,True,False,True],[True,True,False,True,True,False,True,False,False,False,True],[False,True,True,False,False,False,False,True,False,False,True],[True,True,True,False,True,True,True,True,False,False,True],[False,True,False,False,True,False,False,True,True,True,False],[True,True,False,True,True,False,True,True,True,True,False],[False,True,False,True,False,True,True,False,False,True,False],[True,False,True,True,False,False,True,True,False,False,True],[False,True,False,False,False,False,True,True,False,False,False],[False,True,False,False,True,True,False,False,True,True,False],[False,True,True,False,False,False,False,False,True,False,True],[False,True,True,False,False,True,False,False,True,True,False],[False,True,True,True,True,True,False,True,False,False,False],[True,False,False,True,False,False,True,False,True,True,True]],[[False,True,False,True,True,False,True,False,False,True,True],[True,False,True,True,False,False,True,False,False,False,False],[False,True,False,False,False,False,True,True,False,True,False],[False,True,False,False,False,False,True,True,False,False,True],[True,True,True,True,False,True,True,False,True,True,False],[True,True,False,True,False,False,True,True,False,True,False],[False,False,False,True,True,True,True,True,False,False,True],[True,True,True,False,False,False,True,True,False,False,False],[False,False,False,False,True,True,True,True,False,True,True],[False,False,False,False,True,True,False,True,False,False,False],[False,False,False,False,False,True,False,False,True,False,False],[True,True,False,True,False,True,True,True,False,True,False],[False,True,True,True,False,True,False,False,True,False,False],[False,False,False,True,False,True,True,False,True,False,True]],[[True,True,True,False,False,True,False,False,True,False,True],[False,False,True,True,False,True,True,False,False,True,False],[False,False,False,True,True,False,True,False,False,False,True],[True,True,False,False,True,False,True,False,True,False,False],[True,True,False,False,False,False,False,True,False,True,False],[False,False,True,False,True,True,False,False,True,False,True],[True,False,False,True,False,False,False,False,False,True,True],[False,False,False,False,False,True,False,True,True,False,False],[True,True,True,False,True,True,True,True,False,False,False],[True,True,False,True,False,False,False,True,True,False,True],[True,True,False,True,True,True,False,False,True,True,True],[True,False,False,False,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,False,False,True,True],[False,False,False,False,False,False,True,False,True,False,False]],[[False,True,True,False,False,True,False,False,True,False,True],[False,False,True,True,True,True,False,False,False,False,False],[False,False,True,True,False,True,False,False,True,False,True],[False,False,True,False,False,True,True,False,True,True,False],[False,True,False,True,True,False,True,True,True,True,False],[False,False,False,True,True,False,False,True,False,False,False],[True,False,False,True,True,True,False,True,True,False,False],[True,True,True,False,False,False,True,True,False,True,False],[False,False,True,True,False,False,True,False,False,False,True],[True,True,False,False,True,True,True,True,True,True,False],[False,True,False,True,False,False,True,True,False,False,True],[True,True,True,True,False,True,False,False,False,True,False],[True,True,True,False,False,True,False,True,True,False,False],[False,True,False,False,True,True,False,True,False,True,False]],[[True,False,False,True,False,False,True,True,False,False,False],[False,True,True,True,True,False,False,True,True,False,True],[True,False,False,True,False,True,True,True,True,True,False],[True,False,False,True,True,False,False,False,False,False,True],[True,True,False,False,True,True,True,False,False,False,False],[False,True,True,True,True,False,False,False,False,True,False],[True,True,True,True,True,True,True,True,False,True,False],[False,True,True,False,False,True,False,False,False,True,False],[True,False,True,True,True,True,False,False,True,True,True],[False,False,False,False,True,True,False,False,True,True,True],[True,True,True,False,True,False,False,False,False,True,True],[True,True,False,False,True,False,True,False,False,True,False],[False,True,True,False,False,False,True,True,True,False,False],[True,True,True,True,True,False,True,True,True,False,False]],[[True,False,True,True,True,True,True,False,True,False,False],[False,False,False,False,True,True,False,False,True,True,True],[False,False,False,False,True,True,True,True,True,False,True],[False,False,False,True,True,False,False,True,False,True,True],[False,True,True,True,True,True,False,False,False,True,False],[False,True,True,False,True,False,True,True,True,False,True],[True,True,True,False,False,False,False,True,False,True,False],[True,False,False,False,True,False,False,False,True,False,True],[False,False,False,True,False,False,False,False,True,False,True],[False,False,True,True,False,False,True,True,True,False,False],[True,False,True,True,False,True,False,False,False,True,True],[True,False,True,True,False,True,False,False,False,True,False],[False,False,True,False,True,False,True,True,False,False,True],[True,False,True,False,False,True,True,True,False,False,True]],[[True,True,False,False,True,False,True,False,True,True,False],[False,True,True,False,True,False,True,True,True,False,True],[False,True,False,False,False,True,False,False,True,False,True],[True,False,False,True,True,True,False,False,True,False,False],[True,True,True,True,False,False,True,False,False,True,True],[False,True,True,True,False,True,False,False,False,True,False],[True,True,False,False,True,False,True,False,False,False,True],[True,False,True,False,True,True,False,False,True,False,False],[False,True,False,False,False,False,False,True,False,True,False],[False,True,False,True,True,False,True,True,True,True,True],[False,True,False,True,True,True,False,True,True,True,False],[True,True,False,True,True,False,True,True,False,False,False],[False,True,True,False,False,True,True,True,False,True,False],[True,True,True,False,True,False,True,False,True,False,True]],[[True,True,True,True,False,False,False,False,False,False,True],[False,True,False,True,False,True,True,False,False,False,True],[True,False,False,False,True,True,True,True,False,False,False],[True,False,True,True,False,True,False,False,True,False,True],[True,True,False,False,False,False,False,True,True,False,True],[True,False,True,False,True,False,True,True,True,False,True],[False,False,True,True,False,False,False,False,True,True,True],[True,False,True,True,False,False,False,False,False,False,False],[True,False,True,True,True,True,False,False,False,False,False],[False,False,False,False,False,False,True,False,True,True,False],[False,False,False,True,True,True,True,True,True,False,True],[True,True,True,False,False,True,False,False,True,False,False],[True,False,True,True,False,True,False,True,True,False,True],[True,True,False,False,False,True,False,False,True,True,False]],[[False,True,False,True,True,False,False,False,True,True,False],[False,False,False,True,False,True,False,False,True,True,False],[True,False,False,True,False,True,False,True,True,False,False],[True,True,True,True,True,True,False,False,False,False,False],[False,True,False,False,True,False,True,True,False,False,True],[True,True,True,False,True,False,True,True,False,False,False],[True,True,True,True,False,True,True,False,True,True,False],[True,True,True,False,False,False,False,True,True,True,False],[False,True,False,False,False,True,False,False,False,False,False],[True,True,False,True,False,False,False,True,False,False,True],[False,False,True,False,False,False,False,False,True,False,True],[True,True,False,False,True,False,False,True,False,False,False],[False,True,False,True,True,False,True,True,True,True,True],[False,False,False,True,False,False,False,False,True,True,True]]], dtype = "bool")#candidate|3644|(12, 14, 11)|const|bool
bop_3645 = relay.bitwise_xor(bop_3630.astype('int32'), relay.reshape(const_3644.astype('int32'), relay.shape_of(bop_3630))) # shape=(12, 14, 11)
func_1369_call = mod.get_global_var('func_1369')
func_1372_call = mutated_mod.get_global_var('func_1372')
const_3652 = relay.const([5.973671,-3.392613,0.324087,-4.673586,-9.681446,-0.971502,5.213991,4.301136,1.198955,2.113515,-6.024344,2.698929,-2.726937,2.830704,4.251960,1.991949,1.050990,7.243584,-9.529038,-2.861434,7.778042,0.198729,6.068139,-2.364978,6.577261,7.203257,-1.517563,9.682546,-8.279403,-4.377225,4.628693,3.268845,-9.058967,-5.904802,-2.741588,7.916875,3.119377,-8.597928,-2.455406,9.780904,6.491048,1.254813,4.342140,-7.356612,7.682199,8.146474,-2.141266,2.521874,-8.071264,5.116476,0.103179,-4.525554,-2.803358,8.969766,2.750600,-7.447271,2.113106,9.269063,-3.776078,-9.957055,-0.201608,0.946227,-0.628926,2.972718,-9.112687,2.437731,-9.442408,-7.267071,2.856389,0.558863,4.866275,5.226698,2.780556,5.559798,-6.424550,-4.653553,-0.379603,-2.426404,-8.743871,0.439561,-4.227473,-5.373030,-5.237977,0.081988,-2.757614,-7.045234,0.285963,-8.791289,-0.411023,-9.707054,-7.427239,-0.928006,-7.099194,4.095609,-9.807323,6.940628,-5.806602,4.777559,2.653588,-1.511936,9.185944,8.356460,-8.349343,-8.260629,6.562485,5.518449,5.112910,-1.521512,-1.844912,-2.070708,-5.724587,-3.876125,-1.668040,1.732419,-8.205257,2.976973,1.847414,-1.360717,0.786310,-6.098332,-6.832414,-2.559376,8.717718,7.378124,-6.152007,5.380261,-4.294594,7.673125,3.213003,-7.690122,-5.728171,-2.891340,-6.346559,0.678466,3.886588,-4.414197,-7.151069,1.816538,-7.496305,3.274039,-5.652365,6.818077,-1.513624,9.260320,-6.601921,-3.796277,-8.388180,-4.628274,5.899803,-1.966925,6.852512,-5.056497,6.048358,-0.470916,0.948406,-1.611094,-0.966106,-5.124002,1.281448,-1.803455,4.714336,-0.108866,5.439329,-1.379507,8.590233,5.092319,1.564609,-4.699139], dtype = "float32")#candidate|3652|(168,)|const|float32
call_3651 = func_1369_call(relay.reshape(const_3652.astype('float32'), [12, 7, 2]))
call_3653 = func_1369_call(relay.reshape(const_3652.astype('float32'), [12, 7, 2]))
func_2532_call = mod.get_global_var('func_2532')
func_2536_call = mutated_mod.get_global_var('func_2536')
const_3655 = relay.const([10,4,6,1,5,-5,5,-9,9,-2,9,-2,3,2,-3,-3,-9,-8,-2,-1,8,-8,-9,3], dtype = "int8")#candidate|3655|(24,)|const|int8
var_3656 = relay.var("var_3656", dtype = "int8", shape = (8, 42))#candidate|3656|(8, 42)|var|int8
call_3654 = relay.TupleGetItem(func_2532_call(relay.reshape(const_3655.astype('int8'), [6, 1, 4]), relay.reshape(var_3656.astype('int8'), [6, 14, 4]), ), 0)
call_3657 = relay.TupleGetItem(func_2536_call(relay.reshape(const_3655.astype('int8'), [6, 1, 4]), relay.reshape(var_3656.astype('int8'), [6, 14, 4]), ), 0)
func_179_call = mod.get_global_var('func_179')
func_182_call = mutated_mod.get_global_var('func_182')
var_3659 = relay.var("var_3659", dtype = "float64", shape = (44,))#candidate|3659|(44,)|var|float64
call_3658 = relay.TupleGetItem(func_179_call(relay.reshape(var_3659.astype('float64'), [11, 2, 2])), 1)
call_3660 = relay.TupleGetItem(func_182_call(relay.reshape(var_3659.astype('float64'), [11, 2, 2])), 1)
bop_3661 = relay.logical_or(bop_3630.astype('bool'), relay.reshape(bop_3645.astype('bool'), relay.shape_of(bop_3630))) # shape=(12, 14, 11)
output = relay.Tuple([call_3651,const_3652,call_3654,const_3655,var_3656,call_3658,var_3659,bop_3661,])
output2 = relay.Tuple([call_3653,const_3652,call_3657,const_3655,var_3656,call_3660,var_3659,bop_3661,])
func_3664 = relay.Function([var_3629,var_3656,var_3659,], output)
mod['func_3664'] = func_3664
mod = relay.transform.InferType()(mod)
mutated_mod['func_3664'] = func_3664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3664_call = mutated_mod.get_global_var('func_3664')
var_3666 = relay.var("var_3666", dtype = "uint8", shape = (12, 14, 11))#candidate|3666|(12, 14, 11)|var|uint8
var_3667 = relay.var("var_3667", dtype = "int8", shape = (8, 42))#candidate|3667|(8, 42)|var|int8
var_3668 = relay.var("var_3668", dtype = "float64", shape = (44,))#candidate|3668|(44,)|var|float64
call_3665 = func_3664_call(var_3666,var_3667,var_3668,)
output = call_3665
func_3669 = relay.Function([var_3666,var_3667,var_3668,], output)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
call_3693 = relay.TupleGetItem(func_3620_call(), 1)
call_3694 = relay.TupleGetItem(func_3622_call(), 1)
output = relay.Tuple([call_3693,])
output2 = relay.Tuple([call_3694,])
func_3711 = relay.Function([], output)
mod['func_3711'] = func_3711
mod = relay.transform.InferType()(mod)
mutated_mod['func_3711'] = func_3711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mutated_mod.get_global_var('func_3711')
call_3712 = func_3711_call()
output = call_3712
func_3713 = relay.Function([], output)
mutated_mod['func_3713'] = func_3713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_3739 = relay.TupleGetItem(func_2995_call(), 0)
call_3740 = relay.TupleGetItem(func_2996_call(), 0)
uop_3744 = relay.log10(call_3739.astype('float64')) # shape=(2, 3, 2)
uop_3746 = relay.log10(call_3740.astype('float64')) # shape=(2, 3, 2)
output = relay.Tuple([uop_3744,])
output2 = relay.Tuple([uop_3746,])
func_3748 = relay.Function([], output)
mod['func_3748'] = func_3748
mod = relay.transform.InferType()(mod)
mutated_mod['func_3748'] = func_3748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3748_call = mutated_mod.get_global_var('func_3748')
call_3749 = func_3748_call()
output = call_3749
func_3750 = relay.Function([], output)
mutated_mod['func_3750'] = func_3750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3784 = relay.var("var_3784", dtype = "float64", shape = (13, 15, 7))#candidate|3784|(13, 15, 7)|var|float64
var_3785 = relay.var("var_3785", dtype = "float64", shape = (13, 15, 7))#candidate|3785|(13, 15, 7)|var|float64
bop_3786 = relay.mod(var_3784.astype('float64'), relay.reshape(var_3785.astype('float64'), relay.shape_of(var_3784))) # shape=(13, 15, 7)
func_3313_call = mod.get_global_var('func_3313')
func_3317_call = mutated_mod.get_global_var('func_3317')
const_3790 = relay.const([-5,7,-7,-8,9,6,-10,6,1,-1,7,-10,8,-8,-5,6,-3,-7,2,-3,7,-4,4,-4,-9,-8,3,-7,-3,1,6,-9,-10,1,-2,-2,-6,6,8,7,-5,8,-4,8,-10,5,-6,-6,3,-10,-2,3,-1,-7,9,10,10,-3,-3,-2,-9,10,3,4,5,-10,6,-4,4,-8,7,8,-6,-2,1,-3,-2,8,8,3], dtype = "int32")#candidate|3790|(80,)|const|int32
const_3791 = relay.const([2,-1,-10,10,-10,6,6,1,2,-3,2,7,-3,3,-10,-1,10,9,-7,-10,9,6,-9,-5,-9,-5,6,-3,10,-8,2,5,1,4,4,-4,-9,10,7,10,-8,7,8,6,3,10,-1,-9,-8,2,-6,-9,-9,2,6,2,-6,9,-8,-4,7,8,9,-2,-10,-1,1,3,10,-5,-7,10,7,-1,-4,-8,9,1,-5,8,-7,4,-10,-9,-2,7,-3,-5,8,-7,-1,3,3,1,-9,5,-8,6,-6,6,-1,-7,10,7,8,-10,1,10,-7,1,-9,-2,5,-3,-4,9,4,10,-10,1,10,-10,5,4,2,-10,4,-8,-1,-2,-1,-10,10,8,8,-1,-3,9,10,1,-1,-3,-4,-5,-1,2,9,9,-4,1,-10,-10,1,10,5,5,4,-2,-8,-5,-6,-3,1,-6,10,-8,-8,-3,8,-4,5,-10,7,7,-10,6,-1,3,-2,-8,-6,5,5,-7,-9,7,-8,3,10,3,-2,6,-10,7,7,6,-4,-9,7,5,7,-2,-10,2,-6,-9,-4,4,-3,-5,10,6,-2,-4,-1,9], dtype = "uint8")#candidate|3791|(216,)|const|uint8
call_3789 = relay.TupleGetItem(func_3313_call(relay.reshape(const_3790.astype('int32'), [80,]), relay.reshape(const_3791.astype('uint8'), [216,]), ), 2)
call_3792 = relay.TupleGetItem(func_3317_call(relay.reshape(const_3790.astype('int32'), [80,]), relay.reshape(const_3791.astype('uint8'), [216,]), ), 2)
output = relay.Tuple([bop_3786,call_3789,const_3790,const_3791,])
output2 = relay.Tuple([bop_3786,call_3792,const_3790,const_3791,])
func_3798 = relay.Function([var_3784,var_3785,], output)
mod['func_3798'] = func_3798
mod = relay.transform.InferType()(mod)
mutated_mod['func_3798'] = func_3798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3798_call = mutated_mod.get_global_var('func_3798')
var_3800 = relay.var("var_3800", dtype = "float64", shape = (13, 15, 7))#candidate|3800|(13, 15, 7)|var|float64
var_3801 = relay.var("var_3801", dtype = "float64", shape = (13, 15, 7))#candidate|3801|(13, 15, 7)|var|float64
call_3799 = func_3798_call(var_3800,var_3801,)
output = call_3799
func_3802 = relay.Function([var_3800,var_3801,], output)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3485_call = mutated_mod.get_global_var('func_3485')
call_3857 = relay.TupleGetItem(func_3483_call(), 4)
call_3858 = relay.TupleGetItem(func_3485_call(), 4)
const_3870 = relay.const([[[7,-4,2,5,7,6,-3,-3,1,-5,-6,-9,9],[9,1,-3,5,1,9,3,-5,10,-2,-2,-2,-10],[-7,5,6,4,-9,-8,-4,2,-6,-3,-6,9,-5],[2,10,-6,-2,-7,-4,-6,7,7,-4,9,6,8],[-5,1,-10,7,-7,-8,-3,-5,-5,-10,-6,8,-6],[7,8,-7,6,3,2,-7,5,8,-2,5,-6,4],[1,-10,-6,2,-4,-7,8,-6,1,1,-1,-4,-2],[2,3,9,-5,-5,-6,5,8,2,-3,10,4,-10],[10,9,10,-1,-9,-10,-9,-7,4,7,-5,9,1]],[[-2,1,-1,-3,-7,4,-9,-6,7,-6,10,-6,1],[10,-7,-1,8,-10,-7,1,-5,9,10,-3,-3,-1],[8,-2,9,2,4,7,-9,3,8,-9,-1,-9,8],[-7,-2,3,-6,-10,10,-2,-7,-6,-4,2,5,6],[-2,6,-8,8,-1,-1,-10,3,7,2,-2,10,-9],[9,6,7,-2,-7,-8,-2,7,-8,-8,-5,-6,-9],[-7,-6,5,-8,1,-8,-10,3,9,-9,-1,-1,9],[4,-3,6,3,-6,-7,9,10,9,10,10,-7,6],[-5,9,-3,9,-7,7,7,8,8,10,-5,-9,-2]],[[6,9,9,9,8,-10,-9,6,-7,-9,-6,2,-6],[6,-6,6,10,-6,-9,-5,-6,-8,2,-2,6,1],[10,-10,4,4,6,4,7,-5,4,5,-4,6,8],[2,9,6,1,-4,3,7,-9,-7,10,3,1,5],[-5,-1,6,5,-1,5,-8,-8,-8,-10,7,-3,9],[-2,-8,-6,-9,3,4,-3,10,8,-6,7,-3,-2],[6,9,5,-8,10,5,-2,-5,6,-1,5,-4,-8],[-6,2,3,-5,-5,-6,3,-6,-7,7,-5,1,1],[7,-6,6,8,-2,-6,-1,-7,-4,5,9,8,-4]]], dtype = "uint64")#candidate|3870|(3, 9, 13)|const|uint64
bop_3871 = relay.maximum(call_3857.astype('int32'), relay.reshape(const_3870.astype('int32'), relay.shape_of(call_3857))) # shape=(3, 9, 13)
bop_3874 = relay.maximum(call_3858.astype('int32'), relay.reshape(const_3870.astype('int32'), relay.shape_of(call_3858))) # shape=(3, 9, 13)
output = bop_3871
output2 = bop_3874
func_3889 = relay.Function([], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
output = func_3889()
func_3890 = relay.Function([], output)
mutated_mod['func_3890'] = func_3890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_3905 = relay.TupleGetItem(func_3330_call(), 1)
call_3906 = relay.TupleGetItem(func_3332_call(), 1)
uop_3922 = relay.cos(call_3905.astype('float64')) # shape=(3, 8, 12)
uop_3924 = relay.cos(call_3906.astype('float64')) # shape=(3, 8, 12)
uop_3929 = relay.rsqrt(uop_3922.astype('float64')) # shape=(3, 8, 12)
uop_3931 = relay.rsqrt(uop_3924.astype('float64')) # shape=(3, 8, 12)
bop_3932 = relay.not_equal(uop_3929.astype('bool'), relay.reshape(uop_3922.astype('bool'), relay.shape_of(uop_3929))) # shape=(3, 8, 12)
bop_3935 = relay.not_equal(uop_3931.astype('bool'), relay.reshape(uop_3924.astype('bool'), relay.shape_of(uop_3931))) # shape=(3, 8, 12)
uop_3937 = relay.tan(uop_3922.astype('float32')) # shape=(3, 8, 12)
uop_3939 = relay.tan(uop_3924.astype('float32')) # shape=(3, 8, 12)
output = relay.Tuple([bop_3932,uop_3937,])
output2 = relay.Tuple([bop_3935,uop_3939,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
output = func_3940()
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
call_3974 = relay.TupleGetItem(func_3620_call(), 2)
call_3975 = relay.TupleGetItem(func_3622_call(), 2)
uop_3977 = relay.acosh(call_3974.astype('float32')) # shape=(2240,)
uop_3979 = relay.acosh(call_3975.astype('float32')) # shape=(2240,)
output = relay.Tuple([uop_3977,])
output2 = relay.Tuple([uop_3979,])
func_3987 = relay.Function([], output)
mod['func_3987'] = func_3987
mod = relay.transform.InferType()(mod)
mutated_mod['func_3987'] = func_3987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mutated_mod.get_global_var('func_3987')
call_3988 = func_3987_call()
output = call_3988
func_3989 = relay.Function([], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
call_4014 = relay.TupleGetItem(func_3711_call(), 0)
call_4015 = relay.TupleGetItem(func_3713_call(), 0)
const_4016 = relay.const([[[-9.561793,-2.886539,-4.863958,6.029047,9.102567,-8.036257,5.055868,6.593788,-8.329700,-1.629077],[0.498115,6.951401,4.146821,7.316152,-9.591612,5.643192,-7.742522,1.901231,-8.248557,-5.615606],[9.606613,-1.902643,8.207506,5.931999,0.312525,3.616792,0.166119,-9.724995,9.814163,2.673508],[-8.962466,-5.029519,-7.400652,-5.864009,2.735296,-8.609931,8.710707,8.026723,-6.934934,-1.671922],[7.178257,4.809711,-4.416510,9.476228,8.620736,1.552964,-0.590507,9.164773,-9.104248,8.806330],[-7.744041,-7.623402,-5.045759,-2.127268,-4.229936,-0.837440,5.327831,-0.459798,9.665132,2.753072],[-2.602628,-2.435696,1.144038,8.189613,9.817918,8.464477,-2.423484,-5.043395,1.231337,-4.535598],[0.630690,3.171022,-3.355492,0.857573,-3.140344,-2.756531,1.944471,8.182922,-0.823116,-2.430840],[8.874990,-7.027280,4.090899,-4.876084,6.864640,-5.354362,4.759729,0.355853,-5.010985,2.438105],[-9.865408,9.368390,-7.882638,-3.782588,-3.013493,1.229811,-8.587170,3.788338,-2.727367,-5.416340],[-9.144600,-8.951454,8.515401,2.705802,-2.615500,-8.832459,3.179298,9.877673,-6.095142,-6.727637],[-5.603830,-7.945590,1.881996,2.249991,7.731017,-4.759169,-6.618752,2.320761,-9.366634,6.960668],[2.741694,8.216138,-6.676564,-7.615428,-0.552148,0.399248,-5.954487,9.572145,6.346689,6.108262],[9.948511,7.446457,8.477728,9.667413,0.341654,-2.677333,-6.884050,2.096101,-3.057426,7.002195]],[[5.191398,-4.239567,-5.284761,3.506489,-2.576876,-6.265063,-7.979652,2.258065,-4.219413,-7.109858],[-0.832009,-0.771951,-1.361139,6.297044,7.293743,-6.974664,3.733989,0.361249,-3.175278,6.227326],[1.131577,-2.192054,0.427565,2.691989,-1.327678,-5.404495,8.341063,2.165633,-3.610697,-7.536387],[4.958468,-1.395345,0.783008,-5.040365,8.721241,-2.822135,2.847759,-9.000167,1.146301,-8.099264],[7.215222,-6.862286,6.711042,0.579925,-5.711029,-6.811738,-2.802921,-5.881731,-0.852034,0.451167],[-6.681496,-4.614719,3.837765,4.331243,9.409588,-5.204870,-3.220537,9.962744,8.048334,4.809198],[-3.669833,0.122295,6.594832,8.385522,5.920279,7.782402,-0.954428,8.054432,-6.267719,-5.276998],[0.513560,9.341249,2.834038,0.320612,3.084545,-1.751165,-8.023776,-2.396377,9.379834,2.368967],[-0.688272,6.775230,8.692488,-5.633642,1.227164,5.286712,-3.718542,-9.738634,9.507515,-9.113314],[-7.980487,-2.536348,-8.342012,-4.254249,-2.381289,-2.964385,-9.454827,-6.650517,2.284220,-8.575703],[8.182552,2.023580,-3.746659,-1.746833,0.363425,-4.528195,1.158285,7.506158,3.483088,-3.990467],[4.635684,-8.794776,-9.700540,1.445277,-7.849801,-0.941164,7.194554,4.901098,9.549816,6.486484],[-8.456633,-2.598685,5.933696,5.072657,-4.215602,-6.255969,3.935395,6.056269,4.440635,0.962690],[-7.706896,-1.204123,2.805678,5.670647,8.038010,7.654234,-9.940334,9.812086,3.371963,-5.227893]],[[-7.492377,-5.924010,-4.662137,6.316142,-8.100809,5.689213,-3.906322,4.590576,2.765862,-5.412045],[8.602170,-8.201590,-3.170407,4.074326,-1.162262,9.582996,9.211854,-4.592220,3.782741,6.651253],[-5.155359,9.807723,-7.226556,-5.849047,8.154827,-7.732630,4.618064,0.898493,7.174130,5.440384],[-9.422665,-8.588463,-3.642382,3.856049,8.571317,-9.003272,3.105559,-6.893034,-0.199074,0.133420],[-3.141368,-2.318490,-3.493648,7.497043,2.013549,-9.151344,2.329312,3.452460,7.429339,6.073409],[2.657808,3.657612,0.144099,9.747821,-8.276645,-8.347922,-2.483839,-8.588592,-6.868358,-0.608256],[9.426656,6.238373,-6.567391,-6.170186,-7.473412,-5.312716,4.009423,-1.298195,9.522458,-8.970738],[1.198696,-5.199549,-5.510750,-3.085076,-3.084082,-4.674047,9.574328,-1.820842,-1.332619,-9.349931],[6.320904,-0.645242,-7.774318,7.403048,-6.975321,7.048140,-3.850912,-7.497385,9.113789,3.130466],[7.904731,0.606497,-6.816713,-6.722889,-4.430636,1.427752,9.371604,7.826796,-5.048959,-3.076748],[-8.056377,-6.884341,9.484834,1.196613,-9.305291,5.023106,-2.125053,-9.004172,-9.443015,4.207736],[1.577859,-8.617412,3.521070,-4.194061,8.962154,-2.481248,7.165914,-2.304373,8.771167,2.020154],[5.073946,-8.359969,5.656426,-7.269753,6.000530,-7.042343,-7.968748,-5.034935,-4.328506,4.461616],[5.926399,-4.060643,2.470034,3.497824,-7.247321,-6.123821,2.885227,-5.501940,3.273751,8.692444]],[[-3.585714,-9.745228,-2.052561,-0.481627,6.984397,-3.146262,-6.560303,6.228525,-0.029268,-0.360584],[8.402060,-7.556142,9.578911,1.160597,6.317287,-1.939719,6.937769,-2.859640,5.529642,-0.922695],[-1.276727,9.449694,1.474131,-0.988831,0.507123,1.339071,4.243353,-5.359292,-7.385268,-8.114356],[-3.297320,5.918225,2.914526,5.391581,3.605576,7.138293,4.907630,-3.354236,-7.976544,-8.326189],[7.809841,-7.617337,3.814206,-5.297402,5.703961,3.421494,7.859298,5.276125,-9.038187,4.943838],[-9.704999,5.162897,8.953792,8.243834,8.287826,8.892079,0.991222,1.389525,-0.420435,-7.582640],[-4.764800,0.622793,-8.371077,-1.779216,-0.144728,-8.086827,3.835159,-8.234277,1.450765,-4.919811],[2.013601,-3.228811,4.562666,3.897238,7.942045,7.432610,0.173704,5.135069,5.099724,-6.607696],[8.626019,2.106457,-0.552679,4.492067,2.694847,-0.555268,2.100806,6.353223,1.895241,7.306946],[-1.766469,-2.962397,1.321275,0.614774,-3.615144,-1.139495,7.855886,-5.340410,4.766921,8.676055],[5.829589,6.118516,-7.746669,4.575290,6.757214,-0.864566,-5.686600,0.027503,-4.653626,-3.982567],[-0.243489,-0.216242,-1.235727,-9.518989,-5.784535,-5.576649,6.114487,5.772732,-4.604094,8.579170],[9.466383,9.851338,9.554188,8.220779,-2.013356,-3.697346,5.445755,-6.950711,7.502005,2.527958],[-9.585781,5.585784,-5.786041,-4.242149,7.308319,-3.232058,6.952938,-5.733995,7.483419,6.552645]],[[-9.282040,-2.330068,-0.258292,4.078637,9.139108,-3.139452,3.136433,-5.181103,-3.052615,-5.128906],[-5.113035,-6.956657,0.324322,-3.514622,-4.927583,-1.037236,4.504441,-0.068027,5.153507,5.472828],[8.480390,-3.581338,4.553355,-8.470724,4.479261,-6.578731,8.920470,-1.564620,4.649871,0.042324],[-6.031909,-9.281255,5.553526,3.797749,2.840136,1.082214,-1.973131,0.017376,-4.644239,5.750257],[-7.710177,-4.724352,-1.260500,-3.852723,9.718053,-4.923473,8.083063,-7.110819,9.860981,9.900283],[-6.038226,8.068822,9.513135,1.992939,-9.950766,9.452318,-8.155950,0.338797,-4.694721,-0.103281],[6.319513,8.858552,-9.126132,6.497209,-7.690039,-0.353117,-7.535666,2.476203,-9.255969,0.184630],[-5.689956,5.196308,-5.727824,0.601731,6.149538,2.429432,-1.945052,8.410891,-1.111618,5.013599],[-3.388713,3.114210,3.261651,-2.904572,4.599388,4.104569,-1.992585,-6.096029,2.081400,-7.402326],[-4.881962,1.038913,-1.078071,0.918848,-4.862047,7.042129,-1.388205,6.276650,-1.229531,4.723672],[2.335516,8.054668,7.936595,6.451273,8.081787,7.265476,4.916046,0.947982,-0.968490,-1.302398],[5.069866,7.825995,-8.377073,7.682810,-0.520865,7.094815,8.896650,6.177241,-2.291609,5.196495],[-3.696013,1.656897,-5.201461,-6.184938,2.607450,2.226368,-5.972985,-7.810274,5.100851,8.403144],[-8.655871,2.118447,2.652339,6.345282,3.211919,-0.017115,1.522667,6.741053,-9.349075,-7.168304]],[[-8.986668,-9.109215,-3.628096,-6.142666,-9.493665,4.903262,-4.576048,9.260160,-1.252996,6.885310],[2.871933,0.023994,-9.101710,-0.430906,-6.301472,-6.060397,-5.207947,-4.174869,-7.533721,-7.450346],[-9.399687,5.668517,7.710461,3.410726,3.051871,1.966447,-4.672556,-6.974716,-2.940351,6.774814],[4.978109,0.878933,-7.890965,3.738096,-4.055135,7.959660,3.447732,9.512569,8.020288,-3.643666],[-3.103336,-5.408303,2.732380,9.514641,4.363140,-8.464396,-2.965056,4.148019,9.051481,9.957246],[-1.880750,4.603448,-4.577335,-2.540715,6.127632,-4.978507,5.049398,-4.815263,8.551322,-8.762997],[-4.885307,-4.874031,-4.518420,4.921076,-4.187912,-3.011253,4.682931,-6.212589,-5.667108,-8.509673],[-6.040727,9.763799,3.721565,-2.694617,1.278891,2.445377,1.849461,0.352388,1.797866,-3.202735],[5.029231,4.579830,-2.974174,-7.240501,-4.478205,-4.551868,-1.468637,-0.147749,5.480298,-2.092721],[6.612404,-4.521565,7.938184,9.074200,-4.789526,-4.179226,-6.131738,-8.261339,-8.064980,2.411806],[6.144933,2.453793,-4.724467,0.110019,-7.290198,-8.206655,-9.607589,-2.622859,-8.573616,-4.233052],[0.156528,1.793528,-0.909412,-2.806182,-8.368952,-1.606217,9.829260,0.835564,9.434365,3.411053],[3.851510,-2.353602,-5.817946,4.258047,-7.230243,4.575409,0.163356,8.402267,5.759902,-5.768641],[9.469280,6.962002,-0.125624,-5.739505,-6.375266,6.180760,-8.813383,3.530525,-4.997599,0.219800]],[[-9.418850,8.338183,6.774933,-7.370991,-6.426346,6.899413,8.582757,8.279198,7.673808,6.931107],[6.673044,9.640069,-1.111074,3.222909,-2.065764,3.379894,5.295764,-9.483654,1.594131,1.298137],[4.717500,-1.256431,-8.203310,-2.386013,9.950876,9.278556,-1.638411,-8.062375,3.839812,9.337251],[5.825974,-4.504242,4.351356,6.172600,3.574675,8.639416,8.640121,4.593543,8.400454,-3.809964],[-6.581384,7.311692,-4.917873,4.752285,2.623635,4.261274,-3.019883,-6.961194,-7.927346,-1.323564],[-8.066564,-5.629658,1.406974,2.214038,4.187779,-0.664703,9.116345,-2.954805,5.369093,2.095234],[4.346518,4.434583,6.184611,7.292765,-5.796276,7.703837,0.305852,-9.264318,-6.470626,4.757917],[5.135412,1.391753,-2.988230,6.187519,0.229598,-4.989004,5.580888,-9.101286,7.591621,8.611294],[-4.058152,5.741458,-1.288880,-1.285766,1.800874,8.792362,1.460202,-8.867201,-5.352864,-0.181516],[-5.872190,-8.426490,-6.464765,-0.153353,6.795561,6.869942,0.104405,3.137360,4.157283,-0.342666],[-1.937028,1.238767,-4.915840,0.960935,3.225625,-3.745796,-2.474986,-4.141396,-2.181306,8.963184],[-4.942334,6.051700,0.845129,1.023055,-8.690908,8.819843,7.819580,6.316796,-0.804760,5.947606],[-6.247310,-1.179479,-9.902169,7.488032,8.655748,-7.846191,-5.655804,8.890459,9.886652,-3.176852],[-2.860845,-0.266409,-6.618067,3.958276,-6.754287,3.290565,2.583233,9.414661,-1.687497,-0.022576]],[[4.066929,4.258715,-5.777127,2.904830,6.707958,5.441769,-6.242566,-2.339531,3.409496,1.052399],[-3.622677,-4.092467,-8.336639,8.129291,5.513171,5.634380,1.873227,-9.337397,8.578077,5.791805],[6.190337,7.958697,-8.178014,-4.656137,7.247412,1.167267,-3.118626,8.932442,4.441685,7.498531],[-4.341880,-7.466607,4.477872,2.278261,-4.251301,-2.393136,-9.949496,7.341627,6.114184,-1.373923],[-0.033269,-9.091071,-9.542597,0.837570,-1.812048,-4.195351,7.810886,-9.708050,5.416880,-3.506241],[-1.642664,2.817122,-8.554248,9.272673,-0.683300,-2.685763,0.387753,-3.680740,5.287240,-5.332011],[-1.552277,-9.798972,2.435041,7.531005,8.563342,-9.595562,-8.082145,-2.284335,6.022035,-7.395304],[8.516418,-1.963305,7.793921,-1.774871,-7.155900,-5.653048,9.637355,2.177906,-5.653576,4.738419],[-7.334704,8.641145,7.889773,4.665080,-1.966882,3.997683,-3.527556,-9.811600,-2.434444,-6.351966],[3.365190,2.121768,-9.635869,8.802000,9.725401,-0.899380,8.954931,-9.773593,2.044070,7.026306],[0.486642,9.857463,-0.370169,0.033740,3.946789,7.671388,8.594177,2.888060,5.897628,-4.696116],[-6.912671,-8.635851,-2.332745,-5.331281,-7.716590,2.646855,-1.449265,-0.712867,7.946329,0.127095],[5.735378,5.100006,-8.540833,-9.912953,-0.465688,-9.694256,6.501684,-8.998824,-1.321538,0.955442],[-8.419865,-2.381783,-3.583408,4.447507,3.789258,-3.777203,2.752703,5.230119,-1.571008,-5.814114]],[[-3.701023,8.316186,0.470469,9.605483,4.740939,1.072548,-8.134029,-7.761509,-4.744519,-9.414814],[4.977045,-7.451277,-9.859678,-6.174240,-1.338267,7.103611,8.832961,-9.278440,-5.450020,-2.831055],[9.454819,8.586746,-7.634091,-7.455062,8.981675,-5.666289,0.408739,-1.487584,-5.506928,-6.585707],[5.738853,1.545217,2.095293,0.091258,8.644400,6.987229,1.716438,-1.079074,-9.350715,-3.791111],[1.974885,-8.283484,-6.908299,9.808268,4.018016,8.354609,1.515140,-9.193065,-7.899903,8.756223],[7.673370,-0.344279,2.532259,-7.013841,5.507365,-2.684782,2.531609,7.253179,0.088656,-0.513380],[8.582927,0.519198,-8.154412,3.297391,6.535432,3.803726,9.067895,-8.991325,-2.588070,-0.160992],[1.476834,3.646679,-9.781190,-7.100964,1.504060,-9.703780,-4.325490,1.473097,9.241199,-1.707737],[8.460631,-5.909441,9.531618,-3.674337,3.168976,-4.080611,4.031666,-0.296103,-7.001393,4.042211],[9.584368,-8.149228,1.882752,3.340967,-2.590617,4.139284,7.940009,-5.188459,-3.458489,-2.048033],[-6.567200,1.469062,-1.087616,3.501654,-3.759787,-8.689225,-5.734395,-7.165930,8.424153,1.943949],[4.821005,0.571995,-2.107299,9.765248,-0.652868,-9.909922,-7.638267,-6.451141,0.656854,-3.884772],[-1.313953,-6.762815,2.906629,-2.967151,-5.854333,7.780302,5.179787,-0.043936,-8.455797,-1.008605],[1.030419,2.721424,-2.785260,4.491480,3.768895,-3.562079,-1.405234,9.431157,5.939061,-2.902482]],[[7.349196,5.712868,9.945026,-2.028651,0.396446,-8.371892,1.235121,9.751467,-1.136346,-7.884998],[-5.110812,0.383226,5.241022,-6.154204,6.631932,-8.718174,-2.460063,9.791486,4.056590,-3.903268],[-4.246255,8.820322,-8.357860,-4.128619,0.752324,0.067289,0.919252,9.005226,2.457895,9.401235],[-7.311011,3.928703,3.570303,-2.685342,-0.521057,3.739882,-7.679009,-7.204608,7.459015,9.038948],[9.728521,-6.099992,3.150828,0.861976,-3.855025,2.412936,-3.696874,0.389539,0.441506,-6.980103],[-7.703665,6.437810,1.742651,-8.488563,-1.174864,2.378411,-3.996347,-9.462601,0.285676,-6.414115],[-4.011629,2.144840,-3.164892,-1.996571,-3.697589,6.980615,-6.227326,1.436515,-4.865508,0.285804],[5.812054,9.892679,-5.927877,-3.956635,9.802952,1.627209,-0.726338,6.537805,-1.139640,9.134442],[-9.186129,9.375629,7.546816,-7.539741,-9.864332,-2.053718,5.881875,1.744798,1.056047,5.354326],[-3.249674,-0.128840,0.125650,9.697392,3.440139,6.071513,9.174468,-5.840952,6.140571,6.851818],[-4.702310,-9.080799,3.602723,-8.089955,2.099704,5.032348,-2.255803,-1.296994,7.252498,3.677568],[-4.843989,6.471461,-3.386964,-6.579255,-1.563476,4.446215,7.809760,-1.466841,-4.091185,1.287586],[1.997594,9.265826,-1.585157,5.660272,-3.333071,-5.969334,7.709137,-4.024523,-9.151156,-8.274769],[-7.411136,0.213795,5.620135,-3.622855,-6.958440,3.051863,8.421510,-5.548894,-7.701651,2.706360]],[[-9.943700,-0.238530,9.813491,9.490940,4.733886,6.350200,-6.077648,-1.240510,-9.594376,1.691311],[-1.015843,-6.416477,7.428821,-0.243458,6.491389,-7.276708,0.346945,9.575510,-9.111613,-0.994657],[-2.255202,8.134019,9.055131,-3.489995,3.485908,-3.777759,-2.218867,2.813543,7.210006,-4.591442],[8.173756,3.256153,3.194183,-7.641965,8.362487,2.335542,-2.931689,-8.690361,-3.596397,5.173917],[-8.156846,-3.825062,9.429113,2.161312,0.278538,6.474075,-7.035879,9.983834,4.052654,3.542938],[0.086527,1.071309,-9.848130,3.885644,-4.954919,-5.347594,-9.774614,-2.560403,-8.112564,8.434620],[1.747733,-7.772535,7.864160,8.148634,5.188899,2.697383,0.444692,-4.098903,9.521236,2.136902],[5.277600,-0.692652,-2.274043,2.930674,-1.711962,-3.742794,6.371334,-6.512216,-9.924535,4.415391],[-1.375135,-6.867253,7.023390,7.545285,-6.454217,4.865290,-2.471172,-6.371292,-1.077248,0.152985],[-9.082295,-1.250640,6.734572,-1.023812,-4.711274,7.464923,-6.485870,-1.004127,0.026276,-8.664514],[-7.324319,2.204736,-2.613880,5.574805,3.524549,6.337438,-3.671608,8.689186,-1.301444,-5.272259],[5.335073,-0.803890,6.945889,-7.863394,-4.665721,0.012162,-2.777257,-2.924247,-8.989025,6.993364],[-0.684766,5.677052,-2.880750,-1.142196,-1.095843,2.484049,1.199404,5.851088,-0.640288,8.235250],[8.869862,-3.817153,4.342050,-4.615794,-6.640708,3.430451,-0.479975,-9.408749,7.133220,-9.536483]],[[5.168826,7.691784,6.704970,3.528772,-1.779210,-7.652560,9.112554,5.842789,4.336902,-7.671539],[0.684179,1.585390,-1.202234,-8.893145,-1.544105,6.741335,-9.440790,-4.144462,-4.359825,-4.651709],[-1.428487,-6.005989,3.701951,-9.967277,5.221526,-6.257217,-9.662253,-6.253711,1.902479,-6.715040],[5.441895,6.873332,2.157872,3.338781,-2.260287,-3.583237,3.738919,-2.306854,5.645135,0.314058],[-4.058215,6.621401,5.258897,2.321101,6.757585,3.164493,-5.746105,-0.826184,-8.183196,0.083064],[0.119946,-2.988157,-6.545195,8.416401,1.695511,-6.207482,6.503802,5.639235,2.007869,2.876544],[-2.006811,-9.479504,-7.171289,-7.564803,-5.752533,6.291086,-3.838772,-6.743622,-4.107442,-5.945741],[2.159780,8.736323,-1.968803,1.230852,-6.043163,-8.959672,8.804045,1.503139,-9.927916,1.401576],[0.369652,-0.934290,-3.171655,-2.140617,1.741604,-9.002716,9.778733,1.848135,-2.542504,5.084277],[2.929043,-5.684054,-0.156160,-1.949459,9.739640,-1.063956,-4.692173,-7.074831,4.342550,-7.622810],[2.662384,9.749834,-1.786350,2.290945,-3.956249,6.612297,-6.820181,-1.048926,2.570885,5.321048],[-8.195149,1.878282,7.198966,2.676581,-6.282634,1.782583,1.220112,-3.804592,1.259343,-2.504582],[9.862008,6.053728,5.988576,-2.059683,8.397716,-2.235052,0.513599,-5.990177,0.213955,-3.977473],[8.671202,-0.281529,-7.935973,0.754013,-2.596155,6.736037,1.665720,0.376462,5.119486,-7.708201]],[[-7.082591,-6.839789,-7.933268,-0.055485,3.985033,-8.406236,-5.774636,8.000761,7.708472,-1.474535],[-0.344256,3.140471,-8.839113,8.719778,6.926659,-1.052919,-3.497967,9.763545,-2.365641,-9.328361],[-5.709586,-6.168665,0.260908,-8.695168,-0.481943,-2.513903,-5.529365,9.588165,3.646847,-2.891576],[-6.500916,-3.432551,-6.186623,7.401703,5.935884,-0.469968,-3.679954,-4.969126,-2.707357,8.823651],[5.873353,5.442388,0.395626,-1.601587,5.667612,3.756072,-1.159950,-5.541072,-9.622401,8.017881],[-7.384369,4.764712,-9.293219,-5.186942,-8.901118,-0.550877,-4.933600,-4.295064,-0.866040,-7.762478],[5.785089,1.982443,8.519922,-0.589268,1.653466,3.179800,7.320009,1.786712,-8.861030,-4.424086],[1.719942,-7.593626,5.905534,5.726658,9.422598,4.735453,-0.859730,-8.255765,0.904609,7.435650],[-1.421778,-4.895318,7.390926,-3.050694,6.083246,3.243619,4.595963,-6.401158,-4.663330,-6.848172],[2.325304,-1.356178,-6.977509,6.776383,-9.663815,-5.821068,9.746295,-6.924353,-7.339185,-9.243654],[-5.761174,-7.199910,6.279683,-6.293402,2.857017,-5.837292,-5.155279,-0.992832,6.298563,-0.604706],[-8.004821,0.152369,3.031188,-2.915950,-5.954009,-3.727207,-2.184749,-5.649228,7.073554,3.255818],[5.469633,-4.476380,2.815999,-5.766123,-2.098608,-4.873473,6.379004,7.139682,6.406825,7.558893],[-7.893274,-5.639300,-8.425615,5.425293,8.138091,-6.759927,-8.561262,7.259926,2.252480,-3.754836]],[[-9.615226,-3.658430,-4.421257,5.847785,-5.102099,2.663936,-3.573742,4.955187,-5.317891,-6.224873],[-7.359503,-4.182389,3.541282,-5.937051,2.182584,1.172241,9.046734,-4.961031,3.353130,9.588559],[-3.969247,-5.951582,5.553281,2.896596,-0.724788,9.712908,8.580696,4.853499,4.096377,3.720021],[4.982604,7.645443,8.596081,-8.967174,4.458273,-8.285928,1.643369,-7.488588,-7.401661,-3.950923],[0.771954,6.430905,-7.154089,-4.861622,-9.399849,-4.919064,-5.618204,-6.761048,7.787080,-1.586527],[9.735440,-9.933753,0.794232,0.606278,9.829894,2.380771,8.340001,3.564603,0.271967,-8.460222],[1.647220,1.246098,-9.861556,4.371516,9.716843,-2.102404,-8.306270,6.843626,5.620677,-7.300223],[-4.809172,2.075637,-0.367361,1.043624,-6.954729,-4.774690,2.798059,4.966916,0.042342,4.556705],[-2.180305,7.417339,2.013562,7.149025,5.614709,9.110065,9.756558,-6.333798,4.675584,5.950189],[5.262680,2.925197,-0.205119,-3.825253,-2.008401,-9.549052,8.793104,9.096922,-6.003641,2.660993],[-9.419748,0.436119,5.736193,-2.909207,-1.128669,5.417838,7.171254,-3.795852,1.130439,8.150285],[-2.811358,2.465095,-8.358585,-4.984224,2.061949,-0.121482,-7.447723,6.743293,4.787002,-1.433316],[2.800432,5.037341,9.240735,-0.924029,-7.988358,-6.382727,9.723859,-2.712535,-3.764889,-6.841824],[-5.734665,-1.116932,2.743452,5.504910,2.121329,-8.152025,9.927944,7.879492,8.061250,6.881501]],[[9.874814,-9.791774,8.508409,-2.133221,-3.694001,0.273326,-8.600685,5.945287,6.076590,-9.555967],[5.054487,-4.342663,2.060477,8.216394,4.143551,-9.437809,-2.979227,-8.309014,-1.969028,3.784381],[0.881455,8.130997,-1.787521,4.554215,5.850264,-4.901924,-8.133741,9.671677,-8.752774,-2.705683],[-1.607540,2.213032,-8.824131,-4.353186,-0.014827,3.625176,3.294413,1.319418,6.691555,4.169035],[3.575666,6.929501,-0.532540,2.732665,0.786809,5.029761,-1.494230,-4.669704,-9.619611,2.963671],[2.559262,-3.325933,-7.346442,-9.013675,8.368362,-1.169835,-5.853224,-9.744366,0.020049,8.086101],[-3.519600,-8.225541,2.720368,0.262635,4.835183,3.774056,4.708639,6.467661,2.460644,5.266092],[-0.940876,5.310095,-6.829569,7.374625,9.794789,-6.940010,8.277566,9.259056,-3.717454,-8.709527],[0.992524,-5.036509,-3.824569,-9.641537,9.131768,-4.264011,-3.791705,-7.431493,6.450103,-5.498704],[6.799308,-0.256013,5.474094,3.273272,-2.289612,6.581553,3.693955,-8.999532,-7.829384,-6.448033],[3.964138,4.621911,-9.879996,-5.584228,2.236764,7.196705,2.439170,-5.251081,3.841760,-2.287495],[2.895562,5.038028,1.424489,-5.894368,7.600166,-8.478225,2.841560,-1.106526,6.310388,-3.627856],[6.652402,7.751224,6.596387,5.653699,-5.506308,1.489991,5.348515,-3.499616,-6.799970,-9.377697],[0.834064,-6.003495,-1.136995,5.521027,2.165778,8.628604,7.978312,-1.565589,-3.694692,4.181091]],[[0.242275,-0.494610,2.195714,-3.299338,-5.501293,8.084194,0.005654,-0.138302,-9.038570,9.651411],[5.015863,-4.944575,-5.761341,-3.054597,-4.143720,2.608009,-0.336659,4.545230,-8.729799,0.580200],[-5.481357,0.299767,8.020495,-0.258137,1.455292,8.635768,-8.389993,4.130795,-3.670780,0.642735],[6.203444,0.369531,-4.923499,6.299190,-4.455777,2.161271,-0.342513,-3.611864,0.113572,6.991066],[-1.952562,7.960886,3.741044,8.732627,-6.741333,-6.925262,5.254056,5.021128,-2.647131,8.918687],[-9.699145,-8.291069,1.649237,-4.282110,7.464751,2.080913,-7.215936,-8.581359,1.104211,-5.069405],[-7.159493,8.701906,-4.929358,4.330902,3.718738,1.126882,-1.758685,-1.885991,-5.672124,-2.525926],[7.038263,2.099092,-7.484153,1.860153,-4.808373,-2.868758,-6.634028,-3.927281,-3.272539,-1.366175],[-4.888276,2.950181,5.811853,-7.918156,-0.231899,5.267622,-0.587637,-5.378785,-0.767550,-9.835252],[3.249719,6.860017,-0.036757,-2.513385,0.673285,3.198824,-2.204276,-6.994795,-3.734332,7.149999],[1.165833,-4.503363,9.465596,2.490407,-9.862470,-8.157014,-1.739733,-2.445880,-7.745665,4.449946],[1.076308,7.363771,-1.346515,2.095636,6.051413,7.763724,2.459525,-4.022186,-1.649077,-1.568643],[-0.688948,-3.510128,-4.912087,0.728948,1.212983,-4.459934,7.285821,-5.313539,-5.260158,3.740643],[-4.076429,-5.165586,-9.120765,8.857033,-5.123067,-3.874691,-5.136221,6.152540,6.916515,9.101890]]], dtype = "float32")#candidate|4016|(16, 14, 10)|const|float32
bop_4017 = relay.mod(call_4014.astype('float64'), relay.reshape(const_4016.astype('float64'), relay.shape_of(call_4014))) # shape=(16, 14, 10)
bop_4020 = relay.mod(call_4015.astype('float64'), relay.reshape(const_4016.astype('float64'), relay.shape_of(call_4015))) # shape=(16, 14, 10)
output = relay.Tuple([bop_4017,])
output2 = relay.Tuple([bop_4020,])
func_4021 = relay.Function([], output)
mod['func_4021'] = func_4021
mod = relay.transform.InferType()(mod)
mutated_mod['func_4021'] = func_4021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mutated_mod.get_global_var('func_4021')
call_4022 = func_4021_call()
output = call_4022
func_4023 = relay.Function([], output)
mutated_mod['func_4023'] = func_4023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
call_4088 = relay.TupleGetItem(func_3711_call(), 0)
call_4089 = relay.TupleGetItem(func_3713_call(), 0)
func_1611_call = mod.get_global_var('func_1611')
func_1614_call = mutated_mod.get_global_var('func_1614')
const_4094 = relay.const([9.747070,-0.497643,8.782794,0.581322,0.789846,7.726496,4.579910,3.492727,-0.005630,-9.124499,-2.051422,-1.917318,2.739486,-7.549595,-0.205449,-2.779754,-7.326720,6.605746,2.766051,-7.206841,5.612373,-0.968530,-7.998859,1.598142,0.777682,2.596218,6.702583,-6.390278,-6.479708,4.410924,-9.760892,-2.071597,-2.943846,-6.328777,9.929954,-3.098484,-6.406185,4.786498,-1.532206,6.359702,-2.230773,-1.720713,-1.673525,7.508391,2.341383,5.438444,-3.914154,-8.364537,-3.897393,-0.368023,-9.316063,-2.066172,-5.706279,9.031408,-8.191400,-8.305130,-8.061055,-3.926922,0.482782,9.592317,-7.811179,6.582752,4.534922,-9.939744,-7.827589,3.133790,1.896444,-9.571182,8.111368,2.371151,-2.079298,-1.853058,-3.177855,-3.444028,-6.719791,-2.649507,-7.272805,-8.140500,-0.305317,0.392875,8.863533,0.472164,-4.861754,-4.619145,8.596853,7.070780,1.534692,-4.522517,-1.509325,-1.839432,1.731389,-1.749239,-4.412814,8.171650,7.238592,6.066701,8.390464,8.439894,-5.572414,5.767998,2.150111,-4.813158,-7.030182,-9.318352,5.429658,-8.085285,-3.638058,-3.305992,1.668241,5.083681,3.160430,8.138834,0.990698,-3.234810,3.350517,9.469816,3.952900,8.047231,9.623928,-7.986740,-9.200048,1.507666,1.443953,9.859307,0.563101,4.613543,-4.016852,7.188013,-0.686627,0.719805,8.275492,-9.310701,-3.457764,-6.196629,-3.103741,-2.135314,7.988977,3.812363,-2.441301,7.433772,6.617795,-1.143735,-4.061974,5.809711,7.407336,-4.205634,5.054975,0.586108,-7.341143,4.093086,7.791477,-9.574222,5.873790,8.500446,-6.774448,0.656290,-6.048778,6.273863,8.793416,8.391437,-1.800361,6.245931,-9.890926,6.184749,1.646531,9.746293,0.043788,1.754876,9.748693,-2.515675,-4.193423,7.904742,2.113210,2.547018,7.183980,7.105252,-6.220217,-2.515911,-4.581476,2.096283,-4.761524,-9.913218,-3.068007,6.302303,-6.605928,-9.466490,0.489690,1.142194,-2.297917,-6.459055,3.393465,0.073174,-4.806892,0.537589,-7.292971,-3.021357,2.915138,-7.784747,5.433390,-0.383798,8.465539,-5.116218,-7.981229,1.208382,-7.168694,8.651552,4.766588,9.512546,-2.140380,-4.633540,9.529604,8.507293,9.947860,4.687290,2.471082,8.818000,-6.440773,-3.513662,1.084490,3.805382,4.290143,-2.540839,-9.414977,-7.718758,-2.242251,0.454711,-9.900144,-1.437998,-1.625391,-1.321837,7.500305,-6.661230,3.975262,8.314516,-0.961606,-8.794294,2.142319,-3.687795,-3.054198,-3.375389,-0.957077,-9.501240,-7.629163,-3.731088,-1.496791,9.736473,-3.923204,2.837301,-5.182079,4.002275,-7.343813,-0.447786,-8.413258,5.937129,6.852671,5.839878,5.806894,-0.759251,-0.900421,-3.604202,2.362831,5.730288,5.823698,5.298110,5.675972,-4.773872,-8.021433,6.586769,6.223065,0.975686,-2.230805,-2.211269,6.652496,6.216415,-8.468746,-6.069413,6.442960,9.352094,0.380308,-9.252934,0.146382,-8.677850,3.158380,-7.279499,-5.914550,-7.979550,-6.731563,-9.156561,4.006511,-3.704694,9.374923,-0.297338,-5.221205,2.900554,-2.849608,-7.096233,-7.396958,-0.812448,-2.658676,-6.381410,-3.935225,9.193964,-3.127158,-2.954370,0.658326,3.160716,-9.002901,-1.387979,1.421982,-8.349258,6.005742,-8.159256,6.577835,-7.463354,8.662076,-0.027182,0.514636,0.583886,5.884822,2.498367,-9.703334,6.563742,-2.156669,6.973708,3.851307,-5.934344,-0.014295,-9.411908,6.214661,4.584674,6.314611,-8.061747,5.969817,-2.378062,-6.720198,5.635499,-4.930950,5.429824,-7.749825,3.031507,-1.568715,2.971990,-6.724409,-0.404307,-1.373514,-9.543621,2.712548,-6.245698,-5.535687,8.472916,-1.525719,0.434672,2.835929,-3.060879,2.428814,9.408066,2.661138,-1.736212,-2.356342,9.624943,-2.372850,-6.389010,-5.193406,-0.147762,-7.169950,0.091086,7.655952,1.677363,5.384616,-4.203832,6.201582,-8.975767,-5.497507,-9.417385,4.625733,1.120190,-5.090770,2.309117,-8.410553,8.385375,9.642234,-7.829991,-4.575372,8.928639,5.234352,-4.466418,3.837790,0.788509,-0.666831,-1.954065,7.399012,0.987855,-8.675250,-4.889246,6.214699,1.988176,4.333727,8.188325,4.722525,9.051460,-5.436063,-1.215299,7.320315,-8.940220,9.671634,9.534803,-9.812668,-9.635826,-4.799161,-9.651566,1.603504,-1.613334,4.989690,-9.345345,9.407005,0.527248,0.928791,0.311035,9.132721,-4.372183,0.687375,3.380909,7.737858,-3.905071,-5.028611,3.479044,-9.838158,-8.453817,4.906662,-8.990748,5.284144,-0.806122,2.482350,9.135877,8.723444,-3.624510,2.744262,3.827683,8.570144,-6.280863,-1.792266,4.584823,-3.606442,-7.342513,-1.409923,-0.612681,-3.537351,5.690591,-0.845425,-3.920825,-9.252475,-8.780542,-5.930951,-4.850767,0.808001,6.224648,-1.402547,-8.033910,9.987958,-7.618936,-7.117289,2.301142,-3.154333,-8.711467,4.081027,-2.864492,4.142782,8.990380,-7.976280,-8.276050,2.175269,5.130798,-1.961344,-9.492347,-9.168556,-8.052700,6.079526,5.260671,-4.667147,-8.001935,-0.853735,6.695911,-1.340118,7.256633,8.910911,-2.173097,-9.177662,-4.776778,-3.986210,-3.870402,-4.842739,5.462814,-4.636820,0.484219,-0.338668,-8.232359,-9.020060,6.120247,-2.423088,-2.416811,-1.612347,-4.261037,-3.186641,0.637778,0.635997,-1.996819,-7.343644,1.026013,-8.338761,0.181849,2.236284,-2.013195,-9.860884,-4.726613,-4.304238,-0.144784,1.736751,8.708137,3.691323,-3.006421,-0.991827,-7.952467,-5.457553,4.674736,-5.972021,-3.410648,-8.014831,-5.657507,-1.365995,-5.157187,9.706928,7.506823,7.420960,-1.664451,3.535047,-9.770018,8.219047,2.012901,-1.415002,0.441706,9.648580,-2.027810,-5.406065,-0.968682,6.328526,4.147299,9.349223,-0.038384,-7.979355,-5.098441,6.227279,2.223848,4.070601,9.381815,-5.176184,3.629708,-2.800204,9.407667,-4.144170,7.419083,-9.780017,-4.699234,6.513421,4.715791,8.044824,4.878552,-9.382918,-9.475304,4.507186,0.245864,-6.593485,-2.275468,1.355138,8.091060,5.448289,2.247123,5.272127,-0.751569,-9.659340,-6.725432,8.790087,5.609885,7.363562,8.824985,2.526361,-9.457472,4.098769,-0.613053,-4.622384,-1.616516,-7.537074,-8.969310,1.495009,-6.590077,-1.049367,-1.975702,-2.856061,9.024891,9.082805,6.119690,5.177080,-7.736668,-1.786355,8.253261,-5.451825,-8.713606,-5.376541,-1.494777,5.792163,6.071458,-4.670963,7.875879,9.581483,-7.499422,-3.155947,3.200475,8.718562,-9.794251,-8.279098,-5.519307,-7.995673,6.503815,9.844901,-5.553170,-3.211608,-4.618030,0.823570,-9.790724,-8.577050,1.491090,-5.503997,5.275217,-1.489639,1.185496,0.671344,4.727952,-2.229289,-1.964121,1.392491,1.235263,9.606899,-8.926138,1.299603,4.681752,7.192845,-4.425219,-5.735540,0.244316,-1.042550,0.581139,-5.916553,2.819995,-6.675245,7.149554,-4.928976,5.218240,-1.341005,0.713299,-1.632864,-9.941434,4.596556,9.886448,-4.589723,8.023341,9.380268,-0.502672,0.145610,2.887939,-1.451776,0.532715,4.531975,-9.740161,-7.494857,4.802821,-9.244084,-1.786983,9.330177,1.614471,-1.213467,-1.789902,-7.352989,-5.182314,-1.570607,9.359516,-9.658882,6.444245,9.167662,1.329601,7.656777,0.985245,-4.294820,-2.520329,0.096147,7.519777,-2.132872,-0.663507,6.408416,-7.067288,-6.988425,-8.047141,6.531302,-9.984417,1.694136,-9.831181,-7.733116,-3.538767,-4.205000,-0.776911,8.653528,6.911684,2.523747,-2.014171,-4.015615,-0.475246,-5.148468,2.610823,4.465521,-7.049008,-0.117462,5.556753,-6.568821,1.702958,-5.047644,5.805692,-8.637494,7.327382,-6.467218,-6.047981,0.426861,4.471019,0.926615,0.939614,-8.607486,0.270722,-3.155928,3.112332,-1.395469,1.278491,0.743490,-5.757364,-9.134774,2.452829,9.709615,7.850072,7.324617,-1.713656,-9.670576,6.009925,-7.081987,5.062764,9.102263,7.176441,4.889290,3.946878,4.575857,-3.978211,3.494690,-9.487523,8.157356,9.836951,-3.189104,3.901776,0.669213,1.443854,2.907247,4.779720,-2.915104,4.627768,5.518922,-0.452547,-0.344657,-6.162479,-5.733596,0.251433,1.530503,-2.145407,-3.217288,-5.189521,-9.939557,8.976022,-9.564971,1.636617,-9.629726,-9.430488,0.760503,-7.937722,-3.465970,2.880571,-5.008120,-5.196486,-3.743139,7.944570,4.622578,-3.197517,-1.982632,8.064349,-3.316040,4.127415,5.498673,6.203493,-6.815404,0.928260,-0.205461,3.502078,8.761450,-7.725804,9.132752,-7.576648,3.225191,-7.711616,1.203271,-9.511836,-8.219708,-3.109217,-9.252826,-6.151108,9.072633,6.089297,5.155999,-8.343677,-6.725018,-4.238788,9.119310,-1.245851,8.427735,-8.277697,7.667887,0.399282,-3.949308,0.164092,1.697033,2.612604,1.846998,-6.729736,6.642386,0.349597,-5.540833,7.126088,1.774518,-5.614626,4.926098,3.085137,-9.739662,-3.662109,-2.010770,9.881370,-3.008832,-6.095009,1.358622,-8.282143,-1.290920,-1.354275,5.330033,-4.181087,-2.134232,8.112132,2.644200,-8.542631,1.221951,-3.085332,-3.050668,1.932966,-9.148011,9.643523,5.923669,-4.023259,3.337620,-0.199596,8.985168,4.445986,8.807924,9.134145,8.024951,-6.097992,-7.965515,-6.866918,-1.518619,7.405536,-9.710747,-1.225838,-4.724435,9.515631,-4.765574,-6.704416,-1.990541,8.181789,5.382758,-9.792928,-6.262444,6.149248,6.182761,4.590618,-9.141560,-0.240758,7.936091,-3.589369,3.336323,-2.622037,1.542494,5.726873,-1.097299,1.361125,3.718568,1.914915,3.114174,6.208522,-8.479185,-3.522732,1.649295,0.932369,-2.373519,3.105598,5.041598,2.798170,-6.352321,-7.366333,0.415422,-0.587083,9.075513,-8.363235,0.697964,6.464203,-4.520693,-9.593585,-1.732332,4.737853,2.983679,6.098918,-7.562355,3.038691,9.956831,4.878851,7.467006,-1.661268,8.805582,6.577025,-3.728965,8.227616,6.305498,-8.312487,1.757075,-9.150864,-1.508747,-3.157739,-0.425385,-6.250954,0.258882,-7.454898,3.967491,-9.010514,2.392812,5.570298,-4.161654,-1.176771,-1.921048,-9.177285,-1.305405,-3.340185,-2.710745,6.085025,-9.900654,-9.040325,-5.170133,6.046652,8.059816,-6.786465,6.779670,-6.432928,-1.567469,9.107453,-2.746553,2.383283,-7.105106,3.948289,-5.498030,1.022365,-4.930815,-6.414454,-4.870920,3.206522,0.827526,-8.098107,1.223195,6.016214,-3.232893,3.830795,-1.991723,1.934086,-1.886387,7.354767,-4.948564,-5.478664,-8.075596,6.153863,-3.741807,0.926083,-9.525223,-0.636244,-3.611296,-1.799117,6.362176,1.153521,-6.616776,-4.809045,-8.618184,2.924184,4.830459,5.850053,-4.689127,-9.436249,9.991977,6.392180,-8.069179,-5.209841,9.120198,2.875074,-9.424169,-2.443903,4.889498,7.888563,-2.751839,-5.104136,-8.196665,9.192009,-4.670055,3.798594,6.581538,-8.588669,2.091943,7.943478,1.487918,4.187106,4.971917,-1.533637,-9.758024,-7.672607,-2.636624,-4.383318,7.022904,9.377871,-4.432642,1.838979,0.550403,2.688514,-3.729017,2.127341,5.329497,0.672515,-0.088310,7.542345,-2.344902,0.711218,1.959539,7.574252,-6.592903,-9.886255,-3.927457,-8.532709,0.349484,-4.357979,-7.355213,6.070047,-9.797471,4.676124,-3.071901,8.727465,-1.072018,4.981263,3.288936,-3.790234,-7.601011,-6.990445,0.700790,-7.002066,-3.798414,-4.749688,4.873385,-7.123485,7.439966,-6.290258,-0.004219,-8.849836,4.505298,-7.653407,-0.295132,-4.620195,-1.426864,9.080640,1.252971,-0.617633,-8.049663,8.811409,0.378761,5.698384,7.365470,-7.376591,-4.255719,-8.496054,0.348154,-2.968590,-6.010325,-9.215254,6.894321,-4.344538,3.048899,-1.586712,9.223142,4.075742,1.568221,1.404088,2.968970,-4.879618,-7.823848,9.992571,-4.455071,-0.746459,-6.173126,7.747627,-3.559885,-3.913008,-4.125044,-0.626418,-5.474547,-3.734637,-3.400563,-3.881869,-0.918592,0.739008,-8.436556,-6.058515,-9.839930,5.290939,4.246569,-7.242042,-7.318672,4.258627,3.713233,-7.419420,-2.493412,4.102807,2.816069,-0.965315,9.202844,-5.493441,-8.036515,-8.788112,8.625673,7.701357,-6.986519,6.076504,-7.155054,1.783169,-4.769665,-8.551305,6.943912,1.133561,5.255216,-7.919389,-9.574219,-3.540043,2.038374,9.866179,-1.834164,0.470351,3.750532,5.206166,0.892678,3.725872,0.534878,-2.554486,-2.395150,2.989328,8.285063,-1.240046,-5.393721,-4.864301,4.521212,1.354778,-6.078153,-6.084773,2.264084,-2.284562,-0.443987,-7.226508,9.704428,-1.154144,-3.813844,7.936831,5.771995,7.079472,0.135757,9.472923,-3.233183,-7.432106,0.535567,-1.448409,7.076295,-8.894144,-8.579577,3.849600,1.401859,7.843088,6.413996,-6.377601,-5.216267,-8.281870,1.959847,-6.417538,-9.786123,3.392712,0.637445,-7.380104,-4.023201,7.044249,2.411209,-2.669322,-4.237279,9.414815,-6.511914,9.675381,0.836097,-1.400260,5.643804,-3.326266,-5.572109,-8.264041,5.006723,-0.106293,3.465429,1.947343,-6.785088,8.193765,2.064526,-8.373860,-0.209314,3.350758,0.175150,7.872732,-6.762161,3.425922,9.132541,5.322535,-6.071027,-3.385156,1.285262,4.375611,5.282891,-7.423600,7.336412,-4.468287,-1.010623,5.190858,-2.850639,0.455223,5.345097,2.508211,-3.940144,1.285981,-5.206209,-4.016650,6.546146,1.568309,-3.711734,-4.715267,-4.301656,-3.891953,-9.037104,-5.915076,-0.574401,7.143296,-4.601069,-3.531829,2.279426,-1.265402,2.703950,7.657525,-4.648476,4.422324,3.217492,-5.769961,-5.578827,-1.912834,-9.685873,5.990663,-4.679493,-6.686652,1.867577,2.070737,2.867909,-3.230522,-0.100351,9.788659,-2.998431,-0.131968,-2.109571,6.329735,7.855490,5.919083,5.401609,-7.687217,-6.196867,-5.071977,7.892975,-2.665716,0.396286,9.884605,2.451175,-3.821617,7.539722,1.497107,6.239166,-4.312377,-5.516658,8.212802,3.336769,-4.271136,-8.427232,8.544992,-2.719068,-6.672655,5.015977,-1.324912,8.988008,-9.725089,2.707338,-1.110547,1.125258,2.451072,0.917439,0.102446,-8.055647,-7.137688,-4.509137,-1.387760,9.500631,5.256418,-0.508252,7.264177,-1.424663,-6.816366,9.815644,1.157346,0.148683,0.918134,2.778715,8.763722,-8.576368,-1.881665,-4.415902,2.881648,-4.468890,-7.438850,-4.063322,-0.176268,1.016334,-0.240717,3.185144,8.655695,-4.174346,1.751216,1.344406,2.744777,-9.413548,6.397299,-9.826886,5.068985,0.211192,6.273011,1.256642,-2.190716,-9.821597,-5.725441,-6.671672,6.417011,-6.190804,-7.719014,6.871847,9.907406,-9.472870,-8.976334,1.115305,2.387420,5.820117,6.238694,-2.951349,-9.006527,-7.475461,-6.601737,-9.496675,-6.501428,5.216920,2.524851,-2.533496,-2.282898,9.597420,-1.852019,-1.733994,2.192781,-3.926699,3.295883,-2.085726,-7.043478,-8.998819,-0.588293,-9.422877,1.190918,3.999730,-5.554700,6.023424,-5.831511,-7.257913,4.379419,-6.054805,-6.985783,9.843614,6.607008,7.502296,7.935489,7.408248,5.877252,-1.194434,3.488677,3.034165,9.129925,-3.930489,6.042060,-7.554845,-6.264977,6.319984,-5.572580,-6.895490,-8.653626,3.345896,2.896945,1.330841,-3.475515,7.320259,-9.471059,0.686221,5.584795,1.564888,-7.657285,5.613004,9.423509,-3.834053,-7.234609,1.181722,-8.242782,-7.296871,7.961219,-5.424946,4.181230,1.358668,-2.925576,0.240824,9.839467,-4.967976,9.673528,-2.990977,-3.171605,-3.240889,5.577921,-0.009787,-6.947703,6.545204,-1.262341,0.230700,4.717258,3.937145,4.798832,8.535178,-7.215754,9.783183,8.998756,-8.944504,-2.969755,-0.219660,-1.962041,9.246961,8.926610,5.665749,0.301406,7.019148,2.896766,-5.976494,-7.832786,0.918486,-9.151701,-1.598133,-0.143678,4.931457,1.735355,-1.554541,-9.224163,-7.864428,-4.130385,-3.507368,-3.767433,-4.983722,-1.721792,-2.216311,-1.761418,4.195621,-1.303140,2.119328,-2.060011,7.850194,-7.720574,-5.489640,-2.948543,9.626440,-1.036794,-6.316366,4.545029,-6.784939,0.231111,-3.671579,3.582998,-0.397921,9.553480,-2.878230,6.140289,7.156854,-6.221314,-2.363654,-0.596377,3.677609,3.866787,8.343862,3.828973,0.479303,5.799708,-9.462138,8.838591,-6.002519,-3.198331,1.853877,0.723548,-0.298003,-5.379481,-4.240513,-0.782890,2.140504,7.158379,-4.868066,-0.139513,4.413027,-0.708760,-6.860596,0.215263,-8.900555,-1.168508,6.955498,5.580841,4.389921,-3.556243,-8.877639,0.785577,0.783890,3.588420,0.718422,8.785467,9.476927,3.889135,6.405034,-8.725160,-7.459101,5.567596,-9.943661,8.791188,-9.361666,1.106689,-1.468138,-0.157523,1.096352,-7.030940,-3.373416,-2.960721,2.705271,8.372517,-5.642056,-4.593274,-6.910282,-9.468834,-6.783630,-1.364104,8.644692,-9.062518,0.949324,9.158250,-5.668174,2.690128,9.720971,-8.570763,0.038902,-7.580971,1.836850,7.148034,-3.796670,4.650296,7.797917,-8.148029,4.307100,2.480767,0.463975,-0.189489,-6.534626,-2.279568,4.474839,-6.452146,2.748067,-9.740194,8.746751,-4.614064,5.442103,2.396849,-0.081705,3.760950,-4.624902,-6.890919,-9.905210,6.573161,-7.574516,-6.502403,-8.742555,7.759887,6.576645,-5.868409,7.540118,4.790939,-5.283376,1.293939,-3.875085,9.873011,5.135847,-8.514760,-6.125823,-3.068529,-1.251751,-8.702149,0.553478,-4.308784,0.070725,-8.633222,7.836050,3.690537,-8.744004,-9.745444,6.296463,8.870057,7.131860,-4.169307,4.471092,4.858903,-7.428934,-7.726954,7.271622,-1.488982,6.106445,4.415211,-5.024438,7.158102,2.673851,4.446047,8.953534,-2.581554,7.339773,-0.604752,1.611149,-2.719709,1.279857,-4.031290,9.014537,2.921301,0.896973,6.050489,8.019897,-2.151080,0.819890,8.395948,-7.652855,7.366410,6.065869,-4.445227,7.059752,-5.931528,4.813733,2.996859,6.051195,0.808363,9.965278,7.831405,0.279122,-8.494946,2.397350,1.130429,7.334812,0.977453,-6.944106,9.008233,-0.081605,-2.425701,-5.326070,-6.455291,-5.147800,-7.791023,4.432849,-8.018882,9.287450,1.815165,0.599962,-1.339963,7.127006,4.660597,1.842221,-2.618687,-4.259270,5.141362,-7.617087,-8.202337,-3.390847,5.949710,-8.077837,-2.020926,-8.697234,6.614069,8.971106,-7.295158,5.016020,-4.038686,-7.775388,7.441438,-8.372566,-4.670204,-9.154950,0.088687,9.835762,-0.214866,1.245351,-5.978403,-3.155153,6.844009,0.681372,4.929523,0.568479,-6.873450,-8.188197,-1.749020,-7.621652,8.320114,5.347574,3.283617,3.406826,0.654347,8.114858,-9.716261,7.858000,9.100180,8.654120,1.927912,-1.630455,7.899823,4.886025,4.950205,-0.024817,2.829669,-7.685516,-5.926368,-2.442875,-0.081548,6.209193,-1.386406,-0.255965,-9.857645,-3.468381,-5.626561,3.435683,3.528000,6.820314,-5.285870,1.009077,6.733389,1.247649,-6.782268,8.474081,0.888259,9.527450,9.033016,0.835708,-4.359157,-3.159435,-3.481566,-5.649392,-6.940634,4.667837,6.289130,-4.197750,-5.871965,-4.975206,-9.468840,5.646841,2.412224,1.824285,-9.219814,-7.433912,-8.033801,4.411129,-8.306917,-8.706717,8.141179,5.792932,-3.115927,3.051836,3.632126,9.220865,-8.674777,7.159978,-6.905602,-3.705683,6.945776,4.516043,6.746741,0.505709,-9.442047,3.973995,6.533131,-8.196813,-1.343318,-5.605932,9.128622,2.148212,-8.728576,8.492746,7.973092,4.213622,-9.358442,-7.691591,7.665872,4.090457,6.367627,2.869504,-1.126086,9.631465,3.870575,-3.918064,6.792682,-3.244398,5.916074,-4.517042,-0.912324,3.989830,-8.579892,-3.572143,6.944558,1.315897,-0.799747,9.120049,-6.265459,-8.293203,-1.834719,0.126744,-1.489089,5.951772,7.786537,8.565227,4.827485,2.963911,-4.370444,9.266858,9.939841,2.381464,8.295222,-3.258137,8.253741,-7.407400,-7.618616,9.179849,3.244479,-6.393886,4.983224,-8.519781,-7.922931,-3.539019,-4.795023,6.873181,1.981474,4.124223,1.137041,-8.549651,-3.905603,2.038007,-3.880822,-8.433474,0.193388,5.872705,-7.505311,-7.300049,6.836722,0.790702,-0.494141,3.248990,2.698771,8.263362,0.755259,7.603845,-0.292616,-5.060902,-7.711439,-8.266537,1.761559,-1.696039,-0.761413,-5.766380,3.925644,9.683317,-9.529942,4.217270,1.641091,1.372601,2.425218,9.638898,3.759194,-8.931703,-5.626537,4.417528,-8.017426,9.483928,-0.894872,-8.639985,7.668317,-0.289707,8.818554,-7.882924,-3.032720,1.654197,-1.115873,6.547810,-8.394862,5.236348,-6.594526,-6.316419,-3.578594,3.090608,4.197468,0.662155,5.200780,8.662000,7.945385,-1.043626,3.024875,3.119523,-1.206066,3.283245,0.070892,8.914192,5.578882,-2.234036,0.770848,0.822168,-4.288719,7.368610,-7.409373,-8.549029,-2.052068,4.938175,-6.204215,-7.652455,0.284531,4.472765,-7.786339,-1.276673,-2.914157,-2.076408,5.944599,-8.023779,-5.202066,6.209100,-3.433635,-3.977194,-4.308231,-0.871670,2.538057,0.282842,-9.552837,1.618412,2.865887,0.604946,-8.088145,6.473498,9.504915,1.193965,-3.313079,-5.582198,-5.215501,6.220693,-3.232141,0.786935,-5.955759,-5.743522,7.680556,-7.345904,2.000819,-4.968851,1.653324,4.143462,-7.408364,-6.361878,-0.844974,2.045404,8.315191,5.359295,1.740088,6.705639,-7.504713,-1.267642,7.376274,-2.279160,-8.413756,6.900606,0.226350,-5.427059,6.923873,-7.181581,8.889477,4.769663,-7.105113,-1.951301,5.136476,-3.025304,5.805500,-9.840701,9.710562,-1.912473,8.652509,1.032770,-7.601183,-9.116891,-5.325808,1.467550,3.905332,-1.982230,-2.727630,6.942070,4.942516,8.445419,-1.155637,8.249756,-9.751421,-6.027212,1.776793,-0.019123,8.605786,-1.056452,8.303097,-4.076585,-6.063350,5.693985,9.762651,-5.807416,-1.281059,-4.840304,6.628984,-1.500308,9.343069,-9.879605,-2.250148,-2.888662,2.841138,9.915931,3.920687,7.128881,-9.349530,-9.310206,3.401901,-9.162211,-9.375077,6.286825,6.909575,1.138843,-7.625083,5.300933,6.896539,-2.687916,-3.184518,4.509015,8.468864,3.706891,6.429781,-4.663668,1.506640,-6.887779,6.293995,5.128988,9.614171,1.877459,-4.016931,-6.946791,-1.263582,2.407362,-6.281010,-8.088638,2.778588,-8.837156,1.808795,-3.500055,2.565395,-5.049034,-9.847950,4.644264,2.384358,6.764044,-9.000032,3.406295,-1.203023,1.608909,7.524651,2.257085,-1.850657,-5.862579,-0.851413,-7.800518,7.091638,-4.993313,-2.378911,-7.843773,-5.968811,-4.450024,2.078522,0.884064,-3.590504,7.612735,7.805774,-2.407275,-7.511832,8.961852,7.811006,-4.256617,8.401079,-4.045126,3.527514,0.754437,-2.267937,-1.354948,2.691778,-1.783717,-9.427572,3.607448,-3.068757,9.741414,-9.999481,0.748099,-2.550580,9.270373,-9.479019,-3.951860,-9.785606,7.092806,5.983187,-7.911308,2.155978,-6.853654,-9.902205,1.648376,5.879333,8.771317,-8.419083,-5.348379,5.288465,-6.326811,3.948769,0.885396,-6.434307,2.875616,-5.736963,-1.704058,-0.514564,3.617697,-3.606567,3.862127,-7.083018,-4.454098,9.075094,3.191293,-3.519765,-7.911856,-0.368089,5.290703,-8.126210,-6.322897,-3.450140,-4.069529,3.863929,-9.375385,1.409321,-1.938827,-6.189029,-4.455604,5.527849,-4.028762,4.864556,9.910748,-0.510924,-1.702951,4.786113,0.044924,0.075292,-1.401882,-4.273289,-0.722541,-6.713169,6.857724,1.511527,-5.269511,5.182136,-7.574397,2.700406,8.343727,-5.102996,-4.010185,-1.630969,-9.493949,-0.257384,8.589160,3.152295,-4.607035,-0.131441,-9.032718,4.955603,-2.849836,-6.674970,1.112733,-5.757705,0.340879,-5.555675,1.294930,-6.247374,-6.786505,-4.789919,4.717782,3.699353,-8.056360,5.321991,-7.002056,2.914804,0.694224,5.422893,-9.629879,3.898999,0.272709,1.521137,0.275165,-9.308823,-7.981149,4.115807,-2.336265,5.138032,-5.557843,1.177313,9.608235,8.947098,-6.107126,9.710425,-4.657685,9.551660,-7.522418,-2.129139,-8.678848,8.957981,-1.831211,-4.542910,-4.638948,1.205349,-8.640559,0.146665,7.434530,-7.373053,6.169288,-4.485945,1.980471,6.581586,6.957650,2.124863,-3.930846,-1.478982,4.027517,9.984389,2.659549,-5.347541,-2.852640,7.699128,-4.498452,5.592487,-8.642450,6.254913,3.563945,5.057500,6.014058,-3.660102,-1.735635,-3.724810,2.274451,8.622282,-5.251640,-5.668628,2.549980,-6.126548,-6.011102,4.826374,-6.032113,-2.617392,-5.135419,-3.557475,-8.312607,3.879310,8.266276,-1.756534,-8.595250,6.703937,6.226509,6.585672,-6.030640,-5.530560,6.774922,4.470203,-7.377050,-2.629046,5.273232,-5.020364,9.181578,-0.908978,1.888315,-7.602211,-7.444450,-3.581077,8.748416,-7.101060,-7.171641,-5.494448,2.257458,1.012339,7.896385,-6.566248,-2.335565,-0.607901,-4.985656,-9.880079,6.490660,1.468207,2.957772,6.091107,6.848934,-1.202791,-4.733785,-8.777143,-7.105927,-6.510812,6.163555,-0.705858,3.916137,2.629734,-7.923179,-5.761104,-1.319621,3.909259,8.657356,5.784373,0.449559,-3.594644,-2.596444,4.523141,-9.822088,2.108397,-2.523417,0.881064,-3.011945,1.737790,4.392357,6.224058,-1.638581,4.918468,1.740223,-7.162505,-6.121092,7.740066,9.261867,9.507661,-9.450590,2.548010,-0.572825,-3.934607,-6.113768,4.694871,4.034214,5.904209,-7.167762,-4.416581,0.376787,-2.661571,7.277904,1.690218,-6.889867,6.673158,0.010222,5.125997,1.550792,-9.338901,5.452441,5.386194,-3.134813,-6.052381,7.392811,9.711199,-8.221861,-4.407751,5.440735,-1.464055,-3.647388,-2.388021,1.821915,-5.528708,2.258918,-7.067999,-2.132644,-9.973642,-5.721935,1.548219,4.159982,5.103531,-1.602545,3.543448,3.212561,7.612288,5.113735,2.329129,8.850180,-4.991462,-6.917273,-1.870512,-5.559069,-0.508508,4.132075,0.478324,-0.172890,-4.166965,-1.668472,-7.678202,-3.889472,-2.355876,7.853804,-9.684491,8.045732,4.069419,0.713074,-4.337248,-9.861878,-8.741296,1.338518,-5.316958,-8.339608,-5.812606,8.551755,-4.002285,3.619514,6.827139,-8.953518,4.988194,-8.077931,-5.203386,-8.508545,-3.341202,8.639949,1.653680,-0.337002,-7.171628,-4.080834,6.586174,8.255276,1.982682,-9.200102,9.748349,-0.996376,-4.559990,0.133988,-7.718468,-7.809179,2.563310,-5.243479,-4.278449,-3.057631,0.234382,5.225841,-1.656188,9.377797,3.016225,8.096877,-4.027265,-8.164508,-9.801723,9.067853,1.615827,1.680345,8.835820,3.050192,-7.825124,-6.316248,0.444812,6.406250,-6.256798,2.782687,-3.250126,-7.840186,0.870612,-4.691929,1.593945,-2.766247,3.474850,1.122441,6.673008,-1.863647,-4.392823,-4.456527,-5.424682,-2.210833,-3.252381,3.777931,-8.422017,4.543975,-9.047084,9.637690,-3.075084,-6.302167,-3.260423,-1.538453,6.225030,1.173992], dtype = "float32")#candidate|4094|(2535,)|const|float32
call_4093 = relay.TupleGetItem(func_1611_call(relay.reshape(const_4094.astype('float32'), [15, 13, 13])), 0)
call_4095 = relay.TupleGetItem(func_1614_call(relay.reshape(const_4094.astype('float32'), [15, 13, 13])), 0)
func_2171_call = mod.get_global_var('func_2171')
func_2175_call = mutated_mod.get_global_var('func_2175')
const_4097 = relay.const([3,-3,9,6,3,-8,6,-1,-6,3,9,-2,-3,5,-3,9,-4,-2,6,-10,1,-4,-8,6,-7,7,-2,-9,2,-8,6,2,10,10,1,6,2,8,5,3,-3,-10,-9,-10,10,-7,-5,-8,-2,-10,-10,6,-6,-1,-6,-5,-3,6,3,-5,3,-1,3,-5,8,10,4,10,-10,-3,5,9,-4,-2,-2,9,-10,-6,-10,8,6,7,-3,10,-10,-2,-2,3,-6,2,-3,-3,-1,-4,10,2,9,6,6,7,-10,1,8,9,-2,-9,-1,-7,-1,-7,4,-7,-9,-7,10,1,3,-3,7,-4,-4,-3,7,-9,-5,-9,6,-4,-10,9,6,-9,3,1,-5,-8,-10,-4,-5,5,-1,-8,2,-1,-2,-2,10,9,-7,-3,5,-1,-6,-10,-10,-10,-9,8,-8,-6,1,1,1,-5,8,1,3,8,7,-2,-5,9,-1,-7,-6,-3,1,10,-2,2,-5,5,5,1,3,10,-8,-4,-6,9,-4,-10,-6,10,-5,10,-5,2,-8,3,-6,1,-4,2,8,3,-6,10,3,-10,4,10,2,-1,-3,-6,-9,-5,-4,2,-10,5,-8,-8,6,-9,5,-10,-1,9,-5,-5,4,9,6,-1,8,2,10,7,5,4,5,-9,5,10,-3,-6,4,-4,-9,-7,-10,3,9,5,7,-6,-5,1,-2,-2,8,3,-3,2,-3,-1,8,-2,5,2,1,8,-4,-8,2,5,-7,-3,7,-4,-4,1,10,-10,-5,9,-4,-3,-6,7,10,7,2,8,5,8,-9,-3,6,-4,-8,6,7,-10,-10,-10,-1,-6,9,10,9,5,-1,-7,-4,8,3,5,3,5,-4,-4,4,-8,5,6,8,-2,-2,5,-9,1,9,1,1,5,-1,-2,8,-7,-8,9,-8,4,-9,7,4,-9,4], dtype = "uint64")#candidate|4097|(351,)|const|uint64
call_4096 = relay.TupleGetItem(func_2171_call(relay.reshape(const_4097.astype('uint64'), [3, 9, 13]), relay.reshape(const_4097.astype('uint64'), [3, 9, 13]), ), 0)
call_4098 = relay.TupleGetItem(func_2175_call(relay.reshape(const_4097.astype('uint64'), [3, 9, 13]), relay.reshape(const_4097.astype('uint64'), [3, 9, 13]), ), 0)
output = relay.Tuple([call_4088,call_4093,const_4094,call_4096,const_4097,])
output2 = relay.Tuple([call_4089,call_4095,const_4094,call_4098,const_4097,])
func_4112 = relay.Function([], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
output = func_4112()
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4167 = relay.TupleGetItem(func_3940_call(), 1)
call_4168 = relay.TupleGetItem(func_3941_call(), 1)
var_4169 = relay.var("var_4169", dtype = "float32", shape = (3, 8, 12))#candidate|4169|(3, 8, 12)|var|float32
bop_4170 = relay.greater(call_4167.astype('bool'), relay.reshape(var_4169.astype('bool'), relay.shape_of(call_4167))) # shape=(3, 8, 12)
bop_4173 = relay.greater(call_4168.astype('bool'), relay.reshape(var_4169.astype('bool'), relay.shape_of(call_4168))) # shape=(3, 8, 12)
output = relay.Tuple([bop_4170,])
output2 = relay.Tuple([bop_4173,])
func_4183 = relay.Function([var_4169,], output)
mod['func_4183'] = func_4183
mod = relay.transform.InferType()(mod)
mutated_mod['func_4183'] = func_4183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4184 = relay.var("var_4184", dtype = "float32", shape = (3, 8, 12))#candidate|4184|(3, 8, 12)|var|float32
func_4183_call = mutated_mod.get_global_var('func_4183')
call_4185 = func_4183_call(var_4184)
output = call_4185
func_4186 = relay.Function([var_4184], output)
mutated_mod['func_4186'] = func_4186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4203 = relay.TupleGetItem(func_3940_call(), 1)
call_4204 = relay.TupleGetItem(func_3941_call(), 1)
func_1690_call = mod.get_global_var('func_1690')
func_1693_call = mutated_mod.get_global_var('func_1693')
var_4206 = relay.var("var_4206", dtype = "int32", shape = (80,))#candidate|4206|(80,)|var|int32
call_4205 = func_1690_call(relay.reshape(var_4206.astype('int32'), [2, 4, 10]))
call_4207 = func_1690_call(relay.reshape(var_4206.astype('int32'), [2, 4, 10]))
func_3356_call = mod.get_global_var('func_3356')
func_3358_call = mutated_mod.get_global_var('func_3358')
call_4209 = func_3356_call()
call_4210 = func_3356_call()
func_1033_call = mod.get_global_var('func_1033')
func_1038_call = mutated_mod.get_global_var('func_1038')
const_4221 = relay.const([-4,2,8,-3,-6,8,-7,-8,8,3,2,-5,-4,-9,2,-5,-10,-6,2,-9,2,-4,4,-10,-5,-10,-2,1,-9,-6,-6,-9,9,7,7,-2,5,8,9,2,10,10,-6,-7,-1,5,-4,-4,-2,-6,8,7,-3,3,-2,3,-6,5,4,-6,-5,-2,7,-3,8,-9,-7,-10,-9,2,7,-5,-10,4,2,-9,-2,7,-9,-10,2,-3,-4,-9,5,6,7,-4,10,9,7,1,8,-9,-2,6,-8,3,2,-5,-1,3,-2,3,7,6,-9,-3,8,-6,3,-4,-10,1,9,3,6,-8,-2,-2,2,-3,6,-1,-10,-5,-10,-1,6,-4,-7,4,10,-4,2,9,4,6,8,6,-6,-8,-2,7,-1,2,8,1,-10,10,1,-6,1,-6,-3,8,3,-8,-5,2,7,-5,-2,3,-1,3,-2,8,-5,4,-5,7,-8,-3,-9,-10,9,-1,2,-4,-5,-7,-8,-10,-9,10,5,-4,-2,8,1,10,-3,-2,3,10,-3,-4,-1,-5,-9,4,4,-10,4,10,6,-5,8,-4,3,10,-8,-8,-1,1], dtype = "uint8")#candidate|4221|(216,)|const|uint8
call_4220 = relay.TupleGetItem(func_1033_call(relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), ), 2)
call_4222 = relay.TupleGetItem(func_1038_call(relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), relay.reshape(const_4221.astype('uint8'), [6, 4, 9]), ), 2)
func_4183_call = mod.get_global_var('func_4183')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_4230 = relay.TupleGetItem(func_4183_call(relay.reshape(call_4203.astype('float32'), [3, 8, 12])), 0)
call_4231 = relay.TupleGetItem(func_4186_call(relay.reshape(call_4203.astype('float32'), [3, 8, 12])), 0)
uop_4247 = relay.acos(call_4220.astype('float64')) # shape=(6, 4, 9)
uop_4249 = relay.acos(call_4222.astype('float64')) # shape=(6, 4, 9)
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_4250 = relay.TupleGetItem(func_3330_call(), 3)
call_4251 = relay.TupleGetItem(func_3332_call(), 3)
output = relay.Tuple([call_4203,call_4205,var_4206,call_4209,const_4221,call_4230,uop_4247,call_4250,])
output2 = relay.Tuple([call_4204,call_4207,var_4206,call_4210,const_4221,call_4231,uop_4249,call_4251,])
func_4261 = relay.Function([var_4206,], output)
mod['func_4261'] = func_4261
mod = relay.transform.InferType()(mod)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4262 = relay.var("var_4262", dtype = "int32", shape = (80,))#candidate|4262|(80,)|var|int32
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4263 = func_4261_call(var_4262)
output = call_4263
func_4264 = relay.Function([var_4262], output)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4328 = relay.TupleGetItem(func_3940_call(), 1)
call_4329 = relay.TupleGetItem(func_3941_call(), 1)
var_4330 = relay.var("var_4330", dtype = "float32", shape = (3, 8, 12))#candidate|4330|(3, 8, 12)|var|float32
bop_4331 = relay.mod(call_4328.astype('float32'), relay.reshape(var_4330.astype('float32'), relay.shape_of(call_4328))) # shape=(3, 8, 12)
bop_4334 = relay.mod(call_4329.astype('float32'), relay.reshape(var_4330.astype('float32'), relay.shape_of(call_4329))) # shape=(3, 8, 12)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_4336 = relay.TupleGetItem(func_2978_call(), 2)
call_4337 = relay.TupleGetItem(func_2980_call(), 2)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_4339 = relay.TupleGetItem(func_3987_call(), 0)
call_4340 = relay.TupleGetItem(func_3989_call(), 0)
output = relay.Tuple([bop_4331,call_4336,call_4339,])
output2 = relay.Tuple([bop_4334,call_4337,call_4340,])
func_4349 = relay.Function([var_4330,], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
var_4350 = relay.var("var_4350", dtype = "float32", shape = (3, 8, 12))#candidate|4350|(3, 8, 12)|var|float32
output = func_4349(var_4350)
func_4351 = relay.Function([var_4350], output)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mod.get_global_var('func_4021')
func_4023_call = mutated_mod.get_global_var('func_4023')
call_4407 = relay.TupleGetItem(func_4021_call(), 0)
call_4408 = relay.TupleGetItem(func_4023_call(), 0)
var_4411 = relay.var("var_4411", dtype = "float64", shape = (16, 14, 10))#candidate|4411|(16, 14, 10)|var|float64
bop_4412 = relay.less(call_4407.astype('bool'), relay.reshape(var_4411.astype('bool'), relay.shape_of(call_4407))) # shape=(16, 14, 10)
bop_4415 = relay.less(call_4408.astype('bool'), relay.reshape(var_4411.astype('bool'), relay.shape_of(call_4408))) # shape=(16, 14, 10)
uop_4420 = relay.sigmoid(bop_4412.astype('float64')) # shape=(16, 14, 10)
uop_4422 = relay.sigmoid(bop_4415.astype('float64')) # shape=(16, 14, 10)
bop_4425 = relay.not_equal(uop_4420.astype('bool'), relay.reshape(bop_4412.astype('bool'), relay.shape_of(uop_4420))) # shape=(16, 14, 10)
bop_4428 = relay.not_equal(uop_4422.astype('bool'), relay.reshape(bop_4415.astype('bool'), relay.shape_of(uop_4422))) # shape=(16, 14, 10)
output = bop_4425
output2 = bop_4428
func_4434 = relay.Function([var_4411,], output)
mod['func_4434'] = func_4434
mod = relay.transform.InferType()(mod)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4435 = relay.var("var_4435", dtype = "float64", shape = (16, 14, 10))#candidate|4435|(16, 14, 10)|var|float64
func_4434_call = mutated_mod.get_global_var('func_4434')
call_4436 = func_4434_call(var_4435)
output = call_4436
func_4437 = relay.Function([var_4435], output)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
call_4456 = relay.TupleGetItem(func_3711_call(), 0)
call_4457 = relay.TupleGetItem(func_3713_call(), 0)
func_3889_call = mod.get_global_var('func_3889')
func_3890_call = mutated_mod.get_global_var('func_3890')
call_4463 = func_3889_call()
call_4464 = func_3889_call()
var_4465 = relay.var("var_4465", dtype = "int32", shape = (3, 9, 13))#candidate|4465|(3, 9, 13)|var|int32
bop_4466 = relay.subtract(call_4463.astype('int16'), relay.reshape(var_4465.astype('int16'), relay.shape_of(call_4463))) # shape=(3, 9, 13)
bop_4469 = relay.subtract(call_4464.astype('int16'), relay.reshape(var_4465.astype('int16'), relay.shape_of(call_4464))) # shape=(3, 9, 13)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4490 = relay.TupleGetItem(func_3940_call(), 1)
call_4491 = relay.TupleGetItem(func_3941_call(), 1)
func_3055_call = mod.get_global_var('func_3055')
func_3058_call = mutated_mod.get_global_var('func_3058')
var_4498 = relay.var("var_4498", dtype = "uint32", shape = (520, 1))#candidate|4498|(520, 1)|var|uint32
call_4497 = relay.TupleGetItem(func_3055_call(relay.reshape(call_4463.astype('uint64'), [351,]), relay.reshape(var_4498.astype('uint32'), [520,]), ), 1)
call_4499 = relay.TupleGetItem(func_3058_call(relay.reshape(call_4463.astype('uint64'), [351,]), relay.reshape(var_4498.astype('uint32'), [520,]), ), 1)
output = relay.Tuple([call_4456,bop_4466,call_4490,call_4497,var_4498,])
output2 = relay.Tuple([call_4457,bop_4469,call_4491,call_4499,var_4498,])
func_4523 = relay.Function([var_4465,var_4498,], output)
mod['func_4523'] = func_4523
mod = relay.transform.InferType()(mod)
mutated_mod['func_4523'] = func_4523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4523_call = mutated_mod.get_global_var('func_4523')
var_4525 = relay.var("var_4525", dtype = "int32", shape = (3, 9, 13))#candidate|4525|(3, 9, 13)|var|int32
var_4526 = relay.var("var_4526", dtype = "uint32", shape = (520, 1))#candidate|4526|(520, 1)|var|uint32
call_4524 = func_4523_call(var_4525,var_4526,)
output = call_4524
func_4527 = relay.Function([var_4525,var_4526,], output)
mutated_mod['func_4527'] = func_4527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_4540 = relay.TupleGetItem(func_2995_call(), 0)
call_4541 = relay.TupleGetItem(func_2996_call(), 0)
output = call_4540
output2 = call_4541
func_4550 = relay.Function([], output)
mod['func_4550'] = func_4550
mod = relay.transform.InferType()(mod)
mutated_mod['func_4550'] = func_4550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mutated_mod.get_global_var('func_4550')
call_4551 = func_4550_call()
output = call_4551
func_4552 = relay.Function([], output)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_4592 = relay.TupleGetItem(func_2978_call(), 2)
call_4593 = relay.TupleGetItem(func_2980_call(), 2)
func_3313_call = mod.get_global_var('func_3313')
func_3317_call = mutated_mod.get_global_var('func_3317')
const_4612 = relay.const([[9,7,5,-1,-9,5,-8,-4,-3,-7,-1,10,-3,-6,8,-10,1,5,9,6],[8,-3,4,1,4,-6,4,10,2,-8,4,-9,5,1,-3,2,-8,-8,-2,2],[9,-2,-3,2,10,8,-8,-9,3,9,-8,-7,-3,1,-6,-3,2,-1,10,2],[3,-2,-7,6,-2,7,-5,8,-9,-5,-3,-1,-6,10,4,-3,-2,-8,9,-10]], dtype = "int32")#candidate|4612|(4, 20)|const|int32
var_4613 = relay.var("var_4613", dtype = "uint8", shape = (2, 108))#candidate|4613|(2, 108)|var|uint8
call_4611 = relay.TupleGetItem(func_3313_call(relay.reshape(const_4612.astype('int32'), [80,]), relay.reshape(var_4613.astype('uint8'), [216,]), ), 0)
call_4614 = relay.TupleGetItem(func_3317_call(relay.reshape(const_4612.astype('int32'), [80,]), relay.reshape(var_4613.astype('uint8'), [216,]), ), 0)
output = relay.Tuple([call_4592,call_4611,const_4612,var_4613,])
output2 = relay.Tuple([call_4593,call_4614,const_4612,var_4613,])
func_4628 = relay.Function([var_4613,], output)
mod['func_4628'] = func_4628
mod = relay.transform.InferType()(mod)
var_4629 = relay.var("var_4629", dtype = "uint8", shape = (2, 108))#candidate|4629|(2, 108)|var|uint8
output = func_4628(var_4629)
func_4630 = relay.Function([var_4629], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4632 = relay.const([[[6,4,4,-10,-3,5,-4,7,-9,-4,10,6,2,10],[9,-1,6,10,1,-8,-2,6,3,5,4,3,-1,-4],[10,-8,6,3,7,1,-5,4,-3,5,-4,9,10,-5],[-10,6,5,-10,5,4,-9,10,5,3,-4,5,9,-9],[-6,1,-5,8,3,2,1,10,10,-6,-3,2,-5,7],[-3,-4,3,6,4,-10,10,-5,-8,3,-4,-5,-5,-6],[6,-8,-2,-7,-8,6,5,-1,10,7,10,5,8,10],[-7,-8,10,1,8,8,8,-10,-10,9,-6,7,6,-9],[-2,-10,5,-3,3,8,1,-7,-10,2,-7,-9,9,8],[-7,-2,6,-1,1,8,9,7,-2,9,-1,-1,3,-3],[7,8,10,5,1,7,-2,-7,-10,1,9,3,10,-10],[5,5,-7,-6,-10,-1,10,4,4,5,6,-4,-5,-4],[-3,7,-8,-2,5,1,2,8,-3,-6,-4,9,-6,-4],[1,7,2,6,8,8,7,-1,-3,-10,1,-3,6,8],[6,4,-10,5,-5,-4,8,-8,-1,-1,8,-3,7,8]],[[10,5,8,7,-10,-9,-3,10,7,6,7,-6,-1,5],[-7,-1,-9,-4,8,4,-4,-5,-10,-8,-4,-6,-4,-7],[-1,2,7,6,-2,4,4,7,3,-6,-8,-9,-1,-7],[-7,-7,-9,8,-2,6,9,-1,-8,-2,2,-3,2,-7],[6,7,8,-4,3,-5,-10,-9,10,3,-2,-6,-5,-7],[10,-2,-7,4,3,2,-1,10,-9,2,3,-5,4,-9],[2,-6,9,-1,-6,-2,4,-4,-3,8,-7,9,-10,3],[8,3,-8,-2,-8,3,-9,-3,-9,10,3,-3,-10,8],[-7,-4,-5,-2,-5,-1,-1,-6,-1,3,-4,-1,-1,-7],[7,1,-8,-6,1,3,-4,8,9,6,-3,-10,-2,-5],[-7,5,8,5,-2,-7,1,-10,6,-8,4,-7,-3,-5],[1,-9,2,2,10,8,-10,-5,-6,-6,5,-1,10,-5],[6,9,9,6,3,-3,-7,7,5,8,8,-8,-10,1],[9,-2,-7,-4,2,-8,-10,-8,-2,-4,-8,8,8,9],[5,5,-8,-8,-9,-1,-2,6,2,9,-10,10,-5,1]],[[6,-9,-10,4,-3,-2,5,-3,-4,1,2,9,10,9],[-8,9,10,5,-4,7,3,2,-3,-7,4,5,5,-10],[-3,-2,-9,5,1,-9,-10,4,6,-3,1,-7,9,4],[6,-1,-3,10,-6,-1,-6,5,5,-1,-5,3,8,2],[-2,1,10,-6,9,-5,2,3,6,-6,-7,-5,3,8],[-8,9,7,-9,-4,-2,-3,-9,4,-5,-1,-3,-7,-1],[-4,4,-9,3,4,5,-9,2,-5,-8,-2,9,-3,-2],[-1,-5,-1,-9,3,-8,-6,-7,-1,10,10,3,1,5],[-4,-6,-7,-2,-1,1,-4,3,4,-6,8,3,4,-8],[-9,8,-10,-8,7,-5,10,-2,-7,-4,-4,-9,4,8],[7,-4,-1,-10,9,7,-10,4,-10,-6,-9,1,-1,-6],[10,5,-2,-4,1,3,3,-6,4,-5,-6,5,-1,1],[-5,-9,10,4,4,4,-3,-7,-9,-9,5,-9,-5,8],[-1,10,-7,2,-6,9,6,7,-2,-6,-9,4,-1,7],[-9,3,-6,-5,5,-10,6,3,5,-1,-4,8,6,-9]],[[6,4,-3,-7,-4,-3,2,2,-5,9,-4,-8,1,-4],[-9,3,-9,3,8,2,-2,10,10,-1,-6,-6,-5,1],[-2,3,9,7,7,-1,-9,4,8,5,-6,5,-9,6],[-7,9,3,-1,10,-10,9,1,-6,9,-8,2,-3,8],[9,-7,1,6,-10,6,-4,-8,-10,2,3,-10,8,-7],[-10,-6,-10,-5,-10,7,-7,-1,-1,-7,9,9,-1,-3],[2,3,-4,2,1,-5,10,1,6,10,3,10,-7,4],[-7,-8,-4,10,-7,1,2,8,-9,9,3,3,-9,9],[-10,-1,-7,-6,7,10,2,3,-9,-4,-4,-4,-4,-4],[-9,-6,-6,-8,7,8,3,9,1,-7,-5,-1,-8,5],[-3,7,-3,-1,-2,-6,4,-5,1,-2,8,-5,4,3],[2,-4,-8,-6,-5,-4,7,-6,-1,2,6,4,-5,8],[-6,9,-10,4,-5,-3,-9,-7,-4,-1,-5,6,-7,7],[3,9,-8,-7,5,-6,-2,-1,5,-9,-3,3,3,1],[-2,-10,-6,4,9,-2,-5,-5,9,-9,-5,3,-9,8]],[[-6,2,1,-10,-10,1,-8,-6,-3,-1,8,-7,8,-3],[-4,1,-1,-7,4,9,4,5,-5,4,-1,-2,-4,-4],[-9,-1,7,5,6,2,1,-8,-5,6,4,-10,6,-6],[1,5,6,-6,-2,2,-5,10,8,-1,-10,3,-1,-1],[-4,-7,8,6,-10,8,3,9,-4,4,-6,-3,3,10],[-8,3,9,-7,-4,10,5,-5,8,6,3,-4,-4,5],[4,1,8,1,4,4,-1,1,2,4,-9,4,8,-1],[6,10,-3,9,5,-7,-10,-8,-5,8,-6,-1,-1,-7],[4,1,-5,-7,2,-8,-8,9,-7,-10,7,-4,-10,-7],[10,10,-1,-4,-2,5,-9,-2,-9,6,9,8,5,6],[-7,-6,7,10,7,-6,-5,4,3,10,8,-8,1,2],[8,-1,10,-3,-3,5,-7,10,2,-5,-1,-7,-10,-7],[-10,8,6,-4,-7,3,10,-10,9,-8,-4,-5,9,-6],[-6,-1,-2,6,-2,-4,7,-9,-7,3,-10,8,7,3],[-7,4,-3,-2,8,5,-10,9,8,6,8,5,4,6]],[[-9,7,7,9,-8,7,3,-6,-2,-2,-2,10,-2,1],[-8,-7,-5,1,6,6,-3,10,6,10,-10,2,3,-5],[7,-10,3,10,-2,2,2,-3,-2,2,-8,7,5,1],[1,4,10,-3,-3,-2,3,-4,3,-2,10,-2,6,-8],[9,10,5,-8,-10,-9,1,10,7,-10,3,5,4,4],[5,3,-1,-3,-7,-3,-9,9,-6,-5,3,5,-5,-9],[-6,-3,5,4,-6,-4,6,-9,-4,7,5,4,9,-6],[-8,5,8,-4,3,10,-4,4,6,7,10,-9,-7,-5],[-10,1,5,-1,-6,-7,2,-8,-6,6,-6,1,6,2],[-2,-8,-7,-2,6,5,-8,-1,-2,9,-1,-9,8,10],[-9,-7,-9,-3,5,9,9,-3,10,9,3,9,3,-9],[-7,4,3,-9,6,1,7,5,7,5,2,-7,-2,-8],[-6,5,-8,-1,8,-5,4,-8,-7,-7,10,10,-5,-8],[-5,1,3,-7,3,-2,-10,7,-3,4,-7,2,4,3],[1,6,8,-9,3,2,6,9,2,-9,-3,5,-6,1]],[[-1,7,6,9,-3,4,2,6,-9,3,2,-6,-7,-5],[10,-10,10,4,-5,7,1,5,-7,-3,-7,8,10,-2],[-7,-9,3,-9,-9,7,7,-3,9,-4,-1,3,-3,5],[8,-2,6,-1,1,2,-6,5,6,4,5,2,-4,4],[-7,-3,-8,-10,-4,-3,-3,-4,-5,4,6,7,-5,7],[-3,9,2,6,4,-4,9,3,4,2,-8,-1,6,6],[-6,-3,4,10,1,-7,2,-5,-1,-2,8,4,-10,-10],[2,8,-9,-6,2,-10,-2,9,-8,-2,3,-4,7,6],[-3,-4,4,-3,-4,7,-7,-10,-6,2,3,3,-7,8],[-4,-3,-3,-2,-10,8,-5,9,-4,10,8,-3,5,9],[-4,-10,-1,3,-10,1,-9,-6,-5,-6,-6,6,8,6],[-5,7,-4,-8,-10,1,8,-1,-10,-3,4,4,8,5],[-9,-3,-10,6,7,-8,-6,8,10,3,8,7,-7,-1],[10,3,9,-6,6,2,5,-2,-9,-5,2,1,1,-2],[-8,5,1,5,-6,8,2,-7,9,8,-2,9,8,-5]],[[-9,-9,-2,-2,4,2,10,-2,-1,1,-10,10,-1,-7],[-10,-10,-9,-3,-3,3,-4,-7,-6,-7,10,7,-7,2],[-5,-7,-1,-3,5,-1,-10,-8,-9,9,6,4,-5,5],[-7,10,-8,-6,-5,1,-4,-8,7,9,3,-5,5,4],[-10,2,6,1,2,-4,8,-6,-8,-9,2,-2,7,1],[-5,-1,-4,4,6,3,-3,-4,-2,3,5,-2,-9,10],[-10,-7,-8,1,3,1,1,7,10,-6,2,-10,-1,-3],[-9,-6,6,5,4,-5,3,6,9,-9,7,-9,5,7],[6,-8,-5,-3,10,6,-7,-10,-6,-6,2,-3,-3,9],[4,5,9,4,-10,6,8,-5,-4,7,1,-6,1,3],[2,3,1,-7,-3,-6,-9,-4,-6,-3,-6,-10,-4,-2],[-6,8,-9,5,10,2,-6,-10,-1,-3,5,-5,4,10],[4,2,8,-9,2,-9,-9,-10,9,9,6,5,7,6],[9,-1,9,6,-5,4,-10,-2,6,-3,5,5,3,-7],[-3,-2,-9,7,8,3,6,-1,-4,7,-8,-7,2,4]],[[-3,6,4,-8,2,-8,7,-2,-1,-3,-9,-5,1,-9],[5,6,6,3,9,10,-9,2,2,-10,10,-7,4,-7],[3,7,1,7,-7,-7,4,-10,8,10,5,-2,-5,-5],[1,5,-7,-4,-6,-6,-1,-9,-2,9,-10,-9,-1,1],[8,-5,5,-4,2,1,-9,1,1,7,9,-5,-7,6],[-5,-3,1,3,8,8,-3,8,-7,-2,-8,-2,-6,-6],[1,-10,8,-1,-1,-7,-2,-1,-6,-9,-7,-9,-1,-2],[10,-2,1,-9,-7,-8,-7,-9,1,-5,6,-10,-6,-8],[2,8,9,4,3,-8,4,-9,2,1,6,2,10,5],[-3,-7,-2,-8,6,-10,5,-9,4,1,6,1,8,5],[7,7,4,6,10,8,6,-5,4,4,-4,5,-9,-3],[10,-6,-2,7,-9,-4,5,-5,8,3,-5,-1,2,-10],[-2,7,-3,-9,7,10,6,-7,4,5,-3,5,5,-9],[-3,9,4,-7,10,3,-9,5,7,-8,3,6,-2,-4],[-8,-8,-3,-4,5,-3,5,-4,9,2,1,-8,5,-2]],[[6,6,10,2,-10,-10,8,-10,9,9,-3,-5,-3,1],[-8,5,-1,-7,4,4,-6,9,-8,-8,10,7,2,-8],[-9,-3,1,3,10,3,-7,-7,1,-10,-2,-8,-10,6],[8,-7,4,-6,-9,-7,6,2,-8,10,-5,-10,9,-9],[-4,-10,-10,9,-8,-9,3,7,-7,-3,-10,-4,-3,1],[-2,-2,-9,9,9,5,5,4,1,7,10,1,-5,4],[1,2,8,-10,-6,6,8,-1,-5,-3,6,-4,-2,-8],[-2,-6,10,6,2,6,-6,-1,6,-9,7,-9,4,1],[10,4,4,7,-10,5,-9,-1,-5,-1,-4,-4,-4,6],[-8,-7,-6,4,-3,-5,4,-6,-1,9,-9,9,-1,-8],[7,7,1,-8,7,9,1,-4,4,-9,8,10,-8,-3],[-1,-6,-5,6,8,-4,-5,6,7,-2,-3,3,-9,-1],[2,-8,4,-3,-8,6,-4,3,-3,5,1,10,-10,-5],[8,8,9,2,1,-4,-6,-8,-1,8,-2,-6,2,-8],[1,-3,-1,-8,8,-6,7,1,2,-2,10,9,-2,-6]],[[-10,-9,10,-9,-3,-3,-9,2,-3,-9,-2,-8,-10,-6],[-1,-1,9,-2,-9,1,-10,-7,-7,6,1,5,-6,-6],[9,3,6,-10,3,3,-3,-6,-1,1,-1,10,-2,-5],[-5,7,5,-3,-3,4,-3,7,-3,10,-7,4,9,10],[-6,-2,-8,-6,-10,-3,-1,10,-8,-1,-2,-5,-3,-7],[-4,6,3,-2,6,3,-6,-8,7,-1,4,6,-7,5],[1,-4,8,-4,5,-2,-5,-4,5,-9,9,7,-4,-9],[5,10,-7,-10,4,8,1,10,-6,8,8,6,-7,-1],[8,-3,4,-9,-10,8,3,5,5,-2,10,4,7,-5],[3,-7,-6,3,6,10,1,1,-3,9,-2,9,-3,1],[-3,4,2,8,-6,7,5,9,5,-1,8,8,-3,1],[-2,-5,9,-2,5,-9,10,-2,-1,-10,-4,-9,-1,10],[4,1,4,-10,5,3,1,-10,6,-4,4,-7,5,1],[-1,-1,2,10,7,-10,3,2,-5,-4,6,-10,-2,-1],[3,2,-2,-10,4,-2,-3,3,6,-9,-2,2,9,-10]],[[-10,-7,-2,-8,3,-1,-7,9,-5,-5,2,4,5,1],[9,-8,-10,-2,5,9,8,-8,-2,7,1,-10,6,-6],[9,8,9,-7,-10,-3,8,4,1,3,10,3,-3,-4],[-7,1,-10,-4,-4,7,-1,-10,4,7,7,1,1,9],[-8,-5,7,-3,-7,-5,-9,9,-5,-10,-5,4,-8,-1],[10,-5,7,3,9,1,4,-9,8,-2,-8,-2,9,7],[3,-8,-2,-1,-6,2,-10,-1,7,-7,9,10,4,-10],[-9,2,-9,-7,7,7,-4,-9,2,-1,10,-5,-9,-8],[-6,8,9,9,2,6,-6,3,2,4,-1,-2,-5,2],[10,9,-10,3,-6,-5,8,10,-6,6,6,-1,-7,10],[10,5,3,7,-10,-5,1,-7,-3,7,-1,-5,-2,-1],[-9,-10,2,10,1,1,6,-8,-5,-9,3,6,-8,-8],[-9,-1,2,9,7,3,7,-9,-9,-3,3,3,-10,7],[-1,-8,8,3,1,7,-3,5,-4,4,-1,-8,-9,-10],[1,6,-6,6,-6,-5,-3,6,-3,-8,5,-2,1,3]]], dtype = "uint16")#candidate|4632|(12, 15, 14)|const|uint16
var_4633 = relay.var("var_4633", dtype = "uint16", shape = (12, 15, 14))#candidate|4633|(12, 15, 14)|var|uint16
bop_4634 = relay.greater(const_4632.astype('bool'), relay.reshape(var_4633.astype('bool'), relay.shape_of(const_4632))) # shape=(12, 15, 14)
output = relay.Tuple([bop_4634,])
output2 = relay.Tuple([bop_4634,])
func_4638 = relay.Function([var_4633,], output)
mod['func_4638'] = func_4638
mod = relay.transform.InferType()(mod)
var_4639 = relay.var("var_4639", dtype = "uint16", shape = (12, 15, 14))#candidate|4639|(12, 15, 14)|var|uint16
output = func_4638(var_4639)
func_4640 = relay.Function([var_4639], output)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4657 = relay.TupleGetItem(func_3940_call(), 0)
call_4658 = relay.TupleGetItem(func_3941_call(), 0)
output = call_4657
output2 = call_4658
func_4678 = relay.Function([], output)
mod['func_4678'] = func_4678
mod = relay.transform.InferType()(mod)
mutated_mod['func_4678'] = func_4678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mutated_mod.get_global_var('func_4678')
call_4679 = func_4678_call()
output = call_4679
func_4680 = relay.Function([], output)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3748_call = mod.get_global_var('func_3748')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_4757 = relay.TupleGetItem(func_3748_call(), 0)
call_4758 = relay.TupleGetItem(func_3750_call(), 0)
func_4349_call = mod.get_global_var('func_4349')
func_4351_call = mutated_mod.get_global_var('func_4351')
const_4772 = relay.const([-3.131709,3.518901,-0.411514,-3.582941,4.351083,2.139101,1.374021,5.369908,-6.907483,-0.408993,0.230041,8.222869,-1.769150,9.861186,6.783376,7.155986,-6.373489,-8.451247,-1.755077,-3.755623,-8.162765,3.507086,3.760154,6.654742,-3.498716,4.704907,-2.569151,-5.919459,2.838762,-3.998841,-5.373973,-0.739051,-5.534446,7.193161,8.532101,1.730955,9.274887,0.384111,7.479415,-3.065980,0.508217,3.897413,-2.472379,-2.282882,-7.065373,-1.987565,-8.065135,3.670790,4.593979,-7.513876,-6.733865,-1.741916,-8.703286,-1.125854,4.414958,-7.946425,-3.764813,-9.103898,7.676487,-7.779234,0.469060,-0.946827,8.231452,9.001472,4.946327,9.902107,3.084790,0.924977,-3.611935,2.773863,3.068891,-0.118092,4.622509,-4.541302,1.223166,-3.561588,-4.965193,7.762902,-8.045828,-8.413900,-0.668334,5.750777,-9.776192,9.870969,8.363661,-4.246497,-6.967841,-8.807644,7.029327,-2.477818,-1.350413,4.556159,-8.147007,-8.385443,7.514444,-2.550151,5.470704,1.161393,-3.732232,-8.677816,0.574738,-3.817583,9.779746,-0.957875,-9.199254,3.533302,0.542429,2.017343,0.881766,6.861339,-3.529200,-1.212121,4.612041,7.411475,5.878840,3.591144,-0.153566,-4.460762,3.468875,-9.124636,-4.866670,-1.611506,7.829904,4.417912,8.489569,3.934977,-6.769255,8.732094,-3.645614,3.898176,-0.131816,-4.815017,5.822713,-4.491917,9.552445,-4.308650,8.539357,-7.665498,-2.512129,9.772220,-7.192053,0.653238,4.941614,-1.156499,-5.393164,7.228395,0.081464,0.542319,-9.765039,3.301477,4.994170,9.919951,-3.434888,3.581175,4.168427,-6.050504,4.729390,-1.517465,2.671222,-5.030332,3.555622,-5.805448,-5.247007,5.882073,-3.615522,-0.691145,-3.938391,-9.767265,4.139971,2.129699,-2.930254,-9.607568,5.346761,-5.551965,-9.787720,-3.890675,-3.367029,-6.856536,9.533976,-3.376021,-0.604136,7.752652,-5.186088,9.866341,9.534979,4.250454,-8.910468,8.203838,-1.578987,-1.173014,7.813297,-5.650676,-1.117198,-7.367416,-5.816797,9.041217,5.538942,2.342533,-1.433579,-5.480782,1.699020,4.625578,7.714249,-6.945373,6.694316,-8.141902,9.158073,-4.854786,3.126828,2.209331,3.688512,-2.570389,3.755531,5.702011,-1.506763,2.418228,6.991601,-4.783770,-0.878883,-4.736582,9.092566,-3.181975,-7.543710,-7.679113,2.859173,5.244506,-7.002950,6.742844,-4.404214,2.134582,-5.304807,-4.574447,-2.452881,5.071555,1.061943,-4.418604,-5.584927,-5.645910,9.387406,9.805140,-5.630901,-1.866497,-8.147402,3.517927,-9.750841,-5.353511,8.299713,-5.295047,0.780536,-7.577596,6.606259,7.843121,8.417313,-9.498226,1.084540,2.698606,7.449599,-2.108161,-5.852542,-2.873455,1.273470,5.327876,4.567022,-2.826376,3.779740,-6.743471,7.639579,6.699192,7.185633,2.093078,4.583494,-1.554276,-8.073872,-5.141828,-2.500097,4.065055,9.069337,9.328944,-1.610163,3.826964,-8.504364,2.676171,-7.205955,5.177954,-7.966228,-1.928137,4.120181,-2.977223], dtype = "float32")#candidate|4772|(288,)|const|float32
call_4771 = relay.TupleGetItem(func_4349_call(relay.reshape(const_4772.astype('float32'), [3, 8, 12])), 1)
call_4773 = relay.TupleGetItem(func_4351_call(relay.reshape(const_4772.astype('float32'), [3, 8, 12])), 1)
func_4183_call = mod.get_global_var('func_4183')
func_4186_call = mutated_mod.get_global_var('func_4186')
call_4774 = relay.TupleGetItem(func_4183_call(relay.reshape(const_4772.astype('float32'), [3, 8, 12])), 0)
call_4775 = relay.TupleGetItem(func_4186_call(relay.reshape(const_4772.astype('float32'), [3, 8, 12])), 0)
var_4782 = relay.var("var_4782", dtype = "float32", shape = (288,))#candidate|4782|(288,)|var|float32
bop_4783 = relay.not_equal(const_4772.astype('bool'), relay.reshape(var_4782.astype('bool'), relay.shape_of(const_4772))) # shape=(288,)
output = relay.Tuple([call_4757,call_4771,call_4774,bop_4783,])
output2 = relay.Tuple([call_4758,call_4773,call_4775,bop_4783,])
func_4791 = relay.Function([var_4782,], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4792 = relay.var("var_4792", dtype = "float32", shape = (288,))#candidate|4792|(288,)|var|float32
func_4791_call = mutated_mod.get_global_var('func_4791')
call_4793 = func_4791_call(var_4792)
output = call_4793
func_4794 = relay.Function([var_4792], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4822 = relay.const([[[-5.643744,-9.310207,9.330138,1.951341,-3.344086,9.422192,-4.742432,6.690526],[-1.313244,-4.201226,-9.099260,-0.370354,-8.315536,5.451915,-3.303366,-9.496969],[-3.171812,2.854896,4.639542,6.621588,6.354900,-9.070429,3.189702,-4.961395],[-8.021982,-9.841453,0.848399,5.901813,7.484155,3.991828,1.704715,-5.927098],[-5.213205,-5.510004,-1.047013,-9.382682,-1.106624,8.327198,-7.209000,-1.487521],[6.573499,8.392489,1.200173,-2.266428,-7.739969,-2.577541,-7.735193,0.092175],[5.372738,-1.527291,2.876160,8.605364,6.478926,-9.238578,-8.135045,-9.769422],[6.809403,4.808046,-7.059599,0.178660,1.296360,7.032960,-2.126685,-1.397437],[-4.913530,-0.280308,8.431962,5.239584,-8.804452,-7.179796,-1.108127,-7.329631],[8.711270,-5.440336,-3.051452,-1.687920,-6.392113,3.249800,-1.277937,-6.203131],[-7.694672,3.417321,-2.143554,-6.524905,-1.350691,7.748132,2.668278,-3.813402],[3.400131,-7.984826,-5.858118,5.067918,-4.606721,3.184417,1.806849,0.971308]],[[-6.987079,9.885350,-7.856599,-0.063288,8.693827,8.042358,4.606976,1.384964],[6.489787,-9.225814,-7.686238,-8.815867,-3.038898,7.373816,5.665373,8.642608],[1.329783,-9.730591,-5.901772,-7.264644,-3.279103,-4.105298,5.862370,7.001464],[-6.408351,-8.363295,6.840102,4.522562,9.154757,0.309264,-9.938405,-6.215829],[-0.774459,5.601439,3.412494,-8.852671,3.264731,-2.730630,-3.976067,1.128732],[7.649364,5.820777,-1.106246,4.460432,2.701172,-2.345562,0.959347,-1.561400],[7.635157,4.193346,3.665257,6.195857,-5.869990,-8.524329,9.504193,7.370440],[4.830953,9.697309,-5.372244,4.236371,-3.671073,2.830792,3.427839,0.660344],[4.187434,3.454066,-0.442610,5.977851,-1.945839,7.177597,-7.651870,4.721775],[7.098749,0.439720,4.232722,0.025019,1.367866,6.600098,-6.609792,5.000058],[4.490967,8.059806,3.976902,4.833533,-7.738416,9.335272,6.362311,-5.829372],[-8.774486,-2.661741,1.880249,7.715612,-5.242487,2.020646,9.410923,-8.377390]],[[1.502146,-2.601879,6.462928,9.497349,-8.545683,-6.648770,2.849348,-6.377034],[-9.249767,2.513283,-1.372249,-4.734222,6.728647,-8.788866,7.907316,-3.117722],[-5.430891,9.420750,-0.400921,2.503347,-5.544161,-1.424874,-5.598167,1.625087],[-8.794739,-4.436628,6.080217,9.193358,-8.931421,7.864589,1.833877,2.990749],[-6.784365,8.112292,4.695674,0.102915,-5.363195,9.341508,-4.549953,4.287160],[3.234199,9.451190,1.156371,4.614696,-8.531126,2.886634,-8.171831,4.240467],[2.336687,4.367455,8.064516,-6.510899,8.820998,7.693792,-5.281143,-1.962256],[-9.284885,-6.435622,-6.154350,-2.248722,-1.530458,-1.657261,-7.458211,0.878555],[-5.307247,-5.400052,6.451491,8.654854,-7.707320,-7.903197,-4.493822,-8.744214],[6.128365,-4.770188,-7.334069,-3.793497,-4.699214,-9.256451,4.737358,-5.408498],[-7.124372,2.335440,-1.531706,-2.625211,5.902396,2.689070,3.098421,5.525064],[7.265660,7.217158,-1.604208,-1.739017,-0.875890,0.338271,0.388705,-1.932125]],[[-9.013128,4.893379,-9.745774,5.804149,9.671285,7.387523,-4.101943,7.131343],[-7.407572,5.136741,-7.047727,4.753630,-3.541399,-7.775021,2.310181,-6.549021],[5.278266,-1.547681,0.420956,1.497304,-5.190090,-5.350546,6.521022,-9.830228],[-2.252437,-4.575880,-2.459599,2.914763,-0.039595,-3.613688,-7.282380,0.926199],[-9.641310,-5.361051,4.818456,-1.535167,-2.935429,-1.395773,-7.325062,-0.508559],[2.103402,-1.071240,-2.526519,-6.358157,5.830813,-7.169311,7.625970,2.708802],[0.704514,-2.918025,-9.259085,7.620743,8.343253,-3.355076,-6.371550,-9.890428],[-3.704100,2.205193,-8.738891,4.847124,-5.000967,-5.231569,-1.298948,-9.387773],[8.321335,-1.414892,4.743914,-4.295367,-1.941000,1.153757,5.863833,-2.669309],[-0.060116,8.720277,8.839663,-1.593698,-3.651082,-7.863769,4.244501,7.379274],[2.357627,-9.645282,4.960625,8.722309,1.033133,-7.646542,-3.006168,-7.809762],[9.079703,8.713809,4.268788,-5.000523,-9.825273,-1.759109,5.868098,-2.678291]],[[0.379983,-7.365579,-3.475777,-5.566892,-8.022677,-1.672933,5.563217,6.638180],[-2.513338,-9.076875,-9.811622,-0.948422,7.550618,-2.854892,-8.387626,7.221323],[6.721249,-7.911493,5.636769,-5.921342,3.679149,-1.710260,5.218135,0.548273],[-9.745862,1.633814,1.777827,-6.898959,-6.351658,3.412788,6.554903,5.411801],[-3.480508,-0.138458,-9.524629,5.362442,-2.926359,5.157403,0.778237,9.936933],[-2.144725,7.937752,-9.094267,-2.847675,-7.929069,1.722295,-4.527659,9.618407],[-2.757323,-9.909379,-0.137195,1.080813,9.357052,-6.851282,1.719706,-7.734170],[3.273007,6.754663,4.962519,-4.728703,-4.625630,-8.368048,-9.175038,6.525574],[9.918383,-2.579529,-8.634187,-7.055173,-9.506875,-4.353560,4.906430,4.533523],[-4.540561,-9.182007,-3.548558,-8.766519,2.639604,6.848201,-5.803848,-5.368757],[-4.081942,5.617408,-0.766690,-0.654009,-7.003724,5.489838,4.890600,-3.566520],[7.007800,-4.433227,-4.527414,-6.906344,8.475698,1.812233,6.049986,2.344337]],[[-8.881598,-3.658996,1.686676,9.726399,1.056374,3.061774,1.509312,8.348873],[-4.840625,-3.251506,-7.770859,-1.018053,-5.856558,1.424229,-1.177416,3.471984],[3.279442,5.605771,-7.117651,-9.211941,8.798568,1.969972,-1.123386,-3.584323],[-4.622018,0.816971,2.926823,-9.093158,5.126019,4.900905,-2.826723,5.957211],[-5.604269,-8.807944,7.198509,5.027043,-4.490225,-8.134691,6.883988,-2.768640],[0.731674,-8.262095,6.147682,2.171165,-1.174384,-9.353437,1.984609,-9.624903],[5.631850,6.230304,3.166013,9.860182,7.517265,-0.794272,-3.133725,-4.299263],[-2.832594,9.816602,9.086882,0.174324,8.467011,-5.979666,3.432305,1.124562],[-6.701568,1.423877,1.194899,5.229346,-1.316971,2.693614,-6.484019,5.066079],[-1.530465,2.424217,5.683204,0.231278,-0.062999,8.640013,-3.924511,-3.607727],[5.907106,-8.420950,1.773773,6.405635,-0.040123,-8.108777,-5.063770,1.691158],[-1.022439,-7.562490,9.591437,2.656069,-1.389196,4.266697,0.144601,1.651548]],[[-7.064272,8.693724,1.712500,5.706707,6.138644,9.326919,8.773649,-0.204193],[6.983463,1.592415,-6.318116,-8.177931,-3.896380,3.346879,-6.303158,-2.899091],[-5.845253,-1.540327,8.859184,7.031680,8.780113,-1.494486,-6.362256,4.225484],[-4.253757,-1.408776,4.536686,7.394990,1.106663,1.251975,3.862038,-6.451342],[2.690133,5.181623,-1.823193,6.245763,6.637677,9.934343,-1.036985,8.218029],[0.924990,0.781571,0.923964,-1.781643,4.533336,-6.110661,-7.359110,-5.851048],[9.960749,-4.878639,5.326434,3.210438,1.028471,-8.070784,3.342855,-7.362640],[1.338338,7.529686,-9.998621,6.019782,8.781216,-5.615028,-6.831311,9.244416],[6.166603,-3.666087,9.743792,1.324461,-1.182989,-6.415528,-6.183297,-8.118278],[-9.362502,-7.963632,-5.980009,-2.079831,7.973526,7.758378,-2.561331,0.089627],[-6.892530,-0.134001,5.771161,-1.098483,1.899557,-7.264023,-7.413647,3.240992],[-9.625049,1.562595,-8.689240,6.632243,8.492747,1.946480,8.561476,9.451472]],[[-3.834079,-9.962491,7.371994,6.088678,7.862444,-5.565387,2.860489,1.917071],[2.526560,-3.519235,-6.957593,1.876672,-4.284169,9.450569,6.794834,7.620552],[-4.748788,-2.569488,-9.385762,-5.431745,8.219574,4.642578,7.175089,-9.607682],[-5.898124,-9.215186,-8.593228,-4.346853,-2.589398,6.377708,-3.190151,-3.764955],[-7.269643,-2.575201,-7.733593,-4.537813,-9.314387,-4.088546,-4.974833,-5.959538],[5.162694,-6.750019,4.859696,-5.636931,-2.977299,9.579772,-2.951680,-4.854659],[-1.584218,-3.158352,5.114374,-9.843683,-7.345219,7.399643,-2.520504,7.487655],[-1.595557,4.882949,-1.470018,-5.204471,3.011055,2.806078,6.034159,-3.203402],[0.689979,-1.241141,-6.988957,-6.050247,-5.454691,9.633597,6.096533,-2.743240],[-4.544949,6.373903,-3.095822,-0.364556,-8.718034,6.195197,0.552423,7.133000],[-4.796795,9.569676,5.717933,-9.596245,-6.745601,-9.692967,-2.193764,7.212156],[-7.511932,-6.707014,-7.265019,4.933834,-7.058912,-5.639331,-6.317942,-0.297472]],[[-5.145294,0.705905,0.190261,6.899520,-8.884612,-1.024786,-3.330236,3.883090],[-8.803330,8.416204,-5.290687,6.902810,-0.951759,-5.037402,-4.132679,9.839058],[9.147375,-6.893011,-6.023233,-1.065316,7.421251,-9.286833,-5.925109,-8.843038],[1.154380,-2.055322,-5.422165,-5.197915,3.075568,-3.722995,-8.702364,-1.184149],[-9.424528,-9.864040,-1.859004,2.350496,4.242757,-9.717072,-2.589207,0.200494],[-3.319447,6.467482,4.724859,5.680353,7.250280,-2.790332,-2.512869,9.720037],[6.147326,6.739216,-1.853013,6.429997,-1.153880,7.553680,1.493792,-4.997810],[-0.889336,-5.698293,-0.318116,5.026369,4.659082,5.079432,-8.133117,6.207784],[-4.324450,-8.349254,9.978884,2.939316,2.147383,-6.180457,0.095451,-5.044204],[7.454630,6.003847,0.059544,9.381295,1.088038,-7.257281,4.430470,6.532655],[-4.175299,-1.787982,-5.527001,-8.109806,-4.419504,-5.372555,7.896146,-6.926904],[1.948892,-1.453152,-0.328123,-7.870892,-1.649659,4.719630,-4.118136,-8.004326]],[[-6.270577,-9.261604,-2.912972,-3.752858,-9.929587,-2.944558,-2.357530,-7.342309],[-0.868695,-9.889475,-2.906685,-2.900100,9.966682,-7.148554,5.407062,-4.718144],[4.870678,-6.124024,1.300802,-7.432105,3.458022,-9.142816,0.281348,2.522741],[0.244439,-5.020832,-5.245778,6.411847,3.447487,3.248824,-9.202264,-9.287111],[1.721226,9.607004,-1.732865,-3.670526,-5.361289,3.087671,5.473934,4.352640],[-7.992473,-5.029115,7.863165,-1.454898,9.780517,4.651533,0.981839,0.001387],[-6.018591,-3.718726,-6.856161,-6.107604,8.072453,5.406963,-0.151297,4.997765],[-9.356441,-3.988411,9.509826,-6.925915,-8.321546,-8.320112,-8.872435,-1.552557],[-3.411329,7.278381,3.474063,6.117675,0.975843,1.228528,-4.115833,-1.403169],[-7.538818,-4.968950,2.014002,-1.589224,-3.172639,4.354294,-3.379445,3.408586],[-7.512748,-1.303565,-0.557048,-6.242280,-5.935844,0.671223,4.177680,9.784922],[-8.992019,2.162309,8.475930,-1.743348,8.819194,-7.219394,4.210349,-0.485140]],[[-0.581673,-5.185539,2.565426,-0.246613,-3.038226,-9.060746,6.336073,-2.904772],[9.976709,3.704398,8.027839,-8.085727,1.750764,4.849775,-8.304841,9.991079],[-5.855508,3.932363,-6.769915,2.446726,8.891054,-8.370390,5.426168,1.606220],[9.724023,0.273776,-5.553042,5.278351,-7.370838,-4.530497,-1.778520,3.975281],[2.501540,-3.884563,-0.097260,4.744323,6.111798,-9.167625,-4.932882,1.341598],[-0.984903,-3.581868,-2.867514,6.878151,-2.500840,2.728598,4.929833,0.055910],[4.369795,-3.427653,9.957295,-1.082076,-2.644676,-5.737944,-3.027087,-0.245061],[-8.463594,8.312617,-6.818728,-8.537407,-5.704939,7.917832,-4.795541,5.909986],[2.100084,-0.996392,9.862359,5.694091,5.750396,-6.113281,-6.110334,7.981825],[1.740886,0.090179,8.004928,3.739976,-4.249809,4.523293,6.017739,-8.518875],[-8.690941,-1.253446,3.346448,4.739769,8.741750,-6.362089,-8.508594,-8.579199],[-2.315388,4.811441,8.626834,-5.280536,-5.034533,7.195658,-1.708444,-8.807101]],[[-0.711746,-0.959257,-8.126454,-6.454941,4.257915,2.470509,-2.605784,9.849124],[-4.009088,-7.249900,8.969107,7.156828,-2.788074,-4.948286,-2.395505,-6.471770],[4.247673,1.721620,-4.335419,0.116577,-9.322615,-8.558697,-7.352387,-3.905787],[-0.768035,0.632290,1.399227,1.396066,0.373626,-3.851633,-1.806927,-4.995721],[3.116844,-7.579121,8.293559,3.515119,-4.993119,2.888816,1.837195,8.126329],[-9.917115,-3.889575,4.640391,-8.679084,5.215171,2.980883,0.578880,3.467373],[7.391553,-1.488587,3.942562,-3.486972,7.399751,-5.847410,5.695642,8.799708],[-3.096665,2.533211,4.126979,-4.622760,-0.218356,7.374845,0.575445,-4.754906],[-4.558210,-7.625255,-7.004414,2.959890,-8.886224,2.182540,-0.839700,3.534933],[-3.531730,-1.461350,-3.706913,-3.413388,-3.335905,-7.445831,-0.411912,-1.460394],[-1.578509,-7.314996,-7.395208,-8.647947,5.173835,-4.746533,-0.601787,5.565592],[9.471478,4.092166,-8.880205,-5.133613,1.240367,6.181730,-3.435473,-3.384698]]], dtype = "float64")#candidate|4822|(12, 12, 8)|const|float64
uop_4823 = relay.sin(const_4822.astype('float64')) # shape=(12, 12, 8)
output = uop_4823
output2 = uop_4823
func_4840 = relay.Function([], output)
mod['func_4840'] = func_4840
mod = relay.transform.InferType()(mod)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4840_call = mutated_mod.get_global_var('func_4840')
call_4841 = func_4840_call()
output = call_4841
func_4842 = relay.Function([], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_4899 = relay.TupleGetItem(func_2995_call(), 0)
call_4900 = relay.TupleGetItem(func_2996_call(), 0)
func_2413_call = mod.get_global_var('func_2413')
func_2417_call = mutated_mod.get_global_var('func_2417')
const_4903 = relay.const([4,1,2,-4,-10,10,-4,-2,-8,8,2,8,2,-8,-9,-2,-1,-10,3,-2,4,4,10,-6,10,-8,3,-8,9,4,5,2,10,-8,5,-5,-3,6,4,-4,5,9,-9,2,4,-7,-1,4,-8,-4,2,1,-10,-1,-10,-9,6,-10,6,4,-8,-9,-9,-2,-5,1,10,5,10,2,-10,2,10,10,3,-8,-6,-2,1,-1,2,6,-5,-10,6,2,7,-1,-7,5,-6,3,-9,6,-8,-8,8,-2,6,5,-6,-9,4,-1,2,10,-8,-1,-9,9,-3,-10,5,-3,6,5,6,6,-6,10,-1,-8,-5,-8,-6,-4,5,10,-5,-1,3,-2,9,-1,-5,5,-3,-6,3,-5,-2,10,2,-9,4,-10,7,-6,-2,-3,7,-2,10,9,4,2,2,5,-1,4,8,2,8,2,-4,6,5,-4,-7,-8,-6,9,2,5,-10,-9,-3,-4,1,-10,2,-8,3,2,4,1,10,-1,3,6,-3,4,7,6,3,-5,-9,4,5,-1,5,1,9,-10,6,-8,2,-6,9,9,5,10,6,-5,9,-10,-6,-2,10,1,-7,-6,2,-9,1,4,-3,9,6,10,10,2,10,-2,7,8,-4,-4,-8,7,3,7,-6,3,10,9,-3,5,8,-4,3,-8,8,-3,-5,6,-2,1,-9,1], dtype = "uint16")#candidate|4903|(260,)|const|uint16
call_4902 = func_2413_call(relay.reshape(const_4903.astype('uint16'), [13, 5, 4]), relay.reshape(const_4903.astype('uint16'), [13, 5, 4]), )
call_4904 = func_2413_call(relay.reshape(const_4903.astype('uint16'), [13, 5, 4]), relay.reshape(const_4903.astype('uint16'), [13, 5, 4]), )
func_1690_call = mod.get_global_var('func_1690')
func_1693_call = mutated_mod.get_global_var('func_1693')
const_4915 = relay.const([-3,-9,-8,5,-6,5,8,-8,-8,-9,-2,7,-10,2,6,-7,10,3,-3,-2,-5,-7,-6,9,3,2,-10,7,2,3,3,-10,8,-3,-2,-9,3,-9,1,4,10,9,-4,10,-6,-5,7,-3,9,-3,2,-9,10,-3,-9,-4,2,-9,-2,4,3,8,-5,4,-9,-6,-9,-6,-6,-9,-6,4,-6,6,-3,5,-10,-8,4,-10], dtype = "int32")#candidate|4915|(80,)|const|int32
call_4914 = func_1690_call(relay.reshape(const_4915.astype('int32'), [2, 4, 10]))
call_4916 = func_1690_call(relay.reshape(const_4915.astype('int32'), [2, 4, 10]))
output = relay.Tuple([call_4899,call_4902,const_4903,call_4914,const_4915,])
output2 = relay.Tuple([call_4900,call_4904,const_4903,call_4916,const_4915,])
func_4925 = relay.Function([], output)
mod['func_4925'] = func_4925
mod = relay.transform.InferType()(mod)
output = func_4925()
func_4926 = relay.Function([], output)
mutated_mod['func_4926'] = func_4926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mod.get_global_var('func_4550')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_4931 = func_4550_call()
call_4932 = func_4550_call()
output = relay.Tuple([call_4931,])
output2 = relay.Tuple([call_4932,])
func_4941 = relay.Function([], output)
mod['func_4941'] = func_4941
mod = relay.transform.InferType()(mod)
output = func_4941()
func_4942 = relay.Function([], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mod.get_global_var('func_3356')
func_3358_call = mutated_mod.get_global_var('func_3358')
call_4963 = func_3356_call()
call_4964 = func_3356_call()
output = call_4963
output2 = call_4964
func_4965 = relay.Function([], output)
mod['func_4965'] = func_4965
mod = relay.transform.InferType()(mod)
output = func_4965()
func_4966 = relay.Function([], output)
mutated_mod['func_4966'] = func_4966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4550_call = mod.get_global_var('func_4550')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_5016 = func_4550_call()
call_5017 = func_4550_call()
func_3095_call = mod.get_global_var('func_3095')
func_3097_call = mutated_mod.get_global_var('func_3097')
const_5019 = relay.const([[7.120419,2.075560],[-6.143575,1.539261],[-1.012257,-0.543776],[5.163043,-7.206522],[2.047585,-0.122690],[9.330290,3.084819],[4.673465,2.809387],[5.711141,-9.939897],[-6.973957,9.422495],[-5.976681,6.625207],[-0.805865,1.650342],[4.596727,-5.638067],[-5.547587,-9.942921],[-3.277005,3.524198],[-5.682756,2.044488],[3.872861,4.045132],[9.035442,9.978307],[2.878014,0.339081],[-4.755121,8.813736],[-2.250772,-1.752963],[-4.135005,-1.934195],[-3.554558,-2.919531]], dtype = "float64")#candidate|5019|(22, 2)|const|float64
call_5018 = relay.TupleGetItem(func_3095_call(relay.reshape(const_5019.astype('float64'), [44,])), 2)
call_5020 = relay.TupleGetItem(func_3097_call(relay.reshape(const_5019.astype('float64'), [44,])), 2)
output = relay.Tuple([call_5016,call_5018,const_5019,])
output2 = relay.Tuple([call_5017,call_5020,const_5019,])
func_5023 = relay.Function([], output)
mod['func_5023'] = func_5023
mod = relay.transform.InferType()(mod)
mutated_mod['func_5023'] = func_5023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5023_call = mutated_mod.get_global_var('func_5023')
call_5024 = func_5023_call()
output = call_5024
func_5025 = relay.Function([], output)
mutated_mod['func_5025'] = func_5025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5052 = relay.TupleGetItem(func_4112_call(), 1)
call_5053 = relay.TupleGetItem(func_4113_call(), 1)
output = call_5052
output2 = call_5053
func_5054 = relay.Function([], output)
mod['func_5054'] = func_5054
mod = relay.transform.InferType()(mod)
output = func_5054()
func_5055 = relay.Function([], output)
mutated_mod['func_5055'] = func_5055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3711_call = mod.get_global_var('func_3711')
func_3713_call = mutated_mod.get_global_var('func_3713')
call_5131 = relay.TupleGetItem(func_3711_call(), 0)
call_5132 = relay.TupleGetItem(func_3713_call(), 0)
func_4638_call = mod.get_global_var('func_4638')
func_4640_call = mutated_mod.get_global_var('func_4640')
const_5139 = relay.const([-4,2,5,10,-8,8,6,10,2,6,-10,-2,-10,4,-7,-9,-1,7,-2,-8,9,-2,2,10,-3,7,-3,-2,-3,8,-7,-3,9,-6,10,3,-10,2,-6,5,9,5,-10,8,3,-5,2,-1,-9,3,-1,-9,-3,4,-5,9,2,7,-10,5,-10,6,-10,4,5,9,6,-6,8,6,-8,7,-10,-2,-1,4,9,7,8,-9,1,-9,-7,-3,7,-10,8,-7,-4,-7,-5,-8,10,4,-7,10,-2,-4,-6,-5,8,-9,3,-3,4,1,10,6,5,7,-4,1,-8,4,-1,8,-4,-6,-5,-3,-10,2,6,-1,9,-4,-6,8,7,9,-3,-7,-8,-4,-3,-3,3,-4,-3,-7,-2,-3,5,4,5,10,-4,7,-2,-4,9,-10,3,9,-9,-6,9,-1,3,6,3,-6,-7,-1,-3,7,-4,-2,1,1,-10,-10,8,-5,1,9,-9,10,-9,8,6,3,10,-7,9,-2,-6,-9,-6,-7,6,-10,2,-5,-3,-4,6,-10,-3,9,4,-2,-4,9,7,-6,4,2,-7,9,-9,8,-10,-4,-3,6,4,2,-3,9,-6,5,-4,8,-5,9,9,9,-6,-2,-6,8,8,-2,-10,-1,8,8,4,-3,-10,2,10,9,-4,6,-9,2,6,-10,-4,5,-8,6,-7,-10,-1,-6,-4,6,-6,-8,9,-2,-3,-1,5,1,-9,5,5,-2,-10,7,5,-1,-8,-6,10,-9,-2,2,-8,-9,9,10,-1,-10,3,4,3,-9,-6,-7,2,-9,-8,-10,-1,3,4,8,8,-8,-7,8,-2,10,-9,2,5,-6,10,1,-6,5,-10,7,1,6,10,10,9,9,9,1,-3,-10,4,8,6,10,-6,-3,-4,7,-2,-5,-6,-3,6,-10,-1,-3,10,5,-5,-3,3,10,-4,1,-3,-9,3,-4,5,9,2,3,3,1,4,-9,-1,-4,5,3,4,-4,5,7,2,8,-7,-8,-8,10,-5,6,-7,1,6,7,9,6,-1,-5,-8,-9,-1,-9,5,10,-8,4,-7,-7,-2,-2,8,-6,-2,4,-4,-8,9,6,5,-4,2,-8,6,3,-10,8,4,8,4,7,6,-3,-1,1,-4,-10,-2,7,-4,5,-7,3,-8,7,-7,-10,-10,-10,-3,-8,5,-3,-8,4,-1,7,3,-9,-3,4,3,-4,8,-3,-6,-6,-10,-9,-1,10,3,10,-7,8,-7,1,6,-4,-1,5,-9,10,2,-8,2,5,-3,-1,5,-2,2,4,-1,2,5,-1,8,6,1,-1,1,-10,10,-5,-1,-9,10,-10,-4,-3,8,5,-7,6,-4,3,-2,10,-4,-8,3,7,1,-6,-10,5,-5,5,-3,2,-7,-3,-7,10,-7,8,6,-5,5,-3,10,-4,-10,7,-10,-1,5,6,6,-3,6,4,9,8,-1,-10,1,-6,-4,6,-3,3,-10,9,-6,-10,-6,-4,-4,-8,5,3,-3,-9,-3,3,2,3,-6,10,7,-6,-4,9,-3,2,6,-4,-6,5,7,-5,-3,-5,-3,1,-4,-4,-7,6,-3,-8,4,7,6,-9,-2,-4,-5,2,-3,-9,-1,-7,9,6,2,8,-7,-7,-10,8,1,5,-2,-5,3,3,-10,-10,-6,8,2,5,4,4,6,-4,-7,-4,-7,5,-4,1,1,-10,8,4,-5,-1,8,-1,-1,-1,3,7,-6,-9,1,4,-1,-8,4,1,8,8,-9,-10,5,9,9,-9,8,-7,8,-10,8,10,-9,-3,4,3,-2,6,-6,-5,-8,-2,-2,5,2,1,-5,-2,-3,-1,6,-2,9,-6,-2,-10,5,9,10,-7,1,-10,8,-3,9,-8,10,-5,-8,1,-4,-2,-10,-6,5,3,-1,2,-7,8,9,-10,8,7,6,7,9,-9,-8,-9,8,9,-5,7,-8,-7,-3,-7,2,-6,-1,10,-2,-9,4,3,2,-1,5,-10,-5,9,5,10,7,8,10,-8,-9,-3,8,8,10,-8,9,7,4,5,-9,9,-10,-7,-6,-5,3,1,5,-1,7,1,7,2,-1,3,2,9,-10,4,-3,-3,8,10,-1,10,10,6,9,-3,6,2,9,-2,10,-4,-7,-9,-9,10,-10,10,4,-1,7,-3,9,3,-7,-6,-4,-9,-7,8,5,-8,2,7,5,7,2,-6,-5,1,-5,8,7,-2,6,-2,10,8,-9,6,-2,7,4,7,4,3,2,9,-1,-6,3,-9,-8,-4,3,3,6,-1,3,10,-3,7,6,-9,-8,-3,-2,3,9,-7,9,10,-9,-6,7,8,-10,-9,2,3,-10,-1,9,2,-5,-2,8,2,3,10,5,-1,-4,3,-6,-5,1,1,-4,-7,4,5,-9,9,-4,-3,-8,6,-5,-7,-3,1,2,3,-5,-7,10,-10,9,-3,10,-2,10,-10,4,8,-4,1,-9,6,-7,-2,4,-7,1,6,6,10,3,-3,-9,-4,9,1,-4,-5,-1,-7,9,8,6,3,-9,9,3,10,-4,9,4,5,-8,-6,-5,3,-8,6,-4,-5,-2,-6,-10,-10,-1,-8,-8,2,3,-4,2,2,8,-2,-7,-5,5,3,-6,-8,2,3,-10,8,4,2,9,3,-4,-2,-6,-1,6,4,6,2,-1,10,1,-5,-9,-8,2,10,8,8,-6,-3,-2,-6,-3,8,5,-5,7,-9,8,-9,-9,-8,-8,1,5,8,-4,-10,5,9,8,-6,6,3,5,4,-8,2,-1,2,10,-7,-6,-9,5,-3,-4,9,-4,-3,4,-2,-2,-10,9,2,4,2,-6,-3,1,-7,-4,-4,-9,-7,6,5,4,-2,-7,-10,4,1,5,3,9,-2,6,-9,-4,-8,-6,8,-8,2,-7,-6,-8,-4,-10,-10,7,-2,-9,10,7,-4,2,-4,-4,-8,1,-5,1,-2,6,-2,6,-8,4,8,7,-6,-4,1,-7,3,3,8,5,8,4,6,3,2,-3,3,-2,1,1,6,-1,7,4,1,-5,-3,-9,6,-3,3,9,-6,-7,7,-6,-6,-1,-2,-10,6,-2,-4,-8,-6,1,6,5,2,-6,-8,1,3,8,-7,-10,4,4,4,-8,-2,8,-10,-10,5,-9,-2,8,4,-1,-6,6,3,-8,1,-7,-7,-4,10,-7,-2,7,-9,-7,2,-4,9,6,1,10,2,-8,4,3,-6,10,-9,1,-1,2,6,-2,7,6,-4,9,-6,4,-9,-6,1,10,-1,7,9,7,-5,-2,-7,-10,7,-8,8,-2,10,1,-2,-1,-4,-6,10,-8,-2,-9,9,3,-3,-8,2,-8,-6,4,-2,2,3,-8,-3,8,-7,8,8,-5,-10,-2,2,5,-10,7,-3,-7,9,9,-2,-1,6,6,-1,-5,-3,-5,8,5,10,10,-3,10,-10,5,-6,2,6,-7,10,-9,-10,8,-6,-6,6,-8,10,-10,6,4,-4,5,-6,-8,-4,-9,-1,10,1,4,1,6,-9,-4,4,7,6,-9,-2,-7,3,-1,-3,4,9,1,9,1,-4,2,-5,-7,1,-1,2,-1,4,-1,-5,10,4,-3,-9,-10,-9,2,-1,5,6,5,6,2,10,-8,10,-10,-1,7,7,-4,2,-2,-8,5,5,-1,9,-2,9,-5,-9,-5,-8,-2,-2,3,4,-8,-6,-6,4,3,-1,2,6,10,10,6,10,5,4,-7,-7,3,-8,4,6,-5,4,-8,-5,-6,4,5,9,7,9,-4,-6,8,7,6,-3,2,-8,-10,9,-8,-9,8,-4,-3,-6,7,-5,-6,9,6,2,-9,-10,-3,-6,-3,-5,-3,5,-10,-3,5,-4,-10,4,4,8,8,4,-7,2,3,3,6,2,-9,5,-4,-6,1,-4,7,2,-10,-5,-7,8,-6,-8,9,2,-6,3,-5,6,-10,-3,-2,2,-1,10,-6,8,9,8,-5,-5,7,-2,-8,10,-1,-7,-8,-7,-6,5,-5,-5,10,-10,4,-7,-5,5,9,3,6,5,9,-3,8,6,-2,6,6,8,-3,-3,5,-4,-1,6,-7,3,2,-10,5,-2,6,-10,5,-4,-4,7,-5,6,7,7,-3,-9,-8,5,-4,-2,-6,5,-10,-10,-8,-4,9,10,9,2,-8,9,10,9,1,-4,-4,6,10,8,4,-8,1,-1,-5,-4,-1,-9,5,5,-1,-2,-8,1,-6,-5,-1,7,10,2,-8,8,-9,2,-5,1,6,1,2,3,10,-2,10,3,-5,5,3,-7,-8,-6,8,1,9,-9,3,-10,-1,-6,-10,-10,5,-10,-9,-1,-6,2,-4,-7,4,-5,9,1,-10,10,5,-6,-5,9,5,-3,-6,-6,-7,-3,-10,-9,8,10,5,9,-10,-2,-3,-1,8,-1,8,-5,10,-9,8,1,5,5,1,-2,9,6,-5,-10,10,7,7,-6,-2,9,-10,-8,-10,-7,-7,2,4,-5,4,2,-7,1,-5,-2,1,-8,2,5,9,4,2,-9,3,-5,-1,10,-10,-3,9,1,-9,-10,5,2,9,1,2,-10,-5,-2,6,6,3,10,-9,2,1,6,7,-1,3,-10,3,-10,4,7,-1,7,-6,-8,9,-2,3,-6,7,-7,-9,-5,-6,1,6,2,-2,-5,-6,-3,4,5,3,-8,-9,1,3,-10,-3,-10,10,-8,3,-1,6,-3,-7,-10,10,-3,6,-6,-1,9,-1,3,-3,4,-2,-4,-8,1,-5,-8,-10,5,4,-4,-10,-9,1,2,2,-7,-10,-5,8,-4,8,2,-4,5,-8,2,-1,1,-10,-6,-1,-7,4,9,-9,-8,6,6,-5,-7,9,3,8,-1,-8,-1,10,8,-1,9,-2,8,5,8,-4,-4,-4,-2,-2,-3,10,7,-3,5,4,3,-10,-3,-4,6,-8,10,9,6,-4,2,-4,-5,6,8,-5,7,1,-2,-5,-2,1,6,-3,1,-5,3,-2,4,-2,9,3,-5,-9,9,5,6,-3,-8,-9,6,-2,1,1,3,8,-1,9,7,-2,2,10,-7,-10,-9,-2,1,6,-9,9,-10,-5,10,-8,-3,-7,-2,-1,-10,-2,2,-6,9,6,8,-9,4,1,7,3,10,3,7,-10,8,9,-5,4,-8,-1,8,7,3,6,-7,-8,-10,-10,-6,5,-2,4,9,3,-8,6,-6,8,2,7,-4,8,-7,-1,9,-7,-10,8,8,-9,-8,2,9,-1,-3,-2,-5,-1,1,7,7,10,-4,-7,2,7,-10,-1,-1,9,3,3,4,-2,5,6,1,7,6,8,-7,-7,-5,5,-3,10,-8,3,6,-8,5,10,9,3,-1,-3,-5,-7,-9,6,7,-7,8,8,7,4,-9,10,-4,-3,-2,-5,-7,7,5,5,9,10,3,-1,5,10,8,1,-3,-8,9,3,-8,-1,6,-8,9,10,5,10,-7,-3,2,-8,6,-1,-9,-2,-7,-1,-10,-7,6,-1,-1,10,-3,4,7,-2,7,-10,10,-5,-7,-9,5,6,-3,4,-7,-1,-9,6,6,1,-3,-10,-4,-1,3,-8,8,-10,8,-7,10,5,-3,-5,1,2,8,-1,9,5,-2,10,6,10,-6,9,5,5,-7,6,-6,-3,2,-7,6,3,-5,-9,-5,-3,8,-6,7,2,2,1,-8,-10,-10,1,9,5,7,2,-5,-4,10,7,-1,-9,-8,-1,-9,-7,10,-5,10,-4,6,-10,3,-7,3,-8,2,9,2,-6,-1,-7,1,-1,-4,9,-10,-4,-2,-6,4,1,-3,-7,8,-3,-6,-1,4,9,6,-1,-6,9,-3,-5,1,2,4,-1,5,-3,-6,-10,-8,-10,7,-1,6,3,7,6,-3,3,10,-10,-8,5,-9,6,-2,-10,-10,3,4,-5,3,-10,2,2,5,-4,-6,7,-4,1,-1,-6,-5,-7,5,10,3,-4,1,-6,9,1,3,-3,3,4,8,-5,10,-1,-1,-7,-1,1,9,2,1,5,3,10,1,-10,-5,1,-6,-4,-3,3,-2,-8,6,-8,3,-3,-1,-4,9,3,-10,1,7,3,6,6,4,6,-5,-9,8,-7,-4,-1,-5,-7,9,3,5,9,-3,9,10,9,2,4,-7,8,1,4,-6,-3,1,2,-3,7,-6,5,-6,3,-10,7,-7,-3,-6,6,-10,-4,4,-6,7,-3,2,10,2,-5,10,2,-8,-8,1,-4,-3,-1,8,-6,-1,-9,8,-2,-5,-5,-10,6,1,2,-8,-5,7,-9,-1,10,-5,6,10,-4,-6,4,5,6,4,1,4,-2,-10,-8,6,-5,-8,-4,1,-7,-8,-3,-1,-2,6,-6,7,-3,-8,8,-8,-5,-3,7,9,-1,5,2,2,10,7,-8,1,-1,-4,-3,1,-1,6,-8,-1,4,2,1,-1,-2,6,-5,5,8,-7,2,-8,4,-8,-1,-1,7,2,-7,-1,-3,3,8,6,-7,-8,2,-9,-9,7,8,-4,1,-6,-1,9,6,4,10,-1,-2,4,-4,-10,-2,5,-7,6,7,6,9,-3,-5,-2,-6,2,1,-4,8,9,1,9,-3,5,9,7,7,4,5,-7,-8,-1,-4,5,8,-2,-6,-8,8,-6,-3,4,2,-1,5,-10,-8,3,7,-6,9,-6,8,3,-5,4,3,9,-7,2,2,-6,-2,-4,6,4], dtype = "uint16")#candidate|5139|(2520,)|const|uint16
call_5138 = relay.TupleGetItem(func_4638_call(relay.reshape(const_5139.astype('uint16'), [12, 15, 14])), 0)
call_5140 = relay.TupleGetItem(func_4640_call(relay.reshape(const_5139.astype('uint16'), [12, 15, 14])), 0)
output = relay.Tuple([call_5131,call_5138,const_5139,])
output2 = relay.Tuple([call_5132,call_5140,const_5139,])
func_5141 = relay.Function([], output)
mod['func_5141'] = func_5141
mod = relay.transform.InferType()(mod)
mutated_mod['func_5141'] = func_5141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5141_call = mutated_mod.get_global_var('func_5141')
call_5142 = func_5141_call()
output = call_5142
func_5143 = relay.Function([], output)
mutated_mod['func_5143'] = func_5143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3889_call = mod.get_global_var('func_3889')
func_3890_call = mutated_mod.get_global_var('func_3890')
call_5144 = func_3889_call()
call_5145 = func_3889_call()
func_832_call = mod.get_global_var('func_832')
func_835_call = mutated_mod.get_global_var('func_835')
var_5152 = relay.var("var_5152", dtype = "uint32", shape = (130, 4))#candidate|5152|(130, 4)|var|uint32
call_5151 = relay.TupleGetItem(func_832_call(relay.reshape(var_5152.astype('uint32'), [4, 13, 10]), relay.reshape(var_5152.astype('uint32'), [4, 13, 10]), ), 1)
call_5153 = relay.TupleGetItem(func_835_call(relay.reshape(var_5152.astype('uint32'), [4, 13, 10]), relay.reshape(var_5152.astype('uint32'), [4, 13, 10]), ), 1)
func_4550_call = mod.get_global_var('func_4550')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_5154 = func_4550_call()
call_5155 = func_4550_call()
func_4523_call = mod.get_global_var('func_4523')
func_4527_call = mutated_mod.get_global_var('func_4527')
call_5160 = relay.TupleGetItem(func_4523_call(relay.reshape(call_5144.astype('int32'), [3, 9, 13]), relay.reshape(var_5152.astype('uint32'), [520, 1]), ), 0)
call_5161 = relay.TupleGetItem(func_4527_call(relay.reshape(call_5144.astype('int32'), [3, 9, 13]), relay.reshape(var_5152.astype('uint32'), [520, 1]), ), 0)
func_4941_call = mod.get_global_var('func_4941')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_5162 = relay.TupleGetItem(func_4941_call(), 0)
call_5163 = relay.TupleGetItem(func_4942_call(), 0)
output = relay.Tuple([call_5144,call_5151,var_5152,call_5154,call_5160,call_5162,])
output2 = relay.Tuple([call_5145,call_5153,var_5152,call_5155,call_5161,call_5163,])
func_5173 = relay.Function([var_5152,], output)
mod['func_5173'] = func_5173
mod = relay.transform.InferType()(mod)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5174 = relay.var("var_5174", dtype = "uint32", shape = (130, 4))#candidate|5174|(130, 4)|var|uint32
func_5173_call = mutated_mod.get_global_var('func_5173')
call_5175 = func_5173_call(var_5174)
output = call_5175
func_5176 = relay.Function([var_5174], output)
mutated_mod['func_5176'] = func_5176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4941_call = mod.get_global_var('func_4941')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_5218 = relay.TupleGetItem(func_4941_call(), 0)
call_5219 = relay.TupleGetItem(func_4942_call(), 0)
output = call_5218
output2 = call_5219
func_5227 = relay.Function([], output)
mod['func_5227'] = func_5227
mod = relay.transform.InferType()(mod)
mutated_mod['func_5227'] = func_5227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mutated_mod.get_global_var('func_5227')
call_5228 = func_5227_call()
output = call_5228
func_5229 = relay.Function([], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5293 = relay.TupleGetItem(func_4112_call(), 3)
call_5294 = relay.TupleGetItem(func_4113_call(), 3)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_5321 = relay.TupleGetItem(func_2978_call(), 3)
call_5322 = relay.TupleGetItem(func_2980_call(), 3)
func_4261_call = mod.get_global_var('func_4261')
func_4264_call = mutated_mod.get_global_var('func_4264')
const_5330 = relay.const([3,4,-7,5,-8,-9,-1,-7,-3,9,10,-9,-10,10,-7,-3,-6,-2,-8,2,-9,1,4,-10,10,8,9,1,-8,9,-9,-10,9,-9,-8,-3,2,6,1,4,9,-3,9,10,-6,-5,-1,-9,6,7,9,-2,5,-8,7,-10,-5,-5,-9,-4,-3,-2,-5,-5,1,6,4,-10,7,7,-1,8,-10,-10,9,-3,-2,-5,6,-9], dtype = "int32")#candidate|5330|(80,)|const|int32
call_5329 = relay.TupleGetItem(func_4261_call(relay.reshape(const_5330.astype('int32'), [80,])), 7)
call_5331 = relay.TupleGetItem(func_4264_call(relay.reshape(const_5330.astype('int32'), [80,])), 7)
var_5333 = relay.var("var_5333", dtype = "uint64", shape = (3, 9, 13))#candidate|5333|(3, 9, 13)|var|uint64
bop_5334 = relay.bitwise_and(call_5293.astype('int16'), relay.reshape(var_5333.astype('int16'), relay.shape_of(call_5293))) # shape=(3, 9, 13)
bop_5337 = relay.bitwise_and(call_5294.astype('int16'), relay.reshape(var_5333.astype('int16'), relay.shape_of(call_5294))) # shape=(3, 9, 13)
output = relay.Tuple([call_5321,call_5329,const_5330,bop_5334,])
output2 = relay.Tuple([call_5322,call_5331,const_5330,bop_5337,])
func_5346 = relay.Function([var_5333,], output)
mod['func_5346'] = func_5346
mod = relay.transform.InferType()(mod)
var_5347 = relay.var("var_5347", dtype = "uint64", shape = (3, 9, 13))#candidate|5347|(3, 9, 13)|var|uint64
output = func_5346(var_5347)
func_5348 = relay.Function([var_5347], output)
mutated_mod['func_5348'] = func_5348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4112_call = mod.get_global_var('func_4112')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_5363 = relay.TupleGetItem(func_4112_call(), 1)
call_5364 = relay.TupleGetItem(func_4113_call(), 1)
func_2487_call = mod.get_global_var('func_2487')
func_2490_call = mutated_mod.get_global_var('func_2490')
var_5368 = relay.var("var_5368", dtype = "uint64", shape = (120, 4))#candidate|5368|(120, 4)|var|uint64
call_5367 = func_2487_call(relay.reshape(var_5368.astype('uint64'), [3, 16, 10]))
call_5369 = func_2487_call(relay.reshape(var_5368.astype('uint64'), [3, 16, 10]))
output = relay.Tuple([call_5363,call_5367,var_5368,])
output2 = relay.Tuple([call_5364,call_5369,var_5368,])
func_5370 = relay.Function([var_5368,], output)
mod['func_5370'] = func_5370
mod = relay.transform.InferType()(mod)
var_5371 = relay.var("var_5371", dtype = "uint64", shape = (120, 4))#candidate|5371|(120, 4)|var|uint64
output = func_5370(var_5371)
func_5372 = relay.Function([var_5371], output)
mutated_mod['func_5372'] = func_5372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4925_call = mod.get_global_var('func_4925')
func_4926_call = mutated_mod.get_global_var('func_4926')
call_5384 = relay.TupleGetItem(func_4925_call(), 3)
call_5385 = relay.TupleGetItem(func_4926_call(), 3)
output = call_5384
output2 = call_5385
func_5389 = relay.Function([], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5390 = func_5389_call()
output = call_5390
func_5391 = relay.Function([], output)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5229_call = mutated_mod.get_global_var('func_5229')
call_5423 = func_5227_call()
call_5424 = func_5227_call()
func_5346_call = mod.get_global_var('func_5346')
func_5348_call = mutated_mod.get_global_var('func_5348')
var_5426 = relay.var("var_5426", dtype = "uint64", shape = (351,))#candidate|5426|(351,)|var|uint64
call_5425 = relay.TupleGetItem(func_5346_call(relay.reshape(var_5426.astype('uint64'), [3, 9, 13])), 1)
call_5427 = relay.TupleGetItem(func_5348_call(relay.reshape(var_5426.astype('uint64'), [3, 9, 13])), 1)
output = relay.Tuple([call_5423,call_5425,var_5426,])
output2 = relay.Tuple([call_5424,call_5427,var_5426,])
func_5437 = relay.Function([var_5426,], output)
mod['func_5437'] = func_5437
mod = relay.transform.InferType()(mod)
mutated_mod['func_5437'] = func_5437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5438 = relay.var("var_5438", dtype = "uint64", shape = (351,))#candidate|5438|(351,)|var|uint64
func_5437_call = mutated_mod.get_global_var('func_5437')
call_5439 = func_5437_call(var_5438)
output = call_5439
func_5440 = relay.Function([var_5438], output)
mutated_mod['func_5440'] = func_5440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_5483 = relay.TupleGetItem(func_2978_call(), 2)
call_5484 = relay.TupleGetItem(func_2980_call(), 2)
func_1611_call = mod.get_global_var('func_1611')
func_1614_call = mutated_mod.get_global_var('func_1614')
const_5492 = relay.const([7.356950,-7.378267,6.398995,-1.155807,-1.488974,-8.219618,6.987295,-6.952414,9.535356,-8.743716,9.409877,0.914471,7.291804,7.355834,-9.094693,-5.186632,-5.293847,1.075731,-2.317949,3.775017,0.872182,-0.615912,4.750236,-1.195176,7.334112,5.859965,6.506618,8.236382,-6.158694,-9.294698,-1.526101,-6.631377,8.258056,-4.819379,-8.497530,-1.313435,8.343298,-2.103622,1.470060,7.668285,1.514317,0.778502,-5.448630,7.127943,7.124236,4.986856,-8.230296,-4.279774,2.484161,2.334130,-2.782368,9.002384,0.927768,-4.840256,-3.637353,7.532109,-1.216575,4.386650,-2.833295,-8.895748,-1.658376,1.177002,1.263791,-5.481951,-8.990534,-6.535555,3.418558,-3.618127,6.529913,9.763758,-9.301320,2.491846,4.854421,2.529966,4.802363,0.953588,-4.856427,-4.933305,-2.843310,-7.018569,7.807627,6.869582,5.291834,9.132374,-8.212667,-4.872966,3.072537,-8.593616,-7.172279,-2.720068,3.913966,6.765384,-9.990711,6.198253,-4.173360,7.314126,7.019538,-6.769367,-3.630491,7.505470,-5.630489,-2.617236,-4.446020,-9.046064,-1.710006,-3.724591,-4.450376,4.585499,-2.394733,2.219225,4.465611,-3.021961,7.861686,7.537589,-8.157789,2.733984,-5.692528,-9.111275,-4.751789,-2.295692,-4.352132,-5.640319,-0.185986,1.996543,-2.489284,-6.374285,-7.482899,-0.252034,2.231439,5.414666,5.267558,3.386881,-7.569758,-3.292710,-0.558895,-5.801644,7.228682,-1.261341,-8.715757,-6.850062,-3.628253,-7.914434,2.888202,1.262431,-9.024378,-4.565186,3.992989,-9.496552,-4.765822,-9.116594,3.411801,2.054100,5.820191,-4.607428,5.326131,-1.727725,2.878607,-8.603116,-7.009135,-6.694996,7.383256,-4.583793,-8.836447,-9.247005,1.261361,5.480263,2.861469,0.507133,-3.069367,2.493095,0.954988,-5.483358,-5.290219,5.897787,-6.875341,-3.427747,1.622619,-8.934437,5.090862,-4.959475,2.850714,5.482214,-1.618453,2.146033,-8.849408,-0.240491,-3.557733,8.272304,-7.122041,6.587806,-8.984040,-7.315775,-1.429019,0.066445,8.452122,-8.443842,7.762364,-4.636577,7.303753,4.609799,-0.006310,8.752899,-9.999350,2.680048,5.906971,5.589280,-8.868383,4.855391,-4.914248,-2.428685,-1.367855,-1.698698,-3.200084,6.920244,-8.137630,-6.769426,7.045102,8.264630,-8.844258,-5.909495,-4.024502,9.511129,3.452881,3.245694,1.485127,8.438988,3.129885,5.612778,-6.654986,0.303574,8.386836,4.539921,9.941612,-8.799163,-7.524086,5.723551,-6.376379,0.147636,-6.931487,9.642092,8.280792,7.495184,-4.652767,-5.118450,-9.270501,9.739573,3.144051,-8.592624,-1.519896,-3.177274,5.428349,5.564257,-7.264972,7.410087,9.162870,-1.379802,7.356526,2.958582,8.620585,3.678210,0.977238,7.540144,6.086192,1.483415,4.145825,-6.792578,-2.164571,-0.409516,6.400414,5.602288,7.725217,6.423898,1.592096,-3.577493,-7.264118,-3.550088,2.667195,9.825931,3.667343,-9.144818,-3.032144,8.047070,-3.057323,-3.333090,3.668273,-7.975903,6.399522,-4.044638,9.368684,5.310826,-1.470292,6.523119,-3.594885,-5.933656,-6.716870,-3.534965,-0.036272,9.887306,1.482886,-4.945592,8.672336,7.195378,-8.238749,2.481232,5.357193,7.186271,0.719142,0.007356,6.513188,3.320623,-1.434211,9.853184,-4.768398,1.085085,-6.861549,-2.726231,-6.345059,-0.404254,0.459978,-3.091049,7.532185,-9.624177,5.757767,-6.327613,-3.983564,-0.479766,9.241291,8.238838,-8.238506,0.068225,-7.988860,-7.947946,-0.695122,3.988581,-5.686459,-6.568705,1.278782,-3.339979,-8.728294,-0.512133,6.371192,6.067100,-6.072386,-7.125570,8.577277,0.269092,4.305067,-4.515877,-5.037186,-1.148932,-8.568303,-8.153241,5.905428,-7.469074,9.019709,-8.941299,9.999045,7.494038,-2.480214,-3.157102,-7.985155,2.674057,8.739855,1.777420,3.201325,-7.740236,-3.804123,-9.910807,-8.804690,9.235439,8.208740,-4.664613,0.465543,-6.581041,5.056765,0.144944,-9.215122,6.989365,-7.177610,5.456785,-0.854494,2.188162,1.245384,2.078852,-8.576899,7.191295,-6.224006,-0.852463,-8.486140,-1.091349,1.350742,1.842392,-9.461883,2.417035,0.964307,2.802237,3.048482,-0.339707,-6.621395,-3.697513,-0.918577,-8.583258,0.242669,-9.928312,3.482618,9.551422,-6.573688,-8.815130,1.316151,4.294944,-5.812208,0.282966,-7.917787,-3.724344,2.057413,0.142612,7.110422,-4.079913,3.648102,-8.441173,3.816965,6.075253,-7.038603,3.710193,-5.442932,-5.732209,6.238445,-2.059265,7.422791,-6.833323,4.930519,-0.780311,7.006425,9.762900,1.495153,2.712247,8.053760,-0.177293,-1.546086,3.750132,-0.832696,2.555468,9.499010,0.372936,3.889520,8.016372,-3.589101,5.531915,8.842793,-7.458172,-6.884278,0.070313,-5.037967,6.517641,8.830099,2.606008,-8.242146,2.015404,-5.063870,-3.078368,-9.219530,-7.321007,0.777368,-1.506906,-0.654747,5.149637,-1.838103,-4.992435,-9.935776,9.370421,6.280795,2.197920,-1.145570,9.119235,-2.311593,-4.643484,-9.598252,3.782015,-8.489735,-8.406416,-2.192206,2.871390,-3.567613,0.336972,7.993380,4.211576,-1.414453,-5.555247,9.149012,8.347387,1.711297,0.024370,2.224255,1.612399,-4.170466,-9.695046,8.278924,-3.035918,-4.228134,-8.966374,-6.207348,-3.686858,-7.770307,9.724728,-8.486507,5.809660,-0.649854,7.111841,8.487447,2.321370,-7.337202,-4.243491,3.373381,-5.379627,2.916705,6.028403,-0.619271,-7.267471,-2.181973,-5.796476,-2.463150,-6.539019,-9.313412,-9.695468,-7.618450,-0.747777,-1.172671,-4.287082,8.695492,8.720299,9.285387,-2.695719,-3.398082,7.825196,4.462722,3.326814,9.746044,-6.593610,-9.168015,-3.592659,9.195918,5.894992,0.954168,6.287975,-5.945374,1.913588,-2.814195,3.828888,-0.302617,9.481509,0.446901,-7.026635,0.708454,-2.642023,2.633956,-0.979020,5.849097,-7.559562,-3.173797,2.983760,-0.517550,-2.459845,1.775770,5.296150,-7.965046,7.354040,-1.548023,5.517302,-1.722465,9.545314,-5.984266,-2.201354,1.114496,-1.122420,1.006804,2.299137,8.564635,-6.167543,5.888913,-4.482312,-5.738045,8.263646,8.478416,-9.907021,5.223531,-8.728357,-9.437921,4.376520,6.461225,5.467327,-3.769903,9.420961,-9.271903,-5.371321,8.136036,-7.458445,-5.606610,-1.867788,-4.864195,6.659358,-0.454943,2.607992,0.136198,3.211545,-0.670188,0.062564,5.795380,-6.659624,-6.111989,9.491003,-4.395260,7.175456,-1.723962,-6.813208,4.718469,-7.762004,8.158812,-4.297650,-7.564559,-3.389210,-6.991033,3.807631,-1.355829,5.794440,-4.320289,-1.227601,-0.069763,1.738250,-9.507588,9.655027,-2.683097,7.852333,6.638095,-0.006905,2.586178,5.884879,-1.847743,6.789371,-4.138866,7.762172,-8.128346,8.969401,4.917820,6.988187,8.090263,1.622017,-5.283195,8.851286,-5.214351,6.223815,-6.146453,8.269408,-4.802775,2.134664,-0.464892,0.214919,0.359387,7.621324,-2.219172,-9.665117,-9.415930,0.643311,-7.282558,-9.156742,-1.529452,9.285452,-0.195473,4.598180,0.389460,-3.409661,1.431704,-1.095834,-5.135938,6.902243,-8.057833,-1.009126,-2.308097,7.568651,9.246831,5.894719,-6.797516,-2.572223,-0.132191,8.588712,7.244606,7.332077,4.294797,2.004493,6.889891,-9.599733,-3.664433,-0.942258,-8.071466,6.740639,-6.261099,8.637273,5.170698,1.100122,6.750183,-0.998751,-5.660487,2.939744,9.088896,-7.353224,-6.777176,8.401910,6.121693,6.915746,7.203601,0.203512,5.963932,-0.279189,7.838469,-7.253347,-5.572942,4.643221,-4.862991,2.698807,7.846240,2.752337,-5.857332,-2.557546,-0.963318,-1.596191,-5.567119,1.813196,-9.554158,5.851658,-2.236575,7.054000,-5.617425,1.643135,4.396942,-5.082890,-1.005176,-5.608372,-2.060138,1.103330,-9.865710,9.333798,6.754214,6.781460,-3.503846,0.601162,-4.932572,-0.409616,9.000555,-2.870139,-2.149384,0.733266,-1.460522,9.480532,-3.691088,1.211487,-4.066058,-9.190156,-6.757067,-8.860893,-5.840851,1.252176,-2.538612,2.867909,0.903676,-8.082410,-2.595740,7.420930,-9.100646,-6.545574,9.666519,4.789592,-3.749425,5.854850,3.409481,0.264378,-7.838361,5.214711,-7.663153,-2.229673,-4.579329,9.977976,3.292387,5.889259,-1.340459,-9.059614,1.953217,8.036736,9.822573,-1.382978,-3.327809,-3.318033,-4.201465,1.534422,-4.728159,3.434087,4.391397,-8.327035,3.942155,-6.758084,4.553674,5.739695,-2.120682,-6.281121,2.336712,3.149225,-5.994079,-1.881721,1.907654,-9.501813,-6.719900,-3.956632,-3.035711,-6.208817,-8.645649,4.180286,5.345969,-1.672523,-8.518168,-2.913012,-7.068503,5.608193,4.678666,4.734353,-2.661104,5.582419,1.914816,-3.660151,-1.655308,2.874891,2.866962,-0.108257,2.874196,-8.024553,8.169972,-5.477424,-1.926351,-6.443910,4.992739,-0.612280,1.756032,-7.039811,3.936362,6.012406,2.170049,-4.363747,0.057401,-6.905891,-9.646509,-9.921908,0.070631,1.142879,7.842308,7.344322,5.020436,-6.973238,2.282193,-6.230187,8.093400,-0.368637,-0.741068,8.394785,2.701932,4.629710,-7.470914,2.403986,-6.342898,-6.588618,2.214182,-7.239925,3.667855,8.633359,-1.041694,-3.562992,3.821389,-9.907677,7.929066,-4.306138,1.609403,-1.801132,6.284566,3.616925,-3.592929,7.815698,-6.704235,0.470403,-2.025712,-8.532836,-5.877514,-7.635858,-9.795770,5.097272,-4.206787,-0.527377,1.996820,-6.092715,0.224681,-5.470180,7.004280,9.845095,-4.445597,2.391841,4.054564,5.549467,-3.192862,-1.944574,-3.744070,9.888246,3.258771,9.832781,-5.525162,9.487984,6.115172,-8.379122,-2.872739,-3.210284,-2.202484,4.174217,-6.323244,7.562833,7.692846,7.777217,4.558505,-3.176893,-8.497487,-5.814989,0.322927,-6.268027,6.674140,4.571216,-3.944075,-2.121099,-5.227065,7.056048,-4.457422,0.270770,-2.424337,-5.996178,7.290964,-6.284686,-2.932491,2.107281,-1.226927,-1.712178,-8.413288,5.145027,-1.875559,7.252677,-7.146169,4.591390,8.725038,-1.501619,2.255849,4.640575,0.417864,-1.925208,-6.182813,-7.830027,-0.590348,8.335297,-3.783426,2.854838,-5.060605,8.281239,8.073028,-6.004996,-9.765575,-3.087150,4.123027,-0.636968,1.747563,-0.796685,-9.400368,5.250155,3.599065,5.070053,8.439487,-3.439030,2.980954,-1.693695,-7.012389,6.400802,3.811445,-1.202653,-6.012500,-3.157206,-0.768775,0.361378,9.948731,8.332361,3.960681,-1.422837,8.805302,3.971067,1.563443,-0.518392,-1.901449,-6.767520,7.432549,-3.326008,3.139673,-2.944280,4.235003,6.656562,-3.464074,5.096744,1.074078,-8.212400,5.579916,-5.403634,-8.944535,-2.014238,-2.855569,-8.122479,-5.446715,5.838016,6.907947,1.952429,-6.916646,4.855813,5.282633,-0.907449,4.134241,8.267026,-8.088237,2.948349,-3.642203,6.784401,-0.629876,0.171626,-7.536518,-3.543028,-7.455022,-8.889230,-5.160965,9.679006,0.920514,6.372095,-1.817255,0.265688,-8.538612,9.351527,-6.599301,5.569441,7.470283,4.204916,-7.424641,3.518245,8.964243,8.818457,-9.478235,0.549797,-7.168407,-9.810611,-0.248856,-4.462728,-0.144883,2.958119,-7.650702,9.379988,1.704440,-4.052689,-8.881956,-4.539073,6.460248,-0.946707,-1.393144,9.085591,-9.012049,-4.091765,1.253870,9.251001,-6.639040,8.730023,7.906111,-5.501893,6.358590,-0.567028,0.201597,-0.393541,-4.311085,-1.920377,-8.828621,-8.516065,7.670463,4.983665,1.041404,-5.565376,-9.158595,-0.842398,-8.593411,-2.876573,8.997629,4.314436,-1.418059,-2.448626,-5.403742,6.828365,-3.119243,1.853937,-5.583660,3.204771,1.346792,-1.525893,4.606116,-3.209449,4.437165,4.419700,9.238726,6.659634,-9.510447,9.458032,-0.756898,-4.745988,-2.104731,-0.963980,-6.283721,-9.165131,5.201530,3.238188,7.363145,-8.965173,4.630301,-0.339192,1.208230,-6.254361,4.469728,-9.811953,-4.085564,-7.073956,0.100673,-8.677029,-2.234129,4.218243,9.880063,-1.080934,-5.474307,4.368127,4.789334,3.567974,-7.192963,-6.631263,5.240640,6.550830,1.280466,-4.479377,0.020894,5.414679,6.878935,8.349466,1.516201,0.420195,1.059632,4.552955,-4.286241,5.542414,-3.013181,-1.557873,-4.089362,-8.163065,-6.398096,-8.298897,8.601332,0.977902,5.124302,4.359046,1.949294,-6.199472,4.206750,3.915993,-1.025113,-3.471886,-4.154326,-0.009769,9.874532,3.129508,5.559366,2.311186,9.494010,5.230147,4.864108,5.881107,-0.619882,7.117405,-6.444024,3.969076,2.928321,3.795560,4.180395,5.207912,-2.954989,-9.849347,-5.302152,-3.942988,-9.368671,-4.539019,-2.524687,-8.646264,-3.115696,9.276403,-3.024842,0.830044,-4.628353,-9.035054,5.383948,-6.572899,-6.592241,5.934807,-5.184967,-4.565270,-4.519417,0.514799,-4.357001,9.077378,5.340991,0.733581,9.694744,-1.251837,-3.208199,8.931608,-4.820548,1.131553,-1.368866,8.478663,0.960768,-6.957723,4.495055,-4.051041,3.724277,-6.616387,-4.550715,4.067203,-1.018256,-9.734473,-6.772136,-9.255865,8.739052,2.486421,8.313653,5.420811,-2.831798,-9.272967,7.217521,3.539713,-9.849219,7.385730,-4.816701,-3.663570,-0.328596,9.107395,3.213414,6.755959,7.108072,-1.908070,-6.853576,7.651304,0.069237,-9.154682,0.298349,-6.051201,0.636924,-3.288599,-8.041388,-4.206017,0.174751,4.869064,-7.634237,-4.657020,3.005306,-8.804688,-6.654356,-2.132262,2.036001,-4.090765,-4.856408,-0.589761,-0.883546,8.646761,2.639410,-9.932371,7.800083,6.173681,-0.325484,-4.588703,9.958362,0.079753,-0.818865,2.693565,-5.197463,-2.945248,-0.756424,-6.088820,-8.821490,1.535604,-6.080583,-4.135894,0.804625,1.656294,8.377592,3.008576,-5.558073,-4.578493,-7.556994,-7.630835,6.232990,-1.904010,5.360143,7.544094,-5.064948,7.556249,-2.352227,3.269713,-3.725896,8.368373,-1.039571,-2.344704,-6.474525,2.057315,-5.445582,5.155748,5.012230,-7.570974,1.647258,-1.660603,-0.610250,-8.702850,6.572868,1.943450,-8.363825,-9.759079,4.248783,9.966429,4.923696,2.280450,-7.832410,-0.710089,-8.880298,-6.345044,-1.845056,4.785129,-6.073430,5.038217,3.858034,9.430080,5.720346,-2.481534,-2.048948,-9.382401,0.076954,-7.700320,4.797283,7.921106,1.446237,1.939955,-6.622015,-7.660701,-2.990260,-9.185594,-6.617736,4.246325,5.833715,9.207861,2.589050,-9.531720,3.020234,-4.102149,7.980528,-7.949891,8.596571,-0.243073,-2.404318,-2.605564,-2.183819,5.146474,4.629390,-3.109252,-5.461886,-9.116684,-8.766496,-0.391848,1.499160,-1.430789,-1.484638,2.392379,-9.928120,6.591938,1.012614,9.859432,2.118758,-6.444219,9.832380,7.859871,-1.084250,0.486315,-8.924737,-3.812368,-1.593475,-4.843242,1.126341,-6.333690,9.724576,5.702183,2.421628,-8.380947,5.278267,3.969198,-6.369716,-3.001170,5.699719,2.091209,-3.558867,4.661790,-5.174861,7.375971,-8.892638,2.163299,-5.290029,-1.375852,3.769256,-8.369053,6.555698,0.259075,-8.301276,3.339790,0.973243,-1.496653,-8.957753,-9.243811,1.628199,6.068647,2.409615,-8.178033,4.205661,1.374765,3.334965,2.590567,-1.411559,-5.387543,-3.876952,-5.479230,-2.233523,5.672055,-6.544758,9.584001,-3.804275,7.413585,8.999800,9.006878,-5.899673,7.699504,-4.012878,8.727229,4.582558,4.607410,9.108428,6.480783,-5.866608,-1.170949,-0.812630,2.308275,-6.856785,-6.896188,-3.735099,-7.188655,0.196995,-6.024010,-2.444914,-5.004843,-4.883067,-5.643962,9.333103,0.317649,-3.084022,-3.259253,-8.216172,4.704670,8.025285,-1.838521,0.011049,-4.053983,5.350511,-3.537855,-3.163020,0.071263,2.647999,-0.785705,-4.559102,-3.300331,-0.679556,0.077943,-2.873440,5.626865,3.684594,7.185489,3.917108,2.562544,9.970008,-9.368696,-0.233826,-2.126877,3.797455,-9.851536,-9.147872,8.092612,9.138452,3.368407,9.255398,7.806589,0.725730,-2.554762,4.656566,0.232531,7.475010,-6.283580,4.482270,3.558239,-4.740459,-6.365079,8.311836,9.428723,5.790493,-3.526721,0.033084,7.630673,7.512370,5.415336,1.797996,7.096248,2.589833,-2.023627,-3.672765,7.942251,3.235680,8.769228,4.932785,3.199896,-9.765197,-5.214115,-0.276081,-1.113426,0.277981,-4.303167,-5.435071,7.370932,1.955116,-7.123194,-1.890693,-3.657937,-4.898310,-6.809598,-5.182072,-5.198658,5.487579,2.332990,-4.157200,7.421883,0.855263,-0.678152,7.866958,3.899575,6.577083,-5.555508,-0.271534,6.910712,3.522331,-2.452969,8.799946,-8.938572,2.784681,-3.215822,3.956399,5.030981,1.188441,-7.491122,-4.135308,-3.523320,1.455350,5.485638,9.325133,-8.392835,-8.144350,7.080420,0.009130,-3.183965,0.929576,-6.797942,9.921240,2.094313,0.743408,4.799397,-9.474755,9.124047,2.225753,2.327123,5.716707,2.028863,-9.135976,-0.578067,-2.311153,5.620847,5.760570,-3.669133,4.890279,-4.642869,2.881619,-2.711488,4.957925,5.360490,-5.103504,1.845466,7.485218,5.195461,3.122453,4.491514,1.332446,0.658592,6.056423,0.575694,-0.511176,8.634179,9.940323,7.978156,-2.407668,3.060116,2.704704,-9.845255,8.828041,-5.615256,1.725379,-3.334165,-1.182037,-5.814176,2.952847,4.548674,4.932618,7.166257,-4.662177,1.288145,-6.649008,-3.782190,5.983186,-7.867125,-7.518661,-1.279803,-3.603028,-5.658539,-1.166025,-2.925284,-5.380204,3.021677,2.395013,8.353505,7.387919,-7.913876,6.877945,6.674231,1.817038,-9.360029,7.648553,-6.129759,4.007658,-0.669785,1.281247,-1.684700,-3.584074,8.681537,-4.706305,-9.981930,9.613538,7.315140,1.569296,5.733415,-8.171216,-9.455349,-2.929872,-9.540145,-5.655435,-8.114082,6.202144,7.189218,-5.009433,3.060994,0.192768,1.731120,-1.320017,-7.465459,7.776246,8.356485,9.079698,2.647935,-4.035154,3.241687,6.621355,-3.263913,-3.865321,-6.719614,-1.394829,-8.902491,6.694664,-5.242204,-3.465648,1.470475,-0.420101,-2.941722,5.014091,-3.725154,2.427206,-8.488869,8.082225,8.478384,-6.402741,-4.199896,-5.414151,5.082690,-0.453737,1.548754,-6.909130,5.252092,5.603556,-4.874855,3.222178,-9.866313,-6.794137,3.088994,7.928522,-3.959441,3.093062,-5.630926,1.816471,6.943108,0.336714,-7.327829,-7.334911,8.739342,8.103404,-7.389525,-0.073237,7.112687,9.714911,-4.800698,-0.995807,-1.763668,3.717056,8.644011,-2.607478,3.381113,4.818996,0.214347,8.444713,-9.001771,-7.030788,1.909820,7.989076,-3.287657,-7.600427,-3.135513,4.909051,-3.089726,6.597440,0.487984,-4.295350,-8.719225,-4.005172,5.965382,-4.447039,6.953607,-7.502397,7.253709,5.428808,-5.835807,-9.967660,-1.751324,-0.292630,-3.220203,-0.526377,6.136022,-3.970543,9.827189,-2.152268,-8.355908,-0.367893,9.076408,2.002739,-3.371949,-2.521681,-5.975863,3.991588,-6.551702,8.369799,-5.629893,-9.536797,-4.119470,0.480931,-8.222182,9.078026,-1.154375,-5.636990,-9.095038,-2.456099,-8.182541,-5.980434,4.899389,-0.396318,3.867594,-2.175495,5.466184,6.687882,-8.417156,8.200534,-2.803432,7.999159,-2.536857,8.556845,2.871275,-6.584759,-5.075799,-9.400665,-8.980926,-7.762170,-0.624812,4.089937,3.081840,-4.465227,6.350337,-1.570029,-2.410863,-0.421380,7.741890,3.323928,9.658573,5.273166,-3.758270,3.970882,-7.816620,-3.608773,3.906679,-5.474308,8.184393,-0.319294,9.025417,-4.587157,-3.541443,-7.614011,-0.926309,4.590062,6.073603,-4.461449,-0.915323,2.687907,8.683572,-2.347013,4.759451,7.440184,1.057807,-1.754635,7.228707,-7.789909,3.437818,7.079969,-8.140493,-2.406687,4.299587,-3.788897,-4.746314,-4.660243,5.503669,-8.615127,-3.404489,0.563757,6.396079,-1.899699,7.248821,3.433639,7.627064,-2.455229,9.280599,-1.908614,6.957792,-7.627550,-3.816802,0.537795,8.902635,-3.367269,-6.671836,8.988239,4.231474,-8.257499,-5.700329,-3.986871,-3.142210,-7.870243,8.309814,0.363074,7.239557,-3.467341,-5.344413,3.920403,-0.121214,9.764991,-6.128429,-4.988850,-6.077371,-1.656174,-5.467724,6.235490,7.128516,-5.483195,-5.150743,-7.036312,-2.571240,2.040959,-3.267818,-4.726706,-7.490238,2.832112,3.745272,9.197083,-3.155793,-4.545200,-3.801235,-2.023611,8.268021,-5.643564,-2.400397,9.687232,3.903930,8.244173,-8.163264,-8.857057,-4.130355,0.351946,-1.454639,6.821764,-1.640809,2.671277,2.129631,-9.551129,6.043760,-0.743153,9.152543,-8.417976,-0.377123,6.690446,9.832959,-9.732444,7.132297,7.849591,-8.151490,0.299644,4.211914,7.325361,-6.554900,9.515489,-7.361587,6.861629,-0.882773,-4.785558,3.822329,8.605223,-9.781217,-5.054696,3.364980,8.918206,7.247039,-9.928899,1.651032,7.071655,1.921996,7.483604,6.987860,-9.702879,-3.402501,-5.390066,-8.410533,9.207493,7.409369,-1.240402,3.978437,-4.912444,-9.881840,6.782906,-3.906566,5.309305,-5.233677,9.202519,8.689060,4.656109,2.778122,-3.544586,4.234723,-8.276179,8.514114,4.376359,-8.796162,4.443671,-4.992498,-7.587395,-3.893898,-7.828111,2.734775,-4.768004,8.859207,-4.016507,1.955702,-2.872570,-4.981111,-2.140733,-2.549462,4.066144,3.058490,7.345399,0.639490,1.537632,-9.036248,-8.082236,9.565547,-1.274089,-6.344825,7.230184,6.694357,-9.187480,-8.107764,-2.294251,-0.112951,9.029311,-5.324383,7.955223,6.782678,5.766170,2.058371,4.595068,-0.851066,5.787126,-9.579373,4.512847,8.026000,-9.733922,-7.169299,-8.098175,-7.744038,-8.935101,-6.420908,-2.596133,-1.264439,1.030577,-6.911899,7.888360,1.297350,8.803204,7.225313,2.403716,3.461604,3.137455,-5.674803,-4.977446,3.119182,-5.248854,7.548527,2.972512,-0.730831,7.277379,7.776694,-4.032921,9.358056,9.304695,-5.637075,2.230884,-0.237197,2.539234,-3.524303,7.233706,-3.626374,-1.261091,-0.333436,-1.328576,-1.653974,1.008696,-0.329996,-4.237693,-8.738094,-2.694231,4.967229,-6.793075,-6.152566,-9.738017,8.865243,2.107865,7.499512,6.960154,5.501075,4.879054,7.586647,-2.595842,-5.219213,-1.494431,-4.811048,2.618054,-4.374093,4.068811,2.277408,-1.368608,4.875545,-1.766495,4.619837,-3.926254,0.761734,-1.461824,8.245593,-4.018574,-9.122703,-1.833056,-6.764563,-7.244276,1.651638,9.492914,9.794173,3.374227,3.081046,-0.398961,-6.356531,-9.242636,-0.369249,-3.617336,4.848272,1.488500,3.283619,-9.255548,8.645795,8.874647,-5.981289,8.603140,-5.946019,-5.071913,-7.909810,-6.427841,4.422027,0.660900,8.565771,8.278236,-2.302224,-9.767331,-5.300173,2.681960,0.157358,-5.276539,-5.352259,-6.306876,3.306410,-2.039397,4.859182,-9.401576,7.283212,-1.495374,7.974992,2.206586,-4.326971,-1.579387,-5.333598,-3.081812,-0.723411,1.519756,-8.190876,6.136688,-3.786332,0.296075,-5.583095,1.328307,8.401648,-6.770105,1.549616,1.605895,-9.781565,7.825359,7.591687,-5.218420,-2.009481,-9.910867,9.216245,-7.933943,-6.593036,8.085834,7.784258,-8.553761,-9.278983,-0.280093,2.434165,8.308966,8.230020,-5.350662,-5.817231,-9.817987,6.623720,8.523749,-0.980520,-2.528215,-5.394573,6.926676,-3.320176,-6.069112,-9.110507,3.629747,-7.577045,4.949695,0.259242,1.083194,1.382414,-5.592270,-0.980911,5.369559,-4.786017,1.388280,-0.884875,-1.689353,4.170805,7.302234,2.623270,0.231540,-6.800286,2.721181,-9.741368,3.634267,-6.847479,-0.251383,-1.890081,1.890251,-9.957098,8.872921,5.437928,5.672669,-1.773668,7.241743,1.029941,-5.065503,9.735701,2.313938,-0.140009,8.231620,6.183980,3.535290,-2.860815,-2.845401,-5.757651,2.835829,5.499538,-4.243223,1.248563,-1.990444,-5.270506,-4.062259,-0.756382,3.552830,4.253421,-0.022563,3.932535,-4.288597,-4.311047,-1.213162,-2.410387,1.735089,-6.400699,8.452246,4.175199,3.846869,-4.630552,7.151908,1.894872,4.069802,-1.467553,5.145192,-7.300789,3.339867,-1.963729,6.433416,7.528263,2.063922,-9.130077,9.753774,-3.304311,9.435839,6.771383,1.653281,5.696102,5.659206,-6.354209,5.541510,-7.043921,-2.693524,-5.434617,4.759691,-4.360523,-5.915963,5.689465,-4.703439,-4.491198,0.719476,-7.969927,-2.359328,3.054529,1.704542,4.313098,-2.755978,2.694556,-6.989815,-6.246099,1.013571,-8.742635,7.575048,-9.201977,1.798731,3.105053,-0.474340,-9.886716,-1.435660,-7.942740,5.808321,-8.149662,9.439417,-5.617988,-7.294934,9.098023,1.562904,2.940553,4.194089,-9.444969,-4.039282,8.673701,-5.432145,4.903318,-6.568984,-5.428288,8.792462,5.820738,6.780698,5.499290,5.504071,9.815581,-0.505380,3.414506,-5.735946,5.420425,-0.533137,6.005101,-7.392204,1.717689,-5.747450,-4.515845,-0.989453,-0.387057,-8.719966,5.415432,-5.233871,-9.036394,6.251061,7.262123,-5.649714,-8.419171,2.619045,6.221857,1.606599,-9.735923,-6.679797,7.925232,1.370394,-8.955498,5.211278,3.356172,9.825597,2.002262,5.922948,-2.461196,9.358494,-1.456944,3.604265,-1.842160,-9.637939,-4.878541,5.497395,-5.124216,-5.603930,-1.775799,-6.284246,7.050004,-9.223513,2.498611,9.028989,0.679040,-0.894821,-0.009168,8.095098,-6.966445,5.928493,-2.587907,6.986848,0.564850,-4.353288,5.552709,9.260245,-4.185329,9.008644,-4.766934,3.278805,8.530950,9.415594,9.369294,-2.467148,2.209322,5.229864,1.714695,-2.935568,-3.688557,-3.683124,2.889133,-6.040025,8.042853,0.340329,6.764945,2.404992,9.470426,-7.837157,3.481064,-8.191520,-1.103365,9.072541,-4.663520,2.233199,-8.951885,6.590021,4.308131,6.089206,9.503085,-4.253546,3.488296,-1.493079,2.565256,-8.222109,7.979154,1.363698,-4.311272,0.191163,-3.813997,0.186474,2.078229,-1.427726,-3.626893,4.964709,2.439883,-8.944385,-5.559939,7.866200,7.403033,-8.393510,-5.310703,4.642523,-0.168213,-8.230413,7.965043,5.372631,-7.633030,7.263788,4.287820,-5.604683,3.717684,-7.960916,6.417224,1.141651,0.415395,-6.310362,8.572917,-1.429184,-1.389102,-4.152501,-0.273932,-7.543600,7.883793,3.558866,1.464708,4.676064,4.425298,-8.779929,3.416238,9.905494,2.821059,2.613082,2.372644,2.491490,-7.707481,5.884868,7.440532,5.752110,-9.822045,-9.657433,-0.200551,-0.080101,8.511342,4.028115,-2.832554,4.863692,-9.056435,-3.598896,-0.372968,5.105294,0.093488,6.800658,2.244758,2.187939,0.175144,8.765427,-5.009500,9.432214,-6.169901,-3.118002,-3.627237,-8.553849,-8.133599,-8.350311,-0.023278,9.188632,8.859489,7.607304,9.060994,-0.469971,-9.950479,6.570229,9.649775,-7.456872,6.287070,-4.463129,-8.766776,-2.970183,1.420424,0.156379,-9.467480,9.166721,7.191668,-1.325175,5.621952,0.236177], dtype = "float32")#candidate|5492|(2535,)|const|float32
call_5491 = relay.TupleGetItem(func_1611_call(relay.reshape(const_5492.astype('float32'), [15, 13, 13])), 0)
call_5493 = relay.TupleGetItem(func_1614_call(relay.reshape(const_5492.astype('float32'), [15, 13, 13])), 0)
func_3798_call = mod.get_global_var('func_3798')
func_3802_call = mutated_mod.get_global_var('func_3802')
const_5505 = relay.const([-3.369948,3.828331,-6.630298,-3.452316,-0.412390,-6.476792,-2.905862,8.830074,7.054856,-0.873014,8.972155,-9.617278,3.104923,9.831570,4.884053,6.451341,-7.330035,-8.028697,7.001695,-5.696169,5.631036,-9.732007,5.638045,-0.615417,8.325842,2.724275,6.100423,-8.024737,-6.909552,3.206189,-3.712430,9.499285,-6.163839,7.897701,-6.621058,8.793774,-8.322135,9.728753,-3.942825,-6.045153,6.128898,-7.276046,-9.993930,5.276464,-7.849567,-8.694194,-6.902754,3.075617,1.570699,-7.747356,7.223215,-5.578905,6.659816,4.656056,2.932759,1.334741,9.112382,9.944118,0.216653,-2.103222,-4.348822,-2.309368,-4.646274,0.431179,5.335682,-5.160459,6.524352,-6.714950,-8.467452,-8.943149,-9.009796,-7.812867,4.565255,0.240937,7.562051,-3.008779,-9.553110,-2.022087,4.806503,-0.742351,1.775436,9.349037,4.314235,6.571044,9.300090,-6.630312,4.405665,8.045431,-6.605342,4.120321,-4.048532,7.339740,7.903614,4.857714,4.519840,8.952654,-5.255133,-5.741267,-8.286577,-0.255501,5.799744,9.262705,3.916115,-0.860118,5.313789,4.532073,2.186696,-4.815334,-8.916596,0.516663,-1.667840,-0.832836,5.254518,-0.943044,-6.565407,8.100657,7.342790,1.333056,1.506749,6.965797,8.415849,-7.104973,4.174598,1.164863,6.321642,-2.089770,9.082497,-3.413294,5.025476,2.463047,8.162247,7.633839,7.594117,-8.316351,-2.543852,-4.711965,-5.186616,4.569749,0.273337,-9.116326,0.176098,-0.429092,0.143578,-6.605167,-8.504287,0.008840,-8.098733,-3.804555,1.090629,8.327724,-5.227633,6.770396,-3.449383,0.421242,-8.094573,-0.456541,-7.118205,-3.421357,-8.087092,-4.375507,-8.987583,-9.996637,-2.373531,6.926651,0.570772,-1.332626,-7.103096,3.534969,-6.885747,-2.936737,-5.548245,-4.948969,-8.799531,-5.241516,5.162064,8.586252,-0.764840,8.083536,-6.516740,-1.251342,8.556510,-3.600659,3.810661,-8.204250,-1.018274,-1.099980,-7.659988,0.891050,3.976510,2.881571,-2.860290,2.284933,-7.611023,2.261880,0.071186,5.650235,-6.363114,-3.046321,9.635453,1.063000,9.051049,-2.872063,2.183209,-7.978946,8.259290,5.230653,-2.821498,5.040554,6.878214,-9.825598,-2.284560,6.096332,5.778587,-8.852002,0.888664,-3.028106,2.823710,-0.504515,-7.492615,-2.263385,-3.984565,3.438386,-9.164671,6.397570,8.119259,-3.366815,4.525148,2.400102,3.831729,3.746947,5.440648,2.137242,-0.349396,0.345606,0.541430,9.294530,-7.169515,-8.854365,9.097384,-2.801557,5.769013,-0.728844,6.130362,8.491385,-1.349524,1.435872,-0.920291,-8.705214,-9.905773,5.378699,4.840841,5.701987,8.332919,-7.867542,4.318626,-3.567243,1.084840,-7.622750,-3.351913,0.461352,-8.871506,-7.843546,-5.678277,-3.786550,6.636911,-4.704660,-8.977452,-9.033682,5.723107,-8.471271,2.163454,-6.639877,1.395472,2.931094,-4.031716,-8.171783,1.427583,-3.513706,-1.893358,-8.700456,-1.361279,-0.027620,-6.204817,9.569404,-4.467681,4.142205,-8.696292,-5.133624,-4.931412,1.893815,7.888605,5.421355,-9.475433,-5.063915,-1.324384,-1.830859,6.375478,0.338710,8.539779,8.328951,-3.341350,-9.029026,-6.222751,6.073410,-6.469760,-0.666925,-0.359996,5.277390,1.957266,6.201940,-7.804691,-1.077132,5.635661,-1.983102,-8.888937,-4.434918,-0.519921,9.584698,9.701111,3.112448,0.930098,4.587548,9.615366,7.988566,-4.863036,1.050750,-7.559518,-5.632648,5.971459,1.076513,9.793301,8.975871,-2.874539,-3.539366,1.382879,5.646147,0.076121,-6.629673,0.216290,3.769098,9.952618,8.270158,1.119940,9.809205,-2.844097,-5.134772,-6.861553,3.259357,3.217288,-4.228050,9.846789,4.073689,5.395442,6.939656,5.210556,-7.471283,2.769051,6.056263,-9.659282,-0.760297,7.379381,-2.977351,-9.122949,-6.153567,9.382062,-8.146107,-0.710771,-8.116775,4.211788,3.343771,-2.631768,5.719872,4.853975,-3.800810,2.398312,-3.832774,-6.657663,-9.358526,-8.539335,-9.785778,-6.963570,-7.537939,-6.410648,-7.281763,-2.314988,0.075883,2.426239,6.859290,5.918454,-2.820557,-2.355374,5.977716,4.660631,5.646904,-6.920588,-1.515964,-1.451965,7.055589,1.244146,-1.696243,4.994879,-5.062273,1.688823,7.611352,-2.447180,2.017604,-7.521435,4.342351,1.732808,0.628680,-9.027784,-3.367989,-0.877630,7.171931,0.532820,-0.602854,9.730681,4.307387,-1.208813,7.083652,9.536553,2.921940,5.371928,5.934473,4.306492,-8.905235,-9.532079,-0.855844,3.971482,-6.870904,4.485875,3.649327,-2.305120,4.591303,-0.006225,7.825709,-9.774317,9.141550,5.579959,-4.075622,-7.007185,-1.129276,9.444313,9.046845,-4.510080,3.598019,-2.832277,0.541171,1.749979,7.842706,9.719377,6.225775,3.610096,-3.753124,-3.973749,5.009200,2.398010,5.181313,-9.936284,0.159146,3.187080,3.008949,-1.065407,-8.690990,9.895652,5.374635,-6.273604,-7.011786,3.313799,-0.242037,4.472081,-7.611256,3.624334,6.238014,8.115982,-2.404339,3.554787,-8.279953,-2.771728,-7.321733,4.450129,0.280965,-5.133580,4.848690,-4.305890,9.546944,-4.650679,-1.362668,-9.731240,4.246947,7.547270,-2.617186,4.216090,-4.177760,0.383816,-7.594920,-6.240859,-0.385602,9.611226,-4.648496,3.016629,-7.117171,-2.424034,0.410476,-9.665674,-6.786840,-7.347343,3.763751,1.255123,-2.898377,-7.316248,9.940846,-6.236118,6.612189,-2.117181,3.900995,-7.575015,4.983258,-5.717694,7.575173,2.040491,-3.541197,-4.415113,-2.551066,1.239900,-4.276414,8.344861,-8.654013,3.021007,6.378327,-6.550728,8.201758,-9.214533,8.928816,6.253039,-2.928731,-6.739711,-5.657618,-5.416744,-4.899973,4.753137,3.915556,4.873038,-1.438121,7.085805,-2.679524,-7.562486,-7.145967,-9.831606,-8.813108,-2.864383,-8.011432,0.853670,1.750166,8.496427,-6.109201,-2.613629,6.014652,6.654329,-3.703037,-3.000254,-1.293647,-6.205704,7.303208,-2.201941,-8.519918,-0.603864,6.687427,-6.039161,5.838787,0.012284,-9.855214,3.231227,8.999597,-5.030950,-2.727772,-8.442305,6.846023,2.705352,8.824573,-7.227077,5.530801,-9.359700,3.188955,1.488805,9.618952,-4.036319,2.383612,3.523790,-1.121726,-0.682177,-7.019688,-0.431310,-3.637040,7.383107,6.493369,2.015736,-4.930753,-4.348225,-8.503809,3.637166,-1.396196,-5.898351,9.969420,-7.046565,5.935272,-0.329635,0.802054,9.120429,3.092663,7.573689,7.713503,4.864494,-0.264722,7.814480,9.050734,-3.997856,-7.888646,2.412220,7.055336,8.929884,8.555383,-9.498013,-0.827867,-8.595155,-1.323624,3.017854,-2.264104,-9.378092,-0.475337,-2.410971,-4.397790,8.658333,7.256547,-7.012880,-3.098741,7.627963,-9.950289,-5.508590,8.128492,-8.563661,-1.362388,3.542772,-2.121442,1.097527,2.026315,-5.512182,5.560437,-6.480969,1.152388,2.402077,9.082361,5.415499,-9.363043,-5.529297,-5.162407,-6.121358,-2.974621,4.556879,9.897720,7.186169,-1.423012,-5.100656,4.460388,-0.777234,7.002320,-6.302143,-7.548653,-8.480939,7.880738,9.072710,2.429059,-3.290185,6.234506,-4.132401,8.447311,-4.088035,-9.782474,0.997298,4.996201,-8.102235,3.250698,1.754469,-3.211581,-0.697275,3.323403,2.260323,8.217322,-5.273632,4.110048,6.192093,3.889535,7.281638,-9.735084,0.771638,-4.970091,0.445913,3.857863,-5.084532,-9.289450,5.820595,-9.959052,7.610623,4.928472,-4.939689,-1.339628,1.385059,7.787172,1.299850,8.175099,-3.826191,-4.413245,3.551336,-4.831530,7.727490,-0.500548,-1.794687,8.357573,6.735530,-7.704661,-7.000545,3.016513,-4.482268,-7.153274,6.973255,-2.370800,2.386983,3.390787,-1.905868,-0.677178,-5.397218,0.865104,2.694735,-2.281095,5.678101,4.495505,-1.715897,5.841986,0.242447,-7.122544,6.839556,-3.448806,-0.613035,9.721587,-8.291051,-8.983705,-2.075842,9.253457,4.646106,-3.276295,-5.928887,-3.889313,7.649600,1.945451,9.298198,0.680505,7.757656,5.528052,5.012899,-0.731762,1.694949,-7.722055,-2.985174,0.014094,-7.291031,-4.816198,7.876627,6.622135,-2.498394,-4.868527,-8.717986,-0.007812,2.585559,3.496166,-0.209671,-7.971297,1.923925,-3.768611,5.642216,6.904674,3.590035,-0.019450,-9.614752,9.125856,5.854041,-9.156671,5.884406,4.218023,-1.369823,5.213146,-8.353900,-0.083414,9.218195,-3.240551,9.236510,-1.772149,0.993513,1.241324,-0.025309,2.736163,-6.827410,2.196566,-7.181457,5.732068,-1.264216,-4.121696,-5.134296,-8.509472,1.716130,-3.116355,-5.106580,1.345114,-1.109800,4.164894,-7.043881,-8.065291,-6.527908,-8.780230,-6.223351,9.741959,3.480052,7.885096,9.178158,1.235286,-1.720830,7.984982,-1.139409,0.318034,0.476912,1.336468,3.835669,2.616447,8.306635,-2.180143,8.342322,-5.421417,7.338490,-3.883081,7.507636,5.796672,-2.322570,-2.366361,-9.690272,7.426547,-0.314709,4.432359,-6.390290,7.544381,-0.936015,5.449574,-5.567593,-3.480635,0.347145,-5.213495,-6.259925,6.594418,-5.737656,3.154554,0.048399,-4.249413,7.092884,0.138269,-0.128792,-2.403948,-8.386181,-2.310546,1.951435,7.414033,-5.146885,-3.394258,3.749644,4.315327,1.730669,-9.209132,1.502387,7.435807,-6.386585,-5.966923,6.323685,-3.927028,-4.472554,-6.003290,0.798539,-2.914901,8.378029,8.595473,-7.904719,-0.078381,6.424571,-3.720372,-9.287740,-6.077392,-4.523522,2.799831,0.345562,-2.283557,8.124219,0.672261,-3.619407,-9.242025,-3.073866,-6.457427,-5.122895,3.108475,-8.422869,-0.828966,0.898655,7.036938,1.794200,8.285290,-3.303429,-1.069271,3.234482,5.692262,1.385447,1.023756,8.933144,4.115290,1.178887,6.015621,-9.727413,-8.663244,-5.172546,-3.056603,-1.068274,-2.515847,7.008498,-4.928739,7.428738,-4.492568,6.968116,-1.207987,4.659103,-6.413267,-1.182601,-2.183561,9.891126,-1.802883,3.877269,5.579633,0.688131,-7.167403,-9.724950,7.041803,-7.579954,1.920989,7.770806,-8.059211,7.354011,5.657469,6.828514,-9.430730,-2.761189,-3.360833,1.795584,-9.366317,-1.439925,9.952168,9.718863,-8.588025,-8.464815,-8.664105,6.993420,9.973760,4.122138,2.984507,-8.522336,-3.115438,-3.694699,-4.978851,-1.711695,-2.053778,-0.489293,-1.607529,-0.914620,1.945286,-5.359890,4.803744,0.017635,-7.502560,6.065784,8.209777,0.524633,2.307205,-0.612809,-8.624658,-8.143593,5.490980,-9.363134,-6.760713,-6.376938,-2.442887,7.894126,2.066683,-2.285560,-0.831984,8.395840,6.072477,1.330305,-8.612027,4.149109,-7.282730,-3.481356,-6.325589,9.172080,5.823235,-5.998827,-0.308329,4.295053,-2.358842,1.914846,-1.830674,-5.691791,-7.110478,-8.858437,-6.753872,0.554228,0.172087,-2.867355,-0.438044,-3.122100,-4.801016,4.771440,9.358085,-2.739070,-4.864016,-6.846558,-8.614324,5.763534,-7.784937,3.289414,0.481928,5.396205,-7.845289,-5.766708,-9.953609,0.068306,2.155705,0.396335,3.437127,9.215066,-4.175492,-1.568350,-2.863257,5.720368,0.528371,0.150711,4.077464,5.424493,0.916158,-9.205440,8.686672,-9.828513,5.379469,7.080666,4.886075,-4.991165,-7.535216,-0.053206,-7.302389,1.084994,-8.779255,-6.285206,7.463369,-8.041200,6.795642,-9.233590,-1.989822,-4.910960,9.537926,-6.100235,-8.970158,-7.104248,-3.261828,8.125176,-8.537487,-5.576686,-8.923170,-9.407098,8.903503,-7.785612,9.243338,3.238846,3.800596,5.443214,4.480342,0.771461,6.922585,-8.729042,-5.848032,-7.386508,-8.170729,4.612154,-3.183400,-7.647498,-1.982455,-1.005697,-2.369456,8.136792,2.488965,-1.440394,1.289571,-9.570260,7.489820,-7.477687,4.437246,-1.480804,8.908846,-3.725036,2.440932,1.072503,7.857415,0.784737,9.031903,4.960637,-1.393418,5.360013,1.625508,-4.205783,-7.962824,-2.846424,6.659122,4.866604,-0.343438,-5.290332,4.966236,-1.109012,-6.273003,-2.052047,-0.299465,-8.834681,2.270804,-6.974046,-3.647617,2.891148,7.282320,-1.467154,-2.055341,-3.369544,5.933191,-1.725995,-9.860183,6.340321,-6.072765,3.956051,1.973319,4.001182,1.610803,7.461701,-1.670109,8.544553,-9.241235,1.404358,5.136155,4.261065,-7.955800,7.676380,-0.503917,5.390388,-3.476600,-4.779371,4.610913,-2.844375,4.849612,-9.762836,-5.198109,-9.819595,8.934599,1.230781,0.350428,6.828197,-1.070455,-9.253763,3.972072,-6.783923,-6.523864,7.701154,-6.194623,5.232125,8.152571,-6.013166,5.212210,-0.663996,-8.850369,0.123869,-8.889725,3.402542,-0.924982,-5.678684,-5.679429,0.799337,4.902462,-6.824233,1.541694,4.898631,9.322096,-6.518304,-6.218237,3.081456,1.507053,-2.343281,4.937262,-3.293574,-0.381691,2.420085,5.815025,0.551527,4.438146,1.951990,7.899590,8.562388,-4.593785,5.780964,-2.062001,5.395906,-7.035772,1.269825,8.879924,4.398441,-9.644206,-1.081017,8.392497,-0.407269,6.189683,2.748813,2.765764,1.434678,7.860188,-9.795250,9.904112,5.308239,-0.119935,4.215485,-9.852055,6.936367,9.773852,4.611434,6.298771,7.984415,5.197133,-9.753085,9.629103,-7.807038,-3.199913,-7.801310,-6.530383,5.169248,7.311895,-9.953591,6.538892,-0.464384,-9.717234,-7.737231,-2.574953,-0.421034,-0.281060,-6.502214,9.245436,-8.645078,9.930881,0.509278,-8.965632,-9.257475,-7.680224,-4.851098,-9.042979,-3.666464,-4.596744,8.785358,3.895648,-4.232278,-1.640818,9.685887,1.056375,5.169116,7.517151,-0.113947,-1.422304,7.692242,7.255050,-3.413590,-4.539105,-4.957297,4.996591,3.349489,-1.485687,3.800191,-7.389956,-9.621256,-6.166421,4.999575,-8.487287,-8.457539,-2.046162,5.099487,0.918014,-5.188750,4.783420,-2.005774,-7.035512,2.810546,8.929929,5.990252,2.900370,9.600462,0.369592,5.431168,-4.706637,-0.801533,7.280376,-0.143755,-7.598110,0.692586,-3.174636,-6.150043,4.614728,5.557156,-3.503733,3.131882,-7.775243,-1.783173,9.968234,8.295291,7.384845,-2.486999,-8.122937,6.012955,9.026524,-1.906647,-0.453948,-0.651511,-7.255282,-4.583177,-6.561587,-1.128846,-4.242613,7.724088,1.999792,9.156327,-7.198707,9.890463,-7.171572,0.132177,4.682969,9.421407,6.641934,-1.637772,1.453614,-5.263599,-0.739444,-6.524388,8.856980,-1.906392,7.092783,0.824296,1.660273,-9.919444,9.705353,-3.977686,4.468322,-9.522107,5.729288,-4.932443,8.878591,8.219955], dtype = "float64")#candidate|5505|(1365,)|const|float64
call_5504 = relay.TupleGetItem(func_3798_call(relay.reshape(const_5505.astype('float64'), [13, 15, 7]), relay.reshape(const_5505.astype('float64'), [13, 15, 7]), ), 3)
call_5506 = relay.TupleGetItem(func_3802_call(relay.reshape(const_5505.astype('float64'), [13, 15, 7]), relay.reshape(const_5505.astype('float64'), [13, 15, 7]), ), 3)
func_1033_call = mod.get_global_var('func_1033')
func_1038_call = mutated_mod.get_global_var('func_1038')
call_5507 = relay.TupleGetItem(func_1033_call(relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), ), 2)
call_5508 = relay.TupleGetItem(func_1038_call(relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), relay.reshape(call_5504.astype('uint8'), [6, 4, 9]), ), 2)
func_560_call = mod.get_global_var('func_560')
func_562_call = mutated_mod.get_global_var('func_562')
var_5513 = relay.var("var_5513", dtype = "float32", shape = (360,))#candidate|5513|(360,)|var|float32
call_5512 = relay.TupleGetItem(func_560_call(relay.reshape(var_5513.astype('float32'), [10, 3, 12])), 4)
call_5514 = relay.TupleGetItem(func_562_call(relay.reshape(var_5513.astype('float32'), [10, 3, 12])), 4)
func_4678_call = mod.get_global_var('func_4678')
func_4680_call = mutated_mod.get_global_var('func_4680')
call_5517 = func_4678_call()
call_5518 = func_4678_call()
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_5536 = relay.TupleGetItem(func_3330_call(), 1)
call_5537 = relay.TupleGetItem(func_3332_call(), 1)
output = relay.Tuple([call_5483,call_5491,const_5492,call_5504,const_5505,call_5507,call_5512,var_5513,call_5517,call_5536,])
output2 = relay.Tuple([call_5484,call_5493,const_5492,call_5506,const_5505,call_5508,call_5514,var_5513,call_5518,call_5537,])
func_5545 = relay.Function([var_5513,], output)
mod['func_5545'] = func_5545
mod = relay.transform.InferType()(mod)
var_5546 = relay.var("var_5546", dtype = "float32", shape = (360,))#candidate|5546|(360,)|var|float32
output = func_5545(var_5546)
func_5547 = relay.Function([var_5546], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4021_call = mod.get_global_var('func_4021')
func_4023_call = mutated_mod.get_global_var('func_4023')
call_5558 = relay.TupleGetItem(func_4021_call(), 0)
call_5559 = relay.TupleGetItem(func_4023_call(), 0)
func_1611_call = mod.get_global_var('func_1611')
func_1614_call = mutated_mod.get_global_var('func_1614')
const_5579 = relay.const([0.356154,8.683715,-9.653362,7.760753,-8.007771,5.713776,-1.826407,-2.179484,9.125264,6.765563,-3.825897,-8.222735,1.299642,8.067664,2.417932,7.473948,-0.199161,5.069760,1.199099,-2.139677,5.755791,-0.876105,-1.531737,7.425695,9.108363,-5.974659,-3.584105,-1.909166,5.517585,-9.841007,-5.259563,-4.017056,-1.635285,6.904603,-6.890590,3.664709,5.080631,9.752109,5.267563,7.000955,5.747323,-4.006300,-0.538353,9.292899,-4.829078,-0.511172,9.718499,-8.103507,-1.717117,5.092201,6.788662,-7.554861,-3.192396,-5.804132,-1.572979,-8.068082,7.384854,3.594061,2.684501,8.836343,-8.141976,-8.332284,-9.057877,-5.409196,-4.845251,9.344913,-8.069795,-1.960822,9.304695,-1.145082,-7.345438,9.417356,9.640704,9.819462,7.873073,9.709768,-9.332958,7.130099,-6.261027,-6.514922,-1.401182,-8.686836,2.292387,9.370788,4.816640,8.617625,9.253891,0.835442,1.754601,9.146681,0.997151,1.617994,1.099960,6.440204,-4.290463,-1.241712,1.636519,2.743764,-8.269848,-1.538092,3.112236,6.201826,-6.782702,9.614520,-5.881505,3.124742,6.276342,4.571802,6.066884,-2.847982,-2.462601,-5.612690,8.047260,9.836717,3.457855,0.387147,6.367365,7.481049,4.954488,5.422844,5.727763,-8.440568,7.698952,2.576327,-8.813729,-4.163086,0.747484,-1.406712,1.351475,-0.789965,1.969790,1.773855,-4.186741,7.754798,7.509046,5.453433,7.353578,-3.100801,-7.389879,6.303340,7.951214,1.931008,3.679589,-5.147841,5.723845,2.015064,-0.969548,1.975073,8.644048,3.472093,-9.463028,4.081198,-1.366170,-9.663569,-7.169652,1.543138,-1.637776,-4.134356,-0.804395,-3.811087,8.536408,2.810935,-0.852266,-8.528960,5.647864,-5.998304,5.332503,6.310265,2.826903,-3.315618,2.678973,-4.243696,-1.776501,2.255269,8.602119,7.803495,2.710817,-5.669401,8.935736,8.287214,-0.205804,-2.778512,-1.228984,4.410552,-9.844456,4.177678,5.492102,3.994630,-0.497904,6.306154,-7.365618,-4.598489,9.298357,8.393539,8.933284,2.037609,-3.876664,4.003660,1.157850,8.339949,-5.556061,7.185868,-3.585819,-2.010744,-5.375137,-7.436308,-3.624969,-1.463199,5.792758,-7.628396,8.231433,3.384534,-1.697932,-3.465272,3.222722,0.405148,-7.285990,-0.513675,5.170790,3.289827,-5.988969,-1.157791,-9.148086,-4.408938,-4.626023,-2.343879,-1.709046,5.068299,2.720715,-0.237072,3.446981,-1.715553,-1.781469,-1.076662,1.197263,4.033862,0.747707,-1.827186,6.821768,-9.622378,-8.372154,6.862374,-5.288579,5.607314,-6.456415,-4.778712,3.292872,3.982013,9.661232,1.564690,2.137138,-0.149159,-3.627472,-9.485769,1.880282,7.892738,2.880302,-6.580516,0.769342,0.301785,9.328153,-5.380724,2.943301,3.746603,2.460239,5.760545,8.227564,-2.091082,6.074378,3.417507,3.968869,-1.813091,9.657581,-6.092353,-4.702293,-8.556357,2.361238,-4.750703,-2.232713,-1.386879,-1.888649,-0.627797,6.669316,7.549710,6.154111,-1.042751,6.291239,-7.844766,7.405871,2.963361,-7.445780,-2.314329,-3.889633,-9.524499,-2.757514,7.026906,7.046639,-5.882091,-0.430207,6.609379,4.055245,-5.576749,-0.596738,7.622609,0.316363,8.416900,9.089437,2.420964,-7.679706,-5.324872,-8.497716,3.102794,-1.636813,8.405494,2.058471,-6.597283,-0.512562,1.426089,5.404179,-0.997411,4.376081,6.363281,2.098083,9.585928,-4.552730,-6.426313,0.250417,-9.063128,-8.001877,-5.019753,-4.555803,-9.701096,3.699186,0.721396,-6.023742,8.788283,8.615974,-6.465600,0.612777,-6.014228,-7.783783,2.016632,-9.704889,5.209616,0.072739,-7.413216,-7.151319,-8.563137,-2.225407,8.361660,5.636911,6.701531,3.062384,-0.211253,1.196619,-4.396273,9.183147,7.396123,-0.599831,-6.151460,-1.579362,0.114844,1.539903,-4.223745,-0.572982,2.207508,-8.451862,-6.655861,-7.316430,-4.368744,-2.801380,2.242307,-5.759327,8.025243,6.539144,-7.691770,6.869762,2.713896,1.994099,-4.027600,0.916710,-0.972169,-1.413144,0.738564,3.325485,-2.781275,-2.335009,7.845435,-0.025275,0.788786,8.572336,2.955724,-2.334052,9.046935,-9.447059,7.560831,7.621374,8.762542,-7.996037,5.094470,7.462197,0.898246,6.318074,-7.381150,-4.094340,-6.364313,-4.562644,-1.441156,-6.788004,-3.044462,6.151087,-8.321840,9.592954,9.995972,-4.664821,0.938633,-9.582129,1.521690,-3.812797,-0.863136,-2.203292,-1.009773,-6.422625,4.053872,-8.196339,-3.371493,6.872510,8.933981,-0.640356,-9.616101,1.094363,-1.982097,0.556192,1.016778,-6.878913,-6.044187,-6.480441,5.893680,1.411599,4.987843,-4.202168,3.106875,-1.522926,5.866743,2.379269,5.139075,2.522426,6.943273,-3.717371,-9.232582,-0.916942,2.330980,1.352134,9.860237,2.928754,9.190483,-5.750899,3.643314,5.879922,-5.831202,-4.254797,3.408855,5.351773,-8.732516,9.595953,-2.359872,2.740495,8.049689,-2.456213,3.982654,9.150910,-3.227017,-7.100534,5.658767,-0.805234,-1.309338,2.653647,-9.923957,-1.930468,-4.989147,-7.429545,1.241239,-2.226565,-0.188322,-3.595871,-8.143945,-4.559802,4.126302,-2.907468,-3.017609,-6.914525,-6.266716,-3.100454,1.185181,3.743228,4.223662,-6.161292,-6.192237,9.528276,-2.350218,-2.552822,3.688914,0.350962,8.659583,4.858704,-1.298450,2.915551,-5.616685,8.258716,-0.198854,6.947124,-3.389197,8.293157,0.352951,-9.798819,-5.998826,-6.058075,8.064689,-9.065414,-2.060785,7.565602,-0.780383,8.857786,-6.466518,-6.031348,6.479394,-0.835727,5.234152,-3.700292,-5.072077,-8.270019,-6.020337,9.090050,-4.786700,-3.979876,6.382338,4.003475,-1.353086,-2.067454,-5.609831,-2.139691,4.250924,2.534363,-3.064342,7.270125,-7.685418,9.996603,-6.537254,9.373544,-6.458117,0.537646,7.753355,4.024564,2.827442,-3.507595,-8.840170,-0.234955,-9.130665,8.320615,2.988803,1.532041,-4.200241,-7.243803,3.592366,-4.117244,-0.993498,-6.888952,-7.796377,3.421001,9.814259,3.764991,-6.528159,0.429911,-1.360833,6.740181,5.885416,2.215154,3.441323,1.171566,2.547299,5.737738,0.609797,3.694557,7.361665,-3.247910,5.886132,7.392937,9.057997,-7.026283,8.269145,8.701765,-2.415790,-3.369945,7.164661,5.097789,7.417747,-1.367402,-5.401749,7.156288,-3.464118,-5.055645,5.478466,-3.426620,2.327549,-8.091294,-2.528210,7.723682,5.735835,7.677369,6.481167,2.078575,8.222346,-2.554300,-3.182025,2.329124,6.224947,-8.165984,7.098669,9.260643,7.478498,1.105570,4.519239,-2.337800,0.221682,3.571721,-8.233499,7.766551,-1.695663,9.034149,1.000342,-0.578309,9.963629,-8.434999,5.103169,1.595350,6.399285,-6.931546,2.960996,1.717746,-5.446009,-8.427262,-9.303590,-7.883178,8.022864,1.245882,8.913733,8.569462,-6.409468,7.532034,5.855842,-5.140314,-8.856046,5.687765,6.678883,-5.234483,-5.393645,8.892243,-2.490067,1.650034,2.920939,4.755270,-5.802430,4.281101,-2.756276,-9.311867,9.772041,-5.119696,-3.733454,-5.318707,6.492919,8.004797,3.367860,-6.040536,4.078419,0.950641,-3.680339,1.391427,5.139159,2.964450,5.561554,2.085604,-1.516230,-0.123075,4.762277,-5.946031,1.967091,-1.596939,-2.603128,6.846931,4.704907,3.512587,2.916807,-3.684123,0.614895,-4.022728,-9.248101,-6.223493,2.575878,7.069950,5.839376,0.570559,0.924739,9.499001,-6.126573,9.848123,1.707928,7.088549,7.044096,5.107769,2.573490,-0.769609,0.544500,-7.526021,3.423738,3.307344,-8.881575,-7.033365,5.208411,1.665430,-2.296314,8.343784,2.824713,-2.594839,-2.896935,-3.840411,5.205089,1.026821,5.838239,8.147059,9.997195,7.069685,-6.636933,-1.886018,1.258817,0.058186,-3.797079,7.708881,-2.114838,0.651890,5.512878,-7.113609,-2.083380,4.160589,-9.403638,-4.165719,2.154589,3.873414,8.642980,2.472331,5.842583,-8.526352,2.441582,-4.249338,8.211391,3.654433,7.283961,3.351989,5.158074,6.195317,-1.565595,-7.857516,3.208319,4.927969,3.635637,6.152268,3.674720,-4.416235,6.479541,-1.177356,-2.698381,7.209099,-0.196896,6.971070,9.910193,7.738191,1.078034,2.942203,4.526738,9.750368,-0.638324,3.886110,7.084912,-8.927105,-1.065355,7.376757,-3.487327,-7.945024,-9.691328,0.908203,-8.828494,0.214524,-2.117866,-3.261701,9.035824,-1.704561,-3.391447,4.612837,8.577595,-1.375789,6.095595,3.589106,-4.992426,-8.643899,6.990415,-9.132930,-3.368354,2.973277,9.112410,-9.707410,-8.576455,-5.918373,-4.916399,-3.041806,0.709990,-8.225668,-1.744544,7.926845,6.849229,3.433460,3.536586,3.503344,5.110480,-9.328921,-0.302957,1.077300,6.748594,-5.922542,-1.435416,6.157897,3.651373,-4.993018,5.236207,8.083020,7.248639,-8.555373,-9.165969,-9.019455,-4.085871,-3.727843,9.555807,9.366255,5.503621,-7.674625,-3.224927,-8.467967,8.338597,-6.214978,-5.638498,-4.344398,-5.175511,-4.777332,-2.108088,8.521993,6.959633,2.940883,6.895325,1.068934,-3.278701,-5.018232,9.019264,0.306110,6.563509,-5.896991,0.346581,4.628396,8.675239,-5.925237,-5.786183,-5.833680,-4.199561,-3.511979,9.475505,-3.525579,-5.855687,-0.282619,9.558259,-5.283029,2.618545,-0.969126,9.645707,8.725526,6.921397,-4.500114,4.142607,9.048201,4.335356,3.113509,4.154219,-7.884721,3.783783,-1.709465,-1.007790,7.860588,1.926198,-7.460480,-2.227063,5.870051,-9.570839,3.436720,-3.876231,4.380092,2.421974,-9.423466,-9.359290,-3.223929,-4.237269,6.741185,4.848974,-9.569662,-9.505468,-1.870319,-4.485407,8.983232,7.510860,-5.247070,8.592337,0.818062,1.819610,-5.185961,7.847773,7.513898,1.315355,-8.619961,2.097666,3.549927,-2.221046,-4.855548,3.658738,1.557754,4.910173,-8.483081,2.641163,4.477765,-4.700457,-4.013952,-7.585951,0.063572,-9.106481,-2.026901,-2.696436,-1.721844,3.285577,-0.594919,-0.688772,-8.926865,7.966673,-7.568297,-0.400951,5.524256,0.284202,-3.854860,1.976070,2.663771,-6.591928,-2.883494,6.531038,8.782507,5.003948,4.361577,2.637670,6.800710,9.662812,5.546208,9.172737,-5.124649,-5.339116,-2.485710,-3.415440,-1.475855,-7.316462,9.613591,5.749621,-0.254464,-8.595424,-2.424796,1.128076,2.892649,1.170759,4.176963,3.361394,-6.993074,-2.383876,-1.223091,-4.003351,2.129839,2.496664,2.437833,4.621416,2.309934,3.736285,0.408711,-4.465732,6.923916,2.534729,-3.700179,-5.447648,8.717603,-2.819478,5.445083,-1.161339,8.112516,-2.494919,-9.756849,-7.135173,6.699547,0.235590,1.572991,2.613751,4.670078,9.482224,-3.288080,-1.603538,-8.806835,1.070312,-3.021987,2.833822,0.415624,-1.327064,6.678169,9.402402,-5.604817,-7.889393,-7.331607,3.217067,-5.913187,-0.826802,-8.784742,-4.331970,4.685517,4.882495,7.278752,0.760529,-1.610708,-6.725106,-2.605995,-0.824113,-4.686057,-7.188360,9.602963,4.130832,-6.321767,-1.497715,-8.902510,-1.075226,-6.938043,5.532312,-3.755737,-8.683221,-6.167089,-8.474765,-2.062372,-4.190661,1.723276,-0.502657,-6.381678,4.758654,1.985504,5.496793,-8.835397,2.174374,1.700561,1.852671,3.790677,-2.769484,-9.937774,-3.242671,-1.959282,-6.276111,-2.851955,-0.193475,-2.918443,3.273960,2.907369,6.029082,-3.327276,-9.371810,-5.469408,4.733515,1.530282,8.044404,6.347732,-3.935383,-3.829392,0.736136,9.044733,1.067263,5.772636,7.350663,-4.734519,0.398476,8.848701,-6.489545,6.422295,3.050523,-5.091079,-2.757262,7.924257,0.046760,8.259514,-9.602034,-9.314299,-5.165220,-4.625422,-5.605838,1.181340,-7.112911,5.889572,-5.007815,-5.862668,5.271223,-7.058081,-4.571572,-7.336181,-1.266146,8.871634,6.627944,-2.275583,4.455252,9.817436,3.974112,5.574725,-0.391582,0.302015,7.471998,-1.227928,-6.680900,3.125339,-2.489398,-1.397971,9.559615,8.466799,3.473892,5.546491,9.095570,-3.558887,7.613400,-8.648866,-5.130677,-4.932368,8.595660,-7.790790,0.899987,0.862610,1.735989,-4.941438,5.071980,9.959050,-5.745209,6.654767,-2.909582,-2.642855,-8.795716,2.619343,-1.396488,-1.389448,-8.262255,9.082583,-3.617172,-7.817031,-3.274057,5.823543,-6.369590,-6.424452,1.735926,-3.034285,6.129923,3.839065,1.259292,-9.555553,-5.243048,-1.070034,9.738292,-3.959812,-8.614179,-4.211206,-0.047298,-1.806168,-2.403844,6.964283,-8.787257,4.474730,-6.031660,6.537595,8.040567,-1.142505,3.927642,0.097046,-1.708260,-4.445666,-4.133243,-0.462968,-6.607569,1.054952,5.789865,-8.758696,0.268709,-6.075492,-8.217883,5.604520,5.991750,2.085775,-3.024784,-7.842281,8.554416,6.688624,3.039190,-9.944104,-3.568892,-4.171269,-7.766150,-0.698878,9.020423,4.519368,-2.198553,5.725767,-1.375207,-1.146885,7.231884,-9.901430,-3.800990,-1.299726,1.779688,8.631408,8.683633,0.981745,2.911171,2.380240,-9.946335,-3.347288,3.842620,2.337918,2.883413,7.511000,-6.322642,6.324233,4.988868,-7.189967,-2.236024,4.780595,3.345245,3.949699,-0.062119,8.123970,1.165439,2.422966,-2.994953,9.738365,3.935314,-0.933874,-3.484240,-6.939444,-7.745774,-1.435696,-8.926613,-1.354210,-2.170277,-4.384588,-4.583790,-3.705804,-5.860990,-9.583231,-3.400133,-8.452092,-2.652815,1.199806,-7.120645,5.306525,-9.758742,1.603538,0.991480,-2.979435,1.592688,-4.865685,7.659031,0.391875,-2.896886,-0.921978,6.029806,-9.690772,6.743942,-5.489570,0.108794,-9.840509,2.359197,9.349271,2.197577,8.822409,-7.442993,-7.314767,-4.471501,2.274343,-9.796306,5.262160,-6.071183,7.215665,7.517982,7.422363,5.602029,-7.639297,1.520306,0.498461,3.703329,5.916869,-0.263834,2.163010,-3.777594,-9.489399,-7.405460,-3.406619,4.969088,5.360627,-9.642166,-5.992160,-1.216782,-2.314294,-7.605126,5.382452,-2.843207,2.595865,-9.737260,1.536083,-3.212097,3.198823,1.906712,0.308770,-8.374027,2.417429,-4.557801,-5.578194,-7.171110,-0.938527,5.068099,4.841655,4.757037,-8.527277,1.539127,-6.569549,3.206170,5.654449,7.274302,-1.955201,9.928992,-6.436218,3.053350,-6.902497,-5.601463,-2.384441,-2.424900,7.796184,-6.123287,-0.785257,-3.550177,1.407772,-0.185794,-1.901751,-6.636680,7.003654,8.247348,0.114782,1.399388,-0.495546,-1.237220,1.300308,-1.810592,-2.841807,-4.817113,1.751617,4.931565,3.616571,5.125874,-1.992391,-1.973099,6.246247,3.272868,-1.764478,-4.126500,-5.810132,8.558286,-0.941473,3.461845,-5.253488,8.695338,-5.657300,1.357086,-6.214854,7.906117,-7.955886,3.722806,0.426159,-0.422300,3.288174,2.452749,6.677906,1.872724,-3.659790,3.365477,-1.686050,-0.464023,4.352403,-2.949682,-8.044474,-9.223233,1.586621,-9.965106,3.850479,-1.962626,-8.429169,-9.554487,-2.800386,4.594642,-9.862444,-3.905272,8.294212,1.554997,-6.675299,-5.365207,-9.569175,9.302870,-4.795762,-1.031969,-1.096939,-6.502650,-9.677074,-3.810768,-5.499443,-1.884659,-4.522183,-5.451522,1.435964,7.691339,2.203157,7.553953,-1.138121,-6.807592,-9.975072,-9.131295,2.872362,4.490904,-3.869542,7.500959,6.411230,7.896759,-6.256918,9.572657,-9.203936,1.196763,9.908579,6.031736,0.602053,-6.612125,-1.057623,-6.377081,-4.879594,-8.003434,4.669366,0.503228,8.201574,8.831029,-2.236803,2.073108,5.446317,9.885572,5.016845,-9.148529,-3.209720,0.476734,-5.558975,-9.692848,9.949645,4.012539,-5.956695,-8.615202,8.724472,1.898395,-9.259575,-2.830629,0.207573,-3.936241,-0.109685,9.777503,-6.133645,-5.774509,-7.837799,7.394620,6.695812,0.658024,1.034672,5.748866,1.843945,0.034567,8.858763,6.674731,4.584656,-6.452907,-2.339476,-0.310787,-5.393949,0.206849,9.171429,-4.228909,1.961393,7.289662,0.754635,-8.404566,5.485274,2.086355,0.713949,-5.496134,-2.698743,5.432113,-2.851956,1.153118,-8.542860,-6.597448,5.341723,-3.680162,-9.182426,-8.569856,-2.206679,-1.622536,-8.619077,-3.846431,-1.991443,-1.364932,5.019199,4.014598,1.518938,-4.495631,-4.370300,5.938411,-2.405597,-3.036915,5.533163,-8.802973,6.158842,-6.421679,-7.993047,-4.640314,1.733755,-0.441934,-9.758145,-1.926802,-9.706975,7.869312,7.856226,3.251315,-1.418880,-9.393507,-3.570496,5.005686,2.902651,2.649631,-0.437237,-7.592360,-4.803021,9.055525,3.859404,-1.794250,-8.609111,-8.379490,-2.004557,9.105351,3.726556,8.713124,3.924212,-7.155134,-2.799628,-5.451833,1.536759,-7.648626,8.285956,-8.594612,8.133675,2.189202,-3.655656,-3.594832,5.435075,6.113782,6.512443,-0.689195,2.634852,-6.658992,-7.641692,-4.244357,5.043747,5.202430,-2.233215,2.859665,-6.162960,-9.098754,-6.674377,1.084568,-0.735508,2.495455,8.901250,-1.145283,-2.621954,-1.111523,-2.486773,-2.164584,4.158237,-3.604738,8.637922,-5.647772,-8.566435,-1.694074,2.342162,-6.917602,-2.026287,6.286236,5.725964,-5.254507,-5.525823,-1.485540,0.705253,5.791449,-3.405860,2.520580,1.544363,1.237194,-8.112636,8.685262,-4.068744,8.242347,3.350063,-0.116317,0.849566,-3.634202,-0.701136,-5.428764,8.203536,-2.408295,3.739773,6.793256,3.491452,7.720351,-1.511105,4.757917,-8.059307,1.933985,-7.798442,3.839071,-3.576382,1.590271,-8.926828,-4.900809,9.332454,-0.141783,-6.741872,-8.817949,-8.953678,1.231943,-9.684032,1.353777,-1.381842,-9.977806,5.591516,-3.409858,4.235216,-6.963132,4.738495,6.201149,1.993273,4.919527,2.444544,-1.836001,2.597407,-7.442044,-7.372147,2.605621,-8.829395,2.521608,5.660011,9.153579,-4.841522,-4.204886,-4.218635,-2.683193,8.288146,-2.218333,9.866057,0.432844,-8.630423,-5.507150,7.045510,5.880990,3.967834,1.062187,-7.286766,4.974906,-2.668987,-4.562118,1.008936,4.394228,3.761420,8.415786,-8.891075,2.028196,-5.691046,5.326141,0.071042,2.187975,-5.050292,6.380589,5.083871,1.907140,5.412290,0.048084,-9.945379,4.470202,-2.641640,5.520446,6.577605,7.989370,-9.762804,-7.014617,-4.729529,6.173442,-0.351252,6.614983,9.551885,-3.298675,6.663597,-9.929579,-2.086349,5.557648,-2.282428,6.573610,7.768141,-4.377558,7.648776,-5.480887,-2.609465,-6.773810,-5.627938,0.150633,-1.973136,-1.484309,3.588611,-8.682637,3.299411,-4.714686,-0.798203,2.549374,-8.309327,4.126984,-5.566600,4.986298,4.324694,-6.180946,-5.413958,-7.764793,3.106071,-2.916190,7.526481,-5.513797,-8.918218,-4.764403,-8.179159,-1.908109,5.228823,-4.420068,8.703194,6.325150,-7.432162,6.591682,1.977581,4.278293,-1.190589,3.838144,-2.019904,-8.582940,-2.726112,1.772942,8.151638,3.379717,-6.832438,-7.660220,-6.433164,-2.449899,6.130003,1.392353,8.623060,9.644825,-3.089126,8.410009,-4.578721,5.888214,2.573915,4.877026,-3.229508,5.672507,2.107799,5.235053,4.834490,-7.584738,7.778024,8.128051,-9.346756,-8.331088,9.697231,-9.985397,-6.578990,-4.935360,-9.254320,-2.264886,2.113461,7.390304,7.569565,-6.820332,4.255569,-2.765822,-2.393551,1.642124,-9.000430,7.045438,-9.856867,-3.538645,6.012516,-4.995590,-6.519986,-1.142509,-2.247979,-7.420434,-8.374627,8.930703,0.661912,-8.405025,9.608361,8.194532,-8.087560,-2.209403,-8.121396,5.130553,3.758157,1.564655,-7.363467,1.231481,-2.775622,-3.775108,-9.868248,-4.168445,2.679369,5.375606,-0.897119,8.031730,3.973664,0.062031,-3.836718,4.343285,-7.540523,1.633932,0.357962,-0.209940,4.153411,-3.472928,-9.812640,3.253392,-6.545086,-8.960801,9.431487,4.393785,4.513538,-1.109070,5.984329,-2.041428,9.176355,-6.346004,-3.049093,-7.918890,4.076142,-1.475425,1.741048,-9.027452,-3.137717,-4.446552,-3.266389,1.433299,4.121095,4.953196,4.145751,-2.337079,1.920405,3.096933,2.745435,4.339211,5.104599,-2.940009,-5.428798,-9.431071,-2.595292,-5.533103,-4.902194,-4.784869,-2.359765,-9.099678,7.681967,-7.637763,8.110532,2.599962,8.103686,2.455018,-7.600780,3.067227,-7.792779,5.417625,-3.697306,8.133575,3.621066,-1.023442,7.676169,-5.649920,-8.695982,-4.945457,-4.622535,-9.081076,-4.354753,-6.366813,-9.876992,3.657988,0.855037,6.405814,1.432739,-1.472816,-7.131730,-7.546753,7.175527,4.367127,9.129472,8.520180,8.584377,4.195236,-4.980078,-6.464471,3.994952,7.670857,-5.869774,-1.487487,-8.247696,1.058255,-2.536736,-4.371428,-4.887892,2.011642,6.565997,4.664581,-5.010105,6.346695,2.391126,6.577777,3.163213,8.924393,5.929310,2.412930,0.809119,1.957161,-1.746823,0.273405,7.535353,-8.273994,-5.775236,9.431897,-6.708658,6.791164,-4.731155,-7.345120,2.977449,7.583387,-6.229534,-3.287999,7.617125,1.238264,-6.134416,-0.431288,2.823947,-8.190860,6.772684,-2.164872,-8.889478,4.864968,3.721225,5.293417,8.060254,3.464386,4.527374,7.245587,7.715760,7.806502,-4.562335,3.181198,-3.097500,1.609090,2.045029,-9.479819,0.923281,-2.126095,3.112776,7.089091,7.426830,-4.188392,2.385439,1.802293,-4.880306,-5.556860,2.708583,-2.974933,5.588980,3.060606,-1.638045,0.931016,1.204702,-1.732011,8.877303,8.898864,-0.111547,9.134734,-4.843983,2.281678,1.361762,5.948913,8.209646,1.904724,1.638385,-4.278522,-8.203317,4.655877,4.537281,-9.382435,9.140871,1.332756,-3.946221,3.646909,-9.792932,5.039135,-0.138008,-8.422159,2.757873,4.342994,-4.049203,-3.208105,4.481541,-3.479553,2.927098,2.247623,-9.340126,-0.385343,4.520040,7.059398,-3.974556,-0.768380,1.150726,6.000431,-6.348911,7.003812,-6.843414,2.344384,0.212985,-3.143375,-0.022536,-3.854680,3.120616,4.622938,-1.001058,-0.149818,-0.778825,-9.641625,4.904899,-6.286448,-2.460510,-7.860398,5.573866,-7.143599,4.213522,7.116475,-6.335400,-6.842056,-9.149684,-8.817024,4.939539,-4.980161,8.757162,4.407740,-4.972364,-7.010553,-8.714940,0.441128,-2.593565,-2.844686,-5.611013,-5.578580,7.032727,-6.141577,-7.383195,2.399335,4.893011,7.050283,-0.218109,7.223064,-8.422134,6.844914,-1.862216,-2.625156,-1.877568,-6.493118,-0.419417,4.665760,-5.006520,-6.628049,-5.468696,-6.181464,4.008384,7.707003,-7.973622,-9.136594,-2.959065,2.950159,-8.029634,-5.770148,3.533828,5.872099,2.602451,2.686575,7.989767,-0.037320,9.977420,4.651063,5.839517,-7.241127,-1.573431,-8.125835,-9.699345,5.420130,-2.081693,7.434694,7.098027,3.176138,6.155271,-4.369249,-7.922617,3.446984,5.566795,-8.302422,1.053536,-6.314051,8.522197,-8.722355,0.161629,-3.636612,3.365154,8.511007,7.562414,5.060469,3.467635,5.380355,2.373134,-8.047030,8.105505,0.691826,7.990048,-6.190917,-0.217239,3.841260,1.130602,8.149263,4.834735,2.358251,-4.865967,-4.568348,-9.970145,9.811711,-3.398221,-2.361825,9.710737,-3.964946,4.518889,6.504970,3.348266,6.034348,8.515175,-5.455962,6.205037,8.607355,-6.450937,-3.654876,1.617878,-2.295246,2.770009,6.808663,-9.870547,2.501228,0.881935,-2.250074,6.271670,1.702577,-3.317177,-4.939511,8.999387,6.807498,9.013554,-5.605199,-8.242424,-1.438318,5.879063,-0.010997,6.447090,4.149519,-0.051127,1.867995,-5.341497,-1.450810,-6.757136,-6.704017,-0.044494,-9.802032,8.881284,-8.882073,6.500167,2.880192,2.770287,5.246108,-4.279750,3.315330,-5.236882,-8.746602,8.999082,1.821588,5.633211,1.938381,-3.879150,4.141698,-5.096618,1.603075,-6.695130,-0.109259,-6.426847,-8.483381,-2.280014,4.770296,1.693645,3.978024,8.099033,-5.123454,8.994288,-7.354834,4.599401,9.453917,-5.320630,-5.562768,-5.484301,-6.107893,-2.171391,2.325227,-7.911031,7.631990,-4.554986,-0.863297,3.996976,5.677920,-3.981463,-9.079398,8.929162,8.636561,-8.356501,9.735506,-7.260462,7.021894,-6.701930,5.954119,-6.402245,-3.142913,-4.362895,-3.114405,-8.849856,-3.705216,3.579155,-2.814742,-5.940994,-7.455918,8.618339,9.951217,7.978804,-3.339426,8.301173,-6.351203,-9.318569,0.471290,2.459162,0.039513,3.096539,-9.556577,-2.651066,8.330904,-6.286907,-8.928426,0.610219,9.421027,-1.266083,4.545754,-6.690578,4.854810,-3.693415,4.270648,-6.278662,3.597636,-6.467889,9.519200,7.241232,2.137196,-3.018949,9.212156,-4.212110,2.756913,7.907800,-3.252075,-7.012545,-4.779555,-7.240290,6.244366,-5.332596,-5.222792,-4.579775,-6.033561,7.425740,-5.670561,8.269044,3.766561,-7.415426,-4.482729,4.981471,6.299748,4.853520,8.091965,7.118187,-3.999723,4.131351,-1.431668,-4.383004,4.559893,2.164568,-5.702718,-8.086725,-9.057061,-2.218287,-4.530470,0.842614,3.973483,1.916520,3.634440,8.635232,5.660374,-9.369955,2.354184,-5.664515,-2.330147,-7.583501,-7.475962,6.497079,6.610916,2.963714,3.234267,-5.732677,4.914257,9.040383,-3.869866,5.379092,-7.333946,-1.410629,-2.690293,-8.625913,-0.706806,8.426962,4.814260,1.425796,-9.684729,-6.041827,8.479874,5.560684,0.808629,9.795738,5.936573,1.355656,4.848049,1.313475,-1.645064,-2.278061,-7.729990,2.121972,-0.181846,9.787743,4.185502,3.939379,-1.635622,-5.329119,3.950587,6.105149,-2.016128,-3.138110,-3.835647,9.651677,-1.772141,6.514919,-6.125832,-6.245019,0.460721,3.479033,-3.583478,-6.287337,9.447180,-8.549839,-3.418874,-5.340123,-0.266414,-1.883928,-5.190780,5.077480,-3.733163,-4.452316,2.622854,2.558557,-4.768098,2.689530,3.638541,1.532300,-3.070200,-1.079320,5.068761,9.614957,8.572590,4.075829,-6.043807,-8.671497,1.055484,3.626088,-5.578059,-2.075935,6.557095,8.240035,1.712648,-0.980711,-6.615992,-9.234026,5.874186,1.601848,-6.984162,-3.375167,8.278722,1.888298,2.909967,0.850302,0.152273,-6.985473,2.597187,-9.470967,-8.821169,0.831499,4.423561,3.644891,4.362454,8.537913,4.095236,-1.727734,6.001086,6.290374,-7.055159,-0.629894,-9.749621,4.916269,-0.429644,-1.216208,-6.172779,3.006305,-7.150169,-3.441353,9.415864,3.425750,9.720524,7.830333,5.735330,-5.815666,1.772680,8.534380,9.020936,3.876738,-9.724295,2.451739,0.330161,-9.968300,2.766316,-1.559645,0.100620,2.091475,4.107455,0.335209,5.945279,4.683000,-3.150480,5.494132,9.702043,4.843946,-9.978502,-4.033893,0.641434,3.034638,1.073237,0.920291,2.674385,2.628146,1.210780,4.830009,-3.852300,7.389352,-9.110016,9.172469,7.744877,2.368654,5.657296,-1.547026,8.637679,4.686500,0.656114,2.225762,6.554820,5.807055,0.925318,2.406338,0.813779,-8.092964,6.323840,9.187988,-6.206810,0.552153,-1.907590,-9.443181,3.455532,-1.696265], dtype = "float32")#candidate|5579|(2535,)|const|float32
call_5578 = relay.TupleGetItem(func_1611_call(relay.reshape(const_5579.astype('float32'), [15, 13, 13])), 0)
call_5580 = relay.TupleGetItem(func_1614_call(relay.reshape(const_5579.astype('float32'), [15, 13, 13])), 0)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_5583 = relay.TupleGetItem(func_3987_call(), 0)
call_5584 = relay.TupleGetItem(func_3989_call(), 0)
output = relay.Tuple([call_5558,call_5578,const_5579,call_5583,])
output2 = relay.Tuple([call_5559,call_5580,const_5579,call_5584,])
func_5585 = relay.Function([], output)
mod['func_5585'] = func_5585
mod = relay.transform.InferType()(mod)
output = func_5585()
func_5586 = relay.Function([], output)
mutated_mod['func_5586'] = func_5586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5721 = relay.var("var_5721", dtype = "float64", shape = (2, 5, 9))#candidate|5721|(2, 5, 9)|var|float64
uop_5722 = relay.log(var_5721.astype('float64')) # shape=(2, 5, 9)
bop_5728 = relay.maximum(var_5721.astype('int8'), relay.reshape(uop_5722.astype('int8'), relay.shape_of(var_5721))) # shape=(2, 5, 9)
bop_5733 = relay.divide(uop_5722.astype('float32'), relay.reshape(var_5721.astype('float32'), relay.shape_of(uop_5722))) # shape=(2, 5, 9)
uop_5737 = relay.sqrt(bop_5733.astype('float64')) # shape=(2, 5, 9)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_5739 = relay.TupleGetItem(func_2995_call(), 0)
call_5740 = relay.TupleGetItem(func_2996_call(), 0)
output = relay.Tuple([bop_5728,uop_5737,call_5739,])
output2 = relay.Tuple([bop_5728,uop_5737,call_5740,])
func_5747 = relay.Function([var_5721,], output)
mod['func_5747'] = func_5747
mod = relay.transform.InferType()(mod)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5748 = relay.var("var_5748", dtype = "float64", shape = (2, 5, 9))#candidate|5748|(2, 5, 9)|var|float64
func_5747_call = mutated_mod.get_global_var('func_5747')
call_5749 = func_5747_call(var_5748)
output = call_5749
func_5750 = relay.Function([var_5748], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5229_call = mutated_mod.get_global_var('func_5229')
call_5892 = func_5227_call()
call_5893 = func_5227_call()
output = relay.Tuple([call_5892,])
output2 = relay.Tuple([call_5893,])
func_5894 = relay.Function([], output)
mod['func_5894'] = func_5894
mod = relay.transform.InferType()(mod)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5894_call = mutated_mod.get_global_var('func_5894')
call_5895 = func_5894_call()
output = call_5895
func_5896 = relay.Function([], output)
mutated_mod['func_5896'] = func_5896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5229_call = mutated_mod.get_global_var('func_5229')
call_5920 = func_5227_call()
call_5921 = func_5227_call()
output = call_5920
output2 = call_5921
func_5924 = relay.Function([], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mutated_mod.get_global_var('func_5924')
call_5925 = func_5924_call()
output = call_5925
func_5926 = relay.Function([], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5964 = relay.var("var_5964", dtype = "int32", shape = (16, 6, 4))#candidate|5964|(16, 6, 4)|var|int32
var_5965 = relay.var("var_5965", dtype = "int32", shape = (16, 6, 4))#candidate|5965|(16, 6, 4)|var|int32
bop_5966 = relay.bitwise_xor(var_5964.astype('int32'), relay.reshape(var_5965.astype('int32'), relay.shape_of(var_5964))) # shape=(16, 6, 4)
var_5969 = relay.var("var_5969", dtype = "int32", shape = (16, 6, 4))#candidate|5969|(16, 6, 4)|var|int32
bop_5970 = relay.logical_xor(var_5964.astype('int16'), relay.reshape(var_5969.astype('int16'), relay.shape_of(var_5964))) # shape=(16, 6, 4)
output = relay.Tuple([bop_5966,bop_5970,])
output2 = relay.Tuple([bop_5966,bop_5970,])
func_5979 = relay.Function([var_5964,var_5965,var_5969,], output)
mod['func_5979'] = func_5979
mod = relay.transform.InferType()(mod)
mutated_mod['func_5979'] = func_5979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5979_call = mutated_mod.get_global_var('func_5979')
var_5981 = relay.var("var_5981", dtype = "int32", shape = (16, 6, 4))#candidate|5981|(16, 6, 4)|var|int32
var_5982 = relay.var("var_5982", dtype = "int32", shape = (16, 6, 4))#candidate|5982|(16, 6, 4)|var|int32
var_5983 = relay.var("var_5983", dtype = "int32", shape = (16, 6, 4))#candidate|5983|(16, 6, 4)|var|int32
call_5980 = func_5979_call(var_5981,var_5982,var_5983,)
output = call_5980
func_5984 = relay.Function([var_5981,var_5982,var_5983,], output)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3987_call = mod.get_global_var('func_3987')
func_3989_call = mutated_mod.get_global_var('func_3989')
call_5998 = relay.TupleGetItem(func_3987_call(), 0)
call_5999 = relay.TupleGetItem(func_3989_call(), 0)
uop_6009 = relay.atan(call_5998.astype('float32')) # shape=(2240,)
uop_6011 = relay.atan(call_5999.astype('float32')) # shape=(2240,)
uop_6016 = relay.sigmoid(uop_6009.astype('float32')) # shape=(2240,)
uop_6018 = relay.sigmoid(uop_6011.astype('float32')) # shape=(2240,)
output = relay.Tuple([uop_6016,])
output2 = relay.Tuple([uop_6018,])
func_6021 = relay.Function([], output)
mod['func_6021'] = func_6021
mod = relay.transform.InferType()(mod)
output = func_6021()
func_6022 = relay.Function([], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4840_call = mod.get_global_var('func_4840')
func_4842_call = mutated_mod.get_global_var('func_4842')
call_6078 = func_4840_call()
call_6079 = func_4840_call()
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
call_6094 = relay.TupleGetItem(func_3620_call(), 2)
call_6095 = relay.TupleGetItem(func_3622_call(), 2)
output = relay.Tuple([call_6078,call_6094,])
output2 = relay.Tuple([call_6079,call_6095,])
func_6103 = relay.Function([], output)
mod['func_6103'] = func_6103
mod = relay.transform.InferType()(mod)
output = func_6103()
func_6104 = relay.Function([], output)
mutated_mod['func_6104'] = func_6104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6123 = relay.var("var_6123", dtype = "float32", shape = (3, 15, 14))#candidate|6123|(3, 15, 14)|var|float32
uop_6124 = relay.exp(var_6123.astype('float32')) # shape=(3, 15, 14)
output = uop_6124
output2 = uop_6124
func_6151 = relay.Function([var_6123,], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
var_6152 = relay.var("var_6152", dtype = "float32", shape = (3, 15, 14))#candidate|6152|(3, 15, 14)|var|float32
output = func_6151(var_6152)
func_6153 = relay.Function([var_6152], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6203 = relay.var("var_6203", dtype = "int16", shape = (12, 8, 13))#candidate|6203|(12, 8, 13)|var|int16
var_6204 = relay.var("var_6204", dtype = "int16", shape = (12, 8, 13))#candidate|6204|(12, 8, 13)|var|int16
bop_6205 = relay.subtract(var_6203.astype('int16'), relay.reshape(var_6204.astype('int16'), relay.shape_of(var_6203))) # shape=(12, 8, 13)
func_1690_call = mod.get_global_var('func_1690')
func_1693_call = mutated_mod.get_global_var('func_1693')
const_6222 = relay.const([-4,1,2,-5,-10,1,-4,9,-6,-5,7,6,-7,-1,-3,-7,-1,-8,-10,-3,9,-2,-5,-1,5,-7,-2,-2,10,-5,10,-1,10,-3,10,3,-2,-4,-8,-9,9,-7,10,1,5,-4,9,5,5,-10,-3,-6,-7,-3,3,2,-7,4,-10,-7,2,1,9,3,-3,-10,-5,3,-7,1,-6,6,1,1,7,-8,1,2,-5,-3], dtype = "int32")#candidate|6222|(80,)|const|int32
call_6221 = func_1690_call(relay.reshape(const_6222.astype('int32'), [2, 4, 10]))
call_6223 = func_1690_call(relay.reshape(const_6222.astype('int32'), [2, 4, 10]))
uop_6225 = relay.erf(bop_6205.astype('float64')) # shape=(12, 8, 13)
func_4183_call = mod.get_global_var('func_4183')
func_4186_call = mutated_mod.get_global_var('func_4186')
const_6238 = relay.const([6.053852,7.835251,9.225765,-8.910516,-0.602556,-6.832729,7.356312,6.446592,7.974801,1.158863,-7.550712,-6.435806,-8.957388,-1.241599,0.543177,0.694784,5.238101,-3.891409,-8.160266,-5.931604,3.340284,7.182159,1.426354,-4.311832,-6.091399,-8.000675,-0.537403,-0.077495,-9.002094,-0.787416,-1.781769,-1.545685,5.157916,-0.599585,6.495149,-9.722020,2.979484,2.343589,-7.062734,1.670346,1.569983,-0.505036,-6.453131,3.695776,4.204359,-4.343785,0.303704,0.937410,1.273162,-4.760898,-9.355540,-8.184293,0.565901,6.606006,1.536879,-6.359666,-1.582153,-3.003660,6.322871,4.879729,-4.060419,-5.150316,-4.586644,-4.955173,4.277382,-4.236047,5.303168,0.946351,-6.031871,-0.220051,-6.788305,-4.659207,2.703738,8.867316,-5.347836,-5.019008,5.292820,9.954987,-4.260613,7.217604,-9.366079,-7.936416,-4.885702,-6.044710,-2.012498,5.529380,6.922709,3.442001,-8.477925,0.974155,1.251435,4.620098,-7.912013,-9.833598,-2.023975,-7.093167,3.189996,-0.544568,5.082881,-3.986643,-4.949600,-1.461950,5.411082,-6.349887,-8.873838,8.273377,7.776152,-4.747063,8.992401,9.337399,8.252961,-7.258736,-6.065886,-6.477530,-8.483637,9.700256,-1.077771,-0.443365,2.513586,-8.933094,2.373967,0.866002,-0.338526,-1.094950,-3.698760,-4.484855,-5.092500,-5.078708,4.044729,-0.655792,8.522305,-3.756905,6.999860,4.547763,-6.560717,-2.026357,8.448821,-8.421018,-8.050612,1.931063,-3.439787,-6.565095,5.756184,2.504437,5.957894,-7.160800,8.983126,3.976239,2.781810,9.781004,-0.341100,5.060339,4.879293,1.201943,8.602657,-7.783019,-8.376096,-8.434882,3.853580,3.750017,4.320897,9.198382,-1.320716,5.627410,-7.998021,5.943122,-7.624049,-1.704184,2.051976,5.797284,5.348626,-6.286869,-4.387710,4.423062,5.298692,1.654911,-8.724268,2.537470,6.645919,-5.755109,-7.599255,-6.620571,8.614360,-0.145186,-5.050954,5.728761,-7.112104,-6.564306,-2.005719,-7.693556,-8.536208,-7.336238,6.777983,4.109042,-9.867287,-0.495083,-7.432044,5.159679,0.853720,-3.517630,-6.635769,9.264876,3.676051,3.058306,0.357249,8.464987,1.521550,-5.578101,-9.827191,2.018315,-6.617997,5.197589,-4.858164,-1.489483,-6.261931,-6.114374,-5.576820,4.228220,2.237284,0.372384,9.125365,-4.666840,-9.365247,4.810401,-2.743406,0.814356,-4.384621,0.226684,1.280008,-0.641309,-1.606077,-3.614554,5.467603,9.923119,7.344872,8.300190,3.731783,5.700501,3.266223,-6.287187,-7.226599,-3.446926,-2.249560,9.471778,2.500825,-3.670668,-2.908452,-2.784707,-8.057238,-2.496781,-2.775727,-4.139213,9.409830,2.236455,-6.059578,4.037485,4.815251,8.210483,7.309462,1.611319,5.585169,4.236762,4.913402,3.446373,3.937691,6.493639,8.125525,8.839178,8.890679,0.466282,7.248232,-1.574921,-8.530536,-1.365124,8.480574,-4.793655,4.640070,-3.938621,2.331162,1.006089,-9.171168,-0.843638,-1.458648,-7.398746,-6.911112,-3.757513,-9.980977,-5.213460], dtype = "float32")#candidate|6238|(288,)|const|float32
call_6237 = relay.TupleGetItem(func_4183_call(relay.reshape(const_6238.astype('float32'), [3, 8, 12])), 0)
call_6239 = relay.TupleGetItem(func_4186_call(relay.reshape(const_6238.astype('float32'), [3, 8, 12])), 0)
uop_6240 = relay.acosh(uop_6225.astype('float64')) # shape=(12, 8, 13)
output = relay.Tuple([call_6221,const_6222,call_6237,const_6238,uop_6240,])
output2 = relay.Tuple([call_6223,const_6222,call_6239,const_6238,uop_6240,])
func_6245 = relay.Function([var_6203,var_6204,], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
var_6247 = relay.var("var_6247", dtype = "int16", shape = (12, 8, 13))#candidate|6247|(12, 8, 13)|var|int16
var_6248 = relay.var("var_6248", dtype = "int16", shape = (12, 8, 13))#candidate|6248|(12, 8, 13)|var|int16
call_6246 = func_6245_call(var_6247,var_6248,)
output = call_6246
func_6249 = relay.Function([var_6247,var_6248,], output)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6103_call = mod.get_global_var('func_6103')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_6275 = relay.TupleGetItem(func_6103_call(), 1)
call_6276 = relay.TupleGetItem(func_6104_call(), 1)
output = relay.Tuple([call_6275,])
output2 = relay.Tuple([call_6276,])
func_6279 = relay.Function([], output)
mod['func_6279'] = func_6279
mod = relay.transform.InferType()(mod)
output = func_6279()
func_6280 = relay.Function([], output)
mutated_mod['func_6280'] = func_6280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3356_call = mod.get_global_var('func_3356')
func_3358_call = mutated_mod.get_global_var('func_3358')
call_6285 = func_3356_call()
call_6286 = func_3356_call()
uop_6287 = relay.sinh(call_6285.astype('float32')) # shape=(2, 3, 2)
uop_6289 = relay.sinh(call_6286.astype('float32')) # shape=(2, 3, 2)
func_3798_call = mod.get_global_var('func_3798')
func_3802_call = mutated_mod.get_global_var('func_3802')
var_6304 = relay.var("var_6304", dtype = "float64", shape = (1365,))#candidate|6304|(1365,)|var|float64
call_6303 = relay.TupleGetItem(func_3798_call(relay.reshape(var_6304.astype('float64'), [13, 15, 7]), relay.reshape(var_6304.astype('float64'), [13, 15, 7]), ), 3)
call_6305 = relay.TupleGetItem(func_3802_call(relay.reshape(var_6304.astype('float64'), [13, 15, 7]), relay.reshape(var_6304.astype('float64'), [13, 15, 7]), ), 3)
var_6315 = relay.var("var_6315", dtype = "float64", shape = (1365,))#candidate|6315|(1365,)|var|float64
bop_6316 = relay.logical_xor(var_6304.astype('int16'), relay.reshape(var_6315.astype('int16'), relay.shape_of(var_6304))) # shape=(1365,)
func_6021_call = mod.get_global_var('func_6021')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_6324 = relay.TupleGetItem(func_6021_call(), 0)
call_6325 = relay.TupleGetItem(func_6022_call(), 0)
func_4925_call = mod.get_global_var('func_4925')
func_4926_call = mutated_mod.get_global_var('func_4926')
call_6327 = relay.TupleGetItem(func_4925_call(), 3)
call_6328 = relay.TupleGetItem(func_4926_call(), 3)
output = relay.Tuple([uop_6287,call_6303,bop_6316,call_6324,call_6327,])
output2 = relay.Tuple([uop_6289,call_6305,bop_6316,call_6325,call_6328,])
func_6352 = relay.Function([var_6304,var_6315,], output)
mod['func_6352'] = func_6352
mod = relay.transform.InferType()(mod)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6352_call = mutated_mod.get_global_var('func_6352')
var_6354 = relay.var("var_6354", dtype = "float64", shape = (1365,))#candidate|6354|(1365,)|var|float64
var_6355 = relay.var("var_6355", dtype = "float64", shape = (1365,))#candidate|6355|(1365,)|var|float64
call_6353 = func_6352_call(var_6354,var_6355,)
output = call_6353
func_6356 = relay.Function([var_6354,var_6355,], output)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5229_call = mutated_mod.get_global_var('func_5229')
call_6371 = func_5227_call()
call_6372 = func_5227_call()
func_5747_call = mod.get_global_var('func_5747')
func_5750_call = mutated_mod.get_global_var('func_5750')
const_6377 = relay.const([8.760038,-4.920528,8.285364,6.059464,7.848494,7.701953,7.258577,-8.360553,3.650265,4.584153,2.767164,-5.000504,-1.561888,9.725601,-1.550670,6.655021,-3.038271,-6.965788,7.407317,-7.244802,-9.690847,3.829433,-8.774249,-0.274488,-4.303770,-9.214062,-4.211963,-1.701747,4.118250,-0.701439,-9.962812,1.707382,-3.027697,2.067897,-7.600702,-0.043597,4.877825,-0.615684,6.595347,5.291336,5.746028,5.376925,-2.384709,-8.786590,-5.460671,3.940729,-0.342376,9.864636,-0.376090,0.342790,-7.318469,-2.743056,6.512886,-4.127352,0.908652,-2.065591,5.161728,4.694585,9.449971,0.800663,-0.097182,8.257338,-2.778810,2.764583,0.480497,4.696647,-1.952447,4.873613,-3.869571,7.887695,6.342056,-6.097184,4.857344,-5.105021,-0.218599,-3.436912,-4.131836,3.987562,0.611674,-0.627771,5.929056,-7.094571,7.679968,6.832541,7.305964,0.649431,-6.544125,3.101838,1.696439,3.636578], dtype = "float64")#candidate|6377|(90,)|const|float64
call_6376 = relay.TupleGetItem(func_5747_call(relay.reshape(const_6377.astype('float64'), [2, 5, 9])), 1)
call_6378 = relay.TupleGetItem(func_5750_call(relay.reshape(const_6377.astype('float64'), [2, 5, 9])), 1)
func_4638_call = mod.get_global_var('func_4638')
func_4640_call = mutated_mod.get_global_var('func_4640')
const_6383 = relay.const([-4,-6,6,-7,5,-8,-1,-8,-4,-2,-10,8,8,-5,5,8,-8,-6,-10,-5,-1,10,5,-2,3,-1,-10,-8,-10,-3,4,-8,-6,7,9,2,4,-6,10,-7,2,5,-8,10,5,-4,-5,-3,9,6,9,-10,10,3,3,-4,-9,-9,-1,4,-10,-6,3,5,-9,-1,-9,-3,-6,10,6,6,-2,-4,-2,10,9,9,5,-5,7,3,9,-6,2,-6,-1,-6,7,-7,-8,-5,2,2,-9,4,-5,3,-2,-8,-6,-5,-7,1,10,-5,6,-7,3,10,6,-8,-10,4,-10,8,-7,5,5,9,8,8,-1,4,4,-6,5,-3,4,7,-2,-2,-10,-4,-4,2,5,6,5,-2,2,-3,-1,-2,-6,1,-5,-6,9,-8,2,-7,-10,-5,-2,5,-6,-5,-7,-3,7,10,6,-5,-5,-10,-6,6,-9,-2,9,-9,8,-3,2,-7,-10,10,-2,-1,-1,3,-7,3,9,10,-3,-4,-4,5,3,-4,-6,10,-1,-4,-3,10,-8,-7,10,-7,-8,-3,8,-8,-9,-5,-9,4,8,-4,9,-1,9,-5,7,4,-5,-8,7,5,2,-3,-6,3,-7,3,3,2,-3,-4,9,6,5,8,-3,7,2,6,-7,2,-8,-9,-10,-6,7,3,-6,-1,-6,2,-1,-5,-7,3,-2,9,1,-10,8,-5,-5,-5,1,1,-5,9,2,-3,6,4,-2,-7,-10,7,4,4,-2,2,5,3,8,7,5,-10,7,-1,6,3,7,-3,2,10,-6,-9,8,2,3,8,1,-3,2,7,-1,6,-10,9,-8,-8,-3,-5,1,9,-7,4,-4,6,2,-6,2,9,2,-4,8,5,8,-4,-7,5,-1,4,7,-3,-3,-9,2,-7,-7,3,4,7,-9,-3,6,-2,6,-4,8,-1,10,-6,-10,-5,3,-4,-7,10,-4,2,-8,8,-4,8,-4,1,-9,-4,-9,9,10,-10,6,5,-3,-3,3,7,-6,9,4,-3,6,-5,8,-8,9,7,8,-9,-1,3,4,1,-9,-9,10,-7,9,1,7,-10,-7,-6,-9,7,-7,-3,-4,-10,-7,-5,3,3,-5,-1,-6,-3,-8,-10,-1,-8,-9,9,9,4,10,-3,1,-5,2,1,7,-1,-2,-3,-7,-1,-3,-8,2,8,-1,-7,7,-1,9,9,7,-2,-10,-3,-7,-3,-7,-3,-5,2,-10,-2,-10,7,6,-7,5,-3,-6,4,-1,4,-10,-8,7,-4,-7,-5,-9,6,10,2,3,-4,2,-2,7,-2,2,5,-7,8,5,-3,-8,2,2,-5,1,-6,7,5,-4,2,-6,5,4,-7,7,-5,-1,-2,3,10,7,7,3,-8,9,-1,7,-8,9,1,-7,10,-5,3,-10,-10,-8,-10,8,-8,-10,-4,6,1,9,-3,10,6,-8,1,-1,-4,9,2,2,4,8,2,-10,-3,-4,-7,2,10,-10,5,-6,-10,2,10,-1,-9,-4,5,1,7,6,4,7,7,6,9,-2,-5,-1,10,3,3,8,3,7,9,-4,-3,-6,8,-4,-4,-8,-1,-7,-2,-10,-8,-2,10,-1,-7,3,-5,10,-10,10,3,6,6,-6,-4,1,7,-2,-7,7,9,-1,8,8,8,-6,4,4,5,-8,6,-2,-5,9,9,-3,5,-5,-7,-3,-10,5,-10,4,7,-6,-3,4,-3,9,1,4,-8,-9,1,10,-10,5,-4,-5,3,3,-8,-2,-4,-6,-5,-10,-9,-7,-2,2,-4,10,-8,-10,-6,4,2,8,-1,10,5,8,-9,-6,4,3,-7,-7,-9,5,-1,-1,9,10,2,-3,-10,-4,-7,-1,10,-10,-8,1,3,-3,7,7,1,-5,7,-3,10,-5,-8,8,2,-7,3,8,-6,-10,6,10,-7,2,2,1,3,-8,4,-2,-2,-9,-9,-2,-9,-9,-2,-2,-1,-2,-2,-4,1,-9,-8,3,8,-4,8,-1,8,10,8,-8,-8,1,-5,8,-10,1,6,7,-6,4,-7,-9,-6,5,-4,-2,-5,-4,-1,-4,-9,-7,1,-2,5,10,-10,6,-1,9,-6,-10,3,1,8,5,2,-6,-5,1,6,-9,2,4,8,9,-4,7,2,-3,3,10,7,-10,4,-2,5,-9,-9,-2,-6,-3,9,8,-5,-4,7,8,9,8,-1,8,-2,-3,-9,9,6,-6,9,-10,6,-5,-7,-9,-10,4,7,-9,8,-3,-7,-2,4,9,3,10,-3,-2,-9,-1,-2,-2,8,10,-3,4,-7,4,6,5,-5,9,-3,10,-6,2,-7,-6,6,-10,-1,1,-1,-9,10,-6,-10,-3,-8,4,-6,-1,-3,-8,7,9,2,-5,-7,-2,10,-2,-5,-5,9,-10,-8,-8,9,1,3,3,-10,-2,5,-3,-4,-7,-1,-5,-4,7,-5,4,-8,10,-4,9,-1,10,5,-3,8,9,2,2,-8,-9,-4,6,9,5,9,5,7,8,-9,-10,-10,-10,4,10,3,-4,4,10,4,-7,1,2,9,1,-10,-7,-1,-3,-1,6,6,-10,8,6,-7,-6,4,10,8,1,2,8,-7,8,-8,1,-4,4,4,5,-10,-4,9,-8,-3,4,-7,9,-7,-1,3,7,-6,9,-9,-1,-5,3,-7,2,-10,-7,1,2,-5,1,6,7,-8,-9,-3,8,-5,4,4,6,-4,-2,1,3,6,5,-3,-3,1,10,4,3,-2,5,-5,-9,-4,-6,-4,10,-4,-3,9,9,-10,3,-10,-5,-3,8,1,-9,-10,-9,-3,-6,8,-5,7,-7,5,-3,6,7,10,9,5,-8,10,-1,8,9,9,5,8,-5,9,9,-5,5,2,-7,-10,1,-2,-5,10,-8,-8,6,-2,10,-8,9,5,-7,9,-3,-8,-1,7,-1,-9,-9,-2,4,8,9,1,7,3,-3,1,3,10,-10,-9,-5,1,-7,1,-1,3,2,10,-2,-7,-7,-10,-6,4,9,-8,-4,-10,-4,-4,9,6,3,-3,1,1,6,8,-4,-9,-6,1,6,2,-4,6,4,-5,10,-4,-5,8,-6,5,-7,-5,1,-4,7,10,4,5,10,7,-7,10,5,5,-4,-1,7,5,-2,-7,-7,-2,-3,-9,8,-4,6,-9,1,2,6,-8,1,-1,4,-4,4,-2,-5,-3,-8,8,-10,4,-2,-9,-2,-1,10,-6,9,5,-5,4,9,-3,-2,-2,-9,-6,-5,-7,-9,9,-10,4,-6,5,-8,-3,6,-6,6,-3,-4,-6,-3,5,-1,3,-1,3,6,9,8,-10,8,5,4,1,-6,-7,9,-2,6,4,-2,5,6,1,5,-10,-9,-7,2,3,4,-8,-3,3,-6,7,5,-8,-5,5,-4,1,10,10,-7,-10,4,3,-8,7,5,-4,7,1,4,-1,1,-4,1,2,7,-8,8,6,-8,-10,8,-1,-7,-6,10,-9,-1,-3,5,2,-5,-2,-2,9,-1,2,4,-6,-8,1,-2,-9,3,9,7,-1,2,5,2,-5,-4,4,-2,8,5,-8,-2,-1,-10,5,2,8,-9,-9,1,-4,10,-5,-10,-4,4,3,-10,-1,3,-6,1,-8,-10,-1,-10,8,-7,-4,-7,4,-2,-9,9,3,-5,-8,6,9,4,7,-7,8,7,10,2,-7,-1,7,6,4,2,8,-2,1,6,-2,4,-6,-1,7,10,-10,-10,-1,-8,6,10,5,2,8,8,3,-1,5,5,7,-7,8,-3,-2,5,10,-5,-7,-5,-8,-6,-4,-10,-1,2,4,-5,7,-1,-1,-8,-4,-8,-1,-10,3,-10,5,8,8,-5,9,5,10,-4,4,1,-6,-3,-9,6,8,-1,-9,-8,8,7,3,-1,8,3,-7,4,-1,-10,7,-4,-5,8,3,9,1,-9,10,7,-5,-1,-5,6,1,8,-4,-5,-9,-3,10,4,-9,-6,-4,6,5,4,4,8,7,-3,2,2,-2,-4,6,-6,2,2,6,5,-7,3,-10,5,9,-10,8,2,6,4,5,-7,-3,3,8,3,9,-5,9,8,-1,-8,-2,-1,-6,2,-7,8,-9,1,3,5,2,-2,-1,10,1,-3,10,-3,2,-8,6,1,1,5,10,5,-9,4,9,3,3,3,3,8,1,6,-5,5,1,-9,9,4,3,1,1,2,-2,-5,-10,4,-2,3,9,5,-7,2,10,-7,3,7,-1,-8,-5,-2,10,10,-4,1,-8,-5,3,-4,-3,-8,-6,10,3,2,3,-4,-8,6,7,7,-4,-2,-10,-9,-5,9,1,1,-7,3,5,-4,-4,-4,8,6,-4,10,-5,8,6,-3,7,1,5,6,3,-10,10,10,7,-1,-4,-6,-8,1,4,-10,-6,-6,7,10,4,1,-5,-4,-6,-5,6,9,10,9,-4,4,10,-10,6,8,-1,5,-9,10,6,4,-1,-5,5,-2,10,8,7,-8,-7,2,7,-5,8,10,3,3,10,-2,1,3,-9,5,10,-9,-2,-6,8,-5,-7,10,10,-3,-3,-7,-8,-8,-3,4,-6,2,-6,7,10,-2,-1,-8,-6,-3,-5,-3,-1,3,-2,7,2,8,-6,1,8,-4,6,10,-2,-10,3,1,4,8,-10,6,2,9,-8,5,-6,7,-2,3,-1,-10,-6,-8,4,-8,9,-6,7,-3,6,3,9,-3,8,-5,-8,-1,8,7,-5,6,-9,9,8,3,9,5,7,-9,3,-1,-10,7,4,-2,9,5,2,3,5,5,3,2,-7,4,6,3,8,6,2,-10,-9,8,-10,-1,-1,9,-6,4,1,-3,3,-4,6,4,-9,-8,1,10,-8,-8,-7,3,-7,9,6,6,-10,10,-8,3,-1,6,8,5,6,7,10,9,8,5,9,-3,10,4,-10,-7,-7,-2,10,-3,1,-2,-9,-8,8,-10,7,-6,1,-6,7,3,-8,-9,4,-7,-9,8,9,-6,1,5,-1,4,-1,4,-6,1,2,4,-1,3,-9,7,-6,6,9,3,2,-4,6,2,5,-7,3,-4,-2,4,5,1,4,-7,7,-5,-7,-4,6,-6,9,-9,5,-9,-10,8,6,-7,7,3,5,-4,8,-7,4,-7,-9,9,2,10,-3,-7,10,-7,-1,-10,2,-1,4,5,3,2,2,5,1,6,-6,1,9,10,2,-8,-5,-5,9,6,-5,4,-2,-9,-6,5,8,-5,-7,6,-8,4,-3,2,-10,-4,9,-10,10,-3,4,6,5,-10,-8,-2,1,2,6,6,4,-8,-1,-5,-10,5,4,8,7,-2,4,-3,-1,-9,-9,-10,6,-8,-10,5,-9,6,6,-5,-3,7,-2,-2,-3,7,-7,-5,-8,-1,-5,-8,9,-8,-9,-7,1,-2,2,3,9,9,8,1,6,4,-8,-6,8,3,6,-2,2,9,9,1,-3,-4,-4,-8,-6,-2,5,-5,-1,-10,6,5,7,-4,-3,4,3,8,4,-8,8,-7,7,8,10,-6,-2,-4,2,-7,3,2,9,5,-7,6,-2,-8,4,-8,4,1,-6,6,5,4,3,7,-7,-7,-3,10,7,6,-4,8,-10,-5,-5,4,-2,-1,-6,9,9,10,1,1,9,-9,-4,2,-7,-2,-8,4,7,-7,4,-10,3,6,9,-4,-7,-1,2,-8,-10,1,9,10,-1,-2,-2,-9,-2,1,-4,-2,-7,-1,8,-6,-2,-8,2,-8,4,9,4,-3,3,-10,8,-6,-6,-4,10,3,-6,-2,1,-5,-2,1,2,-2,7,-10,3,7,-6,-4,-10,-8,-9,9,2,3,8,-2,7,3,-8,-8,-10,-2,6,3,-2,4,-1,9,7,-1,-7,5,-7,-9,-3,7,2,2,-3,3,7,-7,2,-6,-2,-8,-8,-5,1,-1,1,-10,7,-10,-8,-8,-2,-5,-4,5,-8,5,6,-2,-5,3,-2,8,8,10,1,-3,4,7,-1,-2,-7,-4,8,-2,-8,1,-2,9,-5,8,-6,8,8,-6,10,-7,-8,2,4,10,-2,4,-8,-6,2,8,2,10,1,-1,7,-10,9,-10,7,-7,-1,-3,-5,-3,-2,9,-6,7,8,-8,8,-7,-9,1,8,-5,10,7,8,4,-10,-5,1,-4,10,3,10,-6,-8,-7,5,-5,-3,-2,-2,-2,-9,-9,-10,1,-4,9,-4,-7,10,-9,7,3,6,-2,4,-3,4,5,-4,4,-1,-6,-6,7,6,-4,-2,6,4,8,-3,-3,2,10,4,-8,7,-10,-6,10,3,-6,10,-4,-9,10,-5,10,1,-7,-6,-2,6,5,-6,-3,-8,5,10,-10,-4,-2,5,8,4,3,-8,-10,-4,6,1,-1,10,-4,-9,-9,7,2,3,-8,-7,6,5,-2,2,-8,-9,1,9,10,-2,-9,-2,2,4,4,-10,-5,-6,-3,6,3,-2,-5,-2,7,3,4,8,3,-6,1,7,1,4,-6,-5,6,-3,-6,-5,10,8,5,8,10,-5,9,9,-9,-4,-3,-4,-6,-9,4,7,2,-6,3,-5,7,4,-5,-6,5,-9,-8,-9,-2,9,10,1,-3,-7,2,-1,-3,7,-7,-2,4,3,6,10,-8,-7,-7,10,-7,8,10,-10,-4,3,-3,-4,-8,-1,-10,-2,10,-7,-8,-6,-6,6,-4,1,5,-9,-8,-5], dtype = "uint16")#candidate|6383|(2520,)|const|uint16
call_6382 = relay.TupleGetItem(func_4638_call(relay.reshape(const_6383.astype('uint16'), [12, 15, 14])), 0)
call_6384 = relay.TupleGetItem(func_4640_call(relay.reshape(const_6383.astype('uint16'), [12, 15, 14])), 0)
func_6352_call = mod.get_global_var('func_6352')
func_6356_call = mutated_mod.get_global_var('func_6356')
var_6389 = relay.var("var_6389", dtype = "float64", shape = (1365,))#candidate|6389|(1365,)|var|float64
call_6388 = relay.TupleGetItem(func_6352_call(relay.reshape(var_6389.astype('float64'), [1365,]), relay.reshape(var_6389.astype('float64'), [1365,]), ), 1)
call_6390 = relay.TupleGetItem(func_6356_call(relay.reshape(var_6389.astype('float64'), [1365,]), relay.reshape(var_6389.astype('float64'), [1365,]), ), 1)
output = relay.Tuple([call_6371,call_6376,const_6377,call_6382,const_6383,call_6388,var_6389,])
output2 = relay.Tuple([call_6372,call_6378,const_6377,call_6384,const_6383,call_6390,var_6389,])
func_6391 = relay.Function([var_6389,], output)
mod['func_6391'] = func_6391
mod = relay.transform.InferType()(mod)
var_6392 = relay.var("var_6392", dtype = "float64", shape = (1365,))#candidate|6392|(1365,)|var|float64
output = func_6391(var_6392)
func_6393 = relay.Function([var_6392], output)
mutated_mod['func_6393'] = func_6393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4925_call = mod.get_global_var('func_4925')
func_4926_call = mutated_mod.get_global_var('func_4926')
call_6402 = relay.TupleGetItem(func_4925_call(), 1)
call_6403 = relay.TupleGetItem(func_4926_call(), 1)
output = call_6402
output2 = call_6403
func_6421 = relay.Function([], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
output = func_6421()
func_6422 = relay.Function([], output)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mod.get_global_var('func_4678')
func_4680_call = mutated_mod.get_global_var('func_4680')
call_6438 = func_4678_call()
call_6439 = func_4678_call()
func_5023_call = mod.get_global_var('func_5023')
func_5025_call = mutated_mod.get_global_var('func_5025')
call_6440 = relay.TupleGetItem(func_5023_call(), 1)
call_6441 = relay.TupleGetItem(func_5025_call(), 1)
func_4550_call = mod.get_global_var('func_4550')
func_4552_call = mutated_mod.get_global_var('func_4552')
call_6449 = func_4550_call()
call_6450 = func_4550_call()
func_5437_call = mod.get_global_var('func_5437')
func_5440_call = mutated_mod.get_global_var('func_5440')
const_6452 = relay.const([[1,1,5,1,-5,-8,5,-9,-7,-4,-10,-10,-4,4,6,8,-9,7,7,7,1,8,-9,2,-1,9,-5,-4,1,8,1,5,7,3,-1,7,8,-7,2,4,-6,-5,-3,-9,-7,2,-5,6,-10,-3,1,-3,5,7,9,-3,6,5,6,-4,3,1,-4,7,5,-4,-1,-5,-9,8,-6,5,8,3,-6,-9,4,6,-6,-3,4,-9,-4,-5,-9,-1,3,-8,5,-7,2,-9,-5,-6,7,-3,-5,-8,-9,4,-6,-2,2,-10,-5,10,-4,-4,2,-1,7,2,8,-5,-4,4,5],[-9,-8,-3,-5,-8,2,9,2,-4,5,5,7,8,-8,-3,8,7,10,-1,-5,-5,3,-10,5,-5,2,-2,9,-2,4,-9,7,2,-10,-4,2,-1,-5,-9,6,9,-4,-7,-4,-2,-4,3,-1,-9,-6,5,4,2,-6,10,-2,10,-1,-1,-9,3,5,5,1,-6,-6,-6,6,10,6,4,8,-6,-4,-5,-1,6,-8,-2,2,-7,-1,-9,-10,9,-8,4,10,8,-8,-8,-5,6,3,2,8,-6,-2,-3,3,-8,6,8,5,-1,8,3,2,-7,-7,-2,8,-3,-4,-5,-10,-7],[-7,4,10,-5,5,-2,-7,-3,7,9,-5,10,-9,-6,9,7,10,-10,-9,1,-4,10,-3,6,-8,7,-7,5,-5,-9,6,-2,9,9,8,-9,-4,-6,2,8,8,3,4,3,9,-4,8,-3,10,3,3,-10,3,-3,7,4,7,-1,5,2,6,1,2,10,-8,-9,9,6,-7,-4,2,-10,-5,-2,6,8,-8,7,3,-3,4,-1,-3,-4,8,3,-8,-9,-3,-5,2,1,2,-1,7,7,-8,-4,-7,-9,6,5,6,-7,4,10,-7,8,-10,4,5,-9,-10,-1,-1,2,-4]], dtype = "uint64")#candidate|6452|(3, 117)|const|uint64
call_6451 = relay.TupleGetItem(func_5437_call(relay.reshape(const_6452.astype('uint64'), [351,])), 0)
call_6453 = relay.TupleGetItem(func_5440_call(relay.reshape(const_6452.astype('uint64'), [351,])), 0)
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6454 = func_5924_call()
call_6455 = func_5924_call()
func_6103_call = mod.get_global_var('func_6103')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_6469 = relay.TupleGetItem(func_6103_call(), 1)
call_6470 = relay.TupleGetItem(func_6104_call(), 1)
output = relay.Tuple([call_6438,call_6440,call_6449,call_6451,const_6452,call_6454,call_6469,])
output2 = relay.Tuple([call_6439,call_6441,call_6450,call_6453,const_6452,call_6455,call_6470,])
func_6471 = relay.Function([], output)
mod['func_6471'] = func_6471
mod = relay.transform.InferType()(mod)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mutated_mod.get_global_var('func_6471')
call_6472 = func_6471_call()
output = call_6472
func_6473 = relay.Function([], output)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5924_call = mod.get_global_var('func_5924')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6479 = func_5924_call()
call_6480 = func_5924_call()
var_6484 = relay.var("var_6484", dtype = "float32", shape = (2, 3, 2))#candidate|6484|(2, 3, 2)|var|float32
bop_6485 = relay.subtract(call_6479.astype('int16'), relay.reshape(var_6484.astype('int16'), relay.shape_of(call_6479))) # shape=(2, 3, 2)
bop_6488 = relay.subtract(call_6480.astype('int16'), relay.reshape(var_6484.astype('int16'), relay.shape_of(call_6480))) # shape=(2, 3, 2)
bop_6493 = relay.bitwise_xor(bop_6485.astype('int64'), relay.reshape(var_6484.astype('int64'), relay.shape_of(bop_6485))) # shape=(2, 3, 2)
bop_6496 = relay.bitwise_xor(bop_6488.astype('int64'), relay.reshape(var_6484.astype('int64'), relay.shape_of(bop_6488))) # shape=(2, 3, 2)
output = bop_6493
output2 = bop_6496
func_6499 = relay.Function([var_6484,], output)
mod['func_6499'] = func_6499
mod = relay.transform.InferType()(mod)
mutated_mod['func_6499'] = func_6499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6500 = relay.var("var_6500", dtype = "float32", shape = (2, 3, 2))#candidate|6500|(2, 3, 2)|var|float32
func_6499_call = mutated_mod.get_global_var('func_6499')
call_6501 = func_6499_call(var_6500)
output = call_6501
func_6502 = relay.Function([var_6500], output)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4965_call = mod.get_global_var('func_4965')
func_4966_call = mutated_mod.get_global_var('func_4966')
call_6535 = func_4965_call()
call_6536 = func_4965_call()
func_6103_call = mod.get_global_var('func_6103')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_6553 = relay.TupleGetItem(func_6103_call(), 1)
call_6554 = relay.TupleGetItem(func_6104_call(), 1)
func_4791_call = mod.get_global_var('func_4791')
func_4794_call = mutated_mod.get_global_var('func_4794')
const_6576 = relay.const([9.335429,-3.156893,-9.114029,7.059409,7.318292,-7.183583,-6.417546,7.472824,9.502722,-7.335902,-7.769827,-3.848303,5.637255,7.335557,-4.449144,4.090725,5.301039,7.171461,6.560467,-5.992911,-8.332052,4.465173,-0.772575,5.953946,-6.044456,5.754548,8.243688,1.139647,-5.728796,8.177559,5.045650,-1.470665,-1.516764,-0.047090,-3.728455,-7.092371,7.740045,6.393195,9.620896,-2.047933,9.368722,-1.238664,8.507708,6.245467,-9.506650,2.341659,-1.364465,-5.861837,7.912743,-0.768046,9.225533,3.924115,-3.333389,-4.903379,6.848685,9.155250,-8.866048,-0.095928,-2.137022,7.172627,-0.845795,-0.490852,-3.081244,-3.686634,4.742507,-9.939837,6.796697,9.925255,-6.664480,4.744907,-5.522623,-2.944384,-3.411097,1.672710,3.255965,3.364665,7.200472,-6.743975,-3.443901,6.425327,3.334288,-8.128265,9.409268,-4.922471,5.230740,-8.681678,-0.103029,3.598048,7.782220,5.765156,6.265267,-9.951549,-0.315420,9.073377,9.525496,-6.854344,-6.451777,-0.737562,4.979325,3.764346,-2.653586,-8.236803,3.776261,-1.645301,-6.888416,5.639013,-2.928617,-5.238591,-9.003983,-7.880130,7.533972,-7.927723,0.707937,5.412200,5.973641,-0.034675,-0.216814,-3.046963,-4.650037,-8.483443,6.551766,-0.525213,-6.347146,-4.320086,-2.975878,-1.446587,-9.130610,1.939977,7.191536,-7.162325,-0.160662,0.419286,6.169833,-8.227620,-4.810484,1.285310,-8.260789,0.141198,-8.001833,1.446841,-7.236980,-9.943697,-8.734269,6.771644,1.313949,-5.346836,-8.001367,-3.124845,6.624799,7.839097,-7.463222,8.832305,-1.358030,6.294150,0.441326,-1.650224,-1.702336,-4.495365,-0.923002,2.682721,8.902138,3.458070,1.972570,4.281534,-7.007804,-5.608003,8.224415,7.977106,-2.962894,1.924188,5.016583,-4.885926,-2.896087,-9.536629,-8.242007,-3.262053,5.213762,7.778970,-0.679624,-4.069458,0.042785,8.540007,-2.934451,-5.689360,9.740799,-9.035613,7.609422,-9.241333,9.403857,4.067945,-5.015894,8.644366,9.196261,-6.273386,-4.796461,6.173103,5.336733,-2.729273,3.527818,1.365121,-2.752904,-3.597351,-4.286896,-9.962791,9.838391,0.825298,1.456640,-3.849734,8.048521,-7.270733,2.901110,5.428468,-1.560483,-0.273539,-4.308592,-5.040444,-9.614929,5.845621,-4.194042,-6.377200,2.385849,0.723674,1.931405,7.946736,8.635477,-8.835883,1.984704,5.121090,5.352722,-9.071568,3.274483,0.938191,7.806706,-4.298003,-9.998572,8.577982,-6.799839,-9.846071,-2.773394,-4.155539,-0.692943,-0.857729,-5.867637,5.040185,-9.533644,-2.969022,2.200367,8.822862,-4.591492,-8.736503,-8.386387,-0.276478,-0.038760,-1.992548,-3.900608,-9.849121,4.650520,3.270255,1.325401,-8.275831,-2.420962,8.625192,-2.384506,-3.449323,1.760445,1.306522,-2.214612,-6.493418,-0.564352,-2.434364,-0.475848,6.415998,4.960464,7.459685,-6.683164,-1.028363,-1.698667,-2.498853,-1.282462,7.617428,4.105503,-9.072652,-2.376670,-7.760155,6.584708,-3.758337,-6.427053,-2.221080], dtype = "float32")#candidate|6576|(288,)|const|float32
call_6575 = relay.TupleGetItem(func_4791_call(relay.reshape(const_6576.astype('float32'), [288,])), 2)
call_6577 = relay.TupleGetItem(func_4794_call(relay.reshape(const_6576.astype('float32'), [288,])), 2)
output = relay.Tuple([call_6535,call_6553,call_6575,const_6576,])
output2 = relay.Tuple([call_6536,call_6554,call_6577,const_6576,])
func_6585 = relay.Function([], output)
mod['func_6585'] = func_6585
mod = relay.transform.InferType()(mod)
mutated_mod['func_6585'] = func_6585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6585_call = mutated_mod.get_global_var('func_6585')
call_6586 = func_6585_call()
output = call_6586
func_6587 = relay.Function([], output)
mutated_mod['func_6587'] = func_6587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6103_call = mod.get_global_var('func_6103')
func_6104_call = mutated_mod.get_global_var('func_6104')
call_6621 = relay.TupleGetItem(func_6103_call(), 0)
call_6622 = relay.TupleGetItem(func_6104_call(), 0)
output = call_6621
output2 = call_6622
func_6627 = relay.Function([], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
output = func_6627()
func_6628 = relay.Function([], output)
mutated_mod['func_6628'] = func_6628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2995_call = mod.get_global_var('func_2995')
func_2996_call = mutated_mod.get_global_var('func_2996')
call_6629 = relay.TupleGetItem(func_2995_call(), 0)
call_6630 = relay.TupleGetItem(func_2996_call(), 0)
func_6499_call = mod.get_global_var('func_6499')
func_6502_call = mutated_mod.get_global_var('func_6502')
call_6677 = func_6499_call(relay.reshape(call_6629.astype('float32'), [2, 3, 2]))
call_6678 = func_6499_call(relay.reshape(call_6629.astype('float32'), [2, 3, 2]))
uop_6680 = relay.log(call_6677.astype('float32')) # shape=(2, 3, 2)
uop_6682 = relay.log(call_6678.astype('float32')) # shape=(2, 3, 2)
bop_6684 = relay.bitwise_or(uop_6680.astype('uint32'), relay.reshape(call_6677.astype('uint32'), relay.shape_of(uop_6680))) # shape=(2, 3, 2)
bop_6687 = relay.bitwise_or(uop_6682.astype('uint32'), relay.reshape(call_6678.astype('uint32'), relay.shape_of(uop_6682))) # shape=(2, 3, 2)
output = relay.Tuple([call_6629,bop_6684,])
output2 = relay.Tuple([call_6630,bop_6687,])
func_6698 = relay.Function([], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6698_call = mutated_mod.get_global_var('func_6698')
call_6699 = func_6698_call()
output = call_6699
func_6700 = relay.Function([], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6422_call = mutated_mod.get_global_var('func_6422')
call_6783 = func_6421_call()
call_6784 = func_6421_call()
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_6804 = relay.TupleGetItem(func_5585_call(), 0)
call_6805 = relay.TupleGetItem(func_5586_call(), 0)
output = relay.Tuple([call_6783,call_6804,])
output2 = relay.Tuple([call_6784,call_6805,])
func_6823 = relay.Function([], output)
mod['func_6823'] = func_6823
mod = relay.transform.InferType()(mod)
output = func_6823()
func_6824 = relay.Function([], output)
mutated_mod['func_6824'] = func_6824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6471_call = mod.get_global_var('func_6471')
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6837 = relay.TupleGetItem(func_6471_call(), 4)
call_6838 = relay.TupleGetItem(func_6473_call(), 4)
uop_6845 = relay.asinh(call_6837.astype('float32')) # shape=(3, 117)
uop_6847 = relay.asinh(call_6838.astype('float32')) # shape=(3, 117)
func_5585_call = mod.get_global_var('func_5585')
func_5586_call = mutated_mod.get_global_var('func_5586')
call_6850 = relay.TupleGetItem(func_5585_call(), 2)
call_6851 = relay.TupleGetItem(func_5586_call(), 2)
output = relay.Tuple([uop_6845,call_6850,])
output2 = relay.Tuple([uop_6847,call_6851,])
func_6859 = relay.Function([], output)
mod['func_6859'] = func_6859
mod = relay.transform.InferType()(mod)
output = func_6859()
func_6860 = relay.Function([], output)
mutated_mod['func_6860'] = func_6860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mod.get_global_var('func_6421')
func_6422_call = mutated_mod.get_global_var('func_6422')
call_6864 = func_6421_call()
call_6865 = func_6421_call()
output = relay.Tuple([call_6864,])
output2 = relay.Tuple([call_6865,])
func_6874 = relay.Function([], output)
mod['func_6874'] = func_6874
mod = relay.transform.InferType()(mod)
output = func_6874()
func_6875 = relay.Function([], output)
mutated_mod['func_6875'] = func_6875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_6892 = relay.TupleGetItem(func_3330_call(), 1)
call_6893 = relay.TupleGetItem(func_3332_call(), 1)
uop_6927 = relay.asin(call_6892.astype('float32')) # shape=(3, 8, 12)
uop_6929 = relay.asin(call_6893.astype('float32')) # shape=(3, 8, 12)
func_5979_call = mod.get_global_var('func_5979')
func_5984_call = mutated_mod.get_global_var('func_5984')
var_6934 = relay.var("var_6934", dtype = "int32", shape = (384,))#candidate|6934|(384,)|var|int32
call_6933 = relay.TupleGetItem(func_5979_call(relay.reshape(var_6934.astype('int32'), [16, 6, 4]), relay.reshape(var_6934.astype('int32'), [16, 6, 4]), relay.reshape(var_6934.astype('int32'), [16, 6, 4]), ), 0)
call_6935 = relay.TupleGetItem(func_5984_call(relay.reshape(var_6934.astype('int32'), [16, 6, 4]), relay.reshape(var_6934.astype('int32'), [16, 6, 4]), relay.reshape(var_6934.astype('int32'), [16, 6, 4]), ), 0)
output = relay.Tuple([uop_6927,call_6933,var_6934,])
output2 = relay.Tuple([uop_6929,call_6935,var_6934,])
func_6941 = relay.Function([var_6934,], output)
mod['func_6941'] = func_6941
mod = relay.transform.InferType()(mod)
mutated_mod['func_6941'] = func_6941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6942 = relay.var("var_6942", dtype = "int32", shape = (384,))#candidate|6942|(384,)|var|int32
func_6941_call = mutated_mod.get_global_var('func_6941')
call_6943 = func_6941_call(var_6942)
output = call_6943
func_6944 = relay.Function([var_6942], output)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6965 = relay.var("var_6965", dtype = "float64", shape = (2, 4, 6))#candidate|6965|(2, 4, 6)|var|float64
uop_6966 = relay.atanh(var_6965.astype('float64')) # shape=(2, 4, 6)
output = relay.Tuple([uop_6966,])
output2 = relay.Tuple([uop_6966,])
func_6983 = relay.Function([var_6965,], output)
mod['func_6983'] = func_6983
mod = relay.transform.InferType()(mod)
var_6984 = relay.var("var_6984", dtype = "float64", shape = (2, 4, 6))#candidate|6984|(2, 4, 6)|var|float64
output = func_6983(var_6984)
func_6985 = relay.Function([var_6984], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_7017 = relay.TupleGetItem(func_3330_call(), 1)
call_7018 = relay.TupleGetItem(func_3332_call(), 1)
const_7021 = relay.const([[[1.082235,9.630847,6.826017,-1.779027,7.188277,-4.183583,0.184871,-8.538460,-2.113285,6.048905,-3.294706,-8.671231],[-2.049884,-8.060770,4.454786,-7.237591,-5.832744,7.551796,8.413121,1.899980,-9.212529,8.863486,-5.478499,9.392195],[6.885634,-0.589166,9.622543,-7.900656,-6.507218,-8.259077,-7.396475,-7.140977,8.363588,8.756170,3.428486,0.748306],[-7.268955,-6.921914,1.931542,8.231298,-7.553574,-0.127352,-8.758018,-9.933225,2.336249,4.958043,5.034924,-7.035751],[4.414194,5.883591,3.704604,-1.619572,-5.962088,-3.256756,-1.622749,-3.534507,1.927105,4.113174,-0.128255,-2.914716],[-9.674574,6.610545,2.148151,-6.551948,0.844181,-6.434417,4.077752,-5.171953,6.346474,3.446704,-5.954192,-2.417705],[-4.208319,-9.456609,5.061661,-7.745465,-9.115085,-9.827017,-4.069636,-5.337629,-8.966102,-8.827158,4.458300,0.499113],[1.875048,-1.875688,4.387329,7.749381,-4.491313,-5.625031,-6.510677,-4.685818,-1.479229,-6.102779,3.356386,7.372763]],[[8.401130,7.819423,-9.846623,4.262166,9.070537,-3.457261,6.590947,-6.614039,4.731942,9.449374,-6.494491,-9.950609],[-7.988448,0.163218,1.927875,-7.509201,-3.985554,3.392983,-3.575950,-4.824655,-3.863539,-3.219225,-5.114801,-3.216589],[7.691909,5.391403,8.493458,2.028398,-6.258647,2.879442,4.217730,0.448845,-9.624324,-6.887231,9.800929,-4.881340],[4.923073,9.473858,-9.576801,8.544230,-3.266753,2.362329,-7.151994,1.909828,2.362127,-1.950222,-6.832608,-7.646939],[-3.607341,-9.795604,7.297709,-9.160546,3.649511,-9.357187,0.526130,-3.215935,-4.524497,8.413166,-7.203738,7.119266],[4.996038,-6.453940,9.550606,-3.023057,7.461424,-7.420762,-1.562429,-9.107093,-2.071583,7.188358,-1.364560,6.430958],[6.446716,-6.555812,-2.232610,2.113541,2.644767,3.350068,-8.299892,8.290237,-2.144138,-6.666076,-3.466751,5.104876],[7.787545,-1.478512,-4.317459,-8.302662,-7.149411,1.548524,-2.418632,-5.688865,-8.035566,3.887974,-1.556672,-7.517219]],[[-2.883714,8.139803,6.980129,2.011231,9.340350,5.054506,-0.937870,8.583348,-8.433633,7.471172,4.330160,-7.365075],[0.852416,-8.127128,-0.962271,4.266336,0.182120,4.822802,4.093015,2.946657,-5.270357,-2.559764,-5.548218,4.789945],[-9.405493,1.733340,6.204596,9.885235,1.291998,-3.252640,-1.950667,-2.361508,-7.464318,2.188690,4.549208,-9.982735],[6.372494,-6.951304,-2.565825,-9.739561,-1.992994,-0.204713,5.529702,-9.342578,2.242634,7.567548,-1.480219,3.255768],[8.801998,-4.443280,5.154069,6.316590,4.248532,-7.456000,3.868439,-4.048953,-5.095426,5.769486,-8.204126,9.984304],[-9.678280,-2.320853,-6.748884,4.437292,-8.521873,-8.370623,-0.268247,-9.844511,6.223435,3.997301,3.226770,-9.717595],[-9.595187,5.441571,-7.825010,-7.460685,1.520072,7.140032,-3.752431,-3.462409,6.935409,-8.230502,-5.249319,5.763249],[7.123507,-7.783175,7.949558,5.510638,2.913631,-0.604864,7.148585,-6.234259,4.490561,-6.354911,2.917069,-5.311142]]], dtype = "float32")#candidate|7021|(3, 8, 12)|const|float32
bop_7022 = relay.bitwise_or(call_7017.astype('int64'), relay.reshape(const_7021.astype('int64'), relay.shape_of(call_7017))) # shape=(3, 8, 12)
bop_7025 = relay.bitwise_or(call_7018.astype('int64'), relay.reshape(const_7021.astype('int64'), relay.shape_of(call_7018))) # shape=(3, 8, 12)
output = bop_7022
output2 = bop_7025
func_7035 = relay.Function([], output)
mod['func_7035'] = func_7035
mod = relay.transform.InferType()(mod)
mutated_mod['func_7035'] = func_7035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7035_call = mutated_mod.get_global_var('func_7035')
call_7036 = func_7035_call()
output = call_7036
func_7037 = relay.Function([], output)
mutated_mod['func_7037'] = func_7037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6874_call = mod.get_global_var('func_6874')
func_6875_call = mutated_mod.get_global_var('func_6875')
call_7054 = relay.TupleGetItem(func_6874_call(), 0)
call_7055 = relay.TupleGetItem(func_6875_call(), 0)
output = call_7054
output2 = call_7055
func_7060 = relay.Function([], output)
mod['func_7060'] = func_7060
mod = relay.transform.InferType()(mod)
mutated_mod['func_7060'] = func_7060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7060_call = mutated_mod.get_global_var('func_7060')
call_7061 = func_7060_call()
output = call_7061
func_7062 = relay.Function([], output)
mutated_mod['func_7062'] = func_7062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7072 = relay.var("var_7072", dtype = "float64", shape = (16, 9, 10))#candidate|7072|(16, 9, 10)|var|float64
var_7073 = relay.var("var_7073", dtype = "float64", shape = (16, 9, 10))#candidate|7073|(16, 9, 10)|var|float64
bop_7074 = relay.maximum(var_7072.astype('float64'), relay.reshape(var_7073.astype('float64'), relay.shape_of(var_7072))) # shape=(16, 9, 10)
func_3748_call = mod.get_global_var('func_3748')
func_3750_call = mutated_mod.get_global_var('func_3750')
call_7077 = relay.TupleGetItem(func_3748_call(), 0)
call_7078 = relay.TupleGetItem(func_3750_call(), 0)
uop_7098 = relay.log2(var_7073.astype('float64')) # shape=(16, 9, 10)
bop_7101 = relay.bitwise_and(bop_7074.astype('uint16'), relay.reshape(var_7073.astype('uint16'), relay.shape_of(bop_7074))) # shape=(16, 9, 10)
uop_7112 = relay.rsqrt(uop_7098.astype('float32')) # shape=(16, 9, 10)
uop_7121 = relay.sinh(uop_7098.astype('float32')) # shape=(16, 9, 10)
uop_7130 = relay.atanh(uop_7098.astype('float32')) # shape=(16, 9, 10)
func_6021_call = mod.get_global_var('func_6021')
func_6022_call = mutated_mod.get_global_var('func_6022')
call_7150 = relay.TupleGetItem(func_6021_call(), 0)
call_7151 = relay.TupleGetItem(func_6022_call(), 0)
uop_7173 = relay.acosh(bop_7101.astype('float64')) # shape=(16, 9, 10)
func_3889_call = mod.get_global_var('func_3889')
func_3890_call = mutated_mod.get_global_var('func_3890')
call_7176 = func_3889_call()
call_7177 = func_3889_call()
func_5894_call = mod.get_global_var('func_5894')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_7189 = relay.TupleGetItem(func_5894_call(), 0)
call_7190 = relay.TupleGetItem(func_5896_call(), 0)
uop_7196 = relay.asinh(uop_7112.astype('float32')) # shape=(16, 9, 10)
func_3356_call = mod.get_global_var('func_3356')
func_3358_call = mutated_mod.get_global_var('func_3358')
call_7199 = func_3356_call()
call_7200 = func_3356_call()
var_7202 = relay.var("var_7202", dtype = "float32", shape = (16, 9, 10))#candidate|7202|(16, 9, 10)|var|float32
bop_7203 = relay.equal(uop_7130.astype('bool'), relay.reshape(var_7202.astype('bool'), relay.shape_of(uop_7130))) # shape=(16, 9, 10)
output = relay.Tuple([call_7077,uop_7121,call_7150,uop_7173,call_7176,call_7189,uop_7196,call_7199,bop_7203,])
output2 = relay.Tuple([call_7078,uop_7121,call_7151,uop_7173,call_7177,call_7190,uop_7196,call_7200,bop_7203,])
func_7210 = relay.Function([var_7072,var_7073,var_7202,], output)
mod['func_7210'] = func_7210
mod = relay.transform.InferType()(mod)
var_7211 = relay.var("var_7211", dtype = "float64", shape = (16, 9, 10))#candidate|7211|(16, 9, 10)|var|float64
var_7212 = relay.var("var_7212", dtype = "float64", shape = (16, 9, 10))#candidate|7212|(16, 9, 10)|var|float64
var_7213 = relay.var("var_7213", dtype = "float32", shape = (16, 9, 10))#candidate|7213|(16, 9, 10)|var|float32
output = func_7210(var_7211,var_7212,var_7213,)
func_7214 = relay.Function([var_7211,var_7212,var_7213,], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5894_call = mod.get_global_var('func_5894')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_7216 = relay.TupleGetItem(func_5894_call(), 0)
call_7217 = relay.TupleGetItem(func_5896_call(), 0)
func_5370_call = mod.get_global_var('func_5370')
func_5372_call = mutated_mod.get_global_var('func_5372')
const_7234 = relay.const([1,10,-1,1,1,-10,8,6,-4,-4,-7,6,-3,7,9,-2,5,2,-6,-4,9,-5,-3,-6,7,-5,-4,-10,-7,-3,-4,-7,-7,-5,-2,-10,-4,-9,-6,-6,-4,7,10,-7,4,-5,6,-9,3,-8,2,5,2,3,-10,1,7,-5,5,6,-5,8,-3,6,1,-10,-3,9,2,5,10,-9,4,-6,6,-8,10,-4,-5,10,4,8,-4,7,10,9,10,7,-10,2,-4,8,-8,-9,-3,-10,-7,-6,-7,9,5,-7,6,8,8,3,-2,-6,-3,7,1,3,-8,-3,2,-2,9,-1,-5,10,-10,-7,-6,-5,5,-3,9,-6,-4,2,10,4,-5,-6,-3,6,-3,-6,-4,-6,-2,9,6,6,6,-8,2,-10,7,7,-4,1,-6,6,7,2,2,9,-9,-10,3,-1,-9,9,-7,-6,-1,-10,-6,-6,-8,-2,-10,-8,8,-3,-5,-3,5,4,10,7,-9,-8,-1,7,5,-10,2,3,6,-8,-2,9,7,-1,1,10,-5,4,5,7,-1,-6,-5,-3,-6,-1,-4,-8,-2,-9,9,5,-10,-1,-10,-6,5,4,-2,8,7,-8,10,5,-5,8,-6,7,2,2,6,3,-1,-1,5,2,-9,-5,6,-4,6,4,-5,-7,-9,-6,-8,-6,7,3,7,4,-8,8,10,-5,-3,8,8,-2,-6,-3,9,-5,-7,8,6,3,-2,-7,2,-9,-9,-5,-2,-5,7,-5,7,5,-10,1,5,-9,-4,1,6,-3,7,-3,4,7,6,-10,-2,1,5,8,-6,9,5,8,-10,-8,10,3,-9,-7,-2,2,-1,-6,4,8,-2,4,9,-1,-4,3,10,7,-8,-6,3,-4,2,-1,-5,10,10,-7,3,-5,6,-10,5,8,4,-4,4,1,10,-4,-3,-4,-6,9,10,-8,-3,3,-8,9,-4,8,3,-4,1,7,2,-6,-6,-8,10,-3,6,1,6,7,3,8,5,8,-1,10,10,-10,5,-3,7,8,-3,-7,-8,-10,10,-8,1,-10,1,-6,8,-9,7,9,-9,7,-7,2,-9,-6,-10,3,-10,-6,5,-4,-9,7,5,9,-5,6,1,5,10,-10,-8,6,5,1,-5,4,-5,1,7,4,6,-1,-9,8,2,2,10,7,9,7,2,7,2,-9,-7,10,6,2,-10,7,-6,-1,6,-2,-8,10,-8,-9,-4,-1,3,4,-5,-5,7,-8,-10,9,-8,4,10,6,-10,2,3,-4,-5,4,-7,6], dtype = "uint64")#candidate|7234|(480,)|const|uint64
call_7233 = relay.TupleGetItem(func_5370_call(relay.reshape(const_7234.astype('uint64'), [120, 4])), 1)
call_7235 = relay.TupleGetItem(func_5372_call(relay.reshape(const_7234.astype('uint64'), [120, 4])), 1)
func_3798_call = mod.get_global_var('func_3798')
func_3802_call = mutated_mod.get_global_var('func_3802')
var_7240 = relay.var("var_7240", dtype = "float64", shape = (455, 3))#candidate|7240|(455, 3)|var|float64
call_7239 = relay.TupleGetItem(func_3798_call(relay.reshape(var_7240.astype('float64'), [13, 15, 7]), relay.reshape(var_7240.astype('float64'), [13, 15, 7]), ), 0)
call_7241 = relay.TupleGetItem(func_3802_call(relay.reshape(var_7240.astype('float64'), [13, 15, 7]), relay.reshape(var_7240.astype('float64'), [13, 15, 7]), ), 0)
output = relay.Tuple([call_7216,call_7233,const_7234,call_7239,var_7240,])
output2 = relay.Tuple([call_7217,call_7235,const_7234,call_7241,var_7240,])
func_7249 = relay.Function([var_7240,], output)
mod['func_7249'] = func_7249
mod = relay.transform.InferType()(mod)
mutated_mod['func_7249'] = func_7249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7250 = relay.var("var_7250", dtype = "float64", shape = (455, 3))#candidate|7250|(455, 3)|var|float64
func_7249_call = mutated_mod.get_global_var('func_7249')
call_7251 = func_7249_call(var_7250)
output = call_7251
func_7252 = relay.Function([var_7250], output)
mutated_mod['func_7252'] = func_7252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7281 = relay.TupleGetItem(func_3940_call(), 0)
call_7282 = relay.TupleGetItem(func_3941_call(), 0)
func_3330_call = mod.get_global_var('func_3330')
func_3332_call = mutated_mod.get_global_var('func_3332')
call_7283 = relay.TupleGetItem(func_3330_call(), 1)
call_7284 = relay.TupleGetItem(func_3332_call(), 1)
output = relay.Tuple([call_7281,call_7283,])
output2 = relay.Tuple([call_7282,call_7284,])
func_7286 = relay.Function([], output)
mod['func_7286'] = func_7286
mod = relay.transform.InferType()(mod)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7286_call = mutated_mod.get_global_var('func_7286')
call_7287 = func_7286_call()
output = call_7287
func_7288 = relay.Function([], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7316 = relay.const([[[-7.466857,-6.090873,5.555802,-1.744990,-2.791288,1.611623,7.982031,-1.110800,-7.101196,-2.790837,-6.734992,-5.218821,0.416260,0.746823],[8.371071,-8.088742,2.216549,4.003483,-1.994749,4.483998,-9.075441,0.194409,-0.109109,7.024865,2.312878,3.848411,8.711395,-3.296283]],[[7.736316,-6.984437,-8.794577,-2.365746,-5.186558,-8.554606,8.059139,4.387931,-3.502992,-3.437210,8.548180,0.907913,9.836574,-1.275844],[7.468675,8.710895,9.215418,4.140874,-5.505746,2.390628,8.450410,9.795039,-2.586806,-6.140373,5.773080,0.742842,-5.749924,-0.918867]],[[6.627322,-5.460162,7.913702,4.882422,-7.533886,-6.793373,-5.964065,0.728003,-2.635839,0.325517,7.093584,5.099100,-0.411297,1.771257],[-1.585377,-5.281855,6.184469,-0.042631,-2.532157,2.706826,-9.615262,7.503767,5.437807,-8.114463,-1.385345,-8.855073,8.119942,-4.607656]],[[-5.137221,-1.115726,8.348253,5.249467,-7.676221,2.328471,5.903371,7.216960,0.270301,3.557945,3.805004,-7.066131,3.720737,3.397580],[-8.975400,-2.662588,-7.165462,6.499591,7.632093,-3.051765,-6.099603,-2.532517,-4.378124,3.147689,-2.505099,-0.481441,-1.202141,8.515603]],[[-4.459680,-9.330295,8.279460,2.035173,-1.214932,4.734928,8.240063,8.842926,-4.198237,-2.037252,7.984708,-3.102596,-5.584162,3.244541],[6.859044,-3.438764,3.113812,-4.429893,4.877006,-2.932865,5.995857,6.246710,9.350332,-2.999120,-7.897606,-6.513382,2.835410,0.157051]],[[-8.785343,-8.878975,-0.036816,4.934450,-6.436832,-5.181890,4.811386,4.388387,-2.624406,-3.438081,4.376820,3.831457,8.874611,2.495518],[-2.567779,-5.383328,5.475089,-6.409065,9.117649,2.669426,-1.742473,6.757469,6.415242,-2.975176,2.963113,5.725069,5.838609,-5.749148]],[[0.781529,2.298446,-7.564288,-3.935318,7.154123,6.740372,-6.394045,-2.846322,-9.180731,-1.097014,-6.795985,-6.982210,1.129674,-3.523447],[-6.927895,0.525858,-7.725183,-8.946059,-3.675422,-8.177826,9.361278,-4.445186,-9.611626,-6.072364,-4.302008,-0.570919,8.038180,-8.027844]]], dtype = "float32")#candidate|7316|(7, 2, 14)|const|float32
uop_7317 = relay.exp(const_7316.astype('float32')) # shape=(7, 2, 14)
uop_7321 = relay.sin(uop_7317.astype('float32')) # shape=(7, 2, 14)
output = uop_7321
output2 = uop_7321
func_7324 = relay.Function([], output)
mod['func_7324'] = func_7324
mod = relay.transform.InferType()(mod)
mutated_mod['func_7324'] = func_7324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7325 = func_7324_call()
output = call_7325
func_7326 = relay.Function([], output)
mutated_mod['func_7326'] = func_7326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7035_call = mod.get_global_var('func_7035')
func_7037_call = mutated_mod.get_global_var('func_7037')
call_7331 = func_7035_call()
call_7332 = func_7035_call()
output = call_7331
output2 = call_7332
func_7333 = relay.Function([], output)
mod['func_7333'] = func_7333
mod = relay.transform.InferType()(mod)
mutated_mod['func_7333'] = func_7333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7333_call = mutated_mod.get_global_var('func_7333')
call_7334 = func_7333_call()
output = call_7334
func_7335 = relay.Function([], output)
mutated_mod['func_7335'] = func_7335
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7344 = relay.const([[[-4.638185],[-4.250198]],[[-8.700297],[-2.819889]],[[-7.043932],[6.179328]],[[-7.319626],[-8.101921]],[[-7.461451],[-1.810911]],[[-9.939278],[5.969940]],[[2.607202],[0.614300]],[[3.408475],[1.464511]],[[-4.397289],[0.344813]],[[1.941186],[-2.393298]],[[7.871961],[7.277335]],[[5.541493],[9.318204]]], dtype = "float32")#candidate|7344|(12, 2, 1)|const|float32
uop_7345 = relay.log(const_7344.astype('float32')) # shape=(12, 2, 1)
output = relay.Tuple([uop_7345,])
output2 = relay.Tuple([uop_7345,])
func_7347 = relay.Function([], output)
mod['func_7347'] = func_7347
mod = relay.transform.InferType()(mod)
output = func_7347()
func_7348 = relay.Function([], output)
mutated_mod['func_7348'] = func_7348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2978_call = mod.get_global_var('func_2978')
func_2980_call = mutated_mod.get_global_var('func_2980')
call_7398 = relay.TupleGetItem(func_2978_call(), 0)
call_7399 = relay.TupleGetItem(func_2980_call(), 0)
output = call_7398
output2 = call_7399
func_7402 = relay.Function([], output)
mod['func_7402'] = func_7402
mod = relay.transform.InferType()(mod)
mutated_mod['func_7402'] = func_7402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7402_call = mutated_mod.get_global_var('func_7402')
call_7403 = func_7402_call()
output = call_7403
func_7404 = relay.Function([], output)
mutated_mod['func_7404'] = func_7404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4678_call = mod.get_global_var('func_4678')
func_4680_call = mutated_mod.get_global_var('func_4680')
call_7432 = func_4678_call()
call_7433 = func_4678_call()
var_7448 = relay.var("var_7448", dtype = "bool", shape = (3, 8, 12))#candidate|7448|(3, 8, 12)|var|bool
bop_7449 = relay.logical_xor(call_7432.astype('int32'), relay.reshape(var_7448.astype('int32'), relay.shape_of(call_7432))) # shape=(3, 8, 12)
bop_7452 = relay.logical_xor(call_7433.astype('int32'), relay.reshape(var_7448.astype('int32'), relay.shape_of(call_7433))) # shape=(3, 8, 12)
output = relay.Tuple([bop_7449,])
output2 = relay.Tuple([bop_7452,])
F = relay.Function([var_7448,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7448,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

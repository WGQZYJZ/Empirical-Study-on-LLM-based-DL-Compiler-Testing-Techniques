==========mod==========
#[version = "0.0.5"]
def @func_8766() -> (Tensor[(14, 3, 4), float64],) {
  %0 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  (%0,)
}

def @func_3709(%var_3703: uint32, %var_3704: Tensor[(10, 14, 3), uint32]) -> Tensor[(10, 14, 3), uint32] {
  %1 = cast(%var_3703, dtype="uint32") /* ty=uint32 */;
  %2 = cast(%var_3704, dtype="uint32") /* ty=Tensor[(10, 14, 3), uint32] */;
  subtract(%1, %2) /* ty=Tensor[(10, 14, 3), uint32] */
}

def @func_4022(%var_3986: Tensor[(225), uint8]) -> (Tensor[(10, 14, 3), uint32], uint32, Tensor[(420), uint32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(14, 3, 4), float64], Tensor[(10, 14, 3), uint32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %3 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %5 = reshape(%3, newshape=[]) /* ty=uint32 */;
  %6 = reshape(%4, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint8") /* ty=uint8 */;
  %8 = cast(%var_3986, dtype="uint8") /* ty=Tensor[(225), uint8] */;
  %9 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %10 = %9.1;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %12 = reshape(%7, newshape=[]) /* ty=uint8 */;
  %13 = reshape(%8, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), uint8] */;
  %14 = reshape(%11, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %15 = @func_2671(%12, %13, %14) /* ty=(Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %16 = cast(%10, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %17 = atanh(%16) /* ty=Tensor[(14, 3, 4), float64] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %19 = cast(meta[relay.Constant][0] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %20 = @func_3709(%5, %6) /* ty=Tensor[(10, 14, 3), uint32] */;
  %21 = cast(%20, dtype="uint32") /* ty=Tensor[(10, 14, 3), uint32] */;
  %22 = reshape(%19, newshape=[]) /* ty=uint32 */;
  %23 = reshape(%21, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %26 = reshape(%24, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %27 = reshape(%25, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %28 = %15.0;
  %29 = sinh(%18) /* ty=Tensor[(14, 3, 4), float64] */;
  %30 = @func_3709(%22, %23) /* ty=Tensor[(10, 14, 3), uint32] */;
  %31 = @func_1413(%26, %27) /* ty=Tensor[(11, 5, 11), int64] */;
  (%20, meta[relay.Constant][0] /* ty=uint32 */, meta[relay.Constant][1] /* ty=Tensor[(420), uint32] */, %28, %var_3986, %29, %30, %31, meta[relay.Constant][2] /* ty=Tensor[(605), int64] */)
}

def @func_4621() -> (Tensor[(15, 4, 14), float64],) {
  %32 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %33 = %32.0;
  (%33,)
}

def @func_9442() -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
  %34 = @func_9222() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) */;
  %35 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %36 = %34.0;
  %37 = %35.0;
  (%36, %37)
}

def @func_1490(%var_1456: Tensor[(9, 1, 3), float64], %var_1471: Tensor[(4, 180), float32], %var_1479: Tensor[(26, 5), float64], %var_1482: Tensor[(144), int64], %var_1486: Tensor[(9, 9, 3), float64]) -> (Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) {
  %38 = cast(%var_1456, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(55, 11), int64] */, dtype="int64") /* ty=Tensor[(55, 11), int64] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(55, 11), int64] */, dtype="int64") /* ty=Tensor[(55, 11), int64] */;
  %41 = reshape(%39, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %42 = reshape(%40, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %43 = @func_1413(%41, %42) /* ty=Tensor[(11, 5, 11), int64] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(55, 11), int64] */, dtype="bool") /* ty=Tensor[(55, 11), bool] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %48 = cast(%var_1471, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %49 = reshape(%48, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(55, 11), int64] */, dtype="float32") /* ty=Tensor[(55, 11), float32] */;
  %51 = cast(%var_1479, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %52 = reshape(%51, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %53 = @func_452(%52) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %54 = cast(%var_1482, dtype="int64") /* ty=Tensor[(144), int64] */;
  %55 = cast(%var_1479, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %56 = cast(%var_1482, dtype="int64") /* ty=Tensor[(144), int64] */;
  %57 = reshape(%54, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %58 = reshape(%55, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %59 = reshape(%56, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %60 = @func_909(%57, %58, %59) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %61 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
  %62 = cast(%var_1486, dtype="bool") /* ty=Tensor[(9, 9, 3), bool] */;
  %63 = cos(%38) /* ty=Tensor[(9, 1, 3), float64] */;
  %64 = greater(%46, %47) /* ty=Tensor[(11, 5, 11), bool] */;
  %65 = @func_1145(%49) /* ty=Tensor[(10, 9, 8), float32] */;
  %66 = tan(%50) /* ty=Tensor[(55, 11), float32] */;
  %67 = %53.0;
  %68 = %60.5;
  %69 = logical_and(%61, %62) /* ty=Tensor[(9, 9, 3), bool] */;
  (%63, %64, %65, %var_1471, %66, %67, %var_1479, %68, %var_1482, %69)
}

def @func_4188(%var_4163: Tensor[(605), int64]) -> (Tensor[(14, 3, 4), float64], Tensor[(11, 4, 12), bool], Tensor[(528), int64], Tensor[(605), bool]) {
  %70 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %72 = reshape(%71, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %73 = @func_2734(%72) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) */;
  %74 = cast(%var_4163, dtype="int64") /* ty=Tensor[(605), int64] */;
  %75 = reshape(%74, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %76 = @func_1634(%75) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %77 = %76.4;
  %78 = cast(%77, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
  %79 = shape_of(%var_4163, dtype="int32") /* ty=Tensor[(1), int32] */;
  %80 = cast(%var_4163, dtype="bool") /* ty=Tensor[(605), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?), bool] */;
  %82 = %70.1;
  %83 = %73.0;
  %84 = logical_and(%80, %81) /* ty=Tensor[(605), bool] */;
  (%82, %83, meta[relay.Constant][4] /* ty=Tensor[(528), int64] */, %84)
}

def @func_1634(%var_1632: Tensor[(605), int64]) -> (Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %85 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 10), float32] */;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %87 = cast(meta[relay.Constant][7] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %89 = reshape(%86, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %90 = reshape(%87, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %91 = reshape(%88, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %92 = @func_909(%89, %90, %91) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %93 = cast(%var_1632, dtype="int64") /* ty=Tensor[(605), int64] */;
  %94 = cast(%var_1632, dtype="int64") /* ty=Tensor[(605), int64] */;
  %95 = reshape(%93, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %96 = reshape(%94, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %97 = asin(%85) /* ty=Tensor[(9, 11, 10), float32] */;
  %98 = %92.3;
  %99 = @func_1413(%95, %96) /* ty=Tensor[(11, 5, 11), int64] */;
  (%97, %98, meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, meta[relay.Constant][7] /* ty=Tensor[(130), float64] */, %99, %var_1632)
}

def @func_9087(%var_9072: Tensor[(9, 16, 12), float32]) -> Tensor[(9, 16, 12), bool] {
  %100 = @func_8852() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) */;
  %101 = %100.2;
  %102 = cast(%var_9072, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %104 = cast(%101, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%104, %105) /* ty=Tensor[(9, 16, 12), bool] */
}

def @func_5490(%var_5482: Tensor[(8, 15, 4), float64]) -> Tensor[(8, 15, 4), float64] {
  %106 = cast(%var_5482, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  sin(%106) /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_7107() -> Tensor[(15, 4, 14), float32] {
  %107 = @func_6077() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %107.0
}

def @func_8270() -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
  %108 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %109 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_7934() -> Tensor[(132), uint32] {
  %112 = @func_6563() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) */;
  %112.3
}

def @func_6030() -> (Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) {
  %113 = cast(meta[relay.Constant][8] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %114 = reshape(%113, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %115 = @func_2852(%114) /* ty=(Tensor[(13, 14, 12), float64],) */;
  %116 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %117 = %115.0;
  (%116, %117, meta[relay.Constant][8] /* ty=Tensor[(2184), float64] */)
}

def @func_8075(%var_8053: Tensor[(196), float64]) -> (Tensor[(225), uint8], Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), int32], Tensor[(196), float64]) {
  %118 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %119 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %120 = cast(%var_8053, dtype="float64") /* ty=Tensor[(196), float64] */;
  %121 = cast(%var_8053, dtype="float64") /* ty=Tensor[(196), float64] */;
  %122 = reshape(%120, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %123 = reshape(%121, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %124 = @func_6176(%122, %123) /* ty=(Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) */;
  %125 = %118.0;
  %126 = %119.0;
  %127 = %124.1;
  (%125, %126, %127, %var_8053)
}

def @func_5017(%var_4958: Tensor[(5, 84), uint32], %var_4965: Tensor[(130), float64], %var_4968: Tensor[(605), int64], %var_5011: Tensor[(168), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], uint32, Tensor[(5, 84), uint32], Tensor[(720), float32], Tensor[(130), float64], Tensor[(144), int64], Tensor[(12, 182), float64], Tensor[(605), int64], Tensor[(10, 14, 3), float32], Tensor[(144), int64], Tensor[(10, 14, 3), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %128 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %129 = %128.0;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %131 = reshape(%130, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %132 = @func_1963(%131) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %133 = cast(%var_4965, dtype="float64") /* ty=Tensor[(130), float64] */;
  %134 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %135 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 182), float64] */, dtype="float64") /* ty=Tensor[(12, 182), float64] */;
  %136 = cast(%var_4968, dtype="int64") /* ty=Tensor[(605), int64] */;
  %137 = reshape(%133, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %138 = reshape(%134, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %139 = reshape(%135, newshape=[2184]) /* ty=Tensor[(2184), float64] */;
  %140 = reshape(%136, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %141 = @func_3666(%137, %138, %139, %140) /* ty=(Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %142 = cast(meta[relay.Constant][9] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %143 = cast(%var_4958, dtype="uint32") /* ty=Tensor[(5, 84), uint32] */;
  %144 = reshape(%142, newshape=[]) /* ty=uint32 */;
  %145 = reshape(%143, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %146 = @func_3709(%144, %145) /* ty=Tensor[(10, 14, 3), uint32] */;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %148 = cast(%var_4965, dtype="float64") /* ty=Tensor[(130), float64] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %150 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 182), float64] */, dtype="float64") /* ty=Tensor[(12, 182), float64] */;
  %151 = cast(%var_4968, dtype="int64") /* ty=Tensor[(605), int64] */;
  %152 = reshape(%148, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %153 = reshape(%149, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %154 = reshape(%150, newshape=[2184]) /* ty=Tensor[(2184), float64] */;
  %155 = reshape(%151, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %156 = @func_3666(%152, %153, %154, %155) /* ty=(Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %157 = cast(%146, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %158 = cast(%var_5011, dtype="float64") /* ty=Tensor[(168), float64] */;
  %159 = cast(%var_5011, dtype="float64") /* ty=Tensor[(168), float64] */;
  %160 = reshape(%158, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %161 = reshape(%159, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %162 = @func_1850(%160, %161) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %163 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %164 = %132.0;
  %165 = %141.2;
  %166 = tan(%147) /* ty=Tensor[(10, 14, 3), float32] */;
  %167 = %156.0;
  %168 = sin(%157) /* ty=Tensor[(10, 14, 3), float64] */;
  %169 = %162.0;
  (%129, %163, %164, meta[relay.Constant][9] /* ty=uint32 */, %var_4958, %165, %var_4965, meta[relay.Constant][10] /* ty=Tensor[(144), int64] */, meta[relay.Constant][11] /* ty=Tensor[(12, 182), float64] */, %var_4968, %166, %167, %168, %169, %var_5011)
}

def @func_6077() -> (Tensor[(15, 4, 14), float32],) {
  %170 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %171 = %170.0;
  (%171,)
}

def @func_1892(%var_1862: Tensor[(15, 9), float64], %var_1869: Tensor[(720), float32], %var_1877: Tensor[(130), float64]) -> (Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) {
  %172 = cast(%var_1862, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
  %173 = cast(%var_1869, dtype="float32") /* ty=Tensor[(720), float32] */;
  %174 = reshape(%173, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %175 = cast(%var_1877, dtype="float64") /* ty=Tensor[(130), float64] */;
  %176 = reshape(%175, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %177 = @func_452(%176) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %178 = rsqrt(%172) /* ty=Tensor[(15, 9), float64] */;
  %179 = @func_1145(%174) /* ty=Tensor[(10, 9, 8), float32] */;
  %180 = %177.0;
  (%178, %179, %var_1869, %180, %var_1877)
}

def @func_4825(%var_4806: Tensor[(135), float64], %var_4807: Tensor[(720), float32]) -> (Tensor[(15, 4, 14), float64], Tensor[(10, 9, 8), float32], Tensor[(135), float64], Tensor[(720), float32], Tensor[(130), float64]) {
  %181 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %182 = cast(%var_4806, dtype="float64") /* ty=Tensor[(135), float64] */;
  %183 = cast(%var_4807, dtype="float32") /* ty=Tensor[(720), float32] */;
  %184 = cast(meta[relay.Constant][12] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %185 = reshape(%182, newshape=[15, 9]) /* ty=Tensor[(15, 9), float64] */;
  %186 = reshape(%183, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %187 = reshape(%184, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %188 = @func_1892(%185, %186, %187) /* ty=(Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) */;
  %189 = %181.0;
  %190 = %188.1;
  (%189, %190, %var_4806, %var_4807, meta[relay.Constant][12] /* ty=Tensor[(130), float64] */)
}

def @func_6776() -> (Tensor[(15, 4, 14), float64],) {
  %191 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %194 = atan(%193) /* ty=Tensor[(15, 4, 14), float64] */;
  (%194,)
}

def @func_1781(%var_1722: Tensor[(1, 15, 14), uint8], %var_1723: Tensor[(9, 15, 14), uint8], %var_1753: Tensor[(144), int64], %var_1754: Tensor[(130), float64], %var_1758: Tensor[(605), int64]) -> (Tensor[(9, 15, 14), bool], Tensor[(130), float64], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %195 = cast(%var_1722, dtype="uint8") /* ty=Tensor[(1, 15, 14), uint8] */;
  %196 = cast(%var_1723, dtype="uint8") /* ty=Tensor[(9, 15, 14), uint8] */;
  %197 = bitwise_xor(%195, %196) /* ty=Tensor[(9, 15, 14), uint8] */;
  %198 = cast(%197, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %199 = cast(%var_1722, dtype="bool") /* ty=Tensor[(1, 15, 14), bool] */;
  %200 = cast(%var_1753, dtype="int64") /* ty=Tensor[(144), int64] */;
  %201 = cast(%var_1754, dtype="float64") /* ty=Tensor[(130), float64] */;
  %202 = cast(%var_1753, dtype="int64") /* ty=Tensor[(144), int64] */;
  %203 = reshape(%200, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %204 = reshape(%201, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %205 = reshape(%202, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %206 = @func_909(%203, %204, %205) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %207 = cast(%var_1758, dtype="int64") /* ty=Tensor[(605), int64] */;
  %208 = cast(%var_1758, dtype="int64") /* ty=Tensor[(605), int64] */;
  %209 = reshape(%207, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %210 = reshape(%208, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %211 = greater(%198, %199) /* ty=Tensor[(9, 15, 14), bool] */;
  %212 = %206.0;
  %213 = @func_1413(%209, %210) /* ty=Tensor[(11, 5, 11), int64] */;
  (%211, %212, %var_1753, %var_1754, %213, %var_1758)
}

def @func_5165(%var_5155: Tensor[(91), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) {
  %214 = cast(%var_5155, dtype="float64") /* ty=Tensor[(91), float64] */;
  %215 = reshape(%214, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %216 = @func_3511(%215) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %217 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %218 = %216.2;
  (%217, %218, %var_5155)
}

def @func_4775() -> (Tensor[(15, 4, 14), float64],) {
  %219 = @func_4621() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %220 = %219.0;
  (%220,)
}

def @func_5258(%var_5252: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %221 = cast(%var_5252, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  log2(%221) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_5376() -> (Tensor[(15, 4, 14), float32],) {
  %222 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
  %223 = %222.1;
  (%223,)
}

def @func_5445(%var_5410: Tensor[(720), float32], %var_5421: Tensor[(132), uint32]) -> (Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) {
  %224 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %225 = cast(%var_5421, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %226 = cast(%var_5421, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %227 = reshape(%225, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %228 = reshape(%226, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %229 = @func_2359(%227, %228) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %230 = cast(%var_5410, dtype="float32") /* ty=Tensor[(720), float32] */;
  %231 = reshape(%230, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %232 = @func_1145(%231) /* ty=Tensor[(10, 9, 8), float32] */;
  %233 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = greater(%235, %236) /* ty=Tensor[(10, 9, 8), bool] */;
  %238 = cast(%237, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %239 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %240 = %224.0;
  %241 = %229.3;
  %242 = acos(%238) /* ty=Tensor[(10, 9, 8), float32] */;
  %243 = %239.0;
  (%240, %var_5410, %241, %var_5421, %242, %243)
}

def @func_3666(%var_3620: Tensor[(1, 130), float64], %var_3621: Tensor[(144), int64], %var_3651: Tensor[(2184), float64], %var_3663: Tensor[(605), int64]) -> (Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %246 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %247 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
  %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(243), float64] */, dtype="float64") /* ty=Tensor[(243), float64] */;
  %249 = reshape(%244, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
  %250 = reshape(%245, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %251 = reshape(%246, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %252 = reshape(%247, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %253 = reshape(%248, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
  %254 = @func_1490(%249, %250, %251, %252, %253) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
  %255 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
  %256 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %257 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
  %258 = reshape(%255, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %259 = reshape(%256, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %260 = reshape(%257, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %261 = @func_909(%258, %259, %260) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %262 = cast(%var_3651, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %263 = reshape(%262, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %264 = @func_2852(%263) /* ty=(Tensor[(13, 14, 12), float64],) */;
  %265 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
  %266 = %265.1;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %268 = sin(%267) /* ty=Tensor[(15, 4, 14), float64] */;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %270 = cast(%var_3663, dtype="int64") /* ty=Tensor[(605), int64] */;
  %271 = cast(%var_3663, dtype="int64") /* ty=Tensor[(605), int64] */;
  %272 = reshape(%270, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %273 = reshape(%271, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %274 = %254.8;
  %275 = %261.4;
  %276 = %264.0;
  %277 = log10(%269) /* ty=Tensor[(15, 4, 14), float32] */;
  %278 = @func_1413(%272, %273) /* ty=Tensor[(11, 5, 11), int64] */;
  (%274, meta[relay.Constant][14] /* ty=Tensor[(27), float64] */, meta[relay.Constant][15] /* ty=Tensor[(720), float32] */, %var_3620, %var_3621, meta[relay.Constant][16] /* ty=Tensor[(243), float64] */, %275, %276, %var_3651, %277, %278, %var_3663)
}

def @func_6864(%var_6855: Tensor[(3, 56), float64]) -> (Tensor[(3, 56), int8], Tensor[(3, 56), bool]) {
  %279 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
  %280 = %279.1;
  %281 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 56), float64] */, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %283 = cast(%280, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %285 = cast(%var_6855, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
  %286 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(3, 56), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %287 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 56), float64] */, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %289 = minimum(%283, %284) /* ty=Tensor[(3, 56), int8] */;
  %290 = less_equal(%287, %288) /* ty=Tensor[(3, 56), bool] */;
  (%289, %290)
}

def @func_9109() -> (Tensor[(15, 4, 14), float64], Tensor[(10, 5, 2), float64]) {
  %291 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %292 = @func_6446() /* ty=(Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) */;
  %293 = %291.0;
  %294 = %292.0;
  (%293, %294)
}

def @func_7137() -> Tensor[(15, 4, 14), float64] {
  %295 = @func_6776() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %295.0
}

def @func_6118() -> (Tensor[(13, 14, 12), float64],) {
  %296 = @func_6030() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) */;
  %297 = %296.1;
  (%297,)
}

def @func_8881(%var_8867: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float64],) {
  %298 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %299 = %298.0;
  %300 = cast(%var_8867, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%299, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %304 = mod(%302, %303) /* ty=Tensor[(15, 4, 14), float64] */;
  (%304,)
}

def @func_7537() -> Tensor[(14, 3, 4), float64] {
  %305 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %305.1
}

def @func_3840() -> Tensor[(14, 3, 4), float64] {
  %306 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %306.1
}

def @func_1963(%var_1935: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
  %307 = cast(%var_1935, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %308 = rsqrt(%307) /* ty=Tensor[(15, 4, 14), float32] */;
  (%308,)
}

def @func_4395() -> (Tensor[(15, 4, 14), float64],) {
  %309 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
  %310 = %309.1;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %312 = acosh(%311) /* ty=Tensor[(15, 4, 14), float64] */;
  (%312,)
}

def @func_6176(%var_6122: Tensor[(4, 7, 7), float64], %var_6123: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) {
  %313 = cast(%var_6123, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %314 = shape_of(%var_6122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%var_6122, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %317 = floor_mod(%315, %316) /* ty=Tensor[(4, 7, 7), float64] */;
  %318 = cast(%317, dtype="int64") /* ty=Tensor[(4, 7, 7), int64] */;
  %319 = shape_of(%var_6123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_6123, dtype="int64") /* ty=Tensor[(4, 7, 7), int64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %322 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 168), float64] */, dtype="float64") /* ty=Tensor[(1, 168), float64] */;
  %323 = reshape(%322, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %324 = @func_4111(%323) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %325 = cast(%317, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %326 = exp(%325) /* ty=Tensor[(4, 7, 7), float64] */;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  %328 = cast(%317, dtype="uint32") /* ty=Tensor[(4, 7, 7), uint32] */;
  %329 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%326, dtype="uint32") /* ty=Tensor[(4, 7, 7), uint32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %332 = left_shift(%320, %321) /* ty=Tensor[(4, 7, 7), int64] */;
  %333 = %324.3;
  %334 = erf(%327) /* ty=Tensor[(4, 7, 7), float64] */;
  %335 = add(%330, %331) /* ty=Tensor[(4, 7, 7), uint32] */;
  (%332, %333, meta[relay.Constant][18] /* ty=Tensor[(1, 168), float64] */, %334, %335)
}

def @func_4682(%var_4679: Tensor[(12, 13, 3), float32]) -> Tensor[(12, 13, 3), float32] {
  %336 = cast(%var_4679, dtype="float32") /* ty=Tensor[(12, 13, 3), float32] */;
  log(%336) /* ty=Tensor[(12, 13, 3), float32] */
}

def @func_4751(%var_4731: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
  %337 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %338 = %337.0;
  %339 = cast(%var_4731, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %343 = floor_mod(%341, %342) /* ty=Tensor[(15, 4, 14), float32] */;
  (%343,)
}

def @func_7371(%var_7337: Tensor[(15, 4, 14), float32], %var_7355: Tensor[(360), float64]) -> (Tensor[(15, 4, 14), bool], Tensor[(15, 2, 12), float64], Tensor[(360), float64]) {
  %344 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %345 = cast(%var_7337, dtype="bool") /* ty=Tensor[(15, 4, 14), bool] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%344, dtype="bool") /* ty=Tensor[(15, 4, 14), bool] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %349 = cast(%var_7355, dtype="float64") /* ty=Tensor[(360), float64] */;
  %350 = reshape(%349, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
  %351 = equal(%347, %348) /* ty=Tensor[(15, 4, 14), bool] */;
  %352 = @func_2557(%350) /* ty=Tensor[(15, 2, 12), float64] */;
  (%351, %352, %var_7355)
}

def @func_5785() -> (Tensor[(15, 4, 14), float64],) {
  %353 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %354 = %353.0;
  (%354,)
}

def @func_2154(%var_2120: Tensor[(1, 3, 4), float64], %var_2141: Tensor[(3, 45), float64], %var_2142: Tensor[(13, 10), float64], %var_2148: Tensor[(3, 3, 4), float64]) -> (Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) {
  %355 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %356 = reshape(%355, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %357 = cast(%var_2141, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %358 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %359 = cast(%var_2142, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %360 = reshape(%357, newshape=[15, 9]) /* ty=Tensor[(15, 9), float64] */;
  %361 = reshape(%358, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %362 = reshape(%359, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %363 = @func_1892(%360, %361, %362) /* ty=(Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) */;
  %364 = cast(%var_2120, dtype="float64") /* ty=Tensor[(1, 3, 4), float64] */;
  %365 = sin(%364) /* ty=Tensor[(1, 3, 4), float64] */;
  %366 = cast(%365, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
  %367 = cast(%var_2148, dtype="uint8") /* ty=Tensor[(3, 3, 4), uint8] */;
  %368 = @func_1145(%356) /* ty=Tensor[(10, 9, 8), float32] */;
  %369 = %363.3;
  %370 = bitwise_and(%366, %367) /* ty=Tensor[(3, 3, 4), uint8] */;
  (%368, meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, %369, %var_2141, %var_2142, %370)
}

def @func_2671(%var_2628: uint8, %var_2629: Tensor[(15, 15, 1), uint8], %var_2657: Tensor[(168), float64]) -> (Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %371 = cast(%var_2628, dtype="uint8") /* ty=uint8 */;
  %372 = cast(%var_2629, dtype="uint8") /* ty=Tensor[(15, 15, 1), uint8] */;
  %373 = maximum(%371, %372) /* ty=Tensor[(15, 15, 1), uint8] */;
  %374 = cast(%var_2628, dtype="int16") /* ty=int16 */;
  %375 = cast(%373, dtype="int16") /* ty=Tensor[(15, 15, 1), int16] */;
  %376 = cast(%var_2657, dtype="float64") /* ty=Tensor[(168), float64] */;
  %377 = cast(%var_2657, dtype="float64") /* ty=Tensor[(168), float64] */;
  %378 = reshape(%376, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %379 = reshape(%377, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %380 = @func_1850(%378, %379) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %381 = left_shift(%374, %375) /* ty=Tensor[(15, 15, 1), int16] */;
  %382 = %380.0;
  (%381, %382, %var_2657)
}

def @func_7704() -> (Tensor[(15, 4, 14), float64],) {
  %383 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %384 = %383.0;
  (%384,)
}

def @func_3511(%var_3487: Tensor[(1, 7, 13), float64]) -> (Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) {
  %385 = cast(meta[relay.Constant][20] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %386 = reshape(%385, newshape=[7, 2, 15]) /* ty=Tensor[(7, 2, 15), float64] */;
  %387 = cast(%var_3487, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
  %388 = cos(%387) /* ty=Tensor[(1, 7, 13), float64] */;
  %389 = cast(%var_3487, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%388, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %393 = @func_3466(%386) /* ty=Tensor[(7, 2, 15), float64] */;
  %394 = power(%391, %392) /* ty=Tensor[(?, 7, 13), float32] */;
  (%393, meta[relay.Constant][20] /* ty=Tensor[(105, 2), float64] */, %394)
}

def @func_6311(%var_6239: Tensor[(9, 1, 5), uint32], %var_6278: Tensor[(720), float32], %var_6279: Tensor[(26, 5), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(91), float64], Tensor[(15, 4, 14), float32], Tensor[(55, 11), float32], Tensor[(27), float64], Tensor[(720), float32], Tensor[(26, 5), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(9, ?, 5), uint64], Tensor[(9, ?, 5), bool]) {
  %395 = cast(meta[relay.Constant][21] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %396 = reshape(%395, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %397 = @func_5165(%396) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
  %398 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %399 = cast(meta[relay.Constant][22] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %400 = cast(%var_6278, dtype="float32") /* ty=Tensor[(720), float32] */;
  %401 = cast(%var_6279, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %402 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %403 = cast(meta[relay.Constant][24] /* ty=Tensor[(243), float64] */, dtype="float64") /* ty=Tensor[(243), float64] */;
  %404 = reshape(%399, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
  %405 = reshape(%400, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %406 = reshape(%401, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %407 = reshape(%402, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %408 = reshape(%403, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
  %409 = @func_1490(%404, %405, %406, %407, %408) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
  %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 1, 5), uint32] */, dtype="uint32") /* ty=Tensor[(9, 1, 5), uint32] */;
  %411 = shape_of(%var_6239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_6239, dtype="uint32") /* ty=Tensor[(9, 1, 5), uint32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %414 = bitwise_xor(%412, %413) /* ty=Tensor[(9, ?, 5), uint32] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(9, ?, 5), float64] */;
  %416 = exp(%415) /* ty=Tensor[(9, ?, 5), float64] */;
  %417 = cast(%416, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %418 = sinh(%417) /* ty=Tensor[(9, ?, 5), float32] */;
  %419 = cast(%414, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %423 = mod(%421, %422) /* ty=Tensor[(9, ?, 5), float32] */;
  %424 = cast(%418, dtype="uint64") /* ty=Tensor[(9, ?, 5), uint64] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="uint64") /* ty=Tensor[(9, ?, 5), uint64] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %428 = cast(%414, dtype="bool") /* ty=Tensor[(9, ?, 5), bool] */;
  %429 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%423, dtype="bool") /* ty=Tensor[(9, ?, 5), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %432 = %397.0;
  %433 = %398.0;
  %434 = %409.4;
  %435 = bitwise_and(%426, %427) /* ty=Tensor[(9, ?, 5), uint64] */;
  %436 = not_equal(%430, %431) /* ty=Tensor[(9, ?, 5), bool] */;
  (%432, meta[relay.Constant][21] /* ty=Tensor[(91), float64] */, %433, %434, meta[relay.Constant][22] /* ty=Tensor[(27), float64] */, %var_6278, %var_6279, meta[relay.Constant][23] /* ty=Tensor[(144), int64] */, meta[relay.Constant][24] /* ty=Tensor[(243), float64] */, %435, %436)
}

def @func_6490() -> Tensor[(15, 4, 14), float64] {
  %437 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %437.0
}

def @func_7572() -> (Tensor[(360, 2), float32],) {
  %438 = @func_6563() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) */;
  %439 = %438.2;
  (%439,)
}

def @func_4268(%var_4251: Tensor[(6, 60), float64], %var_4259: Tensor[(720), float32]) -> (Tensor[(14, 3, 4), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(15, 2, 12), float64], Tensor[(6, 60), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32]) {
  %440 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %441 = cast(meta[relay.Constant][26] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %442 = cast(meta[relay.Constant][26] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %443 = reshape(%441, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
  %444 = reshape(%442, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
  %445 = @func_2883(%443, %444) /* ty=(Tensor[(9, 16, 12), float32],) */;
  %446 = %440.1;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %448 = reshape(%447, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %449 = @func_4111(%448) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %450 = cast(%var_4251, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
  %451 = reshape(%450, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
  %452 = cast(%var_4259, dtype="float32") /* ty=Tensor[(720), float32] */;
  %453 = reshape(%452, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %454 = %445.0;
  %455 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %456 = %449.2;
  %457 = @func_2557(%451) /* ty=Tensor[(15, 2, 12), float64] */;
  %458 = @func_1145(%453) /* ty=Tensor[(10, 9, 8), float32] */;
  (%446, %454, meta[relay.Constant][26] /* ty=Tensor[(1728), float32] */, %455, %456, %457, %var_4251, %458, %var_4259)
}

def @func_6003() -> Tensor[(15, 4, 14), float64] {
  %459 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %459.0
}

def @func_909(%var_858: Tensor[(6, 6, 4), int64], %var_868: Tensor[(130), float64], %var_885: Tensor[(6, 6, 4), int64]) -> (Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) {
  %460 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
  %461 = reshape(%460, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %462 = @func_452(%461) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %463 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
  %464 = reshape(%463, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %465 = @func_452(%464) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %466 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 6, 4), int64] */, dtype="int64") /* ty=Tensor[(6, 6, 4), int64] */;
  %467 = shape_of(%var_858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_858, dtype="int64") /* ty=Tensor[(6, 6, 4), int64] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %470 = logical_xor(%468, %469) /* ty=Tensor[(6, 6, 4), int64] */;
  %471 = cast(%var_885, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %475 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
  %476 = reshape(%475, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %477 = @func_452(%476) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %478 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
  %479 = reshape(%478, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %480 = @func_452(%479) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %481 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 6, 4), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %482 = shape_of(%var_885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_885, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %485 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
  %486 = reshape(%485, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %487 = @func_452(%486) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %488 = %487.0;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %490 = %462.0;
  %491 = %465.0;
  %492 = minimum(%473, %474) /* ty=Tensor[(6, 6, 4), uint8] */;
  %493 = %477.0;
  %494 = %480.0;
  %495 = mod(%483, %484) /* ty=Tensor[(6, 6, 4), float32] */;
  %496 = rsqrt(%489) /* ty=Tensor[(10, 13, 12), float32] */;
  (%var_868, %490, %491, %492, %493, %494, %495, %496)
}

def @func_6446() -> (Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) {
  %497 = @func_5931() /* ty=Tensor[(10, 5, 2), float64] */;
  %498 = @func_5931() /* ty=Tensor[(10, 5, 2), float64] */;
  (%497, %498)
}

def @func_9163() -> (Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) {
  %499 = @func_8431() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) */;
  %500 = cast(meta[relay.Constant][28] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %501 = cast(meta[relay.Constant][28] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %502 = reshape(%500, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %503 = reshape(%501, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %504 = @func_7021(%502, %503) /* ty=(Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %505 = %499.0;
  %506 = %504.0;
  (%505, %506, meta[relay.Constant][28] /* ty=Tensor[(250), float64] */)
}

def @func_7161(%var_7159: Tensor[(168, 1), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), int32], Tensor[(168, 1), float64]) {
  %507 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %508 = cast(%var_7159, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
  %509 = reshape(%508, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %510 = @func_4111(%509) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %511 = %507.0;
  %512 = %510.3;
  (%511, %512, %var_7159)
}

def @func_5872() -> (Tensor[(15, 4, 14), float32],) {
  %513 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %514 = %513.0;
  (%514,)
}

def @func_4596(%var_4535: Tensor[(130), float64], %var_4545: Tensor[(10, 13, 12), bool], %var_4552: Tensor[(605), int64]) -> (Tensor[(15, 4, 14), float64], Tensor[(130), float64], Tensor[(10, 13, 12), uint64], Tensor[(144), int64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(605), float32]) {
  %515 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %516 = cast(%var_4535, dtype="float64") /* ty=Tensor[(130), float64] */;
  %517 = reshape(%516, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %518 = @func_452(%517) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %519 = %518.0;
  %520 = cast(%var_4545, dtype="uint64") /* ty=Tensor[(10, 13, 12), uint64] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="uint64") /* ty=Tensor[(10, 13, 12), uint64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %524 = cast(%var_4552, dtype="int64") /* ty=Tensor[(605), int64] */;
  %525 = reshape(%524, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %526 = @func_1634(%525) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %527 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %528 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %529 = cast(%var_4552, dtype="float32") /* ty=Tensor[(605), float32] */;
  %530 = %515.0;
  %531 = bitwise_xor(%522, %523) /* ty=Tensor[(10, 13, 12), uint64] */;
  %532 = %526.2;
  %533 = %527.0;
  %534 = %528.0;
  %535 = log10(%529) /* ty=Tensor[(605), float32] */;
  (%530, %var_4535, %531, %532, %533, %534, %535)
}

def @func_3785() -> (Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) {
  %536 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 2, 13), bool] */, dtype="bool") /* ty=Tensor[(1, 2, 13), bool] */;
  %537 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 2, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
  %538 = cast(meta[relay.Constant][31] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
  %539 = cast(meta[relay.Constant][31] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
  %540 = reshape(%538, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %541 = reshape(%539, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %542 = @func_1850(%540, %541) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %543 = logical_or(%536, %537) /* ty=Tensor[(6, 2, 13), bool] */;
  %544 = %542.0;
  (%543, %544, meta[relay.Constant][31] /* ty=Tensor[(42, 4), float64] */)
}

def @func_7511(%var_7493: Tensor[(1, 528), int64]) -> (Tensor[(15, 4, 14), float32], Tensor[(11, 4, 12), bool], Tensor[(1, 528), int64]) {
  %545 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %546 = cast(%var_7493, dtype="int64") /* ty=Tensor[(1, 528), int64] */;
  %547 = reshape(%546, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %548 = @func_2734(%547) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) */;
  %549 = %545.0;
  %550 = %548.0;
  (%549, %550, %var_7493)
}

def @func_8736() -> Tensor[(15, 4, 14), uint32] {
  %551 = @func_6003() /* ty=Tensor[(15, 4, 14), float64] */;
  %552 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 4, 14), float64] */, dtype="uint32") /* ty=Tensor[(15, 4, 14), uint32] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="uint32") /* ty=Tensor[(15, 4, 14), uint32] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%554, %555) /* ty=Tensor[(15, 4, 14), uint32] */
}

def @func_1145(%var_1137: Tensor[(10, 9, 8), float32]) -> Tensor[(10, 9, 8), float32] {
  %556 = cast(%var_1137, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  sigmoid(%556) /* ty=Tensor[(10, 9, 8), float32] */
}

def @func_7460(%var_7428: Tensor[(130), float64]) -> (Tensor[(225), uint8], Tensor[(13, 14, 12), float64], Tensor[(10, 13, 12), bool], Tensor[(130), float64], Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %557 = @func_5980() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) */;
  %558 = @func_6118() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %559 = cast(%var_7428, dtype="float64") /* ty=Tensor[(130), float64] */;
  %560 = reshape(%559, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %561 = @func_452(%560) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %562 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %563 = %557.1;
  %564 = %558.0;
  %565 = %561.0;
  %566 = %562.0;
  %567 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  (%563, %564, %565, %var_7428, %566, %567)
}

def @func_4512(%var_4491: uint16) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 12, 9), bool], uint16, Tensor[(432), uint16], Tensor[(15, 4, 14), float32]) {
  %568 = cast(%var_4491, dtype="uint16") /* ty=uint16 */;
  %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(432), uint16] */, dtype="uint16") /* ty=Tensor[(432), uint16] */;
  %570 = reshape(%568, newshape=[]) /* ty=uint16 */;
  %571 = reshape(%569, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint16] */;
  %572 = @func_3383(%570, %571) /* ty=(Tensor[(4, 12, 9), bool],) */;
  %573 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %574 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %575 = %572.0;
  %576 = %573.0;
  (%574, %575, %var_4491, meta[relay.Constant][33] /* ty=Tensor[(432), uint16] */, %576)
}

def @func_5242(%var_5236: Tensor[(91, 1), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 180), float64], Tensor[(?, 7, 13), float32], Tensor[(91, 1), float64]) {
  %577 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %579 = reshape(%578, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %580 = @func_4111(%579) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %581 = cast(%var_5236, dtype="float64") /* ty=Tensor[(91, 1), float64] */;
  %582 = reshape(%581, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %583 = @func_3511(%582) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %584 = %580.0;
  %585 = %583.2;
  (%577, %584, %585, %var_5236)
}

def @func_6563() -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) {
  %586 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %587 = cast(meta[relay.Constant][34] /* ty=Tensor[(360, 2), float32] */, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %588 = cast(meta[relay.Constant][35] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %589 = reshape(%587, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %590 = reshape(%588, newshape=[132]) /* ty=Tensor[(132), uint32] */;
  %591 = @func_5445(%589, %590) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) */;
  %592 = %586.1;
  %593 = %591.5;
  (%592, %593, meta[relay.Constant][34] /* ty=Tensor[(360, 2), float32] */, meta[relay.Constant][35] /* ty=Tensor[(132), uint32] */)
}

def @func_4111(%var_4101: Tensor[(14, 3, 4), float64]) -> (Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) {
  %594 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %595 = reshape(%594, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %596 = @func_1145(%595) /* ty=Tensor[(10, 9, 8), float32] */;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(10, 9, 8), float64] */;
  %598 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(4, 180), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %599 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 180), float32] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %601 = cast(meta[relay.Constant][37] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %602 = reshape(%601, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %603 = @func_1963(%602) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %604 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %605 = cast(%var_4101, dtype="int32") /* ty=Tensor[(14, 3, 4), int32] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="int32") /* ty=Tensor[(14, 3, 4), int32] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %609 = minimum(%599, %600) /* ty=Tensor[(4, 180), float64] */;
  %610 = %603.0;
  %611 = maximum(%607, %608) /* ty=Tensor[(14, 3, 4), int32] */;
  (%609, %610, meta[relay.Constant][37] /* ty=Tensor[(840), float32] */, %611)
}

def @func_4482() -> (Tensor[(15, 4, 14), float32],) {
  %612 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  (%612,)
}

def @func_6573() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %613 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %614 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %615 = %613.0;
  %616 = %614.1;
  (%615, %616)
}

def @func_7962() -> Tensor[(15, 4, 14), float64] {
  %617 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %617.0
}

def @func_5860() -> Tensor[(14, 3, 4), float64] {
  %618 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %619 = %618.1;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %621 = asin(%620) /* ty=Tensor[(14, 3, 4), float32] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  sqrt(%622) /* ty=Tensor[(14, 3, 4), float64] */
}

def @func_7278(%var_7258: Tensor[(11, 16, 8), float32], %var_7272: Tensor[(180, 4), float32], %var_7273: Tensor[(1, 130), float64], %var_7275: Tensor[(243), float64]) -> (Tensor[(11, 16, 8), float32], Tensor[(10, 9, 8), float32], Tensor[(1, 27), float64], Tensor[(180, 4), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64]) {
  %623 = cast(%var_7258, dtype="float32") /* ty=Tensor[(11, 16, 8), float32] */;
  %624 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 27), float64] */, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
  %625 = cast(%var_7272, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
  %626 = cast(%var_7273, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %627 = cast(meta[relay.Constant][39] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %628 = cast(%var_7275, dtype="float64") /* ty=Tensor[(243), float64] */;
  %629 = reshape(%624, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
  %630 = reshape(%625, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %631 = reshape(%626, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %632 = reshape(%627, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %633 = reshape(%628, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
  %634 = @func_1490(%629, %630, %631, %632, %633) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
  %635 = log2(%623) /* ty=Tensor[(11, 16, 8), float32] */;
  %636 = %634.2;
  (%635, %636, meta[relay.Constant][38] /* ty=Tensor[(1, 27), float64] */, %var_7272, %var_7273, meta[relay.Constant][39] /* ty=Tensor[(144), int64] */, %var_7275)
}

def @func_5892() -> (Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) {
  %637 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %638 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 20), float64] */, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %639 = reshape(%638, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %640 = @func_5590(%639) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %641 = %637.0;
  %642 = %640.0;
  (%641, %642, meta[relay.Constant][40] /* ty=Tensor[(5, 20), float64] */)
}

def @func_8364() -> (Tensor[(15, 4, 14), float64],) {
  %643 = @func_7962() /* ty=Tensor[(15, 4, 14), float64] */;
  (%643,)
}

def @func_6874() -> (Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) {
  %644 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %645 = cast(meta[relay.Constant][41] /* ty=Tensor[(33, 4), uint32] */, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
  %646 = cast(meta[relay.Constant][41] /* ty=Tensor[(33, 4), uint32] */, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
  %647 = reshape(%645, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %648 = reshape(%646, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %649 = @func_2359(%647, %648) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %650 = %644.1;
  %651 = %649.2;
  (%650, %651, meta[relay.Constant][41] /* ty=Tensor[(33, 4), uint32] */)
}

def @func_7021(%var_7009: Tensor[(5, 5, 10), float64], %var_7010: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %652 = cast(%var_7010, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %653 = shape_of(%var_7009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%var_7009, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %656 = cast(meta[relay.Constant][42] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %657 = cast(meta[relay.Constant][42] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %658 = reshape(%656, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %659 = reshape(%657, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %660 = @func_1850(%658, %659) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %661 = mod(%654, %655) /* ty=Tensor[(5, 5, 10), float64] */;
  %662 = %660.0;
  (%661, %662, meta[relay.Constant][42] /* ty=Tensor[(168), float64] */)
}

def @func_7582() -> Tensor[(15, 4, 14), float32] {
  %663 = @func_6959() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %663.0
}

def @func_9222() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) {
  %664 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %665 = @func_7704() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %666 = %664.0;
  %667 = %665.0;
  (%666, %667)
}

def @func_2734(%var_2711: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) {
  %668 = cast(%var_2711, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %669 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(11, 4, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 4, 12), int64] */, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = cast(meta[relay.Constant][44] /* ty=Tensor[(130, 1), float64] */, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %673 = reshape(%672, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %674 = @func_452(%673) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %675 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 4, 12), int64] */, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
  %676 = greater_equal(%670, %671) /* ty=Tensor[(11, 4, 12), bool] */;
  %677 = %674.0;
  %678 = log10(%675) /* ty=Tensor[(11, 4, 12), float64] */;
  (%676, %677, meta[relay.Constant][44] /* ty=Tensor[(130, 1), float64] */, %678)
}

def @func_8962(%var_8933: Tensor[(5, 20), float64]) -> (Tensor[(5, 20), uint64], Tensor[(5, 20), uint64]) {
  %679 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %680 = %679.2;
  %681 = cast(%var_8933, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(2), int32] */;
  %683 = cast(%680, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %685 = cast(%680, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %686 = shape_of(%var_8933, dtype="int32") /* ty=Tensor[(2), int32] */;
  %687 = cast(%var_8933, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %689 = floor_divide(%687, %688) /* ty=Tensor[(5, 20), float64] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(5, 20), float32] */;
  %691 = log(%690) /* ty=Tensor[(5, 20), float32] */;
  %692 = cast(%var_8933, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %693 = shape_of(%691, dtype="int32") /* ty=Tensor[(2), int32] */;
  %694 = cast(%691, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %696 = left_shift(%683, %684) /* ty=Tensor[(5, 20), uint64] */;
  %697 = bitwise_xor(%694, %695) /* ty=Tensor[(5, 20), uint64] */;
  (%696, %697)
}

def @func_1850(%var_1839: Tensor[(14, 3, 4), float64], %var_1840: Tensor[(14, 3, 4), float64]) -> (Tensor[(14, 3, 4), float64],) {
  %698 = cast(%var_1840, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %699 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%var_1839, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %702 = divide(%700, %701) /* ty=Tensor[(14, 3, 4), float64] */;
  (%702,)
}

def @func_8785() -> (Tensor[(15, 4, 14), float64],) {
  %703 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
  %704 = %703.2;
  (%704,)
}

def @func_5563() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %705 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %706 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
  %707 = %705.0;
  %708 = %706.0;
  (%707, %708)
}

def @func_6942(%var_6916: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(15, 4, 14), float64], Tensor[(10, 13, 12), bool], Tensor[(12), float64], Tensor[(135), float64], Tensor[(130), float64], Tensor[(36), float64]) {
  %709 = @func_6118() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %710 = %709.0;
  %711 = cast(%var_6916, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %715 = cast(meta[relay.Constant][45] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %716 = cast(meta[relay.Constant][46] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %717 = cast(meta[relay.Constant][47] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %718 = cast(meta[relay.Constant][48] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %719 = reshape(%715, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float64] */;
  %720 = reshape(%716, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %721 = reshape(%717, newshape=[13, 10]) /* ty=Tensor[(13, 10), float64] */;
  %722 = reshape(%718, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), float64] */;
  %723 = @func_2154(%719, %720, %721, %722) /* ty=(Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) */;
  %724 = maximum(%713, %714) /* ty=Tensor[(13, 14, 12), float64] */;
  %725 = @func_6003() /* ty=Tensor[(15, 4, 14), float64] */;
  %726 = %723.2;
  (%724, %725, %726, meta[relay.Constant][45] /* ty=Tensor[(12), float64] */, meta[relay.Constant][46] /* ty=Tensor[(135), float64] */, meta[relay.Constant][47] /* ty=Tensor[(130), float64] */, meta[relay.Constant][48] /* ty=Tensor[(36), float64] */)
}

def @main() -> (Tensor[(15, 4, 14), float64],) {
  %727 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %728 = %727.1;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %730 = cos(%729) /* ty=Tensor[(15, 4, 14), float64] */;
  (%730,)
}

def @func_4351(%var_4338: Tensor[(1, 11, 5), float64]) -> Tensor[(1, 11, 5), float64] {
  %731 = cast(%var_4338, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
  erf(%731) /* ty=Tensor[(1, 11, 5), float64] */
}

def @func_1413(%var_1405: Tensor[(11, 5, 11), int64], %var_1406: Tensor[(11, 5, 11), int64]) -> Tensor[(11, 5, 11), int64] {
  %732 = cast(%var_1406, dtype="int64") /* ty=Tensor[(11, 5, 11), int64] */;
  %733 = shape_of(%var_1405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_1405, dtype="int64") /* ty=Tensor[(11, 5, 11), int64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%734, %735) /* ty=Tensor[(11, 5, 11), int64] */
}

def @func_2359(%var_2307: Tensor[(11, 2, 6), uint32], %var_2308: Tensor[(11, 2, 6), uint32]) -> (Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %736 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %737 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %738 = reshape(%736, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %739 = reshape(%737, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %740 = @func_1850(%738, %739) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %741 = cast(%var_2308, dtype="uint32") /* ty=Tensor[(11, 2, 6), uint32] */;
  %742 = shape_of(%var_2307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%var_2307, dtype="uint32") /* ty=Tensor[(11, 2, 6), uint32] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %745 = bitwise_xor(%743, %744) /* ty=Tensor[(11, 2, 6), uint32] */;
  %746 = cast(%var_2307, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = greater(%748, %749) /* ty=Tensor[(11, 2, 6), bool] */;
  %751 = cast(%750, dtype="int32") /* ty=Tensor[(11, 2, 6), int32] */;
  %752 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%745, dtype="int32") /* ty=Tensor[(11, 2, 6), int32] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %755 = cast(meta[relay.Constant][50] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %756 = cast(meta[relay.Constant][50] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %757 = reshape(%755, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %758 = reshape(%756, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %759 = %740.0;
  %760 = add(%753, %754) /* ty=Tensor[(11, 2, 6), int32] */;
  %761 = @func_1413(%757, %758) /* ty=Tensor[(11, 5, 11), int64] */;
  (%759, meta[relay.Constant][49] /* ty=Tensor[(168), float64] */, %760, %761, meta[relay.Constant][50] /* ty=Tensor[(605), int64] */)
}

def @func_3383(%var_3374: uint16, %var_3375: Tensor[(4, 12, 9), uint16]) -> (Tensor[(4, 12, 9), bool],) {
  %762 = cast(%var_3374, dtype="bool") /* ty=bool */;
  %763 = cast(%var_3375, dtype="bool") /* ty=Tensor[(4, 12, 9), bool] */;
  %764 = less_equal(%762, %763) /* ty=Tensor[(4, 12, 9), bool] */;
  (%764,)
}

def @func_5736(%var_5678: Tensor[(1, 91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) {
  %765 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %766 = cast(%var_5678, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %767 = reshape(%766, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %768 = @func_5165(%767) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
  %769 = cast(%var_5678, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %770 = cast(meta[relay.Constant][51] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %771 = cast(meta[relay.Constant][52] /* ty=Tensor[(225), uint8] */, dtype="uint8") /* ty=Tensor[(225), uint8] */;
  %772 = cast(meta[relay.Constant][53] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %773 = reshape(%770, newshape=[]) /* ty=uint8 */;
  %774 = reshape(%771, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), uint8] */;
  %775 = reshape(%772, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %776 = @func_2671(%773, %774, %775) /* ty=(Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %777 = asin(%769) /* ty=Tensor[(1, 91), float64] */;
  %778 = cast(%777, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %779 = reshape(%778, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %780 = @func_3511(%779) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %781 = %780.1;
  %782 = cast(%781, dtype="uint32") /* ty=Tensor[(105, 2), uint32] */;
  %783 = cast(meta[relay.Constant][51] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %784 = %765.0;
  %785 = %768.1;
  %786 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %787 = %776.0;
  %788 = logical_xor(%782, %783) /* ty=Tensor[(105, 2), uint32] */;
  (%784, %785, %777, %786, %787, meta[relay.Constant][52] /* ty=Tensor[(225), uint8] */, meta[relay.Constant][53] /* ty=Tensor[(168), float64] */, %788)
}

def @func_8196(%var_8183: Tensor[(12, 2, 13), uint32]) -> (Tensor[(12, 2, 13), uint32],) {
  %789 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 2, 13), uint32] */, dtype="uint32") /* ty=Tensor[(12, 2, 13), uint32] */;
  %790 = shape_of(%var_8183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%var_8183, dtype="uint32") /* ty=Tensor[(12, 2, 13), uint32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %793 = subtract(%791, %792) /* ty=Tensor[(12, 2, 13), uint32] */;
  (%793,)
}

def @func_9400() -> Tensor[(15, 4, 14), float64] {
  %794 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %794.0
}

def @func_2883(%var_2873: Tensor[(9, 16, 12), float32], %var_2874: Tensor[(9, 16, 12), float32]) -> (Tensor[(9, 16, 12), float32],) {
  %795 = cast(%var_2874, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %796 = shape_of(%var_2873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%var_2873, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %799 = mod(%797, %798) /* ty=Tensor[(9, 16, 12), float32] */;
  (%799,)
}

def @func_2557(%var_2535: Tensor[(15, 2, 12), float64]) -> Tensor[(15, 2, 12), float64] {
  %800 = cast(%var_2535, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %801 = acosh(%800) /* ty=Tensor[(15, 2, 12), float64] */;
  %802 = cast(%var_2535, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%804, %805) /* ty=Tensor[(15, 2, 12), float64] */
}

def @func_2852(%var_2849: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64],) {
  %806 = cast(%var_2849, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %807 = sigmoid(%806) /* ty=Tensor[(13, 14, 12), float64] */;
  (%807,)
}

def @func_7677(%var_7675: Tensor[(910), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64]) {
  %808 = cast(%var_7675, dtype="float64") /* ty=Tensor[(910), float64] */;
  %809 = reshape(%808, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %810 = @func_7137() /* ty=Tensor[(15, 4, 14), float64] */;
  %811 = @func_5258(%809) /* ty=Tensor[(13, 5, 14), float64] */;
  (%810, %811, %var_7675)
}

def @func_9472() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %812 = @func_9163() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) */;
  %813 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %814 = %812.0;
  %815 = %813.1;
  (%814, %815)
}

def @func_5463() -> (Tensor[(15, 4, 14), float32],) {
  %816 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %817 = %816.0;
  (%817,)
}

def @func_7255() -> (Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) {
  %818 = @func_5980() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) */;
  %819 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %820 = %818.1;
  %821 = %819.0;
  (%820, %821)
}

def @func_6697() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], Tensor[(13, 5, 14), float64], Tensor[(910, 1), float64]) {
  %822 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %823 = cast(meta[relay.Constant][55] /* ty=Tensor[(910, 1), float64] */, dtype="float64") /* ty=Tensor[(910, 1), float64] */;
  %824 = reshape(%823, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %825 = %822.0;
  %826 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %827 = @func_5258(%824) /* ty=Tensor[(13, 5, 14), float64] */;
  (%825, %826, %827, meta[relay.Constant][55] /* ty=Tensor[(910, 1), float64] */)
}

def @func_8852() -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) {
  %828 = @func_6573() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %829 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
  %830 = cast(meta[relay.Constant][56] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %831 = cast(meta[relay.Constant][56] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
  %832 = reshape(%830, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
  %833 = reshape(%831, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
  %834 = @func_2883(%832, %833) /* ty=(Tensor[(9, 16, 12), float32],) */;
  %835 = @func_7572() /* ty=(Tensor[(360, 2), float32],) */;
  %836 = %835.0;
  %837 = cast(%836, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
  %838 = sinh(%837) /* ty=Tensor[(360, 2), float32] */;
  %839 = cast(%836, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(2), int32] */;
  %841 = cast(%838, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %843 = logical_and(%841, %842) /* ty=Tensor[(360, 2), bool] */;
  %844 = cast(%836, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(2), int32] */;
  %846 = cast(%843, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %848 = %828.0;
  %849 = %829.2;
  %850 = %834.0;
  %851 = equal(%846, %847) /* ty=Tensor[(360, 2), bool] */;
  (%848, %849, %850, meta[relay.Constant][56] /* ty=Tensor[(1728), float32] */, %851)
}

def @func_452(%var_444: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 12), bool],) {
  %852 = cast(%var_444, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %853 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  %854 = divide(%852, %853) /* ty=Tensor[(10, 13, 12), float64] */;
  %855 = cast(%854, dtype="bool") /* ty=Tensor[(10, 13, 12), bool] */;
  %856 = cast(%var_444, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %857 = less_equal(%855, %856) /* ty=Tensor[(10, 13, 12), bool] */;
  (%857,)
}

def @func_5931() -> Tensor[(10, 5, 2), float64] {
  %858 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %858.1
}

def @func_8493() -> (Tensor[(15, 4, 14), float32], Tensor[(14, 3, 4), float64]) {
  %859 = @func_6077() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %860 = %859.0;
  %861 = @func_7537() /* ty=Tensor[(14, 3, 4), float64] */;
  (%860, %861)
}

def @func_9372() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32]) {
  %862 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %863 = %862.0;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %865 = reshape(%864, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %866 = @func_1963(%865) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %867 = %866.0;
  (%863, %867)
}

def @func_3466(%var_3463: Tensor[(7, 2, 15), float64]) -> Tensor[(7, 2, 15), float64] {
  %868 = cast(%var_3463, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  erf(%868) /* ty=Tensor[(7, 2, 15), float64] */
}

def @func_5980() -> (Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) {
  %869 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %870 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 91), float64] */, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %871 = reshape(%870, newshape=[1, 91]) /* ty=Tensor[(1, 91), float64] */;
  %872 = @func_5736(%871) /* ty=(Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) */;
  %873 = %869.0;
  %874 = %872.5;
  (%873, %874, meta[relay.Constant][58] /* ty=Tensor[(1, 91), float64] */)
}

def @func_4206() -> Tensor[(15, 4, 14), float32] {
  %875 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
  %875.1
}

def @func_8431() -> (Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) {
  %876 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 312), uint32] */, dtype="uint32") /* ty=Tensor[(1, 312), uint32] */;
  %877 = reshape(%876, newshape=[12, 2, 13]) /* ty=Tensor[(12, 2, 13), uint32] */;
  %878 = @func_8196(%877) /* ty=(Tensor[(12, 2, 13), uint32],) */;
  %879 = @func_6490() /* ty=Tensor[(15, 4, 14), float64] */;
  %880 = %878.0;
  (%879, %880, meta[relay.Constant][59] /* ty=Tensor[(1, 312), uint32] */)
}

def @func_5590(%var_5574: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %881 = cast(%var_5574, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %882 = cast(meta[relay.Constant][60] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %883 = cast(meta[relay.Constant][60] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %884 = reshape(%882, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %885 = reshape(%883, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %886 = sqrt(%881) /* ty=Tensor[(10, 5, 2), float64] */;
  %887 = @func_1413(%884, %885) /* ty=Tensor[(11, 5, 11), int64] */;
  (%886, %887, meta[relay.Constant][60] /* ty=Tensor[(605), int64] */)
}

def @func_6959() -> (Tensor[(15, 4, 14), float32],) {
  %888 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %889 = %888.0;
  (%889,)
}

def @func_4871() -> (Tensor[(15, 4, 14), float64],) {
  %890 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %891 = %890.0;
  (%891,)
}

def @func_7472() -> Tensor[(15, 4, 14), float64] {
  @func_7137() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_9299(%var_9280: Tensor[(6, 2, 13), bool]) -> Tensor[(6, 2, 13), float64] {
  %892 = @func_5662() /* ty=(Tensor[(6, 2, 13), bool],) */;
  %893 = %892.0;
  %894 = cast(%var_9280, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = greater(%896, %897) /* ty=Tensor[(6, 2, 13), bool] */;
  %899 = cast(%898, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
  asinh(%899) /* ty=Tensor[(6, 2, 13), float64] */
}

def @func_3565() -> (Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) {
  %900 = cast(meta[relay.Constant][61] /* ty=Tensor[(16, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 16), float32] */;
  %901 = cast(meta[relay.Constant][62] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %902 = reshape(%901, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %903 = @func_1963(%902) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %904 = rsqrt(%900) /* ty=Tensor[(16, 7, 16), float32] */;
  %905 = %903.0;
  (%904, %905, meta[relay.Constant][62] /* ty=Tensor[(840), float32] */)
}

def @func_7098() -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(132), uint32]) {
  %906 = @func_6874() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) */;
  %907 = cast(meta[relay.Constant][63] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %908 = cast(meta[relay.Constant][64] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %909 = reshape(%907, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %910 = reshape(%908, newshape=[132]) /* ty=Tensor[(132), uint32] */;
  %911 = @func_5445(%909, %910) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) */;
  %912 = %906.0;
  %913 = %911.5;
  (%912, %913, meta[relay.Constant][63] /* ty=Tensor[(720), float32] */, meta[relay.Constant][64] /* ty=Tensor[(132), uint32] */)
}

def @func_5662() -> (Tensor[(6, 2, 13), bool],) {
  %914 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %915 = %914.0;
  (%915,)
}

def @func_6982(%var_6972: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32], Tensor[(10, 5, 2), float64]) {
  %916 = cast(%var_6972, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
  %917 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %918 = tan(%916) /* ty=Tensor[(7, 9, 15), float32] */;
  %919 = %917.1;
  (%918, %919)
}

def @func_8650(%var_8613: Tensor[(91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(11, 5, 11), uint32], Tensor[(11, 5, 11), float32], Tensor[(91), float64], Tensor[(?, 7, 13), int8], Tensor[(14, 3, 4), float64]) {
  %920 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %921 = cast(meta[relay.Constant][65] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %922 = reshape(%921, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %923 = @func_1634(%922) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %924 = %923.4;
  %925 = cast(meta[relay.Constant][65] /* ty=Tensor[(605), int64] */, dtype="uint32") /* ty=Tensor[(605), uint32] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="uint32") /* ty=Tensor[(11, 5, 11), uint32] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %929 = cast(meta[relay.Constant][66] /* ty=Tensor[(11, 5, 11), int64] */, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
  %930 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%924, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %933 = cast(%var_8613, dtype="float64") /* ty=Tensor[(91), float64] */;
  %934 = reshape(%933, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %935 = @func_5165(%934) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
  %936 = %935.1;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(?, 7, 13), float32] */;
  %938 = atanh(%937) /* ty=Tensor[(?, 7, 13), float32] */;
  %939 = cast(%936, dtype="int8") /* ty=Tensor[(?, 7, 13), int8] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%938, dtype="int8") /* ty=Tensor[(?, 7, 13), int8] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %943 = @func_6874() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) */;
  %944 = %920.0;
  %945 = @func_7962() /* ty=Tensor[(15, 4, 14), float64] */;
  %946 = bitwise_or(%927, %928) /* ty=Tensor[(11, 5, 11), uint32] */;
  %947 = floor_mod(%931, %932) /* ty=Tensor[(11, 5, 11), float32] */;
  %948 = bitwise_and(%941, %942) /* ty=Tensor[(?, 7, 13), int8] */;
  %949 = %943.0;
  (%944, %945, %946, %947, %var_8613, %948, %949)
}

def @func_5079() -> (Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) {
  %950 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 56), float64] */, dtype="float64") /* ty=Tensor[(3, 56), float64] */;
  %951 = cast(meta[relay.Constant][67] /* ty=Tensor[(3, 56), float64] */, dtype="float64") /* ty=Tensor[(3, 56), float64] */;
  %952 = reshape(%950, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %953 = reshape(%951, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %954 = @func_1850(%952, %953) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %955 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %956 = cast(%955, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %957 = %954.0;
  %958 = erf(%956) /* ty=Tensor[(15, 4, 14), float64] */;
  (%957, meta[relay.Constant][67] /* ty=Tensor[(3, 56), float64] */, %958)
}

def @func_8740() -> (Tensor[(10, 5, 2), float64],) {
  %959 = @func_6446() /* ty=(Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) */;
  %960 = %959.0;
  (%960,)
}

def @func_9424() -> (Tensor[(15, 4, 14), float32],) {
  %961 = @func_7107() /* ty=Tensor[(15, 4, 14), float32] */;
  (%961,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3383(%var_3374: uint16, %var_3375: Tensor[(4, 12, 9), uint16]) -> (Tensor[(4, 12, 9), bool],) {
  %0 = cast(%var_3374, dtype="bool") /* ty=bool */;
  %1 = cast(%var_3375, dtype="bool") /* ty=Tensor[(4, 12, 9), bool] */;
  %2 = less_equal(%0, %1) /* ty=Tensor[(4, 12, 9), bool] */;
  (%2,)
}

def @func_5023(%var_5019: Tensor[(5, 84), uint32], %var_5020: Tensor[(130), float64], %var_5021: Tensor[(605), int64], %var_5022: Tensor[(168), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], uint32, Tensor[(5, 84), uint32], Tensor[(720), float32], Tensor[(130), float64], Tensor[(144), int64], Tensor[(12, 182), float64], Tensor[(605), int64], Tensor[(10, 14, 3), float32], Tensor[(144), int64], Tensor[(10, 14, 3), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  @func_5017(%var_5019, %var_5020, %var_5021, %var_5022) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], uint32, Tensor[(5, 84), uint32], Tensor[(720), float32], Tensor[(130), float64], Tensor[(144), int64], Tensor[(12, 182), float64], Tensor[(605), int64], Tensor[(10, 14, 3), float32], Tensor[(144), int64], Tensor[(10, 14, 3), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */
}

def @func_7021(%var_7009: Tensor[(5, 5, 10), float64], %var_7010: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %3 = cast(%var_7010, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %4 = shape_of(%var_7009, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_7009, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %9 = reshape(%7, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %10 = reshape(%8, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %11 = @func_1850(%9, %10) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %12 = mod(%5, %6) /* ty=Tensor[(5, 5, 10), float64] */;
  %13 = %11.0;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(168), float64] */)
}

def @func_4114(%var_4112: Tensor[(14, 3, 4), float64]) -> (Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) {
  @func_4111(%var_4112) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */
}

def @func_1966(%var_1964: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
  @func_1963(%var_1964) /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_4515(%var_4513: uint16) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 12, 9), bool], uint16, Tensor[(432), uint16], Tensor[(15, 4, 14), float32]) {
  @func_4512(%var_4513) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(4, 12, 9), bool], uint16, Tensor[(432), uint16], Tensor[(15, 4, 14), float32]) */
}

def @func_5165(%var_5155: Tensor[(91), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) {
  %14 = cast(%var_5155, dtype="float64") /* ty=Tensor[(91), float64] */;
  %15 = reshape(%14, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %16 = @func_3511(%15) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %17 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %18 = %16.2;
  (%17, %18, %var_5155)
}

def @func_7474() -> Tensor[(15, 4, 14), float64] {
  @func_7472() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_5017(%var_4958: Tensor[(5, 84), uint32], %var_4965: Tensor[(130), float64], %var_4968: Tensor[(605), int64], %var_5011: Tensor[(168), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], uint32, Tensor[(5, 84), uint32], Tensor[(720), float32], Tensor[(130), float64], Tensor[(144), int64], Tensor[(12, 182), float64], Tensor[(605), int64], Tensor[(10, 14, 3), float32], Tensor[(144), int64], Tensor[(10, 14, 3), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %19 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %22 = reshape(%21, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %23 = @func_1963(%22) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %24 = cast(%var_4965, dtype="float64") /* ty=Tensor[(130), float64] */;
  %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 182), float64] */, dtype="float64") /* ty=Tensor[(12, 182), float64] */;
  %27 = cast(%var_4968, dtype="int64") /* ty=Tensor[(605), int64] */;
  %28 = reshape(%24, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %29 = reshape(%25, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %30 = reshape(%26, newshape=[2184]) /* ty=Tensor[(2184), float64] */;
  %31 = reshape(%27, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %32 = @func_3666(%28, %29, %30, %31) /* ty=(Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %33 = cast(meta[relay.Constant][1] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %34 = cast(%var_4958, dtype="uint32") /* ty=Tensor[(5, 84), uint32] */;
  %35 = reshape(%33, newshape=[]) /* ty=uint32 */;
  %36 = reshape(%34, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %37 = @func_3709(%35, %36) /* ty=Tensor[(10, 14, 3), uint32] */;
  %38 = cast(%37, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %39 = cast(%var_4965, dtype="float64") /* ty=Tensor[(130), float64] */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %41 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 182), float64] */, dtype="float64") /* ty=Tensor[(12, 182), float64] */;
  %42 = cast(%var_4968, dtype="int64") /* ty=Tensor[(605), int64] */;
  %43 = reshape(%39, newshape=[1, 130]) /* ty=Tensor[(1, 130), float64] */;
  %44 = reshape(%40, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %45 = reshape(%41, newshape=[2184]) /* ty=Tensor[(2184), float64] */;
  %46 = reshape(%42, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %47 = @func_3666(%43, %44, %45, %46) /* ty=(Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %48 = cast(%37, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %49 = cast(%var_5011, dtype="float64") /* ty=Tensor[(168), float64] */;
  %50 = cast(%var_5011, dtype="float64") /* ty=Tensor[(168), float64] */;
  %51 = reshape(%49, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %52 = reshape(%50, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %53 = @func_1850(%51, %52) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %54 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %55 = %23.0;
  %56 = %32.2;
  %57 = tan(%38) /* ty=Tensor[(10, 14, 3), float32] */;
  %58 = %47.0;
  %59 = sin(%48) /* ty=Tensor[(10, 14, 3), float64] */;
  %60 = %53.0;
  (%20, %54, %55, meta[relay.Constant][1] /* ty=uint32 */, %var_4958, %56, %var_4965, meta[relay.Constant][2] /* ty=Tensor[(144), int64] */, meta[relay.Constant][3] /* ty=Tensor[(12, 182), float64] */, %var_4968, %57, %58, %59, %60, %var_5011)
}

def @func_7138() -> Tensor[(15, 4, 14), float64] {
  %62 = fn () -> Tensor[(15, 4, 14), float64] {
    %61 = @func_6776() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %61.0
  };
  %62() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_7108() -> Tensor[(15, 4, 14), float32] {
  %64 = fn () -> Tensor[(15, 4, 14), float32] {
    %63 = @func_6077() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %63.0
  };
  %64() /* ty=Tensor[(15, 4, 14), float32] */
}

def @func_6032() -> (Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) {
  @func_6030() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) */
}

def @func_9426() -> (Tensor[(15, 4, 14), float32],) {
  @func_9424() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_6866(%var_6865: Tensor[(3, 56), float64]) -> (Tensor[(3, 56), int8], Tensor[(3, 56), bool]) {
  %77 = fn (%var_6855: Tensor[(3, 56), float64]) -> (Tensor[(3, 56), int8], Tensor[(3, 56), bool]) {
    %65 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
    %66 = %65.1;
    %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 56), float64] */, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
    %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
    %69 = cast(%66, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %71 = cast(%var_6855, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
    %72 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(3, 56), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 56), float64] */, dtype="bool") /* ty=Tensor[(3, 56), bool] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %75 = minimum(%69, %70) /* ty=Tensor[(3, 56), int8] */;
    %76 = less_equal(%73, %74) /* ty=Tensor[(3, 56), bool] */;
    (%75, %76)
  };
  %77(%var_6865) /* ty=(Tensor[(3, 56), int8], Tensor[(3, 56), bool]) */
}

def @func_8768() -> (Tensor[(14, 3, 4), float64],) {
  @func_8766() /* ty=(Tensor[(14, 3, 4), float64],) */
}

def @func_3513(%var_3512: Tensor[(1, 7, 13), float64]) -> (Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) {
  %88 = fn (%var_3487: Tensor[(1, 7, 13), float64]) -> (Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) {
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %79 = reshape(%78, newshape=[7, 2, 15]) /* ty=Tensor[(7, 2, 15), float64] */;
    %80 = cast(%var_3487, dtype="float64") /* ty=Tensor[(1, 7, 13), float64] */;
    %81 = cos(%80) /* ty=Tensor[(1, 7, 13), float64] */;
    %82 = cast(%var_3487, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
    %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(%81, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %86 = @func_3466(%79) /* ty=Tensor[(7, 2, 15), float64] */;
    %87 = power(%84, %85) /* ty=Tensor[(?, 7, 13), float32] */;
    (%86, meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, %87)
  };
  %88(%var_3512) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */
}

def @func_8962(%var_8933: Tensor[(5, 20), float64]) -> (Tensor[(5, 20), uint64], Tensor[(5, 20), uint64]) {
  %89 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %90 = %89.2;
  %91 = cast(%var_8933, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(%90, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %95 = cast(%90, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %96 = shape_of(%var_8933, dtype="int32") /* ty=Tensor[(2), int32] */;
  %97 = cast(%var_8933, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %99 = floor_divide(%97, %98) /* ty=Tensor[(5, 20), float64] */;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(5, 20), float32] */;
  %101 = log(%100) /* ty=Tensor[(5, 20), float32] */;
  %102 = cast(%var_8933, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(2), int32] */;
  %104 = cast(%101, dtype="uint64") /* ty=Tensor[(5, 20), uint64] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %106 = left_shift(%93, %94) /* ty=Tensor[(5, 20), uint64] */;
  %107 = bitwise_xor(%104, %105) /* ty=Tensor[(5, 20), uint64] */;
  (%106, %107)
}

def @func_4207() -> Tensor[(15, 4, 14), float32] {
  %109 = fn () -> Tensor[(15, 4, 14), float32] {
    %108 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
    %108.1
  };
  %109() /* ty=Tensor[(15, 4, 14), float32] */
}

def @func_9374() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32]) {
  @func_9372() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32]) */
}

def @func_8741() -> (Tensor[(10, 5, 2), float64],) {
  %112 = fn () -> (Tensor[(10, 5, 2), float64],) {
    %110 = @func_6446() /* ty=(Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) */;
    %111 = %110.0;
    (%111,)
  };
  %112() /* ty=(Tensor[(10, 5, 2), float64],) */
}

def @func_4188(%var_4163: Tensor[(605), int64]) -> (Tensor[(14, 3, 4), float64], Tensor[(11, 4, 12), bool], Tensor[(528), int64], Tensor[(605), bool]) {
  %113 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(528), int64] */, dtype="int64") /* ty=Tensor[(528), int64] */;
  %115 = reshape(%114, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %116 = @func_2734(%115) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) */;
  %117 = cast(%var_4163, dtype="int64") /* ty=Tensor[(605), int64] */;
  %118 = reshape(%117, newshape=[605]) /* ty=Tensor[(605), int64] */;
  %119 = @func_1634(%118) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %120 = %119.4;
  %121 = cast(%120, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
  %122 = shape_of(%var_4163, dtype="int32") /* ty=Tensor[(1), int32] */;
  %123 = cast(%var_4163, dtype="bool") /* ty=Tensor[(605), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?), bool] */;
  %125 = %113.1;
  %126 = %116.0;
  %127 = logical_and(%123, %124) /* ty=Tensor[(605), bool] */;
  (%125, %126, meta[relay.Constant][6] /* ty=Tensor[(528), int64] */, %127)
}

def @func_1496(%var_1491: Tensor[(9, 1, 3), float64], %var_1492: Tensor[(4, 180), float32], %var_1493: Tensor[(26, 5), float64], %var_1494: Tensor[(144), int64], %var_1495: Tensor[(9, 9, 3), float64]) -> (Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) {
  %160 = fn (%var_1456: Tensor[(9, 1, 3), float64], %var_1471: Tensor[(4, 180), float32], %var_1479: Tensor[(26, 5), float64], %var_1482: Tensor[(144), int64], %var_1486: Tensor[(9, 9, 3), float64]) -> (Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) {
    %128 = cast(%var_1456, dtype="float64") /* ty=Tensor[(9, 1, 3), float64] */;
    %129 = cast(meta[relay.Constant][7] /* ty=Tensor[(55, 11), int64] */, dtype="int64") /* ty=Tensor[(55, 11), int64] */;
    %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(55, 11), int64] */, dtype="int64") /* ty=Tensor[(55, 11), int64] */;
    %131 = reshape(%129, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
    %132 = reshape(%130, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
    %133 = @func_1413(%131, %132) /* ty=Tensor[(11, 5, 11), int64] */;
    %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(55, 11), int64] */, dtype="bool") /* ty=Tensor[(55, 11), bool] */;
    %135 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%133, dtype="bool") /* ty=Tensor[(11, 5, 11), bool] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %138 = cast(%var_1471, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
    %139 = reshape(%138, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
    %140 = cast(meta[relay.Constant][7] /* ty=Tensor[(55, 11), int64] */, dtype="float32") /* ty=Tensor[(55, 11), float32] */;
    %141 = cast(%var_1479, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
    %142 = reshape(%141, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %143 = @func_452(%142) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %144 = cast(%var_1482, dtype="int64") /* ty=Tensor[(144), int64] */;
    %145 = cast(%var_1479, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
    %146 = cast(%var_1482, dtype="int64") /* ty=Tensor[(144), int64] */;
    %147 = reshape(%144, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
    %148 = reshape(%145, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %149 = reshape(%146, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
    %150 = @func_909(%147, %148, %149) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
    %151 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 1, 3), bool] */;
    %152 = cast(%var_1486, dtype="bool") /* ty=Tensor[(9, 9, 3), bool] */;
    %153 = cos(%128) /* ty=Tensor[(9, 1, 3), float64] */;
    %154 = greater(%136, %137) /* ty=Tensor[(11, 5, 11), bool] */;
    %155 = @func_1145(%139) /* ty=Tensor[(10, 9, 8), float32] */;
    %156 = tan(%140) /* ty=Tensor[(55, 11), float32] */;
    %157 = %143.0;
    %158 = %150.5;
    %159 = logical_and(%151, %152) /* ty=Tensor[(9, 9, 3), bool] */;
    (%153, %154, %155, %var_1471, %156, %157, %var_1479, %158, %var_1482, %159)
  };
  %160(%var_1491, %var_1492, %var_1493, %var_1494, %var_1495) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */
}

def @func_8494() -> (Tensor[(15, 4, 14), float32], Tensor[(14, 3, 4), float64]) {
  %164 = fn () -> (Tensor[(15, 4, 14), float32], Tensor[(14, 3, 4), float64]) {
    %161 = @func_6077() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %162 = %161.0;
    %163 = @func_7537() /* ty=Tensor[(14, 3, 4), float64] */;
    (%162, %163)
  };
  %164() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(14, 3, 4), float64]) */
}

def @func_1417(%var_1415: Tensor[(11, 5, 11), int64], %var_1416: Tensor[(11, 5, 11), int64]) -> Tensor[(11, 5, 11), int64] {
  @func_1413(%var_1415, %var_1416) /* ty=Tensor[(11, 5, 11), int64] */
}

def @func_8433() -> (Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) {
  @func_8431() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) */
}

def @func_1850(%var_1839: Tensor[(14, 3, 4), float64], %var_1840: Tensor[(14, 3, 4), float64]) -> (Tensor[(14, 3, 4), float64],) {
  %165 = cast(%var_1840, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %166 = shape_of(%var_1839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%var_1839, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %169 = divide(%167, %168) /* ty=Tensor[(14, 3, 4), float64] */;
  (%169,)
}

def @func_6030() -> (Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) {
  %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %171 = reshape(%170, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
  %172 = @func_2852(%171) /* ty=(Tensor[(13, 14, 12), float64],) */;
  %173 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %174 = %172.0;
  (%173, %174, meta[relay.Constant][8] /* ty=Tensor[(2184), float64] */)
}

def @func_5464() -> (Tensor[(15, 4, 14), float32],) {
  %177 = fn () -> (Tensor[(15, 4, 14), float32],) {
    %175 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_5563() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %178 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %179 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
  %180 = %178.0;
  %181 = %179.0;
  (%180, %181)
}

def @func_3466(%var_3463: Tensor[(7, 2, 15), float64]) -> Tensor[(7, 2, 15), float64] {
  %182 = cast(%var_3463, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  erf(%182) /* ty=Tensor[(7, 2, 15), float64] */
}

def @func_6984(%var_6983: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32], Tensor[(10, 5, 2), float64]) {
  %187 = fn (%var_6972: Tensor[(7, 9, 15), float32]) -> (Tensor[(7, 9, 15), float32], Tensor[(10, 5, 2), float64]) {
    %183 = cast(%var_6972, dtype="float32") /* ty=Tensor[(7, 9, 15), float32] */;
    %184 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
    %185 = tan(%183) /* ty=Tensor[(7, 9, 15), float32] */;
    %186 = %184.1;
    (%185, %186)
  };
  %187(%var_6983) /* ty=(Tensor[(7, 9, 15), float32], Tensor[(10, 5, 2), float64]) */
}

def @func_9110() -> (Tensor[(15, 4, 14), float64], Tensor[(10, 5, 2), float64]) {
  %192 = fn () -> (Tensor[(15, 4, 14), float64], Tensor[(10, 5, 2), float64]) {
    %188 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %189 = @func_6446() /* ty=(Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) */;
    %190 = %188.0;
    %191 = %189.0;
    (%190, %191)
  };
  %192() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(10, 5, 2), float64]) */
}

def @func_1963(%var_1935: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
  %193 = cast(%var_1935, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %194 = rsqrt(%193) /* ty=Tensor[(15, 4, 14), float32] */;
  (%194,)
}

def @func_4600(%var_4597: Tensor[(130), float64], %var_4598: Tensor[(10, 13, 12), bool], %var_4599: Tensor[(605), int64]) -> (Tensor[(15, 4, 14), float64], Tensor[(130), float64], Tensor[(10, 13, 12), uint64], Tensor[(144), int64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(605), float32]) {
  %216 = fn (%var_4535: Tensor[(130), float64], %var_4545: Tensor[(10, 13, 12), bool], %var_4552: Tensor[(605), int64]) -> (Tensor[(15, 4, 14), float64], Tensor[(130), float64], Tensor[(10, 13, 12), uint64], Tensor[(144), int64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(605), float32]) {
    %195 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %196 = cast(%var_4535, dtype="float64") /* ty=Tensor[(130), float64] */;
    %197 = reshape(%196, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %198 = @func_452(%197) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %199 = %198.0;
    %200 = cast(%var_4545, dtype="uint64") /* ty=Tensor[(10, 13, 12), uint64] */;
    %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%199, dtype="uint64") /* ty=Tensor[(10, 13, 12), uint64] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %204 = cast(%var_4552, dtype="int64") /* ty=Tensor[(605), int64] */;
    %205 = reshape(%204, newshape=[605]) /* ty=Tensor[(605), int64] */;
    %206 = @func_1634(%205) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
    %207 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %208 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %209 = cast(%var_4552, dtype="float32") /* ty=Tensor[(605), float32] */;
    %210 = %195.0;
    %211 = bitwise_xor(%202, %203) /* ty=Tensor[(10, 13, 12), uint64] */;
    %212 = %206.2;
    %213 = %207.0;
    %214 = %208.0;
    %215 = log10(%209) /* ty=Tensor[(605), float32] */;
    (%210, %var_4535, %211, %212, %213, %214, %215)
  };
  %216(%var_4597, %var_4598, %var_4599) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(130), float64], Tensor[(10, 13, 12), uint64], Tensor[(144), int64], Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(605), float32]) */
}

def @func_4191(%var_4189: Tensor[(605), int64]) -> (Tensor[(14, 3, 4), float64], Tensor[(11, 4, 12), bool], Tensor[(528), int64], Tensor[(605), bool]) {
  @func_4188(%var_4189) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 4, 12), bool], Tensor[(528), int64], Tensor[(605), bool]) */
}

def @func_4512(%var_4491: uint16) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 12, 9), bool], uint16, Tensor[(432), uint16], Tensor[(15, 4, 14), float32]) {
  %217 = cast(%var_4491, dtype="uint16") /* ty=uint16 */;
  %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(432), uint16] */, dtype="uint16") /* ty=Tensor[(432), uint16] */;
  %219 = reshape(%217, newshape=[]) /* ty=uint16 */;
  %220 = reshape(%218, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), uint16] */;
  %221 = @func_3383(%219, %220) /* ty=(Tensor[(4, 12, 9), bool],) */;
  %222 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %223 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %224 = %221.0;
  %225 = %222.0;
  (%223, %224, %var_4491, meta[relay.Constant][9] /* ty=Tensor[(432), uint16] */, %225)
}

def @func_1781(%var_1722: Tensor[(1, 15, 14), uint8], %var_1723: Tensor[(9, 15, 14), uint8], %var_1753: Tensor[(144), int64], %var_1754: Tensor[(130), float64], %var_1758: Tensor[(605), int64]) -> (Tensor[(9, 15, 14), bool], Tensor[(130), float64], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %226 = cast(%var_1722, dtype="uint8") /* ty=Tensor[(1, 15, 14), uint8] */;
  %227 = cast(%var_1723, dtype="uint8") /* ty=Tensor[(9, 15, 14), uint8] */;
  %228 = bitwise_xor(%226, %227) /* ty=Tensor[(9, 15, 14), uint8] */;
  %229 = cast(%228, dtype="bool") /* ty=Tensor[(9, 15, 14), bool] */;
  %230 = cast(%var_1722, dtype="bool") /* ty=Tensor[(1, 15, 14), bool] */;
  %231 = cast(%var_1753, dtype="int64") /* ty=Tensor[(144), int64] */;
  %232 = cast(%var_1754, dtype="float64") /* ty=Tensor[(130), float64] */;
  %233 = cast(%var_1753, dtype="int64") /* ty=Tensor[(144), int64] */;
  %234 = reshape(%231, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %235 = reshape(%232, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %236 = reshape(%233, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %237 = @func_909(%234, %235, %236) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %238 = cast(%var_1758, dtype="int64") /* ty=Tensor[(605), int64] */;
  %239 = cast(%var_1758, dtype="int64") /* ty=Tensor[(605), int64] */;
  %240 = reshape(%238, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %241 = reshape(%239, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %242 = greater(%229, %230) /* ty=Tensor[(9, 15, 14), bool] */;
  %243 = %237.0;
  %244 = @func_1413(%240, %241) /* ty=Tensor[(11, 5, 11), int64] */;
  (%242, %243, %var_1753, %var_1754, %244, %var_1758)
}

def @func_6575() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  @func_6573() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */
}

def @func_4111(%var_4101: Tensor[(14, 3, 4), float64]) -> (Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) {
  %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %246 = reshape(%245, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %247 = @func_1145(%246) /* ty=Tensor[(10, 9, 8), float32] */;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(10, 9, 8), float64] */;
  %249 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(4, 180), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %250 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 180), float32] */, dtype="float64") /* ty=Tensor[(4, 180), float64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %252 = cast(meta[relay.Constant][11] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %253 = reshape(%252, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %254 = @func_1963(%253) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %255 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %256 = cast(%var_4101, dtype="int32") /* ty=Tensor[(14, 3, 4), int32] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="int32") /* ty=Tensor[(14, 3, 4), int32] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %260 = minimum(%250, %251) /* ty=Tensor[(4, 180), float64] */;
  %261 = %254.0;
  %262 = maximum(%258, %259) /* ty=Tensor[(14, 3, 4), int32] */;
  (%260, %261, meta[relay.Constant][11] /* ty=Tensor[(840), float32] */, %262)
}

def @func_7962() -> Tensor[(15, 4, 14), float64] {
  %263 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %263.0
}

def @func_4482() -> (Tensor[(15, 4, 14), float32],) {
  %264 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  (%264,)
}

def @func_5739(%var_5737: Tensor[(1, 91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) {
  @func_5736(%var_5737) /* ty=(Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) */
}

def @func_9302(%var_9300: Tensor[(6, 2, 13), bool]) -> Tensor[(6, 2, 13), float64] {
  @func_9299(%var_9300) /* ty=Tensor[(6, 2, 13), float64] */
}

def @func_3786() -> (Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) {
  %274 = fn () -> (Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) {
    %265 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 2, 13), bool] */, dtype="bool") /* ty=Tensor[(1, 2, 13), bool] */;
    %266 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 2, 13), bool] */, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
    %267 = cast(meta[relay.Constant][14] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
    %268 = cast(meta[relay.Constant][14] /* ty=Tensor[(42, 4), float64] */, dtype="float64") /* ty=Tensor[(42, 4), float64] */;
    %269 = reshape(%267, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
    %270 = reshape(%268, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
    %271 = @func_1850(%269, %270) /* ty=(Tensor[(14, 3, 4), float64],) */;
    %272 = logical_or(%265, %266) /* ty=Tensor[(6, 2, 13), bool] */;
    %273 = %271.0;
    (%272, %273, meta[relay.Constant][14] /* ty=Tensor[(42, 4), float64] */)
  };
  %274() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */
}

def @func_2363(%var_2361: Tensor[(11, 2, 6), uint32], %var_2362: Tensor[(11, 2, 6), uint32]) -> (Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  @func_2359(%var_2361, %var_2362) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_2886(%var_2884: Tensor[(9, 16, 12), float32], %var_2885: Tensor[(9, 16, 12), float32]) -> (Tensor[(9, 16, 12), float32],) {
  %280 = fn (%var_2873: Tensor[(9, 16, 12), float32], %var_2874: Tensor[(9, 16, 12), float32]) -> (Tensor[(9, 16, 12), float32],) {
    %275 = cast(%var_2874, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
    %276 = shape_of(%var_2873, dtype="int32") /* ty=Tensor[(3), int32] */;
    %277 = cast(%var_2873, dtype="float32") /* ty=Tensor[(9, 16, 12), float32] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %279 = mod(%277, %278) /* ty=Tensor[(9, 16, 12), float32] */;
    (%279,)
  };
  %280(%var_2884, %var_2885) /* ty=(Tensor[(9, 16, 12), float32],) */
}

def @func_7537() -> Tensor[(14, 3, 4), float64] {
  %281 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %281.1
}

def @func_7706() -> (Tensor[(15, 4, 14), float64],) {
  @func_7704() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_7679(%var_7678: Tensor[(910), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64]) {
  %286 = fn (%var_7675: Tensor[(910), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64]) {
    %282 = cast(%var_7675, dtype="float64") /* ty=Tensor[(910), float64] */;
    %283 = reshape(%282, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
    %284 = @func_7137() /* ty=Tensor[(15, 4, 14), float64] */;
    %285 = @func_5258(%283) /* ty=Tensor[(13, 5, 14), float64] */;
    (%284, %285, %var_7675)
  };
  %286(%var_7678) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(13, 5, 14), float64], Tensor[(910), float64]) */
}

def @func_5860() -> Tensor[(14, 3, 4), float64] {
  %287 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %288 = %287.1;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %290 = asin(%289) /* ty=Tensor[(14, 3, 4), float32] */;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  sqrt(%291) /* ty=Tensor[(14, 3, 4), float64] */
}

def @func_6959() -> (Tensor[(15, 4, 14), float32],) {
  %292 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %293 = %292.0;
  (%293,)
}

def @func_9472() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %294 = @func_9163() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) */;
  %295 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %296 = %294.0;
  %297 = %295.1;
  (%296, %297)
}

def @main() -> (Tensor[(15, 4, 14), float64],) {
  %298 = @func_7257() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %299 = %298.1;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %301 = cos(%300) /* ty=Tensor[(15, 4, 14), float64] */;
  (%301,)
}

def @func_4622() -> (Tensor[(15, 4, 14), float64],) {
  %304 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %302 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %303 = %302.0;
    (%303,)
  };
  %304() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_4753(%var_4752: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
  %312 = fn (%var_4731: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float32],) {
    %305 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %306 = %305.0;
    %307 = cast(%var_4731, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
    %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
    %309 = cast(%306, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
    %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %311 = floor_mod(%309, %310) /* ty=Tensor[(15, 4, 14), float32] */;
    (%311,)
  };
  %312(%var_4752) /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_9087(%var_9072: Tensor[(9, 16, 12), float32]) -> Tensor[(9, 16, 12), bool] {
  %313 = @func_8852() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) */;
  %314 = %313.2;
  %315 = cast(%var_9072, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="bool") /* ty=Tensor[(9, 16, 12), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%317, %318) /* ty=Tensor[(9, 16, 12), bool] */
}

def @func_3712(%var_3710: uint32, %var_3711: Tensor[(10, 14, 3), uint32]) -> Tensor[(10, 14, 3), uint32] {
  %321 = fn (%var_3703: uint32, %var_3704: Tensor[(10, 14, 3), uint32]) -> Tensor[(10, 14, 3), uint32] {
    %319 = cast(%var_3703, dtype="uint32") /* ty=uint32 */;
    %320 = cast(%var_3704, dtype="uint32") /* ty=Tensor[(10, 14, 3), uint32] */;
    subtract(%319, %320) /* ty=Tensor[(10, 14, 3), uint32] */
  };
  %321(%var_3710, %var_3711) /* ty=Tensor[(10, 14, 3), uint32] */
}

def @func_7472() -> Tensor[(15, 4, 14), float64] {
  @func_7137() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_9299(%var_9280: Tensor[(6, 2, 13), bool]) -> Tensor[(6, 2, 13), float64] {
  %322 = @func_5662() /* ty=(Tensor[(6, 2, 13), bool],) */;
  %323 = %322.0;
  %324 = cast(%var_9280, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(6, 2, 13), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = greater(%326, %327) /* ty=Tensor[(6, 2, 13), bool] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
  asinh(%329) /* ty=Tensor[(6, 2, 13), float64] */
}

def @func_9163() -> (Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) {
  %330 = @func_8431() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) */;
  %331 = cast(meta[relay.Constant][15] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %332 = cast(meta[relay.Constant][15] /* ty=Tensor[(250), float64] */, dtype="float64") /* ty=Tensor[(250), float64] */;
  %333 = reshape(%331, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %334 = reshape(%332, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %335 = @func_7021(%333, %334) /* ty=(Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %336 = %330.0;
  %337 = %335.0;
  (%336, %337, meta[relay.Constant][15] /* ty=Tensor[(250), float64] */)
}

def @func_2557(%var_2535: Tensor[(15, 2, 12), float64]) -> Tensor[(15, 2, 12), float64] {
  %338 = cast(%var_2535, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %339 = acosh(%338) /* ty=Tensor[(15, 2, 12), float64] */;
  %340 = cast(%var_2535, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="float64") /* ty=Tensor[(15, 2, 12), float64] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%342, %343) /* ty=Tensor[(15, 2, 12), float64] */
}

def @func_7460(%var_7428: Tensor[(130), float64]) -> (Tensor[(225), uint8], Tensor[(13, 14, 12), float64], Tensor[(10, 13, 12), bool], Tensor[(130), float64], Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %344 = @func_5980() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) */;
  %345 = @func_6118() /* ty=(Tensor[(13, 14, 12), float64],) */;
  %346 = cast(%var_7428, dtype="float64") /* ty=Tensor[(130), float64] */;
  %347 = reshape(%346, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %348 = @func_452(%347) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %349 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %350 = %344.1;
  %351 = %345.0;
  %352 = %348.0;
  %353 = %349.0;
  %354 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  (%350, %351, %352, %var_7428, %353, %354)
}

def @func_5892() -> (Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) {
  %355 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %356 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 20), float64] */, dtype="float64") /* ty=Tensor[(5, 20), float64] */;
  %357 = reshape(%356, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %358 = @func_5590(%357) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %359 = %355.0;
  %360 = %358.0;
  (%359, %360, meta[relay.Constant][16] /* ty=Tensor[(5, 20), float64] */)
}

def @func_7255() -> (Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) {
  %361 = @func_5980() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) */;
  %362 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %363 = %361.1;
  %364 = %362.0;
  (%363, %364)
}

def @func_5168(%var_5166: Tensor[(91), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) {
  @func_5165(%var_5166) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */
}

def @func_7582() -> Tensor[(15, 4, 14), float32] {
  %365 = @func_6959() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %365.0
}

def @func_4022(%var_3986: Tensor[(225), uint8]) -> (Tensor[(10, 14, 3), uint32], uint32, Tensor[(420), uint32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(14, 3, 4), float64], Tensor[(10, 14, 3), uint32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %366 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %367 = cast(meta[relay.Constant][18] /* ty=Tensor[(420), uint32] */, dtype="uint32") /* ty=Tensor[(420), uint32] */;
  %368 = reshape(%366, newshape=[]) /* ty=uint32 */;
  %369 = reshape(%367, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %370 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint8") /* ty=uint8 */;
  %371 = cast(%var_3986, dtype="uint8") /* ty=Tensor[(225), uint8] */;
  %372 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %373 = %372.1;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %375 = reshape(%370, newshape=[]) /* ty=uint8 */;
  %376 = reshape(%371, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), uint8] */;
  %377 = reshape(%374, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %378 = @func_2671(%375, %376, %377) /* ty=(Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %379 = cast(%373, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %380 = atanh(%379) /* ty=Tensor[(14, 3, 4), float64] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %382 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %383 = @func_3709(%368, %369) /* ty=Tensor[(10, 14, 3), uint32] */;
  %384 = cast(%383, dtype="uint32") /* ty=Tensor[(10, 14, 3), uint32] */;
  %385 = reshape(%382, newshape=[]) /* ty=uint32 */;
  %386 = reshape(%384, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), uint32] */;
  %387 = cast(meta[relay.Constant][19] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %388 = cast(meta[relay.Constant][19] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %389 = reshape(%387, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %390 = reshape(%388, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %391 = %378.0;
  %392 = sinh(%381) /* ty=Tensor[(14, 3, 4), float64] */;
  %393 = @func_3709(%385, %386) /* ty=Tensor[(10, 14, 3), uint32] */;
  %394 = @func_1413(%389, %390) /* ty=Tensor[(11, 5, 11), int64] */;
  (%383, meta[relay.Constant][17] /* ty=uint32 */, meta[relay.Constant][18] /* ty=Tensor[(420), uint32] */, %391, %var_3986, %392, %393, %394, meta[relay.Constant][19] /* ty=Tensor[(605), int64] */)
}

def @func_6573() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  %395 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %396 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
  %397 = %395.0;
  %398 = %396.1;
  (%397, %398)
}

def @func_4484() -> (Tensor[(15, 4, 14), float32],) {
  @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_5981() -> (Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) {
  %405 = fn () -> (Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) {
    %399 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %400 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 91), float64] */, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
    %401 = reshape(%400, newshape=[1, 91]) /* ty=Tensor[(1, 91), float64] */;
    %402 = @func_5736(%401) /* ty=(Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) */;
    %403 = %399.0;
    %404 = %402.5;
    (%403, %404, meta[relay.Constant][20] /* ty=Tensor[(1, 91), float64] */)
  };
  %405() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(225), uint8], Tensor[(1, 91), float64]) */
}

def @func_7704() -> (Tensor[(15, 4, 14), float64],) {
  %406 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %407 = %406.0;
  (%407,)
}

def @func_8271() -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
  %412 = fn () -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
    %408 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %409 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
    %410 = %408.0;
    %411 = %409.0;
    (%410, %411)
  };
  %412() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) */
}

def @func_1147(%var_1146: Tensor[(10, 9, 8), float32]) -> Tensor[(10, 9, 8), float32] {
  %414 = fn (%var_1137: Tensor[(10, 9, 8), float32]) -> Tensor[(10, 9, 8), float32] {
    %413 = cast(%var_1137, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
    sigmoid(%413) /* ty=Tensor[(10, 9, 8), float32] */
  };
  %414(%var_1146) /* ty=Tensor[(10, 9, 8), float32] */
}

def @func_5894() -> (Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) {
  @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */
}

def @func_8198(%var_8197: Tensor[(12, 2, 13), uint32]) -> (Tensor[(12, 2, 13), uint32],) {
  %420 = fn (%var_8183: Tensor[(12, 2, 13), uint32]) -> (Tensor[(12, 2, 13), uint32],) {
    %415 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 2, 13), uint32] */, dtype="uint32") /* ty=Tensor[(12, 2, 13), uint32] */;
    %416 = shape_of(%var_8183, dtype="int32") /* ty=Tensor[(3), int32] */;
    %417 = cast(%var_8183, dtype="uint32") /* ty=Tensor[(12, 2, 13), uint32] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %419 = subtract(%417, %418) /* ty=Tensor[(12, 2, 13), uint32] */;
    (%419,)
  };
  %420(%var_8197) /* ty=(Tensor[(12, 2, 13), uint32],) */
}

def @func_8853() -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) {
  %445 = fn () -> (Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) {
    %421 = @func_6573() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
    %422 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
    %423 = cast(meta[relay.Constant][22] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %424 = cast(meta[relay.Constant][22] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %425 = reshape(%423, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
    %426 = reshape(%424, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
    %427 = @func_2883(%425, %426) /* ty=(Tensor[(9, 16, 12), float32],) */;
    %428 = @func_7572() /* ty=(Tensor[(360, 2), float32],) */;
    %429 = %428.0;
    %430 = cast(%429, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
    %431 = sinh(%430) /* ty=Tensor[(360, 2), float32] */;
    %432 = cast(%429, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
    %433 = shape_of(%431, dtype="int32") /* ty=Tensor[(2), int32] */;
    %434 = cast(%431, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
    %435 = dyn.reshape(%432, %433, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %436 = logical_and(%434, %435) /* ty=Tensor[(360, 2), bool] */;
    %437 = cast(%429, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
    %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(2), int32] */;
    %439 = cast(%436, dtype="bool") /* ty=Tensor[(360, 2), bool] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %441 = %421.0;
    %442 = %422.2;
    %443 = %427.0;
    %444 = equal(%439, %440) /* ty=Tensor[(360, 2), bool] */;
    (%441, %442, %443, meta[relay.Constant][22] /* ty=Tensor[(1728), float32] */, %444)
  };
  %445() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(15, 4, 14), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(360, 2), bool]) */
}

def @func_6961() -> (Tensor[(15, 4, 14), float32],) {
  @func_6959() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_5492(%var_5491: Tensor[(8, 15, 4), float64]) -> Tensor[(8, 15, 4), float64] {
  %447 = fn (%var_5482: Tensor[(8, 15, 4), float64]) -> Tensor[(8, 15, 4), float64] {
    %446 = cast(%var_5482, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
    sin(%446) /* ty=Tensor[(8, 15, 4), float64] */
  };
  %447(%var_5491) /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_8078(%var_8076: Tensor[(196), float64]) -> (Tensor[(225), uint8], Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), int32], Tensor[(196), float64]) {
  @func_8075(%var_8076) /* ty=(Tensor[(225), uint8], Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), int32], Tensor[(196), float64]) */
}

def @func_7284(%var_7280: Tensor[(11, 16, 8), float32], %var_7281: Tensor[(180, 4), float32], %var_7282: Tensor[(1, 130), float64], %var_7283: Tensor[(243), float64]) -> (Tensor[(11, 16, 8), float32], Tensor[(10, 9, 8), float32], Tensor[(1, 27), float64], Tensor[(180, 4), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64]) {
  @func_7278(%var_7280, %var_7281, %var_7282, %var_7283) /* ty=(Tensor[(11, 16, 8), float32], Tensor[(10, 9, 8), float32], Tensor[(1, 27), float64], Tensor[(180, 4), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64]) */
}

def @func_2560(%var_2558: Tensor[(15, 2, 12), float64]) -> Tensor[(15, 2, 12), float64] {
  @func_2557(%var_2558) /* ty=Tensor[(15, 2, 12), float64] */
}

def @func_452(%var_444: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 12), bool],) {
  %448 = cast(%var_444, dtype="float64") /* ty=Tensor[(10, 13, 1), float64] */;
  %449 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  %450 = divide(%448, %449) /* ty=Tensor[(10, 13, 12), float64] */;
  %451 = cast(%450, dtype="bool") /* ty=Tensor[(10, 13, 12), bool] */;
  %452 = cast(%var_444, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %453 = less_equal(%451, %452) /* ty=Tensor[(10, 13, 12), bool] */;
  (%453,)
}

def @func_9224() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) {
  @func_9222() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) */
}

def @func_3469(%var_3467: Tensor[(7, 2, 15), float64]) -> Tensor[(7, 2, 15), float64] {
  @func_3466(%var_3467) /* ty=Tensor[(7, 2, 15), float64] */
}

def @func_4353(%var_4352: Tensor[(1, 11, 5), float64]) -> Tensor[(1, 11, 5), float64] {
  %455 = fn (%var_4338: Tensor[(1, 11, 5), float64]) -> Tensor[(1, 11, 5), float64] {
    %454 = cast(%var_4338, dtype="float64") /* ty=Tensor[(1, 11, 5), float64] */;
    erf(%454) /* ty=Tensor[(1, 11, 5), float64] */
  };
  %455(%var_4352) /* ty=Tensor[(1, 11, 5), float64] */
}

def @func_6004() -> Tensor[(15, 4, 14), float64] {
  %457 = fn () -> Tensor[(15, 4, 14), float64] {
    %456 = @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */;
    %456.0
  };
  %457() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_8075(%var_8053: Tensor[(196), float64]) -> (Tensor[(225), uint8], Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), int32], Tensor[(196), float64]) {
  %458 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %459 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %460 = cast(%var_8053, dtype="float64") /* ty=Tensor[(196), float64] */;
  %461 = cast(%var_8053, dtype="float64") /* ty=Tensor[(196), float64] */;
  %462 = reshape(%460, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %463 = reshape(%461, newshape=[4, 7, 7]) /* ty=Tensor[(4, 7, 7), float64] */;
  %464 = @func_6176(%462, %463) /* ty=(Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) */;
  %465 = %458.0;
  %466 = %459.0;
  %467 = %464.1;
  (%465, %466, %467, %var_8053)
}

def @func_9400() -> Tensor[(15, 4, 14), float64] {
  %468 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %468.0
}

def @func_9372() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32]) {
  %469 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
  %470 = %469.0;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
  %472 = reshape(%471, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
  %473 = @func_1963(%472) /* ty=(Tensor[(15, 4, 14), float32],) */;
  %474 = %473.0;
  (%470, %474)
}

def @func_2676(%var_2673: uint8, %var_2674: Tensor[(15, 15, 1), uint8], %var_2675: Tensor[(168), float64]) -> (Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  @func_2671(%var_2673, %var_2674, %var_2675) /* ty=(Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */
}

def @func_7099() -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(132), uint32]) {
  %483 = fn () -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(132), uint32]) {
    %475 = @func_6874() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) */;
    %476 = cast(meta[relay.Constant][24] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %477 = cast(meta[relay.Constant][25] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
    %478 = reshape(%476, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %479 = reshape(%477, newshape=[132]) /* ty=Tensor[(132), uint32] */;
    %480 = @func_5445(%478, %479) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) */;
    %481 = %475.0;
    %482 = %480.5;
    (%481, %482, meta[relay.Constant][24] /* ty=Tensor[(720), float32] */, meta[relay.Constant][25] /* ty=Tensor[(132), uint32] */)
  };
  %483() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(132), uint32]) */
}

def @func_8431() -> (Tensor[(15, 4, 14), float64], Tensor[(12, 2, 13), uint32], Tensor[(1, 312), uint32]) {
  %484 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 312), uint32] */, dtype="uint32") /* ty=Tensor[(1, 312), uint32] */;
  %485 = reshape(%484, newshape=[12, 2, 13]) /* ty=Tensor[(12, 2, 13), uint32] */;
  %486 = @func_8196(%485) /* ty=(Tensor[(12, 2, 13), uint32],) */;
  %487 = @func_6490() /* ty=Tensor[(15, 4, 14), float64] */;
  %488 = %486.0;
  (%487, %488, meta[relay.Constant][26] /* ty=Tensor[(1, 312), uint32] */)
}

def @func_6564() -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) {
  %497 = fn () -> (Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) {
    %489 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
    %490 = cast(meta[relay.Constant][27] /* ty=Tensor[(360, 2), float32] */, dtype="float32") /* ty=Tensor[(360, 2), float32] */;
    %491 = cast(meta[relay.Constant][28] /* ty=Tensor[(132), uint32] */, dtype="uint32") /* ty=Tensor[(132), uint32] */;
    %492 = reshape(%490, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %493 = reshape(%491, newshape=[132]) /* ty=Tensor[(132), uint32] */;
    %494 = @func_5445(%492, %493) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) */;
    %495 = %489.1;
    %496 = %494.5;
    (%495, %496, meta[relay.Constant][27] /* ty=Tensor[(360, 2), float32] */, meta[relay.Constant][28] /* ty=Tensor[(132), uint32] */)
  };
  %497() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) */
}

def @func_5242(%var_5236: Tensor[(91, 1), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 180), float64], Tensor[(?, 7, 13), float32], Tensor[(91, 1), float64]) {
  %498 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
  %500 = reshape(%499, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %501 = @func_4111(%500) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %502 = cast(%var_5236, dtype="float64") /* ty=Tensor[(91, 1), float64] */;
  %503 = reshape(%502, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %504 = @func_3511(%503) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %505 = %501.0;
  %506 = %504.2;
  (%498, %505, %506, %var_5236)
}

def @func_1892(%var_1862: Tensor[(15, 9), float64], %var_1869: Tensor[(720), float32], %var_1877: Tensor[(130), float64]) -> (Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) {
  %507 = cast(%var_1862, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
  %508 = cast(%var_1869, dtype="float32") /* ty=Tensor[(720), float32] */;
  %509 = reshape(%508, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %510 = cast(%var_1877, dtype="float64") /* ty=Tensor[(130), float64] */;
  %511 = reshape(%510, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %512 = @func_452(%511) /* ty=(Tensor[(10, 13, 12), bool],) */;
  %513 = rsqrt(%507) /* ty=Tensor[(15, 9), float64] */;
  %514 = @func_1145(%509) /* ty=Tensor[(10, 9, 8), float32] */;
  %515 = %512.0;
  (%513, %514, %var_1869, %515, %var_1877)
}

def @func_3841() -> Tensor[(14, 3, 4), float64] {
  %517 = fn () -> Tensor[(14, 3, 4), float64] {
    %516 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
    %516.1
  };
  %517() /* ty=Tensor[(14, 3, 4), float64] */
}

def @func_6078() -> (Tensor[(15, 4, 14), float32],) {
  %520 = fn () -> (Tensor[(15, 4, 14), float32],) {
    %518 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %519 = %518.0;
    (%519,)
  };
  %520() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_6697() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], Tensor[(13, 5, 14), float64], Tensor[(910, 1), float64]) {
  %521 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %522 = cast(meta[relay.Constant][29] /* ty=Tensor[(910, 1), float64] */, dtype="float64") /* ty=Tensor[(910, 1), float64] */;
  %523 = reshape(%522, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %524 = %521.0;
  %525 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %526 = @func_5258(%523) /* ty=Tensor[(13, 5, 14), float64] */;
  (%524, %525, %526, meta[relay.Constant][29] /* ty=Tensor[(910, 1), float64] */)
}

def @func_4025(%var_4023: Tensor[(225), uint8]) -> (Tensor[(10, 14, 3), uint32], uint32, Tensor[(420), uint32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(14, 3, 4), float64], Tensor[(10, 14, 3), uint32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  @func_4022(%var_4023) /* ty=(Tensor[(10, 14, 3), uint32], uint32, Tensor[(420), uint32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(14, 3, 4), float64], Tensor[(10, 14, 3), uint32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_9424() -> (Tensor[(15, 4, 14), float32],) {
  %527 = @func_7107() /* ty=Tensor[(15, 4, 14), float32] */;
  (%527,)
}

def @func_9444() -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
  @func_9442() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) */
}

def @func_9474() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  @func_9472() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */
}

def @func_6491() -> Tensor[(15, 4, 14), float64] {
  %529 = fn () -> Tensor[(15, 4, 14), float64] {
    %528 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %528.0
  };
  %529() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_4397() -> (Tensor[(15, 4, 14), float64],) {
  @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_8737() -> Tensor[(15, 4, 14), uint32] {
  %535 = fn () -> Tensor[(15, 4, 14), uint32] {
    %530 = @func_6003() /* ty=Tensor[(15, 4, 14), float64] */;
    %531 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 4, 14), float64] */, dtype="uint32") /* ty=Tensor[(15, 4, 14), uint32] */;
    %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
    %533 = cast(%530, dtype="uint32") /* ty=Tensor[(15, 4, 14), uint32] */;
    %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    add(%533, %534) /* ty=Tensor[(15, 4, 14), uint32] */
  };
  %535() /* ty=Tensor[(15, 4, 14), uint32] */
}

def @func_7025(%var_7023: Tensor[(5, 5, 10), float64], %var_7024: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  @func_7021(%var_7023, %var_7024) /* ty=(Tensor[(5, 5, 10), float64], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */
}

def @func_1897(%var_1894: Tensor[(15, 9), float64], %var_1895: Tensor[(720), float32], %var_1896: Tensor[(130), float64]) -> (Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) {
  @func_1892(%var_1894, %var_1895, %var_1896) /* ty=(Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) */
}

def @func_9222() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) {
  %536 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %537 = @func_7704() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %538 = %536.0;
  %539 = %537.0;
  (%538, %539)
}

def @func_455(%var_453: Tensor[(10, 13, 1), float64]) -> (Tensor[(10, 13, 12), bool],) {
  @func_452(%var_453) /* ty=(Tensor[(10, 13, 12), bool],) */
}

def @func_7935() -> Tensor[(132), uint32] {
  %541 = fn () -> Tensor[(132), uint32] {
    %540 = @func_6563() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) */;
    %540.3
  };
  %541() /* ty=Tensor[(132), uint32] */
}

def @func_5786() -> (Tensor[(15, 4, 14), float64],) {
  %544 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %542 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %543 = %542.0;
    (%543,)
  };
  %544() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_7257() -> (Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) {
  @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */
}

def @func_7463(%var_7461: Tensor[(130), float64]) -> (Tensor[(225), uint8], Tensor[(13, 14, 12), float64], Tensor[(10, 13, 12), bool], Tensor[(130), float64], Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  @func_7460(%var_7461) /* ty=(Tensor[(225), uint8], Tensor[(13, 14, 12), float64], Tensor[(10, 13, 12), bool], Tensor[(130), float64], Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */
}

def @func_5873() -> (Tensor[(15, 4, 14), float32],) {
  %547 = fn () -> (Tensor[(15, 4, 14), float32],) {
    %545 = @func_4482() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_1788(%var_1783: Tensor[(1, 15, 14), uint8], %var_1784: Tensor[(9, 15, 14), uint8], %var_1785: Tensor[(144), int64], %var_1786: Tensor[(130), float64], %var_1787: Tensor[(605), int64]) -> (Tensor[(9, 15, 14), bool], Tensor[(130), float64], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  @func_1781(%var_1783, %var_1784, %var_1785, %var_1786, %var_1787) /* ty=(Tensor[(9, 15, 14), bool], Tensor[(130), float64], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_5932() -> Tensor[(10, 5, 2), float64] {
  %549 = fn () -> Tensor[(10, 5, 2), float64] {
    %548 = @func_5892() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 20), float64]) */;
    %548.1
  };
  %549() /* ty=Tensor[(10, 5, 2), float64] */
}

def @func_6778() -> (Tensor[(15, 4, 14), float64],) {
  @func_6776() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_1413(%var_1405: Tensor[(11, 5, 11), int64], %var_1406: Tensor[(11, 5, 11), int64]) -> Tensor[(11, 5, 11), int64] {
  %550 = cast(%var_1406, dtype="int64") /* ty=Tensor[(11, 5, 11), int64] */;
  %551 = shape_of(%var_1405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_1405, dtype="int64") /* ty=Tensor[(11, 5, 11), int64] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%552, %553) /* ty=Tensor[(11, 5, 11), int64] */
}

def @func_6944(%var_6943: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(15, 4, 14), float64], Tensor[(10, 13, 12), bool], Tensor[(12), float64], Tensor[(135), float64], Tensor[(130), float64], Tensor[(36), float64]) {
  %572 = fn (%var_6916: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64], Tensor[(15, 4, 14), float64], Tensor[(10, 13, 12), bool], Tensor[(12), float64], Tensor[(135), float64], Tensor[(130), float64], Tensor[(36), float64]) {
    %554 = @func_6118() /* ty=(Tensor[(13, 14, 12), float64],) */;
    %555 = %554.0;
    %556 = cast(%var_6916, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %558 = cast(%555, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %560 = cast(meta[relay.Constant][31] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
    %561 = cast(meta[relay.Constant][32] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %562 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %563 = cast(meta[relay.Constant][34] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %564 = reshape(%560, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float64] */;
    %565 = reshape(%561, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %566 = reshape(%562, newshape=[13, 10]) /* ty=Tensor[(13, 10), float64] */;
    %567 = reshape(%563, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), float64] */;
    %568 = @func_2154(%564, %565, %566, %567) /* ty=(Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) */;
    %569 = maximum(%558, %559) /* ty=Tensor[(13, 14, 12), float64] */;
    %570 = @func_6003() /* ty=Tensor[(15, 4, 14), float64] */;
    %571 = %568.2;
    (%569, %570, %571, meta[relay.Constant][31] /* ty=Tensor[(12), float64] */, meta[relay.Constant][32] /* ty=Tensor[(135), float64] */, meta[relay.Constant][33] /* ty=Tensor[(130), float64] */, meta[relay.Constant][34] /* ty=Tensor[(36), float64] */)
  };
  %572(%var_6943) /* ty=(Tensor[(13, 14, 12), float64], Tensor[(15, 4, 14), float64], Tensor[(10, 13, 12), bool], Tensor[(12), float64], Tensor[(135), float64], Tensor[(130), float64], Tensor[(36), float64]) */
}

def @func_2359(%var_2307: Tensor[(11, 2, 6), uint32], %var_2308: Tensor[(11, 2, 6), uint32]) -> (Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %573 = cast(meta[relay.Constant][35] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %574 = cast(meta[relay.Constant][35] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %575 = reshape(%573, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %576 = reshape(%574, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %577 = @func_1850(%575, %576) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %578 = cast(%var_2308, dtype="uint32") /* ty=Tensor[(11, 2, 6), uint32] */;
  %579 = shape_of(%var_2307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%var_2307, dtype="uint32") /* ty=Tensor[(11, 2, 6), uint32] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %582 = bitwise_xor(%580, %581) /* ty=Tensor[(11, 2, 6), uint32] */;
  %583 = cast(%var_2307, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = greater(%585, %586) /* ty=Tensor[(11, 2, 6), bool] */;
  %588 = cast(%587, dtype="int32") /* ty=Tensor[(11, 2, 6), int32] */;
  %589 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%582, dtype="int32") /* ty=Tensor[(11, 2, 6), int32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %592 = cast(meta[relay.Constant][36] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %593 = cast(meta[relay.Constant][36] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %594 = reshape(%592, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %595 = reshape(%593, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %596 = %577.0;
  %597 = add(%590, %591) /* ty=Tensor[(11, 2, 6), int32] */;
  %598 = @func_1413(%594, %595) /* ty=Tensor[(11, 5, 11), int64] */;
  (%596, meta[relay.Constant][35] /* ty=Tensor[(168), float64] */, %597, %598, meta[relay.Constant][36] /* ty=Tensor[(605), int64] */)
}

def @func_7511(%var_7493: Tensor[(1, 528), int64]) -> (Tensor[(15, 4, 14), float32], Tensor[(11, 4, 12), bool], Tensor[(1, 528), int64]) {
  %599 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %600 = cast(%var_7493, dtype="int64") /* ty=Tensor[(1, 528), int64] */;
  %601 = reshape(%600, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %602 = @func_2734(%601) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) */;
  %603 = %599.0;
  %604 = %602.0;
  (%603, %604, %var_7493)
}

def @func_6119() -> (Tensor[(13, 14, 12), float64],) {
  %607 = fn () -> (Tensor[(13, 14, 12), float64],) {
    %605 = @func_6030() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(13, 14, 12), float64], Tensor[(2184), float64]) */;
    %606 = %605.1;
    (%606,)
  };
  %607() /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_5590(%var_5574: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %608 = cast(%var_5574, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %609 = cast(meta[relay.Constant][37] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %610 = cast(meta[relay.Constant][37] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
  %611 = reshape(%609, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %612 = reshape(%610, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %613 = sqrt(%608) /* ty=Tensor[(10, 5, 2), float64] */;
  %614 = @func_1413(%611, %612) /* ty=Tensor[(11, 5, 11), int64] */;
  (%613, %614, meta[relay.Constant][37] /* ty=Tensor[(605), int64] */)
}

def @func_7514(%var_7512: Tensor[(1, 528), int64]) -> (Tensor[(15, 4, 14), float32], Tensor[(11, 4, 12), bool], Tensor[(1, 528), int64]) {
  @func_7511(%var_7512) /* ty=(Tensor[(15, 4, 14), float32], Tensor[(11, 4, 12), bool], Tensor[(1, 528), int64]) */
}

def @func_5736(%var_5678: Tensor[(1, 91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(?, 7, 13), float32], Tensor[(1, 91), float64], Tensor[(15, 4, 14), float32], Tensor[(15, 15, 1), int16], Tensor[(225), uint8], Tensor[(168), float64], Tensor[(105, 2), uint32]) {
  %615 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %616 = cast(%var_5678, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %617 = reshape(%616, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %618 = @func_5165(%617) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
  %619 = cast(%var_5678, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %620 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %621 = cast(meta[relay.Constant][39] /* ty=Tensor[(225), uint8] */, dtype="uint8") /* ty=Tensor[(225), uint8] */;
  %622 = cast(meta[relay.Constant][40] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %623 = reshape(%620, newshape=[]) /* ty=uint8 */;
  %624 = reshape(%621, newshape=[15, 15, 1]) /* ty=Tensor[(15, 15, 1), uint8] */;
  %625 = reshape(%622, newshape=[168]) /* ty=Tensor[(168), float64] */;
  %626 = @func_2671(%623, %624, %625) /* ty=(Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) */;
  %627 = asin(%619) /* ty=Tensor[(1, 91), float64] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(1, 91), float64] */;
  %629 = reshape(%628, newshape=[1, 7, 13]) /* ty=Tensor[(1, 7, 13), float64] */;
  %630 = @func_3511(%629) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 7, 13), float32]) */;
  %631 = %630.1;
  %632 = cast(%631, dtype="uint32") /* ty=Tensor[(105, 2), uint32] */;
  %633 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint32") /* ty=uint32 */;
  %634 = %615.0;
  %635 = %618.1;
  %636 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %637 = %626.0;
  %638 = logical_xor(%632, %633) /* ty=Tensor[(105, 2), uint32] */;
  (%634, %635, %627, %636, %637, meta[relay.Constant][39] /* ty=Tensor[(225), uint8] */, meta[relay.Constant][40] /* ty=Tensor[(168), float64] */, %638)
}

def @func_5862() -> Tensor[(14, 3, 4), float64] {
  @func_5860() /* ty=Tensor[(14, 3, 4), float64] */
}

def @func_8652(%var_8651: Tensor[(91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(11, 5, 11), uint32], Tensor[(11, 5, 11), float32], Tensor[(91), float64], Tensor[(?, 7, 13), int8], Tensor[(14, 3, 4), float64]) {
  %669 = fn (%var_8613: Tensor[(91), float64]) -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(11, 5, 11), uint32], Tensor[(11, 5, 11), float32], Tensor[(91), float64], Tensor[(?, 7, 13), int8], Tensor[(14, 3, 4), float64]) {
    %639 = @func_5463() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %640 = cast(meta[relay.Constant][41] /* ty=Tensor[(605), int64] */, dtype="int64") /* ty=Tensor[(605), int64] */;
    %641 = reshape(%640, newshape=[605]) /* ty=Tensor[(605), int64] */;
    %642 = @func_1634(%641) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
    %643 = %642.4;
    %644 = cast(meta[relay.Constant][41] /* ty=Tensor[(605), int64] */, dtype="uint32") /* ty=Tensor[(605), uint32] */;
    %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%643, dtype="uint32") /* ty=Tensor[(11, 5, 11), uint32] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 5, 11), int64] */, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
    %649 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %650 = cast(%643, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
    %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %652 = cast(%var_8613, dtype="float64") /* ty=Tensor[(91), float64] */;
    %653 = reshape(%652, newshape=[91]) /* ty=Tensor[(91), float64] */;
    %654 = @func_5165(%653) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
    %655 = %654.1;
    %656 = cast(%655, dtype="float32") /* ty=Tensor[(?, 7, 13), float32] */;
    %657 = atanh(%656) /* ty=Tensor[(?, 7, 13), float32] */;
    %658 = cast(%655, dtype="int8") /* ty=Tensor[(?, 7, 13), int8] */;
    %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
    %660 = cast(%657, dtype="int8") /* ty=Tensor[(?, 7, 13), int8] */;
    %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %662 = @func_6874() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) */;
    %663 = %639.0;
    %664 = @func_7962() /* ty=Tensor[(15, 4, 14), float64] */;
    %665 = bitwise_or(%646, %647) /* ty=Tensor[(11, 5, 11), uint32] */;
    %666 = floor_mod(%650, %651) /* ty=Tensor[(11, 5, 11), float32] */;
    %667 = bitwise_and(%660, %661) /* ty=Tensor[(?, 7, 13), int8] */;
    %668 = %662.0;
    (%663, %664, %665, %666, %var_8613, %667, %668)
  };
  %669(%var_8651) /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64], Tensor[(11, 5, 11), uint32], Tensor[(11, 5, 11), float32], Tensor[(91), float64], Tensor[(?, 7, 13), int8], Tensor[(14, 3, 4), float64]) */
}

def @func_3387(%var_3385: uint16, %var_3386: Tensor[(4, 12, 9), uint16]) -> (Tensor[(4, 12, 9), bool],) {
  @func_3383(%var_3385, %var_3386) /* ty=(Tensor[(4, 12, 9), bool],) */
}

def @func_3671(%var_3667: Tensor[(1, 130), float64], %var_3668: Tensor[(144), int64], %var_3669: Tensor[(2184), float64], %var_3670: Tensor[(605), int64]) -> (Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %705 = fn (%var_3620: Tensor[(1, 130), float64], %var_3621: Tensor[(144), int64], %var_3651: Tensor[(2184), float64], %var_3663: Tensor[(605), int64]) -> (Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
    %670 = cast(meta[relay.Constant][43] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %671 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %672 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
    %673 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
    %674 = cast(meta[relay.Constant][45] /* ty=Tensor[(243), float64] */, dtype="float64") /* ty=Tensor[(243), float64] */;
    %675 = reshape(%670, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
    %676 = reshape(%671, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
    %677 = reshape(%672, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
    %678 = reshape(%673, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %679 = reshape(%674, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
    %680 = @func_1490(%675, %676, %677, %678, %679) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
    %681 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
    %682 = cast(%var_3620, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
    %683 = cast(%var_3621, dtype="int64") /* ty=Tensor[(144), int64] */;
    %684 = reshape(%681, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
    %685 = reshape(%682, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %686 = reshape(%683, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
    %687 = @func_909(%684, %685, %686) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
    %688 = cast(%var_3651, dtype="float64") /* ty=Tensor[(2184), float64] */;
    %689 = reshape(%688, newshape=[13, 14, 12]) /* ty=Tensor[(13, 14, 12), float64] */;
    %690 = @func_2852(%689) /* ty=(Tensor[(13, 14, 12), float64],) */;
    %691 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
    %692 = %691.1;
    %693 = cast(%692, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
    %694 = sin(%693) /* ty=Tensor[(15, 4, 14), float64] */;
    %695 = cast(%694, dtype="float32") /* ty=Tensor[(15, 4, 14), float32] */;
    %696 = cast(%var_3663, dtype="int64") /* ty=Tensor[(605), int64] */;
    %697 = cast(%var_3663, dtype="int64") /* ty=Tensor[(605), int64] */;
    %698 = reshape(%696, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
    %699 = reshape(%697, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
    %700 = %680.8;
    %701 = %687.4;
    %702 = %690.0;
    %703 = log10(%695) /* ty=Tensor[(15, 4, 14), float32] */;
    %704 = @func_1413(%698, %699) /* ty=Tensor[(11, 5, 11), int64] */;
    (%700, meta[relay.Constant][43] /* ty=Tensor[(27), float64] */, meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, %var_3620, %var_3621, meta[relay.Constant][45] /* ty=Tensor[(243), float64] */, %701, %702, %var_3651, %703, %704, %var_3663)
  };
  %705(%var_3667, %var_3668, %var_3669, %var_3670) /* ty=(Tensor[(144), int64], Tensor[(27), float64], Tensor[(720), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(10, 13, 12), bool], Tensor[(13, 14, 12), float64], Tensor[(2184), float64], Tensor[(15, 4, 14), float32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_6876() -> (Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) {
  @func_6874() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) */
}

def @func_4828(%var_4826: Tensor[(135), float64], %var_4827: Tensor[(720), float32]) -> (Tensor[(15, 4, 14), float64], Tensor[(10, 9, 8), float32], Tensor[(135), float64], Tensor[(720), float32], Tensor[(130), float64]) {
  %716 = fn (%var_4806: Tensor[(135), float64], %var_4807: Tensor[(720), float32]) -> (Tensor[(15, 4, 14), float64], Tensor[(10, 9, 8), float32], Tensor[(135), float64], Tensor[(720), float32], Tensor[(130), float64]) {
    %706 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %707 = cast(%var_4806, dtype="float64") /* ty=Tensor[(135), float64] */;
    %708 = cast(%var_4807, dtype="float32") /* ty=Tensor[(720), float32] */;
    %709 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %710 = reshape(%707, newshape=[15, 9]) /* ty=Tensor[(15, 9), float64] */;
    %711 = reshape(%708, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %712 = reshape(%709, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %713 = @func_1892(%710, %711, %712) /* ty=(Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) */;
    %714 = %706.0;
    %715 = %713.1;
    (%714, %715, %var_4806, %var_4807, meta[relay.Constant][46] /* ty=Tensor[(130), float64] */)
  };
  %716(%var_4826, %var_4827) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(10, 9, 8), float32], Tensor[(135), float64], Tensor[(720), float32], Tensor[(130), float64]) */
}

def @func_7375(%var_7373: Tensor[(15, 4, 14), float32], %var_7374: Tensor[(360), float64]) -> (Tensor[(15, 4, 14), bool], Tensor[(15, 2, 12), float64], Tensor[(360), float64]) {
  @func_7371(%var_7373, %var_7374) /* ty=(Tensor[(15, 4, 14), bool], Tensor[(15, 2, 12), float64], Tensor[(360), float64]) */
}

def @func_9442() -> (Tensor[(15, 4, 14), float32], Tensor[(225), uint8]) {
  %717 = @func_9222() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float64]) */;
  %718 = @func_7255() /* ty=(Tensor[(225), uint8], Tensor[(15, 4, 14), float64]) */;
  %719 = %717.0;
  %720 = %718.0;
  (%719, %720)
}

def @func_2736(%var_2735: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) {
  %732 = fn (%var_2711: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) {
    %721 = cast(%var_2711, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
    %722 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(11, 4, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %723 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 4, 12), int64] */, dtype="bool") /* ty=Tensor[(11, 4, 12), bool] */;
    %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %725 = cast(meta[relay.Constant][48] /* ty=Tensor[(130, 1), float64] */, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %726 = reshape(%725, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %727 = @func_452(%726) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %728 = cast(meta[relay.Constant][47] /* ty=Tensor[(11, 4, 12), int64] */, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
    %729 = greater_equal(%723, %724) /* ty=Tensor[(11, 4, 12), bool] */;
    %730 = %727.0;
    %731 = log10(%728) /* ty=Tensor[(11, 4, 12), float64] */;
    (%729, %730, meta[relay.Constant][48] /* ty=Tensor[(130, 1), float64] */, %731)
  };
  %732(%var_2735) /* ty=(Tensor[(11, 4, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(130, 1), float64], Tensor[(11, 4, 12), float64]) */
}

def @func_4872() -> (Tensor[(15, 4, 14), float64],) {
  %735 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %733 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %734 = %733.0;
    (%734,)
  };
  %735() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_6776() -> (Tensor[(15, 4, 14), float64],) {
  %736 = @func_5785() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %737 = %736.0;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %739 = atan(%738) /* ty=Tensor[(15, 4, 14), float64] */;
  (%739,)
}

def @func_4776() -> (Tensor[(15, 4, 14), float64],) {
  %742 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %740 = @func_4621() /* ty=(Tensor[(15, 4, 14), float64],) */;
    %741 = %740.0;
    (%741,)
  };
  %742() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_8766() -> (Tensor[(14, 3, 4), float64],) {
  %743 = @func_3840() /* ty=Tensor[(14, 3, 4), float64] */;
  (%743,)
}

def @func_6179(%var_6177: Tensor[(4, 7, 7), float64], %var_6178: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) {
  %767 = fn (%var_6122: Tensor[(4, 7, 7), float64], %var_6123: Tensor[(4, 7, 7), float64]) -> (Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) {
    %744 = cast(%var_6123, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %745 = shape_of(%var_6122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%var_6122, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %748 = floor_mod(%746, %747) /* ty=Tensor[(4, 7, 7), float64] */;
    %749 = cast(%748, dtype="int64") /* ty=Tensor[(4, 7, 7), int64] */;
    %750 = shape_of(%var_6123, dtype="int32") /* ty=Tensor[(3), int32] */;
    %751 = cast(%var_6123, dtype="int64") /* ty=Tensor[(4, 7, 7), int64] */;
    %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %753 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 168), float64] */, dtype="float64") /* ty=Tensor[(1, 168), float64] */;
    %754 = reshape(%753, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
    %755 = @func_4111(%754) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
    %756 = cast(%748, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %757 = exp(%756) /* ty=Tensor[(4, 7, 7), float64] */;
    %758 = cast(%757, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    %759 = cast(%748, dtype="uint32") /* ty=Tensor[(4, 7, 7), uint32] */;
    %760 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %761 = cast(%757, dtype="uint32") /* ty=Tensor[(4, 7, 7), uint32] */;
    %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %763 = left_shift(%751, %752) /* ty=Tensor[(4, 7, 7), int64] */;
    %764 = %755.3;
    %765 = erf(%758) /* ty=Tensor[(4, 7, 7), float64] */;
    %766 = add(%761, %762) /* ty=Tensor[(4, 7, 7), uint32] */;
    (%763, %764, meta[relay.Constant][49] /* ty=Tensor[(1, 168), float64] */, %765, %766)
  };
  %767(%var_6177, %var_6178) /* ty=(Tensor[(4, 7, 7), int64], Tensor[(14, 3, 4), int32], Tensor[(1, 168), float64], Tensor[(4, 7, 7), float64], Tensor[(4, 7, 7), uint32]) */
}

def @func_3566() -> (Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) {
  %774 = fn () -> (Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) {
    %768 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 7, 16), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 16), float32] */;
    %769 = cast(meta[relay.Constant][51] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %770 = reshape(%769, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), float32] */;
    %771 = @func_1963(%770) /* ty=(Tensor[(15, 4, 14), float32],) */;
    %772 = rsqrt(%768) /* ty=Tensor[(16, 7, 16), float32] */;
    %773 = %771.0;
    (%772, %773, meta[relay.Constant][51] /* ty=Tensor[(840), float32] */)
  };
  %774() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */
}

def @func_5260(%var_5259: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %776 = fn (%var_5252: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
    %775 = cast(%var_5252, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
    log2(%775) /* ty=Tensor[(13, 5, 14), float64] */
  };
  %776(%var_5259) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_8365() -> (Tensor[(15, 4, 14), float64],) {
  %778 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %777 = @func_7962() /* ty=Tensor[(15, 4, 14), float64] */;
    (%777,)
  };
  %778() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_2671(%var_2628: uint8, %var_2629: Tensor[(15, 15, 1), uint8], %var_2657: Tensor[(168), float64]) -> (Tensor[(15, 15, 1), int16], Tensor[(14, 3, 4), float64], Tensor[(168), float64]) {
  %779 = cast(%var_2628, dtype="uint8") /* ty=uint8 */;
  %780 = cast(%var_2629, dtype="uint8") /* ty=Tensor[(15, 15, 1), uint8] */;
  %781 = maximum(%779, %780) /* ty=Tensor[(15, 15, 1), uint8] */;
  %782 = cast(%var_2628, dtype="int16") /* ty=int16 */;
  %783 = cast(%781, dtype="int16") /* ty=Tensor[(15, 15, 1), int16] */;
  %784 = cast(%var_2657, dtype="float64") /* ty=Tensor[(168), float64] */;
  %785 = cast(%var_2657, dtype="float64") /* ty=Tensor[(168), float64] */;
  %786 = reshape(%784, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %787 = reshape(%785, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %788 = @func_1850(%786, %787) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %789 = left_shift(%782, %783) /* ty=Tensor[(15, 15, 1), int16] */;
  %790 = %788.0;
  (%789, %790, %var_2657)
}

def @func_4684(%var_4683: Tensor[(12, 13, 3), float32]) -> Tensor[(12, 13, 3), float32] {
  %792 = fn (%var_4679: Tensor[(12, 13, 3), float32]) -> Tensor[(12, 13, 3), float32] {
    %791 = cast(%var_4679, dtype="float32") /* ty=Tensor[(12, 13, 3), float32] */;
    log(%791) /* ty=Tensor[(12, 13, 3), float32] */
  };
  %792(%var_4683) /* ty=Tensor[(12, 13, 3), float32] */
}

def @func_6448() -> (Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) {
  @func_6446() /* ty=(Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) */
}

def @func_9402() -> Tensor[(15, 4, 14), float64] {
  @func_9400() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_7573() -> (Tensor[(360, 2), float32],) {
  %795 = fn () -> (Tensor[(360, 2), float32],) {
    %793 = @func_6563() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(15, 4, 14), float64], Tensor[(360, 2), float32], Tensor[(132), uint32]) */;
    %794 = %793.2;
    (%794,)
  };
  %795() /* ty=(Tensor[(360, 2), float32],) */
}

def @func_5449(%var_5447: Tensor[(720), float32], %var_5448: Tensor[(132), uint32]) -> (Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) {
  @func_5445(%var_5447, %var_5448) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) */
}

def @func_9090(%var_9088: Tensor[(9, 16, 12), float32]) -> Tensor[(9, 16, 12), bool] {
  @func_9087(%var_9088) /* ty=Tensor[(9, 16, 12), bool] */
}

def @func_6874() -> (Tensor[(14, 3, 4), float64], Tensor[(11, 2, 6), int32], Tensor[(33, 4), uint32]) {
  %796 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
  %797 = cast(meta[relay.Constant][52] /* ty=Tensor[(33, 4), uint32] */, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
  %798 = cast(meta[relay.Constant][52] /* ty=Tensor[(33, 4), uint32] */, dtype="uint32") /* ty=Tensor[(33, 4), uint32] */;
  %799 = reshape(%797, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %800 = reshape(%798, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %801 = @func_2359(%799, %800) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %802 = %796.1;
  %803 = %801.2;
  (%802, %803, meta[relay.Constant][52] /* ty=Tensor[(33, 4), uint32] */)
}

def @func_6311(%var_6239: Tensor[(9, 1, 5), uint32], %var_6278: Tensor[(720), float32], %var_6279: Tensor[(26, 5), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(91), float64], Tensor[(15, 4, 14), float32], Tensor[(55, 11), float32], Tensor[(27), float64], Tensor[(720), float32], Tensor[(26, 5), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(9, ?, 5), uint64], Tensor[(9, ?, 5), bool]) {
  %804 = cast(meta[relay.Constant][53] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %805 = reshape(%804, newshape=[91]) /* ty=Tensor[(91), float64] */;
  %806 = @func_5165(%805) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(?, 7, 13), float32], Tensor[(91), float64]) */;
  %807 = @func_5872() /* ty=(Tensor[(15, 4, 14), float32],) */;
  %808 = cast(meta[relay.Constant][54] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %809 = cast(%var_6278, dtype="float32") /* ty=Tensor[(720), float32] */;
  %810 = cast(%var_6279, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %811 = cast(meta[relay.Constant][55] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %812 = cast(meta[relay.Constant][56] /* ty=Tensor[(243), float64] */, dtype="float64") /* ty=Tensor[(243), float64] */;
  %813 = reshape(%808, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
  %814 = reshape(%809, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %815 = reshape(%810, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %816 = reshape(%811, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %817 = reshape(%812, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
  %818 = @func_1490(%813, %814, %815, %816, %817) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
  %819 = cast(meta[relay.Constant][57] /* ty=Tensor[(9, 1, 5), uint32] */, dtype="uint32") /* ty=Tensor[(9, 1, 5), uint32] */;
  %820 = shape_of(%var_6239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_6239, dtype="uint32") /* ty=Tensor[(9, 1, 5), uint32] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %823 = bitwise_xor(%821, %822) /* ty=Tensor[(9, ?, 5), uint32] */;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(9, ?, 5), float64] */;
  %825 = exp(%824) /* ty=Tensor[(9, ?, 5), float64] */;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %827 = sinh(%826) /* ty=Tensor[(9, ?, 5), float32] */;
  %828 = cast(%823, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="float32") /* ty=Tensor[(9, ?, 5), float32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %832 = mod(%830, %831) /* ty=Tensor[(9, ?, 5), float32] */;
  %833 = cast(%827, dtype="uint64") /* ty=Tensor[(9, ?, 5), uint64] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="uint64") /* ty=Tensor[(9, ?, 5), uint64] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %837 = cast(%823, dtype="bool") /* ty=Tensor[(9, ?, 5), bool] */;
  %838 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%832, dtype="bool") /* ty=Tensor[(9, ?, 5), bool] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %841 = %806.0;
  %842 = %807.0;
  %843 = %818.4;
  %844 = bitwise_and(%835, %836) /* ty=Tensor[(9, ?, 5), uint64] */;
  %845 = not_equal(%839, %840) /* ty=Tensor[(9, ?, 5), bool] */;
  (%841, meta[relay.Constant][53] /* ty=Tensor[(91), float64] */, %842, %843, meta[relay.Constant][54] /* ty=Tensor[(27), float64] */, %var_6278, %var_6279, meta[relay.Constant][55] /* ty=Tensor[(144), int64] */, meta[relay.Constant][56] /* ty=Tensor[(243), float64] */, %844, %845)
}

def @func_8883(%var_8882: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float64],) {
  %853 = fn (%var_8867: Tensor[(15, 4, 14), float32]) -> (Tensor[(15, 4, 14), float64],) {
    %846 = @func_5376() /* ty=(Tensor[(15, 4, 14), float32],) */;
    %847 = %846.0;
    %848 = cast(%var_8867, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
    %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%847, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %852 = mod(%850, %851) /* ty=Tensor[(15, 4, 14), float64] */;
    (%852,)
  };
  %853(%var_8882) /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_7161(%var_7159: Tensor[(168, 1), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), int32], Tensor[(168, 1), float64]) {
  %854 = @func_4871() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %855 = cast(%var_7159, dtype="float64") /* ty=Tensor[(168, 1), float64] */;
  %856 = reshape(%855, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %857 = @func_4111(%856) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
  %858 = %854.0;
  %859 = %857.3;
  (%858, %859, %var_7159)
}

def @func_5245(%var_5243: Tensor[(91, 1), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(4, 180), float64], Tensor[(?, 7, 13), float32], Tensor[(91, 1), float64]) {
  @func_5242(%var_5243) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(4, 180), float64], Tensor[(?, 7, 13), float32], Tensor[(91, 1), float64]) */
}

def @func_8786() -> (Tensor[(15, 4, 14), float64],) {
  %862 = fn () -> (Tensor[(15, 4, 14), float64],) {
    %860 = @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */;
    %861 = %860.2;
    (%861,)
  };
  %862() /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_7371(%var_7337: Tensor[(15, 4, 14), float32], %var_7355: Tensor[(360), float64]) -> (Tensor[(15, 4, 14), bool], Tensor[(15, 2, 12), float64], Tensor[(360), float64]) {
  %863 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %864 = cast(%var_7337, dtype="bool") /* ty=Tensor[(15, 4, 14), bool] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="bool") /* ty=Tensor[(15, 4, 14), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %868 = cast(%var_7355, dtype="float64") /* ty=Tensor[(360), float64] */;
  %869 = reshape(%868, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
  %870 = equal(%866, %867) /* ty=Tensor[(15, 4, 14), bool] */;
  %871 = @func_2557(%869) /* ty=Tensor[(15, 2, 12), float64] */;
  (%870, %871, %var_7355)
}

def @func_2854(%var_2853: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64],) {
  %874 = fn (%var_2849: Tensor[(13, 14, 12), float64]) -> (Tensor[(13, 14, 12), float64],) {
    %872 = cast(%var_2849, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
    %873 = sigmoid(%872) /* ty=Tensor[(13, 14, 12), float64] */;
    (%873,)
  };
  %874(%var_2853) /* ty=(Tensor[(13, 14, 12), float64],) */
}

def @func_6316(%var_6313: Tensor[(9, 1, 5), uint32], %var_6314: Tensor[(720), float32], %var_6315: Tensor[(26, 5), float64]) -> (Tensor[(14, 3, 4), float64], Tensor[(91), float64], Tensor[(15, 4, 14), float32], Tensor[(55, 11), float32], Tensor[(27), float64], Tensor[(720), float32], Tensor[(26, 5), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(9, ?, 5), uint64], Tensor[(9, ?, 5), bool]) {
  @func_6311(%var_6313, %var_6314, %var_6315) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(91), float64], Tensor[(15, 4, 14), float32], Tensor[(55, 11), float32], Tensor[(27), float64], Tensor[(720), float32], Tensor[(26, 5), float64], Tensor[(144), int64], Tensor[(243), float64], Tensor[(9, ?, 5), uint64], Tensor[(9, ?, 5), bool]) */
}

def @func_2154(%var_2120: Tensor[(1, 3, 4), float64], %var_2141: Tensor[(3, 45), float64], %var_2142: Tensor[(13, 10), float64], %var_2148: Tensor[(3, 3, 4), float64]) -> (Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) {
  %875 = cast(meta[relay.Constant][58] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %876 = reshape(%875, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %877 = cast(%var_2141, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %878 = cast(meta[relay.Constant][58] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %879 = cast(%var_2142, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %880 = reshape(%877, newshape=[15, 9]) /* ty=Tensor[(15, 9), float64] */;
  %881 = reshape(%878, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %882 = reshape(%879, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %883 = @func_1892(%880, %881, %882) /* ty=(Tensor[(15, 9), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(130), float64]) */;
  %884 = cast(%var_2120, dtype="float64") /* ty=Tensor[(1, 3, 4), float64] */;
  %885 = sin(%884) /* ty=Tensor[(1, 3, 4), float64] */;
  %886 = cast(%885, dtype="uint8") /* ty=Tensor[(1, 3, 4), uint8] */;
  %887 = cast(%var_2148, dtype="uint8") /* ty=Tensor[(3, 3, 4), uint8] */;
  %888 = @func_1145(%876) /* ty=Tensor[(10, 9, 8), float32] */;
  %889 = %883.3;
  %890 = bitwise_and(%886, %887) /* ty=Tensor[(3, 3, 4), uint8] */;
  (%888, meta[relay.Constant][58] /* ty=Tensor[(720), float32] */, %889, %var_2141, %var_2142, %890)
}

def @func_6699() -> (Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], Tensor[(13, 5, 14), float64], Tensor[(910, 1), float64]) {
  @func_6697() /* ty=(Tensor[(15, 4, 14), float32], Tensor[(15, 4, 14), float32], Tensor[(13, 5, 14), float64], Tensor[(910, 1), float64]) */
}

def @func_1634(%var_1632: Tensor[(605), int64]) -> (Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  %891 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 11, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 11, 10), float32] */;
  %892 = cast(meta[relay.Constant][60] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %893 = cast(meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %894 = cast(meta[relay.Constant][60] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %895 = reshape(%892, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %896 = reshape(%893, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %897 = reshape(%894, newshape=[6, 6, 4]) /* ty=Tensor[(6, 6, 4), int64] */;
  %898 = @func_909(%895, %896, %897) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */;
  %899 = cast(%var_1632, dtype="int64") /* ty=Tensor[(605), int64] */;
  %900 = cast(%var_1632, dtype="int64") /* ty=Tensor[(605), int64] */;
  %901 = reshape(%899, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %902 = reshape(%900, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), int64] */;
  %903 = asin(%891) /* ty=Tensor[(9, 11, 10), float32] */;
  %904 = %898.3;
  %905 = @func_1413(%901, %902) /* ty=Tensor[(11, 5, 11), int64] */;
  (%903, %904, meta[relay.Constant][60] /* ty=Tensor[(144), int64] */, meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, %905, %var_1632)
}

def @func_9165() -> (Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) {
  @func_9163() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(5, 5, 10), float64], Tensor[(250), float64]) */
}

def @func_5565() -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) {
  @func_5563() /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), float64]) */
}

def @func_1854(%var_1852: Tensor[(14, 3, 4), float64], %var_1853: Tensor[(14, 3, 4), float64]) -> (Tensor[(14, 3, 4), float64],) {
  @func_1850(%var_1852, %var_1853) /* ty=(Tensor[(14, 3, 4), float64],) */
}

def @func_913(%var_910: Tensor[(6, 6, 4), int64], %var_911: Tensor[(130), float64], %var_912: Tensor[(6, 6, 4), int64]) -> (Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) {
  %943 = fn (%var_858: Tensor[(6, 6, 4), int64], %var_868: Tensor[(130), float64], %var_885: Tensor[(6, 6, 4), int64]) -> (Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) {
    %906 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
    %907 = reshape(%906, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %908 = @func_452(%907) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %909 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
    %910 = reshape(%909, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %911 = @func_452(%910) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %912 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 4), int64] */, dtype="int64") /* ty=Tensor[(6, 6, 4), int64] */;
    %913 = shape_of(%var_858, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(%var_858, dtype="int64") /* ty=Tensor[(6, 6, 4), int64] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %916 = logical_xor(%914, %915) /* ty=Tensor[(6, 6, 4), int64] */;
    %917 = cast(%var_885, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
    %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(3), int32] */;
    %919 = cast(%916, dtype="uint8") /* ty=Tensor[(6, 6, 4), uint8] */;
    %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %921 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
    %922 = reshape(%921, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %923 = @func_452(%922) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %924 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
    %925 = reshape(%924, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %926 = @func_452(%925) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %927 = cast(meta[relay.Constant][62] /* ty=Tensor[(6, 6, 4), int64] */, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
    %928 = shape_of(%var_885, dtype="int32") /* ty=Tensor[(3), int32] */;
    %929 = cast(%var_885, dtype="float32") /* ty=Tensor[(6, 6, 4), float32] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %931 = cast(%var_868, dtype="float64") /* ty=Tensor[(130), float64] */;
    %932 = reshape(%931, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %933 = @func_452(%932) /* ty=(Tensor[(10, 13, 12), bool],) */;
    %934 = %933.0;
    %935 = cast(%934, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
    %936 = %908.0;
    %937 = %911.0;
    %938 = minimum(%919, %920) /* ty=Tensor[(6, 6, 4), uint8] */;
    %939 = %923.0;
    %940 = %926.0;
    %941 = mod(%929, %930) /* ty=Tensor[(6, 6, 4), float32] */;
    %942 = rsqrt(%935) /* ty=Tensor[(10, 13, 12), float32] */;
    (%var_868, %936, %937, %938, %939, %940, %941, %942)
  };
  %943(%var_910, %var_911, %var_912) /* ty=(Tensor[(130), float64], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), uint8], Tensor[(10, 13, 12), bool], Tensor[(10, 13, 12), bool], Tensor[(6, 6, 4), float32], Tensor[(10, 13, 12), float32]) */
}

def @func_7539() -> Tensor[(14, 3, 4), float64] {
  @func_7537() /* ty=Tensor[(14, 3, 4), float64] */
}

def @func_1637(%var_1635: Tensor[(605), int64]) -> (Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  @func_1634(%var_1635) /* ty=(Tensor[(9, 11, 10), float32], Tensor[(6, 6, 4), uint8], Tensor[(144), int64], Tensor[(130), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_5081() -> (Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) {
  @func_5079() /* ty=(Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) */
}

def @func_5445(%var_5410: Tensor[(720), float32], %var_5421: Tensor[(132), uint32]) -> (Tensor[(15, 4, 14), float64], Tensor[(720), float32], Tensor[(11, 5, 11), int64], Tensor[(132), uint32], Tensor[(10, 9, 8), float32], Tensor[(15, 4, 14), float64]) {
  %944 = @func_4775() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %945 = cast(%var_5421, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %946 = cast(%var_5421, dtype="uint32") /* ty=Tensor[(132), uint32] */;
  %947 = reshape(%945, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %948 = reshape(%946, newshape=[11, 2, 6]) /* ty=Tensor[(11, 2, 6), uint32] */;
  %949 = @func_2359(%947, %948) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(168), float64], Tensor[(11, 2, 6), int32], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */;
  %950 = cast(%var_5410, dtype="float32") /* ty=Tensor[(720), float32] */;
  %951 = reshape(%950, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %952 = @func_1145(%951) /* ty=Tensor[(10, 9, 8), float32] */;
  %953 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 9, 8), float32] */, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="bool") /* ty=Tensor[(10, 9, 8), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = greater(%955, %956) /* ty=Tensor[(10, 9, 8), bool] */;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %959 = @func_4395() /* ty=(Tensor[(15, 4, 14), float64],) */;
  %960 = %944.0;
  %961 = %949.3;
  %962 = acos(%958) /* ty=Tensor[(10, 9, 8), float32] */;
  %963 = %959.0;
  (%960, %var_5410, %961, %var_5421, %962, %963)
}

def @func_5663() -> (Tensor[(6, 2, 13), bool],) {
  %966 = fn () -> (Tensor[(6, 2, 13), bool],) {
    %964 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
    %965 = %964.0;
    (%965,)
  };
  %966() /* ty=(Tensor[(6, 2, 13), bool],) */
}

def @func_5079() -> (Tensor[(14, 3, 4), float64], Tensor[(3, 56), float64], Tensor[(15, 4, 14), float64]) {
  %967 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 56), float64] */, dtype="float64") /* ty=Tensor[(3, 56), float64] */;
  %968 = cast(meta[relay.Constant][64] /* ty=Tensor[(3, 56), float64] */, dtype="float64") /* ty=Tensor[(3, 56), float64] */;
  %969 = reshape(%967, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %970 = reshape(%968, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
  %971 = @func_1850(%969, %970) /* ty=(Tensor[(14, 3, 4), float64],) */;
  %972 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
  %973 = cast(%972, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %974 = %971.0;
  %975 = erf(%973) /* ty=Tensor[(15, 4, 14), float64] */;
  (%974, meta[relay.Constant][64] /* ty=Tensor[(3, 56), float64] */, %975)
}

def @func_7278(%var_7258: Tensor[(11, 16, 8), float32], %var_7272: Tensor[(180, 4), float32], %var_7273: Tensor[(1, 130), float64], %var_7275: Tensor[(243), float64]) -> (Tensor[(11, 16, 8), float32], Tensor[(10, 9, 8), float32], Tensor[(1, 27), float64], Tensor[(180, 4), float32], Tensor[(1, 130), float64], Tensor[(144), int64], Tensor[(243), float64]) {
  %976 = cast(%var_7258, dtype="float32") /* ty=Tensor[(11, 16, 8), float32] */;
  %977 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 27), float64] */, dtype="float64") /* ty=Tensor[(1, 27), float64] */;
  %978 = cast(%var_7272, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
  %979 = cast(%var_7273, dtype="float64") /* ty=Tensor[(1, 130), float64] */;
  %980 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %981 = cast(%var_7275, dtype="float64") /* ty=Tensor[(243), float64] */;
  %982 = reshape(%977, newshape=[9, 1, 3]) /* ty=Tensor[(9, 1, 3), float64] */;
  %983 = reshape(%978, newshape=[4, 180]) /* ty=Tensor[(4, 180), float32] */;
  %984 = reshape(%979, newshape=[26, 5]) /* ty=Tensor[(26, 5), float64] */;
  %985 = reshape(%980, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %986 = reshape(%981, newshape=[9, 9, 3]) /* ty=Tensor[(9, 9, 3), float64] */;
  %987 = @func_1490(%982, %983, %984, %985, %986) /* ty=(Tensor[(9, 1, 3), float64], Tensor[(11, 5, 11), bool], Tensor[(10, 9, 8), float32], Tensor[(4, 180), float32], Tensor[(55, 11), float32], Tensor[(10, 13, 12), bool], Tensor[(26, 5), float64], Tensor[(10, 13, 12), bool], Tensor[(144), int64], Tensor[(9, 9, 3), bool]) */;
  %988 = log2(%976) /* ty=Tensor[(11, 16, 8), float32] */;
  %989 = %987.2;
  (%988, %989, meta[relay.Constant][65] /* ty=Tensor[(1, 27), float64] */, %var_7272, %var_7273, meta[relay.Constant][66] /* ty=Tensor[(144), int64] */, %var_7275)
}

def @func_4271(%var_4269: Tensor[(6, 60), float64], %var_4270: Tensor[(720), float32]) -> (Tensor[(14, 3, 4), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(15, 2, 12), float64], Tensor[(6, 60), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32]) {
  %1009 = fn (%var_4251: Tensor[(6, 60), float64], %var_4259: Tensor[(720), float32]) -> (Tensor[(14, 3, 4), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(15, 2, 12), float64], Tensor[(6, 60), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32]) {
    %990 = @func_3785() /* ty=(Tensor[(6, 2, 13), bool], Tensor[(14, 3, 4), float64], Tensor[(42, 4), float64]) */;
    %991 = cast(meta[relay.Constant][67] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %992 = cast(meta[relay.Constant][67] /* ty=Tensor[(1728), float32] */, dtype="float32") /* ty=Tensor[(1728), float32] */;
    %993 = reshape(%991, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
    %994 = reshape(%992, newshape=[9, 16, 12]) /* ty=Tensor[(9, 16, 12), float32] */;
    %995 = @func_2883(%993, %994) /* ty=(Tensor[(9, 16, 12), float32],) */;
    %996 = %990.1;
    %997 = cast(%996, dtype="float64") /* ty=Tensor[(14, 3, 4), float64] */;
    %998 = reshape(%997, newshape=[14, 3, 4]) /* ty=Tensor[(14, 3, 4), float64] */;
    %999 = @func_4111(%998) /* ty=(Tensor[(4, 180), float64], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(14, 3, 4), int32]) */;
    %1000 = cast(%var_4251, dtype="float64") /* ty=Tensor[(6, 60), float64] */;
    %1001 = reshape(%1000, newshape=[15, 2, 12]) /* ty=Tensor[(15, 2, 12), float64] */;
    %1002 = cast(%var_4259, dtype="float32") /* ty=Tensor[(720), float32] */;
    %1003 = reshape(%1002, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
    %1004 = %995.0;
    %1005 = @func_4206() /* ty=Tensor[(15, 4, 14), float32] */;
    %1006 = %999.2;
    %1007 = @func_2557(%1001) /* ty=Tensor[(15, 2, 12), float64] */;
    %1008 = @func_1145(%1003) /* ty=Tensor[(10, 9, 8), float32] */;
    (%996, %1004, meta[relay.Constant][67] /* ty=Tensor[(1728), float32] */, %1005, %1006, %1007, %var_4251, %1008, %var_4259)
  };
  %1009(%var_4269, %var_4270) /* ty=(Tensor[(14, 3, 4), float64], Tensor[(9, 16, 12), float32], Tensor[(1728), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32], Tensor[(15, 2, 12), float64], Tensor[(6, 60), float64], Tensor[(10, 9, 8), float32], Tensor[(720), float32]) */
}

def @func_4395() -> (Tensor[(15, 4, 14), float64],) {
  %1010 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
  %1011 = %1010.1;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %1013 = acosh(%1012) /* ty=Tensor[(15, 4, 14), float64] */;
  (%1013,)
}

def @func_7964() -> Tensor[(15, 4, 14), float64] {
  @func_7962() /* ty=Tensor[(15, 4, 14), float64] */
}

def @func_2160(%var_2156: Tensor[(1, 3, 4), float64], %var_2157: Tensor[(3, 45), float64], %var_2158: Tensor[(13, 10), float64], %var_2159: Tensor[(3, 3, 4), float64]) -> (Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) {
  @func_2154(%var_2156, %var_2157, %var_2158, %var_2159) /* ty=(Tensor[(10, 9, 8), float32], Tensor[(720), float32], Tensor[(10, 13, 12), bool], Tensor[(3, 45), float64], Tensor[(13, 10), float64], Tensor[(3, 3, 4), uint8]) */
}

def @func_7164(%var_7162: Tensor[(168, 1), float64]) -> (Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), int32], Tensor[(168, 1), float64]) {
  @func_7161(%var_7162) /* ty=(Tensor[(15, 4, 14), float64], Tensor[(14, 3, 4), int32], Tensor[(168, 1), float64]) */
}

def @func_5593(%var_5591: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) {
  @func_5590(%var_5591) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 5, 11), int64], Tensor[(605), int64]) */
}

def @func_8965(%var_8963: Tensor[(5, 20), float64]) -> (Tensor[(5, 20), uint64], Tensor[(5, 20), uint64]) {
  @func_8962(%var_8963) /* ty=(Tensor[(5, 20), uint64], Tensor[(5, 20), uint64]) */
}

def @func_5377() -> (Tensor[(15, 4, 14), float32],) {
  %1016 = fn () -> (Tensor[(15, 4, 14), float32],) {
    %1014 = @func_3565() /* ty=(Tensor[(16, 7, 16), float32], Tensor[(15, 4, 14), float32], Tensor[(840), float32]) */;
    %1015 = %1014.1;
    (%1015,)
  };
  %1016() /* ty=(Tensor[(15, 4, 14), float32],) */
}

def @func_6446() -> (Tensor[(10, 5, 2), float64], Tensor[(10, 5, 2), float64]) {
  %1017 = @func_5931() /* ty=Tensor[(10, 5, 2), float64] */;
  %1018 = @func_5931() /* ty=Tensor[(10, 5, 2), float64] */;
  (%1017, %1018)
}

def @func_7584() -> Tensor[(15, 4, 14), float32] {
  @func_7582() /* ty=Tensor[(15, 4, 14), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_18030() -> (Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64]) {
  %0 = @func_16815() /* ty=Tensor[(5, 13, 9), float64] */;
  %1 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
  (%0, %1)
}

def @func_13920() -> (Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %3 = reshape(%2, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %4 = @func_9604(%3) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %5 = @func_11970() /* ty=Tensor[(6), float32] */;
  %6 = %4.3;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(40), int64] */)
}

def @func_23502() -> (Tensor[(5, 14, 8), float64],) {
  %7 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %8 = %7.1;
  (%8,)
}

def @func_10839() -> (Tensor[(5, 14, 8), float64],) {
  %9 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %10 = %9.0;
  (%10,)
}

def @func_919(%var_912: Tensor[(14, 3, 16), uint8], %var_917: Tensor[(3, 2), float32]) -> (Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) {
  %11 = cast(%var_912, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %12 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 16), uint8] */, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %15 = cast(%var_917, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
  %16 = reshape(%15, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %17 = greater(%13, %14) /* ty=Tensor[(14, 3, 16), bool] */;
  %18 = @func_319(%16) /* ty=Tensor[(1, 1, 6), float32] */;
  (%17, %18, %var_917)
}

def @func_7860(%var_7839: Tensor[(672), uint8], %var_7848: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(3, 2), float32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
  %19 = cast(%var_7839, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
  %21 = reshape(%19, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %22 = reshape(%20, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %23 = @func_919(%21, %22) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %24 = cast(%var_7848, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %25 = cast(%var_7848, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %26 = reshape(%24, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %27 = reshape(%25, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %30 = reshape(%28, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %31 = reshape(%29, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %32 = @func_2693(%30, %31) /* ty=(Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) */;
  %33 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %34 = %23.0;
  %35 = @func_7174(%26, %27) /* ty=Tensor[(12, 10, 9), int8] */;
  %36 = %32.1;
  (%33, %34, %var_7839, meta[relay.Constant][2] /* ty=Tensor[(3, 2), float32] */, %35, %var_7848, %36, meta[relay.Constant][3] /* ty=Tensor[(624), float32] */)
}

def @func_13028(%var_13016: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) {
  %37 = cast(%var_13016, dtype="int64") /* ty=Tensor[(40), int64] */;
  %38 = reshape(%37, newshape=[2, 20]) /* ty=Tensor[(2, 20), int64] */;
  %39 = @func_8950(%38) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) */;
  %40 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %41 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %42 = @func_9974() /* ty=Tensor[(6), float32] */;
  %43 = @func_9840() /* ty=Tensor[(6), float32] */;
  %44 = %39.2;
  %45 = %40.4;
  (%41, %42, %43, %44, %var_13016, %45)
}

def @func_21631() -> (Tensor[(5, 14, 8), float64],) {
  %46 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %47 = %46.0;
  (%47,)
}

def @func_14662() -> (Tensor[(5, 14, 8), float64],) {
  %48 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
  %49 = %48.0;
  (%49,)
}

def @func_24166() -> (Tensor[(8, 2, 16), float32], Tensor[(5, 14, 8), float64]) {
  %50 = @func_22144() /* ty=(Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) */;
  %51 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %52 = %50.0;
  %53 = %51.2;
  (%52, %53)
}

def @func_15302() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_2693(%var_2666: Tensor[(13, 12, 4), float32], %var_2687: Tensor[(13, 12, 4), float32]) -> (Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) {
  %54 = cast(%var_2666, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
  %55 = acos(%54) /* ty=Tensor[(13, 12, 4), float32] */;
  %56 = cast(%55, dtype="uint32") /* ty=Tensor[(13, 12, 4), uint32] */;
  %57 = shape_of(%var_2666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%var_2666, dtype="uint32") /* ty=Tensor[(13, 12, 4), uint32] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %60 = cast(%var_2687, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
  %61 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%55, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %64 = maximum(%58, %59) /* ty=Tensor[(13, 12, 4), uint32] */;
  %65 = power(%62, %63) /* ty=Tensor[(13, 12, 4), float32] */;
  (%64, %65)
}

def @func_9889() -> (Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) {
  %66 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %68 = reshape(%67, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %69 = @func_8115(%68) /* ty=(Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) */;
  %70 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %71 = %66.2;
  %72 = %69.2;
  %73 = %70.1;
  (%71, %72, meta[relay.Constant][4] /* ty=Tensor[(1080), int8] */, %73)
}

def @func_15278(%var_15272: Tensor[(11, 13, 2), float64]) -> Tensor[(11, 13, 2), float64] {
  %74 = cast(%var_15272, dtype="float64") /* ty=Tensor[(11, 13, 2), float64] */;
  asin(%74) /* ty=Tensor[(11, 13, 2), float64] */
}

def @func_23149(%var_23118: Tensor[(9, 8, 7), int16], %var_23119: Tensor[(9, 8, 7), int16]) -> Tensor[(9, 8, 7), bool] {
  %75 = cast(%var_23119, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  %76 = shape_of(%var_23118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_23118, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%77, %78) /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_13836(%var_13742: Tensor[(5, 14, 8), float64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(23400), int64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
  %79 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %80 = %79.0;
  %81 = cast(%var_13742, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%80, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %85 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %86 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %87 = @func_10607() /* ty=Tensor[(6), float32] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(6), float32] */;
  %89 = reshape(%88, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %90 = @func_7344(%89) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %91 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %92 = @func_13443() /* ty=(Tensor[(6), float32],) */;
  %93 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %94 = mod(%83, %84) /* ty=Tensor[(5, 14, 8), float32] */;
  %95 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
  %96 = %85.6;
  %97 = %86.0;
  %98 = %90.5;
  %99 = %91.0;
  %100 = %92.0;
  %101 = %93.1;
  (%87, %94, %95, %96, %97, %98, %99, %100, %101)
}

def @func_7748() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %102 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %104 = reshape(%103, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %105 = @func_7344(%104) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %106 = %102.1;
  %107 = %105.3;
  (%106, %107, meta[relay.Constant][5] /* ty=Tensor[(6), float32] */)
}

def @func_12441() -> Tensor[(5, 14, 8), float64] {
  @func_12129() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_14644() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %108 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %109 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %110 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %111 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %112 = %108.0;
  %113 = %109.1;
  %114 = %110.0;
  %115 = %111.0;
  %116 = @func_8683() /* ty=Tensor[(5, 14, 8), float64] */;
  (%112, %113, %114, %115, %116)
}

def @func_16559() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %117 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %118 = %117.0;
  %119 = @func_11679() /* ty=Tensor[(5, 14, 8), float64] */;
  (%118, %119)
}

def @func_19789() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %120 = @func_9795() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %121 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %122 = %120.0;
  %123 = %121.0;
  (%122, %123)
}

def @func_19716() -> (Tensor[(6), float32],) {
  %124 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %125 = %124.0;
  (%125,)
}

def @func_21716() -> (Tensor[(6), float32],) {
  %126 = @func_9974() /* ty=Tensor[(6), float32] */;
  (%126,)
}

def @func_9604(%var_9538: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) {
  %127 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %128 = cast(%var_9538, dtype="int64") /* ty=Tensor[(40), int64] */;
  %129 = reshape(%128, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %130 = @func_7436(%129) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %131 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %132 = %127.2;
  %133 = %130.1;
  %134 = %131.0;
  (%132, %133, %var_9538, %134)
}

def @func_9157() -> (Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) {
  %135 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %136 = cast(meta[relay.Constant][6] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %137 = reshape(%136, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
  %138 = %135.0;
  %139 = @func_7382(%137) /* ty=Tensor[(7, 13, 13), float32] */;
  (%138, %139, meta[relay.Constant][6] /* ty=Tensor[(1183), float32] */)
}

def @func_20891() -> (Tensor[(6), float32],) {
  %140 = @func_16916() /* ty=(Tensor[(6), float32],) */;
  %141 = %140.0;
  (%141,)
}

def @func_10822() -> Tensor[(5, 14, 8), float64] {
  %142 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %142.0
}

def @func_17080() -> (Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
  %143 = @func_12263() /* ty=Tensor[(5, 14, 8), float64] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %145 = reshape(%144, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %146 = @func_7805(%145) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %147 = @func_15983() /* ty=Tensor[(1080), int8] */;
  %148 = %146.0;
  (%147, %143, %148)
}

def @func_8811() -> (Tensor[(6), float32],) {
  %149 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %150 = %149.2;
  (%150,)
}

def @func_22107(%var_22089: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(15, 9, 1), float64], Tensor[(15, 9), float64], Tensor[(23400), bool], Tensor[(2600, 9), int64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
  %152 = reshape(%151, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), float64] */;
  %153 = @func_13238(%152) /* ty=(Tensor[(15, 9, 1), float64],) */;
  %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(2600, 9), int64] */, dtype="int64") /* ty=Tensor[(2600, 9), int64] */;
  %155 = reshape(%154, newshape=[23400]) /* ty=Tensor[(23400), int64] */;
  %156 = @func_10206(%155) /* ty=(Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) */;
  %157 = @func_16195() /* ty=Tensor[(6), float32] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(6), float32] */;
  %159 = reshape(%158, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %160 = @func_17837(%159) /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %161 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %162 = cast(%var_22089, dtype="int64") /* ty=Tensor[(40), int64] */;
  %163 = reshape(%162, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %164 = @func_9604(%163) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %165 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  %166 = %153.0;
  %167 = %156.2;
  %168 = %160.2;
  %169 = %161.0;
  %170 = %164.2;
  (%165, %166, meta[relay.Constant][7] /* ty=Tensor[(15, 9), float64] */, %167, meta[relay.Constant][8] /* ty=Tensor[(2600, 9), int64] */, %157, %168, %169, %170, %var_22089)
}

def @func_21341() -> (Tensor[(200), float64],) {
  %171 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %172 = %171.2;
  (%172,)
}

def @func_8334() -> (Tensor[(5, 14, 8), float64],) {
  %173 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %174 = %173.0;
  (%174,)
}

def @func_8950(%var_8948: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) {
  %175 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %176 = cast(meta[relay.Constant][9] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %177 = cast(%var_8948, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %178 = reshape(%176, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %179 = reshape(%177, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %180 = @func_6594(%178, %179) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %181 = %175.0;
  %182 = %180.0;
  (%181, %182, meta[relay.Constant][9] /* ty=Tensor[(585), float64] */, %var_8948)
}

def @func_12263() -> Tensor[(5, 14, 8), float64] {
  %183 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %183.0
}

def @func_10243() -> (Tensor[(5, 14, 8), float64],) {
  %184 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %185 = %184.0;
  (%185,)
}

def @func_16596() -> Tensor[(5, 14, 8), float64] {
  %186 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %186.0
}

def @func_22289() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %187 = @func_18561() /* ty=(Tensor[(6), float32],) */;
  %188 = @func_14662() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %189 = @func_21489() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %190 = %187.0;
  %191 = %188.0;
  %192 = %189.0;
  (%190, %191, %192)
}

def @func_17256() -> Tensor[(6), float32] {
  %193 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %193.0
}

def @func_21674(%var_21666: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), uint32],) {
  %194 = @func_19038() /* ty=(Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) */;
  %195 = %194.0;
  %196 = cast(%var_21666, dtype="uint32") /* ty=Tensor[(5, 4, 13), uint32] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="uint32") /* ty=Tensor[(5, 4, 13), uint32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %200 = maximum(%198, %199) /* ty=Tensor[(5, 4, 13), uint32] */;
  (%200,)
}

def @func_17206() -> Tensor[(23400), float64] {
  %201 = @func_11403() /* ty=Tensor[(23400), float64] */;
  %202 = cast(meta[relay.Constant][10] /* ty=Tensor[(23400), float64] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(1), int32] */;
  %204 = cast(%201, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?), bool] */;
  %206 = less_equal(%204, %205) /* ty=Tensor[(23400), bool] */;
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(23400), float64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(1), int32] */;
  %209 = cast(%206, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?), float64] */;
  mod(%209, %210) /* ty=Tensor[(23400), float64] */
}

def @func_22329() -> Tensor[(5, 14, 8), float64] {
  %211 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %211.0
}

def @func_19233() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(1183), float32], Tensor[(6), float32]) {
  %212 = @func_11600() /* ty=(Tensor[(6), float32],) */;
  %213 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %214 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
  %215 = %212.0;
  %216 = %213.1;
  %217 = %214.2;
  %218 = @func_9840() /* ty=Tensor[(6), float32] */;
  (%215, %216, %217, %218)
}

def @func_9783() -> (Tensor[(5, 13, 9), float64],) {
  %219 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %220 = %219.1;
  (%220,)
}

def @func_11327(%var_11318: Tensor[(100, 2), float64], %var_11319: Tensor[(1183), float32], %var_11320: Tensor[(52, 450), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) {
  %221 = cast(%var_11318, dtype="float64") /* ty=Tensor[(100, 2), float64] */;
  %222 = cast(%var_11319, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %223 = cast(%var_11320, dtype="bool") /* ty=Tensor[(52, 450), bool] */;
  %224 = reshape(%221, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %225 = reshape(%222, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %226 = reshape(%223, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
  %227 = @func_7541(%224, %225, %226) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
  %228 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  %229 = %227.6;
  %230 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  (%228, %229, %var_11318, %var_11319, %var_11320, %230)
}

def @func_19677() -> (Tensor[(5, 14, 8), float64],) {
  %231 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  (%231,)
}

def @func_22634() -> Tensor[(23400), float64] {
  %232 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
  %232.0
}

def @func_21231() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %233 = @func_11528() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) */;
  %234 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %235 = %233.1;
  %236 = %234.1;
  (%235, %236)
}

def @func_19963() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) {
  %237 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
  %238 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %239 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %240 = %237.1;
  %241 = %238.0;
  %242 = %239.3;
  %243 = @func_9974() /* ty=Tensor[(6), float32] */;
  (%240, %241, %242, %243)
}

def @func_21687() -> (Tensor[(5, 14, 8), float64],) {
  %244 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %245 = %244.0;
  (%245,)
}

def @func_16927() -> Tensor[(5, 14, 8), float64] {
  %246 = @func_16055() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %246.0
}

def @func_16195() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_20010() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %247 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
  %248 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %249 = %247.0;
  %250 = %248.1;
  (%249, %250)
}

def @func_21555() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %251 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %252 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %253 = %251.0;
  %254 = %252.0;
  (%253, %254)
}

def @func_10559(%var_10553: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
  %255 = cast(%var_10553, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
  erf(%255) /* ty=Tensor[(16, 12, 4), float32] */
}

def @func_11025() -> (Tensor[(5, 14, 8), float64],) {
  %256 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
  %257 = %256.0;
  (%257,)
}

def @func_17895() -> (Tensor[(6), float32],) {
  %258 = @func_16140() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %259 = %258.2;
  (%259,)
}

def @func_12970() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %260 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %261 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
  %262 = %260.0;
  (%261, %262)
}

def @func_19110(%var_19061: Tensor[(200), float64], %var_19064: Tensor[(1183), float32], %var_19088: Tensor[(1183), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(200), float64], Tensor[(200), float64], Tensor[(672), uint8], Tensor[(585), float64], Tensor[(1183), bool]) {
  %263 = @func_14333() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %264 = cast(meta[relay.Constant][11] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %265 = reshape(%264, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %266 = @func_18768(%265) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) */;
  %267 = cast(%var_19061, dtype="float64") /* ty=Tensor[(200), float64] */;
  %268 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %269 = reshape(%267, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %270 = reshape(%268, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %271 = @func_18012(%269, %270) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) */;
  %272 = cast(meta[relay.Constant][13] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %273 = cast(meta[relay.Constant][11] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %274 = reshape(%272, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
  %275 = reshape(%273, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %276 = @func_11145(%274, %275) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %277 = cast(%var_19064, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %278 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(1183), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %279 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?), float32] */;
  %281 = add(%279, %280) /* ty=Tensor[(1183), float32] */;
  %282 = cast(meta[relay.Constant][12] /* ty=Tensor[(1183), float32] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(1), int32] */;
  %284 = cast(%281, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?), float64] */;
  %286 = minimum(%284, %285) /* ty=Tensor[(1183), float64] */;
  %287 = cast(%var_19088, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(1), int32] */;
  %289 = cast(%286, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?), bool] */;
  %291 = %263.0;
  %292 = %266.1;
  %293 = %271.8;
  %294 = %276.2;
  %295 = greater_equal(%289, %290) /* ty=Tensor[(1183), bool] */;
  (%291, %292, meta[relay.Constant][11] /* ty=Tensor[(1080), int8] */, %293, %var_19061, %294, meta[relay.Constant][13] /* ty=Tensor[(585), float64] */, %295)
}

def @func_16916() -> (Tensor[(6), float32],) {
  %296 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %297 = %296.0;
  (%297,)
}

def @func_12916() -> (Tensor[(6), float32],) {
  %298 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %299 = %298.1;
  (%299,)
}

def @func_8115(%var_8097: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) {
  %300 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %303 = asin(%302) /* ty=Tensor[(5, 14, 8), float64] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %305 = reshape(%304, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %306 = @func_7805(%305) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %307 = cast(%var_8097, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %308 = cast(%var_8097, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %309 = reshape(%307, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %310 = reshape(%308, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %311 = cast(meta[relay.Constant][14] /* ty=Tensor[(5, 14, 8), float64] */, dtype="uint64") /* ty=Tensor[(5, 14, 8), uint64] */;
  %312 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%303, dtype="uint64") /* ty=Tensor[(5, 14, 8), uint64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %315 = @func_7174(%309, %310) /* ty=Tensor[(12, 10, 9), int8] */;
  %316 = cast(%315, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %317 = cast(%315, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %318 = reshape(%316, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %319 = reshape(%317, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %320 = %306.0;
  %321 = bitwise_or(%313, %314) /* ty=Tensor[(5, 14, 8), uint64] */;
  %322 = @func_7174(%318, %319) /* ty=Tensor[(12, 10, 9), int8] */;
  (%320, %315, %var_8097, %321, %322)
}

def @func_7541(%var_7488: Tensor[(200), float64], %var_7492: Tensor[(1183), float32], %var_7512: Tensor[(585, 40), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) {
  %323 = cast(meta[relay.Constant][15] /* ty=Tensor[(585, 1), float64] */, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %324 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %325 = reshape(%323, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %326 = reshape(%324, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %327 = @func_6594(%325, %326) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %328 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), int64] */, dtype="uint32") /* ty=Tensor[(40), uint32] */;
  %329 = cast(meta[relay.Constant][15] /* ty=Tensor[(585, 1), float64] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
  %330 = cast(meta[relay.Constant][17] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %331 = cast(%var_7488, dtype="float64") /* ty=Tensor[(200), float64] */;
  %332 = cast(meta[relay.Constant][18] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %333 = reshape(%330, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %334 = reshape(%331, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %335 = reshape(%332, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %336 = @func_4663(%333, %334, %335) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
  %337 = cast(%var_7492, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %338 = reshape(%337, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
  %339 = cast(meta[relay.Constant][19] /* ty=Tensor[(90, 12), int8] */, dtype="int8") /* ty=Tensor[(90, 12), int8] */;
  %340 = cast(meta[relay.Constant][19] /* ty=Tensor[(90, 12), int8] */, dtype="int8") /* ty=Tensor[(90, 12), int8] */;
  %341 = reshape(%339, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %342 = reshape(%340, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %343 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), int64] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %344 = cast(meta[relay.Constant][15] /* ty=Tensor[(585, 1), float64] */, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %345 = bitwise_or(%343, %344) /* ty=Tensor[(585, 40), int16] */;
  %346 = cast(%345, dtype="float32") /* ty=Tensor[(585, 40), float32] */;
  %347 = log(%346) /* ty=Tensor[(585, 40), float32] */;
  %348 = cast(%347, dtype="bool") /* ty=Tensor[(585, 40), bool] */;
  %349 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), int64] */, dtype="bool") /* ty=Tensor[(40), bool] */;
  %350 = greater(%348, %349) /* ty=Tensor[(585, 40), bool] */;
  %351 = cast(%350, dtype="bool") /* ty=Tensor[(585, 40), bool] */;
  %352 = cast(meta[relay.Constant][15] /* ty=Tensor[(585, 1), float64] */, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
  %353 = less_equal(%351, %352) /* ty=Tensor[(585, 40), bool] */;
  %354 = cast(%var_7512, dtype="float64") /* ty=Tensor[(585, 40), float64] */;
  %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(2), int32] */;
  %356 = cast(%353, dtype="float64") /* ty=Tensor[(585, 40), float64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %358 = floor_divide(%356, %357) /* ty=Tensor[(585, 40), float64] */;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(585, 40), float32] */;
  %360 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %361 = %327.1;
  %362 = multiply(%328, %329) /* ty=Tensor[(585, 40), uint32] */;
  %363 = %336.5;
  %364 = @func_7382(%338) /* ty=Tensor[(7, 13, 13), float32] */;
  %365 = @func_7174(%341, %342) /* ty=Tensor[(12, 10, 9), int8] */;
  %366 = rsqrt(%359) /* ty=Tensor[(585, 40), float32] */;
  (%360, %361, %362, %363, meta[relay.Constant][17] /* ty=Tensor[(50), float64] */, %var_7488, meta[relay.Constant][18] /* ty=Tensor[(6), float32] */, %364, %var_7492, %365, meta[relay.Constant][19] /* ty=Tensor[(90, 12), int8] */, %366)
}

def @func_10696() -> (Tensor[(6), float32], Tensor[(1, 1, 6), float32]) {
  %367 = @func_8445() /* ty=Tensor[(6), float32] */;
  %368 = cast(%367, dtype="float32") /* ty=Tensor[(6), float32] */;
  %369 = reshape(%368, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %370 = @func_319(%369) /* ty=Tensor[(1, 1, 6), float32] */;
  (%367, %370)
}

def @func_15762(%var_15737: Tensor[(1, 1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(1, 1080), int8], Tensor[(5, 14, 8), float64]) {
  %371 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %372 = cast(%var_15737, dtype="int8") /* ty=Tensor[(1, 1080), int8] */;
  %373 = reshape(%372, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %374 = @func_8115(%373) /* ty=(Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) */;
  %375 = %371.1;
  %376 = %374.2;
  %377 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  (%375, %376, %var_15737, %377)
}

def @func_24042() -> (Tensor[(6), float32],) {
  %378 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%378,)
}

def @func_8782() -> Tensor[(5, 14, 8), float32] {
  @func_8742() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_16286(%var_16256: Tensor[(1560), uint16], %var_16257: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) {
  %379 = cast(%var_16256, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %380 = cast(%var_16257, dtype="float32") /* ty=Tensor[(6), float32] */;
  %381 = cast(meta[relay.Constant][20] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %382 = reshape(%379, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
  %383 = reshape(%380, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %384 = reshape(%381, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %385 = @func_13208(%382, %383, %384) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
  %386 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %388 = reshape(%387, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %389 = @func_7805(%388) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %390 = %385.0;
  %391 = %389.0;
  (%386, %390, %var_16256, %var_16257, meta[relay.Constant][20] /* ty=Tensor[(1080), int8] */, %391)
}

def @func_9408(%var_9373: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) {
  %392 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %393 = cast(%var_9373, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %394 = reshape(%393, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %395 = %392.0;
  %396 = @func_1443(%394) /* ty=Tensor[(8, 5, 8), int64] */;
  (%395, %396, %var_9373)
}

def @func_14159(%var_14148: Tensor[(1, 1183), float32], %var_14149: Tensor[(7800, 3), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(?, ?, 6), bool], Tensor[(5, 14, 8), float64], Tensor[(200), float64], Tensor[(1, 1183), float32], Tensor[(7800, 3), bool]) {
  %397 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %398 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
  %399 = %398.1;
  %400 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %401 = %400.0;
  %402 = cast(%401, dtype="bool") /* ty=Tensor[(6), bool] */;
  %403 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%399, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %406 = cast(meta[relay.Constant][21] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %407 = cast(%var_14148, dtype="float32") /* ty=Tensor[(1, 1183), float32] */;
  %408 = cast(%var_14149, dtype="bool") /* ty=Tensor[(7800, 3), bool] */;
  %409 = reshape(%406, newshape=[100, 2]) /* ty=Tensor[(100, 2), float64] */;
  %410 = reshape(%407, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %411 = reshape(%408, newshape=[52, 450]) /* ty=Tensor[(52, 450), bool] */;
  %412 = @func_11327(%409, %410, %411) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) */;
  %413 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %414 = %397.0;
  %415 = not_equal(%404, %405) /* ty=Tensor[(?, ?, 6), bool] */;
  %416 = %412.5;
  (%413, %414, %415, %416, meta[relay.Constant][21] /* ty=Tensor[(200), float64] */, %var_14148, %var_14149)
}

def @func_23476() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
  %417 = @func_17080() /* ty=(Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */;
  %418 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %419 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %420 = %417.0;
  (%418, %419, %420)
}

def @func_17327() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %421 = @func_15422() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %422 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %423 = %421.2;
  %424 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %425 = %422.1;
  (%423, %424, %425)
}

def @func_9126() -> Tensor[(5, 14, 8), float64] {
  %426 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %426.1
}

def @func_11970() -> Tensor[(6), float32] {
  %427 = @func_9889() /* ty=(Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) */;
  %427.0
}

def @func_15233() -> (Tensor[(5, 14, 8), float64],) {
  %428 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %429 = %428.0;
  (%429,)
}

def @func_22441() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %430 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %431 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
  %432 = %430.0;
  %433 = %431.1;
  %434 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  (%432, %433, %434)
}

def @func_21795() -> (Tensor[(23400), float64],) {
  %435 = @func_11403() /* ty=Tensor[(23400), float64] */;
  (%435,)
}

def @func_9000() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) {
  %436 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %437 = %436.0;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %439 = reshape(%438, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %440 = @func_7805(%439) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %441 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %442 = %440.0;
  %443 = %441.0;
  (%437, %442, %443)
}

def @func_22144() -> (Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) {
  %444 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 16), float32] */;
  %445 = cast(meta[relay.Constant][23] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %446 = reshape(%445, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %447 = @func_15464(%446) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) */;
  %448 = sqrt(%444) /* ty=Tensor[(8, 2, 16), float32] */;
  %449 = %447.0;
  (%448, %449, meta[relay.Constant][23] /* ty=Tensor[(40), int64] */)
}

def @func_21740() -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
  %450 = @func_12441() /* ty=Tensor[(5, 14, 8), float64] */;
  %451 = @func_9269() /* ty=Tensor[(1080), int8] */;
  (%450, %451)
}

def @main(%var_24249: Tensor[(1080), int8]) -> (Tensor[(1080), int16],) {
  %452 = @func_21740() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */;
  %453 = %452.1;
  %454 = cast(%var_24249, dtype="int16") /* ty=Tensor[(1080), int16] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(1), int32] */;
  %456 = cast(%453, dtype="int16") /* ty=Tensor[(1080), int16] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?), int16] */;
  %458 = minimum(%456, %457) /* ty=Tensor[(1080), int16] */;
  (%458,)
}

def @func_18555(%var_18516: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), bool],) {
  %459 = cast(%var_18516, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
  %460 = tan(%459) /* ty=Tensor[(15, 11, 14), float64] */;
  %461 = cast(%460, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
  %462 = shape_of(%var_18516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%var_18516, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = equal(%463, %464) /* ty=Tensor[(15, 11, 14), bool] */;
  (%465,)
}

def @func_13671() -> Tensor[(5, 14, 8), float64] {
  %466 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %466.1
}

def @func_23712() -> (Tensor[(5, 14, 8), float64],) {
  %467 = @func_21010() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %468 = %467.0;
  (%468,)
}

def @func_14940(%var_14892: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %469 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %470 = cast(%var_14892, dtype="int64") /* ty=Tensor[(40), int64] */;
  %471 = reshape(%470, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %472 = @func_9604(%471) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %473 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %474 = %469.0;
  %475 = %472.2;
  %476 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  %477 = %473.0;
  %478 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  (%474, %475, %var_14892, %476, %477, %478)
}

def @func_13208(%var_13181: Tensor[(10, 13, 12), uint16], %var_13199: Tensor[(6), float32], %var_13204: Tensor[(1080), int8]) -> (Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) {
  %479 = cast(%var_13181, dtype="uint16") /* ty=Tensor[(10, 13, 12), uint16] */;
  %480 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(10, 13, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(meta[relay.Constant][24] /* ty=Tensor[(10, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(10, 13, 12), uint16] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %483 = cast(%var_13181, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
  %484 = cast(%var_13199, dtype="float32") /* ty=Tensor[(6), float32] */;
  %485 = reshape(%484, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %486 = @func_7344(%485) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %487 = cast(meta[relay.Constant][25] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %488 = cast(%var_13204, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %489 = reshape(%487, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
  %490 = reshape(%488, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %491 = @func_11145(%489, %490) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %492 = multiply(%481, %482) /* ty=Tensor[(10, 13, 12), uint16] */;
  %493 = atanh(%483) /* ty=Tensor[(10, 13, 12), float64] */;
  %494 = %486.5;
  %495 = %491.5;
  (%492, %493, %494, %var_13199, %495, meta[relay.Constant][25] /* ty=Tensor[(585), float64] */, %var_13204)
}

def @func_14551(%var_14501: Tensor[(1183), float32], %var_14518: Tensor[(1183), float32], %var_14538: Tensor[(1760), float32]) -> (Tensor[(1183), bool], Tensor[(1183), uint16], Tensor[(1183), float32], Tensor[(6), float32], Tensor[(11, 10, 16), float32], Tensor[(1760), float32]) {
  %496 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
  %497 = %496.2;
  %498 = cast(%var_14501, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(1), int32] */;
  %500 = cast(%497, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?), float32] */;
  %502 = divide(%500, %501) /* ty=Tensor[(1183), float32] */;
  %503 = cast(%502, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %504 = shape_of(%var_14501, dtype="int32") /* ty=Tensor[(1), int32] */;
  %505 = cast(%var_14501, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?), bool] */;
  %507 = cast(%var_14518, dtype="uint16") /* ty=Tensor[(1183), uint16] */;
  %508 = shape_of(%497, dtype="int32") /* ty=Tensor[(1), int32] */;
  %509 = cast(%497, dtype="uint16") /* ty=Tensor[(1183), uint16] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %511 = cast(%502, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %512 = cast(%var_14538, dtype="float32") /* ty=Tensor[(1760), float32] */;
  %513 = reshape(%512, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float32] */;
  %514 = @func_10898(%513) /* ty=(Tensor[(11, 10, 16), float32],) */;
  %515 = not_equal(%505, %506) /* ty=Tensor[(1183), bool] */;
  %516 = left_shift(%509, %510) /* ty=Tensor[(1183), uint16] */;
  %517 = asin(%511) /* ty=Tensor[(1183), float32] */;
  %518 = @func_11970() /* ty=Tensor[(6), float32] */;
  %519 = %514.0;
  (%515, %516, %517, %518, %519, %var_14538)
}

def @func_14810() -> (Tensor[(5, 14, 8), float64],) {
  %520 = @func_14644() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %521 = %520.2;
  (%521,)
}

def @func_23853() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %522 = @func_23225() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %523 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %524 = %522.0;
  %525 = %523.0;
  (%524, %525)
}

def @func_10423() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %526 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %527 = %526.0;
  %528 = @func_8683() /* ty=Tensor[(5, 14, 8), float64] */;
  (%527, %528)
}

def @func_18090() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) {
  %529 = @func_16175() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %530 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %531 = @func_9783() /* ty=(Tensor[(5, 13, 9), float64],) */;
  %532 = %529.0;
  %533 = %530.0;
  %534 = %531.0;
  (%532, %533, %534)
}

def @func_23259() -> Tensor[(5, 14, 8), float64] {
  %535 = @func_23002() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %535.0
}

def @func_23690(%var_23678: Tensor[(624), float32], %var_23679: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(135, 3), float64], Tensor[(624), float32], Tensor[(200), float64], Tensor[(5, 14, 8), float64]) {
  %536 = @func_19789() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %537 = cast(meta[relay.Constant][26] /* ty=Tensor[(135, 3), float64] */, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
  %538 = cast(%var_23678, dtype="float32") /* ty=Tensor[(624), float32] */;
  %539 = cast(%var_23679, dtype="float64") /* ty=Tensor[(200), float64] */;
  %540 = reshape(%537, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float64] */;
  %541 = reshape(%538, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %542 = reshape(%539, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %543 = @func_5541(%540, %541, %542) /* ty=(Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) */;
  %544 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %545 = %536.1;
  %546 = %543.2;
  %547 = %544.0;
  (%545, %546, meta[relay.Constant][26] /* ty=Tensor[(135, 3), float64] */, %var_23678, %var_23679, %547)
}

def @func_21294() -> (Tensor[(6), float32],) {
  %548 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %549 = %548.1;
  (%549,)
}

def @func_12717() -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) {
  %550 = @func_11403() /* ty=Tensor[(23400), float64] */;
  %551 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
  (%550, %551)
}

def @func_18386() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), uint32], Tensor[(2, 780), uint16]) {
  %552 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %553 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %554 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 780), uint16] */, dtype="uint16") /* ty=Tensor[(2, 780), uint16] */;
  %555 = @func_9840() /* ty=Tensor[(6), float32] */;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(6), float32] */;
  %557 = reshape(%554, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
  %558 = reshape(%556, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %559 = @func_16286(%557, %558) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) */;
  %560 = %552.0;
  %561 = %553.0;
  %562 = @func_8742() /* ty=Tensor[(5, 14, 8), float32] */;
  %563 = %559.5;
  (%560, %561, %555, %562, %563, meta[relay.Constant][27] /* ty=Tensor[(2, 780), uint16] */)
}

def @func_19485() -> (Tensor[(5, 14, 8), float64],) {
  %564 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %565 = %564.0;
  (%565,)
}

def @func_20564() -> Tensor[(5, 14, 8), float64] {
  %566 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %566.0
}

def @func_10763(%var_10739: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64],) {
  %567 = cast(%var_10739, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %568 = erf(%567) /* ty=Tensor[(15, 11, 16), float64] */;
  %569 = cast(%var_10739, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%568, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %573 = power(%571, %572) /* ty=Tensor[(15, 11, 16), float64] */;
  (%573,)
}

def @func_21890() -> (Tensor[(12, 10, 9), float64], Tensor[(40, 6), bool], Tensor[(40), int64]) {
  %574 = @func_21217() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) */;
  %575 = %574.1;
  %576 = cast(%575, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
  %577 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %578 = reshape(%577, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %579 = @func_14311(%578) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) */;
  %580 = erf(%576) /* ty=Tensor[(12, 10, 9), float64] */;
  %581 = %579.3;
  (%580, %581, meta[relay.Constant][28] /* ty=Tensor[(40), int64] */)
}

def @func_7805(%var_7764: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 14, 8), uint32],) {
  %582 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %583 = cast(%var_7764, dtype="uint32") /* ty=Tensor[(5, 14, 8), uint32] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="uint32") /* ty=Tensor[(5, 14, 8), uint32] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %587 = logical_xor(%585, %586) /* ty=Tensor[(5, 14, 8), uint32] */;
  (%587,)
}

def @func_13443() -> (Tensor[(6), float32],) {
  %588 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%588,)
}

def @func_7174(%var_7162: Tensor[(12, 10, 9), int8], %var_7163: Tensor[(12, 10, 9), int8]) -> Tensor[(12, 10, 9), int8] {
  %589 = cast(%var_7163, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %590 = shape_of(%var_7162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%var_7162, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%591, %592) /* ty=Tensor[(12, 10, 9), int8] */
}

def @func_15037() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %593 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %594 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %595 = reshape(%593, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %596 = reshape(%594, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %597 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %598 = @func_12819() /* ty=Tensor[(5, 14, 8), float64] */;
  %599 = @func_7174(%595, %596) /* ty=Tensor[(12, 10, 9), int8] */;
  %600 = %597.0;
  %601 = @func_12292() /* ty=Tensor[(5, 14, 8), float64] */;
  (%598, %599, meta[relay.Constant][29] /* ty=Tensor[(1080), int8] */, %600, %601)
}

def @func_17567() -> Tensor[(5, 14, 8), float64] {
  %602 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
  %602.0
}

def @func_10973() -> (Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) {
  %603 = cast(meta[relay.Constant][30] /* ty=Tensor[(23400), int64] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
  %604 = reshape(%603, newshape=[23400]) /* ty=Tensor[(23400), int64] */;
  %605 = @func_10206(%604) /* ty=(Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) */;
  %606 = %605.3;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %608 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(23400), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %609 = cast(meta[relay.Constant][30] /* ty=Tensor[(23400), int64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?), float64] */;
  %611 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %612 = multiply(%609, %610) /* ty=Tensor[(23400), float64] */;
  (%611, %612)
}

def @func_22356() -> (Tensor[(5, 14, 8), float64],) {
  %613 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %614 = %613.0;
  (%614,)
}

def @func_7195() -> Tensor[(5, 14, 8), float64] {
  %615 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  acosh(%615) /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_12129() -> Tensor[(5, 14, 8), float64] {
  %616 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %616.1
}

def @func_22847(%var_22834: Tensor[(7, 2, 7), uint8]) -> Tensor[(7, 2, 7), bool] {
  %617 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 2, 7), uint8] */, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
  %618 = shape_of(%var_22834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_22834, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%619, %620) /* ty=Tensor[(7, 2, 7), bool] */
}

def @func_16175() -> (Tensor[(5, 14, 8), float64],) {
  %621 = @func_15233() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %622 = %621.0;
  (%622,)
}

def @func_23724() -> (Tensor[(6), float32],) {
  %623 = @func_17140() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %624 = %623.1;
  (%624,)
}

def @func_16690() -> (Tensor[(6), float32], Tensor[(160), float64], Tensor[(10, 16, 1), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %625 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %626 = cast(meta[relay.Constant][33] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %627 = reshape(%626, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %628 = @func_16575(%627) /* ty=(Tensor[(10, 16, 1), float64],) */;
  %629 = %628.0;
  %630 = cast(%629, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  %631 = @func_11600() /* ty=(Tensor[(6), float32],) */;
  %632 = %625.1;
  %633 = tan(%630) /* ty=Tensor[(10, 16, 1), float64] */;
  %634 = %631.0;
  %635 = @func_10607() /* ty=Tensor[(6), float32] */;
  (%632, meta[relay.Constant][33] /* ty=Tensor[(160), float64] */, %633, %634, %635)
}

def @func_19202(%var_19154: Tensor[(6, 1), float32]) -> (Tensor[(2, 3, 6), float64], Tensor[(?, ?, 6), uint64], Tensor[(6, 1), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(6), float32]) {
  %636 = cast(-1.37148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %637 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %638 = cast(%var_19154, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %639 = reshape(%638, newshape=[6, 1]) /* ty=Tensor[(6, 1), float32] */;
  %640 = @func_9345(%639) /* ty=(Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) */;
  %641 = @func_9795() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %642 = cast(meta[relay.Constant][35] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %643 = cast(%var_19154, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %644 = cast(meta[relay.Constant][36] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %645 = reshape(%642, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
  %646 = reshape(%643, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %647 = reshape(%644, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %648 = @func_13208(%645, %646, %647) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
  %649 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
  %650 = floor_mod(%636, %637) /* ty=Tensor[(2, 3, 6), float64] */;
  %651 = %640.1;
  %652 = %641.0;
  %653 = %648.3;
  %654 = %649.0;
  (%650, %651, %var_19154, %652, %653, meta[relay.Constant][35] /* ty=Tensor[(1560), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(1080), int8] */, %654)
}

def @func_21217() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) {
  %655 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %656 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %657 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %658 = %655.1;
  %659 = %656.1;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_7598() -> (Tensor[(5, 14, 8), float64],) {
  %661 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %664 = cos(%663) /* ty=Tensor[(5, 14, 8), float64] */;
  (%664,)
}

def @func_16779() -> Tensor[(6), float32] {
  %665 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %665.0
}

def @func_13549(%var_13530: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
  %666 = @func_11234() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %667 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %668 = cast(meta[relay.Constant][37] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %669 = cast(%var_13530, dtype="float64") /* ty=Tensor[(200), float64] */;
  %670 = cast(meta[relay.Constant][38] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %671 = reshape(%668, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %672 = reshape(%669, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %673 = reshape(%670, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %674 = @func_4663(%671, %672, %673) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
  %675 = %666.1;
  %676 = %667.0;
  %677 = %674.4;
  (%675, %676, %677, meta[relay.Constant][37] /* ty=Tensor[(50), float64] */, %var_13530, meta[relay.Constant][38] /* ty=Tensor[(6), float32] */)
}

def @func_8612(%var_8605: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(1, 1, 6), float32], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(18, 60), int8]) {
  %678 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %679 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %680 = cast(%var_8605, dtype="float32") /* ty=Tensor[(6), float32] */;
  %681 = reshape(%679, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %682 = reshape(%680, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %683 = @func_919(%681, %682) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %684 = cast(meta[relay.Constant][40] /* ty=Tensor[(18, 60), int8] */, dtype="int8") /* ty=Tensor[(18, 60), int8] */;
  %685 = cast(meta[relay.Constant][40] /* ty=Tensor[(18, 60), int8] */, dtype="int8") /* ty=Tensor[(18, 60), int8] */;
  %686 = reshape(%684, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %687 = reshape(%685, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %688 = %678.0;
  %689 = %683.1;
  %690 = @func_7174(%686, %687) /* ty=Tensor[(12, 10, 9), int8] */;
  (%688, %689, meta[relay.Constant][39] /* ty=Tensor[(672), uint8] */, %var_8605, %690, meta[relay.Constant][40] /* ty=Tensor[(18, 60), int8] */)
}

def @func_12410() -> Tensor[(5, 14, 8), float64] {
  @func_7412() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_23895(%var_23859: Tensor[(2, 3, 11), int32], %var_23888: Tensor[(6), float32], %var_23889: Tensor[(1080), int8]) -> (Tensor[(2, 3, 11), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8]) {
  %691 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 3, 11), int32] */, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %692 = shape_of(%var_23859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%var_23859, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %695 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %696 = cast(meta[relay.Constant][42] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %697 = cast(%var_23888, dtype="float32") /* ty=Tensor[(6), float32] */;
  %698 = cast(%var_23889, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %699 = reshape(%696, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
  %700 = reshape(%697, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %701 = reshape(%698, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %702 = @func_13208(%699, %700, %701) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
  %703 = not_equal(%693, %694) /* ty=Tensor[(2, 3, 11), bool] */;
  %704 = @func_20564() /* ty=Tensor[(5, 14, 8), float64] */;
  %705 = %695.0;
  %706 = %702.2;
  (%703, %704, %705, %706, meta[relay.Constant][42] /* ty=Tensor[(1560), uint16] */, %var_23888, %var_23889)
}

def @func_15608() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %707 = @func_9889() /* ty=(Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) */;
  %708 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %709 = %707.0;
  %710 = %708.0;
  (%709, %710)
}

def @func_16406() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %711 = @func_15233() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %712 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %713 = %711.0;
  %714 = %712.0;
  (%713, %714)
}

def @func_18191(%var_18172: Tensor[(1080), int8]) -> (Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %715 = @func_14451() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %716 = cast(meta[relay.Constant][43] /* ty=Tensor[(40, 1), int64] */, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
  %717 = reshape(%716, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %718 = @func_13028(%717) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) */;
  %719 = cast(meta[relay.Constant][44] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %720 = cast(%var_18172, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %721 = reshape(%719, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
  %722 = reshape(%720, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %723 = @func_11145(%721, %722) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %724 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %725 = %715.0;
  %726 = %718.5;
  %727 = %723.3;
  %728 = %724.0;
  (%725, %726, meta[relay.Constant][43] /* ty=Tensor[(40, 1), int64] */, %727, meta[relay.Constant][44] /* ty=Tensor[(585), float64] */, %var_18172, %728)
}

def @func_23225() -> (Tensor[(5, 14, 8), float64],) {
  %729 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %730 = %729.0;
  (%730,)
}

def @func_20862(%var_20785: Tensor[(2640), float64], %var_20802: Tensor[(1, 40), int64]) -> (Tensor[(6), float32], Tensor[(15, 11, 16), float64], Tensor[(2640), float64], Tensor[(12, 10, 9), int8], Tensor[(1, 40), float64]) {
  %731 = @func_16904() /* ty=(Tensor[(6), float32],) */;
  %732 = cast(%var_20785, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %733 = reshape(%732, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %734 = @func_10763(%733) /* ty=(Tensor[(15, 11, 16), float64],) */;
  %735 = cast(%var_20802, dtype="int64") /* ty=Tensor[(1, 40), int64] */;
  %736 = reshape(%735, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %737 = @func_9604(%736) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %738 = cast(%var_20802, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %739 = log(%738) /* ty=Tensor[(1, 40), float32] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %741 = %731.0;
  %742 = %734.0;
  %743 = %737.3;
  %744 = asin(%740) /* ty=Tensor[(1, 40), float64] */;
  (%741, %742, %var_20785, %743, %744)
}

def @func_18768(%var_18592: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  %745 = @func_12070() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(200), float64]) */;
  %746 = cast(%var_18592, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %747 = reshape(%746, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %748 = @func_18191(%747) /* ty=(Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %749 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %750 = @func_14644() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %751 = @func_13455() /* ty=(Tensor[(6), float32],) */;
  %752 = %745.0;
  %753 = %748.3;
  %754 = %749.2;
  %755 = %750.2;
  %756 = %751.0;
  %757 = @func_13404() /* ty=Tensor[(5, 14, 8), float64] */;
  %758 = @func_9126() /* ty=Tensor[(5, 14, 8), float64] */;
  %759 = @func_16815() /* ty=Tensor[(5, 13, 9), float64] */;
  (%752, %753, %var_18592, %754, %755, %756, %757, %758, %759)
}

def @func_22647() -> Tensor[(23400), float64] {
  %760 = @func_21795() /* ty=(Tensor[(23400), float64],) */;
  %760.0
}

def @func_9187() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32]) {
  %761 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %762 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %765 = %761.2;
  %766 = acos(%764) /* ty=Tensor[(5, 14, 8), float32] */;
  (%765, %766)
}

def @func_22820() -> Tensor[(5, 14, 8), float64] {
  %767 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %767.1
}

def @func_17837(%var_17835: Tensor[(6), float32]) -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %768 = cast(%var_17835, dtype="float32") /* ty=Tensor[(6), float32] */;
  %769 = reshape(%768, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %770 = @func_7652(%769) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %771 = @func_17206() /* ty=Tensor[(23400), float64] */;
  %772 = %770.1;
  (%771, %772, %var_17835)
}

def @func_13404() -> Tensor[(5, 14, 8), float64] {
  %773 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %773.0
}

def @func_14333() -> (Tensor[(5, 14, 8), float64],) {
  %774 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
  %775 = %774.1;
  (%775,)
}

def @func_319(%var_315: Tensor[(1, 1, 6), float32]) -> Tensor[(1, 1, 6), float32] {
  %776 = cast(%var_315, dtype="float32") /* ty=Tensor[(1, 1, 6), float32] */;
  tan(%776) /* ty=Tensor[(1, 1, 6), float32] */
}

def @func_11446() -> (Tensor[(5, 14, 8), float64],) {
  %777 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  (%777,)
}

def @func_21489() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %778 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %779 = %778.1;
  %780 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  (%779, %780)
}

def @func_12209() -> Tensor[(5, 14, 8), float64] {
  %781 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %781.0
}

def @func_21606() -> (Tensor[(6), float32],) {
  %782 = @func_12916() /* ty=(Tensor[(6), float32],) */;
  %783 = %782.0;
  (%783,)
}

def @func_20150(%var_20143: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64], Tensor[(40), int64]) {
  %784 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %785 = @func_17080() /* ty=(Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */;
  %786 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %787 = cast(%var_20143, dtype="int64") /* ty=Tensor[(40), int64] */;
  %788 = reshape(%787, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %789 = @func_15464(%788) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) */;
  %790 = @func_9126() /* ty=Tensor[(5, 14, 8), float64] */;
  %791 = %784.0;
  %792 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
  %793 = %785.0;
  %794 = %786.0;
  %795 = %789.2;
  (%790, %791, %792, %793, %794, %795, %var_20143)
}

def @func_21981() -> (Tensor[(23400), float64], Tensor[(6), float32]) {
  %796 = @func_21795() /* ty=(Tensor[(23400), float64],) */;
  %797 = %796.0;
  %798 = cast(meta[relay.Constant][45] /* ty=Tensor[(23400), float64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(1), int32] */;
  %800 = cast(%797, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?), float64] */;
  %802 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %803 = floor_divide(%800, %801) /* ty=Tensor[(23400), float64] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_7268() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %805 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %806 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %810 = cast(%805, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %811 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(5, 14, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %814 = maximum(%808, %809) /* ty=Tensor[(5, 14, 8), float64] */;
  %815 = power(%812, %813) /* ty=Tensor[(5, 14, 8), float64] */;
  (%814, %815)
}

def @func_18012(%var_18002: Tensor[(200), float64], %var_18003: Tensor[(1183), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) {
  %816 = @func_12766() /* ty=(Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %817 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %818 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %819 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %820 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
  %821 = cast(%var_18002, dtype="float64") /* ty=Tensor[(200), float64] */;
  %822 = cast(%var_18003, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %823 = cast(meta[relay.Constant][47] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %824 = reshape(%821, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %825 = reshape(%822, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %826 = reshape(%823, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
  %827 = @func_7541(%824, %825, %826) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
  %828 = @func_17567() /* ty=Tensor[(5, 14, 8), float64] */;
  %829 = %816.1;
  %830 = %817.1;
  %831 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %832 = %818.1;
  %833 = %819.0;
  %834 = %820.0;
  %835 = %827.9;
  %836 = @func_16779() /* ty=Tensor[(6), float32] */;
  (%828, %829, %830, %831, %832, %833, %834, %835, %var_18002, %var_18003, meta[relay.Constant][47] /* ty=Tensor[(23400), bool] */, %836)
}

def @func_19553() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %837 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %838 = @func_14451() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %839 = %837.2;
  %840 = @func_15720() /* ty=Tensor[(5, 14, 8), float64] */;
  %841 = %838.0;
  (%839, %840, %841)
}

def @func_19335(%var_19263: Tensor[(10, 5, 5), float32], %var_19264: Tensor[(10, 5, 5), float32], %var_19279: Tensor[(91, 13), float32], %var_19280: Tensor[(23400), bool]) -> (Tensor[(10, 5, 5), float32], Tensor[(100, 2), float64], Tensor[(50, 4), float64], Tensor[(91, 13), float32], Tensor[(23400), bool], Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8]) {
  %842 = cast(%var_19264, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %843 = shape_of(%var_19263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_19263, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %846 = cast(meta[relay.Constant][48] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %847 = cast(%var_19279, dtype="float32") /* ty=Tensor[(91, 13), float32] */;
  %848 = cast(%var_19280, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %849 = reshape(%846, newshape=[100, 2]) /* ty=Tensor[(100, 2), float64] */;
  %850 = reshape(%847, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %851 = reshape(%848, newshape=[52, 450]) /* ty=Tensor[(52, 450), bool] */;
  %852 = @func_11327(%849, %850, %851) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) */;
  %853 = cast(meta[relay.Constant][49] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %854 = reshape(%853, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %855 = @func_14311(%854) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) */;
  %856 = @func_16301() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %857 = cast(meta[relay.Constant][50] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %858 = cast(meta[relay.Constant][50] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %859 = reshape(%857, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %860 = reshape(%858, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %861 = divide(%844, %845) /* ty=Tensor[(10, 5, 5), float32] */;
  %862 = %852.2;
  %863 = %855.2;
  %864 = %856.0;
  %865 = @func_7174(%859, %860) /* ty=Tensor[(12, 10, 9), int8] */;
  (%861, %862, meta[relay.Constant][48] /* ty=Tensor[(50, 4), float64] */, %var_19279, %var_19280, %863, meta[relay.Constant][49] /* ty=Tensor[(40), int64] */, %864, %865, meta[relay.Constant][50] /* ty=Tensor[(1080), int8] */)
}

def @func_20378() -> (Tensor[(5, 14, 8), float64],) {
  %866 = @func_16091() /* ty=Tensor[(5, 14, 8), float64] */;
  (%866,)
}

def @func_6594(%var_6578: Tensor[(5, 13, 9), float64], %var_6590: Tensor[(40), int64]) -> (Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) {
  %867 = cast(%var_6578, dtype="float32") /* ty=Tensor[(5, 13, 9), float32] */;
  %868 = cast(%var_6590, dtype="int64") /* ty=Tensor[(40), int64] */;
  %869 = reshape(%868, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %870 = cast(%var_6578, dtype="float64") /* ty=Tensor[(5, 13, 9), float64] */;
  %871 = cosh(%870) /* ty=Tensor[(5, 13, 9), float64] */;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(5, 13, 9), float64] */;
  %873 = sinh(%867) /* ty=Tensor[(5, 13, 9), float32] */;
  %874 = @func_1443(%869) /* ty=Tensor[(8, 5, 8), int64] */;
  %875 = cos(%872) /* ty=Tensor[(5, 13, 9), float64] */;
  (%873, %874, %var_6590, %875)
}

def @func_24195() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  %876 = @func_12292() /* ty=Tensor[(5, 14, 8), float64] */;
  %877 = @func_19561() /* ty=Tensor[(5, 13, 9), float64] */;
  (%876, %877)
}

def @func_19038() -> (Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) {
  %878 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 4, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %879 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %880 = tan(%878) /* ty=Tensor[(5, 4, 13), float32] */;
  %881 = %879.3;
  (%880, %881)
}

def @func_9450() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %882 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %883 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %884 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %885 = %882.0;
  %886 = %883.2;
  %887 = %884.0;
  (%885, %886, %887)
}

def @func_21567() -> (Tensor[(11, 11, 14), float32],) {
  %888 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %889 = atanh(%888) /* ty=Tensor[(11, 11, 14), float32] */;
  (%889,)
}

def @func_12766() -> (Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
  %890 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %891 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %892 = %890.2;
  %893 = %891.0;
  (%892, %893)
}

def @func_15961() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %894 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %895 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %896 = %894.0;
  %897 = %895.0;
  (%896, %897)
}

def @func_11600() -> (Tensor[(6), float32],) {
  %898 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
  %899 = %898.0;
  (%899,)
}

def @func_20248() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %900 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %901 = @func_16559() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %902 = cast(meta[relay.Constant][53] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %903 = reshape(%902, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %904 = @func_16575(%903) /* ty=(Tensor[(10, 16, 1), float64],) */;
  %905 = %900.0;
  %906 = %901.0;
  %907 = %904.0;
  (%905, %906, %907, meta[relay.Constant][53] /* ty=Tensor[(160), float64] */)
}

def @func_14032() -> (Tensor[(5, 14, 8), float64],) {
  %908 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %909 = %908.0;
  (%909,)
}

def @func_21010() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %910 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %911 = @func_14662() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %912 = %910.0;
  %913 = %911.0;
  (%912, %913)
}

def @func_11897() -> (Tensor[(5, 14, 8), float64],) {
  %914 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %915 = %914.1;
  (%915,)
}

def @func_16055() -> (Tensor[(5, 14, 8), float64],) {
  %916 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %917 = %916.0;
  (%917,)
}

def @func_17221() -> (Tensor[(5, 14, 8), float64],) {
  %918 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
  (%918,)
}

def @func_18942() -> Tensor[(6), float32] {
  %919 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %919.0
}

def @func_13238(%var_13231: Tensor[(15, 9, 1), float64]) -> (Tensor[(15, 9, 1), float64],) {
  %920 = cast(%var_13231, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %921 = acosh(%920) /* ty=Tensor[(15, 9, 1), float64] */;
  (%921,)
}

def @func_19834() -> (Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %922 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
  %923 = %922.1;
  %924 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %925 = @func_10607() /* ty=Tensor[(6), float32] */;
  (%923, %924, %925)
}

def @func_8445() -> Tensor[(6), float32] {
  %926 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %926.1
}

def @func_21369() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %927 = @func_15422() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %928 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %929 = %927.1;
  %930 = %928.1;
  (%929, %930)
}

def @func_12398() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %931 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %932 = %931.0;
  %933 = @func_10524() /* ty=Tensor[(6), float32] */;
  (%932, %933)
}

def @func_23002() -> (Tensor[(5, 14, 8), float64],) {
  %934 = @func_16559() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %935 = %934.1;
  (%935,)
}

def @func_8456() -> (Tensor[(5, 14, 8), float64],) {
  %936 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %937 = %936.0;
  (%937,)
}

def @func_9235() -> (Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
  %938 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %939 = cast(meta[relay.Constant][54] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %940 = cast(meta[relay.Constant][55] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %941 = reshape(%939, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %942 = reshape(%940, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %943 = @func_6594(%941, %942) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %944 = %938.0;
  %945 = cast(%944, dtype="float32") /* ty=Tensor[(6), float32] */;
  %946 = reshape(%945, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %947 = @func_7652(%946) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %948 = %943.3;
  %949 = %947.0;
  (%944, %948, meta[relay.Constant][54] /* ty=Tensor[(585), float64] */, meta[relay.Constant][55] /* ty=Tensor[(40), int64] */, %949)
}

def @func_10035() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %950 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %951 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %952 = %950.0;
  (%951, %952)
}

def @func_16904() -> (Tensor[(6), float32],) {
  %953 = @func_13443() /* ty=(Tensor[(6), float32],) */;
  %954 = %953.0;
  (%954,)
}

def @func_10524() -> Tensor[(6), float32] {
  %955 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %955.1
}

def @func_15685() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %956 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %957 = @func_11528() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) */;
  %958 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %959 = %956.0;
  %960 = %957.1;
  %961 = %958.0;
  (%959, %960, %961)
}

def @func_18977() -> Tensor[(6), float32] {
  @func_17256() /* ty=Tensor[(6), float32] */
}

def @func_8673() -> (Tensor[(5, 14, 8), float64],) {
  %962 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %963 = %962.0;
  (%963,)
}

def @func_13724() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %964 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %965 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_22956() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %968 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %969 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  %970 = %968.0;
  (%969, %970)
}

def @func_18285() -> Tensor[(6), float32] {
  %971 = @func_17140() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %971.1
}

def @func_12292() -> Tensor[(5, 14, 8), float64] {
  %972 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %972.4
}

def @func_11867() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) {
  %973 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %974 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %975 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %976 = cast(meta[relay.Constant][56] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %977 = reshape(%976, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
  %978 = @func_7382(%977) /* ty=Tensor[(7, 13, 13), float32] */;
  %979 = cast(%978, dtype="int8") /* ty=Tensor[(7, 13, 13), int8] */;
  %980 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(1183), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %981 = cast(meta[relay.Constant][56] /* ty=Tensor[(1183), float32] */, dtype="int8") /* ty=Tensor[(1183), int8] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?), int8] */;
  %983 = multiply(%981, %982) /* ty=Tensor[(1183), int8] */;
  %984 = cast(%983, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %985 = %973.0;
  %986 = %974.0;
  %987 = %975.0;
  %988 = log(%984) /* ty=Tensor[(1183), float64] */;
  (%985, %986, %987, %988)
}

def @func_15801() -> (Tensor[(5, 14, 8), float64],) {
  %989 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %990 = %989.0;
  (%990,)
}

def @func_8893() -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) {
  %991 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %992 = cast(meta[relay.Constant][57] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %993 = cast(meta[relay.Constant][58] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %994 = cast(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %995 = reshape(%992, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %996 = reshape(%993, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %997 = reshape(%994, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
  %998 = @func_7541(%995, %996, %997) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
  %999 = cast(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %1000 = cos(%999) /* ty=Tensor[(23400), float64] */;
  %1001 = cast(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="uint16") /* ty=Tensor[(23400), uint16] */;
  %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1003 = cast(%1000, dtype="uint16") /* ty=Tensor[(23400), uint16] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1005 = cast(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1006 = shape_of(%1000, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1007 = cast(%1000, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1009 = cast(meta[relay.Constant][60] /* ty=Tensor[(23400), bool] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
  %1010 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1011 = cast(meta[relay.Constant][59] /* ty=Tensor[(23400), bool] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1013 = %991.0;
  %1014 = %998.1;
  %1015 = add(%1003, %1004) /* ty=Tensor[(23400), uint16] */;
  %1016 = greater_equal(%1007, %1008) /* ty=Tensor[(23400), bool] */;
  %1017 = maximum(%1011, %1012) /* ty=Tensor[(23400), int64] */;
  (%1013, %1014, meta[relay.Constant][57] /* ty=Tensor[(200), float64] */, meta[relay.Constant][58] /* ty=Tensor[(1183), float32] */, %1015, %1016, %1017)
}

def @func_11234() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1018 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1019 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1020 = %1018.0;
  %1021 = %1019.0;
  (%1020, %1021)
}

def @func_13455() -> (Tensor[(6), float32],) {
  %1022 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1023 = %1022.1;
  (%1023,)
}

def @func_14311(%var_14302: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) {
  %1024 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
  %1025 = cast(%var_14302, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
  %1026 = reshape(%1025, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1027 = @func_7436(%1026) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %1028 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %1029 = %1028.2;
  %1030 = cast(%var_14302, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
  %1031 = cast(%1029, dtype="bool") /* ty=Tensor[(6), bool] */;
  %1032 = %1024.1;
  %1033 = @func_10524() /* ty=Tensor[(6), float32] */;
  %1034 = %1027.0;
  %1035 = equal(%1030, %1031) /* ty=Tensor[(40, 6), bool] */;
  (%1032, %1033, %1034, %1035)
}

def @func_5195(%var_5156: Tensor[(672), uint8], %var_5188: Tensor[(624), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
  %1036 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %1037 = cast(%var_5156, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1038 = cast(meta[relay.Constant][62] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1039 = reshape(%1037, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %1040 = reshape(%1038, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %1041 = @func_919(%1039, %1040) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %1042 = cast(%var_5188, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1043 = cast(%var_5188, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1044 = reshape(%1042, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %1045 = reshape(%1043, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %1046 = @func_2693(%1044, %1045) /* ty=(Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) */;
  %1047 = log2(%1036) /* ty=Tensor[(7, 4, 6), float64] */;
  %1048 = %1041.0;
  %1049 = %1046.1;
  (%1047, %1048, %var_5156, meta[relay.Constant][62] /* ty=Tensor[(6), float32] */, %1049, %var_5188)
}

def @func_10206(%var_10102: Tensor[(23400), int64]) -> (Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) {
  %1050 = cast(meta[relay.Constant][63] /* ty=Tensor[(10, 4), int64] */, dtype="int64") /* ty=Tensor[(10, 4), int64] */;
  %1051 = reshape(%1050, newshape=[2, 20]) /* ty=Tensor[(2, 20), int64] */;
  %1052 = @func_9408(%1051) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) */;
  %1053 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %1054 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %1055 = %1054.6;
  %1056 = cast(%var_10102, dtype="uint32") /* ty=Tensor[(23400), uint32] */;
  %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1058 = cast(%1055, dtype="uint32") /* ty=Tensor[(23400), uint32] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %1060 = logical_xor(%1058, %1059) /* ty=Tensor[(23400), uint32] */;
  %1061 = cast(%1060, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %1062 = asinh(%1061) /* ty=Tensor[(23400), float64] */;
  %1063 = cast(%1062, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1064 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(23400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1065 = cast(meta[relay.Constant][64] /* ty=Tensor[(23400), float64] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1067 = not_equal(%1065, %1066) /* ty=Tensor[(23400), bool] */;
  %1068 = cast(%1067, dtype="float32") /* ty=Tensor[(23400), float32] */;
  %1069 = exp(%1068) /* ty=Tensor[(23400), float32] */;
  %1070 = cast(%1069, dtype="float32") /* ty=Tensor[(23400), float32] */;
  %1071 = rsqrt(%1070) /* ty=Tensor[(23400), float32] */;
  %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %1073 = acosh(%1072) /* ty=Tensor[(23400), float64] */;
  %1074 = cast(meta[relay.Constant][64] /* ty=Tensor[(23400), float64] */, dtype="int8") /* ty=Tensor[(23400), int8] */;
  %1075 = shape_of(%1062, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1076 = cast(%1062, dtype="int8") /* ty=Tensor[(23400), int8] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1078 = left_shift(%1076, %1077) /* ty=Tensor[(23400), int8] */;
  %1079 = cast(%1078, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1080 = shape_of(%1073, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1081 = cast(%1073, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1083 = %1052.2;
  %1084 = %1053.5;
  %1085 = greater(%1081, %1082) /* ty=Tensor[(23400), bool] */;
  (%1083, meta[relay.Constant][63] /* ty=Tensor[(10, 4), int64] */, %1084, %1085)
}

def @func_11145(%var_11061: Tensor[(195, 3), float64], %var_11100: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %1086 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1087 = cast(meta[relay.Constant][65] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1088 = cast(meta[relay.Constant][66] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1089 = reshape(%1087, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1090 = reshape(%1088, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1091 = @func_5195(%1089, %1090) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
  %1092 = cast(%var_11061, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
  %1093 = cast(meta[relay.Constant][67] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1094 = reshape(%1092, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %1095 = reshape(%1093, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1096 = @func_6594(%1094, %1095) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %1097 = cast(%var_11100, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1098 = cast(%var_11100, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1099 = reshape(%1097, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1100 = reshape(%1098, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1101 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1102 = %1086.1;
  %1103 = %1091.0;
  %1104 = %1096.0;
  %1105 = @func_7174(%1099, %1100) /* ty=Tensor[(12, 10, 9), int8] */;
  %1106 = %1101.0;
  (%1102, %1103, meta[relay.Constant][65] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][66] /* ty=Tensor[(624), float32] */, %1104, %var_11061, meta[relay.Constant][67] /* ty=Tensor[(40), int64] */, %1105, %var_11100, %1106)
}

def @func_22971() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(12, 10, 9), int8]) {
  %1107 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %1108 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
  %1109 = @func_18285() /* ty=Tensor[(6), float32] */;
  %1110 = %1107.1;
  (%1108, %1109, %1110)
}

def @func_5541(%var_5487: Tensor[(9, 5, 9), float64], %var_5507: Tensor[(624), float32], %var_5513: Tensor[(200), float64]) -> (Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
  %1111 = cast(%var_5487, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  %1112 = cast(meta[relay.Constant][68] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1113 = cast(%var_5507, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1114 = reshape(%1112, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1115 = reshape(%1113, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1116 = @func_5195(%1114, %1115) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
  %1117 = cast(meta[relay.Constant][69] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %1118 = cast(%var_5513, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1119 = cast(meta[relay.Constant][70] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1120 = reshape(%1117, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %1121 = reshape(%1118, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %1122 = reshape(%1119, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1123 = @func_4663(%1120, %1121, %1122) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
  %1124 = sqrt(%1111) /* ty=Tensor[(9, 5, 9), float64] */;
  %1125 = %1116.4;
  %1126 = %1123.3;
  (%1124, %1125, meta[relay.Constant][68] /* ty=Tensor[(672), uint8] */, %var_5507, %1126, meta[relay.Constant][69] /* ty=Tensor[(50), float64] */, %var_5513, meta[relay.Constant][70] /* ty=Tensor[(6), float32] */)
}

def @func_23355() -> (Tensor[(14, 16, ?), uint32],) {
  %1127 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
  %1128 = acos(%1127) /* ty=Tensor[(14, 16, 1), float64] */;
  %1129 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 16, 1), float64] */, dtype="uint32") /* ty=Tensor[(14, 16, 1), uint32] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%1128, dtype="uint32") /* ty=Tensor[(14, 16, 1), uint32] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1133 = multiply(%1131, %1132) /* ty=Tensor[(14, 16, ?), uint32] */;
  (%1133,)
}

def @func_20410(%var_20408: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %1134 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1135 = cast(%var_20408, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1136 = reshape(%1135, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1137 = @func_7436(%1136) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %1138 = %1134.0;
  %1139 = %1137.1;
  (%1138, %1139, %var_20408)
}

def @func_4663(%var_4626: Tensor[(1, 10, 5), float64], %var_4627: Tensor[(4, 10, 5), float64], %var_4645: Tensor[(6), float32]) -> (Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) {
  %1140 = cast(%var_4626, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  %1141 = cast(%var_4627, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
  %1142 = cast(meta[relay.Constant][72] /* ty=Tensor[(20, 2), int64] */, dtype="int64") /* ty=Tensor[(20, 2), int64] */;
  %1143 = reshape(%1142, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1144 = cast(meta[relay.Constant][73] /* ty=Tensor[(168, 4), uint8] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
  %1145 = cast(%var_4645, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1146 = reshape(%1144, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %1147 = reshape(%1145, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %1148 = @func_919(%1146, %1147) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %1149 = cast(meta[relay.Constant][72] /* ty=Tensor[(20, 2), int64] */, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %1150 = sigmoid(%1149) /* ty=Tensor[(20, 2), float64] */;
  %1151 = cast(%1150, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %1152 = power(%1140, %1141) /* ty=Tensor[(4, 10, 5), float64] */;
  %1153 = @func_1443(%1143) /* ty=Tensor[(8, 5, 8), int64] */;
  %1154 = %1148.2;
  %1155 = log2(%1151) /* ty=Tensor[(20, 2), float64] */;
  (%1152, %1153, %1154, meta[relay.Constant][73] /* ty=Tensor[(168, 4), uint8] */, %var_4645, %1155)
}

def @func_16091() -> Tensor[(5, 14, 8), float64] {
  %1156 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1156.0
}

def @func_11403() -> Tensor[(23400), float64] {
  %1157 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
  %1157.1
}

def @func_16575(%var_16561: Tensor[(10, 16, 1), float64]) -> (Tensor[(10, 16, 1), float64],) {
  %1158 = cast(%var_16561, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  %1159 = cos(%1158) /* ty=Tensor[(10, 16, 1), float64] */;
  (%1159,)
}

def @func_19119() -> (Tensor[(5, 14, 8), float64],) {
  %1160 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_23814() -> (Tensor[(5, 14, 8), float64],) {
  %1162 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1162,)
}

def @func_7344(%var_7308: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) {
  %1163 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1164 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1165 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1166 = reshape(%1164, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %1167 = reshape(%1165, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %1168 = @func_919(%1166, %1167) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %1169 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1170 = reshape(%1169, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %1171 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1172 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1173 = reshape(%1171, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %1174 = reshape(%1172, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %1175 = @func_919(%1173, %1174) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %1176 = %1163.1;
  %1177 = %1168.0;
  %1178 = @func_319(%1170) /* ty=Tensor[(1, 1, 6), float32] */;
  %1179 = %1175.0;
  (%1176, %1177, meta[relay.Constant][74] /* ty=Tensor[(672), uint8] */, %var_7308, %1178, %1179)
}

def @func_12460() -> (Tensor[(6), float32],) {
  %1180 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1181 = %1180.1;
  (%1181,)
}

def @func_10059(%var_10052: uint64, %var_10053: Tensor[(11, 6, 5), uint64]) -> (Tensor[(11, 6, 5), bool],) {
  %1182 = cast(%var_10052, dtype="bool") /* ty=bool */;
  %1183 = cast(%var_10053, dtype="bool") /* ty=Tensor[(11, 6, 5), bool] */;
  %1184 = less_equal(%1182, %1183) /* ty=Tensor[(11, 6, 5), bool] */;
  (%1184,)
}

def @func_22713() -> (Tensor[(5, 14, 8), float64],) {
  %1185 = @func_21687() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1186 = %1185.0;
  (%1186,)
}

def @func_11679() -> Tensor[(5, 14, 8), float64] {
  %1187 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %1187.4
}

def @func_16301() -> (Tensor[(5, 14, 8), float64],) {
  %1188 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1188,)
}

def @func_15983() -> Tensor[(1080), int8] {
  %1189 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %1189.1
}

def @func_17709() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1190 = @func_16175() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1191 = %1190.0;
  %1192 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  %1193 = @func_10607() /* ty=Tensor[(6), float32] */;
  (%1191, %1192, %1193)
}

def @func_22796() -> (Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) {
  %1194 = @func_21341() /* ty=(Tensor[(200), float64],) */;
  %1195 = @func_21369() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1196 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %1197 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1198 = %1194.0;
  %1199 = %1195.1;
  %1200 = %1196.1;
  %1201 = %1197.0;
  (%1198, %1199, %1200, %1201)
}

def @func_11528() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) {
  %1202 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
  %1203 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1204 = %1202.1;
  %1205 = %1203.0;
  (%1204, %1205)
}

def @func_16637() -> Tensor[(5, 14, 8), float64] {
  @func_12819() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_24022(%var_24019: Tensor[(672), uint8], %var_24020: Tensor[(624), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(672), uint8], Tensor[(624), float32]) {
  %1206 = @func_21010() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1207 = cast(%var_24019, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1208 = cast(%var_24020, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1209 = reshape(%1207, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1210 = reshape(%1208, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1211 = @func_5195(%1209, %1210) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
  %1212 = %1206.1;
  %1213 = %1211.2;
  (%1212, %1213, %var_24019, %var_24020)
}

def @func_8683() -> Tensor[(5, 14, 8), float64] {
  %1214 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1214.1
}

def @func_12819() -> Tensor[(5, 14, 8), float64] {
  @func_12441() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_14731(%var_14722: Tensor[(585), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(585), float64], Tensor[(40), int64]) {
  %1215 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1216 = cast(%var_14722, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1217 = cast(meta[relay.Constant][75] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1218 = reshape(%1216, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %1219 = reshape(%1217, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1220 = @func_6594(%1218, %1219) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %1221 = %1215.1;
  %1222 = %1220.2;
  (%1221, %1222, %var_14722, meta[relay.Constant][75] /* ty=Tensor[(40), int64] */)
}

def @func_16140() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1223 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
  %1224 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1225 = %1223.0;
  %1226 = %1224.0;
  %1227 = @func_10524() /* ty=Tensor[(6), float32] */;
  (%1225, %1226, %1227)
}

def @func_24127() -> (Tensor[(5, 14, 8), float64],) {
  %1228 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_7960() -> (Tensor[(5, 14, 8), float64],) {
  %1230 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_23243() -> (Tensor[(23400), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1232 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1233 = @func_22634() /* ty=Tensor[(23400), float64] */;
  %1234 = @func_18977() /* ty=Tensor[(6), float32] */;
  %1235 = %1232.3;
  (%1233, %1234, %1235)
}

def @func_17140() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1236 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1237 = %1236.0;
  %1238 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%1237, %1238)
}

def @func_19985() -> (Tensor[(6), float32],) {
  %1239 = @func_13443() /* ty=(Tensor[(6), float32],) */;
  %1240 = %1239.0;
  (%1240,)
}

def @func_16969() -> (Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
  %1241 = cast(meta[relay.Constant][76] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1242 = reshape(%1241, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1243 = @func_14940(%1242) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1244 = @func_9840() /* ty=Tensor[(6), float32] */;
  %1245 = %1243.2;
  (%1244, %1245, meta[relay.Constant][76] /* ty=Tensor[(40), int64] */)
}

def @func_23427() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1246 = @func_15961() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1247 = @func_23002() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1248 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1249 = %1246.1;
  %1250 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  %1251 = %1247.0;
  %1252 = %1248.0;
  (%1249, %1250, %1251, %1252)
}

def @func_12933() -> (Tensor[(5, 14, 8), float64],) {
  %1253 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1253,)
}

def @func_23563() -> Tensor[(6), float32] {
  @func_16195() /* ty=Tensor[(6), float32] */
}

def @func_12956() -> Tensor[(6), float32] {
  @func_9840() /* ty=Tensor[(6), float32] */
}

def @func_17507() -> Tensor[(5, 14, 8), float32] {
  @func_8742() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_19561() -> Tensor[(5, 13, 9), float64] {
  @func_16815() /* ty=Tensor[(5, 13, 9), float64] */
}

def @func_15720() -> Tensor[(5, 14, 8), float64] {
  @func_12263() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_23766() -> Tensor[(23400), float64] {
  @func_17206() /* ty=Tensor[(23400), float64] */
}

def @func_9795() -> (Tensor[(5, 14, 8), float64],) {
  %1254 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %1255 = %1254.2;
  (%1255,)
}

def @func_14451() -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %1256 = @func_13443() /* ty=(Tensor[(6), float32],) */;
  %1257 = cast(meta[relay.Constant][77] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1258 = reshape(%1257, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1259 = %1256.0;
  %1260 = @func_1443(%1258) /* ty=Tensor[(8, 5, 8), int64] */;
  (%1259, %1260, meta[relay.Constant][77] /* ty=Tensor[(40), int64] */)
}

def @func_18154() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
  %1261 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1262 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1263 = @func_14741() /* ty=Tensor[(5, 14, 8), float64] */;
  %1264 = cast(%1263, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1265 = reshape(%1264, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %1266 = @func_7805(%1265) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %1267 = %1261.2;
  %1268 = @func_9974() /* ty=Tensor[(6), float32] */;
  %1269 = %1262.0;
  %1270 = %1266.0;
  (%1267, %1263, %1268, %1269, %1270)
}

def @func_23108() -> Tensor[(6), float32] {
  %1271 = @func_21935() /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %1271.0
}

def @func_22692() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1272 = @func_21309() /* ty=(Tensor[(40), int64], Tensor[(6), float32]) */;
  %1273 = @func_13724() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1274 = %1272.1;
  %1275 = %1273.1;
  (%1274, %1275)
}

def @func_14741() -> Tensor[(5, 14, 8), float64] {
  %1276 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %1276.0
}

def @func_9840() -> Tensor[(6), float32] {
  @func_8445() /* ty=Tensor[(6), float32] */
}

def @func_14183() -> (Tensor[(5, 14, 8), float64],) {
  %1277 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1277,)
}

def @func_7382(%var_7364: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
  %1278 = cast(%var_7364, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
  %1279 = acosh(%1278) /* ty=Tensor[(7, 13, 13), float32] */;
  %1280 = cast(%1279, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
  exp(%1280) /* ty=Tensor[(7, 13, 13), float32] */
}

def @func_22881() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1281 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %1282 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1283 = %1281.0;
  %1284 = %1282.3;
  (%1283, %1284)
}

def @func_8742() -> Tensor[(5, 14, 8), float32] {
  %1285 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1286 = %1285.0;
  %1287 = cast(%1286, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  log2(%1287) /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_23952() -> (Tensor[(6), float32], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 16, ?), uint32], Tensor[(5, 14, 8), float64]) {
  %1288 = @func_16140() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %1289 = @func_22796() /* ty=(Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) */;
  %1290 = @func_21740() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */;
  %1291 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1292 = @func_22881() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1293 = @func_23355() /* ty=(Tensor[(14, 16, ?), uint32],) */;
  %1294 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1295 = %1288.2;
  %1296 = %1289.2;
  %1297 = %1290.0;
  %1298 = %1291.0;
  %1299 = %1292.0;
  %1300 = %1293.0;
  %1301 = %1294.0;
  (%1295, %1296, %1297, %1298, %1299, %1300, %1301)
}

def @func_15197(%var_15067: Tensor[(200), float64], %var_15071: Tensor[(1560), uint16], %var_15134: Tensor[(20, 2), float32], %var_15166: Tensor[(20, 2), float64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(20, 2), int32], Tensor[(200), float64]) {
  %1302 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
  %1303 = cast(%var_15071, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %1304 = @func_9974() /* ty=Tensor[(6), float32] */;
  %1305 = cast(%1304, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1306 = cast(meta[relay.Constant][79] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1307 = reshape(%1303, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
  %1308 = reshape(%1305, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1309 = reshape(%1306, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %1310 = @func_13208(%1307, %1308, %1309) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
  %1311 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1312 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1313 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1314 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %1315 = cast(meta[relay.Constant][78] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %1316 = cast(%var_15067, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1317 = %1302.0;
  %1318 = cast(%1317, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1319 = reshape(%1315, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %1320 = reshape(%1316, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %1321 = reshape(%1318, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1322 = @func_4663(%1319, %1320, %1321) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
  %1323 = %1322.5;
  %1324 = cast(%1323, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %1325 = cos(%1324) /* ty=Tensor[(20, 2), float64] */;
  %1326 = cast(%1325, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1327 = exp(%1326) /* ty=Tensor[(20, 2), float32] */;
  %1328 = cast(%var_15134, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
  %1329 = shape_of(%1327, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1330 = cast(%1327, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
  %1331 = dyn.reshape(%1328, %1329, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1332 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %1333 = cast(%var_15166, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
  %1334 = shape_of(%1325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1335 = cast(%1325, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
  %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1337 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1338 = cast(%1327, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1339 = asinh(%1338) /* ty=Tensor[(20, 2), float32] */;
  %1340 = cast(%1327, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1341 = sin(%1340) /* ty=Tensor[(20, 2), float32] */;
  %1342 = cast(%1341, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1343 = shape_of(%1339, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1344 = cast(%1339, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1345 = dyn.reshape(%1342, %1343, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1346 = maximum(%1344, %1345) /* ty=Tensor[(20, 2), float32] */;
  %1347 = cast(%var_15166, dtype="int32") /* ty=Tensor[(20, 2), int32] */;
  %1348 = shape_of(%1346, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1349 = cast(%1346, dtype="int32") /* ty=Tensor[(20, 2), int32] */;
  %1350 = dyn.reshape(%1347, %1348, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1351 = @func_12070() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(200), float64]) */;
  %1352 = %1310.3;
  %1353 = %1311.1;
  %1354 = %1312.1;
  %1355 = %1313.0;
  %1356 = %1314.1;
  %1357 = greater(%1330, %1331) /* ty=Tensor[(20, 2), bool] */;
  %1358 = %1332.1;
  %1359 = logical_and(%1335, %1336) /* ty=Tensor[(20, 2), bool] */;
  %1360 = %1337.0;
  %1361 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %1362 = bitwise_and(%1349, %1350) /* ty=Tensor[(20, 2), int32] */;
  %1363 = %1351.1;
  (%1317, %1304, meta[relay.Constant][78] /* ty=Tensor[(50), float64] */, %var_15067, %1352, %var_15071, meta[relay.Constant][79] /* ty=Tensor[(1080), int8] */, %1353, %1354, %1355, %1356, %1357, %1358, %1359, %1360, %1361, %1362, %1363)
}

def @func_12553() -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %1364 = cast(meta[relay.Constant][80] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1365 = reshape(%1364, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1366 = @func_11970() /* ty=Tensor[(6), float32] */;
  %1367 = @func_1443(%1365) /* ty=Tensor[(8, 5, 8), int64] */;
  (%1366, %1367, meta[relay.Constant][80] /* ty=Tensor[(40), int64] */)
}

def @func_1443(%var_1426: Tensor[(8, 5, 1), int64]) -> Tensor[(8, 5, 8), int64] {
  %1368 = cast(%var_1426, dtype="int64") /* ty=Tensor[(8, 5, 1), int64] */;
  %1369 = cast(meta[relay.Constant][81] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int64") /* ty=Tensor[(8, 5, 8), int64] */;
  minimum(%1368, %1369) /* ty=Tensor[(8, 5, 8), int64] */
}

def @func_10607() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_20551() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1370 = @func_18090() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) */;
  %1371 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1372 = %1370.1;
  %1373 = %1371.0;
  (%1372, %1373)
}

def @func_14252() -> Tensor[(5, 14, 8), float64] {
  %1374 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %1374.0
}

def @func_7436(%var_7434: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %1375 = cast(%var_7434, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1376 = reshape(%1375, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1377 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %1378 = @func_1443(%1376) /* ty=Tensor[(8, 5, 8), int64] */;
  (%1377, %1378, %var_7434)
}

def @func_9269() -> Tensor[(1080), int8] {
  %1379 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %1379.1
}

def @func_7412() -> Tensor[(5, 14, 8), float64] {
  %1380 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1380.1
}

def @func_8775() -> Tensor[(5, 14, 8), float64] {
  %1381 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1381.0
}

def @func_13104() -> (Tensor[(6), float32], Tensor[(6), float32]) {
  %1382 = @func_12916() /* ty=(Tensor[(6), float32],) */;
  %1383 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1384 = %1382.0;
  %1385 = %1383.1;
  (%1384, %1385)
}

def @func_20942() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float32]) {
  %1386 = @func_11897() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1387 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %1388 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1389 = @func_19963() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) */;
  %1390 = %1386.0;
  %1391 = %1387.0;
  %1392 = %1388.0;
  %1393 = %1389.0;
  (%1390, %1391, %1392, %1393)
}

def @func_19464() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %1394 = cast(meta[relay.Constant][82] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1395 = reshape(%1394, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1396 = @func_7344(%1395) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %1397 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  %1398 = %1396.3;
  (%1397, %1398, meta[relay.Constant][82] /* ty=Tensor[(6), float32] */)
}

def @func_8546() -> (Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %1399 = cast(meta[relay.Constant][83] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1400 = cast(meta[relay.Constant][83] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1401 = reshape(%1399, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1402 = reshape(%1400, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1403 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1404 = %1403.1;
  %1405 = cast(%1404, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1406 = @func_7174(%1401, %1402) /* ty=Tensor[(12, 10, 9), int8] */;
  %1407 = atanh(%1405) /* ty=Tensor[(5, 14, 8), float64] */;
  (%1406, meta[relay.Constant][83] /* ty=Tensor[(1080), int8] */, %1407)
}

def @func_20073() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1408 = @func_11234() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1409 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %1410 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1411 = %1408.1;
  %1412 = %1409.1;
  %1413 = %1410.0;
  %1414 = @func_16779() /* ty=Tensor[(6), float32] */;
  (%1411, %1412, %1413, %1414)
}

def @func_21309() -> (Tensor[(40), int64], Tensor[(6), float32]) {
  %1415 = @func_16969() /* ty=(Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) */;
  %1416 = @func_19834() /* ty=(Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %1417 = %1415.2;
  %1418 = %1416.2;
  (%1417, %1418)
}

def @func_15464(%var_15456: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) {
  %1419 = cast(%var_15456, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
  %1420 = reshape(%1419, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1421 = @func_14940(%1420) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1422 = @func_9974() /* ty=Tensor[(6), float32] */;
  %1423 = %1421.0;
  (%1422, %1423, %var_15456)
}

def @func_18561() -> (Tensor[(6), float32],) {
  %1424 = @func_17256() /* ty=Tensor[(6), float32] */;
  (%1424,)
}

def @func_22905() -> (Tensor[(6), float32],) {
  %1425 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%1425,)
}

def @func_10287() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
  %1426 = @func_8445() /* ty=Tensor[(6), float32] */;
  %1427 = cast(%1426, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1428 = reshape(%1427, newshape=[6, 1]) /* ty=Tensor[(6, 1), float32] */;
  %1429 = @func_9345(%1428) /* ty=(Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) */;
  %1430 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %1431 = %1429.0;
  (%1430, %1426, %1431)
}

def @func_7710() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1432 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1433 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %1434 = %1432.0;
  (%1433, %1434)
}

def @func_9345(%var_9330: Tensor[(6, 1), float32]) -> (Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) {
  %1435 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %1436 = cast(%var_9330, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %1437 = reshape(%1436, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %1438 = @func_319(%1437) /* ty=Tensor[(1, 1, 6), float32] */;
  %1439 = cast(%var_9330, dtype="uint64") /* ty=Tensor[(6, 1), uint64] */;
  %1440 = shape_of(%1438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1441 = cast(%1438, dtype="uint64") /* ty=Tensor[(1, 1, 6), uint64] */;
  %1442 = dyn.reshape(%1439, %1440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1443 = %1435.1;
  %1444 = bitwise_or(%1441, %1442) /* ty=Tensor[(?, ?, 6), uint64] */;
  (%1443, %1444)
}

def @func_9974() -> Tensor[(6), float32] {
  %1445 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %1445.0
}

def @func_7652(%var_7650: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %1446 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1447 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1448 = cast(%var_7650, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1449 = reshape(%1448, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1450 = @func_7344(%1449) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %1451 = %1446.1;
  %1452 = %1447.1;
  %1453 = %1450.3;
  (%1451, %1452, %1453, %var_7650)
}

def @func_12070() -> (Tensor[(5, 14, 8), float64], Tensor[(200), float64]) {
  %1454 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1455 = %1454.0;
  %1456 = cast(%1455, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1457 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %1458 = cosh(%1456) /* ty=Tensor[(5, 14, 8), float64] */;
  %1459 = %1457.2;
  (%1458, %1459)
}

def @func_13502() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1460 = @func_13455() /* ty=(Tensor[(6), float32],) */;
  %1461 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
  %1462 = %1460.0;
  (%1461, %1462)
}

def @func_16815() -> Tensor[(5, 13, 9), float64] {
  %1463 = @func_9783() /* ty=(Tensor[(5, 13, 9), float64],) */;
  %1463.0
}

def @func_11670() -> Tensor[(5, 14, 8), float64] {
  %1464 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1464.1
}

def @func_17872() -> Tensor[(5, 14, 8), float64] {
  @func_7412() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_8176() -> (Tensor[(5, 14, 8), float64],) {
  %1465 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1465,)
}

def @func_10898(%var_10873: Tensor[(11, 10, 16), float32]) -> (Tensor[(11, 10, 16), float32],) {
  %1466 = cast(%var_10873, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
  %1467 = asin(%1466) /* ty=Tensor[(11, 10, 16), float32] */;
  (%1467,)
}

def @func_21935() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1468 = @func_21309() /* ty=(Tensor[(40), int64], Tensor[(6), float32]) */;
  %1469 = %1468.1;
  %1470 = @func_20605() /* ty=Tensor[(6), float32] */;
  %1471 = @func_14741() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1469, %1470, %1471)
}

def @func_20605() -> Tensor[(6), float32] {
  %1472 = @func_18561() /* ty=(Tensor[(6), float32],) */;
  %1472.0
}

def @func_15856() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1473 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1474 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %1475 = %1473.0;
  %1476 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %1477 = %1474.2;
  (%1475, %1476, %1477)
}

def @func_15422() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1478 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1479 = @func_10524() /* ty=Tensor[(6), float32] */;
  %1480 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
  %1481 = %1478.0;
  (%1479, %1480, %1481)
}

def @func_13249() -> (Tensor[(5, 14, 8), float64],) {
  %1482 = @func_12410() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1482,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_21370() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %4 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %0 = @func_15422() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %2 = %0.1;
    %3 = %1.1;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_10208(%var_10207: Tensor[(23400), int64]) -> (Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) {
  %41 = fn (%var_10102: Tensor[(23400), int64]) -> (Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) {
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 4), int64] */, dtype="int64") /* ty=Tensor[(10, 4), int64] */;
    %6 = reshape(%5, newshape=[2, 20]) /* ty=Tensor[(2, 20), int64] */;
    %7 = @func_9408(%6) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) */;
    %8 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %9 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %10 = %9.6;
    %11 = cast(%var_10102, dtype="uint32") /* ty=Tensor[(23400), uint32] */;
    %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(1), int32] */;
    %13 = cast(%10, dtype="uint32") /* ty=Tensor[(23400), uint32] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %15 = logical_xor(%13, %14) /* ty=Tensor[(23400), uint32] */;
    %16 = cast(%15, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %17 = asinh(%16) /* ty=Tensor[(23400), float64] */;
    %18 = cast(%17, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %19 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(23400), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(23400), float64] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?), bool] */;
    %22 = not_equal(%20, %21) /* ty=Tensor[(23400), bool] */;
    %23 = cast(%22, dtype="float32") /* ty=Tensor[(23400), float32] */;
    %24 = exp(%23) /* ty=Tensor[(23400), float32] */;
    %25 = cast(%24, dtype="float32") /* ty=Tensor[(23400), float32] */;
    %26 = rsqrt(%25) /* ty=Tensor[(23400), float32] */;
    %27 = cast(%26, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %28 = acosh(%27) /* ty=Tensor[(23400), float64] */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(23400), float64] */, dtype="int8") /* ty=Tensor[(23400), int8] */;
    %30 = shape_of(%17, dtype="int32") /* ty=Tensor[(1), int32] */;
    %31 = cast(%17, dtype="int8") /* ty=Tensor[(23400), int8] */;
    %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?), int8] */;
    %33 = left_shift(%31, %32) /* ty=Tensor[(23400), int8] */;
    %34 = cast(%33, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %35 = shape_of(%28, dtype="int32") /* ty=Tensor[(1), int32] */;
    %36 = cast(%28, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?), bool] */;
    %38 = %7.2;
    %39 = %8.5;
    %40 = greater(%36, %37) /* ty=Tensor[(23400), bool] */;
    (%38, meta[relay.Constant][0] /* ty=Tensor[(10, 4), int64] */, %39, %40)
  };
  %41(%var_10207) /* ty=(Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) */
}

def @func_22881() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %42 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %43 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %44 = %42.0;
  %45 = %43.3;
  (%44, %45)
}

def @func_7414() -> Tensor[(5, 14, 8), float64] {
  @func_7412() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_23149(%var_23118: Tensor[(9, 8, 7), int16], %var_23119: Tensor[(9, 8, 7), int16]) -> Tensor[(9, 8, 7), bool] {
  %46 = cast(%var_23119, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  %47 = shape_of(%var_23118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_23118, dtype="bool") /* ty=Tensor[(9, 8, 7), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%48, %49) /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_10423() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %50 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %51 = %50.0;
  %52 = @func_8683() /* ty=Tensor[(5, 14, 8), float64] */;
  (%51, %52)
}

def @func_7347(%var_7345: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) {
  @func_7344(%var_7345) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */
}

def @func_23427() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %53 = @func_15961() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %54 = @func_23002() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %55 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %56 = %53.1;
  %57 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  %58 = %54.0;
  %59 = %55.0;
  (%56, %57, %58, %59)
}

def @func_12555() -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */
}

def @func_21010() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %60 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %61 = @func_14662() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %62 = %60.0;
  %63 = %61.0;
  (%62, %63)
}

def @func_9450() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %64 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %65 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %66 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %67 = %64.0;
  %68 = %65.2;
  %69 = %66.0;
  (%67, %68, %69)
}

def @func_14254() -> Tensor[(5, 14, 8), float64] {
  @func_14252() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_24043() -> (Tensor[(6), float32],) {
  %71 = fn () -> (Tensor[(6), float32],) {
    %70 = @func_8445() /* ty=Tensor[(6), float32] */;
    (%70,)
  };
  %71() /* ty=(Tensor[(6), float32],) */
}

def @func_12072() -> (Tensor[(5, 14, 8), float64], Tensor[(200), float64]) {
  @func_12070() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(200), float64]) */
}

def @func_24166() -> (Tensor[(8, 2, 16), float32], Tensor[(5, 14, 8), float64]) {
  %72 = @func_22144() /* ty=(Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) */;
  %73 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %74 = %72.0;
  %75 = %73.2;
  (%74, %75)
}

def @func_21937() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  @func_21935() /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_22714() -> (Tensor[(5, 14, 8), float64],) {
  %78 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %76 = @func_21687() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %77 = %76.0;
    (%77,)
  };
  %78() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_15302() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_17221() -> (Tensor[(5, 14, 8), float64],) {
  %79 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
  (%79,)
}

def @func_22849(%var_22848: Tensor[(7, 2, 7), uint8]) -> Tensor[(7, 2, 7), bool] {
  %84 = fn (%var_22834: Tensor[(7, 2, 7), uint8]) -> Tensor[(7, 2, 7), bool] {
    %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 2, 7), uint8] */, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
    %81 = shape_of(%var_22834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %82 = cast(%var_22834, dtype="bool") /* ty=Tensor[(7, 2, 7), bool] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%82, %83) /* ty=Tensor[(7, 2, 7), bool] */
  };
  %84(%var_22848) /* ty=Tensor[(7, 2, 7), bool] */
}

def @func_8683() -> Tensor[(5, 14, 8), float64] {
  %85 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %85.1
}

def @func_23855() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_23853() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_14810() -> (Tensor[(5, 14, 8), float64],) {
  %86 = @func_14644() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %87 = %86.2;
  (%87,)
}

def @func_23003() -> (Tensor[(5, 14, 8), float64],) {
  %90 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %88 = @func_16559() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %89 = %88.1;
    (%89,)
  };
  %90() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_19121() -> (Tensor[(5, 14, 8), float64],) {
  @func_19119() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_16560() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %94 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
    %91 = @func_8811() /* ty=(Tensor[(6), float32],) */;
    %92 = %91.0;
    %93 = @func_11679() /* ty=Tensor[(5, 14, 8), float64] */;
    (%92, %93)
  };
  %94() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_21607() -> (Tensor[(6), float32],) {
  %97 = fn () -> (Tensor[(6), float32],) {
    %95 = @func_12916() /* ty=(Tensor[(6), float32],) */;
    %96 = %95.0;
    (%96,)
  };
  %97() /* ty=(Tensor[(6), float32],) */
}

def @func_19965() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) {
  @func_19963() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) */
}

def @func_12916() -> (Tensor[(6), float32],) {
  %98 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %99 = %98.1;
  (%99,)
}

def @func_8615(%var_8613: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(1, 1, 6), float32], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(18, 60), int8]) {
  @func_8612(%var_8613) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1, 1, 6), float32], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(18, 60), int8]) */
}

def @func_11679() -> Tensor[(5, 14, 8), float64] {
  %100 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %100.4
}

def @func_19235() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(1183), float32], Tensor[(6), float32]) {
  @func_19233() /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(1183), float32], Tensor[(6), float32]) */
}

def @func_7749() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %107 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
    %101 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %102 = cast(meta[relay.Constant][3] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %103 = reshape(%102, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %104 = @func_7344(%103) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
    %105 = %101.1;
    %106 = %104.3;
    (%105, %106, meta[relay.Constant][3] /* ty=Tensor[(6), float32] */)
  };
  %107() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */
}

def @func_21012() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_21010() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_20075() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  @func_20073() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_20862(%var_20785: Tensor[(2640), float64], %var_20802: Tensor[(1, 40), int64]) -> (Tensor[(6), float32], Tensor[(15, 11, 16), float64], Tensor[(2640), float64], Tensor[(12, 10, 9), int8], Tensor[(1, 40), float64]) {
  %108 = @func_16904() /* ty=(Tensor[(6), float32],) */;
  %109 = cast(%var_20785, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %110 = reshape(%109, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float64] */;
  %111 = @func_10763(%110) /* ty=(Tensor[(15, 11, 16), float64],) */;
  %112 = cast(%var_20802, dtype="int64") /* ty=Tensor[(1, 40), int64] */;
  %113 = reshape(%112, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %114 = @func_9604(%113) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %115 = cast(%var_20802, dtype="float32") /* ty=Tensor[(1, 40), float32] */;
  %116 = log(%115) /* ty=Tensor[(1, 40), float32] */;
  %117 = cast(%116, dtype="float64") /* ty=Tensor[(1, 40), float64] */;
  %118 = %108.0;
  %119 = %111.0;
  %120 = %114.3;
  %121 = asin(%117) /* ty=Tensor[(1, 40), float64] */;
  (%118, %119, %var_20785, %120, %121)
}

def @func_18978() -> Tensor[(6), float32] {
  %122 = fn () -> Tensor[(6), float32] {
    @func_17256() /* ty=Tensor[(6), float32] */
  };
  %122() /* ty=Tensor[(6), float32] */
}

def @func_19341(%var_19337: Tensor[(10, 5, 5), float32], %var_19338: Tensor[(10, 5, 5), float32], %var_19339: Tensor[(91, 13), float32], %var_19340: Tensor[(23400), bool]) -> (Tensor[(10, 5, 5), float32], Tensor[(100, 2), float64], Tensor[(50, 4), float64], Tensor[(91, 13), float32], Tensor[(23400), bool], Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8]) {
  @func_19335(%var_19337, %var_19338, %var_19339, %var_19340) /* ty=(Tensor[(10, 5, 5), float32], Tensor[(100, 2), float64], Tensor[(50, 4), float64], Tensor[(91, 13), float32], Tensor[(23400), bool], Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8]) */
}

def @func_2696(%var_2694: Tensor[(13, 12, 4), float32], %var_2695: Tensor[(13, 12, 4), float32]) -> (Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) {
  %135 = fn (%var_2666: Tensor[(13, 12, 4), float32], %var_2687: Tensor[(13, 12, 4), float32]) -> (Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) {
    %123 = cast(%var_2666, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
    %124 = acos(%123) /* ty=Tensor[(13, 12, 4), float32] */;
    %125 = cast(%124, dtype="uint32") /* ty=Tensor[(13, 12, 4), uint32] */;
    %126 = shape_of(%var_2666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %127 = cast(%var_2666, dtype="uint32") /* ty=Tensor[(13, 12, 4), uint32] */;
    %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %129 = cast(%var_2687, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
    %130 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%124, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %133 = maximum(%127, %128) /* ty=Tensor[(13, 12, 4), uint32] */;
    %134 = power(%131, %132) /* ty=Tensor[(13, 12, 4), float32] */;
    (%133, %134)
  };
  %135(%var_2694, %var_2695) /* ty=(Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) */
}

def @func_10036() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %139 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %136 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %137 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    %138 = %136.0;
    (%137, %138)
  };
  %139() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_22956() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %140 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %141 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  %142 = %140.0;
  (%141, %142)
}

def @func_18015(%var_18013: Tensor[(200), float64], %var_18014: Tensor[(1183), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) {
  %164 = fn (%var_18002: Tensor[(200), float64], %var_18003: Tensor[(1183), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) {
    %143 = @func_12766() /* ty=(Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
    %144 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
    %145 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %146 = @func_17895() /* ty=(Tensor[(6), float32],) */;
    %147 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
    %148 = cast(%var_18002, dtype="float64") /* ty=Tensor[(200), float64] */;
    %149 = cast(%var_18003, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %150 = cast(meta[relay.Constant][4] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %151 = reshape(%148, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %152 = reshape(%149, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
    %153 = reshape(%150, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
    %154 = @func_7541(%151, %152, %153) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
    %155 = @func_17567() /* ty=Tensor[(5, 14, 8), float64] */;
    %156 = %143.1;
    %157 = %144.1;
    %158 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
    %159 = %145.1;
    %160 = %146.0;
    %161 = %147.0;
    %162 = %154.9;
    %163 = @func_16779() /* ty=Tensor[(6), float32] */;
    (%155, %156, %157, %158, %159, %160, %161, %162, %var_18002, %var_18003, meta[relay.Constant][4] /* ty=Tensor[(23400), bool] */, %163)
  };
  %164(%var_18013, %var_18014) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) */
}

def @func_8784() -> Tensor[(5, 14, 8), float32] {
  @func_8782() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_8950(%var_8948: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) {
  %165 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %167 = cast(%var_8948, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %168 = reshape(%166, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
  %169 = reshape(%167, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %170 = @func_6594(%168, %169) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
  %171 = %165.0;
  %172 = %170.0;
  (%171, %172, meta[relay.Constant][5] /* ty=Tensor[(585), float64] */, %var_8948)
}

def @func_21311() -> (Tensor[(40), int64], Tensor[(6), float32]) {
  @func_21309() /* ty=(Tensor[(40), int64], Tensor[(6), float32]) */
}

def @func_15764(%var_15763: Tensor[(1, 1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(1, 1080), int8], Tensor[(5, 14, 8), float64]) {
  %180 = fn (%var_15737: Tensor[(1, 1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(1, 1080), int8], Tensor[(5, 14, 8), float64]) {
    %173 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %174 = cast(%var_15737, dtype="int8") /* ty=Tensor[(1, 1080), int8] */;
    %175 = reshape(%174, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %176 = @func_8115(%175) /* ty=(Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) */;
    %177 = %173.1;
    %178 = %176.2;
    %179 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
    (%177, %178, %var_15737, %179)
  };
  %180(%var_15763) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(1, 1080), int8], Tensor[(5, 14, 8), float64]) */
}

def @func_17328() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %186 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %181 = @func_15422() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %182 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %183 = %181.2;
    %184 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
    %185 = %182.1;
    (%183, %184, %185)
  };
  %186() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_8445() -> Tensor[(6), float32] {
  %187 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %187.1
}

def @func_14742() -> Tensor[(5, 14, 8), float64] {
  %189 = fn () -> Tensor[(5, 14, 8), float64] {
    %188 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %188.0
  };
  %189() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_7436(%var_7434: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %190 = cast(%var_7434, dtype="int64") /* ty=Tensor[(40), int64] */;
  %191 = reshape(%190, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %192 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %193 = @func_1443(%191) /* ty=Tensor[(8, 5, 8), int64] */;
  (%192, %193, %var_7434)
}

def @func_14185() -> (Tensor[(5, 14, 8), float64],) {
  @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_7962() -> (Tensor[(5, 14, 8), float64],) {
  @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_13551(%var_13550: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
  %206 = fn (%var_13530: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
    %194 = @func_11234() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %195 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %196 = cast(meta[relay.Constant][6] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %197 = cast(%var_13530, dtype="float64") /* ty=Tensor[(200), float64] */;
    %198 = cast(meta[relay.Constant][7] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %199 = reshape(%196, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
    %200 = reshape(%197, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
    %201 = reshape(%198, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %202 = @func_4663(%199, %200, %201) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
    %203 = %194.1;
    %204 = %195.0;
    %205 = %202.4;
    (%203, %204, %205, meta[relay.Constant][6] /* ty=Tensor[(50), float64] */, %var_13530, meta[relay.Constant][7] /* ty=Tensor[(6), float32] */)
  };
  %206(%var_13550) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) */
}

def @func_18768(%var_18592: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  %207 = @func_12070() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(200), float64]) */;
  %208 = cast(%var_18592, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %209 = reshape(%208, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %210 = @func_18191(%209) /* ty=(Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %211 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %212 = @func_14644() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %213 = @func_13455() /* ty=(Tensor[(6), float32],) */;
  %214 = %207.0;
  %215 = %210.3;
  %216 = %211.2;
  %217 = %212.2;
  %218 = %213.0;
  %219 = @func_13404() /* ty=Tensor[(5, 14, 8), float64] */;
  %220 = @func_9126() /* ty=Tensor[(5, 14, 8), float64] */;
  %221 = @func_16815() /* ty=Tensor[(5, 13, 9), float64] */;
  (%214, %215, %var_18592, %216, %217, %218, %219, %220, %221)
}

def @func_16406() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %222 = @func_15233() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %223 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %224 = %222.0;
  %225 = %223.0;
  (%224, %225)
}

def @func_17223() -> (Tensor[(5, 14, 8), float64],) {
  @func_17221() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_15202(%var_15198: Tensor[(200), float64], %var_15199: Tensor[(1560), uint16], %var_15200: Tensor[(20, 2), float32], %var_15201: Tensor[(20, 2), float64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(20, 2), int32], Tensor[(200), float64]) {
  %288 = fn (%var_15067: Tensor[(200), float64], %var_15071: Tensor[(1560), uint16], %var_15134: Tensor[(20, 2), float32], %var_15166: Tensor[(20, 2), float64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(20, 2), int32], Tensor[(200), float64]) {
    %226 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
    %227 = cast(%var_15071, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %228 = @func_9974() /* ty=Tensor[(6), float32] */;
    %229 = cast(%228, dtype="float32") /* ty=Tensor[(6), float32] */;
    %230 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %231 = reshape(%227, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
    %232 = reshape(%229, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %233 = reshape(%230, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %234 = @func_13208(%231, %232, %233) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
    %235 = @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %236 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %237 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %238 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
    %239 = cast(meta[relay.Constant][8] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %240 = cast(%var_15067, dtype="float64") /* ty=Tensor[(200), float64] */;
    %241 = %226.0;
    %242 = cast(%241, dtype="float32") /* ty=Tensor[(6), float32] */;
    %243 = reshape(%239, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
    %244 = reshape(%240, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
    %245 = reshape(%242, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %246 = @func_4663(%243, %244, %245) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
    %247 = %246.5;
    %248 = cast(%247, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
    %249 = cos(%248) /* ty=Tensor[(20, 2), float64] */;
    %250 = cast(%249, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %251 = exp(%250) /* ty=Tensor[(20, 2), float32] */;
    %252 = cast(%var_15134, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
    %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(2), int32] */;
    %254 = cast(%251, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %256 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %257 = cast(%var_15166, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
    %258 = shape_of(%249, dtype="int32") /* ty=Tensor[(2), int32] */;
    %259 = cast(%249, dtype="bool") /* ty=Tensor[(20, 2), bool] */;
    %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %261 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %262 = cast(%251, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %263 = asinh(%262) /* ty=Tensor[(20, 2), float32] */;
    %264 = cast(%251, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %265 = sin(%264) /* ty=Tensor[(20, 2), float32] */;
    %266 = cast(%265, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %267 = shape_of(%263, dtype="int32") /* ty=Tensor[(2), int32] */;
    %268 = cast(%263, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %270 = maximum(%268, %269) /* ty=Tensor[(20, 2), float32] */;
    %271 = cast(%var_15166, dtype="int32") /* ty=Tensor[(20, 2), int32] */;
    %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(2), int32] */;
    %273 = cast(%270, dtype="int32") /* ty=Tensor[(20, 2), int32] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %275 = @func_12070() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(200), float64]) */;
    %276 = %234.3;
    %277 = %235.1;
    %278 = %236.1;
    %279 = %237.0;
    %280 = %238.1;
    %281 = greater(%254, %255) /* ty=Tensor[(20, 2), bool] */;
    %282 = %256.1;
    %283 = logical_and(%259, %260) /* ty=Tensor[(20, 2), bool] */;
    %284 = %261.0;
    %285 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    %286 = bitwise_and(%273, %274) /* ty=Tensor[(20, 2), int32] */;
    %287 = %275.1;
    (%241, %228, meta[relay.Constant][8] /* ty=Tensor[(50), float64] */, %var_15067, %276, %var_15071, meta[relay.Constant][9] /* ty=Tensor[(1080), int8] */, %277, %278, %279, %280, %281, %282, %283, %284, %285, %286, %287)
  };
  %288(%var_15198, %var_15199, %var_15200, %var_15201) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(6), float32], Tensor[(20, 2), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(20, 2), int32], Tensor[(200), float64]) */
}

def @func_9604(%var_9538: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) {
  %289 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %290 = cast(%var_9538, dtype="int64") /* ty=Tensor[(40), int64] */;
  %291 = reshape(%290, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %292 = @func_7436(%291) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %293 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %294 = %289.2;
  %295 = %292.1;
  %296 = %293.0;
  (%294, %295, %var_9538, %296)
}

def @func_10900(%var_10899: Tensor[(11, 10, 16), float32]) -> (Tensor[(11, 10, 16), float32],) {
  %299 = fn (%var_10873: Tensor[(11, 10, 16), float32]) -> (Tensor[(11, 10, 16), float32],) {
    %297 = cast(%var_10873, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
    %298 = asin(%297) /* ty=Tensor[(11, 10, 16), float32] */;
    (%298,)
  };
  %299(%var_10899) /* ty=(Tensor[(11, 10, 16), float32],) */
}

def @func_20551() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %300 = @func_18090() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) */;
  %301 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %302 = %300.1;
  %303 = %301.0;
  (%302, %303)
}

def @func_9452() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_22635() -> Tensor[(23400), float64] {
  %305 = fn () -> Tensor[(23400), float64] {
    %304 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
    %304.0
  };
  %305() /* ty=Tensor[(23400), float64] */
}

def @func_22972() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(12, 10, 9), int8]) {
  %310 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(12, 10, 9), int8]) {
    %306 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
    %307 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
    %308 = @func_18285() /* ty=Tensor[(6), float32] */;
    %309 = %306.1;
    (%307, %308, %309)
  };
  %310() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(12, 10, 9), int8]) */
}

def @func_23429() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_23427() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_19114(%var_19111: Tensor[(200), float64], %var_19112: Tensor[(1183), float32], %var_19113: Tensor[(1183), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(200), float64], Tensor[(200), float64], Tensor[(672), uint8], Tensor[(585), float64], Tensor[(1183), bool]) {
  %344 = fn (%var_19061: Tensor[(200), float64], %var_19064: Tensor[(1183), float32], %var_19088: Tensor[(1183), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(200), float64], Tensor[(200), float64], Tensor[(672), uint8], Tensor[(585), float64], Tensor[(1183), bool]) {
    %311 = @func_14333() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %312 = cast(meta[relay.Constant][10] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %313 = reshape(%312, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %314 = @func_18768(%313) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) */;
    %315 = cast(%var_19061, dtype="float64") /* ty=Tensor[(200), float64] */;
    %316 = cast(meta[relay.Constant][11] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %317 = reshape(%315, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %318 = reshape(%316, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
    %319 = @func_18012(%317, %318) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), bool], Tensor[(6), float32]) */;
    %320 = cast(meta[relay.Constant][12] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %321 = cast(meta[relay.Constant][10] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %322 = reshape(%320, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
    %323 = reshape(%321, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %324 = @func_11145(%322, %323) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %325 = cast(%var_19064, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %326 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(1183), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %327 = cast(meta[relay.Constant][11] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?), float32] */;
    %329 = add(%327, %328) /* ty=Tensor[(1183), float32] */;
    %330 = cast(meta[relay.Constant][11] /* ty=Tensor[(1183), float32] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(1), int32] */;
    %332 = cast(%329, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?), float64] */;
    %334 = minimum(%332, %333) /* ty=Tensor[(1183), float64] */;
    %335 = cast(%var_19088, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(1), int32] */;
    %337 = cast(%334, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?), bool] */;
    %339 = %311.0;
    %340 = %314.1;
    %341 = %319.8;
    %342 = %324.2;
    %343 = greater_equal(%337, %338) /* ty=Tensor[(1183), bool] */;
    (%339, %340, meta[relay.Constant][10] /* ty=Tensor[(1080), int8] */, %341, %var_19061, %342, meta[relay.Constant][12] /* ty=Tensor[(585), float64] */, %343)
  };
  %344(%var_19111, %var_19112, %var_19113) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(200), float64], Tensor[(200), float64], Tensor[(672), uint8], Tensor[(585), float64], Tensor[(1183), bool]) */
}

def @func_7600() -> (Tensor[(5, 14, 8), float64],) {
  @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_14163(%var_14161: Tensor[(1, 1183), float32], %var_14162: Tensor[(7800, 3), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(?, ?, 6), bool], Tensor[(5, 14, 8), float64], Tensor[(200), float64], Tensor[(1, 1183), float32], Tensor[(7800, 3), bool]) {
  @func_14159(%var_14161, %var_14162) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(?, ?, 6), bool], Tensor[(5, 14, 8), float64], Tensor[(200), float64], Tensor[(1, 1183), float32], Tensor[(7800, 3), bool]) */
}

def @func_21677(%var_21675: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), uint32],) {
  @func_21674(%var_21675) /* ty=(Tensor[(5, 4, 13), uint32],) */
}

def @func_23713() -> (Tensor[(5, 14, 8), float64],) {
  %347 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %345 = @func_21010() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %346 = %345.0;
    (%346,)
  };
  %347() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_8685() -> Tensor[(5, 14, 8), float64] {
  @func_8683() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_11446() -> (Tensor[(5, 14, 8), float64],) {
  %348 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  (%348,)
}

def @func_20565() -> Tensor[(5, 14, 8), float64] {
  %350 = fn () -> Tensor[(5, 14, 8), float64] {
    %349 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %349.0
  };
  %350() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_7864(%var_7862: Tensor[(672), uint8], %var_7863: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(3, 2), float32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
  @func_7860(%var_7862, %var_7863) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(3, 2), float32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */
}

def @func_19561() -> Tensor[(5, 13, 9), float64] {
  @func_16815() /* ty=Tensor[(5, 13, 9), float64] */
}

def @func_9891() -> (Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) {
  @func_9889() /* ty=(Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) */
}

def @func_21740() -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
  %351 = @func_12441() /* ty=Tensor[(5, 14, 8), float64] */;
  %352 = @func_9269() /* ty=Tensor[(1080), int8] */;
  (%351, %352)
}

def @func_13249() -> (Tensor[(5, 14, 8), float64],) {
  %353 = @func_12410() /* ty=Tensor[(5, 14, 8), float64] */;
  (%353,)
}

def @func_16175() -> (Tensor[(5, 14, 8), float64],) {
  %354 = @func_15233() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %355 = %354.0;
  (%355,)
}

def @func_12411() -> Tensor[(5, 14, 8), float64] {
  %356 = fn () -> Tensor[(5, 14, 8), float64] {
    @func_7412() /* ty=Tensor[(5, 14, 8), float64] */
  };
  %356() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_23502() -> (Tensor[(5, 14, 8), float64],) {
  %357 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %358 = %357.1;
  (%358,)
}

def @func_11971() -> Tensor[(6), float32] {
  %360 = fn () -> Tensor[(6), float32] {
    %359 = @func_9889() /* ty=(Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) */;
    %359.0
  };
  %360() /* ty=Tensor[(6), float32] */
}

def @func_21490() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %364 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
    %361 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %362 = %361.1;
    %363 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
    (%362, %363)
  };
  %364() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_19233() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(1183), float32], Tensor[(6), float32]) {
  %365 = @func_11600() /* ty=(Tensor[(6), float32],) */;
  %366 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %367 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
  %368 = %365.0;
  %369 = %366.1;
  %370 = %367.2;
  %371 = @func_9840() /* ty=Tensor[(6), float32] */;
  (%368, %369, %370, %371)
}

def @func_21687() -> (Tensor[(5, 14, 8), float64],) {
  %372 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %373 = %372.0;
  (%373,)
}

def @func_13251() -> (Tensor[(5, 14, 8), float64],) {
  @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_8612(%var_8605: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(1, 1, 6), float32], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(18, 60), int8]) {
  %374 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %375 = cast(meta[relay.Constant][13] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %376 = cast(%var_8605, dtype="float32") /* ty=Tensor[(6), float32] */;
  %377 = reshape(%375, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %378 = reshape(%376, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %379 = @func_919(%377, %378) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %380 = cast(meta[relay.Constant][14] /* ty=Tensor[(18, 60), int8] */, dtype="int8") /* ty=Tensor[(18, 60), int8] */;
  %381 = cast(meta[relay.Constant][14] /* ty=Tensor[(18, 60), int8] */, dtype="int8") /* ty=Tensor[(18, 60), int8] */;
  %382 = reshape(%380, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %383 = reshape(%381, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %384 = %374.0;
  %385 = %379.1;
  %386 = @func_7174(%382, %383) /* ty=Tensor[(12, 10, 9), int8] */;
  (%384, %385, meta[relay.Constant][13] /* ty=Tensor[(672), uint8] */, %var_8605, %386, meta[relay.Constant][14] /* ty=Tensor[(18, 60), int8] */)
}

def @func_10697() -> (Tensor[(6), float32], Tensor[(1, 1, 6), float32]) {
  %391 = fn () -> (Tensor[(6), float32], Tensor[(1, 1, 6), float32]) {
    %387 = @func_8445() /* ty=Tensor[(6), float32] */;
    %388 = cast(%387, dtype="float32") /* ty=Tensor[(6), float32] */;
    %389 = reshape(%388, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
    %390 = @func_319(%389) /* ty=Tensor[(1, 1, 6), float32] */;
    (%387, %390)
  };
  %391() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */
}

def @func_12934() -> (Tensor[(5, 14, 8), float64],) {
  %393 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %392 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
    (%392,)
  };
  %393() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_11528() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) {
  %394 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
  %395 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %396 = %394.1;
  %397 = %395.0;
  (%396, %397)
}

def @func_12972() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_12970() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_9270() -> Tensor[(1080), int8] {
  %399 = fn () -> Tensor[(1080), int8] {
    %398 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %398.1
  };
  %399() /* ty=Tensor[(1080), int8] */
}

def @func_13725() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %404 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %400 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %401 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %402 = %400.0;
    %403 = %401.0;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_22647() -> Tensor[(23400), float64] {
  %405 = @func_21795() /* ty=(Tensor[(23400), float64],) */;
  %405.0
}

def @func_20379() -> (Tensor[(5, 14, 8), float64],) {
  %407 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %406 = @func_16091() /* ty=Tensor[(5, 14, 8), float64] */;
    (%406,)
  };
  %407() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_20248() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %408 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %409 = @func_16559() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %410 = cast(meta[relay.Constant][15] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %411 = reshape(%410, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %412 = @func_16575(%411) /* ty=(Tensor[(10, 16, 1), float64],) */;
  %413 = %408.0;
  %414 = %409.0;
  %415 = %412.0;
  (%413, %414, %415, meta[relay.Constant][15] /* ty=Tensor[(160), float64] */)
}

def @func_7960() -> (Tensor[(5, 14, 8), float64],) {
  %416 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %417 = %416.0;
  (%417,)
}

def @func_14032() -> (Tensor[(5, 14, 8), float64],) {
  %418 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %419 = %418.0;
  (%419,)
}

def @func_23245() -> (Tensor[(23400), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  @func_23243() /* ty=(Tensor[(23400), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_18286() -> Tensor[(6), float32] {
  %421 = fn () -> Tensor[(6), float32] {
    %420 = @func_17140() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %420.1
  };
  %421() /* ty=Tensor[(6), float32] */
}

def @func_12461() -> (Tensor[(6), float32],) {
  %424 = fn () -> (Tensor[(6), float32],) {
    %422 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %423 = %422.1;
    (%423,)
  };
  %424() /* ty=(Tensor[(6), float32],) */
}

def @func_11530() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) {
  @func_11528() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_15467(%var_15465: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) {
  @func_15464(%var_15465) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) */
}

def @func_13838(%var_13837: Tensor[(5, 14, 8), float64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(23400), int64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
  %448 = fn (%var_13742: Tensor[(5, 14, 8), float64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(23400), int64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
    %425 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %426 = %425.0;
    %427 = cast(%var_13742, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
    %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%426, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %431 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %432 = @func_12933() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %433 = @func_10607() /* ty=Tensor[(6), float32] */;
    %434 = cast(%433, dtype="float32") /* ty=Tensor[(6), float32] */;
    %435 = reshape(%434, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %436 = @func_7344(%435) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
    %437 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %438 = @func_13443() /* ty=(Tensor[(6), float32],) */;
    %439 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %440 = mod(%429, %430) /* ty=Tensor[(5, 14, 8), float32] */;
    %441 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
    %442 = %431.6;
    %443 = %432.0;
    %444 = %436.5;
    %445 = %437.0;
    %446 = %438.0;
    %447 = %439.1;
    (%433, %440, %441, %442, %443, %444, %445, %446, %447)
  };
  %448(%var_13837) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(23400), int64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */
}

def @func_17874() -> Tensor[(5, 14, 8), float64] {
  @func_17872() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_16596() -> Tensor[(5, 14, 8), float64] {
  %449 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %449.0
}

def @func_19202(%var_19154: Tensor[(6, 1), float32]) -> (Tensor[(2, 3, 6), float64], Tensor[(?, ?, 6), uint64], Tensor[(6, 1), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(6), float32]) {
  %450 = cast(-1.37148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %451 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 6), float64] */;
  %452 = cast(%var_19154, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %453 = reshape(%452, newshape=[6, 1]) /* ty=Tensor[(6, 1), float32] */;
  %454 = @func_9345(%453) /* ty=(Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) */;
  %455 = @func_9795() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %456 = cast(meta[relay.Constant][17] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
  %457 = cast(%var_19154, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %458 = cast(meta[relay.Constant][18] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %459 = reshape(%456, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
  %460 = reshape(%457, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %461 = reshape(%458, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %462 = @func_13208(%459, %460, %461) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
  %463 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
  %464 = floor_mod(%450, %451) /* ty=Tensor[(2, 3, 6), float64] */;
  %465 = %454.1;
  %466 = %455.0;
  %467 = %462.3;
  %468 = %463.0;
  (%464, %465, %var_19154, %466, %467, meta[relay.Constant][17] /* ty=Tensor[(1560), uint16] */, meta[relay.Constant][18] /* ty=Tensor[(1080), int8] */, %468)
}

def @func_19464() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %469 = cast(meta[relay.Constant][19] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %470 = reshape(%469, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %471 = @func_7344(%470) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
  %472 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
  %473 = %471.3;
  (%472, %473, meta[relay.Constant][19] /* ty=Tensor[(6), float32] */)
}

def @func_8177() -> (Tensor[(5, 14, 8), float64],) {
  %475 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %474 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    (%474,)
  };
  %475() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_21217() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) {
  %476 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %477 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %478 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %479 = %476.1;
  %480 = %477.1;
  %481 = %478.0;
  (%479, %480, %481)
}

def @func_16639() -> Tensor[(5, 14, 8), float64] {
  @func_16637() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_21891() -> (Tensor[(12, 10, 9), float64], Tensor[(40, 6), bool], Tensor[(40), int64]) {
  %490 = fn () -> (Tensor[(12, 10, 9), float64], Tensor[(40, 6), bool], Tensor[(40), int64]) {
    %482 = @func_21217() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) */;
    %483 = %482.1;
    %484 = cast(%483, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
    %485 = cast(meta[relay.Constant][20] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %486 = reshape(%485, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
    %487 = @func_14311(%486) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) */;
    %488 = erf(%484) /* ty=Tensor[(12, 10, 9), float64] */;
    %489 = %487.3;
    (%488, %489, meta[relay.Constant][20] /* ty=Tensor[(40), int64] */)
  };
  %490() /* ty=(Tensor[(12, 10, 9), float64], Tensor[(40, 6), bool], Tensor[(40), int64]) */
}

def @func_19963() -> (Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) {
  %491 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
  %492 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %493 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %494 = %491.1;
  %495 = %492.0;
  %496 = %493.3;
  %497 = @func_9974() /* ty=Tensor[(6), float32] */;
  (%494, %495, %496, %497)
}

def @func_22441() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %498 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %499 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
  %500 = %498.0;
  %501 = %499.1;
  %502 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  (%500, %501, %502)
}

def @func_22693() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %507 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
    %503 = @func_21309() /* ty=(Tensor[(40), int64], Tensor[(6), float32]) */;
    %504 = @func_13724() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %505 = %503.1;
    %506 = %504.1;
    (%505, %506)
  };
  %507() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_14645() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %517 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
    %508 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %509 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %510 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %511 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
    %512 = %508.0;
    %513 = %509.1;
    %514 = %510.0;
    %515 = %511.0;
    %516 = @func_8683() /* ty=Tensor[(5, 14, 8), float64] */;
    (%512, %513, %514, %515, %516)
  };
  %517() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_13921() -> (Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) {
  %523 = fn () -> (Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) {
    %518 = cast(meta[relay.Constant][21] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %519 = reshape(%518, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %520 = @func_9604(%519) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
    %521 = @func_11970() /* ty=Tensor[(6), float32] */;
    %522 = %520.3;
    (%521, %522, meta[relay.Constant][21] /* ty=Tensor[(40), int64] */)
  };
  %523() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */
}

def @func_18193(%var_18192: Tensor[(1080), int8]) -> (Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %538 = fn (%var_18172: Tensor[(1080), int8]) -> (Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
    %524 = @func_14451() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
    %525 = cast(meta[relay.Constant][22] /* ty=Tensor[(40, 1), int64] */, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
    %526 = reshape(%525, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %527 = @func_13028(%526) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) */;
    %528 = cast(meta[relay.Constant][23] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %529 = cast(%var_18172, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %530 = reshape(%528, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
    %531 = reshape(%529, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %532 = @func_11145(%530, %531) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %533 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %534 = %524.0;
    %535 = %527.5;
    %536 = %532.3;
    %537 = %533.0;
    (%534, %535, meta[relay.Constant][22] /* ty=Tensor[(40, 1), int64] */, %536, meta[relay.Constant][23] /* ty=Tensor[(585), float64] */, %var_18172, %537)
  };
  %538(%var_18192) /* ty=(Tensor[(6), float32], Tensor[(23400), uint16], Tensor[(40, 1), int64], Tensor[(624), float32], Tensor[(585), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */
}

def @func_19985() -> (Tensor[(6), float32],) {
  %539 = @func_13443() /* ty=(Tensor[(6), float32],) */;
  %540 = %539.0;
  (%540,)
}

def @func_19487() -> (Tensor[(5, 14, 8), float64],) {
  @func_19485() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @main(%var_24249: Tensor[(1080), int8]) -> (Tensor[(1080), int16],) {
  %541 = @func_21742() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */;
  %542 = %541.1;
  %543 = cast(%var_24249, dtype="int16") /* ty=Tensor[(1080), int16] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(1), int32] */;
  %545 = cast(%542, dtype="int16") /* ty=Tensor[(1080), int16] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?), int16] */;
  %547 = minimum(%545, %546) /* ty=Tensor[(1080), int16] */;
  (%547,)
}

def @func_7382(%var_7364: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
  %548 = cast(%var_7364, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
  %549 = acosh(%548) /* ty=Tensor[(7, 13, 13), float32] */;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(7, 13, 13), float32] */;
  exp(%550) /* ty=Tensor[(7, 13, 13), float32] */
}

def @func_12209() -> Tensor[(5, 14, 8), float64] {
  %551 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %551.0
}

def @func_8744() -> Tensor[(5, 14, 8), float32] {
  @func_8742() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_10840() -> (Tensor[(5, 14, 8), float64],) {
  %554 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %552 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %553 = %552.0;
    (%553,)
  };
  %554() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_9842() -> Tensor[(6), float32] {
  @func_9840() /* ty=Tensor[(6), float32] */
}

def @func_14252() -> Tensor[(5, 14, 8), float64] {
  %555 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %555.0
}

def @func_13445() -> (Tensor[(6), float32],) {
  @func_13443() /* ty=(Tensor[(6), float32],) */
}

def @func_17509() -> Tensor[(5, 14, 8), float32] {
  @func_17507() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_17207() -> Tensor[(23400), float64] {
  %566 = fn () -> Tensor[(23400), float64] {
    %556 = @func_11403() /* ty=Tensor[(23400), float64] */;
    %557 = cast(meta[relay.Constant][24] /* ty=Tensor[(23400), float64] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(1), int32] */;
    %559 = cast(%556, dtype="bool") /* ty=Tensor[(23400), bool] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?), bool] */;
    %561 = less_equal(%559, %560) /* ty=Tensor[(23400), bool] */;
    %562 = cast(meta[relay.Constant][24] /* ty=Tensor[(23400), float64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(1), int32] */;
    %564 = cast(%561, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?), float64] */;
    mod(%564, %565) /* ty=Tensor[(23400), float64] */
  };
  %566() /* ty=Tensor[(23400), float64] */
}

def @func_20892() -> (Tensor[(6), float32],) {
  %569 = fn () -> (Tensor[(6), float32],) {
    %567 = @func_16916() /* ty=(Tensor[(6), float32],) */;
    %568 = %567.0;
    (%568,)
  };
  %569() /* ty=(Tensor[(6), float32],) */
}

def @func_22357() -> (Tensor[(5, 14, 8), float64],) {
  %572 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %570 = @func_11025() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %571 = %570.0;
    (%571,)
  };
  %572() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_17258() -> Tensor[(6), float32] {
  @func_17256() /* ty=Tensor[(6), float32] */
}

def @func_7344(%var_7308: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) {
  %573 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %574 = cast(meta[relay.Constant][25] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %575 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %576 = reshape(%574, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %577 = reshape(%575, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %578 = @func_919(%576, %577) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %579 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %580 = reshape(%579, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %581 = cast(meta[relay.Constant][25] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %582 = cast(%var_7308, dtype="float32") /* ty=Tensor[(6), float32] */;
  %583 = reshape(%581, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %584 = reshape(%582, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %585 = @func_919(%583, %584) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %586 = %573.1;
  %587 = %578.0;
  %588 = @func_319(%580) /* ty=Tensor[(1, 1, 6), float32] */;
  %589 = %585.0;
  (%586, %587, meta[relay.Constant][25] /* ty=Tensor[(672), uint8] */, %var_7308, %588, %589)
}

def @func_5546(%var_5543: Tensor[(9, 5, 9), float64], %var_5544: Tensor[(624), float32], %var_5545: Tensor[(200), float64]) -> (Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
  @func_5541(%var_5543, %var_5544, %var_5545) /* ty=(Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) */
}

def @func_8895() -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) {
  @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */
}

def @func_12398() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %590 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %591 = %590.0;
  %592 = @func_10524() /* ty=Tensor[(6), float32] */;
  (%591, %592)
}

def @func_16690() -> (Tensor[(6), float32], Tensor[(160), float64], Tensor[(10, 16, 1), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %593 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %594 = cast(meta[relay.Constant][26] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %595 = reshape(%594, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %596 = @func_16575(%595) /* ty=(Tensor[(10, 16, 1), float64],) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  %599 = @func_11600() /* ty=(Tensor[(6), float32],) */;
  %600 = %593.1;
  %601 = tan(%598) /* ty=Tensor[(10, 16, 1), float64] */;
  %602 = %599.0;
  %603 = @func_10607() /* ty=Tensor[(6), float32] */;
  (%600, meta[relay.Constant][26] /* ty=Tensor[(160), float64] */, %601, %602, %603)
}

def @func_14034() -> (Tensor[(5, 14, 8), float64],) {
  @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_8673() -> (Tensor[(5, 14, 8), float64],) {
  %604 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %605 = %604.0;
  (%605,)
}

def @func_20412(%var_20411: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %612 = fn (%var_20408: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
    %606 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %607 = cast(%var_20408, dtype="int64") /* ty=Tensor[(40), int64] */;
    %608 = reshape(%607, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %609 = @func_7436(%608) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
    %610 = %606.0;
    %611 = %609.1;
    (%610, %611, %var_20408)
  };
  %612(%var_20411) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */
}

def @func_19678() -> (Tensor[(5, 14, 8), float64],) {
  %614 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %613 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
    (%613,)
  };
  %614() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_22958() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_22956() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_8893() -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) {
  %615 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %616 = cast(meta[relay.Constant][27] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %617 = cast(meta[relay.Constant][28] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %618 = cast(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %619 = reshape(%616, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %620 = reshape(%617, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %621 = reshape(%618, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
  %622 = @func_7541(%619, %620, %621) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
  %623 = cast(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %624 = cos(%623) /* ty=Tensor[(23400), float64] */;
  %625 = cast(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="uint16") /* ty=Tensor[(23400), uint16] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
  %627 = cast(%624, dtype="uint16") /* ty=Tensor[(23400), uint16] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %629 = cast(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %630 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
  %631 = cast(%624, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?), bool] */;
  %633 = cast(meta[relay.Constant][30] /* ty=Tensor[(23400), bool] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
  %634 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %635 = cast(meta[relay.Constant][29] /* ty=Tensor[(23400), bool] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?), int64] */;
  %637 = %615.0;
  %638 = %622.1;
  %639 = add(%627, %628) /* ty=Tensor[(23400), uint16] */;
  %640 = greater_equal(%631, %632) /* ty=Tensor[(23400), bool] */;
  %641 = maximum(%635, %636) /* ty=Tensor[(23400), int64] */;
  (%637, %638, meta[relay.Constant][27] /* ty=Tensor[(200), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1183), float32] */, %639, %640, %641)
}

def @func_11026() -> (Tensor[(5, 14, 8), float64],) {
  %644 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %642 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
    %643 = %642.0;
    (%643,)
  };
  %644() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_12294() -> Tensor[(5, 14, 8), float64] {
  @func_12292() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_16301() -> (Tensor[(5, 14, 8), float64],) {
  %645 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  (%645,)
}

def @func_23260() -> Tensor[(5, 14, 8), float64] {
  %647 = fn () -> Tensor[(5, 14, 8), float64] {
    %646 = @func_23002() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %646.0
  };
  %647() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_23356() -> (Tensor[(14, 16, ?), uint32],) {
  %655 = fn () -> (Tensor[(14, 16, ?), uint32],) {
    %648 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 1), float64] */;
    %649 = acos(%648) /* ty=Tensor[(14, 16, 1), float64] */;
    %650 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 1), float64] */, dtype="uint32") /* ty=Tensor[(14, 16, 1), uint32] */;
    %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%649, dtype="uint32") /* ty=Tensor[(14, 16, 1), uint32] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %654 = multiply(%652, %653) /* ty=Tensor[(14, 16, ?), uint32] */;
    (%654,)
  };
  %655() /* ty=(Tensor[(14, 16, ?), uint32],) */
}

def @func_9157() -> (Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) {
  %656 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %657 = cast(meta[relay.Constant][32] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %658 = reshape(%657, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
  %659 = %656.0;
  %660 = @func_7382(%658) /* ty=Tensor[(7, 13, 13), float32] */;
  (%659, %660, meta[relay.Constant][32] /* ty=Tensor[(1183), float32] */)
}

def @func_21557() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_21555() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_21717() -> (Tensor[(6), float32],) {
  %662 = fn () -> (Tensor[(6), float32],) {
    %661 = @func_9974() /* ty=Tensor[(6), float32] */;
    (%661,)
  };
  %662() /* ty=(Tensor[(6), float32],) */
}

def @func_17568() -> Tensor[(5, 14, 8), float64] {
  %664 = fn () -> Tensor[(5, 14, 8), float64] {
    %663 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
    %663.0
  };
  %664() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_4667(%var_4664: Tensor[(1, 10, 5), float64], %var_4665: Tensor[(4, 10, 5), float64], %var_4666: Tensor[(6), float32]) -> (Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) {
  %681 = fn (%var_4626: Tensor[(1, 10, 5), float64], %var_4627: Tensor[(4, 10, 5), float64], %var_4645: Tensor[(6), float32]) -> (Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) {
    %665 = cast(%var_4626, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
    %666 = cast(%var_4627, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
    %667 = cast(meta[relay.Constant][33] /* ty=Tensor[(20, 2), int64] */, dtype="int64") /* ty=Tensor[(20, 2), int64] */;
    %668 = reshape(%667, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
    %669 = cast(meta[relay.Constant][34] /* ty=Tensor[(168, 4), uint8] */, dtype="uint8") /* ty=Tensor[(168, 4), uint8] */;
    %670 = cast(%var_4645, dtype="float32") /* ty=Tensor[(6), float32] */;
    %671 = reshape(%669, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
    %672 = reshape(%670, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
    %673 = @func_919(%671, %672) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
    %674 = cast(meta[relay.Constant][33] /* ty=Tensor[(20, 2), int64] */, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
    %675 = sigmoid(%674) /* ty=Tensor[(20, 2), float64] */;
    %676 = cast(%675, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
    %677 = power(%665, %666) /* ty=Tensor[(4, 10, 5), float64] */;
    %678 = @func_1443(%668) /* ty=Tensor[(8, 5, 8), int64] */;
    %679 = %673.2;
    %680 = log2(%676) /* ty=Tensor[(20, 2), float64] */;
    (%677, %678, %679, meta[relay.Constant][34] /* ty=Tensor[(168, 4), uint8] */, %var_4645, %680)
  };
  %681(%var_4664, %var_4665, %var_4666) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */
}

def @func_10063(%var_10061: uint64, %var_10062: Tensor[(11, 6, 5), uint64]) -> (Tensor[(11, 6, 5), bool],) {
  @func_10059(%var_10061, %var_10062) /* ty=(Tensor[(11, 6, 5), bool],) */
}

def @func_18942() -> Tensor[(6), float32] {
  %682 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %682.0
}

def @func_9607(%var_9605: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) {
  @func_9604(%var_9605) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */
}

def @func_16303() -> (Tensor[(5, 14, 8), float64],) {
  @func_16301() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_12918() -> (Tensor[(6), float32],) {
  @func_12916() /* ty=(Tensor[(6), float32],) */
}

def @func_11869() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) {
  @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */
}

def @func_21632() -> (Tensor[(5, 14, 8), float64],) {
  %685 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %683 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %684 = %683.0;
    (%684,)
  };
  %685() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_13443() -> (Tensor[(6), float32],) {
  %686 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%686,)
}

def @func_11601() -> (Tensor[(6), float32],) {
  %689 = fn () -> (Tensor[(6), float32],) {
    %687 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
    %688 = %687.0;
    (%688,)
  };
  %689() /* ty=(Tensor[(6), float32],) */
}

def @func_18031() -> (Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64]) {
  %692 = fn () -> (Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64]) {
    %690 = @func_16815() /* ty=Tensor[(5, 13, 9), float64] */;
    %691 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
    (%690, %691)
  };
  %692() /* ty=(Tensor[(5, 13, 9), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_20150(%var_20143: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64], Tensor[(40), int64]) {
  %693 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %694 = @func_17080() /* ty=(Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */;
  %695 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %696 = cast(%var_20143, dtype="int64") /* ty=Tensor[(40), int64] */;
  %697 = reshape(%696, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %698 = @func_15464(%697) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) */;
  %699 = @func_9126() /* ty=Tensor[(5, 14, 8), float64] */;
  %700 = %693.0;
  %701 = @func_16637() /* ty=Tensor[(5, 14, 8), float64] */;
  %702 = %694.0;
  %703 = %695.0;
  %704 = %698.2;
  (%699, %700, %701, %702, %703, %704, %var_20143)
}

def @func_7860(%var_7839: Tensor[(672), uint8], %var_7848: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(3, 2), float32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
  %705 = cast(%var_7839, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %706 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 2), float32] */, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
  %707 = reshape(%705, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
  %708 = reshape(%706, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
  %709 = @func_919(%707, %708) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
  %710 = cast(%var_7848, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %711 = cast(%var_7848, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %712 = reshape(%710, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %713 = reshape(%711, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %714 = cast(meta[relay.Constant][36] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %715 = cast(meta[relay.Constant][36] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %716 = reshape(%714, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %717 = reshape(%715, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
  %718 = @func_2693(%716, %717) /* ty=(Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) */;
  %719 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %720 = %709.0;
  %721 = @func_7174(%712, %713) /* ty=Tensor[(12, 10, 9), int8] */;
  %722 = %718.1;
  (%719, %720, %var_7839, meta[relay.Constant][35] /* ty=Tensor[(3, 2), float32] */, %721, %var_7848, %722, meta[relay.Constant][36] /* ty=Tensor[(624), float32] */)
}

def @func_14733(%var_14732: Tensor[(585), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(585), float64], Tensor[(40), int64]) {
  %731 = fn (%var_14722: Tensor[(585), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(585), float64], Tensor[(40), int64]) {
    %723 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %724 = cast(%var_14722, dtype="float64") /* ty=Tensor[(585), float64] */;
    %725 = cast(meta[relay.Constant][37] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %726 = reshape(%724, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
    %727 = reshape(%725, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %728 = @func_6594(%726, %727) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
    %729 = %723.1;
    %730 = %728.2;
    (%729, %730, %var_14722, meta[relay.Constant][37] /* ty=Tensor[(40), int64] */)
  };
  %731(%var_14732) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(585), float64], Tensor[(40), int64]) */
}

def @func_20606() -> Tensor[(6), float32] {
  %733 = fn () -> Tensor[(6), float32] {
    %732 = @func_18561() /* ty=(Tensor[(6), float32],) */;
    %732.0
  };
  %733() /* ty=Tensor[(6), float32] */
}

def @func_16578(%var_16576: Tensor[(10, 16, 1), float64]) -> (Tensor[(10, 16, 1), float64],) {
  @func_16575(%var_16576) /* ty=(Tensor[(10, 16, 1), float64],) */
}

def @func_23477() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
  %738 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
    %734 = @func_17080() /* ty=(Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */;
    %735 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
    %736 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    %737 = %734.0;
    (%735, %736, %737)
  };
  %738() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */
}

def @func_16289(%var_16287: Tensor[(1560), uint16], %var_16288: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) {
  %752 = fn (%var_16256: Tensor[(1560), uint16], %var_16257: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) {
    %739 = cast(%var_16256, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %740 = cast(%var_16257, dtype="float32") /* ty=Tensor[(6), float32] */;
    %741 = cast(meta[relay.Constant][38] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %742 = reshape(%739, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
    %743 = reshape(%740, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %744 = reshape(%741, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %745 = @func_13208(%742, %743, %744) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
    %746 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    %747 = cast(%746, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %748 = reshape(%747, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
    %749 = @func_7805(%748) /* ty=(Tensor[(5, 14, 8), uint32],) */;
    %750 = %745.0;
    %751 = %749.0;
    (%746, %750, %var_16256, %var_16257, meta[relay.Constant][38] /* ty=Tensor[(1080), int8] */, %751)
  };
  %752(%var_16287, %var_16288) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) */
}

def @func_23725() -> (Tensor[(6), float32],) {
  %755 = fn () -> (Tensor[(6), float32],) {
    %753 = @func_17140() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %754 = %753.1;
    (%754,)
  };
  %755() /* ty=(Tensor[(6), float32],) */
}

def @func_23853() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %756 = @func_23225() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %757 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %758 = %756.0;
  %759 = %757.0;
  (%758, %759)
}

def @func_17142() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  @func_17140() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_22145() -> (Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) {
  %766 = fn () -> (Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) {
    %760 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 2, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 16), float32] */;
    %761 = cast(meta[relay.Constant][40] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %762 = reshape(%761, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
    %763 = @func_15464(%762) /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) */;
    %764 = sqrt(%760) /* ty=Tensor[(8, 2, 16), float32] */;
    %765 = %763.0;
    (%764, %765, meta[relay.Constant][40] /* ty=Tensor[(40), int64] */)
  };
  %766() /* ty=(Tensor[(8, 2, 16), float32], Tensor[(6), float32], Tensor[(40), int64]) */
}

def @func_14664() -> (Tensor[(5, 14, 8), float64],) {
  @func_14662() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_10823() -> Tensor[(5, 14, 8), float64] {
  %768 = fn () -> Tensor[(5, 14, 8), float64] {
    %767 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %767.0
  };
  %768() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_15608() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %769 = @func_9889() /* ty=(Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) */;
  %770 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %771 = %769.0;
  %772 = %770.0;
  (%771, %772)
}

def @func_11898() -> (Tensor[(5, 14, 8), float64],) {
  %775 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %773 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %774 = %773.1;
    (%774,)
  };
  %775() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_9348(%var_9346: Tensor[(6, 1), float32]) -> (Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) {
  @func_9345(%var_9346) /* ty=(Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) */
}

def @func_8742() -> Tensor[(5, 14, 8), float32] {
  %776 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %777 = %776.0;
  %778 = cast(%777, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  log2(%778) /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_9796() -> (Tensor[(5, 14, 8), float64],) {
  %781 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %779 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %780 = %779.2;
    (%780,)
  };
  %781() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_13240(%var_13239: Tensor[(15, 9, 1), float64]) -> (Tensor[(15, 9, 1), float64],) {
  %784 = fn (%var_13231: Tensor[(15, 9, 1), float64]) -> (Tensor[(15, 9, 1), float64],) {
    %782 = cast(%var_13231, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %783 = acosh(%782) /* ty=Tensor[(15, 9, 1), float64] */;
    (%783,)
  };
  %784(%var_13239) /* ty=(Tensor[(15, 9, 1), float64],) */
}

def @func_13503() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %788 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %785 = @func_13455() /* ty=(Tensor[(6), float32],) */;
    %786 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
    %787 = %785.0;
    (%786, %787)
  };
  %788() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_19835() -> (Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %793 = fn () -> (Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %789 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
    %790 = %789.1;
    %791 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
    %792 = @func_10607() /* ty=Tensor[(6), float32] */;
    (%790, %791, %792)
  };
  %793() /* ty=(Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_9974() -> Tensor[(6), float32] {
  %794 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %794.0
}

def @func_10974() -> (Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) {
  %805 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) {
    %795 = cast(meta[relay.Constant][41] /* ty=Tensor[(23400), int64] */, dtype="int64") /* ty=Tensor[(23400), int64] */;
    %796 = reshape(%795, newshape=[23400]) /* ty=Tensor[(23400), int64] */;
    %797 = @func_10206(%796) /* ty=(Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) */;
    %798 = %797.3;
    %799 = cast(%798, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %800 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(23400), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %801 = cast(meta[relay.Constant][41] /* ty=Tensor[(23400), int64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
    %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?), float64] */;
    %803 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    %804 = multiply(%801, %802) /* ty=Tensor[(23400), float64] */;
    (%803, %804)
  };
  %805() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */
}

def @func_922(%var_920: Tensor[(14, 3, 16), uint8], %var_921: Tensor[(3, 2), float32]) -> (Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) {
  %814 = fn (%var_912: Tensor[(14, 3, 16), uint8], %var_917: Tensor[(3, 2), float32]) -> (Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) {
    %806 = cast(%var_912, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
    %807 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(14, 3, 16), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %808 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 3, 16), uint8] */, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
    %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %810 = cast(%var_917, dtype="float32") /* ty=Tensor[(3, 2), float32] */;
    %811 = reshape(%810, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
    %812 = greater(%808, %809) /* ty=Tensor[(14, 3, 16), bool] */;
    %813 = @func_319(%811) /* ty=Tensor[(1, 1, 6), float32] */;
    (%812, %813, %var_917)
  };
  %814(%var_920, %var_921) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */
}

def @func_9187() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32]) {
  %815 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %816 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(5, 14, 8), float32] */;
  %819 = %815.2;
  %820 = acos(%818) /* ty=Tensor[(5, 14, 8), float32] */;
  (%819, %820)
}

def @func_18090() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) {
  %821 = @func_16175() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %822 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %823 = @func_9783() /* ty=(Tensor[(5, 13, 9), float64],) */;
  %824 = %821.0;
  %825 = %822.0;
  %826 = %823.0;
  (%824, %825, %826)
}

def @func_23110() -> Tensor[(6), float32] {
  @func_23108() /* ty=Tensor[(6), float32] */
}

def @func_11404() -> Tensor[(23400), float64] {
  %828 = fn () -> Tensor[(23400), float64] {
    %827 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
    %827.1
  };
  %828() /* ty=Tensor[(23400), float64] */
}

def @func_18156() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
  @func_18154() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */
}

def @func_7177(%var_7175: Tensor[(12, 10, 9), int8], %var_7176: Tensor[(12, 10, 9), int8]) -> Tensor[(12, 10, 9), int8] {
  %833 = fn (%var_7162: Tensor[(12, 10, 9), int8], %var_7163: Tensor[(12, 10, 9), int8]) -> Tensor[(12, 10, 9), int8] {
    %829 = cast(%var_7163, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
    %830 = shape_of(%var_7162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %831 = cast(%var_7162, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
    %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%831, %832) /* ty=Tensor[(12, 10, 9), int8] */
  };
  %833(%var_7175, %var_7176) /* ty=Tensor[(12, 10, 9), int8] */
}

def @func_23693(%var_23691: Tensor[(624), float32], %var_23692: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(135, 3), float64], Tensor[(624), float32], Tensor[(200), float64], Tensor[(5, 14, 8), float64]) {
  %846 = fn (%var_23678: Tensor[(624), float32], %var_23679: Tensor[(200), float64]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(135, 3), float64], Tensor[(624), float32], Tensor[(200), float64], Tensor[(5, 14, 8), float64]) {
    %834 = @func_19789() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %835 = cast(meta[relay.Constant][43] /* ty=Tensor[(135, 3), float64] */, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
    %836 = cast(%var_23678, dtype="float32") /* ty=Tensor[(624), float32] */;
    %837 = cast(%var_23679, dtype="float64") /* ty=Tensor[(200), float64] */;
    %838 = reshape(%835, newshape=[9, 5, 9]) /* ty=Tensor[(9, 5, 9), float64] */;
    %839 = reshape(%836, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %840 = reshape(%837, newshape=[200]) /* ty=Tensor[(200), float64] */;
    %841 = @func_5541(%838, %839, %840) /* ty=(Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) */;
    %842 = @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %843 = %834.1;
    %844 = %841.2;
    %845 = %842.0;
    (%843, %844, meta[relay.Constant][43] /* ty=Tensor[(135, 3), float64] */, %var_23678, %var_23679, %845)
  };
  %846(%var_23691, %var_23692) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(135, 3), float64], Tensor[(624), float32], Tensor[(200), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_18154() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
  %847 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %848 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %849 = @func_14741() /* ty=Tensor[(5, 14, 8), float64] */;
  %850 = cast(%849, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %851 = reshape(%850, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %852 = @func_7805(%851) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %853 = %847.2;
  %854 = @func_9974() /* ty=Tensor[(6), float32] */;
  %855 = %848.0;
  %856 = %852.0;
  (%853, %849, %854, %855, %856)
}

def @func_24195() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  %857 = @func_12292() /* ty=Tensor[(5, 14, 8), float64] */;
  %858 = @func_19561() /* ty=Tensor[(5, 13, 9), float64] */;
  (%857, %858)
}

def @func_9000() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) {
  %859 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %862 = reshape(%861, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %863 = @func_7805(%862) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %864 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %865 = %863.0;
  %866 = %864.0;
  (%860, %865, %866)
}

def @func_15858() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  @func_15856() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_8782() -> Tensor[(5, 14, 8), float32] {
  @func_8742() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_16905() -> (Tensor[(6), float32],) {
  %869 = fn () -> (Tensor[(6), float32],) {
    %867 = @func_13443() /* ty=(Tensor[(6), float32],) */;
    %868 = %867.0;
    (%868,)
  };
  %869() /* ty=(Tensor[(6), float32],) */
}

def @func_10289() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
  @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */
}

def @func_11148(%var_11146: Tensor[(195, 3), float64], %var_11147: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %891 = fn (%var_11061: Tensor[(195, 3), float64], %var_11100: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
    %870 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %871 = cast(meta[relay.Constant][44] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %872 = cast(meta[relay.Constant][45] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %873 = reshape(%871, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %874 = reshape(%872, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %875 = @func_5195(%873, %874) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
    %876 = cast(%var_11061, dtype="float64") /* ty=Tensor[(195, 3), float64] */;
    %877 = cast(meta[relay.Constant][46] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %878 = reshape(%876, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
    %879 = reshape(%877, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %880 = @func_6594(%878, %879) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
    %881 = cast(%var_11100, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %882 = cast(%var_11100, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %883 = reshape(%881, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
    %884 = reshape(%882, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
    %885 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %886 = %870.1;
    %887 = %875.0;
    %888 = %880.0;
    %889 = @func_7174(%883, %884) /* ty=Tensor[(12, 10, 9), int8] */;
    %890 = %885.0;
    (%886, %887, meta[relay.Constant][44] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][45] /* ty=Tensor[(624), float32] */, %888, %var_11061, meta[relay.Constant][46] /* ty=Tensor[(40), int64] */, %889, %var_11100, %890)
  };
  %891(%var_11146, %var_11147) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */
}

def @func_18944() -> Tensor[(6), float32] {
  @func_18942() /* ty=Tensor[(6), float32] */
}

def @func_19119() -> (Tensor[(5, 14, 8), float64],) {
  %892 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %893 = %892.0;
  (%893,)
}

def @func_12264() -> Tensor[(5, 14, 8), float64] {
  %895 = fn () -> Tensor[(5, 14, 8), float64] {
    %894 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %894.0
  };
  %895() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_13030(%var_13029: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) {
  %905 = fn (%var_13016: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) {
    %896 = cast(%var_13016, dtype="int64") /* ty=Tensor[(40), int64] */;
    %897 = reshape(%896, newshape=[2, 20]) /* ty=Tensor[(2, 20), int64] */;
    %898 = @func_8950(%897) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) */;
    %899 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %900 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
    %901 = @func_9974() /* ty=Tensor[(6), float32] */;
    %902 = @func_9840() /* ty=Tensor[(6), float32] */;
    %903 = %898.2;
    %904 = %899.4;
    (%900, %901, %902, %903, %var_13016, %904)
  };
  %905(%var_13029) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(585), float64], Tensor[(40), int64], Tensor[(23400), uint16]) */
}

def @func_12766() -> (Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
  %906 = @func_12553() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %907 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %908 = %906.2;
  %909 = %907.0;
  (%908, %909)
}

def @func_13106() -> (Tensor[(6), float32], Tensor[(6), float32]) {
  @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */
}

def @func_10526() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_23564() -> Tensor[(6), float32] {
  %910 = fn () -> Tensor[(6), float32] {
    @func_16195() /* ty=Tensor[(6), float32] */
  };
  %910() /* ty=Tensor[(6), float32] */
}

def @func_9002() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) {
  @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */
}

def @func_8548() -> (Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */
}

def @func_17710() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %915 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %911 = @func_16175() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %912 = %911.0;
    %913 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
    %914 = @func_10607() /* ty=Tensor[(6), float32] */;
    (%912, %913, %914)
  };
  %915() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_8456() -> (Tensor[(5, 14, 8), float64],) {
  %916 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %917 = %916.0;
  (%917,)
}

def @func_19205(%var_19203: Tensor[(6, 1), float32]) -> (Tensor[(2, 3, 6), float64], Tensor[(?, ?, 6), uint64], Tensor[(6, 1), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(6), float32]) {
  @func_19202(%var_19203) /* ty=(Tensor[(2, 3, 6), float64], Tensor[(?, ?, 6), uint64], Tensor[(6, 1), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1560), uint16], Tensor[(1080), int8], Tensor[(6), float32]) */
}

def @func_9783() -> (Tensor[(5, 13, 9), float64],) {
  %918 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %919 = %918.1;
  (%919,)
}

def @func_23815() -> (Tensor[(5, 14, 8), float64],) {
  %921 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %920 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
    (%920,)
  };
  %921() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_15610() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_8458() -> (Tensor[(5, 14, 8), float64],) {
  @func_8456() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_23153(%var_23151: Tensor[(9, 8, 7), int16], %var_23152: Tensor[(9, 8, 7), int16]) -> Tensor[(9, 8, 7), bool] {
  @func_23149(%var_23151, %var_23152) /* ty=Tensor[(9, 8, 7), bool] */
}

def @func_21295() -> (Tensor[(6), float32],) {
  %924 = fn () -> (Tensor[(6), float32],) {
    %922 = @func_13502() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %923 = %922.1;
    (%923,)
  };
  %924() /* ty=(Tensor[(6), float32],) */
}

def @func_23504() -> (Tensor[(5, 14, 8), float64],) {
  @func_23502() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_9159() -> (Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) {
  @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */
}

def @func_19717() -> (Tensor[(6), float32],) {
  %927 = fn () -> (Tensor[(6), float32],) {
    %925 = @func_17895() /* ty=(Tensor[(6), float32],) */;
    %926 = %925.0;
    (%926,)
  };
  %927() /* ty=(Tensor[(6), float32],) */
}

def @func_10059(%var_10052: uint64, %var_10053: Tensor[(11, 6, 5), uint64]) -> (Tensor[(11, 6, 5), bool],) {
  %928 = cast(%var_10052, dtype="bool") /* ty=bool */;
  %929 = cast(%var_10053, dtype="bool") /* ty=Tensor[(11, 6, 5), bool] */;
  %930 = less_equal(%928, %929) /* ty=Tensor[(11, 6, 5), bool] */;
  (%930,)
}

def @func_19987() -> (Tensor[(6), float32],) {
  @func_19985() /* ty=(Tensor[(6), float32],) */
}

def @func_8335() -> (Tensor[(5, 14, 8), float64],) {
  %933 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %931 = @func_8176() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %932 = %931.0;
    (%932,)
  };
  %933() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_20011() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %938 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %934 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
    %935 = @func_15685() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %936 = %934.0;
    %937 = %935.1;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_12070() -> (Tensor[(5, 14, 8), float64], Tensor[(200), float64]) {
  %939 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %942 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
  %943 = cosh(%941) /* ty=Tensor[(5, 14, 8), float64] */;
  %944 = %942.2;
  (%943, %944)
}

def @func_20553() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  @func_20551() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_24127() -> (Tensor[(5, 14, 8), float64],) {
  %945 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %946 = %945.0;
  (%946,)
}

def @func_12400() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_19466() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  @func_19464() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */
}

def @func_8118(%var_8116: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) {
  @func_8115(%var_8116) /* ty=(Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) */
}

def @func_9785() -> (Tensor[(5, 13, 9), float64],) {
  @func_9783() /* ty=(Tensor[(5, 13, 9), float64],) */
}

def @func_14452() -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %952 = fn () -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
    %947 = @func_13443() /* ty=(Tensor[(6), float32],) */;
    %948 = cast(meta[relay.Constant][47] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %949 = reshape(%948, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
    %950 = %947.0;
    %951 = @func_1443(%949) /* ty=Tensor[(8, 5, 8), int64] */;
    (%950, %951, meta[relay.Constant][47] /* ty=Tensor[(40), int64] */)
  };
  %952() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */
}

def @func_7654(%var_7653: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  %961 = fn (%var_7650: Tensor[(6), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) {
    %953 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %954 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %955 = cast(%var_7650, dtype="float32") /* ty=Tensor[(6), float32] */;
    %956 = reshape(%955, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %957 = @func_7344(%956) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
    %958 = %953.1;
    %959 = %954.1;
    %960 = %957.3;
    (%958, %959, %960, %var_7650)
  };
  %961(%var_7653) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */
}

def @func_7805(%var_7764: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 14, 8), uint32],) {
  %962 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %963 = cast(%var_7764, dtype="uint32") /* ty=Tensor[(5, 14, 8), uint32] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="uint32") /* ty=Tensor[(5, 14, 8), uint32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %967 = logical_xor(%965, %966) /* ty=Tensor[(5, 14, 8), uint32] */;
  (%967,)
}

def @func_16692() -> (Tensor[(6), float32], Tensor[(160), float64], Tensor[(10, 16, 1), float64], Tensor[(6), float32], Tensor[(6), float32]) {
  @func_16690() /* ty=(Tensor[(6), float32], Tensor[(160), float64], Tensor[(10, 16, 1), float64], Tensor[(6), float32], Tensor[(6), float32]) */
}

def @func_15235() -> (Tensor[(5, 14, 8), float64],) {
  @func_15233() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_15037() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %968 = cast(meta[relay.Constant][48] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %969 = cast(meta[relay.Constant][48] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %970 = reshape(%968, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %971 = reshape(%969, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %972 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %973 = @func_12819() /* ty=Tensor[(5, 14, 8), float64] */;
  %974 = @func_7174(%970, %971) /* ty=Tensor[(12, 10, 9), int8] */;
  %975 = %972.0;
  %976 = @func_12292() /* ty=Tensor[(5, 14, 8), float64] */;
  (%973, %974, meta[relay.Constant][48] /* ty=Tensor[(1080), int8] */, %975, %976)
}

def @func_21309() -> (Tensor[(40), int64], Tensor[(6), float32]) {
  %977 = @func_16969() /* ty=(Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) */;
  %978 = @func_19834() /* ty=(Tensor[(1, 1, 6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
  %979 = %977.2;
  %980 = %978.2;
  (%979, %980)
}

def @func_22649() -> Tensor[(23400), float64] {
  @func_22647() /* ty=Tensor[(23400), float64] */
}

def @func_22906() -> (Tensor[(6), float32],) {
  %982 = fn () -> (Tensor[(6), float32],) {
    %981 = @func_8445() /* ty=Tensor[(6), float32] */;
    (%981,)
  };
  %982() /* ty=(Tensor[(6), float32],) */
}

def @func_7808(%var_7806: Tensor[(5, 14, 8), float64]) -> (Tensor[(5, 14, 8), uint32],) {
  @func_7805(%var_7806) /* ty=(Tensor[(5, 14, 8), uint32],) */
}

def @func_12768() -> (Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
  @func_12766() /* ty=(Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */
}

def @func_11448() -> (Tensor[(5, 14, 8), float64],) {
  @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_13212(%var_13209: Tensor[(10, 13, 12), uint16], %var_13210: Tensor[(6), float32], %var_13211: Tensor[(1080), int8]) -> (Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) {
  %1000 = fn (%var_13181: Tensor[(10, 13, 12), uint16], %var_13199: Tensor[(6), float32], %var_13204: Tensor[(1080), int8]) -> (Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) {
    %983 = cast(%var_13181, dtype="uint16") /* ty=Tensor[(10, 13, 12), uint16] */;
    %984 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(10, 13, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %985 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(10, 13, 12), uint16] */;
    %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %987 = cast(%var_13181, dtype="float64") /* ty=Tensor[(10, 13, 12), float64] */;
    %988 = cast(%var_13199, dtype="float32") /* ty=Tensor[(6), float32] */;
    %989 = reshape(%988, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %990 = @func_7344(%989) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(1, 1, 6), float32], Tensor[(14, 3, 16), bool]) */;
    %991 = cast(meta[relay.Constant][50] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %992 = cast(%var_13204, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %993 = reshape(%991, newshape=[195, 3]) /* ty=Tensor[(195, 3), float64] */;
    %994 = reshape(%992, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %995 = @func_11145(%993, %994) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 4, 6), float64], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(5, 13, 9), float32], Tensor[(195, 3), float64], Tensor[(40), int64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %996 = multiply(%985, %986) /* ty=Tensor[(10, 13, 12), uint16] */;
    %997 = atanh(%987) /* ty=Tensor[(10, 13, 12), float64] */;
    %998 = %990.5;
    %999 = %995.5;
    (%996, %997, %998, %var_13199, %999, meta[relay.Constant][50] /* ty=Tensor[(585), float64] */, %var_13204)
  };
  %1000(%var_13209, %var_13210, %var_13211) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */
}

def @func_14335() -> (Tensor[(5, 14, 8), float64],) {
  @func_14333() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_11332(%var_11329: Tensor[(100, 2), float64], %var_11330: Tensor[(1183), float32], %var_11331: Tensor[(52, 450), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) {
  @func_11327(%var_11329, %var_11330, %var_11331) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) */
}

def @func_16177() -> (Tensor[(5, 14, 8), float64],) {
  @func_16175() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_5541(%var_5487: Tensor[(9, 5, 9), float64], %var_5507: Tensor[(624), float32], %var_5513: Tensor[(200), float64]) -> (Tensor[(9, 5, 9), float64], Tensor[(13, 12, 4), float32], Tensor[(672), uint8], Tensor[(624), float32], Tensor[(168, 4), uint8], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32]) {
  %1001 = cast(%var_5487, dtype="float64") /* ty=Tensor[(9, 5, 9), float64] */;
  %1002 = cast(meta[relay.Constant][51] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1003 = cast(%var_5507, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1004 = reshape(%1002, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1005 = reshape(%1003, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1006 = @func_5195(%1004, %1005) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
  %1007 = cast(meta[relay.Constant][52] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %1008 = cast(%var_5513, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1009 = cast(meta[relay.Constant][53] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1010 = reshape(%1007, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %1011 = reshape(%1008, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
  %1012 = reshape(%1009, newshape=[6]) /* ty=Tensor[(6), float32] */;
  %1013 = @func_4663(%1010, %1011, %1012) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
  %1014 = sqrt(%1001) /* ty=Tensor[(9, 5, 9), float64] */;
  %1015 = %1006.4;
  %1016 = %1013.3;
  (%1014, %1015, meta[relay.Constant][51] /* ty=Tensor[(672), uint8] */, %var_5507, %1016, meta[relay.Constant][52] /* ty=Tensor[(50), float64] */, %var_5513, meta[relay.Constant][53] /* ty=Tensor[(6), float32] */)
}

def @func_7269() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1028 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1017 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
    %1018 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1020 = cast(%1017, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1022 = cast(%1017, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %1023 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(5, 14, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1024 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1026 = maximum(%1020, %1021) /* ty=Tensor[(5, 14, 8), float64] */;
    %1027 = power(%1024, %1025) /* ty=Tensor[(5, 14, 8), float64] */;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_14940(%var_14892: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1029 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1030 = cast(%var_14892, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1031 = reshape(%1030, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1032 = @func_9604(%1031) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
  %1033 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1034 = %1029.0;
  %1035 = %1032.2;
  %1036 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  %1037 = %1033.0;
  %1038 = @func_14252() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1034, %1035, %var_14892, %1036, %1037, %1038)
}

def @func_15280(%var_15279: Tensor[(11, 13, 2), float64]) -> Tensor[(11, 13, 2), float64] {
  %1040 = fn (%var_15272: Tensor[(11, 13, 2), float64]) -> Tensor[(11, 13, 2), float64] {
    %1039 = cast(%var_15272, dtype="float64") /* ty=Tensor[(11, 13, 2), float64] */;
    asin(%1039) /* ty=Tensor[(11, 13, 2), float64] */
  };
  %1040(%var_15279) /* ty=Tensor[(11, 13, 2), float64] */
}

def @func_16816() -> Tensor[(5, 13, 9), float64] {
  %1042 = fn () -> Tensor[(5, 13, 9), float64] {
    %1041 = @func_9783() /* ty=(Tensor[(5, 13, 9), float64],) */;
    %1041.0
  };
  %1042() /* ty=Tensor[(5, 13, 9), float64] */
}

def @func_21567() -> (Tensor[(11, 11, 14), float32],) {
  %1043 = cast(meta[relay.Constant][55] /* ty=Tensor[(11, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 14), float32] */;
  %1044 = atanh(%1043) /* ty=Tensor[(11, 11, 14), float32] */;
  (%1044,)
}

def @func_21689() -> (Tensor[(5, 14, 8), float64],) {
  @func_21687() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_22821() -> Tensor[(5, 14, 8), float64] {
  %1046 = fn () -> Tensor[(5, 14, 8), float64] {
    %1045 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1045.1
  };
  %1046() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_15801() -> (Tensor[(5, 14, 8), float64],) {
  %1047 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1048 = %1047.0;
  (%1048,)
}

def @func_18562() -> (Tensor[(6), float32],) {
  %1050 = fn () -> (Tensor[(6), float32],) {
    %1049 = @func_17256() /* ty=Tensor[(6), float32] */;
    (%1049,)
  };
  %1050() /* ty=(Tensor[(6), float32],) */
}

def @func_8447() -> Tensor[(6), float32] {
  @func_8445() /* ty=Tensor[(6), float32] */
}

def @func_23108() -> Tensor[(6), float32] {
  %1051 = @func_21935() /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %1051.0
}

def @func_1445(%var_1444: Tensor[(8, 5, 1), int64]) -> Tensor[(8, 5, 8), int64] {
  %1054 = fn (%var_1426: Tensor[(8, 5, 1), int64]) -> Tensor[(8, 5, 8), int64] {
    %1052 = cast(%var_1426, dtype="int64") /* ty=Tensor[(8, 5, 1), int64] */;
    %1053 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 5, 8), int64] */, dtype="int64") /* ty=Tensor[(8, 5, 8), int64] */;
    minimum(%1052, %1053) /* ty=Tensor[(8, 5, 8), int64] */
  };
  %1054(%var_1444) /* ty=Tensor[(8, 5, 8), int64] */
}

def @func_14555(%var_14552: Tensor[(1183), float32], %var_14553: Tensor[(1183), float32], %var_14554: Tensor[(1760), float32]) -> (Tensor[(1183), bool], Tensor[(1183), uint16], Tensor[(1183), float32], Tensor[(6), float32], Tensor[(11, 10, 16), float32], Tensor[(1760), float32]) {
  %1079 = fn (%var_14501: Tensor[(1183), float32], %var_14518: Tensor[(1183), float32], %var_14538: Tensor[(1760), float32]) -> (Tensor[(1183), bool], Tensor[(1183), uint16], Tensor[(1183), float32], Tensor[(6), float32], Tensor[(11, 10, 16), float32], Tensor[(1760), float32]) {
    %1055 = @func_9157() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(7, 13, 13), float32], Tensor[(1183), float32]) */;
    %1056 = %1055.2;
    %1057 = cast(%var_14501, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1059 = cast(%1056, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1061 = divide(%1059, %1060) /* ty=Tensor[(1183), float32] */;
    %1062 = cast(%1061, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %1063 = shape_of(%var_14501, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1064 = cast(%var_14501, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1066 = cast(%var_14518, dtype="uint16") /* ty=Tensor[(1183), uint16] */;
    %1067 = shape_of(%1056, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1068 = cast(%1056, dtype="uint16") /* ty=Tensor[(1183), uint16] */;
    %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %1070 = cast(%1061, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %1071 = cast(%var_14538, dtype="float32") /* ty=Tensor[(1760), float32] */;
    %1072 = reshape(%1071, newshape=[11, 10, 16]) /* ty=Tensor[(11, 10, 16), float32] */;
    %1073 = @func_10898(%1072) /* ty=(Tensor[(11, 10, 16), float32],) */;
    %1074 = not_equal(%1064, %1065) /* ty=Tensor[(1183), bool] */;
    %1075 = left_shift(%1068, %1069) /* ty=Tensor[(1183), uint16] */;
    %1076 = asin(%1070) /* ty=Tensor[(1183), float32] */;
    %1077 = @func_11970() /* ty=Tensor[(6), float32] */;
    %1078 = %1073.0;
    (%1074, %1075, %1076, %1077, %1078, %var_14538)
  };
  %1079(%var_14552, %var_14553, %var_14554) /* ty=(Tensor[(1183), bool], Tensor[(1183), uint16], Tensor[(1183), float32], Tensor[(6), float32], Tensor[(11, 10, 16), float32], Tensor[(1760), float32]) */
}

def @func_8776() -> Tensor[(5, 14, 8), float64] {
  %1081 = fn () -> Tensor[(5, 14, 8), float64] {
    %1080 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1080.0
  };
  %1081() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_21232() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1086 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1082 = @func_11528() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) */;
    %1083 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %1084 = %1082.1;
    %1085 = %1083.1;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_16055() -> (Tensor[(5, 14, 8), float64],) {
  %1087 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_23226() -> (Tensor[(5, 14, 8), float64],) {
  %1091 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %1089 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1090 = %1089.0;
    (%1090,)
  };
  %1091() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_23243() -> (Tensor[(23400), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1092 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1093 = @func_22634() /* ty=Tensor[(23400), float64] */;
  %1094 = @func_18977() /* ty=Tensor[(6), float32] */;
  %1095 = %1092.3;
  (%1093, %1094, %1095)
}

def @func_15856() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1096 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1097 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %1098 = %1096.0;
  %1099 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %1100 = %1097.2;
  (%1098, %1099, %1100)
}

def @func_17872() -> Tensor[(5, 14, 8), float64] {
  @func_7412() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_19554() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1106 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %1101 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %1102 = @func_14451() /* ty=(Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
    %1103 = %1101.2;
    %1104 = @func_15720() /* ty=Tensor[(5, 14, 8), float64] */;
    %1105 = %1102.0;
    (%1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_12211() -> Tensor[(5, 14, 8), float64] {
  @func_12209() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_16918() -> (Tensor[(6), float32],) {
  @func_16916() /* ty=(Tensor[(6), float32],) */
}

def @func_7712() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_8115(%var_8097: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) {
  %1107 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1108 = %1107.0;
  %1109 = cast(%1108, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1110 = asin(%1109) /* ty=Tensor[(5, 14, 8), float64] */;
  %1111 = cast(%1110, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1112 = reshape(%1111, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
  %1113 = @func_7805(%1112) /* ty=(Tensor[(5, 14, 8), uint32],) */;
  %1114 = cast(%var_8097, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1115 = cast(%var_8097, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1116 = reshape(%1114, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1117 = reshape(%1115, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1118 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 14, 8), float64] */, dtype="uint64") /* ty=Tensor[(5, 14, 8), uint64] */;
  %1119 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%1110, dtype="uint64") /* ty=Tensor[(5, 14, 8), uint64] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1122 = @func_7174(%1116, %1117) /* ty=Tensor[(12, 10, 9), int8] */;
  %1123 = cast(%1122, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %1124 = cast(%1122, dtype="int8") /* ty=Tensor[(12, 10, 9), int8] */;
  %1125 = reshape(%1123, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1126 = reshape(%1124, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1127 = %1113.0;
  %1128 = bitwise_or(%1120, %1121) /* ty=Tensor[(5, 14, 8), uint64] */;
  %1129 = @func_7174(%1125, %1126) /* ty=Tensor[(12, 10, 9), int8] */;
  (%1127, %1122, %var_8097, %1128, %1129)
}

def @func_11681() -> Tensor[(5, 14, 8), float64] {
  @func_11679() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_10425() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_19563() -> Tensor[(5, 13, 9), float64] {
  @func_19561() /* ty=Tensor[(5, 13, 9), float64] */
}

def @func_15233() -> (Tensor[(5, 14, 8), float64],) {
  %1130 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1131 = %1130.0;
  (%1131,)
}

def @func_15722() -> Tensor[(5, 14, 8), float64] {
  @func_15720() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_17256() -> Tensor[(6), float32] {
  %1132 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %1132.0
}

def @func_17839(%var_17838: Tensor[(6), float32]) -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1138 = fn (%var_17835: Tensor[(6), float32]) -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %1133 = cast(%var_17835, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1134 = reshape(%1133, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1135 = @func_7652(%1134) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %1136 = @func_17206() /* ty=Tensor[(23400), float64] */;
    %1137 = %1135.1;
    (%1136, %1137, %var_17835)
  };
  %1138(%var_17838) /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_21983() -> (Tensor[(23400), float64], Tensor[(6), float32]) {
  @func_21981() /* ty=(Tensor[(23400), float64], Tensor[(6), float32]) */
}

def @func_11867() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) {
  %1139 = @func_7960() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1140 = @func_8811() /* ty=(Tensor[(6), float32],) */;
  %1141 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1142 = cast(meta[relay.Constant][58] /* ty=Tensor[(1183), float32] */, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %1143 = reshape(%1142, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
  %1144 = @func_7382(%1143) /* ty=Tensor[(7, 13, 13), float32] */;
  %1145 = cast(%1144, dtype="int8") /* ty=Tensor[(7, 13, 13), int8] */;
  %1146 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(1183), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1147 = cast(meta[relay.Constant][58] /* ty=Tensor[(1183), float32] */, dtype="int8") /* ty=Tensor[(1183), int8] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?), int8] */;
  %1149 = multiply(%1147, %1148) /* ty=Tensor[(1183), int8] */;
  %1150 = cast(%1149, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %1151 = %1139.0;
  %1152 = %1140.0;
  %1153 = %1141.0;
  %1154 = log(%1150) /* ty=Tensor[(1183), float64] */;
  (%1151, %1152, %1153, %1154)
}

def @func_17896() -> (Tensor[(6), float32],) {
  %1157 = fn () -> (Tensor[(6), float32],) {
    %1155 = @func_16140() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %1156 = %1155.2;
    (%1156,)
  };
  %1157() /* ty=(Tensor[(6), float32],) */
}

def @func_24025(%var_24023: Tensor[(672), uint8], %var_24024: Tensor[(624), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(672), uint8], Tensor[(624), float32]) {
  %1166 = fn (%var_24019: Tensor[(672), uint8], %var_24020: Tensor[(624), float32]) -> (Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(672), uint8], Tensor[(624), float32]) {
    %1158 = @func_21010() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1159 = cast(%var_24019, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %1160 = cast(%var_24020, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1161 = reshape(%1159, newshape=[672]) /* ty=Tensor[(672), uint8] */;
    %1162 = reshape(%1160, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %1163 = @func_5195(%1161, %1162) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */;
    %1164 = %1158.1;
    %1165 = %1163.2;
    (%1164, %1165, %var_24019, %var_24020)
  };
  %1166(%var_24023, %var_24024) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(672), uint8], Tensor[(672), uint8], Tensor[(624), float32]) */
}

def @func_22109(%var_22108: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(15, 9, 1), float64], Tensor[(15, 9), float64], Tensor[(23400), bool], Tensor[(2600, 9), int64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
  %1187 = fn (%var_22089: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(15, 9, 1), float64], Tensor[(15, 9), float64], Tensor[(23400), bool], Tensor[(2600, 9), int64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
    %1167 = cast(meta[relay.Constant][59] /* ty=Tensor[(15, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 9), float64] */;
    %1168 = reshape(%1167, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), float64] */;
    %1169 = @func_13238(%1168) /* ty=(Tensor[(15, 9, 1), float64],) */;
    %1170 = cast(meta[relay.Constant][60] /* ty=Tensor[(2600, 9), int64] */, dtype="int64") /* ty=Tensor[(2600, 9), int64] */;
    %1171 = reshape(%1170, newshape=[23400]) /* ty=Tensor[(23400), int64] */;
    %1172 = @func_10206(%1171) /* ty=(Tensor[(2, 20), int64], Tensor[(10, 4), int64], Tensor[(23400), bool], Tensor[(23400), bool]) */;
    %1173 = @func_16195() /* ty=Tensor[(6), float32] */;
    %1174 = cast(%1173, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1175 = reshape(%1174, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1176 = @func_17837(%1175) /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %1177 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %1178 = cast(%var_22089, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1179 = reshape(%1178, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %1180 = @func_9604(%1179) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(12, 10, 9), int8]) */;
    %1181 = @func_12209() /* ty=Tensor[(5, 14, 8), float64] */;
    %1182 = %1169.0;
    %1183 = %1172.2;
    %1184 = %1176.2;
    %1185 = %1177.0;
    %1186 = %1180.2;
    (%1181, %1182, meta[relay.Constant][59] /* ty=Tensor[(15, 9), float64] */, %1183, meta[relay.Constant][60] /* ty=Tensor[(2600, 9), int64] */, %1173, %1184, %1185, %1186, %var_22089)
  };
  %1187(%var_22108) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(15, 9, 1), float64], Tensor[(15, 9), float64], Tensor[(23400), bool], Tensor[(2600, 9), int64], Tensor[(6), float32], Tensor[(6), float32], Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) */
}

def @func_6597(%var_6595: Tensor[(5, 13, 9), float64], %var_6596: Tensor[(40), int64]) -> (Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) {
  %1197 = fn (%var_6578: Tensor[(5, 13, 9), float64], %var_6590: Tensor[(40), int64]) -> (Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) {
    %1188 = cast(%var_6578, dtype="float32") /* ty=Tensor[(5, 13, 9), float32] */;
    %1189 = cast(%var_6590, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1190 = reshape(%1189, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
    %1191 = cast(%var_6578, dtype="float64") /* ty=Tensor[(5, 13, 9), float64] */;
    %1192 = cosh(%1191) /* ty=Tensor[(5, 13, 9), float64] */;
    %1193 = cast(%1192, dtype="float64") /* ty=Tensor[(5, 13, 9), float64] */;
    %1194 = sinh(%1188) /* ty=Tensor[(5, 13, 9), float32] */;
    %1195 = @func_1443(%1190) /* ty=Tensor[(8, 5, 8), int64] */;
    %1196 = cos(%1193) /* ty=Tensor[(5, 13, 9), float64] */;
    (%1194, %1195, %var_6590, %1196)
  };
  %1197(%var_6595, %var_6596) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */
}

def @func_12292() -> Tensor[(5, 14, 8), float64] {
  %1198 = @func_9235() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */;
  %1198.4
}

def @func_18387() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), uint32], Tensor[(2, 780), uint16]) {
  %1211 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), uint32], Tensor[(2, 780), uint16]) {
    %1199 = @func_12398() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %1200 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1201 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 780), uint16] */, dtype="uint16") /* ty=Tensor[(2, 780), uint16] */;
    %1202 = @func_9840() /* ty=Tensor[(6), float32] */;
    %1203 = cast(%1202, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1204 = reshape(%1201, newshape=[1560]) /* ty=Tensor[(1560), uint16] */;
    %1205 = reshape(%1203, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1206 = @func_16286(%1204, %1205) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(10, 13, 12), uint16], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), uint32]) */;
    %1207 = %1199.0;
    %1208 = %1200.0;
    %1209 = @func_8742() /* ty=Tensor[(5, 14, 8), float32] */;
    %1210 = %1206.5;
    (%1207, %1208, %1202, %1209, %1210, meta[relay.Constant][61] /* ty=Tensor[(2, 780), uint16] */)
  };
  %1211() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), uint32], Tensor[(2, 780), uint16]) */
}

def @func_24197() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  @func_24195() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) */
}

def @func_19485() -> (Tensor[(5, 14, 8), float64],) {
  %1212 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1213 = %1212.0;
  (%1213,)
}

def @func_15984() -> Tensor[(1080), int8] {
  %1215 = fn () -> Tensor[(1080), int8] {
    %1214 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
    %1214.1
  };
  %1215() /* ty=Tensor[(1080), int8] */
}

def @func_21981() -> (Tensor[(23400), float64], Tensor[(6), float32]) {
  %1216 = @func_21795() /* ty=(Tensor[(23400), float64],) */;
  %1217 = %1216.0;
  %1218 = cast(meta[relay.Constant][62] /* ty=Tensor[(23400), float64] */, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1220 = cast(%1217, dtype="float64") /* ty=Tensor[(23400), float64] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1222 = @func_17895() /* ty=(Tensor[(6), float32],) */;
  %1223 = floor_divide(%1220, %1221) /* ty=Tensor[(23400), float64] */;
  %1224 = %1222.0;
  (%1223, %1224)
}

def @func_21555() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1225 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1226 = @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1227 = %1225.0;
  %1228 = %1226.0;
  (%1227, %1228)
}

def @func_9236() -> (Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
  %1241 = fn () -> (Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) {
    %1229 = @func_8811() /* ty=(Tensor[(6), float32],) */;
    %1230 = cast(meta[relay.Constant][63] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %1231 = cast(meta[relay.Constant][64] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1232 = reshape(%1230, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
    %1233 = reshape(%1231, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %1234 = @func_6594(%1232, %1233) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
    %1235 = %1229.0;
    %1236 = cast(%1235, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1237 = reshape(%1236, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1238 = @func_7652(%1237) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %1239 = %1234.3;
    %1240 = %1238.0;
    (%1235, %1239, meta[relay.Constant][63] /* ty=Tensor[(585), float64] */, meta[relay.Constant][64] /* ty=Tensor[(40), int64] */, %1240)
  };
  %1241() /* ty=(Tensor[(6), float32], Tensor[(5, 13, 9), float64], Tensor[(585), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64]) */
}

def @func_7598() -> (Tensor[(5, 14, 8), float64],) {
  %1242 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1243 = %1242.0;
  %1244 = cast(%1243, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1245 = cos(%1244) /* ty=Tensor[(5, 14, 8), float64] */;
  (%1245,)
}

def @func_21219() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) {
  @func_21217() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64]) */
}

def @func_10609() -> Tensor[(6), float32] {
  @func_10607() /* ty=Tensor[(6), float32] */
}

def @func_16637() -> Tensor[(5, 14, 8), float64] {
  @func_12819() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_10244() -> (Tensor[(5, 14, 8), float64],) {
  %1248 = fn () -> (Tensor[(5, 14, 8), float64],) {
    %1246 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1247 = %1246.0;
    (%1247,)
  };
  %1248() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_13405() -> Tensor[(5, 14, 8), float64] {
  %1250 = fn () -> Tensor[(5, 14, 8), float64] {
    %1249 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1249.0
  };
  %1250() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_17081() -> (Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
  %1257 = fn () -> (Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) {
    %1251 = @func_12263() /* ty=Tensor[(5, 14, 8), float64] */;
    %1252 = cast(%1251, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %1253 = reshape(%1252, newshape=[5, 14, 8]) /* ty=Tensor[(5, 14, 8), float64] */;
    %1254 = @func_7805(%1253) /* ty=(Tensor[(5, 14, 8), uint32],) */;
    %1255 = @func_15983() /* ty=Tensor[(1080), int8] */;
    %1256 = %1254.0;
    (%1255, %1251, %1256)
  };
  %1257() /* ty=(Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32]) */
}

def @func_17140() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1258 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1259 = %1258.0;
  %1260 = @func_8445() /* ty=Tensor[(6), float32] */;
  (%1259, %1260)
}

def @func_12718() -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) {
  %1263 = fn () -> (Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) {
    %1261 = @func_11403() /* ty=Tensor[(23400), float64] */;
    %1262 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
    (%1261, %1262)
  };
  %1263() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_9840() -> Tensor[(6), float32] {
  @func_8445() /* ty=Tensor[(6), float32] */
}

def @func_12820() -> Tensor[(5, 14, 8), float64] {
  %1264 = fn () -> Tensor[(5, 14, 8), float64] {
    @func_12441() /* ty=Tensor[(5, 14, 8), float64] */
  };
  %1264() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_12970() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1265 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1266 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_14159(%var_14148: Tensor[(1, 1183), float32], %var_14149: Tensor[(7800, 3), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(?, ?, 6), bool], Tensor[(5, 14, 8), float64], Tensor[(200), float64], Tensor[(1, 1183), float32], Tensor[(7800, 3), bool]) {
  %1268 = @func_11867() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64]) */;
  %1269 = @func_10696() /* ty=(Tensor[(6), float32], Tensor[(1, 1, 6), float32]) */;
  %1270 = %1269.1;
  %1271 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %1272 = %1271.0;
  %1273 = cast(%1272, dtype="bool") /* ty=Tensor[(6), bool] */;
  %1274 = shape_of(%1270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(%1270, dtype="bool") /* ty=Tensor[(1, 1, 6), bool] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1277 = cast(meta[relay.Constant][65] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %1278 = cast(%var_14148, dtype="float32") /* ty=Tensor[(1, 1183), float32] */;
  %1279 = cast(%var_14149, dtype="bool") /* ty=Tensor[(7800, 3), bool] */;
  %1280 = reshape(%1277, newshape=[100, 2]) /* ty=Tensor[(100, 2), float64] */;
  %1281 = reshape(%1278, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %1282 = reshape(%1279, newshape=[52, 450]) /* ty=Tensor[(52, 450), bool] */;
  %1283 = @func_11327(%1280, %1281, %1282) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) */;
  %1284 = @func_7412() /* ty=Tensor[(5, 14, 8), float64] */;
  %1285 = %1268.0;
  %1286 = not_equal(%1275, %1276) /* ty=Tensor[(?, ?, 6), bool] */;
  %1287 = %1283.5;
  (%1284, %1285, %1286, %1287, meta[relay.Constant][65] /* ty=Tensor[(200), float64] */, %var_14148, %var_14149)
}

def @func_9127() -> Tensor[(5, 14, 8), float64] {
  %1289 = fn () -> Tensor[(5, 14, 8), float64] {
    %1288 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1288.1
  };
  %1289() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_10287() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) {
  %1290 = @func_8445() /* ty=Tensor[(6), float32] */;
  %1291 = cast(%1290, dtype="float32") /* ty=Tensor[(6), float32] */;
  %1292 = reshape(%1291, newshape=[6, 1]) /* ty=Tensor[(6, 1), float32] */;
  %1293 = @func_9345(%1292) /* ty=(Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) */;
  %1294 = @func_8775() /* ty=Tensor[(5, 14, 8), float64] */;
  %1295 = %1293.0;
  (%1294, %1290, %1295)
}

def @func_15962() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1300 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1296 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1297 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %1298 = %1296.0;
    %1299 = %1297.0;
    (%1298, %1299)
  };
  %1300() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_9976() -> Tensor[(6), float32] {
  @func_9974() /* ty=Tensor[(6), float32] */
}

def @func_24168() -> (Tensor[(8, 2, 16), float32], Tensor[(5, 14, 8), float64]) {
  @func_24166() /* ty=(Tensor[(8, 2, 16), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_19335(%var_19263: Tensor[(10, 5, 5), float32], %var_19264: Tensor[(10, 5, 5), float32], %var_19279: Tensor[(91, 13), float32], %var_19280: Tensor[(23400), bool]) -> (Tensor[(10, 5, 5), float32], Tensor[(100, 2), float64], Tensor[(50, 4), float64], Tensor[(91, 13), float32], Tensor[(23400), bool], Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8]) {
  %1301 = cast(%var_19264, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %1302 = shape_of(%var_19263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1303 = cast(%var_19263, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1305 = cast(meta[relay.Constant][66] /* ty=Tensor[(50, 4), float64] */, dtype="float64") /* ty=Tensor[(50, 4), float64] */;
  %1306 = cast(%var_19279, dtype="float32") /* ty=Tensor[(91, 13), float32] */;
  %1307 = cast(%var_19280, dtype="bool") /* ty=Tensor[(23400), bool] */;
  %1308 = reshape(%1305, newshape=[100, 2]) /* ty=Tensor[(100, 2), float64] */;
  %1309 = reshape(%1306, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %1310 = reshape(%1307, newshape=[52, 450]) /* ty=Tensor[(52, 450), bool] */;
  %1311 = @func_11327(%1308, %1309, %1310) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) */;
  %1312 = cast(meta[relay.Constant][67] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1313 = reshape(%1312, newshape=[40, 1]) /* ty=Tensor[(40, 1), int64] */;
  %1314 = @func_14311(%1313) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) */;
  %1315 = @func_16301() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1316 = cast(meta[relay.Constant][68] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1317 = cast(meta[relay.Constant][68] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1318 = reshape(%1316, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1319 = reshape(%1317, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1320 = divide(%1303, %1304) /* ty=Tensor[(10, 5, 5), float32] */;
  %1321 = %1311.2;
  %1322 = %1314.2;
  %1323 = %1315.0;
  %1324 = @func_7174(%1318, %1319) /* ty=Tensor[(12, 10, 9), int8] */;
  (%1320, %1321, meta[relay.Constant][66] /* ty=Tensor[(50, 4), float64] */, %var_19279, %var_19280, %1322, meta[relay.Constant][67] /* ty=Tensor[(40), int64] */, %1323, %1324, meta[relay.Constant][68] /* ty=Tensor[(1080), int8] */)
}

def @func_11235() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1329 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1325 = @func_10035() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1326 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1327 = %1325.0;
    %1328 = %1326.0;
    (%1327, %1328)
  };
  %1329() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_21935() -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) {
  %1330 = @func_21309() /* ty=(Tensor[(40), int64], Tensor[(6), float32]) */;
  %1331 = %1330.1;
  %1332 = @func_20605() /* ty=Tensor[(6), float32] */;
  %1333 = @func_14741() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1331, %1332, %1333)
}

def @func_18557(%var_18556: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), bool],) {
  %1341 = fn (%var_18516: Tensor[(15, 11, 14), float64]) -> (Tensor[(15, 11, 14), bool],) {
    %1334 = cast(%var_18516, dtype="float64") /* ty=Tensor[(15, 11, 14), float64] */;
    %1335 = tan(%1334) /* ty=Tensor[(15, 11, 14), float64] */;
    %1336 = cast(%1335, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
    %1337 = shape_of(%var_18516, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1338 = cast(%var_18516, dtype="bool") /* ty=Tensor[(15, 11, 14), bool] */;
    %1339 = dyn.reshape(%1336, %1337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1340 = equal(%1338, %1339) /* ty=Tensor[(15, 11, 14), bool] */;
    (%1340,)
  };
  %1341(%var_18556) /* ty=(Tensor[(15, 11, 14), bool],) */
}

def @func_9189() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float32]) {
  @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */
}

def @func_20153(%var_20151: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64], Tensor[(40), int64]) {
  @func_20150(%var_20151) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64], Tensor[(40), int64]) */
}

def @func_13672() -> Tensor[(5, 14, 8), float64] {
  %1343 = fn () -> Tensor[(5, 14, 8), float64] {
    %1342 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1342.1
  };
  %1343() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_20250() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  @func_20248() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */
}

def @func_9889() -> (Tensor[(6), float32], Tensor[(1080), int8], Tensor[(1080), int8], Tensor[(6), float32]) {
  %1344 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1345 = cast(meta[relay.Constant][69] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1346 = reshape(%1345, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
  %1347 = @func_8115(%1346) /* ty=(Tensor[(5, 14, 8), uint32], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), uint64], Tensor[(12, 10, 9), int8]) */;
  %1348 = @func_9450() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
  %1349 = %1344.2;
  %1350 = %1347.2;
  %1351 = %1348.1;
  (%1349, %1350, meta[relay.Constant][69] /* ty=Tensor[(1080), int8] */, %1351)
}

def @func_23767() -> Tensor[(23400), float64] {
  %1352 = fn () -> Tensor[(23400), float64] {
    @func_17206() /* ty=Tensor[(23400), float64] */
  };
  %1352() /* ty=Tensor[(23400), float64] */
}

def @func_7385(%var_7383: Tensor[(7, 13, 13), float32]) -> Tensor[(7, 13, 13), float32] {
  @func_7382(%var_7383) /* ty=Tensor[(7, 13, 13), float32] */
}

def @func_16916() -> (Tensor[(6), float32],) {
  %1353 = @func_12460() /* ty=(Tensor[(6), float32],) */;
  %1354 = %1353.0;
  (%1354,)
}

def @func_12956() -> Tensor[(6), float32] {
  @func_9840() /* ty=Tensor[(6), float32] */
}

def @func_19039() -> (Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) {
  %1359 = fn () -> (Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) {
    %1355 = cast(meta[relay.Constant][70] /* ty=Tensor[(5, 4, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
    %1356 = @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1357 = tan(%1355) /* ty=Tensor[(5, 4, 13), float32] */;
    %1358 = %1356.3;
    (%1357, %1358)
  };
  %1359() /* ty=(Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) */
}

def @func_16141() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1365 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %1360 = @func_9187() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float32]) */;
    %1361 = @func_13249() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1362 = %1360.0;
    %1363 = %1361.0;
    %1364 = @func_10524() /* ty=Tensor[(6), float32] */;
    (%1362, %1363, %1364)
  };
  %1365() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_16408() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_16406() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_9408(%var_9373: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) {
  %1366 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1367 = cast(%var_9373, dtype="int64") /* ty=Tensor[(2, 20), int64] */;
  %1368 = reshape(%1367, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1369 = %1366.0;
  %1370 = @func_1443(%1368) /* ty=Tensor[(8, 5, 8), int64] */;
  (%1369, %1370, %var_9373)
}

def @func_15803() -> (Tensor[(5, 14, 8), float64],) {
  @func_15801() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_14662() -> (Tensor[(5, 14, 8), float64],) {
  %1371 = @func_10973() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(23400), float64]) */;
  %1372 = %1371.0;
  (%1372,)
}

def @func_321(%var_320: Tensor[(1, 1, 6), float32]) -> Tensor[(1, 1, 6), float32] {
  %1374 = fn (%var_315: Tensor[(1, 1, 6), float32]) -> Tensor[(1, 1, 6), float32] {
    %1373 = cast(%var_315, dtype="float32") /* ty=Tensor[(1, 1, 6), float32] */;
    tan(%1373) /* ty=Tensor[(1, 1, 6), float32] */
  };
  %1374(%var_320) /* ty=Tensor[(1, 1, 6), float32] */
}

def @func_17507() -> Tensor[(5, 14, 8), float32] {
  @func_8742() /* ty=Tensor[(5, 14, 8), float32] */
}

def @func_22331() -> Tensor[(5, 14, 8), float64] {
  @func_22329() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_14311(%var_14302: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) {
  %1375 = @func_13104() /* ty=(Tensor[(6), float32], Tensor[(6), float32]) */;
  %1376 = cast(%var_14302, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
  %1377 = reshape(%1376, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1378 = @func_7436(%1377) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */;
  %1379 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
  %1380 = %1379.2;
  %1381 = cast(%var_14302, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
  %1382 = cast(%1380, dtype="bool") /* ty=Tensor[(6), bool] */;
  %1383 = %1375.1;
  %1384 = @func_10524() /* ty=Tensor[(6), float32] */;
  %1385 = %1378.0;
  %1386 = equal(%1381, %1382) /* ty=Tensor[(40, 6), bool] */;
  (%1383, %1384, %1385, %1386)
}

def @func_15304() -> Tensor[(6), float32] {
  @func_15302() /* ty=Tensor[(6), float32] */
}

def @func_19789() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1387 = @func_9795() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1388 = @func_8334() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1389 = %1387.0;
  %1390 = %1388.0;
  (%1389, %1390)
}

def @func_22883() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_22881() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_12441() -> Tensor[(5, 14, 8), float64] {
  @func_12129() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_12958() -> Tensor[(6), float32] {
  @func_12956() /* ty=Tensor[(6), float32] */
}

def @func_8811() -> (Tensor[(6), float32],) {
  %1391 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1392 = %1391.2;
  (%1392,)
}

def @func_8953(%var_8951: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) {
  @func_8950(%var_8951) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float32], Tensor[(585), float64], Tensor[(2, 20), int64]) */
}

def @func_21742() -> (Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) {
  @func_21740() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */
}

def @func_21569() -> (Tensor[(11, 11, 14), float32],) {
  @func_21567() /* ty=(Tensor[(11, 11, 14), float32],) */
}

def @func_16092() -> Tensor[(5, 14, 8), float64] {
  %1394 = fn () -> Tensor[(5, 14, 8), float64] {
    %1393 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1393.0
  };
  %1394() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_15423() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1399 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1395 = @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1396 = @func_10524() /* ty=Tensor[(6), float32] */;
    %1397 = @func_11670() /* ty=Tensor[(5, 14, 8), float64] */;
    %1398 = %1395.0;
    (%1396, %1397, %1398)
  };
  %1399() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_16928() -> Tensor[(5, 14, 8), float64] {
  %1401 = fn () -> Tensor[(5, 14, 8), float64] {
    %1400 = @func_16055() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1400.0
  };
  %1401() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_15039() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_15037() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_7412() -> Tensor[(5, 14, 8), float64] {
  %1402 = @func_7268() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1402.1
}

def @func_21674(%var_21666: Tensor[(5, 4, 13), float32]) -> (Tensor[(5, 4, 13), uint32],) {
  %1403 = @func_19038() /* ty=(Tensor[(5, 4, 13), float32], Tensor[(5, 14, 8), float64]) */;
  %1404 = %1403.0;
  %1405 = cast(%var_21666, dtype="uint32") /* ty=Tensor[(5, 4, 13), uint32] */;
  %1406 = shape_of(%1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1407 = cast(%1404, dtype="uint32") /* ty=Tensor[(5, 4, 13), uint32] */;
  %1408 = dyn.reshape(%1405, %1406, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1409 = maximum(%1407, %1408) /* ty=Tensor[(5, 4, 13), uint32] */;
  (%1409,)
}

def @func_14812() -> (Tensor[(5, 14, 8), float64],) {
  @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_7710() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1410 = @func_7598() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1411 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  %1412 = %1410.0;
  (%1411, %1412)
}

def @func_23953() -> (Tensor[(6), float32], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 16, ?), uint32], Tensor[(5, 14, 8), float64]) {
  %1427 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 16, ?), uint32], Tensor[(5, 14, 8), float64]) {
    %1413 = @func_16140() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */;
    %1414 = @func_22796() /* ty=(Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) */;
    %1415 = @func_21740() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(1080), int8]) */;
    %1416 = @func_14810() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1417 = @func_22881() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1418 = @func_23355() /* ty=(Tensor[(14, 16, ?), uint32],) */;
    %1419 = @func_11446() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1420 = %1413.2;
    %1421 = %1414.2;
    %1422 = %1415.0;
    %1423 = %1416.0;
    %1424 = %1417.0;
    %1425 = %1418.0;
    %1426 = %1419.0;
    (%1420, %1421, %1422, %1423, %1424, %1425, %1426)
  };
  %1427() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 16, ?), uint32], Tensor[(5, 14, 8), float64]) */
}

def @func_15720() -> Tensor[(5, 14, 8), float64] {
  @func_12263() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_16057() -> (Tensor[(5, 14, 8), float64],) {
  @func_16055() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_10524() -> Tensor[(6), float32] {
  %1428 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
  %1428.1
}

def @func_13104() -> (Tensor[(6), float32], Tensor[(6), float32]) {
  %1429 = @func_12916() /* ty=(Tensor[(6), float32],) */;
  %1430 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
  %1431 = %1429.0;
  %1432 = %1430.1;
  (%1431, %1432)
}

def @func_10561(%var_10560: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
  %1434 = fn (%var_10553: Tensor[(16, 12, 4), float32]) -> Tensor[(16, 12, 4), float32] {
    %1433 = cast(%var_10553, dtype="float32") /* ty=Tensor[(16, 12, 4), float32] */;
    erf(%1433) /* ty=Tensor[(16, 12, 4), float32] */
  };
  %1434(%var_10560) /* ty=Tensor[(16, 12, 4), float32] */
}

def @func_16575(%var_16561: Tensor[(10, 16, 1), float64]) -> (Tensor[(10, 16, 1), float64],) {
  %1435 = cast(%var_16561, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  %1436 = cos(%1435) /* ty=Tensor[(10, 16, 1), float64] */;
  (%1436,)
}

def @func_10607() -> Tensor[(6), float32] {
  @func_10524() /* ty=Tensor[(6), float32] */
}

def @func_12443() -> Tensor[(5, 14, 8), float64] {
  @func_12441() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_22329() -> Tensor[(5, 14, 8), float64] {
  %1437 = @func_10839() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1437.0
}

def @func_16970() -> (Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
  %1443 = fn () -> (Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) {
    %1438 = cast(meta[relay.Constant][71] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1439 = reshape(%1438, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %1440 = @func_14940(%1439) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1441 = @func_9840() /* ty=Tensor[(6), float32] */;
    %1442 = %1440.2;
    (%1441, %1442, meta[relay.Constant][71] /* ty=Tensor[(40), int64] */)
  };
  %1443() /* ty=(Tensor[(6), float32], Tensor[(40), int64], Tensor[(40), int64]) */
}

def @func_9411(%var_9409: Tensor[(2, 20), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) {
  @func_9408(%var_9409) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(2, 20), int64]) */
}

def @func_11327(%var_11318: Tensor[(100, 2), float64], %var_11319: Tensor[(1183), float32], %var_11320: Tensor[(52, 450), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(100, 2), float64], Tensor[(1183), float32], Tensor[(52, 450), bool], Tensor[(5, 14, 8), float64]) {
  %1444 = cast(%var_11318, dtype="float64") /* ty=Tensor[(100, 2), float64] */;
  %1445 = cast(%var_11319, dtype="float32") /* ty=Tensor[(1183), float32] */;
  %1446 = cast(%var_11320, dtype="bool") /* ty=Tensor[(52, 450), bool] */;
  %1447 = reshape(%1444, newshape=[200]) /* ty=Tensor[(200), float64] */;
  %1448 = reshape(%1445, newshape=[1183]) /* ty=Tensor[(1183), float32] */;
  %1449 = reshape(%1446, newshape=[585, 40]) /* ty=Tensor[(585, 40), bool] */;
  %1450 = @func_7541(%1447, %1448, %1449) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */;
  %1451 = @func_10822() /* ty=Tensor[(5, 14, 8), float64] */;
  %1452 = %1450.6;
  %1453 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1451, %1452, %var_11318, %var_11319, %var_11320, %1453)
}

def @func_14943(%var_14941: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_14940(%var_14941) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_14314(%var_14312: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) {
  @func_14311(%var_14312) /* ty=(Tensor[(6), float32], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 6), bool]) */
}

def @func_8813() -> (Tensor[(6), float32],) {
  @func_8811() /* ty=(Tensor[(6), float32],) */
}

def @func_16598() -> Tensor[(5, 14, 8), float64] {
  @func_16596() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_22797() -> (Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) {
  %1462 = fn () -> (Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) {
    %1454 = @func_21341() /* ty=(Tensor[(200), float64],) */;
    %1455 = @func_21369() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1456 = @func_9000() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(6), float32]) */;
    %1457 = @func_14183() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1458 = %1454.0;
    %1459 = %1455.1;
    %1460 = %1456.1;
    %1461 = %1457.0;
    (%1458, %1459, %1460, %1461)
  };
  %1462() /* ty=(Tensor[(200), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), uint32], Tensor[(5, 14, 8), float64]) */
}

def @func_12553() -> (Tensor[(6), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  %1463 = cast(meta[relay.Constant][72] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
  %1464 = reshape(%1463, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), int64] */;
  %1465 = @func_11970() /* ty=Tensor[(6), float32] */;
  %1466 = @func_1443(%1464) /* ty=Tensor[(8, 5, 8), int64] */;
  (%1465, %1466, meta[relay.Constant][72] /* ty=Tensor[(40), int64] */)
}

def @func_7439(%var_7437: Tensor[(40), int64]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) {
  @func_7436(%var_7437) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(40), int64]) */
}

def @func_15686() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  %1473 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
    %1467 = @func_10287() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(1080), int8]) */;
    %1468 = @func_11528() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64]) */;
    %1469 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1470 = %1467.0;
    %1471 = %1468.1;
    %1472 = %1469.0;
    (%1470, %1471, %1472)
  };
  %1473() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_11672() -> Tensor[(5, 14, 8), float64] {
  @func_11670() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_24129() -> (Tensor[(5, 14, 8), float64],) {
  @func_24127() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_18092() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) {
  @func_18090() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 13, 9), float64]) */
}

def @func_21796() -> (Tensor[(23400), float64],) {
  %1475 = fn () -> (Tensor[(23400), float64],) {
    %1474 = @func_11403() /* ty=Tensor[(23400), float64] */;
    (%1474,)
  };
  %1475() /* ty=(Tensor[(23400), float64],) */
}

def @func_23899(%var_23896: Tensor[(2, 3, 11), int32], %var_23897: Tensor[(6), float32], %var_23898: Tensor[(1080), int8]) -> (Tensor[(2, 3, 11), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8]) {
  %1492 = fn (%var_23859: Tensor[(2, 3, 11), int32], %var_23888: Tensor[(6), float32], %var_23889: Tensor[(1080), int8]) -> (Tensor[(2, 3, 11), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8]) {
    %1476 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 3, 11), int32] */, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
    %1477 = shape_of(%var_23859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1478 = cast(%var_23859, dtype="bool") /* ty=Tensor[(2, 3, 11), bool] */;
    %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1480 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1481 = cast(meta[relay.Constant][74] /* ty=Tensor[(1560), uint16] */, dtype="uint16") /* ty=Tensor[(1560), uint16] */;
    %1482 = cast(%var_23888, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1483 = cast(%var_23889, dtype="int8") /* ty=Tensor[(1080), int8] */;
    %1484 = reshape(%1481, newshape=[10, 13, 12]) /* ty=Tensor[(10, 13, 12), uint16] */;
    %1485 = reshape(%1482, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1486 = reshape(%1483, newshape=[1080]) /* ty=Tensor[(1080), int8] */;
    %1487 = @func_13208(%1484, %1485, %1486) /* ty=(Tensor[(10, 13, 12), uint16], Tensor[(10, 13, 12), float64], Tensor[(14, 3, 16), bool], Tensor[(6), float32], Tensor[(195, 3), float64], Tensor[(585), float64], Tensor[(1080), int8]) */;
    %1488 = not_equal(%1478, %1479) /* ty=Tensor[(2, 3, 11), bool] */;
    %1489 = @func_20564() /* ty=Tensor[(5, 14, 8), float64] */;
    %1490 = %1480.0;
    %1491 = %1487.2;
    (%1488, %1489, %1490, %1491, meta[relay.Constant][74] /* ty=Tensor[(1560), uint16] */, %var_23888, %var_23889)
  };
  %1492(%var_23896, %var_23897, %var_23898) /* ty=(Tensor[(2, 3, 11), bool], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(14, 3, 16), bool], Tensor[(1560), uint16], Tensor[(6), float32], Tensor[(1080), int8]) */
}

def @func_19791() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_19789() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_22290() -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1499 = fn () -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
    %1493 = @func_18561() /* ty=(Tensor[(6), float32],) */;
    %1494 = @func_14662() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1495 = @func_21489() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %1496 = %1493.0;
    %1497 = %1494.0;
    %1498 = %1495.0;
    (%1496, %1497, %1498)
  };
  %1499() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) */
}

def @func_20073() -> (Tensor[(5, 14, 8), float64], Tensor[(12, 10, 9), int8], Tensor[(5, 14, 8), float64], Tensor[(6), float32]) {
  %1500 = @func_11234() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1501 = @func_13920() /* ty=(Tensor[(6), float32], Tensor[(12, 10, 9), int8], Tensor[(40), int64]) */;
  %1502 = @func_10243() /* ty=(Tensor[(5, 14, 8), float64],) */;
  %1503 = %1500.1;
  %1504 = %1501.1;
  %1505 = %1502.0;
  %1506 = @func_16779() /* ty=Tensor[(6), float32] */;
  (%1503, %1504, %1505, %1506)
}

def @func_14183() -> (Tensor[(5, 14, 8), float64],) {
  %1507 = @func_12129() /* ty=Tensor[(5, 14, 8), float64] */;
  (%1507,)
}

def @func_22443() -> (Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) {
  @func_22441() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */
}

def @func_16780() -> Tensor[(6), float32] {
  %1509 = fn () -> Tensor[(6), float32] {
    %1508 = @func_15608() /* ty=(Tensor[(6), float32], Tensor[(5, 14, 8), float64]) */;
    %1508.0
  };
  %1509() /* ty=Tensor[(6), float32] */
}

def @func_12130() -> Tensor[(5, 14, 8), float64] {
  %1511 = fn () -> Tensor[(5, 14, 8), float64] {
    %1510 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
    %1510.1
  };
  %1511() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_9345(%var_9330: Tensor[(6, 1), float32]) -> (Tensor[(1080), int8], Tensor[(?, ?, 6), uint64]) {
  %1512 = @func_8546() /* ty=(Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) */;
  %1513 = cast(%var_9330, dtype="float32") /* ty=Tensor[(6, 1), float32] */;
  %1514 = reshape(%1513, newshape=[1, 1, 6]) /* ty=Tensor[(1, 1, 6), float32] */;
  %1515 = @func_319(%1514) /* ty=Tensor[(1, 1, 6), float32] */;
  %1516 = cast(%var_9330, dtype="uint64") /* ty=Tensor[(6, 1), uint64] */;
  %1517 = shape_of(%1515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1518 = cast(%1515, dtype="uint64") /* ty=Tensor[(1, 1, 6), uint64] */;
  %1519 = dyn.reshape(%1516, %1517, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1520 = %1512.1;
  %1521 = bitwise_or(%1518, %1519) /* ty=Tensor[(?, ?, 6), uint64] */;
  (%1520, %1521)
}

def @func_8675() -> (Tensor[(5, 14, 8), float64],) {
  @func_8673() /* ty=(Tensor[(5, 14, 8), float64],) */
}

def @func_5198(%var_5196: Tensor[(672), uint8], %var_5197: Tensor[(624), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
  %1536 = fn (%var_5156: Tensor[(672), uint8], %var_5188: Tensor[(624), float32]) -> (Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) {
    %1522 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
    %1523 = cast(%var_5156, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %1524 = cast(meta[relay.Constant][76] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1525 = reshape(%1523, newshape=[14, 3, 16]) /* ty=Tensor[(14, 3, 16), uint8] */;
    %1526 = reshape(%1524, newshape=[3, 2]) /* ty=Tensor[(3, 2), float32] */;
    %1527 = @func_919(%1525, %1526) /* ty=(Tensor[(14, 3, 16), bool], Tensor[(1, 1, 6), float32], Tensor[(3, 2), float32]) */;
    %1528 = cast(%var_5188, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1529 = cast(%var_5188, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1530 = reshape(%1528, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
    %1531 = reshape(%1529, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), float32] */;
    %1532 = @func_2693(%1530, %1531) /* ty=(Tensor[(13, 12, 4), uint32], Tensor[(13, 12, 4), float32]) */;
    %1533 = log2(%1522) /* ty=Tensor[(7, 4, 6), float64] */;
    %1534 = %1527.0;
    %1535 = %1532.1;
    (%1533, %1534, %var_5156, meta[relay.Constant][76] /* ty=Tensor[(6), float32] */, %1535, %var_5188)
  };
  %1536(%var_5196, %var_5197) /* ty=(Tensor[(7, 4, 6), float64], Tensor[(14, 3, 16), bool], Tensor[(672), uint8], Tensor[(6), float32], Tensor[(13, 12, 4), float32], Tensor[(624), float32]) */
}

def @func_13456() -> (Tensor[(6), float32],) {
  %1539 = fn () -> (Tensor[(6), float32],) {
    %1537 = @func_7748() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(6), float32]) */;
    %1538 = %1537.1;
    (%1538,)
  };
  %1539() /* ty=(Tensor[(6), float32],) */
}

def @func_10765(%var_10764: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64],) {
  %1547 = fn (%var_10739: Tensor[(15, 11, 16), float64]) -> (Tensor[(15, 11, 16), float64],) {
    %1540 = cast(%var_10739, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
    %1541 = erf(%1540) /* ty=Tensor[(15, 11, 16), float64] */;
    %1542 = cast(%var_10739, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
    %1543 = shape_of(%1541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1544 = cast(%1541, dtype="float64") /* ty=Tensor[(15, 11, 16), float64] */;
    %1545 = dyn.reshape(%1542, %1543, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1546 = power(%1544, %1545) /* ty=Tensor[(15, 11, 16), float64] */;
    (%1546,)
  };
  %1547(%var_10764) /* ty=(Tensor[(15, 11, 16), float64],) */
}

def @func_8546() -> (Tensor[(12, 10, 9), int8], Tensor[(1080), int8], Tensor[(5, 14, 8), float64]) {
  %1548 = cast(meta[relay.Constant][77] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1549 = cast(meta[relay.Constant][77] /* ty=Tensor[(1080), int8] */, dtype="int8") /* ty=Tensor[(1080), int8] */;
  %1550 = reshape(%1548, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1551 = reshape(%1549, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
  %1552 = @func_7710() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1553 = %1552.1;
  %1554 = cast(%1553, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %1555 = @func_7174(%1550, %1551) /* ty=Tensor[(12, 10, 9), int8] */;
  %1556 = atanh(%1554) /* ty=Tensor[(5, 14, 8), float64] */;
  (%1555, meta[relay.Constant][77] /* ty=Tensor[(1080), int8] */, %1556)
}

def @func_14333() -> (Tensor[(5, 14, 8), float64],) {
  %1557 = @func_12717() /* ty=(Tensor[(23400), float64], Tensor[(5, 14, 8), float64]) */;
  %1558 = %1557.1;
  (%1558,)
}

def @func_15464(%var_15456: Tensor[(40, 1), int64]) -> (Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(40, 1), int64]) {
  %1559 = cast(%var_15456, dtype="int64") /* ty=Tensor[(40, 1), int64] */;
  %1560 = reshape(%1559, newshape=[40]) /* ty=Tensor[(40), int64] */;
  %1561 = @func_14940(%1560) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(40), int64], Tensor[(40), int64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1562 = @func_9974() /* ty=Tensor[(6), float32] */;
  %1563 = %1561.0;
  (%1562, %1563, %var_15456)
}

def @func_21342() -> (Tensor[(200), float64],) {
  %1566 = fn () -> (Tensor[(200), float64],) {
    %1564 = @func_8893() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(200), float64], Tensor[(1183), float32], Tensor[(23400), uint16], Tensor[(23400), bool], Tensor[(23400), int64]) */;
    %1565 = %1564.2;
    (%1565,)
  };
  %1566() /* ty=(Tensor[(200), float64],) */
}

def @func_16196() -> Tensor[(6), float32] {
  %1567 = fn () -> Tensor[(6), float32] {
    @func_10524() /* ty=Tensor[(6), float32] */
  };
  %1567() /* ty=Tensor[(6), float32] */
}

def @func_11670() -> Tensor[(5, 14, 8), float64] {
  %1568 = @func_10423() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64]) */;
  %1568.1
}

def @func_7196() -> Tensor[(5, 14, 8), float64] {
  %1570 = fn () -> Tensor[(5, 14, 8), float64] {
    %1569 = cast(meta[relay.Constant][78] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    acosh(%1569) /* ty=Tensor[(5, 14, 8), float64] */
  };
  %1570() /* ty=Tensor[(5, 14, 8), float64] */
}

def @func_7545(%var_7542: Tensor[(200), float64], %var_7543: Tensor[(1183), float32], %var_7544: Tensor[(585, 40), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) {
  %1615 = fn (%var_7488: Tensor[(200), float64], %var_7492: Tensor[(1183), float32], %var_7512: Tensor[(585, 40), bool]) -> (Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) {
    %1571 = cast(meta[relay.Constant][79] /* ty=Tensor[(585, 1), float64] */, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
    %1572 = cast(meta[relay.Constant][80] /* ty=Tensor[(40), int64] */, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1573 = reshape(%1571, newshape=[5, 13, 9]) /* ty=Tensor[(5, 13, 9), float64] */;
    %1574 = reshape(%1572, newshape=[40]) /* ty=Tensor[(40), int64] */;
    %1575 = @func_6594(%1573, %1574) /* ty=(Tensor[(5, 13, 9), float32], Tensor[(8, 5, 8), int64], Tensor[(40), int64], Tensor[(5, 13, 9), float64]) */;
    %1576 = cast(meta[relay.Constant][80] /* ty=Tensor[(40), int64] */, dtype="uint32") /* ty=Tensor[(40), uint32] */;
    %1577 = cast(meta[relay.Constant][79] /* ty=Tensor[(585, 1), float64] */, dtype="uint32") /* ty=Tensor[(585, 1), uint32] */;
    %1578 = cast(meta[relay.Constant][81] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %1579 = cast(%var_7488, dtype="float64") /* ty=Tensor[(200), float64] */;
    %1580 = cast(meta[relay.Constant][82] /* ty=Tensor[(6), float32] */, dtype="float32") /* ty=Tensor[(6), float32] */;
    %1581 = reshape(%1578, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
    %1582 = reshape(%1579, newshape=[4, 10, 5]) /* ty=Tensor[(4, 10, 5), float64] */;
    %1583 = reshape(%1580, newshape=[6]) /* ty=Tensor[(6), float32] */;
    %1584 = @func_4663(%1581, %1582, %1583) /* ty=(Tensor[(4, 10, 5), float64], Tensor[(8, 5, 8), int64], Tensor[(3, 2), float32], Tensor[(168, 4), uint8], Tensor[(6), float32], Tensor[(20, 2), float64]) */;
    %1585 = cast(%var_7492, dtype="float32") /* ty=Tensor[(1183), float32] */;
    %1586 = reshape(%1585, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float32] */;
    %1587 = cast(meta[relay.Constant][83] /* ty=Tensor[(90, 12), int8] */, dtype="int8") /* ty=Tensor[(90, 12), int8] */;
    %1588 = cast(meta[relay.Constant][83] /* ty=Tensor[(90, 12), int8] */, dtype="int8") /* ty=Tensor[(90, 12), int8] */;
    %1589 = reshape(%1587, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
    %1590 = reshape(%1588, newshape=[12, 10, 9]) /* ty=Tensor[(12, 10, 9), int8] */;
    %1591 = cast(meta[relay.Constant][80] /* ty=Tensor[(40), int64] */, dtype="int16") /* ty=Tensor[(40), int16] */;
    %1592 = cast(meta[relay.Constant][79] /* ty=Tensor[(585, 1), float64] */, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
    %1593 = bitwise_or(%1591, %1592) /* ty=Tensor[(585, 40), int16] */;
    %1594 = cast(%1593, dtype="float32") /* ty=Tensor[(585, 40), float32] */;
    %1595 = log(%1594) /* ty=Tensor[(585, 40), float32] */;
    %1596 = cast(%1595, dtype="bool") /* ty=Tensor[(585, 40), bool] */;
    %1597 = cast(meta[relay.Constant][80] /* ty=Tensor[(40), int64] */, dtype="bool") /* ty=Tensor[(40), bool] */;
    %1598 = greater(%1596, %1597) /* ty=Tensor[(585, 40), bool] */;
    %1599 = cast(%1598, dtype="bool") /* ty=Tensor[(585, 40), bool] */;
    %1600 = cast(meta[relay.Constant][79] /* ty=Tensor[(585, 1), float64] */, dtype="bool") /* ty=Tensor[(585, 1), bool] */;
    %1601 = less_equal(%1599, %1600) /* ty=Tensor[(585, 40), bool] */;
    %1602 = cast(%var_7512, dtype="float64") /* ty=Tensor[(585, 40), float64] */;
    %1603 = shape_of(%1601, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1604 = cast(%1601, dtype="float64") /* ty=Tensor[(585, 40), float64] */;
    %1605 = dyn.reshape(%1602, %1603, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1606 = floor_divide(%1604, %1605) /* ty=Tensor[(585, 40), float64] */;
    %1607 = cast(%1606, dtype="float32") /* ty=Tensor[(585, 40), float32] */;
    %1608 = @func_7195() /* ty=Tensor[(5, 14, 8), float64] */;
    %1609 = %1575.1;
    %1610 = multiply(%1576, %1577) /* ty=Tensor[(585, 40), uint32] */;
    %1611 = %1584.5;
    %1612 = @func_7382(%1586) /* ty=Tensor[(7, 13, 13), float32] */;
    %1613 = @func_7174(%1589, %1590) /* ty=Tensor[(12, 10, 9), int8] */;
    %1614 = rsqrt(%1607) /* ty=Tensor[(585, 40), float32] */;
    (%1608, %1609, %1610, %1611, meta[relay.Constant][81] /* ty=Tensor[(50), float64] */, %var_7488, meta[relay.Constant][82] /* ty=Tensor[(6), float32] */, %1612, %var_7492, %1613, meta[relay.Constant][83] /* ty=Tensor[(90, 12), int8] */, %1614)
  };
  %1615(%var_7542, %var_7543, %var_7544) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(8, 5, 8), int64], Tensor[(585, 40), uint32], Tensor[(20, 2), float64], Tensor[(50), float64], Tensor[(200), float64], Tensor[(6), float32], Tensor[(7, 13, 13), float32], Tensor[(1183), float32], Tensor[(12, 10, 9), int8], Tensor[(90, 12), int8], Tensor[(585, 40), float32]) */
}

def @func_18771(%var_18769: Tensor[(1080), int8]) -> (Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) {
  @func_18768(%var_18769) /* ty=(Tensor[(5, 14, 8), float64], Tensor[(624), float32], Tensor[(1080), int8], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float64], Tensor[(5, 13, 9), float64]) */
}

def @func_20866(%var_20864: Tensor[(2640), float64], %var_20865: Tensor[(1, 40), int64]) -> (Tensor[(6), float32], Tensor[(15, 11, 16), float64], Tensor[(2640), float64], Tensor[(12, 10, 9), int8], Tensor[(1, 40), float64]) {
  @func_20862(%var_20864, %var_20865) /* ty=(Tensor[(6), float32], Tensor[(15, 11, 16), float64], Tensor[(2640), float64], Tensor[(12, 10, 9), int8], Tensor[(1, 40), float64]) */
}

def @func_20943() -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float32]) {
  %1624 = fn () -> (Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float32]) {
    %1616 = @func_11897() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1617 = @func_17895() /* ty=(Tensor[(6), float32],) */;
    %1618 = @func_14032() /* ty=(Tensor[(5, 14, 8), float64],) */;
    %1619 = @func_19963() /* ty=(Tensor[(5, 14, 8), float32], Tensor[(5, 14, 8), float64], Tensor[(1183), float64], Tensor[(6), float32]) */;
    %1620 = %1616.0;
    %1621 = %1617.0;
    %1622 = %1618.0;
    %1623 = %1619.0;
    (%1620, %1621, %1622, %1623)
  };
  %1624() /* ty=(Tensor[(5, 14, 8), float64], Tensor[(6), float32], Tensor[(5, 14, 8), float64], Tensor[(5, 14, 8), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen964/build/output.py", line 5521, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:04:22] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


==========mod==========
#[version = "0.0.5"]
def @func_2245() -> Tensor[(14, 15, 11), float64] {
  %0 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  sinh(%2) /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_5326() -> Tensor[(14, 15, 11), float32] {
  @func_5297() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_10025(%var_9995: Tensor[(10, 16, 10), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(10, 16, 10), float32]) {
  %3 = @func_8604() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %4 = cast(%var_9995, dtype="float32") /* ty=Tensor[(10, 16, 10), float32] */;
  %5 = sqrt(%4) /* ty=Tensor[(10, 16, 10), float32] */;
  %6 = cast(%var_9995, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %10 = left_shift(%8, %9) /* ty=Tensor[(10, 16, 10), uint8] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(10, 16, 10), float32] */;
  %12 = %3.1;
  %13 = atanh(%11) /* ty=Tensor[(10, 16, 10), float32] */;
  (%12, %13)
}

def @func_9097() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %14 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %15 = @func_7440() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) */;
  %16 = %14.0;
  %17 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  %18 = @func_5326() /* ty=Tensor[(14, 15, 11), float32] */;
  %19 = %15.1;
  (%16, %17, %18, %19)
}

def @func_685() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %20 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %21 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %22 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %23 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %24 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %25 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %26 = %25.0;
  %27 = cast(%26, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %28 = acosh(%27) /* ty=Tensor[(14, 15, 11), float64] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %30 = cast(%28, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %31 = log2(%30) /* ty=Tensor[(14, 15, 11), float32] */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 15, 11), float32] */, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %36 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %37 = %20.0;
  %38 = %21.0;
  %39 = %22.1;
  %40 = %23.0;
  %41 = %24.0;
  %42 = cosh(%29) /* ty=Tensor[(14, 15, 11), float64] */;
  %43 = logical_xor(%34, %35) /* ty=Tensor[(14, 15, 11), int32] */;
  %44 = %36.0;
  %45 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%37, %38, %39, %40, %41, %42, %43, %44, %45)
}

def @func_7176() -> (Tensor[(1, 6, 5), float32],) {
  %46 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  (%46,)
}

def @func_8723(%var_8691: Tensor[(16, 16, 5), float64], %var_8692: Tensor[(16, 16, 5), float64]) -> Tensor[(16, 16, 5), float32] {
  %47 = cast(%var_8692, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %48 = shape_of(%var_8691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_8691, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %51 = greater(%49, %50) /* ty=Tensor[(16, 16, 5), bool] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  log(%52) /* ty=Tensor[(16, 16, 5), float32] */
}

def @func_9913() -> (Tensor[(14, 15, 11), float32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %53 = @func_8475() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) */;
  %54 = @func_2928() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) */;
  %55 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %56 = %53.0;
  %57 = %54.1;
  %58 = %55.0;
  %59 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%56, %57, %58, %59)
}

def @func_8112() -> Tensor[(14, 15, 11), float32] {
  %60 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %60.0
}

def @func_4885() -> Tensor[(14, 15, 11), float32] {
  %61 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %61.0
}

def @func_5384(%var_5379: Tensor[(280), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(4, 14, 5), float32], Tensor[(280), float32]) {
  %62 = @func_3762() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %63 = @func_4852() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %64 = cast(%var_5379, dtype="float32") /* ty=Tensor[(280), float32] */;
  %65 = reshape(%64, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), float32] */;
  %66 = @func_2336(%65) /* ty=(Tensor[(4, 14, 5), float32],) */;
  %67 = @func_3524() /* ty=Tensor[(14, 15, 11), float32] */;
  %68 = %62.0;
  %69 = %63.0;
  %70 = %66.0;
  (%67, %68, %69, %70, %var_5379)
}

def @func_287() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %71 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  %72 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%71, %72)
}

def @func_6635() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %73 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %74 = @func_6149() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) */;
  %75 = @func_1764() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %76 = %73.0;
  %77 = %74.0;
  %78 = %75.0;
  (%76, %77, %78)
}

def @func_1248() -> (Tensor[(14, 15, 11), float32],) {
  %79 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%79,)
}

def @func_8538() -> Tensor[(14, 15, 11), float32] {
  %80 = @func_5133() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) */;
  %80.1
}

def @func_3211(%var_3195: Tensor[(11, 15, 16), float64]) -> (Tensor[(14, 15, 11), float64], Tensor[(11, 15, 16), uint32]) {
  %81 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %82 = cast(%var_3195, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %83 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %86 = minimum(%84, %85) /* ty=Tensor[(11, 15, 16), float64] */;
  %87 = cast(%86, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %88 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 16), float64] */, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %91 = %81.2;
  %92 = logical_xor(%89, %90) /* ty=Tensor[(11, 15, 16), uint32] */;
  (%91, %92)
}

def @func_5924() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %93 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %94 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %95 = %93.1;
  %96 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
  %97 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
  %98 = %94.0;
  (%95, %96, %97, %98)
}

def @func_4484() -> (Tensor[(14, 15, 11), float32],) {
  %99 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %100 = %99.2;
  (%100,)
}

def @func_870(%var_839: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %101 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %102 = %101.0;
  %103 = cast(%var_839, dtype="int16") /* ty=Tensor[(14, 15, 11), int16] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="int16") /* ty=Tensor[(14, 15, 11), int16] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %107 = subtract(%105, %106) /* ty=Tensor[(14, 15, 11), int16] */;
  %108 = cast(%var_839, dtype="uint32") /* ty=Tensor[(14, 15, 11), uint32] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="uint32") /* ty=Tensor[(14, 15, 11), uint32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %112 = bitwise_and(%110, %111) /* ty=Tensor[(14, 15, 11), uint32] */;
  %113 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %114 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  %115 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%112, %113, %114, %115)
}

def @func_8361() -> Tensor[(14, 15, 11), float64] {
  @func_762() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_4112(%var_4101: Tensor[(10, 1, 14), float32]) -> (Tensor[(10, 1, 14), float32],) {
  %116 = cast(%var_4101, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
  %117 = exp(%116) /* ty=Tensor[(10, 1, 14), float32] */;
  (%117,)
}

def @func_1307() -> Tensor[(14, 15, 11), float32] {
  @func_247() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_7892() -> Tensor[(14, 15, 11), float32] {
  %118 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %118.0
}

def @func_1501(%var_1488: Tensor[(1, 13, 9), int32], %var_1489: Tensor[(7, 13, 9), int32], %var_1497: Tensor[(7, 13, 9), int32]) -> (Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) {
  %119 = cast(%var_1488, dtype="int32") /* ty=Tensor[(1, 13, 9), int32] */;
  %120 = cast(%var_1489, dtype="int32") /* ty=Tensor[(7, 13, 9), int32] */;
  %121 = cast(%var_1497, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %122 = shape_of(%var_1489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_1489, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = bitwise_xor(%119, %120) /* ty=Tensor[(7, 13, 9), int32] */;
  %126 = greater(%123, %124) /* ty=Tensor[(7, 13, 9), bool] */;
  (%125, %126)
}

def @func_8604() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %127 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %128 = @func_7115() /* ty=Tensor[(14, 15, 11), float32] */;
  %129 = %127.1;
  (%128, %129)
}

def @func_3762() -> (Tensor[(14, 15, 11), float64],) {
  %130 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %131 = %130.1;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %133 = acos(%132) /* ty=Tensor[(14, 15, 11), float64] */;
  %134 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %137 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%133, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %140 = floor_mod(%138, %139) /* ty=Tensor[(14, 15, 11), float64] */;
  (%140,)
}

def @func_4712() -> Tensor[(14, 15, 11), float32] {
  %141 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %141.1
}

def @func_8475() -> (Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) {
  %142 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %143 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
  %144 = %142.3;
  %145 = %143.0;
  (%144, %145)
}

def @func_9800() -> Tensor[(14, 15, 11), float32] {
  %146 = @func_8641() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %146.0
}

def @func_10201() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %147 = @func_3762() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %148 = @func_5405() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %149 = %147.0;
  %150 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
  %151 = %148.0;
  (%149, %150, %151)
}

def @func_3190() -> Tensor[(14, 15, 11), float32] {
  %152 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %152.0
}

def @func_3524() -> Tensor[(14, 15, 11), float32] {
  @func_2195() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_7563(%var_7531: Tensor[(810), int8], %var_7537: Tensor[(13, 169), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) {
  %153 = cast(meta[relay.Constant][2] /* ty=Tensor[(90), int8] */, dtype="int8") /* ty=Tensor[(90), int8] */;
  %154 = cast(%var_7531, dtype="int8") /* ty=Tensor[(810), int8] */;
  %155 = reshape(%153, newshape=[9, 1, 10]) /* ty=Tensor[(9, 1, 10), int8] */;
  %156 = reshape(%154, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int8] */;
  %157 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %158 = cast(%var_7537, dtype="uint64") /* ty=Tensor[(13, 169), uint64] */;
  %159 = reshape(%158, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), uint64] */;
  %160 = @func_7097(%159) /* ty=(Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) */;
  %161 = @func_3190() /* ty=Tensor[(14, 15, 11), float32] */;
  %162 = @func_4983(%155, %156) /* ty=Tensor[(9, 9, 10), bool] */;
  %163 = %157.0;
  %164 = %160.1;
  (%161, %162, meta[relay.Constant][2] /* ty=Tensor[(90), int8] */, %var_7531, %163, %164, %var_7537)
}

def @func_4983(%var_4958: Tensor[(9, 1, 10), int8], %var_4959: Tensor[(9, 9, 10), int8]) -> Tensor[(9, 9, 10), bool] {
  %165 = cast(%var_4958, dtype="bool") /* ty=Tensor[(9, 1, 10), bool] */;
  %166 = cast(%var_4959, dtype="bool") /* ty=Tensor[(9, 9, 10), bool] */;
  less(%165, %166) /* ty=Tensor[(9, 9, 10), bool] */
}

def @func_1034(%var_1014: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %167 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %168 = %167.0;
  %169 = cast(%var_1014, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%168, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %173 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %174 = floor_divide(%171, %172) /* ty=Tensor[(14, 15, 11), float64] */;
  %175 = %173.0;
  (%174, %175)
}

def @func_9027() -> Tensor[(14, 15, 11), float32] {
  %176 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %176.1
}

def @func_3341() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %177 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %178 = %177.0;
  %179 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%178, %179)
}

def @func_5045() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %180 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %181 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %182 = %180.0;
  %183 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %184 = %181.1;
  (%182, %183, %184)
}

def @func_8641() -> (Tensor[(14, 15, 11), float32],) {
  %185 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %186 = %185.0;
  (%186,)
}

def @func_10115() -> (Tensor[(14, 15, 11), float64], Tensor[(48), uint32], Tensor[(4, 12), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %187 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 12), uint32] */, dtype="uint32") /* ty=Tensor[(4, 12), uint32] */;
  %188 = reshape(%187, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %189 = @func_5715(%188) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) */;
  %190 = @func_4484() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %191 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %192 = @func_2245() /* ty=Tensor[(14, 15, 11), float64] */;
  %193 = %189.2;
  %194 = %190.0;
  %195 = %191.1;
  (%192, %193, meta[relay.Constant][3] /* ty=Tensor[(4, 12), uint32] */, %194, %195)
}

def @func_2062() -> (Tensor[(14, 15, 11), float32],) {
  %196 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %198 = exp(%197) /* ty=Tensor[(14, 15, 11), float32] */;
  (%198,)
}

def @func_10132(%var_10126: Tensor[(15, 10, 12), float32]) -> (Tensor[(15, 10, 12), bool],) {
  %199 = cast(%var_10126, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %200 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 10, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 10, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = less_equal(%201, %202) /* ty=Tensor[(15, 10, 12), bool] */;
  (%203,)
}

def @func_5418() -> Tensor[(14, 15, 11), float32] {
  %204 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %204.0
}

def @func_1153() -> Tensor[(14, 15, 11), float32] {
  %205 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %206 = %205.1;
  %207 = cast(%206, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  log10(%207) /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_2195() -> Tensor[(14, 15, 11), float32] {
  @func_247() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5715(%var_5682: Tensor[(48), uint32]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) {
  %208 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %209 = cast(%var_5682, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %210 = cast(%var_5682, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %211 = reshape(%209, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint32] */;
  %212 = reshape(%210, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint32] */;
  %213 = %208.0;
  %214 = @func_1780(%211, %212) /* ty=Tensor[(6, 2, 4), uint32] */;
  %215 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
  (%213, %214, %var_5682, %215)
}

def @func_9812() -> (Tensor[(14, 15, 11), float64],) {
  %216 = @func_8361() /* ty=Tensor[(14, 15, 11), float64] */;
  (%216,)
}

def @func_4688() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %217 = @func_4505() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %218 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  %219 = @func_3275() /* ty=Tensor[(14, 15, 11), float64] */;
  %220 = %217.2;
  (%218, %219, %220)
}

def @func_7115() -> Tensor[(14, 15, 11), float32] {
  %221 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %221.0
}

def @func_231() -> (Tensor[(14, 15, 11), float32],) {
  %222 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %223 = log(%222) /* ty=Tensor[(14, 15, 11), float32] */;
  (%223,)
}

def @func_1828() -> Tensor[(14, 15, 11), float32] {
  @func_247() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8311(%var_8295: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
  %224 = cast(%var_8295, dtype="int64") /* ty=Tensor[(240), int64] */;
  %225 = reshape(%224, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), int64] */;
  %226 = @func_2174(%225) /* ty=(Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) */;
  %227 = @func_3984() /* ty=Tensor[(14, 15, 11), float32] */;
  %228 = %226.3;
  (%227, %228, %var_8295)
}

def @func_1446() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
  %229 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %230 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %231 = %229.0;
  %232 = %230.1;
  (%231, %232)
}

def @func_2004() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %233 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  %234 = cast(%233, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %235 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %236 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  %237 = sigmoid(%234) /* ty=Tensor[(14, 15, 11), float32] */;
  %238 = %235.0;
  %239 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  (%236, %237, %238, %239)
}

def @func_4454() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %240 = @func_969() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %241 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %242 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %243 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %244 = %240.1;
  %245 = %241.0;
  %246 = %242.0;
  %247 = %243.0;
  (%244, %245, %246, %247)
}

def @func_3560(%var_3529: float64) -> (Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) {
  %248 = cast(%var_3529, dtype="float64") /* ty=float64 */;
  %249 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
  %250 = floor_mod(%248, %249) /* ty=Tensor[(8, 9, 14), float64] */;
  %251 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%250, %251)
}

def @func_9293() -> (Tensor[(4, 11, 8), uint8], Tensor[(14, 15, 11), float32]) {
  %252 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %253 = acos(%252) /* ty=Tensor[(4, 11, 8), float32] */;
  %254 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 11, 8), float32] */, dtype="uint8") /* ty=Tensor[(4, 11, 8), uint8] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="uint8") /* ty=Tensor[(4, 11, 8), uint8] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %258 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %259 = bitwise_and(%256, %257) /* ty=Tensor[(4, 11, 8), uint8] */;
  %260 = %258.0;
  (%259, %260)
}

def @func_1337() -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %261 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %262 = asin(%261) /* ty=Tensor[(15, 5, 11), float32] */;
  %263 = cast(%262, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %264 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(15, 5, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 5, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %267 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %268 = right_shift(%265, %266) /* ty=Tensor[(15, 5, 11), int16] */;
  (%267, %268)
}

def @func_1780(%var_1774: Tensor[(6, 2, 4), uint32], %var_1775: Tensor[(6, 2, 4), uint32]) -> Tensor[(6, 2, 4), uint32] {
  %269 = cast(%var_1775, dtype="uint32") /* ty=Tensor[(6, 2, 4), uint32] */;
  %270 = shape_of(%var_1774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_1774, dtype="uint32") /* ty=Tensor[(6, 2, 4), uint32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%271, %272) /* ty=Tensor[(6, 2, 4), uint32] */
}

def @func_3878(%var_3860: int16, %var_3861: Tensor[(1, 5), int16], %var_3867: Tensor[(360), float64]) -> (Tensor[(1, 5), int16], Tensor[(2, 180), uint32], Tensor[(14, 15, 11), float64]) {
  %273 = cast(%var_3860, dtype="int16") /* ty=int16 */;
  %274 = cast(%var_3861, dtype="int16") /* ty=Tensor[(1, 5), int16] */;
  %275 = cast(%var_3867, dtype="float64") /* ty=Tensor[(360), float64] */;
  %276 = reshape(%275, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
  %277 = @func_1115(%276) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) */;
  %278 = %277.2;
  %279 = cast(%var_3867, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(2), int32] */;
  %281 = cast(%278, dtype="uint32") /* ty=Tensor[(2, 180), uint32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %283 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %284 = add(%273, %274) /* ty=Tensor[(1, 5), int16] */;
  %285 = maximum(%281, %282) /* ty=Tensor[(2, 180), uint32] */;
  %286 = %283.2;
  (%284, %285, %286)
}

def @func_5451() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %287 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %288 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %289 = %287.0;
  (%288, %289)
}

def @func_6438() -> (Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) {
  %290 = @func_4688() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %291 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 56), float32] */, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %292 = reshape(%291, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), float32] */;
  %293 = @func_2336(%292) /* ty=(Tensor[(4, 14, 5), float32],) */;
  %294 = %290.1;
  %295 = %293.0;
  (%294, %295, meta[relay.Constant][9] /* ty=Tensor[(5, 56), float32] */)
}

def @func_1643(%var_1637: Tensor[(117), int32]) -> (Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) {
  %296 = cast(%var_1637, dtype="int32") /* ty=Tensor[(117), int32] */;
  %297 = cast(meta[relay.Constant][10] /* ty=Tensor[(819), int32] */, dtype="int32") /* ty=Tensor[(819), int32] */;
  %298 = cast(meta[relay.Constant][10] /* ty=Tensor[(819), int32] */, dtype="int32") /* ty=Tensor[(819), int32] */;
  %299 = reshape(%296, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), int32] */;
  %300 = reshape(%297, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), int32] */;
  %301 = reshape(%298, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), int32] */;
  %302 = @func_1501(%299, %300, %301) /* ty=(Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) */;
  %303 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  %304 = %302.0;
  (%303, %304, %var_1637, meta[relay.Constant][10] /* ty=Tensor[(819), int32] */)
}

def @func_606() -> (Tensor[(14, 15, 11), float32],) {
  %305 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%305,)
}

def @func_1415(%var_1406: Tensor[(14, 15, 11), float32]) -> Tensor[(14, 15, 11), bool] {
  %306 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %307 = %306.0;
  %308 = cast(%var_1406, dtype="bool") /* ty=Tensor[(14, 15, 11), bool] */;
  %309 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %310 = cast(%307, dtype="bool") /* ty=Tensor[(14, 15, 11), bool] */;
  %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%310, %311) /* ty=Tensor[(14, 15, 11), bool] */
}

def @func_6302(%var_6295: Tensor[(825), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float64], Tensor[(825), int16]) {
  %312 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %313 = cast(%var_6295, dtype="int16") /* ty=Tensor[(825), int16] */;
  %314 = reshape(%313, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %315 = @func_4059(%314) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) */;
  %316 = %312.0;
  %317 = %315.2;
  (%316, %317, %var_6295)
}

def @func_9491(%var_9475: Tensor[(14, 15, 1), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(14, 15, 1), float64]) {
  %318 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 308), float64] */, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %319 = reshape(%318, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %320 = @func_6446(%319) /* ty=(Tensor[(7, 16, 11), float64],) */;
  %321 = cast(%var_9475, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %322 = exp(%321) /* ty=Tensor[(14, 15, 1), float64] */;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %324 = %320.0;
  %325 = acos(%323) /* ty=Tensor[(14, 15, 1), float64] */;
  (%324, meta[relay.Constant][11] /* ty=Tensor[(4, 308), float64] */, %325)
}

def @func_1115(%var_1111: Tensor[(2, 180), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) {
  %326 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %327 = cast(%var_1111, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %328 = cast(%var_1111, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
  %329 = reshape(%327, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %330 = reshape(%328, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %331 = @func_813(%329, %330) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
  %332 = %326.0;
  %333 = %331.1;
  (%332, %333, %var_1111)
}

def @func_4808() -> Tensor[(14, 15, 11), float32] {
  %334 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %334.0
}

def @func_7266() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %335 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
  %336 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
  (%335, %336)
}

def @func_5996() -> Tensor[(14, 15, 11), float64] {
  %337 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %337.2
}

def @func_8286() -> Tensor[(14, 15, 11), float32] {
  %338 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %338.3
}

def @func_6563() -> (Tensor[(5, 56), float32], Tensor[(14, 15, 11), float32], Tensor[(45, 2), float32]) {
  %339 = @func_6438() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) */;
  %340 = %339.2;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %342 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 2), float32] */, dtype="float32") /* ty=Tensor[(45, 2), float32] */;
  %343 = reshape(%342, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float32] */;
  %344 = @func_4137(%343) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) */;
  %345 = atanh(%341) /* ty=Tensor[(5, 56), float32] */;
  %346 = %344.0;
  (%345, %346, meta[relay.Constant][12] /* ty=Tensor[(45, 2), float32] */)
}

def @func_3670() -> (Tensor[(14, 15, 11), float32],) {
  %347 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %348 = %347.0;
  (%348,)
}

def @func_2336(%var_2326: Tensor[(4, 14, 5), float32]) -> (Tensor[(4, 14, 5), float32],) {
  %349 = cast(%var_2326, dtype="float32") /* ty=Tensor[(4, 14, 5), float32] */;
  %350 = tan(%349) /* ty=Tensor[(4, 14, 5), float32] */;
  (%350,)
}

def @func_449() -> (Tensor[(14, 15, 11), float32],) {
  %351 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%351,)
}

def @func_9257() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), uint64]) {
  %352 = @func_5924() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %353 = @func_8564() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) */;
  %354 = %353.1;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %356 = atanh(%355) /* ty=Tensor[(2, 8, 5), float64] */;
  %357 = cast(%354, dtype="uint64") /* ty=Tensor[(2, 8, 5), uint64] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="uint64") /* ty=Tensor[(2, 8, 5), uint64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %361 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
  %362 = %352.3;
  %363 = bitwise_and(%359, %360) /* ty=Tensor[(2, 8, 5), uint64] */;
  (%361, %362, %363)
}

def @func_4011() -> Tensor[(14, 15, 11), float32] {
  @func_1153() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8564() -> (Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) {
  %364 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %365 = cast(meta[relay.Constant][13] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %366 = cast(meta[relay.Constant][13] /* ty=Tensor[(80), bool] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %367 = cast(meta[relay.Constant][14] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %368 = reshape(%365, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), bool] */;
  %369 = reshape(%366, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
  %370 = reshape(%367, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %371 = @func_3115(%368, %369, %370) /* ty=(Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %372 = %364.0;
  %373 = %371.0;
  (%372, %373, meta[relay.Constant][13] /* ty=Tensor[(80), bool] */, meta[relay.Constant][14] /* ty=Tensor[(240), float32] */)
}

def @func_2928() -> (Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) {
  %374 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %375 = @func_2791() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %376 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %377 = %374.1;
  %378 = %375.7;
  %379 = %376.0;
  (%377, %378, %379)
}

def @main(%var_10368: Tensor[(12, 6, 4), int64], %var_10369: Tensor[(12, 6, 4), int64]) -> (Tensor[(12, 6, 4), bool], Tensor[(12, 6, 4), float32]) {
  %380 = cast(%var_10369, dtype="bool") /* ty=Tensor[(12, 6, 4), bool] */;
  %381 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_10368, dtype="bool") /* ty=Tensor[(12, 6, 4), bool] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %384 = cast(%var_10369, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %385 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%var_10368, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %388 = equal(%382, %383) /* ty=Tensor[(12, 6, 4), bool] */;
  %389 = power(%386, %387) /* ty=Tensor[(12, 6, 4), float32] */;
  (%388, %389)
}

def @func_4852() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %390 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %391 = @func_3524() /* ty=Tensor[(14, 15, 11), float32] */;
  %392 = %390.0;
  (%391, %392)
}

def @func_7097(%var_7081: Tensor[(13, 13, 13), uint64]) -> (Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) {
  %393 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 13, 13), uint64] */, dtype="uint64") /* ty=Tensor[(13, 13, 13), uint64] */;
  %394 = shape_of(%var_7081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%var_7081, dtype="uint64") /* ty=Tensor[(13, 13, 13), uint64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %397 = @func_5608() /* ty=(Tensor[(9, 15, 2), uint32],) */;
  %398 = bitwise_xor(%395, %396) /* ty=Tensor[(13, 13, 13), uint64] */;
  %399 = %397.0;
  (%398, %399)
}

def @func_5405() -> (Tensor[(14, 15, 11), float64],) {
  %400 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  (%400,)
}

def @func_3614() -> Tensor[(14, 15, 11), float32] {
  %401 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %401.1
}

def @func_969() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %402 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %403 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %404 = %402.0;
  %405 = %403.0;
  (%404, %405)
}

def @func_3932() -> (Tensor[(14, 15, 11), float32],) {
  %406 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %407 = %406.0;
  (%407,)
}

def @func_247() -> Tensor[(14, 15, 11), float32] {
  %408 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %408.0
}

def @func_6149() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) {
  %409 = cast(meta[relay.Constant][16] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
  %410 = reshape(%409, newshape=[117]) /* ty=Tensor[(117), int32] */;
  %411 = @func_1643(%410) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
  %412 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %413 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
  %414 = %411.2;
  (%412, %413, %414, meta[relay.Constant][16] /* ty=Tensor[(117), int32] */)
}

def @func_8254(%var_8249: Tensor[(39, 3), int32]) -> (Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(39, 3), int32], Tensor[(14, 15, 11), float32]) {
  %415 = cast(%var_8249, dtype="int32") /* ty=Tensor[(39, 3), int32] */;
  %416 = reshape(%415, newshape=[117]) /* ty=Tensor[(117), int32] */;
  %417 = @func_1643(%416) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
  %418 = @func_4484() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %419 = @func_2195() /* ty=Tensor[(14, 15, 11), float32] */;
  %420 = %417.3;
  %421 = %418.0;
  (%419, %420, %var_8249, %421)
}

def @func_10285() -> (Tensor[(14, 15, 11), float32],) {
  %422 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%422,)
}

def @func_9120() -> Tensor[(14, 15, 11), float32] {
  %423 = @func_8641() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %423.0
}

def @func_4262() -> (Tensor[(14, 15, 11), float32],) {
  %424 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %425 = %424.0;
  (%425,)
}

def @func_8100(%var_8084: Tensor[(810), int8], %var_8085: Tensor[(2197), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(810), int8], Tensor[(810), int8], Tensor[(2197), uint64]) {
  %426 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %427 = cast(%var_8084, dtype="int8") /* ty=Tensor[(810), int8] */;
  %428 = cast(%var_8085, dtype="uint64") /* ty=Tensor[(2197), uint64] */;
  %429 = reshape(%427, newshape=[810]) /* ty=Tensor[(810), int8] */;
  %430 = reshape(%428, newshape=[13, 169]) /* ty=Tensor[(13, 169), uint64] */;
  %431 = @func_7563(%429, %430) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) */;
  %432 = %426.0;
  %433 = %431.3;
  (%432, %433, %var_8084, %var_8085)
}

def @func_2882() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %434 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %435 = %434.0;
  %436 = @func_2245() /* ty=Tensor[(14, 15, 11), float64] */;
  (%435, %436)
}

def @func_4505() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %437 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %438 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %439 = @func_2195() /* ty=Tensor[(14, 15, 11), float32] */;
  %440 = %437.0;
  %441 = %438.0;
  %442 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%439, %440, %441, %442)
}

def @func_5748(%var_5734: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) {
  %443 = cast(%var_5734, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
  %444 = cast(meta[relay.Constant][17] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %445 = reshape(%444, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %446 = @func_4059(%445) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) */;
  %447 = atanh(%443) /* ty=Tensor[(2, 15, 1), float32] */;
  %448 = %446.1;
  (%447, %448, meta[relay.Constant][17] /* ty=Tensor[(825), int16] */)
}

def @func_9632() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %449 = @func_9097() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %450 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  %451 = %449.2;
  (%450, %451)
}

def @func_9595() -> Tensor[(14, 15, 11), float32] {
  %452 = @func_4505() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %452.2
}

def @func_7357() -> (Tensor[(14, 15, 11), float32],) {
  %453 = @func_5924() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %454 = %453.3;
  (%454,)
}

def @func_9330() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %455 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %456 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %457 = %455.0;
  %458 = %456.0;
  (%457, %458)
}

def @func_9396() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %459 = @func_9309() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %460 = @func_8604() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %461 = %459.0;
  %462 = %460.1;
  (%461, %462)
}

def @func_5850() -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(360), float64]) {
  %463 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %464 = cast(meta[relay.Constant][18] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %465 = cast(meta[relay.Constant][18] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %466 = reshape(%464, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %467 = reshape(%465, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %468 = @func_813(%466, %467) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
  %469 = %463.0;
  %470 = %468.2;
  (%469, %470, meta[relay.Constant][18] /* ty=Tensor[(360), float64] */)
}

def @func_9988() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(440), float64]) {
  %471 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %472 = cast(meta[relay.Constant][19] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
  %473 = cast(meta[relay.Constant][19] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
  %474 = reshape(%472, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), float64] */;
  %475 = reshape(%473, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), float64] */;
  %476 = @func_6941(%474, %475) /* ty=(Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %477 = %471.0;
  %478 = %476.1;
  (%477, %478, meta[relay.Constant][19] /* ty=Tensor[(440), float64] */)
}

def @func_4516() -> (Tensor[(14, 15, 11), float32],) {
  %479 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %480 = %479.0;
  (%480,)
}

def @func_2174(%var_2098: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) {
  %481 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 8, 2), int64] */, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %482 = rsqrt(%481) /* ty=Tensor[(15, 8, 2), float64] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %484 = sqrt(%483) /* ty=Tensor[(15, 8, 2), float64] */;
  %485 = cast(%var_2098, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %486 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 8, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 8, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %489 = greater_equal(%487, %488) /* ty=Tensor[(15, 8, 2), bool] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %491 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%484, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %494 = power(%492, %493) /* ty=Tensor[(15, 8, 2), float64] */;
  %495 = cast(%494, dtype="uint8") /* ty=Tensor[(15, 8, 2), uint8] */;
  %496 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%484, dtype="uint8") /* ty=Tensor[(15, 8, 2), uint8] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %499 = cast(%484, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %500 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%482, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %503 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 8, 2), int64] */, dtype="uint16") /* ty=Tensor[(15, 8, 2), uint16] */;
  %504 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%489, dtype="uint16") /* ty=Tensor[(15, 8, 2), uint16] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %507 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %508 = bitwise_and(%497, %498) /* ty=Tensor[(15, 8, 2), uint8] */;
  %509 = subtract(%501, %502) /* ty=Tensor[(15, 8, 2), float64] */;
  %510 = left_shift(%505, %506) /* ty=Tensor[(15, 8, 2), uint16] */;
  %511 = %507.0;
  (%508, %509, %510, %511)
}

def @func_7763(%var_7744: Tensor[(7, 9, 13), float32]) -> (Tensor[(7, 9, 13), bool],) {
  %512 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
  %513 = %512.0;
  %514 = cast(%var_7744, dtype="bool") /* ty=Tensor[(7, 9, 13), bool] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="bool") /* ty=Tensor[(7, 9, 13), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = logical_or(%516, %517) /* ty=Tensor[(7, 9, 13), bool] */;
  (%518,)
}

def @func_5489() -> (Tensor[(14, 15, 11), float64],) {
  %519 = @func_5405() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %520 = %519.0;
  (%520,)
}

def @func_1587(%var_1578: Tensor[(16, 10, 11), int64], %var_1579: Tensor[(16, 10, 11), int64]) -> (Tensor[(16, 10, 11), bool],) {
  %521 = cast(%var_1579, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %522 = shape_of(%var_1578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%var_1578, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = greater_equal(%523, %524) /* ty=Tensor[(16, 10, 11), bool] */;
  (%525,)
}

def @func_7440() -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) {
  %526 = @func_3241() /* ty=(Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %527 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %528 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
  %529 = %526.0;
  %530 = %527.0;
  (%528, %529, %530)
}

def @func_9442() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %531 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %532 = %531.0;
  %533 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
  (%532, %533)
}

def @func_3912() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %534 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %535 = %534.0;
  %536 = @func_3424() /* ty=Tensor[(14, 15, 11), float64] */;
  %537 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%535, %536, %537)
}

def @func_1764() -> (Tensor[(14, 15, 11), float32],) {
  %538 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %539 = %538.0;
  (%539,)
}

def @func_5643() -> Tensor[(14, 15, 11), float32] {
  %540 = @func_5133() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) */;
  %540.1
}

def @func_500() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
  %541 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %542 = %541.1;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %544 = erf(%543) /* ty=Tensor[(14, 15, 11), float32] */;
  %545 = cast(%542, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%544, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %549 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %550 = %549.0;
  %551 = cast(%544, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %555 = mod(%547, %548) /* ty=Tensor[(14, 15, 11), float32] */;
  %556 = add(%553, %554) /* ty=Tensor[(14, 15, 11), int32] */;
  (%555, %556)
}

def @func_7069() -> (Tensor[(14, 15, 11), float32],) {
  %557 = @func_2648() /* ty=Tensor[(14, 15, 11), float32] */;
  (%557,)
}

def @func_3275() -> Tensor[(14, 15, 11), float64] {
  @func_2245() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_4319(%var_4315: Tensor[(1760), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(16, 10, 11), bool], Tensor[(1760), int64]) {
  %558 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %559 = cast(%var_4315, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %560 = cast(%var_4315, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %561 = reshape(%559, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), int64] */;
  %562 = reshape(%560, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), int64] */;
  %563 = @func_1587(%561, %562) /* ty=(Tensor[(16, 10, 11), bool],) */;
  %564 = %558.1;
  %565 = %563.0;
  (%564, %565, %var_4315)
}

def @func_5608() -> (Tensor[(9, 15, 2), uint32],) {
  %566 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(9, 15, 2), uint32] */;
  %567 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(9, 15, 2), uint32] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %570 = bitwise_or(%568, %569) /* ty=Tensor[(9, 15, 2), uint32] */;
  (%570,)
}

def @func_6268(%var_6259: float64) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], float64, Tensor[(14, 15, 11), float32]) {
  %571 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %572 = cast(%var_6259, dtype="float64") /* ty=float64 */;
  %573 = reshape(%572, newshape=[]) /* ty=float64 */;
  %574 = @func_3560(%573) /* ty=(Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) */;
  %575 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %576 = %571.0;
  %577 = %574.1;
  %578 = %575.1;
  (%576, %577, %var_6259, %578)
}

def @func_5133() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) {
  %579 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %580 = @func_4800() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %581 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %582 = cast(meta[relay.Constant][23] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
  %583 = reshape(%582, newshape=[117]) /* ty=Tensor[(117), int32] */;
  %584 = @func_1643(%583) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
  %585 = %579.0;
  %586 = %580.0;
  %587 = %581.0;
  %588 = %584.3;
  (%585, %586, %587, %588, meta[relay.Constant][23] /* ty=Tensor[(117), int32] */)
}

def @func_5572(%var_5561: Tensor[(80), bool]) -> (Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) {
  %589 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
  %590 = cast(%var_5561, dtype="bool") /* ty=Tensor[(80), bool] */;
  %591 = cast(%var_5561, dtype="float32") /* ty=Tensor[(80), float32] */;
  %592 = cast(meta[relay.Constant][24] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %593 = reshape(%590, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), bool] */;
  %594 = reshape(%591, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
  %595 = reshape(%592, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %596 = @func_3115(%593, %594, %595) /* ty=(Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %597 = %589.0;
  %598 = %596.7;
  (%597, %598, %var_5561, meta[relay.Constant][24] /* ty=Tensor[(240), float32] */)
}

def @func_832() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %599 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %600 = %599.0;
  %601 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%600, %601)
}

def @func_7324() -> Tensor[(14, 15, 11), float32] {
  %602 = @func_4640() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %602.0
}

def @func_747() -> (Tensor[(14, 15, 11), float32],) {
  %603 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %604 = %603.0;
  (%604,)
}

def @func_3397(%var_3347: Tensor[(360), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32]) {
  %605 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %606 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %609 = %605.0;
  %610 = cast(%609, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %611 = reshape(%610, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
  %612 = @func_870(%611) /* ty=(Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %613 = %612.0;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %615 = reshape(%614, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
  %616 = @func_1034(%615) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %617 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %618 = cast(%var_3347, dtype="float64") /* ty=Tensor[(360), float64] */;
  %619 = cast(%var_3347, dtype="float64") /* ty=Tensor[(360), float64] */;
  %620 = reshape(%618, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %621 = reshape(%619, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
  %622 = @func_813(%620, %621) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
  %623 = %622.1;
  %624 = cast(%var_3347, dtype="int8") /* ty=Tensor[(360), int8] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="int8") /* ty=Tensor[(6, 6, 10), int8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %628 = right_shift(%626, %627) /* ty=Tensor[(6, 6, 10), int8] */;
  %629 = cast(%623, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%628, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %633 = atanh(%608) /* ty=Tensor[(14, 15, 11), float32] */;
  %634 = %616.0;
  %635 = %617.0;
  %636 = add(%631, %632) /* ty=Tensor[(6, 6, 10), float32] */;
  (%609, %633, %613, %634, %635, %636)
}

def @func_343() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %637 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %638 = %637.0;
  %639 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%638, %639)
}

def @func_8208() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %640 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %641 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %642 = %640.0;
  %643 = %641.0;
  (%642, %643)
}

def @func_9142() -> Tensor[(14, 15, 11), float32] {
  %644 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %644.0
}

def @func_2648() -> Tensor[(14, 15, 11), float32] {
  @func_2195() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_9309() -> (Tensor[(14, 15, 11), float64],) {
  %645 = @func_5489() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %646 = %645.0;
  (%646,)
}

def @func_6068(%var_6030: Tensor[(80), bool]) -> (Tensor[(14, 15, 11), float32], Tensor[(80), bool], Tensor[(7, 9, 13), float32], Tensor[(14, 15, 11), float32]) {
  %647 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %648 = cast(%var_6030, dtype="bool") /* ty=Tensor[(80), bool] */;
  %649 = reshape(%648, newshape=[80]) /* ty=Tensor[(80), bool] */;
  %650 = @func_5572(%649) /* ty=(Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(7, 9, 13), float32] */;
  %653 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %654 = %647.0;
  %655 = cos(%652) /* ty=Tensor[(7, 9, 13), float32] */;
  %656 = %653.0;
  (%654, %var_6030, %655, %656)
}

def @func_6446(%var_6440: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64],) {
  %657 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %658 = shape_of(%var_6440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%var_6440, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %661 = multiply(%659, %660) /* ty=Tensor[(7, 16, 11), float64] */;
  (%661,)
}

def @func_9769() -> (Tensor[(14, 15, 11), float32],) {
  %662 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %663 = %662.2;
  (%663,)
}

def @func_7702() -> (Tensor[(14, 15, 11), float32], Tensor[(117), float64]) {
  %664 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %665 = @func_6149() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) */;
  %666 = %665.2;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(117), float64] */;
  %668 = %664.0;
  %669 = log10(%667) /* ty=Tensor[(117), float64] */;
  (%668, %669)
}

def @func_4152() -> Tensor[(14, 15, 11), float32] {
  %670 = @func_3670() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %670.0
}

def @func_2517() -> (Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) {
  %671 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %672 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %674 = sqrt(%673) /* ty=Tensor[(1, 6, 5), float64] */;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %676 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%672, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %679 = %671.0;
  %680 = floor_divide(%677, %678) /* ty=Tensor[(?, 6, 5), float64] */;
  (%679, %680)
}

def @func_1365() -> (Tensor[(14, 15, 11), float32],) {
  %681 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %682 = %681.0;
  (%682,)
}

def @func_5496() -> (Tensor[(14, 15, 11), float64],) {
  %683 = @func_3424() /* ty=Tensor[(14, 15, 11), float64] */;
  (%683,)
}

def @func_1193() -> (Tensor[(14, 15, 11), float32],) {
  %684 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %685 = %684.0;
  (%685,)
}

def @func_4945() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %686 = @func_4516() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %687 = %686.0;
  %688 = @func_4011() /* ty=Tensor[(14, 15, 11), float32] */;
  (%687, %688)
}

def @func_2360() -> Tensor[(1, 6, 5), float32] {
  %689 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
  log10(%689) /* ty=Tensor[(1, 6, 5), float32] */
}

def @func_3984() -> Tensor[(14, 15, 11), float32] {
  %690 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %690.0
}

def @func_438() -> Tensor[(14, 15, 11), float32] {
  %691 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %691.0
}

def @func_3154() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %692 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %693 = @func_2791() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %694 = %692.0;
  %695 = %693.9;
  (%694, %695)
}

def @func_8025(%var_7958: Tensor[(3, 3, 6), float32], %var_7959: Tensor[(3, 3, 6), float32], %var_8007: Tensor[(3, 3, 6), float32], %var_8021: Tensor[(30), float32]) -> (Tensor[(3, 3, 6), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(3, 3, 6), int8], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(825), int16], Tensor[(30), float32]) {
  %696 = cast(%var_7959, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %697 = shape_of(%var_7958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%var_7958, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %700 = @func_4454() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %701 = cast(%var_7959, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %702 = cast(%var_7958, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %703 = sqrt(%702) /* ty=Tensor[(3, 3, 6), float32] */;
  %704 = cast(%var_8007, dtype="int8") /* ty=Tensor[(3, 3, 6), int8] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="int8") /* ty=Tensor[(3, 3, 6), int8] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %708 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %709 = cast(%703, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
  %710 = cast(%var_8021, dtype="float32") /* ty=Tensor[(30), float32] */;
  %711 = reshape(%710, newshape=[2, 15, 1]) /* ty=Tensor[(2, 15, 1), float32] */;
  %712 = @func_5748(%711) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) */;
  %713 = mod(%698, %699) /* ty=Tensor[(3, 3, 6), float32] */;
  %714 = @func_7143() /* ty=Tensor[(14, 15, 11), float32] */;
  %715 = %700.1;
  %716 = log(%701) /* ty=Tensor[(3, 3, 6), float32] */;
  %717 = multiply(%706, %707) /* ty=Tensor[(3, 3, 6), int8] */;
  %718 = %708.0;
  %719 = cosh(%709) /* ty=Tensor[(3, 3, 6), float32] */;
  %720 = %712.2;
  (%713, %714, %715, %716, %717, %718, %719, %720, %var_8021)
}

def @func_4770() -> Tensor[(14, 15, 11), float32] {
  @func_2648() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_7953(%var_7931: Tensor[(10, 12, 10), int16], %var_7932: Tensor[(10, 12, 10), int16]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float64], Tensor[(9, 15, 2), uint32]) {
  %721 = cast(%var_7932, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %722 = shape_of(%var_7931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%var_7931, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %725 = cast(%var_7932, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %726 = @func_5608() /* ty=(Tensor[(9, 15, 2), uint32],) */;
  %727 = greater_equal(%723, %724) /* ty=Tensor[(10, 12, 10), bool] */;
  %728 = atanh(%725) /* ty=Tensor[(10, 12, 10), float64] */;
  %729 = %726.0;
  (%727, %728, %729)
}

def @func_5219(%var_5190: Tensor[(117), int32], %var_5213: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), uint64], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
  %730 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %731 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %732 = cast(%var_5190, dtype="int32") /* ty=Tensor[(117), int32] */;
  %733 = reshape(%732, newshape=[117]) /* ty=Tensor[(117), int32] */;
  %734 = @func_1643(%733) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
  %735 = %734.2;
  %736 = cast(meta[relay.Constant][27] /* ty=Tensor[(117), int32] */, dtype="uint64") /* ty=Tensor[(117), uint64] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(%735, dtype="uint64") /* ty=Tensor[(117), uint64] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %740 = cast(%var_5213, dtype="int64") /* ty=Tensor[(240), int64] */;
  %741 = reshape(%740, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), int64] */;
  %742 = @func_2174(%741) /* ty=(Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) */;
  %743 = %730.5;
  %744 = %731.0;
  %745 = subtract(%738, %739) /* ty=Tensor[(117), uint64] */;
  %746 = %742.3;
  (%743, %744, %var_5190, %745, %746, %var_5213)
}

def @func_9011() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %747 = @func_969() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %748 = %747.0;
  %749 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
  (%748, %749)
}

def @func_4137(%var_4120: Tensor[(3, 6, 5), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) {
  %750 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %751 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %752 = cast(%751, dtype="uint16") /* ty=Tensor[(1, 6, 5), uint16] */;
  %753 = cast(%var_4120, dtype="uint16") /* ty=Tensor[(3, 6, 5), uint16] */;
  %754 = %750.0;
  %755 = minimum(%752, %753) /* ty=Tensor[(3, 6, 5), uint16] */;
  (%754, %755)
}

def @func_9164(%var_9145: Tensor[(4, 5, 15), float32], %var_9156: Tensor[(819), float32]) -> (Tensor[(4, 5, 15), float32], Tensor[(4, 5, 15), float64], Tensor[(7, 9, 13), bool], Tensor[(819), float32]) {
  %756 = cast(%var_9145, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
  %757 = cast(%var_9145, dtype="float64") /* ty=Tensor[(4, 5, 15), float64] */;
  %758 = cast(%var_9156, dtype="float32") /* ty=Tensor[(819), float32] */;
  %759 = reshape(%758, newshape=[7, 9, 13]) /* ty=Tensor[(7, 9, 13), float32] */;
  %760 = @func_7763(%759) /* ty=(Tensor[(7, 9, 13), bool],) */;
  %761 = log(%756) /* ty=Tensor[(4, 5, 15), float32] */;
  %762 = acos(%757) /* ty=Tensor[(4, 5, 15), float64] */;
  %763 = %760.0;
  (%761, %762, %763, %var_9156)
}

def @func_6941(%var_6925: Tensor[(11, 8, 5), float64], %var_6926: Tensor[(11, 8, 5), float64]) -> (Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %764 = cast(%var_6926, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %765 = shape_of(%var_6925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%var_6925, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %768 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %769 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %770 = floor_mod(%766, %767) /* ty=Tensor[(11, 8, 5), float64] */;
  %771 = %768.0;
  %772 = %769.0;
  (%770, %771, %772)
}

def @func_3787() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %773 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %774 = %773.0;
  %775 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  (%774, %775)
}

def @func_813(%var_784: Tensor[(6, 6, 10), float64], %var_800: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) {
  %776 = cast(%var_784, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
  %777 = log(%776) /* ty=Tensor[(6, 6, 10), float64] */;
  %778 = cast(%var_784, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %779 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%777, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %782 = cast(%var_800, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %783 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%var_784, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %786 = cast(%var_800, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %787 = mod(%780, %781) /* ty=Tensor[(6, 6, 10), float32] */;
  %788 = floor_mod(%784, %785) /* ty=Tensor[(6, 6, 10), float32] */;
  %789 = sin(%786) /* ty=Tensor[(6, 6, 10), float32] */;
  (%787, %788, %789)
}

def @func_7514() -> (Tensor[(14, 15, 11), float32], Tensor[(3, 2, 7), float64], Tensor[(42), float64]) {
  %790 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %791 = cast(meta[relay.Constant][28] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %792 = cast(meta[relay.Constant][28] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %793 = reshape(%791, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %794 = reshape(%792, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %795 = @func_2453(%793, %794) /* ty=(Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) */;
  %796 = %790.0;
  %797 = %795.0;
  (%796, %797, meta[relay.Constant][28] /* ty=Tensor[(42), float64] */)
}

def @func_2453(%var_2437: Tensor[(3, 2, 7), float64], %var_2438: Tensor[(3, 2, 7), float64]) -> (Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) {
  %798 = cast(%var_2438, dtype="float64") /* ty=Tensor[(3, 2, 7), float64] */;
  %799 = shape_of(%var_2437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%var_2437, dtype="float64") /* ty=Tensor[(3, 2, 7), float64] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %802 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %803 = divide(%800, %801) /* ty=Tensor[(3, 2, 7), float64] */;
  %804 = %802.1;
  (%803, %804)
}

def @func_2291() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %805 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %808 = cast(%806, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %809 = rsqrt(%807) /* ty=Tensor[(14, 15, 11), float32] */;
  %810 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  %811 = sqrt(%808) /* ty=Tensor[(14, 15, 11), float64] */;
  (%809, %810, %811)
}

def @func_3241() -> (Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %812 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %813 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %814 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %815 = %812.1;
  %816 = %813.0;
  %817 = %814.0;
  (%815, %816, %817)
}

def @func_762() -> Tensor[(14, 15, 11), float64] {
  %818 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %819 = %818.0;
  %820 = cast(%819, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  atan(%820) /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_7011() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %821 = @func_4640() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %822 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
  %823 = %821.0;
  (%822, %823)
}

def @func_9528() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %824 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %825 = @func_7324() /* ty=Tensor[(14, 15, 11), float32] */;
  %826 = %824.0;
  %827 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
  (%825, %826, %827)
}

def @func_3115(%var_2984: Tensor[(2, 8, 5), bool], %var_3018: Tensor[(2, 8, 5), float32], %var_3057: Tensor[(8, 6, 5), float32]) -> (Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %828 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 8, 5), bool] */, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %829 = shape_of(%var_2984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%var_2984, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %832 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %833 = cast(%var_2984, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %834 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 8, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 8, 5), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %837 = logical_or(%835, %836) /* ty=Tensor[(2, 8, 5), bool] */;
  %838 = cast(%837, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %839 = atan(%838) /* ty=Tensor[(2, 8, 5), float32] */;
  %840 = cast(%var_3018, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%839, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %844 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %845 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %846 = cast(%845, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %847 = cast(%var_3057, dtype="float64") /* ty=Tensor[(8, 6, 5), float64] */;
  %848 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %849 = cast(%839, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %850 = mod(%830, %831) /* ty=Tensor[(2, 8, 5), float32] */;
  %851 = %832.0;
  %852 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
  %853 = greater_equal(%842, %843) /* ty=Tensor[(2, 8, 5), bool] */;
  %854 = %844.0;
  %855 = mod(%846, %847) /* ty=Tensor[(8, 6, 5), float64] */;
  %856 = %848.2;
  %857 = exp(%849) /* ty=Tensor[(2, 8, 5), float64] */;
  %858 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
  %859 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  (%850, %851, %852, %853, %854, %855, %856, %857, %858, %859)
}

def @func_4059(%var_4038: Tensor[(15, 5, 11), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) {
  %860 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %861 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %862 = %861.1;
  %863 = cast(%var_4038, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %864 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%862, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %867 = cast(%var_4038, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %868 = shape_of(%862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %869 = cast(%862, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %871 = %860.0;
  %872 = maximum(%865, %866) /* ty=Tensor[(15, 5, 11), float32] */;
  %873 = floor_divide(%869, %870) /* ty=Tensor[(15, 5, 11), float64] */;
  (%871, %872, %873)
}

def @func_7143() -> Tensor[(14, 15, 11), float32] {
  %874 = @func_3787() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %874.0
}

def @func_4640() -> (Tensor[(14, 15, 11), float32],) {
  %875 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %876 = %875.0;
  (%876,)
}

def @func_5297() -> Tensor[(14, 15, 11), float32] {
  @func_3614() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3424() -> Tensor[(14, 15, 11), float64] {
  @func_762() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_4800() -> (Tensor[(14, 15, 11), float32],) {
  %877 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %878 = %877.0;
  (%878,)
}

def @func_9738() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %879 = @func_9097() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %880 = @func_9309() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %881 = @func_4712() /* ty=Tensor[(14, 15, 11), float32] */;
  %882 = cast(%881, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %883 = reshape(%882, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
  %884 = @func_1034(%883) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %885 = %879.0;
  %886 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
  %887 = %880.0;
  %888 = %884.1;
  (%881, %885, %886, %887, %888)
}

def @func_2791() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %889 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %890 = %889.0;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %892 = reshape(%891, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
  %893 = @func_1415(%892) /* ty=Tensor[(14, 15, 11), bool] */;
  %894 = cast(%893, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %895 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %896 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %897 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %898 = cast(meta[relay.Constant][30] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %899 = cast(meta[relay.Constant][30] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %900 = reshape(%898, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %901 = reshape(%899, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %902 = @func_2453(%900, %901) /* ty=(Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) */;
  %903 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %904 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %905 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %906 = asinh(%894) /* ty=Tensor[(14, 15, 11), float64] */;
  %907 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %908 = %895.0;
  %909 = %896.0;
  %910 = %897.0;
  %911 = %902.1;
  %912 = %903.2;
  %913 = %904.7;
  %914 = %905.1;
  (%890, %906, %907, %908, %909, %910, %911, meta[relay.Constant][30] /* ty=Tensor[(42), float64] */, %912, %913, %914)
}

def @func_4290() -> (Tensor[(7, 9, 13), float32],) {
  %915 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 13), float32] */;
  %916 = rsqrt(%915) /* ty=Tensor[(7, 9, 13), float32] */;
  (%916,)
}

def @func_8334(%var_8328: Tensor[(12, 9, 14), float32]) -> Tensor[(12, 9, 14), float32] {
  %917 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %918 = shape_of(%var_8328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_8328, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%919, %920) /* ty=Tensor[(12, 9, 14), float32] */
}

def @func_4751() -> Tensor[(14, 15, 11), float32] {
  %921 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %921.0
}

def @func_10361(%var_10291: float64, %var_10334: Tensor[(11, 15, 2), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(11, 15, 2), uint32], Tensor[(14, 15, 11), float32]) {
  %922 = @func_3670() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %923 = cast(%var_10291, dtype="float64") /* ty=float64 */;
  %924 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 2), float64] */;
  %925 = multiply(%923, %924) /* ty=Tensor[(11, 15, 2), float64] */;
  %926 = cast(%var_10334, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %930 = %922.0;
  %931 = cast(%930, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %932 = reshape(%931, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
  %933 = @func_1034(%932) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %934 = @func_4885() /* ty=Tensor[(14, 15, 11), float32] */;
  %935 = bitwise_or(%928, %929) /* ty=Tensor[(11, 15, 2), uint32] */;
  %936 = %933.1;
  (%930, %934, %935, %936)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5420() -> Tensor[(14, 15, 11), float32] {
  @func_5418() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_4114(%var_4113: Tensor[(10, 1, 14), float32]) -> (Tensor[(10, 1, 14), float32],) {
  %2 = fn (%var_4101: Tensor[(10, 1, 14), float32]) -> (Tensor[(10, 1, 14), float32],) {
    %0 = cast(%var_4101, dtype="float32") /* ty=Tensor[(10, 1, 14), float32] */;
    %1 = exp(%0) /* ty=Tensor[(10, 1, 14), float32] */;
    (%1,)
  };
  %2(%var_4113) /* ty=(Tensor[(10, 1, 14), float32],) */
}

def @func_1784(%var_1782: Tensor[(6, 2, 4), uint32], %var_1783: Tensor[(6, 2, 4), uint32]) -> Tensor[(6, 2, 4), uint32] {
  @func_1780(%var_1782, %var_1783) /* ty=Tensor[(6, 2, 4), uint32] */
}

def @func_9800() -> Tensor[(14, 15, 11), float32] {
  %3 = @func_8641() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %3.0
}

def @func_8606() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_8604() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_970() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %8 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %4 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %5 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %6 = %4.0;
    %7 = %5.0;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_1766() -> (Tensor[(14, 15, 11), float32],) {
  @func_1764() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_1037(%var_1035: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  @func_1034(%var_1035) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_4688() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %9 = @func_4505() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %10 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  %11 = @func_3275() /* ty=Tensor[(14, 15, 11), float64] */;
  %12 = %9.2;
  (%10, %11, %12)
}

def @func_2339(%var_2337: Tensor[(4, 14, 5), float32]) -> (Tensor[(4, 14, 5), float32],) {
  @func_2336(%var_2337) /* ty=(Tensor[(4, 14, 5), float32],) */
}

def @func_7766(%var_7764: Tensor[(7, 9, 13), float32]) -> (Tensor[(7, 9, 13), bool],) {
  @func_7763(%var_7764) /* ty=(Tensor[(7, 9, 13), bool],) */
}

def @func_5453() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_5451() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_10116() -> (Tensor[(14, 15, 11), float64], Tensor[(48), uint32], Tensor[(4, 12), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %22 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(48), uint32], Tensor[(4, 12), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 12), uint32] */, dtype="uint32") /* ty=Tensor[(4, 12), uint32] */;
    %14 = reshape(%13, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %15 = @func_5715(%14) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) */;
    %16 = @func_4484() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %17 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %18 = @func_2245() /* ty=Tensor[(14, 15, 11), float64] */;
    %19 = %15.2;
    %20 = %16.0;
    %21 = %17.1;
    (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(4, 12), uint32] */, %20, %21)
  };
  %22() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(48), uint32], Tensor[(4, 12), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_4137(%var_4120: Tensor[(3, 6, 5), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) {
  %23 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %24 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %25 = cast(%24, dtype="uint16") /* ty=Tensor[(1, 6, 5), uint16] */;
  %26 = cast(%var_4120, dtype="uint16") /* ty=Tensor[(3, 6, 5), uint16] */;
  %27 = %23.0;
  %28 = minimum(%25, %26) /* ty=Tensor[(3, 6, 5), uint16] */;
  (%27, %28)
}

def @func_5497() -> (Tensor[(14, 15, 11), float64],) {
  %30 = fn () -> (Tensor[(14, 15, 11), float64],) {
    %29 = @func_3424() /* ty=Tensor[(14, 15, 11), float64] */;
    (%29,)
  };
  %30() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_3120(%var_3117: Tensor[(2, 8, 5), bool], %var_3118: Tensor[(2, 8, 5), float32], %var_3119: Tensor[(8, 6, 5), float32]) -> (Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_3115(%var_3117, %var_3118, %var_3119) /* ty=(Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_9330() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %31 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %32 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %33 = %31.0;
  %34 = %32.0;
  (%33, %34)
}

def @func_4059(%var_4038: Tensor[(15, 5, 11), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) {
  %35 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %36 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %37 = %36.1;
  %38 = cast(%var_4038, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %42 = cast(%var_4038, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %43 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%37, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %46 = %35.0;
  %47 = maximum(%40, %41) /* ty=Tensor[(15, 5, 11), float32] */;
  %48 = floor_divide(%44, %45) /* ty=Tensor[(15, 5, 11), float64] */;
  (%46, %47, %48)
}

def @func_10364(%var_10362: float64, %var_10363: Tensor[(11, 15, 2), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(11, 15, 2), uint32], Tensor[(14, 15, 11), float32]) {
  %64 = fn (%var_10291: float64, %var_10334: Tensor[(11, 15, 2), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(11, 15, 2), uint32], Tensor[(14, 15, 11), float32]) {
    %49 = @func_3670() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %50 = cast(%var_10291, dtype="float64") /* ty=float64 */;
    %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 15, 2), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 2), float64] */;
    %52 = multiply(%50, %51) /* ty=Tensor[(11, 15, 2), float64] */;
    %53 = cast(%var_10334, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
    %54 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
    %55 = cast(%52, dtype="uint32") /* ty=Tensor[(11, 15, 2), uint32] */;
    %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %57 = %49.0;
    %58 = cast(%57, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %59 = reshape(%58, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
    %60 = @func_1034(%59) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %61 = @func_4885() /* ty=Tensor[(14, 15, 11), float32] */;
    %62 = bitwise_or(%55, %56) /* ty=Tensor[(11, 15, 2), uint32] */;
    %63 = %60.1;
    (%57, %61, %62, %63)
  };
  %64(%var_10362, %var_10363) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(11, 15, 2), uint32], Tensor[(14, 15, 11), float32]) */
}

def @func_3933() -> (Tensor[(14, 15, 11), float32],) {
  %67 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %65 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %66 = %65.0;
    (%66,)
  };
  %67() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_606() -> (Tensor[(14, 15, 11), float32],) {
  %68 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%68,)
}

def @func_4853() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %72 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %69 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %70 = @func_3524() /* ty=Tensor[(14, 15, 11), float32] */;
    %71 = %69.0;
    (%70, %71)
  };
  %72() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_8363() -> Tensor[(14, 15, 11), float64] {
  @func_8361() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_3672() -> (Tensor[(14, 15, 11), float32],) {
  @func_3670() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_4505() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %73 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %74 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %75 = @func_2195() /* ty=Tensor[(14, 15, 11), float32] */;
  %76 = %73.0;
  %77 = %74.0;
  %78 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%75, %76, %77, %78)
}

def @func_2196() -> Tensor[(14, 15, 11), float32] {
  %79 = fn () -> Tensor[(14, 15, 11), float32] {
    @func_247() /* ty=Tensor[(14, 15, 11), float32] */
  };
  %79() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8114() -> Tensor[(14, 15, 11), float32] {
  @func_8112() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_4983(%var_4958: Tensor[(9, 1, 10), int8], %var_4959: Tensor[(9, 9, 10), int8]) -> Tensor[(9, 9, 10), bool] {
  %80 = cast(%var_4958, dtype="bool") /* ty=Tensor[(9, 1, 10), bool] */;
  %81 = cast(%var_4959, dtype="bool") /* ty=Tensor[(9, 9, 10), bool] */;
  less(%80, %81) /* ty=Tensor[(9, 9, 10), bool] */
}

def @func_5851() -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(360), float64]) {
  %90 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(360), float64]) {
    %82 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %84 = cast(meta[relay.Constant][2] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %85 = reshape(%83, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %86 = reshape(%84, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %87 = @func_813(%85, %86) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
    %88 = %82.0;
    %89 = %87.2;
    (%88, %89, meta[relay.Constant][2] /* ty=Tensor[(360), float64] */)
  };
  %90() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(360), float64]) */
}

def @func_5644() -> Tensor[(14, 15, 11), float32] {
  %92 = fn () -> Tensor[(14, 15, 11), float32] {
    %91 = @func_5133() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) */;
    %91.1
  };
  %92() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3524() -> Tensor[(14, 15, 11), float32] {
  @func_2195() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_9802() -> Tensor[(14, 15, 11), float32] {
  @func_9800() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_6563() -> (Tensor[(5, 56), float32], Tensor[(14, 15, 11), float32], Tensor[(45, 2), float32]) {
  %93 = @func_6438() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) */;
  %94 = %93.2;
  %95 = cast(%94, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %96 = cast(meta[relay.Constant][3] /* ty=Tensor[(45, 2), float32] */, dtype="float32") /* ty=Tensor[(45, 2), float32] */;
  %97 = reshape(%96, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), float32] */;
  %98 = @func_4137(%97) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) */;
  %99 = atanh(%95) /* ty=Tensor[(5, 56), float32] */;
  %100 = %98.0;
  (%99, %100, meta[relay.Constant][3] /* ty=Tensor[(45, 2), float32] */)
}

def @func_5489() -> (Tensor[(14, 15, 11), float64],) {
  %101 = @func_5405() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %102 = %101.0;
  (%102,)
}

def @func_10134(%var_10133: Tensor[(15, 10, 12), float32]) -> (Tensor[(15, 10, 12), bool],) {
  %108 = fn (%var_10126: Tensor[(15, 10, 12), float32]) -> (Tensor[(15, 10, 12), bool],) {
    %103 = cast(%var_10126, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
    %104 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 10, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 10, 12), float32] */, dtype="bool") /* ty=Tensor[(15, 10, 12), bool] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %107 = less_equal(%105, %106) /* ty=Tensor[(15, 10, 12), bool] */;
    (%107,)
  };
  %108(%var_10133) /* ty=(Tensor[(15, 10, 12), bool],) */
}

def @func_7071() -> (Tensor[(14, 15, 11), float32],) {
  @func_7069() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_3670() -> (Tensor[(14, 15, 11), float32],) {
  %109 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %110 = %109.0;
  (%110,)
}

def @func_3614() -> Tensor[(14, 15, 11), float32] {
  %111 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %111.1
}

def @func_6439() -> (Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) {
  %118 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) {
    %112 = @func_4688() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 56), float32] */, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
    %114 = reshape(%113, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), float32] */;
    %115 = @func_2336(%114) /* ty=(Tensor[(4, 14, 5), float32],) */;
    %116 = %112.1;
    %117 = %115.0;
    (%116, %117, meta[relay.Constant][5] /* ty=Tensor[(5, 56), float32] */)
  };
  %118() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(4, 14, 5), float32], Tensor[(5, 56), float32]) */
}

def @func_4808() -> Tensor[(14, 15, 11), float32] {
  %119 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %119.0
}

def @func_3213(%var_3212: Tensor[(11, 15, 16), float64]) -> (Tensor[(14, 15, 11), float64], Tensor[(11, 15, 16), uint32]) {
  %132 = fn (%var_3195: Tensor[(11, 15, 16), float64]) -> (Tensor[(14, 15, 11), float64], Tensor[(11, 15, 16), uint32]) {
    %120 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
    %121 = cast(%var_3195, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %122 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(11, 15, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %123 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %125 = minimum(%123, %124) /* ty=Tensor[(11, 15, 16), float64] */;
    %126 = cast(%125, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
    %127 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(11, 15, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 15, 16), float64] */, dtype="uint32") /* ty=Tensor[(11, 15, 16), uint32] */;
    %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %130 = %120.2;
    %131 = logical_xor(%128, %129) /* ty=Tensor[(11, 15, 16), uint32] */;
    (%130, %131)
  };
  %132(%var_3212) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(11, 15, 16), uint32]) */
}

def @func_7176() -> (Tensor[(1, 6, 5), float32],) {
  %133 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  (%133,)
}

def @func_2247() -> Tensor[(14, 15, 11), float64] {
  @func_2245() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_2792() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %160 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
    %134 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %135 = %134.0;
    %136 = cast(%135, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %137 = reshape(%136, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
    %138 = @func_1415(%137) /* ty=Tensor[(14, 15, 11), bool] */;
    %139 = cast(%138, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
    %140 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
    %141 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %142 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %144 = cast(meta[relay.Constant][7] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
    %145 = reshape(%143, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
    %146 = reshape(%144, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
    %147 = @func_2453(%145, %146) /* ty=(Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) */;
    %148 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %149 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %150 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
    %151 = asinh(%139) /* ty=Tensor[(14, 15, 11), float64] */;
    %152 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
    %153 = %140.0;
    %154 = %141.0;
    %155 = %142.0;
    %156 = %147.1;
    %157 = %148.2;
    %158 = %149.7;
    %159 = %150.1;
    (%135, %151, %152, %153, %154, %155, %156, meta[relay.Constant][7] /* ty=Tensor[(42), float64] */, %157, %158, %159)
  };
  %160() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */
}

def @func_3154() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %161 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %162 = @func_2791() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %163 = %161.0;
  %164 = %162.9;
  (%163, %164)
}

def @func_8538() -> Tensor[(14, 15, 11), float32] {
  %165 = @func_5133() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) */;
  %165.1
}

def @func_9027() -> Tensor[(14, 15, 11), float32] {
  %166 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %166.1
}

def @func_288() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %169 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %167 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    %168 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%167, %168)
  };
  %169() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_6270(%var_6269: float64) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], float64, Tensor[(14, 15, 11), float32]) {
  %178 = fn (%var_6259: float64) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], float64, Tensor[(14, 15, 11), float32]) {
    %170 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %171 = cast(%var_6259, dtype="float64") /* ty=float64 */;
    %172 = reshape(%171, newshape=[]) /* ty=float64 */;
    %173 = @func_3560(%172) /* ty=(Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) */;
    %174 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %175 = %170.0;
    %176 = %173.1;
    %177 = %174.1;
    (%175, %176, %var_6259, %177)
  };
  %178(%var_6269) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], float64, Tensor[(14, 15, 11), float32]) */
}

def @func_1249() -> (Tensor[(14, 15, 11), float32],) {
  %180 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %179 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
    (%179,)
  };
  %180() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_8643() -> (Tensor[(14, 15, 11), float32],) {
  @func_8641() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_4690() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  @func_4688() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_1506(%var_1503: Tensor[(1, 13, 9), int32], %var_1504: Tensor[(7, 13, 9), int32], %var_1505: Tensor[(7, 13, 9), int32]) -> (Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) {
  @func_1501(%var_1503, %var_1504, %var_1505) /* ty=(Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) */
}

def @func_4801() -> (Tensor[(14, 15, 11), float32],) {
  %183 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %181 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %182 = %181.0;
    (%182,)
  };
  %183() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_7763(%var_7744: Tensor[(7, 9, 13), float32]) -> (Tensor[(7, 9, 13), bool],) {
  %184 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
  %185 = %184.0;
  %186 = cast(%var_7744, dtype="bool") /* ty=Tensor[(7, 9, 13), bool] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="bool") /* ty=Tensor[(7, 9, 13), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = logical_or(%188, %189) /* ty=Tensor[(7, 9, 13), bool] */;
  (%190,)
}

def @func_1645(%var_1644: Tensor[(117), int32]) -> (Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) {
  %200 = fn (%var_1637: Tensor[(117), int32]) -> (Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) {
    %191 = cast(%var_1637, dtype="int32") /* ty=Tensor[(117), int32] */;
    %192 = cast(meta[relay.Constant][8] /* ty=Tensor[(819), int32] */, dtype="int32") /* ty=Tensor[(819), int32] */;
    %193 = cast(meta[relay.Constant][8] /* ty=Tensor[(819), int32] */, dtype="int32") /* ty=Tensor[(819), int32] */;
    %194 = reshape(%191, newshape=[1, 13, 9]) /* ty=Tensor[(1, 13, 9), int32] */;
    %195 = reshape(%192, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), int32] */;
    %196 = reshape(%193, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), int32] */;
    %197 = @func_1501(%194, %195, %196) /* ty=(Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) */;
    %198 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    %199 = %197.0;
    (%198, %199, %var_1637, meta[relay.Constant][8] /* ty=Tensor[(819), int32] */)
  };
  %200(%var_1644) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */
}

def @func_763() -> Tensor[(14, 15, 11), float64] {
  %204 = fn () -> Tensor[(14, 15, 11), float64] {
    %201 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %202 = %201.0;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
    atan(%203) /* ty=Tensor[(14, 15, 11), float64] */
  };
  %204() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_2336(%var_2326: Tensor[(4, 14, 5), float32]) -> (Tensor[(4, 14, 5), float32],) {
  %205 = cast(%var_2326, dtype="float32") /* ty=Tensor[(4, 14, 5), float32] */;
  %206 = tan(%205) /* ty=Tensor[(4, 14, 5), float32] */;
  (%206,)
}

def @func_4291() -> (Tensor[(7, 9, 13), float32],) {
  %209 = fn () -> (Tensor[(7, 9, 13), float32],) {
    %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 9, 13), float32] */, dtype="float32") /* ty=Tensor[(7, 9, 13), float32] */;
    %208 = rsqrt(%207) /* ty=Tensor[(7, 9, 13), float32] */;
    (%208,)
  };
  %209() /* ty=(Tensor[(7, 9, 13), float32],) */
}

def @func_4886() -> Tensor[(14, 15, 11), float32] {
  %211 = fn () -> Tensor[(14, 15, 11), float32] {
    %210 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %210.0
  };
  %211() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8361() -> Tensor[(14, 15, 11), float64] {
  @func_762() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_4751() -> Tensor[(14, 15, 11), float32] {
  %212 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %212.0
}

def @func_4810() -> Tensor[(14, 15, 11), float32] {
  @func_4808() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5996() -> Tensor[(14, 15, 11), float64] {
  %213 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %213.2
}

def @func_4507() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_4505() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_5328() -> Tensor[(14, 15, 11), float32] {
  @func_5326() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_9142() -> Tensor[(14, 15, 11), float32] {
  %214 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %214.0
}

def @func_2245() -> Tensor[(14, 15, 11), float64] {
  %215 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %216 = %215.0;
  %217 = cast(%216, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  sinh(%217) /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_3191() -> Tensor[(14, 15, 11), float32] {
  %219 = fn () -> Tensor[(14, 15, 11), float32] {
    %218 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
    %218.0
  };
  %219() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5715(%var_5682: Tensor[(48), uint32]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) {
  %220 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %221 = cast(%var_5682, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %222 = cast(%var_5682, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %223 = reshape(%221, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint32] */;
  %224 = reshape(%222, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint32] */;
  %225 = %220.0;
  %226 = @func_1780(%223, %224) /* ty=Tensor[(6, 2, 4), uint32] */;
  %227 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
  (%225, %226, %var_5682, %227)
}

def @func_9597() -> Tensor[(14, 15, 11), float32] {
  @func_9595() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_7441() -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) {
  %233 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) {
    %228 = @func_3241() /* ty=(Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %229 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %230 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
    %231 = %228.0;
    %232 = %229.0;
    (%230, %231, %232)
  };
  %233() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) */
}

def @func_3882(%var_3879: int16, %var_3880: Tensor[(1, 5), int16], %var_3881: Tensor[(360), float64]) -> (Tensor[(1, 5), int16], Tensor[(2, 180), uint32], Tensor[(14, 15, 11), float64]) {
  %248 = fn (%var_3860: int16, %var_3861: Tensor[(1, 5), int16], %var_3867: Tensor[(360), float64]) -> (Tensor[(1, 5), int16], Tensor[(2, 180), uint32], Tensor[(14, 15, 11), float64]) {
    %234 = cast(%var_3860, dtype="int16") /* ty=int16 */;
    %235 = cast(%var_3861, dtype="int16") /* ty=Tensor[(1, 5), int16] */;
    %236 = cast(%var_3867, dtype="float64") /* ty=Tensor[(360), float64] */;
    %237 = reshape(%236, newshape=[2, 180]) /* ty=Tensor[(2, 180), float64] */;
    %238 = @func_1115(%237) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) */;
    %239 = %238.2;
    %240 = cast(%var_3867, dtype="uint32") /* ty=Tensor[(360), uint32] */;
    %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(2), int32] */;
    %242 = cast(%239, dtype="uint32") /* ty=Tensor[(2, 180), uint32] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %244 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
    %245 = add(%234, %235) /* ty=Tensor[(1, 5), int16] */;
    %246 = maximum(%242, %243) /* ty=Tensor[(2, 180), uint32] */;
    %247 = %244.2;
    (%245, %246, %247)
  };
  %248(%var_3879, %var_3880, %var_3881) /* ty=(Tensor[(1, 5), int16], Tensor[(2, 180), uint32], Tensor[(14, 15, 11), float64]) */
}

def @func_8256(%var_8255: Tensor[(39, 3), int32]) -> (Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(39, 3), int32], Tensor[(14, 15, 11), float32]) {
  %256 = fn (%var_8249: Tensor[(39, 3), int32]) -> (Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(39, 3), int32], Tensor[(14, 15, 11), float32]) {
    %249 = cast(%var_8249, dtype="int32") /* ty=Tensor[(39, 3), int32] */;
    %250 = reshape(%249, newshape=[117]) /* ty=Tensor[(117), int32] */;
    %251 = @func_1643(%250) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
    %252 = @func_4484() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %253 = @func_2195() /* ty=Tensor[(14, 15, 11), float32] */;
    %254 = %251.3;
    %255 = %252.0;
    (%253, %254, %var_8249, %255)
  };
  %256(%var_8255) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(39, 3), int32], Tensor[(14, 15, 11), float32]) */
}

def @func_8475() -> (Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) {
  %257 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %258 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
  %259 = %257.3;
  %260 = %258.0;
  (%259, %260)
}

def @func_7702() -> (Tensor[(14, 15, 11), float32], Tensor[(117), float64]) {
  %261 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %262 = @func_6149() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) */;
  %263 = %262.2;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(117), float64] */;
  %265 = %261.0;
  %266 = log10(%264) /* ty=Tensor[(117), float64] */;
  (%265, %266)
}

def @func_9029() -> Tensor[(14, 15, 11), float32] {
  @func_9027() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_9814() -> (Tensor[(14, 15, 11), float64],) {
  @func_9812() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_7178() -> (Tensor[(1, 6, 5), float32],) {
  @func_7176() /* ty=(Tensor[(1, 6, 5), float32],) */
}

def @func_9098() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %273 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
    %267 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %268 = @func_7440() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32]) */;
    %269 = %267.0;
    %270 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    %271 = @func_5326() /* ty=Tensor[(14, 15, 11), float32] */;
    %272 = %268.1;
    (%269, %270, %271, %272)
  };
  %273() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */
}

def @func_5925() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %280 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %274 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %275 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %276 = %274.1;
    %277 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
    %278 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
    %279 = %275.0;
    (%276, %277, %278, %279)
  };
  %280() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_3616() -> Tensor[(14, 15, 11), float32] {
  @func_3614() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_2291() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %281 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %284 = cast(%282, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %285 = rsqrt(%283) /* ty=Tensor[(14, 15, 11), float32] */;
  %286 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  %287 = sqrt(%284) /* ty=Tensor[(14, 15, 11), float64] */;
  (%285, %286, %287)
}

def @func_9310() -> (Tensor[(14, 15, 11), float64],) {
  %290 = fn () -> (Tensor[(14, 15, 11), float64],) {
    %288 = @func_5489() /* ty=(Tensor[(14, 15, 11), float64],) */;
    %289 = %288.0;
    (%289,)
  };
  %290() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_7516() -> (Tensor[(14, 15, 11), float32], Tensor[(3, 2, 7), float64], Tensor[(42), float64]) {
  @func_7514() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(3, 2, 7), float64], Tensor[(42), float64]) */
}

def @func_7704() -> (Tensor[(14, 15, 11), float32], Tensor[(117), float64]) {
  @func_7702() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(117), float64]) */
}

def @func_7567(%var_7565: Tensor[(810), int8], %var_7566: Tensor[(13, 169), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) {
  @func_7563(%var_7565, %var_7566) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) */
}

def @func_6637() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_6635() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_9295() -> (Tensor[(4, 11, 8), uint8], Tensor[(14, 15, 11), float32]) {
  @func_9293() /* ty=(Tensor[(4, 11, 8), uint8], Tensor[(14, 15, 11), float32]) */
}

def @func_4153() -> Tensor[(14, 15, 11), float32] {
  %292 = fn () -> Tensor[(14, 15, 11), float32] {
    %291 = @func_3670() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %291.0
  };
  %292() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_10287() -> (Tensor[(14, 15, 11), float32],) {
  @func_10285() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_5718(%var_5716: Tensor[(48), uint32]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) {
  @func_5715(%var_5716) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 2, 4), uint32], Tensor[(48), uint32], Tensor[(14, 15, 11), float32]) */
}

def @func_9121() -> Tensor[(14, 15, 11), float32] {
  %294 = fn () -> Tensor[(14, 15, 11), float32] {
    %293 = @func_8641() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %293.0
  };
  %294() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_344() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %298 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %295 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %296 = %295.0;
    %297 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%296, %297)
  };
  %298() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_748() -> (Tensor[(14, 15, 11), float32],) {
  %301 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %299 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %300 = %299.0;
    (%300,)
  };
  %301() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_3115(%var_2984: Tensor[(2, 8, 5), bool], %var_3018: Tensor[(2, 8, 5), float32], %var_3057: Tensor[(8, 6, 5), float32]) -> (Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %302 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 8, 5), bool] */, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %303 = shape_of(%var_2984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_2984, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %306 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %307 = cast(%var_2984, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %308 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2, 8, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 8, 5), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = logical_or(%309, %310) /* ty=Tensor[(2, 8, 5), bool] */;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  %313 = atan(%312) /* ty=Tensor[(2, 8, 5), float32] */;
  %314 = cast(%var_3018, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %319 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %320 = cast(%319, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %321 = cast(%var_3057, dtype="float64") /* ty=Tensor[(8, 6, 5), float64] */;
  %322 = @func_2004() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %323 = cast(%313, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %324 = mod(%304, %305) /* ty=Tensor[(2, 8, 5), float32] */;
  %325 = %306.0;
  %326 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
  %327 = greater_equal(%316, %317) /* ty=Tensor[(2, 8, 5), bool] */;
  %328 = %318.0;
  %329 = mod(%320, %321) /* ty=Tensor[(8, 6, 5), float64] */;
  %330 = %322.2;
  %331 = exp(%323) /* ty=Tensor[(2, 8, 5), float64] */;
  %332 = @func_1828() /* ty=Tensor[(14, 15, 11), float32] */;
  %333 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  (%324, %325, %326, %327, %328, %329, %330, %331, %332, %333)
}

def @func_5326() -> Tensor[(14, 15, 11), float32] {
  @func_5297() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_2930() -> (Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) {
  @func_2928() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_5451() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %334 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %335 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %336 = %334.0;
  (%335, %336)
}

def @func_2063() -> (Tensor[(14, 15, 11), float32],) {
  %340 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %337 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    %338 = cast(%337, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %339 = exp(%338) /* ty=Tensor[(14, 15, 11), float32] */;
    (%339,)
  };
  %340() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_9595() -> Tensor[(14, 15, 11), float32] {
  %341 = @func_4505() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %341.2
}

def @func_4753() -> Tensor[(14, 15, 11), float32] {
  @func_4751() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3156() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_8477() -> (Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) {
  @func_8475() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) */
}

def @func_8727(%var_8725: Tensor[(16, 16, 5), float64], %var_8726: Tensor[(16, 16, 5), float64]) -> Tensor[(16, 16, 5), float32] {
  @func_8723(%var_8725, %var_8726) /* ty=Tensor[(16, 16, 5), float32] */
}

def @func_686() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %368 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %342 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %343 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %344 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %345 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %346 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %347 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %348 = %347.0;
    %349 = cast(%348, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
    %350 = acosh(%349) /* ty=Tensor[(14, 15, 11), float64] */;
    %351 = cast(%350, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
    %352 = cast(%350, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %353 = log2(%352) /* ty=Tensor[(14, 15, 11), float32] */;
    %354 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 15, 11), float32] */, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
    %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(%353, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %358 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %359 = %342.0;
    %360 = %343.0;
    %361 = %344.1;
    %362 = %345.0;
    %363 = %346.0;
    %364 = cosh(%351) /* ty=Tensor[(14, 15, 11), float64] */;
    %365 = logical_xor(%356, %357) /* ty=Tensor[(14, 15, 11), int32] */;
    %366 = %358.0;
    %367 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%359, %360, %361, %362, %363, %364, %365, %366, %367)
  };
  %368() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_1117(%var_1116: Tensor[(2, 180), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) {
  %377 = fn (%var_1111: Tensor[(2, 180), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) {
    %369 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %370 = cast(%var_1111, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
    %371 = cast(%var_1111, dtype="float64") /* ty=Tensor[(2, 180), float64] */;
    %372 = reshape(%370, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %373 = reshape(%371, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %374 = @func_813(%372, %373) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
    %375 = %369.0;
    %376 = %374.1;
    (%375, %376, %var_1111)
  };
  %377(%var_1116) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32], Tensor[(2, 180), float64]) */
}

def @func_233() -> (Tensor[(14, 15, 11), float32],) {
  @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_8208() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %378 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %379 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %380 = %378.0;
  %381 = %379.0;
  (%380, %381)
}

def @func_8287() -> Tensor[(14, 15, 11), float32] {
  %383 = fn () -> Tensor[(14, 15, 11), float32] {
    %382 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %382.3
  };
  %383() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8103(%var_8101: Tensor[(810), int8], %var_8102: Tensor[(2197), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(810), int8], Tensor[(810), int8], Tensor[(2197), uint64]) {
  %392 = fn (%var_8084: Tensor[(810), int8], %var_8085: Tensor[(2197), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(810), int8], Tensor[(810), int8], Tensor[(2197), uint64]) {
    %384 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %385 = cast(%var_8084, dtype="int8") /* ty=Tensor[(810), int8] */;
    %386 = cast(%var_8085, dtype="uint64") /* ty=Tensor[(2197), uint64] */;
    %387 = reshape(%385, newshape=[810]) /* ty=Tensor[(810), int8] */;
    %388 = reshape(%386, newshape=[13, 169]) /* ty=Tensor[(13, 169), uint64] */;
    %389 = @func_7563(%387, %388) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) */;
    %390 = %384.0;
    %391 = %389.3;
    (%390, %391, %var_8084, %var_8085)
  };
  %392(%var_8101, %var_8102) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(810), int8], Tensor[(810), int8], Tensor[(2197), uint64]) */
}

def @func_10025(%var_9995: Tensor[(10, 16, 10), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(10, 16, 10), float32]) {
  %393 = @func_8604() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %394 = cast(%var_9995, dtype="float32") /* ty=Tensor[(10, 16, 10), float32] */;
  %395 = sqrt(%394) /* ty=Tensor[(10, 16, 10), float32] */;
  %396 = cast(%var_9995, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %400 = left_shift(%398, %399) /* ty=Tensor[(10, 16, 10), uint8] */;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(10, 16, 10), float32] */;
  %402 = %393.1;
  %403 = atanh(%401) /* ty=Tensor[(10, 16, 10), float32] */;
  (%402, %403)
}

def @func_4946() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %407 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %404 = @func_4516() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %405 = %404.0;
    %406 = @func_4011() /* ty=Tensor[(14, 15, 11), float32] */;
    (%405, %406)
  };
  %407() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_1338() -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
  %416 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) {
    %408 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
    %409 = asin(%408) /* ty=Tensor[(15, 5, 11), float32] */;
    %410 = cast(%409, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
    %411 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(15, 5, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 5, 11), float32] */, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %414 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
    %415 = right_shift(%412, %413) /* ty=Tensor[(15, 5, 11), int16] */;
    (%414, %415)
  };
  %416() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */
}

def @func_1448() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
  @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */
}

def @func_832() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %417 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %418 = %417.0;
  %419 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%418, %419)
}

def @func_4263() -> (Tensor[(14, 15, 11), float32],) {
  %422 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %420 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %421 = %420.0;
    (%421,)
  };
  %422() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_9144() -> Tensor[(14, 15, 11), float32] {
  @func_9142() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5298() -> Tensor[(14, 15, 11), float32] {
  %423 = fn () -> Tensor[(14, 15, 11), float32] {
    @func_3614() /* ty=Tensor[(14, 15, 11), float32] */
  };
  %423() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_1764() -> (Tensor[(14, 15, 11), float32],) {
  %424 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %425 = %424.0;
  (%425,)
}

def @func_440() -> Tensor[(14, 15, 11), float32] {
  @func_438() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5223(%var_5221: Tensor[(117), int32], %var_5222: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), uint64], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
  @func_5219(%var_5221, %var_5222) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), uint64], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) */
}

def @func_8336(%var_8335: Tensor[(12, 9, 14), float32]) -> Tensor[(12, 9, 14), float32] {
  %430 = fn (%var_8328: Tensor[(12, 9, 14), float32]) -> Tensor[(12, 9, 14), float32] {
    %426 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
    %427 = shape_of(%var_8328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%var_8328, dtype="float32") /* ty=Tensor[(12, 9, 14), float32] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%428, %429) /* ty=Tensor[(12, 9, 14), float32] */
  };
  %430(%var_8335) /* ty=Tensor[(12, 9, 14), float32] */
}

def @func_1590(%var_1588: Tensor[(16, 10, 11), int64], %var_1589: Tensor[(16, 10, 11), int64]) -> (Tensor[(16, 10, 11), bool],) {
  %436 = fn (%var_1578: Tensor[(16, 10, 11), int64], %var_1579: Tensor[(16, 10, 11), int64]) -> (Tensor[(16, 10, 11), bool],) {
    %431 = cast(%var_1579, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %432 = shape_of(%var_1578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%var_1578, dtype="bool") /* ty=Tensor[(16, 10, 11), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = greater_equal(%433, %434) /* ty=Tensor[(16, 10, 11), bool] */;
    (%435,)
  };
  %436(%var_1588, %var_1589) /* ty=(Tensor[(16, 10, 11), bool],) */
}

def @func_4516() -> (Tensor[(14, 15, 11), float32],) {
  %437 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
  %438 = %437.0;
  (%438,)
}

def @func_4011() -> Tensor[(14, 15, 11), float32] {
  @func_1153() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3912() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %439 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
  %440 = %439.0;
  %441 = @func_3424() /* ty=Tensor[(14, 15, 11), float64] */;
  %442 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%440, %441, %442)
}

def @func_1365() -> (Tensor[(14, 15, 11), float32],) {
  %443 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %444 = %443.0;
  (%444,)
}

def @func_9770() -> (Tensor[(14, 15, 11), float32],) {
  %447 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %445 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %446 = %445.2;
    (%446,)
  };
  %447() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_4713() -> Tensor[(14, 15, 11), float32] {
  %449 = fn () -> Tensor[(14, 15, 11), float32] {
    %448 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %448.1
  };
  %449() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_8723(%var_8691: Tensor[(16, 16, 5), float64], %var_8692: Tensor[(16, 16, 5), float64]) -> Tensor[(16, 16, 5), float32] {
  %450 = cast(%var_8692, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %451 = shape_of(%var_8691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_8691, dtype="bool") /* ty=Tensor[(16, 16, 5), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = greater(%452, %453) /* ty=Tensor[(16, 16, 5), bool] */;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(16, 16, 5), float32] */;
  log(%455) /* ty=Tensor[(16, 16, 5), float32] */
}

def @func_3241() -> (Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %456 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %457 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %458 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %459 = %456.1;
  %460 = %457.0;
  %461 = %458.0;
  (%459, %460, %461)
}

def @func_6305(%var_6303: Tensor[(825), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float64], Tensor[(825), int16]) {
  @func_6302(%var_6303) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float64], Tensor[(825), int16]) */
}

def @func_7144() -> Tensor[(14, 15, 11), float32] {
  %463 = fn () -> Tensor[(14, 15, 11), float32] {
    %462 = @func_3787() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %462.0
  };
  %463() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_4140(%var_4138: Tensor[(3, 6, 5), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) {
  @func_4137(%var_4138) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(3, 6, 5), uint16]) */
}

def @func_4518() -> (Tensor[(14, 15, 11), float32],) {
  @func_4516() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_9167(%var_9165: Tensor[(4, 5, 15), float32], %var_9166: Tensor[(819), float32]) -> (Tensor[(4, 5, 15), float32], Tensor[(4, 5, 15), float64], Tensor[(7, 9, 13), bool], Tensor[(819), float32]) {
  %472 = fn (%var_9145: Tensor[(4, 5, 15), float32], %var_9156: Tensor[(819), float32]) -> (Tensor[(4, 5, 15), float32], Tensor[(4, 5, 15), float64], Tensor[(7, 9, 13), bool], Tensor[(819), float32]) {
    %464 = cast(%var_9145, dtype="float32") /* ty=Tensor[(4, 5, 15), float32] */;
    %465 = cast(%var_9145, dtype="float64") /* ty=Tensor[(4, 5, 15), float64] */;
    %466 = cast(%var_9156, dtype="float32") /* ty=Tensor[(819), float32] */;
    %467 = reshape(%466, newshape=[7, 9, 13]) /* ty=Tensor[(7, 9, 13), float32] */;
    %468 = @func_7763(%467) /* ty=(Tensor[(7, 9, 13), bool],) */;
    %469 = log(%464) /* ty=Tensor[(4, 5, 15), float32] */;
    %470 = acos(%465) /* ty=Tensor[(4, 5, 15), float64] */;
    %471 = %468.0;
    (%469, %470, %471, %var_9156)
  };
  %472(%var_9165, %var_9166) /* ty=(Tensor[(4, 5, 15), float32], Tensor[(4, 5, 15), float64], Tensor[(7, 9, 13), bool], Tensor[(819), float32]) */
}

def @func_834() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_5608() -> (Tensor[(9, 15, 2), uint32],) {
  %473 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(9, 15, 2), uint32] */;
  %474 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 15, 2), uint32] */, dtype="uint32") /* ty=Tensor[(9, 15, 2), uint32] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %477 = bitwise_or(%475, %476) /* ty=Tensor[(9, 15, 2), uint32] */;
  (%477,)
}

def @func_2649() -> Tensor[(14, 15, 11), float32] {
  %478 = fn () -> Tensor[(14, 15, 11), float32] {
    @func_2195() /* ty=Tensor[(14, 15, 11), float32] */
  };
  %478() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_1830() -> Tensor[(14, 15, 11), float32] {
  @func_1828() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_2293() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */
}

def @func_3341() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %479 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %480 = %479.0;
  %481 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%480, %481)
}

def @func_2882() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %482 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %483 = %482.0;
  %484 = @func_2245() /* ty=Tensor[(14, 15, 11), float64] */;
  (%483, %484)
}

def @func_3243() -> (Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_3241() /* ty=(Tensor[(15, 5, 11), int16], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_3425() -> Tensor[(14, 15, 11), float64] {
  %485 = fn () -> Tensor[(14, 15, 11), float64] {
    @func_762() /* ty=Tensor[(14, 15, 11), float64] */
  };
  %485() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_1194() -> (Tensor[(14, 15, 11), float32],) {
  %488 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %486 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %487 = %486.0;
    (%487,)
  };
  %488() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_8641() -> (Tensor[(14, 15, 11), float32],) {
  %489 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %490 = %489.0;
  (%490,)
}

def @func_5574(%var_5573: Tensor[(80), bool]) -> (Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) {
  %501 = fn (%var_5561: Tensor[(80), bool]) -> (Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) {
    %491 = @func_4290() /* ty=(Tensor[(7, 9, 13), float32],) */;
    %492 = cast(%var_5561, dtype="bool") /* ty=Tensor[(80), bool] */;
    %493 = cast(%var_5561, dtype="float32") /* ty=Tensor[(80), float32] */;
    %494 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %495 = reshape(%492, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), bool] */;
    %496 = reshape(%493, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
    %497 = reshape(%494, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
    %498 = @func_3115(%495, %496, %497) /* ty=(Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %499 = %491.0;
    %500 = %498.7;
    (%499, %500, %var_5561, meta[relay.Constant][16] /* ty=Tensor[(240), float32] */)
  };
  %501(%var_5573) /* ty=(Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) */
}

def @func_5406() -> (Tensor[(14, 15, 11), float64],) {
  %503 = fn () -> (Tensor[(14, 15, 11), float64],) {
    %502 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    (%502,)
  };
  %503() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_6565() -> (Tensor[(5, 56), float32], Tensor[(14, 15, 11), float32], Tensor[(45, 2), float32]) {
  @func_6563() /* ty=(Tensor[(5, 56), float32], Tensor[(14, 15, 11), float32], Tensor[(45, 2), float32]) */
}

def @func_3277() -> Tensor[(14, 15, 11), float64] {
  @func_3275() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_7012() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %507 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
    %504 = @func_4640() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %505 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    %506 = %504.0;
    (%505, %506)
  };
  %507() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_9633() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %511 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %508 = @func_9097() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
    %509 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
    %510 = %508.2;
    (%509, %510)
  };
  %511() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_7893() -> Tensor[(14, 15, 11), float32] {
  %513 = fn () -> Tensor[(14, 15, 11), float32] {
    %512 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
    %512.0
  };
  %513() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_4319(%var_4315: Tensor[(1760), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(16, 10, 11), bool], Tensor[(1760), int64]) {
  %514 = @func_2291() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %515 = cast(%var_4315, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %516 = cast(%var_4315, dtype="int64") /* ty=Tensor[(1760), int64] */;
  %517 = reshape(%515, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), int64] */;
  %518 = reshape(%516, newshape=[16, 10, 11]) /* ty=Tensor[(16, 10, 11), int64] */;
  %519 = @func_1587(%517, %518) /* ty=(Tensor[(16, 10, 11), bool],) */;
  %520 = %514.1;
  %521 = %519.0;
  (%520, %521, %var_4315)
}

def @func_7069() -> (Tensor[(14, 15, 11), float32],) {
  %522 = @func_2648() /* ty=Tensor[(14, 15, 11), float32] */;
  (%522,)
}

def @func_1154() -> Tensor[(14, 15, 11), float32] {
  %526 = fn () -> Tensor[(14, 15, 11), float32] {
    %523 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %524 = %523.1;
    %525 = cast(%524, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    log10(%525) /* ty=Tensor[(14, 15, 11), float32] */
  };
  %526() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5387(%var_5385: Tensor[(280), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(4, 14, 5), float32], Tensor[(280), float32]) {
  @func_5384(%var_5385) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(4, 14, 5), float32], Tensor[(280), float32]) */
}

def @func_9528() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %527 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %528 = @func_7324() /* ty=Tensor[(14, 15, 11), float32] */;
  %529 = %527.0;
  %530 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
  (%528, %529, %530)
}

def @func_9530() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_9528() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @main(%var_10368: Tensor[(12, 6, 4), int64], %var_10369: Tensor[(12, 6, 4), int64]) -> (Tensor[(12, 6, 4), bool], Tensor[(12, 6, 4), float32]) {
  %531 = cast(%var_10369, dtype="bool") /* ty=Tensor[(12, 6, 4), bool] */;
  %532 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_10368, dtype="bool") /* ty=Tensor[(12, 6, 4), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %535 = cast(%var_10369, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %536 = shape_of(%var_10368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%var_10368, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %539 = equal(%533, %534) /* ty=Tensor[(12, 6, 4), bool] */;
  %540 = power(%537, %538) /* ty=Tensor[(12, 6, 4), float32] */;
  (%539, %540)
}

def @func_3787() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %541 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %542 = %541.0;
  %543 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
  (%542, %543)
}

def @func_450() -> (Tensor[(14, 15, 11), float32],) {
  %545 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %544 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%544,)
  };
  %545() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_1034(%var_1014: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %546 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %547 = %546.0;
  %548 = cast(%var_1014, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %553 = floor_divide(%550, %551) /* ty=Tensor[(14, 15, 11), float64] */;
  %554 = %552.0;
  (%553, %554)
}

def @func_1367() -> (Tensor[(14, 15, 11), float32],) {
  @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_2361() -> Tensor[(1, 6, 5), float32] {
  %556 = fn () -> Tensor[(1, 6, 5), float32] {
    %555 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
    log10(%555) /* ty=Tensor[(1, 6, 5), float32] */
  };
  %556() /* ty=Tensor[(1, 6, 5), float32] */
}

def @func_9257() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), uint64]) {
  %557 = @func_5924() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %558 = @func_8564() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) */;
  %559 = %558.1;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %561 = atanh(%560) /* ty=Tensor[(2, 8, 5), float64] */;
  %562 = cast(%559, dtype="uint64") /* ty=Tensor[(2, 8, 5), uint64] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%561, dtype="uint64") /* ty=Tensor[(2, 8, 5), uint64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %566 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
  %567 = %557.3;
  %568 = bitwise_and(%564, %565) /* ty=Tensor[(2, 8, 5), uint64] */;
  (%566, %567, %568)
}

def @func_7563(%var_7531: Tensor[(810), int8], %var_7537: Tensor[(13, 169), uint64]) -> (Tensor[(14, 15, 11), float32], Tensor[(9, 9, 10), bool], Tensor[(90), int8], Tensor[(810), int8], Tensor[(14, 15, 11), float32], Tensor[(9, 15, 2), uint32], Tensor[(13, 169), uint64]) {
  %569 = cast(meta[relay.Constant][18] /* ty=Tensor[(90), int8] */, dtype="int8") /* ty=Tensor[(90), int8] */;
  %570 = cast(%var_7531, dtype="int8") /* ty=Tensor[(810), int8] */;
  %571 = reshape(%569, newshape=[9, 1, 10]) /* ty=Tensor[(9, 1, 10), int8] */;
  %572 = reshape(%570, newshape=[9, 9, 10]) /* ty=Tensor[(9, 9, 10), int8] */;
  %573 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %574 = cast(%var_7537, dtype="uint64") /* ty=Tensor[(13, 169), uint64] */;
  %575 = reshape(%574, newshape=[13, 13, 13]) /* ty=Tensor[(13, 13, 13), uint64] */;
  %576 = @func_7097(%575) /* ty=(Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) */;
  %577 = @func_3190() /* ty=Tensor[(14, 15, 11), float32] */;
  %578 = @func_4983(%571, %572) /* ty=Tensor[(9, 9, 10), bool] */;
  %579 = %573.0;
  %580 = %576.1;
  (%577, %578, meta[relay.Constant][18] /* ty=Tensor[(90), int8] */, %var_7531, %579, %580, %var_7537)
}

def @func_8030(%var_8026: Tensor[(3, 3, 6), float32], %var_8027: Tensor[(3, 3, 6), float32], %var_8028: Tensor[(3, 3, 6), float32], %var_8029: Tensor[(30), float32]) -> (Tensor[(3, 3, 6), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(3, 3, 6), int8], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(825), int16], Tensor[(30), float32]) {
  %606 = fn (%var_7958: Tensor[(3, 3, 6), float32], %var_7959: Tensor[(3, 3, 6), float32], %var_8007: Tensor[(3, 3, 6), float32], %var_8021: Tensor[(30), float32]) -> (Tensor[(3, 3, 6), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(3, 3, 6), int8], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(825), int16], Tensor[(30), float32]) {
    %581 = cast(%var_7959, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
    %582 = shape_of(%var_7958, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%var_7958, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %585 = @func_4454() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %586 = cast(%var_7959, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
    %587 = cast(%var_7958, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
    %588 = sqrt(%587) /* ty=Tensor[(3, 3, 6), float32] */;
    %589 = cast(%var_8007, dtype="int8") /* ty=Tensor[(3, 3, 6), int8] */;
    %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %591 = cast(%588, dtype="int8") /* ty=Tensor[(3, 3, 6), int8] */;
    %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %593 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %594 = cast(%588, dtype="float32") /* ty=Tensor[(3, 3, 6), float32] */;
    %595 = cast(%var_8021, dtype="float32") /* ty=Tensor[(30), float32] */;
    %596 = reshape(%595, newshape=[2, 15, 1]) /* ty=Tensor[(2, 15, 1), float32] */;
    %597 = @func_5748(%596) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) */;
    %598 = mod(%583, %584) /* ty=Tensor[(3, 3, 6), float32] */;
    %599 = @func_7143() /* ty=Tensor[(14, 15, 11), float32] */;
    %600 = %585.1;
    %601 = log(%586) /* ty=Tensor[(3, 3, 6), float32] */;
    %602 = multiply(%591, %592) /* ty=Tensor[(3, 3, 6), int8] */;
    %603 = %593.0;
    %604 = cosh(%594) /* ty=Tensor[(3, 3, 6), float32] */;
    %605 = %597.2;
    (%598, %599, %600, %601, %602, %603, %604, %605, %var_8021)
  };
  %606(%var_8026, %var_8027, %var_8028, %var_8029) /* ty=(Tensor[(3, 3, 6), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(3, 3, 6), int8], Tensor[(14, 15, 11), float32], Tensor[(3, 3, 6), float32], Tensor[(825), int16], Tensor[(30), float32]) */
}

def @func_10202() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  %612 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
    %607 = @func_3762() /* ty=(Tensor[(14, 15, 11), float64],) */;
    %608 = @func_5405() /* ty=(Tensor[(14, 15, 11), float64],) */;
    %609 = %607.0;
    %610 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
    %611 = %608.0;
    (%609, %610, %611)
  };
  %612() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */
}

def @func_2884() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) {
  @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */
}

def @func_1415(%var_1406: Tensor[(14, 15, 11), float32]) -> Tensor[(14, 15, 11), bool] {
  %613 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %614 = %613.0;
  %615 = cast(%var_1406, dtype="bool") /* ty=Tensor[(14, 15, 11), bool] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="bool") /* ty=Tensor[(14, 15, 11), bool] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%617, %618) /* ty=Tensor[(14, 15, 11), bool] */
}

def @func_9442() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %619 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %620 = %619.0;
  %621 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
  (%620, %621)
}

def @func_816(%var_814: Tensor[(6, 6, 10), float64], %var_815: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) {
  %636 = fn (%var_784: Tensor[(6, 6, 10), float64], %var_800: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) {
    %622 = cast(%var_784, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
    %623 = log(%622) /* ty=Tensor[(6, 6, 10), float64] */;
    %624 = cast(%var_784, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %628 = cast(%var_800, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %629 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%var_784, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %632 = cast(%var_800, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %633 = mod(%626, %627) /* ty=Tensor[(6, 6, 10), float32] */;
    %634 = floor_mod(%630, %631) /* ty=Tensor[(6, 6, 10), float32] */;
    %635 = sin(%632) /* ty=Tensor[(6, 6, 10), float32] */;
    (%633, %634, %635)
  };
  %636(%var_814, %var_815) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */
}

def @func_2928() -> (Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) {
  %637 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
  %638 = @func_2791() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float64], Tensor[(1, 6, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
  %639 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %640 = %637.1;
  %641 = %638.7;
  %642 = %639.0;
  (%640, %641, %642)
}

def @func_2176(%var_2175: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) {
  %674 = fn (%var_2098: Tensor[(15, 8, 2), int64]) -> (Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) {
    %643 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 8, 2), int64] */, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %644 = rsqrt(%643) /* ty=Tensor[(15, 8, 2), float64] */;
    %645 = cast(%644, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %646 = sqrt(%645) /* ty=Tensor[(15, 8, 2), float64] */;
    %647 = cast(%var_2098, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %648 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(15, 8, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %649 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 8, 2), int64] */, dtype="bool") /* ty=Tensor[(15, 8, 2), bool] */;
    %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %651 = greater_equal(%649, %650) /* ty=Tensor[(15, 8, 2), bool] */;
    %652 = cast(%651, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %653 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%646, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %656 = power(%654, %655) /* ty=Tensor[(15, 8, 2), float64] */;
    %657 = cast(%656, dtype="uint8") /* ty=Tensor[(15, 8, 2), uint8] */;
    %658 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %659 = cast(%646, dtype="uint8") /* ty=Tensor[(15, 8, 2), uint8] */;
    %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %661 = cast(%646, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %662 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %663 = cast(%644, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
    %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %665 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 8, 2), int64] */, dtype="uint16") /* ty=Tensor[(15, 8, 2), uint16] */;
    %666 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
    %667 = cast(%651, dtype="uint16") /* ty=Tensor[(15, 8, 2), uint16] */;
    %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %669 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %670 = bitwise_and(%659, %660) /* ty=Tensor[(15, 8, 2), uint8] */;
    %671 = subtract(%663, %664) /* ty=Tensor[(15, 8, 2), float64] */;
    %672 = left_shift(%667, %668) /* ty=Tensor[(15, 8, 2), uint16] */;
    %673 = %669.0;
    (%670, %671, %672, %673)
  };
  %674(%var_2175) /* ty=(Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) */
}

def @func_3343() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_9989() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(440), float64]) {
  %683 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(440), float64]) {
    %675 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %676 = cast(meta[relay.Constant][20] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
    %677 = cast(meta[relay.Constant][20] /* ty=Tensor[(440), float64] */, dtype="float64") /* ty=Tensor[(440), float64] */;
    %678 = reshape(%676, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), float64] */;
    %679 = reshape(%677, newshape=[11, 8, 5]) /* ty=Tensor[(11, 8, 5), float64] */;
    %680 = @func_6941(%678, %679) /* ty=(Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %681 = %675.0;
    %682 = %680.1;
    (%681, %682, meta[relay.Constant][20] /* ty=Tensor[(440), float64] */)
  };
  %683() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(440), float64]) */
}

def @func_10285() -> (Tensor[(14, 15, 11), float32],) {
  %684 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
  (%684,)
}

def @func_3562(%var_3561: float64) -> (Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) {
  %689 = fn (%var_3529: float64) -> (Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) {
    %685 = cast(%var_3529, dtype="float64") /* ty=float64 */;
    %686 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 9, 14), float64] */, dtype="float64") /* ty=Tensor[(8, 9, 14), float64] */;
    %687 = floor_mod(%685, %686) /* ty=Tensor[(8, 9, 14), float64] */;
    %688 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%687, %688)
  };
  %689(%var_3561) /* ty=(Tensor[(8, 9, 14), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_7099(%var_7098: Tensor[(13, 13, 13), uint64]) -> (Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) {
  %697 = fn (%var_7081: Tensor[(13, 13, 13), uint64]) -> (Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) {
    %690 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 13, 13), uint64] */, dtype="uint64") /* ty=Tensor[(13, 13, 13), uint64] */;
    %691 = shape_of(%var_7081, dtype="int32") /* ty=Tensor[(3), int32] */;
    %692 = cast(%var_7081, dtype="uint64") /* ty=Tensor[(13, 13, 13), uint64] */;
    %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %694 = @func_5608() /* ty=(Tensor[(9, 15, 2), uint32],) */;
    %695 = bitwise_xor(%692, %693) /* ty=Tensor[(13, 13, 13), uint64] */;
    %696 = %694.0;
    (%695, %696)
  };
  %697(%var_7098) /* ty=(Tensor[(13, 13, 13), uint64], Tensor[(9, 15, 2), uint32]) */
}

def @func_4485() -> (Tensor[(14, 15, 11), float32],) {
  %700 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %698 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %699 = %698.2;
    (%699,)
  };
  %700() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_7266() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %701 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
  %702 = @func_4152() /* ty=Tensor[(14, 15, 11), float32] */;
  (%701, %702)
}

def @func_4640() -> (Tensor[(14, 15, 11), float32],) {
  %703 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %704 = %703.0;
  (%704,)
}

def @func_5491() -> (Tensor[(14, 15, 11), float64],) {
  @func_5489() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_1308() -> Tensor[(14, 15, 11), float32] {
  %705 = fn () -> Tensor[(14, 15, 11), float32] {
    @func_247() /* ty=Tensor[(14, 15, 11), float32] */
  };
  %705() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5418() -> Tensor[(14, 15, 11), float32] {
  %706 = @func_4262() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %706.0
}

def @func_4771() -> Tensor[(14, 15, 11), float32] {
  %707 = fn () -> Tensor[(14, 15, 11), float32] {
    @func_2648() /* ty=Tensor[(14, 15, 11), float32] */
  };
  %707() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3399(%var_3398: Tensor[(360), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32]) {
  %740 = fn (%var_3347: Tensor[(360), float64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32]) {
    %708 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %709 = @func_1193() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %710 = %709.0;
    %711 = cast(%710, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %712 = %708.0;
    %713 = cast(%712, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %714 = reshape(%713, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
    %715 = @func_870(%714) /* ty=(Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %716 = %715.0;
    %717 = cast(%716, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %718 = reshape(%717, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
    %719 = @func_1034(%718) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %720 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %721 = cast(%var_3347, dtype="float64") /* ty=Tensor[(360), float64] */;
    %722 = cast(%var_3347, dtype="float64") /* ty=Tensor[(360), float64] */;
    %723 = reshape(%721, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %724 = reshape(%722, newshape=[6, 6, 10]) /* ty=Tensor[(6, 6, 10), float64] */;
    %725 = @func_813(%723, %724) /* ty=(Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32], Tensor[(6, 6, 10), float32]) */;
    %726 = %725.1;
    %727 = cast(%var_3347, dtype="int8") /* ty=Tensor[(360), int8] */;
    %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
    %729 = cast(%726, dtype="int8") /* ty=Tensor[(6, 6, 10), int8] */;
    %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %731 = right_shift(%729, %730) /* ty=Tensor[(6, 6, 10), int8] */;
    %732 = cast(%726, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
    %734 = cast(%731, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %736 = atanh(%711) /* ty=Tensor[(14, 15, 11), float32] */;
    %737 = %719.0;
    %738 = %720.0;
    %739 = add(%734, %735) /* ty=Tensor[(6, 6, 10), float32] */;
    (%712, %736, %716, %737, %738, %739)
  };
  %740(%var_3398) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(6, 6, 10), float32]) */
}

def @func_9332() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_9330() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_2519() -> (Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) {
  @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */
}

def @func_9491(%var_9475: Tensor[(14, 15, 1), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(14, 15, 1), float64]) {
  %741 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 308), float64] */, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %742 = reshape(%741, newshape=[7, 16, 11]) /* ty=Tensor[(7, 16, 11), float64] */;
  %743 = @func_6446(%742) /* ty=(Tensor[(7, 16, 11), float64],) */;
  %744 = cast(%var_9475, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %745 = exp(%744) /* ty=Tensor[(14, 15, 1), float64] */;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %747 = %743.0;
  %748 = acos(%746) /* ty=Tensor[(14, 15, 1), float64] */;
  (%747, meta[relay.Constant][23] /* ty=Tensor[(4, 308), float64] */, %748)
}

def @func_3914() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_7268() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_7266() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_8112() -> Tensor[(14, 15, 11), float32] {
  %749 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %749.0
}

def @func_5134() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) {
  %760 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) {
    %750 = @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %751 = @func_4800() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %752 = @func_2517() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) */;
    %753 = cast(meta[relay.Constant][24] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
    %754 = reshape(%753, newshape=[117]) /* ty=Tensor[(117), int32] */;
    %755 = @func_1643(%754) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
    %756 = %750.0;
    %757 = %751.0;
    %758 = %752.0;
    %759 = %755.3;
    (%756, %757, %758, %759, meta[relay.Constant][24] /* ty=Tensor[(117), int32] */)
  };
  %760() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(819), int32], Tensor[(117), int32]) */
}

def @func_249() -> Tensor[(14, 15, 11), float32] {
  @func_247() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3526() -> Tensor[(14, 15, 11), float32] {
  @func_3524() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5045() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %761 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %762 = @func_343() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %763 = %761.0;
  %764 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
  %765 = %762.1;
  (%763, %764, %765)
}

def @func_231() -> (Tensor[(14, 15, 11), float32],) {
  %766 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
  %767 = log(%766) /* ty=Tensor[(14, 15, 11), float32] */;
  (%767,)
}

def @func_3764() -> (Tensor[(14, 15, 11), float64],) {
  @func_3762() /* ty=(Tensor[(14, 15, 11), float64],) */
}

def @func_5750(%var_5749: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) {
  %774 = fn (%var_5734: Tensor[(2, 15, 1), float32]) -> (Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) {
    %768 = cast(%var_5734, dtype="float32") /* ty=Tensor[(2, 15, 1), float32] */;
    %769 = cast(meta[relay.Constant][26] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
    %770 = reshape(%769, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %771 = @func_4059(%770) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) */;
    %772 = atanh(%768) /* ty=Tensor[(2, 15, 1), float32] */;
    %773 = %771.1;
    (%772, %773, meta[relay.Constant][26] /* ty=Tensor[(825), int16] */)
  };
  %774(%var_5749) /* ty=(Tensor[(2, 15, 1), float32], Tensor[(15, 5, 11), float32], Tensor[(825), int16]) */
}

def @func_9259() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), uint64]) {
  @func_9257() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), uint64]) */
}

def @func_1780(%var_1774: Tensor[(6, 2, 4), uint32], %var_1775: Tensor[(6, 2, 4), uint32]) -> Tensor[(6, 2, 4), uint32] {
  %775 = cast(%var_1775, dtype="uint32") /* ty=Tensor[(6, 2, 4), uint32] */;
  %776 = shape_of(%var_1774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_1774, dtype="uint32") /* ty=Tensor[(6, 2, 4), uint32] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%777, %778) /* ty=Tensor[(6, 2, 4), uint32] */
}

def @func_6446(%var_6440: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64],) {
  %779 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %780 = shape_of(%var_6440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_6440, dtype="float64") /* ty=Tensor[(7, 16, 11), float64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %783 = multiply(%781, %782) /* ty=Tensor[(7, 16, 11), float64] */;
  (%783,)
}

def @func_2005() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %791 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %784 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    %785 = cast(%784, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %786 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %787 = @func_762() /* ty=Tensor[(14, 15, 11), float64] */;
    %788 = sigmoid(%785) /* ty=Tensor[(14, 15, 11), float32] */;
    %789 = %786.0;
    %790 = @func_1307() /* ty=Tensor[(14, 15, 11), float32] */;
    (%787, %788, %789, %790)
  };
  %791() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_8313(%var_8312: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
  %797 = fn (%var_8295: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
    %792 = cast(%var_8295, dtype="int64") /* ty=Tensor[(240), int64] */;
    %793 = reshape(%792, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), int64] */;
    %794 = @func_2174(%793) /* ty=(Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) */;
    %795 = @func_3984() /* ty=Tensor[(14, 15, 11), float32] */;
    %796 = %794.3;
    (%795, %796, %var_8295)
  };
  %797(%var_8312) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) */
}

def @func_438() -> Tensor[(14, 15, 11), float32] {
  %798 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %798.0
}

def @func_8210() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_8208() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_5998() -> Tensor[(14, 15, 11), float64] {
  @func_5996() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_9494(%var_9492: Tensor[(14, 15, 1), float64]) -> (Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(14, 15, 1), float64]) {
  @func_9491(%var_9492) /* ty=(Tensor[(7, 16, 11), float64], Tensor[(4, 308), float64], Tensor[(14, 15, 1), float64]) */
}

def @func_6944(%var_6942: Tensor[(11, 8, 5), float64], %var_6943: Tensor[(11, 8, 5), float64]) -> (Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %808 = fn (%var_6925: Tensor[(11, 8, 5), float64], %var_6926: Tensor[(11, 8, 5), float64]) -> (Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %799 = cast(%var_6926, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
    %800 = shape_of(%var_6925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %801 = cast(%var_6925, dtype="float64") /* ty=Tensor[(11, 8, 5), float64] */;
    %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %803 = @func_1337() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
    %804 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %805 = floor_mod(%801, %802) /* ty=Tensor[(11, 8, 5), float64] */;
    %806 = %803.0;
    %807 = %804.0;
    (%805, %806, %807)
  };
  %808(%var_6942, %var_6943) /* ty=(Tensor[(11, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_247() -> Tensor[(14, 15, 11), float32] {
  %809 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %809.0
}

def @func_8604() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %810 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %811 = @func_7115() /* ty=Tensor[(14, 15, 11), float32] */;
  %812 = %810.1;
  (%811, %812)
}

def @func_4987(%var_4985: Tensor[(9, 1, 10), int8], %var_4986: Tensor[(9, 9, 10), int8]) -> Tensor[(9, 9, 10), bool] {
  @func_4983(%var_4985, %var_4986) /* ty=Tensor[(9, 9, 10), bool] */
}

def @func_872(%var_871: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %828 = fn (%var_839: Tensor[(14, 15, 11), float32]) -> (Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %813 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %814 = %813.0;
    %815 = cast(%var_839, dtype="int16") /* ty=Tensor[(14, 15, 11), int16] */;
    %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %817 = cast(%814, dtype="int16") /* ty=Tensor[(14, 15, 11), int16] */;
    %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %819 = subtract(%817, %818) /* ty=Tensor[(14, 15, 11), int16] */;
    %820 = cast(%var_839, dtype="uint32") /* ty=Tensor[(14, 15, 11), uint32] */;
    %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %822 = cast(%819, dtype="uint32") /* ty=Tensor[(14, 15, 11), uint32] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %824 = bitwise_and(%822, %823) /* ty=Tensor[(14, 15, 11), uint32] */;
    %825 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
    %826 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    %827 = @func_247() /* ty=Tensor[(14, 15, 11), float32] */;
    (%824, %825, %826, %827)
  };
  %828(%var_871) /* ty=(Tensor[(14, 15, 11), uint32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_5047() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_4455() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %837 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %829 = @func_969() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %830 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %831 = @func_3912() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %832 = @func_2882() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64]) */;
    %833 = %829.1;
    %834 = %830.0;
    %835 = %831.0;
    %836 = %832.0;
    (%833, %834, %835, %836)
  };
  %837() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_1446() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
  %838 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %839 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
  %840 = %838.0;
  %841 = %839.1;
  (%840, %841)
}

def @func_1828() -> Tensor[(14, 15, 11), float32] {
  @func_247() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_5384(%var_5379: Tensor[(280), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(4, 14, 5), float32], Tensor[(280), float32]) {
  %842 = @func_3762() /* ty=(Tensor[(14, 15, 11), float64],) */;
  %843 = @func_4852() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %844 = cast(%var_5379, dtype="float32") /* ty=Tensor[(280), float32] */;
  %845 = reshape(%844, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), float32] */;
  %846 = @func_2336(%845) /* ty=(Tensor[(4, 14, 5), float32],) */;
  %847 = @func_3524() /* ty=Tensor[(14, 15, 11), float32] */;
  %848 = %842.0;
  %849 = %843.0;
  %850 = %846.0;
  (%847, %848, %849, %850, %var_5379)
}

def @func_7358() -> (Tensor[(14, 15, 11), float32],) {
  %853 = fn () -> (Tensor[(14, 15, 11), float32],) {
    %851 = @func_5924() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %852 = %851.3;
    (%852,)
  };
  %853() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_9293() -> (Tensor[(4, 11, 8), uint8], Tensor[(14, 15, 11), float32]) {
  %854 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 8), float32] */;
  %855 = acos(%854) /* ty=Tensor[(4, 11, 8), float32] */;
  %856 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 11, 8), float32] */, dtype="uint8") /* ty=Tensor[(4, 11, 8), uint8] */;
  %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%855, dtype="uint8") /* ty=Tensor[(4, 11, 8), uint8] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %860 = @func_449() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %861 = bitwise_and(%858, %859) /* ty=Tensor[(4, 11, 8), uint8] */;
  %862 = %860.0;
  (%861, %862)
}

def @func_2456(%var_2454: Tensor[(3, 2, 7), float64], %var_2455: Tensor[(3, 2, 7), float64]) -> (Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) {
  %870 = fn (%var_2437: Tensor[(3, 2, 7), float64], %var_2438: Tensor[(3, 2, 7), float64]) -> (Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) {
    %863 = cast(%var_2438, dtype="float64") /* ty=Tensor[(3, 2, 7), float64] */;
    %864 = shape_of(%var_2437, dtype="int32") /* ty=Tensor[(3), int32] */;
    %865 = cast(%var_2437, dtype="float64") /* ty=Tensor[(3, 2, 7), float64] */;
    %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %867 = @func_500() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %868 = divide(%865, %866) /* ty=Tensor[(3, 2, 7), float64] */;
    %869 = %867.1;
    (%868, %869)
  };
  %870(%var_2454, %var_2455) /* ty=(Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) */
}

def @func_6449(%var_6447: Tensor[(7, 16, 11), float64]) -> (Tensor[(7, 16, 11), float64],) {
  @func_6446(%var_6447) /* ty=(Tensor[(7, 16, 11), float64],) */
}

def @func_9012() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %874 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
    %871 = @func_969() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %872 = %871.0;
    %873 = @func_3614() /* ty=Tensor[(14, 15, 11), float32] */;
    (%872, %873)
  };
  %874() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_7956(%var_7954: Tensor[(10, 12, 10), int16], %var_7955: Tensor[(10, 12, 10), int16]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float64], Tensor[(9, 15, 2), uint32]) {
  %884 = fn (%var_7931: Tensor[(10, 12, 10), int16], %var_7932: Tensor[(10, 12, 10), int16]) -> (Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float64], Tensor[(9, 15, 2), uint32]) {
    %875 = cast(%var_7932, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
    %876 = shape_of(%var_7931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%var_7931, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %879 = cast(%var_7932, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
    %880 = @func_5608() /* ty=(Tensor[(9, 15, 2), uint32],) */;
    %881 = greater_equal(%877, %878) /* ty=Tensor[(10, 12, 10), bool] */;
    %882 = atanh(%879) /* ty=Tensor[(10, 12, 10), float64] */;
    %883 = %880.0;
    (%881, %882, %883)
  };
  %884(%var_7954, %var_7955) /* ty=(Tensor[(10, 12, 10), bool], Tensor[(10, 12, 10), float64], Tensor[(9, 15, 2), uint32]) */
}

def @func_8566() -> (Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) {
  @func_8564() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) */
}

def @func_9397() -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %889 = fn () -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
    %885 = @func_9309() /* ty=(Tensor[(14, 15, 11), float64],) */;
    %886 = @func_8604() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %887 = %885.0;
    %888 = %886.1;
    (%887, %888)
  };
  %889() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_3985() -> Tensor[(14, 15, 11), float32] {
  %891 = fn () -> Tensor[(14, 15, 11), float32] {
    %890 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %890.0
  };
  %891() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_4013() -> Tensor[(14, 15, 11), float32] {
  @func_4011() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_9812() -> (Tensor[(14, 15, 11), float64],) {
  %892 = @func_8361() /* ty=Tensor[(14, 15, 11), float64] */;
  (%892,)
}

def @func_1501(%var_1488: Tensor[(1, 13, 9), int32], %var_1489: Tensor[(7, 13, 9), int32], %var_1497: Tensor[(7, 13, 9), int32]) -> (Tensor[(7, 13, 9), int32], Tensor[(7, 13, 9), bool]) {
  %893 = cast(%var_1488, dtype="int32") /* ty=Tensor[(1, 13, 9), int32] */;
  %894 = cast(%var_1489, dtype="int32") /* ty=Tensor[(7, 13, 9), int32] */;
  %895 = cast(%var_1497, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %896 = shape_of(%var_1489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%var_1489, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %899 = bitwise_xor(%893, %894) /* ty=Tensor[(7, 13, 9), int32] */;
  %900 = greater(%897, %898) /* ty=Tensor[(7, 13, 9), bool] */;
  (%899, %900)
}

def @func_9915() -> (Tensor[(14, 15, 11), float32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_9913() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_4062(%var_4060: Tensor[(15, 5, 11), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) {
  @func_4059(%var_4060) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) */
}

def @func_2517() -> (Tensor[(14, 15, 11), float32], Tensor[(?, 6, 5), float64]) {
  %901 = @func_747() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %902 = @func_2360() /* ty=Tensor[(1, 6, 5), float32] */;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %904 = sqrt(%903) /* ty=Tensor[(1, 6, 5), float64] */;
  %905 = cast(%904, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %906 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%902, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %909 = %901.0;
  %910 = floor_divide(%907, %908) /* ty=Tensor[(?, 6, 5), float64] */;
  (%909, %910)
}

def @func_8540() -> Tensor[(14, 15, 11), float32] {
  @func_8538() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_501() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
  %927 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) {
    %911 = @func_287() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %912 = %911.1;
    %913 = cast(%912, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %914 = erf(%913) /* ty=Tensor[(14, 15, 11), float32] */;
    %915 = cast(%912, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
    %917 = cast(%914, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %919 = @func_231() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %920 = %919.0;
    %921 = cast(%914, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
    %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(3), int32] */;
    %923 = cast(%920, dtype="int32") /* ty=Tensor[(14, 15, 11), int32] */;
    %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %925 = mod(%917, %918) /* ty=Tensor[(14, 15, 11), float32] */;
    %926 = add(%923, %924) /* ty=Tensor[(14, 15, 11), int32] */;
    (%925, %926)
  };
  %927() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */
}

def @func_5610() -> (Tensor[(9, 15, 2), uint32],) {
  @func_5608() /* ty=(Tensor[(9, 15, 2), uint32],) */
}

def @func_6150() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) {
  %934 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) {
    %928 = cast(meta[relay.Constant][29] /* ty=Tensor[(117), int32] */, dtype="int32") /* ty=Tensor[(117), int32] */;
    %929 = reshape(%928, newshape=[117]) /* ty=Tensor[(117), int32] */;
    %930 = @func_1643(%929) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
    %931 = @func_438() /* ty=Tensor[(14, 15, 11), float32] */;
    %932 = @func_4751() /* ty=Tensor[(14, 15, 11), float32] */;
    %933 = %930.2;
    (%931, %932, %933, meta[relay.Constant][29] /* ty=Tensor[(117), int32] */)
  };
  %934() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) */
}

def @func_9739() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
  %945 = fn () -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) {
    %935 = @func_9097() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), int16]) */;
    %936 = @func_9309() /* ty=(Tensor[(14, 15, 11), float64],) */;
    %937 = @func_4712() /* ty=Tensor[(14, 15, 11), float32] */;
    %938 = cast(%937, dtype="float32") /* ty=Tensor[(14, 15, 11), float32] */;
    %939 = reshape(%938, newshape=[14, 15, 11]) /* ty=Tensor[(14, 15, 11), float32] */;
    %940 = @func_1034(%939) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */;
    %941 = %935.0;
    %942 = @func_5297() /* ty=Tensor[(14, 15, 11), float32] */;
    %943 = %936.0;
    %944 = %940.1;
    (%937, %941, %942, %943, %944)
  };
  %945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32]) */
}

def @func_1418(%var_1416: Tensor[(14, 15, 11), float32]) -> Tensor[(14, 15, 11), bool] {
  @func_1415(%var_1416) /* ty=Tensor[(14, 15, 11), bool] */
}

def @func_608() -> (Tensor[(14, 15, 11), float32],) {
  @func_606() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_3762() -> (Tensor[(14, 15, 11), float64],) {
  %946 = @func_832() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %947 = %946.1;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %949 = acos(%948) /* ty=Tensor[(14, 15, 11), float64] */;
  %950 = @func_3154() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %951 = %950.0;
  %952 = cast(%951, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %953 = shape_of(%949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%949, dtype="float64") /* ty=Tensor[(14, 15, 11), float64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %956 = floor_mod(%954, %955) /* ty=Tensor[(14, 15, 11), float64] */;
  (%956,)
}

def @func_5219(%var_5190: Tensor[(117), int32], %var_5213: Tensor[(240), int64]) -> (Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), uint64], Tensor[(14, 15, 11), float32], Tensor[(240), int64]) {
  %957 = @func_685() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float64], Tensor[(14, 15, 11), int32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %958 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %959 = cast(%var_5190, dtype="int32") /* ty=Tensor[(117), int32] */;
  %960 = reshape(%959, newshape=[117]) /* ty=Tensor[(117), int32] */;
  %961 = @func_1643(%960) /* ty=(Tensor[(14, 15, 11), float64], Tensor[(7, 13, 9), int32], Tensor[(117), int32], Tensor[(819), int32]) */;
  %962 = %961.2;
  %963 = cast(meta[relay.Constant][30] /* ty=Tensor[(117), int32] */, dtype="uint64") /* ty=Tensor[(117), uint64] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(1), int32] */;
  %965 = cast(%962, dtype="uint64") /* ty=Tensor[(117), uint64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %967 = cast(%var_5213, dtype="int64") /* ty=Tensor[(240), int64] */;
  %968 = reshape(%967, newshape=[15, 8, 2]) /* ty=Tensor[(15, 8, 2), int64] */;
  %969 = @func_2174(%968) /* ty=(Tensor[(15, 8, 2), uint8], Tensor[(15, 8, 2), float64], Tensor[(15, 8, 2), uint16], Tensor[(14, 15, 11), float32]) */;
  %970 = %957.5;
  %971 = %958.0;
  %972 = subtract(%965, %966) /* ty=Tensor[(117), uint64] */;
  %973 = %969.3;
  (%970, %971, %var_5190, %972, %973, %var_5213)
}

def @func_6302(%var_6295: Tensor[(825), int16]) -> (Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float64], Tensor[(825), int16]) {
  %974 = @func_1365() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %975 = cast(%var_6295, dtype="int16") /* ty=Tensor[(825), int16] */;
  %976 = reshape(%975, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %977 = @func_4059(%976) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(15, 5, 11), float32], Tensor[(15, 5, 11), float64]) */;
  %978 = %974.0;
  %979 = %977.2;
  (%978, %979, %var_6295)
}

def @func_7514() -> (Tensor[(14, 15, 11), float32], Tensor[(3, 2, 7), float64], Tensor[(42), float64]) {
  %980 = @func_1248() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %981 = cast(meta[relay.Constant][31] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %982 = cast(meta[relay.Constant][31] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %983 = reshape(%981, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %984 = reshape(%982, newshape=[3, 2, 7]) /* ty=Tensor[(3, 2, 7), float64] */;
  %985 = @func_2453(%983, %984) /* ty=(Tensor[(3, 2, 7), float64], Tensor[(14, 15, 11), int32]) */;
  %986 = %980.0;
  %987 = %985.0;
  (%986, %987, meta[relay.Constant][31] /* ty=Tensor[(42), float64] */)
}

def @func_8564() -> (Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float32], Tensor[(80), bool], Tensor[(240), float32]) {
  %988 = @func_2062() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %989 = cast(meta[relay.Constant][32] /* ty=Tensor[(80), bool] */, dtype="bool") /* ty=Tensor[(80), bool] */;
  %990 = cast(meta[relay.Constant][32] /* ty=Tensor[(80), bool] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %991 = cast(meta[relay.Constant][33] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %992 = reshape(%989, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), bool] */;
  %993 = reshape(%990, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
  %994 = reshape(%991, newshape=[8, 6, 5]) /* ty=Tensor[(8, 6, 5), float32] */;
  %995 = @func_3115(%992, %993, %994) /* ty=(Tensor[(2, 8, 5), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), bool], Tensor[(14, 15, 11), float32], Tensor[(8, 6, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(2, 8, 5), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %996 = %988.0;
  %997 = %995.0;
  (%996, %997, meta[relay.Constant][32] /* ty=Tensor[(80), bool] */, meta[relay.Constant][33] /* ty=Tensor[(240), float32] */)
}

def @func_7116() -> Tensor[(14, 15, 11), float32] {
  %999 = fn () -> Tensor[(14, 15, 11), float32] {
    %998 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %998.0
  };
  %999() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3789() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_3787() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_10028(%var_10026: Tensor[(10, 16, 10), float32]) -> (Tensor[(14, 15, 11), float32], Tensor[(10, 16, 10), float32]) {
  @func_10025(%var_10026) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(10, 16, 10), float32]) */
}

def @func_4322(%var_4320: Tensor[(1760), int64]) -> (Tensor[(14, 15, 11), float32], Tensor[(16, 10, 11), bool], Tensor[(1760), int64]) {
  @func_4319(%var_4320) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(16, 10, 11), bool], Tensor[(1760), int64]) */
}

def @func_4642() -> (Tensor[(14, 15, 11), float32],) {
  @func_4640() /* ty=(Tensor[(14, 15, 11), float32],) */
}

def @func_6635() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %1000 = @func_4945() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %1001 = @func_6149() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(117), int32], Tensor[(117), int32]) */;
  %1002 = @func_1764() /* ty=(Tensor[(14, 15, 11), float32],) */;
  %1003 = %1000.0;
  %1004 = %1001.0;
  %1005 = %1002.0;
  (%1003, %1004, %1005)
}

def @func_9444() -> (Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  @func_9442() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_6070(%var_6069: Tensor[(80), bool]) -> (Tensor[(14, 15, 11), float32], Tensor[(80), bool], Tensor[(7, 9, 13), float32], Tensor[(14, 15, 11), float32]) {
  %1016 = fn (%var_6030: Tensor[(80), bool]) -> (Tensor[(14, 15, 11), float32], Tensor[(80), bool], Tensor[(7, 9, 13), float32], Tensor[(14, 15, 11), float32]) {
    %1006 = @func_5045() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
    %1007 = cast(%var_6030, dtype="bool") /* ty=Tensor[(80), bool] */;
    %1008 = reshape(%1007, newshape=[80]) /* ty=Tensor[(80), bool] */;
    %1009 = @func_5572(%1008) /* ty=(Tensor[(7, 9, 13), float32], Tensor[(2, 8, 5), float64], Tensor[(80), bool], Tensor[(240), float32]) */;
    %1010 = %1009.0;
    %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(7, 9, 13), float32] */;
    %1012 = @func_1446() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), int32]) */;
    %1013 = %1006.0;
    %1014 = cos(%1011) /* ty=Tensor[(7, 9, 13), float32] */;
    %1015 = %1012.0;
    (%1013, %var_6030, %1014, %1015)
  };
  %1016(%var_6069) /* ty=(Tensor[(14, 15, 11), float32], Tensor[(80), bool], Tensor[(7, 9, 13), float32], Tensor[(14, 15, 11), float32]) */
}

def @func_7325() -> Tensor[(14, 15, 11), float32] {
  %1018 = fn () -> Tensor[(14, 15, 11), float32] {
    %1017 = @func_4640() /* ty=(Tensor[(14, 15, 11), float32],) */;
    %1017.0
  };
  %1018() /* ty=Tensor[(14, 15, 11), float32] */
}

def @func_3275() -> Tensor[(14, 15, 11), float64] {
  @func_2245() /* ty=Tensor[(14, 15, 11), float64] */
}

def @func_9913() -> (Tensor[(14, 15, 11), float32], Tensor[(42), float64], Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) {
  %1019 = @func_8475() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(7, 9, 13), float32]) */;
  %1020 = @func_2928() /* ty=(Tensor[(14, 15, 11), float64], Tensor[(42), float64], Tensor[(14, 15, 11), float32]) */;
  %1021 = @func_3341() /* ty=(Tensor[(14, 15, 11), float32], Tensor[(14, 15, 11), float32]) */;
  %1022 = %1019.0;
  %1023 = %1020.1;
  %1024 = %1021.0;
  %1025 = @func_1153() /* ty=Tensor[(14, 15, 11), float32] */;
  (%1022, %1023, %1024, %1025)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen468/build/output.py:3464: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen468/build/output.py", line 3469, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(288) tvmgen_default_fused_cast_cast_reshape_equal_kernel0(signed char* __restrict__ T_equal, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) == ((bool)placeholder1[(((int)threadIdx.x))])));
}

extern "C" __global__ void __launch_bounds__(288) tvmgen_default_fused_cast_cast_reshape_power_kernel0(float* __restrict__ T_power, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_power[(((int)threadIdx.x))] = powf(((float)placeholder[(((int)threadIdx.x))]), ((float)placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


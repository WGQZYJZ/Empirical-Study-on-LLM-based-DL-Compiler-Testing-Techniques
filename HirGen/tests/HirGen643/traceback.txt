==========mod==========
#[version = "0.0.5"]
def @func_9678(%var_9648: Tensor[(80), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(308), float32], Tensor[(80), float64], Tensor[(80), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
  %0 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %2 = reshape(%1, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
  %3 = @func_3851(%2) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
  %4 = cast(%var_9648, dtype="float64") /* ty=Tensor[(80), float64] */;
  %5 = reshape(%4, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %6 = @func_6717(%5) /* ty=(Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) */;
  %7 = @func_3721() /* ty=Tensor[(9, 11, 12), bool] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  %9 = exp(%8) /* ty=Tensor[(9, 11, 12), float32] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %11 = atanh(%10) /* ty=Tensor[(9, 11, 12), float64] */;
  %12 = cast(%9, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = @func_6956() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %17 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %18 = %0.0;
  %19 = %3.0;
  %20 = %6.2;
  %21 = equal(%14, %15) /* ty=Tensor[(9, 11, 12), bool] */;
  %22 = %16.0;
  %23 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
  %24 = @func_7074() /* ty=Tensor[(2, 14, 1), float64] */;
  %25 = %17.1;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(308), float32] */, %20, %var_9648, %21, %22, %23, %24, %25)
}

def @func_10137() -> (Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
  %26 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %27 = @func_6779() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) */;
  %28 = %27.2;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(3, 4, 7), float64] */;
  %30 = reshape(%29, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %31 = @func_8668(%30) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) */;
  %32 = @func_6075() /* ty=Tensor[(2, 14, ?), int8] */;
  %33 = %26.2;
  %34 = %31.2;
  (%32, %33, %28, %34)
}

def @func_4520() -> Tensor[(9, 11, 12), float32] {
  %35 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  acos(%36) /* ty=Tensor[(9, 11, 12), float32] */
}

def @func_4230() -> (Tensor[(9, 11, 12), bool],) {
  %37 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %38 = %37.0;
  (%38,)
}

def @func_5686() -> Tensor[(9, 11, 12), float64] {
  %39 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
  %39.0
}

def @func_7895() -> (Tensor[(2, 14, 1), float32],) {
  %40 = @func_6843() /* ty=Tensor[(2, 14, 1), float32] */;
  (%40,)
}

def @func_6116() -> Tensor[(9, 11, 12), bool] {
  %41 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %41.1
}

def @func_2016() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
  %42 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %43 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %44 = %42.0;
  %45 = %43.0;
  (%44, %45)
}

def @func_314(%var_310: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64],) {
  %46 = cast(%var_310, dtype="float64") /* ty=Tensor[(16, 8, 16), float64] */;
  %47 = exp(%46) /* ty=Tensor[(16, 8, 16), float64] */;
  (%47,)
}

def @func_9103(%var_9068: Tensor[(3, 10, 15), int32]) -> (Tensor[(3, 10, 15), int32], Tensor[(3, 10, 15), bool], Tensor[(9, 11, 12), bool], Tensor[(350), float32], Tensor[(80), float64]) {
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 10, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 10, 15), int32] */;
  %49 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%var_9068, dtype="int32") /* ty=Tensor[(3, 10, 15), int32] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %53 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_9068, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %57 = reshape(%56, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %58 = @func_4136(%57) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %59 = left_shift(%50, %51) /* ty=Tensor[(3, 10, 15), int32] */;
  %60 = less_equal(%54, %55) /* ty=Tensor[(3, 10, 15), bool] */;
  %61 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %62 = %58.3;
  (%59, %60, %61, %62, meta[relay.Constant][3] /* ty=Tensor[(80), float64] */)
}

def @func_9167(%var_9156: Tensor[(9, 11, 12), bool]) -> Tensor[(9, 11, 12), int32] {
  %63 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %64 = cast(%var_9156, dtype="int32") /* ty=Tensor[(9, 11, 12), int32] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="int32") /* ty=Tensor[(9, 11, 12), int32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%66, %67) /* ty=Tensor[(9, 11, 12), int32] */
}

def @func_9124(%var_9110: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), float64], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
  %68 = cast(%var_9110, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %71 = reshape(%69, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %72 = reshape(%70, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %73 = log10(%68) /* ty=Tensor[(13, 5, 3), float64] */;
  %74 = @func_3369(%71, %72) /* ty=Tensor[(9, 15, 6), float64] */;
  (%73, %74, meta[relay.Constant][4] /* ty=Tensor[(810), float64] */)
}

def @func_6945() -> (Tensor[(2, 14, 16), float64],) {
  %75 = @func_6110() /* ty=Tensor[(2, 14, 1), float32] */;
  %76 = cast(%75, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 14, 16), float32] */, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
  %78 = floor_divide(%76, %77) /* ty=Tensor[(2, 14, 16), float64] */;
  (%78,)
}

def @func_6667() -> (Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %79 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %80 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %81 = %79.2;
  %82 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  (%80, %81, %82)
}

def @func_4136(%var_4111: Tensor[(4, 10, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) {
  %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %84 = reshape(%83, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %85 = @func_2507(%84) /* ty=(Tensor[(5, 7, 10), uint8],) */;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %87 = reshape(%86, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
  %88 = @func_1104(%87) /* ty=Tensor[(4, 10, 2), float64] */;
  %89 = cast(%var_4111, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%88, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %93 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
  %94 = %85.0;
  %95 = bitwise_or(%91, %92) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%93, meta[relay.Constant][6] /* ty=Tensor[(20), float64] */, %94, meta[relay.Constant][7] /* ty=Tensor[(350), float32] */, %95)
}

def @func_5629() -> (Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
  %96 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %98 = reshape(%97, newshape=[3, 4, 7]) /* ty=Tensor[(3, 4, 7), float64] */;
  %99 = @func_3269(%98) /* ty=(Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) */;
  %100 = %96.0;
  %101 = %99.0;
  (%100, %101, meta[relay.Constant][8] /* ty=Tensor[(84), float64] */)
}

def @func_9955() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32]) {
  %102 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %103 = %102.2;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(2, 14, ?), float32] */;
  %105 = @func_7722() /* ty=Tensor[(5, 7, 10), float32] */;
  %106 = log(%104) /* ty=Tensor[(2, 14, ?), float32] */;
  (%105, %106)
}

def @func_5152() -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
  %107 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
  %108 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %109 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
  %110 = %107.1;
  %111 = %108.1;
  (%109, %110, %111)
}

def @func_9595(%var_9569: Tensor[(126), float32], %var_9571: Tensor[(2048), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(13, 4, 9), uint64], Tensor[(468), float64], Tensor[(196), float32], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), float32]) {
  %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %113 = cast(meta[relay.Constant][9] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %114 = reshape(%112, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), float64] */;
  %115 = reshape(%113, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), float64] */;
  %116 = @func_8894(%114, %115) /* ty=(Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) */;
  %117 = cast(%var_9569, dtype="float32") /* ty=Tensor[(126), float32] */;
  %118 = cast(meta[relay.Constant][10] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %119 = cast(%var_9571, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %120 = reshape(%117, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %121 = reshape(%118, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
  %122 = reshape(%119, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %123 = @func_1385(%120, %121, %122) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
  %124 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %125 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %126 = %116.1;
  %127 = %123.9;
  %128 = %124.0;
  %129 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  (%125, %126, meta[relay.Constant][9] /* ty=Tensor[(468), float64] */, %127, %var_9569, meta[relay.Constant][10] /* ty=Tensor[(1188), int8] */, %var_9571, %128, %129)
}

def @func_578(%var_548: Tensor[(9, 1, 14), float32], %var_549: Tensor[(9, 8, 14), float32], %var_559: Tensor[(350), float64]) -> (Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) {
  %130 = cast(%var_548, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %131 = cast(%var_549, dtype="float32") /* ty=Tensor[(9, 8, 14), float32] */;
  %132 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %133 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %134 = reshape(%132, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %135 = reshape(%133, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %136 = @func_449(%134, %135) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %137 = cast(%var_549, dtype="float64") /* ty=Tensor[(9, 8, 14), float64] */;
  %138 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %139 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %140 = reshape(%138, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %141 = reshape(%139, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %142 = @func_449(%140, %141) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %143 = mod(%130, %131) /* ty=Tensor[(9, 8, 14), float32] */;
  %144 = %136.5;
  %145 = acosh(%137) /* ty=Tensor[(9, 8, 14), float64] */;
  %146 = %142.1;
  (%143, %144, %var_559, %145, %146)
}

def @func_5536() -> (Tensor[(350), float64],) {
  %147 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %148 = %147.0;
  (%148,)
}

def @func_7561() -> (Tensor[(9, 11, 12), bool], Tensor[(350), float64]) {
  %149 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %150 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %151 = %149.0;
  (%150, %151)
}

def @func_6733() -> (Tensor[(2, 14, 1), float64],) {
  %152 = @func_4703() /* ty=Tensor[(2, 14, 1), float64] */;
  (%152,)
}

def @func_903() -> (Tensor[(2, 14, 1), float64],) {
  %153 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %154 = cast(%153, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %155 = cos(%154) /* ty=Tensor[(2, 14, 1), float64] */;
  (%155,)
}

def @func_7399(%var_7394: Tensor[(1, 80), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32], Tensor[(4, 10, 2), uint64], Tensor[(1, 80), float64]) {
  %156 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %157 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %158 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %159 = cast(%var_7394, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %160 = reshape(%159, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %161 = @func_4136(%160) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %162 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %163 = %156.1;
  %164 = %157.0;
  %165 = %158.0;
  %166 = %161.4;
  (%162, %163, %164, %165, %166, %var_7394)
}

def @func_8109(%var_8064: Tensor[(308, 1), float32], %var_8095: Tensor[(308, 8), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2), int32], Tensor[(308, 8), uint64], Tensor[(56, 2048), uint8]) {
  %167 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %168 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %169 = cast(%var_8064, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %170 = reshape(%169, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
  %171 = @func_3851(%170) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
  %172 = cast(%var_8064, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %173 = reshape(%172, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
  %174 = @func_3851(%173) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
  %175 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %176 = %175.0;
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(56, 1), float32] */, dtype="float32") /* ty=Tensor[(56, 1), float32] */;
  %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %179 = reshape(%177, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
  %180 = reshape(%178, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
  %181 = @func_2686(%179, %180) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
  %182 = %181.0;
  %183 = cast(%176, dtype="int32") /* ty=Tensor[(2, 14, 1), int32] */;
  %184 = cast(%182, dtype="int32") /* ty=Tensor[(2, 14, 2), int32] */;
  %185 = cast(%var_8064, dtype="uint64") /* ty=Tensor[(308, 1), uint64] */;
  %186 = cast(%var_8095, dtype="uint64") /* ty=Tensor[(308, 8), uint64] */;
  %187 = cast(meta[relay.Constant][12] /* ty=Tensor[(2048), float64] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
  %188 = cast(meta[relay.Constant][11] /* ty=Tensor[(56, 1), float32] */, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
  %189 = %167.0;
  %190 = %168.1;
  %191 = %171.0;
  %192 = %174.0;
  %193 = add(%183, %184) /* ty=Tensor[(2, 14, 2), int32] */;
  %194 = subtract(%185, %186) /* ty=Tensor[(308, 8), uint64] */;
  %195 = subtract(%187, %188) /* ty=Tensor[(56, 2048), uint8] */;
  (%189, %190, %191, %192, %193, %194, %195)
}

def @func_9969() -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(14, 4), float32], Tensor[(5, 7, 10), bool], Tensor[(350), float32], Tensor[(5, 7, 10), bool]) {
  %196 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 4), float32] */;
  %198 = reshape(%197, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %199 = @func_7636(%198) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) */;
  %200 = cast(meta[relay.Constant][14] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %201 = reshape(%200, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %202 = @func_1599(%201) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) */;
  %203 = cast(meta[relay.Constant][14] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %204 = reshape(%203, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %205 = @func_1599(%204) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) */;
  %206 = %196.0;
  %207 = %199.0;
  %208 = %202.1;
  %209 = %205.1;
  (%206, %207, meta[relay.Constant][13] /* ty=Tensor[(14, 4), float32] */, %208, meta[relay.Constant][14] /* ty=Tensor[(350), float32] */, %209)
}

def @func_10469() -> (Tensor[(2, 14, 1), float64], Tensor[(910), uint16], Tensor[(2, 14, ?), uint8], Tensor[(2, 14, 1), float32]) {
  %210 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %211 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %212 = cast(meta[relay.Constant][15] /* ty=Tensor[(910), uint16] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(910), uint16] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %214 = reshape(%212, newshape=[5, 14, 13]) /* ty=Tensor[(5, 14, 13), uint16] */;
  %215 = reshape(%213, newshape=[5, 14, 13]) /* ty=Tensor[(5, 14, 13), uint16] */;
  %216 = @func_7322(%214, %215) /* ty=(Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) */;
  %217 = %216.2;
  %218 = cast(%217, dtype="uint8") /* ty=Tensor[(2, 14, 1), uint8] */;
  %219 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%211, dtype="uint8") /* ty=Tensor[(2, 14, 1), uint8] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %222 = @func_7895() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %223 = %210.0;
  %224 = add(%220, %221) /* ty=Tensor[(2, 14, ?), uint8] */;
  %225 = %222.0;
  (%223, meta[relay.Constant][15] /* ty=Tensor[(910), uint16] */, %224, %225)
}

def @func_2850(%var_2809: Tensor[(56), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) {
  %226 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %227 = cast(%226, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %228 = cast(%226, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %229 = log10(%228) /* ty=Tensor[(5, 7, 10), float32] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %231 = sinh(%230) /* ty=Tensor[(5, 7, 10), float64] */;
  %232 = cast(%226, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %236 = cast(%var_2809, dtype="float32") /* ty=Tensor[(56), float32] */;
  %237 = cast(meta[relay.Constant][16] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %238 = reshape(%236, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
  %239 = reshape(%237, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
  %240 = @func_2686(%238, %239) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
  %241 = %240.1;
  %242 = cast(meta[relay.Constant][16] /* ty=Tensor[(2048), float64] */, dtype="uint32") /* ty=Tensor[(2048), uint32] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="uint32") /* ty=Tensor[(16, 8, 16), uint32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %246 = cast(%229, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %247 = cast(%226, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %248 = reshape(%246, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %249 = reshape(%247, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %250 = @func_449(%248, %249) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %251 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %252 = acosh(%227) /* ty=Tensor[(5, 7, 10), float32] */;
  %253 = less_equal(%234, %235) /* ty=Tensor[(5, 7, 10), bool] */;
  %254 = left_shift(%244, %245) /* ty=Tensor[(16, 8, 16), uint32] */;
  %255 = %250.5;
  %256 = %251.0;
  (%252, %253, %var_2809, %254, %255, %256)
}

def @func_2621() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) {
  %257 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %258 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %259 = %257.1;
  %260 = %258.0;
  (%259, %260)
}

def @func_6502(%var_6488: Tensor[(56), float32]) -> (Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) {
  %261 = cast(meta[relay.Constant][17] /* ty=Tensor[(98, 2), float32] */, dtype="float32") /* ty=Tensor[(98, 2), float32] */;
  %262 = reshape(%261, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %263 = @func_4425(%262) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) */;
  %264 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %265 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %266 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %267 = cast(%var_6488, dtype="float32") /* ty=Tensor[(56), float32] */;
  %268 = reshape(%267, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %269 = @func_2850(%268) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) */;
  %270 = %269.2;
  %271 = cast(%266, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %272 = cast(%270, dtype="bool") /* ty=Tensor[(56), bool] */;
  %273 = %263.2;
  %274 = @func_4448() /* ty=Tensor[(2, 14, 1), float64] */;
  %275 = %264.3;
  %276 = %265.1;
  %277 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  %278 = less_equal(%271, %272) /* ty=Tensor[(2, 14, 56), bool] */;
  (%273, meta[relay.Constant][17] /* ty=Tensor[(98, 2), float32] */, %274, %275, %276, %var_6488, %277, %278)
}

def @func_5128(%var_5100: Tensor[(5, 7, 10), float32]) -> (Tensor[(2, 14, ?), float32], Tensor[(5, 7, 10), uint8], Tensor[(9, 11, 12), bool]) {
  %279 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %280 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %281 = %280.0;
  %282 = cast(%var_5100, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %286 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %287 = %279.0;
  %288 = bitwise_and(%284, %285) /* ty=Tensor[(5, 7, 10), uint8] */;
  %289 = %286.1;
  (%287, %288, %289)
}

def @func_9901() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), int64]) {
  %290 = @func_4585() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %291 = %290.2;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %293 = reshape(%292, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %294 = @func_1903(%293) /* ty=(Tensor[(5, 7, 10), int64],) */;
  %295 = %294.0;
  (%291, %295)
}

def @func_7074() -> Tensor[(2, 14, 1), float64] {
  @func_5374() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_1150() -> (Tensor[(2, 14, 1), float64],) {
  %296 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %297 = %296.0;
  (%297,)
}

def @func_1903(%var_1896: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), int64],) {
  %298 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %299 = %298.0;
  %300 = cast(%var_1896, dtype="int64") /* ty=Tensor[(5, 7, 10), int64] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%299, dtype="int64") /* ty=Tensor[(5, 7, 10), int64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %304 = left_shift(%302, %303) /* ty=Tensor[(5, 7, 10), int64] */;
  (%304,)
}

def @func_4755() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) {
  %305 = cast(meta[relay.Constant][18] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %306 = reshape(%305, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %307 = @func_4425(%306) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) */;
  %308 = @func_3468() /* ty=Tensor[(2, 14, 1), float64] */;
  %309 = %307.1;
  (%308, %309, meta[relay.Constant][18] /* ty=Tensor[(196), float32] */)
}

def @func_6843() -> Tensor[(2, 14, 1), float32] {
  %310 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %310.0
}

def @func_8012() -> (Tensor[(9, 11, 12), float32], Tensor[(5, 7, 10), float64]) {
  %311 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  %313 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %315 = cosh(%312) /* ty=Tensor[(9, 11, 12), float32] */;
  %316 = erf(%314) /* ty=Tensor[(5, 7, 10), float64] */;
  (%315, %316)
}

def @func_9038() -> (Tensor[(2, 14, 1), float64],) {
  %317 = @func_7269() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %318 = %317.0;
  (%318,)
}

def @func_6808(%var_6797: Tensor[(175, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) {
  %319 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %320 = cast(%var_6797, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %321 = %319.0;
  %322 = cast(%321, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %323 = reshape(%320, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %324 = reshape(%322, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %325 = @func_1051(%323, %324) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %326 = %325.6;
  (%321, %326, %var_6797)
}

def @func_4425(%var_4329: Tensor[(196), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) {
  %327 = cast(%var_4329, dtype="float32") /* ty=Tensor[(196), float32] */;
  %328 = reshape(%327, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %329 = @func_966(%328) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %331 = reshape(%330, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %332 = @func_2723(%331) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %333 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %334 = %333.0;
  %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(2048), float64] */, dtype="uint16") /* ty=Tensor[(2048), uint16] */;
  %336 = cast(%334, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %337 = bitwise_xor(%335, %336) /* ty=Tensor[(2, 14, 2048), uint16] */;
  %338 = cast(%334, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %339 = cast(%337, dtype="bool") /* ty=Tensor[(2, 14, 2048), bool] */;
  %340 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %341 = %329.0;
  %342 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %343 = %332.0;
  %344 = less_equal(%338, %339) /* ty=Tensor[(2, 14, 2048), bool] */;
  (%340, %341, %var_4329, %342, %343, %344)
}

def @func_2710() -> Tensor[(2, 14, 1), float64] {
  %345 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %345.0
}

def @func_449(%var_358: Tensor[(5, 7, 10), float64], %var_412: Tensor[(5, 7, 10), float64]) -> (Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) {
  %346 = cast(meta[relay.Constant][20] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %347 = reshape(%346, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %348 = @func_151(%347) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %349 = cast(%var_358, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %350 = exp(%349) /* ty=Tensor[(5, 7, 10), float64] */;
  %351 = cast(%var_412, dtype="uint64") /* ty=Tensor[(5, 7, 10), uint64] */;
  %352 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%350, dtype="uint64") /* ty=Tensor[(5, 7, 10), uint64] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %355 = %348.0;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %357 = reshape(%356, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %358 = @func_151(%357) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %359 = cast(%350, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %360 = %358.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %362 = reshape(%361, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %363 = @func_151(%362) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %364 = subtract(%353, %354) /* ty=Tensor[(5, 7, 10), uint64] */;
  %365 = log(%359) /* ty=Tensor[(5, 7, 10), float32] */;
  %366 = %363.0;
  (%355, meta[relay.Constant][20] /* ty=Tensor[(196), float32] */, %364, %360, %365, %366)
}

def @func_7722() -> Tensor[(5, 7, 10), float32] {
  @func_1751() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_8756(%var_8746: Tensor[(350), bool]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(126, 1), float32], Tensor[(2, 14, 1), float32]) {
  %367 = cast(%var_8746, dtype="bool") /* ty=Tensor[(350), bool] */;
  %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %369 = reshape(%367, newshape=[350]) /* ty=Tensor[(350), bool] */;
  %370 = reshape(%368, newshape=[63, 2]) /* ty=Tensor[(63, 2), float32] */;
  %371 = @func_5820(%369, %370) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) */;
  %372 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %373 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %374 = %371.0;
  %375 = %372.0;
  (%373, %374, %var_8746, meta[relay.Constant][21] /* ty=Tensor[(126, 1), float32] */, %375)
}

def @func_2400() -> (Tensor[(2, 14, 1), float32],) {
  %376 = @func_2349() /* ty=Tensor[(2, 14, 1), float32] */;
  (%376,)
}

def @func_6286() -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16], Tensor[(9, 11, 12), bool], Tensor[(56, 1), float32]) {
  %377 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %380 = acos(%379) /* ty=Tensor[(2, 14, 1), float32] */;
  %381 = cast(%378, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%380, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %385 = cast(meta[relay.Constant][22] /* ty=Tensor[(56, 1), float32] */, dtype="float32") /* ty=Tensor[(56, 1), float32] */;
  %386 = reshape(%385, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %387 = @func_4960(%386) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) */;
  %388 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
  %389 = bitwise_xor(%383, %384) /* ty=Tensor[(2, 14, ?), int16] */;
  %390 = %387.0;
  (%388, %389, %390, meta[relay.Constant][22] /* ty=Tensor[(56, 1), float32] */)
}

def @func_7235() -> (Tensor[(2, 14, 1), float64],) {
  %391 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %392 = %391.2;
  (%392,)
}

def @func_1510() -> Tensor[(5, 7, 10), float32] {
  %393 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %393.0
}

def @func_4960(%var_4951: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) {
  %394 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
  %395 = cast(%var_4951, dtype="float32") /* ty=Tensor[(56), float32] */;
  %396 = cast(meta[relay.Constant][24] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %397 = reshape(%395, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
  %398 = reshape(%396, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
  %399 = @func_2686(%397, %398) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
  %400 = cast(meta[relay.Constant][23] /* ty=Tensor[(196, 1), float32] */, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
  %401 = reshape(%400, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %402 = @func_966(%401) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %403 = %402.0;
  %404 = cast(%var_4951, dtype="float64") /* ty=Tensor[(56), float64] */;
  %405 = cast(%403, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %406 = %394.1;
  %407 = %399.2;
  %408 = mod(%404, %405) /* ty=Tensor[(2, 14, 56), float64] */;
  (%406, meta[relay.Constant][23] /* ty=Tensor[(196, 1), float32] */, %407, meta[relay.Constant][24] /* ty=Tensor[(2048), float64] */, %408)
}

def @func_2057() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
  %409 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %411 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %413 = cast(meta[relay.Constant][25] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %414 = reshape(%412, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %415 = reshape(%413, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %416 = @func_1051(%414, %415) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %417 = acosh(%410) /* ty=Tensor[(2, 14, 1), float64] */;
  %418 = %416.5;
  (%411, %417, %418, meta[relay.Constant][25] /* ty=Tensor[(1188), int8] */)
}

def @func_6717(%var_6700: Tensor[(80), float64]) -> (Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) {
  %419 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
  %420 = cast(%var_6700, dtype="float64") /* ty=Tensor[(80), float64] */;
  %421 = reshape(%420, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %422 = @func_4136(%421) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %423 = cast(meta[relay.Constant][26] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %424 = cast(meta[relay.Constant][26] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %425 = reshape(%423, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %426 = reshape(%424, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %427 = @func_449(%425, %426) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %428 = %419.0;
  %429 = %422.1;
  %430 = %427.2;
  (%428, %429, %var_6700, %430, meta[relay.Constant][26] /* ty=Tensor[(350), float64] */)
}

def @func_6956() -> (Tensor[(2, 14, 1), float32],) {
  %431 = @func_6110() /* ty=Tensor[(2, 14, 1), float32] */;
  (%431,)
}

def @func_8734() -> Tensor[(2, 14, 1), float32] {
  %432 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %432.0
}

def @func_5044() -> (Tensor[(350), float64],) {
  %433 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %434 = %433.2;
  (%434,)
}

def @func_10068() -> Tensor[(350), float64] {
  %435 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %436 = %435.2;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(350), float64] */;
  asinh(%437) /* ty=Tensor[(350), float64] */
}

def @func_4703() -> Tensor[(2, 14, 1), float64] {
  %438 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %438.0
}

def @func_3202(%var_3185: Tensor[(350), float64]) -> (Tensor[(1188), int8], Tensor[(350), float64], Tensor[(9, 11, 12), float32]) {
  %439 = cast(%var_3185, dtype="float64") /* ty=Tensor[(350), float64] */;
  %440 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %441 = %440.2;
  %442 = cast(%441, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %443 = reshape(%439, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %444 = reshape(%442, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %445 = @func_1051(%443, %444) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %446 = cast(%441, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  %447 = %445.6;
  %448 = tan(%446) /* ty=Tensor[(9, 11, 12), float32] */;
  (%447, %var_3185, %448)
}

def @func_6169() -> (Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) {
  %449 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int8") /* ty=Tensor[(8, 5, 5), int8] */;
  %450 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int8") /* ty=Tensor[(8, 5, 5), int8] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %453 = cast(meta[relay.Constant][29] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %454 = reshape(%453, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %455 = @func_966(%454) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %456 = cast(meta[relay.Constant][30] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %457 = reshape(%456, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %458 = @func_2723(%457) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %459 = right_shift(%451, %452) /* ty=Tensor[(8, 5, 5), int8] */;
  %460 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  %461 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %462 = %455.1;
  %463 = %458.0;
  (%459, %460, %461, %462, meta[relay.Constant][29] /* ty=Tensor[(196), float32] */, %463, meta[relay.Constant][30] /* ty=Tensor[(2048), float64] */)
}

def @func_2723(%var_2719: Tensor[(2048), float64]) -> (Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) {
  %464 = cast(%var_2719, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %465 = reshape(%464, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %466 = @func_314(%465) /* ty=(Tensor[(16, 8, 16), float64],) */;
  %467 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %468 = %466.0;
  (%467, %468, %var_2719)
}

def @func_9339() -> (Tensor[(9, 11, 12), bool],) {
  %469 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %470 = %469.0;
  (%470,)
}

def @func_1599(%var_1589: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) {
  %471 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %472 = cast(%var_1589, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = cast(%var_1589, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %477 = shape_of(%471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%471, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = not_equal(%474, %475) /* ty=Tensor[(5, 7, 10), bool] */;
  %481 = equal(%478, %479) /* ty=Tensor[(5, 7, 10), bool] */;
  (%480, %481)
}

def @func_1890() -> (Tensor[(2, 14, 1), float64],) {
  %482 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_4585() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %484 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %486 = cast(%484, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %487 = reshape(%485, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %488 = reshape(%486, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %489 = @func_449(%487, %488) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %490 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
  %491 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %492 = %489.4;
  %493 = %490.0;
  %494 = %491.0;
  (%484, %492, %493, %494)
}

def @func_3369(%var_3363: Tensor[(9, 15, 6), float64], %var_3364: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
  %495 = cast(%var_3364, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
  %496 = shape_of(%var_3363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_3363, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  multiply(%497, %498) /* ty=Tensor[(9, 15, 6), float64] */
}

def @func_4999() -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %499 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %500 = @func_4665() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) */;
  %501 = @func_1890() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %502 = %499.0;
  %503 = %500.1;
  %504 = %501.0;
  (%502, %503, %504)
}

def @func_1385(%var_1309: Tensor[(126), float32], %var_1314: Tensor[(9, 132), int8], %var_1369: Tensor[(2048), float64]) -> (Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) {
  %505 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %506 = cast(%505, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %507 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
  %508 = cast(%var_1309, dtype="float32") /* ty=Tensor[(126), float32] */;
  %509 = cast(meta[relay.Constant][32] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %510 = cast(meta[relay.Constant][33] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %511 = reshape(%508, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %512 = reshape(%509, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %513 = reshape(%510, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %514 = @func_578(%511, %512, %513) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %515 = cast(meta[relay.Constant][33] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %516 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %517 = reshape(%515, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %518 = reshape(%516, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %519 = @func_1051(%517, %518) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %520 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %521 = cast(meta[relay.Constant][34] /* ty=Tensor[(196), float32] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %522 = sin(%521) /* ty=Tensor[(196), float64] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(196), float32] */;
  %524 = reshape(%523, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %525 = @func_966(%524) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %526 = cast(%522, dtype="int8") /* ty=Tensor[(196), int8] */;
  %527 = cast(%505, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %528 = cast(meta[relay.Constant][34] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %529 = reshape(%528, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %530 = @func_151(%529) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %531 = %530.0;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %533 = reshape(%532, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %534 = @func_966(%533) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %535 = cast(%522, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %536 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%531, dtype="uint32") /* ty=Tensor[(7, 2, 14), uint32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %539 = cast(%var_1369, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %540 = reshape(%539, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %541 = @func_314(%540) /* ty=(Tensor[(16, 8, 16), float64],) */;
  %542 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %543 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %544 = reshape(%542, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %545 = reshape(%543, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %546 = @func_671(%544, %545) /* ty=(Tensor[(9, 11, 12), bool],) */;
  %547 = cast(meta[relay.Constant][33] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %548 = %546.0;
  %549 = cast(%548, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %550 = reshape(%547, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %551 = reshape(%549, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %552 = @func_1051(%550, %551) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %553 = equal(%506, %507) /* ty=Tensor[(2, 14, 15), bool] */;
  %554 = %514.0;
  %555 = %519.2;
  %556 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %557 = %520.0;
  %558 = %525.2;
  %559 = multiply(%526, %527) /* ty=Tensor[(2, 14, 196), int8] */;
  %560 = %534.0;
  %561 = right_shift(%537, %538) /* ty=Tensor[(7, 2, 14), uint32] */;
  %562 = %541.0;
  %563 = %552.3;
  (%553, %554, %var_1309, meta[relay.Constant][32] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][33] /* ty=Tensor[(350), float64] */, %555, %var_1314, %556, %557, %558, %559, %560, %561, %562, %var_1369, %548, %563)
}

def @func_5847() -> (Tensor[(126), float32],) {
  %564 = @func_3971() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) */;
  %565 = %564.3;
  (%565,)
}

def @func_6192() -> Tensor[(9, 11, 12), float64] {
  %566 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
  %566.1
}

def @func_1448() -> (Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) {
  %567 = cast(meta[relay.Constant][35] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %568 = cast(meta[relay.Constant][35] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %569 = reshape(%567, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %570 = reshape(%568, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %571 = @func_449(%569, %570) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %572 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %573 = %572.0;
  %574 = cast(%573, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %575 = exp(%574) /* ty=Tensor[(2, 14, 1), float64] */;
  %576 = cast(%573, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %580 = minimum(%578, %579) /* ty=Tensor[(2, 14, ?), float32] */;
  %581 = cast(%573, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="float32") /* ty=Tensor[(2, 14, ?), float32] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %585 = %571.4;
  %586 = floor_mod(%583, %584) /* ty=Tensor[(2, 14, ?), float32] */;
  (%585, meta[relay.Constant][35] /* ty=Tensor[(350), float64] */, %586)
}

def @func_3094() -> Tensor[(5, 7, 10), float32] {
  %587 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %587.0
}

def @func_2266() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
  %588 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %589 = %588.0;
  %590 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  (%589, %590)
}

def @func_1851(%var_1827: Tensor[(4, 10, 2), float64], %var_1837: Tensor[(1, 126), float32], %var_1838: Tensor[(1008), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) {
  %591 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %592 = cast(meta[relay.Constant][36] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %593 = reshape(%592, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
  %594 = @func_1104(%593) /* ty=Tensor[(4, 10, 2), float64] */;
  %595 = cast(%var_1827, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %599 = cast(%var_1837, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %600 = cast(%var_1838, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %601 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %603 = reshape(%599, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %604 = reshape(%600, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %605 = reshape(%602, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %606 = @func_578(%603, %604, %605) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %607 = %591.0;
  %608 = right_shift(%597, %598) /* ty=Tensor[(4, 10, 2), int16] */;
  %609 = %606.3;
  (%607, %601, meta[relay.Constant][36] /* ty=Tensor[(20), float64] */, %608, %609, %var_1837, %var_1838)
}

def @func_3269(%var_3254: Tensor[(3, 4, 7), float64]) -> (Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) {
  %610 = cast(%var_3254, dtype="float64") /* ty=Tensor[(3, 4, 7), float64] */;
  %611 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %612 = acos(%610) /* ty=Tensor[(3, 4, 7), float64] */;
  %613 = %611.0;
  (%612, %613)
}

def @func_4817() -> (Tensor[(2, 14, ?), bool],) {
  %614 = @func_1890() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %615 = %614.0;
  %616 = @func_4755() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) */;
  %617 = %616.1;
  %618 = cast(%617, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %619 = shape_of(%615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%615, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = greater_equal(%620, %621) /* ty=Tensor[(2, 14, ?), bool] */;
  (%622,)
}

def @func_7010(%var_6984: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) {
  %623 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %624 = cast(%var_6984, dtype="float64") /* ty=Tensor[(350), float64] */;
  %625 = cast(meta[relay.Constant][37] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %626 = reshape(%624, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %627 = reshape(%625, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %628 = @func_1051(%626, %627) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %629 = %623.0;
  %630 = %628.5;
  (%629, %630, %var_6984, meta[relay.Constant][37] /* ty=Tensor[(1188), int8] */)
}

def @func_7960() -> (Tensor[(2, 14, 1), float64],) {
  %631 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %632 = %631.0;
  (%632,)
}

def @func_8367() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32]) {
  %633 = @func_2621() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) */;
  %634 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %635 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %636 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %637 = %633.0;
  %638 = %634.0;
  %639 = %635.0;
  %640 = %636.0;
  (%637, %638, %639, %640)
}

def @func_8777() -> (Tensor[(84), float64], Tensor[(5, 7, 10), float32]) {
  %641 = @func_7759() /* ty=(Tensor[(14, 3, 11), float32], Tensor[(84), float64]) */;
  %642 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
  %643 = %641.1;
  %644 = %642.0;
  (%643, %644)
}

def @func_6878() -> (Tensor[(9, 11, 12), float32], Tensor[(2, 14, 350), int16]) {
  %645 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %646 = %645.0;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(350), float64] */;
  %648 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  %649 = cast(%648, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %650 = reshape(%647, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %651 = reshape(%649, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %652 = @func_1051(%650, %651) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %653 = %652.0;
  %654 = cast(%646, dtype="int16") /* ty=Tensor[(350), int16] */;
  %655 = cast(%653, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %656 = multiply(%654, %655) /* ty=Tensor[(2, 14, 350), int16] */;
  (%648, %656)
}

def @func_2122() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
  %657 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %658 = %657.1;
  %659 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  (%658, %659)
}

def @func_2963() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %660 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %662 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %663 = tan(%661) /* ty=Tensor[(5, 7, 10), float32] */;
  %664 = %662.0;
  (%663, %664)
}

def @func_2686(%var_2653: Tensor[(2, 14, 2), float32], %var_2665: Tensor[(16, 128), float64]) -> (Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) {
  %665 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %668 = cast(%var_2653, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %669 = cast(%var_2665, dtype="float64") /* ty=Tensor[(16, 128), float64] */;
  %670 = reshape(%669, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %671 = @func_314(%670) /* ty=(Tensor[(16, 8, 16), float64],) */;
  %672 = divide(%667, %668) /* ty=Tensor[(2, 14, 2), float64] */;
  %673 = %671.0;
  (%672, %673, %var_2665)
}

def @func_671(%var_666: Tensor[(9, 11, 12), int8], %var_667: Tensor[(9, 11, 12), int8]) -> (Tensor[(9, 11, 12), bool],) {
  %674 = cast(%var_667, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
  %675 = shape_of(%var_666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_666, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = greater_equal(%676, %677) /* ty=Tensor[(9, 11, 12), bool] */;
  (%678,)
}

def @func_1751() -> Tensor[(5, 7, 10), float32] {
  %679 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  asinh(%680) /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_7636(%var_7626: Tensor[(56), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) {
  %681 = cast(%var_7626, dtype="float32") /* ty=Tensor[(56), float32] */;
  %682 = reshape(%681, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %683 = @func_6502(%682) /* ty=(Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) */;
  %684 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %685 = %684.0;
  %686 = cast(%685, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %687 = cast(%var_7626, dtype="bool") /* ty=Tensor[(56), bool] */;
  %688 = equal(%686, %687) /* ty=Tensor[(2, 14, 56), bool] */;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(2, 14, 56), float64] */;
  %690 = %683.2;
  %691 = atan(%689) /* ty=Tensor[(2, 14, 56), float64] */;
  (%690, %691)
}

def @func_3721() -> Tensor[(9, 11, 12), bool] {
  @func_3280() /* ty=Tensor[(9, 11, 12), bool] */
}

def @func_7028() -> Tensor[(9, 11, 12), bool] {
  %692 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %692.0
}

def @func_8719() -> (Tensor[(5, 7, 10), float32],) {
  %693 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  (%693,)
}

def @func_3943() -> (Tensor[(9, 11, 12), bool],) {
  %694 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %695 = %694.1;
  (%695,)
}

def @func_8585() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64]) {
  %696 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %697 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_3070() -> Tensor[(2, 14, 1), float64] {
  @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_9722() -> Tensor[(5, 7, 10), float32] {
  @func_1520() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_1104(%var_1097: Tensor[(1, 10, 2), float64]) -> Tensor[(4, 10, 2), float64] {
  %699 = cast(%var_1097, dtype="float64") /* ty=Tensor[(1, 10, 2), float64] */;
  %700 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  floor_mod(%699, %700) /* ty=Tensor[(4, 10, 2), float64] */
}

def @func_2457() -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) {
  %701 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %702 = %701.2;
  %703 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 11, 12), bool] */, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %704 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%702, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %707 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %708 = power(%705, %706) /* ty=Tensor[(9, 11, 12), float64] */;
  (%707, %708)
}

def @func_1520() -> Tensor[(5, 7, 10), float32] {
  @func_1510() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_8894(%var_8874: Tensor[(13, 4, 9), float64], %var_8888: Tensor[(13, 4, 9), float64]) -> (Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) {
  %709 = cast(%var_8874, dtype="float64") /* ty=Tensor[(13, 4, 9), float64] */;
  %710 = cast(%var_8888, dtype="uint64") /* ty=Tensor[(13, 4, 9), uint64] */;
  %711 = shape_of(%var_8874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_8874, dtype="uint64") /* ty=Tensor[(13, 4, 9), uint64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %714 = asin(%709) /* ty=Tensor[(13, 4, 9), float64] */;
  %715 = maximum(%712, %713) /* ty=Tensor[(13, 4, 9), uint64] */;
  (%714, %715)
}

def @func_8444() -> (Tensor[(12, 4, 11), float32], Tensor[(196), float32], Tensor[(7, 2, 14), float64]) {
  %716 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 11), float32] */;
  %717 = cast(meta[relay.Constant][41] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %718 = reshape(%717, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %719 = @func_151(%718) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %720 = %719.0;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(7, 2, 14), float64] */;
  %722 = tan(%716) /* ty=Tensor[(12, 4, 11), float32] */;
  %723 = log10(%721) /* ty=Tensor[(7, 2, 14), float64] */;
  (%722, meta[relay.Constant][41] /* ty=Tensor[(196), float32] */, %723)
}

def @func_7759() -> (Tensor[(14, 3, 11), float32], Tensor[(84), float64]) {
  %724 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 3, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
  %725 = @func_5629() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
  %726 = cos(%724) /* ty=Tensor[(14, 3, 11), float32] */;
  %727 = %725.2;
  (%726, %727)
}

def @func_4742(%var_4727: Tensor[(9, 11, 12), float64], %var_4740: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), int8], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(56), float32]) {
  %728 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
  %729 = %728.1;
  %730 = cast(%var_4727, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%729, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %734 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %735 = cast(%var_4740, dtype="float32") /* ty=Tensor[(56), float32] */;
  %736 = reshape(%735, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %737 = @func_2850(%736) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) */;
  %738 = bitwise_xor(%732, %733) /* ty=Tensor[(9, 11, 12), int8] */;
  %739 = %734.0;
  %740 = %737.5;
  (%738, %739, %740, %var_4740)
}

def @func_2507(%var_2492: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), uint8],) {
  %741 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %742 = cast(%var_2492, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %746 = logical_xor(%744, %745) /* ty=Tensor[(5, 7, 10), uint8] */;
  (%746,)
}

def @func_5296() -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, ?), int8], Tensor[(9, 132), int8], Tensor[(21, 6), float32], Tensor[(1188), int8], Tensor[(4, 512), float64]) {
  %747 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %748 = %747.0;
  %749 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %752 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%748, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %756 = cast(%750, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %757 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%748, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %760 = cast(meta[relay.Constant][43] /* ty=Tensor[(21, 6), float32] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %761 = cast(meta[relay.Constant][44] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %762 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 512), float64] */, dtype="float64") /* ty=Tensor[(4, 512), float64] */;
  %763 = reshape(%760, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %764 = reshape(%761, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
  %765 = reshape(%762, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %766 = @func_1385(%763, %764, %765) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
  %767 = not_equal(%753, %754) /* ty=Tensor[(2, 14, ?), bool] */;
  %768 = %755.0;
  %769 = bitwise_or(%758, %759) /* ty=Tensor[(2, 14, ?), int8] */;
  %770 = %766.6;
  (%767, %768, %769, %770, meta[relay.Constant][43] /* ty=Tensor[(21, 6), float32] */, meta[relay.Constant][44] /* ty=Tensor[(1188), int8] */, meta[relay.Constant][45] /* ty=Tensor[(4, 512), float64] */)
}

def @func_8286(%var_8273: float32, %var_8274: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32], Tensor[(9, 11, 12), bool]) {
  %771 = cast(%var_8273, dtype="float32") /* ty=float32 */;
  %772 = cast(%var_8274, dtype="float32") /* ty=Tensor[(5, 10, 1), float32] */;
  %773 = minimum(%771, %772) /* ty=Tensor[(5, 10, 1), float32] */;
  %774 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
  (%773, %774)
}

def @func_6389(%var_6379: Tensor[(9, 126), float64]) -> (Tensor[(80), float64], Tensor[(63, 2), float32], Tensor[(1008), float32], Tensor[(2, 14, 2), bool], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 126), bool]) {
  %775 = @func_4448() /* ty=Tensor[(2, 14, 1), float64] */;
  %776 = cast(%775, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %777 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 14, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
  %778 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %779 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %780 = cast(meta[relay.Constant][46] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %781 = cast(meta[relay.Constant][47] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %782 = cast(meta[relay.Constant][48] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %783 = reshape(%780, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %784 = reshape(%781, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %785 = reshape(%782, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %786 = @func_1851(%783, %784, %785) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) */;
  %787 = %786.5;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
  %789 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 126), float32] */, dtype="float64") /* ty=Tensor[(9, 126), float64] */;
  %790 = floor_divide(%788, %789) /* ty=Tensor[(9, 126), float64] */;
  %791 = cast(%var_6379, dtype="bool") /* ty=Tensor[(9, 126), bool] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(%790, dtype="bool") /* ty=Tensor[(9, 126), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %795 = greater_equal(%776, %777) /* ty=Tensor[(2, 14, 2), bool] */;
  %796 = %778.1;
  %797 = %779.0;
  %798 = logical_and(%793, %794) /* ty=Tensor[(9, 126), bool] */;
  (meta[relay.Constant][46] /* ty=Tensor[(80), float64] */, meta[relay.Constant][47] /* ty=Tensor[(63, 2), float32] */, meta[relay.Constant][48] /* ty=Tensor[(1008), float32] */, %795, %796, %797, %798)
}

def @func_8974() -> (Tensor[(2, 14, ?), float64],) {
  %799 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %800 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %801 = %800.0;
  %802 = cast(%801, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %803 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%799, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %806 = mod(%804, %805) /* ty=Tensor[(2, 14, ?), float64] */;
  (%806,)
}

def @func_2349() -> Tensor[(2, 14, 1), float32] {
  @func_885() /* ty=Tensor[(2, 14, 1), float32] */
}

def @main(%var_10475: Tensor[(14, 11, 3), uint8], %var_10476: Tensor[(14, 11, 3), uint8]) -> (Tensor[(14, 11, 3), bool], Tensor[(14, 11, 3), float32]) {
  %807 = cast(%var_10476, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %808 = shape_of(%var_10475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%var_10475, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = cast(%var_10475, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %812 = less_equal(%809, %810) /* ty=Tensor[(14, 11, 3), bool] */;
  %813 = atan(%811) /* ty=Tensor[(14, 11, 3), float32] */;
  (%812, %813)
}

def @func_3294() -> Tensor[(2, 14, 1), float64] {
  %814 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %814.1
}

def @func_6110() -> Tensor[(2, 14, 1), float32] {
  %815 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %815.1
}

def @func_9324() -> (Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %816 = @func_7690() /* ty=(Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) */;
  %817 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
  %818 = %816.0;
  %819 = %817.0;
  (%818, %819)
}

def @func_8239() -> (Tensor[(9, 11, 12), bool], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(2, 14, 1), float32]) {
  %820 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %821 = cast(meta[relay.Constant][51] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %822 = reshape(%821, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %823 = @func_2723(%822) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %824 = %820.2;
  %825 = %823.1;
  %826 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  (%824, %825, meta[relay.Constant][51] /* ty=Tensor[(2048), float64] */, %826)
}

def @func_8668(%var_8657: Tensor[(84), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) {
  %827 = cast(%var_8657, dtype="float64") /* ty=Tensor[(84), float64] */;
  %828 = reshape(%827, newshape=[3, 4, 7]) /* ty=Tensor[(3, 4, 7), float64] */;
  %829 = @func_3269(%828) /* ty=(Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) */;
  %830 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %831 = %829.1;
  (%830, %831, %var_8657)
}

def @func_2994() -> (Tensor[(2, 14, 1), float32],) {
  %832 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  (%832,)
}

def @func_9491() -> Tensor[(350), float64] {
  %833 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %833.0
}

def @func_151(%var_131: Tensor[(7, 2, 14), float32]) -> (Tensor[(7, 2, 14), bool],) {
  %834 = cast(%var_131, dtype="bool") /* ty=Tensor[(7, 2, 14), bool] */;
  %835 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(7, 2, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 2, 14), float32] */, dtype="bool") /* ty=Tensor[(7, 2, 14), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %838 = not_equal(%836, %837) /* ty=Tensor[(7, 2, 14), bool] */;
  (%838,)
}

def @func_5820(%var_5792: Tensor[(350), bool], %var_5817: Tensor[(63, 2), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) {
  %839 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %840 = @func_5536() /* ty=(Tensor[(350), float64],) */;
  %841 = %840.0;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(350), float64] */;
  %843 = exp(%842) /* ty=Tensor[(350), float64] */;
  %844 = cast(%841, dtype="bool") /* ty=Tensor[(350), bool] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(1), int32] */;
  %846 = cast(%843, dtype="bool") /* ty=Tensor[(350), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?), bool] */;
  %848 = equal(%846, %847) /* ty=Tensor[(350), bool] */;
  %849 = cast(%var_5792, dtype="float32") /* ty=Tensor[(350), float32] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(1), int32] */;
  %851 = cast(%848, dtype="float32") /* ty=Tensor[(350), float32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?), float32] */;
  %853 = floor_mod(%851, %852) /* ty=Tensor[(350), float32] */;
  %854 = cast(%843, dtype="bool") /* ty=Tensor[(350), bool] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(1), int32] */;
  %856 = cast(%853, dtype="bool") /* ty=Tensor[(350), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?), bool] */;
  %858 = cast(%var_5817, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %859 = cast(meta[relay.Constant][53] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %860 = reshape(%858, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %861 = reshape(%859, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %862 = @func_3898(%860, %861) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) */;
  %863 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
  %864 = %839.0;
  %865 = @func_3294() /* ty=Tensor[(2, 14, 1), float64] */;
  %866 = logical_or(%856, %857) /* ty=Tensor[(350), bool] */;
  %867 = %862.1;
  (%863, %864, %865, %866, %867, %var_5817, meta[relay.Constant][53] /* ty=Tensor[(1188), int8] */)
}

def @func_3601(%var_3515: Tensor[(2, 14, 1), float32]) -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) {
  %868 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %869 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %872 = atanh(%871) /* ty=Tensor[(2, 14, 1), float32] */;
  %873 = cast(%var_3515, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%872, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %877 = cast(meta[relay.Constant][54] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %878 = reshape(%877, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %879 = @func_1903(%878) /* ty=(Tensor[(5, 7, 10), int64],) */;
  %880 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %881 = cast(%var_3515, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %882 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%872, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %885 = %868.1;
  %886 = bitwise_and(%875, %876) /* ty=Tensor[(2, 14, ?), int16] */;
  %887 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %888 = %879.0;
  %889 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %890 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %891 = %880.0;
  %892 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %893 = divide(%883, %884) /* ty=Tensor[(2, 14, ?), float64] */;
  (%885, %886, %887, %888, meta[relay.Constant][54] /* ty=Tensor[(350), float32] */, %889, %890, %891, %892, %893)
}

def @func_4921(%var_4887: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) {
  %894 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %895 = cast(%var_4887, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %899 = cast(meta[relay.Constant][55] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %900 = reshape(%899, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %901 = @func_151(%900) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %902 = %901.0;
  %903 = cast(%902, dtype="uint64") /* ty=Tensor[(7, 2, 14), uint64] */;
  %904 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(196), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %905 = cast(meta[relay.Constant][55] /* ty=Tensor[(196), float32] */, dtype="uint64") /* ty=Tensor[(196), uint64] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %907 = less(%897, %898) /* ty=Tensor[(5, 7, 10), bool] */;
  %908 = left_shift(%905, %906) /* ty=Tensor[(196), uint64] */;
  (%907, %908)
}

def @func_1051(%var_1031: Tensor[(175, 2), float64], %var_1049: Tensor[(1188), int8]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
  %909 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %910 = cast(meta[relay.Constant][56] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %911 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 252), float32] */, dtype="float32") /* ty=Tensor[(4, 252), float32] */;
  %912 = cast(%var_1031, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %913 = reshape(%910, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %914 = reshape(%911, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %915 = reshape(%912, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %916 = @func_578(%913, %914, %915) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %917 = cast(%var_1049, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %918 = cast(%var_1049, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %919 = reshape(%917, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %920 = reshape(%918, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %921 = @func_671(%919, %920) /* ty=(Tensor[(9, 11, 12), bool],) */;
  %922 = %909.0;
  %923 = %916.1;
  %924 = %921.0;
  (%922, %923, meta[relay.Constant][56] /* ty=Tensor[(126, 1), float32] */, meta[relay.Constant][57] /* ty=Tensor[(4, 252), float32] */, %var_1031, %924, %var_1049)
}

def @func_1698() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %925 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %926 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %927 = %925.0;
  (%926, %927)
}

def @func_2344() -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) {
  %928 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %929 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %930 = %928.0;
  %931 = %929.2;
  (%930, %931)
}

def @func_5444() -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) {
  %932 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %934 = cast(%932, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %935 = cast(meta[relay.Constant][58] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
  %936 = reshape(%935, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %937 = @func_1903(%936) /* ty=(Tensor[(5, 7, 10), int64],) */;
  %938 = rsqrt(%933) /* ty=Tensor[(9, 11, 12), float64] */;
  %939 = atan(%934) /* ty=Tensor[(9, 11, 12), float64] */;
  %940 = %937.0;
  (%938, %939, %940, meta[relay.Constant][58] /* ty=Tensor[(350), float32] */)
}

def @func_10167() -> Tensor[(2, 14, 1), float32] {
  %941 = @func_6956() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %941.0
}

def @func_6779() -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) {
  %942 = @func_5629() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
  %943 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  %944 = @func_6192() /* ty=Tensor[(9, 11, 12), float64] */;
  %945 = %942.1;
  (%943, %944, %945)
}

def @func_2330() -> (Tensor[(2, 14, 1), float64],) {
  %946 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %947 = %946.0;
  (%947,)
}

def @func_3320() -> (Tensor[(2, 14, 1), float64],) {
  %948 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %949 = %948.0;
  (%949,)
}

def @func_6075() -> Tensor[(2, 14, ?), int8] {
  %950 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %951 = %950.1;
  %952 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
  %953 = cast(%952, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %954 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%951, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%955, %956) /* ty=Tensor[(2, 14, ?), int8] */
}

def @func_6831() -> Tensor[(2, 14, 1), float64] {
  %957 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %957.1
}

def @func_3280() -> Tensor[(9, 11, 12), bool] {
  %958 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %958.1
}

def @func_8543() -> (Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
  %959 = cast(meta[relay.Constant][59] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %960 = reshape(%959, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %961 = @func_151(%960) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %962 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %963 = %961.0;
  (%962, %963, meta[relay.Constant][59] /* ty=Tensor[(196), float32] */)
}

def @func_3851(%var_3840: Tensor[(2, 14, 11), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) {
  %964 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %965 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %966 = %965.0;
  %967 = cast(%966, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %968 = cast(%var_3840, dtype="bool") /* ty=Tensor[(2, 14, 11), bool] */;
  %969 = %964.0;
  %970 = logical_and(%967, %968) /* ty=Tensor[(2, 14, 11), bool] */;
  (%969, %970)
}

def @func_4448() -> Tensor[(2, 14, 1), float64] {
  %971 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %971.1
}

def @func_7269() -> (Tensor[(2, 14, 1), float64],) {
  %972 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %973 = %972.0;
  (%973,)
}

def @func_9373(%var_9360: Tensor[(810), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
  %974 = cast(%var_9360, dtype="float64") /* ty=Tensor[(810), float64] */;
  %975 = cast(%var_9360, dtype="float64") /* ty=Tensor[(810), float64] */;
  %976 = reshape(%974, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %977 = reshape(%975, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %978 = @func_8374() /* ty=Tensor[(2, 14, 1), float32] */;
  %979 = @func_3369(%976, %977) /* ty=Tensor[(9, 15, 6), float64] */;
  (%978, %979, %var_9360)
}

def @func_9849() -> (Tensor[(9, 11, 12), bool], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), bool], Tensor[(196), uint64]) {
  %980 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
  %981 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
  %982 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %984 = reshape(%983, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %985 = @func_4921(%984) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) */;
  %986 = %980.1;
  %987 = %981.0;
  %988 = %985.1;
  (%986, %982, %987, %988)
}

def @func_3468() -> Tensor[(2, 14, 1), float64] {
  @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_3898(%var_3891: Tensor[(126), float32], %var_3892: Tensor[(1188), int8]) -> (Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) {
  %989 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %990 = cast(%var_3891, dtype="float32") /* ty=Tensor[(126), float32] */;
  %991 = cast(%var_3892, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %992 = cast(meta[relay.Constant][60] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %993 = reshape(%990, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %994 = reshape(%991, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
  %995 = reshape(%992, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %996 = @func_1385(%993, %994, %995) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
  %997 = %989.2;
  %998 = %996.15;
  (%997, %998, %var_3891, %var_3892, meta[relay.Constant][60] /* ty=Tensor[(2048), float64] */)
}

def @func_8133() -> Tensor[(2, 14, 1), float64] {
  @func_3070() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_7322(%var_7294: Tensor[(5, 14, 13), uint16], %var_7295: Tensor[(5, 14, 13), uint16]) -> (Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) {
  %999 = cast(%var_7295, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %1000 = shape_of(%var_7294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1001 = cast(%var_7294, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %1002 = dyn.reshape(%999, %1000, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1003 = not_equal(%1001, %1002) /* ty=Tensor[(5, 14, 13), bool] */;
  %1004 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  %1005 = @func_7074() /* ty=Tensor[(2, 14, 1), float64] */;
  (%1003, %1004, %1005)
}

def @func_885() -> Tensor[(2, 14, 1), float32] {
  %1006 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  asin(%1006) /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_9477(%var_9465: int64, %var_9466: Tensor[(9, 1, 11), int64]) -> (Tensor[(9, 1, 11), int64],) {
  %1007 = cast(%var_9465, dtype="int64") /* ty=int64 */;
  %1008 = cast(%var_9466, dtype="int64") /* ty=Tensor[(9, 1, 11), int64] */;
  %1009 = left_shift(%1007, %1008) /* ty=Tensor[(9, 1, 11), int64] */;
  (%1009,)
}

def @func_8374() -> Tensor[(2, 14, 1), float32] {
  %1010 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %1010.0
}

def @func_9783() -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %1011 = cast(meta[relay.Constant][62] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1012 = reshape(%1011, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %1013 = @func_6808(%1012) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %1016 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %1017 = log(%1015) /* ty=Tensor[(9, 11, 12), float64] */;
  (%1016, meta[relay.Constant][62] /* ty=Tensor[(350), float64] */, %1017)
}

def @func_10174() -> Tensor[(9, 11, 12), float64] {
  @func_6192() /* ty=Tensor[(9, 11, 12), float64] */
}

def @func_10296() -> (Tensor[(126), float32],) {
  %1018 = @func_9430() /* ty=Tensor[(126), float32] */;
  (%1018,)
}

def @func_4665() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) {
  %1019 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %1021 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %1022 = sigmoid(%1020) /* ty=Tensor[(5, 7, 10), float32] */;
  %1023 = %1021.0;
  (%1022, %1023)
}

def @func_9430() -> Tensor[(126), float32] {
  %1024 = @func_5847() /* ty=(Tensor[(126), float32],) */;
  %1024.0
}

def @func_966(%var_955: Tensor[(196), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
  %1025 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %1026 = cast(%var_955, dtype="float32") /* ty=Tensor[(196), float32] */;
  %1027 = reshape(%1026, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %1028 = @func_151(%1027) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %1029 = %1025.0;
  %1030 = %1028.0;
  (%1029, %1030, %var_955)
}

def @func_2925() -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) {
  %1031 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %1032 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %1033 = %1031.0;
  %1034 = %1032.0;
  (%1033, %1034)
}

def @func_2219() -> (Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) {
  %1035 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %1036 = cast(meta[relay.Constant][63] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1037 = cast(meta[relay.Constant][63] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1038 = reshape(%1036, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1039 = reshape(%1037, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1040 = @func_449(%1038, %1039) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %1041 = %1035.2;
  %1042 = %1040.3;
  (%1041, %1042, meta[relay.Constant][63] /* ty=Tensor[(350), float64] */)
}

def @func_7819() -> (Tensor[(2, 14, 1), float32],) {
  %1043 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %1044 = %1043.0;
  (%1044,)
}

def @func_7690() -> (Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) {
  %1045 = @func_7561() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(350), float64]) */;
  %1046 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
  %1047 = @func_6169() /* ty=(Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) */;
  %1048 = %1045.1;
  %1049 = %1046.2;
  %1050 = %1047.2;
  (%1048, %1049, %1050)
}

def @func_5374() -> Tensor[(2, 14, 1), float64] {
  @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_7167(%var_7152: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, 350), bool], Tensor[(2, 14, ?), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16]) {
  %1051 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %1052 = %1051.2;
  %1053 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %1054 = %1053.0;
  %1055 = cast(%1052, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %1056 = cast(%1054, dtype="bool") /* ty=Tensor[(350), bool] */;
  %1057 = cast(%var_7152, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %1058 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1059 = cast(%1052, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1061 = cast(%1054, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1062 = cast(%1054, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1063 = reshape(%1061, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1064 = reshape(%1062, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1065 = @func_449(%1063, %1064) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %1066 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %1067 = cast(%var_7152, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %1068 = reshape(%1067, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %1069 = @func_3601(%1068) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) */;
  %1070 = logical_and(%1055, %1056) /* ty=Tensor[(2, 14, 350), bool] */;
  %1071 = multiply(%1059, %1060) /* ty=Tensor[(2, 14, ?), float64] */;
  %1072 = %1065.4;
  %1073 = %1066.0;
  %1074 = @func_3721() /* ty=Tensor[(9, 11, 12), bool] */;
  %1075 = %1069.1;
  (%1070, %1071, %1072, %1073, %1074, %1075)
}

def @func_3971() -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) {
  %1076 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %1077 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %1078 = cast(meta[relay.Constant][64] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1079 = cast(meta[relay.Constant][65] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %1080 = reshape(%1078, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1081 = reshape(%1079, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %1082 = @func_3898(%1080, %1081) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) */;
  %1083 = %1076.0;
  %1084 = %1077.0;
  %1085 = %1082.0;
  (%1083, %1084, %1085, meta[relay.Constant][64] /* ty=Tensor[(126), float32] */, meta[relay.Constant][65] /* ty=Tensor[(1188), int8] */)
}

def @func_4869() -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
  %1086 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %1087 = %1086.1;
  %1088 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
  %1089 = @func_3468() /* ty=Tensor[(2, 14, 1), float64] */;
  (%1087, %1088, %1089)
}

def @func_9254(%var_9243: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(350), float64]) {
  %1090 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %1091 = cast(%var_9243, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1092 = reshape(%1091, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1093 = @func_7010(%1092) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) */;
  %1094 = %1090.0;
  %1095 = %1093.0;
  (%1094, %1095, %var_9243)
}

def @func_10402() -> (Tensor[(2, 14, ?), int8], Tensor[(9, 11, 12), float64]) {
  %1096 = @func_10137() /* ty=(Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
  %1097 = %1096.0;
  %1098 = @func_10174() /* ty=Tensor[(9, 11, 12), float64] */;
  (%1097, %1098)
}

def @func_7912(%var_7904: Tensor[(1008), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(9, 8, 14), float32], Tensor[(3, 42), float32], Tensor[(1008), float32], Tensor[(350), float64]) {
  %1099 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %1100 = cast(%var_7904, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1101 = cast(meta[relay.Constant][67] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1102 = reshape(%1099, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %1103 = reshape(%1100, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %1104 = reshape(%1101, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %1105 = @func_578(%1102, %1103, %1104) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %1106 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %1107 = %1105.0;
  (%1106, %1107, meta[relay.Constant][66] /* ty=Tensor[(3, 42), float32] */, %var_7904, meta[relay.Constant][67] /* ty=Tensor[(350), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4755() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %1 = reshape(%0, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %2 = @func_4425(%1) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) */;
  %3 = @func_3468() /* ty=Tensor[(2, 14, 1), float64] */;
  %4 = %2.1;
  (%3, %4, meta[relay.Constant][0] /* ty=Tensor[(196), float32] */)
}

def @func_7236() -> (Tensor[(2, 14, 1), float64],) {
  %7 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %5 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %6 = %5.2;
    (%6,)
  };
  %7() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_8668(%var_8657: Tensor[(84), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) {
  %8 = cast(%var_8657, dtype="float64") /* ty=Tensor[(84), float64] */;
  %9 = reshape(%8, newshape=[3, 4, 7]) /* ty=Tensor[(3, 4, 7), float64] */;
  %10 = @func_3269(%9) /* ty=(Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) */;
  %11 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %12 = %10.1;
  (%11, %12, %var_8657)
}

def @func_9103(%var_9068: Tensor[(3, 10, 15), int32]) -> (Tensor[(3, 10, 15), int32], Tensor[(3, 10, 15), bool], Tensor[(9, 11, 12), bool], Tensor[(350), float32], Tensor[(80), float64]) {
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 10, 15), int32] */, dtype="int32") /* ty=Tensor[(3, 10, 15), int32] */;
  %14 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%var_9068, dtype="int32") /* ty=Tensor[(3, 10, 15), int32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 10, 15), int32] */, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %18 = shape_of(%var_9068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_9068, dtype="bool") /* ty=Tensor[(3, 10, 15), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %21 = cast(meta[relay.Constant][3] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %22 = reshape(%21, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %23 = @func_4136(%22) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %24 = left_shift(%15, %16) /* ty=Tensor[(3, 10, 15), int32] */;
  %25 = less_equal(%19, %20) /* ty=Tensor[(3, 10, 15), bool] */;
  %26 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %27 = %23.3;
  (%24, %25, %26, %27, meta[relay.Constant][3] /* ty=Tensor[(80), float64] */)
}

def @func_8239() -> (Tensor[(9, 11, 12), bool], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(2, 14, 1), float32]) {
  %28 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %29 = cast(meta[relay.Constant][4] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %30 = reshape(%29, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %31 = @func_2723(%30) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %32 = %28.2;
  %33 = %31.1;
  %34 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  (%32, %33, meta[relay.Constant][4] /* ty=Tensor[(2048), float64] */, %34)
}

def @func_6076() -> Tensor[(2, 14, ?), int8] {
  %42 = fn () -> Tensor[(2, 14, ?), int8] {
    %35 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %36 = %35.1;
    %37 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
    %38 = cast(%37, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
    %39 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%36, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%40, %41) /* ty=Tensor[(2, 14, ?), int8] */
  };
  %42() /* ty=Tensor[(2, 14, ?), int8] */
}

def @func_4230() -> (Tensor[(9, 11, 12), bool],) {
  %43 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %44 = %43.0;
  (%44,)
}

def @func_10297() -> (Tensor[(126), float32],) {
  %46 = fn () -> (Tensor[(126), float32],) {
    %45 = @func_9430() /* ty=Tensor[(126), float32] */;
    (%45,)
  };
  %46() /* ty=(Tensor[(126), float32],) */
}

def @func_5849() -> (Tensor[(126), float32],) {
  @func_5847() /* ty=(Tensor[(126), float32],) */
}

def @func_2123() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
  %50 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
    %47 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
    %48 = %47.1;
    %49 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    (%48, %49)
  };
  %50() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */
}

def @func_3603(%var_3602: Tensor[(2, 14, 1), float32]) -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) {
  %77 = fn (%var_3515: Tensor[(2, 14, 1), float32]) -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) {
    %51 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %52 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %53 = %52.0;
    %54 = cast(%53, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
    %55 = atanh(%54) /* ty=Tensor[(2, 14, 1), float32] */;
    %56 = cast(%var_3515, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
    %57 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%55, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %61 = reshape(%60, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %62 = @func_1903(%61) /* ty=(Tensor[(5, 7, 10), int64],) */;
    %63 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %64 = cast(%var_3515, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %65 = shape_of(%55, dtype="int32") /* ty=Tensor[(3), int32] */;
    %66 = cast(%55, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %68 = %51.1;
    %69 = bitwise_and(%58, %59) /* ty=Tensor[(2, 14, ?), int16] */;
    %70 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
    %71 = %62.0;
    %72 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    %73 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
    %74 = %63.0;
    %75 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
    %76 = divide(%66, %67) /* ty=Tensor[(2, 14, ?), float64] */;
    (%68, %69, %70, %71, meta[relay.Constant][5] /* ty=Tensor[(350), float32] */, %72, %73, %74, %75, %76)
  };
  %77(%var_3602) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) */
}

def @func_6169() -> (Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) {
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int8") /* ty=Tensor[(8, 5, 5), int8] */;
  %79 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 5, 5), int8] */, dtype="int8") /* ty=Tensor[(8, 5, 5), int8] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %83 = reshape(%82, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %84 = @func_966(%83) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %86 = reshape(%85, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %87 = @func_2723(%86) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %88 = right_shift(%80, %81) /* ty=Tensor[(8, 5, 5), int8] */;
  %89 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  %90 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %91 = %84.1;
  %92 = %87.0;
  (%88, %89, %90, %91, meta[relay.Constant][8] /* ty=Tensor[(196), float32] */, %92, meta[relay.Constant][9] /* ty=Tensor[(2048), float64] */)
}

def @func_8241() -> (Tensor[(9, 11, 12), bool], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(2, 14, 1), float32]) {
  @func_8239() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(2, 14, 1), float32]) */
}

def @func_9492() -> Tensor[(350), float64] {
  %94 = fn () -> Tensor[(350), float64] {
    %93 = @func_5044() /* ty=(Tensor[(350), float64],) */;
    %93.0
  };
  %94() /* ty=Tensor[(350), float64] */
}

def @func_7912(%var_7904: Tensor[(1008), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(9, 8, 14), float32], Tensor[(3, 42), float32], Tensor[(1008), float32], Tensor[(350), float64]) {
  %95 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 42), float32] */, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %96 = cast(%var_7904, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %97 = cast(meta[relay.Constant][11] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %98 = reshape(%95, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %99 = reshape(%96, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %100 = reshape(%97, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %101 = @func_578(%98, %99, %100) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %102 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %103 = %101.0;
  (%102, %103, meta[relay.Constant][10] /* ty=Tensor[(3, 42), float32] */, %var_7904, meta[relay.Constant][11] /* ty=Tensor[(350), float64] */)
}

def @func_2267() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
  %107 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) {
    %104 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %105 = %104.0;
    %106 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    (%105, %106)
  };
  %107() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */
}

def @func_3943() -> (Tensor[(9, 11, 12), bool],) {
  %108 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %109 = %108.1;
  (%109,)
}

def @func_8894(%var_8874: Tensor[(13, 4, 9), float64], %var_8888: Tensor[(13, 4, 9), float64]) -> (Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) {
  %110 = cast(%var_8874, dtype="float64") /* ty=Tensor[(13, 4, 9), float64] */;
  %111 = cast(%var_8888, dtype="uint64") /* ty=Tensor[(13, 4, 9), uint64] */;
  %112 = shape_of(%var_8874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %113 = cast(%var_8874, dtype="uint64") /* ty=Tensor[(13, 4, 9), uint64] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %115 = asin(%110) /* ty=Tensor[(13, 4, 9), float64] */;
  %116 = maximum(%113, %114) /* ty=Tensor[(13, 4, 9), uint64] */;
  (%115, %116)
}

def @func_2331() -> (Tensor[(2, 14, 1), float64],) {
  %119 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %117 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %118 = %117.0;
    (%118,)
  };
  %119() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_7326(%var_7324: Tensor[(5, 14, 13), uint16], %var_7325: Tensor[(5, 14, 13), uint16]) -> (Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) {
  @func_7322(%var_7324, %var_7325) /* ty=(Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_7322(%var_7294: Tensor[(5, 14, 13), uint16], %var_7295: Tensor[(5, 14, 13), uint16]) -> (Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) {
  %120 = cast(%var_7295, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %121 = shape_of(%var_7294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%var_7294, dtype="bool") /* ty=Tensor[(5, 14, 13), bool] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %124 = not_equal(%122, %123) /* ty=Tensor[(5, 14, 13), bool] */;
  %125 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  %126 = @func_7074() /* ty=Tensor[(2, 14, 1), float64] */;
  (%124, %125, %126)
}

def @func_2726(%var_2724: Tensor[(2048), float64]) -> (Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) {
  @func_2723(%var_2724) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */
}

def @func_9124(%var_9110: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), float64], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
  %127 = cast(%var_9110, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  %128 = cast(meta[relay.Constant][12] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %129 = cast(meta[relay.Constant][12] /* ty=Tensor[(810), float64] */, dtype="float64") /* ty=Tensor[(810), float64] */;
  %130 = reshape(%128, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %131 = reshape(%129, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
  %132 = log10(%127) /* ty=Tensor[(13, 5, 3), float64] */;
  %133 = @func_3369(%130, %131) /* ty=Tensor[(9, 15, 6), float64] */;
  (%132, %133, meta[relay.Constant][12] /* ty=Tensor[(810), float64] */)
}

def @func_2400() -> (Tensor[(2, 14, 1), float32],) {
  %134 = @func_2349() /* ty=Tensor[(2, 14, 1), float32] */;
  (%134,)
}

def @func_7271() -> (Tensor[(2, 14, 1), float64],) {
  @func_7269() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_4521() -> Tensor[(9, 11, 12), float32] {
  %137 = fn () -> Tensor[(9, 11, 12), float32] {
    %135 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
    %136 = cast(%135, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
    acos(%136) /* ty=Tensor[(9, 11, 12), float32] */
  };
  %137() /* ty=Tensor[(9, 11, 12), float32] */
}

def @func_7074() -> Tensor[(2, 14, 1), float64] {
  @func_5374() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_4666() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) {
  %143 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) {
    %138 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
    %139 = cast(%138, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
    %140 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
    %141 = sigmoid(%139) /* ty=Tensor[(5, 7, 10), float32] */;
    %142 = %140.0;
    (%141, %142)
  };
  %143() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) */
}

def @func_7561() -> (Tensor[(9, 11, 12), bool], Tensor[(350), float64]) {
  %144 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %145 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %146 = %144.0;
  (%145, %146)
}

def @func_5128(%var_5100: Tensor[(5, 7, 10), float32]) -> (Tensor[(2, 14, ?), float32], Tensor[(5, 7, 10), uint8], Tensor[(9, 11, 12), bool]) {
  %147 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %148 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %149 = %148.0;
  %150 = cast(%var_5100, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %154 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %155 = %147.0;
  %156 = bitwise_and(%152, %153) /* ty=Tensor[(5, 7, 10), uint8] */;
  %157 = %154.1;
  (%155, %156, %157)
}

def @func_1385(%var_1309: Tensor[(126), float32], %var_1314: Tensor[(9, 132), int8], %var_1369: Tensor[(2048), float64]) -> (Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) {
  %158 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %159 = cast(%158, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %160 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(2, 14, 15), bool] */;
  %161 = cast(%var_1309, dtype="float32") /* ty=Tensor[(126), float32] */;
  %162 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %163 = cast(meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %164 = reshape(%161, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %165 = reshape(%162, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
  %166 = reshape(%163, newshape=[350]) /* ty=Tensor[(350), float64] */;
  %167 = @func_578(%164, %165, %166) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
  %168 = cast(meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %169 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %170 = reshape(%168, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %171 = reshape(%169, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %172 = @func_1051(%170, %171) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %173 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %174 = cast(meta[relay.Constant][16] /* ty=Tensor[(196), float32] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %175 = sin(%174) /* ty=Tensor[(196), float64] */;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(196), float32] */;
  %177 = reshape(%176, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %178 = @func_966(%177) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %179 = cast(%175, dtype="int8") /* ty=Tensor[(196), int8] */;
  %180 = cast(%158, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %181 = cast(meta[relay.Constant][16] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %182 = reshape(%181, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %183 = @func_151(%182) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
  %186 = reshape(%185, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %187 = @func_966(%186) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %188 = cast(%175, dtype="uint32") /* ty=Tensor[(196), uint32] */;
  %189 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%184, dtype="uint32") /* ty=Tensor[(7, 2, 14), uint32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %192 = cast(%var_1369, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %193 = reshape(%192, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %194 = @func_314(%193) /* ty=(Tensor[(16, 8, 16), float64],) */;
  %195 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %196 = cast(%var_1314, dtype="int8") /* ty=Tensor[(9, 132), int8] */;
  %197 = reshape(%195, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %198 = reshape(%196, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
  %199 = @func_671(%197, %198) /* ty=(Tensor[(9, 11, 12), bool],) */;
  %200 = cast(meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %201 = %199.0;
  %202 = cast(%201, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %203 = reshape(%200, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %204 = reshape(%202, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %205 = @func_1051(%203, %204) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %206 = equal(%159, %160) /* ty=Tensor[(2, 14, 15), bool] */;
  %207 = %167.0;
  %208 = %172.2;
  %209 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %210 = %173.0;
  %211 = %178.2;
  %212 = multiply(%179, %180) /* ty=Tensor[(2, 14, 196), int8] */;
  %213 = %187.0;
  %214 = right_shift(%190, %191) /* ty=Tensor[(7, 2, 14), uint32] */;
  %215 = %194.0;
  %216 = %205.3;
  (%206, %207, %var_1309, meta[relay.Constant][14] /* ty=Tensor[(1008), float32] */, meta[relay.Constant][15] /* ty=Tensor[(350), float64] */, %208, %var_1314, %209, %210, %211, %212, %213, %214, %215, %var_1369, %201, %216)
}

def @func_2723(%var_2719: Tensor[(2048), float64]) -> (Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) {
  %217 = cast(%var_2719, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %218 = reshape(%217, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
  %219 = @func_314(%218) /* ty=(Tensor[(16, 8, 16), float64],) */;
  %220 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %221 = %219.0;
  (%220, %221, %var_2719)
}

def @func_1450() -> (Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) {
  @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */
}

def @func_1152() -> (Tensor[(2, 14, 1), float64],) {
  @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_8368() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32]) {
  %230 = fn () -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32]) {
    %222 = @func_2621() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) */;
    %223 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
    %224 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
    %225 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %226 = %222.0;
    %227 = %223.0;
    %228 = %224.0;
    %229 = %225.0;
    (%226, %227, %228, %229)
  };
  %230() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32]) */
}

def @func_6946() -> (Tensor[(2, 14, 16), float64],) {
  %235 = fn () -> (Tensor[(2, 14, 16), float64],) {
    %231 = @func_6110() /* ty=Tensor[(2, 14, 1), float32] */;
    %232 = cast(%231, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %233 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 14, 16), float32] */, dtype="float64") /* ty=Tensor[(2, 14, 16), float64] */;
    %234 = floor_divide(%232, %233) /* ty=Tensor[(2, 14, 16), float64] */;
    (%234,)
  };
  %235() /* ty=(Tensor[(2, 14, 16), float64],) */
}

def @func_2058() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
  %246 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
    %236 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    %237 = cast(%236, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %238 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
    %239 = cast(%238, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
    %240 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %241 = reshape(%239, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
    %242 = reshape(%240, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
    %243 = @func_1051(%241, %242) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
    %244 = acosh(%237) /* ty=Tensor[(2, 14, 1), float64] */;
    %245 = %243.5;
    (%238, %244, %245, meta[relay.Constant][18] /* ty=Tensor[(1188), int8] */)
  };
  %246() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */
}

def @func_7076() -> Tensor[(2, 14, 1), float64] {
  @func_7074() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_1390(%var_1387: Tensor[(126), float32], %var_1388: Tensor[(9, 132), int8], %var_1389: Tensor[(2048), float64]) -> (Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) {
  @func_1385(%var_1387, %var_1388, %var_1389) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */
}

def @func_6717(%var_6700: Tensor[(80), float64]) -> (Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) {
  %247 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
  %248 = cast(%var_6700, dtype="float64") /* ty=Tensor[(80), float64] */;
  %249 = reshape(%248, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %250 = @func_4136(%249) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %251 = cast(meta[relay.Constant][19] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %252 = cast(meta[relay.Constant][19] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %253 = reshape(%251, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %254 = reshape(%252, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %255 = @func_449(%253, %254) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %256 = %247.0;
  %257 = %250.1;
  %258 = %255.2;
  (%256, %257, %var_6700, %258, meta[relay.Constant][19] /* ty=Tensor[(350), float64] */)
}

def @func_4232() -> (Tensor[(9, 11, 12), bool],) {
  @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */
}

def @func_7636(%var_7626: Tensor[(56), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) {
  %259 = cast(%var_7626, dtype="float32") /* ty=Tensor[(56), float32] */;
  %260 = reshape(%259, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %261 = @func_6502(%260) /* ty=(Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) */;
  %262 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %263 = %262.0;
  %264 = cast(%263, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %265 = cast(%var_7626, dtype="bool") /* ty=Tensor[(56), bool] */;
  %266 = equal(%264, %265) /* ty=Tensor[(2, 14, 56), bool] */;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(2, 14, 56), float64] */;
  %268 = %261.2;
  %269 = atan(%267) /* ty=Tensor[(2, 14, 56), float64] */;
  (%268, %269)
}

def @func_9722() -> Tensor[(5, 7, 10), float32] {
  @func_1520() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_8778() -> (Tensor[(84), float64], Tensor[(5, 7, 10), float32]) {
  %274 = fn () -> (Tensor[(84), float64], Tensor[(5, 7, 10), float32]) {
    %270 = @func_7759() /* ty=(Tensor[(14, 3, 11), float32], Tensor[(84), float64]) */;
    %271 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
    %272 = %270.1;
    %273 = %271.0;
    (%272, %273)
  };
  %274() /* ty=(Tensor[(84), float64], Tensor[(5, 7, 10), float32]) */
}

def @func_10068() -> Tensor[(350), float64] {
  %275 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %276 = %275.2;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(350), float64] */;
  asinh(%277) /* ty=Tensor[(350), float64] */
}

def @func_10469() -> (Tensor[(2, 14, 1), float64], Tensor[(910), uint16], Tensor[(2, 14, ?), uint8], Tensor[(2, 14, 1), float32]) {
  %278 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %279 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %280 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), uint16] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), uint16] */, dtype="uint16") /* ty=Tensor[(910), uint16] */;
  %282 = reshape(%280, newshape=[5, 14, 13]) /* ty=Tensor[(5, 14, 13), uint16] */;
  %283 = reshape(%281, newshape=[5, 14, 13]) /* ty=Tensor[(5, 14, 13), uint16] */;
  %284 = @func_7322(%282, %283) /* ty=(Tensor[(5, 14, 13), bool], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float64]) */;
  %285 = %284.2;
  %286 = cast(%285, dtype="uint8") /* ty=Tensor[(2, 14, 1), uint8] */;
  %287 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%279, dtype="uint8") /* ty=Tensor[(2, 14, 1), uint8] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %290 = @func_7895() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %291 = %278.0;
  %292 = add(%288, %289) /* ty=Tensor[(2, 14, ?), uint8] */;
  %293 = %290.0;
  (%291, meta[relay.Constant][20] /* ty=Tensor[(910), uint16] */, %292, %293)
}

def @func_2623() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) {
  @func_2621() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) */
}

def @func_2459() -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) {
  @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */
}

def @func_9167(%var_9156: Tensor[(9, 11, 12), bool]) -> Tensor[(9, 11, 12), int32] {
  %294 = @func_7028() /* ty=Tensor[(9, 11, 12), bool] */;
  %295 = cast(%var_9156, dtype="int32") /* ty=Tensor[(9, 11, 12), int32] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="int32") /* ty=Tensor[(9, 11, 12), int32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  logical_xor(%297, %298) /* ty=Tensor[(9, 11, 12), int32] */
}

def @func_9375(%var_9374: Tensor[(810), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
  %305 = fn (%var_9360: Tensor[(810), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
    %299 = cast(%var_9360, dtype="float64") /* ty=Tensor[(810), float64] */;
    %300 = cast(%var_9360, dtype="float64") /* ty=Tensor[(810), float64] */;
    %301 = reshape(%299, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
    %302 = reshape(%300, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float64] */;
    %303 = @func_8374() /* ty=Tensor[(2, 14, 1), float32] */;
    %304 = @func_3369(%301, %302) /* ty=Tensor[(9, 15, 6), float64] */;
    (%303, %304, %var_9360)
  };
  %305(%var_9374) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) */
}

def @func_2017() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
  %310 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
    %306 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %307 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %308 = %306.0;
    %309 = %307.0;
    (%308, %309)
  };
  %310() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */
}

def @func_7013(%var_7011: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) {
  @func_7010(%var_7011) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) */
}

def @func_9850() -> (Tensor[(9, 11, 12), bool], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), bool], Tensor[(196), uint64]) {
  %320 = fn () -> (Tensor[(9, 11, 12), bool], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), bool], Tensor[(196), uint64]) {
    %311 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
    %312 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
    %313 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
    %314 = cast(%313, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
    %315 = reshape(%314, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %316 = @func_4921(%315) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) */;
    %317 = %311.1;
    %318 = %312.0;
    %319 = %316.1;
    (%317, %313, %318, %319)
  };
  %320() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), bool], Tensor[(196), uint64]) */
}

def @func_3722() -> Tensor[(9, 11, 12), bool] {
  %321 = fn () -> Tensor[(9, 11, 12), bool] {
    @func_3280() /* ty=Tensor[(9, 11, 12), bool] */
  };
  %321() /* ty=Tensor[(9, 11, 12), bool] */
}

def @func_4449() -> Tensor[(2, 14, 1), float64] {
  %323 = fn () -> Tensor[(2, 14, 1), float64] {
    %322 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %322.1
  };
  %323() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_9170(%var_9168: Tensor[(9, 11, 12), bool]) -> Tensor[(9, 11, 12), int32] {
  @func_9167(%var_9168) /* ty=Tensor[(9, 11, 12), int32] */
}

def @func_10175() -> Tensor[(9, 11, 12), float64] {
  %324 = fn () -> Tensor[(9, 11, 12), float64] {
    @func_6192() /* ty=Tensor[(9, 11, 12), float64] */
  };
  %324() /* ty=Tensor[(9, 11, 12), float64] */
}

def @func_8975() -> (Tensor[(2, 14, ?), float64],) {
  %333 = fn () -> (Tensor[(2, 14, ?), float64],) {
    %325 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
    %326 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %327 = %326.0;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %329 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
    %330 = cast(%325, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %332 = mod(%330, %331) /* ty=Tensor[(2, 14, ?), float64] */;
    (%332,)
  };
  %333() /* ty=(Tensor[(2, 14, ?), float64],) */
}

def @func_6286() -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16], Tensor[(9, 11, 12), bool], Tensor[(56, 1), float32]) {
  %334 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %337 = acos(%336) /* ty=Tensor[(2, 14, 1), float32] */;
  %338 = cast(%335, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%337, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(56, 1), float32] */, dtype="float32") /* ty=Tensor[(56, 1), float32] */;
  %343 = reshape(%342, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %344 = @func_4960(%343) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) */;
  %345 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
  %346 = bitwise_xor(%340, %341) /* ty=Tensor[(2, 14, ?), int16] */;
  %347 = %344.0;
  (%345, %346, %347, meta[relay.Constant][21] /* ty=Tensor[(56, 1), float32] */)
}

def @func_969(%var_967: Tensor[(196), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
  @func_966(%var_967) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */
}

def @func_9680(%var_9679: Tensor[(80), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(308), float32], Tensor[(80), float64], Tensor[(80), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
  %374 = fn (%var_9648: Tensor[(80), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(308), float32], Tensor[(80), float64], Tensor[(80), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) {
    %348 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %349 = cast(meta[relay.Constant][22] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %350 = reshape(%349, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
    %351 = @func_3851(%350) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
    %352 = cast(%var_9648, dtype="float64") /* ty=Tensor[(80), float64] */;
    %353 = reshape(%352, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %354 = @func_6717(%353) /* ty=(Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) */;
    %355 = @func_3721() /* ty=Tensor[(9, 11, 12), bool] */;
    %356 = cast(%355, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
    %357 = exp(%356) /* ty=Tensor[(9, 11, 12), float32] */;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
    %359 = atanh(%358) /* ty=Tensor[(9, 11, 12), float64] */;
    %360 = cast(%357, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
    %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %362 = cast(%359, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
    %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %364 = @func_6956() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %365 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %366 = %348.0;
    %367 = %351.0;
    %368 = %354.2;
    %369 = equal(%362, %363) /* ty=Tensor[(9, 11, 12), bool] */;
    %370 = %364.0;
    %371 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
    %372 = @func_7074() /* ty=Tensor[(2, 14, 1), float64] */;
    %373 = %365.1;
    (%366, %367, meta[relay.Constant][22] /* ty=Tensor[(308), float32] */, %368, %var_9648, %369, %370, %371, %372, %373)
  };
  %374(%var_9679) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(308), float32], Tensor[(80), float64], Tensor[(80), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */
}

def @func_10070() -> Tensor[(350), float64] {
  @func_10068() /* ty=Tensor[(350), float64] */
}

def @func_4745(%var_4743: Tensor[(9, 11, 12), float64], %var_4744: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), int8], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(56), float32]) {
  %388 = fn (%var_4727: Tensor[(9, 11, 12), float64], %var_4740: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), int8], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(56), float32]) {
    %375 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
    %376 = %375.1;
    %377 = cast(%var_4727, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
    %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %379 = cast(%376, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
    %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %381 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
    %382 = cast(%var_4740, dtype="float32") /* ty=Tensor[(56), float32] */;
    %383 = reshape(%382, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %384 = @func_2850(%383) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) */;
    %385 = bitwise_xor(%379, %380) /* ty=Tensor[(9, 11, 12), int8] */;
    %386 = %381.0;
    %387 = %384.5;
    (%385, %386, %387, %var_4740)
  };
  %388(%var_4743, %var_4744) /* ty=(Tensor[(9, 11, 12), int8], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64], Tensor[(56), float32]) */
}

def @func_3973() -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) {
  @func_3971() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) */
}

def @func_2507(%var_2492: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), uint8],) {
  %389 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %390 = cast(%var_2492, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="uint8") /* ty=Tensor[(5, 7, 10), uint8] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %394 = logical_xor(%392, %393) /* ty=Tensor[(5, 7, 10), uint8] */;
  (%394,)
}

def @func_6118() -> Tensor[(9, 11, 12), bool] {
  @func_6116() /* ty=Tensor[(9, 11, 12), bool] */
}

def @func_6832() -> Tensor[(2, 14, 1), float64] {
  %396 = fn () -> Tensor[(2, 14, 1), float64] {
    %395 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %395.1
  };
  %396() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_9956() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32]) {
  %402 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32]) {
    %397 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %398 = %397.2;
    %399 = cast(%398, dtype="float32") /* ty=Tensor[(2, 14, ?), float32] */;
    %400 = @func_7722() /* ty=Tensor[(5, 7, 10), float32] */;
    %401 = log(%399) /* ty=Tensor[(2, 14, ?), float32] */;
    (%400, %401)
  };
  %402() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32]) */
}

def @func_5847() -> (Tensor[(126), float32],) {
  %403 = @func_3971() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) */;
  %404 = %403.3;
  (%404,)
}

def @func_1448() -> (Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) {
  %405 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %406 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %407 = reshape(%405, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %408 = reshape(%406, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %409 = @func_449(%407, %408) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %410 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %413 = exp(%412) /* ty=Tensor[(2, 14, 1), float64] */;
  %414 = cast(%411, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%413, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %418 = minimum(%416, %417) /* ty=Tensor[(2, 14, ?), float32] */;
  %419 = cast(%411, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="float32") /* ty=Tensor[(2, 14, ?), float32] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %423 = %409.4;
  %424 = floor_mod(%421, %422) /* ty=Tensor[(2, 14, ?), float32] */;
  (%423, meta[relay.Constant][23] /* ty=Tensor[(350), float64] */, %424)
}

def @func_8112(%var_8110: Tensor[(308, 1), float32], %var_8111: Tensor[(308, 8), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2), int32], Tensor[(308, 8), uint64], Tensor[(56, 2048), uint8]) {
  %454 = fn (%var_8064: Tensor[(308, 1), float32], %var_8095: Tensor[(308, 8), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2), int32], Tensor[(308, 8), uint64], Tensor[(56, 2048), uint8]) {
    %425 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
    %426 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %427 = cast(%var_8064, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
    %428 = reshape(%427, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
    %429 = @func_3851(%428) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
    %430 = cast(%var_8064, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
    %431 = reshape(%430, newshape=[2, 14, 11]) /* ty=Tensor[(2, 14, 11), float32] */;
    %432 = @func_3851(%431) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */;
    %433 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %434 = %433.0;
    %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(56, 1), float32] */, dtype="float32") /* ty=Tensor[(56, 1), float32] */;
    %436 = cast(meta[relay.Constant][25] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
    %437 = reshape(%435, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
    %438 = reshape(%436, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
    %439 = @func_2686(%437, %438) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
    %440 = %439.0;
    %441 = cast(%434, dtype="int32") /* ty=Tensor[(2, 14, 1), int32] */;
    %442 = cast(%440, dtype="int32") /* ty=Tensor[(2, 14, 2), int32] */;
    %443 = cast(%var_8064, dtype="uint64") /* ty=Tensor[(308, 1), uint64] */;
    %444 = cast(%var_8095, dtype="uint64") /* ty=Tensor[(308, 8), uint64] */;
    %445 = cast(meta[relay.Constant][25] /* ty=Tensor[(2048), float64] */, dtype="uint8") /* ty=Tensor[(2048), uint8] */;
    %446 = cast(meta[relay.Constant][24] /* ty=Tensor[(56, 1), float32] */, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
    %447 = %425.0;
    %448 = %426.1;
    %449 = %429.0;
    %450 = %432.0;
    %451 = add(%441, %442) /* ty=Tensor[(2, 14, 2), int32] */;
    %452 = subtract(%443, %444) /* ty=Tensor[(308, 8), uint64] */;
    %453 = subtract(%445, %446) /* ty=Tensor[(56, 2048), uint8] */;
    (%447, %448, %449, %450, %451, %452, %453)
  };
  %454(%var_8110, %var_8111) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2), int32], Tensor[(308, 8), uint64], Tensor[(56, 2048), uint8]) */
}

def @func_7029() -> Tensor[(9, 11, 12), bool] {
  %456 = fn () -> Tensor[(9, 11, 12), bool] {
    %455 = @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */;
    %455.0
  };
  %456() /* ty=Tensor[(9, 11, 12), bool] */
}

def @func_1521() -> Tensor[(5, 7, 10), float32] {
  %457 = fn () -> Tensor[(5, 7, 10), float32] {
    @func_1510() /* ty=Tensor[(5, 7, 10), float32] */
  };
  %457() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_6667() -> (Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %458 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %459 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %460 = %458.2;
  %461 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  (%459, %460, %461)
}

def @func_8289(%var_8287: float32, %var_8288: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32], Tensor[(9, 11, 12), bool]) {
  %466 = fn (%var_8273: float32, %var_8274: Tensor[(5, 10, 1), float32]) -> (Tensor[(5, 10, 1), float32], Tensor[(9, 11, 12), bool]) {
    %462 = cast(%var_8273, dtype="float32") /* ty=float32 */;
    %463 = cast(%var_8274, dtype="float32") /* ty=Tensor[(5, 10, 1), float32] */;
    %464 = minimum(%462, %463) /* ty=Tensor[(5, 10, 1), float32] */;
    %465 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
    (%464, %465)
  };
  %466(%var_8287, %var_8288) /* ty=(Tensor[(5, 10, 1), float32], Tensor[(9, 11, 12), bool]) */
}

def @func_4705() -> Tensor[(2, 14, 1), float64] {
  @func_4703() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_7961() -> (Tensor[(2, 14, 1), float64],) {
  %469 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %467 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %468 = %467.0;
    (%468,)
  };
  %469() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_2850(%var_2809: Tensor[(56), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) {
  %470 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %472 = cast(%470, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %473 = log10(%472) /* ty=Tensor[(5, 7, 10), float32] */;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %475 = sinh(%474) /* ty=Tensor[(5, 7, 10), float64] */;
  %476 = cast(%470, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = cast(%var_2809, dtype="float32") /* ty=Tensor[(56), float32] */;
  %481 = cast(meta[relay.Constant][26] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %482 = reshape(%480, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
  %483 = reshape(%481, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
  %484 = @func_2686(%482, %483) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
  %485 = %484.1;
  %486 = cast(meta[relay.Constant][26] /* ty=Tensor[(2048), float64] */, dtype="uint32") /* ty=Tensor[(2048), uint32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="uint32") /* ty=Tensor[(16, 8, 16), uint32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %490 = cast(%473, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %491 = cast(%470, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %492 = reshape(%490, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %493 = reshape(%491, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %494 = @func_449(%492, %493) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %495 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %496 = acosh(%471) /* ty=Tensor[(5, 7, 10), float32] */;
  %497 = less_equal(%478, %479) /* ty=Tensor[(5, 7, 10), bool] */;
  %498 = left_shift(%488, %489) /* ty=Tensor[(16, 8, 16), uint32] */;
  %499 = %494.5;
  %500 = %495.0;
  (%496, %497, %var_2809, %498, %499, %500)
}

def @func_6391(%var_6390: Tensor[(9, 126), float64]) -> (Tensor[(80), float64], Tensor[(63, 2), float32], Tensor[(1008), float32], Tensor[(2, 14, 2), bool], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 126), bool]) {
  %525 = fn (%var_6379: Tensor[(9, 126), float64]) -> (Tensor[(80), float64], Tensor[(63, 2), float32], Tensor[(1008), float32], Tensor[(2, 14, 2), bool], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 126), bool]) {
    %501 = @func_4448() /* ty=Tensor[(2, 14, 1), float64] */;
    %502 = cast(%501, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
    %503 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 14, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 14, 2), bool] */;
    %504 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
    %505 = @func_5044() /* ty=(Tensor[(350), float64],) */;
    %506 = cast(meta[relay.Constant][27] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %507 = cast(meta[relay.Constant][28] /* ty=Tensor[(63, 2), float32] */, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
    %508 = cast(meta[relay.Constant][29] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %509 = reshape(%506, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
    %510 = reshape(%507, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
    %511 = reshape(%508, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %512 = @func_1851(%509, %510, %511) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) */;
    %513 = %512.5;
    %514 = cast(%513, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
    %515 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 126), float32] */, dtype="float64") /* ty=Tensor[(9, 126), float64] */;
    %516 = floor_divide(%514, %515) /* ty=Tensor[(9, 126), float64] */;
    %517 = cast(%var_6379, dtype="bool") /* ty=Tensor[(9, 126), bool] */;
    %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(2), int32] */;
    %519 = cast(%516, dtype="bool") /* ty=Tensor[(9, 126), bool] */;
    %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %521 = greater_equal(%502, %503) /* ty=Tensor[(2, 14, 2), bool] */;
    %522 = %504.1;
    %523 = %505.0;
    %524 = logical_and(%519, %520) /* ty=Tensor[(9, 126), bool] */;
    (meta[relay.Constant][27] /* ty=Tensor[(80), float64] */, meta[relay.Constant][28] /* ty=Tensor[(63, 2), float32] */, meta[relay.Constant][29] /* ty=Tensor[(1008), float32] */, %521, %522, %523, %524)
  };
  %525(%var_6390) /* ty=(Tensor[(80), float64], Tensor[(63, 2), float32], Tensor[(1008), float32], Tensor[(2, 14, 2), bool], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 126), bool]) */
}

def @func_8756(%var_8746: Tensor[(350), bool]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(126, 1), float32], Tensor[(2, 14, 1), float32]) {
  %526 = cast(%var_8746, dtype="bool") /* ty=Tensor[(350), bool] */;
  %527 = cast(meta[relay.Constant][32] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %528 = reshape(%526, newshape=[350]) /* ty=Tensor[(350), bool] */;
  %529 = reshape(%527, newshape=[63, 2]) /* ty=Tensor[(63, 2), float32] */;
  %530 = @func_5820(%528, %529) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) */;
  %531 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %532 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %533 = %530.0;
  %534 = %531.0;
  (%532, %533, %var_8746, meta[relay.Constant][32] /* ty=Tensor[(126, 1), float32] */, %534)
}

def @func_966(%var_955: Tensor[(196), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
  %535 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %536 = cast(%var_955, dtype="float32") /* ty=Tensor[(196), float32] */;
  %537 = reshape(%536, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %538 = @func_151(%537) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %539 = %535.0;
  %540 = %538.0;
  (%539, %540, %var_955)
}

def @func_4586() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %552 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
    %541 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
    %542 = cast(%541, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
    %543 = cast(%541, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
    %544 = reshape(%542, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
    %545 = reshape(%543, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
    %546 = @func_449(%544, %545) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
    %547 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
    %548 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %549 = %546.4;
    %550 = %547.0;
    %551 = %548.0;
    (%541, %549, %550, %551)
  };
  %552() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_3945() -> (Tensor[(9, 11, 12), bool],) {
  @func_3943() /* ty=(Tensor[(9, 11, 12), bool],) */
}

def @func_9599(%var_9597: Tensor[(126), float32], %var_9598: Tensor[(2048), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(13, 4, 9), uint64], Tensor[(468), float64], Tensor[(196), float32], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), float32]) {
  @func_9595(%var_9597, %var_9598) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(13, 4, 9), uint64], Tensor[(468), float64], Tensor[(196), float32], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), float32]) */
}

def @func_10404() -> (Tensor[(2, 14, ?), int8], Tensor[(9, 11, 12), float64]) {
  @func_10402() /* ty=(Tensor[(2, 14, ?), int8], Tensor[(9, 11, 12), float64]) */
}

def @func_9340() -> (Tensor[(9, 11, 12), bool],) {
  %555 = fn () -> (Tensor[(9, 11, 12), bool],) {
    %553 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
    %554 = %553.0;
    (%554,)
  };
  %555() /* ty=(Tensor[(9, 11, 12), bool],) */
}

def @func_4870() -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
  %560 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
    %556 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
    %557 = %556.1;
    %558 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
    %559 = @func_3468() /* ty=Tensor[(2, 14, 1), float64] */;
    (%557, %558, %559)
  };
  %560() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */
}

def @func_154(%var_152: Tensor[(7, 2, 14), float32]) -> (Tensor[(7, 2, 14), bool],) {
  @func_151(%var_152) /* ty=(Tensor[(7, 2, 14), bool],) */
}

def @func_6734() -> (Tensor[(2, 14, 1), float64],) {
  %562 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %561 = @func_4703() /* ty=Tensor[(2, 14, 1), float64] */;
    (%561,)
  };
  %562() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @main(%var_10475: Tensor[(14, 11, 3), uint8], %var_10476: Tensor[(14, 11, 3), uint8]) -> (Tensor[(14, 11, 3), bool], Tensor[(14, 11, 3), float32]) {
  %563 = cast(%var_10476, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %564 = shape_of(%var_10475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_10475, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = cast(%var_10475, dtype="float32") /* ty=Tensor[(14, 11, 3), float32] */;
  %568 = less_equal(%565, %566) /* ty=Tensor[(14, 11, 3), bool] */;
  %569 = atan(%567) /* ty=Tensor[(14, 11, 3), float32] */;
  (%568, %569)
}

def @func_5298() -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, ?), int8], Tensor[(9, 132), int8], Tensor[(21, 6), float32], Tensor[(1188), int8], Tensor[(4, 512), float64]) {
  @func_5296() /* ty=(Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, ?), int8], Tensor[(9, 132), int8], Tensor[(21, 6), float32], Tensor[(1188), int8], Tensor[(4, 512), float64]) */
}

def @func_5044() -> (Tensor[(350), float64],) {
  %570 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %571 = %570.2;
  (%571,)
}

def @func_1751() -> Tensor[(5, 7, 10), float32] {
  %572 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  asinh(%573) /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_2927() -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) {
  @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */
}

def @func_2925() -> (Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) {
  %574 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %575 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %576 = %574.0;
  %577 = %575.0;
  (%576, %577)
}

def @func_8544() -> (Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
  %583 = fn () -> (Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) {
    %578 = cast(meta[relay.Constant][33] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %579 = reshape(%578, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
    %580 = @func_151(%579) /* ty=(Tensor[(7, 2, 14), bool],) */;
    %581 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    %582 = %580.0;
    (%581, %582, meta[relay.Constant][33] /* ty=Tensor[(196), float32] */)
  };
  %583() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */
}

def @func_10402() -> (Tensor[(2, 14, ?), int8], Tensor[(9, 11, 12), float64]) {
  %584 = @func_10137() /* ty=(Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
  %585 = %584.0;
  %586 = @func_10174() /* ty=Tensor[(9, 11, 12), float64] */;
  (%585, %586)
}

def @func_1150() -> (Tensor[(2, 14, 1), float64],) {
  %587 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %588 = %587.0;
  (%588,)
}

def @func_9903() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), int64]) {
  @func_9901() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), int64]) */
}

def @func_5824(%var_5822: Tensor[(350), bool], %var_5823: Tensor[(63, 2), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) {
  @func_5820(%var_5822, %var_5823) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) */
}

def @func_1905(%var_1904: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), int64],) {
  %596 = fn (%var_1896: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), int64],) {
    %589 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %590 = %589.0;
    %591 = cast(%var_1896, dtype="int64") /* ty=Tensor[(5, 7, 10), int64] */;
    %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%590, dtype="int64") /* ty=Tensor[(5, 7, 10), int64] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %595 = left_shift(%593, %594) /* ty=Tensor[(5, 7, 10), int64] */;
    (%595,)
  };
  %596(%var_1904) /* ty=(Tensor[(5, 7, 10), int64],) */
}

def @func_6779() -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) {
  %597 = @func_5629() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
  %598 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  %599 = @func_6192() /* ty=Tensor[(9, 11, 12), float64] */;
  %600 = %597.1;
  (%598, %599, %600)
}

def @func_3282() -> Tensor[(9, 11, 12), bool] {
  @func_3280() /* ty=Tensor[(9, 11, 12), bool] */
}

def @func_9785() -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  @func_9783() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */
}

def @func_5820(%var_5792: Tensor[(350), bool], %var_5817: Tensor[(63, 2), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(9, 11, 12), bool], Tensor[(63, 2), float32], Tensor[(1188), int8]) {
  %601 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
  %602 = @func_5536() /* ty=(Tensor[(350), float64],) */;
  %603 = %602.0;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(350), float64] */;
  %605 = exp(%604) /* ty=Tensor[(350), float64] */;
  %606 = cast(%603, dtype="bool") /* ty=Tensor[(350), bool] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(1), int32] */;
  %608 = cast(%605, dtype="bool") /* ty=Tensor[(350), bool] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?), bool] */;
  %610 = equal(%608, %609) /* ty=Tensor[(350), bool] */;
  %611 = cast(%var_5792, dtype="float32") /* ty=Tensor[(350), float32] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(1), int32] */;
  %613 = cast(%610, dtype="float32") /* ty=Tensor[(350), float32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?), float32] */;
  %615 = floor_mod(%613, %614) /* ty=Tensor[(350), float32] */;
  %616 = cast(%605, dtype="bool") /* ty=Tensor[(350), bool] */;
  %617 = shape_of(%615, dtype="int32") /* ty=Tensor[(1), int32] */;
  %618 = cast(%615, dtype="bool") /* ty=Tensor[(350), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?), bool] */;
  %620 = cast(%var_5817, dtype="float32") /* ty=Tensor[(63, 2), float32] */;
  %621 = cast(meta[relay.Constant][34] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %622 = reshape(%620, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %623 = reshape(%621, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %624 = @func_3898(%622, %623) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) */;
  %625 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
  %626 = %601.0;
  %627 = @func_3294() /* ty=Tensor[(2, 14, 1), float64] */;
  %628 = logical_or(%618, %619) /* ty=Tensor[(350), bool] */;
  %629 = %624.1;
  (%625, %626, %627, %628, %629, %var_5817, meta[relay.Constant][34] /* ty=Tensor[(1188), int8] */)
}

def @func_9970() -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(14, 4), float32], Tensor[(5, 7, 10), bool], Tensor[(350), float32], Tensor[(5, 7, 10), bool]) {
  %644 = fn () -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(14, 4), float32], Tensor[(5, 7, 10), bool], Tensor[(350), float32], Tensor[(5, 7, 10), bool]) {
    %630 = @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */;
    %631 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 4), float32] */;
    %632 = reshape(%631, newshape=[56]) /* ty=Tensor[(56), float32] */;
    %633 = @func_7636(%632) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) */;
    %634 = cast(meta[relay.Constant][36] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %635 = reshape(%634, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %636 = @func_1599(%635) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) */;
    %637 = cast(meta[relay.Constant][36] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %638 = reshape(%637, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %639 = @func_1599(%638) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) */;
    %640 = %630.0;
    %641 = %633.0;
    %642 = %636.1;
    %643 = %639.1;
    (%640, %641, meta[relay.Constant][35] /* ty=Tensor[(14, 4), float32] */, %642, meta[relay.Constant][36] /* ty=Tensor[(350), float32] */, %643)
  };
  %644() /* ty=(Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(14, 4), float32], Tensor[(5, 7, 10), bool], Tensor[(350), float32], Tensor[(5, 7, 10), bool]) */
}

def @func_8759(%var_8757: Tensor[(350), bool]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(126, 1), float32], Tensor[(2, 14, 1), float32]) {
  @func_8756(%var_8757) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(350), bool], Tensor[(126, 1), float32], Tensor[(2, 14, 1), float32]) */
}

def @func_6116() -> Tensor[(9, 11, 12), bool] {
  %645 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %645.1
}

def @func_4819() -> (Tensor[(2, 14, ?), bool],) {
  @func_4817() /* ty=(Tensor[(2, 14, ?), bool],) */
}

def @func_8134() -> Tensor[(2, 14, 1), float64] {
  %646 = fn () -> Tensor[(2, 14, 1), float64] {
    @func_3070() /* ty=Tensor[(2, 14, 1), float64] */
  };
  %646() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_8446() -> (Tensor[(12, 4, 11), float32], Tensor[(196), float32], Tensor[(7, 2, 14), float64]) {
  @func_8444() /* ty=(Tensor[(12, 4, 11), float32], Tensor[(196), float32], Tensor[(7, 2, 14), float64]) */
}

def @func_2712() -> Tensor[(2, 14, 1), float64] {
  @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_7691() -> (Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) {
  %653 = fn () -> (Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) {
    %647 = @func_7561() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(350), float64]) */;
    %648 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
    %649 = @func_6169() /* ty=(Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) */;
    %650 = %647.1;
    %651 = %648.2;
    %652 = %649.2;
    (%650, %651, %652)
  };
  %653() /* ty=(Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) */
}

def @func_9595(%var_9569: Tensor[(126), float32], %var_9571: Tensor[(2048), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(13, 4, 9), uint64], Tensor[(468), float64], Tensor[(196), float32], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64], Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), float32]) {
  %654 = cast(meta[relay.Constant][37] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %655 = cast(meta[relay.Constant][37] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %656 = reshape(%654, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), float64] */;
  %657 = reshape(%655, newshape=[13, 4, 9]) /* ty=Tensor[(13, 4, 9), float64] */;
  %658 = @func_8894(%656, %657) /* ty=(Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) */;
  %659 = cast(%var_9569, dtype="float32") /* ty=Tensor[(126), float32] */;
  %660 = cast(meta[relay.Constant][38] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %661 = cast(%var_9571, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %662 = reshape(%659, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %663 = reshape(%660, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
  %664 = reshape(%661, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %665 = @func_1385(%662, %663, %664) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
  %666 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %667 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %668 = %658.1;
  %669 = %665.9;
  %670 = %666.0;
  %671 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
  (%667, %668, meta[relay.Constant][37] /* ty=Tensor[(468), float64] */, %669, %var_9569, meta[relay.Constant][38] /* ty=Tensor[(1188), int8] */, %var_9571, %670, %671)
}

def @func_5630() -> (Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
  %678 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
    %672 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
    %673 = cast(meta[relay.Constant][39] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %674 = reshape(%673, newshape=[3, 4, 7]) /* ty=Tensor[(3, 4, 7), float64] */;
    %675 = @func_3269(%674) /* ty=(Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) */;
    %676 = %672.0;
    %677 = %675.0;
    (%676, %677, meta[relay.Constant][39] /* ty=Tensor[(84), float64] */)
  };
  %678() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */
}

def @func_3854(%var_3852: Tensor[(2, 14, 11), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) {
  @func_3851(%var_3852) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) */
}

def @func_4428(%var_4426: Tensor[(196), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) {
  @func_4425(%var_4426) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) */
}

def @func_5536() -> (Tensor[(350), float64],) {
  %679 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %680 = %679.0;
  (%680,)
}

def @func_3280() -> Tensor[(9, 11, 12), bool] {
  %681 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %681.1
}

def @func_2350() -> Tensor[(2, 14, 1), float32] {
  %682 = fn () -> Tensor[(2, 14, 1), float32] {
    @func_885() /* ty=Tensor[(2, 14, 1), float32] */
  };
  %682() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_3271(%var_3270: Tensor[(3, 4, 7), float64]) -> (Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) {
  %687 = fn (%var_3254: Tensor[(3, 4, 7), float64]) -> (Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) {
    %683 = cast(%var_3254, dtype="float64") /* ty=Tensor[(3, 4, 7), float64] */;
    %684 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %685 = acos(%683) /* ty=Tensor[(3, 4, 7), float64] */;
    %686 = %684.0;
    (%685, %686)
  };
  %687(%var_3270) /* ty=(Tensor[(3, 4, 7), float64], Tensor[(5, 7, 10), float32]) */
}

def @func_4962(%var_4961: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) {
  %703 = fn (%var_4951: Tensor[(56), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) {
    %688 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
    %689 = cast(%var_4951, dtype="float32") /* ty=Tensor[(56), float32] */;
    %690 = cast(meta[relay.Constant][41] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
    %691 = reshape(%689, newshape=[2, 14, 2]) /* ty=Tensor[(2, 14, 2), float32] */;
    %692 = reshape(%690, newshape=[16, 128]) /* ty=Tensor[(16, 128), float64] */;
    %693 = @func_2686(%691, %692) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */;
    %694 = cast(meta[relay.Constant][40] /* ty=Tensor[(196, 1), float32] */, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
    %695 = reshape(%694, newshape=[196]) /* ty=Tensor[(196), float32] */;
    %696 = @func_966(%695) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
    %697 = %696.0;
    %698 = cast(%var_4951, dtype="float64") /* ty=Tensor[(56), float64] */;
    %699 = cast(%697, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %700 = %688.1;
    %701 = %693.2;
    %702 = mod(%698, %699) /* ty=Tensor[(2, 14, 56), float64] */;
    (%700, meta[relay.Constant][40] /* ty=Tensor[(196, 1), float32] */, %701, meta[relay.Constant][41] /* ty=Tensor[(2048), float64] */, %702)
  };
  %703(%var_4961) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(196, 1), float32], Tensor[(16, 128), float64], Tensor[(2048), float64], Tensor[(2, 14, 56), float64]) */
}

def @func_1891() -> (Tensor[(2, 14, 1), float64],) {
  %706 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %704 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %705 = %704.0;
    (%705,)
  };
  %706() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_6505(%var_6503: Tensor[(56), float32]) -> (Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) {
  @func_6502(%var_6503) /* ty=(Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) */
}

def @func_6956() -> (Tensor[(2, 14, 1), float32],) {
  %707 = @func_6110() /* ty=Tensor[(2, 14, 1), float32] */;
  (%707,)
}

def @func_6879() -> (Tensor[(9, 11, 12), float32], Tensor[(2, 14, 350), int16]) {
  %720 = fn () -> (Tensor[(9, 11, 12), float32], Tensor[(2, 14, 350), int16]) {
    %708 = @func_5044() /* ty=(Tensor[(350), float64],) */;
    %709 = %708.0;
    %710 = cast(%709, dtype="float64") /* ty=Tensor[(350), float64] */;
    %711 = @func_4520() /* ty=Tensor[(9, 11, 12), float32] */;
    %712 = cast(%711, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
    %713 = reshape(%710, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
    %714 = reshape(%712, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
    %715 = @func_1051(%713, %714) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
    %716 = %715.0;
    %717 = cast(%709, dtype="int16") /* ty=Tensor[(350), int16] */;
    %718 = cast(%716, dtype="int16") /* ty=Tensor[(2, 14, 1), int16] */;
    %719 = multiply(%717, %718) /* ty=Tensor[(2, 14, 350), int16] */;
    (%711, %719)
  };
  %720() /* ty=(Tensor[(9, 11, 12), float32], Tensor[(2, 14, 350), int16]) */
}

def @func_1855(%var_1852: Tensor[(4, 10, 2), float64], %var_1853: Tensor[(1, 126), float32], %var_1854: Tensor[(1008), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) {
  %740 = fn (%var_1827: Tensor[(4, 10, 2), float64], %var_1837: Tensor[(1, 126), float32], %var_1838: Tensor[(1008), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) {
    %721 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %722 = cast(meta[relay.Constant][42] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %723 = reshape(%722, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
    %724 = @func_1104(%723) /* ty=Tensor[(4, 10, 2), float64] */;
    %725 = cast(%var_1827, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
    %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
    %727 = cast(%724, dtype="int16") /* ty=Tensor[(4, 10, 2), int16] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %729 = cast(%var_1837, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
    %730 = cast(%var_1838, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %731 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
    %732 = cast(%731, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
    %733 = reshape(%729, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
    %734 = reshape(%730, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
    %735 = reshape(%732, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %736 = @func_578(%733, %734, %735) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
    %737 = %721.0;
    %738 = right_shift(%727, %728) /* ty=Tensor[(4, 10, 2), int16] */;
    %739 = %736.3;
    (%737, %731, meta[relay.Constant][42] /* ty=Tensor[(20), float64] */, %738, %739, %var_1837, %var_1838)
  };
  %740(%var_1852, %var_1853, %var_1854) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(20), float64], Tensor[(4, 10, 2), int16], Tensor[(9, 8, 14), float64], Tensor[(1, 126), float32], Tensor[(1008), float32]) */
}

def @func_1599(%var_1589: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) {
  %741 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %742 = cast(%var_1589, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %746 = cast(%var_1589, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %747 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%741, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = not_equal(%744, %745) /* ty=Tensor[(5, 7, 10), bool] */;
  %751 = equal(%748, %749) /* ty=Tensor[(5, 7, 10), bool] */;
  (%750, %751)
}

def @func_7010(%var_6984: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) {
  %752 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %753 = cast(%var_6984, dtype="float64") /* ty=Tensor[(350), float64] */;
  %754 = cast(meta[relay.Constant][43] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %755 = reshape(%753, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %756 = reshape(%754, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %757 = @func_1051(%755, %756) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %758 = %752.0;
  %759 = %757.5;
  (%758, %759, %var_6984, meta[relay.Constant][43] /* ty=Tensor[(1188), int8] */)
}

def @func_3202(%var_3185: Tensor[(350), float64]) -> (Tensor[(1188), int8], Tensor[(350), float64], Tensor[(9, 11, 12), float32]) {
  %760 = cast(%var_3185, dtype="float64") /* ty=Tensor[(350), float64] */;
  %761 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %762 = %761.2;
  %763 = cast(%762, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %764 = reshape(%760, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %765 = reshape(%763, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %766 = @func_1051(%764, %765) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %767 = cast(%762, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  %768 = %766.6;
  %769 = tan(%767) /* ty=Tensor[(9, 11, 12), float32] */;
  (%768, %var_3185, %769)
}

def @func_7820() -> (Tensor[(2, 14, 1), float32],) {
  %772 = fn () -> (Tensor[(2, 14, 1), float32],) {
    %770 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(2, 14, 1), float32],) */
}

def @func_9256(%var_9255: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(350), float64]) {
  %779 = fn (%var_9243: Tensor[(350), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(350), float64]) {
    %773 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %774 = cast(%var_9243, dtype="float64") /* ty=Tensor[(350), float64] */;
    %775 = reshape(%774, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %776 = @func_7010(%775) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(9, 11, 12), bool], Tensor[(350), float64], Tensor[(1188), int8]) */;
    %777 = %773.0;
    %778 = %776.0;
    (%777, %778, %var_9243)
  };
  %779(%var_9255) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32], Tensor[(350), float64]) */
}

def @func_9430() -> Tensor[(126), float32] {
  %780 = @func_5847() /* ty=(Tensor[(126), float32],) */;
  %780.0
}

def @func_1107(%var_1105: Tensor[(1, 10, 2), float64]) -> Tensor[(4, 10, 2), float64] {
  @func_1104(%var_1105) /* ty=Tensor[(4, 10, 2), float64] */
}

def @func_2963() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %781 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %783 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %784 = tan(%782) /* ty=Tensor[(5, 7, 10), float32] */;
  %785 = %783.0;
  (%784, %785)
}

def @func_2965() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_1104(%var_1097: Tensor[(1, 10, 2), float64]) -> Tensor[(4, 10, 2), float64] {
  %786 = cast(%var_1097, dtype="float64") /* ty=Tensor[(1, 10, 2), float64] */;
  %787 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  floor_mod(%786, %787) /* ty=Tensor[(4, 10, 2), float64] */
}

def @func_4138(%var_4137: Tensor[(4, 10, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) {
  %801 = fn (%var_4111: Tensor[(4, 10, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) {
    %788 = cast(meta[relay.Constant][46] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %789 = reshape(%788, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %790 = @func_2507(%789) /* ty=(Tensor[(5, 7, 10), uint8],) */;
    %791 = cast(meta[relay.Constant][45] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %792 = reshape(%791, newshape=[1, 10, 2]) /* ty=Tensor[(1, 10, 2), float64] */;
    %793 = @func_1104(%792) /* ty=Tensor[(4, 10, 2), float64] */;
    %794 = cast(%var_4111, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
    %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %796 = cast(%793, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
    %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %798 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
    %799 = %790.0;
    %800 = bitwise_or(%796, %797) /* ty=Tensor[(4, 10, 2), uint64] */;
    (%798, meta[relay.Constant][45] /* ty=Tensor[(20), float64] */, %799, meta[relay.Constant][46] /* ty=Tensor[(350), float32] */, %800)
  };
  %801(%var_4137) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */
}

def @func_9106(%var_9104: Tensor[(3, 10, 15), int32]) -> (Tensor[(3, 10, 15), int32], Tensor[(3, 10, 15), bool], Tensor[(9, 11, 12), bool], Tensor[(350), float32], Tensor[(80), float64]) {
  @func_9103(%var_9104) /* ty=(Tensor[(3, 10, 15), int32], Tensor[(3, 10, 15), bool], Tensor[(9, 11, 12), bool], Tensor[(350), float32], Tensor[(80), float64]) */
}

def @func_151(%var_131: Tensor[(7, 2, 14), float32]) -> (Tensor[(7, 2, 14), bool],) {
  %802 = cast(%var_131, dtype="bool") /* ty=Tensor[(7, 2, 14), bool] */;
  %803 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(7, 2, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 2, 14), float32] */, dtype="bool") /* ty=Tensor[(7, 2, 14), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %806 = not_equal(%804, %805) /* ty=Tensor[(7, 2, 14), bool] */;
  (%806,)
}

def @func_6669() -> (Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */
}

def @func_5538() -> (Tensor[(350), float64],) {
  @func_5536() /* ty=(Tensor[(350), float64],) */
}

def @func_3851(%var_3840: Tensor[(2, 14, 11), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 11), bool]) {
  %807 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %808 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %809 = %808.0;
  %810 = cast(%809, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %811 = cast(%var_3840, dtype="bool") /* ty=Tensor[(2, 14, 11), bool] */;
  %812 = %807.0;
  %813 = logical_and(%810, %811) /* ty=Tensor[(2, 14, 11), bool] */;
  (%812, %813)
}

def @func_3971() -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float32], Tensor[(126), float32], Tensor[(1188), int8]) {
  %814 = @func_3320() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %815 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %816 = cast(meta[relay.Constant][48] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %817 = cast(meta[relay.Constant][49] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %818 = reshape(%816, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %819 = reshape(%817, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %820 = @func_3898(%818, %819) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) */;
  %821 = %814.0;
  %822 = %815.0;
  %823 = %820.0;
  (%821, %822, %823, meta[relay.Constant][48] /* ty=Tensor[(126), float32] */, meta[relay.Constant][49] /* ty=Tensor[(1188), int8] */)
}

def @func_3296() -> Tensor[(2, 14, 1), float64] {
  @func_3294() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_8586() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64]) {
  %827 = fn () -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64]) {
    %824 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %825 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    %826 = %824.0;
    (%825, %826)
  };
  %827() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_1054(%var_1052: Tensor[(175, 2), float64], %var_1053: Tensor[(1188), int8]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
  %844 = fn (%var_1031: Tensor[(175, 2), float64], %var_1049: Tensor[(1188), int8]) -> (Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) {
    %828 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %829 = cast(meta[relay.Constant][50] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %830 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 252), float32] */, dtype="float32") /* ty=Tensor[(4, 252), float32] */;
    %831 = cast(%var_1031, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
    %832 = reshape(%829, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
    %833 = reshape(%830, newshape=[9, 8, 14]) /* ty=Tensor[(9, 8, 14), float32] */;
    %834 = reshape(%831, newshape=[350]) /* ty=Tensor[(350), float64] */;
    %835 = @func_578(%832, %833, %834) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */;
    %836 = cast(%var_1049, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %837 = cast(%var_1049, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %838 = reshape(%836, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
    %839 = reshape(%837, newshape=[9, 11, 12]) /* ty=Tensor[(9, 11, 12), int8] */;
    %840 = @func_671(%838, %839) /* ty=(Tensor[(9, 11, 12), bool],) */;
    %841 = %828.0;
    %842 = %835.1;
    %843 = %840.0;
    (%841, %842, meta[relay.Constant][50] /* ty=Tensor[(126, 1), float32] */, meta[relay.Constant][51] /* ty=Tensor[(4, 252), float32] */, %var_1031, %843, %var_1049)
  };
  %844(%var_1052, %var_1053) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */
}

def @func_1753() -> Tensor[(5, 7, 10), float32] {
  @func_1751() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_8736() -> Tensor[(2, 14, 1), float32] {
  @func_8734() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_2220() -> (Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) {
  %853 = fn () -> (Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) {
    %845 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %846 = cast(meta[relay.Constant][52] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %847 = cast(meta[relay.Constant][52] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
    %848 = reshape(%846, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
    %849 = reshape(%847, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
    %850 = @func_449(%848, %849) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
    %851 = %845.2;
    %852 = %850.3;
    (%851, %852, meta[relay.Constant][52] /* ty=Tensor[(350), float64] */)
  };
  %853() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */
}

def @func_3095() -> Tensor[(5, 7, 10), float32] {
  %855 = fn () -> Tensor[(5, 7, 10), float32] {
    %854 = @func_2963() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %854.0
  };
  %855() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_9038() -> (Tensor[(2, 14, 1), float64],) {
  %856 = @func_7269() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %857 = %856.0;
  (%857,)
}

def @func_2402() -> (Tensor[(2, 14, 1), float32],) {
  @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */
}

def @func_7760() -> (Tensor[(14, 3, 11), float32], Tensor[(84), float64]) {
  %862 = fn () -> (Tensor[(14, 3, 11), float32], Tensor[(84), float64]) {
    %858 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 3, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 11), float32] */;
    %859 = @func_5629() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */;
    %860 = cos(%858) /* ty=Tensor[(14, 3, 11), float32] */;
    %861 = %859.2;
    (%860, %861)
  };
  %862() /* ty=(Tensor[(14, 3, 11), float32], Tensor[(84), float64]) */
}

def @func_6288() -> (Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16], Tensor[(9, 11, 12), bool], Tensor[(56, 1), float32]) {
  @func_6286() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16], Tensor[(9, 11, 12), bool], Tensor[(56, 1), float32]) */
}

def @func_8444() -> (Tensor[(12, 4, 11), float32], Tensor[(196), float32], Tensor[(7, 2, 14), float64]) {
  %863 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 11), float32] */;
  %864 = cast(meta[relay.Constant][55] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %865 = reshape(%864, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
  %866 = @func_151(%865) /* ty=(Tensor[(7, 2, 14), bool],) */;
  %867 = %866.0;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(7, 2, 14), float64] */;
  %869 = tan(%863) /* ty=Tensor[(12, 4, 11), float32] */;
  %870 = log10(%868) /* ty=Tensor[(7, 2, 14), float64] */;
  (%869, meta[relay.Constant][55] /* ty=Tensor[(196), float32] */, %870)
}

def @func_2457() -> (Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) {
  %871 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %872 = %871.2;
  %873 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 11, 12), bool] */, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%872, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %877 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %878 = power(%875, %876) /* ty=Tensor[(9, 11, 12), float64] */;
  (%877, %878)
}

def @func_6111() -> Tensor[(2, 14, 1), float32] {
  %880 = fn () -> Tensor[(2, 14, 1), float32] {
    %879 = @func_2122() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %879.1
  };
  %880() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_4923(%var_4922: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) {
  %896 = fn (%var_4887: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) {
    %881 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
    %882 = cast(%var_4887, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
    %884 = cast(%881, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %886 = cast(meta[relay.Constant][57] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %887 = reshape(%886, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
    %888 = @func_151(%887) /* ty=(Tensor[(7, 2, 14), bool],) */;
    %889 = %888.0;
    %890 = cast(%889, dtype="uint64") /* ty=Tensor[(7, 2, 14), uint64] */;
    %891 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(196), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %892 = cast(meta[relay.Constant][57] /* ty=Tensor[(196), float32] */, dtype="uint64") /* ty=Tensor[(196), uint64] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %894 = less(%884, %885) /* ty=Tensor[(5, 7, 10), bool] */;
    %895 = left_shift(%892, %893) /* ty=Tensor[(196), uint64] */;
    (%894, %895)
  };
  %896(%var_4922) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(196), uint64]) */
}

def @func_4703() -> Tensor[(2, 14, 1), float64] {
  %897 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %897.0
}

def @func_6193() -> Tensor[(9, 11, 12), float64] {
  %899 = fn () -> Tensor[(9, 11, 12), float64] {
    %898 = @func_2457() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), float64]) */;
    %898.1
  };
  %899() /* ty=Tensor[(9, 11, 12), float64] */
}

def @func_2621() -> (Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), float32]) {
  %900 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %901 = @func_2219() /* ty=(Tensor[(2, 14, ?), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64]) */;
  %902 = %900.1;
  %903 = %901.0;
  (%902, %903)
}

def @func_5046() -> (Tensor[(350), float64],) {
  @func_5044() /* ty=(Tensor[(350), float64],) */
}

def @func_6720(%var_6718: Tensor[(80), float64]) -> (Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) {
  @func_6717(%var_6718) /* ty=(Tensor[(2, 14, ?), bool], Tensor[(20), float64], Tensor[(80), float64], Tensor[(5, 7, 10), uint64], Tensor[(350), float64]) */
}

def @func_5687() -> Tensor[(9, 11, 12), float64] {
  %905 = fn () -> Tensor[(9, 11, 12), float64] {
    %904 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
    %904.0
  };
  %905() /* ty=Tensor[(9, 11, 12), float64] */
}

def @func_7167(%var_7152: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, 350), bool], Tensor[(2, 14, ?), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16]) {
  %906 = @func_4999() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %907 = %906.2;
  %908 = @func_5044() /* ty=(Tensor[(350), float64],) */;
  %909 = %908.0;
  %910 = cast(%907, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %911 = cast(%909, dtype="bool") /* ty=Tensor[(350), bool] */;
  %912 = cast(%var_7152, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %913 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%907, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %916 = cast(%909, dtype="float64") /* ty=Tensor[(350), float64] */;
  %917 = cast(%909, dtype="float64") /* ty=Tensor[(350), float64] */;
  %918 = reshape(%916, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %919 = reshape(%917, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %920 = @func_449(%918, %919) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %921 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
  %922 = cast(%var_7152, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %923 = reshape(%922, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %924 = @func_3601(%923) /* ty=(Tensor[(2, 14, 1), float32], Tensor[(2, 14, ?), int16], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32], Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, ?), float64]) */;
  %925 = logical_and(%910, %911) /* ty=Tensor[(2, 14, 350), bool] */;
  %926 = multiply(%914, %915) /* ty=Tensor[(2, 14, ?), float64] */;
  %927 = %920.4;
  %928 = %921.0;
  %929 = @func_3721() /* ty=Tensor[(9, 11, 12), bool] */;
  %930 = %924.1;
  (%925, %926, %927, %928, %929, %930)
}

def @func_904() -> (Tensor[(2, 14, 1), float64],) {
  %934 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %931 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    %932 = cast(%931, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %933 = cos(%932) /* ty=Tensor[(2, 14, 1), float64] */;
    (%933,)
  };
  %934() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_5131(%var_5129: Tensor[(5, 7, 10), float32]) -> (Tensor[(2, 14, ?), float32], Tensor[(5, 7, 10), uint8], Tensor[(9, 11, 12), bool]) {
  @func_5128(%var_5129) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(5, 7, 10), uint8], Tensor[(9, 11, 12), bool]) */
}

def @func_3901(%var_3899: Tensor[(126), float32], %var_3900: Tensor[(1188), int8]) -> (Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) {
  %945 = fn (%var_3891: Tensor[(126), float32], %var_3892: Tensor[(1188), int8]) -> (Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) {
    %935 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %936 = cast(%var_3891, dtype="float32") /* ty=Tensor[(126), float32] */;
    %937 = cast(%var_3892, dtype="int8") /* ty=Tensor[(1188), int8] */;
    %938 = cast(meta[relay.Constant][58] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
    %939 = reshape(%936, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %940 = reshape(%937, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
    %941 = reshape(%938, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
    %942 = @func_1385(%939, %940, %941) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
    %943 = %935.2;
    %944 = %942.15;
    (%943, %944, %var_3891, %var_3892, meta[relay.Constant][58] /* ty=Tensor[(2048), float64] */)
  };
  %945(%var_3899, %var_3900) /* ty=(Tensor[(2, 14, ?), float32], Tensor[(9, 11, 12), bool], Tensor[(126), float32], Tensor[(1188), int8], Tensor[(2048), float64]) */
}

def @func_7563() -> (Tensor[(9, 11, 12), bool], Tensor[(350), float64]) {
  @func_7561() /* ty=(Tensor[(9, 11, 12), bool], Tensor[(350), float64]) */
}

def @func_7399(%var_7394: Tensor[(1, 80), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32], Tensor[(4, 10, 2), uint64], Tensor[(1, 80), float64]) {
  %946 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %947 = @func_6667() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */;
  %948 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %949 = cast(%var_7394, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %950 = reshape(%949, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), float64] */;
  %951 = @func_4136(%950) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(20), float64], Tensor[(5, 7, 10), uint8], Tensor[(350), float32], Tensor[(4, 10, 2), uint64]) */;
  %952 = @func_2710() /* ty=Tensor[(2, 14, 1), float64] */;
  %953 = %946.1;
  %954 = %947.0;
  %955 = %948.0;
  %956 = %951.4;
  (%952, %953, %954, %955, %956, %var_7394)
}

def @func_3071() -> Tensor[(2, 14, 1), float64] {
  %957 = fn () -> Tensor[(2, 14, 1), float64] {
    @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
  };
  %957() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_2710() -> Tensor[(2, 14, 1), float64] {
  %958 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %958.0
}

def @func_3468() -> Tensor[(2, 14, 1), float64] {
  @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_5000() -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %965 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
    %959 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %960 = @func_4665() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32]) */;
    %961 = @func_1890() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %962 = %959.0;
    %963 = %960.1;
    %964 = %961.0;
    (%962, %963, %964)
  };
  %965() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_5375() -> Tensor[(2, 14, 1), float64] {
  %966 = fn () -> Tensor[(2, 14, 1), float64] {
    @func_2710() /* ty=Tensor[(2, 14, 1), float64] */
  };
  %966() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_6844() -> Tensor[(2, 14, 1), float32] {
  %968 = fn () -> Tensor[(2, 14, 1), float32] {
    %967 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %967.0
  };
  %968() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_3470() -> Tensor[(2, 14, 1), float64] {
  @func_3468() /* ty=Tensor[(2, 14, 1), float64] */
}

def @func_4817() -> (Tensor[(2, 14, ?), bool],) {
  %969 = @func_1890() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %970 = %969.0;
  %971 = @func_4755() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) */;
  %972 = %971.1;
  %973 = cast(%972, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %974 = shape_of(%970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%970, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = greater_equal(%975, %976) /* ty=Tensor[(2, 14, ?), bool] */;
  (%977,)
}

def @func_7639(%var_7637: Tensor[(56), float32]) -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) {
  @func_7636(%var_7637) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 56), float64]) */
}

def @func_8012() -> (Tensor[(9, 11, 12), float32], Tensor[(5, 7, 10), float64]) {
  %978 = @func_6116() /* ty=Tensor[(9, 11, 12), bool] */;
  %979 = cast(%978, dtype="float32") /* ty=Tensor[(9, 11, 12), float32] */;
  %980 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %981 = cast(%980, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
  %982 = cosh(%979) /* ty=Tensor[(9, 11, 12), float32] */;
  %983 = erf(%981) /* ty=Tensor[(5, 7, 10), float64] */;
  (%982, %983)
}

def @func_3294() -> Tensor[(2, 14, 1), float64] {
  %984 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %984.1
}

def @func_6811(%var_6809: Tensor[(175, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) {
  @func_6808(%var_6809) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) */
}

def @func_8671(%var_8669: Tensor[(84), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) {
  @func_8668(%var_8669) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) */
}

def @func_7915(%var_7913: Tensor[(1008), float32]) -> (Tensor[(9, 11, 12), bool], Tensor[(9, 8, 14), float32], Tensor[(3, 42), float32], Tensor[(1008), float32], Tensor[(350), float64]) {
  @func_7912(%var_7913) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(9, 8, 14), float32], Tensor[(3, 42), float32], Tensor[(1008), float32], Tensor[(350), float64]) */
}

def @func_6502(%var_6488: Tensor[(56), float32]) -> (Tensor[(196), float32], Tensor[(98, 2), float32], Tensor[(2, 14, 1), float64], Tensor[(1188), int8], Tensor[(9, 11, 12), bool], Tensor[(56), float32], Tensor[(9, 11, 12), float64], Tensor[(2, 14, 56), bool]) {
  %985 = cast(meta[relay.Constant][59] /* ty=Tensor[(98, 2), float32] */, dtype="float32") /* ty=Tensor[(98, 2), float32] */;
  %986 = reshape(%985, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %987 = @func_4425(%986) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) */;
  %988 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %989 = @func_2344() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */;
  %990 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
  %991 = cast(%var_6488, dtype="float32") /* ty=Tensor[(56), float32] */;
  %992 = reshape(%991, newshape=[56]) /* ty=Tensor[(56), float32] */;
  %993 = @func_2850(%992) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) */;
  %994 = %993.2;
  %995 = cast(%990, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %996 = cast(%994, dtype="bool") /* ty=Tensor[(56), bool] */;
  %997 = %987.2;
  %998 = @func_4448() /* ty=Tensor[(2, 14, 1), float64] */;
  %999 = %988.3;
  %1000 = %989.1;
  %1001 = @func_5686() /* ty=Tensor[(9, 11, 12), float64] */;
  %1002 = less_equal(%995, %996) /* ty=Tensor[(2, 14, 56), bool] */;
  (%997, meta[relay.Constant][59] /* ty=Tensor[(98, 2), float32] */, %998, %999, %1000, %var_6488, %1001, %1002)
}

def @func_7723() -> Tensor[(5, 7, 10), float32] {
  %1003 = fn () -> Tensor[(5, 7, 10), float32] {
    @func_1751() /* ty=Tensor[(5, 7, 10), float32] */
  };
  %1003() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_9040() -> (Tensor[(2, 14, 1), float64],) {
  @func_9038() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_2345() -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) {
  %1008 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) {
    %1004 = @func_2266() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float32]) */;
    %1005 = @func_2057() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
    %1006 = %1004.0;
    %1007 = %1005.2;
    (%1006, %1007)
  };
  %1008() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool]) */
}

def @func_10471() -> (Tensor[(2, 14, 1), float64], Tensor[(910), uint16], Tensor[(2, 14, ?), uint8], Tensor[(2, 14, 1), float32]) {
  @func_10469() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(910), uint16], Tensor[(2, 14, ?), uint8], Tensor[(2, 14, 1), float32]) */
}

def @func_2510(%var_2508: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), uint8],) {
  @func_2507(%var_2508) /* ty=(Tensor[(5, 7, 10), uint8],) */
}

def @func_7170(%var_7168: Tensor[(2, 14, 1), float64]) -> (Tensor[(2, 14, 350), bool], Tensor[(2, 14, ?), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16]) {
  @func_7167(%var_7168) /* ty=(Tensor[(2, 14, 350), bool], Tensor[(2, 14, ?), float64], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, ?), int16]) */
}

def @func_3372(%var_3370: Tensor[(9, 15, 6), float64], %var_3371: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
  %1013 = fn (%var_3363: Tensor[(9, 15, 6), float64], %var_3364: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
    %1009 = cast(%var_3364, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
    %1010 = shape_of(%var_3363, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1011 = cast(%var_3363, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
    %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    multiply(%1011, %1012) /* ty=Tensor[(9, 15, 6), float64] */
  };
  %1013(%var_3370, %var_3371) /* ty=Tensor[(9, 15, 6), float64] */
}

def @func_6171() -> (Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) {
  @func_6169() /* ty=(Tensor[(8, 5, 5), int8], Tensor[(9, 11, 12), float32], Tensor[(2, 14, 1), float32], Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(2048), float64]) */
}

def @func_8720() -> (Tensor[(5, 7, 10), float32],) {
  %1015 = fn () -> (Tensor[(5, 7, 10), float32],) {
    %1014 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
    (%1014,)
  };
  %1015() /* ty=(Tensor[(5, 7, 10), float32],) */
}

def @func_8375() -> Tensor[(2, 14, 1), float32] {
  %1017 = fn () -> Tensor[(2, 14, 1), float32] {
    %1016 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %1016.0
  };
  %1017() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_2995() -> (Tensor[(2, 14, 1), float32],) {
  %1019 = fn () -> (Tensor[(2, 14, 1), float32],) {
    %1018 = @func_885() /* ty=Tensor[(2, 14, 1), float32] */;
    (%1018,)
  };
  %1019() /* ty=(Tensor[(2, 14, 1), float32],) */
}

def @func_7269() -> (Tensor[(2, 14, 1), float64],) {
  %1020 = @func_2330() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_9783() -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %1022 = cast(meta[relay.Constant][60] /* ty=Tensor[(350), float64] */, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1023 = reshape(%1022, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %1024 = @func_6808(%1023) /* ty=(Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) */;
  %1025 = %1024.0;
  %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
  %1027 = @func_5374() /* ty=Tensor[(2, 14, 1), float64] */;
  %1028 = log(%1026) /* ty=Tensor[(9, 11, 12), float64] */;
  (%1027, meta[relay.Constant][60] /* ty=Tensor[(350), float64] */, %1028)
}

def @func_674(%var_672: Tensor[(9, 11, 12), int8], %var_673: Tensor[(9, 11, 12), int8]) -> (Tensor[(9, 11, 12), bool],) {
  %1034 = fn (%var_666: Tensor[(9, 11, 12), int8], %var_667: Tensor[(9, 11, 12), int8]) -> (Tensor[(9, 11, 12), bool],) {
    %1029 = cast(%var_667, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
    %1030 = shape_of(%var_666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1031 = cast(%var_666, dtype="bool") /* ty=Tensor[(9, 11, 12), bool] */;
    %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1033 = greater_equal(%1031, %1032) /* ty=Tensor[(9, 11, 12), bool] */;
    (%1033,)
  };
  %1034(%var_672, %var_673) /* ty=(Tensor[(9, 11, 12), bool],) */
}

def @func_7896() -> (Tensor[(2, 14, 1), float32],) {
  %1036 = fn () -> (Tensor[(2, 14, 1), float32],) {
    %1035 = @func_6843() /* ty=Tensor[(2, 14, 1), float32] */;
    (%1035,)
  };
  %1036() /* ty=(Tensor[(2, 14, 1), float32],) */
}

def @func_6958() -> (Tensor[(2, 14, 1), float32],) {
  @func_6956() /* ty=(Tensor[(2, 14, 1), float32],) */
}

def @func_2853(%var_2851: Tensor[(56), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) {
  @func_2850(%var_2851) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), bool], Tensor[(56), float32], Tensor[(16, 8, 16), uint32], Tensor[(7, 2, 14), bool], Tensor[(2, 14, 1), float64]) */
}

def @func_886() -> Tensor[(2, 14, 1), float32] {
  %1038 = fn () -> Tensor[(2, 14, 1), float32] {
    %1037 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
    asin(%1037) /* ty=Tensor[(2, 14, 1), float32] */
  };
  %1038() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_7402(%var_7400: Tensor[(1, 80), float64]) -> (Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32], Tensor[(4, 10, 2), uint64], Tensor[(1, 80), float64]) {
  @func_7399(%var_7400) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(350), float64], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float32], Tensor[(4, 10, 2), uint64], Tensor[(1, 80), float64]) */
}

def @func_9432() -> Tensor[(126), float32] {
  @func_9430() /* ty=Tensor[(126), float32] */
}

def @func_9724() -> Tensor[(5, 7, 10), float32] {
  @func_9722() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_9901() -> (Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), int64]) {
  %1039 = @func_4585() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
  %1040 = %1039.2;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
  %1042 = reshape(%1041, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
  %1043 = @func_1903(%1042) /* ty=(Tensor[(5, 7, 10), int64],) */;
  %1044 = %1043.0;
  (%1040, %1044)
}

def @func_10168() -> Tensor[(2, 14, 1), float32] {
  %1046 = fn () -> Tensor[(2, 14, 1), float32] {
    %1045 = @func_6956() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %1045.0
  };
  %1046() /* ty=Tensor[(2, 14, 1), float32] */
}

def @func_6808(%var_6797: Tensor[(175, 2), float64]) -> (Tensor[(9, 11, 12), bool], Tensor[(1188), int8], Tensor[(175, 2), float64]) {
  %1047 = @func_4230() /* ty=(Tensor[(9, 11, 12), bool],) */;
  %1048 = cast(%var_6797, dtype="float64") /* ty=Tensor[(175, 2), float64] */;
  %1049 = %1047.0;
  %1050 = cast(%1049, dtype="int8") /* ty=Tensor[(9, 11, 12), int8] */;
  %1051 = reshape(%1048, newshape=[175, 2]) /* ty=Tensor[(175, 2), float64] */;
  %1052 = reshape(%1050, newshape=[1188]) /* ty=Tensor[(1188), int8] */;
  %1053 = @func_1051(%1051, %1052) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(126, 1), float32], Tensor[(4, 252), float32], Tensor[(175, 2), float64], Tensor[(9, 11, 12), bool], Tensor[(1188), int8]) */;
  %1054 = %1053.6;
  (%1049, %1054, %var_6797)
}

def @func_1511() -> Tensor[(5, 7, 10), float32] {
  %1056 = fn () -> Tensor[(5, 7, 10), float32] {
    %1055 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %1055.0
  };
  %1056() /* ty=Tensor[(5, 7, 10), float32] */
}

def @func_8898(%var_8896: Tensor[(13, 4, 9), float64], %var_8897: Tensor[(13, 4, 9), float64]) -> (Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) {
  @func_8894(%var_8896, %var_8897) /* ty=(Tensor[(13, 4, 9), float64], Tensor[(13, 4, 9), uint64]) */
}

def @func_10138() -> (Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
  %1066 = fn () -> (Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) {
    %1057 = @func_1448() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(350), float64], Tensor[(2, 14, ?), float32]) */;
    %1058 = @func_6779() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) */;
    %1059 = %1058.2;
    %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(3, 4, 7), float64] */;
    %1061 = reshape(%1060, newshape=[84]) /* ty=Tensor[(84), float64] */;
    %1062 = @func_8668(%1061) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(5, 7, 10), float32], Tensor[(84), float64]) */;
    %1063 = @func_6075() /* ty=Tensor[(2, 14, ?), int8] */;
    %1064 = %1057.2;
    %1065 = %1062.2;
    (%1063, %1064, %1059, %1065)
  };
  %1066() /* ty=(Tensor[(2, 14, ?), int8], Tensor[(2, 14, ?), float32], Tensor[(3, 4, 7), float64], Tensor[(84), float64]) */
}

def @func_1699() -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
  %1070 = fn () -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) {
    %1067 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %1068 = @func_1520() /* ty=Tensor[(5, 7, 10), float32] */;
    %1069 = %1067.0;
    (%1068, %1069)
  };
  %1070() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */
}

def @func_578(%var_548: Tensor[(9, 1, 14), float32], %var_549: Tensor[(9, 8, 14), float32], %var_559: Tensor[(350), float64]) -> (Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) {
  %1071 = cast(%var_548, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %1072 = cast(%var_549, dtype="float32") /* ty=Tensor[(9, 8, 14), float32] */;
  %1073 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1074 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1075 = reshape(%1073, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1076 = reshape(%1074, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1077 = @func_449(%1075, %1076) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %1078 = cast(%var_549, dtype="float64") /* ty=Tensor[(9, 8, 14), float64] */;
  %1079 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1080 = cast(%var_559, dtype="float64") /* ty=Tensor[(350), float64] */;
  %1081 = reshape(%1079, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1082 = reshape(%1080, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float64] */;
  %1083 = @func_449(%1081, %1082) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */;
  %1084 = mod(%1071, %1072) /* ty=Tensor[(9, 8, 14), float32] */;
  %1085 = %1077.5;
  %1086 = acosh(%1078) /* ty=Tensor[(9, 8, 14), float64] */;
  %1087 = %1083.1;
  (%1084, %1085, %var_559, %1086, %1087)
}

def @func_9325() -> (Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
  %1092 = fn () -> (Tensor[(350), float64], Tensor[(9, 11, 12), float64]) {
    %1088 = @func_7690() /* ty=(Tensor[(350), float64], Tensor[(5, 7, 10), int64], Tensor[(2, 14, 1), float32]) */;
    %1089 = @func_5444() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */;
    %1090 = %1088.0;
    %1091 = %1089.0;
    (%1090, %1091)
  };
  %1092() /* ty=(Tensor[(350), float64], Tensor[(9, 11, 12), float64]) */
}

def @func_5153() -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
  %1098 = fn () -> (Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) {
    %1093 = @func_4869() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */;
    %1094 = @func_1698() /* ty=(Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64]) */;
    %1095 = @func_3070() /* ty=Tensor[(2, 14, 1), float64] */;
    %1096 = %1093.1;
    %1097 = %1094.1;
    (%1095, %1096, %1097)
  };
  %1098() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(9, 11, 12), bool], Tensor[(2, 14, 1), float64]) */
}

def @func_5445() -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) {
  %1108 = fn () -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) {
    %1099 = @func_3280() /* ty=Tensor[(9, 11, 12), bool] */;
    %1100 = cast(%1099, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
    %1101 = cast(%1099, dtype="float64") /* ty=Tensor[(9, 11, 12), float64] */;
    %1102 = cast(meta[relay.Constant][62] /* ty=Tensor[(350), float32] */, dtype="float32") /* ty=Tensor[(350), float32] */;
    %1103 = reshape(%1102, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), float32] */;
    %1104 = @func_1903(%1103) /* ty=(Tensor[(5, 7, 10), int64],) */;
    %1105 = rsqrt(%1100) /* ty=Tensor[(9, 11, 12), float64] */;
    %1106 = atan(%1101) /* ty=Tensor[(9, 11, 12), float64] */;
    %1107 = %1104.0;
    (%1105, %1106, %1107, meta[relay.Constant][62] /* ty=Tensor[(350), float32] */)
  };
  %1108() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(5, 7, 10), int64], Tensor[(350), float32]) */
}

def @func_9127(%var_9125: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), float64], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) {
  @func_9124(%var_9125) /* ty=(Tensor[(13, 5, 3), float64], Tensor[(9, 15, 6), float64], Tensor[(810), float64]) */
}

def @func_8734() -> Tensor[(2, 14, 1), float32] {
  %1109 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %1109.0
}

def @func_3321() -> (Tensor[(2, 14, 1), float64],) {
  %1112 = fn () -> (Tensor[(2, 14, 1), float64],) {
    %1110 = @func_903() /* ty=(Tensor[(2, 14, 1), float64],) */;
    %1111 = %1110.0;
    (%1111,)
  };
  %1112() /* ty=(Tensor[(2, 14, 1), float64],) */
}

def @func_5296() -> (Tensor[(2, 14, ?), bool], Tensor[(2, 14, 1), float64], Tensor[(2, 14, ?), int8], Tensor[(9, 132), int8], Tensor[(21, 6), float32], Tensor[(1188), int8], Tensor[(4, 512), float64]) {
  %1113 = @func_2925() /* ty=(Tensor[(2, 14, 1), float32], Tensor[(5, 7, 10), float32]) */;
  %1114 = %1113.0;
  %1115 = @func_1150() /* ty=(Tensor[(2, 14, 1), float64],) */;
  %1116 = %1115.0;
  %1117 = cast(%1116, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %1118 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%1114, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1121 = @func_2016() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64]) */;
  %1122 = cast(%1116, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %1123 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1114, dtype="int8") /* ty=Tensor[(2, 14, 1), int8] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1126 = cast(meta[relay.Constant][63] /* ty=Tensor[(21, 6), float32] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1127 = cast(meta[relay.Constant][64] /* ty=Tensor[(1188), int8] */, dtype="int8") /* ty=Tensor[(1188), int8] */;
  %1128 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 512), float64] */, dtype="float64") /* ty=Tensor[(4, 512), float64] */;
  %1129 = reshape(%1126, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1130 = reshape(%1127, newshape=[9, 132]) /* ty=Tensor[(9, 132), int8] */;
  %1131 = reshape(%1128, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %1132 = @func_1385(%1129, %1130, %1131) /* ty=(Tensor[(2, 14, 15), bool], Tensor[(9, 8, 14), float32], Tensor[(126), float32], Tensor[(1008), float32], Tensor[(350), float64], Tensor[(126, 1), float32], Tensor[(9, 132), int8], Tensor[(2, 14, 1), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(2, 14, 196), int8], Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), uint32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64], Tensor[(9, 11, 12), bool], Tensor[(4, 252), float32]) */;
  %1133 = not_equal(%1119, %1120) /* ty=Tensor[(2, 14, ?), bool] */;
  %1134 = %1121.0;
  %1135 = bitwise_or(%1124, %1125) /* ty=Tensor[(2, 14, ?), int8] */;
  %1136 = %1132.6;
  (%1133, %1134, %1135, %1136, meta[relay.Constant][63] /* ty=Tensor[(21, 6), float32] */, meta[relay.Constant][64] /* ty=Tensor[(1188), int8] */, meta[relay.Constant][65] /* ty=Tensor[(4, 512), float64] */)
}

def @func_583(%var_580: Tensor[(9, 1, 14), float32], %var_581: Tensor[(9, 8, 14), float32], %var_582: Tensor[(350), float64]) -> (Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) {
  @func_578(%var_580, %var_581, %var_582) /* ty=(Tensor[(9, 8, 14), float32], Tensor[(7, 2, 14), bool], Tensor[(350), float64], Tensor[(9, 8, 14), float64], Tensor[(196), float32]) */
}

def @func_3205(%var_3203: Tensor[(350), float64]) -> (Tensor[(1188), int8], Tensor[(350), float64], Tensor[(9, 11, 12), float32]) {
  @func_3202(%var_3203) /* ty=(Tensor[(1188), int8], Tensor[(350), float64], Tensor[(9, 11, 12), float32]) */
}

def @func_4425(%var_4329: Tensor[(196), float32]) -> (Tensor[(5, 7, 10), float32], Tensor[(2, 14, 1), float64], Tensor[(196), float32], Tensor[(5, 7, 10), float32], Tensor[(5, 7, 10), float32], Tensor[(2, 14, 2048), bool]) {
  %1137 = cast(%var_4329, dtype="float32") /* ty=Tensor[(196), float32] */;
  %1138 = reshape(%1137, newshape=[196]) /* ty=Tensor[(196), float32] */;
  %1139 = @func_966(%1138) /* ty=(Tensor[(2, 14, 1), float64], Tensor[(7, 2, 14), bool], Tensor[(196), float32]) */;
  %1140 = cast(meta[relay.Constant][66] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %1141 = reshape(%1140, newshape=[2048]) /* ty=Tensor[(2048), float64] */;
  %1142 = @func_2723(%1141) /* ty=(Tensor[(5, 7, 10), float32], Tensor[(16, 8, 16), float64], Tensor[(2048), float64]) */;
  %1143 = @func_2994() /* ty=(Tensor[(2, 14, 1), float32],) */;
  %1144 = %1143.0;
  %1145 = cast(meta[relay.Constant][66] /* ty=Tensor[(2048), float64] */, dtype="uint16") /* ty=Tensor[(2048), uint16] */;
  %1146 = cast(%1144, dtype="uint16") /* ty=Tensor[(2, 14, 1), uint16] */;
  %1147 = bitwise_xor(%1145, %1146) /* ty=Tensor[(2, 14, 2048), uint16] */;
  %1148 = cast(%1144, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %1149 = cast(%1147, dtype="bool") /* ty=Tensor[(2, 14, 2048), bool] */;
  %1150 = @func_1510() /* ty=Tensor[(5, 7, 10), float32] */;
  %1151 = %1139.0;
  %1152 = @func_1751() /* ty=Tensor[(5, 7, 10), float32] */;
  %1153 = %1142.0;
  %1154 = less_equal(%1148, %1149) /* ty=Tensor[(2, 14, 2048), bool] */;
  (%1150, %1151, %var_4329, %1152, %1153, %1154)
}

def @func_2689(%var_2687: Tensor[(2, 14, 2), float32], %var_2688: Tensor[(16, 128), float64]) -> (Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) {
  %1164 = fn (%var_2653: Tensor[(2, 14, 2), float32], %var_2665: Tensor[(16, 128), float64]) -> (Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) {
    %1155 = @func_2400() /* ty=(Tensor[(2, 14, 1), float32],) */;
    %1156 = %1155.0;
    %1157 = cast(%1156, dtype="float64") /* ty=Tensor[(2, 14, 1), float64] */;
    %1158 = cast(%var_2653, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
    %1159 = cast(%var_2665, dtype="float64") /* ty=Tensor[(16, 128), float64] */;
    %1160 = reshape(%1159, newshape=[16, 8, 16]) /* ty=Tensor[(16, 8, 16), float64] */;
    %1161 = @func_314(%1160) /* ty=(Tensor[(16, 8, 16), float64],) */;
    %1162 = divide(%1157, %1158) /* ty=Tensor[(2, 14, 2), float64] */;
    %1163 = %1161.0;
    (%1162, %1163, %var_2665)
  };
  %1164(%var_2687, %var_2688) /* ty=(Tensor[(2, 14, 2), float64], Tensor[(16, 8, 16), float64], Tensor[(16, 128), float64]) */
}

def @func_316(%var_315: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64],) {
  %1167 = fn (%var_310: Tensor[(16, 8, 16), float64]) -> (Tensor[(16, 8, 16), float64],) {
    %1165 = cast(%var_310, dtype="float64") /* ty=Tensor[(16, 8, 16), float64] */;
    %1166 = exp(%1165) /* ty=Tensor[(16, 8, 16), float64] */;
    (%1166,)
  };
  %1167(%var_315) /* ty=(Tensor[(16, 8, 16), float64],) */
}

def @func_452(%var_450: Tensor[(5, 7, 10), float64], %var_451: Tensor[(5, 7, 10), float64]) -> (Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) {
  %1189 = fn (%var_358: Tensor[(5, 7, 10), float64], %var_412: Tensor[(5, 7, 10), float64]) -> (Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) {
    %1168 = cast(meta[relay.Constant][67] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %1169 = reshape(%1168, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
    %1170 = @func_151(%1169) /* ty=(Tensor[(7, 2, 14), bool],) */;
    %1171 = cast(%var_358, dtype="float64") /* ty=Tensor[(5, 7, 10), float64] */;
    %1172 = exp(%1171) /* ty=Tensor[(5, 7, 10), float64] */;
    %1173 = cast(%var_412, dtype="uint64") /* ty=Tensor[(5, 7, 10), uint64] */;
    %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1175 = cast(%1172, dtype="uint64") /* ty=Tensor[(5, 7, 10), uint64] */;
    %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1177 = %1170.0;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
    %1179 = reshape(%1178, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
    %1180 = @func_151(%1179) /* ty=(Tensor[(7, 2, 14), bool],) */;
    %1181 = cast(%1172, dtype="float32") /* ty=Tensor[(5, 7, 10), float32] */;
    %1182 = %1180.0;
    %1183 = cast(%1182, dtype="float32") /* ty=Tensor[(7, 2, 14), float32] */;
    %1184 = reshape(%1183, newshape=[7, 2, 14]) /* ty=Tensor[(7, 2, 14), float32] */;
    %1185 = @func_151(%1184) /* ty=(Tensor[(7, 2, 14), bool],) */;
    %1186 = subtract(%1175, %1176) /* ty=Tensor[(5, 7, 10), uint64] */;
    %1187 = log(%1181) /* ty=Tensor[(5, 7, 10), float32] */;
    %1188 = %1185.0;
    (%1177, meta[relay.Constant][67] /* ty=Tensor[(196), float32] */, %1186, %1182, %1187, %1188)
  };
  %1189(%var_450, %var_451) /* ty=(Tensor[(7, 2, 14), bool], Tensor[(196), float32], Tensor[(5, 7, 10), uint64], Tensor[(7, 2, 14), bool], Tensor[(5, 7, 10), float32], Tensor[(7, 2, 14), bool]) */
}

def @func_6781() -> (Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) {
  @func_6779() /* ty=(Tensor[(9, 11, 12), float64], Tensor[(9, 11, 12), float64], Tensor[(3, 4, 7), float64]) */
}

def @func_1602(%var_1600: Tensor[(5, 7, 10), float32]) -> (Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) {
  @func_1599(%var_1600) /* ty=(Tensor[(5, 7, 10), bool], Tensor[(5, 7, 10), bool]) */
}

def @func_4757() -> (Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) {
  @func_4755() /* ty=(Tensor[(2, 14, 1), float64], Tensor[(2, 14, 1), float64], Tensor[(196), float32]) */
}

def @func_9480(%var_9478: int64, %var_9479: Tensor[(9, 1, 11), int64]) -> (Tensor[(9, 1, 11), int64],) {
  %1193 = fn (%var_9465: int64, %var_9466: Tensor[(9, 1, 11), int64]) -> (Tensor[(9, 1, 11), int64],) {
    %1190 = cast(%var_9465, dtype="int64") /* ty=int64 */;
    %1191 = cast(%var_9466, dtype="int64") /* ty=Tensor[(9, 1, 11), int64] */;
    %1192 = left_shift(%1190, %1191) /* ty=Tensor[(9, 1, 11), int64] */;
    (%1192,)
  };
  %1193(%var_9478, %var_9479) /* ty=(Tensor[(9, 1, 11), int64],) */
}

def @func_8014() -> (Tensor[(9, 11, 12), float32], Tensor[(5, 7, 10), float64]) {
  @func_8012() /* ty=(Tensor[(9, 11, 12), float32], Tensor[(5, 7, 10), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen643/build/output.py:3423: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen643/build/output.py", line 3428, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(462) tvmgen_default_fused_cast_cast_reshape_less_equal_kernel0(signed char* __restrict__ T_less_equal, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_less_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(((int)threadIdx.x))])));
}

extern "C" __global__ void __launch_bounds__(462) tvmgen_default_fused_cast_atan_kernel0(float* __restrict__ T_atan, uchar* __restrict__ placeholder) {
  T_atan[(((int)threadIdx.x))] = atanf(((float)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


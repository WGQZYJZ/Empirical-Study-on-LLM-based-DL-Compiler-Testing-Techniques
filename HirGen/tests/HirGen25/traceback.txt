==========mod==========
#[version = "0.0.5"]
def @func_5681(%var_5608: Tensor[(14, 6, 14), float32], %var_5609: Tensor[(14, 6, 14), float32], %var_5628: Tensor[(14, 6, 14), float32], %var_5633: Tensor[(20), float64], %var_5634: Tensor[(40), float64], %var_5646: Tensor[(14, 6, 14), float32]) -> (Tensor[(14, 6, 14), float32], Tensor[(6, 6, 3), float32], Tensor[(14, 6, 14), bool], Tensor[(840), float32], Tensor[(20), float64], Tensor[(40), float64], Tensor[(14, 6, 14), bool]) {
  %0 = cast(%var_5609, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
  %1 = shape_of(%var_5608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5608, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %4 = cast(%var_5628, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %5 = shape_of(%var_5609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_5609, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = cast(%var_5633, dtype="float64") /* ty=Tensor[(20), float64] */;
  %9 = cast(%var_5634, dtype="float64") /* ty=Tensor[(40), float64] */;
  %10 = reshape(%8, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %11 = reshape(%9, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
  %12 = @func_3663(%10, %11) /* ty=(Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) */;
  %13 = cast(%var_5609, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
  %14 = cos(%13) /* ty=Tensor[(14, 6, 14), float32] */;
  %15 = cast(%var_5646, dtype="int8") /* ty=Tensor[(14, 6, 14), int8] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="int8") /* ty=Tensor[(14, 6, 14), int8] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %19 = add(%17, %18) /* ty=Tensor[(14, 6, 14), int8] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
  %21 = tan(%20) /* ty=Tensor[(14, 6, 14), float64] */;
  %22 = cast(%19, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = floor_divide(%2, %3) /* ty=Tensor[(14, 6, 14), float32] */;
  %27 = @func_4256() /* ty=Tensor[(6, 6, 3), float32] */;
  %28 = less(%6, %7) /* ty=Tensor[(14, 6, 14), bool] */;
  %29 = %12.2;
  %30 = greater_equal(%24, %25) /* ty=Tensor[(14, 6, 14), bool] */;
  (%26, %27, %28, %29, %var_5633, %var_5634, %30)
}

def @func_6806() -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float64], Tensor[(6, 6, 3), float32]) {
  %31 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
  %32 = %31.1;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %34 = reshape(%33, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), float32] */;
  %35 = @func_5017(%34) /* ty=(Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) */;
  %36 = %35.0;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %38 = @func_5984() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %39 = sinh(%37) /* ty=Tensor[(6, 6, 3), float64] */;
  %40 = %38.0;
  (%32, %39, %40)
}

def @func_1388(%var_1377: Tensor[(14, 10, 6), float32]) -> Tensor[(14, 10, 6), float32] {
  %41 = cast(%var_1377, dtype="float32") /* ty=Tensor[(14, 10, 6), float32] */;
  rsqrt(%41) /* ty=Tensor[(14, 10, 6), float32] */
}

def @func_3948(%var_3932: int16) -> Tensor[(5, 8, 15), bool] {
  %42 = cast(%var_3932, dtype="bool") /* ty=bool */;
  %43 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 8, 15), int16] */, dtype="bool") /* ty=Tensor[(5, 8, 15), bool] */;
  greater(%42, %43) /* ty=Tensor[(5, 8, 15), bool] */
}

def @func_5929(%var_5921: Tensor[(2304), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  %44 = cast(%var_5921, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %45 = reshape(%44, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %46 = @func_1728(%45) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %47 = @func_5206() /* ty=Tensor[(6, 6, 3), float32] */;
  %48 = %46.0;
  (%47, %48, %var_5921)
}

def @func_2992(%var_2957: Tensor[(2, 8), uint32], %var_2974: Tensor[(3, 108), float32], %var_2975: Tensor[(1260), int32]) -> (Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) {
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 8), uint32] */, dtype="uint32") /* ty=Tensor[(2, 8), uint32] */;
  %50 = shape_of(%var_2957, dtype="int32") /* ty=Tensor[(2), int32] */;
  %51 = cast(%var_2957, dtype="uint32") /* ty=Tensor[(2, 8), uint32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %53 = cast(%var_2974, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %54 = cast(%var_2975, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %55 = reshape(%53, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), float32] */;
  %56 = reshape(%54, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
  %57 = @func_2251(%55, %56) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) */;
  %58 = cast(%var_2974, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
  %59 = logical_xor(%51, %52) /* ty=Tensor[(2, 8), uint32] */;
  %60 = %57.1;
  %61 = exp(%58) /* ty=Tensor[(3, 108), float32] */;
  (%59, %60, %var_2975, %61)
}

def @func_3836() -> (Tensor[(6, 6, 3), float32],) {
  %62 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %63 = %62.0;
  (%63,)
}

def @func_3849() -> (Tensor[(6, 6, 3), float32],) {
  %64 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %65 = %64.0;
  (%65,)
}

def @func_5756(%var_5705: Tensor[(9, 16, 12), float64], %var_5730: Tensor[(9, 16, 12), float64]) -> Tensor[(9, 16, 12), uint16] {
  %66 = cast(%var_5705, dtype="float64") /* ty=Tensor[(9, 16, 12), float64] */;
  %67 = log2(%66) /* ty=Tensor[(9, 16, 12), float64] */;
  %68 = cast(%var_5730, dtype="uint16") /* ty=Tensor[(9, 16, 12), uint16] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="uint16") /* ty=Tensor[(9, 16, 12), uint16] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%70, %71) /* ty=Tensor[(9, 16, 12), uint16] */
}

def @func_5103() -> (Tensor[(6, 6, 3), float32],) {
  %72 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %73 = %72.0;
  (%73,)
}

def @func_5943(%var_5936: Tensor[(7, 2, 3), float64], %var_5937: Tensor[(7, 2, 3), float64]) -> (Tensor[(7, 2, 3), float64],) {
  %74 = cast(%var_5937, dtype="float64") /* ty=Tensor[(7, 2, 3), float64] */;
  %75 = shape_of(%var_5936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_5936, dtype="float64") /* ty=Tensor[(7, 2, 3), float64] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %78 = floor_mod(%76, %77) /* ty=Tensor[(7, 2, 3), float64] */;
  (%78,)
}

def @func_1603(%var_1578: Tensor[(15, 5, 14), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) {
  %79 = cast(%var_1578, dtype="float64") /* ty=Tensor[(15, 5, 14), float64] */;
  %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %81 = cast(4.8136f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %82 = reshape(%80, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %83 = reshape(%81, newshape=[]) /* ty=float64 */;
  %84 = @func_267(%82, %83) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
  %85 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %86 = reshape(%85, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %87 = atan(%79) /* ty=Tensor[(15, 5, 14), float64] */;
  %88 = %84.2;
  %89 = @func_1388(%86) /* ty=Tensor[(14, 10, 6), float32] */;
  (%87, %88, meta[relay.Constant][2] /* ty=Tensor[(1, 840), float32] */, 4.8136f64 /* ty=float64 */, %89)
}

def @func_5038() -> Tensor[(6, 6, 3), float32] {
  %90 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %90.0
}

def @func_2251(%var_2239: Tensor[(9, 6, 6), float32], %var_2246: Tensor[(1260), int32]) -> (Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) {
  %91 = cast(%var_2239, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
  %92 = cast(%var_2246, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %93 = cast(%var_2246, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %94 = reshape(%92, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %95 = reshape(%93, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %96 = log2(%91) /* ty=Tensor[(9, 6, 6), float32] */;
  %97 = @func_932(%94, %95) /* ty=Tensor[(7, 15, 12), int32] */;
  (%96, %97, %var_2246)
}

def @func_4975(%var_4950: uint64, %var_4951: Tensor[(3, 14, 12), uint64]) -> (Tensor[(3, 14, 12), uint64], Tensor[(6, 6, 3), float32]) {
  %98 = cast(%var_4950, dtype="uint64") /* ty=uint64 */;
  %99 = cast(%var_4951, dtype="uint64") /* ty=Tensor[(3, 14, 12), uint64] */;
  %100 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %101 = logical_xor(%98, %99) /* ty=Tensor[(3, 14, 12), uint64] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_6023() -> Tensor[(6, 6, 3), float32] {
  @func_6011() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6455() -> Tensor[(6, 6, 3), float32] {
  %103 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %103.0
}

def @func_3885(%var_3859: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) {
  %104 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %105 = cast(%var_3859, dtype="float64") /* ty=Tensor[(160), float64] */;
  %106 = reshape(%105, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
  %107 = @func_3736(%106) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) */;
  %108 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %109 = %104.0;
  %110 = %107.7;
  %111 = %108.0;
  (%109, %110, %var_3859, %111)
}

def @func_3623() -> (Tensor[(6, 6, 3), float32],) {
  %112 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %113 = atanh(%112) /* ty=Tensor[(6, 6, 3), float32] */;
  (%113,)
}

def @func_2354(%var_2308: Tensor[(16, 2, 5), float64], %var_2309: Tensor[(16, 2, 5), float64], %var_2326: Tensor[(12, 70), float32], %var_2327: float64) -> (Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) {
  %114 = cast(%var_2309, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
  %115 = shape_of(%var_2308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_2308, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %118 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 2, 5), float64] */, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
  %119 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_2309, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %122 = cast(%var_2326, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %123 = cast(%var_2327, dtype="float64") /* ty=float64 */;
  %124 = reshape(%122, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %125 = reshape(%123, newshape=[]) /* ty=float64 */;
  %126 = @func_267(%124, %125) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
  %127 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 2, 5), float64] */, dtype="int8") /* ty=Tensor[(16, 2, 5), int8] */;
  %128 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_2309, dtype="int8") /* ty=Tensor[(16, 2, 5), int8] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %131 = bitwise_or(%129, %130) /* ty=Tensor[(16, 2, 5), int8] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
  %133 = mod(%116, %117) /* ty=Tensor[(16, 2, 5), float64] */;
  %134 = less(%120, %121) /* ty=Tensor[(16, 2, 5), bool] */;
  %135 = %126.2;
  %136 = sinh(%132) /* ty=Tensor[(16, 2, 5), float64] */;
  (%133, %134, %135, %var_2326, %var_2327, %136)
}

def @func_2848(%var_2825: Tensor[(7, 8, 6), float32], %var_2830: Tensor[(1144), float64], %var_2834: Tensor[(2304), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(8, 13, 11), int64], Tensor[(1144), float64], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %138 = cast(%var_2825, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %139 = cast(%var_2830, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %140 = reshape(%139, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), float64] */;
  %141 = @func_1671(%140) /* ty=(Tensor[(8, 13, 11), int64],) */;
  %142 = cast(%var_2834, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %143 = reshape(%142, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %144 = @func_1728(%143) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %145 = maximum(%137, %138) /* ty=Tensor[(7, 8, 6), float32] */;
  %146 = %141.0;
  %147 = %144.0;
  (%145, %146, %var_2830, %147, %var_2834)
}

def @func_4189() -> (Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) {
  %148 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 15), float64] */;
  %149 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %150 = atanh(%148) /* ty=Tensor[(13, 15), float64] */;
  %151 = %149.0;
  (%150, %151)
}

def @func_5492() -> (Tensor[(6, 6, 3), float32],) {
  %152 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
  %153 = %152.0;
  (%153,)
}

def @func_6283(%var_6272: Tensor[(1, 13, 12), float64], %var_6276: Tensor[(160), float64], %var_6277: Tensor[(840), float32]) -> (Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) {
  %154 = cast(%var_6272, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
  %155 = cast(%var_6276, dtype="float64") /* ty=Tensor[(160), float64] */;
  %156 = cast(%var_6277, dtype="float32") /* ty=Tensor[(840), float32] */;
  %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 45), float64] */, dtype="float64") /* ty=Tensor[(6, 45), float64] */;
  %158 = reshape(%155, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %159 = reshape(%156, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %160 = reshape(%157, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %161 = @func_4937(%158, %159, %160) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) */;
  %162 = atanh(%154) /* ty=Tensor[(1, 13, 12), float64] */;
  %163 = %161.3;
  (%162, %163, %var_6276, %var_6277, meta[relay.Constant][7] /* ty=Tensor[(6, 45), float64] */)
}

def @func_3801(%var_3765: Tensor[(30, 9), float64], %var_3797: Tensor[(60), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) {
  %164 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %167 = reshape(%165, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %168 = reshape(%166, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(1053), float32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(1053), float32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %171 = cast(%var_3765, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %172 = reshape(%169, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), float32] */;
  %173 = reshape(%170, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), float32] */;
  %174 = reshape(%171, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %175 = @func_524(%172, %173, %174) /* ty=(Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
  %176 = %175.2;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(270), float32] */;
  %178 = cast(meta[relay.Constant][10] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %179 = reshape(%178, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %180 = cast(%var_3797, dtype="float64") /* ty=Tensor[(60), float64] */;
  %181 = reshape(%180, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %182 = %164.0;
  %183 = @func_932(%167, %168) /* ty=Tensor[(7, 15, 12), int32] */;
  %184 = sigmoid(%177) /* ty=Tensor[(270), float32] */;
  %185 = @func_1388(%179) /* ty=Tensor[(14, 10, 6), float32] */;
  %186 = @func_3406(%181) /* ty=Tensor[(15, 4), float64] */;
  (%182, meta[relay.Constant][8] /* ty=Tensor[(1053), float32] */, %var_3765, %183, meta[relay.Constant][9] /* ty=Tensor[(1260), int32] */, %184, %185, meta[relay.Constant][10] /* ty=Tensor[(840), float32] */, %186, %var_3797)
}

def @func_6253() -> (Tensor[(6, 6, 3), float32],) {
  %187 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %188 = %187.0;
  (%188,)
}

def @func_4164(%var_4155: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(20), float64], Tensor[(1, 210), int64], Tensor[(160), float64]) {
  %189 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %190 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %191 = cast(%var_4155, dtype="float64") /* ty=Tensor[(160), float64] */;
  %192 = reshape(%190, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %193 = reshape(%191, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %194 = @func_4044(%192, %193) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %195 = %189.0;
  %196 = %194.7;
  (%195, %196, meta[relay.Constant][11] /* ty=Tensor[(1, 210), int64] */, %var_4155)
}

def @func_5894(%var_5851: Tensor[(12, 70), float32]) -> (Tensor[(5, 5, 2), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), float32], Tensor[(6, 6, 3), float32]) {
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %198 = cast(%var_5851, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %199 = reshape(%198, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %200 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %201 = sinh(%197) /* ty=Tensor[(5, 5, 2), float32] */;
  %202 = @func_1388(%199) /* ty=Tensor[(14, 10, 6), float32] */;
  %203 = %200.0;
  (%201, %202, %var_5851, %203)
}

def @func_7096() -> Tensor[(6, 6, 3), float32] {
  @func_6480() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_3663(%var_3640: Tensor[(4, 1, 5), float64], %var_3641: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) {
  %204 = cast(%var_3640, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
  %205 = cast(%var_3641, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
  %206 = cast(meta[relay.Constant][13] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %207 = reshape(%206, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %208 = power(%204, %205) /* ty=Tensor[(4, 2, 5), float64] */;
  %209 = @func_1388(%207) /* ty=Tensor[(14, 10, 6), float32] */;
  (%208, %209, meta[relay.Constant][13] /* ty=Tensor[(840), float32] */)
}

def @func_476(%var_466: Tensor[(14, 7, 13), int8]) -> (Tensor[(14, 7, 13), int8],) {
  %210 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %211 = cast(%var_466, dtype="int8") /* ty=Tensor[(14, 7, 13), int8] */;
  %212 = logical_xor(%210, %211) /* ty=Tensor[(14, 7, 13), int8] */;
  (%212,)
}

def @func_932(%var_923: Tensor[(7, 15, 12), int32], %var_924: Tensor[(7, 15, 12), int32]) -> Tensor[(7, 15, 12), int32] {
  %213 = cast(%var_924, dtype="int32") /* ty=Tensor[(7, 15, 12), int32] */;
  %214 = shape_of(%var_923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_923, dtype="int32") /* ty=Tensor[(7, 15, 12), int32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%215, %216) /* ty=Tensor[(7, 15, 12), int32] */
}

def @func_2936(%var_2891: Tensor[(13, 6, 1), int32], %var_2892: Tensor[(13, 6, 2), int32], %var_2914: Tensor[(480), uint32]) -> (Tensor[(13, 6, 2), int32], Tensor[(240), float64], Tensor[(15, 1, 16), uint16], Tensor[(6, 8, 10), float32], Tensor[(13, 6, 480), float64]) {
  %217 = cast(%var_2891, dtype="int32") /* ty=Tensor[(13, 6, 1), int32] */;
  %218 = cast(%var_2892, dtype="int32") /* ty=Tensor[(13, 6, 2), int32] */;
  %219 = cast(-0.693678f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %220 = cast(meta[relay.Constant][15] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %221 = reshape(%219, newshape=[]) /* ty=float64 */;
  %222 = reshape(%220, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %223 = @func_60(%221, %222) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %226 = cast(-0.693678f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %227 = cast(%var_2914, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %228 = cast(%var_2914, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %229 = reshape(%227, newshape=[6, 8, 10]) /* ty=Tensor[(6, 8, 10), uint32] */;
  %230 = reshape(%228, newshape=[6, 8, 10]) /* ty=Tensor[(6, 8, 10), uint32] */;
  %231 = @func_1995(%229, %230) /* ty=(Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) */;
  %232 = cast(%var_2914, dtype="float64") /* ty=Tensor[(480), float64] */;
  %233 = cast(%var_2891, dtype="float64") /* ty=Tensor[(13, 6, 1), float64] */;
  %234 = add(%217, %218) /* ty=Tensor[(13, 6, 2), int32] */;
  %235 = right_shift(%225, %226) /* ty=Tensor[(15, 1, 16), uint16] */;
  %236 = %231.0;
  %237 = divide(%232, %233) /* ty=Tensor[(13, 6, 480), float64] */;
  (%234, meta[relay.Constant][15] /* ty=Tensor[(240), float64] */, %235, %236, %237)
}

def @func_6441(%var_6411: Tensor[(1440), float32], %var_6412: float64) -> (float64, Tensor[(1440), float32], Tensor[(8, 30), float64], Tensor[(6, 6, 3), int32], Tensor[(11, 15, 10), int8], Tensor[(1650), int8]) {
  %238 = cast(%var_6411, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %239 = cast(%var_6412, dtype="float64") /* ty=float64 */;
  %240 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 30), float64] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %241 = reshape(%238, newshape=[12, 10, 12]) /* ty=Tensor[(12, 10, 12), float32] */;
  %242 = reshape(%239, newshape=[]) /* ty=float64 */;
  %243 = reshape(%240, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
  %244 = @func_3601(%241, %242, %243) /* ty=(Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) */;
  %245 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="int32") /* ty=Tensor[(6, 6, 3), int32] */;
  %248 = cast(%var_6412, dtype="int32") /* ty=int32 */;
  %249 = cast(meta[relay.Constant][17] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %250 = reshape(%249, newshape=[11, 15, 10]) /* ty=Tensor[(11, 15, 10), int8] */;
  %251 = @func_4859(%250) /* ty=(Tensor[(11, 15, 10), int8],) */;
  %252 = %244.2;
  %253 = bitwise_or(%247, %248) /* ty=Tensor[(6, 6, 3), int32] */;
  %254 = %251.0;
  (%252, %var_6411, meta[relay.Constant][16] /* ty=Tensor[(8, 30), float64] */, %253, %254, meta[relay.Constant][17] /* ty=Tensor[(1650), int8] */)
}

def @func_6630(%var_6623: Tensor[(1, 1050), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 5, 14), float64], Tensor[(1, 1050), float64]) {
  %255 = cast(%var_6623, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
  %256 = reshape(%255, newshape=[15, 5, 14]) /* ty=Tensor[(15, 5, 14), float64] */;
  %257 = @func_1603(%256) /* ty=(Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) */;
  %258 = @func_6455() /* ty=Tensor[(6, 6, 3), float32] */;
  %259 = %257.0;
  (%258, %259, %var_6623)
}

def @func_1671(%var_1664: Tensor[(8, 13, 11), float64]) -> (Tensor[(8, 13, 11), int64],) {
  %260 = cast(%var_1664, dtype="float64") /* ty=Tensor[(8, 13, 11), float64] */;
  %261 = tan(%260) /* ty=Tensor[(8, 13, 11), float64] */;
  %262 = cast(%var_1664, dtype="int64") /* ty=Tensor[(8, 13, 11), int64] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="int64") /* ty=Tensor[(8, 13, 11), int64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %266 = bitwise_or(%264, %265) /* ty=Tensor[(8, 13, 11), int64] */;
  (%266,)
}

def @func_3406(%var_3398: Tensor[(15, 4), float64]) -> Tensor[(15, 4), float64] {
  %267 = cast(%var_3398, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  log2(%267) /* ty=Tensor[(15, 4), float64] */
}

def @func_426(%var_421: Tensor[(2, 9, 15), float64], %var_422: Tensor[(2, 9, 15), float64]) -> (Tensor[(2, 9, 15), bool],) {
  %268 = cast(%var_422, dtype="bool") /* ty=Tensor[(2, 9, 15), bool] */;
  %269 = shape_of(%var_421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%var_421, dtype="bool") /* ty=Tensor[(2, 9, 15), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %272 = not_equal(%270, %271) /* ty=Tensor[(2, 9, 15), bool] */;
  (%272,)
}

def @func_6471() -> Tensor[(6, 6, 3), float32] {
  @func_6011() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6672() -> Tensor[(13, 15), float64] {
  %273 = @func_4189() /* ty=(Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) */;
  %273.0
}

def @func_5243(%var_5238: Tensor[(16, 1, 1), float64]) -> Tensor[(16, 1, 1), float64] {
  %274 = cast(%var_5238, dtype="float64") /* ty=Tensor[(16, 1, 1), float64] */;
  atanh(%274) /* ty=Tensor[(16, 1, 1), float64] */
}

def @func_6939(%var_6919: Tensor[(840), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 1, 16), bool], Tensor[(840), float32], float64, Tensor[(15, 4), float64], Tensor[(3, 90), float64], Tensor[(3, 20), float64]) {
  %275 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %276 = cast(%var_6919, dtype="float32") /* ty=Tensor[(840), float32] */;
  %277 = cast(7.10093f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %278 = reshape(%276, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %279 = reshape(%277, newshape=[]) /* ty=float64 */;
  %280 = @func_267(%278, %279) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
  %281 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 90), float64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
  %282 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 20), float64] */, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %283 = reshape(%281, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %284 = reshape(%282, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %285 = @func_3801(%283, %284) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) */;
  %286 = %275.0;
  %287 = %280.0;
  %288 = %285.8;
  (%286, %287, %var_6919, 7.10093f64 /* ty=float64 */, %288, meta[relay.Constant][18] /* ty=Tensor[(3, 90), float64] */, meta[relay.Constant][19] /* ty=Tensor[(3, 20), float64] */)
}

def @func_2777(%var_2738: Tensor[(14, 5, 4), int64], %var_2739: Tensor[(14, 5, 4), int64], %var_2755: Tensor[(840), float32], %var_2756: float64) -> (Tensor[(14, 5, 4), bool], Tensor[(240), float64], Tensor[(840), float32], float64, Tensor[(14, 5, 4), float32]) {
  %289 = cast(%var_2739, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
  %290 = shape_of(%var_2738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_2738, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %293 = cast(%var_2755, dtype="float32") /* ty=Tensor[(840), float32] */;
  %294 = cast(%var_2756, dtype="float64") /* ty=float64 */;
  %295 = reshape(%293, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %296 = reshape(%294, newshape=[]) /* ty=float64 */;
  %297 = @func_267(%295, %296) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
  %298 = cast(%var_2739, dtype="float64") /* ty=Tensor[(14, 5, 4), float64] */;
  %299 = erf(%298) /* ty=Tensor[(14, 5, 4), float64] */;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
  %301 = equal(%291, %292) /* ty=Tensor[(14, 5, 4), bool] */;
  %302 = %297.2;
  %303 = sin(%300) /* ty=Tensor[(14, 5, 4), float32] */;
  (%301, %302, %var_2755, %var_2756, %303)
}

def @func_4554(%var_4525: Tensor[(6, 6, 3), float32], %var_4549: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) {
  %304 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %305 = %304.0;
  %306 = cast(%var_4525, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %310 = cast(%var_4549, dtype="float64") /* ty=Tensor[(160), float64] */;
  %311 = reshape(%310, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %312 = @func_3885(%311) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) */;
  %313 = floor_divide(%308, %309) /* ty=Tensor[(6, 6, 3), float32] */;
  %314 = %312.1;
  (%313, %314, %var_4549)
}

def @func_6704() -> (Tensor[(6, 6, 3), float32],) {
  %315 = @func_5492() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %316 = %315.0;
  (%316,)
}

def @func_6129() -> (Tensor[(6, 6, 3), float32], int16, int16, Tensor[(600), bool]) {
  %317 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %318 = cast(meta[relay.Constant][21] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
  %319 = reshape(%317, newshape=[]) /* ty=int16 */;
  %320 = reshape(%318, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), bool] */;
  %321 = @func_4745(%319, %320) /* ty=(Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) */;
  %322 = @func_5038() /* ty=Tensor[(6, 6, 3), float32] */;
  %323 = %321.1;
  (%322, %323, meta[relay.Constant][20] /* ty=int16 */, meta[relay.Constant][21] /* ty=Tensor[(600), bool] */)
}

def @func_1995(%var_1969: Tensor[(6, 8, 10), uint32], %var_1970: Tensor[(6, 8, 10), uint32]) -> (Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) {
  %324 = cast(%var_1970, dtype="bool") /* ty=Tensor[(6, 8, 10), bool] */;
  %325 = shape_of(%var_1969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%var_1969, dtype="bool") /* ty=Tensor[(6, 8, 10), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = less_equal(%326, %327) /* ty=Tensor[(6, 8, 10), bool] */;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(6, 8, 10), float32] */;
  %330 = cast(meta[relay.Constant][22] /* ty=Tensor[(2304, 1), float32] */, dtype="float32") /* ty=Tensor[(2304, 1), float32] */;
  %331 = reshape(%330, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %332 = @func_1728(%331) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
  %335 = asinh(%329) /* ty=Tensor[(6, 8, 10), float32] */;
  %336 = sinh(%334) /* ty=Tensor[(9, 16, 16), float64] */;
  (%335, meta[relay.Constant][22] /* ty=Tensor[(2304, 1), float32] */, %336)
}

def @func_671(%var_662: Tensor[(3, 10, 12), float64], %var_663: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), bool] {
  %337 = cast(%var_663, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
  %338 = shape_of(%var_662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%var_662, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%339, %340) /* ty=Tensor[(3, 10, 12), bool] */
}

def @func_524(%var_492: Tensor[(13, 9, 9), float32], %var_493: Tensor[(13, 9, 9), float32], %var_503: Tensor[(270), float64]) -> (Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %341 = cast(%var_493, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %342 = shape_of(%var_492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_492, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %345 = cast(%var_503, dtype="float64") /* ty=Tensor[(270), float64] */;
  %346 = cast(%var_503, dtype="float64") /* ty=Tensor[(270), float64] */;
  %347 = reshape(%345, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %348 = reshape(%346, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %349 = @func_426(%347, %348) /* ty=(Tensor[(2, 9, 15), bool],) */;
  %350 = divide(%343, %344) /* ty=Tensor[(13, 9, 9), float32] */;
  %351 = %349.0;
  (%350, %351, %var_503)
}

def @func_5984() -> (Tensor[(6, 6, 3), float32],) {
  %352 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %353 = %352.0;
  (%353,)
}

def @func_4256() -> Tensor[(6, 6, 3), float32] {
  %354 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %355 = %354.0;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  rsqrt(%356) /* ty=Tensor[(6, 6, 3), float32] */
}

def @main(%var_7154: Tensor[(6, 3, 3), uint64], %var_7155: Tensor[(6, 3, 3), uint64]) -> (Tensor[(6, 3, 3), uint64],) {
  %357 = cast(%var_7155, dtype="uint64") /* ty=Tensor[(6, 3, 3), uint64] */;
  %358 = shape_of(%var_7154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_7154, dtype="uint64") /* ty=Tensor[(6, 3, 3), uint64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %361 = bitwise_xor(%359, %360) /* ty=Tensor[(6, 3, 3), uint64] */;
  (%361,)
}

def @func_4937(%var_4931: Tensor[(160), float64], %var_4932: Tensor[(840), float32], %var_4933: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) {
  %362 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %363 = cast(meta[relay.Constant][23] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %364 = cast(%var_4931, dtype="float64") /* ty=Tensor[(160), float64] */;
  %365 = cast(%var_4932, dtype="float32") /* ty=Tensor[(840), float32] */;
  %366 = cast(%var_4933, dtype="float64") /* ty=Tensor[(270), float64] */;
  %367 = reshape(%363, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float64] */;
  %368 = reshape(%364, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %369 = reshape(%365, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %370 = reshape(%366, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %371 = @func_2428(%367, %368, %369, %370) /* ty=(Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
  %372 = %362.0;
  %373 = %371.6;
  (%372, %373, meta[relay.Constant][23] /* ty=Tensor[(90, 1), float64] */, %var_4931, %var_4932, %var_4933)
}

def @func_60(%var_24: float64, %var_25: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) {
  %374 = cast(%var_24, dtype="float64") /* ty=float64 */;
  %375 = cast(%var_25, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %376 = power(%374, %375) /* ty=Tensor[(15, 1, 16), float64] */;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
  %378 = cast(%var_24, dtype="bool") /* ty=bool */;
  %379 = cast(%376, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
  %380 = greater(%377, %378) /* ty=Tensor[(15, 1, 16), bool] */;
  %381 = log10(%379) /* ty=Tensor[(15, 1, 16), float64] */;
  (%380, %381)
}

def @func_5401() -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) {
  %382 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %383 = %382.0;
  %384 = @func_5229() /* ty=Tensor[(6, 6, 3), float32] */;
  (%383, %384)
}

def @func_6370(%var_6294: Tensor[(8, 14), float64], %var_6354: Tensor[(18, 2), float64], %var_6355: Tensor[(2304), float32], %var_6363: Tensor[(3, 52), float64]) -> (Tensor[(8, 14), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(2304), float32], Tensor[(18, 2), float64], Tensor[(2304), float32], Tensor[(840), float32], Tensor[(3, 52), float64], Tensor[(160), float64]) {
  %385 = cast(%var_6294, dtype="float64") /* ty=Tensor[(8, 14), float64] */;
  %386 = sinh(%385) /* ty=Tensor[(8, 14), float64] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(8, 14), float64] */;
  %388 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %389 = reshape(%388, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %390 = cast(%var_6354, dtype="float64") /* ty=Tensor[(18, 2), float64] */;
  %391 = cast(%var_6355, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %392 = reshape(%390, newshape=[2, 6, 3]) /* ty=Tensor[(2, 6, 3), float64] */;
  %393 = reshape(%391, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
  %394 = @func_2667(%392, %393) /* ty=(Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) */;
  %395 = cast(%var_6363, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
  %396 = cast(meta[relay.Constant][25] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %397 = cast(meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %398 = reshape(%395, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float64] */;
  %399 = reshape(%396, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %400 = reshape(%397, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %401 = @func_6283(%398, %399, %400) /* ty=(Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) */;
  %402 = sin(%387) /* ty=Tensor[(8, 14), float64] */;
  %403 = @func_1388(%389) /* ty=Tensor[(14, 10, 6), float32] */;
  %404 = %394.1;
  %405 = %401.3;
  (%402, %403, meta[relay.Constant][24] /* ty=Tensor[(840), float32] */, %404, %var_6354, %var_6355, %405, %var_6363, meta[relay.Constant][25] /* ty=Tensor[(160), float64] */)
}

def @func_5829(%var_5825: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), int64], Tensor[(210), int64], Tensor[(160), float64]) {
  %406 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %407 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
  %408 = cast(meta[relay.Constant][26] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %409 = cast(%var_5825, dtype="float64") /* ty=Tensor[(160), float64] */;
  %410 = reshape(%408, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %411 = reshape(%409, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %412 = @func_4044(%410, %411) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %413 = %406.0;
  %414 = %407.0;
  %415 = %412.6;
  (%413, %414, %415, meta[relay.Constant][26] /* ty=Tensor[(210), int64] */, %var_5825)
}

def @func_267(%var_238: Tensor[(12, 5, 14), float32], %var_255: float64) -> (Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) {
  %416 = cast(%var_255, dtype="float64") /* ty=float64 */;
  %417 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %418 = reshape(%416, newshape=[]) /* ty=float64 */;
  %419 = reshape(%417, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %420 = @func_60(%418, %419) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %421 = cast(%var_238, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
  %422 = sinh(%421) /* ty=Tensor[(12, 5, 14), float32] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %424 = atan(%423) /* ty=Tensor[(12, 5, 14), float64] */;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %426 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(%422, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %429 = %420.0;
  %430 = mod(%427, %428) /* ty=Tensor[(12, 5, 14), float64] */;
  (%429, %var_255, meta[relay.Constant][27] /* ty=Tensor[(240), float64] */, %430)
}

def @func_6176(%var_6159: uint64, %var_6160: Tensor[(16, 1, 9), uint64], %var_6174: Tensor[(160), float64]) -> (Tensor[(16, ?, 9), bool], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), float32], Tensor[(400), uint16], Tensor[(20), float64], Tensor[(160), float64]) {
  %431 = cast(%var_6159, dtype="uint64") /* ty=uint64 */;
  %432 = cast(%var_6160, dtype="uint64") /* ty=Tensor[(16, 1, 9), uint64] */;
  %433 = bitwise_xor(%431, %432) /* ty=Tensor[(16, 1, 9), uint64] */;
  %434 = cast(%var_6160, dtype="bool") /* ty=Tensor[(16, 1, 9), bool] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="bool") /* ty=Tensor[(16, 1, 9), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %438 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %439 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %440 = reshape(%438, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %441 = reshape(%439, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %442 = cast(meta[relay.Constant][29] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %443 = reshape(%442, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %444 = @func_5429(%443) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) */;
  %445 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %446 = cast(%var_6174, dtype="float64") /* ty=Tensor[(160), float64] */;
  %447 = reshape(%445, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %448 = reshape(%446, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %449 = @func_4044(%447, %448) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %450 = less(%436, %437) /* ty=Tensor[(16, ?, 9), bool] */;
  %451 = @func_1752(%440, %441) /* ty=Tensor[(7, 6, 5), int64] */;
  %452 = %444.1;
  %453 = %449.7;
  (%450, %451, meta[relay.Constant][28] /* ty=Tensor[(210), int64] */, %452, meta[relay.Constant][29] /* ty=Tensor[(400), uint16] */, %453, %var_6174)
}

def @func_4745(%var_4725: int16, %var_4729: Tensor[(5, 8, 15), bool]) -> (Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) {
  %454 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %455 = cast(%var_4725, dtype="int16") /* ty=int16 */;
  %456 = reshape(%455, newshape=[]) /* ty=int16 */;
  %457 = @func_3948(%456) /* ty=Tensor[(5, 8, 15), bool] */;
  %458 = cast(%var_4729, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %462 = divide(%460, %461) /* ty=Tensor[(5, 8, 15), float64] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
  %464 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %465 = cast(%var_4725, dtype="float64") /* ty=float64 */;
  %466 = reshape(%464, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %467 = reshape(%465, newshape=[]) /* ty=float64 */;
  %468 = @func_267(%466, %467) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
  %469 = %454.0;
  %470 = sin(%463) /* ty=Tensor[(5, 8, 15), float32] */;
  %471 = %468.1;
  (%469, %var_4725, %470, %471, meta[relay.Constant][30] /* ty=Tensor[(6, 140), float32] */)
}

def @func_1752(%var_1746: Tensor[(7, 6, 5), int64], %var_1747: Tensor[(7, 6, 5), int64]) -> Tensor[(7, 6, 5), int64] {
  %472 = cast(%var_1747, dtype="int64") /* ty=Tensor[(7, 6, 5), int64] */;
  %473 = shape_of(%var_1746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_1746, dtype="int64") /* ty=Tensor[(7, 6, 5), int64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%474, %475) /* ty=Tensor[(7, 6, 5), int64] */
}

def @func_5520(%var_5516: Tensor[(11, 8, 14), float64]) -> Tensor[(11, 8, 14), float64] {
  %476 = cast(%var_5516, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  sqrt(%476) /* ty=Tensor[(11, 8, 14), float64] */
}

def @func_1304(%var_1288: Tensor[(10, 5, 8), uint16], %var_1289: Tensor[(10, 5, 8), uint16]) -> (Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) {
  %477 = cast(%var_1289, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %478 = shape_of(%var_1288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%var_1288, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %481 = cast(%var_1288, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %482 = not_equal(%479, %480) /* ty=Tensor[(10, 5, 8), bool] */;
  %483 = atan(%481) /* ty=Tensor[(10, 5, 8), float32] */;
  (%482, %483)
}

def @func_2711(%var_2672: uint16, %var_2673: Tensor[(7, 13, 9), uint16], %var_2682: Tensor[(11, 210), int64], %var_2696: Tensor[(1260), int32]) -> (Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) {
  %484 = cast(%var_2672, dtype="uint16") /* ty=uint16 */;
  %485 = cast(%var_2673, dtype="uint16") /* ty=Tensor[(7, 13, 9), uint16] */;
  %486 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %487 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %488 = reshape(%486, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %489 = reshape(%487, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %490 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 324), float32] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
  %491 = cast(%var_2696, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %492 = reshape(%490, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), float32] */;
  %493 = reshape(%491, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
  %494 = @func_2251(%492, %493) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) */;
  %495 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 210), int64] */, dtype="int32") /* ty=Tensor[(1, 210), int32] */;
  %496 = cast(%var_2682, dtype="int32") /* ty=Tensor[(11, 210), int32] */;
  %497 = subtract(%495, %496) /* ty=Tensor[(11, 210), int32] */;
  %498 = cast(%497, dtype="float32") /* ty=Tensor[(11, 210), float32] */;
  %499 = left_shift(%484, %485) /* ty=Tensor[(7, 13, 9), uint16] */;
  %500 = @func_1752(%488, %489) /* ty=Tensor[(7, 6, 5), int64] */;
  %501 = %494.1;
  %502 = acosh(%498) /* ty=Tensor[(11, 210), float32] */;
  (%499, %500, %501, meta[relay.Constant][32] /* ty=Tensor[(1, 324), float32] */, %var_2696, %502)
}

def @func_4044(%var_4006: Tensor[(210), int64], %var_4024: Tensor[(160), float64]) -> (Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) {
  %503 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %504 = cast(meta[relay.Constant][34] /* ty=Tensor[(819), uint16] */, dtype="uint16") /* ty=Tensor[(819), uint16] */;
  %505 = cast(meta[relay.Constant][35] /* ty=Tensor[(2310), int64] */, dtype="int64") /* ty=Tensor[(2310), int64] */;
  %506 = cast(meta[relay.Constant][36] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %507 = reshape(%503, newshape=[]) /* ty=uint16 */;
  %508 = reshape(%504, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), uint16] */;
  %509 = reshape(%505, newshape=[11, 210]) /* ty=Tensor[(11, 210), int64] */;
  %510 = reshape(%506, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
  %511 = @func_2711(%507, %508, %509, %510) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) */;
  %512 = cast(%var_4006, dtype="int64") /* ty=Tensor[(210), int64] */;
  %513 = cast(%var_4006, dtype="int64") /* ty=Tensor[(210), int64] */;
  %514 = reshape(%512, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %515 = reshape(%513, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %516 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %519 = exp(%518) /* ty=Tensor[(6, 6, 3), float64] */;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %521 = asin(%520) /* ty=Tensor[(6, 6, 3), float32] */;
  %522 = cast(%517, dtype="int64") /* ty=Tensor[(6, 6, 3), int64] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%521, dtype="int64") /* ty=Tensor[(6, 6, 3), int64] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %526 = cast(%var_4024, dtype="float64") /* ty=Tensor[(160), float64] */;
  %527 = reshape(%526, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
  %528 = @func_3736(%527) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) */;
  %529 = cast(%521, dtype="uint32") /* ty=Tensor[(6, 6, 3), uint32] */;
  %530 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
  %531 = %511.0;
  %532 = @func_1752(%514, %515) /* ty=Tensor[(7, 6, 5), int64] */;
  %533 = add(%524, %525) /* ty=Tensor[(6, 6, 3), int64] */;
  %534 = %528.6;
  %535 = left_shift(%529, %530) /* ty=Tensor[(6, 6, 3), uint32] */;
  (%531, meta[relay.Constant][34] /* ty=Tensor[(819), uint16] */, meta[relay.Constant][35] /* ty=Tensor[(2310), int64] */, meta[relay.Constant][36] /* ty=Tensor[(1260), int32] */, %532, %var_4006, %533, %534, %var_4024, %535)
}

def @func_1728(%var_1724: Tensor[(9, 16, 16), float32]) -> (Tensor[(9, 16, 16), float32],) {
  %536 = cast(%var_1724, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %537 = cos(%536) /* ty=Tensor[(9, 16, 16), float32] */;
  (%537,)
}

def @func_5188() -> (Tensor[(6, 6, 3), float32],) {
  %538 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %539 = %538.0;
  (%539,)
}

def @func_4107(%var_4093: Tensor[(13, 16, 11), float64]) -> (Tensor[(13, 16, 11), float64], Tensor[(3, 10, 12), bool], Tensor[(360), float64]) {
  %540 = cast(%var_4093, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %541 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(13, 16, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = cast(meta[relay.Constant][38] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %545 = cast(meta[relay.Constant][38] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %546 = reshape(%544, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %547 = reshape(%545, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %548 = floor_mod(%542, %543) /* ty=Tensor[(13, 16, 11), float64] */;
  %549 = @func_671(%546, %547) /* ty=Tensor[(3, 10, 12), bool] */;
  (%548, %549, meta[relay.Constant][38] /* ty=Tensor[(360), float64] */)
}

def @func_5017(%var_4993: Tensor[(6, 6, 3), float32]) -> (Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) {
  %550 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %551 = %550.0;
  %552 = cast(%var_4993, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%551, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %556 = power(%554, %555) /* ty=Tensor[(6, 6, 3), float64] */;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %558 = acos(%557) /* ty=Tensor[(6, 6, 3), float64] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %560 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 40), float64] */, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
  %561 = reshape(%559, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), float32] */;
  %562 = reshape(%560, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %563 = @func_4554(%561, %562) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) */;
  %564 = %563.1;
  (%558, %564, meta[relay.Constant][39] /* ty=Tensor[(4, 40), float64] */)
}

def @func_6480() -> Tensor[(6, 6, 3), float32] {
  %565 = @func_6253() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %565.0
}

def @func_6011() -> Tensor[(6, 6, 3), float32] {
  %566 = @func_5492() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %566.0
}

def @func_6544() -> (Tensor[(6, 6, 3), float32],) {
  %567 = @func_6480() /* ty=Tensor[(6, 6, 3), float32] */;
  (%567,)
}

def @func_4786() -> Tensor[(6, 6, 3), float32] {
  %568 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %568.0
}

def @func_5206() -> Tensor[(6, 6, 3), float32] {
  @func_4786() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_2428(%var_2402: Tensor[(3, 2, 15), float64], %var_2406: Tensor[(160), float64], %var_2407: Tensor[(840), float32], %var_2426: Tensor[(270), float64]) -> (Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %569 = cast(%var_2402, dtype="float64") /* ty=Tensor[(3, 2, 15), float64] */;
  %570 = cast(%var_2406, dtype="float64") /* ty=Tensor[(160), float64] */;
  %571 = cast(%var_2406, dtype="float64") /* ty=Tensor[(160), float64] */;
  %572 = cast(%var_2407, dtype="float32") /* ty=Tensor[(840), float32] */;
  %573 = cast(-5.97523f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %574 = reshape(%570, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %575 = reshape(%571, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %576 = reshape(%572, newshape=[12, 70]) /* ty=Tensor[(12, 70), float32] */;
  %577 = reshape(%573, newshape=[]) /* ty=float64 */;
  %578 = @func_2354(%574, %575, %576, %577) /* ty=(Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) */;
  %579 = cast(%var_2426, dtype="float64") /* ty=Tensor[(270), float64] */;
  %580 = cast(%var_2426, dtype="float64") /* ty=Tensor[(270), float64] */;
  %581 = reshape(%579, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %582 = reshape(%580, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %583 = @func_426(%581, %582) /* ty=(Tensor[(2, 9, 15), bool],) */;
  %584 = sigmoid(%569) /* ty=Tensor[(3, 2, 15), float64] */;
  %585 = %578.1;
  %586 = %583.0;
  (%584, %585, %var_2406, %var_2407, -5.97523f64 /* ty=float64 */, %586, %var_2426)
}

def @func_6862(%var_6811: float32, %var_6812: Tensor[(1, 5, 4), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(?, 5, 4), bool]) {
  %587 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %588 = cast(%var_6811, dtype="float32") /* ty=float32 */;
  %589 = cast(%var_6812, dtype="float32") /* ty=Tensor[(1, 5, 4), float32] */;
  %590 = divide(%588, %589) /* ty=Tensor[(1, 5, 4), float32] */;
  %591 = cast(%590, dtype="float32") /* ty=Tensor[(1, 5, 4), float32] */;
  %592 = sigmoid(%591) /* ty=Tensor[(1, 5, 4), float32] */;
  %593 = cast(%var_6812, dtype="bool") /* ty=Tensor[(1, 5, 4), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(1, 5, 4), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = @func_5038() /* ty=Tensor[(6, 6, 3), float32] */;
  %598 = %587.0;
  %599 = greater(%595, %596) /* ty=Tensor[(?, 5, 4), bool] */;
  (%597, %598, %599)
}

def @func_7136() -> (Tensor[(6, 6, 3), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), uint64]) {
  %600 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %601 = reshape(%600, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %602 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 70), float32] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
  %603 = atan(%602) /* ty=Tensor[(12, 70), float64] */;
  %604 = cast(%603, dtype="uint64") /* ty=Tensor[(12, 70), uint64] */;
  %605 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(12, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %606 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 70), float32] */, dtype="uint64") /* ty=Tensor[(12, 70), uint64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %608 = @func_6023() /* ty=Tensor[(6, 6, 3), float32] */;
  %609 = @func_1388(%601) /* ty=Tensor[(14, 10, 6), float32] */;
  %610 = maximum(%606, %607) /* ty=Tensor[(12, 70), uint64] */;
  (%608, %609, %610)
}

def @func_5170(%var_5162: Tensor[(9, 4, 10), float64]) -> (Tensor[(9, 4, 10), float64],) {
  %611 = cast(%var_5162, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
  %612 = erf(%611) /* ty=Tensor[(9, 4, 10), float64] */;
  (%612,)
}

def @func_4859(%var_4830: Tensor[(11, 15, 10), int8]) -> (Tensor[(11, 15, 10), int8],) {
  %613 = cast(%var_4830, dtype="int8") /* ty=Tensor[(11, 15, 10), int8] */;
  %614 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(11, 15, 10), int8] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %617 = multiply(%615, %616) /* ty=Tensor[(11, 15, 10), int8] */;
  (%617,)
}

def @func_6748(%var_6737: Tensor[(6, 6, 3), float32], %var_6744: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(160), float64], Tensor[(160), float64]) {
  %618 = @func_4256() /* ty=Tensor[(6, 6, 3), float32] */;
  %619 = cast(%var_6737, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%618, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %623 = cast(%var_6744, dtype="float64") /* ty=Tensor[(160), float64] */;
  %624 = reshape(%623, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %625 = @func_3885(%624) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) */;
  %626 = divide(%621, %622) /* ty=Tensor[(6, 6, 3), float32] */;
  %627 = %625.2;
  (%626, %627, %var_6744)
}

def @func_5429(%var_5415: Tensor[(400), uint16]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) {
  %628 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %629 = cast(%var_5415, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %630 = cast(%var_5415, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %631 = reshape(%629, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint16] */;
  %632 = reshape(%630, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint16] */;
  %633 = @func_1304(%631, %632) /* ty=(Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) */;
  %634 = %628.0;
  %635 = @func_5206() /* ty=Tensor[(6, 6, 3), float32] */;
  %636 = %633.1;
  (%634, %635, %636, %var_5415)
}

def @func_3736(%var_3727: Tensor[(160, 1), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) {
  %637 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %638 = cast(%var_3727, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %639 = cast(%var_3727, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %640 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %641 = cast(-9.68719f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %642 = reshape(%638, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %643 = reshape(%639, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %644 = reshape(%640, newshape=[12, 70]) /* ty=Tensor[(12, 70), float32] */;
  %645 = reshape(%641, newshape=[]) /* ty=float64 */;
  %646 = @func_2354(%642, %643, %644, %645) /* ty=(Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) */;
  %647 = cast(meta[relay.Constant][43] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %648 = cast(meta[relay.Constant][44] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %649 = reshape(%647, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %650 = reshape(%648, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
  %651 = @func_3663(%649, %650) /* ty=(Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) */;
  %652 = %637.0;
  %653 = %646.5;
  %654 = %651.1;
  (%652, %653, %var_3727, meta[relay.Constant][42] /* ty=Tensor[(840), float32] */, -9.68719f64 /* ty=float64 */, %654, meta[relay.Constant][43] /* ty=Tensor[(20), float64] */, meta[relay.Constant][44] /* ty=Tensor[(40), float64] */)
}

def @func_5368(%var_5328: float32, %var_5355: Tensor[(819), uint16], %var_5356: Tensor[(1, 2310), int64]) -> (Tensor[(4, 1), float32], Tensor[(6, 6, 3), float32], Tensor[(2, 8), uint32], Tensor[(16), uint32], Tensor[(162, 2), float32], Tensor[(1260), int32], Tensor[(7, 15, 12), int32], Tensor[(819), uint16], Tensor[(1, 2310), int64], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %655 = cast(%var_5328, dtype="float32") /* ty=float32 */;
  %656 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
  %657 = @func_4189() /* ty=(Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) */;
  %658 = cast(meta[relay.Constant][46] /* ty=Tensor[(16), uint32] */, dtype="uint32") /* ty=Tensor[(16), uint32] */;
  %659 = cast(meta[relay.Constant][47] /* ty=Tensor[(162, 2), float32] */, dtype="float32") /* ty=Tensor[(162, 2), float32] */;
  %660 = cast(meta[relay.Constant][48] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %661 = reshape(%658, newshape=[2, 8]) /* ty=Tensor[(2, 8), uint32] */;
  %662 = reshape(%659, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
  %663 = reshape(%660, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
  %664 = @func_2992(%661, %662, %663) /* ty=(Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) */;
  %665 = cast(%var_5328, dtype="uint16") /* ty=uint16 */;
  %666 = cast(%var_5355, dtype="uint16") /* ty=Tensor[(819), uint16] */;
  %667 = cast(%var_5356, dtype="int64") /* ty=Tensor[(1, 2310), int64] */;
  %668 = cast(meta[relay.Constant][48] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %669 = reshape(%665, newshape=[]) /* ty=uint16 */;
  %670 = reshape(%666, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), uint16] */;
  %671 = reshape(%667, newshape=[11, 210]) /* ty=Tensor[(11, 210), int64] */;
  %672 = reshape(%668, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
  %673 = @func_2711(%669, %670, %671, %672) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) */;
  %674 = cast(meta[relay.Constant][49] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %675 = cast(meta[relay.Constant][49] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %676 = reshape(%674, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %677 = reshape(%675, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %678 = @func_426(%676, %677) /* ty=(Tensor[(2, 9, 15), bool],) */;
  %679 = floor_divide(%655, %656) /* ty=Tensor[(4, 1), float32] */;
  %680 = %657.1;
  %681 = %664.0;
  %682 = %673.2;
  %683 = %678.0;
  (%679, %680, %681, meta[relay.Constant][46] /* ty=Tensor[(16), uint32] */, meta[relay.Constant][47] /* ty=Tensor[(162, 2), float32] */, meta[relay.Constant][48] /* ty=Tensor[(1260), int32] */, %682, %var_5355, %var_5356, %683, meta[relay.Constant][49] /* ty=Tensor[(270), float64] */)
}

def @func_3601(%var_3581: Tensor[(12, 10, 12), float32], %var_3598: float64, %var_3599: Tensor[(8, 30), float64]) -> (Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) {
  %684 = cast(%var_3581, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %685 = cast(%var_3598, dtype="float64") /* ty=float64 */;
  %686 = cast(%var_3599, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %687 = reshape(%685, newshape=[]) /* ty=float64 */;
  %688 = reshape(%686, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %689 = @func_60(%687, %688) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %690 = log10(%684) /* ty=Tensor[(12, 10, 12), float32] */;
  %691 = %689.0;
  (%690, %691, %var_3598, %var_3599)
}

def @func_6052(%var_6045: Tensor[(14, 5, 7), float32]) -> (Tensor[(14, 5, 7), bool], Tensor[(14, 5, 7), bool]) {
  %692 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 5, 1), float32] */, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %693 = cast(%var_6045, dtype="bool") /* ty=Tensor[(14, 5, 7), bool] */;
  %694 = cast(%var_6045, dtype="bool") /* ty=Tensor[(14, 5, 7), bool] */;
  %695 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 5, 1), float32] */, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
  %696 = equal(%692, %693) /* ty=Tensor[(14, 5, 7), bool] */;
  %697 = greater_equal(%694, %695) /* ty=Tensor[(14, 5, 7), bool] */;
  (%696, %697)
}

def @func_5559(%var_5554: Tensor[(2, 16, 3), uint8], %var_5555: Tensor[(2, 16, 3), uint8]) -> Tensor[(2, 16, 3), uint8] {
  %698 = cast(%var_5555, dtype="uint8") /* ty=Tensor[(2, 16, 3), uint8] */;
  %699 = shape_of(%var_5554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%var_5554, dtype="uint8") /* ty=Tensor[(2, 16, 3), uint8] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%700, %701) /* ty=Tensor[(2, 16, 3), uint8] */
}

def @func_2667(%var_2652: Tensor[(2, 6, 3), float64], %var_2656: Tensor[(2304), float32]) -> (Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) {
  %702 = cast(%var_2656, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %703 = reshape(%702, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %704 = @func_1728(%703) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %705 = cast(%var_2652, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
  %706 = cos(%705) /* ty=Tensor[(2, 6, 3), float64] */;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
  %708 = %704.0;
  %709 = atan(%707) /* ty=Tensor[(2, 6, 3), float64] */;
  (%708, %var_2656, %709)
}

def @func_5964(%var_5956: float64, %var_5957: Tensor[(8, 8, 1), float64]) -> Tensor[(8, 8, 1), float64] {
  %710 = cast(%var_5956, dtype="float64") /* ty=float64 */;
  %711 = cast(%var_5957, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  subtract(%710, %711) /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_5229() -> Tensor[(6, 6, 3), float32] {
  @func_5206() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6501(%var_6486: Tensor[(90), float64], %var_6487: Tensor[(160), float64], %var_6488: Tensor[(840), float32], %var_6489: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64], Tensor[(16, 1, 1), float64], Tensor[(16), float64]) {
  %712 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %713 = cast(%var_6486, dtype="float64") /* ty=Tensor[(90), float64] */;
  %714 = cast(%var_6487, dtype="float64") /* ty=Tensor[(160), float64] */;
  %715 = cast(%var_6488, dtype="float32") /* ty=Tensor[(840), float32] */;
  %716 = cast(%var_6489, dtype="float64") /* ty=Tensor[(270), float64] */;
  %717 = reshape(%713, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float64] */;
  %718 = reshape(%714, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %719 = reshape(%715, newshape=[840]) /* ty=Tensor[(840), float32] */;
  %720 = reshape(%716, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %721 = @func_2428(%717, %718, %719, %720) /* ty=(Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
  %722 = cast(meta[relay.Constant][51] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %723 = reshape(%722, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %724 = %712.0;
  %725 = %721.6;
  %726 = @func_5243(%723) /* ty=Tensor[(16, 1, 1), float64] */;
  (%724, %725, %var_6486, %var_6487, %var_6488, %var_6489, %726, meta[relay.Constant][51] /* ty=Tensor[(16), float64] */)
}

def @func_4325(%var_4317: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), float32]) {
  %727 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %728 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %731 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="float64") /* ty=Tensor[(12, 3, 14), float64] */;
  %732 = log(%731) /* ty=Tensor[(12, 3, 14), float64] */;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %734 = atan(%733) /* ty=Tensor[(12, 3, 14), float32] */;
  %735 = cast(%var_4317, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %739 = less(%729, %730) /* ty=Tensor[(12, 3, 14), bool] */;
  %740 = floor_divide(%737, %738) /* ty=Tensor[(12, 3, 14), float32] */;
  (%739, %740)
}

def @func_4904(%var_4888: Tensor[(9, 15, 7), float64], %var_4896: Tensor[(60), float64]) -> (Tensor[(15, 4), float64], Tensor[(60), float64], Tensor[(9, 15, 7), float32]) {
  %741 = cast(%var_4896, dtype="float64") /* ty=Tensor[(60), float64] */;
  %742 = reshape(%741, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %743 = cast(%var_4888, dtype="float64") /* ty=Tensor[(9, 15, 7), float64] */;
  %744 = exp(%743) /* ty=Tensor[(9, 15, 7), float64] */;
  %745 = cast(%var_4888, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%744, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %749 = @func_3406(%742) /* ty=Tensor[(15, 4), float64] */;
  %750 = minimum(%747, %748) /* ty=Tensor[(9, 15, 7), float32] */;
  (%749, %var_4896, %750)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5431(%var_5430: Tensor[(400), uint16]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) {
  %9 = fn (%var_5415: Tensor[(400), uint16]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) {
    %0 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %1 = cast(%var_5415, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %2 = cast(%var_5415, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %3 = reshape(%1, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint16] */;
    %4 = reshape(%2, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), uint16] */;
    %5 = @func_1304(%3, %4) /* ty=(Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) */;
    %6 = %0.0;
    %7 = @func_5206() /* ty=Tensor[(6, 6, 3), float32] */;
    %8 = %5.1;
    (%6, %7, %8, %var_5415)
  };
  %9(%var_5430) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) */
}

def @func_6473() -> Tensor[(6, 6, 3), float32] {
  @func_6471() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_2255(%var_2253: Tensor[(9, 6, 6), float32], %var_2254: Tensor[(1260), int32]) -> (Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) {
  @func_2251(%var_2253, %var_2254) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) */
}

def @func_6706() -> (Tensor[(6, 6, 3), float32],) {
  @func_6704() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_2941(%var_2938: Tensor[(13, 6, 1), int32], %var_2939: Tensor[(13, 6, 2), int32], %var_2940: Tensor[(480), uint32]) -> (Tensor[(13, 6, 2), int32], Tensor[(240), float64], Tensor[(15, 1, 16), uint16], Tensor[(6, 8, 10), float32], Tensor[(13, 6, 480), float64]) {
  @func_2936(%var_2938, %var_2939, %var_2940) /* ty=(Tensor[(13, 6, 2), int32], Tensor[(240), float64], Tensor[(15, 1, 16), uint16], Tensor[(6, 8, 10), float32], Tensor[(13, 6, 480), float64]) */
}

def @func_5104() -> (Tensor[(6, 6, 3), float32],) {
  %12 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %10 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %11 = %10.0;
    (%11,)
  };
  %12() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_6054(%var_6053: Tensor[(14, 5, 7), float32]) -> (Tensor[(14, 5, 7), bool], Tensor[(14, 5, 7), bool]) {
  %19 = fn (%var_6045: Tensor[(14, 5, 7), float32]) -> (Tensor[(14, 5, 7), bool], Tensor[(14, 5, 7), bool]) {
    %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 5, 1), float32] */, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
    %14 = cast(%var_6045, dtype="bool") /* ty=Tensor[(14, 5, 7), bool] */;
    %15 = cast(%var_6045, dtype="bool") /* ty=Tensor[(14, 5, 7), bool] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 5, 1), float32] */, dtype="bool") /* ty=Tensor[(14, 5, 1), bool] */;
    %17 = equal(%13, %14) /* ty=Tensor[(14, 5, 7), bool] */;
    %18 = greater_equal(%15, %16) /* ty=Tensor[(14, 5, 7), bool] */;
    (%17, %18)
  };
  %19(%var_6053) /* ty=(Tensor[(14, 5, 7), bool], Tensor[(14, 5, 7), bool]) */
}

def @func_1999(%var_1997: Tensor[(6, 8, 10), uint32], %var_1998: Tensor[(6, 8, 10), uint32]) -> (Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) {
  @func_1995(%var_1997, %var_1998) /* ty=(Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) */
}

def @func_5172(%var_5171: Tensor[(9, 4, 10), float64]) -> (Tensor[(9, 4, 10), float64],) {
  %22 = fn (%var_5162: Tensor[(9, 4, 10), float64]) -> (Tensor[(9, 4, 10), float64],) {
    %20 = cast(%var_5162, dtype="float64") /* ty=Tensor[(9, 4, 10), float64] */;
    %21 = erf(%20) /* ty=Tensor[(9, 4, 10), float64] */;
    (%21,)
  };
  %22(%var_5171) /* ty=(Tensor[(9, 4, 10), float64],) */
}

def @func_6176(%var_6159: uint64, %var_6160: Tensor[(16, 1, 9), uint64], %var_6174: Tensor[(160), float64]) -> (Tensor[(16, ?, 9), bool], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), float32], Tensor[(400), uint16], Tensor[(20), float64], Tensor[(160), float64]) {
  %23 = cast(%var_6159, dtype="uint64") /* ty=uint64 */;
  %24 = cast(%var_6160, dtype="uint64") /* ty=Tensor[(16, 1, 9), uint64] */;
  %25 = bitwise_xor(%23, %24) /* ty=Tensor[(16, 1, 9), uint64] */;
  %26 = cast(%var_6160, dtype="bool") /* ty=Tensor[(16, 1, 9), bool] */;
  %27 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%25, dtype="bool") /* ty=Tensor[(16, 1, 9), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %32 = reshape(%30, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %33 = reshape(%31, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
  %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %35 = reshape(%34, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %36 = @func_5429(%35) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(10, 5, 8), float32], Tensor[(400), uint16]) */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %38 = cast(%var_6174, dtype="float64") /* ty=Tensor[(160), float64] */;
  %39 = reshape(%37, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %40 = reshape(%38, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %41 = @func_4044(%39, %40) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %42 = less(%28, %29) /* ty=Tensor[(16, ?, 9), bool] */;
  %43 = @func_1752(%32, %33) /* ty=Tensor[(7, 6, 5), int64] */;
  %44 = %36.1;
  %45 = %41.7;
  (%42, %43, meta[relay.Constant][1] /* ty=Tensor[(210), int64] */, %44, meta[relay.Constant][2] /* ty=Tensor[(400), uint16] */, %45, %var_6174)
}

def @func_4907(%var_4905: Tensor[(9, 15, 7), float64], %var_4906: Tensor[(60), float64]) -> (Tensor[(15, 4), float64], Tensor[(60), float64], Tensor[(9, 15, 7), float32]) {
  %56 = fn (%var_4888: Tensor[(9, 15, 7), float64], %var_4896: Tensor[(60), float64]) -> (Tensor[(15, 4), float64], Tensor[(60), float64], Tensor[(9, 15, 7), float32]) {
    %46 = cast(%var_4896, dtype="float64") /* ty=Tensor[(60), float64] */;
    %47 = reshape(%46, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
    %48 = cast(%var_4888, dtype="float64") /* ty=Tensor[(9, 15, 7), float64] */;
    %49 = exp(%48) /* ty=Tensor[(9, 15, 7), float64] */;
    %50 = cast(%var_4888, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
    %52 = cast(%49, dtype="float32") /* ty=Tensor[(9, 15, 7), float32] */;
    %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %54 = @func_3406(%47) /* ty=Tensor[(15, 4), float64] */;
    %55 = minimum(%52, %53) /* ty=Tensor[(9, 15, 7), float32] */;
    (%54, %var_4896, %55)
  };
  %56(%var_4905, %var_4906) /* ty=(Tensor[(15, 4), float64], Tensor[(60), float64], Tensor[(9, 15, 7), float32]) */
}

def @func_5020(%var_5018: Tensor[(6, 6, 3), float32]) -> (Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) {
  @func_5017(%var_5018) /* ty=(Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) */
}

def @func_271(%var_269: Tensor[(12, 5, 14), float32], %var_270: float64) -> (Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) {
  @func_267(%var_269, %var_270) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */
}

def @func_6480() -> Tensor[(6, 6, 3), float32] {
  %57 = @func_6253() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %57.0
}

def @func_6866(%var_6864: float32, %var_6865: Tensor[(1, 5, 4), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(?, 5, 4), bool]) {
  @func_6862(%var_6864, %var_6865) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(?, 5, 4), bool]) */
}

def @func_4257() -> Tensor[(6, 6, 3), float32] {
  %61 = fn () -> Tensor[(6, 6, 3), float32] {
    %58 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %59 = %58.0;
    %60 = cast(%59, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    rsqrt(%60) /* ty=Tensor[(6, 6, 3), float32] */
  };
  %61() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_5372(%var_5369: float32, %var_5370: Tensor[(819), uint16], %var_5371: Tensor[(1, 2310), int64]) -> (Tensor[(4, 1), float32], Tensor[(6, 6, 3), float32], Tensor[(2, 8), uint32], Tensor[(16), uint32], Tensor[(162, 2), float32], Tensor[(1260), int32], Tensor[(7, 15, 12), int32], Tensor[(819), uint16], Tensor[(1, 2310), int64], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %91 = fn (%var_5328: float32, %var_5355: Tensor[(819), uint16], %var_5356: Tensor[(1, 2310), int64]) -> (Tensor[(4, 1), float32], Tensor[(6, 6, 3), float32], Tensor[(2, 8), uint32], Tensor[(16), uint32], Tensor[(162, 2), float32], Tensor[(1260), int32], Tensor[(7, 15, 12), int32], Tensor[(819), uint16], Tensor[(1, 2310), int64], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
    %62 = cast(%var_5328, dtype="float32") /* ty=float32 */;
    %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
    %64 = @func_4189() /* ty=(Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) */;
    %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(16), uint32] */, dtype="uint32") /* ty=Tensor[(16), uint32] */;
    %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(162, 2), float32] */, dtype="float32") /* ty=Tensor[(162, 2), float32] */;
    %67 = cast(meta[relay.Constant][6] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
    %68 = reshape(%65, newshape=[2, 8]) /* ty=Tensor[(2, 8), uint32] */;
    %69 = reshape(%66, newshape=[3, 108]) /* ty=Tensor[(3, 108), float32] */;
    %70 = reshape(%67, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
    %71 = @func_2992(%68, %69, %70) /* ty=(Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) */;
    %72 = cast(%var_5328, dtype="uint16") /* ty=uint16 */;
    %73 = cast(%var_5355, dtype="uint16") /* ty=Tensor[(819), uint16] */;
    %74 = cast(%var_5356, dtype="int64") /* ty=Tensor[(1, 2310), int64] */;
    %75 = cast(meta[relay.Constant][6] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
    %76 = reshape(%72, newshape=[]) /* ty=uint16 */;
    %77 = reshape(%73, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), uint16] */;
    %78 = reshape(%74, newshape=[11, 210]) /* ty=Tensor[(11, 210), int64] */;
    %79 = reshape(%75, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
    %80 = @func_2711(%76, %77, %78, %79) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) */;
    %81 = cast(meta[relay.Constant][7] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %83 = reshape(%81, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
    %84 = reshape(%82, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
    %85 = @func_426(%83, %84) /* ty=(Tensor[(2, 9, 15), bool],) */;
    %86 = floor_divide(%62, %63) /* ty=Tensor[(4, 1), float32] */;
    %87 = %64.1;
    %88 = %71.0;
    %89 = %80.2;
    %90 = %85.0;
    (%86, %87, %88, meta[relay.Constant][4] /* ty=Tensor[(16), uint32] */, meta[relay.Constant][5] /* ty=Tensor[(162, 2), float32] */, meta[relay.Constant][6] /* ty=Tensor[(1260), int32] */, %89, %var_5355, %var_5356, %90, meta[relay.Constant][7] /* ty=Tensor[(270), float64] */)
  };
  %91(%var_5369, %var_5370, %var_5371) /* ty=(Tensor[(4, 1), float32], Tensor[(6, 6, 3), float32], Tensor[(2, 8), uint32], Tensor[(16), uint32], Tensor[(162, 2), float32], Tensor[(1260), int32], Tensor[(7, 15, 12), int32], Tensor[(819), uint16], Tensor[(1, 2310), int64], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */
}

def @func_5964(%var_5956: float64, %var_5957: Tensor[(8, 8, 1), float64]) -> Tensor[(8, 8, 1), float64] {
  %92 = cast(%var_5956, dtype="float64") /* ty=float64 */;
  %93 = cast(%var_5957, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  subtract(%92, %93) /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_4859(%var_4830: Tensor[(11, 15, 10), int8]) -> (Tensor[(11, 15, 10), int8],) {
  %94 = cast(%var_4830, dtype="int8") /* ty=Tensor[(11, 15, 10), int8] */;
  %95 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(11, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(11, 15, 10), int8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %98 = multiply(%96, %97) /* ty=Tensor[(11, 15, 10), int8] */;
  (%98,)
}

def @func_4941(%var_4938: Tensor[(160), float64], %var_4939: Tensor[(840), float32], %var_4940: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) {
  %111 = fn (%var_4931: Tensor[(160), float64], %var_4932: Tensor[(840), float32], %var_4933: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) {
    %99 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %100 = cast(meta[relay.Constant][9] /* ty=Tensor[(90, 1), float64] */, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
    %101 = cast(%var_4931, dtype="float64") /* ty=Tensor[(160), float64] */;
    %102 = cast(%var_4932, dtype="float32") /* ty=Tensor[(840), float32] */;
    %103 = cast(%var_4933, dtype="float64") /* ty=Tensor[(270), float64] */;
    %104 = reshape(%100, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float64] */;
    %105 = reshape(%101, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %106 = reshape(%102, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %107 = reshape(%103, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %108 = @func_2428(%104, %105, %106, %107) /* ty=(Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
    %109 = %99.0;
    %110 = %108.6;
    (%109, %110, meta[relay.Constant][9] /* ty=Tensor[(90, 1), float64] */, %var_4931, %var_4932, %var_4933)
  };
  %111(%var_4938, %var_4939, %var_4940) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) */
}

def @func_1752(%var_1746: Tensor[(7, 6, 5), int64], %var_1747: Tensor[(7, 6, 5), int64]) -> Tensor[(7, 6, 5), int64] {
  %112 = cast(%var_1747, dtype="int64") /* ty=Tensor[(7, 6, 5), int64] */;
  %113 = shape_of(%var_1746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_1746, dtype="int64") /* ty=Tensor[(7, 6, 5), int64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%114, %115) /* ty=Tensor[(7, 6, 5), int64] */
}

def @func_5245(%var_5244: Tensor[(16, 1, 1), float64]) -> Tensor[(16, 1, 1), float64] {
  %117 = fn (%var_5238: Tensor[(16, 1, 1), float64]) -> Tensor[(16, 1, 1), float64] {
    %116 = cast(%var_5238, dtype="float64") /* ty=Tensor[(16, 1, 1), float64] */;
    atanh(%116) /* ty=Tensor[(16, 1, 1), float64] */
  };
  %117(%var_5244) /* ty=Tensor[(16, 1, 1), float64] */
}

def @func_5189() -> (Tensor[(6, 6, 3), float32],) {
  %120 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %118 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %119 = %118.0;
    (%119,)
  };
  %120() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_5493() -> (Tensor[(6, 6, 3), float32],) {
  %123 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %121 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
    %122 = %121.0;
    (%122,)
  };
  %123() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_6255() -> (Tensor[(6, 6, 3), float32],) {
  @func_6253() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_1605(%var_1604: Tensor[(15, 5, 14), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) {
  %135 = fn (%var_1578: Tensor[(15, 5, 14), float64]) -> (Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) {
    %124 = cast(%var_1578, dtype="float64") /* ty=Tensor[(15, 5, 14), float64] */;
    %125 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %126 = cast(4.8136f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %127 = reshape(%125, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
    %128 = reshape(%126, newshape=[]) /* ty=float64 */;
    %129 = @func_267(%127, %128) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
    %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 840), float32] */, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %131 = reshape(%130, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
    %132 = atan(%124) /* ty=Tensor[(15, 5, 14), float64] */;
    %133 = %129.2;
    %134 = @func_1388(%131) /* ty=Tensor[(14, 10, 6), float32] */;
    (%132, %133, meta[relay.Constant][10] /* ty=Tensor[(1, 840), float32] */, 4.8136f64 /* ty=float64 */, %134)
  };
  %135(%var_1604) /* ty=(Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) */
}

def @func_3805(%var_3803: Tensor[(30, 9), float64], %var_3804: Tensor[(60), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) {
  @func_3801(%var_3803, %var_3804) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) */
}

def @func_2853(%var_2850: Tensor[(7, 8, 6), float32], %var_2851: Tensor[(1144), float64], %var_2852: Tensor[(2304), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(8, 13, 11), int64], Tensor[(1144), float64], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  @func_2848(%var_2850, %var_2851, %var_2852) /* ty=(Tensor[(7, 8, 6), float32], Tensor[(8, 13, 11), int64], Tensor[(1144), float64], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) */
}

def @func_5832(%var_5830: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), int64], Tensor[(210), int64], Tensor[(160), float64]) {
  @func_5829(%var_5830) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), int64], Tensor[(210), int64], Tensor[(160), float64]) */
}

def @func_63(%var_61: float64, %var_62: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) {
  %144 = fn (%var_24: float64, %var_25: Tensor[(15, 1, 16), float64]) -> (Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) {
    %136 = cast(%var_24, dtype="float64") /* ty=float64 */;
    %137 = cast(%var_25, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %138 = power(%136, %137) /* ty=Tensor[(15, 1, 16), float64] */;
    %139 = cast(%138, dtype="bool") /* ty=Tensor[(15, 1, 16), bool] */;
    %140 = cast(%var_24, dtype="bool") /* ty=bool */;
    %141 = cast(%138, dtype="float64") /* ty=Tensor[(15, 1, 16), float64] */;
    %142 = greater(%139, %140) /* ty=Tensor[(15, 1, 16), bool] */;
    %143 = log10(%141) /* ty=Tensor[(15, 1, 16), float64] */;
    (%142, %143)
  };
  %144(%var_61, %var_62) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */
}

def @func_429(%var_427: Tensor[(2, 9, 15), float64], %var_428: Tensor[(2, 9, 15), float64]) -> (Tensor[(2, 9, 15), bool],) {
  %150 = fn (%var_421: Tensor[(2, 9, 15), float64], %var_422: Tensor[(2, 9, 15), float64]) -> (Tensor[(2, 9, 15), bool],) {
    %145 = cast(%var_422, dtype="bool") /* ty=Tensor[(2, 9, 15), bool] */;
    %146 = shape_of(%var_421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%var_421, dtype="bool") /* ty=Tensor[(2, 9, 15), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = not_equal(%147, %148) /* ty=Tensor[(2, 9, 15), bool] */;
    (%149,)
  };
  %150(%var_427, %var_428) /* ty=(Tensor[(2, 9, 15), bool],) */
}

def @func_5829(%var_5825: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), int64], Tensor[(210), int64], Tensor[(160), float64]) {
  %151 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %152 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
  %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(210), int64] */, dtype="int64") /* ty=Tensor[(210), int64] */;
  %154 = cast(%var_5825, dtype="float64") /* ty=Tensor[(160), float64] */;
  %155 = reshape(%153, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %156 = reshape(%154, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %157 = @func_4044(%155, %156) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %158 = %151.0;
  %159 = %152.0;
  %160 = %157.6;
  (%158, %159, %160, meta[relay.Constant][11] /* ty=Tensor[(210), int64] */, %var_5825)
}

def @func_6862(%var_6811: float32, %var_6812: Tensor[(1, 5, 4), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32], Tensor[(?, 5, 4), bool]) {
  %161 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %162 = cast(%var_6811, dtype="float32") /* ty=float32 */;
  %163 = cast(%var_6812, dtype="float32") /* ty=Tensor[(1, 5, 4), float32] */;
  %164 = divide(%162, %163) /* ty=Tensor[(1, 5, 4), float32] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(1, 5, 4), float32] */;
  %166 = sigmoid(%165) /* ty=Tensor[(1, 5, 4), float32] */;
  %167 = cast(%var_6812, dtype="bool") /* ty=Tensor[(1, 5, 4), bool] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
  %169 = cast(%166, dtype="bool") /* ty=Tensor[(1, 5, 4), bool] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %171 = @func_5038() /* ty=Tensor[(6, 6, 3), float32] */;
  %172 = %161.0;
  %173 = greater(%169, %170) /* ty=Tensor[(?, 5, 4), bool] */;
  (%171, %172, %173)
}

def @func_6751(%var_6749: Tensor[(6, 6, 3), float32], %var_6750: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(160), float64], Tensor[(160), float64]) {
  %184 = fn (%var_6737: Tensor[(6, 6, 3), float32], %var_6744: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(160), float64], Tensor[(160), float64]) {
    %174 = @func_4256() /* ty=Tensor[(6, 6, 3), float32] */;
    %175 = cast(%var_6737, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %177 = cast(%174, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %179 = cast(%var_6744, dtype="float64") /* ty=Tensor[(160), float64] */;
    %180 = reshape(%179, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %181 = @func_3885(%180) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) */;
    %182 = divide(%177, %178) /* ty=Tensor[(6, 6, 3), float32] */;
    %183 = %181.2;
    (%182, %183, %var_6744)
  };
  %184(%var_6749, %var_6750) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(160), float64], Tensor[(160), float64]) */
}

def @func_528(%var_525: Tensor[(13, 9, 9), float32], %var_526: Tensor[(13, 9, 9), float32], %var_527: Tensor[(270), float64]) -> (Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %196 = fn (%var_492: Tensor[(13, 9, 9), float32], %var_493: Tensor[(13, 9, 9), float32], %var_503: Tensor[(270), float64]) -> (Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
    %185 = cast(%var_493, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
    %186 = shape_of(%var_492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%var_492, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %189 = cast(%var_503, dtype="float64") /* ty=Tensor[(270), float64] */;
    %190 = cast(%var_503, dtype="float64") /* ty=Tensor[(270), float64] */;
    %191 = reshape(%189, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
    %192 = reshape(%190, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
    %193 = @func_426(%191, %192) /* ty=(Tensor[(2, 9, 15), bool],) */;
    %194 = divide(%187, %188) /* ty=Tensor[(13, 9, 9), float32] */;
    %195 = %193.0;
    (%194, %195, %var_503)
  };
  %196(%var_525, %var_526, %var_527) /* ty=(Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */
}

def @func_5207() -> Tensor[(6, 6, 3), float32] {
  %197 = fn () -> Tensor[(6, 6, 3), float32] {
    @func_4786() /* ty=Tensor[(6, 6, 3), float32] */
  };
  %197() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_7137() -> (Tensor[(6, 6, 3), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), uint64]) {
  %209 = fn () -> (Tensor[(6, 6, 3), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), uint64]) {
    %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %199 = reshape(%198, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
    %200 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 70), float32] */, dtype="float64") /* ty=Tensor[(12, 70), float64] */;
    %201 = atan(%200) /* ty=Tensor[(12, 70), float64] */;
    %202 = cast(%201, dtype="uint64") /* ty=Tensor[(12, 70), uint64] */;
    %203 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(12, 70), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %204 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 70), float32] */, dtype="uint64") /* ty=Tensor[(12, 70), uint64] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %206 = @func_6023() /* ty=Tensor[(6, 6, 3), float32] */;
    %207 = @func_1388(%199) /* ty=Tensor[(14, 10, 6), float32] */;
    %208 = maximum(%204, %205) /* ty=Tensor[(12, 70), uint64] */;
    (%206, %207, %208)
  };
  %209() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), uint64]) */
}

def @main(%var_7154: Tensor[(6, 3, 3), uint64], %var_7155: Tensor[(6, 3, 3), uint64]) -> (Tensor[(6, 3, 3), uint64],) {
  %210 = cast(%var_7155, dtype="uint64") /* ty=Tensor[(6, 3, 3), uint64] */;
  %211 = shape_of(%var_7154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%var_7154, dtype="uint64") /* ty=Tensor[(6, 3, 3), uint64] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %214 = bitwise_xor(%212, %213) /* ty=Tensor[(6, 3, 3), uint64] */;
  (%214,)
}

def @func_3948(%var_3932: int16) -> Tensor[(5, 8, 15), bool] {
  %215 = cast(%var_3932, dtype="bool") /* ty=bool */;
  %216 = cast(meta[relay.Constant][13] /* ty=Tensor[(5, 8, 15), int16] */, dtype="bool") /* ty=Tensor[(5, 8, 15), bool] */;
  greater(%215, %216) /* ty=Tensor[(5, 8, 15), bool] */
}

def @func_6673() -> Tensor[(13, 15), float64] {
  %218 = fn () -> Tensor[(13, 15), float64] {
    %217 = @func_4189() /* ty=(Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) */;
    %217.0
  };
  %218() /* ty=Tensor[(13, 15), float64] */
}

def @func_3736(%var_3727: Tensor[(160, 1), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) {
  %219 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %220 = cast(%var_3727, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %221 = cast(%var_3727, dtype="float64") /* ty=Tensor[(160, 1), float64] */;
  %222 = cast(meta[relay.Constant][14] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %223 = cast(-9.68719f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %224 = reshape(%220, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %225 = reshape(%221, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %226 = reshape(%222, newshape=[12, 70]) /* ty=Tensor[(12, 70), float32] */;
  %227 = reshape(%223, newshape=[]) /* ty=float64 */;
  %228 = @func_2354(%224, %225, %226, %227) /* ty=(Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) */;
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %231 = reshape(%229, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
  %232 = reshape(%230, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
  %233 = @func_3663(%231, %232) /* ty=(Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) */;
  %234 = %219.0;
  %235 = %228.5;
  %236 = %233.1;
  (%234, %235, %var_3727, meta[relay.Constant][14] /* ty=Tensor[(840), float32] */, -9.68719f64 /* ty=float64 */, %236, meta[relay.Constant][15] /* ty=Tensor[(20), float64] */, meta[relay.Constant][16] /* ty=Tensor[(40), float64] */)
}

def @func_6444(%var_6442: Tensor[(1440), float32], %var_6443: float64) -> (float64, Tensor[(1440), float32], Tensor[(8, 30), float64], Tensor[(6, 6, 3), int32], Tensor[(11, 15, 10), int8], Tensor[(1650), int8]) {
  %254 = fn (%var_6411: Tensor[(1440), float32], %var_6412: float64) -> (float64, Tensor[(1440), float32], Tensor[(8, 30), float64], Tensor[(6, 6, 3), int32], Tensor[(11, 15, 10), int8], Tensor[(1650), int8]) {
    %237 = cast(%var_6411, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %238 = cast(%var_6412, dtype="float64") /* ty=float64 */;
    %239 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 30), float64] */, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
    %240 = reshape(%237, newshape=[12, 10, 12]) /* ty=Tensor[(12, 10, 12), float32] */;
    %241 = reshape(%238, newshape=[]) /* ty=float64 */;
    %242 = reshape(%239, newshape=[8, 30]) /* ty=Tensor[(8, 30), float64] */;
    %243 = @func_3601(%240, %241, %242) /* ty=(Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) */;
    %244 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %245 = %244.0;
    %246 = cast(%245, dtype="int32") /* ty=Tensor[(6, 6, 3), int32] */;
    %247 = cast(%var_6412, dtype="int32") /* ty=int32 */;
    %248 = cast(meta[relay.Constant][18] /* ty=Tensor[(1650), int8] */, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %249 = reshape(%248, newshape=[11, 15, 10]) /* ty=Tensor[(11, 15, 10), int8] */;
    %250 = @func_4859(%249) /* ty=(Tensor[(11, 15, 10), int8],) */;
    %251 = %243.2;
    %252 = bitwise_or(%246, %247) /* ty=Tensor[(6, 6, 3), int32] */;
    %253 = %250.0;
    (%251, %var_6411, meta[relay.Constant][17] /* ty=Tensor[(8, 30), float64] */, %252, %253, meta[relay.Constant][18] /* ty=Tensor[(1650), int8] */)
  };
  %254(%var_6442, %var_6443) /* ty=(float64, Tensor[(1440), float32], Tensor[(8, 30), float64], Tensor[(6, 6, 3), int32], Tensor[(11, 15, 10), int8], Tensor[(1650), int8]) */
}

def @func_1390(%var_1389: Tensor[(14, 10, 6), float32]) -> Tensor[(14, 10, 6), float32] {
  %256 = fn (%var_1377: Tensor[(14, 10, 6), float32]) -> Tensor[(14, 10, 6), float32] {
    %255 = cast(%var_1377, dtype="float32") /* ty=Tensor[(14, 10, 6), float32] */;
    rsqrt(%255) /* ty=Tensor[(14, 10, 6), float32] */
  };
  %256(%var_1389) /* ty=Tensor[(14, 10, 6), float32] */
}

def @func_5520(%var_5516: Tensor[(11, 8, 14), float64]) -> Tensor[(11, 8, 14), float64] {
  %257 = cast(%var_5516, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  sqrt(%257) /* ty=Tensor[(11, 8, 14), float64] */
}

def @func_6546() -> (Tensor[(6, 6, 3), float32],) {
  @func_6544() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_4975(%var_4950: uint64, %var_4951: Tensor[(3, 14, 12), uint64]) -> (Tensor[(3, 14, 12), uint64], Tensor[(6, 6, 3), float32]) {
  %258 = cast(%var_4950, dtype="uint64") /* ty=uint64 */;
  %259 = cast(%var_4951, dtype="uint64") /* ty=Tensor[(3, 14, 12), uint64] */;
  %260 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %261 = logical_xor(%258, %259) /* ty=Tensor[(3, 14, 12), uint64] */;
  %262 = %260.0;
  (%261, %262)
}

def @func_3601(%var_3581: Tensor[(12, 10, 12), float32], %var_3598: float64, %var_3599: Tensor[(8, 30), float64]) -> (Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) {
  %263 = cast(%var_3581, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %264 = cast(%var_3598, dtype="float64") /* ty=float64 */;
  %265 = cast(%var_3599, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %266 = reshape(%264, newshape=[]) /* ty=float64 */;
  %267 = reshape(%265, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %268 = @func_60(%266, %267) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %269 = log10(%263) /* ty=Tensor[(12, 10, 12), float32] */;
  %270 = %268.0;
  (%269, %270, %var_3598, %var_3599)
}

def @func_5403() -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) {
  @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */
}

def @func_5968(%var_5966: float64, %var_5967: Tensor[(8, 8, 1), float64]) -> Tensor[(8, 8, 1), float64] {
  @func_5964(%var_5966, %var_5967) /* ty=Tensor[(8, 8, 1), float64] */
}

def @func_6011() -> Tensor[(6, 6, 3), float32] {
  %271 = @func_5492() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %271.0
}

def @func_6253() -> (Tensor[(6, 6, 3), float32],) {
  %272 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %273 = %272.0;
  (%273,)
}

def @func_4788() -> Tensor[(6, 6, 3), float32] {
  @func_4786() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6013() -> Tensor[(6, 6, 3), float32] {
  @func_6011() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6375(%var_6371: Tensor[(8, 14), float64], %var_6372: Tensor[(18, 2), float64], %var_6373: Tensor[(2304), float32], %var_6374: Tensor[(3, 52), float64]) -> (Tensor[(8, 14), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(2304), float32], Tensor[(18, 2), float64], Tensor[(2304), float32], Tensor[(840), float32], Tensor[(3, 52), float64], Tensor[(160), float64]) {
  %295 = fn (%var_6294: Tensor[(8, 14), float64], %var_6354: Tensor[(18, 2), float64], %var_6355: Tensor[(2304), float32], %var_6363: Tensor[(3, 52), float64]) -> (Tensor[(8, 14), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(2304), float32], Tensor[(18, 2), float64], Tensor[(2304), float32], Tensor[(840), float32], Tensor[(3, 52), float64], Tensor[(160), float64]) {
    %274 = cast(%var_6294, dtype="float64") /* ty=Tensor[(8, 14), float64] */;
    %275 = sinh(%274) /* ty=Tensor[(8, 14), float64] */;
    %276 = cast(%275, dtype="float64") /* ty=Tensor[(8, 14), float64] */;
    %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %278 = reshape(%277, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
    %279 = cast(%var_6354, dtype="float64") /* ty=Tensor[(18, 2), float64] */;
    %280 = cast(%var_6355, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %281 = reshape(%279, newshape=[2, 6, 3]) /* ty=Tensor[(2, 6, 3), float64] */;
    %282 = reshape(%280, newshape=[2304]) /* ty=Tensor[(2304), float32] */;
    %283 = @func_2667(%281, %282) /* ty=(Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) */;
    %284 = cast(%var_6363, dtype="float64") /* ty=Tensor[(3, 52), float64] */;
    %285 = cast(meta[relay.Constant][20] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %286 = cast(meta[relay.Constant][19] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %287 = reshape(%284, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), float64] */;
    %288 = reshape(%285, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %289 = reshape(%286, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %290 = @func_6283(%287, %288, %289) /* ty=(Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) */;
    %291 = sin(%276) /* ty=Tensor[(8, 14), float64] */;
    %292 = @func_1388(%278) /* ty=Tensor[(14, 10, 6), float32] */;
    %293 = %283.1;
    %294 = %290.3;
    (%291, %292, meta[relay.Constant][19] /* ty=Tensor[(840), float32] */, %293, %var_6354, %var_6355, %294, %var_6363, meta[relay.Constant][20] /* ty=Tensor[(160), float64] */)
  };
  %295(%var_6371, %var_6372, %var_6373, %var_6374) /* ty=(Tensor[(8, 14), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(2304), float32], Tensor[(18, 2), float64], Tensor[(2304), float32], Tensor[(840), float32], Tensor[(3, 52), float64], Tensor[(160), float64]) */
}

def @func_4558(%var_4556: Tensor[(6, 6, 3), float32], %var_4557: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) {
  @func_4554(%var_4556, %var_4557) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) */
}

def @func_5017(%var_4993: Tensor[(6, 6, 3), float32]) -> (Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) {
  %296 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %297 = %296.0;
  %298 = cast(%var_4993, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %302 = power(%300, %301) /* ty=Tensor[(6, 6, 3), float64] */;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
  %304 = acos(%303) /* ty=Tensor[(6, 6, 3), float64] */;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %306 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 40), float64] */, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
  %307 = reshape(%305, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), float32] */;
  %308 = reshape(%306, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %309 = @func_4554(%307, %308) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) */;
  %310 = %309.1;
  (%304, %310, meta[relay.Constant][21] /* ty=Tensor[(4, 40), float64] */)
}

def @func_2716(%var_2712: uint16, %var_2713: Tensor[(7, 13, 9), uint16], %var_2714: Tensor[(11, 210), int64], %var_2715: Tensor[(1260), int32]) -> (Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) {
  %330 = fn (%var_2672: uint16, %var_2673: Tensor[(7, 13, 9), uint16], %var_2682: Tensor[(11, 210), int64], %var_2696: Tensor[(1260), int32]) -> (Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) {
    %311 = cast(%var_2672, dtype="uint16") /* ty=uint16 */;
    %312 = cast(%var_2673, dtype="uint16") /* ty=Tensor[(7, 13, 9), uint16] */;
    %313 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
    %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
    %315 = reshape(%313, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
    %316 = reshape(%314, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
    %317 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 324), float32] */, dtype="float32") /* ty=Tensor[(1, 324), float32] */;
    %318 = cast(%var_2696, dtype="int32") /* ty=Tensor[(1260), int32] */;
    %319 = reshape(%317, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), float32] */;
    %320 = reshape(%318, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
    %321 = @func_2251(%319, %320) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) */;
    %322 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 210), int64] */, dtype="int32") /* ty=Tensor[(1, 210), int32] */;
    %323 = cast(%var_2682, dtype="int32") /* ty=Tensor[(11, 210), int32] */;
    %324 = subtract(%322, %323) /* ty=Tensor[(11, 210), int32] */;
    %325 = cast(%324, dtype="float32") /* ty=Tensor[(11, 210), float32] */;
    %326 = left_shift(%311, %312) /* ty=Tensor[(7, 13, 9), uint16] */;
    %327 = @func_1752(%315, %316) /* ty=Tensor[(7, 6, 5), int64] */;
    %328 = %321.1;
    %329 = acosh(%325) /* ty=Tensor[(11, 210), float32] */;
    (%326, %327, %328, meta[relay.Constant][23] /* ty=Tensor[(1, 324), float32] */, %var_2696, %329)
  };
  %330(%var_2712, %var_2713, %var_2714, %var_2715) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) */
}

def @func_6023() -> Tensor[(6, 6, 3), float32] {
  @func_6011() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_1674(%var_1672: Tensor[(8, 13, 11), float64]) -> (Tensor[(8, 13, 11), int64],) {
  @func_1671(%var_1672) /* ty=(Tensor[(8, 13, 11), int64],) */
}

def @func_5039() -> Tensor[(6, 6, 3), float32] {
  %332 = fn () -> Tensor[(6, 6, 3), float32] {
    %331 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %331.0
  };
  %332() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_2428(%var_2402: Tensor[(3, 2, 15), float64], %var_2406: Tensor[(160), float64], %var_2407: Tensor[(840), float32], %var_2426: Tensor[(270), float64]) -> (Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  %333 = cast(%var_2402, dtype="float64") /* ty=Tensor[(3, 2, 15), float64] */;
  %334 = cast(%var_2406, dtype="float64") /* ty=Tensor[(160), float64] */;
  %335 = cast(%var_2406, dtype="float64") /* ty=Tensor[(160), float64] */;
  %336 = cast(%var_2407, dtype="float32") /* ty=Tensor[(840), float32] */;
  %337 = cast(-5.97523f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %338 = reshape(%334, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %339 = reshape(%335, newshape=[16, 2, 5]) /* ty=Tensor[(16, 2, 5), float64] */;
  %340 = reshape(%336, newshape=[12, 70]) /* ty=Tensor[(12, 70), float32] */;
  %341 = reshape(%337, newshape=[]) /* ty=float64 */;
  %342 = @func_2354(%338, %339, %340, %341) /* ty=(Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) */;
  %343 = cast(%var_2426, dtype="float64") /* ty=Tensor[(270), float64] */;
  %344 = cast(%var_2426, dtype="float64") /* ty=Tensor[(270), float64] */;
  %345 = reshape(%343, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %346 = reshape(%344, newshape=[2, 9, 15]) /* ty=Tensor[(2, 9, 15), float64] */;
  %347 = @func_426(%345, %346) /* ty=(Tensor[(2, 9, 15), bool],) */;
  %348 = sigmoid(%333) /* ty=Tensor[(3, 2, 15), float64] */;
  %349 = %342.1;
  %350 = %347.0;
  (%348, %349, %var_2406, %var_2407, -5.97523f64 /* ty=float64 */, %350, %var_2426)
}

def @func_1728(%var_1724: Tensor[(9, 16, 16), float32]) -> (Tensor[(9, 16, 16), float32],) {
  %351 = cast(%var_1724, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %352 = cos(%351) /* ty=Tensor[(9, 16, 16), float32] */;
  (%352,)
}

def @func_2251(%var_2239: Tensor[(9, 6, 6), float32], %var_2246: Tensor[(1260), int32]) -> (Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) {
  %353 = cast(%var_2239, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
  %354 = cast(%var_2246, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %355 = cast(%var_2246, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %356 = reshape(%354, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %357 = reshape(%355, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %358 = log2(%353) /* ty=Tensor[(9, 6, 6), float32] */;
  %359 = @func_932(%356, %357) /* ty=Tensor[(7, 15, 12), int32] */;
  (%358, %359, %var_2246)
}

def @func_4748(%var_4746: int16, %var_4747: Tensor[(5, 8, 15), bool]) -> (Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) {
  %378 = fn (%var_4725: int16, %var_4729: Tensor[(5, 8, 15), bool]) -> (Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) {
    %360 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %361 = cast(%var_4725, dtype="int16") /* ty=int16 */;
    %362 = reshape(%361, newshape=[]) /* ty=int16 */;
    %363 = @func_3948(%362) /* ty=Tensor[(5, 8, 15), bool] */;
    %364 = cast(%var_4729, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
    %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
    %366 = cast(%363, dtype="float64") /* ty=Tensor[(5, 8, 15), float64] */;
    %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %368 = divide(%366, %367) /* ty=Tensor[(5, 8, 15), float64] */;
    %369 = cast(%368, dtype="float32") /* ty=Tensor[(5, 8, 15), float32] */;
    %370 = cast(meta[relay.Constant][24] /* ty=Tensor[(6, 140), float32] */, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
    %371 = cast(%var_4725, dtype="float64") /* ty=float64 */;
    %372 = reshape(%370, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
    %373 = reshape(%371, newshape=[]) /* ty=float64 */;
    %374 = @func_267(%372, %373) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
    %375 = %360.0;
    %376 = sin(%369) /* ty=Tensor[(5, 8, 15), float32] */;
    %377 = %374.1;
    (%375, %var_4725, %376, %377, meta[relay.Constant][24] /* ty=Tensor[(6, 140), float32] */)
  };
  %378(%var_4746, %var_4747) /* ty=(Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) */
}

def @func_3951(%var_3949: int16) -> Tensor[(5, 8, 15), bool] {
  @func_3948(%var_3949) /* ty=Tensor[(5, 8, 15), bool] */
}

def @func_4554(%var_4525: Tensor[(6, 6, 3), float32], %var_4549: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64]) {
  %379 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %380 = %379.0;
  %381 = cast(%var_4525, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%380, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %385 = cast(%var_4549, dtype="float64") /* ty=Tensor[(160), float64] */;
  %386 = reshape(%385, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %387 = @func_3885(%386) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) */;
  %388 = floor_divide(%383, %384) /* ty=Tensor[(6, 6, 3), float32] */;
  %389 = %387.1;
  (%388, %389, %var_4549)
}

def @func_4047(%var_4045: Tensor[(210), int64], %var_4046: Tensor[(160), float64]) -> (Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) {
  %423 = fn (%var_4006: Tensor[(210), int64], %var_4024: Tensor[(160), float64]) -> (Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) {
    %390 = cast(meta[relay.Constant][25] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %391 = cast(meta[relay.Constant][26] /* ty=Tensor[(819), uint16] */, dtype="uint16") /* ty=Tensor[(819), uint16] */;
    %392 = cast(meta[relay.Constant][27] /* ty=Tensor[(2310), int64] */, dtype="int64") /* ty=Tensor[(2310), int64] */;
    %393 = cast(meta[relay.Constant][28] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
    %394 = reshape(%390, newshape=[]) /* ty=uint16 */;
    %395 = reshape(%391, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), uint16] */;
    %396 = reshape(%392, newshape=[11, 210]) /* ty=Tensor[(11, 210), int64] */;
    %397 = reshape(%393, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
    %398 = @func_2711(%394, %395, %396, %397) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(7, 6, 5), int64], Tensor[(7, 15, 12), int32], Tensor[(1, 324), float32], Tensor[(1260), int32], Tensor[(11, 210), float32]) */;
    %399 = cast(%var_4006, dtype="int64") /* ty=Tensor[(210), int64] */;
    %400 = cast(%var_4006, dtype="int64") /* ty=Tensor[(210), int64] */;
    %401 = reshape(%399, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
    %402 = reshape(%400, newshape=[7, 6, 5]) /* ty=Tensor[(7, 6, 5), int64] */;
    %403 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %404 = %403.0;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
    %406 = exp(%405) /* ty=Tensor[(6, 6, 3), float64] */;
    %407 = cast(%406, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    %408 = asin(%407) /* ty=Tensor[(6, 6, 3), float32] */;
    %409 = cast(%404, dtype="int64") /* ty=Tensor[(6, 6, 3), int64] */;
    %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%408, dtype="int64") /* ty=Tensor[(6, 6, 3), int64] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %413 = cast(%var_4024, dtype="float64") /* ty=Tensor[(160), float64] */;
    %414 = reshape(%413, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
    %415 = @func_3736(%414) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) */;
    %416 = cast(%408, dtype="uint32") /* ty=Tensor[(6, 6, 3), uint32] */;
    %417 = cast(meta[relay.Constant][25] /* ty=uint16 */, dtype="uint32") /* ty=uint32 */;
    %418 = %398.0;
    %419 = @func_1752(%401, %402) /* ty=Tensor[(7, 6, 5), int64] */;
    %420 = add(%411, %412) /* ty=Tensor[(6, 6, 3), int64] */;
    %421 = %415.6;
    %422 = left_shift(%416, %417) /* ty=Tensor[(6, 6, 3), uint32] */;
    (%418, meta[relay.Constant][26] /* ty=Tensor[(819), uint16] */, meta[relay.Constant][27] /* ty=Tensor[(2310), int64] */, meta[relay.Constant][28] /* ty=Tensor[(1260), int32] */, %419, %var_4006, %420, %421, %var_4024, %422)
  };
  %423(%var_4045, %var_4046) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */
}

def @func_4786() -> Tensor[(6, 6, 3), float32] {
  %424 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %424.0
}

def @func_3666(%var_3664: Tensor[(4, 1, 5), float64], %var_3665: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) {
  %431 = fn (%var_3640: Tensor[(4, 1, 5), float64], %var_3641: Tensor[(4, 2, 5), float64]) -> (Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) {
    %425 = cast(%var_3640, dtype="float64") /* ty=Tensor[(4, 1, 5), float64] */;
    %426 = cast(%var_3641, dtype="float64") /* ty=Tensor[(4, 2, 5), float64] */;
    %427 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
    %428 = reshape(%427, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
    %429 = power(%425, %426) /* ty=Tensor[(4, 2, 5), float64] */;
    %430 = @func_1388(%428) /* ty=Tensor[(14, 10, 6), float32] */;
    (%429, %430, meta[relay.Constant][29] /* ty=Tensor[(840), float32] */)
  };
  %431(%var_3664, %var_3665) /* ty=(Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) */
}

def @func_6181(%var_6178: uint64, %var_6179: Tensor[(16, 1, 9), uint64], %var_6180: Tensor[(160), float64]) -> (Tensor[(16, ?, 9), bool], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), float32], Tensor[(400), uint16], Tensor[(20), float64], Tensor[(160), float64]) {
  @func_6176(%var_6178, %var_6179, %var_6180) /* ty=(Tensor[(16, ?, 9), bool], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), float32], Tensor[(400), uint16], Tensor[(20), float64], Tensor[(160), float64]) */
}

def @func_2848(%var_2825: Tensor[(7, 8, 6), float32], %var_2830: Tensor[(1144), float64], %var_2834: Tensor[(2304), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(8, 13, 11), int64], Tensor[(1144), float64], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  %432 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %433 = cast(%var_2825, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %434 = cast(%var_2830, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %435 = reshape(%434, newshape=[8, 13, 11]) /* ty=Tensor[(8, 13, 11), float64] */;
  %436 = @func_1671(%435) /* ty=(Tensor[(8, 13, 11), int64],) */;
  %437 = cast(%var_2834, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %438 = reshape(%437, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %439 = @func_1728(%438) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %440 = maximum(%432, %433) /* ty=Tensor[(7, 8, 6), float32] */;
  %441 = %436.0;
  %442 = %439.0;
  (%440, %441, %var_2830, %442, %var_2834)
}

def @func_932(%var_923: Tensor[(7, 15, 12), int32], %var_924: Tensor[(7, 15, 12), int32]) -> Tensor[(7, 15, 12), int32] {
  %443 = cast(%var_924, dtype="int32") /* ty=Tensor[(7, 15, 12), int32] */;
  %444 = shape_of(%var_923, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%var_923, dtype="int32") /* ty=Tensor[(7, 15, 12), int32] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_xor(%445, %446) /* ty=Tensor[(7, 15, 12), int32] */
}

def @func_4191() -> (Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) {
  @func_4189() /* ty=(Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) */
}

def @func_5401() -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) {
  %447 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %448 = %447.0;
  %449 = @func_5229() /* ty=Tensor[(6, 6, 3), float32] */;
  (%448, %449)
}

def @func_5897(%var_5895: Tensor[(12, 70), float32]) -> (Tensor[(5, 5, 2), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), float32], Tensor[(6, 6, 3), float32]) {
  @func_5894(%var_5895) /* ty=(Tensor[(5, 5, 2), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), float32], Tensor[(6, 6, 3), float32]) */
}

def @func_3801(%var_3765: Tensor[(30, 9), float64], %var_3797: Tensor[(60), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) {
  %450 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %451 = cast(meta[relay.Constant][32] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %452 = cast(meta[relay.Constant][32] /* ty=Tensor[(1260), int32] */, dtype="int32") /* ty=Tensor[(1260), int32] */;
  %453 = reshape(%451, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %454 = reshape(%452, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), int32] */;
  %455 = cast(meta[relay.Constant][31] /* ty=Tensor[(1053), float32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %456 = cast(meta[relay.Constant][31] /* ty=Tensor[(1053), float32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %457 = cast(%var_3765, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %458 = reshape(%455, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), float32] */;
  %459 = reshape(%456, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), float32] */;
  %460 = reshape(%457, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %461 = @func_524(%458, %459, %460) /* ty=(Tensor[(13, 9, 9), float32], Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
  %462 = %461.2;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(270), float32] */;
  %464 = cast(meta[relay.Constant][33] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %465 = reshape(%464, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %466 = cast(%var_3797, dtype="float64") /* ty=Tensor[(60), float64] */;
  %467 = reshape(%466, newshape=[15, 4]) /* ty=Tensor[(15, 4), float64] */;
  %468 = %450.0;
  %469 = @func_932(%453, %454) /* ty=Tensor[(7, 15, 12), int32] */;
  %470 = sigmoid(%463) /* ty=Tensor[(270), float32] */;
  %471 = @func_1388(%465) /* ty=Tensor[(14, 10, 6), float32] */;
  %472 = @func_3406(%467) /* ty=Tensor[(15, 4), float64] */;
  (%468, meta[relay.Constant][31] /* ty=Tensor[(1053), float32] */, %var_3765, %469, meta[relay.Constant][32] /* ty=Tensor[(1260), int32] */, %470, %471, meta[relay.Constant][33] /* ty=Tensor[(840), float32] */, %472, %var_3797)
}

def @func_5946(%var_5944: Tensor[(7, 2, 3), float64], %var_5945: Tensor[(7, 2, 3), float64]) -> (Tensor[(7, 2, 3), float64],) {
  %478 = fn (%var_5936: Tensor[(7, 2, 3), float64], %var_5937: Tensor[(7, 2, 3), float64]) -> (Tensor[(7, 2, 3), float64],) {
    %473 = cast(%var_5937, dtype="float64") /* ty=Tensor[(7, 2, 3), float64] */;
    %474 = shape_of(%var_5936, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%var_5936, dtype="float64") /* ty=Tensor[(7, 2, 3), float64] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %477 = floor_mod(%475, %476) /* ty=Tensor[(7, 2, 3), float64] */;
    (%477,)
  };
  %478(%var_5944, %var_5945) /* ty=(Tensor[(7, 2, 3), float64],) */
}

def @func_6506(%var_6502: Tensor[(90), float64], %var_6503: Tensor[(160), float64], %var_6504: Tensor[(840), float32], %var_6505: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64], Tensor[(16, 1, 1), float64], Tensor[(16), float64]) {
  %494 = fn (%var_6486: Tensor[(90), float64], %var_6487: Tensor[(160), float64], %var_6488: Tensor[(840), float32], %var_6489: Tensor[(270), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64], Tensor[(16, 1, 1), float64], Tensor[(16), float64]) {
    %479 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %480 = cast(%var_6486, dtype="float64") /* ty=Tensor[(90), float64] */;
    %481 = cast(%var_6487, dtype="float64") /* ty=Tensor[(160), float64] */;
    %482 = cast(%var_6488, dtype="float32") /* ty=Tensor[(840), float32] */;
    %483 = cast(%var_6489, dtype="float64") /* ty=Tensor[(270), float64] */;
    %484 = reshape(%480, newshape=[3, 2, 15]) /* ty=Tensor[(3, 2, 15), float64] */;
    %485 = reshape(%481, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %486 = reshape(%482, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %487 = reshape(%483, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %488 = @func_2428(%484, %485, %486, %487) /* ty=(Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */;
    %489 = cast(meta[relay.Constant][34] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %490 = reshape(%489, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
    %491 = %479.0;
    %492 = %488.6;
    %493 = @func_5243(%490) /* ty=Tensor[(16, 1, 1), float64] */;
    (%491, %492, %var_6486, %var_6487, %var_6488, %var_6489, %493, meta[relay.Constant][34] /* ty=Tensor[(16), float64] */)
  };
  %494(%var_6502, %var_6503, %var_6504, %var_6505) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64], Tensor[(16, 1, 1), float64], Tensor[(16), float64]) */
}

def @func_3606(%var_3603: Tensor[(12, 10, 12), float32], %var_3604: float64, %var_3605: Tensor[(8, 30), float64]) -> (Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) {
  @func_3601(%var_3603, %var_3604, %var_3605) /* ty=(Tensor[(12, 10, 12), float32], Tensor[(15, 1, 16), bool], float64, Tensor[(8, 30), float64]) */
}

def @func_7097() -> Tensor[(6, 6, 3), float32] {
  %495 = fn () -> Tensor[(6, 6, 3), float32] {
    @func_6480() /* ty=Tensor[(6, 6, 3), float32] */
  };
  %495() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_4189() -> (Tensor[(13, 15), float64], Tensor[(6, 6, 3), float32]) {
  %496 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 15), float64] */, dtype="float64") /* ty=Tensor[(13, 15), float64] */;
  %497 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %498 = atanh(%496) /* ty=Tensor[(13, 15), float64] */;
  %499 = %497.0;
  (%498, %499)
}

def @func_6130() -> (Tensor[(6, 6, 3), float32], int16, int16, Tensor[(600), bool]) {
  %507 = fn () -> (Tensor[(6, 6, 3), float32], int16, int16, Tensor[(600), bool]) {
    %500 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %501 = cast(meta[relay.Constant][37] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
    %502 = reshape(%500, newshape=[]) /* ty=int16 */;
    %503 = reshape(%501, newshape=[5, 8, 15]) /* ty=Tensor[(5, 8, 15), bool] */;
    %504 = @func_4745(%502, %503) /* ty=(Tensor[(6, 6, 3), float32], int16, Tensor[(5, 8, 15), float32], float64, Tensor[(6, 140), float32]) */;
    %505 = @func_5038() /* ty=Tensor[(6, 6, 3), float32] */;
    %506 = %504.1;
    (%505, %506, meta[relay.Constant][36] /* ty=int16 */, meta[relay.Constant][37] /* ty=Tensor[(600), bool] */)
  };
  %507() /* ty=(Tensor[(6, 6, 3), float32], int16, int16, Tensor[(600), bool]) */
}

def @func_6632(%var_6631: Tensor[(1, 1050), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 5, 14), float64], Tensor[(1, 1050), float64]) {
  %513 = fn (%var_6623: Tensor[(1, 1050), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 5, 14), float64], Tensor[(1, 1050), float64]) {
    %508 = cast(%var_6623, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
    %509 = reshape(%508, newshape=[15, 5, 14]) /* ty=Tensor[(15, 5, 14), float64] */;
    %510 = @func_1603(%509) /* ty=(Tensor[(15, 5, 14), float64], Tensor[(240), float64], Tensor[(1, 840), float32], float64, Tensor[(14, 10, 6), float32]) */;
    %511 = @func_6455() /* ty=Tensor[(6, 6, 3), float32] */;
    %512 = %510.0;
    (%511, %512, %var_6623)
  };
  %513(%var_6631) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(15, 5, 14), float64], Tensor[(1, 1050), float64]) */
}

def @func_3837() -> (Tensor[(6, 6, 3), float32],) {
  %516 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %514 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %515 = %514.0;
    (%515,)
  };
  %516() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_3887(%var_3886: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) {
  %525 = fn (%var_3859: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) {
    %517 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %518 = cast(%var_3859, dtype="float64") /* ty=Tensor[(160), float64] */;
    %519 = reshape(%518, newshape=[160, 1]) /* ty=Tensor[(160, 1), float64] */;
    %520 = @func_3736(%519) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) */;
    %521 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %522 = %517.0;
    %523 = %520.7;
    %524 = %521.0;
    (%522, %523, %var_3859, %524)
  };
  %525(%var_3886) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(40), float64], Tensor[(160), float64], Tensor[(6, 6, 3), float32]) */
}

def @func_3850() -> (Tensor[(6, 6, 3), float32],) {
  %528 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %526 = @func_3623() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %527 = %526.0;
    (%527,)
  };
  %528() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_3624() -> (Tensor[(6, 6, 3), float32],) {
  %531 = fn () -> (Tensor[(6, 6, 3), float32],) {
    %529 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    %530 = atanh(%529) /* ty=Tensor[(6, 6, 3), float32] */;
    (%530,)
  };
  %531() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_5984() -> (Tensor[(6, 6, 3), float32],) {
  %532 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %533 = %532.0;
  (%533,)
}

def @func_1995(%var_1969: Tensor[(6, 8, 10), uint32], %var_1970: Tensor[(6, 8, 10), uint32]) -> (Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) {
  %534 = cast(%var_1970, dtype="bool") /* ty=Tensor[(6, 8, 10), bool] */;
  %535 = shape_of(%var_1969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_1969, dtype="bool") /* ty=Tensor[(6, 8, 10), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %538 = less_equal(%536, %537) /* ty=Tensor[(6, 8, 10), bool] */;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(6, 8, 10), float32] */;
  %540 = cast(meta[relay.Constant][39] /* ty=Tensor[(2304, 1), float32] */, dtype="float32") /* ty=Tensor[(2304, 1), float32] */;
  %541 = reshape(%540, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %542 = @func_1728(%541) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(9, 16, 16), float64] */;
  %545 = asinh(%539) /* ty=Tensor[(6, 8, 10), float32] */;
  %546 = sinh(%544) /* ty=Tensor[(9, 16, 16), float64] */;
  (%545, meta[relay.Constant][39] /* ty=Tensor[(2304, 1), float32] */, %546)
}

def @func_5688(%var_5682: Tensor[(14, 6, 14), float32], %var_5683: Tensor[(14, 6, 14), float32], %var_5684: Tensor[(14, 6, 14), float32], %var_5685: Tensor[(20), float64], %var_5686: Tensor[(40), float64], %var_5687: Tensor[(14, 6, 14), float32]) -> (Tensor[(14, 6, 14), float32], Tensor[(6, 6, 3), float32], Tensor[(14, 6, 14), bool], Tensor[(840), float32], Tensor[(20), float64], Tensor[(40), float64], Tensor[(14, 6, 14), bool]) {
  %578 = fn (%var_5608: Tensor[(14, 6, 14), float32], %var_5609: Tensor[(14, 6, 14), float32], %var_5628: Tensor[(14, 6, 14), float32], %var_5633: Tensor[(20), float64], %var_5634: Tensor[(40), float64], %var_5646: Tensor[(14, 6, 14), float32]) -> (Tensor[(14, 6, 14), float32], Tensor[(6, 6, 3), float32], Tensor[(14, 6, 14), bool], Tensor[(840), float32], Tensor[(20), float64], Tensor[(40), float64], Tensor[(14, 6, 14), bool]) {
    %547 = cast(%var_5609, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
    %548 = shape_of(%var_5608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %549 = cast(%var_5608, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
    %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %551 = cast(%var_5628, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %552 = shape_of(%var_5609, dtype="int32") /* ty=Tensor[(3), int32] */;
    %553 = cast(%var_5609, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %555 = cast(%var_5633, dtype="float64") /* ty=Tensor[(20), float64] */;
    %556 = cast(%var_5634, dtype="float64") /* ty=Tensor[(40), float64] */;
    %557 = reshape(%555, newshape=[4, 1, 5]) /* ty=Tensor[(4, 1, 5), float64] */;
    %558 = reshape(%556, newshape=[4, 2, 5]) /* ty=Tensor[(4, 2, 5), float64] */;
    %559 = @func_3663(%557, %558) /* ty=(Tensor[(4, 2, 5), float64], Tensor[(14, 10, 6), float32], Tensor[(840), float32]) */;
    %560 = cast(%var_5609, dtype="float32") /* ty=Tensor[(14, 6, 14), float32] */;
    %561 = cos(%560) /* ty=Tensor[(14, 6, 14), float32] */;
    %562 = cast(%var_5646, dtype="int8") /* ty=Tensor[(14, 6, 14), int8] */;
    %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %564 = cast(%561, dtype="int8") /* ty=Tensor[(14, 6, 14), int8] */;
    %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %566 = add(%564, %565) /* ty=Tensor[(14, 6, 14), int8] */;
    %567 = cast(%566, dtype="float64") /* ty=Tensor[(14, 6, 14), float64] */;
    %568 = tan(%567) /* ty=Tensor[(14, 6, 14), float64] */;
    %569 = cast(%566, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%568, dtype="bool") /* ty=Tensor[(14, 6, 14), bool] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %573 = floor_divide(%549, %550) /* ty=Tensor[(14, 6, 14), float32] */;
    %574 = @func_4256() /* ty=Tensor[(6, 6, 3), float32] */;
    %575 = less(%553, %554) /* ty=Tensor[(14, 6, 14), bool] */;
    %576 = %559.2;
    %577 = greater_equal(%571, %572) /* ty=Tensor[(14, 6, 14), bool] */;
    (%573, %574, %575, %576, %var_5633, %var_5634, %577)
  };
  %578(%var_5682, %var_5683, %var_5684, %var_5685, %var_5686, %var_5687) /* ty=(Tensor[(14, 6, 14), float32], Tensor[(6, 6, 3), float32], Tensor[(14, 6, 14), bool], Tensor[(840), float32], Tensor[(20), float64], Tensor[(40), float64], Tensor[(14, 6, 14), bool]) */
}

def @func_936(%var_934: Tensor[(7, 15, 12), int32], %var_935: Tensor[(7, 15, 12), int32]) -> Tensor[(7, 15, 12), int32] {
  @func_932(%var_934, %var_935) /* ty=Tensor[(7, 15, 12), int32] */
}

def @func_6704() -> (Tensor[(6, 6, 3), float32],) {
  %579 = @func_5492() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %580 = %579.0;
  (%580,)
}

def @func_478(%var_477: Tensor[(14, 7, 13), int8]) -> (Tensor[(14, 7, 13), int8],) {
  %584 = fn (%var_466: Tensor[(14, 7, 13), int8]) -> (Tensor[(14, 7, 13), int8],) {
    %581 = cast(meta[relay.Constant][40] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %582 = cast(%var_466, dtype="int8") /* ty=Tensor[(14, 7, 13), int8] */;
    %583 = logical_xor(%581, %582) /* ty=Tensor[(14, 7, 13), int8] */;
    (%583,)
  };
  %584(%var_477) /* ty=(Tensor[(14, 7, 13), int8],) */
}

def @func_5562(%var_5560: Tensor[(2, 16, 3), uint8], %var_5561: Tensor[(2, 16, 3), uint8]) -> Tensor[(2, 16, 3), uint8] {
  %589 = fn (%var_5554: Tensor[(2, 16, 3), uint8], %var_5555: Tensor[(2, 16, 3), uint8]) -> Tensor[(2, 16, 3), uint8] {
    %585 = cast(%var_5555, dtype="uint8") /* ty=Tensor[(2, 16, 3), uint8] */;
    %586 = shape_of(%var_5554, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%var_5554, dtype="uint8") /* ty=Tensor[(2, 16, 3), uint8] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    minimum(%587, %588) /* ty=Tensor[(2, 16, 3), uint8] */
  };
  %589(%var_5560, %var_5561) /* ty=Tensor[(2, 16, 3), uint8] */
}

def @func_267(%var_238: Tensor[(12, 5, 14), float32], %var_255: float64) -> (Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) {
  %590 = cast(%var_255, dtype="float64") /* ty=float64 */;
  %591 = cast(meta[relay.Constant][41] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %592 = reshape(%590, newshape=[]) /* ty=float64 */;
  %593 = reshape(%591, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %594 = @func_60(%592, %593) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %595 = cast(%var_238, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
  %596 = sinh(%595) /* ty=Tensor[(12, 5, 14), float32] */;
  %597 = cast(%596, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %598 = atan(%597) /* ty=Tensor[(12, 5, 14), float64] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %600 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%596, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %603 = %594.0;
  %604 = mod(%601, %602) /* ty=Tensor[(12, 5, 14), float64] */;
  (%603, %var_255, meta[relay.Constant][41] /* ty=Tensor[(240), float64] */, %604)
}

def @func_2670(%var_2668: Tensor[(2, 6, 3), float64], %var_2669: Tensor[(2304), float32]) -> (Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) {
  %613 = fn (%var_2652: Tensor[(2, 6, 3), float64], %var_2656: Tensor[(2304), float32]) -> (Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) {
    %605 = cast(%var_2656, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %606 = reshape(%605, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
    %607 = @func_1728(%606) /* ty=(Tensor[(9, 16, 16), float32],) */;
    %608 = cast(%var_2652, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
    %609 = cos(%608) /* ty=Tensor[(2, 6, 3), float64] */;
    %610 = cast(%609, dtype="float64") /* ty=Tensor[(2, 6, 3), float64] */;
    %611 = %607.0;
    %612 = atan(%610) /* ty=Tensor[(2, 6, 3), float64] */;
    (%611, %var_2656, %612)
  };
  %613(%var_2668, %var_2669) /* ty=(Tensor[(9, 16, 16), float32], Tensor[(2304), float32], Tensor[(2, 6, 3), float64]) */
}

def @func_5932(%var_5930: Tensor[(2304), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  @func_5929(%var_5930) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) */
}

def @func_3739(%var_3737: Tensor[(160, 1), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) {
  @func_3736(%var_3737) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(16, 2, 5), float64], Tensor[(160, 1), float64], Tensor[(840), float32], float64, Tensor[(14, 10, 6), float32], Tensor[(20), float64], Tensor[(40), float64]) */
}

def @func_6025() -> Tensor[(6, 6, 3), float32] {
  @func_6023() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_5229() -> Tensor[(6, 6, 3), float32] {
  @func_5206() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6456() -> Tensor[(6, 6, 3), float32] {
  %615 = fn () -> Tensor[(6, 6, 3), float32] {
    %614 = @func_5103() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %614.0
  };
  %615() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_5986() -> (Tensor[(6, 6, 3), float32],) {
  @func_5984() /* ty=(Tensor[(6, 6, 3), float32],) */
}

def @func_5929(%var_5921: Tensor[(2304), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(9, 16, 16), float32], Tensor[(2304), float32]) {
  %616 = cast(%var_5921, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %617 = reshape(%616, newshape=[9, 16, 16]) /* ty=Tensor[(9, 16, 16), float32] */;
  %618 = @func_1728(%617) /* ty=(Tensor[(9, 16, 16), float32],) */;
  %619 = @func_5206() /* ty=Tensor[(6, 6, 3), float32] */;
  %620 = %618.0;
  (%619, %620, %var_5921)
}

def @func_6482() -> Tensor[(6, 6, 3), float32] {
  @func_6480() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_4167(%var_4165: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(20), float64], Tensor[(1, 210), int64], Tensor[(160), float64]) {
  @func_4164(%var_4165) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(20), float64], Tensor[(1, 210), int64], Tensor[(160), float64]) */
}

def @func_4107(%var_4093: Tensor[(13, 16, 11), float64]) -> (Tensor[(13, 16, 11), float64], Tensor[(3, 10, 12), bool], Tensor[(360), float64]) {
  %621 = cast(%var_4093, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %622 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(13, 16, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 16, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %625 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %626 = cast(meta[relay.Constant][43] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %627 = reshape(%625, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %628 = reshape(%626, newshape=[3, 10, 12]) /* ty=Tensor[(3, 10, 12), float64] */;
  %629 = floor_mod(%623, %624) /* ty=Tensor[(13, 16, 11), float64] */;
  %630 = @func_671(%627, %628) /* ty=Tensor[(3, 10, 12), bool] */;
  (%629, %630, meta[relay.Constant][43] /* ty=Tensor[(360), float64] */)
}

def @func_2782(%var_2778: Tensor[(14, 5, 4), int64], %var_2779: Tensor[(14, 5, 4), int64], %var_2780: Tensor[(840), float32], %var_2781: float64) -> (Tensor[(14, 5, 4), bool], Tensor[(240), float64], Tensor[(840), float32], float64, Tensor[(14, 5, 4), float32]) {
  %646 = fn (%var_2738: Tensor[(14, 5, 4), int64], %var_2739: Tensor[(14, 5, 4), int64], %var_2755: Tensor[(840), float32], %var_2756: float64) -> (Tensor[(14, 5, 4), bool], Tensor[(240), float64], Tensor[(840), float32], float64, Tensor[(14, 5, 4), float32]) {
    %631 = cast(%var_2739, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
    %632 = shape_of(%var_2738, dtype="int32") /* ty=Tensor[(3), int32] */;
    %633 = cast(%var_2738, dtype="bool") /* ty=Tensor[(14, 5, 4), bool] */;
    %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %635 = cast(%var_2755, dtype="float32") /* ty=Tensor[(840), float32] */;
    %636 = cast(%var_2756, dtype="float64") /* ty=float64 */;
    %637 = reshape(%635, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
    %638 = reshape(%636, newshape=[]) /* ty=float64 */;
    %639 = @func_267(%637, %638) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
    %640 = cast(%var_2739, dtype="float64") /* ty=Tensor[(14, 5, 4), float64] */;
    %641 = erf(%640) /* ty=Tensor[(14, 5, 4), float64] */;
    %642 = cast(%641, dtype="float32") /* ty=Tensor[(14, 5, 4), float32] */;
    %643 = equal(%633, %634) /* ty=Tensor[(14, 5, 4), bool] */;
    %644 = %639.2;
    %645 = sin(%642) /* ty=Tensor[(14, 5, 4), float32] */;
    (%643, %644, %var_2755, %var_2756, %645)
  };
  %646(%var_2778, %var_2779, %var_2780, %var_2781) /* ty=(Tensor[(14, 5, 4), bool], Tensor[(240), float64], Tensor[(840), float32], float64, Tensor[(14, 5, 4), float32]) */
}

def @func_5523(%var_5521: Tensor[(11, 8, 14), float64]) -> Tensor[(11, 8, 14), float64] {
  @func_5520(%var_5521) /* ty=Tensor[(11, 8, 14), float64] */
}

def @func_4862(%var_4860: Tensor[(11, 15, 10), int8]) -> (Tensor[(11, 15, 10), int8],) {
  @func_4859(%var_4860) /* ty=(Tensor[(11, 15, 10), int8],) */
}

def @func_4979(%var_4977: uint64, %var_4978: Tensor[(3, 14, 12), uint64]) -> (Tensor[(3, 14, 12), uint64], Tensor[(6, 6, 3), float32]) {
  @func_4975(%var_4977, %var_4978) /* ty=(Tensor[(3, 14, 12), uint64], Tensor[(6, 6, 3), float32]) */
}

def @func_6941(%var_6940: Tensor[(840), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 1, 16), bool], Tensor[(840), float32], float64, Tensor[(15, 4), float64], Tensor[(3, 90), float64], Tensor[(3, 20), float64]) {
  %661 = fn (%var_6919: Tensor[(840), float32]) -> (Tensor[(6, 6, 3), float32], Tensor[(15, 1, 16), bool], Tensor[(840), float32], float64, Tensor[(15, 4), float64], Tensor[(3, 90), float64], Tensor[(3, 20), float64]) {
    %647 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %648 = cast(%var_6919, dtype="float32") /* ty=Tensor[(840), float32] */;
    %649 = cast(7.10093f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %650 = reshape(%648, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
    %651 = reshape(%649, newshape=[]) /* ty=float64 */;
    %652 = @func_267(%650, %651) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
    %653 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 90), float64] */, dtype="float64") /* ty=Tensor[(3, 90), float64] */;
    %654 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 20), float64] */, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
    %655 = reshape(%653, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
    %656 = reshape(%654, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %657 = @func_3801(%655, %656) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(1053), float32], Tensor[(30, 9), float64], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(270), float32], Tensor[(14, 10, 6), float32], Tensor[(840), float32], Tensor[(15, 4), float64], Tensor[(60), float64]) */;
    %658 = %647.0;
    %659 = %652.0;
    %660 = %657.8;
    (%658, %659, %var_6919, 7.10093f64 /* ty=float64 */, %660, meta[relay.Constant][44] /* ty=Tensor[(3, 90), float64] */, meta[relay.Constant][45] /* ty=Tensor[(3, 20), float64] */)
  };
  %661(%var_6940) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(15, 1, 16), bool], Tensor[(840), float32], float64, Tensor[(15, 4), float64], Tensor[(3, 90), float64], Tensor[(3, 20), float64]) */
}

def @func_2996(%var_2993: Tensor[(2, 8), uint32], %var_2994: Tensor[(3, 108), float32], %var_2995: Tensor[(1260), int32]) -> (Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) {
  %675 = fn (%var_2957: Tensor[(2, 8), uint32], %var_2974: Tensor[(3, 108), float32], %var_2975: Tensor[(1260), int32]) -> (Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) {
    %662 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 8), uint32] */, dtype="uint32") /* ty=Tensor[(2, 8), uint32] */;
    %663 = shape_of(%var_2957, dtype="int32") /* ty=Tensor[(2), int32] */;
    %664 = cast(%var_2957, dtype="uint32") /* ty=Tensor[(2, 8), uint32] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %666 = cast(%var_2974, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
    %667 = cast(%var_2975, dtype="int32") /* ty=Tensor[(1260), int32] */;
    %668 = reshape(%666, newshape=[9, 6, 6]) /* ty=Tensor[(9, 6, 6), float32] */;
    %669 = reshape(%667, newshape=[1260]) /* ty=Tensor[(1260), int32] */;
    %670 = @func_2251(%668, %669) /* ty=(Tensor[(9, 6, 6), float32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32]) */;
    %671 = cast(%var_2974, dtype="float32") /* ty=Tensor[(3, 108), float32] */;
    %672 = logical_xor(%664, %665) /* ty=Tensor[(2, 8), uint32] */;
    %673 = %670.1;
    %674 = exp(%671) /* ty=Tensor[(3, 108), float32] */;
    (%672, %673, %var_2975, %674)
  };
  %675(%var_2993, %var_2994, %var_2995) /* ty=(Tensor[(2, 8), uint32], Tensor[(7, 15, 12), int32], Tensor[(1260), int32], Tensor[(3, 108), float32]) */
}

def @func_2936(%var_2891: Tensor[(13, 6, 1), int32], %var_2892: Tensor[(13, 6, 2), int32], %var_2914: Tensor[(480), uint32]) -> (Tensor[(13, 6, 2), int32], Tensor[(240), float64], Tensor[(15, 1, 16), uint16], Tensor[(6, 8, 10), float32], Tensor[(13, 6, 480), float64]) {
  %676 = cast(%var_2891, dtype="int32") /* ty=Tensor[(13, 6, 1), int32] */;
  %677 = cast(%var_2892, dtype="int32") /* ty=Tensor[(13, 6, 2), int32] */;
  %678 = cast(-0.693678f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %679 = cast(meta[relay.Constant][47] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %680 = reshape(%678, newshape=[]) /* ty=float64 */;
  %681 = reshape(%679, newshape=[15, 1, 16]) /* ty=Tensor[(15, 1, 16), float64] */;
  %682 = @func_60(%680, %681) /* ty=(Tensor[(15, 1, 16), bool], Tensor[(15, 1, 16), float64]) */;
  %683 = %682.0;
  %684 = cast(%683, dtype="uint16") /* ty=Tensor[(15, 1, 16), uint16] */;
  %685 = cast(-0.693678f64 /* ty=float64 */, dtype="uint16") /* ty=uint16 */;
  %686 = cast(%var_2914, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %687 = cast(%var_2914, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %688 = reshape(%686, newshape=[6, 8, 10]) /* ty=Tensor[(6, 8, 10), uint32] */;
  %689 = reshape(%687, newshape=[6, 8, 10]) /* ty=Tensor[(6, 8, 10), uint32] */;
  %690 = @func_1995(%688, %689) /* ty=(Tensor[(6, 8, 10), float32], Tensor[(2304, 1), float32], Tensor[(9, 16, 16), float64]) */;
  %691 = cast(%var_2914, dtype="float64") /* ty=Tensor[(480), float64] */;
  %692 = cast(%var_2891, dtype="float64") /* ty=Tensor[(13, 6, 1), float64] */;
  %693 = add(%676, %677) /* ty=Tensor[(13, 6, 2), int32] */;
  %694 = right_shift(%684, %685) /* ty=Tensor[(15, 1, 16), uint16] */;
  %695 = %690.0;
  %696 = divide(%691, %692) /* ty=Tensor[(13, 6, 480), float64] */;
  (%693, meta[relay.Constant][47] /* ty=Tensor[(240), float64] */, %694, %695, %696)
}

def @func_1307(%var_1305: Tensor[(10, 5, 8), uint16], %var_1306: Tensor[(10, 5, 8), uint16]) -> (Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) {
  %704 = fn (%var_1288: Tensor[(10, 5, 8), uint16], %var_1289: Tensor[(10, 5, 8), uint16]) -> (Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) {
    %697 = cast(%var_1289, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
    %698 = shape_of(%var_1288, dtype="int32") /* ty=Tensor[(3), int32] */;
    %699 = cast(%var_1288, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
    %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %701 = cast(%var_1288, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
    %702 = not_equal(%699, %700) /* ty=Tensor[(10, 5, 8), bool] */;
    %703 = atan(%701) /* ty=Tensor[(10, 5, 8), float32] */;
    (%702, %703)
  };
  %704(%var_1305, %var_1306) /* ty=(Tensor[(10, 5, 8), bool], Tensor[(10, 5, 8), float32]) */
}

def @func_4328(%var_4326: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), float32]) {
  @func_4325(%var_4326) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), float32]) */
}

def @func_5759(%var_5757: Tensor[(9, 16, 12), float64], %var_5758: Tensor[(9, 16, 12), float64]) -> Tensor[(9, 16, 12), uint16] {
  %711 = fn (%var_5705: Tensor[(9, 16, 12), float64], %var_5730: Tensor[(9, 16, 12), float64]) -> Tensor[(9, 16, 12), uint16] {
    %705 = cast(%var_5705, dtype="float64") /* ty=Tensor[(9, 16, 12), float64] */;
    %706 = log2(%705) /* ty=Tensor[(9, 16, 12), float64] */;
    %707 = cast(%var_5730, dtype="uint16") /* ty=Tensor[(9, 16, 12), uint16] */;
    %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
    %709 = cast(%706, dtype="uint16") /* ty=Tensor[(9, 16, 12), uint16] */;
    %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    logical_xor(%709, %710) /* ty=Tensor[(9, 16, 12), uint16] */
  };
  %711(%var_5757, %var_5758) /* ty=Tensor[(9, 16, 12), uint16] */
}

def @func_1731(%var_1729: Tensor[(9, 16, 16), float32]) -> (Tensor[(9, 16, 16), float32],) {
  @func_1728(%var_1729) /* ty=(Tensor[(9, 16, 16), float32],) */
}

def @func_1756(%var_1754: Tensor[(7, 6, 5), int64], %var_1755: Tensor[(7, 6, 5), int64]) -> Tensor[(7, 6, 5), int64] {
  @func_1752(%var_1754, %var_1755) /* ty=Tensor[(7, 6, 5), int64] */
}

def @func_6807() -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float64], Tensor[(6, 6, 3), float32]) {
  %722 = fn () -> (Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float64], Tensor[(6, 6, 3), float32]) {
    %712 = @func_5401() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float32]) */;
    %713 = %712.1;
    %714 = cast(%713, dtype="float32") /* ty=Tensor[(6, 6, 3), float32] */;
    %715 = reshape(%714, newshape=[6, 6, 3]) /* ty=Tensor[(6, 6, 3), float32] */;
    %716 = @func_5017(%715) /* ty=(Tensor[(6, 6, 3), float64], Tensor[(40), float64], Tensor[(4, 40), float64]) */;
    %717 = %716.0;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(6, 6, 3), float64] */;
    %719 = @func_5984() /* ty=(Tensor[(6, 6, 3), float32],) */;
    %720 = sinh(%718) /* ty=Tensor[(6, 6, 3), float64] */;
    %721 = %719.0;
    (%713, %720, %721)
  };
  %722() /* ty=(Tensor[(6, 6, 3), float32], Tensor[(6, 6, 3), float64], Tensor[(6, 6, 3), float32]) */
}

def @func_6544() -> (Tensor[(6, 6, 3), float32],) {
  %723 = @func_6480() /* ty=Tensor[(6, 6, 3), float32] */;
  (%723,)
}

def @func_5894(%var_5851: Tensor[(12, 70), float32]) -> (Tensor[(5, 5, 2), float32], Tensor[(14, 10, 6), float32], Tensor[(12, 70), float32], Tensor[(6, 6, 3), float32]) {
  %724 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 2), float32] */;
  %725 = cast(%var_5851, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %726 = reshape(%725, newshape=[14, 10, 6]) /* ty=Tensor[(14, 10, 6), float32] */;
  %727 = @func_3849() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %728 = sinh(%724) /* ty=Tensor[(5, 5, 2), float32] */;
  %729 = @func_1388(%726) /* ty=Tensor[(14, 10, 6), float32] */;
  %730 = %727.0;
  (%728, %729, %var_5851, %730)
}

def @func_2434(%var_2430: Tensor[(3, 2, 15), float64], %var_2431: Tensor[(160), float64], %var_2432: Tensor[(840), float32], %var_2433: Tensor[(270), float64]) -> (Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) {
  @func_2428(%var_2430, %var_2431, %var_2432, %var_2433) /* ty=(Tensor[(3, 2, 15), float64], Tensor[(16, 2, 5), bool], Tensor[(160), float64], Tensor[(840), float32], float64, Tensor[(2, 9, 15), bool], Tensor[(270), float64]) */
}

def @func_2359(%var_2355: Tensor[(16, 2, 5), float64], %var_2356: Tensor[(16, 2, 5), float64], %var_2357: Tensor[(12, 70), float32], %var_2358: float64) -> (Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) {
  %754 = fn (%var_2308: Tensor[(16, 2, 5), float64], %var_2309: Tensor[(16, 2, 5), float64], %var_2326: Tensor[(12, 70), float32], %var_2327: float64) -> (Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) {
    %731 = cast(%var_2309, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
    %732 = shape_of(%var_2308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %733 = cast(%var_2308, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
    %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %735 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 2, 5), float64] */, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
    %736 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %737 = cast(%var_2309, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
    %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %739 = cast(%var_2326, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
    %740 = cast(%var_2327, dtype="float64") /* ty=float64 */;
    %741 = reshape(%739, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
    %742 = reshape(%740, newshape=[]) /* ty=float64 */;
    %743 = @func_267(%741, %742) /* ty=(Tensor[(15, 1, 16), bool], float64, Tensor[(240), float64], Tensor[(12, 5, 14), float64]) */;
    %744 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 2, 5), float64] */, dtype="int8") /* ty=Tensor[(16, 2, 5), int8] */;
    %745 = shape_of(%var_2309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%var_2309, dtype="int8") /* ty=Tensor[(16, 2, 5), int8] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %748 = bitwise_or(%746, %747) /* ty=Tensor[(16, 2, 5), int8] */;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(16, 2, 5), float64] */;
    %750 = mod(%733, %734) /* ty=Tensor[(16, 2, 5), float64] */;
    %751 = less(%737, %738) /* ty=Tensor[(16, 2, 5), bool] */;
    %752 = %743.2;
    %753 = sinh(%749) /* ty=Tensor[(16, 2, 5), float64] */;
    (%750, %751, %752, %var_2326, %var_2327, %753)
  };
  %754(%var_2355, %var_2356, %var_2357, %var_2358) /* ty=(Tensor[(16, 2, 5), float64], Tensor[(16, 2, 5), bool], Tensor[(240), float64], Tensor[(12, 70), float32], float64, Tensor[(16, 2, 5), float64]) */
}

def @func_4325(%var_4317: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), float32]) {
  %755 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %756 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %757 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %759 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 3, 14), uint32] */, dtype="float64") /* ty=Tensor[(12, 3, 14), float64] */;
  %760 = log(%759) /* ty=Tensor[(12, 3, 14), float64] */;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %762 = atan(%761) /* ty=Tensor[(12, 3, 14), float32] */;
  %763 = cast(%var_4317, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %767 = less(%757, %758) /* ty=Tensor[(12, 3, 14), bool] */;
  %768 = floor_divide(%765, %766) /* ty=Tensor[(12, 3, 14), float32] */;
  (%767, %768)
}

def @func_6471() -> Tensor[(6, 6, 3), float32] {
  @func_6011() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_3408(%var_3407: Tensor[(15, 4), float64]) -> Tensor[(15, 4), float64] {
  %770 = fn (%var_3398: Tensor[(15, 4), float64]) -> Tensor[(15, 4), float64] {
    %769 = cast(%var_3398, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    log2(%769) /* ty=Tensor[(15, 4), float64] */
  };
  %770(%var_3407) /* ty=Tensor[(15, 4), float64] */
}

def @func_674(%var_672: Tensor[(3, 10, 12), float64], %var_673: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), bool] {
  %775 = fn (%var_662: Tensor[(3, 10, 12), float64], %var_663: Tensor[(3, 10, 12), float64]) -> Tensor[(3, 10, 12), bool] {
    %771 = cast(%var_663, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
    %772 = shape_of(%var_662, dtype="int32") /* ty=Tensor[(3), int32] */;
    %773 = cast(%var_662, dtype="bool") /* ty=Tensor[(3, 10, 12), bool] */;
    %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%773, %774) /* ty=Tensor[(3, 10, 12), bool] */
  };
  %775(%var_672, %var_673) /* ty=Tensor[(3, 10, 12), bool] */
}

def @func_4110(%var_4108: Tensor[(13, 16, 11), float64]) -> (Tensor[(13, 16, 11), float64], Tensor[(3, 10, 12), bool], Tensor[(360), float64]) {
  @func_4107(%var_4108) /* ty=(Tensor[(13, 16, 11), float64], Tensor[(3, 10, 12), bool], Tensor[(360), float64]) */
}

def @func_5231() -> Tensor[(6, 6, 3), float32] {
  @func_5229() /* ty=Tensor[(6, 6, 3), float32] */
}

def @func_6287(%var_6284: Tensor[(1, 13, 12), float64], %var_6285: Tensor[(160), float64], %var_6286: Tensor[(840), float32]) -> (Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) {
  %786 = fn (%var_6272: Tensor[(1, 13, 12), float64], %var_6276: Tensor[(160), float64], %var_6277: Tensor[(840), float32]) -> (Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) {
    %776 = cast(%var_6272, dtype="float64") /* ty=Tensor[(1, 13, 12), float64] */;
    %777 = cast(%var_6276, dtype="float64") /* ty=Tensor[(160), float64] */;
    %778 = cast(%var_6277, dtype="float32") /* ty=Tensor[(840), float32] */;
    %779 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 45), float64] */, dtype="float64") /* ty=Tensor[(6, 45), float64] */;
    %780 = reshape(%777, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %781 = reshape(%778, newshape=[840]) /* ty=Tensor[(840), float32] */;
    %782 = reshape(%779, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %783 = @func_4937(%780, %781, %782) /* ty=(Tensor[(6, 6, 3), float32], Tensor[(270), float64], Tensor[(90, 1), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(270), float64]) */;
    %784 = atanh(%776) /* ty=Tensor[(1, 13, 12), float64] */;
    %785 = %783.3;
    (%784, %785, %var_6276, %var_6277, meta[relay.Constant][52] /* ty=Tensor[(6, 45), float64] */)
  };
  %786(%var_6284, %var_6285, %var_6286) /* ty=(Tensor[(1, 13, 12), float64], Tensor[(160), float64], Tensor[(160), float64], Tensor[(840), float32], Tensor[(6, 45), float64]) */
}

def @func_4164(%var_4155: Tensor[(160), float64]) -> (Tensor[(6, 6, 3), float32], Tensor[(20), float64], Tensor[(1, 210), int64], Tensor[(160), float64]) {
  %787 = @func_3836() /* ty=(Tensor[(6, 6, 3), float32],) */;
  %788 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 210), int64] */, dtype="int64") /* ty=Tensor[(1, 210), int64] */;
  %789 = cast(%var_4155, dtype="float64") /* ty=Tensor[(160), float64] */;
  %790 = reshape(%788, newshape=[210]) /* ty=Tensor[(210), int64] */;
  %791 = reshape(%789, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %792 = @func_4044(%790, %791) /* ty=(Tensor[(7, 13, 9), uint16], Tensor[(819), uint16], Tensor[(2310), int64], Tensor[(1260), int32], Tensor[(7, 6, 5), int64], Tensor[(210), int64], Tensor[(6, 6, 3), int64], Tensor[(20), float64], Tensor[(160), float64], Tensor[(6, 6, 3), uint32]) */;
  %793 = %787.0;
  %794 = %792.7;
  (%793, %794, meta[relay.Constant][53] /* ty=Tensor[(1, 210), int64] */, %var_4155)
}

def @func_1671(%var_1664: Tensor[(8, 13, 11), float64]) -> (Tensor[(8, 13, 11), int64],) {
  %795 = cast(%var_1664, dtype="float64") /* ty=Tensor[(8, 13, 11), float64] */;
  %796 = tan(%795) /* ty=Tensor[(8, 13, 11), float64] */;
  %797 = cast(%var_1664, dtype="int64") /* ty=Tensor[(8, 13, 11), int64] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="int64") /* ty=Tensor[(8, 13, 11), int64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %801 = bitwise_or(%799, %800) /* ty=Tensor[(8, 13, 11), int64] */;
  (%801,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen25/build/output.py:1908: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen25/build/output.py", line 1913, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(54) tvmgen_default_fused_reshape_bitwise_xor_kernel0(uint64_t* __restrict__ T_bitwise_xor, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_bitwise_xor[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] ^ placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_15136(%var_15127: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(546), float64], Tensor[(192), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %0 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
  %1 = @func_11676() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %3 = reshape(%2, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %4 = @func_12203(%3) /* ty=(Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) */;
  %5 = cast(%var_15127, dtype="float64") /* ty=Tensor[(273), float64] */;
  %6 = reshape(%5, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %7 = @func_94(%6) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %8 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
  %9 = %0.1;
  %10 = %1.1;
  %11 = %4.5;
  %12 = %7.0;
  (%8, %9, %10, %11, meta[relay.Constant][0] /* ty=Tensor[(192), float64] */, %12, %var_15127)
}

def @func_5532() -> (Tensor[(15, 8, 3), float32],) {
  %13 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%13,)
}

def @func_9507() -> Tensor[(4), float32] {
  @func_9322() /* ty=Tensor[(4), float32] */
}

def @func_7278() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %14 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %15 = %14.0;
  %16 = @func_7186() /* ty=Tensor[(15, 8, 3), float64] */;
  (%15, %16)
}

def @func_5928(%var_5909: Tensor[(8, 2, 10), uint16], %var_5910: Tensor[(8, 2, 10), uint16], %var_5922: Tensor[(144), float32]) -> (Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %17 = cast(%var_5910, dtype="uint16") /* ty=Tensor[(8, 2, 10), uint16] */;
  %18 = shape_of(%var_5909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%var_5909, dtype="uint16") /* ty=Tensor[(8, 2, 10), uint16] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
  %22 = cast(%var_5922, dtype="float32") /* ty=Tensor[(144), float32] */;
  %23 = reshape(%21, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %24 = reshape(%22, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %25 = @func_5002(%23, %24) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %26 = subtract(%19, %20) /* ty=Tensor[(8, 2, 10), uint16] */;
  %27 = %25.3;
  %28 = @func_5057() /* ty=Tensor[(15, 8, 3), float32] */;
  (%26, %27, meta[relay.Constant][1] /* ty=Tensor[(4, 1), float32] */, %var_5922, %28)
}

def @func_11806() -> (Tensor[(4), float32], Tensor[(4), float32]) {
  %29 = @func_10435() /* ty=(Tensor[(4), float32],) */;
  %30 = %29.0;
  %31 = @func_6690() /* ty=Tensor[(4), float32] */;
  (%30, %31)
}

def @func_6367() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %32 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %33 = @func_4149() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %34 = %32.0;
  %35 = %33.0;
  (%34, %35)
}

def @func_19912(%var_19826: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %36 = cast(%var_19826, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
  %39 = reshape(%37, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
  %40 = reshape(%38, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
  %41 = @func_17055(%39, %40) /* ty=(Tensor[(4, 7, 11), float64],) */;
  %42 = @func_16881() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %43 = log(%36) /* ty=Tensor[(1, 12, 6), float64] */;
  %44 = %41.0;
  %45 = %42.0;
  %46 = @func_19418() /* ty=Tensor[(15, 8, 3), float32] */;
  (%43, %44, meta[relay.Constant][2] /* ty=Tensor[(308), float64] */, %45, %46)
}

def @func_18049() -> (Tensor[(15, 8, 3), float32],) {
  %47 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %48 = %47.0;
  (%48,)
}

def @func_17294() -> Tensor[(144), float32] {
  %49 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %49.2
}

def @func_15260() -> (Tensor[(15, 8, 3), float32],) {
  %50 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %51 = %50.0;
  (%51,)
}

def @func_19206() -> (Tensor[(15, 8, 3), float32], Tensor[(400), float64]) {
  %52 = @func_18446() /* ty=(Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) */;
  %53 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  %54 = %52.4;
  (%53, %54)
}

def @func_15744() -> (Tensor[(4), float32],) {
  %55 = @func_14206() /* ty=(Tensor[(4), float32],) */;
  %56 = %55.0;
  (%56,)
}

def @func_4726() -> (Tensor[(15, 8, 3), float32],) {
  %57 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %58 = %57.0;
  (%58,)
}

def @func_6924() -> (Tensor[(4), float32], Tensor[(273), float64]) {
  %59 = @func_6598() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) */;
  %60 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %61 = %59.7;
  %62 = %60.1;
  (%61, %62)
}

def @func_12679() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_8647() -> Tensor[(15, 8, 3), float64] {
  @func_4869() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_12064() -> (Tensor[(15, 8, 3), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %63 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %64 = @func_11806() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
  %65 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %66 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %67 = %63.0;
  %68 = %64.1;
  %69 = %65.1;
  %70 = %66.0;
  (%67, %68, %69, %70)
}

def @func_14114() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %71 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %72 = %71.0;
  %73 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  (%72, %73)
}

def @func_13193() -> (Tensor[(15, 8, 3), float32],) {
  %74 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_7743(%var_7728: Tensor[(15, 6, 7), int32], %var_7729: Tensor[(15, 6, 7), int32]) -> (Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) {
  %76 = cast(%var_7729, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %77 = shape_of(%var_7728, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_7728, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %80 = greater(%78, %79) /* ty=Tensor[(15, 6, 7), bool] */;
  %81 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  (%80, %81)
}

def @func_16280() -> (Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) {
  %82 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %83 = cast(meta[relay.Constant][3] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %84 = reshape(%83, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), float64] */;
  %85 = @func_7853(%84) /* ty=(Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) */;
  %86 = %82.0;
  %87 = %85.0;
  %88 = @func_12679() /* ty=Tensor[(4), float32] */;
  (%86, %87, meta[relay.Constant][3] /* ty=Tensor[(1008), float64] */, %88)
}

def @func_19715() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %89 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %90 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %91 = %89.0;
  (%90, %91)
}

def @func_8027() -> Tensor[(15, 8, 3), float32] {
  @func_7349() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_13418() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(8, 18), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(16, 9, 2), uint32], Tensor[(288), float32]) {
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %94 = reshape(%92, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %95 = reshape(%93, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %96 = @func_9537(%94, %95) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
  %97 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %98 = cast(meta[relay.Constant][5] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %99 = reshape(%97, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %100 = reshape(%98, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %101 = @func_9537(%99, %100) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
  %102 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %103 = reshape(%102, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %104 = @func_9850(%103) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
  %105 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
  %106 = %96.1;
  %107 = %101.0;
  %108 = %104.2;
  (%105, %106, meta[relay.Constant][4] /* ty=Tensor[(8, 18), float32] */, meta[relay.Constant][5] /* ty=Tensor[(400), uint16] */, %107, %108, meta[relay.Constant][6] /* ty=Tensor[(288), float32] */)
}

def @func_13889() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %109 = @func_8647() /* ty=Tensor[(15, 8, 3), float64] */;
  %110 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
  (%109, %110)
}

def @func_17027() -> (Tensor[(15, 8, 3), int8],) {
  %111 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  (%111,)
}

def @func_10288() -> (Tensor[(15, 8, 3), float64],) {
  %112 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %113 = %112.3;
  (%113,)
}

def @func_18303() -> (Tensor[(15, 8, 3), float32],) {
  %114 = @func_7349() /* ty=Tensor[(15, 8, 3), float32] */;
  (%114,)
}

def @func_19418() -> Tensor[(15, 8, 3), float32] {
  %115 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %115.0
}

def @func_15871() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %116 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %117 = @func_9624() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %118 = %116.0;
  %119 = %117.0;
  (%118, %119)
}

def @func_12271() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %120 = @func_9775() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %121 = @func_6367() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %122 = %120.0;
  %123 = %121.0;
  (%122, %123)
}

def @func_12911() -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) {
  %124 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %125 = cast(meta[relay.Constant][7] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %126 = reshape(%125, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %127 = @func_11160(%126) /* ty=(Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %128 = %124.1;
  %129 = %127.5;
  (%128, %129, meta[relay.Constant][7] /* ty=Tensor[(630), int32] */)
}

def @func_7046() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %130 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %131 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %132 = %130.0;
  %133 = %131.1;
  (%132, %133)
}

def @main(%var_19986: Tensor[(196), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(14, 14, 1), float32], Tensor[(15, 8, 3), uint64], Tensor[(196), bool]) {
  %134 = @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %135 = @func_14206() /* ty=(Tensor[(4), float32],) */;
  %136 = @func_16501() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %138 = reshape(%137, newshape=[14, 14, 1]) /* ty=Tensor[(14, 14, 1), float32] */;
  %139 = @func_15693(%138) /* ty=(Tensor[(14, 14, 1), float32],) */;
  %140 = @func_13643() /* ty=Tensor[(15, 8, 3), float64] */;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %142 = reshape(%141, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
  %143 = cast(meta[relay.Constant][8] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %144 = acos(%143) /* ty=Tensor[(196), float32] */;
  %145 = cast(%var_19986, dtype="bool") /* ty=Tensor[(196), bool] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(1), int32] */;
  %147 = cast(%144, dtype="bool") /* ty=Tensor[(196), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), bool] */;
  %149 = %134.0;
  %150 = %135.0;
  %151 = %136.0;
  %152 = %139.0;
  %153 = @func_4761(%142) /* ty=Tensor[(15, 8, 3), uint64] */;
  %154 = greater(%147, %148) /* ty=Tensor[(196), bool] */;
  (%140, %149, %150, %151, %152, %153, %154)
}

def @func_18010(%var_17957: Tensor[(15, 1, 13), float32]) -> (Tensor[(15, 1, 13), float32], Tensor[(15, 8, 3), int8]) {
  %155 = cast(%var_17957, dtype="float32") /* ty=Tensor[(15, 1, 13), float32] */;
  %156 = @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %157 = log(%155) /* ty=Tensor[(15, 1, 13), float32] */;
  %158 = %156.1;
  (%157, %158)
}

def @func_4951(%var_4907: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %159 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  %160 = cast(%var_4907, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %164 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 8, 3), float64] */, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %165 = shape_of(%var_4907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_4907, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %168 = power(%162, %163) /* ty=Tensor[(15, 8, 3), float32] */;
  %169 = add(%166, %167) /* ty=Tensor[(15, 8, 3), int8] */;
  (%168, %169)
}

def @func_10257() -> (Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) {
  %170 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %172 = reshape(%171, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %173 = @func_6084(%172) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) */;
  %174 = %170.2;
  %175 = %173.2;
  (%174, %175, meta[relay.Constant][10] /* ty=Tensor[(160), uint16] */)
}

def @func_17687() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %176 = @func_12945() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %177 = cast(meta[relay.Constant][11] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %178 = reshape(%177, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %179 = @func_11160(%178) /* ty=(Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %180 = cast(meta[relay.Constant][12] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %181 = reshape(%180, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %182 = @func_11951(%181) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) */;
  %183 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %184 = %176.0;
  %185 = %179.2;
  %186 = %182.1;
  %187 = %183.0;
  %188 = @func_6845() /* ty=Tensor[(15, 8, 3), float32] */;
  (%184, %185, meta[relay.Constant][11] /* ty=Tensor[(630), int32] */, %186, meta[relay.Constant][12] /* ty=Tensor[(273), float64] */, %187, %188)
}

def @func_17324() -> (Tensor[(15, 8, 3), bool], Tensor[(39, 7), bool], Tensor[(273), float64]) {
  %189 = cast(meta[relay.Constant][13] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %190 = reshape(%189, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %191 = @func_7914(%190) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
  %192 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
  %193 = %191.3;
  (%192, %193, meta[relay.Constant][13] /* ty=Tensor[(273), float64] */)
}

def @func_9301(%var_9271: Tensor[(400), uint16]) -> (Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
  %194 = cast(%var_9271, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %195 = cast(%var_9271, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %196 = reshape(%194, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %197 = reshape(%195, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %198 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %199 = @func_9231() /* ty=(Tensor[(144), float32],) */;
  %200 = @func_9252() /* ty=Tensor[(273), float64] */;
  %201 = @func_8999(%196, %197) /* ty=Tensor[(10, 4, 10), float32] */;
  %202 = %198.0;
  %203 = %199.0;
  (%200, %201, %var_9271, %202, %203)
}

def @func_7186() -> Tensor[(15, 8, 3), float64] {
  %204 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %204.0
}

def @func_14800() -> Tensor[(15, 8, 3), float32] {
  @func_5034() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_17829() -> (Tensor[(144), float32],) {
  %205 = @func_5468() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %206 = %205.3;
  (%206,)
}

def @func_4000() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  %207 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %208 = %207.0;
  %209 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 8, 3), float32] */, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %213 = cast(%208, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %214 = subtract(%211, %212) /* ty=Tensor[(15, 8, 3), int8] */;
  %215 = log10(%213) /* ty=Tensor[(15, 8, 3), float64] */;
  (%214, %215)
}

def @func_17754() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %216 = @func_13889() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */;
  %217 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %218 = %216.1;
  %219 = %217.0;
  (%218, %219)
}

def @func_18905() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64], Tensor[(144), float32], Tensor[(1, 160), uint16], Tensor[(144), float32]) {
  %220 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %221 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
  %223 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %224 = reshape(%221, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %225 = reshape(%222, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %226 = reshape(%223, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %227 = @func_5928(%224, %225, %226) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
  %228 = %220.0;
  %229 = @func_14266() /* ty=Tensor[(15, 8, 3), float64] */;
  %230 = %227.3;
  (%228, %229, %230, meta[relay.Constant][15] /* ty=Tensor[(1, 160), uint16] */, meta[relay.Constant][16] /* ty=Tensor[(144), float32] */)
}

def @func_14876() -> (Tensor[(15, 8, 3), float32],) {
  %231 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %232 = %231.0;
  (%232,)
}

def @func_9322() -> Tensor[(4), float32] {
  %233 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
  %233.0
}

def @func_10072() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) {
  %234 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %235 = cast(meta[relay.Constant][17] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %236 = cast(meta[relay.Constant][18] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %237 = reshape(%235, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %238 = reshape(%236, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %239 = @func_6762(%237, %238) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) */;
  %240 = %234.0;
  %241 = %239.0;
  (%240, %241, meta[relay.Constant][17] /* ty=Tensor[(192), float64] */, meta[relay.Constant][18] /* ty=Tensor[(144), float32] */)
}

def @func_8802() -> (Tensor[(15, 8, 3), int8],) {
  %242 = @func_6598() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) */;
  %243 = %242.2;
  (%243,)
}

def @func_6598() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) {
  %244 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %245 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %246 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %247 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %248 = cast(meta[relay.Constant][19] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %249 = reshape(%248, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %250 = @func_4808(%249) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %251 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
  %252 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %253 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 260), bool] */, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %254 = %250.1;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %256 = reshape(%253, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
  %257 = reshape(%255, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %258 = @func_3969(%256, %257) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
  %259 = %244.1;
  %260 = %245.0;
  %261 = %246.0;
  %262 = %247.0;
  %263 = %251.1;
  %264 = %252.1;
  %265 = %258.2;
  (%259, %260, %261, %262, %254, meta[relay.Constant][19] /* ty=Tensor[(273), float64] */, %263, %264, %265, meta[relay.Constant][20] /* ty=Tensor[(9, 260), bool] */)
}

def @func_5002(%var_4981: Tensor[(4), float32], %var_4982: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
  %266 = cast(%var_4981, dtype="float32") /* ty=Tensor[(4), float32] */;
  %267 = cast(%var_4982, dtype="float32") /* ty=Tensor[(144), float32] */;
  %268 = reshape(%266, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
  %269 = reshape(%267, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
  %270 = @func_3594(%268, %269) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
  %271 = %270.9;
  %272 = cast(%271, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %273 = reshape(%272, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %274 = @func_94(%273) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %275 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %276 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %277 = cast(%var_4982, dtype="float32") /* ty=Tensor[(144), float32] */;
  %278 = reshape(%277, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %279 = @func_3931(%278) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %280 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %281 = %274.0;
  %282 = %275.0;
  %283 = %276.1;
  %284 = %279.2;
  (%280, %271, %var_4981, %var_4982, %281, %282, %283, %284)
}

def @func_5795(%var_5733: Tensor[(16, 3, 4), float64], %var_5758: Tensor[(273), float64], %var_5783: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) {
  %285 = cast(meta[relay.Constant][21] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %286 = cast(%var_5758, dtype="float64") /* ty=Tensor[(273), float64] */;
  %287 = reshape(%285, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %288 = reshape(%286, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %289 = @func_679(%287, %288) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %290 = cast(%var_5733, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %291 = acosh(%290) /* ty=Tensor[(16, 3, 4), float64] */;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %293 = cast(meta[relay.Constant][22] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %294 = cast(%var_5783, dtype="float32") /* ty=Tensor[(144), float32] */;
  %295 = reshape(%293, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %296 = reshape(%294, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %297 = @func_5002(%295, %296) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %298 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 4), bool] */, dtype="bool") /* ty=Tensor[(15, 4), bool] */;
  %299 = cast(meta[relay.Constant][24] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
  %300 = reshape(%298, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
  %301 = reshape(%299, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
  %302 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %303 = cast(%302, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %304 = reshape(%303, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
  %305 = %289.2;
  %306 = log10(%292) /* ty=Tensor[(16, 3, 4), float32] */;
  %307 = %297.3;
  %308 = @func_5556(%300, %301) /* ty=Tensor[(10, 5, 12), bool] */;
  %309 = @func_4761(%304) /* ty=Tensor[(15, 8, 3), uint64] */;
  (%302, %305, meta[relay.Constant][21] /* ty=Tensor[(2340), bool] */, %var_5758, %306, %307, meta[relay.Constant][22] /* ty=Tensor[(4), float32] */, %var_5783, %308, meta[relay.Constant][23] /* ty=Tensor[(15, 4), bool] */, meta[relay.Constant][24] /* ty=Tensor[(600), bool] */, %309)
}

def @func_6250() -> (Tensor[(15, 8, 3), float32],) {
  %310 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %311 = %310.1;
  (%311,)
}

def @func_11524() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %312 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
  %313 = cast(meta[relay.Constant][25] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %314 = cast(meta[relay.Constant][25] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %315 = reshape(%313, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %316 = reshape(%314, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %317 = %312.0;
  %318 = @func_7951(%315, %316) /* ty=Tensor[(15, 2, 14), float32] */;
  (%317, %318, meta[relay.Constant][25] /* ty=Tensor[(420), float32] */)
}

def @func_17055(%var_17049: Tensor[(4, 7, 11), float64], %var_17050: Tensor[(4, 7, 11), float64]) -> (Tensor[(4, 7, 11), float64],) {
  %319 = cast(%var_17050, dtype="float64") /* ty=Tensor[(4, 7, 11), float64] */;
  %320 = shape_of(%var_17049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_17049, dtype="float64") /* ty=Tensor[(4, 7, 11), float64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %323 = floor_divide(%321, %322) /* ty=Tensor[(4, 7, 11), float64] */;
  (%323,)
}

def @func_14575() -> (Tensor[(4), float32],) {
  %324 = @func_14206() /* ty=(Tensor[(4), float32],) */;
  %325 = %324.0;
  (%325,)
}

def @func_17435() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(16, 9, 2), uint32], Tensor[(2, 144), float32]) {
  %326 = @func_14635() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %327 = cast(meta[relay.Constant][26] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %328 = reshape(%327, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %329 = @func_6401(%328) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %330 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %331 = reshape(%330, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %332 = @func_9850(%331) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
  %333 = @func_13861() /* ty=Tensor[(15, 8, 3), int8] */;
  %334 = %326.1;
  %335 = %329.3;
  %336 = %332.2;
  (%333, %334, %335, meta[relay.Constant][26] /* ty=Tensor[(96), uint64] */, %336, meta[relay.Constant][27] /* ty=Tensor[(2, 144), float32] */)
}

def @func_13158() -> (Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) {
  %337 = @func_10435() /* ty=(Tensor[(4), float32],) */;
  %338 = cast(meta[relay.Constant][28] /* ty=Tensor[(91, 6), float64] */, dtype="float64") /* ty=Tensor[(91, 6), float64] */;
  %339 = reshape(%338, newshape=[13, 7, 6]) /* ty=Tensor[(13, 7, 6), float64] */;
  %340 = @func_7505(%339) /* ty=(Tensor[(13, 7, 6), float64],) */;
  %341 = %337.0;
  %342 = %340.0;
  (%341, %342, meta[relay.Constant][28] /* ty=Tensor[(91, 6), float64] */)
}

def @func_4808(%var_4784: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %343 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %344 = cast(%var_4784, dtype="float64") /* ty=Tensor[(273), float64] */;
  %345 = reshape(%344, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %346 = @func_94(%345) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %347 = %343.0;
  %348 = %346.0;
  (%347, %348, %var_4784)
}

def @func_15641(%var_15619: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) {
  %349 = cast(9.71588f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %350 = cast(%var_15619, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %351 = divide(%349, %350) /* ty=Tensor[(5, 14, 7), float32] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %353 = cast(%var_15619, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %354 = cos(%352) /* ty=Tensor[(5, 14, 7), float32] */;
  %355 = cosh(%353) /* ty=Tensor[(5, 14, 7), float32] */;
  (%354, %355)
}

def @func_6055(%var_6052: Tensor[(11, 9, 13), float64]) -> Tensor[(11, 9, 13), float64] {
  %356 = cast(%var_6052, dtype="float64") /* ty=Tensor[(11, 9, 13), float64] */;
  atanh(%356) /* ty=Tensor[(11, 9, 13), float64] */
}

def @func_5556(%var_5551: Tensor[(1, 5, 12), bool], %var_5552: Tensor[(10, 5, 12), bool]) -> Tensor[(10, 5, 12), bool] {
  %357 = cast(%var_5551, dtype="bool") /* ty=Tensor[(1, 5, 12), bool] */;
  %358 = cast(%var_5552, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
  logical_or(%357, %358) /* ty=Tensor[(10, 5, 12), bool] */
}

def @func_18622(%var_18592: Tensor[(14), float64], %var_18611: Tensor[(308), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64]) {
  %359 = cast(%var_18592, dtype="float64") /* ty=Tensor[(14), float64] */;
  %360 = reshape(%359, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %361 = @func_18138(%360) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) */;
  %362 = cast(%var_18611, dtype="float64") /* ty=Tensor[(308), float64] */;
  %363 = cast(%var_18611, dtype="float64") /* ty=Tensor[(308), float64] */;
  %364 = reshape(%362, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
  %365 = reshape(%363, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
  %366 = @func_17055(%364, %365) /* ty=(Tensor[(4, 7, 11), float64],) */;
  %367 = @func_12978() /* ty=Tensor[(15, 8, 3), float32] */;
  %368 = %361.3;
  %369 = %366.0;
  (%367, %368, %var_18592, %369, %var_18611)
}

def @func_15843(%var_15817: Tensor[(144), int32]) -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(144), int32], Tensor[(15, 8, 3), float32]) {
  %370 = @func_14682() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(4), float32]) */;
  %371 = cast(%var_15817, dtype="int32") /* ty=Tensor[(144), int32] */;
  %372 = reshape(%371, newshape=[24, 6]) /* ty=Tensor[(24, 6), int32] */;
  %373 = @func_14098(%372) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) */;
  %374 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %375 = %370.1;
  %376 = %373.0;
  %377 = %374.0;
  (%375, %376, %var_15817, %377)
}

def @func_17047() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %378 = @func_4149() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %379 = %378.0;
  %380 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  (%379, %380)
}

def @func_15208(%var_15198: Tensor[(420), float32]) -> (Tensor[(273), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %381 = cast(%var_15198, dtype="float32") /* ty=Tensor[(420), float32] */;
  %382 = reshape(%381, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %383 = @func_9424(%382) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) */;
  %384 = @func_9252() /* ty=Tensor[(273), float64] */;
  %385 = %383.1;
  (%384, %385, %var_15198)
}

def @func_11400() -> Tensor[(4), float32] {
  %386 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %386.0
}

def @func_8932(%var_8926: uint16) -> (Tensor[(8, 13, 12), uint16],) {
  %387 = cast(%var_8926, dtype="uint16") /* ty=uint16 */;
  %388 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 12), uint16] */;
  %389 = subtract(%387, %388) /* ty=Tensor[(8, 13, 12), uint16] */;
  (%389,)
}

def @func_14206() -> (Tensor[(4), float32],) {
  %390 = @func_11400() /* ty=Tensor[(4), float32] */;
  (%390,)
}

def @func_8624() -> (Tensor[(15, 8, 3), bool],) {
  %391 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %392 = %391.0;
  (%392,)
}

def @func_4563() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %393 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %394 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %395 = %393.0;
  %396 = %394.1;
  (%395, %396)
}

def @func_16141(%var_16112: Tensor[(7, 9, 12), float32]) -> (Tensor[(7, 9, 12), float32], Tensor[(4), float32]) {
  %397 = cast(%var_16112, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %398 = tan(%397) /* ty=Tensor[(7, 9, 12), float32] */;
  %399 = @func_15309() /* ty=Tensor[(4), float32] */;
  (%398, %399)
}

def @func_11839(%var_11824: Tensor[(11, 5, 10), uint32], %var_11825: Tensor[(11, 5, 10), uint32]) -> (Tensor[(11, 5, 10), bool],) {
  %400 = cast(%var_11825, dtype="bool") /* ty=Tensor[(11, 5, 10), bool] */;
  %401 = shape_of(%var_11824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_11824, dtype="bool") /* ty=Tensor[(11, 5, 10), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = greater_equal(%402, %403) /* ty=Tensor[(11, 5, 10), bool] */;
  (%404,)
}

def @func_10410() -> (Tensor[(4), float32], Tensor[(4), float32]) {
  %405 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %406 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %407 = %405.0;
  %408 = %406.0;
  (%407, %408)
}

def @func_5154() -> (Tensor[(15, 8, 3), float64],) {
  %409 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %411 = exp(%410) /* ty=Tensor[(15, 8, 3), float64] */;
  (%411,)
}

def @func_7430() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  %412 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %413 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %414 = %412.0;
  (%413, %414)
}

def @func_10742() -> (Tensor[(15, 8, 3), bool],) {
  %415 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %416 = %415.0;
  (%416,)
}

def @func_17540() -> Tensor[(15, 8, 3), float32] {
  @func_13040() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_13040() -> Tensor[(15, 8, 3), float32] {
  %417 = @func_12271() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */;
  %417.1
}

def @func_16103() -> (Tensor[(15, 8, 3), int8],) {
  %418 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %419 = %418.1;
  (%419,)
}

def @func_10608(%var_10590: Tensor[(420), float32]) -> (Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %420 = @func_10506() /* ty=(Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) */;
  %421 = cast(%var_10590, dtype="float32") /* ty=Tensor[(420), float32] */;
  %422 = cast(%var_10590, dtype="float32") /* ty=Tensor[(420), float32] */;
  %423 = reshape(%421, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %424 = reshape(%422, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %425 = %420.0;
  %426 = @func_7951(%423, %424) /* ty=Tensor[(15, 2, 14), float32] */;
  (%425, %426, %var_10590)
}

def @func_9720(%var_9703: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(18, 130), float64]) {
  %427 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %428 = cast(meta[relay.Constant][30] /* ty=Tensor[(18, 130), bool] */, dtype="bool") /* ty=Tensor[(18, 130), bool] */;
  %429 = cast(%var_9703, dtype="float64") /* ty=Tensor[(273), float64] */;
  %430 = reshape(%428, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
  %431 = reshape(%429, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %432 = @func_7400(%430, %431) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) */;
  %433 = cast(meta[relay.Constant][30] /* ty=Tensor[(18, 130), bool] */, dtype="float64") /* ty=Tensor[(18, 130), float64] */;
  %434 = %427.0;
  %435 = %432.0;
  %436 = atanh(%433) /* ty=Tensor[(18, 130), float64] */;
  (%434, %435, %var_9703, %436)
}

def @func_11676() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %437 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %438 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %439 = %437.0;
  %440 = %438.0;
  (%439, %440)
}

def @func_6690() -> Tensor[(4), float32] {
  %441 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %441.0
}

def @func_13005() -> (Tensor[(4), float32],) {
  %442 = @func_10435() /* ty=(Tensor[(4), float32],) */;
  %443 = %442.0;
  (%443,)
}

def @func_4761(%var_4751: Tensor[(15, 8, 3), float32]) -> Tensor[(15, 8, 3), uint64] {
  %444 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %445 = %444.0;
  %446 = cast(%var_4751, dtype="uint64") /* ty=Tensor[(15, 8, 3), uint64] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="uint64") /* ty=Tensor[(15, 8, 3), uint64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%448, %449) /* ty=Tensor[(15, 8, 3), uint64] */
}

def @func_16881() -> (Tensor[(15, 8, 3), float32],) {
  %450 = @func_15399() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %451 = %450.0;
  (%451,)
}

def @func_7721() -> (Tensor[(15, 8, 3), bool],) {
  %452 = @func_4829() /* ty=Tensor[(15, 8, 3), float32] */;
  %453 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 8, 3), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%452, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %457 = logical_and(%455, %456) /* ty=Tensor[(15, 8, 3), bool] */;
  (%457,)
}

def @func_6191(%var_6189: Tensor[(2, 48), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) {
  %458 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %459 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %460 = cast(%var_6189, dtype="uint64") /* ty=Tensor[(2, 48), uint64] */;
  %461 = reshape(%460, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %462 = %458.0;
  %463 = %459.0;
  %464 = @func_2535(%461) /* ty=Tensor[(4, 6, 4), bool] */;
  (%462, %463, %464, %var_6189)
}

def @func_12525() -> (Tensor[(15, 8, 3), int8],) {
  %465 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %466 = %465.0;
  (%466,)
}

def @func_8999(%var_8953: Tensor[(10, 4, 10), uint16], %var_8954: Tensor[(10, 4, 10), uint16]) -> Tensor[(10, 4, 10), float32] {
  %467 = cast(%var_8954, dtype="bool") /* ty=Tensor[(10, 4, 10), bool] */;
  %468 = shape_of(%var_8953, dtype="int32") /* ty=Tensor[(3), int32] */;
  %469 = cast(%var_8953, dtype="bool") /* ty=Tensor[(10, 4, 10), bool] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %471 = less_equal(%469, %470) /* ty=Tensor[(10, 4, 10), bool] */;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(10, 4, 10), float32] */;
  acos(%472) /* ty=Tensor[(10, 4, 10), float32] */
}

def @func_12408() -> (Tensor[(15, 8, 3), float32],) {
  %473 = @func_9672() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %474 = %473.0;
  (%474,)
}

def @func_19501() -> (Tensor[(15, 8, 3), int8],) {
  %475 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
  %476 = %475.1;
  (%476,)
}

def @func_8554() -> Tensor[(273), float64] {
  %477 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %477.0
}

def @func_12539(%var_12534: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), float64],) {
  %478 = cast(%var_12534, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %479 = cos(%478) /* ty=Tensor[(9, 16, 5), float64] */;
  (%479,)
}

def @func_14325() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %480 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
  %481 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %482 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %483 = %480.0;
  %484 = @func_12599() /* ty=Tensor[(15, 8, 3), float32] */;
  %485 = %481.0;
  %486 = %482.0;
  (%483, %484, %485, %486)
}

def @func_5979(%var_5937: Tensor[(8, 6, 5), bool]) -> (Tensor[(8, 6, 5), bool], Tensor[(15, 8, 3), float32]) {
  %487 = cast(%var_5937, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
  %488 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 6, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %491 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %492 = logical_or(%489, %490) /* ty=Tensor[(8, 6, 5), bool] */;
  %493 = %491.1;
  (%492, %493)
}

def @func_5468() -> (Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %494 = cast(meta[relay.Constant][33] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %495 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %496 = reshape(%494, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %497 = reshape(%495, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %498 = @func_5002(%496, %497) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %499 = @func_5057() /* ty=Tensor[(15, 8, 3), float32] */;
  %500 = %498.7;
  (%499, %500, meta[relay.Constant][33] /* ty=Tensor[(4), float32] */, meta[relay.Constant][34] /* ty=Tensor[(144), float32] */)
}

def @func_16385(%var_16345: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(4), float32]) {
  %501 = cast(%var_16345, dtype="float32") /* ty=Tensor[(420), float32] */;
  %502 = reshape(%501, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %503 = @func_10608(%502) /* ty=(Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
  %504 = @func_8027() /* ty=Tensor[(15, 8, 3), float32] */;
  %505 = %503.1;
  %506 = @func_15309() /* ty=Tensor[(4), float32] */;
  (%504, %505, %var_16345, %506)
}

def @func_14402() -> (Tensor[(15, 8, 3), bool], Tensor[(144), float32]) {
  %507 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %508 = @func_13765() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) */;
  %509 = %507.0;
  %510 = %508.2;
  (%509, %510)
}

def @func_6084(%var_6077: Tensor[(160), uint16]) -> (Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) {
  %511 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
  %512 = cast(%var_6077, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %513 = cast(%var_6077, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %514 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %515 = reshape(%512, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %516 = reshape(%513, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %517 = reshape(%514, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %518 = @func_5928(%515, %516, %517) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
  %519 = %518.2;
  %520 = cast(%519, dtype="bool") /* ty=Tensor[(4, 1), bool] */;
  %521 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %522 = %511.0;
  %523 = not_equal(%520, %521) /* ty=Tensor[(4, 144), bool] */;
  (%522, %var_6077, %523)
}

def @func_9624() -> (Tensor[(15, 8, 3), float32],) {
  %524 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %525 = %524.0;
  (%525,)
}

def @func_15957() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
  %526 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %527 = %526.1;
  %528 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  (%527, %528)
}

def @func_4695() -> Tensor[(15, 8, 3), int8] {
  %529 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %529.0
}

def @func_12203(%var_12164: Tensor[(192), float64]) -> (Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) {
  %530 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
  %531 = cast(%var_12164, dtype="float64") /* ty=Tensor[(192), float64] */;
  %532 = cast(meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %533 = reshape(%531, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %534 = reshape(%532, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %535 = @func_8270(%533, %534) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) */;
  %536 = cast(meta[relay.Constant][37] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %537 = reshape(%536, newshape=[13, 7, 6]) /* ty=Tensor[(13, 7, 6), float64] */;
  %538 = @func_7505(%537) /* ty=(Tensor[(13, 7, 6), float64],) */;
  %539 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %540 = %530.1;
  %541 = %535.1;
  %542 = %538.0;
  %543 = %539.0;
  (%540, %541, %var_12164, meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, %542, meta[relay.Constant][37] /* ty=Tensor[(546), float64] */, %543)
}

def @func_9850(%var_9787: Tensor[(16, 9, 2), float32]) -> (Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) {
  %544 = cast(%var_9787, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %545 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(16, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = less(%546, %547) /* ty=Tensor[(16, 9, 2), bool] */;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %550 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 9, 2), bool] */, dtype="uint32") /* ty=Tensor[(16, 9, 2), uint32] */;
  %551 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%548, dtype="uint32") /* ty=Tensor[(16, 9, 2), uint32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %554 = acosh(%549) /* ty=Tensor[(16, 9, 2), float32] */;
  %555 = @func_8554() /* ty=Tensor[(273), float64] */;
  %556 = minimum(%552, %553) /* ty=Tensor[(16, 9, 2), uint32] */;
  (%554, %555, %556)
}

def @func_9222() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) {
  %557 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %558 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %559 = %557.0;
  %560 = %558.0;
  (%559, %560)
}

def @func_13303() -> (Tensor[(96), uint64], Tensor[(15, 8, 3), int8]) {
  %561 = @func_7099() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) */;
  %562 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %563 = %561.2;
  %564 = %562.1;
  (%563, %564)
}

def @func_7349() -> Tensor[(15, 8, 3), float32] {
  %565 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %565.1
}

def @func_10506() -> (Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) {
  %566 = @func_10257() /* ty=(Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) */;
  %567 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %568 = %566.2;
  %569 = %567.0;
  (%568, %569)
}

def @func_19339() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %570 = @func_15792() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) */;
  %571 = @func_13193() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %572 = @func_11076() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %573 = %570.1;
  %574 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
  %575 = %571.0;
  %576 = %572.0;
  (%573, %574, %575, %576)
}

def @func_17243() -> (Tensor[(7, 16, 2), float64], Tensor[(13, 7, 6), float64]) {
  %577 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %578 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
  %579 = tan(%577) /* ty=Tensor[(7, 16, 2), float64] */;
  %580 = %578.0;
  (%579, %580)
}

def @func_12498(%var_12479: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  %581 = cast(%var_12479, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  %582 = log10(%581) /* ty=Tensor[(15, 14, 14), float32] */;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  asinh(%583) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_9537(%var_9531: Tensor[(2, 72), float32], %var_9535: Tensor[(400), uint16]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) {
  %584 = @func_6138() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %585 = cast(meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
  %586 = cast(meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
  %587 = cast(%var_9531, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %588 = reshape(%585, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %589 = reshape(%586, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %590 = reshape(%587, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %591 = @func_5928(%588, %589, %590) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
  %592 = cast(%var_9535, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %593 = reshape(%592, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %594 = @func_9301(%593) /* ty=(Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %595 = %584.0;
  %596 = %591.4;
  %597 = %594.3;
  (%595, %596, meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, %var_9531, %597, %var_9535)
}

def @func_19461() -> (Tensor[(15, 8, 3), int8],) {
  %598 = @func_15451() /* ty=Tensor[(15, 8, 3), int8] */;
  (%598,)
}

def @func_6888(%var_6876: Tensor[(96, 1), uint64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) {
  %599 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %600 = cast(%var_6876, dtype="uint64") /* ty=Tensor[(96, 1), uint64] */;
  %601 = reshape(%600, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %602 = @func_6401(%601) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %603 = cast(%var_6876, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %604 = %599.0;
  %605 = %602.0;
  %606 = cos(%603) /* ty=Tensor[(96, 1), float64] */;
  (%604, %605, %606)
}

def @func_4869() -> Tensor[(15, 8, 3), float64] {
  %607 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %607.1
}

def @func_3792() -> (Tensor[(15, 8, 3), float32],) {
  %608 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %609 = acos(%608) /* ty=Tensor[(15, 8, 3), float32] */;
  (%609,)
}

def @func_13733() -> Tensor[(15, 8, 3), float32] {
  %610 = @func_12425() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %610.0
}

def @func_15451() -> Tensor[(15, 8, 3), int8] {
  %611 = @func_12525() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %611.0
}

def @func_6106() -> (Tensor[(15, 8, 3), float32],) {
  %612 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %613 = %612.0;
  (%613,)
}

def @func_14266() -> Tensor[(15, 8, 3), float64] {
  %614 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %614.0
}

def @func_12425() -> (Tensor[(15, 8, 3), float32],) {
  %615 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %616 = %615.0;
  (%616,)
}

def @func_12945() -> (Tensor[(15, 8, 3), float32],) {
  %617 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %618 = %617.0;
  (%618,)
}

def @func_9188() -> (Tensor[(15, 8, 3), float32],) {
  %619 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%619,)
}

def @func_18986(%var_18984: Tensor[(630), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 6, 7), bool], Tensor[(630), int32]) {
  %620 = @func_12755() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %621 = cast(%var_18984, dtype="int32") /* ty=Tensor[(630), int32] */;
  %622 = cast(%var_18984, dtype="int32") /* ty=Tensor[(630), int32] */;
  %623 = reshape(%621, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %624 = reshape(%622, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %625 = @func_7743(%623, %624) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
  %626 = %620.4;
  %627 = %625.0;
  (%626, %627, %var_18984)
}

def @func_12467(%var_12459: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %628 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %629 = cast(%var_12459, dtype="float32") /* ty=Tensor[(420), float32] */;
  %630 = reshape(%629, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %631 = @func_10915(%630) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %632 = @func_4829() /* ty=Tensor[(15, 8, 3), float32] */;
  %633 = %628.0;
  %634 = %631.4;
  (%632, %633, %634, %var_12459)
}

def @func_4230() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %635 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %636 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %637 = %635.0;
  %638 = %636.0;
  (%637, %638)
}

def @func_16929() -> Tensor[(4), float32] {
  @func_6690() /* ty=Tensor[(4), float32] */
}

def @func_16678(%var_16667: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) {
  %639 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %640 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %641 = cast(%var_16667, dtype="float64") /* ty=Tensor[(14), float64] */;
  %642 = reshape(%641, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float64] */;
  %643 = @func_6228(%642) /* ty=(Tensor[(1, 2, 7), float64],) */;
  %644 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %645 = %639.0;
  %646 = %640.0;
  %647 = %643.0;
  %648 = %644.1;
  (%645, %646, %647, %var_16667, %648)
}

def @func_3969(%var_3948: Tensor[(2340), bool], %var_3949: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) {
  %649 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %650 = cast(%var_3948, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %651 = cast(%var_3949, dtype="float64") /* ty=Tensor[(273), float64] */;
  %652 = reshape(%650, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %653 = reshape(%651, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %654 = @func_679(%652, %653) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %655 = %654.1;
  %656 = cast(%655, dtype="int16") /* ty=Tensor[(7, 3, 13), int16] */;
  %657 = shape_of(%var_3949, dtype="int32") /* ty=Tensor[(1), int32] */;
  %658 = cast(%var_3949, dtype="int16") /* ty=Tensor[(273), int16] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?), int16] */;
  %660 = cast(%var_3948, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %661 = cast(%var_3949, dtype="float64") /* ty=Tensor[(273), float64] */;
  %662 = reshape(%660, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %663 = reshape(%661, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %664 = @func_679(%662, %663) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %665 = %649.0;
  %666 = bitwise_and(%658, %659) /* ty=Tensor[(273), int16] */;
  %667 = %664.2;
  (%665, %var_3948, %666, %667)
}

def @func_15361() -> Tensor[(15, 8, 3), float32] {
  @func_8829() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_7505(%var_7502: Tensor[(13, 7, 6), float64]) -> (Tensor[(13, 7, 6), float64],) {
  %668 = cast(%var_7502, dtype="float64") /* ty=Tensor[(13, 7, 6), float64] */;
  %669 = log(%668) /* ty=Tensor[(13, 7, 6), float64] */;
  (%669,)
}

def @func_17795() -> (Tensor[(48, 2), float64], Tensor[(15, 8, 3), float32]) {
  %670 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %671 = %670.2;
  %672 = @func_10004() /* ty=Tensor[(15, 8, 3), float32] */;
  (%671, %672)
}

def @func_4369() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %673 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %674 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %675 = reshape(%674, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %676 = @func_3931(%675) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %677 = %673.0;
  %678 = %676.1;
  (%677, %678, meta[relay.Constant][43] /* ty=Tensor[(144), float32] */)
}

def @func_679(%var_646: Tensor[(12, 13, 15), bool], %var_657: Tensor[(273), float64]) -> (Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %679 = cast(meta[relay.Constant][44] /* ty=Tensor[(12, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %680 = shape_of(%var_646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_646, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %683 = cast(%var_657, dtype="float64") /* ty=Tensor[(273), float64] */;
  %684 = reshape(%683, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %685 = @func_94(%684) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %686 = logical_or(%681, %682) /* ty=Tensor[(12, 13, 15), bool] */;
  %687 = %685.0;
  (%686, %687, %var_657)
}

def @func_16767(%var_16750: Tensor[(4), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %688 = @func_11558() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %689 = @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %690 = cast(%var_16750, dtype="float32") /* ty=Tensor[(4), float32] */;
  %691 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %692 = reshape(%690, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %693 = reshape(%691, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %694 = @func_11281(%692, %693) /* ty=(Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %695 = %688.1;
  %696 = %689.1;
  %697 = %694.6;
  (%695, %696, %697, %var_16750, meta[relay.Constant][45] /* ty=Tensor[(144), float32] */)
}

def @func_18446() -> (Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) {
  %698 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
  %699 = %698.0;
  %700 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 7, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = @func_15871() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %705 = @func_14682() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(4), float32]) */;
  %706 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %707 = @func_17632() /* ty=(Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) */;
  %708 = logical_or(%702, %703) /* ty=Tensor[(13, 7, 6), bool] */;
  %709 = %704.0;
  %710 = %705.1;
  %711 = %706.0;
  %712 = %707.3;
  (%708, %709, %710, %711, %712)
}

def @func_9424(%var_9414: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) {
  %713 = @func_7430() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %714 = cast(%var_9414, dtype="float32") /* ty=Tensor[(420), float32] */;
  %715 = cast(%var_9414, dtype="float32") /* ty=Tensor[(420), float32] */;
  %716 = reshape(%714, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %717 = reshape(%715, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %718 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %719 = %713.1;
  %720 = @func_7951(%716, %717) /* ty=Tensor[(15, 2, 14), float32] */;
  %721 = %718.1;
  (%719, %720, %var_9414, %721)
}

def @func_15309() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_7651() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) {
  %722 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %723 = %722.0;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %725 = reshape(%724, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
  %726 = @func_4761(%725) /* ty=Tensor[(15, 8, 3), uint64] */;
  (%723, %726)
}

def @func_10215(%var_10189: Tensor[(60), bool]) -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(4), float32], Tensor[(60), bool], Tensor[(600), bool], Tensor[(10, 5, 12), float32], Tensor[(16, 9, 2), uint32], Tensor[(144, 2), float32], Tensor[(15, 8, 3), bool]) {
  %727 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %728 = cast(%var_10189, dtype="bool") /* ty=Tensor[(60), bool] */;
  %729 = cast(meta[relay.Constant][47] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
  %730 = reshape(%728, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
  %731 = reshape(%729, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
  %732 = @func_5556(%730, %731) /* ty=Tensor[(10, 5, 12), bool] */;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
  %734 = cast(meta[relay.Constant][48] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %735 = reshape(%734, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %736 = @func_9850(%735) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
  %737 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %738 = %727.1;
  %739 = @func_6690() /* ty=Tensor[(4), float32] */;
  %740 = @func_9507() /* ty=Tensor[(4), float32] */;
  %741 = exp(%733) /* ty=Tensor[(10, 5, 12), float32] */;
  %742 = %736.2;
  %743 = %737.0;
  (%738, %739, %740, %var_10189, meta[relay.Constant][47] /* ty=Tensor[(600), bool] */, %741, %742, meta[relay.Constant][48] /* ty=Tensor[(144, 2), float32] */, %743)
}

def @func_11160(%var_11115: Tensor[(630), int32]) -> (Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %744 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
  %745 = cast(%var_11115, dtype="int32") /* ty=Tensor[(630), int32] */;
  %746 = cast(%var_11115, dtype="int32") /* ty=Tensor[(630), int32] */;
  %747 = reshape(%745, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %748 = reshape(%746, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %749 = @func_7743(%747, %748) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
  %750 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %751 = cast(meta[relay.Constant][49] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %752 = reshape(%751, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %753 = @func_4808(%752) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %754 = @func_9322() /* ty=Tensor[(4), float32] */;
  %755 = %744.2;
  %756 = %749.1;
  %757 = %750.1;
  %758 = %753.1;
  (%754, %755, %756, %var_11115, %757, %758, meta[relay.Constant][49] /* ty=Tensor[(273), float64] */)
}

def @func_7853(%var_7840: Tensor[(9, 14, 8), float64]) -> (Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) {
  %759 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 8), float64] */;
  %760 = cast(%var_7840, dtype="float64") /* ty=Tensor[(9, 14, 8), float64] */;
  %761 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %762 = cast(%var_7840, dtype="float32") /* ty=Tensor[(9, 14, 8), float32] */;
  %763 = subtract(%759, %760) /* ty=Tensor[(9, 14, 8), float64] */;
  %764 = %761.0;
  %765 = exp(%762) /* ty=Tensor[(9, 14, 8), float32] */;
  (%763, %764, %765)
}

def @func_4400(%var_4379: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %766 = cast(%var_4379, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %767 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %768 = cast(meta[relay.Constant][51] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %769 = reshape(%768, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %770 = @func_94(%769) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %771 = cosh(%766) /* ty=Tensor[(4, 2, 10), float32] */;
  %772 = %767.1;
  %773 = %770.0;
  (%771, %772, %773, meta[relay.Constant][51] /* ty=Tensor[(273), float64] */)
}

def @func_6979() -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) {
  %774 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %775 = cast(meta[relay.Constant][52] /* ty=Tensor[(48, 2), uint64] */, dtype="uint64") /* ty=Tensor[(48, 2), uint64] */;
  %776 = reshape(%775, newshape=[96, 1]) /* ty=Tensor[(96, 1), uint64] */;
  %777 = @func_6888(%776) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) */;
  %778 = cast(meta[relay.Constant][52] /* ty=Tensor[(48, 2), uint64] */, dtype="float64") /* ty=Tensor[(48, 2), float64] */;
  %779 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %780 = cast(meta[relay.Constant][53] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %781 = %774.2;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(144), float32] */;
  %783 = reshape(%780, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %784 = reshape(%782, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %785 = @func_5002(%783, %784) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %786 = @func_5252() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
  %787 = %777.1;
  %788 = sin(%778) /* ty=Tensor[(48, 2), float64] */;
  %789 = %779.1;
  %790 = %785.4;
  %791 = %786.2;
  (%781, %787, %788, %789, %790, meta[relay.Constant][53] /* ty=Tensor[(4), float32] */, %791)
}

def @func_7174() -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32]) {
  %792 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %793 = @func_6690() /* ty=Tensor[(4), float32] */;
  %794 = %792.0;
  (%793, %794)
}

def @func_14042(%var_13960: Tensor[(192), float64]) -> (Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) {
  %795 = cast(meta[relay.Constant][54] /* ty=Tensor[(143, 9), float64] */, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %796 = reshape(%795, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float64] */;
  %797 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %798 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %799 = cast(%var_13960, dtype="float64") /* ty=Tensor[(192), float64] */;
  %800 = cast(meta[relay.Constant][55] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %801 = reshape(%799, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %802 = reshape(%800, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %803 = @func_8270(%801, %802) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) */;
  %804 = @func_9252() /* ty=Tensor[(273), float64] */;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(273), float64] */;
  %806 = acos(%805) /* ty=Tensor[(273), float64] */;
  %807 = @func_12871() /* ty=(Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) */;
  %808 = %807.0;
  %809 = cast(%806, dtype="float32") /* ty=Tensor[(273), float32] */;
  %810 = cast(%808, dtype="float32") /* ty=Tensor[(16, 10, ?), float32] */;
  %811 = floor_mod(%809, %810) /* ty=Tensor[(16, 10, 273), float32] */;
  %812 = cast(%806, dtype="bool") /* ty=Tensor[(273), bool] */;
  %813 = cast(%811, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %814 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
  %815 = cast(%811, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %816 = cosh(%815) /* ty=Tensor[(16, 10, 273), float32] */;
  %817 = cast(%816, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %818 = exp(%817) /* ty=Tensor[(16, 10, 273), float32] */;
  %819 = cast(%818, dtype="uint8") /* ty=Tensor[(16, 10, 273), uint8] */;
  %820 = cast(%808, dtype="uint8") /* ty=Tensor[(16, 10, ?), uint8] */;
  %821 = cast(%806, dtype="float64") /* ty=Tensor[(273), float64] */;
  %822 = reshape(%821, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %823 = @func_7914(%822) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
  %824 = cast(%816, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %825 = cast(%818, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %826 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%816, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %829 = @func_6055(%796) /* ty=Tensor[(11, 9, 13), float64] */;
  %830 = %797.1;
  %831 = %798.1;
  %832 = %803.3;
  %833 = logical_and(%812, %813) /* ty=Tensor[(16, 10, 273), bool] */;
  %834 = %814.1;
  %835 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  %836 = subtract(%819, %820) /* ty=Tensor[(16, 10, 273), uint8] */;
  %837 = %823.2;
  %838 = asinh(%824) /* ty=Tensor[(16, 10, 273), float32] */;
  %839 = less_equal(%827, %828) /* ty=Tensor[(16, 10, 273), bool] */;
  (%829, meta[relay.Constant][54] /* ty=Tensor[(143, 9), float64] */, %830, %831, %832, %var_13960, meta[relay.Constant][55] /* ty=Tensor[(144), float32] */, %833, %834, %835, %836, %837, %838, %839)
}

def @func_6762(%var_6740: Tensor[(192), float64], %var_6742: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) {
  %840 = cast(%var_6740, dtype="float64") /* ty=Tensor[(192), float64] */;
  %841 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %842 = cast(%var_6742, dtype="float32") /* ty=Tensor[(144), float32] */;
  %843 = reshape(%840, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %844 = reshape(%841, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %845 = reshape(%842, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %846 = @func_5795(%843, %844, %845) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) */;
  %847 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %848 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %849 = %846.0;
  (%847, %848, %849, %var_6740, meta[relay.Constant][56] /* ty=Tensor[(13, 21), float64] */, %var_6742)
}

def @func_17873() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_15507() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %850 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %851 = @func_8802() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %852 = %850.0;
  %853 = %851.0;
  (%852, %853)
}

def @func_14480() -> Tensor[(15, 8, 3), float32] {
  @func_10004() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_14635() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %854 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %855 = @func_12425() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %856 = %854.1;
  %857 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  %858 = %855.0;
  (%856, %857, %858)
}

def @func_19806(%var_19790: Tensor[(144), float32], %var_19794: Tensor[(13, 21), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(13, 21), float32]) {
  %859 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %860 = cast(%var_19790, dtype="float32") /* ty=Tensor[(144), float32] */;
  %861 = cast(meta[relay.Constant][57] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %862 = reshape(%860, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %863 = reshape(%861, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %864 = @func_9537(%862, %863) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
  %865 = cast(%var_19794, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %866 = reshape(%865, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %867 = @func_7914(%866) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
  %868 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 21), float64] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
  %869 = shape_of(%var_19794, dtype="int32") /* ty=Tensor[(2), int32] */;
  %870 = cast(%var_19794, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %872 = %859.1;
  %873 = %864.0;
  %874 = %867.0;
  %875 = add(%870, %871) /* ty=Tensor[(13, 21), float32] */;
  (%872, %873, %var_19790, meta[relay.Constant][57] /* ty=Tensor[(400), uint16] */, %874, %875)
}

def @func_14976() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %876 = @func_12978() /* ty=Tensor[(15, 8, 3), float32] */;
  %877 = @func_14800() /* ty=Tensor[(15, 8, 3), float32] */;
  (%876, %877)
}

def @func_11607() -> (Tensor[(4), float32],) {
  %878 = @func_9322() /* ty=Tensor[(4), float32] */;
  (%878,)
}

def @func_15616() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
  %879 = @func_11524() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
  %880 = @func_5605() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %881 = @func_13861() /* ty=Tensor[(15, 8, 3), int8] */;
  %882 = %879.0;
  %883 = %880.0;
  (%881, %882, %883)
}

def @func_19076() -> (Tensor[(15, 8, 3), bool], Tensor[(11, 9, 13), float64], Tensor[(192), float64]) {
  %884 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %885 = cast(meta[relay.Constant][59] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %886 = reshape(%885, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %887 = @func_14042(%886) /* ty=(Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) */;
  %888 = %884.0;
  %889 = %887.0;
  (%888, %889, meta[relay.Constant][59] /* ty=Tensor[(192), float64] */)
}

def @func_6401(%var_6397: Tensor[(96), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) {
  %890 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %891 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %892 = %891.0;
  %893 = cast(%892, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %894 = cast(%var_6397, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %895 = reshape(%894, newshape=[2, 48]) /* ty=Tensor[(2, 48), uint64] */;
  %896 = @func_6191(%895) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) */;
  %897 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %898 = %890.0;
  %899 = sqrt(%893) /* ty=Tensor[(15, 8, 3), float32] */;
  %900 = %896.0;
  (%897, %898, %899, %900, %var_6397)
}

def @func_19680() -> Tensor[(15, 8, 3), float64] {
  %901 = @func_16423() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %901.0
}

def @func_7099() -> (Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) {
  %902 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %903 = cast(meta[relay.Constant][60] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %904 = reshape(%903, newshape=[96, 1]) /* ty=Tensor[(96, 1), uint64] */;
  %905 = @func_6888(%904) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) */;
  %906 = %902.0;
  %907 = %905.2;
  (%906, %907, meta[relay.Constant][60] /* ty=Tensor[(96), uint64] */)
}

def @func_13533() -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) {
  %908 = @func_12525() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %909 = cast(meta[relay.Constant][61] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %910 = cast(meta[relay.Constant][62] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %911 = reshape(%909, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %912 = reshape(%910, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %913 = @func_11281(%911, %912) /* ty=(Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %914 = %913.1;
  %915 = cast(%914, dtype="int32") /* ty=Tensor[(12, 3, 4), int32] */;
  %916 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(24, 6), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %917 = cast(meta[relay.Constant][62] /* ty=Tensor[(24, 6), float32] */, dtype="int32") /* ty=Tensor[(24, 6), int32] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %919 = %908.0;
  %920 = bitwise_xor(%917, %918) /* ty=Tensor[(24, 6), int32] */;
  (%919, meta[relay.Constant][61] /* ty=Tensor[(4), float32] */, %920)
}

def @func_6845() -> Tensor[(15, 8, 3), float32] {
  %921 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %921.0
}

def @func_18377() -> Tensor[(15, 8, 3), float32] {
  @func_15361() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_17174(%var_17149: Tensor[(80), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), float64], Tensor[(80), float32], Tensor[(15, 8, 3), float32]) {
  %922 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %923 = cast(%var_17149, dtype="float32") /* ty=Tensor[(80), float32] */;
  %924 = reshape(%923, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %925 = @func_4400(%924) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %926 = %922.0;
  %927 = %925.3;
  %928 = @func_15184() /* ty=Tensor[(15, 8, 3), float32] */;
  (%926, %927, %var_17149, %928)
}

def @func_8120() -> Tensor[(15, 8, 3), float32] {
  %929 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %929.0
}

def @func_18667() -> Tensor[(15, 8, 3), float64] {
  %930 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %930.0
}

def @func_9143() -> (Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) {
  %931 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %932 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %933 = %931.1;
  %934 = %932.0;
  (%933, %934)
}

def @func_15184() -> Tensor[(15, 8, 3), float32] {
  @func_13667() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_16827() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %935 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %936 = @func_11722() /* ty=Tensor[(15, 8, 3), float32] */;
  %937 = %935.0;
  (%936, %937)
}

def @func_14142() -> (Tensor[(4), float32],) {
  %938 = @func_9322() /* ty=Tensor[(4), float32] */;
  (%938,)
}

def @func_4523() -> (Tensor[(15, 8, 3), float32],) {
  %939 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %940 = %939.1;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %942 = asin(%941) /* ty=Tensor[(15, 8, 3), float32] */;
  (%942,)
}

def @func_14682() -> (Tensor[(15, 8, 3), float64], Tensor[(4), float32]) {
  %943 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %944 = @func_14142() /* ty=(Tensor[(4), float32],) */;
  %945 = %943.0;
  %946 = %944.0;
  (%945, %946)
}

def @func_4855() -> Tensor[(15, 8, 3), float32] {
  %947 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %947.0
}

def @func_7835() -> (Tensor[(15, 8, 3), float32],) {
  %948 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %949 = %948.1;
  (%949,)
}

def @func_18958() -> Tensor[(15, 8, 3), float32] {
  %950 = @func_12911() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) */;
  %950.0
}

def @func_9672() -> (Tensor[(15, 8, 3), float32],) {
  %951 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%951,)
}

def @func_14423() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %952 = @func_10072() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) */;
  %953 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
  %954 = %952.1;
  %955 = %953.1;
  (%954, %955)
}

def @func_16501() -> (Tensor[(15, 8, 3), int8],) {
  %956 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %957 = %956.0;
  (%957,)
}

def @func_10031() -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8]) {
  %958 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %959 = @func_8802() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %960 = %958.1;
  %961 = %959.0;
  (%960, %961)
}

def @func_10812() -> (Tensor[(15, 8, 3), float32],) {
  %962 = @func_8027() /* ty=Tensor[(15, 8, 3), float32] */;
  (%962,)
}

def @func_12599() -> Tensor[(15, 8, 3), float32] {
  %963 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %963.0
}

def @func_15717() -> Tensor[(15, 8, 3), float32] {
  %964 = @func_15399() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %964.0
}

def @func_9327() -> Tensor[(15, 8, 3), float32] {
  %965 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %965.1
}

def @func_15693(%var_15690: Tensor[(14, 14, 1), float32]) -> (Tensor[(14, 14, 1), float32],) {
  %966 = cast(%var_15690, dtype="float32") /* ty=Tensor[(14, 14, 1), float32] */;
  %967 = asin(%966) /* ty=Tensor[(14, 14, 1), float32] */;
  (%967,)
}

def @func_7400(%var_7397: Tensor[(2340), bool], %var_7398: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) {
  %968 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %969 = cast(%var_7397, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %970 = cast(%var_7398, dtype="float64") /* ty=Tensor[(273), float64] */;
  %971 = reshape(%969, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %972 = reshape(%970, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %973 = @func_679(%971, %972) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %974 = %968.0;
  %975 = %973.1;
  (%974, %975, %var_7397, %var_7398)
}

def @func_19156() -> Tensor[(144), float32] {
  %976 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
  %976.1
}

def @func_13140(%var_13085: Tensor[(16, 5, 12), float32]) -> (Tensor[(16, 5, 12), float32], Tensor[(11, 5, 10), bool], Tensor[(550), uint32], Tensor[(16, 5, 12), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16]) {
  %977 = cast(%var_13085, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  %978 = cast(meta[relay.Constant][63] /* ty=Tensor[(550), uint32] */, dtype="uint32") /* ty=Tensor[(550), uint32] */;
  %979 = cast(meta[relay.Constant][63] /* ty=Tensor[(550), uint32] */, dtype="uint32") /* ty=Tensor[(550), uint32] */;
  %980 = reshape(%978, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), uint32] */;
  %981 = reshape(%979, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), uint32] */;
  %982 = @func_11839(%980, %981) /* ty=(Tensor[(11, 5, 10), bool],) */;
  %983 = cast(%var_13085, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  %984 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %985 = cast(meta[relay.Constant][64] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %986 = reshape(%985, newshape=[400]) /* ty=Tensor[(400), uint16] */;
  %987 = @func_9301(%986) /* ty=(Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %988 = sqrt(%977) /* ty=Tensor[(16, 5, 12), float32] */;
  %989 = %982.0;
  %990 = acosh(%983) /* ty=Tensor[(16, 5, 12), float32] */;
  %991 = %984.0;
  %992 = %987.4;
  (%988, %989, meta[relay.Constant][63] /* ty=Tensor[(550), uint32] */, %990, %991, %992, meta[relay.Constant][64] /* ty=Tensor[(400), uint16] */)
}

def @func_12819(%var_12804: Tensor[(273), float64], %var_12808: Tensor[(2340), bool]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), int16], Tensor[(273), float64], Tensor[(2340), bool]) {
  %993 = cast(meta[relay.Constant][65] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %994 = cast(%var_12804, dtype="float64") /* ty=Tensor[(273), float64] */;
  %995 = reshape(%993, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
  %996 = reshape(%994, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %997 = @func_3969(%995, %996) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
  %998 = cast(%var_12808, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %999 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(2340), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1000 = cast(meta[relay.Constant][65] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1002 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  %1003 = %997.2;
  %1004 = not_equal(%1000, %1001) /* ty=Tensor[(2340), bool] */;
  (%1002, %1003, %var_12804, %1004)
}

def @func_10632() -> Tensor[(15, 8, 3), float32] {
  %1005 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1005.0
}

def @func_11076() -> (Tensor[(15, 8, 3), float32],) {
  %1006 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1007 = %1006.0;
  (%1007,)
}

def @func_6228(%var_6207: Tensor[(1, 2, 7), float64]) -> (Tensor[(1, 2, 7), float64],) {
  %1008 = cast(%var_6207, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %1009 = atan(%1008) /* ty=Tensor[(1, 2, 7), float64] */;
  %1010 = cast(%1009, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %1011 = exp(%1010) /* ty=Tensor[(1, 2, 7), float64] */;
  (%1011,)
}

def @func_13314() -> Tensor[(15, 8, 3), bool] {
  %1012 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %1012.0
}

def @func_5057() -> Tensor[(15, 8, 3), float32] {
  %1013 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1013.1
}

def @func_13667() -> Tensor[(15, 8, 3), float32] {
  %1014 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1014.0
}

def @func_9775() -> (Tensor[(15, 8, 3), float64],) {
  %1015 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %1016 = %1015.3;
  (%1016,)
}

def @func_9991() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %1017 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
  %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %1019 = reshape(%1018, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %1020 = @func_4951(%1019) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %1021 = %1020.1;
  (%1017, %1021)
}

def @func_11023() -> (Tensor[(4), float32],) {
  %1022 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1023 = %1022.1;
  (%1023,)
}

def @func_5630() -> (Tensor[(15, 8, 3), float32],) {
  %1024 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1025 = %1024.1;
  (%1025,)
}

def @func_17363() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %1026 = @func_13777() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1027 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %1028 = %1026.0;
  %1029 = %1027.0;
  %1030 = @func_8155() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1028, %1029, %1030)
}

def @func_10332() -> (Tensor[(400), float64],) {
  %1031 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
  %1032 = %1031.2;
  %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1034 = rsqrt(%1033) /* ty=Tensor[(400), float64] */;
  (%1034,)
}

def @func_12366(%var_12348: uint16) -> (Tensor[(15, 8, 3), float64], Tensor[(8, 13, 12), bool]) {
  %1035 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %1036 = cast(%var_12348, dtype="uint16") /* ty=uint16 */;
  %1037 = reshape(%1036, newshape=[]) /* ty=uint16 */;
  %1038 = @func_8932(%1037) /* ty=(Tensor[(8, 13, 12), uint16],) */;
  %1039 = %1038.0;
  %1040 = cast(%1039, dtype="bool") /* ty=Tensor[(8, 13, 12), bool] */;
  %1041 = cast(%var_12348, dtype="bool") /* ty=bool */;
  %1042 = %1035.0;
  %1043 = greater_equal(%1040, %1041) /* ty=Tensor[(8, 13, 12), bool] */;
  (%1042, %1043)
}

def @func_16598() -> (Tensor[(4), float32], Tensor[(15, 8, 3), float64]) {
  %1044 = @func_15894() /* ty=(Tensor[(4), float32],) */;
  %1045 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %1046 = %1044.0;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_18778() -> (Tensor[(15, 8, 3), bool],) {
  %1048 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_12871() -> (Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) {
  %1050 = cast(meta[relay.Constant][66] /* ty=Tensor[(16, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 1), float32] */;
  %1051 = sqrt(%1050) /* ty=Tensor[(16, 10, 1), float32] */;
  %1052 = cast(meta[relay.Constant][66] /* ty=Tensor[(16, 10, 1), float32] */, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1051, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1056 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %1057 = %1056.0;
  %1058 = cast(%1051, dtype="uint32") /* ty=Tensor[(16, 10, 1), uint32] */;
  %1059 = cast(%1057, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %1060 = bitwise_and(%1054, %1055) /* ty=Tensor[(16, 10, ?), uint64] */;
  %1061 = minimum(%1058, %1059) /* ty=Tensor[(16, 10, 144), uint32] */;
  (%1060, %1061)
}

def @func_5387() -> (Tensor[(4), float32],) {
  %1062 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %1063 = %1062.1;
  (%1063,)
}

def @func_10939() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1064 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1065 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %1066 = %1064.0;
  %1067 = %1065.0;
  (%1066, %1067)
}

def @func_15894() -> (Tensor[(4), float32],) {
  %1068 = @func_6690() /* ty=Tensor[(4), float32] */;
  (%1068,)
}

def @func_15016() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1069 = @func_13005() /* ty=(Tensor[(4), float32],) */;
  %1070 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
  %1071 = %1069.0;
  (%1070, %1071)
}

def @func_11693() -> (Tensor[(4), float32],) {
  %1072 = @func_11400() /* ty=Tensor[(4), float32] */;
  (%1072,)
}

def @func_8829() -> Tensor[(15, 8, 3), float32] {
  %1073 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1073.1
}

def @func_13910() -> Tensor[(273), float64] {
  %1074 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %1074.2
}

def @func_10784(%var_10771: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
  %1075 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %1076 = cast(%var_10771, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1077 = reshape(%1076, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1078 = @func_3931(%1077) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %1079 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1080 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %1081 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %1082 = %1075.0;
  %1083 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %1084 = %1078.3;
  %1085 = %1079.0;
  %1086 = %1080.1;
  %1087 = %1081.0;
  (%1082, %1083, %1084, %var_10771, %1085, %1086, %1087)
}

def @func_17062() -> (Tensor[(15, 8, 3), float32],) {
  %1088 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1089 = %1088.0;
  (%1089,)
}

def @func_11558() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  %1090 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %1091 = @func_7430() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %1092 = %1090.0;
  %1093 = %1091.1;
  (%1092, %1093)
}

def @func_13861() -> Tensor[(15, 8, 3), int8] {
  %1094 = @func_9222() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) */;
  %1094.0
}

def @func_14716() -> Tensor[(4), float32] {
  %1095 = @func_11023() /* ty=(Tensor[(4), float32],) */;
  %1095.0
}

def @func_8270(%var_8265: Tensor[(192), float64], %var_8267: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) {
  %1096 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1097 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1098 = %1097.1;
  %1099 = cast(%1098, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %1100 = cast(%var_8265, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1101 = cast(meta[relay.Constant][67] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1102 = cast(%var_8267, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1103 = reshape(%1100, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %1104 = reshape(%1101, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1105 = reshape(%1102, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1106 = @func_5795(%1103, %1104, %1105) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) */;
  %1107 = %1096.0;
  %1108 = sigmoid(%1099) /* ty=Tensor[(15, 8, 3), float64] */;
  %1109 = %1106.8;
  (%1107, %1108, %1109, %var_8265, meta[relay.Constant][67] /* ty=Tensor[(273), float64] */, %var_8267)
}

def @func_13719(%var_13715: Tensor[(14, 1, 4), float64]) -> Tensor[(14, 1, 4), float64] {
  %1110 = cast(%var_13715, dtype="float64") /* ty=Tensor[(14, 1, 4), float64] */;
  asin(%1110) /* ty=Tensor[(14, 1, 4), float64] */
}

def @func_10549() -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %1111 = @func_5468() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %1112 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1113 = %1111.1;
  %1114 = %1112.0;
  (%1113, %1114)
}

def @func_8464(%var_8457: Tensor[(4), float32], %var_8458: Tensor[(4, 36), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) {
  %1115 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1116 = cast(%var_8457, dtype="float32") /* ty=Tensor[(4), float32] */;
  %1117 = cast(%var_8458, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %1118 = reshape(%1116, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %1119 = reshape(%1117, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1120 = @func_5002(%1118, %1119) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %1121 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %1122 = %1115.1;
  %1123 = %1120.5;
  (%1121, %1122, %1123, %var_8457, %var_8458)
}

def @func_3594(%var_3474: Tensor[(1, 1, 4), float32], %var_3475: Tensor[(12, 3, 4), float32]) -> (Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) {
  %1124 = cast(meta[relay.Constant][68] /* ty=Tensor[(4, 24), uint64] */, dtype="uint64") /* ty=Tensor[(4, 24), uint64] */;
  %1125 = reshape(%1124, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %1126 = cast(%var_3474, dtype="float32") /* ty=Tensor[(1, 1, 4), float32] */;
  %1127 = cast(%var_3475, dtype="float32") /* ty=Tensor[(12, 3, 4), float32] */;
  %1128 = power(%1126, %1127) /* ty=Tensor[(12, 3, 4), float32] */;
  %1129 = cast(%1128, dtype="int8") /* ty=Tensor[(12, 3, 4), int8] */;
  %1130 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_3475, dtype="int8") /* ty=Tensor[(12, 3, 4), int8] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1133 = bitwise_xor(%1131, %1132) /* ty=Tensor[(12, 3, 4), int8] */;
  %1134 = cast(%1133, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1135 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%var_3475, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1138 = cast(%var_3475, dtype="uint64") /* ty=Tensor[(12, 3, 4), uint64] */;
  %1139 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1140 = cast(%1128, dtype="uint64") /* ty=Tensor[(12, 3, 4), uint64] */;
  %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1142 = cast(meta[relay.Constant][68] /* ty=Tensor[(4, 24), uint64] */, dtype="uint64") /* ty=Tensor[(4, 24), uint64] */;
  %1143 = reshape(%1142, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %1144 = cast(%1133, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1145 = shape_of(%1128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%1128, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1148 = cast(meta[relay.Constant][69] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %1149 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1150 = reshape(%1148, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %1151 = reshape(%1149, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1152 = @func_679(%1150, %1151) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1153 = %1152.0;
  %1154 = cast(%1153, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1155 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1156 = reshape(%1154, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %1157 = reshape(%1155, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1158 = @func_679(%1156, %1157) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1159 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1160 = sinh(%1159) /* ty=Tensor[(13, 21), float64] */;
  %1161 = cast(meta[relay.Constant][69] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %1162 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1163 = reshape(%1161, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %1164 = reshape(%1162, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1165 = @func_679(%1163, %1164) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1166 = %1165.2;
  %1167 = cast(%1166, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1168 = shape_of(%1160, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1169 = cast(%1160, dtype="bool") /* ty=Tensor[(13, 21), bool] */;
  %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1171 = @func_2535(%1125) /* ty=Tensor[(4, 6, 4), bool] */;
  %1172 = not_equal(%1136, %1137) /* ty=Tensor[(12, 3, 4), bool] */;
  %1173 = bitwise_and(%1140, %1141) /* ty=Tensor[(12, 3, 4), uint64] */;
  %1174 = @func_2535(%1143) /* ty=Tensor[(4, 6, 4), bool] */;
  %1175 = less(%1146, %1147) /* ty=Tensor[(12, 3, 4), bool] */;
  %1176 = %1158.0;
  %1177 = less_equal(%1169, %1170) /* ty=Tensor[(13, 21), bool] */;
  (%1171, meta[relay.Constant][68] /* ty=Tensor[(4, 24), uint64] */, %1172, %1173, %1174, %1175, meta[relay.Constant][69] /* ty=Tensor[(2340), bool] */, %1153, %1176, %1177)
}

def @func_9252() -> Tensor[(273), float64] {
  @func_8554() /* ty=Tensor[(273), float64] */
}

def @func_4149() -> (Tensor[(15, 8, 3), float32],) {
  %1178 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1179 = %1178.0;
  (%1179,)
}

def @func_10965() -> Tensor[(15, 8, 3), float32] {
  %1180 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
  %1180.1
}

def @func_5857() -> (Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
  %1181 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %1182 = cast(meta[relay.Constant][71] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1183 = reshape(%1182, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1184 = @func_4808(%1183) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1185 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1186 = %1185.0;
  %1187 = cast(%1186, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %1188 = %1181.0;
  %1189 = %1184.2;
  %1190 = cos(%1187) /* ty=Tensor[(15, 8, 3), float64] */;
  (%1188, %1189, meta[relay.Constant][71] /* ty=Tensor[(273), float64] */, %1190)
}

def @func_16423() -> (Tensor[(15, 8, 3), float64],) {
  %1191 = @func_14266() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1191,)
}

def @func_12755() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %1192 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1193 = cast(meta[relay.Constant][72] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %1194 = cast(meta[relay.Constant][72] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %1195 = reshape(%1193, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %1196 = reshape(%1194, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
  %1197 = @func_7743(%1195, %1196) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
  %1198 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %1199 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1200 = %1192.0;
  %1201 = %1197.1;
  %1202 = %1198.1;
  %1203 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
  %1204 = %1199.0;
  (%1200, %1201, meta[relay.Constant][72] /* ty=Tensor[(630), int32] */, %1202, %1203, %1204)
}

def @func_4330() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) {
  %1205 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1206 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1207 = %1205.0;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_18639() -> Tensor[(4), float32] {
  %1209 = @func_17754() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1209.1
}

def @func_9231() -> (Tensor[(144), float32],) {
  %1210 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %1211 = %1210.0;
  (%1211,)
}

def @func_9582(%var_9559: Tensor[(600), bool]) -> (Tensor[(15, 8, 3), float32], Tensor[(10, 5, 12), bool], Tensor[(60), bool], Tensor[(600), bool], Tensor[(15, 8, 3), float32]) {
  %1212 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1213 = cast(meta[relay.Constant][73] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1214 = cast(%var_9559, dtype="bool") /* ty=Tensor[(600), bool] */;
  %1215 = reshape(%1213, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
  %1216 = reshape(%1214, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
  %1217 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1218 = %1212.0;
  %1219 = @func_5556(%1215, %1216) /* ty=Tensor[(10, 5, 12), bool] */;
  %1220 = %1217.0;
  (%1218, %1219, meta[relay.Constant][73] /* ty=Tensor[(60), bool] */, %var_9559, %1220)
}

def @func_15399() -> (Tensor[(15, 8, 3), float32],) {
  %1221 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1221,)
}

def @func_17699() -> Tensor[(400), float64] {
  %1222 = @func_10332() /* ty=(Tensor[(400), float64],) */;
  %1222.0
}

def @func_11281(%var_11257: Tensor[(4), float32], %var_11258: Tensor[(144), float32]) -> (Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1223 = @func_7099() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) */;
  %1224 = cast(%var_11257, dtype="float32") /* ty=Tensor[(4), float32] */;
  %1225 = cast(%var_11258, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1226 = reshape(%1224, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
  %1227 = reshape(%1225, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
  %1228 = @func_3594(%1226, %1227) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
  %1229 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1230 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1231 = %1223.2;
  %1232 = %1228.3;
  %1233 = %1229.0;
  %1234 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  %1235 = %1230.0;
  (%1231, %1232, %var_11257, %var_11258, %1233, %1234, %1235)
}

def @func_13200() -> (Tensor[(15, 8, 3), float32],) {
  %1236 = @func_9672() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1237 = %1236.0;
  (%1237,)
}

def @func_10687(%var_10644: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 8, 3), bool], Tensor[(4), float32]) {
  %1238 = cast(%var_10644, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %1239 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %1240 = @func_10410() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
  %1241 = sin(%1238) /* ty=Tensor[(16, 8, 1), float64] */;
  %1242 = %1239.0;
  %1243 = %1240.0;
  (%1241, %1242, %1243)
}

def @func_15792() -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) {
  %1244 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
  %1245 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1246 = %1244.0;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_11722() -> Tensor[(15, 8, 3), float32] {
  @func_6845() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_16228() -> (Tensor[(144), float32], Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32]) {
  %1248 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
  %1249 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %1250 = %1248.1;
  %1251 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %1252 = %1249.4;
  (%1250, %1251, %1252)
}

def @func_5605() -> (Tensor[(15, 8, 3), float32],) {
  %1253 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1254 = %1253.0;
  (%1254,)
}

def @func_7914(%var_7878: Tensor[(39, 7), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) {
  %1255 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1256 = cast(meta[relay.Constant][74] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %1257 = cast(meta[relay.Constant][75] /* ty=Tensor[(39, 7), float64] */, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
  %1258 = reshape(%1256, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
  %1259 = reshape(%1257, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1260 = @func_3969(%1258, %1259) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
  %1261 = cast(%var_7878, dtype="bool") /* ty=Tensor[(39, 7), bool] */;
  %1262 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(39, 7), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1263 = cast(meta[relay.Constant][75] /* ty=Tensor[(39, 7), float64] */, dtype="bool") /* ty=Tensor[(39, 7), bool] */;
  %1264 = dyn.reshape(%1261, %1262, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1265 = %1255.0;
  %1266 = %1260.0;
  %1267 = less(%1263, %1264) /* ty=Tensor[(39, 7), bool] */;
  (%1265, %1266, meta[relay.Constant][74] /* ty=Tensor[(2340), bool] */, %1267)
}

def @func_2535(%var_2510: Tensor[(4, 6, 4), uint64]) -> Tensor[(4, 6, 4), bool] {
  %1268 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 6, 4), uint64] */, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %1269 = cast(%var_2510, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
  greater(%1268, %1269) /* ty=Tensor[(4, 6, 4), bool] */
}

def @func_9935() -> (Tensor[(273), float64], Tensor[(144), float32]) {
  %1270 = @func_9231() /* ty=(Tensor[(144), float32],) */;
  %1271 = @func_9252() /* ty=Tensor[(273), float64] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_18555() -> Tensor[(15, 8, 3), float32] {
  %1273 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1273.0
}

def @func_17632() -> (Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) {
  %1274 = @func_14716() /* ty=Tensor[(4), float32] */;
  %1275 = cast(%1274, dtype="float32") /* ty=Tensor[(4), float32] */;
  %1276 = cast(meta[relay.Constant][77] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1277 = reshape(%1275, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %1278 = reshape(%1276, newshape=[4, 36]) /* ty=Tensor[(4, 36), float32] */;
  %1279 = @func_8464(%1277, %1278) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) */;
  %1280 = @func_10332() /* ty=(Tensor[(400), float64],) */;
  %1281 = %1279.4;
  %1282 = %1280.0;
  %1283 = @func_13643() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1274, %1281, meta[relay.Constant][77] /* ty=Tensor[(144), float32] */, %1282, %1283)
}

def @func_5034() -> Tensor[(15, 8, 3), float32] {
  %1284 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1284.0
}

def @func_13777() -> (Tensor[(15, 8, 3), float32],) {
  %1285 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1285,)
}

def @func_5817() -> (Tensor[(15, 8, 3), float32],) {
  %1286 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_17210(%var_17207: Tensor[(13, 12, 1), float32]) -> Tensor[(13, 12, 1), float32] {
  %1288 = cast(%var_17207, dtype="float32") /* ty=Tensor[(13, 12, 1), float32] */;
  cosh(%1288) /* ty=Tensor[(13, 12, 1), float32] */
}

def @func_3931(%var_3871: Tensor[(144), float32]) -> (Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) {
  %1289 = cast(meta[relay.Constant][78] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %1290 = cast(%var_3871, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1291 = reshape(%1289, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
  %1292 = reshape(%1290, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
  %1293 = @func_3594(%1291, %1292) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
  %1294 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1295 = %1294.0;
  %1296 = cast(%1295, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1297 = cosh(%1296) /* ty=Tensor[(15, 8, 3), float32] */;
  %1298 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1299 = %1298.0;
  %1300 = cast(%1299, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1301 = shape_of(%1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1302 = cast(%1297, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1303 = dyn.reshape(%1300, %1301, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1304 = divide(%1302, %1303) /* ty=Tensor[(15, 8, 3), float32] */;
  %1305 = cast(%1299, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1306 = shape_of(%1304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1307 = cast(%1304, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1309 = cast(meta[relay.Constant][79] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1310 = reshape(%1309, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %1311 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1312 = %1293.9;
  %1313 = floor_divide(%1307, %1308) /* ty=Tensor[(15, 8, 3), float32] */;
  %1314 = @func_2535(%1310) /* ty=Tensor[(4, 6, 4), bool] */;
  %1315 = %1311.0;
  (%1312, meta[relay.Constant][78] /* ty=Tensor[(4), float32] */, %var_3871, %1313, %1314, meta[relay.Constant][79] /* ty=Tensor[(96), uint64] */, %1315)
}

def @func_9897() -> (Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) {
  %1316 = cast(meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %1317 = cast(meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %1318 = reshape(%1316, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %1319 = reshape(%1317, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %1320 = @func_7186() /* ty=Tensor[(15, 8, 3), float64] */;
  %1321 = @func_8999(%1318, %1319) /* ty=Tensor[(10, 4, 10), float32] */;
  (%1320, %1321, meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */)
}

def @func_6138() -> (Tensor[(15, 8, 3), float32],) {
  %1322 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1322,)
}

def @func_4091() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1323 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1324 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1325 = %1323.0;
  %1326 = %1324.0;
  (%1325, %1326)
}

def @func_9385() -> (Tensor[(15, 8, 3), float64],) {
  %1327 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %1328 = %1327.1;
  (%1328,)
}

def @func_11951(%var_11927: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) {
  %1329 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %1330 = cast(%var_11927, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1331 = reshape(%1330, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1332 = @func_4808(%1331) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1333 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  %1334 = %1329.0;
  %1335 = %1332.0;
  (%1333, %1334, %1335, %var_11927)
}

def @func_6338() -> (Tensor[(15, 8, 3), float64],) {
  %1336 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1336,)
}

def @func_8155() -> Tensor[(15, 8, 3), float64] {
  %1337 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %1338 = cast(meta[relay.Constant][81] /* ty=Tensor[(15, 8, 3), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %1339 = shape_of(%1337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1340 = cast(%1337, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %1341 = dyn.reshape(%1338, %1339, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1342 = greater(%1340, %1341) /* ty=Tensor[(15, 8, 3), bool] */;
  %1343 = cast(%1342, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  sin(%1343) /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_10161() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1344 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1345 = %1344.0;
  %1346 = @func_9507() /* ty=Tensor[(4), float32] */;
  (%1345, %1346)
}

def @func_10435() -> (Tensor[(4), float32],) {
  %1347 = @func_10410() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
  %1348 = %1347.1;
  (%1348,)
}

def @func_16721(%var_16702: Tensor[(490), float32], %var_16715: Tensor[(490), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(5, 14, 7), float32], Tensor[(490), bool]) {
  %1349 = cast(%var_16702, dtype="float32") /* ty=Tensor[(490), float32] */;
  %1350 = reshape(%1349, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), float32] */;
  %1351 = @func_15641(%1350) /* ty=(Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) */;
  %1352 = cast(%var_16702, dtype="float64") /* ty=Tensor[(490), float64] */;
  %1353 = rsqrt(%1352) /* ty=Tensor[(490), float64] */;
  %1354 = cast(%var_16715, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1355 = shape_of(%1353, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1356 = cast(%1353, dtype="bool") /* ty=Tensor[(490), bool] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1358 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %1359 = %1351.1;
  %1360 = equal(%1356, %1357) /* ty=Tensor[(490), bool] */;
  (%1358, %1359, %1360)
}

def @func_13643() -> Tensor[(15, 8, 3), float64] {
  @func_4869() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_17932() -> (Tensor[(1008), float64], Tensor[(15, 8, 3), float64]) {
  %1361 = @func_16280() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) */;
  %1362 = %1361.2;
  %1363 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1362, %1363)
}

def @func_10915(%var_10894: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %1364 = cast(meta[relay.Constant][82] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1365 = reshape(%1364, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %1366 = @func_2535(%1365) /* ty=Tensor[(4, 6, 4), bool] */;
  %1367 = cast(%1366, dtype="uint64") /* ty=Tensor[(4, 6, 4), uint64] */;
  %1368 = reshape(%1367, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1369 = @func_6401(%1368) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %1370 = cast(%var_10894, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1371 = reshape(%1370, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %1372 = @func_10608(%1371) /* ty=(Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
  %1373 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1374 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %1375 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %1376 = %1369.0;
  %1377 = %1372.2;
  %1378 = %1373.0;
  %1379 = %1374.0;
  (%1375, %1366, meta[relay.Constant][82] /* ty=Tensor[(96), uint64] */, %1376, %1377, %var_10894, %1378, %1379)
}

def @func_5143() -> (Tensor[(15, 8, 3), int8],) {
  %1380 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1381 = %1380.0;
  (%1381,)
}

def @func_14586() -> (Tensor[(13, 7, 6), float64],) {
  %1382 = @func_13158() /* ty=(Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) */;
  %1383 = %1382.1;
  (%1383,)
}

def @func_6026() -> (Tensor[(273), float64], Tensor[(15, 8, 3), float32]) {
  %1384 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %1385 = %1384.2;
  %1386 = cast(%1385, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1387 = log(%1386) /* ty=Tensor[(273), float64] */;
  %1388 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1387, %1388)
}

def @func_12978() -> Tensor[(15, 8, 3), float32] {
  @func_8027() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15931() -> (Tensor[(4), float32],) {
  %1389 = @func_15744() /* ty=(Tensor[(4), float32],) */;
  %1390 = %1389.0;
  (%1390,)
}

def @func_8862() -> (Tensor[(15, 8, 3), float32],) {
  %1391 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1392 = %1391.0;
  (%1392,)
}

def @func_18138(%var_18106: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) {
  %1393 = @func_11076() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1394 = cast(%var_18106, dtype="float64") /* ty=Tensor[(14), float64] */;
  %1395 = reshape(%1394, newshape=[14]) /* ty=Tensor[(14), float64] */;
  %1396 = @func_16678(%1395) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) */;
  %1397 = cast(meta[relay.Constant][83] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1398 = reshape(%1397, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1399 = @func_4808(%1398) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1400 = @func_11607() /* ty=(Tensor[(4), float32],) */;
  %1401 = @func_11722() /* ty=Tensor[(15, 8, 3), float32] */;
  %1402 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
  %1403 = %1393.0;
  %1404 = %1396.4;
  %1405 = %1399.2;
  %1406 = %1400.0;
  (%1401, %1402, %1403, %1404, %var_18106, %1405, meta[relay.Constant][83] /* ty=Tensor[(273), float64] */, %1406)
}

def @func_10616() -> (Tensor[(15, 8, 3), float32],) {
  %1407 = @func_9624() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1408 = %1407.0;
  (%1408,)
}

def @func_94(%var_49: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float32],) {
  %1409 = cast(%var_49, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %1410 = cosh(%1409) /* ty=Tensor[(7, 3, 13), float64] */;
  %1411 = cast(%var_49, dtype="float32") /* ty=Tensor[(7, 3, 13), float32] */;
  %1412 = shape_of(%1410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1413 = cast(%1410, dtype="float32") /* ty=Tensor[(7, 3, 13), float32] */;
  %1414 = dyn.reshape(%1411, %1412, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1415 = minimum(%1413, %1414) /* ty=Tensor[(7, 3, 13), float32] */;
  (%1415,)
}

def @func_7951(%var_7945: Tensor[(15, 2, 14), float32], %var_7946: Tensor[(15, 2, 14), float32]) -> Tensor[(15, 2, 14), float32] {
  %1416 = cast(%var_7946, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
  %1417 = shape_of(%var_7945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1418 = cast(%var_7945, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
  %1419 = dyn.reshape(%1416, %1417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1418, %1419) /* ty=Tensor[(15, 2, 14), float32] */
}

def @func_13765() -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) {
  %1420 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
  %1421 = %1420.1;
  %1422 = cast(%1421, dtype="float32") /* ty=Tensor[(4), float32] */;
  %1423 = cast(meta[relay.Constant][84] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1424 = reshape(%1422, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %1425 = reshape(%1423, newshape=[4, 36]) /* ty=Tensor[(4, 36), float32] */;
  %1426 = @func_8464(%1424, %1425) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) */;
  %1427 = %1426.0;
  (%1421, %1427, meta[relay.Constant][84] /* ty=Tensor[(144), float32] */)
}

def @func_4829() -> Tensor[(15, 8, 3), float32] {
  %1428 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
  %1429 = %1428.0;
  %1430 = cast(%1429, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  atan(%1430) /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_14098(%var_14087: Tensor[(24, 6), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) {
  %1431 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
  %1432 = %1431.2;
  %1433 = cast(%var_14087, dtype="int16") /* ty=Tensor[(24, 6), int16] */;
  %1434 = shape_of(%1432, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1435 = cast(%1432, dtype="int16") /* ty=Tensor[(24, 6), int16] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1437 = right_shift(%1435, %1436) /* ty=Tensor[(24, 6), int16] */;
  %1438 = cast(%1437, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
  %1439 = @func_12599() /* ty=Tensor[(15, 8, 3), float32] */;
  %1440 = asin(%1438) /* ty=Tensor[(24, 6), float64] */;
  (%1439, %1440)
}

def @func_10004() -> Tensor[(15, 8, 3), float32] {
  %1441 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1441.0
}

def @func_16054() -> (Tensor[(4), float32], Tensor[(7, 3, 13), float32], Tensor[(13, 7, 6), float64], Tensor[(15, 8, 3), float32]) {
  %1442 = @func_6924() /* ty=(Tensor[(4), float32], Tensor[(273), float64]) */;
  %1443 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %1444 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
  %1445 = @func_15260() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1446 = %1442.0;
  %1447 = %1443.4;
  %1448 = %1444.0;
  %1449 = %1445.0;
  (%1446, %1447, %1448, %1449)
}

def @func_14773() -> (Tensor[(15, 8, 3), float64],) {
  %1450 = @func_8647() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1450,)
}

def @func_19623(%var_19596: Tensor[(360), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(16, 10, 360), int64], Tensor[(16, 10, 360), float32]) {
  %1451 = cast(%var_19596, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1452 = reshape(%1451, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %1453 = @func_4951(%1452) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %1454 = @func_12871() /* ty=(Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) */;
  %1455 = %1454.0;
  %1456 = cast(%var_19596, dtype="int64") /* ty=Tensor[(360), int64] */;
  %1457 = cast(%1455, dtype="int64") /* ty=Tensor[(16, 10, ?), int64] */;
  %1458 = cast(%1455, dtype="float32") /* ty=Tensor[(16, 10, ?), float32] */;
  %1459 = cast(%var_19596, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1460 = %1453.1;
  %1461 = bitwise_or(%1456, %1457) /* ty=Tensor[(16, 10, 360), int64] */;
  %1462 = divide(%1458, %1459) /* ty=Tensor[(16, 10, 360), float32] */;
  (%1460, %1461, %1462)
}

def @func_5252() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %1463 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %1464 = cast(meta[relay.Constant][85] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1465 = reshape(%1464, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1466 = @func_3931(%1465) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %1467 = %1463.0;
  %1468 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %1469 = %1466.5;
  %1470 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1467, %1468, %1469, meta[relay.Constant][85] /* ty=Tensor[(144), float32] */, %1470)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12410() -> (Tensor[(15, 8, 3), float32],) {
  @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_10618() -> (Tensor[(15, 8, 3), float32],) {
  @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_18448() -> (Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) {
  @func_18446() /* ty=(Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) */
}

def @func_7186() -> Tensor[(15, 8, 3), float64] {
  %0 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %0.0
}

def @func_18639() -> Tensor[(4), float32] {
  %1 = @func_17754() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1.1
}

def @func_97(%var_95: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float32],) {
  @func_94(%var_95) /* ty=(Tensor[(7, 3, 13), float32],) */
}

def @func_19419() -> Tensor[(15, 8, 3), float32] {
  %3 = fn () -> Tensor[(15, 8, 3), float32] {
    %2 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %2.0
  };
  %3() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_9322() -> Tensor[(4), float32] {
  %4 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
  %4.0
}

def @func_8804() -> (Tensor[(15, 8, 3), int8],) {
  @func_8802() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_19207() -> (Tensor[(15, 8, 3), float32], Tensor[(400), float64]) {
  %8 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(400), float64]) {
    %5 = @func_18446() /* ty=(Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) */;
    %6 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
    %7 = %5.4;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(400), float64]) */
}

def @func_10966() -> Tensor[(15, 8, 3), float32] {
  %10 = fn () -> Tensor[(15, 8, 3), float32] {
    %9 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
    %9.1
  };
  %10() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_6926() -> (Tensor[(4), float32], Tensor[(273), float64]) {
  @func_6924() /* ty=(Tensor[(4), float32], Tensor[(273), float64]) */
}

def @func_5156() -> (Tensor[(15, 8, 3), float64],) {
  @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_9424(%var_9414: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) {
  %11 = @func_7430() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %12 = cast(%var_9414, dtype="float32") /* ty=Tensor[(420), float32] */;
  %13 = cast(%var_9414, dtype="float32") /* ty=Tensor[(420), float32] */;
  %14 = reshape(%12, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %15 = reshape(%13, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %16 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %17 = %11.1;
  %18 = @func_7951(%14, %15) /* ty=Tensor[(15, 2, 14), float32] */;
  %19 = %16.1;
  (%17, %18, %var_9414, %19)
}

def @func_15617() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
  %25 = fn () -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
    %20 = @func_11524() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
    %21 = @func_5605() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %22 = @func_13861() /* ty=Tensor[(15, 8, 3), int8] */;
    %23 = %20.0;
    %24 = %21.0;
    (%22, %23, %24)
  };
  %25() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) */
}

def @func_11842(%var_11840: Tensor[(11, 5, 10), uint32], %var_11841: Tensor[(11, 5, 10), uint32]) -> (Tensor[(11, 5, 10), bool],) {
  %31 = fn (%var_11824: Tensor[(11, 5, 10), uint32], %var_11825: Tensor[(11, 5, 10), uint32]) -> (Tensor[(11, 5, 10), bool],) {
    %26 = cast(%var_11825, dtype="bool") /* ty=Tensor[(11, 5, 10), bool] */;
    %27 = shape_of(%var_11824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%var_11824, dtype="bool") /* ty=Tensor[(11, 5, 10), bool] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %30 = greater_equal(%28, %29) /* ty=Tensor[(11, 5, 10), bool] */;
    (%30,)
  };
  %31(%var_11840, %var_11841) /* ty=(Tensor[(11, 5, 10), bool],) */
}

def @func_6980() -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) {
  %50 = fn () -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) {
    %32 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(48, 2), uint64] */, dtype="uint64") /* ty=Tensor[(48, 2), uint64] */;
    %34 = reshape(%33, newshape=[96, 1]) /* ty=Tensor[(96, 1), uint64] */;
    %35 = @func_6888(%34) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) */;
    %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(48, 2), uint64] */, dtype="float64") /* ty=Tensor[(48, 2), float64] */;
    %37 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
    %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %39 = %32.2;
    %40 = cast(%39, dtype="float32") /* ty=Tensor[(144), float32] */;
    %41 = reshape(%38, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %42 = reshape(%40, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %43 = @func_5002(%41, %42) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %44 = @func_5252() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
    %45 = %35.1;
    %46 = sin(%36) /* ty=Tensor[(48, 2), float64] */;
    %47 = %37.1;
    %48 = %43.4;
    %49 = %44.2;
    (%39, %45, %46, %47, %48, meta[relay.Constant][1] /* ty=Tensor[(4), float32] */, %49)
  };
  %50() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */
}

def @func_14425() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  @func_14423() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */
}

def @func_8932(%var_8926: uint16) -> (Tensor[(8, 13, 12), uint16],) {
  %51 = cast(%var_8926, dtype="uint16") /* ty=uint16 */;
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 12), uint16] */;
  %53 = subtract(%51, %52) /* ty=Tensor[(8, 13, 12), uint16] */;
  (%53,)
}

def @func_8157() -> Tensor[(15, 8, 3), float64] {
  @func_8155() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_14802() -> Tensor[(15, 8, 3), float32] {
  @func_14800() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_14977() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %56 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %54 = @func_12978() /* ty=Tensor[(15, 8, 3), float32] */;
    %55 = @func_14800() /* ty=Tensor[(15, 8, 3), float32] */;
    (%54, %55)
  };
  %56() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_15309() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_15016() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %57 = @func_13005() /* ty=(Tensor[(4), float32],) */;
  %58 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
  %59 = %57.0;
  (%58, %59)
}

def @func_6228(%var_6207: Tensor[(1, 2, 7), float64]) -> (Tensor[(1, 2, 7), float64],) {
  %60 = cast(%var_6207, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %61 = atan(%60) /* ty=Tensor[(1, 2, 7), float64] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %63 = exp(%62) /* ty=Tensor[(1, 2, 7), float64] */;
  (%63,)
}

def @func_9509() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_12273() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  @func_12271() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */
}

def @func_8155() -> Tensor[(15, 8, 3), float64] {
  %64 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 8, 3), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = greater(%67, %68) /* ty=Tensor[(15, 8, 3), bool] */;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  sin(%70) /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_10616() -> (Tensor[(15, 8, 3), float32],) {
  %71 = @func_9624() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %72 = %71.0;
  (%72,)
}

def @func_13314() -> Tensor[(15, 8, 3), bool] {
  %73 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %73.0
}

def @func_17062() -> (Tensor[(15, 8, 3), float32],) {
  %74 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_12206(%var_12204: Tensor[(192), float64]) -> (Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) {
  @func_12203(%var_12204) /* ty=(Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) */
}

def @func_11608() -> (Tensor[(4), float32],) {
  %77 = fn () -> (Tensor[(4), float32],) {
    %76 = @func_9322() /* ty=Tensor[(4), float32] */;
    (%76,)
  };
  %77() /* ty=(Tensor[(4), float32],) */
}

def @func_5388() -> (Tensor[(4), float32],) {
  %80 = fn () -> (Tensor[(4), float32],) {
    %78 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %79 = %78.1;
    (%79,)
  };
  %80() /* ty=(Tensor[(4), float32],) */
}

def @func_12470(%var_12468: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  @func_12467(%var_12468) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32]) */
}

def @func_15843(%var_15817: Tensor[(144), int32]) -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(144), int32], Tensor[(15, 8, 3), float32]) {
  %81 = @func_14682() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(4), float32]) */;
  %82 = cast(%var_15817, dtype="int32") /* ty=Tensor[(144), int32] */;
  %83 = reshape(%82, newshape=[24, 6]) /* ty=Tensor[(24, 6), int32] */;
  %84 = @func_14098(%83) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) */;
  %85 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %86 = %81.1;
  %87 = %84.0;
  %88 = %85.0;
  (%86, %87, %var_15817, %88)
}

def @func_15745() -> (Tensor[(4), float32],) {
  %91 = fn () -> (Tensor[(4), float32],) {
    %89 = @func_14206() /* ty=(Tensor[(4), float32],) */;
    %90 = %89.0;
    (%90,)
  };
  %91() /* ty=(Tensor[(4), float32],) */
}

def @func_13158() -> (Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) {
  %92 = @func_10435() /* ty=(Tensor[(4), float32],) */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(91, 6), float64] */, dtype="float64") /* ty=Tensor[(91, 6), float64] */;
  %94 = reshape(%93, newshape=[13, 7, 6]) /* ty=Tensor[(13, 7, 6), float64] */;
  %95 = @func_7505(%94) /* ty=(Tensor[(13, 7, 6), float64],) */;
  %96 = %92.0;
  %97 = %95.0;
  (%96, %97, meta[relay.Constant][4] /* ty=Tensor[(91, 6), float64] */)
}

def @func_12369(%var_12367: uint16) -> (Tensor[(15, 8, 3), float64], Tensor[(8, 13, 12), bool]) {
  @func_12366(%var_12367) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(8, 13, 12), bool]) */
}

def @func_12425() -> (Tensor[(15, 8, 3), float32],) {
  %98 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %99 = %98.0;
  (%99,)
}

def @func_15262() -> (Tensor[(15, 8, 3), float32],) {
  @func_15260() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_14774() -> (Tensor[(15, 8, 3), float64],) {
  %101 = fn () -> (Tensor[(15, 8, 3), float64],) {
    %100 = @func_8647() /* ty=Tensor[(15, 8, 3), float64] */;
    (%100,)
  };
  %101() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_9387() -> (Tensor[(15, 8, 3), float64],) {
  @func_9385() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_14403() -> (Tensor[(15, 8, 3), bool], Tensor[(144), float32]) {
  %106 = fn () -> (Tensor[(15, 8, 3), bool], Tensor[(144), float32]) {
    %102 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
    %103 = @func_13765() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) */;
    %104 = %102.0;
    %105 = %103.2;
    (%104, %105)
  };
  %106() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */
}

def @func_18010(%var_17957: Tensor[(15, 1, 13), float32]) -> (Tensor[(15, 1, 13), float32], Tensor[(15, 8, 3), int8]) {
  %107 = cast(%var_17957, dtype="float32") /* ty=Tensor[(15, 1, 13), float32] */;
  %108 = @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %109 = log(%107) /* ty=Tensor[(15, 1, 13), float32] */;
  %110 = %108.1;
  (%109, %110)
}

def @func_9992() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %116 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
    %111 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
    %112 = cast(%111, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
    %113 = reshape(%112, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
    %114 = @func_4951(%113) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
    %115 = %114.1;
    (%111, %115)
  };
  %116() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_12873() -> (Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) {
  @func_12871() /* ty=(Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) */
}

def @func_14116() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_14114() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_16930() -> Tensor[(4), float32] {
  %117 = fn () -> Tensor[(4), float32] {
    @func_6690() /* ty=Tensor[(4), float32] */
  };
  %117() /* ty=Tensor[(4), float32] */
}

def @func_17437() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(16, 9, 2), uint32], Tensor[(2, 144), float32]) {
  @func_17435() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(16, 9, 2), uint32], Tensor[(2, 144), float32]) */
}

def @func_18556() -> Tensor[(15, 8, 3), float32] {
  %119 = fn () -> Tensor[(15, 8, 3), float32] {
    %118 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %118.0
  };
  %119() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_11724() -> Tensor[(15, 8, 3), float32] {
  @func_11722() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15895() -> (Tensor[(4), float32],) {
  %121 = fn () -> (Tensor[(4), float32],) {
    %120 = @func_6690() /* ty=Tensor[(4), float32] */;
    (%120,)
  };
  %121() /* ty=(Tensor[(4), float32],) */
}

def @func_17058(%var_17056: Tensor[(4, 7, 11), float64], %var_17057: Tensor[(4, 7, 11), float64]) -> (Tensor[(4, 7, 11), float64],) {
  %127 = fn (%var_17049: Tensor[(4, 7, 11), float64], %var_17050: Tensor[(4, 7, 11), float64]) -> (Tensor[(4, 7, 11), float64],) {
    %122 = cast(%var_17050, dtype="float64") /* ty=Tensor[(4, 7, 11), float64] */;
    %123 = shape_of(%var_17049, dtype="int32") /* ty=Tensor[(3), int32] */;
    %124 = cast(%var_17049, dtype="float64") /* ty=Tensor[(4, 7, 11), float64] */;
    %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %126 = floor_divide(%124, %125) /* ty=Tensor[(4, 7, 11), float64] */;
    (%126,)
  };
  %127(%var_17056, %var_17057) /* ty=(Tensor[(4, 7, 11), float64],) */
}

def @func_18013(%var_18011: Tensor[(15, 1, 13), float32]) -> (Tensor[(15, 1, 13), float32], Tensor[(15, 8, 3), int8]) {
  @func_18010(%var_18011) /* ty=(Tensor[(15, 1, 13), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_7855(%var_7854: Tensor[(9, 14, 8), float64]) -> (Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) {
  %135 = fn (%var_7840: Tensor[(9, 14, 8), float64]) -> (Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) {
    %128 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 8), float64] */;
    %129 = cast(%var_7840, dtype="float64") /* ty=Tensor[(9, 14, 8), float64] */;
    %130 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
    %131 = cast(%var_7840, dtype="float32") /* ty=Tensor[(9, 14, 8), float32] */;
    %132 = subtract(%128, %129) /* ty=Tensor[(9, 14, 8), float64] */;
    %133 = %130.0;
    %134 = exp(%131) /* ty=Tensor[(9, 14, 8), float32] */;
    (%132, %133, %134)
  };
  %135(%var_7854) /* ty=(Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) */
}

def @func_10608(%var_10590: Tensor[(420), float32]) -> (Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %136 = @func_10506() /* ty=(Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) */;
  %137 = cast(%var_10590, dtype="float32") /* ty=Tensor[(420), float32] */;
  %138 = cast(%var_10590, dtype="float32") /* ty=Tensor[(420), float32] */;
  %139 = reshape(%137, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %140 = reshape(%138, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %141 = %136.0;
  %142 = @func_7951(%139, %140) /* ty=Tensor[(15, 2, 14), float32] */;
  (%141, %142, %var_10590)
}

def @func_8121() -> Tensor[(15, 8, 3), float32] {
  %144 = fn () -> Tensor[(15, 8, 3), float32] {
    %143 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %143.0
  };
  %144() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_4954(%var_4952: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  @func_4951(%var_4952) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_5858() -> (Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
  %155 = fn () -> (Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
    %145 = @func_5387() /* ty=(Tensor[(4), float32],) */;
    %146 = cast(meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %147 = reshape(%146, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %148 = @func_4808(%147) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %149 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %150 = %149.0;
    %151 = cast(%150, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
    %152 = %145.0;
    %153 = %148.2;
    %154 = cos(%151) /* ty=Tensor[(15, 8, 3), float64] */;
    (%152, %153, meta[relay.Constant][6] /* ty=Tensor[(273), float64] */, %154)
  };
  %155() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_8274(%var_8272: Tensor[(192), float64], %var_8273: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) {
  @func_8270(%var_8272, %var_8273) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) */
}

def @func_13316() -> Tensor[(15, 8, 3), bool] {
  @func_13314() /* ty=Tensor[(15, 8, 3), bool] */
}

def @func_18958() -> Tensor[(15, 8, 3), float32] {
  %156 = @func_12911() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) */;
  %156.0
}

def @func_7954(%var_7952: Tensor[(15, 2, 14), float32], %var_7953: Tensor[(15, 2, 14), float32]) -> Tensor[(15, 2, 14), float32] {
  %161 = fn (%var_7945: Tensor[(15, 2, 14), float32], %var_7946: Tensor[(15, 2, 14), float32]) -> Tensor[(15, 2, 14), float32] {
    %157 = cast(%var_7946, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
    %158 = shape_of(%var_7945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %159 = cast(%var_7945, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
    %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%159, %160) /* ty=Tensor[(15, 2, 14), float32] */
  };
  %161(%var_7952, %var_7953) /* ty=Tensor[(15, 2, 14), float32] */
}

def @func_7188() -> Tensor[(15, 8, 3), float64] {
  @func_7186() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_11953(%var_11952: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) {
  %169 = fn (%var_11927: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) {
    %162 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
    %163 = cast(%var_11927, dtype="float64") /* ty=Tensor[(273), float64] */;
    %164 = reshape(%163, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %165 = @func_4808(%164) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %166 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
    %167 = %162.0;
    %168 = %165.0;
    (%166, %167, %168, %var_11927)
  };
  %169(%var_11952) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) */
}

def @func_4855() -> Tensor[(15, 8, 3), float32] {
  %170 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %170.0
}

def @func_8624() -> (Tensor[(15, 8, 3), bool],) {
  %171 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %172 = %171.0;
  (%172,)
}

def @func_15362() -> Tensor[(15, 8, 3), float32] {
  %173 = fn () -> Tensor[(15, 8, 3), float32] {
    @func_8829() /* ty=Tensor[(15, 8, 3), float32] */
  };
  %173() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_4230() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %174 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %175 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %176 = %174.0;
  %177 = %175.0;
  (%176, %177)
}

def @func_15452() -> Tensor[(15, 8, 3), int8] {
  %179 = fn () -> Tensor[(15, 8, 3), int8] {
    %178 = @func_12525() /* ty=(Tensor[(15, 8, 3), int8],) */;
    %178.0
  };
  %179() /* ty=Tensor[(15, 8, 3), int8] */
}

def @func_18641() -> Tensor[(4), float32] {
  @func_18639() /* ty=Tensor[(4), float32] */
}

def @func_6139() -> (Tensor[(15, 8, 3), float32],) {
  %181 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %180 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    (%180,)
  };
  %181() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_12600() -> Tensor[(15, 8, 3), float32] {
  %183 = fn () -> Tensor[(15, 8, 3), float32] {
    %182 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %182.0
  };
  %183() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_4764(%var_4762: Tensor[(15, 8, 3), float32]) -> Tensor[(15, 8, 3), uint64] {
  @func_4761(%var_4762) /* ty=Tensor[(15, 8, 3), uint64] */
}

def @func_4002() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */
}

def @func_13142(%var_13141: Tensor[(16, 5, 12), float32]) -> (Tensor[(16, 5, 12), float32], Tensor[(11, 5, 10), bool], Tensor[(550), uint32], Tensor[(16, 5, 12), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16]) {
  %200 = fn (%var_13085: Tensor[(16, 5, 12), float32]) -> (Tensor[(16, 5, 12), float32], Tensor[(11, 5, 10), bool], Tensor[(550), uint32], Tensor[(16, 5, 12), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16]) {
    %184 = cast(%var_13085, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
    %185 = cast(meta[relay.Constant][7] /* ty=Tensor[(550), uint32] */, dtype="uint32") /* ty=Tensor[(550), uint32] */;
    %186 = cast(meta[relay.Constant][7] /* ty=Tensor[(550), uint32] */, dtype="uint32") /* ty=Tensor[(550), uint32] */;
    %187 = reshape(%185, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), uint32] */;
    %188 = reshape(%186, newshape=[11, 5, 10]) /* ty=Tensor[(11, 5, 10), uint32] */;
    %189 = @func_11839(%187, %188) /* ty=(Tensor[(11, 5, 10), bool],) */;
    %190 = cast(%var_13085, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
    %191 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %192 = cast(meta[relay.Constant][8] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %193 = reshape(%192, newshape=[400]) /* ty=Tensor[(400), uint16] */;
    %194 = @func_9301(%193) /* ty=(Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %195 = sqrt(%184) /* ty=Tensor[(16, 5, 12), float32] */;
    %196 = %189.0;
    %197 = acosh(%190) /* ty=Tensor[(16, 5, 12), float32] */;
    %198 = %191.0;
    %199 = %194.4;
    (%195, %196, meta[relay.Constant][7] /* ty=Tensor[(550), uint32] */, %197, %198, %199, meta[relay.Constant][8] /* ty=Tensor[(400), uint16] */)
  };
  %200(%var_13141) /* ty=(Tensor[(16, 5, 12), float32], Tensor[(11, 5, 10), bool], Tensor[(550), uint32], Tensor[(16, 5, 12), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16]) */
}

def @func_4523() -> (Tensor[(15, 8, 3), float32],) {
  %201 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %202 = %201.1;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %204 = asin(%203) /* ty=Tensor[(15, 8, 3), float32] */;
  (%204,)
}

def @func_17633() -> (Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) {
  %215 = fn () -> (Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) {
    %205 = @func_14716() /* ty=Tensor[(4), float32] */;
    %206 = cast(%205, dtype="float32") /* ty=Tensor[(4), float32] */;
    %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %208 = reshape(%206, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %209 = reshape(%207, newshape=[4, 36]) /* ty=Tensor[(4, 36), float32] */;
    %210 = @func_8464(%208, %209) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) */;
    %211 = @func_10332() /* ty=(Tensor[(400), float64],) */;
    %212 = %210.4;
    %213 = %211.0;
    %214 = @func_13643() /* ty=Tensor[(15, 8, 3), float64] */;
    (%205, %212, meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, %213, %214)
  };
  %215() /* ty=(Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_16103() -> (Tensor[(15, 8, 3), int8],) {
  %216 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %217 = %216.1;
  (%217,)
}

def @func_10437() -> (Tensor[(4), float32],) {
  @func_10435() /* ty=(Tensor[(4), float32],) */
}

def @func_4808(%var_4784: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %218 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %219 = cast(%var_4784, dtype="float64") /* ty=Tensor[(273), float64] */;
  %220 = reshape(%219, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %221 = @func_94(%220) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %222 = %218.0;
  %223 = %221.0;
  (%222, %223, %var_4784)
}

def @func_15933() -> (Tensor[(4), float32],) {
  @func_15931() /* ty=(Tensor[(4), float32],) */
}

def @func_13721(%var_13720: Tensor[(14, 1, 4), float64]) -> Tensor[(14, 1, 4), float64] {
  %225 = fn (%var_13715: Tensor[(14, 1, 4), float64]) -> Tensor[(14, 1, 4), float64] {
    %224 = cast(%var_13715, dtype="float64") /* ty=Tensor[(14, 1, 4), float64] */;
    asin(%224) /* ty=Tensor[(14, 1, 4), float64] */
  };
  %225(%var_13720) /* ty=Tensor[(14, 1, 4), float64] */
}

def @func_6690() -> Tensor[(4), float32] {
  %226 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %226.0
}

def @func_13644() -> Tensor[(15, 8, 3), float64] {
  %227 = fn () -> Tensor[(15, 8, 3), float64] {
    @func_4869() /* ty=Tensor[(15, 8, 3), float64] */
  };
  %227() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_15957() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
  %228 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %229 = %228.1;
  %230 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  (%229, %230)
}

def @func_9328() -> Tensor[(15, 8, 3), float32] {
  %232 = fn () -> Tensor[(15, 8, 3), float32] {
    %231 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %231.1
  };
  %232() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_18050() -> (Tensor[(15, 8, 3), float32],) {
  %235 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %233 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %234 = %233.0;
    (%234,)
  };
  %235() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_19157() -> Tensor[(144), float32] {
  %237 = fn () -> Tensor[(144), float32] {
    %236 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
    %236.1
  };
  %237() /* ty=Tensor[(144), float32] */
}

def @func_9385() -> (Tensor[(15, 8, 3), float64],) {
  %238 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %239 = %238.1;
  (%239,)
}

def @func_10551() -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  @func_10549() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_14577() -> (Tensor[(4), float32],) {
  @func_14575() /* ty=(Tensor[(4), float32],) */
}

def @func_7047() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %244 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %240 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %241 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %242 = %240.0;
    %243 = %241.1;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_19339() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %245 = @func_15792() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) */;
  %246 = @func_13193() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %247 = @func_11076() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %248 = %245.1;
  %249 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
  %250 = %246.0;
  %251 = %247.0;
  (%248, %249, %250, %251)
}

def @func_16770(%var_16768: Tensor[(4), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  @func_16767(%var_16768) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */
}

def @func_12539(%var_12534: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), float64],) {
  %252 = cast(%var_12534, dtype="float64") /* ty=Tensor[(9, 16, 5), float64] */;
  %253 = cos(%252) /* ty=Tensor[(9, 16, 5), float64] */;
  (%253,)
}

def @func_5630() -> (Tensor[(15, 8, 3), float32],) {
  %254 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %255 = %254.1;
  (%255,)
}

def @func_18988(%var_18987: Tensor[(630), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 6, 7), bool], Tensor[(630), int32]) {
  %264 = fn (%var_18984: Tensor[(630), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 6, 7), bool], Tensor[(630), int32]) {
    %256 = @func_12755() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
    %257 = cast(%var_18984, dtype="int32") /* ty=Tensor[(630), int32] */;
    %258 = cast(%var_18984, dtype="int32") /* ty=Tensor[(630), int32] */;
    %259 = reshape(%257, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %260 = reshape(%258, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %261 = @func_7743(%259, %260) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
    %262 = %256.4;
    %263 = %261.0;
    (%262, %263, %var_18984)
  };
  %264(%var_18987) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 6, 7), bool], Tensor[(630), int32]) */
}

def @func_17295() -> Tensor[(144), float32] {
  %266 = fn () -> Tensor[(144), float32] {
    %265 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %265.2
  };
  %266() /* ty=Tensor[(144), float32] */
}

def @func_6367() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %267 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %268 = @func_4149() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %269 = %267.0;
  %270 = %268.0;
  (%269, %270)
}

def @func_13891() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  @func_13889() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */
}

def @func_8649() -> Tensor[(15, 8, 3), float64] {
  @func_8647() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_5981(%var_5980: Tensor[(8, 6, 5), bool]) -> (Tensor[(8, 6, 5), bool], Tensor[(15, 8, 3), float32]) {
  %278 = fn (%var_5937: Tensor[(8, 6, 5), bool]) -> (Tensor[(8, 6, 5), bool], Tensor[(15, 8, 3), float32]) {
    %271 = cast(%var_5937, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
    %272 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 6, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 6, 5), bool] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %275 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %276 = logical_or(%273, %274) /* ty=Tensor[(8, 6, 5), bool] */;
    %277 = %275.1;
    (%276, %277)
  };
  %278(%var_5980) /* ty=(Tensor[(8, 6, 5), bool], Tensor[(15, 8, 3), float32]) */
}

def @func_8935(%var_8933: uint16) -> (Tensor[(8, 13, 12), uint16],) {
  @func_8932(%var_8933) /* ty=(Tensor[(8, 13, 12), uint16],) */
}

def @func_10290() -> (Tensor[(15, 8, 3), float64],) {
  @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_9252() -> Tensor[(273), float64] {
  @func_8554() /* ty=Tensor[(273), float64] */
}

def @func_17210(%var_17207: Tensor[(13, 12, 1), float32]) -> Tensor[(13, 12, 1), float32] {
  %279 = cast(%var_17207, dtype="float32") /* ty=Tensor[(13, 12, 1), float32] */;
  cosh(%279) /* ty=Tensor[(13, 12, 1), float32] */
}

def @func_15641(%var_15619: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) {
  %280 = cast(9.71588f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %281 = cast(%var_15619, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %282 = divide(%280, %281) /* ty=Tensor[(5, 14, 7), float32] */;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %284 = cast(%var_15619, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %285 = cos(%283) /* ty=Tensor[(5, 14, 7), float32] */;
  %286 = cosh(%284) /* ty=Tensor[(5, 14, 7), float32] */;
  (%285, %286)
}

def @func_14207() -> (Tensor[(4), float32],) {
  %288 = fn () -> (Tensor[(4), float32],) {
    %287 = @func_11400() /* ty=Tensor[(4), float32] */;
    (%287,)
  };
  %288() /* ty=(Tensor[(4), float32],) */
}

def @func_10744() -> (Tensor[(15, 8, 3), bool],) {
  @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */
}

def @func_14042(%var_13960: Tensor[(192), float64]) -> (Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) {
  %289 = cast(meta[relay.Constant][11] /* ty=Tensor[(143, 9), float64] */, dtype="float64") /* ty=Tensor[(143, 9), float64] */;
  %290 = reshape(%289, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), float64] */;
  %291 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %292 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
  %293 = cast(%var_13960, dtype="float64") /* ty=Tensor[(192), float64] */;
  %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %295 = reshape(%293, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %296 = reshape(%294, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %297 = @func_8270(%295, %296) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) */;
  %298 = @func_9252() /* ty=Tensor[(273), float64] */;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(273), float64] */;
  %300 = acos(%299) /* ty=Tensor[(273), float64] */;
  %301 = @func_12871() /* ty=(Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) */;
  %302 = %301.0;
  %303 = cast(%300, dtype="float32") /* ty=Tensor[(273), float32] */;
  %304 = cast(%302, dtype="float32") /* ty=Tensor[(16, 10, ?), float32] */;
  %305 = floor_mod(%303, %304) /* ty=Tensor[(16, 10, 273), float32] */;
  %306 = cast(%300, dtype="bool") /* ty=Tensor[(273), bool] */;
  %307 = cast(%305, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %308 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
  %309 = cast(%305, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %310 = cosh(%309) /* ty=Tensor[(16, 10, 273), float32] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %312 = exp(%311) /* ty=Tensor[(16, 10, 273), float32] */;
  %313 = cast(%312, dtype="uint8") /* ty=Tensor[(16, 10, 273), uint8] */;
  %314 = cast(%302, dtype="uint8") /* ty=Tensor[(16, 10, ?), uint8] */;
  %315 = cast(%300, dtype="float64") /* ty=Tensor[(273), float64] */;
  %316 = reshape(%315, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
  %317 = @func_7914(%316) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
  %318 = cast(%310, dtype="float32") /* ty=Tensor[(16, 10, 273), float32] */;
  %319 = cast(%312, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %320 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%310, dtype="bool") /* ty=Tensor[(16, 10, 273), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %323 = @func_6055(%290) /* ty=Tensor[(11, 9, 13), float64] */;
  %324 = %291.1;
  %325 = %292.1;
  %326 = %297.3;
  %327 = logical_and(%306, %307) /* ty=Tensor[(16, 10, 273), bool] */;
  %328 = %308.1;
  %329 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  %330 = subtract(%313, %314) /* ty=Tensor[(16, 10, 273), uint8] */;
  %331 = %317.2;
  %332 = asinh(%318) /* ty=Tensor[(16, 10, 273), float32] */;
  %333 = less_equal(%321, %322) /* ty=Tensor[(16, 10, 273), bool] */;
  (%323, meta[relay.Constant][11] /* ty=Tensor[(143, 9), float64] */, %324, %325, %326, %var_13960, meta[relay.Constant][12] /* ty=Tensor[(144), float32] */, %327, %328, %329, %330, %331, %332, %333)
}

def @func_4232() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */
}

def @func_15509() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_15185() -> Tensor[(15, 8, 3), float32] {
  %334 = fn () -> Tensor[(15, 8, 3), float32] {
    @func_13667() /* ty=Tensor[(15, 8, 3), float32] */
  };
  %334() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_6846() -> Tensor[(15, 8, 3), float32] {
  %336 = fn () -> Tensor[(15, 8, 3), float32] {
    %335 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %335.0
  };
  %336() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15696(%var_15694: Tensor[(14, 14, 1), float32]) -> (Tensor[(14, 14, 1), float32],) {
  @func_15693(%var_15694) /* ty=(Tensor[(14, 14, 1), float32],) */
}

def @func_9936() -> (Tensor[(273), float64], Tensor[(144), float32]) {
  %340 = fn () -> (Tensor[(273), float64], Tensor[(144), float32]) {
    %337 = @func_9231() /* ty=(Tensor[(144), float32],) */;
    %338 = @func_9252() /* ty=Tensor[(273), float64] */;
    %339 = %337.0;
    (%338, %339)
  };
  %340() /* ty=(Tensor[(273), float64], Tensor[(144), float32]) */
}

def @func_17873() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_9232() -> (Tensor[(144), float32],) {
  %343 = fn () -> (Tensor[(144), float32],) {
    %341 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
    %342 = %341.0;
    (%342,)
  };
  %343() /* ty=(Tensor[(144), float32],) */
}

def @func_10784(%var_10771: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
  %344 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %345 = cast(%var_10771, dtype="float32") /* ty=Tensor[(144), float32] */;
  %346 = reshape(%345, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %347 = @func_3931(%346) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %348 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %349 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %350 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %351 = %344.0;
  %352 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %353 = %347.3;
  %354 = %348.0;
  %355 = %349.1;
  %356 = %350.0;
  (%351, %352, %353, %var_10771, %354, %355, %356)
}

def @func_19680() -> Tensor[(15, 8, 3), float64] {
  %357 = @func_16423() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %357.0
}

def @func_4830() -> Tensor[(15, 8, 3), float32] {
  %361 = fn () -> Tensor[(15, 8, 3), float32] {
    %358 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
    %359 = %358.0;
    %360 = cast(%359, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    atan(%360) /* ty=Tensor[(15, 8, 3), float32] */
  };
  %361() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_19682() -> Tensor[(15, 8, 3), float64] {
  @func_19680() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_10218(%var_10216: Tensor[(60), bool]) -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(4), float32], Tensor[(60), bool], Tensor[(600), bool], Tensor[(10, 5, 12), float32], Tensor[(16, 9, 2), uint32], Tensor[(144, 2), float32], Tensor[(15, 8, 3), bool]) {
  @func_10215(%var_10216) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(4), float32], Tensor[(60), bool], Tensor[(600), bool], Tensor[(10, 5, 12), float32], Tensor[(16, 9, 2), uint32], Tensor[(144, 2), float32], Tensor[(15, 8, 3), bool]) */
}

def @func_14481() -> Tensor[(15, 8, 3), float32] {
  %362 = fn () -> Tensor[(15, 8, 3), float32] {
    @func_10004() /* ty=Tensor[(15, 8, 3), float32] */
  };
  %362() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_6191(%var_6189: Tensor[(2, 48), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) {
  %363 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %364 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %365 = cast(%var_6189, dtype="uint64") /* ty=Tensor[(2, 48), uint64] */;
  %366 = reshape(%365, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %367 = %363.0;
  %368 = %364.0;
  %369 = @func_2535(%366) /* ty=Tensor[(4, 6, 4), bool] */;
  (%367, %368, %369, %var_6189)
}

def @func_16724(%var_16722: Tensor[(490), float32], %var_16723: Tensor[(490), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(5, 14, 7), float32], Tensor[(490), bool]) {
  %382 = fn (%var_16702: Tensor[(490), float32], %var_16715: Tensor[(490), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(5, 14, 7), float32], Tensor[(490), bool]) {
    %370 = cast(%var_16702, dtype="float32") /* ty=Tensor[(490), float32] */;
    %371 = reshape(%370, newshape=[5, 14, 7]) /* ty=Tensor[(5, 14, 7), float32] */;
    %372 = @func_15641(%371) /* ty=(Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) */;
    %373 = cast(%var_16702, dtype="float64") /* ty=Tensor[(490), float64] */;
    %374 = rsqrt(%373) /* ty=Tensor[(490), float64] */;
    %375 = cast(%var_16715, dtype="bool") /* ty=Tensor[(490), bool] */;
    %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(1), int32] */;
    %377 = cast(%374, dtype="bool") /* ty=Tensor[(490), bool] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?), bool] */;
    %379 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
    %380 = %372.1;
    %381 = equal(%377, %378) /* ty=Tensor[(490), bool] */;
    (%379, %380, %381)
  };
  %382(%var_16722, %var_16723) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(5, 14, 7), float32], Tensor[(490), bool]) */
}

def @func_17048() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %386 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %383 = @func_4149() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %384 = %383.0;
    %385 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
    (%384, %385)
  };
  %386() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_19341() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_19339() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_5036() -> Tensor[(15, 8, 3), float32] {
  @func_5034() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_9775() -> (Tensor[(15, 8, 3), float64],) {
  %387 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %388 = %387.3;
  (%388,)
}

def @func_10918(%var_10916: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  @func_10915(%var_10916) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */
}

def @func_14144() -> (Tensor[(4), float32],) {
  @func_14142() /* ty=(Tensor[(4), float32],) */
}

def @func_17540() -> Tensor[(15, 8, 3), float32] {
  @func_13040() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15846(%var_15844: Tensor[(144), int32]) -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(144), int32], Tensor[(15, 8, 3), float32]) {
  @func_15843(%var_15844) /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(144), int32], Tensor[(15, 8, 3), float32]) */
}

def @func_6251() -> (Tensor[(15, 8, 3), float32],) {
  %391 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %389 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
    %390 = %389.1;
    (%390,)
  };
  %391() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_15507() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %392 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %393 = @func_8802() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %394 = %392.0;
  %395 = %393.0;
  (%394, %395)
}

def @func_16883() -> (Tensor[(15, 8, 3), float32],) {
  @func_16881() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_10288() -> (Tensor[(15, 8, 3), float64],) {
  %396 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %397 = %396.3;
  (%397,)
}

def @func_13160() -> (Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) {
  @func_13158() /* ty=(Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) */
}

def @func_16281() -> (Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) {
  %405 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) {
    %398 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %399 = cast(meta[relay.Constant][13] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %400 = reshape(%399, newshape=[9, 14, 8]) /* ty=Tensor[(9, 14, 8), float64] */;
    %401 = @func_7853(%400) /* ty=(Tensor[(9, 14, 8), float64], Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float32]) */;
    %402 = %398.0;
    %403 = %401.0;
    %404 = @func_12679() /* ty=Tensor[(4), float32] */;
    (%402, %403, meta[relay.Constant][13] /* ty=Tensor[(1008), float64] */, %404)
  };
  %405() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) */
}

def @func_9189() -> (Tensor[(15, 8, 3), float32],) {
  %407 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %406 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    (%406,)
  };
  %407() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_12203(%var_12164: Tensor[(192), float64]) -> (Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) {
  %408 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
  %409 = cast(%var_12164, dtype="float64") /* ty=Tensor[(192), float64] */;
  %410 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %411 = reshape(%409, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %412 = reshape(%410, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %413 = @func_8270(%411, %412) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) */;
  %414 = cast(meta[relay.Constant][15] /* ty=Tensor[(546), float64] */, dtype="float64") /* ty=Tensor[(546), float64] */;
  %415 = reshape(%414, newshape=[13, 7, 6]) /* ty=Tensor[(13, 7, 6), float64] */;
  %416 = @func_7505(%415) /* ty=(Tensor[(13, 7, 6), float64],) */;
  %417 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %418 = %408.1;
  %419 = %413.1;
  %420 = %416.0;
  %421 = %417.0;
  (%418, %419, %var_12164, meta[relay.Constant][14] /* ty=Tensor[(144), float32] */, %420, meta[relay.Constant][15] /* ty=Tensor[(546), float64] */, %421)
}

def @func_12946() -> (Tensor[(15, 8, 3), float32],) {
  %424 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %422 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
    %423 = %422.0;
    (%423,)
  };
  %424() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_6766(%var_6764: Tensor[(192), float64], %var_6765: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) {
  @func_6762(%var_6764, %var_6765) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) */
}

def @func_3597(%var_3595: Tensor[(1, 1, 4), float32], %var_3596: Tensor[(12, 3, 4), float32]) -> (Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) {
  %479 = fn (%var_3474: Tensor[(1, 1, 4), float32], %var_3475: Tensor[(12, 3, 4), float32]) -> (Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) {
    %425 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 24), uint64] */, dtype="uint64") /* ty=Tensor[(4, 24), uint64] */;
    %426 = reshape(%425, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
    %427 = cast(%var_3474, dtype="float32") /* ty=Tensor[(1, 1, 4), float32] */;
    %428 = cast(%var_3475, dtype="float32") /* ty=Tensor[(12, 3, 4), float32] */;
    %429 = power(%427, %428) /* ty=Tensor[(12, 3, 4), float32] */;
    %430 = cast(%429, dtype="int8") /* ty=Tensor[(12, 3, 4), int8] */;
    %431 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %432 = cast(%var_3475, dtype="int8") /* ty=Tensor[(12, 3, 4), int8] */;
    %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %434 = bitwise_xor(%432, %433) /* ty=Tensor[(12, 3, 4), int8] */;
    %435 = cast(%434, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
    %436 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(%var_3475, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %439 = cast(%var_3475, dtype="uint64") /* ty=Tensor[(12, 3, 4), uint64] */;
    %440 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %441 = cast(%429, dtype="uint64") /* ty=Tensor[(12, 3, 4), uint64] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %443 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 24), uint64] */, dtype="uint64") /* ty=Tensor[(4, 24), uint64] */;
    %444 = reshape(%443, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
    %445 = cast(%434, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
    %446 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(%429, dtype="bool") /* ty=Tensor[(12, 3, 4), bool] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %449 = cast(meta[relay.Constant][17] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %450 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %451 = reshape(%449, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %452 = reshape(%450, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %453 = @func_679(%451, %452) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %454 = %453.0;
    %455 = cast(%454, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
    %456 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %457 = reshape(%455, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %458 = reshape(%456, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %459 = @func_679(%457, %458) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %460 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %461 = sinh(%460) /* ty=Tensor[(13, 21), float64] */;
    %462 = cast(meta[relay.Constant][17] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %463 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %464 = reshape(%462, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %465 = reshape(%463, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %466 = @func_679(%464, %465) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %467 = %466.2;
    %468 = cast(%467, dtype="bool") /* ty=Tensor[(273), bool] */;
    %469 = shape_of(%461, dtype="int32") /* ty=Tensor[(2), int32] */;
    %470 = cast(%461, dtype="bool") /* ty=Tensor[(13, 21), bool] */;
    %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %472 = @func_2535(%426) /* ty=Tensor[(4, 6, 4), bool] */;
    %473 = not_equal(%437, %438) /* ty=Tensor[(12, 3, 4), bool] */;
    %474 = bitwise_and(%441, %442) /* ty=Tensor[(12, 3, 4), uint64] */;
    %475 = @func_2535(%444) /* ty=Tensor[(4, 6, 4), bool] */;
    %476 = less(%447, %448) /* ty=Tensor[(12, 3, 4), bool] */;
    %477 = %459.0;
    %478 = less_equal(%470, %471) /* ty=Tensor[(13, 21), bool] */;
    (%472, meta[relay.Constant][16] /* ty=Tensor[(4, 24), uint64] */, %473, %474, %475, %476, meta[relay.Constant][17] /* ty=Tensor[(2340), bool] */, %454, %477, %478)
  };
  %479(%var_3595, %var_3596) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */
}

def @func_9223() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) {
  %484 = fn () -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) {
    %480 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %481 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
    %482 = %480.0;
    %483 = %481.0;
    (%482, %483)
  };
  %484() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) */
}

def @func_11400() -> Tensor[(4), float32] {
  %485 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %485.0
}

def @func_10072() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) {
  %486 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %487 = cast(meta[relay.Constant][19] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %488 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %489 = reshape(%487, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %490 = reshape(%488, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %491 = @func_6762(%489, %490) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) */;
  %492 = %486.0;
  %493 = %491.0;
  (%492, %493, meta[relay.Constant][19] /* ty=Tensor[(192), float64] */, meta[relay.Constant][20] /* ty=Tensor[(144), float32] */)
}

def @func_2537(%var_2536: Tensor[(4, 6, 4), uint64]) -> Tensor[(4, 6, 4), bool] {
  %496 = fn (%var_2510: Tensor[(4, 6, 4), uint64]) -> Tensor[(4, 6, 4), bool] {
    %494 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 6, 4), uint64] */, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
    %495 = cast(%var_2510, dtype="bool") /* ty=Tensor[(4, 6, 4), bool] */;
    greater(%494, %495) /* ty=Tensor[(4, 6, 4), bool] */
  };
  %496(%var_2536) /* ty=Tensor[(4, 6, 4), bool] */
}

def @func_13733() -> Tensor[(15, 8, 3), float32] {
  %497 = @func_12425() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %497.0
}

def @func_17699() -> Tensor[(400), float64] {
  %498 = @func_10332() /* ty=(Tensor[(400), float64],) */;
  %498.0
}

def @func_12408() -> (Tensor[(15, 8, 3), float32],) {
  %499 = @func_9672() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %500 = %499.0;
  (%500,)
}

def @func_17796() -> (Tensor[(48, 2), float64], Tensor[(15, 8, 3), float32]) {
  %504 = fn () -> (Tensor[(48, 2), float64], Tensor[(15, 8, 3), float32]) {
    %501 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
    %502 = %501.2;
    %503 = @func_10004() /* ty=Tensor[(15, 8, 3), float32] */;
    (%502, %503)
  };
  %504() /* ty=(Tensor[(48, 2), float64], Tensor[(15, 8, 3), float32]) */
}

def @func_19077() -> (Tensor[(15, 8, 3), bool], Tensor[(11, 9, 13), float64], Tensor[(192), float64]) {
  %511 = fn () -> (Tensor[(15, 8, 3), bool], Tensor[(11, 9, 13), float64], Tensor[(192), float64]) {
    %505 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
    %506 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %507 = reshape(%506, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %508 = @func_14042(%507) /* ty=(Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) */;
    %509 = %505.0;
    %510 = %508.0;
    (%509, %510, meta[relay.Constant][22] /* ty=Tensor[(192), float64] */)
  };
  %511() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(11, 9, 13), float64], Tensor[(192), float64]) */
}

def @func_6087(%var_6085: Tensor[(160), uint16]) -> (Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) {
  @func_6084(%var_6085) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) */
}

def @func_11162(%var_11161: Tensor[(630), int32]) -> (Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %527 = fn (%var_11115: Tensor[(630), int32]) -> (Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
    %512 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
    %513 = cast(%var_11115, dtype="int32") /* ty=Tensor[(630), int32] */;
    %514 = cast(%var_11115, dtype="int32") /* ty=Tensor[(630), int32] */;
    %515 = reshape(%513, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %516 = reshape(%514, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %517 = @func_7743(%515, %516) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
    %518 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
    %519 = cast(meta[relay.Constant][23] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %520 = reshape(%519, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %521 = @func_4808(%520) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %522 = @func_9322() /* ty=Tensor[(4), float32] */;
    %523 = %512.2;
    %524 = %517.1;
    %525 = %518.1;
    %526 = %521.1;
    (%522, %523, %524, %var_11115, %525, %526, meta[relay.Constant][23] /* ty=Tensor[(273), float64] */)
  };
  %527(%var_11161) /* ty=(Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */
}

def @func_10689(%var_10688: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 8, 3), bool], Tensor[(4), float32]) {
  %534 = fn (%var_10644: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, 1), float64], Tensor[(15, 8, 3), bool], Tensor[(4), float32]) {
    %528 = cast(%var_10644, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
    %529 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
    %530 = @func_10410() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
    %531 = sin(%528) /* ty=Tensor[(16, 8, 1), float64] */;
    %532 = %529.0;
    %533 = %530.0;
    (%531, %532, %533)
  };
  %534(%var_10688) /* ty=(Tensor[(16, 8, 1), float64], Tensor[(15, 8, 3), bool], Tensor[(4), float32]) */
}

def @func_7432() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  @func_7430() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */
}

def @func_13912() -> Tensor[(273), float64] {
  @func_13910() /* ty=Tensor[(273), float64] */
}

def @func_94(%var_49: Tensor[(7, 3, 13), float64]) -> (Tensor[(7, 3, 13), float32],) {
  %535 = cast(%var_49, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
  %536 = cosh(%535) /* ty=Tensor[(7, 3, 13), float64] */;
  %537 = cast(%var_49, dtype="float32") /* ty=Tensor[(7, 3, 13), float32] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %539 = cast(%536, dtype="float32") /* ty=Tensor[(7, 3, 13), float32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %541 = minimum(%539, %540) /* ty=Tensor[(7, 3, 13), float32] */;
  (%541,)
}

def @func_6891(%var_6889: Tensor[(96, 1), uint64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) {
  @func_6888(%var_6889) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) */
}

def @func_16502() -> (Tensor[(15, 8, 3), int8],) {
  %544 = fn () -> (Tensor[(15, 8, 3), int8],) {
    %542 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
    %543 = %542.0;
    (%543,)
  };
  %544() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_13201() -> (Tensor[(15, 8, 3), float32],) {
  %547 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %545 = @func_9672() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_14877() -> (Tensor[(15, 8, 3), float32],) {
  %550 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %548 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %549 = %548.0;
    (%549,)
  };
  %550() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_13042() -> Tensor[(15, 8, 3), float32] {
  @func_13040() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_16230() -> (Tensor[(144), float32], Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32]) {
  @func_16228() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32]) */
}

def @func_10074() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) {
  @func_10072() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) */
}

def @func_6692() -> Tensor[(4), float32] {
  @func_6690() /* ty=Tensor[(4), float32] */
}

def @func_11023() -> (Tensor[(4), float32],) {
  %551 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %552 = %551.1;
  (%552,)
}

def @func_5607() -> (Tensor[(15, 8, 3), float32],) {
  @func_5605() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_12871() -> (Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) {
  %553 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 10, 1), float32] */;
  %554 = sqrt(%553) /* ty=Tensor[(16, 10, 1), float32] */;
  %555 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 10, 1), float32] */, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %559 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %560 = %559.0;
  %561 = cast(%554, dtype="uint32") /* ty=Tensor[(16, 10, 1), uint32] */;
  %562 = cast(%560, dtype="uint32") /* ty=Tensor[(144), uint32] */;
  %563 = bitwise_and(%557, %558) /* ty=Tensor[(16, 10, ?), uint64] */;
  %564 = minimum(%561, %562) /* ty=Tensor[(16, 10, 144), uint32] */;
  (%563, %564)
}

def @func_13535() -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) {
  @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */
}

def @func_7836() -> (Tensor[(15, 8, 3), float32],) {
  %567 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %565 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
    %566 = %565.1;
    (%566,)
  };
  %567() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_13193() -> (Tensor[(15, 8, 3), float32],) {
  %568 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %569 = %568.0;
  (%569,)
}

def @func_7430() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  %570 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %571 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %572 = %570.0;
  (%571, %572)
}

def @func_10435() -> (Tensor[(4), float32],) {
  %573 = @func_10410() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
  %574 = %573.1;
  (%574,)
}

def @func_5556(%var_5551: Tensor[(1, 5, 12), bool], %var_5552: Tensor[(10, 5, 12), bool]) -> Tensor[(10, 5, 12), bool] {
  %575 = cast(%var_5551, dtype="bool") /* ty=Tensor[(1, 5, 12), bool] */;
  %576 = cast(%var_5552, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
  logical_or(%575, %576) /* ty=Tensor[(10, 5, 12), bool] */
}

def @func_19715() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %577 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %578 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %579 = %577.0;
  (%578, %579)
}

def @func_5819() -> (Tensor[(15, 8, 3), float32],) {
  @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_4761(%var_4751: Tensor[(15, 8, 3), float32]) -> Tensor[(15, 8, 3), uint64] {
  %580 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %581 = %580.0;
  %582 = cast(%var_4751, dtype="uint64") /* ty=Tensor[(15, 8, 3), uint64] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="uint64") /* ty=Tensor[(15, 8, 3), uint64] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%584, %585) /* ty=Tensor[(15, 8, 3), uint64] */
}

def @func_17687() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %586 = @func_12945() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %587 = cast(meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %588 = reshape(%587, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %589 = @func_11160(%588) /* ty=(Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %590 = cast(meta[relay.Constant][26] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %591 = reshape(%590, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %592 = @func_11951(%591) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(273), float64]) */;
  %593 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %594 = %586.0;
  %595 = %589.2;
  %596 = %592.1;
  %597 = %593.0;
  %598 = @func_6845() /* ty=Tensor[(15, 8, 3), float32] */;
  (%594, %595, meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, %596, meta[relay.Constant][26] /* ty=Tensor[(273), float64] */, %597, %598)
}

def @func_13006() -> (Tensor[(4), float32],) {
  %601 = fn () -> (Tensor[(4), float32],) {
    %599 = @func_10435() /* ty=(Tensor[(4), float32],) */;
    %600 = %599.0;
    (%600,)
  };
  %601() /* ty=(Tensor[(4), float32],) */
}

def @func_17875() -> Tensor[(4), float32] {
  @func_17873() /* ty=Tensor[(4), float32] */
}

def @func_12066() -> (Tensor[(15, 8, 3), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_12064() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_12979() -> Tensor[(15, 8, 3), float32] {
  %602 = fn () -> Tensor[(15, 8, 3), float32] {
    @func_8027() /* ty=Tensor[(15, 8, 3), float32] */
  };
  %602() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_6401(%var_6397: Tensor[(96), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) {
  %603 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %604 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %607 = cast(%var_6397, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %608 = reshape(%607, newshape=[2, 48]) /* ty=Tensor[(2, 48), uint64] */;
  %609 = @func_6191(%608) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) */;
  %610 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %611 = %603.0;
  %612 = sqrt(%606) /* ty=Tensor[(15, 8, 3), float32] */;
  %613 = %609.0;
  (%610, %611, %612, %613, %var_6397)
}

def @func_15138(%var_15137: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(546), float64], Tensor[(192), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %627 = fn (%var_15127: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(546), float64], Tensor[(192), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
    %614 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
    %615 = @func_11676() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %616 = cast(meta[relay.Constant][27] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %617 = reshape(%616, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %618 = @func_12203(%617) /* ty=(Tensor[(10, 4, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(13, 7, 6), float64], Tensor[(546), float64], Tensor[(15, 8, 3), bool]) */;
    %619 = cast(%var_15127, dtype="float64") /* ty=Tensor[(273), float64] */;
    %620 = reshape(%619, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %621 = @func_94(%620) /* ty=(Tensor[(7, 3, 13), float32],) */;
    %622 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
    %623 = %614.1;
    %624 = %615.1;
    %625 = %618.5;
    %626 = %621.0;
    (%622, %623, %624, %625, meta[relay.Constant][27] /* ty=Tensor[(192), float64] */, %626, %var_15127)
  };
  %627(%var_15137) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(546), float64], Tensor[(192), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */
}

def @func_10508() -> (Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) {
  @func_10506() /* ty=(Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) */
}

def @func_10549() -> (Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %628 = @func_5468() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %629 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %630 = %628.1;
  %631 = %629.0;
  (%630, %631)
}

def @func_4857() -> Tensor[(15, 8, 3), float32] {
  @func_4855() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15644(%var_15642: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) {
  @func_15641(%var_15642) /* ty=(Tensor[(5, 14, 7), float32], Tensor[(5, 14, 7), float32]) */
}

def @func_8027() -> Tensor[(15, 8, 3), float32] {
  @func_7349() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_9324() -> Tensor[(4), float32] {
  @func_9322() /* ty=Tensor[(4), float32] */
}

def @func_11676() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %632 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %633 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %634 = %632.0;
  %635 = %633.0;
  (%634, %635)
}

def @func_11076() -> (Tensor[(15, 8, 3), float32],) {
  %636 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %637 = %636.0;
  (%637,)
}

def @func_11025() -> (Tensor[(4), float32],) {
  @func_11023() /* ty=(Tensor[(4), float32],) */
}

def @func_16228() -> (Tensor[(144), float32], Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32]) {
  %638 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
  %639 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %640 = %638.1;
  %641 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %642 = %639.4;
  (%640, %641, %642)
}

def @func_13910() -> Tensor[(273), float64] {
  %643 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %643.2
}

def @func_17064() -> (Tensor[(15, 8, 3), float32],) {
  @func_17062() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_5468() -> (Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %644 = cast(meta[relay.Constant][28] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %645 = cast(meta[relay.Constant][29] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %646 = reshape(%644, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %647 = reshape(%645, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %648 = @func_5002(%646, %647) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
  %649 = @func_5057() /* ty=Tensor[(15, 8, 3), float32] */;
  %650 = %648.7;
  (%649, %650, meta[relay.Constant][28] /* ty=Tensor[(4), float32] */, meta[relay.Constant][29] /* ty=Tensor[(144), float32] */)
}

def @func_5605() -> (Tensor[(15, 8, 3), float32],) {
  %651 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %652 = %651.0;
  (%652,)
}

def @func_12064() -> (Tensor[(15, 8, 3), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %653 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %654 = @func_11806() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */;
  %655 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
  %656 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %657 = %653.0;
  %658 = %654.1;
  %659 = %655.1;
  %660 = %656.0;
  (%657, %658, %659, %660)
}

def @func_10632() -> Tensor[(15, 8, 3), float32] {
  %661 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %661.0
}

def @func_6888(%var_6876: Tensor[(96, 1), uint64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) {
  %662 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %663 = cast(%var_6876, dtype="uint64") /* ty=Tensor[(96, 1), uint64] */;
  %664 = reshape(%663, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %665 = @func_6401(%664) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %666 = cast(%var_6876, dtype="float64") /* ty=Tensor[(96, 1), float64] */;
  %667 = %662.0;
  %668 = %665.0;
  %669 = cos(%666) /* ty=Tensor[(96, 1), float64] */;
  (%667, %668, %669)
}

def @func_14575() -> (Tensor[(4), float32],) {
  %670 = @func_14206() /* ty=(Tensor[(4), float32],) */;
  %671 = %670.0;
  (%671,)
}

def @func_12822(%var_12820: Tensor[(273), float64], %var_12821: Tensor[(2340), bool]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), int16], Tensor[(273), float64], Tensor[(2340), bool]) {
  %684 = fn (%var_12804: Tensor[(273), float64], %var_12808: Tensor[(2340), bool]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), int16], Tensor[(273), float64], Tensor[(2340), bool]) {
    %672 = cast(meta[relay.Constant][30] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %673 = cast(%var_12804, dtype="float64") /* ty=Tensor[(273), float64] */;
    %674 = reshape(%672, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
    %675 = reshape(%673, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %676 = @func_3969(%674, %675) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
    %677 = cast(%var_12808, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %678 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2340), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %679 = cast(meta[relay.Constant][30] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?), bool] */;
    %681 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
    %682 = %676.2;
    %683 = not_equal(%679, %680) /* ty=Tensor[(2340), bool] */;
    (%681, %682, %var_12804, %683)
  };
  %684(%var_12820, %var_12821) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(273), int16], Tensor[(273), float64], Tensor[(2340), bool]) */
}

def @func_12366(%var_12348: uint16) -> (Tensor[(15, 8, 3), float64], Tensor[(8, 13, 12), bool]) {
  %685 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %686 = cast(%var_12348, dtype="uint16") /* ty=uint16 */;
  %687 = reshape(%686, newshape=[]) /* ty=uint16 */;
  %688 = @func_8932(%687) /* ty=(Tensor[(8, 13, 12), uint16],) */;
  %689 = %688.0;
  %690 = cast(%689, dtype="bool") /* ty=Tensor[(8, 13, 12), bool] */;
  %691 = cast(%var_12348, dtype="bool") /* ty=bool */;
  %692 = %685.0;
  %693 = greater_equal(%690, %691) /* ty=Tensor[(8, 13, 12), bool] */;
  (%692, %693)
}

def @func_7351() -> Tensor[(15, 8, 3), float32] {
  @func_7349() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_9850(%var_9787: Tensor[(16, 9, 2), float32]) -> (Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) {
  %694 = cast(%var_9787, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %695 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(16, 9, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 9, 2), float32] */, dtype="bool") /* ty=Tensor[(16, 9, 2), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %698 = less(%696, %697) /* ty=Tensor[(16, 9, 2), bool] */;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %700 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 9, 2), bool] */, dtype="uint32") /* ty=Tensor[(16, 9, 2), uint32] */;
  %701 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%698, dtype="uint32") /* ty=Tensor[(16, 9, 2), uint32] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %704 = acosh(%699) /* ty=Tensor[(16, 9, 2), float32] */;
  %705 = @func_8554() /* ty=Tensor[(273), float64] */;
  %706 = minimum(%702, %703) /* ty=Tensor[(16, 9, 2), uint32] */;
  (%704, %705, %706)
}

def @func_8467(%var_8465: Tensor[(4), float32], %var_8466: Tensor[(4, 36), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) {
  %716 = fn (%var_8457: Tensor[(4), float32], %var_8458: Tensor[(4, 36), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) {
    %707 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %708 = cast(%var_8457, dtype="float32") /* ty=Tensor[(4), float32] */;
    %709 = cast(%var_8458, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
    %710 = reshape(%708, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %711 = reshape(%709, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %712 = @func_5002(%710, %711) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %713 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
    %714 = %707.1;
    %715 = %712.5;
    (%713, %714, %715, %var_8457, %var_8458)
  };
  %716(%var_8465, %var_8466) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) */
}

def @func_19623(%var_19596: Tensor[(360), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(16, 10, 360), int64], Tensor[(16, 10, 360), float32]) {
  %717 = cast(%var_19596, dtype="float64") /* ty=Tensor[(360), float64] */;
  %718 = reshape(%717, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float64] */;
  %719 = @func_4951(%718) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %720 = @func_12871() /* ty=(Tensor[(16, 10, ?), uint64], Tensor[(16, 10, 144), uint32]) */;
  %721 = %720.0;
  %722 = cast(%var_19596, dtype="int64") /* ty=Tensor[(360), int64] */;
  %723 = cast(%721, dtype="int64") /* ty=Tensor[(16, 10, ?), int64] */;
  %724 = cast(%721, dtype="float32") /* ty=Tensor[(16, 10, ?), float32] */;
  %725 = cast(%var_19596, dtype="float32") /* ty=Tensor[(360), float32] */;
  %726 = %719.1;
  %727 = bitwise_or(%722, %723) /* ty=Tensor[(16, 10, 360), int64] */;
  %728 = divide(%724, %725) /* ty=Tensor[(16, 10, 360), float32] */;
  (%726, %727, %728)
}

def @func_5145() -> (Tensor[(15, 8, 3), int8],) {
  @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_18668() -> Tensor[(15, 8, 3), float64] {
  %730 = fn () -> Tensor[(15, 8, 3), float64] {
    %729 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %729.0
  };
  %730() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_13533() -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) {
  %731 = @func_12525() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %732 = cast(meta[relay.Constant][33] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %733 = cast(meta[relay.Constant][34] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %734 = reshape(%732, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %735 = reshape(%733, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %736 = @func_11281(%734, %735) /* ty=(Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %737 = %736.1;
  %738 = cast(%737, dtype="int32") /* ty=Tensor[(12, 3, 4), int32] */;
  %739 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(24, 6), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %740 = cast(meta[relay.Constant][34] /* ty=Tensor[(24, 6), float32] */, dtype="int32") /* ty=Tensor[(24, 6), int32] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %742 = %731.0;
  %743 = bitwise_xor(%740, %741) /* ty=Tensor[(24, 6), int32] */;
  (%742, meta[relay.Constant][33] /* ty=Tensor[(4), float32] */, %743)
}

def @func_12271() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %744 = @func_9775() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %745 = @func_6367() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %746 = %744.0;
  %747 = %745.0;
  (%746, %747)
}

def @func_19914(%var_19913: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %759 = fn (%var_19826: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %748 = cast(%var_19826, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
    %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %750 = cast(meta[relay.Constant][35] /* ty=Tensor[(308), float64] */, dtype="float64") /* ty=Tensor[(308), float64] */;
    %751 = reshape(%749, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
    %752 = reshape(%750, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
    %753 = @func_17055(%751, %752) /* ty=(Tensor[(4, 7, 11), float64],) */;
    %754 = @func_16881() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %755 = log(%748) /* ty=Tensor[(1, 12, 6), float64] */;
    %756 = %753.0;
    %757 = %754.0;
    %758 = @func_19418() /* ty=Tensor[(15, 8, 3), float32] */;
    (%755, %756, meta[relay.Constant][35] /* ty=Tensor[(308), float64] */, %757, %758)
  };
  %759(%var_19913) /* ty=(Tensor[(1, 12, 6), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_18446() -> (Tensor[(13, 7, 6), bool], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(400), float64]) {
  %760 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
  %761 = %760.0;
  %762 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 7, 6), float64] */, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%761, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %766 = @func_15871() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %767 = @func_14682() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(4), float32]) */;
  %768 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %769 = @func_17632() /* ty=(Tensor[(4), float32], Tensor[(4, 36), float32], Tensor[(144), float32], Tensor[(400), float64], Tensor[(15, 8, 3), float64]) */;
  %770 = logical_or(%764, %765) /* ty=Tensor[(13, 7, 6), bool] */;
  %771 = %766.0;
  %772 = %767.1;
  %773 = %768.0;
  %774 = %769.3;
  (%770, %771, %772, %773, %774)
}

def @func_12912() -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) {
  %781 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) {
    %775 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
    %776 = cast(meta[relay.Constant][37] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %777 = reshape(%776, newshape=[630]) /* ty=Tensor[(630), int32] */;
    %778 = @func_11160(%777) /* ty=(Tensor[(4), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), uint64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %779 = %775.1;
    %780 = %778.5;
    (%779, %780, meta[relay.Constant][37] /* ty=Tensor[(630), int32] */)
  };
  %781() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(630), int32]) */
}

def @func_5560(%var_5558: Tensor[(1, 5, 12), bool], %var_5559: Tensor[(10, 5, 12), bool]) -> Tensor[(10, 5, 12), bool] {
  @func_5556(%var_5558, %var_5559) /* ty=Tensor[(10, 5, 12), bool] */
}

def @func_18304() -> (Tensor[(15, 8, 3), float32],) {
  %783 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %782 = @func_7349() /* ty=Tensor[(15, 8, 3), float32] */;
    (%782,)
  };
  %783() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_9720(%var_9703: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(18, 130), float64]) {
  %784 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %785 = cast(meta[relay.Constant][38] /* ty=Tensor[(18, 130), bool] */, dtype="bool") /* ty=Tensor[(18, 130), bool] */;
  %786 = cast(%var_9703, dtype="float64") /* ty=Tensor[(273), float64] */;
  %787 = reshape(%785, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
  %788 = reshape(%786, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %789 = @func_7400(%787, %788) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) */;
  %790 = cast(meta[relay.Constant][38] /* ty=Tensor[(18, 130), bool] */, dtype="float64") /* ty=Tensor[(18, 130), float64] */;
  %791 = %784.0;
  %792 = %789.0;
  %793 = atanh(%790) /* ty=Tensor[(18, 130), float64] */;
  (%791, %792, %var_9703, %793)
}

def @func_16767(%var_16750: Tensor[(4), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %794 = @func_11558() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */;
  %795 = @func_15507() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %796 = cast(%var_16750, dtype="float32") /* ty=Tensor[(4), float32] */;
  %797 = cast(meta[relay.Constant][39] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %798 = reshape(%796, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %799 = reshape(%797, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %800 = @func_11281(%798, %799) /* ty=(Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %801 = %794.1;
  %802 = %795.1;
  %803 = %800.6;
  (%801, %802, %803, %var_16750, meta[relay.Constant][39] /* ty=Tensor[(144), float32] */)
}

def @func_6404(%var_6402: Tensor[(96), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) {
  @func_6401(%var_6402) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */
}

def @func_8802() -> (Tensor[(15, 8, 3), int8],) {
  %804 = @func_6598() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) */;
  %805 = %804.2;
  (%805,)
}

def @func_10813() -> (Tensor[(15, 8, 3), float32],) {
  %807 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %806 = @func_8027() /* ty=Tensor[(15, 8, 3), float32] */;
    (%806,)
  };
  %807() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_9427(%var_9425: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) {
  @func_9424(%var_9425) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_11558() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  %808 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %809 = @func_7430() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %810 = %808.0;
  %811 = %809.1;
  (%810, %811)
}

def @func_18625(%var_18623: Tensor[(14), float64], %var_18624: Tensor[(308), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64]) {
  %823 = fn (%var_18592: Tensor[(14), float64], %var_18611: Tensor[(308), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64]) {
    %812 = cast(%var_18592, dtype="float64") /* ty=Tensor[(14), float64] */;
    %813 = reshape(%812, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %814 = @func_18138(%813) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) */;
    %815 = cast(%var_18611, dtype="float64") /* ty=Tensor[(308), float64] */;
    %816 = cast(%var_18611, dtype="float64") /* ty=Tensor[(308), float64] */;
    %817 = reshape(%815, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
    %818 = reshape(%816, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), float64] */;
    %819 = @func_17055(%817, %818) /* ty=(Tensor[(4, 7, 11), float64],) */;
    %820 = @func_12978() /* ty=Tensor[(15, 8, 3), float32] */;
    %821 = %814.3;
    %822 = %819.0;
    (%820, %821, %var_18592, %822, %var_18611)
  };
  %823(%var_18623, %var_18624) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(4, 7, 11), float64], Tensor[(308), float64]) */
}

def @func_11281(%var_11257: Tensor[(4), float32], %var_11258: Tensor[(144), float32]) -> (Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %824 = @func_7099() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) */;
  %825 = cast(%var_11257, dtype="float32") /* ty=Tensor[(4), float32] */;
  %826 = cast(%var_11258, dtype="float32") /* ty=Tensor[(144), float32] */;
  %827 = reshape(%825, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
  %828 = reshape(%826, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
  %829 = @func_3594(%827, %828) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
  %830 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %831 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %832 = %824.2;
  %833 = %829.3;
  %834 = %830.0;
  %835 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  %836 = %831.0;
  (%832, %833, %var_11257, %var_11258, %834, %835, %836)
}

def @func_11722() -> Tensor[(15, 8, 3), float32] {
  @func_6845() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_4403(%var_4401: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  @func_4400(%var_4401) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */
}

def @func_10742() -> (Tensor[(15, 8, 3), bool],) {
  %837 = @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %838 = %837.0;
  (%838,)
}

def @func_4000() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) {
  %839 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %840 = %839.0;
  %841 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 8, 3), float32] */, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%840, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %845 = cast(%840, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %846 = subtract(%843, %844) /* ty=Tensor[(15, 8, 3), int8] */;
  %847 = log10(%845) /* ty=Tensor[(15, 8, 3), float64] */;
  (%846, %847)
}

def @func_15260() -> (Tensor[(15, 8, 3), float32],) {
  %848 = @func_10616() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %849 = %848.0;
  (%849,)
}

def @func_5254() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  @func_5252() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_8864() -> (Tensor[(15, 8, 3), float32],) {
  @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_17933() -> (Tensor[(1008), float64], Tensor[(15, 8, 3), float64]) {
  %853 = fn () -> (Tensor[(1008), float64], Tensor[(15, 8, 3), float64]) {
    %850 = @func_16280() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(9, 14, 8), float64], Tensor[(1008), float64], Tensor[(4), float32]) */;
    %851 = %850.2;
    %852 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
    (%851, %852)
  };
  %853() /* ty=(Tensor[(1008), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_10412() -> (Tensor[(4), float32], Tensor[(4), float32]) {
  @func_10410() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */
}

def @func_14100(%var_14099: Tensor[(24, 6), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) {
  %864 = fn (%var_14087: Tensor[(24, 6), int32]) -> (Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) {
    %854 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
    %855 = %854.2;
    %856 = cast(%var_14087, dtype="int16") /* ty=Tensor[(24, 6), int16] */;
    %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(2), int32] */;
    %858 = cast(%855, dtype="int16") /* ty=Tensor[(24, 6), int16] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %860 = right_shift(%858, %859) /* ty=Tensor[(24, 6), int16] */;
    %861 = cast(%860, dtype="float64") /* ty=Tensor[(24, 6), float64] */;
    %862 = @func_12599() /* ty=Tensor[(15, 8, 3), float32] */;
    %863 = asin(%861) /* ty=Tensor[(24, 6), float64] */;
    (%862, %863)
  };
  %864(%var_14099) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(24, 6), float64]) */
}

def @func_15793() -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) {
  %869 = fn () -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) {
    %865 = @func_14402() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(144), float32]) */;
    %866 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %867 = %865.0;
    %868 = %866.0;
    (%867, %868)
  };
  %869() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32]) */
}

def @func_19502() -> (Tensor[(15, 8, 3), int8],) {
  %872 = fn () -> (Tensor[(15, 8, 3), int8],) {
    %870 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
    %871 = %870.1;
    (%871,)
  };
  %872() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_14045(%var_14043: Tensor[(192), float64]) -> (Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) {
  @func_14042(%var_14043) /* ty=(Tensor[(11, 9, 13), float64], Tensor[(143, 9), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(192), float64], Tensor[(144), float32], Tensor[(16, 10, 273), bool], Tensor[(4), float32], Tensor[(15, 8, 3), float64], Tensor[(16, 10, 273), uint8], Tensor[(2340), bool], Tensor[(16, 10, 273), float32], Tensor[(16, 10, 273), bool]) */
}

def @func_11285(%var_11283: Tensor[(4), float32], %var_11284: Tensor[(144), float32]) -> (Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_11281(%var_11283, %var_11284) /* ty=(Tensor[(96), uint64], Tensor[(12, 3, 4), uint64], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_9540(%var_9538: Tensor[(2, 72), float32], %var_9539: Tensor[(400), uint16]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) {
  %887 = fn (%var_9531: Tensor[(2, 72), float32], %var_9535: Tensor[(400), uint16]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) {
    %873 = @func_6138() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %874 = cast(meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
    %875 = cast(meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
    %876 = cast(%var_9531, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
    %877 = reshape(%874, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
    %878 = reshape(%875, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
    %879 = reshape(%876, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %880 = @func_5928(%877, %878, %879) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
    %881 = cast(%var_9535, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %882 = reshape(%881, newshape=[400]) /* ty=Tensor[(400), uint16] */;
    %883 = @func_9301(%882) /* ty=(Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %884 = %873.0;
    %885 = %880.4;
    %886 = %883.3;
    (%884, %885, meta[relay.Constant][41] /* ty=Tensor[(160, 1), uint16] */, %var_9531, %886, %var_9535)
  };
  %887(%var_9538, %var_9539) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */
}

def @func_14266() -> Tensor[(15, 8, 3), float64] {
  %888 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %888.0
}

def @func_17756() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  @func_17754() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */
}

def @func_14268() -> Tensor[(15, 8, 3), float64] {
  @func_14266() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_15959() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) {
  @func_15957() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(15, 8, 3), float32]) */
}

def @func_3972(%var_3970: Tensor[(2340), bool], %var_3971: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) {
  %908 = fn (%var_3948: Tensor[(2340), bool], %var_3949: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) {
    %889 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %890 = cast(%var_3948, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %891 = cast(%var_3949, dtype="float64") /* ty=Tensor[(273), float64] */;
    %892 = reshape(%890, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %893 = reshape(%891, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %894 = @func_679(%892, %893) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %895 = %894.1;
    %896 = cast(%895, dtype="int16") /* ty=Tensor[(7, 3, 13), int16] */;
    %897 = shape_of(%var_3949, dtype="int32") /* ty=Tensor[(1), int32] */;
    %898 = cast(%var_3949, dtype="int16") /* ty=Tensor[(273), int16] */;
    %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?), int16] */;
    %900 = cast(%var_3948, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %901 = cast(%var_3949, dtype="float64") /* ty=Tensor[(273), float64] */;
    %902 = reshape(%900, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %903 = reshape(%901, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %904 = @func_679(%902, %903) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %905 = %889.0;
    %906 = bitwise_and(%898, %899) /* ty=Tensor[(273), int16] */;
    %907 = %904.2;
    (%905, %var_3948, %906, %907)
  };
  %908(%var_3970, %var_3971) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */
}

def @func_7100() -> (Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) {
  %915 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) {
    %909 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %910 = cast(meta[relay.Constant][42] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %911 = reshape(%910, newshape=[96, 1]) /* ty=Tensor[(96, 1), uint64] */;
    %912 = @func_6888(%911) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64]) */;
    %913 = %909.0;
    %914 = %912.2;
    (%913, %914, meta[relay.Constant][42] /* ty=Tensor[(96), uint64] */)
  };
  %915() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) */
}

def @func_8829() -> Tensor[(15, 8, 3), float32] {
  %916 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %916.1
}

def @func_17244() -> (Tensor[(7, 16, 2), float64], Tensor[(13, 7, 6), float64]) {
  %921 = fn () -> (Tensor[(7, 16, 2), float64], Tensor[(13, 7, 6), float64]) {
    %917 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
    %918 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
    %919 = tan(%917) /* ty=Tensor[(7, 16, 2), float64] */;
    %920 = %918.0;
    (%919, %920)
  };
  %921() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(13, 7, 6), float64]) */
}

def @func_14683() -> (Tensor[(15, 8, 3), float64], Tensor[(4), float32]) {
  %926 = fn () -> (Tensor[(15, 8, 3), float64], Tensor[(4), float32]) {
    %922 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %923 = @func_14142() /* ty=(Tensor[(4), float32],) */;
    %924 = %922.0;
    %925 = %923.0;
    (%924, %925)
  };
  %926() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(4), float32]) */
}

def @func_9625() -> (Tensor[(15, 8, 3), float32],) {
  %929 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %927 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %928 = %927.0;
    (%928,)
  };
  %929() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_9777() -> (Tensor[(15, 8, 3), float64],) {
  @func_9775() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_9853(%var_9851: Tensor[(16, 9, 2), float32]) -> (Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) {
  @func_9850(%var_9851) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */
}

def @func_4727() -> (Tensor[(15, 8, 3), float32],) {
  %932 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %930 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_13669() -> Tensor[(15, 8, 3), float32] {
  @func_13667() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_14142() -> (Tensor[(4), float32],) {
  %933 = @func_9322() /* ty=Tensor[(4), float32] */;
  (%933,)
}

def @func_12467(%var_12459: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %934 = @func_6250() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %935 = cast(%var_12459, dtype="float32") /* ty=Tensor[(420), float32] */;
  %936 = reshape(%935, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %937 = @func_10915(%936) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
  %938 = @func_4829() /* ty=Tensor[(15, 8, 3), float32] */;
  %939 = %934.0;
  %940 = %937.4;
  (%938, %939, %940, %var_12459)
}

def @func_12679() -> Tensor[(4), float32] {
  @func_9507() /* ty=Tensor[(4), float32] */
}

def @func_14423() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  %941 = @func_10072() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(192), float64], Tensor[(144), float32]) */;
  %942 = @func_7174() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */;
  %943 = %941.1;
  %944 = %942.1;
  (%943, %944)
}

def @func_14635() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %945 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %946 = @func_12425() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %947 = %945.1;
  %948 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
  %949 = %946.0;
  (%947, %948, %949)
}

def @func_3794() -> (Tensor[(15, 8, 3), float32],) {
  @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_683(%var_681: Tensor[(12, 13, 15), bool], %var_682: Tensor[(273), float64]) -> (Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  @func_679(%var_681, %var_682) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */
}

def @func_4092() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %954 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %950 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %951 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %952 = %950.0;
    %953 = %951.0;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_18906() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64], Tensor[(144), float32], Tensor[(1, 160), uint16], Tensor[(144), float32]) {
  %966 = fn () -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64], Tensor[(144), float32], Tensor[(1, 160), uint16], Tensor[(144), float32]) {
    %955 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %956 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
    %957 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
    %958 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %959 = reshape(%956, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
    %960 = reshape(%957, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
    %961 = reshape(%958, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %962 = @func_5928(%959, %960, %961) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
    %963 = %955.0;
    %964 = @func_14266() /* ty=Tensor[(15, 8, 3), float64] */;
    %965 = %962.3;
    (%963, %964, %965, meta[relay.Constant][44] /* ty=Tensor[(1, 160), uint16] */, meta[relay.Constant][45] /* ty=Tensor[(144), float32] */)
  };
  %966() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64], Tensor[(144), float32], Tensor[(1, 160), uint16], Tensor[(144), float32]) */
}

def @func_5632() -> (Tensor[(15, 8, 3), float32],) {
  @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_5817() -> (Tensor[(15, 8, 3), float32],) {
  %967 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %968 = %967.0;
  (%968,)
}

def @func_11560() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) {
  @func_11558() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_12501(%var_12499: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  @func_12498(%var_12499) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_12527() -> (Tensor[(15, 8, 3), int8],) {
  @func_12525() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_17325() -> (Tensor[(15, 8, 3), bool], Tensor[(39, 7), bool], Tensor[(273), float64]) {
  %974 = fn () -> (Tensor[(15, 8, 3), bool], Tensor[(39, 7), bool], Tensor[(273), float64]) {
    %969 = cast(meta[relay.Constant][46] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %970 = reshape(%969, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
    %971 = @func_7914(%970) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
    %972 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
    %973 = %971.3;
    (%972, %973, meta[relay.Constant][46] /* ty=Tensor[(273), float64] */)
  };
  %974() /* ty=(Tensor[(15, 8, 3), bool], Tensor[(39, 7), bool], Tensor[(273), float64]) */
}

def @func_7175() -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32]) {
  %978 = fn () -> (Tensor[(4), float32], Tensor[(15, 8, 3), float32]) {
    %975 = @func_6106() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %976 = @func_6690() /* ty=Tensor[(4), float32] */;
    %977 = %975.0;
    (%976, %977)
  };
  %978() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_5470() -> (Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  @func_5468() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) */
}

def @func_5034() -> Tensor[(15, 8, 3), float32] {
  %979 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %979.0
}

def @func_5058() -> Tensor[(15, 8, 3), float32] {
  %981 = fn () -> Tensor[(15, 8, 3), float32] {
    %980 = @func_4563() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %980.1
  };
  %981() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_16827() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %982 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %983 = @func_11722() /* ty=Tensor[(15, 8, 3), float32] */;
  %984 = %982.0;
  (%983, %984)
}

def @func_19462() -> (Tensor[(15, 8, 3), int8],) {
  %986 = fn () -> (Tensor[(15, 8, 3), int8],) {
    %985 = @func_15451() /* ty=Tensor[(15, 8, 3), int8] */;
    (%985,)
  };
  %986() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_11807() -> (Tensor[(4), float32], Tensor[(4), float32]) {
  %990 = fn () -> (Tensor[(4), float32], Tensor[(4), float32]) {
    %987 = @func_10435() /* ty=(Tensor[(4), float32],) */;
    %988 = %987.0;
    %989 = @func_6690() /* ty=Tensor[(4), float32] */;
    (%988, %989)
  };
  %990() /* ty=(Tensor[(4), float32], Tensor[(4), float32]) */
}

def @func_6084(%var_6077: Tensor[(160), uint16]) -> (Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) {
  %991 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
  %992 = cast(%var_6077, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %993 = cast(%var_6077, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %994 = cast(meta[relay.Constant][47] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %995 = reshape(%992, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %996 = reshape(%993, newshape=[8, 2, 10]) /* ty=Tensor[(8, 2, 10), uint16] */;
  %997 = reshape(%994, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %998 = @func_5928(%995, %996, %997) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */;
  %999 = %998.2;
  %1000 = cast(%999, dtype="bool") /* ty=Tensor[(4, 1), bool] */;
  %1001 = cast(meta[relay.Constant][47] /* ty=Tensor[(144), float32] */, dtype="bool") /* ty=Tensor[(144), bool] */;
  %1002 = %991.0;
  %1003 = not_equal(%1000, %1001) /* ty=Tensor[(4, 144), bool] */;
  (%1002, %var_6077, %1003)
}

def @func_7280() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */
}

def @func_7652() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) {
  %1009 = fn () -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) {
    %1004 = @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %1005 = %1004.0;
    %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1007 = reshape(%1006, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
    %1008 = @func_4761(%1007) /* ty=Tensor[(15, 8, 3), uint64] */;
    (%1005, %1008)
  };
  %1009() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */
}

def @func_9301(%var_9271: Tensor[(400), uint16]) -> (Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
  %1010 = cast(%var_9271, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %1011 = cast(%var_9271, dtype="uint16") /* ty=Tensor[(400), uint16] */;
  %1012 = reshape(%1010, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %1013 = reshape(%1011, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
  %1014 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1015 = @func_9231() /* ty=(Tensor[(144), float32],) */;
  %1016 = @func_9252() /* ty=Tensor[(273), float64] */;
  %1017 = @func_8999(%1012, %1013) /* ty=Tensor[(10, 4, 10), float32] */;
  %1018 = %1014.0;
  %1019 = %1015.0;
  (%1016, %1017, %var_9271, %1018, %1019)
}

def @func_16424() -> (Tensor[(15, 8, 3), float64],) {
  %1021 = fn () -> (Tensor[(15, 8, 3), float64],) {
    %1020 = @func_14266() /* ty=Tensor[(15, 8, 3), float64] */;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_15210(%var_15209: Tensor[(420), float32]) -> (Tensor[(273), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %1027 = fn (%var_15198: Tensor[(420), float32]) -> (Tensor[(273), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
    %1022 = cast(%var_15198, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1023 = reshape(%1022, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %1024 = @func_9424(%1023) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32]) */;
    %1025 = @func_9252() /* ty=Tensor[(273), float64] */;
    %1026 = %1024.1;
    (%1025, %1026, %var_15198)
  };
  %1027(%var_15209) /* ty=(Tensor[(273), float64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */
}

def @func_10005() -> Tensor[(15, 8, 3), float32] {
  %1029 = fn () -> Tensor[(15, 8, 3), float32] {
    %1028 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1028.0
  };
  %1029() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_17363() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %1030 = @func_13777() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1031 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %1032 = %1030.0;
  %1033 = %1031.0;
  %1034 = @func_8155() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1032, %1033, %1034)
}

def @func_4525() -> (Tensor[(15, 8, 3), float32],) {
  @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_11694() -> (Tensor[(4), float32],) {
  %1036 = fn () -> (Tensor[(4), float32],) {
    %1035 = @func_11400() /* ty=Tensor[(4), float32] */;
    (%1035,)
  };
  %1036() /* ty=(Tensor[(4), float32],) */
}

def @func_17830() -> (Tensor[(144), float32],) {
  %1039 = fn () -> (Tensor[(144), float32],) {
    %1037 = @func_5468() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %1038 = %1037.3;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(144), float32],) */
}

def @func_9723(%var_9721: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(18, 130), float64]) {
  @func_9720(%var_9721) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(18, 130), float64]) */
}

def @func_19626(%var_19624: Tensor[(360), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(16, 10, 360), int64], Tensor[(16, 10, 360), float32]) {
  @func_19623(%var_19624) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(16, 10, 360), int64], Tensor[(16, 10, 360), float32]) */
}

def @func_6194(%var_6192: Tensor[(2, 48), uint64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) {
  @func_6191(%var_6192) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(2, 48), uint64]) */
}

def @func_14717() -> Tensor[(4), float32] {
  %1041 = fn () -> Tensor[(4), float32] {
    %1040 = @func_11023() /* ty=(Tensor[(4), float32],) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(4), float32] */
}

def @func_12498(%var_12479: Tensor[(15, 14, 14), float32]) -> Tensor[(15, 14, 14), float32] {
  %1042 = cast(%var_12479, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  %1043 = log10(%1042) /* ty=Tensor[(15, 14, 14), float32] */;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(15, 14, 14), float32] */;
  asinh(%1044) /* ty=Tensor[(15, 14, 14), float32] */
}

def @func_11078() -> (Tensor[(15, 8, 3), float32],) {
  @func_11076() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_6924() -> (Tensor[(4), float32], Tensor[(273), float64]) {
  %1045 = @func_6598() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) */;
  %1046 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
  %1047 = %1045.7;
  %1048 = %1046.1;
  (%1047, %1048)
}

def @func_6231(%var_6229: Tensor[(1, 2, 7), float64]) -> (Tensor[(1, 2, 7), float64],) {
  @func_6228(%var_6229) /* ty=(Tensor[(1, 2, 7), float64],) */
}

def @func_13861() -> Tensor[(15, 8, 3), int8] {
  %1049 = @func_9222() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), bool]) */;
  %1049.0
}

def @func_6057(%var_6056: Tensor[(11, 9, 13), float64]) -> Tensor[(11, 9, 13), float64] {
  %1051 = fn (%var_6052: Tensor[(11, 9, 13), float64]) -> Tensor[(11, 9, 13), float64] {
    %1050 = cast(%var_6052, dtype="float64") /* ty=Tensor[(11, 9, 13), float64] */;
    atanh(%1050) /* ty=Tensor[(11, 9, 13), float64] */
  };
  %1051(%var_6056) /* ty=Tensor[(11, 9, 13), float64] */
}

def @func_7722() -> (Tensor[(15, 8, 3), bool],) {
  %1058 = fn () -> (Tensor[(15, 8, 3), bool],) {
    %1052 = @func_4829() /* ty=Tensor[(15, 8, 3), float32] */;
    %1053 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 8, 3), float32] */, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
    %1054 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1055 = cast(%1052, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
    %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1057 = logical_and(%1055, %1056) /* ty=Tensor[(15, 8, 3), bool] */;
    (%1057,)
  };
  %1058() /* ty=(Tensor[(15, 8, 3), bool],) */
}

def @func_9143() -> (Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) {
  %1059 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %1060 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %1061 = %1059.1;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_13195() -> (Tensor[(15, 8, 3), float32],) {
  @func_13193() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_14326() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1070 = fn () -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %1063 = @func_13533() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(24, 6), int32]) */;
    %1064 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1065 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1066 = %1063.0;
    %1067 = @func_12599() /* ty=Tensor[(15, 8, 3), float32] */;
    %1068 = %1064.0;
    %1069 = %1065.0;
    (%1066, %1067, %1068, %1069)
  };
  %1070() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_13778() -> (Tensor[(15, 8, 3), float32],) {
  %1072 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %1071 = @func_8120() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1071,)
  };
  %1072() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_18960() -> Tensor[(15, 8, 3), float32] {
  @func_18958() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_16141(%var_16112: Tensor[(7, 9, 12), float32]) -> (Tensor[(7, 9, 12), float32], Tensor[(4), float32]) {
  %1073 = cast(%var_16112, dtype="float32") /* ty=Tensor[(7, 9, 12), float32] */;
  %1074 = tan(%1073) /* ty=Tensor[(7, 9, 12), float32] */;
  %1075 = @func_15309() /* ty=Tensor[(4), float32] */;
  (%1074, %1075)
}

def @func_11402() -> Tensor[(4), float32] {
  @func_11400() /* ty=Tensor[(4), float32] */
}

def @func_16680(%var_16679: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) {
  %1086 = fn (%var_16667: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) {
    %1076 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1077 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %1078 = cast(%var_16667, dtype="float64") /* ty=Tensor[(14), float64] */;
    %1079 = reshape(%1078, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float64] */;
    %1080 = @func_6228(%1079) /* ty=(Tensor[(1, 2, 7), float64],) */;
    %1081 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
    %1082 = %1076.0;
    %1083 = %1077.0;
    %1084 = %1080.0;
    %1085 = %1081.1;
    (%1082, %1083, %1084, %var_16667, %1085)
  };
  %1086(%var_16679) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) */
}

def @func_9002(%var_9000: Tensor[(10, 4, 10), uint16], %var_9001: Tensor[(10, 4, 10), uint16]) -> Tensor[(10, 4, 10), float32] {
  %1093 = fn (%var_8953: Tensor[(10, 4, 10), uint16], %var_8954: Tensor[(10, 4, 10), uint16]) -> Tensor[(10, 4, 10), float32] {
    %1087 = cast(%var_8954, dtype="bool") /* ty=Tensor[(10, 4, 10), bool] */;
    %1088 = shape_of(%var_8953, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1089 = cast(%var_8953, dtype="bool") /* ty=Tensor[(10, 4, 10), bool] */;
    %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1091 = less_equal(%1089, %1090) /* ty=Tensor[(10, 4, 10), bool] */;
    %1092 = cast(%1091, dtype="float32") /* ty=Tensor[(10, 4, 10), float32] */;
    acos(%1092) /* ty=Tensor[(10, 4, 10), float32] */
  };
  %1093(%var_9000, %var_9001) /* ty=Tensor[(10, 4, 10), float32] */
}

def @func_15311() -> Tensor[(4), float32] {
  @func_15309() /* ty=Tensor[(4), float32] */
}

def @func_16056() -> (Tensor[(4), float32], Tensor[(7, 3, 13), float32], Tensor[(13, 7, 6), float64], Tensor[(15, 8, 3), float32]) {
  @func_16054() /* ty=(Tensor[(4), float32], Tensor[(7, 3, 13), float32], Tensor[(13, 7, 6), float64], Tensor[(15, 8, 3), float32]) */
}

def @func_679(%var_646: Tensor[(12, 13, 15), bool], %var_657: Tensor[(273), float64]) -> (Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %1094 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1095 = shape_of(%var_646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1096 = cast(%var_646, dtype="bool") /* ty=Tensor[(12, 13, 15), bool] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1098 = cast(%var_657, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1099 = reshape(%1098, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %1100 = @func_94(%1099) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %1101 = logical_or(%1096, %1097) /* ty=Tensor[(12, 13, 15), bool] */;
  %1102 = %1100.0;
  (%1101, %1102, %var_657)
}

def @func_4564() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1107 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %1103 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1104 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1105 = %1103.0;
    %1106 = %1104.1;
    (%1105, %1106)
  };
  %1107() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_7916(%var_7915: Tensor[(39, 7), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) {
  %1121 = fn (%var_7878: Tensor[(39, 7), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) {
    %1108 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1109 = cast(meta[relay.Constant][50] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %1110 = cast(meta[relay.Constant][51] /* ty=Tensor[(39, 7), float64] */, dtype="float64") /* ty=Tensor[(39, 7), float64] */;
    %1111 = reshape(%1109, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
    %1112 = reshape(%1110, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %1113 = @func_3969(%1111, %1112) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
    %1114 = cast(%var_7878, dtype="bool") /* ty=Tensor[(39, 7), bool] */;
    %1115 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(39, 7), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1116 = cast(meta[relay.Constant][51] /* ty=Tensor[(39, 7), float64] */, dtype="bool") /* ty=Tensor[(39, 7), bool] */;
    %1117 = dyn.reshape(%1114, %1115, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1118 = %1108.0;
    %1119 = %1113.0;
    %1120 = less(%1116, %1117) /* ty=Tensor[(39, 7), bool] */;
    (%1118, %1119, meta[relay.Constant][50] /* ty=Tensor[(2340), bool] */, %1120)
  };
  %1121(%var_7915) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */
}

def @func_9582(%var_9559: Tensor[(600), bool]) -> (Tensor[(15, 8, 3), float32], Tensor[(10, 5, 12), bool], Tensor[(60), bool], Tensor[(600), bool], Tensor[(15, 8, 3), float32]) {
  %1122 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1123 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), bool] */, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1124 = cast(%var_9559, dtype="bool") /* ty=Tensor[(600), bool] */;
  %1125 = reshape(%1123, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
  %1126 = reshape(%1124, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
  %1127 = @func_8862() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1128 = %1122.0;
  %1129 = @func_5556(%1125, %1126) /* ty=Tensor[(10, 5, 12), bool] */;
  %1130 = %1127.0;
  (%1128, %1129, meta[relay.Constant][52] /* ty=Tensor[(60), bool] */, %var_9559, %1130)
}

def @func_8555() -> Tensor[(273), float64] {
  %1132 = fn () -> Tensor[(273), float64] {
    %1131 = @func_6026() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */;
    %1131.0
  };
  %1132() /* ty=Tensor[(273), float64] */
}

def @func_10915(%var_10894: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32], Tensor[(420), float32], Tensor[(420), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %1133 = cast(meta[relay.Constant][53] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1134 = reshape(%1133, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
  %1135 = @func_2535(%1134) /* ty=Tensor[(4, 6, 4), bool] */;
  %1136 = cast(%1135, dtype="uint64") /* ty=Tensor[(4, 6, 4), uint64] */;
  %1137 = reshape(%1136, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1138 = @func_6401(%1137) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %1139 = cast(%var_10894, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1140 = reshape(%1139, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %1141 = @func_10608(%1140) /* ty=(Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
  %1142 = @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */;
  %1143 = @func_7651() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), uint64]) */;
  %1144 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %1145 = %1138.0;
  %1146 = %1141.2;
  %1147 = %1142.0;
  %1148 = %1143.0;
  (%1144, %1135, meta[relay.Constant][53] /* ty=Tensor[(96), uint64] */, %1145, %1146, %var_10894, %1147, %1148)
}

def @func_6107() -> (Tensor[(15, 8, 3), float32],) {
  %1151 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %1149 = @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1150 = %1149.0;
    (%1150,)
  };
  %1151() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_10333() -> (Tensor[(400), float64],) {
  %1156 = fn () -> (Tensor[(400), float64],) {
    %1152 = @func_9897() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */;
    %1153 = %1152.2;
    %1154 = cast(%1153, dtype="float64") /* ty=Tensor[(400), float64] */;
    %1155 = rsqrt(%1154) /* ty=Tensor[(400), float64] */;
    (%1155,)
  };
  %1156() /* ty=(Tensor[(400), float64],) */
}

def @func_9673() -> (Tensor[(15, 8, 3), float32],) {
  %1158 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %1157 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1157,)
  };
  %1158() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_5932(%var_5929: Tensor[(8, 2, 10), uint16], %var_5930: Tensor[(8, 2, 10), uint16], %var_5931: Tensor[(144), float32]) -> (Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %1171 = fn (%var_5909: Tensor[(8, 2, 10), uint16], %var_5910: Tensor[(8, 2, 10), uint16], %var_5922: Tensor[(144), float32]) -> (Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
    %1159 = cast(%var_5910, dtype="uint16") /* ty=Tensor[(8, 2, 10), uint16] */;
    %1160 = shape_of(%var_5909, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1161 = cast(%var_5909, dtype="uint16") /* ty=Tensor[(8, 2, 10), uint16] */;
    %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1163 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
    %1164 = cast(%var_5922, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1165 = reshape(%1163, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %1166 = reshape(%1164, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %1167 = @func_5002(%1165, %1166) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %1168 = subtract(%1161, %1162) /* ty=Tensor[(8, 2, 10), uint16] */;
    %1169 = %1167.3;
    %1170 = @func_5057() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1168, %1169, meta[relay.Constant][54] /* ty=Tensor[(4, 1), float32] */, %var_5922, %1170)
  };
  %1171(%var_5929, %var_5930, %var_5931) /* ty=(Tensor[(8, 2, 10), uint16], Tensor[(144), float32], Tensor[(4, 1), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_10787(%var_10785: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) {
  @func_10784(%var_10785) /* ty=(Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */
}

def @func_8626() -> (Tensor[(15, 8, 3), bool],) {
  @func_8624() /* ty=(Tensor[(15, 8, 3), bool],) */
}

def @func_11524() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  %1172 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
  %1173 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1174 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1175 = reshape(%1173, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %1176 = reshape(%1174, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float32] */;
  %1177 = %1172.0;
  %1178 = @func_7951(%1175, %1176) /* ty=Tensor[(15, 2, 14), float32] */;
  (%1177, %1178, meta[relay.Constant][55] /* ty=Tensor[(420), float32] */)
}

def @func_7746(%var_7744: Tensor[(15, 6, 7), int32], %var_7745: Tensor[(15, 6, 7), int32]) -> (Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) {
  %1185 = fn (%var_7728: Tensor[(15, 6, 7), int32], %var_7729: Tensor[(15, 6, 7), int32]) -> (Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) {
    %1179 = cast(%var_7729, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
    %1180 = shape_of(%var_7728, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%var_7728, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1183 = greater(%1181, %1182) /* ty=Tensor[(15, 6, 7), bool] */;
    %1184 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
    (%1183, %1184)
  };
  %1185(%var_7744, %var_7745) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */
}

def @func_10634() -> Tensor[(15, 8, 3), float32] {
  @func_10632() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_5005(%var_5003: Tensor[(4), float32], %var_5004: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
  %1205 = fn (%var_4981: Tensor[(4), float32], %var_4982: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
    %1186 = cast(%var_4981, dtype="float32") /* ty=Tensor[(4), float32] */;
    %1187 = cast(%var_4982, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1188 = reshape(%1186, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
    %1189 = reshape(%1187, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
    %1190 = @func_3594(%1188, %1189) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
    %1191 = %1190.9;
    %1192 = cast(%1191, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %1193 = reshape(%1192, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
    %1194 = @func_94(%1193) /* ty=(Tensor[(7, 3, 13), float32],) */;
    %1195 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1196 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1197 = cast(%var_4982, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1198 = reshape(%1197, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %1199 = @func_3931(%1198) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
    %1200 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
    %1201 = %1194.0;
    %1202 = %1195.0;
    %1203 = %1196.1;
    %1204 = %1199.2;
    (%1200, %1191, %var_4981, %var_4982, %1201, %1202, %1203, %1204)
  };
  %1205(%var_5003, %var_5004) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */
}

def @func_18779() -> (Tensor[(15, 8, 3), bool],) {
  %1208 = fn () -> (Tensor[(15, 8, 3), bool],) {
    %1206 = @func_10742() /* ty=(Tensor[(15, 8, 3), bool],) */;
    %1207 = %1206.0;
    (%1207,)
  };
  %1208() /* ty=(Tensor[(15, 8, 3), bool],) */
}

def @func_10257() -> (Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) {
  %1209 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
  %1210 = cast(meta[relay.Constant][56] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %1211 = reshape(%1210, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %1212 = @func_6084(%1211) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(160), uint16], Tensor[(4, 144), bool]) */;
  %1213 = %1209.2;
  %1214 = %1212.2;
  (%1213, %1214, meta[relay.Constant][56] /* ty=Tensor[(160), uint16] */)
}

def @func_4331() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) {
  %1219 = fn () -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) {
    %1215 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1216 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1217 = %1215.0;
    %1218 = %1216.0;
    (%1217, %1218)
  };
  %1219() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */
}

def @func_13419() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(8, 18), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(16, 9, 2), uint32], Tensor[(288), float32]) {
  %1237 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(8, 18), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(16, 9, 2), uint32], Tensor[(288), float32]) {
    %1220 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
    %1221 = cast(meta[relay.Constant][58] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %1222 = reshape(%1220, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
    %1223 = reshape(%1221, newshape=[400]) /* ty=Tensor[(400), uint16] */;
    %1224 = @func_9537(%1222, %1223) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
    %1225 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
    %1226 = cast(meta[relay.Constant][58] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %1227 = reshape(%1225, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
    %1228 = reshape(%1226, newshape=[400]) /* ty=Tensor[(400), uint16] */;
    %1229 = @func_9537(%1227, %1228) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
    %1230 = cast(meta[relay.Constant][59] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1231 = reshape(%1230, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
    %1232 = @func_9850(%1231) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
    %1233 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
    %1234 = %1224.1;
    %1235 = %1229.0;
    %1236 = %1232.2;
    (%1233, %1234, meta[relay.Constant][57] /* ty=Tensor[(8, 18), float32] */, meta[relay.Constant][58] /* ty=Tensor[(400), uint16] */, %1235, %1236, meta[relay.Constant][59] /* ty=Tensor[(288), float32] */)
  };
  %1237() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(8, 18), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(16, 9, 2), uint32], Tensor[(288), float32]) */
}

def @func_8862() -> (Tensor[(15, 8, 3), float32],) {
  %1238 = @func_5630() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1239 = %1238.0;
  (%1239,)
}

def @func_16385(%var_16345: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(4), float32]) {
  %1240 = cast(%var_16345, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1241 = reshape(%1240, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %1242 = @func_10608(%1241) /* ty=(Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */;
  %1243 = @func_8027() /* ty=Tensor[(15, 8, 3), float32] */;
  %1244 = %1242.1;
  %1245 = @func_15309() /* ty=Tensor[(4), float32] */;
  (%1243, %1244, %var_16345, %1245)
}

def @func_16599() -> (Tensor[(4), float32], Tensor[(15, 8, 3), float64]) {
  %1250 = fn () -> (Tensor[(4), float32], Tensor[(15, 8, 3), float64]) {
    %1246 = @func_15894() /* ty=(Tensor[(4), float32],) */;
    %1247 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %1248 = %1246.0;
    %1249 = %1247.0;
    (%1248, %1249)
  };
  %1250() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), float64]) */
}

def @func_3933(%var_3932: Tensor[(144), float32]) -> (Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) {
  %1278 = fn (%var_3871: Tensor[(144), float32]) -> (Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) {
    %1251 = cast(meta[relay.Constant][60] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %1252 = cast(%var_3871, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1253 = reshape(%1251, newshape=[1, 1, 4]) /* ty=Tensor[(1, 1, 4), float32] */;
    %1254 = reshape(%1252, newshape=[12, 3, 4]) /* ty=Tensor[(12, 3, 4), float32] */;
    %1255 = @func_3594(%1253, %1254) /* ty=(Tensor[(4, 6, 4), bool], Tensor[(4, 24), uint64], Tensor[(12, 3, 4), bool], Tensor[(12, 3, 4), uint64], Tensor[(4, 6, 4), bool], Tensor[(12, 3, 4), bool], Tensor[(2340), bool], Tensor[(12, 13, 15), bool], Tensor[(12, 13, 15), bool], Tensor[(13, 21), bool]) */;
    %1256 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1257 = %1256.0;
    %1258 = cast(%1257, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1259 = cosh(%1258) /* ty=Tensor[(15, 8, 3), float32] */;
    %1260 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1261 = %1260.0;
    %1262 = cast(%1261, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1263 = shape_of(%1259, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1264 = cast(%1259, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1266 = divide(%1264, %1265) /* ty=Tensor[(15, 8, 3), float32] */;
    %1267 = cast(%1261, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1268 = shape_of(%1266, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1269 = cast(%1266, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1270 = dyn.reshape(%1267, %1268, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1271 = cast(meta[relay.Constant][61] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
    %1272 = reshape(%1271, newshape=[4, 6, 4]) /* ty=Tensor[(4, 6, 4), uint64] */;
    %1273 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1274 = %1255.9;
    %1275 = floor_divide(%1269, %1270) /* ty=Tensor[(15, 8, 3), float32] */;
    %1276 = @func_2535(%1272) /* ty=Tensor[(4, 6, 4), bool] */;
    %1277 = %1273.0;
    (%1274, meta[relay.Constant][60] /* ty=Tensor[(4), float32] */, %var_3871, %1275, %1276, meta[relay.Constant][61] /* ty=Tensor[(96), uint64] */, %1277)
  };
  %1278(%var_3932) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */
}

def @func_9507() -> Tensor[(4), float32] {
  @func_9322() /* ty=Tensor[(4), float32] */
}

def @func_10611(%var_10609: Tensor[(420), float32]) -> (Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  @func_10608(%var_10609) /* ty=(Tensor[(160), uint16], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */
}

def @func_6369() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_6367() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_6599() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) {
  %1301 = fn () -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) {
    %1279 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
    %1280 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1281 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1282 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1283 = cast(meta[relay.Constant][62] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %1284 = reshape(%1283, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %1285 = @func_4808(%1284) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %1286 = @func_4330() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), int8]) */;
    %1287 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %1288 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 260), bool] */, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %1289 = %1285.1;
    %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(7, 3, 13), float64] */;
    %1291 = reshape(%1288, newshape=[2340]) /* ty=Tensor[(2340), bool] */;
    %1292 = reshape(%1290, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %1293 = @func_3969(%1291, %1292) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(273), int16], Tensor[(273), float64]) */;
    %1294 = %1279.1;
    %1295 = %1280.0;
    %1296 = %1281.0;
    %1297 = %1282.0;
    %1298 = %1286.1;
    %1299 = %1287.1;
    %1300 = %1293.2;
    (%1294, %1295, %1296, %1297, %1289, meta[relay.Constant][62] /* ty=Tensor[(273), float64] */, %1298, %1299, %1300, meta[relay.Constant][63] /* ty=Tensor[(9, 260), bool] */)
  };
  %1301() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(273), float64], Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(273), int16], Tensor[(9, 260), bool]) */
}

def @func_7507(%var_7506: Tensor[(13, 7, 6), float64]) -> (Tensor[(13, 7, 6), float64],) {
  %1304 = fn (%var_7502: Tensor[(13, 7, 6), float64]) -> (Tensor[(13, 7, 6), float64],) {
    %1302 = cast(%var_7502, dtype="float64") /* ty=Tensor[(13, 7, 6), float64] */;
    %1303 = log(%1302) /* ty=Tensor[(13, 7, 6), float64] */;
    (%1303,)
  };
  %1304(%var_7506) /* ty=(Tensor[(13, 7, 6), float64],) */
}

def @func_6762(%var_6740: Tensor[(192), float64], %var_6742: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(192), float64], Tensor[(13, 21), float64], Tensor[(144), float32]) {
  %1305 = cast(%var_6740, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1306 = cast(meta[relay.Constant][64] /* ty=Tensor[(13, 21), float64] */, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
  %1307 = cast(%var_6742, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1308 = reshape(%1305, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %1309 = reshape(%1306, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1310 = reshape(%1307, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1311 = @func_5795(%1308, %1309, %1310) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) */;
  %1312 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
  %1313 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %1314 = %1311.0;
  (%1312, %1313, %1314, %var_6740, meta[relay.Constant][64] /* ty=Tensor[(13, 21), float64] */, %var_6742)
}

def @func_13735() -> Tensor[(15, 8, 3), float32] {
  @func_13733() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_15718() -> Tensor[(15, 8, 3), float32] {
  %1316 = fn () -> Tensor[(15, 8, 3), float32] {
    %1315 = @func_15399() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1315.0
  };
  %1316() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_6338() -> (Tensor[(15, 8, 3), float64],) {
  %1317 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1317,)
}

def @func_8831() -> Tensor[(15, 8, 3), float32] {
  @func_8829() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_13304() -> (Tensor[(96), uint64], Tensor[(15, 8, 3), int8]) {
  %1322 = fn () -> (Tensor[(96), uint64], Tensor[(15, 8, 3), int8]) {
    %1318 = @func_7099() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(96, 1), float64], Tensor[(96), uint64]) */;
    %1319 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
    %1320 = %1318.2;
    %1321 = %1319.1;
    (%1320, %1321)
  };
  %1322() /* ty=(Tensor[(96), uint64], Tensor[(15, 8, 3), int8]) */
}

def @func_12427() -> (Tensor[(15, 8, 3), float32],) {
  @func_12425() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_12681() -> Tensor[(4), float32] {
  @func_12679() /* ty=Tensor[(4), float32] */
}

def @func_14587() -> (Tensor[(13, 7, 6), float64],) {
  %1325 = fn () -> (Tensor[(13, 7, 6), float64],) {
    %1323 = @func_13158() /* ty=(Tensor[(4), float32], Tensor[(13, 7, 6), float64], Tensor[(91, 6), float64]) */;
    %1324 = %1323.1;
    (%1324,)
  };
  %1325() /* ty=(Tensor[(13, 7, 6), float64],) */
}

def @func_16388(%var_16386: Tensor[(420), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(4), float32]) {
  @func_16385(%var_16386) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 2, 14), float32], Tensor[(420), float32], Tensor[(4), float32]) */
}

def @func_18140(%var_18139: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) {
  %1340 = fn (%var_18106: Tensor[(14), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) {
    %1326 = @func_11076() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1327 = cast(%var_18106, dtype="float64") /* ty=Tensor[(14), float64] */;
    %1328 = reshape(%1327, newshape=[14]) /* ty=Tensor[(14), float64] */;
    %1329 = @func_16678(%1328) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(1, 2, 7), float64], Tensor[(14), float64], Tensor[(15, 8, 3), int8]) */;
    %1330 = cast(meta[relay.Constant][65] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
    %1331 = reshape(%1330, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %1332 = @func_4808(%1331) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %1333 = @func_11607() /* ty=(Tensor[(4), float32],) */;
    %1334 = @func_11722() /* ty=Tensor[(15, 8, 3), float32] */;
    %1335 = @func_13314() /* ty=Tensor[(15, 8, 3), bool] */;
    %1336 = %1326.0;
    %1337 = %1329.4;
    %1338 = %1332.2;
    %1339 = %1333.0;
    (%1334, %1335, %1336, %1337, %var_18106, %1338, meta[relay.Constant][65] /* ty=Tensor[(273), float64] */, %1339)
  };
  %1340(%var_18139) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), bool], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8], Tensor[(14), float64], Tensor[(273), float64], Tensor[(273), float64], Tensor[(4), float32]) */
}

def @func_17213(%var_17211: Tensor[(13, 12, 1), float32]) -> Tensor[(13, 12, 1), float32] {
  @func_17210(%var_17211) /* ty=Tensor[(13, 12, 1), float32] */
}

def @func_5252() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(144), float32], Tensor[(15, 8, 3), float32]) {
  %1341 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %1342 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1343 = reshape(%1342, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1344 = @func_3931(%1343) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
  %1345 = %1341.0;
  %1346 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  %1347 = %1344.5;
  %1348 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1345, %1346, %1347, meta[relay.Constant][66] /* ty=Tensor[(144), float32] */, %1348)
}

def @func_5534() -> (Tensor[(15, 8, 3), float32],) {
  @func_5532() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_6340() -> (Tensor[(15, 8, 3), float64],) {
  @func_6338() /* ty=(Tensor[(15, 8, 3), float64],) */
}

def @func_17701() -> Tensor[(400), float64] {
  @func_17699() /* ty=Tensor[(400), float64] */
}

def @func_10215(%var_10189: Tensor[(60), bool]) -> (Tensor[(15, 8, 3), int8], Tensor[(4), float32], Tensor[(4), float32], Tensor[(60), bool], Tensor[(600), bool], Tensor[(10, 5, 12), float32], Tensor[(16, 9, 2), uint32], Tensor[(144, 2), float32], Tensor[(15, 8, 3), bool]) {
  %1349 = @func_9991() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %1350 = cast(%var_10189, dtype="bool") /* ty=Tensor[(60), bool] */;
  %1351 = cast(meta[relay.Constant][67] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
  %1352 = reshape(%1350, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
  %1353 = reshape(%1351, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
  %1354 = @func_5556(%1352, %1353) /* ty=Tensor[(10, 5, 12), bool] */;
  %1355 = cast(%1354, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
  %1356 = cast(meta[relay.Constant][68] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %1357 = reshape(%1356, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %1358 = @func_9850(%1357) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
  %1359 = @func_7721() /* ty=(Tensor[(15, 8, 3), bool],) */;
  %1360 = %1349.1;
  %1361 = @func_6690() /* ty=Tensor[(4), float32] */;
  %1362 = @func_9507() /* ty=Tensor[(4), float32] */;
  %1363 = exp(%1355) /* ty=Tensor[(10, 5, 12), float32] */;
  %1364 = %1358.2;
  %1365 = %1359.0;
  (%1360, %1361, %1362, %var_10189, meta[relay.Constant][67] /* ty=Tensor[(600), bool] */, %1363, %1364, meta[relay.Constant][68] /* ty=Tensor[(144, 2), float32] */, %1365)
}

def @func_5154() -> (Tensor[(15, 8, 3), float64],) {
  %1366 = @func_4855() /* ty=Tensor[(15, 8, 3), float32] */;
  %1367 = cast(%1366, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %1368 = exp(%1367) /* ty=Tensor[(15, 8, 3), float64] */;
  (%1368,)
}

def @func_7404(%var_7402: Tensor[(2340), bool], %var_7403: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) {
  @func_7400(%var_7402, %var_7403) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) */
}

def @func_14114() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1369 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1370 = %1369.0;
  %1371 = @func_13040() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1370, %1371)
}

def @func_4370() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
  %1378 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) {
    %1372 = @func_3792() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1373 = cast(meta[relay.Constant][69] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1374 = reshape(%1373, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %1375 = @func_3931(%1374) /* ty=(Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(4, 6, 4), bool], Tensor[(96), uint64], Tensor[(15, 8, 3), float32]) */;
    %1376 = %1372.0;
    %1377 = %1375.1;
    (%1376, %1377, meta[relay.Constant][69] /* ty=Tensor[(144), float32] */)
  };
  %1378() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */
}

def @func_10506() -> (Tensor[(160), uint16], Tensor[(15, 8, 3), float64]) {
  %1379 = @func_10257() /* ty=(Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) */;
  %1380 = @func_5154() /* ty=(Tensor[(15, 8, 3), float64],) */;
  %1381 = %1379.2;
  %1382 = %1380.0;
  (%1381, %1382)
}

def @func_13863() -> Tensor[(15, 8, 3), int8] {
  @func_13861() /* ty=Tensor[(15, 8, 3), int8] */
}

def @func_14637() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_14635() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_11526() -> (Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) {
  @func_11524() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(15, 2, 14), float32], Tensor[(420), float32]) */
}

def @func_12525() -> (Tensor[(15, 8, 3), int8],) {
  %1383 = @func_5143() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %1384 = %1383.0;
  (%1384,)
}

def @func_8029() -> Tensor[(15, 8, 3), float32] {
  @func_8027() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_4811(%var_4809: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  @func_4808(%var_4809) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */
}

def @func_4696() -> Tensor[(15, 8, 3), int8] {
  %1386 = fn () -> Tensor[(15, 8, 3), int8] {
    %1385 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
    %1385.0
  };
  %1386() /* ty=Tensor[(15, 8, 3), int8] */
}

def @main(%var_19986: Tensor[(196), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(14, 14, 1), float32], Tensor[(15, 8, 3), uint64], Tensor[(196), bool]) {
  %1387 = @func_15509() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */;
  %1388 = @func_14207() /* ty=(Tensor[(4), float32],) */;
  %1389 = @func_16502() /* ty=(Tensor[(15, 8, 3), int8],) */;
  %1390 = cast(meta[relay.Constant][70] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %1391 = reshape(%1390, newshape=[14, 14, 1]) /* ty=Tensor[(14, 14, 1), float32] */;
  %1392 = @func_15696(%1391) /* ty=(Tensor[(14, 14, 1), float32],) */;
  %1393 = @func_13643() /* ty=Tensor[(15, 8, 3), float64] */;
  %1394 = cast(%1393, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1395 = reshape(%1394, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
  %1396 = cast(meta[relay.Constant][70] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %1397 = acos(%1396) /* ty=Tensor[(196), float32] */;
  %1398 = cast(%var_19986, dtype="bool") /* ty=Tensor[(196), bool] */;
  %1399 = shape_of(%1397, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1400 = cast(%1397, dtype="bool") /* ty=Tensor[(196), bool] */;
  %1401 = dyn.reshape(%1398, %1399, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1402 = @func_13643() /* ty=Tensor[(15, 8, 3), float64] */;
  %1403 = %1387.0;
  %1404 = %1388.0;
  %1405 = %1389.0;
  %1406 = %1392.0;
  %1407 = @func_4761(%1395) /* ty=Tensor[(15, 8, 3), uint64] */;
  %1408 = greater(%1400, %1401) /* ty=Tensor[(196), bool] */;
  (%1402, %1403, %1404, %1405, %1406, %1407, %1408)
}

def @func_15872() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  %1413 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
    %1409 = @func_5817() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1410 = @func_9624() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1411 = %1409.0;
    %1412 = %1410.0;
    (%1411, %1412)
  };
  %1413() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_16881() -> (Tensor[(15, 8, 3), float32],) {
  %1414 = @func_15399() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1415 = %1414.0;
  (%1415,)
}

def @func_12542(%var_12540: Tensor[(9, 16, 5), float64]) -> (Tensor[(9, 16, 5), float64],) {
  @func_12539(%var_12540) /* ty=(Tensor[(9, 16, 5), float64],) */
}

def @func_19717() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_19715() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_18378() -> Tensor[(15, 8, 3), float32] {
  %1416 = fn () -> Tensor[(15, 8, 3), float32] {
    @func_15361() /* ty=Tensor[(15, 8, 3), float32] */
  };
  %1416() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_13889() -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  %1417 = @func_8647() /* ty=Tensor[(15, 8, 3), float64] */;
  %1418 = @func_10965() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1417, %1418)
}

def @func_9585(%var_9583: Tensor[(600), bool]) -> (Tensor[(15, 8, 3), float32], Tensor[(10, 5, 12), bool], Tensor[(60), bool], Tensor[(600), bool], Tensor[(15, 8, 3), float32]) {
  @func_9582(%var_9583) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(10, 5, 12), bool], Tensor[(60), bool], Tensor[(600), bool], Tensor[(15, 8, 3), float32]) */
}

def @func_17542() -> Tensor[(15, 8, 3), float32] {
  @func_17540() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_17435() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64], Tensor[(16, 9, 2), uint32], Tensor[(2, 144), float32]) {
  %1419 = @func_14635() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1420 = cast(meta[relay.Constant][71] /* ty=Tensor[(96), uint64] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %1421 = reshape(%1420, newshape=[96]) /* ty=Tensor[(96), uint64] */;
  %1422 = @func_6401(%1421) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(96), uint64]) */;
  %1423 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1424 = reshape(%1423, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %1425 = @func_9850(%1424) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(273), float64], Tensor[(16, 9, 2), uint32]) */;
  %1426 = @func_13861() /* ty=Tensor[(15, 8, 3), int8] */;
  %1427 = %1419.1;
  %1428 = %1422.3;
  %1429 = %1425.2;
  (%1426, %1427, %1428, meta[relay.Constant][71] /* ty=Tensor[(96), uint64] */, %1429, meta[relay.Constant][72] /* ty=Tensor[(2, 144), float32] */)
}

def @func_16829() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) {
  @func_16827() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_5143() -> (Tensor[(15, 8, 3), int8],) {
  %1430 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1431 = %1430.0;
  (%1431,)
}

def @func_15693(%var_15690: Tensor[(14, 14, 1), float32]) -> (Tensor[(14, 14, 1), float32],) {
  %1432 = cast(%var_15690, dtype="float32") /* ty=Tensor[(14, 14, 1), float32] */;
  %1433 = asin(%1432) /* ty=Tensor[(14, 14, 1), float32] */;
  (%1433,)
}

def @func_8647() -> Tensor[(15, 8, 3), float64] {
  @func_4869() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_6027() -> (Tensor[(273), float64], Tensor[(15, 8, 3), float32]) {
  %1439 = fn () -> (Tensor[(273), float64], Tensor[(15, 8, 3), float32]) {
    %1434 = @func_5857() /* ty=(Tensor[(4), float32], Tensor[(273), float64], Tensor[(273), float64], Tensor[(15, 8, 3), float64]) */;
    %1435 = %1434.2;
    %1436 = cast(%1435, dtype="float64") /* ty=Tensor[(273), float64] */;
    %1437 = log(%1436) /* ty=Tensor[(273), float64] */;
    %1438 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1437, %1438)
  };
  %1439() /* ty=(Tensor[(273), float64], Tensor[(15, 8, 3), float32]) */
}

def @func_5532() -> (Tensor[(15, 8, 3), float32],) {
  %1440 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
  (%1440,)
}

def @func_16144(%var_16142: Tensor[(7, 9, 12), float32]) -> (Tensor[(7, 9, 12), float32], Tensor[(4), float32]) {
  @func_16141(%var_16142) /* ty=(Tensor[(7, 9, 12), float32], Tensor[(4), float32]) */
}

def @func_3792() -> (Tensor[(15, 8, 3), float32],) {
  %1441 = cast(meta[relay.Constant][73] /* ty=Tensor[(15, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1442 = acos(%1441) /* ty=Tensor[(15, 8, 3), float32] */;
  (%1442,)
}

def @func_15400() -> (Tensor[(15, 8, 3), float32],) {
  %1444 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %1443 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1443,)
  };
  %1444() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_10161() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1445 = @func_7835() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1446 = %1445.0;
  %1447 = @func_9507() /* ty=Tensor[(4), float32] */;
  (%1446, %1447)
}

def @func_10163() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  @func_10161() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */
}

def @func_15931() -> (Tensor[(4), float32],) {
  %1448 = @func_15744() /* ty=(Tensor[(4), float32],) */;
  %1449 = %1448.0;
  (%1449,)
}

def @func_13040() -> Tensor[(15, 8, 3), float32] {
  %1450 = @func_12271() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */;
  %1450.1
}

def @func_17176(%var_17175: Tensor[(80), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), float64], Tensor[(80), float32], Tensor[(15, 8, 3), float32]) {
  %1458 = fn (%var_17149: Tensor[(80), float32]) -> (Tensor[(15, 8, 3), float64], Tensor[(273), float64], Tensor[(80), float32], Tensor[(15, 8, 3), float32]) {
    %1451 = @func_10288() /* ty=(Tensor[(15, 8, 3), float64],) */;
    %1452 = cast(%var_17149, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1453 = reshape(%1452, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
    %1454 = @func_4400(%1453) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %1455 = %1451.0;
    %1456 = %1454.3;
    %1457 = @func_15184() /* ty=Tensor[(15, 8, 3), float32] */;
    (%1455, %1456, %var_17149, %1457)
  };
  %1458(%var_17175) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(273), float64], Tensor[(80), float32], Tensor[(15, 8, 3), float32]) */
}

def @func_17754() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1459 = @func_13889() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */;
  %1460 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %1461 = %1459.1;
  %1462 = %1460.0;
  (%1461, %1462)
}

def @func_4951(%var_4907: Tensor[(15, 8, 3), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %1463 = @func_4869() /* ty=Tensor[(15, 8, 3), float64] */;
  %1464 = cast(%var_4907, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1465 = shape_of(%1463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1466 = cast(%1463, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
  %1467 = dyn.reshape(%1464, %1465, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1468 = cast(meta[relay.Constant][74] /* ty=Tensor[(15, 8, 3), float64] */, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %1469 = shape_of(%var_4907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1470 = cast(%var_4907, dtype="int8") /* ty=Tensor[(15, 8, 3), int8] */;
  %1471 = dyn.reshape(%1468, %1469, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1472 = power(%1466, %1467) /* ty=Tensor[(15, 8, 3), float32] */;
  %1473 = add(%1470, %1471) /* ty=Tensor[(15, 8, 3), int8] */;
  (%1472, %1473)
}

def @func_14800() -> Tensor[(15, 8, 3), float32] {
  @func_5034() /* ty=Tensor[(15, 8, 3), float32] */
}

def @func_7400(%var_7397: Tensor[(2340), bool], %var_7398: Tensor[(273), float64]) -> (Tensor[(15, 8, 3), float32], Tensor[(7, 3, 13), float32], Tensor[(2340), bool], Tensor[(273), float64]) {
  %1474 = @func_4726() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1475 = cast(%var_7397, dtype="bool") /* ty=Tensor[(2340), bool] */;
  %1476 = cast(%var_7398, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1477 = reshape(%1475, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
  %1478 = reshape(%1476, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1479 = @func_679(%1477, %1478) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
  %1480 = %1474.0;
  %1481 = %1479.1;
  (%1480, %1481, %var_7397, %var_7398)
}

def @func_10259() -> (Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) {
  @func_10257() /* ty=(Tensor[(144), float32], Tensor[(4, 144), bool], Tensor[(160), uint16]) */
}

def @func_15018() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  @func_15016() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */
}

def @func_9304(%var_9302: Tensor[(400), uint16]) -> (Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) {
  @func_9301(%var_9302) /* ty=(Tensor[(273), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */
}

def @func_16105() -> (Tensor[(15, 8, 3), int8],) {
  @func_16103() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_4400(%var_4379: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(15, 8, 3), float64], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) {
  %1482 = cast(%var_4379, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %1483 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %1484 = cast(meta[relay.Constant][75] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1485 = reshape(%1484, newshape=[7, 3, 13]) /* ty=Tensor[(7, 3, 13), float64] */;
  %1486 = @func_94(%1485) /* ty=(Tensor[(7, 3, 13), float32],) */;
  %1487 = cosh(%1482) /* ty=Tensor[(4, 2, 10), float32] */;
  %1488 = %1483.1;
  %1489 = %1486.0;
  (%1487, %1488, %1489, meta[relay.Constant][75] /* ty=Tensor[(273), float64] */)
}

def @func_4871() -> Tensor[(15, 8, 3), float64] {
  @func_4869() /* ty=Tensor[(15, 8, 3), float64] */
}

def @func_13667() -> Tensor[(15, 8, 3), float32] {
  %1490 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1490.0
}

def @func_7278() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  %1491 = @func_4523() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1492 = %1491.0;
  %1493 = @func_7186() /* ty=Tensor[(15, 8, 3), float64] */;
  (%1492, %1493)
}

def @func_11678() -> (Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) {
  @func_11676() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */
}

def @func_19809(%var_19807: Tensor[(144), float32], %var_19808: Tensor[(13, 21), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(13, 21), float32]) {
  %1511 = fn (%var_19790: Tensor[(144), float32], %var_19794: Tensor[(13, 21), float64]) -> (Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(13, 21), float32]) {
    %1494 = @func_7278() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */;
    %1495 = cast(%var_19790, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1496 = cast(meta[relay.Constant][76] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %1497 = reshape(%1495, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
    %1498 = reshape(%1496, newshape=[400]) /* ty=Tensor[(400), uint16] */;
    %1499 = @func_9537(%1497, %1498) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(160, 1), uint16], Tensor[(2, 72), float32], Tensor[(15, 8, 3), float32], Tensor[(400), uint16]) */;
    %1500 = cast(%var_19794, dtype="float64") /* ty=Tensor[(13, 21), float64] */;
    %1501 = reshape(%1500, newshape=[39, 7]) /* ty=Tensor[(39, 7), float64] */;
    %1502 = @func_7914(%1501) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(2340), bool], Tensor[(39, 7), bool]) */;
    %1503 = cast(meta[relay.Constant][77] /* ty=Tensor[(13, 21), float64] */, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
    %1504 = shape_of(%var_19794, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1505 = cast(%var_19794, dtype="float32") /* ty=Tensor[(13, 21), float32] */;
    %1506 = dyn.reshape(%1503, %1504, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1507 = %1494.1;
    %1508 = %1499.0;
    %1509 = %1502.0;
    %1510 = add(%1505, %1506) /* ty=Tensor[(13, 21), float32] */;
    (%1507, %1508, %var_19790, meta[relay.Constant][76] /* ty=Tensor[(400), uint16] */, %1509, %1510)
  };
  %1511(%var_19807, %var_19808) /* ty=(Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32], Tensor[(144), float32], Tensor[(400), uint16], Tensor[(15, 8, 3), float32], Tensor[(13, 21), float32]) */
}

def @func_10032() -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8]) {
  %1516 = fn () -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8]) {
    %1512 = @func_4369() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(144), float32]) */;
    %1513 = @func_8802() /* ty=(Tensor[(15, 8, 3), int8],) */;
    %1514 = %1512.1;
    %1515 = %1513.0;
    (%1514, %1515)
  };
  %1516() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_4150() -> (Tensor[(15, 8, 3), float32],) {
  %1519 = fn () -> (Tensor[(15, 8, 3), float32],) {
    %1517 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
    %1518 = %1517.0;
    (%1518,)
  };
  %1519() /* ty=(Tensor[(15, 8, 3), float32],) */
}

def @func_10410() -> (Tensor[(4), float32], Tensor[(4), float32]) {
  %1520 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %1521 = @func_5387() /* ty=(Tensor[(4), float32],) */;
  %1522 = %1520.0;
  %1523 = %1521.0;
  (%1522, %1523)
}

def @func_17365() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) {
  @func_17363() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64]) */
}

def @func_10940() -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
  %1528 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(4), float32]) {
    %1524 = @func_10812() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1525 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
    %1526 = %1524.0;
    %1527 = %1525.0;
    (%1526, %1527)
  };
  %1528() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(4), float32]) */
}

def @func_9254() -> Tensor[(273), float64] {
  @func_9252() /* ty=Tensor[(273), float64] */
}

def @func_4869() -> Tensor[(15, 8, 3), float64] {
  %1529 = @func_4000() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float64]) */;
  %1529.1
}

def @func_12756() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
  %1543 = fn () -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) {
    %1530 = @func_12408() /* ty=(Tensor[(15, 8, 3), float32],) */;
    %1531 = cast(meta[relay.Constant][78] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1532 = cast(meta[relay.Constant][78] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1533 = reshape(%1531, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %1534 = reshape(%1532, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), int32] */;
    %1535 = @func_7743(%1533, %1534) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(15, 8, 3), float64]) */;
    %1536 = @func_10031() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8]) */;
    %1537 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
    %1538 = %1530.0;
    %1539 = %1535.1;
    %1540 = %1536.1;
    %1541 = @func_8829() /* ty=Tensor[(15, 8, 3), float32] */;
    %1542 = %1537.0;
    (%1538, %1539, meta[relay.Constant][78] /* ty=Tensor[(630), int32] */, %1540, %1541, %1542)
  };
  %1543() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), int8]) */
}

def @func_8270(%var_8265: Tensor[(192), float64], %var_8267: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(10, 5, 12), bool], Tensor[(192), float64], Tensor[(273), float64], Tensor[(144), float32]) {
  %1544 = @func_4091() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1545 = @func_7046() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32]) */;
  %1546 = %1545.1;
  %1547 = cast(%1546, dtype="float64") /* ty=Tensor[(15, 8, 3), float64] */;
  %1548 = cast(%var_8265, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1549 = cast(meta[relay.Constant][79] /* ty=Tensor[(273), float64] */, dtype="float64") /* ty=Tensor[(273), float64] */;
  %1550 = cast(%var_8267, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1551 = reshape(%1548, newshape=[16, 3, 4]) /* ty=Tensor[(16, 3, 4), float64] */;
  %1552 = reshape(%1549, newshape=[273]) /* ty=Tensor[(273), float64] */;
  %1553 = reshape(%1550, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1554 = @func_5795(%1551, %1552, %1553) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) */;
  %1555 = %1544.0;
  %1556 = sigmoid(%1547) /* ty=Tensor[(15, 8, 3), float64] */;
  %1557 = %1554.8;
  (%1555, %1556, %1557, %var_8265, meta[relay.Constant][79] /* ty=Tensor[(273), float64] */, %var_8267)
}

def @func_9145() -> (Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) {
  @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */
}

def @func_9898() -> (Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) {
  %1564 = fn () -> (Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) {
    %1558 = cast(meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %1559 = cast(meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */, dtype="uint16") /* ty=Tensor[(400), uint16] */;
    %1560 = reshape(%1558, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
    %1561 = reshape(%1559, newshape=[10, 4, 10]) /* ty=Tensor[(10, 4, 10), uint16] */;
    %1562 = @func_7186() /* ty=Tensor[(15, 8, 3), float64] */;
    %1563 = @func_8999(%1560, %1561) /* ty=Tensor[(10, 4, 10), float32] */;
    (%1562, %1563, meta[relay.Constant][80] /* ty=Tensor[(400), uint16] */)
  };
  %1564() /* ty=(Tensor[(15, 8, 3), float64], Tensor[(10, 4, 10), float32], Tensor[(400), uint16]) */
}

def @func_13766() -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) {
  %1573 = fn () -> (Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) {
    %1565 = @func_9143() /* ty=(Tensor[(15, 8, 3), uint64], Tensor[(4), float32]) */;
    %1566 = %1565.1;
    %1567 = cast(%1566, dtype="float32") /* ty=Tensor[(4), float32] */;
    %1568 = cast(meta[relay.Constant][81] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1569 = reshape(%1567, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %1570 = reshape(%1568, newshape=[4, 36]) /* ty=Tensor[(4, 36), float32] */;
    %1571 = @func_8464(%1569, %1570) /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(4), float32], Tensor[(4, 36), float32]) */;
    %1572 = %1571.0;
    (%1566, %1572, meta[relay.Constant][81] /* ty=Tensor[(144), float32] */)
  };
  %1573() /* ty=(Tensor[(4), float32], Tensor[(15, 8, 3), int8], Tensor[(144), float32]) */
}

def @func_5799(%var_5796: Tensor[(16, 3, 4), float64], %var_5797: Tensor[(273), float64], %var_5798: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) {
  %1599 = fn (%var_5733: Tensor[(16, 3, 4), float64], %var_5758: Tensor[(273), float64], %var_5783: Tensor[(144), float32]) -> (Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) {
    %1574 = cast(meta[relay.Constant][82] /* ty=Tensor[(2340), bool] */, dtype="bool") /* ty=Tensor[(2340), bool] */;
    %1575 = cast(%var_5758, dtype="float64") /* ty=Tensor[(273), float64] */;
    %1576 = reshape(%1574, newshape=[12, 13, 15]) /* ty=Tensor[(12, 13, 15), bool] */;
    %1577 = reshape(%1575, newshape=[273]) /* ty=Tensor[(273), float64] */;
    %1578 = @func_679(%1576, %1577) /* ty=(Tensor[(12, 13, 15), bool], Tensor[(7, 3, 13), float32], Tensor[(273), float64]) */;
    %1579 = cast(%var_5733, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %1580 = acosh(%1579) /* ty=Tensor[(16, 3, 4), float64] */;
    %1581 = cast(%1580, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %1582 = cast(meta[relay.Constant][83] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %1583 = cast(%var_5783, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1584 = reshape(%1582, newshape=[4]) /* ty=Tensor[(4), float32] */;
    %1585 = reshape(%1583, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %1586 = @func_5002(%1584, %1585) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(13, 21), bool], Tensor[(4), float32], Tensor[(144), float32], Tensor[(7, 3, 13), float32], Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float32], Tensor[(144), float32]) */;
    %1587 = cast(meta[relay.Constant][84] /* ty=Tensor[(15, 4), bool] */, dtype="bool") /* ty=Tensor[(15, 4), bool] */;
    %1588 = cast(meta[relay.Constant][85] /* ty=Tensor[(600), bool] */, dtype="bool") /* ty=Tensor[(600), bool] */;
    %1589 = reshape(%1587, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), bool] */;
    %1590 = reshape(%1588, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), bool] */;
    %1591 = @func_5034() /* ty=Tensor[(15, 8, 3), float32] */;
    %1592 = cast(%1591, dtype="float32") /* ty=Tensor[(15, 8, 3), float32] */;
    %1593 = reshape(%1592, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), float32] */;
    %1594 = %1578.2;
    %1595 = log10(%1581) /* ty=Tensor[(16, 3, 4), float32] */;
    %1596 = %1586.3;
    %1597 = @func_5556(%1589, %1590) /* ty=Tensor[(10, 5, 12), bool] */;
    %1598 = @func_4761(%1593) /* ty=Tensor[(15, 8, 3), uint64] */;
    (%1591, %1594, meta[relay.Constant][82] /* ty=Tensor[(2340), bool] */, %var_5758, %1595, %1596, meta[relay.Constant][83] /* ty=Tensor[(4), float32] */, %var_5783, %1597, meta[relay.Constant][84] /* ty=Tensor[(15, 4), bool] */, meta[relay.Constant][85] /* ty=Tensor[(600), bool] */, %1598)
  };
  %1599(%var_5796, %var_5797, %var_5798) /* ty=(Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(2340), bool], Tensor[(273), float64], Tensor[(16, 3, 4), float32], Tensor[(144), float32], Tensor[(4), float32], Tensor[(144), float32], Tensor[(10, 5, 12), bool], Tensor[(15, 4), bool], Tensor[(600), bool], Tensor[(15, 8, 3), uint64]) */
}

def @func_16054() -> (Tensor[(4), float32], Tensor[(7, 3, 13), float32], Tensor[(13, 7, 6), float64], Tensor[(15, 8, 3), float32]) {
  %1600 = @func_6924() /* ty=(Tensor[(4), float32], Tensor[(273), float64]) */;
  %1601 = @func_6979() /* ty=(Tensor[(144), float32], Tensor[(15, 8, 3), float32], Tensor[(48, 2), float64], Tensor[(273), float64], Tensor[(7, 3, 13), float32], Tensor[(4), float32], Tensor[(96), uint64]) */;
  %1602 = @func_14586() /* ty=(Tensor[(13, 7, 6), float64],) */;
  %1603 = @func_15260() /* ty=(Tensor[(15, 8, 3), float32],) */;
  %1604 = %1600.0;
  %1605 = %1601.4;
  %1606 = %1602.0;
  %1607 = %1603.0;
  (%1604, %1605, %1606, %1607)
}

def @func_7349() -> Tensor[(15, 8, 3), float32] {
  %1608 = @func_4230() /* ty=(Tensor[(15, 8, 3), int8], Tensor[(15, 8, 3), float32]) */;
  %1608.1
}

def @func_17028() -> (Tensor[(15, 8, 3), int8],) {
  %1610 = fn () -> (Tensor[(15, 8, 3), int8],) {
    %1609 = @func_4695() /* ty=Tensor[(15, 8, 3), int8] */;
    (%1609,)
  };
  %1610() /* ty=(Tensor[(15, 8, 3), int8],) */
}

def @func_17689() -> (Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) {
  @func_17687() /* ty=(Tensor[(15, 8, 3), float32], Tensor[(15, 8, 3), float64], Tensor[(630), int32], Tensor[(15, 8, 3), float32], Tensor[(273), float64], Tensor[(15, 8, 3), float64], Tensor[(15, 8, 3), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen773/build/output.py", line 5625, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:10:09] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


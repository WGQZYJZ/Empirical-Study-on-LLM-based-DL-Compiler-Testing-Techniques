==========mod==========
#[version = "0.0.5"]
def @func_4738() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %0 = @func_3526() /* ty=Tensor[(468), float32] */;
  %1 = @func_3437() /* ty=Tensor[(468), float32] */;
  (%0, %1)
}

def @func_14104(%var_14100: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(12, 13, 3), bool], Tensor[(112), float64], Tensor[(468), float32]) {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %4 = cast(%var_14100, dtype="float32") /* ty=Tensor[(468), float32] */;
  %5 = reshape(%2, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %6 = reshape(%3, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %7 = reshape(%4, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %8 = @func_842(%5, %6, %7) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %9 = @func_8445() /* ty=Tensor[(288), float32] */;
  %10 = %8.1;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(112), float64] */, %var_14100)
}

def @func_14459(%var_14456: Tensor[(112), float64]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
  %11 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %12 = cast(%var_14456, dtype="float64") /* ty=Tensor[(112), float64] */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %15 = reshape(%12, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %16 = reshape(%13, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %17 = reshape(%14, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %18 = @func_4519(%15, %16, %17) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %19 = %11.0;
  %20 = %18.0;
  (%19, %20, %var_14456, meta[relay.Constant][1] /* ty=Tensor[(468), bool] */)
}

def @func_7224() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %21 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %22 = @func_5711() /* ty=Tensor[(468), float32] */;
  %23 = %21.1;
  (%22, %23)
}

def @func_7014() -> (Tensor[(468), float32],) {
  %24 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %25 = %24.1;
  (%25,)
}

def @func_5626() -> Tensor[(468), float32] {
  %26 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %26.0
}

def @func_5852() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) {
  %27 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %28 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %30 = reshape(%29, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %31 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %33 = %28.1;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(468), float32] */;
  %35 = reshape(%32, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %36 = reshape(%34, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %37 = @func_2037(%35, %36) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %38 = %27.0;
  %39 = @func_3437() /* ty=Tensor[(468), float32] */;
  %40 = @func_3766(%30) /* ty=Tensor[(13, 8, 8), float32] */;
  %41 = %31.1;
  %42 = %37.1;
  (%38, %33, %39, %40, meta[relay.Constant][2] /* ty=Tensor[(832), float32] */, %41, %42, meta[relay.Constant][3] /* ty=Tensor[(288), float32] */)
}

def @func_11195() -> (Tensor[(468), float32],) {
  %43 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %44 = %43.0;
  (%44,)
}

def @func_13194() -> Tensor[(468), float32] {
  %45 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %45.0
}

def @func_842(%var_815: Tensor[(4, 4, 7), float64], %var_816: Tensor[(4, 4, 7), float64], %var_830: Tensor[(1, 468), float32]) -> (Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %46 = cast(%var_816, dtype="bool") /* ty=Tensor[(4, 4, 7), bool] */;
  %47 = shape_of(%var_815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%var_815, dtype="bool") /* ty=Tensor[(4, 4, 7), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %50 = cast(%var_830, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %51 = cast(%var_830, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %52 = reshape(%50, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %53 = reshape(%51, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %54 = @func_7(%52, %53) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %57 = reshape(%55, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %58 = reshape(%56, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %59 = not_equal(%48, %49) /* ty=Tensor[(4, 4, 7), bool] */;
  %60 = %54.0;
  %61 = @func_371(%57, %58) /* ty=Tensor[(13, 15, 15), bool] */;
  (%59, %60, %var_830, %61, meta[relay.Constant][4] /* ty=Tensor[(2925), bool] */)
}

def @func_4008(%var_3993: Tensor[(12, 9, 10), int64], %var_3994: Tensor[(12, 9, 10), int64]) -> (Tensor[(12, 9, 10), int64], Tensor[(468), float32]) {
  %62 = cast(%var_3994, dtype="int64") /* ty=Tensor[(12, 9, 10), int64] */;
  %63 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_3993, dtype="int64") /* ty=Tensor[(12, 9, 10), int64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %66 = bitwise_xor(%64, %65) /* ty=Tensor[(12, 9, 10), int64] */;
  %67 = @func_3437() /* ty=Tensor[(468), float32] */;
  (%66, %67)
}

def @func_14334() -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(6, 78), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 78), float32] */, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %70 = reshape(%68, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %71 = reshape(%69, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %72 = @func_2037(%70, %71) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %73 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %74 = %73.2;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %76 = rsqrt(%75) /* ty=Tensor[(4, 28), float64] */;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %78 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %79 = %72.2;
  %80 = sqrt(%77) /* ty=Tensor[(4, 28), float64] */;
  %81 = %78.3;
  %82 = @func_13194() /* ty=Tensor[(468), float32] */;
  %83 = @func_5501() /* ty=Tensor[(468), float32] */;
  (%79, meta[relay.Constant][5] /* ty=Tensor[(288), float32] */, meta[relay.Constant][6] /* ty=Tensor[(6, 78), float32] */, %80, %81, %82, %83)
}

def @func_12037() -> (Tensor[(4, 28), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %84 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
  %87 = cast(%85, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %88 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %89 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %90 = @func_9076() /* ty=Tensor[(468), float32] */;
  %91 = cast(%90, dtype="float32") /* ty=Tensor[(468), float32] */;
  %92 = reshape(%91, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %93 = @func_3332(%92) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %94 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %95 = atan(%86) /* ty=Tensor[(4, 28), float32] */;
  %96 = acosh(%87) /* ty=Tensor[(4, 28), float64] */;
  %97 = @func_4108() /* ty=Tensor[(468), float32] */;
  %98 = %88.0;
  %99 = %89.0;
  %100 = %93.4;
  %101 = @func_7339() /* ty=Tensor[(468), float32] */;
  %102 = @func_10662() /* ty=Tensor[(288), float32] */;
  %103 = %94.0;
  (%95, %96, %97, %90, %98, %99, %100, %101, %102, %103)
}

def @func_7107() -> (Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) {
  %104 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %105 = %104.1;
  %106 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %107 = sqrt(%106) /* ty=Tensor[(15, 8, 1), float64] */;
  %108 = cast(%105, dtype="bool") /* ty=Tensor[(468), bool] */;
  %109 = cast(%107, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %110 = @func_4752() /* ty=(Tensor[(288), float32],) */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %112 = acos(%111) /* ty=Tensor[(15, 8, 1), float64] */;
  %113 = cast(%112, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %114 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%107, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %117 = power(%115, %116) /* ty=Tensor[(15, 8, ?), float32] */;
  %118 = cast(%107, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="float32") /* ty=Tensor[(15, 8, ?), float32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %122 = minimum(%120, %121) /* ty=Tensor[(15, 8, ?), float32] */;
  %123 = cast(%105, dtype="float64") /* ty=Tensor[(468), float64] */;
  %124 = cast(%122, dtype="float64") /* ty=Tensor[(15, 8, ?), float64] */;
  %125 = less(%108, %109) /* ty=Tensor[(15, 8, 468), bool] */;
  %126 = %110.0;
  %127 = add(%123, %124) /* ty=Tensor[(15, 8, 468), float64] */;
  %128 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%125, %126, %127, %128)
}

def @func_11158() -> Tensor[(288), float32] {
  %129 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %129.2
}

def @func_7542(%var_7433: Tensor[(3, 4), uint32]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) {
  %130 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
  %131 = @func_6348() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) */;
  %132 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %133 = cast(meta[relay.Constant][9] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %134 = reshape(%132, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %135 = reshape(%133, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %136 = @func_4008(%134, %135) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %137 = cast(meta[relay.Constant][10] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %139 = reshape(%137, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %140 = reshape(%138, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %141 = @func_371(%139, %140) /* ty=Tensor[(13, 15, 15), bool] */;
  %142 = cast(%141, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
  %143 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(2925), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %144 = cast(meta[relay.Constant][10] /* ty=Tensor[(2925), bool] */, dtype="uint8") /* ty=Tensor[(2925), uint8] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %146 = cast(meta[relay.Constant][8] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %147 = cast(%var_7433, dtype="uint32") /* ty=Tensor[(3, 4), uint32] */;
  %148 = reshape(%146, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
  %149 = reshape(%147, newshape=[12]) /* ty=Tensor[(12), uint32] */;
  %150 = @func_5117(%148, %149) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) */;
  %151 = %150.9;
  %152 = cast(%151, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %153 = acos(%152) /* ty=Tensor[(4, 28), float64] */;
  %154 = cast(%151, dtype="uint8") /* ty=Tensor[(4, 28), uint8] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %156 = cast(%153, dtype="uint8") /* ty=Tensor[(4, 28), uint8] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %158 = cast(%153, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %159 = %130.2;
  %160 = %131.0;
  %161 = %136.0;
  %162 = @func_5989() /* ty=Tensor[(468), float32] */;
  %163 = bitwise_and(%144, %145) /* ty=Tensor[(2925), uint8] */;
  %164 = bitwise_or(%156, %157) /* ty=Tensor[(4, 28), uint8] */;
  %165 = @func_3694() /* ty=Tensor[(468), float64] */;
  %166 = @func_3437() /* ty=Tensor[(468), float32] */;
  %167 = sin(%158) /* ty=Tensor[(4, 28), float64] */;
  (%159, meta[relay.Constant][8] /* ty=Tensor[(112), float64] */, %var_7433, %160, %161, meta[relay.Constant][9] /* ty=Tensor[(1080), int64] */, %162, %163, %164, %165, %166, %167)
}

def @func_10190(%var_10155: Tensor[(315), float64], %var_10174: Tensor[(5, 585), bool], %var_10180: uint64, %var_10181: Tensor[(320, 4), uint64], %var_10182: Tensor[(90, 12), int64]) -> (Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) {
  %168 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %169 = cast(%var_10155, dtype="float64") /* ty=Tensor[(315), float64] */;
  %170 = cast(%var_10155, dtype="float64") /* ty=Tensor[(315), float64] */;
  %171 = reshape(%169, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %172 = reshape(%170, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %173 = @func_568(%171, %172) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %174 = %173.2;
  %175 = cast(%var_10174, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(2), int32] */;
  %177 = cast(%174, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %179 = %168.3;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(468), float32] */;
  %181 = cast(%var_10180, dtype="uint64") /* ty=uint64 */;
  %182 = cast(%var_10181, dtype="uint64") /* ty=Tensor[(320, 4), uint64] */;
  %183 = cast(%var_10182, dtype="int64") /* ty=Tensor[(90, 12), int64] */;
  %184 = reshape(%180, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %185 = reshape(%181, newshape=[]) /* ty=uint64 */;
  %186 = reshape(%182, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
  %187 = reshape(%183, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %188 = @func_8835(%184, %185, %186, %187) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %189 = greater(%177, %178) /* ty=Tensor[(5, 585), bool] */;
  %190 = %188.0;
  (%179, %var_10155, %189, %190, %var_10180, %var_10181, %var_10182)
}

def @func_6847() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  %191 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %192 = %191.3;
  %193 = @func_4250() /* ty=Tensor[(468), float32] */;
  (%192, %193)
}

def @func_12051() -> Tensor[(288), float32] {
  @func_4464() /* ty=Tensor[(288), float32] */
}

def @func_13534() -> (Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) {
  %194 = cast(-1.80437f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %195 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 1), float32] */;
  %196 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 3, 1), float32] */, dtype="uint64") /* ty=Tensor[(3, 3, 1), uint64] */;
  %197 = cast(-1.80437f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
  %198 = floor_mod(%194, %195) /* ty=Tensor[(3, 3, 1), float32] */;
  %199 = multiply(%196, %197) /* ty=Tensor[(3, 3, 1), uint64] */;
  (%198, %199)
}

def @func_9076() -> Tensor[(468), float32] {
  @func_3437() /* ty=Tensor[(468), float32] */
}

def @func_9823() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %200 = @func_4917() /* ty=(Tensor[(468), float32],) */;
  %201 = @func_9504() /* ty=(Tensor[(468), float32],) */;
  %202 = @func_5989() /* ty=Tensor[(468), float32] */;
  %203 = %200.0;
  %204 = %201.0;
  (%202, %203, %204)
}

def @func_4519(%var_4493: Tensor[(112), float64], %var_4508: Tensor[(12, 13, 3), bool], %var_4515: Tensor[(12, 13, 3), bool]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) {
  %205 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %206 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %207 = cast(%var_4493, dtype="float64") /* ty=Tensor[(112), float64] */;
  %208 = cast(%var_4493, dtype="float64") /* ty=Tensor[(112), float64] */;
  %209 = %205.0;
  %210 = cast(%209, dtype="float32") /* ty=Tensor[(468), float32] */;
  %211 = reshape(%207, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %212 = reshape(%208, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %213 = reshape(%210, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %214 = @func_842(%211, %212, %213) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %215 = %214.1;
  %216 = cast(%var_4508, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = cast(%var_4515, dtype="uint64") /* ty=Tensor[(12, 13, 3), uint64] */;
  %221 = shape_of(%var_4508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_4508, dtype="uint64") /* ty=Tensor[(12, 13, 3), uint64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %224 = %206.0;
  %225 = greater_equal(%218, %219) /* ty=Tensor[(12, 13, 3), bool] */;
  %226 = bitwise_or(%222, %223) /* ty=Tensor[(12, 13, 3), uint64] */;
  (%209, %var_4493, %224, %225, %226)
}

def @func_4088() -> (Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) {
  %227 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %228 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %229 = reshape(%228, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %230 = @func_2623(%229) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %231 = %227.2;
  %232 = %230.0;
  (%231, %232, meta[relay.Constant][12] /* ty=Tensor[(288), float32] */)
}

def @func_9262(%var_9245: Tensor[(11, 2, 16), bool], %var_9258: Tensor[(55, 7), float64]) -> (Tensor[(11, 2, 16), bool], Tensor[(7, 11, 5), bool], Tensor[(55, 7), float64]) {
  %233 = cast(%var_9245, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %234 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 2, 16), bool] */, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = cast(%var_9258, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
  %238 = reshape(%237, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), float64] */;
  %239 = @func_8671(%238) /* ty=(Tensor[(7, 11, 5), bool],) */;
  %240 = logical_or(%235, %236) /* ty=Tensor[(11, 2, 16), bool] */;
  %241 = %239.0;
  (%240, %241, %var_9258)
}

def @func_9707() -> (Tensor[(18, 60), float64], Tensor[(315), float64]) {
  %242 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %243 = %242.4;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(18, 60), float32] */;
  %245 = sqrt(%244) /* ty=Tensor[(18, 60), float32] */;
  %246 = cast(%245, dtype="float64") /* ty=Tensor[(18, 60), float64] */;
  %247 = @func_8540() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) */;
  %248 = cosh(%246) /* ty=Tensor[(18, 60), float64] */;
  %249 = %247.2;
  (%248, %249)
}

def @func_7966() -> (Tensor[(7, 11, 5), float64],) {
  %250 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  %251 = sinh(%250) /* ty=Tensor[(7, 11, 5), float64] */;
  (%251,)
}

def @func_5170() -> Tensor[(468), float64] {
  %252 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %253 = %252.0;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(468), float64] */;
  tan(%254) /* ty=Tensor[(468), float64] */
}

def @func_13401(%var_13356: uint8) -> (Tensor[(11, 2, 10), float32], Tensor[(9, 4, 468), float64], Tensor[(11, 2, 10), float32]) {
  %255 = @func_9983() /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) */;
  %256 = cast(%var_13356, dtype="uint8") /* ty=uint8 */;
  %257 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 4, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
  %258 = logical_xor(%256, %257) /* ty=Tensor[(9, 4, 1), uint8] */;
  %259 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %260 = %259.0;
  %261 = cast(%260, dtype="uint8") /* ty=Tensor[(468), uint8] */;
  %262 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 4, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
  %263 = maximum(%261, %262) /* ty=Tensor[(9, 4, 468), uint8] */;
  %264 = cast(%258, dtype="uint16") /* ty=Tensor[(9, 4, 1), uint16] */;
  %265 = cast(%263, dtype="uint16") /* ty=Tensor[(9, 4, 468), uint16] */;
  %266 = multiply(%264, %265) /* ty=Tensor[(9, 4, 468), uint16] */;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(9, 4, 468), float64] */;
  %268 = %255.2;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %270 = cast(%268, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %271 = reshape(%269, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
  %272 = reshape(%270, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
  %273 = @func_5914(%271, %272) /* ty=(Tensor[(11, 2, 10), float32],) */;
  %274 = erf(%267) /* ty=Tensor[(9, 4, 468), float64] */;
  %275 = %273.0;
  (%268, %274, %275)
}

def @func_3694() -> Tensor[(468), float64] {
  %276 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %277 = %276.0;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(468), float32] */;
  %279 = sqrt(%278) /* ty=Tensor[(468), float32] */;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(468), float64] */;
  asin(%280) /* ty=Tensor[(468), float64] */
}

def @func_5779(%var_5770: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) {
  %281 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(468), float32] */;
  %284 = reshape(%283, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %285 = @func_4161(%284) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %286 = cast(%var_5770, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %287 = reshape(%286, newshape=[1, 288]) /* ty=Tensor[(1, 288), float32] */;
  %288 = @func_3385(%287) /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) */;
  %289 = %285.2;
  %290 = %288.1;
  (%282, %289, %290, %var_5770)
}

def @func_5117(%var_5030: Tensor[(4, 28), float64], %var_5037: Tensor[(12), uint32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) {
  %291 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %292 = cast(meta[relay.Constant][17] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %293 = cast(%var_5037, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %294 = reshape(%292, newshape=[]) /* ty=uint32 */;
  %295 = reshape(%293, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), uint32] */;
  %296 = @func_4346(%294, %295) /* ty=(Tensor[(3, 1, 4), float64],) */;
  %297 = cast(meta[relay.Constant][16] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %298 = reshape(%297, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %299 = @func_4161(%298) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %300 = %299.1;
  %301 = cast(%var_5030, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %303 = cast(%300, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %305 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %306 = @func_4773() /* ty=Tensor[(468), float32] */;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(468), float32] */;
  %308 = reshape(%307, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %309 = @func_4161(%308) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %310 = cast(%var_5030, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %311 = shape_of(%300, dtype="int32") /* ty=Tensor[(2), int32] */;
  %312 = cast(%300, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %314 = greater(%312, %313) /* ty=Tensor[(4, 28), bool] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %316 = log(%315) /* ty=Tensor[(4, 28), float64] */;
  %317 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 28), float64] */, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(2), int32] */;
  %319 = cast(%316, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %321 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %322 = cast(%300, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %323 = cast(%306, dtype="float32") /* ty=Tensor[(468), float32] */;
  %324 = reshape(%321, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %325 = reshape(%322, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %326 = reshape(%323, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %327 = @func_842(%324, %325, %326) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %328 = %291.0;
  %329 = %296.0;
  %330 = greater_equal(%303, %304) /* ty=Tensor[(4, 28), bool] */;
  %331 = %305.3;
  %332 = %309.4;
  %333 = equal(%319, %320) /* ty=Tensor[(4, 28), bool] */;
  %334 = %327.0;
  (%328, meta[relay.Constant][16] /* ty=Tensor[(468), float32] */, %329, meta[relay.Constant][17] /* ty=uint32 */, %var_5037, %330, %331, %306, %332, %333, %334)
}

def @func_12666(%var_12625: int32, %var_12626: Tensor[(13, 8, 12), int32], %var_12647: Tensor[(5, 63), float64]) -> (Tensor[(13, 8, 12), int32], Tensor[(468), float32], Tensor[(5, 63), float64]) {
  %335 = cast(%var_12625, dtype="int32") /* ty=int32 */;
  %336 = cast(%var_12626, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
  %337 = cast(%var_12647, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %338 = reshape(%337, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %339 = @func_6237(%338) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) */;
  %340 = logical_xor(%335, %336) /* ty=Tensor[(13, 8, 12), int32] */;
  %341 = %339.2;
  (%340, %341, %var_12647)
}

def @func_5501() -> Tensor[(468), float32] {
  %342 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %342.0
}

def @func_7613() -> Tensor[(468), float32] {
  %343 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %343.1
}

def @func_9983() -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) {
  %344 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %345 = cast(meta[relay.Constant][19] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %346 = cast(meta[relay.Constant][19] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %347 = reshape(%345, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
  %348 = reshape(%346, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
  %349 = @func_5914(%347, %348) /* ty=(Tensor[(11, 2, 10), float32],) */;
  %350 = %344.0;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(288), float32] */;
  %352 = reshape(%351, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %353 = @func_4310(%352) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) */;
  %354 = @func_5170() /* ty=Tensor[(468), float64] */;
  %355 = %349.0;
  %356 = %353.2;
  (%350, %354, %355, meta[relay.Constant][19] /* ty=Tensor[(220), float32] */, %356)
}

def @func_8736() -> (Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) {
  %357 = @func_8175() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8]) */;
  %358 = cast(meta[relay.Constant][20] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %359 = cast(meta[relay.Constant][21] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %360 = cast(meta[relay.Constant][21] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %361 = reshape(%358, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %362 = reshape(%359, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %363 = reshape(%360, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %364 = @func_4519(%361, %362, %363) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %365 = %357.1;
  %366 = %364.4;
  (%365, %366, meta[relay.Constant][20] /* ty=Tensor[(112), float64] */, meta[relay.Constant][21] /* ty=Tensor[(468), bool] */)
}

def @func_13342() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(192), uint32]) {
  %367 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %368 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
  %369 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %370 = cast(meta[relay.Constant][22] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %371 = reshape(%369, newshape=[2, 12, 8]) /* ty=Tensor[(2, 12, 8), uint32] */;
  %372 = reshape(%370, newshape=[2, 12, 8]) /* ty=Tensor[(2, 12, 8), uint32] */;
  %373 = @func_12559(%371, %372) /* ty=(Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) */;
  %374 = %367.1;
  %375 = %368.1;
  %376 = %373.2;
  (%374, %375, %376, meta[relay.Constant][22] /* ty=Tensor[(192), uint32] */)
}

def @func_10078() -> Tensor[(468), float32] {
  %377 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %377.0
}

def @func_14427() -> Tensor[(12, 12, 11), int8] {
  %378 = @func_11090() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %378.0
}

def @func_4450(%var_4432: Tensor[(78, 6), float32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) {
  %379 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %380 = @func_3351() /* ty=(Tensor[(468), float32],) */;
  %381 = %380.0;
  %382 = cast(%381, dtype="float32") /* ty=Tensor[(468), float32] */;
  %383 = reshape(%382, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %384 = @func_3332(%383) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %385 = cast(%381, dtype="float32") /* ty=Tensor[(468), float32] */;
  %386 = reshape(%385, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %387 = @func_3332(%386) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %388 = %387.2;
  %389 = cast(%var_4432, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(2), int32] */;
  %391 = cast(%388, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %393 = %379.1;
  %394 = %384.2;
  %395 = less_equal(%391, %392) /* ty=Tensor[(78, 6), bool] */;
  %396 = @func_3694() /* ty=Tensor[(468), float64] */;
  (%393, %381, %394, %395, %396)
}

def @func_4549() -> (Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) {
  %397 = cast(meta[relay.Constant][23] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %398 = cast(meta[relay.Constant][23] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %399 = reshape(%397, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %400 = reshape(%398, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %401 = @func_4008(%399, %400) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %402 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %403 = @func_4250() /* ty=Tensor[(468), float32] */;
  %404 = %401.0;
  %405 = %402.1;
  (%403, %404, meta[relay.Constant][23] /* ty=Tensor[(1080), int64] */, %405)
}

def @func_13592() -> Tensor[(468), float32] {
  %406 = @func_7014() /* ty=(Tensor[(468), float32],) */;
  %406.0
}

def @func_5989() -> Tensor[(468), float32] {
  %407 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %407.0
}

def @func_7636() -> (Tensor[(12, 12, 11), int8],) {
  %408 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
  %409 = %408.1;
  (%409,)
}

def @func_568(%var_553: Tensor[(3, 7, 15), float64], %var_554: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) {
  %410 = cast(%var_554, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %411 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%var_553, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %414 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 585), bool] */, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %415 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 585), bool] */, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %416 = reshape(%414, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %417 = reshape(%415, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %418 = mod(%412, %413) /* ty=Tensor[(3, 7, 15), float64] */;
  %419 = @func_371(%416, %417) /* ty=Tensor[(13, 15, 15), bool] */;
  (%418, %419, meta[relay.Constant][24] /* ty=Tensor[(5, 585), bool] */)
}

def @func_6513(%var_6437: Tensor[(288), float32]) -> (Tensor[(468), float64], Tensor[(468), float32], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16]) {
  %420 = cast(meta[relay.Constant][25] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %421 = cast(meta[relay.Constant][25] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %422 = reshape(%420, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %423 = reshape(%421, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %424 = @func_4008(%422, %423) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %425 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %426 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
  %427 = reshape(%426, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %428 = @func_3650(%427) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %429 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
  %430 = %425.0;
  %431 = cast(%430, dtype="float32") /* ty=Tensor[(468), float32] */;
  %432 = reshape(%429, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %433 = reshape(%431, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %434 = @func_2037(%432, %433) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %435 = %434.3;
  %436 = cast(%435, dtype="float32") /* ty=Tensor[(468), float32] */;
  %437 = reshape(%436, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %438 = @func_4161(%437) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %439 = cast(meta[relay.Constant][26] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %440 = cast(meta[relay.Constant][26] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %441 = reshape(%439, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %442 = reshape(%440, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %443 = @func_6040(%441, %442) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %444 = @func_5170() /* ty=Tensor[(468), float64] */;
  %445 = %424.1;
  %446 = %428.0;
  %447 = %438.2;
  %448 = %443.1;
  (%444, %445, meta[relay.Constant][25] /* ty=Tensor[(1080), int64] */, %430, %446, %var_6437, %435, %447, %448, meta[relay.Constant][26] /* ty=Tensor[(512), int16] */)
}

def @func_3859() -> (Tensor[(468), float32],) {
  %449 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %450 = %449.0;
  (%450,)
}

def @func_14538() -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32]) {
  %451 = @func_11090() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %452 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %453 = %451.0;
  %454 = %452.0;
  (%453, %454)
}

def @func_13347() -> (Tensor[(468), float32],) {
  %455 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %456 = %455.0;
  (%456,)
}

def @func_6643() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) {
  %457 = @func_4773() /* ty=Tensor[(468), float32] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(468), float32] */;
  %459 = reshape(%458, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %460 = @func_4161(%459) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %461 = %460.1;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %463 = cast(%457, dtype="bool") /* ty=Tensor[(468), bool] */;
  %464 = cast(%457, dtype="bool") /* ty=Tensor[(468), bool] */;
  %465 = reshape(%462, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %466 = reshape(%463, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %467 = reshape(%464, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %468 = @func_4519(%465, %466, %467) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %469 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %470 = cast(%457, dtype="float32") /* ty=Tensor[(468), float32] */;
  %471 = reshape(%470, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %472 = @func_4161(%471) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %473 = cast(%457, dtype="float32") /* ty=Tensor[(468), float32] */;
  %474 = cast(%457, dtype="float32") /* ty=Tensor[(468), float32] */;
  %475 = reshape(%473, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %476 = reshape(%474, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %477 = @func_7(%475, %476) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %478 = %468.1;
  %479 = %469.0;
  %480 = %472.4;
  %481 = %477.0;
  (%457, %461, %478, %479, %480, %481)
}

def @func_6348() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) {
  %482 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %483 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %484 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
  %485 = @func_5989() /* ty=Tensor[(468), float32] */;
  %486 = %482.1;
  %487 = %483.0;
  %488 = %484.7;
  (%485, %486, %487, %488)
}

def @func_8411() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %489 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %490 = @func_7613() /* ty=Tensor[(468), float32] */;
  %491 = %489.0;
  (%490, %491)
}

def @func_13064() -> (Tensor[(7, 11, 5), float64],) {
  %492 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
  %493 = %492.0;
  (%493,)
}

def @func_11608() -> Tensor[(18, 60), int64] {
  %494 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %494.4
}

def @func_8268(%var_8225: uint64, %var_8226: Tensor[(16, 8, 10), uint64], %var_8242: Tensor[(468), float32], %var_8256: Tensor[(1080), int64]) -> (Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) {
  %495 = cast(%var_8225, dtype="uint64") /* ty=uint64 */;
  %496 = cast(%var_8226, dtype="uint64") /* ty=Tensor[(16, 8, 10), uint64] */;
  %497 = cast(%var_8242, dtype="float32") /* ty=Tensor[(468), float32] */;
  %498 = reshape(%497, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %499 = @func_4450(%498) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
  %500 = cast(%var_8256, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %501 = cast(%var_8256, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %502 = reshape(%500, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %503 = reshape(%501, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %504 = @func_4008(%502, %503) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %505 = %499.2;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %507 = reshape(%506, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %508 = @func_3332(%507) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %509 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %510 = multiply(%495, %496) /* ty=Tensor[(16, 8, 10), uint64] */;
  %511 = %504.0;
  %512 = %508.4;
  %513 = %509.2;
  (%510, %505, %var_8242, %511, %var_8256, %512, %513)
}

def @func_8445() -> Tensor[(288), float32] {
  %514 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %514.1
}

def @func_4161(%var_4146: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) {
  %515 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %516 = %515.0;
  %517 = cast(%516, dtype="float32") /* ty=Tensor[(288), float32] */;
  %518 = cast(%var_4146, dtype="float32") /* ty=Tensor[(468), float32] */;
  %519 = reshape(%517, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %520 = reshape(%518, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %521 = @func_2037(%519, %520) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %522 = cast(meta[relay.Constant][27] /* ty=Tensor[(18, 60), int64] */, dtype="int64") /* ty=Tensor[(18, 60), int64] */;
  %523 = cast(meta[relay.Constant][27] /* ty=Tensor[(18, 60), int64] */, dtype="int64") /* ty=Tensor[(18, 60), int64] */;
  %524 = reshape(%522, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %525 = reshape(%523, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %526 = @func_4008(%524, %525) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %527 = %521.2;
  %528 = %526.1;
  (%516, %527, %var_4146, %528, meta[relay.Constant][27] /* ty=Tensor[(18, 60), int64] */)
}

def @func_13765() -> (Tensor[(12, 12, 11), int8], Tensor[(1080), int64], uint64, Tensor[(1080), int64]) {
  %529 = @func_10030() /* ty=(Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) */;
  %530 = cast(meta[relay.Constant][28] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %531 = cast(meta[relay.Constant][29] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %532 = reshape(%530, newshape=[]) /* ty=uint64 */;
  %533 = reshape(%531, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %534 = @func_12139(%532, %533) /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) */;
  %535 = %529.1;
  %536 = %534.6;
  (%535, %536, meta[relay.Constant][28] /* ty=uint64 */, meta[relay.Constant][29] /* ty=Tensor[(1080), int64] */)
}

def @func_14724() -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), float64]) {
  %537 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %538 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %539 = @func_9122() /* ty=Tensor[(12, 9, 10), int64] */;
  %540 = cast(%539, dtype="float64") /* ty=Tensor[(12, 9, 10), float64] */;
  %541 = @func_14427() /* ty=Tensor[(12, 12, 11), int8] */;
  %542 = %537.2;
  %543 = %538.0;
  %544 = log2(%540) /* ty=Tensor[(12, 9, 10), float64] */;
  (%541, %542, %543, %544)
}

def @func_7317() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %545 = @func_7144() /* ty=(Tensor[(288), float32],) */;
  %546 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %547 = @func_3779() /* ty=Tensor[(468), float32] */;
  %548 = %545.0;
  %549 = %546.1;
  (%547, %548, %549)
}

def @func_3332(%var_3321: Tensor[(78, 6), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) {
  %550 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %551 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %552 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %553 = reshape(%551, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %554 = reshape(%552, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %555 = @func_7(%553, %554) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %556 = cast(meta[relay.Constant][31] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %557 = cast(meta[relay.Constant][31] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %558 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %559 = reshape(%556, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %560 = reshape(%557, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %561 = reshape(%558, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %562 = @func_842(%559, %560, %561) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %563 = cosh(%550) /* ty=Tensor[(3, 9, 3), float32] */;
  %564 = %555.0;
  %565 = %562.2;
  (%563, %564, %var_3321, %565, meta[relay.Constant][31] /* ty=Tensor[(112), float64] */)
}

def @func_6579() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %566 = @func_5711() /* ty=Tensor[(468), float32] */;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(468), float32] */;
  %568 = reshape(%567, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %569 = @func_4450(%568) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
  %570 = %569.1;
  (%566, %570)
}

def @func_11002() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(144, 2), float32]) {
  %571 = @func_9504() /* ty=(Tensor[(468), float32],) */;
  %572 = @func_9329() /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %573 = cast(meta[relay.Constant][32] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %574 = reshape(%573, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %575 = @func_3650(%574) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %576 = %571.0;
  %577 = %572.3;
  %578 = %575.0;
  (%576, %577, %578, meta[relay.Constant][32] /* ty=Tensor[(144, 2), float32] */)
}

def @func_13962() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  %579 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %580 = @func_4464() /* ty=Tensor[(288), float32] */;
  %581 = %579.1;
  (%580, %581)
}

def @func_5711() -> Tensor[(468), float32] {
  @func_3779() /* ty=Tensor[(468), float32] */
}

def @func_4464() -> Tensor[(288), float32] {
  %582 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %582.2
}

def @func_13045() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(12, 12, 11), int8]) {
  %583 = @func_10981() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %584 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %585 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %586 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %587 = %583.0;
  %588 = %584.0;
  %589 = %585.1;
  %590 = %586.0;
  (%587, %588, %589, %590)
}

def @func_3954(%var_3917: Tensor[(4, 28), float64]) -> (Tensor[(4, 28), bool],) {
  %591 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %592 = %591.0;
  %593 = cast(%var_3917, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(2), int32] */;
  %595 = cast(%592, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %597 = logical_and(%595, %596) /* ty=Tensor[(4, 28), bool] */;
  (%597,)
}

def @func_2967() -> (Tensor[(468), float32],) {
  %598 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %599 = %598.2;
  (%599,)
}

def @func_14036() -> Tensor[(468), float32] {
  %600 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %600.0
}

def @func_8540() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) {
  %601 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %602 = cast(meta[relay.Constant][33] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %603 = cast(meta[relay.Constant][33] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %604 = reshape(%602, newshape=[5, 63]) /* ty=Tensor[(5, 63), float64] */;
  %605 = reshape(%603, newshape=[5, 63]) /* ty=Tensor[(5, 63), float64] */;
  %606 = @func_3976(%604, %605) /* ty=(Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) */;
  %607 = %601.0;
  %608 = %606.3;
  (%607, %608, meta[relay.Constant][33] /* ty=Tensor[(315), float64] */)
}

def @func_8671(%var_8661: Tensor[(7, 11, 5), float64]) -> (Tensor[(7, 11, 5), bool],) {
  %609 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
  %610 = %609.0;
  %611 = cast(%var_8661, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %615 = less(%613, %614) /* ty=Tensor[(7, 11, 5), bool] */;
  (%615,)
}

def @func_14604(%var_14572: Tensor[(315), float64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(315), float64]) {
  %616 = @func_11267() /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32]) */;
  %617 = cast(%var_14572, dtype="float64") /* ty=Tensor[(315), float64] */;
  %618 = cast(%var_14572, dtype="float64") /* ty=Tensor[(315), float64] */;
  %619 = reshape(%617, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %620 = reshape(%618, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %621 = @func_568(%619, %620) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %622 = %616.0;
  %623 = @func_11141() /* ty=Tensor[(468), float32] */;
  %624 = %621.1;
  (%622, %623, %624, %var_14572)
}

def @func_12071() -> (Tensor[(4, 28), float64],) {
  %625 = @func_6879() /* ty=(Tensor[(4, 28), float64],) */;
  %626 = %625.0;
  (%626,)
}

def @func_9930() -> (Tensor[(468), float32],) {
  %627 = @func_9531() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %628 = %627.1;
  (%628,)
}

def @func_6040(%var_6026: Tensor[(16, 4, 8), int16], %var_6027: Tensor[(16, 4, 8), int16]) -> (Tensor[(16, 4, 8), int16], Tensor[(468), float32]) {
  %629 = cast(%var_6027, dtype="int16") /* ty=Tensor[(16, 4, 8), int16] */;
  %630 = shape_of(%var_6026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%var_6026, dtype="int16") /* ty=Tensor[(16, 4, 8), int16] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %633 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %634 = logical_xor(%631, %632) /* ty=Tensor[(16, 4, 8), int16] */;
  %635 = %633.0;
  (%634, %635)
}

def @func_5369() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %636 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %637 = %636.0;
  %638 = @func_3194() /* ty=Tensor[(468), float32] */;
  (%637, %638)
}

def @func_2921() -> (Tensor[(288), float32],) {
  %639 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %640 = %639.1;
  (%640,)
}

def @func_9122() -> Tensor[(12, 9, 10), int64] {
  %641 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %641.1
}

def @func_5967() -> (Tensor[(468), float32], Tensor[(468), uint64]) {
  %642 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %643 = @func_4958() /* ty=Tensor[(468), float32] */;
  %644 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %645 = %644.0;
  %646 = cast(%645, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %647 = shape_of(%643, dtype="int32") /* ty=Tensor[(1), int32] */;
  %648 = cast(%643, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %650 = %642.0;
  %651 = logical_xor(%648, %649) /* ty=Tensor[(468), uint64] */;
  (%650, %651)
}

def @func_2037(%var_1952: Tensor[(3, 6, 16), float32], %var_1969: Tensor[(468), float32]) -> (Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) {
  %652 = cast(%var_1952, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  %653 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %655 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
  %656 = reshape(%653, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %657 = reshape(%654, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %658 = reshape(%655, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %659 = @func_842(%656, %657, %658) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %660 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
  %661 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
  %662 = reshape(%660, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %663 = reshape(%661, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %664 = @func_7(%662, %663) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %665 = sin(%652) /* ty=Tensor[(3, 6, 16), float32] */;
  %666 = %659.0;
  %667 = %664.0;
  (%665, %666, meta[relay.Constant][34] /* ty=Tensor[(4, 28), float64] */, %var_1969, %667)
}

def @func_14821() -> (Tensor[(12, 12, 11), int8],) {
  %668 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %669 = %668.0;
  (%669,)
}

def @func_5243() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %670 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %671 = %670.0;
  %672 = @func_4250() /* ty=Tensor[(468), float32] */;
  (%671, %672)
}

def @func_11306(%var_11294: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), float32],) {
  %673 = cast(%var_11294, dtype="float32") /* ty=Tensor[(2, 11, 15), float32] */;
  %674 = asinh(%673) /* ty=Tensor[(2, 11, 15), float32] */;
  (%674,)
}

def @func_3976(%var_3963: Tensor[(5, 63), float64], %var_3969: Tensor[(5, 63), float64]) -> (Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) {
  %675 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %676 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %677 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %678 = reshape(%676, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %679 = reshape(%677, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %680 = @func_568(%678, %679) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %681 = cast(%var_3969, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %682 = shape_of(%var_3963, dtype="int32") /* ty=Tensor[(2), int32] */;
  %683 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %685 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %686 = %675.0;
  %687 = %680.0;
  %688 = minimum(%683, %684) /* ty=Tensor[(5, 63), float64] */;
  %689 = %685.0;
  (%686, %687, %688, %689)
}

def @func_14639(%var_14635: Tensor[(78, 6), bool]) -> (Tensor[(315), float64], Tensor[(468), float32], Tensor[(112), float64], Tensor[(78, 6), bool]) {
  %690 = @func_9707() /* ty=(Tensor[(18, 60), float64], Tensor[(315), float64]) */;
  %691 = cast(meta[relay.Constant][35] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %692 = cast(%var_14635, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %693 = cast(%var_14635, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %694 = reshape(%691, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %695 = reshape(%692, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %696 = reshape(%693, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %697 = @func_4519(%694, %695, %696) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %698 = %690.1;
  %699 = %697.2;
  (%698, %699, meta[relay.Constant][35] /* ty=Tensor[(112), float64] */, %var_14635)
}

def @func_11935() -> (Tensor[(468), float32],) {
  %700 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %701 = %700.0;
  (%701,)
}

def @func_3794() -> (Tensor[(468), float32],) {
  %702 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %703 = %702.0;
  (%703,)
}

def @func_3526() -> Tensor[(468), float32] {
  %704 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %704.0
}

def @func_9241() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(18, 60), bool], Tensor[(468), float32], Tensor[(16, 4, 8), int16], Tensor[(512), int16]) {
  %705 = @func_5967() /* ty=(Tensor[(468), float32], Tensor[(468), uint64]) */;
  %706 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %707 = %706.4;
  %708 = cast(meta[relay.Constant][36] /* ty=Tensor[(18, 60), int64] */, dtype="bool") /* ty=Tensor[(18, 60), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(2), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(18, 60), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %712 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %713 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %714 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %715 = reshape(%713, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %716 = reshape(%714, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %717 = @func_6040(%715, %716) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %718 = @func_8445() /* ty=Tensor[(288), float32] */;
  %719 = %705.0;
  %720 = equal(%710, %711) /* ty=Tensor[(18, 60), bool] */;
  %721 = %712.0;
  %722 = %717.0;
  (%718, %719, %720, %721, %722, meta[relay.Constant][37] /* ty=Tensor[(512), int16] */)
}

def @func_9348(%var_9332: uint16, %var_9333: Tensor[(1, 15, 14), uint16]) -> (Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) {
  %723 = cast(%var_9332, dtype="bool") /* ty=bool */;
  %724 = cast(%var_9333, dtype="bool") /* ty=Tensor[(1, 15, 14), bool] */;
  %725 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %726 = greater_equal(%723, %724) /* ty=Tensor[(1, 15, 14), bool] */;
  %727 = %725.0;
  (%726, %727)
}

def @func_3461() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %728 = @func_3351() /* ty=(Tensor[(468), float32],) */;
  %729 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %730 = %728.0;
  %731 = %729.0;
  (%730, %731)
}

def @func_9482(%var_9463: Tensor[(12, 10, 12), float32]) -> (Tensor[(12, 10, 12), float32], Tensor[(288), float32], Tensor[(288, 1), float32], Tensor[(12, 10, 12), float32]) {
  %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %733 = shape_of(%var_9463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%var_9463, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %736 = cast(meta[relay.Constant][39] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %737 = reshape(%736, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %738 = @func_3650(%737) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %739 = cast(%var_9463, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
  %740 = floor_mod(%734, %735) /* ty=Tensor[(12, 10, 12), float32] */;
  %741 = %738.3;
  %742 = sin(%739) /* ty=Tensor[(12, 10, 12), float32] */;
  (%740, %741, meta[relay.Constant][39] /* ty=Tensor[(288, 1), float32] */, %742)
}

def @func_12139(%var_12120: uint64, %var_12122: Tensor[(1080), int64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) {
  %743 = @func_12071() /* ty=(Tensor[(4, 28), float64],) */;
  %744 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %745 = cast(%var_12120, dtype="uint64") /* ty=uint64 */;
  %746 = cast(meta[relay.Constant][40] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %747 = @func_7915() /* ty=Tensor[(468), float32] */;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(468), float32] */;
  %749 = cast(%var_12122, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %750 = reshape(%745, newshape=[]) /* ty=uint64 */;
  %751 = reshape(%746, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), uint64] */;
  %752 = reshape(%748, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %753 = reshape(%749, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %754 = @func_8268(%750, %751, %752, %753) /* ty=(Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) */;
  %755 = @func_10030() /* ty=(Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) */;
  %756 = cast(meta[relay.Constant][41] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %757 = reshape(%756, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
  %758 = @func_11306(%757) /* ty=(Tensor[(2, 11, 15), float32],) */;
  %759 = %743.0;
  %760 = %744.0;
  %761 = %754.2;
  %762 = %755.1;
  %763 = %758.0;
  (%759, %747, %760, %761, %var_12120, meta[relay.Constant][40] /* ty=Tensor[(1280), uint64] */, %var_12122, %762, %763, meta[relay.Constant][41] /* ty=Tensor[(55, 6), float32] */)
}

def @func_10102() -> (Tensor[(288), float32],) {
  %764 = @func_8642() /* ty=(Tensor[(288), float32],) */;
  %765 = %764.0;
  (%765,)
}

def @func_3779() -> Tensor[(468), float32] {
  %766 = @func_3351() /* ty=(Tensor[(468), float32],) */;
  %766.0
}

def @func_13882(%var_13860: Tensor[(1080), int64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32]) {
  %767 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %768 = @func_7144() /* ty=(Tensor[(288), float32],) */;
  %769 = %767.1;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(468), float32] */;
  %771 = reshape(%770, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %772 = @func_4450(%771) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
  %773 = @func_13274() /* ty=Tensor[(468), float32] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(468), float32] */;
  %775 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %776 = cast(meta[relay.Constant][43] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %777 = cast(%var_13860, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %778 = reshape(%774, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %779 = reshape(%775, newshape=[]) /* ty=uint64 */;
  %780 = reshape(%776, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
  %781 = reshape(%777, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %782 = @func_8835(%778, %779, %780, %781) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %783 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %784 = @func_10662() /* ty=Tensor[(288), float32] */;
  %785 = @func_10078() /* ty=Tensor[(468), float32] */;
  %786 = %768.0;
  %787 = %772.4;
  %788 = %782.9;
  %789 = %783.0;
  %790 = @func_13194() /* ty=Tensor[(468), float32] */;
  (%769, %784, %785, %786, %773, %787, %788, meta[relay.Constant][42] /* ty=uint64 */, meta[relay.Constant][43] /* ty=Tensor[(1280), uint64] */, %var_13860, %789, %790)
}

def @func_13742() -> Tensor[(468), float32] {
  @func_7559() /* ty=Tensor[(468), float32] */
}

def @func_9439() -> (Tensor[(468), float32],) {
  %791 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %792 = %791.0;
  (%792,)
}

def @func_8835(%var_8745: Tensor[(468), float32], %var_8809: uint64, %var_8810: Tensor[(2, 640), uint64], %var_8811: Tensor[(1080), int64]) -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) {
  %793 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
  %794 = cast(%var_8745, dtype="float32") /* ty=Tensor[(468), float32] */;
  %795 = reshape(%794, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %796 = @func_6988(%795) /* ty=(Tensor[(468), float64],) */;
  %797 = @func_5967() /* ty=(Tensor[(468), float32], Tensor[(468), uint64]) */;
  %798 = cast(%var_8809, dtype="uint64") /* ty=uint64 */;
  %799 = cast(%var_8810, dtype="uint64") /* ty=Tensor[(2, 640), uint64] */;
  %800 = cast(%var_8745, dtype="float32") /* ty=Tensor[(468), float32] */;
  %801 = cast(%var_8811, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %802 = reshape(%798, newshape=[]) /* ty=uint64 */;
  %803 = reshape(%799, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), uint64] */;
  %804 = reshape(%800, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %805 = reshape(%801, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %806 = @func_8268(%802, %803, %804, %805) /* ty=(Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) */;
  %807 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %808 = %793.0;
  %809 = %796.0;
  %810 = @func_3694() /* ty=Tensor[(468), float64] */;
  %811 = %797.0;
  %812 = %806.0;
  %813 = %807.1;
  (%808, %809, %var_8745, %810, %811, %812, %var_8809, %var_8810, %var_8811, %813)
}

def @func_8043() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
  %814 = @func_4917() /* ty=(Tensor[(468), float32],) */;
  %815 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %816 = @func_3779() /* ty=Tensor[(468), float32] */;
  %817 = %814.0;
  %818 = %815.0;
  %819 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
  %820 = @func_3526() /* ty=Tensor[(468), float32] */;
  (%816, %817, %818, %819, %820)
}

def @func_12764(%var_12739: Tensor[(112), bool]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(112), bool]) {
  %821 = @func_8878() /* ty=(Tensor[(468), float32], Tensor[(288), float32]) */;
  %822 = cast(meta[relay.Constant][44] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %823 = cast(%var_12739, dtype="bool") /* ty=Tensor[(112), bool] */;
  %824 = reshape(%822, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %825 = reshape(%823, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), bool] */;
  %826 = @func_8908(%824, %825) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) */;
  %827 = %821.0;
  %828 = %826.2;
  (%827, %828, meta[relay.Constant][44] /* ty=Tensor[(288), float32] */, %var_12739)
}

def @func_5259(%var_5256: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), float32],) {
  %829 = cast(%var_5256, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  %830 = cos(%829) /* ty=Tensor[(7, 10, 12), float32] */;
  (%830,)
}

def @func_3437() -> Tensor[(468), float32] {
  %831 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %831.2
}

def @func_9566() -> (Tensor[(468), float32],) {
  %832 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %833 = %832.0;
  (%833,)
}

def @func_8878() -> (Tensor[(468), float32], Tensor[(288), float32]) {
  %834 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %835 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %836 = %834.1;
  %837 = %835.2;
  (%836, %837)
}

def @func_4752() -> (Tensor[(288), float32],) {
  %838 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %839 = %838.0;
  (%839,)
}

def @func_10616() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %840 = @func_7855() /* ty=(Tensor[(468), float32],) */;
  %841 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %842 = @func_9076() /* ty=Tensor[(468), float32] */;
  %843 = %840.0;
  %844 = %841.0;
  (%842, %843, %844)
}

def @func_11404() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) {
  %845 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %846 = @func_9823() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %847 = @func_9707() /* ty=(Tensor[(18, 60), float64], Tensor[(315), float64]) */;
  %848 = @func_7187() /* ty=Tensor[(468), float32] */;
  %849 = %845.0;
  %850 = %846.2;
  %851 = %847.0;
  (%848, %849, %850, %851)
}

def @func_3152(%var_3094: Tensor[(234, 2), float32]) -> (Tensor[(288), float32], Tensor[(234, 2), bool], Tensor[(468), float32], Tensor[(3, 7, 15), float64], Tensor[(315), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %852 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %853 = cast(%var_3094, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %854 = cast(%var_3094, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
  %855 = reshape(%853, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %856 = reshape(%854, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %857 = @func_7(%855, %856) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %858 = %857.0;
  %859 = cast(%858, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %860 = shape_of(%var_3094, dtype="int32") /* ty=Tensor[(2), int32] */;
  %861 = cast(%var_3094, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %863 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %864 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %865 = cast(meta[relay.Constant][45] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %866 = reshape(%864, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %867 = reshape(%865, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %868 = @func_568(%866, %867) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %869 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %870 = cast(meta[relay.Constant][46] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %871 = cast(meta[relay.Constant][46] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %872 = reshape(%870, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %873 = reshape(%871, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %874 = %852.0;
  %875 = not_equal(%861, %862) /* ty=Tensor[(234, 2), bool] */;
  %876 = %863.0;
  %877 = %868.0;
  %878 = %869.0;
  %879 = @func_371(%872, %873) /* ty=Tensor[(13, 15, 15), bool] */;
  (%874, %875, %876, %877, meta[relay.Constant][45] /* ty=Tensor[(315), float64] */, %878, %879, meta[relay.Constant][46] /* ty=Tensor[(2925), bool] */)
}

def @func_10662() -> Tensor[(288), float32] {
  @func_8445() /* ty=Tensor[(288), float32] */
}

def @func_9504() -> (Tensor[(468), float32],) {
  %880 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %881 = %880.0;
  (%881,)
}

def @func_10372() -> (Tensor[(468), float32], Tensor[(12, 14, 9), float32]) {
  %882 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %883 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %884 = log2(%883) /* ty=Tensor[(12, 14, 9), float32] */;
  %885 = cast(%884, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %886 = %882.0;
  %887 = asin(%885) /* ty=Tensor[(12, 14, 9), float32] */;
  (%886, %887)
}

def @func_11267() -> (Tensor[(4, 28), float64], Tensor[(468), float32]) {
  %888 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %889 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %890 = %888.2;
  %891 = %889.0;
  (%890, %891)
}

def @func_4773() -> Tensor[(468), float32] {
  %892 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %892.0
}

def @func_6988(%var_6976: Tensor[(468), float32]) -> (Tensor[(468), float64],) {
  %893 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %894 = %893.0;
  %895 = cast(%var_6976, dtype="float64") /* ty=Tensor[(468), float64] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(1), int32] */;
  %897 = cast(%894, dtype="float64") /* ty=Tensor[(468), float64] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?), float64] */;
  %899 = divide(%897, %898) /* ty=Tensor[(468), float64] */;
  (%899,)
}

def @func_8175() -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8]) {
  %900 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %901 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
  %902 = %900.2;
  %903 = %901.1;
  (%902, %903)
}

def @func_12407() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
  %904 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %905 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
  %906 = %904.0;
  (%905, %906)
}

def @func_6065() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %907 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %908 = @func_4250() /* ty=Tensor[(468), float32] */;
  %909 = %907.2;
  (%908, %909)
}

def @func_11141() -> Tensor[(468), float32] {
  @func_10501() /* ty=Tensor[(468), float32] */
}

def @func_12868(%var_12837: Tensor[(2, 12, 6), float64], %var_12838: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), float64], Tensor[(468), float32], Tensor[(2, 12, 6), float32], Tensor[(468), float32]) {
  %910 = cast(%var_12838, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %911 = shape_of(%var_12837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%var_12837, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %914 = @func_11404() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) */;
  %915 = cast(%var_12837, dtype="float32") /* ty=Tensor[(2, 12, 6), float32] */;
  %916 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %917 = floor_mod(%912, %913) /* ty=Tensor[(2, 12, 6), float64] */;
  %918 = %914.0;
  %919 = asin(%915) /* ty=Tensor[(2, 12, 6), float32] */;
  %920 = %916.0;
  (%917, %918, %919, %920)
}

def @func_9329() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %921 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %922 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %923 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %924 = %921.0;
  %925 = %922.1;
  %926 = @func_4250() /* ty=Tensor[(468), float32] */;
  %927 = %923.1;
  (%924, %925, %926, %927)
}

def @func_12505() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32]) {
  %928 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %929 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %930 = @func_10102() /* ty=(Tensor[(288), float32],) */;
  %931 = @func_6879() /* ty=(Tensor[(4, 28), float64],) */;
  %932 = @func_11267() /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32]) */;
  %933 = %928.0;
  %934 = @func_3194() /* ty=Tensor[(468), float32] */;
  %935 = %929.1;
  %936 = %930.0;
  %937 = %931.0;
  %938 = %932.1;
  (%933, %934, %935, %936, %937, %938)
}

def @func_4108() -> Tensor[(468), float32] {
  %939 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %939.0
}

def @func_6300() -> (Tensor[(468), float32],) {
  %940 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%940,)
}

def @func_4998() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %941 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %942 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="float32") /* ty=Tensor[(288), float32] */;
  %945 = reshape(%944, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %946 = @func_3650(%945) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %947 = %941.0;
  %948 = %946.0;
  (%947, %943, %948)
}

def @func_2623(%var_2617: Tensor[(288), float32]) -> (Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) {
  %949 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %950 = cast(%var_2617, dtype="float32") /* ty=Tensor[(288), float32] */;
  %951 = cast(meta[relay.Constant][49] /* ty=Tensor[(3, 156), float32] */, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %952 = reshape(%950, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %953 = reshape(%951, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %954 = @func_2037(%952, %953) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %955 = sinh(%949) /* ty=Tensor[(15, 15, 10), float64] */;
  %956 = %954.2;
  (%955, %956, %var_2617, meta[relay.Constant][49] /* ty=Tensor[(3, 156), float32] */)
}

def @func_3302() -> (Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) {
  %957 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %958 = cast(meta[relay.Constant][50] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %959 = cast(meta[relay.Constant][50] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %960 = reshape(%958, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %961 = reshape(%959, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %962 = @func_371(%960, %961) /* ty=Tensor[(13, 15, 15), bool] */;
  %963 = cast(meta[relay.Constant][50] /* ty=Tensor[(2925), bool] */, dtype="uint64") /* ty=Tensor[(2925), uint64] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="uint64") /* ty=Tensor[(13, 15, 15), uint64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %967 = %957.1;
  %968 = minimum(%965, %966) /* ty=Tensor[(13, 15, 15), uint64] */;
  (%967, %968)
}

def @func_11090() -> (Tensor[(12, 12, 11), int8],) {
  %969 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %970 = %969.0;
  (%970,)
}

def @func_5878() -> (Tensor[(288), float32],) {
  %971 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %972 = %971.1;
  (%972,)
}

def @func_9759(%var_9753: Tensor[(14, 12, 9), uint64], %var_9754: Tensor[(14, 12, 9), uint64]) -> Tensor[(14, 12, 9), bool] {
  %973 = cast(%var_9754, dtype="bool") /* ty=Tensor[(14, 12, 9), bool] */;
  %974 = shape_of(%var_9753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%var_9753, dtype="bool") /* ty=Tensor[(14, 12, 9), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%975, %976) /* ty=Tensor[(14, 12, 9), bool] */
}

def @func_5570() -> (Tensor[(468), float32],) {
  %977 = @func_3779() /* ty=Tensor[(468), float32] */;
  (%977,)
}

def @func_10635() -> (Tensor[(1080), int64],) {
  %978 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %979 = %978.2;
  (%979,)
}

def @func_8614(%var_8563: Tensor[(468), float32], %var_8574: Tensor[(2, 144), float32]) -> (Tensor[(832), float32], Tensor[(12, 13, 3), bool], Tensor[(468), float32], Tensor[(2, 144), uint32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(2, 144), float64]) {
  %980 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
  %981 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %982 = cast(%var_8563, dtype="float32") /* ty=Tensor[(468), float32] */;
  %983 = reshape(%981, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %984 = reshape(%982, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %985 = @func_2037(%983, %984) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %986 = cast(%var_8574, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
  %987 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %988 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %990 = bitwise_or(%988, %989) /* ty=Tensor[(2, 144), uint32] */;
  %991 = cast(%990, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %992 = cast(%var_8563, dtype="float32") /* ty=Tensor[(468), float32] */;
  %993 = reshape(%991, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %994 = reshape(%992, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %995 = @func_2037(%993, %994) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %996 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %997 = cast(%var_8574, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %998 = acos(%997) /* ty=Tensor[(2, 144), float32] */;
  %999 = cast(%998, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1000 = tan(%999) /* ty=Tensor[(2, 144), float32] */;
  %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1002 = exp(%1001) /* ty=Tensor[(2, 144), float32] */;
  %1003 = cast(%1002, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
  %1004 = %980.3;
  %1005 = %985.4;
  %1006 = %995.2;
  %1007 = %996.1;
  %1008 = erf(%1003) /* ty=Tensor[(2, 144), float64] */;
  (%1004, %1005, %var_8563, %990, %1006, %1007, %1008)
}

def @func_4310(%var_4287: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) {
  %1009 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1010 = cast(%var_4287, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1011 = reshape(%1010, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1012 = @func_2623(%1011) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %1013 = %1012.0;
  %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %1015 = %1009.0;
  %1016 = cosh(%1014) /* ty=Tensor[(15, 15, 10), float32] */;
  (%1015, %var_4287, %1016)
}

def @func_3385(%var_3376: Tensor[(1, 288), float32]) -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) {
  %1017 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1018 = %1017.0;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1020 = sigmoid(%1019) /* ty=Tensor[(4, 28), float64] */;
  %1021 = cast(%1020, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1022 = cast(%var_3376, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %1023 = reshape(%1022, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1024 = @func_2623(%1023) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %1025 = sinh(%1021) /* ty=Tensor[(4, 28), float64] */;
  %1026 = %1024.2;
  (%1025, %1026, %var_3376)
}

def @func_6721() -> Tensor[(15, 15, 10), float64] {
  %1027 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
  %1027.5
}

def @func_3194() -> Tensor[(468), float32] {
  %1028 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %1028.0
}

def @func_3483() -> (Tensor[(468), float32],) {
  %1029 = @func_3351() /* ty=(Tensor[(468), float32],) */;
  %1030 = %1029.0;
  (%1030,)
}

def @func_11025() -> (Tensor[(15, 15, 10), float64],) {
  %1031 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
  %1032 = cast(%1031, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %1033 = acosh(%1032) /* ty=Tensor[(15, 15, 10), float64] */;
  (%1033,)
}

def @func_11285() -> (Tensor[(468), float32],) {
  %1034 = @func_11195() /* ty=(Tensor[(468), float32],) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_10501() -> Tensor[(468), float32] {
  @func_4266() /* ty=Tensor[(468), float32] */
}

def @func_11824(%var_11712: uint32, %var_11713: Tensor[(12), uint32], %var_11753: Tensor[(512, 12), int16], %var_11758: Tensor[(6, 140), float32], %var_11773: Tensor[(512, 12), int16], %var_11807: Tensor[(512, 12), int16]) -> (Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(468), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32], Tensor[(512, 12), float64], Tensor[(7, 10, 12), float32], Tensor[(6, 140), float32], Tensor[(512, 12), float64], Tensor[(512, 12), int8], Tensor[(468), float32]) {
  %1036 = cast(%var_11712, dtype="uint32") /* ty=uint32 */;
  %1037 = cast(%var_11713, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %1038 = reshape(%1036, newshape=[]) /* ty=uint32 */;
  %1039 = reshape(%1037, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), uint32] */;
  %1040 = @func_4346(%1038, %1039) /* ty=(Tensor[(3, 1, 4), float64],) */;
  %1041 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %1042 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %1043 = cast(meta[relay.Constant][52] /* ty=Tensor[(512, 1), int16] */, dtype="int16") /* ty=Tensor[(512, 1), int16] */;
  %1044 = reshape(%1043, newshape=[512]) /* ty=Tensor[(512), int16] */;
  %1045 = @func_8991(%1044) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) */;
  %1046 = cast(meta[relay.Constant][52] /* ty=Tensor[(512, 1), int16] */, dtype="float64") /* ty=Tensor[(512, 1), float64] */;
  %1047 = cast(%var_11753, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
  %1048 = cast(%var_11758, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %1049 = reshape(%1048, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
  %1050 = @func_5259(%1049) /* ty=(Tensor[(7, 10, 12), float32],) */;
  %1051 = cast(%var_11773, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
  %1052 = shape_of(%var_11753, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1053 = cast(%var_11753, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1055 = cast(%var_11807, dtype="int8") /* ty=Tensor[(512, 12), int8] */;
  %1056 = shape_of(%var_11773, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1057 = cast(%var_11773, dtype="int8") /* ty=Tensor[(512, 12), int8] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1059 = @func_4958() /* ty=Tensor[(468), float32] */;
  %1060 = %1040.0;
  %1061 = %1041.0;
  %1062 = %1042.2;
  %1063 = %1045.0;
  %1064 = divide(%1046, %1047) /* ty=Tensor[(512, 12), float64] */;
  %1065 = %1050.0;
  %1066 = add(%1053, %1054) /* ty=Tensor[(512, 12), float64] */;
  %1067 = bitwise_xor(%1057, %1058) /* ty=Tensor[(512, 12), int8] */;
  %1068 = @func_6711() /* ty=Tensor[(468), float32] */;
  (%1059, %1060, %var_11712, %var_11713, %1061, %1062, %1063, %1064, %1065, %var_11758, %1066, %1067, %1068)
}

def @func_13429() -> Tensor[(468), float32] {
  %1069 = @func_7855() /* ty=(Tensor[(468), float32],) */;
  %1069.0
}

def @func_3766(%var_3763: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), float32] {
  %1070 = cast(%var_3763, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  asin(%1070) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_6879() -> (Tensor[(4, 28), float64],) {
  %1071 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1072 = %1071.0;
  (%1072,)
}

def @func_7339() -> Tensor[(468), float32] {
  @func_3779() /* ty=Tensor[(468), float32] */
}

def @func_13115() -> (Tensor[(468), float32],) {
  %1073 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%1073,)
}

def @func_8642() -> (Tensor[(288), float32],) {
  %1074 = @func_5878() /* ty=(Tensor[(288), float32],) */;
  %1075 = %1074.0;
  (%1075,)
}

def @func_14856() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1076 = @func_7855() /* ty=(Tensor[(468), float32],) */;
  %1077 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1078 = %1076.0;
  %1079 = @func_9076() /* ty=Tensor[(468), float32] */;
  %1080 = %1077.0;
  (%1078, %1079, %1080)
}

def @func_9531() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1081 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1082 = @func_5711() /* ty=Tensor[(468), float32] */;
  %1083 = %1081.0;
  (%1082, %1083)
}

def @func_4266() -> Tensor[(468), float32] {
  %1084 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %1084.0
}

def @func_7187() -> Tensor[(468), float32] {
  @func_4773() /* ty=Tensor[(468), float32] */
}

def @func_5390(%var_5372: int16, %var_5373: Tensor[(7, 2, 3), int16], %var_5386: Tensor[(72, 4), float32]) -> (Tensor[(7, 2, 3), bool], Tensor[(288), float32], Tensor[(72, 4), float32]) {
  %1085 = cast(%var_5372, dtype="bool") /* ty=bool */;
  %1086 = cast(%var_5373, dtype="bool") /* ty=Tensor[(7, 2, 3), bool] */;
  %1087 = cast(%var_5386, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %1088 = reshape(%1087, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1089 = @func_2623(%1088) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %1090 = greater_equal(%1085, %1086) /* ty=Tensor[(7, 2, 3), bool] */;
  %1091 = %1089.2;
  (%1090, %1091, %var_5386)
}

def @func_14785() -> Tensor[(3, 3, 1), float32] {
  %1092 = @func_13534() /* ty=(Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) */;
  %1092.0
}

def @func_7915() -> Tensor[(468), float32] {
  %1093 = @func_7014() /* ty=(Tensor[(468), float32],) */;
  %1093.0
}

def @func_7855() -> (Tensor[(468), float32],) {
  %1094 = @func_6711() /* ty=Tensor[(468), float32] */;
  (%1094,)
}

def @func_8991(%var_8974: Tensor[(512), int16]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) {
  %1095 = @func_8540() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) */;
  %1096 = cast(%var_8974, dtype="int16") /* ty=Tensor[(512), int16] */;
  %1097 = cast(%var_8974, dtype="int16") /* ty=Tensor[(512), int16] */;
  %1098 = reshape(%1096, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %1099 = reshape(%1097, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %1100 = @func_6040(%1098, %1099) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %1101 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %1102 = %1095.0;
  %1103 = %1100.1;
  %1104 = %1101.0;
  (%1102, %1103, %var_8974, %1104)
}

def @func_12559(%var_12538: Tensor[(2, 12, 8), uint32], %var_12539: Tensor[(2, 12, 8), uint32]) -> (Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) {
  %1105 = cast(%var_12539, dtype="uint32") /* ty=Tensor[(2, 12, 8), uint32] */;
  %1106 = shape_of(%var_12538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%var_12538, dtype="uint32") /* ty=Tensor[(2, 12, 8), uint32] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1109 = @func_12407() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */;
  %1110 = bitwise_or(%1107, %1108) /* ty=Tensor[(2, 12, 8), uint32] */;
  %1111 = @func_5170() /* ty=Tensor[(468), float64] */;
  %1112 = %1109.0;
  (%1110, %1111, %1112)
}

def @func_7144() -> (Tensor[(288), float32],) {
  %1113 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %1114 = %1113.2;
  (%1114,)
}

def @func_13274() -> Tensor[(468), float32] {
  %1115 = @func_8411() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1115.1
}

def @func_14884() -> Tensor[(4, 28), float64] {
  %1116 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1116.0
}

def @func_10539(%var_10537: Tensor[(28, 4), float64]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(28, 4), float64]) {
  %1117 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1118 = cast(%var_10537, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %1119 = cast(%var_10537, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %1120 = %1117.0;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1122 = reshape(%1118, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %1123 = reshape(%1119, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %1124 = reshape(%1121, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %1125 = @func_842(%1122, %1123, %1124) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %1126 = @func_3526() /* ty=Tensor[(468), float32] */;
  %1127 = %1125.1;
  (%1120, %1126, %1127, %var_10537)
}

def @func_3351() -> (Tensor[(468), float32],) {
  %1128 = @func_3194() /* ty=Tensor[(468), float32] */;
  (%1128,)
}

def @func_10895() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), bool]) {
  %1129 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1130 = @func_9531() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1131 = @func_9122() /* ty=Tensor[(12, 9, 10), int64] */;
  %1132 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 9, 10), int64] */, dtype="bool") /* ty=Tensor[(12, 9, 10), bool] */;
  %1133 = shape_of(%1131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%1131, dtype="bool") /* ty=Tensor[(12, 9, 10), bool] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1136 = %1129.0;
  %1137 = %1130.1;
  %1138 = less(%1134, %1135) /* ty=Tensor[(12, 9, 10), bool] */;
  (%1136, %1137, %1138)
}

def @func_4917() -> (Tensor[(468), float32],) {
  %1139 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %1140 = %1139.3;
  (%1140,)
}

def @func_9046(%var_9008: uint64, %var_9021: Tensor[(12), uint32]) -> (Tensor[(468), float32], Tensor[(1080), int64], uint64, Tensor[(1280), uint64], Tensor[(1080, 1), int64], Tensor[(112), float64], Tensor[(12), uint32], Tensor[(468), float32]) {
  %1141 = @func_4108() /* ty=Tensor[(468), float32] */;
  %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1143 = cast(%var_9008, dtype="uint64") /* ty=uint64 */;
  %1144 = cast(meta[relay.Constant][54] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %1145 = cast(meta[relay.Constant][55] /* ty=Tensor[(1080, 1), int64] */, dtype="int64") /* ty=Tensor[(1080, 1), int64] */;
  %1146 = reshape(%1142, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1147 = reshape(%1143, newshape=[]) /* ty=uint64 */;
  %1148 = reshape(%1144, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
  %1149 = reshape(%1145, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %1150 = @func_8835(%1146, %1147, %1148, %1149) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %1151 = cast(%var_9021, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %1152 = reshape(%1151, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint32] */;
  %1153 = @func_7542(%1152) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) */;
  %1154 = cast(%var_9021, dtype="uint32") /* ty=Tensor[(12), uint32] */;
  %1155 = reshape(%1154, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint32] */;
  %1156 = @func_7542(%1155) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) */;
  %1157 = %1150.8;
  %1158 = %1153.1;
  %1159 = %1156.6;
  (%1141, %1157, %var_9008, meta[relay.Constant][54] /* ty=Tensor[(1280), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(1080, 1), int64] */, %1158, %var_9021, %1159)
}

def @func_9455() -> (Tensor[(288), float32],) {
  %1160 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %1161 = %1160.1;
  (%1161,)
}

def @func_8489() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1162 = @func_7014() /* ty=(Tensor[(468), float32],) */;
  %1163 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1164 = @func_3779() /* ty=Tensor[(468), float32] */;
  %1165 = %1162.0;
  %1166 = %1163.2;
  (%1164, %1165, %1166)
}

def @func_6711() -> Tensor[(468), float32] {
  %1167 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %1167.0
}

def @func_5914(%var_5909: Tensor[(11, 2, 10), float32], %var_5910: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32],) {
  %1168 = cast(%var_5910, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %1169 = shape_of(%var_5909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1170 = cast(%var_5909, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1172 = maximum(%1170, %1171) /* ty=Tensor[(11, 2, 10), float32] */;
  (%1172,)
}

def @func_2899() -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) {
  %1173 = cast(meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1174 = cast(meta[relay.Constant][57] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1175 = reshape(%1173, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1176 = reshape(%1174, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1177 = @func_2037(%1175, %1176) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %1178 = cast(meta[relay.Constant][57] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1179 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %1180 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(8, 6, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1183 = mod(%1181, %1182) /* ty=Tensor[(8, 6, 13), float64] */;
  %1184 = cast(%1183, dtype="float32") /* ty=Tensor[(8, 6, 13), float32] */;
  %1185 = acosh(%1184) /* ty=Tensor[(8, 6, 13), float32] */;
  %1186 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
  %1187 = cosh(%1186) /* ty=Tensor[(8, 6, 13), float64] */;
  %1188 = cast(%1187, dtype="bool") /* ty=Tensor[(8, 6, 13), bool] */;
  %1189 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%1185, dtype="bool") /* ty=Tensor[(8, 6, 13), bool] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1192 = %1177.2;
  %1193 = sin(%1178) /* ty=Tensor[(468), float32] */;
  %1194 = logical_or(%1190, %1191) /* ty=Tensor[(8, 6, 13), bool] */;
  (%1192, meta[relay.Constant][56] /* ty=Tensor[(288), float32] */, %1193, %1194)
}

def @func_8087(%var_8077: Tensor[(468), float32]) -> (Tensor[(468), int64],) {
  %1195 = @func_4108() /* ty=Tensor[(468), float32] */;
  %1196 = cast(%var_8077, dtype="int64") /* ty=Tensor[(468), int64] */;
  %1197 = shape_of(%1195, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1198 = cast(%1195, dtype="int64") /* ty=Tensor[(468), int64] */;
  %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1200 = minimum(%1198, %1199) /* ty=Tensor[(468), int64] */;
  (%1200,)
}

def @func_4224(%var_4192: Tensor[(12, 12, 11), int8], %var_4193: Tensor[(12, 12, 11), int8], %var_4205: Tensor[(832), float32]) -> (Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %1201 = cast(%var_4193, dtype="int8") /* ty=Tensor[(12, 12, 11), int8] */;
  %1202 = shape_of(%var_4192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%var_4192, dtype="int8") /* ty=Tensor[(12, 12, 11), int8] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1205 = cast(%var_4205, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1206 = reshape(%1205, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1207 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1208 = cast(meta[relay.Constant][60] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %1209 = cast(meta[relay.Constant][60] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %1210 = reshape(%1208, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %1211 = reshape(%1209, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %1212 = multiply(%1203, %1204) /* ty=Tensor[(12, 12, 11), int8] */;
  %1213 = @func_3766(%1206) /* ty=Tensor[(13, 8, 8), float32] */;
  %1214 = %1207.0;
  %1215 = @func_371(%1210, %1211) /* ty=Tensor[(13, 15, 15), bool] */;
  (%1212, %1213, %var_4205, %1214, %1215, meta[relay.Constant][60] /* ty=Tensor[(2925), bool] */)
}

def @func_5428(%var_5426: Tensor[(468), bool]) -> (Tensor[(1080), int64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
  %1216 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %1217 = cast(meta[relay.Constant][61] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1218 = reshape(%1217, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1219 = @func_2623(%1218) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %1220 = cast(meta[relay.Constant][62] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1221 = cast(%var_5426, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1222 = cast(%var_5426, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1223 = reshape(%1220, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1224 = reshape(%1221, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1225 = reshape(%1222, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1226 = @func_4519(%1223, %1224, %1225) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %1227 = %1216.2;
  %1228 = %1219.2;
  %1229 = %1226.0;
  (%1227, %1228, meta[relay.Constant][61] /* ty=Tensor[(288), float32] */, %1229, meta[relay.Constant][62] /* ty=Tensor[(112), float64] */, %var_5426)
}

def @func_371(%var_345: Tensor[(13, 15, 15), bool], %var_346: Tensor[(13, 15, 15), bool]) -> Tensor[(13, 15, 15), bool] {
  %1230 = cast(%var_346, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %1231 = shape_of(%var_345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(%var_345, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1232, %1233) /* ty=Tensor[(13, 15, 15), bool] */
}

def @func_5723() -> (Tensor[(468), float32],) {
  %1234 = @func_4108() /* ty=Tensor[(468), float32] */;
  (%1234,)
}

def @func_3650(%var_3645: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
  %1235 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %1236 = %1235.0;
  %1237 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1238 = reshape(%1237, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %1239 = @func_3332(%1238) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %1240 = cast(%var_3645, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1241 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1242 = reshape(%1240, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1243 = reshape(%1241, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1244 = @func_2037(%1242, %1243) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %1245 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1246 = %1239.3;
  %1247 = %1244.3;
  %1248 = %1245.1;
  (%1236, %1246, %1247, %var_3645, %1248)
}

def @func_8697() -> (Tensor[(4, 28), float64],) {
  %1249 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1250 = %1249.0;
  (%1250,)
}

def @func_12184() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1251 = @func_5723() /* ty=(Tensor[(468), float32],) */;
  %1252 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %1253 = %1251.0;
  %1254 = %1252.0;
  (%1253, %1254)
}

def @func_6196() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
  %1255 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1256 = cast(meta[relay.Constant][63] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1257 = reshape(%1256, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %1258 = @func_5779(%1257) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) */;
  %1259 = %1255.0;
  %1260 = %1258.2;
  (%1259, %1260, meta[relay.Constant][63] /* ty=Tensor[(288), float32] */)
}

def @func_6237(%var_6213: Tensor[(315), float64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) {
  %1261 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %1262 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1263 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1264 = cast(%var_6213, dtype="float64") /* ty=Tensor[(315), float64] */;
  %1265 = cast(%var_6213, dtype="float64") /* ty=Tensor[(315), float64] */;
  %1266 = reshape(%1264, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %1267 = reshape(%1265, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %1268 = @func_568(%1266, %1267) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %1269 = %1261.0;
  %1270 = %1262.1;
  %1271 = %1263.1;
  %1272 = %1268.2;
  (%1269, %1270, %1271, %1272, %var_6213)
}

def @func_7378() -> (Tensor[(468), float32],) {
  %1273 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %1274 = %1273.0;
  (%1274,)
}

def @func_7(%var_0: Tensor[(12, 13, 3), float32], %var_1: Tensor[(12, 13, 3), float32]) -> (Tensor[(12, 13, 3), bool],) {
  %1275 = cast(%var_1, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %1276 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1277 = cast(%var_0, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1279 = greater(%1277, %1278) /* ty=Tensor[(12, 13, 3), bool] */;
  (%1279,)
}

def @func_4250() -> Tensor[(468), float32] {
  %1280 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %1280.0
}

def @func_9187() -> (Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) {
  %1281 = @func_8043() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */;
  %1282 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %1283 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %1284 = %1281.3;
  %1285 = %1282.0;
  %1286 = %1283.0;
  (%1284, %1285, %1286)
}

def @func_10030() -> (Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) {
  %1287 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
  %1288 = %1287.0;
  %1289 = cast(%1288, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  %1290 = asinh(%1289) /* ty=Tensor[(7, 11, 5), float64] */;
  %1291 = cast(%1288, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %1292 = shape_of(%1290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1293 = cast(%1290, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %1294 = dyn.reshape(%1291, %1292, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1295 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %1296 = logical_or(%1293, %1294) /* ty=Tensor[(7, 11, 5), bool] */;
  %1297 = %1295.0;
  (%1296, %1297)
}

def @func_4346(%var_4333: uint32, %var_4334: Tensor[(3, 1, 4), uint32]) -> (Tensor[(3, 1, 4), float64],) {
  %1298 = cast(%var_4333, dtype="bool") /* ty=bool */;
  %1299 = cast(%var_4334, dtype="bool") /* ty=Tensor[(3, 1, 4), bool] */;
  %1300 = greater(%1298, %1299) /* ty=Tensor[(3, 1, 4), bool] */;
  %1301 = cast(%var_4333, dtype="float64") /* ty=float64 */;
  %1302 = cast(%1300, dtype="float64") /* ty=Tensor[(3, 1, 4), float64] */;
  %1303 = floor_divide(%1301, %1302) /* ty=Tensor[(3, 1, 4), float64] */;
  (%1303,)
}

def @func_10981() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1304 = @func_8175() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8]) */;
  %1305 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %1306 = %1304.0;
  %1307 = @func_6711() /* ty=Tensor[(468), float32] */;
  %1308 = %1305.0;
  (%1306, %1307, %1308)
}

def @func_14163(%var_14130: Tensor[(15, 8, 468), bool], %var_14156: uint64, %var_14157: Tensor[(1280), uint64]) -> (Tensor[(15, 8, 468), float32], Tensor[(468), bool], Tensor[(468), float32], Tensor[(105, 3), float64], Tensor[(2925), bool], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(1080), int64]) {
  %1309 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %1310 = %1309.0;
  %1311 = cast(%var_14130, dtype="float32") /* ty=Tensor[(15, 8, 468), float32] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1313 = cast(%1310, dtype="float32") /* ty=Tensor[(15, 8, 468), float32] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1315 = @func_8736() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) */;
  %1316 = cast(meta[relay.Constant][64] /* ty=Tensor[(105, 3), float64] */, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
  %1317 = cast(meta[relay.Constant][65] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %1318 = cast(%var_14156, dtype="uint64") /* ty=uint64 */;
  %1319 = cast(%var_14157, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %1320 = cast(meta[relay.Constant][66] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %1321 = reshape(%1316, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %1322 = reshape(%1317, newshape=[5, 585]) /* ty=Tensor[(5, 585), bool] */;
  %1323 = reshape(%1318, newshape=[]) /* ty=uint64 */;
  %1324 = reshape(%1319, newshape=[320, 4]) /* ty=Tensor[(320, 4), uint64] */;
  %1325 = reshape(%1320, newshape=[90, 12]) /* ty=Tensor[(90, 12), int64] */;
  %1326 = @func_10190(%1321, %1322, %1323, %1324, %1325) /* ty=(Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) */;
  %1327 = @func_10635() /* ty=(Tensor[(1080), int64],) */;
  %1328 = power(%1313, %1314) /* ty=Tensor[(15, 8, 468), float32] */;
  %1329 = %1315.3;
  %1330 = %1326.0;
  %1331 = %1327.0;
  (%1328, %1329, %1330, meta[relay.Constant][64] /* ty=Tensor[(105, 3), float64] */, meta[relay.Constant][65] /* ty=Tensor[(2925), bool] */, %var_14156, %var_14157, meta[relay.Constant][66] /* ty=Tensor[(1080), int64] */, %1331)
}

def @func_12914() -> Tensor[(468), float32] {
  %1332 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
  %1332.1
}

def @func_14495() -> (Tensor[(468), float32],) {
  %1333 = @func_11404() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) */;
  %1334 = %1333.2;
  (%1334,)
}

def @func_12809() -> (Tensor[(288), float32], Tensor[(1, 288), float32]) {
  %1335 = @func_11158() /* ty=Tensor[(288), float32] */;
  %1336 = cast(%1335, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1337 = reshape(%1336, newshape=[1, 288]) /* ty=Tensor[(1, 288), float32] */;
  %1338 = @func_3385(%1337) /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) */;
  %1339 = %1338.2;
  (%1335, %1339)
}

def @func_6161(%var_6121: Tensor[(24, 12), float32], %var_6139: Tensor[(4, 72), float32], %var_6153: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(24, 12), float32], Tensor[(468), float32], Tensor[(4, 72), float32], Tensor[(4, 72), uint64]) {
  %1340 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1341 = cast(%var_6121, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
  %1342 = reshape(%1341, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
  %1343 = @func_5779(%1342) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) */;
  %1344 = %1343.3;
  %1345 = cast(%var_6139, dtype="uint16") /* ty=Tensor[(4, 72), uint16] */;
  %1346 = shape_of(%1344, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1347 = cast(%1344, dtype="uint16") /* ty=Tensor[(4, 72), uint16] */;
  %1348 = dyn.reshape(%1345, %1346, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1349 = left_shift(%1347, %1348) /* ty=Tensor[(4, 72), uint16] */;
  %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %1351 = cast(%var_6153, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
  %1352 = shape_of(%1344, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1353 = cast(%1344, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
  %1354 = dyn.reshape(%1351, %1352, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1355 = @func_4958() /* ty=Tensor[(468), float32] */;
  %1356 = %1340.0;
  %1357 = log10(%1350) /* ty=Tensor[(4, 72), float32] */;
  %1358 = minimum(%1353, %1354) /* ty=Tensor[(4, 72), uint64] */;
  (%1355, %var_6121, %1356, %1357, %1358)
}

def @func_4958() -> Tensor[(468), float32] {
  @func_3194() /* ty=Tensor[(468), float32] */
}

def @func_14048() -> (Tensor[(468), float32],) {
  %1359 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %1360 = %1359.0;
  (%1360,)
}

def @main(%var_14929: Tensor[(9, 16, 16), float32]) -> (Tensor[(9, 16, 16), float32],) {
  %1361 = cast(%var_14929, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %1362 = acos(%1361) /* ty=Tensor[(9, 16, 16), float32] */;
  (%1362,)
}

def @func_8908(%var_8888: Tensor[(288), float32], %var_8900: Tensor[(4, 4, 7), bool]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) {
  %1363 = cast(%var_8888, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1364 = @func_5626() /* ty=Tensor[(468), float32] */;
  %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1366 = reshape(%1363, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1367 = reshape(%1365, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1368 = @func_2037(%1366, %1367) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %1369 = %1368.1;
  %1370 = cast(%var_8900, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %1371 = shape_of(%1369, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1372 = cast(%1369, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
  %1373 = dyn.reshape(%1370, %1371, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1374 = @func_3437() /* ty=Tensor[(468), float32] */;
  %1375 = divide(%1372, %1373) /* ty=Tensor[(4, 4, 7), float32] */;
  (%1364, %var_8888, %1374, %1375)
}

def @func_7559() -> Tensor[(468), float32] {
  %1376 = @func_7378() /* ty=(Tensor[(468), float32],) */;
  %1376.0
}

def @func_10317(%var_10287: Tensor[(105, 2), uint16]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float64], uint16, Tensor[(105, 2), uint16], Tensor[(288), float32], Tensor[(112), float64]) {
  %1377 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %1378 = cast(meta[relay.Constant][67] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1379 = cast(%var_10287, dtype="uint16") /* ty=Tensor[(105, 2), uint16] */;
  %1380 = reshape(%1378, newshape=[]) /* ty=uint16 */;
  %1381 = reshape(%1379, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
  %1382 = @func_9348(%1380, %1381) /* ty=(Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) */;
  %1383 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %1384 = @func_4773() /* ty=Tensor[(468), float32] */;
  %1385 = cast(%1384, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1386 = reshape(%1385, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %1387 = @func_3332(%1386) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %1388 = %1377.0;
  %1389 = %1382.1;
  %1390 = %1383.0;
  %1391 = %1387.4;
  (%1384, %1388, %1389, meta[relay.Constant][67] /* ty=uint16 */, %var_10287, %1390, %1391)
}

def @func_9648(%var_9619: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(4, 72), float64]) {
  %1392 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %1393 = cast(%var_9619, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %1394 = reshape(%1393, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1395 = @func_2623(%1394) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %1396 = %1395.2;
  %1397 = cast(%1396, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1398 = shape_of(%var_9619, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1399 = cast(%var_9619, dtype="float64") /* ty=Tensor[(4, 72), float64] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1401 = %1392.3;
  %1402 = power(%1399, %1400) /* ty=Tensor[(4, 72), float64] */;
  (%1401, %1402)
}

def @func_7258() -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) {
  %1403 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1404 = cast(meta[relay.Constant][68] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
  %1405 = cast(meta[relay.Constant][68] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
  %1406 = cast(meta[relay.Constant][69] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1407 = reshape(%1404, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), int8] */;
  %1408 = reshape(%1405, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), int8] */;
  %1409 = reshape(%1406, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1410 = @func_4224(%1407, %1408, %1409) /* ty=(Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %1411 = %1403.1;
  %1412 = %1410.0;
  (%1411, %1412, meta[relay.Constant][68] /* ty=Tensor[(1584), int8] */, meta[relay.Constant][69] /* ty=Tensor[(832), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4523(%var_4520: Tensor[(112), float64], %var_4521: Tensor[(12, 13, 3), bool], %var_4522: Tensor[(12, 13, 3), bool]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) {
  %22 = fn (%var_4493: Tensor[(112), float64], %var_4508: Tensor[(12, 13, 3), bool], %var_4515: Tensor[(12, 13, 3), bool]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) {
    %0 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %1 = @func_3794() /* ty=(Tensor[(468), float32],) */;
    %2 = cast(%var_4493, dtype="float64") /* ty=Tensor[(112), float64] */;
    %3 = cast(%var_4493, dtype="float64") /* ty=Tensor[(112), float64] */;
    %4 = %0.0;
    %5 = cast(%4, dtype="float32") /* ty=Tensor[(468), float32] */;
    %6 = reshape(%2, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %7 = reshape(%3, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %8 = reshape(%5, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
    %9 = @func_842(%6, %7, %8) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
    %10 = %9.1;
    %11 = cast(%var_4508, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
    %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
    %13 = cast(%10, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
    %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %15 = cast(%var_4515, dtype="uint64") /* ty=Tensor[(12, 13, 3), uint64] */;
    %16 = shape_of(%var_4508, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(%var_4508, dtype="uint64") /* ty=Tensor[(12, 13, 3), uint64] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %19 = %1.0;
    %20 = greater_equal(%13, %14) /* ty=Tensor[(12, 13, 3), bool] */;
    %21 = bitwise_or(%17, %18) /* ty=Tensor[(12, 13, 3), uint64] */;
    (%4, %var_4493, %19, %20, %21)
  };
  %22(%var_4520, %var_4521, %var_4522) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */
}

def @func_12559(%var_12538: Tensor[(2, 12, 8), uint32], %var_12539: Tensor[(2, 12, 8), uint32]) -> (Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) {
  %23 = cast(%var_12539, dtype="uint32") /* ty=Tensor[(2, 12, 8), uint32] */;
  %24 = shape_of(%var_12538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_12538, dtype="uint32") /* ty=Tensor[(2, 12, 8), uint32] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %27 = @func_12407() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */;
  %28 = bitwise_or(%25, %26) /* ty=Tensor[(2, 12, 8), uint32] */;
  %29 = @func_5170() /* ty=Tensor[(468), float64] */;
  %30 = %27.0;
  (%28, %29, %30)
}

def @func_2900() -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) {
  %53 = fn () -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) {
    %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %33 = reshape(%31, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %34 = reshape(%32, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %35 = @func_2037(%33, %34) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %38 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %41 = mod(%39, %40) /* ty=Tensor[(8, 6, 13), float64] */;
    %42 = cast(%41, dtype="float32") /* ty=Tensor[(8, 6, 13), float32] */;
    %43 = acosh(%42) /* ty=Tensor[(8, 6, 13), float32] */;
    %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 13), float64] */;
    %45 = cosh(%44) /* ty=Tensor[(8, 6, 13), float64] */;
    %46 = cast(%45, dtype="bool") /* ty=Tensor[(8, 6, 13), bool] */;
    %47 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%43, dtype="bool") /* ty=Tensor[(8, 6, 13), bool] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %50 = %35.2;
    %51 = sin(%36) /* ty=Tensor[(468), float32] */;
    %52 = logical_or(%48, %49) /* ty=Tensor[(8, 6, 13), bool] */;
    (%50, meta[relay.Constant][0] /* ty=Tensor[(288), float32] */, %51, %52)
  };
  %53() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */
}

def @func_7224() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %54 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %55 = @func_5711() /* ty=Tensor[(468), float32] */;
  %56 = %54.1;
  (%55, %56)
}

def @func_7638() -> (Tensor[(12, 12, 11), int8],) {
  @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */
}

def @func_4161(%var_4146: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) {
  %57 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %58 = %57.0;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(288), float32] */;
  %60 = cast(%var_4146, dtype="float32") /* ty=Tensor[(468), float32] */;
  %61 = reshape(%59, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %62 = reshape(%60, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %63 = @func_2037(%61, %62) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(18, 60), int64] */, dtype="int64") /* ty=Tensor[(18, 60), int64] */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(18, 60), int64] */, dtype="int64") /* ty=Tensor[(18, 60), int64] */;
  %66 = reshape(%64, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %67 = reshape(%65, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %68 = @func_4008(%66, %67) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %69 = %63.2;
  %70 = %68.1;
  (%58, %69, %var_4146, %70, meta[relay.Constant][4] /* ty=Tensor[(18, 60), int64] */)
}

def @func_4740() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_3694() -> Tensor[(468), float64] {
  %71 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %72 = %71.0;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(468), float32] */;
  %74 = sqrt(%73) /* ty=Tensor[(468), float32] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(468), float64] */;
  asin(%75) /* ty=Tensor[(468), float64] */
}

def @func_4752() -> (Tensor[(288), float32],) {
  %76 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %77 = %76.0;
  (%77,)
}

def @func_5853() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) {
  %94 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) {
    %78 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %79 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %81 = reshape(%80, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
    %82 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %84 = %79.1;
    %85 = cast(%84, dtype="float32") /* ty=Tensor[(468), float32] */;
    %86 = reshape(%83, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %87 = reshape(%85, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %88 = @func_2037(%86, %87) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %89 = %78.0;
    %90 = @func_3437() /* ty=Tensor[(468), float32] */;
    %91 = @func_3766(%81) /* ty=Tensor[(13, 8, 8), float32] */;
    %92 = %82.1;
    %93 = %88.1;
    (%89, %84, %90, %91, meta[relay.Constant][5] /* ty=Tensor[(832), float32] */, %92, %93, meta[relay.Constant][6] /* ty=Tensor[(288), float32] */)
  };
  %94() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */
}

def @func_3303() -> (Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) {
  %107 = fn () -> (Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) {
    %95 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %98 = reshape(%96, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %99 = reshape(%97, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %100 = @func_371(%98, %99) /* ty=Tensor[(13, 15, 15), bool] */;
    %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(2925), bool] */, dtype="uint64") /* ty=Tensor[(2925), uint64] */;
    %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%100, dtype="uint64") /* ty=Tensor[(13, 15, 15), uint64] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %105 = %95.1;
    %106 = minimum(%103, %104) /* ty=Tensor[(13, 15, 15), uint64] */;
    (%105, %106)
  };
  %107() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */
}

def @func_13115() -> (Tensor[(468), float32],) {
  %108 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%108,)
}

def @func_9533() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_9531() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_14823() -> (Tensor[(12, 12, 11), int8],) {
  @func_14821() /* ty=(Tensor[(12, 12, 11), int8],) */
}

def @func_2623(%var_2617: Tensor[(288), float32]) -> (Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) {
  %109 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 15, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
  %110 = cast(%var_2617, dtype="float32") /* ty=Tensor[(288), float32] */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 156), float32] */, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %112 = reshape(%110, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %113 = reshape(%111, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %114 = @func_2037(%112, %113) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %115 = sinh(%109) /* ty=Tensor[(15, 15, 10), float64] */;
  %116 = %114.2;
  (%115, %116, %var_2617, meta[relay.Constant][9] /* ty=Tensor[(3, 156), float32] */)
}

def @func_7341() -> Tensor[(468), float32] {
  @func_7339() /* ty=Tensor[(468), float32] */
}

def @func_13964() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  @func_13962() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */
}

def @func_4738() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %117 = @func_3526() /* ty=Tensor[(468), float32] */;
  %118 = @func_3437() /* ty=Tensor[(468), float32] */;
  (%117, %118)
}

def @func_4012(%var_4010: Tensor[(12, 9, 10), int64], %var_4011: Tensor[(12, 9, 10), int64]) -> (Tensor[(12, 9, 10), int64], Tensor[(468), float32]) {
  @func_4008(%var_4010, %var_4011) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */
}

def @func_6645() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) {
  @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */
}

def @func_6350() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) {
  @func_6348() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) */
}

def @func_10897() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), bool]) {
  @func_10895() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), bool]) */
}

def @func_14495() -> (Tensor[(468), float32],) {
  %119 = @func_11404() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) */;
  %120 = %119.2;
  (%120,)
}

def @func_8490() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %126 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
    %121 = @func_7014() /* ty=(Tensor[(468), float32],) */;
    %122 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
    %123 = @func_3779() /* ty=Tensor[(468), float32] */;
    %124 = %121.0;
    %125 = %122.2;
    (%123, %124, %125)
  };
  %126() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_5713() -> Tensor[(468), float32] {
  @func_5711() /* ty=Tensor[(468), float32] */
}

def @func_9241() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(18, 60), bool], Tensor[(468), float32], Tensor[(16, 4, 8), int16], Tensor[(512), int16]) {
  %127 = @func_5967() /* ty=(Tensor[(468), float32], Tensor[(468), uint64]) */;
  %128 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %129 = %128.4;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(18, 60), int64] */, dtype="bool") /* ty=Tensor[(18, 60), bool] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(2), int32] */;
  %132 = cast(%129, dtype="bool") /* ty=Tensor[(18, 60), bool] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %134 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %135 = cast(meta[relay.Constant][11] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %136 = cast(meta[relay.Constant][11] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %137 = reshape(%135, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %138 = reshape(%136, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %139 = @func_6040(%137, %138) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %140 = @func_8445() /* ty=Tensor[(288), float32] */;
  %141 = %127.0;
  %142 = equal(%132, %133) /* ty=Tensor[(18, 60), bool] */;
  %143 = %134.0;
  %144 = %139.0;
  (%140, %141, %142, %143, %144, meta[relay.Constant][11] /* ty=Tensor[(512), int16] */)
}

def @func_14107(%var_14105: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(12, 13, 3), bool], Tensor[(112), float64], Tensor[(468), float32]) {
  @func_14104(%var_14105) /* ty=(Tensor[(288), float32], Tensor[(12, 13, 3), bool], Tensor[(112), float64], Tensor[(468), float32]) */
}

def @func_3351() -> (Tensor[(468), float32],) {
  %145 = @func_3194() /* ty=Tensor[(468), float32] */;
  (%145,)
}

def @func_3483() -> (Tensor[(468), float32],) {
  %146 = @func_3351() /* ty=(Tensor[(468), float32],) */;
  %147 = %146.0;
  (%147,)
}

def @func_6990(%var_6989: Tensor[(468), float32]) -> (Tensor[(468), float64],) {
  %155 = fn (%var_6976: Tensor[(468), float32]) -> (Tensor[(468), float64],) {
    %148 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %149 = %148.0;
    %150 = cast(%var_6976, dtype="float64") /* ty=Tensor[(468), float64] */;
    %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(1), int32] */;
    %152 = cast(%149, dtype="float64") /* ty=Tensor[(468), float64] */;
    %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?), float64] */;
    %154 = divide(%152, %153) /* ty=Tensor[(468), float64] */;
    (%154,)
  };
  %155(%var_6989) /* ty=(Tensor[(468), float64],) */
}

def @func_8840(%var_8836: Tensor[(468), float32], %var_8837: uint64, %var_8838: Tensor[(2, 640), uint64], %var_8839: Tensor[(1080), int64]) -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) {
  %177 = fn (%var_8745: Tensor[(468), float32], %var_8809: uint64, %var_8810: Tensor[(2, 640), uint64], %var_8811: Tensor[(1080), int64]) -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) {
    %156 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
    %157 = cast(%var_8745, dtype="float32") /* ty=Tensor[(468), float32] */;
    %158 = reshape(%157, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %159 = @func_6988(%158) /* ty=(Tensor[(468), float64],) */;
    %160 = @func_5967() /* ty=(Tensor[(468), float32], Tensor[(468), uint64]) */;
    %161 = cast(%var_8809, dtype="uint64") /* ty=uint64 */;
    %162 = cast(%var_8810, dtype="uint64") /* ty=Tensor[(2, 640), uint64] */;
    %163 = cast(%var_8745, dtype="float32") /* ty=Tensor[(468), float32] */;
    %164 = cast(%var_8811, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %165 = reshape(%161, newshape=[]) /* ty=uint64 */;
    %166 = reshape(%162, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), uint64] */;
    %167 = reshape(%163, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %168 = reshape(%164, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
    %169 = @func_8268(%165, %166, %167, %168) /* ty=(Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) */;
    %170 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %171 = %156.0;
    %172 = %159.0;
    %173 = @func_3694() /* ty=Tensor[(468), float64] */;
    %174 = %160.0;
    %175 = %169.0;
    %176 = %170.1;
    (%171, %172, %var_8745, %173, %174, %175, %var_8809, %var_8810, %var_8811, %176)
  };
  %177(%var_8836, %var_8837, %var_8838, %var_8839) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */
}

def @func_10618() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_3526() -> Tensor[(468), float32] {
  %178 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %178.0
}

def @func_7379() -> (Tensor[(468), float32],) {
  %181 = fn () -> (Tensor[(468), float32],) {
    %179 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %180 = %179.0;
    (%180,)
  };
  %181() /* ty=(Tensor[(468), float32],) */
}

def @func_14606(%var_14605: Tensor[(315), float64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(315), float64]) {
  %191 = fn (%var_14572: Tensor[(315), float64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(315), float64]) {
    %182 = @func_11267() /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32]) */;
    %183 = cast(%var_14572, dtype="float64") /* ty=Tensor[(315), float64] */;
    %184 = cast(%var_14572, dtype="float64") /* ty=Tensor[(315), float64] */;
    %185 = reshape(%183, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %186 = reshape(%184, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %187 = @func_568(%185, %186) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
    %188 = %182.0;
    %189 = @func_11141() /* ty=Tensor[(468), float32] */;
    %190 = %187.1;
    (%188, %189, %190, %var_14572)
  };
  %191(%var_14605) /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(315), float64]) */
}

def @func_4465() -> Tensor[(288), float32] {
  %193 = fn () -> Tensor[(288), float32] {
    %192 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %192.2
  };
  %193() /* ty=Tensor[(288), float32] */
}

def @func_14787() -> Tensor[(3, 3, 1), float32] {
  @func_14785() /* ty=Tensor[(3, 3, 1), float32] */
}

def @func_7968() -> (Tensor[(7, 11, 5), float64],) {
  @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */
}

def @func_5572() -> (Tensor[(468), float32],) {
  @func_5570() /* ty=(Tensor[(468), float32],) */
}

def @func_9439() -> (Tensor[(468), float32],) {
  %194 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %195 = %194.0;
  (%195,)
}

def @func_6043(%var_6041: Tensor[(16, 4, 8), int16], %var_6042: Tensor[(16, 4, 8), int16]) -> (Tensor[(16, 4, 8), int16], Tensor[(468), float32]) {
  %203 = fn (%var_6026: Tensor[(16, 4, 8), int16], %var_6027: Tensor[(16, 4, 8), int16]) -> (Tensor[(16, 4, 8), int16], Tensor[(468), float32]) {
    %196 = cast(%var_6027, dtype="int16") /* ty=Tensor[(16, 4, 8), int16] */;
    %197 = shape_of(%var_6026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%var_6026, dtype="int16") /* ty=Tensor[(16, 4, 8), int16] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %200 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %201 = logical_xor(%198, %199) /* ty=Tensor[(16, 4, 8), int16] */;
    %202 = %200.0;
    (%201, %202)
  };
  %203(%var_6041, %var_6042) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */
}

def @func_842(%var_815: Tensor[(4, 4, 7), float64], %var_816: Tensor[(4, 4, 7), float64], %var_830: Tensor[(1, 468), float32]) -> (Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %204 = cast(%var_816, dtype="bool") /* ty=Tensor[(4, 4, 7), bool] */;
  %205 = shape_of(%var_815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%var_815, dtype="bool") /* ty=Tensor[(4, 4, 7), bool] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %208 = cast(%var_830, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %209 = cast(%var_830, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %210 = reshape(%208, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %211 = reshape(%209, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %212 = @func_7(%210, %211) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %213 = cast(meta[relay.Constant][12] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %214 = cast(meta[relay.Constant][12] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %215 = reshape(%213, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %216 = reshape(%214, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %217 = not_equal(%206, %207) /* ty=Tensor[(4, 4, 7), bool] */;
  %218 = %212.0;
  %219 = @func_371(%215, %216) /* ty=Tensor[(13, 15, 15), bool] */;
  (%217, %218, %var_830, %219, meta[relay.Constant][12] /* ty=Tensor[(2925), bool] */)
}

def @main(%var_14929: Tensor[(9, 16, 16), float32]) -> (Tensor[(9, 16, 16), float32],) {
  %220 = cast(%var_14929, dtype="float32") /* ty=Tensor[(9, 16, 16), float32] */;
  %221 = acos(%220) /* ty=Tensor[(9, 16, 16), float32] */;
  (%221,)
}

def @func_5502() -> Tensor[(468), float32] {
  %223 = fn () -> Tensor[(468), float32] {
    %222 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %222.0
  };
  %223() /* ty=Tensor[(468), float32] */
}

def @func_11026() -> (Tensor[(15, 15, 10), float64],) {
  %227 = fn () -> (Tensor[(15, 15, 10), float64],) {
    %224 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(15, 15, 10), float64] */;
    %226 = acosh(%225) /* ty=Tensor[(15, 15, 10), float64] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(15, 15, 10), float64],) */
}

def @func_4959() -> Tensor[(468), float32] {
  %228 = fn () -> Tensor[(468), float32] {
    @func_3194() /* ty=Tensor[(468), float32] */
  };
  %228() /* ty=Tensor[(468), float32] */
}

def @func_14884() -> Tensor[(4, 28), float64] {
  %229 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %229.0
}

def @func_14048() -> (Tensor[(468), float32],) {
  %230 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %231 = %230.0;
  (%231,)
}

def @func_7636() -> (Tensor[(12, 12, 11), int8],) {
  %232 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
  %233 = %232.1;
  (%233,)
}

def @func_9049(%var_9047: uint64, %var_9048: Tensor[(12), uint32]) -> (Tensor[(468), float32], Tensor[(1080), int64], uint64, Tensor[(1280), uint64], Tensor[(1080, 1), int64], Tensor[(112), float64], Tensor[(12), uint32], Tensor[(468), float32]) {
  %253 = fn (%var_9008: uint64, %var_9021: Tensor[(12), uint32]) -> (Tensor[(468), float32], Tensor[(1080), int64], uint64, Tensor[(1280), uint64], Tensor[(1080, 1), int64], Tensor[(112), float64], Tensor[(12), uint32], Tensor[(468), float32]) {
    %234 = @func_4108() /* ty=Tensor[(468), float32] */;
    %235 = cast(%234, dtype="float32") /* ty=Tensor[(468), float32] */;
    %236 = cast(%var_9008, dtype="uint64") /* ty=uint64 */;
    %237 = cast(meta[relay.Constant][13] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
    %238 = cast(meta[relay.Constant][14] /* ty=Tensor[(1080, 1), int64] */, dtype="int64") /* ty=Tensor[(1080, 1), int64] */;
    %239 = reshape(%235, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %240 = reshape(%236, newshape=[]) /* ty=uint64 */;
    %241 = reshape(%237, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
    %242 = reshape(%238, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
    %243 = @func_8835(%239, %240, %241, %242) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
    %244 = cast(%var_9021, dtype="uint32") /* ty=Tensor[(12), uint32] */;
    %245 = reshape(%244, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint32] */;
    %246 = @func_7542(%245) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) */;
    %247 = cast(%var_9021, dtype="uint32") /* ty=Tensor[(12), uint32] */;
    %248 = reshape(%247, newshape=[3, 4]) /* ty=Tensor[(3, 4), uint32] */;
    %249 = @func_7542(%248) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) */;
    %250 = %243.8;
    %251 = %246.1;
    %252 = %249.6;
    (%234, %250, %var_9008, meta[relay.Constant][13] /* ty=Tensor[(1280), uint64] */, meta[relay.Constant][14] /* ty=Tensor[(1080, 1), int64] */, %251, %var_9021, %252)
  };
  %253(%var_9047, %var_9048) /* ty=(Tensor[(468), float32], Tensor[(1080), int64], uint64, Tensor[(1280), uint64], Tensor[(1080, 1), int64], Tensor[(112), float64], Tensor[(12), uint32], Tensor[(468), float32]) */
}

def @func_8542() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) {
  @func_8540() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) */
}

def @func_11196() -> (Tensor[(468), float32],) {
  %256 = fn () -> (Tensor[(468), float32],) {
    %254 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %255 = %254.0;
    (%255,)
  };
  %256() /* ty=(Tensor[(468), float32],) */
}

def @func_13962() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  %257 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %258 = @func_4464() /* ty=Tensor[(288), float32] */;
  %259 = %257.1;
  (%258, %259)
}

def @func_12915() -> Tensor[(468), float32] {
  %261 = fn () -> Tensor[(468), float32] {
    %260 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
    %260.1
  };
  %261() /* ty=Tensor[(468), float32] */
}

def @func_9566() -> (Tensor[(468), float32],) {
  %262 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %263 = %262.0;
  (%263,)
}

def @func_14167(%var_14164: Tensor[(15, 8, 468), bool], %var_14165: uint64, %var_14166: Tensor[(1280), uint64]) -> (Tensor[(15, 8, 468), float32], Tensor[(468), bool], Tensor[(468), float32], Tensor[(105, 3), float64], Tensor[(2925), bool], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(1080), int64]) {
  %287 = fn (%var_14130: Tensor[(15, 8, 468), bool], %var_14156: uint64, %var_14157: Tensor[(1280), uint64]) -> (Tensor[(15, 8, 468), float32], Tensor[(468), bool], Tensor[(468), float32], Tensor[(105, 3), float64], Tensor[(2925), bool], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(1080), int64]) {
    %264 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
    %265 = %264.0;
    %266 = cast(%var_14130, dtype="float32") /* ty=Tensor[(15, 8, 468), float32] */;
    %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
    %268 = cast(%265, dtype="float32") /* ty=Tensor[(15, 8, 468), float32] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %270 = @func_8736() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) */;
    %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(105, 3), float64] */, dtype="float64") /* ty=Tensor[(105, 3), float64] */;
    %272 = cast(meta[relay.Constant][16] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %273 = cast(%var_14156, dtype="uint64") /* ty=uint64 */;
    %274 = cast(%var_14157, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
    %275 = cast(meta[relay.Constant][17] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %276 = reshape(%271, newshape=[315]) /* ty=Tensor[(315), float64] */;
    %277 = reshape(%272, newshape=[5, 585]) /* ty=Tensor[(5, 585), bool] */;
    %278 = reshape(%273, newshape=[]) /* ty=uint64 */;
    %279 = reshape(%274, newshape=[320, 4]) /* ty=Tensor[(320, 4), uint64] */;
    %280 = reshape(%275, newshape=[90, 12]) /* ty=Tensor[(90, 12), int64] */;
    %281 = @func_10190(%276, %277, %278, %279, %280) /* ty=(Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) */;
    %282 = @func_10635() /* ty=(Tensor[(1080), int64],) */;
    %283 = power(%268, %269) /* ty=Tensor[(15, 8, 468), float32] */;
    %284 = %270.3;
    %285 = %281.0;
    %286 = %282.0;
    (%283, %284, %285, meta[relay.Constant][15] /* ty=Tensor[(105, 3), float64] */, meta[relay.Constant][16] /* ty=Tensor[(2925), bool] */, %var_14156, %var_14157, meta[relay.Constant][17] /* ty=Tensor[(1080), int64] */, %286)
  };
  %287(%var_14164, %var_14165, %var_14166) /* ty=(Tensor[(15, 8, 468), float32], Tensor[(468), bool], Tensor[(468), float32], Tensor[(105, 3), float64], Tensor[(2925), bool], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(1080), int64]) */
}

def @func_11267() -> (Tensor[(4, 28), float64], Tensor[(468), float32]) {
  %288 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %289 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %290 = %288.2;
  %291 = %289.0;
  (%290, %291)
}

def @func_13045() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(12, 12, 11), int8]) {
  %292 = @func_10981() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
  %293 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %294 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %295 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %296 = %292.0;
  %297 = %293.0;
  %298 = %294.1;
  %299 = %295.0;
  (%296, %297, %298, %299)
}

def @func_3437() -> Tensor[(468), float32] {
  %300 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %300.2
}

def @func_14725() -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), float64]) {
  %309 = fn () -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), float64]) {
    %301 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
    %302 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %303 = @func_9122() /* ty=Tensor[(12, 9, 10), int64] */;
    %304 = cast(%303, dtype="float64") /* ty=Tensor[(12, 9, 10), float64] */;
    %305 = @func_14427() /* ty=Tensor[(12, 12, 11), int8] */;
    %306 = %301.2;
    %307 = %302.0;
    %308 = log2(%304) /* ty=Tensor[(12, 9, 10), float64] */;
    (%305, %306, %307, %308)
  };
  %309() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), float64]) */
}

def @func_3462() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %314 = fn () -> (Tensor[(468), float32], Tensor[(468), float32]) {
    %310 = @func_3351() /* ty=(Tensor[(468), float32],) */;
    %311 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %312 = %310.0;
    %313 = %311.0;
    (%312, %313)
  };
  %314() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_6722() -> Tensor[(15, 15, 10), float64] {
  %316 = fn () -> Tensor[(15, 15, 10), float64] {
    %315 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
    %315.5
  };
  %316() /* ty=Tensor[(15, 15, 10), float64] */
}

def @func_7109() -> (Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) {
  @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */
}

def @func_9331() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  @func_9329() /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_3154(%var_3153: Tensor[(234, 2), float32]) -> (Tensor[(288), float32], Tensor[(234, 2), bool], Tensor[(468), float32], Tensor[(3, 7, 15), float64], Tensor[(315), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %345 = fn (%var_3094: Tensor[(234, 2), float32]) -> (Tensor[(288), float32], Tensor[(234, 2), bool], Tensor[(468), float32], Tensor[(3, 7, 15), float64], Tensor[(315), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
    %317 = @func_2921() /* ty=(Tensor[(288), float32],) */;
    %318 = cast(%var_3094, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
    %319 = cast(%var_3094, dtype="float32") /* ty=Tensor[(234, 2), float32] */;
    %320 = reshape(%318, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
    %321 = reshape(%319, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
    %322 = @func_7(%320, %321) /* ty=(Tensor[(12, 13, 3), bool],) */;
    %323 = %322.0;
    %324 = cast(%323, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
    %325 = shape_of(%var_3094, dtype="int32") /* ty=Tensor[(2), int32] */;
    %326 = cast(%var_3094, dtype="bool") /* ty=Tensor[(234, 2), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %328 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %329 = cast(meta[relay.Constant][18] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %330 = cast(meta[relay.Constant][18] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
    %331 = reshape(%329, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %332 = reshape(%330, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %333 = @func_568(%331, %332) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
    %334 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %335 = cast(meta[relay.Constant][19] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %336 = cast(meta[relay.Constant][19] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %337 = reshape(%335, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %338 = reshape(%336, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %339 = %317.0;
    %340 = not_equal(%326, %327) /* ty=Tensor[(234, 2), bool] */;
    %341 = %328.0;
    %342 = %333.0;
    %343 = %334.0;
    %344 = @func_371(%337, %338) /* ty=Tensor[(13, 15, 15), bool] */;
    (%339, %340, %341, %342, meta[relay.Constant][18] /* ty=Tensor[(315), float64] */, %343, %344, meta[relay.Constant][19] /* ty=Tensor[(2925), bool] */)
  };
  %345(%var_3153) /* ty=(Tensor[(288), float32], Tensor[(234, 2), bool], Tensor[(468), float32], Tensor[(3, 7, 15), float64], Tensor[(315), float64], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */
}

def @func_9930() -> (Tensor[(468), float32],) {
  %346 = @func_9531() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %347 = %346.1;
  (%347,)
}

def @func_3795() -> (Tensor[(468), float32],) {
  %350 = fn () -> (Tensor[(468), float32],) {
    %348 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %349 = %348.0;
    (%349,)
  };
  %350() /* ty=(Tensor[(468), float32],) */
}

def @func_5259(%var_5256: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), float32],) {
  %351 = cast(%var_5256, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  %352 = cos(%351) /* ty=Tensor[(7, 10, 12), float32] */;
  (%352,)
}

def @func_2923() -> (Tensor[(288), float32],) {
  @func_2921() /* ty=(Tensor[(288), float32],) */
}

def @func_8698() -> (Tensor[(4, 28), float64],) {
  %355 = fn () -> (Tensor[(4, 28), float64],) {
    %353 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %354 = %353.0;
    (%354,)
  };
  %355() /* ty=(Tensor[(4, 28), float64],) */
}

def @func_8644() -> (Tensor[(288), float32],) {
  @func_8642() /* ty=(Tensor[(288), float32],) */
}

def @func_6165(%var_6162: Tensor[(24, 12), float32], %var_6163: Tensor[(4, 72), float32], %var_6164: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(24, 12), float32], Tensor[(468), float32], Tensor[(4, 72), float32], Tensor[(4, 72), uint64]) {
  %375 = fn (%var_6121: Tensor[(24, 12), float32], %var_6139: Tensor[(4, 72), float32], %var_6153: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(24, 12), float32], Tensor[(468), float32], Tensor[(4, 72), float32], Tensor[(4, 72), uint64]) {
    %356 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
    %357 = cast(%var_6121, dtype="float32") /* ty=Tensor[(24, 12), float32] */;
    %358 = reshape(%357, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
    %359 = @func_5779(%358) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) */;
    %360 = %359.3;
    %361 = cast(%var_6139, dtype="uint16") /* ty=Tensor[(4, 72), uint16] */;
    %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(2), int32] */;
    %363 = cast(%360, dtype="uint16") /* ty=Tensor[(4, 72), uint16] */;
    %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %365 = left_shift(%363, %364) /* ty=Tensor[(4, 72), uint16] */;
    %366 = cast(%365, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
    %367 = cast(%var_6153, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
    %368 = shape_of(%360, dtype="int32") /* ty=Tensor[(2), int32] */;
    %369 = cast(%360, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %371 = @func_4958() /* ty=Tensor[(468), float32] */;
    %372 = %356.0;
    %373 = log10(%366) /* ty=Tensor[(4, 72), float32] */;
    %374 = minimum(%369, %370) /* ty=Tensor[(4, 72), uint64] */;
    (%371, %var_6121, %372, %373, %374)
  };
  %375(%var_6162, %var_6163, %var_6164) /* ty=(Tensor[(468), float32], Tensor[(24, 12), float32], Tensor[(468), float32], Tensor[(4, 72), float32], Tensor[(4, 72), uint64]) */
}

def @func_9122() -> Tensor[(12, 9, 10), int64] {
  %376 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %376.1
}

def @func_11158() -> Tensor[(288), float32] {
  %377 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %377.2
}

def @func_9189() -> (Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) {
  @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */
}

def @func_7615() -> Tensor[(468), float32] {
  @func_7613() /* ty=Tensor[(468), float32] */
}

def @func_12039() -> (Tensor[(4, 28), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  @func_12037() /* ty=(Tensor[(4, 28), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */
}

def @func_6581() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_12872(%var_12870: Tensor[(2, 12, 6), float64], %var_12871: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), float64], Tensor[(468), float32], Tensor[(2, 12, 6), float32], Tensor[(468), float32]) {
  @func_12868(%var_12870, %var_12871) /* ty=(Tensor[(2, 12, 6), float64], Tensor[(468), float32], Tensor[(2, 12, 6), float32], Tensor[(468), float32]) */
}

def @func_12071() -> (Tensor[(4, 28), float64],) {
  %378 = @func_6879() /* ty=(Tensor[(4, 28), float64],) */;
  %379 = %378.0;
  (%379,)
}

def @func_3353() -> (Tensor[(468), float32],) {
  @func_3351() /* ty=(Tensor[(468), float32],) */
}

def @func_4090() -> (Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) {
  @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */
}

def @func_7613() -> Tensor[(468), float32] {
  %380 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %380.1
}

def @func_11(%var_9: Tensor[(12, 13, 3), float32], %var_10: Tensor[(12, 13, 3), float32]) -> (Tensor[(12, 13, 3), bool],) {
  @func_7(%var_9, %var_10) /* ty=(Tensor[(12, 13, 3), bool],) */
}

def @func_9650(%var_9649: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(4, 72), float64]) {
  %392 = fn (%var_9619: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(4, 72), float64]) {
    %381 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
    %382 = cast(%var_9619, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
    %383 = reshape(%382, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %384 = @func_2623(%383) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
    %385 = %384.2;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(288), float64] */;
    %387 = shape_of(%var_9619, dtype="int32") /* ty=Tensor[(2), int32] */;
    %388 = cast(%var_9619, dtype="float64") /* ty=Tensor[(4, 72), float64] */;
    %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %390 = %381.3;
    %391 = power(%388, %389) /* ty=Tensor[(4, 72), float64] */;
    (%390, %391)
  };
  %392(%var_9649) /* ty=(Tensor[(468), float32], Tensor[(4, 72), float64]) */
}

def @func_9984() -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) {
  %406 = fn () -> (Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) {
    %393 = @func_2921() /* ty=(Tensor[(288), float32],) */;
    %394 = cast(meta[relay.Constant][20] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %395 = cast(meta[relay.Constant][20] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %396 = reshape(%394, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
    %397 = reshape(%395, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
    %398 = @func_5914(%396, %397) /* ty=(Tensor[(11, 2, 10), float32],) */;
    %399 = %393.0;
    %400 = cast(%399, dtype="float32") /* ty=Tensor[(288), float32] */;
    %401 = reshape(%400, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %402 = @func_4310(%401) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) */;
    %403 = @func_5170() /* ty=Tensor[(468), float64] */;
    %404 = %398.0;
    %405 = %402.2;
    (%399, %403, %404, meta[relay.Constant][20] /* ty=Tensor[(220), float32] */, %405)
  };
  %406() /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) */
}

def @func_6513(%var_6437: Tensor[(288), float32]) -> (Tensor[(468), float64], Tensor[(468), float32], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16]) {
  %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %408 = cast(meta[relay.Constant][21] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %409 = reshape(%407, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %410 = reshape(%408, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %411 = @func_4008(%409, %410) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %412 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %413 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
  %414 = reshape(%413, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %415 = @func_3650(%414) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %416 = cast(%var_6437, dtype="float32") /* ty=Tensor[(288), float32] */;
  %417 = %412.0;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(468), float32] */;
  %419 = reshape(%416, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %420 = reshape(%418, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %421 = @func_2037(%419, %420) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %422 = %421.3;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(468), float32] */;
  %424 = reshape(%423, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %425 = @func_4161(%424) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %426 = cast(meta[relay.Constant][22] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(512), int16] */, dtype="int16") /* ty=Tensor[(512), int16] */;
  %428 = reshape(%426, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %429 = reshape(%427, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %430 = @func_6040(%428, %429) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %431 = @func_5170() /* ty=Tensor[(468), float64] */;
  %432 = %411.1;
  %433 = %415.0;
  %434 = %425.2;
  %435 = %430.1;
  (%431, %432, meta[relay.Constant][21] /* ty=Tensor[(1080), int64] */, %417, %433, %var_6437, %422, %434, %435, meta[relay.Constant][22] /* ty=Tensor[(512), int16] */)
}

def @func_7107() -> (Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) {
  %436 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %437 = %436.1;
  %438 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %439 = sqrt(%438) /* ty=Tensor[(15, 8, 1), float64] */;
  %440 = cast(%437, dtype="bool") /* ty=Tensor[(468), bool] */;
  %441 = cast(%439, dtype="bool") /* ty=Tensor[(15, 8, 1), bool] */;
  %442 = @func_4752() /* ty=(Tensor[(288), float32],) */;
  %443 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 8, 1), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 1), float64] */;
  %444 = acos(%443) /* ty=Tensor[(15, 8, 1), float64] */;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %446 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%439, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %449 = power(%447, %448) /* ty=Tensor[(15, 8, ?), float32] */;
  %450 = cast(%439, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%449, dtype="float32") /* ty=Tensor[(15, 8, ?), float32] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %454 = minimum(%452, %453) /* ty=Tensor[(15, 8, ?), float32] */;
  %455 = cast(%437, dtype="float64") /* ty=Tensor[(468), float64] */;
  %456 = cast(%454, dtype="float64") /* ty=Tensor[(15, 8, ?), float64] */;
  %457 = less(%440, %441) /* ty=Tensor[(15, 8, 468), bool] */;
  %458 = %442.0;
  %459 = add(%455, %456) /* ty=Tensor[(15, 8, 468), float64] */;
  %460 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%457, %458, %459, %460)
}

def @func_7339() -> Tensor[(468), float32] {
  @func_3779() /* ty=Tensor[(468), float32] */
}

def @func_10539(%var_10537: Tensor[(28, 4), float64]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(28, 4), float64]) {
  %461 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %462 = cast(%var_10537, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %463 = cast(%var_10537, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %464 = %461.0;
  %465 = cast(%464, dtype="float32") /* ty=Tensor[(468), float32] */;
  %466 = reshape(%462, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %467 = reshape(%463, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %468 = reshape(%465, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %469 = @func_842(%466, %467, %468) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %470 = @func_3526() /* ty=Tensor[(468), float32] */;
  %471 = %469.1;
  (%464, %470, %471, %var_10537)
}

def @func_4917() -> (Tensor[(468), float32],) {
  %472 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %473 = %472.3;
  (%473,)
}

def @func_13766() -> (Tensor[(12, 12, 11), int8], Tensor[(1080), int64], uint64, Tensor[(1080), int64]) {
  %482 = fn () -> (Tensor[(12, 12, 11), int8], Tensor[(1080), int64], uint64, Tensor[(1080), int64]) {
    %474 = @func_10030() /* ty=(Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) */;
    %475 = cast(meta[relay.Constant][24] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %476 = cast(meta[relay.Constant][25] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %477 = reshape(%475, newshape=[]) /* ty=uint64 */;
    %478 = reshape(%476, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
    %479 = @func_12139(%477, %478) /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) */;
    %480 = %474.1;
    %481 = %479.6;
    (%480, %481, meta[relay.Constant][24] /* ty=uint64 */, meta[relay.Constant][25] /* ty=Tensor[(1080), int64] */)
  };
  %482() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(1080), int64], uint64, Tensor[(1080), int64]) */
}

def @func_10372() -> (Tensor[(468), float32], Tensor[(12, 14, 9), float32]) {
  %483 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %484 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %485 = log2(%484) /* ty=Tensor[(12, 14, 9), float32] */;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(12, 14, 9), float32] */;
  %487 = %483.0;
  %488 = asin(%486) /* ty=Tensor[(12, 14, 9), float32] */;
  (%487, %488)
}

def @func_3528() -> Tensor[(468), float32] {
  @func_3526() /* ty=Tensor[(468), float32] */
}

def @func_11306(%var_11294: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), float32],) {
  %489 = cast(%var_11294, dtype="float32") /* ty=Tensor[(2, 11, 15), float32] */;
  %490 = asinh(%489) /* ty=Tensor[(2, 11, 15), float32] */;
  (%490,)
}

def @func_9351(%var_9349: uint16, %var_9350: Tensor[(1, 15, 14), uint16]) -> (Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) {
  %496 = fn (%var_9332: uint16, %var_9333: Tensor[(1, 15, 14), uint16]) -> (Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) {
    %491 = cast(%var_9332, dtype="bool") /* ty=bool */;
    %492 = cast(%var_9333, dtype="bool") /* ty=Tensor[(1, 15, 14), bool] */;
    %493 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
    %494 = greater_equal(%491, %492) /* ty=Tensor[(1, 15, 14), bool] */;
    %495 = %493.0;
    (%494, %495)
  };
  %496(%var_9349, %var_9350) /* ty=(Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) */
}

def @func_12810() -> (Tensor[(288), float32], Tensor[(1, 288), float32]) {
  %502 = fn () -> (Tensor[(288), float32], Tensor[(1, 288), float32]) {
    %497 = @func_11158() /* ty=Tensor[(288), float32] */;
    %498 = cast(%497, dtype="float32") /* ty=Tensor[(288), float32] */;
    %499 = reshape(%498, newshape=[1, 288]) /* ty=Tensor[(1, 288), float32] */;
    %500 = @func_3385(%499) /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) */;
    %501 = %500.2;
    (%497, %501)
  };
  %502() /* ty=(Tensor[(288), float32], Tensor[(1, 288), float32]) */
}

def @func_5170() -> Tensor[(468), float64] {
  %503 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %504 = %503.0;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(468), float64] */;
  tan(%505) /* ty=Tensor[(468), float64] */
}

def @func_6302() -> (Tensor[(468), float32],) {
  @func_6300() /* ty=(Tensor[(468), float32],) */
}

def @func_3979(%var_3977: Tensor[(5, 63), float64], %var_3978: Tensor[(5, 63), float64]) -> (Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) {
  %521 = fn (%var_3963: Tensor[(5, 63), float64], %var_3969: Tensor[(5, 63), float64]) -> (Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) {
    %506 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
    %507 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
    %508 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
    %509 = reshape(%507, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %510 = reshape(%508, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %511 = @func_568(%509, %510) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
    %512 = cast(%var_3969, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
    %513 = shape_of(%var_3963, dtype="int32") /* ty=Tensor[(2), int32] */;
    %514 = cast(%var_3963, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %516 = @func_3859() /* ty=(Tensor[(468), float32],) */;
    %517 = %506.0;
    %518 = %511.0;
    %519 = minimum(%514, %515) /* ty=Tensor[(5, 63), float64] */;
    %520 = %516.0;
    (%517, %518, %519, %520)
  };
  %521(%var_3977, %var_3978) /* ty=(Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) */
}

def @func_4773() -> Tensor[(468), float32] {
  %522 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %522.0
}

def @func_5371() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_8413() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_8411() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_8674(%var_8672: Tensor[(7, 11, 5), float64]) -> (Tensor[(7, 11, 5), bool],) {
  @func_8671(%var_8672) /* ty=(Tensor[(7, 11, 5), bool],) */
}

def @func_847(%var_844: Tensor[(4, 4, 7), float64], %var_845: Tensor[(4, 4, 7), float64], %var_846: Tensor[(1, 468), float32]) -> (Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  @func_842(%var_844, %var_845, %var_846) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */
}

def @func_14886() -> Tensor[(4, 28), float64] {
  @func_14884() /* ty=Tensor[(4, 28), float64] */
}

def @func_4252() -> Tensor[(468), float32] {
  @func_4250() /* ty=Tensor[(468), float32] */
}

def @func_14459(%var_14456: Tensor[(112), float64]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
  %523 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %524 = cast(%var_14456, dtype="float64") /* ty=Tensor[(112), float64] */;
  %525 = cast(meta[relay.Constant][27] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %526 = cast(meta[relay.Constant][27] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
  %527 = reshape(%524, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %528 = reshape(%525, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %529 = reshape(%526, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %530 = @func_4519(%527, %528, %529) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %531 = %523.0;
  %532 = %530.0;
  (%531, %532, %var_14456, meta[relay.Constant][27] /* ty=Tensor[(468), bool] */)
}

def @func_4452(%var_4451: Tensor[(78, 6), float32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) {
  %551 = fn (%var_4432: Tensor[(78, 6), float32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) {
    %533 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %534 = @func_3351() /* ty=(Tensor[(468), float32],) */;
    %535 = %534.0;
    %536 = cast(%535, dtype="float32") /* ty=Tensor[(468), float32] */;
    %537 = reshape(%536, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %538 = @func_3332(%537) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
    %539 = cast(%535, dtype="float32") /* ty=Tensor[(468), float32] */;
    %540 = reshape(%539, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %541 = @func_3332(%540) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
    %542 = %541.2;
    %543 = cast(%var_4432, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
    %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(2), int32] */;
    %545 = cast(%542, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
    %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %547 = %533.1;
    %548 = %538.2;
    %549 = less_equal(%545, %546) /* ty=Tensor[(78, 6), bool] */;
    %550 = @func_3694() /* ty=Tensor[(468), float64] */;
    (%547, %535, %548, %549, %550)
  };
  %551(%var_4451) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */
}

def @func_3652(%var_3651: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
  %566 = fn (%var_3645: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
    %552 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %553 = %552.0;
    %554 = cast(%553, dtype="float32") /* ty=Tensor[(468), float32] */;
    %555 = reshape(%554, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %556 = @func_3332(%555) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
    %557 = cast(%var_3645, dtype="float32") /* ty=Tensor[(288), float32] */;
    %558 = cast(%553, dtype="float32") /* ty=Tensor[(468), float32] */;
    %559 = reshape(%557, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %560 = reshape(%558, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %561 = @func_2037(%559, %560) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %562 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %563 = %556.3;
    %564 = %561.3;
    %565 = %562.1;
    (%553, %563, %564, %var_3645, %565)
  };
  %566(%var_3651) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */
}

def @func_7318() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %572 = fn () -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
    %567 = @func_7144() /* ty=(Tensor[(288), float32],) */;
    %568 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %569 = @func_3779() /* ty=Tensor[(468), float32] */;
    %570 = %567.0;
    %571 = %568.1;
    (%569, %570, %571)
  };
  %572() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */
}

def @func_4549() -> (Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) {
  %573 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %574 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %575 = reshape(%573, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %576 = reshape(%574, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
  %577 = @func_4008(%575, %576) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
  %578 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %579 = @func_4250() /* ty=Tensor[(468), float32] */;
  %580 = %577.0;
  %581 = %578.1;
  (%579, %580, meta[relay.Constant][28] /* ty=Tensor[(1080), int64] */, %581)
}

def @func_9124() -> Tensor[(12, 9, 10), int64] {
  @func_9122() /* ty=Tensor[(12, 9, 10), int64] */
}

def @func_11092() -> (Tensor[(12, 12, 11), int8],) {
  @func_11090() /* ty=(Tensor[(12, 12, 11), int8],) */
}

def @func_12185() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %586 = fn () -> (Tensor[(468), float32], Tensor[(468), float32]) {
    %582 = @func_5723() /* ty=(Tensor[(468), float32],) */;
    %583 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
    %584 = %582.0;
    %585 = %583.0;
    (%584, %585)
  };
  %586() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_6067() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_9441() -> (Tensor[(468), float32],) {
  @func_9439() /* ty=(Tensor[(468), float32],) */
}

def @func_14497() -> (Tensor[(468), float32],) {
  @func_14495() /* ty=(Tensor[(468), float32],) */
}

def @func_2040(%var_2038: Tensor[(3, 6, 16), float32], %var_2039: Tensor[(468), float32]) -> (Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) {
  %603 = fn (%var_1952: Tensor[(3, 6, 16), float32], %var_1969: Tensor[(468), float32]) -> (Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) {
    %587 = cast(%var_1952, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
    %588 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %589 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %590 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
    %591 = reshape(%588, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %592 = reshape(%589, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %593 = reshape(%590, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
    %594 = @func_842(%591, %592, %593) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
    %595 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
    %596 = cast(%var_1969, dtype="float32") /* ty=Tensor[(468), float32] */;
    %597 = reshape(%595, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
    %598 = reshape(%596, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
    %599 = @func_7(%597, %598) /* ty=(Tensor[(12, 13, 3), bool],) */;
    %600 = sin(%587) /* ty=Tensor[(3, 6, 16), float32] */;
    %601 = %594.0;
    %602 = %599.0;
    (%600, %601, meta[relay.Constant][29] /* ty=Tensor[(4, 28), float64] */, %var_1969, %602)
  };
  %603(%var_2038, %var_2039) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */
}

def @func_11405() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) {
  %611 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) {
    %604 = @func_6300() /* ty=(Tensor[(468), float32],) */;
    %605 = @func_9823() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
    %606 = @func_9707() /* ty=(Tensor[(18, 60), float64], Tensor[(315), float64]) */;
    %607 = @func_7187() /* ty=Tensor[(468), float32] */;
    %608 = %604.0;
    %609 = %605.2;
    %610 = %606.0;
    (%607, %608, %609, %610)
  };
  %611() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) */
}

def @func_5725() -> (Tensor[(468), float32],) {
  @func_5723() /* ty=(Tensor[(468), float32],) */
}

def @func_8044() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
  %619 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
    %612 = @func_4917() /* ty=(Tensor[(468), float32],) */;
    %613 = @func_3794() /* ty=(Tensor[(468), float32],) */;
    %614 = @func_3779() /* ty=Tensor[(468), float32] */;
    %615 = %612.0;
    %616 = %613.0;
    %617 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
    %618 = @func_3526() /* ty=Tensor[(468), float32] */;
    (%614, %615, %616, %617, %618)
  };
  %619() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */
}

def @func_9568() -> (Tensor[(468), float32],) {
  @func_9566() /* ty=(Tensor[(468), float32],) */
}

def @func_4346(%var_4333: uint32, %var_4334: Tensor[(3, 1, 4), uint32]) -> (Tensor[(3, 1, 4), float64],) {
  %620 = cast(%var_4333, dtype="bool") /* ty=bool */;
  %621 = cast(%var_4334, dtype="bool") /* ty=Tensor[(3, 1, 4), bool] */;
  %622 = greater(%620, %621) /* ty=Tensor[(3, 1, 4), bool] */;
  %623 = cast(%var_4333, dtype="float64") /* ty=float64 */;
  %624 = cast(%622, dtype="float64") /* ty=Tensor[(3, 1, 4), float64] */;
  %625 = floor_divide(%623, %624) /* ty=Tensor[(3, 1, 4), float64] */;
  (%625,)
}

def @func_4775() -> Tensor[(468), float32] {
  @func_4773() /* ty=Tensor[(468), float32] */
}

def @func_7259() -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) {
  %636 = fn () -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) {
    %626 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %627 = cast(meta[relay.Constant][30] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
    %628 = cast(meta[relay.Constant][30] /* ty=Tensor[(1584), int8] */, dtype="int8") /* ty=Tensor[(1584), int8] */;
    %629 = cast(meta[relay.Constant][31] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %630 = reshape(%627, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), int8] */;
    %631 = reshape(%628, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), int8] */;
    %632 = reshape(%629, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %633 = @func_4224(%630, %631, %632) /* ty=(Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
    %634 = %626.1;
    %635 = %633.0;
    (%634, %635, meta[relay.Constant][30] /* ty=Tensor[(1584), int8] */, meta[relay.Constant][31] /* ty=Tensor[(832), float32] */)
  };
  %636() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */
}

def @func_13882(%var_13860: Tensor[(1080), int64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32]) {
  %637 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %638 = @func_7144() /* ty=(Tensor[(288), float32],) */;
  %639 = %637.1;
  %640 = cast(%639, dtype="float32") /* ty=Tensor[(468), float32] */;
  %641 = reshape(%640, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %642 = @func_4450(%641) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
  %643 = @func_13274() /* ty=Tensor[(468), float32] */;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(468), float32] */;
  %645 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %646 = cast(meta[relay.Constant][33] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %647 = cast(%var_13860, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %648 = reshape(%644, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %649 = reshape(%645, newshape=[]) /* ty=uint64 */;
  %650 = reshape(%646, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
  %651 = reshape(%647, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %652 = @func_8835(%648, %649, %650, %651) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %653 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %654 = @func_10662() /* ty=Tensor[(288), float32] */;
  %655 = @func_10078() /* ty=Tensor[(468), float32] */;
  %656 = %638.0;
  %657 = %642.4;
  %658 = %652.9;
  %659 = %653.0;
  %660 = @func_13194() /* ty=Tensor[(468), float32] */;
  (%639, %654, %655, %656, %643, %657, %658, meta[relay.Constant][32] /* ty=uint64 */, meta[relay.Constant][33] /* ty=Tensor[(1280), uint64] */, %var_13860, %659, %660)
}

def @func_6881() -> (Tensor[(4, 28), float64],) {
  @func_6879() /* ty=(Tensor[(4, 28), float64],) */
}

def @func_10374() -> (Tensor[(468), float32], Tensor[(12, 14, 9), float32]) {
  @func_10372() /* ty=(Tensor[(468), float32], Tensor[(12, 14, 9), float32]) */
}

def @func_7856() -> (Tensor[(468), float32],) {
  %662 = fn () -> (Tensor[(468), float32],) {
    %661 = @func_6711() /* ty=Tensor[(468), float32] */;
    (%661,)
  };
  %662() /* ty=(Tensor[(468), float32],) */
}

def @func_13117() -> (Tensor[(468), float32],) {
  @func_13115() /* ty=(Tensor[(468), float32],) */
}

def @func_5779(%var_5770: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) {
  %663 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %664 = %663.0;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(468), float32] */;
  %666 = reshape(%665, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %667 = @func_4161(%666) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %668 = cast(%var_5770, dtype="float32") /* ty=Tensor[(4, 72), float32] */;
  %669 = reshape(%668, newshape=[1, 288]) /* ty=Tensor[(1, 288), float32] */;
  %670 = @func_3385(%669) /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) */;
  %671 = %667.2;
  %672 = %670.1;
  (%664, %671, %672, %var_5770)
}

def @func_7189() -> Tensor[(468), float32] {
  @func_7187() /* ty=Tensor[(468), float32] */
}

def @func_3859() -> (Tensor[(468), float32],) {
  %673 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %674 = %673.0;
  (%674,)
}

def @func_12666(%var_12625: int32, %var_12626: Tensor[(13, 8, 12), int32], %var_12647: Tensor[(5, 63), float64]) -> (Tensor[(13, 8, 12), int32], Tensor[(468), float32], Tensor[(5, 63), float64]) {
  %675 = cast(%var_12625, dtype="int32") /* ty=int32 */;
  %676 = cast(%var_12626, dtype="int32") /* ty=Tensor[(13, 8, 12), int32] */;
  %677 = cast(%var_12647, dtype="float64") /* ty=Tensor[(5, 63), float64] */;
  %678 = reshape(%677, newshape=[315]) /* ty=Tensor[(315), float64] */;
  %679 = @func_6237(%678) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) */;
  %680 = logical_xor(%675, %676) /* ty=Tensor[(13, 8, 12), int32] */;
  %681 = %679.2;
  (%680, %681, %var_12647)
}

def @func_11142() -> Tensor[(468), float32] {
  %682 = fn () -> Tensor[(468), float32] {
    @func_10501() /* ty=Tensor[(468), float32] */
  };
  %682() /* ty=Tensor[(468), float32] */
}

def @func_10542(%var_10540: Tensor[(28, 4), float64]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(28, 4), float64]) {
  @func_10539(%var_10540) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(28, 4), float64]) */
}

def @func_9484(%var_9483: Tensor[(12, 10, 12), float32]) -> (Tensor[(12, 10, 12), float32], Tensor[(288), float32], Tensor[(288, 1), float32], Tensor[(12, 10, 12), float32]) {
  %694 = fn (%var_9463: Tensor[(12, 10, 12), float32]) -> (Tensor[(12, 10, 12), float32], Tensor[(288), float32], Tensor[(288, 1), float32], Tensor[(12, 10, 12), float32]) {
    %683 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
    %684 = shape_of(%var_9463, dtype="int32") /* ty=Tensor[(3), int32] */;
    %685 = cast(%var_9463, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
    %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %687 = cast(meta[relay.Constant][35] /* ty=Tensor[(288, 1), float32] */, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
    %688 = reshape(%687, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %689 = @func_3650(%688) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
    %690 = cast(%var_9463, dtype="float32") /* ty=Tensor[(12, 10, 12), float32] */;
    %691 = floor_mod(%685, %686) /* ty=Tensor[(12, 10, 12), float32] */;
    %692 = %689.3;
    %693 = sin(%690) /* ty=Tensor[(12, 10, 12), float32] */;
    (%691, %692, meta[relay.Constant][35] /* ty=Tensor[(288, 1), float32] */, %693)
  };
  %694(%var_9483) /* ty=(Tensor[(12, 10, 12), float32], Tensor[(288), float32], Tensor[(288, 1), float32], Tensor[(12, 10, 12), float32]) */
}

def @func_7560() -> Tensor[(468), float32] {
  %696 = fn () -> Tensor[(468), float32] {
    %695 = @func_7378() /* ty=(Tensor[(468), float32],) */;
    %695.0
  };
  %696() /* ty=Tensor[(468), float32] */
}

def @func_13535() -> (Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) {
  %703 = fn () -> (Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) {
    %697 = cast(-1.80437f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %698 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 1), float32] */;
    %699 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 3, 1), float32] */, dtype="uint64") /* ty=Tensor[(3, 3, 1), uint64] */;
    %700 = cast(-1.80437f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
    %701 = floor_mod(%697, %698) /* ty=Tensor[(3, 3, 1), float32] */;
    %702 = multiply(%699, %700) /* ty=Tensor[(3, 3, 1), uint64] */;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) */
}

def @func_5989() -> Tensor[(468), float32] {
  %704 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %704.0
}

def @func_3769(%var_3767: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), float32] {
  @func_3766(%var_3767) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_8671(%var_8661: Tensor[(7, 11, 5), float64]) -> (Tensor[(7, 11, 5), bool],) {
  %705 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
  %706 = %705.0;
  %707 = cast(%var_8661, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = less(%709, %710) /* ty=Tensor[(7, 11, 5), bool] */;
  (%711,)
}

def @func_10895() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(12, 9, 10), bool]) {
  %712 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %713 = @func_9531() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %714 = @func_9122() /* ty=Tensor[(12, 9, 10), int64] */;
  %715 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 9, 10), int64] */, dtype="bool") /* ty=Tensor[(12, 9, 10), bool] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="bool") /* ty=Tensor[(12, 9, 10), bool] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %719 = %712.0;
  %720 = %713.1;
  %721 = less(%717, %718) /* ty=Tensor[(12, 9, 10), bool] */;
  (%719, %720, %721)
}

def @func_4754() -> (Tensor[(288), float32],) {
  @func_4752() /* ty=(Tensor[(288), float32],) */
}

def @func_8446() -> Tensor[(288), float32] {
  %723 = fn () -> Tensor[(288), float32] {
    %722 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
    %722.1
  };
  %723() /* ty=Tensor[(288), float32] */
}

def @func_7014() -> (Tensor[(468), float32],) {
  %724 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %725 = %724.1;
  (%725,)
}

def @func_3385(%var_3376: Tensor[(1, 288), float32]) -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) {
  %726 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %727 = %726.0;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %729 = sigmoid(%728) /* ty=Tensor[(4, 28), float64] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %731 = cast(%var_3376, dtype="float32") /* ty=Tensor[(1, 288), float32] */;
  %732 = reshape(%731, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %733 = @func_2623(%732) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %734 = sinh(%730) /* ty=Tensor[(4, 28), float64] */;
  %735 = %733.2;
  (%734, %735, %var_3376)
}

def @func_6237(%var_6213: Tensor[(315), float64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) {
  %736 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %737 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %738 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %739 = cast(%var_6213, dtype="float64") /* ty=Tensor[(315), float64] */;
  %740 = cast(%var_6213, dtype="float64") /* ty=Tensor[(315), float64] */;
  %741 = reshape(%739, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %742 = reshape(%740, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
  %743 = @func_568(%741, %742) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
  %744 = %736.0;
  %745 = %737.1;
  %746 = %738.1;
  %747 = %743.2;
  (%744, %745, %746, %747, %var_6213)
}

def @func_11090() -> (Tensor[(12, 12, 11), int8],) {
  %748 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %749 = %748.0;
  (%749,)
}

def @func_13344() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(192), uint32]) {
  @func_13342() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(192), uint32]) */
}

def @func_9187() -> (Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) {
  %750 = @func_8043() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */;
  %751 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %752 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %753 = %750.3;
  %754 = %751.0;
  %755 = %752.0;
  (%753, %754, %755)
}

def @func_14427() -> Tensor[(12, 12, 11), int8] {
  %756 = @func_11090() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %756.0
}

def @func_8540() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) {
  %757 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %758 = cast(meta[relay.Constant][38] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %759 = cast(meta[relay.Constant][38] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %760 = reshape(%758, newshape=[5, 63]) /* ty=Tensor[(5, 63), float64] */;
  %761 = reshape(%759, newshape=[5, 63]) /* ty=Tensor[(5, 63), float64] */;
  %762 = @func_3976(%760, %761) /* ty=(Tensor[(288), float32], Tensor[(3, 7, 15), float64], Tensor[(5, 63), float64], Tensor[(468), float32]) */;
  %763 = %757.0;
  %764 = %762.3;
  (%763, %764, meta[relay.Constant][38] /* ty=Tensor[(315), float64] */)
}

def @func_9762(%var_9760: Tensor[(14, 12, 9), uint64], %var_9761: Tensor[(14, 12, 9), uint64]) -> Tensor[(14, 12, 9), bool] {
  %769 = fn (%var_9753: Tensor[(14, 12, 9), uint64], %var_9754: Tensor[(14, 12, 9), uint64]) -> Tensor[(14, 12, 9), bool] {
    %765 = cast(%var_9754, dtype="bool") /* ty=Tensor[(14, 12, 9), bool] */;
    %766 = shape_of(%var_9753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %767 = cast(%var_9753, dtype="bool") /* ty=Tensor[(14, 12, 9), bool] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%767, %768) /* ty=Tensor[(14, 12, 9), bool] */
  };
  %769(%var_9760, %var_9761) /* ty=Tensor[(14, 12, 9), bool] */
}

def @func_3954(%var_3917: Tensor[(4, 28), float64]) -> (Tensor[(4, 28), bool],) {
  %770 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %771 = %770.0;
  %772 = cast(%var_3917, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%771, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %776 = logical_and(%774, %775) /* ty=Tensor[(4, 28), bool] */;
  (%776,)
}

def @func_4350(%var_4348: uint32, %var_4349: Tensor[(3, 1, 4), uint32]) -> (Tensor[(3, 1, 4), float64],) {
  @func_4346(%var_4348, %var_4349) /* ty=(Tensor[(3, 1, 4), float64],) */
}

def @func_9504() -> (Tensor[(468), float32],) {
  %777 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %778 = %777.0;
  (%778,)
}

def @func_4008(%var_3993: Tensor[(12, 9, 10), int64], %var_3994: Tensor[(12, 9, 10), int64]) -> (Tensor[(12, 9, 10), int64], Tensor[(468), float32]) {
  %779 = cast(%var_3994, dtype="int64") /* ty=Tensor[(12, 9, 10), int64] */;
  %780 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_3993, dtype="int64") /* ty=Tensor[(12, 9, 10), int64] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %783 = bitwise_xor(%781, %782) /* ty=Tensor[(12, 9, 10), int64] */;
  %784 = @func_3437() /* ty=Tensor[(468), float32] */;
  (%783, %784)
}

def @func_4998() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %785 = @func_3794() /* ty=(Tensor[(468), float32],) */;
  %786 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(288), float32] */;
  %789 = reshape(%788, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %790 = @func_3650(%789) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %791 = %785.0;
  %792 = %790.0;
  (%791, %787, %792)
}

def @func_12671(%var_12668: int32, %var_12669: Tensor[(13, 8, 12), int32], %var_12670: Tensor[(5, 63), float64]) -> (Tensor[(13, 8, 12), int32], Tensor[(468), float32], Tensor[(5, 63), float64]) {
  @func_12666(%var_12668, %var_12669, %var_12670) /* ty=(Tensor[(13, 8, 12), int32], Tensor[(468), float32], Tensor[(5, 63), float64]) */
}

def @func_12407() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
  %793 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %794 = @func_6721() /* ty=Tensor[(15, 15, 10), float64] */;
  %795 = %793.0;
  (%794, %795)
}

def @func_13275() -> Tensor[(468), float32] {
  %797 = fn () -> Tensor[(468), float32] {
    %796 = @func_8411() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %796.1
  };
  %797() /* ty=Tensor[(468), float32] */
}

def @func_3780() -> Tensor[(468), float32] {
  %799 = fn () -> Tensor[(468), float32] {
    %798 = @func_3351() /* ty=(Tensor[(468), float32],) */;
    %798.0
  };
  %799() /* ty=Tensor[(468), float32] */
}

def @func_5969() -> (Tensor[(468), float32], Tensor[(468), uint64]) {
  @func_5967() /* ty=(Tensor[(468), float32], Tensor[(468), uint64]) */
}

def @func_5723() -> (Tensor[(468), float32],) {
  %800 = @func_4108() /* ty=Tensor[(468), float32] */;
  (%800,)
}

def @func_12143(%var_12141: uint64, %var_12142: Tensor[(1080), int64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) {
  @func_12139(%var_12141, %var_12142) /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) */
}

def @func_12764(%var_12739: Tensor[(112), bool]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(112), bool]) {
  %801 = @func_8878() /* ty=(Tensor[(468), float32], Tensor[(288), float32]) */;
  %802 = cast(meta[relay.Constant][39] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %803 = cast(%var_12739, dtype="bool") /* ty=Tensor[(112), bool] */;
  %804 = reshape(%802, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %805 = reshape(%803, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), bool] */;
  %806 = @func_8908(%804, %805) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) */;
  %807 = %801.0;
  %808 = %806.2;
  (%807, %808, meta[relay.Constant][39] /* ty=Tensor[(288), float32] */, %var_12739)
}

def @func_5570() -> (Tensor[(468), float32],) {
  %809 = @func_3779() /* ty=Tensor[(468), float32] */;
  (%809,)
}

def @func_8273(%var_8269: uint64, %var_8270: Tensor[(16, 8, 10), uint64], %var_8271: Tensor[(468), float32], %var_8272: Tensor[(1080), int64]) -> (Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) {
  %829 = fn (%var_8225: uint64, %var_8226: Tensor[(16, 8, 10), uint64], %var_8242: Tensor[(468), float32], %var_8256: Tensor[(1080), int64]) -> (Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) {
    %810 = cast(%var_8225, dtype="uint64") /* ty=uint64 */;
    %811 = cast(%var_8226, dtype="uint64") /* ty=Tensor[(16, 8, 10), uint64] */;
    %812 = cast(%var_8242, dtype="float32") /* ty=Tensor[(468), float32] */;
    %813 = reshape(%812, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %814 = @func_4450(%813) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
    %815 = cast(%var_8256, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %816 = cast(%var_8256, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %817 = reshape(%815, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
    %818 = reshape(%816, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
    %819 = @func_4008(%817, %818) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
    %820 = %814.2;
    %821 = cast(%820, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
    %822 = reshape(%821, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %823 = @func_3332(%822) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
    %824 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
    %825 = multiply(%810, %811) /* ty=Tensor[(16, 8, 10), uint64] */;
    %826 = %819.0;
    %827 = %823.4;
    %828 = %824.2;
    (%825, %820, %var_8242, %826, %var_8256, %827, %828)
  };
  %829(%var_8269, %var_8270, %var_8271, %var_8272) /* ty=(Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) */
}

def @func_13066() -> (Tensor[(7, 11, 5), float64],) {
  @func_13064() /* ty=(Tensor[(7, 11, 5), float64],) */
}

def @func_13348() -> (Tensor[(468), float32],) {
  %832 = fn () -> (Tensor[(468), float32],) {
    %830 = @func_3859() /* ty=(Tensor[(468), float32],) */;
    %831 = %830.0;
    (%831,)
  };
  %832() /* ty=(Tensor[(468), float32],) */
}

def @func_5430(%var_5429: Tensor[(468), bool]) -> (Tensor[(1080), int64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
  %847 = fn (%var_5426: Tensor[(468), bool]) -> (Tensor[(1080), int64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
    %833 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
    %834 = cast(meta[relay.Constant][40] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %835 = reshape(%834, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %836 = @func_2623(%835) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
    %837 = cast(meta[relay.Constant][41] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %838 = cast(%var_5426, dtype="bool") /* ty=Tensor[(468), bool] */;
    %839 = cast(%var_5426, dtype="bool") /* ty=Tensor[(468), bool] */;
    %840 = reshape(%837, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %841 = reshape(%838, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
    %842 = reshape(%839, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
    %843 = @func_4519(%840, %841, %842) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
    %844 = %833.2;
    %845 = %836.2;
    %846 = %843.0;
    (%844, %845, meta[relay.Constant][40] /* ty=Tensor[(288), float32] */, %846, meta[relay.Constant][41] /* ty=Tensor[(112), float64] */, %var_5426)
  };
  %847(%var_5429) /* ty=(Tensor[(1080), int64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) */
}

def @func_14462(%var_14460: Tensor[(112), float64]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) {
  @func_14459(%var_14460) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), bool]) */
}

def @func_2626(%var_2624: Tensor[(288), float32]) -> (Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) {
  @func_2623(%var_2624) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */
}

def @func_14336() -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(6, 78), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  @func_14334() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(6, 78), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_8642() -> (Tensor[(288), float32],) {
  %848 = @func_5878() /* ty=(Tensor[(288), float32],) */;
  %849 = %848.0;
  (%849,)
}

def @func_5369() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %850 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %851 = %850.0;
  %852 = @func_3194() /* ty=Tensor[(468), float32] */;
  (%851, %852)
}

def @func_13592() -> Tensor[(468), float32] {
  %853 = @func_7014() /* ty=(Tensor[(468), float32],) */;
  %853.0
}

def @func_5991() -> Tensor[(468), float32] {
  @func_5989() /* ty=Tensor[(468), float32] */
}

def @func_4250() -> Tensor[(468), float32] {
  %854 = @func_3859() /* ty=(Tensor[(468), float32],) */;
  %854.0
}

def @func_13403(%var_13402: uint8) -> (Tensor[(11, 2, 10), float32], Tensor[(9, 4, 468), float64], Tensor[(11, 2, 10), float32]) {
  %876 = fn (%var_13356: uint8) -> (Tensor[(11, 2, 10), float32], Tensor[(9, 4, 468), float64], Tensor[(11, 2, 10), float32]) {
    %855 = @func_9983() /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(11, 2, 10), float32], Tensor[(220), float32], Tensor[(15, 15, 10), float32]) */;
    %856 = cast(%var_13356, dtype="uint8") /* ty=uint8 */;
    %857 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 4, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
    %858 = logical_xor(%856, %857) /* ty=Tensor[(9, 4, 1), uint8] */;
    %859 = @func_10616() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
    %860 = %859.0;
    %861 = cast(%860, dtype="uint8") /* ty=Tensor[(468), uint8] */;
    %862 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 4, 1), uint8] */, dtype="uint8") /* ty=Tensor[(9, 4, 1), uint8] */;
    %863 = maximum(%861, %862) /* ty=Tensor[(9, 4, 468), uint8] */;
    %864 = cast(%858, dtype="uint16") /* ty=Tensor[(9, 4, 1), uint16] */;
    %865 = cast(%863, dtype="uint16") /* ty=Tensor[(9, 4, 468), uint16] */;
    %866 = multiply(%864, %865) /* ty=Tensor[(9, 4, 468), uint16] */;
    %867 = cast(%866, dtype="float64") /* ty=Tensor[(9, 4, 468), float64] */;
    %868 = %855.2;
    %869 = cast(%868, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
    %870 = cast(%868, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
    %871 = reshape(%869, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
    %872 = reshape(%870, newshape=[11, 2, 10]) /* ty=Tensor[(11, 2, 10), float32] */;
    %873 = @func_5914(%871, %872) /* ty=(Tensor[(11, 2, 10), float32],) */;
    %874 = erf(%867) /* ty=Tensor[(9, 4, 468), float64] */;
    %875 = %873.0;
    (%868, %874, %875)
  };
  %876(%var_13402) /* ty=(Tensor[(11, 2, 10), float32], Tensor[(9, 4, 468), float64], Tensor[(11, 2, 10), float32]) */
}

def @func_7226() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_3957(%var_3955: Tensor[(4, 28), float64]) -> (Tensor[(4, 28), bool],) {
  @func_3954(%var_3955) /* ty=(Tensor[(4, 28), bool],) */
}

def @func_6197() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
  %883 = fn () -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) {
    %877 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %878 = cast(meta[relay.Constant][43] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %879 = reshape(%878, newshape=[4, 72]) /* ty=Tensor[(4, 72), float32] */;
    %880 = @func_5779(%879) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) */;
    %881 = %877.0;
    %882 = %880.2;
    (%881, %882, meta[relay.Constant][43] /* ty=Tensor[(288), float32] */)
  };
  %883() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */
}

def @func_3861() -> (Tensor[(468), float32],) {
  @func_3859() /* ty=(Tensor[(468), float32],) */
}

def @func_10103() -> (Tensor[(288), float32],) {
  %886 = fn () -> (Tensor[(288), float32],) {
    %884 = @func_8642() /* ty=(Tensor[(288), float32],) */;
    %885 = %884.0;
    (%885,)
  };
  %886() /* ty=(Tensor[(288), float32],) */
}

def @func_6712() -> Tensor[(468), float32] {
  %888 = fn () -> Tensor[(468), float32] {
    %887 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %887.0
  };
  %888() /* ty=Tensor[(468), float32] */
}

def @func_2921() -> (Tensor[(288), float32],) {
  %889 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %890 = %889.1;
  (%890,)
}

def @func_8089(%var_8088: Tensor[(468), float32]) -> (Tensor[(468), int64],) {
  %897 = fn (%var_8077: Tensor[(468), float32]) -> (Tensor[(468), int64],) {
    %891 = @func_4108() /* ty=Tensor[(468), float32] */;
    %892 = cast(%var_8077, dtype="int64") /* ty=Tensor[(468), int64] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(1), int32] */;
    %894 = cast(%891, dtype="int64") /* ty=Tensor[(468), int64] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?), int64] */;
    %896 = minimum(%894, %895) /* ty=Tensor[(468), int64] */;
    (%896,)
  };
  %897(%var_8088) /* ty=(Tensor[(468), int64],) */
}

def @func_14104(%var_14100: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(12, 13, 3), bool], Tensor[(112), float64], Tensor[(468), float32]) {
  %898 = cast(meta[relay.Constant][44] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %899 = cast(meta[relay.Constant][44] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %900 = cast(%var_14100, dtype="float32") /* ty=Tensor[(468), float32] */;
  %901 = reshape(%898, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %902 = reshape(%899, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %903 = reshape(%900, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %904 = @func_842(%901, %902, %903) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %905 = @func_8445() /* ty=Tensor[(288), float32] */;
  %906 = %904.1;
  (%905, %906, meta[relay.Constant][44] /* ty=Tensor[(112), float64] */, %var_14100)
}

def @func_13064() -> (Tensor[(7, 11, 5), float64],) {
  %907 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
  %908 = %907.0;
  (%908,)
}

def @func_11003() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(144, 2), float32]) {
  %917 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(144, 2), float32]) {
    %909 = @func_9504() /* ty=(Tensor[(468), float32],) */;
    %910 = @func_9329() /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */;
    %911 = cast(meta[relay.Constant][45] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %912 = reshape(%911, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %913 = @func_3650(%912) /* ty=(Tensor[(468), float32], Tensor[(1, 468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
    %914 = %909.0;
    %915 = %910.3;
    %916 = %913.0;
    (%914, %915, %916, meta[relay.Constant][45] /* ty=Tensor[(144, 2), float32] */)
  };
  %917() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(144, 2), float32]) */
}

def @func_4088() -> (Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) {
  %918 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %919 = cast(meta[relay.Constant][46] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %920 = reshape(%919, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %921 = @func_2623(%920) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %922 = %918.2;
  %923 = %921.0;
  (%922, %923, meta[relay.Constant][46] /* ty=Tensor[(288), float32] */)
}

def @func_14050() -> (Tensor[(468), float32],) {
  @func_14048() /* ty=(Tensor[(468), float32],) */
}

def @func_13429() -> Tensor[(468), float32] {
  %924 = @func_7855() /* ty=(Tensor[(468), float32],) */;
  %924.0
}

def @func_3195() -> Tensor[(468), float32] {
  %926 = fn () -> Tensor[(468), float32] {
    %925 = @func_2967() /* ty=(Tensor[(468), float32],) */;
    %925.0
  };
  %926() /* ty=Tensor[(468), float32] */
}

def @func_9456() -> (Tensor[(288), float32],) {
  %929 = fn () -> (Tensor[(288), float32],) {
    %927 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
    %928 = %927.1;
    (%928,)
  };
  %929() /* ty=(Tensor[(288), float32],) */
}

def @func_9243() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(18, 60), bool], Tensor[(468), float32], Tensor[(16, 4, 8), int16], Tensor[(512), int16]) {
  @func_9241() /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(18, 60), bool], Tensor[(468), float32], Tensor[(16, 4, 8), int16], Tensor[(512), int16]) */
}

def @func_14037() -> Tensor[(468), float32] {
  %931 = fn () -> Tensor[(468), float32] {
    %930 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %930.0
  };
  %931() /* ty=Tensor[(468), float32] */
}

def @func_6849() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */
}

def @func_7(%var_0: Tensor[(12, 13, 3), float32], %var_1: Tensor[(12, 13, 3), float32]) -> (Tensor[(12, 13, 3), bool],) {
  %932 = cast(%var_1, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %933 = shape_of(%var_0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_0, dtype="bool") /* ty=Tensor[(12, 13, 3), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %936 = greater(%934, %935) /* ty=Tensor[(12, 13, 3), bool] */;
  (%936,)
}

def @func_3439() -> Tensor[(468), float32] {
  @func_3437() /* ty=Tensor[(468), float32] */
}

def @func_10982() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %942 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
    %937 = @func_8175() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8]) */;
    %938 = @func_3859() /* ty=(Tensor[(468), float32],) */;
    %939 = %937.0;
    %940 = @func_6711() /* ty=Tensor[(468), float32] */;
    %941 = %938.0;
    (%939, %940, %941)
  };
  %942() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_14642(%var_14640: Tensor[(78, 6), bool]) -> (Tensor[(315), float64], Tensor[(468), float32], Tensor[(112), float64], Tensor[(78, 6), bool]) {
  @func_14639(%var_14640) /* ty=(Tensor[(315), float64], Tensor[(468), float32], Tensor[(112), float64], Tensor[(78, 6), bool]) */
}

def @func_14821() -> (Tensor[(12, 12, 11), int8],) {
  %943 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
  %944 = %943.0;
  (%944,)
}

def @func_9709() -> (Tensor[(18, 60), float64], Tensor[(315), float64]) {
  @func_9707() /* ty=(Tensor[(18, 60), float64], Tensor[(315), float64]) */
}

def @func_7016() -> (Tensor[(468), float32],) {
  @func_7014() /* ty=(Tensor[(468), float32],) */
}

def @func_12868(%var_12837: Tensor[(2, 12, 6), float64], %var_12838: Tensor[(2, 12, 6), float64]) -> (Tensor[(2, 12, 6), float64], Tensor[(468), float32], Tensor[(2, 12, 6), float32], Tensor[(468), float32]) {
  %945 = cast(%var_12838, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %946 = shape_of(%var_12837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %947 = cast(%var_12837, dtype="float64") /* ty=Tensor[(2, 12, 6), float64] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %949 = @func_11404() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), float64]) */;
  %950 = cast(%var_12837, dtype="float32") /* ty=Tensor[(2, 12, 6), float32] */;
  %951 = @func_6196() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(288), float32]) */;
  %952 = floor_mod(%947, %948) /* ty=Tensor[(2, 12, 6), float64] */;
  %953 = %949.0;
  %954 = asin(%950) /* ty=Tensor[(2, 12, 6), float32] */;
  %955 = %951.0;
  (%952, %953, %954, %955)
}

def @func_6847() -> (Tensor[(288), float32], Tensor[(468), float32]) {
  %956 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %957 = %956.3;
  %958 = @func_4250() /* ty=Tensor[(468), float32] */;
  (%957, %958)
}

def @func_12052() -> Tensor[(288), float32] {
  %959 = fn () -> Tensor[(288), float32] {
    @func_4464() /* ty=Tensor[(288), float32] */
  };
  %959() /* ty=Tensor[(288), float32] */
}

def @func_11160() -> Tensor[(288), float32] {
  @func_11158() /* ty=Tensor[(288), float32] */
}

def @func_5878() -> (Tensor[(288), float32],) {
  %960 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %961 = %960.1;
  (%961,)
}

def @func_9932() -> (Tensor[(468), float32],) {
  @func_9930() /* ty=(Tensor[(468), float32],) */
}

def @func_13431() -> Tensor[(468), float32] {
  @func_13429() /* ty=Tensor[(468), float32] */
}

def @func_3332(%var_3321: Tensor[(78, 6), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) {
  %962 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 9, 3), float32] */;
  %963 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %964 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %965 = reshape(%963, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %966 = reshape(%964, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %967 = @func_7(%965, %966) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %968 = cast(meta[relay.Constant][48] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %969 = cast(meta[relay.Constant][48] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %970 = cast(%var_3321, dtype="float32") /* ty=Tensor[(78, 6), float32] */;
  %971 = reshape(%968, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %972 = reshape(%969, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
  %973 = reshape(%970, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
  %974 = @func_842(%971, %972, %973) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
  %975 = cosh(%962) /* ty=Tensor[(3, 9, 3), float32] */;
  %976 = %967.0;
  %977 = %974.2;
  (%975, %976, %var_3321, %977, meta[relay.Constant][48] /* ty=Tensor[(112), float64] */)
}

def @func_13047() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(12, 12, 11), int8]) {
  @func_13045() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(12, 12, 11), int8]) */
}

def @func_10080() -> Tensor[(468), float32] {
  @func_10078() /* ty=Tensor[(468), float32] */
}

def @func_6879() -> (Tensor[(4, 28), float64],) {
  %978 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %979 = %978.0;
  (%979,)
}

def @func_4310(%var_4287: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) {
  %980 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %981 = cast(%var_4287, dtype="float32") /* ty=Tensor[(288), float32] */;
  %982 = reshape(%981, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %983 = @func_2623(%982) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
  %984 = %983.0;
  %985 = cast(%984, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %986 = %980.0;
  %987 = cosh(%985) /* ty=Tensor[(15, 15, 10), float32] */;
  (%986, %var_4287, %987)
}

def @func_8911(%var_8909: Tensor[(288), float32], %var_8910: Tensor[(4, 4, 7), bool]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) {
  %1001 = fn (%var_8888: Tensor[(288), float32], %var_8900: Tensor[(4, 4, 7), bool]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) {
    %988 = cast(%var_8888, dtype="float32") /* ty=Tensor[(288), float32] */;
    %989 = @func_5626() /* ty=Tensor[(468), float32] */;
    %990 = cast(%989, dtype="float32") /* ty=Tensor[(468), float32] */;
    %991 = reshape(%988, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %992 = reshape(%990, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %993 = @func_2037(%991, %992) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %994 = %993.1;
    %995 = cast(%var_8900, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
    %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %997 = cast(%994, dtype="float32") /* ty=Tensor[(4, 4, 7), float32] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %999 = @func_3437() /* ty=Tensor[(468), float32] */;
    %1000 = divide(%997, %998) /* ty=Tensor[(4, 4, 7), float32] */;
    (%989, %var_8888, %999, %1000)
  };
  %1001(%var_8909, %var_8910) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(4, 4, 7), float32]) */
}

def @func_8994(%var_8992: Tensor[(512), int16]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) {
  @func_8991(%var_8992) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) */
}

def @func_13195() -> Tensor[(468), float32] {
  %1003 = fn () -> Tensor[(468), float32] {
    %1002 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1002.0
  };
  %1003() /* ty=Tensor[(468), float32] */
}

def @func_5918(%var_5916: Tensor[(11, 2, 10), float32], %var_5917: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32],) {
  @func_5914(%var_5916, %var_5917) /* ty=(Tensor[(11, 2, 10), float32],) */
}

def @func_374(%var_372: Tensor[(13, 15, 15), bool], %var_373: Tensor[(13, 15, 15), bool]) -> Tensor[(13, 15, 15), bool] {
  %1008 = fn (%var_345: Tensor[(13, 15, 15), bool], %var_346: Tensor[(13, 15, 15), bool]) -> Tensor[(13, 15, 15), bool] {
    %1004 = cast(%var_346, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
    %1005 = shape_of(%var_345, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1006 = cast(%var_345, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
    %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1006, %1007) /* ty=Tensor[(13, 15, 15), bool] */
  };
  %1008(%var_372, %var_373) /* ty=Tensor[(13, 15, 15), bool] */
}

def @func_7966() -> (Tensor[(7, 11, 5), float64],) {
  %1009 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
  %1010 = sinh(%1009) /* ty=Tensor[(7, 11, 5), float64] */;
  (%1010,)
}

def @func_5967() -> (Tensor[(468), float32], Tensor[(468), uint64]) {
  %1011 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1012 = @func_4958() /* ty=Tensor[(468), float32] */;
  %1013 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1016 = shape_of(%1012, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1017 = cast(%1012, dtype="uint64") /* ty=Tensor[(468), uint64] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1019 = %1011.0;
  %1020 = logical_xor(%1017, %1018) /* ty=Tensor[(468), uint64] */;
  (%1019, %1020)
}

def @func_10196(%var_10191: Tensor[(315), float64], %var_10192: Tensor[(5, 585), bool], %var_10193: uint64, %var_10194: Tensor[(320, 4), uint64], %var_10195: Tensor[(90, 12), int64]) -> (Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) {
  %1044 = fn (%var_10155: Tensor[(315), float64], %var_10174: Tensor[(5, 585), bool], %var_10180: uint64, %var_10181: Tensor[(320, 4), uint64], %var_10182: Tensor[(90, 12), int64]) -> (Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) {
    %1021 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
    %1022 = cast(%var_10155, dtype="float64") /* ty=Tensor[(315), float64] */;
    %1023 = cast(%var_10155, dtype="float64") /* ty=Tensor[(315), float64] */;
    %1024 = reshape(%1022, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %1025 = reshape(%1023, newshape=[3, 7, 15]) /* ty=Tensor[(3, 7, 15), float64] */;
    %1026 = @func_568(%1024, %1025) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */;
    %1027 = %1026.2;
    %1028 = cast(%var_10174, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
    %1029 = shape_of(%1027, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1030 = cast(%1027, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
    %1031 = dyn.reshape(%1028, %1029, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1032 = %1021.3;
    %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1034 = cast(%var_10180, dtype="uint64") /* ty=uint64 */;
    %1035 = cast(%var_10181, dtype="uint64") /* ty=Tensor[(320, 4), uint64] */;
    %1036 = cast(%var_10182, dtype="int64") /* ty=Tensor[(90, 12), int64] */;
    %1037 = reshape(%1033, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %1038 = reshape(%1034, newshape=[]) /* ty=uint64 */;
    %1039 = reshape(%1035, newshape=[2, 640]) /* ty=Tensor[(2, 640), uint64] */;
    %1040 = reshape(%1036, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
    %1041 = @func_8835(%1037, %1038, %1039, %1040) /* ty=(Tensor[(288), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], Tensor[(16, 8, 10), uint64], uint64, Tensor[(2, 640), uint64], Tensor[(1080), int64], Tensor[(468), float32]) */;
    %1042 = greater(%1030, %1031) /* ty=Tensor[(5, 585), bool] */;
    %1043 = %1041.0;
    (%1032, %var_10155, %1042, %1043, %var_10180, %var_10181, %var_10182)
  };
  %1044(%var_10191, %var_10192, %var_10193, %var_10194, %var_10195) /* ty=(Tensor[(468), float32], Tensor[(315), float64], Tensor[(5, 585), bool], Tensor[(288), float32], uint64, Tensor[(320, 4), uint64], Tensor[(90, 12), int64]) */
}

def @func_8991(%var_8974: Tensor[(512), int16]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) {
  %1045 = @func_8540() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) */;
  %1046 = cast(%var_8974, dtype="int16") /* ty=Tensor[(512), int16] */;
  %1047 = cast(%var_8974, dtype="int16") /* ty=Tensor[(512), int16] */;
  %1048 = reshape(%1046, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %1049 = reshape(%1047, newshape=[16, 4, 8]) /* ty=Tensor[(16, 4, 8), int16] */;
  %1050 = @func_6040(%1048, %1049) /* ty=(Tensor[(16, 4, 8), int16], Tensor[(468), float32]) */;
  %1051 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %1052 = %1045.0;
  %1053 = %1050.1;
  %1054 = %1051.0;
  (%1052, %1053, %var_8974, %1054)
}

def @func_3335(%var_3333: Tensor[(78, 6), float32]) -> (Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) {
  @func_3332(%var_3333) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */
}

def @func_3388(%var_3386: Tensor[(1, 288), float32]) -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) {
  @func_3385(%var_3386) /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(1, 288), float32]) */
}

def @func_12507() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32]) {
  @func_12505() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32]) */
}

def @func_5711() -> Tensor[(468), float32] {
  @func_3779() /* ty=Tensor[(468), float32] */
}

def @func_11831(%var_11825: uint32, %var_11826: Tensor[(12), uint32], %var_11827: Tensor[(512, 12), int16], %var_11828: Tensor[(6, 140), float32], %var_11829: Tensor[(512, 12), int16], %var_11830: Tensor[(512, 12), int16]) -> (Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(468), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32], Tensor[(512, 12), float64], Tensor[(7, 10, 12), float32], Tensor[(6, 140), float32], Tensor[(512, 12), float64], Tensor[(512, 12), int8], Tensor[(468), float32]) {
  %1088 = fn (%var_11712: uint32, %var_11713: Tensor[(12), uint32], %var_11753: Tensor[(512, 12), int16], %var_11758: Tensor[(6, 140), float32], %var_11773: Tensor[(512, 12), int16], %var_11807: Tensor[(512, 12), int16]) -> (Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(468), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32], Tensor[(512, 12), float64], Tensor[(7, 10, 12), float32], Tensor[(6, 140), float32], Tensor[(512, 12), float64], Tensor[(512, 12), int8], Tensor[(468), float32]) {
    %1055 = cast(%var_11712, dtype="uint32") /* ty=uint32 */;
    %1056 = cast(%var_11713, dtype="uint32") /* ty=Tensor[(12), uint32] */;
    %1057 = reshape(%1055, newshape=[]) /* ty=uint32 */;
    %1058 = reshape(%1056, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), uint32] */;
    %1059 = @func_4346(%1057, %1058) /* ty=(Tensor[(3, 1, 4), float64],) */;
    %1060 = @func_5570() /* ty=(Tensor[(468), float32],) */;
    %1061 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
    %1062 = cast(meta[relay.Constant][50] /* ty=Tensor[(512, 1), int16] */, dtype="int16") /* ty=Tensor[(512, 1), int16] */;
    %1063 = reshape(%1062, newshape=[512]) /* ty=Tensor[(512), int16] */;
    %1064 = @func_8991(%1063) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16], Tensor[(288), float32]) */;
    %1065 = cast(meta[relay.Constant][50] /* ty=Tensor[(512, 1), int16] */, dtype="float64") /* ty=Tensor[(512, 1), float64] */;
    %1066 = cast(%var_11753, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
    %1067 = cast(%var_11758, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
    %1068 = reshape(%1067, newshape=[7, 10, 12]) /* ty=Tensor[(7, 10, 12), float32] */;
    %1069 = @func_5259(%1068) /* ty=(Tensor[(7, 10, 12), float32],) */;
    %1070 = cast(%var_11773, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
    %1071 = shape_of(%var_11753, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1072 = cast(%var_11753, dtype="float64") /* ty=Tensor[(512, 12), float64] */;
    %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1074 = cast(%var_11807, dtype="int8") /* ty=Tensor[(512, 12), int8] */;
    %1075 = shape_of(%var_11773, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1076 = cast(%var_11773, dtype="int8") /* ty=Tensor[(512, 12), int8] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1078 = @func_4958() /* ty=Tensor[(468), float32] */;
    %1079 = %1059.0;
    %1080 = %1060.0;
    %1081 = %1061.2;
    %1082 = %1064.0;
    %1083 = divide(%1065, %1066) /* ty=Tensor[(512, 12), float64] */;
    %1084 = %1069.0;
    %1085 = add(%1072, %1073) /* ty=Tensor[(512, 12), float64] */;
    %1086 = bitwise_xor(%1076, %1077) /* ty=Tensor[(512, 12), int8] */;
    %1087 = @func_6711() /* ty=Tensor[(468), float32] */;
    (%1078, %1079, %var_11712, %var_11713, %1080, %1081, %1082, %1083, %1084, %var_11758, %1085, %1086, %1087)
  };
  %1088(%var_11825, %var_11826, %var_11827, %var_11828, %var_11829, %var_11830) /* ty=(Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(468), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32], Tensor[(512, 12), float64], Tensor[(7, 10, 12), float32], Tensor[(6, 140), float32], Tensor[(512, 12), float64], Tensor[(512, 12), int8], Tensor[(468), float32]) */
}

def @func_2968() -> (Tensor[(468), float32],) {
  %1091 = fn () -> (Tensor[(468), float32],) {
    %1089 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %1090 = %1089.2;
    (%1090,)
  };
  %1091() /* ty=(Tensor[(468), float32],) */
}

def @func_5000() -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */
}

def @func_13885(%var_13883: Tensor[(1080), int64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32]) {
  @func_13882(%var_13883) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float64], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_6300() -> (Tensor[(468), float32],) {
  %1092 = @func_4958() /* ty=Tensor[(468), float32] */;
  (%1092,)
}

def @func_10616() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1093 = @func_7855() /* ty=(Tensor[(468), float32],) */;
  %1094 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %1095 = @func_9076() /* ty=Tensor[(468), float32] */;
  %1096 = %1093.0;
  %1097 = %1094.0;
  (%1095, %1096, %1097)
}

def @func_8617(%var_8615: Tensor[(468), float32], %var_8616: Tensor[(2, 144), float32]) -> (Tensor[(832), float32], Tensor[(12, 13, 3), bool], Tensor[(468), float32], Tensor[(2, 144), uint32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(2, 144), float64]) {
  %1127 = fn (%var_8563: Tensor[(468), float32], %var_8574: Tensor[(2, 144), float32]) -> (Tensor[(832), float32], Tensor[(12, 13, 3), bool], Tensor[(468), float32], Tensor[(2, 144), uint32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(2, 144), float64]) {
    %1098 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
    %1099 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1100 = cast(%var_8563, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1101 = reshape(%1099, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %1102 = reshape(%1100, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %1103 = @func_2037(%1101, %1102) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %1104 = cast(%var_8574, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
    %1105 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1106 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 144), float32] */, dtype="uint32") /* ty=Tensor[(2, 144), uint32] */;
    %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1108 = bitwise_or(%1106, %1107) /* ty=Tensor[(2, 144), uint32] */;
    %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1110 = cast(%var_8563, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1111 = reshape(%1109, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %1112 = reshape(%1110, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %1113 = @func_2037(%1111, %1112) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
    %1114 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1115 = cast(%var_8574, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1116 = acos(%1115) /* ty=Tensor[(2, 144), float32] */;
    %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1118 = tan(%1117) /* ty=Tensor[(2, 144), float32] */;
    %1119 = cast(%1118, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1120 = exp(%1119) /* ty=Tensor[(2, 144), float32] */;
    %1121 = cast(%1120, dtype="float64") /* ty=Tensor[(2, 144), float64] */;
    %1122 = %1098.3;
    %1123 = %1103.4;
    %1124 = %1113.2;
    %1125 = %1114.1;
    %1126 = erf(%1121) /* ty=Tensor[(2, 144), float64] */;
    (%1122, %1123, %var_8563, %1108, %1124, %1125, %1126)
  };
  %1127(%var_8615, %var_8616) /* ty=(Tensor[(832), float32], Tensor[(12, 13, 3), bool], Tensor[(468), float32], Tensor[(2, 144), uint32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(2, 144), float64]) */
}

def @func_9077() -> Tensor[(468), float32] {
  %1128 = fn () -> Tensor[(468), float32] {
    @func_3437() /* ty=Tensor[(468), float32] */
  };
  %1128() /* ty=Tensor[(468), float32] */
}

def @func_4919() -> (Tensor[(468), float32],) {
  @func_4917() /* ty=(Tensor[(468), float32],) */
}

def @func_10078() -> Tensor[(468), float32] {
  %1129 = @func_6300() /* ty=(Tensor[(468), float32],) */;
  %1129.0
}

def @func_12139(%var_12120: uint64, %var_12122: Tensor[(1080), int64]) -> (Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], uint64, Tensor[(1280), uint64], Tensor[(1080), int64], Tensor[(12, 12, 11), int8], Tensor[(2, 11, 15), float32], Tensor[(55, 6), float32]) {
  %1130 = @func_12071() /* ty=(Tensor[(4, 28), float64],) */;
  %1131 = @func_2967() /* ty=(Tensor[(468), float32],) */;
  %1132 = cast(%var_12120, dtype="uint64") /* ty=uint64 */;
  %1133 = cast(meta[relay.Constant][52] /* ty=Tensor[(1280), uint64] */, dtype="uint64") /* ty=Tensor[(1280), uint64] */;
  %1134 = @func_7915() /* ty=Tensor[(468), float32] */;
  %1135 = cast(%1134, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1136 = cast(%var_12122, dtype="int64") /* ty=Tensor[(1080), int64] */;
  %1137 = reshape(%1132, newshape=[]) /* ty=uint64 */;
  %1138 = reshape(%1133, newshape=[16, 8, 10]) /* ty=Tensor[(16, 8, 10), uint64] */;
  %1139 = reshape(%1135, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1140 = reshape(%1136, newshape=[1080]) /* ty=Tensor[(1080), int64] */;
  %1141 = @func_8268(%1137, %1138, %1139, %1140) /* ty=(Tensor[(16, 8, 10), uint64], Tensor[(78, 6), float32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(112), float64], Tensor[(468), float32]) */;
  %1142 = @func_10030() /* ty=(Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) */;
  %1143 = cast(meta[relay.Constant][53] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %1144 = reshape(%1143, newshape=[2, 11, 15]) /* ty=Tensor[(2, 11, 15), float32] */;
  %1145 = @func_11306(%1144) /* ty=(Tensor[(2, 11, 15), float32],) */;
  %1146 = %1130.0;
  %1147 = %1131.0;
  %1148 = %1141.2;
  %1149 = %1142.1;
  %1150 = %1145.0;
  (%1146, %1134, %1147, %1148, %var_12120, meta[relay.Constant][52] /* ty=Tensor[(1280), uint64] */, %var_12122, %1149, %1150, meta[relay.Constant][53] /* ty=Tensor[(55, 6), float32] */)
}

def @func_14334() -> (Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(6, 78), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1151 = cast(meta[relay.Constant][54] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %1152 = cast(meta[relay.Constant][55] /* ty=Tensor[(6, 78), float32] */, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %1153 = reshape(%1151, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1154 = reshape(%1152, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1155 = @func_2037(%1153, %1154) /* ty=(Tensor[(3, 6, 16), float32], Tensor[(4, 4, 7), bool], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool]) */;
  %1156 = @func_9187() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(288), float32], Tensor[(4, 28), float64]) */;
  %1157 = %1156.2;
  %1158 = cast(%1157, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1159 = rsqrt(%1158) /* ty=Tensor[(4, 28), float64] */;
  %1160 = cast(%1159, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1161 = @func_7107() /* ty=(Tensor[(15, 8, 468), bool], Tensor[(288), float32], Tensor[(15, 8, 468), float64], Tensor[(468), float32]) */;
  %1162 = %1155.2;
  %1163 = sqrt(%1160) /* ty=Tensor[(4, 28), float64] */;
  %1164 = %1161.3;
  %1165 = @func_13194() /* ty=Tensor[(468), float32] */;
  %1166 = @func_5501() /* ty=Tensor[(468), float32] */;
  (%1162, meta[relay.Constant][54] /* ty=Tensor[(288), float32] */, meta[relay.Constant][55] /* ty=Tensor[(6, 78), float32] */, %1163, %1164, %1165, %1166)
}

def @func_9329() -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1167 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %1168 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1169 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1170 = %1167.0;
  %1171 = %1168.1;
  %1172 = @func_4250() /* ty=Tensor[(468), float32] */;
  %1173 = %1169.1;
  (%1170, %1171, %1172, %1173)
}

def @func_5782(%var_5780: Tensor[(4, 72), float32]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) {
  @func_5779(%var_5780) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 72), float32]) */
}

def @func_7544(%var_7543: Tensor[(3, 4), uint32]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) {
  %1212 = fn (%var_7433: Tensor[(3, 4), uint32]) -> (Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) {
    %1174 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
    %1175 = @func_6348() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) */;
    %1176 = cast(meta[relay.Constant][57] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %1177 = cast(meta[relay.Constant][57] /* ty=Tensor[(1080), int64] */, dtype="int64") /* ty=Tensor[(1080), int64] */;
    %1178 = reshape(%1176, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
    %1179 = reshape(%1177, newshape=[12, 9, 10]) /* ty=Tensor[(12, 9, 10), int64] */;
    %1180 = @func_4008(%1178, %1179) /* ty=(Tensor[(12, 9, 10), int64], Tensor[(468), float32]) */;
    %1181 = cast(meta[relay.Constant][58] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %1182 = cast(meta[relay.Constant][58] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %1183 = reshape(%1181, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %1184 = reshape(%1182, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %1185 = @func_371(%1183, %1184) /* ty=Tensor[(13, 15, 15), bool] */;
    %1186 = cast(%1185, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
    %1187 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(2925), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1188 = cast(meta[relay.Constant][58] /* ty=Tensor[(2925), bool] */, dtype="uint8") /* ty=Tensor[(2925), uint8] */;
    %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %1190 = cast(meta[relay.Constant][56] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %1191 = cast(%var_7433, dtype="uint32") /* ty=Tensor[(3, 4), uint32] */;
    %1192 = reshape(%1190, newshape=[4, 28]) /* ty=Tensor[(4, 28), float64] */;
    %1193 = reshape(%1191, newshape=[12]) /* ty=Tensor[(12), uint32] */;
    %1194 = @func_5117(%1192, %1193) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) */;
    %1195 = %1194.9;
    %1196 = cast(%1195, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %1197 = acos(%1196) /* ty=Tensor[(4, 28), float64] */;
    %1198 = cast(%1195, dtype="uint8") /* ty=Tensor[(4, 28), uint8] */;
    %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1200 = cast(%1197, dtype="uint8") /* ty=Tensor[(4, 28), uint8] */;
    %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1202 = cast(%1197, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %1203 = %1174.2;
    %1204 = %1175.0;
    %1205 = %1180.0;
    %1206 = @func_5989() /* ty=Tensor[(468), float32] */;
    %1207 = bitwise_and(%1188, %1189) /* ty=Tensor[(2925), uint8] */;
    %1208 = bitwise_or(%1200, %1201) /* ty=Tensor[(4, 28), uint8] */;
    %1209 = @func_3694() /* ty=Tensor[(468), float64] */;
    %1210 = @func_3437() /* ty=Tensor[(468), float32] */;
    %1211 = sin(%1202) /* ty=Tensor[(4, 28), float64] */;
    (%1203, meta[relay.Constant][56] /* ty=Tensor[(112), float64] */, %var_7433, %1204, %1205, meta[relay.Constant][57] /* ty=Tensor[(1080), int64] */, %1206, %1207, %1208, %1209, %1210, %1211)
  };
  %1212(%var_7543) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(3, 4), uint32], Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(2925), uint8], Tensor[(4, 28), uint8], Tensor[(468), float64], Tensor[(468), float32], Tensor[(4, 28), float64]) */
}

def @func_11286() -> (Tensor[(468), float32],) {
  %1215 = fn () -> (Tensor[(468), float32],) {
    %1213 = @func_11195() /* ty=(Tensor[(468), float32],) */;
    %1214 = %1213.0;
    (%1214,)
  };
  %1215() /* ty=(Tensor[(468), float32],) */
}

def @func_10637() -> (Tensor[(1080), int64],) {
  @func_10635() /* ty=(Tensor[(1080), int64],) */
}

def @func_4109() -> Tensor[(468), float32] {
  %1217 = fn () -> Tensor[(468), float32] {
    %1216 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %1216.0
  };
  %1217() /* ty=Tensor[(468), float32] */
}

def @func_10501() -> Tensor[(468), float32] {
  @func_4266() /* ty=Tensor[(468), float32] */
}

def @func_13342() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(192), uint32]) {
  %1218 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
  %1219 = @func_6847() /* ty=(Tensor[(288), float32], Tensor[(468), float32]) */;
  %1220 = cast(meta[relay.Constant][59] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1221 = cast(meta[relay.Constant][59] /* ty=Tensor[(192), uint32] */, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %1222 = reshape(%1220, newshape=[2, 12, 8]) /* ty=Tensor[(2, 12, 8), uint32] */;
  %1223 = reshape(%1221, newshape=[2, 12, 8]) /* ty=Tensor[(2, 12, 8), uint32] */;
  %1224 = @func_12559(%1222, %1223) /* ty=(Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) */;
  %1225 = %1218.1;
  %1226 = %1219.1;
  %1227 = %1224.2;
  (%1225, %1226, %1227, meta[relay.Constant][59] /* ty=Tensor[(192), uint32] */)
}

def @func_9707() -> (Tensor[(18, 60), float64], Tensor[(315), float64]) {
  %1228 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
  %1229 = %1228.4;
  %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(18, 60), float32] */;
  %1231 = sqrt(%1230) /* ty=Tensor[(18, 60), float32] */;
  %1232 = cast(%1231, dtype="float64") /* ty=Tensor[(18, 60), float64] */;
  %1233 = @func_8540() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(315), float64]) */;
  %1234 = cosh(%1232) /* ty=Tensor[(18, 60), float64] */;
  %1235 = %1233.2;
  (%1234, %1235)
}

def @func_5262(%var_5260: Tensor[(7, 10, 12), float32]) -> (Tensor[(7, 10, 12), float32],) {
  @func_5259(%var_5260) /* ty=(Tensor[(7, 10, 12), float32],) */
}

def @func_6643() -> (Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) {
  %1236 = @func_4773() /* ty=Tensor[(468), float32] */;
  %1237 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1238 = reshape(%1237, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1239 = @func_4161(%1238) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %1240 = %1239.1;
  %1241 = cast(%1240, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1242 = cast(%1236, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1243 = cast(%1236, dtype="bool") /* ty=Tensor[(468), bool] */;
  %1244 = reshape(%1241, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1245 = reshape(%1242, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1246 = reshape(%1243, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1247 = @func_4519(%1244, %1245, %1246) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %1248 = @func_2921() /* ty=(Tensor[(288), float32],) */;
  %1249 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1250 = reshape(%1249, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %1251 = @func_4161(%1250) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
  %1252 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1253 = cast(%1236, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1254 = reshape(%1252, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %1255 = reshape(%1253, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), float32] */;
  %1256 = @func_7(%1254, %1255) /* ty=(Tensor[(12, 13, 3), bool],) */;
  %1257 = %1247.1;
  %1258 = %1248.0;
  %1259 = %1251.4;
  %1260 = %1256.0;
  (%1236, %1240, %1257, %1258, %1259, %1260)
}

def @func_5627() -> Tensor[(468), float32] {
  %1262 = fn () -> Tensor[(468), float32] {
    %1261 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %1261.0
  };
  %1262() /* ty=Tensor[(468), float32] */
}

def @func_8737() -> (Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) {
  %1273 = fn () -> (Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) {
    %1263 = @func_8175() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8]) */;
    %1264 = cast(meta[relay.Constant][60] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %1265 = cast(meta[relay.Constant][61] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
    %1266 = cast(meta[relay.Constant][61] /* ty=Tensor[(468), bool] */, dtype="bool") /* ty=Tensor[(468), bool] */;
    %1267 = reshape(%1264, newshape=[112]) /* ty=Tensor[(112), float64] */;
    %1268 = reshape(%1265, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
    %1269 = reshape(%1266, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
    %1270 = @func_4519(%1267, %1268, %1269) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
    %1271 = %1263.1;
    %1272 = %1270.4;
    (%1271, %1272, meta[relay.Constant][60] /* ty=Tensor[(112), float64] */, meta[relay.Constant][61] /* ty=Tensor[(468), bool] */)
  };
  %1273() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(12, 13, 3), uint64], Tensor[(112), float64], Tensor[(468), bool]) */
}

def @func_12767(%var_12765: Tensor[(112), bool]) -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(112), bool]) {
  @func_12764(%var_12765) /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(112), bool]) */
}

def @func_11609() -> Tensor[(18, 60), int64] {
  %1275 = fn () -> Tensor[(18, 60), int64] {
    %1274 = @func_6643() /* ty=(Tensor[(468), float32], Tensor[(4, 28), float64], Tensor[(112), float64], Tensor[(288), float32], Tensor[(18, 60), int64], Tensor[(12, 13, 3), bool]) */;
    %1274.4
  };
  %1275() /* ty=Tensor[(18, 60), int64] */
}

def @func_13743() -> Tensor[(468), float32] {
  %1276 = fn () -> Tensor[(468), float32] {
    @func_7559() /* ty=Tensor[(468), float32] */
  };
  %1276() /* ty=Tensor[(468), float32] */
}

def @func_4267() -> Tensor[(468), float32] {
  %1278 = fn () -> Tensor[(468), float32] {
    %1277 = @func_3859() /* ty=(Tensor[(468), float32],) */;
    %1277.0
  };
  %1278() /* ty=Tensor[(468), float32] */
}

def @func_7145() -> (Tensor[(288), float32],) {
  %1281 = fn () -> (Tensor[(288), float32],) {
    %1279 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %1280 = %1279.2;
    (%1280,)
  };
  %1281() /* ty=(Tensor[(288), float32],) */
}

def @func_10635() -> (Tensor[(1080), int64],) {
  %1282 = @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */;
  %1283 = %1282.2;
  (%1283,)
}

def @func_12409() -> (Tensor[(15, 15, 10), float64], Tensor[(468), float32]) {
  @func_12407() /* ty=(Tensor[(15, 15, 10), float64], Tensor[(468), float32]) */
}

def @func_5914(%var_5909: Tensor[(11, 2, 10), float32], %var_5910: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32],) {
  %1284 = cast(%var_5910, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %1285 = shape_of(%var_5909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1286 = cast(%var_5909, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1288 = maximum(%1286, %1287) /* ty=Tensor[(11, 2, 10), float32] */;
  (%1288,)
}

def @func_11936() -> (Tensor[(468), float32],) {
  %1291 = fn () -> (Tensor[(468), float32],) {
    %1289 = @func_5369() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1290 = %1289.0;
    (%1290,)
  };
  %1291() /* ty=(Tensor[(468), float32],) */
}

def @func_14429() -> Tensor[(12, 12, 11), int8] {
  @func_14427() /* ty=Tensor[(12, 12, 11), int8] */
}

def @func_12505() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32]) {
  %1292 = @func_7224() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1293 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1294 = @func_10102() /* ty=(Tensor[(288), float32],) */;
  %1295 = @func_6879() /* ty=(Tensor[(4, 28), float64],) */;
  %1296 = @func_11267() /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32]) */;
  %1297 = %1292.0;
  %1298 = @func_3194() /* ty=Tensor[(468), float32] */;
  %1299 = %1293.1;
  %1300 = %1294.0;
  %1301 = %1295.0;
  %1302 = %1296.1;
  (%1297, %1298, %1299, %1300, %1301, %1302)
}

def @func_5394(%var_5391: int16, %var_5392: Tensor[(7, 2, 3), int16], %var_5393: Tensor[(72, 4), float32]) -> (Tensor[(7, 2, 3), bool], Tensor[(288), float32], Tensor[(72, 4), float32]) {
  %1310 = fn (%var_5372: int16, %var_5373: Tensor[(7, 2, 3), int16], %var_5386: Tensor[(72, 4), float32]) -> (Tensor[(7, 2, 3), bool], Tensor[(288), float32], Tensor[(72, 4), float32]) {
    %1303 = cast(%var_5372, dtype="bool") /* ty=bool */;
    %1304 = cast(%var_5373, dtype="bool") /* ty=Tensor[(7, 2, 3), bool] */;
    %1305 = cast(%var_5386, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
    %1306 = reshape(%1305, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1307 = @func_2623(%1306) /* ty=(Tensor[(15, 15, 10), float64], Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(3, 156), float32]) */;
    %1308 = greater_equal(%1303, %1304) /* ty=Tensor[(7, 2, 3), bool] */;
    %1309 = %1307.2;
    (%1308, %1309, %var_5386)
  };
  %1310(%var_5391, %var_5392, %var_5393) /* ty=(Tensor[(7, 2, 3), bool], Tensor[(288), float32], Tensor[(72, 4), float32]) */
}

def @func_10319(%var_10318: Tensor[(105, 2), uint16]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float64], uint16, Tensor[(105, 2), uint16], Tensor[(288), float32], Tensor[(112), float64]) {
  %1326 = fn (%var_10287: Tensor[(105, 2), uint16]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float64], uint16, Tensor[(105, 2), uint16], Tensor[(288), float32], Tensor[(112), float64]) {
    %1311 = @func_2921() /* ty=(Tensor[(288), float32],) */;
    %1312 = cast(meta[relay.Constant][62] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1313 = cast(%var_10287, dtype="uint16") /* ty=Tensor[(105, 2), uint16] */;
    %1314 = reshape(%1312, newshape=[]) /* ty=uint16 */;
    %1315 = reshape(%1313, newshape=[1, 15, 14]) /* ty=Tensor[(1, 15, 14), uint16] */;
    %1316 = @func_9348(%1314, %1315) /* ty=(Tensor[(1, 15, 14), bool], Tensor[(15, 15, 10), float64]) */;
    %1317 = @func_3302() /* ty=(Tensor[(288), float32], Tensor[(13, 15, 15), uint64]) */;
    %1318 = @func_4773() /* ty=Tensor[(468), float32] */;
    %1319 = cast(%1318, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1320 = reshape(%1319, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
    %1321 = @func_3332(%1320) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
    %1322 = %1311.0;
    %1323 = %1316.1;
    %1324 = %1317.0;
    %1325 = %1321.4;
    (%1318, %1322, %1323, meta[relay.Constant][62] /* ty=uint16 */, %var_10287, %1324, %1325)
  };
  %1326(%var_10318) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float64], uint16, Tensor[(105, 2), uint16], Tensor[(288), float32], Tensor[(112), float64]) */
}

def @func_9265(%var_9263: Tensor[(11, 2, 16), bool], %var_9264: Tensor[(55, 7), float64]) -> (Tensor[(11, 2, 16), bool], Tensor[(7, 11, 5), bool], Tensor[(55, 7), float64]) {
  %1336 = fn (%var_9245: Tensor[(11, 2, 16), bool], %var_9258: Tensor[(55, 7), float64]) -> (Tensor[(11, 2, 16), bool], Tensor[(7, 11, 5), bool], Tensor[(55, 7), float64]) {
    %1327 = cast(%var_9245, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
    %1328 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(11, 2, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1329 = cast(meta[relay.Constant][63] /* ty=Tensor[(11, 2, 16), bool] */, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
    %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1331 = cast(%var_9258, dtype="float64") /* ty=Tensor[(55, 7), float64] */;
    %1332 = reshape(%1331, newshape=[7, 11, 5]) /* ty=Tensor[(7, 11, 5), float64] */;
    %1333 = @func_8671(%1332) /* ty=(Tensor[(7, 11, 5), bool],) */;
    %1334 = logical_or(%1329, %1330) /* ty=Tensor[(11, 2, 16), bool] */;
    %1335 = %1333.0;
    (%1334, %1335, %var_9258)
  };
  %1336(%var_9263, %var_9264) /* ty=(Tensor[(11, 2, 16), bool], Tensor[(7, 11, 5), bool], Tensor[(55, 7), float64]) */
}

def @func_14785() -> Tensor[(3, 3, 1), float32] {
  %1337 = @func_13534() /* ty=(Tensor[(3, 3, 1), float32], Tensor[(3, 3, 1), uint64]) */;
  %1337.0
}

def @func_7187() -> Tensor[(468), float32] {
  @func_4773() /* ty=Tensor[(468), float32] */
}

def @func_4551() -> (Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) {
  @func_4549() /* ty=(Tensor[(468), float32], Tensor[(12, 9, 10), int64], Tensor[(1080), int64], Tensor[(468), float32]) */
}

def @func_7915() -> Tensor[(468), float32] {
  %1338 = @func_7014() /* ty=(Tensor[(468), float32],) */;
  %1338.0
}

def @func_8879() -> (Tensor[(468), float32], Tensor[(288), float32]) {
  %1343 = fn () -> (Tensor[(468), float32], Tensor[(288), float32]) {
    %1339 = @func_4738() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1340 = @func_4088() /* ty=(Tensor[(468), float32], Tensor[(15, 15, 10), float64], Tensor[(288), float32]) */;
    %1341 = %1339.1;
    %1342 = %1340.2;
    (%1341, %1342)
  };
  %1343() /* ty=(Tensor[(468), float32], Tensor[(288), float32]) */
}

def @func_14539() -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32]) {
  %1348 = fn () -> (Tensor[(12, 12, 11), int8], Tensor[(468), float32]) {
    %1344 = @func_11090() /* ty=(Tensor[(12, 12, 11), int8],) */;
    %1345 = @func_5243() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1346 = %1344.0;
    %1347 = %1345.0;
    (%1346, %1347)
  };
  %1348() /* ty=(Tensor[(12, 12, 11), int8], Tensor[(468), float32]) */
}

def @func_7917() -> Tensor[(468), float32] {
  @func_7915() /* ty=Tensor[(468), float32] */
}

def @func_10503() -> Tensor[(468), float32] {
  @func_10501() /* ty=Tensor[(468), float32] */
}

def @func_8177() -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8]) {
  @func_8175() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8]) */
}

def @func_5120(%var_5118: Tensor[(4, 28), float64], %var_5119: Tensor[(12), uint32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) {
  %1393 = fn (%var_5030: Tensor[(4, 28), float64], %var_5037: Tensor[(12), uint32]) -> (Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) {
    %1349 = @func_2921() /* ty=(Tensor[(288), float32],) */;
    %1350 = cast(meta[relay.Constant][65] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1351 = cast(%var_5037, dtype="uint32") /* ty=Tensor[(12), uint32] */;
    %1352 = reshape(%1350, newshape=[]) /* ty=uint32 */;
    %1353 = reshape(%1351, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), uint32] */;
    %1354 = @func_4346(%1352, %1353) /* ty=(Tensor[(3, 1, 4), float64],) */;
    %1355 = cast(meta[relay.Constant][64] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1356 = reshape(%1355, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %1357 = @func_4161(%1356) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
    %1358 = %1357.1;
    %1359 = cast(%var_5030, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1360 = shape_of(%1358, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1361 = cast(%1358, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1363 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
    %1364 = @func_4773() /* ty=Tensor[(468), float32] */;
    %1365 = cast(%1364, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1366 = reshape(%1365, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %1367 = @func_4161(%1366) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */;
    %1368 = cast(%var_5030, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1369 = shape_of(%1358, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1370 = cast(%1358, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1371 = dyn.reshape(%1368, %1369, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1372 = greater(%1370, %1371) /* ty=Tensor[(4, 28), bool] */;
    %1373 = cast(%1372, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %1374 = log(%1373) /* ty=Tensor[(4, 28), float64] */;
    %1375 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 28), float64] */, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1376 = shape_of(%1374, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1377 = cast(%1374, dtype="bool") /* ty=Tensor[(4, 28), bool] */;
    %1378 = dyn.reshape(%1375, %1376, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1379 = cast(meta[relay.Constant][66] /* ty=Tensor[(4, 28), float64] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %1380 = cast(%1358, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %1381 = cast(%1364, dtype="float32") /* ty=Tensor[(468), float32] */;
    %1382 = reshape(%1379, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %1383 = reshape(%1380, newshape=[4, 4, 7]) /* ty=Tensor[(4, 4, 7), float64] */;
    %1384 = reshape(%1381, newshape=[1, 468]) /* ty=Tensor[(1, 468), float32] */;
    %1385 = @func_842(%1382, %1383, %1384) /* ty=(Tensor[(4, 4, 7), bool], Tensor[(12, 13, 3), bool], Tensor[(1, 468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */;
    %1386 = %1349.0;
    %1387 = %1354.0;
    %1388 = greater_equal(%1361, %1362) /* ty=Tensor[(4, 28), bool] */;
    %1389 = %1363.3;
    %1390 = %1367.4;
    %1391 = equal(%1377, %1378) /* ty=Tensor[(4, 28), bool] */;
    %1392 = %1385.0;
    (%1386, meta[relay.Constant][64] /* ty=Tensor[(468), float32] */, %1387, meta[relay.Constant][65] /* ty=uint32 */, %var_5037, %1388, %1389, %1364, %1390, %1391, %1392)
  };
  %1393(%var_5118, %var_5119) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(3, 1, 4), float64], uint32, Tensor[(12), uint32], Tensor[(4, 28), bool], Tensor[(8, 6, 13), bool], Tensor[(468), float32], Tensor[(18, 60), int64], Tensor[(4, 28), bool], Tensor[(4, 4, 7), bool]) */
}

def @func_6579() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1394 = @func_5711() /* ty=Tensor[(468), float32] */;
  %1395 = cast(%1394, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1396 = reshape(%1395, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %1397 = @func_4450(%1396) /* ty=(Tensor[(288), float32], Tensor[(468), float32], Tensor[(78, 6), float32], Tensor[(78, 6), bool], Tensor[(468), float64]) */;
  %1398 = %1397.1;
  (%1394, %1398)
}

def @func_5880() -> (Tensor[(288), float32],) {
  @func_5878() /* ty=(Tensor[(288), float32],) */
}

def @func_8175() -> (Tensor[(468), float32], Tensor[(12, 12, 11), int8]) {
  %1399 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1400 = @func_7258() /* ty=(Tensor[(468), float32], Tensor[(12, 12, 11), int8], Tensor[(1584), int8], Tensor[(832), float32]) */;
  %1401 = %1399.2;
  %1402 = %1400.1;
  (%1401, %1402)
}

def @func_568(%var_553: Tensor[(3, 7, 15), float64], %var_554: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) {
  %1403 = cast(%var_554, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %1404 = shape_of(%var_553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1405 = cast(%var_553, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1407 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 585), bool] */, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %1408 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 585), bool] */, dtype="bool") /* ty=Tensor[(5, 585), bool] */;
  %1409 = reshape(%1407, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %1410 = reshape(%1408, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
  %1411 = mod(%1405, %1406) /* ty=Tensor[(3, 7, 15), float64] */;
  %1412 = @func_371(%1409, %1410) /* ty=Tensor[(13, 15, 15), bool] */;
  (%1411, %1412, meta[relay.Constant][67] /* ty=Tensor[(5, 585), bool] */)
}

def @func_5244() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1416 = fn () -> (Tensor[(468), float32], Tensor[(468), float32]) {
    %1413 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1414 = %1413.0;
    %1415 = @func_4250() /* ty=Tensor[(468), float32] */;
    (%1414, %1415)
  };
  %1416() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_5172() -> Tensor[(468), float64] {
  @func_5170() /* ty=Tensor[(468), float64] */
}

def @func_13594() -> Tensor[(468), float32] {
  @func_13592() /* ty=Tensor[(468), float32] */
}

def @func_572(%var_570: Tensor[(3, 7, 15), float64], %var_571: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) {
  @func_568(%var_570, %var_571) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(13, 15, 15), bool], Tensor[(5, 585), bool]) */
}

def @func_4313(%var_4311: Tensor[(288), float32]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) {
  @func_4310(%var_4311) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(15, 15, 10), float32]) */
}

def @func_9531() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1417 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1418 = @func_5711() /* ty=Tensor[(468), float32] */;
  %1419 = %1417.0;
  (%1418, %1419)
}

def @func_3696() -> Tensor[(468), float64] {
  @func_3694() /* ty=Tensor[(468), float64] */
}

def @func_3485() -> (Tensor[(468), float32],) {
  @func_3483() /* ty=(Tensor[(468), float32],) */
}

def @func_9506() -> (Tensor[(468), float32],) {
  @func_9504() /* ty=(Tensor[(468), float32],) */
}

def @func_4164(%var_4162: Tensor[(468), float32]) -> (Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) {
  @func_4161(%var_4162) /* ty=(Tensor[(288), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(18, 60), int64]) */
}

def @func_8411() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1420 = @func_6065() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1421 = @func_7613() /* ty=Tensor[(468), float32] */;
  %1422 = %1420.0;
  (%1421, %1422)
}

def @func_10663() -> Tensor[(288), float32] {
  %1423 = fn () -> Tensor[(288), float32] {
    @func_8445() /* ty=Tensor[(288), float32] */
  };
  %1423() /* ty=Tensor[(288), float32] */
}

def @func_6065() -> (Tensor[(468), float32], Tensor[(468), float32]) {
  %1424 = @func_2899() /* ty=(Tensor[(4, 28), float64], Tensor[(288), float32], Tensor[(468), float32], Tensor[(8, 6, 13), bool]) */;
  %1425 = @func_4250() /* ty=Tensor[(468), float32] */;
  %1426 = %1424.2;
  (%1425, %1426)
}

def @func_12563(%var_12561: Tensor[(2, 12, 8), uint32], %var_12562: Tensor[(2, 12, 8), uint32]) -> (Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) {
  @func_12559(%var_12561, %var_12562) /* ty=(Tensor[(2, 12, 8), uint32], Tensor[(468), float64], Tensor[(15, 15, 10), float64]) */
}

def @func_6516(%var_6514: Tensor[(288), float32]) -> (Tensor[(468), float64], Tensor[(468), float32], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16]) {
  @func_6513(%var_6514) /* ty=(Tensor[(468), float64], Tensor[(468), float32], Tensor[(1080), int64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(512), int16]) */
}

def @func_11309(%var_11307: Tensor[(2, 11, 15), float32]) -> (Tensor[(2, 11, 15), float32],) {
  @func_11306(%var_11307) /* ty=(Tensor[(2, 11, 15), float32],) */
}

def @func_12073() -> (Tensor[(4, 28), float64],) {
  @func_12071() /* ty=(Tensor[(4, 28), float64],) */
}

def @func_14639(%var_14635: Tensor[(78, 6), bool]) -> (Tensor[(315), float64], Tensor[(468), float32], Tensor[(112), float64], Tensor[(78, 6), bool]) {
  %1427 = @func_9707() /* ty=(Tensor[(18, 60), float64], Tensor[(315), float64]) */;
  %1428 = cast(meta[relay.Constant][68] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1429 = cast(%var_14635, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %1430 = cast(%var_14635, dtype="bool") /* ty=Tensor[(78, 6), bool] */;
  %1431 = reshape(%1428, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %1432 = reshape(%1429, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1433 = reshape(%1430, newshape=[12, 13, 3]) /* ty=Tensor[(12, 13, 3), bool] */;
  %1434 = @func_4519(%1431, %1432, %1433) /* ty=(Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(12, 13, 3), bool], Tensor[(12, 13, 3), uint64]) */;
  %1435 = %1427.1;
  %1436 = %1434.2;
  (%1435, %1436, meta[relay.Constant][68] /* ty=Tensor[(112), float64] */, %var_14635)
}

def @func_14857() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1442 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
    %1437 = @func_7855() /* ty=(Tensor[(468), float32],) */;
    %1438 = @func_6579() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
    %1439 = %1437.0;
    %1440 = @func_9076() /* ty=Tensor[(468), float32] */;
    %1441 = %1438.0;
    (%1439, %1440, %1441)
  };
  %1442() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_3766(%var_3763: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), float32] {
  %1443 = cast(%var_3763, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  asin(%1443) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_10031() -> (Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) {
  %1455 = fn () -> (Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) {
    %1444 = @func_7966() /* ty=(Tensor[(7, 11, 5), float64],) */;
    %1445 = %1444.0;
    %1446 = cast(%1445, dtype="float64") /* ty=Tensor[(7, 11, 5), float64] */;
    %1447 = asinh(%1446) /* ty=Tensor[(7, 11, 5), float64] */;
    %1448 = cast(%1445, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
    %1449 = shape_of(%1447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1450 = cast(%1447, dtype="bool") /* ty=Tensor[(7, 11, 5), bool] */;
    %1451 = dyn.reshape(%1448, %1449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1452 = @func_7636() /* ty=(Tensor[(12, 12, 11), int8],) */;
    %1453 = logical_or(%1450, %1451) /* ty=Tensor[(7, 11, 5), bool] */;
    %1454 = %1452.0;
    (%1453, %1454)
  };
  %1455() /* ty=(Tensor[(7, 11, 5), bool], Tensor[(12, 12, 11), int8]) */
}

def @func_12037() -> (Tensor[(4, 28), float32], Tensor[(4, 28), float64], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(112), float64], Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) {
  %1456 = @func_8697() /* ty=(Tensor[(4, 28), float64],) */;
  %1457 = %1456.0;
  %1458 = cast(%1457, dtype="float32") /* ty=Tensor[(4, 28), float32] */;
  %1459 = cast(%1457, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %1460 = @func_3483() /* ty=(Tensor[(468), float32],) */;
  %1461 = @func_7317() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1462 = @func_9076() /* ty=Tensor[(468), float32] */;
  %1463 = cast(%1462, dtype="float32") /* ty=Tensor[(468), float32] */;
  %1464 = reshape(%1463, newshape=[78, 6]) /* ty=Tensor[(78, 6), float32] */;
  %1465 = @func_3332(%1464) /* ty=(Tensor[(3, 9, 3), float32], Tensor[(12, 13, 3), bool], Tensor[(78, 6), float32], Tensor[(1, 468), float32], Tensor[(112), float64]) */;
  %1466 = @func_5570() /* ty=(Tensor[(468), float32],) */;
  %1467 = atan(%1458) /* ty=Tensor[(4, 28), float32] */;
  %1468 = acosh(%1459) /* ty=Tensor[(4, 28), float64] */;
  %1469 = @func_4108() /* ty=Tensor[(468), float32] */;
  %1470 = %1460.0;
  %1471 = %1461.0;
  %1472 = %1465.4;
  %1473 = @func_7339() /* ty=Tensor[(468), float32] */;
  %1474 = @func_10662() /* ty=Tensor[(288), float32] */;
  %1475 = %1466.0;
  (%1467, %1468, %1469, %1462, %1470, %1471, %1472, %1473, %1474, %1475)
}

def @func_4228(%var_4225: Tensor[(12, 12, 11), int8], %var_4226: Tensor[(12, 12, 11), int8], %var_4227: Tensor[(832), float32]) -> (Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
  %1491 = fn (%var_4192: Tensor[(12, 12, 11), int8], %var_4193: Tensor[(12, 12, 11), int8], %var_4205: Tensor[(832), float32]) -> (Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) {
    %1476 = cast(%var_4193, dtype="int8") /* ty=Tensor[(12, 12, 11), int8] */;
    %1477 = shape_of(%var_4192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1478 = cast(%var_4192, dtype="int8") /* ty=Tensor[(12, 12, 11), int8] */;
    %1479 = dyn.reshape(%1476, %1477, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1480 = cast(%var_4205, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1481 = reshape(%1480, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
    %1482 = @func_3483() /* ty=(Tensor[(468), float32],) */;
    %1483 = cast(meta[relay.Constant][69] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %1484 = cast(meta[relay.Constant][69] /* ty=Tensor[(2925), bool] */, dtype="bool") /* ty=Tensor[(2925), bool] */;
    %1485 = reshape(%1483, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %1486 = reshape(%1484, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), bool] */;
    %1487 = multiply(%1478, %1479) /* ty=Tensor[(12, 12, 11), int8] */;
    %1488 = @func_3766(%1481) /* ty=Tensor[(13, 8, 8), float32] */;
    %1489 = %1482.0;
    %1490 = @func_371(%1485, %1486) /* ty=Tensor[(13, 15, 15), bool] */;
    (%1487, %1488, %var_4205, %1489, %1490, meta[relay.Constant][69] /* ty=Tensor[(2925), bool] */)
  };
  %1491(%var_4225, %var_4226, %var_4227) /* ty=(Tensor[(12, 12, 11), int8], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(468), float32], Tensor[(13, 15, 15), bool], Tensor[(2925), bool]) */
}

def @func_6348() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(288), float32]) {
  %1492 = @func_3461() /* ty=(Tensor[(468), float32], Tensor[(468), float32]) */;
  %1493 = @func_4998() /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32]) */;
  %1494 = @func_5852() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float32], Tensor[(15, 15, 10), float64], Tensor[(4, 4, 7), bool], Tensor[(288), float32]) */;
  %1495 = @func_5989() /* ty=Tensor[(468), float32] */;
  %1496 = %1492.1;
  %1497 = %1493.0;
  %1498 = %1494.7;
  (%1495, %1496, %1497, %1498)
}

def @func_9824() -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
  %1504 = fn () -> (Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) {
    %1499 = @func_4917() /* ty=(Tensor[(468), float32],) */;
    %1500 = @func_9504() /* ty=(Tensor[(468), float32],) */;
    %1501 = @func_5989() /* ty=Tensor[(468), float32] */;
    %1502 = %1499.0;
    %1503 = %1500.0;
    (%1501, %1502, %1503)
  };
  %1504() /* ty=(Tensor[(468), float32], Tensor[(468), float32], Tensor[(468), float32]) */
}

def @func_6240(%var_6238: Tensor[(315), float64]) -> (Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) {
  @func_6237(%var_6238) /* ty=(Tensor[(468), float32], Tensor[(288), float32], Tensor[(468), float32], Tensor[(5, 585), bool], Tensor[(315), float64]) */
}

def @func_11269() -> (Tensor[(4, 28), float64], Tensor[(468), float32]) {
  @func_11267() /* ty=(Tensor[(4, 28), float64], Tensor[(468), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen620/build/output.py:4367: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen620/build/output.py", line 4372, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_acos_kernel0(float* __restrict__ T_acos, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 4) + (((int)threadIdx.x) >> 8)) < 9) {
    if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 144) {
      if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2304) {
        T_acos[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = acosf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
      }
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

